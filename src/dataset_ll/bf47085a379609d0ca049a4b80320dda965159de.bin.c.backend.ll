source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_e9bc.14 = constant i32 -382906384
@global_var_1828c.17 = constant [4 x i8] c"GET\00"
@global_var_18290.19 = constant i32 47
@global_var_130b4.22 = constant i32 -382910336
@global_var_18284.24 = constant i32 32
@global_var_1825c.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_18274.28 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_18280.30 = constant [3 x i8] c"\0D\0A\00"
@global_var_18294.32 = constant [9 x i8] c"Cookie: \00"
@global_var_182a0.34 = constant [3 x i8] c"; \00"
@global_var_182ac.36 = constant i32 59
@global_var_182a4.38 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_182b0.40 = constant [5 x i8] c"http\00"
@global_var_182b8.42 = constant [5 x i8] c"url=\00"
@global_var_182c0.44 = constant [5 x i8] c"POST\00"
@global_var_182c8.46 = constant i32 39
@global_var_12478.47 = constant i32 -439279616
@global_var_18af0.49 = constant i32 61
@global_var_14b78.50 = constant i32 -382909968
@global_var_21428.54 = global i32 0
@global_var_d208.60 = constant i32 -382906384
@global_var_d674.62 = constant i32 -382906384
@global_var_c97c.64 = constant i32 -382906384
@global_var_c2a4.66 = constant i32 -382906384
@global_var_bb80.68 = constant i32 -382906384
@global_var_b354.70 = constant i32 -382906384
@global_var_acf4.72 = constant i32 -382906384
@global_var_a62c.74 = constant i32 -382906384
@global_var_8190.76 = constant i32 -382906384
@global_var_234b4.78 = global i32 0
@global_var_b350.79 = constant i32 144564
@global_var_2142c.89 = global i32 0
@global_var_234b8.93 = local_unnamed_addr global i32 0
@global_var_21430.95 = global i32 0
@global_var_234c0.102 = local_unnamed_addr global i32 0
@global_var_234be.103 = local_unnamed_addr global i32 0
@global_var_21434.108 = global i32 0
@global_var_182cc.115 = constant i32 10
@global_var_182d0.124 = constant i32 16777216
@global_var_2143c.126 = global i32 0
@global_var_21448.128 = global i32 0
@global_var_21440.130 = global i32 0
@global_var_21444.132 = global i32 0
@global_var_234d4.142 = global i32 0
@global_var_21480.144 = global i32 0
@global_var_2144c.146 = global i32 0
@global_var_21478.148 = global i32 0
@global_var_234cc.155 = global i32 0
@global_var_234d0.157 = global i32 0
@global_var_21452.160 = local_unnamed_addr global i32 0
@global_var_21464.162 = global i32 0
@global_var_21458.164 = local_unnamed_addr global i32 0
@global_var_21454.165 = local_unnamed_addr global i32 0
@global_var_21459.166 = local_unnamed_addr global i32 0
@global_var_21472.169 = local_unnamed_addr global i32 0
@global_var_182a8.171 = constant i32 0
@global_var_1864c.173 = constant [5 x i8] c"PMMV\00"
@global_var_187f0.175 = constant [6 x i8] c"CFOKL\00"
@global_var_182d8.177 = constant i32 387006810
@global_var_182e0.179 = constant [6 x i8] c"TKXZT\00"
@global_var_182e8.181 = constant i32 437918234
@global_var_182f0.183 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_182f8.185 = constant [8 x i8] c"FGDCWNV\00"
@global_var_18300.187 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1830c.189 = constant i32 370216979
@global_var_18314.191 = constant i32 269555223
@global_var_1831c.193 = constant [8 x i8] c"QWRRMPV\00"
@global_var_18728.195 = constant i32 370216979
@global_var_18324.197 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_18330.199 = constant i32 370216979
@global_var_18338.201 = constant [5 x i8] c"WQGP\00"
@global_var_18340.203 = constant [5 x i8] c"RCQQ\00"
@global_var_18348.205 = constant i32 1263486531
@global_var_1849c.207 = constant i32 320017171
@global_var_18354.209 = constant [9 x i8] c"QOACFOKL\00"
@global_var_18360.211 = constant i32 336860180
@global_var_18368.213 = constant i32 324292169
@global_var_18370.215 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_18380.217 = constant [7 x i8] c"OGKLQO\00"
@global_var_18388.219 = constant [4 x i8] c"@WJ\00"
@global_var_1838c.221 = constant [7 x i8] c"RW@NKA\00"
@global_var_18394.223 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1839c.225 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_183a8.227 = constant [6 x i8] c"EWGQV\00"
@global_var_183b0.229 = constant i32 1263486531
@global_var_183b8.231 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_183c8.233 = constant [5 x i8] c"W@LV\00"
@global_var_183d0.235 = constant i32 324292169
@global_var_183d8.237 = constant i32 390551160
@global_var_183e0.239 = constant i32 387009354
@global_var_183e8.241 = constant [6 x i8] c"HT@XF\00"
@global_var_183f0.243 = constant [5 x i8] c"CLIM\00"
@global_var_183f8.245 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_18400.247 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_1840c.249 = constant i32 1867011861
@global_var_1841c.251 = constant i32 1867011861
@global_var_1842c.253 = constant [7 x i8] c"Q[QVGO\00"
@global_var_18434.255 = constant [5 x i8] c"KIU@\00"
@global_var_1843c.257 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_18448.259 = constant [8 x i8] c"PGCNVGI\00"
@global_var_18450.261 = constant i32 303174162
@global_var_1845c.263 = constant i32 303174162
@global_var_18464.265 = constant i32 320017171
@global_var_1846c.267 = constant i32 1263486531
@global_var_18304.269 = constant [5 x i8] c"VGAJ\00"
@global_var_18478.271 = constant i32 454761243
@global_var_18484.273 = constant [6 x i8] c"oGKLQ\00"
@global_var_1848c.275 = constant [4 x i8] c"hta\00"
@global_var_18490.277 = constant i32 319820054
@global_var_18498.279 = constant i32 320017171
@global_var_184a4.281 = constant [7 x i8] c"WVQVCP\00"
@global_var_184ac.283 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_184b8.285 = constant i32 1263486531
@global_var_184c0.287 = constant i32 303059531
@global_var_184c8.289 = constant i32 303125067
@global_var_184d0.291 = constant i32 303452747
@global_var_184d8.293 = constant [7 x i8] c"@KLVGA\00"
@global_var_184e0.295 = constant [8 x i8] c"VQWLCOK\00"
@global_var_184e8.297 = constant i32 323043395
@global_var_184f0.299 = constant i32 319951888
@global_var_184f8.301 = constant [7 x i8] c"Q[LLGV\00"
@global_var_18500.303 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_1850c.305 = constant [6 x i8] c"SWQGP\00"
@global_var_18604.307 = constant i32 1118227
@global_var_18514.309 = constant i32 370216979
@global_var_1851c.311 = constant [8 x i8] c"oCLCEGP\00"
@global_var_18524.313 = constant [4 x i8] c"CFO\00"
@global_var_18528.315 = constant [8 x i8] c"OCLCEGP\00"
@global_var_18530.317 = constant [7 x i8] c"DPKGLF\00"
@global_var_18538.319 = constant [4 x i8] c"CRA\00"
@global_var_1853c.321 = constant i32 1263421261
@global_var_18548.323 = constant [5 x i8] c"VKLK\00"
@global_var_18550.325 = constant [7 x i8] c"CQAGLF\00"
@global_var_18558.327 = constant i32 1265504102
@global_var_18560.329 = constant [6 x i8] c"FNKLI\00"
@global_var_18568.331 = constant [6 x i8] c"NMEKL\00"
@global_var_18570.333 = constant i32 1296912387
@global_var_18578.335 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_18584.337 = constant [7 x i8] c"PMWVGP\00"
@global_var_1858c.339 = constant [8 x i8] c"LGVMRKC\00"
@global_var_18594.341 = constant [7 x i8] c"Q[QCFO\00"
@global_var_1859c.343 = constant [8 x i8] c"CLKAWQV\00"
@global_var_185a4.345 = constant [6 x i8] c"FG@WE\00"
@global_var_185ac.347 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_185b8.349 = constant [5 x i8] c"GAJM\00"
@global_var_185c0.351 = constant [5 x i8] c"FKCE\00"
@global_var_185c8.353 = constant [7 x i8] c"QUKVAJ\00"
@global_var_18598.355 = constant [3 x i8] c"FO\00"
@global_var_185d0.357 = constant [7 x i8] c"VGNLGV\00"
@global_var_185d8.359 = constant i32 370216979
@global_var_185e4.361 = constant [5 x i8] c"VMMP\00"
@global_var_185ec.363 = constant [7 x i8] c"ACNTKL\00"
@global_var_185f4.365 = constant i32 370216979
@global_var_18600.367 = constant i32 1447906640
@global_var_18608.369 = constant i32 1447512643
@global_var_18614.371 = constant i32 454302484
@global_var_1861c.373 = constant i32 387400530
@global_var_18628.375 = constant i32 319885331
@global_var_18630.377 = constant i32 1986882928
@global_var_18638.379 = constant [7 x i8] c"CNRKLG\00"
@global_var_18640.381 = constant i32 457659992
@global_var_18648.383 = constant i32 303043392
@global_var_18654.385 = constant [9 x i8] c"rcqqumpf\00"
@global_var_18660.387 = constant [6 x i8] c"cfokl\00"
@global_var_18668.389 = constant [8 x i8] c"LGVEGCP\00"
@global_var_18670.391 = constant i32 303257172
@global_var_18678.393 = constant [4 x i8] c"K@O\00"
@global_var_1867c.395 = constant [7 x i8] c"T[CVVC\00"
@global_var_18684.397 = constant [6 x i8] c"cFOKL\00"
@global_var_1868c.399 = constant i32 373380675
@global_var_18694.401 = constant [7 x i8] c"OKAPMQ\00"
@global_var_1869c.403 = constant [6 x i8] c"QGVWR\00"
@global_var_186a4.405 = constant [8 x i8] c"AMOACQV\00"
@global_var_186ac.407 = constant [4 x i8] c"RMQ\00"
@global_var_186b0.409 = constant [4 x i8] c"UUU\00"
@global_var_186b4.411 = constant i32 303176208
@global_var_186bc.413 = constant [5 x i8] c"w`lv\00"
@global_var_186c4.415 = constant [7 x i8] c"LGVOCL\00"
@global_var_186cc.417 = constant [6 x i8] c"Cfokl\00"
@global_var_186d4.419 = constant [7 x i8] c"FCGOML\00"
@global_var_186dc.421 = constant [5 x i8] c"FGOM\00"
@global_var_186e4.423 = constant [6 x i8] c"CPPKQ\00"
@global_var_186ec.425 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_186f4.427 = constant [7 x i8] c"ANKGLV\00"
@global_var_186fc.429 = constant [6 x i8] c"AKQAM\00"
@global_var_18704.431 = constant [6 x i8] c"akqam\00"
@global_var_1870c.433 = constant [6 x i8] c"QWRGP\00"
@global_var_18714.435 = constant [5 x i8] c"QWPV\00"
@global_var_1871c.437 = constant i32 370611221
@global_var_184b0.439 = constant [5 x i8] c"CFQN\00"
@global_var_18724.441 = constant i32 1313949251
@global_var_18730.443 = constant [7 x i8] c"RCVPMN\00"
@global_var_18738.445 = constant i32 387007823
@global_var_18740.447 = constant [7 x i8] c"OGPNKL\00"
@global_var_18748.449 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_18754.451 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_18760.453 = constant [7 x i8] c"lGVkaQ\00"
@global_var_18768.455 = constant i32 1179729984
@global_var_18774.457 = constant [5 x i8] c"lwnn\00"
@global_var_1877c.459 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_18788.461 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_18794.463 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_187a0.465 = constant i32 269488144
@global_var_187ac.467 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_187b8.469 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_187c4.471 = constant [8 x i8] c"OGOMVGA\00"
@global_var_187cc.473 = constant i32 1464562030
@global_var_187dc.475 = constant i32 2003334929
@global_var_187ec.477 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_187f8.479 = constant i32 1196513135
@global_var_18804.481 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_18810.483 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_1881c.485 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_18828.487 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_18834.489 = constant i32 1279478337
@global_var_18840.491 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_18850.493 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_18860.495 = constant [7 x i8] c"EWGQV\22\00"
@global_var_18868.497 = constant i32 336675162
@global_var_18870.499 = constant [9 x i8] c"FGDCWNV\22\00"
@global_var_1887c.501 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_18884.503 = constant [12 x i8] c"QWRGPTKQMP\22\00"
@global_var_18890.505 = constant i32 1178819416
@global_var_1889c.507 = constant [6 x i8] c"PMMV\22\00"
@global_var_2145c.508 = local_unnamed_addr global i32 0
@global_var_2145a.509 = local_unnamed_addr global i32 0
@global_var_21460.510 = local_unnamed_addr global i32 0
@global_var_21468.512 = local_unnamed_addr global i32 0
@global_var_21474.513 = local_unnamed_addr global i32 0
@global_var_f34c.521 = constant i32 -382910352
@global_var_188ab.524 = constant i32 2096127
@global_var_188a2.526 = constant i32 2095871
@global_var_234dc.533 = global i32 0
@global_var_188b0.540 = constant i32 39228
@global_var_234e4.541 = local_unnamed_addr global i32 0
@global_var_234e8.542 = local_unnamed_addr global i32 0
@global_var_188b4.544 = constant i32 55430
@global_var_234ec.545 = local_unnamed_addr global i32 0
@global_var_234f0.546 = local_unnamed_addr global i32 0
@global_var_188b8.548 = constant [20 x i8] c"jT^VXYsTZZXOnQ\5CDXO=\00"
@global_var_234f4.549 = local_unnamed_addr global i32 0
@global_var_234f8.550 = local_unnamed_addr global i32 0
@global_var_188cc.552 = constant i32 1380928786
@global_var_234fc.553 = local_unnamed_addr global i32 0
@global_var_23500.554 = local_unnamed_addr global i32 0
@global_var_188d4.556 = constant i32 1480939538
@global_var_23504.557 = local_unnamed_addr global i32 0
@global_var_23508.558 = local_unnamed_addr global i32 0
@global_var_188dc.560 = constant i32 1029266194
@global_var_23510.561 = local_unnamed_addr global i32 0
@global_var_2350c.562 = local_unnamed_addr global i32 0
@global_var_188e4.564 = constant i32 1380928786
@global_var_23514.565 = local_unnamed_addr global i32 0
@global_var_23518.566 = local_unnamed_addr global i32 0
@global_var_188f4.568 = constant i32 1297895442
@global_var_2351c.569 = local_unnamed_addr global i32 0
@global_var_23520.570 = local_unnamed_addr global i32 0
@global_var_188fc.572 = constant i32 1548307986
@global_var_23524.573 = local_unnamed_addr global i32 0
@global_var_23528.574 = local_unnamed_addr global i32 0
@global_var_18908.576 = constant i32 1414749203
@global_var_2352c.577 = local_unnamed_addr global i32 0
@global_var_23530.578 = local_unnamed_addr global i32 0
@global_var_18910.580 = constant i32 1380928786
@global_var_23534.581 = local_unnamed_addr global i32 0
@global_var_23538.582 = local_unnamed_addr global i32 0
@global_var_18924.584 = constant i32 1380928786
@global_var_2353c.585 = local_unnamed_addr global i32 0
@global_var_23540.586 = local_unnamed_addr global i32 0
@global_var_18934.588 = constant i32 1920627327
@global_var_23544.589 = local_unnamed_addr global i32 0
@global_var_23548.590 = local_unnamed_addr global i32 0
@global_var_18940.592 = constant i32 1581864978
@global_var_2354c.593 = local_unnamed_addr global i32 0
@global_var_23550.594 = local_unnamed_addr global i32 0
@global_var_18954.596 = constant i32 1599867994
@global_var_23558.597 = local_unnamed_addr global i32 0
@global_var_23554.598 = local_unnamed_addr global i32 0
@global_var_1896c.600 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_2355c.601 = local_unnamed_addr global i32 0
@global_var_23560.602 = local_unnamed_addr global i32 0
@global_var_18978.604 = constant i32 1264081170
@global_var_23564.605 = local_unnamed_addr global i32 0
@global_var_23568.606 = local_unnamed_addr global i32 0
@global_var_18988.608 = constant i32 1264081170
@global_var_2356c.609 = local_unnamed_addr global i32 0
@global_var_23570.610 = local_unnamed_addr global i32 0
@global_var_1899c.612 = constant i32 1264081170
@global_var_23574.613 = local_unnamed_addr global i32 0
@global_var_23578.614 = local_unnamed_addr global i32 0
@global_var_189b4.616 = constant i32 1264081170
@global_var_2357c.617 = local_unnamed_addr global i32 0
@global_var_23580.618 = local_unnamed_addr global i32 0
@global_var_189d0.620 = constant i32 1264081170
@global_var_23588.621 = local_unnamed_addr global i32 0
@global_var_23584.622 = local_unnamed_addr global i32 0
@global_var_189e0.624 = constant [7 x i8] c"NUXQQ=\00"
@global_var_2358c.625 = local_unnamed_addr global i32 0
@global_var_23590.626 = local_unnamed_addr global i32 0
@global_var_189e8.628 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_23594.629 = local_unnamed_addr global i32 0
@global_var_23598.630 = local_unnamed_addr global i32 0
@global_var_189f0.632 = constant [8 x i8] c"NDNIXP=\00"
@global_var_2359c.633 = local_unnamed_addr global i32 0
@global_var_235a0.634 = local_unnamed_addr global i32 0
@global_var_189f8.636 = constant [4 x i8] c"NU=\00"
@global_var_235a4.637 = local_unnamed_addr global i32 0
@global_var_235a8.638 = local_unnamed_addr global i32 0
@global_var_189fc.640 = constant i32 1398038290
@global_var_235ac.641 = local_unnamed_addr global i32 0
@global_var_235b0.642 = local_unnamed_addr global i32 0
@global_var_18a18.644 = constant i32 1449022538
@global_var_235b8.645 = local_unnamed_addr global i32 0
@global_var_235b4.646 = local_unnamed_addr global i32 0
@global_var_18a38.648 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_235bc.649 = local_unnamed_addr global i32 0
@global_var_235c0.650 = local_unnamed_addr global i32 0
@global_var_235c4.651 = local_unnamed_addr global i32 0
@global_var_235c8.652 = local_unnamed_addr global i32 0
@global_var_18a44.654 = constant [6 x i8] c"RZTS=\00"
@global_var_235cc.655 = local_unnamed_addr global i32 0
@global_var_235d0.656 = local_unnamed_addr global i32 0
@global_var_18a4c.658 = constant [7 x i8] c"XSIXO=\00"
@global_var_235d4.659 = local_unnamed_addr global i32 0
@global_var_235d8.660 = local_unnamed_addr global i32 0
@global_var_18a54.662 = constant i32 1213361769
@global_var_235dc.663 = local_unnamed_addr global i32 0
@global_var_18a6c.665 = constant i32 1581864978
@global_var_235e4.666 = local_unnamed_addr global i32 0
@global_var_18a80.668 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_235ec.669 = local_unnamed_addr global i32 0
@global_var_18a8c.671 = constant i32 1397969534
@global_var_235f4.672 = local_unnamed_addr global i32 0
@global_var_18de0.674 = constant i32 1482579580
@global_var_235fc.675 = local_unnamed_addr global i32 0
@global_var_18e34.677 = constant i32 1482579580
@global_var_23604.678 = local_unnamed_addr global i32 0
@global_var_18aa4.680 = constant i32 1230197374
@global_var_2360c.681 = local_unnamed_addr global i32 0
@global_var_18ad8.683 = constant i32 2118735950
@global_var_23614.684 = local_unnamed_addr global i32 0
@global_var_18ae8.686 = constant i32 1331386447
@global_var_2361c.687 = local_unnamed_addr global i32 0
@global_var_18af4.689 = constant i32 1549685329
@global_var_23624.690 = local_unnamed_addr global i32 0
@global_var_18b00.692 = constant i32 273242190
@global_var_2362c.693 = local_unnamed_addr global i32 0
@global_var_18b10.695 = constant i32 1230197342
@global_var_23634.696 = local_unnamed_addr global i32 0
@global_var_18b24.698 = constant i32 1398558537
@global_var_2363c.699 = local_unnamed_addr global i32 0
@global_var_18b38.701 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_23644.702 = local_unnamed_addr global i32 0
@global_var_18a98.704 = constant i32 1297635414
@global_var_2364c.705 = local_unnamed_addr global i32 0
@global_var_18b44.707 = constant i32 1397969502
@global_var_23654.708 = local_unnamed_addr global i32 0
@global_var_18b54.710 = constant i32 1263491150
@global_var_2365c.711 = local_unnamed_addr global i32 0
@global_var_18b68.713 = constant i32 1263491150
@global_var_23664.714 = local_unnamed_addr global i32 0
@global_var_18b84.716 = constant i32 1413960304
@global_var_2366c.717 = local_unnamed_addr global i32 0
@global_var_18bf8.719 = constant i32 1413960304
@global_var_23674.720 = local_unnamed_addr global i32 0
@global_var_18c6c.722 = constant i32 1413960304
@global_var_2367c.723 = local_unnamed_addr global i32 0
@global_var_18cbc.725 = constant i32 1413960304
@global_var_23684.726 = local_unnamed_addr global i32 0
@global_var_18d30.728 = constant i32 1413960304
@global_var_2368c.729 = local_unnamed_addr global i32 0
@global_var_18da4.731 = constant i32 1264081170
@global_var_23694.732 = local_unnamed_addr global i32 0
@global_var_2369c.733 = local_unnamed_addr global i32 0
@global_var_18dbc.735 = constant i32 1208552964
@global_var_236a4.736 = local_unnamed_addr global i32 0
@global_var_18dd4.738 = constant [12 x i8] c"YKOnI\5COIHM=\00"
@global_var_236ac.739 = local_unnamed_addr global i32 0
@global_var_13178.745 = constant i32 -443088884
@global_var_214a0.762 = global i32 0
@global_var_135ac.764 = constant i32 -456978431
@global_var_236b4.777 = global i32 0
@global_var_13b68.783 = constant i32 -478871519
@global_var_145e8.797 = constant i32 -478805983
@global_var_149c4.806 = constant i32 -382906384
@global_var_c420.809 = constant i32 -443744192
@global_var_21484.815 = local_unnamed_addr global i32 0
@global_var_16250.817 = constant i32 -509591552
@global_var_21488.824 = local_unnamed_addr global i32 0
@global_var_16c84.827 = constant i32 -382909968
@global_var_15028.828 = constant i32 -494075872
@global_var_1307c.829 = constant i32 -382910336
@global_var_18e70.833 = constant [11 x i8] c"/proc/stat\00"
@global_var_18e7c.838 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_18e8c.840 = constant [10 x i8] c"processor\00"
@global_var_18eb0.842 = constant i32 604672
@global_var_151e8.845 = constant i32 -369098421
@global_var_b9e8.856 = constant i32 -442695644
@global_var_21498.859 = local_unnamed_addr global i32 0
@global_var_2149c.861 = local_unnamed_addr global i32 0
@global_var_18eb4.864 = constant [10 x i8] c"/dev/null\00"
@global_var_14df4.865 = constant i32 -442543860
@global_var_16be8.870 = constant i32 -382910352
@global_var_135e0.875 = constant i32 -369094746
@global_var_15bb4.888 = constant i32 -335545128
@global_var_1607c.894 = constant i32 -382909456
@global_var_234b0.897 = local_unnamed_addr global i32 0
@global_var_18e94.905 = constant i32 114
@global_var_170a8.910 = constant i32 -382906384
@global_var_16b88.928 = constant i32 -509607926
@global_var_191c0.933 = constant i32 0
@global_var_18038.934 = constant i32 -382909968
@global_var_16ecc.944 = constant i32 -509607928
@global_var_9f10.967 = constant [3 x i8] c"X!\00"
@global_var_21408.2 = external global i8*
@global_var_21424.52 = external global i8*
@global_var_21425.58 = global i8 0
@global_var_234bc.100 = global i16* null
@1 = internal constant [4 x i8] c"h\12\02\00"
@global_var_21438.119 = external global i8*
@global_var_2147c.150 = global i16* null
@global_var_21450.159 = external global i8*
@global_var_21470.163 = local_unnamed_addr global i8 0
@global_var_21466.167 = local_unnamed_addr global i16 0
@global_var_21471.168 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_8098)
  %v31_80a0 = load i32, i32* @r0, align 4
  ret i32 %v31_80a0
}

define i32 @function_80b0(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_21408.2 to i32), i32* %r4.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_21408.2 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %dec_label_pc_80c4, label %dec_label_pc_80e0

dec_label_pc_80c4:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80d4 = call i32 @function_80ec()
  %v2_80dc = load i32, i32* %r4.global-to-local, align 4
  %v3_80dc = inttoptr i32 %v2_80dc to i8*
  store i8 1, i8* %v3_80dc, align 1
  %v2_80e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80e0

dec_label_pc_80e0:                                ; preds = %entry, %dec_label_pc_80c4
  %v2_80e0 = phi i32 [ %v2_80e0.pre, %dec_label_pc_80c4 ], [ %v3_80b0, %entry ]
  %.0 = phi i32 [ %v3_80d4, %dec_label_pc_80c4 ], [ undef, %entry ]
  store i32 %v2_80e0, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i8** @global_var_21408.2, { 1, 0 }
  uselistorder label %dec_label_pc_80e0, { 1, 0 }
}

define i32 @function_80ec() local_unnamed_addr {
dec_label_pc_80ec:
  %v0_80f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_80f0, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_80ec
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_80ec
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8118 = load i32, i32* inttoptr (i32 135652 to i32*), align 4
  %v2_811c = icmp eq i32 %v2_8118, 0
  br i1 %v2_811c, label %dec_label_pc_8134, label %dec_label_pc_8124

dec_label_pc_8124:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8134

dec_label_pc_8134:                                ; preds = %bb3, %dec_label_pc_8124
  ret i32 135652

; uselistorder directives
  uselistorder label %dec_label_pc_8134, { 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_815c = ptrtoint i32* %stack_var_4 to i32
  %v8_817c = call i32 @function_15924(i32 ptrtoint (i32* @global_var_e9bc.14 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 98876, i32 %arg1, i32 %v4_815c)
  %v0_8180 = call i32 @function_14df4()
  ret i32 %v0_8180
}

define i32 @function_8190(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8190:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_8190 = load i32, i32* @r4, align 4
  %v6_8190 = load i32, i32* @r5, align 4
  %v18_8190 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81bc = inttoptr i32 %arg4 to i32*
  %v6_81bc = call i32 @function_9f20(i32 %arg3, i32* %v5_81bc, i32 20, i32 0, i32 %arg2)
  %v0_81c0 = load i32, i32* @r5, align 4
  store i32 %v0_81c0, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_81cc = load i32, i32* @r4, align 4
  store i32 %v0_81cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1828c.17 to i32), i32* %r3.global-to-local, align 4
  %v6_81d4 = inttoptr i32 %v0_81c0 to i32*
  %v7_81d4 = call i32 @function_9f20(i32 %v0_81cc, i32* %v6_81d4, i32 19, i32 ptrtoint ([4 x i8]* @global_var_1828c.17 to i32), i32 %v6_81bc)
  %v0_81d8 = load i32, i32* @r5, align 4
  store i32 %v0_81d8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_81d4, i32* @sb, align 4
  %v0_81e8 = load i32, i32* @r4, align 4
  store i32 %v0_81e8, i32* %r0.global-to-local, align 4
  %v5_81ec = inttoptr i32 %v0_81d8 to i32*
  %v6_81ec = call i32 @function_9f20(i32 %v0_81e8, i32* %v5_81ec, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_81f0 = load i32, i32* @r5, align 4
  store i32 %v0_81f0, i32* %r1.global-to-local, align 4
  store i32 %v6_81ec, i32* @sl, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  %v0_81fc = load i32, i32* @r4, align 4
  store i32 %v0_81fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18290.19 to i32), i32* %r3.global-to-local, align 4
  %v5_8204 = inttoptr i32 %v0_81f0 to i32*
  %v6_8204 = call i32 @function_9f20(i32 %v0_81fc, i32* %v5_8204, i32 21, i32 ptrtoint (i32* @global_var_18290.19 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8208 = load i32, i32* @r5, align 4
  store i32 %v0_8208, i32* %r1.global-to-local, align 4
  store i32 %v6_8204, i32* @r8, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  %v0_8214 = load i32, i32* @r4, align 4
  store i32 %v0_8214, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_821c = inttoptr i32 %v0_8208 to i32*
  %v5_821c = call i32 @function_9fe8(i32 %v0_8214, i32* %v4_821c, i32 23, i32 1)
  %v0_8220 = load i32, i32* @r5, align 4
  store i32 %v0_8220, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_821c, i32* @r6, align 4
  %v0_8230 = load i32, i32* @r4, align 4
  store i32 %v0_8230, i32* %r0.global-to-local, align 4
  %v4_8234 = inttoptr i32 %v0_8220 to i32*
  %v5_8234 = call i32 @function_9fe8(i32 %v0_8230, i32* %v4_8234, i32 7, i32 80)
  %v2_823c = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8244 = mul i32 %v5_8234, 65536
  store i32 %v3_8244, i32* %r3.global-to-local, align 4
  %tmp168 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  store i32 10241, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8258 = urem i32 %v5_8234, 65536
  store i32 %v3_8258, i32* @r7, align 4
  %v3_825c = call i32 @function_13530(i8* %tmp168, i32 0)
  store i32 %v3_825c, i32* %r0.global-to-local, align 4
  %v0_8260 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8260 = icmp eq i32 %v0_8260, 0
  store i1 %v2_8260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8260, label %.thread14, label %bb

bb:                                               ; preds = %dec_label_pc_8190
  %v1_8264 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_8264 = icmp eq i32 %v1_8264, 0
  store i1 %v3_8264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8264, label %bb169, label %dec_label_pc_8284

.thread14:                                        ; preds = %dec_label_pc_8190
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8274

bb169:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8274

dec_label_pc_8274:                                ; preds = %bb169, %dec_label_pc_82a4, %.thread14, %dec_label_pc_8294, %dec_label_pc_8284
  %v1_8280 = phi i32 [ %v2_82a8, %dec_label_pc_82a4 ], [ %v3_825c, %.thread14 ], [ %v3_825c, %bb169 ], [ %v2_8298, %dec_label_pc_8294 ], [ %v2_8288, %dec_label_pc_8284 ]
  store i32 %v3_8190, i32* %r4.global-to-local, align 4
  store i32 %v6_8190, i32* %r5.global-to-local, align 4
  store i32 %v18_8190, i32* %sb.global-to-local, align 4
  ret i32 %v1_8280

dec_label_pc_8284:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_8260, i32* %r0.global-to-local, align 4
  %v1_8288 = inttoptr i32 %v0_8260 to i8*
  %v2_8288 = call i32 @function_12450(i8* %v1_8288)
  store i32 %v2_8288, i32* %r0.global-to-local, align 4
  %v2_828c = icmp ugt i32 %v2_8288, 254
  store i1 %v2_828c, i1* %cpsr_c.global-to-local, align 1
  %v7_828c = icmp eq i32 %v2_8288, 255
  store i1 %v7_828c, i1* %cpsr_z.global-to-local, align 1
  %v8_8290 = icmp sgt i32 %v2_8288, 255
  br i1 %v8_8290, label %dec_label_pc_8274, label %dec_label_pc_8294

dec_label_pc_8294:                                ; preds = %dec_label_pc_8284
  %v0_8294 = load i32, i32* @sl, align 4
  store i32 %v0_8294, i32* %r0.global-to-local, align 4
  %v1_8298 = inttoptr i32 %v0_8294 to i8*
  %v2_8298 = call i32 @function_12450(i8* %v1_8298)
  store i32 %v2_8298, i32* %r0.global-to-local, align 4
  %v2_829c = icmp ugt i32 %v2_8298, 126
  store i1 %v2_829c, i1* %cpsr_c.global-to-local, align 1
  %v7_829c = icmp eq i32 %v2_8298, 127
  store i1 %v7_829c, i1* %cpsr_z.global-to-local, align 1
  %v8_82a0 = icmp sgt i32 %v2_8298, 127
  br i1 %v8_82a0, label %dec_label_pc_8274, label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8294
  %v0_82a4 = load i32, i32* @sb, align 4
  store i32 %v0_82a4, i32* %r0.global-to-local, align 4
  %v1_82a8 = inttoptr i32 %v0_82a4 to i8*
  %v2_82a8 = call i32 @function_12450(i8* %v1_82a8)
  store i32 %v2_82a8, i32* %r0.global-to-local, align 4
  %v2_82ac = icmp ugt i32 %v2_82a8, 8
  store i1 %v2_82ac, i1* %cpsr_c.global-to-local, align 1
  %v7_82ac = icmp eq i32 %v2_82a8, 9
  store i1 %v7_82ac, i1* %cpsr_z.global-to-local, align 1
  %v7_82b0 = icmp sgt i32 %v2_82a8, 9
  br i1 %v7_82b0, label %dec_label_pc_8274, label %bb170

bb170:                                            ; preds = %dec_label_pc_82a4
  %v10_82b0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v8_82b4 = load i32, i32* @r4, align 4
  %v10_82b4 = add i32 %v10_82b0, 364
  %v11_82b4 = inttoptr i32 %v10_82b4 to i32*
  store i32 %v8_82b4, i32* %v11_82b4, align 4
  br label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %bb170, %bb174
  %v0_82bc = load i32, i32* @sb, align 4
  store i32 %v0_82bc, i32* %r0.global-to-local, align 4
  %v1_82c0 = inttoptr i32 %v0_82bc to i8*
  %v2_82c0 = call i32 @function_12450(i8* %v1_82c0)
  store i32 %v2_82c0, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_82c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_82c8, i32* %ip.global-to-local, align 4
  %v3_82cc = icmp uge i32 %v2_82c0, %v3_82c8
  store i1 %v3_82cc, i1* %cpsr_c.global-to-local, align 1
  %v9_82cc = icmp eq i32 %v2_82c0, %v3_82c8
  store i1 %v9_82cc, i1* %cpsr_z.global-to-local, align 1
  %v7_82d0 = icmp sgt i32 %v2_82c0, %v3_82c8
  br i1 %v7_82d0, label %dec_label_pc_82d4, label %dec_label_pc_8300

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82bc
  %v0_82d4 = load i32, i32* @sb, align 4
  %v2_82d4 = add i32 %v0_82d4, %v3_82c8
  %v3_82d4 = inttoptr i32 %v2_82d4 to i8*
  %v4_82d4 = load i8, i8* %v3_82d4, align 1
  %v6_82d4 = zext i8 %v4_82d4 to i32
  %v1_82d8 = add nsw i32 %v6_82d4, -32
  store i32 %v1_82d8, i32* %r2.global-to-local, align 4
  %v1_82dc = add nsw i32 %v6_82d4, -97
  store i32 %v1_82dc, i32* %r3.global-to-local, align 4
  %v2_82e0 = icmp ugt i32 %v1_82dc, 24
  store i1 %v2_82e0, i1* %cpsr_c.global-to-local, align 1
  %v7_82e0 = icmp eq i32 %v1_82dc, 25
  store i1 %v7_82e0, i1* %cpsr_z.global-to-local, align 1
  %v2_82e4 = xor i1 %v2_82e0, true
  %v3_82e4 = or i1 %v7_82e0, %v2_82e4
  br i1 %v3_82e4, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_82d4
  %v5_82e4 = trunc i32 %v1_82d8 to i8
  store i8 %v5_82e4, i8* %v3_82d4, align 1
  %v0_82e8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_82e8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_82d4, %bb171
  %v1_82ec = phi i1 [ %v2_82e0, %dec_label_pc_82d4 ], [ %v1_82e8.pre, %bb171 ]
  %v0_82ec = phi i1 [ false, %dec_label_pc_82d4 ], [ %v0_82e8.pre, %bb171 ]
  %v2_82e8 = xor i1 %v1_82ec, true
  %v3_82e8 = or i1 %v0_82ec, %v2_82e8
  br i1 %v3_82e8, label %bb173, label %._crit_edge

._crit_edge:                                      ; preds = %bb172
  %v0_82f4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb174

bb173:                                            ; preds = %bb172
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v7_82ec = load i32, i32* %v11_82b4, align 4
  store i32 %v7_82ec, i32* %ip.global-to-local, align 4
  br label %bb174

bb174:                                            ; preds = %._crit_edge, %bb173
  %v0_82f4 = phi i32 [ %v0_82f4.pre, %._crit_edge ], [ %v7_82ec, %bb173 ]
  store i32 %v10_82b0, i32* @lr, align 4
  %v1_82f4 = add i32 %v0_82f4, 1
  store i32 %v1_82f4, i32* %ip.global-to-local, align 4
  store i32 %v1_82f4, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82bc

dec_label_pc_8300:                                ; preds = %dec_label_pc_82bc
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_8304 = call i32 @function_11a84(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_830c = call i32 @function_11a84(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_8314 = call i32 @function_11a84(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_831c = call i32 @function_11a84(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_8324 = call i32 @function_11a84(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_832c = call i32 @function_11a84(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_8334 = call i32 @function_11a84(i32 45)
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_833c = call i32 @function_11a84(i32 46)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @function_11a84(i32 47)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @function_11a84(i32 48)
  store i32 %v1_834c, i32* %r0.global-to-local, align 4
  %v0_8350 = load i32, i32* @r6, align 4
  %v3_8350 = icmp ugt i32 %v0_8350, 511
  store i1 %v3_8350, i1* %cpsr_c.global-to-local, align 1
  %v8_8350 = icmp eq i32 %v0_8350, 512
  store i1 %v8_8350, i1* %cpsr_z.global-to-local, align 1
  %v5_8354 = icmp slt i32 %v0_8350, 512
  br i1 %v5_8354, label %thread-pre-split, label %bb175

bb175:                                            ; preds = %dec_label_pc_8300
  store i32 512, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8300, %bb175
  %v0_835c = phi i32 [ 512, %bb175 ], [ %v0_8350, %dec_label_pc_8300 ]
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_8360 = call i32 @function_11a84(i32 49)
  store i32 %v0_835c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_8370 = call i32 @function_1442c(i32 %v0_835c, i32 3140)
  store i32 %v2_8370, i32* %r0.global-to-local, align 4
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8378 = icmp eq i32 %v0_835c, 0
  store i1 %v2_8378, i1* %cpsr_z.global-to-local, align 1
  %tmp176 = icmp slt i32 %v0_835c, 1
  br i1 %tmp176, label %dec_label_pc_84bc, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %thread-pre-split
  store i32 %v2_8370, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_83b0 = and i32 %arg1, 536870912
  %v3_83b0 = icmp ne i32 %v2_83b0, 0
  %v5_83b0 = mul i32 %arg1, 24
  %v2_83b4 = add i32 %v5_83b0, %arg2
  %v1_83b8 = add i32 %v2_83b4, 16
  %v2_83b8 = inttoptr i32 %v1_83b8 to i32*
  br label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_9e04, %dec_label_pc_8384
  %v1_8398 = phi i32 [ %v1_9e20, %dec_label_pc_9e04 ], [ %v2_8370, %dec_label_pc_8384 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_8398 = inttoptr i32 %v1_8398 to i32*
  store i32 -1, i32* %v2_8398, align 4
  %v3_839c = load i32, i32* @r5, align 4
  %v4_839c = add i32 %v3_839c, 4
  %v5_839c = inttoptr i32 %v4_839c to i8*
  store i8 0, i8* %v5_839c, align 1
  %v0_83a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_83a0, i32* %r0.global-to-local, align 4
  %v5_83a4 = call i32 @function_12c80(i32 %v0_83a0, i32 %arg1, i32 -1, i32 0)
  store i32 %v5_83a4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i1 %v3_83b0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_83b0, i32* %r3.global-to-local, align 4
  store i32 %v2_83b4, i32* @r6, align 4
  %v3_83b8 = load i32, i32* %v2_83b8, align 4
  store i32 %v3_83b8, i32* %r2.global-to-local, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 532
  store i32 %v1_83bc, i32* @lr, align 4
  store i32 %v1_83bc, i32* @r0, align 4
  %v0_83c4 = load i32, i32* @r8, align 4
  store i32 %v0_83c4, i32* %r1.global-to-local, align 4
  %v2_83c8 = add i32 %v0_83bc, 16
  %v3_83c8 = inttoptr i32 %v2_83c8 to i32*
  store i32 %v3_83b8, i32* %v3_83c8, align 4
  %v0_83cc = load i32, i32* @lr, align 4
  %v2_83d0 = inttoptr i32 %v1_83bc to i8*
  %v3_83d0 = call i32 @function_12478(i8* %v2_83d0, i32 %v0_83c4)
  store i32 %v3_83d0, i32* %r0.global-to-local, align 4
  %v0_83d4 = load i32, i32* @r5, align 4
  %v1_83d4 = add i32 %v0_83d4, 532
  %v2_83d4 = inttoptr i32 %v1_83d4 to i8*
  %v3_83d4 = load i8, i8* %v2_83d4, align 1
  %v4_83d4 = zext i8 %v3_83d4 to i32
  store i32 %v4_83d4, i32* %r3.global-to-local, align 4
  %v2_83d8 = icmp ugt i8 %v3_83d4, 46
  store i1 %v2_83d8, i1* %cpsr_c.global-to-local, align 1
  %v7_83d8 = icmp eq i8 %v3_83d4, 47
  store i1 %v7_83d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_83d8, label %dec_label_pc_8404, label %dec_label_pc_83e0

dec_label_pc_83e0:                                ; preds = %dec_label_pc_838c
  store i32 %v0_83cc, i32* %r0.global-to-local, align 4
  %v1_83e4 = inttoptr i32 %v0_83cc to i8*
  %v2_83e4 = call i32 @function_12450(i8* %v1_83e4)
  store i32 %v2_83e4, i32* @r2, align 4
  %v0_83ec = load i32, i32* @r5, align 4
  %v1_83f0 = add i32 %v0_83ec, 533
  store i32 %v1_83f0, i32* @r0, align 4
  store i32 %v0_83cc, i32* @r1, align 4
  %v3_83f8 = call i32 @function_135d0(i32 %v1_83f0, i32 %v0_83cc, i32 %v2_83e4)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8400 = load i32, i32* @r5, align 4
  %v3_8400 = add i32 %v2_8400, 532
  %v4_8400 = inttoptr i32 %v3_8400 to i8*
  store i8 47, i8* %v4_8400, align 1
  %v0_8408.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8404

dec_label_pc_8404:                                ; preds = %dec_label_pc_838c, %dec_label_pc_83e0
  %v0_8408 = phi i32 [ %v0_83d4, %dec_label_pc_838c ], [ %v0_8408.pre, %dec_label_pc_83e0 ]
  %v0_8404 = load i32, i32* @sb, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v1_8408 = add i32 %v0_8408, 1440
  store i32 %v1_8408, i32* @r0, align 4
  %v2_840c = inttoptr i32 %v1_8408 to i8*
  %v3_840c = call i32 @function_12478(i8* %v2_840c, i32 %v0_8404)
  %v0_8410 = load i32, i32* @r5, align 4
  %v0_8414 = load i32, i32* @sb, align 4
  store i32 %v0_8414, i32* %r1.global-to-local, align 4
  %v1_8418 = add i32 %v0_8410, 1431
  store i32 %v1_8418, i32* @r0, align 4
  %v2_841c = inttoptr i32 %v1_8418 to i8*
  %v3_841c = call i32 @function_12478(i8* %v2_841c, i32 %v0_8414)
  %v0_8420 = load i32, i32* @r5, align 4
  %v1_8424 = add i32 %v0_8420, 789
  store i32 %v1_8424, i32* @r0, align 4
  %v0_8428 = load i32, i32* @sl, align 4
  store i32 %v0_8428, i32* %r1.global-to-local, align 4
  %v2_842c = inttoptr i32 %v1_8424 to i8*
  %v3_842c = call i32 @function_12478(i8* %v2_842c, i32 %v0_8428)
  store i32 %v3_842c, i32* %r0.global-to-local, align 4
  %v0_8430 = load i32, i32* @r6, align 4
  %v1_8430 = add i32 %v0_8430, 20
  %v2_8430 = inttoptr i32 %v1_8430 to i8*
  %v3_8430 = load i8, i8* %v2_8430, align 1
  %v4_8430 = zext i8 %v3_8430 to i32
  store i32 %v4_8430, i32* %r3.global-to-local, align 4
  %v2_8434 = icmp ugt i8 %v3_8430, 30
  store i1 %v2_8434, i1* %cpsr_c.global-to-local, align 1
  %v7_8434 = icmp eq i8 %v3_8430, 31
  store i1 %v7_8434, i1* %cpsr_z.global-to-local, align 1
  %v2_8438 = xor i1 %v7_8434, true
  %v3_8438 = and i1 %v2_8434, %v2_8438
  br i1 %v3_8438, label %dec_label_pc_8480, label %dec_label_pc_843c

dec_label_pc_843c:                                ; preds = %dec_label_pc_8404
  %v1_843c = add i32 %v0_8430, 16
  %v2_843c = inttoptr i32 %v1_843c to i32*
  %v3_843c = load i32, i32* %v2_843c, align 4
  store i32 %v3_843c, i32* @r4, align 4
  %v0_8440 = call i32 @function_f190()
  store i32 %v0_8440, i32* %r0.global-to-local, align 4
  %v0_8444 = load i32, i32* @r4, align 4
  %v1_8444 = and i32 %v0_8444, 16711680
  store i32 %v1_8444, i32* %r1.global-to-local, align 4
  %v3_8448 = udiv i32 %v0_8444, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_844c = udiv i32 %v1_8444, 256
  %v5_844c = or i32 %v4_844c, %v3_8448
  store i32 %v5_844c, i32* %r2.global-to-local, align 4
  %v1_8450 = and i32 %v0_8444, 65280
  store i32 %v1_8450, i32* %r3.global-to-local, align 4
  %v0_8454 = load i32, i32* @r6, align 4
  %v1_8454 = add i32 %v0_8454, 20
  %v2_8454 = inttoptr i32 %v1_8454 to i8*
  %v3_8454 = load i8, i8* %v2_8454, align 1
  %v4_8454 = zext i8 %v3_8454 to i32
  %v5_845c = call i32 @llvm.bswap.i32(i32 %v0_8444)
  %v7_8460 = lshr i32 %v0_8440, %v4_8454
  %v8_8460 = add i32 %v7_8460, %v5_845c
  store i32 %v8_8460, i32* %r2.global-to-local, align 4
  %v1_8464 = and i32 %v8_8460, 16711680
  store i32 %v1_8464, i32* %r0.global-to-local, align 4
  %v1_8470 = and i32 %v8_8460, 65280
  store i32 %v1_8470, i32* %r1.global-to-local, align 4
  %v2_8478 = and i32 %v8_8460, 256
  %v3_8478 = icmp ne i32 %v2_8478, 0
  store i1 %v3_8478, i1* %cpsr_c.global-to-local, align 1
  %v5_8478 = call i32 @llvm.bswap.i32(i32 %v8_8460)
  store i32 %v5_8478, i32* %r3.global-to-local, align 4
  %v1_847c = load i32, i32* @r5, align 4
  %v2_847c = add i32 %v1_847c, 16
  %v3_847c = inttoptr i32 %v2_847c to i32*
  store i32 %v5_8478, i32* %v3_847c, align 4
  br label %dec_label_pc_8480

dec_label_pc_8480:                                ; preds = %dec_label_pc_8404, %dec_label_pc_843c
  %v0_8480 = call i32 @function_f190()
  %v3_848c = udiv i32 %v0_8480, 5
  store i32 %v3_848c, i32* %r2.global-to-local, align 4
  store i32 %v3_848c, i32* %r3.global-to-local, align 4
  %v2_8498 = sub i32 %v0_8480, %v3_848c
  store i32 %v2_8498, i32* %r0.global-to-local, align 4
  %v7_849c = icmp eq i32 %v2_8498, 4
  store i1 %v7_849c, i1* %cpsr_z.global-to-local, align 1
  %v5_84a0 = and i32 %v2_8498, 1073741824
  %v6_84a0 = icmp ne i32 %v5_84a0, 0
  store i1 %v6_84a0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_8498, label %dec_label_pc_9e04 [
    i32 0, label %dec_label_pc_9ec8
    i32 1, label %dec_label_pc_9e9c
    i32 2, label %dec_label_pc_9ef4
    i32 3, label %dec_label_pc_9ddc
    i32 4, label %dec_label_pc_9e5c
  ]

dec_label_pc_84bc:                                ; preds = %thread-pre-split
  %v0_84cc = load i32, i32* @r7, align 4
  %v1_84cc = and i32 %v0_84cc, 128
  %v2_84cc = icmp ne i32 %v1_84cc, 0
  store i1 %v2_84cc, i1* %cpsr_c.global-to-local, align 1
  %v3_84cc = udiv i32 %v0_84cc, 256
  store i32 %v3_84cc, i32* %r3.global-to-local, align 4
  %v1_84d0 = add i32 %v2_8370, 1452
  store i32 %v1_84d0, i32* %r1.global-to-local, align 4
  %v2_84d4 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_84d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_84ec.preheader

dec_label_pc_84ec.preheader:                      ; preds = %dec_label_pc_84bc, %dec_label_pc_9e28
  %v0_9e38.sink = phi i32 [ %v0_9e38, %dec_label_pc_9e28 ], [ %v0_84cc, %dec_label_pc_84bc ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_9e38, %dec_label_pc_9e28 ], [ %v3_84cc, %dec_label_pc_84bc ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e40, %dec_label_pc_9e28 ], [ %v2_84d4, %dec_label_pc_84bc ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_9e3c, %dec_label_pc_9e28 ], [ %v1_84d0, %dec_label_pc_84bc ]
  %v1_9e44 = urem i32 %v0_9e38.sink, 256
  store i32 %v1_9e44, i32* @r7, align 4
  %v2_8654 = ptrtoint i32* %stack_var_-152 to i32
  %v2_866c = ptrtoint i32* %stack_var_-44 to i32
  %v2_86b4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_86d0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88b0 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c0c = icmp eq i32 %v6_81bc, 0
  %v1_8b08 = inttoptr i32 %v6_81bc to i8*
  %v2_8738 = ptrtoint i32* %stack_var_-60 to i32
  %v2_873c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8740 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8820 = ptrtoint i32* %stack_var_-48 to i32
  %v2_882c = ptrtoint i32* %stack_var_-52 to i32
  %v4_868c = mul nuw nsw i32 %v1_9e44, 256
  %v5_868c = or i32 %v4_868c, %stack_var_-20864.0.ph
  br label %dec_label_pc_84ec

dec_label_pc_84ec:                                ; preds = %dec_label_pc_8718, %dec_label_pc_854c, %dec_label_pc_8710, %dec_label_pc_87ac, %dec_label_pc_84ec.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_84f0 = call i32 @function_12d34(i32* null)
  store i32 %v2_84f0, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_851c225 = load i32, i32* @sp, align 4
  %v3_851c226 = add i32 %v2_851c225, 20688
  %v4_851c227 = inttoptr i32 %v3_851c226 to i32*
  store i32 0, i32* %v4_851c227, align 4
  br label %dec_label_pc_8508.dec_label_pc_8508_crit_edge

dec_label_pc_8508.dec_label_pc_8508_crit_edge:    ; preds = %dec_label_pc_84ec, %dec_label_pc_8508.dec_label_pc_8508_crit_edge
  %v0_8508.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_850c = add i32 %v0_8508.pre, 4
  store i32 %v1_850c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8514 = add i32 %v0_8508.pre, 20684
  store i32 %v1_8514, i32* @lr, align 4
  %v7_8518 = icmp eq i32 %v1_850c, 128
  %v2_851c = load i32, i32* @sp, align 4
  %v3_851c = add i32 %v2_851c, %v1_8514
  %v4_851c = inttoptr i32 %v3_851c to i32*
  store i32 0, i32* %v4_851c, align 4
  br i1 %v7_8518, label %dec_label_pc_8524, label %dec_label_pc_8508.dec_label_pc_8508_crit_edge

dec_label_pc_8524:                                ; preds = %dec_label_pc_8508.dec_label_pc_8508_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v0_8528 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8528, i32* %stack_var_-332, align 4
  %v0_852c = load i32, i32* %r3.global-to-local, align 4
  %v1_8534228 = add i32 %v0_852c, -120
  store i32 %v1_8534228, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_853c229 = add i32 %v0_852c, 20432
  store i32 %v1_853c229, i32* %r2.global-to-local, align 4
  %v7_8540230 = icmp eq i32 %v1_8534228, 128
  %v2_8544231 = load i32, i32* @sp, align 4
  %v3_8544232 = add i32 %v2_8544231, %v1_853c229
  %v4_8544233 = inttoptr i32 %v3_8544232 to i32*
  store i32 0, i32* %v4_8544233, align 4
  br i1 %v7_8540230, label %dec_label_pc_854c, label %dec_label_pc_8530.dec_label_pc_8530_crit_edge

dec_label_pc_8530.dec_label_pc_8530_crit_edge:    ; preds = %dec_label_pc_8524, %dec_label_pc_8530.dec_label_pc_8530_crit_edge
  %v0_8530.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8534 = add i32 %v0_8530.pre, 4
  store i32 %v1_8534, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_853c = add i32 %v0_8530.pre, 20556
  store i32 %v1_853c, i32* %r2.global-to-local, align 4
  %v7_8540 = icmp eq i32 %v1_8534, 128
  %v2_8544 = load i32, i32* @sp, align 4
  %v3_8544 = add i32 %v2_8544, %v1_853c
  %v4_8544 = inttoptr i32 %v3_8544 to i32*
  store i32 0, i32* %v4_8544, align 4
  br i1 %v7_8540, label %dec_label_pc_854c, label %dec_label_pc_8530.dec_label_pc_8530_crit_edge

dec_label_pc_854c:                                ; preds = %dec_label_pc_8530.dec_label_pc_8530_crit_edge, %dec_label_pc_8524
  store i32 %v0_835c, i32* %r3.global-to-local, align 4
  %v1_8550 = load i32, i32* %r0.global-to-local, align 4
  %v3_8550 = icmp uge i32 %v0_835c, %v1_8550
  store i1 %v3_8550, i1* %cpsr_c.global-to-local, align 1
  %v9_8550 = icmp eq i32 %v0_835c, %v1_8550
  store i1 %v9_8550, i1* %cpsr_z.global-to-local, align 1
  %v7_8554 = icmp sgt i32 %v0_835c, %v1_8550
  br i1 %v7_8554, label %dec_label_pc_8558, label %dec_label_pc_84ec

dec_label_pc_8558:                                ; preds = %dec_label_pc_854c
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8550, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8550, i32* @r7, align 4
  br label %dec_label_pc_85cc

dec_label_pc_856c:                                ; preds = %dec_label_pc_85e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_856c = icmp eq i8 %v3_85cc, 2
  store i1 %v7_856c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_856c, label %dec_label_pc_8cac, label %dec_label_pc_8574

dec_label_pc_8574:                                ; preds = %dec_label_pc_856c
  %v2_8574 = icmp ugt i8 %v3_85cc, 3
  store i1 %v2_8574, i1* %cpsr_c.global-to-local, align 1
  %v7_8574 = icmp eq i8 %v3_85cc, 4
  store i1 %v7_8574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8574, label %dec_label_pc_887c, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_8574
  %v1_857c = add nsw i32 %v4_85cc, -6
  %v2_857c = icmp ugt i8 %v3_85cc, 5
  store i1 %v2_857c, i1* %cpsr_c.global-to-local, align 1
  %v7_857c = icmp eq i8 %v3_85cc, 6
  store i1 %v7_857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_857c, label %dec_label_pc_8cdc, label %dec_label_pc_8584

dec_label_pc_8584:                                ; preds = %dec_label_pc_857c
  %v2_8584 = icmp ugt i8 %v3_85cc, 6
  store i1 %v2_8584, i1* %cpsr_c.global-to-local, align 1
  %v7_8584 = icmp eq i8 %v3_85cc, 7
  store i1 %v7_8584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8584, label %dec_label_pc_8f18, label %dec_label_pc_858c

dec_label_pc_858c:                                ; preds = %dec_label_pc_8584
  %v2_858c = icmp ugt i8 %v3_85cc, 9
  store i1 %v2_858c, i1* %cpsr_c.global-to-local, align 1
  %v7_858c = icmp eq i8 %v3_85cc, 10
  store i1 %v7_858c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_858c, label %dec_label_pc_8f6c, label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_858c
  %v1_8594 = add nsw i32 %v4_85cc, -11
  %v2_8594 = icmp ugt i8 %v3_85cc, 10
  store i1 %v2_8594, i1* %cpsr_c.global-to-local, align 1
  %v7_8594 = icmp eq i8 %v3_85cc, 11
  store i1 %v7_8594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8594, label %dec_label_pc_952c, label %dec_label_pc_859c

dec_label_pc_859c:                                ; preds = %dec_label_pc_8594, %dec_label_pc_8cac
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_85cc, align 1
  %v0_85a4 = load i32, i32* @r6, align 4
  %v1_85a4 = add i32 %v0_85a4, -1452
  %v2_85a4 = inttoptr i32 %v1_85a4 to i32*
  %v3_85a4 = load i32, i32* %v2_85a4, align 4
  store i32 %v3_85a4, i32* %r0.global-to-local, align 4
  %v1_85a8 = call i32 @function_130b4(i32 %v3_85a4)
  store i32 %v1_85a8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85b0 = load i32, i32* @r6, align 4
  %v2_85b0 = add i32 %v1_85b0, -1452
  %v3_85b0 = inttoptr i32 %v2_85b0 to i32*
  store i32 -1, i32* %v3_85b0, align 4
  br label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_8f6c, %dec_label_pc_8f18, %dec_label_pc_86d8, %dec_label_pc_85e8, %dec_label_pc_8cdc, %dec_label_pc_952c, %bb180, %dec_label_pc_859c
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  %v0_85b8 = load i32, i32* @r7, align 4
  %v1_85b8 = add i32 %v0_85b8, 1
  store i32 %v1_85b8, i32* @r7, align 4
  %v0_85bc = load i32, i32* @r6, align 4
  %v3_85c0 = icmp uge i32 %v1_85b8, %v0_835c
  store i1 %v3_85c0, i1* %cpsr_c.global-to-local, align 1
  %v9_85c0 = icmp eq i32 %v1_85b8, %v0_835c
  store i1 %v9_85c0, i1* %cpsr_z.global-to-local, align 1
  %v1_85c4 = add i32 %v0_85bc, 3140
  store i32 %v1_85c4, i32* @r6, align 4
  br i1 %v9_85c0, label %dec_label_pc_85b4.dec_label_pc_8710_crit_edge, label %dec_label_pc_85cc

dec_label_pc_85b4.dec_label_pc_8710_crit_edge:    ; preds = %dec_label_pc_85b4
  %v0_8710.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8710

dec_label_pc_85cc:                                ; preds = %dec_label_pc_86f8, %dec_label_pc_85b4, %dec_label_pc_8558
  %v3_8870 = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8558 ], [ %v1_85c4, %dec_label_pc_85b4 ], [ %v1_8708, %dec_label_pc_86f8 ]
  %v1_85cc = add i32 %v3_8870, -1448
  %v2_85cc = inttoptr i32 %v1_85cc to i8*
  %v3_85cc = load i8, i8* %v2_85cc, align 1
  %v4_85cc = zext i8 %v3_85cc to i32
  store i32 %v4_85cc, i32* @r3, align 4
  %v2_85d4 = icmp ne i8 %v3_85cc, 0
  store i1 %v2_85d4, i1* %cpsr_c.global-to-local, align 1
  %v6_85d4 = icmp eq i8 %v3_85cc, 0
  %v7_85d4 = icmp eq i8 %v3_85cc, 1
  store i1 %v7_85d4, i1* %cpsr_z.global-to-local, align 1
  %v1_85d8 = add i32 %v3_8870, -1452
  store i32 %v1_85d8, i32* @r5, align 4
  br i1 %v7_85d4, label %dec_label_pc_8864, label %dec_label_pc_85e0

dec_label_pc_85e0:                                ; preds = %dec_label_pc_85cc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_85d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_85d4, label %dec_label_pc_85e8, label %dec_label_pc_856c

dec_label_pc_85e8:                                ; preds = %.thread19.dec_label_pc_85e8_crit_edge, %dec_label_pc_85e0
  %v0_85e8 = phi i32 [ %v0_85e8.pre, %.thread19.dec_label_pc_85e8_crit_edge ], [ %v3_8870, %dec_label_pc_85e0 ]
  %v1_85e8 = add i32 %v0_85e8, -1452
  %v2_85e8 = inttoptr i32 %v1_85e8 to i32*
  %v3_85e8 = load i32, i32* %v2_85e8, align 4
  store i32 %v3_85e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  %v2_85f4 = icmp eq i32 %v3_85e8, -1
  store i1 %v2_85f4, i1* %cpsr_c.global-to-local, align 1
  %v7_85f4 = icmp eq i32 %v3_85e8, -1
  store i1 %v7_85f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34316, i32* @lr, align 4
  %v1_8608 = xor i1 %v7_85f4, true
  call void @__pseudo_cond_branch(i1 %v1_8608, i32 ptrtoint (i32* @global_var_130b4.22 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_8614 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_8614, i32* %r2.global-to-local, align 4
  %v3_8618 = call i32 @function_138c4(i32 2, i32 1, i32 %v0_8614)
  store i32 %v3_8618, i32* %r0.global-to-local, align 4
  %v2_861c = icmp eq i32 %v3_8618, -1
  store i1 %v2_861c, i1* %cpsr_c.global-to-local, align 1
  %v7_861c = icmp eq i32 %v3_8618, -1
  store i1 %v7_861c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8618, i32* @r4, align 4
  %v1_8624 = load i32, i32* @r6, align 4
  %v2_8624 = add i32 %v1_8624, -1452
  %v3_8624 = inttoptr i32 %v2_8624 to i32*
  store i32 %v3_8618, i32* %v3_8624, align 4
  br i1 %v7_861c, label %dec_label_pc_85b4, label %dec_label_pc_862c

dec_label_pc_862c:                                ; preds = %dec_label_pc_85e8
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8630 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_8630, i32* %r2.global-to-local, align 4
  %v2_8634 = call i32 @function_12ee8(i32 %v3_8618, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_863c = or i32 %v2_8634, 2048
  store i32 %v1_863c, i32* %r2.global-to-local, align 4
  %v0_8640 = load i32, i32* @r4, align 4
  store i32 %v0_8640, i32* %r0.global-to-local, align 4
  %v2_8644 = call i32 @function_12ee8(i32 %v0_8640, i32 4)
  store i32 %v2_8644, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_8654, i32* %r3.global-to-local, align 4
  %v0_8658 = load i32, i32* @r6, align 4
  %v1_8658 = add i32 %v0_8658, -1452
  %v2_8658 = inttoptr i32 %v1_8658 to i32*
  %v3_8658 = load i32, i32* %v2_8658, align 4
  store i32 %v3_8658, i32* %r0.global-to-local, align 4
  %v0_865c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_865c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_866c, i32* %r3.global-to-local, align 4
  %v5_8674 = call i32 @function_13880(i32 %v3_8658, i32 %v0_865c, i32 8, i32 %v2_866c, i32 4)
  store i32 %v5_8674, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9e44, i32* %r2.global-to-local, align 4
  %v0_8680 = load i32, i32* @r6, align 4
  %v1_8680 = add i32 %v0_8680, -1436
  %v2_8680 = inttoptr i32 %v1_8680 to i32*
  %v3_8680 = load i32, i32* %v2_8680, align 4
  store i32 %v3_8680, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_868c, i32* %r3.global-to-local, align 4
  %v1_8690 = add i32 %v0_8680, -1452
  %v2_8690 = inttoptr i32 %v1_8690 to i32*
  %v3_8690 = load i32, i32* %v2_8690, align 4
  store i32 %v3_8690, i32* %r0.global-to-local, align 4
  %v3_86a0 = add i32 %v0_8680, -1448
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 2, i8* %v4_86a0, align 1
  store i32 %v2_84f0, i32* %r3.global-to-local, align 4
  %v0_86ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_86ac, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_86b4, i32* %r1.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r6, align 4
  %v2_86b8 = add i32 %v1_86b8, -1444
  %v3_86b8 = inttoptr i32 %v2_86b8 to i32*
  store i32 %v2_84f0, i32* %v3_86b8, align 4
  %v3_86bc = call i32 @function_136ac(i32 %v3_8690, i32 %v2_86b4, i32 16)
  store i32 %v3_86bc, i32* %r0.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1452
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* %ip.global-to-local, align 4
  %v3_86c8 = udiv i32 %v3_86c0, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_86cc = mul nuw nsw i32 %v3_86c8, 4
  store i32 %v3_86cc, i32* %r2.global-to-local, align 4
  store i32 %v2_86d0, i32* @lr, align 4
  br label %dec_label_pc_86d8

dec_label_pc_86d8:                                ; preds = %dec_label_pc_8cc0, %dec_label_pc_862c
  %v0_86e8 = phi i32 [ %v3_86c0, %dec_label_pc_862c ], [ %v3_8cc0, %dec_label_pc_8cc0 ]
  %v3_86cc.pn = phi i32 [ %v3_86cc, %dec_label_pc_862c ], [ %v3_8ccc, %dec_label_pc_8cc0 ]
  %storemerge = add i32 %v3_86cc.pn, %v2_86d0
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_86d8 = add i32 %storemerge, -292
  %v2_86d8 = inttoptr i32 %v1_86d8 to i32*
  %v3_86d8 = load i32, i32* %v2_86d8, align 4
  %v1_86dc = urem i32 %v0_86e8, 32
  store i32 %v1_86dc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_86e4 = shl i32 1, %v1_86dc
  %v8_86e4 = or i32 %v3_86d8, %v7_86e4
  store i32 %v8_86e4, i32* %r1.global-to-local, align 4
  %v1_86e8 = load i32, i32* @r8, align 4
  %v2_86e8 = sub i32 %v0_86e8, %v1_86e8
  %v3_86e8 = icmp uge i32 %v0_86e8, %v1_86e8
  store i1 %v3_86e8, i1* %cpsr_c.global-to-local, align 1
  %v4_86e8 = xor i32 %v1_86e8, %v0_86e8
  %v5_86e8 = xor i32 %v2_86e8, %v0_86e8
  %v6_86e8 = and i32 %v5_86e8, %v4_86e8
  %v7_86e8 = icmp slt i32 %v6_86e8, 0
  %v8_86e8 = icmp slt i32 %v2_86e8, 0
  %v9_86e8 = icmp eq i32 %v0_86e8, %v1_86e8
  store i1 %v9_86e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_86e4, i32* %v2_86d8, align 4
  %v3_86f0 = xor i1 %v8_86e8, %v7_86e8
  %v4_86f0 = or i1 %v9_86e8, %v3_86f0
  br i1 %v4_86f0, label %dec_label_pc_85b4, label %dec_label_pc_86f4

dec_label_pc_86f4:                                ; preds = %dec_label_pc_86d8
  %v0_86f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_86f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_86f4 = add i32 %v1_86f4, %v0_86f4
  store i32 %v2_86f4, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_86f8:                                ; preds = %dec_label_pc_8fa0, %dec_label_pc_8f4c, %dec_label_pc_8d10, %dec_label_pc_86f4
  %v0_871065 = phi i32 [ %v2_8fa0, %dec_label_pc_8fa0 ], [ %v2_8f4c, %dec_label_pc_8f4c ], [ %v2_8d10, %dec_label_pc_8d10 ], [ %v2_86f4, %dec_label_pc_86f4 ]
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  %v0_86fc = load i32, i32* @r7, align 4
  %v1_86fc = add i32 %v0_86fc, 1
  store i32 %v1_86fc, i32* @r7, align 4
  %v0_8700 = load i32, i32* @r6, align 4
  %v3_8704 = icmp uge i32 %v1_86fc, %v0_835c
  store i1 %v3_8704, i1* %cpsr_c.global-to-local, align 1
  %v9_8704 = icmp eq i32 %v1_86fc, %v0_835c
  store i1 %v9_8704, i1* %cpsr_z.global-to-local, align 1
  %v1_8708 = add i32 %v0_8700, 3140
  store i32 %v1_8708, i32* @r6, align 4
  br i1 %v9_8704, label %dec_label_pc_8710, label %dec_label_pc_85cc

dec_label_pc_8710:                                ; preds = %dec_label_pc_86f8, %dec_label_pc_85b4.dec_label_pc_8710_crit_edge
  %v0_8748 = phi i32 [ %v0_8710.pre, %dec_label_pc_85b4.dec_label_pc_8710_crit_edge ], [ %v0_871065, %dec_label_pc_86f8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8710 = icmp eq i32 %v0_8748, 0
  store i1 %v2_8710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8710, label %dec_label_pc_84ec, label %dec_label_pc_8718

dec_label_pc_8718:                                ; preds = %dec_label_pc_8710
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8738, i32* %ip.global-to-local, align 4
  store i32 %v2_873c, i32* %r1.global-to-local, align 4
  store i32 %v2_8740, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8748, i32* %r0.global-to-local, align 4
  %v5_8750 = call i32 @function_12dd8(i32 %v0_8748, i32 %v2_873c, i32 %v2_8740, i32 0, i32 %v2_8738)
  store i32 %v5_8750, i32* @r4, align 4
  %v0_8758 = load i32, i32* @r5, align 4
  store i32 %v0_8758, i32* %r0.global-to-local, align 4
  %v1_875c = inttoptr i32 %v0_8758 to i32*
  %v2_875c = call i32 @function_12d34(i32* %v1_875c)
  store i32 %v2_875c, i32* %r0.global-to-local, align 4
  %v0_8760 = load i32, i32* @r4, align 4
  %v1_8760 = load i32, i32* @r5, align 4
  %v3_8760 = icmp uge i32 %v0_8760, %v1_8760
  store i1 %v3_8760, i1* %cpsr_c.global-to-local, align 1
  %v9_8760 = icmp eq i32 %v0_8760, %v1_8760
  store i1 %v9_8760, i1* %cpsr_z.global-to-local, align 1
  %v7_8768 = icmp sgt i32 %v0_8760, %v1_8760
  br i1 %v7_8768, label %dec_label_pc_876c, label %dec_label_pc_84ec

dec_label_pc_876c:                                ; preds = %dec_label_pc_8718
  %v0_87cc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_87cc

dec_label_pc_8774:                                ; preds = %dec_label_pc_87e0, %dec_label_pc_884c
  %v1_8784 = phi i32 [ %v1_87f8, %dec_label_pc_87e0 ], [ %v1_8784.pre, %dec_label_pc_884c ]
  %v0_877c = phi i32 [ %v3_87e8, %dec_label_pc_87e0 ], [ %v0_877c.pre, %dec_label_pc_884c ]
  store i32 %v2_86d0, i32* %r3.global-to-local, align 4
  %v2_877c = add i32 %v0_877c, %v2_86d0
  store i32 %v2_877c, i32* %r2.global-to-local, align 4
  %v1_8780 = add i32 %v2_877c, -164
  %v2_8780 = inttoptr i32 %v1_8780 to i32*
  %v3_8780 = load i32, i32* %v2_8780, align 4
  %v2_8784 = add i32 %v1_8784, -1
  %v3_8784 = shl i32 1, %v2_8784
  %v4_8784 = and i32 %v3_8780, %v3_8784
  %v5_8784 = icmp ne i32 %v4_8784, 0
  store i1 %v5_8784, i1* %cpsr_c.global-to-local, align 1
  %v6_8784 = lshr i32 %v3_8780, %v1_8784
  store i32 %v6_8784, i32* %r3.global-to-local, align 4
  %v1_8788 = urem i32 %v6_8784, 2
  %v2_8788 = icmp eq i32 %v1_8788, 0
  store i1 %v2_8788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8788, label %dec_label_pc_87ac, label %dec_label_pc_8790

dec_label_pc_8790:                                ; preds = %dec_label_pc_8774
  %v0_8790 = load i32, i32* @sl, align 4
  %v1_8790 = add i32 %v0_8790, -1448
  %v2_8790 = inttoptr i32 %v1_8790 to i8*
  %v3_8790 = load i8, i8* %v2_8790, align 1
  %v4_8790 = zext i8 %v3_8790 to i32
  store i32 %v4_8790, i32* %r3.global-to-local, align 4
  %v2_8794 = icmp ugt i8 %v3_8790, 5
  store i1 %v2_8794, i1* %cpsr_c.global-to-local, align 1
  %v7_8794 = icmp eq i8 %v3_8790, 6
  store i1 %v7_8794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8794, label %dec_label_pc_8fe8, label %dec_label_pc_879c

dec_label_pc_879c:                                ; preds = %dec_label_pc_8790
  %v2_879c = icmp ugt i8 %v3_8790, 6
  store i1 %v2_879c, i1* %cpsr_c.global-to-local, align 1
  %v7_879c = icmp eq i8 %v3_8790, 7
  store i1 %v7_879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_879c, label %dec_label_pc_8d18, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_879c
  %v2_87a4 = icmp ugt i8 %v3_8790, 9
  store i1 %v2_87a4, i1* %cpsr_c.global-to-local, align 1
  %v7_87a4 = icmp eq i8 %v3_8790, 10
  store i1 %v7_87a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87a4, label %dec_label_pc_9620, label %dec_label_pc_87ac

dec_label_pc_87ac:                                ; preds = %dec_label_pc_8e18, %dec_label_pc_96b0, %dec_label_pc_9660, %dec_label_pc_9038, %dec_label_pc_87a4, %dec_label_pc_8774, %dec_label_pc_87cc, %dec_label_pc_9b00, %dec_label_pc_99ac, %dec_label_pc_9934, %dec_label_pc_98d8, %dec_label_pc_96bc, %dec_label_pc_968c, %dec_label_pc_9670, %dec_label_pc_9614, %dec_label_pc_9510, %dec_label_pc_8f54
  store i32 %v0_835c, i32* %r3.global-to-local, align 4
  %v1_87b4 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_87b4, i32* %r2.global-to-local, align 4
  %v0_87b8 = load i32, i32* @sl, align 4
  %v3_87bc = icmp uge i32 %v1_87b4, %v0_835c
  store i1 %v3_87bc, i1* %cpsr_c.global-to-local, align 1
  %v9_87bc = icmp eq i32 %v1_87b4, %v0_835c
  store i1 %v9_87bc, i1* %cpsr_z.global-to-local, align 1
  %v1_87c4 = add i32 %v0_87b8, 3140
  store i32 %v1_87c4, i32* @sl, align 4
  br i1 %v9_87bc, label %dec_label_pc_84ec, label %dec_label_pc_87cc

dec_label_pc_87cc:                                ; preds = %dec_label_pc_87ac, %dec_label_pc_876c
  %v0_87cc = phi i32 [ %v0_87cc.pre, %dec_label_pc_876c ], [ %v1_87c4, %dec_label_pc_87ac ]
  %stack_var_-20820.0 = phi i32 [ %v1_8760, %dec_label_pc_876c ], [ %v1_87b4, %dec_label_pc_87ac ]
  %v1_87cc = add i32 %v0_87cc, -1452
  %v2_87cc = inttoptr i32 %v1_87cc to i32*
  %v3_87cc = load i32, i32* %v2_87cc, align 4
  store i32 %v3_87cc, i32* %r0.global-to-local, align 4
  %v2_87d4 = icmp eq i32 %v3_87cc, -1
  store i1 %v2_87d4, i1* %cpsr_c.global-to-local, align 1
  %v7_87d4 = icmp eq i32 %v3_87cc, -1
  store i1 %v7_87d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_87cc, i32* %sb.global-to-local, align 4
  br i1 %v7_87d4, label %dec_label_pc_87ac, label %dec_label_pc_87e0

dec_label_pc_87e0:                                ; preds = %dec_label_pc_87cc
  %v3_87e0 = udiv i32 %v3_87cc, 32
  %v3_87e8 = mul nuw nsw i32 %v3_87e0, 4
  store i32 %v3_87e8, i32* @ip, align 4
  store i32 %v2_86d0, i32* @lr, align 4
  %v2_87f0 = add i32 %v3_87e8, %v2_86d0
  store i32 %v2_87f0, i32* %r2.global-to-local, align 4
  %v1_87f4 = add i32 %v2_87f0, -292
  %v2_87f4 = inttoptr i32 %v1_87f4 to i32*
  %v3_87f4 = load i32, i32* %v2_87f4, align 4
  %v1_87f8 = urem i32 %v3_87cc, 32
  store i32 %v1_87f8, i32* %r1.global-to-local, align 4
  %v2_87fc = add nsw i32 %v1_87f8, -1
  %v3_87fc = shl i32 1, %v2_87fc
  %v4_87fc = and i32 %v3_87f4, %v3_87fc
  %v5_87fc = icmp ne i32 %v4_87fc, 0
  store i1 %v5_87fc, i1* %cpsr_c.global-to-local, align 1
  %v6_87fc = lshr i32 %v3_87f4, %v1_87f8
  store i32 %v6_87fc, i32* %r3.global-to-local, align 4
  %v1_8800 = urem i32 %v6_87fc, 2
  %v2_8800 = icmp eq i32 %v1_8800, 0
  store i1 %v2_8800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8800, label %dec_label_pc_8774, label %dec_label_pc_8808

dec_label_pc_8808:                                ; preds = %dec_label_pc_87e0
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_882c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8838 = call i32 @function_1371c(i32 %v3_87cc, i32 1, i32 4, i32 %v2_8820, i32 %v2_882c)
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_8840 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8840, i32* %r3.global-to-local, align 4
  %v2_8844 = or i32 %v3_8840, %v5_8838
  store i32 %v2_8844, i32* %r0.global-to-local, align 4
  %v4_8844 = icmp eq i32 %v2_8844, 0
  store i1 %v4_8844, i1* %cpsr_z.global-to-local, align 1
  %v0_884c = load i32, i32* @sl, align 4
  %v1_884c = add i32 %v0_884c, -1452
  %v2_884c = inttoptr i32 %v1_884c to i32*
  %v3_884c = load i32, i32* %v2_884c, align 4
  br i1 %v4_8844, label %dec_label_pc_884c, label %dec_label_pc_8f54

dec_label_pc_884c:                                ; preds = %dec_label_pc_8808
  store i32 %v3_884c, i32* %r3.global-to-local, align 4
  %v3_8850 = udiv i32 %v3_884c, 32
  store i32 %v3_8850, i32* %r2.global-to-local, align 4
  %v1_8854 = urem i32 %v3_884c, 32
  store i32 %v1_8854, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8858 = mul nuw nsw i32 %v3_8850, 4
  store i32 %v3_8858, i32* @ip, align 4
  %v0_885c = load i32, i32* @r4, align 4
  %v1_885c = trunc i32 %v0_885c to i8
  %v3_885c = add i32 %v0_884c, -1448
  %v4_885c = inttoptr i32 %v3_885c to i8*
  store i8 %v1_885c, i8* %v4_885c, align 1
  %v0_877c.pre = load i32, i32* @ip, align 4
  %v1_8784.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_8774

dec_label_pc_8864:                                ; preds = %dec_label_pc_85cc
  %v1_8864 = add i32 %v3_8870, 4
  %v2_8864 = inttoptr i32 %v1_8864 to i32*
  %v3_8864 = load i32, i32* %v2_8864, align 4
  store i32 %v3_8864, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8868 = icmp eq i32 %v3_8864, 0
  store i1 %v2_8868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8868, label %.thread19, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8864
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_85cc, align 1
  %v0_8874.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8874.pr.pr, label %.thread17..thread19_crit_edge, label %dec_label_pc_887c

.thread17..thread19_crit_edge:                    ; preds = %.thread17
  %v1_8874.pre = load i32, i32* @r3, align 4
  %v3_8874.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_8874.pre to i8
  br label %.thread19

.thread19:                                        ; preds = %.thread17..thread19_crit_edge, %dec_label_pc_8864
  %v3_8874 = phi i32 [ %v3_8874.pre, %.thread17..thread19_crit_edge ], [ %v3_8870, %dec_label_pc_8864 ]
  %v1_8874.off0 = phi i8 [ %extract.t, %.thread17..thread19_crit_edge ], [ 0, %dec_label_pc_8864 ]
  %v4_8874 = add i32 %v3_8874, -1448
  %v5_8874 = inttoptr i32 %v4_8874 to i8*
  store i8 %v1_8874.off0, i8* %v5_8874, align 1
  %v0_8878.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8878.pr, label %.thread19.dec_label_pc_85e8_crit_edge, label %dec_label_pc_887c

.thread19.dec_label_pc_85e8_crit_edge:            ; preds = %.thread19
  %v0_85e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_85e8

dec_label_pc_887c:                                ; preds = %.thread17, %.thread19, %dec_label_pc_8574
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_8884 = load i32, i32* @r5, align 4
  %v1_8884 = add i32 %v0_8884, 2112
  store i32 %v1_8884, i32* %r0.global-to-local, align 4
  %v1_8888 = load i32, i32* @r6, align 4
  %v2_8888 = add i32 %v1_8888, 12
  %v3_8888 = inttoptr i32 %v2_8888 to i32*
  store i32 -1, i32* %v3_8888, align 4
  %v0_888c = load i32, i32* %r0.global-to-local, align 4
  %v1_888c = add i32 %v0_888c, 4
  store i32 %v1_888c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_8894 = load i32, i32* %sb.global-to-local, align 4
  %v1_8894 = load i32, i32* @r6, align 4
  %v2_8894 = inttoptr i32 %v1_8894 to i32*
  store i32 %v0_8894, i32* %v2_8894, align 4
  %v2_8898 = call i32 @function_124e4(i32 %v1_888c, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88a4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88a4 = load i32, i32* @r6, align 4
  %v2_88a4 = add i32 %v1_88a4, 660
  %v3_88a4 = inttoptr i32 %v2_88a4 to i32*
  store i32 %v0_88a4, i32* %v3_88a4, align 4
  %v2_88a8 = call i32 @function_124e4(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88b0 = call i32 @function_12450(i8* %v1_88b0)
  %v0_88b4 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88bc = add i32 %v0_88b4, 1431
  store i32 %v1_88bc, i32* %fp.global-to-local, align 4
  %v2_88c0 = add i32 %v2_88b0, %stack_var_-20860.0.ph
  store i32 %v2_88c0, i32* @r0, align 4
  store i32 %v1_88bc, i32* %r1.global-to-local, align 4
  %v2_88c8 = inttoptr i32 %v2_88c0 to i8*
  %v3_88c8 = call i32 @function_12478(i8* %v2_88c8, i32 %v1_88bc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88d0 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_18284.24 to i32), i32* %r1.global-to-local, align 4
  %v2_88dc = add i32 %v2_88d0, %stack_var_-20860.0.ph
  store i32 %v2_88dc, i32* @r0, align 4
  %v2_88e0 = inttoptr i32 %v2_88dc to i8*
  %v3_88e0 = call i32 @function_12478(i8* %v2_88e0, i32 ptrtoint (i32* @global_var_18284.24 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88e8 = call i32 @function_12450(i8* %v1_88b0)
  %v2_88f0 = add i32 %v2_88e8, %stack_var_-20860.0.ph
  store i32 %v2_88f0, i32* @r0, align 4
  %v0_88f4 = load i32, i32* @r5, align 4
  %v1_88f4 = add i32 %v0_88f4, 532
  store i32 %v1_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = inttoptr i32 %v2_88f0 to i8*
  %v3_88f8 = call i32 @function_12478(i8* %v2_88f8, i32 %v1_88f4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8900 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1825c.26 to i32), i32* %r1.global-to-local, align 4
  %v2_890c = add i32 %v2_8900, %stack_var_-20860.0.ph
  store i32 %v2_890c, i32* @r0, align 4
  %v3_8910 = inttoptr i32 %v2_890c to i8*
  %v4_8910 = call i32 @function_12478(i8* %v3_8910, i32 ptrtoint ([24 x i8]* @global_var_1825c.26 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8918 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8920 = load i32, i32* @r5, align 4
  %v1_8920 = add i32 %v0_8920, 20
  store i32 %v1_8920, i32* %r1.global-to-local, align 4
  %v2_8924 = add i32 %v2_8918, %stack_var_-20860.0.ph
  store i32 %v2_8924, i32* @r0, align 4
  %v2_8928 = inttoptr i32 %v2_8924 to i8*
  %v3_8928 = call i32 @function_12478(i8* %v2_8928, i32 %v1_8920)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8930 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18274.28 to i32), i32* %r1.global-to-local, align 4
  %v2_893c = add i32 %v2_8930, %stack_var_-20860.0.ph
  store i32 %v2_893c, i32* @r0, align 4
  %v3_8940 = inttoptr i32 %v2_893c to i8*
  %v4_8940 = call i32 @function_12478(i8* %v3_8940, i32 ptrtoint ([9 x i8]* @global_var_18274.28 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8948 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8950 = load i32, i32* @r5, align 4
  %v2_8954 = add i32 %v2_8948, %stack_var_-20860.0.ph
  store i32 %v2_8954, i32* @r0, align 4
  %v1_8958 = add i32 %v0_8950, 789
  store i32 %v1_8958, i32* %r1.global-to-local, align 4
  %v2_895c = inttoptr i32 %v2_8954 to i8*
  %v3_895c = call i32 @function_12478(i8* %v2_895c, i32 %v1_8958)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8964 = call i32 @function_12450(i8* %v1_88b0)
  %v2_896c = add i32 %v2_8964, %stack_var_-20860.0.ph
  store i32 %v2_896c, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v3_8974 = inttoptr i32 %v2_896c to i8*
  %v4_8974 = call i32 @function_12478(i8* %v3_8974, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_897c = call i32 @function_11a84(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8984 = call i32 @function_12450(i8* %v1_88b0)
  %v0_8988 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8988, i32* %r1.global-to-local, align 4
  store i32 %v2_8984, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8994 = inttoptr i32 %v0_8988 to i32*
  %v3_8994 = call i32 @function_119c0(i32 35, i32* %v2_8994)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8994, i32* %r1.global-to-local, align 4
  %v1_89a0 = load i32, i32* @r4, align 4
  %v2_89a0 = add i32 %v1_89a0, %stack_var_-20860.0.ph
  store i32 %v2_89a0, i32* @r0, align 4
  %v2_89a4 = inttoptr i32 %v2_89a0 to i8*
  %v3_89a4 = call i32 @function_12478(i8* %v2_89a4, i32 %v3_8994)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_89ac = call i32 @function_119e4(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89b4 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v2_89c0 = add i32 %v2_89b4, %stack_var_-20860.0.ph
  store i32 %v2_89c0, i32* @r0, align 4
  %v3_89c4 = inttoptr i32 %v2_89c0 to i8*
  %v4_89c4 = call i32 @function_12478(i8* %v3_89c4, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_89cc = call i32 @function_11a84(i32 36)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89d4 = call i32 @function_12450(i8* %v1_88b0)
  %v0_89d8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_89d8, i32* %r1.global-to-local, align 4
  store i32 %v2_89d4, i32* @r4, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v2_89e4 = inttoptr i32 %v0_89d8 to i32*
  %v3_89e4 = call i32 @function_119c0(i32 36, i32* %v2_89e4)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_89e4, i32* %r1.global-to-local, align 4
  %v1_89f0 = load i32, i32* @r4, align 4
  %v2_89f0 = add i32 %v1_89f0, %stack_var_-20860.0.ph
  store i32 %v2_89f0, i32* @r0, align 4
  %v2_89f4 = inttoptr i32 %v2_89f0 to i8*
  %v3_89f4 = call i32 @function_12478(i8* %v2_89f4, i32 %v3_89e4)
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_89fc = call i32 @function_119e4(i32 36)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a04 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8a10 = add i32 %v2_8a04, %stack_var_-20860.0.ph
  store i32 %v2_8a10, i32* @r0, align 4
  %v3_8a14 = inttoptr i32 %v2_8a10 to i8*
  %v4_8a14 = call i32 @function_12478(i8* %v3_8a14, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_8a1c = call i32 @function_11a84(i32 37)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a24 = call i32 @function_12450(i8* %v1_88b0)
  %v0_8a28 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a28, i32* %r1.global-to-local, align 4
  store i32 %v2_8a24, i32* @r4, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v2_8a34 = inttoptr i32 %v0_8a28 to i32*
  %v3_8a34 = call i32 @function_119c0(i32 37, i32* %v2_8a34)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a34, i32* %r1.global-to-local, align 4
  %v1_8a40 = load i32, i32* @r4, align 4
  %v2_8a40 = add i32 %v1_8a40, %stack_var_-20860.0.ph
  store i32 %v2_8a40, i32* @r0, align 4
  %v2_8a44 = inttoptr i32 %v2_8a40 to i8*
  %v3_8a44 = call i32 @function_12478(i8* %v2_8a44, i32 %v3_8a34)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_8a4c = call i32 @function_119e4(i32 37)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a54 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8a60 = add i32 %v2_8a54, %stack_var_-20860.0.ph
  store i32 %v2_8a60, i32* @r0, align 4
  %v3_8a64 = inttoptr i32 %v2_8a60 to i8*
  %v4_8a64 = call i32 @function_12478(i8* %v3_8a64, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 %v4_8a64, i32* %r0.global-to-local, align 4
  store i32 %v6_81bc, i32* %ip.global-to-local, align 4
  %v1_8a6c = load i32, i32* %sb.global-to-local, align 4
  %v3_8a6c = icmp uge i32 %v6_81bc, %v1_8a6c
  store i1 %v3_8a6c, i1* %cpsr_c.global-to-local, align 1
  %v9_8a6c = icmp eq i32 %v6_81bc, %v1_8a6c
  store i1 %v9_8a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8a6c, label %dec_label_pc_8b44, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_887c
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8a78 = call i32 @function_11a84(i32 38)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a80 = call i32 @function_12450(i8* %v1_88b0)
  %v0_8a84 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a84, i32* %r1.global-to-local, align 4
  store i32 %v2_8a80, i32* @r4, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v2_8a90 = inttoptr i32 %v0_8a84 to i32*
  %v3_8a90 = call i32 @function_119c0(i32 38, i32* %v2_8a90)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8a90, i32* %r1.global-to-local, align 4
  %v1_8a9c = load i32, i32* @r4, align 4
  %v2_8a9c = add i32 %v1_8a9c, %stack_var_-20860.0.ph
  store i32 %v2_8a9c, i32* @r0, align 4
  %v2_8aa0 = inttoptr i32 %v2_8a9c to i8*
  %v3_8aa0 = call i32 @function_12478(i8* %v2_8aa0, i32 %v3_8a90)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8aa8 = call i32 @function_119e4(i32 38)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ab0 = call i32 @function_12450(i8* %v1_88b0)
  %v2_8ab8 = add i32 %v2_8ab0, %stack_var_-20860.0.ph
  store i32 %v2_8ab8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v3_8ac0 = inttoptr i32 %v2_8ab8 to i8*
  %v4_8ac0 = call i32 @function_12478(i8* %v3_8ac0, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ac8 = call i32 @function_12450(i8* %v1_88b0)
  %v0_8acc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8acc, i32* %r1.global-to-local, align 4
  store i32 %v2_8ac8, i32* %r4.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_8ad8 = inttoptr i32 %v0_8acc to i32*
  %v3_8ad8 = call i32 @function_119c0(i32 43, i32* %v2_8ad8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8ad8, i32* %r1.global-to-local, align 4
  %v2_8ae4 = add i32 %v2_8ac8, %stack_var_-20860.0.ph
  store i32 %v2_8ae4, i32* @r0, align 4
  %v2_8ae8 = inttoptr i32 %v2_8ae4 to i8*
  %v3_8ae8 = call i32 @function_12478(i8* %v2_8ae8, i32 %v3_8ad8)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af0 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18284.24 to i32), i32* %r1.global-to-local, align 4
  %v2_8afc = add i32 %v2_8af0, %stack_var_-20860.0.ph
  store i32 %v2_8afc, i32* @r0, align 4
  %v2_8b00 = inttoptr i32 %v2_8afc to i8*
  %v3_8b00 = call i32 @function_12478(i8* %v2_8b00, i32 ptrtoint (i32* @global_var_18284.24 to i32))
  store i32 %v6_81bc, i32* %r0.global-to-local, align 4
  %v2_8b08 = call i32 @function_12450(i8* %v1_8b08)
  store i32 %v2_8b08, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b14 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b20 = add i32 %v2_8b14, %stack_var_-20860.0.ph
  store i32 %v2_8b20, i32* %r2.global-to-local, align 4
  %v0_8b24 = load i32, i32* @r4, align 4
  store i32 %v0_8b24, i32* %r0.global-to-local, align 4
  %v3_8b28 = trunc i32 %v0_8b24 to i8
  %v4_8b28 = call i32 @function_12944(i8 %v3_8b28, i32 10, i32 %v2_8b20)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b30 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8b3c = add i32 %v2_8b30, %stack_var_-20860.0.ph
  store i32 %v2_8b3c, i32* @r0, align 4
  %v3_8b40 = inttoptr i32 %v2_8b3c to i8*
  %v4_8b40 = call i32 @function_12478(i8* %v3_8b40, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 %v4_8b40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b44

dec_label_pc_8b44:                                ; preds = %dec_label_pc_887c, %dec_label_pc_8a74
  %v0_8b44 = load i32, i32* @r6, align 4
  %v1_8b44 = add i32 %v0_8b44, 16
  %v2_8b44 = inttoptr i32 %v1_8b44 to i32*
  %v3_8b44 = load i32, i32* %v2_8b44, align 4
  store i32 %v3_8b44, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b48 = icmp eq i32 %v3_8b44, 0
  store i1 %v2_8b48, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v3_8b44, 1
  br i1 %tmp177, label %dec_label_pc_8bf0, label %dec_label_pc_8b50

dec_label_pc_8b50:                                ; preds = %dec_label_pc_8b44
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b54 = call i32 @function_12450(i8* %v1_88b0)
  %v2_8b5c = add i32 %v2_8b54, %stack_var_-20860.0.ph
  store i32 %v2_8b5c, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18294.32 to i32), i32* %r1.global-to-local, align 4
  %v3_8b64 = inttoptr i32 %v2_8b5c to i8*
  %v4_8b64 = call i32 @function_12478(i8* %v3_8b64, i32 ptrtoint ([9 x i8]* @global_var_18294.32 to i32))
  store i32 %v4_8b64, i32* %r0.global-to-local, align 4
  %v0_8b68 = load i32, i32* @r6, align 4
  %v1_8b68 = add i32 %v0_8b68, 16
  %v2_8b68 = inttoptr i32 %v1_8b68 to i32*
  %v3_8b68 = load i32, i32* %v2_8b68, align 4
  store i32 %v3_8b68, i32* %r3.global-to-local, align 4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b70 = icmp eq i32 %v3_8b68, 0
  store i1 %v2_8b70, i1* %cpsr_z.global-to-local, align 1
  %v0_8b74 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8b74, i32* %stack_var_-44, align 4
  %tmp178 = icmp slt i32 %v3_8b68, 1
  br i1 %tmp178, label %dec_label_pc_8bd8, label %dec_label_pc_8b7c

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b50, %dec_label_pc_8b7c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b80 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_8b88 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8b90 = and i32 %v3_8b88, 33554432
  %v2_8b90 = icmp ne i32 %v1_8b90, 0
  store i1 %v2_8b90, i1* %cpsr_c.global-to-local, align 1
  %v3_8b90 = mul i32 %v3_8b88, 128
  %v1_8b94 = add i32 %v3_8b90, 1472
  %v2_8b98 = add i32 %v2_8b80, %stack_var_-20860.0.ph
  store i32 %v2_8b98, i32* @r0, align 4
  %v0_8b9c = load i32, i32* @r5, align 4
  %v2_8b9c = add i32 %v1_8b94, %v0_8b9c
  store i32 %v2_8b9c, i32* %r1.global-to-local, align 4
  %v2_8ba0 = inttoptr i32 %v2_8b98 to i8*
  %v3_8ba0 = call i32 @function_12478(i8* %v2_8ba0, i32 %v2_8b9c)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ba8 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_182a0.34 to i32), i32* %r1.global-to-local, align 4
  %v2_8bb4 = add i32 %v2_8ba8, %stack_var_-20860.0.ph
  store i32 %v2_8bb4, i32* @r0, align 4
  %v3_8bb8 = inttoptr i32 %v2_8bb4 to i8*
  %v4_8bb8 = call i32 @function_12478(i8* %v3_8bb8, i32 ptrtoint ([3 x i8]* @global_var_182a0.34 to i32))
  store i32 %v4_8bb8, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_8bc0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8bc0, i32* %r3.global-to-local, align 4
  %v0_8bc4 = load i32, i32* @r6, align 4
  %v1_8bc4 = add i32 %v0_8bc4, 16
  %v2_8bc4 = inttoptr i32 %v1_8bc4 to i32*
  %v3_8bc4 = load i32, i32* %v2_8bc4, align 4
  store i32 %v3_8bc4, i32* %r2.global-to-local, align 4
  %v1_8bc8 = add i32 %v3_8bc0, 1
  store i32 %v1_8bc8, i32* %ip.global-to-local, align 4
  %v3_8bcc = icmp uge i32 %v3_8bc4, %v1_8bc8
  store i1 %v3_8bcc, i1* %cpsr_c.global-to-local, align 1
  %v9_8bcc = icmp eq i32 %v3_8bc4, %v1_8bc8
  store i1 %v9_8bcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8bc8, i32* %stack_var_-44, align 4
  %v8_8bd4 = icmp sgt i32 %v3_8bc4, %v1_8bc8
  br i1 %v8_8bd4, label %dec_label_pc_8b7c, label %dec_label_pc_8bd8

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8b7c, %dec_label_pc_8b50
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bdc = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8be8 = add i32 %v2_8bdc, %stack_var_-20860.0.ph
  store i32 %v2_8be8, i32* @r0, align 4
  %v3_8bec = inttoptr i32 %v2_8be8 to i8*
  %v4_8bec = call i32 @function_12478(i8* %v3_8bec, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 %v4_8bec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8b44, %dec_label_pc_8bd8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bf4 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8c00 = add i32 %v2_8bf4, %stack_var_-20860.0.ph
  store i32 %v2_8c00, i32* @r0, align 4
  %v3_8c04 = inttoptr i32 %v2_8c00 to i8*
  %v4_8c04 = call i32 @function_12478(i8* %v3_8c04, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32))
  store i32 %v4_8c04, i32* %r0.global-to-local, align 4
  store i32 %v6_81bc, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c0c, label %dec_label_pc_8c2c, label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8bf0
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c18 = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81bc, i32* %r1.global-to-local, align 4
  %v2_8c24 = add i32 %v2_8c18, %stack_var_-20860.0.ph
  store i32 %v2_8c24, i32* @r0, align 4
  %v2_8c28 = inttoptr i32 %v2_8c24 to i8*
  %v3_8c28 = call i32 @function_12478(i8* %v2_8c28, i32 %v6_81bc)
  store i32 %v3_8c28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c2c

dec_label_pc_8c2c:                                ; preds = %dec_label_pc_8bf0, %dec_label_pc_8c14
  %v0_8c2c = load i32, i32* @r5, align 4
  %v1_8c2c = add i32 %v0_8c2c, 1440
  store i32 %v1_8c2c, i32* %r4.global-to-local, align 4
  %v0_8c30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_8c30, i32* %r0.global-to-local, align 4
  store i32 %v1_8c2c, i32* %r1.global-to-local, align 4
  %v2_8c38 = inttoptr i32 %v0_8c30 to i8*
  %v3_8c38 = call i32 @function_12830(i8* %v2_8c38, i32 %v1_8c2c)
  store i32 %v3_8c38, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c3c = icmp eq i32 %v3_8c38, 0
  store i1 %v2_8c3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c3c, label %dec_label_pc_967c, label %dec_label_pc_8c44

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8c2c, %dec_label_pc_967c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c48 = load i32, i32* @r6, align 4
  %v1_8c48 = add i32 %v0_8c48, -1452
  %v2_8c48 = inttoptr i32 %v1_8c48 to i32*
  %v3_8c48 = load i32, i32* %v2_8c48, align 4
  store i32 %v3_8c48, i32* @r4, align 4
  %v2_8c4c = call i32 @function_12450(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_8c4c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c5c = load i32, i32* @r4, align 4
  store i32 %v0_8c5c, i32* %r0.global-to-local, align 4
  %v4_8c60 = call i32 @function_13808(i32 %v0_8c5c, i32 %stack_var_-20860.0.ph, i32 %v2_8c4c, i32 16384)
  store i32 %v4_8c60, i32* %r0.global-to-local, align 4
  %v0_8c64 = load i32, i32* @r6, align 4
  %v1_8c64 = add i32 %v0_8c64, -1452
  %v2_8c64 = inttoptr i32 %v1_8c64 to i32*
  %v3_8c64 = load i32, i32* %v2_8c64, align 4
  store i32 %v3_8c64, i32* %ip.global-to-local, align 4
  %v3_8c6c = udiv i32 %v3_8c64, 32
  store i32 %v2_86d0, i32* %r1.global-to-local, align 4
  %v3_8c74 = mul nuw nsw i32 %v3_8c6c, 4
  %v2_8c78 = add i32 %v3_8c74, %v2_86d0
  store i32 %v2_8c78, i32* %r2.global-to-local, align 4
  %v1_8c7c = add i32 %v2_8c78, -164
  %v2_8c7c = inttoptr i32 %v1_8c7c to i32*
  %v3_8c7c = load i32, i32* %v2_8c7c, align 4
  %v1_8c84 = urem i32 %v3_8c64, 32
  store i32 %v1_8c84, i32* %r0.global-to-local, align 4
  %v7_8c88 = shl i32 1, %v1_8c84
  %v8_8c88 = or i32 %v3_8c7c, %v7_8c88
  store i32 %v8_8c88, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8c88, i32* %v2_8c7c, align 4
  %v0_8c94 = load i32, i32* %r3.global-to-local, align 4
  %v1_8c94 = trunc i32 %v0_8c94 to i8
  %v2_8c94 = load i32, i32* @r6, align 4
  %v3_8c94 = add i32 %v2_8c94, -1448
  %v4_8c94 = inttoptr i32 %v3_8c94 to i8*
  store i8 %v1_8c94, i8* %v4_8c94, align 1
  %v0_8c98 = load i32, i32* %ip.global-to-local, align 4
  %v1_8c98 = load i32, i32* @r8, align 4
  %v2_8c98 = sub i32 %v0_8c98, %v1_8c98
  %v3_8c98 = icmp uge i32 %v0_8c98, %v1_8c98
  store i1 %v3_8c98, i1* %cpsr_c.global-to-local, align 1
  %v4_8c98 = xor i32 %v1_8c98, %v0_8c98
  %v5_8c98 = xor i32 %v2_8c98, %v0_8c98
  %v6_8c98 = and i32 %v5_8c98, %v4_8c98
  %v7_8c98 = icmp slt i32 %v6_8c98, 0
  %v8_8c98 = icmp slt i32 %v2_8c98, 0
  %v9_8c98 = icmp eq i32 %v0_8c98, %v1_8c98
  store i1 %v9_8c98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_84f0, i32* %r2.global-to-local, align 4
  %v3_8ca0 = xor i1 %v8_8c98, %v7_8c98
  %v4_8ca0 = or i1 %v9_8c98, %v3_8ca0
  br i1 %v4_8ca0, label %bb180, label %bb179

bb179:                                            ; preds = %dec_label_pc_8c44
  %v6_8ca0 = add i32 %v0_8c98, 1
  store i32 %v6_8ca0, i32* @r8, align 4
  br label %bb180

bb180:                                            ; preds = %dec_label_pc_8c44, %bb179
  %v1_8ca4 = load i32, i32* @r6, align 4
  %v2_8ca4 = add i32 %v1_8ca4, -1440
  %v3_8ca4 = inttoptr i32 %v2_8ca4 to i32*
  store i32 %v2_84f0, i32* %v3_8ca4, align 4
  br label %dec_label_pc_85b4

dec_label_pc_8cac:                                ; preds = %dec_label_pc_856c
  %v1_8cac = add i32 %v3_8870, -1444
  %v2_8cac = inttoptr i32 %v1_8cac to i32*
  %v3_8cac = load i32, i32* %v2_8cac, align 4
  store i32 %v2_84f0, i32* %r1.global-to-local, align 4
  %v2_8cb4 = sub i32 %v2_84f0, %v3_8cac
  store i32 %v2_8cb4, i32* %r3.global-to-local, align 4
  %v2_8cb8 = icmp ugt i32 %v2_8cb4, 29
  store i1 %v2_8cb8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cb8 = icmp eq i32 %v2_8cb4, 30
  store i1 %v7_8cb8, i1* %cpsr_z.global-to-local, align 1
  %v2_8cbc = xor i1 %v7_8cb8, true
  %v3_8cbc = and i1 %v2_8cb8, %v2_8cbc
  br i1 %v3_8cbc, label %dec_label_pc_859c, label %dec_label_pc_8cc0

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8cac
  %v2_8cc0 = inttoptr i32 %v1_85d8 to i32*
  %v3_8cc0 = load i32, i32* %v2_8cc0, align 4
  store i32 %v3_8cc0, i32* %ip.global-to-local, align 4
  %v3_8cc8 = udiv i32 %v3_8cc0, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8ccc = mul nuw nsw i32 %v3_8cc8, 4
  store i32 %v3_8ccc, i32* %r2.global-to-local, align 4
  store i32 %v2_86d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_86d8

dec_label_pc_8cdc:                                ; preds = %dec_label_pc_857c
  %v2_8cdc = inttoptr i32 %v1_85d8 to i32*
  %v3_8cdc = load i32, i32* %v2_8cdc, align 4
  store i32 %v3_8cdc, i32* %ip.global-to-local, align 4
  %v3_8ce4 = udiv i32 %v3_8cdc, 32
  store i32 %v2_86d0, i32* %r3.global-to-local, align 4
  %v3_8cec = mul nuw nsw i32 %v3_8ce4, 4
  %v2_8cf0 = add i32 %v3_8cec, %v2_86d0
  store i32 %v2_8cf0, i32* %r2.global-to-local, align 4
  %v1_8cf4 = add i32 %v2_8cf0, -164
  %v2_8cf4 = inttoptr i32 %v1_8cf4 to i32*
  %v3_8cf4 = load i32, i32* %v2_8cf4, align 4
  %v1_8cf8 = urem i32 %v3_8cdc, 32
  store i32 %v1_8cf8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d00 = shl i32 1, %v1_8cf8
  %v8_8d00 = or i32 %v3_8cf4, %v7_8d00
  store i32 %v8_8d00, i32* %r1.global-to-local, align 4
  %v1_8d04 = load i32, i32* @r8, align 4
  %v2_8d04 = sub i32 %v3_8cdc, %v1_8d04
  %v3_8d04 = icmp uge i32 %v3_8cdc, %v1_8d04
  store i1 %v3_8d04, i1* %cpsr_c.global-to-local, align 1
  %v4_8d04 = xor i32 %v1_8d04, %v3_8cdc
  %v5_8d04 = xor i32 %v2_8d04, %v3_8cdc
  %v6_8d04 = and i32 %v5_8d04, %v4_8d04
  %v7_8d04 = icmp slt i32 %v6_8d04, 0
  %v8_8d04 = icmp slt i32 %v2_8d04, 0
  %v9_8d04 = icmp eq i32 %v3_8cdc, %v1_8d04
  store i1 %v9_8d04, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d00, i32* %v2_8cf4, align 4
  %v3_8d0c = xor i1 %v8_8d04, %v7_8d04
  %v4_8d0c = or i1 %v9_8d04, %v3_8d0c
  br i1 %v4_8d0c, label %dec_label_pc_85b4, label %dec_label_pc_8d10

dec_label_pc_8d10:                                ; preds = %dec_label_pc_8cdc
  %v0_8d10 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d10 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d10 = add i32 %v1_8d10, %v0_8d10
  store i32 %v2_8d10, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_8d18:                                ; preds = %dec_label_pc_879c
  %v0_8d18 = call i32 @function_134dc()
  store i32 %v0_8d18, i32* %r0.global-to-local, align 4
  %v0_8d1c = load i32, i32* @sl, align 4
  %v1_8d1c = add i32 %v0_8d1c, 660
  %v2_8d1c = inttoptr i32 %v1_8d1c to i32*
  %v3_8d1c = load i32, i32* %v2_8d1c, align 4
  store i32 %v3_8d1c, i32* @r3, align 4
  %v0_8d20 = load i32, i32* %sb.global-to-local, align 4
  %v2_8d24 = icmp ugt i32 %v3_8d1c, 1023
  store i1 %v2_8d24, i1* %cpsr_c.global-to-local, align 1
  %v7_8d24 = icmp eq i32 %v3_8d1c, 1024
  store i1 %v7_8d24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8d18, i32* %fp.global-to-local, align 4
  %v1_8d2c = add i32 %v0_8d20, 2116
  store i32 %v1_8d2c, i32* @r7, align 4
  br i1 %v7_8d24, label %dec_label_pc_8e30, label %dec_label_pc_8d34

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d18, %dec_label_pc_8e30, %dec_label_pc_8e24
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8d38 = load i32, i32* %fp.global-to-local, align 4
  %v2_8d38 = inttoptr i32 %v1_8d38 to i32*
  store i32 0, i32* %v2_8d38, align 4
  %v0_8d3c = load i32, i32* @sl, align 4
  %v1_8d3c = add i32 %v0_8d3c, 660
  %v2_8d3c = inttoptr i32 %v1_8d3c to i32*
  %v3_8d3c = load i32, i32* %v2_8d3c, align 4
  store i32 %v3_8d3c, i32* %r1.global-to-local, align 4
  %v1_8d40 = add i32 %v0_8d3c, -1452
  %v2_8d40 = inttoptr i32 %v1_8d40 to i32*
  %v3_8d40 = load i32, i32* %v2_8d40, align 4
  store i32 %v3_8d40, i32* %r0.global-to-local, align 4
  %v1_8d44 = sub i32 1024, %v3_8d3c
  store i32 %v1_8d44, i32* %r2.global-to-local, align 4
  %v0_8d48 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d48 = add i32 %v0_8d48, 16384
  store i32 %v1_8d48, i32* %r3.global-to-local, align 4
  %v0_8d4c = load i32, i32* @r7, align 4
  %v2_8d4c = add i32 %v0_8d4c, %v3_8d3c
  store i32 %v2_8d4c, i32* %r1.global-to-local, align 4
  %v4_8d50 = call i32 @function_13794(i32 %v3_8d40, i32 %v2_8d4c, i32 %v1_8d44, i32 %v1_8d48)
  store i32 %v4_8d50, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d54 = icmp eq i32 %v4_8d50, 0
  store i1 %v2_8d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d54, label %dec_label_pc_968c, label %dec_label_pc_8d5c

dec_label_pc_8d5c:                                ; preds = %dec_label_pc_8d34
  %v2_8d5c = icmp eq i32 %v4_8d50, -1
  store i1 %v2_8d5c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d5c = icmp eq i32 %v4_8d50, -1
  store i1 %v7_8d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d5c, label %dec_label_pc_96b0, label %dec_label_pc_8d64

dec_label_pc_8d64:                                ; preds = %dec_label_pc_8d5c
  %v0_8d64 = load i32, i32* @sl, align 4
  %v1_8d64 = add i32 %v0_8d64, 660
  %v2_8d64 = inttoptr i32 %v1_8d64 to i32*
  %v3_8d64 = load i32, i32* %v2_8d64, align 4
  store i32 %v2_875c, i32* %r1.global-to-local, align 4
  %v2_8d6c = add i32 %v3_8d64, %v4_8d50
  store i32 %v2_8d6c, i32* @r4, align 4
  store i32 %v2_8d6c, i32* %v2_8d64, align 4
  %v0_8d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_8d74 = load i32, i32* @sl, align 4
  %v2_8d74 = add i32 %v1_8d74, -1444
  %v3_8d74 = inttoptr i32 %v2_8d74 to i32*
  store i32 %v0_8d74, i32* %v3_8d74, align 4
  br label %dec_label_pc_8e04

dec_label_pc_8d7c:                                ; preds = %dec_label_pc_8e04
  %v1_8d7c = inttoptr i32 %v0_8e04 to i32*
  %v2_8d7c = load i32, i32* %v1_8d7c, align 4
  store i32 %v2_8d7c, i32* @r8, align 4
  %v1_8d80 = load i32, i32* @r4, align 4
  %v5_8d84 = icmp slt i32 %v3_8e04, %v1_8d80
  %storemerge49 = select i1 %v5_8d84, i32 %v3_8e04, i32 %v1_8d80
  store i32 %storemerge49, i32* @r6, align 4
  %v2_8d8c = sub i32 %v3_8e04, %storemerge49
  store i32 %v2_8d8c, i32* %r3.global-to-local, align 4
  %v2_8d90 = icmp ne i32 %v2_8d7c, 0
  store i1 %v2_8d90, i1* %cpsr_c.global-to-local, align 1
  %v7_8d90 = icmp eq i32 %v2_8d7c, 1
  store i1 %v7_8d90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8d8c, i32* %v2_8e04, align 4
  br i1 %v7_8d90, label %dec_label_pc_8e54, label %.dec_label_pc_8da0thread-pre-split_crit_edge

.dec_label_pc_8da0thread-pre-split_crit_edge:     ; preds = %dec_label_pc_8d7c
  %v1_8d98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8d98, i32* @r5, align 4
  br label %dec_label_pc_8da0

dec_label_pc_8da0:                                ; preds = %dec_label_pc_8e10, %.dec_label_pc_8da0thread-pre-split_crit_edge, %dec_label_pc_8e7c
  %v0_8da0 = phi i32 [ %v3_8e7c, %dec_label_pc_8e7c ], [ %v1_8d98, %.dec_label_pc_8da0thread-pre-split_crit_edge ], [ %v3_8e04, %dec_label_pc_8e10 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8da0 = icmp eq i32 %v0_8da0, 0
  store i1 %v2_8da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8da0, label %dec_label_pc_8da8, label %dec_label_pc_8dc8

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8da0
  %v0_8da8 = load i32, i32* @sl, align 4
  %v1_8da8 = add i32 %v0_8da8, 8
  %v2_8da8 = inttoptr i32 %v1_8da8 to i32*
  %v3_8da8 = load i32, i32* %v2_8da8, align 4
  store i32 %v3_8da8, i32* @r4, align 4
  %v2_8dac = icmp ne i32 %v3_8da8, 0
  store i1 %v2_8dac, i1* %cpsr_c.global-to-local, align 1
  %v7_8dac = icmp eq i32 %v3_8da8, 1
  store i1 %v7_8dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dac, label %dec_label_pc_8e84, label %dec_label_pc_8db4

dec_label_pc_8db4:                                ; preds = %dec_label_pc_8da8
  %v1_8db4 = add i32 %v0_8da8, 660
  %v2_8db4 = inttoptr i32 %v1_8db4 to i32*
  %v3_8db4 = load i32, i32* %v2_8db4, align 4
  %v0_8db8 = load i32, i32* @r6, align 4
  %v2_8db8 = sub i32 %v3_8db4, %v0_8db8
  store i32 %v2_8db8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dbc = icmp eq i32 %v2_8db8, 0
  store i1 %v2_8dbc, i1* %cpsr_z.global-to-local, align 1
  %v2_8dc0 = add i32 %v0_8da8, 12
  %v3_8dc0 = inttoptr i32 %v2_8dc0 to i32*
  store i32 %v2_8db8, i32* %v3_8dc0, align 4
  br i1 %v2_8dbc, label %dec_label_pc_9670, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8da0, %dec_label_pc_8e84, %dec_label_pc_8db4, %dec_label_pc_8f0c
  %v0_8dc8 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dc8 = icmp eq i32 %v0_8dc8, 0
  store i1 %v2_8dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8dc8, label %dec_label_pc_8e18, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc8
  %v0_8dd0 = load i32, i32* @sl, align 4
  %v1_8dd0 = add i32 %v0_8dd0, 660
  %v2_8dd0 = inttoptr i32 %v1_8dd0 to i32*
  %v3_8dd0 = load i32, i32* %v2_8dd0, align 4
  store i32 %v3_8dd0, i32* @r3, align 4
  %v2_8dd4 = sub i32 %v3_8dd0, %v0_8dc8
  store i32 %v2_8dd4, i32* @r4, align 4
  store i32 %v2_8dd4, i32* @r2, align 4
  store i32 %v2_8dd4, i32* %v2_8dd0, align 4
  %v0_8de0 = load i32, i32* @r7, align 4
  %v1_8de0 = load i32, i32* @r6, align 4
  %v2_8de0 = add i32 %v1_8de0, %v0_8de0
  store i32 %v2_8de0, i32* @r1, align 4
  store i32 %v0_8de0, i32* @r0, align 4
  %v3_8de8 = call i32 @function_135d0(i32 %v0_8de0, i32 %v2_8de0, i32 %v2_8dd4)
  store i32 %v3_8de8, i32* %r0.global-to-local, align 4
  %v0_8dec = load i32, i32* @sl, align 4
  %v1_8dec = add i32 %v0_8dec, 660
  %v2_8dec = inttoptr i32 %v1_8dec to i32*
  %v3_8dec = load i32, i32* %v2_8dec, align 4
  store i32 %v3_8dec, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8df4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8df4 = add i32 %v0_8df4, %v3_8dec
  store i32 %v2_8df4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8df8 = icmp eq i32 %v3_8dec, 0
  store i1 %v2_8df8, i1* %cpsr_z.global-to-local, align 1
  %v3_8dfc = add i32 %v2_8df4, 2116
  %v4_8dfc = inttoptr i32 %v3_8dfc to i8*
  store i8 0, i8* %v4_8dfc, align 1
  %v0_8e00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e00, label %dec_label_pc_8e18, label %dec_label_pc_8e04

dec_label_pc_8e04:                                ; preds = %dec_label_pc_8dd0, %dec_label_pc_8d64
  %v0_8e04 = load i32, i32* @sl, align 4
  %v1_8e04 = add i32 %v0_8e04, 12
  %v2_8e04 = inttoptr i32 %v1_8e04 to i32*
  %v3_8e04 = load i32, i32* %v2_8e04, align 4
  store i32 %v3_8e04, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e08 = icmp eq i32 %v3_8e04, 0
  store i1 %v2_8e08, i1* %cpsr_z.global-to-local, align 1
  %v5_8e0c = icmp sgt i32 %v3_8e04, 0
  br i1 %v5_8e0c, label %dec_label_pc_8d7c, label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8e04
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8da0

dec_label_pc_8e18:                                ; preds = %dec_label_pc_8dd0, %dec_label_pc_8dc8
  %v0_8e18 = load i32, i32* @sl, align 4
  %v1_8e18 = add i32 %v0_8e18, -1448
  %v2_8e18 = inttoptr i32 %v1_8e18 to i8*
  %v3_8e18 = load i8, i8* %v2_8e18, align 1
  %v4_8e18 = zext i8 %v3_8e18 to i32
  store i32 %v4_8e18, i32* %r3.global-to-local, align 4
  %v2_8e1c = icmp ugt i8 %v3_8e18, 6
  store i1 %v2_8e1c, i1* %cpsr_c.global-to-local, align 1
  %v7_8e1c = icmp eq i8 %v3_8e18, 7
  store i1 %v7_8e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e1c, label %dec_label_pc_8e24, label %dec_label_pc_87ac

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8e18
  %v1_8e24 = add i32 %v0_8e18, 660
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  store i32 %v3_8e24, i32* @r3, align 4
  %v2_8e28 = icmp ugt i32 %v3_8e24, 1023
  store i1 %v2_8e28, i1* %cpsr_c.global-to-local, align 1
  %v7_8e28 = icmp eq i32 %v3_8e24, 1024
  store i1 %v7_8e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e28, label %dec_label_pc_8e30.loopexit, label %dec_label_pc_8d34

dec_label_pc_8e30.loopexit:                       ; preds = %dec_label_pc_8e24
  %v0_8e30.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_8e38.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %dec_label_pc_8e30.loopexit, %dec_label_pc_8d18
  %v0_8e38 = phi i32 [ %v0_8e38.pre, %dec_label_pc_8e30.loopexit ], [ %v1_8d2c, %dec_label_pc_8d18 ]
  %v0_8e30 = phi i32 [ %v0_8e30.pre, %dec_label_pc_8e30.loopexit ], [ %v0_8d20, %dec_label_pc_8d18 ]
  %v1_8e34 = add i32 %v0_8e30, 2180
  store i32 %v1_8e34, i32* @r1, align 4
  store i32 %v0_8e38, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_8e40 = call i32 @function_135d0(i32 %v0_8e38, i32 %v1_8e34, i32 960)
  store i32 %v3_8e40, i32* %r0.global-to-local, align 4
  %v0_8e44 = load i32, i32* @sl, align 4
  %v1_8e44 = add i32 %v0_8e44, 660
  %v2_8e44 = inttoptr i32 %v1_8e44 to i32*
  %v3_8e44 = load i32, i32* %v2_8e44, align 4
  store i32 %v3_8e44, i32* %r3.global-to-local, align 4
  %v1_8e48 = add i32 %v3_8e44, -64
  store i32 %v1_8e48, i32* @r4, align 4
  store i32 %v1_8e48, i32* %v2_8e44, align 4
  br label %dec_label_pc_8d34

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8d7c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_8e5c = call i32 @function_119c0(i32 39, i32* null)
  %v0_8e60 = load i32, i32* @r4, align 4
  store i32 %v0_8e60, i32* %r1.global-to-local, align 4
  store i32 %v3_8e5c, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8e6c = load i32, i32* @r7, align 4
  store i32 %v0_8e6c, i32* %r0.global-to-local, align 4
  %v4_8e70 = call i32 @function_12508(i32 %v0_8e6c, i32 %v0_8e60, i32 %v3_8e5c, i32 11)
  store i32 %v4_8e70, i32* %r0.global-to-local, align 4
  %v3_8e74 = icmp eq i32 %v4_8e70, -1
  store i1 %v3_8e74, i1* %cpsr_c.global-to-local, align 1
  %v8_8e74 = icmp eq i32 %v4_8e70, -1
  store i1 %v8_8e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8e74, label %dec_label_pc_8e7c, label %dec_label_pc_994c

dec_label_pc_8e7c:                                ; preds = %dec_label_pc_8e54
  %v0_8e7c = load i32, i32* @sl, align 4
  %v1_8e7c = add i32 %v0_8e7c, 12
  %v2_8e7c = inttoptr i32 %v1_8e7c to i32*
  %v3_8e7c = load i32, i32* %v2_8e7c, align 4
  store i32 %v3_8e7c, i32* @r5, align 4
  br label %dec_label_pc_8da0

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8da8
  %v0_8e84 = load i32, i32* @r7, align 4
  store i32 %v0_8e84, i32* %r0.global-to-local, align 4
  %v1_8e88 = add i32 %v0_8da8, 660
  %v2_8e88 = inttoptr i32 %v1_8e88 to i32*
  %v3_8e88 = load i32, i32* %v2_8e88, align 4
  store i32 %v3_8e88, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8e94 = call i32 @function_12508(i32 %v0_8e84, i32 %v3_8e88, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_8e94, i32* %r0.global-to-local, align 4
  %v2_8e98 = icmp eq i32 %v5_8e94, -1
  store i1 %v2_8e98, i1* %cpsr_c.global-to-local, align 1
  %v7_8e98 = icmp eq i32 %v5_8e94, -1
  store i1 %v7_8e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e98, label %dec_label_pc_8dc8, label %dec_label_pc_8ea0

dec_label_pc_8ea0:                                ; preds = %dec_label_pc_8e84
  %v0_8ea0 = load i32, i32* @sl, align 4
  %v1_8ea0 = add i32 %v0_8ea0, 660
  %v2_8ea0 = inttoptr i32 %v1_8ea0 to i32*
  %v3_8ea0 = load i32, i32* %v2_8ea0, align 4
  store i32 %v3_8ea0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8eac = load i32, i32* @r7, align 4
  store i32 %v0_8eac, i32* %r0.global-to-local, align 4
  %v5_8eb0 = call i32 @function_12508(i32 %v0_8eac, i32 %v3_8ea0, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  %v0_8eb4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8eb4 = add i32 %v0_8eb4, %v5_8eb0
  store i32 %v2_8eb4, i32* %ip.global-to-local, align 4
  store i32 %v5_8eb0, i32* @r6, align 4
  store i32 %v5_8eb0, i32* %r1.global-to-local, align 4
  %v0_8ec0 = load i32, i32* @r7, align 4
  store i32 %v0_8ec0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32* %r2.global-to-local, align 4
  %v0_8ec8 = load i32, i32* @r4, align 4
  store i32 %v0_8ec8, i32* %r3.global-to-local, align 4
  %v0_8ecc = load i32, i32* @r5, align 4
  %v1_8ecc = trunc i32 %v0_8ecc to i8
  %v3_8ecc = add i32 %v2_8eb4, 2114
  %v4_8ecc = inttoptr i32 %v3_8ecc to i8*
  store i8 %v1_8ecc, i8* %v4_8ecc, align 1
  %v4_8ed0 = call i32 @function_12508(i32 %v0_8ec0, i32 %v5_8eb0, i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32 %v0_8ec8)
  store i32 %v4_8ed0, i32* %r0.global-to-local, align 4
  %v2_8ed4 = icmp eq i32 %v4_8ed0, -1
  store i1 %v2_8ed4, i1* %cpsr_c.global-to-local, align 1
  %v7_8ed4 = icmp eq i32 %v4_8ed0, -1
  store i1 %v7_8ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ed4, label %dec_label_pc_8ef8, label %dec_label_pc_8edc

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ea0
  %v0_8edc = load i32, i32* @r7, align 4
  store i32 %v0_8edc, i32* %r0.global-to-local, align 4
  %v0_8ee0 = load i32, i32* @r6, align 4
  store i32 %v0_8ee0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32* %r2.global-to-local, align 4
  %v0_8ee8 = load i32, i32* @r4, align 4
  store i32 %v0_8ee8, i32* %r3.global-to-local, align 4
  %v4_8eec = call i32 @function_12508(i32 %v0_8edc, i32 %v0_8ee0, i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32 %v0_8ee8)
  %v0_8ef0 = load i32, i32* %sb.global-to-local, align 4
  %v2_8ef0 = add i32 %v0_8ef0, %v4_8eec
  store i32 %v2_8ef0, i32* %r0.global-to-local, align 4
  %v0_8ef4 = load i32, i32* @r5, align 4
  %v1_8ef4 = trunc i32 %v0_8ef4 to i8
  %v3_8ef4 = add i32 %v2_8ef0, 2116
  %v4_8ef4 = inttoptr i32 %v3_8ef4 to i8*
  store i8 %v1_8ef4, i8* %v4_8ef4, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ea0, %dec_label_pc_8edc
  %v0_8ef8 = load i32, i32* @r7, align 4
  store i32 %v0_8ef8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f00 = inttoptr i32 %v0_8ef8 to i8*
  %v3_8f00 = call i32 @function_12574(i8* %v2_8f00, i32 16)
  store i32 %v3_8f00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f04 = icmp eq i32 %v3_8f00, 0
  store i1 %v2_8f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f04, label %dec_label_pc_9b00, label %dec_label_pc_8f0c

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8ef8
  %v1_8f0c = add i32 %v3_8f00, 2
  store i32 %v1_8f0c, i32* %r3.global-to-local, align 4
  %v1_8f10 = load i32, i32* @sl, align 4
  %v2_8f10 = add i32 %v1_8f10, 12
  %v3_8f10 = inttoptr i32 %v2_8f10 to i32*
  store i32 %v1_8f0c, i32* %v3_8f10, align 4
  br label %dec_label_pc_8dc8

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8584
  %v2_8f18 = inttoptr i32 %v1_85d8 to i32*
  %v3_8f18 = load i32, i32* %v2_8f18, align 4
  store i32 %v3_8f18, i32* %ip.global-to-local, align 4
  %v3_8f20 = udiv i32 %v3_8f18, 32
  %v3_8f24 = mul nuw nsw i32 %v3_8f20, 4
  store i32 %v2_86d0, i32* @lr, align 4
  %v2_8f2c = add i32 %v3_8f24, %v2_86d0
  store i32 %v2_8f2c, i32* %r2.global-to-local, align 4
  %v1_8f30 = add i32 %v2_8f2c, -164
  %v2_8f30 = inttoptr i32 %v1_8f30 to i32*
  %v3_8f30 = load i32, i32* %v2_8f30, align 4
  %v1_8f34 = urem i32 %v3_8f18, 32
  store i32 %v1_8f34, i32* %r0.global-to-local, align 4
  store i32 %v1_857c, i32* %r3.global-to-local, align 4
  %v7_8f3c = shl i32 %v1_857c, %v1_8f34
  %v8_8f3c = or i32 %v3_8f30, %v7_8f3c
  store i32 %v8_8f3c, i32* %r1.global-to-local, align 4
  %v1_8f40 = load i32, i32* @r8, align 4
  %v2_8f40 = sub i32 %v3_8f18, %v1_8f40
  %v3_8f40 = icmp uge i32 %v3_8f18, %v1_8f40
  store i1 %v3_8f40, i1* %cpsr_c.global-to-local, align 1
  %v4_8f40 = xor i32 %v1_8f40, %v3_8f18
  %v5_8f40 = xor i32 %v2_8f40, %v3_8f18
  %v6_8f40 = and i32 %v5_8f40, %v4_8f40
  %v7_8f40 = icmp slt i32 %v6_8f40, 0
  %v8_8f40 = icmp slt i32 %v2_8f40, 0
  %v9_8f40 = icmp eq i32 %v3_8f18, %v1_8f40
  store i1 %v9_8f40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f3c, i32* %v2_8f30, align 4
  %v3_8f48 = xor i1 %v8_8f40, %v7_8f40
  %v4_8f48 = or i1 %v9_8f40, %v3_8f48
  br i1 %v4_8f48, label %dec_label_pc_85b4, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f18
  %v0_8f4c = load i32, i32* %ip.global-to-local, align 4
  %v1_8f4c = load i32, i32* %r3.global-to-local, align 4
  %v2_8f4c = add i32 %v1_8f4c, %v0_8f4c
  store i32 %v2_8f4c, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8808
  store i32 %v3_884c, i32* %r0.global-to-local, align 4
  %v1_8f58 = call i32 @function_130b4(i32 %v3_884c)
  store i32 %v1_8f58, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8f60 = load i32, i32* @sl, align 4
  %v2_8f60 = add i32 %v1_8f60, -1452
  %v3_8f60 = inttoptr i32 %v2_8f60 to i32*
  store i32 -1, i32* %v3_8f60, align 4
  %v0_8f64 = load i32, i32* @r5, align 4
  %v1_8f64 = trunc i32 %v0_8f64 to i8
  %v2_8f64 = load i32, i32* @sl, align 4
  %v3_8f64 = add i32 %v2_8f64, -1448
  %v4_8f64 = inttoptr i32 %v3_8f64 to i8*
  store i8 %v1_8f64, i8* %v4_8f64, align 1
  br label %dec_label_pc_87ac

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_858c
  %v2_8f6c = inttoptr i32 %v1_85d8 to i32*
  %v3_8f6c = load i32, i32* %v2_8f6c, align 4
  store i32 %v3_8f6c, i32* %ip.global-to-local, align 4
  %v3_8f74 = udiv i32 %v3_8f6c, 32
  store i32 %v2_86d0, i32* %r1.global-to-local, align 4
  %v3_8f7c = mul nuw nsw i32 %v3_8f74, 4
  %v2_8f80 = add i32 %v3_8f7c, %v2_86d0
  store i32 %v2_8f80, i32* %r2.global-to-local, align 4
  %v1_8f84 = add i32 %v2_8f80, -164
  %v2_8f84 = inttoptr i32 %v1_8f84 to i32*
  %v3_8f84 = load i32, i32* %v2_8f84, align 4
  %v1_8f88 = urem i32 %v3_8f6c, 32
  store i32 %v1_8f88, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8f90 = shl i32 1, %v1_8f88
  %v8_8f90 = or i32 %v3_8f84, %v7_8f90
  store i32 %v8_8f90, i32* %r1.global-to-local, align 4
  %v1_8f94 = load i32, i32* @r8, align 4
  %v2_8f94 = sub i32 %v3_8f6c, %v1_8f94
  %v3_8f94 = icmp uge i32 %v3_8f6c, %v1_8f94
  store i1 %v3_8f94, i1* %cpsr_c.global-to-local, align 1
  %v4_8f94 = xor i32 %v1_8f94, %v3_8f6c
  %v5_8f94 = xor i32 %v2_8f94, %v3_8f6c
  %v6_8f94 = and i32 %v5_8f94, %v4_8f94
  %v7_8f94 = icmp slt i32 %v6_8f94, 0
  %v8_8f94 = icmp slt i32 %v2_8f94, 0
  %v9_8f94 = icmp eq i32 %v3_8f6c, %v1_8f94
  store i1 %v9_8f94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f90, i32* %v2_8f84, align 4
  %v3_8f9c = xor i1 %v8_8f94, %v7_8f94
  %v4_8f9c = or i1 %v9_8f94, %v3_8f9c
  br i1 %v4_8f9c, label %dec_label_pc_85b4, label %dec_label_pc_8fa0

dec_label_pc_8fa0:                                ; preds = %dec_label_pc_8f6c
  %v0_8fa0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fa0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fa0 = add i32 %v1_8fa0, %v0_8fa0
  store i32 %v2_8fa0, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8790
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_8ff0 = call i32 @function_124e4(i32 %v2_823c, i32 10240)
  store i32 %v2_8ff0, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_8ffc = load i32, i32* @sl, align 4
  %v1_8ffc = add i32 %v0_8ffc, -1452
  %v2_8ffc = inttoptr i32 %v1_8ffc to i32*
  %v3_8ffc = load i32, i32* %v2_8ffc, align 4
  store i32 %v3_8ffc, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9008 = call i32 @function_13794(i32 %v3_8ffc, i32 %v2_823c, i32 10240, i32 16386)
  store i32 %v4_9008, i32* %r0.global-to-local, align 4
  store i32 %v4_9008, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9010 = icmp eq i32 %v4_9008, 0
  store i1 %v2_9010, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp181 = icmp slt i32 %v4_9008, 1
  br i1 %tmp181, label %dec_label_pc_9510, label %dec_label_pc_901c

dec_label_pc_901c:                                ; preds = %dec_label_pc_8fe8
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  store i32 %v4_9008, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_902c = call i32 @function_12508(i32 %v2_823c, i32 %v4_9008, i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), i32 4)
  store i32 %v5_902c, i32* %r0.global-to-local, align 4
  %v3_9030 = icmp eq i32 %v5_902c, -1
  store i1 %v3_9030, i1* %cpsr_c.global-to-local, align 1
  %v8_9030 = icmp eq i32 %v5_902c, -1
  store i1 %v8_9030, i1* %cpsr_z.global-to-local, align 1
  %v0_9038 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_9030, label %dec_label_pc_9038, label %dec_label_pc_9040

dec_label_pc_9038:                                ; preds = %dec_label_pc_901c
  %v3_9038 = icmp ugt i32 %v0_9038, 10239
  store i1 %v3_9038, i1* %cpsr_c.global-to-local, align 1
  %v8_9038 = icmp eq i32 %v0_9038, 10240
  store i1 %v8_9038, i1* %cpsr_z.global-to-local, align 1
  %v5_903c = icmp slt i32 %v0_9038, 10240
  br i1 %v5_903c, label %dec_label_pc_87ac, label %dec_label_pc_9040

dec_label_pc_9040:                                ; preds = %dec_label_pc_901c, %dec_label_pc_9038
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9038, i32* %r1.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v5_9050 = call i32 @function_12508(i32 %v2_823c, i32 %v0_9038, i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), i32 4)
  store i32 %v2_823c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_905c = add i32 %v5_9050, %v2_823c
  %v5_905c = inttoptr i32 %v4_905c to i8*
  store i8 0, i8* %v5_905c, align 1
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v2_9068 = inttoptr i32 %v0_9060 to i32*
  %v3_9068 = call i32 @function_119c0(i32 49, i32* %v2_9068)
  %v0_906c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_906c, i32* @r1, align 4
  store i32 %v3_9068, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_9078 = call i32 @function_127a0(i8* %tmp168, i32 %v0_906c, i32 %v3_9068)
  store i32 %v4_9078, i32* %r0.global-to-local, align 4
  %v2_907c = icmp eq i32 %v4_9078, -1
  store i1 %v2_907c, i1* %cpsr_c.global-to-local, align 1
  %v7_907c = icmp eq i32 %v4_9078, -1
  store i1 %v7_907c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_907c, label %.thread23, label %bb182

bb182:                                            ; preds = %dec_label_pc_9040
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_9084 = load i32, i32* @sl, align 4
  %v3_9084 = inttoptr i32 %v2_9084 to i32*
  store i32 2, i32* %v3_9084, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9040, %bb182
  %v0_9088 = load i32, i32* @r5, align 4
  store i32 %v0_9088, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_9090 = inttoptr i32 %v0_9088 to i32*
  %v3_9090 = call i32 @function_119c0(i32 48, i32* %v2_9090)
  %v0_9094 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9094, i32* @r1, align 4
  store i32 %v3_9090, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_90a0 = call i32 @function_127a0(i8* %tmp168, i32 %v0_9094, i32 %v3_9090)
  store i32 %v4_90a0, i32* %r0.global-to-local, align 4
  %v2_90a4 = icmp eq i32 %v4_90a0, -1
  store i1 %v2_90a4, i1* %cpsr_c.global-to-local, align 1
  %v7_90a4 = icmp eq i32 %v4_90a0, -1
  store i1 %v7_90a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90a4, label %.thread24, label %bb183

bb183:                                            ; preds = %.thread23
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_90ac = load i32, i32* @sl, align 4
  %v3_90ac = inttoptr i32 %v2_90ac to i32*
  store i32 1, i32* %v3_90ac, align 4
  br label %.thread24

.thread24:                                        ; preds = %.thread23, %bb183
  %v0_90b0 = load i32, i32* @r5, align 4
  store i32 %v0_90b0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_90b8 = load i32, i32* @sl, align 4
  %v2_90b8 = add i32 %v1_90b8, 4
  %v3_90b8 = inttoptr i32 %v2_90b8 to i32*
  store i32 %v0_90b0, i32* %v3_90b8, align 4
  %v2_90bc = inttoptr i32 %v0_90b0 to i32*
  %v3_90bc = call i32 @function_119c0(i32 47, i32* %v2_90bc)
  %v0_90c0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90c0, i32* @r1, align 4
  store i32 %v3_90bc, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_90cc = call i32 @function_127a0(i8* %tmp168, i32 %v0_90c0, i32 %v3_90bc)
  store i32 %v4_90cc, i32* %r0.global-to-local, align 4
  %v2_90d0 = icmp eq i32 %v4_90cc, -1
  store i1 %v2_90d0, i1* %cpsr_c.global-to-local, align 1
  %v7_90d0 = icmp eq i32 %v4_90cc, -1
  store i1 %v7_90d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90d0, label %.thread25, label %dec_label_pc_90d8

dec_label_pc_90d8:                                ; preds = %.thread24
  %v0_90d8 = load i32, i32* @r5, align 4
  store i32 %v0_90d8, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_90e0 = inttoptr i32 %v0_90d8 to i32*
  %v3_90e0 = call i32 @function_119c0(i32 47, i32* %v2_90e0)
  %v0_90e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90e4, i32* @r1, align 4
  store i32 %v3_90e0, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_90f0 = call i32 @function_127a0(i8* %tmp168, i32 %v0_90e4, i32 %v3_90e0)
  store i32 %v4_90f0, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* @lr, align 4
  %v2_90f8 = add i32 %v4_90f0, %v2_823c
  %v3_90f8 = inttoptr i32 %v2_90f8 to i8*
  %v4_90f8 = load i8, i8* %v3_90f8, align 1
  %v2_9100 = icmp ugt i8 %v4_90f8, 31
  store i1 %v2_9100, i1* %cpsr_c.global-to-local, align 1
  %v7_9100 = icmp eq i8 %v4_90f8, 32
  store i1 %v7_9100, i1* %cpsr_z.global-to-local, align 1
  %v2_9108 = zext i1 %v7_9100 to i32
  %v2_9108.v4_90f0 = add i32 %v2_9108, %v4_90f0
  store i32 %v2_9108.v4_90f0, i32* @r4, align 4
  %v2_910c = add i32 %v2_9108.v4_90f0, %v2_823c
  store i32 %v2_910c, i32* @r6, align 4
  store i32 %v2_910c, i32* %r0.global-to-local, align 4
  %v1_9114 = load i32, i32* %fp.global-to-local, align 4
  %v2_9114 = sub i32 %v1_9114, %v2_9108.v4_90f0
  store i32 %v2_9114, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9120 = call i32 @function_12508(i32 %v2_910c, i32 %v2_9114, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_9120, i32* %r0.global-to-local, align 4
  %v2_9124 = icmp eq i32 %v5_9120, -1
  store i1 %v2_9124, i1* %cpsr_c.global-to-local, align 1
  %v7_9124 = icmp eq i32 %v5_9120, -1
  store i1 %v7_9124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9124, label %.thread25, label %dec_label_pc_912c

dec_label_pc_912c:                                ; preds = %dec_label_pc_90d8
  %v2_912c = icmp ne i32 %v5_9120, 0
  store i1 %v2_912c, i1* %cpsr_c.global-to-local, align 1
  %v7_912c = icmp eq i32 %v5_9120, 1
  store i1 %v7_912c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %r2.global-to-local, align 4
  %v7_9134 = icmp slt i32 %v5_9120, 2
  br i1 %v7_9134, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_912c
  %v9_9134 = add i32 %v5_9120, -2
  store i32 %v9_9134, i32* %r0.global-to-local, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_912c, %bb184
  %v1_913c = phi i32 [ %v5_9120, %dec_label_pc_912c ], [ %v9_9134, %bb184 ]
  store i32 %v2_86d0, i32* %r2.global-to-local, align 4
  %v2_913c = add i32 %v1_913c, %v2_86d0
  %v1_9140 = load i32, i32* @r4, align 4
  %v2_9140 = add i32 %v2_913c, %v1_9140
  store i32 %v2_9140, i32* %r3.global-to-local, align 4
  %v0_9144 = load i32, i32* @r5, align 4
  %v1_9144 = trunc i32 %v0_9144 to i8
  %v3_9144 = load i32, i32* @r7, align 4
  %v4_9144 = add i32 %v3_9144, %v2_9140
  %v5_9144 = inttoptr i32 %v4_9144 to i8*
  store i8 %v1_9144, i8* %v5_9144, align 1
  %v0_9148 = load i32, i32* @r6, align 4
  store i32 %v0_9148, i32* %r0.global-to-local, align 4
  %v1_914c = inttoptr i32 %v0_9148 to i8*
  %v2_914c = call i32 @function_12450(i8* %v1_914c)
  %v0_9150 = load i32, i32* @r5, align 4
  store i32 %v0_9150, i32* %r1.global-to-local, align 4
  store i32 %v2_914c, i32* @r4, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_915c = inttoptr i32 %v0_9150 to i32*
  %v3_915c = call i32 @function_119c0(i32 46, i32* %v2_915c)
  %v0_9160 = load i32, i32* @r4, align 4
  store i32 %v0_9160, i32* @r1, align 4
  store i32 %v3_915c, i32* %r2.global-to-local, align 4
  %v0_9168 = load i32, i32* @r6, align 4
  store i32 %v0_9168, i32* %r0.global-to-local, align 4
  %v3_916c = inttoptr i32 %v0_9168 to i8*
  %v4_916c = call i32 @function_127a0(i8* %v3_916c, i32 %v0_9160, i32 %v3_915c)
  store i32 %v4_916c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9170 = icmp eq i32 %v4_916c, 0
  store i1 %v2_9170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9170, label %.thread25, label %bb186

bb186:                                            ; preds = %bb185
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9178 = load i32, i32* @sl, align 4
  %v3_9178 = add i32 %v2_9178, 4
  %v4_9178 = inttoptr i32 %v3_9178 to i32*
  store i32 1, i32* %v4_9178, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb185, %dec_label_pc_90d8, %.thread24, %bb186
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9188 = load i32, i32* @sl, align 4
  %v2_9188 = add i32 %v1_9188, 8
  %v3_9188 = inttoptr i32 %v2_9188 to i32*
  store i32 0, i32* %v3_9188, align 4
  %v3_918c = call i32 @function_119c0(i32 44, i32* null)
  %v0_9190 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9190, i32* @r1, align 4
  store i32 %v3_918c, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_919c = call i32 @function_127a0(i8* %tmp168, i32 %v0_9190, i32 %v3_918c)
  store i32 %v4_919c, i32* %r0.global-to-local, align 4
  %v2_91a4 = icmp eq i32 %v4_919c, -1
  store i1 %v2_91a4, i1* %cpsr_c.global-to-local, align 1
  %v7_91a4 = icmp eq i32 %v4_919c, -1
  store i1 %v7_91a4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_91a4, label %.thread26, label %dec_label_pc_91b0

dec_label_pc_91b0:                                ; preds = %.thread25
  %v0_91b0 = load i32, i32* @r7, align 4
  store i32 %v0_91b0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_91b8 = inttoptr i32 %v0_91b0 to i32*
  %v3_91b8 = call i32 @function_119c0(i32 44, i32* %v2_91b8)
  %v0_91bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91bc, i32* @r1, align 4
  store i32 %v3_91b8, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_91c8 = call i32 @function_127a0(i8* %tmp168, i32 %v0_91bc, i32 %v3_91b8)
  store i32 %v4_91c8, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %ip.global-to-local, align 4
  %v2_91d0 = add i32 %v4_91c8, %v2_823c
  %v3_91d0 = inttoptr i32 %v2_91d0 to i8*
  %v4_91d0 = load i8, i8* %v3_91d0, align 1
  store i32 %v2_823c, i32* @lr, align 4
  %v2_91d8 = icmp ugt i8 %v4_91d0, 31
  store i1 %v2_91d8, i1* %cpsr_c.global-to-local, align 1
  %v7_91d8 = icmp eq i8 %v4_91d0, 32
  store i1 %v7_91d8, i1* %cpsr_z.global-to-local, align 1
  %v2_91e0 = zext i1 %v7_91d8 to i32
  %v2_91e0.v4_91c8 = add i32 %v2_91e0, %v4_91c8
  store i32 %v2_91e0.v4_91c8, i32* @r4, align 4
  %v2_91e4 = add i32 %v2_91e0.v4_91c8, %v2_823c
  store i32 %v2_91e4, i32* @r5, align 4
  store i32 %v2_91e4, i32* %r0.global-to-local, align 4
  %v1_91ec = load i32, i32* %fp.global-to-local, align 4
  %v2_91ec = sub i32 %v1_91ec, %v2_91e0.v4_91c8
  store i32 %v2_91ec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_91f8 = call i32 @function_12508(i32 %v2_91e4, i32 %v2_91ec, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_91f8, i32* %r0.global-to-local, align 4
  %v2_91fc = icmp eq i32 %v5_91f8, -1
  store i1 %v2_91fc, i1* %cpsr_c.global-to-local, align 1
  %v7_91fc = icmp eq i32 %v5_91f8, -1
  store i1 %v7_91fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_91fc, label %.thread26, label %dec_label_pc_9204

dec_label_pc_9204:                                ; preds = %dec_label_pc_91b0
  %v2_9204 = icmp ne i32 %v5_91f8, 0
  store i1 %v2_9204, i1* %cpsr_c.global-to-local, align 1
  %v7_9204 = icmp eq i32 %v5_91f8, 1
  store i1 %v7_9204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %r1.global-to-local, align 4
  %v7_920c = icmp slt i32 %v5_91f8, 2
  br i1 %v7_920c, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_9204
  %v9_920c = add i32 %v5_91f8, -2
  store i32 %v9_920c, i32* %r0.global-to-local, align 4
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_9204, %bb187
  %v1_9214 = phi i32 [ %v5_91f8, %dec_label_pc_9204 ], [ %v9_920c, %bb187 ]
  store i32 %v2_86d0, i32* %r1.global-to-local, align 4
  %v2_9214 = add i32 %v1_9214, %v2_86d0
  %v1_9218 = load i32, i32* @r4, align 4
  %v2_9218 = add i32 %v2_9214, %v1_9218
  store i32 %v2_9218, i32* %r3.global-to-local, align 4
  %v0_921c = load i32, i32* @r7, align 4
  %v1_921c = trunc i32 %v0_921c to i8
  %v3_921c = load i32, i32* @r6, align 4
  %v4_921c = add i32 %v3_921c, %v2_9218
  %v5_921c = inttoptr i32 %v4_921c to i8*
  store i8 %v1_921c, i8* %v5_921c, align 1
  %v0_9220 = load i32, i32* @r5, align 4
  store i32 %v0_9220, i32* %r0.global-to-local, align 4
  %v1_9224 = inttoptr i32 %v0_9220 to i8*
  %v2_9224 = call i32 @function_12450(i8* %v1_9224)
  %v0_9228 = load i32, i32* @r7, align 4
  store i32 %v0_9228, i32* %r1.global-to-local, align 4
  store i32 %v2_9224, i32* @r4, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_9234 = inttoptr i32 %v0_9228 to i32*
  %v3_9234 = call i32 @function_119c0(i32 45, i32* %v2_9234)
  %v0_9238 = load i32, i32* @r4, align 4
  store i32 %v0_9238, i32* @r1, align 4
  store i32 %v3_9234, i32* %r2.global-to-local, align 4
  %v0_9240 = load i32, i32* @r5, align 4
  store i32 %v0_9240, i32* %r0.global-to-local, align 4
  %v3_9244 = inttoptr i32 %v0_9240 to i8*
  %v4_9244 = call i32 @function_127a0(i8* %v3_9244, i32 %v0_9238, i32 %v3_9234)
  store i32 %v4_9244, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9248 = icmp eq i32 %v4_9244, 0
  store i1 %v2_9248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9248, label %.thread26, label %bb189

bb189:                                            ; preds = %bb188
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9250 = load i32, i32* @sl, align 4
  %v3_9250 = add i32 %v2_9250, 8
  %v4_9250 = inttoptr i32 %v3_9250 to i32*
  store i32 1, i32* %v4_9250, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb188, %dec_label_pc_91b0, %.thread25, %bb189
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_925c = call i32 @function_119c0(i32 43, i32* null)
  %v0_9260 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9260, i32* @r1, align 4
  store i32 %v3_925c, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_926c = call i32 @function_127a0(i8* %tmp168, i32 %v0_9260, i32 %v3_925c)
  store i32 %v4_926c, i32* %r0.global-to-local, align 4
  %v2_9270 = icmp eq i32 %v4_926c, -1
  store i1 %v2_9270, i1* %cpsr_c.global-to-local, align 1
  %v7_9270 = icmp eq i32 %v4_926c, -1
  store i1 %v7_9270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9270, label %.thread, label %dec_label_pc_9288

.thread:                                          ; preds = %.thread26
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9280 = load i32, i32* @sl, align 4
  %v3_9280 = add i32 %v2_9280, 12
  %v4_9280 = inttoptr i32 %v3_9280 to i32*
  store i32 0, i32* %v4_9280, align 4
  br label %dec_label_pc_930c

dec_label_pc_9288:                                ; preds = %.thread26
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_9290 = call i32 @function_119c0(i32 43, i32* null)
  %v0_9294 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9294, i32* @r1, align 4
  store i32 %v3_9290, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_92a0 = call i32 @function_127a0(i8* %tmp168, i32 %v0_9294, i32 %v3_9290)
  store i32 %v4_92a0, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %r2.global-to-local, align 4
  %v2_92a8 = add i32 %v4_92a0, %v2_823c
  %v3_92a8 = inttoptr i32 %v2_92a8 to i8*
  %v4_92a8 = load i8, i8* %v3_92a8, align 1
  %v2_92ac = icmp ugt i8 %v4_92a8, 31
  store i1 %v2_92ac, i1* %cpsr_c.global-to-local, align 1
  %v7_92ac = icmp eq i8 %v4_92a8, 32
  store i1 %v7_92ac, i1* %cpsr_z.global-to-local, align 1
  %v2_92b8 = zext i1 %v7_92ac to i32
  %v2_92b8.v4_92a0 = add i32 %v2_92b8, %v4_92a0
  store i32 %v2_92b8.v4_92a0, i32* @r4, align 4
  %v2_92bc = add i32 %v2_92b8.v4_92a0, %v2_823c
  store i32 %v2_92bc, i32* @r5, align 4
  store i32 %v2_92bc, i32* %r0.global-to-local, align 4
  %v1_92c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_92c4 = sub i32 %v1_92c4, %v2_92b8.v4_92a0
  store i32 %v2_92c4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_92d0 = call i32 @function_12508(i32 %v2_92bc, i32 %v2_92c4, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_92d0, i32* %r0.global-to-local, align 4
  %v2_92d4 = icmp eq i32 %v5_92d0, -1
  store i1 %v2_92d4, i1* %cpsr_c.global-to-local, align 1
  %v7_92d4 = icmp eq i32 %v5_92d0, -1
  store i1 %v7_92d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92d4, label %dec_label_pc_930c, label %dec_label_pc_92dc

dec_label_pc_92dc:                                ; preds = %dec_label_pc_9288
  %v2_92dc = icmp ne i32 %v5_92d0, 0
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v7_92dc = icmp eq i32 %v5_92d0, 1
  store i1 %v7_92dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %ip.global-to-local, align 4
  %v7_92e4 = icmp slt i32 %v5_92d0, 2
  br i1 %v7_92e4, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_92dc
  %v9_92e4 = add i32 %v5_92d0, -2
  store i32 %v9_92e4, i32* %r0.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_92dc, %bb190
  %v1_92ec = phi i32 [ %v5_92d0, %dec_label_pc_92dc ], [ %v9_92e4, %bb190 ]
  store i32 %v2_86d0, i32* %ip.global-to-local, align 4
  %v2_92ec = add i32 %v1_92ec, %v2_86d0
  %v1_92f0 = load i32, i32* @r4, align 4
  %v2_92f0 = add i32 %v2_92ec, %v1_92f0
  store i32 %v2_92f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_92f8 = load i32, i32* @r5, align 4
  store i32 %v0_92f8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9300 = load i32, i32* @r6, align 4
  %v4_9300 = add i32 %v3_9300, %v2_92f0
  %v5_9300 = inttoptr i32 %v4_9300 to i8*
  store i8 0, i8* %v5_9300, align 1
  %v2_9304 = inttoptr i32 %v0_92f8 to i8*
  %v3_9304 = call i32 @function_12574(i8* %v2_9304, i32 10)
  store i32 %v3_9304, i32* %r0.global-to-local, align 4
  %v1_9308 = load i32, i32* @sl, align 4
  %v2_9308 = add i32 %v1_9308, 12
  %v3_9308 = inttoptr i32 %v2_9308 to i32*
  store i32 %v3_9304, i32* %v3_9308, align 4
  br label %dec_label_pc_930c

dec_label_pc_930c:                                ; preds = %.thread, %dec_label_pc_9288, %bb191
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9310

dec_label_pc_9310:                                ; preds = %dec_label_pc_94dc, %dec_label_pc_945c, %dec_label_pc_930c
  %v1_931c = phi i32 [ 0, %dec_label_pc_930c ], [ %v0_945c, %dec_label_pc_945c ], [ %v1_931c.pre.pre, %dec_label_pc_94dc ]
  store i32 %v2_823c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_931c = add i32 %v1_931c, %v2_823c
  store i32 %v2_931c, i32* @r4, align 4
  %v3_9320 = call i32 @function_119c0(i32 42, i32* null)
  %v0_9324 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9324, i32* @r1, align 4
  store i32 %v3_9320, i32* %r2.global-to-local, align 4
  %v0_932c = load i32, i32* @r4, align 4
  store i32 %v0_932c, i32* %r0.global-to-local, align 4
  %v3_9330 = inttoptr i32 %v0_932c to i8*
  %v4_9330 = call i32 @function_127a0(i8* %v3_9330, i32 %v0_9324, i32 %v3_9320)
  store i32 %v4_9330, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_933c = icmp eq i32 %v4_9330, -1
  store i1 %v2_933c, i1* %cpsr_c.global-to-local, align 1
  %v7_933c = icmp eq i32 %v4_9330, -1
  store i1 %v7_933c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_933c, label %dec_label_pc_9548, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_9310
  %v0_9348 = load i32, i32* @sl, align 4
  %v1_9348 = add i32 %v0_9348, 16
  %v2_9348 = inttoptr i32 %v1_9348 to i32*
  %v3_9348 = load i32, i32* %v2_9348, align 4
  store i32 %v3_9348, i32* %r3.global-to-local, align 4
  %v2_934c = icmp ugt i32 %v3_9348, 3
  store i1 %v2_934c, i1* %cpsr_c.global-to-local, align 1
  %v7_934c = icmp eq i32 %v3_9348, 4
  store i1 %v7_934c, i1* %cpsr_z.global-to-local, align 1
  %v8_9350 = icmp sgt i32 %v3_9348, 4
  br i1 %v8_9350, label %dec_label_pc_9548, label %dec_label_pc_9354

dec_label_pc_9354:                                ; preds = %dec_label_pc_9348
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v3_935c = call i32 @function_119c0(i32 42, i32* null)
  %v0_9360 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9360, i32* @r1, align 4
  store i32 %v3_935c, i32* %r2.global-to-local, align 4
  %v0_9368 = load i32, i32* @r4, align 4
  store i32 %v0_9368, i32* %r0.global-to-local, align 4
  %v3_936c = inttoptr i32 %v0_9368 to i8*
  %v4_936c = call i32 @function_127a0(i8* %v3_936c, i32 %v0_9360, i32 %v3_935c)
  store i32 %v4_936c, i32* %r0.global-to-local, align 4
  %v1_9374 = load i32, i32* @r5, align 4
  %v2_9374 = add i32 %v1_9374, %v4_936c
  store i32 %v2_9374, i32* @r8, align 4
  %v2_9378 = add i32 %v2_9374, %v2_823c
  %v3_9378 = inttoptr i32 %v2_9378 to i8*
  %v4_9378 = load i8, i8* %v3_9378, align 1
  %v6_9378 = zext i8 %v4_9378 to i32
  store i32 %v6_9378, i32* %r3.global-to-local, align 4
  %v2_937c = icmp ugt i8 %v4_9378, 31
  store i1 %v2_937c, i1* %cpsr_c.global-to-local, align 1
  %v7_937c = icmp eq i8 %v4_9378, 32
  store i1 %v7_937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_937c, label %bb192, label %bb193

bb192:                                            ; preds = %dec_label_pc_9354
  %v2_9380 = add i32 %v4_936c, 1
  store i32 %v2_9380, i32* %r0.global-to-local, align 4
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_9354, %bb192
  %v1_9390 = phi i32 [ %v4_936c, %dec_label_pc_9354 ], [ %v2_9380, %bb192 ]
  %v1_9384 = load i32, i32* %fp.global-to-local, align 4
  %v2_9384 = sub i32 %v1_9384, %v1_9374
  store i32 %v2_9384, i32* %r3.global-to-local, align 4
  %v2_9388 = sub i32 %v2_9384, %v1_9390
  store i32 %v2_9388, i32* @r7, align 4
  %v0_938c = load i32, i32* @r4, align 4
  %v2_938c = add i32 %v0_938c, %v1_9390
  store i32 %v2_938c, i32* @r6, align 4
  br i1 %v7_937c, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  %v3_9390 = add i32 %v1_9390, %v1_9374
  store i32 %v3_9390, i32* @r8, align 4
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  store i32 %v2_9388, i32* %r1.global-to-local, align 4
  store i32 %v2_938c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_93a4 = call i32 @function_12508(i32 %v2_938c, i32 %v2_9388, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_93a4, i32* %r0.global-to-local, align 4
  %v2_93a8 = icmp eq i32 %v5_93a4, -1
  store i1 %v2_93a8, i1* %cpsr_c.global-to-local, align 1
  %v7_93a8 = icmp eq i32 %v5_93a4, -1
  store i1 %v7_93a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_93a4, i32* @r4, align 4
  br i1 %v7_93a8, label %dec_label_pc_945c, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %bb195
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v2_93b8 = icmp ne i32 %v5_93a4, 0
  store i1 %v2_93b8, i1* %cpsr_c.global-to-local, align 1
  %v7_93b8 = icmp eq i32 %v5_93a4, 1
  store i1 %v7_93b8, i1* %cpsr_z.global-to-local, align 1
  %v7_93bc = icmp slt i32 %v5_93a4, 2
  br i1 %v7_93bc, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_93b4
  %v9_93bc = add i32 %v5_93a4, -2
  store i32 %v9_93bc, i32* @r4, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_93b4, %bb196
  %v1_93c0 = load i32, i32* @r8, align 4
  %v2_93c0 = add i32 %v1_93c0, %v2_823c
  store i32 %v2_93c0, i32* @r5, align 4
  %v0_93c4 = load i32, i32* @r6, align 4
  store i32 %v0_93c4, i32* %r0.global-to-local, align 4
  %v0_93c8 = load i32, i32* @r7, align 4
  store i32 %v0_93c8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_93d4 = call i32 @function_12508(i32 %v0_93c4, i32 %v0_93c8, i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32 1)
  store i32 %v4_93d4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_93d8 = icmp eq i32 %v4_93d4, 0
  store i1 %v2_93d8, i1* %cpsr_z.global-to-local, align 1
  %tmp198 = icmp slt i32 %v4_93d4, 1
  br i1 %tmp198, label %.dec_label_pc_93f8_crit_edge, label %dec_label_pc_93e0

.dec_label_pc_93f8_crit_edge:                     ; preds = %bb197
  %v1_9400.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_93f8

dec_label_pc_93e0:                                ; preds = %bb197
  %v0_93e0 = load i32, i32* @r6, align 4
  store i32 %v0_93e0, i32* %r0.global-to-local, align 4
  %v0_93e4 = load i32, i32* @r7, align 4
  store i32 %v0_93e4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_93f0 = call i32 @function_12508(i32 %v0_93e0, i32 %v0_93e4, i32 ptrtoint (i32* @global_var_182ac.36 to i32), i32 1)
  store i32 %v4_93f0, i32* %r0.global-to-local, align 4
  %v1_93f4 = add i32 %v4_93f0, -1
  store i32 %v1_93f4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_93f8

dec_label_pc_93f8:                                ; preds = %.dec_label_pc_93f8_crit_edge, %dec_label_pc_93e0
  %v1_9400 = phi i32 [ %v1_9400.pre, %.dec_label_pc_93f8_crit_edge ], [ %v1_93f4, %dec_label_pc_93e0 ]
  %v2_9400 = add i32 %v1_9400, %v2_86d0
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_940c = load i32, i32* @r8, align 4
  %v2_940c = add i32 %v2_9400, %v1_940c
  store i32 %v2_940c, i32* %r3.global-to-local, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v4_9414 = add i32 %v2_940c, -20773
  %v5_9414 = inttoptr i32 %v4_9414 to i8*
  store i8 0, i8* %v5_9414, align 1
  %storemerge6.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9434.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9434

dec_label_pc_9420:                                ; preds = %dec_label_pc_9434
  br i1 %v7_9424, label %dec_label_pc_9464, label %dec_label_pc_942c

dec_label_pc_942c:                                ; preds = %dec_label_pc_9420
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9434

dec_label_pc_9434:                                ; preds = %dec_label_pc_93f8, %dec_label_pc_942c
  %v0_9434 = phi i32 [ %v0_9420, %dec_label_pc_942c ], [ %v0_9434.pre, %dec_label_pc_93f8 ]
  %storemerge6 = phi i32 [ %v1_9448, %dec_label_pc_942c ], [ %storemerge6.pre, %dec_label_pc_93f8 ]
  store i32 %storemerge6, i32* %stack_var_-44, align 4
  store i32 %v0_9434, i32* %r0.global-to-local, align 4
  %v1_9438 = inttoptr i32 %v0_9434 to i8*
  %v2_9438 = call i32 @function_12450(i8* %v1_9438)
  store i32 %v2_9438, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9440 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9440, i32* %r4.global-to-local, align 4
  %v3_9444 = icmp uge i32 %v2_9438, %v3_9440
  store i1 %v3_9444, i1* %cpsr_c.global-to-local, align 1
  %v9_9444 = icmp eq i32 %v2_9438, %v3_9440
  store i1 %v9_9444, i1* %cpsr_z.global-to-local, align 1
  %v1_9448 = add i32 %v3_9440, 1
  store i32 %v1_9448, i32* %ip.global-to-local, align 4
  %v8_944c = icmp sgt i32 %v2_9438, %v3_9440
  %v0_9420 = load i32, i32* @r5, align 4
  %v2_9420 = add i32 %v0_9420, %v3_9440
  %v3_9420 = inttoptr i32 %v2_9420 to i8*
  %v4_9420 = load i8, i8* %v3_9420, align 1
  %v6_9420 = zext i8 %v4_9420 to i32
  store i32 %v6_9420, i32* %r3.global-to-local, align 4
  %v2_9424 = icmp ugt i8 %v4_9420, 60
  store i1 %v2_9424, i1* %cpsr_c.global-to-local, align 1
  %v7_9424 = icmp eq i8 %v4_9420, 61
  store i1 %v7_9424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_944c, label %dec_label_pc_9420, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9434
  br i1 %v7_9424, label %dec_label_pc_9464, label %dec_label_pc_945c

dec_label_pc_945c:                                ; preds = %dec_label_pc_94a8, %dec_label_pc_94cc, %dec_label_pc_9450, %bb195
  %v0_945c = load i32, i32* @r8, align 4
  store i32 %v0_945c, i32* @r5, align 4
  br label %dec_label_pc_9310

dec_label_pc_9464:                                ; preds = %dec_label_pc_9420, %dec_label_pc_9450
  %v0_9464 = load i32, i32* @sl, align 4
  %v1_9464 = add i32 %v0_9464, 16
  %v2_9464 = inttoptr i32 %v1_9464 to i32*
  %v3_9464 = load i32, i32* %v2_9464, align 4
  store i32 %v3_9464, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9470 = icmp eq i32 %v3_9464, 0
  store i1 %v2_9470, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp199 = icmp slt i32 %v3_9464, 1
  br i1 %tmp199, label %dec_label_pc_94cc, label %dec_label_pc_947c

dec_label_pc_947c:                                ; preds = %dec_label_pc_9464
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_9484:                                ; preds = %dec_label_pc_94a8
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9488 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9488, i32* %r3.global-to-local, align 4
  %v0_948c = load i32, i32* @sl, align 4
  %v1_948c = add i32 %v0_948c, 16
  %v2_948c = inttoptr i32 %v1_948c to i32*
  %v3_948c = load i32, i32* %v2_948c, align 4
  %v1_9490 = add i32 %v3_9488, 1
  store i32 %v1_9490, i32* %ip.global-to-local, align 4
  %v3_9494 = icmp uge i32 %v3_948c, %v1_9490
  store i1 %v3_9494, i1* %cpsr_c.global-to-local, align 1
  %v9_9494 = icmp eq i32 %v3_948c, %v1_9490
  store i1 %v9_9494, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i32 %v1_9490, i32* %r1.global-to-local, align 4
  store i32 %v1_9490, i32* %stack_var_-44, align 4
  %v7_94a4 = icmp sgt i32 %v3_948c, %v1_9490
  %v0_94b4.pre = load i32, i32* @r5, align 4
  br i1 %v7_94a4, label %dec_label_pc_9484.dec_label_pc_94a8_crit_edge, label %dec_label_pc_94cc

dec_label_pc_9484.dec_label_pc_94a8_crit_edge:    ; preds = %dec_label_pc_9484
  %v0_94b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9484.dec_label_pc_94a8_crit_edge, %dec_label_pc_947c
  %v0_94b8 = phi i32 [ %v0_94b8.pre, %dec_label_pc_9484.dec_label_pc_94a8_crit_edge ], [ %v3_9440, %dec_label_pc_947c ]
  %v0_94b4 = phi i32 [ %v0_94b4.pre, %dec_label_pc_9484.dec_label_pc_94a8_crit_edge ], [ %v0_9420, %dec_label_pc_947c ]
  %v0_94a8 = phi i32 [ %v1_9490, %dec_label_pc_9484.dec_label_pc_94a8_crit_edge ], [ 0, %dec_label_pc_947c ]
  %v1_94a8 = and i32 %v0_94a8, 33554432
  %v2_94a8 = icmp ne i32 %v1_94a8, 0
  store i1 %v2_94a8, i1* %cpsr_c.global-to-local, align 1
  %v3_94a8 = mul i32 %v0_94a8, 128
  %v1_94ac = add i32 %v3_94a8, 1472
  %v0_94b0 = load i32, i32* %sb.global-to-local, align 4
  %v2_94b0 = add i32 %v1_94ac, %v0_94b0
  store i32 %v2_94b0, i32* %r1.global-to-local, align 4
  store i32 %v0_94b4, i32* %r0.global-to-local, align 4
  store i32 %v0_94b8, i32* %r2.global-to-local, align 4
  %v3_94bc = inttoptr i32 %v0_94b4 to i8*
  %v4_94bc = call i32 @function_128b0(i8* %v3_94bc, i32 %v2_94b0, i32 %v0_94b8)
  store i32 %v4_94bc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94c0 = icmp eq i32 %v4_94bc, 0
  store i1 %v2_94c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94c0, label %dec_label_pc_9484, label %dec_label_pc_945c

dec_label_pc_94cc:                                ; preds = %dec_label_pc_9484, %dec_label_pc_9464
  %v0_94cc = phi i32 [ %v0_9420, %dec_label_pc_9464 ], [ %v0_94b4.pre, %dec_label_pc_9484 ]
  store i32 %v0_94cc, i32* %r0.global-to-local, align 4
  %v1_94d0 = inttoptr i32 %v0_94cc to i8*
  %v2_94d0 = call i32 @function_12450(i8* %v1_94d0)
  store i32 %v2_94d0, i32* %r0.global-to-local, align 4
  %v2_94d4 = icmp ugt i32 %v2_94d0, 126
  store i1 %v2_94d4, i1* %cpsr_c.global-to-local, align 1
  %v7_94d4 = icmp eq i32 %v2_94d0, 127
  store i1 %v7_94d4, i1* %cpsr_z.global-to-local, align 1
  %v8_94d8 = icmp sgt i32 %v2_94d0, 127
  br i1 %v8_94d8, label %dec_label_pc_945c, label %dec_label_pc_94dc

dec_label_pc_94dc:                                ; preds = %dec_label_pc_94cc
  %v0_94dc = load i32, i32* @sl, align 4
  %v1_94dc = add i32 %v0_94dc, 16
  %v2_94dc = inttoptr i32 %v1_94dc to i32*
  %v3_94dc = load i32, i32* %v2_94dc, align 4
  %v1_94e0 = and i32 %v3_94dc, 33554432
  %v2_94e0 = icmp ne i32 %v1_94e0, 0
  store i1 %v2_94e0, i1* %cpsr_c.global-to-local, align 1
  %v3_94e0 = mul i32 %v3_94dc, 128
  %v1_94e4 = add i32 %v3_94e0, 1472
  %v0_94e8 = load i32, i32* @r5, align 4
  store i32 %v0_94e8, i32* %r1.global-to-local, align 4
  %v0_94ec = load i32, i32* %sb.global-to-local, align 4
  %v2_94ec = add i32 %v1_94e4, %v0_94ec
  store i32 %v2_94ec, i32* @r0, align 4
  %v2_94f0 = inttoptr i32 %v2_94ec to i8*
  %v3_94f0 = call i32 @function_12478(i8* %v2_94f0, i32 %v0_94e8)
  store i32 %v3_94f0, i32* %r0.global-to-local, align 4
  %v0_94f4 = load i32, i32* @sl, align 4
  %v1_94f4 = add i32 %v0_94f4, 16
  %v2_94f4 = inttoptr i32 %v1_94f4 to i32*
  %v3_94f4 = load i32, i32* %v2_94f4, align 4
  %v0_94f8 = load i32, i32* @r8, align 4
  store i32 %v0_94f8, i32* @r5, align 4
  %v1_94fc = add i32 %v3_94f4, 1
  store i32 %v1_94fc, i32* %r3.global-to-local, align 4
  store i32 %v1_94fc, i32* %v2_94f4, align 4
  %v1_931c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9310

dec_label_pc_9508:                                ; preds = %dec_label_pc_9628
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_950c = load i32, i32* @r4, align 4
  %v2_950c = inttoptr i32 %v1_950c to i32*
  store i32 104, i32* %v2_950c, align 4
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9654, %dec_label_pc_8fe8, %dec_label_pc_9508
  %v0_9510 = load i32, i32* @sl, align 4
  %v1_9510 = add i32 %v0_9510, -1452
  %v2_9510 = inttoptr i32 %v1_9510 to i32*
  %v3_9510 = load i32, i32* %v2_9510, align 4
  store i32 %v3_9510, i32* %r0.global-to-local, align 4
  %v1_9514 = call i32 @function_130b4(i32 %v3_9510)
  store i32 %v1_9514, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9520 = load i32, i32* @sl, align 4
  %v2_9520 = add i32 %v1_9520, -1452
  %v3_9520 = inttoptr i32 %v2_9520 to i32*
  store i32 -1, i32* %v3_9520, align 4
  %v0_9524 = load i32, i32* %r2.global-to-local, align 4
  %v1_9524 = trunc i32 %v0_9524 to i8
  %v2_9524 = load i32, i32* @sl, align 4
  %v3_9524 = add i32 %v2_9524, -1448
  %v4_9524 = inttoptr i32 %v3_9524 to i8*
  store i8 %v1_9524, i8* %v4_9524, align 1
  br label %dec_label_pc_87ac

dec_label_pc_952c:                                ; preds = %dec_label_pc_8594
  store i32 %v1_8594, i32* %r3.global-to-local, align 4
  %v1_9530 = trunc i32 %v1_8594 to i8
  store i8 %v1_9530, i8* %v2_85cc, align 1
  %v0_9534 = load i32, i32* @r6, align 4
  %v1_9534 = add i32 %v0_9534, -1452
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  %v3_9534 = load i32, i32* %v2_9534, align 4
  store i32 %v3_9534, i32* %r0.global-to-local, align 4
  %v1_9538 = call i32 @function_130b4(i32 %v3_9534)
  store i32 %v1_9538, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9540 = load i32, i32* @r6, align 4
  %v2_9540 = add i32 %v1_9540, -1452
  %v3_9540 = inttoptr i32 %v2_9540 to i32*
  store i32 -1, i32* %v3_9540, align 4
  br label %dec_label_pc_85b4

dec_label_pc_9548:                                ; preds = %dec_label_pc_9348, %dec_label_pc_9310
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v3_9550 = call i32 @function_119c0(i32 41, i32* null)
  %v0_9554 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9554, i32* @r1, align 4
  store i32 %v3_9550, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_9560 = call i32 @function_127a0(i8* %tmp168, i32 %v0_9554, i32 %v3_9550)
  store i32 %v4_9560, i32* %r0.global-to-local, align 4
  %v2_9564 = icmp eq i32 %v4_9560, -1
  store i1 %v2_9564, i1* %cpsr_c.global-to-local, align 1
  %v7_9564 = icmp eq i32 %v4_9560, -1
  store i1 %v7_9564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9564, label %dec_label_pc_96d8, label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_9548
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v3_9574 = call i32 @function_119c0(i32 41, i32* null)
  %v0_9578 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9578, i32* @r1, align 4
  store i32 %v3_9574, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_9584 = call i32 @function_127a0(i8* %tmp168, i32 %v0_9578, i32 %v3_9574)
  store i32 %v4_9584, i32* %r0.global-to-local, align 4
  %v2_958c = add i32 %v4_9584, %v2_823c
  %v3_958c = inttoptr i32 %v2_958c to i8*
  %v4_958c = load i8, i8* %v3_958c, align 1
  %v2_9594 = icmp ugt i8 %v4_958c, 31
  store i1 %v2_9594, i1* %cpsr_c.global-to-local, align 1
  %v7_9594 = icmp eq i8 %v4_958c, 32
  store i1 %v7_9594, i1* %cpsr_z.global-to-local, align 1
  %v2_959c = zext i1 %v7_9594 to i32
  %v2_959c.v4_9584 = add i32 %v2_959c, %v4_9584
  store i32 %v2_959c.v4_9584, i32* @r4, align 4
  %v2_95a0 = add i32 %v2_959c.v4_9584, %v2_823c
  store i32 %v2_95a0, i32* @r6, align 4
  store i32 %v2_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_95a8 = sub i32 %v1_95a8, %v2_959c.v4_9584
  store i32 %v2_95a8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95b4 = call i32 @function_12508(i32 %v2_95a0, i32 %v2_95a8, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_95b4, i32* %r0.global-to-local, align 4
  %v2_95b8 = icmp eq i32 %v5_95b4, -1
  store i1 %v2_95b8, i1* %cpsr_c.global-to-local, align 1
  %v7_95b8 = icmp eq i32 %v5_95b4, -1
  store i1 %v7_95b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95b8, label %dec_label_pc_96d8, label %dec_label_pc_95c0

dec_label_pc_95c0:                                ; preds = %dec_label_pc_956c
  %v2_95c0 = icmp ne i32 %v5_95b4, 0
  store i1 %v2_95c0, i1* %cpsr_c.global-to-local, align 1
  %v7_95c0 = icmp eq i32 %v5_95b4, 1
  store i1 %v7_95c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %r2.global-to-local, align 4
  %v7_95c8 = icmp slt i32 %v5_95b4, 2
  br i1 %v7_95c8, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_95c0
  %v9_95c8 = add i32 %v5_95b4, -2
  store i32 %v9_95c8, i32* %r0.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_95c0, %bb200
  %v1_95d0 = phi i32 [ %v5_95b4, %dec_label_pc_95c0 ], [ %v9_95c8, %bb200 ]
  %v2_95d0 = add i32 %v1_95d0, %v2_86d0
  store i32 -20773, i32* @lr, align 4
  %v1_95d8 = add i32 %v1_95d0, 1
  store i32 %v1_95d8, i32* @r5, align 4
  %v1_95dc = load i32, i32* @r4, align 4
  %v2_95dc = add i32 %v2_95d0, %v1_95dc
  store i32 %v2_95dc, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_95e4 = load i32, i32* @r6, align 4
  store i32 %v0_95e4, i32* %r0.global-to-local, align 4
  store i32 %v1_95d8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_182b0.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_95f4 = add i32 %v2_95dc, -20773
  %v5_95f4 = inttoptr i32 %v4_95f4 to i8*
  store i8 0, i8* %v5_95f4, align 1
  %v5_95f8 = call i32 @function_12508(i32 %v0_95e4, i32 %v1_95d8, i32 ptrtoint ([5 x i8]* @global_var_182b0.40 to i32), i32 4)
  store i32 %v5_95f8, i32* %r0.global-to-local, align 4
  %v2_95fc = icmp ugt i32 %v5_95f8, 3
  store i1 %v2_95fc, i1* %cpsr_c.global-to-local, align 1
  %v7_95fc = icmp eq i32 %v5_95f8, 4
  store i1 %v7_95fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95fc, label %dec_label_pc_99c0, label %dec_label_pc_9604

dec_label_pc_9604:                                ; preds = %bb201
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v1_9608 = load i32, i32* @r4, align 4
  %v2_9608 = add i32 %v1_9608, %v2_823c
  %v3_9608 = inttoptr i32 %v2_9608 to i8*
  %v4_9608 = load i8, i8* %v3_9608, align 1
  %v6_9608 = zext i8 %v4_9608 to i32
  store i32 %v6_9608, i32* %r3.global-to-local, align 4
  %v2_960c = icmp ugt i8 %v4_9608, 46
  store i1 %v2_960c, i1* %cpsr_c.global-to-local, align 1
  %v7_960c = icmp eq i8 %v4_9608, 47
  store i1 %v7_960c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_960c, label %dec_label_pc_9bc0, label %dec_label_pc_9614

dec_label_pc_9614:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9bf0, %dec_label_pc_9bc0, %dec_label_pc_9a90, %dec_label_pc_9a74, %dec_label_pc_9604, %dec_label_pc_9c08, %dec_label_pc_9abc
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9618 = load i32, i32* @sl, align 4
  %v3_9618 = add i32 %v2_9618, -1448
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 1, i8* %v4_9618, align 1
  br label %dec_label_pc_87ac

dec_label_pc_9620:                                ; preds = %dec_label_pc_87a4
  %v0_9620 = call i32 @function_134dc()
  store i32 %v0_9620, i32* %r0.global-to-local, align 4
  store i32 %v0_9620, i32* @r4, align 4
  br label %dec_label_pc_9628

dec_label_pc_9628:                                ; preds = %dec_label_pc_964c, %dec_label_pc_9620
  %v1_962c = phi i32 [ %v0_9620, %dec_label_pc_9620 ], [ %v0_9654, %dec_label_pc_964c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_962c = inttoptr i32 %v1_962c to i32*
  store i32 0, i32* %v2_962c, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v0_9634 = load i32, i32* @sl, align 4
  %v1_9634 = add i32 %v0_9634, -1452
  %v2_9634 = inttoptr i32 %v1_9634 to i32*
  %v3_9634 = load i32, i32* %v2_9634, align 4
  store i32 %v3_9634, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_963c = load i32, i32* %r3.global-to-local, align 4
  %v1_963c = add i32 %v0_963c, 16384
  store i32 %v1_963c, i32* %r3.global-to-local, align 4
  %v4_9640 = call i32 @function_13794(i32 %v3_9634, i32 %v2_823c, i32 10240, i32 %v1_963c)
  store i32 %v4_9640, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9644 = icmp eq i32 %v4_9640, 0
  store i1 %v2_9644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9644, label %dec_label_pc_9508, label %dec_label_pc_964c

dec_label_pc_964c:                                ; preds = %dec_label_pc_9628
  %v3_964c = icmp eq i32 %v4_9640, -1
  store i1 %v3_964c, i1* %cpsr_c.global-to-local, align 1
  %v8_964c = icmp eq i32 %v4_9640, -1
  store i1 %v8_964c, i1* %cpsr_z.global-to-local, align 1
  %v0_9654 = load i32, i32* @r4, align 4
  br i1 %v3_964c, label %dec_label_pc_9654, label %dec_label_pc_9628

dec_label_pc_9654:                                ; preds = %dec_label_pc_964c
  %v1_9654 = inttoptr i32 %v0_9654 to i32*
  %v2_9654 = load i32, i32* %v1_9654, align 4
  store i32 %v2_9654, i32* %r3.global-to-local, align 4
  %v2_9658 = icmp ugt i32 %v2_9654, 10
  store i1 %v2_9658, i1* %cpsr_c.global-to-local, align 1
  %v7_9658 = icmp eq i32 %v2_9654, 11
  store i1 %v7_9658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9658, label %dec_label_pc_9660, label %dec_label_pc_9510

dec_label_pc_9660:                                ; preds = %dec_label_pc_9654
  %v0_9660 = load i32, i32* @sl, align 4
  %v1_9660 = add i32 %v0_9660, -1448
  %v2_9660 = inttoptr i32 %v1_9660 to i8*
  %v3_9660 = load i8, i8* %v2_9660, align 1
  %v4_9660 = zext i8 %v3_9660 to i32
  store i32 %v4_9660, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9664 = icmp eq i8 %v3_9660, 0
  store i1 %v2_9664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9664, label %dec_label_pc_87ac, label %dec_label_pc_9614

dec_label_pc_9670:                                ; preds = %dec_label_pc_8db4
  %v0_9670 = load i32, i32* %r3.global-to-local, align 4
  %v1_9670 = add i32 %v0_9670, 1
  store i32 %v1_9670, i32* %r3.global-to-local, align 4
  %v1_9674 = trunc i32 %v1_9670 to i8
  %v2_9674 = load i32, i32* @sl, align 4
  %v3_9674 = add i32 %v2_9674, -1448
  %v4_9674 = inttoptr i32 %v3_9674 to i8*
  store i8 %v1_9674, i8* %v4_9674, align 1
  br label %dec_label_pc_87ac

dec_label_pc_967c:                                ; preds = %dec_label_pc_8c2c
  %v0_967c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_967c, i32* @r0, align 4
  %v0_9680 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9680, i32* %r1.global-to-local, align 4
  %v2_9684 = inttoptr i32 %v0_967c to i8*
  %v3_9684 = call i32 @function_12478(i8* %v2_9684, i32 %v0_9680)
  store i32 %v3_9684, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c44

dec_label_pc_968c:                                ; preds = %dec_label_pc_8d34
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_9690 = load i32, i32* %fp.global-to-local, align 4
  %v2_9690 = inttoptr i32 %v1_9690 to i32*
  store i32 104, i32* %v2_9690, align 4
  %v0_9694 = load i32, i32* @sl, align 4
  %v1_9694 = add i32 %v0_9694, -1452
  %v2_9694 = inttoptr i32 %v1_9694 to i32*
  %v3_9694 = load i32, i32* %v2_9694, align 4
  store i32 %v3_9694, i32* %r0.global-to-local, align 4
  %v1_9698 = call i32 @function_130b4(i32 %v3_9694)
  store i32 %v1_9698, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96a4 = load i32, i32* @sl, align 4
  %v2_96a4 = add i32 %v1_96a4, -1452
  %v3_96a4 = inttoptr i32 %v2_96a4 to i32*
  store i32 -1, i32* %v3_96a4, align 4
  %v0_96a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_96a8 = trunc i32 %v0_96a8 to i8
  %v2_96a8 = load i32, i32* @sl, align 4
  %v3_96a8 = add i32 %v2_96a8, -1448
  %v4_96a8 = inttoptr i32 %v3_96a8 to i8*
  store i8 %v1_96a8, i8* %v4_96a8, align 1
  br label %dec_label_pc_87ac

dec_label_pc_96b0:                                ; preds = %dec_label_pc_8d5c
  %v0_96b0 = load i32, i32* %fp.global-to-local, align 4
  %v1_96b0 = inttoptr i32 %v0_96b0 to i32*
  %v2_96b0 = load i32, i32* %v1_96b0, align 4
  store i32 %v2_96b0, i32* %r3.global-to-local, align 4
  %v2_96b4 = icmp ugt i32 %v2_96b0, 10
  store i1 %v2_96b4, i1* %cpsr_c.global-to-local, align 1
  %v7_96b4 = icmp eq i32 %v2_96b0, 11
  store i1 %v7_96b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_96b4, label %dec_label_pc_87ac, label %dec_label_pc_96bc

dec_label_pc_96bc:                                ; preds = %dec_label_pc_96b0
  %v0_96bc = load i32, i32* @sl, align 4
  %v1_96bc = add i32 %v0_96bc, -1452
  %v2_96bc = inttoptr i32 %v1_96bc to i32*
  %v3_96bc = load i32, i32* %v2_96bc, align 4
  store i32 %v3_96bc, i32* %r0.global-to-local, align 4
  %v1_96c0 = call i32 @function_130b4(i32 %v3_96bc)
  store i32 %v1_96c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96cc = load i32, i32* @sl, align 4
  %v2_96cc = add i32 %v1_96cc, -1452
  %v3_96cc = inttoptr i32 %v2_96cc to i32*
  store i32 -1, i32* %v3_96cc, align 4
  %v0_96d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_96d0 = trunc i32 %v0_96d0 to i8
  %v2_96d0 = load i32, i32* @sl, align 4
  %v3_96d0 = add i32 %v2_96d0, -1448
  %v4_96d0 = inttoptr i32 %v3_96d0 to i8*
  store i8 %v1_96d0, i8* %v4_96d0, align 1
  br label %dec_label_pc_87ac

dec_label_pc_96d8:                                ; preds = %dec_label_pc_956c, %dec_label_pc_9548
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_96e0 = call i32 @function_119c0(i32 40, i32* null)
  %v0_96e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96e4, i32* @r1, align 4
  store i32 %v3_96e0, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_96f0 = call i32 @function_127a0(i8* %tmp168, i32 %v0_96e4, i32 %v3_96e0)
  store i32 %v4_96f0, i32* %r0.global-to-local, align 4
  %v2_96f8 = icmp eq i32 %v4_96f0, -1
  store i1 %v2_96f8, i1* %cpsr_c.global-to-local, align 1
  %v7_96f8 = icmp eq i32 %v4_96f0, -1
  store i1 %v7_96f8, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_96f8, label %dec_label_pc_98f8, label %dec_label_pc_9704

dec_label_pc_9704:                                ; preds = %dec_label_pc_96d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_970c = call i32 @function_119c0(i32 40, i32* null)
  %v0_9710 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9710, i32* @r1, align 4
  store i32 %v3_970c, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_971c = call i32 @function_127a0(i8* %tmp168, i32 %v0_9710, i32 %v3_970c)
  store i32 %v4_971c, i32* %r0.global-to-local, align 4
  %v2_9724 = add i32 %v4_971c, %v2_823c
  %v3_9724 = inttoptr i32 %v2_9724 to i8*
  %v4_9724 = load i8, i8* %v3_9724, align 1
  %v2_972c = icmp ugt i8 %v4_9724, 31
  store i1 %v2_972c, i1* %cpsr_c.global-to-local, align 1
  %v7_972c = icmp eq i8 %v4_9724, 32
  store i1 %v7_972c, i1* %cpsr_z.global-to-local, align 1
  %v2_9734 = zext i1 %v7_972c to i32
  %v2_9734.v4_971c = add i32 %v2_9734, %v4_971c
  store i32 %v2_9734.v4_971c, i32* @r4, align 4
  %v2_9738 = add i32 %v2_9734.v4_971c, %v2_823c
  store i32 %v2_9738, i32* @r5, align 4
  store i32 %v2_9738, i32* %r0.global-to-local, align 4
  %v1_9740 = load i32, i32* %fp.global-to-local, align 4
  %v2_9740 = sub i32 %v1_9740, %v2_9734.v4_971c
  store i32 %v2_9740, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_974c = call i32 @function_12508(i32 %v2_9738, i32 %v2_9740, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2)
  store i32 %v5_974c, i32* %r0.global-to-local, align 4
  %v2_9750 = icmp eq i32 %v5_974c, -1
  store i1 %v2_9750, i1* %cpsr_c.global-to-local, align 1
  %v7_9750 = icmp eq i32 %v5_974c, -1
  store i1 %v7_9750, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_974c, i32* @r7, align 4
  br i1 %v7_9750, label %dec_label_pc_98f8, label %dec_label_pc_975c

dec_label_pc_975c:                                ; preds = %dec_label_pc_9704
  %v2_975c = icmp ne i32 %v5_974c, 0
  store i1 %v2_975c, i1* %cpsr_c.global-to-local, align 1
  %v7_975c = icmp eq i32 %v5_974c, 1
  store i1 %v7_975c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %ip.global-to-local, align 4
  %v7_9764 = icmp slt i32 %v5_974c, 2
  br i1 %v7_9764, label %bb203, label %bb202

bb202:                                            ; preds = %dec_label_pc_975c
  %v9_9764 = add i32 %v5_974c, -2
  store i32 %v9_9764, i32* @r7, align 4
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_975c, %bb202
  %v1_976c = phi i32 [ %v5_974c, %dec_label_pc_975c ], [ %v9_9764, %bb202 ]
  store i32 %v2_86d0, i32* %ip.global-to-local, align 4
  %v2_976c = add i32 %v1_976c, %v2_86d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9774 = load i32, i32* @r4, align 4
  %v2_9774 = add i32 %v2_976c, %v1_9774
  store i32 %v2_9774, i32* %r2.global-to-local, align 4
  %v3_9778 = load i32, i32* @r6, align 4
  %v4_9778 = add i32 %v3_9778, %v2_9774
  %v5_9778 = inttoptr i32 %v4_9778 to i8*
  store i8 0, i8* %v5_9778, align 1
  store i32 %v10_82b0, i32* @lr, align 4
  %v0_9780 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_9780, i32* %stack_var_-44, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v1_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v1_9788, %v2_823c
  %v3_9788 = inttoptr i32 %v2_9788 to i8*
  %v4_9788 = load i8, i8* %v3_9788, align 1
  %v6_9788 = zext i8 %v4_9788 to i32
  store i32 %v6_9788, i32* %r0.global-to-local, align 4
  %v1_978c = add nsw i32 %v6_9788, -48
  store i32 %v1_978c, i32* %r3.global-to-local, align 4
  %v2_9790 = icmp ugt i32 %v1_978c, 8
  store i1 %v2_9790, i1* %cpsr_c.global-to-local, align 1
  %v7_9790 = icmp eq i32 %v1_978c, 9
  store i1 %v7_9790, i1* %cpsr_z.global-to-local, align 1
  %v2_9794 = xor i1 %v7_9790, true
  %v3_9794 = and i1 %v2_9790, %v2_9794
  br i1 %v3_9794, label %.thread113, label %dec_label_pc_979c

.thread113:                                       ; preds = %bb203
  %v4_9794 = load i32, i32* @r5, align 4
  store i32 %v4_9794, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_97c4

dec_label_pc_979c:                                ; preds = %bb203
  %v1_97a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97a0

dec_label_pc_97a0:                                ; preds = %dec_label_pc_97a0, %dec_label_pc_979c
  %v0_97b8 = phi i32 [ %v1_97b8, %dec_label_pc_97a0 ], [ 1, %dec_label_pc_979c ]
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i32 %v0_97b8, i32* %stack_var_-44, align 4
  %v2_97a8 = add i32 %v0_97b8, %v1_97a8.pre
  %v3_97a8 = inttoptr i32 %v2_97a8 to i8*
  %v4_97a8 = load i8, i8* %v3_97a8, align 1
  %v6_97a8 = zext i8 %v4_97a8 to i32
  store i32 %v6_97a8, i32* %r0.global-to-local, align 4
  %v1_97ac = add nsw i32 %v6_97a8, -48
  store i32 %v1_97ac, i32* %r3.global-to-local, align 4
  store i32 %v0_97b8, i32* %ip.global-to-local, align 4
  %v2_97b4 = icmp ugt i32 %v1_97ac, 8
  store i1 %v2_97b4, i1* %cpsr_c.global-to-local, align 1
  %v7_97b4 = icmp eq i32 %v1_97ac, 9
  store i1 %v7_97b4, i1* %cpsr_z.global-to-local, align 1
  %v1_97b8 = add i32 %v0_97b8, 1
  store i32 %v1_97b8, i32* @lr, align 4
  store i32 %v2_97a8, i32* %r1.global-to-local, align 4
  %v2_97c0 = xor i1 %v2_97b4, true
  %v3_97c0 = or i1 %v7_97b4, %v2_97c0
  br i1 %v3_97c0, label %dec_label_pc_97a0, label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %dec_label_pc_97a0, %.thread113
  %v2_97d0 = phi i32 [ %v4_9794, %.thread113 ], [ %v2_97a8, %dec_label_pc_97a0 ]
  %v0_97c4 = phi i32 [ %v6_9788, %.thread113 ], [ %v6_97a8, %dec_label_pc_97a0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_97c4 = icmp eq i32 %v0_97c4, 0
  store i1 %v2_97c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_97c4, label %dec_label_pc_98f8, label %dec_label_pc_97cc

dec_label_pc_97cc:                                ; preds = %dec_label_pc_97c4
  store i32 0, i32* @r6, align 4
  %v3_97d0 = inttoptr i32 %v2_97d0 to i8*
  store i8 0, i8* %v3_97d0, align 1
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_97d8 = load i32, i32* %stack_var_-44, align 4
  %v1_97dc = add i32 %v3_97d8, 1
  store i32 %v1_97dc, i32* %ip.global-to-local, align 4
  store i32 %v1_97dc, i32* %stack_var_-44, align 4
  %v0_97e4 = load i32, i32* @r5, align 4
  %v2_97e4 = add i32 %v0_97e4, %v1_97dc
  %v3_97e4 = inttoptr i32 %v2_97e4 to i8*
  %v4_97e4 = load i8, i8* %v3_97e4, align 1
  %v6_97e4 = zext i8 %v4_97e4 to i32
  store i32 %v6_97e4, i32* %r3.global-to-local, align 4
  %v2_97e8 = icmp ugt i8 %v4_97e4, 31
  store i1 %v2_97e8, i1* %cpsr_c.global-to-local, align 1
  %v7_97e8 = icmp eq i8 %v4_97e4, 32
  store i1 %v7_97e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97e8, label %bb205, label %bb204

bb204:                                            ; preds = %dec_label_pc_97cc
  store i32 %v2_97e4, i32* @r4, align 4
  br label %.thread37

bb205:                                            ; preds = %dec_label_pc_97cc
  %v2_97ec = add i32 %v3_97d8, 2
  store i32 %v2_97ec, i32* %ip.global-to-local, align 4
  %v2_97f0 = add i32 %v0_97e4, %v2_97ec
  store i32 %v2_97f0, i32* @r4, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i32 %v2_97ec, i32* %v11_82b4, align 4
  %v0_97fc.pre = load i32, i32* @r4, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb204, %bb205
  %v0_97fc = phi i32 [ %v2_97e4, %bb204 ], [ %v0_97fc.pre, %bb205 ]
  store i32 %v0_97fc, i32* %r0.global-to-local, align 4
  %v1_9800 = inttoptr i32 %v0_97fc to i8*
  %v2_9800 = call i32 @function_12450(i8* %v1_9800)
  store i32 ptrtoint ([5 x i8]* @global_var_182b8.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9800, i32* @r1, align 4
  %v0_980c = load i32, i32* @r4, align 4
  store i32 %v0_980c, i32* %r0.global-to-local, align 4
  %v3_9810 = inttoptr i32 %v0_980c to i8*
  %v4_9810 = call i32 @function_127a0(i8* %v3_9810, i32 %v2_9800, i32 ptrtoint ([5 x i8]* @global_var_182b8.42 to i32))
  store i32 %v4_9810, i32* %r0.global-to-local, align 4
  %v2_9814 = icmp eq i32 %v4_9810, -1
  store i1 %v2_9814, i1* %cpsr_c.global-to-local, align 1
  %v7_9814 = icmp eq i32 %v4_9810, -1
  store i1 %v7_9814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9814, label %.thread38, label %dec_label_pc_9824

.thread38:                                        ; preds = %.thread37
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v4_981c = load i32, i32* %v11_82b4, align 4
  store i32 %v4_981c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9858

dec_label_pc_9824:                                ; preds = %.thread37
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9828 = load i32, i32* %stack_var_-44, align 4
  %v0_982c = load i32, i32* @r5, align 4
  %v2_982c = add i32 %v0_982c, %v3_9828
  store i32 %v2_982c, i32* @r4, align 4
  store i32 %v2_982c, i32* %r0.global-to-local, align 4
  %v1_9834 = inttoptr i32 %v2_982c to i8*
  %v2_9834 = call i32 @function_12450(i8* %v1_9834)
  store i32 ptrtoint ([5 x i8]* @global_var_182b8.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9834, i32* @r1, align 4
  %v0_9840 = load i32, i32* @r4, align 4
  store i32 %v0_9840, i32* %r0.global-to-local, align 4
  %v4_9844 = inttoptr i32 %v0_9840 to i8*
  %v5_9844 = call i32 @function_127a0(i8* %v4_9844, i32 %v2_9834, i32 ptrtoint ([5 x i8]* @global_var_182b8.42 to i32))
  store i32 %v5_9844, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v3_984c = load i32, i32* %stack_var_-44, align 4
  %v2_9850 = add i32 %v3_984c, %v5_9844
  store i32 %v2_9850, i32* %ip.global-to-local, align 4
  store i32 %v2_9850, i32* %stack_var_-44, align 4
  br label %dec_label_pc_9858

dec_label_pc_9858:                                ; preds = %.thread38, %dec_label_pc_9824
  %v0_9d34 = phi i32 [ %v4_981c, %.thread38 ], [ %v2_9850, %dec_label_pc_9824 ]
  %v0_9858 = load i32, i32* @r5, align 4
  %v2_9858 = add i32 %v0_9858, %v0_9d34
  %v3_9858 = inttoptr i32 %v2_9858 to i8*
  %v4_9858 = load i8, i8* %v3_9858, align 1
  %v6_9858 = zext i8 %v4_9858 to i32
  store i32 %v6_9858, i32* %r3.global-to-local, align 4
  %v2_985c = icmp ugt i8 %v4_9858, 33
  store i1 %v2_985c, i1* %cpsr_c.global-to-local, align 1
  %v7_985c = icmp eq i8 %v4_9858, 34
  store i1 %v7_985c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_985c, label %dec_label_pc_9d34, label %dec_label_pc_9864

dec_label_pc_9864:                                ; preds = %dec_label_pc_9d34, %dec_label_pc_9858, %dec_label_pc_9d5c
  %v0_9864 = load i32, i32* @r5, align 4
  store i32 %v0_9864, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_986c = inttoptr i32 %v0_9864 to i8*
  %v3_986c = call i32 @function_12574(i8* %v2_986c, i32 10)
  store i32 %v3_986c, i32* %r0.global-to-local, align 4
  %v1_9870 = add i32 %v3_986c, -1
  store i32 %v1_9870, i32* %r3.global-to-local, align 4
  %v2_9874 = icmp ugt i32 %v1_9870, 7
  store i1 %v2_9874, i1* %cpsr_c.global-to-local, align 1
  %v7_9874 = icmp eq i32 %v1_9870, 8
  store i1 %v7_9874, i1* %cpsr_z.global-to-local, align 1
  %v2_9878 = xor i1 %v2_9874, true
  %v3_9878 = or i1 %v7_9874, %v2_9878
  br i1 %v3_9878, label %dec_label_pc_988c.preheader, label %dec_label_pc_98a0

dec_label_pc_988c.preheader:                      ; preds = %dec_label_pc_9864
  store i32 %v2_875c, i32* %r2.global-to-local, align 4
  %v6_987c = add i32 %v3_986c, %v2_875c
  store i32 %v6_987c, i32* @r4, align 4
  br label %dec_label_pc_988c

dec_label_pc_9888:                                ; preds = %dec_label_pc_988c
  %v1_9888 = call i32 @function_14fd4(i32 1)
  store i32 %v1_9888, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_988c

dec_label_pc_988c:                                ; preds = %dec_label_pc_988c.preheader, %dec_label_pc_9888
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9890 = call i32 @function_12d34(i32* null)
  %v0_9894 = load i32, i32* @r4, align 4
  %v3_9894 = icmp uge i32 %v0_9894, %v2_9890
  store i1 %v3_9894, i1* %cpsr_c.global-to-local, align 1
  %v9_9894 = icmp eq i32 %v0_9894, %v2_9890
  store i1 %v9_9894, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_989c = xor i1 %v9_9894, true
  %v3_989c = and i1 %v3_9894, %v2_989c
  br i1 %v3_989c, label %dec_label_pc_9888, label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_988c, %dec_label_pc_9864
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_98a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98a4, i32* @r4, align 4
  %v0_98a8 = load i32, i32* @r5, align 4
  %v2_98a8 = add i32 %v0_98a8, %v3_98a4
  store i32 %v2_98a8, i32* @r6, align 4
  store i32 %v2_98a8, i32* %r0.global-to-local, align 4
  %v1_98b0 = inttoptr i32 %v2_98a8 to i8*
  %v2_98b0 = call i32 @function_12450(i8* %v1_98b0)
  store i32 ptrtoint ([5 x i8]* @global_var_182b0.40 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98b0, i32* @r1, align 4
  %v0_98bc = load i32, i32* @r6, align 4
  store i32 %v0_98bc, i32* %r0.global-to-local, align 4
  %v4_98c0 = inttoptr i32 %v0_98bc to i8*
  %v5_98c0 = call i32 @function_127a0(i8* %v4_98c0, i32 %v2_98b0, i32 ptrtoint ([5 x i8]* @global_var_182b0.40 to i32))
  store i32 %v5_98c0, i32* %r0.global-to-local, align 4
  %v2_98c4 = icmp ugt i32 %v5_98c0, 3
  store i1 %v2_98c4, i1* %cpsr_c.global-to-local, align 1
  %v7_98c4 = icmp eq i32 %v5_98c0, 4
  store i1 %v7_98c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98c4, label %dec_label_pc_9c20, label %dec_label_pc_98cc

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98a0
  %v0_98cc = load i32, i32* @r5, align 4
  %v1_98cc = load i32, i32* @r4, align 4
  %v2_98cc = add i32 %v1_98cc, %v0_98cc
  %v3_98cc = inttoptr i32 %v2_98cc to i8*
  %v4_98cc = load i8, i8* %v3_98cc, align 1
  %v6_98cc = zext i8 %v4_98cc to i32
  store i32 %v6_98cc, i32* @r3, align 4
  %v2_98d0 = icmp ugt i8 %v4_98cc, 46
  store i1 %v2_98d0, i1* %cpsr_c.global-to-local, align 1
  %v7_98d0 = icmp eq i8 %v4_98cc, 47
  store i1 %v7_98d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98d0, label %dec_label_pc_9d7c, label %dec_label_pc_98d8

dec_label_pc_98d8:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9d7c, %dec_label_pc_9ce4, %dec_label_pc_9cc8, %dec_label_pc_98cc, %dec_label_pc_9dc4, %dec_label_pc_9d10
  %v0_98d8 = load i32, i32* %sb.global-to-local, align 4
  %v1_98dc = add i32 %v0_98d8, 1431
  store i32 %v1_98dc, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1828c.17 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_98e8 = call i32 @function_135e0()
  store i32 %v0_98e8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_98f0 = load i32, i32* @sl, align 4
  %v3_98f0 = add i32 %v2_98f0, -1448
  %v4_98f0 = inttoptr i32 %v3_98f0 to i8*
  store i8 10, i8* %v4_98f0, align 1
  br label %dec_label_pc_87ac

dec_label_pc_98f8:                                ; preds = %dec_label_pc_97c4, %dec_label_pc_9704, %dec_label_pc_96d8
  %v0_98f8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_98f8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v5_9908 = call i32 @function_12508(i32 %v2_823c, i32 %v0_98f8, i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), i32 4)
  %v0_990c = load i32, i32* %sb.global-to-local, align 4
  %v1_9910 = add i32 %v0_990c, 1431
  store i32 %v1_9910, i32* @r4, align 4
  store i32 %v5_9908, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_182c0.44 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9910, i32* %r0.global-to-local, align 4
  %v3_9920 = inttoptr i32 %v1_9910 to i8*
  %v4_9920 = call i32 @function_12830(i8* %v3_9920, i32 ptrtoint ([5 x i8]* @global_var_182c0.44 to i32))
  store i32 %v4_9920, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9924 = icmp eq i32 %v4_9920, 0
  store i1 %v2_9924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9924, label %dec_label_pc_9ad4, label %dec_label_pc_992c

dec_label_pc_992c:                                ; preds = %dec_label_pc_9ad4, %dec_label_pc_98f8
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9930 = load i32, i32* @sl, align 4
  %v3_9930 = add i32 %v2_9930, -1448
  %v4_9930 = inttoptr i32 %v3_9930 to i8*
  store i8 7, i8* %v4_9930, align 1
  br label %dec_label_pc_9934

dec_label_pc_9934:                                ; preds = %bb211, %dec_label_pc_992c
  %v0_9934 = load i32, i32* @r5, align 4
  store i32 %v0_9934, i32* %r2.global-to-local, align 4
  %v0_9938 = load i32, i32* @sl, align 4
  %v1_9938 = add i32 %v0_9938, -1452
  %v2_9938 = inttoptr i32 %v1_9938 to i32*
  %v3_9938 = load i32, i32* %v2_9938, align 4
  store i32 %v3_9938, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9944 = call i32 @function_13794(i32 %v3_9938, i32 %v2_823c, i32 %v0_9934, i32 16384)
  store i32 %v4_9944, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87ac

dec_label_pc_994c:                                ; preds = %dec_label_pc_8e54
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v0_9954 = load i32, i32* @sl, align 4
  %v1_9954 = add i32 %v0_9954, 660
  %v2_9954 = inttoptr i32 %v1_9954 to i32*
  %v3_9954 = load i32, i32* %v2_9954, align 4
  store i32 %v3_9954, i32* @r4, align 4
  %v3_9958 = call i32 @function_119c0(i32 39, i32* null)
  %v0_995c = load i32, i32* @r4, align 4
  store i32 %v0_995c, i32* %r1.global-to-local, align 4
  store i32 %v3_9958, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_9968 = load i32, i32* @r7, align 4
  store i32 %v0_9968, i32* %r0.global-to-local, align 4
  %v4_996c = call i32 @function_12508(i32 %v0_9968, i32 %v0_995c, i32 %v3_9958, i32 11)
  store i32 %v4_996c, i32* %r0.global-to-local, align 4
  %v0_9970 = load i32, i32* @sl, align 4
  %v1_9970 = add i32 %v0_9970, 660
  %v2_9970 = inttoptr i32 %v1_9970 to i32*
  %v3_9970 = load i32, i32* %v2_9970, align 4
  %v0_9974 = load i32, i32* @r7, align 4
  %v2_9974 = add i32 %v0_9974, %v4_996c
  store i32 %v2_9974, i32* @r6, align 4
  store i32 %v4_996c, i32* @r4, align 4
  %v2_997c = sub i32 %v3_9970, %v4_996c
  store i32 %v2_997c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c8.46 to i32), i32* %r2.global-to-local, align 4
  %v0_9984 = load i32, i32* @r8, align 4
  store i32 %v0_9984, i32* %r3.global-to-local, align 4
  store i32 %v2_9974, i32* %r0.global-to-local, align 4
  %v4_998c = call i32 @function_12508(i32 %v2_9974, i32 %v2_997c, i32 ptrtoint (i32* @global_var_182c8.46 to i32), i32 %v0_9984)
  store i32 %v4_998c, i32* %r0.global-to-local, align 4
  %v0_9990 = load i32, i32* @sl, align 4
  %v1_9990 = add i32 %v0_9990, 16
  %v2_9990 = inttoptr i32 %v1_9990 to i32*
  %v3_9990 = load i32, i32* %v2_9990, align 4
  store i32 %v3_9990, i32* %r3.global-to-local, align 4
  %v1_9994 = load i32, i32* @r4, align 4
  %v2_9994 = add i32 %v1_9994, %v4_998c
  store i32 %v2_9994, i32* @r5, align 4
  %v0_9998 = load i32, i32* %sb.global-to-local, align 4
  %v2_9998 = add i32 %v0_9998, %v2_9994
  store i32 %v2_9998, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_99a0 = icmp ugt i32 %v3_9990, 3
  store i1 %v2_99a0, i1* %cpsr_c.global-to-local, align 1
  %v7_99a0 = icmp eq i32 %v3_9990, 4
  store i1 %v7_99a0, i1* %cpsr_z.global-to-local, align 1
  %v3_99a4 = add i32 %v2_9998, 2115
  %v4_99a4 = inttoptr i32 %v3_99a4 to i8*
  store i8 0, i8* %v4_99a4, align 1
  %v7_99a8 = icmp sgt i32 %v3_9990, 4
  br i1 %v7_99a8, label %dec_label_pc_99ac, label %dec_label_pc_9b14

dec_label_pc_99ac:                                ; preds = %dec_label_pc_994c, %dec_label_pc_9b14, %dec_label_pc_9b24
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_99b4 = load i32, i32* @sl, align 4
  %v2_99b4 = add i32 %v1_99b4, 12
  %v3_99b4 = inttoptr i32 %v2_99b4 to i32*
  store i32 -1, i32* %v3_99b4, align 4
  %v0_99b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_99b8 = trunc i32 %v0_99b8 to i8
  %v2_99b8 = load i32, i32* @sl, align 4
  %v3_99b8 = add i32 %v2_99b8, -1448
  %v4_99b8 = inttoptr i32 %v3_99b8 to i8*
  store i8 %v1_99b8, i8* %v4_99b8, align 1
  br label %dec_label_pc_87ac

dec_label_pc_99c0:                                ; preds = %bb201
  store i32 7, i32* @ip, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_99cc = load i32, i32* @r6, align 4
  %v1_99cc = add i32 %v0_99cc, 4
  %v2_99cc = inttoptr i32 %v1_99cc to i8*
  %v3_99cc = load i8, i8* %v2_99cc, align 1
  %v4_99cc = zext i8 %v3_99cc to i32
  store i32 %v4_99cc, i32* @r3, align 4
  %v2_99d0 = icmp ugt i8 %v3_99cc, 114
  store i1 %v2_99d0, i1* %cpsr_c.global-to-local, align 1
  %v7_99d0 = icmp eq i8 %v3_99cc, 115
  store i1 %v7_99d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_99d0, label %bb206, label %.thread41

bb206:                                            ; preds = %dec_label_pc_99c0
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_99c0, %bb206
  %v3_99e0 = phi i32 [ 7, %dec_label_pc_99c0 ], [ 8, %bb206 ]
  store i32 %v0_99cc, i32* @r0, align 4
  %v1_99e8 = load i32, i32* @r5, align 4
  %v2_99e8 = sub i32 %v1_99e8, %v3_99e0
  store i32 %v2_99e8, i32* @r2, align 4
  %v2_99ec = add i32 %v3_99e0, %v0_99cc
  store i32 %v2_99ec, i32* @r1, align 4
  %v3_99f0 = call i32 @function_135d0(i32 %v0_99cc, i32 %v2_99ec, i32 %v2_99e8)
  store i32 %v3_99f0, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v0_99f8 = load i32, i32* @r7, align 4
  store i32 %v0_99f8, i32* %stack_var_-44, align 4
  store i32 %v2_823c, i32* @lr, align 4
  %v1_9a00 = load i32, i32* @r4, align 4
  %v2_9a00 = add i32 %v1_9a00, %v2_823c
  %v3_9a00 = inttoptr i32 %v2_9a00 to i8*
  %v4_9a00 = load i8, i8* %v3_9a00, align 1
  %v6_9a00 = zext i8 %v4_9a00 to i32
  store i32 %v6_9a00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a04 = icmp eq i8 %v4_9a00, 0
  store i1 %v2_9a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a04, label %dec_label_pc_9a48, label %dec_label_pc_9a0c

dec_label_pc_9a0c:                                ; preds = %.thread41
  %v2_9a0c = icmp ugt i8 %v4_9a00, 46
  store i1 %v2_9a0c, i1* %cpsr_c.global-to-local, align 1
  %v7_9a0c = icmp eq i8 %v4_9a00, 47
  store i1 %v7_9a0c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a10 = load i32, i32* @r6, align 4
  br i1 %v7_9a0c, label %bb207, label %dec_label_pc_9a18

bb207:                                            ; preds = %dec_label_pc_9a0c
  store i32 %v1_9a10, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b08

dec_label_pc_9a18:                                ; preds = %dec_label_pc_9a0c
  store i32 %v0_99f8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9a28

dec_label_pc_9a20:                                ; preds = %dec_label_pc_9a28
  %v2_9a20 = icmp ugt i8 %v4_9a34, 46
  store i1 %v2_9a20, i1* %cpsr_c.global-to-local, align 1
  %v7_9a20 = icmp eq i8 %v4_9a34, 47
  store i1 %v7_9a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a20, label %dec_label_pc_9b08, label %dec_label_pc_9a28

dec_label_pc_9a28:                                ; preds = %dec_label_pc_9a20, %dec_label_pc_9a18
  %v0_9a28 = phi i32 [ %v1_9a28, %dec_label_pc_9a20 ], [ %v0_99f8, %dec_label_pc_9a18 ]
  %v1_9a28 = add i32 %v0_9a28, 1
  store i32 %v1_9a28, i32* %ip.global-to-local, align 4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i32 %v1_9a28, i32* %stack_var_-44, align 4
  %v2_9a34 = add i32 %v1_9a28, %v1_9a10
  %v3_9a34 = inttoptr i32 %v2_9a34 to i8*
  %v4_9a34 = load i8, i8* %v3_9a34, align 1
  %v6_9a34 = zext i8 %v4_9a34 to i32
  store i32 %v6_9a34, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a38 = icmp eq i8 %v4_9a34, 0
  store i1 %v2_9a38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9a28, i32* %r1.global-to-local, align 4
  store i32 %v2_9a34, i32* %r2.global-to-local, align 4
  br i1 %v2_9a38, label %dec_label_pc_9a48, label %dec_label_pc_9a20

dec_label_pc_9a48:                                ; preds = %dec_label_pc_9a28, %.thread41, %dec_label_pc_9b08
  %v0_9a48 = load i32, i32* @r6, align 4
  store i32 %v0_9a48, i32* %r0.global-to-local, align 4
  %v1_9a4c = inttoptr i32 %v0_9a48 to i8*
  %v2_9a4c = call i32 @function_12450(i8* %v1_9a4c)
  store i32 %v2_9a4c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a50 = icmp eq i32 %v2_9a4c, 0
  store i1 %v2_9a50, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v2_9a4c, 1
  br i1 %tmp208, label %dec_label_pc_9a74, label %dec_label_pc_9a58

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9a48
  %v0_9a58 = load i32, i32* @r6, align 4
  store i32 %v0_9a58, i32* %r0.global-to-local, align 4
  %v1_9a5c = inttoptr i32 %v0_9a58 to i8*
  %v2_9a5c = call i32 @function_12450(i8* %v1_9a5c)
  store i32 %v2_9a5c, i32* %r0.global-to-local, align 4
  %v1_9a60 = add i32 %v2_9a5c, -127
  %v2_9a60 = icmp ugt i32 %v2_9a5c, 126
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v3_9a60 = sub i32 126, %v2_9a5c
  %v4_9a60 = and i32 %v3_9a60, %v2_9a5c
  %v5_9a60 = icmp slt i32 %v4_9a60, 0
  %v6_9a60 = icmp slt i32 %v1_9a60, 0
  %v7_9a60 = icmp eq i32 %v2_9a5c, 127
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  %v7_9a64 = icmp sgt i32 %v2_9a5c, 127
  br i1 %v7_9a64, label %.thread44, label %bb209

bb209:                                            ; preds = %dec_label_pc_9a58
  %v8_9a64 = load i32, i32* %sb.global-to-local, align 4
  %v9_9a68 = add i32 %v8_9a64, 789
  store i32 %v9_9a68, i32* %r0.global-to-local, align 4
  %v8_9a6c = load i32, i32* @r6, align 4
  store i32 %v8_9a6c, i32* %r1.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9a58, %bb209
  store i32 39540, i32* @lr, align 4
  %v3_9a70 = xor i1 %v6_9a60, %v5_9a60
  %v4_9a70 = or i1 %v7_9a60, %v3_9a70
  call void @__pseudo_cond_branch(i1 %v4_9a70, i32 ptrtoint (i32* @global_var_12478.47 to i32))
  br label %dec_label_pc_9a74

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a48, %.thread44
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9a78 = load i32, i32* %stack_var_-44, align 4
  %v0_9a7c = load i32, i32* @r6, align 4
  %v1_9a7c = add i32 %v0_9a7c, 1
  store i32 %v1_9a7c, i32* @r5, align 4
  %v2_9a80 = add i32 %v1_9a7c, %v3_9a78
  store i32 %v2_9a80, i32* %r0.global-to-local, align 4
  %v1_9a84 = inttoptr i32 %v2_9a80 to i8*
  %v2_9a84 = call i32 @function_12450(i8* %v1_9a84)
  store i32 %v2_9a84, i32* %r0.global-to-local, align 4
  %v2_9a88 = icmp ugt i32 %v2_9a84, 254
  store i1 %v2_9a88, i1* %cpsr_c.global-to-local, align 1
  %v7_9a88 = icmp eq i32 %v2_9a84, 255
  store i1 %v7_9a88, i1* %cpsr_z.global-to-local, align 1
  %v8_9a8c = icmp sgt i32 %v2_9a84, 255
  br i1 %v8_9a8c, label %dec_label_pc_9614, label %dec_label_pc_9a90

dec_label_pc_9a90:                                ; preds = %dec_label_pc_9a74
  %v0_9a90 = load i32, i32* %sb.global-to-local, align 4
  %v1_9a94 = add i32 %v0_9a90, 533
  store i32 %v1_9a94, i32* @r4, align 4
  store i32 %v1_9a94, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9aa0 = call i32 @function_124e4(i32 %v1_9a94, i32 255)
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  %v3_9aa8 = load i32, i32* %stack_var_-44, align 4
  %v0_9aac = load i32, i32* @r5, align 4
  %v2_9aac = add i32 %v0_9aac, %v3_9aa8
  store i32 %v2_9aac, i32* %r0.global-to-local, align 4
  %v1_9ab0 = inttoptr i32 %v2_9aac to i8*
  %v2_9ab0 = call i32 @function_12450(i8* %v1_9ab0)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ab4 = icmp eq i32 %v2_9ab0, 0
  store i1 %v2_9ab4, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_9ab0, 1
  br i1 %tmp210, label %dec_label_pc_9614, label %dec_label_pc_9abc

dec_label_pc_9abc:                                ; preds = %dec_label_pc_9a90
  %v3_9ac0 = load i32, i32* %stack_var_-44, align 4
  %v0_9ac4 = load i32, i32* @r4, align 4
  store i32 %v0_9ac4, i32* @r0, align 4
  %v0_9ac8 = load i32, i32* @r5, align 4
  %v2_9ac8 = add i32 %v0_9ac8, %v3_9ac0
  store i32 %v2_9ac8, i32* %r1.global-to-local, align 4
  %v2_9acc = inttoptr i32 %v0_9ac4 to i8*
  %v3_9acc = call i32 @function_12478(i8* %v2_9acc, i32 %v2_9ac8)
  store i32 %v3_9acc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9614

dec_label_pc_9ad4:                                ; preds = %dec_label_pc_98f8
  %v0_9ad4 = load i32, i32* @r4, align 4
  store i32 %v0_9ad4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1828c.17 to i32), i32* %r1.global-to-local, align 4
  %v3_9adc = inttoptr i32 %v0_9ad4 to i8*
  %v4_9adc = call i32 @function_12830(i8* %v3_9adc, i32 ptrtoint ([4 x i8]* @global_var_1828c.17 to i32))
  store i32 %v4_9adc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ae0 = icmp eq i32 %v4_9adc, 0
  store i1 %v2_9ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9ae0, label %bb211, label %dec_label_pc_992c

bb211:                                            ; preds = %dec_label_pc_9ad4
  %v0_9ae8 = load i32, i32* %fp.global-to-local, align 4
  %v1_9ae8 = load i32, i32* @r5, align 4
  %v3_9ae8 = icmp uge i32 %v0_9ae8, %v1_9ae8
  store i1 %v3_9ae8, i1* %cpsr_c.global-to-local, align 1
  %v9_9ae8 = icmp eq i32 %v0_9ae8, %v1_9ae8
  store i1 %v9_9ae8, i1* %cpsr_z.global-to-local, align 1
  %v7_9aec = icmp sgt i32 %v0_9ae8, %v1_9ae8
  %. = select i1 %v7_9aec, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9af4 = trunc i32 %. to i8
  %v10_9af4 = load i32, i32* @sl, align 4
  %v11_9af4 = add i32 %v10_9af4, -1448
  %v12_9af4 = inttoptr i32 %v11_9af4 to i8*
  store i8 %v9_9af4, i8* %v12_9af4, align 1
  br label %dec_label_pc_9934

dec_label_pc_9b00:                                ; preds = %dec_label_pc_8ef8
  %v0_9b00 = load i32, i32* @r4, align 4
  %v1_9b00 = trunc i32 %v0_9b00 to i8
  %v2_9b00 = load i32, i32* @sl, align 4
  %v3_9b00 = add i32 %v2_9b00, -1448
  %v4_9b00 = inttoptr i32 %v3_9b00 to i8*
  store i8 %v1_9b00, i8* %v4_9b00, align 1
  br label %dec_label_pc_87ac

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9a20, %bb207
  %v2_9b0c = phi i32 [ %v1_9a10, %bb207 ], [ %v2_9a34, %dec_label_pc_9a20 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9b0c = inttoptr i32 %v2_9b0c to i8*
  store i8 0, i8* %v3_9b0c, align 1
  br label %dec_label_pc_9a48

dec_label_pc_9b14:                                ; preds = %dec_label_pc_994c
  %v0_9b14 = load i32, i32* @r6, align 4
  store i32 %v0_9b14, i32* %r0.global-to-local, align 4
  %v1_9b18 = inttoptr i32 %v0_9b14 to i8*
  %v2_9b18 = call i32 @function_12450(i8* %v1_9b18)
  store i32 %v2_9b18, i32* %r0.global-to-local, align 4
  %v2_9b1c = icmp ugt i32 %v2_9b18, 126
  store i1 %v2_9b1c, i1* %cpsr_c.global-to-local, align 1
  %v7_9b1c = icmp eq i32 %v2_9b18, 127
  store i1 %v7_9b1c, i1* %cpsr_z.global-to-local, align 1
  %v8_9b20 = icmp sgt i32 %v2_9b18, 127
  br i1 %v8_9b20, label %dec_label_pc_99ac, label %dec_label_pc_9b24

dec_label_pc_9b24:                                ; preds = %dec_label_pc_9b14
  %v0_9b24 = load i32, i32* @sl, align 4
  %v1_9b24 = add i32 %v0_9b24, 16
  %v2_9b24 = inttoptr i32 %v1_9b24 to i32*
  %v3_9b24 = load i32, i32* %v2_9b24, align 4
  %v1_9b28 = and i32 %v3_9b24, 33554432
  %v2_9b28 = icmp ne i32 %v1_9b28, 0
  store i1 %v2_9b28, i1* %cpsr_c.global-to-local, align 1
  %v3_9b28 = mul i32 %v3_9b24, 128
  %v1_9b2c = add i32 %v3_9b28, 1472
  %v0_9b30 = load i32, i32* @r6, align 4
  store i32 %v0_9b30, i32* %r1.global-to-local, align 4
  %v0_9b34 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b34 = add i32 %v1_9b2c, %v0_9b34
  store i32 %v2_9b34, i32* @r0, align 4
  %v2_9b38 = inttoptr i32 %v2_9b34 to i8*
  %v3_9b38 = call i32 @function_12478(i8* %v2_9b38, i32 %v0_9b30)
  store i32 %v3_9b38, i32* %r0.global-to-local, align 4
  %v0_9b3c = load i32, i32* @sl, align 4
  %v1_9b3c = add i32 %v0_9b3c, 16
  %v2_9b3c = inttoptr i32 %v1_9b3c to i32*
  %v3_9b3c = load i32, i32* %v2_9b3c, align 4
  %v1_9b40 = and i32 %v3_9b3c, 33554432
  %v2_9b40 = icmp ne i32 %v1_9b40, 0
  store i1 %v2_9b40, i1* %cpsr_c.global-to-local, align 1
  %v3_9b40 = mul i32 %v3_9b3c, 128
  %v1_9b44 = add i32 %v3_9b40, 1472
  %v0_9b48 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b48 = add i32 %v1_9b44, %v0_9b48
  store i32 %v2_9b48, i32* @r4, align 4
  store i32 %v2_9b48, i32* %r0.global-to-local, align 4
  %v1_9b50 = inttoptr i32 %v2_9b48 to i8*
  %v2_9b50 = call i32 @function_12450(i8* %v1_9b50)
  store i32 ptrtoint (i32* @global_var_18af0.49 to i32), i32* %r1.global-to-local, align 4
  %v0_9b58 = load i32, i32* @r4, align 4
  %v2_9b58 = add i32 %v0_9b58, %v2_9b50
  store i32 %v2_9b58, i32* @r0, align 4
  %v2_9b5c = inttoptr i32 %v2_9b58 to i8*
  %v3_9b5c = call i32 @function_12478(i8* %v2_9b5c, i32 ptrtoint (i32* @global_var_18af0.49 to i32))
  store i32 %v3_9b5c, i32* %r0.global-to-local, align 4
  %v0_9b60 = load i32, i32* @r5, align 4
  %v1_9b60 = add i32 %v0_9b60, 3
  store i32 %v1_9b60, i32* @r5, align 4
  %v0_9b64 = load i32, i32* @sl, align 4
  %v1_9b64 = add i32 %v0_9b64, 660
  %v2_9b64 = inttoptr i32 %v1_9b64 to i32*
  %v3_9b64 = load i32, i32* %v2_9b64, align 4
  %v0_9b68 = load i32, i32* @r7, align 4
  %v2_9b68 = add i32 %v0_9b68, %v1_9b60
  store i32 %v2_9b68, i32* @r6, align 4
  %v2_9b6c = sub i32 %v3_9b64, %v1_9b60
  store i32 %v2_9b6c, i32* %r1.global-to-local, align 4
  %v0_9b70 = load i32, i32* @r8, align 4
  store i32 %v0_9b70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c8.46 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9b68, i32* %r0.global-to-local, align 4
  %v4_9b7c = call i32 @function_12508(i32 %v2_9b68, i32 %v2_9b6c, i32 ptrtoint (i32* @global_var_182c8.46 to i32), i32 %v0_9b70)
  store i32 %v4_9b7c, i32* %r0.global-to-local, align 4
  %v0_9b80 = load i32, i32* @sl, align 4
  %v1_9b80 = add i32 %v0_9b80, 16
  %v2_9b80 = inttoptr i32 %v1_9b80 to i32*
  %v3_9b80 = load i32, i32* %v2_9b80, align 4
  %v1_9b84 = and i32 %v3_9b80, 33554432
  %v2_9b84 = icmp ne i32 %v1_9b84, 0
  store i1 %v2_9b84, i1* %cpsr_c.global-to-local, align 1
  %v3_9b84 = mul i32 %v3_9b80, 128
  %v1_9b88 = add i32 %v3_9b84, 1472
  %v0_9b8c = load i32, i32* %sb.global-to-local, align 4
  %v1_9b8c = load i32, i32* @r5, align 4
  %v2_9b90 = add i32 %v1_9b88, %v0_9b8c
  store i32 %v2_9b90, i32* @r4, align 4
  %v2_9b8c = add i32 %v0_9b8c, %v4_9b7c
  %v2_9b94 = add i32 %v2_9b8c, %v1_9b8c
  store i32 %v2_9b94, i32* @r5, align 4
  %v0_9b98 = load i32, i32* %fp.global-to-local, align 4
  %v1_9b98 = trunc i32 %v0_9b98 to i8
  %v3_9b98 = add i32 %v2_9b94, 2115
  %v4_9b98 = inttoptr i32 %v3_9b98 to i8*
  store i8 %v1_9b98, i8* %v4_9b98, align 1
  %v0_9b9c = load i32, i32* @r4, align 4
  store i32 %v0_9b9c, i32* %r0.global-to-local, align 4
  %v1_9ba0 = inttoptr i32 %v0_9b9c to i8*
  %v2_9ba0 = call i32 @function_12450(i8* %v1_9ba0)
  %v0_9ba4 = load i32, i32* @r6, align 4
  store i32 %v0_9ba4, i32* %r1.global-to-local, align 4
  %v0_9ba8 = load i32, i32* @r4, align 4
  %v2_9ba8 = add i32 %v0_9ba8, %v2_9ba0
  store i32 %v2_9ba8, i32* @r0, align 4
  %v2_9bac = inttoptr i32 %v2_9ba8 to i8*
  %v3_9bac = call i32 @function_12478(i8* %v2_9bac, i32 %v0_9ba4)
  store i32 %v3_9bac, i32* %r0.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @sl, align 4
  %v1_9bb0 = add i32 %v0_9bb0, 16
  %v2_9bb0 = inttoptr i32 %v1_9bb0 to i32*
  %v3_9bb0 = load i32, i32* %v2_9bb0, align 4
  %v1_9bb4 = add i32 %v3_9bb0, 1
  store i32 %v1_9bb4, i32* %r3.global-to-local, align 4
  store i32 %v1_9bb4, i32* %v2_9bb0, align 4
  br label %dec_label_pc_99ac

dec_label_pc_9bc0:                                ; preds = %dec_label_pc_9604
  %v0_9bc0 = load i32, i32* %sb.global-to-local, align 4
  %v1_9bc4 = add i32 %v0_9bc0, 533
  store i32 %v1_9bc4, i32* @r4, align 4
  store i32 %v1_9bc4, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9bd0 = call i32 @function_124e4(i32 %v1_9bc4, i32 255)
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v3_9bd8 = load i32, i32* %stack_var_-44, align 4
  %v0_9bdc = load i32, i32* @r6, align 4
  %v1_9bdc = add i32 %v0_9bdc, 1
  store i32 %v1_9bdc, i32* @r6, align 4
  %v2_9be0 = add i32 %v1_9bdc, %v3_9bd8
  store i32 %v2_9be0, i32* %r0.global-to-local, align 4
  %v1_9be4 = inttoptr i32 %v2_9be0 to i8*
  %v2_9be4 = call i32 @function_12450(i8* %v1_9be4)
  store i32 %v2_9be4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9be8 = icmp eq i32 %v2_9be4, 0
  store i1 %v2_9be8, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v2_9be4, 1
  br i1 %tmp212, label %dec_label_pc_9614, label %dec_label_pc_9bf0

dec_label_pc_9bf0:                                ; preds = %dec_label_pc_9bc0
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9bf4 = load i32, i32* %stack_var_-44, align 4
  %v0_9bf8 = load i32, i32* @r6, align 4
  %v2_9bf8 = add i32 %v0_9bf8, %v3_9bf4
  store i32 %v2_9bf8, i32* %r0.global-to-local, align 4
  %v1_9bfc = inttoptr i32 %v2_9bf8 to i8*
  %v2_9bfc = call i32 @function_12450(i8* %v1_9bfc)
  store i32 %v2_9bfc, i32* %r0.global-to-local, align 4
  %v2_9c00 = icmp ugt i32 %v2_9bfc, 254
  store i1 %v2_9c00, i1* %cpsr_c.global-to-local, align 1
  %v7_9c00 = icmp eq i32 %v2_9bfc, 255
  store i1 %v7_9c00, i1* %cpsr_z.global-to-local, align 1
  %v8_9c04 = icmp sgt i32 %v2_9bfc, 255
  br i1 %v8_9c04, label %dec_label_pc_9614, label %dec_label_pc_9c08

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9bf0
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  %v3_9c0c = load i32, i32* %stack_var_-44, align 4
  %v0_9c10 = load i32, i32* @r4, align 4
  store i32 %v0_9c10, i32* @r0, align 4
  %v0_9c14 = load i32, i32* @r6, align 4
  %v2_9c14 = add i32 %v0_9c14, %v3_9c0c
  store i32 %v2_9c14, i32* %r1.global-to-local, align 4
  %v2_9c18 = inttoptr i32 %v0_9c10 to i8*
  %v3_9c18 = call i32 @function_12478(i8* %v2_9c18, i32 %v2_9c14)
  store i32 %v3_9c18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9614

dec_label_pc_9c20:                                ; preds = %dec_label_pc_98a0
  store i32 7, i32* @ip, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c2c = load i32, i32* @r6, align 4
  %v1_9c2c = add i32 %v0_9c2c, 4
  %v2_9c2c = inttoptr i32 %v1_9c2c to i8*
  %v3_9c2c = load i8, i8* %v2_9c2c, align 1
  %v4_9c2c = zext i8 %v3_9c2c to i32
  store i32 %v4_9c2c, i32* @r3, align 4
  %v2_9c30 = icmp ugt i8 %v3_9c2c, 114
  store i1 %v2_9c30, i1* %cpsr_c.global-to-local, align 1
  %v7_9c30 = icmp eq i8 %v3_9c2c, 115
  store i1 %v7_9c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c30, label %bb213, label %.thread47

bb213:                                            ; preds = %dec_label_pc_9c20
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_9c20, %bb213
  %v3_9c40 = phi i32 [ 7, %dec_label_pc_9c20 ], [ 8, %bb213 ]
  %v1_9c44 = sub nsw i32 1, %v3_9c40
  %v1_9c48 = load i32, i32* @r7, align 4
  %v2_9c48 = add i32 %v1_9c48, %v1_9c44
  store i32 %v2_9c48, i32* @r2, align 4
  %v2_9c4c = add i32 %v3_9c40, %v0_9c2c
  store i32 %v2_9c4c, i32* @r1, align 4
  store i32 %v0_9c2c, i32* @r0, align 4
  %v3_9c54 = call i32 @function_135d0(i32 %v0_9c2c, i32 %v2_9c4c, i32 %v2_9c48)
  store i32 %v3_9c54, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9c64 = load i32, i32* @r5, align 4
  %v1_9c64 = load i32, i32* @r4, align 4
  %v2_9c64 = add i32 %v1_9c64, %v0_9c64
  %v3_9c64 = inttoptr i32 %v2_9c64 to i8*
  %v4_9c64 = load i8, i8* %v3_9c64, align 1
  %v6_9c64 = zext i8 %v4_9c64 to i32
  store i32 %v6_9c64, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9c68 = icmp eq i8 %v4_9c64, 0
  store i1 %v9_9c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c68, label %dec_label_pc_9ca8, label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %.thread47
  %v2_9c70 = icmp ugt i8 %v4_9c64, 46
  store i1 %v2_9c70, i1* %cpsr_c.global-to-local, align 1
  %v7_9c70 = icmp eq i8 %v4_9c64, 47
  store i1 %v7_9c70, i1* %cpsr_z.global-to-local, align 1
  %v1_9c74 = load i32, i32* @r6, align 4
  br i1 %v7_9c70, label %bb214, label %dec_label_pc_9c7c

bb214:                                            ; preds = %dec_label_pc_9c70
  store i32 %v1_9c74, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d28

dec_label_pc_9c7c:                                ; preds = %dec_label_pc_9c70
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c8c

dec_label_pc_9c84:                                ; preds = %dec_label_pc_9c8c
  %v2_9c84 = icmp ugt i8 %v4_9c98, 46
  store i1 %v2_9c84, i1* %cpsr_c.global-to-local, align 1
  %v7_9c84 = icmp eq i8 %v4_9c98, 47
  store i1 %v7_9c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c84, label %dec_label_pc_9d28, label %dec_label_pc_9c8c

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c84, %dec_label_pc_9c7c
  %v0_9c8c = phi i32 [ %v1_9c8c, %dec_label_pc_9c84 ], [ 0, %dec_label_pc_9c7c ]
  %v1_9c8c = add i32 %v0_9c8c, 1
  store i32 %v1_9c8c, i32* %r1.global-to-local, align 4
  store i32 %v10_82b0, i32* @ip, align 4
  store i32 %v1_9c8c, i32* %stack_var_-44, align 4
  %v2_9c98 = add i32 %v1_9c8c, %v1_9c74
  %v3_9c98 = inttoptr i32 %v2_9c98 to i8*
  %v4_9c98 = load i8, i8* %v3_9c98, align 1
  %v6_9c98 = zext i8 %v4_9c98 to i32
  store i32 %v6_9c98, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c9c = icmp eq i8 %v4_9c98, 0
  store i1 %v2_9c9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9c98, i32* %r2.global-to-local, align 4
  br i1 %v2_9c9c, label %dec_label_pc_9ca8, label %dec_label_pc_9c84

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c8c, %.thread47, %dec_label_pc_9d28
  %v0_9ca8 = load i32, i32* @r6, align 4
  store i32 %v0_9ca8, i32* %r0.global-to-local, align 4
  %v1_9cac = inttoptr i32 %v0_9ca8 to i8*
  %v2_9cac = call i32 @function_12450(i8* %v1_9cac)
  store i32 %v2_9cac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cb0 = icmp eq i32 %v2_9cac, 0
  store i1 %v2_9cb0, i1* %cpsr_z.global-to-local, align 1
  %tmp215 = icmp slt i32 %v2_9cac, 1
  br i1 %tmp215, label %dec_label_pc_9cc8, label %dec_label_pc_9cb8

dec_label_pc_9cb8:                                ; preds = %dec_label_pc_9ca8
  %v0_9cb8 = load i32, i32* @r6, align 4
  store i32 %v0_9cb8, i32* %r0.global-to-local, align 4
  %v1_9cbc = inttoptr i32 %v0_9cb8 to i8*
  %v2_9cbc = call i32 @function_12450(i8* %v1_9cbc)
  store i32 %v2_9cbc, i32* %r0.global-to-local, align 4
  %v2_9cc0 = icmp ugt i32 %v2_9cbc, 126
  store i1 %v2_9cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cc0 = icmp eq i32 %v2_9cbc, 127
  store i1 %v7_9cc0, i1* %cpsr_z.global-to-local, align 1
  %v7_9cc4 = icmp slt i32 %v2_9cbc, 128
  br i1 %v7_9cc4, label %dec_label_pc_9e88, label %dec_label_pc_9cc8

dec_label_pc_9cc8:                                ; preds = %dec_label_pc_9cb8, %dec_label_pc_9ca8, %dec_label_pc_9e88
  store i32 %v10_82b0, i32* @lr, align 4
  %v3_9ccc = load i32, i32* %stack_var_-44, align 4
  %v0_9cd0 = load i32, i32* @r6, align 4
  %v1_9cd0 = add i32 %v0_9cd0, 1
  store i32 %v1_9cd0, i32* @r5, align 4
  %v2_9cd4 = add i32 %v1_9cd0, %v3_9ccc
  store i32 %v2_9cd4, i32* %r0.global-to-local, align 4
  %v1_9cd8 = inttoptr i32 %v2_9cd4 to i8*
  %v2_9cd8 = call i32 @function_12450(i8* %v1_9cd8)
  store i32 %v2_9cd8, i32* %r0.global-to-local, align 4
  %v2_9cdc = icmp ugt i32 %v2_9cd8, 254
  store i1 %v2_9cdc, i1* %cpsr_c.global-to-local, align 1
  %v7_9cdc = icmp eq i32 %v2_9cd8, 255
  store i1 %v7_9cdc, i1* %cpsr_z.global-to-local, align 1
  %v8_9ce0 = icmp sgt i32 %v2_9cd8, 255
  br i1 %v8_9ce0, label %dec_label_pc_98d8, label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9cc8
  %v0_9ce4 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ce8 = add i32 %v0_9ce4, 533
  store i32 %v1_9ce8, i32* @r4, align 4
  store i32 %v1_9ce8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9cf4 = call i32 @function_124e4(i32 %v1_9ce8, i32 255)
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9cfc = load i32, i32* %stack_var_-44, align 4
  %v0_9d00 = load i32, i32* @r5, align 4
  %v2_9d00 = add i32 %v0_9d00, %v3_9cfc
  store i32 %v2_9d00, i32* %r0.global-to-local, align 4
  %v1_9d04 = inttoptr i32 %v2_9d00 to i8*
  %v2_9d04 = call i32 @function_12450(i8* %v1_9d04)
  store i32 %v2_9d04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d08 = icmp eq i32 %v2_9d04, 0
  store i1 %v2_9d08, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_9d04, 1
  br i1 %tmp216, label %dec_label_pc_98d8, label %dec_label_pc_9d10

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9ce4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v3_9d14 = load i32, i32* %stack_var_-44, align 4
  %v0_9d18 = load i32, i32* @r4, align 4
  store i32 %v0_9d18, i32* @r0, align 4
  %v0_9d1c = load i32, i32* @r5, align 4
  %v2_9d1c = add i32 %v0_9d1c, %v3_9d14
  store i32 %v2_9d1c, i32* %r1.global-to-local, align 4
  %v2_9d20 = inttoptr i32 %v0_9d18 to i8*
  %v3_9d20 = call i32 @function_12478(i8* %v2_9d20, i32 %v2_9d1c)
  store i32 %v3_9d20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d8

dec_label_pc_9d28:                                ; preds = %dec_label_pc_9c84, %bb214
  %v2_9d2c = phi i32 [ %v1_9c74, %bb214 ], [ %v2_9c98, %dec_label_pc_9c84 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d2c = inttoptr i32 %v2_9d2c to i8*
  store i8 0, i8* %v3_9d2c, align 1
  br label %dec_label_pc_9ca8

dec_label_pc_9d34:                                ; preds = %dec_label_pc_9858
  %v1_9d34 = add i32 %v0_9d34, 1
  store i32 %v1_9d34, i32* %ip.global-to-local, align 4
  %v2_9d38 = add i32 %v0_9858, %v1_9d34
  store i32 %v2_9d38, i32* %r4.global-to-local, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i32 %v2_9d38, i32* %r0.global-to-local, align 4
  store i32 %v1_9d34, i32* %stack_var_-44, align 4
  %v1_9d48 = inttoptr i32 %v2_9d38 to i8*
  %v2_9d48 = call i32 @function_12450(i8* %v1_9d48)
  store i32 %v2_9d48, i32* %r0.global-to-local, align 4
  %v0_9d4c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d4c = add i32 %v0_9d4c, %v2_9d48
  store i32 %v2_9d4c, i32* @r4, align 4
  %v1_9d50 = add i32 %v2_9d4c, -1
  %v2_9d50 = inttoptr i32 %v1_9d50 to i8*
  %v3_9d50 = load i8, i8* %v2_9d50, align 1
  %v4_9d50 = zext i8 %v3_9d50 to i32
  store i32 %v4_9d50, i32* %r3.global-to-local, align 4
  %v2_9d54 = icmp ugt i8 %v3_9d50, 33
  store i1 %v2_9d54, i1* %cpsr_c.global-to-local, align 1
  %v7_9d54 = icmp eq i8 %v3_9d50, 34
  store i1 %v7_9d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d54, label %dec_label_pc_9d5c, label %dec_label_pc_9864

dec_label_pc_9d5c:                                ; preds = %dec_label_pc_9d34
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9d60 = load i32, i32* %stack_var_-44, align 4
  %v0_9d64 = load i32, i32* @r5, align 4
  %v2_9d64 = add i32 %v0_9d64, %v3_9d60
  store i32 %v2_9d64, i32* %r4.global-to-local, align 4
  store i32 %v2_9d64, i32* %r0.global-to-local, align 4
  %v1_9d6c = inttoptr i32 %v2_9d64 to i8*
  %v2_9d6c = call i32 @function_12450(i8* %v1_9d6c)
  store i32 %v2_9d6c, i32* %r0.global-to-local, align 4
  %v2_9d70 = add i32 %v2_9d64, %v2_9d6c
  store i32 %v2_9d70, i32* @r4, align 4
  %v0_9d74 = load i32, i32* @r6, align 4
  %v1_9d74 = trunc i32 %v0_9d74 to i8
  %v3_9d74 = add i32 %v2_9d70, -1
  %v4_9d74 = inttoptr i32 %v3_9d74 to i8*
  store i8 %v1_9d74, i8* %v4_9d74, align 1
  br label %dec_label_pc_9864

dec_label_pc_9d7c:                                ; preds = %dec_label_pc_98cc
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9d80 = load i32, i32* %stack_var_-44, align 4
  %v0_9d84 = load i32, i32* @r6, align 4
  %v1_9d84 = add i32 %v0_9d84, 1
  store i32 %v1_9d84, i32* @r5, align 4
  %v2_9d88 = add i32 %v1_9d84, %v3_9d80
  store i32 %v2_9d88, i32* %r0.global-to-local, align 4
  %v1_9d8c = inttoptr i32 %v2_9d88 to i8*
  %v2_9d8c = call i32 @function_12450(i8* %v1_9d8c)
  store i32 %v2_9d8c, i32* %r0.global-to-local, align 4
  %v2_9d90 = icmp ugt i32 %v2_9d8c, 254
  store i1 %v2_9d90, i1* %cpsr_c.global-to-local, align 1
  %v7_9d90 = icmp eq i32 %v2_9d8c, 255
  store i1 %v7_9d90, i1* %cpsr_z.global-to-local, align 1
  %v8_9d94 = icmp sgt i32 %v2_9d8c, 255
  br i1 %v8_9d94, label %dec_label_pc_98d8, label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d7c
  %v0_9d98 = load i32, i32* %sb.global-to-local, align 4
  %v1_9d9c = add i32 %v0_9d98, 533
  store i32 %v1_9d9c, i32* @r4, align 4
  store i32 %v1_9d9c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9da8 = call i32 @function_124e4(i32 %v1_9d9c, i32 255)
  store i32 %v10_82b0, i32* @ip, align 4
  %v3_9db0 = load i32, i32* %stack_var_-44, align 4
  %v0_9db4 = load i32, i32* @r5, align 4
  %v2_9db4 = add i32 %v0_9db4, %v3_9db0
  store i32 %v2_9db4, i32* %r0.global-to-local, align 4
  %v1_9db8 = inttoptr i32 %v2_9db4 to i8*
  %v2_9db8 = call i32 @function_12450(i8* %v1_9db8)
  store i32 %v2_9db8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9dbc = icmp eq i32 %v2_9db8, 0
  store i1 %v2_9dbc, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_9db8, 1
  br i1 %tmp217, label %dec_label_pc_98d8, label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9d98
  store i32 %v10_82b0, i32* @lr, align 4
  %v3_9dc8 = load i32, i32* %stack_var_-44, align 4
  %v0_9dcc = load i32, i32* @r4, align 4
  store i32 %v0_9dcc, i32* @r0, align 4
  %v0_9dd0 = load i32, i32* @r5, align 4
  %v2_9dd0 = add i32 %v0_9dd0, %v3_9dc8
  store i32 %v2_9dd0, i32* %r1.global-to-local, align 4
  %v2_9dd4 = inttoptr i32 %v0_9dcc to i8*
  %v3_9dd4 = call i32 @function_12478(i8* %v2_9dd4, i32 %v2_9dd0)
  store i32 %v3_9dd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d8

dec_label_pc_9ddc:                                ; preds = %dec_label_pc_8480
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_9de0 = call i32 @function_11a84(i32 53)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v3_9dec = call i32 @function_119c0(i32 53, i32* null)
  store i32 %v3_9dec, i32* %r1.global-to-local, align 4
  %v0_9df4 = load i32, i32* @r5, align 4
  %v1_9df4 = add i32 %v0_9df4, 20
  store i32 %v1_9df4, i32* @r0, align 4
  %v2_9df8 = inttoptr i32 %v1_9df4 to i8*
  %v3_9df8 = call i32 @function_12478(i8* %v2_9df8, i32 %v3_9dec)
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_9e00 = call i32 @function_119e4(i32 53)
  store i32 %v1_9e00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9e04:                                ; preds = %dec_label_pc_8480, %dec_label_pc_9ef4, %dec_label_pc_9ec8, %dec_label_pc_9e9c, %dec_label_pc_9e5c, %dec_label_pc_9ddc
  store i32 %v0_83cc, i32* @r0, align 4
  %v0_9e08 = load i32, i32* @r8, align 4
  store i32 %v0_9e08, i32* %r1.global-to-local, align 4
  %v2_9e0c = inttoptr i32 %v0_83cc to i8*
  %v3_9e0c = call i32 @function_12478(i8* %v2_9e0c, i32 %v0_9e08)
  store i32 %v3_9e0c, i32* %r0.global-to-local, align 4
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  %v0_9e14 = load i32, i32* %fp.global-to-local, align 4
  %v1_9e14 = add i32 %v0_9e14, 1
  store i32 %v1_9e14, i32* %fp.global-to-local, align 4
  %v0_9e18 = load i32, i32* @r5, align 4
  %v3_9e1c = icmp uge i32 %v1_9e14, %v0_835c
  store i1 %v3_9e1c, i1* %cpsr_c.global-to-local, align 1
  %v9_9e1c = icmp eq i32 %v1_9e14, %v0_835c
  store i1 %v9_9e1c, i1* %cpsr_z.global-to-local, align 1
  %v1_9e20 = add i32 %v0_9e18, 3140
  store i32 %v1_9e20, i32* @r5, align 4
  br i1 %v9_9e1c, label %dec_label_pc_9e28, label %dec_label_pc_838c

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9e04
  %v0_9e38 = load i32, i32* @r7, align 4
  %v1_9e38 = and i32 %v0_9e38, 128
  %v2_9e38 = icmp ne i32 %v1_9e38, 0
  store i1 %v2_9e38, i1* %cpsr_c.global-to-local, align 1
  %v3_9e38 = udiv i32 %v0_9e38, 256
  %v1_9e3c = add i32 %v2_8370, 1452
  store i32 %v1_9e3c, i32* %r3.global-to-local, align 4
  %v2_9e40 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e40, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_84ec.preheader

dec_label_pc_9e5c:                                ; preds = %dec_label_pc_8480
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9e60 = call i32 @function_11a84(i32 54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 54, i32* %r0.global-to-local, align 4
  %v3_9e6c = call i32 @function_119c0(i32 54, i32* null)
  store i32 %v3_9e6c, i32* %r1.global-to-local, align 4
  %v0_9e74 = load i32, i32* @r5, align 4
  %v1_9e74 = add i32 %v0_9e74, 20
  store i32 %v1_9e74, i32* @r0, align 4
  %v2_9e78 = inttoptr i32 %v1_9e74 to i8*
  %v3_9e78 = call i32 @function_12478(i8* %v2_9e78, i32 %v3_9e6c)
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9e80 = call i32 @function_119e4(i32 54)
  store i32 %v1_9e80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9e88:                                ; preds = %dec_label_pc_9cb8
  %v0_9e88 = load i32, i32* %sb.global-to-local, align 4
  %v0_9e8c = load i32, i32* @r6, align 4
  store i32 %v0_9e8c, i32* %r1.global-to-local, align 4
  %v1_9e90 = add i32 %v0_9e88, 789
  store i32 %v1_9e90, i32* @r0, align 4
  %v2_9e94 = inttoptr i32 %v1_9e90 to i8*
  %v3_9e94 = call i32 @function_12478(i8* %v2_9e94, i32 %v0_9e8c)
  store i32 %v3_9e94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cc8

dec_label_pc_9e9c:                                ; preds = %dec_label_pc_8480
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9ea0 = call i32 @function_11a84(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9eac = call i32 @function_119c0(i32 51, i32* null)
  store i32 %v3_9eac, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 20
  store i32 %v1_9eb4, i32* @r0, align 4
  %v2_9eb8 = inttoptr i32 %v1_9eb4 to i8*
  %v3_9eb8 = call i32 @function_12478(i8* %v2_9eb8, i32 %v3_9eac)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9ec0 = call i32 @function_119e4(i32 51)
  store i32 %v1_9ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9ec8:                                ; preds = %dec_label_pc_8480
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9ecc = call i32 @function_11a84(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9ed8 = call i32 @function_119c0(i32 50, i32* null)
  store i32 %v3_9ed8, i32* %r1.global-to-local, align 4
  %v0_9ee0 = load i32, i32* @r5, align 4
  %v1_9ee0 = add i32 %v0_9ee0, 20
  store i32 %v1_9ee0, i32* @r0, align 4
  %v2_9ee4 = inttoptr i32 %v1_9ee0 to i8*
  %v3_9ee4 = call i32 @function_12478(i8* %v2_9ee4, i32 %v3_9ed8)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9eec = call i32 @function_119e4(i32 50)
  store i32 %v1_9eec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9ef4:                                ; preds = %dec_label_pc_8480
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_9ef8 = call i32 @function_11a84(i32 52)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r0.global-to-local, align 4
  %v3_9f04 = call i32 @function_119c0(i32 52, i32* null)
  store i32 %v3_9f04, i32* %r1.global-to-local, align 4
  %v0_9f0c = load i32, i32* @r5, align 4
  %v1_9f0c = add i32 %v0_9f0c, 20
  store i32 %v1_9f0c, i32* @r0, align 4
  %v2_9f10 = inttoptr i32 %v1_9f0c to i8*
  %v3_9f10 = call i32 @function_12478(i8* %v2_9f10, i32 %v3_9f04)
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_9f18 = call i32 @function_119e4(i32 52)
  store i32 %v1_9f18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

; uselistorder directives
  uselistorder i32 %v2_9e40, { 1, 0 }
  uselistorder i32 %v1_9e3c, { 1, 0 }
  uselistorder i32 %v0_9e38, { 0, 2, 1 }
  uselistorder i32 %v1_9e20, { 1, 0 }
  uselistorder i32 %v1_9d34, { 1, 0, 2 }
  uselistorder i8 %v4_9c98, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9c8c, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9c84, { 1, 0 }
  uselistorder i32 %v1_9c74, { 1, 0, 2 }
  uselistorder i1 %v7_9c70, { 1, 0 }
  uselistorder i1 %v9_9c68, { 1, 0 }
  uselistorder i32 %v0_9c2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9b8c, { 1, 0 }
  uselistorder i32 %v2_9b68, { 1, 0, 2 }
  uselistorder i32 %v1_9b60, { 1, 0, 2 }
  uselistorder i32 %v1_9ae8, { 0, 2, 1 }
  uselistorder i32 %v0_9ae8, { 0, 2, 1 }
  uselistorder i32 %v2_9a5c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_9a34, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9a28, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9a20, { 1, 0 }
  uselistorder i32 %v1_9a10, { 1, 0, 2 }
  uselistorder i1 %v7_9a0c, { 1, 0 }
  uselistorder i32 %v0_99cc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_9990, { 2, 0, 1, 3 }
  uselistorder i32 %v2_9974, { 1, 0, 2 }
  uselistorder i32 %v4_996c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9894, { 1, 0 }
  uselistorder i32 %v0_9858, { 1, 0 }
  uselistorder i32 %v0_9d34, { 1, 0 }
  uselistorder i1 %v7_9814, { 1, 0 }
  uselistorder i32 %v0_97fc, { 1, 0 }
  uselistorder i32 %v2_97ec, { 1, 0, 2 }
  uselistorder i32 %v1_97b8, { 1, 0 }
  uselistorder i32 %v0_97b8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9750, { 1, 0 }
  uselistorder i32 %v5_974c, { 1, 3, 6, 4, 5, 2, 0, 7, 8 }
  uselistorder i32 %v2_9734.v4_971c, { 1, 0, 2 }
  uselistorder i1 %v7_96f8, { 1, 0 }
  uselistorder i32 %v1_95d8, { 1, 0, 2 }
  uselistorder i32 %v1_95d0, { 1, 0 }
  uselistorder i1 %v7_95b8, { 1, 0 }
  uselistorder i32 %v5_95b4, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_959c.v4_9584, { 1, 0, 2 }
  uselistorder i1 %v7_9564, { 1, 0 }
  uselistorder i32 %v0_94cc, { 1, 0 }
  uselistorder i32 %v0_94b4, { 1, 0 }
  uselistorder i32 %v0_94b8, { 1, 0 }
  uselistorder i32 %v1_9490, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_945c, { 1, 0 }
  uselistorder i1 %v7_9424, { 0, 2, 1 }
  uselistorder i32 %v1_9448, { 1, 0 }
  uselistorder i32 %v3_9440, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_9434, { 1, 0 }
  uselistorder i1 %v7_93a8, { 1, 0 }
  uselistorder i32 %v5_93a4, { 4, 3, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 %v2_938c, { 1, 0, 2 }
  uselistorder i32 %v2_9388, { 1, 0, 2 }
  uselistorder i32 %v1_9374, { 0, 2, 1 }
  uselistorder i32 %v4_936c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_933c, { 1, 0 }
  uselistorder i1 %v7_92d4, { 1, 0 }
  uselistorder i32 %v5_92d0, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_92b8.v4_92a0, { 1, 0, 2 }
  uselistorder i1 %v7_9270, { 1, 0 }
  uselistorder i1 %v7_91fc, { 1, 0 }
  uselistorder i32 %v5_91f8, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_91e0.v4_91c8, { 1, 0, 2 }
  uselistorder i1 %v7_91a4, { 1, 0 }
  uselistorder i1 %v7_9124, { 1, 0 }
  uselistorder i32 %v5_9120, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9108.v4_90f0, { 1, 0, 2 }
  uselistorder i1 %v7_90d0, { 1, 0 }
  uselistorder i1 %v7_90a4, { 1, 0 }
  uselistorder i1 %v7_907c, { 1, 0 }
  uselistorder i32 %v0_9038, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9008, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8fa0, { 1, 0 }
  uselistorder i32 %v2_8f94, { 1, 0 }
  uselistorder i32 %v1_8f94, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f88, { 1, 0 }
  uselistorder i32 %v3_8f6c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8f4c, { 1, 0 }
  uselistorder i32 %v2_8f40, { 1, 0 }
  uselistorder i32 %v1_8f40, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f34, { 1, 0 }
  uselistorder i32 %v3_8f18, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8ed4, { 1, 0 }
  uselistorder i32 %v5_8eb0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8e98, { 1, 0 }
  uselistorder i32 %v3_8e7c, { 1, 0 }
  uselistorder i32 %v0_8e38, { 1, 0 }
  uselistorder i32 %v3_8e04, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e04, { 1, 0 }
  uselistorder i32 %v0_8e04, { 1, 0 }
  uselistorder i32 %v3_8dec, { 1, 0, 2 }
  uselistorder i32 %v0_8de0, { 1, 2, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i1 %v7_8d5c, { 1, 0 }
  uselistorder i32 %v4_8d50, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d20, { 1, 0 }
  uselistorder i32 %v2_8d10, { 1, 0 }
  uselistorder i32 %v2_8d04, { 1, 0 }
  uselistorder i32 %v1_8d04, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8cf8, { 1, 0 }
  uselistorder i32 %v3_8cdc, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8cc0, { 0, 2, 1 }
  uselistorder i32 %v2_8c98, { 1, 0 }
  uselistorder i32 %v1_8c98, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8c98, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8c84, { 1, 0 }
  uselistorder i32 %v3_8c64, { 1, 0, 2 }
  uselistorder i32 %v1_8bc8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8a6c, { 1, 0 }
  uselistorder i32 %v3_884c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_87f8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_87f4, { 1, 0 }
  uselistorder i32 %v3_87e8, { 2, 0, 1 }
  uselistorder i1 %v7_87d4, { 1, 0 }
  uselistorder i32 %v3_87cc, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87a4, { 1, 0 }
  uselistorder i1 %v7_879c, { 1, 0 }
  uselistorder i32 %v3_8780, { 1, 0 }
  uselistorder i32 %v1_8760, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8760, { 0, 2, 1 }
  uselistorder i32 %v2_875c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8748, { 1, 0, 2 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v2_86e8, { 1, 0 }
  uselistorder i32 %v1_86e8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_86dc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_86e8, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_86cc, { 1, 0 }
  uselistorder i32 %v3_86c0, { 1, 0, 2 }
  uselistorder i1 %v7_861c, { 1, 0 }
  uselistorder i32 %v3_8618, { 1, 3, 2, 0, 4, 5 }
  uselistorder i1 %v7_85f4, { 1, 0 }
  uselistorder i32 %v4_85cc, { 2, 1, 0 }
  uselistorder i8 %v3_85cc, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_85cc, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8870, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_8594, { 1, 0 }
  uselistorder i32 %v1_8594, { 1, 0 }
  uselistorder i1 %v7_858c, { 1, 0 }
  uselistorder i1 %v7_8584, { 1, 0 }
  uselistorder i1 %v7_857c, { 1, 0 }
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i1 %v7_8574, { 1, 0 }
  uselistorder i1 %v7_856c, { 1, 0 }
  uselistorder i32 %v1_8550, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_84f0, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_88b0, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_86d0, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_9e44, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_84cc, { 1, 0 }
  uselistorder i32 %v0_84cc, { 1, 0, 2 }
  uselistorder i32 %v2_8498, { 1, 0, 2, 3 }
  uselistorder i32 %v3_848c, { 1, 0, 2 }
  uselistorder i32 %v0_8480, { 1, 0 }
  uselistorder i32 %v5_8478, { 1, 0 }
  uselistorder i32 %v0_8444, { 1, 2, 0, 3 }
  uselistorder i32 %v0_83cc, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_83b4, { 1, 0 }
  uselistorder i32 %v5_83b0, { 1, 0 }
  uselistorder i32 %v2_8370, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_835c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8350, { 0, 1, 3, 2 }
  uselistorder i1 %v2_82e0, { 1, 0, 2 }
  uselistorder i32* %v11_82b4, { 2, 0, 1, 3 }
  uselistorder i32 %v10_82b0, { 21, 20, 19, 11, 10, 17, 16, 15, 18, 14, 13, 32, 31, 30, 28, 27, 29, 26, 25, 12, 23, 22, 9, 8, 7, 24, 6, 38, 37, 36, 34, 35, 33, 43, 42, 41, 40, 39, 5, 4, 3, 2, 1, 0, 44, 45 }
  uselistorder i32 %v2_82a8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_8298, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_8288, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8260, { 1, 0, 2 }
  uselistorder i8* %tmp168, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_823c, { 0, 28, 32, 33, 34, 35, 1, 30, 2, 3, 31, 36, 17, 18, 4, 27, 5, 6, 29, 37, 7, 26, 8, 9, 38, 10, 11, 24, 25, 39, 12, 21, 13, 22, 23, 40, 14, 15, 19, 20, 41, 42, 43, 16, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 %v5_8234, { 1, 0 }
  uselistorder i32 %v6_81bc, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 42, 40, 41 }
  uselistorder i32* %sb.global-to-local, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 10, 27, 28, 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 29, 30 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 11, 9, 7, 8, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 93, 39, 40, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 140, 141, 142, 143, 95, 96, 97, 98, 99, 100, 101, 105, 106, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 3, 120, 121, 119, 2, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 119, 120, 121, 122, 123, 124, 125, 126, 116, 117, 118, 79, 80, 81, 82, 83, 85, 86, 84, 87, 88, 90, 89, 91, 92, 93, 94, 95, 96, 97, 98, 2, 99, 100, 1, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 49, 25, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 97, 98, 151, 152, 153, 154, 155, 156, 157, 158, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 149, 0 }
  uselistorder i32* %r0.global-to-local, { 13, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 36, 25, 24, 26, 335, 37, 234, 99, 76, 47, 38, 40, 39, 41, 43, 42, 45, 44, 48, 46, 49, 51, 50, 52, 54, 53, 56, 55, 60, 57, 58, 59, 61, 62, 64, 63, 66, 65, 67, 68, 69, 71, 70, 72, 73, 74, 77, 75, 79, 78, 80, 82, 81, 83, 86, 84, 85, 88, 87, 92, 89, 90, 91, 93, 95, 94, 97, 96, 98, 101, 100, 103, 102, 104, 105, 107, 106, 108, 109, 110, 4, 112, 111, 114, 113, 115, 117, 116, 118, 119, 120, 122, 121, 124, 123, 125, 127, 126, 128, 130, 129, 132, 131, 133, 135, 134, 136, 139, 137, 138, 141, 140, 143, 142, 144, 146, 145, 147, 149, 148, 151, 150, 152, 154, 153, 5, 155, 157, 156, 159, 158, 161, 160, 164, 162, 163, 166, 165, 167, 169, 168, 170, 173, 171, 172, 175, 174, 177, 176, 178, 180, 179, 181, 183, 182, 184, 185, 186, 188, 187, 190, 189, 191, 193, 192, 194, 196, 195, 197, 198, 199, 201, 200, 203, 202, 204, 206, 205, 207, 209, 208, 210, 3, 211, 212, 213, 215, 214, 217, 216, 220, 218, 219, 223, 221, 222, 2, 224, 225, 226, 228, 227, 229, 231, 230, 1, 232, 233, 235, 236, 10, 334, 9, 336, 337, 8, 338, 339, 7, 340, 341, 342, 343, 344, 6, 345, 237, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 273, 275, 276, 35, 277, 34, 278, 280, 279, 33, 282, 281, 32, 283, 284, 285, 11, 31, 286, 287, 288, 30, 289, 29, 290, 291, 28, 292, 27, 293, 294, 295, 296, 298, 297, 299, 301, 300, 302, 303, 304, 305, 307, 306, 309, 308, 311, 310, 313, 312, 315, 314, 316, 317, 318, 319, 320, 321, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46, 47, 49, 50, 51, 52, 53, 44, 45, 26, 27, 28, 29, 30, 31, 48, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32* %fp.global-to-local, { 0, 30, 1, 3, 2, 4, 5, 6, 7, 34, 33, 27, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 36, 28, 29, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 144, 94, 95, 96, 97, 98, 99, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 141, 142, 100, 102, 101, 103, 104, 109, 111, 110, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 125, 126, 118, 119, 120, 121, 122, 123, 124, 127, 0, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 155, 100, 101, 102, 103, 154, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 150, 151, 152, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 129, 130, 122, 123, 124, 125, 126, 127, 128, 131, 0, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_182c8.46 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_182b8.42 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_182b0.40 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_182a4.38 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_182ac.36 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 1, 4, 2, 5, 0, 6, 3, 7 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1828c.17 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_9e04, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9cc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9ca8, { 2, 0, 1 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_9a74, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9a48, { 2, 0, 1 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_99ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_98d8, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_988c, { 1, 0 }
  uselistorder label %dec_label_pc_9864, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9858, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9614, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_9510, { 0, 2, 1 }
  uselistorder label %dec_label_pc_9464, { 1, 0 }
  uselistorder label %dec_label_pc_945c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9434, { 1, 0 }
  uselistorder label %dec_label_pc_93f8, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_930c, { 2, 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_9040, { 1, 0 }
  uselistorder label %dec_label_pc_8ef8, { 1, 0 }
  uselistorder label %dec_label_pc_8dc8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8da0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d34, { 1, 2, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_8c44, { 1, 0 }
  uselistorder label %dec_label_pc_8c2c, { 1, 0 }
  uselistorder label %dec_label_pc_8bf0, { 1, 0 }
  uselistorder label %dec_label_pc_8b7c, { 1, 0 }
  uselistorder label %dec_label_pc_8b44, { 1, 0 }
  uselistorder label %dec_label_pc_887c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_87ac, { 7, 8, 9, 10, 11, 1, 12, 13, 2, 14, 15, 3, 16, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_8774, { 1, 0 }
  uselistorder label %dec_label_pc_85b4, { 5, 0, 1, 4, 6, 2, 3, 7 }
  uselistorder label %dec_label_pc_859c, { 1, 0 }
  uselistorder label %dec_label_pc_8530.dec_label_pc_8530_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8508.dec_label_pc_8508_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_84ec, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_84ec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8480, { 1, 0 }
  uselistorder label %dec_label_pc_8404, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_82bc, { 1, 0 }
  uselistorder label %dec_label_pc_8274, { 1, 3, 4, 0, 2 }
}

define i32 @function_9f20(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f20:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f20 = icmp eq i32 %arg1, 0
  br i1 %v2_9f20, label %dec_label_pc_9f68, label %dec_label_pc_9f30

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f20
  %v0_9f30 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f30 = add i32 %v0_9f30, 4
  %v2_9f30 = inttoptr i32 %v1_9f30 to i8*
  %v3_9f30 = load i8, i8* %v2_9f30, align 1
  %v4_9f30 = zext i8 %v3_9f30 to i32
  %v9_9f34 = icmp eq i32 %v4_9f30, %arg3
  br i1 %v9_9f34, label %dec_label_pc_9f74, label %dec_label_pc_9f58.preheader

dec_label_pc_9f58.preheader:                      ; preds = %dec_label_pc_9f30
  br label %dec_label_pc_9f58

dec_label_pc_9f48:                                ; preds = %dec_label_pc_9f58
  %v1_9f48 = add i32 %v0_9f50.in, 12
  %v2_9f48 = inttoptr i32 %v1_9f48 to i8*
  %v3_9f48 = load i8, i8* %v2_9f48, align 1
  %v4_9f48 = zext i8 %v3_9f48 to i32
  %v9_9f4c = icmp eq i32 %v4_9f48, %arg3
  br i1 %v9_9f4c, label %dec_label_pc_9f74, label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f58.preheader, %dec_label_pc_9f48
  %v0_9f50.in = phi i32 [ %v0_9f30, %dec_label_pc_9f58.preheader ], [ %v0_9f50, %dec_label_pc_9f48 ]
  %v0_9f58 = phi i32 [ 0, %dec_label_pc_9f58.preheader ], [ %v1_9f58, %dec_label_pc_9f48 ]
  %v0_9f50 = add i32 %v0_9f50.in, 8
  %v1_9f58 = add i32 %v0_9f58, 1
  %v9_9f5c = icmp eq i32 %v1_9f58, %arg1
  store i32 %v0_9f50, i32* %r1.global-to-local, align 4
  br i1 %v9_9f5c, label %dec_label_pc_9f68, label %dec_label_pc_9f48

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9f58, %dec_label_pc_9f20, %dec_label_pc_9f74
  %v0_9f68 = phi i32 [ %arg4, %dec_label_pc_9f20 ], [ %v2_9f74, %dec_label_pc_9f74 ], [ %arg4, %dec_label_pc_9f58 ]
  ret i32 %v0_9f68

dec_label_pc_9f74:                                ; preds = %dec_label_pc_9f48, %dec_label_pc_9f30
  %v0_9f74 = phi i32 [ %v0_9f30, %dec_label_pc_9f30 ], [ %v0_9f50, %dec_label_pc_9f48 ]
  %v1_9f74 = inttoptr i32 %v0_9f74 to i32*
  %v2_9f74 = load i32, i32* %v1_9f74, align 4
  br label %dec_label_pc_9f68

; uselistorder directives
  uselistorder i32 %v1_9f58, { 1, 0 }
  uselistorder i32 %v0_9f50, { 1, 0, 2 }
  uselistorder i32 %v0_9f50.in, { 1, 0 }
  uselistorder i32 %v0_9f30, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f58, { 1, 0 }
}

define i32 @function_9f7c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f7c:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f7c = icmp eq i32 %arg1, 0
  %v6_9f80 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_9f7c, label %dec_label_pc_9fc4, label %dec_label_pc_9f8c

dec_label_pc_9f8c:                                ; preds = %dec_label_pc_9f7c
  %v0_9f8c = load i32, i32* %r1.global-to-local, align 4
  %v1_9f8c = add i32 %v0_9f8c, 4
  %v2_9f8c = inttoptr i32 %v1_9f8c to i8*
  %v3_9f8c = load i8, i8* %v2_9f8c, align 1
  %v4_9f8c = zext i8 %v3_9f8c to i32
  %v9_9f90 = icmp eq i32 %v4_9f8c, %arg3
  br i1 %v9_9f90, label %dec_label_pc_9fd0, label %dec_label_pc_9fb4.preheader

dec_label_pc_9fb4.preheader:                      ; preds = %dec_label_pc_9f8c
  br label %dec_label_pc_9fb4

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9fb4
  %v1_9fa4 = add i32 %v0_9fac.in, 12
  %v2_9fa4 = inttoptr i32 %v1_9fa4 to i8*
  %v3_9fa4 = load i8, i8* %v2_9fa4, align 1
  %v4_9fa4 = zext i8 %v3_9fa4 to i32
  %v9_9fa8 = icmp eq i32 %v4_9fa4, %arg3
  br i1 %v9_9fa8, label %dec_label_pc_9fd0, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9fb4.preheader, %dec_label_pc_9fa4
  %v0_9fac.in = phi i32 [ %v0_9f8c, %dec_label_pc_9fb4.preheader ], [ %v0_9fac, %dec_label_pc_9fa4 ]
  %v0_9fb4 = phi i32 [ 0, %dec_label_pc_9fb4.preheader ], [ %v1_9fb4, %dec_label_pc_9fa4 ]
  %v0_9fac = add i32 %v0_9fac.in, 8
  %v1_9fb4 = add i32 %v0_9fb4, 1
  %v9_9fb8 = icmp eq i32 %v1_9fb4, %arg1
  store i32 %v0_9fac, i32* %r1.global-to-local, align 4
  br i1 %v9_9fb8, label %dec_label_pc_9fc4, label %dec_label_pc_9fa4

dec_label_pc_9fc4:                                ; preds = %dec_label_pc_9fb4, %dec_label_pc_9fd0, %dec_label_pc_9f7c, %dec_label_pc_9fdc
  %v0_9fc4 = phi i32 [ %arg4, %dec_label_pc_9fd0 ], [ %arg4, %dec_label_pc_9f7c ], [ %v1_9fdc, %dec_label_pc_9fdc ], [ %arg4, %dec_label_pc_9fb4 ]
  store i32 %v6_9f80, i32* @lr, align 4
  ret i32 %v0_9fc4

dec_label_pc_9fd0:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9f8c
  %v0_9fd0 = phi i32 [ %v0_9f8c, %dec_label_pc_9f8c ], [ %v0_9fac, %dec_label_pc_9fa4 ]
  %v1_9fd0 = inttoptr i32 %v0_9fd0 to i32*
  %v2_9fd0 = load i32, i32* %v1_9fd0, align 4
  store i32 %v2_9fd0, i32* @r0, align 4
  %v2_9fd4 = icmp eq i32 %v2_9fd0, 0
  br i1 %v2_9fd4, label %dec_label_pc_9fc4, label %dec_label_pc_9fdc

dec_label_pc_9fdc:                                ; preds = %dec_label_pc_9fd0
  %v1_9fdc = call i32 @function_13614(i32 %v2_9fd0)
  br label %dec_label_pc_9fc4

; uselistorder directives
  uselistorder i32 %v1_9fb4, { 1, 0 }
  uselistorder i32 %v0_9fac, { 1, 0, 2 }
  uselistorder i32 %v0_9fac.in, { 1, 0 }
  uselistorder i32 %v0_9f8c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9fc4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_9fb4, { 1, 0 }
}

define i32 @function_9fe8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9fe8:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_9fe8 = icmp eq i32 %arg1, 0
  %v3_9fec = load i32, i32* @r4, align 4
  store i32 %v3_9fec, i32* %stack_var_-8, align 4
  %v6_9fec = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_9fe8, label %dec_label_pc_a030, label %dec_label_pc_9ff8

dec_label_pc_9ff8:                                ; preds = %dec_label_pc_9fe8
  %v0_9ff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9ff8 = add i32 %v0_9ff8, 4
  %v2_9ff8 = inttoptr i32 %v1_9ff8 to i8*
  %v3_9ff8 = load i8, i8* %v2_9ff8, align 1
  %v4_9ff8 = zext i8 %v3_9ff8 to i32
  %v9_9ffc = icmp eq i32 %v4_9ff8, %arg3
  br i1 %v9_9ffc, label %dec_label_pc_a03c, label %dec_label_pc_a020.preheader

dec_label_pc_a020.preheader:                      ; preds = %dec_label_pc_9ff8
  br label %dec_label_pc_a020

dec_label_pc_a010:                                ; preds = %dec_label_pc_a020
  %v1_a010 = add i32 %v0_a018.in, 12
  %v2_a010 = inttoptr i32 %v1_a010 to i8*
  %v3_a010 = load i8, i8* %v2_a010, align 1
  %v4_a010 = zext i8 %v3_a010 to i32
  %v9_a014 = icmp eq i32 %v4_a010, %arg3
  br i1 %v9_a014, label %dec_label_pc_a03c, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_a020.preheader, %dec_label_pc_a010
  %v0_a018.in = phi i32 [ %v0_9ff8, %dec_label_pc_a020.preheader ], [ %v0_a018, %dec_label_pc_a010 ]
  %v0_a020 = phi i32 [ 0, %dec_label_pc_a020.preheader ], [ %v1_a020, %dec_label_pc_a010 ]
  %v0_a018 = add i32 %v0_a018.in, 8
  %v1_a020 = add i32 %v0_a020, 1
  store i32 %v1_a020, i32* @lr, align 4
  %v9_a024 = icmp eq i32 %v1_a020, %arg1
  store i32 %v0_a018, i32* %r1.global-to-local, align 4
  br i1 %v9_a024, label %dec_label_pc_a030, label %dec_label_pc_a010

dec_label_pc_a030:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a03c, %dec_label_pc_9fe8, %dec_label_pc_a048
  %v2_a034 = phi i32 [ %v3_9fec, %dec_label_pc_a03c ], [ %v3_9fec, %dec_label_pc_9fe8 ], [ %v2_a034.pre, %dec_label_pc_a048 ], [ %v3_9fec, %dec_label_pc_a020 ]
  %v0_a030 = phi i32 [ %arg4, %dec_label_pc_a03c ], [ %arg4, %dec_label_pc_9fe8 ], [ %v3_a04c, %dec_label_pc_a048 ], [ %arg4, %dec_label_pc_a020 ]
  store i32 %v2_a034, i32* @r4, align 4
  store i32 %v6_9fec, i32* @lr, align 4
  ret i32 %v0_a030

dec_label_pc_a03c:                                ; preds = %dec_label_pc_a010, %dec_label_pc_9ff8
  %v0_a03c = phi i32 [ %v0_9ff8, %dec_label_pc_9ff8 ], [ %v0_a018, %dec_label_pc_a010 ]
  %v1_a03c = inttoptr i32 %v0_a03c to i32*
  %v2_a03c = load i32, i32* %v1_a03c, align 4
  %v2_a040 = icmp eq i32 %v2_a03c, 0
  br i1 %v2_a040, label %dec_label_pc_a030, label %dec_label_pc_a048

dec_label_pc_a048:                                ; preds = %dec_label_pc_a03c
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a04c = inttoptr i32 %v2_a03c to i8*
  %v3_a04c = call i32 @function_12574(i8* %v2_a04c, i32 10)
  %v2_a034.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a030

; uselistorder directives
  uselistorder i32 %v1_a020, { 1, 2, 0 }
  uselistorder i32 %v0_a018, { 1, 0, 2 }
  uselistorder i32 %v0_a018.in, { 1, 0 }
  uselistorder i32 %v0_9ff8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a030, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
}

define i32 @function_a058(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a058:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v9_a058 = load i32, i32* @r6, align 4
  %v12_a058 = load i32, i32* @r7, align 4
  %v18_a058 = load i32, i32* @sb, align 4
  %v24_a058 = load i32, i32* @fp, align 4
  %v2_a05c = icmp ugt i32 %arg2, 2
  %v7_a05c = icmp eq i32 %arg2, 3
  store i1 %v7_a05c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a068 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a068, i32* @r5, align 4
  %v2_a06c = xor i1 %v7_a05c, true
  %v3_a06c = and i1 %v2_a05c, %v2_a06c
  br i1 %v3_a06c, label %dec_label_pc_a07c, label %dec_label_pc_a070

dec_label_pc_a070:                                ; preds = %dec_label_pc_a0c0, %.dec_label_pc_a070_crit_edge, %dec_label_pc_a0b4, %dec_label_pc_a0a4, %dec_label_pc_a07c, %dec_label_pc_a058, %dec_label_pc_a268
  %v1_a078 = phi i32 [ %v1_a078.pre, %.dec_label_pc_a070_crit_edge ], [ %v1_a080, %dec_label_pc_a0c0 ], [ %v1_a080, %dec_label_pc_a0b4 ], [ %v1_a080, %dec_label_pc_a0a4 ], [ %v1_a080, %dec_label_pc_a07c ], [ %v0_a068, %dec_label_pc_a058 ], [ %v0_a26c, %dec_label_pc_a268 ]
  store i32 %v9_a058, i32* @r6, align 4
  store i32 %v12_a058, i32* @r7, align 4
  store i32 %v18_a058, i32* @sb, align 4
  store i32 %v24_a058, i32* @fp, align 4
  ret i32 %v1_a078

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a058
  %v1_a07c = inttoptr i32 %v0_a068 to i32*
  %v2_a07c = load i32, i32* %v1_a07c, align 4
  %v1_a080 = and i32 %v2_a07c, 16711680
  store i32 %v1_a080, i32* %r0.global-to-local, align 4
  %v3_a084 = udiv i32 %v2_a07c, 16777216
  %v1_a088 = and i32 %v2_a07c, 65280
  store i32 %v1_a088, i32* %r2.global-to-local, align 4
  %v4_a08c = udiv i32 %v1_a080, 256
  %v5_a08c = or i32 %v4_a08c, %v3_a084
  %v4_a090 = mul nuw nsw i32 %v1_a088, 256
  %v5_a090 = or i32 %v5_a08c, %v4_a090
  store i32 %v5_a090, i32* %r3.global-to-local, align 4
  %v5_a094 = call i32 @llvm.bswap.i32(i32 %v2_a07c)
  store i32 %v5_a094, i32* %r1.global-to-local, align 4
  %v7_a098 = icmp eq i32 %arg2, 4
  store i1 %v7_a098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a098, label %dec_label_pc_a070, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a07c
  %v1_a0a4 = add i32 %v0_a068, 4
  %v2_a0a4 = inttoptr i32 %v1_a0a4 to i8*
  %v3_a0a4 = load i8, i8* %v2_a0a4, align 1
  %v4_a0a4 = zext i8 %v3_a0a4 to i32
  store i32 %v4_a0a4, i32* %r3.global-to-local, align 4
  %v7_a0a8 = icmp eq i32 %arg2, 5
  store i1 %v7_a0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0a8, label %dec_label_pc_a070, label %dec_label_pc_a0b4

dec_label_pc_a0b4:                                ; preds = %dec_label_pc_a0a4
  %v1_a0b4 = add i32 %v0_a068, 5
  %v2_a0b4 = inttoptr i32 %v1_a0b4 to i8*
  %v3_a0b4 = load i8, i8* %v2_a0b4, align 1
  %v4_a0b4 = zext i8 %v3_a0b4 to i32
  store i32 %v4_a0b4, i32* @sb, align 4
  %v2_a0b8 = icmp eq i8 %v3_a0b4, 0
  store i1 %v2_a0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0b8, label %dec_label_pc_a070, label %dec_label_pc_a0c0

dec_label_pc_a0c0:                                ; preds = %dec_label_pc_a0b4
  %v2_a0c4 = mul nuw nsw i32 %v4_a0b4, 5
  store i32 %v2_a0c4, i32* @r7, align 4
  %v1_a0c8 = add i32 %arg2, -6
  store i32 %v1_a0c8, i32* %r3.global-to-local, align 4
  %v3_a0cc = icmp ult i32 %v1_a0c8, %v2_a0c4
  %v9_a0cc = icmp eq i32 %v1_a0c8, %v2_a0c4
  store i1 %v9_a0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a0cc, label %dec_label_pc_a070, label %dec_label_pc_a0d4

dec_label_pc_a0d4:                                ; preds = %dec_label_pc_a0c0
  store i32 %v4_a0b4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a0c8, i32* @r6, align 4
  %v2_a0e0 = call i32 @function_1442c(i32 %v4_a0b4, i32 24)
  store i32 %v2_a0e0, i32* %ip.global-to-local, align 4
  %v0_a0ec = load i32, i32* @r7, align 4
  %v1_a0ec = load i32, i32* @r4, align 4
  %v2_a0ec = sub i32 %v1_a0ec, %v0_a0ec
  store i32 %v2_a0ec, i32* @r7, align 4
  %v0_a0f0 = load i32, i32* @r5, align 4
  %v1_a0f0 = add i32 %v0_a0f0, 11
  store i32 %v1_a0f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0f4

dec_label_pc_a0f4:                                ; preds = %dec_label_pc_a0f4, %dec_label_pc_a0d4
  %v1_a0f8 = phi i32 [ %v1_a124, %dec_label_pc_a0f4 ], [ %v2_a0e0, %dec_label_pc_a0d4 ]
  %v0_a0f4 = phi i32 [ %v1_a120, %dec_label_pc_a0f4 ], [ %v1_a0f0, %dec_label_pc_a0d4 ]
  %v1_a0f4 = add i32 %v0_a0f4, -5
  %v2_a0f4 = inttoptr i32 %v1_a0f4 to i32*
  %v3_a0f4 = load i32, i32* %v2_a0f4, align 4
  store i32 %v3_a0f4, i32* %r1.global-to-local, align 4
  %v2_a0f8 = add i32 %v1_a0f8, 16
  %v3_a0f8 = inttoptr i32 %v2_a0f8 to i32*
  store i32 %v3_a0f4, i32* %v3_a0f8, align 4
  %v0_a0fc = load i32, i32* @r6, align 4
  %v1_a0fc = add i32 %v0_a0fc, -5
  store i32 %v1_a0fc, i32* @r6, align 4
  %v0_a100 = load i32, i32* %r0.global-to-local, align 4
  %v1_a100 = add i32 %v0_a100, -1
  %v2_a100 = inttoptr i32 %v1_a100 to i8*
  %v3_a100 = load i8, i8* %v2_a100, align 1
  %v4_a100 = zext i8 %v3_a100 to i32
  store i32 %v4_a100, i32* %r2.global-to-local, align 4
  %v0_a104 = load i32, i32* @r7, align 4
  %v1_a104 = add i32 %v0_a104, -6
  store i32 %v1_a104, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_a10c = icmp eq i32 %v1_a0fc, %v1_a104
  store i1 %v9_a10c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_a100, i32* @r4, align 4
  %v2_a114 = load i32, i32* %ip.global-to-local, align 4
  %v3_a114 = add i32 %v2_a114, 20
  %v4_a114 = inttoptr i32 %v3_a114 to i8*
  store i8 %v3_a100, i8* %v4_a114, align 1
  %v0_a118 = load i32, i32* %r1.global-to-local, align 4
  %v1_a118 = load i32, i32* %ip.global-to-local, align 4
  %v2_a118 = add i32 %v1_a118, 4
  %v3_a118 = inttoptr i32 %v2_a118 to i32*
  store i32 %v0_a118, i32* %v3_a118, align 4
  %v0_a11c = load i32, i32* @lr, align 4
  %v1_a11c = trunc i32 %v0_a11c to i16
  %v2_a11c = load i32, i32* %ip.global-to-local, align 4
  %v3_a11c = inttoptr i32 %v2_a11c to i16*
  store i16 %v1_a11c, i16* %v3_a11c, align 2
  %v0_a120 = load i32, i32* %r0.global-to-local, align 4
  %v1_a120 = add i32 %v0_a120, 5
  store i32 %v1_a120, i32* %r0.global-to-local, align 4
  %v0_a124 = load i32, i32* %ip.global-to-local, align 4
  %v1_a124 = add i32 %v0_a124, 24
  store i32 %v1_a124, i32* %ip.global-to-local, align 4
  %v0_a128 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a128, label %dec_label_pc_a12c, label %dec_label_pc_a0f4

dec_label_pc_a12c:                                ; preds = %dec_label_pc_a0f4
  %v0_a12c = load i32, i32* @r6, align 4
  %v2_a12c = icmp eq i32 %v0_a12c, 0
  store i1 %v2_a12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a12c, label %dec_label_pc_a22c, label %dec_label_pc_a134

dec_label_pc_a134:                                ; preds = %dec_label_pc_a12c
  %v0_a134 = load i32, i32* @r4, align 4
  %v1_a134 = inttoptr i32 %v0_a134 to i8*
  %v2_a134 = load i8, i8* %v1_a134, align 1
  %v3_a134 = zext i8 %v2_a134 to i32
  store i32 %v3_a134, i32* @r5, align 4
  %v2_a138 = icmp eq i8 %v2_a134, 0
  store i1 %v2_a138, i1* %cpsr_z.global-to-local, align 1
  %v0_a13c = load i32, i32* @r7, align 4
  %v1_a13c = add i32 %v0_a13c, -7
  store i32 %v1_a13c, i32* @r8, align 4
  br i1 %v2_a138, label %bb, label %dec_label_pc_a148

bb:                                               ; preds = %dec_label_pc_a134
  store i32 %v3_a134, i32* @r6, align 4
  br label %dec_label_pc_a1fc

dec_label_pc_a148:                                ; preds = %dec_label_pc_a134
  store i32 %v3_a134, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a150 = call i32 @function_1442c(i32 %v3_a134, i32 8)
  store i32 %v2_a150, i32* %r0.global-to-local, align 4
  %v0_a154 = load i32, i32* @r8, align 4
  %v2_a154 = icmp eq i32 %v0_a154, 0
  store i1 %v2_a154, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a150, i32* @r6, align 4
  br i1 %v2_a154, label %dec_label_pc_a22c, label %dec_label_pc_a160

dec_label_pc_a160:                                ; preds = %dec_label_pc_a148
  %v0_a160 = load i32, i32* @r4, align 4
  %v1_a160 = add i32 %v0_a160, 1
  %v2_a160 = inttoptr i32 %v1_a160 to i8*
  %v3_a160 = load i8, i8* %v2_a160, align 1
  %v0_a164 = load i32, i32* @r7, align 4
  %v7_a164 = icmp eq i32 %v0_a164, 8
  store i1 %v7_a164, i1* %cpsr_z.global-to-local, align 1
  %v3_a168 = add i32 %v2_a150, 4
  %v4_a168 = inttoptr i32 %v3_a168 to i8*
  store i8 %v3_a160, i8* %v4_a168, align 1
  %v0_a16c = load i32, i32* @r4, align 4
  %v1_a16c = add i32 %v0_a16c, 1
  store i32 %v1_a16c, i32* %r3.global-to-local, align 4
  %v0_a170 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a170, label %dec_label_pc_a22c, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a160
  %v1_a174 = add i32 %v0_a16c, 2
  %v2_a174 = inttoptr i32 %v1_a174 to i8*
  %v3_a174 = load i8, i8* %v2_a174, align 1
  %v4_a174 = zext i8 %v3_a174 to i32
  store i32 %v4_a174, i32* @r4, align 4
  %v0_a178 = load i32, i32* @r7, align 4
  %v1_a178 = add i32 %v0_a178, -9
  store i32 %v1_a178, i32* @r7, align 4
  %v9_a17c = icmp eq i32 %v1_a178, %v4_a174
  store i1 %v9_a17c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a174, i32* %r1.global-to-local, align 4
  %v5_a184 = icmp slt i32 %v1_a178, %v4_a174
  br i1 %v5_a184, label %dec_label_pc_a22c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_a174
  %v7_a1844711 = add i32 %v0_a16c, 3
  store i32 %v7_a1844711, i32* @r8, align 4
  %v6_a188812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a188812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_a1d4

dec_label_pc_a198:                                ; preds = %dec_label_pc_a1d4
  %v0_a198 = load i32, i32* @r7, align 4
  %v1_a198 = load i32, i32* @r4, align 4
  %v2_a198 = sub i32 %v0_a198, %v1_a198
  store i32 %v2_a198, i32* %r1.global-to-local, align 4
  %v9_a198 = icmp eq i32 %v0_a198, %v1_a198
  store i1 %v9_a198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a198, label %dec_label_pc_a22c, label %dec_label_pc_a1a0

dec_label_pc_a1a0:                                ; preds = %dec_label_pc_a198
  %v3_a1a0 = mul i32 %v0_a1f4, 8
  store i32 %v3_a1a0, i32* %r3.global-to-local, align 4
  %v1_a1a4 = load i32, i32* @r8, align 4
  %v2_a1a4 = add i32 %v1_a1a4, %v1_a198
  %v3_a1a4 = inttoptr i32 %v2_a1a4 to i8*
  %v4_a1a4 = load i8, i8* %v3_a1a4, align 1
  %v6_a1a4 = zext i8 %v4_a1a4 to i32
  store i32 %v6_a1a4, i32* %r2.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r6, align 4
  %v2_a1a8 = add i32 %v0_a1a8, %v3_a1a0
  store i32 %v2_a1a8, i32* @sl, align 4
  %v1_a1ac = add i32 %v2_a198, -1
  store i32 %v1_a1ac, i32* %r3.global-to-local, align 4
  %v7_a1ac = icmp eq i32 %v2_a198, 1
  store i1 %v7_a1ac, i1* %cpsr_z.global-to-local, align 1
  %v3_a1b0 = add i32 %v2_a1a8, 4
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i8*
  store i8 %v4_a1a4, i8* %v4_a1b0, align 1
  %v0_a1b4 = load i32, i32* @r4, align 4
  %v1_a1b4 = load i32, i32* @r8, align 4
  %v2_a1b4 = add i32 %v1_a1b4, %v0_a1b4
  store i32 %v2_a1b4, i32* %r1.global-to-local, align 4
  %v0_a1b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b8, label %dec_label_pc_a22c, label %dec_label_pc_a1bc

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a1a0
  %v1_a1bc = add i32 %v2_a1b4, 1
  %v2_a1bc = inttoptr i32 %v1_a1bc to i8*
  %v3_a1bc = load i8, i8* %v2_a1bc, align 1
  %v4_a1bc = zext i8 %v3_a1bc to i32
  store i32 %v4_a1bc, i32* @r4, align 4
  %v0_a1c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1c0 = add i32 %v0_a1c0, -1
  store i32 %v1_a1c0, i32* @r7, align 4
  %v2_a1c4 = sub i32 %v1_a1c0, %v4_a1bc
  %tmp46 = sub i32 0, %v2_a1c4
  %v6_a1c4 = and i32 %v1_a1c0, %tmp46
  %v7_a1c4 = icmp slt i32 %v6_a1c4, 0
  %v8_a1c4 = icmp slt i32 %v2_a1c4, 0
  %v9_a1c4 = icmp eq i32 %v1_a1c0, %v4_a1bc
  store i1 %v9_a1c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1bc, i32* %r1.global-to-local, align 4
  %v2_a1cc = xor i1 %v8_a1c4, %v7_a1c4
  br i1 %v2_a1cc, label %dec_label_pc_a22c, label %dec_label_pc_a1d0

dec_label_pc_a1d0:                                ; preds = %dec_label_pc_a1bc
  %v1_a1d0 = add i32 %v2_a1b4, 2
  store i32 %v1_a1d0, i32* @r8, align 4
  br label %dec_label_pc_a1d4

dec_label_pc_a1d4:                                ; preds = %.thread10, %dec_label_pc_a1d0
  %v0_a1d8 = phi i32 [ %v4_a174, %.thread10 ], [ %v4_a1bc, %dec_label_pc_a1d0 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_a1d8 = add nuw nsw i32 %v0_a1d8, 1
  store i32 %v2_a1d8, i32* %r0.global-to-local, align 4
  %v2_a1dc = call i32 @function_1442c(i32 %v2_a1d8, i32 1)
  store i32 %v2_a1dc, i32* %r0.global-to-local, align 4
  %v0_a1e0 = load i32, i32* @fp, align 4
  %v1_a1e0 = add i32 %v0_a1e0, 1
  store i32 %v1_a1e0, i32* @fp, align 4
  %v1_a1e4 = load i32, i32* @sl, align 4
  %v2_a1e4 = inttoptr i32 %v1_a1e4 to i32*
  store i32 %v2_a1dc, i32* %v2_a1e4, align 4
  %v0_a1e8 = load i32, i32* @r8, align 4
  store i32 %v0_a1e8, i32* %r1.global-to-local, align 4
  %v0_a1ec = load i32, i32* @r4, align 4
  store i32 %v0_a1ec, i32* %r2.global-to-local, align 4
  %v3_a1f0 = call i32 @function_124c0(i32 %v2_a1dc, i32 %v0_a1e8, i32 %v0_a1ec)
  store i32 %v3_a1f0, i32* %r0.global-to-local, align 4
  %v0_a1f4 = load i32, i32* @fp, align 4
  %v1_a1f4 = load i32, i32* @r5, align 4
  %v9_a1f4 = icmp eq i32 %v0_a1f4, %v1_a1f4
  store i1 %v9_a1f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1f4, label %dec_label_pc_a1fc, label %dec_label_pc_a198

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1d4, %bb
  %v0_a1fc = call i32 @function_134dc()
  store i32 %v0_a1fc, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a204 = inttoptr i32 %v0_a1fc to i32*
  store i32 0, i32* %v2_a204, align 4
  %v0_a208 = call i32 @function_12da4()
  store i32 %v0_a208, i32* %r0.global-to-local, align 4
  %v7_a20c = icmp eq i32 %v0_a208, -1
  %. = zext i1 %v7_a20c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_a218 = icmp eq i32 %v0_a208, 0
  store i1 %v2_a218, i1* %cpsr_z.global-to-local, align 1
  %tmp49 = icmp slt i32 %v0_a208, 1
  br i1 %tmp49, label %bb50, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_a1fc
  store i32 1, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a22c

bb50:                                             ; preds = %dec_label_pc_a1fc
  store i32 %., i32* %r2.global-to-local, align 4
  %v2_a224 = icmp eq i1 %v7_a20c, false
  store i1 %v2_a224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a224, label %dec_label_pc_a274, label %dec_label_pc_a22c

dec_label_pc_a22c:                                ; preds = %dec_label_pc_a1bc, %dec_label_pc_a1a0, %dec_label_pc_a198, %dec_label_pc_a174, %.thread14, %bb50, %dec_label_pc_a160, %dec_label_pc_a148, %dec_label_pc_a12c
  store i32 %v2_a0e0, i32* %r3.global-to-local, align 4
  %v2_a230 = icmp eq i32 %v2_a0e0, 0
  store i1 %v2_a230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a230, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_a22c
  store i32 %v2_a0e0, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_a22c, %bb51
  store i32 41532, i32* @lr, align 4
  %v1_a238 = xor i1 %v2_a230, true
  call void @__pseudo_cond_branch(i1 %v1_a238, i32 ptrtoint (i32* @global_var_14b78.50 to i32))
  %v0_a23c = load i32, i32* @r6, align 4
  %v2_a23c = icmp eq i32 %v0_a23c, 0
  store i1 %v2_a23c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a23c, label %.dec_label_pc_a070_crit_edge, label %dec_label_pc_a244

.dec_label_pc_a070_crit_edge:                     ; preds = %bb52
  %v1_a078.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a070

dec_label_pc_a244:                                ; preds = %bb52
  %v0_a244 = load i32, i32* @r5, align 4
  %v2_a244 = icmp eq i32 %v0_a244, 0
  store i1 %v2_a244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a244, label %dec_label_pc_a268, label %dec_label_pc_a24c

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a244
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a250, %dec_label_pc_a24c
  %v1_a250 = phi i32 [ 0, %dec_label_pc_a24c ], [ %v1_a25c, %dec_label_pc_a250 ]
  %v0_a250 = phi i32 [ %v0_a23c, %dec_label_pc_a24c ], [ %v0_a268.pre, %dec_label_pc_a250 ]
  %v4_a250 = mul i32 %v1_a250, 8
  %v5_a250 = add i32 %v4_a250, %v0_a250
  %v6_a250 = inttoptr i32 %v5_a250 to i32*
  %v7_a250 = load i32, i32* %v6_a250, align 4
  store i32 %v7_a250, i32* %r0.global-to-local, align 4
  %v2_a254 = icmp eq i32 %v7_a250, 0
  store i1 %v2_a254, i1* %cpsr_z.global-to-local, align 1
  store i32 41564, i32* @lr, align 4
  %v1_a258 = xor i1 %v2_a254, true
  call void @__pseudo_cond_branch(i1 %v1_a258, i32 ptrtoint (i32* @global_var_14b78.50 to i32))
  %v0_a25c = load i32, i32* @r4, align 4
  %v1_a25c = add i32 %v0_a25c, 1
  store i32 %v1_a25c, i32* @r4, align 4
  %v0_a260 = load i32, i32* @r5, align 4
  %v9_a260 = icmp eq i32 %v0_a260, %v1_a25c
  store i1 %v9_a260, i1* %cpsr_z.global-to-local, align 1
  %v0_a268.pre = load i32, i32* @r6, align 4
  br i1 %v9_a260, label %dec_label_pc_a268, label %dec_label_pc_a250

dec_label_pc_a268:                                ; preds = %dec_label_pc_a250, %dec_label_pc_a244
  %v0_a268 = phi i32 [ %v0_a23c, %dec_label_pc_a244 ], [ %v0_a268.pre, %dec_label_pc_a250 ]
  store i32 %v0_a268, i32* @r0, align 4
  %v0_a26c = call i32 @function_14b78()
  store i32 %v0_a26c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a070

dec_label_pc_a274:                                ; preds = %bb50
  store i32 ptrtoint (i8** @global_var_21424.52 to i32), i32* %r3.global-to-local, align 4
  %v2_a278 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a278 = zext i8 %v2_a278 to i32
  store i32 %v3_a278, i32* %r0.global-to-local, align 4
  %v2_a27c = icmp eq i8 %v2_a278, 0
  store i1 %v2_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a27c, label %dec_label_pc_a2e0, label %dec_label_pc_a284

dec_label_pc_a284:                                ; preds = %dec_label_pc_a274
  store i32 ptrtoint (i32* @global_var_21428.54 to i32), i32* %r3.global-to-local, align 4
  %v2_a288 = load i32, i32* @global_var_21428.54, align 4
  store i32 %v2_a288, i32* %r1.global-to-local, align 4
  %v1_a28c = inttoptr i32 %v2_a288 to i32*
  %v2_a28c = load i32, i32* %v1_a28c, align 4
  store i32 %v2_a28c, i32* %ip.global-to-local, align 4
  %v1_a294 = add i32 %v2_a28c, 4
  %v2_a294 = inttoptr i32 %v1_a294 to i8*
  %v3_a294 = load i8, i8* %v2_a294, align 1
  %v4_a294 = zext i8 %v3_a294 to i32
  store i32 %v4_a294, i32* %r3.global-to-local, align 4
  %v9_a298 = icmp eq i8 %v3_a294, %v3_a0a4
  store i1 %v9_a298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a298, label %dec_label_pc_a2c0, label %dec_label_pc_a2a0

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a284, %dec_label_pc_a2ac
  %v0_a2a0 = phi i32 [ %v1_a2a0, %dec_label_pc_a2ac ], [ 0, %dec_label_pc_a284 ]
  %v1_a2a0 = add i32 %v0_a2a0, 1
  store i32 %v1_a2a0, i32* %r2.global-to-local, align 4
  %v9_a2a4 = icmp eq i32 %v1_a2a0, %v3_a278
  store i1 %v9_a2a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2a4, label %dec_label_pc_a2e0, label %dec_label_pc_a2ac

dec_label_pc_a2ac:                                ; preds = %dec_label_pc_a2a0
  %v4_a2ac = mul i32 %v1_a2a0, 4
  %v5_a2ac = add i32 %v4_a2ac, %v2_a288
  %v6_a2ac = inttoptr i32 %v5_a2ac to i32*
  %v7_a2ac = load i32, i32* %v6_a2ac, align 4
  store i32 %v7_a2ac, i32* %ip.global-to-local, align 4
  %v1_a2b4 = add i32 %v7_a2ac, 4
  %v2_a2b4 = inttoptr i32 %v1_a2b4 to i8*
  %v3_a2b4 = load i8, i8* %v2_a2b4, align 1
  %v4_a2b4 = zext i8 %v3_a2b4 to i32
  store i32 %v4_a2b4, i32* %r3.global-to-local, align 4
  %v9_a2b8 = icmp eq i8 %v3_a2b4, %v3_a0a4
  store i1 %v9_a2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2b8, label %dec_label_pc_a2c0, label %dec_label_pc_a2a0

dec_label_pc_a2c0:                                ; preds = %dec_label_pc_a2ac, %dec_label_pc_a284
  %v0_a2d4 = phi i32 [ %v2_a28c, %dec_label_pc_a284 ], [ %v7_a2ac, %dec_label_pc_a2ac ]
  store i32 %v5_a094, i32* %r0.global-to-local, align 4
  %v0_a2c8 = load i32, i32* @sb, align 4
  store i32 %v0_a2c8, i32* %r1.global-to-local, align 4
  store i32 %v2_a0e0, i32* %r2.global-to-local, align 4
  %v0_a2d0 = load i32, i32* @r5, align 4
  store i32 %v0_a2d0, i32* %r3.global-to-local, align 4
  %v1_a2d4 = inttoptr i32 %v0_a2d4 to i32*
  %v2_a2d4 = load i32, i32* %v1_a2d4, align 4
  store i32 %v2_a2d4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_a2d4)
  br label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2a0, %dec_label_pc_a274, %dec_label_pc_a2c0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a2e4 = call i32 @function_14f1c(i32 0)
  store i32 %v1_a2e4, i32* %r0.global-to-local, align 4
  %v0_a2e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a2e8, label %bb54, label %.thread17

bb54:                                             ; preds = %dec_label_pc_a2e0
  %v1_a2e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_a2ec = load i32, i32* @r8, align 4
  %v5_a2ec = udiv i32 %v2_a2ec, 256
  %v6_a2ec = and i32 %v5_a2ec, %v1_a2e8
  store i32 %v6_a2ec, i32* %r1.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_a2e0, %bb54
  ret i32 %v1_a2e4

; uselistorder directives
  uselistorder i1 %v9_a2b8, { 1, 0 }
  uselistorder i32 %v1_a2a0, { 1, 2, 3, 0 }
  uselistorder i1 %v9_a298, { 1, 0 }
  uselistorder i32 %v0_a26c, { 1, 0 }
  uselistorder i32 %v1_a25c, { 1, 2, 0 }
  uselistorder i1 %v2_a230, { 0, 2, 1 }
  uselistorder i1 %v2_a224, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_a20c, { 1, 0 }
  uselistorder i32 %v0_a208, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a1f4, { 1, 0 }
  uselistorder i32 %v2_a1c4, { 1, 0 }
  uselistorder i32 %v1_a1c0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_a1bc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a1a0, { 1, 0 }
  uselistorder i32 %v3_a134, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a124, { 1, 0 }
  uselistorder i32 %v1_a120, { 1, 0 }
  uselistorder i32 %v2_a0e0, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v4_a0b4, { 1, 0, 2, 3 }
  uselistorder i32 %v5_a094, { 1, 0 }
  uselistorder i32 %v1_a080, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_a07c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a068, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 4, 2, 6, 5, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 7, 8, 4, 5, 6, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 5, 4, 6, 10, 8, 18, 9, 3, 2, 12, 11, 19, 20, 13, 14, 15, 16, 17, 21, 22, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 0, 12, 17, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_a2e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a2a0, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_a22c, { 5, 4, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder label %dec_label_pc_a1d4, { 1, 0 }
  uselistorder label %dec_label_pc_a070, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_a2f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a2f0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_a2f0 = load i32, i32* @r4, align 4
  store i32 %v3_a2f0, i32* %stack_var_-24, align 4
  %v6_a2f0 = load i32, i32* @r5, align 4
  %v9_a2f0 = load i32, i32* @r6, align 4
  %v12_a2f0 = load i32, i32* @r7, align 4
  %v15_a2f0 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a2fc = call i32 @function_1442c(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_21424.52 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_21428.54 to i32), i32* @r6, align 4
  store i32 52284, i32* %r2.global-to-local, align 4
  store i32 %v2_a2fc, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_21425.58 to i32), i32* %r1.global-to-local, align 4
  %v2_a31c = load i32, i32* @global_var_21428.54, align 4
  %v2_a320 = inttoptr i32 %v2_a2fc to i32*
  store i32 52284, i32* %v2_a320, align 4
  %v3_a324 = load i32, i32* @r4, align 4
  %v4_a324 = add i32 %v3_a324, 4
  %v5_a324 = inttoptr i32 %v4_a324 to i8*
  store i8 0, i8* %v5_a324, align 1
  %v0_a328 = load i32, i32* %r1.global-to-local, align 4
  %v3_a328 = mul i32 %v0_a328, 4
  store i32 %v3_a328, i32* %r1.global-to-local, align 4
  %v5_a32c = inttoptr i32 %v2_a31c to i32*
  %v6_a32c = call i32 @function_14560(i32* %v5_a32c, i32 %v3_a328, i32 52284, i32 0)
  %v2_a330 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a330 = zext i8 %v2_a330 to i32
  store i32 %v6_a32c, i32* %r2.global-to-local, align 4
  %v0_a338 = load i32, i32* @r4, align 4
  %v5_a338 = mul nuw nsw i32 %v3_a330, 4
  %v6_a338 = add i32 %v5_a338, %v6_a32c
  %v7_a338 = inttoptr i32 %v6_a338 to i32*
  store i32 %v0_a338, i32* %v7_a338, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_21425.58 to i32), i32* %r3.global-to-local, align 4
  %v1_a348 = load i32, i32* @r6, align 4
  %v2_a348 = inttoptr i32 %v1_a348 to i32*
  store i32 %v6_a32c, i32* %v2_a348, align 4
  %v0_a34c = load i32, i32* %r3.global-to-local, align 4
  %v1_a34c = trunc i32 %v0_a34c to i8
  %v2_a34c = load i32, i32* @r5, align 4
  %v3_a34c = inttoptr i32 %v2_a34c to i8*
  store i8 %v1_a34c, i8* %v3_a34c, align 1
  %v2_a350 = call i32 @function_1442c(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d208.60 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_a350, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_21425.58 to i32), i32* %r1.global-to-local, align 4
  %v2_a368 = load i32, i32* @global_var_21428.54, align 4
  %v2_a36c = inttoptr i32 %v2_a350 to i32*
  store i32 ptrtoint (i32* @global_var_d208.60 to i32), i32* %v2_a36c, align 4
  %v0_a370 = load i32, i32* @r8, align 4
  %v1_a370 = trunc i32 %v0_a370 to i8
  %v2_a370 = load i32, i32* @r4, align 4
  %v3_a370 = add i32 %v2_a370, 4
  %v4_a370 = inttoptr i32 %v3_a370 to i8*
  store i8 %v1_a370, i8* %v4_a370, align 1
  %v0_a374 = load i32, i32* %r1.global-to-local, align 4
  %v3_a374 = mul i32 %v0_a374, 4
  store i32 %v3_a374, i32* %r1.global-to-local, align 4
  %v4_a378 = inttoptr i32 %v2_a368 to i32*
  %v5_a378 = call i32 @function_14560(i32* %v4_a378, i32 %v3_a374, i32 %v6_a32c, i32 ptrtoint (i32* @global_var_d208.60 to i32))
  %v2_a37c = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a37c = zext i8 %v2_a37c to i32
  store i32 %v3_a37c, i32* %r3.global-to-local, align 4
  store i32 %v5_a378, i32* %r2.global-to-local, align 4
  %v0_a384 = load i32, i32* @r4, align 4
  %v5_a384 = mul nuw nsw i32 %v3_a37c, 4
  %v6_a384 = add i32 %v5_a384, %v5_a378
  %v7_a384 = inttoptr i32 %v6_a384 to i32*
  store i32 %v0_a384, i32* %v7_a384, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a38c = load i32, i32* %r3.global-to-local, align 4
  %v1_a38c = load i32, i32* @r8, align 4
  %v2_a38c = add i32 %v1_a38c, %v0_a38c
  store i32 %v2_a38c, i32* %r3.global-to-local, align 4
  %v1_a394 = trunc i32 %v2_a38c to i8
  %v2_a394 = load i32, i32* @r5, align 4
  %v3_a394 = inttoptr i32 %v2_a394 to i8*
  store i8 %v1_a394, i8* %v3_a394, align 1
  %v0_a398 = load i32, i32* %r2.global-to-local, align 4
  %v1_a398 = load i32, i32* @r6, align 4
  %v2_a398 = inttoptr i32 %v1_a398 to i32*
  store i32 %v0_a398, i32* %v2_a398, align 4
  %v2_a39c = call i32 @function_1442c(i32 %v1_a38c, i32 8)
  %v2_a3a0 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a3a0 = zext i8 %v2_a3a0 to i32
  store i32 ptrtoint (i32* @global_var_d674.62 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a39c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a3b0 = load i32, i32* @r8, align 4
  %v2_a3b0 = add i32 %v1_a3b0, %v3_a3a0
  store i32 %v2_a3b0, i32* %r1.global-to-local, align 4
  %v2_a3b4 = load i32, i32* @global_var_21428.54, align 4
  %v2_a3b8 = inttoptr i32 %v2_a39c to i32*
  store i32 ptrtoint (i32* @global_var_d674.62 to i32), i32* %v2_a3b8, align 4
  %v3_a3bc = load i32, i32* @r4, align 4
  %v4_a3bc = add i32 %v3_a3bc, 4
  %v5_a3bc = inttoptr i32 %v4_a3bc to i8*
  store i8 2, i8* %v5_a3bc, align 1
  %v0_a3c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a3c0 = mul i32 %v0_a3c0, 4
  store i32 %v3_a3c0, i32* %r1.global-to-local, align 4
  %v5_a3c4 = inttoptr i32 %v2_a3b4 to i32*
  %v6_a3c4 = call i32 @function_14560(i32* %v5_a3c4, i32 %v3_a3c0, i32 ptrtoint (i32* @global_var_d674.62 to i32), i32 2)
  %v2_a3c8 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a3c8 = zext i8 %v2_a3c8 to i32
  store i32 %v3_a3c8, i32* %r3.global-to-local, align 4
  store i32 %v6_a3c4, i32* %r2.global-to-local, align 4
  %v0_a3d0 = load i32, i32* @r4, align 4
  %v5_a3d0 = mul nuw nsw i32 %v3_a3c8, 4
  %v6_a3d0 = add i32 %v5_a3d0, %v6_a3c4
  %v7_a3d0 = inttoptr i32 %v6_a3d0 to i32*
  store i32 %v0_a3d0, i32* %v7_a3d0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a3d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a3d8 = load i32, i32* @r8, align 4
  %v2_a3d8 = add i32 %v1_a3d8, %v0_a3d8
  store i32 %v2_a3d8, i32* %r3.global-to-local, align 4
  %v1_a3e0 = load i32, i32* @r6, align 4
  %v2_a3e0 = inttoptr i32 %v1_a3e0 to i32*
  store i32 %v6_a3c4, i32* %v2_a3e0, align 4
  %v0_a3e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a3e4 = trunc i32 %v0_a3e4 to i8
  %v2_a3e4 = load i32, i32* @r5, align 4
  %v3_a3e4 = inttoptr i32 %v2_a3e4 to i8*
  store i8 %v1_a3e4, i8* %v3_a3e4, align 1
  %v2_a3e8 = call i32 @function_1442c(i32 %v1_a3d8, i32 8)
  %v2_a3ec = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a3ec = zext i8 %v2_a3ec to i32
  store i32 ptrtoint (i32* @global_var_c97c.64 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_a3e8, i32* @r4, align 4
  %v1_a3fc = load i32, i32* @r8, align 4
  %v2_a3fc = add i32 %v1_a3fc, %v3_a3ec
  store i32 %v2_a3fc, i32* %r1.global-to-local, align 4
  %v2_a400 = load i32, i32* @global_var_21428.54, align 4
  %v2_a404 = inttoptr i32 %v2_a3e8 to i32*
  store i32 ptrtoint (i32* @global_var_c97c.64 to i32), i32* %v2_a404, align 4
  %v0_a408 = load i32, i32* @r7, align 4
  %v1_a408 = trunc i32 %v0_a408 to i8
  %v2_a408 = load i32, i32* @r4, align 4
  %v3_a408 = add i32 %v2_a408, 4
  %v4_a408 = inttoptr i32 %v3_a408 to i8*
  store i8 %v1_a408, i8* %v4_a408, align 1
  %v0_a40c = load i32, i32* %r1.global-to-local, align 4
  %v3_a40c = mul i32 %v0_a40c, 4
  store i32 %v3_a40c, i32* %r1.global-to-local, align 4
  %v4_a410 = inttoptr i32 %v2_a400 to i32*
  %v5_a410 = call i32 @function_14560(i32* %v4_a410, i32 %v3_a40c, i32 %v6_a3c4, i32 ptrtoint (i32* @global_var_c97c.64 to i32))
  %v2_a414 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a414 = zext i8 %v2_a414 to i32
  store i32 %v3_a414, i32* %r3.global-to-local, align 4
  store i32 %v5_a410, i32* %r2.global-to-local, align 4
  %v0_a41c = load i32, i32* @r4, align 4
  %v5_a41c = mul nuw nsw i32 %v3_a414, 4
  %v6_a41c = add i32 %v5_a41c, %v5_a410
  %v7_a41c = inttoptr i32 %v6_a41c to i32*
  store i32 %v0_a41c, i32* %v7_a41c, align 4
  %v0_a420 = load i32, i32* @r7, align 4
  store i32 %v0_a420, i32* %r1.global-to-local, align 4
  %v0_a424 = load i32, i32* %r3.global-to-local, align 4
  %v1_a424 = load i32, i32* @r8, align 4
  %v2_a424 = add i32 %v1_a424, %v0_a424
  store i32 %v2_a424, i32* %r3.global-to-local, align 4
  %v1_a42c = trunc i32 %v2_a424 to i8
  %v2_a42c = load i32, i32* @r5, align 4
  %v3_a42c = inttoptr i32 %v2_a42c to i8*
  store i8 %v1_a42c, i8* %v3_a42c, align 1
  %v0_a430 = load i32, i32* %r2.global-to-local, align 4
  %v1_a430 = load i32, i32* @r6, align 4
  %v2_a430 = inttoptr i32 %v1_a430 to i32*
  store i32 %v0_a430, i32* %v2_a430, align 4
  %v2_a434 = call i32 @function_1442c(i32 %v1_a424, i32 %v0_a420)
  %v2_a438 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a438 = zext i8 %v2_a438 to i32
  store i32 ptrtoint (i32* @global_var_c2a4.66 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a434, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a448 = load i32, i32* @r8, align 4
  %v2_a448 = add i32 %v1_a448, %v3_a438
  store i32 %v2_a448, i32* %r1.global-to-local, align 4
  %v2_a44c = load i32, i32* @global_var_21428.54, align 4
  %v2_a450 = inttoptr i32 %v2_a434 to i32*
  store i32 ptrtoint (i32* @global_var_c2a4.66 to i32), i32* %v2_a450, align 4
  %v3_a454 = load i32, i32* @r4, align 4
  %v4_a454 = add i32 %v3_a454, 4
  %v5_a454 = inttoptr i32 %v4_a454 to i8*
  store i8 3, i8* %v5_a454, align 1
  %v0_a458 = load i32, i32* %r1.global-to-local, align 4
  %v3_a458 = mul i32 %v0_a458, 4
  store i32 %v3_a458, i32* %r1.global-to-local, align 4
  %v5_a45c = inttoptr i32 %v2_a44c to i32*
  %v6_a45c = call i32 @function_14560(i32* %v5_a45c, i32 %v3_a458, i32 ptrtoint (i32* @global_var_c2a4.66 to i32), i32 3)
  %v2_a460 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a460 = zext i8 %v2_a460 to i32
  store i32 %v3_a460, i32* %r3.global-to-local, align 4
  store i32 %v6_a45c, i32* %r2.global-to-local, align 4
  %v0_a468 = load i32, i32* @r4, align 4
  %v5_a468 = mul nuw nsw i32 %v3_a460, 4
  %v6_a468 = add i32 %v5_a468, %v6_a45c
  %v7_a468 = inttoptr i32 %v6_a468 to i32*
  store i32 %v0_a468, i32* %v7_a468, align 4
  %v0_a46c = load i32, i32* @r7, align 4
  store i32 %v0_a46c, i32* %r1.global-to-local, align 4
  %v0_a470 = load i32, i32* %r3.global-to-local, align 4
  %v1_a470 = load i32, i32* @r8, align 4
  %v2_a470 = add i32 %v1_a470, %v0_a470
  store i32 %v2_a470, i32* %r3.global-to-local, align 4
  %v1_a478 = trunc i32 %v2_a470 to i8
  %v2_a478 = load i32, i32* @r5, align 4
  %v3_a478 = inttoptr i32 %v2_a478 to i8*
  store i8 %v1_a478, i8* %v3_a478, align 1
  %v0_a47c = load i32, i32* %r2.global-to-local, align 4
  %v1_a47c = load i32, i32* @r6, align 4
  %v2_a47c = inttoptr i32 %v1_a47c to i32*
  store i32 %v0_a47c, i32* %v2_a47c, align 4
  %v2_a480 = call i32 @function_1442c(i32 %v1_a470, i32 %v0_a46c)
  %v2_a484 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a484 = zext i8 %v2_a484 to i32
  store i32 ptrtoint (i32* @global_var_bb80.68 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a480, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a494 = load i32, i32* @r8, align 4
  %v2_a494 = add i32 %v1_a494, %v3_a484
  store i32 %v2_a494, i32* %r1.global-to-local, align 4
  %v2_a498 = load i32, i32* @global_var_21428.54, align 4
  %v2_a49c = inttoptr i32 %v2_a480 to i32*
  store i32 ptrtoint (i32* @global_var_bb80.68 to i32), i32* %v2_a49c, align 4
  %v3_a4a0 = load i32, i32* @r4, align 4
  %v4_a4a0 = add i32 %v3_a4a0, 4
  %v5_a4a0 = inttoptr i32 %v4_a4a0 to i8*
  store i8 4, i8* %v5_a4a0, align 1
  %v0_a4a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a4a4 = mul i32 %v0_a4a4, 4
  store i32 %v3_a4a4, i32* %r1.global-to-local, align 4
  %v5_a4a8 = inttoptr i32 %v2_a498 to i32*
  %v6_a4a8 = call i32 @function_14560(i32* %v5_a4a8, i32 %v3_a4a4, i32 ptrtoint (i32* @global_var_bb80.68 to i32), i32 4)
  %v2_a4ac = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a4ac = zext i8 %v2_a4ac to i32
  store i32 %v3_a4ac, i32* %r3.global-to-local, align 4
  store i32 %v6_a4a8, i32* %r2.global-to-local, align 4
  %v0_a4b4 = load i32, i32* @r4, align 4
  %v5_a4b4 = mul nuw nsw i32 %v3_a4ac, 4
  %v6_a4b4 = add i32 %v5_a4b4, %v6_a4a8
  %v7_a4b4 = inttoptr i32 %v6_a4b4 to i32*
  store i32 %v0_a4b4, i32* %v7_a4b4, align 4
  %v0_a4b8 = load i32, i32* @r7, align 4
  store i32 %v0_a4b8, i32* %r1.global-to-local, align 4
  %v0_a4bc = load i32, i32* %r3.global-to-local, align 4
  %v1_a4bc = load i32, i32* @r8, align 4
  %v2_a4bc = add i32 %v1_a4bc, %v0_a4bc
  store i32 %v2_a4bc, i32* %r3.global-to-local, align 4
  %v1_a4c4 = trunc i32 %v2_a4bc to i8
  %v2_a4c4 = load i32, i32* @r5, align 4
  %v3_a4c4 = inttoptr i32 %v2_a4c4 to i8*
  store i8 %v1_a4c4, i8* %v3_a4c4, align 1
  %v0_a4c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a4c8 = load i32, i32* @r6, align 4
  %v2_a4c8 = inttoptr i32 %v1_a4c8 to i32*
  store i32 %v0_a4c8, i32* %v2_a4c8, align 4
  %v2_a4cc = call i32 @function_1442c(i32 %v1_a4bc, i32 %v0_a4b8)
  %v2_a4d0 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a4d0 = zext i8 %v2_a4d0 to i32
  store i32 ptrtoint (i32* @global_var_b354.70 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a4cc, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a4e0 = load i32, i32* @r8, align 4
  %v2_a4e0 = add i32 %v1_a4e0, %v3_a4d0
  store i32 %v2_a4e0, i32* %r1.global-to-local, align 4
  %v2_a4e4 = load i32, i32* @global_var_21428.54, align 4
  %v2_a4e8 = inttoptr i32 %v2_a4cc to i32*
  store i32 ptrtoint (i32* @global_var_b354.70 to i32), i32* %v2_a4e8, align 4
  %v3_a4ec = load i32, i32* @r4, align 4
  %v4_a4ec = add i32 %v3_a4ec, 4
  %v5_a4ec = inttoptr i32 %v4_a4ec to i8*
  store i8 5, i8* %v5_a4ec, align 1
  %v0_a4f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a4f0 = mul i32 %v0_a4f0, 4
  store i32 %v3_a4f0, i32* %r1.global-to-local, align 4
  %v5_a4f4 = inttoptr i32 %v2_a4e4 to i32*
  %v6_a4f4 = call i32 @function_14560(i32* %v5_a4f4, i32 %v3_a4f0, i32 ptrtoint (i32* @global_var_b354.70 to i32), i32 5)
  %v2_a4f8 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a4f8 = zext i8 %v2_a4f8 to i32
  store i32 %v3_a4f8, i32* %r3.global-to-local, align 4
  store i32 %v6_a4f4, i32* %r2.global-to-local, align 4
  %v0_a500 = load i32, i32* @r4, align 4
  %v5_a500 = mul nuw nsw i32 %v3_a4f8, 4
  %v6_a500 = add i32 %v5_a500, %v6_a4f4
  %v7_a500 = inttoptr i32 %v6_a500 to i32*
  store i32 %v0_a500, i32* %v7_a500, align 4
  %v0_a504 = load i32, i32* @r7, align 4
  store i32 %v0_a504, i32* %r1.global-to-local, align 4
  %v0_a508 = load i32, i32* %r3.global-to-local, align 4
  %v1_a508 = load i32, i32* @r8, align 4
  %v2_a508 = add i32 %v1_a508, %v0_a508
  store i32 %v2_a508, i32* %r3.global-to-local, align 4
  %v1_a510 = trunc i32 %v2_a508 to i8
  %v2_a510 = load i32, i32* @r5, align 4
  %v3_a510 = inttoptr i32 %v2_a510 to i8*
  store i8 %v1_a510, i8* %v3_a510, align 1
  %v0_a514 = load i32, i32* %r2.global-to-local, align 4
  %v1_a514 = load i32, i32* @r6, align 4
  %v2_a514 = inttoptr i32 %v1_a514 to i32*
  store i32 %v0_a514, i32* %v2_a514, align 4
  %v2_a518 = call i32 @function_1442c(i32 %v1_a508, i32 %v0_a504)
  %v2_a51c = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a51c = zext i8 %v2_a51c to i32
  store i32 ptrtoint (i32* @global_var_acf4.72 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a518, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a52c = load i32, i32* @r8, align 4
  %v2_a52c = add i32 %v1_a52c, %v3_a51c
  store i32 %v2_a52c, i32* %r1.global-to-local, align 4
  %v2_a530 = load i32, i32* @global_var_21428.54, align 4
  %v2_a534 = inttoptr i32 %v2_a518 to i32*
  store i32 ptrtoint (i32* @global_var_acf4.72 to i32), i32* %v2_a534, align 4
  %v3_a538 = load i32, i32* @r4, align 4
  %v4_a538 = add i32 %v3_a538, 4
  %v5_a538 = inttoptr i32 %v4_a538 to i8*
  store i8 6, i8* %v5_a538, align 1
  %v0_a53c = load i32, i32* %r1.global-to-local, align 4
  %v3_a53c = mul i32 %v0_a53c, 4
  store i32 %v3_a53c, i32* %r1.global-to-local, align 4
  %v5_a540 = inttoptr i32 %v2_a530 to i32*
  %v6_a540 = call i32 @function_14560(i32* %v5_a540, i32 %v3_a53c, i32 ptrtoint (i32* @global_var_acf4.72 to i32), i32 6)
  %v2_a544 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a544 = zext i8 %v2_a544 to i32
  store i32 %v3_a544, i32* %r3.global-to-local, align 4
  store i32 %v6_a540, i32* %r2.global-to-local, align 4
  %v0_a54c = load i32, i32* @r4, align 4
  %v5_a54c = mul nuw nsw i32 %v3_a544, 4
  %v6_a54c = add i32 %v5_a54c, %v6_a540
  %v7_a54c = inttoptr i32 %v6_a54c to i32*
  store i32 %v0_a54c, i32* %v7_a54c, align 4
  %v0_a550 = load i32, i32* @r7, align 4
  store i32 %v0_a550, i32* %r1.global-to-local, align 4
  %v0_a554 = load i32, i32* %r3.global-to-local, align 4
  %v1_a554 = load i32, i32* @r8, align 4
  %v2_a554 = add i32 %v1_a554, %v0_a554
  store i32 %v2_a554, i32* %r3.global-to-local, align 4
  %v1_a55c = trunc i32 %v2_a554 to i8
  %v2_a55c = load i32, i32* @r5, align 4
  %v3_a55c = inttoptr i32 %v2_a55c to i8*
  store i8 %v1_a55c, i8* %v3_a55c, align 1
  %v0_a560 = load i32, i32* %r2.global-to-local, align 4
  %v1_a560 = load i32, i32* @r6, align 4
  %v2_a560 = inttoptr i32 %v1_a560 to i32*
  store i32 %v0_a560, i32* %v2_a560, align 4
  %v2_a564 = call i32 @function_1442c(i32 %v1_a554, i32 %v0_a550)
  %v2_a568 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a568 = zext i8 %v2_a568 to i32
  store i32 ptrtoint (i32* @global_var_a62c.74 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a564, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a578 = load i32, i32* @r8, align 4
  %v2_a578 = add i32 %v1_a578, %v3_a568
  store i32 %v2_a578, i32* %r1.global-to-local, align 4
  %v2_a57c = load i32, i32* @global_var_21428.54, align 4
  %v2_a580 = inttoptr i32 %v2_a564 to i32*
  store i32 ptrtoint (i32* @global_var_a62c.74 to i32), i32* %v2_a580, align 4
  %v3_a584 = load i32, i32* @r4, align 4
  %v4_a584 = add i32 %v3_a584, 4
  %v5_a584 = inttoptr i32 %v4_a584 to i8*
  store i8 7, i8* %v5_a584, align 1
  %v0_a588 = load i32, i32* %r1.global-to-local, align 4
  %v3_a588 = mul i32 %v0_a588, 4
  store i32 %v3_a588, i32* %r1.global-to-local, align 4
  %v5_a58c = inttoptr i32 %v2_a57c to i32*
  %v6_a58c = call i32 @function_14560(i32* %v5_a58c, i32 %v3_a588, i32 ptrtoint (i32* @global_var_a62c.74 to i32), i32 7)
  %v2_a590 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a590 = zext i8 %v2_a590 to i32
  store i32 %v3_a590, i32* %r3.global-to-local, align 4
  store i32 %v6_a58c, i32* %r2.global-to-local, align 4
  %v0_a598 = load i32, i32* @r4, align 4
  %v5_a598 = mul nuw nsw i32 %v3_a590, 4
  %v6_a598 = add i32 %v5_a598, %v6_a58c
  %v7_a598 = inttoptr i32 %v6_a598 to i32*
  store i32 %v0_a598, i32* %v7_a598, align 4
  %v0_a59c = load i32, i32* @r7, align 4
  store i32 %v0_a59c, i32* %r1.global-to-local, align 4
  %v0_a5a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5a0 = load i32, i32* @r8, align 4
  %v2_a5a0 = add i32 %v1_a5a0, %v0_a5a0
  store i32 %v2_a5a0, i32* %r3.global-to-local, align 4
  %v1_a5a8 = trunc i32 %v2_a5a0 to i8
  %v2_a5a8 = load i32, i32* @r5, align 4
  %v3_a5a8 = inttoptr i32 %v2_a5a8 to i8*
  store i8 %v1_a5a8, i8* %v3_a5a8, align 1
  %v0_a5ac = load i32, i32* %r2.global-to-local, align 4
  %v1_a5ac = load i32, i32* @r6, align 4
  %v2_a5ac = inttoptr i32 %v1_a5ac to i32*
  store i32 %v0_a5ac, i32* %v2_a5ac, align 4
  %v2_a5b0 = call i32 @function_1442c(i32 %v1_a5a0, i32 %v0_a59c)
  %v2_a5b4 = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a5b4 = zext i8 %v2_a5b4 to i32
  store i32 ptrtoint (i32* @global_var_8190.76 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5b0, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a5c4 = load i32, i32* @r8, align 4
  %v2_a5c4 = add i32 %v1_a5c4, %v3_a5b4
  store i32 %v2_a5c4, i32* %r1.global-to-local, align 4
  %v2_a5c8 = load i32, i32* @global_var_21428.54, align 4
  %v2_a5cc = inttoptr i32 %v2_a5b0 to i32*
  store i32 ptrtoint (i32* @global_var_8190.76 to i32), i32* %v2_a5cc, align 4
  %v3_a5d0 = load i32, i32* @r4, align 4
  %v4_a5d0 = add i32 %v3_a5d0, 4
  %v5_a5d0 = inttoptr i32 %v4_a5d0 to i8*
  store i8 9, i8* %v5_a5d0, align 1
  %v0_a5d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5d4 = mul i32 %v0_a5d4, 4
  store i32 %v3_a5d4, i32* %r1.global-to-local, align 4
  %v5_a5d8 = inttoptr i32 %v2_a5c8 to i32*
  %v6_a5d8 = call i32 @function_14560(i32* %v5_a5d8, i32 %v3_a5d4, i32 ptrtoint (i32* @global_var_8190.76 to i32), i32 9)
  %v2_a5dc = load i8, i8* bitcast (i8** @global_var_21424.52 to i8*), align 4
  %v3_a5dc = zext i8 %v2_a5dc to i32
  store i32 %v3_a5dc, i32* %r3.global-to-local, align 4
  %v1_a5e0 = load i32, i32* @r6, align 4
  %v2_a5e0 = inttoptr i32 %v1_a5e0 to i32*
  store i32 %v6_a5d8, i32* %v2_a5e0, align 4
  %v0_a5e4 = load i32, i32* @r4, align 4
  %v2_a5e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_a5e4 = mul i32 %v2_a5e4, 4
  %v6_a5e4 = add i32 %v5_a5e4, %v6_a5d8
  %v7_a5e4 = inttoptr i32 %v6_a5e4 to i32*
  store i32 %v0_a5e4, i32* %v7_a5e4, align 4
  %v0_a5e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5e8 = load i32, i32* @r8, align 4
  %v2_a5e8 = add i32 %v1_a5e8, %v0_a5e8
  store i32 %v2_a5e8, i32* %r2.global-to-local, align 4
  %v1_a5f0 = trunc i32 %v2_a5e8 to i8
  %v2_a5f0 = load i32, i32* @r5, align 4
  %v3_a5f0 = inttoptr i32 %v2_a5f0 to i8*
  store i8 %v1_a5f0, i8* %v3_a5f0, align 1
  %v2_a5f4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_a5f4, i32* @r4, align 4
  store i32 %v6_a2f0, i32* @r5, align 4
  store i32 %v9_a2f0, i32* @r6, align 4
  store i32 %v12_a2f0, i32* @r7, align 4
  store i32 %v15_a2f0, i32* @r8, align 4
  ret i32 %v1_a5e8

; uselistorder directives
  uselistorder i32 %v1_a5e8, { 1, 0 }
  uselistorder i32 %v3_a5d4, { 1, 0 }
  uselistorder i32 %v1_a5a0, { 1, 0 }
  uselistorder i32 %v3_a588, { 1, 0 }
  uselistorder i32 %v1_a554, { 1, 0 }
  uselistorder i32 %v3_a53c, { 1, 0 }
  uselistorder i32 %v1_a508, { 1, 0 }
  uselistorder i32 %v3_a4f0, { 1, 0 }
  uselistorder i32 %v1_a4bc, { 1, 0 }
  uselistorder i32 %v3_a4a4, { 1, 0 }
  uselistorder i32 %v1_a470, { 1, 0 }
  uselistorder i32 %v3_a458, { 1, 0 }
  uselistorder i32 %v1_a424, { 1, 0 }
  uselistorder i32 %v3_a40c, { 1, 0 }
  uselistorder i32 %v1_a3d8, { 1, 0 }
  uselistorder i32 %v6_a3c4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a3c0, { 1, 0 }
  uselistorder i32 %v1_a38c, { 1, 0 }
  uselistorder i32 %v3_a374, { 1, 0 }
  uselistorder i32 %v2_a350, { 1, 0 }
  uselistorder i32 %v6_a32c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a328, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_21424.52 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_21425.58 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_21424.52, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_21424.52 to i32), { 1, 0 }
}

define i32 @function_a62c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a62c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a62c = load i32, i32* @r4, align 4
  %v24_a62c = load i32, i32* @fp, align 4
  %v27_a62c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a658 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_a65c = load i32, i32* @r4, align 4
  store i32 %v0_a65c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a668 = load i32, i32* @sb, align 4
  store i32 %v0_a668, i32* %r3.global-to-local, align 4
  %v0_a66c = load i32, i32* @r5, align 4
  store i32 %v0_a66c, i32* %r0.global-to-local, align 4
  %v5_a670 = inttoptr i32 %v0_a65c to i32*
  %v6_a670 = call i32 @function_9fe8(i32 %v0_a66c, i32* %v5_a670, i32 2, i32 %v0_a668)
  %v1_a67c = urem i32 %v6_a670, 256
  store i32 %v1_a67c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a688 = load i32, i32* @r4, align 4
  store i32 %v0_a688, i32* %r1.global-to-local, align 4
  %v0_a68c = load i32, i32* @r5, align 4
  store i32 %v0_a68c, i32* %r0.global-to-local, align 4
  %v5_a690 = trunc i32 %v6_a670 to i8
  %v6_a694 = inttoptr i32 %v0_a688 to i32*
  %v7_a694 = call i32 @function_9fe8(i32 %v0_a68c, i32* %v6_a694, i32 3, i32 65535)
  %v0_a698 = load i32, i32* @r4, align 4
  store i32 %v0_a698, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a694, i32* %fp.global-to-local, align 4
  %v0_a6a8 = load i32, i32* @r5, align 4
  store i32 %v0_a6a8, i32* %r0.global-to-local, align 4
  %v4_a6ac = inttoptr i32 %v0_a698 to i32*
  %v5_a6ac = call i32 @function_9fe8(i32 %v0_a6a8, i32* %v4_a6ac, i32 4, i32 64)
  %v1_a6b4 = urem i32 %v5_a6ac, 256
  store i32 %v1_a6b4, i32* %ip.global-to-local, align 4
  %v0_a6b8 = load i32, i32* @r4, align 4
  store i32 %v0_a6b8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a6c4 = load i32, i32* @r5, align 4
  store i32 %v0_a6c4, i32* %r0.global-to-local, align 4
  %v6_a6cc = inttoptr i32 %v0_a6b8 to i32*
  %v7_a6cc = call i32 @function_9fe8(i32 %v0_a6c4, i32* %v6_a6cc, i32 5, i32 1)
  %v1_a6d8 = urem i32 %v7_a6cc, 256
  store i32 %v1_a6d8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a6e4 = load i32, i32* @r4, align 4
  store i32 %v0_a6e4, i32* %r1.global-to-local, align 4
  %v0_a6e8 = load i32, i32* @r5, align 4
  store i32 %v0_a6e8, i32* %r0.global-to-local, align 4
  %v5_a6f0 = inttoptr i32 %v0_a6e4 to i32*
  %v6_a6f0 = call i32 @function_9fe8(i32 %v0_a6e8, i32* %v5_a6f0, i32 6, i32 65535)
  %v0_a6fc = load i32, i32* @r4, align 4
  store i32 %v0_a6fc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a708 = load i32, i32* @r5, align 4
  store i32 %v0_a708, i32* %r0.global-to-local, align 4
  %v5_a70c = inttoptr i32 %v0_a6fc to i32*
  %v6_a70c = call i32 @function_9fe8(i32 %v0_a708, i32* %v5_a70c, i32 7, i32 65535)
  %v0_a710 = load i32, i32* @r4, align 4
  store i32 %v0_a710, i32* %r1.global-to-local, align 4
  %v0_a714 = load i32, i32* @sb, align 4
  store i32 %v0_a714, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_a70c, i32* @r8, align 4
  %v0_a720 = load i32, i32* @r5, align 4
  store i32 %v0_a720, i32* %r0.global-to-local, align 4
  %v4_a724 = inttoptr i32 %v0_a710 to i32*
  %v5_a724 = call i32 @function_9fe8(i32 %v0_a720, i32* %v4_a724, i32 %v0_a714, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a734 = load i32, i32* @r4, align 4
  store i32 %v0_a734, i32* %r1.global-to-local, align 4
  %v0_a738 = load i32, i32* @r5, align 4
  store i32 %v0_a738, i32* %r0.global-to-local, align 4
  %v4_a73c = inttoptr i32 %v0_a734 to i32*
  %v5_a73c = call i32 @function_9fe8(i32 %v0_a738, i32* %v4_a73c, i32 1, i32 1)
  %v1_a744 = urem i32 %v5_a73c, 256
  store i32 %v1_a744, i32* %ip.global-to-local, align 4
  %v0_a748 = load i32, i32* @r4, align 4
  store i32 %v0_a748, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a750 = load i32, i32* @sb, align 4
  store i32 %v0_a750, i32* %r3.global-to-local, align 4
  %v0_a754 = load i32, i32* @r5, align 4
  store i32 %v0_a754, i32* %r0.global-to-local, align 4
  %v5_a75c = inttoptr i32 %v0_a748 to i32*
  %v6_a75c = call i32 @function_9fe8(i32 %v0_a754, i32* %v5_a75c, i32 18, i32 %v0_a750)
  %v0_a764 = load i32, i32* @r4, align 4
  store i32 %v0_a764, i32* %r1.global-to-local, align 4
  %v2_a768 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_a768, i32* %r3.global-to-local, align 4
  store i32 %v6_a75c, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a774 = load i32, i32* @r5, align 4
  store i32 %v0_a774, i32* %r0.global-to-local, align 4
  %v4_a778 = inttoptr i32 %v0_a764 to i32*
  %v5_a778 = call i32 @function_9fe8(i32 %v0_a774, i32* %v4_a778, i32 24, i32 %v2_a768)
  %v0_a780 = load i32, i32* @sb, align 4
  store i32 %v0_a780, i32* %r0.global-to-local, align 4
  %v1_a784 = inttoptr i32 %v0_a780 to i32*
  %v2_a784 = call i32 @function_12d34(i32* %v1_a784)
  %v1_a788 = load i32, i32* @r6, align 4
  %v2_a788 = add i32 %v1_a788, %v2_a784
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a79c = call i32 @function_138c4(i32 2, i32 3, i32 6)
  store i32 %v3_a79c, i32* %r0.global-to-local, align 4
  %v7_a7a0 = icmp eq i32 %v3_a79c, -1
  store i1 %v7_a7a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a7a0, label %dec_label_pc_acd8, label %dec_label_pc_a7ac

dec_label_pc_a7ac:                                ; preds = %dec_label_pc_a62c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a7b4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a7b4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a7bc = load i32, i32* @sb, align 4
  store i32 %v0_a7bc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a7c8 = call i32 @function_13880(i32 %v3_a79c, i32 %v0_a7bc, i32 3, i32 %v6_a7b4, i32 4)
  store i32 %v5_a7c8, i32* %r0.global-to-local, align 4
  %v7_a7cc = icmp eq i32 %v5_a7c8, -1
  store i1 %v7_a7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a7cc, label %dec_label_pc_ace4, label %dec_label_pc_a7d4

dec_label_pc_a7d4:                                ; preds = %dec_label_pc_a7ac
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_a7dc = mul i32 %v6_a6f0, 65536
  store i32 %v3_a7dc, i32* %r1.global-to-local, align 4
  %v0_a7e0 = load i32, i32* @r8, align 4
  %v0_a7e4 = load i32, i32* %fp.global-to-local, align 4
  %v3_a7e4 = mul i32 %v0_a7e4, 65536
  store i32 %v3_a7e4, i32* %fp.global-to-local, align 4
  %v0_a7e8 = load i32, i32* @r7, align 4
  %v1_a7e8 = urem i32 %v0_a7e8, 256
  store i32 %v1_a7e8, i32* @r7, align 4
  %v3_a7ec = urem i32 %v0_a7e4, 65536
  store i32 %v3_a7ec, i32* %r3.global-to-local, align 4
  %v3_a7f0 = urem i32 %v6_a6f0, 65536
  store i32 %v3_a7f0, i32* %ip.global-to-local, align 4
  %v3_a7f4 = urem i32 %v0_a7e0, 65536
  %v2_a7f8 = icmp eq i32 %arg2, 0
  store i1 %v2_a7f8, i1* %cpsr_z.global-to-local, align 1
  %v0_a808 = load i32, i32* @sb, align 4
  store i32 %v0_a808, i32* %stack_var_-44, align 4
  br i1 %v2_a7f8, label %dec_label_pc_aa10.preheader, label %dec_label_pc_a81c

dec_label_pc_a81c:                                ; preds = %dec_label_pc_a7d4
  %v3_a7e0 = mul i32 %v0_a7e0, 65536
  %v3_a820 = mul i32 %v5_a724, 65536
  %v1_a824 = add i32 %v3_a820, 4325376
  %v0_a7e4.not = or i32 %v0_a7e4, -65536
  %v1_a828 = xor i32 %v0_a7e4.not, 65535
  %v3_a834 = mul i32 %v1_a828, 65536
  store i32 %v3_a834, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_a824, 256
  %v3_a84c = and i32 %tmp68, 65280
  store i32 %v3_a84c, i32* %r3.global-to-local, align 4
  %v1_a850 = add i32 %v3_a820, 524288
  %tmp69 = mul i32 %v0_a7e4, 256
  %v3_a854 = and i32 %tmp69, 65280
  %v1_a858 = add i32 %v3_a820, 1835008
  %tmp70 = mul nsw i32 %v1_a828, 256
  %v3_a85c = and i32 %tmp70, 65280
  %v4_a860 = udiv i32 %v1_a824, 16777216
  %v5_a860 = or i32 %v4_a860, %tmp68
  %v3_a868 = udiv i32 %v1_a858, 256
  %v5_a86c = trunc i32 %v5_a860 to i16
  %tmp71 = udiv i32 %v0_a7e4, 256
  %v4_a870 = urem i32 %tmp71, 256
  %v5_a870 = or i32 %v4_a870, %v3_a854
  store i32 %v5_a870, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_a828, 256
  %v4_a874 = urem i32 %tmp72, 256
  %v5_a874 = or i32 %v4_a874, %v3_a85c
  store i32 %v5_a874, i32* @fp, align 4
  store i32 %v3_a7e0, i32* %r2.global-to-local, align 4
  store i32 %v3_a7dc, i32* %r1.global-to-local, align 4
  %v1_a880 = and i32 %v3_a868, 65280
  %tmp73 = mul i32 %v6_a6f0, 256
  %v3_a884 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_a7e0, 256
  %v3_a888 = and i32 %tmp74, 65280
  %v4_a890 = udiv i32 %v1_a858, 16777216
  %v5_a890 = or i32 %v1_a880, %v4_a890
  store i32 %v5_a890, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_a6f0, 256
  %v4_a894 = urem i32 %tmp75, 256
  %v5_a894 = or i32 %v4_a894, %v3_a884
  store i32 %v5_a894, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_a7e0, 256
  %v4_a898 = urem i32 %tmp76, 256
  %v5_a898 = or i32 %v4_a898, %v3_a888
  store i32 %v5_a898, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_a850, 256
  %v3_a89c = and i32 %tmp77, 65280
  store i32 %v3_a89c, i32* @lr, align 4
  %v5_a8a8 = trunc i32 %v5_a890 to i16
  %v4_a8ac = udiv i32 %v1_a850, 16777216
  %v5_a8ac = or i32 %v3_a89c, %v4_a8ac
  store i32 %v5_a8ac, i32* @r8, align 4
  store i32 %v0_a808, i32* @r4, align 4
  %v4_a908 = sext i8 %v5_a690 to i32
  %v1_a914 = trunc i32 %v5_a6ac to i8
  %v2_a9c8 = icmp eq i32 %v1_a7e8, 0
  %sext = mul nuw i32 %v5_a894, 65536
  %v4_a9ec = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_a898, 65536
  %v4_a9f4 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_a8b4

dec_label_pc_a8b4:                                ; preds = %bb80, %dec_label_pc_a81c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a8c0 = call i32 @function_1442c(i32 1510, i32 4)
  store i32 %v2_a8c0, i32* %r0.global-to-local, align 4
  %v3_a8c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a8c8, i32* %r2.global-to-local, align 4
  %v2_a8cc = load i32, i32* @r4, align 4
  %v5_a8cc = mul i32 %v2_a8cc, 4
  %v6_a8cc = add i32 %v5_a8cc, %v2_a658
  %v7_a8cc = inttoptr i32 %v6_a8cc to i32*
  store i32 %v2_a8c0, i32* %v7_a8cc, align 4
  store i32 %v2_a658, i32* %r1.global-to-local, align 4
  %v0_a8d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_a8d4 = mul i32 %v0_a8d4, 32
  store i32 %v3_a8d4, i32* %r3.global-to-local, align 4
  %v4_a8d8 = mul i32 %v0_a8d4, 4
  %v5_a8d8 = add i32 %v4_a8d8, %v2_a658
  %v6_a8d8 = inttoptr i32 %v5_a8d8 to i32*
  %v7_a8d8 = load i32, i32* %v6_a8d8, align 4
  store i32 %v7_a8d8, i32* %r4.global-to-local, align 4
  %v5_a8dc = mul i32 %v0_a8d4, 24
  store i32 %v5_a8dc, i32* %r3.global-to-local, align 4
  %v1_a8e0 = load i32, i32* @sl, align 4
  %v2_a8e0 = add i32 %v1_a8e0, %v5_a8dc
  store i32 %v2_a8e0, i32* %lr.global-to-local, align 4
  %v1_a8e4 = inttoptr i32 %v7_a8d8 to i8*
  %v2_a8e4 = load i8, i8* %v1_a8e4, align 1
  %tmp = urem i8 %v2_a8e4, 16
  %v1_a8e8 = zext i8 %tmp to i32
  %v1_a8ec = or i32 %v1_a8e8, 64
  store i32 %v1_a8ec, i32* %r3.global-to-local, align 4
  %v1_a8f0 = trunc i32 %v1_a8ec to i8
  store i8 %v1_a8f0, i8* %v1_a8e4, align 1
  %v0_a8f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_a8f4 = inttoptr i32 %v0_a8f4 to i8*
  %v2_a8f4 = load i8, i8* %v1_a8f4, align 1
  %v1_a8f8 = and i8 %v2_a8f4, -16
  %v1_a8fc = or i8 %v1_a8f8, 5
  store i32 %v1_a6d8, i32* %r3.global-to-local, align 4
  store i8 %v1_a8fc, i8* %v1_a8f4, align 1
  store i32 %v4_a908, i32* %r1.global-to-local, align 4
  %v2_a90c = load i32, i32* %r4.global-to-local, align 4
  %v3_a90c = add i32 %v2_a90c, 1
  %v4_a90c = inttoptr i32 %v3_a90c to i8*
  store i8 %v5_a690, i8* %v4_a90c, align 1
  store i32 %v1_a6b4, i32* %r2.global-to-local, align 4
  %v2_a914 = load i32, i32* %r4.global-to-local, align 4
  %v3_a914 = add i32 %v2_a914, 8
  %v4_a914 = inttoptr i32 %v3_a914 to i8*
  store i8 %v1_a914, i8* %v4_a914, align 1
  %v0_a918 = load i32, i32* %r3.global-to-local, align 4
  %v2_a918 = icmp eq i32 %v0_a918, 0
  store i1 %v2_a918, i1* %cpsr_z.global-to-local, align 1
  %v2_a920 = load i32, i32* %r4.global-to-local, align 4
  %v3_a920 = add i32 %v2_a920, 2
  %v4_a920 = inttoptr i32 %v3_a920 to i16*
  store i16 %v5_a86c, i16* %v4_a920, align 2
  %v2_a928 = load i32, i32* %r4.global-to-local, align 4
  %v3_a928 = add i32 %v2_a928, 9
  %v4_a928 = inttoptr i32 %v3_a928 to i8*
  store i8 47, i8* %v4_a928, align 1
  store i32 %v5_a778, i32* %r3.global-to-local, align 4
  %v1_a930 = load i32, i32* %r4.global-to-local, align 4
  %v2_a930 = add i32 %v1_a930, 12
  %v3_a930 = inttoptr i32 %v2_a930 to i32*
  store i32 %v5_a778, i32* %v3_a930, align 4
  %v0_a934 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a934, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a8b4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a938 = load i32, i32* %r4.global-to-local, align 4
  %v4_a938 = add i32 %v3_a938, 6
  %v5_a938 = inttoptr i32 %v4_a938 to i16*
  store i16 64, i16* %v5_a938, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a8b4, %bb
  %v0_a93c = load i32, i32* %lr.global-to-local, align 4
  %v1_a93c = add i32 %v0_a93c, 16
  %v2_a93c = inttoptr i32 %v1_a93c to i32*
  %v3_a93c = load i32, i32* %v2_a93c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_a944 = load i32, i32* %r4.global-to-local, align 4
  %v2_a944 = add i32 %v1_a944, 16
  %v3_a944 = inttoptr i32 %v2_a944 to i32*
  store i32 %v3_a93c, i32* %v3_a944, align 4
  %v0_a948 = load i32, i32* %r4.global-to-local, align 4
  %v1_a948 = add i32 %v0_a948, 24
  store i32 %v1_a948, i32* %r0.global-to-local, align 4
  %v1_a94c = add i32 %v0_a948, 20
  store i32 %v1_a94c, i32* %r1.global-to-local, align 4
  %v0_a950 = load i32, i32* %ip.global-to-local, align 4
  %v1_a950 = add i32 %v0_a950, 101
  store i32 %v1_a950, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_a95c = load i32, i32* @r7, align 4
  %v1_a95c = trunc i32 %v0_a95c to i16
  %v3_a95c = add i32 %v0_a948, 4
  %v4_a95c = inttoptr i32 %v3_a95c to i16*
  store i16 %v1_a95c, i16* %v4_a95c, align 2
  %v0_a960 = load i32, i32* %ip.global-to-local, align 4
  %v1_a960 = trunc i32 %v0_a960 to i16
  %v2_a960 = load i32, i32* %r1.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 2
  %v4_a960 = inttoptr i32 %v3_a960 to i16*
  store i16 %v1_a960, i16* %v4_a960, align 2
  %v0_a964 = load i32, i32* %r3.global-to-local, align 4
  %v1_a964 = trunc i32 %v0_a964 to i8
  %v2_a964 = load i32, i32* %r0.global-to-local, align 4
  %v3_a964 = add i32 %v2_a964, 13
  %v4_a964 = inttoptr i32 %v3_a964 to i8*
  store i8 %v1_a964, i8* %v4_a964, align 1
  %v0_a968 = load i32, i32* %r2.global-to-local, align 4
  %v1_a968 = trunc i32 %v0_a968 to i8
  %v2_a968 = load i32, i32* %r0.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 12
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  %v0_a96c = load i32, i32* %r4.global-to-local, align 4
  %v1_a96c = add i32 %v0_a96c, 38
  %v2_a96c = inttoptr i32 %v1_a96c to i8*
  %v3_a96c = load i8, i8* %v2_a96c, align 1
  %tmp86 = urem i8 %v3_a96c, 16
  %v1_a970 = zext i8 %tmp86 to i32
  %v1_a974 = or i32 %v1_a970, 64
  store i32 %v1_a974, i32* %r3.global-to-local, align 4
  %v1_a978 = trunc i32 %v1_a974 to i8
  store i8 %v1_a978, i8* %v2_a96c, align 1
  %v0_a97c = load i32, i32* %r4.global-to-local, align 4
  %v1_a97c = add i32 %v0_a97c, 38
  %v2_a97c = inttoptr i32 %v1_a97c to i8*
  %v3_a97c = load i8, i8* %v2_a97c, align 1
  %v4_a97c = zext i8 %v3_a97c to i32
  %v1_a980 = and i32 %v4_a97c, 240
  %v1_a984 = or i32 %v1_a980, 5
  store i32 %v1_a984, i32* %r2.global-to-local, align 4
  %v1_a988 = trunc i32 %v1_a984 to i8
  store i8 %v1_a988, i8* %v2_a97c, align 1
  store i32 %v4_a908, i32* %ip.global-to-local, align 4
  %v0_a990 = load i32, i32* %r4.global-to-local, align 4
  %v1_a990 = add i32 %v0_a990, 38
  store i32 %v1_a990, i32* @r5, align 4
  %v3_a994 = add i32 %v0_a990, 39
  %v4_a994 = inttoptr i32 %v3_a994 to i8*
  store i8 %v5_a690, i8* %v4_a994, align 1
  store i32 %v5_a890, i32* %lr.global-to-local, align 4
  %v2_a99c = load i32, i32* @r5, align 4
  %v3_a99c = add i32 %v2_a99c, 2
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v5_a8a8, i16* %v4_a99c, align 2
  store i32 %v1_a6b4, i32* %r1.global-to-local, align 4
  %v0_a9a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a9a4, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_a9ac = load i32, i32* @r5, align 4
  %v4_a9ac = add i32 %v3_a9ac, 6
  %v5_a9ac = inttoptr i32 %v4_a9ac to i16*
  store i16 64, i16* %v5_a9ac, align 2
  %v0_a9b0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_a9b0.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v5_a6ac.sink.off0 = phi i8 [ %v1_a914, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_a9b0 = load i32, i32* @r5, align 4
  %v3_a9b0 = add i32 %v2_a9b0, 8
  %v4_a9b0 = inttoptr i32 %v3_a9b0 to i8*
  store i8 %v5_a6ac.sink.off0, i8* %v4_a9b0, align 1
  %v0_a9b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9b4 = trunc i32 %v0_a9b4 to i8
  %v2_a9b4 = load i32, i32* @r5, align 4
  %v3_a9b4 = add i32 %v2_a9b4, 9
  %v4_a9b4 = inttoptr i32 %v3_a9b4 to i8*
  store i8 %v1_a9b4, i8* %v4_a9b4, align 1
  %v0_a9b8 = load i32, i32* @fp, align 4
  %v1_a9b8 = trunc i32 %v0_a9b8 to i16
  %v2_a9b8 = load i32, i32* @r5, align 4
  %v3_a9b8 = add i32 %v2_a9b8, 4
  %v4_a9b8 = inttoptr i32 %v3_a9b8 to i16*
  store i16 %v1_a9b8, i16* %v4_a9b8, align 2
  %v0_a9bc = call i32 @function_f190()
  store i32 %v0_a9bc, i32* %r0.global-to-local, align 4
  store i32 %v1_a7e8, i32* %ip.global-to-local, align 4
  store i1 %v2_a9c8, i1* %cpsr_z.global-to-local, align 1
  %v1_a9cc = sub i32 1023, %v0_a9bc
  store i32 %v1_a9cc, i32* %r3.global-to-local, align 4
  br i1 %v2_a9c8, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_a9d4 = load i32, i32* @r5, align 4
  %v3_a9d4 = add i32 %v2_a9d4, 16
  %v4_a9d4 = inttoptr i32 %v3_a9d4 to i32*
  store i32 %v1_a9cc, i32* %v4_a9d4, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_a9d0 = add i32 %v1_a9d0, 16
  %v3_a9d0 = inttoptr i32 %v2_a9d0 to i32*
  %v4_a9d0 = load i32, i32* %v3_a9d0, align 4
  store i32 %v4_a9d0, i32* %r3.global-to-local, align 4
  %v2_a9d8 = load i32, i32* @r5, align 4
  %v3_a9d8 = add i32 %v2_a9d8, 16
  %v4_a9d8 = inttoptr i32 %v3_a9d8 to i32*
  store i32 %v4_a9d0, i32* %v4_a9d8, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_a9dc = load i32, i32* @r5, align 4
  %v2_a9dc = add i32 %v1_a9dc, 12
  %v3_a9dc = inttoptr i32 %v2_a9dc to i32*
  store i32 %v0_a9bc, i32* %v3_a9dc, align 4
  %v3_a9e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a9e0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_a9e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a9e8 = add i32 %v0_a9e8, 58
  store i32 %v1_a9e8, i32* @r6, align 4
  store i32 %v4_a9ec, i32* %r1.global-to-local, align 4
  %v1_a9f0 = add i32 %v3_a9e0, 1
  store i32 %v1_a9f0, i32* @r4, align 4
  store i32 %v4_a9f4, i32* %r2.global-to-local, align 4
  %v9_a9f8 = icmp eq i32 %v1_a9f0, %arg2
  store i1 %v9_a9f8, i1* %cpsr_z.global-to-local, align 1
  %v0_a9fc = load i32, i32* @r8, align 4
  %v1_a9fc = trunc i32 %v0_a9fc to i16
  %v3_a9fc = add i32 %v0_a9e8, 62
  %v4_a9fc = inttoptr i32 %v3_a9fc to i16*
  store i16 %v1_a9fc, i16* %v4_a9fc, align 2
  %v0_aa00 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa00 = trunc i32 %v0_aa00 to i16
  %v2_aa00 = load i32, i32* @r6, align 4
  %v3_aa00 = inttoptr i32 %v2_aa00 to i16*
  store i16 %v1_aa00, i16* %v3_aa00, align 2
  %v0_aa04 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa04 = trunc i32 %v0_aa04 to i16
  %v2_aa04 = load i32, i32* @r6, align 4
  %v3_aa04 = add i32 %v2_aa04, 2
  %v4_aa04 = inttoptr i32 %v3_aa04 to i16*
  store i16 %v1_aa04, i16* %v4_aa04, align 2
  %v0_aa08 = load i32, i32* @r4, align 4
  store i32 %v0_aa08, i32* %stack_var_-44, align 4
  %v5_aa0c = icmp slt i32 %v1_a9f0, %arg2
  br i1 %v5_aa0c, label %dec_label_pc_a8b4, label %dec_label_pc_aa10.preheader

dec_label_pc_aa10.preheader:                      ; preds = %bb80, %dec_label_pc_a7d4
  %v1_aa2c = add i32 %v5_a724, 8
  %v1_aa30 = add i32 %v5_a724, 66
  %v2_aa3c = icmp eq i32 %v5_a778, -1
  %v7_aa3c = icmp eq i32 %v5_a778, -1
  %v3_ac34 = icmp eq i32 %v3_a7ec, 65535
  %v2_ac84 = icmp eq i32 %v1_a7e8, 0
  %v2_aa98 = ptrtoint i32* %stack_var_-48 to i32
  %v2_aab0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_aac0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_aacc = ptrtoint i32* %stack_var_-54 to i32
  %v2_aae0 = icmp eq i32 %v1_a744, 0
  br label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %dec_label_pc_aa10.preheader, %dec_label_pc_acc4
  store i1 %v2_a7f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a7f8, label %dec_label_pc_acc4, label %dec_label_pc_aa24

dec_label_pc_aa24:                                ; preds = %dec_label_pc_aa10
  store i32 %v5_a724, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_aa2c, i32* @fp, align 4
  store i32 %v1_aa30, i32* @sb, align 4
  br label %dec_label_pc_ab98

dec_label_pc_aa38:                                ; preds = %dec_label_pc_ab98
  store i32 %v5_a778, i32* %r1.global-to-local, align 4
  store i1 %v7_aa3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa3c, label %dec_label_pc_ac24, label %dec_label_pc_aa44

dec_label_pc_aa44:                                ; preds = %dec_label_pc_abc4, %dec_label_pc_aa38
  store i32 %v3_a7ec, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ac34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ac34, label %dec_label_pc_ac40, label %dec_label_pc_aa58

dec_label_pc_aa58:                                ; preds = %dec_label_pc_ac24.dec_label_pc_aa58_crit_edge, %dec_label_pc_aa44
  %v1_aa5c = phi i32 [ %v1_aa5c.pre, %dec_label_pc_ac24.dec_label_pc_aa58_crit_edge ], [ 65535, %dec_label_pc_aa44 ]
  store i32 %v3_a7f0, i32* %r3.global-to-local, align 4
  %v9_aa5c = icmp eq i32 %v3_a7f0, %v1_aa5c
  store i1 %v9_aa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa5c, label %dec_label_pc_ac68, label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_ac40, %dec_label_pc_aa58
  %v1_aa68 = phi i32 [ %v1_ac60, %dec_label_pc_ac40 ], [ %v1_aa5c, %dec_label_pc_aa58 ]
  store i32 %v3_a7f4, i32* %ip.global-to-local, align 4
  %v9_aa68 = icmp eq i32 %v3_a7f4, %v1_aa68
  store i1 %v9_aa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa68, label %dec_label_pc_ac7c, label %dec_label_pc_aa70

dec_label_pc_aa70:                                ; preds = %dec_label_pc_ac68, %dec_label_pc_aa64
  store i32 %v1_a7e8, i32* @lr, align 4
  store i1 %v2_ac84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ac84, label %dec_label_pc_ac98, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_aa70
  %v1_aa78 = load i32, i32* @r5, align 4
  %v2_aa78 = add i32 %v1_aa78, 16
  %v3_aa78 = inttoptr i32 %v2_aa78 to i32*
  %v4_aa78 = load i32, i32* %v3_aa78, align 4
  store i32 %v4_aa78, i32* %r3.global-to-local, align 4
  %v2_aa7c = load i32, i32* @r6, align 4
  %v3_aa7c = add i32 %v2_aa7c, 16
  %v4_aa7c = inttoptr i32 %v3_aa7c to i32*
  store i32 %v4_aa78, i32* %v4_aa7c, align 4
  br label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %bb81, %.thread11, %dec_label_pc_ac98
  %v0_aa84 = call i32 @function_f190()
  store i32 %v0_aa84, i32* %r0.global-to-local, align 4
  store i32 %v0_aa84, i32* %stack_var_-48, align 4
  %v0_aa8c = call i32 @function_f190()
  store i32 %v0_aa8c, i32* %r0.global-to-local, align 4
  store i32 %v0_aa8c, i32* %stack_var_-52, align 4
  %v0_aa94 = call i32 @function_f190()
  store i32 %v2_aa98, i32* %r1.global-to-local, align 4
  store i32 %v0_aa94, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_aaa4 = load i32, i32* @r7, align 4
  store i32 %v0_aaa4, i32* %r0.global-to-local, align 4
  %v3_aaa8 = call i32 @function_124c0(i32 %v0_aaa4, i32 %v2_aa98, i32 4)
  %v0_aaac = load i32, i32* @r7, align 4
  %v1_aaac = add i32 %v0_aaac, 6
  store i32 %v1_aaac, i32* %r0.global-to-local, align 4
  store i32 %v2_aab0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_aab8 = call i32 @function_124c0(i32 %v1_aaac, i32 %v2_aab0, i32 4)
  %v0_aabc = load i32, i32* @r7, align 4
  %v1_aabc = add i32 %v0_aabc, 4
  store i32 %v1_aabc, i32* %r0.global-to-local, align 4
  store i32 %v2_aac0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_aac8 = call i32 @function_124c0(i32 %v1_aabc, i32 %v2_aac0, i32 2)
  store i32 %v2_aacc, i32* %r1.global-to-local, align 4
  %v0_aad0 = load i32, i32* @r7, align 4
  %v1_aad0 = add i32 %v0_aad0, 10
  store i32 %v1_aad0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_aad8 = call i32 @function_124c0(i32 %v1_aad0, i32 %v2_aacc, i32 2)
  store i32 %v3_aad8, i32* %r0.global-to-local, align 4
  store i32 %v1_a744, i32* %r1.global-to-local, align 4
  store i1 %v2_aae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aae0, label %dec_label_pc_aae8, label %dec_label_pc_aca4

dec_label_pc_aae8:                                ; preds = %dec_label_pc_aa84, %dec_label_pc_aca4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aaec = load i32, i32* @r5, align 4
  %v3_aaec = add i32 %v2_aaec, 10
  %v4_aaec = inttoptr i32 %v3_aaec to i16*
  store i16 0, i16* %v4_aaec, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_aaf4 = load i32, i32* @r5, align 4
  store i32 %v0_aaf4, i32* @r0, align 4
  %v2_aaf8 = call i32 @function_dd58(i32 %v0_aaf4, i32 20)
  %v3_aaf8 = trunc i32 %v2_aaf8 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab00 = load i32, i32* @r5, align 4
  %v4_ab00 = add i32 %v3_ab00, 10
  %v5_ab00 = inttoptr i32 %v4_ab00 to i16*
  store i16 %v3_aaf8, i16* %v5_ab00, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab08 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab08 = trunc i32 %v0_ab08 to i16
  %v2_ab08 = load i32, i32* @r6, align 4
  %v3_ab08 = add i32 %v2_ab08, 10
  %v4_ab08 = inttoptr i32 %v3_ab08 to i16*
  store i16 %v1_ab08, i16* %v4_ab08, align 2
  %v0_ab0c = load i32, i32* @r6, align 4
  store i32 %v0_ab0c, i32* @r0, align 4
  %v2_ab10 = call i32 @function_dd58(i32 %v0_ab0c, i32 20)
  %v3_ab10 = trunc i32 %v2_ab10 to i16
  store i32 %v2_ab10, i32* %r0.global-to-local, align 4
  %v3_ab14 = load i32, i32* @r6, align 4
  %v4_ab14 = add i32 %v3_ab14, 10
  %v5_ab14 = inttoptr i32 %v4_ab14 to i16*
  store i16 %v3_ab10, i16* %v5_ab14, align 2
  %v2_ab1c = load i32, i32* @r8, align 4
  %v3_ab1c = add i32 %v2_ab1c, 6
  %v4_ab1c = inttoptr i32 %v3_ab1c to i16*
  store i16 0, i16* %v4_ab1c, align 2
  %v0_ab20 = load i32, i32* @r8, align 4
  store i32 %v0_ab20, i32* @r1, align 4
  %v1_ab24 = add i32 %v0_ab20, 4
  %v2_ab24 = inttoptr i32 %v1_ab24 to i16*
  %v3_ab24 = load i16, i16* %v2_ab24, align 2
  %v4_ab24 = zext i16 %v3_ab24 to i32
  store i32 %v4_ab24, i32* %r2.global-to-local, align 4
  %v0_ab28 = load i32, i32* @fp, align 4
  store i32 %v0_ab28, i32* %r3.global-to-local, align 4
  %v0_ab2c = load i32, i32* @r6, align 4
  store i32 %v0_ab2c, i32* %r0.global-to-local, align 4
  %v4_ab30 = call i32 @function_dda8(i32 %v0_ab2c, i32 %v0_ab20, i32 %v4_ab24, i32 %v0_ab28)
  %v5_ab30 = trunc i32 %v4_ab30 to i16
  store i32 %v4_ab30, i32* %r0.global-to-local, align 4
  %v3_ab34 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab34, i32* %r2.global-to-local, align 4
  %v3_ab38 = mul i32 %v3_ab34, 32
  store i32 %v3_ab38, i32* %r3.global-to-local, align 4
  %v0_ab3c = load i32, i32* @r5, align 4
  %v1_ab3c = add i32 %v0_ab3c, 16
  %v2_ab3c = inttoptr i32 %v1_ab3c to i32*
  %v3_ab3c = load i32, i32* %v2_ab3c, align 4
  %v5_ab40 = mul i32 %v3_ab34, 24
  store i32 %v5_ab40, i32* %r3.global-to-local, align 4
  %v1_ab44 = load i32, i32* @sl, align 4
  %v2_ab44 = add i32 %v1_ab44, %v5_ab40
  store i32 %v2_ab44, i32* @lr, align 4
  %v2_ab48 = add i32 %v2_ab44, 4
  %v3_ab48 = inttoptr i32 %v2_ab48 to i32*
  store i32 %v3_ab3c, i32* %v3_ab48, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ab54 = load i32, i32* @r8, align 4
  %v4_ab54 = add i32 %v3_ab54, 6
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v5_ab30, i16* %v5_ab54, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ab5c = load i32, i32* %r1.global-to-local, align 4
  %v1_ab5c = trunc i32 %v0_ab5c to i16
  %v2_ab5c = load i32, i32* %r3.global-to-local, align 4
  %v3_ab5c = load i32, i32* @sl, align 4
  %v4_ab5c = add i32 %v3_ab5c, %v2_ab5c
  %v5_ab5c = inttoptr i32 %v4_ab5c to i16*
  store i16 %v1_ab5c, i16* %v5_ab5c, align 2
  %v0_ab60 = load i32, i32* %r2.global-to-local, align 4
  %v1_ab60 = trunc i32 %v0_ab60 to i16
  %v2_ab60 = load i32, i32* @lr, align 4
  %v3_ab60 = add i32 %v2_ab60, 2
  %v4_ab60 = inttoptr i32 %v3_ab60 to i16*
  store i16 %v1_ab60, i16* %v4_ab60, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ab68 = load i32, i32* @r5, align 4
  store i32 %v0_ab68, i32* %r1.global-to-local, align 4
  store i32 %v3_a79c, i32* %r0.global-to-local, align 4
  %v0_ab70 = load i32, i32* @sb, align 4
  store i32 %v0_ab70, i32* %r2.global-to-local, align 4
  %v0_ab74 = load i32, i32* @lr, align 4
  %v0_ab78 = load i32, i32* %ip.global-to-local, align 4
  %v6_ab7c = call i32 @function_13840(i32 %v3_a79c, i32 %v0_ab68, i32 %v0_ab70, i32 16384, i32 %v0_ab74, i32 %v0_ab78)
  %v3_ab80 = load i32, i32* %stack_var_-44, align 4
  %v1_ab84 = add i32 %v3_ab80, 1
  store i32 %v1_ab84, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_ab8c = icmp eq i32 %v1_ab84, %arg2
  store i1 %v9_ab8c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ab84, i32* %stack_var_-44, align 4
  %v6_ab94 = icmp slt i32 %v1_ab84, %arg2
  br i1 %v6_ab94, label %dec_label_pc_ab98, label %dec_label_pc_acc4

dec_label_pc_ab98:                                ; preds = %dec_label_pc_aae8, %dec_label_pc_aa24
  %v1_abac = phi i32 [ %v1_ab84, %dec_label_pc_aae8 ], [ 0, %dec_label_pc_aa24 ]
  %v5_ab9c = mul i32 %v1_abac, 24
  %v1_aba0 = load i32, i32* @sl, align 4
  %v2_aba0 = add i32 %v1_aba0, %v5_ab9c
  store i32 %v2_aba0, i32* %r3.global-to-local, align 4
  store i32 %v2_a658, i32* %lr.global-to-local, align 4
  %v1_aba8 = add i32 %v2_aba0, 20
  %v2_aba8 = inttoptr i32 %v1_aba8 to i8*
  %v3_aba8 = load i8, i8* %v2_aba8, align 1
  %v4_aba8 = zext i8 %v3_aba8 to i32
  store i32 %v4_aba8, i32* %r2.global-to-local, align 4
  %v4_abac = mul i32 %v1_abac, 4
  %v5_abac = add i32 %v4_abac, %v2_a658
  %v6_abac = inttoptr i32 %v5_abac to i32*
  %v7_abac = load i32, i32* %v6_abac, align 4
  store i32 %v7_abac, i32* @r5, align 4
  %v2_abb0 = icmp ugt i8 %v3_aba8, 30
  %v7_abb0 = icmp eq i8 %v3_aba8, 31
  store i1 %v7_abb0, i1* %cpsr_z.global-to-local, align 1
  %v1_abb4 = add i32 %v7_abac, 24
  store i32 %v1_abb4, i32* @r7, align 4
  %v1_abb8 = add i32 %v7_abac, 38
  store i32 %v1_abb8, i32* @r6, align 4
  %v1_abbc = add i32 %v7_abac, 58
  store i32 %v1_abbc, i32* @r8, align 4
  %v2_abc0 = xor i1 %v7_abb0, true
  %v3_abc0 = and i1 %v2_abb0, %v2_abc0
  br i1 %v3_abc0, label %dec_label_pc_aa38, label %dec_label_pc_abc4

dec_label_pc_abc4:                                ; preds = %dec_label_pc_ab98
  %v1_abc4 = add i32 %v2_aba0, 16
  %v2_abc4 = inttoptr i32 %v1_abc4 to i32*
  %v3_abc4 = load i32, i32* %v2_abc4, align 4
  store i32 %v3_abc4, i32* %r4.global-to-local, align 4
  %v0_abc8 = call i32 @function_f190()
  store i32 %v0_abc8, i32* %r0.global-to-local, align 4
  %v3_abcc = load i32, i32* %stack_var_-44, align 4
  %v5_abd4 = mul i32 %v3_abcc, 24
  %v1_abd8 = and i32 %v3_abc4, 16711680
  store i32 %v1_abd8, i32* %ip.global-to-local, align 4
  %v3_abdc = udiv i32 %v3_abc4, 16777216
  %v4_abe0 = udiv i32 %v1_abd8, 256
  %v5_abe0 = or i32 %v4_abe0, %v3_abdc
  store i32 %v5_abe0, i32* %r2.global-to-local, align 4
  %v1_abe4 = load i32, i32* @sl, align 4
  %v2_abe4 = add i32 %v1_abe4, %v5_abd4
  store i32 %v2_abe4, i32* %r1.global-to-local, align 4
  %v1_abe8 = and i32 %v3_abc4, 65280
  store i32 %v1_abe8, i32* %r3.global-to-local, align 4
  %v1_abec = add i32 %v2_abe4, 20
  %v2_abec = inttoptr i32 %v1_abec to i8*
  %v3_abec = load i8, i8* %v2_abec, align 1
  %v4_abec = zext i8 %v3_abec to i32
  store i32 %v4_abec, i32* %ip.global-to-local, align 4
  %v5_abf4 = call i32 @llvm.bswap.i32(i32 %v3_abc4)
  %v7_abf8 = lshr i32 %v0_abc8, %v4_abec
  %v8_abf8 = add i32 %v7_abf8, %v5_abf4
  store i32 %v8_abf8, i32* %r2.global-to-local, align 4
  %v1_abfc = and i32 %v8_abf8, 16711680
  store i32 %v1_abfc, i32* %r0.global-to-local, align 4
  store i32 %v5_a778, i32* %r1.global-to-local, align 4
  %v5_ac14 = call i32 @llvm.bswap.i32(i32 %v8_abf8)
  store i32 %v5_ac14, i32* %r3.global-to-local, align 4
  store i1 %v7_aa3c, i1* %cpsr_z.global-to-local, align 1
  %v1_ac1c = load i32, i32* @r5, align 4
  %v2_ac1c = add i32 %v1_ac1c, 16
  %v3_ac1c = inttoptr i32 %v2_ac1c to i32*
  store i32 %v5_ac14, i32* %v3_ac1c, align 4
  br i1 %v2_aa3c, label %dec_label_pc_ac24, label %dec_label_pc_aa44

dec_label_pc_ac24:                                ; preds = %dec_label_pc_abc4, %dec_label_pc_aa38
  %v0_ac24 = call i32 @function_f190()
  store i32 %v0_ac24, i32* %r0.global-to-local, align 4
  store i32 %v3_a7ec, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ac34, i1* %cpsr_z.global-to-local, align 1
  %v1_ac38 = load i32, i32* @r5, align 4
  %v2_ac38 = add i32 %v1_ac38, 12
  %v3_ac38 = inttoptr i32 %v2_ac38 to i32*
  store i32 %v0_ac24, i32* %v3_ac38, align 4
  br i1 %v3_ac34, label %dec_label_pc_ac40, label %dec_label_pc_ac24.dec_label_pc_aa58_crit_edge

dec_label_pc_ac24.dec_label_pc_aa58_crit_edge:    ; preds = %dec_label_pc_ac24
  %v1_aa5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa58

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac24, %dec_label_pc_aa44
  %v0_ac40 = call i32 @function_f190()
  %v3_ac48 = urem i32 %v0_ac40, 65536
  store i32 %v3_ac48, i32* %r0.global-to-local, align 4
  %v1_ac50 = sub nsw i32 999, %v3_ac48
  store i32 %v1_ac50, i32* %r3.global-to-local, align 4
  %v1_ac54 = trunc i32 %v0_ac40 to i16
  %v2_ac54 = load i32, i32* @r5, align 4
  %v3_ac54 = add i32 %v2_ac54, 4
  %v4_ac54 = inttoptr i32 %v3_ac54 to i16*
  store i16 %v1_ac54, i16* %v4_ac54, align 2
  %v0_ac58 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac58 = trunc i32 %v0_ac58 to i16
  %v2_ac58 = load i32, i32* @r6, align 4
  %v3_ac58 = add i32 %v2_ac58, 4
  %v4_ac58 = inttoptr i32 %v3_ac58 to i16*
  store i16 %v1_ac58, i16* %v4_ac58, align 2
  store i32 %v3_a7f0, i32* %r3.global-to-local, align 4
  %v1_ac60 = load i32, i32* @r4, align 4
  %v9_ac60 = icmp eq i32 %v3_a7f0, %v1_ac60
  store i1 %v9_ac60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac60, label %dec_label_pc_ac68, label %dec_label_pc_aa64

dec_label_pc_ac68:                                ; preds = %dec_label_pc_ac40, %dec_label_pc_aa58
  %v0_ac68 = call i32 @function_f190()
  %v1_ac68 = trunc i32 %v0_ac68 to i16
  store i32 %v0_ac68, i32* %r0.global-to-local, align 4
  store i32 %v3_a7f4, i32* %ip.global-to-local, align 4
  %v1_ac70 = load i32, i32* @r4, align 4
  %v9_ac70 = icmp eq i32 %v3_a7f4, %v1_ac70
  store i1 %v9_ac70, i1* %cpsr_z.global-to-local, align 1
  %v3_ac74 = load i32, i32* @r5, align 4
  %v4_ac74 = add i32 %v3_ac74, 58
  %v5_ac74 = inttoptr i32 %v4_ac74 to i16*
  store i16 %v1_ac68, i16* %v5_ac74, align 2
  br i1 %v9_ac70, label %dec_label_pc_ac7c, label %dec_label_pc_aa70

dec_label_pc_ac7c:                                ; preds = %dec_label_pc_ac68, %dec_label_pc_aa64
  %v0_ac7c = call i32 @function_f190()
  %v1_ac7c = trunc i32 %v0_ac7c to i16
  store i32 %v0_ac7c, i32* %r0.global-to-local, align 4
  store i32 %v1_a7e8, i32* @lr, align 4
  store i1 %v2_ac84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ac84, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_ac7c
  %v3_ac8c25 = load i32, i32* @r8, align 4
  %v4_ac8c26 = add i32 %v3_ac8c25, 2
  %v5_ac8c27 = inttoptr i32 %v4_ac8c26 to i16*
  store i16 %v1_ac7c, i16* %v5_ac8c27, align 2
  br label %dec_label_pc_ac98

bb81:                                             ; preds = %dec_label_pc_ac7c
  %v1_ac88 = load i32, i32* @r5, align 4
  %v2_ac88 = add i32 %v1_ac88, 16
  %v3_ac88 = inttoptr i32 %v2_ac88 to i32*
  %v4_ac88 = load i32, i32* %v3_ac88, align 4
  store i32 %v4_ac88, i32* %r3.global-to-local, align 4
  %v3_ac8c = load i32, i32* @r8, align 4
  %v4_ac8c = add i32 %v3_ac8c, 2
  %v5_ac8c = inttoptr i32 %v4_ac8c to i16*
  store i16 %v1_ac7c, i16* %v5_ac8c, align 2
  %v1_ac90 = load i32, i32* %r3.global-to-local, align 4
  %v2_ac90 = load i32, i32* @r6, align 4
  %v3_ac90 = add i32 %v2_ac90, 16
  %v4_ac90 = inttoptr i32 %v3_ac90 to i32*
  store i32 %v1_ac90, i32* %v4_ac90, align 4
  br label %dec_label_pc_aa84

dec_label_pc_ac98:                                ; preds = %.thread24, %dec_label_pc_aa70
  %v0_ac98 = call i32 @function_f190()
  store i32 %v0_ac98, i32* %r0.global-to-local, align 4
  %v1_ac9c = load i32, i32* @r6, align 4
  %v2_ac9c = add i32 %v1_ac9c, 16
  %v3_ac9c = inttoptr i32 %v2_ac9c to i32*
  store i32 %v0_ac98, i32* %v3_ac9c, align 4
  br label %dec_label_pc_aa84

dec_label_pc_aca4:                                ; preds = %dec_label_pc_aa84
  %v0_aca4 = load i32, i32* @r8, align 4
  %v1_aca4 = add i32 %v0_aca4, 8
  store i32 %v1_aca4, i32* @r4, align 4
  store i32 %v1_aca4, i32* %r0.global-to-local, align 4
  store i32 %v5_a724, i32* %r1.global-to-local, align 4
  %v2_acb0 = call i32 @function_f254(i32 %v1_aca4, i32 %v5_a724)
  store i32 %v2_acb0, i32* %r0.global-to-local, align 4
  store i32 %v5_a724, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acbc = load i32, i32* @r4, align 4
  %v4_acbc = add i32 %v2_acbc, %v5_a724
  %v5_acbc = inttoptr i32 %v4_acbc to i8*
  store i8 0, i8* %v5_acbc, align 1
  br label %dec_label_pc_aae8

dec_label_pc_acc4:                                ; preds = %dec_label_pc_aae8, %dec_label_pc_aa10
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_acc8 = call i32 @function_12d34(i32* null)
  store i32 %v2_acc8, i32* %r0.global-to-local, align 4
  store i32 %v2_a788, i32* %ip.global-to-local, align 4
  %v9_acd0 = icmp eq i32 %v2_a788, %v2_acc8
  store i1 %v9_acd0, i1* %cpsr_z.global-to-local, align 1
  %v6_acd4 = icmp slt i32 %v2_a788, %v2_acc8
  br i1 %v6_acd4, label %dec_label_pc_acd8, label %dec_label_pc_aa10

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acc4, %dec_label_pc_a62c, %dec_label_pc_ace4
  %v1_ace0 = phi i32 [ %v3_a79c, %dec_label_pc_a62c ], [ %v1_ace8, %dec_label_pc_ace4 ], [ %v2_acc8, %dec_label_pc_acc4 ]
  store i32 %v3_a62c, i32* %r4.global-to-local, align 4
  store i32 %v24_a62c, i32* %fp.global-to-local, align 4
  store i32 %v27_a62c, i32* %lr.global-to-local, align 4
  ret i32 %v1_ace0

dec_label_pc_ace4:                                ; preds = %dec_label_pc_a7ac
  store i32 %v3_a79c, i32* %r0.global-to-local, align 4
  %v1_ace8 = call i32 @function_130b4(i32 %v3_a79c)
  store i32 %v1_ace8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_acd8

; uselistorder directives
  uselistorder i32 %v1_ace8, { 1, 0 }
  uselistorder i16 %v1_ac7c, { 1, 0 }
  uselistorder i32 %v0_ac7c, { 1, 0 }
  uselistorder i32 %v0_ac68, { 1, 0 }
  uselistorder i32 %v1_ac60, { 1, 0 }
  uselistorder i32 %v3_ac48, { 1, 0 }
  uselistorder i32 %v0_ac40, { 1, 0 }
  uselistorder i32 %v5_ac14, { 1, 0 }
  uselistorder i32 %v3_abc4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_abac, { 2, 1, 0, 3 }
  uselistorder i32 %v1_ab84, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_ab34, { 1, 0, 2 }
  uselistorder i32 %v4_ab30, { 1, 0 }
  uselistorder i32 %v2_ab10, { 1, 0 }
  uselistorder i1 %v2_ac84, { 2, 3, 1, 0 }
  uselistorder i1 %v3_ac34, { 1, 0, 2, 3 }
  uselistorder i1 %v7_aa3c, { 2, 1, 0 }
  uselistorder i32 %v0_a9bc, { 1, 0, 2 }
  uselistorder i32 %v0_a8d4, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_a828, { 2, 0, 1 }
  uselistorder i32 %v3_a820, { 2, 1, 0 }
  uselistorder i1 %v2_a7f8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a7ec, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a7e8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a7e4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_a7e0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a7dc, { 1, 0 }
  uselistorder i1 %v7_a7cc, { 1, 0 }
  uselistorder i1 %v7_a7a0, { 1, 0 }
  uselistorder i32 %v3_a79c, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_a788, { 2, 1, 0 }
  uselistorder i32 %v5_a778, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_a744, { 1, 2, 0 }
  uselistorder i32 %v5_a724, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_a6f0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a6d8, { 1, 0 }
  uselistorder i32 %v1_a6b4, { 2, 1, 0 }
  uselistorder i32 %v5_a6ac, { 1, 0 }
  uselistorder i8 %v5_a690, { 0, 2, 1 }
  uselistorder i32 %v6_a670, { 1, 0 }
  uselistorder i32 %v2_a658, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_acd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aae8, { 1, 0 }
  uselistorder label %dec_label_pc_aa84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa10, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_acf4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_acf4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_acf4 = load i32, i32* @r4, align 4
  %v24_acf4 = load i32, i32* @fp, align 4
  %v27_acf4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ad20 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_ad24 = load i32, i32* @r4, align 4
  store i32 %v0_ad24, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ad30 = load i32, i32* @sb, align 4
  store i32 %v0_ad30, i32* %r3.global-to-local, align 4
  %v0_ad34 = load i32, i32* @r5, align 4
  %v5_ad38 = inttoptr i32 %v0_ad24 to i32*
  %v6_ad38 = call i32 @function_9fe8(i32 %v0_ad34, i32* %v5_ad38, i32 2, i32 %v0_ad30)
  %v1_ad44 = urem i32 %v6_ad38, 256
  store i32 %v1_ad44, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ad50 = load i32, i32* @r4, align 4
  store i32 %v0_ad50, i32* %r1.global-to-local, align 4
  %v0_ad54 = load i32, i32* @r5, align 4
  %v5_ad58 = trunc i32 %v6_ad38 to i8
  %v6_ad5c = inttoptr i32 %v0_ad50 to i32*
  %v7_ad5c = call i32 @function_9fe8(i32 %v0_ad54, i32* %v6_ad5c, i32 3, i32 65535)
  %v0_ad60 = load i32, i32* @r4, align 4
  store i32 %v0_ad60, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ad70 = load i32, i32* @r5, align 4
  %v5_ad74 = inttoptr i32 %v0_ad60 to i32*
  %v6_ad74 = call i32 @function_9fe8(i32 %v0_ad70, i32* %v5_ad74, i32 4, i32 64)
  %v1_ad7c = urem i32 %v6_ad74, 256
  store i32 %v1_ad7c, i32* %ip.global-to-local, align 4
  %v0_ad80 = load i32, i32* @r4, align 4
  store i32 %v0_ad80, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ad8c = load i32, i32* @r5, align 4
  %v6_ad94 = inttoptr i32 %v0_ad80 to i32*
  %v7_ad94 = call i32 @function_9fe8(i32 %v0_ad8c, i32* %v6_ad94, i32 5, i32 1)
  %v1_ada0 = urem i32 %v7_ad94, 256
  store i32 %v1_ada0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_adac = load i32, i32* @r4, align 4
  store i32 %v0_adac, i32* %r1.global-to-local, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v5_adb8 = inttoptr i32 %v0_adac to i32*
  %v6_adb8 = call i32 @function_9fe8(i32 %v0_adb0, i32* %v5_adb8, i32 6, i32 65535)
  %v0_adc0 = load i32, i32* @r4, align 4
  store i32 %v0_adc0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_adb8, i32* %fp.global-to-local, align 4
  %v0_add0 = load i32, i32* @r5, align 4
  %v4_add4 = inttoptr i32 %v0_adc0 to i32*
  %v5_add4 = call i32 @function_9fe8(i32 %v0_add0, i32* %v4_add4, i32 7, i32 65535)
  %v0_add8 = load i32, i32* @r4, align 4
  store i32 %v0_add8, i32* %r1.global-to-local, align 4
  %v0_addc = load i32, i32* @sb, align 4
  store i32 %v0_addc, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_add4, i32* @r8, align 4
  %v0_ade8 = load i32, i32* @r5, align 4
  %v4_adec = inttoptr i32 %v0_add8 to i32*
  %v5_adec = call i32 @function_9fe8(i32 %v0_ade8, i32* %v4_adec, i32 %v0_addc, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_adfc = load i32, i32* @r4, align 4
  store i32 %v0_adfc, i32* %r1.global-to-local, align 4
  %v0_ae00 = load i32, i32* @r5, align 4
  %v4_ae04 = inttoptr i32 %v0_adfc to i32*
  %v5_ae04 = call i32 @function_9fe8(i32 %v0_ae00, i32* %v4_ae04, i32 1, i32 1)
  %v1_ae0c = urem i32 %v5_ae04, 256
  store i32 %v1_ae0c, i32* %ip.global-to-local, align 4
  %v0_ae10 = load i32, i32* @r4, align 4
  store i32 %v0_ae10, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_ae18 = load i32, i32* @sb, align 4
  store i32 %v0_ae18, i32* %r3.global-to-local, align 4
  %v0_ae1c = load i32, i32* @r5, align 4
  %v5_ae24 = inttoptr i32 %v0_ae10 to i32*
  %v6_ae24 = call i32 @function_9fe8(i32 %v0_ae1c, i32* %v5_ae24, i32 18, i32 %v0_ae18)
  %v0_ae2c = load i32, i32* @r4, align 4
  store i32 %v0_ae2c, i32* %r1.global-to-local, align 4
  %v2_ae30 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_ae30, i32* %r3.global-to-local, align 4
  store i32 %v6_ae24, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_ae3c = load i32, i32* @r5, align 4
  %v4_ae40 = inttoptr i32 %v0_ae2c to i32*
  %v5_ae40 = call i32 @function_9fe8(i32 %v0_ae3c, i32* %v4_ae40, i32 24, i32 %v2_ae30)
  %v0_ae48 = load i32, i32* @sb, align 4
  %v1_ae4c = inttoptr i32 %v0_ae48 to i32*
  %v2_ae4c = call i32 @function_12d34(i32* %v1_ae4c)
  %v1_ae50 = load i32, i32* @r6, align 4
  %v2_ae50 = add i32 %v1_ae50, %v2_ae4c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_ae64 = call i32 @function_138c4(i32 2, i32 3, i32 6)
  %v7_ae68 = icmp eq i32 %v3_ae64, -1
  store i1 %v7_ae68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ae68, label %dec_label_pc_b338, label %dec_label_pc_ae74

dec_label_pc_ae74:                                ; preds = %dec_label_pc_acf4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ae7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_ae7c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_ae84 = load i32, i32* @sb, align 4
  store i32 %v0_ae84, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ae90 = call i32 @function_13880(i32 %v3_ae64, i32 %v0_ae84, i32 3, i32 %v6_ae7c, i32 4)
  %v7_ae94 = icmp eq i32 %v5_ae90, -1
  store i1 %v7_ae94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ae94, label %dec_label_pc_b344, label %dec_label_pc_ae9c

dec_label_pc_ae9c:                                ; preds = %dec_label_pc_ae74
  %v0_ae9c = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_aeb0 = load i32, i32* @r8, align 4
  %v3_aeb4 = mul i32 %v7_ad5c, 65536
  store i32 %v3_aeb4, i32* %r1.global-to-local, align 4
  %v0_aeb8 = load i32, i32* @r7, align 4
  %v1_aeb8 = urem i32 %v0_aeb8, 256
  store i32 %v1_aeb8, i32* @r7, align 4
  %v3_aebc = urem i32 %v0_ae9c, 65536
  store i32 %v3_aebc, i32* %r3.global-to-local, align 4
  %v3_aec0 = urem i32 %v0_aeb0, 65536
  store i32 %v3_aec0, i32* %ip.global-to-local, align 4
  %v2_aec4 = icmp eq i32 %arg2, 0
  store i1 %v2_aec4, i1* %cpsr_z.global-to-local, align 1
  %v0_aed4 = load i32, i32* @sb, align 4
  store i32 %v0_aed4, i32* %stack_var_-44, align 4
  %v3_aed8 = urem i32 %v7_ad5c, 65536
  store i32 %v3_aed8, i32* @fp, align 4
  br i1 %v2_aec4, label %dec_label_pc_b0cc.preheader, label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %dec_label_pc_ae9c
  %v3_aeb0 = mul i32 %v0_aeb0, 65536
  %v3_ae9c = mul i32 %v0_ae9c, 65536
  %v3_aeec = mul i32 %v5_adec, 65536
  %v1_aef0 = add i32 %v3_aeec, 3407872
  %tmp68 = udiv i32 %v1_aef0, 256
  %v3_aefc = and i32 %tmp68, 65280
  %v7_ad5c.not = or i32 %v7_ad5c, -65536
  %v1_af00 = xor i32 %v7_ad5c.not, 65535
  %v4_af04 = udiv i32 %v1_aef0, 16777216
  %v5_af04 = or i32 %v3_aefc, %v4_af04
  store i32 %v3_aeb4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_ad5c, 256
  %v3_af1c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_af00, 256
  %v3_af20 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_ad5c, 256
  %v4_af24 = urem i32 %tmp71, 256
  %v5_af24 = or i32 %v4_af24, %v3_af1c
  %tmp72 = udiv i32 %v1_af00, 256
  %v4_af2c = urem i32 %tmp72, 256
  %v5_af2c = or i32 %v4_af2c, %v3_af20
  store i32 %v5_af2c, i32* @r6, align 4
  store i32 %v3_ae9c, i32* %r1.global-to-local, align 4
  store i32 %v3_aeb0, i32* %r2.global-to-local, align 4
  %v1_af40 = add i32 %v3_aeec, 524288
  %tmp73 = mul i32 %v0_ae9c, 256
  %v3_af44 = and i32 %tmp73, 65280
  %v1_af48 = add i32 %v3_aeec, 1835008
  store i32 %v1_af48, i32* @r5, align 4
  %tmp74 = mul i32 %v0_aeb0, 256
  %v3_af4c = and i32 %tmp74, 65280
  %v3_af54 = udiv i32 %v1_af48, 256
  %tmp75 = udiv i32 %v0_ae9c, 256
  %v4_af58 = urem i32 %tmp75, 256
  %v5_af58 = or i32 %v4_af58, %v3_af44
  %tmp76 = udiv i32 %v0_aeb0, 256
  %v4_af5c = urem i32 %tmp76, 256
  %v5_af5c = or i32 %v4_af5c, %v3_af4c
  store i32 %v5_af5c, i32* %ip.global-to-local, align 4
  %v1_af60 = and i32 %v3_af54, 65280
  %tmp77 = udiv i32 %v1_af40, 256
  %v3_af64 = and i32 %tmp77, 65280
  store i32 %v3_af64, i32* @lr, align 4
  %v4_af78 = udiv i32 %v1_af40, 16777216
  %v5_af78 = or i32 %v3_af64, %v4_af78
  store i32 %v5_af78, i32* @r7, align 4
  %v4_af7c = udiv i32 %v1_af48, 16777216
  %v5_af7c = or i32 %v1_af60, %v4_af7c
  store i32 %v5_af7c, i32* @r8, align 4
  store i32 %v0_aed4, i32* @r4, align 4
  %v4_afd4 = sext i8 %v5_ad58 to i32
  %v1_afe0 = trunc i32 %v6_ad74 to i8
  %sext = mul nuw i32 %v5_af04, 65536
  %v4_afe8 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_af24, 65536
  %v4_afec = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_af2c, 65536
  %v4_b054 = sdiv i32 %sext9, 65536
  %v2_b084 = icmp eq i32 %v1_aeb8, 0
  %sext10 = mul nuw i32 %v5_af58, 65536
  %v4_b0a8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_af5c, 65536
  %v4_b0b0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_afe8 to i16
  br label %dec_label_pc_af84

dec_label_pc_af84:                                ; preds = %bb82, %dec_label_pc_aee8
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_af90 = call i32 @function_1442c(i32 1510, i32 4)
  store i32 %v2_ad20, i32* %ip.global-to-local, align 4
  %v2_af9c = load i32, i32* @r4, align 4
  %v5_af9c = mul i32 %v2_af9c, 4
  %v6_af9c = add i32 %v5_af9c, %v2_ad20
  %v7_af9c = inttoptr i32 %v6_af9c to i32*
  store i32 %v2_af90, i32* %v7_af9c, align 4
  %v3_afa0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afa0, i32* %r3.global-to-local, align 4
  %v0_afa4 = load i32, i32* %ip.global-to-local, align 4
  %v4_afa4 = mul i32 %v3_afa0, 4
  %v5_afa4 = add i32 %v0_afa4, %v4_afa4
  %v6_afa4 = inttoptr i32 %v5_afa4 to i32*
  %v7_afa4 = load i32, i32* %v6_afa4, align 4
  store i32 %v7_afa4, i32* %r4.global-to-local, align 4
  %v1_afa8 = inttoptr i32 %v7_afa4 to i8*
  %v2_afa8 = load i8, i8* %v1_afa8, align 1
  %tmp = urem i8 %v2_afa8, 16
  %v1_afac = zext i8 %tmp to i32
  %v1_afb0 = or i32 %v1_afac, 64
  store i32 %v1_afb0, i32* %r2.global-to-local, align 4
  %v1_afb4 = trunc i32 %v1_afb0 to i8
  store i8 %v1_afb4, i8* %v1_afa8, align 1
  %v0_afb8 = load i32, i32* %r3.global-to-local, align 4
  %v5_afbc = mul i32 %v0_afb8, 24
  store i32 %v5_afbc, i32* %r1.global-to-local, align 4
  %v0_afc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_afc0 = inttoptr i32 %v0_afc0 to i8*
  %v2_afc0 = load i8, i8* %v1_afc0, align 1
  %v1_afc4 = and i8 %v2_afc0, -16
  %v1_afc8 = or i8 %v1_afc4, 5
  store i32 %v1_ada0, i32* %lr.global-to-local, align 4
  store i8 %v1_afc8, i8* %v1_afc0, align 1
  store i32 %v4_afd4, i32* %r2.global-to-local, align 4
  %v2_afd8 = load i32, i32* %r4.global-to-local, align 4
  %v3_afd8 = add i32 %v2_afd8, 1
  %v4_afd8 = inttoptr i32 %v3_afd8 to i8*
  store i8 %v5_ad58, i8* %v4_afd8, align 1
  store i32 %v1_ad7c, i32* %r3.global-to-local, align 4
  %v2_afe0 = load i32, i32* %r4.global-to-local, align 4
  %v3_afe0 = add i32 %v2_afe0, 8
  %v4_afe0 = inttoptr i32 %v3_afe0 to i8*
  store i8 %v1_afe0, i8* %v4_afe0, align 1
  %v0_afe4 = load i32, i32* %lr.global-to-local, align 4
  %v2_afe4 = icmp eq i32 %v0_afe4, 0
  store i1 %v2_afe4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_afe8, i32* %ip.global-to-local, align 4
  store i32 %v4_afec, i32* %lr.global-to-local, align 4
  br i1 %v2_afe4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_af84
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_aff4 = load i32, i32* %r4.global-to-local, align 4
  %v4_aff4 = add i32 %v3_aff4, 6
  %v5_aff4 = inttoptr i32 %v4_aff4 to i16*
  store i16 64, i16* %v5_aff4, align 2
  %v0_aff8.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_aff8.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_af84, %bb
  %v0_aff8.off0 = phi i16 [ %extract.t, %dec_label_pc_af84 ], [ %extract.t27, %bb ]
  %v2_aff8 = load i32, i32* %r4.global-to-local, align 4
  %v3_aff8 = add i32 %v2_aff8, 2
  %v4_aff8 = inttoptr i32 %v3_aff8 to i16*
  store i16 %v0_aff8.off0, i16* %v4_aff8, align 2
  %v0_affc = load i32, i32* %r4.global-to-local, align 4
  %v1_affc = add i32 %v0_affc, 20
  store i32 %v1_affc, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_b008 = add i32 %v0_affc, 9
  %v4_b008 = inttoptr i32 %v3_b008 to i8*
  store i8 47, i8* %v4_b008, align 1
  %v0_b00c = load i32, i32* %lr.global-to-local, align 4
  %v1_b00c = trunc i32 %v0_b00c to i16
  %v2_b00c = load i32, i32* %r4.global-to-local, align 4
  %v3_b00c = add i32 %v2_b00c, 4
  %v4_b00c = inttoptr i32 %v3_b00c to i16*
  store i16 %v1_b00c, i16* %v4_b00c, align 2
  %v0_b010 = load i32, i32* %ip.global-to-local, align 4
  %v1_b010 = trunc i32 %v0_b010 to i16
  %v2_b010 = load i32, i32* %r2.global-to-local, align 4
  %v3_b010 = add i32 %v2_b010, 2
  %v4_b010 = inttoptr i32 %v3_b010 to i16*
  store i16 %v1_b010, i16* %v4_b010, align 2
  store i32 %v5_ae40, i32* %lr.global-to-local, align 4
  %v0_b018 = load i32, i32* %r4.global-to-local, align 4
  %v1_b018 = add i32 %v0_b018, 24
  %v2_b018 = inttoptr i32 %v1_b018 to i8*
  %v3_b018 = load i8, i8* %v2_b018, align 1
  %v4_b018 = zext i8 %v3_b018 to i32
  store i32 %v4_b018, i32* %r2.global-to-local, align 4
  %v2_b01c = add i32 %v0_b018, 12
  %v3_b01c = inttoptr i32 %v2_b01c to i32*
  store i32 %v5_ae40, i32* %v3_b01c, align 4
  %v0_b020 = load i32, i32* %r2.global-to-local, align 4
  %v1_b020 = and i32 %v0_b020, -241
  %v1_b024 = or i32 %v1_b020, 64
  store i32 %v1_b024, i32* %r2.global-to-local, align 4
  %v0_b028 = load i32, i32* %r1.global-to-local, align 4
  %v1_b028 = load i32, i32* @sl, align 4
  %v2_b028 = add i32 %v1_b028, %v0_b028
  store i32 %v2_b028, i32* %r1.global-to-local, align 4
  %v1_b02c = add i32 %v2_b028, 16
  %v2_b02c = inttoptr i32 %v1_b02c to i32*
  %v3_b02c = load i32, i32* %v2_b02c, align 4
  store i32 %v3_b02c, i32* %r1.global-to-local, align 4
  %v1_b030 = trunc i32 %v1_b024 to i8
  %v2_b030 = load i32, i32* %r4.global-to-local, align 4
  %v3_b030 = add i32 %v2_b030, 24
  %v4_b030 = inttoptr i32 %v3_b030 to i8*
  store i8 %v1_b030, i8* %v4_b030, align 1
  %v0_b034 = load i32, i32* %r4.global-to-local, align 4
  %v1_b034 = add i32 %v0_b034, 24
  %v2_b034 = inttoptr i32 %v1_b034 to i8*
  %v3_b034 = load i8, i8* %v2_b034, align 1
  %v1_b038 = and i8 %v3_b034, -16
  %v1_b03c = or i8 %v1_b038, 5
  store i8 %v1_b03c, i8* %v2_b034, align 1
  %v0_b044 = load i32, i32* %r1.global-to-local, align 4
  %v1_b044 = load i32, i32* %r4.global-to-local, align 4
  %v2_b044 = add i32 %v1_b044, 16
  %v3_b044 = inttoptr i32 %v2_b044 to i32*
  store i32 %v0_b044, i32* %v3_b044, align 4
  store i32 %v4_afd4, i32* %r1.global-to-local, align 4
  %v0_b04c = load i32, i32* %r4.global-to-local, align 4
  %v1_b04c = add i32 %v0_b04c, 24
  store i32 %v1_b04c, i32* @r5, align 4
  %v3_b050 = add i32 %v0_b04c, 25
  %v4_b050 = inttoptr i32 %v3_b050 to i8*
  store i8 %v5_ad58, i8* %v4_b050, align 1
  store i32 %v4_b054, i32* %r2.global-to-local, align 4
  %v0_b058 = load i32, i32* @r8, align 4
  %v1_b058 = trunc i32 %v0_b058 to i16
  %v2_b058 = load i32, i32* @r5, align 4
  %v3_b058 = add i32 %v2_b058, 2
  %v4_b058 = inttoptr i32 %v3_b058 to i16*
  store i16 %v1_b058, i16* %v4_b058, align 2
  %v0_b05c = load i32, i32* %r2.global-to-local, align 4
  %v1_b05c = trunc i32 %v0_b05c to i16
  %v2_b05c = load i32, i32* @r5, align 4
  %v3_b05c = add i32 %v2_b05c, 4
  %v4_b05c = inttoptr i32 %v3_b05c to i16*
  store i16 %v1_b05c, i16* %v4_b05c, align 2
  store i32 %v1_ad7c, i32* %r3.global-to-local, align 4
  %v0_b064 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b064, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_b068 = load i32, i32* @r5, align 4
  %v3_b068 = add i32 %v2_b068, 8
  %v4_b068 = inttoptr i32 %v3_b068 to i8*
  store i8 %v1_afe0, i8* %v4_b068, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b070 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b070, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b070 = load i32, i32* %ip.global-to-local, align 4
  %v2_b070 = trunc i32 %v1_b070 to i16
  %v3_b070 = load i32, i32* @r5, align 4
  %v4_b070 = add i32 %v3_b070, 6
  %v5_b070 = inttoptr i32 %v4_b070 to i16*
  store i16 %v2_b070, i16* %v5_b070, align 2
  %v0_b074.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_b074.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b074.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_b074 = load i32, i32* @r5, align 4
  %v3_b074 = add i32 %v2_b074, 9
  %v4_b074 = inttoptr i32 %v3_b074 to i8*
  store i8 %v0_b074.off0, i8* %v4_b074, align 1
  %v0_b078 = call i32 @function_f190()
  store i32 %v1_aeb8, i32* @lr, align 4
  store i1 %v2_b084, i1* %cpsr_z.global-to-local, align 1
  %v1_b088 = sub i32 1023, %v0_b078
  store i32 %v1_b088, i32* %r3.global-to-local, align 4
  br i1 %v2_b084, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_b090 = load i32, i32* @r5, align 4
  %v3_b090 = add i32 %v2_b090, 16
  %v4_b090 = inttoptr i32 %v3_b090 to i32*
  store i32 %v1_b088, i32* %v4_b090, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_b08c = load i32, i32* %r4.global-to-local, align 4
  %v2_b08c = add i32 %v1_b08c, 16
  %v3_b08c = inttoptr i32 %v2_b08c to i32*
  %v4_b08c = load i32, i32* %v3_b08c, align 4
  store i32 %v4_b08c, i32* %r3.global-to-local, align 4
  %v2_b094 = load i32, i32* @r5, align 4
  %v3_b094 = add i32 %v2_b094, 16
  %v4_b094 = inttoptr i32 %v3_b094 to i32*
  store i32 %v4_b08c, i32* %v4_b094, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_b098 = load i32, i32* @r5, align 4
  %v2_b098 = add i32 %v1_b098, 12
  %v3_b098 = inttoptr i32 %v2_b098 to i32*
  store i32 %v0_b078, i32* %v3_b098, align 4
  %v3_b09c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_b0a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b0a4 = add i32 %v0_b0a4, 44
  store i32 %v1_b0a4, i32* @r6, align 4
  store i32 %v4_b0a8, i32* %r2.global-to-local, align 4
  %v1_b0ac = add i32 %v3_b09c, 1
  store i32 %v1_b0ac, i32* @r4, align 4
  store i32 %v4_b0b0, i32* %r3.global-to-local, align 4
  %v9_b0b4 = icmp eq i32 %v1_b0ac, %arg2
  store i1 %v9_b0b4, i1* %cpsr_z.global-to-local, align 1
  %v0_b0b8 = load i32, i32* @r7, align 4
  %v1_b0b8 = trunc i32 %v0_b0b8 to i16
  %v3_b0b8 = add i32 %v0_b0a4, 48
  %v4_b0b8 = inttoptr i32 %v3_b0b8 to i16*
  store i16 %v1_b0b8, i16* %v4_b0b8, align 2
  %v0_b0bc = load i32, i32* %r2.global-to-local, align 4
  %v1_b0bc = trunc i32 %v0_b0bc to i16
  %v2_b0bc = load i32, i32* @r6, align 4
  %v3_b0bc = inttoptr i32 %v2_b0bc to i16*
  store i16 %v1_b0bc, i16* %v3_b0bc, align 2
  %v0_b0c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0c0 = trunc i32 %v0_b0c0 to i16
  %v2_b0c0 = load i32, i32* @r6, align 4
  %v3_b0c0 = add i32 %v2_b0c0, 2
  %v4_b0c0 = inttoptr i32 %v3_b0c0 to i16*
  store i16 %v1_b0c0, i16* %v4_b0c0, align 2
  %v0_b0c4 = load i32, i32* @r4, align 4
  store i32 %v0_b0c4, i32* %stack_var_-44, align 4
  %v5_b0c8 = icmp slt i32 %v1_b0ac, %arg2
  br i1 %v5_b0c8, label %dec_label_pc_af84, label %dec_label_pc_b0cc.preheader

dec_label_pc_b0cc.preheader:                      ; preds = %bb82, %dec_label_pc_ae9c
  %v1_b0e8 = add i32 %v5_adec, 8
  %v1_b0ec = add i32 %v5_adec, 52
  %v2_b0f8 = icmp eq i32 %v5_ae40, -1
  %v7_b0f8 = icmp eq i32 %v5_ae40, -1
  %v2_b2dc = icmp eq i32 %v1_aeb8, 0
  %v2_b2f8 = icmp eq i32 %v1_ae0c, 0
  br label %dec_label_pc_b0cc

dec_label_pc_b0cc:                                ; preds = %dec_label_pc_b0cc.preheader, %dec_label_pc_b324
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_aec4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aec4, label %dec_label_pc_b324, label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b0cc
  store i32 %v5_adec, i32* %lr.global-to-local, align 4
  store i32 %v1_b0e8, i32* @sb, align 4
  store i32 %v1_b0ec, i32* @r8, align 4
  br label %dec_label_pc_b1f8

dec_label_pc_b0f4:                                ; preds = %dec_label_pc_b1f8
  store i32 %v5_ae40, i32* %r2.global-to-local, align 4
  store i1 %v7_b0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b0f8, label %dec_label_pc_b280, label %dec_label_pc_b100

dec_label_pc_b100:                                ; preds = %dec_label_pc_b220, %dec_label_pc_b0f4
  store i32 65535, i32* @r4, align 4
  %v0_b108 = load i32, i32* @fp, align 4
  %v9_b108 = icmp eq i32 %v0_b108, 65535
  store i1 %v9_b108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b108, label %dec_label_pc_b298, label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b280.dec_label_pc_b110_crit_edge, %dec_label_pc_b100
  %v1_b114 = phi i32 [ %v1_b114.pre, %dec_label_pc_b280.dec_label_pc_b110_crit_edge ], [ 65535, %dec_label_pc_b100 ]
  store i32 %v3_aebc, i32* %r3.global-to-local, align 4
  %v9_b114 = icmp eq i32 %v3_aebc, %v1_b114
  store i1 %v9_b114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b114, label %dec_label_pc_b2c0, label %dec_label_pc_b11c

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b298, %dec_label_pc_b110
  %v1_b120 = phi i32 [ %v1_b2b8, %dec_label_pc_b298 ], [ %v1_b114, %dec_label_pc_b110 ]
  store i32 %v3_aec0, i32* %ip.global-to-local, align 4
  %v9_b120 = icmp eq i32 %v3_aec0, %v1_b120
  store i1 %v9_b120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b120, label %dec_label_pc_b2d4, label %dec_label_pc_b128

dec_label_pc_b128:                                ; preds = %dec_label_pc_b2c0, %dec_label_pc_b11c
  store i32 %v1_aeb8, i32* @lr, align 4
  store i1 %v2_b2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2dc, label %dec_label_pc_b2f0, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_b128
  %v1_b130 = load i32, i32* @r5, align 4
  %v2_b130 = add i32 %v1_b130, 16
  %v3_b130 = inttoptr i32 %v2_b130 to i32*
  %v4_b130 = load i32, i32* %v3_b130, align 4
  store i32 %v4_b130, i32* %r3.global-to-local, align 4
  %v2_b134 = load i32, i32* @r6, align 4
  %v3_b134 = add i32 %v2_b134, 16
  %v4_b134 = inttoptr i32 %v3_b134 to i32*
  store i32 %v4_b130, i32* %v4_b134, align 4
  br label %dec_label_pc_b13c

dec_label_pc_b13c:                                ; preds = %bb85, %.thread14
  store i32 %v1_ae0c, i32* %r1.global-to-local, align 4
  store i1 %v2_b2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2f8, label %dec_label_pc_b148, label %dec_label_pc_b304

dec_label_pc_b148:                                ; preds = %dec_label_pc_b13c, %dec_label_pc_b2f0, %dec_label_pc_b304
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b14c = load i32, i32* @r5, align 4
  %v3_b14c = add i32 %v2_b14c, 10
  %v4_b14c = inttoptr i32 %v3_b14c to i16*
  store i16 0, i16* %v4_b14c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b154 = load i32, i32* @r5, align 4
  store i32 %v0_b154, i32* @r0, align 4
  %v2_b158 = call i32 @function_dd58(i32 %v0_b154, i32 20)
  %v3_b158 = trunc i32 %v2_b158 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_b160 = load i32, i32* @r5, align 4
  %v4_b160 = add i32 %v3_b160, 10
  %v5_b160 = inttoptr i32 %v4_b160 to i16*
  store i16 %v3_b158, i16* %v5_b160, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b168 = load i32, i32* %ip.global-to-local, align 4
  %v1_b168 = trunc i32 %v0_b168 to i16
  %v2_b168 = load i32, i32* @r6, align 4
  %v3_b168 = add i32 %v2_b168, 10
  %v4_b168 = inttoptr i32 %v3_b168 to i16*
  store i16 %v1_b168, i16* %v4_b168, align 2
  %v0_b16c = load i32, i32* @r6, align 4
  store i32 %v0_b16c, i32* @r0, align 4
  %v2_b170 = call i32 @function_dd58(i32 %v0_b16c, i32 20)
  %v3_b170 = trunc i32 %v2_b170 to i16
  %v3_b174 = load i32, i32* @r6, align 4
  %v4_b174 = add i32 %v3_b174, 10
  %v5_b174 = inttoptr i32 %v4_b174 to i16*
  store i16 %v3_b170, i16* %v5_b174, align 2
  %v2_b17c = load i32, i32* @r7, align 4
  %v3_b17c = add i32 %v2_b17c, 6
  %v4_b17c = inttoptr i32 %v3_b17c to i16*
  store i16 0, i16* %v4_b17c, align 2
  %v0_b180 = load i32, i32* @r7, align 4
  store i32 %v0_b180, i32* @r1, align 4
  %v1_b184 = add i32 %v0_b180, 4
  %v2_b184 = inttoptr i32 %v1_b184 to i16*
  %v3_b184 = load i16, i16* %v2_b184, align 2
  %v4_b184 = zext i16 %v3_b184 to i32
  store i32 %v4_b184, i32* %r2.global-to-local, align 4
  %v0_b188 = load i32, i32* @sb, align 4
  store i32 %v0_b188, i32* %r3.global-to-local, align 4
  %v0_b18c = load i32, i32* @r6, align 4
  %v4_b190 = call i32 @function_dda8(i32 %v0_b18c, i32 %v0_b180, i32 %v4_b184, i32 %v0_b188)
  %v5_b190 = trunc i32 %v4_b190 to i16
  %v3_b194 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b194, i32* %r2.global-to-local, align 4
  %v3_b198 = mul i32 %v3_b194, 32
  store i32 %v3_b198, i32* %r3.global-to-local, align 4
  %v0_b19c = load i32, i32* @r5, align 4
  %v1_b19c = add i32 %v0_b19c, 16
  %v2_b19c = inttoptr i32 %v1_b19c to i32*
  %v3_b19c = load i32, i32* %v2_b19c, align 4
  %v5_b1a0 = mul i32 %v3_b194, 24
  store i32 %v5_b1a0, i32* %r3.global-to-local, align 4
  %v1_b1a4 = load i32, i32* @sl, align 4
  %v2_b1a4 = add i32 %v1_b1a4, %v5_b1a0
  store i32 %v2_b1a4, i32* @lr, align 4
  %v2_b1a8 = add i32 %v2_b1a4, 4
  %v3_b1a8 = inttoptr i32 %v2_b1a8 to i32*
  store i32 %v3_b19c, i32* %v3_b1a8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b1b4 = load i32, i32* @r7, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 6
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v5_b190, i16* %v5_b1b4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b1bc = load i32, i32* %r1.global-to-local, align 4
  %v1_b1bc = trunc i32 %v0_b1bc to i16
  %v2_b1bc = load i32, i32* %r3.global-to-local, align 4
  %v3_b1bc = load i32, i32* @sl, align 4
  %v4_b1bc = add i32 %v3_b1bc, %v2_b1bc
  %v5_b1bc = inttoptr i32 %v4_b1bc to i16*
  store i16 %v1_b1bc, i16* %v5_b1bc, align 2
  %v0_b1c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b1c0 = trunc i32 %v0_b1c0 to i16
  %v2_b1c0 = load i32, i32* @lr, align 4
  %v3_b1c0 = add i32 %v2_b1c0, 2
  %v4_b1c0 = inttoptr i32 %v3_b1c0 to i16*
  store i16 %v1_b1c0, i16* %v4_b1c0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @r5, align 4
  store i32 %v0_b1c8, i32* %r1.global-to-local, align 4
  %v0_b1d0 = load i32, i32* @r8, align 4
  store i32 %v0_b1d0, i32* %r2.global-to-local, align 4
  %v0_b1d4 = load i32, i32* @lr, align 4
  %v0_b1d8 = load i32, i32* %ip.global-to-local, align 4
  %v6_b1dc = call i32 @function_13840(i32 %v3_ae64, i32 %v0_b1c8, i32 %v0_b1d0, i32 16384, i32 %v0_b1d4, i32 %v0_b1d8)
  %v3_b1e0 = load i32, i32* %stack_var_-44, align 4
  %v1_b1e4 = add i32 %v3_b1e0, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_b1ec = icmp eq i32 %v1_b1e4, %arg2
  store i1 %v9_b1ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b1e4, i32* %stack_var_-44, align 4
  %v6_b1f4 = icmp slt i32 %v1_b1e4, %arg2
  br i1 %v6_b1f4, label %dec_label_pc_b1f8, label %dec_label_pc_b324

dec_label_pc_b1f8:                                ; preds = %dec_label_pc_b148, %dec_label_pc_b0e0
  %v1_b20c = phi i32 [ %v1_b1e4, %dec_label_pc_b148 ], [ 0, %dec_label_pc_b0e0 ]
  %v5_b1fc = mul i32 %v1_b20c, 24
  %v1_b200 = load i32, i32* @sl, align 4
  %v2_b200 = add i32 %v1_b200, %v5_b1fc
  store i32 %v2_b200, i32* %r3.global-to-local, align 4
  store i32 %v2_ad20, i32* %r1.global-to-local, align 4
  %v1_b208 = add i32 %v2_b200, 20
  %v2_b208 = inttoptr i32 %v1_b208 to i8*
  %v3_b208 = load i8, i8* %v2_b208, align 1
  %v4_b208 = zext i8 %v3_b208 to i32
  store i32 %v4_b208, i32* %r2.global-to-local, align 4
  %v4_b20c = mul i32 %v1_b20c, 4
  %v5_b20c = add i32 %v4_b20c, %v2_ad20
  %v6_b20c = inttoptr i32 %v5_b20c to i32*
  %v7_b20c = load i32, i32* %v6_b20c, align 4
  store i32 %v7_b20c, i32* @r5, align 4
  %v2_b210 = icmp ugt i8 %v3_b208, 30
  %v7_b210 = icmp eq i8 %v3_b208, 31
  store i1 %v7_b210, i1* %cpsr_z.global-to-local, align 1
  %v1_b214 = add i32 %v7_b20c, 24
  store i32 %v1_b214, i32* @r6, align 4
  %v1_b218 = add i32 %v7_b20c, 44
  store i32 %v1_b218, i32* @r7, align 4
  %v2_b21c = xor i1 %v7_b210, true
  %v3_b21c = and i1 %v2_b210, %v2_b21c
  br i1 %v3_b21c, label %dec_label_pc_b0f4, label %dec_label_pc_b220

dec_label_pc_b220:                                ; preds = %dec_label_pc_b1f8
  %v1_b220 = add i32 %v2_b200, 16
  %v2_b220 = inttoptr i32 %v1_b220 to i32*
  %v3_b220 = load i32, i32* %v2_b220, align 4
  store i32 %v3_b220, i32* %r4.global-to-local, align 4
  %v0_b224 = call i32 @function_f190()
  %v3_b228 = load i32, i32* %stack_var_-44, align 4
  %v5_b230 = mul i32 %v3_b228, 24
  %v1_b234 = and i32 %v3_b220, 16711680
  store i32 %v1_b234, i32* %ip.global-to-local, align 4
  %v3_b238 = udiv i32 %v3_b220, 16777216
  %v4_b23c = udiv i32 %v1_b234, 256
  %v5_b23c = or i32 %v4_b23c, %v3_b238
  store i32 %v5_b23c, i32* %r2.global-to-local, align 4
  %v1_b240 = load i32, i32* @sl, align 4
  %v2_b240 = add i32 %v1_b240, %v5_b230
  store i32 %v2_b240, i32* %r1.global-to-local, align 4
  %v1_b244 = and i32 %v3_b220, 65280
  store i32 %v1_b244, i32* %r3.global-to-local, align 4
  %v1_b248 = add i32 %v2_b240, 20
  %v2_b248 = inttoptr i32 %v1_b248 to i8*
  %v3_b248 = load i8, i8* %v2_b248, align 1
  %v4_b248 = zext i8 %v3_b248 to i32
  store i32 %v4_b248, i32* %ip.global-to-local, align 4
  %v5_b250 = call i32 @llvm.bswap.i32(i32 %v3_b220)
  %v7_b254 = lshr i32 %v0_b224, %v4_b248
  %v8_b254 = add i32 %v7_b254, %v5_b250
  %v1_b260 = and i32 %v8_b254, 65280
  store i32 %v1_b260, i32* %r1.global-to-local, align 4
  %v5_b26c = call i32 @llvm.bswap.i32(i32 %v8_b254)
  store i32 %v5_b26c, i32* %r3.global-to-local, align 4
  store i32 %v5_ae40, i32* %r2.global-to-local, align 4
  store i1 %v7_b0f8, i1* %cpsr_z.global-to-local, align 1
  %v1_b278 = load i32, i32* @r5, align 4
  %v2_b278 = add i32 %v1_b278, 16
  %v3_b278 = inttoptr i32 %v2_b278 to i32*
  store i32 %v5_b26c, i32* %v3_b278, align 4
  br i1 %v2_b0f8, label %dec_label_pc_b280, label %dec_label_pc_b100

dec_label_pc_b280:                                ; preds = %dec_label_pc_b220, %dec_label_pc_b0f4
  %v0_b280 = call i32 @function_f190()
  store i32 65535, i32* @r4, align 4
  %v0_b28c = load i32, i32* @fp, align 4
  %v9_b28c = icmp eq i32 %v0_b28c, 65535
  store i1 %v9_b28c, i1* %cpsr_z.global-to-local, align 1
  %v1_b290 = load i32, i32* @r5, align 4
  %v2_b290 = add i32 %v1_b290, 12
  %v3_b290 = inttoptr i32 %v2_b290 to i32*
  store i32 %v0_b280, i32* %v3_b290, align 4
  br i1 %v9_b28c, label %dec_label_pc_b298, label %dec_label_pc_b280.dec_label_pc_b110_crit_edge

dec_label_pc_b280.dec_label_pc_b110_crit_edge:    ; preds = %dec_label_pc_b280
  %v1_b114.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b110

dec_label_pc_b298:                                ; preds = %dec_label_pc_b280, %dec_label_pc_b100
  %v0_b298 = call i32 @function_f190()
  %v3_b2a0 = urem i32 %v0_b298, 65536
  %v1_b2a8 = sub nsw i32 999, %v3_b2a0
  store i32 %v1_b2a8, i32* %r3.global-to-local, align 4
  %v1_b2ac = trunc i32 %v0_b298 to i16
  %v2_b2ac = load i32, i32* @r5, align 4
  %v3_b2ac = add i32 %v2_b2ac, 4
  %v4_b2ac = inttoptr i32 %v3_b2ac to i16*
  store i16 %v1_b2ac, i16* %v4_b2ac, align 2
  %v0_b2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2b0 = trunc i32 %v0_b2b0 to i16
  %v2_b2b0 = load i32, i32* @r6, align 4
  %v3_b2b0 = add i32 %v2_b2b0, 4
  %v4_b2b0 = inttoptr i32 %v3_b2b0 to i16*
  store i16 %v1_b2b0, i16* %v4_b2b0, align 2
  store i32 %v3_aebc, i32* %r3.global-to-local, align 4
  %v1_b2b8 = load i32, i32* @r4, align 4
  %v9_b2b8 = icmp eq i32 %v3_aebc, %v1_b2b8
  store i1 %v9_b2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2b8, label %dec_label_pc_b2c0, label %dec_label_pc_b11c

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b298, %dec_label_pc_b110
  %v0_b2c0 = call i32 @function_f190()
  %v1_b2c0 = trunc i32 %v0_b2c0 to i16
  store i32 %v3_aec0, i32* %ip.global-to-local, align 4
  %v1_b2c8 = load i32, i32* @r4, align 4
  %v9_b2c8 = icmp eq i32 %v3_aec0, %v1_b2c8
  store i1 %v9_b2c8, i1* %cpsr_z.global-to-local, align 1
  %v3_b2cc = load i32, i32* @r5, align 4
  %v4_b2cc = add i32 %v3_b2cc, 44
  %v5_b2cc = inttoptr i32 %v4_b2cc to i16*
  store i16 %v1_b2c0, i16* %v5_b2cc, align 2
  br i1 %v9_b2c8, label %dec_label_pc_b2d4, label %dec_label_pc_b128

dec_label_pc_b2d4:                                ; preds = %dec_label_pc_b2c0, %dec_label_pc_b11c
  %v0_b2d4 = call i32 @function_f190()
  %v1_b2d4 = trunc i32 %v0_b2d4 to i16
  store i32 %v1_aeb8, i32* @lr, align 4
  store i1 %v2_b2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2dc, label %.thread29, label %bb85

.thread29:                                        ; preds = %dec_label_pc_b2d4
  %v3_b2e430 = load i32, i32* @r7, align 4
  %v4_b2e431 = add i32 %v3_b2e430, 2
  %v5_b2e432 = inttoptr i32 %v4_b2e431 to i16*
  store i16 %v1_b2d4, i16* %v5_b2e432, align 2
  br label %dec_label_pc_b2f0

bb85:                                             ; preds = %dec_label_pc_b2d4
  %v1_b2e0 = load i32, i32* @r5, align 4
  %v2_b2e0 = add i32 %v1_b2e0, 16
  %v3_b2e0 = inttoptr i32 %v2_b2e0 to i32*
  %v4_b2e0 = load i32, i32* %v3_b2e0, align 4
  store i32 %v4_b2e0, i32* %r3.global-to-local, align 4
  %v3_b2e4 = load i32, i32* @r7, align 4
  %v4_b2e4 = add i32 %v3_b2e4, 2
  %v5_b2e4 = inttoptr i32 %v4_b2e4 to i16*
  store i16 %v1_b2d4, i16* %v5_b2e4, align 2
  %v1_b2e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b2e8 = load i32, i32* @r6, align 4
  %v3_b2e8 = add i32 %v2_b2e8, 16
  %v4_b2e8 = inttoptr i32 %v3_b2e8 to i32*
  store i32 %v1_b2e8, i32* %v4_b2e8, align 4
  br label %dec_label_pc_b13c

dec_label_pc_b2f0:                                ; preds = %.thread29, %dec_label_pc_b128
  %v0_b2f0 = call i32 @function_f190()
  store i32 %v1_ae0c, i32* %r1.global-to-local, align 4
  store i1 %v2_b2f8, i1* %cpsr_z.global-to-local, align 1
  %v1_b2fc = load i32, i32* @r6, align 4
  %v2_b2fc = add i32 %v1_b2fc, 16
  %v3_b2fc = inttoptr i32 %v2_b2fc to i32*
  store i32 %v0_b2f0, i32* %v3_b2fc, align 4
  br i1 %v2_b2f8, label %dec_label_pc_b148, label %dec_label_pc_b304

dec_label_pc_b304:                                ; preds = %dec_label_pc_b13c, %dec_label_pc_b2f0
  %v0_b304 = load i32, i32* @r7, align 4
  %v1_b304 = add i32 %v0_b304, 8
  store i32 %v1_b304, i32* @r4, align 4
  store i32 %v5_adec, i32* %r1.global-to-local, align 4
  %v2_b310 = call i32 @function_f254(i32 %v1_b304, i32 %v5_adec)
  store i32 %v5_adec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b31c = load i32, i32* @r4, align 4
  %v4_b31c = add i32 %v2_b31c, %v5_adec
  %v5_b31c = inttoptr i32 %v4_b31c to i8*
  store i8 0, i8* %v5_b31c, align 1
  br label %dec_label_pc_b148

dec_label_pc_b324:                                ; preds = %dec_label_pc_b148, %dec_label_pc_b0cc
  %v2_b328 = call i32 @function_12d34(i32* null)
  store i32 %v2_ae50, i32* %ip.global-to-local, align 4
  %v9_b330 = icmp eq i32 %v2_ae50, %v2_b328
  store i1 %v9_b330, i1* %cpsr_z.global-to-local, align 1
  %v6_b334 = icmp slt i32 %v2_ae50, %v2_b328
  br i1 %v6_b334, label %dec_label_pc_b338, label %dec_label_pc_b0cc

dec_label_pc_b338:                                ; preds = %dec_label_pc_b324, %dec_label_pc_acf4, %dec_label_pc_b344
  %v1_b340 = phi i32 [ %v3_ae64, %dec_label_pc_acf4 ], [ %v1_b348, %dec_label_pc_b344 ], [ %v2_b328, %dec_label_pc_b324 ]
  store i32 %v3_acf4, i32* %r4.global-to-local, align 4
  store i32 %v24_acf4, i32* %fp.global-to-local, align 4
  store i32 %v27_acf4, i32* %lr.global-to-local, align 4
  ret i32 %v1_b340

dec_label_pc_b344:                                ; preds = %dec_label_pc_ae74
  %v1_b348 = call i32 @function_130b4(i32 %v3_ae64)
  br label %dec_label_pc_b338

; uselistorder directives
  uselistorder i16 %v1_b2d4, { 1, 0 }
  uselistorder i32 %v1_b2b8, { 1, 0 }
  uselistorder i32 %v0_b298, { 1, 0 }
  uselistorder i32 %v5_b26c, { 1, 0 }
  uselistorder i32 %v3_b220, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_b20c, { 1, 0, 2 }
  uselistorder i32 %v1_b1e4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b194, { 1, 0, 2 }
  uselistorder i1 %v2_b2f8, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b2dc, { 2, 3, 1, 0 }
  uselistorder i1 %v7_b0f8, { 2, 1, 0 }
  uselistorder i32 %v0_b078, { 1, 0 }
  uselistorder i32 %v1_af00, { 1, 0 }
  uselistorder i32 %v3_aeec, { 2, 1, 0 }
  uselistorder i1 %v2_aec4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_aeb8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_aeb4, { 1, 0 }
  uselistorder i32 %v0_aeb0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ae9c, { 2, 0, 1, 3 }
  uselistorder i1 %v7_ae94, { 1, 0 }
  uselistorder i1 %v7_ae68, { 1, 0 }
  uselistorder i32 %v3_ae64, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_ae50, { 2, 1, 0 }
  uselistorder i32 %v5_ae40, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_ae0c, { 2, 1, 3, 0 }
  uselistorder i32 %v5_adec, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_ada0, { 1, 0 }
  uselistorder i32 %v1_ad7c, { 2, 1, 0 }
  uselistorder i32 %v6_ad74, { 1, 0 }
  uselistorder i32 %v7_ad5c, { 1, 0, 4, 3, 2 }
  uselistorder i8 %v5_ad58, { 0, 2, 1 }
  uselistorder i32 %v6_ad38, { 1, 0 }
  uselistorder i32 %v2_ad20, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 17, 18, 19, 20, 21, 31, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 15, 16, 23, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 17, 18, 25, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 33, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 14, 13, 16, 15, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 2, 3, 4, 5, 6, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 5, 6, 7 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_b338, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b304, { 1, 0 }
  uselistorder label %dec_label_pc_b148, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b0cc, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_b354(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b354:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i8 @__decompiler_undefined_function_4()
  %tmp33 = call i16 @__decompiler_undefined_function_1()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b354 = load i32, i32* @r4, align 4
  %v27_b354 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b380 = call i32 @function_1442c(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_b390 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_b394 = load i32, i32* @r4, align 4
  store i32 %v0_b394, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b3a0 = load i32, i32* @r7, align 4
  store i32 %v0_b3a0, i32* %r3.global-to-local, align 4
  %v0_b3a4 = load i32, i32* @r5, align 4
  store i32 %v0_b3a4, i32* %r0.global-to-local, align 4
  %v5_b3a8 = inttoptr i32 %v0_b394 to i32*
  %v6_b3a8 = call i32 @function_9fe8(i32 %v0_b3a4, i32* %v5_b3a8, i32 2, i32 %v0_b3a0)
  %v1_b3b4 = urem i32 %v6_b3a8, 256
  store i32 %v1_b3b4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b3c0 = load i32, i32* @r4, align 4
  store i32 %v0_b3c0, i32* %r1.global-to-local, align 4
  %v0_b3c4 = load i32, i32* @r5, align 4
  store i32 %v0_b3c4, i32* %r0.global-to-local, align 4
  %v5_b3c8 = trunc i32 %v6_b3a8 to i8
  %v6_b3cc = inttoptr i32 %v0_b3c0 to i32*
  %v7_b3cc = call i32 @function_9fe8(i32 %v0_b3c4, i32* %v6_b3cc, i32 3, i32 65535)
  %v0_b3d0 = load i32, i32* @r4, align 4
  store i32 %v0_b3d0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b3cc, i32* @r8, align 4
  %v0_b3e0 = load i32, i32* @r5, align 4
  store i32 %v0_b3e0, i32* %r0.global-to-local, align 4
  %v4_b3e4 = inttoptr i32 %v0_b3d0 to i32*
  %v5_b3e4 = call i32 @function_9fe8(i32 %v0_b3e0, i32* %v4_b3e4, i32 4, i32 64)
  %v1_b3ec = urem i32 %v5_b3e4, 256
  store i32 %v1_b3ec, i32* %ip.global-to-local, align 4
  %v0_b3f0 = load i32, i32* @r4, align 4
  store i32 %v0_b3f0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b3fc = load i32, i32* @r5, align 4
  store i32 %v0_b3fc, i32* %r0.global-to-local, align 4
  %v5_b400 = trunc i32 %v5_b3e4 to i8
  %v6_b404 = inttoptr i32 %v0_b3f0 to i32*
  %v7_b404 = call i32 @function_9fe8(i32 %v0_b3fc, i32* %v6_b404, i32 5, i32 1)
  %v1_b410 = urem i32 %v7_b404, 256
  store i32 %v1_b410, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b418 = load i32, i32* @r4, align 4
  store i32 %v0_b418, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b420 = load i32, i32* @r5, align 4
  store i32 %v0_b420, i32* %r0.global-to-local, align 4
  %v5_b428 = inttoptr i32 %v0_b418 to i32*
  %v6_b428 = call i32 @function_9fe8(i32 %v0_b420, i32* %v5_b428, i32 7, i32 65535)
  %v0_b42c = load i32, i32* @r4, align 4
  store i32 %v0_b42c, i32* %r1.global-to-local, align 4
  %v3_b430 = mul i32 %v6_b428, 65536
  store i32 %v3_b430, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_b438 = load i32, i32* @r7, align 4
  store i32 %v0_b438, i32* %r3.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r0.global-to-local, align 4
  %v3_b440 = urem i32 %v6_b428, 65536
  store i32 %v3_b440, i32* @sb, align 4
  %v4_b444 = inttoptr i32 %v0_b42c to i32*
  %v5_b444 = call i32 @function_9fe8(i32 %v0_b43c, i32* %v4_b444, i32 10, i32 %v0_b438)
  %v1_b44c = urem i32 %v5_b444, 256
  store i32 %v1_b44c, i32* %ip.global-to-local, align 4
  %v0_b450 = load i32, i32* @r4, align 4
  store i32 %v0_b450, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b45c = load i32, i32* @r5, align 4
  store i32 %v0_b45c, i32* %r0.global-to-local, align 4
  %v5_b464 = inttoptr i32 %v0_b450 to i32*
  %v6_b464 = call i32 @function_9fe8(i32 %v0_b45c, i32* %v5_b464, i32 11, i32 1)
  %v1_b46c = urem i32 %v6_b464, 256
  store i32 %v1_b46c, i32* %ip.global-to-local, align 4
  %v0_b470 = load i32, i32* @r4, align 4
  store i32 %v0_b470, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r0.global-to-local, align 4
  %v5_b484 = inttoptr i32 %v0_b470 to i32*
  %v6_b484 = call i32 @function_9fe8(i32 %v0_b47c, i32* %v5_b484, i32 12, i32 1)
  %v1_b48c = urem i32 %v6_b484, 256
  store i32 %v1_b48c, i32* %ip.global-to-local, align 4
  %v0_b490 = load i32, i32* @r4, align 4
  store i32 %v0_b490, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_b498 = load i32, i32* @r7, align 4
  store i32 %v0_b498, i32* %r3.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v5_b4a4 = inttoptr i32 %v0_b490 to i32*
  %v6_b4a4 = call i32 @function_9fe8(i32 %v0_b49c, i32* %v5_b4a4, i32 13, i32 %v0_b498)
  %v1_b4ac = urem i32 %v6_b4a4, 256
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_b4b8 = load i32, i32* @r7, align 4
  store i32 %v0_b4b8, i32* %r3.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r5, align 4
  store i32 %v0_b4bc, i32* %r0.global-to-local, align 4
  %v5_b4c4 = inttoptr i32 %v0_b4b0 to i32*
  %v6_b4c4 = call i32 @function_9fe8(i32 %v0_b4bc, i32* %v5_b4c4, i32 14, i32 %v0_b4b8)
  %v1_b4cc = urem i32 %v6_b4c4, 256
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v0_b4d0 = load i32, i32* @r4, align 4
  store i32 %v0_b4d0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r7, align 4
  store i32 %v0_b4d8, i32* %r3.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r5, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d0 to i32*
  %v6_b4e4 = call i32 @function_9fe8(i32 %v0_b4dc, i32* %v5_b4e4, i32 15, i32 %v0_b4d8)
  %v1_b4ec = urem i32 %v6_b4e4, 256
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_b4f0 = load i32, i32* @r7, align 4
  store i32 %v0_b4f0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b4f8 = load i32, i32* @r4, align 4
  store i32 %v0_b4f8, i32* %r1.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r5, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f8 to i32*
  %v6_b504 = call i32 @function_9fe8(i32 %v0_b4fc, i32* %v5_b504, i32 %v0_b4f0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b510 = load i32, i32* @r4, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  %v0_b518 = load i32, i32* @r5, align 4
  store i32 %v0_b518, i32* %r0.global-to-local, align 4
  %v4_b51c = inttoptr i32 %v0_b510 to i32*
  %v5_b51c = call i32 @function_9fe8(i32 %v0_b518, i32* %v4_b51c, i32 1, i32 1)
  %v1_b524 = urem i32 %v5_b51c, 256
  store i32 %v1_b524, i32* %r3.global-to-local, align 4
  %v0_b528 = load i32, i32* @r7, align 4
  store i32 %v0_b528, i32* %r0.global-to-local, align 4
  %v1_b530 = inttoptr i32 %v0_b528 to i32*
  %v2_b530 = call i32 @function_12d34(i32* %v1_b530)
  %v1_b534 = load i32, i32* @r6, align 4
  %v2_b534 = add i32 %v1_b534, %v2_b530
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b548 = call i32 @function_138c4(i32 2, i32 3, i32 6)
  store i32 %v3_b548, i32* %r0.global-to-local, align 4
  %v7_b54c = icmp eq i32 %v3_b548, -1
  store i32 %v3_b548, i32* @sl, align 4
  br i1 %v7_b54c, label %dec_label_pc_b88c, label %dec_label_pc_b558

dec_label_pc_b558:                                ; preds = %dec_label_pc_b354
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b560 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b560, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 %v0_b568, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b574 = call i32 @function_13880(i32 %v3_b548, i32 %v0_b568, i32 3, i32 %v6_b560, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b574, i32* %r0.global-to-local, align 4
  %v7_b578 = icmp eq i32 %v5_b574, -1
  br i1 %v7_b578, label %dec_label_pc_b884, label %dec_label_pc_b580

dec_label_pc_b580:                                ; preds = %dec_label_pc_b558
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_b584 = load i32, i32* @r8, align 4
  %v3_b588 = urem i32 %v0_b584, 65536
  store i32 %v3_b588, i32* @r3, align 4
  %v2_b58c = icmp eq i32 %arg2, 0
  %v0_b590 = load i32, i32* @r7, align 4
  store i32 %v0_b590, i32* %stack_var_-44, align 4
  %v5_b594 = trunc i32 %v0_b584 to i16
  br i1 %v2_b58c, label %dec_label_pc_b580.dec_label_pc_b728.preheader_crit_edge, label %dec_label_pc_b59c.preheader

dec_label_pc_b580.dec_label_pc_b728.preheader_crit_edge: ; preds = %dec_label_pc_b580
  %.pre = sext i16 %v5_b594 to i32
  %.pre94 = add i32 %v6_b504, 40
  br label %dec_label_pc_b728.preheader

dec_label_pc_b59c.preheader:                      ; preds = %dec_label_pc_b580
  %v2_b5e0 = ptrtoint i32* %stack_var_-160 to i32
  %v2_b628 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b640 = ptrtoint i32* %stack_var_-80 to i32
  %v2_b648 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b64c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b6d4 = zext i8 %tmp32 to i32
  %v1_b6d8 = and i32 %v4_b6d4, 18
  %v2_b6dc = icmp eq i32 %v1_b6d8, 18
  %v1_b98c = add i32 %v6_b504, 40
  %v4_b9cc = sext i16 %v5_b594 to i32
  %v3_b9d8 = udiv i32 %v4_b9cc, 256
  %v1_bab4 = urem i32 %v5_b444, 2
  %tmp95 = sub nsw i32 0, %v1_bab4
  %v4_babc = and i32 %tmp95, 32
  %v1_bae8 = urem i32 %v6_b484, 2
  %tmp96 = sub nsw i32 0, %v1_bae8
  %v4_baf0 = and i32 %tmp96, 8
  %v1_bb34 = urem i32 %v6_b4e4, 2
  %v3_b6c0 = sext i16 %tmp62 to i32
  %v1_b6e4 = and i32 %v4_b6d4, 5
  %v2_b6e4 = icmp eq i32 %v1_b6e4, 0
  %v4_b620 = add i32 %v2_b5e0, 98
  %v5_b620 = inttoptr i32 %v4_b620 to i16*
  %v1_b9d4 = mul nsw i32 %v4_b9cc, 256
  %v4_b9e4 = and i32 %v1_b9d4, 65280
  %v5_b9e4 = or i32 %v4_b9e4, %v3_b9d8
  %v1_bacc = urem i32 %v6_b464, 2
  %tmp97 = sub nsw i32 0, %v1_bacc
  %v4_bad4 = and i32 %tmp97, 16
  %v1_bb00 = urem i32 %v6_b4a4, 2
  %tmp98 = sub nsw i32 0, %v1_bb00
  %v4_bb08 = and i32 %tmp98, 4
  %v1_bb18 = urem i32 %v6_b4c4, 2
  %tmp99 = sub nsw i32 0, %v1_bb18
  %v3_bb20 = and i32 %tmp99, 2
  br label %dec_label_pc_b59c.outer

dec_label_pc_b59c.outer:                          ; preds = %dec_label_pc_b59c.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_b59c.preheader ], [ %v0_ba18, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp33, %dec_label_pc_b59c.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp36, %dec_label_pc_b59c.preheader ], [ %v0_b930, %.thread10 ]
  br label %dec_label_pc_b59c

dec_label_pc_b59c:                                ; preds = %dec_label_pc_b59c.outer, %dec_label_pc_b710
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b710 ], [ %stack_var_-62.0.ph, %dec_label_pc_b59c.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b710 ], [ %stack_var_-60.0.ph, %dec_label_pc_b59c.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b5a8 = call i32 @function_138c4(i32 2, i32 1, i32 0)
  store i32 %v3_b5a8, i32* %r0.global-to-local, align 4
  %v7_b5ac = icmp eq i32 %v3_b5a8, -1
  store i32 %v3_b5a8, i32* @r8, align 4
  br i1 %v7_b5ac, label %dec_label_pc_b710, label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b59c, %dec_label_pc_b6ec
  %v0_b5c0 = phi i32 [ %v3_b700, %dec_label_pc_b6ec ], [ %v3_b5a8, %dec_label_pc_b59c ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b6ec ], [ %stack_var_-62.0, %dec_label_pc_b59c ]
  %stack_var_-60.1 = phi i32 [ %v0_b930, %dec_label_pc_b6ec ], [ %stack_var_-60.0, %dec_label_pc_b59c ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b5c0 = call i32 @function_12ee8(i32 %v0_b5c0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b5c8 = or i32 %v2_b5c0, 2048
  store i32 %v1_b5c8, i32* %r2.global-to-local, align 4
  %v0_b5cc = load i32, i32* @r8, align 4
  store i32 %v0_b5cc, i32* %r0.global-to-local, align 4
  %v2_b5d0 = call i32 @function_12ee8(i32 %v0_b5cc, i32 4)
  store i32 %v2_b5d0, i32* %r0.global-to-local, align 4
  %v3_b5d4 = load i32, i32* %stack_var_-44, align 4
  %v5_b5dc = mul i32 %v3_b5d4, 24
  store i32 %v2_b5e0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_b5ec = load i32, i32* @fp, align 4
  %v2_b5ec = add i32 %v1_b5ec, %v5_b5dc
  store i32 %v2_b5ec, i32* %r3.global-to-local, align 4
  %v1_b5f0 = add i32 %v2_b5ec, 20
  %v2_b5f0 = inttoptr i32 %v1_b5f0 to i8*
  %v3_b5f0 = load i8, i8* %v2_b5f0, align 1
  %v4_b5f0 = zext i8 %v3_b5f0 to i32
  store i32 %v4_b5f0, i32* %r2.global-to-local, align 4
  %v2_b5f4 = icmp ugt i8 %v3_b5f0, 30
  %v7_b5f4 = icmp eq i8 %v3_b5f0, 31
  %v2_b5f8 = xor i1 %v7_b5f4, true
  %v3_b5f8 = and i1 %v2_b5f4, %v2_b5f8
  br i1 %v3_b5f8, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_b5b8
  %v5_b5f8 = add i32 %v2_b5ec, 16
  %v6_b5f8 = inttoptr i32 %v5_b5f8 to i32*
  %v7_b5f8 = load i32, i32* %v6_b5f8, align 4
  store i32 %v7_b5f8, i32* %r3.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_b5b8, %bb
  %v4_b5fc = phi i32 [ %v2_b5ec, %dec_label_pc_b5b8 ], [ %v7_b5f8, %bb ]
  %v4_b5fc.stack_var_-60.1 = select i1 %v3_b5f8, i32 %v4_b5fc, i32 %stack_var_-60.1
  %v2_b600 = xor i1 %v2_b5f4, true
  %v3_b600 = or i1 %v7_b5f4, %v2_b600
  br i1 %v3_b600, label %dec_label_pc_b898, label %dec_label_pc_b604

dec_label_pc_b604:                                ; preds = %bb72, %dec_label_pc_b898
  %v0_b930 = phi i32 [ %v5_b8e4, %dec_label_pc_b898 ], [ %v4_b5fc.stack_var_-60.1, %bb72 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b60c = load i32, i32* @sb, align 4
  %v9_b60c = icmp eq i32 %v0_b60c, 65535
  br i1 %v9_b60c, label %dec_label_pc_b8f0, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_b604
  %v4_b610 = udiv i32 %v0_b60c, 256
  %v2_b614 = urem i32 %v0_b60c, 256
  store i32 %v2_b614, i32* %r2.global-to-local, align 4
  %v5_b618 = mul nuw nsw i32 %v2_b614, 256
  %v6_b618 = or i32 %v5_b618, %v4_b610
  store i32 %v6_b618, i32* %r3.global-to-local, align 4
  store i32 %v2_b5e0, i32* %ip.global-to-local, align 4
  %v2_b620 = trunc i32 %v6_b618 to i16
  store i16 %v2_b620, i16* %v5_b620, align 2
  br label %dec_label_pc_b628

dec_label_pc_b628:                                ; preds = %.thread7, %dec_label_pc_b8f0
  %stack_var_-62.2 = phi i16 [ %v1_b8f0, %dec_label_pc_b8f0 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_b628, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b630 = load i32, i32* @r8, align 4
  store i32 %v0_b630, i32* %r0.global-to-local, align 4
  %v3_b634 = call i32 @function_136ac(i32 %v0_b630, i32 %v2_b628, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b63c = call i32 @function_12d34(i32* null)
  store i32 %v2_b63c, i32* %r0.global-to-local, align 4
  store i32 %v2_b640, i32* @r7, align 4
  store i32 %v2_b63c, i32* @r4, align 4
  store i32 %v2_b648, i32* @r6, align 4
  %v9_b6a0 = icmp eq i32 %tmp34, %v0_b930
  %v4_b6c8 = zext i16 %stack_var_-62.2 to i32
  %v9_b6b4 = icmp eq i1 %v9_b6a0, false
  %v9_b6cc = icmp eq i32 %v3_b6c0, %v4_b6c8
  br label %dec_label_pc_b664

dec_label_pc_b654:                                ; preds = %.thread, %dec_label_pc_b6bc, %dec_label_pc_b6e4, %bb76
  %v2_b654 = call i32 @function_12d34(i32* null)
  %v0_b658 = load i32, i32* @r4, align 4
  %v2_b658 = sub i32 %v2_b654, %v0_b658
  store i32 %v2_b658, i32* %r0.global-to-local, align 4
  %v8_b660 = icmp sgt i32 %v2_b658, 10
  br i1 %v8_b660, label %dec_label_pc_b6ec, label %dec_label_pc_b664

dec_label_pc_b664:                                ; preds = %dec_label_pc_b654, %dec_label_pc_b628
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_b648, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b674 = load i32, i32* @sl, align 4
  store i32 %v0_b674, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_b684 = call i32 @function_137cc(i32 %v0_b674, i32 %v2_b648, i32 256, i32 16384, i32 %v2_b640, i32 %v2_b64c)
  store i32 %v6_b684, i32* %r2.global-to-local, align 4
  %v7_b68c = icmp eq i32 %v6_b684, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b68c, label %dec_label_pc_b88c, label %dec_label_pc_b698

dec_label_pc_b698:                                ; preds = %dec_label_pc_b664
  store i32 %v0_b930, i32* %r1.global-to-local, align 4
  store i32 %tmp34, i32* @r3, align 4
  %tmp100 = icmp ult i32 %v6_b684, 41
  br i1 %tmp100, label %.thread, label %bb76

.thread:                                          ; preds = %dec_label_pc_b698
  br label %dec_label_pc_b654

bb76:                                             ; preds = %dec_label_pc_b698
  br i1 %v9_b6b4, label %dec_label_pc_b654, label %dec_label_pc_b6bc

dec_label_pc_b6bc:                                ; preds = %bb76
  store i32 %v3_b6c0, i32* @lr, align 4
  store i32 %v2_b5e0, i32* @r3, align 4
  store i32 %v4_b6c8, i32* %r2.global-to-local, align 4
  br i1 %v9_b6cc, label %dec_label_pc_b6d4, label %dec_label_pc_b654

dec_label_pc_b6d4:                                ; preds = %dec_label_pc_b6bc
  store i32 %v4_b6d4, i32* %r2.global-to-local, align 4
  store i32 %v1_b6d8, i32* @r3, align 4
  br i1 %v2_b6dc, label %dec_label_pc_b924, label %dec_label_pc_b6e4

dec_label_pc_b6e4:                                ; preds = %dec_label_pc_b6d4
  br i1 %v2_b6e4, label %dec_label_pc_b654, label %dec_label_pc_b6ec

dec_label_pc_b6ec:                                ; preds = %dec_label_pc_b6e4, %dec_label_pc_b654
  %v0_b6ec = load i32, i32* @r8, align 4
  store i32 %v0_b6ec, i32* %r0.global-to-local, align 4
  %v1_b6f0 = call i32 @function_130b4(i32 %v0_b6ec)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b700 = call i32 @function_138c4(i32 2, i32 1, i32 0)
  store i32 %v3_b700, i32* %r0.global-to-local, align 4
  %v3_b704 = icmp eq i32 %v3_b700, -1
  store i32 %v3_b700, i32* @r8, align 4
  br i1 %v3_b704, label %dec_label_pc_b710, label %dec_label_pc_b5b8

dec_label_pc_b710:                                ; preds = %dec_label_pc_b6ec, %dec_label_pc_b59c
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b59c ], [ %stack_var_-62.2, %dec_label_pc_b6ec ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b59c ], [ %v0_b930, %dec_label_pc_b6ec ]
  %v3_b710 = load i32, i32* %stack_var_-44, align 4
  %v1_b718 = add i32 %v3_b710, 1
  store i32 %v1_b718, i32* @r3, align 4
  store i32 %v1_b718, i32* %stack_var_-44, align 4
  %v5_b724 = icmp slt i32 %v1_b718, %arg2
  br i1 %v5_b724, label %dec_label_pc_b59c, label %dec_label_pc_b728.preheader

dec_label_pc_b728.preheader:                      ; preds = %.thread10, %dec_label_pc_b710, %dec_label_pc_b580.dec_label_pc_b728.preheader_crit_edge
  %v1_b760.pre-phi = phi i32 [ %.pre94, %dec_label_pc_b580.dec_label_pc_b728.preheader_crit_edge ], [ %v1_b98c, %dec_label_pc_b710 ], [ %v1_b98c, %.thread10 ]
  %v4_b844.pre-phi = phi i32 [ %.pre, %dec_label_pc_b580.dec_label_pc_b728.preheader_crit_edge ], [ %v4_b9cc, %dec_label_pc_b710 ], [ %v4_b9cc, %.thread10 ]
  %v3_b740 = mul i32 %v6_b504, 65536
  %v1_b744 = add i32 %v3_b740, 1310720
  %tmp78 = udiv i32 %v1_b744, 256
  %v3_b750 = and i32 %tmp78, 65280
  %v2_b85c = icmp eq i32 %v1_b524, 0
  %v4_b754 = udiv i32 %v1_b744, 16777216
  %v5_b754 = or i32 %v3_b750, %v4_b754
  %v1_b75c = add i32 %v6_b504, 20
  br label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b728.preheader, %dec_label_pc_b90c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b58c, label %dec_label_pc_b90c, label %dec_label_pc_b73c

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b728
  store i32 %v1_b744, i32* %r2.global-to-local, align 4
  store i32 %v6_b504, i32* %ip.global-to-local, align 4
  store i32 %v3_b750, i32* %r3.global-to-local, align 4
  store i32 %v5_b754, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b75c, i32* @r8, align 4
  store i32 %v1_b760.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_b858

dec_label_pc_b768:                                ; preds = %dec_label_pc_b858, %dec_label_pc_b864
  %v2_b76c = phi i32 [ %v7_b840, %dec_label_pc_b858 ], [ %v2_b76c.pre, %dec_label_pc_b864 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b76c = add i32 %v2_b76c, 10
  %v4_b76c = inttoptr i32 %v3_b76c to i16*
  store i16 0, i16* %v4_b76c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b774 = load i32, i32* @r5, align 4
  store i32 %v0_b774, i32* @r0, align 4
  %v2_b778 = call i32 @function_dd58(i32 %v0_b774, i32 20)
  %v3_b778 = trunc i32 %v2_b778 to i16
  store i32 %v2_b778, i32* %r0.global-to-local, align 4
  %v3_b77c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b380, i32* %ip.global-to-local, align 4
  %v3_b784 = mul i32 %v3_b77c, 16
  %v2_b788 = add i32 %v3_b784, %v2_b380
  store i32 %v2_b788, i32* %r1.global-to-local, align 4
  %v1_b78c = add i32 %v2_b788, 4
  %v2_b78c = inttoptr i32 %v1_b78c to i32*
  %v3_b78c = load i32, i32* %v2_b78c, align 4
  %v3_b790 = mul i32 %v3_b78c, 65536
  store i32 %v3_b790, i32* %ip.global-to-local, align 4
  %tmp79 = mul i32 %v3_b78c, 256
  %v1_b798 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v3_b78c, 256
  %v4_b79c = urem i32 %tmp80, 256
  %v5_b79c = or i32 %v4_b79c, %v1_b798
  store i32 %v5_b79c, i32* %r3.global-to-local, align 4
  %v1_b7a0 = add i32 %v3_b78c, 1
  store i32 %v1_b7a0, i32* %r2.global-to-local, align 4
  store i32 %v1_b7a0, i32* %v2_b78c, align 4
  %v0_b7a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7a8 = load i32, i32* @r6, align 4
  %v2_b7a8 = add i32 %v1_b7a8, 4
  %v3_b7a8 = inttoptr i32 %v2_b7a8 to i32*
  store i32 %v0_b7a8, i32* %v3_b7a8, align 4
  %v0_b7ac = load i32, i32* %r1.global-to-local, align 4
  %v1_b7ac = add i32 %v0_b7ac, 8
  %v2_b7ac = inttoptr i32 %v1_b7ac to i32*
  %v3_b7ac = load i32, i32* %v2_b7ac, align 4
  %tmp81 = mul i32 %v3_b7ac, 256
  %v1_b7b8 = and i32 %tmp81, 65280
  %tmp82 = udiv i32 %v3_b7ac, 256
  %v4_b7bc = urem i32 %tmp82, 256
  %v5_b7bc = or i32 %v4_b7bc, %v1_b7b8
  store i32 %v5_b7bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_b7c4 = load i32, i32* @r5, align 4
  %v4_b7c4 = add i32 %v3_b7c4, 10
  %v5_b7c4 = inttoptr i32 %v4_b7c4 to i16*
  store i16 %v3_b778, i16* %v5_b7c4, align 2
  %v0_b7c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7c8 = load i32, i32* @r6, align 4
  %v2_b7c8 = add i32 %v1_b7c8, 8
  %v3_b7c8 = inttoptr i32 %v2_b7c8 to i32*
  store i32 %v0_b7c8, i32* %v3_b7c8, align 4
  %v0_b7cc = load i32, i32* @lr, align 4
  %v1_b7cc = trunc i32 %v0_b7cc to i16
  %v2_b7cc = load i32, i32* @r6, align 4
  %v3_b7cc = add i32 %v2_b7cc, 16
  %v4_b7cc = inttoptr i32 %v3_b7cc to i16*
  store i16 %v1_b7cc, i16* %v4_b7cc, align 2
  %v0_b7d0 = load i32, i32* @r6, align 4
  store i32 %v0_b7d0, i32* @r1, align 4
  %v0_b7d4 = load i32, i32* @sb, align 4
  store i32 %v0_b7d4, i32* %r2.global-to-local, align 4
  %v0_b7d8 = load i32, i32* @r8, align 4
  store i32 %v0_b7d8, i32* %r3.global-to-local, align 4
  %v0_b7dc = load i32, i32* @r5, align 4
  store i32 %v0_b7dc, i32* %r0.global-to-local, align 4
  %v4_b7e0 = call i32 @function_dda8(i32 %v0_b7dc, i32 %v0_b7d0, i32 %v0_b7d4, i32 %v0_b7d8)
  %v5_b7e0 = trunc i32 %v4_b7e0 to i16
  store i32 %v4_b7e0, i32* %r0.global-to-local, align 4
  %v3_b7e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b7e4, i32* %r3.global-to-local, align 4
  %v3_b7e8 = mul i32 %v3_b7e4, 32
  store i32 %v3_b7e8, i32* %lr.global-to-local, align 4
  %v3_b7ec = load i32, i32* @r6, align 4
  %v4_b7ec = add i32 %v3_b7ec, 16
  %v5_b7ec = inttoptr i32 %v4_b7ec to i16*
  store i16 %v5_b7e0, i16* %v5_b7ec, align 2
  %v0_b7f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7f0 = load i32, i32* %r3.global-to-local, align 4
  %tmp101 = mul i32 %v1_b7f0, -8
  %v5_b7f0 = add i32 %v0_b7f0, %tmp101
  store i32 %v5_b7f0, i32* %lr.global-to-local, align 4
  %v0_b7f4 = load i32, i32* @r6, align 4
  %v1_b7f4 = add i32 %v0_b7f4, 2
  %v2_b7f4 = inttoptr i32 %v1_b7f4 to i16*
  %v3_b7f4 = load i16, i16* %v2_b7f4, align 2
  %v1_b7f8 = load i32, i32* @fp, align 4
  %v2_b7f8 = add i32 %v1_b7f8, %v5_b7f0
  store i32 %v2_b7f8, i32* @lr, align 4
  %v3_b7fc = add i32 %v2_b7f8, 2
  %v4_b7fc = inttoptr i32 %v3_b7fc to i16*
  store i16 %v3_b7f4, i16* %v4_b7fc, align 2
  %v0_b800 = load i32, i32* @r5, align 4
  store i32 %v0_b800, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b80c = load i32, i32* @sl, align 4
  store i32 %v0_b80c, i32* %r0.global-to-local, align 4
  %v0_b810 = load i32, i32* @r7, align 4
  store i32 %v0_b810, i32* %r2.global-to-local, align 4
  %v0_b814 = load i32, i32* @lr, align 4
  %v6_b81c = call i32 @function_13840(i32 %v0_b80c, i32 %v0_b800, i32 %v0_b810, i32 16384, i32 %v0_b814, i32 16)
  %v3_b820 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b820, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_b828 = add i32 %v3_b820, 1
  store i32 %v1_b828, i32* %r0.global-to-local, align 4
  store i32 %v1_b828, i32* %stack_var_-44, align 4
  %v7_b834 = icmp slt i32 %v1_b828, %arg2
  br i1 %v7_b834, label %dec_label_pc_b858, label %dec_label_pc_b90c

dec_label_pc_b858:                                ; preds = %dec_label_pc_b73c, %dec_label_pc_b768
  %v1_b840 = phi i32 [ %v1_b828, %dec_label_pc_b768 ], [ 0, %dec_label_pc_b73c ]
  store i32 %v2_b390, i32* @lr, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b840 = mul i32 %v1_b840, 4
  %v5_b840 = add i32 %v4_b840, %v2_b390
  %v6_b840 = inttoptr i32 %v5_b840 to i32*
  %v7_b840 = load i32, i32* %v6_b840, align 4
  store i32 %v7_b840, i32* @r5, align 4
  store i32 %v4_b844.pre-phi, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_b850 = add i32 %v7_b840, 20
  store i32 %v1_b850, i32* @r6, align 4
  store i32 %v1_b524, i32* %r1.global-to-local, align 4
  br i1 %v2_b85c, label %dec_label_pc_b768, label %dec_label_pc_b864

dec_label_pc_b864:                                ; preds = %dec_label_pc_b858
  %v1_b864 = add i32 %v7_b840, 40
  store i32 %v1_b864, i32* @r4, align 4
  store i32 %v1_b864, i32* %r0.global-to-local, align 4
  store i32 %v6_b504, i32* %r1.global-to-local, align 4
  %v2_b870 = call i32 @function_f254(i32 %v1_b864, i32 %v6_b504)
  store i32 %v2_b870, i32* %r0.global-to-local, align 4
  store i32 %v6_b504, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b87c = load i32, i32* @r4, align 4
  %v4_b87c = add i32 %v2_b87c, %v6_b504
  %v5_b87c = inttoptr i32 %v4_b87c to i8*
  store i8 0, i8* %v5_b87c, align 1
  %v2_b76c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b768

dec_label_pc_b884:                                ; preds = %dec_label_pc_b558
  %v0_b884 = load i32, i32* @sl, align 4
  store i32 %v0_b884, i32* %r0.global-to-local, align 4
  %v1_b888 = call i32 @function_130b4(i32 %v0_b884)
  store i32 %v1_b888, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b88c

dec_label_pc_b88c:                                ; preds = %dec_label_pc_b664, %dec_label_pc_b90c, %dec_label_pc_b354, %dec_label_pc_b884
  %v1_b894 = phi i32 [ %v3_b548, %dec_label_pc_b354 ], [ %v1_b888, %dec_label_pc_b884 ], [ %v2_b910, %dec_label_pc_b90c ], [ 0, %dec_label_pc_b664 ]
  store i32 %v3_b354, i32* %r4.global-to-local, align 4
  store i32 %v27_b354, i32* %lr.global-to-local, align 4
  ret i32 %v1_b894

dec_label_pc_b898:                                ; preds = %bb72
  %v1_b898 = add i32 %v4_b5fc, 16
  %v2_b898 = inttoptr i32 %v1_b898 to i32*
  %v3_b898 = load i32, i32* %v2_b898, align 4
  store i32 %v3_b898, i32* @r4, align 4
  %v0_b89c = call i32 @function_f190()
  store i32 %v0_b89c, i32* %r0.global-to-local, align 4
  %v3_b8a0 = load i32, i32* %stack_var_-44, align 4
  %v5_b8a8 = mul i32 %v3_b8a0, 24
  %v0_b8ac = load i32, i32* @r4, align 4
  %v1_b8ac = and i32 %v0_b8ac, 16711680
  store i32 %v1_b8ac, i32* %ip.global-to-local, align 4
  %v3_b8b0 = udiv i32 %v0_b8ac, 16777216
  %v4_b8b4 = udiv i32 %v1_b8ac, 256
  %v5_b8b4 = or i32 %v4_b8b4, %v3_b8b0
  store i32 %v5_b8b4, i32* %r2.global-to-local, align 4
  %v1_b8b8 = load i32, i32* @fp, align 4
  %v2_b8b8 = add i32 %v1_b8b8, %v5_b8a8
  store i32 %v2_b8b8, i32* %r1.global-to-local, align 4
  %v1_b8bc = and i32 %v0_b8ac, 65280
  store i32 %v1_b8bc, i32* %r3.global-to-local, align 4
  %v1_b8c0 = add i32 %v2_b8b8, 20
  %v2_b8c0 = inttoptr i32 %v1_b8c0 to i8*
  %v3_b8c0 = load i8, i8* %v2_b8c0, align 1
  %v4_b8c0 = zext i8 %v3_b8c0 to i32
  store i32 %v4_b8c0, i32* %ip.global-to-local, align 4
  %v5_b8c8 = call i32 @llvm.bswap.i32(i32 %v0_b8ac)
  %v7_b8cc = lshr i32 %v0_b89c, %v4_b8c0
  %v8_b8cc = add i32 %v7_b8cc, %v5_b8c8
  store i32 %v8_b8cc, i32* %r2.global-to-local, align 4
  %v1_b8d0 = and i32 %v8_b8cc, 16711680
  store i32 %v1_b8d0, i32* %r0.global-to-local, align 4
  %v1_b8dc = and i32 %v8_b8cc, 65280
  store i32 %v1_b8dc, i32* %r1.global-to-local, align 4
  %v5_b8e4 = call i32 @llvm.bswap.i32(i32 %v8_b8cc)
  store i32 %v5_b8e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b604

dec_label_pc_b8f0:                                ; preds = %dec_label_pc_b604
  %v0_b8f0 = call i32 @function_f190()
  %v1_b8f0 = trunc i32 %v0_b8f0 to i16
  store i32 %v0_b8f0, i32* %r0.global-to-local, align 4
  store i32 %v2_b5e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b628

dec_label_pc_b90c:                                ; preds = %dec_label_pc_b768, %dec_label_pc_b728
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b910 = call i32 @function_12d34(i32* null)
  store i32 %v2_b910, i32* %r0.global-to-local, align 4
  store i32 %v2_b534, i32* %r2.global-to-local, align 4
  %v6_b91c = icmp slt i32 %v2_b534, %v2_b910
  br i1 %v6_b91c, label %dec_label_pc_b88c, label %dec_label_pc_b728

dec_label_pc_b924:                                ; preds = %dec_label_pc_b6d4
  %v3_b924 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b924, i32* @r5, align 4
  store i32 %v2_b380, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_b930 = mul i32 %v3_b924, 16
  %v6_b930 = add i32 %v5_b930, %v2_b380
  %v7_b930 = inttoptr i32 %v6_b930 to i32*
  store i32 %v0_b930, i32* %v7_b930, align 4
  %v0_b934 = load i32, i32* %r0.global-to-local, align 4
  %v1_b934 = add i32 %v0_b934, 4
  %v2_b934 = inttoptr i32 %v1_b934 to i32*
  %v3_b934 = load i32, i32* %v2_b934, align 4
  %v1_b938 = and i32 %v3_b934, 16711680
  store i32 %v1_b938, i32* %r0.global-to-local, align 4
  %v5_b94c = call i32 @llvm.bswap.i32(i32 %v3_b934)
  store i32 %v5_b94c, i32* %r3.global-to-local, align 4
  store i32 %v2_b380, i32* %r1.global-to-local, align 4
  %v0_b954 = load i32, i32* @r5, align 4
  %v3_b954 = mul i32 %v0_b954, 16
  %v2_b958 = add i32 %v3_b954, %v2_b380
  store i32 %v2_b958, i32* %ip.global-to-local, align 4
  %v2_b95c = add i32 %v2_b958, 4
  %v3_b95c = inttoptr i32 %v2_b95c to i32*
  store i32 %v5_b94c, i32* %v3_b95c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_b964 = add i32 %stack_var_-340.0.ph, 8
  %v2_b964 = inttoptr i32 %v1_b964 to i32*
  %v3_b964 = load i32, i32* %v2_b964, align 4
  %v1_b970 = and i32 %v3_b964, 65280
  store i32 %v1_b970, i32* %r2.global-to-local, align 4
  %v5_b97c = call i32 @llvm.bswap.i32(i32 %v3_b964)
  store i32 %v5_b97c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_b504, i32* %r0.global-to-local, align 4
  %v1_b988 = add i32 %stack_var_-340.0.ph, 2
  %v2_b988 = inttoptr i32 %v1_b988 to i16*
  %v3_b988 = load i16, i16* %v2_b988, align 2
  %v4_b988 = zext i16 %v3_b988 to i32
  store i32 %v4_b988, i32* %r1.global-to-local, align 4
  store i32 %v1_b98c, i32* @r4, align 4
  %v2_b990 = load i32, i32* %ip.global-to-local, align 4
  %v3_b990 = add i32 %v2_b990, 12
  %v4_b990 = inttoptr i32 %v3_b990 to i16*
  store i16 %v3_b988, i16* %v4_b990, align 2
  %v0_b994 = load i32, i32* @lr, align 4
  %v1_b994 = trunc i32 %v0_b994 to i16
  %v2_b994 = load i32, i32* %ip.global-to-local, align 4
  %v3_b994 = add i32 %v2_b994, 14
  %v4_b994 = inttoptr i32 %v3_b994 to i16*
  store i16 %v1_b994, i16* %v4_b994, align 2
  %v0_b998 = load i32, i32* %r3.global-to-local, align 4
  %v1_b998 = load i32, i32* %ip.global-to-local, align 4
  %v2_b998 = add i32 %v1_b998, 8
  %v3_b998 = inttoptr i32 %v2_b998 to i32*
  store i32 %v0_b998, i32* %v3_b998, align 4
  %v0_b99c = load i32, i32* @r4, align 4
  store i32 %v0_b99c, i32* @r0, align 4
  %v0_b9a0 = call i32 @function_13b0c()
  store i32 %v0_b9a0, i32* %r0.global-to-local, align 4
  store i32 %v2_b390, i32* %r3.global-to-local, align 4
  %v2_b9ac = load i32, i32* @r5, align 4
  %v5_b9ac = mul i32 %v2_b9ac, 4
  %v6_b9ac = add i32 %v5_b9ac, %v2_b390
  %v7_b9ac = inttoptr i32 %v6_b9ac to i32*
  store i32 %v0_b9a0, i32* %v7_b9ac, align 4
  %v3_b9b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9b0, i32* %r2.global-to-local, align 4
  %v0_b9b4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b9b4 = mul i32 %v3_b9b0, 4
  %v5_b9b4 = add i32 %v0_b9b4, %v4_b9b4
  %v6_b9b4 = inttoptr i32 %v5_b9b4 to i32*
  %v7_b9b4 = load i32, i32* %v6_b9b4, align 4
  store i32 %v7_b9b4, i32* %ip.global-to-local, align 4
  %v1_b9b8 = inttoptr i32 %v7_b9b4 to i8*
  %v2_b9b8 = load i8, i8* %v1_b9b8, align 1
  %tmp102 = urem i8 %v2_b9b8, 16
  %v1_b9bc = zext i8 %tmp102 to i32
  %v1_b9c0 = or i32 %v1_b9bc, 64
  store i32 %v1_b9c0, i32* %r3.global-to-local, align 4
  %v1_b9c4 = trunc i32 %v1_b9c0 to i8
  store i8 %v1_b9c4, i8* %v1_b9b8, align 1
  %v0_b9c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b9c8 = inttoptr i32 %v0_b9c8 to i8*
  %v2_b9c8 = load i8, i8* %v1_b9c8, align 1
  store i32 %v4_b9cc, i32* %lr.global-to-local, align 4
  %v1_b9d0 = and i8 %v2_b9c8, -16
  %v1_b9dc = or i8 %v1_b9d0, 5
  %v0_b9e0 = load i32, i32* @r4, align 4
  %v3_b9e0 = mul i32 %v0_b9e0, 65536
  store i32 %v3_b9e0, i32* %r4.global-to-local, align 4
  store i32 %v5_b9e4, i32* %r1.global-to-local, align 4
  store i32 %v1_b410, i32* %r0.global-to-local, align 4
  store i8 %v1_b9dc, i8* %v1_b9c8, align 1
  %v0_b9f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9f0 = trunc i32 %v0_b9f0 to i16
  %v2_b9f0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9f0 = add i32 %v2_b9f0, 4
  %v4_b9f0 = inttoptr i32 %v3_b9f0 to i16*
  store i16 %v1_b9f0, i16* %v4_b9f0, align 2
  %v0_b9f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b9f4 = udiv i32 %v0_b9f4, 256
  %v1_b9fc = and i32 %v3_b9f4, 65280
  store i32 %v1_b9fc, i32* %r2.global-to-local, align 4
  %v2_ba00 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba00 = add i32 %v2_ba00, 1
  %v4_ba00 = inttoptr i32 %v3_ba00 to i8*
  store i8 %v5_b3c8, i8* %v4_ba00, align 1
  %v0_ba04 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba04 = load i32, i32* %r4.global-to-local, align 4
  %v4_ba04 = udiv i32 %v1_ba04, 16777216
  %v5_ba04 = or i32 %v4_ba04, %v0_ba04
  %v1_ba08 = trunc i32 %v5_ba04 to i16
  %v2_ba08 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba08 = add i32 %v2_ba08, 2
  %v4_ba08 = inttoptr i32 %v3_ba08 to i16*
  store i16 %v1_ba08, i16* %v4_ba08, align 2
  %v0_ba10 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba10 = add i32 %v0_ba10, 20
  store i32 %v1_ba10, i32* %r3.global-to-local, align 4
  %v3_ba14 = add i32 %v0_ba10, 8
  %v4_ba14 = inttoptr i32 %v3_ba14 to i8*
  store i8 %v5_b400, i8* %v4_ba14, align 1
  %v0_ba18 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba20 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba20 = add i32 %v2_ba20, 9
  %v4_ba20 = inttoptr i32 %v3_ba20 to i8*
  store i8 6, i8* %v4_ba20, align 1
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* %r2.global-to-local, align 4
  %v2_ba28 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_ba28, i32* %r1.global-to-local, align 4
  %v1_ba2c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba2c = add i32 %v1_ba2c, 12
  %v3_ba2c = inttoptr i32 %v2_ba2c to i32*
  store i32 %v2_ba28, i32* %v3_ba2c, align 4
  %v0_ba30 = load i32, i32* %r0.global-to-local, align 4
  %v2_ba30 = icmp eq i32 %v0_ba30, 0
  %v3_ba34 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba34, i32* %r3.global-to-local, align 4
  store i32 %v2_b380, i32* %r0.global-to-local, align 4
  br i1 %v2_ba30, label %.thread10, label %bb83

bb83:                                             ; preds = %dec_label_pc_b924
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_ba40 = load i32, i32* %ip.global-to-local, align 4
  %v4_ba40 = add i32 %v3_ba40, 6
  %v5_ba40 = inttoptr i32 %v4_ba40 to i16*
  store i16 64, i16* %v5_ba40, align 2
  %v0_ba44.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_ba44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_b924, %bb83
  %v0_ba48 = phi i32 [ %v3_ba34, %dec_label_pc_b924 ], [ %v1_ba44.pre, %bb83 ]
  %v1_ba4c = phi i32 [ %v2_b380, %dec_label_pc_b924 ], [ %v0_ba44.pre, %bb83 ]
  %v4_ba44 = mul i32 %v0_ba48, 16
  %v5_ba44 = add i32 %v4_ba44, %v1_ba4c
  %v6_ba44 = inttoptr i32 %v5_ba44 to i32*
  %v7_ba44 = load i32, i32* %v6_ba44, align 4
  store i32 %v7_ba44, i32* %r2.global-to-local, align 4
  store i32 %v5_ba44, i32* %r3.global-to-local, align 4
  %v1_ba50 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba50 = add i32 %v1_ba50, 16
  %v3_ba50 = inttoptr i32 %v2_ba50 to i32*
  store i32 %v7_ba44, i32* %v3_ba50, align 4
  %v0_ba54 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba54 = add i32 %v0_ba54, 12
  %v2_ba54 = inttoptr i32 %v1_ba54 to i16*
  %v3_ba54 = load i16, i16* %v2_ba54, align 2
  %v4_ba54 = zext i16 %v3_ba54 to i32
  store i32 %v4_ba54, i32* %r1.global-to-local, align 4
  %v0_ba58 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba58 = add i32 %v0_ba58, 40
  store i32 %v1_ba58, i32* @r4, align 4
  %v3_ba5c = add i32 %v0_ba58, 20
  %v4_ba5c = inttoptr i32 %v3_ba5c to i16*
  store i16 %v3_ba54, i16* %v4_ba5c, align 2
  store i32 %v0_ba18, i32* %ip.global-to-local, align 4
  %v0_ba64 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba64 = add i32 %v0_ba64, 8
  %v2_ba64 = inttoptr i32 %v1_ba64 to i32*
  %v3_ba64 = load i32, i32* %v2_ba64, align 4
  store i32 %v3_ba64, i32* %r1.global-to-local, align 4
  %v2_ba68 = add i32 %v0_ba18, 4
  %v3_ba68 = inttoptr i32 %v2_ba68 to i32*
  store i32 %v3_ba64, i32* %v3_ba68, align 4
  %v0_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v1_ba6c = add i32 %v0_ba6c, 13
  %v2_ba6c = inttoptr i32 %v1_ba6c to i8*
  %v3_ba6c = load i8, i8* %v2_ba6c, align 1
  %v4_ba6c = zext i8 %v3_ba6c to i32
  store i32 %v4_ba6c, i32* %r2.global-to-local, align 4
  %v0_ba70 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba70 = add i32 %v0_ba70, 4
  %v2_ba70 = inttoptr i32 %v1_ba70 to i32*
  %v3_ba70 = load i32, i32* %v2_ba70, align 4
  store i32 %v3_ba70, i32* %r1.global-to-local, align 4
  %v1_ba74 = add i32 %v0_ba70, 14
  %v2_ba74 = inttoptr i32 %v1_ba74 to i16*
  %v3_ba74 = load i16, i16* %v2_ba74, align 2
  %v4_ba74 = zext i16 %v3_ba74 to i32
  store i32 %v4_ba74, i32* %r3.global-to-local, align 4
  %v1_ba78 = or i32 %v4_ba6c, 1
  store i32 %v1_ba78, i32* %r2.global-to-local, align 4
  %v3_ba7c = add i32 %v0_ba6c, 2
  %v4_ba7c = inttoptr i32 %v3_ba7c to i16*
  store i16 %v3_ba74, i16* %v4_ba7c, align 2
  %v0_ba80 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba80 = trunc i32 %v0_ba80 to i8
  %v2_ba80 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba80 = add i32 %v2_ba80, 13
  %v4_ba80 = inttoptr i32 %v3_ba80 to i8*
  store i8 %v1_ba80, i8* %v4_ba80, align 1
  %v0_ba84 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba84 = add i32 %v0_ba84, 12
  %v2_ba84 = inttoptr i32 %v1_ba84 to i8*
  %v3_ba84 = load i8, i8* %v2_ba84, align 1
  %v4_ba84 = zext i8 %v3_ba84 to i32
  store i32 %v4_ba84, i32* %r3.global-to-local, align 4
  %v1_ba88 = add i32 %v0_ba84, 13
  %v2_ba88 = inttoptr i32 %v1_ba88 to i8*
  %v3_ba88 = load i8, i8* %v2_ba88, align 1
  %v4_ba88 = zext i8 %v3_ba88 to i32
  %tmp103 = urem i8 %v3_ba84, 16
  %v1_ba8c = zext i8 %tmp103 to i32
  %v1_ba90 = or i32 %v1_ba8c, 128
  store i32 %v1_ba90, i32* %r3.global-to-local, align 4
  %v1_ba94 = or i32 %v4_ba88, 16
  store i32 %v1_ba94, i32* %r2.global-to-local, align 4
  %v0_ba98 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba98 = add i32 %v0_ba84, 8
  %v3_ba98 = inttoptr i32 %v2_ba98 to i32*
  store i32 %v0_ba98, i32* %v3_ba98, align 4
  %v0_ba9c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba9c = trunc i32 %v0_ba9c to i8
  %v2_ba9c = load i32, i32* %ip.global-to-local, align 4
  %v3_ba9c = add i32 %v2_ba9c, 12
  %v4_ba9c = inttoptr i32 %v3_ba9c to i8*
  store i8 %v1_ba9c, i8* %v4_ba9c, align 1
  %v0_baa0 = load i32, i32* %r2.global-to-local, align 4
  %v1_baa0 = trunc i32 %v0_baa0 to i8
  %v2_baa0 = load i32, i32* %ip.global-to-local, align 4
  %v3_baa0 = add i32 %v2_baa0, 13
  %v4_baa0 = inttoptr i32 %v3_baa0 to i8*
  store i8 %v1_baa0, i8* %v4_baa0, align 1
  %v0_baa4 = call i32 @function_f190()
  %v1_baa4 = trunc i32 %v0_baa4 to i16
  store i32 %v0_baa4, i32* %r0.global-to-local, align 4
  store i32 %v0_ba18, i32* %lr.global-to-local, align 4
  store i32 %v1_b44c, i32* %r1.global-to-local, align 4
  %v1_bab0 = add i32 %v0_ba18, 13
  %v2_bab0 = inttoptr i32 %v1_bab0 to i8*
  %v3_bab0 = load i8, i8* %v2_bab0, align 1
  %v4_bab0 = zext i8 %v3_bab0 to i32
  store i32 %v1_bab4, i32* %r2.global-to-local, align 4
  %v1_bab8 = and i32 %v4_bab0, 223
  %v5_babc = or i32 %v1_bab8, %v4_babc
  store i32 %v5_babc, i32* %r3.global-to-local, align 4
  %v1_bac0 = trunc i32 %v5_babc to i8
  store i8 %v1_bac0, i8* %v2_bab0, align 1
  store i32 %v1_b46c, i32* %ip.global-to-local, align 4
  %v0_bac8 = load i32, i32* %lr.global-to-local, align 4
  %v1_bac8 = add i32 %v0_bac8, 13
  %v2_bac8 = inttoptr i32 %v1_bac8 to i8*
  %v3_bac8 = load i8, i8* %v2_bac8, align 1
  %v4_bac8 = zext i8 %v3_bac8 to i32
  store i32 %v1_bacc, i32* %r3.global-to-local, align 4
  %v1_bad0 = and i32 %v4_bac8, 239
  %v5_bad4 = or i32 %v1_bad0, %v4_bad4
  store i32 %v5_bad4, i32* %r2.global-to-local, align 4
  %v1_bad8 = trunc i32 %v5_bad4 to i8
  store i8 %v1_bad8, i8* %v2_bac8, align 1
  %v0_badc = load i32, i32* %lr.global-to-local, align 4
  %v1_badc = add i32 %v0_badc, 13
  %v2_badc = inttoptr i32 %v1_badc to i8*
  %v3_badc = load i8, i8* %v2_badc, align 1
  %v4_badc = zext i8 %v3_badc to i32
  store i32 %v1_b48c, i32* %lr.global-to-local, align 4
  store i32 %v0_ba18, i32* %r1.global-to-local, align 4
  store i32 %v1_bae8, i32* %r2.global-to-local, align 4
  %v1_baec = and i32 %v4_badc, 247
  %v5_baf0 = or i32 %v1_baec, %v4_baf0
  store i32 %v5_baf0, i32* %r3.global-to-local, align 4
  %v1_baf4 = trunc i32 %v5_baf0 to i8
  store i8 %v1_baf4, i8* %v2_bab0, align 1
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_bafc = load i32, i32* %r1.global-to-local, align 4
  %v1_bafc = add i32 %v0_bafc, 13
  %v2_bafc = inttoptr i32 %v1_bafc to i8*
  %v3_bafc = load i8, i8* %v2_bafc, align 1
  %v4_bafc = zext i8 %v3_bafc to i32
  store i32 %v1_bb00, i32* %r3.global-to-local, align 4
  %v1_bb04 = and i32 %v4_bafc, 251
  %v5_bb08 = or i32 %v1_bb04, %v4_bb08
  store i32 %v5_bb08, i32* %r2.global-to-local, align 4
  %v1_bb0c = trunc i32 %v5_bb08 to i8
  store i8 %v1_bb0c, i8* %v2_bafc, align 1
  store i32 %v1_b4cc, i32* @lr, align 4
  %v0_bb14 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb14 = add i32 %v0_bb14, 13
  %v2_bb14 = inttoptr i32 %v1_bb14 to i8*
  %v3_bb14 = load i8, i8* %v2_bb14, align 1
  %v4_bb14 = zext i8 %v3_bb14 to i32
  store i32 %v1_bb18, i32* %r2.global-to-local, align 4
  %v1_bb1c = and i32 %v4_bb14, 253
  %v4_bb20 = or i32 %v1_bb1c, %v3_bb20
  store i32 %v4_bb20, i32* %r3.global-to-local, align 4
  %v1_bb24 = trunc i32 %v4_bb20 to i8
  store i8 %v1_bb24, i8* %v2_bb14, align 1
  %v0_bb28 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb28 = add i32 %v0_bb28, 13
  %v2_bb28 = inttoptr i32 %v1_bb28 to i8*
  %v3_bb28 = load i8, i8* %v2_bb28, align 1
  %v4_bb28 = zext i8 %v3_bb28 to i32
  %v1_bb30 = and i32 %v4_bb28, 254
  %v2_bb38 = or i32 %v1_bb30, %v1_bb34
  store i32 %v2_bb38, i32* %r3.global-to-local, align 4
  store i32 %v0_ba18, i32* %r2.global-to-local, align 4
  %v1_bb40 = trunc i32 %v2_bb38 to i8
  store i8 %v1_bb40, i8* %v2_bab0, align 1
  %v3_bb44 = load i32, i32* %r2.global-to-local, align 4
  %v4_bb44 = add i32 %v3_bb44, 14
  %v5_bb44 = inttoptr i32 %v4_bb44 to i16*
  store i16 %v1_baa4, i16* %v5_bb44, align 2
  store i32 %v6_b504, i32* %r1.global-to-local, align 4
  %v0_bb4c = load i32, i32* @r4, align 4
  store i32 %v0_bb4c, i32* %r0.global-to-local, align 4
  %v2_bb50 = call i32 @function_f254(i32 %v0_bb4c, i32 %v6_b504)
  store i32 %v2_bb50, i32* %r0.global-to-local, align 4
  store i32 %v6_b504, i32* %ip.global-to-local, align 4
  %v2_bb5c = load i32, i32* @r4, align 4
  %v4_bb5c = add i32 %v2_bb5c, %v6_b504
  %v5_bb5c = inttoptr i32 %v4_bb5c to i8*
  store i8 0, i8* %v5_bb5c, align 1
  %v3_bb60 = load i32, i32* %stack_var_-44, align 4
  %v1_bb68 = add i32 %v3_bb60, 1
  store i32 %v1_bb68, i32* @r3, align 4
  store i32 %v1_bb68, i32* %stack_var_-44, align 4
  %v5_bb74 = icmp slt i32 %v1_bb68, %arg2
  br i1 %v5_bb74, label %dec_label_pc_b59c.outer, label %dec_label_pc_b728.preheader

; uselistorder directives
  uselistorder i32 %v1_bb68, { 1, 0, 2 }
  uselistorder i8* %v2_bab0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_baa4, { 1, 0 }
  uselistorder i32 %v0_ba18, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_b94c, { 1, 0 }
  uselistorder i32 %v2_b910, { 1, 2, 0 }
  uselistorder i32 %v0_b8f0, { 1, 0 }
  uselistorder i32 %v0_b8ac, { 1, 2, 0, 3 }
  uselistorder i32 %v7_b840, { 0, 2, 3, 1 }
  uselistorder i32 %v1_b828, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b7f0, { 1, 0 }
  uselistorder i32 %v4_b7e0, { 1, 0 }
  uselistorder i32 %v3_b7ac, { 1, 0 }
  uselistorder i32 %v3_b78c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b778, { 1, 0 }
  uselistorder i32 %v3_b750, { 1, 0 }
  uselistorder i32 %v1_b744, { 2, 0, 1 }
  uselistorder i32 %v1_b718, { 1, 0, 2 }
  uselistorder i32 %v3_b700, { 0, 2, 3, 1 }
  uselistorder i32 %v4_b6c8, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_b60c, { 1, 0, 2 }
  uselistorder i32 %v0_b930, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_b5fc, { 1, 0 }
  uselistorder i1 %v7_b5f4, { 1, 0 }
  uselistorder i32 %v3_b5a8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_bb18, { 1, 0 }
  uselistorder i32 %v1_bb00, { 1, 0 }
  uselistorder i32 %v1_bacc, { 1, 0 }
  uselistorder i32 %v3_b6c0, { 1, 0 }
  uselistorder i32 %v1_bae8, { 1, 0 }
  uselistorder i32 %v1_bab4, { 1, 0 }
  uselistorder i32 %v4_b9cc, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_b98c, { 2, 0, 1 }
  uselistorder i32 %v1_b6d8, { 1, 0 }
  uselistorder i32 %v4_b6d4, { 2, 0, 1 }
  uselistorder i32 %v2_b5e0, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_b594, { 1, 0 }
  uselistorder i32 %v0_b584, { 1, 0 }
  uselistorder i32 %v3_b548, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_b534, { 1, 0 }
  uselistorder i32 %v1_b524, { 2, 1, 0 }
  uselistorder i32 %v6_b504, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_b4cc, { 1, 0 }
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i32 %v1_b48c, { 1, 0 }
  uselistorder i32 %v1_b46c, { 1, 0 }
  uselistorder i32 %v1_b44c, { 1, 0 }
  uselistorder i32 %v6_b428, { 1, 0 }
  uselistorder i32 %v1_b410, { 1, 0 }
  uselistorder i32 %v5_b3e4, { 1, 0 }
  uselistorder i32 %v6_b3a8, { 1, 0 }
  uselistorder i32 %v2_b390, { 0, 2, 1, 3 }
  uselistorder i32 %v2_b380, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 39, 40, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 48, 47, 49, 51, 50, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 15, 17, 19, 18, 22, 20, 26, 21, 23, 25, 24, 29, 27, 28, 30, 31, 32, 34, 35, 33, 36, 38, 37, 40, 39, 43, 42, 41, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 5, 3, 0, 6, 8, 7, 9, 10, 11 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_b88c, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_b858, { 1, 0 }
  uselistorder label %dec_label_pc_b768, { 1, 0 }
  uselistorder label %dec_label_pc_b728, { 1, 0 }
  uselistorder label %dec_label_pc_b654, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b628, { 1, 0 }
  uselistorder label %dec_label_pc_b604, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_b5b8, { 1, 0 }
  uselistorder label %dec_label_pc_b59c, { 1, 0 }
  uselistorder label %dec_label_pc_b59c.outer, { 1, 0 }
}

define i32 @function_bb80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_bb80:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bb80 = load i32, i32* @sb, align 4
  %v24_bb80 = load i32, i32* @fp, align 4
  %v27_bb80 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bbac = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_bbb0 = load i32, i32* @r4, align 4
  store i32 %v0_bbb0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_bbbc = load i32, i32* @sl, align 4
  store i32 %v0_bbbc, i32* %r3.global-to-local, align 4
  %v0_bbc0 = load i32, i32* @r5, align 4
  store i32 %v0_bbc0, i32* %r0.global-to-local, align 4
  %v5_bbc4 = inttoptr i32 %v0_bbb0 to i32*
  %v6_bbc4 = call i32 @function_9fe8(i32 %v0_bbc0, i32* %v5_bbc4, i32 2, i32 %v0_bbbc)
  %v1_bbd0 = urem i32 %v6_bbc4, 256
  store i32 %v1_bbd0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bbdc = load i32, i32* @r4, align 4
  store i32 %v0_bbdc, i32* %r1.global-to-local, align 4
  %v0_bbe0 = load i32, i32* @r5, align 4
  store i32 %v0_bbe0, i32* %r0.global-to-local, align 4
  %v5_bbe4 = trunc i32 %v6_bbc4 to i8
  %v6_bbe8 = inttoptr i32 %v0_bbdc to i32*
  %v7_bbe8 = call i32 @function_9fe8(i32 %v0_bbe0, i32* %v6_bbe8, i32 3, i32 65535)
  %v0_bbec = load i32, i32* @r4, align 4
  store i32 %v0_bbec, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bbfc = load i32, i32* @r5, align 4
  store i32 %v0_bbfc, i32* %r0.global-to-local, align 4
  %v5_bc00 = inttoptr i32 %v0_bbec to i32*
  %v6_bc00 = call i32 @function_9fe8(i32 %v0_bbfc, i32* %v5_bc00, i32 4, i32 64)
  %v1_bc08 = urem i32 %v6_bc00, 256
  store i32 %v1_bc08, i32* %ip.global-to-local, align 4
  %v0_bc0c = load i32, i32* @r4, align 4
  store i32 %v0_bc0c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_bc14 = load i32, i32* @sl, align 4
  store i32 %v0_bc14, i32* %r3.global-to-local, align 4
  %v0_bc18 = load i32, i32* @r5, align 4
  store i32 %v0_bc18, i32* %r0.global-to-local, align 4
  %v6_bc20 = inttoptr i32 %v0_bc0c to i32*
  %v7_bc20 = call i32 @function_9fe8(i32 %v0_bc18, i32* %v6_bc20, i32 5, i32 %v0_bc14)
  %v1_bc2c = urem i32 %v7_bc20, 256
  store i32 %v1_bc2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc38 = load i32, i32* @r4, align 4
  store i32 %v0_bc38, i32* %r1.global-to-local, align 4
  %v0_bc3c = load i32, i32* @r5, align 4
  store i32 %v0_bc3c, i32* %r0.global-to-local, align 4
  %v5_bc44 = inttoptr i32 %v0_bc38 to i32*
  %v6_bc44 = call i32 @function_9fe8(i32 %v0_bc3c, i32* %v5_bc44, i32 6, i32 65535)
  %v0_bc4c = load i32, i32* @r4, align 4
  store i32 %v0_bc4c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bc44, i32* %fp.global-to-local, align 4
  %v0_bc5c = load i32, i32* @r5, align 4
  store i32 %v0_bc5c, i32* %r0.global-to-local, align 4
  %v4_bc60 = inttoptr i32 %v0_bc4c to i32*
  %v5_bc60 = call i32 @function_9fe8(i32 %v0_bc5c, i32* %v4_bc60, i32 7, i32 65535)
  %v0_bc68 = load i32, i32* @r4, align 4
  store i32 %v0_bc68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v5_bc60, i32* %sb.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r5, align 4
  store i32 %v0_bc78, i32* %r0.global-to-local, align 4
  %v4_bc7c = inttoptr i32 %v0_bc68 to i32*
  %v5_bc7c = call i32 @function_9fe8(i32 %v0_bc78, i32* %v4_bc7c, i32 16, i32 65535)
  %v0_bc88 = load i32, i32* @r4, align 4
  store i32 %v0_bc88, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_bc94 = load i32, i32* @r5, align 4
  store i32 %v0_bc94, i32* %r0.global-to-local, align 4
  %v5_bc98 = inttoptr i32 %v0_bc88 to i32*
  %v6_bc98 = call i32 @function_9fe8(i32 %v0_bc94, i32* %v5_bc98, i32 17, i32 65535)
  %v0_bc9c = load i32, i32* @r4, align 4
  store i32 %v0_bc9c, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_bca8 = load i32, i32* @sl, align 4
  store i32 %v0_bca8, i32* %r3.global-to-local, align 4
  %v0_bcac = load i32, i32* @r5, align 4
  store i32 %v0_bcac, i32* %r0.global-to-local, align 4
  %v5_bcb0 = inttoptr i32 %v0_bc9c to i32*
  %v6_bcb0 = call i32 @function_9fe8(i32 %v0_bcac, i32* %v5_bcb0, i32 10, i32 %v0_bca8)
  %v0_bcb4 = load i32, i32* @r4, align 4
  store i32 %v0_bcb4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bcc4 = load i32, i32* @r5, align 4
  store i32 %v0_bcc4, i32* %r0.global-to-local, align 4
  %v5_bcc8 = inttoptr i32 %v0_bcb4 to i32*
  %v6_bcc8 = call i32 @function_9fe8(i32 %v0_bcc4, i32* %v5_bcc8, i32 11, i32 1)
  %v0_bccc = load i32, i32* @r4, align 4
  store i32 %v0_bccc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_bcd8 = load i32, i32* @sl, align 4
  store i32 %v0_bcd8, i32* %r3.global-to-local, align 4
  %v0_bcdc = load i32, i32* @r5, align 4
  store i32 %v0_bcdc, i32* %r0.global-to-local, align 4
  %v5_bce0 = inttoptr i32 %v0_bccc to i32*
  %v6_bce0 = call i32 @function_9fe8(i32 %v0_bcdc, i32* %v5_bce0, i32 12, i32 %v0_bcd8)
  %v0_bce4 = load i32, i32* @r4, align 4
  store i32 %v0_bce4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_bcf0 = load i32, i32* @sl, align 4
  store i32 %v0_bcf0, i32* %r3.global-to-local, align 4
  %v0_bcf4 = load i32, i32* @r5, align 4
  store i32 %v0_bcf4, i32* %r0.global-to-local, align 4
  %v5_bcf8 = inttoptr i32 %v0_bce4 to i32*
  %v6_bcf8 = call i32 @function_9fe8(i32 %v0_bcf4, i32* %v5_bcf8, i32 13, i32 %v0_bcf0)
  %v0_bcfc = load i32, i32* @r4, align 4
  store i32 %v0_bcfc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_bd08 = load i32, i32* @sl, align 4
  store i32 %v0_bd08, i32* %r3.global-to-local, align 4
  %v0_bd0c = load i32, i32* @r5, align 4
  store i32 %v0_bd0c, i32* %r0.global-to-local, align 4
  %v5_bd10 = inttoptr i32 %v0_bcfc to i32*
  %v6_bd10 = call i32 @function_9fe8(i32 %v0_bd0c, i32* %v5_bd10, i32 14, i32 %v0_bd08)
  %v0_bd14 = load i32, i32* @r4, align 4
  store i32 %v0_bd14, i32* %r1.global-to-local, align 4
  %v0_bd1c = load i32, i32* @sl, align 4
  store i32 %v0_bd1c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_bd24 = load i32, i32* @r5, align 4
  store i32 %v0_bd24, i32* %r0.global-to-local, align 4
  %v5_bd28 = inttoptr i32 %v0_bd14 to i32*
  %v6_bd28 = call i32 @function_9fe8(i32 %v0_bd24, i32* %v5_bd28, i32 15, i32 %v0_bd1c)
  %v0_bd2c = load i32, i32* @r4, align 4
  store i32 %v0_bd2c, i32* %r1.global-to-local, align 4
  %v0_bd34 = load i32, i32* @sl, align 4
  store i32 %v0_bd34, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bd3c = load i32, i32* @r5, align 4
  store i32 %v0_bd3c, i32* %r0.global-to-local, align 4
  %v5_bd40 = inttoptr i32 %v0_bd2c to i32*
  %v6_bd40 = call i32 @function_9fe8(i32 %v0_bd3c, i32* %v5_bd40, i32 %v0_bd34, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd4c = load i32, i32* @r4, align 4
  store i32 %v0_bd4c, i32* %r1.global-to-local, align 4
  store i32 %v6_bd40, i32* @r8, align 4
  %v0_bd54 = load i32, i32* @r5, align 4
  store i32 %v0_bd54, i32* %r0.global-to-local, align 4
  %v4_bd58 = inttoptr i32 %v0_bd4c to i32*
  %v5_bd58 = call i32 @function_9fe8(i32 %v0_bd54, i32* %v4_bd58, i32 1, i32 1)
  %v2_bd64 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_bd64, i32* %r3.global-to-local, align 4
  %v1_bd68 = urem i32 %v5_bd58, 256
  store i32 %v1_bd68, i32* %ip.global-to-local, align 4
  %v0_bd6c = load i32, i32* @r4, align 4
  store i32 %v0_bd6c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_bd74 = load i32, i32* @r5, align 4
  store i32 %v0_bd74, i32* %r0.global-to-local, align 4
  %v5_bd7c = inttoptr i32 %v0_bd6c to i32*
  %v6_bd7c = call i32 @function_9f7c(i32 %v0_bd74, i32* %v5_bd7c, i32 24, i32 %v2_bd64, i32 %v1_bd68)
  %v0_bd84 = load i32, i32* @sl, align 4
  store i32 %v0_bd84, i32* %r0.global-to-local, align 4
  %v1_bd88 = inttoptr i32 %v0_bd84 to i32*
  %v2_bd88 = call i32 @function_12d34(i32* %v1_bd88)
  %v1_bd8c = load i32, i32* @r6, align 4
  %v2_bd8c = add i32 %v1_bd8c, %v2_bd88
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bda0 = call i32 @function_138c4(i32 2, i32 3, i32 6)
  store i32 %v3_bda0, i32* %r0.global-to-local, align 4
  %v7_bda4 = icmp eq i32 %v3_bda0, -1
  store i1 %v7_bda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bda4, label %dec_label_pc_c288, label %dec_label_pc_bdb0

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_bb80
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdb8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdb8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_bdc0 = load i32, i32* @sl, align 4
  store i32 %v0_bdc0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bdcc = call i32 @function_13880(i32 %v3_bda0, i32 %v0_bdc0, i32 3, i32 %v6_bdb8, i32 4)
  store i32 %v5_bdcc, i32* %r0.global-to-local, align 4
  %v7_bdd0 = icmp eq i32 %v5_bdcc, -1
  store i1 %v7_bdd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bdd0, label %dec_label_pc_c294, label %dec_label_pc_bdd8

dec_label_pc_bdd8:                                ; preds = %dec_label_pc_bdb0
  store i32 %v7_bbe8, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_bde4 = load i32, i32* %fp.global-to-local, align 4
  %v0_bde8 = load i32, i32* %sb.global-to-local, align 4
  %v3_bde8 = mul i32 %v0_bde8, 65536
  store i32 %v3_bde8, i32* %sb.global-to-local, align 4
  %v3_bdec = urem i32 %v7_bbe8, 65536
  store i32 %v3_bdec, i32* %r2.global-to-local, align 4
  %v3_bdf0 = urem i32 %v0_bde4, 65536
  store i32 %v3_bdf0, i32* %r3.global-to-local, align 4
  %v3_bdf4 = urem i32 %v0_bde8, 65536
  store i32 %v3_bdf4, i32* %ip.global-to-local, align 4
  %v2_bdf8 = icmp eq i32 %arg2, 0
  store i1 %v2_bdf8, i1* %cpsr_z.global-to-local, align 1
  %v0_bdfc = load i32, i32* @sl, align 4
  store i32 %v0_bdfc, i32* %stack_var_-44, align 4
  br i1 %v2_bdf8, label %dec_label_pc_c038.preheader, label %dec_label_pc_be10

dec_label_pc_be10:                                ; preds = %dec_label_pc_bdd8
  %v0_be20 = load i32, i32* @r8, align 4
  %v3_be20 = mul i32 %v0_be20, 65536
  %v1_be28 = add i32 %v3_be20, 2621440
  %tmp59 = mul i32 %v0_bde4, 256
  %v3_be34 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_bde8, 256
  %v3_be38 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_bde4, 256
  %v4_be40 = urem i32 %tmp61, 256
  %v5_be40 = or i32 %v4_be40, %v3_be34
  %tmp62 = udiv i32 %v1_be28, 256
  %v3_be44 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_bbe8, 256
  %v3_be48 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_bde8, 256
  %v4_be4c = urem i32 %tmp64, 256
  %v5_be4c = or i32 %v4_be4c, %v3_be38
  store i32 %v5_be4c, i32* @fp, align 4
  %v4_be5c = udiv i32 %v1_be28, 16777216
  %v5_be5c = or i32 %v3_be44, %v4_be5c
  store i32 %v5_be5c, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_bbe8, 256
  %v4_be60 = urem i32 %tmp65, 256
  %v5_be60 = or i32 %v4_be60, %v3_be48
  store i32 %v5_be60, i32* @r5, align 4
  %tmp66 = mul i32 %v5_bc7c, 256
  %v3_be6c = and i32 %tmp66, 65280
  %v1_be70 = urem i32 %v6_bcb0, 2
  %v1_be74 = urem i32 %v6_bcc8, 2
  %tmp67 = udiv i32 %v5_bc7c, 256
  %v4_be78 = urem i32 %tmp67, 256
  %v5_be78 = or i32 %v4_be78, %v3_be6c
  %v1_be84 = urem i32 %v6_bce0, 2
  store i32 %v1_be84, i32* %r2.global-to-local, align 4
  %v1_be88 = urem i32 %v6_bcf8, 2
  store i32 %v1_be88, i32* %r3.global-to-local, align 4
  store i32 %v6_bd10, i32* %ip.global-to-local, align 4
  store i32 %v6_bd28, i32* %r0.global-to-local, align 4
  store i32 %v6_bce0, i32* %r1.global-to-local, align 4
  %v1_beb0 = urem i32 %v6_bd10, 2
  store i32 %v1_beb0, i32* @sb, align 4
  store i32 %v0_bdfc, i32* @r4, align 4
  %v1_beb8 = urem i32 %v6_bce0, 256
  store i32 %v1_beb8, i32* @r6, align 4
  %v1_bebc = urem i32 %v6_bd28, 2
  store i32 %v1_bebc, i32* @sl, align 4
  %v4_bf14 = sext i8 %v5_bbe4 to i32
  %sext6 = mul nuw i32 %v5_be5c, 65536
  %v4_bf30 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_be60, 65536
  %v4_bf38 = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_be40, 65536
  %v4_bf54 = sdiv i32 %sext8, 65536
  %tmp = sub nsw i32 0, %v1_be74
  %v4_bfa4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_be84
  %v4_bfb8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_be88
  %v4_bfcc = and i32 %tmp71, 4
  %v1_bf24 = trunc i32 %v6_bc00 to i8
  br label %dec_label_pc_bec0

dec_label_pc_bec0:                                ; preds = %.thread10, %dec_label_pc_be10
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_becc = call i32 @function_1442c(i32 1510, i32 1)
  %v2_bed4 = load i32, i32* @r4, align 4
  %v5_bed4 = mul i32 %v2_bed4, 4
  %v6_bed4 = add i32 %v5_bed4, %v2_bbac
  %v7_bed4 = inttoptr i32 %v6_bed4 to i32*
  store i32 %v2_becc, i32* %v7_bed4, align 4
  %v3_bed8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bed8, i32* %r2.global-to-local, align 4
  %v5_bee0 = mul i32 %v3_bed8, 24
  %v1_bee4 = load i32, i32* @r7, align 4
  %v2_bee4 = add i32 %v1_bee4, %v5_bee0
  store i32 %v2_bee4, i32* %r0.global-to-local, align 4
  store i32 %v2_bbac, i32* %r3.global-to-local, align 4
  %v4_beec = mul i32 %v3_bed8, 4
  %v5_beec = add i32 %v4_beec, %v2_bbac
  %v6_beec = inttoptr i32 %v5_beec to i32*
  %v7_beec = load i32, i32* %v6_beec, align 4
  store i32 %v7_beec, i32* %r1.global-to-local, align 4
  %v1_bef0 = inttoptr i32 %v7_beec to i8*
  %v2_bef0 = load i8, i8* %v1_bef0, align 1
  %tmp72 = urem i8 %v2_bef0, 16
  %v1_bef4 = zext i8 %tmp72 to i32
  %v1_bef8 = or i32 %v1_bef4, 64
  store i32 %v1_bef8, i32* %r3.global-to-local, align 4
  %v1_befc = trunc i32 %v1_bef8 to i8
  store i8 %v1_befc, i8* %v1_bef0, align 1
  %v0_bf00 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf00 = inttoptr i32 %v0_bf00 to i8*
  %v2_bf00 = load i8, i8* %v1_bf00, align 1
  %v1_bf04 = and i8 %v2_bf00, -16
  %v1_bf08 = or i8 %v1_bf04, 5
  store i32 %v1_bc2c, i32* %ip.global-to-local, align 4
  store i8 %v1_bf08, i8* %v1_bf00, align 1
  store i32 %v4_bf14, i32* %r2.global-to-local, align 4
  %v2_bf18 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf18 = add i32 %v2_bf18, 1
  %v4_bf18 = inttoptr i32 %v3_bf18 to i8*
  store i8 %v5_bbe4, i8* %v4_bf18, align 1
  store i32 %v1_bc08, i32* %r3.global-to-local, align 4
  %v0_bf20 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf20 = icmp eq i32 %v0_bf20, 0
  store i1 %v2_bf20, i1* %cpsr_z.global-to-local, align 1
  %v2_bf24 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf24 = add i32 %v2_bf24, 8
  %v4_bf24 = inttoptr i32 %v3_bf24 to i8*
  store i8 %v1_bf24, i8* %v4_bf24, align 1
  %v0_bf28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bf28, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bec0
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bf2c = load i32, i32* %r1.global-to-local, align 4
  %v4_bf2c = add i32 %v3_bf2c, 6
  %v5_bf2c = inttoptr i32 %v4_bf2c to i16*
  store i16 64, i16* %v5_bf2c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bec0, %bb
  store i32 %v4_bf30, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_bf38, i32* %r2.global-to-local, align 4
  %v2_bf3c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf3c = add i32 %v2_bf3c, 9
  %v4_bf3c = inttoptr i32 %v3_bf3c to i8*
  store i8 6, i8* %v4_bf3c, align 1
  %v0_bf40 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf40 = trunc i32 %v0_bf40 to i16
  %v2_bf40 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf40 = add i32 %v2_bf40, 2
  %v4_bf40 = inttoptr i32 %v3_bf40 to i16*
  store i16 %v1_bf40, i16* %v4_bf40, align 2
  store i32 %v6_bd7c, i32* %ip.global-to-local, align 4
  %v1_bf48 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf48 = add i32 %v1_bf48, 12
  %v3_bf48 = inttoptr i32 %v2_bf48 to i32*
  store i32 %v6_bd7c, i32* %v3_bf48, align 4
  %v0_bf4c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf4c = trunc i32 %v0_bf4c to i16
  %v2_bf4c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf4c = add i32 %v2_bf4c, 4
  %v4_bf4c = inttoptr i32 %v3_bf4c to i16*
  store i16 %v1_bf4c, i16* %v4_bf4c, align 2
  %v0_bf50 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf50 = add i32 %v0_bf50, 16
  %v2_bf50 = inttoptr i32 %v1_bf50 to i32*
  %v3_bf50 = load i32, i32* %v2_bf50, align 4
  store i32 %v3_bf50, i32* %r2.global-to-local, align 4
  store i32 %v4_bf54, i32* %r0.global-to-local, align 4
  %v1_bf58 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf58 = add i32 %v1_bf58, 16
  %v3_bf58 = inttoptr i32 %v2_bf58 to i32*
  store i32 %v3_bf50, i32* %v3_bf58, align 4
  %v0_bf5c = load i32, i32* %r0.global-to-local, align 4
  %v1_bf5c = trunc i32 %v0_bf5c to i16
  %v2_bf5c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf5c = add i32 %v2_bf5c, 20
  %v4_bf5c = inttoptr i32 %v3_bf5c to i16*
  store i16 %v1_bf5c, i16* %v4_bf5c, align 2
  %v0_bf60 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf60 = add i32 %v0_bf60, 20
  store i32 %v1_bf60, i32* @r4, align 4
  %v1_bf64 = add i32 %v0_bf60, 32
  %v2_bf64 = inttoptr i32 %v1_bf64 to i8*
  %v3_bf64 = load i8, i8* %v2_bf64, align 1
  %v4_bf64 = zext i8 %v3_bf64 to i32
  %v1_bf68 = and i32 %v4_bf64, 95
  store i32 %v1_bf68, i32* %r3.global-to-local, align 4
  %v1_bf6c = add i32 %v0_bf60, 33
  %v2_bf6c = inttoptr i32 %v1_bf6c to i8*
  %v3_bf6c = load i8, i8* %v2_bf6c, align 1
  %v4_bf6c = zext i8 %v3_bf6c to i32
  store i32 %v4_bf6c, i32* %r2.global-to-local, align 4
  %v1_bf70 = or i32 %v1_bf68, 80
  %v1_bf74 = add i32 %v0_bf60, 40
  store i32 %v1_bf74, i32* @r5, align 4
  store i32 %v1_be70, i32* %r1.global-to-local, align 4
  %v1_bf7c = trunc i32 %v1_bf70 to i8
  store i8 %v1_bf7c, i8* %v2_bf64, align 1
  store i32 %v5_be78, i32* %r3.global-to-local, align 4
  %v0_bf84 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf84 = and i32 %v0_bf84, -33
  %v1_bf88 = load i32, i32* %r1.global-to-local, align 4
  %v4_bf88 = mul i32 %v1_bf88, 32
  %v5_bf88 = or i32 %v4_bf88, %v1_bf84
  store i32 %v5_bf88, i32* %r2.global-to-local, align 4
  %v1_bf8c = load i32, i32* @r4, align 4
  %v2_bf8c = add i32 %v1_bf8c, 4
  %v3_bf8c = inttoptr i32 %v2_bf8c to i32*
  store i32 %v5_be78, i32* %v3_bf8c, align 4
  %v0_bf90 = load i32, i32* @fp, align 4
  %v1_bf90 = trunc i32 %v0_bf90 to i16
  %v2_bf90 = load i32, i32* @r4, align 4
  %v3_bf90 = add i32 %v2_bf90, 2
  %v4_bf90 = inttoptr i32 %v3_bf90 to i16*
  store i16 %v1_bf90, i16* %v4_bf90, align 2
  %v0_bf94 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf94 = trunc i32 %v0_bf94 to i8
  %v2_bf94 = load i32, i32* @r4, align 4
  %v3_bf94 = add i32 %v2_bf94, 13
  %v4_bf94 = inttoptr i32 %v3_bf94 to i8*
  store i8 %v1_bf94, i8* %v4_bf94, align 1
  %v0_bf98 = load i32, i32* @r4, align 4
  %v1_bf98 = add i32 %v0_bf98, 13
  %v2_bf98 = inttoptr i32 %v1_bf98 to i8*
  %v3_bf98 = load i8, i8* %v2_bf98, align 1
  %v4_bf98 = zext i8 %v3_bf98 to i32
  store i32 %v1_be74, i32* %ip.global-to-local, align 4
  %v1_bfa0 = and i32 %v4_bf98, 239
  %v5_bfa4 = or i32 %v1_bfa0, %v4_bfa4
  store i32 %v5_bfa4, i32* %r3.global-to-local, align 4
  %v1_bfa8 = trunc i32 %v5_bfa4 to i8
  store i8 %v1_bfa8, i8* %v2_bf98, align 1
  %v0_bfac = load i32, i32* @r4, align 4
  %v1_bfac = add i32 %v0_bfac, 13
  %v2_bfac = inttoptr i32 %v1_bfac to i8*
  %v3_bfac = load i8, i8* %v2_bfac, align 1
  %v4_bfac = zext i8 %v3_bfac to i32
  store i32 %v1_be84, i32* %r0.global-to-local, align 4
  %v1_bfb4 = and i32 %v4_bfac, 247
  %v5_bfb8 = or i32 %v1_bfb4, %v4_bfb8
  store i32 %v5_bfb8, i32* %r2.global-to-local, align 4
  %v1_bfbc = trunc i32 %v5_bfb8 to i8
  store i8 %v1_bfbc, i8* %v2_bfac, align 1
  %v0_bfc0 = load i32, i32* @r4, align 4
  %v1_bfc0 = add i32 %v0_bfc0, 13
  %v2_bfc0 = inttoptr i32 %v1_bfc0 to i8*
  %v3_bfc0 = load i8, i8* %v2_bfc0, align 1
  %v4_bfc0 = zext i8 %v3_bfc0 to i32
  store i32 %v1_be88, i32* %r1.global-to-local, align 4
  %v1_bfc8 = and i32 %v4_bfc0, 251
  %v5_bfcc = or i32 %v1_bfc8, %v4_bfcc
  store i32 %v5_bfcc, i32* %r3.global-to-local, align 4
  %v1_bfd0 = trunc i32 %v5_bfcc to i8
  store i8 %v1_bfd0, i8* %v2_bfc0, align 1
  %v0_bfd4 = load i32, i32* @r4, align 4
  %v1_bfd4 = add i32 %v0_bfd4, 13
  %v2_bfd4 = inttoptr i32 %v1_bfd4 to i8*
  %v3_bfd4 = load i8, i8* %v2_bfd4, align 1
  %v4_bfd4 = zext i8 %v3_bfd4 to i32
  %v1_bfd8 = and i32 %v4_bfd4, 253
  %v1_bfdc = load i32, i32* @sb, align 4
  %v3_bfdc = mul i32 %v1_bfdc, 2
  %v4_bfdc = or i32 %v3_bfdc, %v1_bfd8
  store i32 %v4_bfdc, i32* %r2.global-to-local, align 4
  %v1_bfe0 = trunc i32 %v4_bfdc to i8
  store i8 %v1_bfe0, i8* %v2_bfd4, align 1
  %v0_bfe4 = load i32, i32* @r4, align 4
  %v1_bfe4 = add i32 %v0_bfe4, 13
  %v2_bfe4 = inttoptr i32 %v1_bfe4 to i8*
  %v3_bfe4 = load i8, i8* %v2_bfe4, align 1
  %v4_bfe4 = zext i8 %v3_bfe4 to i32
  %v1_bfe8 = and i32 %v4_bfe4, 254
  %v0_bfec = load i32, i32* @sl, align 4
  %v2_bfec = or i32 %v1_bfe8, %v0_bfec
  store i32 %v2_bfec, i32* %r3.global-to-local, align 4
  %v1_bff0 = trunc i32 %v2_bfec to i8
  store i8 %v1_bff0, i8* %v2_bfe4, align 1
  %v0_bff4 = call i32 @function_f190()
  %v1_bff4 = trunc i32 %v0_bff4 to i16
  store i32 %v0_bff4, i32* %r0.global-to-local, align 4
  %v0_bff8 = load i32, i32* @r6, align 4
  %v2_bff8 = icmp eq i32 %v0_bff8, 0
  store i1 %v2_bff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bff8, label %.thread10, label %bb68

bb68:                                             ; preds = %.thread
  %v1_bffc = load i32, i32* @r4, align 4
  %v2_bffc = add i32 %v1_bffc, 13
  %v3_bffc = inttoptr i32 %v2_bffc to i8*
  %v4_bffc = load i8, i8* %v3_bffc, align 1
  %v5_bffc = zext i8 %v4_bffc to i32
  %v2_c000 = or i32 %v5_bffc, 8
  store i32 %v2_c000, i32* %r3.global-to-local, align 4
  %v2_c004 = trunc i32 %v2_c000 to i8
  store i8 %v2_c004, i8* %v3_bffc, align 1
  br label %.thread10

.thread10:                                        ; preds = %.thread, %bb68
  %v3_c008 = load i32, i32* @r4, align 4
  %v4_c008 = add i32 %v3_c008, 14
  %v5_c008 = inttoptr i32 %v4_c008 to i16*
  store i16 %v1_bff4, i16* %v5_c008, align 2
  %v0_c00c = load i32, i32* @r8, align 4
  store i32 %v0_c00c, i32* %r1.global-to-local, align 4
  %v0_c010 = load i32, i32* @r5, align 4
  store i32 %v0_c010, i32* %r0.global-to-local, align 4
  %v2_c014 = call i32 @function_f254(i32 %v0_c010, i32 %v0_c00c)
  store i32 %v2_c014, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c01c = load i32, i32* @r5, align 4
  %v3_c01c = load i32, i32* @r8, align 4
  %v4_c01c = add i32 %v3_c01c, %v2_c01c
  %v5_c01c = inttoptr i32 %v4_c01c to i8*
  store i8 0, i8* %v5_c01c, align 1
  %v3_c020 = load i32, i32* %stack_var_-44, align 4
  %v1_c024 = add i32 %v3_c020, 1
  store i32 %v1_c024, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_c02c = icmp eq i32 %v1_c024, %arg2
  store i1 %v9_c02c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c024, i32* %stack_var_-44, align 4
  %v5_c034 = icmp slt i32 %v1_c024, %arg2
  br i1 %v5_c034, label %dec_label_pc_bec0, label %dec_label_pc_c038.preheader

dec_label_pc_c038.preheader:                      ; preds = %.thread10, %dec_label_pc_bdd8
  %v2_c074 = icmp eq i32 %v6_bd7c, -1
  %v7_c074 = icmp eq i32 %v6_bd7c, -1
  %v3_c1e8 = icmp eq i32 %v3_bdec, 65535
  %v2_c24c = icmp eq i32 %v1_bd68, 0
  br label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %dec_label_pc_c038.preheader, %dec_label_pc_c274
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_bdf8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bdf8, label %dec_label_pc_c274, label %dec_label_pc_c04c

dec_label_pc_c04c:                                ; preds = %dec_label_pc_c038
  %v0_c04c = load i32, i32* @r8, align 4
  %v3_c04c = mul i32 %v0_c04c, 65536
  %v1_c050 = add i32 %v3_c04c, 1310720
  store i32 %v1_c050, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_c050, 256
  %v3_c058 = and i32 %tmp69, 65280
  store i32 %v3_c058, i32* %r3.global-to-local, align 4
  %v4_c05c = udiv i32 %v1_c050, 16777216
  %v5_c05c = or i32 %v3_c058, %v4_c05c
  store i32 %v5_c05c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c064 = add i32 %v0_c04c, 20
  store i32 %v1_c064, i32* @sb, align 4
  %v1_c068 = add i32 %v0_c04c, 40
  store i32 %v1_c068, i32* @sl, align 4
  br label %dec_label_pc_c154

dec_label_pc_c070:                                ; preds = %dec_label_pc_c154
  store i32 %v6_bd7c, i32* %r0.global-to-local, align 4
  store i1 %v7_c074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c074, label %dec_label_pc_c1d8, label %dec_label_pc_c07c

dec_label_pc_c07c:                                ; preds = %dec_label_pc_c178, %dec_label_pc_c070
  store i32 %v3_bdec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c1e8, label %dec_label_pc_c1f4, label %dec_label_pc_c090

dec_label_pc_c090:                                ; preds = %dec_label_pc_c1d8.dec_label_pc_c090_crit_edge, %dec_label_pc_c07c
  %v1_c094 = phi i32 [ %v1_c094.pre, %dec_label_pc_c1d8.dec_label_pc_c090_crit_edge ], [ 65535, %dec_label_pc_c07c ]
  store i32 %v3_bdf0, i32* %r2.global-to-local, align 4
  %v9_c094 = icmp eq i32 %v3_bdf0, %v1_c094
  store i1 %v9_c094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c094, label %dec_label_pc_c208, label %dec_label_pc_c09c

dec_label_pc_c09c:                                ; preds = %dec_label_pc_c1f4.dec_label_pc_c09c_crit_edge, %dec_label_pc_c090
  %v1_c0a0 = phi i32 [ %v1_c0a0.pre, %dec_label_pc_c1f4.dec_label_pc_c09c_crit_edge ], [ %v1_c094, %dec_label_pc_c090 ]
  store i32 %v3_bdf4, i32* %r3.global-to-local, align 4
  %v9_c0a0 = icmp eq i32 %v3_bdf4, %v1_c0a0
  store i1 %v9_c0a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0a0, label %dec_label_pc_c21c, label %dec_label_pc_c0a8

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c208.dec_label_pc_c0a8_crit_edge, %dec_label_pc_c09c
  %v1_c0ac = phi i32 [ %v1_c0ac.pre, %dec_label_pc_c208.dec_label_pc_c0a8_crit_edge ], [ %v1_c0a0, %dec_label_pc_c09c ]
  store i32 %v5_bc7c, i32* %ip.global-to-local, align 4
  %v9_c0ac = icmp eq i32 %v5_bc7c, %v1_c0ac
  store i1 %v9_c0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ac, label %dec_label_pc_c230, label %dec_label_pc_c0b4

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_c21c.dec_label_pc_c0b4_crit_edge, %dec_label_pc_c0a8
  %v1_c0b8 = phi i32 [ %v1_c0b8.pre, %dec_label_pc_c21c.dec_label_pc_c0b4_crit_edge ], [ %v1_c0ac, %dec_label_pc_c0a8 ]
  store i32 %v6_bc98, i32* %r0.global-to-local, align 4
  %v9_c0b8 = icmp eq i32 %v6_bc98, %v1_c0b8
  store i1 %v9_c0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0b8, label %dec_label_pc_c244, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c230, %dec_label_pc_c0b4
  store i32 %v1_bd68, i32* %r1.global-to-local, align 4
  store i1 %v2_c24c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c24c, label %dec_label_pc_c0cc, label %dec_label_pc_c258

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c0c0, %dec_label_pc_c244, %dec_label_pc_c258
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c0d0 = load i32, i32* @r5, align 4
  %v3_c0d0 = add i32 %v2_c0d0, 10
  %v4_c0d0 = inttoptr i32 %v3_c0d0 to i16*
  store i16 0, i16* %v4_c0d0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c0d8 = load i32, i32* @r5, align 4
  store i32 %v0_c0d8, i32* @r0, align 4
  %v2_c0dc = call i32 @function_dd58(i32 %v0_c0d8, i32 20)
  %v3_c0dc = trunc i32 %v2_c0dc to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c0e4 = load i32, i32* @r5, align 4
  %v4_c0e4 = add i32 %v3_c0e4, 10
  %v5_c0e4 = inttoptr i32 %v4_c0e4 to i16*
  store i16 %v3_c0dc, i16* %v5_c0e4, align 2
  %v0_c0e8 = load i32, i32* @r6, align 4
  store i32 %v0_c0e8, i32* @r1, align 4
  %v0_c0ec = load i32, i32* %r3.global-to-local, align 4
  %v1_c0ec = trunc i32 %v0_c0ec to i16
  %v3_c0ec = add i32 %v0_c0e8, 16
  %v4_c0ec = inttoptr i32 %v3_c0ec to i16*
  store i16 %v1_c0ec, i16* %v4_c0ec, align 2
  %v0_c0f0 = load i32, i32* @fp, align 4
  store i32 %v0_c0f0, i32* %r2.global-to-local, align 4
  %v0_c0f4 = load i32, i32* @sb, align 4
  store i32 %v0_c0f4, i32* %r3.global-to-local, align 4
  %v0_c0f8 = load i32, i32* @r5, align 4
  store i32 %v0_c0f8, i32* %r0.global-to-local, align 4
  %v4_c0fc = call i32 @function_dda8(i32 %v0_c0f8, i32 %v0_c0e8, i32 %v0_c0f0, i32 %v0_c0f4)
  %v5_c0fc = trunc i32 %v4_c0fc to i16
  store i32 %v4_c0fc, i32* %r0.global-to-local, align 4
  %v3_c100 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c100, i32* %r3.global-to-local, align 4
  %v3_c104 = mul i32 %v3_c100, 32
  store i32 %v3_c104, i32* %lr.global-to-local, align 4
  %v3_c108 = load i32, i32* @r6, align 4
  %v4_c108 = add i32 %v3_c108, 16
  %v5_c108 = inttoptr i32 %v4_c108 to i16*
  store i16 %v5_c0fc, i16* %v5_c108, align 2
  %v0_c10c = load i32, i32* %lr.global-to-local, align 4
  %v1_c10c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_c10c, -8
  %v5_c10c = add i32 %v0_c10c, %tmp73
  store i32 %v5_c10c, i32* %lr.global-to-local, align 4
  %v0_c110 = load i32, i32* @r6, align 4
  %v1_c110 = add i32 %v0_c110, 2
  %v2_c110 = inttoptr i32 %v1_c110 to i16*
  %v3_c110 = load i16, i16* %v2_c110, align 2
  %v1_c114 = load i32, i32* @r7, align 4
  %v2_c114 = add i32 %v1_c114, %v5_c10c
  store i32 %v2_c114, i32* @lr, align 4
  %v3_c118 = add i32 %v2_c114, 2
  %v4_c118 = inttoptr i32 %v3_c118 to i16*
  store i16 %v3_c110, i16* %v4_c118, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c124 = load i32, i32* @r5, align 4
  store i32 %v0_c124, i32* %r1.global-to-local, align 4
  store i32 %v3_bda0, i32* %r0.global-to-local, align 4
  %v0_c12c = load i32, i32* @sl, align 4
  store i32 %v0_c12c, i32* %r2.global-to-local, align 4
  %v0_c134 = load i32, i32* @lr, align 4
  %v6_c138 = call i32 @function_13840(i32 %v3_bda0, i32 %v0_c124, i32 %v0_c12c, i32 16384, i32 %v0_c134, i32 16)
  %v3_c13c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c13c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_c144 = add i32 %v3_c13c, 1
  store i32 %v1_c144, i32* %r0.global-to-local, align 4
  %v9_c148 = icmp eq i32 %v1_c144, %arg2
  store i1 %v9_c148, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c144, i32* %stack_var_-44, align 4
  %v6_c150 = icmp slt i32 %v1_c144, %arg2
  br i1 %v6_c150, label %dec_label_pc_c154, label %dec_label_pc_c274

dec_label_pc_c154:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c04c
  %v1_c168 = phi i32 [ %v1_c144, %dec_label_pc_c0cc ], [ 0, %dec_label_pc_c04c ]
  %v5_c158 = mul i32 %v1_c168, 24
  %v1_c15c = load i32, i32* @r7, align 4
  %v2_c15c = add i32 %v1_c15c, %v5_c158
  store i32 %v2_c15c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbac, i32* %ip.global-to-local, align 4
  %v1_c164 = add i32 %v2_c15c, 20
  %v2_c164 = inttoptr i32 %v1_c164 to i8*
  %v3_c164 = load i8, i8* %v2_c164, align 1
  %v4_c164 = zext i8 %v3_c164 to i32
  store i32 %v4_c164, i32* %r2.global-to-local, align 4
  %v4_c168 = mul i32 %v1_c168, 4
  %v5_c168 = add i32 %v4_c168, %v2_bbac
  %v6_c168 = inttoptr i32 %v5_c168 to i32*
  %v7_c168 = load i32, i32* %v6_c168, align 4
  store i32 %v7_c168, i32* @r5, align 4
  %v2_c16c = icmp ugt i8 %v3_c164, 30
  %v7_c16c = icmp eq i8 %v3_c164, 31
  store i1 %v7_c16c, i1* %cpsr_z.global-to-local, align 1
  %v1_c170 = add i32 %v7_c168, 20
  store i32 %v1_c170, i32* @r6, align 4
  %v2_c174 = xor i1 %v7_c16c, true
  %v3_c174 = and i1 %v2_c16c, %v2_c174
  br i1 %v3_c174, label %dec_label_pc_c070, label %dec_label_pc_c178

dec_label_pc_c178:                                ; preds = %dec_label_pc_c154
  %v1_c178 = add i32 %v2_c15c, 16
  %v2_c178 = inttoptr i32 %v1_c178 to i32*
  %v3_c178 = load i32, i32* %v2_c178, align 4
  %v0_c17c = call i32 @function_f190()
  store i32 %v0_c17c, i32* %r0.global-to-local, align 4
  %v3_c180 = load i32, i32* %stack_var_-44, align 4
  %v5_c188 = mul i32 %v3_c180, 24
  %v1_c18c = and i32 %v3_c178, 16711680
  store i32 %v1_c18c, i32* %ip.global-to-local, align 4
  %v3_c190 = udiv i32 %v3_c178, 16777216
  %v4_c194 = udiv i32 %v1_c18c, 256
  %v5_c194 = or i32 %v4_c194, %v3_c190
  store i32 %v5_c194, i32* %r2.global-to-local, align 4
  %v1_c198 = load i32, i32* @r7, align 4
  %v2_c198 = add i32 %v1_c198, %v5_c188
  store i32 %v2_c198, i32* %r1.global-to-local, align 4
  %v1_c19c = and i32 %v3_c178, 65280
  store i32 %v1_c19c, i32* %r3.global-to-local, align 4
  %v1_c1a0 = add i32 %v2_c198, 20
  %v2_c1a0 = inttoptr i32 %v1_c1a0 to i8*
  %v3_c1a0 = load i8, i8* %v2_c1a0, align 1
  %v4_c1a0 = zext i8 %v3_c1a0 to i32
  store i32 %v4_c1a0, i32* %ip.global-to-local, align 4
  %v5_c1a8 = call i32 @llvm.bswap.i32(i32 %v3_c178)
  %v7_c1ac = lshr i32 %v0_c17c, %v4_c1a0
  %v8_c1ac = add i32 %v7_c1ac, %v5_c1a8
  store i32 %v8_c1ac, i32* %r2.global-to-local, align 4
  %v1_c1bc = and i32 %v8_c1ac, 65280
  store i32 %v1_c1bc, i32* %r1.global-to-local, align 4
  store i32 %v6_bd7c, i32* %r0.global-to-local, align 4
  %v5_c1c8 = call i32 @llvm.bswap.i32(i32 %v8_c1ac)
  store i32 %v5_c1c8, i32* %r3.global-to-local, align 4
  store i1 %v7_c074, i1* %cpsr_z.global-to-local, align 1
  %v1_c1d0 = load i32, i32* @r5, align 4
  %v2_c1d0 = add i32 %v1_c1d0, 16
  %v3_c1d0 = inttoptr i32 %v2_c1d0 to i32*
  store i32 %v5_c1c8, i32* %v3_c1d0, align 4
  br i1 %v2_c074, label %dec_label_pc_c1d8, label %dec_label_pc_c07c

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c178, %dec_label_pc_c070
  %v0_c1d8 = call i32 @function_f190()
  store i32 %v0_c1d8, i32* %r0.global-to-local, align 4
  store i32 %v3_bdec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c1e8, i1* %cpsr_z.global-to-local, align 1
  %v1_c1ec = load i32, i32* @r5, align 4
  %v2_c1ec = add i32 %v1_c1ec, 12
  %v3_c1ec = inttoptr i32 %v2_c1ec to i32*
  store i32 %v0_c1d8, i32* %v3_c1ec, align 4
  br i1 %v3_c1e8, label %dec_label_pc_c1f4, label %dec_label_pc_c1d8.dec_label_pc_c090_crit_edge

dec_label_pc_c1d8.dec_label_pc_c090_crit_edge:    ; preds = %dec_label_pc_c1d8
  %v1_c094.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c090

dec_label_pc_c1f4:                                ; preds = %dec_label_pc_c1d8, %dec_label_pc_c07c
  %v0_c1f4 = call i32 @function_f190()
  %v1_c1f4 = trunc i32 %v0_c1f4 to i16
  store i32 %v0_c1f4, i32* %r0.global-to-local, align 4
  store i32 %v3_bdf0, i32* %r2.global-to-local, align 4
  %v1_c1fc = load i32, i32* @r4, align 4
  %v9_c1fc = icmp eq i32 %v3_bdf0, %v1_c1fc
  store i1 %v9_c1fc, i1* %cpsr_z.global-to-local, align 1
  %v3_c200 = load i32, i32* @r5, align 4
  %v4_c200 = add i32 %v3_c200, 4
  %v5_c200 = inttoptr i32 %v4_c200 to i16*
  store i16 %v1_c1f4, i16* %v5_c200, align 2
  br i1 %v9_c1fc, label %dec_label_pc_c208, label %dec_label_pc_c1f4.dec_label_pc_c09c_crit_edge

dec_label_pc_c1f4.dec_label_pc_c09c_crit_edge:    ; preds = %dec_label_pc_c1f4
  %v1_c0a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c09c

dec_label_pc_c208:                                ; preds = %dec_label_pc_c1f4, %dec_label_pc_c090
  %v0_c208 = call i32 @function_f190()
  %v1_c208 = trunc i32 %v0_c208 to i16
  store i32 %v0_c208, i32* %r0.global-to-local, align 4
  store i32 %v3_bdf4, i32* %r3.global-to-local, align 4
  %v1_c210 = load i32, i32* @r4, align 4
  %v9_c210 = icmp eq i32 %v3_bdf4, %v1_c210
  store i1 %v9_c210, i1* %cpsr_z.global-to-local, align 1
  %v3_c214 = load i32, i32* @r5, align 4
  %v4_c214 = add i32 %v3_c214, 20
  %v5_c214 = inttoptr i32 %v4_c214 to i16*
  store i16 %v1_c208, i16* %v5_c214, align 2
  br i1 %v9_c210, label %dec_label_pc_c21c, label %dec_label_pc_c208.dec_label_pc_c0a8_crit_edge

dec_label_pc_c208.dec_label_pc_c0a8_crit_edge:    ; preds = %dec_label_pc_c208
  %v1_c0ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0a8

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c208, %dec_label_pc_c09c
  %v0_c21c = call i32 @function_f190()
  %v1_c21c = trunc i32 %v0_c21c to i16
  store i32 %v0_c21c, i32* %r0.global-to-local, align 4
  store i32 %v5_bc7c, i32* %ip.global-to-local, align 4
  %v1_c224 = load i32, i32* @r4, align 4
  %v9_c224 = icmp eq i32 %v5_bc7c, %v1_c224
  store i1 %v9_c224, i1* %cpsr_z.global-to-local, align 1
  %v3_c228 = load i32, i32* @r6, align 4
  %v4_c228 = add i32 %v3_c228, 2
  %v5_c228 = inttoptr i32 %v4_c228 to i16*
  store i16 %v1_c21c, i16* %v5_c228, align 2
  br i1 %v9_c224, label %dec_label_pc_c230, label %dec_label_pc_c21c.dec_label_pc_c0b4_crit_edge

dec_label_pc_c21c.dec_label_pc_c0b4_crit_edge:    ; preds = %dec_label_pc_c21c
  %v1_c0b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0b4

dec_label_pc_c230:                                ; preds = %dec_label_pc_c21c, %dec_label_pc_c0a8
  %v0_c230 = call i32 @function_f190()
  %v1_c234 = load i32, i32* @r6, align 4
  %v2_c234 = add i32 %v1_c234, 4
  %v3_c234 = inttoptr i32 %v2_c234 to i32*
  store i32 %v0_c230, i32* %v3_c234, align 4
  store i32 %v6_bc98, i32* %r0.global-to-local, align 4
  %v1_c23c = load i32, i32* @r4, align 4
  %v9_c23c = icmp eq i32 %v6_bc98, %v1_c23c
  store i1 %v9_c23c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c23c, label %dec_label_pc_c244, label %dec_label_pc_c0c0

dec_label_pc_c244:                                ; preds = %dec_label_pc_c230, %dec_label_pc_c0b4
  %v0_c244 = call i32 @function_f190()
  store i32 %v0_c244, i32* %r0.global-to-local, align 4
  store i32 %v1_bd68, i32* %r1.global-to-local, align 4
  store i1 %v2_c24c, i1* %cpsr_z.global-to-local, align 1
  %v1_c250 = load i32, i32* @r6, align 4
  %v2_c250 = add i32 %v1_c250, 8
  %v3_c250 = inttoptr i32 %v2_c250 to i32*
  store i32 %v0_c244, i32* %v3_c250, align 4
  br i1 %v2_c24c, label %dec_label_pc_c0cc, label %dec_label_pc_c258

dec_label_pc_c258:                                ; preds = %dec_label_pc_c0c0, %dec_label_pc_c244
  %v0_c258 = load i32, i32* @r5, align 4
  %v1_c258 = add i32 %v0_c258, 40
  store i32 %v1_c258, i32* @r4, align 4
  store i32 %v1_c258, i32* %r0.global-to-local, align 4
  %v0_c260 = load i32, i32* @r8, align 4
  store i32 %v0_c260, i32* %r1.global-to-local, align 4
  %v2_c264 = call i32 @function_f254(i32 %v1_c258, i32 %v0_c260)
  store i32 %v2_c264, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c26c = load i32, i32* @r4, align 4
  %v3_c26c = load i32, i32* @r8, align 4
  %v4_c26c = add i32 %v3_c26c, %v2_c26c
  %v5_c26c = inttoptr i32 %v4_c26c to i8*
  store i8 0, i8* %v5_c26c, align 1
  br label %dec_label_pc_c0cc

dec_label_pc_c274:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c038
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c278 = call i32 @function_12d34(i32* null)
  store i32 %v2_c278, i32* %r0.global-to-local, align 4
  store i32 %v2_bd8c, i32* %r1.global-to-local, align 4
  %v9_c280 = icmp eq i32 %v2_bd8c, %v2_c278
  store i1 %v9_c280, i1* %cpsr_z.global-to-local, align 1
  %v6_c284 = icmp slt i32 %v2_bd8c, %v2_c278
  br i1 %v6_c284, label %dec_label_pc_c288, label %dec_label_pc_c038

dec_label_pc_c288:                                ; preds = %dec_label_pc_c274, %dec_label_pc_bb80, %dec_label_pc_c294
  %v1_c290 = phi i32 [ %v3_bda0, %dec_label_pc_bb80 ], [ %v1_c298, %dec_label_pc_c294 ], [ %v2_c278, %dec_label_pc_c274 ]
  store i32 %v18_bb80, i32* %sb.global-to-local, align 4
  store i32 %v24_bb80, i32* %fp.global-to-local, align 4
  store i32 %v27_bb80, i32* %lr.global-to-local, align 4
  ret i32 %v1_c290

dec_label_pc_c294:                                ; preds = %dec_label_pc_bdb0
  store i32 %v3_bda0, i32* %r0.global-to-local, align 4
  %v1_c298 = call i32 @function_130b4(i32 %v3_bda0)
  store i32 %v1_c298, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c288

; uselistorder directives
  uselistorder i32 %v1_c298, { 1, 0 }
  uselistorder i32 %v0_c21c, { 1, 0 }
  uselistorder i32 %v0_c208, { 1, 0 }
  uselistorder i32 %v0_c1f4, { 1, 0 }
  uselistorder i32 %v5_c1c8, { 1, 0 }
  uselistorder i32 %v3_c178, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c144, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c10c, { 1, 0 }
  uselistorder i32 %v4_c0fc, { 1, 0 }
  uselistorder i32 %v0_c04c, { 2, 1, 0 }
  uselistorder i1 %v2_c24c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c1e8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c074, { 2, 1, 0 }
  uselistorder i32 %v1_c024, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bff4, { 1, 0 }
  uselistorder i32 %v0_bf60, { 1, 0, 2, 3 }
  uselistorder i32 %v1_be88, { 2, 0, 1 }
  uselistorder i32 %v1_be84, { 2, 0, 1 }
  uselistorder i32 %v1_be74, { 1, 0 }
  uselistorder i1 %v2_bdf8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bdec, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bde8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_bde4, { 1, 0, 2 }
  uselistorder i1 %v7_bdd0, { 1, 0 }
  uselistorder i1 %v7_bda4, { 1, 0 }
  uselistorder i32 %v3_bda0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bd8c, { 2, 1, 0 }
  uselistorder i32 %v6_bd7c, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_bd68, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bce0, { 0, 2, 1 }
  uselistorder i32 %v6_bc98, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bc7c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bc2c, { 1, 0 }
  uselistorder i32 %v1_bc08, { 1, 0 }
  uselistorder i32 %v6_bc00, { 1, 0 }
  uselistorder i32 %v7_bbe8, { 1, 0, 2, 3 }
  uselistorder i8 %v5_bbe4, { 1, 0 }
  uselistorder i32 %v6_bbc4, { 1, 0 }
  uselistorder i32 %v2_bbac, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %sb.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 26, 27, 28, 29, 38, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 41, 43, 44, 45, 46, 47, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r1.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 0 }
  uselistorder i32* %r0.global-to-local, { 31, 30, 33, 32, 36, 34, 37, 35, 38, 39, 40, 42, 41, 44, 43, 45, 1, 46, 47, 48, 49, 2, 50, 54, 51, 52, 53, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0 }
  uselistorder i32* %ip.global-to-local, { 11, 12, 13, 17, 14, 15, 16, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 21, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 0, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_c288, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c258, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c038, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c2a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c2a4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c2a4 = load i32, i32* @r4, align 4
  %v24_c2a4 = load i32, i32* @fp, align 4
  %v27_c2a4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_c2d0 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_c2d4 = load i32, i32* @r4, align 4
  store i32 %v0_c2d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c2d0, i32* @sl, align 4
  %v0_c2e4 = load i32, i32* @r5, align 4
  store i32 %v0_c2e4, i32* %r0.global-to-local, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2d4 to i32*
  %v5_c2e8 = call i32 @function_9fe8(i32 %v0_c2e4, i32* %v4_c2e8, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c300 = load i32, i32* @r4, align 4
  store i32 %v0_c300, i32* %r1.global-to-local, align 4
  %v0_c304 = load i32, i32* @r5, align 4
  store i32 %v0_c304, i32* %r0.global-to-local, align 4
  %v5_c308 = trunc i32 %v5_c2e8 to i8
  %v6_c30c = inttoptr i32 %v0_c300 to i32*
  %v7_c30c = call i32 @function_9fe8(i32 %v0_c304, i32* %v6_c30c, i32 3, i32 65535)
  %v0_c310 = load i32, i32* @r4, align 4
  store i32 %v0_c310, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c320 = load i32, i32* @r5, align 4
  store i32 %v0_c320, i32* %r0.global-to-local, align 4
  %v5_c324 = inttoptr i32 %v0_c310 to i32*
  %v6_c324 = call i32 @function_9fe8(i32 %v0_c320, i32* %v5_c324, i32 4, i32 64)
  %v1_c32c = urem i32 %v6_c324, 256
  %v0_c330 = load i32, i32* @r4, align 4
  store i32 %v0_c330, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c33c = load i32, i32* @r5, align 4
  store i32 %v0_c33c, i32* %r0.global-to-local, align 4
  %v6_c344 = inttoptr i32 %v0_c330 to i32*
  %v7_c344 = call i32 @function_9fe8(i32 %v0_c33c, i32* %v6_c344, i32 5, i32 1)
  %v1_c350 = urem i32 %v7_c344, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c35c = load i32, i32* @r4, align 4
  store i32 %v0_c35c, i32* %r1.global-to-local, align 4
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r0.global-to-local, align 4
  %v5_c368 = inttoptr i32 %v0_c35c to i32*
  %v6_c368 = call i32 @function_9fe8(i32 %v0_c360, i32* %v5_c368, i32 6, i32 65535)
  %v0_c374 = load i32, i32* @r4, align 4
  store i32 %v0_c374, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c380 = load i32, i32* @r5, align 4
  store i32 %v0_c380, i32* %r0.global-to-local, align 4
  %v5_c384 = inttoptr i32 %v0_c374 to i32*
  %v6_c384 = call i32 @function_9fe8(i32 %v0_c380, i32* %v5_c384, i32 7, i32 65535)
  %v0_c38c = load i32, i32* @r4, align 4
  store i32 %v0_c38c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_c384, i32* %fp.global-to-local, align 4
  %v0_c39c = load i32, i32* @r5, align 4
  store i32 %v0_c39c, i32* %r0.global-to-local, align 4
  %v4_c3a0 = inttoptr i32 %v0_c38c to i32*
  %v5_c3a0 = call i32 @function_9fe8(i32 %v0_c39c, i32* %v4_c3a0, i32 16, i32 65535)
  %v0_c3a4 = load i32, i32* @r4, align 4
  store i32 %v0_c3a4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3b4 = load i32, i32* @r5, align 4
  store i32 %v0_c3b4, i32* %r0.global-to-local, align 4
  %v5_c3b8 = inttoptr i32 %v0_c3a4 to i32*
  %v6_c3b8 = call i32 @function_9fe8(i32 %v0_c3b4, i32* %v5_c3b8, i32 17, i32 0)
  %v0_c3bc = load i32, i32* @r4, align 4
  store i32 %v0_c3bc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3cc = load i32, i32* @r5, align 4
  store i32 %v0_c3cc, i32* %r0.global-to-local, align 4
  %v5_c3d0 = inttoptr i32 %v0_c3bc to i32*
  %v6_c3d0 = call i32 @function_9fe8(i32 %v0_c3cc, i32* %v5_c3d0, i32 10, i32 0)
  %v0_c3d4 = load i32, i32* @r4, align 4
  store i32 %v0_c3d4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3e4 = load i32, i32* @r5, align 4
  store i32 %v0_c3e4, i32* %r0.global-to-local, align 4
  %v5_c3e8 = inttoptr i32 %v0_c3d4 to i32*
  %v6_c3e8 = call i32 @function_9fe8(i32 %v0_c3e4, i32* %v5_c3e8, i32 11, i32 0)
  %v0_c3ec = load i32, i32* @r4, align 4
  store i32 %v0_c3ec, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3fc = load i32, i32* @r5, align 4
  store i32 %v0_c3fc, i32* %r0.global-to-local, align 4
  %v5_c400 = inttoptr i32 %v0_c3ec to i32*
  %v6_c400 = call i32 @function_9fe8(i32 %v0_c3fc, i32* %v5_c400, i32 12, i32 0)
  %v0_c404 = load i32, i32* @r4, align 4
  store i32 %v0_c404, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c414 = load i32, i32* @r5, align 4
  store i32 %v0_c414, i32* %r0.global-to-local, align 4
  %v5_c418 = inttoptr i32 %v0_c404 to i32*
  %v6_c418 = call i32 @function_9fe8(i32 %v0_c414, i32* %v5_c418, i32 13, i32 0)
  %v0_c41c = load i32, i32* @r4, align 4
  store i32 %v0_c41c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c42c = load i32, i32* @r5, align 4
  store i32 %v0_c42c, i32* %r0.global-to-local, align 4
  %v5_c430 = inttoptr i32 %v0_c41c to i32*
  %v6_c430 = call i32 @function_9fe8(i32 %v0_c42c, i32* %v5_c430, i32 14, i32 1)
  %v0_c434 = load i32, i32* @r4, align 4
  store i32 %v0_c434, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c444 = load i32, i32* @r5, align 4
  store i32 %v0_c444, i32* %r0.global-to-local, align 4
  %v5_c448 = inttoptr i32 %v0_c434 to i32*
  %v6_c448 = call i32 @function_9fe8(i32 %v0_c444, i32* %v5_c448, i32 15, i32 0)
  %v0_c450 = load i32, i32* @r4, align 4
  store i32 %v0_c450, i32* %r1.global-to-local, align 4
  %v2_c454 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_c454, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_c460 = load i32, i32* @r5, align 4
  store i32 %v0_c460, i32* %r0.global-to-local, align 4
  %v5_c464 = inttoptr i32 %v0_c450 to i32*
  %v6_c464 = call i32 @function_9f7c(i32 %v0_c460, i32* %v5_c464, i32 24, i32 %v2_c454, i32 %v6_c448)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c470 = call i32 @function_12d34(i32* null)
  %v1_c474 = load i32, i32* @r6, align 4
  %v2_c474 = add i32 %v1_c474, %v2_c470
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c488 = call i32 @function_138c4(i32 2, i32 3, i32 6)
  store i32 %v3_c488, i32* %r0.global-to-local, align 4
  %v7_c48c = icmp eq i32 %v3_c488, -1
  store i1 %v7_c48c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c488, i32* @r8, align 4
  br i1 %v7_c48c, label %dec_label_pc_c960, label %dec_label_pc_c498

dec_label_pc_c498:                                ; preds = %dec_label_pc_c2a4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c4a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c4a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c4b4 = call i32 @function_13880(i32 %v3_c488, i32 0, i32 3, i32 %v6_c4a0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c4b4, i32* %r0.global-to-local, align 4
  %v7_c4b8 = icmp eq i32 %v5_c4b4, -1
  store i1 %v7_c4b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c4b8, label %dec_label_pc_c96c, label %dec_label_pc_c4c0

dec_label_pc_c4c0:                                ; preds = %dec_label_pc_c498
  %v3_c4cc = mul i32 %v7_c30c, 65536
  store i32 %v3_c4cc, i32* %r0.global-to-local, align 4
  %v0_c4d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c3d0, i32* %r1.global-to-local, align 4
  %v3_c4e0 = urem i32 %v7_c30c, 65536
  store i32 %v3_c4e0, i32* %r2.global-to-local, align 4
  %v3_c4e4 = urem i32 %v6_c368, 65536
  store i32 %v3_c4e4, i32* %r3.global-to-local, align 4
  %v3_c4e8 = urem i32 %v0_c4d4, 65536
  %v0_c4ec = load i32, i32* @sb, align 4
  %v2_c4ec = icmp eq i32 %v0_c4ec, 0
  store i1 %v2_c4ec, i1* %cpsr_z.global-to-local, align 1
  %v1_c4fc = urem i32 %v6_c3d0, 256
  store i32 %v1_c4fc, i32* @fp, align 4
  br i1 %v2_c4ec, label %dec_label_pc_c750.preheader, label %dec_label_pc_c504

dec_label_pc_c504:                                ; preds = %dec_label_pc_c4c0
  %trunc = trunc i32 %v7_c30c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_c4e4, 256
  %v3_c530 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_c4d4, 256
  %v3_c534 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v5_c3a0, 256
  %v3_c538 = and i32 %tmp62, 65280
  %v1_c53c = urem i32 %v6_c3d0, 2
  %tmp63 = udiv i32 %v6_c368, 256
  %v4_c540 = urem i32 %tmp63, 256
  %v5_c540 = or i32 %v3_c530, %v4_c540
  %tmp64 = udiv i32 %v0_c4d4, 256
  %v4_c544 = urem i32 %tmp64, 256
  %v5_c544 = or i32 %v4_c544, %v3_c534
  store i32 %v5_c544, i32* @r5, align 4
  %tmp65 = udiv i32 %v5_c3a0, 256
  %v4_c548 = urem i32 %tmp65, 256
  %v5_c548 = or i32 %v4_c548, %v3_c538
  store i32 %v5_c548, i32* @lr, align 4
  %v1_c55c = urem i32 %v6_c3e8, 2
  store i32 %v1_c55c, i32* %r1.global-to-local, align 4
  %v1_c560 = urem i32 %v6_c400, 2
  store i32 %v1_c560, i32* %r2.global-to-local, align 4
  %v1_c564 = urem i32 %v6_c418, 2
  store i32 %v1_c564, i32* %r3.global-to-local, align 4
  %v1_c568 = urem i32 %v6_c430, 2
  store i32 %v1_c568, i32* @r6, align 4
  %v1_c56c = urem i32 %v6_c448, 2
  store i32 %v1_c56c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c5e8 = trunc i32 %v6_c324 to i8
  %sext6 = mul nuw i32 %v5_c540, 65536
  %v4_c614 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_c544, 65536
  %v6_c650 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_c55c
  %v4_c668 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_c560
  %v4_c680 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_c564
  %v4_c694 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_c568
  %v3_c6a8 = and i32 %tmp68, 2
  br label %dec_label_pc_c594

dec_label_pc_c594:                                ; preds = %.thread, %dec_label_pc_c504
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c59c = call i32 @function_1442c(i32 128, i32 1)
  store i32 %v2_c59c, i32* %r0.global-to-local, align 4
  %v3_c5a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c5a0, i32* %r2.global-to-local, align 4
  %v1_c5a4 = load i32, i32* @sl, align 4
  %v2_c5a4 = load i32, i32* @r4, align 4
  %v5_c5a4 = mul i32 %v2_c5a4, 4
  %v6_c5a4 = add i32 %v5_c5a4, %v1_c5a4
  %v7_c5a4 = inttoptr i32 %v6_c5a4 to i32*
  store i32 %v2_c59c, i32* %v7_c5a4, align 4
  %v0_c5a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c5a8 = mul i32 %v0_c5a8, 32
  store i32 %v3_c5a8, i32* %r3.global-to-local, align 4
  %v0_c5ac = load i32, i32* @sl, align 4
  %v4_c5ac = mul i32 %v0_c5a8, 4
  %v5_c5ac = add i32 %v0_c5ac, %v4_c5ac
  %v6_c5ac = inttoptr i32 %v5_c5ac to i32*
  %v7_c5ac = load i32, i32* %v6_c5ac, align 4
  store i32 %v7_c5ac, i32* %r4.global-to-local, align 4
  %v5_c5b0 = mul i32 %v0_c5a8, 24
  store i32 %v5_c5b0, i32* %r3.global-to-local, align 4
  %v1_c5b4 = load i32, i32* @r7, align 4
  %v2_c5b4 = add i32 %v1_c5b4, %v5_c5b0
  store i32 %v2_c5b4, i32* %r0.global-to-local, align 4
  %v1_c5b8 = inttoptr i32 %v7_c5ac to i8*
  %v2_c5b8 = load i8, i8* %v1_c5b8, align 1
  %tmp69 = urem i8 %v2_c5b8, 16
  %v1_c5bc = zext i8 %tmp69 to i32
  %v1_c5c0 = or i32 %v1_c5bc, 64
  store i32 %v1_c5c0, i32* %r3.global-to-local, align 4
  %v1_c5c4 = trunc i32 %v1_c5c0 to i8
  store i8 %v1_c5c4, i8* %v1_c5b8, align 1
  %v0_c5c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c5c8 = inttoptr i32 %v0_c5c8 to i8*
  %v2_c5c8 = load i8, i8* %v1_c5c8, align 1
  %v1_c5cc = and i8 %v2_c5c8, -16
  %v1_c5d0 = or i8 %v1_c5cc, 5
  store i32 %v1_c350, i32* %r1.global-to-local, align 4
  store i8 %v1_c5d0, i8* %v1_c5c8, align 1
  %v2_c5e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 1
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v5_c308, i8* %v4_c5e0, align 1
  store i32 %v1_c32c, i32* %r3.global-to-local, align 4
  %v2_c5e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5e8 = add i32 %v2_c5e8, 8
  %v4_c5e8 = inttoptr i32 %v3_c5e8 to i8*
  store i8 %v1_c5e8, i8* %v4_c5e8, align 1
  %v0_c5f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c5f0 = icmp eq i32 %v0_c5f0, 0
  store i1 %v2_c5f0, i1* %cpsr_z.global-to-local, align 1
  %v2_c5f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5f4 = add i32 %v2_c5f4, 4
  %v4_c5f4 = inttoptr i32 %v3_c5f4 to i16*
  store i16 %rev, i16* %v4_c5f4, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_c5fc = load i32, i32* %r4.global-to-local, align 4
  %v3_c5fc = add i32 %v2_c5fc, 9
  %v4_c5fc = inttoptr i32 %v3_c5fc to i8*
  store i8 6, i8* %v4_c5fc, align 1
  %v0_c600 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c600, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c594
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c604 = load i32, i32* %r4.global-to-local, align 4
  %v4_c604 = add i32 %v3_c604, 6
  %v5_c604 = inttoptr i32 %v4_c604 to i16*
  store i16 64, i16* %v5_c604, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c594, %bb
  store i32 %v6_c464, i32* %r3.global-to-local, align 4
  %v1_c60c = load i32, i32* %r4.global-to-local, align 4
  %v2_c60c = add i32 %v1_c60c, 12
  %v3_c60c = inttoptr i32 %v2_c60c to i32*
  store i32 %v6_c464, i32* %v3_c60c, align 4
  %v0_c610 = load i32, i32* %r0.global-to-local, align 4
  %v1_c610 = add i32 %v0_c610, 16
  %v2_c610 = inttoptr i32 %v1_c610 to i32*
  %v3_c610 = load i32, i32* %v2_c610, align 4
  store i32 %v3_c610, i32* %r3.global-to-local, align 4
  store i32 %v4_c614, i32* %r0.global-to-local, align 4
  %v2_c61c = load i32, i32* %r4.global-to-local, align 4
  %v3_c61c = add i32 %v2_c61c, 2
  %v4_c61c = inttoptr i32 %v3_c61c to i16*
  store i16 15360, i16* %v4_c61c, align 2
  %v0_c620 = load i32, i32* %r3.global-to-local, align 4
  %v1_c620 = load i32, i32* %r4.global-to-local, align 4
  %v2_c620 = add i32 %v1_c620, 16
  %v3_c620 = inttoptr i32 %v2_c620 to i32*
  store i32 %v0_c620, i32* %v3_c620, align 4
  %v0_c624 = load i32, i32* %r0.global-to-local, align 4
  %v1_c624 = trunc i32 %v0_c624 to i16
  %v2_c624 = load i32, i32* %r4.global-to-local, align 4
  %v3_c624 = add i32 %v2_c624, 20
  %v4_c624 = inttoptr i32 %v3_c624 to i16*
  store i16 %v1_c624, i16* %v4_c624, align 2
  %v0_c628 = load i32, i32* %r4.global-to-local, align 4
  %v1_c628 = add i32 %v0_c628, 20
  store i32 %v1_c628, i32* %r1.global-to-local, align 4
  %v1_c62c = add i32 %v0_c628, 32
  %v2_c62c = inttoptr i32 %v1_c62c to i8*
  %v3_c62c = load i8, i8* %v2_c62c, align 1
  %v4_c62c = zext i8 %v3_c62c to i32
  store i32 %v4_c62c, i32* %r3.global-to-local, align 4
  %v1_c630 = add i32 %v0_c628, 33
  %v2_c630 = inttoptr i32 %v1_c630 to i8*
  %v3_c630 = load i8, i8* %v2_c630, align 1
  %v4_c630 = zext i8 %v3_c630 to i32
  store i32 %v1_c53c, i32* %r0.global-to-local, align 4
  %v1_c638 = urem i8 %v3_c62c, 16
  %v1_c63c = or i8 %v1_c638, -96
  %v1_c640 = and i32 %v4_c630, 223
  store i32 %v1_c640, i32* %r2.global-to-local, align 4
  store i8 %v1_c63c, i8* %v2_c62c, align 1
  %v0_c648 = load i32, i32* %r2.global-to-local, align 4
  %v1_c648 = load i32, i32* %r0.global-to-local, align 4
  %v4_c648 = mul i32 %v1_c648, 32
  %v5_c648 = or i32 %v4_c648, %v0_c648
  store i32 %v5_c648, i32* %r2.global-to-local, align 4
  store i32 %v5_c548, i32* %r0.global-to-local, align 4
  store i32 %v6_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = trunc i32 %v5_c648 to i8
  %v2_c654 = load i32, i32* %r1.global-to-local, align 4
  %v3_c654 = add i32 %v2_c654, 13
  %v4_c654 = inttoptr i32 %v3_c654 to i8*
  store i8 %v1_c654, i8* %v4_c654, align 1
  %v0_c658 = load i32, i32* %r3.global-to-local, align 4
  %v1_c658 = trunc i32 %v0_c658 to i16
  %v2_c658 = load i32, i32* %r1.global-to-local, align 4
  %v3_c658 = add i32 %v2_c658, 2
  %v4_c658 = inttoptr i32 %v3_c658 to i16*
  store i16 %v1_c658, i16* %v4_c658, align 2
  %v0_c65c = load i32, i32* %r1.global-to-local, align 4
  %v1_c65c = add i32 %v0_c65c, 13
  %v2_c65c = inttoptr i32 %v1_c65c to i8*
  %v3_c65c = load i8, i8* %v2_c65c, align 1
  %v4_c65c = zext i8 %v3_c65c to i32
  store i32 %v1_c55c, i32* %r2.global-to-local, align 4
  %v1_c664 = and i32 %v4_c65c, 239
  %v5_c668 = or i32 %v1_c664, %v4_c668
  store i32 %v5_c668, i32* %r3.global-to-local, align 4
  %v0_c66c = load i32, i32* %r0.global-to-local, align 4
  %v2_c66c = add i32 %v0_c65c, 4
  %v3_c66c = inttoptr i32 %v2_c66c to i32*
  store i32 %v0_c66c, i32* %v3_c66c, align 4
  %v0_c670 = load i32, i32* %r3.global-to-local, align 4
  %v1_c670 = trunc i32 %v0_c670 to i8
  %v2_c670 = load i32, i32* %r1.global-to-local, align 4
  %v3_c670 = add i32 %v2_c670, 13
  %v4_c670 = inttoptr i32 %v3_c670 to i8*
  store i8 %v1_c670, i8* %v4_c670, align 1
  %v0_c674 = load i32, i32* %r1.global-to-local, align 4
  %v1_c674 = add i32 %v0_c674, 13
  %v2_c674 = inttoptr i32 %v1_c674 to i8*
  %v3_c674 = load i8, i8* %v2_c674, align 1
  %v4_c674 = zext i8 %v3_c674 to i32
  store i32 %v1_c560, i32* %r3.global-to-local, align 4
  %v1_c67c = and i32 %v4_c674, 247
  %v5_c680 = or i32 %v1_c67c, %v4_c680
  store i32 %v5_c680, i32* %r2.global-to-local, align 4
  %v1_c684 = trunc i32 %v5_c680 to i8
  store i8 %v1_c684, i8* %v2_c674, align 1
  %v0_c688 = load i32, i32* %r1.global-to-local, align 4
  %v1_c688 = add i32 %v0_c688, 13
  %v2_c688 = inttoptr i32 %v1_c688 to i8*
  %v3_c688 = load i8, i8* %v2_c688, align 1
  %v4_c688 = zext i8 %v3_c688 to i32
  store i32 %v1_c564, i32* %r0.global-to-local, align 4
  %v1_c690 = and i32 %v4_c688, 251
  %v5_c694 = or i32 %v1_c690, %v4_c694
  store i32 %v5_c694, i32* %r3.global-to-local, align 4
  %v1_c698 = trunc i32 %v5_c694 to i8
  store i8 %v1_c698, i8* %v2_c688, align 1
  %v0_c69c = load i32, i32* %r1.global-to-local, align 4
  %v1_c69c = add i32 %v0_c69c, 13
  %v2_c69c = inttoptr i32 %v1_c69c to i8*
  %v3_c69c = load i8, i8* %v2_c69c, align 1
  %v4_c69c = zext i8 %v3_c69c to i32
  store i32 %v1_c568, i32* %r3.global-to-local, align 4
  %v1_c6a4 = and i32 %v4_c69c, 253
  %v4_c6a8 = or i32 %v1_c6a4, %v3_c6a8
  store i32 %v4_c6a8, i32* %r2.global-to-local, align 4
  %v1_c6ac = trunc i32 %v4_c6a8 to i8
  store i8 %v1_c6ac, i8* %v2_c69c, align 1
  %v0_c6b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6b0 = add i32 %v0_c6b0, 13
  %v2_c6b0 = inttoptr i32 %v1_c6b0 to i8*
  %v3_c6b0 = load i8, i8* %v2_c6b0, align 1
  %v4_c6b0 = zext i8 %v3_c6b0 to i32
  store i32 %v1_c56c, i32* %r0.global-to-local, align 4
  %v1_c6b8 = and i32 %v4_c6b0, 254
  %v2_c6bc = or i32 %v1_c6b8, %v1_c56c
  store i32 %v2_c6bc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_c6c8 = trunc i32 %v2_c6bc to i8
  store i8 %v1_c6c8, i8* %v2_c6b0, align 1
  %v0_c6cc = load i32, i32* @r5, align 4
  %v1_c6cc = trunc i32 %v0_c6cc to i8
  %v2_c6cc = load i32, i32* %r4.global-to-local, align 4
  %v3_c6cc = add i32 %v2_c6cc, 40
  %v4_c6cc = inttoptr i32 %v3_c6cc to i8*
  store i8 %v1_c6cc, i8* %v4_c6cc, align 1
  %v0_c6d0 = load i32, i32* @r6, align 4
  %v1_c6d0 = trunc i32 %v0_c6d0 to i8
  %v2_c6d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6d0 = add i32 %v2_c6d0, 41
  %v4_c6d0 = inttoptr i32 %v3_c6d0 to i8*
  store i8 %v1_c6d0, i8* %v4_c6d0, align 1
  %v0_c6d4 = call i32 @function_f190()
  %v1_c6d8 = urem i32 %v0_c6d4, 16
  %v1_c6dc = or i32 %v1_c6d8, 1392
  %v1_c6e0 = add nuw nsw i32 %v1_c6dc, 8
  %v3_c6e4 = mul nuw nsw i32 %v1_c6e0, 65536
  store i32 %v3_c6e4, i32* %r0.global-to-local, align 4
  %v3_c6e8 = mul nuw nsw i32 %v1_c6e0, 256
  %v5_c6f0 = or i32 %v3_c6e8, 5
  %v1_c6f4 = trunc i32 %v5_c6f0 to i16
  %v2_c6f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6f4 = add i32 %v2_c6f4, 42
  %v4_c6f4 = inttoptr i32 %v3_c6f4 to i16*
  store i16 %v1_c6f4, i16* %v4_c6f4, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c700 = load i32, i32* %r4.global-to-local, align 4
  %v3_c700 = add i32 %v2_c700, 46
  %v4_c700 = inttoptr i32 %v3_c700 to i8*
  store i8 8, i8* %v4_c700, align 1
  %v0_c704 = load i32, i32* %r2.global-to-local, align 4
  %v1_c704 = trunc i32 %v0_c704 to i8
  %v2_c704 = load i32, i32* %r4.global-to-local, align 4
  %v3_c704 = add i32 %v2_c704, 47
  %v4_c704 = inttoptr i32 %v3_c704 to i8*
  store i8 %v1_c704, i8* %v4_c704, align 1
  %v0_c708 = load i32, i32* @r6, align 4
  %v1_c708 = trunc i32 %v0_c708 to i8
  %v2_c708 = load i32, i32* %r4.global-to-local, align 4
  %v3_c708 = add i32 %v2_c708, 44
  %v4_c708 = inttoptr i32 %v3_c708 to i8*
  store i8 %v1_c708, i8* %v4_c708, align 1
  %v0_c70c = load i32, i32* @r5, align 4
  %v1_c70c = trunc i32 %v0_c70c to i8
  %v2_c70c = load i32, i32* %r4.global-to-local, align 4
  %v3_c70c = add i32 %v2_c70c, 45
  %v4_c70c = inttoptr i32 %v3_c70c to i8*
  store i8 %v1_c70c, i8* %v4_c70c, align 1
  %v0_c710 = call i32 @function_f190()
  store i32 %v0_c710, i32* %r0.global-to-local, align 4
  %v2_c718 = load i32, i32* %r4.global-to-local, align 4
  %v3_c718 = add i32 %v2_c718, 59
  %v4_c718 = inttoptr i32 %v3_c718 to i8*
  store i8 6, i8* %v4_c718, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c728 = load i32, i32* %r4.global-to-local, align 4
  %v2_c728 = add i32 %v1_c728, 48
  %v3_c728 = inttoptr i32 %v2_c728 to i32*
  store i32 %v0_c710, i32* %v3_c728, align 4
  %v0_c72c = load i32, i32* %r3.global-to-local, align 4
  %v1_c72c = load i32, i32* %r4.global-to-local, align 4
  %v2_c72c = add i32 %v1_c72c, 52
  %v3_c72c = inttoptr i32 %v2_c72c to i32*
  store i32 %v0_c72c, i32* %v3_c72c, align 4
  %v0_c730 = load i32, i32* %r2.global-to-local, align 4
  %v1_c730 = trunc i32 %v0_c730 to i8
  %v2_c730 = load i32, i32* %r4.global-to-local, align 4
  %v3_c730 = add i32 %v2_c730, 56
  %v4_c730 = inttoptr i32 %v3_c730 to i8*
  store i8 %v1_c730, i8* %v4_c730, align 1
  %v0_c734 = load i32, i32* %r1.global-to-local, align 4
  %v1_c734 = trunc i32 %v0_c734 to i8
  %v2_c734 = load i32, i32* %r4.global-to-local, align 4
  %v3_c734 = add i32 %v2_c734, 58
  %v4_c734 = inttoptr i32 %v3_c734 to i8*
  store i8 %v1_c734, i8* %v4_c734, align 1
  %v0_c738 = load i32, i32* %r1.global-to-local, align 4
  %v1_c738 = trunc i32 %v0_c738 to i8
  %v2_c738 = load i32, i32* %r4.global-to-local, align 4
  %v3_c738 = add i32 %v2_c738, 57
  %v4_c738 = inttoptr i32 %v3_c738 to i8*
  store i8 %v1_c738, i8* %v4_c738, align 1
  %v3_c73c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c73c, i32* %r3.global-to-local, align 4
  %v1_c740 = load i32, i32* %r2.global-to-local, align 4
  %v2_c740 = add i32 %v1_c740, %v3_c73c
  store i32 %v2_c740, i32* @r4, align 4
  %v1_c744 = load i32, i32* @sb, align 4
  %v9_c744 = icmp eq i32 %v2_c740, %v1_c744
  store i1 %v9_c744, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c740, i32* %stack_var_-44, align 4
  %v5_c74c = icmp slt i32 %v2_c740, %v1_c744
  br i1 %v5_c74c, label %dec_label_pc_c594, label %dec_label_pc_c750.preheader

dec_label_pc_c750.preheader:                      ; preds = %.thread, %dec_label_pc_c4c0
  %v0_c75410 = phi i32 [ 0, %dec_label_pc_c4c0 ], [ %v1_c744, %.thread ]
  %v2_c76c = icmp eq i32 %v6_c464, -1
  %v7_c76c = icmp eq i32 %v6_c464, -1
  %v3_c780 = icmp eq i32 %v3_c4e0, 65535
  br label %dec_label_pc_c750

dec_label_pc_c750:                                ; preds = %dec_label_pc_c94c.dec_label_pc_c750_crit_edge, %dec_label_pc_c750.preheader
  %v0_c754 = phi i32 [ %v0_c754.pre, %dec_label_pc_c94c.dec_label_pc_c750_crit_edge ], [ %v0_c75410, %dec_label_pc_c750.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c754 = icmp eq i32 %v0_c754, 0
  store i1 %v2_c754, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c754, label %dec_label_pc_c94c, label %dec_label_pc_c760

dec_label_pc_c760:                                ; preds = %dec_label_pc_c750
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c844

dec_label_pc_c768:                                ; preds = %dec_label_pc_c844
  store i32 %v6_c464, i32* %r3.global-to-local, align 4
  store i1 %v7_c76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c76c, label %dec_label_pc_c8c4, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c864, %dec_label_pc_c768
  store i32 %v3_c4e0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c780, label %dec_label_pc_c8e0, label %dec_label_pc_c788

dec_label_pc_c788:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c774
  %v1_c78c = phi i32 [ %v1_c8d4, %dec_label_pc_c8c4 ], [ 65535, %dec_label_pc_c774 ]
  store i32 %v3_c4e4, i32* %r1.global-to-local, align 4
  %v9_c78c = icmp eq i32 %v3_c4e4, %v1_c78c
  store i1 %v9_c78c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c78c, label %dec_label_pc_c8f4, label %dec_label_pc_c794

dec_label_pc_c794:                                ; preds = %dec_label_pc_c8e0.dec_label_pc_c794_crit_edge, %dec_label_pc_c788
  %v1_c798 = phi i32 [ %v1_c798.pre, %dec_label_pc_c8e0.dec_label_pc_c794_crit_edge ], [ %v1_c78c, %dec_label_pc_c788 ]
  store i32 %v3_c4e8, i32* %r2.global-to-local, align 4
  %v9_c798 = icmp eq i32 %v3_c4e8, %v1_c798
  store i1 %v9_c798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c798, label %dec_label_pc_c908, label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c8f4.dec_label_pc_c7a0_crit_edge, %dec_label_pc_c794
  %v1_c7a4 = phi i32 [ %v1_c7a4.pre, %dec_label_pc_c8f4.dec_label_pc_c7a0_crit_edge ], [ %v1_c798, %dec_label_pc_c794 ]
  store i32 %v5_c3a0, i32* %r3.global-to-local, align 4
  %v9_c7a4 = icmp eq i32 %v5_c3a0, %v1_c7a4
  store i1 %v9_c7a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7a4, label %dec_label_pc_c91c, label %dec_label_pc_c7ac

dec_label_pc_c7ac:                                ; preds = %dec_label_pc_c908.dec_label_pc_c7ac_crit_edge, %dec_label_pc_c7a0
  %v1_c7b0 = phi i32 [ %v1_c7b0.pre, %dec_label_pc_c908.dec_label_pc_c7ac_crit_edge ], [ %v1_c7a4, %dec_label_pc_c7a0 ]
  store i32 %v6_c3b8, i32* %r0.global-to-local, align 4
  %v9_c7b0 = icmp eq i32 %v6_c3b8, %v1_c7b0
  store i1 %v9_c7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7b0, label %dec_label_pc_c930, label %dec_label_pc_c7b8

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c91c, %dec_label_pc_c7ac
  %v0_c7b8 = load i32, i32* @fp, align 4
  %v2_c7b8 = icmp eq i32 %v0_c7b8, 0
  store i1 %v2_c7b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7b8, label %dec_label_pc_c7c0, label %dec_label_pc_c940

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b8, %dec_label_pc_c930, %dec_label_pc_c940
  %v2_c7c4 = load i32, i32* @r5, align 4
  %v3_c7c4 = add i32 %v2_c7c4, 10
  %v4_c7c4 = inttoptr i32 %v3_c7c4 to i16*
  store i16 0, i16* %v4_c7c4, align 2
  %v0_c7c8 = load i32, i32* @r5, align 4
  store i32 %v0_c7c8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c7d0 = call i32 @function_dd58(i32 %v0_c7c8, i32 20)
  %v3_c7d0 = trunc i32 %v2_c7d0 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c7d8 = load i32, i32* @r5, align 4
  %v4_c7d8 = add i32 %v3_c7d8, 10
  %v5_c7d8 = inttoptr i32 %v4_c7d8 to i16*
  store i16 %v3_c7d0, i16* %v5_c7d8, align 2
  %v0_c7dc = load i32, i32* @r6, align 4
  store i32 %v0_c7dc, i32* @r1, align 4
  %v0_c7e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7e0 = trunc i32 %v0_c7e0 to i16
  %v3_c7e0 = add i32 %v0_c7dc, 16
  %v4_c7e0 = inttoptr i32 %v3_c7e0 to i16*
  store i16 %v1_c7e0, i16* %v4_c7e0, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c7ec = load i32, i32* @r5, align 4
  store i32 %v0_c7ec, i32* %r0.global-to-local, align 4
  %v4_c7f0 = call i32 @function_dda8(i32 %v0_c7ec, i32 %v0_c7dc, i32 10240, i32 40)
  %v5_c7f0 = trunc i32 %v4_c7f0 to i16
  store i32 %v4_c7f0, i32* %r0.global-to-local, align 4
  %v3_c7f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7f4, i32* %r3.global-to-local, align 4
  %v3_c7f8 = mul i32 %v3_c7f4, 32
  store i32 %v3_c7f8, i32* %lr.global-to-local, align 4
  %v3_c7fc = load i32, i32* @r6, align 4
  %v4_c7fc = add i32 %v3_c7fc, 16
  %v5_c7fc = inttoptr i32 %v4_c7fc to i16*
  store i16 %v5_c7f0, i16* %v5_c7fc, align 2
  %v0_c800 = load i32, i32* %lr.global-to-local, align 4
  %v1_c800 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_c800, -8
  %v5_c800 = add i32 %v0_c800, %tmp70
  store i32 %v5_c800, i32* %lr.global-to-local, align 4
  %v0_c804 = load i32, i32* @r6, align 4
  %v1_c804 = add i32 %v0_c804, 2
  %v2_c804 = inttoptr i32 %v1_c804 to i16*
  %v3_c804 = load i16, i16* %v2_c804, align 2
  %v1_c808 = load i32, i32* @r7, align 4
  %v2_c808 = add i32 %v1_c808, %v5_c800
  store i32 %v2_c808, i32* @lr, align 4
  %v3_c80c = add i32 %v2_c808, 2
  %v4_c80c = inttoptr i32 %v3_c80c to i16*
  store i16 %v3_c804, i16* %v4_c80c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c818 = load i32, i32* @r5, align 4
  store i32 %v0_c818, i32* %r1.global-to-local, align 4
  %v0_c81c = load i32, i32* @r8, align 4
  store i32 %v0_c81c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c824 = load i32, i32* @lr, align 4
  %v6_c82c = call i32 @function_13840(i32 %v0_c81c, i32 %v0_c818, i32 60, i32 16384, i32 %v0_c824, i32 16)
  %v3_c830 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c830, i32* %r3.global-to-local, align 4
  %v1_c834 = add i32 %v3_c830, 1
  store i32 %v1_c834, i32* %r0.global-to-local, align 4
  %v1_c838 = load i32, i32* @sb, align 4
  %v9_c838 = icmp eq i32 %v1_c834, %v1_c838
  store i1 %v9_c838, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c834, i32* %stack_var_-44, align 4
  %v6_c840 = icmp slt i32 %v1_c834, %v1_c838
  br i1 %v6_c840, label %dec_label_pc_c844, label %dec_label_pc_c94c

dec_label_pc_c844:                                ; preds = %dec_label_pc_c7c0, %dec_label_pc_c760
  %v1_c854 = phi i32 [ %v1_c834, %dec_label_pc_c7c0 ], [ 0, %dec_label_pc_c760 ]
  %v5_c848 = mul i32 %v1_c854, 24
  %v1_c84c = load i32, i32* @r7, align 4
  %v2_c84c = add i32 %v1_c84c, %v5_c848
  store i32 %v2_c84c, i32* %r3.global-to-local, align 4
  %v1_c850 = add i32 %v2_c84c, 20
  %v2_c850 = inttoptr i32 %v1_c850 to i8*
  %v3_c850 = load i8, i8* %v2_c850, align 1
  %v4_c850 = zext i8 %v3_c850 to i32
  store i32 %v4_c850, i32* %r2.global-to-local, align 4
  %v0_c854 = load i32, i32* @sl, align 4
  %v4_c854 = mul i32 %v1_c854, 4
  %v5_c854 = add i32 %v0_c854, %v4_c854
  %v6_c854 = inttoptr i32 %v5_c854 to i32*
  %v7_c854 = load i32, i32* %v6_c854, align 4
  store i32 %v7_c854, i32* @r5, align 4
  %v2_c858 = icmp ugt i8 %v3_c850, 30
  %v7_c858 = icmp eq i8 %v3_c850, 31
  store i1 %v7_c858, i1* %cpsr_z.global-to-local, align 1
  %v1_c85c = add i32 %v7_c854, 20
  store i32 %v1_c85c, i32* @r6, align 4
  %v2_c860 = xor i1 %v7_c858, true
  %v3_c860 = and i1 %v2_c858, %v2_c860
  br i1 %v3_c860, label %dec_label_pc_c768, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c844
  %v1_c864 = add i32 %v2_c84c, 16
  %v2_c864 = inttoptr i32 %v1_c864 to i32*
  %v3_c864 = load i32, i32* %v2_c864, align 4
  store i32 %v3_c864, i32* %r4.global-to-local, align 4
  %v0_c868 = call i32 @function_f190()
  store i32 %v0_c868, i32* %r0.global-to-local, align 4
  %v3_c86c = load i32, i32* %stack_var_-44, align 4
  %v5_c874 = mul i32 %v3_c86c, 24
  %v0_c878 = load i32, i32* %r4.global-to-local, align 4
  %v1_c878 = and i32 %v0_c878, 16711680
  %v3_c87c = udiv i32 %v0_c878, 16777216
  %v4_c880 = udiv i32 %v1_c878, 256
  %v5_c880 = or i32 %v4_c880, %v3_c87c
  store i32 %v5_c880, i32* %r2.global-to-local, align 4
  %v1_c884 = load i32, i32* @r7, align 4
  %v2_c884 = add i32 %v1_c884, %v5_c874
  store i32 %v2_c884, i32* %r1.global-to-local, align 4
  %v1_c888 = and i32 %v0_c878, 65280
  store i32 %v1_c888, i32* %r3.global-to-local, align 4
  %v1_c88c = add i32 %v2_c884, 20
  %v2_c88c = inttoptr i32 %v1_c88c to i8*
  %v3_c88c = load i8, i8* %v2_c88c, align 1
  %v4_c88c = zext i8 %v3_c88c to i32
  %v5_c894 = call i32 @llvm.bswap.i32(i32 %v0_c878)
  %v7_c898 = lshr i32 %v0_c868, %v4_c88c
  %v8_c898 = add i32 %v7_c898, %v5_c894
  store i32 %v8_c898, i32* %r2.global-to-local, align 4
  %v1_c89c = and i32 %v8_c898, 16711680
  store i32 %v1_c89c, i32* %r0.global-to-local, align 4
  %v1_c8a8 = and i32 %v8_c898, 65280
  store i32 %v1_c8a8, i32* %r1.global-to-local, align 4
  %v5_c8b0 = call i32 @llvm.bswap.i32(i32 %v8_c898)
  %v1_c8b4 = load i32, i32* @r5, align 4
  %v2_c8b4 = add i32 %v1_c8b4, 16
  %v3_c8b4 = inttoptr i32 %v2_c8b4 to i32*
  store i32 %v5_c8b0, i32* %v3_c8b4, align 4
  store i32 %v6_c464, i32* %r3.global-to-local, align 4
  store i1 %v7_c76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c76c, label %dec_label_pc_c8c4, label %dec_label_pc_c774

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c864, %dec_label_pc_c768
  %v0_c8c4 = call i32 @function_f190()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c8cc = load i32, i32* @r5, align 4
  %v2_c8cc = add i32 %v1_c8cc, 12
  %v3_c8cc = inttoptr i32 %v2_c8cc to i32*
  store i32 %v0_c8c4, i32* %v3_c8cc, align 4
  store i32 %v3_c4e0, i32* %r0.global-to-local, align 4
  %v0_c8d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_c8d4 = add i32 %v0_c8d4, -1
  store i32 %v1_c8d4, i32* @r4, align 4
  %v9_c8d8 = icmp eq i32 %v3_c4e0, %v1_c8d4
  store i1 %v9_c8d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c8d8, label %dec_label_pc_c8e0, label %dec_label_pc_c788

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c774
  %v0_c8e0 = call i32 @function_f190()
  %v1_c8e0 = trunc i32 %v0_c8e0 to i16
  store i32 %v0_c8e0, i32* %r0.global-to-local, align 4
  store i32 %v3_c4e4, i32* %r1.global-to-local, align 4
  %v1_c8e8 = load i32, i32* @r4, align 4
  %v9_c8e8 = icmp eq i32 %v3_c4e4, %v1_c8e8
  store i1 %v9_c8e8, i1* %cpsr_z.global-to-local, align 1
  %v3_c8ec = load i32, i32* @r5, align 4
  %v4_c8ec = add i32 %v3_c8ec, 4
  %v5_c8ec = inttoptr i32 %v4_c8ec to i16*
  store i16 %v1_c8e0, i16* %v5_c8ec, align 2
  br i1 %v9_c8e8, label %dec_label_pc_c8f4, label %dec_label_pc_c8e0.dec_label_pc_c794_crit_edge

dec_label_pc_c8e0.dec_label_pc_c794_crit_edge:    ; preds = %dec_label_pc_c8e0
  %v1_c798.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c794

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c788
  %v0_c8f4 = call i32 @function_f190()
  %v1_c8f4 = trunc i32 %v0_c8f4 to i16
  store i32 %v0_c8f4, i32* %r0.global-to-local, align 4
  store i32 %v3_c4e8, i32* %r2.global-to-local, align 4
  %v1_c8fc = load i32, i32* @r4, align 4
  %v9_c8fc = icmp eq i32 %v3_c4e8, %v1_c8fc
  store i1 %v9_c8fc, i1* %cpsr_z.global-to-local, align 1
  %v3_c900 = load i32, i32* @r5, align 4
  %v4_c900 = add i32 %v3_c900, 20
  %v5_c900 = inttoptr i32 %v4_c900 to i16*
  store i16 %v1_c8f4, i16* %v5_c900, align 2
  br i1 %v9_c8fc, label %dec_label_pc_c908, label %dec_label_pc_c8f4.dec_label_pc_c7a0_crit_edge

dec_label_pc_c8f4.dec_label_pc_c7a0_crit_edge:    ; preds = %dec_label_pc_c8f4
  %v1_c7a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7a0

dec_label_pc_c908:                                ; preds = %dec_label_pc_c8f4, %dec_label_pc_c794
  %v0_c908 = call i32 @function_f190()
  %v1_c908 = trunc i32 %v0_c908 to i16
  store i32 %v0_c908, i32* %r0.global-to-local, align 4
  store i32 %v5_c3a0, i32* %r3.global-to-local, align 4
  %v1_c910 = load i32, i32* @r4, align 4
  %v9_c910 = icmp eq i32 %v5_c3a0, %v1_c910
  store i1 %v9_c910, i1* %cpsr_z.global-to-local, align 1
  %v3_c914 = load i32, i32* @r6, align 4
  %v4_c914 = add i32 %v3_c914, 2
  %v5_c914 = inttoptr i32 %v4_c914 to i16*
  store i16 %v1_c908, i16* %v5_c914, align 2
  br i1 %v9_c910, label %dec_label_pc_c91c, label %dec_label_pc_c908.dec_label_pc_c7ac_crit_edge

dec_label_pc_c908.dec_label_pc_c7ac_crit_edge:    ; preds = %dec_label_pc_c908
  %v1_c7b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7ac

dec_label_pc_c91c:                                ; preds = %dec_label_pc_c908, %dec_label_pc_c7a0
  %v0_c91c = call i32 @function_f190()
  %v1_c920 = load i32, i32* @r6, align 4
  %v2_c920 = add i32 %v1_c920, 4
  %v3_c920 = inttoptr i32 %v2_c920 to i32*
  store i32 %v0_c91c, i32* %v3_c920, align 4
  store i32 %v6_c3b8, i32* %r0.global-to-local, align 4
  %v1_c928 = load i32, i32* @r4, align 4
  %v9_c928 = icmp eq i32 %v6_c3b8, %v1_c928
  store i1 %v9_c928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c928, label %dec_label_pc_c930, label %dec_label_pc_c7b8

dec_label_pc_c930:                                ; preds = %dec_label_pc_c91c, %dec_label_pc_c7ac
  %v0_c930 = call i32 @function_f190()
  store i32 %v0_c930, i32* %r0.global-to-local, align 4
  %v0_c934 = load i32, i32* @fp, align 4
  %v2_c934 = icmp eq i32 %v0_c934, 0
  store i1 %v2_c934, i1* %cpsr_z.global-to-local, align 1
  %v1_c938 = load i32, i32* @r6, align 4
  %v2_c938 = add i32 %v1_c938, 8
  %v3_c938 = inttoptr i32 %v2_c938 to i32*
  store i32 %v0_c930, i32* %v3_c938, align 4
  br i1 %v2_c934, label %dec_label_pc_c7c0, label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %dec_label_pc_c7b8, %dec_label_pc_c930
  %v0_c940 = call i32 @function_f190()
  %v1_c940 = trunc i32 %v0_c940 to i16
  store i32 %v0_c940, i32* %r0.global-to-local, align 4
  %v3_c944 = load i32, i32* @r6, align 4
  %v4_c944 = add i32 %v3_c944, 18
  %v5_c944 = inttoptr i32 %v4_c944 to i16*
  store i16 %v1_c940, i16* %v5_c944, align 2
  br label %dec_label_pc_c7c0

dec_label_pc_c94c:                                ; preds = %dec_label_pc_c7c0, %dec_label_pc_c750
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c950 = call i32 @function_12d34(i32* null)
  store i32 %v2_c950, i32* %r0.global-to-local, align 4
  store i32 %v2_c474, i32* %r3.global-to-local, align 4
  %v9_c958 = icmp eq i32 %v2_c474, %v2_c950
  store i1 %v9_c958, i1* %cpsr_z.global-to-local, align 1
  %v6_c95c = icmp slt i32 %v2_c474, %v2_c950
  br i1 %v6_c95c, label %dec_label_pc_c960, label %dec_label_pc_c94c.dec_label_pc_c750_crit_edge

dec_label_pc_c94c.dec_label_pc_c750_crit_edge:    ; preds = %dec_label_pc_c94c
  %v0_c754.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c750

dec_label_pc_c960:                                ; preds = %dec_label_pc_c94c, %dec_label_pc_c2a4, %dec_label_pc_c96c
  %v1_c968 = phi i32 [ %v3_c488, %dec_label_pc_c2a4 ], [ %v1_c970, %dec_label_pc_c96c ], [ %v2_c950, %dec_label_pc_c94c ]
  store i32 %v3_c2a4, i32* %r4.global-to-local, align 4
  store i32 %v24_c2a4, i32* %fp.global-to-local, align 4
  store i32 %v27_c2a4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c968

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c498
  %v0_c96c = load i32, i32* @r8, align 4
  store i32 %v0_c96c, i32* %r0.global-to-local, align 4
  %v1_c970 = call i32 @function_130b4(i32 %v0_c96c)
  store i32 %v1_c970, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c960

; uselistorder directives
  uselistorder i32 %v1_c970, { 1, 0 }
  uselistorder i32 %v0_c940, { 1, 0 }
  uselistorder i32 %v0_c908, { 1, 0 }
  uselistorder i32 %v0_c8f4, { 1, 0 }
  uselistorder i32 %v0_c8e0, { 1, 0 }
  uselistorder i32 %v1_c8d4, { 1, 2, 0 }
  uselistorder i32 %v0_c878, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c834, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c800, { 1, 0 }
  uselistorder i32 %v4_c7f0, { 1, 0 }
  uselistorder i1 %v3_c780, { 1, 0 }
  uselistorder i1 %v7_c76c, { 2, 1, 0 }
  uselistorder i32 %v2_c740, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c5a8, { 1, 2, 0 }
  uselistorder i32 %v1_c56c, { 2, 1, 0 }
  uselistorder i32 %v1_c568, { 2, 0, 1 }
  uselistorder i32 %v1_c564, { 2, 0, 1 }
  uselistorder i32 %v1_c560, { 2, 0, 1 }
  uselistorder i32 %v1_c55c, { 2, 0, 1 }
  uselistorder i32 %v3_c4e4, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_c4e0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c4d4, { 1, 0, 2 }
  uselistorder i1 %v7_c4b8, { 1, 0 }
  uselistorder i1 %v7_c48c, { 1, 0 }
  uselistorder i32 %v3_c488, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_c474, { 2, 1, 0 }
  uselistorder i32 %v6_c464, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_c3b8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c3a0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c324, { 1, 0 }
  uselistorder i32 %v7_c30c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 45, { 2, 0, 3, 1, 4 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c960, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c940, { 1, 0 }
  uselistorder label %dec_label_pc_c7c0, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c97c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c97c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_c9a0 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_c9ac = load i32, i32* @fp, align 4
  store i32 %v0_c9ac, i32* %r0.global-to-local, align 4
  %v2_c9b0 = call i32 @function_1442c(i32 %v0_c9ac, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_c9bc = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_c9b0, i32* @sb, align 4
  %v0_c9cc = load i32, i32* @r4, align 4
  store i32 %v0_c9cc, i32* %r0.global-to-local, align 4
  %v4_c9d0 = inttoptr i32 %v0_c9bc to i32*
  %v5_c9d0 = call i32 @function_9fe8(i32 %v0_c9cc, i32* %v4_c9d0, i32 7, i32 65535)
  %v0_c9d4 = load i32, i32* @r5, align 4
  %v0_c9e0 = load i32, i32* @r6, align 4
  store i32 %v0_c9e0, i32* %r3.global-to-local, align 4
  %v0_c9e4 = load i32, i32* @r4, align 4
  store i32 %v0_c9e4, i32* %r0.global-to-local, align 4
  %v3_c9e8 = urem i32 %v5_c9d0, 65536
  store i32 %v3_c9e8, i32* @r8, align 4
  %v4_c9ec = inttoptr i32 %v0_c9d4 to i32*
  %v5_c9ec = call i32 @function_9fe8(i32 %v0_c9e4, i32* %v4_c9ec, i32 6, i32 %v0_c9e0)
  %v0_c9f0 = load i32, i32* @r5, align 4
  %v3_c9f4 = mul i32 %v5_c9ec, 65536
  store i32 %v3_c9f4, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ca00 = load i32, i32* @r4, align 4
  store i32 %v0_ca00, i32* %r0.global-to-local, align 4
  %v4_ca04 = inttoptr i32 %v0_c9f0 to i32*
  %v5_ca04 = call i32 @function_9fe8(i32 %v0_ca00, i32* %v4_ca04, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ca14 = urem i32 %v5_ca04, 65536
  %v0_ca18 = load i32, i32* @r5, align 4
  %v0_ca1c = load i32, i32* @r4, align 4
  store i32 %v0_ca1c, i32* %r0.global-to-local, align 4
  %v4_ca24 = inttoptr i32 %v0_ca18 to i32*
  %v5_ca24 = call i32 @function_9fe8(i32 %v0_ca1c, i32* %v4_ca24, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca30 = urem i32 %v5_ca24, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ca4c = call i32 @function_12d34(i32* null)
  store i32 %v2_ca4c, i32* %r0.global-to-local, align 4
  %v0_ca50 = load i32, i32* @sl, align 4
  %v3_ca50 = udiv i32 %v0_ca50, 65536
  %v1_ca54 = load i32, i32* @r6, align 4
  %v9_ca54 = icmp eq i32 %v3_ca50, %v1_ca54
  br i1 %v9_ca54, label %dec_label_pc_cc28, label %bb

bb:                                               ; preds = %dec_label_pc_c97c
  %v4_ca5c = udiv i32 %v0_ca50, 16777216
  store i32 %v4_ca5c, i32* %r3.global-to-local, align 4
  %v1_ca60 = load i32, i32* @r7, align 4
  %v2_ca60 = add i32 %v1_ca60, %v2_ca4c
  store i32 %v2_ca60, i32* %r0.global-to-local, align 4
  %v2_ca58 = mul nuw nsw i32 %v3_ca50, 256
  %v6_ca64 = or i32 %v2_ca58, %v4_ca5c
  %extract.t58 = trunc i32 %v6_ca64 to i16
  br label %dec_label_pc_ca74

dec_label_pc_ca74:                                ; preds = %bb, %dec_label_pc_cc28
  %v6_ca64.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_cc28 ]
  %v0_ca6810 = phi i32 [ %v2_ca60, %bb ], [ %v2_ca6013, %dec_label_pc_cc28 ]
  %v0_ca74 = load i32, i32* @fp, align 4
  %v2_ca74 = icmp eq i32 %v0_ca74, 0
  br i1 %v2_ca74, label %dec_label_pc_cbac, label %dec_label_pc_ca7c

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_ca74
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_caa8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_cac8 = sext i16 %v6_ca64.sink.off0 to i32
  br label %dec_label_pc_cafc

dec_label_pc_ca8c:                                ; preds = %.thread26, %dec_label_pc_cb38
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ca98 = call i32 @function_138c4(i32 2, i32 2, i32 17)
  store i32 %v3_ca98, i32* %r0.global-to-local, align 4
  %v7_ca9c = icmp eq i32 %v3_ca98, -1
  %v0_caa0 = load i32, i32* @sl, align 4
  %v1_caa0 = add i32 %v0_caa0, 1
  store i32 %v1_caa0, i32* @sl, align 4
  %v0_caa4 = load i32, i32* @r7, align 4
  %v1_caa4 = add i32 %v0_caa4, 24
  store i32 %v1_caa4, i32* @r7, align 4
  %v1_cab0 = load i32, i32* @r6, align 4
  %v2_cab0 = load i32, i32* @sb, align 4
  %v3_cab0 = add i32 %v2_cab0, %v1_cab0
  %v4_cab0 = inttoptr i32 %v3_cab0 to i32*
  store i32 %v3_ca98, i32* %v4_cab0, align 4
  br i1 %v7_ca9c, label %dec_label_pc_cbd0.loopexit14, label %dec_label_pc_cab8

dec_label_pc_cab8:                                ; preds = %dec_label_pc_ca8c
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_cac8, i32* %r3.global-to-local, align 4
  %v0_cad0 = load i32, i32* %r0.global-to-local, align 4
  %v3_cad0 = call i32 @function_13674(i32 %v0_cad0, i32 %v2_caa8, i32 16)
  store i32 %v3_cad0, i32* %r0.global-to-local, align 4
  %v0_cad4 = load i32, i32* @r5, align 4
  %v1_cad4 = add i32 %v0_cad4, 20
  %v2_cad4 = inttoptr i32 %v1_cad4 to i8*
  %v3_cad4 = load i8, i8* %v2_cad4, align 1
  %v4_cad4 = zext i8 %v3_cad4 to i32
  store i32 %v4_cad4, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cad4, 32
  br i1 %tmp, label %dec_label_pc_cb4c, label %dec_label_pc_cae0

dec_label_pc_cae0:                                ; preds = %dec_label_pc_cab8
  %v0_cae0 = load i32, i32* @r6, align 4
  %v1_cae0 = load i32, i32* @sb, align 4
  %v2_cae0 = add i32 %v1_cae0, %v0_cae0
  %v3_cae0 = inttoptr i32 %v2_cae0 to i32*
  %v4_cae0 = load i32, i32* %v3_cae0, align 4
  store i32 %v4_cae0, i32* %r0.global-to-local, align 4
  %v3_caec = call i32 @function_136ac(i32 %v4_cae0, i32 %v0_cad4, i32 16)
  store i32 %v3_caec, i32* %r0.global-to-local, align 4
  %v0_caf0 = load i32, i32* @sl, align 4
  %v1_caf0 = load i32, i32* @fp, align 4
  %v9_caf0 = icmp eq i32 %v0_caf0, %v1_caf0
  %v0_caf4 = load i32, i32* @r6, align 4
  %v1_caf4 = add i32 %v0_caf4, 4
  store i32 %v1_caf4, i32* @r6, align 4
  br i1 %v9_caf0, label %dec_label_pc_cbac, label %dec_label_pc_cafc

dec_label_pc_cafc:                                ; preds = %dec_label_pc_cb4c, %dec_label_pc_cae0, %dec_label_pc_ca7c
  store i32 65535, i32* @r4, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_cb0c = call i32 @function_1442c(i32 65535, i32 1)
  store i32 %v2_cb0c, i32* %r0.global-to-local, align 4
  %v0_cb10 = load i32, i32* @r8, align 4
  %v3_cb14 = udiv i32 %v0_cb10, 256
  %v1_cb10 = mul i32 %v0_cb10, 256
  %v4_cb18 = and i32 %v1_cb10, 65280
  %v5_cb18 = or i32 %v4_cb18, %v3_cb14
  store i32 %v5_cb18, i32* %r3.global-to-local, align 4
  %v2_cb1c = load i32, i32* %stack_var_-80, align 4
  %v1_cb20 = load i32, i32* @r7, align 4
  %v2_cb20 = add i32 %v1_cb20, %v2_cb1c
  store i32 %v2_cb20, i32* @r5, align 4
  %v1_cb28 = load i32, i32* @r4, align 4
  %v9_cb28 = icmp eq i32 %v0_cb10, %v1_cb28
  %v1_cb2c = load i32, i32* @r6, align 4
  %v3_cb2c = add i32 %v1_cb2c, %v2_c9a0
  %v4_cb2c = inttoptr i32 %v3_cb2c to i32*
  store i32 %v2_cb0c, i32* %v4_cb2c, align 4
  br i1 %v9_cb28, label %dec_label_pc_cb38, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_cafc
  %v1_cb3027 = load i32, i32* %r3.global-to-local, align 4
  %v2_cb3028 = trunc i32 %v1_cb3027 to i16
  %v3_cb3029 = load i32, i32* @r5, align 4
  %v4_cb3030 = add i32 %v3_cb3029, 2
  %v5_cb3031 = inttoptr i32 %v4_cb3030 to i16*
  store i16 %v2_cb3028, i16* %v5_cb3031, align 2
  br label %dec_label_pc_ca8c

dec_label_pc_cb38:                                ; preds = %dec_label_pc_cafc
  %v0_cb38 = call i32 @function_f190()
  %v1_cb38 = trunc i32 %v0_cb38 to i16
  store i32 %v0_cb38, i32* %r0.global-to-local, align 4
  %v2_cb3c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_cb3c, i32* %r3.global-to-local, align 4
  %v1_cb40 = load i32, i32* @r7, align 4
  %v2_cb40 = add i32 %v1_cb40, %v2_cb3c
  store i32 %v2_cb40, i32* @r5, align 4
  %v4_cb44 = add i32 %v2_cb40, 2
  %v5_cb44 = inttoptr i32 %v4_cb44 to i16*
  store i16 %v1_cb38, i16* %v5_cb44, align 2
  br label %dec_label_pc_ca8c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cab8
  %v1_cb4c = add i32 %v0_cad4, 16
  %v2_cb4c = inttoptr i32 %v1_cb4c to i32*
  %v3_cb4c = load i32, i32* %v2_cb4c, align 4
  store i32 %v3_cb4c, i32* @r4, align 4
  %v0_cb50 = call i32 @function_f190()
  store i32 %v0_cb50, i32* %r0.global-to-local, align 4
  %v0_cb54 = load i32, i32* @r4, align 4
  %v1_cb60 = and i32 %v0_cb54, 65280
  store i32 %v1_cb60, i32* %r3.global-to-local, align 4
  %v0_cb64 = load i32, i32* @r5, align 4
  %v1_cb64 = add i32 %v0_cb64, 20
  %v2_cb64 = inttoptr i32 %v1_cb64 to i8*
  %v3_cb64 = load i8, i8* %v2_cb64, align 1
  %v4_cb64 = zext i8 %v3_cb64 to i32
  %v5_cb6c = call i32 @llvm.bswap.i32(i32 %v0_cb54)
  %v7_cb70 = lshr i32 %v0_cb50, %v4_cb64
  %v8_cb70 = add i32 %v7_cb70, %v5_cb6c
  %v1_cb74 = and i32 %v8_cb70, 16711680
  store i32 %v1_cb74, i32* %r0.global-to-local, align 4
  %v5_cb88 = call i32 @llvm.bswap.i32(i32 %v8_cb70)
  store i32 %v5_cb88, i32* %r3.global-to-local, align 4
  %v2_cb8c = add i32 %v0_cb64, 4
  %v3_cb8c = inttoptr i32 %v2_cb8c to i32*
  store i32 %v5_cb88, i32* %v3_cb8c, align 4
  %v0_cb90 = load i32, i32* @r5, align 4
  %v0_cb94 = load i32, i32* @r6, align 4
  %v1_cb94 = load i32, i32* @sb, align 4
  %v2_cb94 = add i32 %v1_cb94, %v0_cb94
  %v3_cb94 = inttoptr i32 %v2_cb94 to i32*
  %v4_cb94 = load i32, i32* %v3_cb94, align 4
  store i32 %v4_cb94, i32* %r0.global-to-local, align 4
  %v3_cb9c = call i32 @function_136ac(i32 %v4_cb94, i32 %v0_cb90, i32 16)
  store i32 %v3_cb9c, i32* %r0.global-to-local, align 4
  %v0_cba0 = load i32, i32* @sl, align 4
  %v1_cba0 = load i32, i32* @fp, align 4
  %v9_cba0 = icmp eq i32 %v0_cba0, %v1_cba0
  %v0_cba4 = load i32, i32* @r6, align 4
  %v1_cba4 = add i32 %v0_cba4, 4
  store i32 %v1_cba4, i32* @r6, align 4
  br i1 %v9_cba0, label %dec_label_pc_cbac, label %dec_label_pc_cafc

dec_label_pc_cbac:                                ; preds = %dec_label_pc_cb4c, %dec_label_pc_cae0, %dec_label_pc_ca74
  %v1_cbb021 = phi i32 [ 0, %dec_label_pc_ca74 ], [ %v0_cba0, %dec_label_pc_cb4c ], [ %v0_caf0, %dec_label_pc_cae0 ]
  store i32 0, i32* @r5, align 4
  %v2_cbe4 = icmp eq i32 %v1_ca30, 0
  br label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cbb0.backedge, %dec_label_pc_cbac
  %v1_cbb0 = phi i32 [ %v1_cbb0.pre, %dec_label_pc_cbb0.backedge ], [ %v1_cbb021, %dec_label_pc_cbac ]
  %v1_cbe8 = phi i32 [ %v0_cbb019, %dec_label_pc_cbb0.backedge ], [ 0, %dec_label_pc_cbac ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_cbb8 = icmp slt i32 %v1_cbe8, %v1_cbb0
  br i1 %v5_cbb8, label %dec_label_pc_cbdc, label %dec_label_pc_cbbc

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cbb0
  %v2_cbbc = call i32 @function_12d34(i32* null)
  store i32 %v2_cbbc, i32* %r0.global-to-local, align 4
  store i32 %v0_ca6810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_cbcc = icmp slt i32 %v0_ca6810, %v2_cbbc
  br i1 %v6_cbcc, label %dec_label_pc_cbd0, label %dec_label_pc_cbb0.backedge

dec_label_pc_cbd0.loopexit14:                     ; preds = %dec_label_pc_ca8c
  %v1_cbd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cbd0

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbbc, %dec_label_pc_cbd0.loopexit14
  %v1_cbd8 = phi i32 [ %v1_cbd8.pre, %dec_label_pc_cbd0.loopexit14 ], [ %v2_cbbc, %dec_label_pc_cbbc ]
  ret i32 %v1_cbd8

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cbb0
  store i32 %v2_c9a0, i32* %r3.global-to-local, align 4
  %v4_cbe8 = mul i32 %v1_cbe8, 4
  %v5_cbe8 = add i32 %v4_cbe8, %v2_c9a0
  %v6_cbe8 = inttoptr i32 %v5_cbe8 to i32*
  %v7_cbe8 = load i32, i32* %v6_cbe8, align 4
  store i32 %v7_cbe8, i32* @r4, align 4
  br i1 %v2_cbe4, label %dec_label_pc_cbf0, label %dec_label_pc_cc0c

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbdc, %dec_label_pc_cc0c
  %v0_cbf4 = phi i32 [ %v7_cbe8, %dec_label_pc_cbdc ], [ %v0_cbf4.pre, %dec_label_pc_cc0c ]
  %v1_cbf0 = phi i32 [ %v1_cbe8, %dec_label_pc_cbdc ], [ %v1_cbf0.pre, %dec_label_pc_cc0c ]
  %v0_cbf0 = load i32, i32* @sb, align 4
  %v4_cbf0 = mul i32 %v1_cbf0, 4
  %v5_cbf0 = add i32 %v4_cbf0, %v0_cbf0
  %v6_cbf0 = inttoptr i32 %v5_cbf0 to i32*
  %v7_cbf0 = load i32, i32* %v6_cbf0, align 4
  store i32 %v7_cbf0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cc00 = call i32 @function_13808(i32 %v7_cbf0, i32 %v0_cbf4, i32 %v3_ca14, i32 16384)
  store i32 %v4_cc00, i32* %r0.global-to-local, align 4
  %v0_cc04 = load i32, i32* @r5, align 4
  %v1_cc04 = add i32 %v0_cc04, 1
  store i32 %v1_cc04, i32* @r5, align 4
  br label %dec_label_pc_cbb0.backedge

dec_label_pc_cbb0.backedge:                       ; preds = %dec_label_pc_cbf0, %dec_label_pc_cbbc
  %v0_cbb019 = phi i32 [ %v1_cc04, %dec_label_pc_cbf0 ], [ 0, %dec_label_pc_cbbc ]
  %v1_cbb0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_cbb0

dec_label_pc_cc0c:                                ; preds = %dec_label_pc_cbdc
  store i32 %v7_cbe8, i32* %r0.global-to-local, align 4
  %v2_cc14 = call i32 @function_f254(i32 %v7_cbe8, i32 %v3_ca14)
  store i32 %v2_cc14, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc20 = load i32, i32* @r4, align 4
  %v4_cc20 = add i32 %v3_cc20, %v3_ca14
  %v5_cc20 = inttoptr i32 %v4_cc20 to i8*
  store i8 0, i8* %v5_cc20, align 1
  %v1_cbf0.pre = load i32, i32* @r5, align 4
  %v0_cbf4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cbf0

dec_label_pc_cc28:                                ; preds = %dec_label_pc_c97c
  %v1_ca6012 = load i32, i32* @r7, align 4
  %v2_ca6013 = add i32 %v1_ca6012, %v2_ca4c
  store i32 %v2_ca6013, i32* %r0.global-to-local, align 4
  %v0_cc28 = call i32 @function_f190()
  %v3_cc30 = urem i32 %v0_cc28, 65536
  store i32 %v3_cc30, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_cc28 to i16
  br label %dec_label_pc_ca74

; uselistorder directives
  uselistorder i32 %v0_cc28, { 1, 0 }
  uselistorder i32 %v2_ca6013, { 1, 0 }
  uselistorder i32 %v7_cbe8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_cb88, { 1, 0 }
  uselistorder i32 %v0_cb38, { 1, 0 }
  uselistorder i32 %v0_cb10, { 2, 0, 1 }
  uselistorder i32 %v3_ca98, { 1, 0, 2 }
  uselistorder i32 %v0_ca6810, { 1, 0 }
  uselistorder i32 %v4_ca5c, { 1, 0 }
  uselistorder i32 %v3_ca14, { 2, 1, 0 }
  uselistorder i32 %v2_c9a0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 5, 4, 7, 6, 18, 9, 8, 12, 10, 11, 13, 14, 23, 21, 16, 15, 2, 19, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cbf0, { 1, 0 }
  uselistorder label %dec_label_pc_cbd0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca74, { 1, 0 }
}

define i32 @function_cc3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cc3c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_cc3c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_cc68 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_cc6c = load i32, i32* @r4, align 4
  store i32 %v0_cc6c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_cc78 = load i32, i32* @r8, align 4
  store i32 %v0_cc78, i32* %r3.global-to-local, align 4
  %v0_cc7c = load i32, i32* @r5, align 4
  store i32 %v0_cc7c, i32* %r0.global-to-local, align 4
  %v5_cc80 = inttoptr i32 %v0_cc6c to i32*
  %v6_cc80 = call i32 @function_9fe8(i32 %v0_cc7c, i32* %v5_cc80, i32 2, i32 %v0_cc78)
  %v1_cc8c = urem i32 %v6_cc80, 256
  store i32 %v1_cc8c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cc98 = load i32, i32* @r4, align 4
  store i32 %v0_cc98, i32* %r1.global-to-local, align 4
  %v0_cc9c = load i32, i32* @r5, align 4
  store i32 %v0_cc9c, i32* %r0.global-to-local, align 4
  %v5_cca0 = trunc i32 %v6_cc80 to i8
  %v6_cca4 = inttoptr i32 %v0_cc98 to i32*
  %v7_cca4 = call i32 @function_9fe8(i32 %v0_cc9c, i32* %v6_cca4, i32 3, i32 65535)
  %v0_cca8 = load i32, i32* @r4, align 4
  store i32 %v0_cca8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ccb8 = load i32, i32* @r5, align 4
  store i32 %v0_ccb8, i32* %r0.global-to-local, align 4
  %v5_ccbc = inttoptr i32 %v0_cca8 to i32*
  %v6_ccbc = call i32 @function_9fe8(i32 %v0_ccb8, i32* %v5_ccbc, i32 4, i32 64)
  %v1_ccc4 = urem i32 %v6_ccbc, 256
  store i32 %v1_ccc4, i32* %ip.global-to-local, align 4
  %v0_ccc8 = load i32, i32* @r4, align 4
  store i32 %v0_ccc8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_ccd0 = load i32, i32* @r8, align 4
  store i32 %v0_ccd0, i32* %r3.global-to-local, align 4
  %v0_ccd4 = load i32, i32* @r5, align 4
  store i32 %v0_ccd4, i32* %r0.global-to-local, align 4
  %v5_ccd8 = trunc i32 %v6_ccbc to i8
  %v6_ccdc = inttoptr i32 %v0_ccc8 to i32*
  %v7_ccdc = call i32 @function_9fe8(i32 %v0_ccd4, i32* %v6_ccdc, i32 5, i32 %v0_ccd0)
  %v1_cce8 = urem i32 %v7_ccdc, 256
  store i32 %v1_cce8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ccf4 = load i32, i32* @r4, align 4
  store i32 %v0_ccf4, i32* %r1.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* %r0.global-to-local, align 4
  %v5_cd00 = inttoptr i32 %v0_ccf4 to i32*
  %v6_cd00 = call i32 @function_9fe8(i32 %v0_ccf8, i32* %v5_cd00, i32 6, i32 65535)
  %v0_cd0c = load i32, i32* @r4, align 4
  store i32 %v0_cd0c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cd18 = load i32, i32* @r5, align 4
  store i32 %v0_cd18, i32* %r0.global-to-local, align 4
  %v5_cd1c = inttoptr i32 %v0_cd0c to i32*
  %v6_cd1c = call i32 @function_9fe8(i32 %v0_cd18, i32* %v5_cd1c, i32 7, i32 65535)
  %v0_cd20 = load i32, i32* @r4, align 4
  store i32 %v0_cd20, i32* %r1.global-to-local, align 4
  %v0_cd28 = load i32, i32* @r8, align 4
  store i32 %v0_cd28, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_cd30 = load i32, i32* @r5, align 4
  store i32 %v0_cd30, i32* %r0.global-to-local, align 4
  %v5_cd34 = inttoptr i32 %v0_cd20 to i32*
  %v6_cd34 = call i32 @function_9fe8(i32 %v0_cd30, i32* %v5_cd34, i32 %v0_cd28, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cd40 = load i32, i32* @r4, align 4
  store i32 %v0_cd40, i32* %r1.global-to-local, align 4
  store i32 %v6_cd34, i32* @sl, align 4
  %v0_cd48 = load i32, i32* @r5, align 4
  store i32 %v0_cd48, i32* %r0.global-to-local, align 4
  %v4_cd4c = inttoptr i32 %v0_cd40 to i32*
  %v5_cd4c = call i32 @function_9fe8(i32 %v0_cd48, i32* %v4_cd4c, i32 1, i32 1)
  %v2_cd58 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_cd58, i32* %r3.global-to-local, align 4
  %v1_cd5c = urem i32 %v5_cd4c, 256
  store i32 %v1_cd5c, i32* %ip.global-to-local, align 4
  %v0_cd60 = load i32, i32* @r4, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_cd68 = load i32, i32* @r5, align 4
  store i32 %v0_cd68, i32* %r0.global-to-local, align 4
  %v5_cd70 = inttoptr i32 %v0_cd60 to i32*
  %v6_cd70 = call i32 @function_9fe8(i32 %v0_cd68, i32* %v5_cd70, i32 24, i32 %v2_cd58)
  store i32 %v6_cd70, i32* @sb, align 4
  %v0_cd78 = load i32, i32* @r8, align 4
  store i32 %v0_cd78, i32* %r0.global-to-local, align 4
  %v1_cd7c = inttoptr i32 %v0_cd78 to i32*
  %v2_cd7c = call i32 @function_12d34(i32* %v1_cd7c)
  %v1_cd80 = load i32, i32* @r6, align 4
  %v2_cd80 = add i32 %v1_cd80, %v2_cd7c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cd94 = call i32 @function_138c4(i32 2, i32 3, i32 17)
  store i32 %v3_cd94, i32* %r0.global-to-local, align 4
  %v7_cd98 = icmp eq i32 %v3_cd94, -1
  store i32 %v3_cd94, i32* @fp, align 4
  br i1 %v7_cd98, label %dec_label_pc_d1ec, label %dec_label_pc_cda4

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cc3c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cdac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cdac, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cdb4 = load i32, i32* @r8, align 4
  store i32 %v0_cdb4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_cdc0 = call i32 @function_13880(i32 %v3_cd94, i32 %v0_cdb4, i32 3, i32 %v6_cdac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_cdc0, i32* %r0.global-to-local, align 4
  %v7_cdc4 = icmp eq i32 %v5_cdc0, -1
  br i1 %v7_cdc4, label %dec_label_pc_d1f8, label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cda4
  %v0_cdcc = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_cdd8 = urem i32 %v0_cdcc, 65536
  %v3_cddc = icmp ugt i32 %v3_cdd8, 1459
  br i1 %v3_cddc, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_cdcc
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_cdcc, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_cdd8, %dec_label_pc_cdcc ]
  %v0_cde8 = phi i32 [ 1460, %bb ], [ %v3_cdd8, %dec_label_pc_cdcc ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_cd00, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_cdfc = mul i32 %v6_cd1c, 65536
  store i32 %v3_cdfc, i32* %r2.global-to-local, align 4
  %v3_ce04 = urem i32 %v7_cca4, 65536
  %v3_ce08 = urem i32 %v6_cd00, 65536
  store i32 %v3_ce08, i32* %ip.global-to-local, align 4
  %v3_ce0c = urem i32 %v6_cd1c, 65536
  store i32 %v3_ce0c, i32* %r0.global-to-local, align 4
  %v2_ce10 = icmp eq i32 %arg2, 0
  %v0_ce18 = load i32, i32* @r8, align 4
  store i32 %v0_ce18, i32* %stack_var_-44, align 4
  br i1 %v2_ce10, label %.dec_label_pc_cf44.preheader_crit_edge, label %dec_label_pc_ce2c

.dec_label_pc_cf44.preheader_crit_edge:           ; preds = %bb40
  %.pre = add nuw nsw i32 %v0_cde8, 8
  %.pre10 = add nuw nsw i32 %v0_cde8, 28
  br label %dec_label_pc_cf44.preheader

dec_label_pc_ce2c:                                ; preds = %bb40
  %v1_ce34 = add nuw nsw i32 %v0_cde8, 28
  %v1_ce38 = add nuw nsw i32 %v0_cde8, 8
  %tmp41 = mul nuw nsw i32 %v3_ce08, 256
  %v3_ce48 = and i32 %tmp41, 65280
  %v3_ce50 = mul i32 %v1_ce34, 65536
  store i32 %v3_ce50, i32* @lr, align 4
  %tmp42 = udiv i32 %v6_cd00, 256
  %v4_ce58 = urem i32 %tmp42, 256
  %v5_ce58 = or i32 %v3_ce48, %v4_ce58
  store i32 %v5_ce58, i32* @sl, align 4
  store i32 %v3_cdfc, i32* %r1.global-to-local, align 4
  %tmp43 = mul i32 %v6_cd1c, 256
  %v3_ce70 = and i32 %tmp43, 65280
  %v2_ce74 = icmp eq i32 %v1_cce8, 0
  %tmp44 = mul nuw nsw i32 %v1_ce34, 256
  %v3_ce78 = and i32 %tmp44, 65280
  store i32 %v3_ce78, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v7_cca4, 256
  %v3_ce7c = and i32 %tmp45, 65280
  store i32 %v3_ce7c, i32* %r2.global-to-local, align 4
  %tmp46 = mul nuw nsw i32 %v1_ce38, 256
  %v3_ce80 = and i32 %tmp46, 65280
  store i32 %v3_ce80, i32* %ip.global-to-local, align 4
  %tmp47 = udiv i32 %v6_cd1c, 256
  %v4_ce84 = urem i32 %tmp47, 256
  %v5_ce84 = or i32 %v4_ce84, %v3_ce70
  store i32 %v5_ce84, i32* %r0.global-to-local, align 4
  %tmp48 = udiv i32 %v7_cca4, 256
  %v4_ce88 = urem i32 %tmp48, 256
  %v5_ce88 = or i32 %v4_ce88, %v3_ce7c
  store i32 %v5_ce88, i32* @r8, align 4
  %tmp49 = udiv i32 %v1_ce34, 256
  %v4_ce8c = urem i32 %tmp49, 256
  %v5_ce8c = or i32 %v4_ce8c, %v3_ce78
  store i32 %v5_ce8c, i32* @r6, align 4
  %tmp50 = udiv i32 %v1_ce38, 256
  %v4_ce90 = urem i32 %tmp50, 256
  %v5_ce90 = or i32 %v4_ce90, %v3_ce80
  store i32 %v5_ce90, i32* @r5, align 4
  %v5_ce94 = trunc i32 %v5_ce84 to i16
  store i32 0, i32* @r4, align 4
  br i1 %v2_ce74, label %dec_label_pc_cea0.preheader, label %dec_label_pc_d12c.preheader

dec_label_pc_d12c.preheader:                      ; preds = %dec_label_pc_ce2c
  %v4_d17c = sext i8 %v5_ccd8 to i32
  %v4_d1bc = sext i16 %v5_ce94 to i32
  br label %dec_label_pc_d12c

dec_label_pc_cea0.preheader:                      ; preds = %dec_label_pc_ce2c
  %v4_cf18 = sext i16 %v5_ce94 to i32
  br label %dec_label_pc_cea0

dec_label_pc_cea0:                                ; preds = %dec_label_pc_cea0.preheader, %dec_label_pc_cea0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ceac = call i32 @function_1442c(i32 1510, i32 1)
  store i32 %v2_ceac, i32* %r0.global-to-local, align 4
  store i32 %v2_cc68, i32* %r2.global-to-local, align 4
  %v2_ceb8 = load i32, i32* @r4, align 4
  %v5_ceb8 = mul i32 %v2_ceb8, 4
  %v6_ceb8 = add i32 %v5_ceb8, %v2_cc68
  %v7_ceb8 = inttoptr i32 %v6_ceb8 to i32*
  store i32 %v2_ceac, i32* %v7_ceb8, align 4
  %v3_cebc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cebc, i32* %r1.global-to-local, align 4
  %v0_cec0 = load i32, i32* %r2.global-to-local, align 4
  %v4_cec0 = mul i32 %v3_cebc, 4
  %v5_cec0 = add i32 %v0_cec0, %v4_cec0
  %v6_cec0 = inttoptr i32 %v5_cec0 to i32*
  %v7_cec0 = load i32, i32* %v6_cec0, align 4
  store i32 %v7_cec0, i32* %r3.global-to-local, align 4
  %v1_cec4 = inttoptr i32 %v7_cec0 to i8*
  %v2_cec4 = load i8, i8* %v1_cec4, align 1
  %tmp = urem i8 %v2_cec4, 16
  %v1_cec8 = zext i8 %tmp to i32
  %v1_cecc = or i32 %v1_cec8, 64
  store i32 %v1_cecc, i32* %r2.global-to-local, align 4
  %v1_ced0 = trunc i32 %v1_cecc to i8
  store i8 %v1_ced0, i8* %v1_cec4, align 1
  %v0_ced4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ced4 = inttoptr i32 %v0_ced4 to i8*
  %v2_ced4 = load i8, i8* %v1_ced4, align 1
  %v1_ced8 = and i8 %v2_ced4, -16
  %v1_cedc = or i8 %v1_ced8, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_cedc, i8* %v1_ced4, align 1
  %v0_cee8 = load i32, i32* %ip.global-to-local, align 4
  %v1_cee8 = trunc i32 %v0_cee8 to i8
  %v2_cee8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cee8 = add i32 %v2_cee8, 9
  %v4_cee8 = inttoptr i32 %v3_cee8 to i8*
  store i8 %v1_cee8, i8* %v4_cee8, align 1
  %v2_cef0 = load i32, i32* %r3.global-to-local, align 4
  %v3_cef0 = add i32 %v2_cef0, 1
  %v4_cef0 = inttoptr i32 %v3_cef0 to i8*
  store i8 %v5_cca0, i8* %v4_cef0, align 1
  %v0_cef8 = load i32, i32* %r1.global-to-local, align 4
  %v3_cef8 = mul i32 %v0_cef8, 32
  store i32 %v3_cef8, i32* %r0.global-to-local, align 4
  %v2_cefc = load i32, i32* %r3.global-to-local, align 4
  %v3_cefc = add i32 %v2_cefc, 8
  %v4_cefc = inttoptr i32 %v3_cefc to i8*
  store i8 %v5_ccd8, i8* %v4_cefc, align 1
  %v0_cf00 = load i32, i32* @sb, align 4
  %v1_cf00 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf00 = add i32 %v1_cf00, 12
  %v3_cf00 = inttoptr i32 %v2_cf00 to i32*
  store i32 %v0_cf00, i32* %v3_cf00, align 4
  %v0_cf04 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf04 = load i32, i32* %r1.global-to-local, align 4
  %tmp52 = mul i32 %v1_cf04, -8
  %v5_cf04 = add i32 %v0_cf04, %tmp52
  %v1_cf08 = load i32, i32* @r7, align 4
  %v2_cf08 = add i32 %v5_cf04, %v1_cf08
  store i32 %v2_cf08, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_cf10 = add i32 %v1_cf04, 1
  store i32 %v1_cf10, i32* @r4, align 4
  %v1_cf14 = add i32 %v2_cf08, 16
  %v2_cf14 = inttoptr i32 %v1_cf14 to i32*
  %v3_cf14 = load i32, i32* %v2_cf14, align 4
  store i32 %v3_cf14, i32* %r2.global-to-local, align 4
  store i32 %v4_cf18, i32* %r0.global-to-local, align 4
  %v0_cf1c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf1c = add i32 %v0_cf1c, 20
  store i32 %v1_cf1c, i32* %r1.global-to-local, align 4
  %v0_cf24 = load i32, i32* @r6, align 4
  %v1_cf24 = trunc i32 %v0_cf24 to i16
  %v3_cf24 = add i32 %v0_cf1c, 2
  %v4_cf24 = inttoptr i32 %v3_cf24 to i16*
  store i16 %v1_cf24, i16* %v4_cf24, align 2
  %v0_cf28 = load i32, i32* @r8, align 4
  %v1_cf28 = trunc i32 %v0_cf28 to i16
  %v2_cf28 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf28 = add i32 %v2_cf28, 4
  %v4_cf28 = inttoptr i32 %v3_cf28 to i16*
  store i16 %v1_cf28, i16* %v4_cf28, align 2
  %v0_cf2c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf2c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf2c = add i32 %v1_cf2c, 16
  %v3_cf2c = inttoptr i32 %v2_cf2c to i32*
  store i32 %v0_cf2c, i32* %v3_cf2c, align 4
  %v0_cf30 = load i32, i32* @sl, align 4
  %v1_cf30 = trunc i32 %v0_cf30 to i16
  %v2_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf30 = add i32 %v2_cf30, 20
  %v4_cf30 = inttoptr i32 %v3_cf30 to i16*
  store i16 %v1_cf30, i16* %v4_cf30, align 2
  %v0_cf34 = load i32, i32* @r5, align 4
  %v1_cf34 = trunc i32 %v0_cf34 to i16
  %v2_cf34 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf34 = add i32 %v2_cf34, 4
  %v4_cf34 = inttoptr i32 %v3_cf34 to i16*
  store i16 %v1_cf34, i16* %v4_cf34, align 2
  %v0_cf38 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf38 = trunc i32 %v0_cf38 to i16
  %v2_cf38 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf38 = add i32 %v2_cf38, 2
  %v4_cf38 = inttoptr i32 %v3_cf38 to i16*
  store i16 %v1_cf38, i16* %v4_cf38, align 2
  %v0_cf3c = load i32, i32* @r4, align 4
  store i32 %v0_cf3c, i32* %stack_var_-44, align 4
  %v5_cf40 = icmp slt i32 %v1_cf10, %arg2
  br i1 %v5_cf40, label %dec_label_pc_cea0, label %dec_label_pc_cf44.preheader

dec_label_pc_cf44.preheader:                      ; preds = %dec_label_pc_d12c, %dec_label_pc_cea0, %.dec_label_pc_cf44.preheader_crit_edge
  %v1_cf64.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_cf44.preheader_crit_edge ], [ %v1_ce34, %dec_label_pc_cea0 ], [ %v1_ce34, %dec_label_pc_d12c ]
  %v1_cf60.pre-phi = phi i32 [ %.pre, %.dec_label_pc_cf44.preheader_crit_edge ], [ %v1_ce38, %dec_label_pc_cea0 ], [ %v1_ce38, %dec_label_pc_d12c ]
  %v3_d0c4 = icmp eq i32 %v3_ce04, 65535
  %v2_d100 = icmp eq i32 %v1_cd5c, 0
  br label %dec_label_pc_cf44

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf44.preheader, %dec_label_pc_d1d8
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce10, label %dec_label_pc_d1d8, label %dec_label_pc_cf58

dec_label_pc_cf58:                                ; preds = %dec_label_pc_cf44
  store i32 %v0_cde8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_cf60.pre-phi, i32* @sl, align 4
  store i32 %v1_cf64.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_d034

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_d034
  %v0_cf6c = load i32, i32* @sb, align 4
  %v7_cf6c = icmp eq i32 %v0_cf6c, -1
  br i1 %v7_cf6c, label %dec_label_pc_d0b4, label %dec_label_pc_cf74

dec_label_pc_cf74:                                ; preds = %dec_label_pc_d058, %dec_label_pc_cf6c
  store i32 %v3_ce04, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  br i1 %v3_d0c4, label %dec_label_pc_d0d0, label %dec_label_pc_cf88

dec_label_pc_cf88:                                ; preds = %dec_label_pc_d0b4.dec_label_pc_cf88_crit_edge, %dec_label_pc_cf74
  %v1_cf8c = phi i32 [ %v1_cf8c.pre, %dec_label_pc_d0b4.dec_label_pc_cf88_crit_edge ], [ 65535, %dec_label_pc_cf74 ]
  store i32 %v3_ce08, i32* %r0.global-to-local, align 4
  %v9_cf8c = icmp eq i32 %v3_ce08, %v1_cf8c
  br i1 %v9_cf8c, label %dec_label_pc_d0e4, label %dec_label_pc_cf94

dec_label_pc_cf94:                                ; preds = %dec_label_pc_d0d0, %dec_label_pc_cf88
  %v1_cf98 = phi i32 [ %v1_d0dc, %dec_label_pc_d0d0 ], [ %v1_cf8c, %dec_label_pc_cf88 ]
  store i32 %v3_ce0c, i32* %r1.global-to-local, align 4
  %v9_cf98 = icmp eq i32 %v3_ce0c, %v1_cf98
  br i1 %v9_cf98, label %dec_label_pc_d0f8, label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_d0e4, %dec_label_pc_cf94
  store i32 %v1_cd5c, i32* %r2.global-to-local, align 4
  br i1 %v2_d100, label %dec_label_pc_cfac, label %dec_label_pc_d10c

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_d0f8, %dec_label_pc_d10c
  %v2_cfb0 = load i32, i32* @r5, align 4
  %v3_cfb0 = add i32 %v2_cfb0, 10
  %v4_cfb0 = inttoptr i32 %v3_cfb0 to i16*
  store i16 0, i16* %v4_cfb0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cfb8 = load i32, i32* @r5, align 4
  store i32 %v0_cfb8, i32* @r0, align 4
  %v2_cfbc = call i32 @function_dd58(i32 %v0_cfb8, i32 20)
  %v3_cfbc = trunc i32 %v2_cfbc to i16
  store i32 %v2_cfbc, i32* %r0.global-to-local, align 4
  %v3_cfc0 = load i32, i32* @r5, align 4
  %v4_cfc0 = add i32 %v3_cfc0, 10
  %v5_cfc0 = inttoptr i32 %v4_cfc0 to i16*
  store i16 %v3_cfbc, i16* %v5_cfc0, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_cfc8 = load i32, i32* @r6, align 4
  %v3_cfc8 = add i32 %v2_cfc8, 6
  %v4_cfc8 = inttoptr i32 %v3_cfc8 to i16*
  store i16 0, i16* %v4_cfc8, align 2
  %v0_cfcc = load i32, i32* @r6, align 4
  %v1_cfcc = add i32 %v0_cfcc, 4
  %v2_cfcc = inttoptr i32 %v1_cfcc to i16*
  %v3_cfcc = load i16, i16* %v2_cfcc, align 2
  %v4_cfcc = zext i16 %v3_cfcc to i32
  store i32 %v4_cfcc, i32* %r2.global-to-local, align 4
  store i32 %v0_cfcc, i32* @r1, align 4
  %v0_cfd4 = load i32, i32* @sl, align 4
  store i32 %v0_cfd4, i32* %r3.global-to-local, align 4
  %v0_cfd8 = load i32, i32* @r5, align 4
  store i32 %v0_cfd8, i32* %r0.global-to-local, align 4
  %v4_cfdc = call i32 @function_dda8(i32 %v0_cfd8, i32 %v0_cfcc, i32 %v4_cfcc, i32 %v0_cfd4)
  %v5_cfdc = trunc i32 %v4_cfdc to i16
  store i32 %v4_cfdc, i32* %r0.global-to-local, align 4
  %v3_cfe0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cfe0, i32* %r3.global-to-local, align 4
  %v3_cfe4 = mul i32 %v3_cfe0, 32
  store i32 %v3_cfe4, i32* %lr.global-to-local, align 4
  %v3_cfe8 = load i32, i32* @r6, align 4
  %v4_cfe8 = add i32 %v3_cfe8, 6
  %v5_cfe8 = inttoptr i32 %v4_cfe8 to i16*
  store i16 %v5_cfdc, i16* %v5_cfe8, align 2
  %v0_cfec = load i32, i32* %lr.global-to-local, align 4
  %v1_cfec = load i32, i32* %r3.global-to-local, align 4
  %tmp53 = mul i32 %v1_cfec, -8
  %v5_cfec = add i32 %v0_cfec, %tmp53
  store i32 %v5_cfec, i32* %lr.global-to-local, align 4
  %v0_cff0 = load i32, i32* @r6, align 4
  %v1_cff0 = add i32 %v0_cff0, 2
  %v2_cff0 = inttoptr i32 %v1_cff0 to i16*
  %v3_cff0 = load i16, i16* %v2_cff0, align 2
  %v1_cff4 = load i32, i32* @r7, align 4
  %v2_cff4 = add i32 %v1_cff4, %v5_cfec
  store i32 %v2_cff4, i32* @lr, align 4
  %v3_cff8 = add i32 %v2_cff4, 2
  %v4_cff8 = inttoptr i32 %v3_cff8 to i16*
  store i16 %v3_cff0, i16* %v4_cff8, align 2
  %v0_cffc = load i32, i32* @r8, align 4
  store i32 %v0_cffc, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d008 = load i32, i32* @r5, align 4
  store i32 %v0_d008, i32* %r1.global-to-local, align 4
  %v0_d00c = load i32, i32* @fp, align 4
  store i32 %v0_d00c, i32* %r0.global-to-local, align 4
  %v0_d010 = load i32, i32* @lr, align 4
  %v6_d018 = call i32 @function_13840(i32 %v0_d00c, i32 %v0_d008, i32 %v0_cffc, i32 16384, i32 %v0_d010, i32 16)
  %v3_d01c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d01c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_d024 = add i32 %v3_d01c, 1
  store i32 %v1_d024, i32* %r0.global-to-local, align 4
  store i32 %v1_d024, i32* %stack_var_-44, align 4
  %v6_d030 = icmp slt i32 %v1_d024, %arg2
  br i1 %v6_d030, label %dec_label_pc_d034, label %dec_label_pc_d1d8

dec_label_pc_d034:                                ; preds = %dec_label_pc_cfac, %dec_label_pc_cf58
  %v1_d048 = phi i32 [ %v1_d024, %dec_label_pc_cfac ], [ 0, %dec_label_pc_cf58 ]
  %v5_d038 = mul i32 %v1_d048, 24
  %v1_d040 = load i32, i32* @r7, align 4
  %v2_d040 = add i32 %v1_d040, %v5_d038
  store i32 %v2_d040, i32* %r3.global-to-local, align 4
  %v1_d044 = add i32 %v2_d040, 20
  %v2_d044 = inttoptr i32 %v1_d044 to i8*
  %v3_d044 = load i8, i8* %v2_d044, align 1
  %v4_d044 = zext i8 %v3_d044 to i32
  store i32 %v4_d044, i32* %r2.global-to-local, align 4
  %v4_d048 = mul i32 %v1_d048, 4
  %v5_d048 = add i32 %v4_d048, %v2_cc68
  %v6_d048 = inttoptr i32 %v5_d048 to i32*
  %v7_d048 = load i32, i32* %v6_d048, align 4
  store i32 %v7_d048, i32* @r5, align 4
  %v1_d050 = add i32 %v7_d048, 20
  store i32 %v1_d050, i32* @r6, align 4
  %tmp54 = icmp ugt i8 %v3_d044, 31
  br i1 %tmp54, label %dec_label_pc_cf6c, label %dec_label_pc_d058

dec_label_pc_d058:                                ; preds = %dec_label_pc_d034
  %v1_d058 = add i32 %v2_d040, 16
  %v2_d058 = inttoptr i32 %v1_d058 to i32*
  %v3_d058 = load i32, i32* %v2_d058, align 4
  %v0_d05c = call i32 @function_f190()
  store i32 %v0_d05c, i32* %r0.global-to-local, align 4
  %v3_d060 = load i32, i32* %stack_var_-44, align 4
  %v5_d068 = mul i32 %v3_d060, 24
  %v1_d06c = and i32 %v3_d058, 16711680
  store i32 %v1_d06c, i32* %ip.global-to-local, align 4
  %v3_d070 = udiv i32 %v3_d058, 16777216
  %v4_d074 = udiv i32 %v1_d06c, 256
  %v5_d074 = or i32 %v4_d074, %v3_d070
  store i32 %v5_d074, i32* %r2.global-to-local, align 4
  %v1_d078 = load i32, i32* @r7, align 4
  %v2_d078 = add i32 %v1_d078, %v5_d068
  store i32 %v2_d078, i32* %r1.global-to-local, align 4
  %v1_d07c = and i32 %v3_d058, 65280
  store i32 %v1_d07c, i32* %r3.global-to-local, align 4
  %v1_d080 = add i32 %v2_d078, 20
  %v2_d080 = inttoptr i32 %v1_d080 to i8*
  %v3_d080 = load i8, i8* %v2_d080, align 1
  %v4_d080 = zext i8 %v3_d080 to i32
  store i32 %v4_d080, i32* %ip.global-to-local, align 4
  %v5_d088 = call i32 @llvm.bswap.i32(i32 %v3_d058)
  %v7_d08c = lshr i32 %v0_d05c, %v4_d080
  %v8_d08c = add i32 %v7_d08c, %v5_d088
  store i32 %v8_d08c, i32* %r2.global-to-local, align 4
  %v1_d090 = and i32 %v8_d08c, 16711680
  store i32 %v1_d090, i32* %r0.global-to-local, align 4
  %v1_d09c = and i32 %v8_d08c, 65280
  store i32 %v1_d09c, i32* %r1.global-to-local, align 4
  %v5_d0a4 = call i32 @llvm.bswap.i32(i32 %v8_d08c)
  store i32 %v5_d0a4, i32* %r3.global-to-local, align 4
  %v0_d0a8 = load i32, i32* @sb, align 4
  %v3_d0a8 = icmp eq i32 %v0_d0a8, -1
  %v1_d0ac = load i32, i32* @r5, align 4
  %v2_d0ac = add i32 %v1_d0ac, 16
  %v3_d0ac = inttoptr i32 %v2_d0ac to i32*
  store i32 %v5_d0a4, i32* %v3_d0ac, align 4
  br i1 %v3_d0a8, label %dec_label_pc_d0b4, label %dec_label_pc_cf74

dec_label_pc_d0b4:                                ; preds = %dec_label_pc_d058, %dec_label_pc_cf6c
  %v0_d0b4 = call i32 @function_f190()
  store i32 %v0_d0b4, i32* %r0.global-to-local, align 4
  store i32 %v3_ce04, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v1_d0c8 = load i32, i32* @r5, align 4
  %v2_d0c8 = add i32 %v1_d0c8, 12
  %v3_d0c8 = inttoptr i32 %v2_d0c8 to i32*
  store i32 %v0_d0b4, i32* %v3_d0c8, align 4
  br i1 %v3_d0c4, label %dec_label_pc_d0d0, label %dec_label_pc_d0b4.dec_label_pc_cf88_crit_edge

dec_label_pc_d0b4.dec_label_pc_cf88_crit_edge:    ; preds = %dec_label_pc_d0b4
  %v1_cf8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf88

dec_label_pc_d0d0:                                ; preds = %dec_label_pc_d0b4, %dec_label_pc_cf74
  %v0_d0d0 = call i32 @function_f190()
  %v1_d0d0 = trunc i32 %v0_d0d0 to i16
  %v3_d0d4 = load i32, i32* @r5, align 4
  %v4_d0d4 = add i32 %v3_d0d4, 4
  %v5_d0d4 = inttoptr i32 %v4_d0d4 to i16*
  store i16 %v1_d0d0, i16* %v5_d0d4, align 2
  store i32 %v3_ce08, i32* %r0.global-to-local, align 4
  %v1_d0dc = load i32, i32* @r4, align 4
  %v9_d0dc = icmp eq i32 %v3_ce08, %v1_d0dc
  br i1 %v9_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_cf94

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d0, %dec_label_pc_cf88
  %v0_d0e4 = call i32 @function_f190()
  %v1_d0e4 = trunc i32 %v0_d0e4 to i16
  store i32 %v0_d0e4, i32* %r0.global-to-local, align 4
  store i32 %v3_ce0c, i32* %r1.global-to-local, align 4
  %v1_d0ec = load i32, i32* @r4, align 4
  %v9_d0ec = icmp eq i32 %v3_ce0c, %v1_d0ec
  %v3_d0f0 = load i32, i32* @r5, align 4
  %v4_d0f0 = add i32 %v3_d0f0, 20
  %v5_d0f0 = inttoptr i32 %v4_d0f0 to i16*
  store i16 %v1_d0e4, i16* %v5_d0f0, align 2
  br i1 %v9_d0ec, label %dec_label_pc_d0f8, label %dec_label_pc_cfa0

dec_label_pc_d0f8:                                ; preds = %dec_label_pc_d0e4, %dec_label_pc_cf94
  %v0_d0f8 = call i32 @function_f190()
  %v1_d0f8 = trunc i32 %v0_d0f8 to i16
  store i32 %v0_d0f8, i32* %r0.global-to-local, align 4
  store i32 %v1_cd5c, i32* %r2.global-to-local, align 4
  %v3_d104 = load i32, i32* @r6, align 4
  %v4_d104 = add i32 %v3_d104, 2
  %v5_d104 = inttoptr i32 %v4_d104 to i16*
  store i16 %v1_d0f8, i16* %v5_d104, align 2
  br i1 %v2_d100, label %dec_label_pc_cfac, label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_d0f8
  %v0_d10c = load i32, i32* @r5, align 4
  %v1_d10c = add i32 %v0_d10c, 28
  store i32 %v1_d10c, i32* @r4, align 4
  store i32 %v1_d10c, i32* %r0.global-to-local, align 4
  store i32 %v0_cde8, i32* %r1.global-to-local, align 4
  %v2_d118 = call i32 @function_f254(i32 %v1_d10c, i32 %v0_cde8)
  store i32 %v2_d118, i32* %r0.global-to-local, align 4
  store i32 %v0_cde8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d124 = load i32, i32* @r4, align 4
  %v4_d124 = add i32 %v3_d124, %v0_cde8
  %v5_d124 = inttoptr i32 %v4_d124 to i8*
  store i8 0, i8* %v5_d124, align 1
  br label %dec_label_pc_cfac

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d12c.preheader, %dec_label_pc_d12c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_d138 = call i32 @function_1442c(i32 1510, i32 1)
  store i32 %v2_d138, i32* %r0.global-to-local, align 4
  store i32 %v2_cc68, i32* %ip.global-to-local, align 4
  %v3_d140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d140, i32* %r1.global-to-local, align 4
  %v2_d144 = load i32, i32* @r4, align 4
  %v5_d144 = mul i32 %v2_d144, 4
  %v6_d144 = add i32 %v5_d144, %v2_cc68
  %v7_d144 = inttoptr i32 %v6_d144 to i32*
  store i32 %v2_d138, i32* %v7_d144, align 4
  %v0_d148 = load i32, i32* %ip.global-to-local, align 4
  %v1_d148 = load i32, i32* %r1.global-to-local, align 4
  %v4_d148 = mul i32 %v1_d148, 4
  %v5_d148 = add i32 %v4_d148, %v0_d148
  %v6_d148 = inttoptr i32 %v5_d148 to i32*
  %v7_d148 = load i32, i32* %v6_d148, align 4
  store i32 %v7_d148, i32* %r3.global-to-local, align 4
  %v1_d14c = inttoptr i32 %v7_d148 to i8*
  %v2_d14c = load i8, i8* %v1_d14c, align 1
  %tmp55 = urem i8 %v2_d14c, 16
  %v1_d150 = zext i8 %tmp55 to i32
  %v1_d154 = or i32 %v1_d150, 64
  store i32 %v1_d154, i32* %r2.global-to-local, align 4
  %v1_d158 = trunc i32 %v1_d154 to i8
  store i8 %v1_d158, i8* %v1_d14c, align 1
  %v0_d15c = load i32, i32* %r3.global-to-local, align 4
  %v1_d15c = inttoptr i32 %v0_d15c to i8*
  %v2_d15c = load i8, i8* %v1_d15c, align 1
  %v1_d160 = and i8 %v2_d15c, -16
  %v1_d164 = or i8 %v1_d160, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_d164, i8* %v1_d15c, align 1
  %v0_d170 = load i32, i32* %ip.global-to-local, align 4
  %v1_d170 = trunc i32 %v0_d170 to i8
  %v2_d170 = load i32, i32* %r3.global-to-local, align 4
  %v3_d170 = add i32 %v2_d170, 9
  %v4_d170 = inttoptr i32 %v3_d170 to i8*
  store i8 %v1_d170, i8* %v4_d170, align 1
  %v2_d178 = load i32, i32* %r3.global-to-local, align 4
  %v3_d178 = add i32 %v2_d178, 1
  %v4_d178 = inttoptr i32 %v3_d178 to i8*
  store i8 %v5_cca0, i8* %v4_d178, align 1
  store i32 %v4_d17c, i32* %ip.global-to-local, align 4
  %v0_d180 = load i32, i32* %r1.global-to-local, align 4
  %v3_d180 = mul i32 %v0_d180, 32
  store i32 %v3_d180, i32* %r0.global-to-local, align 4
  %v2_d184 = load i32, i32* %r3.global-to-local, align 4
  %v3_d184 = add i32 %v2_d184, 8
  %v4_d184 = inttoptr i32 %v3_d184 to i8*
  store i8 %v5_ccd8, i8* %v4_d184, align 1
  %v0_d188 = load i32, i32* @sb, align 4
  %v1_d188 = load i32, i32* %r3.global-to-local, align 4
  %v2_d188 = add i32 %v1_d188, 12
  %v3_d188 = inttoptr i32 %v2_d188 to i32*
  store i32 %v0_d188, i32* %v3_d188, align 4
  %v0_d18c = load i32, i32* %r0.global-to-local, align 4
  %v1_d18c = load i32, i32* %r1.global-to-local, align 4
  %tmp56 = mul i32 %v1_d18c, -8
  %v5_d18c = add i32 %v0_d18c, %tmp56
  %v1_d190 = load i32, i32* @r7, align 4
  %v2_d190 = add i32 %v5_d18c, %v1_d190
  store i32 %v2_d190, i32* %r2.global-to-local, align 4
  %v1_d194 = add i32 %v2_d190, 16
  %v2_d194 = inttoptr i32 %v1_d194 to i32*
  %v3_d194 = load i32, i32* %v2_d194, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_d19c = load i32, i32* %r3.global-to-local, align 4
  %v2_d19c = add i32 %v1_d19c, 16
  %v3_d19c = inttoptr i32 %v2_d19c to i32*
  store i32 %v3_d194, i32* %v3_d19c, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_d1a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d1a4 = add i32 %v0_d1a4, 1
  store i32 %v1_d1a4, i32* @r4, align 4
  %v0_d1a8 = load i32, i32* @r6, align 4
  %v1_d1a8 = trunc i32 %v0_d1a8 to i16
  %v2_d1a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1a8 = add i32 %v2_d1a8, 2
  %v4_d1a8 = inttoptr i32 %v3_d1a8 to i16*
  store i16 %v1_d1a8, i16* %v4_d1a8, align 2
  %v0_d1ac = load i32, i32* %r3.global-to-local, align 4
  %v1_d1ac = add i32 %v0_d1ac, 20
  store i32 %v1_d1ac, i32* %r1.global-to-local, align 4
  %v0_d1b0 = load i32, i32* @r8, align 4
  %v1_d1b0 = trunc i32 %v0_d1b0 to i16
  %v3_d1b0 = add i32 %v0_d1ac, 4
  %v4_d1b0 = inttoptr i32 %v3_d1b0 to i16*
  store i16 %v1_d1b0, i16* %v4_d1b0, align 2
  %v0_d1b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1b4 = trunc i32 %v0_d1b4 to i16
  %v2_d1b4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b4 = add i32 %v2_d1b4, 6
  %v4_d1b4 = inttoptr i32 %v3_d1b4 to i16*
  store i16 %v1_d1b4, i16* %v4_d1b4, align 2
  %v0_d1b8 = load i32, i32* @sl, align 4
  %v1_d1b8 = trunc i32 %v0_d1b8 to i16
  %v2_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b8 = add i32 %v2_d1b8, 20
  %v4_d1b8 = inttoptr i32 %v3_d1b8 to i16*
  store i16 %v1_d1b8, i16* %v4_d1b8, align 2
  store i32 %v4_d1bc, i32* %r3.global-to-local, align 4
  %v0_d1c0 = load i32, i32* @r4, align 4
  %v1_d1c0 = load i32, i32* %r0.global-to-local, align 4
  %v0_d1c4 = load i32, i32* @r5, align 4
  %v1_d1c4 = trunc i32 %v0_d1c4 to i16
  %v2_d1c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_d1c4 = add i32 %v2_d1c4, 4
  %v4_d1c4 = inttoptr i32 %v3_d1c4 to i16*
  store i16 %v1_d1c4, i16* %v4_d1c4, align 2
  %v0_d1c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d1c8 = trunc i32 %v0_d1c8 to i16
  %v2_d1c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_d1c8 = add i32 %v2_d1c8, 2
  %v4_d1c8 = inttoptr i32 %v3_d1c8 to i16*
  store i16 %v1_d1c8, i16* %v4_d1c8, align 2
  %v0_d1cc = load i32, i32* @r4, align 4
  store i32 %v0_d1cc, i32* %stack_var_-44, align 4
  %v5_d1d0 = icmp slt i32 %v0_d1c0, %v1_d1c0
  br i1 %v5_d1d0, label %dec_label_pc_d12c, label %dec_label_pc_cf44.preheader

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_cfac, %dec_label_pc_cf44
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d1dc = call i32 @function_12d34(i32* null)
  store i32 %v2_d1dc, i32* %r0.global-to-local, align 4
  store i32 %v2_cd80, i32* %r3.global-to-local, align 4
  %v6_d1e8 = icmp slt i32 %v2_cd80, %v2_d1dc
  br i1 %v6_d1e8, label %dec_label_pc_d1ec, label %dec_label_pc_cf44

dec_label_pc_d1ec:                                ; preds = %dec_label_pc_d1d8, %dec_label_pc_cc3c, %dec_label_pc_d1f8
  %v1_d1f4 = phi i32 [ %v3_cd94, %dec_label_pc_cc3c ], [ %v1_d1fc, %dec_label_pc_d1f8 ], [ %v2_d1dc, %dec_label_pc_d1d8 ]
  store i32 %v27_cc3c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d1f4

dec_label_pc_d1f8:                                ; preds = %dec_label_pc_cda4
  %v0_d1f8 = load i32, i32* @fp, align 4
  store i32 %v0_d1f8, i32* %r0.global-to-local, align 4
  %v1_d1fc = call i32 @function_130b4(i32 %v0_d1f8)
  store i32 %v1_d1fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1ec

; uselistorder directives
  uselistorder i32 %v1_d1fc, { 1, 0 }
  uselistorder i32 %v0_d0f8, { 1, 0 }
  uselistorder i32 %v0_d0e4, { 1, 0 }
  uselistorder i32 %v1_d0dc, { 1, 0 }
  uselistorder i32 %v5_d0a4, { 1, 0 }
  uselistorder i32 %v3_d058, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d024, { 1, 2, 0, 3 }
  uselistorder i32 %v5_cfec, { 1, 0 }
  uselistorder i32 %v4_cfdc, { 1, 0 }
  uselistorder i32 %v0_cfcc, { 1, 0, 2 }
  uselistorder i32 %v2_cfbc, { 1, 0 }
  uselistorder i1 %v2_d100, { 1, 0 }
  uselistorder i32 %v1_cf04, { 1, 0 }
  uselistorder i16 %v5_ce94, { 1, 0 }
  uselistorder i32 %v3_ce80, { 1, 0 }
  uselistorder i32 %v3_ce7c, { 1, 0 }
  uselistorder i32 %v3_ce78, { 1, 0 }
  uselistorder i32 %v1_ce38, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ce34, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_ce08, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_cdfc, { 1, 0 }
  uselistorder i32 %v0_cde8, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_cd94, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_cd80, { 1, 0 }
  uselistorder i32 %v1_cd5c, { 2, 1, 3, 0 }
  uselistorder i32 %v6_cd1c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_cce8, { 1, 0 }
  uselistorder i8 %v5_ccd8, { 1, 0, 2 }
  uselistorder i32 %v6_ccbc, { 1, 0 }
  uselistorder i32 %v7_cca4, { 1, 0, 2 }
  uselistorder i32 %v6_cc80, { 1, 0 }
  uselistorder i32 %v2_cc68, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_d1ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d12c, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_cfac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf44, { 1, 0 }
  uselistorder label %dec_label_pc_cea0, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @function_d208(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_d208:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d208 = load i32, i32* @r4, align 4
  %v27_d208 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d234 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_d238 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d240 = load i32, i32* @r7, align 4
  store i32 %v0_d240, i32* %r3.global-to-local, align 4
  store i32 %v2_d234, i32* @sb, align 4
  %v0_d248 = load i32, i32* @r5, align 4
  %v4_d24c = inttoptr i32 %v0_d238 to i32*
  %v5_d24c = call i32 @function_9fe8(i32 %v0_d248, i32* %v4_d24c, i32 2, i32 %v0_d240)
  %v1_d258 = urem i32 %v5_d24c, 256
  store i32 %v1_d258, i32* %ip.global-to-local, align 4
  %v0_d25c = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d268 = load i32, i32* @r5, align 4
  %v5_d26c = trunc i32 %v5_d24c to i8
  %v6_d270 = inttoptr i32 %v0_d25c to i32*
  %v7_d270 = call i32 @function_9fe8(i32 %v0_d268, i32* %v6_d270, i32 3, i32 65535)
  %v0_d274 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d284 = load i32, i32* @r5, align 4
  %v5_d288 = inttoptr i32 %v0_d274 to i32*
  %v6_d288 = call i32 @function_9fe8(i32 %v0_d284, i32* %v5_d288, i32 4, i32 64)
  %v0_d290 = load i32, i32* @r4, align 4
  %v1_d294 = urem i32 %v6_d288, 256
  store i32 %v1_d294, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d29c = load i32, i32* @r7, align 4
  store i32 %v0_d29c, i32* %r3.global-to-local, align 4
  %v0_d2a0 = load i32, i32* @r5, align 4
  %v6_d2a8 = inttoptr i32 %v0_d290 to i32*
  %v7_d2a8 = call i32 @function_9fe8(i32 %v0_d2a0, i32* %v6_d2a8, i32 5, i32 %v0_d29c)
  %v1_d2b4 = urem i32 %v7_d2a8, 256
  store i32 %v1_d2b4, i32* %ip.global-to-local, align 4
  %v0_d2b8 = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d2c4 = load i32, i32* @r5, align 4
  %v5_d2cc = inttoptr i32 %v0_d2b8 to i32*
  %v6_d2cc = call i32 @function_9fe8(i32 %v0_d2c4, i32* %v5_d2cc, i32 6, i32 65535)
  %v0_d2d4 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d2e4 = load i32, i32* @r5, align 4
  %v5_d2e8 = inttoptr i32 %v0_d2d4 to i32*
  %v6_d2e8 = call i32 @function_9fe8(i32 %v0_d2e4, i32* %v5_d2e8, i32 7, i32 27015)
  store i32 %v6_d2e8, i32* @r4, align 4
  %v0_d2f0 = load i32, i32* @r7, align 4
  store i32 %v0_d2f0, i32* %stack_var_-48, align 4
  %v1_d2f8 = inttoptr i32 %v0_d2f0 to i32*
  %v2_d2f8 = call i32 @function_12d34(i32* %v1_d2f8)
  %v1_d2fc = load i32, i32* @r6, align 4
  %v2_d2fc = add i32 %v1_d2fc, %v2_d2f8
  %v1_d308 = call i32 @function_11a84(i32 32)
  %v3_d314 = call i32 @function_119c0(i32 32, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d328 = call i32 @function_138c4(i32 2, i32 3, i32 17)
  %v7_d32c = icmp eq i32 %v3_d328, -1
  store i32 %v3_d328, i32* @sl, align 4
  br i1 %v7_d32c, label %dec_label_pc_d658, label %dec_label_pc_d338

dec_label_pc_d338:                                ; preds = %dec_label_pc_d208
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d340 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d340, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_d348 = load i32, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d354 = call i32 @function_13880(i32 %v3_d328, i32 %v0_d348, i32 3, i32 %v6_d340, i32 ptrtoint (i32* @0 to i32))
  %v7_d358 = icmp eq i32 %v5_d354, -1
  br i1 %v7_d358, label %dec_label_pc_d664, label %dec_label_pc_d360

dec_label_pc_d360:                                ; preds = %dec_label_pc_d338
  store i32 %v6_d2cc, i32* %r2.global-to-local, align 4
  %v0_d36c = load i32, i32* @r4, align 4
  %v3_d370 = mul i32 %v6_d2cc, 65536
  store i32 %v3_d370, i32* %ip.global-to-local, align 4
  %v3_d374 = urem i32 %v7_d270, 65536
  store i32 %v3_d374, i32* %r3.global-to-local, align 4
  %v3_d378 = urem i32 %v6_d2cc, 65536
  %v3_d37c = urem i32 %v0_d36c, 65536
  %v0_d380 = load i32, i32* @fp, align 4
  %v2_d380 = icmp eq i32 %v0_d380, 0
  %v0_d384 = load i32, i32* @r7, align 4
  store i32 %v0_d384, i32* %stack_var_-44, align 4
  br i1 %v2_d380, label %dec_label_pc_d4c4.preheader, label %dec_label_pc_d398

dec_label_pc_d398:                                ; preds = %dec_label_pc_d360
  %tmp39 = mul i32 %v7_d270, 256
  %v3_d3a0 = and i32 %tmp39, 65280
  store i32 %v3_d3a0, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v0_d36c, 256
  %v3_d3a4 = and i32 %tmp40, 65280
  %tmp41 = udiv i32 %v7_d270, 256
  %v4_d3ac = urem i32 %tmp41, 256
  %v5_d3ac = or i32 %v4_d3ac, %tmp39
  %tmp42 = udiv i32 %v0_d36c, 256
  %v4_d3b0 = urem i32 %tmp42, 256
  %v5_d3b0 = or i32 %v4_d3b0, %v3_d3a4
  store i32 %v5_d3b0, i32* @lr, align 4
  %tmp43 = mul i32 %v6_d2cc, 256
  %v3_d3b4 = and i32 %tmp43, 65280
  store i32 %v3_d3b4, i32* %r2.global-to-local, align 4
  %v5_d3b8 = trunc i32 %v5_d3ac to i16
  %tmp44 = udiv i32 %v6_d2cc, 256
  %v4_d3c0 = urem i32 %tmp44, 256
  %v5_d3c0 = or i32 %v4_d3c0, %v3_d3b4
  store i32 %v5_d3c0, i32* @r6, align 4
  store i32 %v0_d384, i32* @r4, align 4
  %sext5 = mul nuw i32 %v5_d3b0, 65536
  %v4_d490 = sdiv i32 %sext5, 65536
  %v1_d43c = trunc i32 %v6_d288 to i8
  br label %dec_label_pc_d3c8

dec_label_pc_d3c8:                                ; preds = %.thread, %dec_label_pc_d398
  %v2_d3d0 = call i32 @function_1442c(i32 128, i32 1)
  %v3_d3d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d3d4, i32* %r2.global-to-local, align 4
  %v1_d3d8 = load i32, i32* @sb, align 4
  %v2_d3d8 = load i32, i32* @r4, align 4
  %v5_d3d8 = mul i32 %v2_d3d8, 4
  %v6_d3d8 = add i32 %v5_d3d8, %v1_d3d8
  %v7_d3d8 = inttoptr i32 %v6_d3d8 to i32*
  store i32 %v2_d3d0, i32* %v7_d3d8, align 4
  %v0_d3dc = load i32, i32* %r2.global-to-local, align 4
  %v3_d3dc = mul i32 %v0_d3dc, 32
  store i32 %v3_d3dc, i32* %r3.global-to-local, align 4
  %v0_d3e0 = load i32, i32* @sb, align 4
  %v4_d3e0 = mul i32 %v0_d3dc, 4
  %v5_d3e0 = add i32 %v0_d3e0, %v4_d3e0
  %v6_d3e0 = inttoptr i32 %v5_d3e0 to i32*
  %v7_d3e0 = load i32, i32* %v6_d3e0, align 4
  store i32 %v7_d3e0, i32* @lr, align 4
  %v5_d3e4 = mul i32 %v0_d3dc, 24
  store i32 %v5_d3e4, i32* %r3.global-to-local, align 4
  %v1_d3e8 = load i32, i32* @r8, align 4
  %v2_d3e8 = add i32 %v1_d3e8, %v5_d3e4
  store i32 %v2_d3e8, i32* @r5, align 4
  %v1_d3ec = inttoptr i32 %v7_d3e0 to i8*
  %v2_d3ec = load i8, i8* %v1_d3ec, align 1
  %tmp = urem i8 %v2_d3ec, 16
  %v1_d3f0 = zext i8 %tmp to i32
  %v1_d3f4 = or i32 %v1_d3f0, 64
  store i32 %v1_d3f4, i32* %r3.global-to-local, align 4
  %v1_d3fc = trunc i32 %v1_d3f4 to i8
  store i8 %v1_d3fc, i8* %v1_d3ec, align 1
  %v0_d400 = load i32, i32* @lr, align 4
  %v1_d400 = inttoptr i32 %v0_d400 to i8*
  %v2_d400 = load i8, i8* %v1_d400, align 1
  %v1_d404 = and i8 %v2_d400, -16
  %v1_d408 = or i8 %v1_d404, 5
  store i8 %v1_d408, i8* %v1_d400, align 1
  %v2_d414 = load i32, i32* @lr, align 4
  %v3_d414 = add i32 %v2_d414, 1
  %v4_d414 = inttoptr i32 %v3_d414 to i8*
  store i8 %v5_d26c, i8* %v4_d414, align 1
  %v3_d418 = load i32, i32* %stack_var_-48, align 4
  %v3_d41c = mul i32 %v3_d418, 65536
  %v1_d420 = add i32 %v3_d41c, 2097152
  %v3_d424 = udiv i32 %v1_d420, 256
  %v1_d428 = and i32 %v3_d424, 65280
  %v4_d42c = udiv i32 %v1_d420, 16777216
  %v5_d42c = or i32 %v1_d428, %v4_d42c
  store i32 %v5_d42c, i32* %r3.global-to-local, align 4
  store i32 %v1_d2b4, i32* %r4.global-to-local, align 4
  %v3_d438 = urem i32 %v3_d418, 65536
  store i32 %v3_d438, i32* %r2.global-to-local, align 4
  %v2_d43c = load i32, i32* @lr, align 4
  %v3_d43c = add i32 %v2_d43c, 8
  %v4_d43c = inttoptr i32 %v3_d43c to i8*
  store i8 %v1_d43c, i8* %v4_d43c, align 1
  %v0_d440 = load i32, i32* %r3.global-to-local, align 4
  %v1_d440 = trunc i32 %v0_d440 to i16
  %v2_d440 = load i32, i32* @lr, align 4
  %v3_d440 = add i32 %v2_d440, 2
  %v4_d440 = inttoptr i32 %v3_d440 to i16*
  store i16 %v1_d440, i16* %v4_d440, align 2
  %v0_d444 = load i32, i32* %r2.global-to-local, align 4
  %v1_d444 = mul i32 %v0_d444, 65536
  %v3_d44c = add i32 %v1_d444, 786432
  store i32 %v3_d44c, i32* %r2.global-to-local, align 4
  %v2_d450 = load i32, i32* @lr, align 4
  %v3_d450 = add i32 %v2_d450, 4
  %v4_d450 = inttoptr i32 %v3_d450 to i16*
  store i16 %v5_d3b8, i16* %v4_d450, align 2
  %v0_d454 = load i32, i32* %r2.global-to-local, align 4
  %v3_d454 = udiv i32 %v0_d454, 256
  %v1_d458 = and i32 %v3_d454, 65280
  %v4_d45c = udiv i32 %v0_d454, 16777216
  %v5_d45c = or i32 %v1_d458, %v4_d45c
  store i32 %v5_d45c, i32* %ip.global-to-local, align 4
  %v2_d464 = load i32, i32* @lr, align 4
  %v3_d464 = add i32 %v2_d464, 9
  %v4_d464 = inttoptr i32 %v3_d464 to i8*
  store i8 17, i8* %v4_d464, align 1
  %v0_d468 = load i32, i32* %r4.global-to-local, align 4
  %v2_d468 = icmp eq i32 %v0_d468, 0
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_d468, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d3c8
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d474 = load i32, i32* @lr, align 4
  %v4_d474 = add i32 %v3_d474, 6
  %v5_d474 = inttoptr i32 %v4_d474 to i16*
  store i16 64, i16* %v5_d474, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d3c8, %bb
  %v2_d478 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_d478, i32* %r2.global-to-local, align 4
  %v1_d47c = load i32, i32* @lr, align 4
  %v2_d47c = add i32 %v1_d47c, 12
  %v3_d47c = inttoptr i32 %v2_d47c to i32*
  store i32 %v2_d478, i32* %v3_d47c, align 4
  %v0_d480 = load i32, i32* @r5, align 4
  %v1_d480 = add i32 %v0_d480, 16
  %v2_d480 = inttoptr i32 %v1_d480 to i32*
  %v3_d480 = load i32, i32* %v2_d480, align 4
  store i32 %v3_d480, i32* %r3.global-to-local, align 4
  %v0_d484 = load i32, i32* @lr, align 4
  %v1_d484 = add i32 %v0_d484, 20
  store i32 %v1_d484, i32* %r4.global-to-local, align 4
  %v0_d488 = load i32, i32* %ip.global-to-local, align 4
  %v1_d488 = trunc i32 %v0_d488 to i16
  %v3_d488 = add i32 %v0_d484, 24
  %v4_d488 = inttoptr i32 %v3_d488 to i16*
  store i16 %v1_d488, i16* %v4_d488, align 2
  %v0_d48c = load i32, i32* %r3.global-to-local, align 4
  %v1_d48c = load i32, i32* @lr, align 4
  %v2_d48c = add i32 %v1_d48c, 16
  %v3_d48c = inttoptr i32 %v2_d48c to i32*
  store i32 %v0_d48c, i32* %v3_d48c, align 4
  store i32 %v4_d490, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d498 = load i32, i32* @lr, align 4
  %v2_d498 = add i32 %v1_d498, 28
  %v3_d498 = inttoptr i32 %v2_d498 to i32*
  store i32 -1, i32* %v3_d498, align 4
  %v0_d49c = load i32, i32* %ip.global-to-local, align 4
  %v1_d49c = trunc i32 %v0_d49c to i16
  %v2_d49c = load i32, i32* %r4.global-to-local, align 4
  %v3_d49c = add i32 %v2_d49c, 2
  %v4_d49c = inttoptr i32 %v3_d49c to i16*
  store i16 %v1_d49c, i16* %v4_d49c, align 2
  %v0_d4a0 = load i32, i32* @lr, align 4
  %v1_d4a0 = add i32 %v0_d4a0, 32
  %v0_d4a4 = load i32, i32* @r6, align 4
  %v1_d4a4 = trunc i32 %v0_d4a4 to i16
  %v3_d4a4 = add i32 %v0_d4a0, 20
  %v4_d4a4 = inttoptr i32 %v3_d4a4 to i16*
  store i16 %v1_d4a4, i16* %v4_d4a4, align 2
  %v3_d4a8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4a8, i32* %r2.global-to-local, align 4
  %v3_d4ac = call i32 @function_124c0(i32 %v1_d4a0, i32 %v3_d314, i32 %v3_d4a8)
  %v3_d4b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d4b0, i32* %r3.global-to-local, align 4
  %v1_d4b4 = add i32 %v3_d4b0, 1
  store i32 %v1_d4b4, i32* @r4, align 4
  %v1_d4b8 = load i32, i32* @fp, align 4
  store i32 %v1_d4b4, i32* %stack_var_-44, align 4
  %v5_d4c0 = icmp slt i32 %v1_d4b4, %v1_d4b8
  br i1 %v5_d4c0, label %dec_label_pc_d3c8, label %dec_label_pc_d4c4.preheader

dec_label_pc_d4c4.preheader:                      ; preds = %.thread, %dec_label_pc_d360
  %v0_d4c8.ph = phi i32 [ 0, %dec_label_pc_d360 ], [ %v1_d4b8, %.thread ]
  %v3_d4e0 = icmp eq i32 %v3_d374, 65535
  br label %dec_label_pc_d4c4

dec_label_pc_d4c4:                                ; preds = %dec_label_pc_d4c4.preheader, %dec_label_pc_d644.dec_label_pc_d4c4_crit_edge
  %v0_d4c8 = phi i32 [ %v0_d4c8.pre, %dec_label_pc_d644.dec_label_pc_d4c4_crit_edge ], [ %v0_d4c8.ph, %dec_label_pc_d4c4.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d4c8 = icmp eq i32 %v0_d4c8, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d4c8, label %dec_label_pc_d644, label %dec_label_pc_d4d4

dec_label_pc_d4d4:                                ; preds = %dec_label_pc_d4c4
  br label %dec_label_pc_d588

dec_label_pc_d4dc:                                ; preds = %dec_label_pc_d588
  br i1 %v3_d4e0, label %dec_label_pc_d610, label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d5b0.dec_label_pc_d4e8_crit_edge, %dec_label_pc_d4dc
  %v1_d4ec = phi i32 [ %v1_d4ec.pre, %dec_label_pc_d5b0.dec_label_pc_d4e8_crit_edge ], [ 65535, %dec_label_pc_d4dc ]
  store i32 %v3_d378, i32* %r2.global-to-local, align 4
  %v9_d4ec = icmp eq i32 %v3_d378, %v1_d4ec
  br i1 %v9_d4ec, label %dec_label_pc_d624, label %dec_label_pc_d4f4

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d610.dec_label_pc_d4f4_crit_edge, %dec_label_pc_d4e8
  %v1_d4f8 = phi i32 [ %v1_d4f8.pre, %dec_label_pc_d610.dec_label_pc_d4f4_crit_edge ], [ %v1_d4ec, %dec_label_pc_d4e8 ]
  store i32 %v3_d37c, i32* %r3.global-to-local, align 4
  %v9_d4f8 = icmp eq i32 %v3_d37c, %v1_d4f8
  br i1 %v9_d4f8, label %dec_label_pc_d638, label %dec_label_pc_d500

dec_label_pc_d500:                                ; preds = %dec_label_pc_d624, %dec_label_pc_d4f4, %dec_label_pc_d638
  store i32 0, i32* @r4, align 4
  %v2_d508 = load i32, i32* @r5, align 4
  %v3_d508 = add i32 %v2_d508, 10
  %v4_d508 = inttoptr i32 %v3_d508 to i16*
  store i16 0, i16* %v4_d508, align 2
  %v0_d50c = load i32, i32* @r5, align 4
  store i32 %v0_d50c, i32* @r0, align 4
  %v2_d510 = call i32 @function_dd58(i32 %v0_d50c, i32 20)
  %v3_d510 = trunc i32 %v2_d510 to i16
  %v3_d514 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d514, i32* %r3.global-to-local, align 4
  %v3_d518 = load i32, i32* @r5, align 4
  %v4_d518 = add i32 %v3_d518, 10
  %v5_d518 = inttoptr i32 %v4_d518 to i16*
  store i16 %v3_d510, i16* %v5_d518, align 2
  %v0_d51c = load i32, i32* @r6, align 4
  store i32 %v0_d51c, i32* @r1, align 4
  %v1_d520 = add i32 %v0_d51c, 4
  %v2_d520 = inttoptr i32 %v1_d520 to i16*
  %v3_d520 = load i16, i16* %v2_d520, align 2
  %v4_d520 = zext i16 %v3_d520 to i32
  store i32 %v4_d520, i32* %r2.global-to-local, align 4
  %v0_d524 = load i32, i32* @r4, align 4
  %v1_d524 = trunc i32 %v0_d524 to i16
  %v3_d524 = add i32 %v0_d51c, 6
  %v4_d524 = inttoptr i32 %v3_d524 to i16*
  store i16 %v1_d524, i16* %v4_d524, align 2
  %v0_d528 = load i32, i32* %r3.global-to-local, align 4
  %v1_d528 = add i32 %v0_d528, 12
  store i32 %v1_d528, i32* %r3.global-to-local, align 4
  %v0_d52c = load i32, i32* @r5, align 4
  %v4_d530 = call i32 @function_dda8(i32 %v0_d52c, i32 %v0_d51c, i32 %v4_d520, i32 %v1_d528)
  %v5_d530 = trunc i32 %v4_d530 to i16
  %v3_d534 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d534, i32* %r3.global-to-local, align 4
  %v3_d538 = mul i32 %v3_d534, 32
  store i32 %v3_d538, i32* %lr.global-to-local, align 4
  %v3_d53c = load i32, i32* @r6, align 4
  %v4_d53c = add i32 %v3_d53c, 6
  %v5_d53c = inttoptr i32 %v4_d53c to i16*
  store i16 %v5_d530, i16* %v5_d53c, align 2
  %v0_d540 = load i32, i32* %lr.global-to-local, align 4
  %v1_d540 = load i32, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_d540, -8
  %v5_d540 = add i32 %v0_d540, %tmp45
  store i32 %v5_d540, i32* %lr.global-to-local, align 4
  %v0_d544 = load i32, i32* @r6, align 4
  %v1_d544 = add i32 %v0_d544, 2
  %v2_d544 = inttoptr i32 %v1_d544 to i16*
  %v3_d544 = load i16, i16* %v2_d544, align 2
  %v3_d548 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d548, i32* %r2.global-to-local, align 4
  %v1_d54c = load i32, i32* @r8, align 4
  %v2_d54c = add i32 %v1_d54c, %v5_d540
  store i32 %v2_d54c, i32* @lr, align 4
  %v3_d550 = add i32 %v2_d54c, 2
  %v4_d550 = inttoptr i32 %v3_d550 to i16*
  store i16 %v3_d544, i16* %v4_d550, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d55c = load i32, i32* @r5, align 4
  %v0_d560 = load i32, i32* %r2.global-to-local, align 4
  %v1_d560 = add i32 %v0_d560, 32
  store i32 %v1_d560, i32* %r2.global-to-local, align 4
  %v0_d564 = load i32, i32* @sl, align 4
  %v0_d568 = load i32, i32* @lr, align 4
  %v6_d570 = call i32 @function_13840(i32 %v0_d564, i32 %v0_d55c, i32 %v1_d560, i32 16384, i32 %v0_d568, i32 16)
  %v3_d574 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d574, i32* %r3.global-to-local, align 4
  %v1_d578 = add i32 %v3_d574, 1
  %v1_d57c = load i32, i32* @fp, align 4
  store i32 %v1_d578, i32* %stack_var_-44, align 4
  %v6_d584 = icmp slt i32 %v1_d578, %v1_d57c
  br i1 %v6_d584, label %dec_label_pc_d588, label %dec_label_pc_d644

dec_label_pc_d588:                                ; preds = %dec_label_pc_d500, %dec_label_pc_d4d4
  %v1_d598 = phi i32 [ %v1_d578, %dec_label_pc_d500 ], [ 0, %dec_label_pc_d4d4 ]
  %v5_d58c = mul i32 %v1_d598, 24
  %v1_d590 = load i32, i32* @r8, align 4
  %v2_d590 = add i32 %v1_d590, %v5_d58c
  store i32 %v2_d590, i32* %r3.global-to-local, align 4
  %v1_d594 = add i32 %v2_d590, 20
  %v2_d594 = inttoptr i32 %v1_d594 to i8*
  %v3_d594 = load i8, i8* %v2_d594, align 1
  %v4_d594 = zext i8 %v3_d594 to i32
  store i32 %v4_d594, i32* %r2.global-to-local, align 4
  %v0_d598 = load i32, i32* @sb, align 4
  %v4_d598 = mul i32 %v1_d598, 4
  %v5_d598 = add i32 %v0_d598, %v4_d598
  %v6_d598 = inttoptr i32 %v5_d598 to i32*
  %v7_d598 = load i32, i32* %v6_d598, align 4
  store i32 %v7_d598, i32* @r5, align 4
  store i32 65535, i32* @r7, align 4
  %v1_d5a8 = add i32 %v7_d598, 20
  store i32 %v1_d5a8, i32* @r6, align 4
  %tmp46 = icmp ugt i8 %v3_d594, 31
  br i1 %tmp46, label %dec_label_pc_d4dc, label %dec_label_pc_d5b0

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d588
  %v1_d5b0 = add i32 %v2_d590, 16
  %v2_d5b0 = inttoptr i32 %v1_d5b0 to i32*
  %v3_d5b0 = load i32, i32* %v2_d5b0, align 4
  store i32 %v3_d5b0, i32* %r4.global-to-local, align 4
  %v0_d5b4 = call i32 @function_f190()
  %v3_d5b8 = load i32, i32* %stack_var_-44, align 4
  %v5_d5c0 = mul i32 %v3_d5b8, 24
  %v1_d5c4 = and i32 %v3_d5b0, 16711680
  store i32 %v1_d5c4, i32* %ip.global-to-local, align 4
  %v3_d5c8 = udiv i32 %v3_d5b0, 16777216
  %v4_d5cc = udiv i32 %v1_d5c4, 256
  %v5_d5cc = or i32 %v4_d5cc, %v3_d5c8
  store i32 %v5_d5cc, i32* %r2.global-to-local, align 4
  %v1_d5d0 = load i32, i32* @r8, align 4
  %v2_d5d0 = add i32 %v1_d5d0, %v5_d5c0
  %v1_d5d4 = and i32 %v3_d5b0, 65280
  store i32 %v1_d5d4, i32* %r3.global-to-local, align 4
  %v1_d5d8 = add i32 %v2_d5d0, 20
  %v2_d5d8 = inttoptr i32 %v1_d5d8 to i8*
  %v3_d5d8 = load i8, i8* %v2_d5d8, align 1
  %v4_d5d8 = zext i8 %v3_d5d8 to i32
  store i32 %v4_d5d8, i32* %ip.global-to-local, align 4
  %v5_d5e0 = call i32 @llvm.bswap.i32(i32 %v3_d5b0)
  %v7_d5e4 = lshr i32 %v0_d5b4, %v4_d5d8
  %v8_d5e4 = add i32 %v7_d5e4, %v5_d5e0
  store i32 %v8_d5e4, i32* %r2.global-to-local, align 4
  %v5_d600 = call i32 @llvm.bswap.i32(i32 %v8_d5e4)
  store i32 %v5_d600, i32* %r3.global-to-local, align 4
  %v1_d604 = load i32, i32* @r7, align 4
  %v9_d604 = icmp eq i32 %v3_d374, %v1_d604
  %v1_d608 = load i32, i32* @r5, align 4
  %v2_d608 = add i32 %v1_d608, 16
  %v3_d608 = inttoptr i32 %v2_d608 to i32*
  store i32 %v5_d600, i32* %v3_d608, align 4
  br i1 %v9_d604, label %dec_label_pc_d610, label %dec_label_pc_d5b0.dec_label_pc_d4e8_crit_edge

dec_label_pc_d5b0.dec_label_pc_d4e8_crit_edge:    ; preds = %dec_label_pc_d5b0
  %v1_d4ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d4e8

dec_label_pc_d610:                                ; preds = %dec_label_pc_d5b0, %dec_label_pc_d4dc
  %v0_d610 = call i32 @function_f190()
  %v1_d610 = trunc i32 %v0_d610 to i16
  store i32 %v3_d378, i32* %r2.global-to-local, align 4
  %v1_d618 = load i32, i32* @r7, align 4
  %v9_d618 = icmp eq i32 %v3_d378, %v1_d618
  %v3_d61c = load i32, i32* @r5, align 4
  %v4_d61c = add i32 %v3_d61c, 4
  %v5_d61c = inttoptr i32 %v4_d61c to i16*
  store i16 %v1_d610, i16* %v5_d61c, align 2
  br i1 %v9_d618, label %dec_label_pc_d624, label %dec_label_pc_d610.dec_label_pc_d4f4_crit_edge

dec_label_pc_d610.dec_label_pc_d4f4_crit_edge:    ; preds = %dec_label_pc_d610
  %v1_d4f8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d4f4

dec_label_pc_d624:                                ; preds = %dec_label_pc_d610, %dec_label_pc_d4e8
  %v0_d624 = call i32 @function_f190()
  %v1_d624 = trunc i32 %v0_d624 to i16
  store i32 %v3_d37c, i32* %r3.global-to-local, align 4
  %v1_d62c = load i32, i32* @r7, align 4
  %v9_d62c = icmp eq i32 %v3_d37c, %v1_d62c
  %v3_d630 = load i32, i32* @r5, align 4
  %v4_d630 = add i32 %v3_d630, 20
  %v5_d630 = inttoptr i32 %v4_d630 to i16*
  store i16 %v1_d624, i16* %v5_d630, align 2
  br i1 %v9_d62c, label %dec_label_pc_d638, label %dec_label_pc_d500

dec_label_pc_d638:                                ; preds = %dec_label_pc_d624, %dec_label_pc_d4f4
  %v0_d638 = call i32 @function_f190()
  %v1_d638 = trunc i32 %v0_d638 to i16
  %v3_d63c = load i32, i32* @r6, align 4
  %v4_d63c = add i32 %v3_d63c, 2
  %v5_d63c = inttoptr i32 %v4_d63c to i16*
  store i16 %v1_d638, i16* %v5_d63c, align 2
  br label %dec_label_pc_d500

dec_label_pc_d644:                                ; preds = %dec_label_pc_d500, %dec_label_pc_d4c4
  %v2_d648 = call i32 @function_12d34(i32* null)
  store i32 %v2_d2fc, i32* %ip.global-to-local, align 4
  %v6_d654 = icmp slt i32 %v2_d2fc, %v2_d648
  br i1 %v6_d654, label %dec_label_pc_d658, label %dec_label_pc_d644.dec_label_pc_d4c4_crit_edge

dec_label_pc_d644.dec_label_pc_d4c4_crit_edge:    ; preds = %dec_label_pc_d644
  %v0_d4c8.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_d4c4

dec_label_pc_d658:                                ; preds = %dec_label_pc_d644, %dec_label_pc_d208, %dec_label_pc_d664
  %v1_d660 = phi i32 [ %v3_d328, %dec_label_pc_d208 ], [ %v1_d668, %dec_label_pc_d664 ], [ %v2_d648, %dec_label_pc_d644 ]
  store i32 %v3_d208, i32* %r4.global-to-local, align 4
  store i32 %v27_d208, i32* %lr.global-to-local, align 4
  ret i32 %v1_d660

dec_label_pc_d664:                                ; preds = %dec_label_pc_d338
  %v0_d664 = load i32, i32* @sl, align 4
  %v1_d668 = call i32 @function_130b4(i32 %v0_d664)
  br label %dec_label_pc_d658

; uselistorder directives
  uselistorder i32 %v5_d600, { 1, 0 }
  uselistorder i32 %v3_d5b0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_d578, { 1, 2, 0 }
  uselistorder i32 %v5_d540, { 1, 0 }
  uselistorder i32 %v0_d51c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d4b4, { 1, 0, 2 }
  uselistorder i32 %v3_d418, { 1, 0 }
  uselistorder i32 %v0_d3dc, { 1, 2, 0 }
  uselistorder i32 %v3_d3b4, { 1, 0 }
  uselistorder i32 %v3_d374, { 0, 2, 1 }
  uselistorder i32 %v0_d36c, { 1, 0, 2 }
  uselistorder i32 %v3_d328, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d2fc, { 1, 0 }
  uselistorder i32 %v6_d2cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_d2b4, { 1, 0 }
  uselistorder i32 %v6_d288, { 1, 0 }
  uselistorder i32 %v7_d270, { 1, 0, 2 }
  uselistorder i32 %v5_d24c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder label %dec_label_pc_d658, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d500, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d4c4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d674(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_d674:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v9_d674 = load i32, i32* @r6, align 4
  %v18_d674 = load i32, i32* @sb, align 4
  %v27_d674 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d6a4 = call i32 @function_1442c(i32 %arg2, i32 4)
  %v0_d6a8 = load i32, i32* @r4, align 4
  store i32 %v0_d6a8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d6b4 = load i32, i32* @sl, align 4
  store i32 %v0_d6b4, i32* %r3.global-to-local, align 4
  %v0_d6b8 = load i32, i32* @r5, align 4
  store i32 %v0_d6b8, i32* %r0.global-to-local, align 4
  %v5_d6bc = inttoptr i32 %v0_d6a8 to i32*
  %v6_d6bc = call i32 @function_9fe8(i32 %v0_d6b8, i32* %v5_d6bc, i32 2, i32 %v0_d6b4)
  %v1_d6c8 = urem i32 %v6_d6bc, 256
  store i32 %v1_d6c8, i32* %ip.global-to-local, align 4
  %v0_d6cc = load i32, i32* @r4, align 4
  store i32 %v0_d6cc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d6d8 = load i32, i32* @r5, align 4
  store i32 %v0_d6d8, i32* %r0.global-to-local, align 4
  %v6_d6e0 = inttoptr i32 %v0_d6cc to i32*
  %v7_d6e0 = call i32 @function_9fe8(i32 %v0_d6d8, i32* %v6_d6e0, i32 3, i32 65535)
  %v0_d6e4 = load i32, i32* @r4, align 4
  store i32 %v0_d6e4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d6f4 = load i32, i32* @r5, align 4
  store i32 %v0_d6f4, i32* %r0.global-to-local, align 4
  %v5_d6f8 = inttoptr i32 %v0_d6e4 to i32*
  %v6_d6f8 = call i32 @function_9fe8(i32 %v0_d6f4, i32* %v5_d6f8, i32 4, i32 64)
  %v0_d700 = load i32, i32* @r4, align 4
  store i32 %v0_d700, i32* %r1.global-to-local, align 4
  %v1_d704 = urem i32 %v6_d6f8, 256
  store i32 %v1_d704, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d70c = load i32, i32* @sl, align 4
  store i32 %v0_d70c, i32* %r3.global-to-local, align 4
  %v0_d710 = load i32, i32* @r5, align 4
  store i32 %v0_d710, i32* %r0.global-to-local, align 4
  %v6_d718 = inttoptr i32 %v0_d700 to i32*
  %v7_d718 = call i32 @function_9fe8(i32 %v0_d710, i32* %v6_d718, i32 5, i32 %v0_d70c)
  %v1_d724 = urem i32 %v7_d718, 256
  store i32 %v1_d724, i32* %ip.global-to-local, align 4
  %v0_d728 = load i32, i32* @r4, align 4
  store i32 %v0_d728, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d734 = load i32, i32* @r5, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v5_d73c = inttoptr i32 %v0_d728 to i32*
  %v6_d73c = call i32 @function_9fe8(i32 %v0_d734, i32* %v5_d73c, i32 6, i32 65535)
  %v0_d740 = load i32, i32* @r4, align 4
  store i32 %v0_d740, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_d750 = load i32, i32* @r5, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v5_d754 = inttoptr i32 %v0_d740 to i32*
  %v6_d754 = call i32 @function_9fe8(i32 %v0_d750, i32* %v5_d754, i32 7, i32 53)
  %v0_d75c = load i32, i32* @r4, align 4
  store i32 %v0_d75c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_d76c = load i32, i32* @r5, align 4
  store i32 %v0_d76c, i32* %r0.global-to-local, align 4
  %v5_d770 = inttoptr i32 %v0_d75c to i32*
  %v6_d770 = call i32 @function_9fe8(i32 %v0_d76c, i32* %v5_d770, i32 9, i32 65535)
  %v0_d774 = load i32, i32* @r4, align 4
  store i32 %v0_d774, i32* %r1.global-to-local, align 4
  %v0_d77c = load i32, i32* @sl, align 4
  store i32 %v0_d77c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_d784 = load i32, i32* @r5, align 4
  store i32 %v0_d784, i32* %r0.global-to-local, align 4
  %v5_d788 = inttoptr i32 %v0_d774 to i32*
  %v6_d788 = call i32 @function_9fe8(i32 %v0_d784, i32* %v5_d788, i32 %v0_d77c, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_d790 = load i32, i32* @sl, align 4
  store i32 %v0_d790, i32* %r3.global-to-local, align 4
  %v0_d794 = load i32, i32* @r4, align 4
  store i32 %v0_d794, i32* %r1.global-to-local, align 4
  %v0_d79c = load i32, i32* @r5, align 4
  store i32 %v0_d79c, i32* %r0.global-to-local, align 4
  %v5_d7a0 = inttoptr i32 %v0_d794 to i32*
  %v6_d7a0 = call i32 @function_9f20(i32 %v0_d79c, i32* %v5_d7a0, i32 8, i32 %v0_d790, i32 %v6_d788)
  store i32 %v6_d7a0, i32* @r7, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_d7ac = call i32 @function_11a84(i32 33)
  %v0_d7b0 = load i32, i32* @sl, align 4
  store i32 %v0_d7b0, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_d7b8 = inttoptr i32 %v0_d7b0 to i32*
  %v3_d7b8 = call i32 @function_119c0(i32 33, i32* %v2_d7b8)
  store i32 %v3_d7b8, i32* %r0.global-to-local, align 4
  %v0_d7bc = load i32, i32* @sl, align 4
  store i32 %v0_d7bc, i32* %r1.global-to-local, align 4
  %v2_d7c0 = call i32 @function_12cc0(i32 %v3_d7b8, i32 %v0_d7bc)
  store i32 %v2_d7c0, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_d7cc = call i32 @function_119e4(i32 33)
  store i32 %v1_d7cc, i32* %r0.global-to-local, align 4
  %v0_d7d0 = load i32, i32* @r4, align 4
  %v1_d7d0 = load i32, i32* @sl, align 4
  %v9_d7d0 = icmp eq i32 %v0_d7d0, %v1_d7d0
  store i1 %v9_d7d0, i1* %cpsr_z.global-to-local, align 1
  %v5_d7d4 = icmp slt i32 %v0_d7d0, %v1_d7d0
  br i1 %v5_d7d4, label %dec_label_pc_d890, label %dec_label_pc_d7d8

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d674
  %v2_d7dc = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d7dc, i32* %sb.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_d7dc, i32* %r1.global-to-local, align 4
  store i32 %v0_d7d0, i32* %r0.global-to-local, align 4
  %v1_d7ec = call i32 @function_12e4c(i32 %v0_d7d0)
  store i32 %v1_d7ec, i32* @r6, align 4
  %v0_d7f4 = load i32, i32* @r4, align 4
  store i32 %v0_d7f4, i32* %r0.global-to-local, align 4
  %v1_d7f8 = call i32 @function_130b4(i32 %v0_d7f4)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_d800 = call i32 @function_11a84(i32 34)
  %v0_d804 = load i32, i32* @sl, align 4
  store i32 %v0_d804, i32* %r1.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_d80c = inttoptr i32 %v0_d804 to i32*
  %v3_d80c = call i32 @function_119c0(i32 34, i32* %v2_d80c)
  %v0_d810 = load i32, i32* @r6, align 4
  store i32 %v0_d810, i32* @r1, align 4
  store i32 %v3_d80c, i32* %r2.global-to-local, align 4
  store i32 %v2_d7dc, i32* %r0.global-to-local, align 4
  %v3_d81c = bitcast i32* %stack_var_-2124 to i8*
  %v4_d81c = call i32 @function_127a0(i8* %v3_d81c, i32 %v0_d810, i32 %v3_d80c)
  store i32 %v4_d81c, i32* @r8, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_d828 = call i32 @function_119e4(i32 34)
  store i32 %v1_d828, i32* %r0.global-to-local, align 4
  %v0_d82c = load i32, i32* @r8, align 4
  %v7_d82c = icmp eq i32 %v0_d82c, -1
  store i1 %v7_d82c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d82c, label %dec_label_pc_d890, label %dec_label_pc_d834

dec_label_pc_d834:                                ; preds = %dec_label_pc_d7d8
  %v0_d834 = load i32, i32* @r6, align 4
  %v9_d834 = icmp eq i32 %v0_d834, %v0_d82c
  store i1 %v9_d834, i1* %cpsr_z.global-to-local, align 1
  %v7_d838 = icmp sgt i32 %v0_d834, %v0_d82c
  br i1 %v7_d838, label %dec_label_pc_d83c, label %dec_label_pc_d890

dec_label_pc_d83c:                                ; preds = %dec_label_pc_d834
  %v0_d83c = load i32, i32* @sl, align 4
  store i32 %v0_d83c, i32* %r1.global-to-local, align 4
  %v0_d840 = load i32, i32* %sb.global-to-local, align 4
  %v2_d840 = add i32 %v0_d840, %v0_d82c
  store i32 %v2_d840, i32* %ip.global-to-local, align 4
  %v1_d850 = add i32 %v0_d834, -1
  br label %dec_label_pc_d848

dec_label_pc_d848:                                ; preds = %dec_label_pc_d884, %dec_label_pc_d83c
  %v0_d884 = phi i32 [ %v1_d884, %dec_label_pc_d884 ], [ %v0_d82c, %dec_label_pc_d83c ]
  %v0_d86c = phi i32 [ %v0_d86c27, %dec_label_pc_d884 ], [ %v0_d83c, %dec_label_pc_d83c ]
  %v0_d84c = phi i32 [ %v0_d84c23, %dec_label_pc_d884 ], [ %v0_d83c, %dec_label_pc_d83c ]
  %v0_d854 = phi i32 [ %v1_d854, %dec_label_pc_d884 ], [ %v2_d840, %dec_label_pc_d83c ]
  %v1_d848 = inttoptr i32 %v0_d854 to i8*
  %v2_d848 = load i8, i8* %v1_d848, align 1
  %v3_d848 = zext i8 %v2_d848 to i32
  store i32 %v3_d848, i32* %r0.global-to-local, align 4
  %v2_d84c = icmp eq i32 %v0_d84c, 0
  store i1 %v2_d84c, i1* %cpsr_z.global-to-local, align 1
  %v1_d854 = add i32 %v0_d854, 1
  store i32 %v1_d854, i32* %ip.global-to-local, align 4
  %v1_d858 = add nsw i32 %v3_d848, -48
  store i32 %v1_d858, i32* @lr, align 4
  br i1 %v2_d84c, label %dec_label_pc_d860, label %dec_label_pc_d870

dec_label_pc_d860:                                ; preds = %dec_label_pc_d848
  %v7_d860 = icmp eq i8 %v2_d848, 9
  store i1 %v7_d860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d860, label %dec_label_pc_d884, label %bb

bb:                                               ; preds = %dec_label_pc_d860
  %v8_d864 = icmp eq i8 %v2_d848, 32
  store i1 %v8_d864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d864, label %dec_label_pc_d884, label %dec_label_pc_d86c

dec_label_pc_d86c:                                ; preds = %bb
  %v1_d86c = add i32 %v0_d86c, 1
  store i32 %v1_d86c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d870

dec_label_pc_d870:                                ; preds = %dec_label_pc_d848, %dec_label_pc_d86c
  %v0_d86c28 = phi i32 [ %v0_d86c, %dec_label_pc_d848 ], [ %v1_d86c, %dec_label_pc_d86c ]
  %v0_d84c24 = phi i32 [ %v0_d84c, %dec_label_pc_d848 ], [ %v1_d86c, %dec_label_pc_d86c ]
  %v7_d870 = icmp eq i8 %v2_d848, 46
  store i1 %v7_d870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d870, label %dec_label_pc_d87c, label %bb113

bb113:                                            ; preds = %dec_label_pc_d870
  %v3_d874 = icmp ugt i32 %v1_d858, 8
  %v8_d874 = icmp eq i32 %v1_d858, 9
  store i1 %v8_d874, i1* %cpsr_z.global-to-local, align 1
  %v2_d878 = xor i1 %v8_d874, true
  %v3_d878 = and i1 %v3_d874, %v2_d878
  br i1 %v3_d878, label %dec_label_pc_dce4, label %dec_label_pc_d87c

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d870, %bb113
  %v9_d87c = icmp eq i32 %v1_d850, %v0_d884
  store i1 %v9_d87c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d87c, label %dec_label_pc_dce4, label %dec_label_pc_d884

dec_label_pc_d884:                                ; preds = %dec_label_pc_d860, %dec_label_pc_d87c, %bb
  %v0_d86c27 = phi i32 [ %v0_d86c, %dec_label_pc_d860 ], [ %v0_d86c28, %dec_label_pc_d87c ], [ %v0_d86c, %bb ]
  %v0_d84c23 = phi i32 [ 0, %dec_label_pc_d860 ], [ %v0_d84c24, %dec_label_pc_d87c ], [ 0, %bb ]
  %v1_d884 = add i32 %v0_d884, 1
  %v9_d888 = icmp eq i32 %v1_d884, %v0_d834
  store i1 %v9_d888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d888, label %dec_label_pc_d890, label %dec_label_pc_d848

dec_label_pc_d890:                                ; preds = %dec_label_pc_d884, %dec_label_pc_d834, %dec_label_pc_d7d8, %dec_label_pc_d674
  %v0_d890 = call i32 @function_f190()
  %v1_d894 = urem i32 %v0_d890, 4
  store i32 %v1_d894, i32* %r0.global-to-local, align 4
  %v2_d898 = icmp eq i32 %v1_d894, 3
  store i1 %v2_d898, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_d890 to i2
  switch i2 %trunc, label %dec_label_pc_d8c410 [
    i2 0, label %dec_label_pc_dd30
    i2 1, label %dec_label_pc_dd44
    i2 -2, label %dec_label_pc_dd20
    i2 -1, label %dec_label_pc_d8b4
  ]

dec_label_pc_d8b4:                                ; preds = %dec_label_pc_d890
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d8c4

dec_label_pc_d8c410:                              ; preds = %dec_label_pc_d890
  unreachable

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_dd44, %dec_label_pc_dd30, %dec_label_pc_dd20, %dec_label_pc_dce4, %dec_label_pc_d8b4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_d8b4 ], [ 104859200, %dec_label_pc_dd20 ], [ 707416650, %dec_label_pc_dd44 ], [ 134744072, %dec_label_pc_dd30 ], [ %v1_dd14, %dec_label_pc_dce4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d8c8 = call i32 @function_12d34(i32* null)
  %v0_d8cc = load i32, i32* @r7, align 4
  %v2_d8cc = icmp eq i32 %v0_d8cc, 0
  store i1 %v2_d8cc, i1* %cpsr_z.global-to-local, align 1
  %v1_d8d0 = load i32, i32* @fp, align 4
  %v2_d8d0 = add i32 %v1_d8d0, %v2_d8c8
  store i32 %v2_d8d0, i32* %r0.global-to-local, align 4
  br i1 %v2_d8cc, label %dec_label_pc_dcbc, label %dec_label_pc_d8dc

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8c4
  store i32 %v0_d8cc, i32* %r0.global-to-local, align 4
  %v1_d8e0 = inttoptr i32 %v0_d8cc to i8*
  %v2_d8e0 = call i32 @function_12450(i8* %v1_d8e0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d8f4 = call i32 @function_138c4(i32 2, i32 3, i32 17)
  store i32 %v3_d8f4, i32* %r0.global-to-local, align 4
  %v7_d8f8 = icmp eq i32 %v3_d8f4, -1
  store i1 %v7_d8f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8f8, label %dec_label_pc_dcbc, label %dec_label_pc_d904

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8dc
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d90c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d90c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d920 = call i32 @function_13880(i32 %v3_d8f4, i32 0, i32 3, i32 %v6_d90c, i32 4)
  store i32 %v5_d920, i32* %r0.global-to-local, align 4
  %v7_d924 = icmp eq i32 %v5_d920, -1
  store i1 %v7_d924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d924, label %dec_label_pc_dcb4, label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_d904
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_d940 = mul i32 %v7_d6e0, 65536
  store i32 %v3_d940, i32* %r6.global-to-local, align 4
  %v3_d948 = mul i32 %v6_d754, 65536
  store i32 %v3_d948, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_d958 = urem i32 %v7_d6e0, 65536
  %v3_d95c = urem i32 %v6_d73c, 65536
  store i32 %v3_d95c, i32* %r0.global-to-local, align 4
  %v3_d960 = urem i32 %v6_d754, 65536
  store i32 %v3_d960, i32* %r1.global-to-local, align 4
  %v3_d964 = urem i32 %v6_d770, 65536
  store i32 %v3_d964, i32* %r2.global-to-local, align 4
  %v2_d968 = icmp eq i32 %arg2, 0
  store i1 %v2_d968, i1* %cpsr_z.global-to-local, align 1
  %v1_d96c = urem i32 %v6_d788, 256
  store i32 %v1_d96c, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d968, label %dec_label_pc_dccc.critedge, label %dec_label_pc_d988

dec_label_pc_d988:                                ; preds = %dec_label_pc_d92c
  %v3_d93c = mul i32 %v6_d770, 65536
  %v2_d994 = add i32 %v2_d8e0, %v1_d96c
  %v3_d998 = mul i32 %v2_d994, 65536
  %v1_d9a4 = add i32 %v3_d998, 1769472
  %tmp114 = mul nuw nsw i32 %v3_d960, 256
  %v3_d9a8 = and i32 %tmp114, 65280
  %v1_d9ac = add i32 %v3_d998, 3080192
  %tmp115 = udiv i32 %v6_d754, 256
  %v4_d9bc = urem i32 %tmp115, 256
  %v5_d9bc = or i32 %v3_d9a8, %v4_d9bc
  store i32 %v5_d9bc, i32* @sb, align 4
  store i32 %v3_d93c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_d9a4, 256
  %v3_d9c4 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_d9ac, 256
  %v3_d9c8 = and i32 %tmp117, 65280
  store i32 %v3_d9c8, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_d770, 256
  %v3_d9cc = and i32 %tmp118, 65280
  %v4_d9d0 = udiv i32 %v1_d9a4, 16777216
  %v5_d9d0 = or i32 %v3_d9c4, %v4_d9d0
  store i32 %v5_d9d0, i32* @fp, align 4
  %tmp119 = mul i32 %v7_d6e0, 256
  %v3_d9d8 = and i32 %tmp119, 65280
  store i32 %v3_d9d8, i32* %r1.global-to-local, align 4
  %v4_d9dc = udiv i32 %v1_d9ac, 16777216
  %v5_d9dc = or i32 %v3_d9c8, %v4_d9dc
  store i32 %v5_d9dc, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_d770, 256
  %v4_d9e0 = urem i32 %tmp120, 256
  %v5_d9e0 = or i32 %v4_d9e0, %v3_d9cc
  store i32 %v5_d9e0, i32* @r4, align 4
  store i32 %v2_d8e0, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_d6e0, 256
  %v4_d9e8 = urem i32 %tmp121, 256
  %v5_d9e8 = or i32 %v4_d9e8, %v3_d9d8
  %tmp122 = mul i32 %v6_d73c, 256
  %v3_d9ec = and i32 %tmp122, 65280
  store i32 %v3_d9ec, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_d73c, 256
  %v4_d9fc = urem i32 %tmp123, 256
  %v5_d9fc = or i32 %v4_d9fc, %v3_d9ec
  store i32 %v5_d9fc, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_da04 = add i32 %v2_d8e0, 1
  store i32 %v1_da04, i32* @r6, align 4
  %v1_da4c = trunc i32 %v6_d6bc to i8
  %sext = mul i32 %v6_d6f8, 16777216
  %v4_da50 = sdiv i32 %sext, 16777216
  %sext6 = mul nuw i32 %v5_d9dc, 65536
  %v4_da58 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_d9e8, 65536
  %v4_da5c = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_d9e0, 65536
  %v4_dab8 = sdiv i32 %sext8, 65536
  %v2_dadc = icmp eq i32 %v2_d8e0, 0
  %tmp124 = icmp slt i32 %v2_d8e0, 1
  %v1_da64 = trunc i32 %v4_da50 to i8
  br label %dec_label_pc_da08

dec_label_pc_da08:                                ; preds = %dec_label_pc_db28, %dec_label_pc_d988
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_da10 = call i32 @function_1442c(i32 600, i32 1)
  store i32 %v2_da10, i32* %r0.global-to-local, align 4
  store i32 %v2_d6a4, i32* %r1.global-to-local, align 4
  %v3_da18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da18, i32* %r3.global-to-local, align 4
  %v2_da1c = load i32, i32* @r5, align 4
  %v5_da1c = mul i32 %v2_da1c, 4
  %v6_da1c = add i32 %v5_da1c, %v2_d6a4
  %v7_da1c = inttoptr i32 %v6_da1c to i32*
  store i32 %v2_da10, i32* %v7_da1c, align 4
  %v0_da20 = load i32, i32* %r1.global-to-local, align 4
  %v1_da20 = load i32, i32* %r3.global-to-local, align 4
  %v4_da20 = mul i32 %v1_da20, 4
  %v5_da20 = add i32 %v4_da20, %v0_da20
  %v6_da20 = inttoptr i32 %v5_da20 to i32*
  %v7_da20 = load i32, i32* %v6_da20, align 4
  store i32 %v7_da20, i32* %r1.global-to-local, align 4
  %v1_da24 = inttoptr i32 %v7_da20 to i8*
  %v2_da24 = load i8, i8* %v1_da24, align 1
  %tmp = urem i8 %v2_da24, 16
  %v1_da28 = zext i8 %tmp to i32
  %v1_da2c = or i32 %v1_da28, 64
  store i32 %v1_da2c, i32* %r2.global-to-local, align 4
  %v1_da30 = trunc i32 %v1_da2c to i8
  store i8 %v1_da30, i8* %v1_da24, align 1
  %v0_da34 = load i32, i32* %r1.global-to-local, align 4
  %v1_da34 = inttoptr i32 %v0_da34 to i8*
  %v2_da34 = load i8, i8* %v1_da34, align 1
  %v1_da38 = and i8 %v2_da34, -16
  %v1_da3c = or i8 %v1_da38, 5
  store i32 %v1_d724, i32* %ip.global-to-local, align 4
  store i8 %v1_da3c, i8* %v1_da34, align 1
  store i32 %v1_d6c8, i32* %lr.global-to-local, align 4
  %v2_da4c = load i32, i32* %r1.global-to-local, align 4
  %v3_da4c = add i32 %v2_da4c, 1
  %v4_da4c = inttoptr i32 %v3_da4c to i8*
  store i8 %v1_da4c, i8* %v4_da4c, align 1
  store i32 %v4_da50, i32* %r3.global-to-local, align 4
  %v0_da54 = load i32, i32* %ip.global-to-local, align 4
  %v2_da54 = icmp eq i32 %v0_da54, 0
  store i1 %v2_da54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_da58, i32* %r0.global-to-local, align 4
  store i32 %v4_da5c, i32* %r2.global-to-local, align 4
  br i1 %v2_da54, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_da08
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_da08, %bb125
  %v2_da64 = load i32, i32* %r1.global-to-local, align 4
  %v3_da64 = add i32 %v2_da64, 8
  %v4_da64 = inttoptr i32 %v3_da64 to i8*
  store i8 %v1_da64, i8* %v4_da64, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_da6c = load i32, i32* %r1.global-to-local, align 4
  %v3_da6c = add i32 %v2_da6c, 9
  %v4_da6c = inttoptr i32 %v3_da6c to i8*
  store i8 17, i8* %v4_da6c, align 1
  %v0_da70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da70, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_da70 = load i32, i32* %lr.global-to-local, align 4
  %v2_da70 = trunc i32 %v1_da70 to i16
  %v3_da70 = load i32, i32* %r1.global-to-local, align 4
  %v4_da70 = add i32 %v3_da70, 6
  %v5_da70 = inttoptr i32 %v4_da70 to i16*
  store i16 %v2_da70, i16* %v5_da70, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* @lr, align 4
  %v0_da78 = load i32, i32* %r0.global-to-local, align 4
  %v1_da78 = trunc i32 %v0_da78 to i16
  %v2_da78 = load i32, i32* %r1.global-to-local, align 4
  %v3_da78 = add i32 %v2_da78, 2
  %v4_da78 = inttoptr i32 %v3_da78 to i16*
  store i16 %v1_da78, i16* %v4_da78, align 2
  %v0_da7c = load i32, i32* %r2.global-to-local, align 4
  %v1_da7c = trunc i32 %v0_da7c to i16
  %v2_da7c = load i32, i32* %r1.global-to-local, align 4
  %v3_da7c = add i32 %v2_da7c, 4
  %v4_da7c = inttoptr i32 %v3_da7c to i16*
  store i16 %v1_da7c, i16* %v4_da7c, align 2
  %v2_da80 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_da80, i32* %r3.global-to-local, align 4
  %v0_da84 = load i32, i32* %r1.global-to-local, align 4
  %v1_da84 = add i32 %v0_da84, 20
  store i32 %v1_da84, i32* %r0.global-to-local, align 4
  %v1_da88 = add i32 %v0_da84, 41
  store i32 %v1_da88, i32* %r2.global-to-local, align 4
  %v0_da8c = load i32, i32* @fp, align 4
  %v1_da8c = trunc i32 %v0_da8c to i16
  %v3_da8c = add i32 %v0_da84, 24
  %v4_da8c = inttoptr i32 %v3_da8c to i16*
  store i16 %v1_da8c, i16* %v4_da8c, align 2
  %v0_da90 = load i32, i32* @sb, align 4
  %v1_da90 = trunc i32 %v0_da90 to i16
  %v2_da90 = load i32, i32* %r0.global-to-local, align 4
  %v3_da90 = add i32 %v2_da90, 2
  %v4_da90 = inttoptr i32 %v3_da90 to i16*
  store i16 %v1_da90, i16* %v4_da90, align 2
  %v0_da94 = load i32, i32* %r1.global-to-local, align 4
  %v1_da94 = add i32 %v0_da94, 28
  store i32 %v1_da94, i32* %ip.global-to-local, align 4
  %v0_da98 = load i32, i32* %r2.global-to-local, align 4
  %v1_da98 = load i32, i32* @sl, align 4
  %v2_da98 = add i32 %v1_da98, %v0_da98
  store i32 %v2_da98, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_daa4 = load i32, i32* @r8, align 4
  %v1_daa4 = trunc i32 %v0_daa4 to i16
  %v3_daa4 = add i32 %v0_da94, 20
  %v4_daa4 = inttoptr i32 %v3_daa4 to i16*
  store i16 %v1_daa4, i16* %v4_daa4, align 2
  %v0_daa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_daa8 = load i32, i32* %r1.global-to-local, align 4
  %v2_daa8 = add i32 %v1_daa8, 12
  %v3_daa8 = inttoptr i32 %v2_daa8 to i32*
  store i32 %v0_daa8, i32* %v3_daa8, align 4
  %v0_daac = load i32, i32* %r0.global-to-local, align 4
  %v1_daac = trunc i32 %v0_daac to i16
  %v2_daac = load i32, i32* %ip.global-to-local, align 4
  %v3_daac = add i32 %v2_daac, 4
  %v4_daac = inttoptr i32 %v3_daac to i16*
  store i16 %v1_daac, i16* %v4_daac, align 2
  %v0_dab0 = load i32, i32* %r2.global-to-local, align 4
  %v1_dab0 = trunc i32 %v0_dab0 to i16
  %v2_dab0 = load i32, i32* %ip.global-to-local, align 4
  %v3_dab0 = add i32 %v2_dab0, 2
  %v4_dab0 = inttoptr i32 %v3_dab0 to i16*
  store i16 %v1_dab0, i16* %v4_dab0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_dab8, i32* %ip.global-to-local, align 4
  %v1_dabc = load i32, i32* %r1.global-to-local, align 4
  %v2_dabc = add i32 %v1_dabc, 16
  %v3_dabc = inttoptr i32 %v2_dabc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dabc, align 4
  %v0_dac0 = load i32, i32* %ip.global-to-local, align 4
  %v1_dac0 = trunc i32 %v0_dac0 to i16
  %v2_dac0 = load i32, i32* %r1.global-to-local, align 4
  %v3_dac0 = add i32 %v2_dac0, 28
  %v4_dac0 = inttoptr i32 %v3_dac0 to i16*
  store i16 %v1_dac0, i16* %v4_dac0, align 2
  %v0_dac4 = load i32, i32* @sl, align 4
  %v1_dac4 = trunc i32 %v0_dac4 to i8
  %v2_dac4 = load i32, i32* %r1.global-to-local, align 4
  %v3_dac4 = add i32 %v2_dac4, 40
  %v4_dac4 = inttoptr i32 %v3_dac4 to i8*
  store i8 %v1_dac4, i8* %v4_dac4, align 1
  %v0_dac8 = load i32, i32* @r4, align 4
  %v1_dac8 = add i32 %v0_dac8, 1
  store i32 %v1_dac8, i32* %r0.global-to-local, align 4
  %v0_dacc = load i32, i32* @r7, align 4
  store i32 %v0_dacc, i32* %r1.global-to-local, align 4
  %v0_dad0 = load i32, i32* @r6, align 4
  store i32 %v0_dad0, i32* %r2.global-to-local, align 4
  %v3_dad4 = call i32 @function_124c0(i32 %v1_dac8, i32 %v0_dacc, i32 %v0_dad0)
  store i32 %v3_dad4, i32* %r0.global-to-local, align 4
  store i32 %v2_d8e0, i32* %lr.global-to-local, align 4
  store i1 %v2_dadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_db28_crit_edge, label %dec_label_pc_daec

.dec_label_pc_db28_crit_edge:                     ; preds = %bb128
  %v5_dae0 = load i32, i32* @r4, align 4
  store i32 %v5_dae0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_db28

dec_label_pc_daec:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_daf0 = load i32, i32* @r4, align 4
  store i32 %v0_daf0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_daf8

dec_label_pc_daf8:                                ; preds = %.thread21, %dec_label_pc_daec
  %v1_db00 = phi i32 [ %v1_db0035, %.thread21 ], [ 0, %dec_label_pc_daec ]
  %v0_db1419 = phi i32 [ %v0_db20, %.thread21 ], [ 0, %dec_label_pc_daec ]
  %v1_daf8 = load i32, i32* @r7, align 4
  %v2_daf8 = add i32 %v1_daf8, %v0_db1419
  %v3_daf8 = inttoptr i32 %v2_daf8 to i8*
  %v4_daf8 = load i8, i8* %v3_daf8, align 1
  %v6_daf8 = zext i8 %v4_daf8 to i32
  store i32 %v6_daf8, i32* %r3.global-to-local, align 4
  %v7_dafc = icmp eq i8 %v4_daf8, 46
  store i1 %v7_dafc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dafc, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_daf8
  %v2_db00 = trunc i32 %v1_db00 to i8
  %v3_db00 = load i32, i32* %r0.global-to-local, align 4
  %v4_db00 = inttoptr i32 %v3_db00 to i8*
  store i8 %v2_db00, i8* %v4_db00, align 1
  %v0_db08.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_db04 = load i32, i32* %ip.global-to-local, align 4
  %v1_db04 = add i32 %v0_db04, 1
  store i32 %v1_db04, i32* %r2.global-to-local, align 4
  br i1 %v0_db08.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_db0817 = urem i32 %v1_db04, 256
  store i32 %v2_db0817, i32* %ip.global-to-local, align 4
  store i32 %v2_d8e0, i32* %r2.global-to-local, align 4
  %v0_db14.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_db14 = add i32 %v0_db14.pre, 1
  store i32 %v1_db14, i32* %r1.global-to-local, align 4
  br label %.thread21

bb131:                                            ; preds = %dec_label_pc_daf8
  %v1_db0413 = add nsw i32 %v1_db00, 1
  %v2_db08 = urem i32 %v1_db0413, 256
  store i32 %v2_db08, i32* %ip.global-to-local, align 4
  store i32 %v2_d8e0, i32* %r2.global-to-local, align 4
  %v1_db1420 = add i32 %v0_db1419, 1
  store i32 %v1_db1420, i32* %r1.global-to-local, align 4
  br label %.thread21

bb132:                                            ; preds = %bb129
  store i32 %v2_d8e0, i32* %r2.global-to-local, align 4
  %v1_db10.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_db10 = load i32, i32* @r4, align 4
  %v3_db10 = add i32 %v2_db10, %v1_db10.pre
  store i32 %v3_db10, i32* %r3.global-to-local, align 4
  %v1_db1465 = add i32 %v1_db10.pre, 1
  store i32 %v1_db1465, i32* %r1.global-to-local, align 4
  %v2_db18 = add i32 %v3_db10, 1
  store i32 %v2_db18, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread21

.thread21:                                        ; preds = %bb131, %bb130, %bb132
  %v0_db20 = phi i32 [ %v1_db14, %bb130 ], [ %v1_db1420, %bb131 ], [ %v1_db1465, %bb132 ]
  %v1_db0035 = phi i32 [ %v2_db0817, %bb130 ], [ %v2_db08, %bb131 ], [ 0, %bb132 ]
  %v9_db20 = icmp eq i32 %v0_db20, %v2_d8e0
  store i1 %v9_db20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db20, label %dec_label_pc_db28.loopexit, label %dec_label_pc_daf8

dec_label_pc_db28.loopexit:                       ; preds = %.thread21
  %v2_db28.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_db0035 to i8
  br label %dec_label_pc_db28

dec_label_pc_db28:                                ; preds = %.dec_label_pc_db28_crit_edge, %dec_label_pc_db28.loopexit
  %v0_db28.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_db28_crit_edge ], [ %extract.t71, %dec_label_pc_db28.loopexit ]
  %v2_db28 = phi i32 [ %v5_dae0, %.dec_label_pc_db28_crit_edge ], [ %v2_db28.pre, %dec_label_pc_db28.loopexit ]
  %v3_db28 = inttoptr i32 %v2_db28 to i8*
  store i8 %v0_db28.pre.sink.off0, i8* %v3_db28, align 1
  %v3_db2c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_db34 = add i32 %v3_db2c, 1
  store i32 %v1_db34, i32* @r5, align 4
  store i32 %v2_d8e0, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_db40 = load i32, i32* @r4, align 4
  %v2_db40 = add i32 %v0_db40, %v2_d8e0
  store i32 %v2_db40, i32* %r2.global-to-local, align 4
  %v9_db44 = icmp eq i32 %v1_db34, %arg2
  store i1 %v9_db44, i1* %cpsr_z.global-to-local, align 1
  %v3_db48 = add i32 %v2_db40, 4
  %v4_db48 = inttoptr i32 %v3_db48 to i16*
  store i16 256, i16* %v4_db48, align 2
  %v0_db4c = load i32, i32* @lr, align 4
  %v1_db4c = trunc i32 %v0_db4c to i16
  %v2_db4c = load i32, i32* %r2.global-to-local, align 4
  %v3_db4c = add i32 %v2_db4c, 2
  %v4_db4c = inttoptr i32 %v3_db4c to i16*
  store i16 %v1_db4c, i16* %v4_db4c, align 2
  %v0_db50 = load i32, i32* @r5, align 4
  store i32 %v0_db50, i32* %stack_var_-44, align 4
  %v8_db54 = icmp slt i32 %v1_db34, %arg2
  br i1 %v8_db54, label %dec_label_pc_da08, label %dec_label_pc_db58

dec_label_pc_db58:                                ; preds = %dec_label_pc_db28, %dec_label_pc_dccc
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_d968, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d968, label %dec_label_pc_dccc, label %dec_label_pc_db6c

dec_label_pc_db6c:                                ; preds = %dec_label_pc_db58
  store i32 %v2_d8e0, i32* %r1.global-to-local, align 4
  %v1_db70 = load i32, i32* @sl, align 4
  %v2_db70 = add i32 %v1_db70, %v2_d8e0
  store i32 %v2_db70, i32* %r3.global-to-local, align 4
  %v1_db74 = add i32 %v2_db70, 47
  store i32 %v1_db74, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_db7c = add i32 %v2_db70, 27
  store i32 %v1_db7c, i32* @sb, align 4
  %v3_dc58 = icmp eq i32 %v3_d958, 65535
  %v3_db88 = icmp eq i32 %v3_d95c, 65535
  br label %dec_label_pc_dc44

dec_label_pc_db84:                                ; preds = %dec_label_pc_dc44
  store i32 %v3_d95c, i32* %ip.global-to-local, align 4
  store i1 %v3_db88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_db88, label %dec_label_pc_dc80, label %dec_label_pc_db90

dec_label_pc_db90:                                ; preds = %dec_label_pc_dc6c.dec_label_pc_db90_crit_edge, %dec_label_pc_db84
  %v1_db94 = phi i32 [ %v1_db94.pre, %dec_label_pc_dc6c.dec_label_pc_db90_crit_edge ], [ 65535, %dec_label_pc_db84 ]
  store i32 %v3_d960, i32* @lr, align 4
  %v9_db94 = icmp eq i32 %v3_d960, %v1_db94
  store i1 %v9_db94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db94, label %dec_label_pc_dc94, label %dec_label_pc_db9c

dec_label_pc_db9c:                                ; preds = %dec_label_pc_dc80.dec_label_pc_db9c_crit_edge, %dec_label_pc_db90
  %v1_dba0 = phi i32 [ %v1_dba0.pre, %dec_label_pc_dc80.dec_label_pc_db9c_crit_edge ], [ %v1_db94, %dec_label_pc_db90 ]
  store i32 %v3_d964, i32* %r0.global-to-local, align 4
  %v9_dba0 = icmp eq i32 %v3_d964, %v1_dba0
  store i1 %v9_dba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dba0, label %dec_label_pc_dca8, label %dec_label_pc_dba8

dec_label_pc_dba8:                                ; preds = %dec_label_pc_dc94, %dec_label_pc_db9c, %dec_label_pc_dca8
  %v0_dba8 = load i32, i32* @r7, align 4
  store i32 %v0_dba8, i32* %r0.global-to-local, align 4
  %v0_dbac = load i32, i32* @sl, align 4
  store i32 %v0_dbac, i32* %r1.global-to-local, align 4
  %v2_dbb0 = call i32 @function_f254(i32 %v0_dba8, i32 %v0_dbac)
  %v0_dbb4 = load i32, i32* @r8, align 4
  %v1_dbb4 = trunc i32 %v0_dbb4 to i8
  %v2_dbb4 = load i32, i32* @r7, align 4
  %v3_dbb4 = load i32, i32* @sl, align 4
  %v4_dbb4 = add i32 %v3_dbb4, %v2_dbb4
  %v5_dbb4 = inttoptr i32 %v4_dbb4 to i8*
  store i8 %v1_dbb4, i8* %v5_dbb4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dbbc = load i32, i32* @r8, align 4
  %v1_dbbc = trunc i32 %v0_dbbc to i16
  %v2_dbbc = load i32, i32* @r4, align 4
  %v3_dbbc = add i32 %v2_dbbc, 10
  %v4_dbbc = inttoptr i32 %v3_dbbc to i16*
  store i16 %v1_dbbc, i16* %v4_dbbc, align 2
  %v0_dbc0 = load i32, i32* @r4, align 4
  store i32 %v0_dbc0, i32* @r0, align 4
  %v2_dbc4 = call i32 @function_dd58(i32 %v0_dbc0, i32 20)
  %v3_dbc4 = trunc i32 %v2_dbc4 to i16
  store i32 %v2_dbc4, i32* %r0.global-to-local, align 4
  %v3_dbc8 = load i32, i32* @r4, align 4
  %v4_dbc8 = add i32 %v3_dbc8, 10
  %v5_dbc8 = inttoptr i32 %v4_dbc8 to i16*
  store i16 %v3_dbc4, i16* %v5_dbc8, align 2
  %v0_dbcc = load i32, i32* @r6, align 4
  store i32 %v0_dbcc, i32* @r1, align 4
  %v1_dbd0 = add i32 %v0_dbcc, 4
  %v2_dbd0 = inttoptr i32 %v1_dbd0 to i16*
  %v3_dbd0 = load i16, i16* %v2_dbd0, align 2
  %v4_dbd0 = zext i16 %v3_dbd0 to i32
  store i32 %v4_dbd0, i32* %r2.global-to-local, align 4
  %v0_dbd4 = load i32, i32* @r8, align 4
  %v1_dbd4 = trunc i32 %v0_dbd4 to i16
  %v3_dbd4 = add i32 %v0_dbcc, 6
  %v4_dbd4 = inttoptr i32 %v3_dbd4 to i16*
  store i16 %v1_dbd4, i16* %v4_dbd4, align 2
  %v0_dbd8 = load i32, i32* @sb, align 4
  store i32 %v0_dbd8, i32* %r3.global-to-local, align 4
  %v0_dbdc = load i32, i32* @r4, align 4
  store i32 %v0_dbdc, i32* %r0.global-to-local, align 4
  %v4_dbe0 = call i32 @function_dda8(i32 %v0_dbdc, i32 %v0_dbcc, i32 %v4_dbd0, i32 %v0_dbd8)
  %v5_dbe0 = trunc i32 %v4_dbe0 to i16
  store i32 %v4_dbe0, i32* %r0.global-to-local, align 4
  %v3_dbe4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dbe4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_dbec = mul i32 %v3_dbe4, 32
  store i32 %v3_dbec, i32* %ip.global-to-local, align 4
  %v3_dbf0 = load i32, i32* @r6, align 4
  %v4_dbf0 = add i32 %v3_dbf0, 6
  %v5_dbf0 = inttoptr i32 %v4_dbf0 to i16*
  store i16 %v5_dbe0, i16* %v5_dbf0, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_dbf8 = load i32, i32* @r6, align 4
  %v1_dbf8 = add i32 %v0_dbf8, 2
  %v2_dbf8 = inttoptr i32 %v1_dbf8 to i16*
  %v3_dbf8 = load i16, i16* %v2_dbf8, align 2
  %v4_dbf8 = zext i16 %v3_dbf8 to i32
  store i32 %v4_dbf8, i32* %r6.global-to-local, align 4
  %v0_dbfc = load i32, i32* %ip.global-to-local, align 4
  %v1_dbfc = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_dbfc, -8
  %v5_dbfc = add i32 %v0_dbfc, %tmp135
  %v1_dc00 = load i32, i32* %r1.global-to-local, align 4
  %v2_dc00 = add i32 %v1_dc00, %v5_dbfc
  store i32 %v2_dc00, i32* %ip.global-to-local, align 4
  %v2_dc04 = add i32 %v2_dc00, 4
  %v3_dc04 = inttoptr i32 %v2_dc04 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dc04, align 4
  %v0_dc08 = load i32, i32* %r6.global-to-local, align 4
  %v1_dc08 = trunc i32 %v0_dc08 to i16
  %v2_dc08 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc08 = add i32 %v2_dc08, 2
  %v4_dc08 = inttoptr i32 %v3_dc08 to i16*
  store i16 %v1_dc08, i16* %v4_dc08, align 2
  %v0_dc0c = load i32, i32* @r4, align 4
  store i32 %v0_dc0c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d8f4, i32* %r0.global-to-local, align 4
  %v0_dc18 = load i32, i32* @fp, align 4
  store i32 %v0_dc18, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dc20 = load i32, i32* %ip.global-to-local, align 4
  %v6_dc28 = call i32 @function_13840(i32 %v3_d8f4, i32 %v0_dc0c, i32 %v0_dc18, i32 16384, i32 %v0_dc20, i32 16)
  %v3_dc2c = load i32, i32* %stack_var_-44, align 4
  %v1_dc30 = add i32 %v3_dc2c, 1
  store i32 %v1_dc30, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_dc38 = icmp eq i32 %v1_dc30, %arg2
  store i1 %v9_dc38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dc30, i32* %stack_var_-44, align 4
  %v7_dc40 = icmp slt i32 %v1_dc30, %arg2
  br i1 %v7_dc40, label %dec_label_pc_dc44, label %dec_label_pc_dccc

dec_label_pc_dc44:                                ; preds = %dec_label_pc_dba8, %dec_label_pc_db6c
  %v1_dc50 = phi i32 [ %v1_dc30, %dec_label_pc_dba8 ], [ 0, %dec_label_pc_db6c ]
  store i32 %v2_d6a4, i32* %r2.global-to-local, align 4
  store i32 %v3_d958, i32* %r3.global-to-local, align 4
  %v4_dc50 = mul i32 %v1_dc50, 4
  %v5_dc50 = add i32 %v4_dc50, %v2_d6a4
  %v6_dc50 = inttoptr i32 %v5_dc50 to i32*
  %v7_dc50 = load i32, i32* %v6_dc50, align 4
  store i32 %v7_dc50, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_dc58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_dc60 = add i32 %v7_dc50, 20
  store i32 %v1_dc60, i32* @r6, align 4
  %v1_dc64 = add i32 %v7_dc50, 41
  store i32 %v1_dc64, i32* @r7, align 4
  br i1 %v3_dc58, label %dec_label_pc_dc6c, label %dec_label_pc_db84

dec_label_pc_dc6c:                                ; preds = %dec_label_pc_dc44
  %v0_dc6c = call i32 @function_f190()
  %v1_dc6c = trunc i32 %v0_dc6c to i16
  store i32 %v0_dc6c, i32* %r0.global-to-local, align 4
  store i32 %v3_d95c, i32* %ip.global-to-local, align 4
  %v1_dc74 = load i32, i32* @r5, align 4
  %v9_dc74 = icmp eq i32 %v3_d95c, %v1_dc74
  store i1 %v9_dc74, i1* %cpsr_z.global-to-local, align 1
  %v3_dc78 = load i32, i32* @r4, align 4
  %v4_dc78 = add i32 %v3_dc78, 4
  %v5_dc78 = inttoptr i32 %v4_dc78 to i16*
  store i16 %v1_dc6c, i16* %v5_dc78, align 2
  br i1 %v9_dc74, label %dec_label_pc_dc80, label %dec_label_pc_dc6c.dec_label_pc_db90_crit_edge

dec_label_pc_dc6c.dec_label_pc_db90_crit_edge:    ; preds = %dec_label_pc_dc6c
  %v1_db94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_db90

dec_label_pc_dc80:                                ; preds = %dec_label_pc_dc6c, %dec_label_pc_db84
  %v0_dc80 = call i32 @function_f190()
  %v1_dc80 = trunc i32 %v0_dc80 to i16
  store i32 %v0_dc80, i32* %r0.global-to-local, align 4
  store i32 %v3_d960, i32* @lr, align 4
  %v1_dc88 = load i32, i32* @r5, align 4
  %v9_dc88 = icmp eq i32 %v3_d960, %v1_dc88
  store i1 %v9_dc88, i1* %cpsr_z.global-to-local, align 1
  %v3_dc8c = load i32, i32* @r4, align 4
  %v4_dc8c = add i32 %v3_dc8c, 20
  %v5_dc8c = inttoptr i32 %v4_dc8c to i16*
  store i16 %v1_dc80, i16* %v5_dc8c, align 2
  br i1 %v9_dc88, label %dec_label_pc_dc94, label %dec_label_pc_dc80.dec_label_pc_db9c_crit_edge

dec_label_pc_dc80.dec_label_pc_db9c_crit_edge:    ; preds = %dec_label_pc_dc80
  %v1_dba0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_db9c

dec_label_pc_dc94:                                ; preds = %dec_label_pc_dc80, %dec_label_pc_db90
  %v0_dc94 = call i32 @function_f190()
  %v1_dc94 = trunc i32 %v0_dc94 to i16
  %v3_dc98 = load i32, i32* @r6, align 4
  %v4_dc98 = add i32 %v3_dc98, 2
  %v5_dc98 = inttoptr i32 %v4_dc98 to i16*
  store i16 %v1_dc94, i16* %v5_dc98, align 2
  store i32 %v3_d964, i32* %r0.global-to-local, align 4
  %v1_dca0 = load i32, i32* @r5, align 4
  %v9_dca0 = icmp eq i32 %v3_d964, %v1_dca0
  store i1 %v9_dca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dca0, label %dec_label_pc_dca8, label %dec_label_pc_dba8

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dc94, %dec_label_pc_db9c
  %v0_dca8 = call i32 @function_f190()
  %v1_dca8 = trunc i32 %v0_dca8 to i16
  store i32 %v0_dca8, i32* %r0.global-to-local, align 4
  %v3_dcac = load i32, i32* @r4, align 4
  %v4_dcac = add i32 %v3_dcac, 28
  %v5_dcac = inttoptr i32 %v4_dcac to i16*
  store i16 %v1_dca8, i16* %v5_dcac, align 2
  br label %dec_label_pc_dba8

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_d904
  store i32 %v3_d8f4, i32* %r0.global-to-local, align 4
  %v1_dcb8 = call i32 @function_130b4(i32 %v3_d8f4)
  store i32 %v1_dcb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcbc

dec_label_pc_dcbc:                                ; preds = %dec_label_pc_dccc, %dec_label_pc_d8dc, %dec_label_pc_d8c4, %dec_label_pc_dcb4
  %v1_dcc8 = phi i32 [ %v3_d8f4, %dec_label_pc_d8dc ], [ %v2_d8d0, %dec_label_pc_d8c4 ], [ %v1_dcb8, %dec_label_pc_dcb4 ], [ %v2_dcd0, %dec_label_pc_dccc ]
  store i32 %v9_d674, i32* %r6.global-to-local, align 4
  store i32 %v18_d674, i32* %sb.global-to-local, align 4
  store i32 %v27_d674, i32* %lr.global-to-local, align 4
  ret i32 %v1_dcc8

dec_label_pc_dccc.critedge:                       ; preds = %dec_label_pc_d92c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_dccc

dec_label_pc_dccc:                                ; preds = %dec_label_pc_dba8, %dec_label_pc_dccc.critedge, %dec_label_pc_db58
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_dcd0 = call i32 @function_12d34(i32* null)
  store i32 %v2_dcd0, i32* %r0.global-to-local, align 4
  %v9_dcd8 = icmp eq i32 %v2_d8d0, %v2_dcd0
  store i1 %v9_dcd8, i1* %cpsr_z.global-to-local, align 1
  %v6_dcdc = icmp slt i32 %v2_d8d0, %v2_dcd0
  br i1 %v6_dcdc, label %dec_label_pc_dcbc, label %dec_label_pc_db58

dec_label_pc_dce4:                                ; preds = %dec_label_pc_d87c, %bb113
  %v0_d884.lcssa = phi i32 [ %v1_d850, %dec_label_pc_d87c ], [ %v0_d884, %bb113 ]
  %v2_dce8 = sub i32 %v0_d884.lcssa, %v0_d82c
  store i32 %v2_dce8, i32* @r4, align 4
  %v2_dcec = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d840, i32* %r1.global-to-local, align 4
  store i32 %v2_dcec, i32* %r0.global-to-local, align 4
  store i32 %v2_dce8, i32* %r2.global-to-local, align 4
  %v3_dcfc = call i32 @function_124c0(i32 %v2_dcec, i32 %v2_d840, i32 %v2_dce8)
  %v2_dd00 = ptrtoint i32* %stack_var_-40 to i32
  %v1_dd04 = load i32, i32* @r4, align 4
  %v2_dd04 = add i32 %v1_dd04, %v2_dd00
  store i32 %v2_dd04, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dcec, i32* @r0, align 4
  %v3_dd10 = add i32 %v2_dd04, -36
  %v4_dd10 = inttoptr i32 %v3_dd10 to i8*
  store i8 0, i8* %v4_dd10, align 1
  %v1_dd14 = call i32 @function_13614(i32 %v2_dcec)
  store i32 %v1_dd14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d8c4

dec_label_pc_dd20:                                ; preds = %dec_label_pc_d890
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d8c4

dec_label_pc_dd30:                                ; preds = %dec_label_pc_d890
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d8c4

dec_label_pc_dd44:                                ; preds = %dec_label_pc_d890
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d8c4

; uselistorder directives
  uselistorder i32 %v1_dd14, { 1, 0 }
  uselistorder i32 %v2_dcec, { 0, 1, 3, 2 }
  uselistorder i32 %v2_dce8, { 1, 0, 2 }
  uselistorder i32 %v2_dcd0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_dca8, { 1, 0 }
  uselistorder i32 %v0_dc80, { 1, 0 }
  uselistorder i32 %v0_dc6c, { 1, 0 }
  uselistorder i32 %v7_dc50, { 1, 0, 2 }
  uselistorder i32 %v1_dc30, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_dbe0, { 1, 0 }
  uselistorder i32 %v0_dbcc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dbc4, { 1, 0 }
  uselistorder i1 %v3_db88, { 1, 0 }
  uselistorder i1 %v3_dc58, { 1, 0 }
  uselistorder i32 %v1_db10.pre, { 1, 0 }
  uselistorder i32 %v2_db08, { 1, 0 }
  uselistorder i32 %v2_db0817, { 1, 0 }
  uselistorder i32 %v0_db1419, { 1, 0 }
  uselistorder i32 %v1_db00, { 1, 0 }
  uselistorder i32 %v3_d9ec, { 1, 0 }
  uselistorder i32 %v3_d9d8, { 1, 0 }
  uselistorder i32 %v3_d998, { 1, 0 }
  uselistorder i32 %v1_d96c, { 1, 0 }
  uselistorder i32 %v3_d960, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_d95c, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_d924, { 1, 0 }
  uselistorder i1 %v7_d8f8, { 1, 0 }
  uselistorder i32 %v3_d8f4, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_d8e0, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_d8d0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d8cc, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d894, { 1, 0 }
  uselistorder i32 %v0_d890, { 1, 0 }
  uselistorder i32 %v1_d884, { 1, 0 }
  uselistorder i1 %v7_d870, { 1, 0 }
  uselistorder i32 %v1_d86c, { 1, 0, 2 }
  uselistorder i1 %v8_d864, { 1, 0 }
  uselistorder i1 %v7_d860, { 1, 0 }
  uselistorder i32 %v1_d854, { 1, 0 }
  uselistorder i8 %v2_d848, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d84c, { 1, 0 }
  uselistorder i32 %v0_d86c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d840, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d83c, { 1, 0, 2 }
  uselistorder i32 %v0_d834, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d82c, { 1, 0 }
  uselistorder i32 %v0_d82c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_d7d0, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d770, { 2, 0, 1, 3 }
  uselistorder i32 %v6_d754, { 0, 2, 1 }
  uselistorder i32 %v6_d73c, { 1, 0, 2 }
  uselistorder i32 %v1_d724, { 1, 0 }
  uselistorder i32 %v7_d6e0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_d6c8, { 1, 0 }
  uselistorder i32 %v6_d6bc, { 1, 0 }
  uselistorder i32 %v2_d6a4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 38, 9, 6, 7, 8, 10, 11, 12, 1, 13, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 3, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 2, 13, 1, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 47, 46, 48, 50, 49, 52, 51, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 67, 7, 5, 8, 6, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 19, 21, 20, 22, 23, 24, 32, 25, 26, 27, 28, 29, 30, 31, 36, 33, 34, 35, 37, 39, 38, 41, 40, 42, 43, 44, 46, 45, 47, 48, 50, 49, 51, 53, 52, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 32, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32)* @function_13614, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 53, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_9fe8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 88, 89, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_dccc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dcbc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_dba8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db58, { 1, 0 }
  uselistorder label %dec_label_pc_db28, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_d884, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d87c, { 1, 0 }
  uselistorder label %dec_label_pc_d870, { 1, 0 }
}

define i32 @function_dd58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dd58:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_dd7c, label %dec_label_pc_dd64

dec_label_pc_dd64:                                ; preds = %dec_label_pc_dd58
  %v0_dd6c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd68, %dec_label_pc_dd64
  %v0_dd74 = phi i32 [ %v2_dd74, %dec_label_pc_dd68 ], [ 0, %dec_label_pc_dd64 ]
  %v0_dd6c = phi i32 [ %v5_dd6c, %dec_label_pc_dd68 ], [ %v0_dd6c.pre, %dec_label_pc_dd64 ]
  %v0_dd68 = phi i32 [ %v1_dd68, %dec_label_pc_dd68 ], [ %arg1, %dec_label_pc_dd64 ]
  %v1_dd68 = add i32 %v0_dd68, -2
  %v1_dd6c = inttoptr i32 %v0_dd6c to i16*
  %v2_dd6c = load i16, i16* %v1_dd6c, align 2
  %v3_dd6c = zext i16 %v2_dd6c to i32
  %v5_dd6c = add i32 %v0_dd6c, -2
  store i32 %v5_dd6c, i32* @r0, align 4
  %v2_dd74 = add i32 %v3_dd6c, %v0_dd74
  %v1_dd68.cmp = icmp ugt i32 %v1_dd68, 1
  br i1 %v1_dd68.cmp, label %dec_label_pc_dd68, label %dec_label_pc_dd7c.loopexit

dec_label_pc_dd7c.loopexit:                       ; preds = %dec_label_pc_dd68
  br label %dec_label_pc_dd7c

dec_label_pc_dd7c:                                ; preds = %dec_label_pc_dd58, %dec_label_pc_dd7c.loopexit
  %v1_dd84 = phi i32 [ %v2_dd74, %dec_label_pc_dd7c.loopexit ], [ 0, %dec_label_pc_dd58 ]
  %v0_dd7c = phi i32 [ %v1_dd68, %dec_label_pc_dd7c.loopexit ], [ %arg1, %dec_label_pc_dd58 ]
  %v7_dd7c = icmp eq i32 %v0_dd7c, 1
  br i1 %v7_dd7c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dd7c
  %v1_dd80 = load i32, i32* @r0, align 4
  %v2_dd80 = inttoptr i32 %v1_dd80 to i8*
  %v3_dd80 = load i8, i8* %v2_dd80, align 1
  %v4_dd80 = zext i8 %v3_dd80 to i32
  %v3_dd84 = add i32 %v1_dd84, %v4_dd80
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dd7c, %bb
  %v0_dd88 = phi i32 [ %v1_dd84, %dec_label_pc_dd7c ], [ %v3_dd84, %bb ]
  %v3_dd8c = urem i32 %v0_dd88, 65536
  %v4_dd90 = udiv i32 %v0_dd88, 65536
  %v5_dd90 = add nuw nsw i32 %v4_dd90, %v3_dd8c
  %v4_dd94 = udiv i32 %v5_dd90, 65536
  %v5_dd94 = add nuw nsw i32 %v4_dd94, %v5_dd90
  %v1_dd98 = urem i32 %v5_dd94, 65536
  %v3_dda0 = xor i32 %v1_dd98, 65535
  ret i32 %v3_dda0

; uselistorder directives
  uselistorder i32 %v5_dd90, { 1, 0 }
  uselistorder i32 %v5_dd6c, { 1, 0 }
  uselistorder i32 %v1_dd68, { 1, 0, 2 }
  uselistorder i32 %v0_dd6c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_dd7c, { 1, 0 }
}

define i32 @function_dda8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dda8:
  %v1_ddb8 = add i32 %arg1, 12
  %v2_ddb8 = inttoptr i32 %v1_ddb8 to i32*
  %v3_ddb8 = load i32, i32* %v2_ddb8, align 4
  %v1_ddbc = add i32 %arg1, 16
  %v2_ddbc = inttoptr i32 %v1_ddbc to i32*
  %v3_ddbc = load i32, i32* %v2_ddbc, align 4
  %v7_ddc0 = icmp sgt i32 %arg3, 1
  br i1 %v7_ddc0, label %dec_label_pc_ddcc.preheader, label %dec_label_pc_dde0

dec_label_pc_ddcc.preheader:                      ; preds = %dec_label_pc_dda8
  %v0_ddd0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_ddcc.preheader, %dec_label_pc_ddcc
  %v0_ddd8 = phi i32 [ 0, %dec_label_pc_ddcc.preheader ], [ %v2_ddd8, %dec_label_pc_ddcc ]
  %v0_ddd0 = phi i32 [ %v0_ddd0.pre, %dec_label_pc_ddcc.preheader ], [ %v5_ddd0, %dec_label_pc_ddcc ]
  %v0_ddcc = phi i32 [ %arg3, %dec_label_pc_ddcc.preheader ], [ %v1_ddcc, %dec_label_pc_ddcc ]
  %v1_ddcc = add nsw i32 %v0_ddcc, -2
  %v1_ddd0 = inttoptr i32 %v0_ddd0 to i16*
  %v2_ddd0 = load i16, i16* %v1_ddd0, align 2
  %v3_ddd0 = zext i16 %v2_ddd0 to i32
  %v5_ddd0 = add i32 %v0_ddd0, -2
  store i32 %v5_ddd0, i32* @r1, align 4
  %v2_ddd8 = add i32 %v3_ddd0, %v0_ddd8
  %v8_dddc = icmp sgt i32 %v1_ddcc, 1
  br i1 %v8_dddc, label %dec_label_pc_ddcc, label %dec_label_pc_dde0.loopexit

dec_label_pc_dde0.loopexit:                       ; preds = %dec_label_pc_ddcc
  br label %dec_label_pc_dde0

dec_label_pc_dde0:                                ; preds = %dec_label_pc_dde0.loopexit, %dec_label_pc_dda8
  %v1_ddec = phi i32 [ %v2_ddd8, %dec_label_pc_dde0.loopexit ], [ 0, %dec_label_pc_dda8 ]
  %v0_dde0 = phi i32 [ %v1_ddcc, %dec_label_pc_dde0.loopexit ], [ %arg3, %dec_label_pc_dda8 ]
  %v7_dde0 = icmp eq i32 %v0_dde0, 1
  br i1 %v7_dde0, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_dde0
  br label %bb19

bb:                                               ; preds = %dec_label_pc_dde0
  %v1_dde4 = load i32, i32* @r1, align 4
  %v2_dde4 = inttoptr i32 %v1_dde4 to i8*
  %v3_dde4 = load i8, i8* %v2_dde4, align 1
  %v4_dde4 = zext i8 %v3_dde4 to i32
  %v3_ddec = add i32 %v4_dde4, %v1_ddec
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_de14 = phi i32 [ %v1_ddec, %.thread ], [ %v3_ddec, %bb ]
  %v0_ddf4 = mul i32 %v3_ddb8, 65536
  %v3_ddf4 = udiv i32 %v0_ddf4, 65536
  %v3_ddf8 = urem i32 %v3_ddbc, 65536
  %v4_de00 = udiv i32 %v3_ddb8, 65536
  %v2_ddfc = add nuw nsw i32 %v3_ddf8, %v4_de00
  %v5_de00 = add nuw nsw i32 %v2_ddfc, %v3_ddf4
  %v1_de04 = add i32 %arg1, 9
  %v2_de04 = inttoptr i32 %v1_de04 to i8*
  %v3_de04 = load i8, i8* %v2_de04, align 1
  %v4_de04 = zext i8 %v3_de04 to i32
  %v4_de08 = udiv i32 %v3_ddbc, 65536
  %v3_de10 = mul nuw nsw i32 %v4_de04, 256
  %v5_de08 = add i32 %v4_de08, %arg2
  %v2_de0c = add i32 %v5_de08, %v1_de14
  %v2_de14 = add i32 %v2_de0c, %v5_de00
  %v2_de18 = add i32 %v2_de14, %v3_de10
  %tmp = icmp ult i32 %v2_de18, 65536
  br i1 %tmp, label %dec_label_pc_de38, label %dec_label_pc_de24

dec_label_pc_de24:                                ; preds = %bb19, %dec_label_pc_de24
  %v2_de2c5 = phi i32 [ %v2_de2c, %dec_label_pc_de24 ], [ %v2_de18, %bb19 ]
  %v3_de306.in = phi i32 [ %v2_de2c, %dec_label_pc_de24 ], [ %v2_de18, %bb19 ]
  %v3_de306 = udiv i32 %v3_de306.in, 65536
  %v3_de28 = urem i32 %v2_de2c5, 65536
  %v2_de2c = add nuw nsw i32 %v3_de28, %v3_de306
  %tmp20 = icmp ult i32 %v2_de2c, 65536
  br i1 %tmp20, label %dec_label_pc_de38.loopexit, label %dec_label_pc_de24

dec_label_pc_de38.loopexit:                       ; preds = %dec_label_pc_de24
  br label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %dec_label_pc_de38.loopexit, %bb19
  %v0_de38 = phi i32 [ %v2_de2c, %dec_label_pc_de38.loopexit ], [ %v2_de18, %bb19 ]
  %v1_de38 = urem i32 %v0_de38, 65536
  %v3_de40 = xor i32 %v1_de38, 65535
  ret i32 %v3_de40

; uselistorder directives
  uselistorder i32 %v2_de2c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_de18, { 3, 0, 2, 1 }
  uselistorder i32 %v1_ddec, { 1, 0 }
  uselistorder i32 %v5_ddd0, { 1, 0 }
  uselistorder i32 %v0_ddd0, { 1, 0 }
  uselistorder i32 %v3_ddb8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_de24, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_ddcc, { 1, 0 }
}

define i32 @function_de4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_de4c:
  %v2_de58 = load i32, i32* @global_var_2142c.89, align 4
  %v2_de60 = call i32 @function_12e80(i32 %v2_de58, i32 9)
  ret i32 %v2_de60
}

define i32 @function_de74(i32 %arg1) local_unnamed_addr {
dec_label_pc_de74:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_de74 = load i32, i32* @r4, align 4
  %v6_de74 = load i32, i32* @r5, align 4
  %v9_de74 = load i32, i32* @r6, align 4
  %v12_de74 = load i32, i32* @r7, align 4
  %v15_de74 = load i32, i32* @r8, align 4
  %v18_de74 = load i32, i32* @sb, align 4
  %v21_de74 = load i32, i32* @sl, align 4
  %v24_de74 = load i32, i32* @fp, align 4
  %v27_de74 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_de90 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_de90, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_debc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_debc, i32* @fp, align 4
  %v3_dec8 = call i32 @function_13530(i8* nonnull %stack_var_-585, i32 0)
  %v2_decc = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_decc, i32* @sl, align 4
  %v0_ded0 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_dedc = bitcast i32* %stack_var_-8777 to i8*
  %v3_dedc = call i32 @function_13530(i8* %v2_dedc, i32 %v0_ded0)
  %v0_dee4 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_def0 = bitcast i32* %stack_var_-4681 to i8*
  %v3_def0 = call i32 @function_13530(i8* %v2_def0, i32 %v0_dee4)
  %v2_def4 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_def4, i32* @sb, align 4
  %v0_def8 = load i32, i32* %r4.global-to-local, align 4
  %v3_def8 = udiv i32 %v0_def8, 256
  %v1_defc = urem i32 %v0_def8, 256
  store i32 %v1_defc, i32* @r4, align 4
  %v3_df0c = trunc i32 %v3_def8 to i8
  %v4_df0c = call i32 @function_12944(i8 %v3_df0c, i32 16, i32 %v2_def4)
  %v2_df14 = call i32 @function_12450(i8* nonnull %stack_var_-72)
  %v7_df18 = icmp eq i32 %v2_df14, 2
  br i1 %v7_df18, label %dec_label_pc_e3c4, label %dec_label_pc_df20

dec_label_pc_df20:                                ; preds = %dec_label_pc_de74, %dec_label_pc_e3c4
  %v1_df24 = call i32 @function_11a84(i32 4)
  %v1_df2c = call i32 @function_11a84(i32 5)
  %v1_df34 = call i32 @function_11a84(i32 6)
  %v1_df3c = call i32 @function_11a84(i32 7)
  %v0_df40 = load i32, i32* @r5, align 4
  %v2_df48 = inttoptr i32 %v0_df40 to i32*
  %v3_df48 = call i32 @function_119c0(i32 7, i32* %v2_df48)
  %v0_df4c = load i32, i32* @r5, align 4
  %v2_df50 = call i32 @function_12cc0(i32 %v3_df48, i32 %v0_df4c)
  %v7_df54 = icmp eq i32 %v2_df50, -1
  store i32 %v2_df50, i32* @r8, align 4
  br i1 %v7_df54, label %bb, label %dec_label_pc_df64.preheader

bb:                                               ; preds = %dec_label_pc_df20
  %v1_df5c = load i32, i32* @r5, align 4
  store i32 %v1_df5c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e384

dec_label_pc_df64.preheader:                      ; preds = %dec_label_pc_df20
  %v4_df7057 = call i32 @function_126b0(i8* nonnull %stack_var_-585, i32 512, i32 %v2_df50)
  %v2_df7459 = icmp eq i32 %v4_df7057, 0
  br i1 %v2_df7459, label %dec_label_pc_e0fc.loopexit, label %dec_label_pc_df7c.lr.ph

dec_label_pc_df7c.lr.ph:                          ; preds = %dec_label_pc_df64.preheader
  %v2_dfc4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_df7c

dec_label_pc_df7c:                                ; preds = %dec_label_pc_df7c.lr.ph, %dec_label_pc_df64.backedge
  %v3_df80 = load i8, i8* %stack_var_-585, align 1
  %v4_df80 = sext i8 %v3_df80 to i32
  %v2_df84 = icmp eq i8 %v3_df80, 0
  br i1 %v2_df84, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_df7c
  %v8_df88 = icmp eq i8 %v3_df80, 58
  br i1 %v8_df88, label %.thread8, label %dec_label_pc_df9c

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_dfb4

bb134:                                            ; preds = %dec_label_pc_df7c
  br label %dec_label_pc_dfb4

dec_label_pc_df9c:                                ; preds = %bb133
  %v1_dfa4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dfa0

dec_label_pc_dfa0:                                ; preds = %bb135, %dec_label_pc_df9c
  %v0_dfa0 = phi i32 [ %v1_dfa0, %bb135 ], [ 0, %dec_label_pc_df9c ]
  %v1_dfa0 = add i32 %v0_dfa0, 1
  %v2_dfa4 = add i32 %v1_dfa0, %v1_dfa4.pre
  %v3_dfa4 = inttoptr i32 %v2_dfa4 to i8*
  %v4_dfa4 = load i8, i8* %v3_dfa4, align 1
  %v6_dfa4 = zext i8 %v4_dfa4 to i32
  %v2_dfa8 = icmp eq i8 %v4_dfa4, 0
  br i1 %v2_dfa8, label %dec_label_pc_dfb4, label %bb135

bb135:                                            ; preds = %dec_label_pc_dfa0
  %v8_dfac = icmp eq i8 %v4_dfa4, 58
  br i1 %v8_dfac, label %dec_label_pc_dfb4, label %dec_label_pc_dfa0

dec_label_pc_dfb4:                                ; preds = %dec_label_pc_dfa0, %bb135, %bb134, %.thread8
  %v1_dfe0 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_dfa0, %bb135 ], [ %v1_dfa0, %dec_label_pc_dfa0 ]
  %v0_dfb4 = phi i32 [ %v4_df80, %.thread8 ], [ %v4_df80, %bb134 ], [ %v6_dfa4, %bb135 ], [ %v6_dfa4, %dec_label_pc_dfa0 ]
  %v2_dfb4 = icmp eq i32 %v0_dfb4, 0
  br i1 %v2_dfb4, label %dec_label_pc_df64.backedge, label %dec_label_pc_dfbc

dec_label_pc_df64.backedge:                       ; preds = %dec_label_pc_dfb4, %dec_label_pc_e084, %dec_label_pc_e0d0, %dec_label_pc_e000
  %v0_df6c = load i32, i32* @r8, align 4
  %v4_df70 = call i32 @function_126b0(i8* nonnull %stack_var_-585, i32 512, i32 %v0_df6c)
  %v2_df74 = icmp eq i32 %v4_df70, 0
  br i1 %v2_df74, label %dec_label_pc_e0fc.loopexit, label %dec_label_pc_df7c

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfb4
  %v1_dfc0 = add i32 %v1_dfe0, 2
  %v2_dfc8 = add i32 %v1_dfc0, %v2_dfc4
  %v1_dfcc = add i32 %v2_dfc8, -545
  %v2_dfcc = inttoptr i32 %v1_dfcc to i8*
  %v3_dfcc = load i8, i8* %v2_dfcc, align 1
  %v2_dfd0 = icmp eq i8 %v3_dfcc, 0
  br i1 %v2_dfd0, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_dfbc
  %v8_dfd4 = icmp eq i8 %v3_dfcc, 32
  br i1 %v8_dfd4, label %.thread13, label %dec_label_pc_dfe0

.thread13:                                        ; preds = %bb136
  store i32 %v1_dfc0, i32* @r5, align 4
  br label %dec_label_pc_e000

bb137:                                            ; preds = %dec_label_pc_dfbc
  store i32 %v1_dfc0, i32* @r5, align 4
  br label %dec_label_pc_e000

dec_label_pc_dfe0:                                ; preds = %bb136
  %v0_dfe0 = load i32, i32* @r6, align 4
  %v2_dfe0 = add i32 %v0_dfe0, %v1_dfe0
  br label %dec_label_pc_dfe8

dec_label_pc_dfe8:                                ; preds = %bb138, %dec_label_pc_dfe0
  %v0_dff416 = phi i32 [ %v1_dff4, %bb138 ], [ %v1_dfc0, %dec_label_pc_dfe0 ]
  %v0_dff818 = phi i32 [ %v1_dff8, %bb138 ], [ %v2_dfe0, %dec_label_pc_dfe0 ]
  %v1_dfe8 = add i32 %v0_dff818, 3
  %v2_dfe8 = inttoptr i32 %v1_dfe8 to i8*
  %v3_dfe8 = load i8, i8* %v2_dfe8, align 1
  %v2_dfec = icmp eq i8 %v3_dfe8, 0
  br i1 %v2_dfec, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_dfe8
  %v1_dff417 = add i32 %v0_dff416, 1
  store i32 %v1_dff417, i32* @r5, align 4
  br label %dec_label_pc_e000

bb138:                                            ; preds = %dec_label_pc_dfe8
  %v8_dff0 = icmp eq i8 %v3_dfe8, 32
  %v1_dff4 = add i32 %v0_dff416, 1
  store i32 %v1_dff4, i32* @r5, align 4
  %v1_dff8 = add i32 %v0_dff818, 1
  br i1 %v8_dff0, label %dec_label_pc_e000, label %dec_label_pc_dfe8

dec_label_pc_e000:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_e00c = phi i32 [ %v1_dff417, %.thread15 ], [ %v1_dfc0, %.thread13 ], [ %v1_dfc0, %bb137 ], [ %v1_dff4, %bb138 ]
  %v0_e000 = load i32, i32* @r6, align 4
  %v2_e000 = add i32 %v0_e000, %v1_dfc0
  store i32 %v2_e000, i32* @r4, align 4
  %v2_e00c = add i32 %v1_e00c, %v2_dfc4
  store i32 0, i32* @r7, align 4
  %v3_e014 = add i32 %v2_e00c, -545
  %v4_e014 = inttoptr i32 %v3_e014 to i8*
  store i8 0, i8* %v4_e014, align 1
  %v0_e018 = load i32, i32* @r4, align 4
  %v1_e01c = inttoptr i32 %v0_e018 to i8*
  %v2_e01c = call i32 @function_12450(i8* %v1_e01c)
  store i32 %v2_e01c, i32* @r1, align 4
  %v0_e028 = load i32, i32* @r4, align 4
  %v3_e02c = inttoptr i32 %v0_e028 to i8*
  %v4_e02c = call i32 @function_127a0(i8* %v3_e02c, i32 %v2_e01c, i32 %v2_def4)
  %v7_e030 = icmp eq i32 %v4_e02c, -1
  br i1 %v7_e030, label %dec_label_pc_df64.backedge, label %dec_label_pc_e04c.preheader

dec_label_pc_e04c.preheader:                      ; preds = %dec_label_pc_e000
  %v1_e034 = load i32, i32* @r7, align 4
  %v1_e038 = load i32, i32* @r6, align 4
  %v2_e038 = load i32, i32* @r5, align 4
  %v3_e038 = add i32 %v2_e038, %v1_e038
  store i32 %v1_e034, i32* @lr, align 4
  %v1_e04c49 = add i32 %v3_e038, 2
  %v2_e04c50 = inttoptr i32 %v1_e04c49 to i8*
  %v3_e04c51 = load i8, i8* %v2_e04c50, align 1
  %v2_e05053 = icmp eq i8 %v3_e04c51, 0
  %v1_e05455 = add i32 %v2_e038, 2
  br i1 %v2_e05053, label %dec_label_pc_e084, label %dec_label_pc_e05c

dec_label_pc_e05c:                                ; preds = %dec_label_pc_e04c.preheader, %dec_label_pc_e04c.backedge
  %v0_e08484 = phi i32 [ %v0_e08482, %dec_label_pc_e04c.backedge ], [ %v1_e034, %dec_label_pc_e04c.preheader ]
  %v0_e06c.pr = phi i32 [ %v0_e06c.pr71, %dec_label_pc_e04c.backedge ], [ %v1_e034, %dec_label_pc_e04c.preheader ]
  %v0_e398 = phi i32 [ %v0_e39874, %dec_label_pc_e04c.backedge ], [ %v1_e034, %dec_label_pc_e04c.preheader ]
  %v0_e05479 = phi i32 [ %v1_e054, %dec_label_pc_e04c.backedge ], [ %v1_e05455, %dec_label_pc_e04c.preheader ]
  %v0_e07c = phi i32 [ %v0_e04c, %dec_label_pc_e04c.backedge ], [ %v3_e038, %dec_label_pc_e04c.preheader ]
  %v1_e060.in = phi i8 [ %v3_e04c, %dec_label_pc_e04c.backedge ], [ %v3_e04c51, %dec_label_pc_e04c.preheader ]
  %v7_e05c = icmp eq i8 %v1_e060.in, 9
  br i1 %v7_e05c, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_e05c
  %v8_e060 = icmp eq i8 %v1_e060.in, 32
  br i1 %v8_e060, label %.thread27, label %dec_label_pc_e06c

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_e078

bb140:                                            ; preds = %dec_label_pc_e05c
  br label %dec_label_pc_e078

dec_label_pc_e06c:                                ; preds = %bb139
  %v7_e06c = icmp eq i32 %v0_e06c.pr, 1
  br i1 %v7_e06c, label %dec_label_pc_e398, label %dec_label_pc_e074

dec_label_pc_e074:                                ; preds = %dec_label_pc_e398, %dec_label_pc_e06c
  %v0_e07876 = phi i32 [ %v1_e398, %dec_label_pc_e398 ], [ %v0_e398, %dec_label_pc_e06c ]
  br label %dec_label_pc_e078

dec_label_pc_e078:                                ; preds = %bb140, %.thread27, %dec_label_pc_e074
  %v0_e078 = phi i32 [ %v0_e398, %.thread27 ], [ %v0_e398, %bb140 ], [ %v0_e07876, %dec_label_pc_e074 ]
  %v0_e06c.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_e074 ]
  %v7_e080 = icmp sgt i32 %v0_e078, 6
  br i1 %v7_e080, label %dec_label_pc_e084, label %dec_label_pc_e04c.backedge

dec_label_pc_e084:                                ; preds = %dec_label_pc_e04c.backedge, %dec_label_pc_e078, %dec_label_pc_e04c.preheader
  %v1_e0d4 = phi i32 [ %v1_e05455, %dec_label_pc_e04c.preheader ], [ %v1_e054, %dec_label_pc_e04c.backedge ], [ %v0_e05479, %dec_label_pc_e078 ]
  %v0_e084 = phi i32 [ %v1_e034, %dec_label_pc_e04c.preheader ], [ %v0_e08482, %dec_label_pc_e04c.backedge ], [ %v0_e08484, %dec_label_pc_e078 ]
  %v2_e084 = icmp eq i32 %v0_e084, 0
  br i1 %v2_e084, label %dec_label_pc_df64.backedge, label %dec_label_pc_e090

dec_label_pc_e090:                                ; preds = %dec_label_pc_e084
  %v2_e098 = add i32 %v1_e0d4, %v2_dfc4
  %v1_e09c = add i32 %v2_e098, -545
  %v2_e09c = inttoptr i32 %v1_e09c to i8*
  %v3_e09c = load i8, i8* %v2_e09c, align 1
  %v2_e0a0 = icmp eq i8 %v3_e09c, 0
  br i1 %v2_e0a0, label %dec_label_pc_e0d0, label %bb141

bb141:                                            ; preds = %dec_label_pc_e090
  %v8_e0a4 = icmp eq i8 %v3_e09c, 32
  br i1 %v8_e0a4, label %dec_label_pc_e0d0, label %dec_label_pc_e0ac

dec_label_pc_e0ac:                                ; preds = %bb141
  %v2_e0ac = add i32 %v1_e0d4, %v1_e038
  br label %dec_label_pc_e0b0

dec_label_pc_e0b0:                                ; preds = %bb142, %dec_label_pc_e0ac
  %v0_e0bc30 = phi i32 [ %v1_e0bc, %bb142 ], [ %v1_e0d4, %dec_label_pc_e0ac ]
  %v0_e0b0 = phi i32 [ %v1_e0b0, %bb142 ], [ %v2_e0ac, %dec_label_pc_e0ac ]
  %v1_e0b0 = add i32 %v0_e0b0, 1
  %v2_e0b0 = inttoptr i32 %v1_e0b0 to i8*
  %v3_e0b0 = load i8, i8* %v2_e0b0, align 1
  %v2_e0b4 = icmp eq i8 %v3_e0b0, 0
  br i1 %v2_e0b4, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_e0b0
  %v1_e0bc31 = add i32 %v0_e0bc30, 1
  br label %dec_label_pc_e0c4

bb142:                                            ; preds = %dec_label_pc_e0b0
  %v8_e0b8 = icmp eq i8 %v3_e0b0, 32
  %v1_e0bc = add i32 %v0_e0bc30, 1
  br i1 %v8_e0b8, label %dec_label_pc_e0c4, label %dec_label_pc_e0b0

dec_label_pc_e0c4:                                ; preds = %bb142, %.thread29
  %v1_e0cc = phi i32 [ %v1_e0bc31, %.thread29 ], [ %v1_e0bc, %bb142 ]
  %v2_e0cc = add i32 %v1_e0cc, %v2_dfc4
  br label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e090, %bb141, %dec_label_pc_e0c4
  %v2_e0dc = phi i32 [ %v2_e098, %dec_label_pc_e090 ], [ %v2_e098, %bb141 ], [ %v2_e0cc, %dec_label_pc_e0c4 ]
  %v2_e0d4 = add i32 %v1_e0d4, %v1_e038
  store i32 %v2_e0d4, i32* @r4, align 4
  %v3_e0dc = add i32 %v2_e0dc, -545
  %v4_e0dc = inttoptr i32 %v3_e0dc to i8*
  store i8 0, i8* %v4_e0dc, align 1
  %v1_e0e0 = inttoptr i32 %v2_e0d4 to i8*
  %v2_e0e0 = call i32 @function_12450(i8* %v1_e0e0)
  %v8_e0e8 = icmp sgt i32 %v2_e0e0, 15
  br i1 %v8_e0e8, label %dec_label_pc_df64.backedge, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0d0
  %v0_e0f0 = load i32, i32* @r4, align 4
  %v2_e0f4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e0f4, i32* @r0, align 4
  %v2_e0f8 = bitcast i32* %stack_var_-56 to i8*
  %v3_e0f8 = call i32 @function_12478(i8* %v2_e0f8, i32 %v0_e0f0)
  br label %dec_label_pc_e0fc

dec_label_pc_e0fc.loopexit:                       ; preds = %dec_label_pc_df64.backedge, %dec_label_pc_df64.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e0fc

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0fc.loopexit, %dec_label_pc_e0ec
  %v1_e10c.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e0fc.loopexit ], [ %v2_e0f8, %dec_label_pc_e0ec ]
  %v2_e108.pre-phi = phi i32 [ %.pre, %dec_label_pc_e0fc.loopexit ], [ %v2_e0f4, %dec_label_pc_e0ec ]
  %v0_e0fc = load i32, i32* @r8, align 4
  %v1_e100 = call i32 @function_130b4(i32 %v0_e0fc)
  %v2_e10c = call i32 @function_12450(i8* %v1_e10c.pre-phi)
  store i32 %v2_e10c, i32* @r4, align 4
  %v2_e110 = icmp eq i32 %v2_e10c, 0
  br i1 %v2_e110, label %dec_label_pc_e368, label %dec_label_pc_e11c

dec_label_pc_e11c:                                ; preds = %dec_label_pc_e0fc
  %v3_e124 = call i32 @function_119c0(i32 4, i32* null)
  %v1_e128 = call i32 @function_132b0(i32 %v3_e124)
  store i32 %v1_e128, i32* @sb, align 4
  %v2_e12c = icmp eq i32 %v1_e128, 0
  br i1 %v2_e12c, label %dec_label_pc_e35c, label %dec_label_pc_e13c.preheader

dec_label_pc_e13c.preheader:                      ; preds = %dec_label_pc_e11c
  store i32 0, i32* @r5, align 4
  %v1_e14044 = inttoptr i32 %v1_e128 to i32*
  %v2_e14045 = call i32 @function_133f4(i32* %v1_e14044)
  %v2_e14447 = icmp eq i32 %v2_e14045, 0
  br i1 %v2_e14447, label %dec_label_pc_e350, label %dec_label_pc_e14c.preheader

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_e154, %dec_label_pc_e164, %dec_label_pc_e1d0
  %v0_e13c = load i32, i32* @sb, align 4
  %v1_e140 = inttoptr i32 %v0_e13c to i32*
  %v2_e140 = call i32 @function_133f4(i32* %v1_e140)
  %v2_e144 = icmp eq i32 %v2_e140, 0
  br i1 %v2_e144, label %dec_label_pc_e350, label %dec_label_pc_e14c.preheader

dec_label_pc_e14c.preheader:                      ; preds = %dec_label_pc_e13c.preheader, %dec_label_pc_e13c.loopexit
  %v0_e15492 = phi i32 [ %v2_e140, %dec_label_pc_e13c.loopexit ], [ %v2_e14045, %dec_label_pc_e13c.preheader ]
  br label %dec_label_pc_e14c

dec_label_pc_e14c:                                ; preds = %dec_label_pc_e14c.preheader, %dec_label_pc_e338
  %v0_e16c = phi i32 [ %v0_e15492, %dec_label_pc_e14c.preheader ], [ %v2_e344, %dec_label_pc_e338 ]
  %v0_e14c = load i32, i32* @r5, align 4
  %v2_e14c = icmp eq i32 %v0_e14c, 0
  br i1 %v2_e14c, label %dec_label_pc_e154, label %dec_label_pc_e350

dec_label_pc_e154:                                ; preds = %dec_label_pc_e14c
  %v1_e154 = add i32 %v0_e16c, 11
  %v2_e154 = inttoptr i32 %v1_e154 to i8*
  %v3_e154 = load i8, i8* %v2_e154, align 1
  %v4_e154 = zext i8 %v3_e154 to i32
  %v1_e158 = add nsw i32 %v4_e154, -48
  %tmp = icmp ugt i32 %v1_e158, 9
  br i1 %tmp, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_e164

dec_label_pc_e164:                                ; preds = %dec_label_pc_e154
  store i32 %v1_e154, i32* @r7, align 4
  %v3_e170 = call i32 @function_119c0(i32 4, i32* null)
  store i32 %v2_decc, i32* @r0, align 4
  %v3_e17c = call i32 @function_12478(i8* %v2_def0, i32 %v3_e170)
  %v2_e184 = call i32 @function_12450(i8* %v2_def0)
  %v0_e188 = load i32, i32* @r7, align 4
  %v1_e18c = load i32, i32* @sl, align 4
  %v2_e18c = add i32 %v1_e18c, %v2_e184
  store i32 %v2_e18c, i32* @r0, align 4
  %v2_e190 = inttoptr i32 %v2_e18c to i8*
  %v3_e190 = call i32 @function_12478(i8* %v2_e190, i32 %v0_e188)
  %v2_e198 = call i32 @function_12450(i8* %v2_def0)
  %v0_e19c = load i32, i32* @r5, align 4
  store i32 %v2_e198, i32* @r4, align 4
  %v2_e1a8 = inttoptr i32 %v0_e19c to i32*
  %v3_e1a8 = call i32 @function_119c0(i32 5, i32* %v2_e1a8)
  %v0_e1b0 = load i32, i32* @r4, align 4
  %v1_e1b0 = load i32, i32* @sl, align 4
  %v2_e1b0 = add i32 %v1_e1b0, %v0_e1b0
  store i32 %v2_e1b0, i32* @r0, align 4
  %v2_e1b4 = inttoptr i32 %v2_e1b0 to i8*
  %v3_e1b4 = call i32 @function_12478(i8* %v2_e1b4, i32 %v3_e1a8)
  %v3_e1c4 = call i32 @function_12e18(i32 %v2_decc, i32 %v2_debc, i32 4096)
  %v7_e1c8 = icmp eq i32 %v3_e1c4, -1
  br i1 %v7_e1c8, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_e1d0

dec_label_pc_e1d0:                                ; preds = %dec_label_pc_e164
  %v0_e1d0 = load i32, i32* @r5, align 4
  %v2_e1d8 = inttoptr i32 %v0_e1d0 to i32*
  %v3_e1d8 = call i32 @function_119c0(i32 4, i32* %v2_e1d8)
  store i32 %v2_decc, i32* @r0, align 4
  %v3_e1e4 = call i32 @function_12478(i8* %v2_def0, i32 %v3_e1d8)
  %v2_e1ec = call i32 @function_12450(i8* %v2_def0)
  %v0_e1f0 = load i32, i32* @r7, align 4
  %v1_e1f4 = load i32, i32* @sl, align 4
  %v2_e1f4 = add i32 %v1_e1f4, %v2_e1ec
  store i32 %v2_e1f4, i32* @r0, align 4
  %v2_e1f8 = inttoptr i32 %v2_e1f4 to i8*
  %v3_e1f8 = call i32 @function_12478(i8* %v2_e1f8, i32 %v0_e1f0)
  %v2_e200 = call i32 @function_12450(i8* %v2_def0)
  %v0_e204 = load i32, i32* @r5, align 4
  store i32 %v2_e200, i32* @r4, align 4
  %v2_e210 = inttoptr i32 %v0_e204 to i32*
  %v3_e210 = call i32 @function_119c0(i32 6, i32* %v2_e210)
  %v0_e218 = load i32, i32* @r4, align 4
  %v1_e218 = load i32, i32* @sl, align 4
  %v2_e218 = add i32 %v1_e218, %v0_e218
  store i32 %v2_e218, i32* @r0, align 4
  %v2_e21c = inttoptr i32 %v2_e218 to i8*
  %v3_e21c = call i32 @function_12478(i8* %v2_e21c, i32 %v3_e210)
  %v1_e224 = call i32 @function_132b0(i32 %v2_decc)
  store i32 %v1_e224, i32* @r8, align 4
  %v2_e228 = icmp eq i32 %v1_e224, 0
  br i1 %v2_e228, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_e230.preheader

dec_label_pc_e230.preheader:                      ; preds = %dec_label_pc_e1d0
  %v1_e23439 = inttoptr i32 %v1_e224 to i32*
  %v2_e23440 = call i32 @function_133f4(i32* %v1_e23439)
  store i32 %v2_e23440, i32* @r6, align 4
  %v2_e23842 = icmp eq i32 %v2_e23440, 0
  br i1 %v2_e23842, label %dec_label_pc_e338, label %dec_label_pc_e248thread-pre-split

dec_label_pc_e230.loopexit:                       ; preds = %dec_label_pc_e250, %dec_label_pc_e2e8
  %v0_e230 = load i32, i32* @r8, align 4
  %v1_e234 = inttoptr i32 %v0_e230 to i32*
  %v2_e234 = call i32 @function_133f4(i32* %v1_e234)
  store i32 %v2_e234, i32* @r6, align 4
  %v2_e238 = icmp eq i32 %v2_e234, 0
  br i1 %v2_e238, label %dec_label_pc_e338, label %dec_label_pc_e248thread-pre-split

dec_label_pc_e248thread-pre-split:                ; preds = %dec_label_pc_e230.preheader, %dec_label_pc_e230.loopexit
  %v0_e248.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e248

dec_label_pc_e248:                                ; preds = %dec_label_pc_e248thread-pre-split, %dec_label_pc_e310
  %v0_e248 = phi i32 [ %v0_e248.pr, %dec_label_pc_e248thread-pre-split ], [ 1, %dec_label_pc_e310 ]
  %v2_e248 = icmp eq i32 %v0_e248, 0
  br i1 %v2_e248, label %dec_label_pc_e250, label %dec_label_pc_e338

dec_label_pc_e250:                                ; preds = %dec_label_pc_e248
  %v2_e250 = call i32 @function_124e4(i32 %v2_debc, i32 4096)
  %v0_e254 = load i32, i32* @r5, align 4
  %v2_e25c = inttoptr i32 %v0_e254 to i32*
  %v3_e25c = call i32 @function_119c0(i32 4, i32* %v2_e25c)
  store i32 %v2_decc, i32* @r0, align 4
  %v3_e268 = call i32 @function_12478(i8* %v2_def0, i32 %v3_e25c)
  %v2_e270 = call i32 @function_12450(i8* %v2_def0)
  %v0_e274 = load i32, i32* @r7, align 4
  %v1_e278 = load i32, i32* @sl, align 4
  %v2_e278 = add i32 %v1_e278, %v2_e270
  store i32 %v2_e278, i32* @r0, align 4
  %v2_e27c = inttoptr i32 %v2_e278 to i8*
  %v3_e27c = call i32 @function_12478(i8* %v2_e27c, i32 %v0_e274)
  %v2_e284 = call i32 @function_12450(i8* %v2_def0)
  %v0_e288 = load i32, i32* @r5, align 4
  store i32 %v2_e284, i32* @r4, align 4
  %v2_e294 = inttoptr i32 %v0_e288 to i32*
  %v3_e294 = call i32 @function_119c0(i32 6, i32* %v2_e294)
  %v0_e29c = load i32, i32* @r4, align 4
  %v1_e29c = load i32, i32* @sl, align 4
  %v2_e29c = add i32 %v1_e29c, %v0_e29c
  store i32 %v2_e29c, i32* @r0, align 4
  %v2_e2a0 = inttoptr i32 %v2_e29c to i8*
  %v3_e2a0 = call i32 @function_12478(i8* %v2_e2a0, i32 %v3_e294)
  %v2_e2a8 = call i32 @function_12450(i8* %v2_def0)
  %v1_e2b0 = load i32, i32* @sl, align 4
  %v2_e2b0 = add i32 %v1_e2b0, %v2_e2a8
  store i32 %v2_e2b0, i32* @r0, align 4
  %v2_e2b4 = inttoptr i32 %v2_e2b0 to i8*
  %v3_e2b4 = call i32 @function_12478(i8* %v2_e2b4, i32 ptrtoint (i32* @global_var_18290.19 to i32))
  %v2_e2bc = call i32 @function_12450(i8* %v2_def0)
  %v0_e2c0 = load i32, i32* @r6, align 4
  %v1_e2c0 = add i32 %v0_e2c0, 11
  %v1_e2c4 = load i32, i32* @sl, align 4
  %v2_e2c4 = add i32 %v1_e2c4, %v2_e2bc
  store i32 %v2_e2c4, i32* @r0, align 4
  %v2_e2c8 = inttoptr i32 %v2_e2c4 to i8*
  %v3_e2c8 = call i32 @function_12478(i8* %v2_e2c8, i32 %v1_e2c0)
  %v3_e2d8 = call i32 @function_12e18(i32 %v2_decc, i32 %v2_debc, i32 4096)
  %v7_e2dc = icmp eq i32 %v3_e2d8, -1
  br i1 %v7_e2dc, label %dec_label_pc_e230.loopexit, label %dec_label_pc_e2e8

dec_label_pc_e2e8:                                ; preds = %dec_label_pc_e250
  %v2_e2e8 = call i32 @function_12450(i8* %v2_dedc)
  store i32 %v2_e2e8, i32* @r1, align 4
  %v4_e2fc = call i32 @function_127a0(i8* %v2_dedc, i32 %v2_e2e8, i32 %v2_e108.pre-phi)
  %v7_e300 = icmp eq i32 %v4_e2fc, -1
  br i1 %v7_e300, label %dec_label_pc_e230.loopexit, label %dec_label_pc_e310

dec_label_pc_e310:                                ; preds = %dec_label_pc_e2e8
  %v0_e308 = load i32, i32* @r7, align 4
  %v2_e310 = inttoptr i32 %v0_e308 to i8*
  %v3_e310 = call i32 @function_12574(i8* %v2_e310, i32 10)
  %v2_e318 = call i32 @function_12e80(i32 %v3_e310, i32 9)
  %v0_e31c = load i32, i32* @r8, align 4
  %v1_e320 = inttoptr i32 %v0_e31c to i32*
  %v2_e320 = call i32 @function_133f4(i32* %v1_e320)
  store i32 %v2_e320, i32* @r6, align 4
  %v2_e324 = icmp eq i32 %v2_e320, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e324, label %dec_label_pc_e338, label %dec_label_pc_e248

dec_label_pc_e338:                                ; preds = %dec_label_pc_e230.loopexit, %dec_label_pc_e310, %dec_label_pc_e248, %dec_label_pc_e230.preheader
  %v0_e338 = load i32, i32* @r8, align 4
  %v1_e33c = inttoptr i32 %v0_e338 to i32*
  %v2_e33c = call i32 @function_130e8(i32* %v1_e33c)
  %v0_e340 = load i32, i32* @sb, align 4
  %v1_e344 = inttoptr i32 %v0_e340 to i32*
  %v2_e344 = call i32 @function_133f4(i32* %v1_e344)
  %v2_e348 = icmp eq i32 %v2_e344, 0
  br i1 %v2_e348, label %dec_label_pc_e350, label %dec_label_pc_e14c

dec_label_pc_e350:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e338, %dec_label_pc_e14c, %dec_label_pc_e13c.preheader
  %v0_e350 = load i32, i32* @sb, align 4
  %v1_e354 = inttoptr i32 %v0_e350 to i32*
  %v2_e354 = call i32 @function_130e8(i32* %v1_e354)
  %v0_e358 = load i32, i32* @r5, align 4
  %v1_e358 = urem i32 %v0_e358, 256
  br label %dec_label_pc_e35c

dec_label_pc_e35c:                                ; preds = %dec_label_pc_e11c, %dec_label_pc_e350
  %storemerge = phi i32 [ %v1_e358, %dec_label_pc_e350 ], [ 0, %dec_label_pc_e11c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e360 = call i32 @function_14fd4(i32 1)
  br label %dec_label_pc_e368

dec_label_pc_e368:                                ; preds = %dec_label_pc_e0fc, %dec_label_pc_e35c
  %v1_e368 = call i32 @function_119e4(i32 4)
  %v1_e370 = call i32 @function_119e4(i32 5)
  %v1_e378 = call i32 @function_119e4(i32 6)
  %v1_e380 = call i32 @function_119e4(i32 7)
  %v0_e384.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %bb, %dec_label_pc_e368
  %v0_e384 = phi i32 [ %v1_df5c, %bb ], [ %v0_e384.pre, %dec_label_pc_e368 ]
  store i32 %v3_de74, i32* @r4, align 4
  store i32 %v6_de74, i32* @r5, align 4
  store i32 %v9_de74, i32* @r6, align 4
  store i32 %v12_de74, i32* @r7, align 4
  store i32 %v15_de74, i32* @r8, align 4
  store i32 %v18_de74, i32* @sb, align 4
  store i32 %v21_de74, i32* @sl, align 4
  store i32 %v24_de74, i32* @fp, align 4
  store i32 %v27_de74, i32* @lr, align 4
  ret i32 %v0_e384

dec_label_pc_e398:                                ; preds = %dec_label_pc_e06c
  %v1_e398 = add i32 %v0_e398, 1
  %v7_e39c = icmp eq i32 %v0_e398, 0
  br i1 %v7_e39c, label %dec_label_pc_e3a4, label %dec_label_pc_e074

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e398
  %v1_e3a4 = add i32 %v0_e07c, 3
  %v2_e3a4 = inttoptr i32 %v1_e3a4 to i8*
  %v3_e3a4 = load i8, i8* %v2_e3a4, align 1
  %v7_e3a8 = icmp eq i8 %v3_e3a4, 65
  br i1 %v7_e3a8, label %dec_label_pc_e3bc, label %dec_label_pc_e3b0

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e3a4, %dec_label_pc_e3bc
  %v0_e08483 = phi i32 [ %v0_e08484, %dec_label_pc_e3a4 ], [ 1, %dec_label_pc_e3bc ]
  br label %dec_label_pc_e04c.backedge

dec_label_pc_e04c.backedge:                       ; preds = %dec_label_pc_e3b0, %dec_label_pc_e078
  %v0_e08482 = phi i32 [ %v0_e08483, %dec_label_pc_e3b0 ], [ %v0_e08484, %dec_label_pc_e078 ]
  %v0_e39874 = phi i32 [ %v1_e398, %dec_label_pc_e3b0 ], [ %v0_e078, %dec_label_pc_e078 ]
  %v0_e06c.pr71 = phi i32 [ 0, %dec_label_pc_e3b0 ], [ %v0_e06c.pr72, %dec_label_pc_e078 ]
  %v0_e04c = add i32 %v0_e07c, 1
  %v1_e04c = add i32 %v0_e07c, 3
  %v2_e04c = inttoptr i32 %v1_e04c to i8*
  %v3_e04c = load i8, i8* %v2_e04c, align 1
  %v2_e050 = icmp eq i8 %v3_e04c, 0
  %v1_e054 = add i32 %v0_e05479, 1
  br i1 %v2_e050, label %dec_label_pc_e084, label %dec_label_pc_e05c

dec_label_pc_e3bc:                                ; preds = %dec_label_pc_e3a4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e3b0

dec_label_pc_e3c4:                                ; preds = %dec_label_pc_de74
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_df20

; uselistorder directives
  uselistorder i32 %v1_e054, { 1, 0 }
  uselistorder i8 %v3_e04c, { 1, 0 }
  uselistorder i32 %v0_e08482, { 1, 0 }
  uselistorder i32 %v1_e398, { 1, 0 }
  uselistorder i32 %v2_e344, { 1, 0 }
  uselistorder i32 %v1_e0b0, { 1, 0 }
  uselistorder i32 %v0_e0bc30, { 1, 0 }
  uselistorder i32 %v1_e0d4, { 0, 3, 1, 2 }
  uselistorder i32 %v0_e078, { 1, 0 }
  uselistorder i32 %v0_e05479, { 1, 0 }
  uselistorder i32 %v0_e398, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e08484, { 1, 2, 0 }
  uselistorder i32 %v1_e05455, { 1, 0 }
  uselistorder i32 %v2_e038, { 1, 0 }
  uselistorder i32 %v1_e034, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_dff4, { 0, 2, 1 }
  uselistorder i32 %v0_dff416, { 1, 0 }
  uselistorder i32 %v1_dfc0, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_df50, { 1, 2, 0 }
  uselistorder i32 %v0_def8, { 1, 0 }
  uselistorder i32 %v2_def4, { 1, 0, 2 }
  uselistorder i8* %v2_dedc, { 1, 0, 2 }
  uselistorder i32 %v2_debc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @function_12e18, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_126b0, { 1, 0 }
  uselistorder label %dec_label_pc_e3b0, { 1, 0 }
  uselistorder label %dec_label_pc_e384, { 1, 0 }
  uselistorder label %dec_label_pc_e368, { 1, 0 }
  uselistorder label %dec_label_pc_e35c, { 1, 0 }
  uselistorder label %dec_label_pc_e350, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e338, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e248, { 1, 0 }
  uselistorder label %dec_label_pc_e248thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e230.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e14c, { 1, 0 }
  uselistorder label %dec_label_pc_e14c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e13c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e0d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e078, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e05c, { 1, 0 }
  uselistorder label %dec_label_pc_e000, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_df64.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dfb4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_df7c, { 1, 0 }
  uselistorder label %dec_label_pc_df20, { 1, 0 }
}

define i32 @function_e3f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_e3f0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_e3f0 = load i32, i32* @r4, align 4
  %v6_e3f0 = load i32, i32* @r5, align 4
  %v9_e3f0 = load i32, i32* @r6, align 4
  %v12_e3f0 = load i32, i32* @r7, align 4
  %v15_e3f0 = load i32, i32* @r8, align 4
  %v18_e3f0 = load i32, i32* @sb, align 4
  %v21_e3f0 = load i32, i32* @sl, align 4
  %v24_e3f0 = load i32, i32* @fp, align 4
  %v2_e3fc = call i32 @function_12d34(i32* null)
  store i32 %v2_e3fc, i32* @r0, align 4
  store i32 %v2_e3fc, i32* @r5, align 4
  %v0_e404 = call i32 @function_12da4()
  %v7_e408 = icmp eq i32 %v0_e404, -1
  %. = zext i1 %v7_e408 to i32
  %tmp69 = icmp slt i32 %v0_e404, 1
  %storemerge50 = select i1 %tmp69, i32 %., i32 1
  store i32 %storemerge50, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2142c.89 to i32), i32* %r3.global-to-local, align 4
  %v2_e424 = icmp eq i32 %storemerge50, 0
  store i32 %v0_e404, i32* @global_var_2142c.89, align 4
  br i1 %v2_e424, label %dec_label_pc_e43c, label %dec_label_pc_e430

dec_label_pc_e430:                                ; preds = %dec_label_pc_e48c, %dec_label_pc_e3f0
  %v1_e438 = phi i32 [ %v0_e404, %dec_label_pc_e3f0 ], [ 0, %dec_label_pc_e48c ]
  store i32 %v3_e3f0, i32* @r4, align 4
  store i32 %v6_e3f0, i32* @r5, align 4
  store i32 %v9_e3f0, i32* @r6, align 4
  store i32 %v12_e3f0, i32* @r7, align 4
  store i32 %v15_e3f0, i32* @r8, align 4
  store i32 %v18_e3f0, i32* @sb, align 4
  store i32 %v21_e3f0, i32* @sl, align 4
  store i32 %v24_e3f0, i32* @fp, align 4
  ret i32 %v1_e438

dec_label_pc_e43c:                                ; preds = %dec_label_pc_e3f0
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v1_e450 = call i32 @function_de74(i32 20736)
  %v2_e454 = icmp eq i32 %v1_e450, 0
  br i1 %v2_e454, label %dec_label_pc_e45c, label %dec_label_pc_e6b8

dec_label_pc_e45c:                                ; preds = %dec_label_pc_e43c, %dec_label_pc_e6b8, %dec_label_pc_e6e0
  %v1_e460 = call i32 @function_14fd4(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e468 = call i32 @function_13b0c()
  %v1_e468 = inttoptr i32 %v0_e468 to i8*
  store i32 %v0_e468, i32* @global_var_234b8.93, align 4
  store i32 ptrtoint (i32* @global_var_21430.95 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e468, align 1
  %v0_e480 = load i32, i32* %r2.global-to-local, align 4
  %v1_e480 = load i32, i32* %r3.global-to-local, align 4
  %v2_e480 = inttoptr i32 %v1_e480 to i32*
  store i32 %v0_e480, i32* %v2_e480, align 4
  %v0_e484 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e484, i32* @fp, align 4
  store i32 400, i32* @r6, align 4
  %v2_e580 = ptrtoint i32* %stack_var_-120 to i32
  %v2_e58c = bitcast i32* %stack_var_-120 to i8*
  %v2_e5ec = ptrtoint i32* %stack_var_-632 to i32
  br label %dec_label_pc_e48c

dec_label_pc_e48c:                                ; preds = %dec_label_pc_e54c, %dec_label_pc_e45c
  %v1_e490 = call i32 @function_11a84(i32 4)
  %v3_e49c = call i32 @function_119c0(i32 4, i32* null)
  %v1_e4a0 = call i32 @function_132b0(i32 %v3_e49c)
  store i32 %v1_e4a0, i32* @sl, align 4
  %v2_e4a4 = icmp eq i32 %v1_e4a0, 0
  br i1 %v2_e4a4, label %dec_label_pc_e430, label %dec_label_pc_e4ac

dec_label_pc_e4ac:                                ; preds = %dec_label_pc_e48c
  %v1_e4b0 = call i32 @function_119e4(i32 4)
  %v0_e4b431 = load i32, i32* @sl, align 4
  %v1_e4b832 = inttoptr i32 %v0_e4b431 to i32*
  %v2_e4b833 = call i32 @function_133f4(i32* %v1_e4b832)
  %v2_e4bc35 = icmp eq i32 %v2_e4b833, 0
  br i1 %v2_e4bc35, label %dec_label_pc_e54c, label %dec_label_pc_e4c4.preheader

dec_label_pc_e4c4.preheader:                      ; preds = %dec_label_pc_e4ac, %dec_label_pc_e4b4.backedge
  %v0_e4c440 = phi i32 [ %v2_e4b8, %dec_label_pc_e4b4.backedge ], [ %v2_e4b833, %dec_label_pc_e4ac ]
  br label %dec_label_pc_e4c4

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e4c4.preheader, %dec_label_pc_e534
  %v0_e4d4 = phi i32 [ %v0_e4c440, %dec_label_pc_e4c4.preheader ], [ %v2_e540, %dec_label_pc_e534 ]
  %v1_e4c4 = add i32 %v0_e4d4, 11
  %v2_e4c4 = inttoptr i32 %v1_e4c4 to i8*
  %v3_e4c4 = load i8, i8* %v2_e4c4, align 1
  %v4_e4c4 = zext i8 %v3_e4c4 to i32
  %v1_e4c8 = add nsw i32 %v4_e4c4, -48
  store i32 %v1_e4c8, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e4c8, 9
  br i1 %tmp, label %dec_label_pc_e4b4.backedge, label %dec_label_pc_e4d4

dec_label_pc_e4d4:                                ; preds = %dec_label_pc_e4c4
  store i32 %v1_e4c4, i32* @r4, align 4
  %v3_e4e0 = call i32 @function_12574(i8* %v2_e4c4, i32 10)
  %v0_e4e4 = load i32, i32* @r6, align 4
  store i32 %v3_e4e0, i32* @r8, align 4
  %v0_e4ec = load i32, i32* @fp, align 4
  %v1_e4ec = add i32 %v0_e4ec, 1
  store i32 %v1_e4ec, i32* @fp, align 4
  %v5_e4f0 = icmp slt i32 %v0_e4e4, %v3_e4e0
  %v2_e55c = call i32 @function_12d34(i32* null)
  br i1 %v5_e4f0, label %dec_label_pc_e558, label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e4d4
  %v0_e4fc = load i32, i32* @r5, align 4
  %v2_e4fc = sub i32 %v2_e55c, %v0_e4fc
  %v7_e504 = icmp slt i32 %v2_e4fc, 601
  br i1 %v7_e504, label %dec_label_pc_e50c, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e4f4
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_e4b4.backedge

dec_label_pc_e50c:                                ; preds = %dec_label_pc_e4f4
  %v0_e50c = load i32, i32* @r8, align 4
  %v7_e510 = icmp slt i32 %v0_e50c, 401
  br i1 %v7_e510, label %dec_label_pc_e4b4.backedge, label %dec_label_pc_e514

dec_label_pc_e514:                                ; preds = %dec_label_pc_e50c
  %v2_e518 = load i32, i32* @fp, align 4
  %v3_e518 = zext i32 %v2_e518 to i64
  %v4_e518 = mul nuw i64 %v3_e518, 3435973837
  %v3_e51c1 = udiv i64 %v4_e518, 34359738368
  %v3_e5203 = mul nuw nsw i64 %v3_e51c1, 8
  %v3_e520 = trunc i64 %v3_e5203 to i32
  store i32 %v3_e520, i32* %r3.global-to-local, align 4
  %v2_e5245 = mul nuw nsw i64 %v3_e51c1, 2
  %v2_e524 = trunc i64 %v2_e5245 to i32
  %v2_e528 = add i32 %v3_e520, %v2_e524
  store i32 %v2_e528, i32* %r2.global-to-local, align 4
  %v9_e52c = icmp eq i32 %v2_e518, %v2_e528
  br i1 %v9_e52c, label %dec_label_pc_e534, label %dec_label_pc_e4b4.backedge

dec_label_pc_e534:                                ; preds = %dec_label_pc_e514
  %v1_e538 = call i32 @function_14fd4(i32 1)
  %v0_e53c = load i32, i32* @sl, align 4
  %v1_e540 = inttoptr i32 %v0_e53c to i32*
  %v2_e540 = call i32 @function_133f4(i32* %v1_e540)
  %v2_e544 = icmp eq i32 %v2_e540, 0
  br i1 %v2_e544, label %dec_label_pc_e54c, label %dec_label_pc_e4c4

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e4b4.backedge, %dec_label_pc_e534, %dec_label_pc_e4ac
  %v0_e54c = load i32, i32* @sl, align 4
  %v1_e550 = inttoptr i32 %v0_e54c to i32*
  %v2_e550 = call i32 @function_130e8(i32* %v1_e550)
  br label %dec_label_pc_e48c

dec_label_pc_e558:                                ; preds = %dec_label_pc_e4d4
  %v1_e568 = call i32 @function_11a84(i32 4)
  %v1_e570 = call i32 @function_11a84(i32 8)
  %v3_e57c = call i32 @function_119c0(i32 4, i32* null)
  store i32 %v2_e580, i32* @sb, align 4
  store i32 %v2_e580, i32* @r0, align 4
  %v3_e58c = call i32 @function_12478(i8* %v2_e58c, i32 %v3_e57c)
  %v1_e590 = load i32, i32* @sb, align 4
  %v2_e590 = add i32 %v1_e590, %v3_e58c
  store i32 %v2_e590, i32* @r5, align 4
  %v0_e594 = load i32, i32* @r4, align 4
  store i32 %v2_e590, i32* @r0, align 4
  %v2_e59c = inttoptr i32 %v2_e590 to i8*
  %v3_e59c = call i32 @function_12478(i8* %v2_e59c, i32 %v0_e594)
  store i32 %v3_e59c, i32* @r4, align 4
  %v3_e5ac = call i32 @function_119c0(i32 8, i32* null)
  %v0_e5b4 = load i32, i32* @r4, align 4
  %v1_e5b4 = load i32, i32* @r5, align 4
  %v2_e5b4 = add i32 %v1_e5b4, %v0_e5b4
  store i32 %v2_e5b4, i32* @r0, align 4
  %v2_e5b8 = inttoptr i32 %v2_e5b4 to i8*
  %v3_e5b8 = call i32 @function_12478(i8* %v2_e5b8, i32 %v3_e5ac)
  %v1_e5c0 = call i32 @function_119e4(i32 4)
  %v1_e5c8 = call i32 @function_119e4(i32 8)
  %v2_e5d4 = call i32 @function_12cc0(i32 %v2_e580, i32 0)
  %v7_e5d8 = icmp eq i32 %v2_e5d4, -1
  store i32 %v2_e5d4, i32* @r7, align 4
  br i1 %v7_e5d8, label %dec_label_pc_e684, label %dec_label_pc_e5e4

dec_label_pc_e5e4:                                ; preds = %dec_label_pc_e558
  %v1_e5e8 = call i32 @function_11a84(i32 58)
  store i32 %v2_e5ec, i32* @r6, align 4
  %v0_e5f027 = load i32, i32* @r7, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v1_e5fc28 = call i32 @function_12e4c(i32 %v0_e5f027)
  store i32 %v1_e5fc28, i32* @r4, align 4
  %tmp72 = icmp slt i32 %v1_e5fc28, 1
  br i1 %tmp72, label %dec_label_pc_e6a4, label %dec_label_pc_e608

dec_label_pc_e608:                                ; preds = %dec_label_pc_e5e4, %dec_label_pc_e5f0.backedge
  %v3_e610 = call i32 @function_119c0(i32 58, i32* null)
  store i32 %v3_e610, i32* @r5, align 4
  %v3_e620 = call i32 @function_119c0(i32 58, i32* null)
  %v1_e624 = inttoptr i32 %v3_e620 to i8*
  %v2_e624 = call i32 @function_12450(i8* %v1_e624)
  %v0_e628 = load i32, i32* @r4, align 4
  %v5_e62c = icmp slt i32 %v0_e628, %v2_e624
  br i1 %v5_e62c, label %dec_label_pc_e5f0.backedge, label %.thread12

dec_label_pc_e5f0.backedge:                       ; preds = %dec_label_pc_e654, %.thread12, %dec_label_pc_e608
  %v0_e5f0 = load i32, i32* @r7, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v1_e5fc = call i32 @function_12e4c(i32 %v0_e5f0)
  store i32 %v1_e5fc, i32* @r4, align 4
  %tmp73 = icmp slt i32 %v1_e5fc, 1
  br i1 %tmp73, label %dec_label_pc_e6a4, label %dec_label_pc_e608

.thread12:                                        ; preds = %dec_label_pc_e608
  %v1_e63819 = add i32 %v0_e628, -1
  store i32 %v1_e63819, i32* @r4, align 4
  %v2_e63820 = icmp eq i32 %v0_e628, 0
  br i1 %v2_e63820, label %dec_label_pc_e5f0.backedge, label %dec_label_pc_e640.lr.ph

dec_label_pc_e640.lr.ph:                          ; preds = %.thread12
  %v0_e640.pre = load i32, i32* @r5, align 4
  %v1_e644.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e640

dec_label_pc_e640:                                ; preds = %dec_label_pc_e654, %dec_label_pc_e640.lr.ph
  %v0_e638 = phi i32 [ %v1_e63819, %dec_label_pc_e640.lr.ph ], [ %v1_e638, %dec_label_pc_e654 ]
  %v0_e654 = phi i32 [ 0, %dec_label_pc_e640.lr.ph ], [ %v1_e654, %dec_label_pc_e654 ]
  %v1_e640 = phi i32 [ 0, %dec_label_pc_e640.lr.ph ], [ %v1_e64043, %dec_label_pc_e654 ]
  %v2_e640 = add i32 %v1_e640, %v0_e640.pre
  %v3_e640 = inttoptr i32 %v2_e640 to i8*
  %v4_e640 = load i8, i8* %v3_e640, align 1
  %v6_e640 = zext i8 %v4_e640 to i32
  store i32 %v6_e640, i32* %r2.global-to-local, align 4
  %v2_e644 = add i32 %v0_e654, %v1_e644.pre
  %v3_e644 = inttoptr i32 %v2_e644 to i8*
  %v4_e644 = load i8, i8* %v3_e644, align 1
  %v6_e644 = zext i8 %v4_e644 to i32
  store i32 %v6_e644, i32* %r3.global-to-local, align 4
  %v9_e648 = icmp eq i8 %v4_e644, %v4_e640
  br i1 %v9_e648, label %dec_label_pc_e65c, label %bb74

bb74:                                             ; preds = %dec_label_pc_e640
  br label %dec_label_pc_e654

dec_label_pc_e654:                                ; preds = %bb74, %dec_label_pc_e65c
  %v1_e64043 = phi i32 [ %v1_e65c, %dec_label_pc_e65c ], [ 0, %bb74 ]
  %v1_e654 = add i32 %v0_e654, 1
  %v1_e638 = add i32 %v0_e638, -1
  store i32 %v1_e638, i32* @r4, align 4
  %v2_e638 = icmp eq i32 %v0_e638, 0
  br i1 %v2_e638, label %dec_label_pc_e5f0.backedge, label %dec_label_pc_e640

dec_label_pc_e65c:                                ; preds = %dec_label_pc_e640
  %v1_e65c = add i32 %v1_e640, 1
  %v9_e660 = icmp eq i32 %v2_e624, %v1_e65c
  br i1 %v9_e660, label %dec_label_pc_e668, label %dec_label_pc_e654

dec_label_pc_e668:                                ; preds = %dec_label_pc_e65c
  %v1_e66c = call i32 @function_119e4(i32 58)
  %v0_e670 = load i32, i32* @r7, align 4
  %v1_e674 = call i32 @function_130b4(i32 %v0_e670)
  %v0_e678 = load i32, i32* @r8, align 4
  %v2_e680 = call i32 @function_12e80(i32 %v0_e678, i32 9)
  br label %dec_label_pc_e684

dec_label_pc_e684:                                ; preds = %dec_label_pc_e558, %dec_label_pc_e6a4, %dec_label_pc_e668
  %v2_e68c = call i32 @function_124e4(i32 %v2_e580, i32 64)
  %v1_e694 = call i32 @function_14fd4(i32 1)
  store i32 %v2_e55c, i32* @r5, align 4
  %v0_e69c = load i32, i32* @r8, align 4
  store i32 %v0_e69c, i32* @r6, align 4
  br label %dec_label_pc_e4b4.backedge

dec_label_pc_e4b4.backedge:                       ; preds = %dec_label_pc_e514, %dec_label_pc_e50c, %dec_label_pc_e4c4, %dec_label_pc_e684, %.thread7
  %v0_e4b4 = load i32, i32* @sl, align 4
  %v1_e4b8 = inttoptr i32 %v0_e4b4 to i32*
  %v2_e4b8 = call i32 @function_133f4(i32* %v1_e4b8)
  %v2_e4bc = icmp eq i32 %v2_e4b8, 0
  br i1 %v2_e4bc, label %dec_label_pc_e54c, label %dec_label_pc_e4c4.preheader

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e5f0.backedge, %dec_label_pc_e5e4
  %v1_e6a8 = call i32 @function_119e4(i32 58)
  %v0_e6ac = load i32, i32* @r7, align 4
  %v1_e6b0 = call i32 @function_130b4(i32 %v0_e6ac)
  br label %dec_label_pc_e684

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e43c
  %v2_e440 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_e440, i32* %r3.global-to-local, align 4
  %v0_e6c0 = load i32, i32* @r4, align 4
  store i32 %v0_e6c0, i32* %r2.global-to-local, align 4
  %v3_e6d0 = call i32 @function_138c4(i32 2, i32 1, i32 %v0_e6c0)
  %v7_e6d4 = icmp eq i32 %v3_e6d0, -1
  store i32 %v3_e6d0, i32* @r4, align 4
  br i1 %v7_e6d4, label %dec_label_pc_e45c, label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6b8
  %v2_e6e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e6e8 = call i32 @function_13674(i32 %v3_e6d0, i32 %v2_e6e0, i32 16)
  %v0_e6ec = load i32, i32* @r4, align 4
  %v2_e6f4 = call i32 @function_13760(i32 %v0_e6ec, i32 1)
  br label %dec_label_pc_e45c

; uselistorder directives
  uselistorder i32 %v3_e6d0, { 2, 1, 0 }
  uselistorder i32 %v2_e4b8, { 1, 0 }
  uselistorder i32 %v1_e65c, { 1, 0 }
  uselistorder i32 %v1_e638, { 1, 0 }
  uselistorder i32 %v1_e640, { 1, 0 }
  uselistorder i32 %v0_e654, { 1, 0 }
  uselistorder i32 %v0_e638, { 1, 0 }
  uselistorder i32 %v0_e628, { 1, 0, 2 }
  uselistorder i32 %v2_e624, { 1, 0 }
  uselistorder i32 %v2_e5d4, { 1, 0 }
  uselistorder i32 %v2_e540, { 1, 0 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i32 %v0_e404, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32*)* @function_133f4, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_132b0, { 2, 1, 0 }
  uselistorder i32* @global_var_2142c.89, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e4b4.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_e684, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e654, { 1, 0 }
  uselistorder label %dec_label_pc_e608, { 1, 0 }
  uselistorder label %dec_label_pc_e4c4, { 1, 0 }
  uselistorder label %dec_label_pc_e4c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e45c, { 2, 1, 0 }
}

define i32 @function_e70c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e70c:
  store i32 59172, i32* inttoptr (i32 135780 to i32*), align 4
  ret i32 %arg1
}

define i32 @function_e724(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e724:
  %v1_e72c = call i32 @function_11a84(i32 1)
  store i32 ptrtoint (i16** @global_var_234bc.100 to i32), i32* @r4, align 4
  store i32 2032805430, i32* @global_var_234c0.102, align 4
  %v3_e744 = call i32 @function_119c0(i32 1, i32* null)
  %v4_e744 = inttoptr i32 %v3_e744 to i16*
  %v3_e748 = load i16, i16* %v4_e744, align 2
  store i16 %v3_e748, i16* bitcast (i32* @global_var_234be.103 to i16*), align 4
  %v1_e754 = call i32 @function_119e4(i32 1)
  ret i32 %v1_e754
}

define i32 @function_e768(i32 %arg1) local_unnamed_addr {
dec_label_pc_e768:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_e768 = load i32, i32* @r6, align 4
  %v12_e768 = load i32, i32* @r7, align 4
  %v15_e768 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e784 = call i32 @function_138c4(i32 2, i32 1, i32 0)
  store i32 %v3_e784, i32* %r0.global-to-local, align 4
  store i32 135772, i32* @r6, align 4
  %v7_e78c = icmp eq i32 %v3_e784, -1
  store i32 %v3_e784, i32* inttoptr (i32 135772 to i32*), align 4
  br i1 %v7_e78c, label %dec_label_pc_e768.dec_label_pc_e844_crit_edge, label %dec_label_pc_e798

dec_label_pc_e768.dec_label_pc_e844_crit_edge:    ; preds = %dec_label_pc_e768
  %v1_e84c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e844

dec_label_pc_e798:                                ; preds = %dec_label_pc_e768
  %v2_e798 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e798, i32* @r3, align 4
  %v0_e79c = load i32, i32* @r4, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_e7ac = load i32, i32* %r0.global-to-local, align 4
  %v5_e7ac = call i32 @function_13880(i32 %v0_e7ac, i32 %v0_e79c, i32 2, i32 %v2_e798, i32 4)
  store i32 %v5_e7ac, i32* %r0.global-to-local, align 4
  %v0_e7b0 = load i32, i32* @r6, align 4
  %v1_e7b0 = inttoptr i32 %v0_e7b0 to i32*
  %v2_e7b0 = load i32, i32* %v1_e7b0, align 4
  store i32 %v2_e7b0, i32* %r0.global-to-local, align 4
  %v2_e7c0 = call i32 @function_12ee8(i32 %v2_e7b0, i32 3)
  %v0_e7c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_e7b0, i32* %r0.global-to-local, align 4
  %v2_e7d0 = call i32 @function_12ee8(i32 %v2_e7b0, i32 %v0_e7c4)
  store i32 %v2_e7d0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @1 to i32), i32* @r8, align 4
  %v0_e800 = call i32 @function_134dc()
  store i32 %v0_e800, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v2_e808 = inttoptr i32 %v0_e800 to i32*
  store i32 0, i32* %v2_e808, align 4
  %v2_e80c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e80c, i32* @r5, align 4
  store i32 %v0_e800, i32* @r4, align 4
  %v0_e81c = load i32, i32* @r6, align 4
  %v1_e81c = inttoptr i32 %v0_e81c to i32*
  %v2_e81c = load i32, i32* %v1_e81c, align 4
  store i32 %v2_e81c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e828 = call i32 @function_13674(i32 %v2_e81c, i32 %v2_e80c, i32 16)
  store i32 %v3_e828, i32* %r0.global-to-local, align 4
  %v7_e82c = icmp eq i32 %v3_e828, -1
  br i1 %v7_e82c, label %dec_label_pc_e850, label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e798
  %v2_e83c = load i32, i32* inttoptr (i32 135772 to i32*), align 4
  store i32 %v2_e83c, i32* %r0.global-to-local, align 4
  %v2_e840 = call i32 @function_13760(i32 %v2_e83c, i32 1)
  store i32 %v2_e840, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e844

dec_label_pc_e844:                                ; preds = %dec_label_pc_e768.dec_label_pc_e844_crit_edge, %dec_label_pc_e85c, %dec_label_pc_e834
  %v1_e84c = phi i32 [ %v1_e84c.pre, %dec_label_pc_e768.dec_label_pc_e844_crit_edge ], [ %v1_e8a4, %dec_label_pc_e85c ], [ %v2_e840, %dec_label_pc_e834 ]
  store i32 %v9_e768, i32* @r6, align 4
  store i32 %v12_e768, i32* @r7, align 4
  store i32 %v15_e768, i32* @r8, align 4
  ret i32 %v1_e84c

dec_label_pc_e850:                                ; preds = %dec_label_pc_e798
  %v0_e850 = load i32, i32* @r4, align 4
  %v1_e850 = inttoptr i32 %v0_e850 to i32*
  %v2_e850 = load i32, i32* %v1_e850, align 4
  %v7_e854 = icmp eq i32 %v2_e850, 99
  br i1 %v7_e854, label %dec_label_pc_e8ac, label %dec_label_pc_e85c

dec_label_pc_e85c:                                ; preds = %dec_label_pc_e8ac, %bb, %dec_label_pc_e850
  %v0_e874 = load i32, i32* @r6, align 4
  %v1_e874 = inttoptr i32 %v0_e874 to i32*
  %v2_e874 = load i32, i32* %v1_e874, align 4
  store i32 %v2_e874, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e884 = call i32 @function_136ac(i32 %v2_e874, i32 %v2_e80c, i32 16)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_e88c = call i32 @function_14fd4(i32 5)
  store i32 %v1_e88c, i32* %r0.global-to-local, align 4
  %v0_e890 = load i32, i32* @r6, align 4
  %v1_e890 = inttoptr i32 %v0_e890 to i32*
  %v2_e890 = load i32, i32* %v1_e890, align 4
  store i32 %v2_e890, i32* %r0.global-to-local, align 4
  %v1_e894 = call i32 @function_130b4(i32 %v2_e890)
  store i32 50951, i32* %r0.global-to-local, align 4
  %v1_e8a0 = call i32 @function_de74(i32 50951)
  store i32 %v1_e8a0, i32* %r0.global-to-local, align 4
  %v1_e8a4 = call i32 @function_e768(i32 %v1_e8a0)
  store i32 %v1_e8a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e844

dec_label_pc_e8ac:                                ; preds = %dec_label_pc_e850
  %v0_e8ac = load i32, i32* @r8, align 4
  %v1_e8ac = inttoptr i32 %v0_e8ac to i8*
  %v2_e8ac = load i8, i8* %v1_e8ac, align 1
  %v3_e8ac = zext i8 %v2_e8ac to i32
  %v1_e8b0 = load i32, i32* @r7, align 4
  %v9_e8b0 = icmp eq i32 %v3_e8ac, %v1_e8b0
  br i1 %v9_e8b0, label %dec_label_pc_e85c, label %bb

bb:                                               ; preds = %dec_label_pc_e8ac
  %v2_e8b8 = trunc i32 %v1_e8b0 to i8
  store i8 %v2_e8b8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), align 1
  br label %dec_label_pc_e85c

; uselistorder directives
  uselistorder i32 %v1_e8a4, { 1, 0 }
  uselistorder i32 %v2_e80c, { 1, 0, 2 }
  uselistorder i32 %v2_e7b0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_e784, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 8, 7, 10, 9, 11, 13, 12, 14, 15, 17, 18, 19, 16 }
  uselistorder i32 (i32)* @function_de74, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_13760, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13674, { 2, 1, 0 }
  uselistorder [4 x i8]* @1, { 1, 0 }
  uselistorder label %dec_label_pc_e85c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e844, { 1, 2, 0 }
}

define i32 @function_e8c0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8c0:
  %v0_e8c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e8c0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e8c0
  %tmp2 = trunc i32 %arg2 to i16
  store i16 %tmp2, i16* %arg1, align 2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e8c0, %bb
  %v11_e8c8 = load i32, i32* @r0, align 4
  ret i32 %v11_e8c8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_e8cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_e8cc:
  %stack_var_-20 = alloca i32, align 4
  %v3_e8cc = load i32, i32* @r4, align 4
  %v6_e8cc = load i32, i32* @r5, align 4
  %v0_e8d4 = call i32 @function_12da4()
  %v7_e8d8 = icmp eq i32 %v0_e8d4, -1
  %. = zext i1 %v7_e8d8 to i32
  %tmp11 = icmp slt i32 %v0_e8d4, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_e8f4 = icmp eq i32 %storemerge4, 0
  store i32 %v0_e8d4, i32* @global_var_21434.108, align 4
  br i1 %v2_e8f4, label %dec_label_pc_e90c, label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %dec_label_pc_e8cc
  store i32 %v3_e8cc, i32* @r4, align 4
  store i32 %v6_e8cc, i32* @r5, align 4
  ret i32 %v0_e8d4

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8cc
  store i32 1, i32* %stack_var_-20, align 4
  %v1_e918 = call i32 @function_11a84(i32 55)
  %v1_e920 = call i32 @function_11a84(i32 56)
  %v0_e924 = load i32, i32* @r5, align 4
  %v2_e92c = inttoptr i32 %v0_e924 to i32*
  %v3_e92c = call i32 @function_119c0(i32 55, i32* %v2_e92c)
  %v2_e934 = call i32 @function_12cc0(i32 %v3_e92c, i32 2)
  %v7_e938 = icmp eq i32 %v2_e934, -1
  store i32 %v2_e934, i32* @r4, align 4
  br i1 %v7_e938, label %dec_label_pc_e980, label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e980, %dec_label_pc_e90c
  %v0_e950 = phi i32 [ %v2_e990, %dec_label_pc_e980 ], [ %v2_e934, %dec_label_pc_e90c ]
  %v2_e954 = ptrtoint i32* %stack_var_-20 to i32
  %v3_e958 = call i32 @function_13028(i32 %v0_e950, i32 -2147199228, i32 %v2_e954)
  br label %dec_label_pc_e95c

dec_label_pc_e95c:                                ; preds = %dec_label_pc_e95c, %dec_label_pc_e944
  %v0_e968 = load i32, i32* @r4, align 4
  %v3_e970 = call i32 @function_13028(i32 %v0_e968, i32 -2147199227, i32 0)
  %v1_e978 = call i32 @function_14fd4(i32 10)
  br label %dec_label_pc_e95c

dec_label_pc_e980:                                ; preds = %dec_label_pc_e90c
  %v0_e980 = load i32, i32* @r5, align 4
  %v2_e988 = inttoptr i32 %v0_e980 to i32*
  %v3_e988 = call i32 @function_119c0(i32 56, i32* %v2_e988)
  %v2_e990 = call i32 @function_12cc0(i32 %v3_e988, i32 2)
  %v3_e994 = icmp eq i32 %v2_e990, -1
  store i32 %v2_e990, i32* @r4, align 4
  br i1 %v3_e994, label %dec_label_pc_e9a0, label %dec_label_pc_e944

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e980
  %v1_e9a4 = call i32 @function_119e4(i32 55)
  %v1_e9ac = call i32 @function_119e4(i32 56)
  %v0_e9b0 = load i32, i32* @r5, align 4
  %v1_e9b4 = call i32 @function_14f1c(i32 %v0_e9b0)
  %v0_e9b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e9b8, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_e9a0
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_e9a0, %bb14
  ret i32 %v1_e9b4

; uselistorder directives
  uselistorder i32 %v2_e990, { 1, 2, 0 }
  uselistorder i32 %v2_e934, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_e8d4, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_e9bc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e9bc:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v15_e9bc = load i32, i32* @r8, align 4
  %v2_e9cc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_e9cc, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_e9e4 = call i32 @function_1395c(i32* nonnull %stack_var_-64)
  store i32 %v2_e9cc, i32* @r0, align 4
  %v2_e9f0 = call i32 @function_13918(i32 %v2_e9cc, i32 2)
  %v0_e9f4 = load i32, i32* @r5, align 4
  store i32 %v0_e9f4, i32* %r2.global-to-local, align 4
  %v3_ea00 = call i32 @function_1307c(i32 %v0_e9f4, i32 %v2_e9cc, i32 %v0_e9f4)
  %v2_ea0c = call i32 @function_13970(i32 17, i32 1)
  %v2_ea18 = call i32 @function_13970(i32 5, i32 59148)
  %v0_ea1c = call i32 @function_1270c()
  store i16 -23551, i16* bitcast (i32* @global_var_234be.103 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* %r3.global-to-local, align 4
  store i32 -583215265, i32* %r2.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 %v0_ea1c, i32* @global_var_234b4.78, align 4
  store i32 -583215265, i32* @global_var_234c0.102, align 4
  store i16 2, i16* bitcast (i16** @global_var_234bc.100 to i16*), align 4
  %v5_ea50 = call i32 @function_11b24(i32 %v0_ea1c, i32 ptrtoint (i16** @global_var_234bc.100 to i32), i32 -583215265, i32 ptrtoint (i32* @global_var_234b4.78 to i32))
  store i32 59172, i32* %r3.global-to-local, align 4
  store i32 135780, i32* @lr, align 4
  %v2_ea5c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_ea5c, i32* @sb, align 4
  store i32 59172, i32* inttoptr (i32 135780 to i32*), align 4
  %v1_ea64 = call i32 @function_e768(i32 %v5_ea50)
  %v1_ea68 = call i32 @function_f1ec(i32 %v1_ea64)
  %v2_ea74 = call i32 @function_124e4(i32 %v2_ea5c, i32 32)
  %v0_ea78 = load i32, i32* @r6, align 4
  %v7_ea78 = icmp eq i32 %v0_ea78, 2
  br i1 %v7_ea78, label %dec_label_pc_eba8, label %dec_label_pc_ea80

dec_label_pc_ea80:                                ; preds = %dec_label_pc_eba8, %dec_label_pc_e9bc, %dec_label_pc_ebb8
  %v0_ea80 = call i32 @function_f190()
  store i32 %v0_ea80, i32* @r6, align 4
  %v0_ea88 = load i32, i32* @r8, align 4
  %v1_ea88 = inttoptr i32 %v0_ea88 to i32*
  %v2_ea88 = load i32, i32* %v1_ea88, align 4
  %v1_ea8c = inttoptr i32 %v2_ea88 to i8*
  %v2_ea8c = call i32 @function_12450(i8* %v1_ea8c)
  %v0_ea94 = load i32, i32* @r8, align 4
  %v1_ea94 = inttoptr i32 %v0_ea94 to i32*
  %v2_ea94 = load i32, i32* %v1_ea94, align 4
  %v1_ea98 = inttoptr i32 %v2_ea94 to i8*
  %v2_ea98 = call i32 @function_12450(i8* %v1_ea98)
  %v1_ea9c = sub i32 20, %v2_ea8c
  store i32 %v2_ea98, i32* @r4, align 4
  %v0_eaa4 = load i32, i32* @r6, align 4
  %v2_eaa8 = call i32 @function_12b3c(i32 %v0_eaa4, i32 %v1_ea9c)
  %v2_eaac = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_eaac, i32* @r5, align 4
  %v0_eab0 = load i32, i32* @r4, align 4
  %v2_eab0 = add i32 %v0_eab0, %v1_ea9c
  store i32 %v2_eab0, i32* @r4, align 4
  %v2_eabc = call i32 @function_f254(i32 %v2_eaac, i32 %v2_eab0)
  %v2_eac0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_eac4 = load i32, i32* @r4, align 4
  %v2_eac4 = add i32 %v1_eac4, %v2_eac0
  store i32 %v2_eac4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_ead0 = load i32, i32* @r8, align 4
  %v1_ead0 = inttoptr i32 %v0_ead0 to i32*
  %v2_ead0 = load i32, i32* %v1_ead0, align 4
  store i32 %v2_ead0, i32* @r0, align 4
  %v3_ead4 = add i32 %v2_eac4, -80
  %v4_ead4 = inttoptr i32 %v3_ead4 to i8*
  store i8 0, i8* %v4_ead4, align 1
  %v2_ead8 = inttoptr i32 %v2_ead0 to i8*
  %v3_ead8 = call i32 @function_12478(i8* %v2_ead8, i32 %v2_eaac)
  %v2_eae4 = call i32 @function_124e4(i32 %v2_eaac, i32 32)
  %v0_eae8 = call i32 @function_f190()
  store i32 %v0_eae8, i32* @r7, align 4
  %v0_eaf0 = load i32, i32* @r8, align 4
  %v1_eaf0 = inttoptr i32 %v0_eaf0 to i32*
  %v2_eaf0 = load i32, i32* %v1_eaf0, align 4
  %v1_eaf4 = inttoptr i32 %v2_eaf0 to i8*
  %v2_eaf4 = call i32 @function_12450(i8* %v1_eaf4)
  store i32 %v2_eaf4, i32* @r6, align 4
  %v0_eafc = load i32, i32* @r8, align 4
  %v1_eafc = inttoptr i32 %v0_eafc to i32*
  %v2_eafc = load i32, i32* %v1_eafc, align 4
  %v1_eb00 = inttoptr i32 %v2_eafc to i8*
  %v2_eb00 = call i32 @function_12450(i8* %v1_eb00)
  %v0_eb04 = load i32, i32* @r6, align 4
  %v1_eb04 = sub i32 20, %v0_eb04
  store i32 %v2_eb00, i32* @r4, align 4
  %v0_eb0c = load i32, i32* @r7, align 4
  %v2_eb10 = call i32 @function_12b3c(i32 %v0_eb0c, i32 %v1_eb04)
  %v0_eb14 = load i32, i32* @r4, align 4
  %v2_eb14 = add i32 %v0_eb14, %v1_eb04
  store i32 %v2_eb14, i32* @r4, align 4
  %v2_eb20 = call i32 @function_f254(i32 %v2_eaac, i32 %v2_eb14)
  store i32 %v2_eac0, i32* %r2.global-to-local, align 4
  %v1_eb28 = load i32, i32* @r4, align 4
  %v2_eb28 = add i32 %v1_eb28, %v2_eac0
  store i32 %v2_eb28, i32* %r3.global-to-local, align 4
  %v0_eb2c = load i32, i32* @sl, align 4
  %v1_eb2c = trunc i32 %v0_eb2c to i8
  %v3_eb2c = add i32 %v2_eb28, -80
  %v4_eb2c = inttoptr i32 %v3_eb2c to i8*
  store i8 %v1_eb2c, i8* %v4_eb2c, align 1
  %v4_eb38 = call i32 @function_12d64(i32 15, i32 %v2_eaac, i32 %v2_eac0, i32 %v2_eb28)
  %v1_eb40 = call i32 @function_11a84(i32 3)
  %v3_eb50 = call i32 @function_119c0(i32 3, i32* nonnull %stack_var_-48)
  %v3_eb54 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_eb54, i32* %r2.global-to-local, align 4
  %v2_eb60 = call i32 @function_12fc0(i32 1, i32 %v3_eb50)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_eb70 = call i32 @function_12fc0(i32 1, i32 ptrtoint (i32* @global_var_182cc.115 to i32))
  %v1_eb78 = call i32 @function_119e4(i32 3)
  %v1_eb7c = call i32 @function_a2f0(i32 %v1_eb78)
  %v1_eb80 = call i32 @function_e3f0(i32 %v1_eb7c)
  store i32 %v1_eb80, i32* @r0, align 4
  %v1_eb84 = call i32 @function_e8cc(i32 %v1_eb80)
  store i32 %v1_eb84, i32* @r0, align 4
  %v0_eb88 = call i32 @function_12da4()
  %v1_eb8c = load i32, i32* @sl, align 4
  %v7_eb90 = icmp sgt i32 %v0_eb88, %v1_eb8c
  br i1 %v7_eb90, label %dec_label_pc_eb94, label %dec_label_pc_ebe0

dec_label_pc_eb94:                                ; preds = %dec_label_pc_ea80
  store i32 %v15_e9bc, i32* %r8.global-to-local, align 4
  ret i32 %v1_eb8c

dec_label_pc_eba8:                                ; preds = %dec_label_pc_e9bc
  %v0_eba8 = load i32, i32* @r8, align 4
  %v1_eba8 = add i32 %v0_eba8, 4
  %v2_eba8 = inttoptr i32 %v1_eba8 to i32*
  %v3_eba8 = load i32, i32* %v2_eba8, align 4
  %v1_ebac = inttoptr i32 %v3_eba8 to i8*
  %v2_ebac = call i32 @function_12450(i8* %v1_ebac)
  %v8_ebb4 = icmp sgt i32 %v2_ebac, 31
  br i1 %v8_ebb4, label %dec_label_pc_ea80, label %dec_label_pc_ebb8

dec_label_pc_ebb8:                                ; preds = %dec_label_pc_eba8
  %v0_ebb8 = load i32, i32* @r8, align 4
  %v1_ebb8 = add i32 %v0_ebb8, 4
  %v2_ebb8 = inttoptr i32 %v1_ebb8 to i32*
  %v3_ebb8 = load i32, i32* %v2_ebb8, align 4
  store i32 %v2_ea5c, i32* @r0, align 4
  %v2_ebc0 = bitcast i32* %stack_var_-152 to i8*
  %v3_ebc0 = call i32 @function_12478(i8* %v2_ebc0, i32 %v3_ebb8)
  %v0_ebc4 = load i32, i32* @r8, align 4
  %v1_ebc4 = add i32 %v0_ebc4, 4
  %v2_ebc4 = inttoptr i32 %v1_ebc4 to i32*
  %v3_ebc4 = load i32, i32* %v2_ebc4, align 4
  %v1_ebcc = inttoptr i32 %v3_ebc4 to i8*
  %v2_ebcc = call i32 @function_12450(i8* %v1_ebcc)
  %v2_ebd8 = call i32 @function_124e4(i32 %v3_ebc4, i32 %v2_ebcc)
  br label %dec_label_pc_ea80

dec_label_pc_ebe0:                                ; preds = %dec_label_pc_ea80
  %v1_ebe0 = call i32 @function_12ff4(i32 %v0_eb88)
  %v0_ebe8 = load i32, i32* @sl, align 4
  %v1_ebec = call i32 @function_130b4(i32 %v0_ebe8)
  %v1_ebf4 = call i32 @function_130b4(i32 1)
  %v1_ebfc = call i32 @function_130b4(i32 2)
  store i32 135776, i32* @fp, align 4
  %v1_ec04 = call i32 @function_a2f0(i32 %v1_ebfc)
  %v1_ec08 = call i32 @function_e3f0(i32 %v1_ec04)
  store i32 %v1_ec08, i32* @r0, align 4
  %v1_ec0c = call i32 @function_e8cc(i32 %v1_ec08)
  store i32 %v1_ec0c, i32* @r0, align 4
  %v1_ec10 = call i32 @function_f574(i32 %v1_ec0c)
  %v0_ec14 = load i32, i32* @sl, align 4
  %v2_ec18 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ec18, i32* @r6, align 4
  %v2_ec1c = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ec1c, i32* @r7, align 4
  %v2_ecfc = ptrtoint i32* %stack_var_-72 to i32
  %v2_ed4c = ptrtoint i32* %stack_var_-168 to i32
  %v2_ef28 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ef30 = ptrtoint i8** %stack_var_-42 to i32
  %v2_f0d8 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_ef4c = ptrtoint i32* %stack_var_-52 to i32
  %v1_f000 = bitcast i32* %stack_var_-152 to i8*
  %v2_efc0 = ptrtoint i32* %stack_var_-88 to i32
  %v1_efdc = sub i32 0, %v1_ebe0
  br label %dec_label_pc_ec20

dec_label_pc_ec20:                                ; preds = %dec_label_pc_f060, %dec_label_pc_f0fc, %bb43, %dec_label_pc_effc, %dec_label_pc_ee30, %dec_label_pc_ee20, %bb40, %dec_label_pc_f150, %dec_label_pc_f0bc, %dec_label_pc_f070, %dec_label_pc_f04c, %dec_label_pc_ef78, %dec_label_pc_eea0, %dec_label_pc_edd8, %dec_label_pc_ebe0
  %stack_var_-1436.0 = phi i32 [ %v0_ec14, %dec_label_pc_ebe0 ], [ %stack_var_-1436.0, %bb40 ], [ %stack_var_-1436.1, %dec_label_pc_ee20 ], [ %stack_var_-1436.1, %dec_label_pc_ee30 ], [ %stack_var_-1436.1, %bb43 ], [ %stack_var_-1436.1, %dec_label_pc_f070 ], [ %stack_var_-1436.1, %dec_label_pc_eea0 ], [ %stack_var_-1436.1, %dec_label_pc_f0fc ], [ %stack_var_-1436.1, %dec_label_pc_f150 ], [ %stack_var_-1436.1, %dec_label_pc_f0bc ], [ %stack_var_-1436.1, %dec_label_pc_edd8 ], [ %stack_var_-1436.1, %dec_label_pc_effc ], [ %stack_var_-1436.1, %dec_label_pc_f04c ], [ %stack_var_-1436.1, %dec_label_pc_ef78 ], [ %stack_var_-1436.1, %dec_label_pc_f060 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec2c

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_ec2c, %dec_label_pc_ec20
  %v1_ec30 = phi i32 [ %v1_ec34, %dec_label_pc_ec2c ], [ 4, %dec_label_pc_ec20 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ec30 = load i32, i32* @r6, align 4
  %v3_ec30 = add i32 %v2_ec30, %v1_ec30
  %v4_ec30 = inttoptr i32 %v3_ec30 to i32*
  store i32 0, i32* %v4_ec30, align 4
  %v0_ec34 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec34 = add i32 %v0_ec34, 4
  store i32 %v1_ec34, i32* %r3.global-to-local, align 4
  %v7_ec38 = icmp eq i32 %v1_ec34, 128
  br i1 %v7_ec38, label %dec_label_pc_ec40, label %dec_label_pc_ec2c

dec_label_pc_ec40:                                ; preds = %dec_label_pc_ec2c
  %v0_ec40 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ec40, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec48

dec_label_pc_ec48:                                ; preds = %dec_label_pc_ec48, %dec_label_pc_ec40
  %v1_ec4c = phi i32 [ %v1_ec50, %dec_label_pc_ec48 ], [ 4, %dec_label_pc_ec40 ]
  store i32 0, i32* @r4, align 4
  %v2_ec4c = load i32, i32* @r7, align 4
  %v3_ec4c = add i32 %v2_ec4c, %v1_ec4c
  %v4_ec4c = inttoptr i32 %v3_ec4c to i32*
  store i32 0, i32* %v4_ec4c, align 4
  %v0_ec50 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec50 = add i32 %v0_ec50, 4
  store i32 %v1_ec50, i32* %r3.global-to-local, align 4
  %v7_ec54 = icmp eq i32 %v1_ec50, 128
  br i1 %v7_ec54, label %dec_label_pc_ec5c, label %dec_label_pc_ec48

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_ec48
  store i32 135772, i32* %r3.global-to-local, align 4
  %v2_ec60 = load i32, i32* inttoptr (i32 135772 to i32*), align 4
  %v7_ec64 = icmp eq i32 %v2_ec60, -1
  br i1 %v7_ec64, label %dec_label_pc_ec90, label %dec_label_pc_ec6c

dec_label_pc_ec6c:                                ; preds = %dec_label_pc_ec5c
  %v3_ec6c = udiv i32 %v2_ec60, 32
  %v3_ec70 = mul nuw nsw i32 %v3_ec6c, 4
  store i32 %v2_eac0, i32* %ip.global-to-local, align 4
  %v2_ec78 = add i32 %v3_ec70, %v2_eac0
  store i32 %v2_ec78, i32* %r3.global-to-local, align 4
  %v1_ec7c = add i32 %v2_ec78, -240
  %v2_ec7c = inttoptr i32 %v1_ec7c to i32*
  %v3_ec7c = load i32, i32* %v2_ec7c, align 4
  %v1_ec80 = urem i32 %v2_ec60, 32
  %v7_ec88 = shl i32 1, %v1_ec80
  %v8_ec88 = or i32 %v3_ec7c, %v7_ec88
  store i32 %v8_ec88, i32* %r2.global-to-local, align 4
  store i32 %v8_ec88, i32* %v2_ec7c, align 4
  br label %dec_label_pc_ec90

dec_label_pc_ec90:                                ; preds = %dec_label_pc_ec5c, %dec_label_pc_ec6c
  %v0_ec90 = load i32, i32* @fp, align 4
  %v1_ec90 = inttoptr i32 %v0_ec90 to i32*
  %v2_ec90 = load i32, i32* %v1_ec90, align 4
  store i32 %v2_ec90, i32* @r3, align 4
  %v7_ec94 = icmp eq i32 %v2_ec90, -1
  store i32 135776, i32* %r8.global-to-local, align 4
  br i1 %v7_ec94, label %dec_label_pc_eeb8, label %dec_label_pc_eca0

dec_label_pc_eca0:                                ; preds = %dec_label_pc_eeb8, %dec_label_pc_ec90, %bb42
  %v2_eca4 = load i8, i8* bitcast (i8** @global_var_21438.119 to i8*), align 4
  %v3_eca4 = zext i8 %v2_eca4 to i32
  store i32 %v3_eca4, i32* %r3.global-to-local, align 4
  %v2_eca8 = icmp eq i8 %v2_eca4, 0
  %v0_edf4 = load i32, i32* @fp, align 4
  %v1_edf4 = inttoptr i32 %v0_edf4 to i32*
  %v2_edf4 = load i32, i32* %v1_edf4, align 4
  store i32 %v2_edf4, i32* %ip.global-to-local, align 4
  %v3_edf8 = udiv i32 %v2_edf4, 32
  store i32 %v3_edf8, i32* %r3.global-to-local, align 4
  br i1 %v2_eca8, label %dec_label_pc_edf4, label %dec_label_pc_ecb0

dec_label_pc_ecb0:                                ; preds = %dec_label_pc_eca0
  %v3_ecbc = mul nuw nsw i32 %v3_edf8, 4
  %v2_ecc0 = add i32 %v3_ecbc, %v2_eac0
  store i32 %v2_ecc0, i32* %r3.global-to-local, align 4
  %v1_ecc4 = add i32 %v2_ecc0, -368
  %v2_ecc4 = inttoptr i32 %v1_ecc4 to i32*
  %v3_ecc4 = load i32, i32* %v2_ecc4, align 4
  %v1_ecc8 = urem i32 %v2_edf4, 32
  %v7_ecd0 = shl i32 1, %v1_ecc8
  %v8_ecd0 = or i32 %v3_ecc4, %v7_ecd0
  store i32 %v8_ecd0, i32* %r2.global-to-local, align 4
  store i32 %v8_ecd0, i32* %v2_ecc4, align 4
  br label %dec_label_pc_ecd8

dec_label_pc_ecd8:                                ; preds = %dec_label_pc_edf4, %dec_label_pc_ecb0
  store i32 135772, i32* %r3.global-to-local, align 4
  %v2_ecdc = load i32, i32* inttoptr (i32 135772 to i32*), align 4
  store i32 0, i32* @lr, align 4
  %v0_ece4 = load i32, i32* %ip.global-to-local, align 4
  %v5_ece8 = icmp slt i32 %v0_ece4, %v2_ecdc
  br i1 %v5_ece8, label %bb40, label %bb

bb:                                               ; preds = %dec_label_pc_ecd8
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ecd8, %bb
  %v0_ecf8 = phi i32 [ %v2_ecdc, %dec_label_pc_ecd8 ], [ %v0_ece4, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_ecf8 = add i32 %v0_ecf8, 1
  store i32 %v2_ecfc, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ec1c, i32* %r2.global-to-local, align 4
  %v5_ed14 = call i32 @function_12dd8(i32 %v1_ecf8, i32 %v2_ec18, i32 %v2_ec1c, i32 0, i32 %v2_ecfc)
  %v8_ed18 = icmp eq i32 %v5_ed14, -1
  br i1 %v8_ed18, label %dec_label_pc_ec20, label %dec_label_pc_ed20

dec_label_pc_ed20:                                ; preds = %bb40
  %v6_ed14 = trunc i32 %v5_ed14 to i16
  %v3_ed20 = icmp eq i16 %v6_ed14, 0
  br i1 %v3_ed20, label %dec_label_pc_ed28, label %dec_label_pc_ed5c

dec_label_pc_ed28:                                ; preds = %dec_label_pc_ed20
  %v5_ed34 = srem i32 %stack_var_-1436.0, 6
  %v4_ed3c = sub i32 %stack_var_-1436.0, %v5_ed34
  store i32 %v4_ed3c, i32* %r3.global-to-local, align 4
  %v2_ed44 = icmp eq i32 %v5_ed34, 0
  %v1_ed48 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_ed48, i32* @lr, align 4
  store i32 %v2_ed4c, i32* %r2.global-to-local, align 4
  %v7_ed50 = inttoptr i32 %v5_ed14 to i8*
  store i8* %v7_ed50, i8** %stack_var_-42, align 4
  br i1 %v2_ed44, label %dec_label_pc_ef28, label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed20, %dec_label_pc_ed28, %dec_label_pc_ef28
  %stack_var_-1436.1 = phi i32 [ %v1_ed48, %dec_label_pc_ef28 ], [ %v1_ed48, %dec_label_pc_ed28 ], [ %stack_var_-1436.0, %dec_label_pc_ed20 ]
  store i32 135772, i32* %r3.global-to-local, align 4
  %v2_ed60 = load i32, i32* inttoptr (i32 135772 to i32*), align 4
  %v7_ed64 = icmp eq i32 %v2_ed60, -1
  br i1 %v7_ed64, label %dec_label_pc_ed90, label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_ed5c
  %v3_ed6c = udiv i32 %v2_ed60, 32
  %v3_ed70 = mul nuw nsw i32 %v3_ed6c, 4
  store i32 %v2_eac0, i32* %ip.global-to-local, align 4
  %v2_ed78 = add i32 %v3_ed70, %v2_eac0
  store i32 %v2_ed78, i32* %r3.global-to-local, align 4
  %v1_ed7c = add i32 %v2_ed78, -240
  %v2_ed7c = inttoptr i32 %v1_ed7c to i32*
  %v3_ed7c = load i32, i32* %v2_ed7c, align 4
  %v1_ed80 = urem i32 %v2_ed60, 32
  %v6_ed84 = lshr i32 %v3_ed7c, %v1_ed80
  store i32 %v6_ed84, i32* %r2.global-to-local, align 4
  %v1_ed88 = urem i32 %v6_ed84, 2
  %v2_ed88 = icmp eq i32 %v1_ed88, 0
  br i1 %v2_ed88, label %dec_label_pc_ed90, label %dec_label_pc_efb4

dec_label_pc_ed90:                                ; preds = %dec_label_pc_ed6c, %dec_label_pc_ed5c
  %v2_ed94 = load i8, i8* bitcast (i8** @global_var_21438.119 to i8*), align 4
  %v3_ed94 = zext i8 %v2_ed94 to i32
  store i32 %v3_ed94, i32* @r4, align 4
  %v2_ed98 = icmp eq i8 %v2_ed94, 0
  %v0_ee20 = load i32, i32* @fp, align 4
  %v1_ee20 = inttoptr i32 %v0_ee20 to i32*
  %v2_ee20 = load i32, i32* %v1_ee20, align 4
  br i1 %v2_ed98, label %dec_label_pc_ee20, label %dec_label_pc_eda0

dec_label_pc_eda0:                                ; preds = %dec_label_pc_ed90
  %v3_eda4 = udiv i32 %v2_ee20, 32
  store i32 %v2_eac0, i32* %r2.global-to-local, align 4
  %v3_edac = mul nuw nsw i32 %v3_eda4, 4
  %v2_edb0 = add i32 %v3_edac, %v2_eac0
  store i32 %v2_edb0, i32* %r3.global-to-local, align 4
  %v1_edb4 = add i32 %v2_edb0, -368
  %v2_edb4 = inttoptr i32 %v1_edb4 to i32*
  %v3_edb4 = load i32, i32* %v2_edb4, align 4
  %v1_edb8 = urem i32 %v2_ee20, 32
  %v6_edbc = lshr i32 %v3_edb4, %v1_edb8
  store i32 %v6_edbc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_21438.119 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_edc8 = urem i32 %v6_edbc, 2
  %v2_edc8 = icmp eq i32 %v1_edc8, 0
  store i8 0, i8* bitcast (i8** @global_var_21438.119 to i8*), align 4
  store i32 135776, i32* @r5, align 4
  br i1 %v2_edc8, label %dec_label_pc_edd8, label %dec_label_pc_ef44

dec_label_pc_edd8:                                ; preds = %dec_label_pc_eda0
  store i32 60896, i32* @lr, align 4
  %v1_eddc = icmp ne i32 %v2_ee20, -1
  call void @__pseudo_cond_branch(i1 %v1_eddc, i32 ptrtoint (i32* @global_var_130b4.22 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ede4 = load i32, i32* @r5, align 4
  %v2_ede4 = inttoptr i32 %v1_ede4 to i32*
  store i32 -1, i32* %v2_ede4, align 4
  %v1_edec = call i32 @function_14fd4(i32 1)
  br label %dec_label_pc_ec20

dec_label_pc_edf4:                                ; preds = %dec_label_pc_eca0
  store i32 %v2_eac0, i32* %r2.global-to-local, align 4
  %v3_ee00 = mul nuw nsw i32 %v3_edf8, 4
  %v2_ee04 = add i32 %v3_ee00, %v2_eac0
  store i32 %v2_ee04, i32* %r3.global-to-local, align 4
  %v1_ee08 = add i32 %v2_ee04, -240
  %v2_ee08 = inttoptr i32 %v1_ee08 to i32*
  %v3_ee08 = load i32, i32* %v2_ee08, align 4
  %v1_ee0c = urem i32 %v2_edf4, 32
  %v7_ee14 = shl i32 1, %v1_ee0c
  %v8_ee14 = or i32 %v3_ee08, %v7_ee14
  store i32 %v8_ee14, i32* %r2.global-to-local, align 4
  store i32 %v8_ee14, i32* %v2_ee08, align 4
  br label %dec_label_pc_ecd8

dec_label_pc_ee20:                                ; preds = %dec_label_pc_ed90
  %v7_ee24 = icmp eq i32 %v2_ee20, -1
  store i32 135776, i32* @r8, align 4
  br i1 %v7_ee24, label %dec_label_pc_ec20, label %dec_label_pc_ee30

dec_label_pc_ee30:                                ; preds = %dec_label_pc_ee20
  %v3_ee30 = udiv i32 %v2_ee20, 32
  store i32 %v2_eac0, i32* %r2.global-to-local, align 4
  %v3_ee38 = mul nuw nsw i32 %v3_ee30, 4
  %v2_ee3c = add i32 %v3_ee38, %v2_eac0
  store i32 %v2_ee3c, i32* %r3.global-to-local, align 4
  %v1_ee40 = add i32 %v2_ee3c, -240
  %v2_ee40 = inttoptr i32 %v1_ee40 to i32*
  %v3_ee40 = load i32, i32* %v2_ee40, align 4
  %v1_ee44 = urem i32 %v2_ee20, 32
  %v6_ee48 = lshr i32 %v3_ee40, %v1_ee44
  store i32 %v6_ee48, i32* %r2.global-to-local, align 4
  %v1_ee4c = urem i32 %v6_ee48, 2
  %v2_ee4c = icmp eq i32 %v1_ee4c, 0
  br i1 %v2_ee4c, label %dec_label_pc_ec20, label %dec_label_pc_ee54

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee30
  %v6_ee58 = inttoptr i32 %v3_ed94 to i8*
  store i8* %v6_ee58, i8** %stack_var_-42, align 4
  store i32 %v2_ef30, i32* @sl, align 4
  %v0_ee5c = call i32 @function_134dc()
  %v0_ee60 = load i32, i32* @r4, align 4
  %v2_ee60 = inttoptr i32 %v0_ee5c to i32*
  store i32 %v0_ee60, i32* %v2_ee60, align 4
  store i32 %v0_ee5c, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_ee70 = load i32, i32* @r8, align 4
  %v1_ee70 = inttoptr i32 %v0_ee70 to i32*
  %v2_ee70 = load i32, i32* %v1_ee70, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_ee7c = call i32 @function_13794(i32 %v2_ee70, i32 %v2_ef30, i32 2, i32 16386)
  %v7_ee80 = icmp eq i32 %v4_ee7c, -1
  br i1 %v7_ee80, label %dec_label_pc_f060, label %dec_label_pc_ee88

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee54
  %v2_ee88 = icmp eq i32 %v4_ee7c, 0
  br i1 %v2_ee88, label %dec_label_pc_f070, label %dec_label_pc_ee90

dec_label_pc_ee90:                                ; preds = %dec_label_pc_ee88
  store i32 %v2_ed4c, i32* %ip.global-to-local, align 4
  %v3_ee94 = load i8*, i8** %stack_var_-42, align 4
  %v4_ee94 = ptrtoint i8* %v3_ee94 to i32
  store i32 %v4_ee94, i32* %r3.global-to-local, align 4
  %v2_ee98 = icmp eq i8* %v3_ee94, null
  br i1 %v2_ee98, label %dec_label_pc_eea0, label %dec_label_pc_f0a0

dec_label_pc_eea0:                                ; preds = %dec_label_pc_ee90
  %v0_eea0 = load i32, i32* @r8, align 4
  %v1_eea0 = inttoptr i32 %v0_eea0 to i32*
  %v2_eea0 = load i32, i32* %v1_eea0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_eeac = add i32 %v4_ee94, 16384
  store i32 %v1_eeac, i32* %r3.global-to-local, align 4
  %v4_eeb0 = call i32 @function_13794(i32 %v2_eea0, i32 %v2_ef30, i32 2, i32 %v1_eeac)
  br label %dec_label_pc_ec20

dec_label_pc_eeb8:                                ; preds = %dec_label_pc_ec90
  %v0_eec0 = load i32, i32* @r4, align 4
  store i32 %v0_eec0, i32* %r2.global-to-local, align 4
  %v3_eec4 = call i32 @function_138c4(i32 2, i32 1, i32 %v0_eec0)
  %v7_eec8 = icmp eq i32 %v3_eec4, -1
  store i32 %v3_eec4, i32* @r5, align 4
  %v1_eed0 = load i32, i32* %r8.global-to-local, align 4
  %v2_eed0 = inttoptr i32 %v1_eed0 to i32*
  store i32 %v3_eec4, i32* %v2_eed0, align 4
  br i1 %v7_eec8, label %dec_label_pc_eca0, label %dec_label_pc_eed8

dec_label_pc_eed8:                                ; preds = %dec_label_pc_eeb8
  %v0_eed8 = load i32, i32* @r4, align 4
  store i32 %v0_eed8, i32* %r2.global-to-local, align 4
  %v2_eee0 = call i32 @function_12ee8(i32 %v3_eec4, i32 3)
  %v1_eee8 = or i32 %v2_eee0, 2048
  store i32 %v1_eee8, i32* %r2.global-to-local, align 4
  %v0_eeec = load i32, i32* @r5, align 4
  %v2_eef0 = call i32 @function_12ee8(i32 %v0_eeec, i32 4)
  %v2_eef8 = load i32, i32* inttoptr (i32 135780 to i32*), align 4
  store i32 %v2_eef8, i32* %r3.global-to-local, align 4
  %v2_eefc = icmp eq i32 %v2_eef8, 0
  br i1 %v2_eefc, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_eed8
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_eed8, %bb41
  %v2_ef04 = xor i1 %v2_eefc, true
  call void @__pseudo_cond_branch(i1 %v2_ef04, i32 %v2_eef8)
  store i32 ptrtoint (i8** @global_var_21438.119 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ef10 = load i32, i32* %r8.global-to-local, align 4
  %v1_ef10 = inttoptr i32 %v0_ef10 to i32*
  %v2_ef10 = load i32, i32* %v1_ef10, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_21438.119 to i8*), align 4
  %v4_ef20 = call i32 @function_136ac(i32 %v2_ef10, i32 ptrtoint (i16** @global_var_234bc.100 to i32), i32 16)
  br label %dec_label_pc_eca0

dec_label_pc_ef28:                                ; preds = %dec_label_pc_ed28
  %v0_ef2c = load i32, i32* @fp, align 4
  %v1_ef2c = inttoptr i32 %v0_ef2c to i32*
  %v2_ef2c = load i32, i32* %v1_ef2c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_ef3c = call i32 @function_13808(i32 %v2_ef2c, i32 %v2_ef30, i32 2, i32 16384)
  br label %dec_label_pc_ed5c

dec_label_pc_ef44:                                ; preds = %dec_label_pc_eda0
  store i32 4, i32* @r4, align 4
  store i32 %v2_ef4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_ef28, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_ef68 = call i32 @function_1371c(i32 %v2_ee20, i32 1, i32 4, i32 %v2_ef4c, i32 %v2_ef28)
  %v3_ef6c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_ef6c, i32* %r3.global-to-local, align 4
  %v2_ef70 = icmp eq i32 %v3_ef6c, 0
  br i1 %v2_ef70, label %dec_label_pc_effc, label %dec_label_pc_ef78

dec_label_pc_ef78:                                ; preds = %dec_label_pc_ef44
  %v0_ef78 = load i32, i32* @r5, align 4
  %v1_ef78 = inttoptr i32 %v0_ef78 to i32*
  %v2_ef78 = load i32, i32* %v1_ef78, align 4
  %v1_ef7c = call i32 @function_130b4(i32 %v2_ef78)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ef84 = load i32, i32* @r5, align 4
  %v2_ef84 = inttoptr i32 %v1_ef84 to i32*
  store i32 -1, i32* %v2_ef84, align 4
  %v0_ef88 = call i32 @function_f190()
  %v3_ef90 = zext i32 %v0_ef88 to i64
  %v4_ef90 = mul nuw i64 %v3_ef90, 3435973837
  %v7_ef90 = trunc i64 %v4_ef90 to i32
  store i32 %v7_ef90, i32* %ip.global-to-local, align 4
  %v3_ef941 = udiv i64 %v4_ef90, 34359738368
  %v3_ef983 = mul nuw nsw i64 %v3_ef941, 8
  %v3_ef98 = trunc i64 %v3_ef983 to i32
  store i32 %v3_ef98, i32* %r2.global-to-local, align 4
  %v2_ef9c5 = mul nuw nsw i64 %v3_ef941, 2
  %v2_ef9c = trunc i64 %v2_ef9c5 to i32
  %v2_efa0 = add i32 %v3_ef98, %v2_ef9c
  store i32 %v2_efa0, i32* %r3.global-to-local, align 4
  %v2_efa4 = sub i32 %v0_ef88, %v2_efa0
  %v1_efa8 = add i32 %v2_efa4, 1
  %v1_efac = call i32 @function_14fd4(i32 %v1_efa8)
  br label %dec_label_pc_ec20

dec_label_pc_efb4:                                ; preds = %dec_label_pc_ed6c
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_ef4c, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_efc8 = call i32 @function_1363c(i32 %v2_ed60, i32 %v2_efc0, i32 %v2_ef4c, i32 16, i32 16)
  %v1_efcc = call i32 @function_f324(i32 %v5_efc8)
  %v1_efd0 = call i32 @function_de4c(i32 %v1_efcc)
  %v2_efe0 = call i32 @function_12e80(i32 %v1_efdc, i32 9)
  store i32 ptrtoint (i32* @global_var_21434.108 to i32), i32* %r3.global-to-local, align 4
  %v2_efe8 = load i32, i32* @global_var_21434.108, align 4
  %v2_efec = icmp eq i32 %v2_efe8, 0
  br i1 %v2_efec, label %dec_label_pc_eff4, label %dec_label_pc_f094

dec_label_pc_eff4:                                ; preds = %dec_label_pc_efb4, %dec_label_pc_f094
  %v1_eff8 = call i32 @function_14f1c(i32 0)
  br label %dec_label_pc_effc

dec_label_pc_effc:                                ; preds = %dec_label_pc_ef44, %dec_label_pc_eff4
  %v2_f000 = call i32 @function_12450(i8* %v1_f000)
  %sext = mul i32 %v2_f000, 16777216
  %v1_f004 = sdiv i32 %sext, 16777216
  %v7_f004 = inttoptr i32 %v1_f004 to i8*
  store i8* %v7_f004, i8** %stack_var_-42, align 4
  %v0_f008 = call i32 @function_1270c()
  %v0_f010 = load i32, i32* @r4, align 4
  store i32 %v0_f010, i32* %r2.global-to-local, align 4
  store i32 %v0_f008, i32* @global_var_234b4.78, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f020 = load i32, i32* @r5, align 4
  %v1_f020 = inttoptr i32 %v0_f020 to i32*
  %v2_f020 = load i32, i32* %v1_f020, align 4
  %v4_f024 = call i32 @function_13808(i32 %v2_f020, i32 ptrtoint (i32* @global_var_182d0.124 to i32), i32 %v0_f010, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_f030 = load i32, i32* @r5, align 4
  %v1_f030 = inttoptr i32 %v0_f030 to i32*
  %v2_f030 = load i32, i32* %v1_f030, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f03c = call i32 @function_13808(i32 %v2_f030, i32 %v2_ef30, i32 1, i32 16384)
  %v3_f040 = load i8*, i8** %stack_var_-42, align 4
  %v4_f040 = ptrtoint i8* %v3_f040 to i32
  store i32 %v4_f040, i32* %r2.global-to-local, align 4
  %v3_f044 = icmp eq i8* %v3_f040, null
  br i1 %v3_f044, label %dec_label_pc_ec20, label %dec_label_pc_f04c

dec_label_pc_f04c:                                ; preds = %dec_label_pc_effc
  %v0_f04c = load i32, i32* @r5, align 4
  %v1_f04c = inttoptr i32 %v0_f04c to i32*
  %v2_f04c = load i32, i32* %v1_f04c, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f058 = call i32 @function_13808(i32 %v2_f04c, i32 %v2_ea5c, i32 %v4_f040, i32 16384)
  br label %dec_label_pc_ec20

dec_label_pc_f060:                                ; preds = %dec_label_pc_f0d0, %dec_label_pc_ee54
  %v0_f060 = load i32, i32* @r5, align 4
  %v1_f060 = inttoptr i32 %v0_f060 to i32*
  %v2_f060 = load i32, i32* %v1_f060, align 4
  store i32 %v2_f060, i32* %r3.global-to-local, align 4
  %v7_f064 = icmp eq i32 %v2_f060, 4
  br i1 %v7_f064, label %dec_label_pc_ec20, label %bb43

bb43:                                             ; preds = %dec_label_pc_f060
  %v8_f068 = icmp eq i32 %v2_f060, 11
  br i1 %v8_f068, label %dec_label_pc_ec20, label %dec_label_pc_f070

dec_label_pc_f070:                                ; preds = %dec_label_pc_f0f4, %bb43, %dec_label_pc_ee88
  %v0_f070 = load i32, i32* @fp, align 4
  %v1_f070 = inttoptr i32 %v0_f070 to i32*
  %v2_f070 = load i32, i32* %v1_f070, align 4
  store i32 61564, i32* @lr, align 4
  %v1_f078 = icmp ne i32 %v2_f070, -1
  call void @__pseudo_cond_branch(i1 %v1_f078, i32 ptrtoint (i32* @global_var_130b4.22 to i32))
  store i32 135776, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* inttoptr (i32 135776 to i32*), align 32
  %v1_f08c = call i32 @function_14fd4(i32 1)
  br label %dec_label_pc_ec20

dec_label_pc_f094:                                ; preds = %dec_label_pc_efb4
  %v2_f098 = call i32 @function_12e80(i32 %v2_efe8, i32 9)
  br label %dec_label_pc_eff4

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_ee90
  %v3_f0a0 = udiv i32 %v4_ee94, 256
  %v1_f0a4 = urem i32 %v4_ee94, 256
  store i32 %v1_f0a4, i32* %r3.global-to-local, align 4
  %v4_f0a8 = mul nuw nsw i32 %v1_f0a4, 256
  %v5_f0a8 = or i32 %v4_f0a8, %v3_f0a0
  %v6_f0a8 = trunc i32 %v5_f0a8 to i16
  store i32 %v5_f0a8, i32* %r2.global-to-local, align 4
  %v7_f0b4 = inttoptr i32 %v5_f0a8 to i8*
  store i8* %v7_f0b4, i8** %stack_var_-42, align 4
  %tmp44 = icmp ult i16 %v6_f0a8, 1025
  br i1 %tmp44, label %dec_label_pc_f0d0, label %dec_label_pc_f0bc

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_f0a0
  %v0_f0bc = load i32, i32* @r8, align 4
  %v1_f0bc = inttoptr i32 %v0_f0bc to i32*
  %v2_f0bc = load i32, i32* %v1_f0bc, align 4
  %v1_f0c0 = call i32 @function_130b4(i32 %v2_f0bc)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f0c8 = load i32, i32* @r8, align 4
  %v2_f0c8 = inttoptr i32 %v1_f0c8 to i32*
  store i32 -1, i32* %v2_f0c8, align 4
  br label %dec_label_pc_ec20

dec_label_pc_f0d0:                                ; preds = %dec_label_pc_f0a0
  %v0_f0d0 = load i32, i32* @r4, align 4
  %v1_f0d0 = load i32, i32* @r5, align 4
  %v2_f0d0 = inttoptr i32 %v1_f0d0 to i32*
  store i32 %v0_f0d0, i32* %v2_f0d0, align 4
  store i32 %v2_f0d8, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_f0e0 = load i32, i32* @r8, align 4
  %v1_f0e0 = inttoptr i32 %v0_f0e0 to i32*
  %v2_f0e0 = load i32, i32* %v1_f0e0, align 4
  %v7_f0e8 = call i32 @function_13794(i32 %v2_f0e0, i32 %v2_f0d8, i32 %v5_f0a8, i32 16386)
  %v7_f0ec = icmp eq i32 %v7_f0e8, -1
  br i1 %v7_f0ec, label %dec_label_pc_f060, label %dec_label_pc_f0f4

dec_label_pc_f0f4:                                ; preds = %dec_label_pc_f0d0
  %v2_f0f4 = icmp eq i32 %v7_f0e8, 0
  br i1 %v2_f0f4, label %dec_label_pc_f070, label %dec_label_pc_f0fc

dec_label_pc_f0fc:                                ; preds = %dec_label_pc_f0f4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f108 = load i32, i32* @r8, align 4
  %v1_f108 = inttoptr i32 %v0_f108 to i32*
  %v2_f108 = load i32, i32* %v1_f108, align 4
  %v4_f10c = call i32 @function_13794(i32 %v2_f108, i32 %v2_ef30, i32 2, i32 16384)
  %v3_f114 = load i8*, i8** %stack_var_-42, align 4
  %v4_f114 = ptrtoint i8* %v3_f114 to i32
  %v3_f118 = udiv i32 %v4_f114, 256
  %v1_f11c = urem i32 %v4_f114, 256
  store i32 %v1_f11c, i32* %r3.global-to-local, align 4
  %v4_f120 = mul nuw nsw i32 %v1_f11c, 256
  %v5_f120 = or i32 %v4_f120, %v3_f118
  store i32 %v5_f120, i32* %ip.global-to-local, align 4
  store i32 %v2_ed4c, i32* @lr, align 4
  store i32 %v5_f120, i32* %r2.global-to-local, align 4
  %v0_f130 = load i32, i32* @r8, align 4
  %v1_f130 = inttoptr i32 %v0_f130 to i32*
  %v2_f130 = load i32, i32* %v1_f130, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f138 = inttoptr i32 %v5_f120 to i8*
  store i8* %v6_f138, i8** %stack_var_-42, align 4
  %v6_f13c = call i32 @function_13794(i32 %v2_f130, i32 %v2_f0d8, i32 %v5_f120, i32 16384)
  store i32 %v2_ed4c, i32* %r2.global-to-local, align 4
  %v3_f144 = load i8*, i8** %stack_var_-42, align 4
  %v3_f148 = icmp eq i8* %v3_f144, null
  br i1 %v3_f148, label %dec_label_pc_ec20, label %dec_label_pc_f150

dec_label_pc_f150:                                ; preds = %dec_label_pc_f0fc
  %v4_f144 = ptrtoint i8* %v3_f144 to i32
  %v5_f154 = call i32 @function_a058(i32* nonnull %stack_var_-1432, i32 %v4_f144, i32 %v2_ed4c)
  br label %dec_label_pc_ec20

; uselistorder directives
  uselistorder i8* %v3_f144, { 1, 0 }
  uselistorder i32 %v5_f120, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f114, { 1, 0 }
  uselistorder i32 %v7_f0e8, { 1, 0 }
  uselistorder i32 %v5_f0a8, { 1, 0, 3, 2 }
  uselistorder i32 %v3_eec4, { 3, 2, 1, 0 }
  uselistorder i32 %v4_ee94, { 1, 0, 2, 3 }
  uselistorder i32 %v4_ee7c, { 1, 0 }
  uselistorder i32 %v2_ee20, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_ed60, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ed48, { 1, 0, 2 }
  uselistorder i32 %v5_ed14, { 1, 2, 0 }
  uselistorder i32 %v2_ec60, { 2, 1, 0 }
  uselistorder i32 %v1_ec50, { 1, 2, 0 }
  uselistorder i32 %v1_ec34, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_ef4c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ef30, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_ef28, { 1, 0 }
  uselistorder i32 %v2_ed4c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_ec1c, { 1, 0, 2 }
  uselistorder i32 %v2_eac0, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_eaac, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_ea1c, { 1, 0 }
  uselistorder i32 %v2_e9cc, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 30, 34, 32, 33, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_21434.108, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 (i32)* @function_14fd4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_21438.119 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_21438.119 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* inttoptr (i32 135772 to i32*), { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @function_e8cc, { 1, 0 }
  uselistorder i32 (i32)* @function_e3f0, { 1, 0 }
  uselistorder i32 (i32)* @function_a2f0, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_12478, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 20, 23, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 59, 60, 61, 33, 53, 54, 55, 56, 57, 58, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32, i32)* @function_f254, { 10, 9, 8, 7, 6, 1, 0, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @function_e768, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_13970, { 1, 0 }
  uselistorder label %dec_label_pc_effc, { 1, 0 }
  uselistorder label %dec_label_pc_eff4, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_ed5c, { 2, 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_eca0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ec90, { 1, 0 }
  uselistorder label %dec_label_pc_ec20, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_ea80, { 2, 0, 1 }
}

define i32 @function_f174(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f174:
  %cpsr_c.global-to-local = alloca i1, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v0_f174 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f174, label %bb, label %dec_label_pc_f174..thread1_crit_edge

dec_label_pc_f174..thread1_crit_edge:             ; preds = %dec_label_pc_f174
  %v0_f180.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %.thread1

bb:                                               ; preds = %dec_label_pc_f174
  %v2_f17c = load i32, i32* @r8, align 4
  %v3_f17c = load i32, i32* @r4, align 4
  %v4_f17c = add i32 %v3_f17c, -1
  %v5_f17c = shl i32 1, %v4_f17c
  %v6_f17c = and i32 %v5_f17c, %v2_f17c
  %v7_f17c = icmp ne i32 %v6_f17c, 0
  store i1 %v7_f17c, i1* %cpsr_c.global-to-local, align 1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f174..thread1_crit_edge, %bb
  %v0_f180 = phi i1 [ %v0_f180.pre, %dec_label_pc_f174..thread1_crit_edge ], [ %v7_f17c, %bb ]
  call void @__pseudo_cond_branch(i1 %v0_f180, i32 -22307788)
  %v0_f188 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f188, label %bb4, label %.thread2

bb4:                                              ; preds = %.thread1
  %v2_f188 = load i32, i32* @r4, align 4
  %v4_f188 = add i32 %v2_f188, -1
  %v5_f188 = shl i32 1, %v4_f188
  %v6_f188 = and i32 %v5_f188, %v2_f188
  %v7_f188 = icmp ne i32 %v6_f188, 0
  store i1 %v7_f188, i1* %cpsr_c.global-to-local, align 1
  br label %.thread2

.thread2:                                         ; preds = %.thread1, %bb4
  ret i32 %arg1

; uselistorder directives
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_f190() local_unnamed_addr {
dec_label_pc_f190:
  %v2_f19c = load i32, i32* @global_var_2143c.126, align 4
  %v2_f1a0 = load i32, i32* @global_var_21448.128, align 4
  %v4_f1ac = mul i32 %v2_f19c, 2048
  %v5_f1ac = xor i32 %v4_f1ac, %v2_f19c
  %v4_f1b0 = udiv i32 %v2_f1a0, 524288
  %v5_f1b0 = xor i32 %v4_f1b0, %v2_f1a0
  %v2_f1b4 = load i32, i32* @global_var_21440.130, align 4
  %v2_f1b8 = load i32, i32* @global_var_21444.132, align 4
  %v2_f1bc = xor i32 %v5_f1b0, %v5_f1ac
  %v4_f1c0 = udiv i32 %v5_f1ac, 256
  %v5_f1c0 = xor i32 %v2_f1bc, %v4_f1c0
  store i32 %v2_f1b4, i32* @global_var_2143c.126, align 4
  store i32 %v2_f1b8, i32* @global_var_21440.130, align 4
  store i32 %v2_f1a0, i32* @global_var_21444.132, align 4
  store i32 %v5_f1c0, i32* @global_var_21448.128, align 4
  ret i32 %v5_f1c0

; uselistorder directives
  uselistorder i32 %v2_f1a0, { 2, 1, 0 }
  uselistorder i32 %v2_f19c, { 1, 0 }
}

define i32 @function_f1ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_f1ec:
  %v2_f1f8 = call i32 @function_12d34(i32* null)
  store i32 %v2_f1f8, i32* @r0, align 4
  store i32 %v2_f1f8, i32* @global_var_2143c.126, align 4
  %v0_f204 = call i32 @function_12d20()
  store i32 %v0_f204, i32* @r0, align 4
  %v0_f20c = call i32 @function_12cac()
  %v2_f214 = xor i32 %v0_f204, %v0_f20c
  store i32 %v2_f214, i32* @global_var_21440.130, align 4
  %v1_f21c = call i32 @function_134f8(i32 %v2_f214)
  %v2_f220 = load i32, i32* @global_var_21440.130, align 4
  %v2_f22c = xor i32 %v2_f220, %v1_f21c
  store i32 %v2_f22c, i32* @global_var_21448.128, align 4
  store i32 %v1_f21c, i32* @global_var_21444.132, align 4
  ret i32 %v1_f21c

; uselistorder directives
  uselistorder i32 %v1_f21c, { 1, 2, 0 }
}

define i32 @function_f254(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f254:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_f254 = load i32, i32* @r4, align 4
  %v6_f254 = load i32, i32* @r5, align 4
  %v9_f254 = load i32, i32* @r6, align 4
  %v12_f254 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f268 = call i32 @function_11a84(i32 57)
  %v3_f274 = call i32 @function_119c0(i32 57, i32* null)
  store i32 %v3_f274, i32* @r1, align 4
  %v2_f280 = bitcast i32* %stack_var_-72 to i8*
  %v3_f280 = call i32 @function_135f0(i8* %v2_f280, i32 %v3_f274)
  %v2_f284 = icmp eq i32 %arg2, 0
  br i1 %v2_f284, label %dec_label_pc_f300, label %dec_label_pc_f28c

dec_label_pc_f28c:                                ; preds = %dec_label_pc_f254
  store i32 ptrtoint (i32* @global_var_2143c.126 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21440.130 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21444.132 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_21448.128 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_f2e4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f2a0

dec_label_pc_f2a0:                                ; preds = %dec_label_pc_f2a0.dec_label_pc_f2a0_crit_edge, %dec_label_pc_f28c
  %v1_f2c4 = phi i32 [ %v1_f2c4.pre, %dec_label_pc_f2a0.dec_label_pc_f2a0_crit_edge ], [ ptrtoint (i32* @global_var_2143c.126 to i32), %dec_label_pc_f28c ]
  %v2_f2a0 = load i32, i32* @global_var_21448.128, align 4
  store i32 %v2_f2a0, i32* %r2.global-to-local, align 4
  %v2_f2a4 = load i32, i32* @global_var_2143c.126, align 4
  %v4_f2a8 = udiv i32 %v2_f2a0, 524288
  %v5_f2a8 = xor i32 %v4_f2a8, %v2_f2a0
  %v4_f2ac = mul i32 %v2_f2a4, 2048
  %v5_f2ac = xor i32 %v4_f2ac, %v2_f2a4
  %v2_f2b0 = xor i32 %v5_f2a8, %v5_f2ac
  %v2_f2b4 = load i32, i32* @global_var_21440.130, align 4
  %v2_f2b8 = load i32, i32* @global_var_21444.132, align 4
  store i32 %v2_f2b8, i32* %ip.global-to-local, align 4
  %v4_f2bc = udiv i32 %v5_f2ac, 256
  %v5_f2bc = xor i32 %v2_f2b0, %v4_f2bc
  store i32 %v5_f2bc, i32* @r4, align 4
  %v2_f2c4 = inttoptr i32 %v1_f2c4 to i32*
  store i32 %v2_f2b4, i32* %v2_f2c4, align 4
  %v0_f2c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_f2c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_f2c8 = inttoptr i32 %v1_f2c8 to i32*
  store i32 %v0_f2c8, i32* %v2_f2c8, align 4
  %v0_f2cc = load i32, i32* %r2.global-to-local, align 4
  %v1_f2cc = load i32, i32* @r7, align 4
  %v2_f2cc = inttoptr i32 %v1_f2cc to i32*
  store i32 %v0_f2cc, i32* %v2_f2cc, align 4
  %v0_f2d0 = load i32, i32* @r4, align 4
  %v1_f2d0 = load i32, i32* @r6, align 4
  %v2_f2d0 = inttoptr i32 %v1_f2d0 to i32*
  store i32 %v0_f2d0, i32* %v2_f2d0, align 4
  %v2_f2d4 = call i32 @function_12450(i8* %v2_f280)
  %v0_f2dc = load i32, i32* @r4, align 4
  %v2_f2e0 = call i32 @function_12b3c(i32 %v0_f2dc, i32 %v2_f2d4)
  %v2_f2e8 = add i32 %v2_f2d4, %v2_f2e4
  %v1_f2ec = add i32 %v2_f2e8, -32
  %v2_f2ec = inttoptr i32 %v1_f2ec to i8*
  %v3_f2ec = load i8, i8* %v2_f2ec, align 1
  %v2_f2f0 = load i32, i32* @r5, align 4
  %v3_f2f0 = load i32, i32* %fp.global-to-local, align 4
  %v4_f2f0 = add i32 %v3_f2f0, %v2_f2f0
  %v5_f2f0 = inttoptr i32 %v4_f2f0 to i8*
  store i8 %v3_f2ec, i8* %v5_f2f0, align 1
  %v0_f2f4 = load i32, i32* @r5, align 4
  %v1_f2f4 = add i32 %v0_f2f4, 1
  store i32 %v1_f2f4, i32* @r5, align 4
  %v1_f2f8 = load i32, i32* %sb.global-to-local, align 4
  %v9_f2f8 = icmp eq i32 %v1_f2f4, %v1_f2f8
  br i1 %v9_f2f8, label %dec_label_pc_f300, label %dec_label_pc_f2a0.dec_label_pc_f2a0_crit_edge

dec_label_pc_f2a0.dec_label_pc_f2a0_crit_edge:    ; preds = %dec_label_pc_f2a0
  %v1_f2c4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f2a0

dec_label_pc_f300:                                ; preds = %dec_label_pc_f2a0, %dec_label_pc_f254
  %v1_f304 = call i32 @function_119e4(i32 57)
  store i32 %v3_f254, i32* @r4, align 4
  store i32 %v6_f254, i32* @r5, align 4
  store i32 %v9_f254, i32* @r6, align 4
  store i32 %v12_f254, i32* @r7, align 4
  ret i32 %v1_f304

; uselistorder directives
  uselistorder i32 %v2_f2a4, { 1, 0 }
  uselistorder i32 %v2_f2a0, { 1, 0, 2 }
  uselistorder i32* @global_var_21448.128, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_21444.132, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_21440.130, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_2143c.126, { 2, 4, 1, 0, 3 }
}

define i32 @function_f324(i32 %arg1) local_unnamed_addr {
dec_label_pc_f324:
  %v2_f330 = load i32, i32* @global_var_234d4.142, align 4
  %v2_f338 = call i32 @function_12e80(i32 %v2_f330, i32 9)
  ret i32 %v2_f338
}

define i32 @function_f34c() local_unnamed_addr {
dec_label_pc_f34c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f34c = load i32, i32* @r4, align 4
  store i32 %v3_f34c, i32* %stack_var_-16, align 4
  %v12_f34c = load i32, i32* @lr, align 4
  %v0_f350 = load i32, i32* @r0, align 4
  store i32 %v0_f350, i32* %r5.global-to-local, align 4
  %v1_f354 = add i32 %v0_f350, 4
  %v2_f354 = inttoptr i32 %v1_f354 to i32*
  %v3_f354 = load i32, i32* %v2_f354, align 4
  store i32 %v3_f354, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 62328, i32* @lr, align 4
  %v1_f374 = icmp ne i32 %v3_f354, -1
  call void @__pseudo_cond_branch(i1 %v1_f374, i32 ptrtoint (i32* @global_var_130b4.22 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f384 = call i32 @function_138c4(i32 2, i32 1, i32 0)
  store i32 %v3_f384, i32* %r0.global-to-local, align 4
  %v7_f388 = icmp eq i32 %v3_f384, -1
  %v1_f38c = load i32, i32* %r5.global-to-local, align 4
  %v2_f38c = add i32 %v1_f38c, 4
  %v3_f38c = inttoptr i32 %v2_f38c to i32*
  store i32 %v3_f384, i32* %v3_f38c, align 4
  br i1 %v7_f388, label %dec_label_pc_f34c.dec_label_pc_f404_crit_edge, label %dec_label_pc_f394

dec_label_pc_f34c.dec_label_pc_f404_crit_edge:    ; preds = %dec_label_pc_f34c
  %v1_f40c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f404

dec_label_pc_f394:                                ; preds = %dec_label_pc_f34c
  %v2_f358 = ptrtoint i32* %stack_var_-32 to i32
  %v0_f394 = load i32, i32* %r5.global-to-local, align 4
  %v1_f394 = add i32 %v0_f394, 28
  store i32 %v1_f394, i32* %r0.global-to-local, align 4
  %v0_f398 = load i32, i32* %r6.global-to-local, align 4
  %v2_f398 = add i32 %v0_f394, 24
  %v3_f398 = inttoptr i32 %v2_f398 to i32*
  store i32 %v0_f398, i32* %v3_f398, align 4
  %v2_f3a0 = call i32 @function_124e4(i32 %v1_f394, i32 256)
  store i32 %v2_f3a0, i32* %r0.global-to-local, align 4
  %v0_f3a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_f3a4 = add i32 %v0_f3a4, 4
  %v2_f3a4 = inttoptr i32 %v1_f3a4 to i32*
  %v3_f3a4 = load i32, i32* %v2_f3a4, align 4
  store i32 %v3_f3a4, i32* %r4.global-to-local, align 4
  %v0_f3a8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_f3a8, i32* %r2.global-to-local, align 4
  store i32 %v3_f3a4, i32* %r0.global-to-local, align 4
  %v2_f3b4 = call i32 @function_12ee8(i32 %v3_f3a4, i32 3)
  %v1_f3bc = or i32 %v2_f3b4, 2048
  store i32 %v1_f3bc, i32* %r2.global-to-local, align 4
  %v0_f3c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f3c0, i32* %r0.global-to-local, align 4
  %v2_f3c4 = call i32 @function_12ee8(i32 %v0_f3c0, i32 4)
  store i32 %v2_f3c4, i32* %r0.global-to-local, align 4
  %v2_f3cc = load i32, i32* @global_var_21480.144, align 4
  store i32 %v2_f3cc, i32* %r2.global-to-local, align 4
  %v1_f3d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_f3d4 = add i32 %v1_f3d4, 12
  %v3_f3d4 = inttoptr i32 %v2_f3d4 to i32*
  store i32 1, i32* %v3_f3d4, align 4
  store i32 2, i32* @r3, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_f3e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f3e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_f3e0 = add i32 %v1_f3e0, 8
  %v3_f3e0 = inttoptr i32 %v2_f3e0 to i32*
  store i32 %v0_f3e0, i32* %v3_f3e0, align 4
  %v0_f3e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_f3e4 = add i32 %v0_f3e4, 16
  %v2_f3e4 = inttoptr i32 %v1_f3e4 to i32*
  %v3_f3e4 = load i32, i32* %v2_f3e4, align 4
  store i32 %v3_f3e4, i32* @ip, align 4
  %v1_f3e8 = add i32 %v0_f3e4, 4
  %v2_f3e8 = inttoptr i32 %v1_f3e8 to i32*
  %v3_f3e8 = load i32, i32* %v2_f3e8, align 4
  store i32 %v3_f3e8, i32* %r0.global-to-local, align 4
  %v1_f3ec = add i32 %v0_f3e4, 20
  %v2_f3ec = inttoptr i32 %v1_f3ec to i16*
  %v3_f3ec = load i16, i16* %v2_f3ec, align 2
  %v4_f3ec = zext i16 %v3_f3ec to i32
  store i32 %v4_f3ec, i32* %r5.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f400 = call i32 @function_136ac(i32 %v3_f3e8, i32 %v2_f358, i32 16)
  store i32 %v3_f400, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f404

dec_label_pc_f404:                                ; preds = %dec_label_pc_f34c.dec_label_pc_f404_crit_edge, %dec_label_pc_f394
  %v1_f40c = phi i32 [ %v1_f40c.pre, %dec_label_pc_f34c.dec_label_pc_f404_crit_edge ], [ %v3_f400, %dec_label_pc_f394 ]
  %v2_f408 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f408, i32* @r4, align 4
  store i32 %v12_f34c, i32* @lr, align 4
  ret i32 %v1_f40c

; uselistorder directives
  uselistorder i32 %v3_f384, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @function_124e4, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f404, { 1, 0 }
}

define i32 @function_f414(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f414:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_f414 = load i32, i32* @r4, align 4
  %v6_f414 = load i32, i32* @r5, align 4
  %v9_f414 = load i32, i32* @r6, align 4
  %v12_f414 = load i32, i32* @r7, align 4
  %v15_f414 = load i32, i32* @r8, align 4
  %v18_f414 = load i32, i32* @sb, align 4
  %v21_f414 = load i32, i32* @sl, align 4
  %v24_f414 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_2144c.146 to i32), i32* @fp, align 4
  %v2_f41c = load i32, i32* @global_var_2144c.146, align 4
  store i32 ptrtoint (i32* @global_var_21478.148 to i32), i32* @sl, align 4
  %v1_f428 = add i32 %v2_f41c, 1
  store i32 %v1_f428, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_f434 = load i32, i32* @global_var_21478.148, align 4
  store i32 %v2_f434, i32* %r0.global-to-local, align 4
  %v3_f438 = mul i32 %v1_f428, 16
  store i32 %v3_f438, i32* %r1.global-to-local, align 4
  %v4_f440 = inttoptr i32 %v2_f434 to i32*
  %v5_f440 = call i32 @function_14560(i32* %v4_f440, i32 %v3_f438, i32 %arg3, i32 %v1_f428)
  %v2_f444 = load i32, i32* @global_var_2144c.146, align 4
  store i32 %v2_f444, i32* %r2.global-to-local, align 4
  store i32 %v5_f440, i32* @r8, align 4
  %v0_f44c = load i32, i32* @r5, align 4
  store i32 %v0_f44c, i32* %r0.global-to-local, align 4
  %v1_f454 = load i32, i32* @sl, align 4
  %v2_f454 = inttoptr i32 %v1_f454 to i32*
  store i32 %v5_f440, i32* %v2_f454, align 4
  %v1_f458 = inttoptr i32 %v0_f44c to i8*
  %v2_f458 = call i32 @function_12450(i8* %v1_f458)
  %sext = mul i32 %v2_f458, 16777216
  %v1_f45c = sdiv i32 %sext, 16777216
  %v2_f45c = add nsw i32 %v1_f45c, 1
  store i32 %v2_f45c, i32* @r4, align 4
  store i32 %v1_f45c, i32* @r7, align 4
  store i32 %v2_f45c, i32* @r0, align 4
  %v0_f468 = call i32 @function_13b0c()
  store i32 %v0_f468, i32* %r0.global-to-local, align 4
  %v0_f46c = load i32, i32* @r5, align 4
  store i32 %v0_f46c, i32* %r1.global-to-local, align 4
  %v0_f470 = load i32, i32* @r4, align 4
  store i32 %v0_f470, i32* %r2.global-to-local, align 4
  store i32 %v0_f468, i32* %r6.global-to-local, align 4
  %v3_f478 = call i32 @function_124c0(i32 %v0_f468, i32 %v0_f46c, i32 %v0_f470)
  store i32 %v3_f478, i32* %r0.global-to-local, align 4
  %v0_f47c = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_f47c, 1
  %extract.t6 = trunc i32 %v0_f47c to i8
  br i1 %tmp22, label %dec_label_pc_f4a0, label %dec_label_pc_f484

dec_label_pc_f484:                                ; preds = %dec_label_pc_f414
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f488

dec_label_pc_f488:                                ; preds = %dec_label_pc_f488, %dec_label_pc_f484
  %v2_f490 = phi i32 [ %v1_f494, %dec_label_pc_f488 ], [ 0, %dec_label_pc_f484 ]
  %v1_f488 = load i32, i32* %r6.global-to-local, align 4
  %v2_f488 = add i32 %v1_f488, %v2_f490
  %v3_f488 = inttoptr i32 %v2_f488 to i8*
  %v4_f488 = load i8, i8* %v3_f488, align 1
  %v6_f488 = zext i8 %v4_f488 to i32
  %v1_f48c = xor i32 %v6_f488, 80
  store i32 %v1_f48c, i32* %r3.global-to-local, align 4
  %v1_f490 = trunc i32 %v1_f48c to i8
  store i8 %v1_f490, i8* %v3_f488, align 1
  %v0_f494 = load i32, i32* %r2.global-to-local, align 4
  %v1_f494 = add i32 %v0_f494, 1
  store i32 %v1_f494, i32* %r2.global-to-local, align 4
  %v1_f498 = load i32, i32* @r7, align 4
  %v9_f498 = icmp eq i32 %v1_f494, %v1_f498
  br i1 %v9_f498, label %dec_label_pc_f4a0.loopexit, label %dec_label_pc_f488

dec_label_pc_f4a0.loopexit:                       ; preds = %dec_label_pc_f488
  %extract.t = trunc i32 %v1_f494 to i8
  br label %dec_label_pc_f4a0

dec_label_pc_f4a0:                                ; preds = %dec_label_pc_f4a0.loopexit, %dec_label_pc_f414
  %v0_f4b0.off0 = phi i8 [ %extract.t, %dec_label_pc_f4a0.loopexit ], [ %extract.t6, %dec_label_pc_f414 ]
  %v2_f4a0 = load i32, i32* @global_var_2144c.146, align 4
  %v2_f4a4 = load i32, i32* @global_var_21478.148, align 4
  %v3_f4a8 = mul i32 %v2_f4a0, 16
  store i32 %v3_f4a8, i32* @sb, align 4
  %v2_f4ac = add i32 %v2_f4a4, %v3_f4a8
  store i32 %v2_f4ac, i32* %r2.global-to-local, align 4
  %v3_f4b0 = add i32 %v2_f4ac, 12
  %v4_f4b0 = inttoptr i32 %v3_f4b0 to i8*
  store i8 %v0_f4b0.off0, i8* %v4_f4b0, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_f444, i32* %r3.global-to-local, align 4
  %v0_f4bc = load i32, i32* %r6.global-to-local, align 4
  %v1_f4bc = load i32, i32* @r8, align 4
  %v5_f4bc = mul i32 %v2_f444, 16
  %v6_f4bc = add i32 %v1_f4bc, %v5_f4bc
  %v7_f4bc = inttoptr i32 %v6_f4bc to i32*
  store i32 %v0_f4bc, i32* %v7_f4bc, align 4
  %v2_f4c0 = load i32, i32* @global_var_21478.148, align 4
  store i32 %v2_f4c0, i32* @r7, align 4
  %v1_f4c4 = inttoptr i32 %arg2 to i8*
  %v2_f4c4 = call i32 @function_12450(i8* %v1_f4c4)
  %sext1 = mul i32 %v2_f4c4, 16777216
  %v1_f4c8 = sdiv i32 %sext1, 16777216
  %v2_f4c8 = add nsw i32 %v1_f4c8, 1
  store i32 %v2_f4c8, i32* @r4, align 4
  store i32 %v1_f4c8, i32* @r6, align 4
  store i32 %v2_f4c8, i32* @r0, align 4
  %v0_f4d4 = call i32 @function_13b0c()
  store i32 %v0_f4d4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_f4dc = load i32, i32* @r4, align 4
  store i32 %v0_f4dc, i32* %r2.global-to-local, align 4
  store i32 %v0_f4d4, i32* %r5.global-to-local, align 4
  %v3_f4e4 = call i32 @function_124c0(i32 %v0_f4d4, i32 %arg2, i32 %v0_f4dc)
  store i32 %v3_f4e4, i32* %r0.global-to-local, align 4
  %v0_f4e8 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_f4e8, 1
  %extract.t8 = trunc i32 %v0_f4e8 to i8
  br i1 %tmp23, label %dec_label_pc_f50c, label %dec_label_pc_f4f0

dec_label_pc_f4f0:                                ; preds = %dec_label_pc_f4a0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4f4, %dec_label_pc_f4f0
  %v2_f4fc = phi i32 [ %v1_f500, %dec_label_pc_f4f4 ], [ 0, %dec_label_pc_f4f0 ]
  %v1_f4f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_f4f4 = add i32 %v1_f4f4, %v2_f4fc
  %v3_f4f4 = inttoptr i32 %v2_f4f4 to i8*
  %v4_f4f4 = load i8, i8* %v3_f4f4, align 1
  %v6_f4f4 = zext i8 %v4_f4f4 to i32
  %v1_f4f8 = xor i32 %v6_f4f4, 80
  store i32 %v1_f4f8, i32* %r3.global-to-local, align 4
  %v1_f4fc = trunc i32 %v1_f4f8 to i8
  store i8 %v1_f4fc, i8* %v3_f4f4, align 1
  %v0_f500 = load i32, i32* %r2.global-to-local, align 4
  %v1_f500 = add i32 %v0_f500, 1
  store i32 %v1_f500, i32* %r2.global-to-local, align 4
  %v1_f504 = load i32, i32* @r6, align 4
  %v9_f504 = icmp eq i32 %v1_f500, %v1_f504
  br i1 %v9_f504, label %dec_label_pc_f50c.loopexit, label %dec_label_pc_f4f4

dec_label_pc_f50c.loopexit:                       ; preds = %dec_label_pc_f4f4
  %extract.t7 = trunc i32 %v1_f500 to i8
  br label %dec_label_pc_f50c

dec_label_pc_f50c:                                ; preds = %dec_label_pc_f50c.loopexit, %dec_label_pc_f4a0
  %v0_f51c.off0 = phi i8 [ %extract.t7, %dec_label_pc_f50c.loopexit ], [ %extract.t8, %dec_label_pc_f4a0 ]
  %v2_f50c = load i32, i32* @global_var_2144c.146, align 4
  store i32 %v2_f50c, i32* %r0.global-to-local, align 4
  %v2_f510 = load i32, i32* @global_var_21478.148, align 4
  %v3_f514 = mul i32 %v2_f50c, 16
  store i32 %v3_f514, i32* %r1.global-to-local, align 4
  %v2_f518 = or i32 %v3_f514, 13
  %v3_f51c = add i32 %v2_f518, %v2_f510
  %v4_f51c = inttoptr i32 %v3_f51c to i8*
  store i8 %v0_f51c.off0, i8* %v4_f51c, align 1
  store i32 ptrtoint (i16** @global_var_2147c.150 to i32), i32* %r4.global-to-local, align 4
  %v2_f528 = load i16, i16* bitcast (i16** @global_var_2147c.150 to i16*), align 4
  %v3_f528 = zext i16 %v2_f528 to i32
  store i32 %v3_f528, i32* %lr.global-to-local, align 4
  %v2_f530 = load i32, i32* @global_var_21478.148, align 4
  store i32 %v2_f530, i32* %r2.global-to-local, align 4
  %v0_f538 = load i32, i32* %r1.global-to-local, align 4
  %v2_f538 = add i32 %v0_f538, %v2_f530
  store i32 %v2_f538, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2147c.150 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_f540 = load i32, i32* @sb, align 4
  %v1_f540 = load i32, i32* @r7, align 4
  %v2_f540 = add i32 %v1_f540, %v0_f540
  store i32 %v2_f540, i32* %ip.global-to-local, align 4
  %v0_f544 = load i32, i32* %r0.global-to-local, align 4
  %v1_f544 = add i32 %v0_f544, 1
  store i32 %v1_f544, i32* %r0.global-to-local, align 4
  %v3_f548 = add i32 %v2_f538, 10
  %v4_f548 = inttoptr i32 %v3_f548 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2147c.150 to i32), i32 16), i32 16) to i16), i16* %v4_f548, align 2
  %v0_f54c = load i32, i32* %lr.global-to-local, align 4
  %v1_f54c = trunc i32 %v0_f54c to i16
  %v2_f54c = load i32, i32* %r1.global-to-local, align 4
  %v3_f54c = add i32 %v2_f54c, 8
  %v4_f54c = inttoptr i32 %v3_f54c to i16*
  store i16 %v1_f54c, i16* %v4_f54c, align 2
  %v0_f550 = load i32, i32* %r5.global-to-local, align 4
  %v1_f550 = load i32, i32* %ip.global-to-local, align 4
  %v2_f550 = add i32 %v1_f550, 4
  %v3_f550 = inttoptr i32 %v2_f550 to i32*
  store i32 %v0_f550, i32* %v3_f550, align 4
  %v1_f554 = load i32, i32* @fp, align 4
  %v2_f554 = inttoptr i32 %v1_f554 to i32*
  store i32 %v1_f544, i32* %v2_f554, align 4
  %v0_f558 = load i32, i32* %r3.global-to-local, align 4
  %v1_f558 = trunc i32 %v0_f558 to i16
  %v2_f558 = load i32, i32* %r4.global-to-local, align 4
  %v3_f558 = inttoptr i32 %v2_f558 to i16*
  store i16 %v1_f558, i16* %v3_f558, align 2
  store i32 %v3_f414, i32* @r4, align 4
  store i32 %v6_f414, i32* @r5, align 4
  store i32 %v9_f414, i32* @r6, align 4
  store i32 %v12_f414, i32* @r7, align 4
  store i32 %v15_f414, i32* @r8, align 4
  store i32 %v18_f414, i32* @sb, align 4
  store i32 %v21_f414, i32* @sl, align 4
  store i32 %v24_f414, i32* @fp, align 4
  ret i32 %v1_f544

; uselistorder directives
  uselistorder i32 %v3_f514, { 1, 0 }
  uselistorder i32 %v1_f500, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f4d4, { 1, 0, 2 }
  uselistorder i32 %v3_f4a8, { 1, 0 }
  uselistorder i32 %v1_f494, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f468, { 1, 0, 2 }
  uselistorder i32 %v2_f444, { 1, 0, 2 }
  uselistorder i32 %v3_f438, { 1, 0 }
  uselistorder i32 %v1_f428, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_12450, { 0, 1, 24, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 78, 79, 80, 81, 49, 71, 72, 73, 74, 75, 76, 77, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_f574(i32 %arg1) local_unnamed_addr {
dec_label_pc_f574:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_1()
  %v3_f574 = load i32, i32* @r4, align 4
  %v18_f574 = load i32, i32* @sb, align 4
  %v24_f574 = load i32, i32* @fp, align 4
  %v0_f580 = call i32 @function_12da4()
  store i32 %v0_f580, i32* %r0.global-to-local, align 4
  %v7_f584 = icmp eq i32 %v0_f580, -1
  %. = zext i1 %v7_f584 to i32
  %tmp345 = icmp slt i32 %v0_f580, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_234d4.142 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5a0 = icmp eq i32 %storemerge308, 0
  store i1 %v2_f5a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f580, i32* @global_var_234d4.142, align 4
  br i1 %v2_f5a0, label %dec_label_pc_f880, label %dec_label_pc_f5ac

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f574
  store i32 %v3_f574, i32* %r4.global-to-local, align 4
  store i32 %v18_f574, i32* @sb, align 4
  store i32 %v24_f574, i32* @fp, align 4
  ret i32 %v0_f580

dec_label_pc_f880:                                ; preds = %dec_label_pc_f574
  %v0_f880 = call i32 @function_1270c()
  store i32 %v0_f880, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_f880, i32* @global_var_234b4.78, align 4
  %v1_f88c = call i32 @function_f1ec(i32 %v0_f880)
  %v0_f890 = load i32, i32* @r4, align 4
  store i32 %v0_f890, i32* %r0.global-to-local, align 4
  %v1_f894 = inttoptr i32 %v0_f890 to i32*
  %v2_f894 = call i32 @function_12d34(i32* %v1_f894)
  store i32 ptrtoint (i32* @global_var_21480.144 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_f894, i32* @global_var_21480.144, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_f8a8 = call i32 @function_1442c(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_234cc.155 to i32), i32* %r3.global-to-local, align 4
  %v0_f8b0 = load i32, i32* @r4, align 4
  %v5_f8b0 = trunc i32 %v0_f8b0 to i16
  store i16 %v5_f8b0, i16* %stack_var_-52, align 2
  store i32 %v2_f8a8, i32* @global_var_234cc.155, align 4
  store i32 %v0_f8b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f8bc

dec_label_pc_f8bc:                                ; preds = %dec_label_pc_f8bc.dec_label_pc_f8bc_crit_edge, %dec_label_pc_f880
  %v2_f8c8 = phi i32 [ %v2_f8c8.pre, %dec_label_pc_f8bc.dec_label_pc_f8bc_crit_edge ], [ %v2_f8a8, %dec_label_pc_f880 ]
  %v0_f8d0 = phi i32 [ %v0_f900, %dec_label_pc_f8bc.dec_label_pc_f8bc_crit_edge ], [ %v0_f8b0, %dec_label_pc_f880 ]
  %v3_f8bc162 = phi i16 [ %v5_f900, %dec_label_pc_f8bc.dec_label_pc_f8bc_crit_edge ], [ %v5_f8b0, %dec_label_pc_f880 ]
  %v4_f8bc = sext i16 %v3_f8bc162 to i32
  %v3_f8c4 = mul i32 %v0_f8d0, 256
  store i32 %v3_f8c4, i32* %ip.global-to-local, align 4
  %v2_f8d8 = mul nsw i32 %v4_f8bc, 288
  %v2_f8dc = mul i32 %v0_f8d0, 288
  %v1_f8e0 = add nsw i32 %v4_f8bc, 1
  store i32 %v1_f8e0, i32* %r0.global-to-local, align 4
  %v2_f8e4 = add i32 %v2_f8d8, %v2_f8c8
  store i32 %v2_f8e4, i32* %r2.global-to-local, align 4
  %v2_f8e8 = add i32 %v2_f8dc, %v2_f8c8
  store i32 %v2_f8e8, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_f8f8 = add i32 %v2_f8e4, 4
  %v3_f8f8 = inttoptr i32 %v2_f8f8 to i32*
  store i32 -1, i32* %v3_f8f8, align 4
  %v0_f8fc = load i32, i32* @r5, align 4
  %v1_f8fc = load i32, i32* %r1.global-to-local, align 4
  %v2_f8fc = add i32 %v1_f8fc, 12
  %v3_f8fc = inttoptr i32 %v2_f8fc to i32*
  store i32 %v0_f8fc, i32* %v3_f8fc, align 4
  %v0_f900 = load i32, i32* %r0.global-to-local, align 4
  %v5_f900 = trunc i32 %v0_f900 to i16
  %v7_f904 = icmp sgt i16 %v3_f8bc162, 254
  br i1 %v7_f904, label %dec_label_pc_f908, label %dec_label_pc_f8bc.dec_label_pc_f8bc_crit_edge

dec_label_pc_f8bc.dec_label_pc_f8bc_crit_edge:    ; preds = %dec_label_pc_f8bc
  %v2_f8c8.pre = load i32, i32* @global_var_234cc.155, align 4
  br label %dec_label_pc_f8bc

dec_label_pc_f908:                                ; preds = %dec_label_pc_f8bc
  store i16 %v5_f900, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_f914 = call i32 @function_138c4(i32 2, i32 3, i32 6)
  store i32 %v3_f914, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_234d0.157 to i32), i32* %r2.global-to-local, align 4
  %v2_f91c = icmp eq i32 %v3_f914, -1
  store i1 %v2_f91c, i1* %cpsr_c.global-to-local, align 1
  %v7_f91c = icmp eq i32 %v3_f914, -1
  store i1 %v7_f91c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f914, i32* %r4.global-to-local, align 4
  store i32 %v3_f914, i32* @global_var_234d0.157, align 4
  br i1 %v7_f91c, label %dec_label_pc_10a88, label %dec_label_pc_f92c

dec_label_pc_f92c:                                ; preds = %dec_label_pc_f908
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_f930 = load i32, i32* @r5, align 4
  store i32 %v0_f930, i32* %r2.global-to-local, align 4
  %v2_f934 = call i32 @function_12ee8(i32 %v3_f914, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_f93c = or i32 %v2_f934, 2048
  store i32 %v1_f93c, i32* %r2.global-to-local, align 4
  %v0_f940 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f940, i32* %r0.global-to-local, align 4
  %v2_f944 = call i32 @function_12ee8(i32 %v0_f940, i32 4)
  %v2_f94c = load i32, i32* @global_var_234d0.157, align 4
  store i32 %v2_f94c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_f958 = load i32, i32* @r5, align 4
  store i32 %v0_f958, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_f960 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_f960, i32* %r3.global-to-local, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_f970 = call i32 @function_13880(i32 %v2_f94c, i32 %v0_f958, i32 3, i32 %v2_f960, i32 4)
  store i32 %v5_f970, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f974 = icmp eq i32 %v5_f970, 0
  store i1 %v2_f974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f974, label %dec_label_pc_f97c, label %dec_label_pc_10a7c

dec_label_pc_f97c:                                ; preds = %dec_label_pc_f92c, %dec_label_pc_f97c
  %v0_f97c = call i32 @function_f190()
  %v3_f980 = mul i32 %v0_f97c, 65536
  store i32 %v3_f980, i32* %r0.global-to-local, align 4
  %v1_f988 = mul i32 %v0_f97c, 256
  %v3_f98c = and i32 %v1_f988, 65280
  %tmp348 = udiv i32 %v0_f97c, 256
  %v4_f990 = urem i32 %tmp348, 256
  %v5_f990 = or i32 %v4_f990, %v3_f98c
  store i32 %v5_f990, i32* %r3.global-to-local, align 4
  %v2_f994 = icmp ugt i32 %v5_f990, 1023
  store i1 %v2_f994, i1* %cpsr_c.global-to-local, align 1
  %v7_f994 = icmp eq i32 %v5_f990, 1024
  store i1 %v7_f994, i1* %cpsr_z.global-to-local, align 1
  %v3_f99c = icmp ult i32 %v5_f990, 1022
  br i1 %v3_f99c, label %dec_label_pc_f97c, label %dec_label_pc_f9a0

dec_label_pc_f9a0:                                ; preds = %dec_label_pc_f97c
  %v5_f998.le = trunc i32 %v0_f97c to i16
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %r0.global-to-local, align 4
  %v2_f9a4 = load i8, i8* bitcast (i8** @global_var_21450.159 to i8*), align 4
  %v3_f9a4 = zext i8 %v2_f9a4 to i32
  %v1_f9a8 = and i32 %v3_f9a4, 240
  %v1_f9ac = or i32 %v1_f9a8, 5
  store i32 %v1_f9ac, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_21450.159 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_21452.160 to i16*), align 4
  %v0_f9cc = call i32 @function_f190()
  %v1_f9cc = trunc i32 %v0_f9cc to i16
  %v3_f9d4 = load i8, i8* @global_var_21470.163, align 1
  store i32 ptrtoint (i32* @global_var_21464.162 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_f9d4, 16
  %v1_f9e0 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_f9e8 = or i32 %v1_f9e0, 80
  store i32 %v1_f9e8, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_21458.164 to i8*), align 4
  store i16 %v1_f9cc, i16* bitcast (i32* @global_var_21454.165 to i16*), align 4
  %v1_f9f8 = trunc i32 %v1_f9e8 to i8
  store i8 %v1_f9f8, i8* @global_var_21470.163, align 1
  store i8 6, i8* bitcast (i32* @global_var_21459.166 to i8*), align 4
  %v4_fa00 = sext i16 %v5_f998.le to i32
  store i32 %v4_fa00, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_21466.167, align 2
  store i16 %v5_f998.le, i16* bitcast (i32* @global_var_21464.162 to i16*), align 4
  %v0_fa10 = call i32 @function_f190()
  %v1_fa10 = trunc i32 %v0_fa10 to i16
  %v3_fa18 = load i8, i8* @global_var_21471.168, align 1
  %v4_fa18 = zext i8 %v3_fa18 to i32
  store i32 ptrtoint (i32* @global_var_21464.162 to i32), i32* %ip.global-to-local, align 4
  %v1_fa20 = or i32 %v4_fa18, 2
  store i32 %v1_fa20, i32* %r3.global-to-local, align 4
  store i16 %v1_fa10, i16* bitcast (i32* @global_var_21472.169 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  %v1_fa2c = trunc i32 %v1_fa20 to i8
  store i8 %v1_fa2c, i8* @global_var_21471.168, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fa38 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fa48 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182d8.177 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fa58 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_182d8.177 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_182e0.179 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fa68 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([6 x i8]* @global_var_182e0.179 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fa78 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r1.global-to-local, align 4
  %v5_fa88 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e8.181 to i32), i32* %r1.global-to-local, align 4
  %v0_fa94 = load i32, i32* @r4, align 4
  store i32 %v0_fa94, i32* %r2.global-to-local, align 4
  %v4_fa98 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_182e8.181 to i32), i32 %v0_fa94)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_182f0.183 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_faa8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([8 x i8]* @global_var_182f0.183 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fab8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18300.187 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fac8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([9 x i8]* @global_var_18300.187 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fad8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18314.191 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fae8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18314.191 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32* %r1.global-to-local, align 4
  %v5_faf8 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb08 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32* %r1.global-to-local, align 4
  %v5_fb18 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fb28 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18728.195 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb38 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32 ptrtoint (i32* @global_var_18728.195 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb48 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fb58 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fb68 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r1.global-to-local, align 4
  %v5_fb78 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18330.199 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fb88 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18330.199 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fb98 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32* %r1.global-to-local, align 4
  %v5_fba8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32* %r1.global-to-local, align 4
  %v0_fbb4 = load i32, i32* @r4, align 4
  store i32 %v0_fbb4, i32* %r2.global-to-local, align 4
  %v4_fbb8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32 %v0_fbb4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_fbc8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18348.205 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_fbd8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18348.205 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1849c.207 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fbe8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1849c.207 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18354.209 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fbf8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([9 x i8]* @global_var_18354.209 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1849c.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fc08 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_1849c.207 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18360.211 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fc18 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18360.211 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_fc28 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18728.195 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fc38 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18728.195 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18368.213 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fc48 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18368.213 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_fc58 = call i32 @function_f414(i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18380.217 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fc68 = call i32 @function_f414(i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32 ptrtoint ([7 x i8]* @global_var_18380.217 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18388.219 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fc78 = call i32 @function_f414(i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32 ptrtoint ([4 x i8]* @global_var_18388.219 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fc88 = call i32 @function_f414(i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), i32* %r1.global-to-local, align 4
  %v5_fc98 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fca8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), i32* %r1.global-to-local, align 4
  %v5_fcb8 = call i32 @function_f414(i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fcc8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32* %r1.global-to-local, align 4
  %v5_fcd8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18330.199 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fce8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32 ptrtoint (i32* @global_var_18330.199 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32* %r1.global-to-local, align 4
  %v0_fcf4 = load i32, i32* @r4, align 4
  store i32 %v0_fcf4, i32* %r2.global-to-local, align 4
  %v4_fcf8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32 %v0_fcf4)
  store i32 ptrtoint (i32* @global_var_183b0.229 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fd08 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_183b0.229 to i32), i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_183b8.231 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18728.195 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_fd18 = call i32 @function_f414(i32 ptrtoint ([14 x i8]* @global_var_183b8.231 to i32), i32 ptrtoint (i32* @global_var_18728.195 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_18360.211 to i32), i32* %r0.global-to-local, align 4
  %v0_fd20 = load i32, i32* @r4, align 4
  store i32 %v0_fd20, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18360.211 to i32), i32* %r1.global-to-local, align 4
  %v3_fd28 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18360.211 to i32), i32 ptrtoint (i32* @global_var_18360.211 to i32), i32 %v0_fd20)
  store i32 ptrtoint (i32* @global_var_182e8.181 to i32), i32* %r0.global-to-local, align 4
  %v0_fd30 = load i32, i32* @r4, align 4
  store i32 %v0_fd30, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e8.181 to i32), i32* %r1.global-to-local, align 4
  %v3_fd38 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_182e8.181 to i32), i32 ptrtoint (i32* @global_var_182e8.181 to i32), i32 %v0_fd30)
  store i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), i32* %r1.global-to-local, align 4
  %v5_fd48 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fd58 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_183d0.235 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_fd68 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_183d0.235 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_183d8.237 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fd78 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_183d8.237 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_183e0.239 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fd88 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_183e0.239 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_183e8.241 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fd98 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([6 x i8]* @global_var_183e8.241 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_183f0.243 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fda8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_183f0.243 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_183f8.245 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdb8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([6 x i8]* @global_var_183f8.245 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18400.247 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_fdc8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([9 x i8]* @global_var_18400.247 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1840c.249 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fdd8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1840c.249 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1841c.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fde8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1841c.251 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1842c.253 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fdf8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([7 x i8]* @global_var_1842c.253 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18434.255 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe08 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_18434.255 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1843c.257 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe18 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([9 x i8]* @global_var_1843c.257 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe28 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18448.259 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe38 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([8 x i8]* @global_var_18448.259 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18450.261 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_fe48 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18450.261 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1845c.263 to i32), i32* %r1.global-to-local, align 4
  %v0_fe54 = load i32, i32* @r4, align 4
  store i32 %v0_fe54, i32* %r2.global-to-local, align 4
  %v4_fe58 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1845c.263 to i32), i32 %v0_fe54)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18464.265 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe68 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18464.265 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18728.195 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fe78 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18728.195 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18330.199 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe88 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18330.199 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18314.191 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe98 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18314.191 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fea8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1841c.251 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_feb8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_1841c.251 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1846c.267 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_fec8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_1846c.267 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fed8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18380.217 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fee8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_18380.217 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fef8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18478.271 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff08 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18478.271 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18484.273 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff18 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([6 x i8]* @global_var_18484.273 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1848c.275 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff28 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([4 x i8]* @global_var_1848c.275 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18490.277 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ff38 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18490.277 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18498.279 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff48 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_18498.279 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184a4.281 to i32), i32* %r1.global-to-local, align 4
  %v0_ff54 = load i32, i32* @r4, align 4
  store i32 %v0_ff54, i32* %r2.global-to-local, align 4
  %v5_ff58 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_184a4.281 to i32), i32 %v0_ff54)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_184ac.283 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ff68 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([9 x i8]* @global_var_184ac.283 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184b8.285 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ff78 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_184b8.285 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184c0.287 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ff88 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_184c0.287 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184c8.289 to i32), i32* %r1.global-to-local, align 4
  %v0_ff94 = load i32, i32* @r4, align 4
  store i32 %v0_ff94, i32* %r2.global-to-local, align 4
  %v4_ff98 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_184c8.289 to i32), i32 %v0_ff94)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184d0.291 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ffa8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_184d0.291 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184d8.293 to i32), i32* %r1.global-to-local, align 4
  %v0_ffb4 = load i32, i32* @r4, align 4
  store i32 %v0_ffb4, i32* %r2.global-to-local, align 4
  %v5_ffb8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_184d8.293 to i32), i32 %v0_ffb4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_184e0.295 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_ffc8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([8 x i8]* @global_var_184e0.295 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184e8.297 to i32), i32* %r1.global-to-local, align 4
  %v0_ffd4 = load i32, i32* @r4, align 4
  store i32 %v0_ffd4, i32* %r2.global-to-local, align 4
  %v4_ffd8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_184e8.297 to i32), i32 %v0_ffd4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), i32* %r1.global-to-local, align 4
  %v0_ffe4 = load i32, i32* @r4, align 4
  store i32 %v0_ffe4, i32* %r2.global-to-local, align 4
  %v5_ffe8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), i32 %v0_ffe4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184f0.299 to i32), i32* %r1.global-to-local, align 4
  %v0_fff4 = load i32, i32* @r4, align 4
  store i32 %v0_fff4, i32* %r2.global-to-local, align 4
  %v4_fff8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_184f0.299 to i32), i32 %v0_fff4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184f8.301 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10008 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_184f8.301 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18500.303 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10018 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([9 x i8]* @global_var_18500.303 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1850c.305 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1850c.305 to i32), i32* %r1.global-to-local, align 4
  %v5_10028 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_1850c.305 to i32), i32 ptrtoint ([6 x i8]* @global_var_1850c.305 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32* %r1.global-to-local, align 4
  %v5_10038 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10048 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18604.307 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10058 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18604.307 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18514.309 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10068 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18514.309 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10078 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), i32* %r1.global-to-local, align 4
  %v5_10088 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_18524.313 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10098 = call i32 @function_f414(i32 ptrtoint ([4 x i8]* @global_var_18524.313 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_18528.315 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18530.317 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_100a8 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_18528.315 to i32), i32 ptrtoint ([7 x i8]* @global_var_18530.317 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_18538.319 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18538.319 to i32), i32* %r1.global-to-local, align 4
  %v5_100b8 = call i32 @function_f414(i32 ptrtoint ([4 x i8]* @global_var_18538.319 to i32), i32 ptrtoint ([4 x i8]* @global_var_18538.319 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1853c.321 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_100c8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1853c.321 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18548.323 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_100d8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_18548.323 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), i32* %r0.global-to-local, align 4
  %v0_100e0 = load i32, i32* @r4, align 4
  store i32 %v0_100e0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), i32* %r1.global-to-local, align 4
  %v5_100e8 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), i32 %v0_100e0)
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), i32* %r1.global-to-local, align 4
  %v0_100f4 = load i32, i32* @r4, align 4
  store i32 %v0_100f4, i32* %r2.global-to-local, align 4
  %v4_100f8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), i32 %v0_100f4)
  store i32 ptrtoint (i32* @global_var_18558.327 to i32), i32* %r0.global-to-local, align 4
  %v0_10100 = load i32, i32* @r4, align 4
  store i32 %v0_10100, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18558.327 to i32), i32* %r1.global-to-local, align 4
  %v3_10108 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18558.327 to i32), i32 ptrtoint (i32* @global_var_18558.327 to i32), i32 %v0_10100)
  store i32 ptrtoint ([6 x i8]* @global_var_18560.329 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10118 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18560.329 to i32), i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10128 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10138 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10148 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_18570.333 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_10158 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18570.333 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_18578.335 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18584.337 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10168 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_18578.335 to i32), i32 ptrtoint ([7 x i8]* @global_var_18584.337 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1858c.339 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1858c.339 to i32), i32* %r1.global-to-local, align 4
  %v5_10178 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_1858c.339 to i32), i32 ptrtoint ([8 x i8]* @global_var_1858c.339 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), i32* %r1.global-to-local, align 4
  %v5_10188 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1859c.343 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10198 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), i32 ptrtoint ([8 x i8]* @global_var_1859c.343 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_185a4.345 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_185ac.347 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_101a8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_185a4.345 to i32), i32 ptrtoint ([10 x i8]* @global_var_185ac.347 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_185a4.345 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184f8.301 to i32), i32* %r1.global-to-local, align 4
  %v0_101b4 = load i32, i32* @r4, align 4
  store i32 %v0_101b4, i32* %r2.global-to-local, align 4
  %v5_101b8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_185a4.345 to i32), i32 ptrtoint ([7 x i8]* @global_var_184f8.301 to i32), i32 %v0_101b4)
  store i32 ptrtoint ([5 x i8]* @global_var_185b8.349 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_185b8.349 to i32), i32* %r1.global-to-local, align 4
  %v5_101c8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_185b8.349 to i32), i32 ptrtoint ([5 x i8]* @global_var_185b8.349 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_185c0.351 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_185c8.353 to i32), i32* %r1.global-to-local, align 4
  %v0_101d4 = load i32, i32* @r4, align 4
  store i32 %v0_101d4, i32* %r2.global-to-local, align 4
  %v5_101d8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_185c0.351 to i32), i32 ptrtoint ([7 x i8]* @global_var_185c8.353 to i32), i32 %v0_101d4)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_185c8.353 to i32), i32* %r1.global-to-local, align 4
  %v0_101e4 = load i32, i32* @r4, align 4
  store i32 %v0_101e4, i32* %r2.global-to-local, align 4
  %v5_101e8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_185c8.353 to i32), i32 %v0_101e4)
  store i32 ptrtoint ([3 x i8]* @global_var_18598.355 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), i32* %r1.global-to-local, align 4
  %v0_101f4 = load i32, i32* @r4, align 4
  store i32 %v0_101f4, i32* %r2.global-to-local, align 4
  %v5_101f8 = call i32 @function_f414(i32 ptrtoint ([3 x i8]* @global_var_18598.355 to i32), i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), i32 %v0_101f4)
  store i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), i32* %r0.global-to-local, align 4
  %v0_10200 = load i32, i32* @r4, align 4
  store i32 %v0_10200, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), i32* %r1.global-to-local, align 4
  %v5_10208 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), i32 %v0_10200)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10218 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10228 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_185e4.361 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10238 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_185e4.361 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_185ec.363 to i32), i32* %r1.global-to-local, align 4
  %v0_10244 = load i32, i32* @r4, align 4
  store i32 %v0_10244, i32* %r2.global-to-local, align 4
  %v5_10248 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([7 x i8]* @global_var_185ec.363 to i32), i32 %v0_10244)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f4.365 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10258 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_185f4.365 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18600.367 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10268 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18600.367 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18608.369 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10278 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18608.369 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18614.371 to i32), i32* %r1.global-to-local, align 4
  %v0_10284 = load i32, i32* @r4, align 4
  store i32 %v0_10284, i32* %r2.global-to-local, align 4
  %v4_10288 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18614.371 to i32), i32 %v0_10284)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1861c.373 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10298 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_1861c.373 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18628.375 to i32), i32* %r1.global-to-local, align 4
  %v0_102a4 = load i32, i32* @r4, align 4
  store i32 %v0_102a4, i32* %r2.global-to-local, align 4
  %v4_102a8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18628.375 to i32), i32 %v0_102a4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18630.377 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102b8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18630.377 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18638.379 to i32), i32* %r1.global-to-local, align 4
  %v0_102c4 = load i32, i32* @r4, align 4
  store i32 %v0_102c4, i32* %r2.global-to-local, align 4
  %v5_102c8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([7 x i8]* @global_var_18638.379 to i32), i32 %v0_102c4)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18640.381 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102d8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18640.381 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18648.383 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_102e8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_18648.383 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18654.385 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_102f8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint ([9 x i8]* @global_var_18654.385 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10308 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), i32* %r1.global-to-local, align 4
  %v5_10318 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18668.389 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18668.389 to i32), i32* %r1.global-to-local, align 4
  %v5_10328 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_18668.389 to i32), i32 ptrtoint ([8 x i8]* @global_var_18668.389 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_18670.391 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), i32* %r1.global-to-local, align 4
  %v0_10334 = load i32, i32* @r4, align 4
  store i32 %v0_10334, i32* %r2.global-to-local, align 4
  %v4_10338 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18670.391 to i32), i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), i32 %v0_10334)
  store i32 ptrtoint ([4 x i8]* @global_var_18678.393 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10348 = call i32 @function_f414(i32 ptrtoint ([4 x i8]* @global_var_18678.393 to i32), i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1867c.395 to i32), i32* %r0.global-to-local, align 4
  %v0_10350 = load i32, i32* @r4, align 4
  store i32 %v0_10350, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1867c.395 to i32), i32* %r1.global-to-local, align 4
  %v5_10358 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_1867c.395 to i32), i32 ptrtoint ([7 x i8]* @global_var_1867c.395 to i32), i32 %v0_10350)
  store i32 ptrtoint ([6 x i8]* @global_var_18684.397 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1868c.399 to i32), i32* %r1.global-to-local, align 4
  %v0_10364 = load i32, i32* @r4, align 4
  store i32 %v0_10364, i32* %r2.global-to-local, align 4
  %v4_10368 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18684.397 to i32), i32 ptrtoint (i32* @global_var_1868c.399 to i32), i32 %v0_10364)
  store i32 ptrtoint ([7 x i8]* @global_var_18694.401 to i32), i32* %r0.global-to-local, align 4
  %v0_10370 = load i32, i32* @r4, align 4
  store i32 %v0_10370, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18694.401 to i32), i32* %r1.global-to-local, align 4
  %v5_10378 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_18694.401 to i32), i32 ptrtoint ([7 x i8]* @global_var_18694.401 to i32), i32 %v0_10370)
  store i32 ptrtoint ([6 x i8]* @global_var_1869c.403 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1869c.403 to i32), i32* %r1.global-to-local, align 4
  %v5_10388 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_1869c.403 to i32), i32 ptrtoint ([6 x i8]* @global_var_1869c.403 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_186a4.405 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_186a4.405 to i32), i32* %r1.global-to-local, align 4
  %v5_10398 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_186a4.405 to i32), i32 ptrtoint ([8 x i8]* @global_var_186a4.405 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_186ac.407 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_186ac.407 to i32), i32* %r1.global-to-local, align 4
  %v5_103a8 = call i32 @function_f414(i32 ptrtoint ([4 x i8]* @global_var_186ac.407 to i32), i32 ptrtoint ([4 x i8]* @global_var_186ac.407 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_186b0.409 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_186b0.409 to i32), i32* %r1.global-to-local, align 4
  %v5_103b8 = call i32 @function_f414(i32 ptrtoint ([4 x i8]* @global_var_186b0.409 to i32), i32 ptrtoint ([4 x i8]* @global_var_186b0.409 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_186b4.411 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186b4.411 to i32), i32* %r1.global-to-local, align 4
  %v3_103c8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_186b4.411 to i32), i32 ptrtoint (i32* @global_var_186b4.411 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_186bc.413 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_186bc.413 to i32), i32* %r1.global-to-local, align 4
  %v5_103d8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_186bc.413 to i32), i32 ptrtoint ([5 x i8]* @global_var_186bc.413 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_186c4.415 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  %v0_103e4 = load i32, i32* @r4, align 4
  store i32 %v0_103e4, i32* %r2.global-to-local, align 4
  %v4_103e8 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_186c4.415 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 %v0_103e4)
  store i32 ptrtoint ([6 x i8]* @global_var_186cc.417 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1849c.207 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_103f8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_186cc.417 to i32), i32 ptrtoint (i32* @global_var_1849c.207 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_186cc.417 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32* %r1.global-to-local, align 4
  %v0_10404 = load i32, i32* @r4, align 4
  store i32 %v0_10404, i32* %r2.global-to-local, align 4
  %v4_10408 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_186cc.417 to i32), i32 ptrtoint (i32* @global_var_1830c.189 to i32), i32 %v0_10404)
  store i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r1.global-to-local, align 4
  %v0_10414 = load i32, i32* @r4, align 4
  store i32 %v0_10414, i32* %r2.global-to-local, align 4
  %v4_10418 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 %v0_10414)
  store i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), i32* %r0.global-to-local, align 4
  %v0_10420 = load i32, i32* @r4, align 4
  store i32 %v0_10420, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), i32* %r1.global-to-local, align 4
  %v5_10428 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), i32 %v0_10420)
  store i32 ptrtoint ([5 x i8]* @global_var_186dc.421 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_186dc.421 to i32), i32* %r1.global-to-local, align 4
  %v5_10438 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_186dc.421 to i32), i32 ptrtoint ([5 x i8]* @global_var_186dc.421 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_186e4.423 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10448 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_186e4.423 to i32), i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_186ec.425 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10458 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_186ec.425 to i32), i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_186f4.427 to i32), i32* %r0.global-to-local, align 4
  %v0_10460 = load i32, i32* @r4, align 4
  store i32 %v0_10460, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_186f4.427 to i32), i32* %r1.global-to-local, align 4
  %v5_10468 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_186f4.427 to i32), i32 ptrtoint ([7 x i8]* @global_var_186f4.427 to i32), i32 %v0_10460)
  store i32 ptrtoint ([6 x i8]* @global_var_186fc.429 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18704.431 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10478 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_186fc.429 to i32), i32 ptrtoint ([6 x i8]* @global_var_18704.431 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1870c.433 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18714.435 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10488 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_1870c.433 to i32), i32 ptrtoint ([5 x i8]* @global_var_18714.435 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1871c.437 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1871c.437 to i32), i32* %r1.global-to-local, align 4
  %v3_10498 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_1871c.437 to i32), i32 ptrtoint (i32* @global_var_1871c.437 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_184b0.439 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18724.441 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_104a8 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_184b0.439 to i32), i32 ptrtoint (i32* @global_var_18724.441 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_18730.443 to i32), i32* %r0.global-to-local, align 4
  %v0_104b0 = load i32, i32* @r4, align 4
  store i32 %v0_104b0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18730.443 to i32), i32* %r1.global-to-local, align 4
  %v5_104b8 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_18730.443 to i32), i32 ptrtoint ([7 x i8]* @global_var_18730.443 to i32), i32 %v0_104b0)
  store i32 ptrtoint (i32* @global_var_18738.445 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18740.447 to i32), i32* %r1.global-to-local, align 4
  %v0_104c4 = load i32, i32* @r4, align 4
  store i32 %v0_104c4, i32* %r2.global-to-local, align 4
  %v4_104c8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18738.445 to i32), i32 ptrtoint ([7 x i8]* @global_var_18740.447 to i32), i32 %v0_104c4)
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18748.449 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_104d8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 ptrtoint ([9 x i8]* @global_var_18748.449 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18754.451 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_104e8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 ptrtoint ([9 x i8]* @global_var_18754.451 to i32), i32 8)
  %v0_104ec = load i32, i32* @r4, align 4
  store i32 %v0_104ec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18760.453 to i32), i32* %r1.global-to-local, align 4
  %v4_104f8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_182a8.171 to i32), i32 ptrtoint ([7 x i8]* @global_var_18760.453 to i32), i32 %v0_104ec)
  store i32 ptrtoint (i32* @global_var_18768.455 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18774.457 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_10508 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18768.455 to i32), i32 ptrtoint ([5 x i8]* @global_var_18774.457 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_1877c.459 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1877c.459 to i32), i32* %r1.global-to-local, align 4
  %v5_10518 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_1877c.459 to i32), i32 ptrtoint ([9 x i8]* @global_var_1877c.459 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_18788.461 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18788.461 to i32), i32* %r1.global-to-local, align 4
  %v5_10528 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_18788.461 to i32), i32 ptrtoint ([9 x i8]* @global_var_18788.461 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_18794.463 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18794.463 to i32), i32* %r1.global-to-local, align 4
  %v5_10538 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_18794.463 to i32), i32 ptrtoint ([9 x i8]* @global_var_18794.463 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_18498.279 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18498.279 to i32), i32* %r1.global-to-local, align 4
  %v3_10548 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18498.279 to i32), i32 ptrtoint (i32* @global_var_18498.279 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_187a0.465 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_187a0.465 to i32), i32* %r1.global-to-local, align 4
  %v3_10558 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_187a0.465 to i32), i32 ptrtoint (i32* @global_var_187a0.465 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_187ac.467 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_187ac.467 to i32), i32* %r1.global-to-local, align 4
  %v5_10568 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_187ac.467 to i32), i32 ptrtoint ([9 x i8]* @global_var_187ac.467 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_187b8.469 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_187b8.469 to i32), i32* %r1.global-to-local, align 4
  %v5_10578 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_187b8.469 to i32), i32 ptrtoint ([9 x i8]* @global_var_187b8.469 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_187c4.471 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_10588 = call i32 @function_f414(i32 ptrtoint ([8 x i8]* @global_var_187c4.471 to i32), i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_187cc.473 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_10598 = call i32 @function_f414(i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), i32 ptrtoint (i32* @global_var_187cc.473 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_18684.397 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_187dc.475 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_105a8 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_18684.397 to i32), i32 ptrtoint (i32* @global_var_187dc.475 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_187ec.477 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_187f8.479 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105b8 = call i32 @function_f414(i32 ptrtoint ([10 x i8]* @global_var_187ec.477 to i32), i32 ptrtoint (i32* @global_var_187f8.479 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_18804.481 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_18810.483 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_105c8 = call i32 @function_f414(i32 ptrtoint ([10 x i8]* @global_var_18804.481 to i32), i32 ptrtoint ([11 x i8]* @global_var_18810.483 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1881c.485 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105d8 = call i32 @function_f414(i32 ptrtoint ([10 x i8]* @global_var_1881c.485 to i32), i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_18828.487 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105e8 = call i32 @function_f414(i32 ptrtoint ([10 x i8]* @global_var_18828.487 to i32), i32 ptrtoint (i32* @global_var_185d8.359 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_18768.455 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18834.489 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_105f8 = call i32 @function_f414(i32 ptrtoint (i32* @global_var_18768.455 to i32), i32 ptrtoint (i32* @global_var_18834.489 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_18840.491 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_18850.493 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_10608 = call i32 @function_f414(i32 ptrtoint ([13 x i8]* @global_var_18840.491 to i32), i32 ptrtoint ([13 x i8]* @global_var_18850.493 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_18860.495 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18868.497 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_10618 = call i32 @function_f414(i32 ptrtoint ([7 x i8]* @global_var_18860.495 to i32), i32 ptrtoint (i32* @global_var_18868.497 to i32), i32 13)
  store i32 ptrtoint ([9 x i8]* @global_var_18870.499 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1887c.501 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_10628 = call i32 @function_f414(i32 ptrtoint ([9 x i8]* @global_var_18870.499 to i32), i32 ptrtoint ([8 x i8]* @global_var_1887c.501 to i32), i32 15)
  store i32 ptrtoint ([12 x i8]* @global_var_18884.503 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18890.505 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_10638 = call i32 @function_f414(i32 ptrtoint ([12 x i8]* @global_var_18884.503 to i32), i32 ptrtoint (i32* @global_var_18890.505 to i32), i32 20)
  store i32 ptrtoint ([6 x i8]* @global_var_1889c.507 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18890.505 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_10648 = call i32 @function_f414(i32 ptrtoint ([6 x i8]* @global_var_1889c.507 to i32), i32 ptrtoint (i32* @global_var_18890.505 to i32), i32 14)
  store i32 %v4_10648, i32* %r0.global-to-local, align 4
  %v2_10650 = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %dec_label_pc_10d98, %dec_label_pc_f9a0
  %stack_var_-1880.0 = phi i32 [ %v2_10650, %dec_label_pc_f9a0 ], [ %stack_var_-1880.1, %dec_label_pc_10d98 ]
  %stack_var_-1876.0 = phi i16 [ %v5_f998.le, %dec_label_pc_f9a0 ], [ %stack_var_-1876.1, %dec_label_pc_10d98 ]
  store i32 ptrtoint (i32* @global_var_21480.144 to i32), i32* %r0.global-to-local, align 4
  %v2_1065c = load i32, i32* @global_var_21480.144, align 4
  store i32 %v2_1065c, i32* @r4, align 4
  %v0_10660 = load i32, i32* @fp, align 4
  %v3_10660 = icmp uge i32 %v0_10660, %v2_1065c
  store i1 %v3_10660, i1* %cpsr_c.global-to-local, align 1
  %v9_10660 = icmp eq i32 %v0_10660, %v2_1065c
  store i1 %v9_10660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10660, label %dec_label_pc_108e0, label %dec_label_pc_10668

dec_label_pc_10668:                               ; preds = %dec_label_pc_10658
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_10670 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_10674

dec_label_pc_10674:                               ; preds = %.thread39, %dec_label_pc_10668
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_10688 = call i32 @function_f190()
  %v1_10688 = trunc i32 %v0_10688 to i16
  store i32 %v0_10688, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %r2.global-to-local, align 4
  %v2_10694 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_10694, i32* %r3.global-to-local, align 4
  store i16 %v1_10688, i16* bitcast (i32* @global_var_21454.165 to i16*), align 4
  store i32 %v2_10694, i32* @global_var_2145c.508, align 4
  br label %dec_label_pc_106a0

dec_label_pc_106a0:                               ; preds = %dec_label_pc_10774, %dec_label_pc_106d0, %dec_label_pc_107a8, %dec_label_pc_1079c, %dec_label_pc_10790, %dec_label_pc_10784, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_1076c, %dec_label_pc_10764, %bb359, %dec_label_pc_10734, %dec_label_pc_10710, %bb352, %dec_label_pc_106e0, %bb351, %dec_label_pc_106c8, %bb350, %bb369, %dec_label_pc_10674
  %v0_106a0 = call i32 @function_f190()
  store i32 %v0_106a0, i32* %r0.global-to-local, align 4
  %v1_106a4 = urem i32 %v0_106a0, 256
  store i32 %v1_106a4, i32* %r1.global-to-local, align 4
  %v3_106a8 = udiv i32 %v0_106a0, 256
  store i32 %v3_106a8, i32* %r3.global-to-local, align 4
  %v3_106ac = udiv i32 %v0_106a0, 65536
  store i32 %v3_106ac, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106b0 = icmp eq i32 %v1_106a4, 0
  store i1 %v2_106b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106b0, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_106a0
  %v3_106b4 = icmp ugt i32 %v1_106a4, 126
  store i1 %v3_106b4, i1* %cpsr_c.global-to-local, align 1
  %v8_106b4 = icmp eq i32 %v1_106a4, 127
  store i1 %v8_106b4, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_106a0, %bb349
  %v0_106c4 = phi i1 [ true, %dec_label_pc_106a0 ], [ %v8_106b4, %bb349 ]
  %v1_106b8 = urem i32 %v3_106a8, 256
  store i32 %v1_106b8, i32* %ip.global-to-local, align 4
  %v1_106bc = urem i32 %v3_106ac, 256
  store i32 %v1_106bc, i32* %r2.global-to-local, align 4
  %v1_106c0 = and i32 %v0_106a0, 8388608
  %v2_106c0 = icmp ne i32 %v1_106c0, 0
  store i1 %v2_106c0, i1* %cpsr_c.global-to-local, align 1
  %v3_106c0 = udiv i32 %v0_106a0, 16777216
  store i32 %v3_106c0, i32* %r0.global-to-local, align 4
  br i1 %v0_106c4, label %dec_label_pc_106a0, label %dec_label_pc_106c8

dec_label_pc_106c8:                               ; preds = %bb350
  %v2_106c8 = icmp ugt i32 %v1_106a4, 2
  store i1 %v2_106c8, i1* %cpsr_c.global-to-local, align 1
  %v7_106c8 = icmp eq i32 %v1_106a4, 3
  store i1 %v7_106c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106c8, label %dec_label_pc_106a0, label %dec_label_pc_106d0

dec_label_pc_106d0:                               ; preds = %dec_label_pc_106c8
  %v1_106d0 = add nsw i32 %v1_106a4, -15
  store i32 %v1_106d0, i32* %r3.global-to-local, align 4
  %v2_106d4 = icmp ugt i32 %v1_106a4, 55
  store i1 %v2_106d4, i1* %cpsr_c.global-to-local, align 1
  %v7_106d4 = icmp eq i32 %v1_106a4, 56
  store i1 %v7_106d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106d4, label %dec_label_pc_106a0, label %bb351

bb351:                                            ; preds = %dec_label_pc_106d0
  %v3_106d8 = icmp ne i32 %v1_106d0, 0
  store i1 %v3_106d8, i1* %cpsr_c.global-to-local, align 1
  %v8_106d8 = icmp eq i32 %v1_106d0, 1
  store i1 %v8_106d8, i1* %cpsr_z.global-to-local, align 1
  %v2_106dc = xor i1 %v3_106d8, true
  %v3_106dc = or i1 %v8_106d8, %v2_106dc
  br i1 %v3_106dc, label %dec_label_pc_106a0, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %bb351
  %v2_106e0 = icmp ugt i32 %v1_106a4, 9
  store i1 %v2_106e0, i1* %cpsr_c.global-to-local, align 1
  %v7_106e0 = icmp eq i32 %v1_106a4, 10
  store i1 %v7_106e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e0, label %dec_label_pc_106a0, label %dec_label_pc_106e8

dec_label_pc_106e8:                               ; preds = %dec_label_pc_106e0
  %v2_106e8 = icmp ugt i32 %v1_106a4, 191
  store i1 %v2_106e8, i1* %cpsr_c.global-to-local, align 1
  %v7_106e8 = icmp eq i32 %v1_106a4, 192
  store i1 %v7_106e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e8, label %bb352, label %dec_label_pc_106f4

bb352:                                            ; preds = %dec_label_pc_106e8
  %v3_106ec = icmp ugt i32 %v1_106b8, 167
  store i1 %v3_106ec, i1* %cpsr_c.global-to-local, align 1
  %v8_106ec = icmp eq i32 %v1_106b8, 168
  store i1 %v8_106ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106ec, label %dec_label_pc_106a0, label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106e8, %bb352
  %v7_106f4 = icmp eq i32 %v1_106a4, 172
  %.429 = zext i1 %v7_106f4 to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_10700 = icmp ugt i32 %v1_106b8, 14
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  %v7_10700 = icmp eq i32 %v1_106b8, 15
  store i1 %v7_10700, i1* %cpsr_z.global-to-local, align 1
  %v2_10704 = xor i1 %v2_10700, true
  %v3_10704 = or i1 %v7_10700, %v2_10704
  br i1 %v3_10704, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_106f4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10718

bb355:                                            ; preds = %dec_label_pc_106f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10708 = icmp eq i1 %v7_106f4, false
  store i1 %v2_10708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10708, label %dec_label_pc_10718, label %dec_label_pc_10710

dec_label_pc_10710:                               ; preds = %bb355
  %v2_10710 = icmp ugt i32 %v1_106b8, 30
  store i1 %v2_10710, i1* %cpsr_c.global-to-local, align 1
  %v7_10710 = icmp eq i32 %v1_106b8, 31
  store i1 %v7_10710, i1* %cpsr_z.global-to-local, align 1
  %v2_10714 = xor i1 %v2_10710, true
  %v3_10714 = or i1 %v7_10710, %v2_10714
  br i1 %v3_10714, label %dec_label_pc_106a0, label %dec_label_pc_10718

dec_label_pc_10718:                               ; preds = %.thread8, %dec_label_pc_10710, %bb355
  %v7_10718 = icmp eq i32 %v1_106a4, 100
  %.430 = zext i1 %v7_10718 to i32
  store i32 %.430, i32* %r3.global-to-local, align 4
  %v2_10724 = icmp ugt i32 %v1_106b8, 62
  store i1 %v2_10724, i1* %cpsr_c.global-to-local, align 1
  %v7_10724 = icmp eq i32 %v1_106b8, 63
  store i1 %v7_10724, i1* %cpsr_z.global-to-local, align 1
  %v2_10728 = xor i1 %v2_10724, true
  %v3_10728 = or i1 %v7_10724, %v2_10728
  br i1 %v3_10728, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_10718
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1073c

bb358:                                            ; preds = %dec_label_pc_10718
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1072c = icmp eq i1 %v7_10718, false
  store i1 %v2_1072c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1072c, label %dec_label_pc_1073c, label %dec_label_pc_10734

dec_label_pc_10734:                               ; preds = %bb358
  %v2_10734 = icmp ugt i32 %v1_106b8, 125
  store i1 %v2_10734, i1* %cpsr_c.global-to-local, align 1
  %v7_10734 = icmp eq i32 %v1_106b8, 126
  store i1 %v7_10734, i1* %cpsr_z.global-to-local, align 1
  %v2_10738 = xor i1 %v2_10734, true
  %v3_10738 = or i1 %v7_10734, %v2_10738
  br i1 %v3_10738, label %dec_label_pc_106a0, label %dec_label_pc_1073c

dec_label_pc_1073c:                               ; preds = %.thread13, %dec_label_pc_10734, %bb358
  %v2_1073c = icmp ugt i32 %v1_106a4, 168
  store i1 %v2_1073c, i1* %cpsr_c.global-to-local, align 1
  %v7_1073c = icmp eq i32 %v1_106a4, 169
  store i1 %v7_1073c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1073c, label %bb359, label %dec_label_pc_10748

bb359:                                            ; preds = %dec_label_pc_1073c
  %v3_10740 = icmp eq i32 %v1_106b8, 255
  store i1 %v3_10740, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10740, label %dec_label_pc_106a0, label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_1073c, %bb359
  %v7_10748 = icmp eq i32 %v1_106a4, 198
  %.431 = zext i1 %v7_10748 to i32
  store i32 %.431, i32* %r3.global-to-local, align 4
  %v2_10754 = icmp ugt i32 %v1_106b8, 16
  store i1 %v2_10754, i1* %cpsr_c.global-to-local, align 1
  %v7_10754 = icmp eq i32 %v1_106b8, 17
  store i1 %v7_10754, i1* %cpsr_z.global-to-local, align 1
  %v2_10758 = xor i1 %v2_10754, true
  %v3_10758 = or i1 %v7_10754, %v2_10758
  br i1 %v3_10758, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_10748
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1076c

bb362:                                            ; preds = %dec_label_pc_10748
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1075c = icmp eq i1 %v7_10748, false
  store i1 %v2_1075c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1075c, label %dec_label_pc_1076c, label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %bb362
  %v2_10764 = icmp ugt i32 %v1_106b8, 18
  store i1 %v2_10764, i1* %cpsr_c.global-to-local, align 1
  %v7_10764 = icmp eq i32 %v1_106b8, 19
  store i1 %v7_10764, i1* %cpsr_z.global-to-local, align 1
  %v2_10768 = xor i1 %v2_10764, true
  %v3_10768 = or i1 %v7_10764, %v2_10768
  br i1 %v3_10768, label %dec_label_pc_106a0, label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %.thread19, %dec_label_pc_10764, %bb362
  %v2_1076c = icmp ugt i32 %v1_106a4, 222
  store i1 %v2_1076c, i1* %cpsr_c.global-to-local, align 1
  %v7_1076c = icmp eq i32 %v1_106a4, 223
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  %v2_10770 = xor i1 %v7_1076c, true
  %v3_10770 = and i1 %v2_1076c, %v2_10770
  br i1 %v3_10770, label %dec_label_pc_106a0, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %dec_label_pc_1076c
  %v1_10774 = add nsw i32 %v1_106a4, -6
  store i32 %v1_10774, i32* %r3.global-to-local, align 4
  %v2_10778 = icmp ugt i32 %v1_106a4, 10
  store i1 %v2_10778, i1* %cpsr_c.global-to-local, align 1
  %v7_10778 = icmp eq i32 %v1_106a4, 11
  store i1 %v7_10778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10778, label %dec_label_pc_106a0, label %bb363

bb363:                                            ; preds = %dec_label_pc_10774
  %v3_1077c = icmp ne i32 %v1_10774, 0
  store i1 %v3_1077c, i1* %cpsr_c.global-to-local, align 1
  %v8_1077c = icmp eq i32 %v1_10774, 1
  store i1 %v8_1077c, i1* %cpsr_z.global-to-local, align 1
  %v2_10780 = xor i1 %v3_1077c, true
  %v3_10780 = or i1 %v8_1077c, %v2_10780
  br i1 %v3_10780, label %dec_label_pc_106a0, label %dec_label_pc_10784

dec_label_pc_10784:                               ; preds = %bb363
  %v2_10784 = icmp ugt i32 %v1_106a4, 21
  store i1 %v2_10784, i1* %cpsr_c.global-to-local, align 1
  %v7_10784 = icmp eq i32 %v1_106a4, 22
  store i1 %v7_10784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10784, label %dec_label_pc_106a0, label %bb364

bb364:                                            ; preds = %dec_label_pc_10784
  %v3_10788 = icmp ugt i32 %v1_106a4, 20
  store i1 %v3_10788, i1* %cpsr_c.global-to-local, align 1
  %v8_10788 = icmp eq i32 %v1_106a4, 21
  store i1 %v8_10788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10788, label %dec_label_pc_106a0, label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %bb364
  %v2_10790 = icmp ugt i32 %v1_106a4, 27
  store i1 %v2_10790, i1* %cpsr_c.global-to-local, align 1
  %v7_10790 = icmp eq i32 %v1_106a4, 28
  store i1 %v7_10790, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10790, label %dec_label_pc_106a0, label %bb365

bb365:                                            ; preds = %dec_label_pc_10790
  %v3_10794 = icmp ugt i32 %v1_106a4, 25
  store i1 %v3_10794, i1* %cpsr_c.global-to-local, align 1
  %v8_10794 = icmp eq i32 %v1_106a4, 26
  store i1 %v8_10794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10794, label %dec_label_pc_106a0, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %bb365
  %v2_1079c = icmp ugt i32 %v1_106a4, 29
  store i1 %v2_1079c, i1* %cpsr_c.global-to-local, align 1
  %v7_1079c = icmp eq i32 %v1_106a4, 30
  store i1 %v7_1079c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1079c, label %dec_label_pc_106a0, label %bb366

bb366:                                            ; preds = %dec_label_pc_1079c
  %v3_107a0 = icmp ugt i32 %v1_106a4, 28
  store i1 %v3_107a0, i1* %cpsr_c.global-to-local, align 1
  %v8_107a0 = icmp eq i32 %v1_106a4, 29
  store i1 %v8_107a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107a0, label %dec_label_pc_106a0, label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %bb366
  %v2_107a8 = icmp ugt i32 %v1_106a4, 54
  store i1 %v2_107a8, i1* %cpsr_c.global-to-local, align 1
  %v7_107a8 = icmp eq i32 %v1_106a4, 55
  store i1 %v7_107a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107a8, label %dec_label_pc_106a0, label %bb367

bb367:                                            ; preds = %dec_label_pc_107a8
  %v3_107ac = icmp ugt i32 %v1_106a4, 32
  store i1 %v3_107ac, i1* %cpsr_c.global-to-local, align 1
  %v8_107ac = icmp eq i32 %v1_106a4, 33
  store i1 %v8_107ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107ac, label %dec_label_pc_106a0, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %bb367
  %v2_107b4 = icmp ugt i32 %v1_106a4, 214
  store i1 %v2_107b4, i1* %cpsr_c.global-to-local, align 1
  %v7_107b4 = icmp eq i32 %v1_106a4, 215
  store i1 %v7_107b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107b4, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_107b4
  %v3_107b8 = icmp ugt i32 %v1_106a4, 213
  store i1 %v3_107b8, i1* %cpsr_c.global-to-local, align 1
  %v8_107b8 = icmp eq i32 %v1_106a4, 214
  store i1 %v8_107b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107b8, label %bb369, label %dec_label_pc_107c8

.thread30:                                        ; preds = %dec_label_pc_107b4
  br label %dec_label_pc_106a0

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_106a0

dec_label_pc_107c8:                               ; preds = %bb368
  %v5_107d4 = call i32 @llvm.bswap.i32(i32 %v0_106a0)
  store i32 %v5_107d4, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_106a0, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_107dc = udiv i32 %v5_107d4, 16777216
  %tmp372 = and i32 %v0_106a0, 16711680
  %tmp373 = call i32 @llvm.bswap.i32(i32 %tmp372)
  %v4_107e4 = udiv i32 %tmp371, 256
  %v4_107e8 = mul nuw nsw i32 %tmp373, 256
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* @r0, align 4
  %tmp374 = and i32 %v0_106a0, 65536
  %v3_107f0 = icmp ne i32 %tmp374, 0
  store i1 %v3_107f0, i1* %cpsr_c.global-to-local, align 1
  %v4_107f0 = mul i32 %v5_107d4, 16777216
  %v5_107e4 = or i32 %v4_107f0, %v3_107dc
  %v5_107e8 = or i32 %v5_107e4, %v4_107e4
  %v5_107f0 = or i32 %v5_107e8, %v4_107e8
  store i32 %v5_107f0, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_2145a.509 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_107f0, i32* @global_var_21460.510, align 4
  %v3_10800 = call i32 @function_dd58(i32 ptrtoint (i8** @global_var_21450.159 to i32), i32 20)
  store i32 %v3_10800, i32* %r0.global-to-local, align 4
  %v3_10804 = load i16, i16* %stack_var_-52, align 2
  %v4_10804 = sext i16 %v3_10804 to i32
  store i32 %v4_10804, i32* %r1.global-to-local, align 4
  %tmp531 = sdiv i16 %v3_10804, 10
  %v5_10814 = zext i16 %tmp531 to i32
  %v3_10818 = mul nuw nsw i32 %v5_10814, 8
  store i32 %v3_10818, i32* %r2.global-to-local, align 4
  %v2_10820 = mul nuw nsw i32 %v5_10814, 10
  store i32 %v2_10820, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %ip.global-to-local, align 4
  %v3_10828 = icmp uge i32 %v4_10804, %v2_10820
  store i1 %v3_10828, i1* %cpsr_c.global-to-local, align 1
  %v9_10828 = icmp eq i32 %v4_10804, %v2_10820
  store i1 %v9_10828, i1* %cpsr_z.global-to-local, align 1
  %v1_1082c = trunc i32 %v3_10800 to i16
  store i16 %v1_1082c, i16* bitcast (i32* @global_var_2145a.509 to i16*), align 4
  br i1 %v9_10828, label %bb375, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_107c8
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_21464.162 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb375:                                            ; preds = %dec_label_pc_107c8
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_21464.162 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb375
  %v4_10850 = load i32, i32* @global_var_21460.510, align 4
  store i32 %v4_10850, i32* @global_var_21468.512, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_21474.513 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_21464.162 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_10870 = call i32 @function_dda8(i32 ptrtoint (i8** @global_var_21450.159 to i32), i32 ptrtoint (i32* @global_var_21464.162 to i32), i32 5120, i32 20)
  %v6_10870 = trunc i32 %v5_10870 to i16
  store i32 ptrtoint (i8** @global_var_21450.159 to i32), i32* %r1.global-to-local, align 4
  %v2_1087c = load i32, i32* @global_var_234d0.157, align 4
  store i16 %v6_10870, i16* bitcast (i32* @global_var_21474.513 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 %v2_10670, i32* %ip.global-to-local, align 4
  store i32 %v2_1087c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_108c4 = call i32 @function_13840(i32 %v2_1087c, i32 ptrtoint (i8** @global_var_21450.159 to i32), i32 40, i32 16384, i32 %v2_10670, i32 16)
  store i32 %v7_108c4, i32* %r0.global-to-local, align 4
  %v3_108c8 = load i16, i16* %stack_var_-52, align 2
  %v4_108c8 = sext i16 %v3_108c8 to i32
  %v1_108cc = add nsw i32 %v4_108c8, 1
  store i32 %v1_108cc, i32* %r3.global-to-local, align 4
  %v3_108d0 = icmp ugt i32 %v1_108cc, 383
  store i1 %v3_108d0, i1* %cpsr_c.global-to-local, align 1
  %v8_108d0 = icmp eq i32 %v1_108cc, 384
  store i1 %v8_108d0, i1* %cpsr_z.global-to-local, align 1
  %v5_108d4 = trunc i32 %v1_108cc to i16
  store i16 %v5_108d4, i16* %stack_var_-52, align 2
  %v5_108d8 = icmp slt i32 %v1_108cc, 384
  br i1 %v5_108d8, label %dec_label_pc_10674, label %dec_label_pc_108dc

dec_label_pc_108dc:                               ; preds = %.thread39
  %v0_108dc = load i32, i32* @r4, align 4
  store i32 %v0_108dc, i32* @fp, align 4
  br label %dec_label_pc_108e0

dec_label_pc_108e0:                               ; preds = %dec_label_pc_10658, %dec_label_pc_108dc
  %v0_108e0 = call i32 @function_134dc()
  store i32 %v0_108e0, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_108f0 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_108f0, i32* @r4, align 4
  %v1_10944 = add i32 %stack_var_-1880.0, 16
  %v2_10944 = inttoptr i32 %v1_10944 to i32*
  %v1_10958 = add i32 %stack_var_-1880.0, 9
  %v2_10958 = inttoptr i32 %v1_10958 to i8*
  %v4_10984 = sext i16 %stack_var_-1876.0 to i32
  %v1_109ec = add i32 %stack_var_-1880.0, 12
  %v2_109ec = inttoptr i32 %v1_109ec to i32*
  br label %dec_label_pc_108f4

dec_label_pc_108f4:                               ; preds = %dec_label_pc_109b4, %dec_label_pc_109ac, %dec_label_pc_109a4, %dec_label_pc_10980, %dec_label_pc_10970, %dec_label_pc_10954, %dec_label_pc_1093c, %dec_label_pc_1099c, %dec_label_pc_10990, %dec_label_pc_10934, %dec_label_pc_10a6c, %dec_label_pc_108e0
  %v1_108f8 = phi i32 [ %v0_108e0, %dec_label_pc_108e0 ], [ %v1_108f8.pre.pre, %dec_label_pc_10a6c ], [ %v0_10928, %dec_label_pc_10934 ], [ %v0_10928, %dec_label_pc_10990 ], [ %v0_10928, %dec_label_pc_1099c ], [ %v0_10928, %dec_label_pc_1093c ], [ %v0_10928, %dec_label_pc_10954 ], [ %v0_10928, %dec_label_pc_10970 ], [ %v0_10928, %dec_label_pc_10980 ], [ %v0_10928, %dec_label_pc_109a4 ], [ %v0_10928, %dec_label_pc_109ac ], [ %v0_10928, %dec_label_pc_109b4 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_108f8 = inttoptr i32 %v1_108f8 to i32*
  store i32 0, i32* %v2_108f8, align 4
  %v2_10904 = load i32, i32* @global_var_234d0.157, align 4
  store i32 %v2_10904, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10914 = load i32, i32* %ip.global-to-local, align 4
  %v6_1091c = call i32 @function_137cc(i32 %v2_10904, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_10914, i32 %v0_10914)
  store i32 %v6_1091c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10920 = icmp eq i32 %v6_1091c, 0
  store i1 %v2_10920, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v6_1091c, 1
  br i1 %tmp376, label %dec_label_pc_10a90, label %dec_label_pc_10928

dec_label_pc_10928:                               ; preds = %dec_label_pc_108f4
  %v0_10928 = load i32, i32* @sb, align 4
  %v1_10928 = inttoptr i32 %v0_10928 to i32*
  %v2_10928 = load i32, i32* %v1_10928, align 4
  store i32 %v2_10928, i32* %r3.global-to-local, align 4
  %v2_1092c = icmp ugt i32 %v2_10928, 10
  store i1 %v2_1092c, i1* %cpsr_c.global-to-local, align 1
  %v7_1092c = icmp eq i32 %v2_10928, 11
  store i1 %v7_1092c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1092c, label %dec_label_pc_10a90, label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_10928
  %v2_10934 = icmp ugt i32 %v6_1091c, 38
  store i1 %v2_10934, i1* %cpsr_c.global-to-local, align 1
  %v7_10934 = icmp eq i32 %v6_1091c, 39
  store i1 %v7_10934, i1* %cpsr_z.global-to-local, align 1
  %v2_10938 = xor i1 %v2_10934, true
  %v3_10938 = or i1 %v7_10934, %v2_10938
  br i1 %v3_10938, label %dec_label_pc_108f4, label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %dec_label_pc_10934
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_234b4.78 to i32), i32* %ip.global-to-local, align 4
  %v3_10944 = load i32, i32* %v2_10944, align 4
  store i32 %v3_10944, i32* %r2.global-to-local, align 4
  %v2_10948 = load i32, i32* @global_var_234b4.78, align 4
  store i32 %v2_10948, i32* %r3.global-to-local, align 4
  %v3_1094c = icmp uge i32 %v3_10944, %v2_10948
  store i1 %v3_1094c, i1* %cpsr_c.global-to-local, align 1
  %v9_1094c = icmp eq i32 %v3_10944, %v2_10948
  store i1 %v9_1094c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1094c, label %dec_label_pc_10954, label %dec_label_pc_108f4

dec_label_pc_10954:                               ; preds = %dec_label_pc_1093c
  %v3_10958 = load i8, i8* %v2_10958, align 1
  %v4_10958 = zext i8 %v3_10958 to i32
  store i32 %v4_10958, i32* %r3.global-to-local, align 4
  %v2_1095c = icmp ugt i8 %v3_10958, 5
  store i1 %v2_1095c, i1* %cpsr_c.global-to-local, align 1
  %v7_1095c = icmp eq i8 %v3_10958, 6
  store i1 %v7_1095c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1095c, label %dec_label_pc_10964, label %dec_label_pc_108f4

dec_label_pc_10964:                               ; preds = %dec_label_pc_10954
  %v0_10964 = load i32, i32* @r4, align 4
  %v1_10964 = inttoptr i32 %v0_10964 to i16*
  %v2_10964 = load i16, i16* %v1_10964, align 2
  %v3_10964 = zext i16 %v2_10964 to i32
  store i32 %v3_10964, i32* %ip.global-to-local, align 4
  %v2_10968 = icmp ugt i16 %v2_10964, 5887
  store i1 %v2_10968, i1* %cpsr_c.global-to-local, align 1
  %v7_10968 = icmp eq i16 %v2_10964, 5888
  store i1 %v7_10968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10968, label %dec_label_pc_10980, label %dec_label_pc_10970

dec_label_pc_10970:                               ; preds = %dec_label_pc_10964
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_10978 = icmp ugt i16 %v2_10964, 4872
  store i1 %v3_10978, i1* %cpsr_c.global-to-local, align 1
  %v9_10978 = icmp eq i16 %v2_10964, 4873
  store i1 %v9_10978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10978, label %dec_label_pc_10980, label %dec_label_pc_108f4

dec_label_pc_10980:                               ; preds = %dec_label_pc_10970, %dec_label_pc_10964
  %v1_10980 = add i32 %v0_10964, 2
  %v2_10980 = inttoptr i32 %v1_10980 to i16*
  %v3_10980 = load i16, i16* %v2_10980, align 2
  %v4_10980 = zext i16 %v3_10980 to i32
  store i32 %v4_10980, i32* %r3.global-to-local, align 4
  store i32 %v4_10984, i32* %r0.global-to-local, align 4
  %v3_10988 = icmp uge i32 %v4_10980, %v4_10984
  store i1 %v3_10988, i1* %cpsr_c.global-to-local, align 1
  %v9_10988 = icmp eq i32 %v4_10980, %v4_10984
  store i1 %v9_10988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10988, label %dec_label_pc_10990, label %dec_label_pc_108f4

dec_label_pc_10990:                               ; preds = %dec_label_pc_10980
  %v1_10990 = add i32 %v0_10964, 13
  %v2_10990 = inttoptr i32 %v1_10990 to i8*
  %v3_10990 = load i8, i8* %v2_10990, align 1
  %v4_10990 = zext i8 %v3_10990 to i32
  store i32 %v4_10990, i32* %r3.global-to-local, align 4
  %v1_10994 = and i32 %v4_10990, 2
  %v2_10994 = icmp eq i32 %v1_10994, 0
  store i1 %v2_10994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10994, label %dec_label_pc_108f4, label %dec_label_pc_1099c

dec_label_pc_1099c:                               ; preds = %dec_label_pc_10990
  %v1_1099c = and i32 %v4_10990, 16
  %v2_1099c = icmp eq i32 %v1_1099c, 0
  store i1 %v2_1099c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1099c, label %dec_label_pc_108f4, label %dec_label_pc_109a4

dec_label_pc_109a4:                               ; preds = %dec_label_pc_1099c
  %v1_109a4 = and i32 %v4_10990, 4
  %v2_109a4 = icmp eq i32 %v1_109a4, 0
  store i1 %v2_109a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109a4, label %dec_label_pc_109ac, label %dec_label_pc_108f4

dec_label_pc_109ac:                               ; preds = %dec_label_pc_109a4
  %tmp532 = urem i8 %v3_10990, 2
  %v2_109ac = icmp eq i8 %tmp532, 0
  store i1 %v2_109ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109ac, label %dec_label_pc_109b4, label %dec_label_pc_108f4

dec_label_pc_109b4:                               ; preds = %dec_label_pc_109ac
  %v1_109b4 = add i32 %v0_10964, 8
  %v2_109b4 = inttoptr i32 %v1_109b4 to i32*
  %v3_109b4 = load i32, i32* %v2_109b4, align 4
  %v5_109cc = call i32 @llvm.bswap.i32(i32 %v3_109b4)
  %v1_109d0 = add i32 %v5_109cc, -1
  store i32 %v1_109d0, i32* %r2.global-to-local, align 4
  %v1_109d4 = and i32 %v1_109d0, 16711680
  store i32 %v1_109d4, i32* %r0.global-to-local, align 4
  %v3_109d8 = udiv i32 %v1_109d0, 16777216
  %v4_109e0 = udiv i32 %v1_109d4, 256
  %v5_109e0 = or i32 %v4_109e0, %v3_109d8
  %v1_109dc = mul i32 %v1_109d0, 256
  %v4_109e4 = and i32 %v1_109dc, 16711680
  %v5_109e4 = or i32 %v5_109e0, %v4_109e4
  store i32 %v5_109e4, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_109ec = load i32, i32* %v2_109ec, align 4
  store i32 %v3_109ec, i32* @lr, align 4
  %v5_109f0 = call i32 @llvm.bswap.i32(i32 %v1_109d0)
  store i32 %v5_109f0, i32* %r3.global-to-local, align 4
  %v3_109f4 = icmp uge i32 %v5_109f0, %v3_109ec
  store i1 %v3_109f4, i1* %cpsr_c.global-to-local, align 1
  %v9_109f4 = icmp eq i32 %v5_109f0, %v3_109ec
  store i1 %v9_109f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109f4, label %dec_label_pc_109fc, label %dec_label_pc_108f4

dec_label_pc_109fc:                               ; preds = %dec_label_pc_109b4
  %v0_109fc = load i32, i32* @r5, align 4
  %v2_109fc = icmp ugt i32 %v0_109fc, 254
  store i1 %v2_109fc, i1* %cpsr_c.global-to-local, align 1
  %v7_109fc = icmp eq i32 %v0_109fc, 255
  store i1 %v7_109fc, i1* %cpsr_z.global-to-local, align 1
  %v8_10a00 = icmp sgt i32 %v0_109fc, 255
  br i1 %v8_10a00, label %dec_label_pc_10a90, label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109fc
  %v2_10a0c = load i32, i32* @global_var_234cc.155, align 4
  store i32 %v2_10a0c, i32* %r1.global-to-local, align 4
  %v3_10a10 = mul i32 %v0_109fc, 256
  store i32 %v3_10a10, i32* %r2.global-to-local, align 4
  %v2_10a14 = mul i32 %v0_109fc, 288
  store i32 %v2_10a14, i32* %r3.global-to-local, align 4
  %v2_10a18 = add i32 %v2_10a0c, %v2_10a14
  store i32 %v2_10a18, i32* @r0, align 4
  %v1_10a1c = add i32 %v2_10a18, 12
  %v2_10a1c = inttoptr i32 %v1_10a1c to i32*
  %v3_10a1c = load i32, i32* %v2_10a1c, align 4
  store i32 %v3_10a1c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a20 = icmp eq i32 %v3_10a1c, 0
  store i1 %v2_10a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a20, label %dec_label_pc_10a64, label %dec_label_pc_10a40.preheader

dec_label_pc_10a40.preheader:                     ; preds = %dec_label_pc_10a04
  %v2_10a24 = add i32 %v0_109fc, 1
  %v2_10a2c = and i32 %v2_10a24, 134217728
  %v3_10a2c = icmp ne i32 %v2_10a2c, 0
  store i1 %v3_10a2c, i1* %cpsr_c.global-to-local, align 1
  %v3_10a30 = mul i32 %v2_10a24, 288
  %v3_10a34 = add i32 %v2_10a0c, %v3_10a30
  store i32 %v3_10a34, i32* %r3.global-to-local, align 4
  store i32 %v0_109fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a40.preheader, %dec_label_pc_10a4c
  %v0_10a4c = phi i32 [ %v3_10a34, %dec_label_pc_10a40.preheader ], [ %v1_10a58, %dec_label_pc_10a4c ]
  %v0_10a40 = phi i32 [ %v0_109fc, %dec_label_pc_10a40.preheader ], [ %v1_10a40, %dec_label_pc_10a4c ]
  %v1_10a40 = add i32 %v0_10a40, 1
  store i32 %v1_10a40, i32* %r2.global-to-local, align 4
  %v7_10a44 = icmp eq i32 %v1_10a40, 256
  br i1 %v7_10a44, label %dec_label_pc_10a90.loopexit, label %dec_label_pc_10a4c

dec_label_pc_10a4c:                               ; preds = %dec_label_pc_10a40
  store i32 %v0_10a4c, i32* @r0, align 4
  %v1_10a50 = add i32 %v0_10a4c, 12
  %v2_10a50 = inttoptr i32 %v1_10a50 to i32*
  %v3_10a50 = load i32, i32* %v2_10a50, align 4
  %v2_10a54 = icmp eq i32 %v3_10a50, 0
  %v1_10a58 = add i32 %v0_10a4c, 288
  store i32 %v1_10a58, i32* %r3.global-to-local, align 4
  br i1 %v2_10a54, label %dec_label_pc_10a60, label %dec_label_pc_10a40

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a4c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10a40, i32* @r5, align 4
  br label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a04, %dec_label_pc_10a60
  %v1_10a6c = phi i32 [ %v2_10a18, %dec_label_pc_10a04 ], [ %v0_10a4c, %dec_label_pc_10a60 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a64 = icmp eq i32 %v1_10a6c, 0
  store i1 %v2_10a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a64, label %dec_label_pc_10a90, label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a64
  %v2_10a6c = add i32 %v1_10a6c, 16
  %v3_10a6c = inttoptr i32 %v2_10a6c to i32*
  store i32 %v3_109ec, i32* %v3_10a6c, align 4
  %v0_10a70 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a70 = trunc i32 %v0_10a70 to i16
  %v2_10a70 = load i32, i32* @r0, align 4
  %v3_10a70 = add i32 %v2_10a70, 20
  %v4_10a70 = inttoptr i32 %v3_10a70 to i16*
  store i16 %v1_10a70, i16* %v4_10a70, align 2
  %v0_10a74 = call i32 @function_f34c()
  store i32 %v0_10a74, i32* %r0.global-to-local, align 4
  %v1_108f8.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_108f4

dec_label_pc_10a7c:                               ; preds = %dec_label_pc_f92c
  store i32 ptrtoint (i32* @global_var_234d0.157 to i32), i32* %ip.global-to-local, align 4
  %v2_10a80 = load i32, i32* @global_var_234d0.157, align 4
  store i32 %v2_10a80, i32* %r0.global-to-local, align 4
  %v1_10a84 = call i32 @function_130b4(i32 %v2_10a80)
  store i32 %v1_10a84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_f908, %dec_label_pc_10a7c
  %v0_10a88 = load i32, i32* @r5, align 4
  store i32 %v0_10a88, i32* %r0.global-to-local, align 4
  %v1_10a8c = call i32 @function_14f1c(i32 %v0_10a88)
  store i32 %v1_10a8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a90

dec_label_pc_10a90.loopexit:                      ; preds = %dec_label_pc_10a40
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10a90

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a64, %dec_label_pc_109fc, %dec_label_pc_10928, %dec_label_pc_108f4, %dec_label_pc_10a90.loopexit, %dec_label_pc_10a88
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_10a88 ], [ %stack_var_-1880.0, %dec_label_pc_10a90.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_108f4 ], [ %stack_var_-1880.0, %dec_label_pc_10928 ], [ %stack_var_-1880.0, %dec_label_pc_109fc ], [ %stack_var_-1880.0, %dec_label_pc_10a64 ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_10a88 ], [ %stack_var_-1876.0, %dec_label_pc_10a90.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_108f4 ], [ %stack_var_-1876.0, %dec_label_pc_10928 ], [ %stack_var_-1876.0, %dec_label_pc_109fc ], [ %stack_var_-1876.0, %dec_label_pc_10a64 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10aac486 = load i32, i32* @sp, align 4
  %v3_10aac487 = add i32 %v2_10aac486, 1668
  %v4_10aac488 = inttoptr i32 %v3_10aac487 to i32*
  store i32 0, i32* %v4_10aac488, align 4
  br label %dec_label_pc_10a9c.dec_label_pc_10a9c_crit_edge

dec_label_pc_10a9c.dec_label_pc_10a9c_crit_edge:  ; preds = %dec_label_pc_10a90, %dec_label_pc_10a9c.dec_label_pc_10a9c_crit_edge
  %v0_10a9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10a9c = add i32 %v0_10a9c.pre, 1664
  store i32 %v1_10a9c, i32* %ip.global-to-local, align 4
  %v1_10aa0 = add i32 %v0_10a9c.pre, 4
  store i32 %v1_10aa0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_10aa8 = icmp eq i32 %v1_10aa0, 128
  %v2_10aac = load i32, i32* @sp, align 4
  %v3_10aac = add i32 %v2_10aac, %v1_10a9c
  %v4_10aac = inttoptr i32 %v3_10aac to i32*
  store i32 0, i32* %v4_10aac, align 4
  br i1 %v7_10aa8, label %dec_label_pc_10ab4, label %dec_label_pc_10a9c.dec_label_pc_10a9c_crit_edge

dec_label_pc_10ab4:                               ; preds = %dec_label_pc_10a9c.dec_label_pc_10a9c_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10ab4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10ab4, i32* %stack_var_-352, align 4
  %v1_10abc480 = add i32 %v0_10ab4, 1540
  store i32 %v1_10abc480, i32* @lr, align 4
  %v1_10ac0481 = add i32 %v0_10ab4, 8
  store i32 %v1_10ac0481, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_10ac8482 = icmp eq i32 %v1_10ac0481, 128
  %v2_10acc483 = load i32, i32* @sp, align 4
  %v3_10acc484 = add i32 %v2_10acc483, %v1_10abc480
  %v4_10acc485 = inttoptr i32 %v3_10acc484 to i32*
  store i32 0, i32* %v4_10acc485, align 4
  br i1 %v7_10ac8482, label %dec_label_pc_10ad4, label %dec_label_pc_10abc.dec_label_pc_10abc_crit_edge

dec_label_pc_10abc.dec_label_pc_10abc_crit_edge:  ; preds = %dec_label_pc_10ab4, %dec_label_pc_10abc.dec_label_pc_10abc_crit_edge
  %v0_10abc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10abc = add i32 %v0_10abc.pre, 1536
  store i32 %v1_10abc, i32* @lr, align 4
  %v1_10ac0 = add i32 %v0_10abc.pre, 4
  store i32 %v1_10ac0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_10ac8 = icmp eq i32 %v1_10ac0, 128
  %v2_10acc = load i32, i32* @sp, align 4
  %v3_10acc = add i32 %v2_10acc, %v1_10abc
  %v4_10acc = inttoptr i32 %v3_10acc to i32*
  store i32 0, i32* %v4_10acc, align 4
  br i1 %v7_10ac8, label %dec_label_pc_10ad4, label %dec_label_pc_10abc.dec_label_pc_10abc_crit_edge

dec_label_pc_10ad4:                               ; preds = %dec_label_pc_10abc.dec_label_pc_10abc_crit_edge, %dec_label_pc_10ab4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10ad4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10ad4, i32* @r6, align 4
  store i32 %v0_10ad4, i32* @r5, align 4
  %v5_10adc = trunc i32 %v0_10ad4 to i16
  store i16 %v5_10adc, i16* %stack_var_-52, align 2
  %v2_118f0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10b34

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10b64
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10b50, i1* %cpsr_z.global-to-local, align 1
  %v1_118e0 = add i32 %v2_10b48, 4
  %v2_118e0 = inttoptr i32 %v1_118e0 to i32*
  %v3_118e0 = load i32, i32* %v2_118e0, align 4
  br i1 %v7_10b50, label %dec_label_pc_118e0, label %dec_label_pc_10aec

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10ae4
  store i32 %v3_118e0, i32* %ip.global-to-local, align 4
  %v3_10af4 = udiv i32 %v3_118e0, 32
  store i32 %v2_118f0, i32* %r0.global-to-local, align 4
  %v3_10afc = mul nuw nsw i32 %v3_10af4, 4
  %v2_10b00 = add i32 %v3_10afc, %v2_118f0
  store i32 %v2_10b00, i32* %r3.global-to-local, align 4
  %v1_10b04 = add i32 %v2_10b00, -184
  %v2_10b04 = inttoptr i32 %v1_10b04 to i32*
  %v3_10b04 = load i32, i32* %v2_10b04, align 4
  %v1_10b08 = urem i32 %v3_118e0, 32
  store i32 %v1_10b08, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10b10 = shl i32 1, %v1_10b08
  %v8_10b10 = or i32 %v3_10b04, %v7_10b10
  store i32 %v8_10b10, i32* %r2.global-to-local, align 4
  store i32 %v8_10b10, i32* %v2_10b04, align 4
  %v0_10b18 = load i32, i32* @r6, align 4
  %v1_10b18 = load i32, i32* %ip.global-to-local, align 4
  %v3_10b18 = icmp uge i32 %v0_10b18, %v1_10b18
  store i1 %v3_10b18, i1* %cpsr_c.global-to-local, align 1
  %v9_10b18 = icmp eq i32 %v0_10b18, %v1_10b18
  store i1 %v9_10b18, i1* %cpsr_z.global-to-local, align 1
  %v5_10b1c = icmp slt i32 %v0_10b18, %v1_10b18
  br i1 %v5_10b1c, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_10aec
  store i32 %v1_10b18, i32* @r6, align 4
  br label %bb378

bb378:                                            ; preds = %.thread56, %bb384, %bb382, %dec_label_pc_10bc8, %bb428, %dec_label_pc_10aec, %bb377
  %v3_10b20 = load i16, i16* %stack_var_-52, align 2
  %v4_10b20 = sext i16 %v3_10b20 to i32
  store i32 %v4_10b20, i32* %r3.global-to-local, align 4
  %v1_10b24 = add nsw i32 %v4_10b20, 1
  store i32 %v1_10b24, i32* %r2.global-to-local, align 4
  %v2_10b28 = icmp ugt i32 %v1_10b24, 254
  store i1 %v2_10b28, i1* %cpsr_c.global-to-local, align 1
  %v7_10b28 = icmp eq i32 %v1_10b24, 255
  store i1 %v7_10b28, i1* %cpsr_z.global-to-local, align 1
  %v5_10b2c = trunc i32 %v1_10b24 to i16
  store i16 %v5_10b2c, i16* %stack_var_-52, align 2
  %v8_10b30 = icmp sgt i16 %v3_10b20, 254
  br i1 %v8_10b30, label %dec_label_pc_10bd4, label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %bb378, %dec_label_pc_10ad4
  %v0_10b40 = phi i32 [ %v1_10b24, %bb378 ], [ %v0_10ad4, %dec_label_pc_10ad4 ]
  store i32 ptrtoint (i32* @global_var_234cc.155 to i32), i32* %r0.global-to-local, align 4
  %v3_10b38 = mul i32 %v0_10b40, 256
  store i32 %v3_10b38, i32* %r3.global-to-local, align 4
  %v2_10b3c = load i32, i32* @global_var_234cc.155, align 4
  store i32 %v2_10b3c, i32* %r1.global-to-local, align 4
  %v2_10b44 = mul i32 %v0_10b40, 288
  store i32 %v2_10b44, i32* %r2.global-to-local, align 4
  %v2_10b48 = add i32 %v2_10b3c, %v2_10b44
  store i32 %v2_10b48, i32* @r4, align 4
  %v1_10b4c = add i32 %v2_10b48, 12
  %v2_10b4c = inttoptr i32 %v1_10b4c to i32*
  %v3_10b4c = load i32, i32* %v2_10b4c, align 4
  store i32 %v3_10b4c, i32* %ip.global-to-local, align 4
  %v2_10b50 = icmp ne i32 %v3_10b4c, 0
  store i1 %v2_10b50, i1* %cpsr_c.global-to-local, align 1
  %v7_10b50 = icmp eq i32 %v3_10b4c, 1
  store i1 %v7_10b50, i1* %cpsr_z.global-to-local, align 1
  %v2_10b54 = xor i1 %v2_10b50, true
  %v3_10b54 = or i1 %v7_10b50, %v2_10b54
  br i1 %v3_10b54, label %bb379, label %bb380

bb379:                                            ; preds = %dec_label_pc_10b34
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb380

bb380:                                            ; preds = %dec_label_pc_10b34, %bb379
  %v1_10b74173 = phi i32 [ %v2_10b3c, %dec_label_pc_10b34 ], [ 5, %bb379 ]
  %v2_10b58 = xor i1 %v7_10b50, true
  %v3_10b58 = and i1 %v2_10b50, %v2_10b58
  br i1 %v3_10b58, label %bb381, label %bb382

bb381:                                            ; preds = %bb380
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb382

bb382:                                            ; preds = %bb380, %bb381
  %v1_10b74 = phi i32 [ %v1_10b74173, %bb380 ], [ 30, %bb381 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b5c = icmp eq i32 %v3_10b4c, 0
  store i1 %v2_10b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b5c, label %bb378, label %dec_label_pc_10b64

dec_label_pc_10b64:                               ; preds = %bb382
  store i32 ptrtoint (i32* @global_var_21480.144 to i32), i32* %r2.global-to-local, align 4
  %v2_10b68 = load i32, i32* @global_var_21480.144, align 4
  store i32 %v2_10b68, i32* %r3.global-to-local, align 4
  %v1_10b6c = add i32 %v2_10b48, 8
  %v2_10b6c = inttoptr i32 %v1_10b6c to i32*
  %v3_10b6c = load i32, i32* %v2_10b6c, align 4
  store i32 %v3_10b6c, i32* %r2.global-to-local, align 4
  %v2_10b70 = sub i32 %v2_10b68, %v3_10b6c
  store i32 %v2_10b70, i32* %r3.global-to-local, align 4
  %v3_10b74 = icmp uge i32 %v2_10b70, %v1_10b74
  store i1 %v3_10b74, i1* %cpsr_c.global-to-local, align 1
  %v9_10b74 = icmp eq i32 %v2_10b70, %v1_10b74
  store i1 %v9_10b74, i1* %cpsr_z.global-to-local, align 1
  %v2_10b78 = xor i1 %v3_10b74, true
  %v3_10b78 = or i1 %v9_10b74, %v2_10b78
  br i1 %v3_10b78, label %dec_label_pc_10ae4, label %dec_label_pc_10b7c

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_10b64
  %v1_10b7c = add i32 %v2_10b48, 4
  %v2_10b7c = inttoptr i32 %v1_10b7c to i32*
  %v3_10b7c = load i32, i32* %v2_10b7c, align 4
  store i32 %v3_10b7c, i32* %r0.global-to-local, align 4
  %v1_10b80 = call i32 @function_130b4(i32 %v3_10b7c)
  store i32 %v1_10b80, i32* %r0.global-to-local, align 4
  %v0_10b84 = load i32, i32* @r4, align 4
  %v1_10b84 = add i32 %v0_10b84, 12
  %v2_10b84 = inttoptr i32 %v1_10b84 to i32*
  %v3_10b84 = load i32, i32* %v2_10b84, align 4
  store i32 %v3_10b84, i32* %r3.global-to-local, align 4
  %v2_10b88 = icmp ugt i32 %v3_10b84, 1
  store i1 %v2_10b88, i1* %cpsr_c.global-to-local, align 1
  %v7_10b88 = icmp eq i32 %v3_10b84, 2
  store i1 %v7_10b88, i1* %cpsr_z.global-to-local, align 1
  %v2_10b8c = xor i1 %v2_10b88, true
  %v3_10b8c = or i1 %v7_10b88, %v2_10b8c
  br i1 %v3_10b8c, label %bb383, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_10b7c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10b94276280 = add i32 %v0_10b84, 4
  %v3_10b94277281 = inttoptr i32 %v2_10b94276280 to i32*
  store i32 -1, i32* %v3_10b94277281, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_10b7c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10b94273 = add i32 %v0_10b84, 4
  %v3_10b94274 = inttoptr i32 %v2_10b94273 to i32*
  store i32 -1, i32* %v3_10b94274, align 4
  %v4_10b98 = load i32, i32* %r3.global-to-local, align 4
  %v5_10b98 = load i32, i32* @r4, align 4
  %v6_10b98 = add i32 %v5_10b98, 12
  %v7_10b98 = inttoptr i32 %v6_10b98 to i32*
  store i32 %v4_10b98, i32* %v7_10b98, align 4
  %v4_10b9c = load i32, i32* %r3.global-to-local, align 4
  %v5_10b9c = trunc i32 %v4_10b9c to i8
  %v6_10b9c = load i32, i32* @r4, align 4
  %v7_10b9c = add i32 %v6_10b9c, 284
  %v8_10b9c = inttoptr i32 %v7_10b9c to i8*
  store i8 %v5_10b9c, i8* %v8_10b9c, align 1
  %v0_10ba0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10ba0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb384

bb384:                                            ; preds = %.thread279, %bb383
  %v1_10ba0 = phi i1 [ %v1_10ba0.pre, %bb383 ], [ %v2_10b88, %.thread279 ]
  %v0_10ba0 = phi i1 [ %v0_10ba0.pre, %bb383 ], [ false, %.thread279 ]
  %v2_10ba0 = xor i1 %v1_10ba0, true
  %v3_10ba0 = or i1 %v0_10ba0, %v2_10ba0
  br i1 %v3_10ba0, label %bb378, label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %bb384
  %v0_10ba4 = load i32, i32* @r4, align 4
  %v1_10ba4 = add i32 %v0_10ba4, 284
  %v2_10ba4 = inttoptr i32 %v1_10ba4 to i8*
  %v3_10ba4 = load i8, i8* %v2_10ba4, align 1
  %v4_10ba4 = zext i8 %v3_10ba4 to i32
  %v1_10ba8 = add nuw nsw i32 %v4_10ba4, 1
  %v1_10bac = urem i32 %v1_10ba8, 256
  store i32 %v1_10bac, i32* %r3.global-to-local, align 4
  %v2_10bb0 = icmp ugt i32 %v1_10bac, 9
  store i1 %v2_10bb0, i1* %cpsr_c.global-to-local, align 1
  %v7_10bb0 = icmp eq i32 %v1_10bac, 10
  store i1 %v7_10bb0, i1* %cpsr_z.global-to-local, align 1
  %v1_10bb4 = trunc i32 %v1_10ba8 to i8
  store i8 %v1_10bb4, i8* %v2_10ba4, align 1
  %v0_10bb8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bb8, label %.thread56, label %dec_label_pc_10bc8

.thread56:                                        ; preds = %dec_label_pc_10ba4
  %v1_10bb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bb8 = add i32 %v1_10bb8, -10
  store i32 %v2_10bb8, i32* %r3.global-to-local, align 4
  %v2_10bbc = load i32, i32* @r4, align 4
  %v3_10bbc = add i32 %v2_10bbc, 12
  %v4_10bbc = inttoptr i32 %v3_10bbc to i32*
  store i32 %v2_10bb8, i32* %v4_10bbc, align 4
  %v1_10bc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bc0 = trunc i32 %v1_10bc0 to i8
  %v3_10bc0 = load i32, i32* @r4, align 4
  %v4_10bc0 = add i32 %v3_10bc0, 284
  %v5_10bc0 = inttoptr i32 %v4_10bc0 to i8*
  store i8 %v2_10bc0, i8* %v5_10bc0, align 1
  %v0_10bc4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bc4.pr.pr, label %bb378, label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10ba4, %.thread56
  %v0_10bc8 = load i32, i32* @r4, align 4
  store i32 %v0_10bc8, i32* @r0, align 4
  %v0_10bcc = call i32 @function_f34c()
  store i32 %v0_10bcc, i32* %r0.global-to-local, align 4
  br label %bb378

dec_label_pc_10bd4:                               ; preds = %bb378
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10be0 = load i32, i32* @r5, align 4
  %v1_10be0 = load i32, i32* @r6, align 4
  %v3_10be0 = icmp uge i32 %v0_10be0, %v1_10be0
  store i1 %v3_10be0, i1* %cpsr_c.global-to-local, align 1
  %v9_10be0 = icmp eq i32 %v0_10be0, %v1_10be0
  store i1 %v9_10be0, i1* %cpsr_z.global-to-local, align 1
  %v5_10be4 = icmp slt i32 %v0_10be0, %v1_10be0
  %storemerge134 = select i1 %v5_10be4, i32 %v1_10be0, i32 %v0_10be0
  %v2_10bf0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10bf0, i32* %ip.global-to-local, align 4
  %v2_10bf4 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10bf4, i32* %r1.global-to-local, align 4
  %v2_10bf8 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10bf8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10c00 = add i32 %storemerge134, 1
  store i32 %v1_10c00, i32* %r0.global-to-local, align 4
  %v5_10c0c = call i32 @function_12dd8(i32 %v1_10c00, i32 %v2_10bf4, i32 %v2_10bf8, i32 0, i32 %v2_10bf0)
  %v0_10c10 = load i32, i32* @r4, align 4
  store i32 %v0_10c10, i32* %r0.global-to-local, align 4
  %v1_10c14 = inttoptr i32 %v0_10c10 to i32*
  %v2_10c14 = call i32 @function_12d34(i32* %v1_10c14)
  store i32 %v2_10c14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21480.144 to i32), i32* @lr, align 4
  %v0_10c1c = load i32, i32* @r4, align 4
  %v5_10c1c = trunc i32 %v0_10c1c to i16
  store i16 %v5_10c1c, i16* %stack_var_-52, align 2
  store i32 %v2_10c14, i32* @global_var_21480.144, align 4
  %v2_11538 = ptrtoint i32* %stack_var_-45 to i32
  %v2_1154c = ptrtoint i32* %stack_var_-80 to i32
  %v2_11554 = ptrtoint i32* %stack_var_-77 to i32
  %v2_11308 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1131c = ptrtoint i8* %stack_var_-56 to i32
  %v2_11324 = bitcast i8* %stack_var_-56 to i32*
  %v2_11644 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10d98, %dec_label_pc_10bd4
  %v0_10c30 = phi i32 [ %v1_10d9c, %dec_label_pc_10d98 ], [ %v0_10c1c, %dec_label_pc_10bd4 ]
  store i32 ptrtoint (i32* @global_var_234cc.155 to i32), i32* %r0.global-to-local, align 4
  %v3_10c28 = mul i32 %v0_10c30, 256
  store i32 %v3_10c28, i32* %r3.global-to-local, align 4
  %v2_10c2c = load i32, i32* @global_var_234cc.155, align 4
  store i32 %v2_10c2c, i32* %r1.global-to-local, align 4
  %v2_10c34 = mul i32 %v0_10c30, 288
  store i32 %v2_10c34, i32* %r2.global-to-local, align 4
  %v2_10c38 = add i32 %v2_10c2c, %v2_10c34
  store i32 %v2_10c38, i32* @r5, align 4
  %v1_10c3c = add i32 %v2_10c38, 4
  %v2_10c3c = inttoptr i32 %v1_10c3c to i32*
  %v3_10c3c = load i32, i32* %v2_10c3c, align 4
  store i32 %v3_10c3c, i32* %r0.global-to-local, align 4
  %v2_10c40 = icmp eq i32 %v3_10c3c, -1
  store i1 %v2_10c40, i1* %cpsr_c.global-to-local, align 1
  %v7_10c40 = icmp eq i32 %v3_10c3c, -1
  store i1 %v7_10c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c40, label %dec_label_pc_10d98, label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c24
  %v3_10c48 = udiv i32 %v3_10c3c, 32
  store i32 %v2_118f0, i32* %r1.global-to-local, align 4
  %v3_10c54 = mul nuw nsw i32 %v3_10c48, 4
  store i32 %v3_10c54, i32* @ip, align 4
  %v2_10c58 = add i32 %v3_10c54, %v2_118f0
  store i32 %v2_10c58, i32* %r2.global-to-local, align 4
  %v1_10c5c = add i32 %v2_10c58, -312
  %v2_10c5c = inttoptr i32 %v1_10c5c to i32*
  %v3_10c5c = load i32, i32* %v2_10c5c, align 4
  %v1_10c60 = urem i32 %v3_10c3c, 32
  store i32 %v1_10c60, i32* %r1.global-to-local, align 4
  %v2_10c64 = add nsw i32 %v1_10c60, -1
  %v3_10c64 = shl i32 1, %v2_10c64
  %v4_10c64 = and i32 %v3_10c5c, %v3_10c64
  %v5_10c64 = icmp ne i32 %v4_10c64, 0
  store i1 %v5_10c64, i1* %cpsr_c.global-to-local, align 1
  %v6_10c64 = lshr i32 %v3_10c5c, %v1_10c60
  store i32 %v6_10c64, i32* %r3.global-to-local, align 4
  %v1_10c68 = urem i32 %v6_10c64, 2
  %v2_10c68 = icmp eq i32 %v1_10c68, 0
  store i1 %v2_10c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c68, label %dec_label_pc_10c70, label %dec_label_pc_11728

dec_label_pc_10c70:                               ; preds = %dec_label_pc_10c48, %dec_label_pc_117d8
  %v1_10c80 = phi i32 [ %v1_10c60, %dec_label_pc_10c48 ], [ %v1_10c80.pre, %dec_label_pc_117d8 ]
  %v0_10c78 = phi i32 [ %v3_10c54, %dec_label_pc_10c48 ], [ %v0_10c78.pre, %dec_label_pc_117d8 ]
  store i32 %v2_118f0, i32* %r3.global-to-local, align 4
  %v2_10c78 = add i32 %v0_10c78, %v2_118f0
  store i32 %v2_10c78, i32* %r2.global-to-local, align 4
  %v1_10c7c = add i32 %v2_10c78, -184
  %v2_10c7c = inttoptr i32 %v1_10c7c to i32*
  %v3_10c7c = load i32, i32* %v2_10c7c, align 4
  %v2_10c80 = add i32 %v1_10c80, -1
  %v3_10c80 = shl i32 1, %v2_10c80
  %v4_10c80 = and i32 %v3_10c7c, %v3_10c80
  %v5_10c80 = icmp ne i32 %v4_10c80, 0
  store i1 %v5_10c80, i1* %cpsr_c.global-to-local, align 1
  %v6_10c80 = lshr i32 %v3_10c7c, %v1_10c80
  store i32 %v6_10c80, i32* %r3.global-to-local, align 4
  %v1_10c84 = urem i32 %v6_10c80, 2
  %v2_10c84 = icmp eq i32 %v1_10c84, 0
  store i1 %v2_10c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c84, label %dec_label_pc_10d98, label %dec_label_pc_10c8c.preheader

dec_label_pc_10c8c.preheader:                     ; preds = %dec_label_pc_10c70
  %v0_10c8c156 = load i32, i32* @r5, align 4
  %v1_10c8c157 = add i32 %v0_10c8c156, 12
  %v2_10c8c158 = inttoptr i32 %v1_10c8c157 to i32*
  %v3_10c8c159 = load i32, i32* %v2_10c8c158, align 4
  store i32 %v3_10c8c159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c90155161 = icmp eq i32 %v3_10c8c159, 0
  store i1 %v2_10c90155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c90155161, label %dec_label_pc_10d98, label %dec_label_pc_10c98.lr.ph

dec_label_pc_10c8c.loopexit:                      ; preds = %dec_label_pc_115e8, %dec_label_pc_11458
  %v0_10c8c = load i32, i32* @r5, align 4
  %v1_10c8c = add i32 %v0_10c8c, 12
  %v2_10c8c = inttoptr i32 %v1_10c8c to i32*
  %v3_10c8c = load i32, i32* %v2_10c8c, align 4
  store i32 %v3_10c8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c90155 = icmp eq i32 %v3_10c8c, 0
  store i1 %v2_10c90155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c90155, label %dec_label_pc_10d98, label %dec_label_pc_10c98.lr.ph

dec_label_pc_10c98.lr.ph:                         ; preds = %dec_label_pc_10c8c.preheader, %dec_label_pc_10c8c.loopexit
  %v0_10c98189 = phi i32 [ %v0_10c8c, %dec_label_pc_10c8c.loopexit ], [ %v0_10c8c156, %dec_label_pc_10c8c.preheader ]
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c90.backedge.thread, %dec_label_pc_10c90.backedge, %dec_label_pc_10c90.backedge.thread528, %dec_label_pc_10c98.lr.ph
  %v0_116b8 = phi i32 [ %v0_10c98189, %dec_label_pc_10c98.lr.ph ], [ %v0_10c98186, %dec_label_pc_10c90.backedge ], [ %v0_10d0c, %dec_label_pc_10c90.backedge.thread ], [ %v0_10d0c, %dec_label_pc_10c90.backedge.thread528 ]
  %v1_10c98 = add i32 %v0_116b8, 24
  %v2_10c98 = inttoptr i32 %v1_10c98 to i32*
  %v3_10c98 = load i32, i32* %v2_10c98, align 4
  store i32 %v3_10c98, i32* @r3, align 4
  %v2_10c9c = icmp ugt i32 %v3_10c98, 255
  store i1 %v2_10c9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c9c = icmp eq i32 %v3_10c98, 256
  store i1 %v7_10c9c, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_116b8, 28
  store i32 %.pre, i32* %sl.global-to-local, align 4
  br i1 %v7_10c9c, label %dec_label_pc_116b8, label %dec_label_pc_10ca8

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_116b8
  store i32 0, i32* @r6, align 4
  %v1_10cac = load i32, i32* @sb, align 4
  %v2_10cac = inttoptr i32 %v1_10cac to i32*
  store i32 0, i32* %v2_10cac, align 4
  %v0_10cb0 = load i32, i32* @r5, align 4
  %v1_10cb0 = add i32 %v0_10cb0, 24
  %v2_10cb0 = inttoptr i32 %v1_10cb0 to i32*
  %v3_10cb0 = load i32, i32* %v2_10cb0, align 4
  store i32 %v3_10cb0, i32* %r2.global-to-local, align 4
  %v0_10cb4 = load i32, i32* %sl.global-to-local, align 4
  %v2_10cb4 = add i32 %v0_10cb4, %v3_10cb0
  store i32 %v2_10cb4, i32* @r4, align 4
  %v1_10cb8 = add i32 %v0_10cb0, 4
  %v2_10cb8 = inttoptr i32 %v1_10cb8 to i32*
  %v3_10cb8 = load i32, i32* %v2_10cb8, align 4
  store i32 %v3_10cb8, i32* %r0.global-to-local, align 4
  %v1_10cbc = sub i32 256, %v3_10cb0
  store i32 %v1_10cbc, i32* %r2.global-to-local, align 4
  store i32 %v2_10cb4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10cc8 = call i32 @function_13794(i32 %v3_10cb8, i32 %v2_10cb4, i32 %v1_10cbc, i32 16384)
  store i32 %v4_10cc8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ccc = icmp eq i32 %v4_10cc8, 0
  store i1 %v2_10ccc, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v4_10cc8, 1
  br i1 %tmp385, label %dec_label_pc_10d44, label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10ca8
  %v0_10cd4 = load i32, i32* @r6, align 4
  store i32 %v0_10cd4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10cd8

dec_label_pc_10cd8:                               ; preds = %.thread63, %dec_label_pc_10cd4
  %v3_10ce4 = phi i32 [ %v1_10ce8, %.thread63 ], [ %v0_10cd4, %dec_label_pc_10cd4 ]
  %v1_10cd8 = load i32, i32* @r4, align 4
  %v2_10cd8 = add i32 %v1_10cd8, %v3_10ce4
  %v3_10cd8 = inttoptr i32 %v2_10cd8 to i8*
  %v4_10cd8 = load i8, i8* %v3_10cd8, align 1
  %v6_10cd8 = zext i8 %v4_10cd8 to i32
  store i32 %v6_10cd8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cdc = icmp eq i8 %v4_10cd8, 0
  store i1 %v2_10cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cdc, label %bb386, label %.thread63

bb386:                                            ; preds = %dec_label_pc_10cd8
  %v2_10ce0 = add nuw nsw i32 %v6_10cd8, 65
  store i32 %v2_10ce0, i32* %r3.global-to-local, align 4
  %v2_10ce4 = trunc i32 %v2_10ce0 to i8
  store i8 %v2_10ce4, i8* %v3_10cd8, align 1
  %v0_10ce8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_10cd8, %bb386
  %v0_10ce8 = phi i32 [ %v3_10ce4, %dec_label_pc_10cd8 ], [ %v0_10ce8.pre, %bb386 ]
  %v1_10ce8 = add i32 %v0_10ce8, 1
  store i32 %v1_10ce8, i32* %r2.global-to-local, align 4
  %v3_10cec = icmp uge i32 %v1_10ce8, %v4_10cc8
  store i1 %v3_10cec, i1* %cpsr_c.global-to-local, align 1
  %v9_10cec = icmp eq i32 %v1_10ce8, %v4_10cc8
  store i1 %v9_10cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10cec, label %dec_label_pc_10cf4, label %dec_label_pc_10cd8

dec_label_pc_10cf4:                               ; preds = %.thread63, %dec_label_pc_10d48
  store i32 ptrtoint (i32* @global_var_21480.144 to i32), i32* @ip, align 4
  %v0_10cf8 = load i32, i32* @r5, align 4
  %v1_10cf8 = add i32 %v0_10cf8, 24
  %v2_10cf8 = inttoptr i32 %v1_10cf8 to i32*
  %v3_10cf8 = load i32, i32* %v2_10cf8, align 4
  %v2_10cfc = load i32, i32* @global_var_21480.144, align 4
  store i32 %v2_10cfc, i32* %r2.global-to-local, align 4
  %v2_10d00 = add i32 %v3_10cf8, %v4_10cc8
  store i32 %v2_10d00, i32* %r3.global-to-local, align 4
  store i32 %v2_10d00, i32* %v2_10cf8, align 4
  %v0_10d08 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d08 = load i32, i32* @r5, align 4
  %v2_10d08 = add i32 %v1_10d08, 8
  %v3_10d08 = inttoptr i32 %v2_10d08 to i32*
  store i32 %v0_10d08, i32* %v3_10d08, align 4
  br label %dec_label_pc_10d0c

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10e2c, %dec_label_pc_10cf4
  %v0_10d0c = load i32, i32* @r5, align 4
  %v1_10d0c = add i32 %v0_10d0c, 12
  %v2_10d0c = inttoptr i32 %v1_10d0c to i32*
  %v3_10d0c = load i32, i32* %v2_10d0c, align 4
  store i32 %v3_10d0c, i32* %r0.global-to-local, align 4
  %v1_10d10 = add i32 %v3_10d0c, -2
  store i32 %v1_10d10, i32* @r3, align 4
  %v7_10d14 = icmp eq i32 %v1_10d10, 8
  store i1 %v7_10d14, i1* %cpsr_z.global-to-local, align 1
  %v5_10d18 = and i32 %v1_10d10, 1073741824
  %v6_10d18 = icmp ne i32 %v5_10d18, 0
  store i1 %v6_10d18, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10d0c, label %dec_label_pc_10c90.backedge [
    i32 2, label %dec_label_pc_11464
    i32 3, label %dec_label_pc_11278
    i32 4, label %dec_label_pc_11370
    i32 5, label %dec_label_pc_111a4
    i32 6, label %dec_label_pc_10ffc
    i32 7, label %dec_label_pc_10f28
    i32 8, label %dec_label_pc_110d0
    i32 9, label %dec_label_pc_10e54
    i32 10, label %dec_label_pc_10db0
  ]

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10ca8
  br i1 %v2_10ccc, label %dec_label_pc_118d4, label %dec_label_pc_10d48

dec_label_pc_10d48:                               ; preds = %dec_label_pc_10d44
  %v3_10d48 = icmp eq i32 %v4_10cc8, -1
  store i1 %v3_10d48, i1* %cpsr_c.global-to-local, align 1
  %v8_10d48 = icmp eq i32 %v4_10cc8, -1
  store i1 %v8_10d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10d48, label %dec_label_pc_10d50, label %dec_label_pc_10cf4

dec_label_pc_10d50:                               ; preds = %dec_label_pc_10d48
  %v0_10d50 = load i32, i32* @sb, align 4
  %v1_10d50 = inttoptr i32 %v0_10d50 to i32*
  %v2_10d50 = load i32, i32* %v1_10d50, align 4
  store i32 %v2_10d50, i32* %r3.global-to-local, align 4
  %v2_10d54 = icmp ugt i32 %v2_10d50, 10
  store i1 %v2_10d54, i1* %cpsr_c.global-to-local, align 1
  %v7_10d54 = icmp eq i32 %v2_10d50, 11
  store i1 %v7_10d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d54, label %dec_label_pc_10d98, label %dec_label_pc_10d5c

dec_label_pc_10d5c:                               ; preds = %dec_label_pc_10d50, %dec_label_pc_118d4
  %v0_10d5c = load i32, i32* @r5, align 4
  %v1_10d5c = add i32 %v0_10d5c, 4
  %v2_10d5c = inttoptr i32 %v1_10d5c to i32*
  %v3_10d5c = load i32, i32* %v2_10d5c, align 4
  store i32 %v3_10d5c, i32* %r0.global-to-local, align 4
  %v1_10d60 = call i32 @function_130b4(i32 %v3_10d5c)
  store i32 %v1_10d60, i32* %r0.global-to-local, align 4
  %v0_10d64 = load i32, i32* @r5, align 4
  %v1_10d64 = add i32 %v0_10d64, 284
  %v2_10d64 = inttoptr i32 %v1_10d64 to i8*
  %v3_10d64 = load i8, i8* %v2_10d64, align 1
  %v4_10d64 = zext i8 %v3_10d64 to i32
  %v1_10d68 = add nuw nsw i32 %v4_10d64, 1
  %v1_10d6c = urem i32 %v1_10d68, 256
  store i32 %v1_10d6c, i32* %r3.global-to-local, align 4
  %v2_10d70 = icmp ugt i32 %v1_10d6c, 8
  store i1 %v2_10d70, i1* %cpsr_c.global-to-local, align 1
  %v7_10d70 = icmp eq i32 %v1_10d6c, 9
  store i1 %v7_10d70, i1* %cpsr_z.global-to-local, align 1
  %v1_10d74 = trunc i32 %v1_10d68 to i8
  store i8 %v1_10d74, i8* %v2_10d64, align 1
  %v0_10d78 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10d78 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10d78 = xor i1 %v1_10d78, true
  %v3_10d78 = and i1 %v0_10d78, %v2_10d78
  br i1 %v3_10d78, label %bb387, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_10d5c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_10d84289294 = load i32, i32* @r5, align 4
  %v2_10d84290295 = add i32 %v1_10d84289294, 4
  %v3_10d84291296 = inttoptr i32 %v2_10d84290295 to i32*
  store i32 -1, i32* %v3_10d84291296, align 4
  br label %bb388

bb387:                                            ; preds = %dec_label_pc_10d5c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10d84285 = load i32, i32* @r5, align 4
  %v2_10d84286 = add i32 %v1_10d84285, 4
  %v3_10d84287 = inttoptr i32 %v2_10d84286 to i32*
  store i32 -1, i32* %v3_10d84287, align 4
  %v4_10d88 = load i32, i32* %r0.global-to-local, align 4
  %v5_10d88 = load i32, i32* @r5, align 4
  %v6_10d88 = add i32 %v5_10d88, 12
  %v7_10d88 = inttoptr i32 %v6_10d88 to i32*
  store i32 %v4_10d88, i32* %v7_10d88, align 4
  %v4_10d8c = load i32, i32* %r3.global-to-local, align 4
  %v5_10d8c = trunc i32 %v4_10d8c to i8
  %v6_10d8c = load i32, i32* @r5, align 4
  %v7_10d8c = add i32 %v6_10d8c, 284
  %v8_10d8c = inttoptr i32 %v7_10d8c to i8*
  store i8 %v5_10d8c, i8* %v8_10d8c, align 1
  %v0_10d90.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10d90.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb388

bb388:                                            ; preds = %.thread293, %bb387
  %v1_10d94 = phi i1 [ %v1_10d90.pre, %bb387 ], [ %v0_10d78, %.thread293 ]
  %v0_10d94 = phi i1 [ %v0_10d90.pre, %bb387 ], [ %v1_10d78, %.thread293 ]
  %v2_10d90 = xor i1 %v1_10d94, true
  %v3_10d90 = or i1 %v0_10d94, %v2_10d90
  br i1 %v3_10d90, label %bb389, label %bb390

bb389:                                            ; preds = %bb388
  %v4_10d90 = load i32, i32* @r5, align 4
  store i32 %v4_10d90, i32* %r0.global-to-local, align 4
  br label %bb390

bb390:                                            ; preds = %bb388, %bb389
  store i32 69016, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10d90, i32 ptrtoint (i32* @global_var_f34c.521 to i32))
  br label %dec_label_pc_10d98

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10c8c.loopexit, %dec_label_pc_10c90.backedge, %dec_label_pc_10c8c.preheader, %dec_label_pc_10d50, %dec_label_pc_10c70, %dec_label_pc_10c24, %dec_label_pc_117f8, %bb390
  %v3_10d98 = load i16, i16* %stack_var_-52, align 2
  %v4_10d98 = sext i16 %v3_10d98 to i32
  store i32 %v4_10d98, i32* %r3.global-to-local, align 4
  %v1_10d9c = add nsw i32 %v4_10d98, 1
  store i32 %v1_10d9c, i32* @r4, align 4
  %v2_10da0 = icmp ugt i32 %v1_10d9c, 254
  store i1 %v2_10da0, i1* %cpsr_c.global-to-local, align 1
  %v7_10da0 = icmp eq i32 %v1_10d9c, 255
  store i1 %v7_10da0, i1* %cpsr_z.global-to-local, align 1
  %v5_10da4 = trunc i32 %v1_10d9c to i16
  store i16 %v5_10da4, i16* %stack_var_-52, align 2
  %v7_10da8 = icmp sgt i16 %v3_10d98, 254
  br i1 %v7_10da8, label %dec_label_pc_10658, label %dec_label_pc_10c24

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d0c
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_10db4 = call i32 @function_11a84(i32 28)
  store i32 %v2_1131c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v3_10dc4 = call i32 @function_119c0(i32 28, i32* %v2_11324)
  %v3_10dc8 = load i8, i8* %stack_var_-56, align 1
  %v4_10dc8 = sext i8 %v3_10dc8 to i32
  store i32 %v3_10dc4, i32* %r2.global-to-local, align 4
  %v1_10dd0 = add nsw i32 %v4_10dc8, -1
  store i32 %v1_10dd0, i32* %r3.global-to-local, align 4
  %v0_10dd4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10dd4, i32* %r0.global-to-local, align 4
  %v0_10dd8 = load i32, i32* @r5, align 4
  %v1_10dd8 = add i32 %v0_10dd8, 24
  %v2_10dd8 = inttoptr i32 %v1_10dd8 to i32*
  %v3_10dd8 = load i32, i32* %v2_10dd8, align 4
  store i32 %v3_10dd8, i32* %r1.global-to-local, align 4
  %v4_10ddc = call i32 @function_12508(i32 %v0_10dd4, i32 %v3_10dd8, i32 %v3_10dc4, i32 %v1_10dd0)
  %v2_10de0 = icmp eq i32 %v4_10ddc, -1
  store i1 %v2_10de0, i1* %cpsr_c.global-to-local, align 1
  %v7_10de0 = icmp eq i32 %v4_10ddc, -1
  store i1 %v7_10de0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_10ddc, i32* @r4, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_115ec = call i32 @function_119e4(i32 28)
  br i1 %v7_10de0, label %dec_label_pc_115e8, label %dec_label_pc_10dec

dec_label_pc_10dec:                               ; preds = %dec_label_pc_10db0
  store i32 %v1_115ec, i32* %r0.global-to-local, align 4
  %v0_10df4 = load i32, i32* @r5, align 4
  %v1_10df4 = add i32 %v0_10df4, 4
  %v2_10df4 = inttoptr i32 %v1_10df4 to i32*
  %v3_10df4 = load i32, i32* %v2_10df4, align 4
  store i32 %v3_10df4, i32* %r0.global-to-local, align 4
  %v1_10df8 = call i32 @function_130b4(i32 %v3_10df4)
  store i32 %v1_10df8, i32* %r0.global-to-local, align 4
  %v0_10dfc = load i32, i32* @r5, align 4
  %v1_10dfc = add i32 %v0_10dfc, 284
  %v2_10dfc = inttoptr i32 %v1_10dfc to i8*
  %v3_10dfc = load i8, i8* %v2_10dfc, align 1
  %v4_10dfc = zext i8 %v3_10dfc to i32
  %v1_10e00 = add nuw nsw i32 %v4_10dfc, 1
  %v1_10e04 = urem i32 %v1_10e00, 256
  store i32 %v1_10e04, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10e0c = icmp ugt i32 %v1_10e04, 9
  store i1 %v2_10e0c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e0c = icmp eq i32 %v1_10e04, 10
  store i1 %v7_10e0c, i1* %cpsr_z.global-to-local, align 1
  %v2_10e10 = add i32 %v0_10dfc, 4
  %v3_10e10 = inttoptr i32 %v2_10e10 to i32*
  store i32 -1, i32* %v3_10e10, align 4
  %v0_10e14 = load i32, i32* @r3, align 4
  %v1_10e14 = trunc i32 %v0_10e14 to i8
  %v2_10e14 = load i32, i32* @r5, align 4
  %v3_10e14 = add i32 %v2_10e14, 284
  %v4_10e14 = inttoptr i32 %v3_10e14 to i8*
  store i8 %v1_10e14, i8* %v4_10e14, align 1
  %v0_10e18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e18, label %dec_label_pc_10e1c, label %dec_label_pc_116dc

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10dec
  store i32 0, i32* @r3, align 4
  %v1_10e20 = load i32, i32* @r5, align 4
  %v2_10e20 = add i32 %v1_10e20, 12
  %v3_10e20 = inttoptr i32 %v2_10e20 to i32*
  store i32 0, i32* %v3_10e20, align 4
  %v0_10e24 = load i32, i32* @r3, align 4
  %v1_10e24 = trunc i32 %v0_10e24 to i8
  %v2_10e24 = load i32, i32* @r5, align 4
  %v3_10e24 = add i32 %v2_10e24, 284
  %v4_10e24 = inttoptr i32 %v3_10e24 to i8*
  store i8 %v1_10e24, i8* %v4_10e24, align 1
  br label %dec_label_pc_10e28

dec_label_pc_10e28:                               ; preds = %dec_label_pc_116dc, %dec_label_pc_10e1c
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_11458, %dec_label_pc_11220, %dec_label_pc_1114c, %dec_label_pc_11078, %dec_label_pc_10fa4, %dec_label_pc_10ed0, %dec_label_pc_10e28
  %v0_10e2c = load i32, i32* @r5, align 4
  %v1_10e2c = add i32 %v0_10e2c, 24
  %v2_10e2c = inttoptr i32 %v1_10e2c to i32*
  %v3_10e2c = load i32, i32* %v2_10e2c, align 4
  %v0_10e30 = load i32, i32* @r7, align 4
  %v2_10e30 = sub i32 %v0_10e30, %v3_10e2c
  %v3_10e30 = icmp uge i32 %v0_10e30, %v3_10e2c
  store i1 %v3_10e30, i1* %cpsr_c.global-to-local, align 1
  %v4_10e30 = xor i32 %v0_10e30, %v3_10e2c
  %v5_10e30 = xor i32 %v2_10e30, %v0_10e30
  %v6_10e30 = and i32 %v5_10e30, %v4_10e30
  %v7_10e30 = icmp slt i32 %v6_10e30, 0
  %v8_10e30 = icmp slt i32 %v2_10e30, 0
  %v9_10e30 = icmp eq i32 %v0_10e30, %v3_10e2c
  store i1 %v9_10e30, i1* %cpsr_z.global-to-local, align 1
  %v2_10e34 = xor i1 %v8_10e30, %v7_10e30
  %v0_10e30.v3_10e2c = select i1 %v2_10e34, i32 %v0_10e30, i32 %v3_10e2c
  store i32 %v0_10e30.v3_10e2c, i32* %r1.global-to-local, align 4
  %v2_10e3c = sub i32 %v3_10e2c, %v0_10e30.v3_10e2c
  store i32 %v2_10e3c, i32* @r2, align 4
  store i32 %v2_10e3c, i32* %v2_10e2c, align 4
  %v0_10e44 = load i32, i32* %sl.global-to-local, align 4
  %v1_10e44 = load i32, i32* %r1.global-to-local, align 4
  %v2_10e44 = add i32 %v1_10e44, %v0_10e44
  store i32 %v2_10e44, i32* @r1, align 4
  store i32 %v0_10e44, i32* @r0, align 4
  %v3_10e4c = call i32 @function_135d0(i32 %v0_10e44, i32 %v2_10e44, i32 %v2_10e3c)
  store i32 %v3_10e4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d0c

dec_label_pc_10e54:                               ; preds = %dec_label_pc_10d0c
  %v1_10e54 = add i32 %v0_10d0c, 24
  %v2_10e54 = inttoptr i32 %v1_10e54 to i32*
  %v3_10e54 = load i32, i32* %v2_10e54, align 4
  store i32 %v3_10e54, i32* %r2.global-to-local, align 4
  %v1_10e58 = add i32 %v3_10e54, -1
  store i32 %v1_10e58, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e5c = icmp eq i32 %v1_10e58, 0
  store i1 %v2_10e5c, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_10e58, 1
  br i1 %tmp393, label %dec_label_pc_10c90.backedge.thread, label %dec_label_pc_10e64

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e54
  %v2_10e64 = add i32 %v1_10e58, %v0_10d0c
  store i32 %v2_10e64, i32* %r3.global-to-local, align 4
  %v1_10e68 = add i32 %v2_10e64, 28
  %v2_10e68 = inttoptr i32 %v1_10e68 to i8*
  %v3_10e68 = load i8, i8* %v2_10e68, align 1
  %v4_10e68 = zext i8 %v3_10e68 to i32
  store i32 %v4_10e68, i32* %r3.global-to-local, align 4
  %v2_10e6c = icmp ugt i8 %v3_10e68, 61
  store i1 %v2_10e6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e6c = icmp eq i8 %v3_10e68, 62
  store i1 %v7_10e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e6c, label %dec_label_pc_10ed0, label %bb394

bb394:                                            ; preds = %dec_label_pc_10e64
  %v3_10e70 = icmp ugt i8 %v3_10e68, 57
  store i1 %v3_10e70, i1* %cpsr_c.global-to-local, align 1
  %v8_10e70 = icmp eq i8 %v3_10e68, 58
  store i1 %v8_10e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e70, label %dec_label_pc_10ed0, label %dec_label_pc_10e78

dec_label_pc_10e78:                               ; preds = %bb394
  %v2_10e78 = icmp ugt i8 %v3_10e68, 35
  store i1 %v2_10e78, i1* %cpsr_c.global-to-local, align 1
  %v7_10e78 = icmp eq i8 %v3_10e68, 36
  store i1 %v7_10e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e78, label %dec_label_pc_10ed0, label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %dec_label_pc_10e78
  %v2_10e80 = icmp ugt i8 %v3_10e68, 34
  store i1 %v2_10e80, i1* %cpsr_c.global-to-local, align 1
  %v7_10e80 = icmp eq i8 %v3_10e68, 35
  store i1 %v7_10e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e80, label %dec_label_pc_10ed0, label %dec_label_pc_10e88

dec_label_pc_10e88:                               ; preds = %dec_label_pc_10e80
  %v2_10e88 = icmp ugt i8 %v3_10e68, 36
  store i1 %v2_10e88, i1* %cpsr_c.global-to-local, align 1
  %v7_10e88 = icmp eq i8 %v3_10e68, 37
  store i1 %v7_10e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e88, label %dec_label_pc_10ed0, label %dec_label_pc_10eb8.preheader

dec_label_pc_10eb8.preheader:                     ; preds = %dec_label_pc_10e88
  %v3_10e8c = add i32 %v0_10d0c, 28
  %v2_10e90 = add i32 %v3_10e8c, %v3_10e54
  store i32 %v2_10e90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10eb8

dec_label_pc_10e9c:                               ; preds = %bb395
  %v2_10e9c = icmp ugt i8 %v3_10ec0, 35
  store i1 %v2_10e9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e9c = icmp eq i8 %v3_10ec0, 36
  store i1 %v7_10e9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e9c, label %dec_label_pc_10ed0, label %dec_label_pc_10ea4

dec_label_pc_10ea4:                               ; preds = %dec_label_pc_10e9c
  %v2_10ea4 = icmp ugt i8 %v3_10ec0, 34
  store i1 %v2_10ea4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ea4 = icmp eq i8 %v3_10ec0, 35
  store i1 %v7_10ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ea4, label %dec_label_pc_10ed0, label %dec_label_pc_10eac

dec_label_pc_10eac:                               ; preds = %dec_label_pc_10ea4
  %v2_10eac = icmp ugt i8 %v3_10ec0, 36
  store i1 %v2_10eac, i1* %cpsr_c.global-to-local, align 1
  %v7_10eac = icmp eq i8 %v3_10ec0, 37
  store i1 %v7_10eac, i1* %cpsr_z.global-to-local, align 1
  %v1_10eb0 = add i32 %v0_10eb0, -1
  store i32 %v1_10eb0, i32* %r3.global-to-local, align 4
  br i1 %v7_10eac, label %dec_label_pc_10ed0, label %dec_label_pc_10eb8

dec_label_pc_10eb8:                               ; preds = %dec_label_pc_10eb8.preheader, %dec_label_pc_10eac
  %v0_10eb0 = phi i32 [ %v2_10e90, %dec_label_pc_10eb8.preheader ], [ %v1_10eb0, %dec_label_pc_10eac ]
  %v0_10eb8 = phi i32 [ %v1_10e58, %dec_label_pc_10eb8.preheader ], [ %v1_10eb8, %dec_label_pc_10eac ]
  %v1_10eb8 = add i32 %v0_10eb8, -1
  store i32 %v1_10eb8, i32* %r1.global-to-local, align 4
  %v2_10eb8 = icmp ne i32 %v0_10eb8, 0
  store i1 %v2_10eb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb8 = icmp eq i32 %v0_10eb8, 1
  store i1 %v7_10eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eb8, label %dec_label_pc_10c90.backedge.thread528, label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10eb8
  %v1_10ec0 = add i32 %v0_10eb0, -2
  %v2_10ec0 = inttoptr i32 %v1_10ec0 to i8*
  %v3_10ec0 = load i8, i8* %v2_10ec0, align 1
  %v4_10ec0 = zext i8 %v3_10ec0 to i32
  store i32 %v4_10ec0, i32* %r2.global-to-local, align 4
  %v2_10ec4 = icmp ugt i8 %v3_10ec0, 61
  store i1 %v2_10ec4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ec4 = icmp eq i8 %v3_10ec0, 62
  store i1 %v7_10ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ec4, label %dec_label_pc_10ed0, label %bb395

bb395:                                            ; preds = %dec_label_pc_10ec0
  %v3_10ec8 = icmp ugt i8 %v3_10ec0, 57
  store i1 %v3_10ec8, i1* %cpsr_c.global-to-local, align 1
  %v8_10ec8 = icmp eq i8 %v3_10ec0, 58
  store i1 %v8_10ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10ec8, label %dec_label_pc_10ed0, label %dec_label_pc_10e9c

dec_label_pc_10ed0:                               ; preds = %dec_label_pc_10ec0, %bb395, %dec_label_pc_10eac, %dec_label_pc_10ea4, %dec_label_pc_10e9c, %dec_label_pc_10e88, %dec_label_pc_10e64, %dec_label_pc_10e80, %dec_label_pc_10e78, %bb394
  %v0_10ed4 = phi i32 [ %v1_10e58, %dec_label_pc_10e88 ], [ %v1_10e58, %dec_label_pc_10e64 ], [ %v1_10e58, %dec_label_pc_10e80 ], [ %v1_10e58, %dec_label_pc_10e78 ], [ %v1_10e58, %bb394 ], [ %v1_10eb8, %dec_label_pc_10e9c ], [ %v1_10eb8, %dec_label_pc_10ea4 ], [ %v1_10eb8, %dec_label_pc_10eac ], [ %v1_10eb8, %bb395 ], [ %v1_10eb8, %dec_label_pc_10ec0 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10ed4 = add i32 %v0_10ed4, 1
  store i32 %v1_10ed4, i32* @r7, align 4
  %v1_10ed8 = call i32 @function_11a84(i32 26)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10ee8 = call i32 @function_119c0(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10ee8, i32* %r0.global-to-local, align 4
  %v3_10eec = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10eec, i32* %r2.global-to-local, align 4
  store i32 %v3_10ee8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10ef8 = load i32, i32* @r5, align 4
  %v1_10ef8 = add i32 %v0_10ef8, 4
  %v2_10ef8 = inttoptr i32 %v1_10ef8 to i32*
  %v3_10ef8 = load i32, i32* %v2_10ef8, align 4
  store i32 %v3_10ef8, i32* %r0.global-to-local, align 4
  %v4_10efc = call i32 @function_13808(i32 %v3_10ef8, i32 %v3_10ee8, i32 %v3_10eec, i32 16384)
  store i32 %v4_10efc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f0c = load i32, i32* @r5, align 4
  %v1_10f0c = add i32 %v0_10f0c, 4
  %v2_10f0c = inttoptr i32 %v1_10f0c to i32*
  %v3_10f0c = load i32, i32* %v2_10f0c, align 4
  store i32 %v3_10f0c, i32* %r0.global-to-local, align 4
  %v4_10f10 = call i32 @function_13808(i32 %v3_10f0c, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10f18 = call i32 @function_119e4(i32 26)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10f20 = load i32, i32* @r5, align 4
  %v2_10f20 = add i32 %v1_10f20, 12
  %v3_10f20 = inttoptr i32 %v2_10f20 to i32*
  store i32 10, i32* %v3_10f20, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10d0c
  %v1_10f28 = add i32 %v0_10d0c, 24
  %v2_10f28 = inttoptr i32 %v1_10f28 to i32*
  %v3_10f28 = load i32, i32* %v2_10f28, align 4
  store i32 %v3_10f28, i32* %r2.global-to-local, align 4
  %v1_10f2c = add i32 %v3_10f28, -1
  store i32 %v1_10f2c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f30 = icmp eq i32 %v1_10f2c, 0
  store i1 %v2_10f30, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_10f2c, 1
  br i1 %tmp396, label %dec_label_pc_10c90.backedge.thread, label %dec_label_pc_10f38

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10f28
  %v2_10f38 = add i32 %v1_10f2c, %v0_10d0c
  store i32 %v2_10f38, i32* %r3.global-to-local, align 4
  %v1_10f3c = add i32 %v2_10f38, 28
  %v2_10f3c = inttoptr i32 %v1_10f3c to i8*
  %v3_10f3c = load i8, i8* %v2_10f3c, align 1
  %v4_10f3c = zext i8 %v3_10f3c to i32
  store i32 %v4_10f3c, i32* %r3.global-to-local, align 4
  %v2_10f40 = icmp ugt i8 %v3_10f3c, 61
  store i1 %v2_10f40, i1* %cpsr_c.global-to-local, align 1
  %v7_10f40 = icmp eq i8 %v3_10f3c, 62
  store i1 %v7_10f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f40, label %dec_label_pc_10fa4, label %bb397

bb397:                                            ; preds = %dec_label_pc_10f38
  %v3_10f44 = icmp ugt i8 %v3_10f3c, 57
  store i1 %v3_10f44, i1* %cpsr_c.global-to-local, align 1
  %v8_10f44 = icmp eq i8 %v3_10f3c, 58
  store i1 %v8_10f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f44, label %dec_label_pc_10fa4, label %dec_label_pc_10f4c

dec_label_pc_10f4c:                               ; preds = %bb397
  %v2_10f4c = icmp ugt i8 %v3_10f3c, 35
  store i1 %v2_10f4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f4c = icmp eq i8 %v3_10f3c, 36
  store i1 %v7_10f4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f4c, label %dec_label_pc_10fa4, label %dec_label_pc_10f54

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f4c
  %v2_10f54 = icmp ugt i8 %v3_10f3c, 34
  store i1 %v2_10f54, i1* %cpsr_c.global-to-local, align 1
  %v7_10f54 = icmp eq i8 %v3_10f3c, 35
  store i1 %v7_10f54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f54, label %dec_label_pc_10fa4, label %dec_label_pc_10f5c

dec_label_pc_10f5c:                               ; preds = %dec_label_pc_10f54
  %v2_10f5c = icmp ugt i8 %v3_10f3c, 36
  store i1 %v2_10f5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f5c = icmp eq i8 %v3_10f3c, 37
  store i1 %v7_10f5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f5c, label %dec_label_pc_10fa4, label %dec_label_pc_10f8c.preheader

dec_label_pc_10f8c.preheader:                     ; preds = %dec_label_pc_10f5c
  %v3_10f60 = add i32 %v0_10d0c, 28
  %v2_10f64 = add i32 %v3_10f60, %v3_10f28
  store i32 %v2_10f64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f8c

dec_label_pc_10f70:                               ; preds = %bb398
  %v2_10f70 = icmp ugt i8 %v3_10f94, 35
  store i1 %v2_10f70, i1* %cpsr_c.global-to-local, align 1
  %v7_10f70 = icmp eq i8 %v3_10f94, 36
  store i1 %v7_10f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f70, label %dec_label_pc_10fa4, label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f70
  %v2_10f78 = icmp ugt i8 %v3_10f94, 34
  store i1 %v2_10f78, i1* %cpsr_c.global-to-local, align 1
  %v7_10f78 = icmp eq i8 %v3_10f94, 35
  store i1 %v7_10f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f78, label %dec_label_pc_10fa4, label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f78
  %v2_10f80 = icmp ugt i8 %v3_10f94, 36
  store i1 %v2_10f80, i1* %cpsr_c.global-to-local, align 1
  %v7_10f80 = icmp eq i8 %v3_10f94, 37
  store i1 %v7_10f80, i1* %cpsr_z.global-to-local, align 1
  %v1_10f84 = add i32 %v0_10f84, -1
  store i32 %v1_10f84, i32* %r3.global-to-local, align 4
  br i1 %v7_10f80, label %dec_label_pc_10fa4, label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f8c.preheader, %dec_label_pc_10f80
  %v0_10f84 = phi i32 [ %v2_10f64, %dec_label_pc_10f8c.preheader ], [ %v1_10f84, %dec_label_pc_10f80 ]
  %v0_10f8c = phi i32 [ %v1_10f2c, %dec_label_pc_10f8c.preheader ], [ %v1_10f8c, %dec_label_pc_10f80 ]
  %v1_10f8c = add i32 %v0_10f8c, -1
  store i32 %v1_10f8c, i32* %r1.global-to-local, align 4
  %v2_10f8c = icmp ne i32 %v0_10f8c, 0
  store i1 %v2_10f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f8c = icmp eq i32 %v0_10f8c, 1
  store i1 %v7_10f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f8c, label %dec_label_pc_10c90.backedge.thread528, label %dec_label_pc_10f94

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f8c
  %v1_10f94 = add i32 %v0_10f84, -2
  %v2_10f94 = inttoptr i32 %v1_10f94 to i8*
  %v3_10f94 = load i8, i8* %v2_10f94, align 1
  %v4_10f94 = zext i8 %v3_10f94 to i32
  store i32 %v4_10f94, i32* %r2.global-to-local, align 4
  %v2_10f98 = icmp ugt i8 %v3_10f94, 61
  store i1 %v2_10f98, i1* %cpsr_c.global-to-local, align 1
  %v7_10f98 = icmp eq i8 %v3_10f94, 62
  store i1 %v7_10f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f98, label %dec_label_pc_10fa4, label %bb398

bb398:                                            ; preds = %dec_label_pc_10f94
  %v3_10f9c = icmp ugt i8 %v3_10f94, 57
  store i1 %v3_10f9c, i1* %cpsr_c.global-to-local, align 1
  %v8_10f9c = icmp eq i8 %v3_10f94, 58
  store i1 %v8_10f9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f9c, label %dec_label_pc_10fa4, label %dec_label_pc_10f70

dec_label_pc_10fa4:                               ; preds = %dec_label_pc_10f94, %bb398, %dec_label_pc_10f80, %dec_label_pc_10f78, %dec_label_pc_10f70, %dec_label_pc_10f5c, %dec_label_pc_10f38, %dec_label_pc_10f54, %dec_label_pc_10f4c, %bb397
  %v0_10fa8 = phi i32 [ %v1_10f2c, %dec_label_pc_10f5c ], [ %v1_10f2c, %dec_label_pc_10f38 ], [ %v1_10f2c, %dec_label_pc_10f54 ], [ %v1_10f2c, %dec_label_pc_10f4c ], [ %v1_10f2c, %bb397 ], [ %v1_10f8c, %dec_label_pc_10f70 ], [ %v1_10f8c, %dec_label_pc_10f78 ], [ %v1_10f8c, %dec_label_pc_10f80 ], [ %v1_10f8c, %bb398 ], [ %v1_10f8c, %dec_label_pc_10f94 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_10fa8 = add i32 %v0_10fa8, 1
  store i32 %v1_10fa8, i32* @r7, align 4
  %v1_10fac = call i32 @function_11a84(i32 22)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_10fbc = call i32 @function_119c0(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_10fbc, i32* %r0.global-to-local, align 4
  %v3_10fc0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10fc0, i32* %r2.global-to-local, align 4
  store i32 %v3_10fbc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10fcc = load i32, i32* @r5, align 4
  %v1_10fcc = add i32 %v0_10fcc, 4
  %v2_10fcc = inttoptr i32 %v1_10fcc to i32*
  %v3_10fcc = load i32, i32* %v2_10fcc, align 4
  store i32 %v3_10fcc, i32* %r0.global-to-local, align 4
  %v4_10fd0 = call i32 @function_13808(i32 %v3_10fcc, i32 %v3_10fbc, i32 %v3_10fc0, i32 16384)
  store i32 %v4_10fd0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10fe0 = load i32, i32* @r5, align 4
  %v1_10fe0 = add i32 %v0_10fe0, 4
  %v2_10fe0 = inttoptr i32 %v1_10fe0 to i32*
  %v3_10fe0 = load i32, i32* %v2_10fe0, align 4
  store i32 %v3_10fe0, i32* %r0.global-to-local, align 4
  %v4_10fe4 = call i32 @function_13808(i32 %v3_10fe0, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_10fec = call i32 @function_119e4(i32 22)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10ff4 = load i32, i32* @r5, align 4
  %v2_10ff4 = add i32 %v1_10ff4, 12
  %v3_10ff4 = inttoptr i32 %v2_10ff4 to i32*
  store i32 8, i32* %v3_10ff4, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10d0c
  %v1_10ffc = add i32 %v0_10d0c, 24
  %v2_10ffc = inttoptr i32 %v1_10ffc to i32*
  %v3_10ffc = load i32, i32* %v2_10ffc, align 4
  store i32 %v3_10ffc, i32* %r2.global-to-local, align 4
  %v1_11000 = add i32 %v3_10ffc, -1
  store i32 %v1_11000, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11004 = icmp eq i32 %v1_11000, 0
  store i1 %v2_11004, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_11000, 1
  br i1 %tmp399, label %dec_label_pc_10c90.backedge.thread, label %dec_label_pc_1100c

dec_label_pc_1100c:                               ; preds = %dec_label_pc_10ffc
  %v2_1100c = add i32 %v1_11000, %v0_10d0c
  store i32 %v2_1100c, i32* %r3.global-to-local, align 4
  %v1_11010 = add i32 %v2_1100c, 28
  %v2_11010 = inttoptr i32 %v1_11010 to i8*
  %v3_11010 = load i8, i8* %v2_11010, align 1
  %v4_11010 = zext i8 %v3_11010 to i32
  store i32 %v4_11010, i32* %r3.global-to-local, align 4
  %v2_11014 = icmp ugt i8 %v3_11010, 61
  store i1 %v2_11014, i1* %cpsr_c.global-to-local, align 1
  %v7_11014 = icmp eq i8 %v3_11010, 62
  store i1 %v7_11014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11014, label %dec_label_pc_11078, label %bb400

bb400:                                            ; preds = %dec_label_pc_1100c
  %v3_11018 = icmp ugt i8 %v3_11010, 57
  store i1 %v3_11018, i1* %cpsr_c.global-to-local, align 1
  %v8_11018 = icmp eq i8 %v3_11010, 58
  store i1 %v8_11018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11018, label %dec_label_pc_11078, label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %bb400
  %v2_11020 = icmp ugt i8 %v3_11010, 35
  store i1 %v2_11020, i1* %cpsr_c.global-to-local, align 1
  %v7_11020 = icmp eq i8 %v3_11010, 36
  store i1 %v7_11020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11020, label %dec_label_pc_11078, label %dec_label_pc_11028

dec_label_pc_11028:                               ; preds = %dec_label_pc_11020
  %v2_11028 = icmp ugt i8 %v3_11010, 34
  store i1 %v2_11028, i1* %cpsr_c.global-to-local, align 1
  %v7_11028 = icmp eq i8 %v3_11010, 35
  store i1 %v7_11028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11028, label %dec_label_pc_11078, label %dec_label_pc_11030

dec_label_pc_11030:                               ; preds = %dec_label_pc_11028
  %v2_11030 = icmp ugt i8 %v3_11010, 36
  store i1 %v2_11030, i1* %cpsr_c.global-to-local, align 1
  %v7_11030 = icmp eq i8 %v3_11010, 37
  store i1 %v7_11030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11030, label %dec_label_pc_11078, label %dec_label_pc_11060.preheader

dec_label_pc_11060.preheader:                     ; preds = %dec_label_pc_11030
  %v3_11034 = add i32 %v0_10d0c, 28
  %v2_11038 = add i32 %v3_11034, %v3_10ffc
  store i32 %v2_11038, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11060

dec_label_pc_11044:                               ; preds = %bb401
  %v2_11044 = icmp ugt i8 %v3_11068, 35
  store i1 %v2_11044, i1* %cpsr_c.global-to-local, align 1
  %v7_11044 = icmp eq i8 %v3_11068, 36
  store i1 %v7_11044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11044, label %dec_label_pc_11078, label %dec_label_pc_1104c

dec_label_pc_1104c:                               ; preds = %dec_label_pc_11044
  %v2_1104c = icmp ugt i8 %v3_11068, 34
  store i1 %v2_1104c, i1* %cpsr_c.global-to-local, align 1
  %v7_1104c = icmp eq i8 %v3_11068, 35
  store i1 %v7_1104c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1104c, label %dec_label_pc_11078, label %dec_label_pc_11054

dec_label_pc_11054:                               ; preds = %dec_label_pc_1104c
  %v2_11054 = icmp ugt i8 %v3_11068, 36
  store i1 %v2_11054, i1* %cpsr_c.global-to-local, align 1
  %v7_11054 = icmp eq i8 %v3_11068, 37
  store i1 %v7_11054, i1* %cpsr_z.global-to-local, align 1
  %v1_11058 = add i32 %v0_11058, -1
  store i32 %v1_11058, i32* %r3.global-to-local, align 4
  br i1 %v7_11054, label %dec_label_pc_11078, label %dec_label_pc_11060

dec_label_pc_11060:                               ; preds = %dec_label_pc_11060.preheader, %dec_label_pc_11054
  %v0_11058 = phi i32 [ %v2_11038, %dec_label_pc_11060.preheader ], [ %v1_11058, %dec_label_pc_11054 ]
  %v0_11060 = phi i32 [ %v1_11000, %dec_label_pc_11060.preheader ], [ %v1_11060, %dec_label_pc_11054 ]
  %v1_11060 = add i32 %v0_11060, -1
  store i32 %v1_11060, i32* %r1.global-to-local, align 4
  %v2_11060 = icmp ne i32 %v0_11060, 0
  store i1 %v2_11060, i1* %cpsr_c.global-to-local, align 1
  %v7_11060 = icmp eq i32 %v0_11060, 1
  store i1 %v7_11060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11060, label %dec_label_pc_10c90.backedge.thread528, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11060
  %v1_11068 = add i32 %v0_11058, -2
  %v2_11068 = inttoptr i32 %v1_11068 to i8*
  %v3_11068 = load i8, i8* %v2_11068, align 1
  %v4_11068 = zext i8 %v3_11068 to i32
  store i32 %v4_11068, i32* %r2.global-to-local, align 4
  %v2_1106c = icmp ugt i8 %v3_11068, 61
  store i1 %v2_1106c, i1* %cpsr_c.global-to-local, align 1
  %v7_1106c = icmp eq i8 %v3_11068, 62
  store i1 %v7_1106c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1106c, label %dec_label_pc_11078, label %bb401

bb401:                                            ; preds = %dec_label_pc_11068
  %v3_11070 = icmp ugt i8 %v3_11068, 57
  store i1 %v3_11070, i1* %cpsr_c.global-to-local, align 1
  %v8_11070 = icmp eq i8 %v3_11068, 58
  store i1 %v8_11070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11070, label %dec_label_pc_11078, label %dec_label_pc_11044

dec_label_pc_11078:                               ; preds = %dec_label_pc_11068, %bb401, %dec_label_pc_11054, %dec_label_pc_1104c, %dec_label_pc_11044, %dec_label_pc_11030, %dec_label_pc_1100c, %dec_label_pc_11028, %dec_label_pc_11020, %bb400
  %v0_1107c = phi i32 [ %v1_11000, %dec_label_pc_11030 ], [ %v1_11000, %dec_label_pc_1100c ], [ %v1_11000, %dec_label_pc_11028 ], [ %v1_11000, %dec_label_pc_11020 ], [ %v1_11000, %bb400 ], [ %v1_11060, %dec_label_pc_11044 ], [ %v1_11060, %dec_label_pc_1104c ], [ %v1_11060, %dec_label_pc_11054 ], [ %v1_11060, %bb401 ], [ %v1_11060, %dec_label_pc_11068 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_1107c = add i32 %v0_1107c, 1
  store i32 %v1_1107c, i32* @r7, align 4
  %v1_11080 = call i32 @function_11a84(i32 24)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_11090 = call i32 @function_119c0(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_11090, i32* %r0.global-to-local, align 4
  %v3_11094 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11094, i32* %r2.global-to-local, align 4
  store i32 %v3_11090, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110a0 = load i32, i32* @r5, align 4
  %v1_110a0 = add i32 %v0_110a0, 4
  %v2_110a0 = inttoptr i32 %v1_110a0 to i32*
  %v3_110a0 = load i32, i32* %v2_110a0, align 4
  store i32 %v3_110a0, i32* %r0.global-to-local, align 4
  %v4_110a4 = call i32 @function_13808(i32 %v3_110a0, i32 %v3_11090, i32 %v3_11094, i32 16384)
  store i32 %v4_110a4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110b4 = load i32, i32* @r5, align 4
  %v1_110b4 = add i32 %v0_110b4, 4
  %v2_110b4 = inttoptr i32 %v1_110b4 to i32*
  %v3_110b4 = load i32, i32* %v2_110b4, align 4
  store i32 %v3_110b4, i32* %r0.global-to-local, align 4
  %v4_110b8 = call i32 @function_13808(i32 %v3_110b4, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_110c0 = call i32 @function_119e4(i32 24)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_110c8 = load i32, i32* @r5, align 4
  %v2_110c8 = add i32 %v1_110c8, 12
  %v3_110c8 = inttoptr i32 %v2_110c8 to i32*
  store i32 7, i32* %v3_110c8, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_110d0:                               ; preds = %dec_label_pc_10d0c
  %v1_110d0 = add i32 %v0_10d0c, 24
  %v2_110d0 = inttoptr i32 %v1_110d0 to i32*
  %v3_110d0 = load i32, i32* %v2_110d0, align 4
  store i32 %v3_110d0, i32* %r2.global-to-local, align 4
  %v1_110d4 = add i32 %v3_110d0, -1
  store i32 %v1_110d4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110d8 = icmp eq i32 %v1_110d4, 0
  store i1 %v2_110d8, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_110d4, 1
  br i1 %tmp402, label %dec_label_pc_10c90.backedge.thread, label %dec_label_pc_110e0

dec_label_pc_110e0:                               ; preds = %dec_label_pc_110d0
  %v2_110e0 = add i32 %v1_110d4, %v0_10d0c
  store i32 %v2_110e0, i32* %r3.global-to-local, align 4
  %v1_110e4 = add i32 %v2_110e0, 28
  %v2_110e4 = inttoptr i32 %v1_110e4 to i8*
  %v3_110e4 = load i8, i8* %v2_110e4, align 1
  %v4_110e4 = zext i8 %v3_110e4 to i32
  store i32 %v4_110e4, i32* %r3.global-to-local, align 4
  %v2_110e8 = icmp ugt i8 %v3_110e4, 61
  store i1 %v2_110e8, i1* %cpsr_c.global-to-local, align 1
  %v7_110e8 = icmp eq i8 %v3_110e4, 62
  store i1 %v7_110e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110e8, label %dec_label_pc_1114c, label %bb403

bb403:                                            ; preds = %dec_label_pc_110e0
  %v3_110ec = icmp ugt i8 %v3_110e4, 57
  store i1 %v3_110ec, i1* %cpsr_c.global-to-local, align 1
  %v8_110ec = icmp eq i8 %v3_110e4, 58
  store i1 %v8_110ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_110ec, label %dec_label_pc_1114c, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %bb403
  %v2_110f4 = icmp ugt i8 %v3_110e4, 35
  store i1 %v2_110f4, i1* %cpsr_c.global-to-local, align 1
  %v7_110f4 = icmp eq i8 %v3_110e4, 36
  store i1 %v7_110f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110f4, label %dec_label_pc_1114c, label %dec_label_pc_110fc

dec_label_pc_110fc:                               ; preds = %dec_label_pc_110f4
  %v2_110fc = icmp ugt i8 %v3_110e4, 34
  store i1 %v2_110fc, i1* %cpsr_c.global-to-local, align 1
  %v7_110fc = icmp eq i8 %v3_110e4, 35
  store i1 %v7_110fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110fc, label %dec_label_pc_1114c, label %dec_label_pc_11104

dec_label_pc_11104:                               ; preds = %dec_label_pc_110fc
  %v2_11104 = icmp ugt i8 %v3_110e4, 36
  store i1 %v2_11104, i1* %cpsr_c.global-to-local, align 1
  %v7_11104 = icmp eq i8 %v3_110e4, 37
  store i1 %v7_11104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11104, label %dec_label_pc_1114c, label %dec_label_pc_11134.preheader

dec_label_pc_11134.preheader:                     ; preds = %dec_label_pc_11104
  %v3_11108 = add i32 %v0_10d0c, 28
  %v2_1110c = add i32 %v3_11108, %v3_110d0
  store i32 %v2_1110c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11134

dec_label_pc_11118:                               ; preds = %bb404
  %v2_11118 = icmp ugt i8 %v3_1113c, 35
  store i1 %v2_11118, i1* %cpsr_c.global-to-local, align 1
  %v7_11118 = icmp eq i8 %v3_1113c, 36
  store i1 %v7_11118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11118, label %dec_label_pc_1114c, label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %dec_label_pc_11118
  %v2_11120 = icmp ugt i8 %v3_1113c, 34
  store i1 %v2_11120, i1* %cpsr_c.global-to-local, align 1
  %v7_11120 = icmp eq i8 %v3_1113c, 35
  store i1 %v7_11120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11120, label %dec_label_pc_1114c, label %dec_label_pc_11128

dec_label_pc_11128:                               ; preds = %dec_label_pc_11120
  %v2_11128 = icmp ugt i8 %v3_1113c, 36
  store i1 %v2_11128, i1* %cpsr_c.global-to-local, align 1
  %v7_11128 = icmp eq i8 %v3_1113c, 37
  store i1 %v7_11128, i1* %cpsr_z.global-to-local, align 1
  %v1_1112c = add i32 %v0_1112c, -1
  store i32 %v1_1112c, i32* %r3.global-to-local, align 4
  br i1 %v7_11128, label %dec_label_pc_1114c, label %dec_label_pc_11134

dec_label_pc_11134:                               ; preds = %dec_label_pc_11134.preheader, %dec_label_pc_11128
  %v0_1112c = phi i32 [ %v2_1110c, %dec_label_pc_11134.preheader ], [ %v1_1112c, %dec_label_pc_11128 ]
  %v0_11134 = phi i32 [ %v1_110d4, %dec_label_pc_11134.preheader ], [ %v1_11134, %dec_label_pc_11128 ]
  %v1_11134 = add i32 %v0_11134, -1
  store i32 %v1_11134, i32* %r1.global-to-local, align 4
  %v2_11134 = icmp ne i32 %v0_11134, 0
  store i1 %v2_11134, i1* %cpsr_c.global-to-local, align 1
  %v7_11134 = icmp eq i32 %v0_11134, 1
  store i1 %v7_11134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11134, label %dec_label_pc_10c90.backedge.thread528, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11134
  %v1_1113c = add i32 %v0_1112c, -2
  %v2_1113c = inttoptr i32 %v1_1113c to i8*
  %v3_1113c = load i8, i8* %v2_1113c, align 1
  %v4_1113c = zext i8 %v3_1113c to i32
  store i32 %v4_1113c, i32* %r2.global-to-local, align 4
  %v2_11140 = icmp ugt i8 %v3_1113c, 61
  store i1 %v2_11140, i1* %cpsr_c.global-to-local, align 1
  %v7_11140 = icmp eq i8 %v3_1113c, 62
  store i1 %v7_11140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11140, label %dec_label_pc_1114c, label %bb404

bb404:                                            ; preds = %dec_label_pc_1113c
  %v3_11144 = icmp ugt i8 %v3_1113c, 57
  store i1 %v3_11144, i1* %cpsr_c.global-to-local, align 1
  %v8_11144 = icmp eq i8 %v3_1113c, 58
  store i1 %v8_11144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11144, label %dec_label_pc_1114c, label %dec_label_pc_11118

dec_label_pc_1114c:                               ; preds = %dec_label_pc_1113c, %bb404, %dec_label_pc_11128, %dec_label_pc_11120, %dec_label_pc_11118, %dec_label_pc_11104, %dec_label_pc_110e0, %dec_label_pc_110fc, %dec_label_pc_110f4, %bb403
  %v0_11150 = phi i32 [ %v1_110d4, %dec_label_pc_11104 ], [ %v1_110d4, %dec_label_pc_110e0 ], [ %v1_110d4, %dec_label_pc_110fc ], [ %v1_110d4, %dec_label_pc_110f4 ], [ %v1_110d4, %bb403 ], [ %v1_11134, %dec_label_pc_11118 ], [ %v1_11134, %dec_label_pc_11120 ], [ %v1_11134, %dec_label_pc_11128 ], [ %v1_11134, %bb404 ], [ %v1_11134, %dec_label_pc_1113c ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11150 = add i32 %v0_11150, 1
  store i32 %v1_11150, i32* @r7, align 4
  %v1_11154 = call i32 @function_11a84(i32 25)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_11164 = call i32 @function_119c0(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_11164, i32* %r0.global-to-local, align 4
  %v3_11168 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11168, i32* %r2.global-to-local, align 4
  store i32 %v3_11164, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11174 = load i32, i32* @r5, align 4
  %v1_11174 = add i32 %v0_11174, 4
  %v2_11174 = inttoptr i32 %v1_11174 to i32*
  %v3_11174 = load i32, i32* %v2_11174, align 4
  store i32 %v3_11174, i32* %r0.global-to-local, align 4
  %v4_11178 = call i32 @function_13808(i32 %v3_11174, i32 %v3_11164, i32 %v3_11168, i32 16384)
  store i32 %v4_11178, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11188 = load i32, i32* @r5, align 4
  %v1_11188 = add i32 %v0_11188, 4
  %v2_11188 = inttoptr i32 %v1_11188 to i32*
  %v3_11188 = load i32, i32* %v2_11188, align 4
  store i32 %v3_11188, i32* %r0.global-to-local, align 4
  %v4_1118c = call i32 @function_13808(i32 %v3_11188, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11194 = call i32 @function_119e4(i32 25)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_1119c = load i32, i32* @r5, align 4
  %v2_1119c = add i32 %v1_1119c, 12
  %v3_1119c = inttoptr i32 %v2_1119c to i32*
  store i32 9, i32* %v3_1119c, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_111a4:                               ; preds = %dec_label_pc_10d0c
  %v1_111a4 = add i32 %v0_10d0c, 24
  %v2_111a4 = inttoptr i32 %v1_111a4 to i32*
  %v3_111a4 = load i32, i32* %v2_111a4, align 4
  store i32 %v3_111a4, i32* %r2.global-to-local, align 4
  %v1_111a8 = add i32 %v3_111a4, -1
  store i32 %v1_111a8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111ac = icmp eq i32 %v1_111a8, 0
  store i1 %v2_111ac, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v1_111a8, 1
  br i1 %tmp405, label %dec_label_pc_10c90.backedge.thread, label %dec_label_pc_111b4

dec_label_pc_111b4:                               ; preds = %dec_label_pc_111a4
  %v2_111b4 = add i32 %v1_111a8, %v0_10d0c
  store i32 %v2_111b4, i32* %r3.global-to-local, align 4
  %v1_111b8 = add i32 %v2_111b4, 28
  %v2_111b8 = inttoptr i32 %v1_111b8 to i8*
  %v3_111b8 = load i8, i8* %v2_111b8, align 1
  %v4_111b8 = zext i8 %v3_111b8 to i32
  store i32 %v4_111b8, i32* %r3.global-to-local, align 4
  %v2_111bc = icmp ugt i8 %v3_111b8, 61
  store i1 %v2_111bc, i1* %cpsr_c.global-to-local, align 1
  %v7_111bc = icmp eq i8 %v3_111b8, 62
  store i1 %v7_111bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111bc, label %dec_label_pc_11220, label %bb406

bb406:                                            ; preds = %dec_label_pc_111b4
  %v3_111c0 = icmp ugt i8 %v3_111b8, 57
  store i1 %v3_111c0, i1* %cpsr_c.global-to-local, align 1
  %v8_111c0 = icmp eq i8 %v3_111b8, 58
  store i1 %v8_111c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111c0, label %dec_label_pc_11220, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %bb406
  %v2_111c8 = icmp ugt i8 %v3_111b8, 35
  store i1 %v2_111c8, i1* %cpsr_c.global-to-local, align 1
  %v7_111c8 = icmp eq i8 %v3_111b8, 36
  store i1 %v7_111c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111c8, label %dec_label_pc_11220, label %dec_label_pc_111d0

dec_label_pc_111d0:                               ; preds = %dec_label_pc_111c8
  %v2_111d0 = icmp ugt i8 %v3_111b8, 34
  store i1 %v2_111d0, i1* %cpsr_c.global-to-local, align 1
  %v7_111d0 = icmp eq i8 %v3_111b8, 35
  store i1 %v7_111d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d0, label %dec_label_pc_11220, label %dec_label_pc_111d8

dec_label_pc_111d8:                               ; preds = %dec_label_pc_111d0
  %v2_111d8 = icmp ugt i8 %v3_111b8, 36
  store i1 %v2_111d8, i1* %cpsr_c.global-to-local, align 1
  %v7_111d8 = icmp eq i8 %v3_111b8, 37
  store i1 %v7_111d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111d8, label %dec_label_pc_11220, label %dec_label_pc_11208.preheader

dec_label_pc_11208.preheader:                     ; preds = %dec_label_pc_111d8
  %v3_111dc = add i32 %v0_10d0c, 28
  %v2_111e0 = add i32 %v3_111dc, %v3_111a4
  store i32 %v2_111e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11208

dec_label_pc_111ec:                               ; preds = %bb407
  %v2_111ec = icmp ugt i8 %v3_11210, 35
  store i1 %v2_111ec, i1* %cpsr_c.global-to-local, align 1
  %v7_111ec = icmp eq i8 %v3_11210, 36
  store i1 %v7_111ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111ec, label %dec_label_pc_11220, label %dec_label_pc_111f4

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111ec
  %v2_111f4 = icmp ugt i8 %v3_11210, 34
  store i1 %v2_111f4, i1* %cpsr_c.global-to-local, align 1
  %v7_111f4 = icmp eq i8 %v3_11210, 35
  store i1 %v7_111f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f4, label %dec_label_pc_11220, label %dec_label_pc_111fc

dec_label_pc_111fc:                               ; preds = %dec_label_pc_111f4
  %v2_111fc = icmp ugt i8 %v3_11210, 36
  store i1 %v2_111fc, i1* %cpsr_c.global-to-local, align 1
  %v7_111fc = icmp eq i8 %v3_11210, 37
  store i1 %v7_111fc, i1* %cpsr_z.global-to-local, align 1
  %v1_11200 = add i32 %v0_11200, -1
  store i32 %v1_11200, i32* %r3.global-to-local, align 4
  br i1 %v7_111fc, label %dec_label_pc_11220, label %dec_label_pc_11208

dec_label_pc_11208:                               ; preds = %dec_label_pc_11208.preheader, %dec_label_pc_111fc
  %v0_11200 = phi i32 [ %v2_111e0, %dec_label_pc_11208.preheader ], [ %v1_11200, %dec_label_pc_111fc ]
  %v0_11208 = phi i32 [ %v1_111a8, %dec_label_pc_11208.preheader ], [ %v1_11208, %dec_label_pc_111fc ]
  %v1_11208 = add i32 %v0_11208, -1
  store i32 %v1_11208, i32* %r1.global-to-local, align 4
  %v2_11208 = icmp ne i32 %v0_11208, 0
  store i1 %v2_11208, i1* %cpsr_c.global-to-local, align 1
  %v7_11208 = icmp eq i32 %v0_11208, 1
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11208, label %dec_label_pc_10c90.backedge.thread528, label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11208
  %v1_11210 = add i32 %v0_11200, -2
  %v2_11210 = inttoptr i32 %v1_11210 to i8*
  %v3_11210 = load i8, i8* %v2_11210, align 1
  %v4_11210 = zext i8 %v3_11210 to i32
  store i32 %v4_11210, i32* %r2.global-to-local, align 4
  %v2_11214 = icmp ugt i8 %v3_11210, 61
  store i1 %v2_11214, i1* %cpsr_c.global-to-local, align 1
  %v7_11214 = icmp eq i8 %v3_11210, 62
  store i1 %v7_11214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11214, label %dec_label_pc_11220, label %bb407

bb407:                                            ; preds = %dec_label_pc_11210
  %v3_11218 = icmp ugt i8 %v3_11210, 57
  store i1 %v3_11218, i1* %cpsr_c.global-to-local, align 1
  %v8_11218 = icmp eq i8 %v3_11210, 58
  store i1 %v8_11218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11218, label %dec_label_pc_11220, label %dec_label_pc_111ec

dec_label_pc_11220:                               ; preds = %dec_label_pc_11210, %bb407, %dec_label_pc_111fc, %dec_label_pc_111f4, %dec_label_pc_111ec, %dec_label_pc_111d8, %dec_label_pc_111b4, %dec_label_pc_111d0, %dec_label_pc_111c8, %bb406
  %v0_11224 = phi i32 [ %v1_111a8, %dec_label_pc_111d8 ], [ %v1_111a8, %dec_label_pc_111b4 ], [ %v1_111a8, %dec_label_pc_111d0 ], [ %v1_111a8, %dec_label_pc_111c8 ], [ %v1_111a8, %bb406 ], [ %v1_11208, %dec_label_pc_111ec ], [ %v1_11208, %dec_label_pc_111f4 ], [ %v1_11208, %dec_label_pc_111fc ], [ %v1_11208, %bb407 ], [ %v1_11208, %dec_label_pc_11210 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11224 = add i32 %v0_11224, 1
  store i32 %v1_11224, i32* @r7, align 4
  %v1_11228 = call i32 @function_11a84(i32 23)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_11238 = call i32 @function_119c0(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_11238, i32* %r0.global-to-local, align 4
  %v3_1123c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1123c, i32* %r2.global-to-local, align 4
  store i32 %v3_11238, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11248 = load i32, i32* @r5, align 4
  %v1_11248 = add i32 %v0_11248, 4
  %v2_11248 = inttoptr i32 %v1_11248 to i32*
  %v3_11248 = load i32, i32* %v2_11248, align 4
  store i32 %v3_11248, i32* %r0.global-to-local, align 4
  %v4_1124c = call i32 @function_13808(i32 %v3_11248, i32 %v3_11238, i32 %v3_1123c, i32 16384)
  store i32 %v4_1124c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1125c = load i32, i32* @r5, align 4
  %v1_1125c = add i32 %v0_1125c, 4
  %v2_1125c = inttoptr i32 %v1_1125c to i32*
  %v3_1125c = load i32, i32* %v2_1125c, align 4
  store i32 %v3_1125c, i32* %r0.global-to-local, align 4
  %v4_11260 = call i32 @function_13808(i32 %v3_1125c, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11268 = call i32 @function_119e4(i32 23)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_11270 = load i32, i32* @r5, align 4
  %v2_11270 = add i32 %v1_11270, 12
  %v3_11270 = inttoptr i32 %v2_11270 to i32*
  store i32 6, i32* %v3_11270, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_11278:                               ; preds = %dec_label_pc_10d0c
  %v1_11278 = add i32 %v0_10d0c, 24
  %v2_11278 = inttoptr i32 %v1_11278 to i32*
  %v3_11278 = load i32, i32* %v2_11278, align 4
  store i32 %v3_11278, i32* %r2.global-to-local, align 4
  %v1_1127c = add i32 %v3_11278, -1
  store i32 %v1_1127c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11280 = icmp eq i32 %v1_1127c, 0
  store i1 %v2_11280, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v1_1127c, 1
  br i1 %tmp408, label %dec_label_pc_112f4, label %dec_label_pc_11288

dec_label_pc_11288:                               ; preds = %dec_label_pc_11278
  %v2_11288 = add i32 %v1_1127c, %v0_10d0c
  store i32 %v2_11288, i32* %r3.global-to-local, align 4
  %v1_1128c = add i32 %v2_11288, 28
  %v2_1128c = inttoptr i32 %v1_1128c to i8*
  %v3_1128c = load i8, i8* %v2_1128c, align 1
  %v4_1128c = zext i8 %v3_1128c to i32
  store i32 %v4_1128c, i32* %r3.global-to-local, align 4
  %v2_11290 = icmp ugt i8 %v3_1128c, 61
  store i1 %v2_11290, i1* %cpsr_c.global-to-local, align 1
  %v7_11290 = icmp eq i8 %v3_1128c, 62
  store i1 %v7_11290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11290, label %dec_label_pc_115ac, label %bb409

bb409:                                            ; preds = %dec_label_pc_11288
  %v3_11294 = icmp ugt i8 %v3_1128c, 57
  store i1 %v3_11294, i1* %cpsr_c.global-to-local, align 1
  %v8_11294 = icmp eq i8 %v3_1128c, 58
  store i1 %v8_11294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11294, label %dec_label_pc_115ac, label %dec_label_pc_1129c

dec_label_pc_1129c:                               ; preds = %bb409
  %v2_1129c = icmp ugt i8 %v3_1128c, 35
  store i1 %v2_1129c, i1* %cpsr_c.global-to-local, align 1
  %v7_1129c = icmp eq i8 %v3_1128c, 36
  store i1 %v7_1129c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1129c, label %dec_label_pc_115ac, label %dec_label_pc_112a4

dec_label_pc_112a4:                               ; preds = %dec_label_pc_1129c
  %v2_112a4 = icmp ugt i8 %v3_1128c, 34
  store i1 %v2_112a4, i1* %cpsr_c.global-to-local, align 1
  %v7_112a4 = icmp eq i8 %v3_1128c, 35
  store i1 %v7_112a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112a4, label %dec_label_pc_115ac, label %dec_label_pc_112ac

dec_label_pc_112ac:                               ; preds = %dec_label_pc_112a4
  %v2_112ac = icmp ugt i8 %v3_1128c, 36
  store i1 %v2_112ac, i1* %cpsr_c.global-to-local, align 1
  %v7_112ac = icmp eq i8 %v3_1128c, 37
  store i1 %v7_112ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ac, label %dec_label_pc_115ac, label %dec_label_pc_112ec.preheader

dec_label_pc_112ec.preheader:                     ; preds = %dec_label_pc_112ac
  %v3_112b0 = add i32 %v0_10d0c, 28
  %v2_112b4 = add i32 %v3_112b0, %v3_11278
  store i32 %v2_112b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_112ec

dec_label_pc_112c0:                               ; preds = %dec_label_pc_112ec
  %v1_112c0 = add i32 %v0_112e4, -2
  %v2_112c0 = inttoptr i32 %v1_112c0 to i8*
  %v3_112c0 = load i8, i8* %v2_112c0, align 1
  %v4_112c0 = zext i8 %v3_112c0 to i32
  store i32 %v4_112c0, i32* %r2.global-to-local, align 4
  %v2_112c4 = icmp ugt i8 %v3_112c0, 61
  store i1 %v2_112c4, i1* %cpsr_c.global-to-local, align 1
  %v7_112c4 = icmp eq i8 %v3_112c0, 62
  store i1 %v7_112c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112c4, label %dec_label_pc_115ac, label %bb410

bb410:                                            ; preds = %dec_label_pc_112c0
  %v3_112c8 = icmp ugt i8 %v3_112c0, 57
  store i1 %v3_112c8, i1* %cpsr_c.global-to-local, align 1
  %v8_112c8 = icmp eq i8 %v3_112c0, 58
  store i1 %v8_112c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112c8, label %dec_label_pc_115ac, label %dec_label_pc_112d0

dec_label_pc_112d0:                               ; preds = %bb410
  %v2_112d0 = icmp ugt i8 %v3_112c0, 35
  store i1 %v2_112d0, i1* %cpsr_c.global-to-local, align 1
  %v7_112d0 = icmp eq i8 %v3_112c0, 36
  store i1 %v7_112d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112d0, label %dec_label_pc_115ac, label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112d0
  %v2_112d8 = icmp ugt i8 %v3_112c0, 34
  store i1 %v2_112d8, i1* %cpsr_c.global-to-local, align 1
  %v7_112d8 = icmp eq i8 %v3_112c0, 35
  store i1 %v7_112d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112d8, label %dec_label_pc_115ac, label %dec_label_pc_112e0

dec_label_pc_112e0:                               ; preds = %dec_label_pc_112d8
  %v2_112e0 = icmp ugt i8 %v3_112c0, 36
  store i1 %v2_112e0, i1* %cpsr_c.global-to-local, align 1
  %v7_112e0 = icmp eq i8 %v3_112c0, 37
  store i1 %v7_112e0, i1* %cpsr_z.global-to-local, align 1
  %v1_112e4 = add i32 %v0_112e4, -1
  store i32 %v1_112e4, i32* %r3.global-to-local, align 4
  br i1 %v7_112e0, label %dec_label_pc_115ac, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112ec.preheader, %dec_label_pc_112e0
  %v0_112e4 = phi i32 [ %v2_112b4, %dec_label_pc_112ec.preheader ], [ %v1_112e4, %dec_label_pc_112e0 ]
  %v0_112ec = phi i32 [ %v1_1127c, %dec_label_pc_112ec.preheader ], [ %v1_112ec, %dec_label_pc_112e0 ]
  %v1_112ec = add i32 %v0_112ec, -1
  store i32 %v1_112ec, i32* %r0.global-to-local, align 4
  %v2_112ec = icmp ne i32 %v0_112ec, 0
  store i1 %v2_112ec, i1* %cpsr_c.global-to-local, align 1
  %v7_112ec = icmp eq i32 %v0_112ec, 1
  store i1 %v7_112ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ec, label %dec_label_pc_112f4, label %dec_label_pc_112c0

dec_label_pc_112f4:                               ; preds = %dec_label_pc_112ec, %dec_label_pc_11278
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_112f8 = call i32 @function_11a84(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11300 = call i32 @function_11a84(i32 31)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_11310 = call i32 @function_119c0(i32 30, i32* nonnull %stack_var_-60)
  store i32 %v3_11310, i32* @r4, align 4
  store i32 %v2_1131c, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_11324 = call i32 @function_119c0(i32 31, i32* %v2_11324)
  %v3_11328 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_11324, 16777216
  %v1_1132c = sdiv i32 %sext, 16777216
  store i32 %v1_1132c, i32* @r6, align 4
  %v0_11330 = load i32, i32* @r4, align 4
  store i32 %v0_11330, i32* %r2.global-to-local, align 4
  %v1_11334 = add i32 %v3_11328, -1
  store i32 %v1_11334, i32* %r3.global-to-local, align 4
  %v0_11338 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11338, i32* %r0.global-to-local, align 4
  %v0_1133c = load i32, i32* @r5, align 4
  %v1_1133c = add i32 %v0_1133c, 24
  %v2_1133c = inttoptr i32 %v1_1133c to i32*
  %v3_1133c = load i32, i32* %v2_1133c, align 4
  store i32 %v3_1133c, i32* %r1.global-to-local, align 4
  %v4_11340 = call i32 @function_12508(i32 %v0_11338, i32 %v3_1133c, i32 %v0_11330, i32 %v1_11334)
  store i32 %v4_11340, i32* %r0.global-to-local, align 4
  %v2_11344 = icmp eq i32 %v4_11340, -1
  store i1 %v2_11344, i1* %cpsr_c.global-to-local, align 1
  %v7_11344 = icmp eq i32 %v4_11340, -1
  store i1 %v7_11344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11344, label %dec_label_pc_116e8, label %dec_label_pc_11354

dec_label_pc_11354:                               ; preds = %dec_label_pc_116e8, %dec_label_pc_112f4
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_11358 = call i32 @function_119e4(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11360 = call i32 @function_119e4(i32 31)
  store i32 %v1_11360, i32* %r0.global-to-local, align 4
  %v0_11364 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11364 = icmp eq i32 %v0_11364, 0
  store i1 %v2_11364, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_11364, 1
  br i1 %tmp411, label %dec_label_pc_11458, label %dec_label_pc_11354.dec_label_pc_115b0_crit_edge

dec_label_pc_11354.dec_label_pc_115b0_crit_edge:  ; preds = %dec_label_pc_11354
  %v0_115b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_115b0

dec_label_pc_11370:                               ; preds = %dec_label_pc_10d0c
  %v1_11370 = add i32 %v0_10d0c, 24
  %v2_11370 = inttoptr i32 %v1_11370 to i32*
  %v3_11370 = load i32, i32* %v2_11370, align 4
  store i32 %v3_11370, i32* %r2.global-to-local, align 4
  %v1_11374 = add i32 %v3_11370, -1
  store i32 %v1_11374, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11378 = icmp eq i32 %v1_11374, 0
  store i1 %v2_11378, i1* %cpsr_z.global-to-local, align 1
  %tmp412 = icmp slt i32 %v1_11374, 1
  br i1 %tmp412, label %dec_label_pc_113dc, label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %dec_label_pc_11370
  %v2_11380 = add i32 %v1_11374, %v0_10d0c
  store i32 %v2_11380, i32* %r3.global-to-local, align 4
  %v1_11384 = add i32 %v2_11380, 28
  %v2_11384 = inttoptr i32 %v1_11384 to i8*
  %v3_11384 = load i8, i8* %v2_11384, align 1
  %v4_11384 = zext i8 %v3_11384 to i32
  store i32 %v4_11384, i32* %r3.global-to-local, align 4
  %v2_11388 = icmp ugt i8 %v3_11384, 61
  store i1 %v2_11388, i1* %cpsr_c.global-to-local, align 1
  %v7_11388 = icmp eq i8 %v3_11384, 62
  store i1 %v7_11388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11388, label %dec_label_pc_115a4, label %bb413

bb413:                                            ; preds = %dec_label_pc_11380
  %v3_1138c = icmp ugt i8 %v3_11384, 57
  store i1 %v3_1138c, i1* %cpsr_c.global-to-local, align 1
  %v8_1138c = icmp eq i8 %v3_11384, 58
  store i1 %v8_1138c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1138c, label %dec_label_pc_115a4, label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %bb413
  %v2_11394 = icmp ugt i8 %v3_11384, 35
  store i1 %v2_11394, i1* %cpsr_c.global-to-local, align 1
  %v7_11394 = icmp eq i8 %v3_11384, 36
  store i1 %v7_11394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11394, label %dec_label_pc_115a4, label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11394
  %v2_1139c = icmp ugt i8 %v3_11384, 34
  store i1 %v2_1139c, i1* %cpsr_c.global-to-local, align 1
  %v7_1139c = icmp eq i8 %v3_11384, 35
  store i1 %v7_1139c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1139c, label %dec_label_pc_115a4, label %dec_label_pc_113d4.preheader

dec_label_pc_113d4.preheader:                     ; preds = %dec_label_pc_1139c
  %v3_113a0 = add i32 %v0_10d0c, 28
  %v2_113a4 = add i32 %v3_113a0, %v3_11370
  store i32 %v2_113a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_113d4

dec_label_pc_113b0:                               ; preds = %dec_label_pc_113d4
  %v1_113b0 = add i32 %v0_113cc, -2
  %v2_113b0 = inttoptr i32 %v1_113b0 to i8*
  %v3_113b0 = load i8, i8* %v2_113b0, align 1
  %v4_113b0 = zext i8 %v3_113b0 to i32
  store i32 %v4_113b0, i32* %r2.global-to-local, align 4
  %v2_113b4 = icmp ugt i8 %v3_113b0, 61
  store i1 %v2_113b4, i1* %cpsr_c.global-to-local, align 1
  %v7_113b4 = icmp eq i8 %v3_113b0, 62
  store i1 %v7_113b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113b4, label %dec_label_pc_115a4, label %bb414

bb414:                                            ; preds = %dec_label_pc_113b0
  %v3_113b8 = icmp ugt i8 %v3_113b0, 57
  store i1 %v3_113b8, i1* %cpsr_c.global-to-local, align 1
  %v8_113b8 = icmp eq i8 %v3_113b0, 58
  store i1 %v8_113b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113b8, label %dec_label_pc_115a4, label %dec_label_pc_113c0

dec_label_pc_113c0:                               ; preds = %bb414
  %v2_113c0 = icmp ugt i8 %v3_113b0, 35
  store i1 %v2_113c0, i1* %cpsr_c.global-to-local, align 1
  %v7_113c0 = icmp eq i8 %v3_113b0, 36
  store i1 %v7_113c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c0, label %dec_label_pc_115a4, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113c0
  %v2_113c8 = icmp ugt i8 %v3_113b0, 34
  store i1 %v2_113c8, i1* %cpsr_c.global-to-local, align 1
  %v7_113c8 = icmp eq i8 %v3_113b0, 35
  store i1 %v7_113c8, i1* %cpsr_z.global-to-local, align 1
  %v1_113cc = add i32 %v0_113cc, -1
  store i32 %v1_113cc, i32* %r3.global-to-local, align 4
  br i1 %v7_113c8, label %dec_label_pc_115a4, label %dec_label_pc_113d4

dec_label_pc_113d4:                               ; preds = %dec_label_pc_113d4.preheader, %dec_label_pc_113c8
  %v0_113cc = phi i32 [ %v2_113a4, %dec_label_pc_113d4.preheader ], [ %v1_113cc, %dec_label_pc_113c8 ]
  %v0_113d4 = phi i32 [ %v1_11374, %dec_label_pc_113d4.preheader ], [ %v1_113d4, %dec_label_pc_113c8 ]
  %v1_113d4 = add i32 %v0_113d4, -1
  store i32 %v1_113d4, i32* %r0.global-to-local, align 4
  %v2_113d4 = icmp ne i32 %v0_113d4, 0
  store i1 %v2_113d4, i1* %cpsr_c.global-to-local, align 1
  %v7_113d4 = icmp eq i32 %v0_113d4, 1
  store i1 %v7_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d4, label %dec_label_pc_113dc, label %dec_label_pc_113b0

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113d4, %dec_label_pc_11370
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_113e0 = call i32 @function_11a84(i32 29)
  store i32 %v2_1131c, i32* %r1.global-to-local, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v3_113f0 = call i32 @function_119c0(i32 29, i32* %v2_11324)
  %v3_113f4 = load i8, i8* %stack_var_-56, align 1
  %v4_113f4 = sext i8 %v3_113f4 to i32
  store i32 %v3_113f0, i32* %r2.global-to-local, align 4
  %v1_113fc = add nsw i32 %v4_113f4, -1
  store i32 %v1_113fc, i32* %r3.global-to-local, align 4
  %v0_11400 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11400, i32* %r0.global-to-local, align 4
  %v0_11404 = load i32, i32* @r5, align 4
  %v1_11404 = add i32 %v0_11404, 24
  %v2_11404 = inttoptr i32 %v1_11404 to i32*
  %v3_11404 = load i32, i32* %v2_11404, align 4
  store i32 %v3_11404, i32* %r1.global-to-local, align 4
  %v4_11408 = call i32 @function_12508(i32 %v0_11400, i32 %v3_11404, i32 %v3_113f0, i32 %v1_113fc)
  store i32 %v4_11408, i32* %r0.global-to-local, align 4
  %v1_1140c = add i32 %v4_11408, 1
  store i32 %v1_1140c, i32* @r7, align 4
  %v2_1140c = icmp eq i32 %v4_11408, -1
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i32 %v1_1140c, 0
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %thread-pre-split103, label %bb415

bb415:                                            ; preds = %dec_label_pc_113dc
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_113dc, %bb415
  %v0_11414 = phi i1 [ false, %bb415 ], [ true, %dec_label_pc_113dc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_11414, i1* %cpsr_z.global-to-local, align 1
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_11818 = call i32 @function_119e4(i32 29)
  store i32 %v1_11818, i32* %r0.global-to-local, align 4
  %v0_1181c = load i32, i32* @r5, align 4
  br i1 %v0_11414, label %dec_label_pc_11814, label %dec_label_pc_11424

dec_label_pc_11424:                               ; preds = %thread-pre-split103, %dec_label_pc_115a4
  %v0_11424 = phi i32 [ %v0_10d0c, %dec_label_pc_115a4 ], [ %v0_1181c, %thread-pre-split103 ]
  %v1_11424 = inttoptr i32 %v0_11424 to i32*
  %v2_11424 = load i32, i32* %v1_11424, align 4
  store i32 %v2_11424, i32* %r3.global-to-local, align 4
  %v1_11428 = add i32 %v0_11424, 4
  %v2_11428 = inttoptr i32 %v1_11428 to i32*
  %v3_11428 = load i32, i32* %v2_11428, align 4
  store i32 %v3_11428, i32* %r0.global-to-local, align 4
  %v1_1142c = add i32 %v2_11424, 13
  %v2_1142c = inttoptr i32 %v1_1142c to i8*
  %v3_1142c = load i8, i8* %v2_1142c, align 1
  %v4_1142c = zext i8 %v3_1142c to i32
  store i32 %v4_1142c, i32* %r2.global-to-local, align 4
  %v1_11430 = add i32 %v2_11424, 4
  %v2_11430 = inttoptr i32 %v1_11430 to i32*
  %v3_11430 = load i32, i32* %v2_11430, align 4
  store i32 %v3_11430, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11438 = call i32 @function_13808(i32 %v3_11428, i32 %v3_11430, i32 %v4_1142c, i32 16384)
  store i32 %v4_11438, i32* %r0.global-to-local, align 4
  %v0_1143c = load i32, i32* @r5, align 4
  %v1_1143c = add i32 %v0_1143c, 4
  %v2_1143c = inttoptr i32 %v1_1143c to i32*
  %v3_1143c = load i32, i32* %v2_1143c, align 4
  store i32 %v3_1143c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_1144c = call i32 @function_13808(i32 %v3_1143c, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_11454 = load i32, i32* @r5, align 4
  %v2_11454 = add i32 %v1_11454, 12
  %v3_11454 = inttoptr i32 %v2_11454 to i32*
  store i32 5, i32* %v3_11454, align 4
  br label %dec_label_pc_11458

dec_label_pc_11458:                               ; preds = %dec_label_pc_11524, %bb419, %dec_label_pc_11354, %dec_label_pc_11634, %dec_label_pc_115b0, %dec_label_pc_11678, %dec_label_pc_11424
  %v0_11458 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11458 = icmp eq i32 %v0_11458, 0
  store i1 %v2_11458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11458, label %dec_label_pc_10c8c.loopexit, label %dec_label_pc_10e2c

dec_label_pc_11464:                               ; preds = %dec_label_pc_10d0c
  %v1_11464 = add i32 %v0_10d0c, 24
  %v2_11464 = inttoptr i32 %v1_11464 to i32*
  %v3_11464 = load i32, i32* %v2_11464, align 4
  store i32 %v3_11464, i32* %r2.global-to-local, align 4
  %v0_11468 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11468, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_11470146 = icmp eq i32 %v3_11464, 0
  store i1 %v3_11470146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11470146, i1* %cpsr_z.global-to-local, align 1
  %v6_11474153 = icmp sgt i32 %v3_11464, 0
  br i1 %v6_11474153, label %dec_label_pc_11478.preheader, label %dec_label_pc_11524

dec_label_pc_11470.loopexit:                      ; preds = %dec_label_pc_11494
  %v2_1149c = add i32 %v1_1149c, 2
  store i32 %v2_1149c, i32* @r4, align 4
  %v2_114a0 = add i32 %v1_114a0, 2
  store i32 %v2_114a0, i32* @r7, align 4
  %v3_11470 = icmp uge i32 %v2_114a0, %v1_11470
  store i1 %v3_11470, i1* %cpsr_c.global-to-local, align 1
  %v9_11470 = icmp eq i32 %v2_114a0, %v1_11470
  store i1 %v9_11470, i1* %cpsr_z.global-to-local, align 1
  %v6_11474 = icmp slt i32 %v2_114a0, %v1_11470
  br i1 %v6_11474, label %dec_label_pc_11478.preheader, label %dec_label_pc_11524

dec_label_pc_11478.preheader:                     ; preds = %dec_label_pc_11464, %dec_label_pc_11470.loopexit
  %v6_1152c239 = phi i32 [ %v6_1152c240, %dec_label_pc_11470.loopexit ], [ %v0_10d0c, %dec_label_pc_11464 ]
  %v1_114a0222 = phi i32 [ %v2_114a0, %dec_label_pc_11470.loopexit ], [ 0, %dec_label_pc_11464 ]
  %v1_11484220 = phi i32 [ %v1_11470, %dec_label_pc_11470.loopexit ], [ %v3_11464, %dec_label_pc_11464 ]
  %v0_11478218 = phi i32 [ %v2_1149c, %dec_label_pc_11470.loopexit ], [ %v0_11468, %dec_label_pc_11464 ]
  br label %dec_label_pc_11478

dec_label_pc_11478:                               ; preds = %dec_label_pc_11478.preheader, %dec_label_pc_11508
  %v6_1152c240 = phi i32 [ %v6_1152c239, %dec_label_pc_11478.preheader ], [ %v0_11510, %dec_label_pc_11508 ]
  %v1_114a0 = phi i32 [ %v1_114a0222, %dec_label_pc_11478.preheader ], [ %v1_11514, %dec_label_pc_11508 ]
  %v1_11470 = phi i32 [ %v1_11484220, %dec_label_pc_11478.preheader ], [ %v3_11510, %dec_label_pc_11508 ]
  %v1_1149c = phi i32 [ %v0_11478218, %dec_label_pc_11478.preheader ], [ %v1_1151c, %dec_label_pc_11508 ]
  %v1_11478 = inttoptr i32 %v1_1149c to i8*
  %v2_11478 = load i8, i8* %v1_11478, align 1
  %v3_11478 = zext i8 %v2_11478 to i32
  store i32 %v3_11478, i32* @r3, align 4
  %v2_1147c = icmp eq i8 %v2_11478, -1
  store i1 %v2_1147c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1147c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1147c, label %dec_label_pc_11484, label %dec_label_pc_11524

dec_label_pc_11484:                               ; preds = %dec_label_pc_11478
  %v0_11484 = load i32, i32* %sl.global-to-local, align 4
  %v2_11484 = add i32 %v0_11484, %v1_11470
  store i32 %v2_11484, i32* %r1.global-to-local, align 4
  %v1_11488 = add i32 %v1_1149c, 1
  store i32 %v1_11488, i32* @r6, align 4
  %v3_1148c = icmp uge i32 %v2_11484, %v1_11488
  store i1 %v3_1148c, i1* %cpsr_c.global-to-local, align 1
  %v9_1148c = icmp eq i32 %v2_11484, %v1_11488
  store i1 %v9_1148c, i1* %cpsr_z.global-to-local, align 1
  %v2_11490 = xor i1 %v3_1148c, true
  %v3_11490 = or i1 %v9_1148c, %v2_11490
  br i1 %v3_11490, label %dec_label_pc_11524, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_11484
  %v2_11494 = inttoptr i32 %v1_11488 to i8*
  %v3_11494 = load i8, i8* %v2_11494, align 1
  %v4_11494 = zext i8 %v3_11494 to i32
  store i32 %v4_11494, i32* @r3, align 4
  %v2_11498 = icmp eq i8 %v3_11494, -1
  store i1 %v2_11498, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11498, label %dec_label_pc_11470.loopexit, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %dec_label_pc_11494
  %v2_114a8 = icmp ugt i8 %v3_11494, -4
  store i1 %v2_114a8, i1* %cpsr_c.global-to-local, align 1
  %v7_114a8 = icmp eq i8 %v3_11494, -3
  store i1 %v7_114a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114a8, label %dec_label_pc_11534, label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %dec_label_pc_114a8
  %v1_114b0 = add i32 %v1_1149c, 2
  store i32 %v1_114b0, i32* @r3, align 4
  %v3_114b4 = icmp uge i32 %v2_11484, %v1_114b0
  store i1 %v3_114b4, i1* %cpsr_c.global-to-local, align 1
  %v9_114b4 = icmp eq i32 %v2_11484, %v1_114b0
  store i1 %v9_114b4, i1* %cpsr_z.global-to-local, align 1
  %v2_114b8 = xor i1 %v3_114b4, true
  %v3_114b8 = or i1 %v9_114b4, %v2_114b8
  br i1 %v3_114b8, label %dec_label_pc_11524, label %dec_label_pc_114bc

dec_label_pc_114bc:                               ; preds = %dec_label_pc_11594, %bb420, %.thread115, %dec_label_pc_114b0
  %v0_114bc = load i32, i32* @r6, align 4
  %v1_114bc = inttoptr i32 %v0_114bc to i8*
  %v2_114bc = load i8, i8* %v1_114bc, align 1
  %v3_114bc = zext i8 %v2_114bc to i32
  store i32 %v3_114bc, i32* %r3.global-to-local, align 4
  %v2_114c0 = icmp ugt i8 %v2_114bc, -4
  store i1 %v2_114c0, i1* %cpsr_c.global-to-local, align 1
  %v7_114c0 = icmp eq i8 %v2_114bc, -3
  store i1 %v7_114c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114c0, label %.thread107, label %dec_label_pc_114d0

.thread107:                                       ; preds = %dec_label_pc_114bc
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_114bc, align 1
  %v0_114cc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_114cc.pr.pr, label %.thread110, label %.thread107.dec_label_pc_114d0thread-pre-split_crit_edge

.thread107.dec_label_pc_114d0thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_114d0.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114bc, %.thread107.dec_label_pc_114d0thread-pre-split_crit_edge
  %v0_114d0.pr = phi i32 [ %v0_114d0.pr.pre, %.thread107.dec_label_pc_114d0thread-pre-split_crit_edge ], [ %v3_114bc, %dec_label_pc_114bc ]
  %v2_114d0 = icmp ugt i32 %v0_114d0.pr, 250
  store i1 %v2_114d0, i1* %cpsr_c.global-to-local, align 1
  %v7_114d0 = icmp eq i32 %v0_114d0.pr, 251
  store i1 %v7_114d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114d0, label %bb416, label %.thread110

bb416:                                            ; preds = %dec_label_pc_114d0
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_114d8 = load i32, i32* @r6, align 4
  %v4_114d8 = inttoptr i32 %v3_114d8 to i8*
  store i8 -3, i8* %v4_114d8, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_114d0, %.thread107, %bb416
  %v0_114dc = load i32, i32* @r4, align 4
  %v1_114dc = add i32 %v0_114dc, 2
  %v2_114dc = inttoptr i32 %v1_114dc to i8*
  %v3_114dc = load i8, i8* %v2_114dc, align 1
  %v4_114dc = zext i8 %v3_114dc to i32
  store i32 %v4_114dc, i32* %r3.global-to-local, align 4
  %v2_114e0 = icmp ugt i8 %v3_114dc, -4
  store i1 %v2_114e0, i1* %cpsr_c.global-to-local, align 1
  %v7_114e0 = icmp eq i8 %v3_114dc, -3
  store i1 %v7_114e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e0, label %.thread111, label %dec_label_pc_114f0

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_114dc, align 1
  %v0_114ec.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_114ec.pr.pr, label %.thread114, label %.thread111.dec_label_pc_114f0thread-pre-split_crit_edge

.thread111.dec_label_pc_114f0thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_114f0.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %.thread110, %.thread111.dec_label_pc_114f0thread-pre-split_crit_edge
  %v0_114f0.pr = phi i32 [ %v0_114f0.pr.pre, %.thread111.dec_label_pc_114f0thread-pre-split_crit_edge ], [ %v4_114dc, %.thread110 ]
  %v2_114f0 = icmp ugt i32 %v0_114f0.pr, 250
  store i1 %v2_114f0, i1* %cpsr_c.global-to-local, align 1
  %v7_114f0 = icmp eq i32 %v0_114f0.pr, 251
  store i1 %v7_114f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114f0, label %bb417, label %.thread114

bb417:                                            ; preds = %dec_label_pc_114f0
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_114f8 = load i32, i32* @r4, align 4
  %v4_114f8 = add i32 %v3_114f8, 2
  %v5_114f8 = inttoptr i32 %v4_114f8 to i8*
  store i8 -3, i8* %v5_114f8, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_114f0, %.thread111, %bb417
  %v0_114fc = load i32, i32* @r5, align 4
  %v1_114fc = add i32 %v0_114fc, 4
  %v2_114fc = inttoptr i32 %v1_114fc to i32*
  %v3_114fc = load i32, i32* %v2_114fc, align 4
  store i32 %v3_114fc, i32* %r0.global-to-local, align 4
  %v0_11500 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_11690, %.thread114
  %v0_1150c = phi i32 [ %v3_116a8, %dec_label_pc_11690 ], [ %v3_114fc, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_11554, %dec_label_pc_11690 ], [ %v0_11500, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_11690 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_1150c = call i32 @function_13808(i32 %v0_1150c, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_1150c, i32* %r0.global-to-local, align 4
  %v0_11510 = load i32, i32* @r5, align 4
  %v1_11510 = add i32 %v0_11510, 24
  %v2_11510 = inttoptr i32 %v1_11510 to i32*
  %v3_11510 = load i32, i32* %v2_11510, align 4
  store i32 %v3_11510, i32* %r2.global-to-local, align 4
  %v0_11514 = load i32, i32* @r7, align 4
  %v1_11514 = add i32 %v0_11514, 3
  store i32 %v1_11514, i32* @r7, align 4
  %v3_11518 = icmp uge i32 %v1_11514, %v3_11510
  store i1 %v3_11518, i1* %cpsr_c.global-to-local, align 1
  %v9_11518 = icmp eq i32 %v1_11514, %v3_11510
  store i1 %v9_11518, i1* %cpsr_z.global-to-local, align 1
  %v0_1151c = load i32, i32* @r4, align 4
  %v1_1151c = add i32 %v0_1151c, 3
  store i32 %v1_1151c, i32* @r4, align 4
  %v5_11520 = icmp slt i32 %v1_11514, %v3_11510
  br i1 %v5_11520, label %dec_label_pc_11478, label %dec_label_pc_11524

dec_label_pc_11524:                               ; preds = %dec_label_pc_11470.loopexit, %dec_label_pc_11478, %dec_label_pc_11508, %dec_label_pc_114b0, %dec_label_pc_11484, %dec_label_pc_11464, %dec_label_pc_11534.dec_label_pc_11524.loopexit_crit_edge
  %v6_1152c = phi i32 [ %v0_11560, %dec_label_pc_11534.dec_label_pc_11524.loopexit_crit_edge ], [ %v0_10d0c, %dec_label_pc_11464 ], [ %v6_1152c240, %dec_label_pc_11478 ], [ %v0_11510, %dec_label_pc_11508 ], [ %v6_1152c240, %dec_label_pc_114b0 ], [ %v6_1152c240, %dec_label_pc_11484 ], [ %v6_1152c240, %dec_label_pc_11470.loopexit ]
  %v0_11524 = phi i32 [ %v0_11524.pre.pre, %dec_label_pc_11534.dec_label_pc_11524.loopexit_crit_edge ], [ 0, %dec_label_pc_11464 ], [ %v1_114a0, %dec_label_pc_11478 ], [ %v1_11514, %dec_label_pc_11508 ], [ %v1_114a0, %dec_label_pc_114b0 ], [ %v1_114a0, %dec_label_pc_11484 ], [ %v2_114a0, %dec_label_pc_11470.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11524 = icmp eq i32 %v0_11524, 0
  store i1 %v2_11524, i1* %cpsr_z.global-to-local, align 1
  %tmp418 = icmp slt i32 %v0_11524, 1
  br i1 %tmp418, label %dec_label_pc_11458, label %bb419

bb419:                                            ; preds = %dec_label_pc_11524
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_1152c = add i32 %v6_1152c, 12
  %v8_1152c = inttoptr i32 %v7_1152c to i32*
  store i32 3, i32* %v8_1152c, align 4
  br label %dec_label_pc_11458

dec_label_pc_11534:                               ; preds = %dec_label_pc_114a8
  store i32 %v2_11538, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_188ab.524 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_11538, i32* @r0, align 4
  %v0_11548 = call i32 @function_135e0()
  store i32 9, i32* @r2, align 4
  store i32 %v2_11554, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_188a2.526 to i32), i32* @r1, align 4
  %v0_1155c = call i32 @function_135e0()
  store i32 %v0_1155c, i32* %r0.global-to-local, align 4
  %v0_11560 = load i32, i32* @r5, align 4
  %v1_11560 = add i32 %v0_11560, 24
  %v2_11560 = inttoptr i32 %v1_11560 to i32*
  %v3_11560 = load i32, i32* %v2_11560, align 4
  %v0_11564 = load i32, i32* @r4, align 4
  %v1_11564 = add i32 %v0_11564, 2
  store i32 %v1_11564, i32* %r2.global-to-local, align 4
  %v0_11568 = load i32, i32* %sl.global-to-local, align 4
  %v2_11568 = add i32 %v0_11568, %v3_11560
  store i32 %v2_11568, i32* @r3, align 4
  %v3_1156c = icmp uge i32 %v2_11568, %v1_11564
  store i1 %v3_1156c, i1* %cpsr_c.global-to-local, align 1
  %v9_1156c = icmp eq i32 %v2_11568, %v1_11564
  store i1 %v9_1156c, i1* %cpsr_z.global-to-local, align 1
  %v2_11570 = xor i1 %v3_1156c, true
  %v3_11570 = or i1 %v9_1156c, %v2_11570
  br i1 %v3_11570, label %dec_label_pc_11534.dec_label_pc_11524.loopexit_crit_edge, label %dec_label_pc_11574

dec_label_pc_11534.dec_label_pc_11524.loopexit_crit_edge: ; preds = %dec_label_pc_11534
  %v0_11524.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11524

dec_label_pc_11574:                               ; preds = %dec_label_pc_11534
  %v2_11574 = inttoptr i32 %v1_11564 to i8*
  %v3_11574 = load i8, i8* %v2_11574, align 1
  %v4_11574 = zext i8 %v3_11574 to i32
  store i32 %v4_11574, i32* %r3.global-to-local, align 4
  %v2_11578 = icmp ugt i8 %v3_11574, 30
  store i1 %v2_11578, i1* %cpsr_c.global-to-local, align 1
  %v7_11578 = icmp eq i8 %v3_11574, 31
  store i1 %v7_11578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11578, label %dec_label_pc_11690, label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %dec_label_pc_11574
  %v1_11580 = inttoptr i32 %v0_11564 to i8*
  %v2_11580 = load i8, i8* %v1_11580, align 1
  %v3_11580 = zext i8 %v2_11580 to i32
  store i32 %v3_11580, i32* %r3.global-to-local, align 4
  %v2_11584 = icmp ugt i8 %v2_11580, -4
  store i1 %v2_11584, i1* %cpsr_c.global-to-local, align 1
  %v7_11584 = icmp eq i8 %v2_11580, -3
  store i1 %v7_11584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11584, label %.thread115, label %dec_label_pc_11594

.thread115:                                       ; preds = %dec_label_pc_11580
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_11580, align 1
  %v0_11590.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11590.pr.pr, label %dec_label_pc_114bc, label %.thread115.dec_label_pc_11594thread-pre-split_crit_edge

.thread115.dec_label_pc_11594thread-pre-split_crit_edge: ; preds = %.thread115
  %v0_11594.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11594

dec_label_pc_11594:                               ; preds = %dec_label_pc_11580, %.thread115.dec_label_pc_11594thread-pre-split_crit_edge
  %v0_11594.pr = phi i32 [ %v0_11594.pr.pre, %.thread115.dec_label_pc_11594thread-pre-split_crit_edge ], [ %v3_11580, %dec_label_pc_11580 ]
  %v2_11594 = icmp ugt i32 %v0_11594.pr, 250
  store i1 %v2_11594, i1* %cpsr_c.global-to-local, align 1
  %v7_11594 = icmp eq i32 %v0_11594.pr, 251
  store i1 %v7_11594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11594, label %bb420, label %dec_label_pc_114bc

bb420:                                            ; preds = %dec_label_pc_11594
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_1159c = load i32, i32* @r4, align 4
  %v4_1159c = inttoptr i32 %v3_1159c to i8*
  store i8 -3, i8* %v4_1159c, align 1
  br label %dec_label_pc_114bc

dec_label_pc_115a4:                               ; preds = %dec_label_pc_113b0, %dec_label_pc_113c8, %dec_label_pc_113c0, %bb414, %dec_label_pc_1139c, %dec_label_pc_11380, %dec_label_pc_11394, %bb413
  %v0_115a4 = phi i32 [ %v1_11374, %dec_label_pc_1139c ], [ %v1_11374, %dec_label_pc_11380 ], [ %v1_11374, %dec_label_pc_11394 ], [ %v1_11374, %bb413 ], [ %v1_113d4, %bb414 ], [ %v1_113d4, %dec_label_pc_113c0 ], [ %v1_113d4, %dec_label_pc_113c8 ], [ %v1_113d4, %dec_label_pc_113b0 ]
  %v1_115a4 = add i32 %v0_115a4, 1
  store i32 %v1_115a4, i32* @r7, align 4
  br label %dec_label_pc_11424

dec_label_pc_115ac:                               ; preds = %dec_label_pc_112c0, %dec_label_pc_112e0, %dec_label_pc_112d8, %dec_label_pc_112d0, %bb410, %dec_label_pc_112ac, %dec_label_pc_11288, %dec_label_pc_112a4, %dec_label_pc_1129c, %bb409
  %v0_115ac = phi i32 [ %v1_1127c, %dec_label_pc_112ac ], [ %v1_1127c, %dec_label_pc_11288 ], [ %v1_1127c, %dec_label_pc_112a4 ], [ %v1_1127c, %dec_label_pc_1129c ], [ %v1_1127c, %bb409 ], [ %v1_112ec, %bb410 ], [ %v1_112ec, %dec_label_pc_112d0 ], [ %v1_112ec, %dec_label_pc_112d8 ], [ %v1_112ec, %dec_label_pc_112e0 ], [ %v1_112ec, %dec_label_pc_112c0 ]
  %v1_115ac = add i32 %v0_115ac, 1
  store i32 %v1_115ac, i32* @r7, align 4
  br label %dec_label_pc_115b0

dec_label_pc_115b0:                               ; preds = %dec_label_pc_11354.dec_label_pc_115b0_crit_edge, %dec_label_pc_115ac
  %v0_115b0 = phi i32 [ %v0_115b0.pre, %dec_label_pc_11354.dec_label_pc_115b0_crit_edge ], [ %v0_10d0c, %dec_label_pc_115ac ]
  %v1_115b0 = inttoptr i32 %v0_115b0 to i32*
  %v2_115b0 = load i32, i32* %v1_115b0, align 4
  store i32 %v2_115b0, i32* %r3.global-to-local, align 4
  %v1_115b4 = add i32 %v0_115b0, 4
  %v2_115b4 = inttoptr i32 %v1_115b4 to i32*
  %v3_115b4 = load i32, i32* %v2_115b4, align 4
  store i32 %v3_115b4, i32* %r0.global-to-local, align 4
  %v1_115b8 = add i32 %v2_115b0, 12
  %v2_115b8 = inttoptr i32 %v1_115b8 to i8*
  %v3_115b8 = load i8, i8* %v2_115b8, align 1
  %v4_115b8 = zext i8 %v3_115b8 to i32
  store i32 %v4_115b8, i32* %r2.global-to-local, align 4
  %v1_115bc = inttoptr i32 %v2_115b0 to i32*
  %v2_115bc = load i32, i32* %v1_115bc, align 4
  store i32 %v2_115bc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_115c4 = call i32 @function_13808(i32 %v3_115b4, i32 %v2_115bc, i32 %v4_115b8, i32 16384)
  store i32 %v4_115c4, i32* %r0.global-to-local, align 4
  %v0_115c8 = load i32, i32* @r5, align 4
  %v1_115c8 = add i32 %v0_115c8, 4
  %v2_115c8 = inttoptr i32 %v1_115c8 to i32*
  %v3_115c8 = load i32, i32* %v2_115c8, align 4
  store i32 %v3_115c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_115d8 = call i32 @function_13808(i32 %v3_115c8, i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_115e0 = load i32, i32* @r5, align 4
  %v2_115e0 = add i32 %v1_115e0, 12
  %v3_115e0 = inttoptr i32 %v2_115e0 to i32*
  store i32 4, i32* %v3_115e0, align 4
  br label %dec_label_pc_11458

dec_label_pc_115e8:                               ; preds = %dec_label_pc_10db0
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_115f4 = call i32 @function_11a84(i32 27)
  store i32 %v2_1131c, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_11604 = call i32 @function_119c0(i32 27, i32* nonnull %v2_11324)
  store i32 %v3_11604, i32* %r0.global-to-local, align 4
  %v3_11608 = load i8, i8* %stack_var_-56, align 1
  %v4_11608 = sext i8 %v3_11608 to i32
  store i32 %v3_11604, i32* %r2.global-to-local, align 4
  %v1_11610 = add nsw i32 %v4_11608, -1
  store i32 %v1_11610, i32* %r3.global-to-local, align 4
  %v0_11614 = load i32, i32* @r5, align 4
  %v1_11614 = add i32 %v0_11614, 24
  %v2_11614 = inttoptr i32 %v1_11614 to i32*
  %v3_11614 = load i32, i32* %v2_11614, align 4
  store i32 %v3_11614, i32* %r1.global-to-local, align 4
  %v0_11618 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11618, i32* %r0.global-to-local, align 4
  %v4_1161c = call i32 @function_12508(i32 %v0_11618, i32 %v3_11614, i32 %v3_11604, i32 %v1_11610)
  store i32 %v4_1161c, i32* @r7, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11628 = call i32 @function_119e4(i32 27)
  store i32 %v1_11628, i32* @r0, align 4
  %v0_1162c = load i32, i32* @r7, align 4
  %v2_1162c = icmp eq i32 %v0_1162c, -1
  store i1 %v2_1162c, i1* %cpsr_c.global-to-local, align 1
  %v7_1162c = icmp eq i32 %v0_1162c, -1
  store i1 %v7_1162c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1162c, label %dec_label_pc_10c8c.loopexit, label %dec_label_pc_11634

dec_label_pc_11634:                               ; preds = %dec_label_pc_115e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11634 = icmp eq i32 %v0_1162c, 0
  store i1 %v2_11634, i1* %cpsr_z.global-to-local, align 1
  %tmp421 = icmp slt i32 %v0_1162c, 1
  br i1 %tmp421, label %dec_label_pc_11458, label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %dec_label_pc_11634
  %v0_1163c = load i32, i32* @r5, align 4
  %v1_1163c = add i32 %v0_1163c, 20
  %v2_1163c = inttoptr i32 %v1_1163c to i16*
  %v3_1163c = load i16, i16* %v2_1163c, align 2
  %v4_1163c = zext i16 %v3_1163c to i32
  store i32 %v4_1163c, i32* %r3.global-to-local, align 4
  %v1_11640 = add i32 %v0_1163c, 16
  %v2_11640 = inttoptr i32 %v1_11640 to i32*
  %v3_11640 = load i32, i32* %v2_11640, align 4
  store i32 %v3_11640, i32* %r2.global-to-local, align 4
  store i32 %v2_11644, i32* @lr, align 4
  store i32 %v4_1163c, i32* %stack_var_-42, align 4
  store i32 %v3_11640, i32* %stack_var_-60, align 4
  %v1_11650 = inttoptr i32 %v0_1163c to i32*
  %v2_11650 = load i32, i32* %v1_11650, align 4
  store i32 %v2_11650, i32* %r8.global-to-local, align 4
  %v0_11654 = call i32 @function_12da4()
  store i32 %v0_11654, i32* %r0.global-to-local, align 4
  %v7_11658 = icmp eq i32 %v0_11654, -1
  %.432 = zext i1 %v7_11658 to i32
  store i32 %.432, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11664 = icmp eq i32 %v0_11654, 0
  store i1 %v2_11664, i1* %cpsr_z.global-to-local, align 1
  %tmp424 = icmp slt i32 %v0_11654, 1
  br i1 %tmp424, label %bb425, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_1163c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11678

bb425:                                            ; preds = %dec_label_pc_1163c
  store i32 %.432, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11670 = icmp eq i1 %v7_11658, false
  store i1 %v2_11670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11670, label %dec_label_pc_1185c, label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %.thread121, %bb425
  %v0_11678 = load i32, i32* @r5, align 4
  %v1_11678 = add i32 %v0_11678, 4
  %v2_11678 = inttoptr i32 %v1_11678 to i32*
  %v3_11678 = load i32, i32* %v2_11678, align 4
  store i32 %v3_11678, i32* %r0.global-to-local, align 4
  %v1_1167c = call i32 @function_130b4(i32 %v3_11678)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_11684 = load i32, i32* @r4, align 4
  %v1_11684 = load i32, i32* @r5, align 4
  %v2_11684 = add i32 %v1_11684, 4
  %v3_11684 = inttoptr i32 %v2_11684 to i32*
  store i32 %v0_11684, i32* %v3_11684, align 4
  %v0_11688 = load i32, i32* %r0.global-to-local, align 4
  %v1_11688 = load i32, i32* @r5, align 4
  %v2_11688 = add i32 %v1_11688, 12
  %v3_11688 = inttoptr i32 %v2_11688 to i32*
  store i32 %v0_11688, i32* %v3_11688, align 4
  br label %dec_label_pc_11458

dec_label_pc_11690:                               ; preds = %dec_label_pc_11574
  store i32 %v2_11538, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_1169c = add i32 %v0_11560, 4
  %v2_1169c = inttoptr i32 %v1_1169c to i32*
  %v3_1169c = load i32, i32* %v2_1169c, align 4
  store i32 %v3_1169c, i32* %r0.global-to-local, align 4
  %v4_116a0 = call i32 @function_13808(i32 %v3_1169c, i32 %v2_11538, i32 3, i32 16384)
  store i32 %v4_116a0, i32* %r0.global-to-local, align 4
  store i32 %v2_1154c, i32* %r1.global-to-local, align 4
  %v0_116a8 = load i32, i32* @r5, align 4
  %v1_116a8 = add i32 %v0_116a8, 4
  %v2_116a8 = inttoptr i32 %v1_116a8 to i32*
  %v3_116a8 = load i32, i32* %v2_116a8, align 4
  store i32 %v3_116a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11508

dec_label_pc_116b8:                               ; preds = %dec_label_pc_10c98
  store i32 %.pre, i32* @r0, align 4
  %v1_116c0 = add i32 %v0_116b8, 92
  store i32 %v1_116c0, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_116c8 = call i32 @function_135d0(i32 %.pre, i32 %v1_116c0, i32 192)
  store i32 %v3_116c8, i32* %r0.global-to-local, align 4
  %v0_116cc = load i32, i32* @r5, align 4
  %v1_116cc = add i32 %v0_116cc, 24
  %v2_116cc = inttoptr i32 %v1_116cc to i32*
  %v3_116cc = load i32, i32* %v2_116cc, align 4
  %v1_116d0 = add i32 %v3_116cc, -64
  store i32 %v1_116d0, i32* %r3.global-to-local, align 4
  store i32 %v1_116d0, i32* %v2_116cc, align 4
  br label %dec_label_pc_10ca8

dec_label_pc_116dc:                               ; preds = %dec_label_pc_10dec
  %v0_116dc = load i32, i32* @r5, align 4
  store i32 %v0_116dc, i32* @r0, align 4
  %v0_116e0 = call i32 @function_f34c()
  store i32 %v0_116e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e28

dec_label_pc_116e8:                               ; preds = %dec_label_pc_112f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_116e8 = load i8, i8* %stack_var_-56, align 1
  %v4_116e8 = sext i8 %v3_116e8 to i32
  %v0_116ec = load i32, i32* @r6, align 4
  store i32 %v0_116ec, i32* %r2.global-to-local, align 4
  %v1_116f0 = add nsw i32 %v4_116e8, -1
  store i32 %v1_116f0, i32* %r3.global-to-local, align 4
  %v0_116f4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_116f4, i32* %r0.global-to-local, align 4
  %v0_116f8 = load i32, i32* @r5, align 4
  %v1_116f8 = add i32 %v0_116f8, 24
  %v2_116f8 = inttoptr i32 %v1_116f8 to i32*
  %v3_116f8 = load i32, i32* %v2_116f8, align 4
  store i32 %v3_116f8, i32* %r1.global-to-local, align 4
  %v4_116fc = call i32 @function_12508(i32 %v0_116f4, i32 %v3_116f8, i32 %v0_116ec, i32 %v1_116f0)
  store i32 %v4_116fc, i32* %r0.global-to-local, align 4
  %v1_11700 = add i32 %v4_116fc, 1
  store i32 %v1_11700, i32* @r7, align 4
  %v2_11700 = icmp eq i32 %v4_116fc, -1
  store i1 %v2_11700, i1* %cpsr_c.global-to-local, align 1
  %v7_11700 = icmp eq i32 %v1_11700, 0
  store i1 %v7_11700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11700, label %dec_label_pc_11710, label %dec_label_pc_11354

dec_label_pc_11710:                               ; preds = %dec_label_pc_116e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_11714 = call i32 @function_119e4(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_1171c = call i32 @function_119e4(i32 31)
  store i32 %v1_1171c, i32* %r0.global-to-local, align 4
  %v0_11720 = load i32, i32* @r5, align 4
  %v1_11720 = add i32 %v0_11720, 12
  %v2_11720 = inttoptr i32 %v1_11720 to i32*
  %v3_11720 = load i32, i32* %v2_11720, align 4
  store i32 %v3_11720, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c90.backedge

dec_label_pc_10c90.backedge.thread:               ; preds = %dec_label_pc_10e54, %dec_label_pc_10f28, %dec_label_pc_10ffc, %dec_label_pc_110d0, %dec_label_pc_111a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c98

dec_label_pc_10c90.backedge.thread528:            ; preds = %dec_label_pc_11208, %dec_label_pc_11060, %dec_label_pc_10f8c, %dec_label_pc_11134, %dec_label_pc_10eb8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c98

dec_label_pc_10c90.backedge:                      ; preds = %dec_label_pc_10d0c, %dec_label_pc_11710, %dec_label_pc_11814
  %v0_10c98186 = phi i32 [ %v0_1181c, %dec_label_pc_11814 ], [ %v0_11720, %dec_label_pc_11710 ], [ %v0_10d0c, %dec_label_pc_10d0c ]
  %v0_10c90.be = phi i32 [ %v3_1181c, %dec_label_pc_11814 ], [ %v3_11720, %dec_label_pc_11710 ], [ %v3_10d0c, %dec_label_pc_10d0c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c90 = icmp eq i32 %v0_10c90.be, 0
  store i1 %v2_10c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c90, label %dec_label_pc_10d98, label %dec_label_pc_10c98

dec_label_pc_11728:                               ; preds = %dec_label_pc_10c48
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_1131c, i32* %r3.global-to-local, align 4
  store i32 %v2_11308, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_11754 = call i32 @function_1371c(i32 %v3_10c3c, i32 1, i32 4, i32 %v2_1131c, i32 %v2_11308)
  %v3_11758 = load i8, i8* %stack_var_-56, align 1
  %v4_11758 = sext i8 %v3_11758 to i32
  store i32 %v4_11758, i32* %r3.global-to-local, align 4
  %v2_1175c = or i32 %v4_11758, %v5_11754
  store i32 %v2_1175c, i32* %r0.global-to-local, align 4
  %v4_1175c = icmp eq i32 %v2_1175c, 0
  store i1 %v4_1175c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1175c, label %dec_label_pc_11764, label %dec_label_pc_117f8

dec_label_pc_11764:                               ; preds = %dec_label_pc_11728
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_11768 = load i32, i32* @r5, align 4
  %v2_11768 = add i32 %v1_11768, 12
  %v3_11768 = inttoptr i32 %v2_11768 to i32*
  store i32 2, i32* %v3_11768, align 4
  %v0_1176c = call i32 @function_f190()
  store i32 %v0_1176c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_2147c.150 to i32), i32* %r3.global-to-local, align 4
  %v2_11774 = load i16, i16* bitcast (i16** @global_var_2147c.150 to i16*), align 4
  %v3_11774 = zext i16 %v2_11774 to i32
  store i32 %v3_11774, i32* %r1.global-to-local, align 4
  %v3_11778 = call i32 @function_12b3c(i32 %v0_1176c, i32 %v3_11774)
  store i32 %v3_11778, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2144c.146 to i32), i32* %r3.global-to-local, align 4
  %v2_11780 = load i32, i32* @global_var_2144c.146, align 4
  store i32 %v2_11780, i32* %ip.global-to-local, align 4
  %v1_11788 = load i32, i32* @r4, align 4
  %v9_11788 = icmp eq i32 %v2_11780, %v1_11788
  store i1 %v9_11788, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_11774, i32* %r1.global-to-local, align 4
  %v7_11790 = icmp sgt i32 %v2_11780, %v1_11788
  br i1 %v7_11790, label %dec_label_pc_11794, label %dec_label_pc_117d4

dec_label_pc_11794:                               ; preds = %dec_label_pc_11764
  %v2_11798 = load i32, i32* @global_var_21478.148, align 4
  store i32 %v2_11798, i32* %r3.global-to-local, align 4
  store i32 %v1_11788, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_117b4

dec_label_pc_117a4:                               ; preds = %dec_label_pc_117c4, %dec_label_pc_117b4
  %v1_117a4 = add i32 %v0_117a4, 1
  store i32 %v1_117a4, i32* %r2.global-to-local, align 4
  %v9_117a8 = icmp eq i32 %v1_117a4, %v2_11780
  %v1_117ac = add i32 %v0_117ac, 16
  store i32 %v1_117ac, i32* %r3.global-to-local, align 4
  br i1 %v9_117a8, label %dec_label_pc_117d4.loopexit, label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_117a4, %dec_label_pc_11794
  %v0_117a4 = phi i32 [ %v1_117a4, %dec_label_pc_117a4 ], [ %v1_11788, %dec_label_pc_11794 ]
  %v0_117ac = phi i32 [ %v1_117ac, %dec_label_pc_117a4 ], [ %v2_11798, %dec_label_pc_11794 ]
  store i32 %v0_117ac, i32* %r0.global-to-local, align 4
  %v1_117b8 = add i32 %v0_117ac, 8
  %v2_117b8 = inttoptr i32 %v1_117b8 to i16*
  %v3_117b8 = load i16, i16* %v2_117b8, align 2
  %v4_117b8 = zext i16 %v3_117b8 to i32
  store i32 %v4_117b8, i32* %r3.global-to-local, align 4
  %tmp426 = icmp ugt i16 %v3_117b8, %v2_11774
  br i1 %tmp426, label %dec_label_pc_117a4, label %dec_label_pc_117c4

dec_label_pc_117c4:                               ; preds = %dec_label_pc_117b4
  %v1_117c4 = add i32 %v0_117ac, 10
  %v2_117c4 = inttoptr i32 %v1_117c4 to i16*
  %v3_117c4 = load i16, i16* %v2_117c4, align 2
  %v4_117c4 = zext i16 %v3_117c4 to i32
  store i32 %v4_117c4, i32* %r3.global-to-local, align 4
  %v3_117c8 = icmp uge i16 %v3_117c4, %v2_11774
  %v9_117c8 = icmp eq i16 %v3_117c4, %v2_11774
  %v2_117cc = xor i1 %v3_117c8, true
  %v3_117cc = or i1 %v9_117c8, %v2_117cc
  br i1 %v3_117cc, label %dec_label_pc_117a4, label %dec_label_pc_117d8.loopexit

dec_label_pc_117d4.loopexit:                      ; preds = %dec_label_pc_117a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_117d4

dec_label_pc_117d4:                               ; preds = %dec_label_pc_117d4.loopexit, %dec_label_pc_11764
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_117d8

dec_label_pc_117d8.loopexit:                      ; preds = %dec_label_pc_117c4
  store i1 %v3_117c8, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_117d8

dec_label_pc_117d8:                               ; preds = %dec_label_pc_117d8.loopexit, %dec_label_pc_117d4
  %v0_117ec = phi i32 [ %v0_117ac, %dec_label_pc_117d8.loopexit ], [ 0, %dec_label_pc_117d4 ]
  %v0_117d8 = load i32, i32* @r5, align 4
  %v1_117d8 = add i32 %v0_117d8, 4
  %v2_117d8 = inttoptr i32 %v1_117d8 to i32*
  %v3_117d8 = load i32, i32* %v2_117d8, align 4
  %v3_117dc = udiv i32 %v3_117d8, 32
  store i32 %v3_117dc, i32* %r2.global-to-local, align 4
  %v1_117e0 = urem i32 %v3_117d8, 32
  store i32 %v1_117e0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_117e4 = mul nuw nsw i32 %v3_117dc, 4
  store i32 %v3_117e4, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_117ec = inttoptr i32 %v0_117d8 to i32*
  store i32 %v0_117ec, i32* %v2_117ec, align 4
  %v0_117f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_117f0 = load i32, i32* @r5, align 4
  %v2_117f0 = add i32 %v1_117f0, 24
  %v3_117f0 = inttoptr i32 %v2_117f0 to i32*
  store i32 %v0_117f0, i32* %v3_117f0, align 4
  %v0_10c78.pre = load i32, i32* @ip, align 4
  %v1_10c80.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10c70

dec_label_pc_117f8:                               ; preds = %dec_label_pc_11728
  %v0_117f8 = load i32, i32* @r5, align 4
  %v1_117f8 = add i32 %v0_117f8, 4
  %v2_117f8 = inttoptr i32 %v1_117f8 to i32*
  %v3_117f8 = load i32, i32* %v2_117f8, align 4
  store i32 %v3_117f8, i32* %r0.global-to-local, align 4
  %v1_117fc = call i32 @function_130b4(i32 %v3_117f8)
  store i32 %v1_117fc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11804 = load i32, i32* @r4, align 4
  %v1_11804 = load i32, i32* @r5, align 4
  %v2_11804 = add i32 %v1_11804, 12
  %v3_11804 = inttoptr i32 %v2_11804 to i32*
  store i32 %v0_11804, i32* %v3_11804, align 4
  %v0_11808 = load i32, i32* %r3.global-to-local, align 4
  %v1_11808 = load i32, i32* @r5, align 4
  %v2_11808 = add i32 %v1_11808, 4
  %v3_11808 = inttoptr i32 %v2_11808 to i32*
  store i32 %v0_11808, i32* %v3_11808, align 4
  %v0_1180c = load i32, i32* @r4, align 4
  %v1_1180c = trunc i32 %v0_1180c to i8
  %v2_1180c = load i32, i32* @r5, align 4
  %v3_1180c = add i32 %v2_1180c, 284
  %v4_1180c = inttoptr i32 %v3_1180c to i8*
  store i8 %v1_1180c, i8* %v4_1180c, align 1
  br label %dec_label_pc_10d98

dec_label_pc_11814:                               ; preds = %thread-pre-split103
  %v1_1181c = add i32 %v0_1181c, 12
  %v2_1181c = inttoptr i32 %v1_1181c to i32*
  %v3_1181c = load i32, i32* %v2_1181c, align 4
  store i32 %v3_1181c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c90.backedge

dec_label_pc_1185c:                               ; preds = %bb425
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11868 = call i32 @function_138c4(i32 2, i32 1, i32 0)
  store i32 %v3_11868, i32* %r0.global-to-local, align 4
  %v2_1186c = icmp eq i32 %v3_11868, -1
  store i1 %v2_1186c, i1* %cpsr_c.global-to-local, align 1
  %v7_1186c = icmp eq i32 %v3_11868, -1
  store i1 %v7_1186c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_11868, i32* @r4, align 4
  br i1 %v7_1186c, label %dec_label_pc_119b8, label %dec_label_pc_11878

dec_label_pc_11878:                               ; preds = %dec_label_pc_1185c
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1187c = call i32 @function_11a84(i32 2)
  store i32 2032805430, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_234bc.100 to i32), i32* %r3.global-to-local, align 4
  %v0_11888 = load i32, i32* @r6, align 4
  store i32 %v0_11888, i32* %r1.global-to-local, align 4
  store i32 2032805430, i32* @global_var_234c0.102, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_11894 = inttoptr i32 %v0_11888 to i32*
  %v3_11894 = call i32 @function_119c0(i32 2, i32* %v2_11894)
  store i32 %v2_11644, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_118a8 = call i32 @function_119e4(i32 2)
  %v0_118ac = load i32, i32* @r4, align 4
  store i32 %v0_118ac, i32* %r0.global-to-local, align 4
  store i32 %v2_11644, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_118b8 = call i32 @function_136ac(i32 %v0_118ac, i32 %v2_11644, i32 16)
  store i32 %v3_118b8, i32* %r0.global-to-local, align 4
  %v3_118bc = icmp eq i32 %v3_118b8, -1
  store i1 %v3_118bc, i1* %cpsr_c.global-to-local, align 1
  %v8_118bc = icmp eq i32 %v3_118b8, -1
  store i1 %v8_118bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118bc, label %dec_label_pc_118c4, label %dec_label_pc_11914

dec_label_pc_118c4:                               ; preds = %dec_label_pc_11878
  %v0_118c4 = load i32, i32* @r4, align 4
  store i32 %v0_118c4, i32* %r0.global-to-local, align 4
  %v1_118c8 = call i32 @function_130b4(i32 %v0_118c4)
  %v0_118cc = load i32, i32* @r6, align 4
  store i32 %v0_118cc, i32* %r0.global-to-local, align 4
  %v1_118d0 = call i32 @function_14f1c(i32 %v0_118cc)
  store i32 %v1_118d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118d4

dec_label_pc_118d4:                               ; preds = %dec_label_pc_10d44, %dec_label_pc_118c4
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_118d8 = load i32, i32* @sb, align 4
  %v2_118d8 = inttoptr i32 %v1_118d8 to i32*
  store i32 104, i32* %v2_118d8, align 4
  br label %dec_label_pc_10d5c

dec_label_pc_118e0:                               ; preds = %dec_label_pc_10ae4
  store i32 %v3_118e0, i32* %r0.global-to-local, align 4
  %v3_118e8 = udiv i32 %v3_118e0, 32
  %v3_118ec = mul nuw nsw i32 %v3_118e8, 4
  store i32 %v2_118f0, i32* @lr, align 4
  %v2_118f4 = add i32 %v3_118ec, %v2_118f0
  store i32 %v2_118f4, i32* %r3.global-to-local, align 4
  %v1_118f8 = add i32 %v2_118f4, -312
  %v2_118f8 = inttoptr i32 %v1_118f8 to i32*
  %v3_118f8 = load i32, i32* %v2_118f8, align 4
  %v1_118fc = urem i32 %v3_118e0, 32
  store i32 %v1_118fc, i32* %r1.global-to-local, align 4
  %v7_11900 = shl i32 1, %v1_118fc
  %v8_11900 = or i32 %v3_118f8, %v7_11900
  store i32 %v8_11900, i32* %r2.global-to-local, align 4
  %v0_11904 = load i32, i32* @r5, align 4
  %v3_11904 = icmp uge i32 %v0_11904, %v3_118e0
  store i1 %v3_11904, i1* %cpsr_c.global-to-local, align 1
  %v9_11904 = icmp eq i32 %v0_11904, %v3_118e0
  store i1 %v9_11904, i1* %cpsr_z.global-to-local, align 1
  %v5_11908 = icmp slt i32 %v0_11904, %v3_118e0
  br i1 %v5_11908, label %bb427, label %bb428

bb427:                                            ; preds = %dec_label_pc_118e0
  store i32 %v3_118e0, i32* @r5, align 4
  br label %bb428

bb428:                                            ; preds = %dec_label_pc_118e0, %bb427
  store i32 %v8_11900, i32* %v2_118f8, align 4
  br label %bb378

dec_label_pc_11914:                               ; preds = %dec_label_pc_11878
  store i32 %v2_1131c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11924 = load i32, i32* @r4, align 4
  store i32 %v0_11924, i32* %r0.global-to-local, align 4
  %v0_11928 = load i32, i32* @r6, align 4
  %v6_11928 = trunc i32 %v0_11928 to i8
  store i8 %v6_11928, i8* %stack_var_-56, align 1
  %v6_1192c = call i32 @function_13808(i32 %v0_11924, i32 %v2_1131c, i32 1, i32 16384)
  store i32 %v2_11308, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11940 = load i32, i32* @r4, align 4
  store i32 %v0_11940, i32* %r0.global-to-local, align 4
  %v4_11944 = call i32 @function_13808(i32 %v0_11940, i32 %v2_11308, i32 4, i32 16384)
  %v2_1194c = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_1194c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11958 = load i32, i32* @r4, align 4
  store i32 %v0_11958, i32* %r0.global-to-local, align 4
  %v4_1195c = call i32 @function_13808(i32 %v0_11958, i32 %v2_1194c, i32 2, i32 16384)
  %v0_11960 = load i32, i32* %r8.global-to-local, align 4
  %v1_11960 = add i32 %v0_11960, 12
  store i32 %v1_11960, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1196c = load i32, i32* @r4, align 4
  store i32 %v0_1196c, i32* %r0.global-to-local, align 4
  %v4_11970 = call i32 @function_13808(i32 %v0_1196c, i32 %v1_11960, i32 1, i32 16384)
  store i32 %v4_11970, i32* %r0.global-to-local, align 4
  %v0_11974 = load i32, i32* %r8.global-to-local, align 4
  %v1_11974 = inttoptr i32 %v0_11974 to i32*
  %v2_11974 = load i32, i32* %v1_11974, align 4
  store i32 %v2_11974, i32* %r1.global-to-local, align 4
  %v1_11978 = add i32 %v0_11974, 12
  %v2_11978 = inttoptr i32 %v1_11978 to i8*
  %v3_11978 = load i8, i8* %v2_11978, align 1
  %v4_11978 = zext i8 %v3_11978 to i32
  store i32 %v4_11978, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11980 = load i32, i32* @r4, align 4
  store i32 %v0_11980, i32* %r0.global-to-local, align 4
  %v4_11984 = call i32 @function_13808(i32 %v0_11980, i32 %v2_11974, i32 %v4_11978, i32 16384)
  %v0_11988 = load i32, i32* %r8.global-to-local, align 4
  %v1_11988 = add i32 %v0_11988, 13
  store i32 %v1_11988, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11994 = load i32, i32* @r4, align 4
  store i32 %v0_11994, i32* %r0.global-to-local, align 4
  %v4_11998 = call i32 @function_13808(i32 %v0_11994, i32 %v1_11988, i32 1, i32 16384)
  %v0_1199c = load i32, i32* @r4, align 4
  store i32 %v0_1199c, i32* %r0.global-to-local, align 4
  %v0_119a0 = load i32, i32* %r8.global-to-local, align 4
  %v1_119a0 = add i32 %v0_119a0, 13
  %v2_119a0 = inttoptr i32 %v1_119a0 to i8*
  %v3_119a0 = load i8, i8* %v2_119a0, align 1
  %v4_119a0 = zext i8 %v3_119a0 to i32
  store i32 %v4_119a0, i32* %r2.global-to-local, align 4
  %v1_119a4 = add i32 %v0_119a0, 4
  %v2_119a4 = inttoptr i32 %v1_119a4 to i32*
  %v3_119a4 = load i32, i32* %v2_119a4, align 4
  store i32 %v3_119a4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_119ac = call i32 @function_13808(i32 %v0_1199c, i32 %v3_119a4, i32 %v4_119a0, i32 16384)
  %v0_119b0 = load i32, i32* @r4, align 4
  store i32 %v0_119b0, i32* %r0.global-to-local, align 4
  %v1_119b4 = call i32 @function_130b4(i32 %v0_119b0)
  store i32 %v1_119b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119b8

dec_label_pc_119b8:                               ; preds = %dec_label_pc_1185c, %dec_label_pc_11914
  %v0_119b8 = load i32, i32* @r6, align 4
  store i32 %v0_119b8, i32* %r0.global-to-local, align 4
  %v1_119bc = call i32 @function_14f1c(i32 %v0_119b8)
  store i32 %v1_119bc, i32* %r0.global-to-local, align 4
  ret i32 %v1_119bc

; uselistorder directives
  uselistorder i32 %v0_11904, { 0, 2, 1 }
  uselistorder i32 %v1_118fc, { 1, 0 }
  uselistorder i1 %v7_1186c, { 1, 0 }
  uselistorder i32 %v3_11868, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1181c, { 1, 0 }
  uselistorder i32 %v3_117d8, { 1, 0 }
  uselistorder i1 %v3_117c8, { 1, 0 }
  uselistorder i32 %v0_117ac, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_11780, { 0, 2, 1, 3 }
  uselistorder i32 %v4_116fc, { 1, 0, 2 }
  uselistorder i32 %v3_116a8, { 1, 0 }
  uselistorder i1 %v2_11670, { 1, 0 }
  uselistorder i32 %.432, { 1, 0 }
  uselistorder i1 %v7_11658, { 1, 0 }
  uselistorder i32 %v0_11654, { 2, 1, 0, 3 }
  uselistorder i1 %v7_1162c, { 1, 0 }
  uselistorder i32 %v0_1162c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_115b0, { 1, 0 }
  uselistorder i32 %v0_11594.pr, { 1, 0 }
  uselistorder i32 %v0_11560, { 1, 2, 0 }
  uselistorder i32 %v0_11524, { 1, 0 }
  uselistorder i32 %v1_1151c, { 1, 0 }
  uselistorder i32 %v1_11514, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11510, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11510, { 0, 2, 1 }
  uselistorder i32 %v0_114f0.pr, { 1, 0 }
  uselistorder i32 %v0_114d0.pr, { 1, 0 }
  uselistorder i1 %v7_114a8, { 1, 0 }
  uselistorder i1 %v2_11498, { 1, 0, 2 }
  uselistorder i1 %v2_1147c, { 1, 0, 2 }
  uselistorder i32 %v1_1149c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_11470, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_114a0, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_11424, { 1, 0 }
  uselistorder i32 %v0_1181c, { 1, 0, 2 }
  uselistorder i1 %v0_11414, { 1, 0 }
  uselistorder i32 %v4_11408, { 1, 0, 2 }
  uselistorder i32 %v1_113d4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_113d4, { 0, 2, 1 }
  uselistorder i32 %v0_113cc, { 1, 0 }
  uselistorder i1 %v7_113c8, { 1, 0 }
  uselistorder i1 %v7_113c0, { 1, 0 }
  uselistorder i1 %v8_113b8, { 1, 0 }
  uselistorder i1 %v7_1139c, { 1, 0 }
  uselistorder i1 %v7_11394, { 1, 0 }
  uselistorder i1 %v8_1138c, { 1, 0 }
  uselistorder i32 %v1_11374, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_11344, { 1, 0 }
  uselistorder i32 %v1_112ec, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_112ec, { 0, 2, 1 }
  uselistorder i32 %v0_112e4, { 1, 0 }
  uselistorder i1 %v7_112e0, { 1, 0 }
  uselistorder i1 %v7_112d8, { 1, 0 }
  uselistorder i1 %v7_112d0, { 1, 0 }
  uselistorder i1 %v8_112c8, { 1, 0 }
  uselistorder i1 %v7_112ac, { 1, 0 }
  uselistorder i1 %v7_112a4, { 1, 0 }
  uselistorder i1 %v7_1129c, { 1, 0 }
  uselistorder i1 %v8_11294, { 1, 0 }
  uselistorder i32 %v1_1127c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11218, { 1, 0 }
  uselistorder i8 %v3_11210, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11208, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11208, { 0, 2, 1 }
  uselistorder i32 %v0_11200, { 1, 0 }
  uselistorder i1 %v7_111fc, { 1, 0 }
  uselistorder i1 %v7_111f4, { 1, 0 }
  uselistorder i1 %v7_111ec, { 1, 0 }
  uselistorder i1 %v7_111d8, { 1, 0 }
  uselistorder i1 %v7_111d0, { 1, 0 }
  uselistorder i1 %v7_111c8, { 1, 0 }
  uselistorder i1 %v8_111c0, { 1, 0 }
  uselistorder i32 %v1_111a8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11144, { 1, 0 }
  uselistorder i8 %v3_1113c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11134, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11134, { 0, 2, 1 }
  uselistorder i32 %v0_1112c, { 1, 0 }
  uselistorder i1 %v7_11128, { 1, 0 }
  uselistorder i1 %v7_11120, { 1, 0 }
  uselistorder i1 %v7_11118, { 1, 0 }
  uselistorder i1 %v7_11104, { 1, 0 }
  uselistorder i1 %v7_110fc, { 1, 0 }
  uselistorder i1 %v7_110f4, { 1, 0 }
  uselistorder i1 %v8_110ec, { 1, 0 }
  uselistorder i32 %v1_110d4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11070, { 1, 0 }
  uselistorder i8 %v3_11068, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11060, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11060, { 0, 2, 1 }
  uselistorder i32 %v0_11058, { 1, 0 }
  uselistorder i1 %v7_11054, { 1, 0 }
  uselistorder i1 %v7_1104c, { 1, 0 }
  uselistorder i1 %v7_11044, { 1, 0 }
  uselistorder i1 %v7_11030, { 1, 0 }
  uselistorder i1 %v7_11028, { 1, 0 }
  uselistorder i1 %v7_11020, { 1, 0 }
  uselistorder i1 %v8_11018, { 1, 0 }
  uselistorder i32 %v1_11000, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10f9c, { 1, 0 }
  uselistorder i8 %v3_10f94, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10f8c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10f8c, { 0, 2, 1 }
  uselistorder i32 %v0_10f84, { 1, 0 }
  uselistorder i1 %v7_10f80, { 1, 0 }
  uselistorder i1 %v7_10f78, { 1, 0 }
  uselistorder i1 %v7_10f70, { 1, 0 }
  uselistorder i1 %v7_10f5c, { 1, 0 }
  uselistorder i1 %v7_10f54, { 1, 0 }
  uselistorder i1 %v7_10f4c, { 1, 0 }
  uselistorder i1 %v8_10f44, { 1, 0 }
  uselistorder i32 %v1_10f2c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10ec8, { 1, 0 }
  uselistorder i8 %v3_10ec0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10eb8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10eb8, { 0, 2, 1 }
  uselistorder i32 %v0_10eb0, { 1, 0 }
  uselistorder i1 %v7_10eac, { 1, 0 }
  uselistorder i1 %v7_10ea4, { 1, 0 }
  uselistorder i1 %v7_10e9c, { 1, 0 }
  uselistorder i1 %v7_10e88, { 1, 0 }
  uselistorder i1 %v7_10e80, { 1, 0 }
  uselistorder i1 %v7_10e78, { 1, 0 }
  uselistorder i1 %v8_10e70, { 1, 0 }
  uselistorder i32 %v1_10e58, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10e44, { 1, 2, 0 }
  uselistorder i32 %v2_10e30, { 1, 0 }
  uselistorder i32 %v0_10e30, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10e2c, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10e04, { 2, 1, 0 }
  uselistorder i1 %v7_10de0, { 1, 0 }
  uselistorder i32 %v4_10ddc, { 1, 0, 2 }
  uselistorder i32 %v1_10d9c, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_10d78, { 1, 0 }
  uselistorder i32 %v1_10d6c, { 2, 1, 0 }
  uselistorder i32 %v1_10d68, { 1, 0 }
  uselistorder i32 %v0_10d0c, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_10ce8, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10ce4, { 1, 0 }
  uselistorder i32 %v4_10cc8, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_10cb4, { 1, 0, 2 }
  uselistorder i32 %v3_10cb0, { 1, 0, 2 }
  uselistorder i32 %v0_116b8, { 1, 0, 2 }
  uselistorder i32 %v3_10c7c, { 1, 0 }
  uselistorder i32 %v1_10c60, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10c5c, { 1, 0 }
  uselistorder i32 %v3_10c54, { 1, 2, 0 }
  uselistorder i1 %v7_10c40, { 1, 0 }
  uselistorder i32 %v3_10c3c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10c30, { 1, 0 }
  uselistorder i32 %v2_11644, { 1, 0, 2, 3 }
  uselistorder i32* %v2_11324, { 1, 2, 3, 0 }
  uselistorder i32 %v2_1131c, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_11308, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_11554, { 1, 0 }
  uselistorder i32 %v1_10be0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10be0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10bac, { 2, 1, 0 }
  uselistorder i32 %v1_10ba8, { 1, 0 }
  uselistorder i1 %v2_10b88, { 1, 0, 2 }
  uselistorder i32 %v0_10b84, { 1, 0, 2 }
  uselistorder i1 %v7_10b50, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10b50, { 1, 0, 2 }
  uselistorder i32 %v2_10b48, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10b3c, { 1, 0, 2 }
  uselistorder i32 %v0_10b40, { 1, 0 }
  uselistorder i32 %v1_10b24, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10b18, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10b18, { 0, 2, 1 }
  uselistorder i32 %v1_10b08, { 1, 0 }
  uselistorder i32 %v3_118e0, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_118f0, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_10a58, { 1, 0 }
  uselistorder i32 %v1_10a40, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10a4c, { 0, 3, 2, 1 }
  uselistorder i32 %v0_109fc, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_109f0, { 2, 1, 0 }
  uselistorder i32 %v1_109d0, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_109ac, { 1, 0 }
  uselistorder i1 %v9_10978, { 1, 0 }
  uselistorder i32 %v0_10928, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_108cc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1087c, { 1, 0 }
  uselistorder i32 %v5_10814, { 1, 0 }
  uselistorder i1 %v2_1075c, { 1, 0 }
  uselistorder i1 %v3_10740, { 1, 0, 2 }
  uselistorder i1 %v2_1072c, { 1, 0 }
  uselistorder i1 %v2_10708, { 1, 0 }
  uselistorder i32 %v1_106b8, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_106a4, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_106a0, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_10688, { 1, 0 }
  uselistorder i32 %v0_10660, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 8, 11, 10, 6, 7, 9, 13, 12 }
  uselistorder i16 %v5_f998.le, { 0, 2, 1 }
  uselistorder i32 %v0_f97c, { 3, 2, 0, 1 }
  uselistorder i1 %v7_f91c, { 1, 0 }
  uselistorder i32 %v3_f914, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f900, { 1, 0 }
  uselistorder i32 %v0_f8d0, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_f580, { 1, 2, 3, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 3, 5, 0, 1, 9, 2, 4, 6, 7, 8, 10 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 60, 61, 62, 63, 64, 65, 66, 138, 139, 67, 140, 141, 142, 143, 144, 146, 145, 147, 148, 149, 150, 151, 21, 152, 0, 68, 69, 22, 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 96, 93, 98, 154, 155, 99, 100, 153, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 55, 117, 118, 119, 120, 122, 121, 124, 123, 137, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 289, 43, 44, 45, 290, 291, 292, 293, 10, 0, 46, 47, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 287, 288, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 285, 286, 62, 63, 65, 64, 61, 296, 66, 297, 67, 294, 295, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284 }
  uselistorder i32* %r1.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 278, 46, 47, 48, 49, 279, 280, 281, 282, 283, 8, 1, 2, 50, 51, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 276, 277, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 59, 63, 64, 65, 66, 275, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274 }
  uselistorder i32* %r0.global-to-local, { 83, 82, 85, 84, 86, 87, 88, 90, 89, 91, 92, 93, 371, 95, 94, 96, 98, 97, 99, 100, 101, 103, 102, 6, 375, 372, 373, 374, 376, 379, 378, 377, 20, 22, 21, 23, 26, 24, 106, 380, 0, 2, 1, 104, 105, 107, 108, 109, 110, 112, 111, 113, 25, 27, 29, 28, 3, 4, 7, 5, 9, 11, 13, 12, 10, 8, 15, 14, 16, 17, 18, 19, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 43, 42, 45, 44, 47, 46, 48, 49, 51, 50, 53, 52, 55, 54, 56, 57, 59, 58, 61, 60, 63, 62, 64, 65, 67, 66, 69, 68, 71, 70, 72, 73, 75, 74, 78, 76, 80, 79, 81, 115, 117, 116, 118, 114, 119, 120, 121, 122, 123, 124, 127, 125, 126, 132, 128, 129, 186, 130, 131, 133, 135, 134, 136, 141, 137, 140, 138, 139, 142, 144, 145, 143, 148, 146, 147, 151, 149, 150, 153, 152, 77, 370, 155, 154, 156, 158, 157, 160, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 358, 360, 365, 361, 362, 363, 364, 366, 367, 368, 369 }
  uselistorder i32* %ip.global-to-local, { 19, 20, 0, 3, 1, 2, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 217, 112, 113, 207, 208, 218, 219, 135, 220, 216, 31, 32, 34, 114, 98, 116, 118, 119, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 202, 117, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 115, 35, 41, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 48, 49, 50, 54, 55, 56, 57, 58, 59, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 90, 91, 92, 87, 88, 89, 93, 94, 95, 96, 97, 99, 103, 104, 105, 100, 101, 102, 106, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 203, 204, 136, 137, 138, 139, 141, 140, 142, 143, 144, 147, 149, 150, 148, 145, 146, 209, 210, 205, 151, 206, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 86, 184, 185, 186, 187, 188, 85, 189, 190, 191, 84, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 212, 213, 214, 211, 215 }
  uselistorder i1* %cpsr_c.global-to-local, { 210, 110, 111, 211, 200, 201, 212, 131, 213, 209, 28, 29, 31, 112, 90, 113, 115, 116, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 195, 114, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 97, 32, 38, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 78, 79, 80, 81, 87, 88, 89, 84, 85, 86, 91, 92, 93, 94, 95, 96, 101, 102, 103, 98, 99, 100, 104, 105, 106, 107, 108, 109, 117, 118, 119, 120, 122, 121, 123, 124, 125, 126, 127, 128, 129, 130, 196, 197, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 142, 139, 140, 202, 203, 198, 145, 199, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 83, 176, 177, 178, 179, 180, 82, 181, 182, 183, 77, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 204, 208 }
  uselistorder i32 ptrtoint (i16** @global_var_234bc.100 to i32), { 3, 0, 1, 2 }
  uselistorder i16* bitcast (i16** @global_var_2147c.150 to i16*), { 1, 0 }
  uselistorder i16** @global_var_2147c.150, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_2147c.150 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1371c, { 1, 2, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_18280.30 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13808, { 12, 11, 10, 9, 8, 7, 6, 28, 24, 23, 27, 26, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @function_119e4, { 27, 36, 35, 26, 37, 34, 33, 32, 31, 30, 29, 28, 25, 9, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12508, { 23, 21, 24, 22, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_119c0, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 31, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 55, 56, 57, 58 }
  uselistorder i32 (i32)* @function_11a84, { 38, 37, 46, 45, 44, 43, 42, 41, 40, 39, 36, 20, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1073741824, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13794, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12dd8, { 2, 1, 0 }
  uselistorder i32 ()* @function_f34c, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i8 2, { 0, 3, 2, 1 }
  uselistorder i8 5, { 12, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 13, 10 }
  uselistorder i32 39, { 5, 1, 0, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 38, { 3, 4, 5, 6, 7, 0, 8, 1, 9, 2, 10 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_137cc, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_13840, { 8, 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_dda8, { 8, 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_dd58, { 10, 9, 8, 7, 6, 0, 5, 2, 1, 4, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 54, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 126, { 7, 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_18890.505 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18768.455 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18730.443 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_186f4.427 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_186d4.419 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_186cc.417 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18694.401 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18684.397 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1867c.395 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18660.387 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_185d8.359 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_185d0.357 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_185c8.353 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_185a4.345 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18594.341 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18568.331 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18558.327 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18550.325 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1851c.311 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_184f8.301 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18498.279 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18304.269 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1841c.251 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_183c8.233 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_183a8.227 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_1839c.225 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18394.223 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1838c.221 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18380.217 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_18370.215 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18360.211 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1849c.207 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18340.203 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18338.201 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_18330.199 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_18324.197 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18728.195 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1831c.193 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_18314.191 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1830c.189 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_182f8.185 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_182e8.181 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_187f0.175 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @function_f414, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1864c.173 to i32), { 6, 56, 7, 57, 8, 58, 9, 59, 0, 60, 10, 61, 1, 62, 11, 63, 2, 64, 12, 65, 13, 66, 14, 67, 3, 68, 15, 69, 16, 70, 17, 71, 18, 72, 19, 73, 20, 74, 4, 75, 21, 76, 22, 77, 23, 78, 24, 79, 25, 80, 26, 81, 27, 82, 28, 83, 29, 84, 30, 85, 31, 86, 32, 87, 33, 88, 34, 89, 35, 90, 36, 91, 37, 92, 38, 93, 39, 94, 40, 95, 41, 96, 42, 97, 43, 98, 44, 45, 46, 99, 47, 100, 48, 101, 49, 102, 50, 103, 51, 104, 5, 105, 52, 106, 53, 107, 54, 108, 55, 109 }
  uselistorder i32 ptrtoint (i32* @global_var_182a8.171 to i32), { 4, 16, 5, 17, 6, 18, 0, 19, 1, 20, 7, 21, 2, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29, 15, 30, 3, 31 }
  uselistorder i8* @global_var_21471.168, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i8 6, { 5, 3, 6, 7, 8, 9, 4, 10, 0, 11, 1, 2 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_21464.162 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_21470.163, { 1, 0 }
  uselistorder i32 10240, { 6, 3, 7, 2, 8, 1, 9, 4, 10, 5, 11, 0, 12 }
  uselistorder i8** @global_var_21450.159, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_21450.159 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @function_f190, { 24, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 9, 8, 7, 6, 5, 4, 3, 2, 30, 29, 28, 27, 26, 25, 13, 12, 11, 10, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_13880, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32* @global_var_234d0.157, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_234cc.155, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_21480.144, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_12d34, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27 }
  uselistorder i32 (i32)* @function_f1ec, { 1, 0 }
  uselistorder i32* @global_var_234b4.78, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_234b4.78 to i32), { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_1270c, { 2, 1, 0 }
  uselistorder i32* @global_var_234d4.142, { 0, 2, 1 }
  uselistorder i32 ()* @function_12da4, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_119b8, { 1, 0 }
  uselistorder label %bb428, { 1, 0 }
  uselistorder label %dec_label_pc_118d4, { 1, 0 }
  uselistorder label %dec_label_pc_10c90.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10c90.backedge.thread528, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10c90.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11678, { 1, 0 }
  uselistorder label %dec_label_pc_115b0, { 1, 0 }
  uselistorder label %dec_label_pc_115ac, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_115a4, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_11594, { 1, 0 }
  uselistorder label %dec_label_pc_11524, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114f0, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114d0, { 1, 0 }
  uselistorder label %dec_label_pc_114bc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11478, { 1, 0 }
  uselistorder label %dec_label_pc_11478.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11458, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_11424, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_113d4, { 1, 0 }
  uselistorder label %dec_label_pc_112ec, { 1, 0 }
  uselistorder label %dec_label_pc_11220, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11208, { 1, 0 }
  uselistorder label %dec_label_pc_1114c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11134, { 1, 0 }
  uselistorder label %dec_label_pc_11078, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11060, { 1, 0 }
  uselistorder label %dec_label_pc_10fa4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10f8c, { 1, 0 }
  uselistorder label %dec_label_pc_10ed0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10d98, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb390, { 1, 0 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %dec_label_pc_10d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10cf4, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_10ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10c98, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10c98.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10c70, { 1, 0 }
  uselistorder label %dec_label_pc_10bc8, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 4, 3, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10abc.dec_label_pc_10abc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a9c.dec_label_pc_10a9c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a90, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10a88, { 1, 0 }
  uselistorder label %dec_label_pc_10a64, { 1, 0 }
  uselistorder label %dec_label_pc_10a40, { 1, 0 }
  uselistorder label %dec_label_pc_108f4, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_108e0, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_1076c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10748, { 1, 0 }
  uselistorder label %dec_label_pc_1073c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10718, { 1, 2, 0 }
  uselistorder label %dec_label_pc_106f4, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_106a0, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_f97c, { 1, 0 }
}

define i32 @function_119c0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_119c0:
  store i32 ptrtoint (i32* @global_var_234dc.533 to i32), i32* @r2, align 4
  %v3_119c4 = mul i32 %arg1, 8
  %v2_119c8 = add i32 %v3_119c4, ptrtoint (i32* @global_var_234dc.533 to i32)
  store i32 %v2_119c8, i32* @r3, align 4
  %v2_119cc = icmp eq i32* %arg2, null
  br i1 %v2_119cc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_119c0
  %v3_119d44 = inttoptr i32 %v2_119c8 to i32*
  %v4_119d45 = load i32, i32* %v3_119d44, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_119c0
  %v2_119d0 = add i32 %v3_119c4, add (i32 ptrtoint (i32* @global_var_234dc.533 to i32), i32 4)
  %v3_119d0 = inttoptr i32 %v2_119d0 to i16*
  %v4_119d0 = load i16, i16* %v3_119d0, align 4
  %v5_119d0 = zext i16 %v4_119d0 to i32
  store i32 %v5_119d0, i32* @r3, align 4
  %v3_119d4 = inttoptr i32 %v2_119c8 to i32*
  %v4_119d4 = load i32, i32* %v3_119d4, align 4
  store i32 %v5_119d0, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_119d46 = phi i32 [ %v4_119d45, %.thread ], [ %v4_119d4, %bb ]
  ret i32 %v4_119d46

; uselistorder directives
  uselistorder i32 %v2_119c8, { 1, 0, 2 }
  uselistorder i32 %v3_119c4, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_119e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_119e4:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_119ec = mul i32 %arg1, 8
  %v2_119f0 = add i32 %v3_119ec, ptrtoint (i32* @global_var_234dc.533 to i32)
  %v2_119f4 = load i32, i32* inttoptr (i32 135788 to i32*), align 4
  %v1_119f8 = add i32 %v3_119ec, add (i32 ptrtoint (i32* @global_var_234dc.533 to i32), i32 4)
  %v2_119f8 = inttoptr i32 %v1_119f8 to i16*
  %v3_119f8 = load i16, i16* %v2_119f8, align 4
  %v3_119fc = udiv i32 %v2_119f4, 256
  store i32 %v3_119fc, i32* @r2, align 4
  %v2_11a00 = icmp eq i16 %v3_119f8, 0
  %v3_11a04 = udiv i32 %v2_119f4, 65536
  store i32 %v3_11a04, i32* @r3, align 4
  %v3_11a08 = load i32, i32* @r4, align 4
  store i32 %v3_11a08, i32* %stack_var_-16, align 4
  %v1_11a0c = urem i32 %v3_119fc, 256
  store i32 %v1_11a0c, i32* %r6.global-to-local, align 4
  %v1_11a10 = urem i32 %v3_11a04, 256
  store i32 %v1_11a10, i32* %r5.global-to-local, align 4
  %v3_11a14 = udiv i32 %v2_119f4, 16777216
  store i32 %v3_11a14, i32* %r4.global-to-local, align 4
  %v1_11a18 = urem i32 %v2_119f4, 256
  store i32 %v1_11a18, i32* %lr.global-to-local, align 4
  br i1 %v2_11a00, label %dec_label_pc_11a74, label %dec_label_pc_11a20

dec_label_pc_11a20:                               ; preds = %dec_label_pc_119e4
  store i32 0, i32* @ip, align 4
  %v1_11a24 = inttoptr i32 %v2_119f0 to i32*
  br label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a24.dec_label_pc_11a24_crit_edge, %dec_label_pc_11a20
  %v0_11a2c = phi i32 [ %v0_11a2c.pre, %dec_label_pc_11a24.dec_label_pc_11a24_crit_edge ], [ %v1_11a18, %dec_label_pc_11a20 ]
  %v2_11a30 = phi i32 [ %v1_11a68, %dec_label_pc_11a24.dec_label_pc_11a24_crit_edge ], [ 0, %dec_label_pc_11a20 ]
  %v2_11a24 = load i32, i32* %v1_11a24, align 4
  %v2_11a28 = add i32 %v2_11a24, %v2_11a30
  %v3_11a28 = inttoptr i32 %v2_11a28 to i8*
  %v4_11a28 = load i8, i8* %v3_11a28, align 1
  %v6_11a28 = zext i8 %v4_11a28 to i32
  %v2_11a2c = xor i32 %v6_11a28, %v0_11a2c
  %v1_11a30 = trunc i32 %v2_11a2c to i8
  store i8 %v1_11a30, i8* %v3_11a28, align 1
  %v2_11a34 = load i32, i32* %v1_11a24, align 4
  %v0_11a38 = load i32, i32* @ip, align 4
  %v2_11a38 = add i32 %v0_11a38, %v2_11a34
  %v3_11a38 = inttoptr i32 %v2_11a38 to i8*
  %v4_11a38 = load i8, i8* %v3_11a38, align 1
  %v6_11a38 = zext i8 %v4_11a38 to i32
  %v0_11a3c = load i32, i32* %r6.global-to-local, align 4
  %v2_11a3c = xor i32 %v0_11a3c, %v6_11a38
  %v1_11a40 = trunc i32 %v2_11a3c to i8
  store i8 %v1_11a40, i8* %v3_11a38, align 1
  %v2_11a44 = load i32, i32* %v1_11a24, align 4
  %v0_11a48 = load i32, i32* @ip, align 4
  %v2_11a48 = add i32 %v0_11a48, %v2_11a44
  %v3_11a48 = inttoptr i32 %v2_11a48 to i8*
  %v4_11a48 = load i8, i8* %v3_11a48, align 1
  %v6_11a48 = zext i8 %v4_11a48 to i32
  %v0_11a4c = load i32, i32* %r5.global-to-local, align 4
  %v2_11a4c = xor i32 %v0_11a4c, %v6_11a48
  %v1_11a50 = trunc i32 %v2_11a4c to i8
  store i8 %v1_11a50, i8* %v3_11a48, align 1
  %v2_11a54 = load i32, i32* %v1_11a24, align 4
  %v0_11a58 = load i32, i32* @ip, align 4
  %v2_11a58 = add i32 %v0_11a58, %v2_11a54
  %v3_11a58 = inttoptr i32 %v2_11a58 to i8*
  %v4_11a58 = load i8, i8* %v3_11a58, align 1
  %v6_11a58 = zext i8 %v4_11a58 to i32
  %v0_11a5c = load i32, i32* %r4.global-to-local, align 4
  %v2_11a5c = xor i32 %v0_11a5c, %v6_11a58
  store i32 %v2_11a5c, i32* @r3, align 4
  %v1_11a60 = trunc i32 %v2_11a5c to i8
  store i8 %v1_11a60, i8* %v3_11a58, align 1
  %v3_11a64 = load i16, i16* %v2_119f8, align 4
  %v4_11a64 = zext i16 %v3_11a64 to i32
  store i32 %v4_11a64, i32* @r2, align 4
  %v0_11a68 = load i32, i32* @ip, align 4
  %v1_11a68 = add i32 %v0_11a68, 1
  store i32 %v1_11a68, i32* @ip, align 4
  %v8_11a70 = icmp sgt i32 %v4_11a64, %v1_11a68
  br i1 %v8_11a70, label %dec_label_pc_11a24.dec_label_pc_11a24_crit_edge, label %dec_label_pc_11a74.loopexit

dec_label_pc_11a24.dec_label_pc_11a24_crit_edge:  ; preds = %dec_label_pc_11a24
  %v0_11a2c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a24

dec_label_pc_11a74.loopexit:                      ; preds = %dec_label_pc_11a24
  %v2_11a74.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11a74

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a74.loopexit, %dec_label_pc_119e4
  %v2_11a74 = phi i32 [ %v2_11a74.pre, %dec_label_pc_11a74.loopexit ], [ %v3_11a08, %dec_label_pc_119e4 ]
  store i32 %v2_11a74, i32* @r4, align 4
  ret i32 %v2_119f0

; uselistorder directives
  uselistorder i32 %v1_11a68, { 1, 2, 0 }
  uselistorder i32 %v1_11a18, { 1, 0 }
  uselistorder i32 %v3_11a04, { 1, 0 }
  uselistorder i32 %v3_119fc, { 1, 0 }
  uselistorder i32 %v2_119f4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_119f0, { 1, 0 }
  uselistorder i32 %v3_119ec, { 1, 0 }
}

define i32 @function_11a84(i32 %arg1) local_unnamed_addr {
dec_label_pc_11a84:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a8c = mul i32 %arg1, 8
  %v2_11a90 = add i32 %v3_11a8c, ptrtoint (i32* @global_var_234dc.533 to i32)
  %v2_11a94 = load i32, i32* inttoptr (i32 135788 to i32*), align 4
  %v1_11a98 = add i32 %v3_11a8c, add (i32 ptrtoint (i32* @global_var_234dc.533 to i32), i32 4)
  %v2_11a98 = inttoptr i32 %v1_11a98 to i16*
  %v3_11a98 = load i16, i16* %v2_11a98, align 4
  %v3_11a9c = udiv i32 %v2_11a94, 256
  %v2_11aa0 = icmp eq i16 %v3_11a98, 0
  %v3_11aa4 = udiv i32 %v2_11a94, 65536
  %v3_11aa8 = load i32, i32* @r4, align 4
  store i32 %v3_11aa8, i32* %stack_var_-16, align 4
  %v1_11aac = urem i32 %v3_11a9c, 256
  store i32 %v1_11aac, i32* %r6.global-to-local, align 4
  %v1_11ab0 = urem i32 %v3_11aa4, 256
  store i32 %v1_11ab0, i32* %r5.global-to-local, align 4
  %v3_11ab4 = udiv i32 %v2_11a94, 16777216
  store i32 %v3_11ab4, i32* %r4.global-to-local, align 4
  %v1_11ab8 = urem i32 %v2_11a94, 256
  store i32 %v1_11ab8, i32* %lr.global-to-local, align 4
  br i1 %v2_11aa0, label %dec_label_pc_11b14, label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_11a84
  store i32 0, i32* @ip, align 4
  %v1_11ac4 = inttoptr i32 %v2_11a90 to i32*
  br label %dec_label_pc_11ac4

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11ac4.dec_label_pc_11ac4_crit_edge, %dec_label_pc_11ac0
  %v0_11acc = phi i32 [ %v0_11acc.pre, %dec_label_pc_11ac4.dec_label_pc_11ac4_crit_edge ], [ %v1_11ab8, %dec_label_pc_11ac0 ]
  %v2_11ad0 = phi i32 [ %v1_11b08, %dec_label_pc_11ac4.dec_label_pc_11ac4_crit_edge ], [ 0, %dec_label_pc_11ac0 ]
  %v2_11ac4 = load i32, i32* %v1_11ac4, align 4
  %v2_11ac8 = add i32 %v2_11ac4, %v2_11ad0
  %v3_11ac8 = inttoptr i32 %v2_11ac8 to i8*
  %v4_11ac8 = load i8, i8* %v3_11ac8, align 1
  %v6_11ac8 = zext i8 %v4_11ac8 to i32
  %v2_11acc = xor i32 %v6_11ac8, %v0_11acc
  %v1_11ad0 = trunc i32 %v2_11acc to i8
  store i8 %v1_11ad0, i8* %v3_11ac8, align 1
  %v2_11ad4 = load i32, i32* %v1_11ac4, align 4
  %v0_11ad8 = load i32, i32* @ip, align 4
  %v2_11ad8 = add i32 %v0_11ad8, %v2_11ad4
  %v3_11ad8 = inttoptr i32 %v2_11ad8 to i8*
  %v4_11ad8 = load i8, i8* %v3_11ad8, align 1
  %v6_11ad8 = zext i8 %v4_11ad8 to i32
  %v0_11adc = load i32, i32* %r6.global-to-local, align 4
  %v2_11adc = xor i32 %v0_11adc, %v6_11ad8
  %v1_11ae0 = trunc i32 %v2_11adc to i8
  store i8 %v1_11ae0, i8* %v3_11ad8, align 1
  %v2_11ae4 = load i32, i32* %v1_11ac4, align 4
  %v0_11ae8 = load i32, i32* @ip, align 4
  %v2_11ae8 = add i32 %v0_11ae8, %v2_11ae4
  %v3_11ae8 = inttoptr i32 %v2_11ae8 to i8*
  %v4_11ae8 = load i8, i8* %v3_11ae8, align 1
  %v6_11ae8 = zext i8 %v4_11ae8 to i32
  %v0_11aec = load i32, i32* %r5.global-to-local, align 4
  %v2_11aec = xor i32 %v0_11aec, %v6_11ae8
  %v1_11af0 = trunc i32 %v2_11aec to i8
  store i8 %v1_11af0, i8* %v3_11ae8, align 1
  %v2_11af4 = load i32, i32* %v1_11ac4, align 4
  %v0_11af8 = load i32, i32* @ip, align 4
  %v2_11af8 = add i32 %v0_11af8, %v2_11af4
  %v3_11af8 = inttoptr i32 %v2_11af8 to i8*
  %v4_11af8 = load i8, i8* %v3_11af8, align 1
  %v6_11af8 = zext i8 %v4_11af8 to i32
  %v0_11afc = load i32, i32* %r4.global-to-local, align 4
  %v2_11afc = xor i32 %v0_11afc, %v6_11af8
  %v1_11b00 = trunc i32 %v2_11afc to i8
  store i8 %v1_11b00, i8* %v3_11af8, align 1
  %v3_11b04 = load i16, i16* %v2_11a98, align 4
  %v4_11b04 = zext i16 %v3_11b04 to i32
  %v0_11b08 = load i32, i32* @ip, align 4
  %v1_11b08 = add i32 %v0_11b08, 1
  store i32 %v1_11b08, i32* @ip, align 4
  %v8_11b10 = icmp sgt i32 %v4_11b04, %v1_11b08
  br i1 %v8_11b10, label %dec_label_pc_11ac4.dec_label_pc_11ac4_crit_edge, label %dec_label_pc_11b14.loopexit

dec_label_pc_11ac4.dec_label_pc_11ac4_crit_edge:  ; preds = %dec_label_pc_11ac4
  %v0_11acc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11ac4

dec_label_pc_11b14.loopexit:                      ; preds = %dec_label_pc_11ac4
  %v2_11b14.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11b14

dec_label_pc_11b14:                               ; preds = %dec_label_pc_11b14.loopexit, %dec_label_pc_11a84
  %v2_11b14 = phi i32 [ %v2_11b14.pre, %dec_label_pc_11b14.loopexit ], [ %v3_11aa8, %dec_label_pc_11a84 ]
  store i32 %v2_11b14, i32* @r4, align 4
  ret i32 %v2_11a90

; uselistorder directives
  uselistorder i32 %v1_11b08, { 1, 2, 0 }
  uselistorder i32 %v1_11ab8, { 1, 0 }
  uselistorder i32 %v2_11a94, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11a90, { 1, 0 }
  uselistorder i32 %v3_11a8c, { 1, 0 }
}

define i32 @function_11b24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11b24:
  %r5.global-to-local = alloca i32, align 4
  %v3_11b24 = load i32, i32* @r4, align 4
  %v6_11b24 = load i32, i32* @r5, align 4
  %v9_11b24 = load i32, i32* @r6, align 4
  %v12_11b24 = load i32, i32* @r7, align 4
  %v15_11b24 = load i32, i32* @r8, align 4
  %v21_11b24 = load i32, i32* @sl, align 4
  %v24_11b24 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_11b30 = call i32 @function_13b0c()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_234dc.533 to i32), i32* @r4, align 4
  store i32 %v0_11b30, i32* @r6, align 4
  %v3_11b48 = call i32 @function_124c0(i32 %v0_11b30, i32 ptrtoint (i32* @global_var_188b0.540 to i32), i32 2)
  %v0_11b4c = load i32, i32* @r5, align 4
  store i32 %v0_11b4c, i32* @r0, align 4
  %v0_11b50 = load i32, i32* @r6, align 4
  store i32 %v0_11b50, i32* @global_var_234e4.541, align 4
  %v1_11b54 = trunc i32 %v0_11b4c to i16
  store i16 %v1_11b54, i16* bitcast (i32* @global_var_234e8.542 to i16*), align 4
  %v0_11b58 = call i32 @function_13b0c()
  %v0_11b5c = load i32, i32* @r5, align 4
  store i32 %v0_11b58, i32* @r6, align 4
  %v3_11b68 = call i32 @function_124c0(i32 %v0_11b58, i32 ptrtoint (i32* @global_var_188b4.544 to i32), i32 %v0_11b5c)
  store i32 19, i32* @r0, align 4
  %v0_11b70 = load i32, i32* @r6, align 4
  store i32 %v0_11b70, i32* @global_var_234ec.545, align 4
  %v0_11b74 = load i32, i32* @r5, align 4
  %v1_11b74 = trunc i32 %v0_11b74 to i16
  store i16 %v1_11b74, i16* bitcast (i32* @global_var_234f0.546 to i16*), align 4
  %v0_11b78 = call i32 @function_13b0c()
  store i32 19, i32* @fp, align 4
  store i32 %v0_11b78, i32* @r5, align 4
  %v4_11b8c = call i32 @function_124c0(i32 %v0_11b78, i32 ptrtoint ([20 x i8]* @global_var_188b8.548 to i32), i32 19)
  store i32 7, i32* @r0, align 4
  %v0_11b94 = load i32, i32* @r5, align 4
  store i32 %v0_11b94, i32* @global_var_234f4.549, align 4
  %v0_11b98 = load i32, i32* @fp, align 4
  %v1_11b98 = trunc i32 %v0_11b98 to i16
  store i16 %v1_11b98, i16* bitcast (i32* @global_var_234f8.550 to i16*), align 4
  %v0_11b9c = call i32 @function_13b0c()
  store i32 7, i32* @r7, align 4
  store i32 %v0_11b9c, i32* @r5, align 4
  %v3_11bb0 = call i32 @function_124c0(i32 %v0_11b9c, i32 ptrtoint (i32* @global_var_188cc.552 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11bb8 = load i32, i32* @r5, align 4
  store i32 %v0_11bb8, i32* @global_var_234fc.553, align 4
  %v0_11bbc = load i32, i32* @r7, align 4
  %v1_11bbc = trunc i32 %v0_11bbc to i16
  store i16 %v1_11bbc, i16* bitcast (i32* @global_var_23500.554 to i16*), align 4
  %v0_11bc0 = call i32 @function_13b0c()
  store i32 %v0_11bc0, i32* @r5, align 4
  %v3_11bd0 = call i32 @function_124c0(i32 %v0_11bc0, i32 ptrtoint (i32* @global_var_188d4.556 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_11bdc = load i32, i32* @r5, align 4
  store i32 %v0_11bdc, i32* @global_var_23504.557, align 4
  store i16 5, i16* bitcast (i32* @global_var_23508.558 to i16*), align 4
  %v0_11be4 = call i32 @function_13b0c()
  store i32 %v0_11be4, i32* @r5, align 4
  %v3_11bf4 = call i32 @function_124c0(i32 %v0_11be4, i32 ptrtoint (i32* @global_var_188dc.560 to i32), i32 4)
  store i32 14, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_23510.561 to i16*), align 4
  %v0_11c04 = load i32, i32* @r5, align 4
  store i32 %v0_11c04, i32* @global_var_2350c.562, align 4
  %v0_11c08 = call i32 @function_13b0c()
  store i32 14, i32* @r6, align 4
  store i32 %v0_11c08, i32* @r5, align 4
  %v3_11c1c = call i32 @function_124c0(i32 %v0_11c08, i32 ptrtoint (i32* @global_var_188e4.564 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  %v0_11c24 = load i32, i32* @r5, align 4
  store i32 %v0_11c24, i32* @global_var_23514.565, align 4
  %v0_11c28 = load i32, i32* @r6, align 4
  %v1_11c28 = trunc i32 %v0_11c28 to i16
  store i16 %v1_11c28, i16* bitcast (i32* @global_var_23518.566 to i16*), align 4
  %v0_11c2c = call i32 @function_13b0c()
  store i32 6, i32* @r8, align 4
  store i32 %v0_11c2c, i32* @r5, align 4
  %v3_11c40 = call i32 @function_124c0(i32 %v0_11c2c, i32 ptrtoint (i32* @global_var_188f4.568 to i32), i32 6)
  store i32 8, i32* @r0, align 4
  %v0_11c48 = load i32, i32* @r5, align 4
  store i32 %v0_11c48, i32* @global_var_2351c.569, align 4
  %v0_11c4c = load i32, i32* @r8, align 4
  %v1_11c4c = trunc i32 %v0_11c4c to i16
  store i16 %v1_11c4c, i16* bitcast (i32* @global_var_23520.570 to i16*), align 4
  %v0_11c50 = call i32 @function_13b0c()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11c50, i32* @r5, align 4
  %v3_11c64 = call i32 @function_124c0(i32 %v0_11c50, i32 ptrtoint (i32* @global_var_188fc.572 to i32), i32 8)
  %v0_11c68 = load i32, i32* @r7, align 4
  store i32 %v0_11c68, i32* @r0, align 4
  %v0_11c6c = load i32, i32* @r5, align 4
  store i32 %v0_11c6c, i32* @global_var_23524.573, align 4
  %v0_11c70 = load i32, i32* @sl, align 4
  %v1_11c70 = trunc i32 %v0_11c70 to i16
  store i16 %v1_11c70, i16* bitcast (i32* @global_var_23528.574 to i16*), align 4
  %v0_11c74 = call i32 @function_13b0c()
  %v0_11c78 = load i32, i32* @r7, align 4
  store i32 %v0_11c74, i32* @r5, align 4
  %v3_11c84 = call i32 @function_124c0(i32 %v0_11c74, i32 ptrtoint (i32* @global_var_18908.576 to i32), i32 %v0_11c78)
  store i32 16, i32* @r0, align 4
  %v0_11c8c = load i32, i32* @r5, align 4
  store i32 %v0_11c8c, i32* @global_var_2352c.577, align 4
  %v0_11c90 = load i32, i32* @r7, align 4
  %v1_11c90 = trunc i32 %v0_11c90 to i16
  store i16 %v1_11c90, i16* bitcast (i32* @global_var_23530.578 to i16*), align 4
  %v0_11c94 = call i32 @function_13b0c()
  store i32 %v0_11c94, i32* @r5, align 4
  %v3_11ca4 = call i32 @function_124c0(i32 %v0_11c94, i32 ptrtoint (i32* @global_var_18910.580 to i32), i32 16)
  %v0_11cac = load i32, i32* @r6, align 4
  store i32 %v0_11cac, i32* @r0, align 4
  %v0_11cb0 = load i32, i32* @r5, align 4
  store i32 %v0_11cb0, i32* @global_var_23534.581, align 4
  store i16 16, i16* bitcast (i32* @global_var_23538.582 to i16*), align 4
  %v0_11cb8 = call i32 @function_13b0c()
  %v0_11cbc = load i32, i32* @r6, align 4
  store i32 %v0_11cb8, i32* @r5, align 4
  %v3_11cc8 = call i32 @function_124c0(i32 %v0_11cb8, i32 ptrtoint (i32* @global_var_18924.584 to i32), i32 %v0_11cbc)
  store i32 9, i32* @r0, align 4
  %v0_11cd0 = load i32, i32* @r5, align 4
  store i32 %v0_11cd0, i32* @global_var_2353c.585, align 4
  %v0_11cd4 = load i32, i32* @r6, align 4
  %v1_11cd4 = trunc i32 %v0_11cd4 to i16
  store i16 %v1_11cd4, i16* bitcast (i32* @global_var_23540.586 to i16*), align 4
  %v0_11cd8 = call i32 @function_13b0c()
  store i32 9, i32* @sb, align 4
  store i32 %v0_11cd8, i32* @r5, align 4
  %v3_11cec = call i32 @function_124c0(i32 %v0_11cd8, i32 ptrtoint (i32* @global_var_18934.588 to i32), i32 9)
  %v0_11cf0 = load i32, i32* @fp, align 4
  store i32 %v0_11cf0, i32* @r0, align 4
  %v0_11cf4 = load i32, i32* @r5, align 4
  store i32 %v0_11cf4, i32* @global_var_23544.589, align 4
  %v0_11cf8 = load i32, i32* @sb, align 4
  %v1_11cf8 = trunc i32 %v0_11cf8 to i16
  store i16 %v1_11cf8, i16* bitcast (i32* @global_var_23548.590 to i16*), align 4
  %v0_11cfc = call i32 @function_13b0c()
  %v0_11d04 = load i32, i32* @fp, align 4
  store i32 %v0_11cfc, i32* @r5, align 4
  %v3_11d0c = call i32 @function_124c0(i32 %v0_11cfc, i32 ptrtoint (i32* @global_var_18940.592 to i32), i32 %v0_11d04)
  store i32 23, i32* @r0, align 4
  %v0_11d14 = load i32, i32* @r5, align 4
  store i32 %v0_11d14, i32* @global_var_2354c.593, align 4
  %v0_11d18 = load i32, i32* @fp, align 4
  %v1_11d18 = trunc i32 %v0_11d18 to i16
  store i16 %v1_11d18, i16* bitcast (i32* @global_var_23550.594 to i16*), align 4
  %v0_11d1c = call i32 @function_13b0c()
  store i32 %v0_11d1c, i32* @r5, align 4
  %v3_11d2c = call i32 @function_124c0(i32 %v0_11d1c, i32 ptrtoint (i32* @global_var_18954.596 to i32), i32 23)
  %v0_11d34 = load i32, i32* @sl, align 4
  store i32 %v0_11d34, i32* @r0, align 4
  store i16 23, i16* bitcast (i32* @global_var_23558.597 to i16*), align 4
  %v0_11d3c = load i32, i32* @r5, align 4
  store i32 %v0_11d3c, i32* @global_var_23554.598, align 4
  %v0_11d40 = call i32 @function_13b0c()
  %v0_11d48 = load i32, i32* @sl, align 4
  store i32 %v0_11d40, i32* @r5, align 4
  %v4_11d50 = call i32 @function_124c0(i32 %v0_11d40, i32 ptrtoint ([9 x i8]* @global_var_1896c.600 to i32), i32 %v0_11d48)
  %v0_11d54 = load i32, i32* @r6, align 4
  store i32 %v0_11d54, i32* @r0, align 4
  %v0_11d58 = load i32, i32* @r5, align 4
  store i32 %v0_11d58, i32* @global_var_2355c.601, align 4
  %v0_11d5c = load i32, i32* @sl, align 4
  %v1_11d5c = trunc i32 %v0_11d5c to i16
  store i16 %v1_11d5c, i16* bitcast (i32* @global_var_23560.602 to i16*), align 4
  %v0_11d60 = call i32 @function_13b0c()
  %v0_11d64 = load i32, i32* @r6, align 4
  store i32 %v0_11d60, i32* @r5, align 4
  %v3_11d70 = call i32 @function_124c0(i32 %v0_11d60, i32 ptrtoint (i32* @global_var_18978.604 to i32), i32 %v0_11d64)
  %v0_11d74 = load i32, i32* @fp, align 4
  store i32 %v0_11d74, i32* @r0, align 4
  %v0_11d78 = load i32, i32* @r5, align 4
  store i32 %v0_11d78, i32* @global_var_23564.605, align 4
  %v0_11d7c = load i32, i32* @r6, align 4
  %v1_11d7c = trunc i32 %v0_11d7c to i16
  store i16 %v1_11d7c, i16* bitcast (i32* @global_var_23568.606 to i16*), align 4
  %v0_11d80 = call i32 @function_13b0c()
  %v0_11d88 = load i32, i32* @fp, align 4
  store i32 %v0_11d80, i32* @r5, align 4
  %v3_11d90 = call i32 @function_124c0(i32 %v0_11d80, i32 ptrtoint (i32* @global_var_18988.608 to i32), i32 %v0_11d88)
  store i32 23, i32* @r0, align 4
  %v0_11d98 = load i32, i32* @r5, align 4
  store i32 %v0_11d98, i32* @global_var_2356c.609, align 4
  %v0_11d9c = load i32, i32* @fp, align 4
  %v1_11d9c = trunc i32 %v0_11d9c to i16
  store i16 %v1_11d9c, i16* bitcast (i32* @global_var_23570.610 to i16*), align 4
  %v0_11da0 = call i32 @function_13b0c()
  store i32 %v0_11da0, i32* @r5, align 4
  %v3_11db0 = call i32 @function_124c0(i32 %v0_11da0, i32 ptrtoint (i32* @global_var_1899c.612 to i32), i32 23)
  store i32 24, i32* @r0, align 4
  %v0_11dbc = load i32, i32* @r5, align 4
  store i32 %v0_11dbc, i32* @global_var_23574.613, align 4
  store i16 23, i16* bitcast (i32* @global_var_23578.614 to i16*), align 4
  %v0_11dc4 = call i32 @function_13b0c()
  %v0_11dd0 = load i32, i32* @r6, align 4
  %v1_11dd0 = add i32 %v0_11dd0, 10
  store i32 %v1_11dd0, i32* @r6, align 4
  store i32 %v0_11dc4, i32* @r5, align 4
  %v3_11dd8 = call i32 @function_124c0(i32 %v0_11dc4, i32 ptrtoint (i32* @global_var_189b4.616 to i32), i32 24)
  store i32 15, i32* @r0, align 4
  %v0_11de0 = load i32, i32* @r5, align 4
  store i32 %v0_11de0, i32* @global_var_2357c.617, align 4
  %v0_11de4 = load i32, i32* @r6, align 4
  %v1_11de4 = trunc i32 %v0_11de4 to i16
  store i16 %v1_11de4, i16* bitcast (i32* @global_var_23580.618 to i16*), align 4
  %v0_11de8 = call i32 @function_13b0c()
  store i32 %v0_11de8, i32* @r5, align 4
  %v3_11df8 = call i32 @function_124c0(i32 %v0_11de8, i32 ptrtoint (i32* @global_var_189d0.620 to i32), i32 15)
  %v0_11e00 = load i32, i32* @r8, align 4
  store i32 %v0_11e00, i32* @r0, align 4
  store i16 15, i16* bitcast (i32* @global_var_23588.621 to i16*), align 4
  %v0_11e08 = load i32, i32* @r5, align 4
  store i32 %v0_11e08, i32* @global_var_23584.622, align 4
  %v0_11e0c = call i32 @function_13b0c()
  %v0_11e10 = load i32, i32* @r8, align 4
  store i32 %v0_11e0c, i32* @r5, align 4
  %v4_11e1c = call i32 @function_124c0(i32 %v0_11e0c, i32 ptrtoint ([7 x i8]* @global_var_189e0.624 to i32), i32 %v0_11e10)
  %v0_11e20 = load i32, i32* @r7, align 4
  store i32 %v0_11e20, i32* @r0, align 4
  %v0_11e24 = load i32, i32* @r5, align 4
  store i32 %v0_11e24, i32* @global_var_2358c.625, align 4
  %v0_11e28 = load i32, i32* @r8, align 4
  %v1_11e28 = trunc i32 %v0_11e28 to i16
  store i16 %v1_11e28, i16* bitcast (i32* @global_var_23590.626 to i16*), align 4
  %v0_11e2c = call i32 @function_13b0c()
  %v0_11e30 = load i32, i32* @r7, align 4
  store i32 %v0_11e2c, i32* @r5, align 4
  %v4_11e3c = call i32 @function_124c0(i32 %v0_11e2c, i32 ptrtoint ([8 x i8]* @global_var_189e8.628 to i32), i32 %v0_11e30)
  %v0_11e40 = load i32, i32* @r7, align 4
  store i32 %v0_11e40, i32* @r0, align 4
  %v0_11e44 = load i32, i32* @r5, align 4
  store i32 %v0_11e44, i32* @global_var_23594.629, align 4
  %v1_11e48 = trunc i32 %v0_11e40 to i16
  store i16 %v1_11e48, i16* bitcast (i32* @global_var_23598.630 to i16*), align 4
  %v0_11e4c = call i32 @function_13b0c()
  %v0_11e50 = load i32, i32* @r7, align 4
  store i32 %v0_11e4c, i32* @r5, align 4
  %v4_11e5c = call i32 @function_124c0(i32 %v0_11e4c, i32 ptrtoint ([8 x i8]* @global_var_189f0.632 to i32), i32 %v0_11e50)
  store i32 3, i32* @r0, align 4
  %v0_11e64 = load i32, i32* @r5, align 4
  store i32 %v0_11e64, i32* @global_var_2359c.633, align 4
  %v0_11e68 = load i32, i32* @r7, align 4
  %v1_11e68 = trunc i32 %v0_11e68 to i16
  store i16 %v1_11e68, i16* bitcast (i32* @global_var_235a0.634 to i16*), align 4
  %v0_11e6c = call i32 @function_13b0c()
  store i32 %v0_11e6c, i32* @r5, align 4
  %v4_11e7c = call i32 @function_124c0(i32 %v0_11e6c, i32 ptrtoint ([4 x i8]* @global_var_189f8.636 to i32), i32 3)
  %v0_11e84 = load i32, i32* @r6, align 4
  store i32 %v0_11e84, i32* @r0, align 4
  %v0_11e88 = load i32, i32* @r5, align 4
  store i32 %v0_11e88, i32* @global_var_235a4.637, align 4
  store i16 3, i16* bitcast (i32* @global_var_235a8.638 to i16*), align 4
  %v0_11e90 = call i32 @function_13b0c()
  %v0_11e94 = load i32, i32* @r6, align 4
  store i32 %v0_11e90, i32* @r5, align 4
  %v3_11ea0 = call i32 @function_124c0(i32 %v0_11e90, i32 ptrtoint (i32* @global_var_189fc.640 to i32), i32 %v0_11e94)
  store i32 29, i32* @r0, align 4
  %v0_11ea8 = load i32, i32* @r5, align 4
  store i32 %v0_11ea8, i32* @global_var_235ac.641, align 4
  %v0_11eac = load i32, i32* @r6, align 4
  %v1_11eac = trunc i32 %v0_11eac to i16
  store i16 %v1_11eac, i16* bitcast (i32* @global_var_235b0.642 to i16*), align 4
  %v0_11eb0 = call i32 @function_13b0c()
  store i32 %v0_11eb0, i32* @r5, align 4
  %v3_11ec0 = call i32 @function_124c0(i32 %v0_11eb0, i32 ptrtoint (i32* @global_var_18a18.644 to i32), i32 29)
  %v0_11ec8 = load i32, i32* @sb, align 4
  store i32 %v0_11ec8, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_235b8.645 to i16*), align 4
  %v0_11ed0 = load i32, i32* @r5, align 4
  store i32 %v0_11ed0, i32* @global_var_235b4.646, align 4
  %v0_11ed4 = call i32 @function_13b0c()
  %v0_11edc = load i32, i32* @sb, align 4
  store i32 %v0_11ed4, i32* @r5, align 4
  %v4_11ee4 = call i32 @function_124c0(i32 %v0_11ed4, i32 ptrtoint ([10 x i8]* @global_var_18a38.648 to i32), i32 %v0_11edc)
  %v0_11ee8 = load i32, i32* @sl, align 4
  store i32 %v0_11ee8, i32* @r0, align 4
  %v0_11eec = load i32, i32* @r5, align 4
  store i32 %v0_11eec, i32* @global_var_235bc.649, align 4
  %v0_11ef0 = load i32, i32* @sb, align 4
  %v1_11ef0 = trunc i32 %v0_11ef0 to i16
  store i16 %v1_11ef0, i16* bitcast (i32* @global_var_235c0.650 to i16*), align 4
  %v0_11ef4 = call i32 @function_13b0c()
  %v0_11efc = load i32, i32* @sl, align 4
  store i32 %v0_11ef4, i32* @r5, align 4
  %v4_11f04 = call i32 @function_124c0(i32 %v0_11ef4, i32 ptrtoint ([9 x i8]* @global_var_1896c.600 to i32), i32 %v0_11efc)
  store i32 5, i32* @r0, align 4
  %v0_11f0c = load i32, i32* @r5, align 4
  store i32 %v0_11f0c, i32* @global_var_235c4.651, align 4
  %v0_11f10 = load i32, i32* @sl, align 4
  %v1_11f10 = trunc i32 %v0_11f10 to i16
  store i16 %v1_11f10, i16* bitcast (i32* @global_var_235c8.652 to i16*), align 4
  %v0_11f14 = call i32 @function_13b0c()
  store i32 %v0_11f14, i32* @r5, align 4
  %v4_11f24 = call i32 @function_124c0(i32 %v0_11f14, i32 ptrtoint ([6 x i8]* @global_var_18a44.654 to i32), i32 5)
  %v0_11f2c = load i32, i32* @r8, align 4
  store i32 %v0_11f2c, i32* @r0, align 4
  %v0_11f30 = load i32, i32* @r5, align 4
  store i32 %v0_11f30, i32* @global_var_235cc.655, align 4
  store i16 5, i16* bitcast (i32* @global_var_235d0.656 to i16*), align 4
  %v0_11f38 = call i32 @function_13b0c()
  %v0_11f3c = load i32, i32* @r8, align 4
  store i32 %v0_11f38, i32* @r5, align 4
  %v4_11f48 = call i32 @function_124c0(i32 %v0_11f38, i32 ptrtoint ([7 x i8]* @global_var_18a4c.658 to i32), i32 %v0_11f3c)
  store i32 21, i32* @r0, align 4
  %v0_11f50 = load i32, i32* @r5, align 4
  store i32 %v0_11f50, i32* @global_var_235d4.659, align 4
  %v0_11f54 = load i32, i32* @r8, align 4
  %v1_11f54 = trunc i32 %v0_11f54 to i16
  store i16 %v1_11f54, i16* bitcast (i32* @global_var_235d8.660 to i16*), align 4
  %v0_11f58 = call i32 @function_13b0c()
  store i32 %v0_11f58, i32* @r5, align 4
  %v0_11f68 = load i32, i32* @r8, align 4
  %v1_11f68 = add i32 %v0_11f68, 15
  store i32 %v1_11f68, i32* @r8, align 4
  %v3_11f6c = call i32 @function_124c0(i32 %v0_11f58, i32 ptrtoint (i32* @global_var_18a54.662 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  %v0_11f78 = load i32, i32* @r8, align 4
  %v1_11f78 = trunc i32 %v0_11f78 to i16
  %v2_11f78 = load i32, i32* @r4, align 4
  %v4_11f78 = add i32 %v2_11f78, 260
  %v5_11f78 = inttoptr i32 %v4_11f78 to i16*
  store i16 %v1_11f78, i16* %v5_11f78, align 2
  %v0_11f7c = load i32, i32* @r5, align 4
  store i32 %v0_11f7c, i32* @global_var_235dc.663, align 4
  %v0_11f80 = call i32 @function_13b0c()
  store i32 %v0_11f80, i32* @r5, align 4
  %v3_11f90 = call i32 @function_124c0(i32 %v0_11f80, i32 ptrtoint (i32* @global_var_18a6c.665 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  %v2_11fa0 = load i32, i32* @r4, align 4
  %v4_11fa0 = add i32 %v2_11fa0, 268
  %v5_11fa0 = inttoptr i32 %v4_11fa0 to i16*
  store i16 17, i16* %v5_11fa0, align 2
  %v0_11fa4 = load i32, i32* @r5, align 4
  store i32 %v0_11fa4, i32* @global_var_235e4.666, align 4
  %v0_11fa8 = call i32 @function_13b0c()
  %v0_11fb4 = load i32, i32* @r7, align 4
  %v1_11fb4 = add i32 %v0_11fb4, 4
  store i32 %v1_11fb4, i32* @r7, align 4
  store i32 %v0_11fa8, i32* @r5, align 4
  %v4_11fbc = call i32 @function_124c0(i32 %v0_11fa8, i32 ptrtoint ([12 x i8]* @global_var_18a80.668 to i32), i32 11)
  store i32 23, i32* @r0, align 4
  %v0_11fc8 = load i32, i32* @r7, align 4
  %v1_11fc8 = trunc i32 %v0_11fc8 to i16
  %v2_11fc8 = load i32, i32* @r4, align 4
  %v4_11fc8 = add i32 %v2_11fc8, 276
  %v5_11fc8 = inttoptr i32 %v4_11fc8 to i16*
  store i16 %v1_11fc8, i16* %v5_11fc8, align 2
  %v0_11fcc = load i32, i32* @r5, align 4
  store i32 %v0_11fcc, i32* @global_var_235ec.669, align 4
  %v0_11fd0 = call i32 @function_13b0c()
  store i32 %v0_11fd0, i32* @r5, align 4
  %v3_11fe0 = call i32 @function_124c0(i32 %v0_11fd0, i32 ptrtoint (i32* @global_var_18a8c.671 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_11ff0 = load i32, i32* @r4, align 4
  %v4_11ff0 = add i32 %v2_11ff0, 284
  %v5_11ff0 = inttoptr i32 %v4_11ff0 to i16*
  store i16 23, i16* %v5_11ff0, align 2
  %v0_11ff4 = load i32, i32* @r5, align 4
  store i32 %v0_11ff4, i32* @global_var_235f4.672, align 4
  %v0_11ff8 = call i32 @function_13b0c()
  store i32 %v0_11ff8, i32* @r5, align 4
  %v3_12008 = call i32 @function_124c0(i32 %v0_11ff8, i32 ptrtoint (i32* @global_var_18de0.674 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_12018 = load i32, i32* @r4, align 4
  %v4_12018 = add i32 %v2_12018, 292
  %v5_12018 = inttoptr i32 %v4_12018 to i16*
  store i16 83, i16* %v5_12018, align 2
  %v0_1201c = load i32, i32* @r5, align 4
  store i32 %v0_1201c, i32* @global_var_235fc.675, align 4
  %v0_12020 = call i32 @function_13b0c()
  store i32 %v0_12020, i32* @r5, align 4
  %v3_12030 = call i32 @function_124c0(i32 %v0_12020, i32 ptrtoint (i32* @global_var_18e34.677 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_12040 = load i32, i32* @r4, align 4
  %v4_12040 = add i32 %v2_12040, 300
  %v5_12040 = inttoptr i32 %v4_12040 to i16*
  store i16 32, i16* %v5_12040, align 2
  %v0_12044 = load i32, i32* @r5, align 4
  store i32 %v0_12044, i32* @global_var_23604.678, align 4
  %v0_12048 = call i32 @function_13b0c()
  store i32 %v0_12048, i32* @r5, align 4
  %v3_12058 = call i32 @function_124c0(i32 %v0_12048, i32 ptrtoint (i32* @global_var_18aa4.680 to i32), i32 48)
  store i32 12, i32* @r0, align 4
  %v2_12068 = load i32, i32* @r4, align 4
  %v4_12068 = add i32 %v2_12068, 308
  %v5_12068 = inttoptr i32 %v4_12068 to i16*
  store i16 48, i16* %v5_12068, align 2
  %v0_1206c = load i32, i32* @r5, align 4
  store i32 %v0_1206c, i32* @global_var_2360c.681, align 4
  %v0_12070 = call i32 @function_13b0c()
  %v0_1207c = load i32, i32* @r6, align 4
  %v1_1207c = add i32 %v0_1207c, -12
  store i32 %v1_1207c, i32* @r6, align 4
  store i32 %v0_12070, i32* @r5, align 4
  %v3_12084 = call i32 @function_124c0(i32 %v0_12070, i32 ptrtoint (i32* @global_var_18ad8.683 to i32), i32 12)
  %v0_1208c = load i32, i32* @sb, align 4
  store i32 %v0_1208c, i32* @r0, align 4
  %v0_12090 = load i32, i32* @r6, align 4
  %v1_12090 = trunc i32 %v0_12090 to i16
  %v2_12090 = load i32, i32* @r4, align 4
  %v4_12090 = add i32 %v2_12090, 316
  %v5_12090 = inttoptr i32 %v4_12090 to i16*
  store i16 %v1_12090, i16* %v5_12090, align 2
  %v0_12094 = load i32, i32* @r5, align 4
  store i32 %v0_12094, i32* @global_var_23614.684, align 4
  %v0_12098 = call i32 @function_13b0c()
  %v0_120a0 = load i32, i32* @sb, align 4
  store i32 %v0_12098, i32* @r5, align 4
  %v3_120a8 = call i32 @function_124c0(i32 %v0_12098, i32 ptrtoint (i32* @global_var_18ae8.686 to i32), i32 %v0_120a0)
  store i32 10, i32* @r0, align 4
  %v0_120b4 = load i32, i32* @sb, align 4
  %v1_120b4 = trunc i32 %v0_120b4 to i16
  %v2_120b4 = load i32, i32* @r4, align 4
  %v4_120b4 = add i32 %v2_120b4, 324
  %v5_120b4 = inttoptr i32 %v4_120b4 to i16*
  store i16 %v1_120b4, i16* %v5_120b4, align 2
  %v0_120b8 = load i32, i32* @r5, align 4
  store i32 %v0_120b8, i32* @global_var_2361c.687, align 4
  %v0_120bc = call i32 @function_13b0c()
  store i32 %v0_120bc, i32* @r5, align 4
  %v3_120cc = call i32 @function_124c0(i32 %v0_120bc, i32 ptrtoint (i32* @global_var_18af4.689 to i32), i32 10)
  %v0_120d8 = load i32, i32* @r6, align 4
  store i32 %v0_120d8, i32* @r0, align 4
  %v2_120dc = load i32, i32* @r4, align 4
  %v4_120dc = add i32 %v2_120dc, 332
  %v5_120dc = inttoptr i32 %v4_120dc to i16*
  store i16 10, i16* %v5_120dc, align 2
  %v0_120e0 = load i32, i32* @r5, align 4
  store i32 %v0_120e0, i32* @global_var_23624.690, align 4
  %v0_120e4 = call i32 @function_13b0c()
  %v0_120e8 = load i32, i32* @r6, align 4
  store i32 %v0_120e4, i32* @r5, align 4
  %v3_120f4 = call i32 @function_124c0(i32 %v0_120e4, i32 ptrtoint (i32* @global_var_18b00.692 to i32), i32 %v0_120e8)
  store i32 16, i32* @r0, align 4
  %v0_12100 = load i32, i32* @r6, align 4
  %v1_12100 = trunc i32 %v0_12100 to i16
  %v2_12100 = load i32, i32* @r4, align 4
  %v4_12100 = add i32 %v2_12100, 340
  %v5_12100 = inttoptr i32 %v4_12100 to i16*
  store i16 %v1_12100, i16* %v5_12100, align 2
  %v0_12104 = load i32, i32* @r5, align 4
  store i32 %v0_12104, i32* @global_var_2362c.693, align 4
  %v0_12108 = call i32 @function_13b0c()
  store i32 %v0_12108, i32* @r5, align 4
  %v3_12118 = call i32 @function_124c0(i32 %v0_12108, i32 ptrtoint (i32* @global_var_18b10.695 to i32), i32 16)
  %v0_12124 = load i32, i32* @fp, align 4
  store i32 %v0_12124, i32* @r0, align 4
  %v2_12128 = load i32, i32* @r4, align 4
  %v4_12128 = add i32 %v2_12128, 348
  %v5_12128 = inttoptr i32 %v4_12128 to i16*
  store i16 16, i16* %v5_12128, align 2
  %v0_1212c = load i32, i32* @r5, align 4
  store i32 %v0_1212c, i32* @global_var_23634.696, align 4
  %v0_12130 = call i32 @function_13b0c()
  %v0_12138 = load i32, i32* @fp, align 4
  store i32 %v0_12130, i32* @r5, align 4
  %v3_12140 = call i32 @function_124c0(i32 %v0_12130, i32 ptrtoint (i32* @global_var_18b24.698 to i32), i32 %v0_12138)
  %v0_12148 = load i32, i32* @sl, align 4
  store i32 %v0_12148, i32* @r0, align 4
  %v0_1214c = load i32, i32* @fp, align 4
  %v1_1214c = trunc i32 %v0_1214c to i16
  %v2_1214c = load i32, i32* @r4, align 4
  %v4_1214c = add i32 %v2_1214c, 356
  %v5_1214c = inttoptr i32 %v4_1214c to i16*
  store i16 %v1_1214c, i16* %v5_1214c, align 2
  %v0_12150 = load i32, i32* @r5, align 4
  store i32 %v0_12150, i32* @global_var_2363c.699, align 4
  %v0_12154 = call i32 @function_13b0c()
  %v0_1215c = load i32, i32* @sl, align 4
  store i32 %v0_12154, i32* @r5, align 4
  %v4_12164 = call i32 @function_124c0(i32 %v0_12154, i32 ptrtoint ([9 x i8]* @global_var_18b38.701 to i32), i32 %v0_1215c)
  %v0_1216c = load i32, i32* @r7, align 4
  store i32 %v0_1216c, i32* @r0, align 4
  %v0_12170 = load i32, i32* @sl, align 4
  %v1_12170 = trunc i32 %v0_12170 to i16
  %v2_12170 = load i32, i32* @r4, align 4
  %v4_12170 = add i32 %v2_12170, 364
  %v5_12170 = inttoptr i32 %v4_12170 to i16*
  store i16 %v1_12170, i16* %v5_12170, align 2
  %v0_12174 = load i32, i32* @r5, align 4
  store i32 %v0_12174, i32* @global_var_23644.702, align 4
  %v0_12178 = call i32 @function_13b0c()
  %v0_12180 = load i32, i32* @r7, align 4
  store i32 %v0_12178, i32* @r5, align 4
  %v3_12188 = call i32 @function_124c0(i32 %v0_12178, i32 ptrtoint (i32* @global_var_18a98.704 to i32), i32 %v0_12180)
  %v0_12190 = load i32, i32* @r6, align 4
  store i32 %v0_12190, i32* @r0, align 4
  %v0_12194 = load i32, i32* @r7, align 4
  %v1_12194 = trunc i32 %v0_12194 to i16
  %v2_12194 = load i32, i32* @r4, align 4
  %v4_12194 = add i32 %v2_12194, 372
  %v5_12194 = inttoptr i32 %v4_12194 to i16*
  store i16 %v1_12194, i16* %v5_12194, align 2
  %v0_12198 = load i32, i32* @r5, align 4
  store i32 %v0_12198, i32* @global_var_2364c.705, align 4
  %v0_1219c = call i32 @function_13b0c()
  %v0_121a0 = load i32, i32* @r6, align 4
  store i32 %v0_1219c, i32* @r5, align 4
  %v3_121ac = call i32 @function_124c0(i32 %v0_1219c, i32 ptrtoint (i32* @global_var_18b44.707 to i32), i32 %v0_121a0)
  store i32 18, i32* @r0, align 4
  %v0_121b8 = load i32, i32* @r6, align 4
  %v1_121b8 = trunc i32 %v0_121b8 to i16
  %v2_121b8 = load i32, i32* @r4, align 4
  %v4_121b8 = add i32 %v2_121b8, 380
  %v5_121b8 = inttoptr i32 %v4_121b8 to i16*
  store i16 %v1_121b8, i16* %v5_121b8, align 2
  %v0_121bc = load i32, i32* @r5, align 4
  store i32 %v0_121bc, i32* @global_var_23654.708, align 4
  %v0_121c0 = call i32 @function_13b0c()
  store i32 %v0_121c0, i32* @r5, align 4
  %v3_121d0 = call i32 @function_124c0(i32 %v0_121c0, i32 ptrtoint (i32* @global_var_18b54.710 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_121e0 = load i32, i32* @r4, align 4
  %v4_121e0 = add i32 %v2_121e0, 388
  %v5_121e0 = inttoptr i32 %v4_121e0 to i16*
  store i16 18, i16* %v5_121e0, align 2
  %v0_121e4 = load i32, i32* @r5, align 4
  store i32 %v0_121e4, i32* @global_var_2365c.711, align 4
  %v0_121e8 = call i32 @function_13b0c()
  store i32 %v0_121e8, i32* %r5.global-to-local, align 4
  %v3_121f8 = call i32 @function_124c0(i32 %v0_121e8, i32 ptrtoint (i32* @global_var_18b68.713 to i32), i32 25)
  store i32 115, i32* @r0, align 4
  %v2_12208 = load i32, i32* @r4, align 4
  %v4_12208 = add i32 %v2_12208, 396
  %v5_12208 = inttoptr i32 %v4_12208 to i16*
  store i16 25, i16* %v5_12208, align 2
  %v0_1220c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1220c, i32* @global_var_23664.714, align 4
  %v0_12210 = load i32, i32* @r0, align 4
  store i32 %v0_12210, i32* @r5, align 4
  %v0_12214 = call i32 @function_13b0c()
  %v0_12218 = load i32, i32* @r5, align 4
  store i32 %v0_12214, i32* @r6, align 4
  %v3_12224 = call i32 @function_124c0(i32 %v0_12214, i32 ptrtoint (i32* @global_var_18b84.716 to i32), i32 %v0_12218)
  %v0_1222c = load i32, i32* @r5, align 4
  store i32 %v0_1222c, i32* @r0, align 4
  %v1_12230 = trunc i32 %v0_1222c to i16
  %v2_12230 = load i32, i32* @r4, align 4
  %v4_12230 = add i32 %v2_12230, 404
  %v5_12230 = inttoptr i32 %v4_12230 to i16*
  store i16 %v1_12230, i16* %v5_12230, align 2
  %v0_12234 = load i32, i32* @r6, align 4
  store i32 %v0_12234, i32* @global_var_2366c.717, align 4
  %v0_12238 = call i32 @function_13b0c()
  %v0_1223c = load i32, i32* @r5, align 4
  store i32 %v0_12238, i32* @r6, align 4
  %v3_12248 = call i32 @function_124c0(i32 %v0_12238, i32 ptrtoint (i32* @global_var_18bf8.719 to i32), i32 %v0_1223c)
  store i32 79, i32* @r0, align 4
  %v0_12254 = load i32, i32* @r5, align 4
  %v1_12254 = trunc i32 %v0_12254 to i16
  %v2_12254 = load i32, i32* @r4, align 4
  %v4_12254 = add i32 %v2_12254, 412
  %v5_12254 = inttoptr i32 %v4_12254 to i16*
  store i16 %v1_12254, i16* %v5_12254, align 2
  %v0_12258 = load i32, i32* @r6, align 4
  store i32 %v0_12258, i32* @global_var_23674.720, align 4
  %v0_1225c = call i32 @function_13b0c()
  store i32 %v0_1225c, i32* %r5.global-to-local, align 4
  %v3_1226c = call i32 @function_124c0(i32 %v0_1225c, i32 ptrtoint (i32* @global_var_18c6c.722 to i32), i32 79)
  store i32 114, i32* @r0, align 4
  %v2_1227c = load i32, i32* @r4, align 4
  %v4_1227c = add i32 %v2_1227c, 420
  %v5_1227c = inttoptr i32 %v4_1227c to i16*
  store i16 79, i16* %v5_1227c, align 2
  %v0_12280 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12280, i32* @global_var_2367c.723, align 4
  %v0_12284 = load i32, i32* @r0, align 4
  store i32 %v0_12284, i32* @r5, align 4
  %v0_12288 = call i32 @function_13b0c()
  %v0_1228c = load i32, i32* @r5, align 4
  store i32 %v0_12288, i32* @r6, align 4
  %v3_12298 = call i32 @function_124c0(i32 %v0_12288, i32 ptrtoint (i32* @global_var_18cbc.725 to i32), i32 %v0_1228c)
  %v0_122a0 = load i32, i32* @r5, align 4
  store i32 %v0_122a0, i32* @r0, align 4
  %v1_122a4 = trunc i32 %v0_122a0 to i16
  %v2_122a4 = load i32, i32* @r4, align 4
  %v4_122a4 = add i32 %v2_122a4, 428
  %v5_122a4 = inttoptr i32 %v4_122a4 to i16*
  store i16 %v1_122a4, i16* %v5_122a4, align 2
  %v0_122a8 = load i32, i32* @r6, align 4
  store i32 %v0_122a8, i32* @global_var_23684.726, align 4
  %v0_122ac = call i32 @function_13b0c()
  %v0_122b0 = load i32, i32* @r5, align 4
  store i32 %v0_122ac, i32* @r6, align 4
  %v3_122bc = call i32 @function_124c0(i32 %v0_122ac, i32 ptrtoint (i32* @global_var_18d30.728 to i32), i32 %v0_122b0)
  %v0_122c4 = load i32, i32* @r8, align 4
  store i32 %v0_122c4, i32* @r0, align 4
  %v0_122c8 = load i32, i32* @r5, align 4
  %v1_122c8 = trunc i32 %v0_122c8 to i16
  %v2_122c8 = load i32, i32* @r4, align 4
  %v4_122c8 = add i32 %v2_122c8, 436
  %v5_122c8 = inttoptr i32 %v4_122c8 to i16*
  store i16 %v1_122c8, i16* %v5_122c8, align 2
  %v0_122cc = load i32, i32* @r6, align 4
  store i32 %v0_122cc, i32* @global_var_2368c.729, align 4
  %v0_122d0 = call i32 @function_13b0c()
  %v0_122d8 = load i32, i32* @r8, align 4
  store i32 %v0_122d0, i32* @r5, align 4
  %v3_122e0 = call i32 @function_124c0(i32 %v0_122d0, i32 ptrtoint (i32* @global_var_18da4.731 to i32), i32 %v0_122d8)
  %v0_122e8 = load i32, i32* @fp, align 4
  store i32 %v0_122e8, i32* @r0, align 4
  %v0_122ec = load i32, i32* @r8, align 4
  %v1_122ec = trunc i32 %v0_122ec to i16
  %v2_122ec = load i32, i32* @r4, align 4
  %v4_122ec = add i32 %v2_122ec, 444
  %v5_122ec = inttoptr i32 %v4_122ec to i16*
  store i16 %v1_122ec, i16* %v5_122ec, align 2
  %v0_122f0 = load i32, i32* @r5, align 4
  store i32 %v0_122f0, i32* @global_var_23694.732, align 4
  %v0_122f4 = call i32 @function_13b0c()
  %v0_122fc = load i32, i32* @fp, align 4
  store i32 %v0_122f4, i32* @r5, align 4
  %v3_12304 = call i32 @function_124c0(i32 %v0_122f4, i32 ptrtoint (i32* @global_var_18988.608 to i32), i32 %v0_122fc)
  store i32 23, i32* @r0, align 4
  %v0_12310 = load i32, i32* @fp, align 4
  %v1_12310 = trunc i32 %v0_12310 to i16
  %v2_12310 = load i32, i32* @r4, align 4
  %v4_12310 = add i32 %v2_12310, 452
  %v5_12310 = inttoptr i32 %v4_12310 to i16*
  store i16 %v1_12310, i16* %v5_12310, align 2
  %v0_12314 = load i32, i32* @r5, align 4
  store i32 %v0_12314, i32* @global_var_2369c.733, align 4
  %v0_12318 = call i32 @function_13b0c()
  store i32 %v0_12318, i32* @r5, align 4
  %v3_12328 = call i32 @function_124c0(i32 %v0_12318, i32 ptrtoint (i32* @global_var_18dbc.735 to i32), i32 23)
  %v0_12334 = load i32, i32* @r7, align 4
  store i32 %v0_12334, i32* @r0, align 4
  %v2_12338 = load i32, i32* @r4, align 4
  %v4_12338 = add i32 %v2_12338, 460
  %v5_12338 = inttoptr i32 %v4_12338 to i16*
  store i16 23, i16* %v5_12338, align 2
  %v0_1233c = load i32, i32* @r5, align 4
  store i32 %v0_1233c, i32* @global_var_236a4.736, align 4
  %v0_12340 = call i32 @function_13b0c()
  %v0_12348 = load i32, i32* @r7, align 4
  store i32 %v0_12340, i32* %r5.global-to-local, align 4
  %v4_12350 = call i32 @function_124c0(i32 %v0_12340, i32 ptrtoint ([12 x i8]* @global_var_18dd4.738 to i32), i32 %v0_12348)
  %v0_12358 = load i32, i32* @r7, align 4
  %v1_12358 = trunc i32 %v0_12358 to i16
  %v2_12358 = load i32, i32* @r4, align 4
  %v4_12358 = add i32 %v2_12358, 468
  %v5_12358 = inttoptr i32 %v4_12358 to i16*
  store i16 %v1_12358, i16* %v5_12358, align 2
  %v0_1235c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1235c, i32* @global_var_236ac.739, align 4
  store i32 %v3_11b24, i32* @r4, align 4
  store i32 %v6_11b24, i32* @r5, align 4
  store i32 %v9_11b24, i32* @r6, align 4
  store i32 %v12_11b24, i32* @r7, align 4
  store i32 %v15_11b24, i32* @r8, align 4
  store i32 %v21_11b24, i32* @sl, align 4
  store i32 %v24_11b24, i32* @fp, align 4
  ret i32 %v4_12350

; uselistorder directives
  uselistorder i32 %v0_12340, { 1, 0 }
  uselistorder i32 %v0_122f4, { 1, 0 }
  uselistorder i32 %v0_122d0, { 1, 0 }
  uselistorder i32 %v0_122ac, { 1, 0 }
  uselistorder i32 %v0_12288, { 1, 0 }
  uselistorder i32 %v0_12238, { 1, 0 }
  uselistorder i32 %v0_12214, { 1, 0 }
  uselistorder i32 %v0_1219c, { 1, 0 }
  uselistorder i32 %v0_12178, { 1, 0 }
  uselistorder i32 %v0_12154, { 1, 0 }
  uselistorder i32 %v0_12130, { 1, 0 }
  uselistorder i32 %v0_120e4, { 1, 0 }
  uselistorder i32 %v0_12098, { 1, 0 }
  uselistorder i32 %v0_12070, { 1, 0 }
  uselistorder i32 %v0_11fa8, { 1, 0 }
  uselistorder i32 %v0_11f38, { 1, 0 }
  uselistorder i32 %v0_11ef4, { 1, 0 }
  uselistorder i32 %v0_11ed4, { 1, 0 }
  uselistorder i32 %v0_11e90, { 1, 0 }
  uselistorder i32 %v0_11e4c, { 1, 0 }
  uselistorder i32 %v0_11e2c, { 1, 0 }
  uselistorder i32 %v0_11e0c, { 1, 0 }
  uselistorder i32 %v0_11dc4, { 1, 0 }
  uselistorder i32 %v0_11d80, { 1, 0 }
  uselistorder i32 %v0_11d60, { 1, 0 }
  uselistorder i32 %v0_11d40, { 1, 0 }
  uselistorder i32 %v0_11cfc, { 1, 0 }
  uselistorder i32 %v0_11cd8, { 1, 0 }
  uselistorder i32 %v0_11cb8, { 1, 0 }
  uselistorder i32 %v0_11c74, { 1, 0 }
  uselistorder i32 %v0_11c50, { 1, 0 }
  uselistorder i32 %v0_11c2c, { 1, 0 }
  uselistorder i32 %v0_11c08, { 1, 0 }
  uselistorder i32 %v0_11b9c, { 1, 0 }
  uselistorder i32 %v0_11b78, { 1, 0 }
  uselistorder i32 %v0_11b58, { 1, 0 }
  uselistorder i32 %v0_11b30, { 1, 0 }
  uselistorder i16 10, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 21, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 29, { 0, 9, 1, 6, 2, 7, 3, 8, 10, 4, 5 }
  uselistorder i32 23, { 0, 11, 1, 12, 2, 13, 3, 14, 4, 8, 5, 9, 6, 10, 7, 15 }
  uselistorder i32 (i32, i32, i32)* @function_124c0, { 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 53, 52, 51, 50, 49, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_234dc.533 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_12450(i8* %arg1) local_unnamed_addr {
dec_label_pc_12450:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12454 = load i8, i8* %arg1, align 1
  %v2_12458 = icmp eq i8 %v3_12454, 0
  %v0_1245c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12458, i32 %v0_1245c)
  br label %dec_label_pc_12464

dec_label_pc_12464:                               ; preds = %dec_label_pc_12464, %dec_label_pc_12450
  %v0_12464 = phi i32 [ %v1_12464, %dec_label_pc_12464 ], [ 0, %dec_label_pc_12450 ]
  %v1_12464 = add i32 %v0_12464, 1
  %v2_12468 = add i32 %v1_12464, %tmp
  %v3_12468 = inttoptr i32 %v2_12468 to i8*
  %v4_12468 = load i8, i8* %v3_12468, align 1
  %v6_12468 = zext i8 %v4_12468 to i32
  store i32 %v6_12468, i32* @r3, align 4
  %v2_1246c = icmp eq i8 %v4_12468, 0
  br i1 %v2_1246c, label %dec_label_pc_12474, label %dec_label_pc_12464

dec_label_pc_12474:                               ; preds = %dec_label_pc_12464
  ret i32 %v1_12464
}

define i32 @function_12478(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12478:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12478 = load i8, i8* %arg1, align 1
  %v3_12478 = zext i8 %v2_12478 to i32
  %v2_1247c = icmp eq i8 %v2_12478, 0
  br i1 %v2_1247c, label %bb, label %dec_label_pc_12488

bb:                                               ; preds = %dec_label_pc_12478
  store i32 %v3_12478, i32* @ip, align 4
  br label %dec_label_pc_1249c

dec_label_pc_12488:                               ; preds = %dec_label_pc_12478
  br label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %dec_label_pc_1248c, %dec_label_pc_12488
  %v0_1248c = phi i32 [ %v1_1248c, %dec_label_pc_1248c ], [ 0, %dec_label_pc_12488 ]
  %v1_1248c = add i32 %v0_1248c, 1
  store i32 %v1_1248c, i32* @ip, align 4
  %v2_12490 = add i32 %v1_1248c, %tmp
  %v3_12490 = inttoptr i32 %v2_12490 to i8*
  %v4_12490 = load i8, i8* %v3_12490, align 1
  %v2_12494 = icmp eq i8 %v4_12490, 0
  br i1 %v2_12494, label %dec_label_pc_1249c, label %dec_label_pc_1248c

dec_label_pc_1249c:                               ; preds = %dec_label_pc_1248c, %bb
  %v0_1249c = phi i32 [ %v3_12478, %bb ], [ %v1_1248c, %dec_label_pc_1248c ]
  br label %dec_label_pc_124a8

dec_label_pc_124a4:                               ; preds = %dec_label_pc_124a8
  %v0_124a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_124a4 = add i32 %v0_124a4, 1
  %v2_124a4 = inttoptr i32 %v1_124a4 to i8*
  %v3_124a4 = load i8, i8* %v2_124a4, align 1
  store i32 %v1_124a4, i32* %r1.global-to-local, align 4
  %v0_124a8.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_124a8

dec_label_pc_124a8:                               ; preds = %dec_label_pc_1249c, %dec_label_pc_124a4
  %v0_124b0.off0 = phi i8 [ %v2_12478, %dec_label_pc_1249c ], [ %v3_124a4, %dec_label_pc_124a4 ]
  %v0_124a8 = phi i32 [ %v0_1249c, %dec_label_pc_1249c ], [ %v0_124a8.pr, %dec_label_pc_124a4 ]
  %v1_124a8 = add i32 %v0_124a8, -1
  store i32 %v1_124a8, i32* @r3, align 4
  %v3_124ac = icmp eq i32 %v0_124a8, 0
  %v2_124b0 = load i32, i32* @r0, align 4
  %v3_124b0 = inttoptr i32 %v2_124b0 to i8*
  store i8 %v0_124b0.off0, i8* %v3_124b0, align 1
  %v4_124b0 = load i32, i32* @r0, align 4
  %v5_124b0 = add i32 %v4_124b0, 1
  store i32 %v5_124b0, i32* @r0, align 4
  br i1 %v3_124ac, label %dec_label_pc_124b8, label %dec_label_pc_124a4

dec_label_pc_124b8:                               ; preds = %dec_label_pc_124a8
  %v0_124b8 = load i32, i32* @ip, align 4
  ret i32 %v0_124b8

; uselistorder directives
  uselistorder i32 %v0_124a8, { 1, 0 }
  uselistorder i32 %v1_1248c, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_124a8, { 1, 0 }
}

define i32 @function_124c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_124c0:
  %ip.global-to-local = alloca i32, align 4
  %v2_124c0 = icmp eq i32 %arg3, 0
  %v0_124c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_124c0, i32 %v0_124c4)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_124cc

dec_label_pc_124cc:                               ; preds = %dec_label_pc_124cc, %dec_label_pc_124c0
  %v0_124cc = phi i32 [ %v1_124d4, %dec_label_pc_124cc ], [ 0, %dec_label_pc_124c0 ]
  %v2_124cc = add i32 %v0_124cc, %arg2
  %v3_124cc = inttoptr i32 %v2_124cc to i8*
  %v4_124cc = load i8, i8* %v3_124cc, align 1
  %v4_124d0 = add i32 %v0_124cc, %arg1
  %v5_124d0 = inttoptr i32 %v4_124d0 to i8*
  store i8 %v4_124cc, i8* %v5_124d0, align 1
  %v0_124d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_124d4 = add i32 %v0_124d4, 1
  store i32 %v1_124d4, i32* %ip.global-to-local, align 4
  %v9_124d8 = icmp eq i32 %v1_124d4, %arg3
  br i1 %v9_124d8, label %dec_label_pc_124e0, label %dec_label_pc_124cc

dec_label_pc_124e0:                               ; preds = %dec_label_pc_124cc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_124d4, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_124e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124e4:
  %r2.global-to-local = alloca i32, align 4
  %v2_124e4 = icmp eq i32 %arg2, 0
  %v0_124e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_124e4, i32 %v0_124e8)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124f0

dec_label_pc_124f0:                               ; preds = %dec_label_pc_124f0, %dec_label_pc_124e4
  %v2_124f4 = phi i32 [ %v1_124f8, %dec_label_pc_124f0 ], [ 0, %dec_label_pc_124e4 ]
  store i32 0, i32* @r3, align 4
  %v4_124f4 = add i32 %v2_124f4, %arg1
  %v5_124f4 = inttoptr i32 %v4_124f4 to i8*
  store i8 0, i8* %v5_124f4, align 1
  %v0_124f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_124f8 = add i32 %v0_124f8, 1
  store i32 %v1_124f8, i32* %r2.global-to-local, align 4
  %v9_124fc = icmp eq i32 %v1_124f8, %arg2
  br i1 %v9_124fc, label %dec_label_pc_12504, label %dec_label_pc_124f0

dec_label_pc_12504:                               ; preds = %dec_label_pc_124f0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_124f8, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12508(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12508:
  %v7_1251c = icmp sgt i32 %arg4, %arg2
  br i1 %v7_1251c, label %dec_label_pc_12524, label %dec_label_pc_1252c

dec_label_pc_12524:                               ; preds = %dec_label_pc_12540, %dec_label_pc_1252c, %dec_label_pc_12508, %dec_label_pc_1256c
  %storemerge = phi i32 [ %v1_1256c, %dec_label_pc_1256c ], [ -1, %dec_label_pc_12508 ], [ -1, %dec_label_pc_1252c ], [ -1, %dec_label_pc_12540 ]
  ret i32 %storemerge

dec_label_pc_1252c:                               ; preds = %dec_label_pc_12508
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12524, label %dec_label_pc_12534

dec_label_pc_12534:                               ; preds = %dec_label_pc_1252c
  br label %dec_label_pc_1254c

dec_label_pc_12540:                               ; preds = %bb, %dec_label_pc_12560
  %v1_1254c3 = phi i32 [ %v1_12560, %dec_label_pc_12560 ], [ 0, %bb ]
  %v1_12540 = add i32 %v0_1256c, 1
  %v9_12544 = icmp eq i32 %v1_12540, %arg2
  br i1 %v9_12544, label %dec_label_pc_12524, label %dec_label_pc_1254c

dec_label_pc_1254c:                               ; preds = %dec_label_pc_12540, %dec_label_pc_12534
  %v0_1256c = phi i32 [ %v1_12540, %dec_label_pc_12540 ], [ 0, %dec_label_pc_12534 ]
  %v1_1254c = phi i32 [ %v1_1254c3, %dec_label_pc_12540 ], [ 0, %dec_label_pc_12534 ]
  %v2_1254c = add i32 %v1_1254c, %arg3
  %v3_1254c = inttoptr i32 %v2_1254c to i8*
  %v4_1254c = load i8, i8* %v3_1254c, align 1
  %v2_12550 = add i32 %v0_1256c, %arg1
  %v3_12550 = inttoptr i32 %v2_12550 to i8*
  %v4_12550 = load i8, i8* %v3_12550, align 1
  %v9_12554 = icmp eq i8 %v4_12550, %v4_1254c
  br i1 %v9_12554, label %dec_label_pc_12560, label %bb

bb:                                               ; preds = %dec_label_pc_1254c
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12540

dec_label_pc_12560:                               ; preds = %dec_label_pc_1254c
  %v1_12560 = add i32 %v1_1254c, 1
  store i32 %v1_12560, i32* @ip, align 4
  %v9_12564 = icmp eq i32 %v1_12560, %arg4
  br i1 %v9_12564, label %dec_label_pc_1256c, label %dec_label_pc_12540

dec_label_pc_1256c:                               ; preds = %dec_label_pc_12560
  %v1_1256c = add i32 %v0_1256c, 1
  br label %dec_label_pc_12524

; uselistorder directives
  uselistorder i32 %v1_12560, { 1, 2, 0 }
  uselistorder i32 %v1_1254c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12540, { 1, 0 }
  uselistorder label %dec_label_pc_12524, { 3, 0, 1, 2 }
}

define i32 @function_12574(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12574:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12574 = load i32, i32* @r4, align 4
  %v12_12574 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12584

dec_label_pc_12584:                               ; preds = %.thread, %dec_label_pc_12598, %bb, %dec_label_pc_12574
  %v0_12584 = phi i32 [ %tmp, %dec_label_pc_12574 ], [ %v5_12584, %bb ], [ %v5_12584, %dec_label_pc_12598 ], [ %v5_12584, %.thread ]
  %v1_12584 = inttoptr i32 %v0_12584 to i8*
  %v2_12584 = load i8, i8* %v1_12584, align 1
  %v5_12584 = add i32 %v0_12584, 1
  store i32 %v5_12584, i32* %r5.global-to-local, align 4
  %v7_12588 = icmp eq i8 %v2_12584, 9
  br i1 %v7_12588, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12584
  br label %dec_label_pc_12584

bb:                                               ; preds = %dec_label_pc_12584
  %v3_12584 = zext i8 %v2_12584 to i32
  %v8_1258c = icmp eq i8 %v2_12584, 32
  store i32 %v3_12584, i32* @r4, align 4
  br i1 %v8_1258c, label %dec_label_pc_12584, label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %bb
  %v7_12598 = icmp eq i8 %v2_12584, 10
  br i1 %v7_12598, label %dec_label_pc_12584, label %dec_label_pc_125a0

dec_label_pc_125a0:                               ; preds = %dec_label_pc_12598
  %v7_125a0 = icmp eq i8 %v2_12584, 45
  br i1 %v7_125a0, label %dec_label_pc_12690, label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_125a0
  %v7_125a8 = icmp eq i8 %v2_12584, 43
  br i1 %v7_125a8, label %bb44, label %dec_label_pc_125b8

bb44:                                             ; preds = %dec_label_pc_125a8
  %v2_125ac = inttoptr i32 %v5_12584 to i8*
  %v3_125ac = load i8, i8* %v2_125ac, align 1
  %v4_125ac = zext i8 %v3_125ac to i32
  store i32 %v4_125ac, i32* @r4, align 4
  %v6_125ac = add i32 %v0_12584, 2
  store i32 %v6_125ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %bb44, %dec_label_pc_125a8, %dec_label_pc_12690
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_12690 ], [ 2147483647, %dec_label_pc_125a8 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_12690 ], [ 0, %dec_label_pc_125a8 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_125c0 = call i32 @function_12b3c(i32 %storemerge1, i32 %arg2)
  %v0_125c4 = load i32, i32* @r7, align 4
  store i32 %v0_125c4, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_125cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_125cc, i32* @r1, align 4
  %v0_125d0 = call i32 @function_12a40()
  store i32 0, i32* @ip, align 4
  %v0_125e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_125e0.outer

dec_label_pc_125e0.outer:                         ; preds = %.thread5, %dec_label_pc_125b8
  %v2_1265c.ph = phi i32 [ %v5_1265c, %.thread5 ], [ 0, %dec_label_pc_125b8 ]
  %v1_12620.ph = phi i32 [ %v4_12660, %.thread5 ], [ %v0_125e0.pre, %dec_label_pc_125b8 ]
  %v1_12638.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_125b8 ]
  %v3_1262c = icmp uge i32 %v2_1265c.ph, %v0_125d0
  %v9_1262c = icmp eq i32 %v2_1265c.ph, %v0_125d0
  %v2_12630 = xor i1 %v3_1262c, true
  %v3_12630 = or i1 %v9_1262c, %v2_12630
  %v2_12634 = xor i1 %v9_1262c, true
  %v3_12634 = and i1 %v3_1262c, %v2_12634
  %v2_12654 = icmp eq i1 %v9_1262c, false
  br label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125e0.outer, %dec_label_pc_12668
  %v1_12638 = phi i32 [ -1, %dec_label_pc_12668 ], [ %v1_12638.ph, %dec_label_pc_125e0.outer ]
  %v1_12620 = phi i32 [ %v3_12668, %dec_label_pc_12668 ], [ %v1_12620.ph, %dec_label_pc_125e0.outer ]
  %v1_125e0 = urem i32 %v1_12620, 256
  %v1_125e4 = add nsw i32 %v1_125e0, -48
  %v1_125ec = add nsw i32 %v1_125e0, -97
  %v1_125f0 = add i32 %v1_12620, -48
  %v1_125f4 = add nsw i32 %v1_125e0, -65
  %tmp75 = icmp ult i32 %v1_125e4, 10
  br i1 %tmp75, label %dec_label_pc_12624, label %dec_label_pc_125fc

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125e0
  %v2_125fc = icmp ugt i32 %v1_125f4, 24
  %v7_125fc = icmp eq i32 %v1_125f4, 25
  %v2_12600 = xor i1 %v7_125fc, true
  %v3_12600 = and i1 %v2_125fc, %v2_12600
  br i1 %v3_12600, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_125fc
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_125fc, %bb45
  %v0_1261414 = phi i32 [ %v1_125f0, %dec_label_pc_125fc ], [ 0, %bb45 ]
  %v2_12604 = xor i1 %v2_125fc, true
  %v3_12604 = or i1 %v7_125fc, %v2_12604
  br i1 %v3_12604, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_12614 = phi i32 [ %v0_1261414, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_12600, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_1260c = icmp ugt i32 %v1_125ec, 24
  %v11_1260c = icmp eq i32 %v1_125ec, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_12610 = phi i1 [ %v7_125fc, %bb48 ], [ %v11_1260c, %bb49 ]
  %v0_12610 = phi i1 [ %v2_125fc, %bb48 ], [ %v6_1260c, %bb49 ]
  %v2_12610 = xor i1 %v1_12610, true
  %v3_12610 = and i1 %v0_12610, %v2_12610
  br i1 %v3_12610, label %dec_label_pc_12674, label %dec_label_pc_12614

dec_label_pc_12614:                               ; preds = %bb50
  %v2_12614 = icmp eq i32 %v0_12614, 0
  %. = select i1 %v2_12614, i32 87, i32 55
  %v2_12620 = sub i32 %v1_12620, %.
  br label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_125e0, %dec_label_pc_12614
  %v0_1263829 = phi i32 [ %v1_125f4, %dec_label_pc_125e0 ], [ %., %dec_label_pc_12614 ]
  %v3_1265c = phi i32 [ %v1_125f0, %dec_label_pc_125e0 ], [ %v2_12620, %dec_label_pc_12614 ]
  %v1_12624 = load i32, i32* %r6.global-to-local, align 4
  %v2_12624 = sub i32 %v3_1265c, %v1_12624
  %v4_12624 = xor i32 %v1_12624, %v3_1265c
  %v5_12624 = xor i32 %v2_12624, %v3_1265c
  %v6_12624 = and i32 %v5_12624, %v4_12624
  %v7_12624 = icmp slt i32 %v6_12624, 0
  %v8_12624 = icmp slt i32 %v2_12624, 0
  %v2_12628 = xor i1 %v8_12624, %v7_12624
  br i1 %v2_12628, label %dec_label_pc_1262c, label %dec_label_pc_12674

dec_label_pc_1262c:                               ; preds = %dec_label_pc_12624
  br i1 %v3_12630, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_1262c
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_1262c, %bb53
  %v0_1263828 = phi i32 [ %v0_1263829, %dec_label_pc_1262c ], [ 0, %bb53 ]
  br i1 %v3_12634, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_12638 = phi i32 [ %v0_1263828, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_12638, 0
  %v4_12638 = zext i1 %tmp76 to i32
  %v5_12638 = or i32 %v0_12638, %v4_12638
  %v7_12638 = icmp eq i32 %v5_12638, 0
  br i1 %v7_12638, label %dec_label_pc_12640, label %dec_label_pc_12668

dec_label_pc_12640:                               ; preds = %bb56
  %v1_1264c = load i32, i32* %r8.global-to-local, align 4
  %v2_1264c = sub i32 %v3_1265c, %v1_1264c
  %v4_1264c = xor i32 %v1_1264c, %v3_1265c
  %v5_1264c = xor i32 %v2_1264c, %v3_1265c
  %v6_1264c = and i32 %v5_1264c, %v4_1264c
  %v7_1264c = icmp slt i32 %v6_1264c, 0
  %v8_1264c = icmp slt i32 %v2_1264c, 0
  %v9_1264c = icmp eq i32 %v3_1265c, %v1_1264c
  %v3_12650 = xor i1 %v8_1264c, %v7_1264c
  %v4_12650 = or i1 %v9_1264c, %v3_12650
  br i1 %v4_12650, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12640
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12640
  store i32 1, i32* @ip, align 4
  br i1 %v2_12654, label %.thread5, label %dec_label_pc_12668

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_1265c = mul i32 %v1_12624, %v2_1265c.ph
  %v5_1265c = add i32 %v4_1265c, %v3_1265c
  %v1_12660 = load i32, i32* %r5.global-to-local, align 4
  %v2_12660 = inttoptr i32 %v1_12660 to i8*
  %v3_12660 = load i8, i8* %v2_12660, align 1
  %v4_12660 = zext i8 %v3_12660 to i32
  %v6_12660 = add i32 %v1_12660, 1
  store i32 %v6_12660, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_125e0.outer

dec_label_pc_12668:                               ; preds = %thread-pre-split, %bb56
  %v0_12668 = load i32, i32* %r5.global-to-local, align 4
  %v1_12668 = inttoptr i32 %v0_12668 to i8*
  %v2_12668 = load i8, i8* %v1_12668, align 1
  %v3_12668 = zext i8 %v2_12668 to i32
  %v5_12668 = add i32 %v0_12668, 1
  store i32 %v5_12668, i32* %r5.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_125e0

dec_label_pc_12674:                               ; preds = %dec_label_pc_12624, %bb50
  %v1_12674 = icmp slt i32 %v1_12638, 0
  %v0_126a0 = load i32, i32* %sl.global-to-local, align 4
  %v2_126a0 = icmp eq i32 %v0_126a0, 0
  br i1 %v1_12674, label %dec_label_pc_126a0, label %dec_label_pc_1267c

dec_label_pc_1267c:                               ; preds = %dec_label_pc_12674
  br i1 %v2_126a0, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_1267c
  %v2_12680 = sub i32 0, %v2_1265c.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_1267c, %bb59
  %v1_1268c = phi i32 [ -2147483648, %bb61 ], [ %v2_1265c.ph, %dec_label_pc_1267c ], [ %v2_12680, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_12574, i32* @r4, align 4
  store i32 %v12_12574, i32* @r7, align 4
  ret i32 %v1_1268c

dec_label_pc_12690:                               ; preds = %dec_label_pc_125a0
  %v1_12690 = inttoptr i32 %v5_12584 to i8*
  %v2_12690 = load i8, i8* %v1_12690, align 1
  %v3_12690 = zext i8 %v2_12690 to i32
  store i32 %v3_12690, i32* @r4, align 4
  %v5_12690 = add i32 %v0_12584, 2
  store i32 %v5_12690, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_125b8

dec_label_pc_126a0:                               ; preds = %dec_label_pc_12674
  br i1 %v2_126a0, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_126a0
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_126a0
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_126a0, { 1, 0 }
  uselistorder i32 %v2_1264c, { 1, 0 }
  uselistorder i32 %v1_1264c, { 1, 0, 2 }
  uselistorder i32 %v2_12624, { 1, 0 }
  uselistorder i32 %v3_1265c, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_125fc, { 1, 2, 0 }
  uselistorder i1 %v2_125fc, { 1, 0, 2 }
  uselistorder i32 %v1_125e0, { 1, 2, 0 }
  uselistorder i32 %v1_12620, { 1, 2, 0 }
  uselistorder i32 %v1_12638, { 1, 0 }
  uselistorder i1 %v9_1262c, { 1, 0, 2 }
  uselistorder i1 %v3_1262c, { 1, 0 }
  uselistorder i32 %v2_1265c.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_125d0, { 1, 0 }
  uselistorder i32 %v5_12584, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_12584, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_12584, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32 25, { 10, 11, 0, 9, 1, 6, 2, 7, 3, 8, 5, 4, 12 }
  uselistorder i8 32, { 2, 3, 4, 0, 5, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i8 9, { 5, 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_12624, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_125e0, { 1, 0 }
  uselistorder label %dec_label_pc_125b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12584, { 1, 2, 0, 3 }
}

define i32 @function_126b0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_126b0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_126b0 = load i32, i32* @r4, align 4
  store i32 %v3_126b0, i32* %stack_var_-24, align 4
  %v12_126b0 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %dec_label_pc_126ec.dec_label_pc_126c8_crit_edge, %dec_label_pc_126b0
  %v0_126cc = phi i32 [ %v0_126cc.pre, %dec_label_pc_126ec.dec_label_pc_126c8_crit_edge ], [ %arg3, %dec_label_pc_126b0 ]
  %v1_126d4 = call i32 @function_12e4c(i32 %v0_126cc)
  %v7_126d8 = icmp eq i32 %v1_126d4, 1
  %v0_126e0 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_126d8, label %dec_label_pc_126e0, label %dec_label_pc_126f8

dec_label_pc_126e0:                               ; preds = %dec_label_pc_126c8
  %v1_126e0 = add i32 %v0_126e0, 1
  store i32 %v1_126e0, i32* %r5.global-to-local, align 4
  %v1_126e4 = load i32, i32* %r8.global-to-local, align 4
  %v6_126e8 = icmp slt i32 %v1_126e0, %v1_126e4
  br i1 %v6_126e8, label %dec_label_pc_126ec, label %.loopexit

dec_label_pc_126ec:                               ; preds = %dec_label_pc_126e0
  %v0_126ec = load i32, i32* %r4.global-to-local, align 4
  %v1_126ec = inttoptr i32 %v0_126ec to i8*
  %v2_126ec = load i8, i8* %v1_126ec, align 1
  %v5_126ec = add i32 %v0_126ec, 1
  store i32 %v5_126ec, i32* %r4.global-to-local, align 4
  %v7_126f0 = icmp eq i8 %v2_126ec, 10
  br i1 %v7_126f0, label %dec_label_pc_126f8, label %dec_label_pc_126ec.dec_label_pc_126c8_crit_edge

dec_label_pc_126ec.dec_label_pc_126c8_crit_edge:  ; preds = %dec_label_pc_126ec
  %v0_126cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_126c8

dec_label_pc_126f8:                               ; preds = %dec_label_pc_126c8, %dec_label_pc_126ec
  %v0_126f8 = phi i32 [ %v1_126e0, %dec_label_pc_126ec ], [ %v0_126e0, %dec_label_pc_126c8 ]
  %v2_126f8 = icmp eq i32 %v0_126f8, 0
  br i1 %v2_126f8, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_126f8
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_126e0, %dec_label_pc_126f8, %bb
  %v0_12700 = load i32, i32* @r7, align 4
  %v2_12704 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12704, i32* @r4, align 4
  store i32 %v12_126b0, i32* @r7, align 4
  ret i32 %v0_12700

; uselistorder directives
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_126f8, { 1, 0 }
}

define i32 @function_1270c() local_unnamed_addr {
dec_label_pc_1270c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_1271c = call i32 @function_134dc()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_12724 = inttoptr i32 %v0_1271c to i32*
  store i32 0, i32* %v2_12724, align 4
  %v0_12730 = load i32, i32* %r4.global-to-local, align 4
  %v3_12734 = call i32 @function_138c4(i32 2, i32 2, i32 %v0_12730)
  %v7_12738 = icmp eq i32 %v3_12734, -1
  store i32 %v3_12734, i32* %r5.global-to-local, align 4
  br i1 %v7_12738, label %bb, label %dec_label_pc_12748

bb:                                               ; preds = %dec_label_pc_1270c
  %v1_12740 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12748:                               ; preds = %dec_label_pc_1270c
  %v2_12754 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12754, i32* %r4.global-to-local, align 4
  %v0_12760 = load i32, i32* %r6.global-to-local, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_12774 = call i32 @function_136ac(i32 %v3_12734, i32 %v2_12754, i32 %v0_12760)
  %v2_1277c = ptrtoint i32* %stack_var_-20 to i32
  %v0_12780 = load i32, i32* %r5.global-to-local, align 4
  %v3_12784 = call i32 @function_136e4(i32 %v0_12780, i32 %v2_12754, i32 %v2_1277c)
  %v1_1278c = call i32 @function_130b4(i32 %v0_12780)
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %bb, %dec_label_pc_12748
  %storemerge = phi i32 [ 134744072, %dec_label_pc_12748 ], [ %v1_12740, %bb ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_12734, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_136ac, { 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_138c4, { 17, 18, 15, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12794, { 1, 0 }
}

define i32 @function_127a0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_127a0:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_127a4 = load i8, i8* %tmp, align 1
  %v2_127a8 = icmp eq i8 %v3_127a4, 0
  br i1 %v2_127a8, label %bb, label %dec_label_pc_127bc

bb:                                               ; preds = %dec_label_pc_127a0
  %v4_127a4 = zext i8 %v3_127a4 to i32
  br label %dec_label_pc_127d0

dec_label_pc_127bc:                               ; preds = %dec_label_pc_127a0
  br label %dec_label_pc_127c0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_127c0, %dec_label_pc_127bc
  %v0_127c0 = phi i32 [ %v1_127c0, %dec_label_pc_127c0 ], [ 0, %dec_label_pc_127bc ]
  %v1_127c0 = add i32 %v0_127c0, 1
  %v2_127c4 = add i32 %v1_127c0, %arg2
  %v3_127c4 = inttoptr i32 %v2_127c4 to i8*
  %v4_127c4 = load i8, i8* %v3_127c4, align 1
  %v2_127c8 = icmp eq i8 %v4_127c4, 0
  br i1 %v2_127c8, label %dec_label_pc_127d0, label %dec_label_pc_127c0

dec_label_pc_127d0:                               ; preds = %dec_label_pc_127c0, %bb
  %v0_1281421 = phi i32 [ %v4_127a4, %bb ], [ %v1_127c0, %dec_label_pc_127c0 ]
  %v0_127d82 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_127d82, 1
  br i1 %tmp29, label %dec_label_pc_12828, label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_127d0, %dec_label_pc_127d8.backedge
  %v0_127dc.in = phi i32 [ %v0_127dc, %dec_label_pc_127d8.backedge ], [ %v0_127d82, %dec_label_pc_127d0 ]
  %v1_127f0 = phi i32 [ %v1_127f015, %dec_label_pc_127d8.backedge ], [ 0, %dec_label_pc_127d0 ]
  %v0_127e4 = phi i32 [ %v5_127e4, %dec_label_pc_127d8.backedge ], [ %tmp23, %dec_label_pc_127d0 ]
  %v0_127dc = add i32 %v0_127dc.in, -1
  %v1_127e4 = inttoptr i32 %v0_127e4 to i8*
  %v2_127e4 = load i8, i8* %v1_127e4, align 1
  %v3_127e4 = zext i8 %v2_127e4 to i32
  store i32 %v3_127e4, i32* @ip, align 4
  %v5_127e4 = add i32 %v0_127e4, 1
  %v1_127e8 = add nsw i32 %v3_127e4, -65
  %v2_127f0 = add i32 %v1_127f0, %arg2
  %v3_127f0 = inttoptr i32 %v2_127f0 to i8*
  %v4_127f0 = load i8, i8* %v3_127f0, align 1
  %v6_127f0 = zext i8 %v4_127f0 to i32
  %v1_127f4 = add nsw i32 %v6_127f0, -65
  %tmp38 = icmp ult i32 %v1_127e8, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_127e4
  %v5_127f8 = or i32 %v3_127e4, 96
  store i32 %v5_127f8, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_127e4, %bb30
  %v0_12804 = phi i32 [ %v3_127e4, %dec_label_pc_127e4 ], [ %v5_127f8, %bb30 ]
  %tmp39 = icmp ult i32 %v1_127f4, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_12800 = or i32 %v6_127f0, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_12804 = phi i32 [ %v6_127f0, %bb31 ], [ %v5_12800, %bb32 ]
  %v9_12804 = icmp eq i32 %v0_12804, %v1_12804
  br i1 %v9_12804, label %dec_label_pc_12810, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_127d8.backedge

dec_label_pc_127d8.backedge:                      ; preds = %bb34, %dec_label_pc_12810
  %v1_127f015 = phi i32 [ 0, %bb34 ], [ %v1_12810, %dec_label_pc_12810 ]
  %tmp35 = icmp slt i32 %v0_127dc, 1
  br i1 %tmp35, label %dec_label_pc_12828, label %dec_label_pc_127e4

dec_label_pc_12810:                               ; preds = %bb33
  %v1_12810 = add i32 %v1_127f0, 1
  %v9_12814 = icmp eq i32 %v0_1281421, %v1_12810
  br i1 %v9_12814, label %dec_label_pc_1281c, label %dec_label_pc_127d8.backedge

dec_label_pc_1281c:                               ; preds = %dec_label_pc_12810
  %v2_1281c = sub i32 %v5_127e4, %tmp23
  br label %dec_label_pc_12828

dec_label_pc_12828:                               ; preds = %dec_label_pc_127d8.backedge, %dec_label_pc_127d0, %dec_label_pc_1281c
  %storemerge = phi i32 [ %v2_1281c, %dec_label_pc_1281c ], [ -1, %dec_label_pc_127d0 ], [ -1, %dec_label_pc_127d8.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_12810, { 1, 0 }
  uselistorder i32 %v0_127e4, { 1, 0 }
  uselistorder i32 %v1_127f0, { 1, 0 }
  uselistorder i8 %v3_127a4, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_12828, { 2, 0, 1 }
  uselistorder label %dec_label_pc_127d8.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_127e4, { 1, 0 }
}

define i32 @function_12830(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12830:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12830 = load i8, i8* %arg1, align 1
  %v2_12834 = icmp eq i8 %v2_12830, 0
  br i1 %v2_12834, label %bb, label %dec_label_pc_12840

bb:                                               ; preds = %dec_label_pc_12830
  %v3_12830 = zext i8 %v2_12830 to i32
  br label %dec_label_pc_12854

dec_label_pc_12840:                               ; preds = %dec_label_pc_12830
  br label %dec_label_pc_12844

dec_label_pc_12844:                               ; preds = %dec_label_pc_12844, %dec_label_pc_12840
  %v0_12844 = phi i32 [ %v1_12844, %dec_label_pc_12844 ], [ 0, %dec_label_pc_12840 ]
  %v1_12844 = add i32 %v0_12844, 1
  %v2_12848 = add i32 %v1_12844, %tmp
  %v3_12848 = inttoptr i32 %v2_12848 to i8*
  %v4_12848 = load i8, i8* %v3_12848, align 1
  %v2_1284c = icmp eq i8 %v4_12848, 0
  br i1 %v2_1284c, label %dec_label_pc_12854, label %dec_label_pc_12844

dec_label_pc_12854:                               ; preds = %dec_label_pc_12844, %bb
  %v0_128a03 = phi i32 [ %v3_12830, %bb ], [ %v1_12844, %dec_label_pc_12844 ]
  %v1_12854 = inttoptr i32 %arg2 to i8*
  %v2_12854 = load i8, i8* %v1_12854, align 1
  %v2_12858 = icmp eq i8 %v2_12854, 0
  br i1 %v2_12858, label %bb21, label %dec_label_pc_12864

bb21:                                             ; preds = %dec_label_pc_12854
  %v3_12854 = zext i8 %v2_12854 to i32
  br label %dec_label_pc_12878

dec_label_pc_12864:                               ; preds = %dec_label_pc_12854
  br label %dec_label_pc_12868

dec_label_pc_12868:                               ; preds = %dec_label_pc_12868, %dec_label_pc_12864
  %v0_12868 = phi i32 [ %v1_12868, %dec_label_pc_12868 ], [ 0, %dec_label_pc_12864 ]
  %v1_12868 = add i32 %v0_12868, 1
  %v2_1286c = add i32 %v1_12868, %arg2
  %v3_1286c = inttoptr i32 %v2_1286c to i8*
  %v4_1286c = load i8, i8* %v3_1286c, align 1
  %v2_12870 = icmp eq i8 %v4_1286c, 0
  br i1 %v2_12870, label %dec_label_pc_12878, label %dec_label_pc_12868

dec_label_pc_12878:                               ; preds = %dec_label_pc_12868, %bb21
  %v0_12878 = phi i32 [ %v3_12854, %bb21 ], [ %v1_12868, %dec_label_pc_12868 ]
  %v9_12878 = icmp eq i32 %v0_12878, %v0_128a03
  br i1 %v9_12878, label %dec_label_pc_128a0.preheader, label %dec_label_pc_12880

dec_label_pc_128a0.preheader:                     ; preds = %dec_label_pc_12878
  %v2_128a05 = icmp eq i32 %v0_128a03, 0
  br i1 %v2_128a05, label %dec_label_pc_128a8, label %dec_label_pc_12888

dec_label_pc_12880:                               ; preds = %dec_label_pc_12888, %dec_label_pc_12878
  ret i32 0

dec_label_pc_12888:                               ; preds = %dec_label_pc_12898, %dec_label_pc_128a0.preheader
  %v0_128a0.in = phi i32 [ %v0_128a0, %dec_label_pc_12898 ], [ %v0_128a03, %dec_label_pc_128a0.preheader ]
  %v0_1289c = phi i32 [ %v1_1289c, %dec_label_pc_12898 ], [ %arg2, %dec_label_pc_128a0.preheader ]
  %v0_12898 = phi i32 [ %v1_12898, %dec_label_pc_12898 ], [ %tmp, %dec_label_pc_128a0.preheader ]
  %v0_128a0 = add i32 %v0_128a0.in, -1
  %v1_12888 = inttoptr i32 %v0_12898 to i8*
  %v2_12888 = load i8, i8* %v1_12888, align 1
  %v1_1288c = inttoptr i32 %v0_1289c to i8*
  %v2_1288c = load i8, i8* %v1_1288c, align 1
  %v9_12890 = icmp eq i8 %v2_12888, %v2_1288c
  br i1 %v9_12890, label %dec_label_pc_12898, label %dec_label_pc_12880

dec_label_pc_12898:                               ; preds = %dec_label_pc_12888
  %v1_12898 = add i32 %v0_12898, 1
  %v1_1289c = add i32 %v0_1289c, 1
  %v2_128a0 = icmp eq i32 %v0_128a0, 0
  br i1 %v2_128a0, label %dec_label_pc_128a8, label %dec_label_pc_12888

dec_label_pc_128a8:                               ; preds = %dec_label_pc_12898, %dec_label_pc_128a0.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_12854, { 1, 0 }
  uselistorder i8 %v2_12830, { 1, 0 }
}

define i32 @function_128b0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_128b0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_128b4 = load i8, i8* %arg1, align 1
  %v2_128b8 = icmp eq i8 %v2_128b4, 0
  %v0_128bc = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_128b8, label %bb, label %dec_label_pc_128c8

bb:                                               ; preds = %dec_label_pc_128b0
  %v3_128b4 = zext i8 %v2_128b4 to i32
  br label %dec_label_pc_128dc

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128b0
  br label %dec_label_pc_128cc

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128cc, %dec_label_pc_128c8
  %v0_128cc = phi i32 [ %v1_128cc, %dec_label_pc_128cc ], [ 0, %dec_label_pc_128c8 ]
  %v1_128cc = add i32 %v0_128cc, 1
  %v2_128d0 = add i32 %v1_128cc, %tmp
  %v3_128d0 = inttoptr i32 %v2_128d0 to i8*
  %v4_128d0 = load i8, i8* %v3_128d0, align 1
  %v2_128d4 = icmp eq i8 %v4_128d0, 0
  br i1 %v2_128d4, label %dec_label_pc_128dc, label %dec_label_pc_128cc

dec_label_pc_128dc:                               ; preds = %dec_label_pc_128cc, %bb
  %v6_12904 = phi i32 [ %v3_128b4, %bb ], [ %v1_128cc, %dec_label_pc_128cc ]
  %v0_128dc = load i32, i32* %r1.global-to-local, align 4
  %v1_128dc = inttoptr i32 %v0_128dc to i8*
  %v2_128dc = load i8, i8* %v1_128dc, align 1
  %v3_128dc = zext i8 %v2_128dc to i32
  %v2_128e0 = icmp eq i8 %v2_128dc, 0
  br i1 %v2_128e0, label %bb26, label %dec_label_pc_128ec

bb26:                                             ; preds = %dec_label_pc_128dc
  store i32 %v3_128dc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12900

dec_label_pc_128ec:                               ; preds = %dec_label_pc_128dc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_128f0

dec_label_pc_128f0:                               ; preds = %dec_label_pc_128f0, %dec_label_pc_128ec
  %v0_128f0 = phi i32 [ %v1_128f0, %dec_label_pc_128f0 ], [ 0, %dec_label_pc_128ec ]
  %v1_128f0 = add i32 %v0_128f0, 1
  store i32 %v1_128f0, i32* %r2.global-to-local, align 4
  %v2_128f4 = add i32 %v1_128f0, %v0_128dc
  %v3_128f4 = inttoptr i32 %v2_128f4 to i8*
  %v4_128f4 = load i8, i8* %v3_128f4, align 1
  %v2_128f8 = icmp eq i8 %v4_128f4, 0
  br i1 %v2_128f8, label %dec_label_pc_12900, label %dec_label_pc_128f0

dec_label_pc_12900:                               ; preds = %dec_label_pc_128f0, %bb26
  %v0_12900 = phi i32 [ %v3_128dc, %bb26 ], [ %v1_128f0, %dec_label_pc_128f0 ]
  %v2_12900 = sub i32 %v0_12900, %v0_128bc
  %v4_12900 = xor i32 %v0_12900, %v0_128bc
  %v5_12900 = xor i32 %v2_12900, %v0_12900
  %v6_12900 = and i32 %v5_12900, %v4_12900
  %v5_12904 = icmp slt i32 %v0_12900, %v0_128bc
  br i1 %v5_12904, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_12900
  %v8_12904 = sub i32 %v6_12904, %v0_128bc
  %v10_12904 = xor i32 %v6_12904, %v0_128bc
  %v11_12904 = xor i32 %v8_12904, %v6_12904
  %v12_12904 = and i32 %v11_12904, %v10_12904
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_12900, %bb27
  %v1_12908.in = phi i32 [ %v6_12900, %dec_label_pc_12900 ], [ %v12_12904, %bb27 ]
  %v0_12908.in = phi i32 [ %v2_12900, %dec_label_pc_12900 ], [ %v8_12904, %bb27 ]
  %v0_12908 = icmp slt i32 %v0_12908.in, 0
  %v1_12908 = icmp slt i32 %v1_12908.in, 0
  %v2_12908 = xor i1 %v1_12908, %v0_12908
  br i1 %v2_12908, label %dec_label_pc_12934, label %dec_label_pc_12918.preheader

dec_label_pc_12918.preheader:                     ; preds = %bb28
  %v2_129185 = icmp eq i32 %v0_128bc, 0
  br i1 %v2_129185, label %dec_label_pc_12934, label %dec_label_pc_12920

dec_label_pc_12910:                               ; preds = %dec_label_pc_12920
  %v1_12910 = add i32 %v0_12910, 1
  %v1_12914 = add i32 %v0_12914, 1
  store i32 %v1_12914, i32* %r1.global-to-local, align 4
  %v2_12918 = icmp eq i32 %v0_12918, 0
  br i1 %v2_12918, label %dec_label_pc_12934, label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %dec_label_pc_12910, %dec_label_pc_12918.preheader
  %v0_12918.in = phi i32 [ %v0_12918, %dec_label_pc_12910 ], [ %v0_128bc, %dec_label_pc_12918.preheader ]
  %v0_12914 = phi i32 [ %v1_12914, %dec_label_pc_12910 ], [ %v0_128dc, %dec_label_pc_12918.preheader ]
  %v0_12910 = phi i32 [ %v1_12910, %dec_label_pc_12910 ], [ %tmp, %dec_label_pc_12918.preheader ]
  %v0_12918 = add i32 %v0_12918.in, -1
  %v1_12920 = inttoptr i32 %v0_12910 to i8*
  %v2_12920 = load i8, i8* %v1_12920, align 1
  %v3_12920 = zext i8 %v2_12920 to i32
  store i32 %v3_12920, i32* %r2.global-to-local, align 4
  %v1_12924 = inttoptr i32 %v0_12914 to i8*
  %v2_12924 = load i8, i8* %v1_12924, align 1
  %v9_12928 = icmp eq i8 %v2_12920, %v2_12924
  br i1 %v9_12928, label %dec_label_pc_12910, label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %dec_label_pc_12910, %dec_label_pc_12918.preheader, %dec_label_pc_12920, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_12918.preheader ], [ 1, %dec_label_pc_12910 ], [ 0, %dec_label_pc_12920 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_12910, { 1, 0 }
  uselistorder i32 %v0_12914, { 1, 0 }
  uselistorder i32 %v0_12900, { 3, 0, 1, 2 }
  uselistorder i32 %v1_128f0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_128bc, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_128b4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12934, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_12944(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12944:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_12944 = load i32, i32* @r4, align 4
  %v12_12944 = load i32, i32* @r7, align 4
  %v0_12948 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12948, i32* %r8.global-to-local, align 4
  %v2_12948 = icmp eq i32 %v0_12948, 0
  store i1 %v2_12948, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_12948, label %dec_label_pc_12a28, label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_12944
  %v3_12958 = icmp eq i8 %arg1, 0
  store i1 %v3_12958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12958, label %.thread, label %dec_label_pc_1296c

.thread:                                          ; preds = %dec_label_pc_12958
  %v4_12960 = inttoptr i32 %v0_12948 to i8*
  store i8 48, i8* %v4_12960, align 1
  %v0_12964.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12964.pr.pr, label %.thread1, label %dec_label_pc_1296c

.thread1:                                         ; preds = %.thread
  %v4_12964 = load i32, i32* %r8.global-to-local, align 4
  %v5_12964 = add i32 %v4_12964, 1
  %v6_12964 = inttoptr i32 %v5_12964 to i8*
  store i8 0, i8* %v6_12964, align 1
  %v0_12968.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12968.pr.pr, label %dec_label_pc_12a28, label %dec_label_pc_1296c

dec_label_pc_1296c:                               ; preds = %dec_label_pc_12958, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_12970 = icmp eq i32 %arg2, 10
  store i1 %v7_12970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12970, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_1296c
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_1296c
  %v4_1296c = zext i1 %tmp47 to i32
  store i32 %v4_1296c, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_129908 = sub nsw i32 0, %tmp
  %tmp.v3_129908 = select i1 %phitmp, i32 %tmp, i32 %v3_129908
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_129908, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_1299c = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_1299c, i32* @r7, align 4
  br label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %bb45, %.thread6
  %v0_129a0 = phi i32 [ %v0_129c4, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_129a0, i32* %r0.global-to-local, align 4
  %v0_129a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_129a4, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_129a0, 16777216
  %v1_129a8 = sdiv i32 %sext, 16777216
  %v3_129a8 = call i32 @function_12b3c(i32 %v1_129a8, i32 %v0_129a4)
  %v7_129ac = icmp eq i32 %v0_129a4, 9
  store i1 %v7_129ac, i1* %cpsr_z.global-to-local, align 1
  %v1_129b0 = add i32 %v0_129a4, 48
  %v0_129b4 = load i32, i32* @r4, align 4
  store i32 %v0_129b4, i32* @r0, align 4
  %v7_129b8 = icmp sgt i32 %v0_129a4, 9
  %extract.t = trunc i32 %v1_129b0 to i8
  br i1 %v7_129b8, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_129a0
  %v9_129b8 = add i32 %v0_129a4, 55
  %extract.t27 = trunc i32 %v9_129b8 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_129a0, %bb44
  %v0_129c0.off0 = phi i8 [ %extract.t, %dec_label_pc_129a0 ], [ %extract.t27, %bb44 ]
  %v0_129bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_129bc, i32* @r1, align 4
  %v2_129c0 = load i32, i32* %r5.global-to-local, align 4
  %v3_129c0 = load i32, i32* @r7, align 4
  %v4_129c0 = add i32 %v3_129c0, %v2_129c0
  %v5_129c0 = inttoptr i32 %v4_129c0 to i8*
  store i8 %v0_129c0.off0, i8* %v5_129c0, align 1
  %v0_129c4 = call i32 @function_12a40()
  store i32 %v0_129c4, i32* %r0.global-to-local, align 4
  store i32 %v0_129c4, i32* @r4, align 4
  %v2_129c8 = icmp eq i32 %v0_129c4, 0
  store i1 %v2_129c8, i1* %cpsr_z.global-to-local, align 1
  %v0_129cc = load i32, i32* %r5.global-to-local, align 4
  %v1_129cc = add i32 %v0_129cc, -1
  store i32 %v1_129cc, i32* %r5.global-to-local, align 4
  br i1 %v2_129c8, label %dec_label_pc_129d4, label %dec_label_pc_129a0

dec_label_pc_129d4:                               ; preds = %bb45
  %v0_129d4 = load i32, i32* %sl.global-to-local, align 4
  %v2_129d4 = icmp eq i32 %v0_129d4, 0
  store i1 %v2_129d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129d4, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_129d4
  %v3_129d8 = ptrtoint i32* %stack_var_-32 to i32
  %v3_129dc = add i32 %v1_129cc, %v3_129d8
  store i32 %v3_129dc, i32* %r2.global-to-local, align 4
  %v4_129e4 = add i32 %v3_129dc, -34
  %v5_129e4 = inttoptr i32 %v4_129e4 to i8*
  store i8 45, i8* %v5_129e4, align 1
  %v0_129e8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_129e8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_129e8.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_129d4
  %v1_129e8 = phi i32 [ %v1_129cc, %dec_label_pc_129d4 ], [ %v1_129e8.pre, %.thread11 ]
  %v2_129e8 = add i32 %v1_129e8, 1
  store i32 %v2_129e8, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_129f4 = phi i32 [ %v2_129e8, %.thread12 ], [ %v1_129e8.pre, %.thread11 ]
  %v0_129ec = load i32, i32* @r7, align 4
  %v2_129ec = add i32 %v0_129ec, %v1_129f4
  %v3_129ec = inttoptr i32 %v2_129ec to i8*
  %v4_129ec = load i8, i8* %v3_129ec, align 1
  %v6_129ec = zext i8 %v4_129ec to i32
  %v2_129f0 = icmp eq i8 %v4_129ec, 0
  store i1 %v2_129f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_129ec, i32* %r2.global-to-local, align 4
  br i1 %v2_129f0, label %dec_label_pc_12a38, label %dec_label_pc_12a00.preheader

dec_label_pc_12a00.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_12a00.preheader, %dec_label_pc_12a00
  %v0_12a00 = phi i32 [ 0, %dec_label_pc_12a00.preheader ], [ %v1_12a00, %dec_label_pc_12a00 ]
  %v1_12a00 = add i32 %v0_12a00, 1
  store i32 %v1_12a00, i32* %r1.global-to-local, align 4
  %v2_12a04 = add i32 %v1_12a00, %v2_129ec
  %v3_12a04 = inttoptr i32 %v2_12a04 to i8*
  %v4_12a04 = load i8, i8* %v3_12a04, align 1
  %v2_12a08 = icmp eq i8 %v4_12a04, 0
  store i1 %v2_12a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a08, label %dec_label_pc_12a10, label %dec_label_pc_12a00

dec_label_pc_12a10:                               ; preds = %dec_label_pc_12a00, %dec_label_pc_12a38
  %v0_12a1424 = phi i32 [ %v6_129ec, %dec_label_pc_12a38 ], [ %v1_12a00, %dec_label_pc_12a00 ]
  %v0_12a10 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12a10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a14

dec_label_pc_12a14:                               ; preds = %dec_label_pc_12a14.dec_label_pc_12a14_crit_edge, %dec_label_pc_12a10
  %v2_12a20 = phi i32 [ %v5_12a20, %dec_label_pc_12a14.dec_label_pc_12a14_crit_edge ], [ %v0_12a10, %dec_label_pc_12a10 ]
  %v0_12a18 = phi i32 [ %v0_12a18.pre, %dec_label_pc_12a14.dec_label_pc_12a14_crit_edge ], [ %v2_129ec, %dec_label_pc_12a10 ]
  %v0_12a14 = phi i32 [ %v0_12a14.pre, %dec_label_pc_12a14.dec_label_pc_12a14_crit_edge ], [ %v0_12a1424, %dec_label_pc_12a10 ]
  %v1_12a14 = add i32 %v0_12a14, -1
  store i32 %v1_12a14, i32* %r1.global-to-local, align 4
  %v1_12a18 = inttoptr i32 %v0_12a18 to i8*
  %v2_12a18 = load i8, i8* %v1_12a18, align 1
  %v5_12a18 = add i32 %v0_12a18, 1
  store i32 %v5_12a18, i32* %r2.global-to-local, align 4
  %v3_12a1c = icmp eq i32 %v0_12a14, 0
  store i1 %v3_12a1c, i1* %cpsr_z.global-to-local, align 1
  %v3_12a20 = inttoptr i32 %v2_12a20 to i8*
  store i8 %v2_12a18, i8* %v3_12a20, align 1
  %v4_12a20 = load i32, i32* %r0.global-to-local, align 4
  %v5_12a20 = add i32 %v4_12a20, 1
  store i32 %v5_12a20, i32* %r0.global-to-local, align 4
  br i1 %v3_12a1c, label %dec_label_pc_12a28, label %dec_label_pc_12a14.dec_label_pc_12a14_crit_edge

dec_label_pc_12a14.dec_label_pc_12a14_crit_edge:  ; preds = %dec_label_pc_12a14
  %v0_12a14.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_12a18.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12a14

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12a14, %.thread1, %dec_label_pc_12944
  %v0_12a28 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12a28, i32* %r0.global-to-local, align 4
  store i32 %v3_12944, i32* @r4, align 4
  store i32 %v12_12944, i32* @r7, align 4
  ret i32 %v0_12a28

dec_label_pc_12a38:                               ; preds = %.thread11._crit_edge
  store i32 %v6_129ec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a10

; uselistorder directives
  uselistorder i32 %v5_12a20, { 1, 0 }
  uselistorder i1 %v3_12a1c, { 1, 0 }
  uselistorder i32 %v0_12a18, { 1, 0 }
  uselistorder i32 %v1_12a00, { 0, 1, 3, 2 }
  uselistorder i32 %v6_129ec, { 1, 0 }
  uselistorder i32 %v2_129ec, { 1, 0, 2, 3 }
  uselistorder i32 %v1_129e8.pre, { 1, 0 }
  uselistorder i32 %v1_129cc, { 1, 0, 2 }
  uselistorder i32 %v0_129c4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_129a4, { 2, 0, 1, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_12948, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 6, 0, 5, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @function_12b3c, { 1, 0, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_12a10, { 1, 0 }
  uselistorder label %dec_label_pc_12a00, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1296c, { 2, 1, 0 }
}

define i32 @function_12a40() local_unnamed_addr {
dec_label_pc_12a40:
  %r2.global-to-local = alloca i32, align 4
  %v0_12a40 = load i32, i32* @r1, align 4
  %v1_12a40 = add i32 %v0_12a40, -1
  store i32 %v1_12a40, i32* %r2.global-to-local, align 4
  %v2_12a40 = icmp eq i32 %v0_12a40, 0
  %v7_12a40 = icmp eq i32 %v0_12a40, 1
  %v0_12a44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12a40, i32 %v0_12a44)
  br i1 %v2_12a40, label %dec_label_pc_12b28, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_12a40
  %v0_12a4c = load i32, i32* @r0, align 4
  %v1_12a4c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12a4c, %v1_12a4c
  br i1 %tmp, label %dec_label_pc_12a54, label %dec_label_pc_12ae0

dec_label_pc_12a54:                               ; preds = %dec_label_pc_12a4c
  %v1_12a54 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a54 = and i32 %v1_12a54, %v1_12a4c
  %v4_12a54 = icmp eq i32 %v2_12a54, 0
  br i1 %v4_12a54, label %dec_label_pc_12aec, label %dec_label_pc_12a5c

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_12a54
  %v3_12a5c = icmp ult i32 %v1_12a4c, 536870912
  br i1 %v3_12a5c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12a5c
  %v4_12a60 = mul i32 %v1_12a4c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12a5c, %.thread
  %v0_12a80.pr36.ph = phi i32 [ %v4_12a60, %.thread ], [ %v1_12a4c, %dec_label_pc_12a5c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12a5c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12a80.pr36 = phi i32 [ %v4_12a74, %bb81 ], [ %v0_12a80.pr36.ph, %.preheader.preheader ]
  %v1_12a78 = phi i32 [ %v4_12a78, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12a6c = icmp ugt i32 %v0_12a80.pr36, 268435455
  br i1 %v2_12a6c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12a80thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12a70 = icmp ult i32 %v0_12a80.pr36, %v0_12a4c
  br i1 %v4_12a70, label %bb80, label %dec_label_pc_12a80thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12a74 = and i32 %v0_12a80.pr36, 268435456
  %v3_12a74 = icmp eq i32 %v2_12a74, 0
  %v4_12a74 = mul i32 %v0_12a80.pr36, 16
  br i1 %v3_12a74, label %bb81, label %dec_label_pc_12a80.loopexit

bb81:                                             ; preds = %bb80
  %v2_12a78 = and i32 %v1_12a78, 268435456
  %v3_12a78 = icmp eq i32 %v2_12a78, 0
  %v4_12a78 = mul i32 %v1_12a78, 16
  br i1 %v3_12a78, label %.preheader, label %dec_label_pc_12a80thread-pre-split.loopexit.loopexit

dec_label_pc_12a80thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_12a8c48.ph = phi i32 [ %v1_12a78, %bb ], [ %v4_12a78, %bb81 ]
  %v0_12a80.pr38.ph = phi i32 [ %v0_12a80.pr36, %bb ], [ %v4_12a74, %bb81 ]
  br label %dec_label_pc_12a80thread-pre-split.loopexit

dec_label_pc_12a80thread-pre-split.loopexit:      ; preds = %dec_label_pc_12a80thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12a8c48 = phi i32 [ %v1_12a78, %.thread2 ], [ %v1_12a8c48.ph, %dec_label_pc_12a80thread-pre-split.loopexit.loopexit ]
  %v0_12a80.pr38 = phi i32 [ %v0_12a80.pr36, %.thread2 ], [ %v0_12a80.pr38.ph, %dec_label_pc_12a80thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12a80thread-pre-split

dec_label_pc_12a80thread-pre-split:               ; preds = %dec_label_pc_12a80thread-pre-split.loopexit, %bb83
  %v1_12a8c46 = phi i32 [ %v1_12a8c48, %dec_label_pc_12a80thread-pre-split.loopexit ], [ %v3_12a8c, %bb83 ]
  %v0_12a80.pr = phi i32 [ %v0_12a80.pr38, %dec_label_pc_12a80thread-pre-split.loopexit ], [ %v3_12a88, %bb83 ]
  br label %dec_label_pc_12a80

dec_label_pc_12a80.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12a80

dec_label_pc_12a80:                               ; preds = %dec_label_pc_12a80.loopexit, %dec_label_pc_12a80thread-pre-split
  %v1_12a8c = phi i32 [ %v1_12a8c46, %dec_label_pc_12a80thread-pre-split ], [ %v1_12a78, %dec_label_pc_12a80.loopexit ]
  %v1_12a88 = phi i32 [ %v0_12a80.pr, %dec_label_pc_12a80thread-pre-split ], [ %v4_12a74, %dec_label_pc_12a80.loopexit ]
  %v2_12a80 = icmp slt i32 %v1_12a88, 0
  br i1 %v2_12a80, label %dec_label_pc_12a94, label %bb82

bb82:                                             ; preds = %dec_label_pc_12a80
  %v4_12a84 = icmp ult i32 %v1_12a88, %v0_12a4c
  br i1 %v4_12a84, label %bb83, label %dec_label_pc_12a94

bb83:                                             ; preds = %bb82
  %v3_12a88 = mul i32 %v1_12a88, 2
  %v2_12a8c = icmp slt i32 %v1_12a8c, 0
  %v3_12a8c = mul i32 %v1_12a8c, 2
  br i1 %v2_12a8c, label %dec_label_pc_12a94, label %dec_label_pc_12a80thread-pre-split

dec_label_pc_12a94:                               ; preds = %bb82, %dec_label_pc_12a80, %bb83
  %v2_12aa059 = phi i32 [ %v3_12a8c, %bb83 ], [ %v1_12a8c, %bb82 ], [ %v1_12a8c, %dec_label_pc_12a80 ]
  %v1_12a9851 = phi i32 [ %v3_12a88, %bb83 ], [ %v1_12a88, %bb82 ], [ %v1_12a88, %dec_label_pc_12a80 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %.thread11, %dec_label_pc_12a94
  %v1_12acc = phi i32 [ %v4_12acc, %.thread11 ], [ %v2_12aa059, %dec_label_pc_12a94 ]
  %v1_12aa0 = phi i32 [ %v0_12ad8, %.thread11 ], [ 0, %dec_label_pc_12a94 ]
  %v1_12ad0 = phi i32 [ %v4_12ad0, %.thread11 ], [ %v1_12a9851, %dec_label_pc_12a94 ]
  %v1_12a9c = phi i32 [ %v0_12ac8, %.thread11 ], [ %v0_12a4c, %dec_label_pc_12a94 ]
  %v3_12a98 = icmp ult i32 %v1_12a9c, %v1_12ad0
  br i1 %v3_12a98, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12a98
  %v3_12a9c = sub i32 %v1_12a9c, %v1_12ad0
  %v3_12aa0 = or i32 %v1_12aa0, %v1_12acc
  store i32 %v3_12aa0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12a98, %bb84
  %v1_12aa8 = phi i32 [ %v1_12a9c, %dec_label_pc_12a98 ], [ %v3_12a9c, %bb84 ]
  %v1_12aac = phi i32 [ %v1_12aa0, %dec_label_pc_12a98 ], [ %v3_12aa0, %bb84 ]
  %v4_12aa4 = udiv i32 %v1_12ad0, 2
  %v6_12aa4 = icmp ult i32 %v1_12aa8, %v4_12aa4
  br i1 %v6_12aa4, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12aa8 = urem i32 %v1_12ad0, 2
  %v4_12aa8 = icmp eq i32 %v3_12aa8, 0
  %v6_12aa8 = sub i32 %v1_12aa8, %v4_12aa4
  br i1 %v4_12aa8, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12aac = udiv i32 %v1_12acc, 2
  %v6_12aac = or i32 %v1_12aac, %v5_12aac
  store i32 %v6_12aac, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12ab4 = phi i32 [ %v6_12aa8, %bb85 ], [ %v1_12aa8, %.thread7 ], [ %v6_12aa8, %bb86 ]
  %v1_12ab8 = phi i32 [ %v1_12aac, %bb85 ], [ %v1_12aac, %.thread7 ], [ %v6_12aac, %bb86 ]
  %v4_12ab0 = udiv i32 %v1_12ad0, 4
  %v6_12ab0 = icmp ult i32 %v1_12ab4, %v4_12ab0
  br i1 %v6_12ab0, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12ab4 = and i32 %v1_12ad0, 2
  %v4_12ab4 = icmp eq i32 %v3_12ab4, 0
  %v6_12ab4 = sub i32 %v1_12ab4, %v4_12ab0
  br i1 %v4_12ab4, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12ab8 = udiv i32 %v1_12acc, 4
  %v6_12ab8 = or i32 %v1_12ab8, %v5_12ab8
  store i32 %v6_12ab8, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12ac0 = phi i32 [ %v6_12ab4, %bb87 ], [ %v1_12ab4, %.thread8 ], [ %v6_12ab4, %bb88 ]
  %v1_12ac4 = phi i32 [ %v1_12ab8, %bb87 ], [ %v1_12ab8, %.thread8 ], [ %v6_12ab8, %bb88 ]
  %v4_12abc = udiv i32 %v1_12ad0, 8
  %v6_12abc = icmp ult i32 %v1_12ac0, %v4_12abc
  br i1 %v6_12abc, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12ac0 = and i32 %v1_12ad0, 4
  %v4_12ac0 = icmp eq i32 %v3_12ac0, 0
  %v6_12ac0 = sub i32 %v1_12ac0, %v4_12abc
  br i1 %v4_12ac0, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12ac4 = udiv i32 %v1_12acc, 8
  %v6_12ac4 = or i32 %v1_12ac4, %v5_12ac4
  store i32 %v6_12ac4, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_12ad8 = phi i32 [ %v1_12ac4, %bb89 ], [ %v1_12ac4, %.thread9 ], [ %v6_12ac4, %bb90 ]
  %v0_12ac8 = phi i32 [ %v6_12ac0, %bb89 ], [ %v1_12ac0, %.thread9 ], [ %v6_12ac0, %bb90 ]
  %v2_12ac8 = icmp eq i32 %v0_12ac8, 0
  br i1 %v2_12ac8, label %dec_label_pc_12ad8, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_12acc, 16
  br i1 %tmp138, label %dec_label_pc_12ad8, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_12acc = udiv i32 %v1_12acc, 16
  %v4_12ad0 = udiv i32 %v1_12ad0, 16
  br label %dec_label_pc_12a98

dec_label_pc_12ad8:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_12ad8

dec_label_pc_12ae0:                               ; preds = %dec_label_pc_12a4c
  %v9_12a4c = icmp eq i32 %v0_12a4c, %v1_12a4c
  %. = zext i1 %v9_12a4c to i32
  ret i32 %.

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12a54
  %v2_12aec = icmp ugt i32 %v1_12a4c, 65535
  br i1 %v2_12aec, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12aec
  %v2_12af0 = and i32 %v1_12a4c, 32768
  %v3_12af0 = icmp eq i32 %v2_12af0, 0
  %v4_12af0 = udiv i32 %v1_12a4c, 65536
  br i1 %v3_12af0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12aec
  %v0_12afc65 = phi i32 [ %v1_12a4c, %dec_label_pc_12aec ], [ %v4_12af0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12b00 = phi i32 [ %v0_12afc65, %.thread16 ], [ %v4_12af0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12afc = icmp ugt i32 %v1_12b00, 255
  br i1 %v2_12afc, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12b00 = and i32 %v1_12b00, 128
  %v3_12b00 = icmp eq i32 %v2_12b00, 0
  %v4_12b00 = udiv i32 %v1_12b00, 256
  br i1 %v3_12b00, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12b04 = or i32 %storemerge, 8
  store i32 %v2_12b04, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12b10 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12b04, %bb98 ]
  %v1_12b0c = phi i32 [ %v1_12b00, %bb96 ], [ %v4_12b00, %bb97 ], [ %v4_12b00, %bb98 ]
  %v2_12b08 = icmp ugt i32 %v1_12b0c, 15
  br i1 %v2_12b08, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12b0c = and i32 %v1_12b0c, 8
  %v3_12b0c = icmp eq i32 %v2_12b0c, 0
  %v4_12b0c = udiv i32 %v1_12b0c, 16
  br i1 %v3_12b0c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12b10 = add nsw i32 %v1_12b10, 4
  store i32 %v2_12b10, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12b18 = phi i32 [ %v1_12b10, %.thread17 ], [ %v1_12b10, %bb99 ], [ %v2_12b10, %bb100 ]
  %v5_12b1c = phi i32 [ %v1_12b0c, %.thread17 ], [ %v4_12b0c, %bb99 ], [ %v4_12b0c, %bb100 ]
  %v2_12b14 = icmp ugt i32 %v5_12b1c, 3
  %v7_12b14 = icmp eq i32 %v5_12b1c, 4
  %v2_12b18 = xor i1 %v7_12b14, true
  %v3_12b18 = and i1 %v2_12b14, %v2_12b18
  br i1 %v3_12b18, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12b18 = add nsw i32 %v4_12b18, 3
  store i32 %v5_12b18, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12b1c = phi i32 [ %v4_12b18, %.thread18 ], [ %v5_12b18, %bb101 ]
  %v2_12b1c = xor i1 %v2_12b14, true
  %v3_12b1c = or i1 %v7_12b14, %v2_12b1c
  br i1 %v3_12b1c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12b1c = udiv i32 %v5_12b1c, 2
  %v9_12b1c = add i32 %v4_12b1c, %v8_12b1c
  store i32 %v9_12b1c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12b20 = phi i32 [ %v4_12b1c, %bb102 ], [ %v9_12b1c, %bb103 ]
  %v6_12b20 = lshr i32 %v0_12a4c, %v1_12b20
  ret i32 %v6_12b20

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12a40
  %v0_12b28 = load i32, i32* @lr, align 4
  %v0_12b2c = call i32 @function_12c98()
  store i32 %v0_12b28, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12b1c, { 1, 0 }
  uselistorder i1 %v7_12b14, { 1, 0 }
  uselistorder i32 %v4_12b0c, { 1, 0 }
  uselistorder i32 %v1_12b0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12b04, { 1, 0 }
  uselistorder i32 %v4_12b00, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b00, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12af0, { 1, 0 }
  uselistorder i32 %v0_12ac8, { 1, 0 }
  uselistorder i32 %v4_12abc, { 1, 0 }
  uselistorder i32 %v1_12ac4, { 1, 2, 0 }
  uselistorder i32 %v4_12ab0, { 1, 0 }
  uselistorder i32 %v1_12ab8, { 1, 2, 0 }
  uselistorder i32 %v4_12aa4, { 1, 0 }
  uselistorder i32 %v1_12aac, { 1, 2, 0 }
  uselistorder i32 %v1_12ad0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12aa0, { 1, 0 }
  uselistorder i32 %v1_12acc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12a8c, { 1, 0 }
  uselistorder i32 %v3_12a88, { 1, 0 }
  uselistorder i32 %v1_12a88, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12a8c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12a78, { 1, 0 }
  uselistorder i32 %v4_12a74, { 2, 1, 0 }
  uselistorder i32 %v1_12a78, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12a80.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12a4c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12a4c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12a40, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12ad8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12a94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a80thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12b3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b3c:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12b40 = call i32 @function_12a40()
  ret i32 %v0_12b40
}

define i32 @function_12b54() local_unnamed_addr {
dec_label_pc_12b54:
  %v0_12b54 = load i32, i32* @r1, align 4
  %v1_12b54 = icmp slt i32 %v0_12b54, 0
  %v2_12b54 = icmp eq i32 %v0_12b54, 0
  %v0_12b58 = load i32, i32* @r0, align 4
  %v2_12b58 = xor i32 %v0_12b58, %v0_12b54
  br i1 %v2_12b54, label %dec_label_pc_12c6c, label %dec_label_pc_12b60

dec_label_pc_12b60:                               ; preds = %dec_label_pc_12b54
  br i1 %v1_12b54, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_12b60
  %v2_12b60 = sub i32 0, %v0_12b54
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_12b60, %bb
  %v1_12c2c = phi i32 [ %v2_12b60, %bb ], [ %v0_12b54, %dec_label_pc_12b60 ]
  %v1_12b64 = add i32 %v1_12c2c, -1
  %v7_12b64 = icmp eq i32 %v1_12c2c, 1
  br i1 %v7_12b64, label %dec_label_pc_12c0c, label %dec_label_pc_12b6c

dec_label_pc_12b6c:                               ; preds = %thread-pre-split
  %v1_12b6c = icmp slt i32 %v0_12b58, 0
  br i1 %v1_12b6c, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_12b6c
  %v2_12b70 = sub i32 0, %v0_12b58
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_12b6c, %bb84
  %v0_12c60 = phi i32 [ %v0_12b58, %dec_label_pc_12b6c ], [ %v2_12b70, %bb84 ]
  %v3_12b74 = icmp uge i32 %v0_12c60, %v1_12c2c
  %v9_12b74 = icmp eq i32 %v0_12c60, %v1_12c2c
  %v2_12b78 = xor i1 %v3_12b74, true
  %v3_12b78 = or i1 %v9_12b74, %v2_12b78
  br i1 %v3_12b78, label %dec_label_pc_12c18, label %dec_label_pc_12b7c

dec_label_pc_12b7c:                               ; preds = %bb85
  %v2_12b7c = and i32 %v1_12b64, %v1_12c2c
  %v4_12b7c = icmp eq i32 %v2_12b7c, 0
  br i1 %v4_12b7c, label %dec_label_pc_12c28, label %dec_label_pc_12b84

dec_label_pc_12b84:                               ; preds = %dec_label_pc_12b7c
  %v3_12b84 = icmp ult i32 %v1_12c2c, 536870912
  br i1 %v3_12b84, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12b84
  %v4_12b88 = mul i32 %v1_12c2c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12b84, %.thread
  %v0_12ba8.pr40.ph = phi i32 [ %v4_12b88, %.thread ], [ %v1_12c2c, %dec_label_pc_12b84 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12b84 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_12ba8.pr40 = phi i32 [ %v4_12b9c, %bb88 ], [ %v0_12ba8.pr40.ph, %.preheader.preheader ]
  %v1_12ba0 = phi i32 [ %v4_12ba0, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_12b94 = icmp ugt i32 %v0_12ba8.pr40, 268435455
  br i1 %v2_12b94, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_12ba8thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_12b98 = icmp ult i32 %v0_12ba8.pr40, %v0_12c60
  br i1 %v4_12b98, label %bb87, label %dec_label_pc_12ba8thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_12b9c = and i32 %v0_12ba8.pr40, 268435456
  %v3_12b9c = icmp eq i32 %v2_12b9c, 0
  %v4_12b9c = mul i32 %v0_12ba8.pr40, 16
  br i1 %v3_12b9c, label %bb88, label %dec_label_pc_12ba8.loopexit

bb88:                                             ; preds = %bb87
  %v2_12ba0 = and i32 %v1_12ba0, 268435456
  %v3_12ba0 = icmp eq i32 %v2_12ba0, 0
  %v4_12ba0 = mul i32 %v1_12ba0, 16
  br i1 %v3_12ba0, label %.preheader, label %dec_label_pc_12ba8thread-pre-split.loopexit.loopexit

dec_label_pc_12ba8thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_12bb452.ph = phi i32 [ %v1_12ba0, %bb86 ], [ %v4_12ba0, %bb88 ]
  %v0_12ba8.pr42.ph = phi i32 [ %v0_12ba8.pr40, %bb86 ], [ %v4_12b9c, %bb88 ]
  br label %dec_label_pc_12ba8thread-pre-split.loopexit

dec_label_pc_12ba8thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ba8thread-pre-split.loopexit.loopexit, %.thread3
  %v1_12bb452 = phi i32 [ %v1_12ba0, %.thread3 ], [ %v1_12bb452.ph, %dec_label_pc_12ba8thread-pre-split.loopexit.loopexit ]
  %v0_12ba8.pr42 = phi i32 [ %v0_12ba8.pr40, %.thread3 ], [ %v0_12ba8.pr42.ph, %dec_label_pc_12ba8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ba8thread-pre-split

dec_label_pc_12ba8thread-pre-split:               ; preds = %dec_label_pc_12ba8thread-pre-split.loopexit, %bb90
  %v1_12bb450 = phi i32 [ %v1_12bb452, %dec_label_pc_12ba8thread-pre-split.loopexit ], [ %v3_12bb4, %bb90 ]
  %v2_12bac48 = phi i32 [ %v0_12c60, %dec_label_pc_12ba8thread-pre-split.loopexit ], [ %v2_12bac, %bb90 ]
  %v0_12ba8.pr = phi i32 [ %v0_12ba8.pr42, %dec_label_pc_12ba8thread-pre-split.loopexit ], [ %v3_12bb0, %bb90 ]
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12ba8.loopexit, %dec_label_pc_12ba8thread-pre-split
  %v1_12bb4 = phi i32 [ %v1_12bb450, %dec_label_pc_12ba8thread-pre-split ], [ %v1_12ba0, %dec_label_pc_12ba8.loopexit ]
  %v2_12bac = phi i32 [ %v2_12bac48, %dec_label_pc_12ba8thread-pre-split ], [ %v0_12c60, %dec_label_pc_12ba8.loopexit ]
  %v1_12bb0 = phi i32 [ %v0_12ba8.pr, %dec_label_pc_12ba8thread-pre-split ], [ %v4_12b9c, %dec_label_pc_12ba8.loopexit ]
  %v2_12ba8 = icmp slt i32 %v1_12bb0, 0
  br i1 %v2_12ba8, label %dec_label_pc_12bbc, label %bb89

bb89:                                             ; preds = %dec_label_pc_12ba8
  %v4_12bac = icmp ult i32 %v1_12bb0, %v2_12bac
  br i1 %v4_12bac, label %bb90, label %dec_label_pc_12bbc

bb90:                                             ; preds = %bb89
  %v3_12bb0 = mul i32 %v1_12bb0, 2
  %v2_12bb4 = icmp slt i32 %v1_12bb4, 0
  %v3_12bb4 = mul i32 %v1_12bb4, 2
  br i1 %v2_12bb4, label %dec_label_pc_12bbc, label %dec_label_pc_12ba8thread-pre-split

dec_label_pc_12bbc:                               ; preds = %bb89, %dec_label_pc_12ba8, %bb90
  %v2_12bc863 = phi i32 [ %v3_12bb4, %bb90 ], [ %v1_12bb4, %bb89 ], [ %v1_12bb4, %dec_label_pc_12ba8 ]
  %v1_12bc055 = phi i32 [ %v3_12bb0, %bb90 ], [ %v1_12bb0, %bb89 ], [ %v1_12bb0, %dec_label_pc_12ba8 ]
  br label %dec_label_pc_12bc0

dec_label_pc_12bc0:                               ; preds = %.thread13, %dec_label_pc_12bbc
  %v1_12bf4 = phi i32 [ %v4_12bf4, %.thread13 ], [ %v2_12bc863, %dec_label_pc_12bbc ]
  %v1_12bc8 = phi i32 [ %v1_12c04, %.thread13 ], [ 0, %dec_label_pc_12bbc ]
  %v1_12bf8 = phi i32 [ %v4_12bf8, %.thread13 ], [ %v1_12bc055, %dec_label_pc_12bbc ]
  %v1_12bc4 = phi i32 [ %v0_12bf0, %.thread13 ], [ %v0_12c60, %dec_label_pc_12bbc ]
  %v3_12bc0 = icmp ult i32 %v1_12bc4, %v1_12bf8
  br i1 %v3_12bc0, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_12bc0
  %v3_12bc4 = sub i32 %v1_12bc4, %v1_12bf8
  %v3_12bc8 = or i32 %v1_12bc8, %v1_12bf4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12bc0, %bb91
  %v1_12bd0 = phi i32 [ %v1_12bc4, %dec_label_pc_12bc0 ], [ %v3_12bc4, %bb91 ]
  %v1_12bd4 = phi i32 [ %v1_12bc8, %dec_label_pc_12bc0 ], [ %v3_12bc8, %bb91 ]
  %v4_12bcc = udiv i32 %v1_12bf8, 2
  %v6_12bcc = icmp ult i32 %v1_12bd0, %v4_12bcc
  br i1 %v6_12bcc, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_12bd0 = urem i32 %v1_12bf8, 2
  %v4_12bd0 = icmp eq i32 %v3_12bd0, 0
  %v6_12bd0 = sub i32 %v1_12bd0, %v4_12bcc
  br i1 %v4_12bd0, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_12bd4 = udiv i32 %v1_12bf4, 2
  %v6_12bd4 = or i32 %v1_12bd4, %v5_12bd4
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_12bdc = phi i32 [ %v6_12bd0, %bb92 ], [ %v1_12bd0, %.thread8 ], [ %v6_12bd0, %bb93 ]
  %v1_12be0 = phi i32 [ %v1_12bd4, %bb92 ], [ %v1_12bd4, %.thread8 ], [ %v6_12bd4, %bb93 ]
  %v4_12bd8 = udiv i32 %v1_12bf8, 4
  %v6_12bd8 = icmp ult i32 %v1_12bdc, %v4_12bd8
  br i1 %v6_12bd8, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_12bdc = and i32 %v1_12bf8, 2
  %v4_12bdc = icmp eq i32 %v3_12bdc, 0
  %v6_12bdc = sub i32 %v1_12bdc, %v4_12bd8
  br i1 %v4_12bdc, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_12be0 = udiv i32 %v1_12bf4, 4
  %v6_12be0 = or i32 %v1_12be0, %v5_12be0
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_12be8 = phi i32 [ %v6_12bdc, %bb94 ], [ %v1_12bdc, %.thread9 ], [ %v6_12bdc, %bb95 ]
  %v1_12bec = phi i32 [ %v1_12be0, %bb94 ], [ %v1_12be0, %.thread9 ], [ %v6_12be0, %bb95 ]
  %v4_12be4 = udiv i32 %v1_12bf8, 8
  %v6_12be4 = icmp ult i32 %v1_12be8, %v4_12be4
  br i1 %v6_12be4, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_12be8 = and i32 %v1_12bf8, 4
  %v4_12be8 = icmp eq i32 %v3_12be8, 0
  %v6_12be8 = sub i32 %v1_12be8, %v4_12be4
  br i1 %v4_12be8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_12bec = udiv i32 %v1_12bf4, 8
  %v6_12bec = or i32 %v1_12bec, %v5_12bec
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_12c04 = phi i32 [ %v1_12bec, %bb96 ], [ %v1_12bec, %.thread10 ], [ %v6_12bec, %bb97 ]
  %v0_12bf0 = phi i32 [ %v6_12be8, %bb96 ], [ %v1_12be8, %.thread10 ], [ %v6_12be8, %bb97 ]
  %v2_12bf0 = icmp eq i32 %v0_12bf0, 0
  br i1 %v2_12bf0, label %dec_label_pc_12c00, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12bf4, 16
  br i1 %tmp, label %dec_label_pc_12c00, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_12bf4 = udiv i32 %v1_12bf4, 16
  %v4_12bf8 = udiv i32 %v1_12bf8, 16
  br label %dec_label_pc_12bc0

dec_label_pc_12c00:                               ; preds = %thread-pre-split12, %bb98
  %v1_12c00 = icmp slt i32 %v2_12b58, 0
  br i1 %v1_12c00, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_12c00
  %v2_12c04 = sub i32 0, %v1_12c04
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_12c0c, %dec_label_pc_12c00, %bb99
  %v1_12c08 = phi i32 [ %v1_12c04, %dec_label_pc_12c00 ], [ %v2_12c04, %bb99 ], [ %v2_12c10, %bb100 ], [ undef, %dec_label_pc_12c0c ], [ %v1_12c2480, %bb102 ], [ %v2_12c20, %bb103 ]
  ret i32 %v1_12c08

dec_label_pc_12c0c:                               ; preds = %thread-pre-split
  br i1 %v1_12b54, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12c0c
  %v2_12c10 = sub i32 0, %v0_12b58
  br label %.thread16

dec_label_pc_12c18:                               ; preds = %bb85
  br i1 %v3_12b74, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_12c18
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_12c18, %bb101
  %v1_12c2480 = phi i32 [ %v0_12b58, %dec_label_pc_12c18 ], [ 0, %bb101 ]
  br i1 %v9_12b74, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_12c1c = ashr i32 %v2_12b58, 31
  %v2_12c20 = or i32 %v4_12c1c, 1
  br label %.thread16

dec_label_pc_12c28:                               ; preds = %dec_label_pc_12b7c
  %v2_12c28 = icmp ugt i32 %v1_12c2c, 65535
  br i1 %v2_12c28, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_12c28
  %v2_12c2c = and i32 %v1_12c2c, 32768
  %v3_12c2c = icmp eq i32 %v2_12c2c, 0
  %v4_12c2c = udiv i32 %v1_12c2c, 65536
  br i1 %v3_12c2c, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_12c28
  %v0_12c3870 = phi i32 [ %v1_12c2c, %dec_label_pc_12c28 ], [ %v4_12c2c, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_12c3c = phi i32 [ %v0_12c3870, %.thread19 ], [ %v4_12c2c, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_12c38 = icmp ugt i32 %v1_12c3c, 255
  br i1 %v2_12c38, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_12c3c = and i32 %v1_12c3c, 128
  %v3_12c3c = icmp eq i32 %v2_12c3c, 0
  %v4_12c3c = udiv i32 %v1_12c3c, 256
  br i1 %v3_12c3c, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_12c40 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_12c4c = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_12c40, %bb107 ]
  %v1_12c48 = phi i32 [ %v1_12c3c, %bb105 ], [ %v4_12c3c, %bb106 ], [ %v4_12c3c, %bb107 ]
  %v2_12c44 = icmp ugt i32 %v1_12c48, 15
  br i1 %v2_12c44, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_12c48 = and i32 %v1_12c48, 8
  %v3_12c48 = icmp eq i32 %v2_12c48, 0
  %v4_12c48 = udiv i32 %v1_12c48, 16
  br i1 %v3_12c48, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_12c4c = add nsw i32 %v1_12c4c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_12c54 = phi i32 [ %v1_12c4c, %.thread20 ], [ %v1_12c4c, %bb108 ], [ %v2_12c4c, %bb109 ]
  %v5_12c58 = phi i32 [ %v1_12c48, %.thread20 ], [ %v4_12c48, %bb108 ], [ %v4_12c48, %bb109 ]
  %v2_12c50 = icmp ugt i32 %v5_12c58, 3
  %v7_12c50 = icmp eq i32 %v5_12c58, 4
  %v2_12c54 = xor i1 %v7_12c50, true
  %v3_12c54 = and i1 %v2_12c50, %v2_12c54
  br i1 %v3_12c54, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_12c54 = add nsw i32 %v4_12c54, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_12c58 = phi i32 [ %v4_12c54, %.thread21 ], [ %v5_12c54, %bb110 ]
  %v2_12c58 = xor i1 %v2_12c50, true
  %v3_12c58 = or i1 %v7_12c50, %v2_12c58
  br i1 %v3_12c58, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_12c58 = udiv i32 %v5_12c58, 2
  %v9_12c58 = add i32 %v4_12c58, %v8_12c58
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_12c60 = phi i32 [ %v4_12c58, %bb111 ], [ %v9_12c58, %bb112 ]
  %v1_12c5c = icmp slt i32 %v2_12b58, 0
  %v6_12c60 = lshr i32 %v0_12c60, %v1_12c60
  %v2_12c64 = sub i32 0, %v6_12c60
  %v2_12c64.v6_12c60 = select i1 %v1_12c5c, i32 %v2_12c64, i32 %v6_12c60
  ret i32 %v2_12c64.v6_12c60

dec_label_pc_12c6c:                               ; preds = %dec_label_pc_12b54
  %v0_12c70 = call i32 @function_12c98()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12c58, { 1, 0 }
  uselistorder i1 %v7_12c50, { 1, 0 }
  uselistorder i32 %v4_12c48, { 1, 0 }
  uselistorder i32 %v1_12c48, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c3c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12c3c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c2c, { 1, 0 }
  uselistorder i32 %v0_12bf0, { 1, 0 }
  uselistorder i32 %v4_12be4, { 1, 0 }
  uselistorder i32 %v1_12bec, { 1, 2, 0 }
  uselistorder i32 %v4_12bd8, { 1, 0 }
  uselistorder i32 %v1_12be0, { 1, 2, 0 }
  uselistorder i32 %v4_12bcc, { 1, 0 }
  uselistorder i32 %v1_12bd4, { 1, 2, 0 }
  uselistorder i32 %v1_12bf8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12bc8, { 1, 0 }
  uselistorder i32 %v1_12bf4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12bb4, { 1, 0 }
  uselistorder i32 %v3_12bb0, { 1, 0 }
  uselistorder i32 %v1_12bb0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12bac, { 1, 0 }
  uselistorder i32 %v1_12bb4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12ba0, { 1, 0 }
  uselistorder i32 %v4_12b9c, { 2, 1, 0 }
  uselistorder i32 %v1_12ba0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12ba8.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_12b74, { 1, 0 }
  uselistorder i32 %v1_12c2c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_12b58, { 1, 0, 2 }
  uselistorder i32 %v0_12b58, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_12b54, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_12c98, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12c00, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ba8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_12c80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12c80:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12c84 = call i32 @function_12b54()
  ret i32 %v0_12c84
}

define i32 @function_12c98() local_unnamed_addr {
dec_label_pc_12c98:
  %v1_12ca0 = call i32 @function_138fc(i32 8)
  ret i32 %v1_12ca0
}

define i32 @function_12cac() local_unnamed_addr {
dec_label_pc_12cac:
  %v1_12cbc = load i32, i32* @r0, align 4
  ret i32 %v1_12cbc
}

define i32 @function_12cc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12cc0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_12cc0 = load i32, i32* @r2, align 4
  %v9_12cc0 = load i32, i32* @r3, align 4
  store i32 %v9_12cc0, i32* %stack_var_-4, align 4
  %v1_12cd0 = and i32 %arg2, 64
  %v2_12cd0 = icmp eq i32 %v1_12cd0, 0
  br i1 %v2_12cd0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12cc0
  %v3_12cd8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_12cd8, i32* @r3, align 4
  %phitmp = urem i32 %v6_12cc0, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12cc0, %bb
  %v0_12cdc = phi i32 [ 0, %dec_label_pc_12cc0 ], [ %phitmp, %bb ]
  store i32 %v0_12cdc, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12d0c, label %dec_label_pc_12cfc

dec_label_pc_12cfc:                               ; preds = %.thread
  %v0_12cfc = call i32 @function_134dc()
  %v0_12d00 = load i32, i32* %r7.global-to-local, align 4
  %v1_12d00 = sub i32 0, %v0_12d00
  store i32 %v1_12d00, i32* @r3, align 4
  %v2_12d04 = inttoptr i32 %v0_12cfc to i32*
  store i32 %v1_12d00, i32* %v2_12d04, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12d0c

dec_label_pc_12d0c:                               ; preds = %.thread, %dec_label_pc_12cfc
  %v0_12d0c = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_12cfc ]
  ret i32 %v0_12d0c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d0c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12d20() local_unnamed_addr {
dec_label_pc_12d20:
  %v1_12d30 = load i32, i32* @r0, align 4
  ret i32 %v1_12d30
}

define i32 @function_12d34(i32* %arg1) local_unnamed_addr {
dec_label_pc_12d34:
  %stack_var_-16 = alloca i32, align 4
  %v2_12d38 = ptrtoint i32* %stack_var_-16 to i32
  %v2_12d48 = call i32 @function_12eb4(i32 %v2_12d38, i32 0)
  %v2_12d4c = load i32, i32* %stack_var_-16, align 4
  %v2_12d50 = icmp eq i32* %arg1, null
  br i1 %v2_12d50, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_12d34
  store i32 %v2_12d4c, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_12d34, %bb
  ret i32 %v2_12d4c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_12d64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12d64:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12d98, label %dec_label_pc_12d88

dec_label_pc_12d88:                               ; preds = %dec_label_pc_12d64
  %v0_12d88 = call i32 @function_134dc()
  %v0_12d8c = load i32, i32* %r4.global-to-local, align 4
  %v1_12d8c = sub i32 0, %v0_12d8c
  %v2_12d90 = inttoptr i32 %v0_12d88 to i32*
  store i32 %v1_12d8c, i32* %v2_12d90, align 4
  br label %dec_label_pc_12d98

dec_label_pc_12d98:                               ; preds = %dec_label_pc_12d64, %dec_label_pc_12d88
  %v1_12da0 = phi i32 [ %arg1, %dec_label_pc_12d64 ], [ -1, %dec_label_pc_12d88 ]
  ret i32 %v1_12da0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d98, { 1, 0 }
}

define i32 @function_12da4() local_unnamed_addr {
dec_label_pc_12da4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12da4 = load i32, i32* @r7, align 4
  store i32 %v3_12da4, i32* %stack_var_-8, align 4
  %v0_12db0 = load i32, i32* @r0, align 4
  store i32 %v0_12db0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12db0, -4095
  br i1 %tmp, label %dec_label_pc_12dd0, label %dec_label_pc_12dc0

dec_label_pc_12dc0:                               ; preds = %dec_label_pc_12da4
  %v0_12dc0 = call i32 @function_134dc()
  %v0_12dc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12dc4 = sub i32 0, %v0_12dc4
  %v2_12dc8 = inttoptr i32 %v0_12dc0 to i32*
  store i32 %v1_12dc4, i32* %v2_12dc8, align 4
  %v2_12dd0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12dd0

dec_label_pc_12dd0:                               ; preds = %dec_label_pc_12da4, %dec_label_pc_12dc0
  %v1_12dd4 = phi i32 [ %v0_12db0, %dec_label_pc_12da4 ], [ -1, %dec_label_pc_12dc0 ]
  %v2_12dd0 = phi i32 [ %v3_12da4, %dec_label_pc_12da4 ], [ %v2_12dd0.pre, %dec_label_pc_12dc0 ]
  store i32 %v2_12dd0, i32* @r7, align 4
  ret i32 %v1_12dd4

; uselistorder directives
  uselistorder i32 %v0_12db0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12dd0, { 1, 0 }
}

define i32 @function_12dd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12dd8:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e08, label %dec_label_pc_12df8

dec_label_pc_12df8:                               ; preds = %dec_label_pc_12dd8
  %v0_12df8 = call i32 @function_134dc()
  %v0_12dfc = load i32, i32* %r4.global-to-local, align 4
  %v1_12dfc = sub i32 0, %v0_12dfc
  %v2_12e00 = inttoptr i32 %v0_12df8 to i32*
  store i32 %v1_12dfc, i32* %v2_12e00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e08

dec_label_pc_12e08:                               ; preds = %dec_label_pc_12dd8, %dec_label_pc_12df8
  %v0_12e08 = phi i32 [ %arg1, %dec_label_pc_12dd8 ], [ -1, %dec_label_pc_12df8 ]
  ret i32 %v0_12e08

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e08, { 1, 0 }
}

define i32 @function_12e18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e18:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e18 = load i32, i32* @r7, align 4
  store i32 %v3_12e18, i32* %stack_var_-8, align 4
  %v0_12e24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e24, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e24, -4095
  br i1 %tmp, label %dec_label_pc_12e44, label %dec_label_pc_12e34

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12e18
  %v0_12e34 = call i32 @function_134dc()
  %v0_12e38 = load i32, i32* %r7.global-to-local, align 4
  %v1_12e38 = sub i32 0, %v0_12e38
  %v2_12e3c = inttoptr i32 %v0_12e34 to i32*
  store i32 %v1_12e38, i32* %v2_12e3c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %dec_label_pc_12e18, %dec_label_pc_12e34
  %v1_12e48 = phi i32 [ %v0_12e24, %dec_label_pc_12e18 ], [ -1, %dec_label_pc_12e34 ]
  %v2_12e44 = phi i32 [ %v3_12e18, %dec_label_pc_12e18 ], [ %v2_12e44.pre, %dec_label_pc_12e34 ]
  store i32 %v2_12e44, i32* @r7, align 4
  ret i32 %v1_12e48

; uselistorder directives
  uselistorder i32 %v0_12e24, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e44, { 1, 0 }
}

define i32 @function_12e4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e4c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e4c = load i32, i32* @r7, align 4
  store i32 %v3_12e4c, i32* %stack_var_-8, align 4
  %v0_12e58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e58, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e58, -4095
  br i1 %tmp, label %dec_label_pc_12e78, label %dec_label_pc_12e68

dec_label_pc_12e68:                               ; preds = %dec_label_pc_12e4c
  %v0_12e68 = call i32 @function_134dc()
  %v0_12e6c = load i32, i32* %r7.global-to-local, align 4
  %v1_12e6c = sub i32 0, %v0_12e6c
  %v2_12e70 = inttoptr i32 %v0_12e68 to i32*
  store i32 %v1_12e6c, i32* %v2_12e70, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e78.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e4c, %dec_label_pc_12e68
  %v1_12e7c = phi i32 [ %v0_12e58, %dec_label_pc_12e4c ], [ -1, %dec_label_pc_12e68 ]
  %v2_12e78 = phi i32 [ %v3_12e4c, %dec_label_pc_12e4c ], [ %v2_12e78.pre, %dec_label_pc_12e68 ]
  store i32 %v2_12e78, i32* @r7, align 4
  ret i32 %v1_12e7c

; uselistorder directives
  uselistorder i32 %v0_12e58, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e78, { 1, 0 }
}

define i32 @function_12e80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12e80:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e80 = load i32, i32* @r7, align 4
  store i32 %v3_12e80, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ea8, label %dec_label_pc_12e98

dec_label_pc_12e98:                               ; preds = %dec_label_pc_12e80
  %v0_12e98 = call i32 @function_134dc()
  %v0_12e9c = load i32, i32* %r7.global-to-local, align 4
  %v1_12e9c = sub i32 0, %v0_12e9c
  %v2_12ea0 = inttoptr i32 %v0_12e98 to i32*
  store i32 %v1_12e9c, i32* %v2_12ea0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12eac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ea8

dec_label_pc_12ea8:                               ; preds = %dec_label_pc_12e80, %dec_label_pc_12e98
  %v2_12eac = phi i32 [ %v3_12e80, %dec_label_pc_12e80 ], [ %v2_12eac.pre, %dec_label_pc_12e98 ]
  %v0_12ea8 = phi i32 [ %arg1, %dec_label_pc_12e80 ], [ -1, %dec_label_pc_12e98 ]
  store i32 %v2_12eac, i32* @r7, align 4
  ret i32 %v0_12ea8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ea8, { 1, 0 }
}

define i32 @function_12eb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12eb4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12eb4 = load i32, i32* @r7, align 4
  store i32 %v3_12eb4, i32* %stack_var_-8, align 4
  %v0_12ec0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ec0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ec0, -4095
  br i1 %tmp, label %dec_label_pc_12ee0, label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12eb4
  %v0_12ed0 = call i32 @function_134dc()
  %v0_12ed4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12ed4 = sub i32 0, %v0_12ed4
  store i32 %v1_12ed4, i32* @r3, align 4
  %v2_12ed8 = inttoptr i32 %v0_12ed0 to i32*
  store i32 %v1_12ed4, i32* %v2_12ed8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12ee0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ee0

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12eb4, %dec_label_pc_12ed0
  %v1_12ee4 = phi i32 [ %v0_12ec0, %dec_label_pc_12eb4 ], [ -1, %dec_label_pc_12ed0 ]
  %v2_12ee0 = phi i32 [ %v3_12eb4, %dec_label_pc_12eb4 ], [ %v2_12ee0.pre, %dec_label_pc_12ed0 ]
  store i32 %v2_12ee0, i32* @r7, align 4
  ret i32 %v1_12ee4

; uselistorder directives
  uselistorder i32 %v0_12ec0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ee0, { 1, 0 }
}

define i32 @function_12ee8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ee8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12ee8 = load i32, i32* @r3, align 4
  store i32 %v9_12ee8, i32* %stack_var_-4, align 4
  %v2_12f00 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12f00, i32* @r3, align 4
  %v0_12f24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f24, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f24, -4095
  br i1 %tmp, label %dec_label_pc_12f44, label %dec_label_pc_12f34

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12ee8
  %v0_12f34 = call i32 @function_134dc()
  %v0_12f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f38 = sub i32 0, %v0_12f38
  store i32 %v1_12f38, i32* @r3, align 4
  %v2_12f3c = inttoptr i32 %v0_12f34 to i32*
  store i32 %v1_12f38, i32* %v2_12f3c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f44

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12ee8, %dec_label_pc_12f34
  %v1_12f50 = phi i32 [ %v0_12f24, %dec_label_pc_12ee8 ], [ -1, %dec_label_pc_12f34 ]
  ret i32 %v1_12f50

; uselistorder directives
  uselistorder i32 %v0_12f24, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f44, { 1, 0 }
}

define i32 @function_12f54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12f54:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12f90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f90, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f90, -4095
  br i1 %tmp, label %dec_label_pc_12fb0, label %dec_label_pc_12fa0

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f54
  %v0_12fa0 = call i32 @function_134dc()
  %v0_12fa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12fa4 = sub i32 0, %v0_12fa4
  %v2_12fa8 = inttoptr i32 %v0_12fa0 to i32*
  store i32 %v1_12fa4, i32* %v2_12fa8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12fb0

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12f54, %dec_label_pc_12fa0
  %v1_12fbc = phi i32 [ %v0_12f90, %dec_label_pc_12f54 ], [ -1, %dec_label_pc_12fa0 ]
  ret i32 %v1_12fbc

; uselistorder directives
  uselistorder i32 %v0_12f90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fb0, { 1, 0 }
}

define i32 @function_12fc0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fc0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fc0 = load i32, i32* @r7, align 4
  store i32 %v3_12fc0, i32* %stack_var_-8, align 4
  %v0_12fcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fcc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fcc, -4095
  br i1 %tmp, label %dec_label_pc_12fec, label %dec_label_pc_12fdc

dec_label_pc_12fdc:                               ; preds = %dec_label_pc_12fc0
  %v0_12fdc = call i32 @function_134dc()
  %v0_12fe0 = load i32, i32* %r7.global-to-local, align 4
  %v1_12fe0 = sub i32 0, %v0_12fe0
  %v2_12fe4 = inttoptr i32 %v0_12fdc to i32*
  store i32 %v1_12fe0, i32* %v2_12fe4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12fec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fc0, %dec_label_pc_12fdc
  %v1_12ff0 = phi i32 [ %v0_12fcc, %dec_label_pc_12fc0 ], [ -1, %dec_label_pc_12fdc ]
  %v2_12fec = phi i32 [ %v3_12fc0, %dec_label_pc_12fc0 ], [ %v2_12fec.pre, %dec_label_pc_12fdc ]
  store i32 %v2_12fec, i32* @r7, align 4
  ret i32 %v1_12ff0

; uselistorder directives
  uselistorder i32 %v0_12fcc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fec, { 1, 0 }
}

define i32 @function_12ff4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ff4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ff4 = load i32, i32* @r7, align 4
  store i32 %v3_12ff4, i32* %stack_var_-8, align 4
  %v0_13000 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13000, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13000, -4095
  br i1 %tmp, label %dec_label_pc_13020, label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %dec_label_pc_12ff4
  %v0_13010 = call i32 @function_134dc()
  %v0_13014 = load i32, i32* %r7.global-to-local, align 4
  %v1_13014 = sub i32 0, %v0_13014
  %v2_13018 = inttoptr i32 %v0_13010 to i32*
  store i32 %v1_13014, i32* %v2_13018, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13020.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %dec_label_pc_12ff4, %dec_label_pc_13010
  %v1_13024 = phi i32 [ %v0_13000, %dec_label_pc_12ff4 ], [ -1, %dec_label_pc_13010 ]
  %v2_13020 = phi i32 [ %v3_12ff4, %dec_label_pc_12ff4 ], [ %v2_13020.pre, %dec_label_pc_13010 ]
  store i32 %v2_13020, i32* @r7, align 4
  ret i32 %v1_13024

; uselistorder directives
  uselistorder i32 %v0_13000, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13020, { 1, 0 }
}

define i32 @function_13028(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13028:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_13028 = load i32, i32* @r3, align 4
  store i32 %v9_13028, i32* %stack_var_-4, align 4
  %v2_13034 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_13034, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13068, label %dec_label_pc_13058

dec_label_pc_13058:                               ; preds = %dec_label_pc_13028
  %v0_13058 = call i32 @function_134dc()
  %v0_1305c = load i32, i32* %r7.global-to-local, align 4
  %v1_1305c = sub i32 0, %v0_1305c
  store i32 %v1_1305c, i32* @r3, align 4
  %v2_13060 = inttoptr i32 %v0_13058 to i32*
  store i32 %v1_1305c, i32* %v2_13060, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %dec_label_pc_13028, %dec_label_pc_13058
  %v0_13068 = phi i32 [ %arg1, %dec_label_pc_13028 ], [ -1, %dec_label_pc_13058 ]
  ret i32 %v0_13068

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13068, { 1, 0 }
}

define i32 @function_1307c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1307c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1307c = load i32, i32* @r7, align 4
  store i32 %v3_1307c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_130a8, label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_1307c
  %v0_13098 = call i32 @function_134dc()
  %v0_1309c = load i32, i32* %r7.global-to-local, align 4
  %v1_1309c = sub i32 0, %v0_1309c
  %v2_130a0 = inttoptr i32 %v0_13098 to i32*
  store i32 %v1_1309c, i32* %v2_130a0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_130ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %dec_label_pc_1307c, %dec_label_pc_13098
  %v2_130ac = phi i32 [ %v3_1307c, %dec_label_pc_1307c ], [ %v2_130ac.pre, %dec_label_pc_13098 ]
  %v0_130a8 = phi i32 [ %arg1, %dec_label_pc_1307c ], [ -1, %dec_label_pc_13098 ]
  store i32 %v2_130ac, i32* @r7, align 4
  ret i32 %v0_130a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130a8, { 1, 0 }
}

define i32 @function_130b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_130b4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130b4 = load i32, i32* @r7, align 4
  store i32 %v3_130b4, i32* %stack_var_-8, align 4
  %v0_130c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130c0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130c0, -4095
  br i1 %tmp, label %dec_label_pc_130e0, label %dec_label_pc_130d0

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130b4
  %v0_130d0 = call i32 @function_134dc()
  %v0_130d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_130d4 = sub i32 0, %v0_130d4
  store i32 %v1_130d4, i32* @r3, align 4
  %v2_130d8 = inttoptr i32 %v0_130d0 to i32*
  store i32 %v1_130d4, i32* %v2_130d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_130e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_130e0

dec_label_pc_130e0:                               ; preds = %dec_label_pc_130b4, %dec_label_pc_130d0
  %v1_130e4 = phi i32 [ %v0_130c0, %dec_label_pc_130b4 ], [ -1, %dec_label_pc_130d0 ]
  %v2_130e0 = phi i32 [ %v3_130b4, %dec_label_pc_130b4 ], [ %v2_130e0.pre, %dec_label_pc_130d0 ]
  store i32 %v2_130e0, i32* @r7, align 4
  ret i32 %v1_130e4

; uselistorder directives
  uselistorder i32 %v0_130c0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_130e0, { 1, 0 }
}

define i32 @function_130e8(i32* %arg1) local_unnamed_addr {
dec_label_pc_130e8:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_130e8 = load i32, i32* @r4, align 4
  store i32 %v3_130e8, i32* %stack_var_-24, align 4
  %v9_130e8 = load i32, i32* @r6, align 4
  %v12_130e8 = load i32, i32* @r7, align 4
  %v15_130e8 = load i32, i32* @r8, align 4
  %v18_130e8 = load i32, i32* @lr, align 4
  %v2_130ec = load i32, i32* %arg1, align 4
  store i32 %v2_130ec, i32* %r4.global-to-local, align 4
  %v3_130f4 = icmp eq i32 %v2_130ec, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 135656, i32* @r6, align 4
  br i1 %v3_130f4, label %dec_label_pc_13108, label %dec_label_pc_1311c

dec_label_pc_13108:                               ; preds = %dec_label_pc_130e8
  %v0_13108 = call i32 @function_134dc()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_13110 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13110, i32* %r2.global-to-local, align 4
  %v2_13114 = inttoptr i32 %v0_13108 to i32*
  store i32 9, i32* %v2_13114, align 4
  %v0_131bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_131bc

dec_label_pc_1311c:                               ; preds = %dec_label_pc_130e8
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_13120 = add i32 %tmp, 24
  store i32 %v1_13120, i32* %r4.global-to-local, align 4
  store i32 %v1_13120, i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13134 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_13134)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1314c = load i32, i32* @r6, align 4
  %v2_1314c = add i32 %v0_1314c, 16
  %v3_1314c = inttoptr i32 %v2_1314c to i32*
  %v4_1314c = load i32, i32* %v3_1314c, align 4
  call void @__pseudo_branch(i32 %v4_1314c)
  %v0_13158 = load i32, i32* @r7, align 4
  %v1_13158 = inttoptr i32 %v0_13158 to i32*
  %v2_13158 = load i32, i32* %v1_13158, align 4
  store i32 %v2_13158, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_13168 = load i32, i32* @r8, align 4
  store i32 %v0_13168, i32* %v1_13158, align 4
  %v0_1316c = load i32, i32* @r6, align 4
  %v1_1316c = load i32, i32* %r3.global-to-local, align 4
  %v2_1316c = add i32 %v1_1316c, %v0_1316c
  %v3_1316c = inttoptr i32 %v2_1316c to i32*
  %v4_1316c = load i32, i32* %v3_1316c, align 4
  store i32 ptrtoint (i32* @global_var_13178.745 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1316c)
  %v0_13178 = load i32, i32* @r7, align 4
  %v1_13178 = add i32 %v0_13178, 12
  %v2_13178 = inttoptr i32 %v1_13178 to i32*
  %v3_13178 = load i32, i32* %v2_13178, align 4
  store i32 %v3_13178, i32* @r0, align 4
  %v0_1317c = call i32 @function_14b78()
  %v0_13180 = load i32, i32* @r7, align 4
  store i32 %v0_13180, i32* @r0, align 4
  %v0_13184 = call i32 @function_14b78()
  %v0_1318c = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_1318c, -4095
  br i1 %tmp11, label %dec_label_pc_131b8, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %dec_label_pc_1311c
  %v0_131a8 = call i32 @function_134dc()
  %v0_131ac = load i32, i32* @r4, align 4
  %v1_131ac = sub i32 0, %v0_131ac
  store i32 %v1_131ac, i32* %r3.global-to-local, align 4
  %v2_131b0 = inttoptr i32 %v0_131a8 to i32*
  store i32 %v1_131ac, i32* %v2_131b0, align 4
  %v0_131b4 = load i32, i32* @r8, align 4
  br label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_1311c, %dec_label_pc_131a8
  %v0_131b8 = phi i32 [ %v0_1318c, %dec_label_pc_1311c ], [ %v0_131b4, %dec_label_pc_131a8 ]
  store i32 %v0_131b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_131bc

dec_label_pc_131bc:                               ; preds = %dec_label_pc_13108, %dec_label_pc_131b8
  %v0_131bc = phi i32 [ %v0_131bc.pre, %dec_label_pc_13108 ], [ %v0_131b8, %dec_label_pc_131b8 ]
  %v2_131c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_131c4, i32* @r4, align 4
  store i32 %v9_130e8, i32* @r6, align 4
  store i32 %v12_130e8, i32* @r7, align 4
  store i32 %v15_130e8, i32* @r8, align 4
  store i32 %v18_130e8, i32* @lr, align 4
  ret i32 %v0_131bc

; uselistorder directives
  uselistorder i32 %v0_1318c, { 1, 0 }
  uselistorder label %dec_label_pc_131bc, { 1, 0 }
  uselistorder label %dec_label_pc_131b8, { 1, 0 }
}

define i32 @function_131d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_131d0:
  %v0_131d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_131d0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_131d0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_131d0, %bb
  %v10_131dc = phi i32 [ %arg1, %dec_label_pc_131d0 ], [ 0, %bb ]
  ret i32 %v10_131dc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_131e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_131e0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_131e0 = load i32, i32* @r5, align 4
  %v9_131e0 = load i32, i32* @r6, align 4
  %v12_131e0 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_131f4 = call i32 @function_13b0c()
  %v2_131fc = icmp eq i32 %v0_131f4, 0
  store i32 135656, i32* @r6, align 4
  br i1 %v2_131fc, label %bb, label %dec_label_pc_1320c

bb:                                               ; preds = %dec_label_pc_131e0
  br label %dec_label_pc_13298

dec_label_pc_1320c:                               ; preds = %dec_label_pc_131e0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13210 = load i32, i32* @r4, align 4
  %v2_13210 = icmp ugt i32 %v0_13210, 511
  %v2_13214 = add i32 %v0_131f4, 4
  %v3_13214 = inttoptr i32 %v2_13214 to i32*
  store i32 0, i32* %v3_13214, align 4
  %v0_13218 = load i32, i32* %r3.global-to-local, align 4
  %v2_13218 = add i32 %v0_131f4, 16
  %v3_13218 = inttoptr i32 %v2_13218 to i32*
  store i32 %v0_13218, i32* %v3_13218, align 4
  %v0_1321c = load i32, i32* %r3.global-to-local, align 4
  %v2_1321c = add i32 %v0_131f4, 8
  %v3_1321c = inttoptr i32 %v2_1321c to i32*
  store i32 %v0_1321c, i32* %v3_1321c, align 4
  br i1 %v2_13210, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1320c
  %v0_132242 = load i32, i32* @r4, align 4
  %v2_132243 = add i32 %v0_131f4, 20
  %v3_132244 = inttoptr i32 %v2_132243 to i32*
  store i32 %v0_132242, i32* %v3_132244, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1320c
  %v1_13220 = load i32, i32* %r3.global-to-local, align 4
  %v2_13220 = add i32 %v1_13220, 512
  store i32 %v2_13220, i32* %r3.global-to-local, align 4
  %v0_13224 = load i32, i32* @r4, align 4
  %v2_13224 = add i32 %v0_131f4, 20
  %v3_13224 = inttoptr i32 %v2_13224 to i32*
  store i32 %v0_13224, i32* %v3_13224, align 4
  %v1_13228 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_13228, i32* %v3_13224, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_131f4, i32* @r5, align 4
  %v0_13230 = load i32, i32* @r7, align 4
  %v2_13230 = inttoptr i32 %v0_131f4 to i32*
  store i32 %v0_13230, i32* %v2_13230, align 4
  %v0_13234 = load i32, i32* @r5, align 4
  %v1_13234 = add i32 %v0_13234, 20
  %v2_13234 = inttoptr i32 %v1_13234 to i32*
  %v3_13234 = load i32, i32* %v2_13234, align 4
  store i32 %v3_13234, i32* %r1.global-to-local, align 4
  %v2_1323c = call i32 @function_1442c(i32 1, i32 %v3_13234)
  %v2_13240 = icmp eq i32 %v2_1323c, 0
  store i32 %v2_1323c, i32* @r4, align 4
  %v1_13248 = load i32, i32* @r5, align 4
  %v2_13248 = add i32 %v1_13248, 12
  %v3_13248 = inttoptr i32 %v2_13248 to i32*
  store i32 %v2_1323c, i32* %v3_13248, align 4
  br i1 %v2_13240, label %dec_label_pc_13250, label %dec_label_pc_13260

dec_label_pc_13250:                               ; preds = %bb17
  %v0_13250 = load i32, i32* @r5, align 4
  store i32 %v0_13250, i32* @r0, align 4
  %v0_13254 = call i32 @function_14b78()
  %v0_13258 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13298

dec_label_pc_13260:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_13288 = load i32, i32* @r5, align 4
  %v1_13288 = add i32 %v0_13288, 24
  %v1_1328c = inttoptr i32 %v1_13288 to i32*
  store i32 0, i32* %v1_1328c, align 4
  %v3_1328c = add i32 %v0_13288, 28
  %v4_1328c = inttoptr i32 %v3_1328c to i32*
  %v5_1328c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1328c, i32* %v4_1328c, align 4
  %v6_1328c = add i32 %v0_13288, 32
  %v7_1328c = inttoptr i32 %v6_1328c to i32*
  %v8_1328c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1328c, i32* %v7_1328c, align 4
  %v9_1328c = add i32 %v0_13288, 36
  %v10_1328c = inttoptr i32 %v9_1328c to i32*
  %v11_1328c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1328c, i32* %v10_1328c, align 4
  %v12_1328c = add i32 %v0_13288, 40
  %v2_13290 = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_13294 = inttoptr i32 %v12_1328c to i32*
  store i32 %v2_13290, i32* %v1_13294, align 4
  %v3_13294 = add i32 %v0_13288, 44
  %v4_13294 = inttoptr i32 %v3_13294 to i32*
  %v5_13294 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13294, i32* %v4_13294, align 4
  %v0_13298.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13298

dec_label_pc_13298:                               ; preds = %bb, %dec_label_pc_13250, %dec_label_pc_13260
  %v0_13298 = phi i32 [ 0, %bb ], [ %v0_13258, %dec_label_pc_13250 ], [ %v0_13298.pre, %dec_label_pc_13260 ]
  store i32 %v6_131e0, i32* @r5, align 4
  store i32 %v9_131e0, i32* @r6, align 4
  store i32 %v12_131e0, i32* @r7, align 4
  ret i32 %v0_13298

; uselistorder directives
  uselistorder i32 %v2_1323c, { 1, 0, 2 }
  uselistorder i32 %v0_131f4, { 4, 3, 6, 0, 1, 5, 2, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 512, { 11, 10, 1, 6, 2, 7, 12, 8, 13, 9, 14, 3, 15, 4, 16, 0, 17, 5, 18 }
  uselistorder label %dec_label_pc_13298, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_132b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_132b0:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v6_132b0 = load i32, i32* @r7, align 4
  %v2_132b8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_132e0, label %dec_label_pc_132d0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_132b0
  %v0_132d0 = call i32 @function_134dc()
  %v0_132d4 = load i32, i32* @r7, align 4
  %v1_132d4 = sub i32 0, %v0_132d4
  %v2_132d8 = inttoptr i32 %v0_132d0 to i32*
  store i32 %v1_132d4, i32* %v2_132d8, align 4
  br label %dec_label_pc_13304

dec_label_pc_132e0:                               ; preds = %dec_label_pc_132b0
  %v1_132e0 = icmp slt i32 %arg1, 0
  br i1 %v1_132e0, label %dec_label_pc_13304, label %dec_label_pc_132e8

dec_label_pc_132e8:                               ; preds = %dec_label_pc_132e0
  store i32 %v2_132b8, i32* @r1, align 4
  %v0_132ec = call i32 @function_15e2c()
  %v1_132f0 = icmp slt i32 %v0_132ec, 0
  br i1 %v1_132f0, label %dec_label_pc_132f8, label %dec_label_pc_1330c

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132e8
  br label %dec_label_pc_13304

dec_label_pc_13304:                               ; preds = %dec_label_pc_132f8, %dec_label_pc_132e0, %dec_label_pc_132d0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_1330c:                               ; preds = %dec_label_pc_132e8
  %v0_13314 = load i32, i32* @r7, align 4
  %v3_13318 = call i32 @function_12f54(i32 %v0_13314, i32 2, i32 1)
  %v0_1331c = load i32, i32* @r7, align 4
  %v2_13324 = call i32 @function_131e0(i32 %v0_1331c, i32 %tmp)
  store i32 %v2_13324, i32* %r4.global-to-local, align 4
  %v2_13328 = icmp eq i32 %v2_13324, 0
  br i1 %v2_13328, label %dec_label_pc_13330, label %dec_label_pc_13348

dec_label_pc_13330:                               ; preds = %dec_label_pc_1330c
  %v0_1333c = call i32 @function_134dc()
  %v2_13344 = inttoptr i32 %v0_1333c to i32*
  store i32 12, i32* %v2_13344, align 4
  %v0_13348.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_1330c, %dec_label_pc_13304, %dec_label_pc_13330
  %v0_13348 = phi i32 [ %v2_13324, %dec_label_pc_1330c ], [ 0, %dec_label_pc_13304 ], [ %v0_13348.pre, %dec_label_pc_13330 ]
  store i32 %v6_132b0, i32* @r7, align 4
  ret i32 %v0_13348

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13348, { 2, 0, 1 }
}

define i32 @function_13358(i32 %arg1) local_unnamed_addr {
dec_label_pc_13358:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_13358 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13358, label %bb, label %dec_label_pc_13358._crit_edge

dec_label_pc_13358._crit_edge:                    ; preds = %dec_label_pc_13358
  br label %bb11

bb:                                               ; preds = %dec_label_pc_13358
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_13358._crit_edge, %bb
  %v2_13360 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_13360, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1336c = call i32 @function_15e2c()
  store i32 %v0_1336c, i32* @r5, align 4
  %v2_13370 = icmp eq i32 %v0_1336c, 0
  br i1 %v2_13370, label %dec_label_pc_13378, label %dec_label_pc_133e0

dec_label_pc_13378:                               ; preds = %bb11
  %v1_1337c = and i32 %tmp5, 61440
  store i32 %v1_1337c, i32* @r3, align 4
  %v7_13380 = icmp eq i32 %v1_1337c, 16384
  br i1 %v7_13380, label %dec_label_pc_13398, label %dec_label_pc_13388

dec_label_pc_13388:                               ; preds = %dec_label_pc_13378
  %v0_13388 = call i32 @function_134dc()
  br label %dec_label_pc_133c4

dec_label_pc_13398:                               ; preds = %dec_label_pc_13378
  %v0_13398 = load i32, i32* @r4, align 4
  %v2_133a0 = call i32 @function_12ee8(i32 %v0_13398, i32 3)
  %v7_133a4 = icmp eq i32 %v2_133a0, -1
  br i1 %v7_133a4, label %dec_label_pc_133e0, label %dec_label_pc_133ac

dec_label_pc_133ac:                               ; preds = %dec_label_pc_13398
  %v1_133ac = urem i32 %v2_133a0, 4
  %v7_133b0 = icmp eq i32 %v1_133ac, 1
  br i1 %v7_133b0, label %dec_label_pc_133b8, label %dec_label_pc_133cc

dec_label_pc_133b8:                               ; preds = %dec_label_pc_133ac
  %v0_133b8 = call i32 @function_134dc()
  br label %dec_label_pc_133c4

dec_label_pc_133c4:                               ; preds = %dec_label_pc_13388, %dec_label_pc_133b8
  %storemerge2 = phi i32 [ %v0_13388, %dec_label_pc_13388 ], [ %v0_133b8, %dec_label_pc_133b8 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_13388 ], [ 22, %dec_label_pc_133b8 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_133c4 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_133c4, align 4
  %v0_133e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_133e4

dec_label_pc_133cc:                               ; preds = %dec_label_pc_133ac
  %v0_133cc = load i32, i32* @r4, align 4
  %v2_133d4 = call i32 @function_131e0(i32 %v0_133cc, i32 %tmp)
  store i32 %v2_133d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_133e4

dec_label_pc_133e0:                               ; preds = %bb11, %dec_label_pc_13398
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_133e4

dec_label_pc_133e4:                               ; preds = %dec_label_pc_133cc, %dec_label_pc_133c4, %dec_label_pc_133e0
  %v0_133e4 = phi i32 [ %v2_133d4, %dec_label_pc_133cc ], [ %v0_133e4.pre, %dec_label_pc_133c4 ], [ 0, %dec_label_pc_133e0 ]
  ret i32 %v0_133e4

; uselistorder directives
  uselistorder i32 %v2_133a0, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_131e0, { 1, 0 }
  uselistorder i32 ()* @function_15e2c, { 1, 0 }
  uselistorder label %dec_label_pc_133e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133e0, { 1, 0 }
  uselistorder label %dec_label_pc_133c4, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_133f4(i32* %arg1) local_unnamed_addr {
dec_label_pc_133f4:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_133f4 = load i32, i32* @r4, align 4
  %v6_133f4 = load i32, i32* @r5, align 4
  %v9_133f4 = load i32, i32* @r6, align 4
  %v12_133f4 = load i32, i32* @r7, align 4
  %v15_133f4 = load i32, i32* @lr, align 4
  store i32 135656, i32* @r6, align 4
  %v1_13408 = add i32 %tmp, 24
  store i32 %v1_13408, i32* @r4, align 4
  %v4_1340c = load i32, i32* inttoptr (i32 135692 to i32*), align 4
  store i32 %v4_1340c, i32* %r1.global-to-local, align 4
  store i32 %v1_13408, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_13420 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_13420)
  %v0_13434 = load i32, i32* @r6, align 4
  %v2_13434 = add i32 %v0_13434, 16
  %v3_13434 = inttoptr i32 %v2_13434 to i32*
  %v4_13434 = load i32, i32* %v3_13434, align 4
  store i32 %v4_13434, i32* @ip, align 4
  store i32 78912, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13434)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %dec_label_pc_13474, %dec_label_pc_133f4
  %v0_13444 = load i32, i32* @r5, align 4
  %v1_13444 = add i32 %v0_13444, 4
  %v2_13444 = inttoptr i32 %v1_13444 to i32*
  %v3_13444 = load i32, i32* %v2_13444, align 4
  store i32 %v3_13444, i32* %r2.global-to-local, align 4
  %v4_13444 = add i32 %v0_13444, 8
  %v5_13444 = inttoptr i32 %v4_13444 to i32*
  %v6_13444 = load i32, i32* %v5_13444, align 4
  %tmp10 = icmp ugt i32 %v6_13444, %v3_13444
  br i1 %tmp10, label %dec_label_pc_13474, label %dec_label_pc_13450

dec_label_pc_13450:                               ; preds = %dec_label_pc_13444
  %v1_13450 = inttoptr i32 %v0_13444 to i32*
  %v2_13450 = load i32, i32* %v1_13450, align 4
  %v1_13454 = add i32 %v0_13444, 12
  %v2_13454 = inttoptr i32 %v1_13454 to i32*
  %v3_13454 = load i32, i32* %v2_13454, align 4
  store i32 %v3_13454, i32* %r1.global-to-local, align 4
  %v1_13458 = add i32 %v0_13444, 20
  %v2_13458 = inttoptr i32 %v1_13458 to i32*
  %v3_13458 = load i32, i32* %v2_13458, align 4
  store i32 %v3_13458, i32* %r2.global-to-local, align 4
  %v4_1345c = call i32 @function_15d98(i32 %v2_13450, i32 %v3_13454, i32 %v3_13458, i32 %v6_13444)
  %tmp9 = icmp slt i32 %v4_1345c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1346c

.thread:                                          ; preds = %dec_label_pc_13450
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_134a0

dec_label_pc_1346c:                               ; preds = %dec_label_pc_13450
  %v1_1346c = load i32, i32* @r5, align 4
  %v2_1346c = add i32 %v1_1346c, 8
  %v3_1346c = inttoptr i32 %v2_1346c to i32*
  store i32 %v4_1345c, i32* %v3_1346c, align 4
  %v0_13470 = load i32, i32* @r7, align 4
  %v1_13470 = load i32, i32* @r5, align 4
  %v2_13470 = add i32 %v1_13470, 4
  %v3_13470 = inttoptr i32 %v2_13470 to i32*
  store i32 %v0_13470, i32* %v3_13470, align 4
  %v0_13474.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13444, %dec_label_pc_1346c
  %v1_13484 = phi i32 [ %v0_13444, %dec_label_pc_13444 ], [ %v0_13474.pre, %dec_label_pc_1346c ]
  %v1_13474 = add i32 %v1_13484, 4
  %v2_13474 = inttoptr i32 %v1_13474 to i32*
  %v3_13474 = load i32, i32* %v2_13474, align 4
  store i32 %v3_13474, i32* %r2.global-to-local, align 4
  %v1_13478 = add i32 %v1_13484, 12
  %v2_13478 = inttoptr i32 %v1_13478 to i32*
  %v3_13478 = load i32, i32* %v2_13478, align 4
  store i32 %v3_13478, i32* %r1.global-to-local, align 4
  %v2_1347c = add i32 %v3_13478, %v3_13474
  store i32 %v2_1347c, i32* @r4, align 4
  %v1_13480 = add i32 %v2_1347c, 4
  %v2_13480 = inttoptr i32 %v1_13480 to i32*
  %v3_13480 = load i32, i32* %v2_13480, align 4
  %v2_13484 = add i32 %v1_13484, 16
  %v3_13484 = inttoptr i32 %v2_13484 to i32*
  store i32 %v3_13480, i32* %v3_13484, align 4
  %v0_13488 = load i32, i32* @r4, align 4
  %v1_13488 = add i32 %v0_13488, 8
  %v2_13488 = inttoptr i32 %v1_13488 to i16*
  %v3_13488 = load i16, i16* %v2_13488, align 2
  %v4_13488 = zext i16 %v3_13488 to i32
  %v0_1348c = load i32, i32* %r2.global-to-local, align 4
  %v1_1348c = load i32, i32* %r1.global-to-local, align 4
  %v2_1348c = add i32 %v1_1348c, %v0_1348c
  %v3_1348c = inttoptr i32 %v2_1348c to i32*
  %v4_1348c = load i32, i32* %v3_1348c, align 4
  store i32 %v4_1348c, i32* %r1.global-to-local, align 4
  %v2_13490 = add i32 %v0_1348c, %v4_13488
  %v2_13494 = icmp eq i32 %v4_1348c, 0
  %v1_13498 = load i32, i32* @r5, align 4
  %v2_13498 = add i32 %v1_13498, 4
  %v3_13498 = inttoptr i32 %v2_13498 to i32*
  store i32 %v2_13490, i32* %v3_13498, align 4
  br i1 %v2_13494, label %dec_label_pc_13444, label %dec_label_pc_134a0

dec_label_pc_134a0:                               ; preds = %dec_label_pc_13474, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_134ac = load i32, i32* @r6, align 4
  %v2_134ac = add i32 %v0_134ac, 24
  %v3_134ac = inttoptr i32 %v2_134ac to i32*
  %v4_134ac = load i32, i32* %v3_134ac, align 4
  call void @__pseudo_branch(i32 %v4_134ac)
  %v0_134b8 = load i32, i32* @r4, align 4
  store i32 %v3_133f4, i32* @r4, align 4
  store i32 %v6_133f4, i32* @r5, align 4
  store i32 %v9_133f4, i32* @r6, align 4
  store i32 %v12_133f4, i32* @r7, align 4
  store i32 %v15_133f4, i32* @lr, align 4
  ret i32 %v0_134b8

; uselistorder directives
  uselistorder i32 %v1_13484, { 0, 2, 1 }
  uselistorder i32 %v6_13444, { 1, 0 }
  uselistorder i32 %v0_13444, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_13474, { 1, 0 }
}

define i32 @function_134cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_134cc:
  %v0_134cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_134cc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_134cc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_134cc, %bb
  %v10_134d8 = phi i32 [ %arg1, %dec_label_pc_134cc ], [ 0, %bb ]
  ret i32 %v10_134d8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_134dc() local_unnamed_addr {
dec_label_pc_134dc:
  store i32 135656, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_214a0.762 to i32)
}

define i32 @function_134f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_134f8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_134fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_134fc, i32* @r0, align 4
  %v1_13504 = call i32 @function_16208(i32 %v2_134fc)
  %v2_13508 = load i32, i32* %stack_var_-24, align 4
  %v2_1350c = add i32 %v2_13508, %tmp
  %v2_13514 = mul i32 %v2_1350c, 10000
  %v1_13518 = and i32 %v2_13514, 2147483632
  ret i32 %v1_13518

; uselistorder directives
  uselistorder i32 %v2_134fc, { 1, 0 }
}

define i32 @function_13528(i32 %arg1) local_unnamed_addr {
dec_label_pc_13528:
  %v0_13528 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13528, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_13528
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_13528, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_13530(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13530:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_13534 = load i32, i32* @r2, align 4
  %v8_13534 = icmp eq i32 %v0_13534, 8
  store i1 %v8_13534, i1* %cpsr_z.global-to-local, align 1
  %v5_13538 = icmp slt i32 %v0_13534, 8
  br i1 %v5_13538, label %dec_label_pc_13598, label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13530
  %v4_1353c = mul i32 %arg2, 256
  %v5_1353c = or i32 %v4_1353c, %arg2
  %v4_13540 = mul i32 %v5_1353c, 65536
  %v5_13540 = or i32 %v4_13540, %v5_1353c
  store i32 %v5_13540, i32* %r1.global-to-local, align 4
  %v1_1354457 = urem i32 %tmp, 4
  %v2_1354458 = icmp eq i32 %v1_1354457, 0
  store i1 %v2_1354458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1354458, label %dec_label_pc_13554, label %bb

bb:                                               ; preds = %dec_label_pc_1353c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1353c ]
  %v3_1354859 = phi i32 [ %v6_13548, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1353c ]
  %v4_13548 = inttoptr i32 %v3_1354859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13548, align 1
  %v5_13548 = load i32, i32* @r3, align 4
  %v6_13548 = add i32 %v5_13548, 1
  store i32 %v6_13548, i32* @r3, align 4
  %v0_1354c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13558.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1354c.pr, label %dec_label_pc_13554, label %.thread

.thread:                                          ; preds = %bb
  %v2_1354c = add i32 %v0_13558.pr.pre, -1
  store i32 %v2_1354c, i32* @r2, align 4
  %v1_13544 = urem i32 %v6_13548, 4
  %v2_13544 = icmp eq i32 %v1_13544, 0
  store i1 %v2_13544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13544, label %dec_label_pc_13554, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13548.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13548.pre to i8
  br label %bb

dec_label_pc_13554:                               ; preds = %.thread, %bb, %dec_label_pc_1353c
  %v0_1356028 = phi i32 [ %tmp, %dec_label_pc_1353c ], [ %v6_13548, %bb ], [ %v6_13548, %.thread ]
  %v0_13558.pr = phi i32 [ %v0_13534, %dec_label_pc_1353c ], [ %v0_13558.pr.pre, %bb ], [ %v2_1354c, %.thread ]
  %v0_13554 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13554, i32* @ip, align 4
  %v8_1355810 = icmp eq i32 %v0_13558.pr, 8
  store i1 %v8_1355810, i1* %cpsr_z.global-to-local, align 1
  %v5_1355c11 = icmp slt i32 %v0_13558.pr, 8
  br i1 %v5_1355c11, label %dec_label_pc_13598, label %dec_label_pc_13560.preheader

dec_label_pc_13560.preheader:                     ; preds = %dec_label_pc_13554
  %v1_1356046 = inttoptr i32 %v0_1356028 to i32*
  store i32 %v0_13554, i32* %v1_1356046, align 4
  %v3_1356047 = add i32 %v0_1356028, 4
  %v4_1356048 = inttoptr i32 %v3_1356047 to i32*
  %v5_1356049 = load i32, i32* @ip, align 4
  store i32 %v5_1356049, i32* %v4_1356048, align 4
  %v6_1356050 = add i32 %v0_1356028, 8
  store i32 %v6_1356050, i32* @r3, align 4
  %v0_1356451 = load i32, i32* @r2, align 4
  %v1_1356452 = add i32 %v0_1356451, -8
  store i32 %v1_1356452, i32* %r2.global-to-local, align 4
  %v5_1356c53 = icmp slt i32 %v1_1356452, 8
  br i1 %v5_1356c53, label %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13570

dec_label_pc_13570:                               ; preds = %dec_label_pc_13560.preheader, %dec_label_pc_13558.dec_label_pc_13560_crit_edge
  %v6_1356055 = phi i32 [ %v6_13560, %dec_label_pc_13558.dec_label_pc_13560_crit_edge ], [ %v6_1356050, %dec_label_pc_13560.preheader ]
  %v0_1356054 = phi i32 [ %v12_1358c, %dec_label_pc_13558.dec_label_pc_13560_crit_edge ], [ %v0_1356028, %dec_label_pc_13560.preheader ]
  %v1_13570 = inttoptr i32 %v6_1356055 to i32*
  %v2_13570 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13570, i32* %v1_13570, align 4
  %v3_13570 = add i32 %v0_1356054, 12
  %v4_13570 = inttoptr i32 %v3_13570 to i32*
  %v5_13570 = load i32, i32* @ip, align 4
  store i32 %v5_13570, i32* %v4_13570, align 4
  %v6_13570 = add i32 %v0_1356054, 16
  store i32 %v6_13570, i32* @r3, align 4
  %v0_13574 = load i32, i32* %r2.global-to-local, align 4
  %v1_13574 = add i32 %v0_13574, -8
  store i32 %v1_13574, i32* %r2.global-to-local, align 4
  %v5_1357c = icmp slt i32 %v1_13574, 8
  br i1 %v5_1357c, label %dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_13570
  %v1_13580 = inttoptr i32 %v6_13570 to i32*
  %v2_13580 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13580, i32* %v1_13580, align 4
  %v3_13580 = add i32 %v0_1356054, 20
  %v4_13580 = inttoptr i32 %v3_13580 to i32*
  %v5_13580 = load i32, i32* @ip, align 4
  store i32 %v5_13580, i32* %v4_13580, align 4
  %v6_13580 = add i32 %v0_1356054, 24
  store i32 %v6_13580, i32* @r3, align 4
  %v0_13584 = load i32, i32* %r2.global-to-local, align 4
  %v1_13584 = add i32 %v0_13584, -8
  store i32 %v1_13584, i32* %r2.global-to-local, align 4
  %v5_1358c = icmp slt i32 %v1_13584, 8
  br i1 %v5_1358c, label %dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_13580
  %v7_1358c = inttoptr i32 %v6_13580 to i32*
  %v8_1358c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1358c, i32* %v7_1358c, align 4
  %v9_1358c = add i32 %v0_1356054, 28
  %v10_1358c = inttoptr i32 %v9_1358c to i32*
  %v11_1358c = load i32, i32* @ip, align 4
  store i32 %v11_1358c, i32* %v10_1358c, align 4
  %v12_1358c = add i32 %v0_1356054, 32
  store i32 %v12_1358c, i32* @r3, align 4
  %v6_13590 = load i32, i32* %r2.global-to-local, align 4
  %v7_13590 = add i32 %v6_13590, -8
  store i32 %v7_13590, i32* %r2.global-to-local, align 4
  %v5_1355c = icmp slt i32 %v7_13590, 8
  br i1 %v5_1355c, label %dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13558.dec_label_pc_13560_crit_edge

dec_label_pc_13558.dec_label_pc_13560_crit_edge:  ; preds = %dec_label_pc_13558
  %v2_13560.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13560 = inttoptr i32 %v12_1358c to i32*
  store i32 %v2_13560.pre, i32* %v1_13560, align 4
  %v3_13560 = add i32 %v0_1356054, 36
  %v4_13560 = inttoptr i32 %v3_13560 to i32*
  %v5_13560 = load i32, i32* @ip, align 4
  store i32 %v5_13560, i32* %v4_13560, align 4
  %v6_13560 = add i32 %v0_1356054, 40
  store i32 %v6_13560, i32* @r3, align 4
  %v0_13564 = load i32, i32* %r2.global-to-local, align 4
  %v1_13564 = add i32 %v0_13564, -8
  store i32 %v1_13564, i32* %r2.global-to-local, align 4
  %v5_1356c = icmp slt i32 %v1_13564, 8
  br i1 %v5_1356c, label %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge, label %dec_label_pc_13570

dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13558
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13558.dec_label_pc_13560_crit_edge, %dec_label_pc_13560.preheader
  %v1_13564.lcssa = phi i32 [ %v1_1356452, %dec_label_pc_13560.preheader ], [ %v1_13564, %dec_label_pc_13558.dec_label_pc_13560_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13570
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge: ; preds = %dec_label_pc_13580
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13598

dec_label_pc_13598:                               ; preds = %dec_label_pc_13554, %dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge, %dec_label_pc_13530
  %v0_135a0 = phi i32 [ %v0_13534, %dec_label_pc_13530 ], [ %v1_13584, %dec_label_pc_13580.dec_label_pc_13598.loopexit_crit_edge ], [ %v1_13574, %dec_label_pc_13570.dec_label_pc_13598.loopexit_crit_edge ], [ %v1_13564.lcssa, %dec_label_pc_13560.dec_label_pc_13598.loopexit_crit_edge ], [ %v7_13590, %dec_label_pc_13558.dec_label_pc_13598.loopexit_crit_edge ], [ %v0_13558.pr, %dec_label_pc_13554 ]
  %v2_13598 = icmp eq i32 %v0_135a0, 0
  store i1 %v2_13598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13598, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13598
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13598
  %v1_135a0 = sub i32 7, %v0_135a0
  store i32 %v1_135a0, i32* %r2.global-to-local, align 4
  %v3_135a4 = mul i32 %v1_135a0, 4
  %v4_135a4 = add i32 %v3_135a4, ptrtoint (i32* @global_var_135ac.764 to i32)
  call void @__pseudo_branch(i32 %v4_135a4)
  %v0_135ac = load i32, i32* %r1.global-to-local, align 4
  %v1_135ac = trunc i32 %v0_135ac to i8
  %v2_135ac = load i32, i32* @r3, align 4
  %v3_135ac = inttoptr i32 %v2_135ac to i8*
  store i8 %v1_135ac, i8* %v3_135ac, align 1
  %v4_135ac = load i32, i32* @r3, align 4
  %v5_135ac = add i32 %v4_135ac, 1
  store i32 %v5_135ac, i32* %r3.global-to-local, align 4
  %v0_135b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b0 = trunc i32 %v0_135b0 to i8
  %v3_135b0 = inttoptr i32 %v5_135ac to i8*
  store i8 %v1_135b0, i8* %v3_135b0, align 1
  %v4_135b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_135b0 = add i32 %v4_135b0, 1
  store i32 %v5_135b0, i32* %r3.global-to-local, align 4
  %v0_135b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b4 = trunc i32 %v0_135b4 to i8
  %v3_135b4 = inttoptr i32 %v5_135b0 to i8*
  store i8 %v1_135b4, i8* %v3_135b4, align 1
  %v4_135b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_135b4 = add i32 %v4_135b4, 1
  store i32 %v5_135b4, i32* %r3.global-to-local, align 4
  %v0_135b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_135b8 = trunc i32 %v0_135b8 to i8
  %v3_135b8 = inttoptr i32 %v5_135b4 to i8*
  store i8 %v1_135b8, i8* %v3_135b8, align 1
  %v4_135b8 = load i32, i32* %r3.global-to-local, align 4
  %v5_135b8 = add i32 %v4_135b8, 1
  store i32 %v5_135b8, i32* %r3.global-to-local, align 4
  %v0_135bc = load i32, i32* %r1.global-to-local, align 4
  %v1_135bc = trunc i32 %v0_135bc to i8
  %v3_135bc = inttoptr i32 %v5_135b8 to i8*
  store i8 %v1_135bc, i8* %v3_135bc, align 1
  %v4_135bc = load i32, i32* %r3.global-to-local, align 4
  %v5_135bc = add i32 %v4_135bc, 1
  store i32 %v5_135bc, i32* %r3.global-to-local, align 4
  %v0_135c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_135c0 = trunc i32 %v0_135c0 to i8
  %v3_135c0 = inttoptr i32 %v5_135bc to i8*
  store i8 %v1_135c0, i8* %v3_135c0, align 1
  %v4_135c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_135c0 = add i32 %v4_135c0, 1
  store i32 %v5_135c0, i32* %r3.global-to-local, align 4
  %v0_135c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_135c4 = trunc i32 %v0_135c4 to i8
  %v3_135c4 = inttoptr i32 %v5_135c0 to i8*
  store i8 %v1_135c4, i8* %v3_135c4, align 1
  %v4_135c4 = load i32, i32* %r3.global-to-local, align 4
  %v5_135c4 = add i32 %v4_135c4, 1
  store i32 %v5_135c4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13560, { 1, 0 }
  uselistorder i32 %v12_1358c, { 1, 2, 0 }
  uselistorder i32 %v0_1356054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13558.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13548, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1353c, { 1, 0 }
  uselistorder i32 %v0_13534, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13598, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13570, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_135d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_135d0:
  %v0_135d0 = call i32 @function_17480()
  ret i32 %v0_135d0
}

define i32 @function_135e0() local_unnamed_addr {
dec_label_pc_135e0:
  %v0_135e0 = call i32 @function_17480()
  ret i32 %v0_135e0
}

define i32 @function_135f0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_135f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_136001 = load i32, i32* @r1, align 4
  %v1_136002 = inttoptr i32 %v0_136001 to i8*
  %v2_136003 = load i8, i8* %v1_136002, align 1
  %v2_136045 = icmp eq i8 %v2_136003, 0
  store i1 %v2_136045, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_136003, i8* %arg1, align 1
  br i1 %v2_136045, label %dec_label_pc_13610, label %dec_label_pc_135f8

dec_label_pc_135f8:                               ; preds = %dec_label_pc_135f0, %dec_label_pc_135f8
  %v0_135f8 = load i32, i32* @r1, align 4
  %v1_135f8 = add i32 %v0_135f8, 1
  store i32 %v1_135f8, i32* @r1, align 4
  %v0_135fc = load i32, i32* %r2.global-to-local, align 4
  %v1_135fc = add i32 %v0_135fc, 1
  store i32 %v1_135fc, i32* %r2.global-to-local, align 4
  %v1_13600 = inttoptr i32 %v1_135f8 to i8*
  %v2_13600 = load i8, i8* %v1_13600, align 1
  %v2_13604 = icmp eq i8 %v2_13600, 0
  store i1 %v2_13604, i1* %cpsr_z.global-to-local, align 1
  %v3_13608 = inttoptr i32 %v1_135fc to i8*
  store i8 %v2_13600, i8* %v3_13608, align 1
  %v0_1360c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1360c, label %dec_label_pc_13610, label %dec_label_pc_135f8

dec_label_pc_13610:                               ; preds = %dec_label_pc_135f8, %dec_label_pc_135f0
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_135f8, { 1, 0 }
}

define i32 @function_13614(i32 %arg1) local_unnamed_addr {
dec_label_pc_13614:
  %stack_var_-12 = alloca i32, align 4
  %v2_1361c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1361c, i32* @r1, align 4
  %v0_13620 = call i32 @function_17cec()
  %v2_13624 = icmp eq i32 %v0_13620, 0
  %v4_13628 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_13624, i32 -1, i32 %v4_13628
  ret i32 %storemerge
}

define i32 @function_1363c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1363c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1363c = load i32, i32* @r7, align 4
  store i32 %v3_1363c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13664, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_1363c
  %v0_13654 = call i32 @function_134dc()
  %v0_13658 = load i32, i32* %r7.global-to-local, align 4
  %v1_13658 = sub i32 0, %v0_13658
  %v2_1365c = inttoptr i32 %v0_13654 to i32*
  store i32 %v1_13658, i32* %v2_1365c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_13668.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13664

dec_label_pc_13664:                               ; preds = %dec_label_pc_1363c, %dec_label_pc_13654
  %v2_13668 = phi i32 [ %v3_1363c, %dec_label_pc_1363c ], [ %v2_13668.pre, %dec_label_pc_13654 ]
  %v0_13664 = phi i32 [ %arg1, %dec_label_pc_1363c ], [ -1, %dec_label_pc_13654 ]
  store i32 %v2_13668, i32* @r7, align 4
  ret i32 %v0_13664

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13664, { 1, 0 }
}

define i32 @function_13674(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13674:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13674 = load i32, i32* @r7, align 4
  store i32 %v3_13674, i32* %stack_var_-8, align 4
  %v0_13680 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13680, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13680, -4095
  br i1 %tmp, label %dec_label_pc_136a0, label %dec_label_pc_13690

dec_label_pc_13690:                               ; preds = %dec_label_pc_13674
  %v0_13690 = call i32 @function_134dc()
  %v0_13694 = load i32, i32* %r7.global-to-local, align 4
  %v1_13694 = sub i32 0, %v0_13694
  %v2_13698 = inttoptr i32 %v0_13690 to i32*
  store i32 %v1_13694, i32* %v2_13698, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_136a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %dec_label_pc_13674, %dec_label_pc_13690
  %v1_136a4 = phi i32 [ %v0_13680, %dec_label_pc_13674 ], [ -1, %dec_label_pc_13690 ]
  %v2_136a0 = phi i32 [ %v3_13674, %dec_label_pc_13674 ], [ %v2_136a0.pre, %dec_label_pc_13690 ]
  store i32 %v2_136a0, i32* @r7, align 4
  ret i32 %v1_136a4

; uselistorder directives
  uselistorder i32 %v0_13680, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_136a0, { 1, 0 }
}

define i32 @function_136ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_136ac:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136ac = load i32, i32* @r7, align 4
  store i32 %v3_136ac, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_136d4, label %dec_label_pc_136c4

dec_label_pc_136c4:                               ; preds = %dec_label_pc_136ac
  %v0_136c4 = call i32 @function_134dc()
  %v0_136c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_136c8 = sub i32 0, %v0_136c8
  store i32 %v1_136c8, i32* @r3, align 4
  %v2_136cc = inttoptr i32 %v0_136c4 to i32*
  store i32 %v1_136c8, i32* %v2_136cc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_136d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_136d4

dec_label_pc_136d4:                               ; preds = %dec_label_pc_136ac, %dec_label_pc_136c4
  %v2_136d8 = phi i32 [ %v3_136ac, %dec_label_pc_136ac ], [ %v2_136d8.pre, %dec_label_pc_136c4 ]
  %v0_136d4 = phi i32 [ %arg1, %dec_label_pc_136ac ], [ -1, %dec_label_pc_136c4 ]
  store i32 %v2_136d8, i32* @r7, align 4
  ret i32 %v0_136d4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_136d4, { 1, 0 }
}

define i32 @function_136e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_136e4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136e4 = load i32, i32* @r7, align 4
  store i32 %v3_136e4, i32* %stack_var_-8, align 4
  %v0_136f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_136f0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_136f0, -4095
  br i1 %tmp, label %dec_label_pc_13710, label %dec_label_pc_13700

dec_label_pc_13700:                               ; preds = %dec_label_pc_136e4
  %v0_13700 = call i32 @function_134dc()
  %v0_13704 = load i32, i32* %r7.global-to-local, align 4
  %v1_13704 = sub i32 0, %v0_13704
  %v2_13708 = inttoptr i32 %v0_13700 to i32*
  store i32 %v1_13704, i32* %v2_13708, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13710.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13710

dec_label_pc_13710:                               ; preds = %dec_label_pc_136e4, %dec_label_pc_13700
  %v1_13714 = phi i32 [ %v0_136f0, %dec_label_pc_136e4 ], [ -1, %dec_label_pc_13700 ]
  %v2_13710 = phi i32 [ %v3_136e4, %dec_label_pc_136e4 ], [ %v2_13710.pre, %dec_label_pc_13700 ]
  store i32 %v2_13710, i32* @r7, align 4
  ret i32 %v1_13714

; uselistorder directives
  uselistorder i32 %v0_136f0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13710, { 1, 0 }
}

define i32 @function_1371c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1371c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13750, label %dec_label_pc_13740

dec_label_pc_13740:                               ; preds = %dec_label_pc_1371c
  %v0_13740 = call i32 @function_134dc()
  %v0_13744 = load i32, i32* %r4.global-to-local, align 4
  %v1_13744 = sub i32 0, %v0_13744
  %v2_13748 = inttoptr i32 %v0_13740 to i32*
  store i32 %v1_13744, i32* %v2_13748, align 4
  br label %dec_label_pc_13750

dec_label_pc_13750:                               ; preds = %dec_label_pc_1371c, %dec_label_pc_13740
  %v1_13758 = phi i32 [ %arg1, %dec_label_pc_1371c ], [ -1, %dec_label_pc_13740 ]
  ret i32 %v1_13758

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13750, { 1, 0 }
}

define i32 @function_13760(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13760:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13760 = load i32, i32* @r7, align 4
  store i32 %v3_13760, i32* %stack_var_-8, align 4
  %v0_1376c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1376c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1376c, -4095
  br i1 %tmp, label %dec_label_pc_1378c, label %dec_label_pc_1377c

dec_label_pc_1377c:                               ; preds = %dec_label_pc_13760
  %v0_1377c = call i32 @function_134dc()
  %v0_13780 = load i32, i32* %r7.global-to-local, align 4
  %v1_13780 = sub i32 0, %v0_13780
  %v2_13784 = inttoptr i32 %v0_1377c to i32*
  store i32 %v1_13780, i32* %v2_13784, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1378c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1378c

dec_label_pc_1378c:                               ; preds = %dec_label_pc_13760, %dec_label_pc_1377c
  %v1_13790 = phi i32 [ %v0_1376c, %dec_label_pc_13760 ], [ -1, %dec_label_pc_1377c ]
  %v2_1378c = phi i32 [ %v3_13760, %dec_label_pc_13760 ], [ %v2_1378c.pre, %dec_label_pc_1377c ]
  store i32 %v2_1378c, i32* @r7, align 4
  ret i32 %v1_13790

; uselistorder directives
  uselistorder i32 %v0_1376c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1378c, { 1, 0 }
}

define i32 @function_13794(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13794:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13794 = load i32, i32* @r7, align 4
  store i32 %v3_13794, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_137bc, label %dec_label_pc_137ac

dec_label_pc_137ac:                               ; preds = %dec_label_pc_13794
  %v0_137ac = call i32 @function_134dc()
  %v0_137b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_137b0 = sub i32 0, %v0_137b0
  %v2_137b4 = inttoptr i32 %v0_137ac to i32*
  store i32 %v1_137b0, i32* %v2_137b4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_137c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_137bc

dec_label_pc_137bc:                               ; preds = %dec_label_pc_13794, %dec_label_pc_137ac
  %v2_137c0 = phi i32 [ %v3_13794, %dec_label_pc_13794 ], [ %v2_137c0.pre, %dec_label_pc_137ac ]
  %v0_137bc = phi i32 [ %arg1, %dec_label_pc_13794 ], [ -1, %dec_label_pc_137ac ]
  store i32 %v2_137c0, i32* @r7, align 4
  ret i32 %v0_137bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_137bc, { 1, 0 }
}

define i32 @function_137cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_137cc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_137cc = load i32, i32* @r4, align 4
  store i32 %v3_137cc, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_137fc, label %dec_label_pc_137ec

dec_label_pc_137ec:                               ; preds = %dec_label_pc_137cc
  %v0_137ec = call i32 @function_134dc()
  %v0_137f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_137f0 = sub i32 0, %v0_137f0
  %v2_137f4 = inttoptr i32 %v0_137ec to i32*
  store i32 %v1_137f0, i32* %v2_137f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13800.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %dec_label_pc_137cc, %dec_label_pc_137ec
  %v2_13800 = phi i32 [ %v3_137cc, %dec_label_pc_137cc ], [ %v2_13800.pre, %dec_label_pc_137ec ]
  %v0_137fc = phi i32 [ %arg1, %dec_label_pc_137cc ], [ -1, %dec_label_pc_137ec ]
  store i32 %v2_13800, i32* @r4, align 4
  ret i32 %v0_137fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_137fc, { 1, 0 }
}

define i32 @function_13808(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13808:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13808 = load i32, i32* @r7, align 4
  store i32 %v3_13808, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13830, label %dec_label_pc_13820

dec_label_pc_13820:                               ; preds = %dec_label_pc_13808
  %v0_13820 = call i32 @function_134dc()
  %v0_13824 = load i32, i32* %r7.global-to-local, align 4
  %v1_13824 = sub i32 0, %v0_13824
  store i32 %v1_13824, i32* @r3, align 4
  %v2_13828 = inttoptr i32 %v0_13820 to i32*
  store i32 %v1_13824, i32* %v2_13828, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_13834.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13830

dec_label_pc_13830:                               ; preds = %dec_label_pc_13808, %dec_label_pc_13820
  %v2_13834 = phi i32 [ %v3_13808, %dec_label_pc_13808 ], [ %v2_13834.pre, %dec_label_pc_13820 ]
  %v0_13830 = phi i32 [ %arg1, %dec_label_pc_13808 ], [ -1, %dec_label_pc_13820 ]
  store i32 %v2_13834, i32* @r7, align 4
  ret i32 %v0_13830

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13830, { 1, 0 }
}

define i32 @function_13840(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13840:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13840 = load i32, i32* @r4, align 4
  store i32 %v3_13840, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13870, label %dec_label_pc_13860

dec_label_pc_13860:                               ; preds = %dec_label_pc_13840
  %v0_13860 = call i32 @function_134dc()
  %v0_13864 = load i32, i32* %r4.global-to-local, align 4
  %v1_13864 = sub i32 0, %v0_13864
  %v2_13868 = inttoptr i32 %v0_13860 to i32*
  store i32 %v1_13864, i32* %v2_13868, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13874.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13870

dec_label_pc_13870:                               ; preds = %dec_label_pc_13840, %dec_label_pc_13860
  %v2_13874 = phi i32 [ %v3_13840, %dec_label_pc_13840 ], [ %v2_13874.pre, %dec_label_pc_13860 ]
  %v0_13870 = phi i32 [ %arg1, %dec_label_pc_13840 ], [ -1, %dec_label_pc_13860 ]
  store i32 %v2_13874, i32* @r4, align 4
  ret i32 %v0_13870

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13870, { 1, 0 }
}

define i32 @function_13880(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13880:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_138b4, label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_13880
  %v0_138a4 = call i32 @function_134dc()
  %v0_138a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_138a8 = sub i32 0, %v0_138a8
  store i32 %v1_138a8, i32* @r3, align 4
  %v2_138ac = inttoptr i32 %v0_138a4 to i32*
  store i32 %v1_138a8, i32* %v2_138ac, align 4
  br label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %dec_label_pc_13880, %dec_label_pc_138a4
  %v1_138bc = phi i32 [ %arg1, %dec_label_pc_13880 ], [ -1, %dec_label_pc_138a4 ]
  ret i32 %v1_138bc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_138b4, { 1, 0 }
}

define i32 @function_138c4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_138c4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_138c4 = load i32, i32* @r7, align 4
  store i32 %v3_138c4, i32* %stack_var_-8, align 4
  %v0_138d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_138d0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_138d0, -4095
  br i1 %tmp, label %dec_label_pc_138f0, label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %dec_label_pc_138c4
  %v0_138e0 = call i32 @function_134dc()
  %v0_138e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_138e4 = sub i32 0, %v0_138e4
  store i32 %v1_138e4, i32* @r3, align 4
  %v2_138e8 = inttoptr i32 %v0_138e0 to i32*
  store i32 %v1_138e4, i32* %v2_138e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_138f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_138f0

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138c4, %dec_label_pc_138e0
  %v1_138f4 = phi i32 [ %v0_138d0, %dec_label_pc_138c4 ], [ -1, %dec_label_pc_138e0 ]
  %v2_138f0 = phi i32 [ %v3_138c4, %dec_label_pc_138c4 ], [ %v2_138f0.pre, %dec_label_pc_138e0 ]
  store i32 %v2_138f0, i32* @r7, align 4
  ret i32 %v1_138f4

; uselistorder directives
  uselistorder i32 %v0_138d0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_138f0, { 1, 0 }
}

define i32 @function_138fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_138fc:
  store i32 %arg1, i32* @r0, align 4
  %v3_138fc = load i32, i32* @r4, align 4
  %v0_13904 = call i32 @function_12d20()
  %v2_1390c = call i32 @function_12e80(i32 %v0_13904, i32 %arg1)
  store i32 %v3_138fc, i32* @r4, align 4
  ret i32 %v2_1390c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12e80, { 0, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_13918(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13918:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_13930, label %dec_label_pc_13928

dec_label_pc_13928:                               ; preds = %dec_label_pc_13918
  %v7_1392c = icmp slt i32 %arg1, 65
  br i1 %v7_1392c, label %dec_label_pc_13944, label %dec_label_pc_13930

dec_label_pc_13930:                               ; preds = %dec_label_pc_13928, %dec_label_pc_13918
  %v0_13930 = call i32 @function_134dc()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1393c = inttoptr i32 %v0_13930 to i32*
  store i32 22, i32* %v2_1393c, align 4
  %v0_1394c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1394c

dec_label_pc_13944:                               ; preds = %dec_label_pc_13928
  %v0_13944 = call i32 @function_13a4c()
  store i32 %v0_13944, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1394c

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13930, %dec_label_pc_13944
  %v0_1394c = phi i32 [ %v0_1394c.pre, %dec_label_pc_13930 ], [ %v0_13944, %dec_label_pc_13944 ]
  ret i32 %v0_1394c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1394c, { 1, 0 }
}

define i32 @function_1395c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1395c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_13964 = add i32 %tmp, 4
  %v3_13964 = inttoptr i32 %v2_13964 to i32*
  store i32 0, i32* %v3_13964, align 4
  %v1_13968 = load i32, i32* %r3.global-to-local, align 4
  %v2_13968 = inttoptr i32 %v1_13968 to i32*
  store i32 0, i32* %v2_13968, align 4
  ret i32 0
}

define i32 @function_13970(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13970:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13970 = load i32, i32* @r4, align 4
  store i32 %v3_13970, i32* %stack_var_-16, align 4
  %v6_13970 = load i32, i32* @r5, align 4
  %v9_13970 = load i32, i32* @r6, align 4
  %v7_13978 = icmp eq i32 %arg2, -1
  br i1 %v7_13978, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_13970
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_13970
  %v2_13980 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_1399c

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_139a4

dec_label_pc_1399c:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_139a0 = icmp slt i32 %arg1, 65
  br i1 %v7_139a0, label %dec_label_pc_139b8, label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %.thread16, %dec_label_pc_1399c
  %v0_139a4 = call i32 @function_134dc()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_139b0 = inttoptr i32 %v0_139a4 to i32*
  store i32 22, i32* %v2_139b0, align 4
  %v0_13a10.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_139b8:                               ; preds = %dec_label_pc_1399c
  %v2_139b8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_139b8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_139c0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_139c0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_139d0 = call i32 @function_13a4c()
  %v0_139d8 = load i32, i32* @r5, align 4
  %v2_139e0 = call i32 @function_13a28(i32 ptrtoint (i32* @global_var_236b4.777 to i32), i32 %v0_139d8)
  store i32 %v2_13980, i32* %r2.global-to-local, align 4
  %v0_139f8 = load i32, i32* @r5, align 4
  %v3_13a00 = call i32 @function_15c60(i32 %v0_139f8, i32 %v2_139b8, i32 %v2_13980)
  %v1_13a04 = icmp slt i32 %v3_13a00, 0
  br i1 %v1_13a04, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_139b8
  %v5_13a08 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_13a08, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_139b8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_139a4, %bb32
  %v0_13a10 = phi i32 [ %v5_13a08, %bb31 ], [ %v0_13a10.pre, %dec_label_pc_139a4 ], [ -1, %bb32 ]
  %v2_13a18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13a18, i32* @r4, align 4
  store i32 %v6_13970, i32* @r5, align 4
  store i32 %v9_13970, i32* @r6, align 4
  ret i32 %v0_13a10

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @function_13a4c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139a4, { 1, 0 }
}

define i32 @function_13a28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a28:
  %v1_13a28 = add i32 %arg2, -1
  %v3_13a2c = udiv i32 %v1_13a28, 32
  %v4_13a30 = mul nuw nsw i32 %v3_13a2c, 4
  %v5_13a30 = add i32 %v4_13a30, %arg1
  %v6_13a30 = inttoptr i32 %v5_13a30 to i32*
  %v7_13a30 = load i32, i32* %v6_13a30, align 4
  %v1_13a34 = urem i32 %v1_13a28, 32
  %v7_13a3c = shl i32 1, %v1_13a34
  %v8_13a3c = and i32 %v7_13a30, %v7_13a3c
  %v10_13a3c = icmp ne i32 %v8_13a3c, 0
  %. = zext i1 %v10_13a3c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13a28, { 1, 0 }
}

define i32 @function_13a4c() local_unnamed_addr {
dec_label_pc_13a4c:
  %v0_13a4c = load i32, i32* @r1, align 4
  %v1_13a4c = add i32 %v0_13a4c, -1
  %v3_13a50 = udiv i32 %v1_13a4c, 32
  %v0_13a54 = load i32, i32* @r0, align 4
  %v4_13a54 = mul nuw nsw i32 %v3_13a50, 4
  %v5_13a54 = add i32 %v0_13a54, %v4_13a54
  %v6_13a54 = inttoptr i32 %v5_13a54 to i32*
  %v7_13a54 = load i32, i32* %v6_13a54, align 4
  %v1_13a58 = urem i32 %v1_13a4c, 32
  %v7_13a60 = shl i32 1, %v1_13a58
  %v8_13a60 = or i32 %v7_13a54, %v7_13a60
  store i32 %v8_13a60, i32* %v6_13a54, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13a4c, { 1, 0 }
}

define i32 @function_13a70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a70:
  %v1_13a70 = add i32 %arg2, -1
  %v3_13a74 = udiv i32 %v1_13a70, 32
  %v4_13a78 = mul nuw nsw i32 %v3_13a74, 4
  %v5_13a78 = add i32 %v4_13a78, %arg1
  %v6_13a78 = inttoptr i32 %v5_13a78 to i32*
  %v7_13a78 = load i32, i32* %v6_13a78, align 4
  %v1_13a7c = urem i32 %v1_13a70, 32
  %tmp = shl i32 -1, %v1_13a7c
  %v8_13a84 = add i32 %tmp, -1
  %v9_13a84 = and i32 %v7_13a78, %v8_13a84
  store i32 %v9_13a84, i32* %v6_13a78, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13a70, { 1, 0 }
}

define i32 @function_13a94(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a94:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13a94 = udiv i32 %arg1, 256
  store i32 %v3_13a94, i32* %r1.global-to-local, align 4
  %v2_13a98 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_13a98, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_13a94
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_13a94, %bb
  %v0_13aa4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13a98, i32 %v0_13aa4)
  %v0_13aa8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13aa8 = add i32 %v0_13aa8, 1048320
  %v3_13aac = udiv i32 %v1_13aa8, 65536
  %v1_13ab0 = and i32 %v3_13aac, 8
  %v6_13ab4 = shl i32 %v0_13aa8, %v1_13ab0
  %v1_13ab8 = add i32 %v6_13ab4, 520192
  %v3_13abc = udiv i32 %v1_13ab8, 65536
  %v1_13ac0 = and i32 %v3_13abc, 4
  %v6_13ac4 = shl i32 %v6_13ab4, %v1_13ac0
  %v1_13ac8 = add i32 %v6_13ac4, 245760
  %v3_13acc = udiv i32 %v1_13ac8, 65536
  %v1_13ad0 = and i32 %v3_13acc, 2
  %v6_13ad4 = shl i32 %v6_13ac4, %v1_13ad0
  store i32 %v6_13ad4, i32* %r1.global-to-local, align 4
  %v1_13ad8 = sub nsw i32 13, %v1_13ab0
  %v2_13adc = sub nsw i32 %v1_13ad8, %v1_13ac0
  %v3_13ae0 = udiv i32 %v6_13ad4, 32768
  %v4_13ae0 = sub nuw nsw i32 -1, %v3_13ae0
  %v4_13ae4 = udiv i32 %v6_13ad4, 16384
  %v5_13ae4 = and i32 %v4_13ae4, %v4_13ae0
  %v2_13ae8 = sub nsw i32 %v2_13adc, %v1_13ad0
  %v2_13aec = add nsw i32 %v2_13ae8, %v5_13ae4
  %v1_13af0 = add nsw i32 %v2_13aec, 6
  %v0_13af4 = load i32, i32* %ip.global-to-local, align 4
  %v6_13af4 = lshr i32 %v0_13af4, %v1_13af0
  %v3_13af8 = mul nsw i32 %v2_13aec, 4
  %v1_13afc = add nsw i32 %v3_13af8, 32
  %v1_13b00 = urem i32 %v6_13af4, 4
  %v2_13b04 = or i32 %v1_13b00, %v1_13afc
  ret i32 %v2_13b04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_13b0c() local_unnamed_addr {
dec_label_pc_13b0c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13b0c = load i32, i32* @r4, align 4
  %v6_13b0c = load i32, i32* @r5, align 4
  %v9_13b0c = load i32, i32* @r6, align 4
  %v12_13b0c = load i32, i32* @r7, align 4
  %v15_13b0c = load i32, i32* @r8, align 4
  %v18_13b0c = load i32, i32* @sb, align 4
  %v21_13b0c = load i32, i32* @sl, align 4
  %v24_13b0c = load i32, i32* @fp, align 4
  %v27_13b0c = load i32, i32* @lr, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_13b20 = load i32, i32* inttoptr (i32 135724 to i32*), align 4
  store i32 %v4_13b20, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_13b2c = load i32, i32* inttoptr (i32 135692 to i32*), align 4
  store i32 %v4_13b2c, i32* %r1.global-to-local, align 4
  %v0_13b30 = load i32, i32* @r0, align 4
  store i32 %v0_13b30, i32* @r5, align 4
  store i32 %v4_13b20, i32* %r2.global-to-local, align 4
  %v2_13b38 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13b38, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %ip.global-to-local, align 4
  %v4_13b44 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  store i32 %v4_13b44, i32* %ip.global-to-local, align 4
  store i32 80720, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13b44)
  %v0_13b50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13b50, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_13b5c = load i32, i32* inttoptr (i32 135672 to i32*), align 8
  store i32 %v4_13b5c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_13b68.783 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13b5c)
  %v0_13b68 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_13b68, -32
  br i1 %tmp, label %dec_label_pc_13b84, label %dec_label_pc_13b70

dec_label_pc_13b70:                               ; preds = %dec_label_pc_13b0c
  %v0_13b70 = call i32 @function_134dc()
  store i32 %v0_13b70, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_13b7c = inttoptr i32 %v0_13b70 to i32*
  store i32 12, i32* %v2_13b7c, align 4
  br label %dec_label_pc_14400

dec_label_pc_13b84:                               ; preds = %dec_label_pc_13b0c
  %v1_13b84 = add i32 %v0_13b68, 11
  store i32 %v1_13b84, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r2.global-to-local, align 4
  %v2_13b90 = icmp ugt i32 %v1_13b84, 14
  %v7_13b90 = icmp eq i32 %v1_13b84, 15
  %v2_13b94 = xor i1 %v7_13b90, true
  %v3_13b94 = and i1 %v2_13b90, %v2_13b94
  br i1 %v3_13b94, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_13b84
  %v5_13b94 = and i32 %v1_13b84, -8
  store i32 %v5_13b94, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_13b84, %bb
  %v4_13b98 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_13b98, i32* @r0, align 4
  %v1_13b9c = inttoptr i32 %v4_13b98 to i32*
  %v2_13b9c = load i32, i32* %v1_13b9c, align 4
  store i32 %v2_13b9c, i32* @r4, align 4
  %v2_13ba0 = xor i1 %v2_13b90, true
  %v3_13ba0 = or i1 %v7_13b90, %v2_13ba0
  br i1 %v3_13ba0, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_13ba4 = urem i32 %v2_13b9c, 2
  %v2_13ba4 = icmp eq i32 %v1_13ba4, 0
  br i1 %v2_13ba4, label %dec_label_pc_13bac, label %dec_label_pc_13bbc

dec_label_pc_13bac:                               ; preds = %bb140
  %v2_13bac = icmp eq i32 %v2_13b9c, 0
  br i1 %v2_13bac, label %dec_label_pc_13bb4, label %dec_label_pc_13f98

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13bac
  %v0_13bb4 = call i32 @function_149c4()
  store i32 %v0_13bb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13bbc:                               ; preds = %bb140
  %v0_13bbc = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_13bbc, %v2_13b9c
  br i1 %tmp201, label %dec_label_pc_13be4, label %dec_label_pc_13bc4

dec_label_pc_13bc4:                               ; preds = %dec_label_pc_13bbc
  %v1_13bc4 = add i32 %v4_13b98, -4
  store i32 %v1_13bc4, i32* %r1.global-to-local, align 4
  %v3_13bc8 = udiv i32 %v0_13bbc, 8
  store i32 %v3_13bc8, i32* %r2.global-to-local, align 4
  %v4_13bcc = mul nuw i32 %v3_13bc8, 4
  %v5_13bcc = add i32 %v4_13bcc, %v1_13bc4
  %v6_13bcc = inttoptr i32 %v5_13bcc to i32*
  %v7_13bcc = load i32, i32* %v6_13bcc, align 4
  store i32 %v7_13bcc, i32* %r0.global-to-local, align 4
  %v2_13bd0 = icmp eq i32 %v7_13bcc, 0
  br i1 %v2_13bd0, label %dec_label_pc_13be4, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13bc4
  %v2_13bd4 = add i32 %v7_13bcc, 8
  %v3_13bd4 = inttoptr i32 %v2_13bd4 to i32*
  %v4_13bd4 = load i32, i32* %v3_13bd4, align 4
  store i32 %v4_13bd4, i32* %r3.global-to-local, align 4
  store i32 %v2_13bd4, i32* %r0.global-to-local, align 4
  store i32 %v2_13bd4, i32* %r4.global-to-local, align 4
  store i32 %v4_13bd4, i32* %v6_13bcc, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bc4, %dec_label_pc_13bbc
  %tmp202 = icmp ugt i32 %v0_13bbc, 255
  br i1 %tmp202, label %dec_label_pc_13c34, label %dec_label_pc_13bec

dec_label_pc_13bec:                               ; preds = %dec_label_pc_13be4
  store i32 135656, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13bf4 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  %v3_13bf8 = udiv i32 %v0_13bbc, 8
  store i32 %v3_13bf8, i32* @r7, align 4
  %v4_13bfc = mul nuw i32 %v3_13bf8, 8
  %v5_13bfc = add i32 %v4_13bf4, %v4_13bfc
  store i32 %v5_13bfc, i32* %r3.global-to-local, align 4
  %v1_13c00 = add i32 %v5_13bfc, 44
  store i32 %v1_13c00, i32* %ip.global-to-local, align 4
  %v1_13c04 = add i32 %v5_13bfc, 56
  %v2_13c04 = inttoptr i32 %v1_13c04 to i32*
  %v3_13c04 = load i32, i32* %v2_13c04, align 4
  store i32 %v3_13c04, i32* %r0.global-to-local, align 4
  %v9_13c08 = icmp eq i32 %v3_13c04, %v1_13c00
  br i1 %v9_13c08, label %dec_label_pc_13d94, label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13bec
  %v2_13c10 = add i32 %v3_13c04, %v0_13bbc
  store i32 %v2_13c10, i32* %r3.global-to-local, align 4
  %v1_13c14 = add i32 %v2_13c10, 4
  %v2_13c14 = inttoptr i32 %v1_13c14 to i32*
  %v3_13c14 = load i32, i32* %v2_13c14, align 4
  store i32 %v3_13c14, i32* %r2.global-to-local, align 4
  %v1_13c18 = add i32 %v3_13c04, 12
  %v2_13c18 = inttoptr i32 %v1_13c18 to i32*
  %v3_13c18 = load i32, i32* %v2_13c18, align 4
  store i32 %v3_13c18, i32* %r1.global-to-local, align 4
  %v1_13c1c = or i32 %v3_13c14, 1
  store i32 %v1_13c1c, i32* %r2.global-to-local, align 4
  %v1_13c20 = add i32 %v3_13c04, 8
  store i32 %v1_13c20, i32* %r4.global-to-local, align 4
  store i32 %v1_13c1c, i32* %v2_13c14, align 4
  %v0_13c28 = load i32, i32* %ip.global-to-local, align 4
  %v1_13c28 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c28 = add i32 %v1_13c28, 8
  %v3_13c28 = inttoptr i32 %v2_13c28 to i32*
  store i32 %v0_13c28, i32* %v3_13c28, align 4
  %v0_13c2c = load i32, i32* %r1.global-to-local, align 4
  %v1_13c2c = load i32, i32* %ip.global-to-local, align 4
  %v2_13c2c = add i32 %v1_13c2c, 12
  %v3_13c2c = inttoptr i32 %v2_13c2c to i32*
  store i32 %v0_13c2c, i32* %v3_13c2c, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13c34:                               ; preds = %dec_label_pc_13be4
  store i32 %v0_13bbc, i32* %r0.global-to-local, align 4
  %v1_13c38 = call i32 @function_13a94(i32 %v0_13bbc)
  store i32 %v1_13c38, i32* %r0.global-to-local, align 4
  %v0_13c3c = load i32, i32* @r4, align 4
  %v1_13c3c = and i32 %v0_13c3c, 2
  %v2_13c3c = icmp eq i32 %v1_13c3c, 0
  store i32 %v1_13c38, i32* @r7, align 4
  br i1 %v2_13c3c, label %dec_label_pc_13d94, label %dec_label_pc_13c48

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13c34
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_13c50 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_13c50, i32* @r0, align 4
  %v0_13c54 = call i32 @function_149c4()
  store i32 %v0_13c54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13d94

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13da8
  %v1_13c5c = add i32 %v3_13da8, 4
  %v2_13c5c = inttoptr i32 %v1_13c5c to i32*
  %v3_13c5c = load i32, i32* %v2_13c5c, align 4
  store i32 %v3_13c5c, i32* %r3.global-to-local, align 4
  %v0_13c60 = load i32, i32* @sl, align 4
  %v1_13c64 = and i32 %v3_13c5c, -4
  store i32 %v1_13c64, i32* %r4.global-to-local, align 4
  %v1_13c68 = add i32 %v3_13da8, 12
  %v2_13c68 = inttoptr i32 %v1_13c68 to i32*
  %v3_13c68 = load i32, i32* %v2_13c68, align 4
  store i32 %v3_13c68, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_13c60, 255
  br i1 %tmp203, label %dec_label_pc_13cc4, label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %dec_label_pc_13c5c
  %v9_13c70 = icmp eq i32 %v3_13c68, %v0_13cc8
  br i1 %v9_13c70, label %dec_label_pc_13c78, label %dec_label_pc_13cc4

dec_label_pc_13c78:                               ; preds = %dec_label_pc_13c70
  %v0_13c78 = load i32, i32* @sb, align 4
  %v1_13c78 = add i32 %v0_13c78, 48
  %v2_13c78 = inttoptr i32 %v1_13c78 to i32*
  %v3_13c78 = load i32, i32* %v2_13c78, align 4
  store i32 %v3_13c78, i32* %r3.global-to-local, align 4
  %v9_13c7c = icmp eq i32 %v3_13da8, %v3_13c78
  br i1 %v9_13c7c, label %dec_label_pc_13c84, label %dec_label_pc_13cc4

dec_label_pc_13c84:                               ; preds = %dec_label_pc_13c78
  %v1_13c84 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_13c64, %v1_13c84
  br i1 %tmp204, label %dec_label_pc_13c8c, label %dec_label_pc_13cc4

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c84
  %v2_13c8c = sub i32 %v1_13c64, %v0_13c60
  store i32 %v2_13c8c, i32* %r2.global-to-local, align 4
  %v2_13c90 = add i32 %v0_13c60, %v3_13da8
  store i32 %v2_13c90, i32* %r3.global-to-local, align 4
  %v1_13c94 = or i32 %v0_13c60, 1
  store i32 %v1_13c94, i32* %r0.global-to-local, align 4
  %v1_13c98 = or i32 %v2_13c8c, 1
  store i32 %v1_13c98, i32* %r1.global-to-local, align 4
  %v1_13c9c = add i32 %v3_13da8, 8
  store i32 %v1_13c9c, i32* %r4.global-to-local, align 4
  %v2_13ca0 = add i32 %v0_13cc8, 8
  %v3_13ca0 = inttoptr i32 %v2_13ca0 to i32*
  store i32 %v2_13c90, i32* %v3_13ca0, align 4
  %v0_13ca4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ca4 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ca4 = add i32 %v1_13ca4, 12
  %v3_13ca4 = inttoptr i32 %v2_13ca4 to i32*
  store i32 %v0_13ca4, i32* %v3_13ca4, align 4
  %v0_13ca8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ca8 = load i32, i32* @r6, align 4
  %v2_13ca8 = add i32 %v1_13ca8, 4
  %v3_13ca8 = inttoptr i32 %v2_13ca8 to i32*
  store i32 %v0_13ca8, i32* %v3_13ca8, align 4
  %v0_13cac = load i32, i32* %r3.global-to-local, align 4
  %v1_13cac = load i32, i32* @sb, align 4
  %v2_13cac = add i32 %v1_13cac, 48
  %v3_13cac = inttoptr i32 %v2_13cac to i32*
  store i32 %v0_13cac, i32* %v3_13cac, align 4
  %v0_13cb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13cb0 = load i32, i32* %r3.global-to-local, align 4
  %v3_13cb0 = add i32 %v1_13cb0, %v0_13cb0
  %v4_13cb0 = inttoptr i32 %v3_13cb0 to i32*
  store i32 %v0_13cb0, i32* %v4_13cb0, align 4
  %v0_13cb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13cb4 = add i32 %v1_13cb4, 4
  %v3_13cb4 = inttoptr i32 %v2_13cb4 to i32*
  store i32 %v0_13cb4, i32* %v3_13cb4, align 4
  %v0_13cb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13cb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_13cb8 = add i32 %v1_13cb8, 12
  %v3_13cb8 = inttoptr i32 %v2_13cb8 to i32*
  store i32 %v0_13cb8, i32* %v3_13cb8, align 4
  %v0_13cbc = load i32, i32* %ip.global-to-local, align 4
  %v1_13cbc = load i32, i32* %r3.global-to-local, align 4
  %v2_13cbc = add i32 %v1_13cbc, 8
  %v3_13cbc = inttoptr i32 %v2_13cbc to i32*
  store i32 %v0_13cbc, i32* %v3_13cbc, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13c84, %dec_label_pc_13c78, %dec_label_pc_13c70, %dec_label_pc_13c5c
  %v9_13cc4 = icmp eq i32 %v1_13c64, %v0_13c60
  %v2_13cc8 = add i32 %v3_13c68, 8
  %v3_13cc8 = inttoptr i32 %v2_13cc8 to i32*
  store i32 %v0_13cc8, i32* %v3_13cc8, align 4
  %v0_13ccc = load i32, i32* %ip.global-to-local, align 4
  %v1_13ccc = load i32, i32* %r5.global-to-local, align 4
  %v2_13ccc = add i32 %v1_13ccc, 12
  %v3_13ccc = inttoptr i32 %v2_13ccc to i32*
  store i32 %v0_13ccc, i32* %v3_13ccc, align 4
  br i1 %v9_13cc4, label %dec_label_pc_13e24.loopexit, label %dec_label_pc_13ce0

dec_label_pc_13ce0:                               ; preds = %dec_label_pc_13cc4
  %v0_13ce0 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_13ce0, 255
  br i1 %tmp205, label %dec_label_pc_13d04, label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %dec_label_pc_13ce0
  store i32 135656, i32* %r2.global-to-local, align 4
  %v1_13cec = load i32, i32* %r8.global-to-local, align 4
  %v2_13cec = add i32 %v1_13cec, 135656
  %v3_13cec = inttoptr i32 %v2_13cec to i32*
  %v4_13cec = load i32, i32* %v3_13cec, align 4
  %v3_13cf0 = udiv i32 %v0_13ce0, 8
  store i32 %v3_13cf0, i32* %r0.global-to-local, align 4
  %v4_13cf4 = mul nuw i32 %v3_13cf0, 8
  %v5_13cf4 = add i32 %v4_13cec, %v4_13cf4
  store i32 %v5_13cf4, i32* %r3.global-to-local, align 4
  %v1_13cf8 = add i32 %v5_13cf4, 44
  store i32 %v1_13cf8, i32* %ip.global-to-local, align 4
  %v1_13cfc = add i32 %v5_13cf4, 52
  %v2_13cfc = inttoptr i32 %v1_13cfc to i32*
  %v3_13cfc = load i32, i32* %v2_13cfc, align 4
  store i32 %v3_13cfc, i32* @lr, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13ce0
  store i32 %v0_13ce0, i32* %r0.global-to-local, align 4
  %v1_13d08 = call i32 @function_13a94(i32 %v0_13ce0)
  store i32 %v1_13d08, i32* %r0.global-to-local, align 4
  store i32 135656, i32* %ip.global-to-local, align 4
  %v1_13d10 = load i32, i32* %r8.global-to-local, align 4
  %v2_13d10 = add i32 %v1_13d10, 135656
  %v3_13d10 = inttoptr i32 %v2_13d10 to i32*
  %v4_13d10 = load i32, i32* %v3_13d10, align 4
  %v4_13d14 = mul i32 %v1_13d08, 8
  %v5_13d14 = add i32 %v4_13d10, %v4_13d14
  store i32 %v5_13d14, i32* %r3.global-to-local, align 4
  %v1_13d18 = add i32 %v5_13d14, 44
  store i32 %v1_13d18, i32* %ip.global-to-local, align 4
  %v1_13d1c = add i32 %v5_13d14, 52
  %v2_13d1c = inttoptr i32 %v1_13d1c to i32*
  %v3_13d1c = load i32, i32* %v2_13d1c, align 4
  store i32 %v3_13d1c, i32* @lr, align 4
  %v9_13d20 = icmp eq i32 %v3_13d1c, %v1_13d18
  br i1 %v9_13d20, label %dec_label_pc_13d5c, label %dec_label_pc_13d28

dec_label_pc_13d28:                               ; preds = %dec_label_pc_13d04
  %v1_13d28 = add i32 %v5_13d14, 56
  %v2_13d28 = inttoptr i32 %v1_13d28 to i32*
  %v3_13d28 = load i32, i32* %v2_13d28, align 4
  store i32 %v3_13d28, i32* %r1.global-to-local, align 4
  %v1_13d2c = add i32 %v3_13d28, 4
  %v2_13d2c = inttoptr i32 %v1_13d2c to i32*
  %v3_13d2c = load i32, i32* %v2_13d2c, align 4
  store i32 %v3_13d2c, i32* %r3.global-to-local, align 4
  %v0_13d30 = load i32, i32* %r4.global-to-local, align 4
  %v3_13d30 = icmp ult i32 %v0_13d30, %v3_13d2c
  br i1 %v3_13d30, label %.thread, label %dec_label_pc_13d4c.preheader

.thread:                                          ; preds = %dec_label_pc_13d28
  store i32 %v1_13d18, i32* @lr, align 4
  store i32 %v3_13d28, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d4c.preheader:                     ; preds = %dec_label_pc_13d28
  %v2_13d38 = or i32 %v0_13d30, 1
  store i32 %v2_13d38, i32* %r2.global-to-local, align 4
  %v1_13d4c179 = add i32 %v3_13d1c, 4
  %v2_13d4c180 = inttoptr i32 %v1_13d4c179 to i32*
  %v3_13d4c181 = load i32, i32* %v2_13d4c180, align 4
  store i32 %v3_13d4c181, i32* %r3.global-to-local, align 4
  %v3_13d50183 = icmp ult i32 %v2_13d38, %v3_13d4c181
  br i1 %v3_13d50183, label %dec_label_pc_13d48, label %dec_label_pc_13d58

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d4c.preheader, %dec_label_pc_13d48
  %v0_13d58184 = phi i32 [ %v3_13d48, %dec_label_pc_13d48 ], [ %v3_13d1c, %dec_label_pc_13d4c.preheader ]
  %v1_13d48 = add i32 %v0_13d58184, 8
  %v2_13d48 = inttoptr i32 %v1_13d48 to i32*
  %v3_13d48 = load i32, i32* %v2_13d48, align 4
  store i32 %v3_13d48, i32* @lr, align 4
  %v1_13d4c = add i32 %v3_13d48, 4
  %v2_13d4c = inttoptr i32 %v1_13d4c to i32*
  %v3_13d4c = load i32, i32* %v2_13d4c, align 4
  store i32 %v3_13d4c, i32* %r3.global-to-local, align 4
  %v3_13d50 = icmp ult i32 %v2_13d38, %v3_13d4c
  br i1 %v3_13d50, label %dec_label_pc_13d48, label %dec_label_pc_13d58

dec_label_pc_13d58:                               ; preds = %dec_label_pc_13d48, %dec_label_pc_13d4c.preheader
  %v0_13d58.lcssa = phi i32 [ %v3_13d1c, %dec_label_pc_13d4c.preheader ], [ %v3_13d48, %dec_label_pc_13d48 ]
  %v1_13d58 = add i32 %v0_13d58.lcssa, 12
  %v2_13d58 = inttoptr i32 %v1_13d58 to i32*
  %v3_13d58 = load i32, i32* %v2_13d58, align 4
  store i32 %v3_13d58, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %.thread, %dec_label_pc_13d04, %dec_label_pc_13ce8, %dec_label_pc_13d58
  %v0_13d7c = phi i32 [ %v1_13d18, %dec_label_pc_13d04 ], [ %v1_13cf8, %dec_label_pc_13ce8 ], [ %v3_13d58, %dec_label_pc_13d58 ], [ %v3_13d28, %.thread ]
  %v0_13d70 = phi i32 [ %v1_13d08, %dec_label_pc_13d04 ], [ %v3_13cf0, %dec_label_pc_13ce8 ], [ %v1_13d08, %dec_label_pc_13d58 ], [ %v1_13d08, %.thread ]
  %v1_13d60 = phi i32 [ %v1_13d10, %dec_label_pc_13d04 ], [ %v1_13cec, %dec_label_pc_13ce8 ], [ %v1_13d10, %dec_label_pc_13d58 ], [ %v1_13d10, %.thread ]
  store i32 135656, i32* %r2.global-to-local, align 4
  %v2_13d60 = add i32 %v1_13d60, 135656
  %v3_13d60 = inttoptr i32 %v2_13d60 to i32*
  %v4_13d60 = load i32, i32* %v3_13d60, align 4
  %v3_13d64 = sdiv i32 %v0_13d70, 32
  store i32 %v3_13d64, i32* %r3.global-to-local, align 4
  %v4_13d68 = mul nsw i32 %v3_13d64, 4
  %v5_13d68 = add i32 %v4_13d60, %v4_13d68
  store i32 %v5_13d68, i32* %r1.global-to-local, align 4
  %v1_13d6c = add i32 %v5_13d68, 820
  %v2_13d6c = inttoptr i32 %v1_13d6c to i32*
  %v3_13d6c = load i32, i32* %v2_13d6c, align 4
  %v1_13d70 = urem i32 %v0_13d70, 32
  store i32 %v1_13d70, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_13d78 = shl i32 1, %v1_13d70
  %v8_13d78 = or i32 %v3_13d6c, %v7_13d78
  store i32 %v8_13d78, i32* %r3.global-to-local, align 4
  %v1_13d7c = load i32, i32* @r6, align 4
  %v2_13d7c = add i32 %v1_13d7c, 12
  %v3_13d7c = inttoptr i32 %v2_13d7c to i32*
  store i32 %v0_13d7c, i32* %v3_13d7c, align 4
  %v0_13d80 = load i32, i32* @lr, align 4
  %v1_13d80 = load i32, i32* @r6, align 4
  %v2_13d80 = add i32 %v1_13d80, 8
  %v3_13d80 = inttoptr i32 %v2_13d80 to i32*
  store i32 %v0_13d80, i32* %v3_13d80, align 4
  %v0_13d84 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d84 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d84 = add i32 %v1_13d84, 820
  %v3_13d84 = inttoptr i32 %v2_13d84 to i32*
  store i32 %v0_13d84, i32* %v3_13d84, align 4
  %v0_13d88 = load i32, i32* @r6, align 4
  %v1_13d88 = load i32, i32* @lr, align 4
  %v2_13d88 = add i32 %v1_13d88, 12
  %v3_13d88 = inttoptr i32 %v2_13d88 to i32*
  store i32 %v0_13d88, i32* %v3_13d88, align 4
  %v0_13d8c = load i32, i32* @r6, align 4
  %v1_13d8c = load i32, i32* %ip.global-to-local, align 4
  %v2_13d8c = add i32 %v1_13d8c, 8
  %v3_13d8c = inttoptr i32 %v2_13d8c to i32*
  store i32 %v0_13d8c, i32* %v3_13d8c, align 4
  %v0_13da8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13da8

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13c34, %dec_label_pc_13bec, %dec_label_pc_13c48
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_13d9c = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_13d9c, i32* @sb, align 4
  %v0_13da0 = load i32, i32* @sl, align 4
  %v1_13da0 = add i32 %v0_13da0, 16
  store i32 %v1_13da0, i32* @fp, align 4
  %v1_13da4 = add i32 %v4_13d9c, 52
  store i32 %v1_13da4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13da8

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13d5c, %dec_label_pc_13d94
  %v0_13cc8 = phi i32 [ %v0_13da8.pre, %dec_label_pc_13d5c ], [ %v1_13da4, %dec_label_pc_13d94 ]
  %v1_13da8 = add i32 %v0_13cc8, 12
  %v2_13da8 = inttoptr i32 %v1_13da8 to i32*
  %v3_13da8 = load i32, i32* %v2_13da8, align 4
  store i32 %v3_13da8, i32* @r6, align 4
  %v9_13dac = icmp eq i32 %v3_13da8, %v0_13cc8
  br i1 %v9_13dac, label %dec_label_pc_13db4, label %dec_label_pc_13c5c

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13da8
  %v0_13db4 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_13db4, 256
  %v0_13e6c.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_13db4.dec_label_pc_13e6c_crit_edge, label %dec_label_pc_13dbc

dec_label_pc_13db4.dec_label_pc_13e6c_crit_edge:  ; preds = %dec_label_pc_13db4
  %.pre200 = mul i32 %v0_13e6c.pre, 8
  br label %dec_label_pc_13e6c

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13db4
  %v4_13dbc = mul i32 %v0_13e6c.pre, 8
  %v5_13dbc = add i32 %v4_13dbc, %v0_13cc8
  store i32 %v5_13dbc, i32* %r3.global-to-local, align 4
  %v1_13dc0 = add i32 %v5_13dbc, -8
  store i32 %v1_13dc0, i32* %r1.global-to-local, align 4
  %v1_13dc4 = add i32 %v5_13dbc, 4
  %v2_13dc4 = inttoptr i32 %v1_13dc4 to i32*
  %storemerge.pre = load i32, i32* %v2_13dc4, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13dcc:                               ; preds = %dec_label_pc_13e64
  %v1_13dcc = add i32 %v1_13df4, 4
  %v2_13dcc = inttoptr i32 %v1_13dcc to i32*
  %v3_13dcc = load i32, i32* %v2_13dcc, align 4
  store i32 %v3_13dcc, i32* %r3.global-to-local, align 4
  %v1_13dd0 = and i32 %v3_13dcc, -4
  store i32 %v1_13dd0, i32* %r2.global-to-local, align 4
  %v3_13dd4 = icmp ult i32 %v1_13dd0, %v0_13db4
  %v1_13dd8 = add i32 %v1_13df4, 12
  %v2_13dd8 = inttoptr i32 %v1_13dd8 to i32*
  %v3_13dd8 = load i32, i32* %v2_13dd8, align 4
  store i32 %v3_13dd8, i32* %r0.global-to-local, align 4
  br i1 %v3_13dd4, label %dec_label_pc_13e64, label %dec_label_pc_13de0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dcc
  %v1_13de0 = add i32 %v1_13df4, 8
  %v2_13de0 = inttoptr i32 %v1_13de0 to i32*
  %v3_13de0 = load i32, i32* %v2_13de0, align 4
  store i32 %v3_13de0, i32* %r1.global-to-local, align 4
  %v1_13de4 = add i32 %v3_13de0, 12
  %v2_13de4 = inttoptr i32 %v1_13de4 to i32*
  %v3_13de4 = load i32, i32* %v2_13de4, align 4
  store i32 %v3_13de4, i32* %r3.global-to-local, align 4
  %v9_13de8 = icmp eq i32 %v3_13de4, %v1_13df4
  br i1 %v9_13de8, label %dec_label_pc_13df0, label %dec_label_pc_13dfc

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13de0
  %v1_13df0 = add i32 %v3_13dd8, 8
  %v2_13df0 = inttoptr i32 %v1_13df0 to i32*
  %v3_13df0 = load i32, i32* %v2_13df0, align 4
  store i32 %v3_13df0, i32* %r3.global-to-local, align 4
  %v9_13df4 = icmp eq i32 %v3_13df0, %v1_13df4
  br i1 %v9_13df4, label %dec_label_pc_13e00, label %dec_label_pc_13dfc

dec_label_pc_13dfc:                               ; preds = %dec_label_pc_13de0, %dec_label_pc_13df0
  %v0_13dfc = call i32 @function_14df4()
  store i32 %v0_13dfc, i32* %r0.global-to-local, align 4
  %v0_13e00.pre = load i32, i32* @sl, align 4
  %v1_13e00.pre = load i32, i32* @r2, align 4
  %v0_13e08.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13e00

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13df0, %dec_label_pc_13dfc
  %v1_13e08 = phi i32 [ %v3_13dd8, %dec_label_pc_13df0 ], [ %v0_13dfc, %dec_label_pc_13dfc ]
  %v0_13e08 = phi i32 [ %v3_13de0, %dec_label_pc_13df0 ], [ %v0_13e08.pre, %dec_label_pc_13dfc ]
  %v1_13e00 = phi i32 [ %v1_13dd0, %dec_label_pc_13df0 ], [ %v1_13e00.pre, %dec_label_pc_13dfc ]
  %v0_13e00 = phi i32 [ %v0_13db4, %dec_label_pc_13df0 ], [ %v0_13e00.pre, %dec_label_pc_13dfc ]
  %v2_13e00 = sub i32 %v1_13e00, %v0_13e00
  store i32 %v2_13e00, i32* %lr.global-to-local, align 4
  %v2_13e08 = add i32 %v1_13e08, 8
  %v3_13e08 = inttoptr i32 %v2_13e08 to i32*
  store i32 %v0_13e08, i32* %v3_13e08, align 4
  %v0_13e0c = load i32, i32* %r0.global-to-local, align 4
  %v1_13e0c = load i32, i32* %r1.global-to-local, align 4
  %v2_13e0c = add i32 %v1_13e0c, 12
  %v3_13e0c = inttoptr i32 %v2_13e0c to i32*
  store i32 %v0_13e0c, i32* %v3_13e0c, align 4
  %v0_13e10 = load i32, i32* %ip.global-to-local, align 4
  %v1_13e10 = add i32 %v0_13e10, 8
  store i32 %v1_13e10, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_13e00, 15
  br i1 %tmp207, label %dec_label_pc_13e30, label %dec_label_pc_13e18

dec_label_pc_13e18:                               ; preds = %dec_label_pc_13e00
  %v1_13e18 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e18 = add i32 %v1_13e18, %v0_13e10
  store i32 %v2_13e18, i32* %r2.global-to-local, align 4
  %v1_13e1c = add i32 %v2_13e18, 4
  %v2_13e1c = inttoptr i32 %v1_13e1c to i32*
  %v3_13e1c = load i32, i32* %v2_13e1c, align 4
  store i32 %v3_13e1c, i32* %r3.global-to-local, align 4
  store i32 %v1_13e10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13e24.loopexit:                      ; preds = %dec_label_pc_13cc4
  %v1_13cd0 = load i32, i32* @r6, align 4
  %v2_13cd0 = load i32, i32* @sl, align 4
  %v3_13cd0 = add i32 %v2_13cd0, %v1_13cd0
  store i32 %v3_13cd0, i32* %r2.global-to-local, align 4
  %v2_13cd4 = add i32 %v3_13cd0, 4
  %v3_13cd4 = inttoptr i32 %v2_13cd4 to i32*
  %v4_13cd4 = load i32, i32* %v3_13cd4, align 4
  store i32 %v4_13cd4, i32* %r3.global-to-local, align 4
  %v2_13cd8 = add i32 %v1_13cd0, 8
  store i32 %v2_13cd8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %.dec_label_pc_13e24_crit_edge, %dec_label_pc_13e24.loopexit, %dec_label_pc_13e18
  %v1_13e28 = phi i32 [ %v4_13f4c, %.dec_label_pc_13e24_crit_edge ], [ %v3_13cd0, %dec_label_pc_13e24.loopexit ], [ %v2_13e18, %dec_label_pc_13e18 ]
  %v0_13e24 = phi i32 [ %v7_13f4c, %.dec_label_pc_13e24_crit_edge ], [ %v4_13cd4, %dec_label_pc_13e24.loopexit ], [ %v3_13e1c, %dec_label_pc_13e18 ]
  %v1_13e24 = or i32 %v0_13e24, 1
  store i32 %v1_13e24, i32* %r3.global-to-local, align 4
  %v2_13e28 = add i32 %v1_13e28, 4
  %v3_13e28 = inttoptr i32 %v2_13e28 to i32*
  store i32 %v1_13e24, i32* %v3_13e28, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e00
  %v1_13e30 = load i32, i32* @sl, align 4
  %v2_13e30 = add i32 %v1_13e30, %v0_13e10
  store i32 %v2_13e30, i32* %r2.global-to-local, align 4
  %v1_13e34 = or i32 %v1_13e30, 1
  store i32 %v1_13e34, i32* %r3.global-to-local, align 4
  %v0_13e38 = load i32, i32* %lr.global-to-local, align 4
  %v1_13e38 = or i32 %v0_13e38, 1
  store i32 %v1_13e38, i32* %r1.global-to-local, align 4
  store i32 %v1_13e10, i32* %r4.global-to-local, align 4
  %v2_13e40 = add i32 %v0_13e10, 4
  %v3_13e40 = inttoptr i32 %v2_13e40 to i32*
  store i32 %v1_13e34, i32* %v3_13e40, align 4
  %v0_13e44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e44 = load i32, i32* @r6, align 4
  %v2_13e44 = add i32 %v1_13e44, 8
  %v3_13e44 = inttoptr i32 %v2_13e44 to i32*
  store i32 %v0_13e44, i32* %v3_13e44, align 4
  %v0_13e48 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e48 = load i32, i32* @r6, align 4
  %v2_13e48 = add i32 %v1_13e48, 12
  %v3_13e48 = inttoptr i32 %v2_13e48 to i32*
  store i32 %v0_13e48, i32* %v3_13e48, align 4
  %v0_13e4c = load i32, i32* %lr.global-to-local, align 4
  %v1_13e4c = load i32, i32* %r2.global-to-local, align 4
  %v3_13e4c = add i32 %v1_13e4c, %v0_13e4c
  %v4_13e4c = inttoptr i32 %v3_13e4c to i32*
  store i32 %v0_13e4c, i32* %v4_13e4c, align 4
  %v0_13e50 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e50 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e50 = add i32 %v1_13e50, 4
  %v3_13e50 = inttoptr i32 %v2_13e50 to i32*
  store i32 %v0_13e50, i32* %v3_13e50, align 4
  %v0_13e54 = load i32, i32* @r6, align 4
  %v1_13e54 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e54 = add i32 %v1_13e54, 12
  %v3_13e54 = inttoptr i32 %v2_13e54 to i32*
  store i32 %v0_13e54, i32* %v3_13e54, align 4
  %v0_13e58 = load i32, i32* @r6, align 4
  %v1_13e58 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e58 = add i32 %v1_13e58, 8
  %v3_13e58 = inttoptr i32 %v2_13e58 to i32*
  store i32 %v0_13e58, i32* %v3_13e58, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13dcc, %dec_label_pc_13dbc
  %v1_13df4 = phi i32 [ %storemerge.pre, %dec_label_pc_13dbc ], [ %v3_13dd8, %dec_label_pc_13dcc ]
  store i32 %v1_13df4, i32* %ip.global-to-local, align 4
  %v9_13e64 = icmp eq i32 %v1_13df4, %v1_13dc0
  br i1 %v9_13e64, label %dec_label_pc_13e6c.loopexit, label %dec_label_pc_13dcc

dec_label_pc_13e6c.loopexit:                      ; preds = %dec_label_pc_13e64
  br label %dec_label_pc_13e6c

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13db4.dec_label_pc_13e6c_crit_edge, %dec_label_pc_13e6c.loopexit
  %v4_13e9c.pre-phi = phi i32 [ %.pre200, %dec_label_pc_13db4.dec_label_pc_13e6c_crit_edge ], [ %v4_13dbc, %dec_label_pc_13e6c.loopexit ]
  %v1_13e6c = add i32 %v0_13e6c.pre, 1
  store i32 %v1_13e6c, i32* %r2.global-to-local, align 4
  %v1_13e70 = urem i32 %v1_13e6c, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 135656, i32* %r0.global-to-local, align 4
  %v6_13e7c = shl i32 1, %v1_13e70
  store i32 %v6_13e7c, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13e84 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_13e84, i32* %r3.global-to-local, align 4
  %v3_13e88 = udiv i32 %v1_13e6c, 32
  store i32 %v3_13e88, i32* @r5, align 4
  %v4_13e8c = mul nuw nsw i32 %v3_13e88, 4
  %v5_13e8c = add i32 %v4_13e84, %v4_13e8c
  store i32 %v5_13e8c, i32* %r2.global-to-local, align 4
  %v1_13e90 = add i32 %v5_13e8c, 820
  %v2_13e90 = inttoptr i32 %v1_13e90 to i32*
  %v3_13e90 = load i32, i32* %v2_13e90, align 4
  store i32 %v3_13e90, i32* @r4, align 4
  %v1_13e94 = add i32 %v4_13e84, 52
  store i32 %v1_13e94, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_13e9c = add i32 %v1_13e94, %v4_13e9c.pre-phi
  store i32 %v5_13e9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13ea0:                               ; preds = %dec_label_pc_13f08, %dec_label_pc_13e6c
  %v1_13ea8 = phi i32 [ %v1_13ea8.pre, %dec_label_pc_13f08 ], [ %v3_13e90, %dec_label_pc_13e6c ]
  %v0_13ea8 = phi i32 [ %v0_13ea0.pre, %dec_label_pc_13f08 ], [ %v6_13e7c, %dec_label_pc_13e6c ]
  %v1_13ea0 = sub i32 1, %v0_13ea8
  %v2_13ea0 = icmp ult i32 %v0_13ea8, 2
  %v1_13ea0. = select i1 %v2_13ea0, i32 %v1_13ea0, i32 0
  store i32 %v1_13ea0., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_13ea8, %v1_13ea8
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_13ea0
  %v5_13eac = or i32 %v1_13ea0., 1
  store i32 %v5_13eac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13eb8.preheader

bb142:                                            ; preds = %dec_label_pc_13ea0
  %v2_13eb0 = icmp eq i32 %v1_13ea0., 0
  br i1 %v2_13eb0, label %.dec_label_pc_13ef4.preheader_crit_edge, label %dec_label_pc_13eb8.preheader

.dec_label_pc_13ef4.preheader_crit_edge:          ; preds = %bb142
  %v0_13eec54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ef4.preheader

dec_label_pc_13eb8.preheader:                     ; preds = %bb142, %.thread12
  %v0_13eb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13eb8

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13eb8.preheader, %dec_label_pc_13ec4
  %v0_13eb8 = phi i32 [ %v0_13eb8.pre, %dec_label_pc_13eb8.preheader ], [ %v1_13eb8, %dec_label_pc_13ec4 ]
  %v1_13eb8 = add i32 %v0_13eb8, 1
  store i32 %v1_13eb8, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_13eb8, 2
  br i1 %tmp208, label %dec_label_pc_13f98.loopexit, label %dec_label_pc_13ec4

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13eb8
  store i32 135656, i32* %r3.global-to-local, align 4
  %v1_13ec8 = load i32, i32* @r8, align 4
  %v2_13ec8 = add i32 %v1_13ec8, 135656
  %v3_13ec8 = inttoptr i32 %v2_13ec8 to i32*
  %v4_13ec8 = load i32, i32* %v3_13ec8, align 4
  store i32 %v4_13ec8, i32* %r2.global-to-local, align 4
  %v4_13ecc = mul i32 %v1_13eb8, 4
  %v5_13ecc = add i32 %v4_13ec8, %v4_13ecc
  store i32 %v5_13ecc, i32* %r3.global-to-local, align 4
  %v1_13ed0 = add i32 %v5_13ecc, 820
  %v2_13ed0 = inttoptr i32 %v1_13ed0 to i32*
  %v3_13ed0 = load i32, i32* %v2_13ed0, align 4
  store i32 %v3_13ed0, i32* @r4, align 4
  %v2_13ed4 = icmp eq i32 %v3_13ed0, 0
  br i1 %v2_13ed4, label %dec_label_pc_13eb8, label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13ec4
  %v4_13edc = mul i32 %v1_13eb8, 256
  %v5_13edc = add i32 %v4_13ec8, %v4_13edc
  store i32 %v5_13edc, i32* %r3.global-to-local, align 4
  %v1_13ee0 = add i32 %v5_13edc, 44
  store i32 %v1_13ee0, i32* %r0.global-to-local, align 4
  %v0_13ee4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13ee4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13ef4.preheader

dec_label_pc_13ef4.preheader:                     ; preds = %.dec_label_pc_13ef4.preheader_crit_edge, %dec_label_pc_13edc
  %v0_13eec54 = phi i32 [ %v1_13ee0, %dec_label_pc_13edc ], [ %v0_13eec54.pre, %.dec_label_pc_13ef4.preheader_crit_edge ]
  %v0_13f10 = phi i32 [ %v3_13ed0, %dec_label_pc_13edc ], [ %v1_13ea8, %.dec_label_pc_13ef4.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_13ee4, %dec_label_pc_13edc ], [ %v0_13ea8, %.dec_label_pc_13ef4.preheader_crit_edge ]
  %v2_13ef451 = and i32 %ip.promoted, %v0_13f10
  %v4_13ef453 = icmp eq i32 %v2_13ef451, 0
  br i1 %v4_13ef453, label %dec_label_pc_13eec, label %dec_label_pc_13efc

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13ef4.preheader, %dec_label_pc_13eec
  %v2_13ef056 = phi i32 [ %v2_13ef0, %dec_label_pc_13eec ], [ %ip.promoted, %dec_label_pc_13ef4.preheader ]
  %v0_13eec55 = phi i32 [ %v1_13eec, %dec_label_pc_13eec ], [ %v0_13eec54, %dec_label_pc_13ef4.preheader ]
  %v1_13eec = add i32 %v0_13eec55, 8
  %v2_13ef0 = mul i32 %v2_13ef056, 2
  %v2_13ef4 = and i32 %v2_13ef0, %v0_13f10
  %v4_13ef4 = icmp eq i32 %v2_13ef4, 0
  br i1 %v4_13ef4, label %dec_label_pc_13eec, label %dec_label_pc_13ef4.dec_label_pc_13efc_crit_edge

dec_label_pc_13ef4.dec_label_pc_13efc_crit_edge:  ; preds = %dec_label_pc_13eec
  store i32 %v1_13eec, i32* %r0.global-to-local, align 4
  store i32 %v2_13ef0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13efc

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13ef4.dec_label_pc_13efc_crit_edge, %dec_label_pc_13ef4.preheader
  %v0_13f1c = phi i32 [ %v2_13ef0, %dec_label_pc_13ef4.dec_label_pc_13efc_crit_edge ], [ %ip.promoted, %dec_label_pc_13ef4.preheader ]
  %v0_13f40 = phi i32 [ %v1_13eec, %dec_label_pc_13ef4.dec_label_pc_13efc_crit_edge ], [ %v0_13eec54, %dec_label_pc_13ef4.preheader ]
  %v1_13efc = add i32 %v0_13f40, 12
  %v2_13efc = inttoptr i32 %v1_13efc to i32*
  %v3_13efc = load i32, i32* %v2_13efc, align 4
  store i32 %v3_13efc, i32* @lr, align 4
  %v9_13f00 = icmp eq i32 %v3_13efc, %v0_13f40
  br i1 %v9_13f00, label %dec_label_pc_13f08, label %dec_label_pc_13f28

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13efc
  store i32 135656, i32* %r0.global-to-local, align 4
  %v1_13f0c = load i32, i32* @r8, align 4
  %v2_13f0c = add i32 %v1_13f0c, 135656
  %v3_13f0c = inttoptr i32 %v2_13f0c to i32*
  %v4_13f0c = load i32, i32* %v3_13f0c, align 4
  %v2_13f10 = sub i32 -1, %v0_13f1c
  %v3_13f10 = and i32 %v0_13f10, %v2_13f10
  store i32 %v3_13f10, i32* @r4, align 4
  %v1_13f14 = load i32, i32* @r5, align 4
  %v4_13f14 = mul i32 %v1_13f14, 4
  %v5_13f14 = add i32 %v4_13f14, %v4_13f0c
  store i32 %v5_13f14, i32* %r3.global-to-local, align 4
  %v1_13f18 = add i32 %v0_13f40, 8
  store i32 %v1_13f18, i32* %r0.global-to-local, align 4
  %v2_13f1c = mul i32 %v0_13f1c, 2
  store i32 %v2_13f1c, i32* %ip.global-to-local, align 4
  %v2_13f20 = add i32 %v5_13f14, 820
  %v3_13f20 = inttoptr i32 %v2_13f20 to i32*
  store i32 %v3_13f10, i32* %v3_13f20, align 4
  %v0_13ea0.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_13ea8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13f28:                               ; preds = %dec_label_pc_13efc
  %v1_13f28 = add i32 %v3_13efc, 4
  %v2_13f28 = inttoptr i32 %v1_13f28 to i32*
  %v3_13f28 = load i32, i32* %v2_13f28, align 4
  store i32 %v3_13f28, i32* %r3.global-to-local, align 4
  %v1_13f2c = and i32 %v3_13f28, -4
  store i32 %v1_13f2c, i32* %r2.global-to-local, align 4
  %v0_13f30 = load i32, i32* @sl, align 4
  %v2_13f30 = sub i32 %v1_13f2c, %v0_13f30
  store i32 %v2_13f30, i32* %ip.global-to-local, align 4
  %v1_13f34 = add i32 %v3_13efc, 12
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  store i32 %v3_13f34, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_13f30, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_13f28
  %v6_13f3c = add i32 %v1_13f2c, %v3_13efc
  store i32 %v6_13f3c, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_13f28, %bb143
  %v2_13f40 = add i32 %v3_13f34, 8
  %v3_13f40 = inttoptr i32 %v2_13f40 to i32*
  store i32 %v0_13f40, i32* %v3_13f40, align 4
  %v0_13f44 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f44 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f44 = add i32 %v1_13f44, 12
  %v3_13f44 = inttoptr i32 %v2_13f44 to i32*
  store i32 %v0_13f44, i32* %v3_13f44, align 4
  %v4_13f48 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_13e24_crit_edge, label %dec_label_pc_13f54

.dec_label_pc_13e24_crit_edge:                    ; preds = %bb144
  %v5_13f48 = add i32 %v4_13f48, 8
  store i32 %v5_13f48, i32* %r4.global-to-local, align 4
  %v4_13f4c = load i32, i32* %r2.global-to-local, align 4
  %v5_13f4c = add i32 %v4_13f4c, 4
  %v6_13f4c = inttoptr i32 %v5_13f4c to i32*
  %v7_13f4c = load i32, i32* %v6_13f4c, align 4
  store i32 %v7_13f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13f54:                               ; preds = %bb144
  %v1_13f54 = load i32, i32* @sl, align 4
  %v2_13f54 = add i32 %v1_13f54, %v4_13f48
  store i32 %v2_13f54, i32* %r1.global-to-local, align 4
  %v1_13f5c = load i32, i32* @r6, align 4
  %v2_13f5c = add i32 %v1_13f5c, 8
  %v3_13f5c = inttoptr i32 %v2_13f5c to i32*
  store i32 %v2_13f54, i32* %v3_13f5c, align 4
  %v0_13f60 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f60 = load i32, i32* @r6, align 4
  %v2_13f60 = add i32 %v1_13f60, 12
  %v3_13f60 = inttoptr i32 %v2_13f60 to i32*
  store i32 %v0_13f60, i32* %v3_13f60, align 4
  %v0_13f64 = load i32, i32* @r6, align 4
  %v1_13f64 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f64 = add i32 %v1_13f64, 8
  %v3_13f64 = inttoptr i32 %v2_13f64 to i32*
  store i32 %v0_13f64, i32* %v3_13f64, align 4
  %v0_13f68 = load i32, i32* @r6, align 4
  %v1_13f68 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f68 = add i32 %v1_13f68, 12
  %v3_13f68 = inttoptr i32 %v2_13f68 to i32*
  store i32 %v0_13f68, i32* %v3_13f68, align 4
  %tmp210 = icmp ult i32 %v1_13f54, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_13f54
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r2.global-to-local, align 4
  %v8_13f74 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v8_13f74, i32* %r3.global-to-local, align 4
  %v4_13f78 = load i32, i32* %r1.global-to-local, align 4
  %v6_13f78 = add i32 %v8_13f74, 48
  %v7_13f78 = inttoptr i32 %v6_13f78 to i32*
  store i32 %v4_13f78, i32* %v7_13f78, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_13f54, %bb145
  %v0_13f7c = load i32, i32* @sl, align 4
  %v1_13f7c = or i32 %v0_13f7c, 1
  store i32 %v1_13f7c, i32* %r2.global-to-local, align 4
  %v0_13f80 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f80 = or i32 %v0_13f80, 1
  store i32 %v1_13f80, i32* %r3.global-to-local, align 4
  %v0_13f84 = load i32, i32* @lr, align 4
  %v1_13f84 = add i32 %v0_13f84, 8
  store i32 %v1_13f84, i32* %r4.global-to-local, align 4
  %v2_13f88 = add i32 %v0_13f84, 4
  %v3_13f88 = inttoptr i32 %v2_13f88 to i32*
  store i32 %v1_13f7c, i32* %v3_13f88, align 4
  %v0_13f8c = load i32, i32* %ip.global-to-local, align 4
  %v1_13f8c = load i32, i32* %r1.global-to-local, align 4
  %v3_13f8c = add i32 %v1_13f8c, %v0_13f8c
  %v4_13f8c = inttoptr i32 %v3_13f8c to i32*
  store i32 %v0_13f8c, i32* %v4_13f8c, align 4
  %v0_13f90 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f90 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f90 = add i32 %v1_13f90, 4
  %v3_13f90 = inttoptr i32 %v2_13f90 to i32*
  store i32 %v0_13f90, i32* %v3_13f90, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13f98.loopexit:                      ; preds = %dec_label_pc_13eb8
  br label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f98.loopexit, %dec_label_pc_13bac, %dec_label_pc_13bb4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %ip.global-to-local, align 4
  %v4_13fa0 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_13fa0, i32* @r0, align 4
  %v1_13fa4 = add i32 %v4_13fa0, 44
  %v2_13fa4 = inttoptr i32 %v1_13fa4 to i32*
  %v3_13fa4 = load i32, i32* %v2_13fa4, align 4
  store i32 %v3_13fa4, i32* %ip.global-to-local, align 4
  %v1_13fa8 = add i32 %v3_13fa4, 4
  %v2_13fa8 = inttoptr i32 %v1_13fa8 to i32*
  %v3_13fa8 = load i32, i32* %v2_13fa8, align 4
  %v0_13fac = load i32, i32* @sl, align 4
  %v1_13fac = add i32 %v0_13fac, 16
  store i32 %v1_13fac, i32* %r1.global-to-local, align 4
  %v1_13fb0 = and i32 %v3_13fa8, -4
  store i32 %v1_13fb0, i32* %r3.global-to-local, align 4
  %v3_13fb4 = icmp ult i32 %v1_13fb0, %v1_13fac
  br i1 %v3_13fb4, label %dec_label_pc_13fe4, label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %dec_label_pc_13f98
  %v2_13fc0 = sub i32 %v1_13fb0, %v0_13fac
  %v2_13fc4 = add i32 %v0_13fac, %v3_13fa4
  store i32 %v2_13fc4, i32* %r1.global-to-local, align 4
  %v1_13fc8 = or i32 %v2_13fc0, 1
  store i32 %v1_13fc8, i32* %r3.global-to-local, align 4
  %v1_13fcc = or i32 %v0_13fac, 1
  store i32 %v1_13fcc, i32* %r2.global-to-local, align 4
  %v1_13fd0 = add i32 %v3_13fa4, 8
  store i32 %v1_13fd0, i32* %r4.global-to-local, align 4
  store i32 %v1_13fcc, i32* %v2_13fa8, align 4
  %v0_13fd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13fd8 = load i32, i32* @r0, align 4
  %v2_13fd8 = add i32 %v1_13fd8, 44
  %v3_13fd8 = inttoptr i32 %v2_13fd8 to i32*
  store i32 %v0_13fd8, i32* %v3_13fd8, align 4
  %v0_13fdc = load i32, i32* %r3.global-to-local, align 4
  %v1_13fdc = load i32, i32* %r1.global-to-local, align 4
  %v2_13fdc = add i32 %v1_13fdc, 4
  %v3_13fdc = inttoptr i32 %v2_13fdc to i32*
  store i32 %v0_13fdc, i32* %v3_13fdc, align 4
  br label %dec_label_pc_143e4

dec_label_pc_13fe4:                               ; preds = %dec_label_pc_13f98
  %v1_13fe4 = inttoptr i32 %v4_13fa0 to i32*
  %v2_13fe4 = load i32, i32* %v1_13fe4, align 4
  store i32 %v2_13fe4, i32* %r3.global-to-local, align 4
  %v1_13fe8 = and i32 %v2_13fe4, 2
  store i32 %v1_13fe8, i32* %ip.global-to-local, align 4
  %v2_13fe8 = icmp eq i32 %v1_13fe8, 0
  %v1_13fec = add i32 %v4_13fa0, 860
  %v2_13fec = inttoptr i32 %v1_13fec to i32*
  %v3_13fec = load i32, i32* %v2_13fec, align 4
  store i32 %v3_13fec, i32* %r1.global-to-local, align 4
  br i1 %v2_13fe8, label %dec_label_pc_14004, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fe4
  %v0_13ff4 = call i32 @function_149c4()
  %v0_13ff8 = load i32, i32* @sl, align 4
  %v1_13ff8 = add i32 %v0_13ff8, -7
  store i32 %v1_13ff8, i32* @r0, align 4
  %v0_13ffc = call i32 @function_13b0c()
  store i32 %v0_13ffc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143e0

dec_label_pc_14004:                               ; preds = %dec_label_pc_13fe4
  %v1_14004 = add i32 %v4_13fa0, 844
  %v2_14004 = inttoptr i32 %v1_14004 to i32*
  %v3_14004 = load i32, i32* %v2_14004, align 4
  store i32 %v3_14004, i32* %r3.global-to-local, align 4
  %v3_14008 = icmp ult i32 %v0_13fac, %v3_14004
  %v1_1400c = add i32 %v3_13fec, -1
  store i32 %v1_1400c, i32* %sb.global-to-local, align 4
  br i1 %v3_14008, label %dec_label_pc_140e0, label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_14004
  %v1_14014 = add i32 %v4_13fa0, 852
  %v2_14014 = inttoptr i32 %v1_14014 to i32*
  %v3_14014 = load i32, i32* %v2_14014, align 4
  store i32 %v3_14014, i32* %r2.global-to-local, align 4
  %v1_14018 = add i32 %v4_13fa0, 848
  %v2_14018 = inttoptr i32 %v1_14018 to i32*
  %v3_14018 = load i32, i32* %v2_14018, align 4
  store i32 %v3_14018, i32* %r3.global-to-local, align 4
  %v6_14020 = icmp slt i32 %v3_14018, %v3_14014
  br i1 %v6_14020, label %dec_label_pc_14024, label %dec_label_pc_140e0

dec_label_pc_14024:                               ; preds = %dec_label_pc_14014
  %v1_14024 = add i32 %v0_13fac, 10
  %v2_14028 = add i32 %v1_14024, %v3_13fec
  store i32 %v2_14028, i32* %r3.global-to-local, align 4
  %v2_1402c = sub i32 0, %v3_13fec
  %v3_1402c = and i32 %v2_14028, %v2_1402c
  store i32 %v3_1402c, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_1402c, %v0_13fac
  br i1 %tmp211, label %dec_label_pc_14038, label %dec_label_pc_140e0

dec_label_pc_14038:                               ; preds = %dec_label_pc_14024
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_1402c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_14050 = call i32 @function_15bf8(i32 0, i32 %v3_1402c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_14050, i32* %r0.global-to-local, align 4
  %v7_14054 = icmp eq i32 %v6_14050, -1
  br i1 %v7_14054, label %dec_label_pc_14038.dec_label_pc_140e0_crit_edge, label %dec_label_pc_1405c

dec_label_pc_14038.dec_label_pc_140e0_crit_edge:  ; preds = %dec_label_pc_14038
  %v1_14104.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_140e0

dec_label_pc_1405c:                               ; preds = %dec_label_pc_14038
  %v1_1405c = urem i32 %v6_14050, 8
  store i32 %v1_1405c, i32* %r2.global-to-local, align 4
  %v2_1405c = icmp eq i32 %v1_1405c, 0
  br i1 %v2_1405c, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1405c
  %v2_14060 = sub nsw i32 8, %v1_1405c
  store i32 %v2_14060, i32* %r3.global-to-local, align 4
  %v2_14064 = load i32, i32* @r4, align 4
  %v3_14064 = sub i32 %v2_14064, %v2_14060
  %v3_14068 = add i32 %v2_14060, %v6_14050
  store i32 %v3_14068, i32* %lr.global-to-local, align 4
  %v2_14070 = or i32 %v3_14064, 2
  store i32 %v2_14070, i32* %r2.global-to-local, align 4
  %v5_14078 = inttoptr i32 %v3_14068 to i32*
  store i32 %v2_14060, i32* %v5_14078, align 4
  %v1_1407c = load i32, i32* %r2.global-to-local, align 4
  %v2_1407c = load i32, i32* %lr.global-to-local, align 4
  %v3_1407c = add i32 %v2_1407c, 4
  %v4_1407c = inttoptr i32 %v3_1407c to i32*
  store i32 %v1_1407c, i32* %v4_1407c, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_1405c
  store i32 %v6_14050, i32* %lr.global-to-local, align 4
  %v1_1407447 = load i32, i32* @r4, align 4
  %v2_1407448 = or i32 %v1_1407447, 2
  store i32 %v2_1407448, i32* %r3.global-to-local, align 4
  %v3_14080 = inttoptr i32 %v6_14050 to i32*
  store i32 0, i32* %v3_14080, align 4
  %v1_14084 = load i32, i32* %r3.global-to-local, align 4
  %v2_14084 = load i32, i32* %lr.global-to-local, align 4
  %v3_14084 = add i32 %v2_14084, 4
  %v4_14084 = inttoptr i32 %v3_14084 to i32*
  store i32 %v1_14084, i32* %v4_14084, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 135656, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_14090 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_14090, i32* %ip.global-to-local, align 4
  %v1_14094 = add i32 %v4_14090, 848
  %v2_14094 = inttoptr i32 %v1_14094 to i32*
  %v3_14094 = load i32, i32* %v2_14094, align 4
  store i32 %v3_14094, i32* %r3.global-to-local, align 4
  %v1_14098 = add i32 %v4_14090, 856
  %v2_14098 = inttoptr i32 %v1_14098 to i32*
  %v3_14098 = load i32, i32* %v2_14098, align 4
  store i32 %v3_14098, i32* %r2.global-to-local, align 4
  %v1_1409c = add i32 %v3_14094, 1
  store i32 %v1_1409c, i32* %r3.global-to-local, align 4
  %v7_140a4 = icmp sgt i32 %v1_1409c, %v3_14098
  br i1 %v7_140a4, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_1409c, i32* %v2_14098, align 4
  %v0_140a8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_140a8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_140a8 = phi i32 [ %v4_14090, %.thread27 ], [ %v1_140a8.pre, %bb147 ]
  %v0_140a8 = phi i32 [ %v1_1409c, %.thread27 ], [ %v0_140a8.pre, %bb147 ]
  %v2_140a8 = add i32 %v1_140a8, 848
  %v3_140a8 = inttoptr i32 %v2_140a8 to i32*
  store i32 %v0_140a8, i32* %v3_140a8, align 4
  %v0_140ac = load i32, i32* %ip.global-to-local, align 4
  %v1_140ac = add i32 %v0_140ac, 868
  %v2_140ac = inttoptr i32 %v1_140ac to i32*
  %v3_140ac = load i32, i32* %v2_140ac, align 4
  store i32 %v3_140ac, i32* %r3.global-to-local, align 4
  %v1_140b0 = add i32 %v0_140ac, 880
  %v2_140b0 = inttoptr i32 %v1_140b0 to i32*
  %v3_140b0 = load i32, i32* %v2_140b0, align 4
  store i32 %v3_140b0, i32* %r2.global-to-local, align 4
  %v0_140b4 = load i32, i32* @r4, align 4
  %v2_140b4 = add i32 %v0_140b4, %v3_140ac
  store i32 %v2_140b4, i32* %r1.global-to-local, align 4
  %v1_140b8 = add i32 %v0_140ac, 872
  %v2_140b8 = inttoptr i32 %v1_140b8 to i32*
  %v3_140b8 = load i32, i32* %v2_140b8, align 4
  store i32 %v3_140b8, i32* %r3.global-to-local, align 4
  %v1_140c0 = add i32 %v0_140ac, 884
  %v2_140c0 = inttoptr i32 %v1_140c0 to i32*
  %v3_140c0 = load i32, i32* %v2_140c0, align 4
  store i32 %v3_140c0, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_140b4, %v3_140b0
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_140b4, i32* %v2_140b0, align 4
  %v0_140c8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_140c8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_140c8 = phi i32 [ %v0_140ac, %bb148 ], [ %v1_140c8.pre, %bb149 ]
  %v0_140c8 = phi i32 [ %v2_140b4, %bb148 ], [ %v0_140c8.pre, %bb149 ]
  %v2_140c8 = add i32 %v1_140c8, 868
  %v3_140c8 = inttoptr i32 %v2_140c8 to i32*
  store i32 %v0_140c8, i32* %v3_140c8, align 4
  %v0_140cc = load i32, i32* %r1.global-to-local, align 4
  %v1_140cc = load i32, i32* %r3.global-to-local, align 4
  %v2_140cc = add i32 %v1_140cc, %v0_140cc
  store i32 %v2_140cc, i32* %r1.global-to-local, align 4
  %v1_140d0 = load i32, i32* %r2.global-to-local, align 4
  %v0_140d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_140d4 = add i32 %v0_140d4, 8
  store i32 %v1_140d4, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_140cc, %v1_140d0
  br i1 %tmp213, label %bb151, label %dec_label_pc_143e0

bb151:                                            ; preds = %bb150
  %v5_140d8 = load i32, i32* %ip.global-to-local, align 4
  %v6_140d8 = add i32 %v5_140d8, 884
  %v7_140d8 = inttoptr i32 %v6_140d8 to i32*
  store i32 %v2_140cc, i32* %v7_140d8, align 4
  br label %dec_label_pc_143e0

dec_label_pc_140e0:                               ; preds = %dec_label_pc_14024, %dec_label_pc_14004, %dec_label_pc_14038.dec_label_pc_140e0_crit_edge, %dec_label_pc_14014
  %v1_14104 = phi i32 [ %v1_14104.pre, %dec_label_pc_14038.dec_label_pc_140e0_crit_edge ], [ %v0_13fac, %dec_label_pc_14014 ], [ %v0_13fac, %dec_label_pc_14004 ], [ %v0_13fac, %dec_label_pc_14024 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %ip.global-to-local, align 4
  %v4_140e8 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_140e8, i32* %r3.global-to-local, align 4
  %v1_140ec = add i32 %v4_140e8, 44
  %v2_140ec = inttoptr i32 %v1_140ec to i32*
  %v3_140ec = load i32, i32* %v2_140ec, align 4
  store i32 %v3_140ec, i32* %r0.global-to-local, align 4
  %v1_140f0 = add i32 %v4_140e8, 864
  %v2_140f0 = inttoptr i32 %v1_140f0 to i32*
  %v3_140f0 = load i32, i32* %v2_140f0, align 4
  store i32 %v3_140f0, i32* %r2.global-to-local, align 4
  %v1_140f4 = add i32 %v4_140e8, 840
  %v2_140f4 = inttoptr i32 %v1_140f4 to i32*
  %v3_140f4 = load i32, i32* %v2_140f4, align 4
  store i32 %v3_140f4, i32* %r3.global-to-local, align 4
  %v1_140f8 = add i32 %v3_140ec, 4
  %v2_140f8 = inttoptr i32 %v1_140f8 to i32*
  %v3_140f8 = load i32, i32* %v2_140f8, align 4
  store i32 %v3_140f8, i32* %r1.global-to-local, align 4
  %v1_14100 = urem i32 %v3_140f0, 2
  %v2_14100 = icmp eq i32 %v1_14100, 0
  %v1_140fc = add i32 %v1_14104, 16
  %v2_14104 = add i32 %v1_140fc, %v3_140f4
  store i32 %v2_14104, i32* %r3.global-to-local, align 4
  %v1_14108 = and i32 %v3_140f8, -4
  store i32 %v1_14108, i32* @r8, align 4
  br i1 %v2_14100, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_140e0
  %v3_1410c = sub i32 %v2_14104, %v1_14108
  store i32 %v3_1410c, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_140e0, %bb152
  %v0_14110 = phi i32 [ %v2_14104, %dec_label_pc_140e0 ], [ %v3_1410c, %bb152 ]
  %v1_14110 = load i32, i32* %sb.global-to-local, align 4
  %v2_14110 = add i32 %v1_14110, %v0_14110
  store i32 %v2_14110, i32* %r3.global-to-local, align 4
  %v1_14114 = sub i32 -1, %v1_14110
  store i32 %v1_14114, i32* %fp.global-to-local, align 4
  %v2_14118 = and i32 %v2_14110, %v1_14114
  store i32 %v2_14118, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_14118, 1
  br i1 %tmp154, label %dec_label_pc_1413c, label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %bb153
  store i32 %v2_14118, i32* %r0.global-to-local, align 4
  %v1_1412c = call i32 @function_15e84(i32 %v2_14118)
  store i32 %v1_1412c, i32* %r0.global-to-local, align 4
  %v3_14130 = icmp eq i32 %v1_1412c, -1
  store i32 %v1_1412c, i32* @r4, align 4
  br i1 %v3_14130, label %dec_label_pc_1413c, label %dec_label_pc_141a8

dec_label_pc_1413c:                               ; preds = %dec_label_pc_14128, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_14144 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_14144, i32* %r6.global-to-local, align 4
  %v1_14148 = add i32 %v4_14144, 864
  %v2_14148 = inttoptr i32 %v1_14148 to i32*
  %v3_14148 = load i32, i32* %v2_14148, align 4
  store i32 %v3_14148, i32* %r3.global-to-local, align 4
  %v1_1414c = urem i32 %v3_14148, 2
  %v2_1414c = icmp eq i32 %v1_1414c, 0
  br i1 %v2_1414c, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_1413c
  %v1_14150 = load i32, i32* @r8, align 4
  %v2_14150 = load i32, i32* %sb.global-to-local, align 4
  %v3_14150 = add i32 %v2_14150, %v1_14150
  %v2_14154 = load i32, i32* @r5, align 4
  %v3_14154 = add i32 %v3_14150, %v2_14154
  store i32 %v3_14154, i32* %r3.global-to-local, align 4
  %v2_14158 = load i32, i32* %fp.global-to-local, align 4
  %v3_14158 = and i32 %v2_14158, %v3_14154
  store i32 %v3_14158, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_1413c
  %v0_1415c.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_1415c = phi i32 [ %v0_1415c.pr, %.thread29thread-pre-split ], [ %v3_14158, %bb155 ]
  %v2_1415c = icmp ugt i32 %v0_1415c, 1048575
  br i1 %v2_1415c, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_14174 = phi i32 [ %v0_1415c, %.thread29 ], [ 1048576, %bb156 ]
  %v1_14164 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_14174, %v1_14164
  br i1 %tmp214, label %dec_label_pc_1416c, label %dec_label_pc_143d0

dec_label_pc_1416c:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_14174, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_14188 = call i32 @function_15bf8(i32 0, i32 %v0_14174, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_14188, i32* %r0.global-to-local, align 4
  %v3_1418c = icmp eq i32 %v6_14188, -1
  %v8_1418c = icmp eq i32 %v6_14188, -1
  store i32 %v6_14188, i32* @r4, align 4
  br i1 %v8_1418c, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_1416c
  %v1_14194 = load i32, i32* %r6.global-to-local, align 4
  %v2_14194 = add i32 %v1_14194, 864
  %v3_14194 = inttoptr i32 %v2_14194 to i32*
  %v4_14194 = load i32, i32* %v3_14194, align 4
  %v2_14198 = load i32, i32* @r5, align 4
  %v3_14198 = add i32 %v2_14198, %v6_14188
  store i32 %v3_14198, i32* %r0.global-to-local, align 4
  %v2_1419c = and i32 %v4_14194, -2
  store i32 %v2_1419c, i32* %r3.global-to-local, align 4
  store i32 %v2_1419c, i32* %v3_14194, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_1416c, %bb158
  br i1 %v3_1418c, label %dec_label_pc_141a8, label %dec_label_pc_141ac

dec_label_pc_141a8:                               ; preds = %.thread32, %dec_label_pc_14128
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141ac

dec_label_pc_141ac:                               ; preds = %.thread32, %dec_label_pc_141a8
  %v0_141ac = load i32, i32* @r4, align 4
  %v7_141ac = icmp eq i32 %v0_141ac, -1
  br i1 %v7_141ac, label %dec_label_pc_143d0, label %dec_label_pc_141b4

dec_label_pc_141b4:                               ; preds = %dec_label_pc_141ac
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r2.global-to-local, align 4
  %v4_141bc = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_141bc, i32* %ip.global-to-local, align 4
  store i32 %v3_140ec, i32* %r2.global-to-local, align 4
  %v1_141c4 = add i32 %v4_141bc, 872
  %v2_141c4 = inttoptr i32 %v1_141c4 to i32*
  %v3_141c4 = load i32, i32* %v2_141c4, align 4
  %v1_141c8 = load i32, i32* @r8, align 4
  %v2_141c8 = add i32 %v1_141c8, %v3_140ec
  store i32 %v2_141c8, i32* %r1.global-to-local, align 4
  %v0_141cc = load i32, i32* @r5, align 4
  %v2_141cc = add i32 %v0_141cc, %v3_141c4
  store i32 %v2_141cc, i32* %r3.global-to-local, align 4
  %v9_141d0 = icmp eq i32 %v0_141ac, %v2_141c8
  br i1 %v9_141d0, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_141b4
  store i32 %v2_141cc, i32* %v2_141c4, align 4
  br label %dec_label_pc_141ec

bb159:                                            ; preds = %dec_label_pc_141b4
  %v1_141d4 = load i32, i32* %r0.global-to-local, align 4
  %v8_141d4 = icmp eq i32 %v1_141d4, -1
  store i32 %v2_141cc, i32* %v2_141c4, align 4
  br i1 %v8_141d4, label %.thread34, label %dec_label_pc_141ec

.thread34:                                        ; preds = %bb159
  %v1_141dc = load i32, i32* @r5, align 4
  %v2_141dc = load i32, i32* @r8, align 4
  %v3_141dc = add i32 %v2_141dc, %v1_141dc
  %v2_141e0 = or i32 %v3_141dc, 1
  store i32 %v2_141e0, i32* %r3.global-to-local, align 4
  %v2_141e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_141e4 = add i32 %v2_141e4, 4
  %v4_141e4 = inttoptr i32 %v3_141e4 to i32*
  store i32 %v2_141e0, i32* %v4_141e4, align 4
  br label %dec_label_pc_14364

dec_label_pc_141ec:                               ; preds = %bb159, %.thread122
  %v0_141f0.pr = load i32, i32* @r8, align 4
  %v0_141ec = load i32, i32* %ip.global-to-local, align 4
  %v1_141ec = add i32 %v0_141ec, 864
  %v2_141ec = inttoptr i32 %v1_141ec to i32*
  %v3_141ec = load i32, i32* %v2_141ec, align 4
  store i32 %v3_141ec, i32* %r2.global-to-local, align 4
  %v2_141f0 = icmp eq i32 %v0_141f0.pr, 0
  br i1 %v2_141f0, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_141ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_141ec
  %v2_141f8 = urem i32 %v3_141ec, 2
  store i32 %v2_141f8, i32* %r3.global-to-local, align 4
  %v2_141fc = icmp eq i32 %v2_141f8, 0
  br i1 %v2_141fc, label %.thread40, label %dec_label_pc_14204

dec_label_pc_14204:                               ; preds = %.thread36
  %v0_14204 = load i32, i32* @r4, align 4
  %v1_14204 = load i32, i32* %r1.global-to-local, align 4
  %v3_14204 = icmp ult i32 %v0_14204, %v1_14204
  br i1 %v3_14204, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_14204
  %v2_14208 = and i32 %v3_141ec, -2
  store i32 %v2_14208, i32* %r3.global-to-local, align 4
  store i32 %v2_14208, i32* %v2_141ec, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_14204, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %ip.global-to-local, align 4
  %v4_14218 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_14218, i32* @r7, align 4
  %v1_1421c = add i32 %v4_14218, 864
  %v2_1421c = inttoptr i32 %v1_1421c to i32*
  %v3_1421c = load i32, i32* %v2_1421c, align 4
  store i32 %v3_1421c, i32* %r3.global-to-local, align 4
  %v1_14220 = urem i32 %v3_1421c, 2
  store i32 %v1_14220, i32* @r6, align 4
  %v2_14220 = icmp eq i32 %v1_14220, 0
  br i1 %v2_14220, label %dec_label_pc_142b4, label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %.thread40
  %v0_14228 = load i32, i32* @r8, align 4
  %v2_14228 = icmp eq i32 %v0_14228, 0
  br i1 %v2_14228, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_14228
  %v2_1422c = add i32 %v4_14218, 872
  %v3_1422c = inttoptr i32 %v2_1422c to i32*
  %v4_1422c = load i32, i32* %v3_1422c, align 4
  store i32 %v4_1422c, i32* %r2.global-to-local, align 4
  %v1_14230 = load i32, i32* %r1.global-to-local, align 4
  %v2_14230 = load i32, i32* @r4, align 4
  %v3_14230 = sub i32 %v2_14230, %v1_14230
  %v3_14234 = add i32 %v3_14230, %v4_1422c
  store i32 %v3_14234, i32* %r3.global-to-local, align 4
  store i32 %v3_14234, i32* %v3_1422c, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_14228, %bb161
  %v0_1423c = load i32, i32* @r4, align 4
  %v1_1423c = urem i32 %v0_1423c, 8
  store i32 %v1_1423c, i32* %r3.global-to-local, align 4
  %v2_1423c = icmp eq i32 %v1_1423c, 0
  br i1 %v2_1423c, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_14240 = sub nsw i32 8, %v1_1423c
  store i32 %v2_14240, i32* %r3.global-to-local, align 4
  %v3_14244 = add i32 %v2_14240, %v0_1423c
  store i32 %v3_14244, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_1424c = phi i32 [ 0, %.thread43 ], [ %v2_14240, %bb162 ]
  %v1_14248 = load i32, i32* @r5, align 4
  %v2_14248 = add i32 %v1_14248, %v0_1423c
  store i32 %v2_14248, i32* @r6, align 4
  %v1_1424c = load i32, i32* @r8, align 4
  %v2_1424c = add i32 %v2_14248, %v0_1424c
  %v2_14250 = add i32 %v2_1424c, %v1_1424c
  store i32 %v2_14250, i32* %r1.global-to-local, align 4
  %v1_14254 = load i32, i32* %sb.global-to-local, align 4
  %v2_14254 = add i32 %v1_14254, %v2_14250
  %v1_14258 = load i32, i32* %fp.global-to-local, align 4
  %v2_14258 = and i32 %v1_14258, %v2_14254
  store i32 %v2_14258, i32* %r2.global-to-local, align 4
  %v2_1425c = sub i32 0, %v2_14248
  store i32 %v2_1425c, i32* %r3.global-to-local, align 4
  %v2_14260 = sub i32 %v2_14258, %v2_14248
  store i32 %v2_14260, i32* @r5, align 4
  store i32 %v2_14260, i32* %r0.global-to-local, align 4
  br i1 %v2_1423c, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_1423c, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_1426c = call i32 @function_15e84(i32 %v2_14260)
  store i32 %v1_1426c, i32* %r0.global-to-local, align 4
  %v3_14270 = icmp eq i32 %v1_1426c, -1
  br i1 %v3_14270, label %dec_label_pc_14278, label %dec_label_pc_14288

dec_label_pc_14278:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1427c = call i32 @function_15e84(i32 0)
  store i32 %v1_1427c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_142e0

dec_label_pc_14288:                               ; preds = %bb164
  %v1_14288 = load i32, i32* @r4, align 4
  %v3_14288 = icmp ult i32 %v1_1426c, %v1_14288
  br i1 %v3_14288, label %dec_label_pc_14290, label %dec_label_pc_142e0

dec_label_pc_14290:                               ; preds = %dec_label_pc_14288
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r0.global-to-local, align 4
  %v4_14298 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_14298, i32* %r2.global-to-local, align 4
  %v1_1429c = add i32 %v4_14298, 864
  %v2_1429c = inttoptr i32 %v1_1429c to i32*
  %v3_1429c = load i32, i32* %v2_1429c, align 4
  %v0_142a0 = load i32, i32* @r6, align 4
  store i32 %v0_142a0, i32* %r0.global-to-local, align 4
  %v1_142a4 = and i32 %v3_1429c, -2
  store i32 %v1_142a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_142a4, i32* %v2_1429c, align 4
  br label %dec_label_pc_142e0

dec_label_pc_142b4:                               ; preds = %.thread40
  %v0_142b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_142b4 = icmp eq i32 %v0_142b4, -1
  br i1 %v3_142b4, label %dec_label_pc_142bc, label %dec_label_pc_142d8

dec_label_pc_142bc:                               ; preds = %dec_label_pc_142b4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_142c0 = call i32 @function_15e84(i32 0)
  store i32 %v1_142c0, i32* %r0.global-to-local, align 4
  %v0_142c4 = load i32, i32* @r7, align 4
  %v1_142c4 = add i32 %v0_142c4, 872
  %v2_142c4 = inttoptr i32 %v1_142c4 to i32*
  %v3_142c4 = load i32, i32* %v2_142c4, align 4
  store i32 %v3_142c4, i32* %r2.global-to-local, align 4
  %v0_142c8 = load i32, i32* @r4, align 4
  %v0_142cc = load i32, i32* @r5, align 4
  %v2_142c8 = add i32 %v3_142c4, %v1_142c0
  %v2_142cc = sub i32 %v2_142c8, %v0_142c8
  %v2_142d0 = sub i32 %v2_142cc, %v0_142cc
  store i32 %v2_142d0, i32* %r3.global-to-local, align 4
  store i32 %v2_142d0, i32* %v2_142c4, align 4
  %v0_142dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_142d8

dec_label_pc_142d8:                               ; preds = %dec_label_pc_142b4, %dec_label_pc_142bc
  %v0_142dc = phi i32 [ 0, %dec_label_pc_142b4 ], [ %v0_142dc.pre, %dec_label_pc_142bc ]
  %v0_142d8 = load i32, i32* @r4, align 4
  store i32 %v0_142d8, i32* @r7, align 4
  store i32 %v0_142dc, i32* @r5, align 4
  br label %dec_label_pc_142e0

dec_label_pc_142e0:                               ; preds = %dec_label_pc_14288, %dec_label_pc_14290, %dec_label_pc_14278, %dec_label_pc_142d8
  %v0_142e0 = load i32, i32* %r0.global-to-local, align 4
  %v7_142e0 = icmp eq i32 %v0_142e0, -1
  br i1 %v7_142e0, label %dec_label_pc_14364, label %dec_label_pc_142e8

dec_label_pc_142e8:                               ; preds = %dec_label_pc_142e0
  %v1_142e8 = load i32, i32* @r5, align 4
  %v2_142e8 = add i32 %v1_142e8, %v0_142e0
  %v0_142ec = load i32, i32* @r7, align 4
  %v2_142ec = sub i32 %v2_142e8, %v0_142ec
  %v1_142f0 = or i32 %v2_142ec, 1
  %v2_142f4 = add i32 %v0_142ec, 4
  %v3_142f4 = inttoptr i32 %v2_142f4 to i32*
  store i32 %v1_142f0, i32* %v3_142f4, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_14300 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_14300, i32* @r6, align 4
  %v1_14304 = add i32 %v4_14300, 872
  %v2_14304 = inttoptr i32 %v1_14304 to i32*
  %v3_14304 = load i32, i32* %v2_14304, align 4
  %v0_14308 = load i32, i32* @r8, align 4
  %v2_14308 = icmp eq i32 %v0_14308, 0
  %v0_1430c = load i32, i32* @r5, align 4
  %v2_1430c = add i32 %v0_1430c, %v3_14304
  store i32 %v2_1430c, i32* %r3.global-to-local, align 4
  store i32 %v2_1430c, i32* %v2_14304, align 4
  %v0_14314 = load i32, i32* @r7, align 4
  %v1_14314 = load i32, i32* @r6, align 4
  %v2_14314 = add i32 %v1_14314, 44
  %v3_14314 = inttoptr i32 %v2_14314 to i32*
  store i32 %v0_14314, i32* %v3_14314, align 4
  br i1 %v2_14308, label %dec_label_pc_14364, label %dec_label_pc_1431c

dec_label_pc_1431c:                               ; preds = %dec_label_pc_142e8
  %v0_14320 = load i32, i32* @r8, align 4
  %v1_14320 = add i32 %v0_14320, -12
  %v1_14324 = and i32 %v1_14320, -8
  store i32 %v3_140ec, i32* %ip.global-to-local, align 4
  %v2_1432c = add i32 %v1_14324, %v3_140ec
  store i32 %v2_1432c, i32* %r1.global-to-local, align 4
  %v2_14330 = icmp ugt i32 %v1_14324, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_14338 = or i32 %v1_14324, 1
  store i32 %v1_14338, i32* %r3.global-to-local, align 4
  store i32 %v1_14338, i32* %v2_140f8, align 4
  %v0_14340 = load i32, i32* %r2.global-to-local, align 4
  %v1_14340 = load i32, i32* %r1.global-to-local, align 4
  %v2_14340 = add i32 %v1_14340, 8
  %v3_14340 = inttoptr i32 %v2_14340 to i32*
  store i32 %v0_14340, i32* %v3_14340, align 4
  %v0_14344 = load i32, i32* %r2.global-to-local, align 4
  %v1_14344 = load i32, i32* %r1.global-to-local, align 4
  %v2_14344 = add i32 %v1_14344, 4
  %v3_14344 = inttoptr i32 %v2_14344 to i32*
  store i32 %v0_14344, i32* %v3_14344, align 4
  br i1 %v2_14330, label %dec_label_pc_1434c, label %dec_label_pc_14364

dec_label_pc_1434c:                               ; preds = %dec_label_pc_1431c
  %v0_1434c = load i32, i32* @r6, align 4
  %v1_1434c = add i32 %v0_1434c, 836
  %v2_1434c = inttoptr i32 %v1_1434c to i32*
  %v3_1434c = load i32, i32* %v2_1434c, align 4
  store i32 %v3_1434c, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_14354 = load i32, i32* %ip.global-to-local, align 4
  %v1_14354 = add i32 %v0_14354, 8
  store i32 %v1_14354, i32* @r0, align 4
  store i32 -1, i32* %v2_1434c, align 4
  %v0_1435c = call i32 @function_14b78()
  store i32 %v0_1435c, i32* %r0.global-to-local, align 4
  %v0_14360 = load i32, i32* @r4, align 4
  %v1_14360 = load i32, i32* @r6, align 4
  %v2_14360 = add i32 %v1_14360, 836
  %v3_14360 = inttoptr i32 %v2_14360 to i32*
  store i32 %v0_14360, i32* %v3_14360, align 4
  br label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %.thread34, %dec_label_pc_1431c, %dec_label_pc_142e8, %dec_label_pc_142e0, %dec_label_pc_1434c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r0.global-to-local, align 4
  %v4_1436c = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_1436c, i32* %lr.global-to-local, align 4
  %v1_14370 = add i32 %v4_1436c, 872
  store i32 %v1_14370, i32* %r1.global-to-local, align 4
  %v1_14374 = inttoptr i32 %v1_14370 to i32*
  %v2_14374 = load i32, i32* %v1_14374, align 4
  store i32 %v2_14374, i32* %r1.global-to-local, align 4
  %v3_14374 = add i32 %v4_1436c, 876
  %v4_14374 = inttoptr i32 %v3_14374 to i32*
  %v5_14374 = load i32, i32* %v4_14374, align 4
  store i32 %v5_14374, i32* %r3.global-to-local, align 4
  %v1_1437c = add i32 %v4_1436c, 868
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* %r3.global-to-local, align 4
  %v1_14380 = add i32 %v4_1436c, 884
  %v2_14380 = inttoptr i32 %v1_14380 to i32*
  %v3_14380 = load i32, i32* %v2_14380, align 4
  store i32 %v3_14380, i32* %r2.global-to-local, align 4
  %v2_14384 = add i32 %v3_1437c, %v2_14374
  store i32 %v2_14384, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_14374, %v5_14374
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_14364
  store i32 %v2_14374, i32* %v4_14374, align 4
  %v0_1438c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1438c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_14364, %bb165
  %v1_1438c = phi i32 [ %v3_14380, %dec_label_pc_14364 ], [ %v1_1438c.pre, %bb165 ]
  %v4_14390 = phi i32 [ %v2_14384, %dec_label_pc_14364 ], [ %v0_1438c.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_14390, %v1_1438c
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_14390 = load i32, i32* %lr.global-to-local, align 4
  %v6_14390 = add i32 %v5_14390, 884
  %v7_14390 = inttoptr i32 %v6_14390 to i32*
  store i32 %v4_14390, i32* %v7_14390, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_14394 = load i32, i32* %lr.global-to-local, align 4
  %v1_14394 = add i32 %v0_14394, 44
  %v2_14394 = inttoptr i32 %v1_14394 to i32*
  %v3_14394 = load i32, i32* %v2_14394, align 4
  store i32 %v3_14394, i32* %ip.global-to-local, align 4
  %v1_14398 = add i32 %v3_14394, 4
  %v2_14398 = inttoptr i32 %v1_14398 to i32*
  %v3_14398 = load i32, i32* %v2_14398, align 4
  store i32 %v1_13fac, i32* %r1.global-to-local, align 4
  %v1_143a0 = and i32 %v3_14398, -4
  store i32 %v1_143a0, i32* %r3.global-to-local, align 4
  %v3_143a4 = icmp ult i32 %v1_143a0, %v1_13fac
  br i1 %v3_143a4, label %dec_label_pc_143d0, label %dec_label_pc_143ac

dec_label_pc_143ac:                               ; preds = %bb168
  %v0_143ac = load i32, i32* @sl, align 4
  %v2_143ac = sub i32 %v1_143a0, %v0_143ac
  %v2_143b0 = add i32 %v0_143ac, %v3_14394
  store i32 %v2_143b0, i32* %r1.global-to-local, align 4
  %v1_143b4 = or i32 %v2_143ac, 1
  store i32 %v1_143b4, i32* %r3.global-to-local, align 4
  %v1_143b8 = or i32 %v0_143ac, 1
  store i32 %v1_143b8, i32* %r2.global-to-local, align 4
  %v1_143bc = add i32 %v3_14394, 8
  store i32 %v1_143bc, i32* %r0.global-to-local, align 4
  store i32 %v1_143b8, i32* %v2_14398, align 4
  %v0_143c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_143c4 = load i32, i32* %lr.global-to-local, align 4
  %v2_143c4 = add i32 %v1_143c4, 44
  %v3_143c4 = inttoptr i32 %v2_143c4 to i32*
  store i32 %v0_143c4, i32* %v3_143c4, align 4
  %v0_143c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_143c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_143c8 = add i32 %v1_143c8, 4
  %v3_143c8 = inttoptr i32 %v2_143c8 to i32*
  store i32 %v0_143c8, i32* %v3_143c8, align 4
  br label %dec_label_pc_143e0

dec_label_pc_143d0:                               ; preds = %bb157, %bb168, %dec_label_pc_141ac
  %v0_143d0 = call i32 @function_134dc()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_143d8 = inttoptr i32 %v0_143d0 to i32*
  store i32 12, i32* %v2_143d8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %bb151, %bb150, %dec_label_pc_143ac, %dec_label_pc_13ff4, %dec_label_pc_143d0
  %v0_143e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_143e0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %.thread1, %dec_label_pc_13fc0, %.thread121, %dec_label_pc_13e30, %dec_label_pc_13e24, %dec_label_pc_13c8c, %dec_label_pc_13c10, %dec_label_pc_143e0
  store i32 %v2_13b38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 135656, i32* %r2.global-to-local, align 4
  %v4_143f4 = load i32, i32* inttoptr (i32 135680 to i32*), align 512
  store i32 %v4_143f4, i32* @ip, align 4
  store i32 82944, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_143f4)
  br label %dec_label_pc_14400

dec_label_pc_14400:                               ; preds = %dec_label_pc_13b70, %dec_label_pc_143e4
  %v0_14400 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14400, i32* %r0.global-to-local, align 4
  store i32 %v3_13b0c, i32* @r4, align 4
  store i32 %v6_13b0c, i32* @r5, align 4
  store i32 %v9_13b0c, i32* @r6, align 4
  store i32 %v12_13b0c, i32* @r7, align 4
  store i32 %v15_13b0c, i32* @r8, align 4
  store i32 %v18_13b0c, i32* @sb, align 4
  store i32 %v21_13b0c, i32* @sl, align 4
  store i32 %v24_13b0c, i32* @fp, align 4
  store i32 %v27_13b0c, i32* @lr, align 4
  ret i32 %v0_14400

; uselistorder directives
  uselistorder i32 %v0_143ac, { 1, 0, 2 }
  uselistorder i32 %v3_14394, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14390, { 1, 0 }
  uselistorder i32 %v2_14374, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1436c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_14324, { 1, 2, 0 }
  uselistorder i32 %v0_142ec, { 1, 0 }
  uselistorder i32 %v0_142e0, { 1, 0 }
  uselistorder i32 %v2_142d0, { 1, 0 }
  uselistorder i32 %v2_14260, { 2, 1, 0 }
  uselistorder i32 %v2_14248, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14240, { 1, 0, 2 }
  uselistorder i32 %v1_1423c, { 2, 1, 0 }
  uselistorder i32 %v0_1423c, { 3, 1, 2, 0 }
  uselistorder i32 %v1_14220, { 1, 0 }
  uselistorder i32 %v2_141f8, { 1, 0 }
  uselistorder i32 %v3_141ec, { 1, 0, 2 }
  uselistorder i32 %v2_141cc, { 1, 0, 2 }
  uselistorder i32* %v2_141c4, { 1, 0, 2 }
  uselistorder i32 %v0_141ac, { 1, 0 }
  uselistorder i32 %v6_14188, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14174, { 2, 1, 0 }
  uselistorder i32 %v0_1415c, { 1, 0 }
  uselistorder i32 %v2_14118, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14114, { 1, 0 }
  uselistorder i32 %v3_140ec, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_140cc, { 1, 0, 2 }
  uselistorder i32 %v2_140b4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1405c, { 2, 1, 0 }
  uselistorder i32 %v6_14050, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_1402c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_13fec, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13fac, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_13fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13fa0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_13f8c, { 1, 0 }
  uselistorder i32 %v7_13f4c, { 1, 0 }
  uselistorder i32 %v4_13f4c, { 1, 0 }
  uselistorder i32 %v0_13f1c, { 1, 0 }
  uselistorder i32 %v2_13ef0, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_13eec54, { 1, 0 }
  uselistorder i32 %v1_13eb8, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_13ea0., { 1, 2, 0 }
  uselistorder i32 %v0_13ea8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13ea8, { 1, 0 }
  uselistorder i32 %v3_13e88, { 1, 0 }
  uselistorder i32 %v4_13e84, { 1, 0, 2 }
  uselistorder i32 %v1_13df4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13e4c, { 1, 0 }
  uselistorder i32 %v1_13e30, { 1, 0 }
  uselistorder i32 %v1_13cd0, { 1, 0 }
  uselistorder i32 %v0_13e10, { 2, 0, 1, 3 }
  uselistorder i32 %v3_13dd8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13e6c.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13db4, { 2, 1, 0 }
  uselistorder i32 %v3_13da8, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_13cc8, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_13d70, { 1, 0 }
  uselistorder i32 %v3_13d64, { 1, 0 }
  uselistorder i32 %v0_13d70, { 1, 0 }
  uselistorder i32 %v3_13d48, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13d38, { 1, 0, 2 }
  uselistorder i32 %v3_13cf0, { 2, 1, 0 }
  uselistorder i32 %v0_13ce0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13cb0, { 1, 0 }
  uselistorder i32 %v1_13c64, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13c60, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_13c04, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_13bf8, { 1, 0 }
  uselistorder i32 %v3_13bc8, { 1, 0 }
  uselistorder i32 %v0_13bbc, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13b9c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_13b90, { 1, 0 }
  uselistorder i32 %v0_13b68, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 0, 1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 89, 76, 77, 78, 79, 80, 82, 83, 84, 85, 109, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 25, 2, 4, 5, 55, 17, 9, 6, 18, 7, 8, 11, 10, 15, 12, 19, 14, 13, 20, 16, 57, 22, 21, 23, 54, 24, 26, 30, 27, 28, 0, 29, 31, 32, 33, 34, 37, 38, 35, 36, 43, 40, 39, 41, 42, 44, 56, 45, 46, 47, 48, 53, 49, 52, 51, 50 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_15bf8, { 1, 0 }
  uselistorder i32 34, { 1, 8, 0, 9, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 (i32)* @function_13a94, { 1, 0 }
  uselistorder label %dec_label_pc_14400, { 1, 0 }
  uselistorder label %dec_label_pc_143e4, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_143e0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_143d0, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_14364, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_142e0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_142d8, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_141ac, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_140e0, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_13f98, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_13eec, { 1, 0 }
  uselistorder label %dec_label_pc_13ef4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13eb8, { 1, 0 }
  uselistorder label %dec_label_pc_13e6c, { 1, 0 }
  uselistorder label %dec_label_pc_13e00, { 1, 0 }
  uselistorder label %dec_label_pc_13dfc, { 1, 0 }
  uselistorder label %dec_label_pc_13da8, { 1, 0 }
  uselistorder label %dec_label_pc_13d94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d5c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13d48, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_14414(i32 %arg1) local_unnamed_addr {
dec_label_pc_14414:
  %v0_14414 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14414, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14414
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14414, %bb
  %v10_14428 = phi i32 [ %arg1, %dec_label_pc_14414 ], [ 0, %bb ]
  ret i32 %v10_14428

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_1442c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1442c:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1442c = load i32, i32* @r4, align 4
  %v6_1442c = load i32, i32* @r5, align 4
  %v9_1442c = load i32, i32* @r6, align 4
  %v12_1442c = load i32, i32* @lr, align 4
  %v2_14434 = icmp eq i32 %arg1, 0
  store i32 135656, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_14444 = mul i32 %arg2, %arg1
  store i32 %v2_14444, i32* @r6, align 4
  br i1 %v2_14434, label %dec_label_pc_14474, label %dec_label_pc_1444c

dec_label_pc_1444c:                               ; preds = %dec_label_pc_1442c
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_14444, i32* @r0, align 4
  %v0_14454 = call i32 @function_12a40()
  %v0_14458 = load i32, i32* @r4, align 4
  %v9_14458 = icmp eq i32 %v0_14458, %v0_14454
  br i1 %v9_14458, label %dec_label_pc_1444c.dec_label_pc_14474_crit_edge, label %dec_label_pc_14460

dec_label_pc_1444c.dec_label_pc_14474_crit_edge:  ; preds = %dec_label_pc_1444c
  %v0_14478.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14474

dec_label_pc_14460:                               ; preds = %dec_label_pc_1444c
  %v0_14460 = call i32 @function_134dc()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1446c = inttoptr i32 %v0_14460 to i32*
  store i32 12, i32* %v2_1446c, align 4
  br label %dec_label_pc_14538

dec_label_pc_14474:                               ; preds = %dec_label_pc_1444c.dec_label_pc_14474_crit_edge, %dec_label_pc_1442c
  %v0_14490 = phi i32 [ %v0_14478.pre, %dec_label_pc_1444c.dec_label_pc_14474_crit_edge ], [ 135656, %dec_label_pc_1442c ]
  %v2_14478 = add i32 %v0_14490, 68
  %v3_14478 = inttoptr i32 %v2_14478 to i32*
  %v4_14478 = load i32, i32* %v3_14478, align 4
  store i32 %v4_14478, i32* @r4, align 4
  %v2_14490 = add i32 %v0_14490, 72
  %v3_14490 = inttoptr i32 %v2_14490 to i32*
  %v4_14490 = load i32, i32* %v3_14490, align 4
  store i32 %v4_14490, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14490)
  %v0_144a4 = load i32, i32* @r5, align 4
  %v2_144a4 = add i32 %v0_144a4, 16
  %v3_144a4 = inttoptr i32 %v2_144a4 to i32*
  %v4_144a4 = load i32, i32* %v3_144a4, align 4
  store i32 %v4_144a4, i32* %ip.global-to-local, align 4
  store i32 83120, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_144a4)
  %v0_144b0 = load i32, i32* @r6, align 4
  store i32 %v0_144b0, i32* @r0, align 4
  %v0_144b4 = call i32 @function_13b0c()
  store i32 %v0_144b4, i32* %r4.global-to-local, align 4
  %v2_144b8 = icmp eq i32 %v0_144b4, 0
  br i1 %v2_144b8, label %.thread, label %dec_label_pc_144c0

dec_label_pc_144c0:                               ; preds = %dec_label_pc_14474
  %v1_144c0 = add i32 %v0_144b4, -4
  %v2_144c0 = inttoptr i32 %v1_144c0 to i32*
  %v3_144c0 = load i32, i32* %v2_144c0, align 4
  %v1_144c4 = and i32 %v3_144c0, 2
  %v2_144c4 = icmp eq i32 %v1_144c4, 0
  br i1 %v2_144c4, label %dec_label_pc_144cc, label %.thread

dec_label_pc_144cc:                               ; preds = %dec_label_pc_144c0
  %v1_144cc7 = add i32 %v3_144c0, -4
  %v1_144d0 = and i32 %v1_144cc7, -4
  store i32 %v1_144d0, i32* @r2, align 4
  %v3_144d4 = udiv i32 %v1_144d0, 4
  store i32 %v3_144d4, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_144d0, 36
  %v2_144dc = icmp ult i32 %v1_144d0, 33
  %v3_144dc = or i1 %tmp, %v2_144dc
  br i1 %v3_144dc, label %dec_label_pc_144e8, label %dec_label_pc_144e0

dec_label_pc_144e0:                               ; preds = %dec_label_pc_144cc
  %v2_144e0 = inttoptr i32 %v0_144b4 to i8*
  %v3_144e0 = call i32 @function_13530(i8* %v2_144e0, i32 0)
  br label %.thread

dec_label_pc_144e8:                               ; preds = %dec_label_pc_144cc
  %tmp8 = icmp eq i32 %v1_144d0, 16
  %v2_144ec = inttoptr i32 %v0_144b4 to i32*
  store i32 0, i32* %v2_144ec, align 4
  %v1_144f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_144f0 = add i32 %v1_144f0, 4
  %v3_144f0 = inttoptr i32 %v2_144f0 to i32*
  store i32 0, i32* %v3_144f0, align 4
  %v1_144f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_144f4 = add i32 %v1_144f4, 8
  %v3_144f4 = inttoptr i32 %v2_144f4 to i32*
  store i32 0, i32* %v3_144f4, align 4
  %v2_144f8 = icmp ult i32 %v1_144d0, 13
  %v3_144f8 = or i1 %tmp8, %v2_144f8
  br i1 %v3_144f8, label %.thread, label %dec_label_pc_144fc

dec_label_pc_144fc:                               ; preds = %dec_label_pc_144e8
  %v0_144fc = load i32, i32* %ip.global-to-local, align 4
  %v1_14500 = load i32, i32* %r4.global-to-local, align 4
  %v2_14500 = add i32 %v1_14500, 12
  %v3_14500 = inttoptr i32 %v2_14500 to i32*
  store i32 0, i32* %v3_14500, align 4
  %v1_14504 = load i32, i32* %r4.global-to-local, align 4
  %v2_14504 = add i32 %v1_14504, 16
  %v3_14504 = inttoptr i32 %v2_14504 to i32*
  store i32 0, i32* %v3_14504, align 4
  %tmp9 = icmp ult i32 %v0_144fc, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %dec_label_pc_144fc
  %v0_1450c = load i32, i32* %ip.global-to-local, align 4
  %v7_1450c = icmp eq i32 %v0_1450c, 9
  %v1_14510 = load i32, i32* %r4.global-to-local, align 4
  %v2_14510 = add i32 %v1_14510, 20
  %v3_14510 = inttoptr i32 %v2_14510 to i32*
  store i32 0, i32* %v3_14510, align 4
  %v1_14514 = load i32, i32* %r4.global-to-local, align 4
  %v2_14514 = add i32 %v1_14514, 24
  %v3_14514 = inttoptr i32 %v2_14514 to i32*
  store i32 0, i32* %v3_14514, align 4
  br i1 %v7_1450c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1450c
  %v2_14518 = load i32, i32* %r4.global-to-local, align 4
  %v3_14518 = add i32 %v2_14518, 32
  %v4_14518 = inttoptr i32 %v3_14518 to i32*
  store i32 0, i32* %v4_14518, align 4
  %v2_1451c = load i32, i32* %r4.global-to-local, align 4
  %v3_1451c = add i32 %v2_1451c, 28
  %v4_1451c = inttoptr i32 %v3_1451c to i32*
  store i32 0, i32* %v4_1451c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1450c, %dec_label_pc_144c0, %dec_label_pc_144fc, %dec_label_pc_144e8, %dec_label_pc_14474, %dec_label_pc_144e0, %bb
  %v0_1452c = load i32, i32* @r5, align 4
  %v2_1452c = add i32 %v0_1452c, 24
  %v3_1452c = inttoptr i32 %v2_1452c to i32*
  %v4_1452c = load i32, i32* %v3_1452c, align 4
  store i32 %v4_1452c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1452c)
  br label %dec_label_pc_14538

dec_label_pc_14538:                               ; preds = %dec_label_pc_14460, %.thread
  %v0_14538 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1442c, i32* @r4, align 4
  store i32 %v6_1442c, i32* @r5, align 4
  store i32 %v9_1442c, i32* @r6, align 4
  store i32 %v12_1442c, i32* @lr, align 4
  ret i32 %v0_14538

; uselistorder directives
  uselistorder i32 %v1_144d0, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v0_144b4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 33, { 0, 6, 2, 7, 3, 8, 4, 9, 5, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14538, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1454c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1454c:
  %v0_1454c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1454c, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1454c
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1454c, %bb
  %v10_1455c = phi i32 [ %arg1, %dec_label_pc_1454c ], [ 0, %bb ]
  ret i32 %v10_1455c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_14560(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14560:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14560 = load i32, i32* @r4, align 4
  %v6_14560 = load i32, i32* @r5, align 4
  %v9_14560 = load i32, i32* @r6, align 4
  %v12_14560 = load i32, i32* @r7, align 4
  %v15_14560 = load i32, i32* @r8, align 4
  %v18_14560 = load i32, i32* @sb, align 4
  %v21_14560 = load i32, i32* @sl, align 4
  %v24_14560 = load i32, i32* @fp, align 4
  %v27_14560 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1456c = icmp eq i32* %arg1, null
  store i32 135656, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1456c, label %dec_label_pc_14580, label %dec_label_pc_14590

dec_label_pc_14580:                               ; preds = %dec_label_pc_14560
  store i32 %arg2, i32* @r0, align 4
  %v0_14584 = call i32 @function_13b0c()
  store i32 %v0_14584, i32* %r0.global-to-local, align 4
  store i32 %v0_14584, i32* @r4, align 4
  br label %dec_label_pc_148e8

dec_label_pc_14590:                               ; preds = %dec_label_pc_14560
  %v2_14590 = icmp eq i32 %arg2, 0
  br i1 %v2_14590, label %dec_label_pc_14598, label %dec_label_pc_145a4

dec_label_pc_14598:                               ; preds = %dec_label_pc_14590
  %v0_14598 = call i32 @function_14b78()
  store i32 %v0_14598, i32* %r0.global-to-local, align 4
  %v0_1459c = load i32, i32* @r6, align 4
  store i32 %v0_1459c, i32* @r4, align 4
  br label %dec_label_pc_148e8

dec_label_pc_145a4:                               ; preds = %dec_label_pc_14590
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_145ac = load i32, i32* inttoptr (i32 135724 to i32*), align 4
  store i32 %v4_145ac, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_145ac, i32* %r2.global-to-local, align 4
  %v4_145b8 = load i32, i32* inttoptr (i32 135692 to i32*), align 4
  store i32 %v4_145b8, i32* %r1.global-to-local, align 4
  %v2_145bc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_145bc, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_145c4 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_145c4)
  %v0_145d0 = load i32, i32* @r4, align 4
  store i32 %v0_145d0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_145dc = load i32, i32* inttoptr (i32 135672 to i32*), align 8
  store i32 %v4_145dc, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_145e8.797 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_145dc)
  %v0_145e8 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_145e8, -32
  br i1 %tmp36, label %dec_label_pc_14604, label %dec_label_pc_145f0

dec_label_pc_145f0:                               ; preds = %dec_label_pc_145a4
  %v0_145f0 = call i32 @function_134dc()
  store i32 %v0_145f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_145fc = inttoptr i32 %v0_145f0 to i32*
  store i32 12, i32* %v2_145fc, align 4
  br label %dec_label_pc_148e8

dec_label_pc_14604:                               ; preds = %dec_label_pc_145a4
  %v1_14604 = add i32 %v0_145e8, 11
  store i32 %v1_14604, i32* %r0.global-to-local, align 4
  %v0_14608 = load i32, i32* @r5, align 4
  %v1_14608 = add i32 %v0_14608, -4
  %v2_14608 = inttoptr i32 %v1_14608 to i32*
  %v3_14608 = load i32, i32* %v2_14608, align 4
  store i32 %v3_14608, i32* %r2.global-to-local, align 4
  %v2_1460c = icmp ugt i32 %v1_14604, 14
  %v7_1460c = icmp eq i32 %v1_14604, 15
  %v2_14610 = xor i1 %v2_1460c, true
  %v3_14610 = or i1 %v7_1460c, %v2_14610
  br i1 %v3_14610, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_14604
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_14604, %bb
  %v2_14614 = xor i1 %v7_1460c, true
  %v3_14614 = and i1 %v2_1460c, %v2_14614
  br i1 %v3_14614, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_14614 = and i32 %v1_14604, -8
  store i32 %v5_14614, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_14618 = and i32 %v3_14608, 2
  %v2_14618 = icmp eq i32 %v1_14618, 0
  %v1_1461c = add i32 %v0_14608, -8
  store i32 %v1_1461c, i32* @sl, align 4
  %v1_14620 = and i32 %v3_14608, -4
  store i32 %v1_14620, i32* @r6, align 4
  br i1 %v2_14618, label %dec_label_pc_14628, label %dec_label_pc_14800

dec_label_pc_14628:                               ; preds = %bb29
  %v1_14628 = load i32, i32* @sb, align 4
  %v3_14628 = icmp ult i32 %v1_14620, %v1_14628
  br i1 %v3_14628, label %dec_label_pc_14634, label %bb30

bb30:                                             ; preds = %dec_label_pc_14628
  store i32 %v1_14620, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14798

dec_label_pc_14634:                               ; preds = %dec_label_pc_14628
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1463c = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_1463c, i32* %r0.global-to-local, align 4
  %v1_14640 = add i32 %v4_1463c, 44
  %v2_14640 = inttoptr i32 %v1_14640 to i32*
  %v3_14640 = load i32, i32* %v2_14640, align 4
  store i32 %v3_14640, i32* %r3.global-to-local, align 4
  %v2_14644 = add i32 %v1_14620, %v1_1461c
  store i32 %v2_14644, i32* @r4, align 4
  %v9_14648 = icmp eq i32 %v2_14644, %v3_14640
  %v1_1464c = add i32 %v2_14644, 4
  %v2_1464c = inttoptr i32 %v1_1464c to i32*
  %v3_1464c = load i32, i32* %v2_1464c, align 4
  store i32 %v3_1464c, i32* %r1.global-to-local, align 4
  br i1 %v9_14648, label %dec_label_pc_14654, label %dec_label_pc_14690

dec_label_pc_14654:                               ; preds = %dec_label_pc_14634
  %v1_14654 = and i32 %v3_1464c, -4
  %v2_14658 = add i32 %v1_14654, %v1_14620
  store i32 %v2_14658, i32* %r1.global-to-local, align 4
  %v1_1465c = add i32 %v1_14628, 16
  store i32 %v1_1465c, i32* %r3.global-to-local, align 4
  %v3_14660 = icmp ult i32 %v2_14658, %v1_1465c
  br i1 %v3_14660, label %dec_label_pc_146e4, label %dec_label_pc_14668

dec_label_pc_14668:                               ; preds = %dec_label_pc_14654
  %v2_14668 = sub i32 %v2_14658, %v1_14628
  %v1_1466c = urem i32 %v3_14608, 2
  %v2_14670 = add i32 %v1_14628, %v1_1461c
  store i32 %v2_14670, i32* %r1.global-to-local, align 4
  %v2_14674 = or i32 %v1_14628, %v1_1466c
  store i32 %v2_14674, i32* %r2.global-to-local, align 4
  %v1_14678 = or i32 %v2_14668, 1
  store i32 %v1_14678, i32* %r3.global-to-local, align 4
  store i32 %v0_14608, i32* @r4, align 4
  store i32 %v2_14674, i32* %v2_14608, align 4
  %v0_14684 = load i32, i32* %r1.global-to-local, align 4
  %v1_14684 = load i32, i32* %r0.global-to-local, align 4
  %v2_14684 = add i32 %v1_14684, 44
  %v3_14684 = inttoptr i32 %v2_14684 to i32*
  store i32 %v0_14684, i32* %v3_14684, align 4
  %v0_14688 = load i32, i32* %r3.global-to-local, align 4
  %v1_14688 = load i32, i32* %r1.global-to-local, align 4
  %v2_14688 = add i32 %v1_14688, 4
  %v3_14688 = inttoptr i32 %v2_14688 to i32*
  store i32 %v0_14688, i32* %v3_14688, align 4
  br label %dec_label_pc_148cc

dec_label_pc_14690:                               ; preds = %dec_label_pc_14634
  %v1_14690 = and i32 %v3_1464c, -2
  %v2_14694 = add i32 %v1_14690, %v2_14644
  store i32 %v2_14694, i32* %r3.global-to-local, align 4
  %v1_14698 = add i32 %v2_14694, 4
  %v2_14698 = inttoptr i32 %v1_14698 to i32*
  %v3_14698 = load i32, i32* %v2_14698, align 4
  store i32 %v3_14698, i32* %r3.global-to-local, align 4
  %v1_1469c = urem i32 %v3_14698, 2
  %v2_1469c = icmp eq i32 %v1_1469c, 0
  br i1 %v2_1469c, label %dec_label_pc_146a4, label %dec_label_pc_146e4

dec_label_pc_146a4:                               ; preds = %dec_label_pc_14690
  %v1_146a4 = and i32 %v3_1464c, -4
  store i32 %v1_146a4, i32* %r3.global-to-local, align 4
  %v2_146a8 = add i32 %v1_146a4, %v1_14620
  store i32 %v2_146a8, i32* %r0.global-to-local, align 4
  %v3_146ac = icmp ult i32 %v2_146a8, %v1_14628
  br i1 %v3_146ac, label %dec_label_pc_146e4, label %dec_label_pc_146b4

dec_label_pc_146b4:                               ; preds = %dec_label_pc_146a4
  %v1_146b4 = add i32 %v1_14620, %v0_14608
  %v2_146b4 = inttoptr i32 %v1_146b4 to i32*
  %v3_146b4 = load i32, i32* %v2_146b4, align 4
  store i32 %v3_146b4, i32* %r1.global-to-local, align 4
  %v1_146b8 = add i32 %v3_146b4, 12
  %v2_146b8 = inttoptr i32 %v1_146b8 to i32*
  %v3_146b8 = load i32, i32* %v2_146b8, align 4
  store i32 %v3_146b8, i32* %r3.global-to-local, align 4
  %v9_146bc = icmp eq i32 %v3_146b8, %v2_14644
  %v1_146c0 = add i32 %v2_14644, 12
  %v2_146c0 = inttoptr i32 %v1_146c0 to i32*
  %v3_146c0 = load i32, i32* %v2_146c0, align 4
  store i32 %v3_146c0, i32* %r2.global-to-local, align 4
  br i1 %v9_146bc, label %dec_label_pc_146c8, label %dec_label_pc_146d4

dec_label_pc_146c8:                               ; preds = %dec_label_pc_146b4
  %v1_146c8 = add i32 %v3_146c0, 8
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  store i32 %v3_146c8, i32* %r3.global-to-local, align 4
  %v9_146cc = icmp eq i32 %v3_146c8, %v2_14644
  br i1 %v9_146cc, label %dec_label_pc_146d8, label %dec_label_pc_146d4

dec_label_pc_146d4:                               ; preds = %dec_label_pc_146b4, %dec_label_pc_146c8
  %v0_146d4 = call i32 @function_14df4()
  store i32 %v0_146d4, i32* %r0.global-to-local, align 4
  %v0_146d8.pre = load i32, i32* @r1, align 4
  %v1_146d8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_146d8

dec_label_pc_146d8:                               ; preds = %dec_label_pc_146c8, %dec_label_pc_146d4
  %v1_146d8 = phi i32 [ %v3_146c0, %dec_label_pc_146c8 ], [ %v1_146d8.pre, %dec_label_pc_146d4 ]
  %v0_146d8 = phi i32 [ %v3_146b4, %dec_label_pc_146c8 ], [ %v0_146d8.pre, %dec_label_pc_146d4 ]
  %v2_146d8 = add i32 %v1_146d8, 8
  %v3_146d8 = inttoptr i32 %v2_146d8 to i32*
  store i32 %v0_146d8, i32* %v3_146d8, align 4
  %v0_146dc = load i32, i32* %r2.global-to-local, align 4
  %v1_146dc = load i32, i32* %r1.global-to-local, align 4
  %v2_146dc = add i32 %v1_146dc, 12
  %v3_146dc = inttoptr i32 %v2_146dc to i32*
  store i32 %v0_146dc, i32* %v3_146dc, align 4
  %v1_14798.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14798

dec_label_pc_146e4:                               ; preds = %dec_label_pc_14654, %dec_label_pc_146a4, %dec_label_pc_14690
  %v1_146e4 = add i32 %v1_14628, -7
  store i32 %v1_146e4, i32* @r0, align 4
  %v0_146e8 = call i32 @function_13b0c()
  store i32 %v0_146e8, i32* @r0, align 4
  store i32 %v0_146e8, i32* %r1.global-to-local, align 4
  %v2_146ec = icmp eq i32 %v0_146e8, 0
  br i1 %v2_146ec, label %bb31, label %dec_label_pc_146f8

bb31:                                             ; preds = %dec_label_pc_146e4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_148cc

dec_label_pc_146f8:                               ; preds = %dec_label_pc_146e4
  %v1_14700.pre = load i32, i32* @r4, align 4
  %v1_146f8 = add i32 %v0_146e8, -4
  %v2_146f8 = inttoptr i32 %v1_146f8 to i32*
  %v3_146f8 = load i32, i32* %v2_146f8, align 4
  store i32 %v3_146f8, i32* @r3, align 4
  %v1_146fc = add i32 %v0_146e8, -8
  store i32 %v1_146fc, i32* @r7, align 4
  %v9_14700 = icmp eq i32 %v1_146fc, %v1_14700.pre
  br i1 %v9_14700, label %.thread2, label %dec_label_pc_14710

.thread2:                                         ; preds = %dec_label_pc_146f8
  %v2_14704 = and i32 %v3_146f8, -4
  store i32 %v2_14704, i32* %r3.global-to-local, align 4
  %v2_14708 = load i32, i32* @r6, align 4
  %v3_14708 = add i32 %v2_14708, %v2_14704
  store i32 %v3_14708, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14798

dec_label_pc_14710:                               ; preds = %dec_label_pc_146f8
  %v0_14710 = load i32, i32* @r6, align 4
  %v1_14710 = add i32 %v0_14710, -4
  store i32 %v1_14710, i32* @r2, align 4
  %v3_14714 = udiv i32 %v1_14710, 4
  store i32 %v3_14714, i32* @ip, align 4
  %tmp37 = and i32 %v1_14710, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1471c = icmp ult i32 %v1_14710, 36
  %v3_1471c = or i1 %tmp38, %v2_1471c
  %v0_1472c = load i32, i32* @r5, align 4
  br i1 %v3_1471c, label %dec_label_pc_1472c, label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_14710
  store i32 %v0_1472c, i32* @r1, align 4
  %v0_14724 = call i32 @function_135e0()
  store i32 %v0_14724, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1472c:                               ; preds = %dec_label_pc_14710
  %v1_1472c = inttoptr i32 %v0_1472c to i32*
  %v2_1472c = load i32, i32* %v1_1472c, align 4
  store i32 %v2_1472c, i32* %r3.global-to-local, align 4
  %v2_14730 = inttoptr i32 %v0_146e8 to i32*
  store i32 %v2_1472c, i32* %v2_14730, align 4
  %v0_14734 = load i32, i32* @r5, align 4
  %v1_14734 = add i32 %v0_14734, 4
  %v2_14734 = inttoptr i32 %v1_14734 to i32*
  %v3_14734 = load i32, i32* %v2_14734, align 4
  store i32 %v3_14734, i32* %r3.global-to-local, align 4
  %v1_14738 = load i32, i32* %r1.global-to-local, align 4
  %v2_14738 = add i32 %v1_14738, 4
  %v3_14738 = inttoptr i32 %v2_14738 to i32*
  store i32 %v3_14734, i32* %v3_14738, align 4
  %v0_1473c = load i32, i32* @r5, align 4
  %v1_1473c = add i32 %v0_1473c, 8
  %v2_1473c = inttoptr i32 %v1_1473c to i32*
  %v3_1473c = load i32, i32* %v2_1473c, align 4
  store i32 %v3_1473c, i32* %r3.global-to-local, align 4
  %v0_14740 = load i32, i32* @ip, align 4
  %v1_14744 = load i32, i32* %r1.global-to-local, align 4
  %v2_14744 = add i32 %v1_14744, 8
  %v3_14744 = inttoptr i32 %v2_14744 to i32*
  store i32 %v3_1473c, i32* %v3_14744, align 4
  %tmp39 = icmp ult i32 %v0_14740, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1474c

dec_label_pc_1474c:                               ; preds = %dec_label_pc_1472c
  %v0_1474c = load i32, i32* @r5, align 4
  %v1_1474c = add i32 %v0_1474c, 12
  %v2_1474c = inttoptr i32 %v1_1474c to i32*
  %v3_1474c = load i32, i32* %v2_1474c, align 4
  store i32 %v3_1474c, i32* %r3.global-to-local, align 4
  %v1_14750 = load i32, i32* %r1.global-to-local, align 4
  %v2_14750 = add i32 %v1_14750, 12
  %v3_14750 = inttoptr i32 %v2_14750 to i32*
  store i32 %v3_1474c, i32* %v3_14750, align 4
  %v0_14754 = load i32, i32* @r5, align 4
  %v1_14754 = add i32 %v0_14754, 16
  %v2_14754 = inttoptr i32 %v1_14754 to i32*
  %v3_14754 = load i32, i32* %v2_14754, align 4
  store i32 %v3_14754, i32* %r3.global-to-local, align 4
  %v0_14758 = load i32, i32* @ip, align 4
  %v1_1475c = load i32, i32* %r1.global-to-local, align 4
  %v2_1475c = add i32 %v1_1475c, 16
  %v3_1475c = inttoptr i32 %v2_1475c to i32*
  store i32 %v3_14754, i32* %v3_1475c, align 4
  %tmp40 = icmp ult i32 %v0_14758, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_1474c
  %v0_14764 = load i32, i32* @r5, align 4
  %v1_14764 = add i32 %v0_14764, 20
  %v2_14764 = inttoptr i32 %v1_14764 to i32*
  %v3_14764 = load i32, i32* %v2_14764, align 4
  store i32 %v3_14764, i32* %r3.global-to-local, align 4
  %v1_14768 = load i32, i32* %r1.global-to-local, align 4
  %v2_14768 = add i32 %v1_14768, 20
  %v3_14768 = inttoptr i32 %v2_14768 to i32*
  store i32 %v3_14764, i32* %v3_14768, align 4
  %v0_1476c = load i32, i32* @r5, align 4
  %v1_1476c = add i32 %v0_1476c, 24
  %v2_1476c = inttoptr i32 %v1_1476c to i32*
  %v3_1476c = load i32, i32* %v2_1476c, align 4
  store i32 %v3_1476c, i32* %r3.global-to-local, align 4
  %v1_14770 = load i32, i32* %r1.global-to-local, align 4
  %v2_14770 = add i32 %v1_14770, 24
  %v3_14770 = inttoptr i32 %v2_14770 to i32*
  store i32 %v3_1476c, i32* %v3_14770, align 4
  %v0_14774 = load i32, i32* @ip, align 4
  %v7_14774 = icmp eq i32 %v0_14774, 9
  br i1 %v7_14774, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_14764
  %v1_14778 = load i32, i32* @r5, align 4
  %v2_14778 = add i32 %v1_14778, 28
  %v3_14778 = inttoptr i32 %v2_14778 to i32*
  %v4_14778 = load i32, i32* %v3_14778, align 4
  store i32 %v4_14778, i32* %r3.global-to-local, align 4
  %v2_1477c = load i32, i32* %r1.global-to-local, align 4
  %v3_1477c = add i32 %v2_1477c, 28
  %v4_1477c = inttoptr i32 %v3_1477c to i32*
  store i32 %v4_14778, i32* %v4_1477c, align 4
  %v1_14780 = load i32, i32* @r5, align 4
  %v2_14780 = add i32 %v1_14780, 32
  %v3_14780 = inttoptr i32 %v2_14780 to i32*
  %v4_14780 = load i32, i32* %v3_14780, align 4
  store i32 %v4_14780, i32* %r3.global-to-local, align 4
  %v2_14784 = load i32, i32* %r1.global-to-local, align 4
  %v3_14784 = add i32 %v2_14784, 32
  %v4_14784 = inttoptr i32 %v3_14784 to i32*
  store i32 %v4_14780, i32* %v4_14784, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14764, %dec_label_pc_1474c, %dec_label_pc_1472c, %dec_label_pc_14720, %bb32
  %v0_14788 = load i32, i32* @r5, align 4
  store i32 %v0_14788, i32* @r0, align 4
  %v0_1478c = call i32 @function_14b78()
  store i32 %v0_1478c, i32* %r0.global-to-local, align 4
  %v0_14790 = load i32, i32* @r7, align 4
  %v1_14790 = add i32 %v0_14790, 8
  store i32 %v1_14790, i32* @r4, align 4
  br label %dec_label_pc_148cc

dec_label_pc_14798:                               ; preds = %bb30, %.thread2, %dec_label_pc_146d8
  %v0_147ac = phi i32 [ %v3_14708, %.thread2 ], [ %v1_14620, %bb30 ], [ %v1_14798.pre, %dec_label_pc_146d8 ]
  %v0_14798 = load i32, i32* @sb, align 4
  %v2_14798 = sub i32 %v0_147ac, %v0_14798
  store i32 %v2_14798, i32* %r1.global-to-local, align 4
  %v0_147a0 = load i32, i32* @sl, align 4
  %v1_147a0 = add i32 %v0_147a0, 4
  %v2_147a0 = inttoptr i32 %v1_147a0 to i32*
  %v3_147a0 = load i32, i32* %v2_147a0, align 4
  %tmp41 = icmp ugt i32 %v2_14798, 15
  %v1_147c8 = urem i32 %v3_147a0, 2
  store i32 %v1_147c8, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_147c8, label %dec_label_pc_147a8

dec_label_pc_147a8:                               ; preds = %dec_label_pc_14798
  %v2_147ac = or i32 %v1_147c8, %v0_147ac
  store i32 %v2_147ac, i32* %r3.global-to-local, align 4
  store i32 %v2_147ac, i32* %v2_147a0, align 4
  %v0_147b4 = load i32, i32* @sl, align 4
  %v1_147b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_147b4 = add i32 %v1_147b4, %v0_147b4
  store i32 %v2_147b4, i32* %r2.global-to-local, align 4
  %v1_147b8 = add i32 %v2_147b4, 4
  %v2_147b8 = inttoptr i32 %v1_147b8 to i32*
  %v3_147b8 = load i32, i32* %v2_147b8, align 4
  %v1_147bc = or i32 %v3_147b8, 1
  store i32 %v1_147bc, i32* %r3.global-to-local, align 4
  store i32 %v1_147bc, i32* %v2_147b8, align 4
  br label %dec_label_pc_147f8

dec_label_pc_147c8:                               ; preds = %dec_label_pc_14798
  %v2_147cc = add i32 %v0_147a0, %v0_14798
  store i32 %v2_147cc, i32* %r0.global-to-local, align 4
  %v2_147d0 = or i32 %v1_147c8, %v0_14798
  store i32 %v2_147d0, i32* %r3.global-to-local, align 4
  %v1_147d4 = or i32 %v2_14798, 1
  store i32 %v1_147d4, i32* %r2.global-to-local, align 4
  store i32 %v2_147d0, i32* %v2_147a0, align 4
  %v0_147dc = load i32, i32* %r2.global-to-local, align 4
  %v1_147dc = load i32, i32* %r0.global-to-local, align 4
  %v2_147dc = add i32 %v1_147dc, 4
  %v3_147dc = inttoptr i32 %v2_147dc to i32*
  store i32 %v0_147dc, i32* %v3_147dc, align 4
  %v0_147e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_147e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_147e0 = add i32 %v1_147e0, %v0_147e0
  store i32 %v2_147e0, i32* %r2.global-to-local, align 4
  %v1_147e4 = add i32 %v2_147e0, 4
  %v2_147e4 = inttoptr i32 %v1_147e4 to i32*
  %v3_147e4 = load i32, i32* %v2_147e4, align 4
  %v1_147e8 = or i32 %v3_147e4, 1
  store i32 %v1_147e8, i32* %r3.global-to-local, align 4
  store i32 %v1_147e8, i32* %v2_147e4, align 4
  %v0_147f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_147f0 = add i32 %v0_147f0, 8
  store i32 %v1_147f0, i32* @r0, align 4
  %v0_147f4 = call i32 @function_14b78()
  store i32 %v0_147f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_147f8

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147a8, %dec_label_pc_147c8
  %v0_147f8 = load i32, i32* @sl, align 4
  %v1_147f8 = add i32 %v0_147f8, 8
  store i32 %v1_147f8, i32* @r4, align 4
  br label %dec_label_pc_148cc

dec_label_pc_14800:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r1.global-to-local, align 4
  %v4_14808 = load i32, i32* inttoptr (i32 135688 to i32*), align 8
  store i32 %v4_14808, i32* @r8, align 4
  %v2_1480c = inttoptr i32 %v1_1461c to i32*
  %v3_1480c = load i32, i32* %v2_1480c, align 4
  store i32 %v3_1480c, i32* @r4, align 4
  %v1_14810 = add i32 %v4_14808, 860
  %v2_14810 = inttoptr i32 %v1_14810 to i32*
  %v3_14810 = load i32, i32* %v2_14810, align 4
  %v1_14814 = add i32 %v3_1480c, 4
  %v1_14818 = add i32 %v3_14810, -1
  store i32 %v1_14818, i32* %r2.global-to-local, align 4
  %v2_1481c = add i32 %v1_14814, %v1_14818
  %v1_14820 = load i32, i32* @sb, align 4
  %v2_14820 = add i32 %v2_1481c, %v1_14820
  store i32 %v2_14820, i32* %r3.global-to-local, align 4
  %v2_14824 = sub i32 0, %v3_14810
  %v3_14824 = and i32 %v2_14820, %v2_14824
  store i32 %v3_14824, i32* @r7, align 4
  %v2_14828 = sub i32 %v3_14824, %v3_1480c
  store i32 %v2_14828, i32* @fp, align 4
  %v9_1482c = icmp eq i32 %v1_14620, %v2_14828
  br i1 %v9_1482c, label %dec_label_pc_148a0, label %dec_label_pc_14834

dec_label_pc_14834:                               ; preds = %dec_label_pc_14800
  %v2_14834 = sub i32 %v1_1461c, %v3_1480c
  store i32 %v2_14834, i32* %r0.global-to-local, align 4
  %v2_14838 = add i32 %v3_1480c, %v1_14620
  store i32 %v2_14838, i32* %r1.global-to-local, align 4
  store i32 %v3_14824, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_14844 = call i32 @function_161c8(i32 %v2_14834, i32 %v2_14838, i32 %v3_14824, i32 1)
  store i32 %v4_14844, i32* %r0.global-to-local, align 4
  %v7_14848 = icmp eq i32 %v4_14844, -1
  br i1 %v7_14848, label %dec_label_pc_14894, label %dec_label_pc_14850

dec_label_pc_14850:                               ; preds = %dec_label_pc_14834
  %v1_14850 = load i32, i32* @r4, align 4
  %v2_14850 = add i32 %v1_14850, %v4_14844
  store i32 %v2_14850, i32* %r0.global-to-local, align 4
  %v0_14854 = load i32, i32* @fp, align 4
  %v1_14854 = or i32 %v0_14854, 2
  store i32 %v1_14854, i32* %r3.global-to-local, align 4
  %v2_14858 = add i32 %v2_14850, 4
  %v3_14858 = inttoptr i32 %v2_14858 to i32*
  store i32 %v1_14854, i32* %v3_14858, align 4
  %v0_1485c = load i32, i32* @r8, align 4
  %v1_1485c = add i32 %v0_1485c, 868
  %v2_1485c = inttoptr i32 %v1_1485c to i32*
  %v3_1485c = load i32, i32* %v2_1485c, align 4
  store i32 %v3_1485c, i32* %r3.global-to-local, align 4
  %v1_14860 = add i32 %v0_1485c, 880
  %v2_14860 = inttoptr i32 %v1_14860 to i32*
  %v3_14860 = load i32, i32* %v2_14860, align 4
  store i32 %v3_14860, i32* %r2.global-to-local, align 4
  %v0_14864 = load i32, i32* @r6, align 4
  %v2_14864 = sub i32 %v3_1485c, %v0_14864
  store i32 %v2_14864, i32* %r3.global-to-local, align 4
  %v1_14868 = load i32, i32* @r7, align 4
  %v2_14868 = add i32 %v1_14868, %v2_14864
  store i32 %v2_14868, i32* %r1.global-to-local, align 4
  %v1_1486c = add i32 %v0_1485c, 872
  %v2_1486c = inttoptr i32 %v1_1486c to i32*
  %v3_1486c = load i32, i32* %v2_1486c, align 4
  store i32 %v3_1486c, i32* %r3.global-to-local, align 4
  %v1_14874 = add i32 %v0_1485c, 884
  %v2_14874 = inttoptr i32 %v1_14874 to i32*
  %v3_14874 = load i32, i32* %v2_14874, align 4
  store i32 %v3_14874, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_14868, %v3_14860
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_14850
  store i32 %v2_14868, i32* %v2_14860, align 4
  %v0_1487c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1487c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_14850, %bb33
  %v1_1487c = phi i32 [ %v0_1485c, %dec_label_pc_14850 ], [ %v1_1487c.pre, %bb33 ]
  %v0_1487c = phi i32 [ %v2_14868, %dec_label_pc_14850 ], [ %v0_1487c.pre, %bb33 ]
  %v2_1487c = add i32 %v1_1487c, 868
  %v3_1487c = inttoptr i32 %v2_1487c to i32*
  store i32 %v0_1487c, i32* %v3_1487c, align 4
  %v0_14880 = load i32, i32* %r1.global-to-local, align 4
  %v1_14880 = load i32, i32* %r3.global-to-local, align 4
  %v2_14880 = add i32 %v1_14880, %v0_14880
  store i32 %v2_14880, i32* %r1.global-to-local, align 4
  %v1_14884 = load i32, i32* %r2.global-to-local, align 4
  %v0_14888 = load i32, i32* %r0.global-to-local, align 4
  %v1_14888 = add i32 %v0_14888, 8
  store i32 %v1_14888, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14880, %v1_14884
  br i1 %tmp43, label %bb35, label %dec_label_pc_148cc

bb35:                                             ; preds = %bb34
  %v5_1488c = load i32, i32* @r8, align 4
  %v6_1488c = add i32 %v5_1488c, 884
  %v7_1488c = inttoptr i32 %v6_1488c to i32*
  store i32 %v2_14880, i32* %v7_1488c, align 4
  br label %dec_label_pc_148cc

dec_label_pc_14894:                               ; preds = %dec_label_pc_14834
  %v0_14894 = load i32, i32* @sb, align 4
  %v1_14894 = add i32 %v0_14894, 4
  store i32 %v1_14894, i32* %r3.global-to-local, align 4
  %v0_14898 = load i32, i32* @r6, align 4
  %v3_14898 = icmp ult i32 %v0_14898, %v1_14894
  br i1 %v3_14898, label %dec_label_pc_148a8, label %dec_label_pc_14894.dec_label_pc_148a0_crit_edge

dec_label_pc_14894.dec_label_pc_148a0_crit_edge:  ; preds = %dec_label_pc_14894
  %v0_148a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_148a0

dec_label_pc_148a0:                               ; preds = %dec_label_pc_14894.dec_label_pc_148a0_crit_edge, %dec_label_pc_14800
  %v0_148a0 = phi i32 [ %v0_148a0.pre, %dec_label_pc_14894.dec_label_pc_148a0_crit_edge ], [ %v0_14608, %dec_label_pc_14800 ]
  store i32 %v0_148a0, i32* @r4, align 4
  br label %dec_label_pc_148cc

dec_label_pc_148a8:                               ; preds = %dec_label_pc_14894
  %v1_148a8 = add i32 %v0_14894, -7
  store i32 %v1_148a8, i32* @r0, align 4
  %v0_148ac = call i32 @function_13b0c()
  store i32 %v0_148ac, i32* @r0, align 4
  store i32 %v0_148ac, i32* @r4, align 4
  %v2_148b0 = icmp eq i32 %v0_148ac, 0
  br i1 %v2_148b0, label %dec_label_pc_148cc, label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %dec_label_pc_148a8
  %v0_148b8 = load i32, i32* @r6, align 4
  %v1_148b8 = add i32 %v0_148b8, -8
  store i32 %v1_148b8, i32* @r2, align 4
  %v0_148bc = load i32, i32* @r5, align 4
  store i32 %v0_148bc, i32* @r1, align 4
  %v0_148c0 = call i32 @function_135e0()
  %v0_148c4 = load i32, i32* @r5, align 4
  store i32 %v0_148c4, i32* @r0, align 4
  %v0_148c8 = call i32 @function_14b78()
  store i32 %v0_148c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148cc

dec_label_pc_148cc:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_148a8, %dec_label_pc_148a0, %dec_label_pc_147f8, %.thread6, %dec_label_pc_14668, %dec_label_pc_148b8
  store i32 %v2_145bc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r2.global-to-local, align 4
  %v4_148dc = load i32, i32* inttoptr (i32 135680 to i32*), align 512
  store i32 %v4_148dc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_148dc)
  br label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %dec_label_pc_145f0, %dec_label_pc_14598, %dec_label_pc_14580, %dec_label_pc_148cc
  %v0_148e8 = load i32, i32* @r4, align 4
  store i32 %v0_148e8, i32* %r0.global-to-local, align 4
  store i32 %v3_14560, i32* @r4, align 4
  store i32 %v6_14560, i32* @r5, align 4
  store i32 %v9_14560, i32* @r6, align 4
  store i32 %v12_14560, i32* @r7, align 4
  store i32 %v15_14560, i32* @r8, align 4
  store i32 %v18_14560, i32* @sb, align 4
  store i32 %v21_14560, i32* @sl, align 4
  store i32 %v24_14560, i32* @fp, align 4
  store i32 %v27_14560, i32* @lr, align 4
  ret i32 %v0_148e8

; uselistorder directives
  uselistorder i32 %v2_14880, { 1, 0, 2 }
  uselistorder i32 %v2_14868, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14844, { 1, 0, 2 }
  uselistorder i32 %v3_14824, { 1, 0, 2, 3 }
  uselistorder i32 %v1_147c8, { 2, 1, 0 }
  uselistorder i32 %v2_14798, { 1, 0, 2 }
  uselistorder i32 %v0_1472c, { 1, 0 }
  uselistorder i32 %v0_146e8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1464c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14644, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_14628, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_14620, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1461c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1460c, { 1, 0 }
  uselistorder i32 %v0_14608, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_145e8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 11, 7, 8, 9, 10, 20, 12, 14, 13, 21, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32* inttoptr (i32 135688 to i32*), { 2, 1, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_148e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_148cc, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_147f8, { 1, 0 }
  uselistorder label %dec_label_pc_14798, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_146e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_146d8, { 1, 0 }
  uselistorder label %dec_label_pc_146d4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_148fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_148fc:
  %v0_148fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_148fc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_148fc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_148fc, %bb
  %v10_14910 = phi i32 [ %arg1, %dec_label_pc_148fc ], [ 0, %bb ]
  ret i32 %v10_14910

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_14914(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14914:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14914 = add i32 %arg2, 44
  %v2_14914 = inttoptr i32 %v1_14914 to i32*
  %v3_14914 = load i32, i32* %v2_14914, align 4
  %v1_1491c = add i32 %v3_14914, 4
  %v2_1491c = inttoptr i32 %v1_1491c to i32*
  %v3_1491c = load i32, i32* %v2_1491c, align 4
  %v1_14920 = add i32 %arg2, 860
  %v2_14920 = inttoptr i32 %v1_14920 to i32*
  %v3_14920 = load i32, i32* %v2_14920, align 4
  store i32 %v3_14920, i32* @r4, align 4
  %v1_14924 = and i32 %v3_1491c, -4
  store i32 %v1_14924, i32* @r6, align 4
  %v1_14928 = add i32 %v1_14924, -17
  %v2_1492c = add i32 %v1_14928, %v3_14920
  store i32 %arg2, i32* @r5, align 4
  %v2_14938 = sub i32 %v2_1492c, %arg1
  store i32 %v2_14938, i32* @r0, align 4
  store i32 %v3_14920, i32* @r1, align 4
  %v0_14940 = call i32 @function_12a40()
  %v1_14944 = add i32 %v0_14940, -1
  store i32 %v1_14944, i32* %r0.global-to-local, align 4
  %v0_14948 = load i32, i32* @r4, align 4
  %v2_14948 = mul i32 %v0_14948, %v1_14944
  store i32 %v2_14948, i32* %r7.global-to-local, align 4
  %v2_1494c = icmp eq i32 %v2_14948, 0
  store i1 %v2_1494c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_14948, 1
  br i1 %tmp8, label %dec_label_pc_149b4, label %dec_label_pc_14954

dec_label_pc_14954:                               ; preds = %dec_label_pc_14914
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14958 = call i32 @function_15e84(i32 0)
  store i32 %v1_14958, i32* %r0.global-to-local, align 4
  %v0_1495c = load i32, i32* @r5, align 4
  %v1_1495c = add i32 %v0_1495c, 44
  %v2_1495c = inttoptr i32 %v1_1495c to i32*
  %v3_1495c = load i32, i32* %v2_1495c, align 4
  %v0_14960 = load i32, i32* @r6, align 4
  %v2_14960 = add i32 %v0_14960, %v3_1495c
  %v9_14964 = icmp eq i32 %v1_14958, %v2_14960
  store i1 %v9_14964, i1* @cpsr_z, align 1
  store i32 %v1_14958, i32* @r4, align 4
  br i1 %v9_14964, label %dec_label_pc_14970, label %dec_label_pc_149b4

dec_label_pc_14970:                               ; preds = %dec_label_pc_14954
  %v0_14970 = load i32, i32* %r7.global-to-local, align 4
  %v1_14970 = sub i32 0, %v0_14970
  store i32 %v1_14970, i32* %r0.global-to-local, align 4
  %v1_14974 = call i32 @function_15e84(i32 %v1_14970)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1497c = call i32 @function_15e84(i32 0)
  store i32 %v1_1497c, i32* %r0.global-to-local, align 4
  %v7_14980 = icmp eq i32 %v1_1497c, -1
  store i1 %v7_14980, i1* @cpsr_z, align 1
  br i1 %v7_14980, label %dec_label_pc_149b4, label %dec_label_pc_14988

dec_label_pc_14988:                               ; preds = %dec_label_pc_14970
  %v0_14988 = load i32, i32* @r4, align 4
  %v2_14988 = sub i32 %v0_14988, %v1_1497c
  store i32 %v2_14988, i32* %r0.global-to-local, align 4
  %v9_14988 = icmp eq i32 %v0_14988, %v1_1497c
  store i1 %v9_14988, i1* @cpsr_z, align 1
  br i1 %v9_14988, label %dec_label_pc_149b4, label %dec_label_pc_14990

dec_label_pc_14990:                               ; preds = %dec_label_pc_14988
  %v0_14990 = load i32, i32* @r5, align 4
  %v1_14990 = add i32 %v0_14990, 872
  %v2_14990 = inttoptr i32 %v1_14990 to i32*
  %v3_14990 = load i32, i32* %v2_14990, align 4
  %v1_14994 = load i32, i32* @r6, align 4
  %v2_14994 = sub i32 %v1_14994, %v2_14988
  store i32 %v2_14994, i32* %r2.global-to-local, align 4
  %v1_14998 = add i32 %v0_14990, 44
  %v2_14998 = inttoptr i32 %v1_14998 to i32*
  %v3_14998 = load i32, i32* %v2_14998, align 4
  store i32 %v3_14998, i32* %r1.global-to-local, align 4
  %v2_1499c = sub i32 %v3_14990, %v2_14988
  %v1_149a0 = or i32 %v2_14994, 1
  store i32 %v1_149a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1499c, i32* %v2_14990, align 4
  %v0_149ac = load i32, i32* %r2.global-to-local, align 4
  %v1_149ac = load i32, i32* %r1.global-to-local, align 4
  %v2_149ac = add i32 %v1_149ac, 4
  %v3_149ac = inttoptr i32 %v2_149ac to i32*
  store i32 %v0_149ac, i32* %v3_149ac, align 4
  %v1_149c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149b8

dec_label_pc_149b4:                               ; preds = %dec_label_pc_14954, %dec_label_pc_14988, %dec_label_pc_14970, %dec_label_pc_14914
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149b8

dec_label_pc_149b8:                               ; preds = %dec_label_pc_14990, %dec_label_pc_149b4
  %v1_149c0 = phi i32 [ %v1_149c0.pre, %dec_label_pc_14990 ], [ 0, %dec_label_pc_149b4 ]
  ret i32 %v1_149c0

; uselistorder directives
  uselistorder i1 %v7_14980, { 1, 0 }
  uselistorder i32 %v1_1497c, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_15e84, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_12a40, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_149b8, { 1, 0 }
  uselistorder label %dec_label_pc_149b4, { 1, 2, 0, 3 }
}

define i32 @function_149c4() local_unnamed_addr {
dec_label_pc_149c4:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_149c4 = load i32, i32* @r4, align 4
  store i32 %v3_149c4, i32* %stack_var_-36, align 4
  %v0_149c8 = load i32, i32* @r0, align 4
  %v1_149c8 = inttoptr i32 %v0_149c8 to i32*
  %v2_149c8 = load i32, i32* %v1_149c8, align 4
  store i32 %v2_149c8, i32* %r3.global-to-local, align 4
  %v2_149cc = icmp eq i32 %v2_149c8, 0
  store i32 %v0_149c8, i32* @r4, align 4
  br i1 %v2_149cc, label %dec_label_pc_14b04.preheader, label %dec_label_pc_149e0

dec_label_pc_14b04.preheader:                     ; preds = %dec_label_pc_149c4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_14b0c25 = add i32 %v0_149c8, 52
  store i32 %v1_14b0c25, i32* %r3.global-to-local, align 4
  %v2_14b1426 = add i32 %v0_149c8, 60
  %v3_14b1427 = inttoptr i32 %v2_14b1426 to i32*
  store i32 %v1_14b0c25, i32* %v3_14b1427, align 4
  %v0_14b1828 = load i32, i32* %r3.global-to-local, align 4
  %v2_14b1829 = add i32 %v0_14b1828, 12
  %v3_14b1830 = inttoptr i32 %v2_14b1829 to i32*
  store i32 %v0_14b1828, i32* %v3_14b1830, align 4
  br label %dec_label_pc_14b04.dec_label_pc_14b04_crit_edge

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149c4
  %v1_149e0 = and i32 %v2_149c8, -3
  %v3_149e4 = udiv i32 %v2_149c8, 8
  store i32 %v3_149e4, i32* %r2.global-to-local, align 4
  store i32 %v1_149e0, i32* %v1_149c8, align 4
  %v0_149ec = load i32, i32* @r0, align 4
  %v1_149ec = add i32 %v0_149ec, -4
  store i32 %v1_149ec, i32* %r3.global-to-local, align 4
  %v1_149f0 = load i32, i32* %r2.global-to-local, align 4
  %v4_149f0 = mul i32 %v1_149f0, 4
  %v5_149f0 = add i32 %v4_149f0, %v1_149ec
  store i32 %v5_149f0, i32* %sb.global-to-local, align 4
  %v1_149f4 = add i32 %v0_149ec, 52
  store i32 %v1_149f4, i32* %r7.global-to-local, align 4
  %v1_149f8 = add i32 %v0_149ec, 4
  store i32 %v1_149f8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14a00

dec_label_pc_14a00:                               ; preds = %dec_label_pc_14afc, %dec_label_pc_149e0
  %v1_14af410 = phi i32 [ %v1_14af4, %dec_label_pc_14afc ], [ %v5_149f0, %dec_label_pc_149e0 ]
  %v1_14a0c = phi i32 [ %v1_14afc, %dec_label_pc_14afc ], [ %v1_149f8, %dec_label_pc_149e0 ]
  %v1_14a00 = inttoptr i32 %v1_14a0c to i32*
  %v2_14a00 = load i32, i32* %v1_14a00, align 4
  store i32 %v2_14a00, i32* %r1.global-to-local, align 4
  %v2_14a04 = icmp eq i32 %v2_14a00, 0
  br i1 %v2_14a04, label %dec_label_pc_14af4, label %dec_label_pc_14a0c

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_14a00
  %v0_14a0c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14a0c, i32* %v1_14a00, align 4
  %v0_14a10.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14a10

dec_label_pc_14a10:                               ; preds = %dec_label_pc_14ae8, %dec_label_pc_14a0c
  %v0_14a2c = phi i32 [ %v0_14ae8, %dec_label_pc_14ae8 ], [ %v0_14a10.pre, %dec_label_pc_14a0c ]
  %v1_14a10 = add i32 %v0_14a2c, 4
  %v2_14a10 = inttoptr i32 %v1_14a10 to i32*
  %v3_14a10 = load i32, i32* %v2_14a10, align 4
  store i32 %v3_14a10, i32* %r3.global-to-local, align 4
  %v1_14a14 = and i32 %v3_14a10, -2
  store i32 %v1_14a14, i32* %lr.global-to-local, align 4
  %v2_14a18 = add i32 %v1_14a14, %v0_14a2c
  store i32 %v2_14a18, i32* @r0, align 4
  %v1_14a1c = urem i32 %v3_14a10, 2
  %v2_14a1c = icmp eq i32 %v1_14a1c, 0
  %v1_14a20 = add i32 %v0_14a2c, 8
  %v2_14a20 = inttoptr i32 %v1_14a20 to i32*
  %v3_14a20 = load i32, i32* %v2_14a20, align 4
  store i32 %v3_14a20, i32* %sl.global-to-local, align 4
  %v1_14a24 = add i32 %v2_14a18, 4
  %v2_14a24 = inttoptr i32 %v1_14a24 to i32*
  %v3_14a24 = load i32, i32* %v2_14a24, align 4
  store i32 %v3_14a24, i32* %r8.global-to-local, align 4
  br i1 %v2_14a1c, label %dec_label_pc_14a2c, label %dec_label_pc_14a60

dec_label_pc_14a2c:                               ; preds = %dec_label_pc_14a10
  %v1_14a2c = inttoptr i32 %v0_14a2c to i32*
  %v2_14a2c = load i32, i32* %v1_14a2c, align 4
  store i32 %v2_14a2c, i32* %r5.global-to-local, align 4
  %v2_14a30 = sub i32 %v0_14a2c, %v2_14a2c
  store i32 %v2_14a30, i32* %r3.global-to-local, align 4
  %v1_14a34 = add i32 %v2_14a30, 8
  %v2_14a34 = inttoptr i32 %v1_14a34 to i32*
  %v3_14a34 = load i32, i32* %v2_14a34, align 4
  store i32 %v3_14a34, i32* %ip.global-to-local, align 4
  %v1_14a38 = add i32 %v3_14a34, 12
  %v2_14a38 = inttoptr i32 %v1_14a38 to i32*
  %v3_14a38 = load i32, i32* %v2_14a38, align 4
  store i32 %v3_14a38, i32* %r1.global-to-local, align 4
  %v9_14a3c = icmp eq i32 %v3_14a38, %v2_14a30
  %v1_14a40 = add i32 %v2_14a30, 12
  %v2_14a40 = inttoptr i32 %v1_14a40 to i32*
  %v3_14a40 = load i32, i32* %v2_14a40, align 4
  store i32 %v3_14a40, i32* %r2.global-to-local, align 4
  br i1 %v9_14a3c, label %dec_label_pc_14a48, label %dec_label_pc_14aa4

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a2c
  %v1_14a48 = add i32 %v3_14a40, 8
  %v2_14a48 = inttoptr i32 %v1_14a48 to i32*
  %v3_14a48 = load i32, i32* %v2_14a48, align 4
  store i32 %v3_14a48, i32* %r3.global-to-local, align 4
  %v9_14a4c = icmp eq i32 %v3_14a48, %v2_14a30
  br i1 %v9_14a4c, label %dec_label_pc_14a54, label %dec_label_pc_14aa4

dec_label_pc_14a54:                               ; preds = %dec_label_pc_14a48
  store i32 %v3_14a34, i32* %v2_14a48, align 4
  %v0_14a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a58 = load i32, i32* %ip.global-to-local, align 4
  %v2_14a58 = add i32 %v1_14a58, 12
  %v3_14a58 = inttoptr i32 %v2_14a58 to i32*
  store i32 %v0_14a58, i32* %v3_14a58, align 4
  %v0_14a5c = load i32, i32* %lr.global-to-local, align 4
  %v1_14a5c = load i32, i32* %r5.global-to-local, align 4
  %v2_14a5c = add i32 %v1_14a5c, %v0_14a5c
  store i32 %v2_14a5c, i32* %lr.global-to-local, align 4
  %v0_14a64.pre = load i32, i32* @r0, align 4
  %v0_14a68.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14a60

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a10, %dec_label_pc_14a54
  %v0_14ad8 = phi i32 [ %v1_14a14, %dec_label_pc_14a10 ], [ %v2_14a5c, %dec_label_pc_14a54 ]
  %v0_14a68 = phi i32 [ %v3_14a24, %dec_label_pc_14a10 ], [ %v0_14a68.pre, %dec_label_pc_14a54 ]
  %v1_14a7c = phi i32 [ %v2_14a18, %dec_label_pc_14a10 ], [ %v0_14a64.pre, %dec_label_pc_14a54 ]
  %v0_14a60 = load i32, i32* @r4, align 4
  %v1_14a60 = add i32 %v0_14a60, 44
  %v2_14a60 = inttoptr i32 %v1_14a60 to i32*
  %v3_14a60 = load i32, i32* %v2_14a60, align 4
  store i32 %v3_14a60, i32* %r3.global-to-local, align 4
  %v9_14a64 = icmp eq i32 %v1_14a7c, %v3_14a60
  %v1_14a68 = and i32 %v0_14a68, -4
  store i32 %v1_14a68, i32* %r5.global-to-local, align 4
  br i1 %v9_14a64, label %dec_label_pc_14ad8, label %dec_label_pc_14a70

dec_label_pc_14a70:                               ; preds = %dec_label_pc_14a60
  %v2_14a70 = add i32 %v1_14a7c, %v1_14a68
  store i32 %v2_14a70, i32* %r3.global-to-local, align 4
  %v1_14a74 = add i32 %v2_14a70, 4
  %v2_14a74 = inttoptr i32 %v1_14a74 to i32*
  %v3_14a74 = load i32, i32* %v2_14a74, align 4
  store i32 %v3_14a74, i32* %r3.global-to-local, align 4
  %v1_14a78 = urem i32 %v3_14a74, 2
  %v2_14a78 = icmp eq i32 %v1_14a78, 0
  %v2_14a7c = add i32 %v1_14a7c, 4
  %v3_14a7c = inttoptr i32 %v2_14a7c to i32*
  store i32 %v1_14a68, i32* %v3_14a7c, align 4
  br i1 %v2_14a78, label %dec_label_pc_14a84, label %dec_label_pc_14a70.dec_label_pc_14ab4_crit_edge

dec_label_pc_14a70.dec_label_pc_14ab4_crit_edge:  ; preds = %dec_label_pc_14a70
  %v0_14ab8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14ab4

dec_label_pc_14a84:                               ; preds = %dec_label_pc_14a70
  %v0_14a84 = load i32, i32* @r0, align 4
  %v1_14a84 = add i32 %v0_14a84, 8
  %v2_14a84 = inttoptr i32 %v1_14a84 to i32*
  %v3_14a84 = load i32, i32* %v2_14a84, align 4
  store i32 %v3_14a84, i32* %ip.global-to-local, align 4
  %v1_14a88 = add i32 %v3_14a84, 12
  %v2_14a88 = inttoptr i32 %v1_14a88 to i32*
  %v3_14a88 = load i32, i32* %v2_14a88, align 4
  store i32 %v3_14a88, i32* %r3.global-to-local, align 4
  %v9_14a8c = icmp eq i32 %v3_14a88, %v0_14a84
  %v1_14a90 = add i32 %v0_14a84, 12
  %v2_14a90 = inttoptr i32 %v1_14a90 to i32*
  %v3_14a90 = load i32, i32* %v2_14a90, align 4
  store i32 %v3_14a90, i32* %r2.global-to-local, align 4
  br i1 %v9_14a8c, label %dec_label_pc_14a98, label %dec_label_pc_14aa4

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a84
  %v1_14a98 = add i32 %v3_14a90, 8
  %v2_14a98 = inttoptr i32 %v1_14a98 to i32*
  %v3_14a98 = load i32, i32* %v2_14a98, align 4
  store i32 %v3_14a98, i32* %r3.global-to-local, align 4
  %v9_14a9c = icmp eq i32 %v3_14a98, %v0_14a84
  br i1 %v9_14a9c, label %dec_label_pc_14aa8, label %dec_label_pc_14aa4

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a84, %dec_label_pc_14a48, %dec_label_pc_14a2c, %dec_label_pc_14a98
  %v0_14aa4 = call i32 @function_14df4()
  store i32 %v0_14aa4, i32* @r0, align 4
  %v0_14aa8.pre = load i32, i32* @ip, align 4
  %v1_14aa8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14aa8

dec_label_pc_14aa8:                               ; preds = %dec_label_pc_14a98, %dec_label_pc_14aa4
  %v1_14aa8 = phi i32 [ %v3_14a90, %dec_label_pc_14a98 ], [ %v1_14aa8.pre, %dec_label_pc_14aa4 ]
  %v0_14aa8 = phi i32 [ %v3_14a84, %dec_label_pc_14a98 ], [ %v0_14aa8.pre, %dec_label_pc_14aa4 ]
  %v2_14aa8 = add i32 %v1_14aa8, 8
  %v3_14aa8 = inttoptr i32 %v2_14aa8 to i32*
  store i32 %v0_14aa8, i32* %v3_14aa8, align 4
  %v0_14aac = load i32, i32* %r2.global-to-local, align 4
  %v1_14aac = load i32, i32* %ip.global-to-local, align 4
  %v2_14aac = add i32 %v1_14aac, 12
  %v3_14aac = inttoptr i32 %v2_14aac to i32*
  store i32 %v0_14aac, i32* %v3_14aac, align 4
  %v0_14ab0 = load i32, i32* %lr.global-to-local, align 4
  %v1_14ab0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14ab0 = add i32 %v1_14ab0, %v0_14ab0
  store i32 %v2_14ab0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14ab4

dec_label_pc_14ab4:                               ; preds = %dec_label_pc_14a70.dec_label_pc_14ab4_crit_edge, %dec_label_pc_14aa8
  %v0_14ab8 = phi i32 [ %v0_14ab8.pre, %dec_label_pc_14a70.dec_label_pc_14ab4_crit_edge ], [ %v2_14ab0, %dec_label_pc_14aa8 ]
  %v0_14ab4 = load i32, i32* %r7.global-to-local, align 4
  %v1_14ab4 = add i32 %v0_14ab4, 8
  %v2_14ab4 = inttoptr i32 %v1_14ab4 to i32*
  %v3_14ab4 = load i32, i32* %v2_14ab4, align 4
  store i32 %v3_14ab4, i32* %r2.global-to-local, align 4
  %v1_14ab8 = or i32 %v0_14ab8, 1
  store i32 %v1_14ab8, i32* %r3.global-to-local, align 4
  %v0_14abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14abc, i32* %v2_14ab4, align 4
  %v0_14ac0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ac0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ac0 = add i32 %v1_14ac0, 12
  %v3_14ac0 = inttoptr i32 %v2_14ac0 to i32*
  store i32 %v0_14ac0, i32* %v3_14ac0, align 4
  %v0_14ac4 = load i32, i32* %lr.global-to-local, align 4
  %v1_14ac4 = load i32, i32* %r1.global-to-local, align 4
  %v3_14ac4 = add i32 %v1_14ac4, %v0_14ac4
  %v4_14ac4 = inttoptr i32 %v3_14ac4 to i32*
  store i32 %v0_14ac4, i32* %v4_14ac4, align 4
  %v0_14ac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ac8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ac8 = add i32 %v1_14ac8, 4
  %v3_14ac8 = inttoptr i32 %v2_14ac8 to i32*
  store i32 %v0_14ac8, i32* %v3_14ac8, align 4
  %v0_14acc = load i32, i32* %r2.global-to-local, align 4
  %v1_14acc = load i32, i32* %r1.global-to-local, align 4
  %v2_14acc = add i32 %v1_14acc, 8
  %v3_14acc = inttoptr i32 %v2_14acc to i32*
  store i32 %v0_14acc, i32* %v3_14acc, align 4
  %v0_14ad0 = load i32, i32* %r7.global-to-local, align 4
  %v1_14ad0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ad0 = add i32 %v1_14ad0, 12
  %v3_14ad0 = inttoptr i32 %v2_14ad0 to i32*
  store i32 %v0_14ad0, i32* %v3_14ad0, align 4
  br label %dec_label_pc_14ae8

dec_label_pc_14ad8:                               ; preds = %dec_label_pc_14a60
  %v2_14ad8 = add i32 %v1_14a68, %v0_14ad8
  %v1_14adc = or i32 %v2_14ad8, 1
  store i32 %v1_14adc, i32* %r3.global-to-local, align 4
  %v1_14ae0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ae0 = add i32 %v1_14ae0, 4
  %v3_14ae0 = inttoptr i32 %v2_14ae0 to i32*
  store i32 %v1_14adc, i32* %v3_14ae0, align 4
  %v0_14ae4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ae4 = load i32, i32* @r4, align 4
  %v2_14ae4 = add i32 %v1_14ae4, 44
  %v3_14ae4 = inttoptr i32 %v2_14ae4 to i32*
  store i32 %v0_14ae4, i32* %v3_14ae4, align 4
  br label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %dec_label_pc_14ab4, %dec_label_pc_14ad8
  %v0_14ae8 = load i32, i32* %sl.global-to-local, align 4
  %v2_14ae8 = icmp eq i32 %v0_14ae8, 0
  store i32 %v0_14ae8, i32* %r1.global-to-local, align 4
  br i1 %v2_14ae8, label %dec_label_pc_14af4.loopexit, label %dec_label_pc_14a10

dec_label_pc_14af4.loopexit:                      ; preds = %dec_label_pc_14ae8
  %v0_14af4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14af4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14af4

dec_label_pc_14af4:                               ; preds = %dec_label_pc_14af4.loopexit, %dec_label_pc_14a00
  %v1_14af4 = phi i32 [ %v1_14af4.pre, %dec_label_pc_14af4.loopexit ], [ %v1_14af410, %dec_label_pc_14a00 ]
  %v0_14afc = phi i32 [ %v0_14af4.pre, %dec_label_pc_14af4.loopexit ], [ %v1_14a0c, %dec_label_pc_14a00 ]
  %v9_14af4 = icmp eq i32 %v0_14afc, %v1_14af4
  br i1 %v9_14af4, label %dec_label_pc_14b6c, label %dec_label_pc_14afc

dec_label_pc_14afc:                               ; preds = %dec_label_pc_14af4
  %v1_14afc = add i32 %v0_14afc, 4
  store i32 %v1_14afc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a00

dec_label_pc_14b04.dec_label_pc_14b04_crit_edge:  ; preds = %dec_label_pc_14b04.preheader, %dec_label_pc_14b04.dec_label_pc_14b04_crit_edge
  %v0_14b04.pre = load i32, i32* @r4, align 4
  %v1_14b04.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14b04 = mul i32 %v1_14b04.pre, 8
  %v5_14b04 = add i32 %v4_14b04, %v0_14b04.pre
  %v1_14b08 = add i32 %v1_14b04.pre, 1
  store i32 %v1_14b08, i32* %r2.global-to-local, align 4
  %v1_14b0c = add i32 %v5_14b04, 44
  store i32 %v1_14b0c, i32* %r3.global-to-local, align 4
  %v2_14b14 = add i32 %v5_14b04, 52
  %v3_14b14 = inttoptr i32 %v2_14b14 to i32*
  store i32 %v1_14b0c, i32* %v3_14b14, align 4
  %v0_14b18 = load i32, i32* %r3.global-to-local, align 4
  %v2_14b18 = add i32 %v0_14b18, 12
  %v3_14b18 = inttoptr i32 %v2_14b18 to i32*
  store i32 %v0_14b18, i32* %v3_14b18, align 4
  %v7_14b1c = icmp sgt i32 %v1_14b08, 95
  br i1 %v7_14b1c, label %dec_label_pc_14b20, label %dec_label_pc_14b04.dec_label_pc_14b04_crit_edge

dec_label_pc_14b20:                               ; preds = %dec_label_pc_14b04.dec_label_pc_14b04_crit_edge
  %v0_14b20 = load i32, i32* @r4, align 4
  %v1_14b20 = inttoptr i32 %v0_14b20 to i32*
  %v2_14b20 = load i32, i32* %v1_14b20, align 4
  store i32 %v2_14b20, i32* %r2.global-to-local, align 4
  %v1_14b24 = add i32 %v0_14b20, 864
  %v2_14b24 = inttoptr i32 %v1_14b24 to i32*
  %v3_14b24 = load i32, i32* %v2_14b24, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14b2c = urem i32 %v2_14b20, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_14b34 = or i32 %v3_14b24, 1
  store i32 %v1_14b34, i32* %r1.global-to-local, align 4
  %v1_14b38 = or i32 %v1_14b2c, 72
  store i32 %v1_14b38, i32* %r2.global-to-local, align 4
  %v1_14b3c = add i32 %v0_14b20, 52
  store i32 %v1_14b3c, i32* %ip.global-to-local, align 4
  %v2_14b40 = add i32 %v0_14b20, 840
  %v3_14b40 = inttoptr i32 %v2_14b40 to i32*
  store i32 0, i32* %v3_14b40, align 4
  %v0_14b44 = load i32, i32* %r3.global-to-local, align 4
  %v1_14b44 = add i32 %v0_14b44, 65536
  store i32 %v1_14b44, i32* %r3.global-to-local, align 4
  %v0_14b48 = load i32, i32* %r0.global-to-local, align 4
  %v1_14b48 = load i32, i32* @r4, align 4
  %v2_14b48 = add i32 %v1_14b48, 836
  %v3_14b48 = inttoptr i32 %v2_14b48 to i32*
  store i32 %v0_14b48, i32* %v3_14b48, align 4
  %v0_14b4c = load i32, i32* %r0.global-to-local, align 4
  %v1_14b4c = load i32, i32* @r4, align 4
  %v2_14b4c = add i32 %v1_14b4c, 844
  %v3_14b4c = inttoptr i32 %v2_14b4c to i32*
  store i32 %v0_14b4c, i32* %v3_14b4c, align 4
  %v1_14b50 = load i32, i32* @r4, align 4
  %v2_14b50 = add i32 %v1_14b50, 852
  %v3_14b50 = inttoptr i32 %v2_14b50 to i32*
  store i32 %v1_14b44, i32* %v3_14b50, align 4
  %v1_14b54 = load i32, i32* @r4, align 4
  %v2_14b54 = add i32 %v1_14b54, 864
  %v3_14b54 = inttoptr i32 %v2_14b54 to i32*
  store i32 %v1_14b34, i32* %v3_14b54, align 4
  %v1_14b58 = load i32, i32* @r4, align 4
  %v2_14b58 = inttoptr i32 %v1_14b58 to i32*
  store i32 %v1_14b38, i32* %v2_14b58, align 4
  %v0_14b5c = load i32, i32* %ip.global-to-local, align 4
  %v1_14b5c = load i32, i32* @r4, align 4
  %v2_14b5c = add i32 %v1_14b5c, 44
  %v3_14b5c = inttoptr i32 %v2_14b5c to i32*
  store i32 %v0_14b5c, i32* %v3_14b5c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_14b64 = call i32 @function_151cc(i32 30, i32 %v1_14b34, i32 %v1_14b38, i32 %v1_14b44)
  store i32 %v4_14b64, i32* @r0, align 4
  %v1_14b68 = load i32, i32* @r4, align 4
  %v2_14b68 = add i32 %v1_14b68, 860
  %v3_14b68 = inttoptr i32 %v2_14b68 to i32*
  store i32 %v4_14b64, i32* %v3_14b68, align 4
  br label %dec_label_pc_14b6c

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14af4, %dec_label_pc_14b20
  %v2_14b70 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14b70, i32* @r4, align 4
  %v1_14b74 = load i32, i32* @r0, align 4
  ret i32 %v1_14b74

; uselistorder directives
  uselistorder i32 %v0_14b20, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14b18, { 1, 0 }
  uselistorder i32 %v1_14afc, { 1, 0 }
  uselistorder i32 %v0_14ae8, { 0, 2, 1 }
  uselistorder i32 %v0_14ac4, { 1, 0 }
  uselistorder i32 %v1_14a14, { 1, 0, 2 }
  uselistorder i32 %v0_14a2c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_149ec, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 13, 2, 7, 3, 8, 4, 9, 5, 10, 0, 11, 12, 6, 14 }
  uselistorder label %dec_label_pc_14b6c, { 1, 0 }
  uselistorder label %dec_label_pc_14b04.dec_label_pc_14b04_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14ae8, { 1, 0 }
  uselistorder label %dec_label_pc_14ab4, { 1, 0 }
  uselistorder label %dec_label_pc_14aa8, { 1, 0 }
  uselistorder label %dec_label_pc_14aa4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14a60, { 1, 0 }
}

define i32 @function_14b78() local_unnamed_addr {
dec_label_pc_14b78:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14b78 = load i32, i32* @r4, align 4
  %v6_14b78 = load i32, i32* @r5, align 4
  %v9_14b78 = load i32, i32* @r6, align 4
  %v12_14b78 = load i32, i32* @r7, align 4
  %v18_14b78 = load i32, i32* @lr, align 4
  %v0_14b80 = load i32, i32* @r0, align 4
  store i32 %v0_14b80, i32* @r6, align 4
  %v2_14b80 = icmp eq i32 %v0_14b80, 0
  %v2_14b84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 135656, i32* @r7, align 4
  br i1 %v2_14b80, label %dec_label_pc_14d8c, label %dec_label_pc_14b90

dec_label_pc_14b90:                               ; preds = %dec_label_pc_14b78
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_14b94 = load i32, i32* inttoptr (i32 135724 to i32*), align 4
  store i32 %v4_14b94, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_14b94, i32* %r2.global-to-local, align 4
  %v4_14ba0 = load i32, i32* inttoptr (i32 135692 to i32*), align 4
  store i32 %v4_14ba0, i32* %r1.global-to-local, align 4
  store i32 %v2_14b84, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_14bac = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  store i32 %v4_14bac, i32* %ip.global-to-local, align 4
  store i32 84920, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14bac)
  %v0_14bb8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14bb8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14bc0 = load i32, i32* @r7, align 4
  %v2_14bc0 = add i32 %v0_14bc0, 16
  %v3_14bc0 = inttoptr i32 %v2_14bc0 to i32*
  %v4_14bc0 = load i32, i32* %v3_14bc0, align 4
  store i32 %v4_14bc0, i32* %ip.global-to-local, align 4
  store i32 84940, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14bc0)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14bd0 = load i32, i32* @r7, align 4
  %v2_14bd0 = add i32 %v0_14bd0, 32
  %v3_14bd0 = inttoptr i32 %v2_14bd0 to i32*
  %v4_14bd0 = load i32, i32* %v3_14bd0, align 4
  store i32 %v4_14bd0, i32* @lr, align 4
  %v0_14bd4 = load i32, i32* @r6, align 4
  %v1_14bd4 = add i32 %v0_14bd4, -4
  %v2_14bd4 = inttoptr i32 %v1_14bd4 to i32*
  %v3_14bd4 = load i32, i32* %v2_14bd4, align 4
  store i32 %v3_14bd4, i32* %r2.global-to-local, align 4
  %v1_14bd8 = inttoptr i32 %v4_14bd0 to i32*
  %v2_14bd8 = load i32, i32* %v1_14bd8, align 4
  store i32 %v2_14bd8, i32* %r3.global-to-local, align 4
  %v1_14bdc = and i32 %v3_14bd4, -4
  store i32 %v1_14bdc, i32* %ip.global-to-local, align 4
  %v1_14be0 = add i32 %v0_14bd4, -8
  store i32 %v1_14be0, i32* @r5, align 4
  store i32 %v1_14be0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_14bdc, %v2_14bd8
  br i1 %tmp, label %dec_label_pc_14c10, label %dec_label_pc_14bf0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14b90
  %v1_14bf0 = or i32 %v2_14bd8, 3
  store i32 %v1_14bf0, i32* %r3.global-to-local, align 4
  store i32 %v1_14bf0, i32* %v1_14bd8, align 4
  %v3_14bf4 = load i32, i32* @lr, align 4
  %v4_14bf4 = add i32 %v3_14bf4, -8
  store i32 %v4_14bf4, i32* %lr.global-to-local, align 4
  %v0_14bf8 = load i32, i32* %ip.global-to-local, align 4
  %v3_14bf8 = udiv i32 %v0_14bf8, 8
  store i32 %v3_14bf8, i32* %r1.global-to-local, align 4
  %v1_14bfc = add i32 %v3_14bf4, -4
  store i32 %v1_14bfc, i32* %r2.global-to-local, align 4
  %v4_14c00 = mul nuw i32 %v3_14bf8, 4
  %v5_14c00 = add i32 %v4_14c00, %v1_14bfc
  %v6_14c00 = inttoptr i32 %v5_14c00 to i32*
  %v7_14c00 = load i32, i32* %v6_14c00, align 4
  store i32 %v7_14c00, i32* %r3.global-to-local, align 4
  %v1_14c04 = load i32, i32* @r5, align 4
  %v2_14c04 = add i32 %v1_14c04, 8
  %v3_14c04 = inttoptr i32 %v2_14c04 to i32*
  store i32 %v7_14c00, i32* %v3_14c04, align 4
  %v0_14c08 = load i32, i32* @r5, align 4
  %v1_14c08 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c08 = load i32, i32* %r1.global-to-local, align 4
  %v5_14c08 = mul i32 %v2_14c08, 4
  %v6_14c08 = add i32 %v5_14c08, %v1_14c08
  %v7_14c08 = inttoptr i32 %v6_14c08 to i32*
  store i32 %v0_14c08, i32* %v7_14c08, align 4
  br label %dec_label_pc_14d74

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14b90
  %v1_14c10 = and i32 %v3_14bd4, 2
  %v2_14c10 = icmp eq i32 %v1_14c10, 0
  br i1 %v2_14c10, label %dec_label_pc_14c18, label %dec_label_pc_14d4c

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14c10
  %v1_14c18 = or i32 %v2_14bd8, 1
  store i32 %v1_14c18, i32* %r3.global-to-local, align 4
  store i32 %v1_14c18, i32* %v1_14bd8, align 4
  %v0_14c20 = load i32, i32* @r6, align 4
  %v1_14c20 = add i32 %v0_14c20, -4
  %v2_14c20 = inttoptr i32 %v1_14c20 to i32*
  %v3_14c20 = load i32, i32* %v2_14c20, align 4
  store i32 %v3_14c20, i32* %r3.global-to-local, align 4
  %v0_14c24 = load i32, i32* @r5, align 4
  %v1_14c24 = load i32, i32* %ip.global-to-local, align 4
  %v2_14c24 = add i32 %v1_14c24, %v0_14c24
  store i32 %v2_14c24, i32* %lr.global-to-local, align 4
  %v1_14c28 = urem i32 %v3_14c20, 2
  %v2_14c28 = icmp eq i32 %v1_14c28, 0
  %v1_14c2c = add i32 %v2_14c24, 4
  %v2_14c2c = inttoptr i32 %v1_14c2c to i32*
  %v3_14c2c = load i32, i32* %v2_14c2c, align 4
  store i32 %v3_14c2c, i32* %r8.global-to-local, align 4
  br i1 %v2_14c28, label %dec_label_pc_14c34, label %dec_label_pc_14c68

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14c18
  %v1_14c34 = add i32 %v0_14c20, -8
  %v2_14c34 = inttoptr i32 %v1_14c34 to i32*
  %v3_14c34 = load i32, i32* %v2_14c34, align 4
  store i32 %v3_14c34, i32* %r1.global-to-local, align 4
  %v2_14c38 = sub i32 %v0_14c24, %v3_14c34
  store i32 %v2_14c38, i32* %r3.global-to-local, align 4
  %v1_14c3c = add i32 %v2_14c38, 8
  %v2_14c3c = inttoptr i32 %v1_14c3c to i32*
  %v3_14c3c = load i32, i32* %v2_14c3c, align 4
  store i32 %v3_14c3c, i32* %r2.global-to-local, align 4
  %v1_14c40 = add i32 %v3_14c3c, 12
  %v2_14c40 = inttoptr i32 %v1_14c40 to i32*
  %v3_14c40 = load i32, i32* %v2_14c40, align 4
  store i32 %v3_14c40, i32* %r4.global-to-local, align 4
  %v9_14c44 = icmp eq i32 %v3_14c40, %v2_14c38
  %v1_14c48 = add i32 %v2_14c38, 12
  %v2_14c48 = inttoptr i32 %v1_14c48 to i32*
  %v3_14c48 = load i32, i32* %v2_14c48, align 4
  store i32 %v3_14c48, i32* %r0.global-to-local, align 4
  br i1 %v9_14c44, label %dec_label_pc_14c50, label %dec_label_pc_14cb4

dec_label_pc_14c50:                               ; preds = %dec_label_pc_14c34
  %v1_14c50 = add i32 %v3_14c48, 8
  %v2_14c50 = inttoptr i32 %v1_14c50 to i32*
  %v3_14c50 = load i32, i32* %v2_14c50, align 4
  store i32 %v3_14c50, i32* %r3.global-to-local, align 4
  %v9_14c54 = icmp eq i32 %v3_14c50, %v2_14c38
  br i1 %v9_14c54, label %dec_label_pc_14c5c, label %dec_label_pc_14cb4

dec_label_pc_14c5c:                               ; preds = %dec_label_pc_14c50
  store i32 %v3_14c3c, i32* %v2_14c50, align 4
  %v0_14c60 = load i32, i32* %r0.global-to-local, align 4
  %v1_14c60 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c60 = add i32 %v1_14c60, 12
  %v3_14c60 = inttoptr i32 %v2_14c60 to i32*
  store i32 %v0_14c60, i32* %v3_14c60, align 4
  %v0_14c64 = load i32, i32* %ip.global-to-local, align 4
  %v1_14c64 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c64 = add i32 %v1_14c64, %v0_14c64
  store i32 %v2_14c64, i32* %ip.global-to-local, align 4
  %v0_14c74.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14c78.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14c68

dec_label_pc_14c68:                               ; preds = %dec_label_pc_14c18, %dec_label_pc_14c5c
  %v0_14cf4 = phi i32 [ %v1_14c24, %dec_label_pc_14c18 ], [ %v2_14c64, %dec_label_pc_14c5c ]
  %v0_14c78 = phi i32 [ %v3_14c2c, %dec_label_pc_14c18 ], [ %v0_14c78.pre, %dec_label_pc_14c5c ]
  %v1_14c8c = phi i32 [ %v2_14c24, %dec_label_pc_14c18 ], [ %v0_14c74.pre, %dec_label_pc_14c5c ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14c6c = load i32, i32* @r7, align 4
  %v2_14c6c = add i32 %v0_14c6c, 32
  %v3_14c6c = inttoptr i32 %v2_14c6c to i32*
  %v4_14c6c = load i32, i32* %v3_14c6c, align 4
  store i32 %v4_14c6c, i32* %r2.global-to-local, align 4
  %v1_14c70 = add i32 %v4_14c6c, 44
  %v2_14c70 = inttoptr i32 %v1_14c70 to i32*
  %v3_14c70 = load i32, i32* %v2_14c70, align 4
  store i32 %v3_14c70, i32* %r3.global-to-local, align 4
  %v9_14c74 = icmp eq i32 %v1_14c8c, %v3_14c70
  %v1_14c78 = and i32 %v0_14c78, -4
  store i32 %v1_14c78, i32* %r0.global-to-local, align 4
  br i1 %v9_14c74, label %dec_label_pc_14cf4, label %dec_label_pc_14c80

dec_label_pc_14c80:                               ; preds = %dec_label_pc_14c68
  %v2_14c80 = add i32 %v1_14c8c, %v1_14c78
  store i32 %v2_14c80, i32* %r3.global-to-local, align 4
  %v1_14c84 = add i32 %v2_14c80, 4
  %v2_14c84 = inttoptr i32 %v1_14c84 to i32*
  %v3_14c84 = load i32, i32* %v2_14c84, align 4
  store i32 %v3_14c84, i32* %r3.global-to-local, align 4
  %v1_14c88 = urem i32 %v3_14c84, 2
  %v2_14c88 = icmp eq i32 %v1_14c88, 0
  %v2_14c8c = add i32 %v1_14c8c, 4
  %v3_14c8c = inttoptr i32 %v2_14c8c to i32*
  store i32 %v1_14c78, i32* %v3_14c8c, align 4
  br i1 %v2_14c88, label %dec_label_pc_14c94, label %dec_label_pc_14c80.dec_label_pc_14cc4_crit_edge

dec_label_pc_14c80.dec_label_pc_14cc4_crit_edge:  ; preds = %dec_label_pc_14c80
  %v0_14cd4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14cc4

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c80
  %v0_14c94 = load i32, i32* %lr.global-to-local, align 4
  %v1_14c94 = add i32 %v0_14c94, 8
  %v2_14c94 = inttoptr i32 %v1_14c94 to i32*
  %v3_14c94 = load i32, i32* %v2_14c94, align 4
  store i32 %v3_14c94, i32* %r1.global-to-local, align 4
  %v1_14c98 = add i32 %v3_14c94, 12
  %v2_14c98 = inttoptr i32 %v1_14c98 to i32*
  %v3_14c98 = load i32, i32* %v2_14c98, align 4
  store i32 %v3_14c98, i32* %r3.global-to-local, align 4
  %v9_14c9c = icmp eq i32 %v3_14c98, %v0_14c94
  %v1_14ca0 = add i32 %v0_14c94, 12
  %v2_14ca0 = inttoptr i32 %v1_14ca0 to i32*
  %v3_14ca0 = load i32, i32* %v2_14ca0, align 4
  store i32 %v3_14ca0, i32* %r2.global-to-local, align 4
  br i1 %v9_14c9c, label %dec_label_pc_14ca8, label %dec_label_pc_14cb4

dec_label_pc_14ca8:                               ; preds = %dec_label_pc_14c94
  %v1_14ca8 = add i32 %v3_14ca0, 8
  %v2_14ca8 = inttoptr i32 %v1_14ca8 to i32*
  %v3_14ca8 = load i32, i32* %v2_14ca8, align 4
  store i32 %v3_14ca8, i32* %r3.global-to-local, align 4
  %v9_14cac = icmp eq i32 %v3_14ca8, %v0_14c94
  br i1 %v9_14cac, label %dec_label_pc_14cb8, label %dec_label_pc_14cb4

dec_label_pc_14cb4:                               ; preds = %dec_label_pc_14c94, %dec_label_pc_14c50, %dec_label_pc_14c34, %dec_label_pc_14ca8
  %v0_14cb4 = call i32 @function_14df4()
  store i32 %v0_14cb4, i32* %r0.global-to-local, align 4
  %v0_14cb8.pre = load i32, i32* @r1, align 4
  %v1_14cb8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14cb8

dec_label_pc_14cb8:                               ; preds = %dec_label_pc_14ca8, %dec_label_pc_14cb4
  %v1_14cb8 = phi i32 [ %v3_14ca0, %dec_label_pc_14ca8 ], [ %v1_14cb8.pre, %dec_label_pc_14cb4 ]
  %v0_14cb8 = phi i32 [ %v3_14c94, %dec_label_pc_14ca8 ], [ %v0_14cb8.pre, %dec_label_pc_14cb4 ]
  %v2_14cb8 = add i32 %v1_14cb8, 8
  %v3_14cb8 = inttoptr i32 %v2_14cb8 to i32*
  store i32 %v0_14cb8, i32* %v3_14cb8, align 4
  %v0_14cbc = load i32, i32* %r2.global-to-local, align 4
  %v1_14cbc = load i32, i32* %r1.global-to-local, align 4
  %v2_14cbc = add i32 %v1_14cbc, 12
  %v3_14cbc = inttoptr i32 %v2_14cbc to i32*
  store i32 %v0_14cbc, i32* %v3_14cbc, align 4
  %v0_14cc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_14cc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_14cc0 = add i32 %v1_14cc0, %v0_14cc0
  store i32 %v2_14cc0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14c80.dec_label_pc_14cc4_crit_edge, %dec_label_pc_14cb8
  %v0_14cd4 = phi i32 [ %v0_14cd4.pre, %dec_label_pc_14c80.dec_label_pc_14cc4_crit_edge ], [ %v2_14cc0, %dec_label_pc_14cb8 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14cc8 = load i32, i32* @r7, align 4
  %v2_14cc8 = add i32 %v0_14cc8, 32
  %v3_14cc8 = inttoptr i32 %v2_14cc8 to i32*
  %v4_14cc8 = load i32, i32* %v3_14cc8, align 4
  %v1_14ccc = add i32 %v4_14cc8, 52
  store i32 %v1_14ccc, i32* %r3.global-to-local, align 4
  %v1_14cd0 = add i32 %v4_14cc8, 60
  %v2_14cd0 = inttoptr i32 %v1_14cd0 to i32*
  %v3_14cd0 = load i32, i32* %v2_14cd0, align 4
  store i32 %v3_14cd0, i32* %r1.global-to-local, align 4
  %v1_14cd4 = or i32 %v0_14cd4, 1
  store i32 %v1_14cd4, i32* %r2.global-to-local, align 4
  %v1_14cd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_14cd8 = add i32 %v1_14cd8, 12
  %v3_14cd8 = inttoptr i32 %v2_14cd8 to i32*
  store i32 %v1_14ccc, i32* %v3_14cd8, align 4
  %v0_14cdc = load i32, i32* %r1.global-to-local, align 4
  %v1_14cdc = load i32, i32* %r4.global-to-local, align 4
  %v2_14cdc = add i32 %v1_14cdc, 8
  %v3_14cdc = inttoptr i32 %v2_14cdc to i32*
  store i32 %v0_14cdc, i32* %v3_14cdc, align 4
  %v0_14ce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ce0 = load i32, i32* %r4.global-to-local, align 4
  %v2_14ce0 = add i32 %v1_14ce0, 4
  %v3_14ce0 = inttoptr i32 %v2_14ce0 to i32*
  store i32 %v0_14ce0, i32* %v3_14ce0, align 4
  %v0_14ce4 = load i32, i32* %ip.global-to-local, align 4
  %v1_14ce4 = load i32, i32* %r4.global-to-local, align 4
  %v3_14ce4 = add i32 %v1_14ce4, %v0_14ce4
  %v4_14ce4 = inttoptr i32 %v3_14ce4 to i32*
  store i32 %v0_14ce4, i32* %v4_14ce4, align 4
  %v0_14ce8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ce8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ce8 = add i32 %v1_14ce8, 12
  %v3_14ce8 = inttoptr i32 %v2_14ce8 to i32*
  store i32 %v0_14ce8, i32* %v3_14ce8, align 4
  %v0_14cec = load i32, i32* %r4.global-to-local, align 4
  %v1_14cec = load i32, i32* %r3.global-to-local, align 4
  %v2_14cec = add i32 %v1_14cec, 8
  %v3_14cec = inttoptr i32 %v2_14cec to i32*
  store i32 %v0_14cec, i32* %v3_14cec, align 4
  br label %dec_label_pc_14d04

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14c68
  %v2_14cf4 = add i32 %v1_14c78, %v0_14cf4
  store i32 %v2_14cf4, i32* %ip.global-to-local, align 4
  %v1_14cf8 = or i32 %v2_14cf4, 1
  store i32 %v1_14cf8, i32* %r3.global-to-local, align 4
  %v0_14cfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14cfc, i32* %v2_14c70, align 4
  %v0_14d00 = load i32, i32* %r3.global-to-local, align 4
  %v1_14d00 = load i32, i32* %r4.global-to-local, align 4
  %v2_14d00 = add i32 %v1_14d00, 4
  %v3_14d00 = inttoptr i32 %v2_14d00 to i32*
  store i32 %v0_14d00, i32* %v3_14d00, align 4
  br label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14cc4, %dec_label_pc_14cf4
  %v0_14d04 = load i32, i32* %ip.global-to-local, align 4
  %v3_14d08 = icmp ult i32 %v0_14d04, 131070
  br i1 %v3_14d08, label %dec_label_pc_14d74, label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14d04
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14d10 = load i32, i32* @r7, align 4
  %v2_14d10 = add i32 %v0_14d10, 32
  %v3_14d10 = inttoptr i32 %v2_14d10 to i32*
  %v4_14d10 = load i32, i32* %v3_14d10, align 4
  store i32 %v4_14d10, i32* @r4, align 4
  %v1_14d14 = inttoptr i32 %v4_14d10 to i32*
  %v2_14d14 = load i32, i32* %v1_14d14, align 4
  store i32 %v2_14d14, i32* %r3.global-to-local, align 4
  %v1_14d18 = and i32 %v2_14d14, 2
  %v2_14d18 = icmp eq i32 %v1_14d18, 0
  br i1 %v2_14d18, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_14d0c
  store i32 %v4_14d10, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_14d0c, %bb
  store i32 85284, i32* @lr, align 4
  %v1_14d20 = xor i1 %v2_14d18, true
  call void @__pseudo_cond_branch(i1 %v1_14d20, i32 ptrtoint (i32* @global_var_149c4.806 to i32))
  %v0_14d24 = load i32, i32* @r4, align 4
  %v1_14d24 = add i32 %v0_14d24, 44
  %v2_14d24 = inttoptr i32 %v1_14d24 to i32*
  %v3_14d24 = load i32, i32* %v2_14d24, align 4
  store i32 %v3_14d24, i32* %r3.global-to-local, align 4
  %v1_14d28 = add i32 %v3_14d24, 4
  %v2_14d28 = inttoptr i32 %v1_14d28 to i32*
  %v3_14d28 = load i32, i32* %v2_14d28, align 4
  store i32 %v3_14d28, i32* %r3.global-to-local, align 4
  %v1_14d2c = add i32 %v0_14d24, 836
  %v2_14d2c = inttoptr i32 %v1_14d2c to i32*
  %v3_14d2c = load i32, i32* %v2_14d2c, align 4
  store i32 %v3_14d2c, i32* %r2.global-to-local, align 4
  %v1_14d30 = and i32 %v3_14d28, -4
  store i32 %v1_14d30, i32* %r3.global-to-local, align 4
  %v3_14d34 = icmp ult i32 %v1_14d30, %v3_14d2c
  br i1 %v3_14d34, label %dec_label_pc_14d74, label %dec_label_pc_14d3c

dec_label_pc_14d3c:                               ; preds = %bb15
  store i32 %v0_14d24, i32* %r1.global-to-local, align 4
  %v1_14d40 = add i32 %v0_14d24, 840
  %v2_14d40 = inttoptr i32 %v1_14d40 to i32*
  %v3_14d40 = load i32, i32* %v2_14d40, align 4
  store i32 %v3_14d40, i32* %r0.global-to-local, align 4
  %v2_14d44 = call i32 @function_14914(i32 %v3_14d40, i32 %v0_14d24)
  store i32 %v2_14d44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d74

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14c10
  %v2_14d4c = inttoptr i32 %v1_14be0 to i32*
  %v3_14d4c = load i32, i32* %v2_14d4c, align 4
  store i32 %v3_14d4c, i32* %r0.global-to-local, align 4
  %v1_14d50 = add i32 %v4_14bd0, 848
  %v2_14d50 = inttoptr i32 %v1_14d50 to i32*
  %v3_14d50 = load i32, i32* %v2_14d50, align 4
  store i32 %v3_14d50, i32* %r2.global-to-local, align 4
  %v1_14d54 = add i32 %v4_14bd0, 868
  %v2_14d54 = inttoptr i32 %v1_14d54 to i32*
  %v3_14d54 = load i32, i32* %v2_14d54, align 4
  %v2_14d58 = add i32 %v3_14d4c, %v1_14bdc
  store i32 %v2_14d58, i32* %r1.global-to-local, align 4
  %v1_14d5c = add i32 %v3_14d50, -1
  store i32 %v1_14d5c, i32* %r2.global-to-local, align 4
  %v2_14d60 = sub i32 %v3_14d54, %v2_14d58
  store i32 %v2_14d60, i32* %r3.global-to-local, align 4
  store i32 %v2_14d60, i32* %v2_14d54, align 4
  %v1_14d68 = load i32, i32* @lr, align 4
  %v2_14d68 = add i32 %v1_14d68, 848
  %v3_14d68 = inttoptr i32 %v2_14d68 to i32*
  store i32 %v1_14d5c, i32* %v3_14d68, align 4
  %v0_14d6c = load i32, i32* %r0.global-to-local, align 4
  %v1_14d6c = load i32, i32* @r5, align 4
  %v2_14d6c = sub i32 %v1_14d6c, %v0_14d6c
  store i32 %v2_14d6c, i32* %r0.global-to-local, align 4
  %v4_14d70 = call i32 @function_16160(i32 %v2_14d6c, i32 %v2_14d58, i32 %v1_14d5c, i32 %v2_14d60)
  store i32 %v4_14d70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d74

dec_label_pc_14d74:                               ; preds = %bb15, %dec_label_pc_14d04, %dec_label_pc_14d3c, %dec_label_pc_14bf0, %dec_label_pc_14d4c
  store i32 %v2_14b84, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_14d80 = load i32, i32* @r7, align 4
  %v2_14d80 = add i32 %v0_14d80, 24
  %v3_14d80 = inttoptr i32 %v2_14d80 to i32*
  %v4_14d80 = load i32, i32* %v3_14d80, align 4
  store i32 %v4_14d80, i32* @ip, align 4
  store i32 85388, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14d80)
  br label %dec_label_pc_14d8c

dec_label_pc_14d8c:                               ; preds = %dec_label_pc_14b78, %dec_label_pc_14d74
  store i32 %v3_14b78, i32* @r4, align 4
  store i32 %v6_14b78, i32* @r5, align 4
  store i32 %v9_14b78, i32* @r6, align 4
  store i32 %v12_14b78, i32* @r7, align 4
  store i32 %v18_14b78, i32* @lr, align 4
  ret i32 %v2_14b84

; uselistorder directives
  uselistorder i32 %v0_14d24, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_14ce4, { 1, 0 }
  uselistorder i32 %v1_14c24, { 1, 0 }
  uselistorder i32 %v0_14c24, { 1, 0 }
  uselistorder i32 %v3_14bf8, { 1, 0 }
  uselistorder i32 %v1_14bdc, { 1, 0, 2 }
  uselistorder i32 %v2_14bd8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14bd0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14b80, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 3, 14, 0, 1, 2, 13, 4, 5, 11, 12, 6, 7, 8, 10, 9 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_14d8c, { 1, 0 }
  uselistorder label %dec_label_pc_14d74, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_14d04, { 1, 0 }
  uselistorder label %dec_label_pc_14cc4, { 1, 0 }
  uselistorder label %dec_label_pc_14cb8, { 1, 0 }
  uselistorder label %dec_label_pc_14cb4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14c68, { 1, 0 }
}

define i32 @function_14d9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d9c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_14d9c = load i1, i1* @cpsr_z, align 1
  %v2_14d9c = load i32, i32* @r4, align 4
  br i1 %v0_14d9c, label %bb, label %dec_label_pc_14d9c..thread4_crit_edge

dec_label_pc_14d9c..thread4_crit_edge:            ; preds = %dec_label_pc_14d9c
  %v0_14dc8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_14d9c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14d9c..thread4_crit_edge, %bb
  %v0_14dc8 = phi i32 [ %v0_14dc8.pre, %dec_label_pc_14d9c..thread4_crit_edge ], [ 0, %bb ]
  store i32 %v2_14d9c, i32* %stack_var_-12, align 4
  %v6_14db4 = load i32, i32* @r5, align 4
  %v9_14db4 = load i32, i32* @lr, align 4
  %v4_14dc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_c420.809 to i32), i32 85480) to i32*), align 4
  store i32 %v4_14dc4, i32* @r5, align 4
  store i32 %v0_14dc8, i32* @r4, align 4
  store i32 %v4_14dc4, i32* @r0, align 4
  %v0_14dd4 = call i32 @function_149c4()
  %v0_14dd8 = load i32, i32* @r4, align 4
  store i32 %v0_14dd8, i32* %r0.global-to-local, align 4
  %v0_14ddc = load i32, i32* @r5, align 4
  %v2_14de4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14de4, i32* @r4, align 4
  store i32 %v6_14db4, i32* @r5, align 4
  store i32 %v9_14db4, i32* @lr, align 4
  %v2_14de8 = call i32 @function_14914(i32 %v0_14dd8, i32 %v0_14ddc)
  store i32 %v2_14de8, i32* %r0.global-to-local, align 4
  %v0_14dec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14dec, label %bb13, label %.thread5

bb13:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4, %bb13
  %v4_14df0 = phi i32 [ %v2_14de8, %.thread4 ], [ 0, %bb13 ]
  ret i32 %v4_14df0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @function_14914, { 1, 0 }
  uselistorder i32 ()* @function_149c4, { 3, 2, 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_14df4() local_unnamed_addr {
dec_label_pc_14df4:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 135656, i32* @r5, align 4
  %v4_14e0c = load i32, i32* inttoptr (i32 135672 to i32*), align 8
  store i32 85528, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14e0c)
  %v2_14e28 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v3_14e34 = call i32 @function_1307c(i32 1, i32 %v2_14e28, i32 0)
  %v4_14e3c = load i32, i32* @global_var_21484.815, align 4
  %v2_14e40 = icmp eq i32 %v4_14e3c, 0
  br i1 %v2_14e40, label %dec_label_pc_14e48, label %dec_label_pc_14e88

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14df4
  store i32 1, i32* @global_var_21484.815, align 4
  br label %dec_label_pc_14e50

dec_label_pc_14e50:                               ; preds = %dec_label_pc_14e98, %dec_label_pc_14e48
  %v0_14e54 = load i32, i32* @r5, align 4
  %v2_14e54 = add i32 %v0_14e54, 160
  store i32 %v2_14e54, i32* @r4, align 4
  %v2_14e60 = add i32 %v0_14e54, 36
  %v3_14e60 = inttoptr i32 %v2_14e60 to i32*
  %v4_14e60 = load i32, i32* %v3_14e60, align 4
  call void @__pseudo_branch(i32 %v4_14e60)
  %v1_14e70 = call i32 @function_138fc(i32 6)
  %v0_14e7c = load i32, i32* @r5, align 4
  %v2_14e7c = add i32 %v0_14e7c, 16
  %v3_14e7c = inttoptr i32 %v2_14e7c to i32*
  %v4_14e7c = load i32, i32* %v3_14e7c, align 4
  store i32 85640, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14e7c)
  %v4_14e8c.pre = load i32, i32* @global_var_21484.815, align 4
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14df4, %dec_label_pc_14e50
  %v0_14e9c = phi i32 [ %v4_14e3c, %dec_label_pc_14df4 ], [ %v4_14e8c.pre, %dec_label_pc_14e50 ]
  %v7_14e90 = icmp eq i32 %v0_14e9c, 1
  br i1 %v7_14e90, label %dec_label_pc_14e98, label %dec_label_pc_14ed4

dec_label_pc_14e98:                               ; preds = %dec_label_pc_14e88
  %v2_14e98 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14e98, i32* @r4, align 4
  store i32 2, i32* @global_var_21484.815, align 4
  store i32 20, i32* @r2, align 4
  %v2_14eb0 = bitcast i32* %stack_var_-28 to i8*
  %v3_14eb0 = call i32 @function_13530(i8* %v2_14eb0, i32 0)
  %v3_14ecc = call i32 @function_15c60(i32 6, i32 %v2_14e98, i32 0)
  br label %dec_label_pc_14e50

dec_label_pc_14ed4:                               ; preds = %dec_label_pc_14e88
  %v7_14ed4 = icmp eq i32 %v0_14e9c, 2
  br i1 %v7_14ed4, label %dec_label_pc_14edc, label %dec_label_pc_14ee8

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14ed4
  store i32 3, i32* @global_var_21484.815, align 4
  %v0_14ee4 = call i32 @function_14df4()
  %v4_14ee8.pre = load i32, i32* @global_var_21484.815, align 4
  br label %dec_label_pc_14ee8

dec_label_pc_14ee8:                               ; preds = %dec_label_pc_14ed4, %dec_label_pc_14edc
  %v1_14ef0 = phi i32 [ %v0_14e9c, %dec_label_pc_14ed4 ], [ %v4_14ee8.pre, %dec_label_pc_14edc ]
  %v7_14eec = icmp eq i32 %v1_14ef0, 3
  br i1 %v7_14eec, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14ee8
  store i32 4, i32* @global_var_21484.815, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14ee8, %bb
  call void @__pseudo_cond_branch(i1 %v7_14eec, i32 ptrtoint (i32* @global_var_16250.817 to i32))
  br label %dec_label_pc_14f00

dec_label_pc_14f00:                               ; preds = %dec_label_pc_14f00, %.thread1
  %v0_14f00 = call i32 @function_14df4()
  br label %dec_label_pc_14f00

; uselistorder directives
  uselistorder i32 ()* @function_14df4, { 1, 0, 5, 4, 6, 3, 2 }
  uselistorder i32 6, { 13, 14, 68, 15, 28, 29, 16, 27, 2, 30, 17, 31, 0, 18, 19, 20, 4, 21, 32, 33, 34, 5, 35, 36, 37, 38, 6, 39, 40, 41, 42, 7, 43, 8, 44, 45, 22, 46, 9, 47, 48, 49, 23, 50, 10, 51, 52, 24, 53, 54, 55, 56, 57, 25, 58, 11, 59, 60, 61, 62, 63, 64, 26, 65, 12, 66, 3, 67, 1 }
  uselistorder i32* @global_var_21484.815, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* inttoptr (i32 135672 to i32*), { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14ee8, { 1, 0 }
  uselistorder label %dec_label_pc_14e88, { 1, 0 }
}

define i32 @function_14f0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f0c:
  %v0_14f0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14f0c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14f0c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14f0c, %bb
  %v4_14f18 = phi i32 [ %arg1, %dec_label_pc_14f0c ], [ 0, %bb ]
  ret i32 %v4_14f18

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_14f1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f1c:
  %stack_var_-16 = alloca i32, align 4
  store i32 135656, i32* @r5, align 4
  %v4_14f28 = load i32, i32* inttoptr (i32 135744 to i32*), align 64
  store i32 %v4_14f28, i32* @r4, align 4
  %v2_14f30 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_14f48 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_14f48)
  %v0_14f5c = load i32, i32* @r5, align 4
  %v2_14f5c = add i32 %v0_14f5c, 16
  %v3_14f5c = inttoptr i32 %v2_14f5c to i32*
  %v4_14f5c = load i32, i32* %v3_14f5c, align 4
  call void @__pseudo_branch(i32 %v4_14f5c)
  %v4_14f6c = load i32, i32* @global_var_21488.824, align 4
  %v2_14f70 = icmp eq i32 %v4_14f6c, 0
  br i1 %v2_14f70, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14f1c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14f1c, %bb
  %v2_14f7c = xor i1 %v2_14f70, true
  call void @__pseudo_cond_branch(i1 %v2_14f7c, i32 %v4_14f6c)
  store i32 %v2_14f30, i32* @r0, align 4
  %v0_14f8c = load i32, i32* @r5, align 4
  %v2_14f8c = add i32 %v0_14f8c, 24
  %v3_14f8c = inttoptr i32 %v2_14f8c to i32*
  %v4_14f8c = load i32, i32* %v3_14f8c, align 4
  %v6_14f8c = trunc i32 %v4_14f8c to i16
  call void @__pseudo_branch(i32 %v4_14f8c)
  %v0_14f98 = call i32 @function_157e8()
  %v0_14fa0 = load i32, i32* @r5, align 4
  %v9_14fa0 = icmp eq i32 %v0_14fa0, 42340
  br i1 %v9_14fa0, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_14fa8 = xor i1 %v9_14fa0, true
  call void @__pseudo_cond_branch(i1 %v2_14fa8, i32 ptrtoint (i32* @global_var_16c84.827 to i32))
  %v0_14fac = load i32, i32* @r6, align 4
  %v1_14fb0 = call i32 @function_16250(i32 %v0_14fac)
  %v0_14fb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14fb4, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v5_14fb4 = inttoptr i32 %v1_14fb0 to i16*
  store i16 %v6_14f8c, i16* %v5_14fb4, align 2
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_14fcc = phi i32 [ %v1_14fb0, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_14fcc

; uselistorder directives
  uselistorder i1 %v9_14fa0, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14fd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fd4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_14fd4 = load i32, i32* @r4, align 4
  %v6_14fd4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_14fd8 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_14fd8, label %dec_label_pc_1506c, label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fd4
  %v2_14ff8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_1500c = call i32 @function_15c60(i32 17, i32 0, i32 %v2_14ff8)
  %v3_15010 = load i32, i32* %stack_var_-44, align 4
  %v7_15014 = icmp eq i32 %v3_15010, 1
  br i1 %v7_15014, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14fe8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14fe8, %bb
  call void @__pseudo_cond_branch(i1 %v7_15014, i32 ptrtoint (i32* @global_var_1307c.829 to i32))
  %v2_15028 = ptrtoint i32* %stack_var_-16 to i32
  %v2_15030 = call i32 @function_16194(i32 %v2_15028, i32 %v2_15028)
  %v2_15034 = icmp eq i32 %v2_15030, 0
  br i1 %v2_15034, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_15048 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_15048, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_15058 = load i32, i32* %stack_var_-24, align 4
  %v1_1505c = and i32 %v3_15058, 65536
  %v2_1505c = icmp eq i32 %v1_1505c, 0
  br i1 %v2_1505c, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_1505c, i32 ptrtoint (i32* @global_var_1307c.829 to i32))
  %v0_1506c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1506c

dec_label_pc_1506c:                               ; preds = %dec_label_pc_14fd4, %.thread6
  %v0_1506c = phi i32 [ %v0_1506c.pre, %.thread6 ], [ 0, %dec_label_pc_14fd4 ]
  store i32 %v3_14fd4, i32* @r4, align 4
  store i32 %v6_14fd4, i32* @lr, align 4
  ret i32 %v0_1506c

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_15c60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1506c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15080() local_unnamed_addr {
dec_label_pc_15080:
  %stack_var_-36 = alloca i32, align 4
  store i32 135656, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_18e70.833 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_150a0 = call i32 @function_166c4(i32 ptrtoint ([11 x i8]* @global_var_18e70.833 to i32))
  store i32 %v2_150a0, i32* @r6, align 4
  %v2_150a4 = icmp eq i32 %v2_150a0, 0
  br i1 %v2_150a4, label %dec_label_pc_15124, label %dec_label_pc_150ac

dec_label_pc_150ac:                               ; preds = %dec_label_pc_15080
  store i32 224, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_18284.24 to i32), i32* @r8, align 4
  %v2_150b8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_150b8, i32* @r7, align 4
  br label %bb18

dec_label_pc_150c0:                               ; preds = %bb18
  %v3_150c0 = load i32, i32* %stack_var_-36, align 4
  %v1_150c4 = inttoptr i32 %v3_150c0 to i32*
  %v2_150c4 = load i32, i32* %v1_150c4, align 4
  %v1_150c8 = inttoptr i32 %v2_150c4 to i8*
  %v2_150c8 = load i8, i8* %v1_150c8, align 1
  %v7_150cc = icmp eq i8 %v2_150c8, 99
  br i1 %v7_150cc, label %dec_label_pc_150d4, label %.backedge3

dec_label_pc_150d4:                               ; preds = %dec_label_pc_150c0
  %v1_150d4 = add i32 %v2_150c4, 1
  %v2_150d4 = inttoptr i32 %v1_150d4 to i8*
  %v3_150d4 = load i8, i8* %v2_150d4, align 1
  %v7_150d8 = icmp eq i8 %v3_150d4, 112
  br i1 %v7_150d8, label %dec_label_pc_150e0, label %.backedge3

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150d4
  %v1_150e0 = add i32 %v2_150c4, 2
  %v2_150e0 = inttoptr i32 %v1_150e0 to i8*
  %v3_150e0 = load i8, i8* %v2_150e0, align 1
  %v7_150e4 = icmp eq i8 %v3_150e0, 117
  br i1 %v7_150e4, label %dec_label_pc_150ec, label %.backedge3

dec_label_pc_150ec:                               ; preds = %dec_label_pc_150e0
  %v1_150ec = add i32 %v2_150c4, 3
  %v2_150ec = inttoptr i32 %v1_150ec to i8*
  %v3_150ec = load i8, i8* %v2_150ec, align 1
  %v4_150ec = zext i8 %v3_150ec to i32
  %v0_150f0 = load i32, i32* @r4, align 4
  %v1_150f0 = load i32, i32* @sl, align 4
  %v2_150f0 = add i32 %v1_150f0, %v0_150f0
  %v3_150f0 = inttoptr i32 %v2_150f0 to i32*
  %v4_150f0 = load i32, i32* %v3_150f0, align 4
  %v2_150f4 = mul nuw nsw i32 %v4_150ec, 2
  %v2_150f8 = add i32 %v4_150f0, %v2_150f4
  %v3_150f8 = inttoptr i32 %v2_150f8 to i16*
  %v4_150f8 = load i16, i16* %v3_150f8, align 2
  %v1_150fc = and i16 %v4_150f8, 8
  %v2_150fc = icmp eq i16 %v1_150fc, 0
  br i1 %v2_150fc, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_150ec
  %v1_15100 = load i32, i32* @r5, align 4
  %v2_15100 = add i32 %v1_15100, 1
  store i32 %v2_15100, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_150ec, %dec_label_pc_150c0, %dec_label_pc_150d4, %dec_label_pc_150e0
  %v0_15104.pre = load i32, i32* @r6, align 4
  %v0_15110.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_150ac
  %v0_15110 = phi i32 [ %v0_15110.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_18284.24 to i32), %dec_label_pc_150ac ]
  %v0_15104 = phi i32 [ %v0_15104.pre, %.backedge3 ], [ %v2_150a0, %dec_label_pc_150ac ]
  %v4_15114 = inttoptr i32 %v0_15104 to i32*
  %v5_15114 = call i32 @function_16368(i32* %v4_15114, i32 %v2_150b8, i32 258, i32 %v0_15110)
  %v2_15118 = icmp eq i32 %v5_15114, 0
  br i1 %v2_15118, label %dec_label_pc_15188, label %dec_label_pc_150c0

dec_label_pc_15124:                               ; preds = %dec_label_pc_15080
  store i32 ptrtoint ([14 x i8]* @global_var_18e7c.838 to i32), i32* @r0, align 4
  %v2_1512c = call i32 @function_166c4(i32 ptrtoint ([14 x i8]* @global_var_18e7c.838 to i32))
  store i32 %v2_1512c, i32* @r6, align 4
  %v2_15130 = icmp eq i32 %v2_1512c, 0
  br i1 %v2_15130, label %bb19, label %dec_label_pc_1513c

bb19:                                             ; preds = %dec_label_pc_15124
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_15188

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15124
  store i32 ptrtoint ([10 x i8]* @global_var_18e8c.840 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_18eb0.842 to i32), i32* @r7, align 4
  %v2_1514c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1514c, i32* @r4, align 4
  br label %bb21

dec_label_pc_15154:                               ; preds = %bb21
  %v0_15180 = load i32, i32* @r8, align 4
  %v1_15180 = inttoptr i32 %v0_15180 to i8*
  %v3_15154 = load i32, i32* %stack_var_-36, align 4
  %v1_15158 = inttoptr i32 %v3_15154 to i32*
  %v2_15158 = load i32, i32* %v1_15158, align 4
  store i32 %v2_15158, i32* @r1, align 4
  %v4_1515c = call i32 @function_17970(i8* %v1_15180, i32 %v2_15158)
  %v2_15160 = icmp eq i32 %v4_1515c, 0
  br i1 %v2_15160, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_15154
  %v1_15164 = load i32, i32* @r5, align 4
  %v2_15164 = add i32 %v1_15164, 1
  store i32 %v2_15164, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_15154
  %v0_15170.pre = load i32, i32* @r7, align 4
  %v0_15174.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_1513c
  %v0_15174 = phi i32 [ %v0_15174.pre, %.backedge ], [ %v2_1512c, %dec_label_pc_1513c ]
  %v0_15170 = phi i32 [ %v0_15170.pre, %.backedge ], [ ptrtoint (i32* @global_var_18eb0.842 to i32), %dec_label_pc_1513c ]
  %v4_15178 = inttoptr i32 %v0_15174 to i32*
  %v5_15178 = call i32 @function_16368(i32* %v4_15178, i32 %v2_1514c, i32 459266, i32 %v0_15170)
  %v2_1517c = icmp eq i32 %v5_15178, 0
  br i1 %v2_1517c, label %dec_label_pc_15188, label %dec_label_pc_15154

dec_label_pc_15188:                               ; preds = %bb18, %bb21, %bb19
  %v0_15188 = load i32, i32* @r6, align 4
  %v1_1518c = inttoptr i32 %v0_15188 to i32*
  %v2_1518c = call i32 @function_16690(i32* %v1_1518c)
  %v0_15190 = load i32, i32* @r5, align 4
  %v2_15190 = icmp eq i32 %v0_15190, 0
  %.v0_15190 = select i1 %v2_15190, i32 1, i32 %v0_15190
  ret i32 %.v0_15190

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_18284.24 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 (i32)* @function_166c4, { 1, 0 }
  uselistorder label %dec_label_pc_15188, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_151cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_151cc:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_155b4

bb:                                               ; preds = %dec_label_pc_151cc
  %v7_151e0 = mul i32 %arg1, 4
  %v8_151e0 = add i32 %v7_151e0, ptrtoint (i32* @global_var_151e8.845 to i32)
  call void @__pseudo_branch(i32 %v8_151e0)
  br label %dec_label_pc_155b4

dec_label_pc_155b4:                               ; preds = %bb, %dec_label_pc_151cc
  %v0_155b4 = call i32 @function_134dc()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_155c0 = inttoptr i32 %v0_155b4 to i32*
  store i32 22, i32* %v2_155c0, align 4
  %v0_15770 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_15770

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_157e8() local_unnamed_addr {
dec_label_pc_1580c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_157e8 = load i32, i32* @r4, align 4
  store i32 %v3_157e8, i32* %stack_var_-16, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_b9e8.856 to i32), i32 88056), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1580c

dec_label_pc_1580c:                               ; preds = %dec_label_pc_1580c.dec_label_pc_1580c_crit_edge, %dec_label_pc_1580c.lr.ph
  %v1_1580c = phi i32 [ %v1_15818, %dec_label_pc_1580c.dec_label_pc_1580c_crit_edge ], [ 0, %dec_label_pc_1580c.lr.ph ]
  %v0_1580c = phi i32 [ %v0_1580c.pre, %dec_label_pc_1580c.dec_label_pc_1580c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_b9e8.856 to i32), i32 88056), %dec_label_pc_1580c.lr.ph ]
  %v4_1580c = mul i32 %v1_1580c, 4
  %v5_1580c = add i32 %v4_1580c, %v0_1580c
  %v6_1580c = inttoptr i32 %v5_1580c to i32*
  %v7_1580c = load i32, i32* %v6_1580c, align 4
  call void @__pseudo_branch(i32 %v7_1580c)
  %v0_15818 = load i32, i32* %r4.global-to-local, align 4
  %v1_15818 = add i32 %v0_15818, -1
  store i32 %v1_15818, i32* %r4.global-to-local, align 4
  %v2_15818 = icmp eq i32 %v0_15818, 0
  br i1 %v2_15818, label %dec_label_pc_15820, label %dec_label_pc_1580c.dec_label_pc_1580c_crit_edge

dec_label_pc_1580c.dec_label_pc_1580c_crit_edge:  ; preds = %dec_label_pc_1580c
  %v0_1580c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1580c

dec_label_pc_15820:                               ; preds = %dec_label_pc_1580c
  %v4_15824 = load i32, i32* @global_var_21498.859, align 4
  %v2_15828 = icmp eq i32 %v4_15824, 0
  br i1 %v2_15828, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_15820
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_15820, %bb
  %v2_15830 = xor i1 %v2_15828, true
  call void @__pseudo_cond_branch(i1 %v2_15830, i32 %v4_15824)
  %v4_15838 = load i32, i32* @global_var_2149c.861, align 4
  %v2_1583c = icmp eq i32 %v4_15838, 0
  br i1 %v2_1583c, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_15844 = xor i1 %v2_1583c, true
  call void @__pseudo_cond_branch(i1 %v2_15844, i32 %v4_15838)
  %v2_15848 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15848, i32* %r4.global-to-local, align 4
  %v1_1584c = load i32, i32* @r0, align 4
  ret i32 %v1_1584c

; uselistorder directives
  uselistorder i32 %v1_15818, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_15864(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15864:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_15878 = call i32 @function_12ee8(i32 %arg1, i32 1)
  %v3_15880 = icmp eq i32 %v2_15878, -1
  store i32 135656, i32* @r3, align 4
  br i1 %v3_15880, label %dec_label_pc_1588c, label %dec_label_pc_158a4

dec_label_pc_1588c:                               ; preds = %dec_label_pc_15864
  %v0_15890 = load i32, i32* %r5.global-to-local, align 4
  %v3_15898 = call i32 @function_12cc0(i32 ptrtoint ([10 x i8]* @global_var_18eb4.864 to i32), i32 %v0_15890)
  %v1_1589c = load i32, i32* %r4.global-to-local, align 4
  %v1_158a0 = icmp ne i32 %v3_15898, %v1_1589c
  call void @__pseudo_cond_branch(i1 %v1_158a0, i32 ptrtoint (i32* @global_var_14df4.865 to i32))
  br label %dec_label_pc_158a4

dec_label_pc_158a4:                               ; preds = %dec_label_pc_15864, %dec_label_pc_1588c
  %v1_158ac = phi i32 [ %v2_15878, %dec_label_pc_15864 ], [ %v3_15898, %dec_label_pc_1588c ]
  ret i32 %v1_158ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_158a4, { 1, 0 }
}

define i32 @function_158b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_158b8:
  %r4.global-to-local = alloca i32, align 4
  store i32 135656, i32* %r4.global-to-local, align 4
  %v4_158c8 = load i32, i32* inttoptr (i32 135748 to i32*), align 4
  %v1_158cc = inttoptr i32 %v4_158c8 to i32*
  %v2_158cc = load i32, i32* %v1_158cc, align 4
  %v2_158d0 = icmp eq i32 %v2_158cc, 0
  br i1 %v2_158d0, label %dec_label_pc_158d8, label %dec_label_pc_1590c

dec_label_pc_158d8:                               ; preds = %dec_label_pc_158b8
  %v4_158dc = load i32, i32* inttoptr (i32 135708 to i32*), align 4
  %v2_158e4 = icmp eq i32 %v4_158dc, 0
  store i32 4096, i32* %v1_158cc, align 4
  br i1 %v2_158e4, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_158d8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_158d8, %bb
  %v2_158f0 = xor i1 %v2_158e4, true
  call void @__pseudo_cond_branch(i1 %v2_158f0, i32 %v4_158dc)
  %v0_158f8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15900 = icmp eq i32 %v0_158f8, 42496
  br i1 %v2_15900, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_15908 = xor i1 %v2_15900, true
  call void @__pseudo_cond_branch(i1 %v2_15908, i32 ptrtoint (i32* @global_var_16be8.870 to i32))
  br label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158b8, %bb6
  %v1_15910 = load i32, i32* @r0, align 4
  ret i32 %v1_15910

; uselistorder directives
  uselistorder i1 %v2_15900, { 1, 0 }
  uselistorder label %dec_label_pc_1590c, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_15924(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_15924:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_1592c = add i32 %tmp, 4
  store i32 %v1_1592c, i32* %ip.global-to-local, align 4
  %v2_15930 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 135656, i32* @r6, align 4
  %v3_1593c = mul i32 %arg2, 4
  store i32 %v3_1593c, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_15944 = load i32, i32* inttoptr (i32 135676 to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_1594c = ptrtoint i32* %stack_var_-120 to i32
  %v4_15950 = load i32, i32* inttoptr (i32 135684 to i32*), align 4
  store i32 %v4_15950, i32* %r4.global-to-local, align 4
  %v2_15958 = add i32 %v1_1592c, %v3_1593c
  store i32 %v2_15958, i32* %ip.global-to-local, align 4
  %v9_1595c = icmp eq i32 %v2_15958, %v2_15930
  store i1 %v9_1595c, i1* %cpsr_z.global-to-local, align 1
  %v2_15960 = inttoptr i32 %v4_15944 to i32*
  store i32 %arg7, i32* %v2_15960, align 4
  store i32 692, i32* %r2.global-to-local, align 4
  %v0_1596c = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_1595c, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_15924
  %v1_15970 = load i32, i32* @r7, align 4
  %v2_15970 = load i32, i32* %r5.global-to-local, align 4
  %v3_15970 = add i32 %v2_15970, %v1_15970
  store i32 %v3_15970, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_2149c.861, align 4
  %v0_15978 = load i32, i32* %ip.global-to-local, align 4
  %v1_15978 = load i32, i32* %r4.global-to-local, align 4
  %v2_15978 = inttoptr i32 %v1_15978 to i32*
  store i32 %v0_15978, i32* %v2_15978, align 4
  store i32 120, i32* @r2, align 4
  %v1_15984 = load i32, i32* %r3.global-to-local, align 4
  %v2_15984 = load i32, i32* %r4.global-to-local, align 4
  %v3_15984 = inttoptr i32 %v2_15984 to i32*
  store i32 %v1_15984, i32* %v3_15984, align 4
  br label %bb57

.critedge:                                        ; preds = %dec_label_pc_15924
  store i32 %arg6, i32* @global_var_2149c.861, align 4
  %v0_15978.c = load i32, i32* %ip.global-to-local, align 4
  %v1_15978.c = load i32, i32* %r4.global-to-local, align 4
  %v2_15978.c = inttoptr i32 %v1_15978.c to i32*
  store i32 %v0_15978.c, i32* %v2_15978.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb57

bb57:                                             ; preds = %.critedge, %bb
  store i32 %v2_1594c, i32* %r0.global-to-local, align 4
  %v2_15990 = bitcast i32* %stack_var_-120 to i8*
  %v3_15990 = call i32 @function_13530(i8* %v2_15990, i32 0)
  store i32 %v3_15990, i32* %r0.global-to-local, align 4
  %v0_15994 = load i32, i32* %r4.global-to-local, align 4
  %v1_15994 = inttoptr i32 %v0_15994 to i32*
  %storemerge.pre = load i32, i32* %v1_15994, align 4
  br label %dec_label_pc_159a0

dec_label_pc_159a0:                               ; preds = %dec_label_pc_159a0, %bb57
  %storemerge = phi i32 [ %storemerge.pre, %bb57 ], [ %v4_159a0, %dec_label_pc_159a0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_159a0 = inttoptr i32 %storemerge to i32*
  %v2_159a0 = load i32, i32* %v1_159a0, align 4
  store i32 %v2_159a0, i32* %r3.global-to-local, align 4
  %v4_159a0 = add i32 %storemerge, 4
  store i32 %v4_159a0, i32* %r2.global-to-local, align 4
  %v2_159a4 = icmp eq i32 %v2_159a0, 0
  br i1 %v2_159a4, label %dec_label_pc_159b0, label %dec_label_pc_159a0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_159a0
  store i32 %v4_159a0, i32* @r4, align 4
  store i32 %v2_1594c, i32* @r5, align 4
  %v1_159d429 = inttoptr i32 %v4_159a0 to i32*
  %v2_159d430 = load i32, i32* %v1_159d429, align 4
  store i32 %v2_159d430, i32* %r3.global-to-local, align 4
  %v2_159d832 = icmp eq i32 %v2_159d430, 0
  store i1 %v2_159d832, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159d832, label %dec_label_pc_159e0, label %dec_label_pc_159bc

dec_label_pc_159bc:                               ; preds = %dec_label_pc_159b0, %dec_label_pc_159d4
  %v5_159c0 = phi i32 [ %v2_159d4, %dec_label_pc_159d4 ], [ %v2_159d430, %dec_label_pc_159b0 ]
  %v2_159bc = icmp ugt i32 %v5_159c0, 13
  %v7_159bc = icmp eq i32 %v5_159c0, 14
  store i1 %v7_159bc, i1* %cpsr_z.global-to-local, align 1
  %v2_159c0 = xor i1 %v2_159bc, true
  %v3_159c0 = or i1 %v7_159bc, %v2_159c0
  br i1 %v3_159c0, label %bb58, label %bb59

bb58:                                             ; preds = %dec_label_pc_159bc
  %v4_159c0 = load i32, i32* @r5, align 4
  %v6_159c0 = and i32 %v5_159c0, 536870912
  %v7_159c0 = icmp ne i32 %v6_159c0, 0
  %v8_159c0 = mul i32 %v5_159c0, 8
  %v9_159c0 = add i32 %v4_159c0, %v8_159c0
  store i32 %v9_159c0, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_159bc, %bb58
  %v1_159cc = phi i1 [ %v2_159bc, %dec_label_pc_159bc ], [ %v7_159c0, %bb58 ]
  %v2_159c4 = xor i1 %v1_159cc, true
  %v3_159c4 = or i1 %v7_159bc, %v2_159c4
  br i1 %v3_159c4, label %bb60, label %dec_label_pc_159d4

bb60:                                             ; preds = %bb59
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_159d4

dec_label_pc_159d4:                               ; preds = %bb59, %bb60
  call void @__pseudo_cond_branch(i1 %v3_159c4, i32 ptrtoint (i32* @global_var_135e0.875 to i32))
  %v0_159d0 = load i32, i32* @r4, align 4
  %v1_159d0 = add i32 %v0_159d0, 8
  store i32 %v1_159d0, i32* @r4, align 4
  %v1_159d4 = inttoptr i32 %v1_159d0 to i32*
  %v2_159d4 = load i32, i32* %v1_159d4, align 4
  store i32 %v2_159d4, i32* %r3.global-to-local, align 4
  %v2_159d8 = icmp eq i32 %v2_159d4, 0
  store i1 %v2_159d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159d8, label %dec_label_pc_159e0, label %dec_label_pc_159bc

dec_label_pc_159e0:                               ; preds = %dec_label_pc_159d4, %dec_label_pc_159b0
  store i32 %v2_1594c, i32* %r0.global-to-local, align 4
  %v1_159e4 = call i32 @function_17de4(i32 %v2_1594c)
  store i32 %v1_159e4, i32* @r0, align 4
  %v1_159e8 = call i32 @function_158b8(i32 %v1_159e4)
  store i32 %v1_159e8, i32* @r0, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_159f4 = load i32, i32* @r6, align 4
  %v2_159f4 = add i32 %v0_159f4, 92
  %v3_159f4 = inttoptr i32 %v2_159f4 to i32*
  %v4_159f4 = load i32, i32* %v3_159f4, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_159fc = icmp eq i32 %tmp53, 0
  store i1 %v2_159fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159fc, label %bb61, label %bb62

bb61:                                             ; preds = %dec_label_pc_159e0
  store i32 4096, i32* @r2, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_159e0, %bb61
  %v0_15a08 = phi i32 [ %tmp53, %dec_label_pc_159e0 ], [ 4096, %bb61 ]
  %v3_15a04 = icmp eq i32 %tmp52, -1
  %v8_15a04 = icmp eq i32 %tmp52, -1
  store i1 %v8_15a04, i1* %cpsr_z.global-to-local, align 1
  %v2_15a08 = inttoptr i32 %v4_159f4 to i32*
  store i32 %v0_15a08, i32* %v2_15a08, align 4
  br i1 %v3_15a04, label %dec_label_pc_15a10, label %dec_label_pc_15a38

dec_label_pc_15a10:                               ; preds = %bb62
  %v0_15a10 = call i32 @function_15d28()
  store i32 %v0_15a10, i32* @r0, align 4
  store i32 %v0_15a10, i32* @r4, align 4
  %v0_15a18 = call i32 @function_15d84()
  store i32 %v0_15a18, i32* @r0, align 4
  %v0_15a1c = load i32, i32* @r4, align 4
  %v9_15a1c = icmp eq i32 %v0_15a1c, %v0_15a18
  store i1 %v9_15a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a1c, label %dec_label_pc_15a24, label %dec_label_pc_15a60

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a10
  %v1_15a24 = call i32 @function_15ef0(i32 %v0_15a18)
  store i32 %v1_15a24, i32* @r0, align 4
  store i32 %v1_15a24, i32* @r4, align 4
  %v0_15a2c = call i32 @function_15d70()
  store i32 %v0_15a2c, i32* @r0, align 4
  %v0_15a30 = load i32, i32* @r4, align 4
  %v9_15a30 = icmp eq i32 %v0_15a30, %v0_15a2c
  store i1 %v9_15a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a30, label %dec_label_pc_15a38, label %dec_label_pc_15a60

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a24, %bb62
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_15a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15a04, label %dec_label_pc_15a84, label %dec_label_pc_15a44

dec_label_pc_15a44:                               ; preds = %dec_label_pc_15a38
  store i32 %tmp51, i32* @r3, align 4
  %v9_15a48 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_15a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a48, label %dec_label_pc_15a50, label %dec_label_pc_15a60

dec_label_pc_15a50:                               ; preds = %dec_label_pc_15a44
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_15a58 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_15a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a58, label %dec_label_pc_15a84, label %dec_label_pc_15a60

dec_label_pc_15a60:                               ; preds = %dec_label_pc_15a44, %dec_label_pc_15a24, %dec_label_pc_15a10, %dec_label_pc_15a50
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15a68 = call i32 @function_15864(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15a74 = call i32 @function_15864(i32 1, i32 32770)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a80 = call i32 @function_15864(i32 2, i32 32770)
  store i32 %v2_15a80, i32* @r0, align 4
  br label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a50, %dec_label_pc_15a38, %dec_label_pc_15a60
  %v0_15a84 = load i32, i32* @r7, align 4
  %v1_15a84 = inttoptr i32 %v0_15a84 to i32*
  %v2_15a84 = load i32, i32* %v1_15a84, align 4
  store i32 %v2_15a84, i32* %r2.global-to-local, align 4
  store i32 208, i32* %r3.global-to-local, align 4
  %v1_15a8c = load i32, i32* @r6, align 4
  %v3_15a8c = add i32 %v1_15a8c, 208
  %v4_15a8c = inttoptr i32 %v3_15a8c to i32*
  store i32 %v2_15a84, i32* %v4_15a8c, align 4
  %v0_15a90 = load i32, i32* @r7, align 4
  %v1_15a90 = inttoptr i32 %v0_15a90 to i32*
  %v2_15a90 = load i32, i32* %v1_15a90, align 4
  store i32 %v2_15a90, i32* @r4, align 4
  %v2_15a94 = icmp eq i32 %v2_15a90, 0
  store i1 %v2_15a94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a94, label %dec_label_pc_15b38.lr.ph, label %dec_label_pc_15a9c

dec_label_pc_15a9c:                               ; preds = %dec_label_pc_15a84
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_15aa0 = load i32, i32* @r6, align 4
  %v2_15aa0 = add i32 %v0_15aa0, 112
  %v3_15aa0 = inttoptr i32 %v2_15aa0 to i32*
  %v4_15aa0 = load i32, i32* %v3_15aa0, align 4
  store i32 %v4_15aa0, i32* %r3.global-to-local, align 4
  %v2_15aa4 = inttoptr i32 %v4_15aa0 to i32*
  store i32 %v2_15a90, i32* %v2_15aa4, align 4
  %v0_15aac = load i32, i32* @r7, align 4
  %v1_15aac = inttoptr i32 %v0_15aac to i32*
  %v2_15aac = load i32, i32* %v1_15aac, align 4
  store i32 %v2_15aac, i32* %r0.global-to-local, align 4
  %v4_15ab0 = call i32 @function_17a20(i32 %v2_15aac, i32 47, i32 %v2_15a84, i32 %v4_15aa0)
  store i32 %v4_15ab0, i32* @r0, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_15ab8 = icmp eq i32 %v4_15ab0, 0
  store i1 %v2_15ab8, i1* %cpsr_z.global-to-local, align 1
  %v0_15abc = load i32, i32* @r6, align 4
  %v2_15abc = add i32 %v0_15abc, 60
  %v3_15abc = inttoptr i32 %v2_15abc to i32*
  %v4_15abc = load i32, i32* %v3_15abc, align 4
  store i32 %v4_15abc, i32* %r2.global-to-local, align 4
  br i1 %v2_15ab8, label %.thread46, label %bb63

.thread46:                                        ; preds = %dec_label_pc_15a9c
  %v2_15ac447 = inttoptr i32 %v4_15abc to i32*
  store i32 0, i32* %v2_15ac447, align 4
  br label %dec_label_pc_15b38.lr.ph

bb63:                                             ; preds = %dec_label_pc_15a9c
  %v2_15ac0 = add i32 %v4_15ab0, 1
  store i32 %v2_15ac0, i32* %r3.global-to-local, align 4
  %v2_15ac4 = inttoptr i32 %v4_15abc to i32*
  store i32 %v4_15ab0, i32* %v2_15ac4, align 4
  %v1_15ac8 = load i32, i32* %r3.global-to-local, align 4
  %v2_15ac8 = load i32, i32* %r2.global-to-local, align 4
  %v3_15ac8 = inttoptr i32 %v2_15ac8 to i32*
  store i32 %v1_15ac8, i32* %v3_15ac8, align 4
  br label %dec_label_pc_15b38.lr.ph

dec_label_pc_15b38.lr.ph:                         ; preds = %.thread46, %bb63, %dec_label_pc_15a84
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_15ae0 = load i32, i32* @r6, align 4
  %v2_15ae0 = add i32 %v0_15ae0, -12
  store i32 %v2_15ae0, i32* %r8.global-to-local, align 4
  store i32 688, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_21498.859, align 4
  %v2_15b10 = icmp eq i32 %v0_1596c, 0
  store i1 %v2_15b10, i1* %cpsr_z.global-to-local, align 1
  %v2_15b18 = xor i1 %v2_15b10, true
  call void @__pseudo_cond_branch(i1 %v2_15b18, i32 %v0_1596c)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_15b2c = load i32, i32* @r6, align 4
  %v2_15b2c = add i32 %v0_15b2c, -12
  store i32 %v2_15b2c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b38

dec_label_pc_15b38:                               ; preds = %dec_label_pc_15b38.dec_label_pc_15b38_crit_edge, %dec_label_pc_15b38.lr.ph
  %v1_15b38 = phi i32 [ %v1_15b44, %dec_label_pc_15b38.dec_label_pc_15b38_crit_edge ], [ 0, %dec_label_pc_15b38.lr.ph ]
  %v0_15b38 = phi i32 [ %v0_15b38.pre, %dec_label_pc_15b38.dec_label_pc_15b38_crit_edge ], [ %v2_15b2c, %dec_label_pc_15b38.lr.ph ]
  %v4_15b38 = mul i32 %v1_15b38, 4
  %v5_15b38 = add i32 %v4_15b38, %v0_15b38
  %v6_15b38 = inttoptr i32 %v5_15b38 to i32*
  %v7_15b38 = load i32, i32* %v6_15b38, align 4
  store i32 %v7_15b38, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15b38)
  %v0_15b44 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b44 = add i32 %v0_15b44, 1
  store i32 %v1_15b44, i32* %r4.global-to-local, align 4
  %v1_15b48 = load i32, i32* %r5.global-to-local, align 4
  %v3_15b48 = icmp ult i32 %v1_15b44, %v1_15b48
  %v9_15b48 = icmp eq i32 %v1_15b44, %v1_15b48
  store i1 %v9_15b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15b48, label %dec_label_pc_15b38.dec_label_pc_15b38_crit_edge, label %dec_label_pc_15b50

dec_label_pc_15b38.dec_label_pc_15b38_crit_edge:  ; preds = %dec_label_pc_15b38
  %v0_15b38.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15b38

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b38
  %v0_15b54.pre = load i32, i32* @r6, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_15b54 = add i32 %v0_15b54.pre, 104
  %v3_15b54 = inttoptr i32 %v2_15b54 to i32*
  %v4_15b54 = load i32, i32* %v3_15b54, align 4
  store i32 %v4_15b54, i32* %r2.global-to-local, align 4
  store i32 %v4_15b54, i32* %r3.global-to-local, align 4
  %v2_15b5c = icmp eq i32 %v4_15b54, 0
  store i1 %v2_15b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b5c, label %dec_label_pc_15b74, label %dec_label_pc_15b64

dec_label_pc_15b64:                               ; preds = %dec_label_pc_15b50
  call void @__pseudo_branch(i32 %v4_15b54)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15b70 = load i32, i32* @r0, align 4
  %v2_15b70 = inttoptr i32 %v1_15b70 to i32*
  store i32 0, i32* %v2_15b70, align 4
  %v0_15b78.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15b74

dec_label_pc_15b74:                               ; preds = %dec_label_pc_15b50, %dec_label_pc_15b64
  %v0_15b78 = phi i32 [ %v0_15b54.pre, %dec_label_pc_15b50 ], [ %v0_15b78.pre, %dec_label_pc_15b64 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_15b78 = add i32 %v0_15b78, 80
  %v3_15b78 = inttoptr i32 %v2_15b78 to i32*
  %v4_15b78 = load i32, i32* %v3_15b78, align 4
  store i32 %v4_15b78, i32* %r2.global-to-local, align 4
  store i32 %v4_15b78, i32* %r3.global-to-local, align 4
  %v2_15b80 = icmp eq i32 %v4_15b78, 0
  store i1 %v2_15b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b80, label %dec_label_pc_15b98, label %dec_label_pc_15b88

dec_label_pc_15b88:                               ; preds = %dec_label_pc_15b74
  call void @__pseudo_branch(i32 %v4_15b78)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15b94 = load i32, i32* @r0, align 4
  %v2_15b94 = inttoptr i32 %v1_15b94 to i32*
  store i32 0, i32* %v2_15b94, align 4
  %v0_15b9c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b74, %dec_label_pc_15b88
  %v0_15b9c = phi i32 [ %v0_15b78, %dec_label_pc_15b74 ], [ %v0_15b9c.pre, %dec_label_pc_15b88 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_15b9c = add i32 %v0_15b9c, 28
  %v3_15b9c = inttoptr i32 %v2_15b9c to i32*
  %v4_15b9c = load i32, i32* %v3_15b9c, align 4
  store i32 %v4_15b9c, i32* %r3.global-to-local, align 4
  %v1_15ba4 = inttoptr i32 %v4_15b9c to i32*
  %v2_15ba4 = load i32, i32* %v1_15ba4, align 4
  store i32 %v2_15ba4, i32* %r2.global-to-local, align 4
  %v0_15ba8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15ba8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_15bb4 = call i32 @function_14f1c(i32 %v0_15ba8)
  store i32 %v1_15bb4, i32* %r0.global-to-local, align 4
  %v0_15bb8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15bb8, label %bb64, label %.thread8

bb64:                                             ; preds = %dec_label_pc_15b98
  %v2_15bbc = load i32, i32* %r4.global-to-local, align 4
  %v8_15bbc = shl i32 %v2_15bbc, %v1_15bb4
  %v9_15bbc = and i32 %v8_15bbc, %v1_15bb4
  %v2_15bc0 = load i32, i32* %ip.global-to-local, align 4
  %v8_15bc0 = shl i32 %v2_15bc0, %v9_15bbc
  %v9_15bc0 = and i32 %v8_15bc0, %v9_15bbc
  store i32 %v9_15bc0, i32* %r0.global-to-local, align 4
  %v2_15bc4 = trunc i32 %v9_15bc0 to i16
  %v4_15bc4 = inttoptr i32 %v9_15bc0 to i16*
  store i16 %v2_15bc4, i16* %v4_15bc4, align 2
  %v5_15bc4 = load i32, i32* %r4.global-to-local, align 4
  %v6_15bc4 = load i32, i32* %r0.global-to-local, align 4
  %v7_15bc4 = sub i32 %v6_15bc4, %v5_15bc4
  %v2_15bc8 = load i32, i32* %ip.global-to-local, align 4
  %v8_15bc8 = ashr i32 %v2_15bc8, %v7_15bc4
  %v9_15bc8 = and i32 %v8_15bc8, %v7_15bc4
  %v2_15bcc = load i32, i32* %r2.global-to-local, align 4
  %v3_15bcc = and i32 %v9_15bc8, %v2_15bcc
  store i32 %v3_15bcc, i32* %r8.global-to-local, align 4
  %v2_15bd0 = inttoptr i32 %v9_15bc8 to i64*
  %v3_15bd0 = load i64, i64* %v2_15bd0, align 4
  %v6_15bd0 = udiv i64 %v3_15bd0, 4294967296
  %v7_15bd0 = trunc i64 %v6_15bd0 to i32
  %v9_15bd0 = sub i32 %v7_15bd0, %v9_15bc8
  %v5_15bd4 = sub i32 32, %v9_15bd0
  %v6_15bd4 = shl i32 %v9_15bd0, %v5_15bd4
  %v9_15bd4 = and i32 %v6_15bd4, %v9_15bd0
  %v8_15bd8 = lshr i32 %v2_15bc8, %v9_15bd4
  %v9_15bd8 = and i32 %v8_15bd8, %v9_15bd4
  store i32 %v9_15bd8, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15b98, %bb64
  %v10_15bd8 = phi i32 [ %v1_15bb4, %dec_label_pc_15b98 ], [ %v9_15bd8, %bb64 ]
  ret i32 %v10_15bd8

; uselistorder directives
  uselistorder i32 %v9_15bc8, { 2, 1, 0 }
  uselistorder i32 %v9_15bc0, { 1, 0, 2 }
  uselistorder i32 %v1_15bb4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15b54.pre, { 1, 0 }
  uselistorder i32 %v1_15b48, { 1, 0 }
  uselistorder i32 %v1_15b44, { 3, 2, 1, 0 }
  uselistorder i32 %v4_15abc, { 1, 0, 2 }
  uselistorder i1 %v8_15a04, { 1, 2, 0 }
  uselistorder i32 %v2_159d4, { 1, 2, 0 }
  uselistorder i1 %v2_159bc, { 1, 0 }
  uselistorder i32 %v5_159c0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_159a0, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_1596c, { 1, 0 }
  uselistorder i32 %v2_1594c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1593c, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 7, 6, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 15, 16, 17, 18, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 1, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 1, 13, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 8, 4, 0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_14f1c, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 1, 5, 6, 7, 2, 8, 0, 9, 10, 3, 11, 4 }
  uselistorder i32 (i32, i32)* @function_15864, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_15b98, { 1, 0 }
  uselistorder label %dec_label_pc_15b74, { 1, 0 }
  uselistorder label %dec_label_pc_15b38.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15a84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a60, { 3, 0, 1, 2 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_159d4, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_159bc, { 1, 0 }
}

define i32 @function_15bf8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15bf8:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15bf8 = load i32, i32* @r4, align 4
  store i32 %v3_15bf8, i32* %stack_var_-16, align 4
  %v3_15c04 = urem i32 %arg3, 4096
  %v2_15c08 = icmp eq i32 %v3_15c04, 0
  br i1 %v2_15c08, label %dec_label_pc_15c24, label %dec_label_pc_15c10

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15bf8
  %v0_15c10 = call i32 @function_134dc()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15c1c = inttoptr i32 %v0_15c10 to i32*
  store i32 22, i32* %v2_15c1c, align 4
  %v0_15c54.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c54

dec_label_pc_15c24:                               ; preds = %dec_label_pc_15bf8
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15c50, label %dec_label_pc_15c40

dec_label_pc_15c40:                               ; preds = %dec_label_pc_15c24
  %v0_15c40 = call i32 @function_134dc()
  %v0_15c44 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c44 = sub i32 0, %v0_15c44
  %v2_15c48 = inttoptr i32 %v0_15c40 to i32*
  store i32 %v1_15c44, i32* %v2_15c48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15c50

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c24, %dec_label_pc_15c40
  %v0_15c50 = phi i32 [ %arg1, %dec_label_pc_15c24 ], [ -1, %dec_label_pc_15c40 ]
  store i32 %v0_15c50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c54

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15c10, %dec_label_pc_15c50
  %v0_15c54 = phi i32 [ %v0_15c54.pre, %dec_label_pc_15c10 ], [ %v0_15c50, %dec_label_pc_15c50 ]
  %v2_15c58 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15c58, i32* @r4, align 4
  ret i32 %v0_15c54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c54, { 1, 0 }
  uselistorder label %dec_label_pc_15c50, { 1, 0 }
}

define i32 @function_15c60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c60:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15c60 = load i32, i32* @r4, align 4
  %v6_15c60 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_15c68 = icmp eq i32 %arg2, 0
  store i32 135656, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_15c68, label %dec_label_pc_15cbc, label %dec_label_pc_15c80

dec_label_pc_15c80:                               ; preds = %dec_label_pc_15c60
  %v1_15c80 = add i32 %arg2, 4
  %v2_15c80 = inttoptr i32 %v1_15c80 to i32*
  %v3_15c80 = load i32, i32* %v2_15c80, align 4
  store i32 %v3_15c80, i32* @r3, align 4
  %v1_15c84 = and i32 %v3_15c80, 67108864
  %v2_15c84 = icmp eq i32 %v1_15c84, 0
  br i1 %v2_15c84, label %dec_label_pc_15c8c, label %dec_label_pc_15cbc

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15c80
  store i32 20, i32* @r2, align 4
  %v2_15c90 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15c90, i32* @r0, align 4
  %v0_15c94 = call i32 @function_135e0()
  store i32 %v2_15c90, i32* @ip, align 4
  %v0_15cbc.pre = load i32, i32* @r5, align 4
  %v0_15cc4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15cbc

dec_label_pc_15cbc:                               ; preds = %dec_label_pc_15c80, %dec_label_pc_15c60, %dec_label_pc_15c8c
  %v0_15cc4 = phi i32 [ %arg3, %dec_label_pc_15c80 ], [ %arg3, %dec_label_pc_15c60 ], [ %v0_15cc4.pre, %dec_label_pc_15c8c ]
  %v0_15cc0 = phi i32 [ %arg2, %dec_label_pc_15c80 ], [ 0, %dec_label_pc_15c60 ], [ %v2_15c90, %dec_label_pc_15c8c ]
  %v0_15cbc = phi i32 [ %arg1, %dec_label_pc_15c80 ], [ %arg1, %dec_label_pc_15c60 ], [ %v0_15cbc.pre, %dec_label_pc_15c8c ]
  %v4_15ccc = call i32 @function_1621c(i32 %v0_15cbc, i32 %v0_15cc0, i32 %v0_15cc4, i32 8)
  store i32 %v3_15c60, i32* @r4, align 4
  store i32 %v6_15c60, i32* @r5, align 4
  ret i32 %v4_15ccc

; uselistorder directives
  uselistorder label %dec_label_pc_15cbc, { 2, 0, 1 }
}

define i32 @function_15ce0(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ce0:
  %v0_15ce0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15ce0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15ce0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15ce0, %bb
  %v0_15cf4 = phi i32 [ %arg1, %dec_label_pc_15ce0 ], [ 0, %bb ]
  ret i32 %v0_15cf4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15d00() local_unnamed_addr {
dec_label_pc_15d00:
  %v4_15d0c = load i32, i32* inttoptr (i32 135748 to i32*), align 4
  %v1_15d10 = inttoptr i32 %v4_15d0c to i32*
  %v2_15d10 = load i32, i32* %v1_15d10, align 4
  %v2_15d14 = icmp eq i32 %v2_15d10, 0
  br i1 %v2_15d14, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_15d00
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_15d00, %bb
  %v1_15d1c = phi i32 [ %v2_15d10, %dec_label_pc_15d00 ], [ 4096, %bb ]
  ret i32 %v1_15d1c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_15d28() local_unnamed_addr {
dec_label_pc_15d28:
  %v1_15d38 = load i32, i32* @r0, align 4
  ret i32 %v1_15d38
}

define i32 @function_15d3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15d3c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15d3c = load i32, i32* @r7, align 4
  store i32 %v3_15d3c, i32* %stack_var_-8, align 4
  %v0_15d48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15d48, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15d48, -4095
  br i1 %tmp, label %dec_label_pc_15d68, label %dec_label_pc_15d58

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d3c
  %v0_15d58 = call i32 @function_134dc()
  %v0_15d5c = load i32, i32* %r7.global-to-local, align 4
  %v1_15d5c = sub i32 0, %v0_15d5c
  %v2_15d60 = inttoptr i32 %v0_15d58 to i32*
  store i32 %v1_15d5c, i32* %v2_15d60, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15d68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15d68

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15d3c, %dec_label_pc_15d58
  %v1_15d6c = phi i32 [ %v0_15d48, %dec_label_pc_15d3c ], [ -1, %dec_label_pc_15d58 ]
  %v2_15d68 = phi i32 [ %v3_15d3c, %dec_label_pc_15d3c ], [ %v2_15d68.pre, %dec_label_pc_15d58 ]
  store i32 %v2_15d68, i32* %r7.global-to-local, align 4
  ret i32 %v1_15d6c

; uselistorder directives
  uselistorder i32 %v0_15d48, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d68, { 1, 0 }
}

define i32 @function_15d70() local_unnamed_addr {
dec_label_pc_15d70:
  %v1_15d80 = load i32, i32* @r0, align 4
  ret i32 %v1_15d80
}

define i32 @function_15d84() local_unnamed_addr {
dec_label_pc_15d84:
  %v1_15d94 = load i32, i32* @r0, align 4
  ret i32 %v1_15d94
}

define i32 @function_15d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15d98:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_15d98 = load i32, i32* @r5, align 4
  %v18_15d98 = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15dc8, label %dec_label_pc_15db4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15d98
  %v0_15db4 = call i32 @function_134dc()
  %v0_15db8 = load i32, i32* @r5, align 4
  %v1_15db8 = sub i32 0, %v0_15db8
  store i32 %v1_15db8, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  %v2_15dc0 = inttoptr i32 %v0_15db4 to i32*
  store i32 %v1_15db8, i32* %v2_15dc0, align 4
  br label %dec_label_pc_15e1c

dec_label_pc_15dc8:                               ; preds = %dec_label_pc_15d98
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15dc8
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_15dd0 = add i32 %arg2, %arg1
  store i32 %v3_15dd0, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15dc8, %bb
  %v1_15e0c4 = phi i32 [ %v18_15d98, %dec_label_pc_15dc8 ], [ %v3_15dd0, %bb ]
  %v0_15e082 = phi i32 [ 141, %dec_label_pc_15dc8 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_15e1c, label %dec_label_pc_15e08

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15e08
  %v1_15ddc = add i32 %v0_15ddc, 8
  %v2_15ddc = inttoptr i32 %v1_15ddc to i16*
  %v3_15ddc = load i16, i16* %v2_15ddc, align 2
  %v4_15ddc = zext i16 %v3_15ddc to i32
  %v2_15de0 = add i32 %v4_15ddc, %v0_15ddc
  store i32 %v2_15de0, i32* %r3.global-to-local, align 4
  %v1_15de4 = add i32 %v2_15de0, -1
  %v2_15de4 = inttoptr i32 %v1_15de4 to i8*
  %v3_15de4 = load i8, i8* %v2_15de4, align 1
  %v4_15de4 = zext i8 %v3_15de4 to i32
  store i32 %v4_15de4, i32* @r4, align 4
  %v1_15de8 = call i32 @function_17910(i32 %v1_15e08)
  %v0_15dec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15dec, i32* @r1, align 4
  %v1_15df0 = add i32 %v1_15de8, 1
  store i32 %v1_15df0, i32* @r2, align 4
  %v0_15df4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15df4, i32* @r0, align 4
  %v3_15df8 = call i32 @function_135d0(i32 %v0_15df4, i32 %v0_15dec, i32 %v1_15df0)
  %v0_15dfc = load i32, i32* %r7.global-to-local, align 4
  %v1_15dfc = add i32 %v0_15dfc, 8
  %v2_15dfc = inttoptr i32 %v1_15dfc to i16*
  %v3_15dfc = load i16, i16* %v2_15dfc, align 2
  %v4_15dfc = zext i16 %v3_15dfc to i32
  store i32 %v4_15dfc, i32* %r3.global-to-local, align 4
  %v0_15e00 = load i32, i32* @r4, align 4
  %v1_15e00 = trunc i32 %v0_15e00 to i8
  %v3_15e00 = add i32 %v0_15dfc, 10
  %v4_15e00 = inttoptr i32 %v3_15e00 to i8*
  store i8 %v1_15e00, i8* %v4_15e00, align 1
  %v0_15e04 = load i32, i32* %r7.global-to-local, align 4
  %v1_15e04 = load i32, i32* %r3.global-to-local, align 4
  %v2_15e04 = add i32 %v1_15e04, %v0_15e04
  store i32 %v2_15e04, i32* %r7.global-to-local, align 4
  %v1_15e0c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15e08

dec_label_pc_15e08:                               ; preds = %.thread, %dec_label_pc_15ddc
  %v1_15e0c = phi i32 [ %v1_15e0c.pre, %dec_label_pc_15ddc ], [ %v1_15e0c4, %.thread ]
  %v0_15ddc = phi i32 [ %v2_15e04, %dec_label_pc_15ddc ], [ %v0_15e082, %.thread ]
  %v1_15e08 = add i32 %v0_15ddc, 10
  store i32 %v1_15e08, i32* %r6.global-to-local, align 4
  %v3_15e0c = icmp ult i32 %v0_15ddc, %v1_15e0c
  %v1_15e14 = add i32 %v0_15ddc, 11
  store i32 %v1_15e14, i32* %r8.global-to-local, align 4
  br i1 %v3_15e0c, label %dec_label_pc_15ddc, label %dec_label_pc_15e1c

dec_label_pc_15e1c:                               ; preds = %dec_label_pc_15e08, %.thread, %dec_label_pc_15db4
  %v0_15e1c = load i32, i32* @r5, align 4
  store i32 %v6_15d98, i32* @r5, align 4
  store i32 %v18_15d98, i32* @sl, align 4
  ret i32 %v0_15e1c

; uselistorder directives
  uselistorder i32 %v1_15e08, { 1, 0 }
  uselistorder i32 %v0_15ddc, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_15d98, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_135d0, { 6, 5, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15e08, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15e2c() local_unnamed_addr {
dec_label_pc_15e2c:
  %r7.global-to-local = alloca i32, align 4
  %v0_15e34 = load i32, i32* @r1, align 4
  store i32 %v0_15e34, i32* @r3, align 4
  %v0_15e44 = load i32, i32* @r0, align 4
  store i32 %v0_15e44, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15e44, -4095
  br i1 %tmp, label %dec_label_pc_15e64, label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e2c
  %v0_15e50 = call i32 @function_134dc()
  %v0_15e54 = load i32, i32* %r7.global-to-local, align 4
  %v1_15e54 = sub i32 0, %v0_15e54
  store i32 %v1_15e54, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15e5c = inttoptr i32 %v0_15e50 to i32*
  store i32 %v1_15e54, i32* %v2_15e5c, align 4
  br label %dec_label_pc_15e74

dec_label_pc_15e64:                               ; preds = %dec_label_pc_15e2c
  %v2_15e64 = icmp eq i32 %v0_15e44, 0
  br i1 %v2_15e64, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15e64
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15e64, %bb
  call void @__pseudo_cond_branch(i1 %v2_15e64, i32 ptrtoint (i32* @global_var_1607c.894 to i32))
  br label %dec_label_pc_15e74

dec_label_pc_15e74:                               ; preds = %dec_label_pc_15e50, %.thread
  %v0_15e74 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_15e74

; uselistorder directives
  uselistorder i32 %v0_15e44, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15e74, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15e84(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e84:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15e84 = load i32, i32* @r4, align 4
  store i32 %v3_15e84, i32* %stack_var_-16, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_b350.79 to i32), i32 89752), i32* %r4.global-to-local, align 4
  %v4_15e94 = load i32, i32* @global_var_234b0.897, align 4
  %v2_15e98 = icmp eq i32 %v4_15e94, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_15e98, label %dec_label_pc_15ea4, label %dec_label_pc_15eb4

dec_label_pc_15ea4:                               ; preds = %dec_label_pc_15e84
  %v1_15ea8 = call i32 @function_17e1c(i32 0)
  %v1_15eac = icmp slt i32 %v1_15ea8, 0
  br i1 %v1_15eac, label %dec_label_pc_15ed8, label %dec_label_pc_15eb4thread-pre-split

dec_label_pc_15eb4thread-pre-split:               ; preds = %dec_label_pc_15ea4
  %v0_15eb8.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_15eb4.pre = load i32, i32* @global_var_234b0.897, align 4
  br label %dec_label_pc_15eb4

dec_label_pc_15eb4:                               ; preds = %dec_label_pc_15eb4thread-pre-split, %dec_label_pc_15e84
  %v0_15ec4 = phi i32 [ %v4_15eb4.pre, %dec_label_pc_15eb4thread-pre-split ], [ %v4_15e94, %dec_label_pc_15e84 ]
  %v1_15ec8 = phi i32 [ %v0_15eb8.pr, %dec_label_pc_15eb4thread-pre-split ], [ %arg1, %dec_label_pc_15e84 ]
  %v2_15eb8 = icmp eq i32 %v1_15ec8, 0
  store i32 %v0_15ec4, i32* %r4.global-to-local, align 4
  br i1 %v2_15eb8, label %dec_label_pc_15edc, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15eb4
  %v2_15ec8 = add i32 %v1_15ec8, %v0_15ec4
  %v1_15ecc = call i32 @function_17e1c(i32 %v2_15ec8)
  %v1_15ed0 = icmp slt i32 %v1_15ecc, 0
  br i1 %v1_15ed0, label %dec_label_pc_15ed8, label %dec_label_pc_15ec4.dec_label_pc_15edc_crit_edge

dec_label_pc_15ec4.dec_label_pc_15edc_crit_edge:  ; preds = %dec_label_pc_15ec4
  %v0_15edc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15edc

dec_label_pc_15ed8:                               ; preds = %dec_label_pc_15ec4, %dec_label_pc_15ea4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15edc

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15eb4, %dec_label_pc_15ec4.dec_label_pc_15edc_crit_edge, %dec_label_pc_15ed8
  %v0_15edc = phi i32 [ %v0_15edc.pre, %dec_label_pc_15ec4.dec_label_pc_15edc_crit_edge ], [ -1, %dec_label_pc_15ed8 ], [ %v0_15ec4, %dec_label_pc_15eb4 ]
  %v2_15ee0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15ee0, i32* @r4, align 4
  ret i32 %v0_15edc

; uselistorder directives
  uselistorder i32 %v0_15ec4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_17e1c, { 1, 0 }
  uselistorder label %dec_label_pc_15edc, { 2, 1, 0 }
}

define i32 @function_15ef0(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ef0:
  %v1_15f00 = load i32, i32* @r0, align 4
  ret i32 %v1_15f00
}

define i32 @function_15f04(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15f04:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_15f04 = load i32, i32* @r4, align 4
  store i32 %v3_15f04, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_15f1c = inttoptr i32 %arg2 to i8*
  %v3_15f1c = call i32 @function_13530(i8* %v2_15f1c, i32 0)
  %v2_15f20 = load i32, i32* %arg1, align 4
  store i32 %v2_15f20, i32* %r3.global-to-local, align 4
  %v3_15f20 = add i32 %tmp, 4
  %v4_15f20 = inttoptr i32 %v3_15f20 to i32*
  %v5_15f20 = load i32, i32* %v4_15f20, align 4
  store i32 %v5_15f20, i32* %r4.global-to-local, align 4
  %v0_15f24 = load i32, i32* %r5.global-to-local, align 4
  %v1_15f24 = inttoptr i32 %v0_15f24 to i32*
  store i32 %v2_15f20, i32* %v1_15f24, align 4
  %v3_15f24 = add i32 %v0_15f24, 4
  %v4_15f24 = inttoptr i32 %v3_15f24 to i32*
  %v5_15f24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15f24, i32* %v4_15f24, align 4
  %v0_15f28 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f28 = add i32 %v0_15f28, 12
  %v2_15f28 = inttoptr i32 %v1_15f28 to i32*
  %v3_15f28 = load i32, i32* %v2_15f28, align 4
  %v1_15f2c = load i32, i32* %r5.global-to-local, align 4
  %v2_15f2c = add i32 %v1_15f2c, 12
  %v3_15f2c = inttoptr i32 %v2_15f2c to i32*
  store i32 %v3_15f28, i32* %v3_15f2c, align 4
  %v0_15f30 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f30 = add i32 %v0_15f30, 96
  store i32 %v1_15f30, i32* %r3.global-to-local, align 4
  %v1_15f34 = inttoptr i32 %v1_15f30 to i32*
  %v2_15f34 = load i32, i32* %v1_15f34, align 4
  store i32 %v2_15f34, i32* %r3.global-to-local, align 4
  %v3_15f34 = add i32 %v0_15f30, 100
  %v4_15f34 = inttoptr i32 %v3_15f34 to i32*
  %v5_15f34 = load i32, i32* %v4_15f34, align 4
  store i32 %v5_15f34, i32* %r4.global-to-local, align 4
  %v1_15f38 = add i32 %v0_15f30, 56
  %v2_15f38 = inttoptr i32 %v1_15f38 to i32*
  %v3_15f38 = load i32, i32* %v2_15f38, align 4
  store i32 %v3_15f38, i32* %r2.global-to-local, align 4
  %v1_15f3c = load i32, i32* %r5.global-to-local, align 4
  %v2_15f3c = add i32 %v1_15f3c, 96
  %v3_15f3c = inttoptr i32 %v2_15f3c to i32*
  store i32 %v2_15f34, i32* %v3_15f3c, align 4
  %v0_15f40 = load i32, i32* %r4.global-to-local, align 4
  %v1_15f40 = load i32, i32* %r5.global-to-local, align 4
  %v2_15f40 = add i32 %v1_15f40, 100
  %v3_15f40 = inttoptr i32 %v2_15f40 to i32*
  store i32 %v0_15f40, i32* %v3_15f40, align 4
  %v0_15f44 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f44 = add i32 %v0_15f44, 24
  store i32 %v1_15f44, i32* %ip.global-to-local, align 4
  %v1_15f48 = inttoptr i32 %v1_15f44 to i32*
  %v2_15f48 = load i32, i32* %v1_15f48, align 4
  store i32 %v2_15f48, i32* %ip.global-to-local, align 4
  %v3_15f48 = add i32 %v0_15f44, 28
  %v4_15f48 = inttoptr i32 %v3_15f48 to i32*
  %v5_15f48 = load i32, i32* %v4_15f48, align 4
  store i32 %v5_15f48, i32* %lr.global-to-local, align 4
  %v0_15f4c = load i32, i32* %r2.global-to-local, align 4
  %v1_15f4c = load i32, i32* %r5.global-to-local, align 4
  %v2_15f4c = add i32 %v1_15f4c, 56
  %v3_15f4c = inttoptr i32 %v2_15f4c to i32*
  store i32 %v0_15f4c, i32* %v3_15f4c, align 4
  %v0_15f50 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f50 = add i32 %v0_15f50, 72
  store i32 %v1_15f50, i32* %r3.global-to-local, align 4
  %v1_15f54 = add i32 %v0_15f50, 32
  store i32 %v1_15f54, i32* %r7.global-to-local, align 4
  %v1_15f58 = inttoptr i32 %v1_15f54 to i32*
  %v2_15f58 = load i32, i32* %v1_15f58, align 4
  store i32 %v2_15f58, i32* %r7.global-to-local, align 4
  %v3_15f58 = add i32 %v0_15f50, 36
  %v4_15f58 = inttoptr i32 %v3_15f58 to i32*
  %v5_15f58 = load i32, i32* %v4_15f58, align 4
  store i32 %v5_15f58, i32* %r8.global-to-local, align 4
  %v1_15f5c = inttoptr i32 %v1_15f50 to i32*
  %v2_15f5c = load i32, i32* %v1_15f5c, align 4
  %v3_15f5c = add i32 %v0_15f50, 76
  %v4_15f5c = inttoptr i32 %v3_15f5c to i32*
  %v5_15f5c = load i32, i32* %v4_15f5c, align 4
  store i32 %v5_15f5c, i32* %r1.global-to-local, align 4
  %v0_15f60 = load i32, i32* %r5.global-to-local, align 4
  %v1_15f60 = add i32 %v0_15f60, 72
  %v1_15f64 = inttoptr i32 %v1_15f60 to i32*
  store i32 %v2_15f5c, i32* %v1_15f64, align 4
  %v3_15f64 = add i32 %v0_15f60, 76
  %v4_15f64 = inttoptr i32 %v3_15f64 to i32*
  %v5_15f64 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15f64, i32* %v4_15f64, align 4
  %v0_15f68 = load i32, i32* %r7.global-to-local, align 4
  %v1_15f68 = load i32, i32* %r5.global-to-local, align 4
  %v2_15f68 = add i32 %v1_15f68, 32
  %v3_15f68 = inttoptr i32 %v2_15f68 to i32*
  store i32 %v0_15f68, i32* %v3_15f68, align 4
  %v0_15f6c = load i32, i32* %r8.global-to-local, align 4
  %v1_15f6c = load i32, i32* %r5.global-to-local, align 4
  %v2_15f6c = add i32 %v1_15f6c, 36
  %v3_15f6c = inttoptr i32 %v2_15f6c to i32*
  store i32 %v0_15f6c, i32* %v3_15f6c, align 4
  %v0_15f70 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f70 = add i32 %v0_15f70, 80
  store i32 %v1_15f70, i32* %r3.global-to-local, align 4
  %v1_15f74 = add i32 %v0_15f70, 48
  store i32 %v1_15f74, i32* %r7.global-to-local, align 4
  %v1_15f78 = inttoptr i32 %v1_15f74 to i32*
  %v2_15f78 = load i32, i32* %v1_15f78, align 4
  store i32 %v2_15f78, i32* %r7.global-to-local, align 4
  %v3_15f78 = add i32 %v0_15f70, 52
  %v4_15f78 = inttoptr i32 %v3_15f78 to i32*
  %v5_15f78 = load i32, i32* %v4_15f78, align 4
  store i32 %v5_15f78, i32* %r8.global-to-local, align 4
  %v1_15f7c = inttoptr i32 %v1_15f70 to i32*
  %v2_15f7c = load i32, i32* %v1_15f7c, align 4
  %v3_15f7c = add i32 %v0_15f70, 84
  %v4_15f7c = inttoptr i32 %v3_15f7c to i32*
  %v5_15f7c = load i32, i32* %v4_15f7c, align 4
  store i32 %v5_15f7c, i32* %r1.global-to-local, align 4
  %v1_15f80 = add i32 %v0_15f70, 16
  %v2_15f80 = inttoptr i32 %v1_15f80 to i32*
  %v3_15f80 = load i32, i32* %v2_15f80, align 4
  store i32 %v3_15f80, i32* %r2.global-to-local, align 4
  %v0_15f84 = load i32, i32* %r5.global-to-local, align 4
  %v1_15f84 = add i32 %v0_15f84, 80
  %v1_15f88 = inttoptr i32 %v1_15f84 to i32*
  store i32 %v2_15f7c, i32* %v1_15f88, align 4
  %v3_15f88 = add i32 %v0_15f84, 84
  %v4_15f88 = inttoptr i32 %v3_15f88 to i32*
  %v5_15f88 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15f88, i32* %v4_15f88, align 4
  %v0_15f8c = load i32, i32* %r7.global-to-local, align 4
  %v1_15f8c = load i32, i32* %r5.global-to-local, align 4
  %v2_15f8c = add i32 %v1_15f8c, 48
  %v3_15f8c = inttoptr i32 %v2_15f8c to i32*
  store i32 %v0_15f8c, i32* %v3_15f8c, align 4
  %v0_15f90 = load i32, i32* %r8.global-to-local, align 4
  %v1_15f90 = load i32, i32* %r5.global-to-local, align 4
  %v2_15f90 = add i32 %v1_15f90, 52
  %v3_15f90 = inttoptr i32 %v2_15f90 to i32*
  store i32 %v0_15f90, i32* %v3_15f90, align 4
  %v0_15f94 = load i32, i32* %r2.global-to-local, align 4
  %v1_15f94 = load i32, i32* %r5.global-to-local, align 4
  %v2_15f94 = add i32 %v1_15f94, 16
  %v3_15f94 = inttoptr i32 %v2_15f94 to i32*
  store i32 %v0_15f94, i32* %v3_15f94, align 4
  %v0_15f98 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f98 = add i32 %v0_15f98, 88
  store i32 %v1_15f98, i32* %r3.global-to-local, align 4
  %v1_15f9c = add i32 %v0_15f98, 20
  %v2_15f9c = inttoptr i32 %v1_15f9c to i32*
  %v3_15f9c = load i32, i32* %v2_15f9c, align 4
  store i32 %v3_15f9c, i32* %r2.global-to-local, align 4
  %v1_15fa0 = inttoptr i32 %v1_15f98 to i32*
  %v2_15fa0 = load i32, i32* %v1_15fa0, align 4
  %v3_15fa0 = add i32 %v0_15f98, 92
  %v4_15fa0 = inttoptr i32 %v3_15fa0 to i32*
  %v5_15fa0 = load i32, i32* %v4_15fa0, align 4
  store i32 %v5_15fa0, i32* %r1.global-to-local, align 4
  %v1_15fa4 = add i32 %v0_15f98, 64
  store i32 %v1_15fa4, i32* %r6.global-to-local, align 4
  %v1_15fa8 = inttoptr i32 %v1_15fa4 to i32*
  %v2_15fa8 = load i32, i32* %v1_15fa8, align 4
  store i32 %v2_15fa8, i32* %r6.global-to-local, align 4
  %v3_15fa8 = add i32 %v0_15f98, 68
  %v4_15fa8 = inttoptr i32 %v3_15fa8 to i32*
  %v5_15fa8 = load i32, i32* %v4_15fa8, align 4
  store i32 %v5_15fa8, i32* %r7.global-to-local, align 4
  %v0_15fac = load i32, i32* %r5.global-to-local, align 4
  %v1_15fac = add i32 %v0_15fac, 88
  store i32 %v1_15fac, i32* %r3.global-to-local, align 4
  %v2_15fb0 = add i32 %v0_15fac, 20
  %v3_15fb0 = inttoptr i32 %v2_15fb0 to i32*
  store i32 %v3_15f9c, i32* %v3_15fb0, align 4
  %v0_15fb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_15fb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_15fb4 = add i32 %v1_15fb4, 24
  %v3_15fb4 = inttoptr i32 %v2_15fb4 to i32*
  store i32 %v0_15fb4, i32* %v3_15fb4, align 4
  %v0_15fb8 = load i32, i32* %lr.global-to-local, align 4
  %v1_15fb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_15fb8 = add i32 %v1_15fb8, 28
  %v3_15fb8 = inttoptr i32 %v2_15fb8 to i32*
  store i32 %v0_15fb8, i32* %v3_15fb8, align 4
  %v0_15fbc = load i32, i32* %r6.global-to-local, align 4
  %v1_15fbc = load i32, i32* %r5.global-to-local, align 4
  %v2_15fbc = add i32 %v1_15fbc, 64
  %v3_15fbc = inttoptr i32 %v2_15fbc to i32*
  store i32 %v0_15fbc, i32* %v3_15fbc, align 4
  %v0_15fc0 = load i32, i32* %r7.global-to-local, align 4
  %v1_15fc0 = load i32, i32* %r5.global-to-local, align 4
  %v2_15fc0 = add i32 %v1_15fc0, 68
  %v3_15fc0 = inttoptr i32 %v2_15fc0 to i32*
  store i32 %v0_15fc0, i32* %v3_15fc0, align 4
  %v0_15fc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_15fc4 = inttoptr i32 %v0_15fc4 to i32*
  store i32 %v2_15fa0, i32* %v1_15fc4, align 4
  %v3_15fc4 = add i32 %v0_15fc4, 4
  %v4_15fc4 = inttoptr i32 %v3_15fc4 to i32*
  %v5_15fc4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15fc4, i32* %v4_15fc4, align 4
  %v2_15fc8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15fc8, i32* %r4.global-to-local, align 4
  ret i32 %v2_15fa0

; uselistorder directives
  uselistorder i32 %v0_15f98, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_15f70, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 1, 0, 2 }
  uselistorder i32 104, { 5, 0, 1, 2, 6, 3, 7, 4, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_15fd0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fd0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15fd0 = load i32, i32* @r4, align 4
  store i32 %v3_15fd0, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_15fe8 = inttoptr i32 %arg2 to i8*
  %v3_15fe8 = call i32 @function_13530(i8* %v2_15fe8, i32 0)
  %v2_15fec = load i32, i32* %arg1, align 4
  %v3_15fec = add i32 %tmp, 4
  %v4_15fec = inttoptr i32 %v3_15fec to i32*
  %v5_15fec = load i32, i32* %v4_15fec, align 4
  store i32 %v5_15fec, i32* %r4.global-to-local, align 4
  %v0_15ff0 = load i32, i32* %r6.global-to-local, align 4
  %v1_15ff0 = inttoptr i32 %v0_15ff0 to i32*
  store i32 %v2_15fec, i32* %v1_15ff0, align 4
  %v3_15ff0 = add i32 %v0_15ff0, 4
  %v4_15ff0 = inttoptr i32 %v3_15ff0 to i32*
  %v5_15ff0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15ff0, i32* %v4_15ff0, align 4
  %v0_15ff4 = load i32, i32* %r5.global-to-local, align 4
  %v1_15ff4 = add i32 %v0_15ff4, 32
  %v1_15ff8 = inttoptr i32 %v1_15ff4 to i32*
  %v2_15ff8 = load i32, i32* %v1_15ff8, align 4
  %v3_15ff8 = add i32 %v0_15ff4, 36
  %v4_15ff8 = inttoptr i32 %v3_15ff8 to i32*
  %v5_15ff8 = load i32, i32* %v4_15ff8, align 4
  store i32 %v5_15ff8, i32* %r4.global-to-local, align 4
  %v1_15ffc = add i32 %v0_15ff4, 96
  %v2_15ffc = inttoptr i32 %v1_15ffc to i32*
  %v3_15ffc = load i32, i32* %v2_15ffc, align 4
  store i32 %v3_15ffc, i32* %r2.global-to-local, align 4
  %v1_16000 = load i32, i32* %r6.global-to-local, align 4
  %v2_16000 = add i32 %v1_16000, 32
  %v3_16000 = inttoptr i32 %v2_16000 to i32*
  store i32 %v2_15ff8, i32* %v3_16000, align 4
  %v0_16004 = load i32, i32* %r4.global-to-local, align 4
  %v1_16004 = load i32, i32* %r6.global-to-local, align 4
  %v2_16004 = add i32 %v1_16004, 36
  %v3_16004 = inttoptr i32 %v2_16004 to i32*
  store i32 %v0_16004, i32* %v3_16004, align 4
  %v0_16008 = load i32, i32* %r2.global-to-local, align 4
  %v1_16008 = load i32, i32* %r6.global-to-local, align 4
  %v2_16008 = add i32 %v1_16008, 12
  %v3_16008 = inttoptr i32 %v2_16008 to i32*
  store i32 %v0_16008, i32* %v3_16008, align 4
  %v0_1600c = load i32, i32* %r5.global-to-local, align 4
  %v1_1600c = add i32 %v0_1600c, 48
  %v2_1600c = inttoptr i32 %v1_1600c to i32*
  %v3_1600c = load i32, i32* %v2_1600c, align 4
  %v1_16010 = add i32 %v0_1600c, 24
  store i32 %v1_16010, i32* %ip.global-to-local, align 4
  %v1_16014 = inttoptr i32 %v1_16010 to i32*
  %v2_16014 = load i32, i32* %v1_16014, align 4
  store i32 %v2_16014, i32* %ip.global-to-local, align 4
  %v3_16014 = add i32 %v0_1600c, 28
  %v4_16014 = inttoptr i32 %v3_16014 to i32*
  %v5_16014 = load i32, i32* %v4_16014, align 4
  store i32 %v5_16014, i32* %lr.global-to-local, align 4
  %v1_16018 = load i32, i32* %r6.global-to-local, align 4
  %v2_16018 = add i32 %v1_16018, 44
  %v3_16018 = inttoptr i32 %v2_16018 to i32*
  store i32 %v3_1600c, i32* %v3_16018, align 4
  %v0_1601c = load i32, i32* %r5.global-to-local, align 4
  %v1_1601c = add i32 %v0_1601c, 64
  %v2_1601c = inttoptr i32 %v1_1601c to i32*
  %v3_1601c = load i32, i32* %v2_1601c, align 4
  %v1_16020 = add i32 %v0_1601c, 56
  %v2_16020 = inttoptr i32 %v1_16020 to i32*
  %v3_16020 = load i32, i32* %v2_16020, align 4
  store i32 %v3_16020, i32* %r2.global-to-local, align 4
  %v1_16024 = load i32, i32* %r6.global-to-local, align 4
  %v2_16024 = add i32 %v1_16024, 52
  %v3_16024 = inttoptr i32 %v2_16024 to i32*
  store i32 %v3_1601c, i32* %v3_16024, align 4
  %v0_16028 = load i32, i32* %r2.global-to-local, align 4
  %v1_16028 = load i32, i32* %r6.global-to-local, align 4
  %v2_16028 = add i32 %v1_16028, 48
  %v3_16028 = inttoptr i32 %v2_16028 to i32*
  store i32 %v0_16028, i32* %v3_16028, align 4
  %v0_1602c = load i32, i32* %r5.global-to-local, align 4
  %v1_1602c = add i32 %v0_1602c, 72
  %v1_16030 = inttoptr i32 %v1_1602c to i32*
  %v2_16030 = load i32, i32* %v1_16030, align 4
  %v3_16030 = add i32 %v0_1602c, 76
  %v4_16030 = inttoptr i32 %v3_16030 to i32*
  %v5_16030 = load i32, i32* %v4_16030, align 4
  store i32 %v5_16030, i32* %r1.global-to-local, align 4
  %v0_16034 = load i32, i32* %r6.global-to-local, align 4
  %v1_16034 = add i32 %v0_16034, 56
  %v1_16038 = inttoptr i32 %v1_16034 to i32*
  store i32 %v2_16030, i32* %v1_16038, align 4
  %v3_16038 = add i32 %v0_16034, 60
  %v4_16038 = inttoptr i32 %v3_16038 to i32*
  %v5_16038 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16038, i32* %v4_16038, align 4
  %v0_1603c = load i32, i32* %r5.global-to-local, align 4
  %v1_1603c = add i32 %v0_1603c, 80
  %v1_16040 = inttoptr i32 %v1_1603c to i32*
  %v2_16040 = load i32, i32* %v1_16040, align 4
  %v3_16040 = add i32 %v0_1603c, 84
  %v4_16040 = inttoptr i32 %v3_16040 to i32*
  %v5_16040 = load i32, i32* %v4_16040, align 4
  store i32 %v5_16040, i32* %r1.global-to-local, align 4
  %v0_16044 = load i32, i32* %r6.global-to-local, align 4
  %v1_16044 = add i32 %v0_16044, 64
  %v1_16048 = inttoptr i32 %v1_16044 to i32*
  store i32 %v2_16040, i32* %v1_16048, align 4
  %v3_16048 = add i32 %v0_16044, 68
  %v4_16048 = inttoptr i32 %v3_16048 to i32*
  %v5_16048 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16048, i32* %v4_16048, align 4
  %v0_1604c = load i32, i32* %r5.global-to-local, align 4
  %v1_1604c = add i32 %v0_1604c, 16
  %v2_1604c = inttoptr i32 %v1_1604c to i32*
  %v3_1604c = load i32, i32* %v2_1604c, align 4
  %v1_16050 = load i32, i32* %r6.global-to-local, align 4
  %v2_16050 = add i32 %v1_16050, 16
  %v3_16050 = inttoptr i32 %v2_16050 to i32*
  store i32 %v3_1604c, i32* %v3_16050, align 4
  %v0_16054 = load i32, i32* %r5.global-to-local, align 4
  %v1_16054 = add i32 %v0_16054, 88
  %v1_16058 = add i32 %v0_16054, 20
  %v2_16058 = inttoptr i32 %v1_16058 to i32*
  %v3_16058 = load i32, i32* %v2_16058, align 4
  store i32 %v3_16058, i32* %r2.global-to-local, align 4
  %v1_1605c = inttoptr i32 %v1_16054 to i32*
  %v2_1605c = load i32, i32* %v1_1605c, align 4
  %v3_1605c = add i32 %v0_16054, 92
  %v4_1605c = inttoptr i32 %v3_1605c to i32*
  %v5_1605c = load i32, i32* %v4_1605c, align 4
  store i32 %v5_1605c, i32* %r1.global-to-local, align 4
  %v0_16060 = load i32, i32* %r6.global-to-local, align 4
  %v1_16060 = add i32 %v0_16060, 72
  %v1_16064 = inttoptr i32 %v1_16060 to i32*
  store i32 %v2_1605c, i32* %v1_16064, align 4
  %v3_16064 = add i32 %v0_16060, 76
  %v4_16064 = inttoptr i32 %v3_16064 to i32*
  %v5_16064 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16064, i32* %v4_16064, align 4
  %v0_16068 = load i32, i32* %r2.global-to-local, align 4
  %v1_16068 = load i32, i32* %r6.global-to-local, align 4
  %v2_16068 = add i32 %v1_16068, 20
  %v3_16068 = inttoptr i32 %v2_16068 to i32*
  store i32 %v0_16068, i32* %v3_16068, align 4
  %v0_1606c = load i32, i32* %ip.global-to-local, align 4
  %v1_1606c = load i32, i32* %r6.global-to-local, align 4
  %v2_1606c = add i32 %v1_1606c, 24
  %v3_1606c = inttoptr i32 %v2_1606c to i32*
  store i32 %v0_1606c, i32* %v3_1606c, align 4
  %v0_16070 = load i32, i32* %lr.global-to-local, align 4
  %v1_16070 = load i32, i32* %r6.global-to-local, align 4
  %v2_16070 = add i32 %v1_16070, 28
  %v3_16070 = inttoptr i32 %v2_16070 to i32*
  store i32 %v0_16070, i32* %v3_16070, align 4
  %v2_16074 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16074, i32* %r4.global-to-local, align 4
  ret i32 %v2_1605c

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_1607c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1607c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_16098 = inttoptr i32 %arg2 to i8*
  %v3_16098 = call i32 @function_13530(i8* %v2_16098, i32 0)
  %v1_1609c = add i32 %tmp, 4
  %v2_1609c = inttoptr i32 %v1_1609c to i32*
  %v3_1609c = load i32, i32* %v2_1609c, align 4
  %v2_160a0 = load i32, i32* %arg1, align 4
  store i32 %v2_160a0, i32* %r8.global-to-local, align 4
  %v1_160a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_160a4 = add i32 %v1_160a4, 12
  %v3_160a4 = inttoptr i32 %v2_160a4 to i32*
  store i32 %v3_1609c, i32* %v3_160a4, align 4
  %v0_160a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_160a8 = add i32 %v0_160a8, 20
  %v2_160a8 = inttoptr i32 %v1_160a8 to i32*
  %v3_160a8 = load i32, i32* %v2_160a8, align 4
  %v1_160ac = add i32 %v0_160a8, 16
  %v2_160ac = inttoptr i32 %v1_160ac to i32*
  %v3_160ac = load i32, i32* %v2_160ac, align 4
  store i32 %v3_160ac, i32* %r6.global-to-local, align 4
  %v1_160b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_160b0 = add i32 %v1_160b0, 44
  %v3_160b0 = inttoptr i32 %v2_160b0 to i32*
  store i32 %v3_160a8, i32* %v3_160b0, align 4
  %v0_160b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_160b4 = add i32 %v0_160b4, 24
  %v2_160b4 = inttoptr i32 %v1_160b4 to i32*
  %v3_160b4 = load i32, i32* %v2_160b4, align 4
  %v1_160b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_160b8 = add i32 %v1_160b8, 48
  %v3_160b8 = inttoptr i32 %v2_160b8 to i32*
  store i32 %v3_160b4, i32* %v3_160b8, align 4
  %v0_160bc = load i32, i32* %r4.global-to-local, align 4
  %v1_160bc = add i32 %v0_160bc, 28
  %v2_160bc = inttoptr i32 %v1_160bc to i32*
  %v3_160bc = load i32, i32* %v2_160bc, align 4
  %v1_160c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_160c0 = add i32 %v1_160c0, 52
  %v3_160c0 = inttoptr i32 %v2_160c0 to i32*
  store i32 %v3_160bc, i32* %v3_160c0, align 4
  %v0_160c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_160c4 = add i32 %v0_160c4, 32
  %v1_160c8 = inttoptr i32 %v1_160c4 to i32*
  %v2_160c8 = load i32, i32* %v1_160c8, align 4
  %v3_160c8 = add i32 %v0_160c4, 36
  %v4_160c8 = inttoptr i32 %v3_160c8 to i32*
  %v5_160c8 = load i32, i32* %v4_160c8, align 4
  store i32 %v5_160c8, i32* %r1.global-to-local, align 4
  %v0_160cc = load i32, i32* %r5.global-to-local, align 4
  %v1_160cc = add i32 %v0_160cc, 56
  %v1_160d0 = inttoptr i32 %v1_160cc to i32*
  store i32 %v2_160c8, i32* %v1_160d0, align 4
  %v3_160d0 = add i32 %v0_160cc, 60
  %v4_160d0 = inttoptr i32 %v3_160d0 to i32*
  %v5_160d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_160d0, i32* %v4_160d0, align 4
  %v0_160d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_160d4 = add i32 %v0_160d4, 40
  %v1_160d8 = inttoptr i32 %v1_160d4 to i32*
  %v2_160d8 = load i32, i32* %v1_160d8, align 4
  %v3_160d8 = add i32 %v0_160d4, 44
  %v4_160d8 = inttoptr i32 %v3_160d8 to i32*
  %v5_160d8 = load i32, i32* %v4_160d8, align 4
  store i32 %v5_160d8, i32* %r1.global-to-local, align 4
  %v0_160dc = load i32, i32* %r5.global-to-local, align 4
  %v1_160dc = add i32 %v0_160dc, 64
  %v1_160e0 = inttoptr i32 %v1_160dc to i32*
  store i32 %v2_160d8, i32* %v1_160e0, align 4
  %v3_160e0 = add i32 %v0_160dc, 68
  %v4_160e0 = inttoptr i32 %v3_160e0 to i32*
  %v5_160e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_160e0, i32* %v4_160e0, align 4
  %v0_160e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_160e4 = add i32 %v0_160e4, 48
  %v1_160e8 = inttoptr i32 %v1_160e4 to i32*
  %v2_160e8 = load i32, i32* %v1_160e8, align 4
  %v3_160e8 = add i32 %v0_160e4, 52
  %v4_160e8 = inttoptr i32 %v3_160e8 to i32*
  %v5_160e8 = load i32, i32* %v4_160e8, align 4
  store i32 %v5_160e8, i32* %r1.global-to-local, align 4
  %v1_160ec = add i32 %v0_160e4, 8
  %v2_160ec = inttoptr i32 %v1_160ec to i16*
  %v3_160ec = load i16, i16* %v2_160ec, align 2
  %v4_160ec = zext i16 %v3_160ec to i32
  store i32 %v4_160ec, i32* %r2.global-to-local, align 4
  %v1_160f0 = add i32 %v0_160e4, 10
  %v2_160f0 = inttoptr i32 %v1_160f0 to i16*
  %v3_160f0 = load i16, i16* %v2_160f0, align 2
  %v4_160f0 = zext i16 %v3_160f0 to i32
  store i32 %v4_160f0, i32* %ip.global-to-local, align 4
  %v1_160f4 = add i32 %v0_160e4, 12
  %v2_160f4 = inttoptr i32 %v1_160f4 to i16*
  %v3_160f4 = load i16, i16* %v2_160f4, align 2
  %v4_160f4 = zext i16 %v3_160f4 to i32
  store i32 %v4_160f4, i32* %lr.global-to-local, align 4
  %v1_160f8 = add i32 %v0_160e4, 14
  %v2_160f8 = inttoptr i32 %v1_160f8 to i16*
  %v3_160f8 = load i16, i16* %v2_160f8, align 2
  %v4_160f8 = zext i16 %v3_160f8 to i32
  store i32 %v4_160f8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16104 = load i32, i32* %r5.global-to-local, align 4
  %v1_16104 = add i32 %v0_16104, 72
  %v1_16108 = inttoptr i32 %v1_16104 to i32*
  store i32 %v2_160e8, i32* %v1_16108, align 4
  %v3_16108 = add i32 %v0_16104, 76
  %v4_16108 = inttoptr i32 %v3_16108 to i32*
  %v5_16108 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16108, i32* %v4_16108, align 4
  %v0_1610c = load i32, i32* %r5.global-to-local, align 4
  %v1_1610c = inttoptr i32 %v0_1610c to i32*
  %v2_1610c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1610c, i32* %v1_1610c, align 4
  %v3_1610c = add i32 %v0_1610c, 4
  %v4_1610c = inttoptr i32 %v3_1610c to i32*
  %v5_1610c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1610c, i32* %v4_1610c, align 4
  %v0_16110 = load i32, i32* %r6.global-to-local, align 4
  %v1_16110 = load i32, i32* %r5.global-to-local, align 4
  %v2_16110 = add i32 %v1_16110, 32
  %v3_16110 = inttoptr i32 %v2_16110 to i32*
  store i32 %v0_16110, i32* %v3_16110, align 4
  %v0_16114 = load i32, i32* %r7.global-to-local, align 4
  %v1_16114 = load i32, i32* %r5.global-to-local, align 4
  %v2_16114 = add i32 %v1_16114, 36
  %v3_16114 = inttoptr i32 %v2_16114 to i32*
  store i32 %v0_16114, i32* %v3_16114, align 4
  %v0_16118 = load i32, i32* %r2.global-to-local, align 4
  %v1_16118 = load i32, i32* %r5.global-to-local, align 4
  %v2_16118 = add i32 %v1_16118, 16
  %v3_16118 = inttoptr i32 %v2_16118 to i32*
  store i32 %v0_16118, i32* %v3_16118, align 4
  %v0_1611c = load i32, i32* %ip.global-to-local, align 4
  %v1_1611c = load i32, i32* %r5.global-to-local, align 4
  %v2_1611c = add i32 %v1_1611c, 20
  %v3_1611c = inttoptr i32 %v2_1611c to i32*
  store i32 %v0_1611c, i32* %v3_1611c, align 4
  %v0_16120 = load i32, i32* %lr.global-to-local, align 4
  %v1_16120 = load i32, i32* %r5.global-to-local, align 4
  %v2_16120 = add i32 %v1_16120, 24
  %v3_16120 = inttoptr i32 %v2_16120 to i32*
  store i32 %v0_16120, i32* %v3_16120, align 4
  %v0_16124 = load i32, i32* %r4.global-to-local, align 4
  %v1_16124 = load i32, i32* %r5.global-to-local, align 4
  %v2_16124 = add i32 %v1_16124, 28
  %v3_16124 = inttoptr i32 %v2_16124 to i32*
  store i32 %v0_16124, i32* %v3_16124, align 4
  ret i32 %v2_160e8

; uselistorder directives
  uselistorder i32 %v0_160e4, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 68, { 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 60, { 3, 4, 1, 5, 6, 0, 2, 7 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @function_16134() local_unnamed_addr {
dec_label_pc_16134:
  %stack_var_-16 = alloca i32, align 4
  %v2_16138 = ptrtoint i32* %stack_var_-16 to i32
  %v2_16144 = call i32 @function_17e68(i32 7, i32 %v2_16138)
  %v1_16148 = icmp slt i32 %v2_16144, 0
  %v5_1614c = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16148, i32 256, i32 %v5_1614c
  ret i32 %storemerge
}

define i32 @function_16160(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16160:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16160 = load i32, i32* @r7, align 4
  store i32 %v3_16160, i32* %stack_var_-8, align 4
  %v0_1616c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1616c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1616c, -4095
  br i1 %tmp, label %dec_label_pc_1618c, label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16160
  %v0_1617c = call i32 @function_134dc()
  %v0_16180 = load i32, i32* %r7.global-to-local, align 4
  %v1_16180 = sub i32 0, %v0_16180
  %v2_16184 = inttoptr i32 %v0_1617c to i32*
  store i32 %v1_16180, i32* %v2_16184, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1618c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16160, %dec_label_pc_1617c
  %v1_16190 = phi i32 [ %v0_1616c, %dec_label_pc_16160 ], [ -1, %dec_label_pc_1617c ]
  %v2_1618c = phi i32 [ %v3_16160, %dec_label_pc_16160 ], [ %v2_1618c.pre, %dec_label_pc_1617c ]
  store i32 %v2_1618c, i32* @r7, align 4
  ret i32 %v1_16190

; uselistorder directives
  uselistorder i32 %v0_1616c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1618c, { 1, 0 }
}

define i32 @function_16194(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16194:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16194 = load i32, i32* @r7, align 4
  store i32 %v3_16194, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_161bc, label %dec_label_pc_161ac

dec_label_pc_161ac:                               ; preds = %dec_label_pc_16194
  %v0_161ac = call i32 @function_134dc()
  %v0_161b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_161b0 = sub i32 0, %v0_161b0
  %v2_161b4 = inttoptr i32 %v0_161ac to i32*
  store i32 %v1_161b0, i32* %v2_161b4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_161c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %dec_label_pc_16194, %dec_label_pc_161ac
  %v2_161c0 = phi i32 [ %v3_16194, %dec_label_pc_16194 ], [ %v2_161c0.pre, %dec_label_pc_161ac ]
  %v0_161bc = phi i32 [ %arg1, %dec_label_pc_16194 ], [ -1, %dec_label_pc_161ac ]
  store i32 %v2_161c0, i32* @r7, align 4
  ret i32 %v0_161bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161bc, { 1, 0 }
}

define i32 @function_161c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_161c8:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_161fc, label %dec_label_pc_161ec

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161c8
  %v0_161ec = call i32 @function_134dc()
  %v0_161f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_161f0 = sub i32 0, %v0_161f0
  %v2_161f4 = inttoptr i32 %v0_161ec to i32*
  store i32 %v1_161f0, i32* %v2_161f4, align 4
  br label %dec_label_pc_161fc

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161c8, %dec_label_pc_161ec
  %v1_16204 = phi i32 [ %arg1, %dec_label_pc_161c8 ], [ -1, %dec_label_pc_161ec ]
  ret i32 %v1_16204

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_161fc, { 1, 0 }
}

define i32 @function_16208(i32 %arg1) local_unnamed_addr {
dec_label_pc_16208:
  %v1_16218 = load i32, i32* @r0, align 4
  ret i32 %v1_16218
}

define i32 @function_1621c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1621c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1621c = load i32, i32* @r7, align 4
  store i32 %v3_1621c, i32* %stack_var_-8, align 4
  %v0_16228 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16228, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16228, -4095
  br i1 %tmp, label %dec_label_pc_16248, label %dec_label_pc_16238

dec_label_pc_16238:                               ; preds = %dec_label_pc_1621c
  %v0_16238 = call i32 @function_134dc()
  %v0_1623c = load i32, i32* %r7.global-to-local, align 4
  %v1_1623c = sub i32 0, %v0_1623c
  %v2_16240 = inttoptr i32 %v0_16238 to i32*
  store i32 %v1_1623c, i32* %v2_16240, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16248.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16248

dec_label_pc_16248:                               ; preds = %dec_label_pc_1621c, %dec_label_pc_16238
  %v1_1624c = phi i32 [ %v0_16228, %dec_label_pc_1621c ], [ -1, %dec_label_pc_16238 ]
  %v2_16248 = phi i32 [ %v3_1621c, %dec_label_pc_1621c ], [ %v2_16248.pre, %dec_label_pc_16238 ]
  store i32 %v2_16248, i32* @r7, align 4
  ret i32 %v1_1624c

; uselistorder directives
  uselistorder i32 %v0_16228, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16248, { 1, 0 }
}

define i32 @function_16250(i32 %arg1) local_unnamed_addr {
dec_label_pc_16250:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16254.outer

dec_label_pc_16254.outer:                         ; preds = %dec_label_pc_1626c, %dec_label_pc_16250
  %v0_16254.ph = phi i32 [ %v0_16254.pre.pre, %dec_label_pc_1626c ], [ %arg1, %dec_label_pc_16250 ]
  %tmp = icmp ult i32 %v0_16254.ph, -4095
  br label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %dec_label_pc_16254.outer, %dec_label_pc_16254
  br i1 %tmp, label %dec_label_pc_16254, label %dec_label_pc_1626c

dec_label_pc_1626c:                               ; preds = %dec_label_pc_16254
  %v0_1626c = call i32 @function_134dc()
  %v1_16270 = sub i32 0, %v0_16254.ph
  %v2_16274 = inttoptr i32 %v0_1626c to i32*
  store i32 %v1_16270, i32* %v2_16274, align 4
  %v0_16254.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16254.outer

; uselistorder directives
  uselistorder i32 %v0_16254.ph, { 1, 0 }
  uselistorder label %dec_label_pc_16254, { 1, 0 }
}

define i32 @function_1627c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1627c:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 135656, i32* @r6, align 4
  %v1_16290 = add i32 %tmp, 24
  store i32 %v1_16290, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_162a8 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  store i32 %v4_162a8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_162a8)
  %v0_162bc = load i32, i32* @r6, align 4
  %v2_162bc = add i32 %v0_162bc, 16
  %v3_162bc = inttoptr i32 %v2_162bc to i32*
  %v4_162bc = load i32, i32* %v3_162bc, align 4
  store i32 %v4_162bc, i32* %ip.global-to-local, align 4
  store i32 90824, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_162bc)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_162cc

dec_label_pc_162cc:                               ; preds = %dec_label_pc_162fc, %dec_label_pc_1627c
  %v0_162cc = load i32, i32* @r5, align 4
  %v1_162cc = add i32 %v0_162cc, 4
  %v2_162cc = inttoptr i32 %v1_162cc to i32*
  %v3_162cc = load i32, i32* %v2_162cc, align 4
  %v4_162cc = add i32 %v0_162cc, 8
  %v5_162cc = inttoptr i32 %v4_162cc to i32*
  %v6_162cc = load i32, i32* %v5_162cc, align 4
  %tmp10 = icmp ugt i32 %v6_162cc, %v3_162cc
  br i1 %tmp10, label %dec_label_pc_162fc, label %dec_label_pc_162d8

dec_label_pc_162d8:                               ; preds = %dec_label_pc_162cc
  %v1_162d8 = inttoptr i32 %v0_162cc to i32*
  %v2_162d8 = load i32, i32* %v1_162d8, align 4
  %v1_162dc = add i32 %v0_162cc, 12
  %v2_162dc = inttoptr i32 %v1_162dc to i32*
  %v3_162dc = load i32, i32* %v2_162dc, align 4
  %v1_162e0 = add i32 %v0_162cc, 20
  %v2_162e0 = inttoptr i32 %v1_162e0 to i32*
  %v3_162e0 = load i32, i32* %v2_162e0, align 4
  %v4_162e4 = inttoptr i32 %v3_162dc to i32*
  %v5_162e4 = call i32 @function_17e9c(i32 %v2_162d8, i32* %v4_162e4, i32 %v3_162e0, i32 %v6_162cc)
  %tmp9 = icmp slt i32 %v5_162e4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_162f4

.thread:                                          ; preds = %dec_label_pc_162d8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1632c

dec_label_pc_162f4:                               ; preds = %dec_label_pc_162d8
  %v1_162f4 = load i32, i32* @r5, align 4
  %v2_162f4 = add i32 %v1_162f4, 8
  %v3_162f4 = inttoptr i32 %v2_162f4 to i32*
  store i32 %v5_162e4, i32* %v3_162f4, align 4
  %v0_162f8 = load i32, i32* @r7, align 4
  %v1_162f8 = load i32, i32* @r5, align 4
  %v2_162f8 = add i32 %v1_162f8, 4
  %v3_162f8 = inttoptr i32 %v2_162f8 to i32*
  store i32 %v0_162f8, i32* %v3_162f8, align 4
  %v0_162fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_162fc

dec_label_pc_162fc:                               ; preds = %dec_label_pc_162cc, %dec_label_pc_162f4
  %v1_16320 = phi i32 [ %v0_162cc, %dec_label_pc_162cc ], [ %v0_162fc.pre, %dec_label_pc_162f4 ]
  %v1_162fc = add i32 %v1_16320, 4
  %v2_162fc = inttoptr i32 %v1_162fc to i32*
  %v3_162fc = load i32, i32* %v2_162fc, align 4
  %v1_16300 = add i32 %v1_16320, 12
  %v2_16300 = inttoptr i32 %v1_16300 to i32*
  %v3_16300 = load i32, i32* %v2_16300, align 4
  %v2_16304 = add i32 %v3_16300, %v3_162fc
  store i32 %v2_16304, i32* @r4, align 4
  %v3_16308 = inttoptr i32 %v2_16304 to i32*
  %v4_16308 = load i32, i32* %v3_16308, align 4
  %v1_1630c = add i32 %v2_16304, 4
  %v2_1630c = inttoptr i32 %v1_1630c to i32*
  %v3_1630c = load i32, i32* %v2_1630c, align 4
  %v1_16310 = add i32 %v2_16304, 16
  %v2_16310 = inttoptr i32 %v1_16310 to i16*
  %v3_16310 = load i16, i16* %v2_16310, align 2
  %v4_16310 = zext i16 %v3_16310 to i32
  %v1_16314 = add i32 %v2_16304, 8
  %v2_16314 = inttoptr i32 %v1_16314 to i32*
  %v3_16314 = load i32, i32* %v2_16314, align 4
  store i32 %v3_16314, i32* %ip.global-to-local, align 4
  %v2_16318 = add i32 %v4_16310, %v3_162fc
  %v2_1631c = or i32 %v3_1630c, %v4_16308
  %v4_1631c = icmp eq i32 %v2_1631c, 0
  store i32 %v2_16318, i32* %v2_162fc, align 4
  %v0_16324 = load i32, i32* %ip.global-to-local, align 4
  %v1_16324 = load i32, i32* @r5, align 4
  %v2_16324 = add i32 %v1_16324, 16
  %v3_16324 = inttoptr i32 %v2_16324 to i32*
  store i32 %v0_16324, i32* %v3_16324, align 4
  br i1 %v4_1631c, label %dec_label_pc_162cc, label %dec_label_pc_1632c

dec_label_pc_1632c:                               ; preds = %dec_label_pc_162fc, %.thread
  %v0_16338 = load i32, i32* @r6, align 4
  %v2_16338 = add i32 %v0_16338, 24
  %v3_16338 = inttoptr i32 %v2_16338 to i32*
  %v4_16338 = load i32, i32* %v3_16338, align 4
  store i32 %v4_16338, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16338)
  %v0_16344 = load i32, i32* @r4, align 4
  ret i32 %v0_16344

; uselistorder directives
  uselistorder i32 %v2_16304, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_16320, { 1, 0 }
  uselistorder i32 %v6_162cc, { 1, 0 }
  uselistorder i32 %v0_162cc, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_162fc, { 1, 0 }
}

define i32 @function_16358(i32 %arg1) local_unnamed_addr {
dec_label_pc_16358:
  %v0_16358 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16358, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16358
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16358, %bb
  %v10_16364 = phi i32 [ %arg1, %dec_label_pc_16358 ], [ 0, %bb ]
  ret i32 %v10_16364

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_16368(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16368:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_16368 = load i32, i32* @r4, align 4
  %v6_16368 = load i32, i32* @r5, align 4
  %v9_16368 = load i32, i32* @r6, align 4
  %v12_16368 = load i32, i32* @r7, align 4
  %v15_16368 = load i32, i32* @r8, align 4
  %v18_16368 = load i32, i32* @sb, align 4
  %v21_16368 = load i32, i32* @sl, align 4
  %v24_16368 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1636c = icmp eq i32* %arg1, null
  store i1 %v2_1636c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_1636c, label %dec_label_pc_1667c, label %dec_label_pc_16384

dec_label_pc_16384:                               ; preds = %dec_label_pc_16368
  %v1_16384 = urem i32 %arg3, 256
  store i32 %v1_16384, i32* @sb, align 4
  %v1_16388 = udiv i32 %arg3, 256
  %v3_1638c = urem i32 %v1_16388, 256
  %v3_16390 = mul nuw nsw i32 %v1_16384, 4
  %v1_16398 = or i32 %v3_16390, 1
  %v1_163a4 = and i32 %arg3, 131072
  %v1_163a8 = add nsw i32 %v1_16384, -1
  %v1_163b4 = and i32 %arg3, 262144
  store i32 %v1_163b4, i32* %r2.global-to-local, align 4
  %v1_163b8 = and i32 %arg3, 65536
  store i32 %v1_163b8, i32* %r3.global-to-local, align 4
  store i32 %v1_163b8, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_163c8 = add i32 %arg4, 1
  store i32 %v1_163c8, i32* @sl, align 4
  %v2_16548 = inttoptr i32 %arg2 to i32*
  %v2_16558 = icmp eq i32 %v1_163a4, 0
  %v2_165b0 = icmp eq i32 %v1_163b4, 0
  br label %dec_label_pc_163cc

dec_label_pc_163cc:                               ; preds = %dec_label_pc_163cc.backedge, %dec_label_pc_16384
  %v2_163e8 = phi i32 [ %v0_163cc.pre, %dec_label_pc_163cc.backedge ], [ %tmp, %dec_label_pc_16384 ]
  %v1_163cc = add i32 %v2_163e8, 4
  %v2_163cc = inttoptr i32 %v1_163cc to i32*
  %v3_163cc = load i32, i32* %v2_163cc, align 4
  store i32 %v3_163cc, i32* %r3.global-to-local, align 4
  %v2_163d0 = icmp eq i32 %v3_163cc, 0
  store i1 %v2_163d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163d0, label %dec_label_pc_163d8, label %dec_label_pc_16420

dec_label_pc_163d8:                               ; preds = %dec_label_pc_163cc
  %v1_163d8 = add i32 %v2_163e8, 16
  %v2_163d8 = inttoptr i32 %v1_163d8 to i32*
  %v3_163d8 = load i32, i32* %v2_163d8, align 4
  store i32 %v3_163d8, i32* %r3.global-to-local, align 4
  %v2_163dc = icmp eq i32 %v3_163d8, 0
  store i1 %v2_163dc, i1* %cpsr_z.global-to-local, align 1
  %v1_163e0 = add i32 %v2_163e8, 8
  %v2_163e0 = inttoptr i32 %v1_163e0 to i32*
  %v3_163e0 = load i32, i32* %v2_163e0, align 4
  store i32 %v3_163e0, i32* %r3.global-to-local, align 4
  br i1 %v2_163dc, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_163d8
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_163d8, align 4
  %v0_163ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_163d8, %bb
  %v0_163ec = phi i32 [ %v0_163ec.pre, %bb ], [ %v3_163e0, %dec_label_pc_163d8 ]
  %v2_163ec = icmp eq i32 %v0_163ec, 0
  store i1 %v2_163ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163ec, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_16398, i32* %r3.global-to-local, align 4
  %v2_163f4 = load i32, i32* @r5, align 4
  %v3_163f4 = add i32 %v2_163f4, 8
  %v4_163f4 = inttoptr i32 %v3_163f4 to i32*
  store i32 %v1_16398, i32* %v4_163f4, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_163f8 = load i32, i32* @r5, align 4
  %v1_163f8 = add i32 %v0_163f8, 16
  %v2_163f8 = inttoptr i32 %v1_163f8 to i32*
  %v3_163f8 = load i32, i32* %v2_163f8, align 4
  store i32 %v3_163f8, i32* %r0.global-to-local, align 4
  %v1_163fc = add i32 %v0_163f8, 8
  %v2_163fc = inttoptr i32 %v1_163fc to i32*
  %v3_163fc = load i32, i32* %v2_163fc, align 4
  store i32 %v3_163fc, i32* %r3.global-to-local, align 4
  %v2_16400 = add i32 %v3_163fc, %v3_163f8
  store i32 %v2_16400, i32* @r0, align 4
  %v0_16404 = call i32 @function_13b0c()
  store i32 %v0_16404, i32* %r0.global-to-local, align 4
  %v2_16408 = icmp eq i32 %v0_16404, 0
  store i1 %v2_16408, i1* %cpsr_z.global-to-local, align 1
  %v1_1640c = load i32, i32* @r5, align 4
  %v2_1640c = add i32 %v1_1640c, 4
  %v3_1640c = inttoptr i32 %v2_1640c to i32*
  store i32 %v0_16404, i32* %v3_1640c, align 4
  br i1 %v2_16408, label %dec_label_pc_1667c, label %dec_label_pc_16414

dec_label_pc_16414:                               ; preds = %.thread
  %v0_16414 = load i32, i32* @r5, align 4
  %v1_16414 = add i32 %v0_16414, 20
  %v2_16414 = inttoptr i32 %v1_16414 to i32*
  %v3_16414 = load i32, i32* %v2_16414, align 4
  %v1_16418 = or i32 %v3_16414, 1
  store i32 %v1_16418, i32* %r3.global-to-local, align 4
  store i32 %v1_16418, i32* %v2_16414, align 4
  %v0_16420.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16420

dec_label_pc_16420:                               ; preds = %dec_label_pc_163cc, %dec_label_pc_16414
  %v1_16428 = phi i32 [ %v2_163e8, %dec_label_pc_163cc ], [ %v0_16420.pre, %dec_label_pc_16414 ]
  %v1_16420 = add i32 %v1_16428, 4
  %v2_16420 = inttoptr i32 %v1_16420 to i32*
  %v3_16420 = load i32, i32* %v2_16420, align 4
  store i32 %v3_16420, i32* %r2.global-to-local, align 4
  %v4_16420 = add i32 %v1_16428, 8
  %v5_16420 = inttoptr i32 %v4_16420 to i32*
  %v6_16420 = load i32, i32* %v5_16420, align 4
  %v2_16424 = add i32 %v6_16420, %v3_16420
  store i32 %v2_16424, i32* %r3.global-to-local, align 4
  %v2_16428 = add i32 %v1_16428, 12
  %v3_16428 = inttoptr i32 %v2_16428 to i32*
  store i32 %v2_16424, i32* %v3_16428, align 4
  %v0_1642c = load i32, i32* @fp, align 4
  store i32 %v0_1642c, i32* @r6, align 4
  br label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %dec_label_pc_164bc, %dec_label_pc_164a8, %dec_label_pc_16420
  %v0_16438 = phi i32 [ %v0_1642c, %dec_label_pc_16420 ], [ %v1_164a8, %dec_label_pc_164a8 ], [ %v0_16438.pre.pre, %dec_label_pc_164bc ]
  %v0_16430 = load i32, i32* @r5, align 4
  %v1_16430 = add i32 %v0_16430, 12
  store i32 %v1_16430, i32* %r0.global-to-local, align 4
  %v1_16434 = inttoptr i32 %v1_16430 to i32*
  %v2_16434 = load i32, i32* %v1_16434, align 4
  store i32 %v2_16434, i32* %r0.global-to-local, align 4
  %v3_16434 = add i32 %v0_16430, 16
  %v4_16434 = inttoptr i32 %v3_16434 to i32*
  %v5_16434 = load i32, i32* %v4_16434, align 4
  %v2_16438 = add i32 %v2_16434, %v0_16438
  store i32 %v2_16438, i32* %r0.global-to-local, align 4
  %v2_1643c = sub i32 %v5_16434, %v0_16438
  %v1_16440 = inttoptr i32 %v0_16430 to i32*
  %v2_16440 = load i32, i32* %v1_16440, align 4
  store i32 %v2_16440, i32* %r2.global-to-local, align 4
  %v3_16444 = call i32 @function_16e64(i32 %v2_16438, i32 %v2_1643c, i32 %v2_16440)
  store i32 %v3_16444, i32* %r0.global-to-local, align 4
  store i32 %v3_16444, i32* %r4.global-to-local, align 4
  %v2_16448 = icmp eq i32 %v3_16444, 0
  store i1 %v2_16448, i1* %cpsr_z.global-to-local, align 1
  %v0_16450 = load i32, i32* @r5, align 4
  %v1_16450 = add i32 %v0_16450, 12
  br i1 %v2_16448, label %dec_label_pc_16450, label %dec_label_pc_16468

dec_label_pc_16450:                               ; preds = %dec_label_pc_16430
  store i32 %v1_16450, i32* %r0.global-to-local, align 4
  %v1_16454 = inttoptr i32 %v1_16450 to i32*
  %v2_16454 = load i32, i32* %v1_16454, align 4
  store i32 %v2_16454, i32* %r0.global-to-local, align 4
  %v3_16454 = add i32 %v0_16450, 16
  %v4_16454 = inttoptr i32 %v3_16454 to i32*
  %v5_16454 = load i32, i32* %v4_16454, align 4
  store i32 %v5_16454, i32* @r2, align 4
  %v2_1645c = inttoptr i32 %v2_16454 to i8*
  %v3_1645c = call i32 @function_13530(i8* %v2_1645c, i32 0)
  store i32 %v3_1645c, i32* %r0.global-to-local, align 4
  %v0_16460 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16680

dec_label_pc_16468:                               ; preds = %dec_label_pc_16430
  %v2_16468 = inttoptr i32 %v1_16450 to i32*
  %v3_16468 = load i32, i32* %v2_16468, align 4
  store i32 %v3_16468, i32* @r4, align 4
  %v1_1646c = load i32, i32* @r6, align 4
  %v2_1646c = add i32 %v1_1646c, %v3_16468
  store i32 %v2_1646c, i32* %r0.global-to-local, align 4
  %v1_16470 = call i32 @function_17910(i32 %v2_1646c)
  %v0_16478 = load i32, i32* @r6, align 4
  %v2_16478 = add i32 %v0_16478, %v1_16470
  store i32 %v2_16478, i32* @r6, align 4
  %v0_1647c = load i32, i32* @r4, align 4
  store i32 %v0_1647c, i32* @r0, align 4
  %v2_16480 = call i32 @function_17b5c(i32 %v0_1647c, i32 10)
  store i32 %v2_16480, i32* %r0.global-to-local, align 4
  %v2_16484 = icmp eq i32 %v2_16480, 0
  store i1 %v2_16484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16484, label %dec_label_pc_164b0, label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %dec_label_pc_16468
  %v1_1648c = inttoptr i32 %v2_16480 to i8*
  %v2_1648c = load i8, i8* %v1_1648c, align 1
  %v3_1648c = zext i8 %v2_1648c to i32
  %v1_16490 = add nuw nsw i32 %v3_1648c, 255
  %v1_16494 = urem i32 %v1_16490, 256
  store i32 %v1_16494, i32* %r3.global-to-local, align 4
  %v7_16498 = icmp eq i32 %v1_16494, 92
  store i1 %v7_16498, i1* %cpsr_z.global-to-local, align 1
  %v1_1649c = trunc i32 %v1_16490 to i8
  store i8 %v1_1649c, i8* %v1_1648c, align 1
  %v0_164a0 = load i32, i32* @r6, align 4
  %v1_164a0 = add i32 %v0_164a0, -1
  store i32 %v1_164a0, i32* @r6, align 4
  %v0_164a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_164a4, label %dec_label_pc_164a8, label %dec_label_pc_16534

dec_label_pc_164a8:                               ; preds = %dec_label_pc_1648c
  %v1_164a8 = add i32 %v0_164a0, -2
  store i32 %v1_164a8, i32* @r6, align 4
  br label %dec_label_pc_16430

dec_label_pc_164b0:                               ; preds = %dec_label_pc_16468
  %v0_164b0 = load i32, i32* @r5, align 4
  %v1_164b0 = add i32 %v0_164b0, 20
  %v2_164b0 = inttoptr i32 %v1_164b0 to i32*
  %v3_164b0 = load i32, i32* %v2_164b0, align 4
  store i32 %v3_164b0, i32* %r3.global-to-local, align 4
  %v2_164b4 = icmp eq i32 %v3_164b0, 0
  store i1 %v2_164b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164b4, label %dec_label_pc_164ec, label %dec_label_pc_164bc

dec_label_pc_164bc:                               ; preds = %dec_label_pc_164b0
  %v1_164bc = add i32 %v0_164b0, 16
  %v2_164bc = inttoptr i32 %v1_164bc to i32*
  %v3_164bc = load i32, i32* %v2_164bc, align 4
  store i32 %v3_164bc, i32* %r3.global-to-local, align 4
  %v1_164c0 = add i32 %v0_164b0, 8
  %v2_164c0 = inttoptr i32 %v1_164c0 to i32*
  %v3_164c0 = load i32, i32* %v2_164c0, align 4
  %v1_164c4 = add i32 %v3_164bc, 4096
  store i32 %v1_164c4, i32* %r3.global-to-local, align 4
  %v2_164c8 = add i32 %v3_164c0, %v1_164c4
  store i32 %v1_164c4, i32* %v2_164bc, align 4
  %v0_164d0 = load i32, i32* @r5, align 4
  %v1_164d0 = add i32 %v0_164d0, 4
  %v2_164d0 = inttoptr i32 %v1_164d0 to i32*
  %v3_164d0 = load i32, i32* %v2_164d0, align 4
  store i32 %v3_164d0, i32* %r0.global-to-local, align 4
  %v4_164d4 = inttoptr i32 %v3_164d0 to i32*
  %v5_164d4 = call i32 @function_14560(i32* %v4_164d4, i32 %v2_164c8, i32 %v2_16440, i32 %v1_164c4)
  store i32 %v5_164d4, i32* %r0.global-to-local, align 4
  %v0_164d8 = load i32, i32* @r5, align 4
  %v1_164d8 = add i32 %v0_164d8, 8
  %v2_164d8 = inttoptr i32 %v1_164d8 to i32*
  %v3_164d8 = load i32, i32* %v2_164d8, align 4
  %v2_164dc = add i32 %v3_164d8, %v5_164d4
  store i32 %v2_164dc, i32* %r3.global-to-local, align 4
  %v2_164e0 = add i32 %v0_164d8, 12
  %v3_164e0 = inttoptr i32 %v2_164e0 to i32*
  store i32 %v2_164dc, i32* %v3_164e0, align 4
  %v1_164e4 = load i32, i32* @r5, align 4
  %v2_164e4 = add i32 %v1_164e4, 4
  %v3_164e4 = inttoptr i32 %v2_164e4 to i32*
  store i32 %v5_164d4, i32* %v3_164e4, align 4
  %v0_16438.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16430

dec_label_pc_164ec:                               ; preds = %dec_label_pc_164b0, %.dec_label_pc_164ec_crit_edge
  %v0_164ec = phi i32 [ %v0_164ec.pre, %.dec_label_pc_164ec_crit_edge ], [ %v0_164b0, %dec_label_pc_164b0 ]
  %v1_164ec = inttoptr i32 %v0_164ec to i32*
  %v2_164ec = load i32, i32* %v1_164ec, align 4
  %v1_164f0 = add i32 %v2_164ec, 52
  %v2_164f0 = inttoptr i32 %v1_164f0 to i32*
  %v3_164f0 = load i32, i32* %v2_164f0, align 4
  store i32 %v3_164f0, i32* %r3.global-to-local, align 4
  %v2_164f4 = icmp eq i32 %v3_164f0, 0
  store i1 %v2_164f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164f4, label %dec_label_pc_16520, label %dec_label_pc_164fc

dec_label_pc_164fc:                               ; preds = %dec_label_pc_164ec
  %v1_164fc = add i32 %v2_164ec, 16
  %v2_164fc = inttoptr i32 %v1_164fc to i32*
  %v3_164fc = load i32, i32* %v2_164fc, align 4
  store i32 %v3_164fc, i32* %r2.global-to-local, align 4
  %v1_16500 = add i32 %v2_164ec, 24
  %v2_16500 = inttoptr i32 %v1_16500 to i32*
  %v3_16500 = load i32, i32* %v2_16500, align 4
  store i32 %v3_16500, i32* %r3.global-to-local, align 4
  %v3_16504 = icmp ult i32 %v3_164fc, %v3_16500
  %v9_16504 = icmp eq i32 %v3_164fc, %v3_16500
  store i1 %v9_16504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16504, label %dec_label_pc_16528thread-pre-split, label %dec_label_pc_16514

dec_label_pc_16514:                               ; preds = %dec_label_pc_164fc
  store i32 %v2_164ec, i32* %r0.global-to-local, align 4
  %v1_16518 = inttoptr i32 %v2_164ec to i16*
  %v2_16518 = call i32 @function_172b4(i16* %v1_16518)
  store i32 %v2_16518, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16528

dec_label_pc_16520:                               ; preds = %dec_label_pc_164ec
  store i32 %v2_164ec, i32* %r0.global-to-local, align 4
  %v1_16524 = call i32 @function_16d88(i32 %v2_164ec)
  store i32 %v1_16524, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16528

dec_label_pc_16528thread-pre-split:               ; preds = %dec_label_pc_164fc
  %v2_16508 = inttoptr i32 %v3_164fc to i8*
  %v3_16508 = load i8, i8* %v2_16508, align 1
  %v4_16508 = zext i8 %v3_16508 to i32
  store i32 %v4_16508, i32* %r0.global-to-local, align 4
  %v6_16508 = add i32 %v3_164fc, 1
  store i32 %v6_16508, i32* %r2.global-to-local, align 4
  store i32 %v6_16508, i32* %v2_164fc, align 4
  %v0_16528.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16528

dec_label_pc_16528:                               ; preds = %dec_label_pc_16528thread-pre-split, %dec_label_pc_16514, %dec_label_pc_16520
  %v1_1652c = phi i32 [ %v0_16528.pr, %dec_label_pc_16528thread-pre-split ], [ %v2_16518, %dec_label_pc_16514 ], [ %v1_16524, %dec_label_pc_16520 ]
  %v7_16528 = icmp eq i32 %v1_1652c, 10
  store i1 %v7_16528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16528, label %dec_label_pc_16534.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_16528
  %v8_1652c = icmp eq i32 %v1_1652c, -1
  store i1 %v8_1652c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1652c, label %dec_label_pc_16534.loopexit, label %.dec_label_pc_164ec_crit_edge

.dec_label_pc_164ec_crit_edge:                    ; preds = %bb68
  %v0_164ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_164ec

dec_label_pc_16534.loopexit:                      ; preds = %bb68, %dec_label_pc_16528
  %v0_16534.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16534

dec_label_pc_16534:                               ; preds = %dec_label_pc_1648c, %dec_label_pc_16534.loopexit
  %v0_16534 = phi i32 [ %v0_16534.pre, %dec_label_pc_16534.loopexit ], [ %v1_164a0, %dec_label_pc_1648c ]
  %v7_16534 = icmp eq i32 %v0_16534, -1
  store i1 %v7_16534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16534, label %dec_label_pc_1667c, label %dec_label_pc_1653c

dec_label_pc_1653c:                               ; preds = %dec_label_pc_16534
  %v0_1653c = load i32, i32* @r5, align 4
  %v1_1653c = add i32 %v0_1653c, 4
  %v2_1653c = inttoptr i32 %v1_1653c to i32*
  %v3_1653c = load i32, i32* %v2_1653c, align 4
  store i32 %v3_1653c, i32* %r0.global-to-local, align 4
  store i32 %v3_16390, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_1653c, i32* %v2_16548, align 4
  %v0_1654c = load i32, i32* @fp, align 4
  %v2_16550 = inttoptr i32 %v3_1653c to i8*
  %v3_16550 = call i32 @function_13530(i8* %v2_16550, i32 %v0_1654c)
  store i32 %v3_16550, i32* %r0.global-to-local, align 4
  store i32 %v1_163a4, i32* %r2.global-to-local, align 4
  store i1 %v2_16558, i1* %cpsr_z.global-to-local, align 1
  %v0_1655c = load i32, i32* @r5, align 4
  %v1_1655c = add i32 %v0_1655c, 12
  %v2_1655c = inttoptr i32 %v1_1655c to i32*
  %v3_1655c = load i32, i32* %v2_1655c, align 4
  store i32 %v3_1655c, i32* @r4, align 4
  br i1 %v2_16558, label %dec_label_pc_16574, label %dec_label_pc_16564

dec_label_pc_16564:                               ; preds = %dec_label_pc_1653c
  store i32 %v3_1655c, i32* @r0, align 4
  %v0_16568 = load i32, i32* @sl, align 4
  %v2_1656c = inttoptr i32 %v3_1655c to i8*
  %v3_1656c = call i32 @function_179d4(i8* %v2_1656c, i32 %v0_16568)
  store i32 %v3_1656c, i32* %r0.global-to-local, align 4
  %v0_16570 = load i32, i32* @r4, align 4
  %v2_16570 = add i32 %v0_16570, %v3_1656c
  store i32 %v2_16570, i32* @r4, align 4
  br label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %dec_label_pc_1653c, %dec_label_pc_16564
  %v0_1664c13 = phi i32 [ %v3_1655c, %dec_label_pc_1653c ], [ %v2_16570, %dec_label_pc_16564 ]
  %v1_16574 = inttoptr i32 %v0_1664c13 to i8*
  %v2_16574 = load i8, i8* %v1_16574, align 1
  %v3_16574 = zext i8 %v2_16574 to i32
  store i32 %v3_16574, i32* %r2.global-to-local, align 4
  %v2_16578 = icmp eq i8 %v2_16574, 0
  store i1 %v2_16578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16578, label %dec_label_pc_163cc.backedge, label %dec_label_pc_16580

dec_label_pc_163cc.backedge:                      ; preds = %dec_label_pc_16574, %dec_label_pc_16674, %dec_label_pc_16580
  %v0_163cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_163cc

dec_label_pc_16580:                               ; preds = %dec_label_pc_16574
  %v0_16580 = load i32, i32* @r7, align 4
  %v1_16580 = inttoptr i32 %v0_16580 to i8*
  %v2_16580 = load i8, i8* %v1_16580, align 1
  %v3_16580 = zext i8 %v2_16580 to i32
  store i32 %v3_16580, i32* %r3.global-to-local, align 4
  %v9_16584 = icmp eq i8 %v2_16580, %v2_16574
  store i1 %v9_16584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16584, label %dec_label_pc_163cc.backedge, label %dec_label_pc_1664c.preheader

dec_label_pc_1664c.preheader:                     ; preds = %dec_label_pc_16580
  %v1_16588 = load i32, i32* @fp, align 4
  store i32 %v1_16588, i32* @r6, align 4
  %v2_1664c15 = load i8, i8* %v1_16574, align 1
  %v3_1664c16 = zext i8 %v2_1664c15 to i32
  store i32 %v3_1664c16, i32* %r2.global-to-local, align 4
  %v2_1665017 = icmp eq i8 %v2_1664c15, 0
  store i1 %v2_1665017, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1665017, label %dec_label_pc_16668, label %dec_label_pc_16658.preheader

dec_label_pc_16658.preheader:                     ; preds = %dec_label_pc_1664c.preheader
  %v2_1665882 = load i8, i8* %v1_16580, align 1
  %v3_1665883 = zext i8 %v2_1665882 to i32
  store i32 %v3_1665883, i32* %r3.global-to-local, align 4
  %v9_1665c86 = icmp eq i8 %v2_1665882, %v2_1664c15
  store i1 %v9_1665c86, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1665c86, label %dec_label_pc_16668, label %bb74

dec_label_pc_16594:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_16598 = load i32, i32* %v2_16548, align 4
  store i32 %v2_16598, i32* %r3.global-to-local, align 4
  store i32 %v1_163a8, i32* %r2.global-to-local, align 4
  %v9_165a0 = icmp eq i32 %v2_165a488, %v1_163a8
  store i1 %v9_165a0, i1* %cpsr_z.global-to-local, align 1
  %v5_165a4 = mul i32 %v2_165a488, 4
  %v6_165a4 = add i32 %v2_16598, %v5_165a4
  %v7_165a4 = inttoptr i32 %v6_165a4 to i32*
  store i32 %v0_165a487, i32* %v7_165a4, align 4
  br i1 %v9_165a0, label %dec_label_pc_165ac, label %dec_label_pc_165b8

dec_label_pc_165ac:                               ; preds = %dec_label_pc_16594
  store i32 %v1_163b4, i32* %r3.global-to-local, align 4
  store i1 %v2_165b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_165b0, label %dec_label_pc_165b8, label %dec_label_pc_165d8

dec_label_pc_165b8:                               ; preds = %dec_label_pc_165ac, %dec_label_pc_16594
  %v0_165b8 = load i32, i32* @r7, align 4
  %v1_165b8 = inttoptr i32 %v0_165b8 to i8*
  %v2_165b8 = load i8, i8* %v1_165b8, align 1
  %v3_165b8 = zext i8 %v2_165b8 to i32
  store i32 %v3_165b8, i32* %r3.global-to-local, align 4
  %v2_165bc = icmp eq i8 %v2_165b8, 0
  store i1 %v2_165bc, i1* %cpsr_z.global-to-local, align 1
  %v0_165c0 = load i32, i32* @r4, align 4
  store i32 %v0_165c0, i32* @r0, align 4
  %v1_165c4 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_165bc, i32 %v1_165c4, i32 %v0_165b8
  store i32 %storemerge, i32* @r1, align 4
  %v0_165cc = call i32 @function_17990()
  store i32 %v0_165cc, i32* %r0.global-to-local, align 4
  %v0_165d0 = load i32, i32* @r4, align 4
  %v2_165d0 = add i32 %v0_165d0, %v0_165cc
  store i32 %v2_165d0, i32* @r4, align 4
  br label %dec_label_pc_16610

dec_label_pc_165d8:                               ; preds = %dec_label_pc_165ac
  %v0_165d8 = load i32, i32* @r4, align 4
  store i32 %v0_165d8, i32* @r0, align 4
  %v0_165dc = load i32, i32* @r7, align 4
  %v1_165dc = inttoptr i32 %v0_165dc to i8*
  %v2_165dc = load i8, i8* %v1_165dc, align 1
  %v3_165dc = zext i8 %v2_165dc to i32
  %v5_165e0 = call i32 @function_17a70(i32 %v0_165d8, i32 %v3_165dc, i32 %v1_163a8, i32 %v1_163b4)
  store i32 %v5_165e0, i32* %r0.global-to-local, align 4
  store i32 %v1_163a4, i32* %r2.global-to-local, align 4
  store i1 %v2_16558, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_165e0, i32* @r4, align 4
  br i1 %v2_16558, label %dec_label_pc_16610, label %dec_label_pc_165fc

dec_label_pc_165f8:                               ; preds = %dec_label_pc_165fc
  %v1_165f8 = add i32 %v0_16610.pre, -1
  store i32 %v1_165f8, i32* @r4, align 4
  br label %dec_label_pc_165fc

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165d8, %dec_label_pc_165f8
  %v0_165fc = phi i32 [ %v1_165f8, %dec_label_pc_165f8 ], [ %v5_165e0, %dec_label_pc_165d8 ]
  %v1_165fc = add i32 %v0_165fc, -1
  %v2_165fc = inttoptr i32 %v1_165fc to i8*
  %v3_165fc = load i8, i8* %v2_165fc, align 1
  %v4_165fc = zext i8 %v3_165fc to i32
  %v0_16600 = load i32, i32* @sl, align 4
  store i32 %v0_16600, i32* @r0, align 4
  %v2_16604 = call i32 @function_17b5c(i32 %v0_16600, i32 %v4_165fc)
  store i32 %v2_16604, i32* %r0.global-to-local, align 4
  %v2_16608 = icmp eq i32 %v2_16604, 0
  store i1 %v2_16608, i1* %cpsr_z.global-to-local, align 1
  %v0_16610.pre = load i32, i32* @r4, align 4
  br i1 %v2_16608, label %dec_label_pc_16610, label %dec_label_pc_165f8

dec_label_pc_16610:                               ; preds = %dec_label_pc_165fc, %dec_label_pc_165d8, %dec_label_pc_165b8
  %v3_1661c = phi i32 [ %v5_165e0, %dec_label_pc_165d8 ], [ %v2_165d0, %dec_label_pc_165b8 ], [ %v0_16610.pre, %dec_label_pc_165fc ]
  %v1_16610 = inttoptr i32 %v3_1661c to i8*
  %v2_16610 = load i8, i8* %v1_16610, align 1
  %v3_16610 = zext i8 %v2_16610 to i32
  store i32 %v3_16610, i32* %r2.global-to-local, align 4
  %v0_16614 = load i32, i32* @r7, align 4
  %v1_16614 = inttoptr i32 %v0_16614 to i8*
  %v2_16614 = load i8, i8* %v1_16614, align 1
  %v3_16614 = zext i8 %v2_16614 to i32
  store i32 %v3_16614, i32* %r3.global-to-local, align 4
  %v9_16618 = icmp eq i8 %v2_16614, %v2_16610
  store i1 %v9_16618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16618, label %bb71, label %dec_label_pc_16624

bb71:                                             ; preds = %dec_label_pc_16610
  %v1_1661c = load i32, i32* @fp, align 4
  %v2_1661c = trunc i32 %v1_1661c to i8
  store i8 %v2_1661c, i8* %v1_16610, align 1
  %v0_16620.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16620.pr, label %bb73, label %.dec_label_pc_16624_crit_edge

.dec_label_pc_16624_crit_edge:                    ; preds = %bb71
  %v0_16624.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %.dec_label_pc_16624_crit_edge, %dec_label_pc_16610
  %v0_16624 = phi i32 [ %v0_16624.pre, %.dec_label_pc_16624_crit_edge ], [ %v3_16610, %dec_label_pc_16610 ]
  %v2_16624 = icmp eq i32 %v0_16624, 0
  store i1 %v2_16624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16624, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_16624
  %v1_16628 = load i32, i32* @fp, align 4
  %v2_16628 = trunc i32 %v1_16628 to i8
  %v3_16628 = load i32, i32* @r4, align 4
  %v4_16628 = inttoptr i32 %v3_16628 to i8*
  store i8 %v2_16628, i8* %v4_16628, align 1
  %v5_16628 = load i32, i32* @r4, align 4
  %v6_16628 = add i32 %v5_16628, 1
  store i32 %v6_16628, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_16624, %bb72
  %v2_1662c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1662c, i32* %r3.global-to-local, align 4
  %v2_16630 = icmp eq i32 %v2_1662c, 0
  store i1 %v2_16630, i1* %cpsr_z.global-to-local, align 1
  %v0_1664c.pre = load i32, i32* @r4, align 4
  br i1 %v2_16630, label %dec_label_pc_16648, label %dec_label_pc_16638

dec_label_pc_16638:                               ; preds = %bb73
  store i32 %v0_1664c.pre, i32* @r0, align 4
  %v0_1663c = load i32, i32* @sl, align 4
  %v2_16640 = inttoptr i32 %v0_1664c.pre to i8*
  %v3_16640 = call i32 @function_179d4(i8* %v2_16640, i32 %v0_1663c)
  store i32 %v3_16640, i32* %r0.global-to-local, align 4
  %v0_16644 = load i32, i32* @r4, align 4
  %v2_16644 = add i32 %v0_16644, %v3_16640
  store i32 %v2_16644, i32* @r4, align 4
  br label %dec_label_pc_16648

dec_label_pc_16648:                               ; preds = %bb73, %dec_label_pc_16638
  %v0_1664c = phi i32 [ %v2_16644, %dec_label_pc_16638 ], [ %v0_1664c.pre, %bb73 ]
  %v0_16648 = load i32, i32* @r6, align 4
  %v1_16648 = add i32 %v0_16648, 1
  store i32 %v1_16648, i32* @r6, align 4
  %v1_1664c = inttoptr i32 %v0_1664c to i8*
  %v2_1664c = load i8, i8* %v1_1664c, align 1
  %v3_1664c = zext i8 %v2_1664c to i32
  store i32 %v3_1664c, i32* %r2.global-to-local, align 4
  %v2_16650 = icmp eq i8 %v2_1664c, 0
  store i1 %v2_16650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16650, label %dec_label_pc_16668, label %dec_label_pc_16648.dec_label_pc_16658_crit_edge

dec_label_pc_16648.dec_label_pc_16658_crit_edge:  ; preds = %dec_label_pc_16648
  %v0_16658.pre = load i32, i32* @r7, align 4
  %v1_16658 = inttoptr i32 %v0_16658.pre to i8*
  %v2_16658 = load i8, i8* %v1_16658, align 1
  %v3_16658 = zext i8 %v2_16658 to i32
  store i32 %v3_16658, i32* %r3.global-to-local, align 4
  %v9_1665c = icmp eq i8 %v2_16658, %v2_1664c
  store i1 %v9_1665c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1665c, label %dec_label_pc_16668, label %bb74

bb74:                                             ; preds = %dec_label_pc_16658.preheader, %dec_label_pc_16648.dec_label_pc_16658_crit_edge
  %v2_165a488 = phi i32 [ %v1_16648, %dec_label_pc_16648.dec_label_pc_16658_crit_edge ], [ %v1_16588, %dec_label_pc_16658.preheader ]
  %v0_165a487 = phi i32 [ %v0_1664c, %dec_label_pc_16648.dec_label_pc_16658_crit_edge ], [ %v0_1664c13, %dec_label_pc_16658.preheader ]
  %v2_16660 = load i32, i32* @sb, align 4
  %v3_16660 = sub i32 %v2_165a488, %v2_16660
  %v5_16660 = xor i32 %v2_16660, %v2_165a488
  %v6_16660 = xor i32 %v3_16660, %v2_165a488
  %v7_16660 = and i32 %v6_16660, %v5_16660
  %v8_16660 = icmp slt i32 %v7_16660, 0
  %v9_16660 = icmp slt i32 %v3_16660, 0
  %v10_16660 = icmp eq i32 %v2_165a488, %v2_16660
  store i1 %v10_16660, i1* %cpsr_z.global-to-local, align 1
  %v2_16664 = xor i1 %v9_16660, %v8_16660
  br i1 %v2_16664, label %dec_label_pc_16594, label %dec_label_pc_16668

dec_label_pc_16668:                               ; preds = %dec_label_pc_16658.preheader, %bb74, %dec_label_pc_16648, %dec_label_pc_16648.dec_label_pc_16658_crit_edge, %dec_label_pc_1664c.preheader
  %v0_1666c = phi i32 [ %v1_16588, %dec_label_pc_1664c.preheader ], [ %v1_16588, %dec_label_pc_16658.preheader ], [ %v2_165a488, %bb74 ], [ %v1_16648, %dec_label_pc_16648 ], [ %v1_16648, %dec_label_pc_16648.dec_label_pc_16658_crit_edge ]
  store i32 %v3_1638c, i32* %r2.global-to-local, align 4
  %v9_1666c = icmp eq i32 %v0_1666c, %v3_1638c
  store i1 %v9_1666c, i1* %cpsr_z.global-to-local, align 1
  %v6_16670 = icmp slt i32 %v0_1666c, %v3_1638c
  br i1 %v6_16670, label %dec_label_pc_16674, label %dec_label_pc_16680

dec_label_pc_16674:                               ; preds = %dec_label_pc_16668
  %v0_16674 = load i32, i32* @r8, align 4
  %v1_16674 = and i32 %v0_16674, 1048576
  %v2_16674 = icmp eq i32 %v1_16674, 0
  store i1 %v2_16674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16674, label %dec_label_pc_163cc.backedge, label %dec_label_pc_1667c

dec_label_pc_1667c:                               ; preds = %dec_label_pc_16674, %dec_label_pc_16534, %.thread, %dec_label_pc_16368
  br label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_16668, %dec_label_pc_16450, %dec_label_pc_1667c
  %v0_16680 = phi i32 [ %v0_16460, %dec_label_pc_16450 ], [ 0, %dec_label_pc_1667c ], [ %v0_1666c, %dec_label_pc_16668 ]
  store i32 %v0_16680, i32* %r0.global-to-local, align 4
  store i32 %v3_16368, i32* @r4, align 4
  store i32 %v6_16368, i32* @r5, align 4
  store i32 %v9_16368, i32* @r6, align 4
  store i32 %v12_16368, i32* @r7, align 4
  store i32 %v15_16368, i32* @r8, align 4
  store i32 %v18_16368, i32* @sb, align 4
  store i32 %v21_16368, i32* @sl, align 4
  store i32 %v24_16368, i32* @fp, align 4
  ret i32 %v0_16680

; uselistorder directives
  uselistorder i32 %v0_16680, { 1, 0 }
  uselistorder i32 %v0_1666c, { 0, 2, 1 }
  uselistorder i32 %v3_16660, { 1, 0 }
  uselistorder i32 %v2_16660, { 1, 0, 2 }
  uselistorder i32 %v2_165a488, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_1665c, { 1, 0 }
  uselistorder i32 %v0_1664c.pre, { 0, 2, 1 }
  uselistorder i32 %v5_165e0, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1665c86, { 1, 0 }
  uselistorder i1 %v9_16584, { 1, 0 }
  uselistorder i32 %v3_1655c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16534, { 1, 0 }
  uselistorder i1 %v8_1652c, { 1, 0 }
  uselistorder i32 %v3_164fc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_164ec, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v5_164d4, { 1, 0, 2 }
  uselistorder i32 %v1_164c4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_164b0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_164a8, { 1, 0 }
  uselistorder i32 %v1_16494, { 1, 0 }
  uselistorder i32 %v1_16490, { 1, 0 }
  uselistorder i32 %v1_16450, { 2, 0, 1 }
  uselistorder i32 %v0_16438, { 1, 0 }
  uselistorder i32 %v1_16428, { 0, 2, 1 }
  uselistorder i1 %v2_16558, { 1, 0, 2, 3 }
  uselistorder i32 %v1_163b4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_163a8, { 2, 1, 0 }
  uselistorder i32 %v3_16390, { 1, 0 }
  uselistorder i32 %v3_1638c, { 2, 1, 0 }
  uselistorder i32 %v1_16384, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 92, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @function_17910, { 1, 0 }
  uselistorder i32* @sl, { 6, 7, 8, 9, 10, 11, 12, 44, 0, 45, 46, 13, 14, 127, 128, 129, 130, 131, 132, 135, 136, 137, 1, 138, 139, 140, 141, 142, 143, 145, 2, 144, 147, 146, 148, 149, 150, 151, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 4, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 116, 117, 119, 120, 121, 124, 122, 123, 125, 126, 134, 133, 5, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 210, 3, 213, 214, 215, 216, 217 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_16680, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16668, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_16648, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165fc, { 1, 0 }
  uselistorder label %dec_label_pc_163cc.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16574, { 1, 0 }
  uselistorder label %dec_label_pc_16534, { 1, 0 }
  uselistorder label %dec_label_pc_16528, { 0, 2, 1 }
  uselistorder label %dec_label_pc_164ec, { 1, 0 }
  uselistorder label %dec_label_pc_16420, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_16690(i32* %arg1) local_unnamed_addr {
dec_label_pc_16690:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_16694 = icmp eq i32* %arg1, null
  br i1 %v2_16694, label %dec_label_pc_166bc, label %dec_label_pc_1669c

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16690
  %v2_1669c = load i32, i32* %arg1, align 4
  %v1_166a0 = inttoptr i32 %v2_1669c to i16*
  %v2_166a0 = call i32 @function_1670c(i16* %v1_166a0)
  %v0_166a4 = load i32, i32* @r4, align 4
  %v1_166a4 = add i32 %v0_166a4, 20
  %v2_166a4 = inttoptr i32 %v1_166a4 to i32*
  %v3_166a4 = load i32, i32* %v2_166a4, align 4
  %v2_166a8 = icmp eq i32 %v3_166a4, 0
  br i1 %v2_166a8, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1669c
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1669c, %bb
  store i32 91828, i32* @lr, align 4
  %v1_166b0 = xor i1 %v2_166a8, true
  call void @__pseudo_cond_branch(i1 %v1_166b0, i32 ptrtoint (i32* @global_var_14b78.50 to i32))
  %v0_166b4 = load i32, i32* @r4, align 4
  store i32 %v0_166b4, i32* @r0, align 4
  %v0_166b8 = call i32 @function_14b78()
  br label %dec_label_pc_166bc

dec_label_pc_166bc:                               ; preds = %dec_label_pc_16690, %bb6
  %v1_166c0 = phi i32 [ 0, %dec_label_pc_16690 ], [ %v0_166b8, %bb6 ]
  ret i32 %v1_166c0

; uselistorder directives
  uselistorder i32* null, { 0, 4, 5, 1, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 7, 25, 26, 27, 28, 29, 3, 30, 31, 32, 35, 33, 34, 48, 36, 9, 37, 38, 39, 40, 41, 42, 43, 44, 45, 8, 46, 47 }
  uselistorder label %dec_label_pc_166bc, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_166c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_166c4:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_166d0 = load i32, i32* @r4, align 4
  store i32 %v3_166d0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_18e94.905 to i32), i32* @r1, align 4
  %v0_166d8 = call i32 @function_168c0()
  store i32 %v0_166d8, i32* %r0.global-to-local, align 4
  store i32 %v0_166d8, i32* @r4, align 4
  %v2_166dc = icmp eq i32 %v0_166d8, 0
  br i1 %v2_166dc, label %bb, label %dec_label_pc_166e8

bb:                                               ; preds = %dec_label_pc_166c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_166e8:                               ; preds = %dec_label_pc_166c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_166f0 = call i32 @function_1442c(i32 1, i32 24)
  store i32 %v2_166f0, i32* %r0.global-to-local, align 4
  %v2_166f4 = icmp eq i32 %v2_166f0, 0
  br i1 %v2_166f4, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_166e8
  %v1_166f8 = load i32, i32* @r4, align 4
  %v3_166f8 = inttoptr i32 %v2_166f0 to i32*
  store i32 %v1_166f8, i32* %v3_166f8, align 4
  %v1_16700.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_166e8, %bb4
  %v1_16700 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_166e8 ], [ %v1_16700.pre, %bb4 ]
  %v2_166fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_166fc, i32* @r4, align 4
  ret i32 %v1_16700

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 0, 4 }
  uselistorder i32 (i32, i32)* @function_1442c, { 36, 34, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 1, 22, 21, 20, 19, 2, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_1670c(i16* %arg1) local_unnamed_addr {
dec_label_pc_1670c:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1670c = load i32, i32* @r4, align 4
  store i32 %v3_1670c, i32* %stack_var_-36, align 4
  %v6_1670c = load i32, i32* @r5, align 4
  %v9_1670c = load i32, i32* @r6, align 4
  %v12_1670c = load i32, i32* @r7, align 4
  %v2_16710 = add i32 %tmp, 52
  %v3_16710 = inttoptr i32 %v2_16710 to i32*
  %v4_16710 = load i32, i32* %v3_16710, align 4
  %v1_16718 = sub i32 1, %v4_16710
  %v2_16718 = icmp ult i32 %v4_16710, 2
  br i1 %v2_16718, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1670c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1670c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_16718, %dec_label_pc_1670c ]
  %v0_16720 = phi i32 [ 0, %bb ], [ %v1_16718, %dec_label_pc_1670c ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_16720 = icmp eq i32 %v0_16720, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 135656, i32* @r6, align 4
  br i1 %v2_16720, label %dec_label_pc_1676c, label %dec_label_pc_16734

dec_label_pc_16734:                               ; preds = %bb18
  %v4_1674c = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_1674c)
  %v0_16760 = load i32, i32* @r6, align 4
  %v2_16760 = add i32 %v0_16760, 16
  %v3_16760 = inttoptr i32 %v2_16760 to i32*
  %v4_16760 = load i32, i32* %v3_16760, align 4
  call void @__pseudo_branch(i32 %v4_16760)
  %v0_1676c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %bb18, %dec_label_pc_16734
  %v1_16774 = phi i32 [ %tmp, %bb18 ], [ %v0_1676c.pre, %dec_label_pc_16734 ]
  %v1_1676c = inttoptr i32 %v1_16774 to i16*
  %v2_1676c = load i16, i16* %v1_1676c, align 2
  %v3_1676c = zext i16 %v2_1676c to i32
  %v1_16770 = and i32 %v3_1676c, 64
  %v2_16770 = icmp eq i32 %v1_16770, 0
  br i1 %v2_16770, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_1676c
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1676c, %bb19
  %storemerge26 = phi i32 [ %v1_16774, %bb19 ], [ %v1_16770, %dec_label_pc_1676c ]
  %v1_16778 = xor i1 %v2_16770, true
  call void @__pseudo_cond_branch(i1 %v1_16778, i32 ptrtoint (i32* @global_var_170a8.910 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_16780 = load i32, i32* @r5, align 4
  %v1_16780 = add i32 %v0_16780, 4
  %v2_16780 = inttoptr i32 %v1_16780 to i32*
  %v3_16780 = load i32, i32* %v2_16780, align 4
  %v1_16784 = call i32 @function_130b4(i32 %v3_16780)
  %v0_1678c = load i32, i32* @r6, align 4
  %v2_16798 = add i32 %v0_1678c, 108
  %v3_16798 = inttoptr i32 %v2_16798 to i32*
  %v4_16798 = load i32, i32* %v3_16798, align 4
  store i32 %v4_16798, i32* @r7, align 4
  %v1_167a0 = load i32, i32* @r5, align 4
  %v2_167a0 = add i32 %v1_167a0, 4
  %v3_167a0 = inttoptr i32 %v2_167a0 to i32*
  store i32 -1, i32* %v3_167a0, align 4
  %v0_167a8 = load i32, i32* @r6, align 4
  %v2_167a8 = add i32 %v0_167a8, 72
  %v3_167a8 = inttoptr i32 %v2_167a8 to i32*
  %v4_167a8 = load i32, i32* %v3_167a8, align 4
  %v1_167b0 = icmp slt i32 %v1_16784, 0
  store i32 %v4_167a8, i32* %stack_var_-80, align 4
  br i1 %v1_167b0, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_167a8)
  %v0_167d8 = load i32, i32* @r6, align 4
  %v2_167d8 = add i32 %v0_167d8, 16
  %v3_167d8 = inttoptr i32 %v2_167d8 to i32*
  %v4_167d8 = load i32, i32* %v3_167d8, align 4
  call void @__pseudo_branch(i32 %v4_167d8)
  %v0_167e8 = load i32, i32* @r6, align 4
  %v2_167e8 = add i32 %v0_167e8, 12
  %v3_167e8 = inttoptr i32 %v2_167e8 to i32*
  %v4_167e8 = load i32, i32* %v3_167e8, align 4
  %v1_167ec = inttoptr i32 %v4_167e8 to i32*
  %v2_167ec = load i32, i32* %v1_167ec, align 4
  %v1_167f4 = add i32 %v2_167ec, 1
  %v2_167f8 = add i32 %v0_167e8, 24
  %v3_167f8 = inttoptr i32 %v2_167f8 to i32*
  %v4_167f8 = load i32, i32* %v3_167f8, align 4
  store i32 %v4_167f8, i32* @r4, align 4
  store i32 %v1_167f4, i32* %v1_167ec, align 4
  call void @__pseudo_branch(i32 %v4_167f8)
  %v0_16810 = load i32, i32* @r5, align 4
  %v1_16810 = inttoptr i32 %v0_16810 to i16*
  %v2_16810 = load i16, i16* %v1_16810, align 2
  %v1_16814 = and i16 %v2_16810, 24576
  %v1_16818 = or i16 %v1_16814, 48
  %v0_1681c = load i32, i32* %sb.global-to-local, align 4
  %v2_1681c = icmp eq i32 %v0_1681c, 0
  store i16 %v1_16818, i16* %v1_16810, align 2
  br i1 %v2_1681c, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_16830 = xor i1 %v2_1681c, true
  call void @__pseudo_cond_branch(i1 %v2_16830, i32 %v4_167f8)
  %v0_16834 = load i32, i32* @r5, align 4
  %v1_16834 = inttoptr i32 %v0_16834 to i16*
  %v2_16834 = load i16, i16* %v1_16834, align 2
  %v1_16838 = and i16 %v2_16834, 16384
  %v2_16838 = icmp eq i16 %v1_16838, 0
  br i1 %v2_16838, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_16840 = xor i1 %v2_16838, true
  call void @__pseudo_cond_branch(i1 %v1_16840, i32 ptrtoint (i32* @global_var_14b78.50 to i32))
  %v2_1684c = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_1684c)
  call void @__pseudo_branch(i32 %v4_167d8)
  %v0_1686c = load i32, i32* @r6, align 4
  %v2_1686c = add i32 %v0_1686c, 48
  %v3_1686c = inttoptr i32 %v2_1686c to i32*
  %v4_1686c = load i32, i32* %v3_1686c, align 4
  %v1_16870 = inttoptr i32 %v4_1686c to i32*
  %v2_16870 = load i32, i32* %v1_16870, align 4
  %v1_16874 = add i32 %v2_16870, 1
  store i32 %v1_16874, i32* %v1_16870, align 4
  call void @__pseudo_branch(i32 %v4_167f8)
  %v0_1688c = call i32 @function_16f20()
  %v0_16890 = load i32, i32* %sl.global-to-local, align 4
  %v2_16898 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16898, i32* @r4, align 4
  store i32 %v6_1670c, i32* @r5, align 4
  store i32 %v9_1670c, i32* @r6, align 4
  store i32 %v12_1670c, i32* @r7, align 4
  ret i32 %v0_16890

; uselistorder directives
  uselistorder i1 %v2_16838, { 1, 0 }
  uselistorder i32 %v4_167f8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_16710, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_130b4, { 34, 29, 33, 32, 8, 31, 30, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 11, 10, 9, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1676c, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_168a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_168a4:
  %v0_168a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_168a4, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_168a4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_168a4, %bb
  %v10_168bc = phi i32 [ %arg1, %dec_label_pc_168a4 ], [ 0, %bb ]
  ret i32 %v10_168bc

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_168c0() local_unnamed_addr {
dec_label_pc_168c0:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_168d0 = call i32 @function_168e0()
  ret i32 %v0_168d0
}

define i32 @function_168e0() local_unnamed_addr {
dec_label_pc_168e0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_168e0 = load i32, i32* @r4, align 4
  store i32 %v3_168e0, i32* %stack_var_-36, align 4
  %v6_168e0 = load i32, i32* @r5, align 4
  %v9_168e0 = load i32, i32* @r6, align 4
  %v18_168e0 = load i32, i32* @sb, align 4
  %v24_168e0 = load i32, i32* @fp, align 4
  %v0_168e4 = load i32, i32* @r1, align 4
  %v1_168e4 = inttoptr i32 %v0_168e4 to i8*
  %v2_168e4 = load i8, i8* %v1_168e4, align 1
  %v3_168e4 = zext i8 %v2_168e4 to i32
  store i32 %v3_168e4, i32* @ip, align 4
  %v7_168ec = icmp eq i8 %v2_168e4, 114
  store i32 135656, i32* @fp, align 4
  %v2_168f4 = ptrtoint i32* %stack_var_-72 to i32
  %v0_168f8 = load i32, i32* @r0, align 4
  store i32 %v0_168f8, i32* @r6, align 4
  %v0_168fc = load i32, i32* @r2, align 4
  store i32 %v0_168fc, i32* @sb, align 4
  %v0_16900 = load i32, i32* @r3, align 4
  store i32 %v0_16900, i32* @r5, align 4
  br i1 %v7_168ec, label %dec_label_pc_1694c, label %dec_label_pc_16908

dec_label_pc_16908:                               ; preds = %dec_label_pc_168e0
  %v7_16908 = icmp eq i8 %v2_168e4, 119
  br i1 %v7_16908, label %bb, label %dec_label_pc_16914

bb:                                               ; preds = %dec_label_pc_16908
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_16950

dec_label_pc_16914:                               ; preds = %dec_label_pc_16908
  %v7_16914 = icmp eq i8 %v2_168e4, 97
  br i1 %v7_16914, label %bb32, label %dec_label_pc_16920

bb32:                                             ; preds = %dec_label_pc_16914
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_16950

dec_label_pc_16920:                               ; preds = %dec_label_pc_16914, %dec_label_pc_169d4, %dec_label_pc_169a8
  %v0_16920 = call i32 @function_134dc()
  store i32 %v0_16920, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_16928 = load i32, i32* @sb, align 4
  %v2_16928 = icmp eq i32 %v0_16928, 0
  %v2_1692c = inttoptr i32 %v0_16920 to i32*
  store i32 22, i32* %v2_1692c, align 4
  br i1 %v2_16928, label %dec_label_pc_16ba0, label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_169f8._crit_edge, %dec_label_pc_16920
  %v0_16934 = load i32, i32* @sb, align 4
  %v1_16934 = inttoptr i32 %v0_16934 to i16*
  %v2_16934 = load i16, i16* %v1_16934, align 2
  %v3_16934 = zext i16 %v2_16934 to i32
  store i32 %v3_16934, i32* %r3.global-to-local, align 4
  %v1_16938 = and i32 %v3_16934, 8192
  %v2_16938 = icmp eq i32 %v1_16938, 0
  br i1 %v2_16938, label %dec_label_pc_16ba0, label %dec_label_pc_16940

dec_label_pc_16940:                               ; preds = %dec_label_pc_16934
  store i32 %v0_16934, i32* @r0, align 4
  %v0_16944 = call i32 @function_14b78()
  store i32 %v0_16944, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ba0

dec_label_pc_1694c:                               ; preds = %dec_label_pc_168e0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16950

dec_label_pc_16950:                               ; preds = %bb, %bb32, %dec_label_pc_1694c
  %v1_16968 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_1694c ]
  %v1_16950 = add i32 %v0_168e4, 1
  %v2_16950 = inttoptr i32 %v1_16950 to i8*
  %v3_16950 = load i8, i8* %v2_16950, align 1
  %v7_16954 = icmp eq i8 %v3_16950, 98
  %v1_16950.v0_168e4 = select i1 %v7_16954, i32 %v1_16950, i32 %v0_168e4
  store i32 %v1_16950.v0_168e4, i32* %r3.global-to-local, align 4
  %v1_16960 = add i32 %v1_16950.v0_168e4, 1
  %v2_16960 = inttoptr i32 %v1_16960 to i8*
  %v3_16960 = load i8, i8* %v2_16960, align 1
  %v4_16960 = zext i8 %v3_16960 to i32
  store i32 %v4_16960, i32* @r3, align 4
  %v7_16964 = icmp eq i8 %v3_16960, 43
  br i1 %v7_16964, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_16950
  store i32 %v1_16968, i32* @r3, align 4
  %v2_1696c = add nuw nsw i32 %v1_16968, 1
  store i32 %v2_1696c, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16950, %bb35
  %v2_16970 = icmp eq i32 %v0_168fc, 0
  br i1 %v2_16970, label %dec_label_pc_16978, label %dec_label_pc_169a0

dec_label_pc_16978:                               ; preds = %.thread3
  store i32 80, i32* @r0, align 4
  %v0_1697c = call i32 @function_13b0c()
  store i32 %v0_1697c, i32* %r0.global-to-local, align 4
  store i32 %v0_1697c, i32* @sb, align 4
  %v3_16980 = icmp eq i32 %v0_1697c, 0
  br i1 %v3_16980, label %dec_label_pc_16ba4, label %dec_label_pc_16988

dec_label_pc_16988:                               ; preds = %dec_label_pc_16978
  %v2_1698c = add i32 %v0_1697c, 8
  %v3_1698c = inttoptr i32 %v2_1698c to i32*
  store i32 0, i32* %v3_1698c, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_16994 = load i32, i32* @sb, align 4
  %v3_16994 = inttoptr i32 %v2_16994 to i16*
  store i16 8192, i16* %v3_16994, align 2
  %v0_16998 = load i32, i32* @sb, align 4
  %v1_16998 = add i32 %v0_16998, 56
  store i32 %v1_16998, i32* @r0, align 4
  %v1_1699c = call i32 @function_16c50(i32 %v1_16998)
  store i32 %v1_1699c, i32* %r0.global-to-local, align 4
  %v0_169a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_169a0

dec_label_pc_169a0:                               ; preds = %.thread3, %dec_label_pc_16988
  %v0_169f8 = phi i32 [ %v0_16900, %.thread3 ], [ %v0_169a0.pre, %dec_label_pc_16988 ]
  %v1_169a0 = icmp slt i32 %v0_169f8, 0
  br i1 %v1_169a0, label %dec_label_pc_169f8, label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_169a0
  %v0_169ac = load i32, i32* @r4, align 4
  %v2_169ac = and i32 %v0_169ac, 131075
  %v1_169b0 = add nuw nsw i32 %v2_169ac, 1
  store i32 %v1_169b0, i32* %r2.global-to-local, align 4
  %v0_169b4 = load i32, i32* @r6, align 4
  %v1_169b4 = add i32 %v0_169b4, 1
  %v2_169b8 = and i32 %v1_169b4, %v1_169b0
  store i32 %v2_169b8, i32* %r3.global-to-local, align 4
  %v9_169bc = icmp eq i32 %v2_169b8, %v1_169b0
  %v1_169c0 = load i32, i32* @sb, align 4
  %v2_169c0 = add i32 %v1_169c0, 4
  %v3_169c0 = inttoptr i32 %v2_169c0 to i32*
  store i32 %v0_169f8, i32* %v3_169c0, align 4
  br i1 %v9_169bc, label %dec_label_pc_169c8, label %dec_label_pc_16920

dec_label_pc_169c8:                               ; preds = %dec_label_pc_169a8
  %v0_169c8 = load i32, i32* @r4, align 4
  %v1_169c8 = load i32, i32* @r6, align 4
  %v2_169c8 = sub i32 -1, %v1_169c8
  %v3_169c8 = and i32 %v0_169c8, %v2_169c8
  store i32 %v3_169c8, i32* @r3, align 4
  %v1_169cc = and i32 %v3_169c8, 1024
  %v2_169cc = icmp eq i32 %v1_169cc, 0
  br i1 %v2_169cc, label %dec_label_pc_169ec, label %dec_label_pc_169d4

dec_label_pc_169d4:                               ; preds = %dec_label_pc_169c8
  %v0_169d4 = load i32, i32* @r5, align 4
  store i32 %v0_169d4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_169e0 = call i32 @function_12ee8(i32 %v0_169d4, i32 4)
  store i32 %v2_169e0, i32* %r0.global-to-local, align 4
  %v2_169e4 = icmp eq i32 %v2_169e0, 0
  br i1 %v2_169e4, label %dec_label_pc_169d4.dec_label_pc_169ec_crit_edge, label %dec_label_pc_16920

dec_label_pc_169d4.dec_label_pc_169ec_crit_edge:  ; preds = %dec_label_pc_169d4
  %v0_169ec.pre = load i32, i32* @r6, align 4
  %v0_169f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_169ec

dec_label_pc_169ec:                               ; preds = %dec_label_pc_169d4.dec_label_pc_169ec_crit_edge, %dec_label_pc_169c8
  %v0_169f0 = phi i32 [ %v0_169f0.pre, %dec_label_pc_169d4.dec_label_pc_169ec_crit_edge ], [ %v0_169c8, %dec_label_pc_169c8 ]
  %v0_169ec = phi i32 [ %v0_169ec.pre, %dec_label_pc_169d4.dec_label_pc_169ec_crit_edge ], [ %v1_169c8, %dec_label_pc_169c8 ]
  %v1_169ec = and i32 %v0_169ec, 131072
  store i32 %v1_169ec, i32* %r3.global-to-local, align 4
  %v2_169f0 = or i32 %v1_169ec, %v0_169f0
  store i32 %v2_169f0, i32* @r4, align 4
  br label %dec_label_pc_16a1c

dec_label_pc_169f8:                               ; preds = %dec_label_pc_169a0
  %v7_169f8 = icmp eq i32 %v0_169f8, -1
  %v0_16a04.pre = load i32, i32* @r4, align 4
  br i1 %v7_169f8, label %dec_label_pc_169f8._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_169f8
  %v2_169fc = or i32 %v0_16a04.pre, 131072
  store i32 %v2_169fc, i32* @r4, align 4
  br label %dec_label_pc_169f8._crit_edge

dec_label_pc_169f8._crit_edge:                    ; preds = %dec_label_pc_169f8, %bb36
  %v0_16a04 = phi i32 [ %v2_169fc, %bb36 ], [ %v0_16a04.pre, %dec_label_pc_169f8 ]
  %v0_16a00 = load i32, i32* @r6, align 4
  store i32 %v0_16a00, i32* %r0.global-to-local, align 4
  store i32 %v0_16a04, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_16a0c = call i32 @function_12cc0(i32 %v0_16a00, i32 %v0_16a04)
  store i32 %v2_16a0c, i32* %r0.global-to-local, align 4
  %v1_16a10 = icmp slt i32 %v2_16a0c, 0
  %v1_16a14 = load i32, i32* @sb, align 4
  %v2_16a14 = add i32 %v1_16a14, 4
  %v3_16a14 = inttoptr i32 %v2_16a14 to i32*
  store i32 %v2_16a0c, i32* %v3_16a14, align 4
  br i1 %v1_16a10, label %dec_label_pc_16934, label %.dec_label_pc_16a1c_crit_edge

.dec_label_pc_16a1c_crit_edge:                    ; preds = %dec_label_pc_169f8._crit_edge
  %v0_16a20.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16a1c

dec_label_pc_16a1c:                               ; preds = %.dec_label_pc_16a1c_crit_edge, %dec_label_pc_169ec
  %v0_16a38 = phi i32 [ %v0_16a20.pre, %.dec_label_pc_16a1c_crit_edge ], [ %v2_169f0, %dec_label_pc_169ec ]
  %v0_16a1c = load i32, i32* @sb, align 4
  %v1_16a1c = inttoptr i32 %v0_16a1c to i16*
  %v2_16a1c = load i16, i16* %v1_16a1c, align 2
  %v3_16a1c = zext i16 %v2_16a1c to i32
  %v1_16a20 = urem i32 %v0_16a38, 4
  %v1_16a24 = and i32 %v0_16a38, 1024
  %v1_16a28 = and i32 %v3_16a1c, 8192
  %v1_16a2c = add nuw nsw i32 %v1_16a20, 1
  %v2_16a30 = or i32 %v1_16a28, %v1_16a24
  store i32 %v2_16a30, i32* %r3.global-to-local, align 4
  %v1_16a34 = xor i32 %v1_16a2c, 3
  store i32 %v1_16a34, i32* %r1.global-to-local, align 4
  %v1_16a38 = and i32 %v0_16a38, 131072
  store i32 %v1_16a38, i32* %r2.global-to-local, align 4
  %v2_16a38 = icmp eq i32 %v1_16a38, 0
  %v1_16a3c = add i32 %v0_16a1c, 4
  %v2_16a3c = inttoptr i32 %v1_16a3c to i32*
  %v3_16a3c = load i32, i32* %v2_16a3c, align 4
  store i32 %v3_16a3c, i32* @r5, align 4
  br i1 %v2_16a38, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_16a1c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_16a1c, %bb37
  %v0_16a48 = phi i32 [ 0, %dec_label_pc_16a1c ], [ 32768, %bb37 ]
  %v4_16a44 = mul nuw nsw i32 %v1_16a34, 16
  %v5_16a44 = or i32 %v2_16a30, %v4_16a44
  store i32 %v5_16a44, i32* %r3.global-to-local, align 4
  %v2_16a48 = or i32 %v0_16a48, %v5_16a44
  store i32 %v2_16a48, i32* %r2.global-to-local, align 4
  %v8_16a4c = icmp eq i32 %v3_16a3c, 2147483647
  %v1_16a50 = trunc i32 %v2_16a48 to i16
  store i16 %v1_16a50, i16* %v1_16a1c, align 2
  br i1 %v8_16a4c, label %dec_label_pc_16a80, label %dec_label_pc_16a58

dec_label_pc_16a58:                               ; preds = %bb38
  %v0_16a58 = call i32 @function_134dc()
  store i32 %v0_16a58, i32* @r4, align 4
  %v0_16a60 = load i32, i32* @r5, align 4
  store i32 %v0_16a60, i32* @r0, align 4
  %v1_16a64 = inttoptr i32 %v0_16a58 to i32*
  %v2_16a64 = load i32, i32* %v1_16a64, align 4
  store i32 %v2_16a64, i32* @r5, align 4
  %v1_16a68 = call i32 @function_17c4c(i32 %v0_16a60)
  store i32 %v1_16a68, i32* %r0.global-to-local, align 4
  %v2_16a6c = icmp eq i32 %v1_16a68, 0
  br i1 %v2_16a6c, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_16a58
  %v1_16a70 = load i32, i32* @sb, align 4
  %v2_16a70 = inttoptr i32 %v1_16a70 to i16*
  %v3_16a70 = load i16, i16* %v2_16a70, align 2
  %v4_16a70 = zext i16 %v3_16a70 to i32
  %v2_16a74 = or i32 %v4_16a70, 256
  store i32 %v2_16a74, i32* %r3.global-to-local, align 4
  %v2_16a78 = trunc i32 %v2_16a74 to i16
  store i16 %v2_16a78, i16* %v2_16a70, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_16a58, %bb39
  %v0_16a7c = load i32, i32* @r5, align 4
  %v1_16a7c = load i32, i32* @r4, align 4
  %v2_16a7c = inttoptr i32 %v1_16a7c to i32*
  store i32 %v0_16a7c, i32* %v2_16a7c, align 4
  br label %dec_label_pc_16a80

dec_label_pc_16a80:                               ; preds = %bb38, %.thread5
  %v0_16a80 = load i32, i32* @sb, align 4
  %v1_16a80 = add i32 %v0_16a80, 8
  %v2_16a80 = inttoptr i32 %v1_16a80 to i32*
  %v3_16a80 = load i32, i32* %v2_16a80, align 4
  store i32 %v3_16a80, i32* %r3.global-to-local, align 4
  %v2_16a84 = icmp eq i32 %v3_16a80, 0
  br i1 %v2_16a84, label %dec_label_pc_16a8c, label %bb40

dec_label_pc_16a8c:                               ; preds = %dec_label_pc_16a80
  store i32 4096, i32* @r0, align 4
  %v0_16a90 = call i32 @function_13b0c()
  store i32 %v0_16a90, i32* %r0.global-to-local, align 4
  %v2_16a94 = icmp eq i32 %v0_16a90, 0
  %v1_16aa4.pre = load i32, i32* @sb, align 4
  br i1 %v2_16a94, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16a8c
  %v2_16a98 = inttoptr i32 %v1_16aa4.pre to i16*
  %v3_16a98 = load i16, i16* %v2_16a98, align 2
  %v4_16a98 = zext i16 %v3_16a98 to i32
  %v2_16a9c = add i32 %v0_16a90, 4096
  store i32 %v2_16a9c, i32* %r2.global-to-local, align 4
  %v2_16aa0 = or i32 %v4_16a98, 16384
  store i32 %v2_16aa0, i32* %r3.global-to-local, align 4
  %v2_16aa4 = add i32 %v1_16aa4.pre, 8
  %v3_16aa4 = inttoptr i32 %v2_16aa4 to i32*
  store i32 %v0_16a90, i32* %v3_16aa4, align 4
  %v1_16aa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16aa8 = load i32, i32* @sb, align 4
  %v3_16aa8 = add i32 %v2_16aa8, 12
  %v4_16aa8 = inttoptr i32 %v3_16aa8 to i32*
  store i32 %v1_16aa8, i32* %v4_16aa8, align 4
  %v1_16aac = load i32, i32* %r3.global-to-local, align 4
  %v2_16aac = trunc i32 %v1_16aac to i16
  %v3_16aac = load i32, i32* @sb, align 4
  %v4_16aac = inttoptr i32 %v3_16aac to i16*
  store i16 %v2_16aac, i16* %v4_16aac, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_16a8c
  %v2_16aa419 = add i32 %v1_16aa4.pre, 8
  %v3_16aa420 = inttoptr i32 %v2_16aa419 to i32*
  store i32 0, i32* %v3_16aa420, align 4
  %v2_16ab0 = load i32, i32* @sb, align 4
  %v3_16ab0 = add i32 %v2_16ab0, 12
  %v4_16ab0 = inttoptr i32 %v3_16ab0 to i32*
  store i32 0, i32* %v4_16ab0, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_16a80, %.thread9
  store i32 56, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_16abc = load i32, i32* @fp, align 4
  %v2_16abc = add i32 %v0_16abc, 56
  %v3_16abc = inttoptr i32 %v2_16abc to i32*
  %v4_16abc = load i32, i32* %v3_16abc, align 4
  store i32 %v4_16abc, i32* %r3.global-to-local, align 4
  %v2_16ac0 = load i32, i32* @sb, align 4
  %v3_16ac0 = add i32 %v2_16ac0, 2
  %v4_16ac0 = inttoptr i32 %v3_16ac0 to i8*
  store i8 0, i8* %v4_16ac0, align 1
  %v0_16ac4 = load i32, i32* @sb, align 4
  %v1_16ac4 = inttoptr i32 %v0_16ac4 to i16*
  %v2_16ac4 = load i16, i16* %v1_16ac4, align 2
  %v3_16ac4 = zext i16 %v2_16ac4 to i32
  store i32 %v3_16ac4, i32* %r2.global-to-local, align 4
  %v0_16ac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ac8 = inttoptr i32 %v0_16ac8 to i32*
  %v2_16ac8 = load i32, i32* %v1_16ac8, align 4
  store i32 %v2_16ac8, i32* %r1.global-to-local, align 4
  %v1_16acc = add i32 %v0_16ac4, 8
  %v2_16acc = inttoptr i32 %v1_16acc to i32*
  %v3_16acc = load i32, i32* %v2_16acc, align 4
  store i32 %v3_16acc, i32* %r3.global-to-local, align 4
  %v1_16ad0 = and i32 %v3_16ac4, 8192
  %v2_16ad0 = icmp eq i32 %v1_16ad0, 0
  %v2_16ad4 = add i32 %v0_16ac4, 20
  %v3_16ad4 = inttoptr i32 %v2_16ad4 to i32*
  store i32 %v3_16acc, i32* %v3_16ad4, align 4
  %v0_16ad8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16ad8 = load i32, i32* @sb, align 4
  %v2_16ad8 = add i32 %v1_16ad8, 44
  %v3_16ad8 = inttoptr i32 %v2_16ad8 to i32*
  store i32 %v0_16ad8, i32* %v3_16ad8, align 4
  %v0_16adc = load i32, i32* %r1.global-to-local, align 4
  %v1_16adc = load i32, i32* @sb, align 4
  %v2_16adc = add i32 %v1_16adc, 52
  %v3_16adc = inttoptr i32 %v2_16adc to i32*
  store i32 %v0_16adc, i32* %v3_16adc, align 4
  %v0_16ae0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ae0 = load i32, i32* @sb, align 4
  %v2_16ae0 = add i32 %v1_16ae0, 24
  %v3_16ae0 = inttoptr i32 %v2_16ae0 to i32*
  store i32 %v0_16ae0, i32* %v3_16ae0, align 4
  %v0_16ae4 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ae4 = load i32, i32* @sb, align 4
  %v2_16ae4 = add i32 %v1_16ae4, 28
  %v3_16ae4 = inttoptr i32 %v2_16ae4 to i32*
  store i32 %v0_16ae4, i32* %v3_16ae4, align 4
  %v0_16ae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ae8 = load i32, i32* @sb, align 4
  %v2_16ae8 = add i32 %v1_16ae8, 16
  %v3_16ae8 = inttoptr i32 %v2_16ae8 to i32*
  store i32 %v0_16ae8, i32* %v3_16ae8, align 4
  br i1 %v2_16ad0, label %dec_label_pc_16ba4, label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_16af4 = load i32, i32* @fp, align 4
  %v2_16af4 = add i32 %v0_16af4, 36
  %v3_16af4 = inttoptr i32 %v2_16af4 to i32*
  %v4_16af4 = load i32, i32* %v3_16af4, align 4
  store i32 %v4_16af4, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_16afc = add i32 %v0_16af4, 108
  %v3_16afc = inttoptr i32 %v2_16afc to i32*
  %v4_16afc = load i32, i32* %v3_16afc, align 4
  store i32 %v4_16afc, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_16b04 = ptrtoint i32* %stack_var_-56 to i32
  %v2_16b08 = add i32 %v0_16af4, 72
  %v3_16b08 = inttoptr i32 %v2_16b08 to i32*
  %v4_16b08 = load i32, i32* %v3_16b08, align 4
  store i32 %v4_16af4, i32* %r1.global-to-local, align 4
  store i32 %v4_16afc, i32* %r2.global-to-local, align 4
  store i32 %v2_16b04, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b08)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_16b24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b24, i32* %r0.global-to-local, align 4
  %v0_16b28 = load i32, i32* @fp, align 4
  %v2_16b28 = add i32 %v0_16b28, 16
  %v3_16b28 = inttoptr i32 %v2_16b28 to i32*
  %v4_16b28 = load i32, i32* %v3_16b28, align 4
  call void @__pseudo_branch(i32 %v4_16b28)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_16b38 = load i32, i32* @fp, align 4
  %v2_16b38 = add i32 %v0_16b38, 96
  %v3_16b38 = inttoptr i32 %v2_16b38 to i32*
  %v4_16b38 = load i32, i32* %v3_16b38, align 4
  store i32 %v4_16b38, i32* %r4.global-to-local, align 4
  %v0_16b3c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16b3c, i32* %r1.global-to-local, align 4
  store i32 %v4_16b38, i32* %r2.global-to-local, align 4
  store i32 %v2_168f4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b08)
  store i32 %v4_16b38, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b28)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_16b60 = load i32, i32* @fp, align 4
  %v2_16b60 = add i32 %v0_16b60, 44
  %v3_16b60 = inttoptr i32 %v2_16b60 to i32*
  %v4_16b60 = load i32, i32* %v3_16b60, align 4
  store i32 %v4_16b60, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_16b68 = inttoptr i32 %v4_16b60 to i32*
  %v2_16b68 = load i32, i32* %v1_16b68, align 4
  store i32 %v2_16b68, i32* %r2.global-to-local, align 4
  store i32 %v2_168f4, i32* %r0.global-to-local, align 4
  %v1_16b70 = load i32, i32* @sb, align 4
  %v2_16b70 = add i32 %v1_16b70, 32
  %v3_16b70 = inttoptr i32 %v2_16b70 to i32*
  store i32 %v2_16b68, i32* %v3_16b70, align 4
  %v0_16b74 = load i32, i32* @fp, align 4
  %v1_16b74 = load i32, i32* %r3.global-to-local, align 4
  %v2_16b74 = add i32 %v1_16b74, %v0_16b74
  %v3_16b74 = inttoptr i32 %v2_16b74 to i32*
  %v4_16b74 = load i32, i32* %v3_16b74, align 4
  store i32 %v4_16b74, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16b7c = load i32, i32* @sb, align 4
  %v1_16b7c = load i32, i32* @ip, align 4
  %v2_16b7c = inttoptr i32 %v1_16b7c to i32*
  store i32 %v0_16b7c, i32* %v2_16b7c, align 4
  call void @__pseudo_branch(i32 %v4_16b74)
  store i32 %v2_16b04, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b74)
  br label %dec_label_pc_16ba4

dec_label_pc_16ba0:                               ; preds = %dec_label_pc_16934, %dec_label_pc_16920, %dec_label_pc_16940
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %bb40, %dec_label_pc_16978, %dec_label_pc_16af0, %dec_label_pc_16ba0
  %v0_16ba4 = load i32, i32* @sb, align 4
  store i32 %v0_16ba4, i32* %r0.global-to-local, align 4
  %v2_16bac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16bac, i32* %r4.global-to-local, align 4
  store i32 %v6_168e0, i32* @r5, align 4
  store i32 %v9_168e0, i32* @r6, align 4
  store i32 %v18_168e0, i32* @sb, align 4
  store i32 %v24_168e0, i32* @fp, align 4
  ret i32 %v0_16ba4

; uselistorder directives
  uselistorder i32 %v1_16aa4.pre, { 2, 1, 0 }
  uselistorder i32 %v0_16a38, { 1, 2, 0 }
  uselistorder i32 %v0_16a04, { 1, 0 }
  uselistorder i32 %v1_169c8, { 1, 0 }
  uselistorder i32 %v0_169c8, { 1, 0 }
  uselistorder i32 %v1_169b0, { 1, 0, 2 }
  uselistorder i32 %v1_16968, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 14, 13, 15, 16, 17, 18 }
  uselistorder i32 16384, { 45, 0, 46, 32, 63, 33, 64, 34, 65, 35, 66, 36, 67, 37, 68, 14, 69, 1, 47, 28, 51, 29, 52, 27, 48, 30, 49, 31, 50, 2, 53, 3, 54, 4, 55, 5, 56, 6, 57, 7, 58, 8, 59, 9, 60, 10, 61, 11, 62, 38, 70, 12, 71, 13, 72, 17, 73, 16, 74, 40, 75, 41, 76, 15, 77, 39, 78, 79, 18, 80, 19, 81, 20, 82, 42, 83, 21, 84, 22, 85, 24, 86, 23, 87, 25, 88, 26, 89, 44, 90, 91, 92, 43, 93 }
  uselistorder i32 4096, { 7, 8, 9, 1, 0, 2, 13, 3, 10, 5, 4, 6, 11, 12 }
  uselistorder i32 32768, { 1, 5, 2, 0, 4, 3 }
  uselistorder i32 (i32, i32)* @function_12cc0, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_12ee8, { 14, 0, 13, 10, 9, 12, 11, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 ()* @function_13b0c, { 70, 69, 68, 4, 3, 2, 0, 1, 51, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 54, 53, 52, 50 }
  uselistorder i32 80, { 6, 3, 4, 5, 1, 2, 9, 7, 8, 10, 0, 11 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @function_14b78, { 10, 9, 5, 4, 3, 2, 0, 8, 7, 6, 1 }
  uselistorder i32* @fp, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 99, 100, 101, 102, 108, 110, 109, 111, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0, 65, 66, 67, 68, 69, 70, 71, 1, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 2, 106, 107 }
  uselistorder i32* @sb, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 115, 116, 117, 118, 119, 120, 121, 122, 127, 130, 128, 129, 131, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 1, 45, 46, 51, 52, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 2, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138 }
  uselistorder label %dec_label_pc_16ba4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16ba0, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a80, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_169f8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_169a0, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16950, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16920, { 1, 2, 0 }
}

define i32 @function_16bb8(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16bb8:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v0_16bb8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16bb8, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_16bb8
  %v1_16bc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_16bc0 = load i32, i32* %r3.global-to-local, align 4
  %v3_16bc0 = and i32 %v2_16bc0, %v1_16bc0
  %v2_16bc4 = trunc i32 %v3_16bc0 to i16
  %v4_16bc4 = inttoptr i32 %v3_16bc0 to i16*
  store i16 %v2_16bc4, i16* %v4_16bc4, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16bb8, %bb
  %v0_16bec = call i32 @function_134dc()
  store i32 %v0_16bec, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_16bf8 = inttoptr i32 %v0_16bec to i32*
  %v2_16bf8 = load i32, i32* %v1_16bf8, align 4
  store i32 %v2_16bf8, i32* @r6, align 4
  %v1_16bfc = call i32 @function_17c4c(i32 0)
  %v2_16c04 = icmp eq i32 %v1_16bfc, 0
  store i32 135656, i32* @r4, align 4
  br i1 %v2_16c04, label %bb23, label %.thread13

bb23:                                             ; preds = %.thread10
  store i32 304, i32* %r2.global-to-local, align 4
  %v5_16c10 = load i16, i16* inttoptr (i32 135960 to i16*), align 8
  %v7_16c10 = zext i16 %v5_16c10 to i32
  %v2_16c14 = xor i32 %v7_16c10, 256
  store i32 %v2_16c14, i32* @r3, align 4
  %v2_16c18 = trunc i32 %v2_16c14 to i16
  store i16 %v2_16c18, i16* inttoptr (i32 135960 to i16*), align 8
  br label %.thread13

.thread13:                                        ; preds = %.thread10, %bb23
  store i32 1, i32* @r0, align 4
  %v1_16c20 = call i32 @function_17c4c(i32 1)
  %v2_16c24 = icmp eq i32 %v1_16c20, 0
  br i1 %v2_16c24, label %bb24, label %.thread17

bb24:                                             ; preds = %.thread13
  %v1_16c2c = load i32, i32* @r4, align 4
  %v3_16c2c = add i32 %v1_16c2c, 304
  store i32 %v3_16c2c, i32* %r2.global-to-local, align 4
  %v2_16c30 = add i32 %v1_16c2c, 384
  %v3_16c30 = inttoptr i32 %v2_16c30 to i16*
  %v4_16c30 = load i16, i16* %v3_16c30, align 2
  %v5_16c30 = zext i16 %v4_16c30 to i32
  %v2_16c34 = xor i32 %v5_16c30, 256
  store i32 %v2_16c34, i32* %r3.global-to-local, align 4
  %v2_16c38 = trunc i32 %v2_16c34 to i16
  store i16 %v2_16c38, i16* %v3_16c30, align 2
  br label %.thread17

.thread17:                                        ; preds = %.thread13, %bb24
  %v0_16c3c = load i32, i32* @r6, align 4
  %v1_16c3c = load i32, i32* @r5, align 4
  %v2_16c3c = inttoptr i32 %v1_16c3c to i32*
  store i32 %v0_16c3c, i32* %v2_16c3c, align 4
  ret i32 %v1_16c20

; uselistorder directives
  uselistorder i32 %v3_16bc0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_17c4c, { 2, 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_16c50(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c50:
  store i32 135656, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_191c0.933 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_16c6c = call i32 @function_135e0()
  ret i32 %v0_16c6c
}

define i32 @function_16d58(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d58:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16d58 = load i32, i32* @r4, align 4
  store i32 %v3_16d58, i32* %stack_var_-8, align 4
  %v1_16d5c = add i32 %arg1, 8
  %v2_16d5c = inttoptr i32 %v1_16d5c to i32*
  %v3_16d5c = load i32, i32* %v2_16d5c, align 4
  %v1_16d60 = add i32 %arg1, 16
  %v2_16d60 = inttoptr i32 %v1_16d60 to i32*
  %v3_16d60 = load i32, i32* %v2_16d60, align 4
  %v9_16d64 = icmp eq i32 %v3_16d60, %v3_16d5c
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_16d64, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_16d58
  store i32 %v3_16d5c, i32* %v2_16d60, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_16d58, %bb
  %v1_16d70 = xor i1 %v9_16d64, true
  call void @__pseudo_cond_branch(i1 %v1_16d70, i32 ptrtoint (i32* @global_var_18038.934 to i32))
  %v0_16d74 = load i32, i32* %r4.global-to-local, align 4
  %v1_16d74 = add i32 %v0_16d74, 8
  %v2_16d74 = inttoptr i32 %v1_16d74 to i32*
  %v3_16d74 = load i32, i32* %v2_16d74, align 4
  %v1_16d78 = add i32 %v0_16d74, 16
  %v2_16d78 = inttoptr i32 %v1_16d78 to i32*
  %v3_16d78 = load i32, i32* %v2_16d78, align 4
  %v2_16d7c = sub i32 %v3_16d78, %v3_16d74
  %v2_16d80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16d80, i32* @r4, align 4
  ret i32 %v2_16d7c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_16d88(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d88:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16d88 = load i32, i32* @r4, align 4
  store i32 %v3_16d88, i32* %stack_var_-16, align 4
  %v6_16d88 = load i32, i32* @r5, align 4
  %v12_16d88 = load i32, i32* @lr, align 4
  %v1_16d8c = add i32 %arg1, 52
  %v2_16d8c = inttoptr i32 %v1_16d8c to i32*
  %v3_16d8c = load i32, i32* %v2_16d8c, align 4
  %v2_16d94 = icmp eq i32 %v3_16d8c, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 135656, i32* %r6.global-to-local, align 4
  br i1 %v2_16d94, label %dec_label_pc_16dcc, label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16d88
  %v1_16da8 = add i32 %arg1, 16
  %v2_16da8 = inttoptr i32 %v1_16da8 to i32*
  %v3_16da8 = load i32, i32* %v2_16da8, align 4
  %v1_16dac = add i32 %arg1, 24
  %v2_16dac = inttoptr i32 %v1_16dac to i32*
  %v3_16dac = load i32, i32* %v2_16dac, align 4
  %v3_16db0 = icmp ult i32 %v3_16da8, %v3_16dac
  br i1 %v3_16db0, label %.thread, label %dec_label_pc_16dc0

.thread:                                          ; preds = %dec_label_pc_16da8
  %v2_16db4 = inttoptr i32 %v3_16da8 to i8*
  %v3_16db4 = load i8, i8* %v2_16db4, align 1
  %v4_16db4 = zext i8 %v3_16db4 to i32
  store i32 %v4_16db4, i32* %r4.global-to-local, align 4
  %v6_16db4 = add i32 %v3_16da8, 1
  store i32 %v6_16db4, i32* %v2_16da8, align 4
  br label %dec_label_pc_16e40

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16da8
  %v1_16dc0 = inttoptr i32 %arg1 to i16*
  %v2_16dc0 = call i32 @function_172b4(i16* %v1_16dc0)
  store i32 %v2_16dc0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16e40

dec_label_pc_16dcc:                               ; preds = %dec_label_pc_16d88
  %v1_16dd0 = add i32 %arg1, 56
  store i32 %v1_16dd0, i32* @r4, align 4
  %v4_16de4 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_16de4)
  %v0_16df8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16df8 = add i32 %v0_16df8, 16
  %v3_16df8 = inttoptr i32 %v2_16df8 to i32*
  %v4_16df8 = load i32, i32* %v3_16df8, align 4
  store i32 93700, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16df8)
  %v0_16e04 = load i32, i32* @r5, align 4
  %v1_16e04 = add i32 %v0_16e04, 16
  %v2_16e04 = inttoptr i32 %v1_16e04 to i32*
  %v3_16e04 = load i32, i32* %v2_16e04, align 4
  %v1_16e08 = add i32 %v0_16e04, 24
  %v2_16e08 = inttoptr i32 %v1_16e08 to i32*
  %v3_16e08 = load i32, i32* %v2_16e08, align 4
  %v3_16e0c = icmp ult i32 %v3_16e04, %v3_16e08
  br i1 %v3_16e0c, label %.thread2, label %dec_label_pc_16e1c

.thread2:                                         ; preds = %dec_label_pc_16dcc
  %v2_16e10 = inttoptr i32 %v3_16e04 to i8*
  %v3_16e10 = load i8, i8* %v2_16e10, align 1
  %v4_16e10 = zext i8 %v3_16e10 to i32
  store i32 %v4_16e10, i32* %r4.global-to-local, align 4
  %v6_16e10 = add i32 %v3_16e04, 1
  store i32 %v6_16e10, i32* %v2_16e04, align 4
  br label %dec_label_pc_16e28

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16dcc
  %v1_16e20 = inttoptr i32 %v0_16e04 to i16*
  %v2_16e20 = call i32 @function_172b4(i16* %v1_16e20)
  store i32 %v2_16e20, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %.thread2, %dec_label_pc_16e1c
  %v0_16e34 = load i32, i32* %r6.global-to-local, align 4
  %v2_16e34 = add i32 %v0_16e34, 24
  %v3_16e34 = inttoptr i32 %v2_16e34 to i32*
  %v4_16e34 = load i32, i32* %v3_16e34, align 4
  store i32 %v4_16e34, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_16e34)
  br label %dec_label_pc_16e40

dec_label_pc_16e40:                               ; preds = %.thread, %dec_label_pc_16dc0, %dec_label_pc_16e28
  %v0_16e40 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16e48, i32* @r4, align 4
  store i32 %v6_16d88, i32* @r5, align 4
  store i32 %v12_16d88, i32* @lr, align 4
  ret i32 %v0_16e40

; uselistorder directives
  uselistorder i32 %v3_16e04, { 1, 0, 2 }
  uselistorder i32 %v3_16da8, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 5, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_16e40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e28, { 1, 0 }
}

define i32 @function_16e54(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e54:
  %v0_16e54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e54, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16e54
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16e54, %bb
  %v10_16e60 = phi i32 [ %arg1, %dec_label_pc_16e54 ], [ 0, %bb ]
  ret i32 %v10_16e60

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_16e64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16e64:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_16e64 = load i32, i32* @r4, align 4
  store i32 %v3_16e64, i32* %stack_var_-28, align 4
  %v6_16e64 = load i32, i32* @r5, align 4
  %v9_16e64 = load i32, i32* @r6, align 4
  %v12_16e64 = load i32, i32* @r7, align 4
  %v21_16e64 = load i32, i32* @lr, align 4
  %v1_16e68 = add i32 %arg3, 52
  %v2_16e68 = inttoptr i32 %v1_16e68 to i32*
  %v3_16e68 = load i32, i32* %v2_16e68, align 4
  %v1_16e70 = sub i32 1, %v3_16e68
  %v2_16e70 = icmp ult i32 %v3_16e68, 2
  br i1 %v2_16e70, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_16e64
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16e64, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_16e70, %dec_label_pc_16e64 ]
  %v0_16e78 = phi i32 [ 0, %bb ], [ %v1_16e70, %dec_label_pc_16e64 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_16e78 = icmp eq i32 %v0_16e78, 0
  store i32 135656, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_16e78, label %dec_label_pc_16ecc, label %dec_label_pc_16e94

dec_label_pc_16e94:                               ; preds = %bb16
  %v1_16e98 = add i32 %arg3, 56
  store i32 %v1_16e98, i32* @r4, align 4
  %v4_16eac = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_16eac)
  %v0_16ec0 = load i32, i32* @r5, align 4
  %v2_16ec0 = add i32 %v0_16ec0, 16
  %v3_16ec0 = inttoptr i32 %v2_16ec0 to i32*
  %v4_16ec0 = load i32, i32* %v3_16ec0, align 4
  store i32 %v4_16ec0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16ecc.944 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16ec0)
  %v0_16ecc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_16ed0.pre = load i32, i32* @r7, align 4
  %v0_16ed4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16ecc

dec_label_pc_16ecc:                               ; preds = %bb16, %dec_label_pc_16e94
  %v0_16ed4 = phi i32 [ %arg3, %bb16 ], [ %v0_16ed4.pre, %dec_label_pc_16e94 ]
  %v0_16ed0 = phi i32 [ %arg2, %bb16 ], [ %v0_16ed0.pre, %dec_label_pc_16e94 ]
  %v0_16ecc = phi i32 [ %arg1, %bb16 ], [ %v0_16ecc.pre, %dec_label_pc_16e94 ]
  %v3_16ed8 = inttoptr i32 %v0_16ecc to i8*
  %v4_16ed8 = call i32 @function_173e0(i8* %v3_16ed8, i32 %v0_16ed0, i32 %v0_16ed4)
  %v0_16edc = load i32, i32* %sl.global-to-local, align 4
  %v2_16edc = icmp eq i32 %v0_16edc, 0
  store i32 %v4_16ed8, i32* %r4.global-to-local, align 4
  br i1 %v2_16edc, label %dec_label_pc_16ecc..thread3_crit_edge, label %bb17

dec_label_pc_16ecc..thread3_crit_edge:            ; preds = %dec_label_pc_16ecc
  %v0_16ef8.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_16ecc
  %v1_16ef0 = load i32, i32* @r5, align 4
  %v3_16ef0 = add i32 %v1_16ef0, 24
  %v4_16ef0 = inttoptr i32 %v3_16ef0 to i32*
  %v5_16ef0 = load i32, i32* %v4_16ef0, align 4
  store i32 %v5_16ef0, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16ecc..thread3_crit_edge, %bb17
  %v0_16ef8 = phi i32 [ %v0_16ef8.pre, %dec_label_pc_16ecc..thread3_crit_edge ], [ %v5_16ef0, %bb17 ]
  %v2_16ef8 = xor i1 %v2_16edc, true
  call void @__pseudo_cond_branch(i1 %v2_16ef8, i32 %v0_16ef8)
  %v0_16efc = load i32, i32* %r4.global-to-local, align 4
  %v2_16f04 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_16f04, i32* %r4.global-to-local, align 4
  store i32 %v6_16e64, i32* @r5, align 4
  store i32 %v9_16e64, i32* @r6, align 4
  store i32 %v12_16e64, i32* @r7, align 4
  store i32 %v21_16e64, i32* @lr, align 4
  ret i32 %v0_16efc

; uselistorder directives
  uselistorder i32 %v3_16e68, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 52, { 11, 12, 13, 14, 15, 2, 16, 9, 10, 3, 22, 23, 1, 24, 0, 25, 26, 4, 5, 17, 18, 6, 19, 7, 20, 8, 21 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16ecc, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_16f10(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f10:
  %v0_16f10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16f10, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16f10
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16f10, %bb
  %v10_16f1c = phi i32 [ %arg1, %dec_label_pc_16f10 ], [ 0, %bb ]
  ret i32 %v10_16f1c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_16f20() local_unnamed_addr {
dec_label_pc_16f20:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16f20 = load i32, i32* @r4, align 4
  store i32 %v3_16f20, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %r6.global-to-local, align 4
  %v4_16f30 = load i32, i32* inttoptr (i32 135692 to i32*), align 4
  store i32 %v4_16f30, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_16f38 = load i32, i32* inttoptr (i32 135764 to i32*), align 4
  store i32 %v4_16f38, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_16f44 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  store i32 %v4_16f44, i32* %r7.global-to-local, align 4
  %v2_16f50 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_16f44)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_16f64 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f64 = add i32 %v0_16f64, 16
  %v3_16f64 = inttoptr i32 %v2_16f64 to i32*
  %v4_16f64 = load i32, i32* %v3_16f64, align 4
  store i32 %v4_16f64, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16f64)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_16f74 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f74 = add i32 %v0_16f74, 12
  %v3_16f74 = inttoptr i32 %v2_16f74 to i32*
  %v4_16f74 = load i32, i32* %v3_16f74, align 4
  store i32 %v4_16f74, i32* %r3.global-to-local, align 4
  %v1_16f78 = inttoptr i32 %v4_16f74 to i32*
  %v2_16f78 = load i32, i32* %v1_16f78, align 4
  store i32 %v2_16f78, i32* %r3.global-to-local, align 4
  %v7_16f7c = icmp eq i32 %v2_16f78, 1
  br i1 %v7_16f7c, label %dec_label_pc_16f84, label %dec_label_pc_17044

dec_label_pc_16f84:                               ; preds = %dec_label_pc_16f20
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_16f88 = add i32 %v0_16f74, 48
  %v3_16f88 = inttoptr i32 %v2_16f88 to i32*
  %v4_16f88 = load i32, i32* %v3_16f88, align 4
  store i32 %v4_16f88, i32* %r3.global-to-local, align 4
  %v1_16f8c = inttoptr i32 %v4_16f88 to i32*
  %v2_16f8c = load i32, i32* %v1_16f8c, align 4
  store i32 %v2_16f8c, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_16f8c, 1
  br i1 %tmp30, label %dec_label_pc_17044, label %dec_label_pc_16f98

dec_label_pc_16f98:                               ; preds = %dec_label_pc_16f84
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_16f9c = add i32 %v0_16f74, 96
  %v3_16f9c = inttoptr i32 %v2_16f9c to i32*
  %v4_16f9c = load i32, i32* %v3_16f9c, align 4
  store i32 %v4_16f9c, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16f44)
  call void @__pseudo_branch(i32 %v4_16f64)
  %v0_16fc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_16fc4 = add i32 %v0_16fc4, 44
  %v3_16fc4 = inttoptr i32 %v2_16fc4 to i32*
  %v4_16fc4 = load i32, i32* %v3_16fc4, align 4
  store i32 %v4_16fc4, i32* %r3.global-to-local, align 4
  %v1_16fc8 = inttoptr i32 %v4_16fc4 to i32*
  %v2_16fc8 = load i32, i32* %v1_16fc8, align 4
  store i32 %v2_16fc8, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1701411 = icmp eq i32 %v2_16fc8, 0
  br i1 %v2_1701411, label %dec_label_pc_17020, label %dec_label_pc_16fd8

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16f98, %dec_label_pc_17010
  %v0_16ffc2 = phi i32 [ %v0_17010, %dec_label_pc_17010 ], [ %v2_16fc8, %dec_label_pc_16f98 ]
  %v1_16fd8 = inttoptr i32 %v0_16ffc2 to i16*
  %v2_16fd8 = load i16, i16* %v1_16fd8, align 2
  %v3_16fd8 = zext i16 %v2_16fd8 to i32
  store i32 %v3_16fd8, i32* %r3.global-to-local, align 4
  %v2_16fdc = and i32 %v3_16fd8, 32816
  %v7_16fe0 = icmp eq i32 %v2_16fdc, 48
  %v1_16fe4 = add i32 %v0_16ffc2, 32
  %v2_16fe4 = inttoptr i32 %v1_16fe4 to i32*
  %v3_16fe4 = load i32, i32* %v2_16fe4, align 4
  store i32 %v3_16fe4, i32* %r5.global-to-local, align 4
  br i1 %v7_16fe0, label %dec_label_pc_16ff0, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_16fd8
  store i32 %v0_16ffc2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17010

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_16fd8
  %v0_16ff0 = load i32, i32* %r7.global-to-local, align 4
  %v2_16ff0 = icmp eq i32 %v0_16ff0, 0
  br i1 %v2_16ff0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_16ff0
  %v1_16ff4 = load i32, i32* %r6.global-to-local, align 4
  %v2_16ff4 = load i32, i32* %r8.global-to-local, align 4
  %v3_16ff4 = add i32 %v2_16ff4, %v1_16ff4
  %v4_16ff4 = inttoptr i32 %v3_16ff4 to i32*
  %v5_16ff4 = load i32, i32* %v4_16ff4, align 4
  store i32 %v5_16ff4, i32* %r3.global-to-local, align 4
  %v3_16ff8 = inttoptr i32 %v5_16ff4 to i32*
  store i32 %v3_16fe4, i32* %v3_16ff8, align 4
  %v0_16ffc = load i32, i32* %r4.global-to-local, align 4
  %v1_16ffc = inttoptr i32 %v0_16ffc to i16*
  %v2_16ffc = load i16, i16* %v1_16ffc, align 2
  %v3_16ffc = zext i16 %v2_16ffc to i32
  store i32 %v3_16ffc, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_16ff0
  %v2_16ffc8 = load i16, i16* %v1_16fd8, align 2
  %v3_16ffc9 = zext i16 %v2_16ffc8 to i32
  store i32 %v3_16ffc9, i32* %r3.global-to-local, align 4
  %v3_17000 = add i32 %v0_16ff0, 32
  %v4_17000 = inttoptr i32 %v3_17000 to i32*
  store i32 %v3_16fe4, i32* %v4_17000, align 4
  %v0_17004.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_17004 = phi i32 [ %v3_16ffc, %.thread ], [ %v0_17004.pre, %bb ]
  %v1_17004 = and i32 %v0_17004, 8192
  %v2_17004 = icmp eq i32 %v1_17004, 0
  br i1 %v2_17004, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_1700c = xor i1 %v2_17004, true
  call void @__pseudo_cond_branch(i1 %v1_1700c, i32 ptrtoint (i32* @global_var_14b78.50 to i32))
  %v0_17010.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17010

dec_label_pc_17010:                               ; preds = %.thread21, %bb33
  %v0_17010 = phi i32 [ %v0_17010.pre, %bb33 ], [ %v3_16fe4, %.thread21 ]
  store i32 %v0_17010, i32* %r4.global-to-local, align 4
  %v2_17014 = icmp eq i32 %v0_17010, 0
  br i1 %v2_17014, label %dec_label_pc_17014.dec_label_pc_17020_crit_edge, label %dec_label_pc_16fd8

dec_label_pc_17014.dec_label_pc_17020_crit_edge:  ; preds = %dec_label_pc_17010
  %v0_1702c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17020

dec_label_pc_17020:                               ; preds = %dec_label_pc_17014.dec_label_pc_17020_crit_edge, %dec_label_pc_16f98
  %v0_1702c = phi i32 [ %v0_1702c.pre, %dec_label_pc_17014.dec_label_pc_17020_crit_edge ], [ %v0_16fc4, %dec_label_pc_16f98 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_1702c = add i32 %v0_1702c, 24
  %v3_1702c = inttoptr i32 %v2_1702c to i32*
  %v4_1702c = load i32, i32* %v3_1702c, align 4
  call void @__pseudo_branch(i32 %v4_1702c)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_1703c = load i32, i32* %r6.global-to-local, align 4
  %v2_1703c = add i32 %v0_1703c, 48
  %v3_1703c = inttoptr i32 %v2_1703c to i32*
  %v4_1703c = load i32, i32* %v3_1703c, align 4
  store i32 %v4_1703c, i32* %r3.global-to-local, align 4
  %v0_17040 = load i32, i32* %r4.global-to-local, align 4
  %v2_17040 = inttoptr i32 %v4_1703c to i32*
  store i32 %v0_17040, i32* %v2_17040, align 4
  %v0_17048.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %dec_label_pc_16f20, %dec_label_pc_16f84, %dec_label_pc_17020
  %v0_17048 = phi i32 [ %v0_16f74, %dec_label_pc_16f20 ], [ %v0_16f74, %dec_label_pc_16f84 ], [ %v0_17048.pre, %dec_label_pc_17020 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17048 = add i32 %v0_17048, 12
  %v3_17048 = inttoptr i32 %v2_17048 to i32*
  %v4_17048 = load i32, i32* %v3_17048, align 4
  %v1_1704c = inttoptr i32 %v4_17048 to i32*
  %v2_1704c = load i32, i32* %v1_1704c, align 4
  %v1_17050 = add i32 %v2_1704c, -1
  store i32 %v1_17050, i32* %v1_1704c, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_17064 = load i32, i32* %r6.global-to-local, align 4
  %v2_17064 = add i32 %v0_17064, 24
  %v3_17064 = inttoptr i32 %v2_17064 to i32*
  %v4_17064 = load i32, i32* %v3_17064, align 4
  call void @__pseudo_branch(i32 %v4_17064)
  %v2_17074 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17074, i32* %r4.global-to-local, align 4
  ret i32 %v2_16f50

; uselistorder directives
  uselistorder i32 %v0_17010, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* inttoptr (i32 135692 to i32*), { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_17044, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17010, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_16fd8, { 1, 0 }
}

define i32 @function_17080(i16* %arg1) local_unnamed_addr {
dec_label_pc_17080:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_17080 = load i1, i1* @cpsr_z, align 1
  %v2_17080 = load i32, i32* @r4, align 4
  br i1 %v0_17080, label %bb, label %dec_label_pc_17080..thread8_crit_edge

dec_label_pc_17080..thread8_crit_edge:            ; preds = %dec_label_pc_17080
  %v0_170bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_17080
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17080..thread8_crit_edge, %bb
  %v0_1725c = phi i32 [ %v0_170bc.pre, %dec_label_pc_17080..thread8_crit_edge ], [ 0, %bb ]
  store i32 %v2_17080, i32* %stack_var_-36, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 135656, i32* %sb.global-to-local, align 4
  %v4_170b8 = load i32, i32* inttoptr (i32 135700 to i32*), align 4
  store i32 %v4_170b8, i32* %r3.global-to-local, align 4
  %v9_170bc = icmp eq i32 %v0_1725c, %v4_170b8
  store i32 %v0_1725c, i32* %fp.global-to-local, align 4
  br i1 %v9_170bc, label %bb49, label %dec_label_pc_170d4

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_170e4

dec_label_pc_170d4:                               ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_170d8 = icmp eq i32 %v0_1725c, 0
  br i1 %v2_170d8, label %dec_label_pc_170e4, label %dec_label_pc_1724c

dec_label_pc_170e4:                               ; preds = %bb49, %dec_label_pc_170d4
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_170d4 ]
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_170f8 = load i32, i32* inttoptr (i32 135764 to i32*), align 4
  store i32 %v4_170f8, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_17100 = ptrtoint i32* %stack_var_-56 to i32
  %v4_17104 = load i32, i32* inttoptr (i32 135728 to i32*), align 16
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  store i32 %v4_170f8, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17104)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_17124 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17124, i32* %r0.global-to-local, align 4
  %v0_17128 = load i32, i32* %sb.global-to-local, align 4
  %v2_17128 = add i32 %v0_17128, 16
  %v3_17128 = inttoptr i32 %v2_17128 to i32*
  %v4_17128 = load i32, i32* %v3_17128, align 4
  call void @__pseudo_branch(i32 %v4_17128)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17138 = add i32 %v0_17128, 12
  %v3_17138 = inttoptr i32 %v2_17138 to i32*
  %v4_17138 = load i32, i32* %v3_17138, align 4
  store i32 %v4_17138, i32* %r2.global-to-local, align 4
  %v1_1713c = inttoptr i32 %v4_17138 to i32*
  %v2_1713c = load i32, i32* %v1_1713c, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_17144 = add i32 %v2_1713c, 1
  store i32 %v1_17144, i32* %r3.global-to-local, align 4
  %v2_17148 = add i32 %v0_17128, 24
  %v3_17148 = inttoptr i32 %v2_17148 to i32*
  %v4_17148 = load i32, i32* %v3_17148, align 4
  store i32 %v1_17144, i32* %v1_1713c, align 4
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17148)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_17164 = load i32, i32* %sb.global-to-local, align 4
  %v2_17164 = add i32 %v0_17164, 96
  %v3_17164 = inttoptr i32 %v2_17164 to i32*
  %v4_17164 = load i32, i32* %v3_17164, align 4
  store i32 %v4_17164, i32* @r4, align 4
  store i32 %v4_17164, i32* %r2.global-to-local, align 4
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17104)
  %v0_1717c = load i32, i32* @r4, align 4
  store i32 %v0_1717c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17128)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1718c = load i32, i32* %sb.global-to-local, align 4
  %v2_1718c = add i32 %v0_1718c, 44
  %v3_1718c = inttoptr i32 %v2_1718c to i32*
  %v4_1718c = load i32, i32* %v3_1718c, align 4
  store i32 %v4_1718c, i32* %r3.global-to-local, align 4
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  %v1_17198 = inttoptr i32 %v4_1718c to i32*
  %v2_17198 = load i32, i32* %v1_17198, align 4
  store i32 %v2_17198, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_17148)
  %v0_171a4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_171a4, i32* @r6, align 4
  %v2_171a8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_171a8, i32* @r8, align 4
  store i32 72, i32* %fp.global-to-local, align 4
  %v0_1723c.pr = load i32, i32* @r7, align 4
  %v2_1723c28 = icmp eq i32 %v0_1723c.pr, 0
  br i1 %v2_1723c28, label %dec_label_pc_17244, label %dec_label_pc_171b0

dec_label_pc_171b0:                               ; preds = %dec_label_pc_170e4, %dec_label_pc_17238
  %v0_171bc = phi i32 [ %v3_17238, %dec_label_pc_17238 ], [ %v0_1723c.pr, %dec_label_pc_170e4 ]
  %v1_171b0 = inttoptr i32 %v0_171bc to i16*
  %v2_171b0 = load i16, i16* %v1_171b0, align 2
  %v3_171b0 = zext i16 %v2_171b0 to i32
  store i32 %v3_171b0, i32* %r3.global-to-local, align 4
  %v1_171b4 = and i32 %v3_171b0, 64
  %v2_171b4 = icmp eq i32 %v1_171b4, 0
  br i1 %v2_171b4, label %dec_label_pc_17238, label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171b0
  %v1_171bc = add i32 %v0_171bc, 56
  store i32 %v1_171bc, i32* @r4, align 4
  store i32 %v1_171bc, i32* %r2.global-to-local, align 4
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  %v0_171cc = load i32, i32* %sb.global-to-local, align 4
  %v1_171cc = load i32, i32* %fp.global-to-local, align 4
  %v2_171cc = add i32 %v1_171cc, %v0_171cc
  %v3_171cc = inttoptr i32 %v2_171cc to i32*
  %v4_171cc = load i32, i32* %v3_171cc, align 4
  call void @__pseudo_branch(i32 %v4_171cc)
  %v0_171d8 = load i32, i32* @r4, align 4
  store i32 %v0_171d8, i32* %r0.global-to-local, align 4
  %v0_171dc = load i32, i32* %sb.global-to-local, align 4
  %v1_171dc = load i32, i32* @r8, align 4
  %v2_171dc = add i32 %v1_171dc, %v0_171dc
  %v3_171dc = inttoptr i32 %v2_171dc to i32*
  %v4_171dc = load i32, i32* %v3_171dc, align 4
  call void @__pseudo_branch(i32 %v4_171dc)
  %v0_171e8 = load i32, i32* @r7, align 4
  %v1_171e8 = inttoptr i32 %v0_171e8 to i16*
  %v2_171e8 = load i16, i16* %v1_171e8, align 2
  %v3_171e8 = zext i16 %v2_171e8 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_171f0 = or i32 %v3_171e8, %stack_var_-60.1.in
  %v1_171f4 = xor i32 %v2_171f0, 320
  store i32 %v1_171f4, i32* %r3.global-to-local, align 4
  %v1_171f8 = and i32 %v1_171f4, 832
  %v2_171f8 = icmp eq i32 %v1_171f8, 0
  br i1 %v2_171f8, label %dec_label_pc_17200, label %bb50

dec_label_pc_17200:                               ; preds = %dec_label_pc_171bc
  store i32 %v0_171e8, i32* %r0.global-to-local, align 4
  %v1_17204 = call i32 @function_16d58(i32 %v0_171e8)
  store i32 %v1_17204, i32* %r0.global-to-local, align 4
  %v2_17208 = icmp eq i32 %v1_17204, 0
  br i1 %v2_17208, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_17200
  %v1_1720c = load i32, i32* @r7, align 4
  %v2_1720c = inttoptr i32 %v1_1720c to i16*
  %v3_1720c = load i16, i16* %v2_1720c, align 2
  %v4_1720c = zext i16 %v3_1720c to i32
  store i32 %v4_1720c, i32* %r3.global-to-local, align 4
  %v2_17210 = add i32 %v1_1720c, 8
  %v3_17210 = inttoptr i32 %v2_17210 to i32*
  %v4_17210 = load i32, i32* %v3_17210, align 4
  store i32 %v4_17210, i32* %r2.global-to-local, align 4
  %v2_17214 = and i32 %v4_1720c, 65471
  store i32 %v2_17214, i32* %r3.global-to-local, align 4
  %v3_17218 = add i32 %v1_1720c, 28
  %v4_17218 = inttoptr i32 %v3_17218 to i32*
  store i32 %v4_17210, i32* %v4_17218, align 4
  %v1_1721c = load i32, i32* %r3.global-to-local, align 4
  %v2_1721c = trunc i32 %v1_1721c to i16
  %v3_1721c = load i32, i32* @r7, align 4
  %v4_1721c = inttoptr i32 %v3_1721c to i16*
  store i16 %v2_1721c, i16* %v4_1721c, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_17200
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_171bc, %.thread17
  store i32 %v2_17100, i32* %r0.global-to-local, align 4
  %v0_1722c = load i32, i32* %sb.global-to-local, align 4
  %v1_1722c = load i32, i32* %sl.global-to-local, align 4
  %v2_1722c = add i32 %v1_1722c, %v0_1722c
  %v3_1722c = inttoptr i32 %v2_1722c to i32*
  %v4_1722c = load i32, i32* %v3_1722c, align 4
  call void @__pseudo_branch(i32 %v4_1722c)
  %v0_17238.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17238

dec_label_pc_17238:                               ; preds = %dec_label_pc_171b0, %bb50
  %v0_17238 = phi i32 [ %v0_171bc, %dec_label_pc_171b0 ], [ %v0_17238.pre, %bb50 ]
  %v1_17238 = add i32 %v0_17238, 32
  %v2_17238 = inttoptr i32 %v1_17238 to i32*
  %v3_17238 = load i32, i32* %v2_17238, align 4
  store i32 %v3_17238, i32* @r7, align 4
  %v2_1723c = icmp eq i32 %v3_17238, 0
  br i1 %v2_1723c, label %dec_label_pc_17244, label %dec_label_pc_171b0

dec_label_pc_17244:                               ; preds = %dec_label_pc_17238, %dec_label_pc_170e4
  %v0_17244 = call i32 @function_16f20()
  store i32 %v0_17244, i32* %r0.global-to-local, align 4
  %v0_17280.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_1724c:                               ; preds = %dec_label_pc_170d4
  %v1_1724c = inttoptr i32 %v0_1725c to i16*
  %v2_1724c = load i16, i16* %v1_1724c, align 2
  %v3_1724c = zext i16 %v2_1724c to i32
  %v1_17250 = and i32 %v3_1724c, 64
  store i32 %v1_17250, i32* %r3.global-to-local, align 4
  %v2_17250 = icmp eq i32 %v1_17250, 0
  br i1 %v2_17250, label %bb51, label %dec_label_pc_1725c

bb51:                                             ; preds = %dec_label_pc_1724c
  br label %bb52

dec_label_pc_1725c:                               ; preds = %dec_label_pc_1724c
  %v1_1725c = call i32 @function_16d58(i32 %v0_1725c)
  store i32 %v1_1725c, i32* %r0.global-to-local, align 4
  %v2_17260 = icmp eq i32 %v1_1725c, 0
  br i1 %v2_17260, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1725c
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_1725c
  %v1_17264 = load i32, i32* %fp.global-to-local, align 4
  %v2_17264 = inttoptr i32 %v1_17264 to i16*
  %v3_17264 = load i16, i16* %v2_17264, align 2
  %v4_17264 = zext i16 %v3_17264 to i32
  store i32 %v4_17264, i32* %r3.global-to-local, align 4
  %v2_17268 = add i32 %v1_17264, 8
  %v3_17268 = inttoptr i32 %v2_17268 to i32*
  %v4_17268 = load i32, i32* %v3_17268, align 4
  store i32 %v4_17268, i32* %r2.global-to-local, align 4
  %v2_1726c = and i32 %v4_17264, 65471
  store i32 %v2_1726c, i32* %r3.global-to-local, align 4
  %v2_17270 = trunc i32 %v2_1726c to i16
  store i16 %v2_17270, i16* %v2_17264, align 2
  %v1_17274 = load i32, i32* %r2.global-to-local, align 4
  %v2_17274 = load i32, i32* %fp.global-to-local, align 4
  %v3_17274 = add i32 %v2_17274, 28
  %v4_17274 = inttoptr i32 %v3_17274 to i32*
  store i32 %v1_17274, i32* %v4_17274, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_17244, %.thread24
  %v0_17280 = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_17280.pre, %dec_label_pc_17244 ], [ 0, %.thread24 ]
  store i32 %v0_17280, i32* %r0.global-to-local, align 4
  %v2_17288 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17288, i32* %r4.global-to-local, align 4
  ret i32 %v0_17280

; uselistorder directives
  uselistorder i32 %v0_17280, { 1, 0 }
  uselistorder i32 %v3_17238, { 1, 2, 0 }
  uselistorder i32 %v0_171e8, { 1, 0, 2 }
  uselistorder i32 %v0_17128, { 1, 0, 2 }
  uselistorder i32 %v0_1725c, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 16, 7, 9, 8, 10, 12, 11, 13, 14, 15, 2, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_16f20, { 1, 0 }
  uselistorder i32 56, { 11, 12, 13, 1, 2, 14, 16, 7, 8, 9, 10, 0, 3, 15, 4, 5, 6, 17 }
  uselistorder i32* @r8, { 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 140, 141, 2, 142, 143, 144, 173, 174, 175, 176, 177, 4, 178, 179, 180, 181, 182, 183, 184, 185, 64, 65, 66, 67, 68, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 15, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 78, 79, 80, 82, 83, 84, 85, 86, 88, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 0, 135, 132, 133, 134, 136, 137, 138, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 167, 168, 169, 5, 171, 172, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 3, 206, 207, 208, 209 }
  uselistorder i32* inttoptr (i32 135728 to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32 72, { 0, 1, 2, 3, 4, 5, 15, 11, 12, 13, 14, 6, 16, 7, 8, 9, 10 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17238, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_171b0, { 1, 0 }
  uselistorder label %dec_label_pc_170e4, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_17294(i32 %arg1) local_unnamed_addr {
dec_label_pc_17294:
  %v0_17294 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17294, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_17294
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17294, %bb
  %v5_172b0 = phi i32 [ %arg1, %dec_label_pc_17294 ], [ 0, %bb ]
  ret i32 %v5_172b0

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_172b4(i16* %arg1) local_unnamed_addr {
dec_label_pc_172b4:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_172b4 = load i32, i32* @r4, align 4
  store i32 %v3_172b4, i32* %stack_var_-12, align 4
  %v6_172b4 = load i32, i32* @r5, align 4
  %v9_172b4 = load i32, i32* @lr, align 4
  %v0_172b8 = load i32, i32* @r0, align 4
  %v1_172b8 = add i32 %v0_172b8, 16
  %v2_172b8 = inttoptr i32 %v1_172b8 to i32*
  %v3_172b8 = load i32, i32* %v2_172b8, align 4
  store i32 %v3_172b8, i32* %r2.global-to-local, align 4
  %v1_172bc = add i32 %v0_172b8, 24
  %v2_172bc = inttoptr i32 %v1_172bc to i32*
  %v3_172bc = load i32, i32* %v2_172bc, align 4
  %v3_172c0 = icmp ult i32 %v3_172b8, %v3_172bc
  store i32 %v0_172b8, i32* @r4, align 4
  br i1 %v3_172c0, label %bb, label %dec_label_pc_172e0

bb:                                               ; preds = %dec_label_pc_172b4
  %v2_172cc = inttoptr i32 %v3_172b8 to i8*
  %v3_172cc = load i8, i8* %v2_172cc, align 1
  %v4_172cc = zext i8 %v3_172cc to i32
  store i32 %v4_172cc, i32* %r0.global-to-local, align 4
  %v6_172cc = add i32 %v3_172b8, 1
  store i32 %v6_172cc, i32* %r2.global-to-local, align 4
  store i32 %v6_172cc, i32* %v2_172b8, align 4
  br label %dec_label_pc_173cc

dec_label_pc_172e0:                               ; preds = %dec_label_pc_172b4
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_9f10.967 to i32), i32 94936), i32* @r5, align 4
  %v1_172e0 = inttoptr i32 %v0_172b8 to i16*
  %v2_172e0 = load i16, i16* %v1_172e0, align 2
  %v3_172e0 = zext i16 %v2_172e0 to i32
  %v1_172e4 = and i32 %v3_172e0, 131
  %tmp24 = icmp ugt i32 %v1_172e4, 128
  br i1 %tmp24, label %dec_label_pc_17300, label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_172e0
  store i32 128, i32* @r1, align 4
  %v0_172f4 = call i32 @function_1811c()
  store i32 %v0_172f4, i32* %r0.global-to-local, align 4
  %v2_172f8 = icmp eq i32 %v0_172f4, 0
  br i1 %v2_172f8, label %dec_label_pc_172f0.dec_label_pc_17300_crit_edge, label %dec_label_pc_173c8

dec_label_pc_172f0.dec_label_pc_17300_crit_edge:  ; preds = %dec_label_pc_172f0
  %v0_17300.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17300

dec_label_pc_17300:                               ; preds = %dec_label_pc_172f0.dec_label_pc_17300_crit_edge, %dec_label_pc_172e0
  %v2_17340 = phi i32 [ %v0_17300.pre, %dec_label_pc_172f0.dec_label_pc_17300_crit_edge ], [ %v0_172b8, %dec_label_pc_172e0 ]
  %v1_17300 = inttoptr i32 %v2_17340 to i16*
  %v2_17300 = load i16, i16* %v1_17300, align 2
  %v3_17300 = zext i16 %v2_17300 to i32
  store i32 %v3_17300, i32* %r2.global-to-local, align 4
  %v1_17304 = and i32 %v3_17300, 2
  %v2_17304 = icmp eq i32 %v1_17304, 0
  br i1 %v2_17304, label %dec_label_pc_17330, label %dec_label_pc_1730c

dec_label_pc_1730c:                               ; preds = %dec_label_pc_17300
  %tmp25 = urem i16 %v2_17300, 2
  %v1_1730c = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_1730c
  %v4_17310 = and i32 %tmp21, 4
  %v5_17310 = add i32 %v4_17310, %v2_17340
  %v1_17314 = add i32 %v5_17310, 36
  %v2_17314 = inttoptr i32 %v1_17314 to i8*
  %v3_17314 = load i8, i8* %v2_17314, align 1
  %v4_17314 = zext i8 %v3_17314 to i32
  %v1_17318 = add nsw i32 %v3_17300, -1
  store i32 %v1_17318, i32* %r2.global-to-local, align 4
  store i32 %v4_17314, i32* %r0.global-to-local, align 4
  %v2_17324 = add i32 %v2_17340, 40
  %v3_17324 = inttoptr i32 %v2_17324 to i32*
  store i32 0, i32* %v3_17324, align 4
  %v0_17328 = load i32, i32* %r2.global-to-local, align 4
  %v1_17328 = trunc i32 %v0_17328 to i16
  %v2_17328 = load i32, i32* @r4, align 4
  %v3_17328 = inttoptr i32 %v2_17328 to i16*
  store i16 %v1_17328, i16* %v3_17328, align 2
  br label %dec_label_pc_173cc

dec_label_pc_17330:                               ; preds = %dec_label_pc_17300
  %v1_17330 = add i32 %v2_17340, 16
  %v1_17334 = inttoptr i32 %v1_17330 to i32*
  %v2_17334 = load i32, i32* %v1_17334, align 4
  %v3_17334 = add i32 %v2_17340, 20
  %v4_17334 = inttoptr i32 %v3_17334 to i32*
  %v5_17334 = load i32, i32* %v4_17334, align 4
  %v9_17338 = icmp eq i32 %v5_17334, %v2_17334
  br i1 %v9_17338, label %dec_label_pc_17348, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_17330
  %v2_1733c = inttoptr i32 %v2_17334 to i8*
  %v3_1733c = load i8, i8* %v2_1733c, align 1
  %v4_1733c = zext i8 %v3_1733c to i32
  store i32 %v4_1733c, i32* %r0.global-to-local, align 4
  %v6_1733c = add i32 %v2_17334, 1
  store i32 %v6_1733c, i32* %v1_17334, align 4
  br label %dec_label_pc_173cc

dec_label_pc_17348:                               ; preds = %dec_label_pc_17330
  %v1_17348 = add i32 %v2_17340, 4
  %v2_17348 = inttoptr i32 %v1_17348 to i32*
  %v3_17348 = load i32, i32* %v2_17348, align 4
  %v7_1734c = icmp eq i32 %v3_17348, -2
  br i1 %v7_1734c, label %.thread8, label %dec_label_pc_17360

.thread8:                                         ; preds = %dec_label_pc_17348
  %v2_17350 = or i16 %v2_17300, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17350, i16* %v1_17300, align 2
  br label %dec_label_pc_173cc

dec_label_pc_17360:                               ; preds = %dec_label_pc_17348
  %v1_17360 = and i32 %v3_17300, 768
  %v2_17360 = icmp eq i32 %v1_17360, 0
  br i1 %v2_17360, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_17360
  %v1_17368 = load i32, i32* @r5, align 4
  %v3_17368 = add i32 %v1_17368, 44
  %v4_17368 = inttoptr i32 %v3_17368 to i32*
  %v5_17368 = load i32, i32* %v4_17368, align 4
  store i32 %v5_17368, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_17360, %bb22
  %v1_1736c = xor i1 %v2_17360, true
  call void @__pseudo_cond_branch(i1 %v1_1736c, i32 ptrtoint (i32* @global_var_170a8.910 to i32))
  %v0_17370 = load i32, i32* @r4, align 4
  %v1_17370 = add i32 %v0_17370, 8
  store i32 %v1_17370, i32* %r2.global-to-local, align 4
  %v1_17374 = inttoptr i32 %v1_17370 to i32*
  %v2_17374 = load i32, i32* %v1_17374, align 4
  store i32 %v2_17374, i32* %r2.global-to-local, align 4
  %v3_17374 = add i32 %v0_17370, 12
  %v4_17374 = inttoptr i32 %v3_17374 to i32*
  %v5_17374 = load i32, i32* %v4_17374, align 4
  %v9_17378 = icmp eq i32 %v5_17374, %v2_17374
  br i1 %v9_17378, label %dec_label_pc_173ac, label %dec_label_pc_17380

dec_label_pc_17380:                               ; preds = %.thread10
  %v2_17380 = add i32 %v0_17370, 24
  %v3_17380 = inttoptr i32 %v2_17380 to i32*
  store i32 %v2_17374, i32* %v3_17380, align 4
  %v0_17384 = load i32, i32* @r4, align 4
  store i32 %v0_17384, i32* %r0.global-to-local, align 4
  %v2_17388 = call i32 @function_180ec(i32 %v0_17384)
  store i32 %v2_17388, i32* %r0.global-to-local, align 4
  %v2_1738c = icmp eq i32 %v2_17388, 0
  br i1 %v2_1738c, label %dec_label_pc_173c8, label %dec_label_pc_17394

dec_label_pc_17394:                               ; preds = %dec_label_pc_17380
  %v0_17394 = load i32, i32* @r4, align 4
  %v1_17394 = add i32 %v0_17394, 20
  %v2_17394 = inttoptr i32 %v1_17394 to i32*
  %v3_17394 = load i32, i32* %v2_17394, align 4
  %v2_17398 = add i32 %v0_17394, 24
  %v3_17398 = inttoptr i32 %v2_17398 to i32*
  store i32 %v3_17394, i32* %v3_17398, align 4
  %v0_1739c = load i32, i32* @r4, align 4
  %v1_1739c = add i32 %v0_1739c, 16
  %v2_1739c = inttoptr i32 %v1_1739c to i32*
  %v3_1739c = load i32, i32* %v2_1739c, align 4
  %v1_173a0 = inttoptr i32 %v3_1739c to i8*
  %v2_173a0 = load i8, i8* %v1_173a0, align 1
  %v3_173a0 = zext i8 %v2_173a0 to i32
  store i32 %v3_173a0, i32* %r0.global-to-local, align 4
  %v5_173a0 = add i32 %v3_1739c, 1
  store i32 %v5_173a0, i32* %v2_1739c, align 4
  br label %dec_label_pc_173cc

dec_label_pc_173ac:                               ; preds = %.thread10
  %v1_173ac = inttoptr i32 %v0_17370 to i16*
  store i32 %v0_17370, i32* %r0.global-to-local, align 4
  %v2_173b0 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_173b8 = call i32 @function_17fe0(i16* %v1_173ac, i32 %v2_173b0, i32 1)
  store i32 %v5_173b8, i32* %r0.global-to-local, align 4
  %v2_173bc = icmp eq i32 %v5_173b8, 0
  br i1 %v2_173bc, label %dec_label_pc_173c8, label %bb23

bb23:                                             ; preds = %dec_label_pc_173ac
  %v4_173c0 = load i8, i8* %stack_var_-17, align 1
  %v5_173c0 = sext i8 %v4_173c0 to i32
  store i32 %v5_173c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173cc

dec_label_pc_173c8:                               ; preds = %dec_label_pc_173ac, %dec_label_pc_172f0, %dec_label_pc_17380
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_17394, %dec_label_pc_1730c, %dec_label_pc_173c8
  %v2_173d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_173d0, i32* @r4, align 4
  store i32 %v6_172b4, i32* @r5, align 4
  store i32 %v9_172b4, i32* @lr, align 4
  %v1_173d4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_173d4

; uselistorder directives
  uselistorder i32 %v2_17334, { 1, 0, 2 }
  uselistorder i32 %v2_17340, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_172b8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_172b8, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 1, 0, 4, 3, 2, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 128, { 16, 0, 13, 12, 17, 1, 18, 19, 20, 9, 10, 21, 22, 14, 11, 3, 4, 5, 6, 7, 8, 23, 2, 24, 15 }
  uselistorder label %dec_label_pc_173cc, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_173c8, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_173e0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_173e0:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_173e0 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_173e4 = icmp eq i32 %arg2, 0
  store i1 %v2_173e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1746c, label %dec_label_pc_17454.preheader

dec_label_pc_17454.preheader:                     ; preds = %dec_label_pc_173e0
  store i32 %tmp, i32* @r5, align 4
  %v1_174542 = add i32 %arg2, -1
  store i32 %v1_174542, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_174548 = icmp eq i32 %arg2, 1
  store i1 %v7_174548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_174548, label %dec_label_pc_1745c, label %dec_label_pc_17400

dec_label_pc_17400:                               ; preds = %dec_label_pc_17454.preheader, %dec_label_pc_17454.backedge.dec_label_pc_17400_crit_edge
  %v0_17424 = phi i32 [ %v0_17400.pre, %dec_label_pc_17454.backedge.dec_label_pc_17400_crit_edge ], [ %arg3, %dec_label_pc_17454.preheader ]
  %v1_17400 = add i32 %v0_17424, 16
  %v2_17400 = inttoptr i32 %v1_17400 to i32*
  %v3_17400 = load i32, i32* %v2_17400, align 4
  store i32 %v3_17400, i32* %r2.global-to-local, align 4
  %v1_17404 = add i32 %v0_17424, 24
  %v2_17404 = inttoptr i32 %v1_17404 to i32*
  %v3_17404 = load i32, i32* %v2_17404, align 4
  store i32 %v3_17404, i32* %r3.global-to-local, align 4
  %v3_17408 = icmp uge i32 %v3_17400, %v3_17404
  store i1 %v3_17408, i1* %cpsr_c.global-to-local, align 1
  %v9_17408 = icmp eq i32 %v3_17400, %v3_17404
  store i1 %v9_17408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17408, label %dec_label_pc_17424, label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %dec_label_pc_17400
  %v1_17410 = inttoptr i32 %v3_17400 to i8*
  %v2_17410 = load i8, i8* %v1_17410, align 1
  %v3_17410 = zext i8 %v2_17410 to i32
  store i32 %v3_17410, i32* %r3.global-to-local, align 4
  %v5_17410 = add i32 %v3_17400, 1
  store i32 %v5_17410, i32* %r2.global-to-local, align 4
  %v2_17414 = load i32, i32* @r5, align 4
  %v3_17414 = inttoptr i32 %v2_17414 to i8*
  store i8 %v2_17410, i8* %v3_17414, align 1
  %v4_17414 = load i32, i32* @r5, align 4
  %v5_17414 = add i32 %v4_17414, 1
  store i32 %v5_17414, i32* @r5, align 4
  %v0_17418 = load i32, i32* %r3.global-to-local, align 4
  %v2_17418 = icmp ugt i32 %v0_17418, 9
  store i1 %v2_17418, i1* %cpsr_c.global-to-local, align 1
  %v7_17418 = icmp eq i32 %v0_17418, 10
  store i1 %v7_17418, i1* %cpsr_z.global-to-local, align 1
  %v0_1741c = load i32, i32* %r2.global-to-local, align 4
  %v1_1741c = load i32, i32* @r4, align 4
  %v2_1741c = add i32 %v1_1741c, 16
  %v3_1741c = inttoptr i32 %v2_1741c to i32*
  store i32 %v0_1741c, i32* %v3_1741c, align 4
  br i1 %v7_17418, label %dec_label_pc_1745c, label %dec_label_pc_17454.backedge

dec_label_pc_17424:                               ; preds = %dec_label_pc_17400
  %v1_17424 = inttoptr i32 %v0_17424 to i16*
  %v3_17428 = call i32 @function_172b4(i16* %v1_17424)
  %v3_1742c = icmp eq i32 %v3_17428, -1
  store i1 %v3_1742c, i1* %cpsr_c.global-to-local, align 1
  %v8_1742c = icmp eq i32 %v3_17428, -1
  store i1 %v8_1742c, i1* %cpsr_z.global-to-local, align 1
  %v1_17430 = urem i32 %v3_17428, 256
  store i32 %v1_17430, i32* %r3.global-to-local, align 4
  br i1 %v3_1742c, label %dec_label_pc_17438, label %dec_label_pc_17450

dec_label_pc_17438:                               ; preds = %dec_label_pc_17424
  %v0_17438 = load i32, i32* @r4, align 4
  %v1_17438 = inttoptr i32 %v0_17438 to i16*
  %v2_17438 = load i16, i16* %v1_17438, align 2
  %v3_17438 = zext i16 %v2_17438 to i32
  store i32 %v3_17438, i32* %r3.global-to-local, align 4
  %v1_1743c = and i32 %v3_17438, 8
  %v2_1743c = icmp eq i32 %v1_1743c, 0
  store i1 %v2_1743c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1743c, label %dec_label_pc_1745c, label %dec_label_pc_1746c

dec_label_pc_17450:                               ; preds = %dec_label_pc_17424
  %v1_17448 = trunc i32 %v3_17428 to i8
  %v2_17448 = load i32, i32* @r5, align 4
  %v3_17448 = inttoptr i32 %v2_17448 to i8*
  store i8 %v1_17448, i8* %v3_17448, align 1
  %v4_17448 = load i32, i32* @r5, align 4
  %v5_17448 = add i32 %v4_17448, 1
  store i32 %v5_17448, i32* @r5, align 4
  %v0_1744c = load i32, i32* %r3.global-to-local, align 4
  %v2_1744c = icmp ugt i32 %v0_1744c, 9
  store i1 %v2_1744c, i1* %cpsr_c.global-to-local, align 1
  %v7_1744c = icmp eq i32 %v0_1744c, 10
  store i1 %v7_1744c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1744c, label %dec_label_pc_1745c, label %dec_label_pc_17454.backedge

dec_label_pc_17454.backedge:                      ; preds = %dec_label_pc_17450, %dec_label_pc_17410
  %v0_17454 = load i32, i32* %r6.global-to-local, align 4
  %v1_17454 = add i32 %v0_17454, -1
  store i32 %v1_17454, i32* %r6.global-to-local, align 4
  %v2_17454 = icmp ne i32 %v0_17454, 0
  store i1 %v2_17454, i1* %cpsr_c.global-to-local, align 1
  %v7_17454 = icmp eq i32 %v0_17454, 1
  store i1 %v7_17454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17454, label %dec_label_pc_1745c, label %dec_label_pc_17454.backedge.dec_label_pc_17400_crit_edge

dec_label_pc_17454.backedge.dec_label_pc_17400_crit_edge: ; preds = %dec_label_pc_17454.backedge
  %v0_17400.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17400

dec_label_pc_1745c:                               ; preds = %dec_label_pc_17450, %dec_label_pc_17454.backedge, %dec_label_pc_17410, %dec_label_pc_17454.preheader, %dec_label_pc_17438
  %v0_1745c = load i32, i32* @r5, align 4
  %v1_1745c = load i32, i32* @r7, align 4
  %v3_1745c = icmp uge i32 %v0_1745c, %v1_1745c
  store i1 %v3_1745c, i1* %cpsr_c.global-to-local, align 1
  %v9_1745c = icmp eq i32 %v0_1745c, %v1_1745c
  store i1 %v9_1745c, i1* %cpsr_z.global-to-local, align 1
  %v2_17460 = xor i1 %v9_1745c, true
  %v3_17460 = and i1 %v3_1745c, %v2_17460
  br i1 %v3_17460, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1745c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_17464 = inttoptr i32 %v0_1745c to i8*
  store i8 0, i8* %v7_17464, align 1
  %v0_17468.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17468.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1745c, %bb
  %v1_17468 = phi i1 [ %v1_17468.pre, %bb ], [ %v9_1745c, %dec_label_pc_1745c ]
  %v0_17468 = phi i1 [ %v0_17468.pre, %bb ], [ %v3_1745c, %dec_label_pc_1745c ]
  %v2_17468 = xor i1 %v1_17468, true
  %v3_17468 = and i1 %v0_17468, %v2_17468
  br i1 %v3_17468, label %.dec_label_pc_17470_crit_edge, label %dec_label_pc_1746c

.dec_label_pc_17470_crit_edge:                    ; preds = %.thread14
  %v0_17470.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17470

dec_label_pc_1746c:                               ; preds = %dec_label_pc_173e0, %dec_label_pc_17438, %.thread14
  br label %dec_label_pc_17470

dec_label_pc_17470:                               ; preds = %.dec_label_pc_17470_crit_edge, %dec_label_pc_1746c
  %v0_17470 = phi i32 [ %v0_17470.pre, %.dec_label_pc_17470_crit_edge ], [ 0, %dec_label_pc_1746c ]
  store i32 %v6_173e0, i32* @r5, align 4
  ret i32 %v0_17470

; uselistorder directives
  uselistorder i1 %v9_1745c, { 1, 0, 2 }
  uselistorder i32 %v1_1745c, { 1, 0 }
  uselistorder i32 %v0_1745c, { 0, 2, 1 }
  uselistorder i32 %v0_17454, { 2, 0, 1 }
  uselistorder i32 %v0_1744c, { 1, 0 }
  uselistorder i32 %v3_17428, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17418, { 1, 0 }
  uselistorder i32 %v3_17400, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17424, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i1 true, { 0, 1, 82, 112, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 79, 29, 30, 31, 32, 33, 89, 88, 34, 131, 75, 80, 86, 113, 87, 122, 114, 103, 115, 116, 35, 117, 36, 37, 118, 119, 81, 120, 121, 77, 123, 124, 125, 126, 127, 128, 38, 39, 129, 130, 102, 101, 50, 51, 52, 132, 53, 54, 90, 91, 96, 92, 97, 84, 95, 133, 85, 100, 134, 40, 135, 41, 42, 43, 136, 104, 105, 44, 45, 137, 106, 107, 46, 47, 138, 108, 109, 48, 49, 83, 139, 140, 98, 141, 55, 76, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 142, 143, 144, 145, 93, 146, 147, 148, 149, 150, 151, 152, 70, 71, 153, 72, 73, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 69, 169, 170, 171, 172, 173, 174, 68, 175, 78, 94, 99, 74, 176, 66, 67, 111, 177, 110 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_17470, { 1, 0 }
  uselistorder label %dec_label_pc_1746c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1745c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17400, { 1, 0 }
}

define i32 @function_17480() local_unnamed_addr {
dec_label_pc_17480:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_17480 = load i32, i32* @r1, align 4
  %v1_17480 = load i32, i32* @r0, align 4
  %v2_17480 = sub i32 %v0_17480, %v1_17480
  %v3_17480 = icmp ult i32 %v0_17480, %v1_17480
  %v4_17480 = xor i32 %v1_17480, %v0_17480
  %v5_17480 = xor i32 %v2_17480, %v0_17480
  %v6_17480 = and i32 %v5_17480, %v4_17480
  %v7_17480 = icmp slt i32 %v6_17480, 0
  store i1 %v7_17480, i1* %cpsr_v.global-to-local, align 1
  %v8_17480 = icmp slt i32 %v2_17480, 0
  store i1 %v8_17480, i1* %cpsr_n.global-to-local, align 1
  %v9_17480 = icmp eq i32 %v0_17480, %v1_17480
  store i1 %v9_17480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17480, label %dec_label_pc_176d4, label %dec_label_pc_17488

dec_label_pc_17488:                               ; preds = %dec_label_pc_17480
  br i1 %v9_17480, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_17488
  %merge = phi i32 [ %v0_17480, %dec_label_pc_17488 ], [ %v2_17768, %bb150 ], [ %v11_17784, %bb153 ], [ %v7_17784, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_17488
  %v5_1748c = inttoptr i32 %v1_17480 to i8*
  store i8* %v5_1748c, i8** %stack_var_-8, align 4
  %v8_1748c = load i32, i32* @lr, align 4
  %v0_17490 = load i32, i32* @r2, align 4
  %v2_17490 = add i32 %v0_17490, -4
  store i32 %v2_17490, i32* %r2.global-to-local, align 4
  %v4_17490 = sub i32 3, %v0_17490
  %v5_17490 = and i32 %v4_17490, %v0_17490
  %v6_17490 = icmp slt i32 %v5_17490, 0
  store i1 %v6_17490, i1* %cpsr_v.global-to-local, align 1
  %v7_17490 = icmp slt i32 %v2_17490, 0
  store i1 %v7_17490, i1* %cpsr_n.global-to-local, align 1
  %v8_17490 = icmp eq i32 %v0_17490, 4
  store i1 %v8_17490, i1* %cpsr_z.global-to-local, align 1
  %v5_17494 = icmp slt i32 %v0_17490, 4
  br i1 %v5_17494, label %bb140, label %dec_label_pc_17498

dec_label_pc_17498:                               ; preds = %bb
  %v1_17498 = urem i32 %v1_17480, 4
  store i32 %v1_17498, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17498 = icmp eq i32 %v1_17498, 0
  store i1 %v2_17498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17498, label %dec_label_pc_174a0, label %dec_label_pc_1754c

dec_label_pc_174a0:                               ; preds = %dec_label_pc_17498
  %v1_174a0 = urem i32 %v0_17480, 4
  store i32 %v1_174a0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174a0 = icmp eq i32 %v1_174a0, 0
  store i1 %v2_174a0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_17480 to i2
  br i1 %v2_174a0, label %dec_label_pc_174a8, label %dec_label_pc_1757c

dec_label_pc_174a8:                               ; preds = %dec_label_pc_174a0, %dec_label_pc_17574
  %v0_174c094 = phi i32 [ %v1_17480, %dec_label_pc_174a0 ], [ %v0_1769c77, %dec_label_pc_17574 ]
  %v0_174bc93 = phi i32 [ %v0_17480, %dec_label_pc_174a0 ], [ %v0_17574, %dec_label_pc_17574 ]
  %v0_174a8 = phi i32 [ %v2_17490, %dec_label_pc_174a0 ], [ %v2_1756c, %dec_label_pc_17574 ]
  %v1_174a8 = add i32 %v0_174a8, -8
  store i32 %v1_174a8, i32* %r2.global-to-local, align 4
  %v3_174a8 = sub i32 7, %v0_174a8
  %v4_174a8 = and i32 %v3_174a8, %v0_174a8
  %v5_174a8 = icmp slt i32 %v4_174a8, 0
  store i1 %v5_174a8, i1* %cpsr_v.global-to-local, align 1
  %v6_174a8 = icmp slt i32 %v1_174a8, 0
  store i1 %v6_174a8, i1* %cpsr_n.global-to-local, align 1
  %v7_174a8 = icmp eq i32 %v0_174a8, 8
  store i1 %v7_174a8, i1* %cpsr_z.global-to-local, align 1
  %v2_174ac = xor i1 %v6_174a8, %v5_174a8
  br i1 %v2_174ac, label %dec_label_pc_174fc, label %dec_label_pc_174b0

dec_label_pc_174b0:                               ; preds = %dec_label_pc_174a8
  %v1_174b0 = add i32 %v0_174a8, -28
  store i32 %v1_174b0, i32* %r2.global-to-local, align 4
  %v3_174b0 = sub i32 27, %v0_174a8
  %v4_174b0 = and i32 %v3_174b0, %v1_174a8
  %v5_174b0 = icmp slt i32 %v4_174b0, 0
  store i1 %v5_174b0, i1* %cpsr_v.global-to-local, align 1
  %v6_174b0 = icmp slt i32 %v1_174b0, 0
  store i1 %v6_174b0, i1* %cpsr_n.global-to-local, align 1
  %v7_174b0 = icmp eq i32 %v1_174a8, 20
  store i1 %v7_174b0, i1* %cpsr_z.global-to-local, align 1
  %v2_174b4 = xor i1 %v6_174b0, %v5_174b0
  br i1 %v2_174b4, label %dec_label_pc_174e8, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %dec_label_pc_174b0
  %v0_174b8 = load i32, i32* @r4, align 4
  store i32 %v0_174b8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge, %dec_label_pc_174b8
  %v0_174c0 = phi i32 [ %v12_174c8, %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge ], [ %v0_174c094, %dec_label_pc_174b8 ]
  %v0_174bc = phi i32 [ %v0_174bc.pre, %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge ], [ %v0_174bc93, %dec_label_pc_174b8 ]
  %v1_174bc = inttoptr i32 %v0_174bc to i32*
  %v2_174bc = load i32, i32* %v1_174bc, align 4
  %v3_174bc = add i32 %v0_174bc, 4
  %v4_174bc = inttoptr i32 %v3_174bc to i32*
  %v5_174bc = load i32, i32* %v4_174bc, align 4
  store i32 %v5_174bc, i32* %r4.global-to-local, align 4
  %v6_174bc = add i32 %v0_174bc, 8
  %v7_174bc = inttoptr i32 %v6_174bc to i32*
  %v8_174bc = load i32, i32* %v7_174bc, align 4
  store i32 %v8_174bc, i32* %ip.global-to-local, align 4
  %v9_174bc = add i32 %v0_174bc, 12
  %v10_174bc = inttoptr i32 %v9_174bc to i32*
  %v11_174bc = load i32, i32* %v10_174bc, align 4
  store i32 %v11_174bc, i32* %lr.global-to-local, align 4
  %v12_174bc = add i32 %v0_174bc, 16
  store i32 %v12_174bc, i32* %r1.global-to-local, align 4
  %v1_174c0 = inttoptr i32 %v0_174c0 to i32*
  store i32 %v2_174bc, i32* %v1_174c0, align 4
  %v3_174c0 = add i32 %v0_174c0, 4
  %v4_174c0 = inttoptr i32 %v3_174c0 to i32*
  %v5_174c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174c0, i32* %v4_174c0, align 4
  %v6_174c0 = add i32 %v0_174c0, 8
  %v7_174c0 = inttoptr i32 %v6_174c0 to i32*
  %v8_174c0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_174c0, i32* %v7_174c0, align 4
  %v9_174c0 = add i32 %v0_174c0, 12
  %v10_174c0 = inttoptr i32 %v9_174c0 to i32*
  %v11_174c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_174c0, i32* %v10_174c0, align 4
  %v12_174c0 = add i32 %v0_174c0, 16
  store i32 %v12_174c0, i32* %r0.global-to-local, align 4
  %v0_174c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_174c4 = inttoptr i32 %v0_174c4 to i32*
  %v2_174c4 = load i32, i32* %v1_174c4, align 4
  store i32 %v2_174c4, i32* @r3, align 4
  %v3_174c4 = add i32 %v0_174c4, 4
  %v4_174c4 = inttoptr i32 %v3_174c4 to i32*
  %v5_174c4 = load i32, i32* %v4_174c4, align 4
  store i32 %v5_174c4, i32* %r4.global-to-local, align 4
  %v6_174c4 = add i32 %v0_174c4, 8
  %v7_174c4 = inttoptr i32 %v6_174c4 to i32*
  %v8_174c4 = load i32, i32* %v7_174c4, align 4
  store i32 %v8_174c4, i32* @ip, align 4
  %v9_174c4 = add i32 %v0_174c4, 12
  %v10_174c4 = inttoptr i32 %v9_174c4 to i32*
  %v11_174c4 = load i32, i32* %v10_174c4, align 4
  store i32 %v11_174c4, i32* %lr.global-to-local, align 4
  %v12_174c4 = add i32 %v0_174c4, 16
  store i32 %v12_174c4, i32* @r1, align 4
  %v1_174c8 = inttoptr i32 %v12_174c0 to i32*
  store i32 %v2_174c4, i32* %v1_174c8, align 4
  %v3_174c8 = add i32 %v0_174c0, 20
  %v4_174c8 = inttoptr i32 %v3_174c8 to i32*
  %v5_174c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174c8, i32* %v4_174c8, align 4
  %v6_174c8 = add i32 %v0_174c0, 24
  %v7_174c8 = inttoptr i32 %v6_174c8 to i32*
  %v8_174c8 = load i32, i32* @ip, align 4
  store i32 %v8_174c8, i32* %v7_174c8, align 4
  %v9_174c8 = add i32 %v0_174c0, 28
  %v10_174c8 = inttoptr i32 %v9_174c8 to i32*
  %v11_174c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_174c8, i32* %v10_174c8, align 4
  %v12_174c8 = add i32 %v0_174c0, 32
  store i32 %v12_174c8, i32* @r0, align 4
  %v0_174cc = load i32, i32* %r2.global-to-local, align 4
  %v1_174cc = add i32 %v0_174cc, -32
  store i32 %v1_174cc, i32* %r2.global-to-local, align 4
  %v3_174cc = sub i32 31, %v0_174cc
  %v4_174cc = and i32 %v3_174cc, %v0_174cc
  %v5_174cc = icmp slt i32 %v4_174cc, 0
  %v6_174cc = icmp slt i32 %v1_174cc, 0
  %v2_174d0 = xor i1 %v6_174cc, %v5_174cc
  br i1 %v2_174d0, label %dec_label_pc_174d4, label %dec_label_pc_174bc.dec_label_pc_174bc_crit_edge

dec_label_pc_174bc.dec_label_pc_174bc_crit_edge:  ; preds = %dec_label_pc_174bc
  %v0_174bc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174bc
  %v1_174d4 = add i32 %v0_174cc, -16
  %v3_174d4 = add i32 %v0_174cc, 2147483616
  %v4_174d4 = and i32 %v1_174d4, %v3_174d4
  %v5_174d4 = icmp slt i32 %v4_174d4, 0
  store i1 %v5_174d4, i1* %cpsr_v.global-to-local, align 1
  %v6_174d4 = icmp slt i32 %v1_174d4, 0
  store i1 %v6_174d4, i1* %cpsr_n.global-to-local, align 1
  %v7_174d4 = icmp eq i32 %v1_174d4, 0
  store i1 %v7_174d4, i1* %cpsr_z.global-to-local, align 1
  %v2_174d8 = xor i1 %v6_174d4, %v5_174d4
  br i1 %v2_174d8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_174d4
  %v3_174d8 = load i32, i32* @r1, align 4
  %v4_174d8 = inttoptr i32 %v3_174d8 to i32*
  %v5_174d8 = load i32, i32* %v4_174d8, align 4
  store i32 %v5_174d8, i32* @r3, align 4
  %v6_174d8 = add i32 %v3_174d8, 4
  %v7_174d8 = inttoptr i32 %v6_174d8 to i32*
  %v8_174d8 = load i32, i32* %v7_174d8, align 4
  store i32 %v8_174d8, i32* %r4.global-to-local, align 4
  %v9_174d8 = add i32 %v3_174d8, 8
  %v10_174d8 = inttoptr i32 %v9_174d8 to i32*
  %v11_174d8 = load i32, i32* %v10_174d8, align 4
  store i32 %v11_174d8, i32* @ip, align 4
  %v12_174d8 = add i32 %v3_174d8, 12
  %v13_174d8 = inttoptr i32 %v12_174d8 to i32*
  %v14_174d8 = load i32, i32* %v13_174d8, align 4
  store i32 %v14_174d8, i32* %lr.global-to-local, align 4
  %v15_174d8 = add i32 %v3_174d8, 16
  store i32 %v15_174d8, i32* @r1, align 4
  %v4_174dc = inttoptr i32 %v12_174c8 to i32*
  store i32 %v5_174d8, i32* %v4_174dc, align 4
  %v6_174dc = add i32 %v0_174c0, 36
  %v7_174dc = inttoptr i32 %v6_174dc to i32*
  %v8_174dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_174dc, i32* %v7_174dc, align 4
  %v9_174dc = add i32 %v0_174c0, 40
  %v10_174dc = inttoptr i32 %v9_174dc to i32*
  %v11_174dc = load i32, i32* @ip, align 4
  store i32 %v11_174dc, i32* %v10_174dc, align 4
  %v12_174dc = add i32 %v0_174c0, 44
  %v13_174dc = inttoptr i32 %v12_174dc to i32*
  %v14_174dc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_174dc, i32* %v13_174dc, align 4
  %v15_174dc = add i32 %v0_174c0, 48
  store i32 %v15_174dc, i32* @r0, align 4
  %v3_174e0 = load i32, i32* %r2.global-to-local, align 4
  %v4_174e0 = add i32 %v3_174e0, -16
  store i32 %v4_174e0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_174d4, %bb136
  %v3_174f0102111 = phi i32 [ %v15_174dc, %bb136 ], [ %v12_174c8, %dec_label_pc_174d4 ]
  %v0_174e8.pre = phi i32 [ %v4_174e0, %bb136 ], [ %v1_174cc, %dec_label_pc_174d4 ]
  %v2_174e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_174e4, i32* @r4, align 4
  br label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %dec_label_pc_174b0, %bb137
  %v3_174f0101 = phi i32 [ %v0_174c094, %dec_label_pc_174b0 ], [ %v3_174f0102111, %bb137 ]
  %v0_174e8 = phi i32 [ %v1_174b0, %dec_label_pc_174b0 ], [ %v0_174e8.pre, %bb137 ]
  %v1_174e8 = add i32 %v0_174e8, 20
  store i32 %v1_174e8, i32* %r2.global-to-local, align 4
  %v3_174e8 = sub i32 0, %v0_174e8
  %v4_174e8 = and i32 %v1_174e8, %v3_174e8
  %v5_174e8 = icmp slt i32 %v4_174e8, 0
  store i1 %v5_174e8, i1* %cpsr_v.global-to-local, align 1
  %v6_174e8 = icmp slt i32 %v1_174e8, 0
  store i1 %v6_174e8, i1* %cpsr_n.global-to-local, align 1
  %v7_174e8 = icmp eq i32 %v1_174e8, 0
  store i1 %v7_174e8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_174ec

dec_label_pc_174ec:                               ; preds = %.thread115, %dec_label_pc_174e8
  %v0_174fc.pre157 = phi i32 [ %v0_174fc.pre, %.thread115 ], [ %v1_174e8, %dec_label_pc_174e8 ]
  %v3_174f0 = phi i32 [ %v3_174f099116, %.thread115 ], [ %v3_174f0101, %dec_label_pc_174e8 ]
  %v1_174f4 = phi i1 [ %v1_174f8, %.thread115 ], [ %v5_174e8, %dec_label_pc_174e8 ]
  %v0_174f4 = phi i1 [ %v0_174f8, %.thread115 ], [ %v6_174e8, %dec_label_pc_174e8 ]
  %v2_174ec = xor i1 %v1_174f4, %v0_174f4
  br i1 %v2_174ec, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_174ec
  %v3_174ec = load i32, i32* @r1, align 4
  %v4_174ec = inttoptr i32 %v3_174ec to i32*
  %v5_174ec = load i32, i32* %v4_174ec, align 4
  store i32 %v5_174ec, i32* @r3, align 4
  %v6_174ec = add i32 %v3_174ec, 4
  %v7_174ec = inttoptr i32 %v6_174ec to i32*
  %v8_174ec = load i32, i32* %v7_174ec, align 4
  store i32 %v8_174ec, i32* @ip, align 4
  %v9_174ec = add i32 %v3_174ec, 8
  %v10_174ec = inttoptr i32 %v9_174ec to i32*
  %v11_174ec = load i32, i32* %v10_174ec, align 4
  store i32 %v11_174ec, i32* %lr.global-to-local, align 4
  %v12_174ec = add i32 %v3_174ec, 12
  store i32 %v12_174ec, i32* @r1, align 4
  %v4_174f0 = inttoptr i32 %v3_174f0 to i32*
  store i32 %v5_174ec, i32* %v4_174f0, align 4
  %v6_174f0 = add i32 %v3_174f0, 4
  %v7_174f0 = inttoptr i32 %v6_174f0 to i32*
  %v8_174f0 = load i32, i32* @ip, align 4
  store i32 %v8_174f0, i32* %v7_174f0, align 4
  %v9_174f0 = add i32 %v3_174f0, 8
  %v10_174f0 = inttoptr i32 %v9_174f0 to i32*
  %v11_174f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_174f0, i32* %v10_174f0, align 4
  %v12_174f0 = add i32 %v3_174f0, 12
  store i32 %v12_174f0, i32* @r0, align 4
  %v3_174f4 = load i32, i32* %r2.global-to-local, align 4
  %v4_174f4 = add i32 %v3_174f4, -12
  store i32 %v4_174f4, i32* %r2.global-to-local, align 4
  %v6_174f4 = sub i32 11, %v3_174f4
  %v7_174f4 = and i32 %v6_174f4, %v3_174f4
  %v8_174f4 = icmp slt i32 %v7_174f4, 0
  store i1 %v8_174f4, i1* %cpsr_v.global-to-local, align 1
  %v9_174f4 = icmp slt i32 %v4_174f4, 0
  store i1 %v9_174f4, i1* %cpsr_n.global-to-local, align 1
  %v10_174f4 = icmp eq i32 %v3_174f4, 12
  store i1 %v10_174f4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_174ec, %bb138
  %v0_174fc.pre = phi i32 [ %v4_174f4, %bb138 ], [ %v0_174fc.pre157, %dec_label_pc_174ec ]
  %v3_174f099116 = phi i32 [ %v12_174f0, %bb138 ], [ %v3_174f0, %dec_label_pc_174ec ]
  %v1_174f8 = phi i1 [ %v8_174f4, %bb138 ], [ %v1_174f4, %dec_label_pc_174ec ]
  %v0_174f8 = phi i1 [ %v9_174f4, %bb138 ], [ %v0_174f4, %dec_label_pc_174ec ]
  %v2_174f8 = xor i1 %v1_174f8, %v0_174f8
  br i1 %v2_174f8, label %dec_label_pc_174fc, label %dec_label_pc_174ec

dec_label_pc_174fc:                               ; preds = %.thread115, %dec_label_pc_174a8
  %v4_1750c = phi i32 [ %v0_174c094, %dec_label_pc_174a8 ], [ %v3_174f099116, %.thread115 ]
  %v0_174fc = phi i32 [ %v1_174a8, %dec_label_pc_174a8 ], [ %v0_174fc.pre, %.thread115 ]
  %v1_174fc = add i32 %v0_174fc, 8
  store i32 %v1_174fc, i32* %r2.global-to-local, align 4
  %v3_174fc = sub i32 0, %v0_174fc
  %v4_174fc = and i32 %v1_174fc, %v3_174fc
  %v5_174fc = icmp slt i32 %v4_174fc, 0
  store i1 %v5_174fc, i1* %cpsr_v.global-to-local, align 1
  %v6_174fc = icmp slt i32 %v1_174fc, 0
  store i1 %v6_174fc, i1* %cpsr_n.global-to-local, align 1
  %v7_174fc = icmp eq i32 %v1_174fc, 0
  store i1 %v7_174fc, i1* %cpsr_z.global-to-local, align 1
  %v2_17500 = xor i1 %v6_174fc, %v5_174fc
  br i1 %v2_17500, label %bb140, label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_174fc
  %v1_17504 = add i32 %v0_174fc, 4
  store i32 %v1_17504, i32* %r2.global-to-local, align 4
  %v3_17504 = sub i32 -5, %v0_174fc
  %v4_17504 = and i32 %v3_17504, %v1_174fc
  %v5_17504 = icmp slt i32 %v4_17504, 0
  store i1 %v5_17504, i1* %cpsr_v.global-to-local, align 1
  %v6_17504 = icmp slt i32 %v1_17504, 0
  store i1 %v6_17504, i1* %cpsr_n.global-to-local, align 1
  %v7_17504 = icmp eq i32 %v1_174fc, 4
  store i1 %v7_17504, i1* %cpsr_z.global-to-local, align 1
  %v2_17508 = xor i1 %v6_17504, %v5_17504
  %v3_17508 = load i32, i32* @r1, align 4
  %v4_17508 = inttoptr i32 %v3_17508 to i32*
  %v5_17508 = load i32, i32* %v4_17508, align 4
  store i32 %v5_17508, i32* @r3, align 4
  %v7_17508 = add i32 %v3_17508, 4
  br i1 %v2_17508, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_17504
  store i32 %v7_17508, i32* @r1, align 4
  %v5_1750c = inttoptr i32 %v4_1750c to i32*
  store i32 %v5_17508, i32* %v5_1750c, align 4
  %v6_1750c = load i32, i32* @r0, align 4
  %v7_1750c = add i32 %v6_1750c, 4
  store i32 %v7_1750c, i32* @r0, align 4
  %v0_1751c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_17504
  %v7_17510 = inttoptr i32 %v7_17508 to i32*
  %v8_17510 = load i32, i32* %v7_17510, align 4
  store i32 %v8_17510, i32* @ip, align 4
  %v9_17510 = add i32 %v3_17508, 8
  store i32 %v9_17510, i32* @r1, align 4
  %v4_17514 = inttoptr i32 %v4_1750c to i32*
  store i32 %v5_17508, i32* %v4_17514, align 4
  %v6_17514 = add i32 %v4_1750c, 4
  %v7_17514 = inttoptr i32 %v6_17514 to i32*
  %v8_17514 = load i32, i32* @ip, align 4
  store i32 %v8_17514, i32* %v7_17514, align 4
  %v9_17514 = add i32 %v4_1750c, 8
  store i32 %v9_17514, i32* @r0, align 4
  %v3_17518 = load i32, i32* %r2.global-to-local, align 4
  %v4_17518 = add i32 %v3_17518, -4
  store i32 %v4_17518, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_174fc, %bb, %dec_label_pc_176cc, %dec_label_pc_17660, %dec_label_pc_175f4, %bb139
  %v0_1751c = phi i32 [ %v0_1751c.pre, %.thread122 ], [ %v2_1756c, %.thread128 ], [ %v1_174fc, %dec_label_pc_174fc ], [ %v2_17490, %bb ], [ %v0_1751c61, %dec_label_pc_176cc ], [ %v0_1751c60, %dec_label_pc_17660 ], [ %v0_1751c59, %dec_label_pc_175f4 ], [ %v4_17518, %bb139 ]
  %v1_1751c = add i32 %v0_1751c, 4
  store i32 %v1_1751c, i32* %r2.global-to-local, align 4
  %v3_1751c = sub i32 0, %v0_1751c
  %v4_1751c = and i32 %v1_1751c, %v3_1751c
  %v5_1751c = icmp slt i32 %v4_1751c, 0
  store i1 %v5_1751c, i1* %cpsr_v.global-to-local, align 1
  %v6_1751c = icmp slt i32 %v1_1751c, 0
  store i1 %v6_1751c, i1* %cpsr_n.global-to-local, align 1
  %v7_1751c = icmp eq i32 %v1_1751c, 0
  store i1 %v7_1751c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1751c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_17524.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_17520 = load i8*, i8** %stack_var_-8, align 4
  %v4_17520 = ptrtoint i8* %v3_17520 to i32
  store i32 %v4_17520, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_17524 = phi i32 [ %v0_17524.pre, %bb140.bb142_crit_edge ], [ %v8_1748c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1751c, i32 %v0_17524)
  %v0_17528 = load i32, i32* %r2.global-to-local, align 4
  %v1_17528 = add i32 %v0_17528, -2
  %v3_17528 = sub i32 1, %v0_17528
  %v4_17528 = and i32 %v3_17528, %v0_17528
  %v5_17528 = icmp slt i32 %v4_17528, 0
  store i1 %v5_17528, i1* %cpsr_v.global-to-local, align 1
  %v6_17528 = icmp slt i32 %v1_17528, 0
  store i1 %v6_17528, i1* %cpsr_n.global-to-local, align 1
  %v7_17528 = icmp eq i32 %v0_17528, 2
  store i1 %v7_17528, i1* %cpsr_z.global-to-local, align 1
  %v0_1752c = load i32, i32* @r1, align 4
  %v1_1752c = inttoptr i32 %v0_1752c to i8*
  %v2_1752c = load i8, i8* %v1_1752c, align 1
  %v5_1752c = add i32 %v0_1752c, 1
  store i32 %v5_1752c, i32* %r1.global-to-local, align 4
  %v2_17530 = load i32, i32* @r0, align 4
  %v3_17530 = inttoptr i32 %v2_17530 to i8*
  store i8 %v2_1752c, i8* %v3_17530, align 1
  %v4_17530 = load i32, i32* @r0, align 4
  %v5_17530 = add i32 %v4_17530, 1
  store i32 %v5_17530, i32* %r0.global-to-local, align 4
  %v0_17534 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17534 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17534 = xor i1 %v0_17534, %v1_17534
  br i1 %v2_17534, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_17534 = load i32, i32* %r1.global-to-local, align 4
  %v4_17534 = inttoptr i32 %v3_17534 to i8*
  %v5_17534 = load i8, i8* %v4_17534, align 1
  %v8_17534 = add i32 %v3_17534, 1
  store i32 %v8_17534, i32* %r1.global-to-local, align 4
  %v6_17538 = inttoptr i32 %v5_17530 to i8*
  store i8 %v5_17534, i8* %v6_17538, align 1
  %v7_17538 = load i32, i32* %r0.global-to-local, align 4
  %v8_17538 = add i32 %v7_17538, 1
  store i32 %v8_17538, i32* %r0.global-to-local, align 4
  %v1_1753c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1753c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_17540 = phi i32 [ %v8_17538, %bb143 ], [ %v5_17530, %bb142 ]
  %v2_17540 = phi i1 [ %v2_1753c.pre, %bb143 ], [ %v1_17534, %bb142 ]
  %v1_17540 = phi i1 [ %v1_1753c.pre, %bb143 ], [ %v0_17534, %bb142 ]
  %v0_1753c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1753c = xor i1 %v2_17540, %v1_17540
  %v4_1753c = or i1 %v0_1753c, %v3_1753c
  br i1 %v4_1753c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1753c = load i32, i32* %r1.global-to-local, align 4
  %v6_1753c = inttoptr i32 %v5_1753c to i8*
  %v7_1753c = load i8, i8* %v6_1753c, align 1
  %v10_1753c = add i32 %v5_1753c, 1
  store i32 %v10_1753c, i32* %r1.global-to-local, align 4
  %v8_17540 = inttoptr i32 %v7_17540 to i8*
  store i8 %v7_1753c, i8* %v8_17540, align 1
  %v9_17540 = load i32, i32* %r0.global-to-local, align 4
  %v10_17540 = add i32 %v9_17540, 1
  store i32 %v10_17540, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_17544 = load i8*, i8** %stack_var_-8, align 4
  %v3_17544 = ptrtoint i8* %v2_17544 to i32
  store i32 %v3_17544, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1748c)
  %v0_1754c.pre = load i32, i32* @ip, align 4
  %v0_17554.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_17558.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %dec_label_pc_17498, %.thread126
  %v2_17558 = phi i32 [ %v1_17480, %dec_label_pc_17498 ], [ %v2_17558.pre, %.thread126 ]
  %v0_17554 = phi i32 [ %v0_17480, %dec_label_pc_17498 ], [ %v0_17554.pre, %.thread126 ]
  %v0_1754c = phi i32 [ %v1_17498, %dec_label_pc_17498 ], [ %v0_1754c.pre, %.thread126 ]
  %v1_1754c = sub i32 4, %v0_1754c
  store i32 %v1_1754c, i32* @ip, align 4
  %v1_17550 = add i32 %v1_1754c, -2
  %v3_17550 = sub i32 1, %v1_1754c
  %v4_17550 = and i32 %v3_17550, %v1_1754c
  %v5_17550 = icmp slt i32 %v4_17550, 0
  store i1 %v5_17550, i1* %cpsr_v.global-to-local, align 1
  %v6_17550 = icmp slt i32 %v1_17550, 0
  store i1 %v6_17550, i1* %cpsr_n.global-to-local, align 1
  %v7_17550 = icmp eq i32 %v1_1754c, 2
  store i1 %v7_17550, i1* %cpsr_z.global-to-local, align 1
  %v1_17554 = inttoptr i32 %v0_17554 to i8*
  %v2_17554 = load i8, i8* %v1_17554, align 1
  %v3_17554 = zext i8 %v2_17554 to i32
  store i32 %v3_17554, i32* @r3, align 4
  %v5_17554 = add i32 %v0_17554, 1
  store i32 %v5_17554, i32* @r1, align 4
  %v3_17558 = inttoptr i32 %v2_17558 to i8*
  store i8 %v2_17554, i8* %v3_17558, align 1
  %v4_17558 = load i32, i32* @r0, align 4
  %v5_17558 = add i32 %v4_17558, 1
  store i32 %v5_17558, i32* @r0, align 4
  %v0_1755c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1755c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1755c = xor i1 %v0_1755c, %v1_1755c
  br i1 %v2_1755c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1754c
  %v3_1755c = load i32, i32* @r1, align 4
  %v4_1755c = inttoptr i32 %v3_1755c to i8*
  %v5_1755c = load i8, i8* %v4_1755c, align 1
  %v6_1755c = zext i8 %v5_1755c to i32
  store i32 %v6_1755c, i32* @r3, align 4
  %v8_1755c = add i32 %v3_1755c, 1
  store i32 %v8_1755c, i32* @r1, align 4
  %v6_17560 = inttoptr i32 %v5_17558 to i8*
  store i8 %v5_1755c, i8* %v6_17560, align 1
  %v7_17560 = load i32, i32* @r0, align 4
  %v8_17560 = add i32 %v7_17560, 1
  store i32 %v8_17560, i32* @r0, align 4
  %v1_17564.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17564.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1754c, %bb145
  %v7_17568 = phi i32 [ %v8_17560, %bb145 ], [ %v5_17558, %dec_label_pc_1754c ]
  %v2_17568 = phi i1 [ %v2_17564.pre, %bb145 ], [ %v1_1755c, %dec_label_pc_1754c ]
  %v1_17568 = phi i1 [ %v1_17564.pre, %bb145 ], [ %v0_1755c, %dec_label_pc_1754c ]
  %v0_17564 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17564 = xor i1 %v2_17568, %v1_17568
  %v4_17564 = or i1 %v0_17564, %v3_17564
  br i1 %v4_17564, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_17564 = load i32, i32* @r1, align 4
  %v6_17564 = inttoptr i32 %v5_17564 to i8*
  %v7_17564 = load i8, i8* %v6_17564, align 1
  %v8_17564 = zext i8 %v7_17564 to i32
  store i32 %v8_17564, i32* @r3, align 4
  %v10_17564 = add i32 %v5_17564, 1
  store i32 %v10_17564, i32* @r1, align 4
  %v8_17568 = inttoptr i32 %v7_17568 to i8*
  store i8 %v7_17564, i8* %v8_17568, align 1
  %v9_17568 = load i32, i32* @r0, align 4
  %v10_17568 = add i32 %v9_17568, 1
  store i32 %v10_17568, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1769c77 = phi i32 [ %v10_17568, %bb146 ], [ %v7_17568, %.thread127 ]
  %v0_1756c = load i32, i32* %r2.global-to-local, align 4
  %v1_1756c = load i32, i32* @ip, align 4
  %v2_1756c = sub i32 %v0_1756c, %v1_1756c
  store i32 %v2_1756c, i32* %r2.global-to-local, align 4
  %v4_1756c = xor i32 %v1_1756c, %v0_1756c
  %v5_1756c = xor i32 %v2_1756c, %v0_1756c
  %v6_1756c = and i32 %v5_1756c, %v4_1756c
  %v7_1756c = icmp slt i32 %v6_1756c, 0
  store i1 %v7_1756c, i1* %cpsr_v.global-to-local, align 1
  %v8_1756c = icmp slt i32 %v2_1756c, 0
  store i1 %v8_1756c, i1* %cpsr_n.global-to-local, align 1
  %v9_1756c = icmp eq i32 %v0_1756c, %v1_1756c
  store i1 %v9_1756c, i1* %cpsr_z.global-to-local, align 1
  %v2_17570 = xor i1 %v8_1756c, %v7_1756c
  br i1 %v2_17570, label %bb140, label %dec_label_pc_17574

dec_label_pc_17574:                               ; preds = %.thread128
  %v0_17574 = load i32, i32* @r1, align 4
  %v1_17574 = urem i32 %v0_17574, 4
  store i32 %v1_17574, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17574 = icmp eq i32 %v1_17574, 0
  store i1 %v2_17574, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_17574 to i2
  br i1 %v2_17574, label %dec_label_pc_174a8, label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_174a0, %dec_label_pc_17574
  %v0_1769c76 = phi i32 [ %v1_17480, %dec_label_pc_174a0 ], [ %v0_1769c77, %dec_label_pc_17574 ]
  %v0_17604 = phi i32 [ %v2_17490, %dec_label_pc_174a0 ], [ %v2_1756c, %dec_label_pc_17574 ]
  %v0_17584.off0 = phi i2 [ %extract.t, %dec_label_pc_174a0 ], [ %extract.t131, %dec_label_pc_17574 ]
  %v0_1757c = phi i32 [ %v0_17480, %dec_label_pc_174a0 ], [ %v0_17574, %dec_label_pc_17574 ]
  %v1_1757c = and i32 %v0_1757c, -4
  store i32 %v1_1757c, i32* %r1.global-to-local, align 4
  %v1_17580 = inttoptr i32 %v1_1757c to i32*
  %v2_17580 = load i32, i32* %v1_17580, align 4
  store i32 %v2_17580, i32* %lr.global-to-local, align 4
  %v4_17580 = add i32 %v1_1757c, 4
  store i32 %v4_17580, i32* %r1.global-to-local, align 4
  %v1_175fc = add i32 %v0_17604, -12
  %v3_175fc = sub i32 11, %v0_17604
  %v4_175fc = and i32 %v3_175fc, %v0_17604
  %v5_175fc = icmp slt i32 %v4_175fc, 0
  store i1 %v5_175fc, i1* %cpsr_v.global-to-local, align 1
  %v6_175fc = icmp slt i32 %v1_175fc, 0
  store i1 %v6_175fc, i1* %cpsr_n.global-to-local, align 1
  %v7_175fc = icmp eq i32 %v0_17604, 12
  store i1 %v7_175fc, i1* %cpsr_z.global-to-local, align 1
  %v2_17600 = xor i1 %v6_175fc, %v5_175fc
  switch i2 %v0_17584.off0, label %dec_label_pc_17590 [
    i2 -1, label %dec_label_pc_17668
    i2 -2, label %dec_label_pc_175fc
  ]

dec_label_pc_17590:                               ; preds = %dec_label_pc_1757c
  br i1 %v2_17600, label %dec_label_pc_175dc, label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_17590
  store i32 %v1_175fc, i32* %r2.global-to-local, align 4
  %v3_1759c = load i32, i32* @r4, align 4
  store i32 %v3_1759c, i32* %stack_var_-16, align 4
  %v6_1759c = load i32, i32* @r5, align 4
  store i32 %v6_1759c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_175a0

dec_label_pc_175a0:                               ; preds = %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge, %dec_label_pc_17598
  %v0_175c4 = phi i32 [ %v12_175c4, %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge ], [ %v0_1769c76, %dec_label_pc_17598 ]
  %v0_175a4 = phi i32 [ %v0_175a4.pre, %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge ], [ %v4_17580, %dec_label_pc_17598 ]
  %v0_175a0 = phi i32 [ %v0_175a0.pre, %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge ], [ %v2_17580, %dec_label_pc_17598 ]
  %v3_175a0 = udiv i32 %v0_175a0, 256
  %v1_175a4 = inttoptr i32 %v0_175a4 to i32*
  %v2_175a4 = load i32, i32* %v1_175a4, align 4
  store i32 %v2_175a4, i32* %r4.global-to-local, align 4
  %v3_175a4 = add i32 %v0_175a4, 4
  %v4_175a4 = inttoptr i32 %v3_175a4 to i32*
  %v5_175a4 = load i32, i32* %v4_175a4, align 4
  store i32 %v5_175a4, i32* %r5.global-to-local, align 4
  %v6_175a4 = add i32 %v0_175a4, 8
  %v7_175a4 = inttoptr i32 %v6_175a4 to i32*
  %v8_175a4 = load i32, i32* %v7_175a4, align 4
  store i32 %v8_175a4, i32* %ip.global-to-local, align 4
  %v9_175a4 = add i32 %v0_175a4, 12
  %v10_175a4 = inttoptr i32 %v9_175a4 to i32*
  %v11_175a4 = load i32, i32* %v10_175a4, align 4
  store i32 %v11_175a4, i32* %lr.global-to-local, align 4
  %v12_175a4 = add i32 %v0_175a4, 16
  store i32 %v12_175a4, i32* %r1.global-to-local, align 4
  %v4_175a8 = mul i32 %v2_175a4, 16777216
  %v5_175a8 = or i32 %v4_175a8, %v3_175a0
  store i32 %v5_175a8, i32* @r3, align 4
  %v3_175ac = udiv i32 %v2_175a4, 256
  %v4_175b0 = mul i32 %v5_175a4, 16777216
  %v5_175b0 = or i32 %v4_175b0, %v3_175ac
  store i32 %v5_175b0, i32* %r4.global-to-local, align 4
  %v3_175b4 = udiv i32 %v5_175a4, 256
  %v4_175b8 = mul i32 %v8_175a4, 16777216
  %v5_175b8 = or i32 %v4_175b8, %v3_175b4
  store i32 %v5_175b8, i32* %r5.global-to-local, align 4
  %v3_175bc = udiv i32 %v8_175a4, 256
  %v4_175c0 = mul i32 %v11_175a4, 16777216
  %v5_175c0 = or i32 %v4_175c0, %v3_175bc
  store i32 %v5_175c0, i32* @ip, align 4
  %v1_175c4 = inttoptr i32 %v0_175c4 to i32*
  store i32 %v5_175a8, i32* %v1_175c4, align 4
  %v3_175c4 = add i32 %v0_175c4, 4
  %v4_175c4 = inttoptr i32 %v3_175c4 to i32*
  %v5_175c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_175c4, i32* %v4_175c4, align 4
  %v6_175c4 = add i32 %v0_175c4, 8
  %v7_175c4 = inttoptr i32 %v6_175c4 to i32*
  %v8_175c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_175c4, i32* %v7_175c4, align 4
  %v9_175c4 = add i32 %v0_175c4, 12
  %v10_175c4 = inttoptr i32 %v9_175c4 to i32*
  %v11_175c4 = load i32, i32* @ip, align 4
  store i32 %v11_175c4, i32* %v10_175c4, align 4
  %v12_175c4 = add i32 %v0_175c4, 16
  store i32 %v12_175c4, i32* @r0, align 4
  %v0_175c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_175c8 = add i32 %v0_175c8, -16
  store i32 %v1_175c8, i32* %r2.global-to-local, align 4
  %v3_175c8 = sub i32 15, %v0_175c8
  %v4_175c8 = and i32 %v3_175c8, %v0_175c8
  %v5_175c8 = icmp slt i32 %v4_175c8, 0
  %v6_175c8 = icmp slt i32 %v1_175c8, 0
  %v2_175cc = xor i1 %v6_175c8, %v5_175c8
  br i1 %v2_175cc, label %dec_label_pc_175d0, label %dec_label_pc_175a0.dec_label_pc_175a0_crit_edge

dec_label_pc_175a0.dec_label_pc_175a0_crit_edge:  ; preds = %dec_label_pc_175a0
  %v0_175a0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_175a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175a0

dec_label_pc_175d0:                               ; preds = %dec_label_pc_175a0
  %v2_175d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_175d0, i32* @r4, align 4
  %v5_175d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_175d0, i32* @r5, align 4
  %v1_175d4 = add i32 %v0_175c8, -4
  store i32 %v1_175d4, i32* %r2.global-to-local, align 4
  %v3_175d4 = add i32 %v0_175c8, 2147483632
  %v4_175d4 = and i32 %v1_175d4, %v3_175d4
  %v5_175d4 = icmp slt i32 %v4_175d4, 0
  store i1 %v5_175d4, i1* %cpsr_v.global-to-local, align 1
  %v6_175d4 = icmp slt i32 %v1_175d4, 0
  store i1 %v6_175d4, i1* %cpsr_n.global-to-local, align 1
  %v7_175d4 = icmp eq i32 %v1_175d4, 0
  store i1 %v7_175d4, i1* %cpsr_z.global-to-local, align 1
  %v2_175d8 = xor i1 %v6_175d4, %v5_175d4
  br i1 %v2_175d8, label %dec_label_pc_175f4, label %dec_label_pc_175dc

dec_label_pc_175dc:                               ; preds = %dec_label_pc_175d0, %dec_label_pc_17590, %dec_label_pc_175dc
  %v1_175e8 = phi i32 [ %v4_175e8, %dec_label_pc_175dc ], [ %v12_175c4, %dec_label_pc_175d0 ], [ %v0_1769c76, %dec_label_pc_17590 ]
  %v0_175dc = load i32, i32* %lr.global-to-local, align 4
  %v3_175dc = udiv i32 %v0_175dc, 256
  store i32 %v3_175dc, i32* %ip.global-to-local, align 4
  %v0_175e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_175e0 = inttoptr i32 %v0_175e0 to i32*
  %v2_175e0 = load i32, i32* %v1_175e0, align 4
  store i32 %v2_175e0, i32* %lr.global-to-local, align 4
  %v4_175e0 = add i32 %v0_175e0, 4
  store i32 %v4_175e0, i32* %r1.global-to-local, align 4
  %v4_175e4 = mul i32 %v2_175e0, 16777216
  %v5_175e4 = or i32 %v4_175e4, %v3_175dc
  store i32 %v5_175e4, i32* @ip, align 4
  %v2_175e8 = inttoptr i32 %v1_175e8 to i32*
  store i32 %v5_175e4, i32* %v2_175e8, align 4
  %v3_175e8 = load i32, i32* @r0, align 4
  %v4_175e8 = add i32 %v3_175e8, 4
  store i32 %v4_175e8, i32* @r0, align 4
  %v0_175ec = load i32, i32* %r2.global-to-local, align 4
  %v1_175ec = add i32 %v0_175ec, -4
  store i32 %v1_175ec, i32* %r2.global-to-local, align 4
  %v3_175ec = sub i32 3, %v0_175ec
  %v4_175ec = and i32 %v3_175ec, %v0_175ec
  %v5_175ec = icmp slt i32 %v4_175ec, 0
  %v6_175ec = icmp slt i32 %v1_175ec, 0
  %v2_175f0 = xor i1 %v6_175ec, %v5_175ec
  br i1 %v2_175f0, label %dec_label_pc_175f4.loopexit, label %dec_label_pc_175dc

dec_label_pc_175f4.loopexit:                      ; preds = %dec_label_pc_175dc
  %v7_175ec = icmp eq i32 %v0_175ec, 4
  store i1 %v5_175ec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_175ec, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_175ec, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_175f4

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175f4.loopexit, %dec_label_pc_175d0
  %v0_1751c59 = phi i32 [ %v1_175ec, %dec_label_pc_175f4.loopexit ], [ %v1_175d4, %dec_label_pc_175d0 ]
  %v0_175f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_175f4 = add i32 %v0_175f4, -3
  store i32 %v1_175f4, i32* @r1, align 4
  br label %bb140

dec_label_pc_175fc:                               ; preds = %dec_label_pc_1757c
  br i1 %v2_17600, label %dec_label_pc_17648, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175fc
  store i32 %v1_175fc, i32* %r2.global-to-local, align 4
  %v3_17608 = load i32, i32* @r4, align 4
  store i32 %v3_17608, i32* %stack_var_-16, align 4
  %v6_17608 = load i32, i32* @r5, align 4
  store i32 %v6_17608, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1760c

dec_label_pc_1760c:                               ; preds = %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge, %dec_label_pc_17604
  %v0_17630 = phi i32 [ %v12_17630, %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge ], [ %v0_1769c76, %dec_label_pc_17604 ]
  %v0_17610 = phi i32 [ %v0_17610.pre, %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge ], [ %v4_17580, %dec_label_pc_17604 ]
  %v0_1760c = phi i32 [ %v0_1760c.pre, %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge ], [ %v2_17580, %dec_label_pc_17604 ]
  %v3_1760c = udiv i32 %v0_1760c, 65536
  %v1_17610 = inttoptr i32 %v0_17610 to i32*
  %v2_17610 = load i32, i32* %v1_17610, align 4
  store i32 %v2_17610, i32* %r4.global-to-local, align 4
  %v3_17610 = add i32 %v0_17610, 4
  %v4_17610 = inttoptr i32 %v3_17610 to i32*
  %v5_17610 = load i32, i32* %v4_17610, align 4
  store i32 %v5_17610, i32* %r5.global-to-local, align 4
  %v6_17610 = add i32 %v0_17610, 8
  %v7_17610 = inttoptr i32 %v6_17610 to i32*
  %v8_17610 = load i32, i32* %v7_17610, align 4
  store i32 %v8_17610, i32* %ip.global-to-local, align 4
  %v9_17610 = add i32 %v0_17610, 12
  %v10_17610 = inttoptr i32 %v9_17610 to i32*
  %v11_17610 = load i32, i32* %v10_17610, align 4
  store i32 %v11_17610, i32* %lr.global-to-local, align 4
  %v12_17610 = add i32 %v0_17610, 16
  store i32 %v12_17610, i32* %r1.global-to-local, align 4
  %v4_17614 = mul i32 %v2_17610, 65536
  %v5_17614 = or i32 %v4_17614, %v3_1760c
  store i32 %v5_17614, i32* @r3, align 4
  %v3_17618 = udiv i32 %v2_17610, 65536
  %v4_1761c = mul i32 %v5_17610, 65536
  %v5_1761c = or i32 %v4_1761c, %v3_17618
  store i32 %v5_1761c, i32* %r4.global-to-local, align 4
  %v3_17620 = udiv i32 %v5_17610, 65536
  %v4_17624 = mul i32 %v8_17610, 65536
  %v5_17624 = or i32 %v4_17624, %v3_17620
  store i32 %v5_17624, i32* %r5.global-to-local, align 4
  %v3_17628 = udiv i32 %v8_17610, 65536
  %v4_1762c = mul i32 %v11_17610, 65536
  %v5_1762c = or i32 %v4_1762c, %v3_17628
  store i32 %v5_1762c, i32* @ip, align 4
  %v1_17630 = inttoptr i32 %v0_17630 to i32*
  store i32 %v5_17614, i32* %v1_17630, align 4
  %v3_17630 = add i32 %v0_17630, 4
  %v4_17630 = inttoptr i32 %v3_17630 to i32*
  %v5_17630 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17630, i32* %v4_17630, align 4
  %v6_17630 = add i32 %v0_17630, 8
  %v7_17630 = inttoptr i32 %v6_17630 to i32*
  %v8_17630 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17630, i32* %v7_17630, align 4
  %v9_17630 = add i32 %v0_17630, 12
  %v10_17630 = inttoptr i32 %v9_17630 to i32*
  %v11_17630 = load i32, i32* @ip, align 4
  store i32 %v11_17630, i32* %v10_17630, align 4
  %v12_17630 = add i32 %v0_17630, 16
  store i32 %v12_17630, i32* @r0, align 4
  %v0_17634 = load i32, i32* %r2.global-to-local, align 4
  %v1_17634 = add i32 %v0_17634, -16
  store i32 %v1_17634, i32* %r2.global-to-local, align 4
  %v3_17634 = sub i32 15, %v0_17634
  %v4_17634 = and i32 %v3_17634, %v0_17634
  %v5_17634 = icmp slt i32 %v4_17634, 0
  %v6_17634 = icmp slt i32 %v1_17634, 0
  %v2_17638 = xor i1 %v6_17634, %v5_17634
  br i1 %v2_17638, label %dec_label_pc_1763c, label %dec_label_pc_1760c.dec_label_pc_1760c_crit_edge

dec_label_pc_1760c.dec_label_pc_1760c_crit_edge:  ; preds = %dec_label_pc_1760c
  %v0_1760c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17610.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1760c

dec_label_pc_1763c:                               ; preds = %dec_label_pc_1760c
  %v2_1763c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1763c, i32* @r4, align 4
  %v5_1763c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1763c, i32* @r5, align 4
  %v1_17640 = add i32 %v0_17634, -4
  store i32 %v1_17640, i32* %r2.global-to-local, align 4
  %v3_17640 = add i32 %v0_17634, 2147483632
  %v4_17640 = and i32 %v1_17640, %v3_17640
  %v5_17640 = icmp slt i32 %v4_17640, 0
  store i1 %v5_17640, i1* %cpsr_v.global-to-local, align 1
  %v6_17640 = icmp slt i32 %v1_17640, 0
  store i1 %v6_17640, i1* %cpsr_n.global-to-local, align 1
  %v7_17640 = icmp eq i32 %v1_17640, 0
  store i1 %v7_17640, i1* %cpsr_z.global-to-local, align 1
  %v2_17644 = xor i1 %v6_17640, %v5_17640
  br i1 %v2_17644, label %dec_label_pc_17660, label %dec_label_pc_17648

dec_label_pc_17648:                               ; preds = %dec_label_pc_1763c, %dec_label_pc_175fc, %dec_label_pc_17648
  %v1_17654 = phi i32 [ %v4_17654, %dec_label_pc_17648 ], [ %v12_17630, %dec_label_pc_1763c ], [ %v0_1769c76, %dec_label_pc_175fc ]
  %v0_17648 = load i32, i32* %lr.global-to-local, align 4
  %v3_17648 = udiv i32 %v0_17648, 65536
  store i32 %v3_17648, i32* %ip.global-to-local, align 4
  %v0_1764c = load i32, i32* %r1.global-to-local, align 4
  %v1_1764c = inttoptr i32 %v0_1764c to i32*
  %v2_1764c = load i32, i32* %v1_1764c, align 4
  store i32 %v2_1764c, i32* %lr.global-to-local, align 4
  %v4_1764c = add i32 %v0_1764c, 4
  store i32 %v4_1764c, i32* %r1.global-to-local, align 4
  %v4_17650 = mul i32 %v2_1764c, 65536
  %v5_17650 = or i32 %v4_17650, %v3_17648
  store i32 %v5_17650, i32* @ip, align 4
  %v2_17654 = inttoptr i32 %v1_17654 to i32*
  store i32 %v5_17650, i32* %v2_17654, align 4
  %v3_17654 = load i32, i32* @r0, align 4
  %v4_17654 = add i32 %v3_17654, 4
  store i32 %v4_17654, i32* @r0, align 4
  %v0_17658 = load i32, i32* %r2.global-to-local, align 4
  %v1_17658 = add i32 %v0_17658, -4
  store i32 %v1_17658, i32* %r2.global-to-local, align 4
  %v3_17658 = sub i32 3, %v0_17658
  %v4_17658 = and i32 %v3_17658, %v0_17658
  %v5_17658 = icmp slt i32 %v4_17658, 0
  %v6_17658 = icmp slt i32 %v1_17658, 0
  %v2_1765c = xor i1 %v6_17658, %v5_17658
  br i1 %v2_1765c, label %dec_label_pc_17660.loopexit, label %dec_label_pc_17648

dec_label_pc_17660.loopexit:                      ; preds = %dec_label_pc_17648
  %v7_17658 = icmp eq i32 %v0_17658, 4
  store i1 %v5_17658, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_17658, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_17658, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %dec_label_pc_17660.loopexit, %dec_label_pc_1763c
  %v0_1751c60 = phi i32 [ %v1_17658, %dec_label_pc_17660.loopexit ], [ %v1_17640, %dec_label_pc_1763c ]
  %v0_17660 = load i32, i32* %r1.global-to-local, align 4
  %v1_17660 = add i32 %v0_17660, -2
  store i32 %v1_17660, i32* @r1, align 4
  br label %bb140

dec_label_pc_17668:                               ; preds = %dec_label_pc_1757c
  br i1 %v2_17600, label %dec_label_pc_176b4, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_17668
  store i32 %v1_175fc, i32* %r2.global-to-local, align 4
  %v3_17674 = load i32, i32* @r4, align 4
  store i32 %v3_17674, i32* %stack_var_-16, align 4
  %v6_17674 = load i32, i32* @r5, align 4
  store i32 %v6_17674, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17678

dec_label_pc_17678:                               ; preds = %dec_label_pc_17678.dec_label_pc_17678_crit_edge, %dec_label_pc_17670
  %v0_1769c = phi i32 [ %v12_1769c, %dec_label_pc_17678.dec_label_pc_17678_crit_edge ], [ %v0_1769c76, %dec_label_pc_17670 ]
  %v0_1767c = phi i32 [ %v0_1767c.pre, %dec_label_pc_17678.dec_label_pc_17678_crit_edge ], [ %v4_17580, %dec_label_pc_17670 ]
  %v0_17678 = phi i32 [ %v0_17678.pre, %dec_label_pc_17678.dec_label_pc_17678_crit_edge ], [ %v2_17580, %dec_label_pc_17670 ]
  %v3_17678 = udiv i32 %v0_17678, 16777216
  %v1_1767c = inttoptr i32 %v0_1767c to i32*
  %v2_1767c = load i32, i32* %v1_1767c, align 4
  store i32 %v2_1767c, i32* %r4.global-to-local, align 4
  %v3_1767c = add i32 %v0_1767c, 4
  %v4_1767c = inttoptr i32 %v3_1767c to i32*
  %v5_1767c = load i32, i32* %v4_1767c, align 4
  store i32 %v5_1767c, i32* %r5.global-to-local, align 4
  %v6_1767c = add i32 %v0_1767c, 8
  %v7_1767c = inttoptr i32 %v6_1767c to i32*
  %v8_1767c = load i32, i32* %v7_1767c, align 4
  store i32 %v8_1767c, i32* %ip.global-to-local, align 4
  %v9_1767c = add i32 %v0_1767c, 12
  %v10_1767c = inttoptr i32 %v9_1767c to i32*
  %v11_1767c = load i32, i32* %v10_1767c, align 4
  store i32 %v11_1767c, i32* %lr.global-to-local, align 4
  %v12_1767c = add i32 %v0_1767c, 16
  store i32 %v12_1767c, i32* %r1.global-to-local, align 4
  %v4_17680 = mul i32 %v2_1767c, 256
  %v5_17680 = or i32 %v4_17680, %v3_17678
  store i32 %v5_17680, i32* @r3, align 4
  %v3_17684 = udiv i32 %v2_1767c, 16777216
  %v4_17688 = mul i32 %v5_1767c, 256
  %v5_17688 = or i32 %v4_17688, %v3_17684
  store i32 %v5_17688, i32* %r4.global-to-local, align 4
  %v3_1768c = udiv i32 %v5_1767c, 16777216
  %v4_17690 = mul i32 %v8_1767c, 256
  %v5_17690 = or i32 %v4_17690, %v3_1768c
  store i32 %v5_17690, i32* %r5.global-to-local, align 4
  %v3_17694 = udiv i32 %v8_1767c, 16777216
  %v4_17698 = mul i32 %v11_1767c, 256
  %v5_17698 = or i32 %v4_17698, %v3_17694
  store i32 %v5_17698, i32* @ip, align 4
  %v1_1769c = inttoptr i32 %v0_1769c to i32*
  store i32 %v5_17680, i32* %v1_1769c, align 4
  %v3_1769c = add i32 %v0_1769c, 4
  %v4_1769c = inttoptr i32 %v3_1769c to i32*
  %v5_1769c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1769c, i32* %v4_1769c, align 4
  %v6_1769c = add i32 %v0_1769c, 8
  %v7_1769c = inttoptr i32 %v6_1769c to i32*
  %v8_1769c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1769c, i32* %v7_1769c, align 4
  %v9_1769c = add i32 %v0_1769c, 12
  %v10_1769c = inttoptr i32 %v9_1769c to i32*
  %v11_1769c = load i32, i32* @ip, align 4
  store i32 %v11_1769c, i32* %v10_1769c, align 4
  %v12_1769c = add i32 %v0_1769c, 16
  store i32 %v12_1769c, i32* @r0, align 4
  %v0_176a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_176a0 = add i32 %v0_176a0, -16
  store i32 %v1_176a0, i32* %r2.global-to-local, align 4
  %v3_176a0 = sub i32 15, %v0_176a0
  %v4_176a0 = and i32 %v3_176a0, %v0_176a0
  %v5_176a0 = icmp slt i32 %v4_176a0, 0
  %v6_176a0 = icmp slt i32 %v1_176a0, 0
  %v2_176a4 = xor i1 %v6_176a0, %v5_176a0
  br i1 %v2_176a4, label %dec_label_pc_176a8, label %dec_label_pc_17678.dec_label_pc_17678_crit_edge

dec_label_pc_17678.dec_label_pc_17678_crit_edge:  ; preds = %dec_label_pc_17678
  %v0_17678.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1767c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17678

dec_label_pc_176a8:                               ; preds = %dec_label_pc_17678
  %v2_176a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_176a8, i32* @r4, align 4
  %v5_176a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_176a8, i32* @r5, align 4
  %v1_176ac = add i32 %v0_176a0, -4
  store i32 %v1_176ac, i32* %r2.global-to-local, align 4
  %v3_176ac = add i32 %v0_176a0, 2147483632
  %v4_176ac = and i32 %v1_176ac, %v3_176ac
  %v5_176ac = icmp slt i32 %v4_176ac, 0
  store i1 %v5_176ac, i1* %cpsr_v.global-to-local, align 1
  %v6_176ac = icmp slt i32 %v1_176ac, 0
  store i1 %v6_176ac, i1* %cpsr_n.global-to-local, align 1
  %v7_176ac = icmp eq i32 %v1_176ac, 0
  store i1 %v7_176ac, i1* %cpsr_z.global-to-local, align 1
  %v2_176b0 = xor i1 %v6_176ac, %v5_176ac
  br i1 %v2_176b0, label %dec_label_pc_176cc, label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176a8, %dec_label_pc_17668, %dec_label_pc_176b4
  %v1_176c0 = phi i32 [ %v4_176c0, %dec_label_pc_176b4 ], [ %v12_1769c, %dec_label_pc_176a8 ], [ %v0_1769c76, %dec_label_pc_17668 ]
  %v0_176b4 = load i32, i32* %lr.global-to-local, align 4
  %v3_176b4 = udiv i32 %v0_176b4, 16777216
  store i32 %v3_176b4, i32* %ip.global-to-local, align 4
  %v0_176b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_176b8 = inttoptr i32 %v0_176b8 to i32*
  %v2_176b8 = load i32, i32* %v1_176b8, align 4
  store i32 %v2_176b8, i32* %lr.global-to-local, align 4
  %v4_176b8 = add i32 %v0_176b8, 4
  store i32 %v4_176b8, i32* %r1.global-to-local, align 4
  %v4_176bc = mul i32 %v2_176b8, 256
  %v5_176bc = or i32 %v4_176bc, %v3_176b4
  store i32 %v5_176bc, i32* @ip, align 4
  %v2_176c0 = inttoptr i32 %v1_176c0 to i32*
  store i32 %v5_176bc, i32* %v2_176c0, align 4
  %v3_176c0 = load i32, i32* @r0, align 4
  %v4_176c0 = add i32 %v3_176c0, 4
  store i32 %v4_176c0, i32* @r0, align 4
  %v0_176c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_176c4 = add i32 %v0_176c4, -4
  store i32 %v1_176c4, i32* %r2.global-to-local, align 4
  %v3_176c4 = sub i32 3, %v0_176c4
  %v4_176c4 = and i32 %v3_176c4, %v0_176c4
  %v5_176c4 = icmp slt i32 %v4_176c4, 0
  %v6_176c4 = icmp slt i32 %v1_176c4, 0
  %v2_176c8 = xor i1 %v6_176c4, %v5_176c4
  br i1 %v2_176c8, label %dec_label_pc_176cc.loopexit, label %dec_label_pc_176b4

dec_label_pc_176cc.loopexit:                      ; preds = %dec_label_pc_176b4
  %v7_176c4 = icmp eq i32 %v0_176c4, 4
  store i1 %v5_176c4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_176c4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_176c4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_176cc

dec_label_pc_176cc:                               ; preds = %dec_label_pc_176cc.loopexit, %dec_label_pc_176a8
  %v0_1751c61 = phi i32 [ %v1_176c4, %dec_label_pc_176cc.loopexit ], [ %v1_176ac, %dec_label_pc_176a8 ]
  %v0_176cc = load i32, i32* %r1.global-to-local, align 4
  %v1_176cc = add i32 %v0_176cc, -1
  store i32 %v1_176cc, i32* @r1, align 4
  br label %bb140

dec_label_pc_176d4:                               ; preds = %dec_label_pc_17480
  %v1_176d4 = load i32, i32* @r2, align 4
  %v2_176d4 = add i32 %v1_176d4, %v0_17480
  store i32 %v2_176d4, i32* %r1.global-to-local, align 4
  %v2_176d8 = add i32 %v1_176d4, %v1_17480
  store i32 %v2_176d8, i32* %r0.global-to-local, align 4
  %v2_176dc = add i32 %v1_176d4, -4
  store i32 %v2_176dc, i32* %r2.global-to-local, align 4
  %v4_176dc = sub i32 3, %v1_176d4
  %v5_176dc = and i32 %v4_176dc, %v1_176d4
  %v6_176dc = icmp slt i32 %v5_176dc, 0
  store i1 %v6_176dc, i1* %cpsr_v.global-to-local, align 1
  %v7_176dc = icmp slt i32 %v2_176dc, 0
  store i1 %v7_176dc, i1* %cpsr_n.global-to-local, align 1
  %v8_176dc = icmp eq i32 %v1_176d4, 4
  store i1 %v8_176dc, i1* %cpsr_z.global-to-local, align 1
  %v5_176e0 = icmp slt i32 %v1_176d4, 4
  br i1 %v5_176e0, label %bb150, label %dec_label_pc_176e4

dec_label_pc_176e4:                               ; preds = %dec_label_pc_176d4
  %v1_176e4 = urem i32 %v2_176d8, 4
  store i32 %v1_176e4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_176e4 = icmp eq i32 %v1_176e4, 0
  store i1 %v2_176e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176e4, label %dec_label_pc_176ec, label %dec_label_pc_1778c

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176e4
  %v1_176ec = urem i32 %v2_176d4, 4
  store i32 %v1_176ec, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_176ec = icmp eq i32 %v1_176ec, 0
  store i1 %v2_176ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176ec, label %dec_label_pc_176f4, label %dec_label_pc_177b8

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176ec, %dec_label_pc_177b0
  %v0_1770c37 = phi i32 [ %v2_176d8, %dec_label_pc_176ec ], [ %v0_1780020, %dec_label_pc_177b0 ]
  %v0_1770836 = phi i32 [ %v2_176d4, %dec_label_pc_176ec ], [ %v0_177b0, %dec_label_pc_177b0 ]
  %v0_176f4 = phi i32 [ %v2_176dc, %dec_label_pc_176ec ], [ %v2_177a8, %dec_label_pc_177b0 ]
  %v2_176f4 = add i32 %v0_176f4, -8
  store i32 %v2_176f4, i32* %r2.global-to-local, align 4
  %v4_176f4 = sub i32 7, %v0_176f4
  %v5_176f4 = and i32 %v4_176f4, %v0_176f4
  %v6_176f4 = icmp slt i32 %v5_176f4, 0
  store i1 %v6_176f4, i1* %cpsr_v.global-to-local, align 1
  %v7_176f4 = icmp slt i32 %v2_176f4, 0
  store i1 %v7_176f4, i1* %cpsr_n.global-to-local, align 1
  %v8_176f4 = icmp eq i32 %v0_176f4, 8
  store i1 %v8_176f4, i1* %cpsr_z.global-to-local, align 1
  %v5_176f8 = icmp slt i32 %v0_176f4, 8
  br i1 %v5_176f8, label %dec_label_pc_17744, label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176f4
  %v3_176fc = load i32, i32* @r4, align 4
  %v5_176fc = inttoptr i32 %v3_176fc to i8*
  store i8* %v5_176fc, i8** %stack_var_-8, align 4
  %v8_176fc = load i32, i32* @lr, align 4
  %v2_17700 = add i32 %v0_176f4, -28
  store i32 %v2_17700, i32* %r2.global-to-local, align 4
  %v4_17700 = sub i32 27, %v0_176f4
  %v5_17700 = and i32 %v4_17700, %v2_176f4
  %v6_17700 = icmp slt i32 %v5_17700, 0
  store i1 %v6_17700, i1* %cpsr_v.global-to-local, align 1
  %v7_17700 = icmp slt i32 %v2_17700, 0
  store i1 %v7_17700, i1* %cpsr_n.global-to-local, align 1
  %v8_17700 = icmp eq i32 %v2_176f4, 20
  store i1 %v8_17700, i1* %cpsr_z.global-to-local, align 1
  %v5_17704 = icmp slt i32 %v2_176f4, 20
  br i1 %v5_17704, label %dec_label_pc_17720, label %dec_label_pc_17708

dec_label_pc_17708:                               ; preds = %dec_label_pc_176fc, %dec_label_pc_17708.dec_label_pc_17708_crit_edge
  %v0_1770c = phi i32 [ %v1_17714, %dec_label_pc_17708.dec_label_pc_17708_crit_edge ], [ %v0_1770c37, %dec_label_pc_176fc ]
  %v0_17708 = phi i32 [ %v0_17708.pre, %dec_label_pc_17708.dec_label_pc_17708_crit_edge ], [ %v0_1770836, %dec_label_pc_176fc ]
  %v1_17708 = add i32 %v0_17708, -4
  %v2_17708 = inttoptr i32 %v1_17708 to i32*
  %v3_17708 = load i32, i32* %v2_17708, align 4
  %v4_17708 = add i32 %v0_17708, -8
  %v5_17708 = inttoptr i32 %v4_17708 to i32*
  %v6_17708 = load i32, i32* %v5_17708, align 4
  store i32 %v6_17708, i32* %r4.global-to-local, align 4
  %v7_17708 = add i32 %v0_17708, -12
  %v8_17708 = inttoptr i32 %v7_17708 to i32*
  %v9_17708 = load i32, i32* %v8_17708, align 4
  store i32 %v9_17708, i32* %ip.global-to-local, align 4
  %v10_17708 = add i32 %v0_17708, -16
  %v11_17708 = inttoptr i32 %v10_17708 to i32*
  %v12_17708 = load i32, i32* %v11_17708, align 4
  store i32 %v12_17708, i32* %lr.global-to-local, align 4
  store i32 %v10_17708, i32* %r1.global-to-local, align 4
  %v1_1770c = add i32 %v0_1770c, -16
  %v2_1770c = inttoptr i32 %v1_1770c to i32*
  store i32 %v3_17708, i32* %v2_1770c, align 4
  %v4_1770c = add i32 %v0_1770c, -12
  %v5_1770c = inttoptr i32 %v4_1770c to i32*
  %v6_1770c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1770c, i32* %v5_1770c, align 4
  %v7_1770c = add i32 %v0_1770c, -8
  %v8_1770c = inttoptr i32 %v7_1770c to i32*
  %v9_1770c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1770c, i32* %v8_1770c, align 4
  %v10_1770c = add i32 %v0_1770c, -4
  %v11_1770c = inttoptr i32 %v10_1770c to i32*
  %v12_1770c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1770c, i32* %v11_1770c, align 4
  store i32 %v1_1770c, i32* %r0.global-to-local, align 4
  %v0_17710 = load i32, i32* %r1.global-to-local, align 4
  %v1_17710 = add i32 %v0_17710, -4
  %v2_17710 = inttoptr i32 %v1_17710 to i32*
  %v3_17710 = load i32, i32* %v2_17710, align 4
  store i32 %v3_17710, i32* @r3, align 4
  %v4_17710 = add i32 %v0_17710, -8
  %v5_17710 = inttoptr i32 %v4_17710 to i32*
  %v6_17710 = load i32, i32* %v5_17710, align 4
  store i32 %v6_17710, i32* %r4.global-to-local, align 4
  %v7_17710 = add i32 %v0_17710, -12
  %v8_17710 = inttoptr i32 %v7_17710 to i32*
  %v9_17710 = load i32, i32* %v8_17710, align 4
  store i32 %v9_17710, i32* @ip, align 4
  %v10_17710 = add i32 %v0_17710, -16
  %v11_17710 = inttoptr i32 %v10_17710 to i32*
  %v12_17710 = load i32, i32* %v11_17710, align 4
  store i32 %v12_17710, i32* %lr.global-to-local, align 4
  store i32 %v10_17710, i32* %r1.global-to-local, align 4
  %v1_17714 = add i32 %v0_1770c, -32
  %v2_17714 = inttoptr i32 %v1_17714 to i32*
  store i32 %v3_17710, i32* %v2_17714, align 4
  %v4_17714 = add i32 %v0_1770c, -28
  %v5_17714 = inttoptr i32 %v4_17714 to i32*
  %v6_17714 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17714, i32* %v5_17714, align 4
  %v7_17714 = add i32 %v0_1770c, -24
  %v8_17714 = inttoptr i32 %v7_17714 to i32*
  %v9_17714 = load i32, i32* @ip, align 4
  store i32 %v9_17714, i32* %v8_17714, align 4
  %v10_17714 = add i32 %v0_1770c, -20
  %v11_17714 = inttoptr i32 %v10_17714 to i32*
  %v12_17714 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17714, i32* %v11_17714, align 4
  store i32 %v1_17714, i32* %r0.global-to-local, align 4
  %v0_17718 = load i32, i32* %r2.global-to-local, align 4
  %v2_17718 = add i32 %v0_17718, -32
  store i32 %v2_17718, i32* %r2.global-to-local, align 4
  %v6_1771c = icmp slt i32 %v0_17718, 32
  br i1 %v6_1771c, label %dec_label_pc_17720.loopexit, label %dec_label_pc_17708.dec_label_pc_17708_crit_edge

dec_label_pc_17708.dec_label_pc_17708_crit_edge:  ; preds = %dec_label_pc_17708
  %v0_17708.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17708

dec_label_pc_17720.loopexit:                      ; preds = %dec_label_pc_17708
  %v4_17718 = sub i32 31, %v0_17718
  %v5_17718 = and i32 %v4_17718, %v0_17718
  %v6_17718 = icmp slt i32 %v5_17718, 0
  %v7_17718 = icmp slt i32 %v2_17718, 0
  store i1 %v6_17718, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17718, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17720

dec_label_pc_17720:                               ; preds = %dec_label_pc_17720.loopexit, %dec_label_pc_176fc
  %v6_17728 = phi i32 [ %v1_17714, %dec_label_pc_17720.loopexit ], [ %v0_1770c37, %dec_label_pc_176fc ]
  %v0_17730.pr = phi i32 [ %v2_17718, %dec_label_pc_17720.loopexit ], [ %v2_17700, %dec_label_pc_176fc ]
  %v4_17720 = add i32 %v0_17730.pr, 16
  %v6_17720 = sub i32 0, %v0_17730.pr
  %v7_17720 = and i32 %v4_17720, %v6_17720
  %v8_17720 = icmp slt i32 %v7_17720, 0
  store i1 %v8_17720, i1* %cpsr_v.global-to-local, align 1
  %v9_17720 = icmp slt i32 %v4_17720, 0
  store i1 %v9_17720, i1* %cpsr_n.global-to-local, align 1
  %v10_17720 = icmp eq i32 %v4_17720, 0
  store i1 %v10_17720, i1* %cpsr_z.global-to-local, align 1
  %v5_17724 = icmp slt i32 %v0_17730.pr, -16
  br i1 %v5_17724, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_17720
  %v6_17724 = load i32, i32* %r1.global-to-local, align 4
  %v7_17724 = add i32 %v6_17724, -4
  %v8_17724 = inttoptr i32 %v7_17724 to i32*
  %v9_17724 = load i32, i32* %v8_17724, align 4
  store i32 %v9_17724, i32* @r3, align 4
  %v10_17724 = add i32 %v6_17724, -8
  %v11_17724 = inttoptr i32 %v10_17724 to i32*
  %v12_17724 = load i32, i32* %v11_17724, align 4
  store i32 %v12_17724, i32* %r4.global-to-local, align 4
  %v13_17724 = add i32 %v6_17724, -12
  %v14_17724 = inttoptr i32 %v13_17724 to i32*
  %v15_17724 = load i32, i32* %v14_17724, align 4
  store i32 %v15_17724, i32* @ip, align 4
  %v16_17724 = add i32 %v6_17724, -16
  %v17_17724 = inttoptr i32 %v16_17724 to i32*
  %v18_17724 = load i32, i32* %v17_17724, align 4
  store i32 %v18_17724, i32* %lr.global-to-local, align 4
  store i32 %v16_17724, i32* %r1.global-to-local, align 4
  %v7_17728 = add i32 %v6_17728, -16
  %v8_17728 = inttoptr i32 %v7_17728 to i32*
  store i32 %v9_17724, i32* %v8_17728, align 4
  %v10_17728 = add i32 %v6_17728, -12
  %v11_17728 = inttoptr i32 %v10_17728 to i32*
  %v12_17728 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17728, i32* %v11_17728, align 4
  %v13_17728 = add i32 %v6_17728, -8
  %v14_17728 = inttoptr i32 %v13_17728 to i32*
  %v15_17728 = load i32, i32* @ip, align 4
  store i32 %v15_17728, i32* %v14_17728, align 4
  %v16_17728 = add i32 %v6_17728, -4
  %v17_17728 = inttoptr i32 %v16_17728 to i32*
  %v18_17728 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17728, i32* %v17_17728, align 4
  store i32 %v7_17728, i32* %r0.global-to-local, align 4
  %v6_1772c = load i32, i32* %r2.global-to-local, align 4
  %v7_1772c = add i32 %v6_1772c, -16
  store i32 %v7_1772c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17720, %bb147
  %v6_17738 = phi i32 [ %v7_17728, %bb147 ], [ %v6_17728, %dec_label_pc_17720 ]
  %v0_17730 = phi i32 [ %v7_1772c, %bb147 ], [ %v0_17730.pr, %dec_label_pc_17720 ]
  %v4_17730 = add i32 %v0_17730, 20
  store i32 %v4_17730, i32* %r2.global-to-local, align 4
  %v6_17730 = sub i32 0, %v0_17730
  %v7_17730 = and i32 %v4_17730, %v6_17730
  %v8_17730 = icmp slt i32 %v7_17730, 0
  store i1 %v8_17730, i1* %cpsr_v.global-to-local, align 1
  %v9_17730 = icmp slt i32 %v4_17730, 0
  store i1 %v9_17730, i1* %cpsr_n.global-to-local, align 1
  %v10_17730 = icmp eq i32 %v4_17730, 0
  store i1 %v10_17730, i1* %cpsr_z.global-to-local, align 1
  %v5_17734 = icmp slt i32 %v0_17730, -20
  br i1 %v5_17734, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_17734 = load i32, i32* %r1.global-to-local, align 4
  %v7_17734 = add i32 %v6_17734, -4
  %v8_17734 = inttoptr i32 %v7_17734 to i32*
  %v9_17734 = load i32, i32* %v8_17734, align 4
  store i32 %v9_17734, i32* @r3, align 4
  %v10_17734 = add i32 %v6_17734, -8
  %v11_17734 = inttoptr i32 %v10_17734 to i32*
  %v12_17734 = load i32, i32* %v11_17734, align 4
  store i32 %v12_17734, i32* @ip, align 4
  %v13_17734 = add i32 %v6_17734, -12
  %v14_17734 = inttoptr i32 %v13_17734 to i32*
  %v15_17734 = load i32, i32* %v14_17734, align 4
  store i32 %v15_17734, i32* %lr.global-to-local, align 4
  store i32 %v13_17734, i32* %r1.global-to-local, align 4
  %v7_17738 = add i32 %v6_17738, -12
  %v8_17738 = inttoptr i32 %v7_17738 to i32*
  store i32 %v9_17734, i32* %v8_17738, align 4
  %v10_17738 = add i32 %v6_17738, -8
  %v11_17738 = inttoptr i32 %v10_17738 to i32*
  %v12_17738 = load i32, i32* @ip, align 4
  store i32 %v12_17738, i32* %v11_17738, align 4
  %v13_17738 = add i32 %v6_17738, -4
  %v14_17738 = inttoptr i32 %v13_17738 to i32*
  %v15_17738 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17738, i32* %v14_17738, align 4
  store i32 %v7_17738, i32* %r0.global-to-local, align 4
  %v6_1773c = load i32, i32* %r2.global-to-local, align 4
  %v7_1773c = add i32 %v6_1773c, -12
  store i32 %v7_1773c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1775c45 = phi i32 [ %v6_17738, %.thread2 ], [ %v7_17738, %bb148 ]
  %v0_1774443 = phi i32 [ %v4_17730, %.thread2 ], [ %v7_1773c, %bb148 ]
  %v2_17740 = load i8*, i8** %stack_var_-8, align 4
  %v3_17740 = ptrtoint i8* %v2_17740 to i32
  store i32 %v3_17740, i32* @r4, align 4
  store i32 %v8_176fc, i32* @lr, align 4
  br label %dec_label_pc_17744

dec_label_pc_17744:                               ; preds = %dec_label_pc_176f4, %.thread4
  %v7_17754 = phi i32 [ %v0_1770c37, %dec_label_pc_176f4 ], [ %v6_1775c45, %.thread4 ]
  %v0_17744 = phi i32 [ %v2_176f4, %dec_label_pc_176f4 ], [ %v0_1774443, %.thread4 ]
  %v2_17744 = add i32 %v0_17744, 8
  store i32 %v2_17744, i32* %r2.global-to-local, align 4
  %v4_17744 = sub i32 0, %v0_17744
  %v5_17744 = and i32 %v2_17744, %v4_17744
  %v6_17744 = icmp slt i32 %v5_17744, 0
  store i1 %v6_17744, i1* %cpsr_v.global-to-local, align 1
  %v7_17744 = icmp slt i32 %v2_17744, 0
  store i1 %v7_17744, i1* %cpsr_n.global-to-local, align 1
  %v8_17744 = icmp eq i32 %v2_17744, 0
  store i1 %v8_17744, i1* %cpsr_z.global-to-local, align 1
  %v5_17748 = icmp slt i32 %v0_17744, -8
  br i1 %v5_17748, label %bb150, label %dec_label_pc_1774c

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17744
  %v6_1774c = add i32 %v0_17744, 4
  store i32 %v6_1774c, i32* %r2.global-to-local, align 4
  %v8_1774c = sub i32 -5, %v0_17744
  %v9_1774c = and i32 %v8_1774c, %v2_17744
  %v10_1774c = icmp slt i32 %v9_1774c, 0
  store i1 %v10_1774c, i1* %cpsr_v.global-to-local, align 1
  %v11_1774c = icmp slt i32 %v6_1774c, 0
  store i1 %v11_1774c, i1* %cpsr_n.global-to-local, align 1
  %v12_1774c = icmp eq i32 %v2_17744, 4
  store i1 %v12_1774c, i1* %cpsr_z.global-to-local, align 1
  %v5_17750 = icmp slt i32 %v2_17744, 4
  %v6_17750 = load i32, i32* %r1.global-to-local, align 4
  %v7_17750 = add i32 %v6_17750, -4
  %v8_17750 = inttoptr i32 %v7_17750 to i32*
  %v9_17750 = load i32, i32* %v8_17750, align 4
  store i32 %v9_17750, i32* @r3, align 4
  br i1 %v5_17750, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_1774c
  store i32 %v7_17750, i32* %r1.global-to-local, align 4
  %v8_17754 = add i32 %v7_17754, -4
  %v9_17754 = inttoptr i32 %v8_17754 to i32*
  store i32 %v9_17750, i32* %v9_17754, align 4
  %v10_17754 = load i32, i32* %r0.global-to-local, align 4
  %v11_17754 = add i32 %v10_17754, -4
  store i32 %v11_17754, i32* %r0.global-to-local, align 4
  %v0_17764.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1774c
  %v10_17758 = add i32 %v6_17750, -8
  %v11_17758 = inttoptr i32 %v10_17758 to i32*
  %v12_17758 = load i32, i32* %v11_17758, align 4
  store i32 %v12_17758, i32* @ip, align 4
  store i32 %v10_17758, i32* %r1.global-to-local, align 4
  %v7_1775c = add i32 %v7_17754, -8
  %v8_1775c = inttoptr i32 %v7_1775c to i32*
  store i32 %v9_17750, i32* %v8_1775c, align 4
  %v10_1775c = add i32 %v7_17754, -4
  %v11_1775c = inttoptr i32 %v10_1775c to i32*
  %v12_1775c = load i32, i32* @ip, align 4
  store i32 %v12_1775c, i32* %v11_1775c, align 4
  store i32 %v7_1775c, i32* %r0.global-to-local, align 4
  %v6_17760 = load i32, i32* %r2.global-to-local, align 4
  %v7_17760 = add i32 %v6_17760, -4
  store i32 %v7_17760, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %dec_label_pc_17744, %dec_label_pc_176d4, %.thread14, %dec_label_pc_17908, %dec_label_pc_1789c, %dec_label_pc_17830, %bb149
  %v2_17768 = phi i32 [ %v11_17754, %.thread8 ], [ %v7_17754, %dec_label_pc_17744 ], [ %v2_176d8, %dec_label_pc_176d4 ], [ %v0_1780020, %.thread14 ], [ %v2_1777453, %dec_label_pc_17908 ], [ %v2_1777452, %dec_label_pc_1789c ], [ %v2_1777451, %dec_label_pc_17830 ], [ %v7_1775c, %bb149 ]
  %v0_17764 = phi i32 [ %v0_17764.pre, %.thread8 ], [ %v2_17744, %dec_label_pc_17744 ], [ %v2_176dc, %dec_label_pc_176d4 ], [ %v2_177a8, %.thread14 ], [ %v0_1776449, %dec_label_pc_17908 ], [ %v0_1776448, %dec_label_pc_1789c ], [ %v0_1776447, %dec_label_pc_17830 ], [ %v7_17760, %bb149 ]
  %v1_17764 = add i32 %v0_17764, 4
  store i32 %v1_17764, i32* %r2.global-to-local, align 4
  %v3_17764 = sub i32 0, %v0_17764
  %v4_17764 = and i32 %v1_17764, %v3_17764
  %v5_17764 = icmp slt i32 %v4_17764, 0
  store i1 %v5_17764, i1* %cpsr_v.global-to-local, align 1
  %v6_17764 = icmp slt i32 %v1_17764, 0
  store i1 %v6_17764, i1* %cpsr_n.global-to-local, align 1
  %v7_17764 = icmp eq i32 %v1_17764, 0
  store i1 %v7_17764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17764, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1776c = add i32 %v0_17764, 2
  %v3_1776c = sub i32 -3, %v0_17764
  %v4_1776c = and i32 %v3_1776c, %v1_17764
  %v5_1776c = icmp slt i32 %v4_1776c, 0
  store i1 %v5_1776c, i1* %cpsr_v.global-to-local, align 1
  %v6_1776c = icmp slt i32 %v1_1776c, 0
  store i1 %v6_1776c, i1* %cpsr_n.global-to-local, align 1
  %v7_1776c = icmp eq i32 %v1_17764, 2
  store i1 %v7_1776c, i1* %cpsr_z.global-to-local, align 1
  %v0_17770 = load i32, i32* %r1.global-to-local, align 4
  %v1_17770 = add i32 %v0_17770, -1
  %v2_17770 = inttoptr i32 %v1_17770 to i8*
  %v3_17770 = load i8, i8* %v2_17770, align 1
  %v4_17770 = zext i8 %v3_17770 to i32
  store i32 %v4_17770, i32* @r3, align 4
  store i32 %v1_17770, i32* %r1.global-to-local, align 4
  %v3_17774 = add i32 %v2_17768, -1
  %v4_17774 = inttoptr i32 %v3_17774 to i8*
  store i8 %v3_17770, i8* %v4_17774, align 1
  %v5_17774 = load i32, i32* %r0.global-to-local, align 4
  %v6_17774 = add i32 %v5_17774, -1
  store i32 %v6_17774, i32* %r0.global-to-local, align 4
  %v0_17778 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17778 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17778 = xor i1 %v0_17778, %v1_17778
  br i1 %v2_17778, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_17778 = load i32, i32* %r1.global-to-local, align 4
  %v4_17778 = add i32 %v3_17778, -1
  %v5_17778 = inttoptr i32 %v4_17778 to i8*
  %v6_17778 = load i8, i8* %v5_17778, align 1
  %v7_17778 = zext i8 %v6_17778 to i32
  store i32 %v7_17778, i32* @r3, align 4
  store i32 %v4_17778, i32* %r1.global-to-local, align 4
  %v6_1777c = add i32 %v5_17774, -2
  %v7_1777c = inttoptr i32 %v6_1777c to i8*
  store i8 %v6_17778, i8* %v7_1777c, align 1
  %v8_1777c = load i32, i32* %r0.global-to-local, align 4
  %v9_1777c = add i32 %v8_1777c, -1
  store i32 %v9_1777c, i32* %r0.global-to-local, align 4
  %v1_17780.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17780.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_17784 = phi i32 [ %v9_1777c, %bb152 ], [ %v6_17774, %bb151 ]
  %v2_17784 = phi i1 [ %v2_17780.pre, %bb152 ], [ %v1_17778, %bb151 ]
  %v1_17784 = phi i1 [ %v1_17780.pre, %bb152 ], [ %v0_17778, %bb151 ]
  %v0_17780 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17780 = xor i1 %v2_17784, %v1_17784
  %v4_17780 = or i1 %v0_17780, %v3_17780
  br i1 %v4_17780, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_17780 = load i32, i32* %r1.global-to-local, align 4
  %v6_17780 = add i32 %v5_17780, -1
  %v7_17780 = inttoptr i32 %v6_17780 to i8*
  %v8_17780 = load i8, i8* %v7_17780, align 1
  %v9_17780 = zext i8 %v8_17780 to i32
  store i32 %v9_17780, i32* @r3, align 4
  store i32 %v6_17780, i32* %r1.global-to-local, align 4
  %v8_17784 = add i32 %v7_17784, -1
  %v9_17784 = inttoptr i32 %v8_17784 to i8*
  store i8 %v8_17780, i8* %v9_17784, align 1
  %v10_17784 = load i32, i32* %r0.global-to-local, align 4
  %v11_17784 = add i32 %v10_17784, -1
  store i32 %v11_17784, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1778c:                               ; preds = %dec_label_pc_176e4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1778c = icmp eq i32 %v1_176e4, 1
  store i1 %v8_1778c, i1* %cpsr_n.global-to-local, align 1
  %v9_1778c = icmp eq i32 %v1_176e4, 2
  store i1 %v9_1778c, i1* %cpsr_z.global-to-local, align 1
  %v1_17790 = add i32 %v2_176d4, -1
  %v2_17790 = inttoptr i32 %v1_17790 to i8*
  %v3_17790 = load i8, i8* %v2_17790, align 1
  %v4_17790 = zext i8 %v3_17790 to i32
  store i32 %v4_17790, i32* @r3, align 4
  store i32 %v1_17790, i32* %r1.global-to-local, align 4
  %v3_17794 = add i32 %v2_176d8, -1
  %v4_17794 = inttoptr i32 %v3_17794 to i8*
  store i8 %v3_17790, i8* %v4_17794, align 1
  %v5_17794 = load i32, i32* %r0.global-to-local, align 4
  %v6_17794 = add i32 %v5_17794, -1
  store i32 %v6_17794, i32* %r0.global-to-local, align 4
  br i1 %v8_1778c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1778c
  %v6_17798 = load i32, i32* %r1.global-to-local, align 4
  %v7_17798 = add i32 %v6_17798, -1
  %v8_17798 = inttoptr i32 %v7_17798 to i8*
  %v9_17798 = load i8, i8* %v8_17798, align 1
  %v10_17798 = zext i8 %v9_17798 to i32
  store i32 %v10_17798, i32* @r3, align 4
  store i32 %v7_17798, i32* %r1.global-to-local, align 4
  %v9_1779c = add i32 %v5_17794, -2
  %v10_1779c = inttoptr i32 %v9_1779c to i8*
  store i8 %v9_17798, i8* %v10_1779c, align 1
  %v11_1779c = load i32, i32* %r0.global-to-local, align 4
  %v12_1779c = add i32 %v11_1779c, -1
  store i32 %v12_1779c, i32* %r0.global-to-local, align 4
  br i1 %v9_1778c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_177a0 = load i32, i32* %r1.global-to-local, align 4
  %v9_177a0 = add i32 %v8_177a0, -1
  %v10_177a0 = inttoptr i32 %v9_177a0 to i8*
  %v11_177a0 = load i8, i8* %v10_177a0, align 1
  %v12_177a0 = zext i8 %v11_177a0 to i32
  store i32 %v12_177a0, i32* @r3, align 4
  store i32 %v9_177a0, i32* %r1.global-to-local, align 4
  %v11_177a4 = add i32 %v11_1779c, -2
  %v12_177a4 = inttoptr i32 %v11_177a4 to i8*
  store i8 %v11_177a0, i8* %v12_177a4, align 1
  %v13_177a4 = load i32, i32* %r0.global-to-local, align 4
  %v14_177a4 = add i32 %v13_177a4, -1
  store i32 %v14_177a4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1778c, %bb155
  %v0_1780020 = phi i32 [ %v12_1779c, %bb154 ], [ %v6_17794, %dec_label_pc_1778c ], [ %v14_177a4, %bb155 ]
  %v0_177a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_177a8 = load i32, i32* @ip, align 4
  %v2_177a8 = sub i32 %v0_177a8, %v1_177a8
  store i32 %v2_177a8, i32* %r2.global-to-local, align 4
  %v4_177a8 = xor i32 %v1_177a8, %v0_177a8
  %v5_177a8 = xor i32 %v2_177a8, %v0_177a8
  %v6_177a8 = and i32 %v5_177a8, %v4_177a8
  %v7_177a8 = icmp slt i32 %v6_177a8, 0
  store i1 %v7_177a8, i1* %cpsr_v.global-to-local, align 1
  %v8_177a8 = icmp slt i32 %v2_177a8, 0
  store i1 %v8_177a8, i1* %cpsr_n.global-to-local, align 1
  %v9_177a8 = icmp eq i32 %v0_177a8, %v1_177a8
  store i1 %v9_177a8, i1* %cpsr_z.global-to-local, align 1
  %v5_177ac = icmp slt i32 %v0_177a8, %v1_177a8
  br i1 %v5_177ac, label %bb150, label %dec_label_pc_177b0

dec_label_pc_177b0:                               ; preds = %.thread14
  %v0_177b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_177b0 = urem i32 %v0_177b0, 4
  store i32 %v1_177b0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_177b0 = icmp eq i32 %v1_177b0, 0
  store i1 %v2_177b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_177b0, label %dec_label_pc_176f4, label %dec_label_pc_177b8

dec_label_pc_177b8:                               ; preds = %dec_label_pc_176ec, %dec_label_pc_177b0
  %v0_1780019 = phi i32 [ %v2_176d8, %dec_label_pc_176ec ], [ %v0_1780020, %dec_label_pc_177b0 ]
  %v0_178ac = phi i32 [ %v2_176dc, %dec_label_pc_176ec ], [ %v2_177a8, %dec_label_pc_177b0 ]
  %v0_177b8 = phi i32 [ %v2_176d4, %dec_label_pc_176ec ], [ %v0_177b0, %dec_label_pc_177b0 ]
  %v0_177c0 = phi i32 [ %v1_176ec, %dec_label_pc_176ec ], [ %v1_177b0, %dec_label_pc_177b0 ]
  %v1_177b8 = and i32 %v0_177b8, -4
  store i32 %v1_177b8, i32* %r1.global-to-local, align 4
  %v1_177bc = inttoptr i32 %v1_177b8 to i32*
  %v2_177bc = load i32, i32* %v1_177bc, align 4
  store i32 %v2_177bc, i32* @r3, align 4
  %v7_177c0 = icmp ult i32 %v0_177c0, 2
  %v2_178a4 = add i32 %v0_178ac, -12
  %v4_178a4 = sub i32 11, %v0_178ac
  %v5_178a4 = and i32 %v4_178a4, %v0_178ac
  %v6_178a4 = icmp slt i32 %v5_178a4, 0
  store i1 %v6_178a4, i1* %cpsr_v.global-to-local, align 1
  %v7_178a4 = icmp slt i32 %v2_178a4, 0
  store i1 %v7_178a4, i1* %cpsr_n.global-to-local, align 1
  %v8_178a4 = icmp eq i32 %v0_178ac, 12
  store i1 %v8_178a4, i1* %cpsr_z.global-to-local, align 1
  %v5_178a8 = icmp slt i32 %v0_178ac, 12
  br i1 %v7_177c0, label %dec_label_pc_178a4, label %dec_label_pc_177c8

dec_label_pc_177c8:                               ; preds = %dec_label_pc_177b8
  %v8_177c0 = icmp eq i32 %v0_177c0, 2
  br i1 %v8_177c0, label %dec_label_pc_17838, label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177c8
  br i1 %v5_178a8, label %dec_label_pc_17818, label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_177cc
  store i32 %v2_178a4, i32* %r2.global-to-local, align 4
  %v3_177d8 = load i32, i32* @r4, align 4
  store i32 %v3_177d8, i32* %stack_var_-12, align 4
  %v6_177d8 = load i32, i32* @r5, align 4
  %v8_177d8 = inttoptr i32 %v6_177d8 to i8*
  store i8* %v8_177d8, i8** %stack_var_-8, align 4
  %v11_177d8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_177dc

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge, %dec_label_pc_177d4
  %v0_17800 = phi i32 [ %v1_17800, %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge ], [ %v0_1780019, %dec_label_pc_177d4 ]
  %v0_177e0 = phi i32 [ %v0_177e0.pre, %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge ], [ %v1_177b8, %dec_label_pc_177d4 ]
  %v0_177dc = phi i32 [ %v0_177dc.pre, %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge ], [ %v2_177bc, %dec_label_pc_177d4 ]
  %v3_177dc = mul i32 %v0_177dc, 256
  store i32 %v3_177dc, i32* %lr.global-to-local, align 4
  %v1_177e0 = add i32 %v0_177e0, -4
  %v2_177e0 = inttoptr i32 %v1_177e0 to i32*
  %v3_177e0 = load i32, i32* %v2_177e0, align 4
  store i32 %v3_177e0, i32* @r3, align 4
  %v4_177e0 = add i32 %v0_177e0, -8
  %v5_177e0 = inttoptr i32 %v4_177e0 to i32*
  %v6_177e0 = load i32, i32* %v5_177e0, align 4
  store i32 %v6_177e0, i32* %r4.global-to-local, align 4
  %v7_177e0 = add i32 %v0_177e0, -12
  %v8_177e0 = inttoptr i32 %v7_177e0 to i32*
  %v9_177e0 = load i32, i32* %v8_177e0, align 4
  store i32 %v9_177e0, i32* %r5.global-to-local, align 4
  %v10_177e0 = add i32 %v0_177e0, -16
  %v11_177e0 = inttoptr i32 %v10_177e0 to i32*
  %v12_177e0 = load i32, i32* %v11_177e0, align 4
  store i32 %v10_177e0, i32* %r1.global-to-local, align 4
  %v4_177e4 = udiv i32 %v12_177e0, 16777216
  %v5_177e4 = or i32 %v4_177e4, %v3_177dc
  store i32 %v5_177e4, i32* %lr.global-to-local, align 4
  %v3_177e8 = mul i32 %v12_177e0, 256
  %v4_177ec = udiv i32 %v9_177e0, 16777216
  %v5_177ec = or i32 %v3_177e8, %v4_177ec
  store i32 %v5_177ec, i32* @ip, align 4
  %v3_177f0 = mul i32 %v9_177e0, 256
  %v4_177f4 = udiv i32 %v6_177e0, 16777216
  %v5_177f4 = or i32 %v3_177f0, %v4_177f4
  store i32 %v5_177f4, i32* %r5.global-to-local, align 4
  %v3_177f8 = mul i32 %v6_177e0, 256
  %v4_177fc = udiv i32 %v3_177e0, 16777216
  %v5_177fc = or i32 %v3_177f8, %v4_177fc
  store i32 %v5_177fc, i32* %r4.global-to-local, align 4
  %v1_17800 = add i32 %v0_17800, -16
  %v2_17800 = inttoptr i32 %v1_17800 to i32*
  store i32 %v5_177fc, i32* %v2_17800, align 4
  %v4_17800 = add i32 %v0_17800, -12
  %v5_17800 = inttoptr i32 %v4_17800 to i32*
  %v6_17800 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17800, i32* %v5_17800, align 4
  %v7_17800 = add i32 %v0_17800, -8
  %v8_17800 = inttoptr i32 %v7_17800 to i32*
  %v9_17800 = load i32, i32* @ip, align 4
  store i32 %v9_17800, i32* %v8_17800, align 4
  %v10_17800 = add i32 %v0_17800, -4
  %v11_17800 = inttoptr i32 %v10_17800 to i32*
  %v12_17800 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17800, i32* %v11_17800, align 4
  store i32 %v1_17800, i32* %r0.global-to-local, align 4
  %v0_17804 = load i32, i32* %r2.global-to-local, align 4
  %v2_17804 = add i32 %v0_17804, -16
  store i32 %v2_17804, i32* %r2.global-to-local, align 4
  %v6_17808 = icmp slt i32 %v0_17804, 16
  br i1 %v6_17808, label %dec_label_pc_1780c, label %dec_label_pc_177dc.dec_label_pc_177dc_crit_edge

dec_label_pc_177dc.dec_label_pc_177dc_crit_edge:  ; preds = %dec_label_pc_177dc
  %v0_177dc.pre = load i32, i32* @r3, align 4
  %v0_177e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_177dc

dec_label_pc_1780c:                               ; preds = %dec_label_pc_177dc
  %v2_1780c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1780c, i32* @r4, align 4
  %v5_1780c = load i8*, i8** %stack_var_-8, align 4
  %v6_1780c = ptrtoint i8* %v5_1780c to i32
  store i32 %v6_1780c, i32* @r5, align 4
  store i32 %v11_177d8, i32* @lr, align 4
  %v2_17810 = add i32 %v0_17804, -4
  store i32 %v2_17810, i32* %r2.global-to-local, align 4
  %v4_17810 = add i32 %v0_17804, 2147483632
  %v5_17810 = and i32 %v2_17810, %v4_17810
  %v6_17810 = icmp slt i32 %v5_17810, 0
  store i1 %v6_17810, i1* %cpsr_v.global-to-local, align 1
  %v7_17810 = icmp slt i32 %v2_17810, 0
  store i1 %v7_17810, i1* %cpsr_n.global-to-local, align 1
  %v8_17810 = icmp eq i32 %v2_17810, 0
  store i1 %v8_17810, i1* %cpsr_z.global-to-local, align 1
  %v5_17814 = icmp slt i32 %v2_17804, -12
  br i1 %v5_17814, label %dec_label_pc_17830, label %dec_label_pc_17818

dec_label_pc_17818:                               ; preds = %dec_label_pc_1780c, %dec_label_pc_177cc, %dec_label_pc_17818
  %v1_17824 = phi i32 [ %v5_17824, %dec_label_pc_17818 ], [ %v1_17800, %dec_label_pc_1780c ], [ %v0_1780019, %dec_label_pc_177cc ]
  %v0_17818 = load i32, i32* @r3, align 4
  %v3_17818 = mul i32 %v0_17818, 256
  store i32 %v3_17818, i32* %ip.global-to-local, align 4
  %v0_1781c = load i32, i32* %r1.global-to-local, align 4
  %v1_1781c = add i32 %v0_1781c, -4
  %v2_1781c = inttoptr i32 %v1_1781c to i32*
  %v3_1781c = load i32, i32* %v2_1781c, align 4
  store i32 %v3_1781c, i32* @r3, align 4
  store i32 %v1_1781c, i32* %r1.global-to-local, align 4
  %v4_17820 = udiv i32 %v3_1781c, 16777216
  %v5_17820 = or i32 %v4_17820, %v3_17818
  store i32 %v5_17820, i32* @ip, align 4
  %v2_17824 = add i32 %v1_17824, -4
  %v3_17824 = inttoptr i32 %v2_17824 to i32*
  store i32 %v5_17820, i32* %v3_17824, align 4
  %v4_17824 = load i32, i32* %r0.global-to-local, align 4
  %v5_17824 = add i32 %v4_17824, -4
  store i32 %v5_17824, i32* %r0.global-to-local, align 4
  %v0_17828 = load i32, i32* %r2.global-to-local, align 4
  %v2_17828 = add i32 %v0_17828, -4
  store i32 %v2_17828, i32* %r2.global-to-local, align 4
  %v6_1782c = icmp slt i32 %v0_17828, 4
  br i1 %v6_1782c, label %dec_label_pc_17830.loopexit, label %dec_label_pc_17818

dec_label_pc_17830.loopexit:                      ; preds = %dec_label_pc_17818
  %v4_17828 = sub i32 3, %v0_17828
  %v5_17828 = and i32 %v4_17828, %v0_17828
  %v6_17828 = icmp slt i32 %v5_17828, 0
  %v7_17828 = icmp slt i32 %v2_17828, 0
  store i1 %v6_17828, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17828, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17830

dec_label_pc_17830:                               ; preds = %dec_label_pc_17830.loopexit, %dec_label_pc_1780c
  %v2_1777451 = phi i32 [ %v5_17824, %dec_label_pc_17830.loopexit ], [ %v1_17800, %dec_label_pc_1780c ]
  %v0_1776447 = phi i32 [ %v2_17828, %dec_label_pc_17830.loopexit ], [ %v2_17810, %dec_label_pc_1780c ]
  %v0_17830 = load i32, i32* %r1.global-to-local, align 4
  %v1_17830 = add i32 %v0_17830, 3
  store i32 %v1_17830, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17838:                               ; preds = %dec_label_pc_177c8
  br i1 %v5_178a8, label %dec_label_pc_17884, label %dec_label_pc_17840

dec_label_pc_17840:                               ; preds = %dec_label_pc_17838
  store i32 %v2_178a4, i32* %r2.global-to-local, align 4
  %v3_17844 = load i32, i32* @r4, align 4
  store i32 %v3_17844, i32* %stack_var_-12, align 4
  %v6_17844 = load i32, i32* @r5, align 4
  %v8_17844 = inttoptr i32 %v6_17844 to i8*
  store i8* %v8_17844, i8** %stack_var_-8, align 4
  %v11_17844 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17848

dec_label_pc_17848:                               ; preds = %dec_label_pc_17848.dec_label_pc_17848_crit_edge, %dec_label_pc_17840
  %v0_1786c = phi i32 [ %v1_1786c, %dec_label_pc_17848.dec_label_pc_17848_crit_edge ], [ %v0_1780019, %dec_label_pc_17840 ]
  %v0_1784c = phi i32 [ %v0_1784c.pre, %dec_label_pc_17848.dec_label_pc_17848_crit_edge ], [ %v1_177b8, %dec_label_pc_17840 ]
  %v0_17848 = phi i32 [ %v0_17848.pre, %dec_label_pc_17848.dec_label_pc_17848_crit_edge ], [ %v2_177bc, %dec_label_pc_17840 ]
  %v3_17848 = mul i32 %v0_17848, 65536
  store i32 %v3_17848, i32* %lr.global-to-local, align 4
  %v1_1784c = add i32 %v0_1784c, -4
  %v2_1784c = inttoptr i32 %v1_1784c to i32*
  %v3_1784c = load i32, i32* %v2_1784c, align 4
  store i32 %v3_1784c, i32* @r3, align 4
  %v4_1784c = add i32 %v0_1784c, -8
  %v5_1784c = inttoptr i32 %v4_1784c to i32*
  %v6_1784c = load i32, i32* %v5_1784c, align 4
  store i32 %v6_1784c, i32* %r4.global-to-local, align 4
  %v7_1784c = add i32 %v0_1784c, -12
  %v8_1784c = inttoptr i32 %v7_1784c to i32*
  %v9_1784c = load i32, i32* %v8_1784c, align 4
  store i32 %v9_1784c, i32* %r5.global-to-local, align 4
  %v10_1784c = add i32 %v0_1784c, -16
  %v11_1784c = inttoptr i32 %v10_1784c to i32*
  %v12_1784c = load i32, i32* %v11_1784c, align 4
  store i32 %v10_1784c, i32* %r1.global-to-local, align 4
  %v4_17850 = udiv i32 %v12_1784c, 65536
  %v5_17850 = or i32 %v4_17850, %v3_17848
  store i32 %v5_17850, i32* %lr.global-to-local, align 4
  %v3_17854 = mul i32 %v12_1784c, 65536
  %v4_17858 = udiv i32 %v9_1784c, 65536
  %v5_17858 = or i32 %v3_17854, %v4_17858
  store i32 %v5_17858, i32* @ip, align 4
  %v3_1785c = mul i32 %v9_1784c, 65536
  %v4_17860 = udiv i32 %v6_1784c, 65536
  %v5_17860 = or i32 %v3_1785c, %v4_17860
  store i32 %v5_17860, i32* %r5.global-to-local, align 4
  %v3_17864 = mul i32 %v6_1784c, 65536
  %v4_17868 = udiv i32 %v3_1784c, 65536
  %v5_17868 = or i32 %v3_17864, %v4_17868
  store i32 %v5_17868, i32* %r4.global-to-local, align 4
  %v1_1786c = add i32 %v0_1786c, -16
  %v2_1786c = inttoptr i32 %v1_1786c to i32*
  store i32 %v5_17868, i32* %v2_1786c, align 4
  %v4_1786c = add i32 %v0_1786c, -12
  %v5_1786c = inttoptr i32 %v4_1786c to i32*
  %v6_1786c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1786c, i32* %v5_1786c, align 4
  %v7_1786c = add i32 %v0_1786c, -8
  %v8_1786c = inttoptr i32 %v7_1786c to i32*
  %v9_1786c = load i32, i32* @ip, align 4
  store i32 %v9_1786c, i32* %v8_1786c, align 4
  %v10_1786c = add i32 %v0_1786c, -4
  %v11_1786c = inttoptr i32 %v10_1786c to i32*
  %v12_1786c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1786c, i32* %v11_1786c, align 4
  store i32 %v1_1786c, i32* %r0.global-to-local, align 4
  %v0_17870 = load i32, i32* %r2.global-to-local, align 4
  %v2_17870 = add i32 %v0_17870, -16
  store i32 %v2_17870, i32* %r2.global-to-local, align 4
  %v6_17874 = icmp slt i32 %v0_17870, 16
  br i1 %v6_17874, label %dec_label_pc_17878, label %dec_label_pc_17848.dec_label_pc_17848_crit_edge

dec_label_pc_17848.dec_label_pc_17848_crit_edge:  ; preds = %dec_label_pc_17848
  %v0_17848.pre = load i32, i32* @r3, align 4
  %v0_1784c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17848

dec_label_pc_17878:                               ; preds = %dec_label_pc_17848
  %v2_17878 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17878, i32* @r4, align 4
  %v5_17878 = load i8*, i8** %stack_var_-8, align 4
  %v6_17878 = ptrtoint i8* %v5_17878 to i32
  store i32 %v6_17878, i32* @r5, align 4
  store i32 %v11_17844, i32* @lr, align 4
  %v2_1787c = add i32 %v0_17870, -4
  store i32 %v2_1787c, i32* %r2.global-to-local, align 4
  %v4_1787c = add i32 %v0_17870, 2147483632
  %v5_1787c = and i32 %v2_1787c, %v4_1787c
  %v6_1787c = icmp slt i32 %v5_1787c, 0
  store i1 %v6_1787c, i1* %cpsr_v.global-to-local, align 1
  %v7_1787c = icmp slt i32 %v2_1787c, 0
  store i1 %v7_1787c, i1* %cpsr_n.global-to-local, align 1
  %v8_1787c = icmp eq i32 %v2_1787c, 0
  store i1 %v8_1787c, i1* %cpsr_z.global-to-local, align 1
  %v5_17880 = icmp slt i32 %v2_17870, -12
  br i1 %v5_17880, label %dec_label_pc_1789c, label %dec_label_pc_17884

dec_label_pc_17884:                               ; preds = %dec_label_pc_17878, %dec_label_pc_17838, %dec_label_pc_17884
  %v1_17890 = phi i32 [ %v5_17890, %dec_label_pc_17884 ], [ %v1_1786c, %dec_label_pc_17878 ], [ %v0_1780019, %dec_label_pc_17838 ]
  %v0_17884 = load i32, i32* @r3, align 4
  %v3_17884 = mul i32 %v0_17884, 65536
  store i32 %v3_17884, i32* %ip.global-to-local, align 4
  %v0_17888 = load i32, i32* %r1.global-to-local, align 4
  %v1_17888 = add i32 %v0_17888, -4
  %v2_17888 = inttoptr i32 %v1_17888 to i32*
  %v3_17888 = load i32, i32* %v2_17888, align 4
  store i32 %v3_17888, i32* @r3, align 4
  store i32 %v1_17888, i32* %r1.global-to-local, align 4
  %v4_1788c = udiv i32 %v3_17888, 65536
  %v5_1788c = or i32 %v4_1788c, %v3_17884
  store i32 %v5_1788c, i32* @ip, align 4
  %v2_17890 = add i32 %v1_17890, -4
  %v3_17890 = inttoptr i32 %v2_17890 to i32*
  store i32 %v5_1788c, i32* %v3_17890, align 4
  %v4_17890 = load i32, i32* %r0.global-to-local, align 4
  %v5_17890 = add i32 %v4_17890, -4
  store i32 %v5_17890, i32* %r0.global-to-local, align 4
  %v0_17894 = load i32, i32* %r2.global-to-local, align 4
  %v2_17894 = add i32 %v0_17894, -4
  store i32 %v2_17894, i32* %r2.global-to-local, align 4
  %v6_17898 = icmp slt i32 %v0_17894, 4
  br i1 %v6_17898, label %dec_label_pc_1789c.loopexit, label %dec_label_pc_17884

dec_label_pc_1789c.loopexit:                      ; preds = %dec_label_pc_17884
  %v4_17894 = sub i32 3, %v0_17894
  %v5_17894 = and i32 %v4_17894, %v0_17894
  %v6_17894 = icmp slt i32 %v5_17894, 0
  %v7_17894 = icmp slt i32 %v2_17894, 0
  store i1 %v6_17894, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17894, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1789c

dec_label_pc_1789c:                               ; preds = %dec_label_pc_1789c.loopexit, %dec_label_pc_17878
  %v2_1777452 = phi i32 [ %v5_17890, %dec_label_pc_1789c.loopexit ], [ %v1_1786c, %dec_label_pc_17878 ]
  %v0_1776448 = phi i32 [ %v2_17894, %dec_label_pc_1789c.loopexit ], [ %v2_1787c, %dec_label_pc_17878 ]
  %v0_1789c = load i32, i32* %r1.global-to-local, align 4
  %v1_1789c = add i32 %v0_1789c, 2
  store i32 %v1_1789c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_178a4:                               ; preds = %dec_label_pc_177b8
  br i1 %v5_178a8, label %dec_label_pc_178f0, label %dec_label_pc_178ac

dec_label_pc_178ac:                               ; preds = %dec_label_pc_178a4
  store i32 %v2_178a4, i32* %r2.global-to-local, align 4
  %v3_178b0 = load i32, i32* @r4, align 4
  store i32 %v3_178b0, i32* %stack_var_-12, align 4
  %v6_178b0 = load i32, i32* @r5, align 4
  %v8_178b0 = inttoptr i32 %v6_178b0 to i8*
  store i8* %v8_178b0, i8** %stack_var_-8, align 4
  %v11_178b0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge, %dec_label_pc_178ac
  %v0_178d8 = phi i32 [ %v1_178d8, %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge ], [ %v0_1780019, %dec_label_pc_178ac ]
  %v0_178b8 = phi i32 [ %v0_178b8.pre, %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge ], [ %v1_177b8, %dec_label_pc_178ac ]
  %v0_178b4 = phi i32 [ %v0_178b4.pre, %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge ], [ %v2_177bc, %dec_label_pc_178ac ]
  %v3_178b4 = mul i32 %v0_178b4, 16777216
  store i32 %v3_178b4, i32* %lr.global-to-local, align 4
  %v1_178b8 = add i32 %v0_178b8, -4
  %v2_178b8 = inttoptr i32 %v1_178b8 to i32*
  %v3_178b8 = load i32, i32* %v2_178b8, align 4
  store i32 %v3_178b8, i32* @r3, align 4
  %v4_178b8 = add i32 %v0_178b8, -8
  %v5_178b8 = inttoptr i32 %v4_178b8 to i32*
  %v6_178b8 = load i32, i32* %v5_178b8, align 4
  store i32 %v6_178b8, i32* %r4.global-to-local, align 4
  %v7_178b8 = add i32 %v0_178b8, -12
  %v8_178b8 = inttoptr i32 %v7_178b8 to i32*
  %v9_178b8 = load i32, i32* %v8_178b8, align 4
  store i32 %v9_178b8, i32* %r5.global-to-local, align 4
  %v10_178b8 = add i32 %v0_178b8, -16
  %v11_178b8 = inttoptr i32 %v10_178b8 to i32*
  %v12_178b8 = load i32, i32* %v11_178b8, align 4
  store i32 %v10_178b8, i32* %r1.global-to-local, align 4
  %v4_178bc = udiv i32 %v12_178b8, 256
  %v5_178bc = or i32 %v4_178bc, %v3_178b4
  store i32 %v5_178bc, i32* %lr.global-to-local, align 4
  %v3_178c0 = mul i32 %v12_178b8, 16777216
  %v4_178c4 = udiv i32 %v9_178b8, 256
  %v5_178c4 = or i32 %v3_178c0, %v4_178c4
  store i32 %v5_178c4, i32* @ip, align 4
  %v3_178c8 = mul i32 %v9_178b8, 16777216
  %v4_178cc = udiv i32 %v6_178b8, 256
  %v5_178cc = or i32 %v3_178c8, %v4_178cc
  store i32 %v5_178cc, i32* %r5.global-to-local, align 4
  %v3_178d0 = mul i32 %v6_178b8, 16777216
  %v4_178d4 = udiv i32 %v3_178b8, 256
  %v5_178d4 = or i32 %v3_178d0, %v4_178d4
  store i32 %v5_178d4, i32* %r4.global-to-local, align 4
  %v1_178d8 = add i32 %v0_178d8, -16
  %v2_178d8 = inttoptr i32 %v1_178d8 to i32*
  store i32 %v5_178d4, i32* %v2_178d8, align 4
  %v4_178d8 = add i32 %v0_178d8, -12
  %v5_178d8 = inttoptr i32 %v4_178d8 to i32*
  %v6_178d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_178d8, i32* %v5_178d8, align 4
  %v7_178d8 = add i32 %v0_178d8, -8
  %v8_178d8 = inttoptr i32 %v7_178d8 to i32*
  %v9_178d8 = load i32, i32* @ip, align 4
  store i32 %v9_178d8, i32* %v8_178d8, align 4
  %v10_178d8 = add i32 %v0_178d8, -4
  %v11_178d8 = inttoptr i32 %v10_178d8 to i32*
  %v12_178d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_178d8, i32* %v11_178d8, align 4
  store i32 %v1_178d8, i32* %r0.global-to-local, align 4
  %v0_178dc = load i32, i32* %r2.global-to-local, align 4
  %v2_178dc = add i32 %v0_178dc, -16
  store i32 %v2_178dc, i32* %r2.global-to-local, align 4
  %v6_178e0 = icmp slt i32 %v0_178dc, 16
  br i1 %v6_178e0, label %dec_label_pc_178e4, label %dec_label_pc_178b4.dec_label_pc_178b4_crit_edge

dec_label_pc_178b4.dec_label_pc_178b4_crit_edge:  ; preds = %dec_label_pc_178b4
  %v0_178b4.pre = load i32, i32* @r3, align 4
  %v0_178b8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_178b4

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178b4
  %v2_178e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_178e4, i32* @r4, align 4
  %v5_178e4 = load i8*, i8** %stack_var_-8, align 4
  %v6_178e4 = ptrtoint i8* %v5_178e4 to i32
  store i32 %v6_178e4, i32* @r5, align 4
  store i32 %v11_178b0, i32* @lr, align 4
  %v2_178e8 = add i32 %v0_178dc, -4
  store i32 %v2_178e8, i32* %r2.global-to-local, align 4
  %v4_178e8 = add i32 %v0_178dc, 2147483632
  %v5_178e8 = and i32 %v2_178e8, %v4_178e8
  %v6_178e8 = icmp slt i32 %v5_178e8, 0
  store i1 %v6_178e8, i1* %cpsr_v.global-to-local, align 1
  %v7_178e8 = icmp slt i32 %v2_178e8, 0
  store i1 %v7_178e8, i1* %cpsr_n.global-to-local, align 1
  %v8_178e8 = icmp eq i32 %v2_178e8, 0
  store i1 %v8_178e8, i1* %cpsr_z.global-to-local, align 1
  %v5_178ec = icmp slt i32 %v2_178dc, -12
  br i1 %v5_178ec, label %dec_label_pc_17908, label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178e4, %dec_label_pc_178a4, %dec_label_pc_178f0
  %v1_178fc = phi i32 [ %v5_178fc, %dec_label_pc_178f0 ], [ %v1_178d8, %dec_label_pc_178e4 ], [ %v0_1780019, %dec_label_pc_178a4 ]
  %v0_178f0 = load i32, i32* @r3, align 4
  %v3_178f0 = mul i32 %v0_178f0, 16777216
  store i32 %v3_178f0, i32* %ip.global-to-local, align 4
  %v0_178f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_178f4 = add i32 %v0_178f4, -4
  %v2_178f4 = inttoptr i32 %v1_178f4 to i32*
  %v3_178f4 = load i32, i32* %v2_178f4, align 4
  store i32 %v3_178f4, i32* @r3, align 4
  store i32 %v1_178f4, i32* %r1.global-to-local, align 4
  %v4_178f8 = udiv i32 %v3_178f4, 256
  %v5_178f8 = or i32 %v4_178f8, %v3_178f0
  store i32 %v5_178f8, i32* @ip, align 4
  %v2_178fc = add i32 %v1_178fc, -4
  %v3_178fc = inttoptr i32 %v2_178fc to i32*
  store i32 %v5_178f8, i32* %v3_178fc, align 4
  %v4_178fc = load i32, i32* %r0.global-to-local, align 4
  %v5_178fc = add i32 %v4_178fc, -4
  store i32 %v5_178fc, i32* %r0.global-to-local, align 4
  %v0_17900 = load i32, i32* %r2.global-to-local, align 4
  %v2_17900 = add i32 %v0_17900, -4
  store i32 %v2_17900, i32* %r2.global-to-local, align 4
  %v6_17904 = icmp slt i32 %v0_17900, 4
  br i1 %v6_17904, label %dec_label_pc_17908.loopexit, label %dec_label_pc_178f0

dec_label_pc_17908.loopexit:                      ; preds = %dec_label_pc_178f0
  %v4_17900 = sub i32 3, %v0_17900
  %v5_17900 = and i32 %v4_17900, %v0_17900
  %v6_17900 = icmp slt i32 %v5_17900, 0
  %v7_17900 = icmp slt i32 %v2_17900, 0
  store i1 %v6_17900, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17900, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17908

dec_label_pc_17908:                               ; preds = %dec_label_pc_17908.loopexit, %dec_label_pc_178e4
  %v2_1777453 = phi i32 [ %v5_178fc, %dec_label_pc_17908.loopexit ], [ %v1_178d8, %dec_label_pc_178e4 ]
  %v0_1776449 = phi i32 [ %v2_17900, %dec_label_pc_17908.loopexit ], [ %v2_178e8, %dec_label_pc_178e4 ]
  %v0_17908 = load i32, i32* %r1.global-to-local, align 4
  %v1_17908 = add i32 %v0_17908, 1
  store i32 %v1_17908, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_178fc, { 0, 2, 1 }
  uselistorder i32 %v3_178f0, { 1, 0 }
  uselistorder i32 %v2_178e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_178d8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_178b8, { 1, 0 }
  uselistorder i32 %v3_178b4, { 1, 0 }
  uselistorder i32 %v0_178b8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_178d8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17890, { 0, 2, 1 }
  uselistorder i32 %v3_17884, { 1, 0 }
  uselistorder i32 %v2_1787c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1786c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1784c, { 1, 0 }
  uselistorder i32 %v3_17848, { 1, 0 }
  uselistorder i32 %v0_1784c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1786c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17824, { 0, 2, 1 }
  uselistorder i32 %v3_17818, { 1, 0 }
  uselistorder i32 %v2_17810, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17800, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_177e0, { 1, 0 }
  uselistorder i32 %v3_177dc, { 1, 0 }
  uselistorder i32 %v0_177e0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17800, { 3, 2, 1, 0 }
  uselistorder i1 %v5_178a8, { 2, 0, 1 }
  uselistorder i32 %v0_177c0, { 1, 0 }
  uselistorder i32 %v0_178ac, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1780019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_177b0, { 2, 1, 0 }
  uselistorder i32 %v0_177b0, { 2, 0, 1 }
  uselistorder i32 %v2_177a8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_177a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_177a8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1780020, { 2, 1, 0 }
  uselistorder i32 %v11_17784, { 1, 0 }
  uselistorder i32 %v7_17784, { 1, 0 }
  uselistorder i32 %v1_17764, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_17764, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17768, { 1, 0 }
  uselistorder i32 %v7_1775c, { 0, 2, 1 }
  uselistorder i32 %v10_17758, { 1, 0 }
  uselistorder i32 %v9_17750, { 1, 0, 2 }
  uselistorder i32 %v6_1774c, { 1, 0 }
  uselistorder i32 %v2_17744, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_17744, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_17754, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17738, { 0, 2, 1 }
  uselistorder i32 %v13_17734, { 1, 0 }
  uselistorder i32 %v4_17730, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_17730, { 2, 0, 1 }
  uselistorder i32 %v6_17738, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17728, { 0, 2, 1 }
  uselistorder i32 %v16_17724, { 1, 0 }
  uselistorder i32 %v4_17720, { 1, 2, 0 }
  uselistorder i32 %v0_17730.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17728, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17714, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17710, { 1, 0 }
  uselistorder i32 %v1_1770c, { 1, 0 }
  uselistorder i32 %v10_17708, { 1, 0 }
  uselistorder i32 %v0_17708, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1770c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17700, { 0, 2, 1 }
  uselistorder i32 %v2_176f4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_176f4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1770c37, { 1, 2, 0 }
  uselistorder i32 %v1_176ec, { 2, 1, 0 }
  uselistorder i32 %v1_176e4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_176dc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_176d8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_176d4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_176d4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_176c4, { 0, 2, 1 }
  uselistorder i32 %v4_176c0, { 1, 0 }
  uselistorder i32 %v3_176b4, { 1, 0 }
  uselistorder i32 %v1_176ac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_176a0, { 1, 0 }
  uselistorder i32 %v12_1769c, { 0, 2, 1 }
  uselistorder i32 %v8_1767c, { 1, 0, 2 }
  uselistorder i32 %v5_1767c, { 1, 0, 2 }
  uselistorder i32 %v2_1767c, { 1, 0, 2 }
  uselistorder i32 %v0_1767c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1769c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17658, { 0, 2, 1 }
  uselistorder i32 %v4_17654, { 1, 0 }
  uselistorder i32 %v3_17648, { 1, 0 }
  uselistorder i32 %v1_17640, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17634, { 1, 0 }
  uselistorder i32 %v12_17630, { 0, 2, 1 }
  uselistorder i32 %v8_17610, { 1, 0, 2 }
  uselistorder i32 %v5_17610, { 1, 0, 2 }
  uselistorder i32 %v2_17610, { 1, 0, 2 }
  uselistorder i32 %v0_17610, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17630, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_175ec, { 0, 2, 1 }
  uselistorder i32 %v4_175e8, { 1, 0 }
  uselistorder i32 %v3_175dc, { 1, 0 }
  uselistorder i32 %v1_175d4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_175c8, { 1, 0 }
  uselistorder i32 %v12_175c4, { 0, 2, 1 }
  uselistorder i32 %v8_175a4, { 1, 0, 2 }
  uselistorder i32 %v5_175a4, { 1, 0, 2 }
  uselistorder i32 %v2_175a4, { 1, 0, 2 }
  uselistorder i32 %v0_175a4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_175c4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_17600, { 0, 2, 1 }
  uselistorder i32 %v1_175fc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_17580, { 2, 0, 1, 3 }
  uselistorder i32 %v2_17580, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17604, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1769c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_17574, { 1, 0 }
  uselistorder i32 %v0_17574, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1756c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1756c, { 1, 0, 2 }
  uselistorder i32 %v0_1756c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1769c77, { 1, 0 }
  uselistorder i32 %v1_1754c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_17554, { 1, 0 }
  uselistorder i32 %v0_17528, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1751c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_17508, { 1, 0, 2 }
  uselistorder i32 %v1_17504, { 1, 0 }
  uselistorder i32 %v1_174fc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_174fc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_174f4, { 0, 2, 1 }
  uselistorder i32 %v3_174f4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_174f4, { 1, 0 }
  uselistorder i1 %v1_174f4, { 1, 0 }
  uselistorder i32 %v3_174f0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_174e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_174d4, { 1, 2, 0 }
  uselistorder i32 %v1_174cc, { 0, 2, 1 }
  uselistorder i32 %v12_174c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_174bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174c0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_174b0, { 0, 2, 1 }
  uselistorder i32 %v1_174a8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_174a8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_174a0, { 1, 0 }
  uselistorder i32 %v1_17498, { 2, 1, 0 }
  uselistorder i32 %v2_17490, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_17490, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1748c, { 1, 0 }
  uselistorder i32 %v2_17480, { 1, 0 }
  uselistorder i32 %v1_17480, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_17480, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 69, 1, 2, 3, 4, 5, 70, 6, 7, 8, 9, 10, 71, 11, 12, 67, 68, 72, 28, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 29, 30, 62, 31, 32, 33, 34, 35, 63, 36, 37, 38, 39, 40, 64, 41, 42, 43, 44, 45, 65, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0, 56, 3, 4, 6, 7, 5, 57, 8, 9, 11, 54, 10, 58, 53, 55, 59, 62, 60, 66, 67, 12, 13, 14, 16, 15, 17, 18, 61, 19, 20, 63, 21, 64, 22, 65, 23, 24, 25, 26, 27, 30, 28, 40, 29, 31, 34, 32, 41, 33, 35, 38, 36, 42, 37, 39, 43, 44, 47, 45, 48, 46, 49, 50, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 28, 1, 2, 29, 3, 4, 30, 5, 27, 33, 34, 6, 7, 19, 8, 10, 9, 11, 12, 31, 13, 14, 32, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 0, 24, 1, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 0, 26, 1, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -3, { 0, 4, 5, 3, 1, 2 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 15, { 9, 10, 11, 0, 21, 1, 22, 12, 13, 14, 3, 15, 16, 4, 17, 5, 6, 7, 18, 8, 19, 2, 20 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 29, 2, 4, 5, 3, 6, 7, 8, 9, 16, 34, 39, 37, 38, 36, 30, 31, 20, 21, 32, 33, 35, 22, 23, 24, 25, 17, 26, 11, 12, 10, 13, 14, 15, 18, 19, 27, 28, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 11, { 9, 10, 11, 21, 27, 29, 0, 12, 13, 14, 15, 2, 16, 3, 17, 4, 18, 19, 20, 22, 23, 5, 24, 6, 25, 1, 26, 28, 7, 30, 31, 32, 8, 33 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 3, 5, 4, 23, 24 }
  uselistorder i32 48, { 0, 2, 4, 14, 3, 5, 6, 16, 17, 10, 11, 12, 13, 20, 21, 22, 18, 23, 7, 15, 19, 1, 8, 24, 9, 25 }
  uselistorder i32 40, { 2, 9, 11, 1, 4, 3, 10, 12, 5, 13, 14, 15, 16, 17, 18, 20, 19, 0, 6, 21, 7, 22, 8, 23 }
  uselistorder i32 36, { 4, 22, 5, 6, 7, 23, 8, 20, 9, 21, 10, 11, 12, 0, 1, 13, 2, 14, 3, 15, 16, 17, 24, 18, 25, 19, 26 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
  uselistorder i32 31, { 5, 6, 12, 0, 7, 1, 8, 2, 9, 3, 10, 11, 4 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 6, 5 }
  uselistorder i32 24, { 0, 64, 65, 66, 67, 11, 12, 13, 15, 14, 16, 1, 17, 68, 69, 70, 18, 71, 19, 20, 72, 21, 63, 99, 100, 59, 60, 61, 62, 22, 23, 24, 25, 117, 118, 26, 121, 27, 2, 28, 101, 102, 29, 103, 56, 57, 8, 92, 93, 78, 94, 89, 73, 74, 75, 76, 77, 79, 80, 81, 82, 30, 83, 31, 84, 32, 85, 86, 87, 88, 90, 91, 95, 96, 97, 98, 33, 34, 35, 36, 3, 37, 38, 9, 104, 105, 39, 40, 4, 41, 106, 42, 43, 44, 10, 107, 45, 46, 47, 108, 48, 5, 109, 110, 111, 112, 49, 50, 113, 51, 114, 52, 6, 115, 7, 53, 116, 119, 54, 120, 55, 58 }
  uselistorder i32 27, { 1, 0, 2, 6, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32* @lr, { 174, 175, 176, 177, 178, 179, 180, 181, 182, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 113, 114, 183, 184, 12, 13, 115, 116, 117, 118, 119, 120, 103, 104, 105, 121, 134, 135, 122, 123, 124, 125, 126, 127, 128, 1, 129, 130, 132, 133, 131, 31, 32, 33, 34, 35, 36, 136, 137, 138, 139, 106, 140, 15, 16, 14, 17, 18, 19, 0, 23, 24, 20, 21, 22, 25, 26, 27, 28, 29, 30, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 141, 142, 143, 111, 112, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173 }
  uselistorder label %dec_label_pc_178f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17818, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177b8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_17744, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17708, { 1, 0 }
  uselistorder label %dec_label_pc_176f4, { 1, 0 }
  uselistorder label %dec_label_pc_176b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1757c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1754c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_174e8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_174a8, { 1, 0 }
}

define i32 @function_17910(i32 %arg1) local_unnamed_addr {
dec_label_pc_17910:
  %v1_17910 = and i32 %arg1, -4
  %v1_17914 = inttoptr i32 %v1_17910 to i32*
  %v2_17914 = load i32, i32* %v1_17914, align 4
  %v1_17918 = urem i32 %arg1, 4
  store i32 %v1_17918, i32* @r3, align 4
  %v2_17918 = icmp eq i32 %v1_17918, 0
  %v1_1791c = sub nsw i32 0, %v1_17918
  br i1 %v2_17918, label %.preheader.preheader, label %dec_label_pc_17924

dec_label_pc_17924:                               ; preds = %dec_label_pc_17910
  %v1_17924 = or i32 %v2_17914, 255
  %v7_17928 = icmp eq i32 %v1_17918, 1
  br i1 %v7_17928, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_17924
  %v9_1792c = or i32 %v2_17914, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_17924, %bb
  %v8_17934 = phi i32 [ %v1_17924, %dec_label_pc_17924 ], [ %v9_1792c, %bb ]
  %v1_17930 = add nsw i32 %v1_17918, -2
  store i32 %v1_17930, i32* @r3, align 4
  %v7_17934 = icmp eq i32 %v1_17918, 3
  br i1 %v7_17934, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_17934 = or i32 %v8_17934, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_17910
  %v1_17944.ph = phi i32 [ %v2_17914, %dec_label_pc_17910 ], [ %v9_17934, %bb34 ], [ %v8_17934, %bb33 ]
  %v1_1793838 = urem i32 %v1_17944.ph, 256
  %v2_1793839 = icmp eq i32 %v1_1793838, 0
  %v2_1793c40 = and i32 %v1_17944.ph, 65280
  %v3_1793c41 = icmp eq i32 %v2_1793c40, 0
  %or.cond42 = or i1 %v2_1793839, %v3_1793c41
  %v2_1794043 = and i32 %v1_17944.ph, 16711680
  %v3_1794044 = icmp eq i32 %v2_1794043, 0
  %or.cond3145 = or i1 %v3_1794044, %or.cond42
  %v4_1794446 = icmp ult i32 %v1_17944.ph, 16777216
  %or.cond3247 = or i1 %v4_1794446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_17954, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_179481349 = phi i32 [ %v2_1794814, %.thread4 ], [ %v1_1791c, %.preheader.preheader ]
  %v1_1794c48.in = phi i32 [ %v1_1794c48, %.thread4 ], [ %v1_17910, %.preheader.preheader ]
  %v1_1794c48 = add i32 %v1_1794c48.in, 4
  %v2_1794814 = add i32 %v1_179481349, 4
  %v2_1794c = inttoptr i32 %v1_1794c48 to i32*
  %v3_1794c = load i32, i32* %v2_1794c, align 4
  %v1_17938 = urem i32 %v3_1794c, 256
  %v2_17938 = icmp eq i32 %v1_17938, 0
  %v2_1793c = and i32 %v3_1794c, 65280
  %v3_1793c = icmp eq i32 %v2_1793c, 0
  %or.cond = or i1 %v2_17938, %v3_1793c
  %v2_17940 = and i32 %v3_1794c, 16711680
  %v3_17940 = icmp eq i32 %v2_17940, 0
  %or.cond31 = or i1 %v3_17940, %or.cond
  %v4_17944 = icmp ult i32 %v3_1794c, 16777216
  %or.cond32 = or i1 %v4_17944, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_17954, label %.thread4

dec_label_pc_17954:                               ; preds = %.thread4, %.preheader.preheader
  %v1_1794813.lcssa = phi i32 [ %v1_1791c, %.preheader.preheader ], [ %v2_1794814, %.thread4 ]
  %v2_17938.lcssa = phi i1 [ %v2_1793839, %.preheader.preheader ], [ %v2_17938, %.thread4 ]
  %v3_1793c.lcssa = phi i1 [ %v3_1793c41, %.preheader.preheader ], [ %v3_1793c, %.thread4 ]
  %v3_17940.lcssa = phi i1 [ %v3_1794044, %.preheader.preheader ], [ %v3_17940, %.thread4 ]
  br i1 %v2_17938.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_17954
  %v2_17958 = add i32 %v1_1794813.lcssa, 1
  br i1 %v3_1793c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_1796017 = add i32 %v1_1794813.lcssa, 2
  br i1 %v3_17940.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_17968 = add i32 %v1_1794813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_17954, %bb35, %bb36, %bb37
  %v1_1796c = phi i32 [ %v2_17958, %bb35 ], [ %v2_1796017, %bb36 ], [ %v2_17968, %bb37 ], [ %v1_1794813.lcssa, %dec_label_pc_17954 ]
  ret i32 %v1_1796c

; uselistorder directives
  uselistorder i32 %v1_1794813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_1794c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_17944.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_17918, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 2, 0, 5, 1, 4, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 -2, { 1, 3, 4, 2, 12, 13, 14, 0, 5, 28, 27, 29, 30, 31, 20, 21, 22, 23, 24, 25, 26, 15, 16, 17, 18, 19, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 65535, { 2, 93, 94, 0, 1, 13, 12, 3, 4, 44, 45, 24, 46, 23, 47, 15, 14, 5, 26, 48, 25, 49, 51, 16, 50, 6, 52, 53, 28, 54, 27, 55, 56, 57, 58, 29, 59, 60, 17, 61, 7, 32, 62, 63, 64, 31, 65, 30, 66, 68, 18, 67, 8, 69, 70, 36, 71, 33, 72, 34, 73, 35, 74, 19, 75, 76, 37, 77, 38, 78, 81, 82, 20, 79, 80, 9, 41, 83, 39, 84, 40, 85, 87, 21, 86, 10, 11, 88, 89, 43, 90, 42, 91, 22, 92 }
  uselistorder i32 -4, { 40, 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 37, 38, 39 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_17970(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17974.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_17970

dec_label_pc_17970:                               ; preds = %bb3, %bb
  %v0_17974 = phi i32 [ %v0_17974.pre, %bb ], [ %v5_17974, %bb3 ]
  %v0_17970 = phi i32 [ %tmp, %bb ], [ %v5_17970, %bb3 ]
  %v1_17970 = inttoptr i32 %v0_17970 to i8*
  %v2_17970 = load i8, i8* %v1_17970, align 1
  %v1_17974 = inttoptr i32 %v0_17974 to i8*
  %v2_17974 = load i8, i8* %v1_17974, align 1
  %v3_17974 = zext i8 %v2_17974 to i32
  %v2_17978 = icmp eq i8 %v2_17970, 0
  br i1 %v2_17978, label %.dec_label_pc_17984_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_17970
  %v5_17974 = add i32 %v0_17974, 1
  %v5_17970 = add i32 %v0_17970, 1
  %v3_17970 = zext i8 %v2_17970 to i32
  %v10_1797c = icmp eq i8 %v2_17970, %v2_17974
  br i1 %v10_1797c, label %dec_label_pc_17970, label %dec_label_pc_17984

.dec_label_pc_17984_crit_edge:                    ; preds = %dec_label_pc_17970
  br label %dec_label_pc_17984

dec_label_pc_17984:                               ; preds = %bb3, %.dec_label_pc_17984_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_17984_crit_edge ], [ %v3_17970, %bb3 ]
  %v2_17984.pre-phi = sub nsw i32 %.pn, %v3_17974
  ret i32 %v2_17984.pre-phi

; uselistorder directives
  uselistorder i8 %v2_17970, { 0, 2, 1 }
  uselistorder i32 %v0_17970, { 1, 0 }
  uselistorder i32 %v0_17974, { 1, 0 }
  uselistorder label %dec_label_pc_17984, { 1, 0 }
}

define i32 @function_17990() local_unnamed_addr {
dec_label_pc_17990:
  %stack_var_-16 = alloca i32, align 4
  %v3_17990 = load i32, i32* @r4, align 4
  store i32 %v3_17990, i32* %stack_var_-16, align 4
  %v6_17990 = load i32, i32* @r5, align 4
  %v9_17990 = load i32, i32* @r6, align 4
  %v0_17994 = load i32, i32* @r0, align 4
  %v0_17998 = load i32, i32* @r1, align 4
  store i32 %v0_17998, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_179b48 = inttoptr i32 %v0_17994 to i8*
  %v2_179b49 = load i8, i8* %v1_179b48, align 1
  %v2_179b811 = icmp eq i8 %v2_179b49, 0
  store i32 %v0_17998, i32* @r0, align 4
  %v1_179c012 = add i32 %v0_17994, 1
  store i32 %v1_179c012, i32* @r4, align 4
  br i1 %v2_179b811, label %dec_label_pc_179c8, label %dec_label_pc_179a4

dec_label_pc_179a4:                               ; preds = %dec_label_pc_17990, %dec_label_pc_179b0
  %v3_179b414.in = phi i8 [ %v2_179b4, %dec_label_pc_179b0 ], [ %v2_179b49, %dec_label_pc_17990 ]
  %v0_179bc13 = phi i32 [ %v0_179bc.pre, %dec_label_pc_179b0 ], [ %v0_17998, %dec_label_pc_17990 ]
  %v3_179b414 = zext i8 %v3_179b414.in to i32
  %v2_179a4 = call i32 @function_17b5c(i32 %v0_179bc13, i32 %v3_179b414)
  %v2_179a8 = icmp eq i32 %v2_179a4, 0
  %v0_179b0 = load i32, i32* @r5, align 4
  br i1 %v2_179a8, label %dec_label_pc_179b0, label %dec_label_pc_179c8

dec_label_pc_179b0:                               ; preds = %dec_label_pc_179a4
  %v1_179b0 = add i32 %v0_179b0, 1
  %v0_179b4.pre = load i32, i32* @r4, align 4
  %v0_179bc.pre = load i32, i32* @r6, align 4
  store i32 %v1_179b0, i32* @r5, align 4
  %v1_179b4 = inttoptr i32 %v0_179b4.pre to i8*
  %v2_179b4 = load i8, i8* %v1_179b4, align 1
  %v2_179b8 = icmp eq i8 %v2_179b4, 0
  store i32 %v0_179bc.pre, i32* @r0, align 4
  %v1_179c0 = add i32 %v0_179b4.pre, 1
  store i32 %v1_179c0, i32* @r4, align 4
  br i1 %v2_179b8, label %dec_label_pc_179c8, label %dec_label_pc_179a4

dec_label_pc_179c8:                               ; preds = %dec_label_pc_179b0, %dec_label_pc_179a4, %dec_label_pc_17990
  %v0_179c8 = phi i32 [ 0, %dec_label_pc_17990 ], [ %v0_179b0, %dec_label_pc_179a4 ], [ %v1_179b0, %dec_label_pc_179b0 ]
  %v2_179cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_179cc, i32* @r4, align 4
  store i32 %v6_17990, i32* @r5, align 4
  store i32 %v9_17990, i32* @r6, align 4
  ret i32 %v0_179c8

; uselistorder directives
  uselistorder i8 %v2_179b4, { 1, 0 }
  uselistorder i32 %v0_179bc.pre, { 1, 0 }
  uselistorder i32 %v0_179b4.pre, { 1, 0 }
  uselistorder i32* @r6, { 25, 0, 26, 27, 1, 28, 29, 30, 2, 31, 32, 20, 21, 33, 34, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 5, 52, 53, 54, 55, 56, 57, 58, 59, 22, 23, 24, 6, 7, 8, 426, 427, 428, 429, 430, 431, 432, 60, 9, 61, 10, 62, 424, 425, 313, 317, 318, 319, 320, 314, 315, 316, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 321, 346, 347, 348, 322, 323, 324, 325, 326, 11, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 344, 338, 339, 340, 341, 343, 345, 73, 74, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 68, 69, 70, 71, 66, 72, 63, 64, 65, 67, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 260, 261, 262, 263, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 12, 139, 140, 141, 142, 143, 144, 158, 159, 160, 161, 17, 162, 163, 164, 13, 165, 166, 167, 171, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 182, 179, 180, 181, 183, 184, 185, 186, 187, 188, 193, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 217, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 227, 228, 229, 231, 232, 233, 234, 241, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 253, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 264, 265, 266, 272, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 14, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 19, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 18, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 15, 16, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423 }
  uselistorder label %dec_label_pc_179a4, { 1, 0 }
}

define i32 @function_179d4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_179d4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17a042 = load i32, i32* @r0, align 4
  %v1_17a043 = inttoptr i32 %v0_17a042 to i8*
  %v2_17a044 = load i8, i8* %v1_17a043, align 1
  %v3_17a045 = zext i8 %v2_17a044 to i32
  store i32 %v3_17a045, i32* @ip, align 4
  %v2_17a086 = icmp eq i8 %v2_17a044, 0
  br i1 %v2_17a086, label %dec_label_pc_17a14, label %dec_label_pc_179e8.preheader

dec_label_pc_179e0:                               ; preds = %dec_label_pc_179e8
  %v3_179e8 = zext i8 %v2_179e8 to i32
  %v1_179f0 = add i32 %v0_179f0, 1
  %v9_179e0 = icmp eq i32 %v0_179e010, %v3_179e8
  br i1 %v9_179e0, label %dec_label_pc_179fc, label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %dec_label_pc_179e8.preheader, %dec_label_pc_179e0
  %v0_179f0 = phi i32 [ %tmp, %dec_label_pc_179e8.preheader ], [ %v1_179f0, %dec_label_pc_179e0 ]
  %v1_179e8 = inttoptr i32 %v0_179f0 to i8*
  %v2_179e8 = load i8, i8* %v1_179e8, align 1
  %v2_179ec = icmp eq i8 %v2_179e8, 0
  br i1 %v2_179ec, label %dec_label_pc_17a14, label %dec_label_pc_179e0

dec_label_pc_179fc:                               ; preds = %dec_label_pc_179e0
  %v1_179fc = add i32 %v0_179fc, 1
  %v1_17a00 = add i32 %v0_17a00, 1
  %v1_17a04 = inttoptr i32 %v1_17a00 to i8*
  %v2_17a04 = load i8, i8* %v1_17a04, align 1
  %v3_17a04 = zext i8 %v2_17a04 to i32
  store i32 %v3_17a04, i32* @ip, align 4
  %v2_17a08 = icmp eq i8 %v2_17a04, 0
  br i1 %v2_17a08, label %dec_label_pc_17a14, label %dec_label_pc_179e8.preheader

dec_label_pc_179e8.preheader:                     ; preds = %dec_label_pc_179d4, %dec_label_pc_179fc
  %v0_17a00 = phi i32 [ %v1_17a00, %dec_label_pc_179fc ], [ %v0_17a042, %dec_label_pc_179d4 ]
  %v0_179fc = phi i32 [ %v1_179fc, %dec_label_pc_179fc ], [ 0, %dec_label_pc_179d4 ]
  %v0_179e010 = phi i32 [ %v3_17a04, %dec_label_pc_179fc ], [ %v3_17a045, %dec_label_pc_179d4 ]
  br label %dec_label_pc_179e8

dec_label_pc_17a14:                               ; preds = %dec_label_pc_179fc, %dec_label_pc_179e8, %dec_label_pc_179d4
  %v0_17a14 = phi i32 [ 0, %dec_label_pc_179d4 ], [ %v0_179fc, %dec_label_pc_179e8 ], [ %v1_179fc, %dec_label_pc_179fc ]
  ret i32 %v0_17a14

; uselistorder directives
  uselistorder i32 %v0_179f0, { 1, 0 }
  uselistorder label %dec_label_pc_179e8.preheader, { 1, 0 }
}

define i32 @function_17a20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17a20:
  store i32 %arg1, i32* @r0, align 4
  %v1_17a24 = urem i32 %arg2, 256
  store i32 %v1_17a24, i32* @r4, align 4
  %v2_17a24 = icmp eq i32 %v1_17a24, 0
  br i1 %v2_17a24, label %dec_label_pc_17a38, label %dec_label_pc_17a4c.preheader

dec_label_pc_17a4c.preheader:                     ; preds = %dec_label_pc_17a20
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17a543 = call i32 @function_17b5c(i32 %arg1, i32 %v1_17a24)
  %v2_17a585 = icmp eq i32 %v2_17a543, 0
  br i1 %v2_17a585, label %dec_label_pc_17a60, label %dec_label_pc_17a44

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a20
  %v2_17a3c = call i32 @function_17b5c(i32 %arg1, i32 0)
  br label %dec_label_pc_17a64

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a4c.preheader, %dec_label_pc_17a44
  %v2_17a546 = phi i32 [ %v2_17a54, %dec_label_pc_17a44 ], [ %v2_17a543, %dec_label_pc_17a4c.preheader ]
  store i32 %v2_17a546, i32* @r5, align 4
  %v1_17a48 = add i32 %v2_17a546, 1
  store i32 %v1_17a48, i32* @r0, align 4
  %v0_17a50 = load i32, i32* @r4, align 4
  %v2_17a54 = call i32 @function_17b5c(i32 %v1_17a48, i32 %v0_17a50)
  %v2_17a58 = icmp eq i32 %v2_17a54, 0
  br i1 %v2_17a58, label %dec_label_pc_17a60, label %dec_label_pc_17a44

dec_label_pc_17a60:                               ; preds = %dec_label_pc_17a44, %dec_label_pc_17a4c.preheader
  %v0_17a60 = load i32, i32* @r5, align 4
  br label %dec_label_pc_17a64

dec_label_pc_17a64:                               ; preds = %dec_label_pc_17a38, %dec_label_pc_17a60
  %storemerge = phi i32 [ %v2_17a3c, %dec_label_pc_17a38 ], [ %v0_17a60, %dec_label_pc_17a60 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_17a54, { 1, 0 }
  uselistorder i32 %v1_17a48, { 1, 0 }
  uselistorder i32 %v1_17a24, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_17b5c, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17a64, { 1, 0 }
  uselistorder label %dec_label_pc_17a44, { 1, 0 }
}

define i32 @function_17a70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17a70:
  %v1_17a74 = urem i32 %arg1, 256
  %v0_17a942 = load i32, i32* @r0, align 4
  %v1_17a943 = urem i32 %v0_17a942, 4
  %v2_17a944 = icmp eq i32 %v1_17a943, 0
  br i1 %v2_17a944, label %dec_label_pc_17a9c, label %dec_label_pc_17a7c

dec_label_pc_17a7c:                               ; preds = %dec_label_pc_17a70, %dec_label_pc_17a90
  %v0_17a90 = phi i32 [ %v1_17a90, %dec_label_pc_17a90 ], [ %v0_17a942, %dec_label_pc_17a70 ]
  %v1_17a7c = inttoptr i32 %v0_17a90 to i8*
  %v2_17a7c = load i8, i8* %v1_17a7c, align 1
  %v3_17a7c = zext i8 %v2_17a7c to i32
  %v9_17a80 = icmp eq i32 %v3_17a7c, %v1_17a74
  br i1 %v9_17a80, label %dec_label_pc_17b4c, label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %dec_label_pc_17a7c
  %v2_17a88 = icmp eq i8 %v2_17a7c, 0
  br i1 %v2_17a88, label %dec_label_pc_17b4c, label %dec_label_pc_17a90

dec_label_pc_17a90:                               ; preds = %dec_label_pc_17a88
  %v1_17a90 = add i32 %v0_17a90, 1
  %v1_17a94 = urem i32 %v1_17a90, 4
  %v2_17a94 = icmp eq i32 %v1_17a94, 0
  br i1 %v2_17a94, label %dec_label_pc_17a9c, label %dec_label_pc_17a7c

dec_label_pc_17a9c:                               ; preds = %dec_label_pc_17a90, %dec_label_pc_17a70
  %v0_17aa0 = phi i32 [ %v0_17a942, %dec_label_pc_17a70 ], [ %v1_17a90, %dec_label_pc_17a90 ]
  %v4_17a9c = mul nuw nsw i32 %v1_17a74, 256
  %v5_17a9c = or i32 %v4_17a9c, %v1_17a74
  %v4_17aa4 = mul i32 %v5_17a9c, 65536
  %v5_17aa4 = or i32 %v4_17aa4, %v5_17a9c
  br label %dec_label_pc_17aa8

dec_label_pc_17aa8:                               ; preds = %dec_label_pc_17b44, %dec_label_pc_17ae4, %dec_label_pc_17a9c
  %v0_17b0c = phi i32 [ %v0_17aa0, %dec_label_pc_17a9c ], [ %v4_17aa8, %dec_label_pc_17ae4 ], [ %v4_17aa8, %dec_label_pc_17b44 ]
  %v1_17aa8 = inttoptr i32 %v0_17b0c to i32*
  %v2_17aa8 = load i32, i32* %v1_17aa8, align 4
  %v4_17aa8 = add i32 %v0_17b0c, 4
  %v2_17ab0 = xor i32 %v2_17aa8, %v5_17aa4
  %v2_17ab4 = add i32 %v2_17ab0, 2130640639
  store i32 %v2_17ab4, i32* @ip, align 4
  %v2_17abc = add i32 %v2_17aa8, 2130640639
  %v1_17ac0 = sub i32 -1, %v2_17aa8
  %v2_17ac4 = xor i32 %v2_17abc, %v1_17ac0
  %v2_17ad0 = and i32 %v2_17ac4, -2130640640
  %v2_17ad8 = icmp eq i32 %v2_17ad0, 0
  br i1 %v2_17ad8, label %dec_label_pc_17ae4, label %dec_label_pc_17aec

dec_label_pc_17ae4:                               ; preds = %dec_label_pc_17aa8
  %v1_17acc = sub i32 -1, %v2_17ab0
  %v2_17ad4 = xor i32 %v2_17ab4, %v1_17acc
  %v2_17adc = and i32 %v2_17ad4, -2130640640
  %v2_17ae4 = icmp eq i32 %v2_17adc, 0
  br i1 %v2_17ae4, label %dec_label_pc_17aa8, label %dec_label_pc_17aec

dec_label_pc_17aec:                               ; preds = %dec_label_pc_17aa8, %dec_label_pc_17ae4
  %v2_17aec = inttoptr i32 %v0_17b0c to i8*
  %v3_17aec = load i8, i8* %v2_17aec, align 1
  %v4_17aec = zext i8 %v3_17aec to i32
  %v9_17af0 = icmp eq i32 %v4_17aec, %v1_17a74
  br i1 %v9_17af0, label %dec_label_pc_17b4c, label %dec_label_pc_17afc

dec_label_pc_17afc:                               ; preds = %dec_label_pc_17aec
  %v2_17afc = icmp eq i8 %v3_17aec, 0
  br i1 %v2_17afc, label %dec_label_pc_17b4c, label %dec_label_pc_17b04

dec_label_pc_17b04:                               ; preds = %dec_label_pc_17afc
  %v1_17b04 = add i32 %v0_17b0c, 1
  %v2_17b04 = inttoptr i32 %v1_17b04 to i8*
  %v3_17b04 = load i8, i8* %v2_17b04, align 1
  %v4_17b04 = zext i8 %v3_17b04 to i32
  %v9_17b08 = icmp eq i32 %v4_17b04, %v1_17a74
  br i1 %v9_17b08, label %dec_label_pc_17b4c, label %dec_label_pc_17b14

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17b04
  %v2_17b14 = icmp eq i8 %v3_17b04, 0
  br i1 %v2_17b14, label %dec_label_pc_17b4c, label %dec_label_pc_17b1c

dec_label_pc_17b1c:                               ; preds = %dec_label_pc_17b14
  %v1_17b1c = add i32 %v0_17b0c, 2
  %v2_17b1c = inttoptr i32 %v1_17b1c to i8*
  %v3_17b1c = load i8, i8* %v2_17b1c, align 1
  %v4_17b1c = zext i8 %v3_17b1c to i32
  %v9_17b20 = icmp eq i32 %v4_17b1c, %v1_17a74
  br i1 %v9_17b20, label %dec_label_pc_17b4c, label %dec_label_pc_17b2c

dec_label_pc_17b2c:                               ; preds = %dec_label_pc_17b1c
  %v2_17b2c = icmp eq i8 %v3_17b1c, 0
  br i1 %v2_17b2c, label %dec_label_pc_17b4c, label %dec_label_pc_17b34

dec_label_pc_17b34:                               ; preds = %dec_label_pc_17b2c
  %v1_17b34 = add i32 %v0_17b0c, 3
  %v2_17b34 = inttoptr i32 %v1_17b34 to i8*
  %v3_17b34 = load i8, i8* %v2_17b34, align 1
  %v4_17b34 = zext i8 %v3_17b34 to i32
  %v9_17b38 = icmp eq i32 %v4_17b34, %v1_17a74
  br i1 %v9_17b38, label %dec_label_pc_17b4c, label %dec_label_pc_17b44

dec_label_pc_17b44:                               ; preds = %dec_label_pc_17b34
  %v2_17b44 = icmp eq i8 %v3_17b34, 0
  br i1 %v2_17b44, label %dec_label_pc_17b4c, label %dec_label_pc_17aa8

dec_label_pc_17b4c:                               ; preds = %dec_label_pc_17a88, %dec_label_pc_17a7c, %dec_label_pc_17b44, %dec_label_pc_17b34, %dec_label_pc_17b2c, %dec_label_pc_17b1c, %dec_label_pc_17b14, %dec_label_pc_17b04, %dec_label_pc_17afc, %dec_label_pc_17aec
  %v1_17b50 = phi i32 [ %v1_17b34, %dec_label_pc_17b44 ], [ %v1_17b34, %dec_label_pc_17b34 ], [ %v1_17b1c, %dec_label_pc_17b2c ], [ %v1_17b1c, %dec_label_pc_17b1c ], [ %v1_17b04, %dec_label_pc_17b14 ], [ %v1_17b04, %dec_label_pc_17b04 ], [ %v0_17b0c, %dec_label_pc_17afc ], [ %v0_17b0c, %dec_label_pc_17aec ], [ %v0_17a90, %dec_label_pc_17a7c ], [ %v0_17a90, %dec_label_pc_17a88 ]
  ret i32 %v1_17b50

; uselistorder directives
  uselistorder i32 %v4_17aa8, { 1, 0 }
  uselistorder i32 %v2_17aa8, { 0, 2, 1 }
  uselistorder i32 %v0_17b0c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_17a9c, { 1, 0 }
  uselistorder i32 %v1_17a90, { 1, 0, 2 }
  uselistorder i32 %v0_17a942, { 2, 1, 0 }
  uselistorder i32 %v1_17a74, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_17b4c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_17aec, { 1, 0 }
  uselistorder label %dec_label_pc_17a7c, { 1, 0 }
}

define i32 @function_17b5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b5c:
  %v1_17b60 = urem i32 %arg1, 256
  %v0_17b803 = load i32, i32* @r0, align 4
  %v1_17b804 = urem i32 %v0_17b803, 4
  %v2_17b805 = icmp eq i32 %v1_17b804, 0
  br i1 %v2_17b805, label %dec_label_pc_17b88, label %dec_label_pc_17b68

dec_label_pc_17b68:                               ; preds = %dec_label_pc_17b5c, %dec_label_pc_17b7c
  %v0_17b7c = phi i32 [ %v1_17b7c, %dec_label_pc_17b7c ], [ %v0_17b803, %dec_label_pc_17b5c ]
  %v1_17b68 = inttoptr i32 %v0_17b7c to i8*
  %v2_17b68 = load i8, i8* %v1_17b68, align 1
  %v3_17b68 = zext i8 %v2_17b68 to i32
  %v9_17b6c = icmp eq i32 %v3_17b68, %v1_17b60
  br i1 %v9_17b6c, label %dec_label_pc_17c3c, label %dec_label_pc_17b74

dec_label_pc_17b74:                               ; preds = %dec_label_pc_17b68
  %v2_17b74 = icmp eq i8 %v2_17b68, 0
  br i1 %v2_17b74, label %dec_label_pc_17c38, label %dec_label_pc_17b7c

dec_label_pc_17b7c:                               ; preds = %dec_label_pc_17b74
  %v1_17b7c = add i32 %v0_17b7c, 1
  %v1_17b80 = urem i32 %v1_17b7c, 4
  %v2_17b80 = icmp eq i32 %v1_17b80, 0
  br i1 %v2_17b80, label %dec_label_pc_17b88, label %dec_label_pc_17b68

dec_label_pc_17b88:                               ; preds = %dec_label_pc_17b7c, %dec_label_pc_17b5c
  %v0_17b8c = phi i32 [ %v0_17b803, %dec_label_pc_17b5c ], [ %v1_17b7c, %dec_label_pc_17b7c ]
  %v4_17b88 = mul nuw nsw i32 %v1_17b60, 256
  %v5_17b88 = or i32 %v4_17b88, %v1_17b60
  %v4_17b90 = mul i32 %v5_17b88, 65536
  %v5_17b90 = or i32 %v4_17b90, %v5_17b88
  br label %dec_label_pc_17b94

dec_label_pc_17b94:                               ; preds = %dec_label_pc_17c30, %dec_label_pc_17bd0, %dec_label_pc_17b88
  %v0_17bf8 = phi i32 [ %v0_17b8c, %dec_label_pc_17b88 ], [ %v4_17b94, %dec_label_pc_17bd0 ], [ %v4_17b94, %dec_label_pc_17c30 ]
  %v1_17b94 = inttoptr i32 %v0_17bf8 to i32*
  %v2_17b94 = load i32, i32* %v1_17b94, align 4
  %v4_17b94 = add i32 %v0_17bf8, 4
  %v2_17b9c = xor i32 %v2_17b94, %v5_17b90
  %v2_17ba0 = add i32 %v2_17b9c, 2130640639
  store i32 %v2_17ba0, i32* @ip, align 4
  %v2_17ba8 = add i32 %v2_17b94, 2130640639
  %v1_17bac = sub i32 -1, %v2_17b94
  %v2_17bb0 = xor i32 %v2_17ba8, %v1_17bac
  %v2_17bbc = and i32 %v2_17bb0, -2130640640
  %v2_17bc4 = icmp eq i32 %v2_17bbc, 0
  br i1 %v2_17bc4, label %dec_label_pc_17bd0, label %dec_label_pc_17bd8

dec_label_pc_17bd0:                               ; preds = %dec_label_pc_17b94
  %v1_17bb8 = sub i32 -1, %v2_17b9c
  %v2_17bc0 = xor i32 %v2_17ba0, %v1_17bb8
  %v2_17bc8 = and i32 %v2_17bc0, -2130640640
  %v2_17bd0 = icmp eq i32 %v2_17bc8, 0
  br i1 %v2_17bd0, label %dec_label_pc_17b94, label %dec_label_pc_17bd8

dec_label_pc_17bd8:                               ; preds = %dec_label_pc_17b94, %dec_label_pc_17bd0
  %v2_17bd8 = inttoptr i32 %v0_17bf8 to i8*
  %v3_17bd8 = load i8, i8* %v2_17bd8, align 1
  %v4_17bd8 = zext i8 %v3_17bd8 to i32
  %v9_17bdc = icmp eq i32 %v4_17bd8, %v1_17b60
  br i1 %v9_17bdc, label %dec_label_pc_17c3c, label %dec_label_pc_17be8

dec_label_pc_17be8:                               ; preds = %dec_label_pc_17bd8
  %v2_17be8 = icmp eq i8 %v3_17bd8, 0
  br i1 %v2_17be8, label %dec_label_pc_17c38, label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %dec_label_pc_17be8
  %v1_17bf0 = add i32 %v0_17bf8, 1
  %v2_17bf0 = inttoptr i32 %v1_17bf0 to i8*
  %v3_17bf0 = load i8, i8* %v2_17bf0, align 1
  %v4_17bf0 = zext i8 %v3_17bf0 to i32
  %v9_17bf4 = icmp eq i32 %v4_17bf0, %v1_17b60
  br i1 %v9_17bf4, label %dec_label_pc_17c3c, label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %dec_label_pc_17bf0
  %v2_17c00 = icmp eq i8 %v3_17bf0, 0
  br i1 %v2_17c00, label %dec_label_pc_17c38, label %dec_label_pc_17c08

dec_label_pc_17c08:                               ; preds = %dec_label_pc_17c00
  %v1_17c08 = add i32 %v0_17bf8, 2
  %v2_17c08 = inttoptr i32 %v1_17c08 to i8*
  %v3_17c08 = load i8, i8* %v2_17c08, align 1
  %v4_17c08 = zext i8 %v3_17c08 to i32
  %v9_17c0c = icmp eq i32 %v4_17c08, %v1_17b60
  br i1 %v9_17c0c, label %dec_label_pc_17c3c, label %dec_label_pc_17c18

dec_label_pc_17c18:                               ; preds = %dec_label_pc_17c08
  %v2_17c18 = icmp eq i8 %v3_17c08, 0
  br i1 %v2_17c18, label %dec_label_pc_17c38, label %dec_label_pc_17c20

dec_label_pc_17c20:                               ; preds = %dec_label_pc_17c18
  %v1_17c20 = add i32 %v0_17bf8, 3
  %v2_17c20 = inttoptr i32 %v1_17c20 to i8*
  %v3_17c20 = load i8, i8* %v2_17c20, align 1
  %v4_17c20 = zext i8 %v3_17c20 to i32
  %v9_17c24 = icmp eq i32 %v4_17c20, %v1_17b60
  br i1 %v9_17c24, label %dec_label_pc_17c3c, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c20
  %v2_17c30 = icmp eq i8 %v3_17c20, 0
  br i1 %v2_17c30, label %dec_label_pc_17c38, label %dec_label_pc_17b94

dec_label_pc_17c38:                               ; preds = %dec_label_pc_17b74, %dec_label_pc_17c30, %dec_label_pc_17c18, %dec_label_pc_17c00, %dec_label_pc_17be8
  br label %dec_label_pc_17c3c

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17b68, %dec_label_pc_17c20, %dec_label_pc_17c08, %dec_label_pc_17bf0, %dec_label_pc_17bd8, %dec_label_pc_17c38
  %v1_17c40 = phi i32 [ 0, %dec_label_pc_17c38 ], [ %v1_17c20, %dec_label_pc_17c20 ], [ %v1_17c08, %dec_label_pc_17c08 ], [ %v1_17bf0, %dec_label_pc_17bf0 ], [ %v0_17bf8, %dec_label_pc_17bd8 ], [ %v0_17b7c, %dec_label_pc_17b68 ]
  ret i32 %v1_17c40

; uselistorder directives
  uselistorder i32 %v4_17b94, { 1, 0 }
  uselistorder i32 %v2_17b94, { 0, 2, 1 }
  uselistorder i32 %v0_17bf8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17b88, { 1, 0 }
  uselistorder i32 %v1_17b7c, { 1, 0, 2 }
  uselistorder i32 %v0_17b803, { 2, 1, 0 }
  uselistorder i32 %v1_17b60, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 3, { 3, 4, 1, 5, 67, 68, 127, 69, 70, 71, 72, 73, 74, 81, 82, 128, 7, 120, 27, 121, 26, 122, 38, 123, 75, 124, 76, 39, 88, 28, 83, 84, 2, 85, 86, 87, 40, 20, 89, 41, 90, 42, 91, 43, 92, 44, 93, 45, 94, 46, 95, 29, 96, 47, 97, 48, 98, 49, 50, 51, 52, 53, 54, 0, 99, 100, 22, 21, 55, 101, 56, 30, 102, 9, 8, 57, 31, 103, 11, 10, 58, 104, 32, 105, 106, 24, 23, 59, 107, 33, 108, 13, 12, 60, 109, 34, 110, 61, 111, 15, 14, 62, 112, 35, 113, 17, 16, 63, 114, 36, 115, 19, 18, 64, 116, 37, 117, 25, 118, 6, 119, 125, 77, 78, 79, 80, 65, 126, 66 }
  uselistorder i32 2130640639, { 0, 2, 1, 3 }
  uselistorder i32 65536, { 4, 5, 7, 6, 12, 8, 13, 9, 14, 10, 15, 11, 16, 17, 18, 22, 19, 23, 20, 24, 21, 25, 143, 146, 142, 147, 26, 27, 28, 29, 30, 31, 32, 33, 34, 141, 35, 36, 37, 2, 38, 0, 3, 39, 40, 42, 41, 1, 45, 43, 44, 46, 52, 47, 53, 48, 54, 49, 50, 51, 57, 58, 59, 60, 55, 56, 140, 62, 61, 64, 63, 66, 67, 68, 65, 69, 71, 72, 73, 70, 74, 75, 77, 78, 76, 79, 144, 80, 83, 81, 84, 82, 86, 87, 88, 85, 89, 94, 90, 95, 91, 96, 92, 93, 98, 99, 100, 97, 101, 145, 102, 103, 104, 106, 105, 107, 115, 108, 116, 109, 117, 110, 118, 111, 119, 112, 113, 114, 121, 122, 123, 124, 120, 125, 130, 126, 131, 127, 128, 129, 133, 135, 136, 137, 132, 134, 139, 138 }
  uselistorder label %dec_label_pc_17c3c, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_17c38, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_17bd8, { 1, 0 }
  uselistorder label %dec_label_pc_17b68, { 1, 0 }
}

define i32 @function_17c4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c4c:
  %stack_var_-68 = alloca i32, align 4
  %v2_17c54 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_17c54, i32* @r1, align 4
  %v0_17c58 = call i32 @function_17c70()
  %v1_17c5c = sub i32 1, %v0_17c58
  %v2_17c5c = icmp ult i32 %v0_17c58, 2
  br i1 %v2_17c5c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17c4c
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17c4c, %bb
  %v1_17c6c = phi i32 [ %v1_17c5c, %dec_label_pc_17c4c ], [ 0, %bb ]
  ret i32 %v1_17c6c

; uselistorder directives
  uselistorder i32 %v0_17c58, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_17c70() local_unnamed_addr {
dec_label_pc_17c70:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_17c70 = load i32, i32* @r4, align 4
  %v6_17c70 = load i32, i32* @r5, align 4
  %v2_17c78 = ptrtoint i32* %stack_var_-52 to i32
  %v0_17c7c = load i32, i32* @r1, align 4
  store i32 %v0_17c7c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_17c88 = load i32, i32* @r0, align 4
  %v3_17c88 = call i32 @function_13028(i32 %v0_17c88, i32 21505, i32 %v2_17c78)
  store i32 %v3_17c88, i32* %r0.global-to-local, align 4
  store i32 %v3_17c88, i32* @r5, align 4
  %v2_17c8c = icmp eq i32 %v3_17c88, 0
  br i1 %v2_17c8c, label %dec_label_pc_17c94, label %dec_label_pc_17cd8

dec_label_pc_17c94:                               ; preds = %dec_label_pc_17c70
  %v4_17ca0 = zext i8 %tmp to i32
  store i32 %v4_17ca0, i32* @ip, align 4
  %v3_17ca4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_17ca4, i32* @r3, align 4
  %v1_17ca8 = load i32, i32* @r4, align 4
  %v2_17ca8 = add i32 %v1_17ca8, 4
  %v3_17ca8 = inttoptr i32 %v2_17ca8 to i32*
  %v0_17cac = load i32, i32* %r1.global-to-local, align 4
  %v1_17cac = load i32, i32* @r4, align 4
  %v2_17cac = add i32 %v1_17cac, 8
  %v3_17cac = inttoptr i32 %v2_17cac to i32*
  store i32 %v0_17cac, i32* %v3_17cac, align 4
  %v0_17cb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_17cb0 = load i32, i32* @r4, align 4
  %v2_17cb0 = add i32 %v1_17cb0, 12
  %v3_17cb0 = inttoptr i32 %v2_17cb0 to i32*
  store i32 %v0_17cb0, i32* %v3_17cb0, align 4
  %v2_17cb4 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_17cb4, i32* @r1, align 4
  %v1_17cbc = load i32, i32* @r4, align 4
  %v2_17cbc = inttoptr i32 %v1_17cbc to i32*
  store i32 %v3_17ca4, i32* %v2_17cbc, align 4
  %v0_17cc0 = load i32, i32* @ip, align 4
  %v1_17cc0 = trunc i32 %v0_17cc0 to i8
  %v2_17cc0 = load i32, i32* @r4, align 4
  %v3_17cc0 = add i32 %v2_17cc0, 16
  %v4_17cc0 = inttoptr i32 %v3_17cc0 to i8*
  store i8 %v1_17cc0, i8* %v4_17cc0, align 1
  %v0_17cc4 = load i32, i32* @r4, align 4
  %v1_17cc4 = add i32 %v0_17cc4, 17
  store i32 %v1_17cc4, i32* %r0.global-to-local, align 4
  %v4_17cc8 = call i32 @function_181b4(i32 %v1_17cc4, i32 %v2_17cb4, i32 19, i32 %v3_17ca4)
  store i32 %v4_17cc8, i32* %r0.global-to-local, align 4
  %v0_17ccc = load i32, i32* @r5, align 4
  store i32 %v0_17ccc, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_17cd4 = inttoptr i32 %v4_17cc8 to i8*
  %v3_17cd4 = call i32 @function_13530(i8* %v2_17cd4, i32 %v0_17ccc)
  store i32 %v3_17cd4, i32* %r0.global-to-local, align 4
  %v0_17cd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17cd8

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17c70, %dec_label_pc_17c94
  %v0_17cd8 = phi i32 [ %v3_17c88, %dec_label_pc_17c70 ], [ %v0_17cd8.pre, %dec_label_pc_17c94 ]
  store i32 %v0_17cd8, i32* %r0.global-to-local, align 4
  store i32 %v3_17c70, i32* @r4, align 4
  store i32 %v6_17c70, i32* @r5, align 4
  ret i32 %v0_17cd8

; uselistorder directives
  uselistorder i32 %v0_17cd8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i8*, i32)* @function_13530, { 2, 3, 4, 5, 0, 1, 12, 11, 9, 6, 7, 8, 10 }
  uselistorder i32 13, { 14, 13, 0, 1, 16, 17, 15, 18, 5, 19, 6, 20, 7, 21, 8, 22, 9, 23, 10, 24, 11, 25, 2, 26, 27, 28, 29, 30, 31, 32, 12, 33, 34, 35, 36, 37, 38, 39, 40, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 52, 53 }
  uselistorder i32 17, { 10, 1, 2, 11, 12, 3, 13, 4, 14, 5, 15, 16, 17, 6, 18, 7, 8, 19, 9, 20, 21, 22, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17cd8, { 1, 0 }
}

define i32 @function_17cec() local_unnamed_addr {
dec_label_pc_17cec:
  %r0.global-to-local = alloca i32, align 4
  %v0_17cf4 = load i32, i32* @r0, align 4
  %v2_17cf4 = icmp eq i32 %v0_17cf4, 0
  %v0_17cfc = load i32, i32* @r1, align 4
  br i1 %v2_17cf4, label %dec_label_pc_17dd0, label %dec_label_pc_17d04

dec_label_pc_17d04:                               ; preds = %dec_label_pc_17cec
  br label %dec_label_pc_17d1c

dec_label_pc_17d1c:                               ; preds = %dec_label_pc_17d04, %dec_label_pc_17d94
  %v1_17d94 = phi i32 [ 0, %dec_label_pc_17d04 ], [ %v5_17d94, %dec_label_pc_17d94 ]
  %v0_17d98 = phi i32 [ 1, %dec_label_pc_17d04 ], [ %v1_17d98, %dec_label_pc_17d94 ]
  %v0_17d1c = phi i32 [ %v0_17cf4, %dec_label_pc_17d04 ], [ %v0_17d1c12, %dec_label_pc_17d94 ]
  %v1_17d1c = inttoptr i32 %v0_17d1c to i8*
  %v2_17d1c = load i8, i8* %v1_17d1c, align 1
  %v3_17d1c = zext i8 %v2_17d1c to i32
  %v4_17d20 = load i32, i32* inttoptr (i32 135880 to i32*), align 8
  %v2_17d24 = mul nuw nsw i32 %v3_17d1c, 2
  %v2_17d28 = add i32 %v2_17d24, %v4_17d20
  %v3_17d28 = inttoptr i32 %v2_17d28 to i16*
  %v4_17d28 = load i16, i16* %v3_17d28, align 2
  %v1_17d2c = and i16 %v4_17d28, 8
  %v2_17d2c = icmp eq i16 %v1_17d2c, 0
  br i1 %v2_17d2c, label %dec_label_pc_17dd0, label %dec_label_pc_17d34

dec_label_pc_17d34:                               ; preds = %dec_label_pc_17d1c
  br label %dec_label_pc_17d54

dec_label_pc_17d3c:                               ; preds = %dec_label_pc_17d54
  %v2_17d3c = mul i32 %v0_17d94, 10
  %v1_17d40 = add i32 %v2_17d3c, -48
  %v2_17d44 = add i32 %v3_17d54, %v1_17d40
  %v8_17d4c = icmp sgt i32 %v2_17d44, 255
  br i1 %v8_17d4c, label %dec_label_pc_17dd0, label %dec_label_pc_17d50

dec_label_pc_17d50:                               ; preds = %dec_label_pc_17d3c
  %v1_17d50 = add i32 %v0_17d84, 1
  store i32 %v1_17d50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17d54

dec_label_pc_17d54:                               ; preds = %dec_label_pc_17d34, %dec_label_pc_17d50
  %v0_17d94 = phi i32 [ 0, %dec_label_pc_17d34 ], [ %v2_17d44, %dec_label_pc_17d50 ]
  %v0_17d84 = phi i32 [ %v0_17d1c, %dec_label_pc_17d34 ], [ %v1_17d50, %dec_label_pc_17d50 ]
  %v1_17d54 = inttoptr i32 %v0_17d84 to i8*
  %v2_17d54 = load i8, i8* %v1_17d54, align 1
  %v3_17d54 = zext i8 %v2_17d54 to i32
  %v2_17d58 = mul nuw nsw i32 %v3_17d54, 2
  %v2_17d5c = add i32 %v2_17d58, %v4_17d20
  %v3_17d5c = inttoptr i32 %v2_17d5c to i16*
  %v4_17d5c = load i16, i16* %v3_17d5c, align 2
  %v6_17d5c = zext i16 %v4_17d5c to i32
  %v1_17d60 = and i32 %v6_17d5c, 8
  %v2_17d60 = icmp eq i32 %v1_17d60, 0
  br i1 %v2_17d60, label %dec_label_pc_17d68, label %dec_label_pc_17d3c

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17d54
  %v7_17d68 = icmp eq i32 %v0_17d98, 4
  br i1 %v7_17d68, label %dec_label_pc_17d80, label %dec_label_pc_17d70

dec_label_pc_17d70:                               ; preds = %dec_label_pc_17d68
  %v7_17d70 = icmp eq i8 %v2_17d54, 46
  br i1 %v7_17d70, label %dec_label_pc_17d78, label %dec_label_pc_17dd0

dec_label_pc_17d78:                               ; preds = %dec_label_pc_17d70
  %v1_17d78 = add i32 %v0_17d84, 1
  store i32 %v1_17d78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17d94

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17d68
  %v2_17d80 = icmp eq i8 %v2_17d54, 0
  %v1_17d84 = add i32 %v0_17d84, 1
  store i32 %v1_17d84, i32* %r0.global-to-local, align 4
  br i1 %v2_17d80, label %dec_label_pc_17d94, label %dec_label_pc_17d8c

dec_label_pc_17d8c:                               ; preds = %dec_label_pc_17d80
  %v1_17d8c = and i32 %v6_17d5c, 32
  %v2_17d8c = icmp eq i32 %v1_17d8c, 0
  br i1 %v2_17d8c, label %dec_label_pc_17dd0, label %dec_label_pc_17d94

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17d8c, %dec_label_pc_17d80, %dec_label_pc_17d78
  %v0_17d1c12 = phi i32 [ %v1_17d84, %dec_label_pc_17d8c ], [ %v1_17d84, %dec_label_pc_17d80 ], [ %v1_17d78, %dec_label_pc_17d78 ]
  %v4_17d94 = mul i32 %v1_17d94, 256
  %v5_17d94 = or i32 %v0_17d94, %v4_17d94
  %v1_17d98 = add nuw nsw i32 %v0_17d98, 1
  %v7_17da0 = icmp slt i32 %v1_17d98, 5
  br i1 %v7_17da0, label %dec_label_pc_17d1c, label %dec_label_pc_17da4

dec_label_pc_17da4:                               ; preds = %dec_label_pc_17d94
  %v2_17da4 = icmp eq i32 %v0_17cfc, 0
  br i1 %v2_17da4, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_17da4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dd4

bb:                                               ; preds = %dec_label_pc_17da4
  %v4_17da8 = udiv i32 %v5_17d94, 16777216
  %v2_17dac = udiv i32 %v5_17d94, 256
  %v5_17db0 = and i32 %v2_17dac, 65280
  %v2_17db4 = and i32 %v5_17d94, 65280
  %v5_17db8 = mul nuw nsw i32 %v2_17db4, 256
  %v5_17dbc = mul i32 %v0_17d94, 16777216
  %v6_17db0 = or i32 %v4_17da8, %v5_17dbc
  %v6_17db8 = or i32 %v6_17db0, %v5_17db0
  %v6_17dbc = or i32 %v6_17db8, %v5_17db8
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17dc8 = inttoptr i32 %v0_17cfc to i32*
  store i32 %v6_17dbc, i32* %v3_17dc8, align 4
  %v1_17dd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dd4

dec_label_pc_17dd0:                               ; preds = %dec_label_pc_17d70, %dec_label_pc_17d8c, %dec_label_pc_17d1c, %dec_label_pc_17d3c, %dec_label_pc_17cec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17dd4

dec_label_pc_17dd4:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_17dd0
  %v1_17dd8 = phi i32 [ %v1_17dd8.pre, %bb ], [ 0, %dec_label_pc_17dd0 ], [ 1, %.thread7.thread ]
  ret i32 %v1_17dd8

; uselistorder directives
  uselistorder i32 %v1_17d98, { 1, 0 }
  uselistorder i32 %v5_17d94, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17d84, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 65280, { 65, 1, 5, 0, 6, 2, 7, 8, 9, 10, 11, 37, 45, 46, 47, 12, 13, 14, 48, 49, 15, 16, 17, 18, 38, 50, 3, 51, 52, 19, 20, 39, 53, 54, 40, 21, 22, 23, 24, 25, 55, 56, 57, 58, 41, 42, 43, 4, 59, 60, 26, 61, 27, 28, 29, 30, 44, 62, 31, 32, 33, 63, 34, 35, 36, 64, 66, 67 }
  uselistorder i32 16777216, { 0, 1, 65, 64, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 37, 36, 41, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66 }
  uselistorder i32 5, { 13, 0, 103, 14, 55, 15, 56, 16, 54, 3, 2, 57, 17, 58, 18, 59, 19, 60, 20, 61, 21, 62, 22, 63, 23, 64, 24, 65, 25, 66, 26, 67, 27, 68, 28, 69, 29, 70, 30, 71, 31, 72, 32, 73, 33, 74, 34, 75, 35, 76, 36, 77, 37, 78, 38, 79, 39, 80, 40, 81, 41, 82, 42, 83, 43, 84, 44, 85, 45, 86, 87, 46, 47, 88, 48, 49, 50, 51, 5, 89, 6, 90, 7, 91, 52, 8, 92, 9, 93, 94, 10, 95, 11, 96, 97, 12, 98, 4, 99, 100, 53, 101, 102, 1 }
  uselistorder i32 32, { 115, 62, 60, 104, 105, 106, 107, 109, 110, 100, 101, 102, 103, 119, 63, 64, 68, 65, 69, 66, 70, 67, 71, 72, 113, 114, 73, 116, 81, 82, 80, 83, 84, 85, 86, 87, 88, 75, 76, 1, 77, 2, 78, 4, 3, 74, 79, 89, 117, 6, 5, 8, 7, 10, 9, 61, 90, 118, 91, 108, 12, 11, 14, 13, 16, 15, 18, 17, 99, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 92, 93, 30, 111, 31, 112, 32, 94, 95, 33, 34, 35, 36, 37, 96, 38, 39, 40, 97, 41, 0, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 53, 52, 55, 54, 57, 56, 58, 59, 98 }
  uselistorder i8 0, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 31, 23, 33, 2, 16, 3, 34, 36, 35, 24, 37, 38, 25, 39, 40, 0, 19, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 27, 62, 65, 28, 63, 64, 26, 66, 67, 68, 69, 70, 71, 4, 72, 73, 74, 75, 76, 77, 78, 79, 29, 80, 81, 82, 84, 85, 18, 88, 89, 90, 22, 86, 87, 94, 20, 91, 92, 93, 21, 17, 95, 96, 83, 30, 97, 98, 99, 100 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 255, { 4, 22, 5, 0, 1, 2, 16, 17, 19, 18, 20, 6, 21, 3, 9, 23, 10, 24, 7, 25, 8, 26, 13, 27, 14, 28, 11, 29, 12, 30, 15, 31 }
  uselistorder i32 10, { 1, 38, 39, 40, 4, 61, 63, 62, 89, 90, 0, 9, 43, 44, 45, 10, 41, 42, 33, 3, 46, 34, 11, 35, 47, 12, 48, 13, 49, 14, 50, 15, 51, 16, 52, 17, 53, 18, 54, 19, 55, 20, 56, 21, 57, 22, 58, 23, 59, 60, 24, 25, 26, 5, 64, 65, 66, 67, 68, 69, 70, 71, 72, 27, 73, 74, 75, 6, 76, 77, 78, 28, 7, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 29, 91, 2, 92, 93, 31, 94, 36, 37, 8, 95, 30, 96, 32 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 2, { 3, 4, 163, 63, 64, 59, 306, 307, 75, 308, 309, 65, 310, 311, 169, 164, 170, 165, 97, 312, 5, 171, 313, 70, 287, 6, 7, 288, 8, 9, 58, 283, 10, 11, 12, 284, 289, 13, 14, 15, 16, 76, 290, 291, 17, 18, 0, 166, 292, 19, 293, 98, 20, 162, 21, 22, 23, 24, 25, 26, 161, 27, 28, 29, 30, 31, 99, 101, 100, 66, 67, 102, 190, 191, 103, 185, 108, 186, 109, 187, 110, 188, 104, 189, 105, 192, 106, 179, 172, 173, 174, 175, 176, 177, 107, 178, 81, 180, 82, 181, 83, 182, 84, 183, 85, 184, 77, 32, 33, 193, 196, 197, 111, 71, 167, 112, 198, 113, 199, 114, 200, 201, 115, 202, 117, 194, 116, 195, 87, 203, 119, 204, 118, 86, 205, 120, 206, 34, 35, 36, 121, 207, 208, 122, 123, 124, 126, 72, 127, 125, 209, 128, 129, 210, 68, 74, 211, 212, 213, 214, 215, 216, 217, 218, 219, 130, 220, 88, 221, 222, 223, 224, 225, 226, 131, 89, 227, 228, 229, 230, 231, 232, 233, 234, 132, 235, 90, 236, 237, 60, 133, 134, 135, 238, 239, 240, 241, 242, 243, 244, 1, 37, 38, 39, 40, 41, 42, 136, 245, 91, 246, 247, 248, 249, 43, 250, 251, 44, 45, 46, 47, 48, 49, 137, 252, 92, 253, 254, 255, 256, 257, 258, 138, 259, 139, 260, 140, 261, 2, 50, 51, 52, 53, 54, 55, 141, 262, 93, 263, 264, 61, 265, 266, 267, 268, 269, 270, 142, 94, 271, 272, 62, 273, 274, 143, 275, 144, 276, 277, 278, 279, 280, 145, 281, 95, 282, 78, 285, 79, 80, 286, 168, 69, 147, 148, 294, 149, 150, 295, 151, 152, 296, 153, 154, 297, 155, 156, 298, 157, 158, 299, 73, 300, 301, 96, 302, 159, 303, 56, 57, 304, 146, 305, 160 }
  uselistorder label %dec_label_pc_17dd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17dd0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17d54, { 1, 0 }
  uselistorder label %dec_label_pc_17d1c, { 1, 0 }
}

define i32 @function_17de4(i32 %arg1) local_unnamed_addr {
dec_label_pc_17de4:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 135656, i32* %r2.global-to-local, align 4
  %v4_17df0 = load i32, i32* inttoptr (i32 135756 to i32*), align 4
  %v4_17df8 = load i32, i32* inttoptr (i32 135720 to i32*), align 8
  store i32 %v4_17df8, i32* %r1.global-to-local, align 4
  %v1_17dfc = add i32 %arg1, 44
  %v2_17dfc = inttoptr i32 %v1_17dfc to i32*
  %v3_17dfc = load i32, i32* %v2_17dfc, align 4
  %v1_17e00 = add i32 %arg1, 28
  %v2_17e00 = inttoptr i32 %v1_17e00 to i32*
  %v3_17e00 = load i32, i32* %v2_17e00, align 4
  store i32 %v3_17e00, i32* %r2.global-to-local, align 4
  %v2_17e04 = inttoptr i32 %v4_17df0 to i32*
  store i32 %v3_17dfc, i32* %v2_17e04, align 4
  %v0_17e08 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e08 = load i32, i32* %r1.global-to-local, align 4
  %v2_17e08 = inttoptr i32 %v1_17e08 to i32*
  store i32 %v0_17e08, i32* %v2_17e08, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 45, 0, 1, 4, 5, 6, 2, 7, 8, 9, 15, 10, 16, 14, 26, 27, 28, 29, 30, 31, 23, 24, 25, 21, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 11, 17, 18, 19, 20, 12, 42, 3, 43, 13, 44 }
  uselistorder i32 135656, { 45, 46, 47, 0, 1, 48, 2, 3, 4, 49, 5, 6, 50, 7, 51, 52, 53, 8, 11, 12, 10, 9, 13, 14, 40, 36, 34, 33, 35, 37, 38, 39, 32, 41, 27, 29, 28, 26, 25, 30, 31, 22, 21, 24, 23, 20, 19, 18, 17, 42, 43, 44, 54, 55, 56, 15, 16 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17e14(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e14:
  %v0_17e14 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17e14, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17e14
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17e14, %bb
  %v4_17e18 = phi i32 [ %arg1, %dec_label_pc_17e14 ], [ 0, %bb ]
  ret i32 %v4_17e18

; uselistorder directives
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 11, 12, 13, 25, 26, 27, 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17e1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e58:
  store i32 %arg1, i32* @global_var_234b0.897, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_234b0.897, { 1, 0, 2 }
}

define i32 @function_17e68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17e68:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17e68 = load i32, i32* @r7, align 4
  store i32 %v3_17e68, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17e90, label %dec_label_pc_17e80

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e68
  %v0_17e80 = call i32 @function_134dc()
  %v0_17e84 = load i32, i32* %r7.global-to-local, align 4
  %v1_17e84 = sub i32 0, %v0_17e84
  %v2_17e88 = inttoptr i32 %v0_17e80 to i32*
  store i32 %v1_17e84, i32* %v2_17e88, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17e94.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17e90

dec_label_pc_17e90:                               ; preds = %dec_label_pc_17e68, %dec_label_pc_17e80
  %v2_17e94 = phi i32 [ %v3_17e68, %dec_label_pc_17e68 ], [ %v2_17e94.pre, %dec_label_pc_17e80 ]
  %v0_17e90 = phi i32 [ %arg1, %dec_label_pc_17e68 ], [ -1, %dec_label_pc_17e80 ]
  store i32 %v2_17e94, i32* %r7.global-to-local, align 4
  ret i32 %v0_17e90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e90, { 1, 0 }
}

define i32 @function_17e9c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17e9c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17ea0 = load i32, i32* @r4, align 4
  %v6_17ea0 = load i32, i32* @r5, align 4
  %v12_17ea0 = load i32, i32* @r7, align 4
  %v1_17ea4 = add i32 %arg3, 14
  %v2_17eac = ptrtoint i32* %stack_var_-72 to i32
  %v1_17eb0 = and i32 %v1_17ea4, -8
  %v2_17eb4 = sub i32 %v2_17eac, %v1_17eb0
  %v1_17eb8 = add i32 %v2_17eb4, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_17eb8, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_17ef4, label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17e9c
  %v0_17ee0 = call i32 @function_134dc()
  %v0_17ee4 = load i32, i32* %r4.global-to-local, align 4
  %v1_17ee4 = sub i32 0, %v0_17ee4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_17eec = inttoptr i32 %v0_17ee0 to i32*
  store i32 %v1_17ee4, i32* %v2_17eec, align 4
  %v0_17efc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17efc

dec_label_pc_17ef4:                               ; preds = %dec_label_pc_17e9c
  br i1 false, label %dec_label_pc_17efc, label %dec_label_pc_17f04

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17ef4, %dec_label_pc_17ee0
  %v0_17efc = phi i32 [ -1, %dec_label_pc_17ef4 ], [ %v0_17efc.pre, %dec_label_pc_17ee0 ]
  store i32 %v0_17efc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17fd0

dec_label_pc_17f04:                               ; preds = %dec_label_pc_17ef4
  %v2_17f04 = add i32 %v1_17eb8, %arg1
  %v2_17f08 = add i32 %tmp, %arg3
  store i32 %v2_17f08, i32* @ip, align 4
  store i32 %v1_17eb8, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17fb8

dec_label_pc_17f24:                               ; preds = %dec_label_pc_17fb8
  %v1_17f24 = add i32 %v0_17f78, 16
  %v2_17f24 = inttoptr i32 %v1_17f24 to i16*
  %v3_17f24 = load i16, i16* %v2_17f24, align 2
  %v4_17f24 = zext i16 %v3_17f24 to i32
  %v1_17f28 = add nuw nsw i32 %v4_17f24, 7
  %v1_17f2c = and i32 %v1_17f28, 131064
  store i32 %v1_17f2c, i32* %r2.global-to-local, align 4
  %v2_17f34 = add i32 %v1_17f2c, %v0_17f80
  store i32 %v2_17f34, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_17f34, %v2_17f08
  br i1 %tmp26, label %dec_label_pc_17f40, label %dec_label_pc_17f74

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17f24
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17f48 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17f48, i32* %r2.global-to-local, align 4
  %v0_17f4c = load i32, i32* %sl.global-to-local, align 4
  %v1_17f50 = load i32, i32* @sp, align 4
  %v2_17f50 = inttoptr i32 %v1_17f50 to i32*
  store i32 0, i32* %v2_17f50, align 4
  %v4_17f54 = call i32 @function_181d8(i32 %arg1, i32 0, i32 %v0_17f48, i32 %v0_17f4c)
  %v0_17f58 = load i32, i32* @r5, align 4
  %v1_17f58 = load i32, i32* %r6.global-to-local, align 4
  %v9_17f58 = icmp eq i32 %v0_17f58, %v1_17f58
  br i1 %v9_17f58, label %dec_label_pc_17f60, label %dec_label_pc_17fcc

dec_label_pc_17f60:                               ; preds = %dec_label_pc_17f40
  %v0_17f60 = call i32 @function_134dc()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_17f6c = inttoptr i32 %v0_17f60 to i32*
  store i32 22, i32* %v2_17f6c, align 4
  %v0_17fd0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17fd0

dec_label_pc_17f74:                               ; preds = %dec_label_pc_17f24
  %v1_17f74 = inttoptr i32 %v0_17f78 to i32*
  %v2_17f74 = load i32, i32* %v1_17f74, align 4
  %v3_17f74 = add i32 %v0_17f78, 4
  %v4_17f74 = inttoptr i32 %v3_17f74 to i32*
  %v5_17f74 = load i32, i32* %v4_17f74, align 4
  store i32 %v5_17f74, i32* %r4.global-to-local, align 4
  %v1_17f78 = add i32 %v0_17f78, 8
  store i32 %v1_17f78, i32* %sb.global-to-local, align 4
  %v1_17f7c = inttoptr i32 %v1_17f78 to i32*
  %v2_17f7c = load i32, i32* %v1_17f7c, align 4
  store i32 %v2_17f7c, i32* %sb.global-to-local, align 4
  %v3_17f7c = add i32 %v0_17f78, 12
  %v4_17f7c = inttoptr i32 %v3_17f7c to i32*
  %v5_17f7c = load i32, i32* %v4_17f7c, align 4
  store i32 %v5_17f7c, i32* %sl.global-to-local, align 4
  %v1_17f80 = inttoptr i32 %v0_17f80 to i32*
  store i32 %v2_17f74, i32* %v1_17f80, align 4
  %v3_17f80 = add i32 %v0_17f80, 4
  %v4_17f80 = inttoptr i32 %v3_17f80 to i32*
  %v5_17f80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17f80, i32* %v4_17f80, align 4
  %v0_17f84 = load i32, i32* @r7, align 4
  %v1_17f84 = add i32 %v0_17f84, 8
  %v1_17f88 = inttoptr i32 %v1_17f84 to i32*
  %v2_17f88 = load i32, i32* %v1_17f88, align 4
  %v3_17f88 = add i32 %v0_17f84, 12
  %v4_17f88 = inttoptr i32 %v3_17f88 to i32*
  %v5_17f88 = load i32, i32* %v4_17f88, align 4
  store i32 %v5_17f88, i32* @r4, align 4
  %v1_17f8c = load i32, i32* @r5, align 4
  %v2_17f8c = add i32 %v1_17f8c, 8
  %v3_17f8c = inttoptr i32 %v2_17f8c to i32*
  store i32 %v2_17f88, i32* %v3_17f8c, align 4
  %v0_17f90 = load i32, i32* @r4, align 4
  %v1_17f90 = load i32, i32* @r5, align 4
  %v2_17f90 = add i32 %v1_17f90, 12
  %v3_17f90 = inttoptr i32 %v2_17f90 to i32*
  store i32 %v0_17f90, i32* %v3_17f90, align 4
  %v0_17f94 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f94 = trunc i32 %v0_17f94 to i16
  %v2_17f94 = load i32, i32* @r5, align 4
  %v3_17f94 = add i32 %v2_17f94, 16
  %v4_17f94 = inttoptr i32 %v3_17f94 to i16*
  store i16 %v1_17f94, i16* %v4_17f94, align 2
  %v0_17f98 = load i32, i32* @r7, align 4
  %v1_17f98 = add i32 %v0_17f98, 18
  %v2_17f98 = inttoptr i32 %v1_17f98 to i8*
  %v3_17f98 = load i8, i8* %v2_17f98, align 1
  %v4_17f98 = zext i8 %v3_17f98 to i32
  store i32 %v4_17f98, i32* @r3, align 4
  %v2_17f9c = load i32, i32* @r5, align 4
  %v3_17f9c = add i32 %v2_17f9c, 18
  %v4_17f9c = inttoptr i32 %v3_17f9c to i8*
  store i8 %v3_17f98, i8* %v4_17f9c, align 1
  %v0_17fa0 = load i32, i32* @r7, align 4
  %v1_17fa0 = add i32 %v0_17fa0, 16
  %v2_17fa0 = inttoptr i32 %v1_17fa0 to i16*
  %v3_17fa0 = load i16, i16* %v2_17fa0, align 2
  %v4_17fa0 = zext i16 %v3_17fa0 to i32
  %v1_17fa4 = add nsw i32 %v4_17fa0, -19
  store i32 %v1_17fa4, i32* @r2, align 4
  %v0_17fa8 = call i32 @function_135e0()
  %v0_17fac = load i32, i32* @r7, align 4
  %v1_17fac = add i32 %v0_17fac, 16
  %v2_17fac = inttoptr i32 %v1_17fac to i16*
  %v3_17fac = load i16, i16* %v2_17fac, align 2
  %v4_17fac = zext i16 %v3_17fac to i32
  %v0_17fb0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17fb0, i32* @r5, align 4
  %v2_17fb4 = add i32 %v4_17fac, %v0_17fac
  store i32 %v2_17fb4, i32* @r7, align 4
  br label %dec_label_pc_17fb8

dec_label_pc_17fb8:                               ; preds = %dec_label_pc_17f04, %dec_label_pc_17f74
  %v0_17f80 = phi i32 [ %tmp, %dec_label_pc_17f04 ], [ %v0_17fb0, %dec_label_pc_17f74 ]
  %v0_17f78 = phi i32 [ %v1_17eb8, %dec_label_pc_17f04 ], [ %v2_17fb4, %dec_label_pc_17f74 ]
  %v3_17fbc = icmp ult i32 %v0_17f78, %v2_17f04
  %v1_17fc0 = add i32 %v0_17f80, 19
  store i32 %v1_17fc0, i32* @r0, align 4
  %v1_17fc4 = add i32 %v0_17f78, 19
  store i32 %v1_17fc4, i32* @r1, align 4
  br i1 %v3_17fbc, label %dec_label_pc_17f24, label %dec_label_pc_17fcc.loopexit

dec_label_pc_17fcc.loopexit:                      ; preds = %dec_label_pc_17fb8
  %v0_17fcc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17fcc

dec_label_pc_17fcc:                               ; preds = %dec_label_pc_17fcc.loopexit, %dec_label_pc_17f40
  %v1_17fcc = phi i32 [ %v0_17f80, %dec_label_pc_17fcc.loopexit ], [ %v0_17f58, %dec_label_pc_17f40 ]
  %v0_17fcc = phi i32 [ %v0_17fcc.pre, %dec_label_pc_17fcc.loopexit ], [ %v1_17f58, %dec_label_pc_17f40 ]
  %v2_17fcc = sub i32 %v1_17fcc, %v0_17fcc
  store i32 %v2_17fcc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17fd0

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17f60, %dec_label_pc_17efc, %dec_label_pc_17fcc
  %v0_17fd0 = phi i32 [ %v0_17fd0.pre, %dec_label_pc_17f60 ], [ %v0_17efc, %dec_label_pc_17efc ], [ %v2_17fcc, %dec_label_pc_17fcc ]
  store i32 %v3_17ea0, i32* %r4.global-to-local, align 4
  store i32 %v6_17ea0, i32* @r5, align 4
  store i32 %v12_17ea0, i32* @r7, align 4
  ret i32 %v0_17fd0

; uselistorder directives
  uselistorder i32 %v0_17f78, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_17f80, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_17eb8, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 3, 4, 0, 1, 5, 6, 7, 2, 8 }
  uselistorder i32* @r3, { 9, 10, 41, 42, 76, 77, 3, 78, 79, 80, 4, 81, 82, 83, 5, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 102, 103, 104, 105, 11, 8, 12, 13, 14, 15, 16, 43, 44, 106, 115, 116, 117, 110, 51, 52, 53, 54, 55, 56, 57, 17, 18, 19, 121, 118, 119, 120, 1, 122, 123, 124, 111, 20, 58, 32, 33, 34, 112, 113, 114, 59, 107, 108, 109, 60, 61, 7, 62, 63, 64, 65, 66, 2, 27, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 35, 36, 38, 37, 39, 40, 45, 46, 47, 48, 49, 50, 67, 68, 69, 70, 71, 72, 6, 73, 74, 75 }
  uselistorder i32 18, { 5, 6, 2, 7, 4, 8, 3, 9, 0, 10, 1, 11 }
  uselistorder i32 22, { 1, 0, 10, 2, 3, 4, 5, 6, 7, 11, 8, 12, 9, 13, 14 }
  uselistorder i32* @sp, { 4, 5, 1, 6, 0, 7, 2, 8, 3 }
  uselistorder i32 7, { 53, 50, 51, 12, 0, 1, 96, 13, 55, 56, 14, 54, 4, 15, 57, 16, 58, 17, 59, 18, 60, 19, 61, 20, 62, 21, 63, 22, 64, 23, 65, 24, 66, 25, 67, 26, 68, 27, 69, 28, 70, 29, 71, 30, 72, 31, 73, 32, 74, 33, 75, 34, 76, 35, 77, 36, 78, 37, 79, 38, 80, 39, 81, 40, 82, 41, 42, 43, 44, 83, 6, 84, 45, 85, 7, 46, 86, 8, 87, 9, 88, 10, 89, 47, 90, 5, 91, 2, 48, 92, 3, 49, 93, 94, 52, 11, 95 }
  uselistorder i32* @ip, { 8, 9, 10, 66, 11, 12, 7, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 3, 100, 101, 102, 103, 104, 105, 106, 107, 108, 13, 0, 14, 15, 16, 17, 18, 109, 110, 30, 31, 4, 24, 25, 26, 27, 28, 29, 32, 33, 34, 114, 111, 112, 113, 1, 115, 23, 35, 36, 37, 38, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 5, 19, 20, 21, 22, 57, 58, 59, 60, 61, 62, 63, 6, 64, 65 }
  uselistorder i1 false, { 0, 24, 25, 26, 42, 17, 23, 43, 44, 45, 46, 47, 2, 1, 27, 30, 29, 28, 31, 4, 6, 37, 18, 19, 5, 14, 7, 34, 15, 13, 16, 8, 9, 10, 32, 3, 11, 12, 35, 38, 39, 40, 21, 41, 20, 22, 36, 33, 48 }
  uselistorder i32 -8, { 37, 17, 18, 19, 20, 21, 22, 16, 15, 9, 14, 13, 12, 11, 23, 24, 25, 26, 27, 39, 28, 29, 30, 31, 32, 38, 40, 33, 41, 36, 10, 34, 35, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 14, { 10, 15, 23, 6, 7, 8, 2, 11, 12, 9, 3, 13, 4, 14, 5, 16, 17, 0, 18, 19, 20, 21, 1, 22 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17fd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17fb8, { 1, 0 }
}

define i32 @function_17fe0(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17fe0:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17fe0 = load i32, i32* @r4, align 4
  store i32 %v3_17fe0, i32* %stack_var_-12, align 4
  %v0_17fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_17fe4 = inttoptr i32 %v0_17fe4 to i16*
  %v2_17fe4 = load i16, i16* %v1_17fe4, align 2
  %v3_17fe4 = zext i16 %v2_17fe4 to i32
  %v1_17fe8 = and i32 %v3_17fe4, 4
  store i32 %v1_17fe8, i32* %r5.global-to-local, align 4
  %v2_17fe8 = icmp eq i32 %v1_17fe8, 0
  store i32 %v0_17fe4, i32* %r4.global-to-local, align 4
  br i1 %v2_17fe8, label %dec_label_pc_17ffc, label %bb

bb:                                               ; preds = %dec_label_pc_17fe0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_17ffc:                               ; preds = %dec_label_pc_17fe0
  %v1_17ffc = icmp slt i32 %arg2, 0
  br i1 %v1_17ffc, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_17ffc
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_17ffc, %bb18
  %v1_18004 = add i32 %v0_17fe4, 4
  %v2_18004 = inttoptr i32 %v1_18004 to i32*
  %v3_18004 = load i32, i32* %v2_18004, align 4
  store i32 %v3_18004, i32* %r0.global-to-local, align 4
  %v1_18008 = call i32 @function_12e4c(i32 %v3_18004)
  store i32 %v1_18008, i32* %r0.global-to-local, align 4
  %v5_18010 = icmp sgt i32 %v1_18008, 0
  br i1 %v5_18010, label %.thread7, label %dec_label_pc_18014

dec_label_pc_18014:                               ; preds = %bb19
  %v2_1800c = icmp eq i32 %v1_18008, 0
  %v0_18014 = load i32, i32* %r4.global-to-local, align 4
  %v1_18014 = inttoptr i32 %v0_18014 to i16*
  %v2_18014 = load i16, i16* %v1_18014, align 2
  br i1 %v2_1800c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18014
  %v2_18018 = or i16 %v2_18014, 4
  store i16 %v2_18018, i16* %v1_18014, align 2
  %v1_18034.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18014
  %v2_1801c = or i16 %v2_18014, 8
  store i16 %v2_1801c, i16* %v1_18014, align 2
  %v1_18028 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18028, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18034 = phi i32 [ %v1_18034.pre, %bb20 ], [ 0, %bb ], [ %v1_18008, %bb19 ], [ %v1_18028, %bb21 ]
  %v2_18030 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18030, i32* @r4, align 4
  ret i32 %v1_18034

; uselistorder directives
  uselistorder i16 %v2_18014, { 1, 0 }
  uselistorder i32 %v1_18008, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_12e4c, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_18038(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18038:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_18038 = load i32, i32* @r4, align 4
  store i32 %v3_18038, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_180502 = icmp eq i32 %arg3, 0
  store i1 %v2_180502, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180502, label %dec_label_pc_180e0, label %dec_label_pc_18058

dec_label_pc_18050thread-pre-split:               ; preds = %dec_label_pc_18058
  %v3_18070 = load i32, i32* %r6.global-to-local, align 4
  %v5_18070 = add i32 %v3_18070, %v3_18068
  store i32 %v5_18070, i32* %r6.global-to-local, align 4
  %v4_18074 = load i32, i32* %r5.global-to-local, align 4
  %v5_18074 = sub i32 %v4_18074, %v3_18068
  store i32 %v5_18074, i32* %r5.global-to-local, align 4
  %v2_18050 = icmp eq i32 %v5_18074, 0
  store i1 %v2_18050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18050, label %dec_label_pc_18050.dec_label_pc_180e0.loopexit_crit_edge, label %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge

dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge: ; preds = %dec_label_pc_18050thread-pre-split
  %v3_18058.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_18064.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18058

dec_label_pc_18058:                               ; preds = %dec_label_pc_18038, %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge
  %v0_18064 = phi i32 [ %v0_18064.pre, %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge ], [ %tmp, %dec_label_pc_18038 ]
  %v0_18060 = phi i32 [ %v5_18070, %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge ], [ %arg2, %dec_label_pc_18038 ]
  %v3_18058 = phi i32 [ %v3_18058.pre, %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge ], [ 2147483647, %dec_label_pc_18038 ]
  %v0_1805c.in = phi i32 [ %v5_18074, %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge ], [ %arg3, %dec_label_pc_18038 ]
  %v3_1805c = phi i32 [ %v5_18074, %dec_label_pc_18050thread-pre-split.dec_label_pc_18058_crit_edge ], [ %arg3, %dec_label_pc_18038 ]
  %v0_1805c = icmp slt i32 %v0_1805c.in, 0
  %storemerge = select i1 %v0_1805c, i32 %v3_18058, i32 %v3_1805c
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_18060, i32* %r1.global-to-local, align 4
  %v1_18064 = add i32 %v0_18064, 4
  %v2_18064 = inttoptr i32 %v1_18064 to i32*
  %v3_18064 = load i32, i32* %v2_18064, align 4
  %v3_18068 = call i32 @function_12fc0(i32 %v3_18064, i32 %v0_18060)
  %v1_1806c = icmp slt i32 %v3_18068, 0
  %v2_1806c = icmp eq i32 %v3_18068, 0
  store i1 %v2_1806c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1806c, label %dec_label_pc_1807c, label %dec_label_pc_18050thread-pre-split

dec_label_pc_1807c:                               ; preds = %dec_label_pc_18058
  %v0_1807c = load i32, i32* %r4.global-to-local, align 4
  %v1_1807c = inttoptr i32 %v0_1807c to i16*
  %v2_1807c = load i16, i16* %v1_1807c, align 2
  %v3_1807c = zext i16 %v2_1807c to i32
  store i32 %v3_1807c, i32* %r3.global-to-local, align 4
  %v1_18080 = add i32 %v0_1807c, 8
  store i32 %v1_18080, i32* %r1.global-to-local, align 4
  %v1_18084 = inttoptr i32 %v1_18080 to i32*
  %v2_18084 = load i32, i32* %v1_18084, align 4
  store i32 %v2_18084, i32* %r1.global-to-local, align 4
  %v3_18084 = add i32 %v0_1807c, 12
  %v4_18084 = inttoptr i32 %v3_18084 to i32*
  %v5_18084 = load i32, i32* %v4_18084, align 4
  %v1_18088 = or i32 %v3_1807c, 8
  store i32 %v1_18088, i32* %r3.global-to-local, align 4
  %v2_1808c = sub i32 %v5_18084, %v2_18084
  store i32 %v2_1808c, i32* %r2.global-to-local, align 4
  %v9_1808c = icmp eq i32 %v5_18084, %v2_18084
  store i1 %v9_1808c, i1* %cpsr_z.global-to-local, align 1
  %v1_18090 = trunc i32 %v1_18088 to i16
  store i16 %v1_18090, i16* %v1_1807c, align 2
  br i1 %v9_1808c, label %dec_label_pc_1807c.dec_label_pc_180dc_crit_edge, label %dec_label_pc_18098

dec_label_pc_1807c.dec_label_pc_180dc_crit_edge:  ; preds = %dec_label_pc_1807c
  %v0_180dc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_180dc

dec_label_pc_18098:                               ; preds = %dec_label_pc_1807c
  %v0_18098 = load i32, i32* %r2.global-to-local, align 4
  %v1_18098 = load i32, i32* %r5.global-to-local, align 4
  %v3_18098 = icmp ult i32 %v0_18098, %v1_18098
  %v9_18098 = icmp eq i32 %v0_18098, %v1_18098
  store i1 %v9_18098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18098, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_18098
  store i32 %v1_18098, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18098, %bb23
  %v2_180ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_180c0
  %v2_180ac = phi i32 [ %v2_180ac.pre, %.preheader ], [ %v1_180c4, %dec_label_pc_180c0 ]
  %v0_180a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_180a0 = inttoptr i32 %v0_180a0 to i8*
  %v2_180a0 = load i8, i8* %v1_180a0, align 1
  %v3_180a0 = zext i8 %v2_180a0 to i32
  store i32 %v3_180a0, i32* %r3.global-to-local, align 4
  %v7_180a4 = icmp eq i8 %v2_180a0, 10
  store i1 %v7_180a4, i1* %cpsr_z.global-to-local, align 1
  %v1_180a8 = add i32 %v0_180a0, 1
  store i32 %v1_180a8, i32* %r6.global-to-local, align 4
  %v3_180ac = inttoptr i32 %v2_180ac to i8*
  store i8 %v2_180a0, i8* %v3_180ac, align 1
  %v0_180b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_180b0, label %dec_label_pc_180b4, label %dec_label_pc_180c0

dec_label_pc_180b4:                               ; preds = %bb24
  %v0_180b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_180b4 = inttoptr i32 %v0_180b4 to i16*
  %v2_180b4 = load i16, i16* %v1_180b4, align 2
  %v3_180b4 = zext i16 %v2_180b4 to i32
  store i32 %v3_180b4, i32* %r3.global-to-local, align 4
  %v1_180b8 = and i32 %v3_180b4, 256
  %v2_180b8 = icmp eq i32 %v1_180b8, 0
  store i1 %v2_180b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_180b8, label %dec_label_pc_180c0, label %dec_label_pc_180b4.dec_label_pc_180cc_crit_edge

dec_label_pc_180b4.dec_label_pc_180cc_crit_edge:  ; preds = %dec_label_pc_180b4
  %v0_180d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_180cc

dec_label_pc_180c0:                               ; preds = %dec_label_pc_180b4, %bb24
  %v0_180c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_180c0 = add i32 %v0_180c0, -1
  store i32 %v1_180c0, i32* %r2.global-to-local, align 4
  %v7_180c0 = icmp eq i32 %v0_180c0, 1
  store i1 %v7_180c0, i1* %cpsr_z.global-to-local, align 1
  %v0_180c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_180c4 = add i32 %v0_180c4, 1
  store i32 %v1_180c4, i32* %r1.global-to-local, align 4
  br i1 %v7_180c0, label %dec_label_pc_180c0.dec_label_pc_180cc_crit_edge, label %bb24

dec_label_pc_180c0.dec_label_pc_180cc_crit_edge:  ; preds = %dec_label_pc_180c0
  %v0_180cc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_180cc

dec_label_pc_180cc:                               ; preds = %dec_label_pc_180b4.dec_label_pc_180cc_crit_edge, %dec_label_pc_180c0.dec_label_pc_180cc_crit_edge
  %v0_180d0 = phi i32 [ %v1_180c4, %dec_label_pc_180c0.dec_label_pc_180cc_crit_edge ], [ %v0_180d0.pre, %dec_label_pc_180b4.dec_label_pc_180cc_crit_edge ]
  %v0_180cc = phi i32 [ %v0_180cc.pre, %dec_label_pc_180c0.dec_label_pc_180cc_crit_edge ], [ %v0_180b4, %dec_label_pc_180b4.dec_label_pc_180cc_crit_edge ]
  %v1_180cc = add i32 %v0_180cc, 8
  %v2_180cc = inttoptr i32 %v1_180cc to i32*
  %v3_180cc = load i32, i32* %v2_180cc, align 4
  store i32 %v3_180cc, i32* %r3.global-to-local, align 4
  %v2_180d0 = add i32 %v0_180cc, 16
  %v3_180d0 = inttoptr i32 %v2_180d0 to i32*
  store i32 %v0_180d0, i32* %v3_180d0, align 4
  %v0_180d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_180d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_180d4 = sub i32 %v1_180d4, %v0_180d4
  store i32 %v2_180d4, i32* %r3.global-to-local, align 4
  %v1_180d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_180d8 = sub i32 %v1_180d8, %v2_180d4
  store i32 %v2_180d8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_180dc

dec_label_pc_180dc:                               ; preds = %dec_label_pc_1807c.dec_label_pc_180dc_crit_edge, %dec_label_pc_180cc
  %v0_180dc = phi i32 [ %v0_180dc.pre, %dec_label_pc_1807c.dec_label_pc_180dc_crit_edge ], [ %v2_180d8, %dec_label_pc_180cc ]
  %v1_180dc = load i32, i32* @r7, align 4
  %v2_180dc = sub i32 %v1_180dc, %v0_180dc
  br label %dec_label_pc_180e0

dec_label_pc_18050.dec_label_pc_180e0.loopexit_crit_edge: ; preds = %dec_label_pc_18050thread-pre-split
  %v0_180e0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_180e0

dec_label_pc_180e0:                               ; preds = %dec_label_pc_18038, %dec_label_pc_18050.dec_label_pc_180e0.loopexit_crit_edge, %dec_label_pc_180dc
  %v0_180e0 = phi i32 [ %v2_180dc, %dec_label_pc_180dc ], [ %v0_180e0.pre.pre, %dec_label_pc_18050.dec_label_pc_180e0.loopexit_crit_edge ], [ 0, %dec_label_pc_18038 ]
  %v2_180e4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_180e4, i32* %r4.global-to-local, align 4
  ret i32 %v0_180e0

; uselistorder directives
  uselistorder i32 %v0_180cc, { 1, 0 }
  uselistorder i32 %v1_180c4, { 0, 2, 1 }
  uselistorder i32 %v0_180c0, { 1, 0 }
  uselistorder i32 %v1_18098, { 0, 2, 1 }
  uselistorder i32 %v0_18098, { 1, 0 }
  uselistorder i32 %v5_18084, { 1, 0 }
  uselistorder i32 %v2_18084, { 1, 0, 2 }
  uselistorder i32 %v3_18068, { 2, 3, 0, 1 }
  uselistorder i32 %v0_18060, { 1, 0 }
  uselistorder i32 %v5_18074, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 4, 5, 2, 6, 7, 8, 0 }
  uselistorder i32 256, { 256, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 248, 257, 254, 255, 258, 33, 35, 34, 36, 247, 0, 252, 1, 37, 38, 39, 40, 41, 43, 44, 45, 42, 47, 48, 49, 46, 50, 51, 259, 260, 52, 53, 54, 261, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 65, 64, 67, 250, 262, 251, 68, 69, 70, 72, 71, 73, 75, 74, 76, 78, 77, 79, 263, 80, 81, 264, 92, 86, 82, 93, 87, 94, 88, 83, 84, 89, 90, 95, 91, 85, 96, 97, 98, 99, 100, 101, 102, 109, 106, 103, 110, 107, 111, 108, 104, 105, 112, 113, 114, 115, 126, 121, 127, 122, 128, 123, 129, 124, 116, 117, 118, 119, 130, 125, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 147, 144, 148, 145, 149, 146, 141, 142, 143, 150, 151, 152, 153, 154, 164, 165, 159, 155, 166, 160, 167, 161, 156, 162, 168, 163, 157, 158, 169, 170, 171, 172, 173, 174, 179, 177, 175, 180, 178, 176, 181, 249, 265, 182, 184, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 209, 203, 210, 204, 205, 198, 199, 211, 206, 212, 207, 200, 201, 208, 213, 214, 215, 216, 217, 218, 223, 230, 224, 231, 225, 219, 220, 232, 226, 233, 227, 228, 221, 222, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 246 }
  uselistorder i8 10, { 4, 5, 0, 6, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @function_12fc0, { 2, 1, 0 }
  uselistorder i32 4, { 236, 237, 238, 230, 231, 438, 239, 513, 4, 5, 240, 6, 7, 82, 0, 8, 95, 90, 91, 9, 514, 92, 515, 66, 10, 11, 93, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 12, 533, 534, 535, 536, 537, 538, 65, 539, 540, 541, 542, 543, 544, 13, 14, 94, 545, 241, 108, 242, 15, 243, 109, 244, 245, 246, 247, 168, 248, 249, 250, 251, 252, 253, 16, 232, 233, 234, 235, 326, 327, 225, 226, 227, 228, 229, 546, 169, 110, 547, 17, 548, 170, 171, 67, 442, 443, 444, 445, 446, 447, 172, 173, 18, 448, 449, 450, 451, 452, 453, 454, 455, 174, 440, 441, 408, 409, 410, 411, 412, 413, 414, 415, 416, 19, 417, 418, 419, 456, 20, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 175, 176, 177, 471, 472, 475, 478, 473, 474, 111, 178, 476, 59, 477, 479, 480, 481, 483, 179, 22, 21, 482, 180, 181, 182, 279, 183, 60, 23, 24, 328, 329, 330, 331, 332, 25, 333, 484, 485, 224, 26, 27, 486, 487, 223, 28, 29, 280, 112, 281, 68, 273, 113, 274, 30, 283, 284, 31, 285, 77, 78, 76, 286, 254, 255, 275, 276, 114, 260, 261, 262, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 62, 61, 287, 83, 288, 32, 289, 64, 63, 290, 33, 282, 291, 292, 297, 115, 298, 116, 299, 117, 300, 118, 301, 119, 302, 120, 303, 121, 304, 122, 305, 123, 306, 124, 307, 125, 308, 126, 309, 127, 310, 128, 311, 129, 312, 130, 313, 131, 315, 132, 133, 316, 317, 314, 293, 134, 294, 295, 296, 318, 81, 80, 79, 319, 135, 34, 35, 36, 37, 38, 39, 320, 70, 69, 321, 71, 136, 322, 323, 324, 137, 325, 138, 139, 140, 141, 142, 143, 72, 144, 145, 146, 147, 148, 334, 184, 335, 336, 337, 338, 339, 185, 186, 149, 340, 40, 150, 341, 96, 342, 343, 187, 344, 345, 188, 189, 346, 151, 347, 97, 348, 349, 190, 191, 350, 192, 351, 352, 353, 193, 194, 354, 152, 355, 98, 356, 195, 196, 357, 358, 359, 153, 99, 360, 361, 197, 362, 363, 364, 198, 199, 1, 154, 365, 100, 366, 367, 368, 200, 369, 370, 201, 202, 2, 84, 371, 155, 372, 101, 373, 374, 375, 376, 203, 204, 377, 378, 205, 379, 380, 156, 381, 3, 382, 102, 383, 157, 384, 385, 386, 206, 387, 388, 389, 390, 207, 208, 159, 391, 85, 392, 158, 393, 103, 394, 395, 396, 209, 397, 398, 399, 160, 400, 161, 401, 402, 403, 210, 211, 162, 404, 86, 405, 104, 406, 105, 407, 212, 41, 420, 213, 42, 421, 214, 43, 422, 215, 44, 423, 216, 87, 45, 424, 425, 217, 46, 426, 218, 47, 427, 219, 48, 428, 220, 49, 429, 221, 50, 430, 431, 222, 432, 433, 434, 435, 436, 437, 488, 439, 489, 490, 491, 106, 492, 88, 493, 494, 495, 496, 107, 497, 163, 498, 499, 500, 89, 501, 164, 502, 51, 52, 53, 54, 55, 503, 504, 505, 56, 75, 74, 73, 506, 57, 58, 165, 507, 166, 508, 509, 510, 167, 511, 512 }
  uselistorder i32 2147483647, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32* @r7, {}
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_180e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_180dc, { 1, 0 }
  uselistorder label %dec_label_pc_180cc, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18058, { 1, 0 }
}

define i32 @function_180ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_180ec:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_180ec = load i32, i32* @r4, align 4
  store i32 %v3_180ec, i32* %stack_var_-8, align 4
  %v1_180f0 = add i32 %arg1, 8
  %v1_180f4 = inttoptr i32 %v1_180f0 to i32*
  %v2_180f4 = load i32, i32* %v1_180f4, align 4
  %v3_180f4 = add i32 %arg1, 12
  %v4_180f4 = inttoptr i32 %v3_180f4 to i32*
  %v5_180f4 = load i32, i32* %v4_180f4, align 4
  %v2_180f8 = sub i32 %v5_180f4, %v2_180f4
  store i32 %v2_180f8, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18100 = inttoptr i32 %arg1 to i16*
  %v4_18100 = call i32 @function_17fe0(i16* %v3_18100, i32 %v2_180f4, i32 %v2_180f8)
  %v0_18104 = load i32, i32* @r4, align 4
  %v1_18104 = add i32 %v0_18104, 8
  %v2_18104 = inttoptr i32 %v1_18104 to i32*
  %v3_18104 = load i32, i32* %v2_18104, align 4
  store i32 %v3_18104, i32* %r2.global-to-local, align 4
  %v2_18108 = add i32 %v3_18104, %v4_18100
  %v2_1810c = add i32 %v0_18104, 20
  %v3_1810c = inttoptr i32 %v2_1810c to i32*
  store i32 %v2_18108, i32* %v3_1810c, align 4
  %v0_18110 = load i32, i32* %r2.global-to-local, align 4
  %v1_18110 = load i32, i32* @r4, align 4
  %v2_18110 = add i32 %v1_18110, 16
  %v3_18110 = inttoptr i32 %v2_18110 to i32*
  store i32 %v0_18110, i32* %v3_18110, align 4
  %v2_18114 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18114, i32* @r4, align 4
  ret i32 %v4_18100

; uselistorder directives
  uselistorder i32 %v4_18100, { 1, 0 }
  uselistorder i32 20, { 27, 114, 3, 115, 116, 1, 117, 28, 9, 29, 30, 31, 32, 26, 42, 43, 22, 23, 24, 25, 118, 10, 119, 101, 102, 109, 2, 44, 11, 45, 46, 0, 33, 35, 36, 12, 37, 13, 38, 21, 14, 39, 34, 40, 41, 47, 49, 4, 48, 50, 51, 52, 53, 54, 55, 5, 56, 57, 58, 59, 60, 61, 63, 64, 15, 62, 65, 66, 67, 68, 69, 70, 72, 73, 16, 71, 74, 75, 76, 77, 79, 80, 17, 78, 81, 82, 83, 84, 85, 86, 88, 18, 87, 89, 90, 91, 94, 6, 92, 19, 93, 95, 96, 99, 7, 97, 20, 98, 100, 103, 104, 105, 106, 107, 108, 110, 111, 112, 8, 113 }
  uselistorder i32 12, { 10, 11, 34, 12, 13, 37, 6, 165, 166, 167, 168, 169, 171, 172, 170, 173, 174, 175, 176, 177, 178, 179, 14, 15, 16, 17, 19, 18, 20, 38, 39, 21, 40, 41, 42, 43, 44, 35, 36, 78, 79, 31, 32, 33, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 3, 111, 112, 113, 114, 115, 22, 116, 134, 23, 24, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 146, 147, 148, 149, 150, 151, 152, 154, 155, 25, 156, 4, 80, 81, 26, 82, 83, 7, 60, 56, 57, 46, 61, 62, 48, 58, 49, 50, 45, 47, 51, 52, 53, 54, 55, 59, 63, 64, 65, 5, 66, 67, 68, 69, 71, 72, 73, 27, 74, 28, 75, 77, 76, 70, 106, 84, 29, 85, 86, 87, 88, 89, 90, 91, 92, 30, 93, 94, 95, 8, 96, 97, 98, 99, 100, 101, 9, 102, 103, 104, 105, 107, 108, 109, 110, 0, 1, 2, 157, 158, 159, 160, 161, 163, 162, 164 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1811c() local_unnamed_addr {
dec_label_pc_1811c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1811c = load i32, i32* @r4, align 4
  store i32 %v3_1811c, i32* %stack_var_-12, align 4
  %v0_18120 = load i32, i32* @r0, align 4
  %v1_18120 = inttoptr i32 %v0_18120 to i16*
  %v2_18120 = load i16, i16* %v1_18120, align 2
  %v3_18120 = zext i16 %v2_18120 to i32
  store i32 %v3_18120, i32* %r3.global-to-local, align 4
  %v0_18124 = load i32, i32* @r1, align 4
  %v2_18124 = and i32 %v0_18124, %v3_18120
  %v4_18124 = icmp eq i32 %v2_18124, 0
  store i32 %v0_18120, i32* @r4, align 4
  br i1 %v4_18124, label %dec_label_pc_18134, label %dec_label_pc_18144

dec_label_pc_18134:                               ; preds = %dec_label_pc_1811c
  %v1_18134 = and i32 %v3_18120, 2176
  %v2_18134 = icmp eq i32 %v1_18134, 0
  br i1 %v2_18134, label %dec_label_pc_1813c, label %dec_label_pc_18150

dec_label_pc_1813c:                               ; preds = %dec_label_pc_18134
  %v2_1813c = or i32 %v0_18124, %v3_18120
  store i32 %v2_1813c, i32* %r3.global-to-local, align 4
  %v1_18140 = trunc i32 %v2_1813c to i16
  store i16 %v1_18140, i16* %v1_18120, align 2
  %v0_18144.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18144

dec_label_pc_18144:                               ; preds = %dec_label_pc_1811c, %dec_label_pc_1813c
  %v0_18144 = phi i32 [ %v0_18120, %dec_label_pc_1811c ], [ %v0_18144.pre, %dec_label_pc_1813c ]
  %v1_18144 = inttoptr i32 %v0_18144 to i16*
  %v2_18144 = load i16, i16* %v1_18144, align 2
  %v3_18144 = zext i16 %v2_18144 to i32
  store i32 %v3_18144, i32* %r3.global-to-local, align 4
  %v1_18148 = and i32 %v3_18144, 16
  store i32 %v1_18148, i32* %r5.global-to-local, align 4
  %v2_18148 = icmp eq i32 %v1_18148, 0
  br i1 %v2_18148, label %dec_label_pc_18170, label %dec_label_pc_18150

dec_label_pc_18150:                               ; preds = %dec_label_pc_18134, %dec_label_pc_18144
  %v0_18150 = call i32 @function_134dc()
  store i32 %v0_18150, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_18158 = inttoptr i32 %v0_18150 to i32*
  store i32 9, i32* %v2_18158, align 4
  br label %dec_label_pc_1815c

dec_label_pc_1815c:                               ; preds = %dec_label_pc_18178, %dec_label_pc_18150
  %v0_1815c = load i32, i32* @r4, align 4
  %v1_1815c = inttoptr i32 %v0_1815c to i16*
  %v2_1815c = load i16, i16* %v1_1815c, align 2
  %v3_1815c = zext i16 %v2_1815c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18164 = or i32 %v3_1815c, 8
  store i32 %v1_18164, i32* %r3.global-to-local, align 4
  %v1_18168 = trunc i32 %v1_18164 to i16
  store i16 %v1_18168, i16* %v1_1815c, align 2
  %v1_181b0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181a8

dec_label_pc_18170:                               ; preds = %dec_label_pc_18144
  %v1_18170 = and i32 %v3_18144, 64
  %v2_18170 = icmp eq i32 %v1_18170, 0
  br i1 %v2_18170, label %dec_label_pc_18198, label %dec_label_pc_18178

dec_label_pc_18178:                               ; preds = %dec_label_pc_18170
  %v0_18178 = load i32, i32* @r0, align 4
  %v1_18178 = call i32 @function_16d58(i32 %v0_18178)
  store i32 %v1_18178, i32* %r0.global-to-local, align 4
  %v2_1817c = icmp eq i32 %v1_18178, 0
  br i1 %v2_1817c, label %dec_label_pc_18184, label %dec_label_pc_1815c

dec_label_pc_18184:                               ; preds = %dec_label_pc_18178
  %v0_18184 = load i32, i32* @r4, align 4
  %v1_18184 = inttoptr i32 %v0_18184 to i16*
  %v2_18184 = load i16, i16* %v1_18184, align 2
  %v3_18184 = zext i16 %v2_18184 to i32
  store i32 %v3_18184, i32* %r3.global-to-local, align 4
  %v1_18188 = add i32 %v0_18184, 8
  %v2_18188 = inttoptr i32 %v1_18188 to i32*
  %v3_18188 = load i32, i32* %v2_18188, align 4
  %v1_1818c = and i32 %v3_18184, 65471
  store i32 %v1_1818c, i32* %r3.global-to-local, align 4
  %v2_18190 = add i32 %v0_18184, 28
  %v3_18190 = inttoptr i32 %v2_18190 to i32*
  store i32 %v3_18188, i32* %v3_18190, align 4
  %v0_18194 = load i32, i32* %r3.global-to-local, align 4
  %v1_18194 = trunc i32 %v0_18194 to i16
  %v2_18194 = load i32, i32* @r4, align 4
  %v3_18194 = inttoptr i32 %v2_18194 to i16*
  store i16 %v1_18194, i16* %v3_18194, align 2
  %v0_18198.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18198

dec_label_pc_18198:                               ; preds = %dec_label_pc_18170, %dec_label_pc_18184
  %v2_181a0 = phi i32 [ %v0_18144, %dec_label_pc_18170 ], [ %v0_18198.pre, %dec_label_pc_18184 ]
  %v1_18198 = inttoptr i32 %v2_181a0 to i16*
  %v2_18198 = load i16, i16* %v1_18198, align 2
  %v3_18198 = zext i16 %v2_18198 to i32
  %v1_1819c = or i32 %v3_18198, 1
  store i32 %v1_1819c, i32* %r3.global-to-local, align 4
  %v1_181a0 = trunc i32 %v1_1819c to i16
  store i16 %v1_181a0, i16* %v1_18198, align 2
  %v0_181a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_181a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181a8

dec_label_pc_181a8:                               ; preds = %dec_label_pc_1815c, %dec_label_pc_18198
  %v1_181b0 = phi i32 [ %v1_181b0.pre, %dec_label_pc_1815c ], [ %v0_181a4, %dec_label_pc_18198 ]
  %v2_181ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_181ac, i32* @r4, align 4
  ret i32 %v1_181b0

; uselistorder directives
  uselistorder i32 %v3_18120, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 28, { 23, 50, 7, 24, 25, 26, 39, 40, 21, 11, 22, 12, 13, 14, 15, 47, 48, 49, 8, 16, 0, 27, 1, 28, 2, 29, 3, 30, 4, 31, 5, 32, 6, 33, 17, 34, 18, 35, 19, 36, 9, 20, 38, 37, 41, 42, 43, 44, 45, 46, 10 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_16d58, { 2, 1, 0 }
  uselistorder i32 64, { 13, 14, 15, 16, 18, 9, 10, 11, 12, 48, 17, 2, 19, 20, 3, 21, 22, 23, 4, 24, 25, 26, 27, 5, 28, 29, 30, 6, 31, 32, 33, 7, 34, 35, 36, 0, 37, 38, 39, 40, 41, 8, 42, 43, 44, 45, 46, 1, 47 }
  uselistorder i32 8, { 113, 114, 115, 116, 117, 118, 119, 106, 107, 108, 109, 225, 120, 281, 45, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 121, 122, 123, 124, 125, 126, 127, 32, 128, 129, 130, 131, 132, 133, 134, 135, 136, 110, 111, 112, 173, 174, 175, 57, 299, 300, 92, 226, 227, 228, 229, 230, 231, 232, 233, 6, 93, 234, 235, 236, 237, 238, 239, 240, 241, 7, 210, 211, 212, 213, 214, 215, 216, 217, 242, 243, 244, 245, 246, 8, 247, 248, 9, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 259, 260, 261, 262, 94, 26, 263, 264, 265, 95, 96, 10, 267, 268, 269, 270, 272, 273, 97, 11, 274, 12, 271, 48, 49, 46, 47, 28, 29, 42, 43, 50, 301, 176, 177, 178, 179, 58, 101, 35, 13, 14, 24, 15, 100, 36, 16, 17, 25, 18, 59, 138, 139, 19, 20, 21, 140, 60, 137, 102, 44, 141, 142, 143, 27, 30, 145, 22, 61, 146, 62, 147, 63, 148, 64, 149, 65, 150, 66, 151, 67, 152, 68, 153, 69, 154, 70, 155, 71, 156, 72, 157, 73, 158, 74, 159, 75, 160, 76, 161, 77, 162, 78, 163, 79, 164, 80, 165, 81, 166, 82, 167, 83, 168, 84, 169, 85, 170, 86, 171, 172, 144, 87, 88, 89, 180, 99, 51, 181, 182, 183, 184, 185, 37, 186, 187, 188, 189, 3, 190, 191, 192, 4, 193, 194, 195, 196, 197, 198, 199, 5, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 52, 219, 53, 220, 54, 221, 90, 222, 98, 23, 223, 91, 224, 0, 1, 2, 33, 38, 39, 34, 40, 41, 275, 103, 104, 276, 277, 278, 55, 279, 31, 105, 56, 280 }
  uselistorder i32 9, { 6, 27, 22, 23, 53, 55, 7, 38, 4, 56, 8, 30, 31, 28, 9, 10, 29, 24, 32, 2, 25, 33, 26, 11, 34, 12, 35, 13, 36, 14, 37, 15, 16, 17, 18, 0, 19, 1, 20, 50, 39, 40, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 3, 54, 57, 58, 5, 59 }
  uselistorder i32 16, { 101, 102, 103, 95, 96, 97, 98, 104, 36, 37, 38, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 105, 106, 107, 108, 109, 2, 1, 29, 51, 52, 53, 54, 112, 55, 113, 110, 111, 56, 57, 114, 9, 58, 59, 115, 116, 60, 61, 117, 118, 99, 100, 62, 133, 134, 91, 92, 93, 94, 63, 64, 65, 66, 206, 207, 208, 209, 67, 211, 3, 68, 212, 213, 0, 214, 215, 69, 28, 135, 70, 136, 71, 72, 10, 26, 11, 12, 4, 13, 14, 15, 27, 16, 17, 5, 18, 19, 73, 121, 74, 122, 75, 123, 76, 119, 124, 120, 127, 128, 129, 39, 90, 77, 78, 20, 87, 21, 22, 79, 125, 126, 42, 41, 40, 130, 43, 131, 44, 80, 81, 132, 45, 191, 82, 137, 138, 139, 140, 30, 141, 142, 143, 144, 145, 146, 147, 31, 148, 149, 150, 83, 151, 84, 46, 152, 153, 32, 154, 155, 23, 156, 157, 6, 47, 158, 159, 160, 33, 161, 162, 163, 164, 165, 7, 48, 166, 167, 168, 88, 24, 89, 169, 34, 170, 171, 172, 25, 35, 173, 85, 174, 175, 8, 49, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 202, 204, 205, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 86, 226, 227, 228, 229, 50, 230, 231, 232, 233, 234 }
  uselistorder i32* @r1, { 14, 13, 53, 15, 16, 17, 18, 1, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 2, 104, 105, 19, 20, 21, 22, 0, 32, 33, 12, 23, 3, 55, 51, 52, 4, 56, 5, 28, 29, 11, 54, 45, 46, 7, 24, 34, 9, 57, 10, 58, 59, 60, 8, 61, 30, 25, 26, 27, 31, 47, 35, 36, 48, 49, 6, 37, 38, 39, 40, 41, 42, 43, 44, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder label %dec_label_pc_181a8, { 1, 0 }
  uselistorder label %dec_label_pc_18198, { 1, 0 }
  uselistorder label %dec_label_pc_18150, { 1, 0 }
  uselistorder label %dec_label_pc_18144, { 1, 0 }
}

define i32 @function_181b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_181b4:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_181b4 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_181c4 = call i32 @function_135e0()
  %v0_181c8 = load i32, i32* @r5, align 4
  %v1_181c8 = load i32, i32* @r4, align 4
  %v2_181c8 = add i32 %v1_181c8, %v0_181c8
  store i32 %v6_181b4, i32* @r5, align 4
  ret i32 %v2_181c8

; uselistorder directives
  uselistorder i32 ()* @function_135e0, { 7, 8, 6, 0, 3, 2, 5, 4, 1 }
  uselistorder i32* @r5, {}
  uselistorder i32* @r2, { 7, 11, 12, 41, 42, 13, 14, 15, 16, 17, 18, 23, 9, 10, 24, 43, 47, 48, 49, 50, 1, 53, 44, 2, 3, 28, 29, 4, 30, 5, 0, 51, 6, 52, 45, 46, 31, 32, 33, 22, 19, 20, 21, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 8 }
}

define i32 @function_181d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_181d8:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18218, label %dec_label_pc_18204

dec_label_pc_18204:                               ; preds = %dec_label_pc_181d8
  %v0_18204 = call i32 @function_134dc()
  %v0_18208 = load i32, i32* %r4.global-to-local, align 4
  %v1_18208 = sub i32 0, %v0_18208
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18210 = inttoptr i32 %v0_18204 to i32*
  store i32 %v1_18208, i32* %v2_18210, align 4
  %v0_18220.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18220

dec_label_pc_18218:                               ; preds = %dec_label_pc_181d8
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_18218 = icmp eq i32 %arg1, 0
  br i1 %v2_18218, label %dec_label_pc_1822c, label %dec_label_pc_18220

dec_label_pc_18220:                               ; preds = %dec_label_pc_18218, %dec_label_pc_18204
  %v0_18220 = phi i32 [ %arg1, %dec_label_pc_18218 ], [ %v0_18220.pre, %dec_label_pc_18204 ]
  br label %dec_label_pc_18230

dec_label_pc_1822c:                               ; preds = %dec_label_pc_18218
  br label %dec_label_pc_18230

dec_label_pc_18230:                               ; preds = %dec_label_pc_18220, %dec_label_pc_1822c
  %v1_18238 = phi i32 [ %v0_18220, %dec_label_pc_18220 ], [ %tmp8, %dec_label_pc_1822c ]
  ret i32 %v1_18238

; uselistorder directives
  uselistorder i32 -1, { 298, 304, 189, 299, 300, 301, 127, 302, 128, 303, 97, 98, 99, 100, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 190, 191, 0, 192, 165, 305, 306, 193, 129, 307, 194, 1, 101, 308, 309, 170, 310, 195, 3, 2, 196, 197, 130, 382, 131, 132, 340, 133, 341, 118, 342, 328, 329, 330, 134, 297, 135, 343, 344, 4, 198, 199, 200, 345, 201, 5, 202, 6, 203, 171, 346, 10, 204, 205, 9, 11, 347, 8, 206, 207, 102, 7, 208, 103, 104, 105, 106, 209, 210, 211, 114, 313, 314, 12, 315, 136, 348, 137, 138, 338, 139, 349, 140, 337, 141, 350, 142, 327, 143, 144, 316, 145, 351, 146, 336, 147, 317, 117, 188, 13, 332, 212, 148, 352, 149, 384, 150, 318, 151, 319, 152, 320, 153, 331, 154, 386, 155, 353, 156, 383, 157, 334, 158, 333, 159, 354, 160, 161, 162, 385, 213, 214, 215, 216, 14, 15, 112, 115, 16, 17, 355, 116, 113, 167, 169, 217, 20, 218, 21, 219, 321, 220, 221, 107, 22, 222, 223, 224, 225, 226, 227, 228, 19, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 311, 163, 312, 23, 249, 250, 121, 122, 119, 120, 18, 251, 252, 253, 24, 254, 125, 126, 123, 124, 255, 25, 256, 164, 322, 108, 26, 27, 187, 186, 30, 173, 323, 172, 324, 29, 174, 325, 28, 31, 32, 175, 326, 33, 34, 35, 36, 37, 257, 38, 109, 39, 40, 42, 258, 166, 41, 110, 43, 44, 45, 46, 47, 48, 49, 259, 50, 176, 335, 51, 52, 260, 53, 54, 55, 56, 261, 57, 262, 58, 59, 60, 263, 61, 62, 264, 63, 64, 65, 66, 67, 265, 68, 69, 70, 266, 71, 72, 111, 267, 268, 339, 356, 357, 183, 358, 269, 75, 270, 76, 271, 77, 272, 182, 359, 181, 360, 95, 273, 78, 274, 79, 275, 178, 361, 184, 362, 276, 80, 277, 81, 278, 82, 279, 83, 280, 84, 281, 85, 282, 86, 283, 87, 284, 88, 285, 89, 286, 90, 287, 180, 363, 92, 288, 93, 289, 91, 290, 94, 291, 177, 364, 292, 96, 293, 294, 73, 295, 74, 296, 179, 365, 168, 185, 366 }
  uselistorder i32 ()* @function_134dc, { 62, 58, 61, 60, 59, 64, 57, 56, 6, 5, 28, 24, 23, 40, 39, 63, 22, 21, 20, 27, 17, 19, 18, 53, 52, 16, 15, 29, 14, 30, 13, 41, 12, 51, 11, 31, 50, 55, 54, 38, 36, 35, 34, 10, 3, 49, 48, 47, 37, 1, 9, 4, 32, 33, 8, 26, 46, 2, 45, 44, 43, 42, 25, 7, 0 }
  uselistorder i32 1, { 312, 311, 815, 640, 392, 393, 394, 641, 180, 816, 817, 818, 642, 36, 38, 37, 39, 34, 41, 35, 40, 643, 102, 101, 103, 644, 16, 17, 14, 20, 18, 15, 19, 645, 308, 99, 98, 429, 461, 430, 1046, 1047, 1048, 1049, 445, 404, 647, 646, 395, 396, 819, 648, 434, 1168, 435, 820, 1169, 821, 822, 823, 825, 824, 420, 649, 827, 826, 948, 949, 1170, 436, 1171, 1172, 1173, 1174, 1175, 1176, 811, 1177, 1178, 1179, 1180, 1181, 1182, 812, 633, 651, 650, 382, 383, 388, 390, 389, 384, 381, 385, 387, 386, 831, 828, 829, 830, 459, 437, 31, 29, 30, 33, 32, 500, 832, 833, 834, 835, 652, 634, 12, 13, 836, 655, 654, 653, 286, 289, 287, 290, 291, 292, 288, 501, 837, 657, 656, 356, 359, 357, 354, 355, 358, 838, 658, 197, 196, 195, 839, 840, 659, 285, 284, 660, 93, 502, 814, 293, 294, 841, 842, 843, 844, 845, 846, 847, 848, 438, 663, 662, 661, 343, 342, 347, 345, 344, 346, 849, 850, 851, 665, 664, 51, 52, 503, 852, 666, 208, 853, 854, 855, 856, 857, 504, 667, 73, 77, 75, 74, 76, 505, 78, 398, 668, 318, 317, 104, 669, 90, 670, 173, 172, 671, 80, 85, 79, 84, 88, 87, 83, 86, 81, 82, 672, 130, 129, 127, 126, 128, 124, 125, 673, 56, 57, 64, 65, 61, 62, 60, 63, 58, 59, 674, 166, 167, 391, 950, 248, 251, 249, 250, 675, 307, 306, 676, 295, 677, 280, 281, 1183, 506, 1184, 507, 1185, 678, 136, 131, 137, 135, 133, 138, 132, 139, 134, 319, 508, 271, 270, 679, 402, 403, 176, 423, 858, 859, 860, 680, 1051, 683, 682, 681, 255, 684, 1186, 446, 509, 686, 685, 687, 89, 1052, 1055, 1056, 1057, 688, 360, 365, 366, 364, 363, 367, 361, 362, 1058, 1059, 1060, 1061, 689, 372, 378, 371, 377, 376, 370, 380, 379, 374, 368, 373, 369, 375, 1053, 1054, 510, 96, 95, 94, 97, 1030, 511, 1031, 1032, 1033, 1034, 1035, 690, 8, 9, 7, 10, 54, 53, 1062, 1063, 1064, 1065, 1066, 1067, 468, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 513, 1076, 1077, 1078, 1079, 1080, 512, 1081, 1082, 1083, 1084, 1085, 691, 407, 409, 405, 408, 413, 415, 412, 414, 416, 410, 411, 406, 165, 164, 514, 515, 894, 427, 695, 694, 693, 692, 219, 11, 439, 181, 696, 277, 276, 183, 697, 221, 698, 273, 699, 269, 700, 179, 701, 185, 184, 182, 702, 332, 331, 703, 108, 704, 254, 253, 705, 168, 706, 1020, 1021, 282, 283, 861, 862, 863, 864, 865, 866, 867, 1187, 256, 257, 258, 259, 707, 951, 516, 24, 25, 868, 708, 252, 517, 709, 218, 469, 518, 710, 266, 264, 265, 711, 28, 27, 26, 712, 335, 334, 713, 296, 714, 186, 715, 171, 170, 716, 279, 278, 178, 177, 717, 207, 206, 718, 310, 309, 719, 275, 720, 330, 329, 721, 268, 267, 333, 722, 348, 220, 723, 724, 66, 1086, 417, 1087, 418, 1088, 397, 1089, 1090, 1091, 1092, 422, 1093, 726, 725, 43, 50, 48, 46, 47, 44, 45, 49, 419, 431, 1094, 1095, 1096, 1097, 23, 22, 0, 1098, 1099, 1100, 1101, 1102, 440, 1103, 441, 1104, 728, 727, 400, 399, 401, 952, 953, 954, 729, 162, 161, 159, 160, 1105, 1106, 1107, 432, 447, 1, 421, 499, 1108, 121, 120, 122, 123, 1109, 1110, 1111, 519, 1112, 55, 1036, 100, 1114, 1113, 1115, 42, 1116, 169, 1117, 730, 263, 262, 261, 260, 1118, 731, 316, 315, 314, 313, 520, 887, 521, 888, 472, 889, 448, 532, 890, 895, 471, 896, 874, 533, 534, 875, 870, 523, 869, 871, 872, 873, 526, 524, 428, 876, 525, 877, 878, 527, 879, 880, 530, 881, 882, 528, 883, 884, 529, 885, 886, 531, 891, 897, 898, 899, 535, 900, 901, 902, 536, 903, 813, 906, 905, 522, 904, 907, 908, 537, 909, 910, 911, 538, 912, 539, 913, 540, 914, 541, 915, 542, 916, 543, 917, 544, 918, 545, 919, 546, 920, 547, 921, 548, 922, 549, 923, 550, 924, 551, 925, 552, 926, 553, 927, 554, 928, 555, 929, 556, 930, 937, 938, 424, 557, 635, 742, 741, 740, 739, 738, 737, 736, 636, 735, 734, 733, 732, 152, 149, 150, 155, 156, 151, 153, 154, 158, 157, 931, 932, 558, 933, 934, 559, 935, 936, 144, 143, 142, 148, 145, 146, 147, 141, 140, 560, 561, 744, 743, 351, 352, 349, 350, 353, 1022, 746, 745, 339, 340, 338, 337, 336, 341, 892, 893, 163, 564, 473, 939, 940, 474, 941, 562, 563, 565, 942, 943, 566, 567, 568, 569, 570, 571, 572, 759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 639, 749, 748, 747, 116, 118, 119, 117, 573, 425, 574, 760, 577, 576, 575, 944, 762, 761, 187, 188, 578, 579, 580, 581, 582, 583, 945, 946, 584, 460, 585, 947, 426, 586, 766, 765, 764, 763, 92, 91, 955, 961, 3, 449, 956, 587, 957, 2, 958, 462, 959, 450, 451, 960, 962, 963, 463, 964, 637, 770, 769, 638, 768, 767, 272, 1023, 475, 476, 1024, 4, 5, 6, 965, 966, 967, 433, 464, 465, 968, 969, 970, 971, 972, 589, 973, 588, 974, 590, 975, 976, 977, 774, 773, 772, 771, 322, 321, 324, 327, 325, 326, 320, 323, 328, 978, 979, 980, 591, 592, 776, 775, 191, 193, 194, 190, 192, 981, 982, 593, 983, 984, 985, 986, 594, 987, 595, 478, 477, 596, 988, 777, 69, 70, 72, 71, 67, 68, 989, 597, 990, 481, 479, 480, 779, 778, 174, 175, 991, 992, 993, 598, 994, 599, 600, 995, 482, 996, 780, 199, 202, 203, 205, 204, 198, 201, 200, 997, 998, 999, 601, 1000, 602, 484, 483, 603, 1001, 604, 1002, 781, 223, 227, 228, 226, 230, 224, 229, 222, 225, 1003, 1004, 1005, 1006, 1007, 1008, 605, 1009, 606, 1010, 607, 489, 488, 608, 1011, 485, 1012, 486, 1013, 487, 1014, 787, 786, 785, 784, 783, 782, 109, 112, 113, 115, 114, 110, 111, 1015, 1016, 1017, 609, 492, 491, 610, 1018, 490, 1019, 788, 300, 301, 303, 304, 299, 302, 297, 298, 1025, 1026, 1027, 611, 495, 494, 612, 1028, 493, 1029, 793, 792, 791, 790, 789, 210, 214, 215, 217, 216, 209, 213, 212, 211, 1037, 496, 613, 794, 105, 106, 107, 1038, 1039, 452, 614, 1042, 615, 616, 1043, 1040, 1041, 1044, 1045, 244, 245, 243, 246, 242, 247, 1119, 795, 305, 1050, 274, 1120, 21, 1121, 622, 1122, 1123, 620, 1124, 621, 1125, 1126, 625, 1127, 1128, 467, 623, 1129, 624, 1130, 1131, 498, 1132, 1133, 455, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 443, 1141, 626, 1142, 627, 628, 1143, 1144, 1145, 1146, 456, 1147, 1148, 457, 1149, 1150, 458, 1151, 444, 454, 453, 1152, 1153, 619, 1154, 1155, 617, 1156, 442, 618, 497, 1157, 1159, 1160, 1158, 629, 1161, 630, 1162, 631, 1163, 1164, 810, 470, 1165, 1166, 466, 632, 1167, 807, 806, 805, 804, 803, 802, 801, 800, 799, 798, 797, 796, 231, 232, 234, 241, 240, 235, 236, 239, 233, 237, 238, 808, 809, 189 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_18230, { 1, 0 }
}

define i32 @function_1823c() local_unnamed_addr {
entry:
  %v3_18240 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_18240)
  %v31_18248 = load i32, i32* @r0, align 4
  ret i32 %v31_18248

; uselistorder directives
  uselistorder i32* @r0, { 30, 26, 10, 56, 55, 200, 25, 4, 5, 275, 6, 22, 7, 57, 0, 58, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 1, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 59, 27, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 24, 11, 160, 161, 29, 12, 28, 302, 304, 305, 45, 46, 47, 48, 49, 50, 51, 52, 13, 21, 74, 75, 303, 76, 208, 18, 43, 44, 209, 2, 210, 211, 212, 207, 192, 40, 193, 194, 195, 41, 196, 197, 14, 220, 221, 213, 214, 215, 216, 217, 218, 219, 81, 82, 16, 83, 8, 23, 162, 163, 164, 165, 198, 17, 15, 19, 222, 20, 223, 224, 225, 226, 227, 228, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 79, 144, 32, 77, 78, 80, 145, 147, 148, 149, 150, 151, 152, 146, 33, 34, 35, 36, 153, 37, 38, 154, 155, 9, 156, 157, 158, 159, 39, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 188, 189, 3, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 199, 42, 201, 202, 203, 204, 229, 205, 230, 206, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 31 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 59, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 64, 65, 66, 67, 60, 48, 61, 62, 63, 68, 69, 70, 49, 50, 51, 44, 45, 46, 52, 56, 57, 53, 54, 55, 71, 38, 39, 40, 41, 42, 43, 47, 58 }
  uselistorder i32 0, { 561, 562, 571, 572, 573, 574, 575, 87, 576, 577, 578, 0, 579, 267, 46, 580, 313, 581, 582, 583, 297, 298, 563, 564, 569, 1, 88, 89, 936, 937, 938, 939, 121, 122, 940, 584, 123, 90, 1161, 1162, 1163, 268, 585, 586, 587, 269, 1164, 47, 270, 1165, 1166, 68, 38, 39, 588, 55, 2, 80, 81, 757, 56, 57, 58, 758, 759, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1172, 1173, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 29, 1192, 1193, 1194, 1195, 1196, 30, 1197, 1198, 1199, 31, 1200, 1201, 1202, 32, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1227, 1228, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 33, 1246, 1247, 1248, 1249, 1250, 34, 1251, 1252, 1253, 1254, 1255, 35, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 124, 589, 530, 590, 591, 592, 593, 594, 314, 315, 595, 596, 91, 92, 93, 597, 598, 602, 599, 600, 601, 271, 285, 603, 604, 94, 125, 607, 605, 606, 272, 608, 95, 609, 610, 3, 4, 96, 611, 555, 556, 316, 557, 612, 613, 614, 48, 49, 615, 616, 617, 126, 618, 619, 620, 621, 622, 317, 623, 624, 625, 626, 627, 628, 97, 629, 630, 631, 632, 5, 6, 127, 129, 633, 128, 634, 130, 635, 98, 636, 641, 642, 637, 638, 639, 644, 645, 646, 131, 647, 648, 649, 650, 651, 640, 643, 652, 99, 565, 566, 567, 1271, 1272, 914, 949, 950, 570, 760, 761, 299, 762, 318, 558, 319, 559, 951, 952, 953, 132, 954, 763, 764, 765, 560, 568, 100, 133, 1273, 1274, 955, 956, 320, 1278, 1279, 321, 1280, 1281, 134, 274, 1282, 1283, 322, 50, 1284, 1285, 323, 1292, 1293, 1296, 511, 273, 1297, 324, 1294, 1295, 1275, 1276, 531, 135, 255, 653, 655, 654, 136, 656, 657, 658, 325, 659, 82, 957, 73, 958, 138, 137, 959, 101, 1277, 102, 327, 328, 1287, 326, 103, 529, 104, 139, 965, 966, 967, 968, 969, 140, 970, 971, 972, 973, 974, 975, 976, 141, 960, 329, 961, 962, 330, 963, 964, 105, 915, 331, 142, 916, 917, 918, 919, 920, 106, 150, 143, 149, 148, 147, 144, 145, 152, 151, 146, 977, 978, 1002, 1003, 107, 979, 980, 156, 154, 155, 981, 982, 162, 161, 118, 153, 983, 984, 985, 986, 987, 988, 289, 288, 300, 332, 989, 990, 991, 51, 992, 158, 157, 159, 160, 117, 993, 994, 275, 995, 996, 83, 997, 998, 999, 1000, 1001, 7, 8, 683, 684, 52, 108, 9, 301, 333, 1004, 1005, 898, 1006, 871, 1007, 750, 1008, 685, 1009, 831, 686, 941, 1298, 1299, 59, 109, 766, 767, 768, 163, 660, 661, 164, 769, 774, 775, 776, 777, 165, 302, 166, 290, 291, 334, 770, 167, 771, 772, 110, 778, 1010, 1288, 687, 688, 689, 773, 1291, 1011, 1286, 798, 779, 1012, 921, 690, 335, 1289, 76, 1290, 10, 1013, 1014, 1015, 1016, 77, 1017, 168, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 169, 512, 532, 513, 514, 1025, 1026, 1027, 1028, 1029, 1030, 11, 1031, 1032, 78, 1033, 1034, 1035, 1036, 1037, 170, 1038, 515, 533, 516, 517, 1039, 534, 119, 171, 1040, 1041, 1042, 74, 286, 1043, 1044, 40, 111, 535, 276, 13, 12, 172, 1045, 173, 536, 14, 277, 174, 175, 176, 41, 177, 336, 691, 780, 781, 782, 1047, 1046, 1048, 1049, 1050, 1051, 36, 178, 1052, 1053, 1054, 179, 69, 70, 337, 311, 312, 1055, 181, 180, 182, 1056, 183, 1057, 1058, 184, 922, 923, 338, 185, 186, 187, 1059, 188, 1060, 189, 190, 692, 191, 693, 694, 695, 699, 666, 674, 675, 677, 662, 71, 42, 258, 259, 663, 676, 664, 537, 665, 667, 538, 668, 539, 669, 540, 670, 541, 671, 542, 672, 543, 673, 678, 679, 339, 680, 79, 696, 510, 697, 340, 698, 279, 278, 700, 701, 702, 703, 193, 192, 704, 705, 706, 544, 256, 707, 62, 63, 257, 708, 60, 61, 341, 710, 711, 518, 712, 713, 714, 715, 716, 342, 717, 718, 719, 120, 528, 720, 721, 722, 527, 723, 724, 343, 725, 726, 729, 730, 731, 194, 727, 195, 728, 16, 15, 196, 709, 899, 900, 681, 682, 732, 344, 733, 735, 197, 736, 737, 738, 739, 740, 741, 742, 199, 198, 743, 345, 744, 346, 745, 347, 734, 746, 292, 747, 348, 748, 378, 379, 349, 749, 350, 752, 545, 202, 201, 200, 281, 351, 751, 280, 753, 754, 755, 43, 756, 203, 352, 75, 783, 784, 785, 786, 284, 787, 788, 789, 283, 790, 791, 792, 793, 204, 794, 796, 795, 112, 113, 205, 282, 207, 206, 797, 208, 209, 53, 210, 799, 800, 84, 85, 54, 801, 211, 212, 260, 802, 214, 803, 215, 213, 353, 804, 805, 807, 806, 808, 216, 809, 810, 303, 811, 812, 813, 217, 218, 814, 219, 815, 220, 816, 221, 817, 818, 72, 819, 820, 222, 821, 822, 823, 223, 825, 224, 261, 826, 824, 827, 828, 829, 225, 830, 832, 227, 834, 835, 226, 833, 836, 114, 355, 356, 837, 838, 357, 358, 839, 354, 840, 841, 228, 842, 843, 229, 230, 844, 845, 115, 846, 847, 17, 18, 19, 20, 848, 849, 231, 305, 850, 851, 359, 852, 360, 853, 361, 854, 362, 855, 363, 856, 364, 857, 304, 858, 365, 859, 860, 861, 232, 863, 864, 233, 262, 865, 862, 866, 867, 868, 21, 22, 23, 869, 234, 870, 872, 873, 44, 874, 235, 875, 876, 236, 263, 878, 877, 366, 879, 881, 882, 883, 367, 884, 24, 25, 26, 880, 27, 28, 885, 237, 886, 887, 238, 890, 891, 892, 264, 893, 888, 889, 895, 894, 896, 239, 897, 901, 902, 240, 904, 905, 906, 241, 368, 908, 907, 903, 910, 911, 909, 912, 242, 913, 293, 924, 369, 925, 45, 926, 86, 927, 928, 929, 294, 930, 370, 931, 932, 933, 37, 287, 934, 935, 1061, 243, 1062, 942, 244, 943, 245, 1063, 944, 945, 946, 947, 1064, 948, 1065, 1066, 1067, 1068, 246, 247, 371, 1069, 1070, 519, 520, 521, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 546, 1084, 1085, 1086, 1087, 1088, 376, 1089, 1090, 547, 1091, 1092, 1093, 522, 1094, 523, 248, 249, 250, 1095, 1096, 1097, 1098, 548, 1099, 1100, 116, 1101, 1102, 549, 1103, 251, 1104, 1105, 1106, 550, 372, 373, 1107, 1108, 551, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 374, 1123, 1118, 1119, 1120, 1121, 552, 1122, 553, 1124, 375, 1125, 1126, 1127, 1128, 1129, 1130, 524, 1132, 1133, 1134, 1135, 1136, 295, 1137, 1140, 1141, 1138, 1139, 253, 252, 1142, 1143, 1144, 1145, 254, 1146, 1147, 265, 1148, 64, 65, 266, 1149, 66, 67, 377, 1150, 1131, 1151, 508, 509, 525, 296, 1152, 526, 1153, 1154, 1155, 1156, 1157, 306, 1158, 307, 1159, 308, 1160, 309, 554, 310, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314 }
  uselistorder i32* @r4, { 44, 57, 58, 59, 7, 60, 61, 62, 8, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 50, 51, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 817, 818, 82, 83, 9, 1, 84, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 10, 85, 86, 87, 88, 89, 90, 91, 92, 93, 11, 94, 95, 98, 99, 100, 101, 45, 102, 103, 104, 105, 106, 107, 96, 97, 46, 47, 108, 109, 12, 110, 13, 111, 14, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 15, 132, 133, 134, 16, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 53, 54, 55, 56, 48, 49, 655, 656, 326, 327, 835, 836, 837, 657, 658, 840, 845, 846, 847, 848, 849, 850, 851, 838, 147, 148, 149, 659, 660, 661, 839, 841, 844, 150, 151, 152, 153, 662, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 17, 679, 680, 681, 682, 663, 664, 665, 666, 590, 591, 592, 593, 594, 595, 596, 597, 598, 18, 599, 600, 601, 602, 603, 604, 605, 606, 607, 683, 705, 706, 707, 708, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 36, 697, 698, 0, 699, 700, 701, 702, 703, 704, 183, 184, 185, 842, 843, 561, 562, 510, 511, 328, 329, 330, 331, 332, 333, 334, 154, 155, 156, 335, 336, 337, 6, 338, 339, 340, 341, 342, 343, 344, 709, 710, 711, 2, 712, 345, 346, 713, 714, 19, 715, 716, 717, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 718, 719, 720, 721, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 216, 217, 218, 219, 179, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 180, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 283, 284, 3, 285, 276, 277, 278, 279, 280, 281, 234, 235, 563, 564, 565, 566, 567, 181, 182, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 35, 319, 318, 34, 320, 321, 322, 323, 324, 4, 325, 347, 20, 5, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 373, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 21, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 22, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 23, 445, 24, 446, 25, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 26, 473, 27, 474, 28, 475, 29, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 30, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 568, 569, 570, 571, 31, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 646, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 722, 723, 724, 654, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 32, 756, 37, 757, 758, 42, 759, 761, 762, 763, 41, 760, 33, 764, 765, 766, 767, 768, 769, 770, 40, 771, 772, 773, 39, 774, 775, 776, 38, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 43, 816 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #0

attributes #0 = { nounwind readnone }
